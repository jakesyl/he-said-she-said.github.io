--- Log opened Wed Feb 27 00:00:04 2013
--- Day changed Wed Feb 27 2013
00:00 < cloudbender> looks like there was a substantial effort there.
00:00 < sorensen> cloudbender: underscore has been around for a while now
00:00 < sorensen> its a great lib
00:01 < cloudbender> I love the no - 'bs' - web page.  Very elegant reference.
00:03 < cloudbender> debounce cool
00:03 < cloudbender> There are frames in the web page.  I thought frames were a bad thing.
00:04 < cloudbender> or maybe it's just a scrollable div
00:04 < patrickm> anyone got any good ideas on this? http://stackoverflow.com/questions/15101817/capturing-console-output-in-node-js-with-out-editing-server-code
00:04 < patrickm> thanks
00:05 < cloudbender> That's how I would write my web page
00:05 < cloudbender> (_underscore.js)
00:05 < Zak_> what... don't extend base classes!!!
00:05 < Zak_> (if thats what you are duing)
00:05 < cloudbender> nope
00:06 < Zak_> cloudbender: there's lodash
00:06 < Zak_> i think that's what its called anyway
00:06 < Zak_> https://github.com/bestiejs/lodash
00:06 < Zak_> "Custom builds make it easy to create lightweight versions of Lo-Dash containing only the methods you need. To top it off, we handle all method dependency and alias mapping for you."
00:06 < cloudbender> extending base objects punches holes un the cosmic fabric.
00:06 < cloudbender> *in
00:06 < Zak_> the only time you should extend base classes is if you are using shim
00:06 < Zak_> e.g. es5-shim
00:07 < cloudbender> I have no need to extend base classes.
00:07 < Zak_> also, if you structure your code properly, there's no problem with long term dependencies
00:07 < Zak_> the only exception to this is, if you use a particular pattern for structure
00:07 < cloudbender> yeah, and I can always freeze my dev for the app
00:08 < Zak_> e.g. dojo's "declare" system
00:08 < Zak_> i've got so many modules in my projects, broken into nice sections.. if we wanted to move to another library, we could do it
00:08 < shesek> patrickm, can't you just pipe the output to another script?
00:09 < shesek> node server.js | node send-logs-to-somewhere.js
00:09 < elliottcable> Zak_ ⑊ Why not “extend base classes?”
00:09 < patrickm> :)
00:09 < patrickm> thats easy
00:09 < elliottcable> That's simple FUD. There's a plethora of sane, clean ways around the issues with that approach; and avoiding doing so is giving up on a *huge* percentage of JavaScript's expressiveness and power.
00:09 < Zak_> elliottcable: lots of reasons... there's no promise that you won't collide with other libraries
00:09 < cloudbender> I'll be having my app send it's logs by e-mail
00:10 < Zak_> elliottcable: also, it may not be efficient
00:10 < patrickm> can I stream of that file
00:10 < shesek> patrickm, in send-logs-to-somewhere.js, you can just read from process.stdin
00:10 < elliottcable> ... lolwat
00:10 < sorensen> Zak_: which is true even with assigning things to the window
00:10 < Zak_> elliottcable: also, it's also often unclear how to structure your dependencies
00:10 < Zak_> sorensen: right, which is why you try and limit it as much as possible
00:10 < sorensen> its mainly preference and architecture patterns
00:10 < patrickm> cool cool thank you!
00:10 < sorensen> theres no super obvious reason not to
00:11 < sorensen> JS doesnt care
00:11 < patrickm> shesek +1
00:11 < sorensen> its other developers that you are worried about colliding with
00:11 < Zak_> what does that even mena.. "JS doesn't care"
00:11 < cloudbender> I design my own classes (objects) which CONTAIN native objects, but do not derive from them.
00:11 < sorensen> it means what it means
00:11 < Zak_> JS doesn't throw syntax errors?
00:11 < cloudbender> Why tempt fate says me
00:11 < sorensen> JS doesnt stop you from extending native objects nor does it care
00:11 < sorensen> its other devs that care
00:12 < Zak_> cloudbender: nothing wrong with using native objects. Obviously using capability detection libraries helps with that (e.g. HTML5)
00:12 < elliottcable> Encapsulation is fine and all, but it's not always the best approach.
00:12 < bradleymeck> im always worried someone touches something then that being overriden because someone else also extended it now both sides are F'ed
00:12 < elliottcable> and you can do just fine with not affecting other developers.
00:12 < cloudbender> keeps me out of the weeds
00:12 < bradleymeck> encapsulation, CS101
00:12 < holzp> I never did Encapsulation in CS101
00:12 < sorensen> i'm really not advocating it, dont get me wrong
00:13 < elliottcable> Bobble = require('vm').runInNewContext('Function')
00:13 < holzp> Software Engineering 101 perhaps
00:13 < elliottcable> Mmmm, I need to write a blog post on this, or something.
00:13 < Zak_> just don't extend bases classes.. if you've looked into it and you have good reason to... then do it
00:13 < elliottcable> Parallel inimino's on ASI, for global prototype extension.
00:13 < Zak_> but that's the accepted advice
00:13 < cloudbender> bobble = { func: require('vm').run...()}
00:14 < elliottcable> Zak_ ⑊ Yes. It's accepted advice, just like “put a semicolon after EVERY SINGLE LINE OF COEDD OMGOMGOMGOM”
00:14 < bradleymeck> elliotcable if you want to encapsulate using an entire new global context, sure, just dont touch my interfaces and expect me to not go away from fear of collision
00:14 < elliottcable> Zak_ ⑊ accepted ≠ appropriate, accepted ≠ correct.
00:14 < holzp> extending base classes is considered baf form, but permissible in the language
00:14 < holzp> baf form == bad form, very baf form
00:14 < azylman> elliottcable: accepted = appropriate and correct most of the time
00:14 < elliottcable> Nope.
00:14 < azylman> Obviously there are exceptions
00:14 < bradleymeck> its considered dangerous from a security aspect if it could possibly introduce collisions / new edge cases
00:14 < elliottcable> Again, cf. semicolon FUD.
00:15 < Zak_> elliottcable: we don't need to get technical on the english language. We all know what i meant.. for the advanced JS developers they know when its appropriate
00:15 < bradleymeck> security > style
00:15 < elliottcable> bradleymeck ⑊ not saying that's the only approach, at all.
00:15 < Zak_> sure
00:15 < elliottcable> Zak_ ⑊ Yes, but my point is that you're spreading FUD.
00:15 < elliottcable> Zak_ ⑊ We all agree that an experienced developer can choose for himself;
00:16 < elliottcable> Zak_ ⑊ What I care about is what we're teaching those new to the language / environment.
00:16 < sorensen> this conversation took an interesting turn
00:16 < bradleymeck> i do fear it and i know what it does.
00:16 < elliottcable> mmmm, not an argument I meant to get into. Just always pisses me off when people spread that particular piece of ancient misinformation.
00:16 < Zak_> elliottcable: new JS developers should be fearful of extending bases classes
00:16 < elliottcable> That's nearly as bad as “writing without semicolons is a performance hit.”
00:16 < Zak_> and its not misinformation
00:16  * elliottcable walks off amicably
00:16 < bradleymeck> if you extend classes i will avoid it like hell, it is an attack vector
00:17 < CoverSlide> If you extend base classes you need to prefix it with your organization name in all capital letters
00:17 < holzp> I just don't want to spend 4 hours debugging my toString because somewhere up the line someone thought it was a good idea to have toString spit put the Klingon representation of the string
00:17 < holzp> thats all
00:17 < sorensen> lol
00:17 < cloudbender> I really do feel you both gave me great advice, and it's free, so there's no beefs here at all.
00:17 < sorensen> holzp: thats replacing baseclasses more than extending
00:17 < CoverSlide> Array.prototype.LOLWIDGETSINC_MUCH_BETTER_SORY
00:18 < sorensen> you should know the pro's and con's before messing with base classes, but its not that difficult of a concept
00:18  * bradleymeck wishes Object.seal / freeze did not deopt :(
00:18 < Zak_> people just need to understand that you'll often say things which aren't 100% correct when advising people
00:18 < elliottcable> bradleymeck ⑊ deopt?
00:18 < bradleymeck> elliottcable: deoptimize
00:18  * CoverSlide hits Object.seal with a club
00:18 < Zak_> like when you learn maths... you get taught things in steps
00:19 < Zak_> for example, you don't get told about imaginery numbers when you learn about square root functions
00:19 < cloudbender> And if you want to talk about bad form, try wearing your wife's pannies one day when you have a big meeting and all yer skivvies are in the wash, and there is simply no time for another option ...  Not that I ever did that.
00:19 < Zak_> anyway... we all agree when we should and shouldn't use it
00:20 < Zak_> i wasn't trying to make a blacket statement, i just freaked out when i saw that code :P
00:20 < sorensen> i think this is mostly getting off topic
00:20 < sorensen> Zak_: you didnt try, you did
00:20 < sorensen> do or do not, there is no try
00:20 < Zak_> is anybody an op in ##javascript?
00:20 < Zak_> some reason I just discovered that i'm banned.. and i have nfi why. I haven't even spoken in that channel for weeks
00:21 < sorensen> i try to stay away from that chan
00:21 < sorensen> gets off topic more often than not
00:21 < Zak> i'd just like to know why.
00:21 < Guest79880> i wasn't even warned
00:21 < Guest79880> anyway, i'll sort it out. thanks
00:25 < supersym> ahhhh.... ding,I finally get (JS) geometry/drawing
00:25 < supersym> good old euclid :P
00:29 < CoverSlide> The area under a stair is known as a spandrel
00:31 < elliottcable> CoverSlide is Harry Potter. I KNEW IT.
00:32 < CoverSlide> The pitch line of a stair is a factor of its run and rise.
00:47 < cloudbender> darned if hex B C and D don't align nicely with Balance, Credit, Debit
00:48 < cloudbender> A for acquire, and E for expend
00:49 < cloudbender> hmmmm nope.
00:50 < CoverSlide> What's F for?
00:51 < cloudbender> that's reserved for when the IRS phones
00:51 < cloudbender> it's speshul
00:55 < styol> Any recommended strategies for new Error() objects in relation to setting appropriate HTTP codes in the header or is that something one just handles at the callback when receiving an error of a certain string?
01:03 < npdemers> Hey all. node.js newbie here. Got some questions about Drupal node.js integration
01:04  * CoverSlide sighs
01:06 < sorensen> npdemers: what are you trying to do
01:06 < supersym> zomg
01:06 < fruitFly> where should I put a folder for my projects? does it need to be in the node folder? Is this install method good http://www.w3resource.com/node.js/installing-node.js-windows-and-linux.php ..... I think I installed correctly using this method; I can check the version and enter the repl
01:06 < fruitFly> ???
01:07 < CoverSlide> fruitFly: put your projects wherever you want
01:07 < sorensen> fruitFly: put them anywhere you want
01:07 < sorensen> lol
01:07 < CoverSlide> fruitFly: just have node in your PATH
01:07 < sorensen> beat me to it
01:08 < npdemers> sorensen: basically I'm setting up an auction site that has to update in real time. First tried that with Ajax refreshes, but that bogged the server way down
01:08 < fruitFly> CoverSlide: sorensen How do I put in my path on linux? or is it already?... check the install method I used... was really simple... I did it with the source file... I hope I did everything right
01:08 < npdemers> Now I'm doing it with node.js. Right now, just a few simple test with what came in the node.js integration module, and I'm stuck
01:09 < sorensen> well, you can go one of two ways
01:09 < sorensen> or many really
01:09 < sorensen> you can have the node service make direct requests to drupal
01:09 < sorensen> you can put in hooks in drupal to post in data to the node server
01:09 < groundwater> styol: 500 error?
01:09 < sorensen> you can replicate the mysql database and have node hit mysql directly to be faster
01:09 < sorensen> it depends what you are trying to do really
01:10 < sorensen> if you want drupal to be real time your going to have a real headache trying to do it all in drupal
01:10 < npdemers> It installed it fine, and the messages get to node.js, but they're not getting back to Drupal. I think I'm missing some information, like AuthToken and SessionId
01:11 < holzp> ugh I may be forced to do a Drupal thing soon
01:11 < npdemers> I don't know how to add users to node.js so I can add them to channels
01:11 < sorensen> it happens
01:11 < holzp> Every time I think i'm out....
01:12 < groundwater> holzp: drupal is an abomination 
01:12 < sorensen> npdemers: i really dont know what you are trying to do, what i would do is create a node server to handle all live updating stuff, that either pushes through socket.io when a drupal save hook fires into some API in node you setup, which you will probably need anyways to know when things are updated, or replicate mysql and have node hit that directly
01:13 < sorensen> groundwater: you know of any node project that does the same thing? ;)
01:13 < groundwater> sorensen: as drupal?
01:13 < holzp> I know i've seen it
01:13 < sorensen> yes
01:13 < holzp> Node hasnt reaches critical mass enough yet to have a Drupal type thing
01:13 < holzp> Someday
01:14 < sorensen> i've not seen one in ruby or python either
01:14 < sorensen> or even something comparable to wordpress
01:14 < groundwater> sorensen: no, but i think drupal isn't just done wrong, it's foundation is backwards
01:14 < holzp> it took Drupal 6 years to get good, and 10 to get awful
01:14 < groundwater> sorensen: an infinite list of "admin forms" to create a website is just a shitty experience
01:14 < sorensen> groundwater: maybe from a code stand point, but theres not really alternatives
01:14 < holzp> yeah thats the prob
01:14 < groundwater> what functionality from drupal do you want?
01:15 < npdemers> I understand the Drupal side of it, and writing to mysql isn't the answer, I need to send Javascript updates
01:15 < sorensen> how about a large scale content management framework
01:15 < TheAceOfHearts> how should I hash passwords that registering users send to me? md5? 
01:15 < sorensen> since there are so many things that do that
01:15 < CoverSlide> there's a few cms' in node
01:15 < supersym> we talked about this yesterday as well I think :P
01:15 < sorensen> none that i would consider using
01:15 < CoverSlide> like calipso
01:15 < sorensen> calipso is old and abandoned
01:15 < sorensen> like 2 years ago
01:16 < styol> groundwater: I'd like to set various header codes, yah
01:16 < groundwater> TheAceOfHearts: http://en.wikipedia.org/wiki/PBKDF2
01:16 < TheAceOfHearts> thanks
01:16 < sorensen> actually looks like its been seeing some activity lately
01:16 < sorensen> i take that back
01:16 < npdemers> But like I said, they're not getting from node.js back to Drupal.
01:16 < MI6> joyent/node: isaacs master * ec378aa : test: Fix debugger repl tests  This makes the output of simple/test-debug (+2 more commits) - http://git.io/kMCiCQ
01:17 < sorensen> CoverSlide: I TAKE IT BACK! ahh
01:17 < sorensen> lol
01:17 < groundwater> TheAceOfHearts: read over that, ask if you have more questions
01:17 < TheAceOfHearts> thanks, I will
01:17 < styol> groundwater: I guess was more fishing for a way to possible pass additional arguments with the new error object. Seems I can, but they are file/line number related
01:17 < sorensen> npdemers: a simple way to do it would be to have drupal serve up some JS that makes GET requests to a node server via long polling, or establishes a socket.io connection
01:17 < groundwater> styol: its' prob. better to just print details to console.log
01:18 < groundwater> styol: less exposure of your internals
01:18 < sorensen> have drupal serve up all the client side stuff, and then make a socket connection to your node API
01:18 < styol> groundwater: in this instance the client is expecting something specific to trigger a different action
01:18 < groundwater> styol: is 500 error not good enough?
01:18 < supersym> imba... clojurescript to node ^^
01:19 < styol> groundwater: the client won't be inspecting the headers but would like some sort of error codes in certain instances
01:20 < groundwater> styol: then return the code in the body, html, json, whatever format you like
01:21 < styol> groundwater: right right, that is easy enough indeed, just was hoping there was a strategy for throwing a new error object and passing something other than filename / line number
01:21 < styol> *then
01:21 < styol> err
01:21 < groundwater> styol: you can pass a message to the error object
01:21 < npdemers> sorensen: to confirm, would long polling provide real-time updates? If so, then I'm not sure I need node.js at all (especially if I still can't get node.js to talk back to Drupal)
01:21 < styol> groundwater: yeah, that seems to be the only option.. evaluate the error string, set an error code / header / whatever else based on that before it sends the response to the client
01:21 < sorensen> well, the user isnt going to notice too much
01:22 < sorensen> node.js isnt meant to talk back to drupal, just the connected client
01:22 < groundwater> styol: that's a clean way to do it, if you ask me
01:22 < styol> groundwater: okie dokes. thank you for your feedback. much appreciated
01:22 < CoverSlide> you could have it talk to the database that drupal uses
01:22 < sorensen> you can longpoll to provide a *similar* effect, websockets are going to be the best choice for real time
01:23 < groundwater> styol: good luck
01:23 < supersym> yeah
01:23 < npdemers> sorensen: okay, I misspoke. But right now I can't get it to talk back to anyone!
01:23 < supersym> https://github.com/felixge/node-mysql
01:24 < CoverSlide> or have the client talk to drupal via ajax based on what happens in node
01:24 < supersym> in essence you could get realtime websockets with internal logic to periodically update the database
01:24 < supersym> when a certain condition is met
01:25 < SomeoneWeird> https://npmjs.org/package/fs-watch
01:25 < SomeoneWeird> seems legit
01:25 < SomeoneWeird> isaacs, ^
01:25 < sorensen> npdemers: i would test and play around with a node server and see if you can get that to work before integrating with drupal
01:26 < kenperkins> hola
01:27 < npdemers> supersym: Updating the database is not the solution. I need users to have the site update in real time without having to refresh the page (and without having to hit it with Ajax every second)
01:27 <@isaacs> SomeoneWeird: https://npmjs.org/package/filewatcherthing
01:28 < TheAceOfHearts> groundwater: So should I use crypto.pbkdf2 even though it's still in API level 2?
01:28 <@isaacs> SomeoneWeird: someone unpublished it: http://isaacs.iriscouch.com/registry/fs-watch
01:29 < groundwater> TheAceOfHearts: you may just have to check for any changes when moving from 0.8 to 0.10
01:29 < supersym> npdemers: good luck!!
01:29 < TheAceOfHearts> I see
01:29 < groundwater> TheAceOfHearts: but the algorithm is standardized
01:29 < TheAceOfHearts> I think I'll use it for now, and update if it's required 
01:30 < npdemers> supersym: thanks
01:30 < supersym> ok
01:30 < supersym> http://www.vakantieveilingen.nl/vakanties/appartementen.html
01:30 < groundwater> TheAceOfHearts: +1
01:30 < supersym> they use streams there too
01:31 < supersym> http://en.wikipedia.org/wiki/Comet_(programming)
01:31 < supersym> that it seems
01:32 < supersym> Comet is known by several other names, including Ajax Push, Reverse Ajax, Two-way-web, HTTP Streaming, and HTTP server push among others.
01:32 < supersym> fyi... i hadnt heard of it earlier
01:32 < npdemers> sorensen: I was hoping to do both at the same time. There's already a Drupal node.js module out there, but I can't get it to work, and I don't know what I'm missing
01:38 < MI6> joyent/node: isaacs master * 937662b : test: Use common.PORT to determine debugger port - http://git.io/hBwKwQ
01:41 < cloudbender> five minutes wasted becuase I forgot the () on the end of a function call.
01:41 < cloudbender> slaps self
01:42 < cloudbender> much better
01:42 < MI6> joyent/node: isaacs master * 1b870b6 : test: Move test-net-connect-timeout to test/internet  It is not a valid t - http://git.io/Sh_Z7A
01:48 < groundwater> cloudbender: *what* did you learrrrrn?
01:57 < MI6> joyent/node: isaacs master * 586e160 : test: Use common.PORT in simple/test-http-timeout - http://git.io/drZInA
01:59 < sorensen> hmm
01:59 < sorensen> what module to write next
02:00 < penzur> teleporter
02:01 < penzur> or anything with lazers
02:01 < sorensen> hmmm
02:01 < sorensen> lazers do sound interesting
02:02 < groundwater> sorensen: npm i -g sexyparty
02:03 < holzp> write a php interpreter that can run php over Node
02:03 < holzp> call it "Web 2000"
02:03 < Lorentz> finally, mysql functions from php in node
02:03 < pmclenithan> hey anyone run into this before? http://stackoverflow.com/questions/11040112/parse-ansi-escape-code-colors-in-the-browser
02:04 < pmclenithan> have this issue and don't want to hand code it all out
02:04 < Lorentz> really needed that mysql_real_escape_string()
02:05 < supersym> pmclenithan: whats teh issue?
02:06 < sorensen> Lorentz: dont you mean real_mysql_real_escape_real_string() ?
02:06 < pmclenithan> supersym: i am piping terminal output which contains all the ansi color code [90m or [36m attached
02:07 < pmclenithan> basically socket.io'ing a terminal output
02:07 < supersym> https://github.com/rburns/ansi-to-html
02:07 < supersym> isnt that all you need?
02:07 < pmclenithan> hoping there was maybe a ansi code color parser on the front end
02:07 < supersym> yes
02:07 < supersym> that could work too
02:08 < pmclenithan> you have amazing google skillz yo
02:08 < pmclenithan> thank you!
02:08 < supersym> i studied as librarian ;)
02:08 < supersym> yw
02:10 < sorensen> nooooooo
02:10 < sorensen> red wine on the dude rug
02:10 < sorensen> :(
02:10 < supersym> oops
02:12 < bradleymeck> pmclenithan: tty.js?
02:12 -!- Topic for #Node.js: evented I/O?  in MY javascript?  it's more likely than you think! - http://logs.nodejs.org/node.js/
02:12 -!- Topic set by isaacs [~isaacs@173-203-97-118.static.cloud-ips.com] [Thu Feb 21 00:02:49 2013]
02:13 -!- isaacs changed the topic of #Node.js to: Node.js ~ http://jenkins.nodejs.org/ ~ http://logs.nodejs.org/node.js/
02:15 < pmclenithan> bradleymeck: that is seriously rad but I just needed a quick converter, thanks for the rec
02:15 < cloudbender> I am a human code compressor.  The first step is admitting it.
02:16 < sorensen> ...
02:17 < sorensen> cloudbender: taking the 7 step program?
02:26 < Gateway69> What do people here when building a web app use for code deployment from like stage -> dev -> live.. 
02:29 < supersym> I wrote my last site using DocPad, it has a cli app for generating static assets from templates (stylus,jade,coffee) and I usually would host them on Nginx using simple FTP or SCP to my VPS :P
02:29 < blakmatrix> Gateway69: check out grunt I hear its pretty popular for that kind of deplyment processing
02:29 < supersym> during development, I have LiveReload running which is cool
02:36 < mscdex> Gateway69: i use git over ssh for pushing code out
02:40 < harrisonm> Is there a tool that'll post a stdin pipe to a new gist already out there?
02:42 < livinded> yay threads!
02:42 < harrisonm> well hm, found one in Ruby https://github.com/mikesplain/togist
02:44 < Gateway69> thanks guys sorry stepped away.. .. mscdex we use git for source control but doesnt solve a nice process to check in, push to stage etc.. 
02:48 < mscdex> Gateway69: for git i have a remote that pushes to staging and a remote that pushes to all production systems
02:48 < mscdex> and one to the dev server
02:49 < Gateway69> can you roll back on live if something blows up?
02:49 < mscdex> sure
02:49 < mscdex> you can push whatever you want
02:50 < Gateway69> just looking to develope a the proper flow for the company here, not a small project but something big.. so looking around since we use node.js in our work flow
02:50 < mscdex> all you have to do is make sure you have the right post-receive hook that basically does a git reset
02:50 < mscdex> to make sure all of the files are up to date after a push
02:50 < Gateway69> I wasnt their is their were already nice software packages, maybe even with UI that provides something like this
02:52 < TbQ> hi all
02:52 < sagarnikam123> hello everyone
02:55 < TbQ> i have a question about ejs library in express framework - can i set a rendered view to variable? Something like this: var renderedView = res.getRenderedView('/example/view', {example: "variable"});
02:57 < MI6> joyent/node: isaacs master * 8643397 : stream: Writables are not pipe()able  This handles the fact that stream.W - http://git.io/kFwV1g
03:10 < TbQ> ok, i already know how to do this, thanks : D
03:11 < maxme> what if there's a storm
03:15 < cloudbender> storm where ?
03:18 < context> why the hell does a package want my password 
03:19 < context> global packages dont even require sudo to install, but installing ws locally wants my password?
03:21 < context> err, well i dont know what package it was :-/
03:22 < SomeoneWeird> <context> global packages dont even require sudo to install, but installing ws locally wants my password? < yes they do, depending on your setup
03:22 < context> someoneweird: no they dont. im using homebrew with everything under my login.
03:23 < context> someoneweird: and i just did 'npm install' not install -g. why does it want my password?
03:23 < cloudbender> what's the env string for max number ?
03:23 < context> why would a local install /ever/ require sudo ?
03:23 < SomeoneWeird> context, maybe not on mac, on everything else they do
03:24 < SomeoneWeird> <context> global packages dont even require sudo to install, <?
03:24 < SomeoneWeird> heh
03:30 < zivester> General REST question... does it make sense to have PUT /product/123 take the entire body and replace product 123, while having POST /product/123, to take all body values and update only those values... for the sake of completeness, say I'm setting the product price... if I did a PUT, I would have to PUT the entire doc... id, description, title.. etc... where POST I only would have to send the new price
03:31 < TheAceOfHearts> the size in req.files in Express, is that in bits? http://expressjs.com/api.html#req.files
03:31 < SomeoneWeird> zivester, yeah I suppose
03:31 < groundwater> zivester: POST shouldn't specify the exact resource
03:32 < groundwater> zivester: you can do whatever you want, but what you're suggesting is non-standard
03:32 < zivester> whats standard for updating a certain field of a document? PUT'ing the entire document?
03:33 < groundwater> zivester: there is no standard for that, you can either PUT an incomplete document, and let the server figure it out, or POST to /product/123/property for example
03:33 < groundwater> s/POST/PUT
03:33 < carpii_> i wouldnt get hung up on REST definitions
03:34 < fruitFly> how do you install shit on linux?!?!?!
03:34 < carpii_> technically POST updates an existing resource, and PUT updates or creates 
03:34 < carpii_> but just go with whatever works, and is sensible
03:34 < fruitFly> I got this sublime text 2 .tar.bz2 shit... but wut do I do
03:34 < groundwater> carpii_: other way around i think
03:34 < echo> If I was in your place, zivester, I would make /product/123/price accept a price payload to be PUT'd which would update 123, if I wanted to explicitly only update price with one URL.
03:35 < zivester> and if i was updating more than just price... probably have to fall back to POST /product/123
03:35 < carpii_> ground, not sure
03:35 < carpii_> The PUT method requests that the enclosed entity be stored under the supplied Request-URI. If the Request-URI refers to an already existing resource, the enclosed entity SHOULD be considered as a modified version
03:35 < groundwater> zivester: if your' following the common practice of POST, you should only POST to create a new resource
03:35 < AlStanforth> @fruitFly tar xvjf sublime\ text\ 2.tar.bz2
03:36 < groundwater> zivester: but really, just do what works
03:36 < echo> ^ And makes sense to you, your code and your app.
03:36 < echo> what makes*
03:37 < groundwater> the biggest real-world difference is that a browser form cannot use PUT
03:38 < systemovich> you can use put with a hidden field
03:38 < zivester> yah.. i'm doing this all through ajax... i have POST creating a resource, trying to set a standard for myself for when to replace and when to update... it seems whatever works is the gist of it if I try to follow as close as possible... thanks for the inputs :)
03:38 < carpii_> in many cases its not even worth the bother of differentiatiing between replace and update
03:39 < carpii_> unless youre auditing individual fields
03:39 < systemovich> <input type="hidden" name="_method" value="<%=method%>"/>
03:39 < carpii_> or maybe for some caching reasons
03:43 < TheAceOfHearts> how should I handle image uploads to a mockup social network made with Express? should I save em in the database, or should I just put em in a folder and save the location in the db?
03:43 < carpii_> filesystem
03:44 < TheAceOfHearts> kk
03:44 < carpii_> theres very few reasons for storing it in the db
03:46 < cloudbender> Is there a way to test the node max number ?
03:46 < rknLA> is there a convention for node apps (express or otherwise) for a file/module used to store credentials for various services?
03:46 < cloudbender> NODE_MAX_NUMBER or something ?
03:46 < rknLA> i'm using a `keys.js` file in one of my projects, but wanted to know if there's something more standard.
03:50 < cloudbender> gnite all
03:58 < SomeoneWeird> BAYUM
04:13 < fusiongrokker> using Jade how do I insert a space between two tags? I have two inputs next to one another and I just want to separate them a little bit.
04:14 < fusiongrokker> rknLA: I've been using environment variables. this is a pretty common approach for cloud providers like nodejitsu and heroku.
04:15 < carpii_> two html inputs ?
04:16 < fusiongrokker> yes
04:16 < fusiongrokker> input(...)
04:16 < carpii_> just give the leftmost one a css class, and assigna right margin to it
04:16 < fusiongrokker> thought of that but it seems like overkill
04:16 < fusiongrokker> there's got to be a way to do it in jade
04:16 < carpii_> nop, its standard
04:17 < fusiongrokker> &nbsp; is standard html
04:17 < fusiongrokker> got to be a way to output it
04:17 < fusiongrokker> I guess I could do "span &nbsp;"
04:17 < carpii_> would probably work, is a bit of a lame way to do it though :)
04:17 < fusiongrokker> yeah that worked
04:18 < fusiongrokker> imo an unnecessary span and an unnecessary class are about equal ;)
04:18 < carpii_> clas isnt unnecessary, you needed it :)
04:21 < AlStanforth> IMO the spacing is part of style, not content, and so should not be added in the form of  non-breaking space, but as a class with a margin, as carpii_ said
04:23 < AlStanforth> CSS was invented to avoid that kind of thing :p
04:26 < tprice> when i use http=proxy and im trying to route websocket request how do i pass in a custom host and port for proxyWebSocketRequest?
04:26 < tprice> how do i over ride this.target.host
04:27 < tprice> https://github.com/nodejitsu/node-http-proxy/blob/master/lib/node-http-proxy/http-proxy.js#L601
04:32 < sitapati> anyone using stardog.js?
04:39 < BruceIOS> how would i go about installing an npm package without an internet connection easily?
04:39 < BruceIOS> i need to install forever
04:39 < BruceIOS> on a network without internet
04:39 < groundwater> BruceIOS: copy it into your node_modules folder
04:40 < BruceIOS> but it has tons of dependencies
04:40 < groundwater> BruceIOS: nom install it on another machine, then transfer it
04:40 < groundwater> npm*
04:40 < BruceIOS> when i install this particular program, it downloads many npm modules
04:41 < fusiongrokker> carpii_: AlStanforth: fwiw I ended up changing the way the form was laid out, and the problem went away.
04:41 < livinded> look at the source from a computer with internet and write all the files manually
04:41 < ChrisPartridge> BruceIOS: sneak a 3g dongle in
04:41 < BruceIOS> is there a way to save a copy of all the npm modules that are downloaded like you can with apt-get
04:41 < sneakyness> ~
04:41 < groundwater> BruceIOS: you just need the node_modules folder
04:41 < livinded> while you're at it, write a word processor on paper in forth
04:41 < groundwater> it's all in there
04:42 < BruceIOS> so if i was to copy that it would all work
04:42 < groundwater> BruceIOS: each module installed to node_modules has its dependencies in a subdirectory
04:42 < groundwater> so node_modules is the complete tree
04:42 < BruceIOS> no need to install
04:43 < BruceIOS> just do a standard cp of the folder
04:43 < groundwater> BruceIOS: yes, but if you have any modules that compile C++ code, make sure you install on the same architecture 
04:43 < ChrisPartridge> isn't forever installed globally though?
04:43 < groundwater> ChrisPartridge: you can install it locally, the bin will be in node_modules/.bin/forever
04:44 < ChrisPartridge> too easy then
04:44 < BruceIOS> what is node path on ubuntu
04:46 < BruceIOS> got it
04:46 < BruceIOS> i dont see a modules folder
04:47 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
04:47 < groundwater> what version of node is it?
04:47 < BruceIOS> 8.5
04:47 < groundwater> from _any_ directory run "npm install forever" 
04:48 < groundwater> it should create a node_modules directory with forever inside
04:49 < SomeoneWeird> not always
04:50 < BruceIOS> when i do npm install forever it downloads like 50mthings from registry
04:50 < BruceIOS> node_modules only has 11 folders
04:51 < groundwater> that's why it's called forever, cuz it takes forever to download =]
04:51 < carpii_> Bruce, modules have their own node_modules dependencies
04:51 < groundwater> forevers dependencies will be in node_modules/forever/node_modules
04:51 < BruceIOS> ok i see
04:52 < BruceIOS> now i dont get why it created the folder in that directory
04:52 < BruceIOS> isint it somehwere else also that the program installs to
04:54 < BruceIOS> like i already had it isntalled
04:54 < BruceIOS> then it downloaded it again
04:54 < BruceIOS> and make the node_module int he current directory
04:59 < BruceIOS> so when i copy the folder how do you install forever, it still tries to get out to the internet
04:59 < BruceIOS> doing http get
05:02 -!- mode/#Node.js [+o TooTallNate] by ChanServ
05:03 < SomeoneWeird> BruceIOS, huh
05:04 < BruceIOS> so i have everything in node_modules
05:04 < BruceIOS> how do i install it locally
05:04 < BruceIOS> npm install forever
05:04 < BruceIOS> still tries to get the dependencies from the internet
05:04 < SomeoneWeird> you have to
05:04 < BruceIOS> i can't do a local install
05:05 < BruceIOS> if everything is in node_modules
05:05 < echo> It not meant to be installed locally, I've seen people have issues with it before -- there's not really any reason to install it locally.
05:05 < BruceIOS> i mean install it without an internet connection
05:06 < BruceIOS> install a module, transfer it then do sudo npm install forever
05:06 < SomeoneWeird> it won't work
05:06 < BruceIOS> so you MUST have an internet connection to install an npm module like forever?
05:07 < ChrisPartridge> no, you just need to replicate the steps manually
05:08 < BruceIOS> so i have everything in node_modules that forever needs, how would i then install forever
05:08 < ChrisPartridge> BruceIOS: it technically is installed, if you have everything in the node_modules folder
05:08 < BruceIOS> correct
05:08 < BruceIOS> now i want to transfer it to a disconnect VM and install forever on it
05:09 < ChrisPartridge> how are you isntalling forever at the moment, the exact command?
05:09 < BruceIOS> npm install forever
05:09 < BruceIOS> it downloads everthing from registry
05:09 < ChrisPartridge> ok, so then forever is installed inside node_modules.. so you dont need to do anything when you copy it over.
05:10 < BruceIOS> but i just did it and its in the current directory
05:11 < BruceIOS> node will now use tis directory?
05:11 < BruceIOS> if i copy node_modules to another machine how does node know that i have forever installed
05:11 < ChrisPartridge> because node will look in the working directory for node_modules folder
05:12 < BruceIOS> what if i do an npm install in a different directory, it would then create a new node_modules folder
05:12 < ChrisPartridge> do you have forever working at the moment? how are you launching it?
05:12 < BruceIOS> yes
05:12 < BruceIOS> it launches with a program
05:14 < ChrisPartridge> what program? what arguments are you using to launch it?
05:14 < BruceIOS> https://github.com/DataSoft/Nova
05:14 < BruceIOS> its called quasar
05:14 < BruceIOS> im feeling so dumb lol
05:16 < ChrisPartridge> so quasar is launching the node process?
05:17 < BruceIOS> yes
05:17 < ChrisPartridge> do you have to specify a working directory, binary path etc for the node app in quasar?
05:17 < BruceIOS> done behidn the scenes i dunno
05:19 < ChrisPartridge> well, copy the your node apps folder, and let quasar do its thing?
05:21 < BruceIOS> Chris
05:21 < BruceIOS> i just found another node_modules folder under /usr/local/lib
05:22 < BruceIOS> with forever
05:22 < ChrisPartridge> BruceIOS: as i mentioned earlier, it was probably installed globally
05:22 < BruceIOS> so how would i do it if thats the case
05:25 < ChrisPartridge> BruceIOS: same deal, copy the node_modules folder, probably need to find the binary too, probably in /usr/local/bin
05:26 < BruceIOS> ok thanks
05:34 < CorbinDallas> I'm trying to alter the text color of the script editor using http://eclipsecolorthemes.org/ but my .js files always show up with black characters and I can't seem to change it.  Any suggestions?
05:35 < ChrisPartridge> CorbinDallas: might have better luck in #eclipse
05:36 < CorbinDallas> thanks ChrisPartridge
05:36 < icodeforlove> I'm trying to install https://github.com/filearts/plunker with no success
05:37 < icodeforlove> is there some sort of obvious thing they left out of the install process?
05:41 < ChrisPartridge> icodeforlove: getting an error?
05:42 < icodeforlove> ChrisPartridge: well the first error is "Cannot find module 'LiveScript'"
05:43 < icodeforlove> ChrisPartridge: so i went through all the dirs doing nom install
05:43 < icodeforlove> ChrisPartridge: npm install *
05:43 < ChrisPartridge> icodeforlove: just installed using the instructions on GH, without issue
05:43 < icodeforlove> ChrisPartridge: it runs fine?
05:44 < ChrisPartridge> icodeforlove: it complains about the config
05:44 < ChrisPartridge> but nothing regarding the modules
05:44 < icodeforlove> ChrisPartridge: well yeah once you fix the config, and remove their comments from the sample config (apparently their json can't have comments), you will get that error
05:46 < ChrisPartridge> icodeforlove: probably missing the deps from package.json, i'd say
05:47 < icodeforlove> ChrisPartridge: so i went through the servers did and ran a bunch of npm installs because apparently each sir is a server 
05:47 < icodeforlove> ChrisPartridge: dir**
05:48 < ChrisPartridge> maybe lodge an issue on GH
05:49 < icodeforlove> ChrisPartridge: i thought id check here first incase I'm missing something obvious
05:49 < ChrisPartridge> nah, looks like a dependency nightmare
05:50 < ChrisPartridge> icodeforlove: it actually runs, if you just do npm install LiveScript iced-coffee-script sass marked stylus nib
05:51 < ChrisPartridge> and then remove the 2.5 version of express (npm remove express)
05:51 < ChrisPartridge> (remove it from package.json as well)
05:51 < ChrisPartridge> then install the latest version of express
05:53 < mikolaly1enko> anyone got a moment to take a look at this library?
05:53 < mikolaly1enko> https://github.com/mikolalysenko/ndarray
05:54 < mikolaly1enko> It is part of an ongoing project to build concise/modular wrappers for webgl, but I think it could have broader applications
05:55 < icodeforlove> ChrisPartridge: well now i see it actually trying to start all the servers
05:56 < icodeforlove> ChrisPartridge: haha, for such a nice project you would think they would document this a bit more
05:57 < someprimetime_> Would someone be able to try something for me please?
05:57 < someprimetime_> `npm install embedly` and let me know if it gives them any error?
05:57 < someprimetime_> think the module is broken but am not sure.
05:58 < ChrisPartridge> icodeforlove: update their package.json and send a pull request :P
06:00 < fusiongrokker> another jade question... how do I put a link in the middle of a paragraph? e.g. "Don't have an account? [Register here]"
06:00 < icodeforlove> ChrisPartridge: i would if i could even figure it out, it seems like their embed server uses express 3.X, so if you just comment it out it will run on 2.X (i was getting a bunch of issues on 3.X because they are utilizing body-parser)
06:00 < icodeforlove> ChrisPartridge: but even after all that i end up getting "Error creating session: [object Object]"
06:00 < icodeforlove> ChrisPartridge: haha...
06:00 < tprice> can someone test this script for me. https://gist.github.com/FLYBYME/5045528 im trying to see if "x-forwarded-for" are been sent. if you refresh the browser twice the headers seem to be missing
06:02 < fusiongrokker> ah, pipe syntax to write arbitrary html
06:14 < ChrisPartridge> icodeforlove: write your own collab editor ;)
06:14 < ChrisPartridge> and make it awesome
06:15 < perlitch> guys im just getting into streams and have a question. I am using the event-stream module and am trying to pipe some child_processes eg: es.pipeline( es.child(cp.exec("hadoop fs -ls -R " + dir)), es.split(), es.map(…), es.child(cp.exec("hadoop fs -cat" + data)) ). My question is, how can I access the data coming into that second es.child() stream to be able to create a dynamic command like that?
06:17 < ChrisPartridge> perlitch: does hadoop accept data from stdin?
06:18 < perlitch> uh im not sure. im the front end guy at a hadoop company and basically only know those commands
06:18 < perlitch> namely, hadoop fs -ls -R [path] and hadoop fs -cat [path]
06:19 < perlitch> ChrisPartridge: how would that change things?
06:19 < patrickm> if its linux can you pipe "|" it into your server and use stdin
06:21 < ChrisPartridge> perlitch: well, the hadoop fs command will be trying to read data from the filesystem, hence the fs
06:21 < ChrisPartridge> I'm assuming you want the data coming from the .map() to be passed through?
06:22 < perlitch> yes
06:22 < perlitch> and actually be used in a subsequent exec string
06:22 < perlitch> a la "hadoop fs -cat" + data
06:22 < perlitch> where data is the read data from the map()
06:23 < perlitch> er manipulated data
06:26 < ChrisPartridge> perlitch: you probably need to check how to pass data to hadoop through stdin, never used it here, but essentially event-stream is just passing data between streams, and your second hadoop command is trying to read from the filesystem
06:29 < perlitch> ChrisPartridge: ah i see what you mean
06:30 < perlitch> assuming it is
06:31 < perlitch> do i use process to pipe to hadoop fs -cat ? i apologize if this is a stupid question
06:32 < ChrisPartridge> perlitch: you will most likely need to delve into the hadoop docs, and find out how to read from stdin - i would imagine it's supported
06:32 < ChrisPartridge> using fs -cat is assuming you are going to provide a filesystem path
06:32 < ChrisPartridge> (from my brief viewing of the docs)
06:36 < jp232> anyone might know why using res.end(data) giving me half the requests/sec res.write(data) does? https://gist.github.com/jdpaton/9f20ff0b13e0cc20017a
06:37 < ChrisPartridge> jp232:doesnt res.end call res.write anyway?
06:39 < jp232> ChrisPartridge: I'd assume so. Going to figure out what overhead res.end is incurring 
06:41 < ChrisPartridge> jp232: what version of node btw?
06:42 < jp232> ChrisPartridge: v0.8.21
06:44 < ChrisPartridge> jp232: yeah, looks like its doing some checks
06:44 < jp232> ChrisPartridge: yeah found the hot path routines
06:44 < ralphtheninja> hi, has anyone of you written any streams on top of Stream.Duplex in the streams2 api?
06:46 < patrickm> nope
06:57 < bradleymeck> ralphtheninja: i have avoided duplex from the npm readable-stream module, the transforms seemed heavy handed
06:57 < bradleymeck> but thats the base / compat for streams2
06:58 < sshaginyan> Guys is there a way to restrict a require?
06:58 < sshaginyan> You can require file C from file A but not file B
06:58 < sshaginyan> Would I have to do this with permissions?
06:59 < bradleymeck> sshaginyan: dont depend on that behavior, ppl will get around it
06:59 < bradleymeck> module.parent is the only thing you will get but it is not going to be 100% due to cache
07:07 < bradleymeck> sshaginyan: only way to do that I can think of is to use a require shim before loading A or B
07:07 < sshaginyan> k
07:07 < sshaginyan> bradleymeck: That's in package.json right?
07:07 < sshaginyan> is there a good tutorial for that?
07:07 < bradleymeck> no that would be doing something like node-module-system on github
07:08 < bradleymeck> its basically reimplementing require
07:08 < horred> zilcht!
07:27 < danedge> Hi! i need latest version of nodejs and v8 and chromium in gentoo system. Today cant resolve conflict with latest version of chromium-26+ and nodejs-0.9. Please check and sorry. Solve this by mask to nodejs-0.8
07:29 < MI6> joyent/node: Scott Blomquist master * f054fec : openssl: regenerate asm files for openssl 1.0.1e - http://git.io/acXgPw
07:31 < AAA_awright> danedge: Compile it yourself
07:31 < AAA_awright> That said, I don't see any conflicts
07:33 < danedge> see related bugs in https://bugs.gentoo.org/buglist.cgi?quicksearch=nodejs+v8
07:34 < danedge> conflicts in emerging nodejs-0.+ wants v8 that lower than chromium-26 want v8
07:34 < bradleymeck> danedge: you cant just update v8 it can cause serious problems if binary compat changes
07:34 < bradleymeck> compile from source
07:34 < danedge> i see :(
07:35 < bradleymeck> C/C++ are awesome like that
07:36 < danedge> i use gentoo package system for compile and build. Yes I can make ebuild or overlay but not now. I think other linux distro will have similar problems. But i know that is normal workflow.
07:39 < bradleymeck> danedge: v8 is not going to be moved without inspection, having 2 projects **forced** to use same version of a dep is a bad idea if compatibility is involved generally
07:40 < AAA_awright> danedge: Gentoo upgraded my V8 version when I compiled Node.js
07:40 < AAA_awright> not downgraded
07:40 < AAA_awright> You're probably looking for a ~ mask somewhere
07:40 < AAA_awright> Perhaps dev-db/mongodb ~amd64
07:42 < danedge> currently i use nodejs in emacs flymake js validation jslint/hint and npm for install some utils and packages like jquery and bootsrap. I use also nodejs to build own version jquery. nodejs nice system, but need more good distribution on linux systems like gentoo i think.\
07:43 < bradleymeck> danedge: you could just dl binaries rather than package http://nodejs.org/download/
07:43 < bradleymeck> not sure what you are asking
07:44 < danedge> dont use mongodb
07:45 < danedge> ok try binary packages
07:46 < danedge> sorry for my english
07:46 < bradleymeck> s'fine we all have trouble since the internet is a place of many languages :)
07:46 < cyberboy> how to uninstall node 0.9.6-pre ?? - sudo apt-get remove nodejs says its not installed but i stil can run it
07:48 < bradleymeck> cyberboy: how did you install it?
07:48 < cyberboy> dont remember unfortunatelly
07:48 < cyberboy> i did it 6 months ago 
07:49 < bradleymeck> cyberboy: try dling the git repo, run ./configure && make uninstall
07:49 < danedge> see my some build info: http://pastebin.com/u5ggEwXF
07:49 < cyberboy> ./configure 
07:49 < cyberboy> not here 
07:49 < bradleymeck> download the git repo first, run that inside the git directory
07:49 < cyberboy> ok
07:50 < danedge> nov i building chromium-26+ and <nodejs-0.9 ->>== 0.8
07:51 < mac_nibblet> Heya peeps
07:51 < bradleymeck> dunno enough about gentoo's pkg management to be of help there
07:51 < mac_nibblet> AAA_awright: dam it took me like 1 day to get the basics of node :o
07:51 < mac_nibblet> Does anyone know if it's possible to set nodejs to have "use strict"; enabled by default?
07:52 < AAA_awright> ?
07:52 < mac_nibblet> AAA_awright: you don't remember talking on monday :P?
07:52 < AAA_awright> mac_nibblet: `node --v8-options|grep strict` says --use_strict
07:53 < danedge> i suggest to test nodejs on gentoo with latest (not live) versions of chromium
07:53 < AAA_awright> Yeah
07:54 < bradleymeck> mac_nibblet: be aware, "use strict" does incur some performance penalties last i checked
07:54 < mac_nibblet> bradleymeck: yeah, so if i can set nodejs to do it by default on my dev machine and not have it in code
07:54 < bradleymeck> v8's optimizer and the other JS engines were not made for strict mode and are still being retrofitted
07:54 < mac_nibblet> when i release it to production i should be fine eh?
07:54 < bradleymeck> sure
07:55 < cyberboy> thanks - i successfuly removed it 
07:56 < mac_nibblet> bradleymeck: to bad the NodeJS code does not confirm to use strict o.0
07:56 < AAA_awright> How does one manage to bid the price of AWS instances up to $6
07:56 < AAA_awright> That's crazty
07:57 < bradleymeck> mac_nibblet: it lints, should be compliant
07:57 < bradleymeck> "use strict" in core would be bad for reasons above
07:57 < mac_nibblet> bradleymeck: http://ss.office.pmg.se/caps/3517e6.png
07:58 < bradleymeck> well thats fun, i am not going to do that personally though...
07:58  * bradleymeck shudders at all callbacks being forced to top of fn
07:59 < mac_nibblet> bradleymeck: could it not be possible to enable strict for userland code only?
07:59 < bradleymeck> possible yes, but strict mode invocations of standard mode functions can cause oddities
07:59 < bradleymeck> rare but possible
08:00 < mac_nibblet> Oh, well ill just drop this idea of mine :P
08:00 < mac_nibblet> seams to complicated
08:00 < bradleymeck> mac_nibblet: just remember strict mode is a style guide mostly, you are not gaining anything out of it
08:01 < bradleymeck> well eventually you will be gaining
08:01 < danedge> AAA_awright please see latest ebuild for depends of nodejs: this ok, but this dont allow use latest chromium-26+ this is main problem
08:01 < danedge> http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/net-libs/nodejs/nodejs-0.9.9.ebuild?revision=1.2&view=markup
08:01 < AAA_awright> Chromium should have nothing to do with Node.js
08:01 < AAA_awright> Also Gentoo is cool in that you can have multiple versions of a package installed
08:03 < danedge> i requsting use slotted-versions for v8 but they dont want or it impossible
08:04 < danedge> gentoo will be coller if nodejs team help to maintain nodejs packages
08:05 < bradleymeck> danedge: we do try, but we have been burned many times by OS package managers' communities
08:06 < danedge> ok
08:09 < AAA_awright> bradleymeck: Genoo isn't stupid unlike Debian
08:10 < bradleymeck> AAA_awright: not saying they are, im just tired of politics in my code
08:10 < AAA_awright> Aye
08:13 < danedge> thanks for all
08:15 < gnarf> just use nave.sh to install node?
08:22 < mac_nibblet> Does anyone happen to have a few minutes to help me understand something with Buffer readUint32LE/BE ?
08:23 < mac_nibblet> This is a little graph of what im doing http://ss.office.pmg.se/caps/d8ea59.png
08:23 < mac_nibblet> the second row of bits between parameter LSB anda param MSB is a unsigned 32 bit int
08:24 < mac_nibblet> i want to convert the two bytes into a the int
08:24 < mac_nibblet> but im not sure about the difference between LE/BE since they both give me different values :S
08:25 < livinded> mac_nibblet: one sec
08:26 < mac_nibblet> livinded: Thanks
08:27 < livinded> oh, le and be are just little endian and big endian respectively. Do you know the difference?
08:27 < mac_nibblet> no
08:28 < mac_nibblet> Big is if it reads from left to right ?
08:28 < livinded> so as far as computers are concerned a number is just a stream of bits. There's no intrinsic value to it so it's up to the operator to tell it how to interpret those bits
08:28 < mac_nibblet> ye
08:29 < livinded> big endian means that the most significant bit is on the left and little endian means the most significant bit is on the right
08:29 < mac_nibblet> which is the BE method ?
08:29 < livinded> be is big endian, most significant
08:30 < mac_nibblet> so i want to use a little endian 
08:30 < mac_nibblet> since my least important bit is on the left
08:30 < livinded> so if you wanted to express the number 14 in big endian hex you'd express it as 0x0000000e
08:31  * mac_nibblet assume's LSB = least significant bit
08:31 < livinded> and it would be 0x0e000000 in little endian
08:31 < mac_nibblet> oki
08:31 < livinded> just remember that you move full octets
08:31 < mac_nibblet> which means i need to think of what :S? 
08:32 < mac_nibblet> I'm a PHP dev i just started with this stuff on monday so i got some stupid question (a)
08:32 < livinded> so work in 255 bits at a time
08:32 < livinded> errr 256
08:33 < mac_nibblet> Just to absolutly shore
08:33 < [AD]Turbo> hi there
08:33 < mac_nibblet> im supposed to read the two bytes using readUInt32LE(offset) ?
08:33 < mac_nibblet> s/shore/sure
08:35 < livinded> two bytes?
08:36 < livinded> oh sorry, totally told you the wrong number there. 8 bits at a time, hence octet
08:36 < mac_nibblet> Err, i 0x00 0x0E 0x27 0x07
08:36 < livinded> sorry, it's been a long day staring at RFCs
08:36 < mac_nibblet> 0x00 = LSB & 0x07 = MSB
08:37 < livinded> yes
08:37 < livinded> well backworks
08:37 < livinded> backwords*
08:37 < mac_nibblet> so do i set the offset of Buffer.readUint32LE at 00 or 0x0E ?
08:38 < livinded> so you put 00 in buffer[0] and 0e in buffer[1]
08:39 < mac_nibblet> EH?
08:39 < mac_nibblet> now you lost me
08:39 < livinded> I assume parameter lsb is more than 1 byte
08:39 < mac_nibblet> no
08:40 < livinded> then lsb and msb shouldn't matter because it's only one byte
08:40 < mac_nibblet> http://ss.office.pmg.se/caps/d8ea59.png
08:40 < mac_nibblet> the second row of bits
08:40 < mac_nibblet> towards the end
08:41 < livinded> right, so isn't param lsb 00 0e 27
08:41 < livinded> and param msb 07 8e e7
08:41 < mac_nibblet> I have no idea, thats why im asking for help
08:41 < mac_nibblet> this is from the comlynx documentation 
08:41 < livinded> the diagram is confusing
08:41 < livinded> but that's how I would read it
08:42 < livinded> there's no additional info?
08:42 < mac_nibblet> livinded: this is the param description http://ss.office.pmg.se/caps/ae2f66.png
08:43 < livinded> oh
08:44 < livinded> that makes way more sense
08:44  * mac_nibblet listens
08:44 < livinded> so it's a 32bit integer in lsb
08:45 < mac_nibblet> so the lsb param contains my int ?
08:45 < livinded> so in that example the paramter would be 0x07270e00 if you were to interpret it as MSB and 0x000e2707 as LSB
08:45 < livinded> lsb and msb on that diagram are just markers showing you where you lsb and msb are
08:45 < livinded> it's a 4 byte integer (32 bits)
08:46 < mac_nibblet> hmm, but how does that work with buffer.readUInt32 since i can only specifiy a single offset and not a range
08:47 < livinded> you can either loop or use copy
08:49 < mac_nibblet> var value = 0; for (offset in [15,16,17,18]) { value += buffer.readUInt32LE(offset); }
08:49 < mac_nibblet> or am i being stupid again :D?
08:50 < livinded> no, you can't do it like that
08:50 < livinded> you need to treat it as a 32bit int
08:50 < mac_nibblet> hahaha i figured as much :D
08:51 < livinded> readUInt32LE will read 32bits
08:51 < livinded> you specify an offset and it reads 32bit of 4 bytes from that position
08:52 < mac_nibblet> but then i do not need to copy/or loop i just set the offset at the LSB param?
08:52 < livinded> you only need to loop if you use UInt8LE
08:52 < livinded> yes
08:52 < livinded> it'll read 32bits from that point bringing the entire number in
08:52 < mac_nibblet> and i use LE since my byte array is LSB > MSB
08:52 < livinded> ya
08:52  * mac_nibblet touch down
08:53 < mac_nibblet> Thanks a lot!
09:57 < Ivru> Hello
09:58 < Ivru> Using express I try to set a cookie (res.cookie(name, value)), I can see it in the response on the client but the cookie is not store. Any idea why ?
09:59 < wwicks> wrong cookie domain?
10:00 < Ivru> nope
10:00 < wwicks> often people put domain:".example.com" and then have that experience when running on localhost (domain doesn't match)
10:00 < Ivru> localhost as domain, / as path
10:00 < bradleymeck> Ivru how are you checking if it stored
10:01 < wwicks> open your browser console and inspect document.domain
10:01 < Ivru> bradleymeck, just looking with firebug. On the response, I see the cookie but not in the cookie tab
10:02 < wwicks> whatever document.domain is… your cookie will need to match
10:03 < E_mE> Are their any good articles that discuss handling mysql queries in a async fashion, especially when running a HTTP Server via node.js
10:03 < wwicks> another option is that you have too many cookies… browsers have a limit and will drop cookies when exceeded (but this is not likely your problem)
10:03 < Ivru> strange... using res.cookie('token', account.session.token, {expires: account.session.expirationDate, path:'/fr/'}); I don't have /fr/ as path in the received cookie
10:03 < pixie79> hi all - i am trying to use winston-syslog to log via tcp or udp to syslog, when i try via udp i get nothing, when i try via tcp my script seems to hang and nothing appears in syslog. Both print fine to the console. Any ideas ? https://gist.github.com/pixie79/5046705
10:04 < E_mE> I'm little perplexed how to gain data back from the query, prior to the server attempting to response, due to the async nature
10:04 < Ivru> wwicks, I don't have that much. I use firefox just for this site
10:04 < wwicks> also- if you are setting httponly, I'm pretty sure you won't see it in firebug
10:05 < Ivru> I don't
10:05 < wwicks> strange that it would drop the path
10:05 < bradleymeck> check using ajax requests > check using tools (in my experience)
10:05 < Ivru> yeah i'll try that
10:08 < wwicks> Ivru: the account.session.expirationDate is not in the past it is? or the timezone isn't right?
10:09 < Ivru> wwicks, nope, right date in the future
10:09 < Ivru> still stuck with this path dropped... strange
10:10 < wwicks> Ivre: ok, you've passed the sanity check then :P
10:10 < Daynab__> Hey guys, I have a dumb question - I'm parsing a pretty huge json file trying to get to the relevant bits, it looks like this: http://i.imgur.com/etpCigs.png - when I get to the '$', I keep getting undefined, even doing ['$'] and I dont understand why.
10:11 < Ivru> wwicks, thanks :)
10:11 < Ivru> kind of noob with js
10:13 < bradleymeck> Daynab__: paste a text sample case, png makes me sad
10:13 < wwicks> Daynab__ you're doing: itemDB.power[0]['$']??
10:14 < Daynab__> I'm an idiot. Thanks wwicks
10:14 < Daynab__> I did say it was dumb question :p
10:14 < wwicks> Daynab__: heh- for got the indexer?
10:15 < Daynab> yeah. now suppose I wanted to go through all of them I guess I'd have to do a loop?
10:15 < wwicks> yeah. you can use Array.forEach
10:16 < Daynab> thanks
10:16 < wwicks> np
10:16 < alchimista> hi people, by using the http://aws.amazon.com/sdkfornodejs/ how I can launch an instance
10:16 < alchimista> i already managed to create the instance via code, but i wanna be able to launch it via code,  how is it possible?!
10:17 < alchimista> i hve to say it is a EC2 instance
10:18 < alchimista> in this documentation http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/EC2.html i am not able to find the code to launch the instance 
10:18 < bradleymeck> alchimista: no idea, i use pkgcloud
10:20 < alchimista> bradleymeck: do u know of any nodejs module, that I can use it to manually scale down or scale up amazon ec2, by manually i mean by doing call to the code, when i decide, instead of using the auto scaling of amazon
10:20 < bradleymeck> awssum, or pkgcloud
10:20 < bradleymeck> awssum is more aws centered
10:23 < alchimista> bradleymeck: thanks for suggesting this two, actually i am asked to write a module that abastract interaction between amazon ec2 and openstack
10:23 < alchimista> do u know also a module that abstract interaction with openstack ?!
10:23 < bradleymeck> alchimista: pkgcloud will do that, azure, and joyent
10:24 < alchimista> thanx
10:24 < Ivru> bradleymeck, stupid question, but I can't find a way of doing... How to check from the ajax call the cookie returned by the server ?
10:25 < Ivru> headers ?
10:26 < bradleymeck> lvru check incoming headers in the req object and on res.on('end') check res.headers to check on server side, on client https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#getAllResponseHeaders() 
10:27 < Ivru> bradleymeck, it's ivru not Lvru ;) Thanks for the help man
10:28 < bradleymeck> ah, need to change my font to be serif i guess
10:29 < Ivru> it's just that I don't get the HL otherwise
10:29 < alchimista> bradleymeck: one question? by pkgcloud can be able to scaledown or scaleup  an ec2 instance, if it is possible for you can you please provide me link to some example
10:29 < alchimista> thanx in advance
10:32 < Andy-> hey guys, I've had this before "module.js:340" ^ throw error
10:32 < Andy-> last time reinstalling socketio module seemed to fix it but this time it hasn't
10:32 < Andy-> is there a cache I can clear through npm?
10:33 < bradleymeck> alchimista: https://github.com/nodejitsu/pkgcloud#compute , call createServer ( https://github.com/nodejitsu/pkgcloud/blob/master/docs/providers/rackspace.md#using-compute has examples [replace image and flavor with aws equivalents])
10:33 < bradleymeck> Andy-: thats not the origin of the problem, full stack needed, just means loading a module caused something to happen 
10:34 < alchimista> bradleymeck: thank you
10:34 < Andy-> thanks bradleymeck, I must've got lucky last time :]
11:55 < shwaiil> hi
11:56 < shwaiil> Q: Just found about GruntJS, looks like I can use it as a deployment tool ? For example, to do what Ant does or Capistrano ? Thanks for looking!
11:58 < hallas> shwaiil you can create grunt tasks, chain them and use that to deploy yes
11:58 < hallas> personally I just use grunt for linting and stuff
11:59 < AAA_awright> Isn't Ant a build system...?
11:59 < AAA_awright> And a rather bad one at tht
11:59 < hallas>  dont think any of these tools are either build or deploy, it depends on how you set em up and use them
12:00 < shwaiil> I'd like to learn something that could help me to deploy my apps. I usually work with Php,Js,MySql.
12:01 < hallas> shwaiil maybe start out with nodejitsu.org then
12:01 < hallas> lol sorry, nodejitsu.com even
12:21 < andris9> anyone knows about node-amqp? i have a temporary queue but when connection to rabbit is lost and then reconnected, then the queue is recreated but all defined bindings are lost
12:29 < supersym> hallas: do you have preference for jitsu over say heroku? I really havent deployed much yet besides testing out a few PaaS
12:30 < supersym> I'd be intrested in hearing some opinions on pro/con of those
12:32 < hallas> supersym well jitsu was off to a bit of a rocky start I think, but I think they've managed to get things running stable now, ive used them for smaller projects since beta
12:32 < hallas> pro for jitsu is the team behind, they're the best support you can get if your running any node process
12:33 < hallas> sorry for the whole your / you're grammar mistakes :)
12:33 < Sendoushi> front end developer or front-end developer?
12:34 < supersym> hallas: I love their node products like flatiron, resourceful... But their control panel online kept bugging me about not wanting a paid service I recall
12:34 < hallas> Sendoushi front-end is probably the correct way of saying it :o
12:34 < supersym> so typically, I would find Heroku to have a better/easier one,... although I doubt these should be criteria in evaluating them, it was enough to chase me away from jitsu
12:35 < Sendoushi> hallas:  thanks :)
12:35 < hallas> supersym I'd just take any of my problems to #nodejitsu
12:35 < supersym> well both have good CLI tools for deployment so
12:35 < hallas> get it up and running with their help
12:35 < supersym> that might actually be an idea yeah... ;)
12:35 < hallas> jitsu uses package.json to deploy, does heroku?
12:36 < supersym> yeah
12:36 < supersym> Your application must use NPM to manage dependencies. even if you dont have any
12:37 < hallas> Okay
12:37 < supersym> name, version, engines
12:37 < hallas> well then, Jitsu seems cool and more awesome than heroku so I'd go with jitsu hehe :P
12:37 < supersym> and any other fields u need
12:37 < supersym> :)
12:37 < supersym> hallas: image is everything ;)
12:37 < hallas> supersym yep
12:38 < supersym> were those stupid .io domains always so expensive?
12:38 < supersym> I hate stuff that everyone does
12:38 < supersym> sheeps
12:38 < hallas> I actually have a question too
12:39 < hallas> Have anyone here experimented with Backbone models and socket.io ?
12:39 < hallas> I wonna bring real time to my app, and I think the easiest way is to share models on front and backend, and do some mad evented stuff
12:41 < supersym> well I use DocPad often
12:42 < pixie79> hi all - i am trying to create a client socket connection using net for the first time - i have managed to sucessfully create a connection so i am now trying to add some error handling, but I am not sure i have the timeout set correct and I also can not see to raise a connection error should i get ECON refused instead the program just bombs and ideas ? https://gist.github.com/pixie79/5047618
12:42 < supersym> it has socket.io and Backbone during development time
12:42 < supersym> and just has a server instance you can run stand-alone or inside express
12:42 < supersym> but you loose the realtime stuff because its not isomorphic
12:43 < supersym> basically it just renders the templates on demand (server side compilation) of the languages u might use for view
12:43 < supersym> I always find the problem tho
12:43 < supersym> SEO
12:44 < supersym> best is to have a cached version of any document available and serve that up to the visitors and only render when needed/updated
12:45 < supersym> same way I like the idea linkedin had to do client side rendering
12:45 < supersym> but you loose on the SEO
12:45 < supersym> Meteor is trying to fix this but its no more than a ugly hack atm
12:46 < supersym> if SEO is not a problem, the sky is the limit
12:46 < Ivru> this cookie stuff is driving me crazy
12:52 < mac_nibblet> Ivru: don't you like cookies :O?
13:05 < mscdex> mac_nibblet: it probably depends on the nutritional information
13:05 < supersym> chocolate chip cookiedough.... hmmmm
13:06 < supersym> doh!
13:19 < trodrigues> did someone say chocolate chip?
13:22 < djazz> how can I pipe data to a socket and reconnect the pipe if socket reconnects?
13:23 < djazz> im sending an audio stream (ogg/mp3) to an icecast server
13:24 < AAA_awright> djazz: Hmm there should be an on disconnect event
13:24 < AAA_awright> Or an on timeout, and I believe you can set the timeout
13:24 < djazz> AAA_awright: on the pipe? or socket?
13:24 < AAA_awright> Socket of course, I don't believe the pipe is an object
13:25 < AAA_awright> djazz: What are you doing? That's something I may be interested in
13:25 < djazz> AAA_awright: im making an icecast audio source for a spotify cli-player
13:25 < djazz> in node
13:25 < AAA_awright> Interesting
13:26 < djazz> AAA_awright: http://jsfiddle.net/vXQSK/1/
13:26 < djazz> :)
13:26 < thanpolas> any tipts on asset pipeline for node?
13:26 < djazz> AAA_awright: here's the full code: https://gist.github.com/daniel-j/5044334
13:27 < AAA_awright> Cool
13:27 < trodrigues> thanpolas: grunt?
13:27 < thanpolas> trodrigues, sure, you know of any task?
13:28 < AAA_awright> djazz: require('spotify_cred'); should probably be require('./configure.json'); or something
13:28 < trodrigues> thanpolas: well...what are you looking for exactly? I think the term "asset pipeline" is a bit too generic
13:28 < djazz> AAA_awright: aaa, can you do that?
13:28 < djazz> :D
13:28 < djazz> ok
13:28 < trodrigues> it depends a lot on your stack
13:28 < AAA_awright> Yeah
13:29 < djazz> AAA_awright: must i do stuff with current dirname too?
13:29 < thanpolas> trodrigues, pipelining ala rails with cache-busting where it's needed
13:29 < thanpolas> not talking about trivial stuff, min, concat, etc
13:29 < AAA_awright> djazz: require with ./ resolves relative to the script
13:29 < trodrigues> thanpolas: oh I see
13:29 < djazz> aha
13:29 < AAA_awright> You use that for other files placed in the same package
13:30 < trodrigues> well, I've mostly used connect static for that in the past but I'm not sure about the cache busting
13:30  * djazz has never done node modules of multiple files
13:30 < djazz> :)
13:30 < trodrigues> I usually just use my development browser with no cache activated and expect my development server to always give me fresh version of files, which I believe connect static does
13:31 < thanpolas> and production?
13:31 < trodrigues> as you said, min/concat, etc
13:31 < thanpolas> no versioning of files at all?
13:31 < trodrigues> again, I guess it depends a lot on your stack
13:31 < trodrigues> for instance, in the last place I was working at, I served a different config for curl.js depending on environment
13:32 < AAA_awright> djazz: Technically, a module is a function that's executed exactly once per process, it doesn't need to be a file even
13:32 < trodrigues> but other than that, not much changed
13:32 < trodrigues> there was a build task and that was mostly it
13:32 < thanpolas> that's configuration per environment… 
13:32 < trodrigues> yep
13:32 < trodrigues> also, this was mostly due to the fact that there were some local paths, from code shared among projects, that needed changing
13:32 < trodrigues> because on most situations you shouldn't even need that
13:32 < trodrigues> you should just need to build
13:33 < trodrigues> but like I said, it depends a lot on your stack, module system chosen for frontend, etc
13:33 < thanpolas> everyone uses js, css and images
13:33 < thanpolas> these are assets that need to be versioned when on production so they can bust the cache when upadted
13:34 < djazz> how can I see what stuff a stream is piped to?
13:34 < thanpolas> rails has that built in, i don't see anything for node
13:34 < trodrigues> oh I see
13:34 < trodrigues> well, because rails is a web framework and node is not
13:34 < trodrigues> so at the risk of repeating myself one more time: it totally depends on your stack
13:35 < trodrigues> for instance, if you dump your assets into a CDN, you'll probably want to version a directory name to contain those assets
13:35 < thanpolas> trodrigues, that really doesn't say anything when it comes to web
13:35 < trodrigues> and set that on a configuration when you deploy a new version
13:35 < thanpolas> that's my current setup trodrigues, yes
13:35 < thanpolas> but that forces the cache to bust on every deploy, when that's not really needed
13:35 < trodrigues> not exactly
13:36 < trodrigues> if you deploy assets and main app separately, you don't need to cache bust on every deploy
13:36 < thanpolas> sure you can have multiple deployment ops...
13:36 < thanpolas> that goes down the "depends on your stack" like you said
13:37 < trodrigues> :)
13:37 < thanpolas> or i could ftp every file 
13:37 < trodrigues> but I know exactly what you mean: I used to have the same problem and then split the tasks up
13:37 < AAA_awright> If your resource changes then you may want to publish it at a new URI, too
13:37 < nesusvet> hello everyone! I am new here ). And I want to create my first project on node js, it should be a monitoring system. I expect to create many agents and push the data such as CPU, mem ... on the main server. But want to hear the following:
13:37 < nesusvet> * the client send the data to the main server using GET
13:37 < nesusvet> * the server takes the GET to the client. 
13:37 < nesusvet> I don't know which a way is best.
13:37 < nesusvet> And sorry for my english )
13:37 < trodrigues> so if assets were deployed, they would trigger a build of the main app to update the asset version
13:37 < trodrigues> otherwise, you could just deploy the main app and no assets would be changed
13:38 < trodrigues> it's not that hard really, it's just a matter of setup
13:38 < thanpolas> trodrigues, it needs to be flexible… one image change should not bust the cache for the rest 2k images
13:39 < trodrigues> I see your point. well, I don't know of an existing module that does that.
13:39 < thanpolas> :/ i'll have to write it, job requires it
13:39 < trodrigues> but I'd say that anything you find will require some integration effort, unless it's part of a larger framework based on node
13:39 < thanpolas> i'll make it a grunt task
13:40 < trodrigues> have a look around npm, if you haven't already
13:40 < thanpolas> a manifest file will be produced with all the assets
13:40 < thanpolas> the most relevant project was this: https://github.com/johnnygreen/laravel-grunt and this https://github.com/niftylettuce/express-cdn
13:40 < thanpolas> the later is kind of broken
13:40 < trodrigues> grunt-fingerprint     Assets versioning task for Grunt.
13:40 < trodrigues> live-assets           Rails Asset Pipeline for Node.js
13:40 < trodrigues> hah
13:41 < thanpolas> awesome
13:41 < trodrigues> there seems to be quite a few
14:01 < Tox> are there any nodejs-guys at Cebit in Germany?
14:06 < malkomalko> anybody ever run into any weird when running some commands with child_process/exec? sometimes it appears as though the command doesn't send any output to stdout.. even if it works from the command line, and even if I wrap it in a bash script
14:07 < malkomalko> the command is specifically silver searcher
14:12 < EyePulp> yo ho ho
14:30 < abrkn> i'm having running npm install when a package is a git:// link (to github). ideas?
14:30 < abrkn> having npm hang when running*
14:32 < pats_Toms> maybe post your error somewhere abrkn 
14:32 < pats_Toms> and that dependencie line
14:34 < mscdex> abrkn: do you have git installed?
14:34 < abrkn> mscdex: yes
14:35 < abrkn> fetching tarball works, so i guess i can use that
14:35 < abrkn> but when using git:// it just completely hangs :|
14:36 < pats_Toms> try npm install git://<blablabla>
14:36 < AAA_awright> What?
14:36 < AAA_awright> git clone
14:36 < abrkn> i'll try some different repos and try to find what's up :)
14:37 < abrkn> any firebase users about? struggling a bit with some internal assert errors in node and too impatient to wait from their support
14:58 <@isaacbw> abrkn: npm install git://* should work
14:59 < abrkn> isaacbw: i think it's just too big. have a 126 mb in there?
15:00 < abrkn> it's been like 30 min now, i'll give it  few hours to see if it's just very slow
15:00 < mac_nibblet> abrkn: strace the process to see what it's doing
15:00 <@isaacbw> that does seem like a long time
15:00 < abrkn> if anyone wants to try: npm install git://github.com/abrkn/poker-evaluator.git
15:01 < mac_nibblet> Aint anything happen here...
15:01 < mac_nibblet> :/
15:01 < abrkn> mac_nibblet: it's like 150 mb, so depending on your connection i guess
15:01 < mac_nibblet> 100mb
15:01 < abrkn> figured :)
15:01 < mac_nibblet> O_o
15:01 < mac_nibblet> it installed
15:01 < abrkn> nice!
15:04 < abrkn> maybe wifi at a bar on an island in thailand is not the best testing environment
15:04 < pachet> depends on the bartender
15:04 < abrkn> chris? he's good.
15:04 < abrkn> hmm, he just lit a joint.
15:05 < AAA_awright> abrkn: Um, don't you mean git clone?
15:06 < abrkn> AAA_awright: no, i meant npm install. npm supports git:// deps in package.json
15:07 < AAA_awright> While it may, that's almost certainly the wrong way to do it
15:08 < abrkn> i use it because i forked a lib and the owner hasn't responded to my pull request
15:08 < abrkn> been like two weeks
15:09 < AAA_awright> abrkn: Git submodules then
15:11 < mac_nibblet> abrkn: you said it's 150mb
15:11 < titanplate> i got a something like this http://paste2.org/p/3000458 the folder relation things are in a DB and using sequelize to connect to it, now i'd need a recursive function(s) that fetch all the childs (until there are any) for a given folder (folder 1 in that case)
15:11 < mac_nibblet> but when i tried to install it a second time
15:11 < titanplate> and my brain is stuck
15:11 < mac_nibblet> i didnt see any data traffic
15:12 < abrkn> mac_nibblet: when verbose doesn't tell me anything im kind of stuck when it comes to npm
15:12 < titanplate> i need a function to call that launches the callback when the whole process is done, currently i'm getting callback for every subfolder
15:15 < titanplate> probably got it
15:15 < titanplate> nvm
15:15 < titanplate> thanks... p.
15:16 < titanplate> :P*
15:18 < farslan> Hi
15:19 < farslan> I'm using child_process.fork and child.send to send and receive messages between parent and child process
15:19 < farslan> the weid thing is, after creating a child process, the *first* child.send doesn't work
15:19 < farslan> but after a awhile, using another child.send works (I can easily ping and pong between the processes)
15:19 < farslan> any ideas why this happens?
15:20 < farslan> I'm using node 0.8.14
15:20 < djazz> node.js + spotify + icecast/shout = http://jsfiddle.net/vXQSK/1/
15:20 < djazz> =D
15:21 < djazz> sourcecode: https://gist.github.com/daniel-j/5044334
15:21 <@isaacbw> farslan: it's probably a race condition with the stdin still being paused when you send the first message
15:22 < farslan> isaacbw: how can I send it, any hacks around this?
15:22 < djazz> http://jsfiddle.net/vXQSK/2/ *
15:26 < mac_nibblet> Hmm, this feels extremely messy https://gist.github.com/macnibblet/6775d2718cb576a1c2cf 
15:27  * mac_nibblet is used to one class per file PHP PSR approach :/
15:43 < ganzuul> What if there was a Wikipedia for code?
15:43 < mac_nibblet> ganzuul: that would never wooork :/
15:43 < mac_nibblet> to many ways to solve the same problem
15:43 < mac_nibblet> their is no offical "correct" way in most cases
15:43 < ganzuul> They said that about horseless carriges too!
15:44 < mac_nibblet> Point taken...
15:57 < pixie79> i seem to be going wrong somewhere with the net module, i connect with client=net.connect() but then when i do client.write('X0200003600000000000TL1 TL1 08FEB02 ');  i dont get the same response back from the remote server as if i had telneted to it and then pasted the same code, any ideas ?
15:57 < AphelionZ> Is anybody here using action.io?
15:57 <@ryah> pixie79: maybe add a \r\n to the end?
15:58 < AphelionZ> I have a question about using node on that platform
15:58 < pixie79> ryah: nope that seems to have the same affect
15:59 < pixie79> it is as if the remote is seeing a different string when done via raw telnet than when sent via node
15:59 <@ryah> pixie79: can you use tcpdump to find out exactly what string you're sending from telnet
16:01 < ben_alman> for things that will be emitting events, is it better practice to make the thing an instance of eventemitter or to give the thing a property called .event that is the instance of eventemitter
16:01 < Havvy> ben_alman: Whichever you prefer.
16:02 <@ryah> pixie79: here's how you can get all the packets to google.com on osx: sudo tcpdump -i en0 -s 0 -X host google.com
16:02 <@ryah> pixie79: change the host, redo the telnet session. redo the node session. inspect, compare
16:03 < pixie79> ryah: thanks looking
16:14 < stdim> Hi, I want to use both cookie-stored sessions and in-memory sessions. There is no straightforward way to do that in Connect right now? Correct?
16:15 < svnlto> anybody used node-amqp before?
16:18 < dayom> I've used rabbit.js
16:22 < phrearch> hm, is it possible to return an object from a requirejs module like http://paste.kde.org/682988/ ?
16:22 < phrearch> (line 24)
16:22 < phrearch> trying to make a global 'window' object
16:22 < dayom> svnlto I've used rabbit.js which is pretty similar
16:22 < dayom> what are you looking to do?
16:22 < stdim> phrearch: yes, but only if window exists globally.
16:23 < svnlto> dayom: topic exchange setup
16:23 < phrearch> stdim: trying to include window like http://paste.kde.org/682994/
16:23 < svnlto> dayom: I've got an example that setup an exchange etc but somewhere along the line it goes wrong
16:23 < phrearch> not sure how requirejs resolves modules
16:23 < svnlto> dayom: mind if I PM you?
16:23 < dayom> sure
16:24 < stdim> phrearch: If window exists, then that will work. Otherwise, it won't. 
16:25 < ben_alman> is there a recommendation on exports.Ctor = function() {}; vs module.exports = function Ctor() {};
16:26 < phrearch> stdim: ok thanks
16:26 < stdim> phrearch: I'd probably do try { window; } catch (e) { ... if error, then window doesn't exist and define a global window, set it to null } 
16:27 <@isaacbw> ehm
16:28 < alchimis_> I am trying to give a try to pkgCloud, module, but I recieve 
16:28 < phrearch> stdim: ill try to set it the requirejs way to global. a nodejs global wont work since there may be more clients with different dom's
16:28 < phrearch> having a hard time figuring out how to structure my code :-)
16:29 < alchimis_> https://gist.github.com/anonymous/5633c45c878a5de35825
16:29 < stdim> phrearch: global to your context, ofc
16:29 < phrearch> stdim: yea indeed
16:30 < alchimis_> this is the error https://gist.github.com/anonymous/a1fe59052236dfcd69a8
16:31 < alchimis_> any one reading my question?
16:31 < alchimis_> any help?
16:36 < djazz> how can I debug memory leaks and such? what event listeners and "active" object are the biggest
16:36 < tklun> Hey everyone, has any one had any luck using the Node precompiled binaries for the Pi? The linux-arm-pi files?
16:37 < tklun> I'm running into strange issues, just wondering if anyone has got them working successfully.
16:41 < dayom> tklun maybe this will help? https://github.com/joyent/node/issues/4584#issuecomment-14135738
16:42 < tklun> Thanks dayom, unfortunately my issues are more simple. I'm trying to use the already compiled versions. But even when I move them all over to the correctly pathed directories I'm getting a "File not found" error. It's really strange.
16:42 < tklun> I'm trying to compile from source now instead, should take a couple hours....
16:46 < eddyb> have you guys seen this?
16:46 < eddyb> https://code.google.com/p/traceur-compiler/source/detail?r=cd599886c9358ca85d95d54430314f065ce3c30f
16:46 < eddyb> ES6 REPL in node.js
16:55 < Arkkis> Hello! Probably a stupid question, but here goes.. I used npm to install hogan.js. I got version 2.0, which is what npmjs.org says is the latest, but the hogan.js github repo says 3.0 is the latest. So, am I really running with an old version and what are my ways to update?
16:59 < mamadero> Arkkis, you could get it from github and install from there 
17:00 < mamadero> and drop them a line to the devs asking them to update npm :)
17:00 < Arkkis> ah
17:00 < Arkkis> so it's just probably someone forgot to update it?
17:01 < quizme> should I check in node_modules into git ?  i'm planning to deploy to another OS, so is there any compiled OS-specific code in that directory?
17:02 < geNAZt> no you should never check in node_modules
17:04 < CoverSlide> what about bundledDependencies
17:04 < mamadero> Arkkis: looks like that's the case
17:05 < Arkkis> mamadero, thanks, I'll contact @fat
17:06 < geNAZt> if you use bundledDependencies without any change on the code you should version lock it in the normal deps
17:10 < mamadero> Arkkis: check https://npmjs.org/doc/install.html you can npm install from github directly... maybe not the best idea, but could be a good transient option 
17:11 < Arkkis> I'm actually installing directly from github with npm
17:11 < Arkkis> works just fine, now I'm just figuring out how to get a certain version installed so that updating does not break my code
17:11 < Arkkis> thanks
17:22 < mamadero> specify the version on your package.json file, however, they might update the repo without changing the version... not sure what npm will do here, but I'm guessing it will eventually update :(  
17:23 < mamadero> might be better to clone their repo and install from your repo instead of the main one so at least you control the updates (until they update npm of course)
17:26 < geNAZt> npm has _nothing_ todo with any github
17:26 < geNAZt> if u use the npm version numbers (without a github url) they always have the same code in the versions
17:26 < gnarf> Anyone able to tell me how they'd spawn this in node: git archive 1cc5e6a001907a604b71946310149d0f7cb7c7b7 | tar -x -C ../public_html/test/
17:27 < geNAZt> since the bundled and stored packages at npmjs can only change if you change the version number
17:27 < geNAZt> you cannot publish a versionnumber twice
17:28 < mamadero> if the github repo has a package.json I thought npm could look there 
17:28 < geNAZt> mamadero: no
17:28 < geNAZt> npm has no autoupdate 
17:29 < geNAZt> gnarf: for this line it would be easier to write a little bash script and spawn that script instead of using the commandline
17:30 < gnarf> geNAZt: spawn("bash", [ "-c", "git archive 1cc5e6a001907a604b71946310149d0f7cb7c7b7 | tar -x -C ../public_html/test/" ]) ?
17:30 < geNAZt> very ugly and i think the pipe breaks
17:31 < geNAZt> not sure about but i think i could happen
17:31 < gnarf> well its going to be called for multiple sha/folders
17:31 < gnarf> so writing a sh file sounds hackier
17:31 < geNAZt> well no :D
17:31 < geNAZt> shell scripts can also handle arguments
17:31 < gnarf> sure
17:31 < gnarf> i suppose that makes sense
17:32 < mamadero> geNAZt: if I install from GH. Three days later your clone and npm install, it will get whatever version is there at that time. Since it's not checking the version and even if it was, that might not be updated between commits, then we should get a label or a specific commits to avoid different devs and envs working with different versions 
17:32 < geNAZt> you can spawn it like this but i think there can be cases where excactly this would break the pipe
17:33 < geNAZt> [18:23] <geNAZt> if u use the npm version numbers ___!!!(without a github url)!!!___ they always have the same code in the versions
17:33 < geNAZt> in a github repo i can do whatever i want
17:42 < dayom> any node talks coming up around nyc?
17:45 < kenperkins> damnit, I need to book for nodeconf, jsconf and node summit
17:46 < wao> jsconf US or EU?
17:46 < kenperkins> US
17:48 < djazz> terminate called after throwing an instance of 'std::bad_alloc'
17:48 < djazz>  what():  std::bad_alloc
17:48 < djazz> Aborted (core dumped)
17:49 < djazz> how can I debug that?
17:49 < geNAZt> http://en.wikipedia.org/wiki/Strace
17:56 < djazz> geNAZt: the crash happens after some minutes, how can i use strace?
17:57 < geNAZt> strace node <yourscript>
17:57 < geNAZt> and let it crahs then
17:57 < geNAZt> crash*
18:02 < bnoordhuis> creationix: you going to sxsw?
18:03 < creationix> don't think so
18:03 < bnoordhuis> too hipster / far away / something else?
18:03 < creationix> too expensive
18:04 < creationix> my family goes to everything I go to
18:04 < bnoordhuis> ah right
18:06 < kenperkins> i'll be in SA sunday to thursday after SXSW, but no time to get to austin :(
18:07 < [jasper]> hej guys, is anyone here using the dust templating engine by chance?
18:10 < Gambit--> Anyone have a railgun implementataion in node.js yet?
18:11 < bradleymeck> izs : for all those people who refuse to do anything other than reimpl require : https://github.com/bmeck/node-module-system/blob/master/example/node-module-system.js
18:12 < bradleymeck> its terrible and should not be used without caution/real purpose but they wont listen
18:12 < Gambit--> what does it offer in advantage to require, bradleymeck?
18:12 < bradleymeck> Gambit--: you can change the cache resolution and loading behavior
18:13 < bradleymeck> cache, resolution*
18:13 < bradleymeck> so you can be terrible if needed
18:13 < Gambit--> meaning where it looks for modules?
18:13 < bradleymeck> if you really need to, we are using it for some in memory loading of bundled packages
18:14 < Gambit--> when you say in-memory, you mean you load the module up in memory and then run this instead?
18:14 < bradleymeck> i would not recommend you actually change the resolution to not match node, but running it on different things than fs is fine
18:14 < Gambit--> or load the script up into memory?
18:14 < bradleymeck> script/shared libs are in the C stack as consts being loaded
18:14 < Gambit--> ah, yeah, I need to do that too.
18:14 < Gambit--> (i.e. compile in entire modules)
18:15 < bradleymeck> Gambit--: theres a thread on the list about it, some people are going to make a new open source one, ours needs to recoup costs at very least so :/ 
18:15 < Gambit--> recoup costs?
18:15 < Gambit--> I'd appreciate a link.
18:16 < bradleymeck> not public, nexe is public. will be public once i sort out some windows things and bring up a windows build server
18:16 < Gambit--> I'll be honest, I'm barely understanding what you're saying.
18:18 < bradleymeck> Gambit--: i am working on a build server. this will take `npm pack` tarballs, and create a single executable from it. The executable will not need any files to be installed on w/e OS it was built for
18:18 < Gambit--> bradleymeck: Ahhh!  That is much clearer, now, thank you :)
18:18 < Gambit--> Will you be releasing the whole thing as oss?
18:19 < bradleymeck> Talking to the boss about it, but I am being paid to make it so until costs are recouped unlikely.
18:19 < Gambit--> That's too bad - I can't imagine many people would feel particularly comfortable about using foreign binaries like that.
18:19 < bradleymeck> I still need to eat, but understand a lot of people being angry
18:19 < s3shs> With async.waterfall, what if I don't return a value from one function in the array?  Will it just forward no values to the next function?
18:20 < Gambit--> oh, I've got no problem with that part.  I just only need a small piece of it.
18:20 < s3shs> e.g.: Do I have to call the callback or return a value?
18:20 < bradleymeck> s3shs: if you call next with no values it wont pass any arguments
18:20 < bradleymeck> its all pass by argument
18:20 < s3shs> What if I don't call next?
18:20 < bradleymeck> it wont move on
18:20 < geNAZt> it stops
18:20 < geNAZt> and will never be freed :D
18:21 < s3shs> Like Step.  Ok.  Must return or call next.  Gottcha. In step is was Must return or call next or throw.
18:21 < s3shs> Thank you!
18:21 < s3shs> I'm refactoring old step code.
18:21 < geNAZt> well in async everything tops if you dont call the callbacks from it
18:22 < geNAZt> stops*
18:22 < bradleymeck> defunctzombie: i do browser/server code a lot, would be interested in what you find to be the common pitfalls
18:22 < basss> hello everyone, i'm trying to create a way to upload files to my node.js server… are there any relevant libraries ? 
18:23 < bradleymeck> node-formidable, node-form-data, request
18:23 < geNAZt> bass fomidable
18:23 < djazz> geNAZt: "Cannot allocate memory" ;o
18:24 < basss> geNAZt: thanks, any idea if it is compatible with express ? 
18:24 < bradleymeck> Gambit--: foreign binaries are a problem yea, but what can ya do when trying to build it as a service /shrug
18:24 < bradleymeck> basss: express's bodyParser uses it under the hood
18:24 < basss> bradleymeck: so i do not need to install it ? 
18:25 < bradleymeck> express' site has examples with it, if you install express you get it
18:25 < basss> bradleymeck: okay i'll check it out, thanks 
18:26 < geNAZt> djazz: well then you dont have enought ram or your ram is broken
18:27 < djazz> geNAZt: ah, i did top | grep node
18:27 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:27 < djazz> it uses about 50%
18:27 < geNAZt> so you havent seen the total ram used ?
18:28 < djazz> at maximum
18:28 < geNAZt> what do you mean ?
18:28 < geNAZt> when the node crashes is the ram full ?
18:29 < djazz> hm, i'll do another strace
18:29 < djazz> with some logging too
18:29 < bradleymeck> do wish we had a LD_LIBRARY_PATH thing in pkg.json for windows...
18:29 < geNAZt> well it would be interesting how the node app "grows" into your ram
18:30 < djazz> geNAZt: I'm testing this on my raspberry pi model A, 256 MB RAM
18:30 < djazz> its a music player, and usually crash after three songs
18:30 < MI6> joyent/libuv: Marc Schlaich master * 85124d7 : build, windows: allow override of python executable  Fixes #723. - http://git.io/qpmhRQ
18:30 < geNAZt> maybe its a memory leak inside your code
18:31 < defunctzombie> bradleymeck: the biggest pitfall is avoiding node style require
18:31 < defunctzombie> and sticking with globals, $, and old style client side js
18:31 < defunctzombie> instead of using better tools
18:31 < bradleymeck> defunctzombie: im a browserify kinda guy
18:31 < bradleymeck> still on v1 for now
18:32 < CoverSlide> browserify2 is fucking awesome
18:32 < defunctzombie> bradleymeck: excellent, then you are on the right path young padawan
18:33 < defunctzombie> bradleymeck: if you use express, you could check out enchilada
18:33 < defunctzombie> but that is by no means the only way to do things
18:33 < bradleymeck> CoverSlide: im still investigating it , cause im paranoid, dont want to move a 40 file image editor to it without checking
18:33 < defunctzombie> the important thing is to use modules and require
18:33 < defunctzombie> and give up on the old ways
18:34 < defunctzombie> bradleymeck: give it a bit more and some of the kinks will be worked out, then give v2 a go
18:34 < defunctzombie> bradleymeck: it is already much better than v1
18:34 < bradleymeck> defunctzombie: thats the goal, i have written a fair amount and have opinions on it, but like to hear ppl talk about it
18:34 < defunctzombie> but substack is making it even MORE better
18:34 < CoverSlide> bradleymeck: if all you're doing is standard requires, browserify2 won't change much except be way way way slimmer
18:35 < bradleymeck> parnoid
18:36 < CoverSlide> i love the new output format, the require code is like a single line, and all the modules are just one indexed hash
18:36 < bradleymeck> paranoid* even
18:39 < bradleymeck> CoverSlide: with minification and gzip it wasn't more than a couple bytes bigger than amd from r.js
18:45 < djazz> geNAZt: yeah, it's some leak.. it shouldn't keep increase when a song ends
18:46 < geNAZt> does the raspberry swap ?
18:46 < djazz> geNAZt: idk, i dont think i have set up any swap
18:46 < djazz> i use arch
18:47 < geNAZt> you would see that in top if there is any
18:47 < creationix> bnoordhuis: we will be at realtimeconf.eu though!
18:48 < creationix> Giving a node.js talk in Leon, France this April
18:48 < djazz> geNAZt: KiB swap: 0
18:48 < djazz> total
18:48 < geNAZt> so you cant swap
18:48 < geNAZt> okay :D
18:52 < djazz> geNAZt: it might be a bug in the node-speaker module
18:52 < djazz> if i dont pipe to it, it stays around 22 MB RSS
18:53 < kenperkins> darn jsconf sold out
18:54 < geNAZt> well it shouldnt
18:55 < geNAZt> if you close the stream after the end it should empty all buffers
18:56 < SrPx> Which host do you guys recommend for node.js? I know there are some listed, but which is the best? 
19:01 < groundwater> SrPx: it depends on location, scale, and features you want
19:01 < groundwater> SrPx: can you describe your setup / budget?
19:02 < fauntle> I'm building a node.js app that will install globally and run from the command line, is there any way I can test it with it's actual command ( "solidus start"  )?
19:02 < SrPx> groundwater: sure, thanks. Brazil (so US servers probably work the best), I just want to host minor tools, sites and systems I make to show to my clients (but I'd like the option to scale fast if necessary)
19:03 < pachet> inb4aws
19:03 < groundwater> SrPx: are you looking for PaaS or IaaS?
19:04 < Sven_vB> fauntle, how about a symlink /usr/bin/solidus pointing to your wrapper script?
19:04 < SrPx> groundwater: for example just now I've make a simple pdf → html converter using imagemagick. I'm just confused as how to send it to my client (should I ask him to install node.js and imagemagick? that would be confusing... so perhaps I could just host it as a html5 service and ask him to upload)
19:04 < SrPx> groundwater: following?
19:04 < SrPx> groundwater: what's the difference?
19:04 < SrPx> what are those, actually
19:04 < SrPx> iI've made*
19:04 < fauntle> Sven_vB: let me try that out
19:05 < groundwater> IaaS just provides a bare server, you have root access and can install anything you want, including things that will hose you
19:05 < groundwater> SrPx: Paas accepts an "application" package and runs it on their own custom setup
19:05 < SrPx> groundwater: if it's the same price the first, obviously
19:05 < SrPx> (=
19:05 < groundwater> SrPx: if you want to integrate with imagemagick, i would use IaaS, e.g. AWS, Rackspace, etc
19:06 < SrPx> AWS Rackspace are the companies? let me google, a min
19:06 < groundwater> SrPx: the cost of your servers is nothing compared to the cost of development time, so i would look for the best match, not the cheapest host
19:06 < groundwater> SrPx: amazon web services, or rackspace, i'm sure people here can suggest a dozen more
19:06 < SrPx> groundwater: dejavu... 
19:07 < SrPx> groundwater: so I just look for an IaaS?
19:07 < SrPx> groundwater: how does that relate to web hosts for php sites, VPS and dedicated servers? Is it some of those 3?
19:08 < groundwater> SrPx: it's a virtualized server, but you have full access to the host
19:08 < diablo> hmm, this is really weird
19:08 < SrPx> groundwater: virtualized server = VPS, right? 
19:09 < diablo> guy's stuck with something real basic but quite baffling
19:09 < groundwater> SrPx: basically
19:09 < diablo> can anyone help ? 
19:09 < groundwater> diablo: just ask the question, we're friendly
19:09 < fauntle> diablo: don't need to ask permission to ask a question
19:09 < diablo> :) thanks guys
19:09 < groundwater> especially from someone named diablo =]
19:10 < diablo> you guys are not just friendly, funny too 
19:10 < SrPx> groundwater: *reading* interesting, thanks (=
19:10 < diablo> so here it goes
19:10 < SrPx> ..at any moment 
19:10 < groundwater> SrPx: you can also search the mail list for VPS suggestions
19:12 < groundwater> diablo: if you're gonna dump a stack trace, or code, please use gist or some snippet website
19:12 < pixie79> how do i tell a readable socket that the length of data it is about to receive varies. I am going to be receiving data which is split over a few lines but each has a banner line which has the following format X020 then the size of the data stream comes next for example X020040 would tell me that in total there is 40 char's to this data although it may be over several lines 
19:12 < diablo> I'm using this http module and serving a requests on lets say /good and /bad 
19:13 < diablo> groundwater, sure thing.. I'm not new to irc, lol i get that a lot
19:13 < diablo> so back to the question
19:13 < fauntle> Sven_vB: npm doesn't automate this with some command, does it?
19:13 < aslant> I'm looking for some advice on HTTP.globalAgent.maxSockets - the default is documented as 5. I'm writing a service to manage couchdb replications between 2 different servers with a couple of thousand databases. As I understand it, by default I'll only be making a maximum f
19:14 < aslant> of 5 connections to the couch server at a time?
19:14 < s5fs> 
19:14 < diablo> so the url /bad will simply accept the req but wouldn't send a response deliberately - expectation is to timeout, while /good will simply respond saying 'hi'
19:14 < diablo> now I do a jquery ajax $.post('/bad'... 
19:14 < groundwater> pixie79: buffer the incoming data and manually split it?
19:15 < diablo> and I'd expect it to timeout as per node.js's socket_timeout which is 120secs
19:15 < pixie79> groundwater: that is what i am thinking but i am not sure on how to buffer it, unless i am screwing up my buffer when i do data = data.toString and there for loosing the next line or to of data
19:16 < groundwater> pixie79: can you post your code example?
19:16 < groundwater> diablo: what is happening instead?
19:16 < diablo> what happens though is the request is forked twice in the node process and it takes about 4 mins
19:16 < diablo> 4 mins to timeout 
19:16 < pixie79> will do in a min - i will have another try at buffering first
19:16 < groundwater> diablo: what do you mean by forked?
19:17 < diablo> then if you make a call to /good and immediately do a call to /bad it only takes 2 mins like expected
19:17 < diablo> groundwater,  the node process tries to attempt serving it again
19:17 < groundwater> diablo: can you show us the code example?
19:17 < diablo> okay hang on
19:18 < diablo> i'm just putting a little script to explain things easily
19:18 < diablo> just a sec
19:19 < diablo> groundwater,  there - http://pastebin.com/JjPnuAwM
19:21 < groundwater> diablo: sleep never closes the connection, is that the "/bad" url you're talking about?
19:21 < fauntle> Sven_vB: no need to do that, just run 'npm link' in your module's folder
19:21 < diablo> groundwater, right, it doesn't close the connection
19:21 < diablo> groundwater, but why does it try again and timeout after 4 mins
19:22 < diablo> so that script if you run it and use chrome dev console
19:22 < Gambit--> So if node.js is singlethreaded, how does it scale to use multiple cores?
19:22 < diablo> I meant /sleep = /bad and /hi = /good 
19:22 < groundwater> diablo: that is likely part of the client javascript, and has nothing to do with node
19:22 < diablo> groundwater, that was exactly my thought
19:23 < groundwater> diablo: you can verify by using curl instead of the client code
19:23 < diablo> but in the dev console I don't see another request under the n/w tab
19:23 < diablo> groundwater, yeah was suspicious of jquery and was just gonna try something raw
19:23 < groundwater> diablo: you're saying you see "sleeping" printed twice to the console?
19:24 < groundwater> diablo: perhaps query has a built-in re-try mechanism
19:26 < diablo> groundwater, hmm if jquery still had a built in thing to retry - I still don't see anything logged in the dev console
19:26 < groundwater> diablo: what does the "network" tab show?
19:26 < Sven_vB> fauntle, good thing you found that out :)
19:27 < diablo> just a single request that is pending for 4 mins
19:27 < diablo> groundwater, but there is another weird thing I just confirmed
19:27 < diablo> groundwater, if I do a successful call like to /hi then again I do /sleep it only takes 120secs 
19:28 < diablo> groundwater, sorry I mean /sleep and then /sleep
19:28 < AntelopeSalad> is npm broken for anyone else when trying to install modules?
19:28 < Gambit--> are there stats for v8 or node that show the use of the JIT engine or various other performance related aspects?
19:29 < diablo> groundwater, man, I'm so confused now
19:29 < groundwater> diablo: boil your script down tot he minimum code such than someone else can reproduce the error
19:29 < diablo> groundwater, i'll try the curl thing and get back in a few mins
19:29 < groundwater> diablo: either you will discover a bug, or discover your own error
19:29 < diablo> groundwater, got it.. brb
19:29 < ericfwd> @AntelopeSalad I had some trouble last night (ubuntu), had to "apt-get install build-essentials g++" to get it working on that machine
19:29 < diablo> groundwater, thanks for helping
19:29 < groundwater> diablo: goodluck
19:30 < AntelopeSalad> ericfwd: nah it wasn't that, for some reason npm didn't like "..." as a package name so it crashed anytime i did an npm install to the project using that package.json
19:34 < thanpolas_> hmm why doesn't fs.lstat() work while fs.lstatSync() does? for the same exact file/path
19:34 < thanpolas_> lstat() never calls the callback fn
19:37 < bnoordhuis> thanpolas_: test case?
19:37 < MI6> joyent/node: isaacs reviewme * caa355c : core: Remove the nextTick for running the main file  Not necessary, since (+1 more commits) - http://git.io/SHjBCQ
19:39 < thanpolas_> http://than.pol.as/NDjH
19:39 < thanpolas_> ONLY 'SYNC SYNC' gets logged … the file is a .js one
19:39 < spion> woo, "yield" is issue #2 of V8 sorted by number of stars. mission accomplished
19:40 < spion> (issue can be found at http://code.google.com/p/v8/issues/detail?id=2355 )
19:40 < bnoordhuis> thanpolas_: standalone test case?
19:41 < bnoordhuis> also, what node version is that?
19:41 < thanpolas_> 0.8.20
19:42 < djazz> how can I use pipes and use a file buffer instead of a buffer in memory?
19:42 < pixie79> groundwater: https://gist.github.com/pixie79/5050974 - i had another attempt but i still cant seem to capture the second line of the message  as part of the first bit of data
19:43 < bnoordhuis> djazz: ? more details needed
19:44 < djazz> bnoordhuis: I'm downloading a mp3 stream from a server, then i pipe it into a lame decoder. this produces raw pcm audio data
19:44 < djazz> node uses 100 MB
19:44 < djazz> :D
19:44 < djazz> can i pipe it to disk, and then buffer it back slowly?
19:44 < djazz> with createReadStream
19:45 < bnoordhuis> djazz: sure, http.request(...).pipe(fs.createWriteStream('filename', 'w')).end()
19:46 < bnoordhuis> when you're done, read the file back in
19:46 < djazz> so... file must be close before i open a read stream?
19:46 < bnoordhuis> yes. node doesn't have tail -f like read functionality
19:46 < djazz> hm.. ok
19:47 < groundwater> pixie79: you shouldn't assume anything about the data being passed in
19:47 < groundwater> pixie79: your buffer needs to be defined outside of on('data',…) otherwise its not a buffer
19:47 < djazz> bnoordhuis: could I spawn aplay to play the file, even if it's not complete?
19:47 < djazz> or pipe the file to aplay
19:48 < groundwater> pixie79: what if 'data' only passed in one character at a time, it should still work
19:49 < pixie79> groundwater: oh - i did not realise i could define the buffer outside of the on('data')
19:50 < groundwater> pixie79: you pretty much have to, on('data'…) doesn't guarantee anything about the data being passed in
19:50 < groundwater> pixie79: the most you can do is append to the ongoing buffer, then examine it to see if you've got a complete message each time
19:50 < pixie79> arh - probably where i was going wrong then
19:51 < groundwater> pixie79: it's non-trivial, but not super hard
19:51 < groundwater> good luck
19:51 < pixie79> thanks i think i see what you mean - one for tomorrow then when i have more time
19:52 < liquid-silence> any socket io users here?
19:53 < euoia> liquid-silence: I have used socket io
19:53 < liquid-silence> euoia http://pastie.org/6350111
19:53 < liquid-silence> should that not work for a telnet connection?
19:54 < euoia> liquid-silence: I have not attempted to make a telnet connection
19:54 < liquid-silence> ah 
19:55 < liquid-silence> because it connects but when you start sending data 
19:55 < euoia> liquid-silence: only using the browser-based socket.io.js
19:55 < liquid-silence> the telnet session closes
19:56 < liquid-silence> euoia this never happens 
19:56 < liquid-silence>   socket.broadcast.emit('user connected');
19:56 < euoia> liquid-silence: it's quite possible that the connection event is only actually fired after some kind of handshake occurs
19:57 < euoia> liquid-silence: I'm not familiar with the underlying protocol
19:57 < liquid-silence> ye
19:57 < liquid-silence> ok
19:58 < zackiv31> Is a 400 the correct http error response for an invalid value for a parameter... the spec reads "The request could not be understood by the server due to malformed syntax." the format is correct, the values I'm giving for them aren't
19:58 < euoia> liquid-silence: if you look at the socket.io code here: https://github.com/LearnBoost/socket.io/blob/master/lib/socket.js you can see there is debug logging
19:58 < euoia> perhaps it's worth figuring out how to enable that
19:59 < quizme>  should i check node_modules into my repo ?
20:00 < defunctzombie> freewil: ping
20:00 < euoia> quizme: there's arguments for and against it, it's not clear-cut
20:01 < quizme> euoia thnks
20:07 < liquid-silence> euoia yeah I am not getting this heh
20:09 < djazz> how can I use child_process.spawn to do this? "lame --decode - - | aplay -c 2 -f S16_LE -r 44100"
20:10 < djazz> I want to pipe mp3 data to it, and let it play
20:10 < diablo> groundwater, hmm, that retry didn't happen with curl.. so almost close to conclude its jquery..  trying to confirm
20:13 < CoverSlide> djazz: lame=child_process.spawn('lame',args ...);aplay = child_process.spawn('aplay', args2 ..);audio= fs.createReadStream('file.mp3');audio.pipe(lame.stdin);lame.stdout.pipe(aplay.stdin)
20:13 < djazz> lame.stdin gives an EPIPE write error :/
20:14 < djazz> i tried that
20:14 < CoverSlide> hmm
20:15 < CoverSlide> if you cat file.mp3 | lame ... does that work fine?
20:15 < djazz> CoverSlide: but then I must wait for file.mp3 to have all data?
20:15 < djazz> or atleast, enough so lame dont crash
20:16 < CoverSlide> I don't know how lame works
20:16 < CoverSlide> if it's not retarded then it should use the streams nicely
20:17 < CoverSlide> you could also try using /dev/stdin and /dev/stdout instead of dashes
20:18 < CoverSlide> that way it will think it's working on real files
20:21 < djazz> CoverSlide: ah, I solved it
20:21 < djazz> i found out that i needed to have "--mp3input" after "--decode"
20:21 < CoverSlide> djazz: what was the problem?
20:27 < diablo> groundwater, ut ?
20:27 < groundwater> diablo: hey
20:28 < groundwater> diablo: did you track down the issue yet?
20:28 < diablo> groundwater, not yet.. quick question
20:29 < diablo> groundwater, so when a request timesout and keepalive is set.. I can see node calls socket.close() and closes the socket to the client
20:30 < diablo> groundwater, but its strange the connection lives and it tries the request again
20:31 < groundwater> diablo: that sounds like some browser/jquery behaviour i'm not familiar with
20:33 < diablo> groundwater, yeah, still trying to dig jquery and not much help with docs.. does the below debug thing makes any sense to you ? 
20:33 < diablo> POST request on /sleep
20:33 < diablo> !!! sleeping
20:33 < diablo> NET: _onTimeout
20:33 < diablo> NET: destroy
20:33 < diablo> NET: close
20:33 < diablo> HTTP: server socket close
20:33 < diablo> NET: onconnection
20:33 < diablo> HTTP: SERVER new http connection
20:33 < diablo> HTTP: server response shouldKeepAlive: true
20:33 < diablo> POST request on /sleep
20:33 < diablo> !!! sleeping
20:33 < diablo> NET: _onTimeout         
20:33 < diablo> NET: destroy
20:33 < diablo> NET: close
20:33 < diablo> HTTP: server socket close
20:33 < `3rdEden> kbkbkbkb
20:34 < `3rdEden> ;o
20:34 < diablo> groundwater, that is request "fork" I was talking about
20:34 < groundwater> well, there are two connections being made
20:34 < groundwater> what is your end goal here?
20:35 < groundwater> there is no end to the rabbit hole
20:36 < diablo> groundwater, actually it became a trouble with something I'm working on and when I drilled it down, ended up discovering this weird thing.. like if that request thing is in a loop, the timeouts add so much and multiple calls are made
20:36 < diablo> groundwater, a genuine timeout like some n/w problem for example
20:37 < groundwater> diablo: i am surprised the default behaviour of a POST is to re-try
20:37 < groundwater> diablo: is it query of the browser?
20:37 < groundwater> jquery*
20:38 < diablo> groundwater, yeah looks like it, when I used curl with keepalive set in the headers it timed out exactly at 120secs as expected, no retries
20:39 < diablo> groundwater, but trying hard to confirm if its jquery coz nothing much is logged in there
20:40 < groundwater> try asking #jquery
20:42 < diablo> groundwater, yeah waiting there for someone to look it up already :) thanks a bunch to you again, I'll keep digging
20:42 < groundwater> np, good luck
20:52 < jbelcher> Hi all—anyone have experience with static site generators? Particularly ones with a blog? Looking for recommendations. 
20:53 < chapel> jbelcher: I've been messing with wintersmith
20:53 < chapel> it doesn't have a ton of features as far as blog stuff, but is very customizable 
20:54 < jbelcher> chapel: yeah it seems to be a good option for static sites in general. the blog piece seems to be the catch for most available libraries but maybe there isn't a good solution in node yet. 
20:55 < chapel> jbelcher: well Im working on blog stuff with wintersmith, so I will probably release anything I can
20:55 < jbelcher> chapel: that sounds good. How are you handling the dynamic interlinking right now? 
20:56 < chapel> as in?
20:56 < chapel> linking between blog posts?
20:56 < jbelcher> yeah
20:57 < chapel> well I guess it depends on what you're looking for
20:58 < jbelcher> yeah—really pretty simple to start out. Some sort of paginated summary page, some sort of big list archive page
20:58 < jbelcher> articles themselves can just be leaves 
20:58 < chapel> well you have access to everything in each template if you want
20:59 < chapel> well for the most part
21:03 < chapel> I was even able to make a json api like output
21:05 < jbelcher> chapel: so you're primarily sticking to the json-based article files? 
21:06 < chapel> well, no, doing html but I wanted json output for specific instances
21:07 < jbelcher> chapel: thanks for the recommendation. I think I'll kick the tires with it more. 
21:07 < chapel> it has some good plugins for js/css handling
21:07 < chapel> and has flexible templates
21:13 < MI6> joyent/libuv: Ben Noordhuis master * cdf69db : build: add distclean target to out-of-tree builds (+4 more commits) - http://git.io/reFNeQ
21:20 < Guest28677> photoshop
21:24 < MI6> joyent/libuv: Ben Noordhuis master * 1821bba : test: fix tap output check  Only report as an error when status != 0.  St - http://git.io/t77_hA
21:28 -!- mode/#Node.js [+o TooTallNate] by ChanServ
21:31 < holzp> will node be fully accepted before it has some big-ass content management framework?
21:31 < ericfwd> anyone have experience implementing with binary tcp protocols with SSL?
21:32 < holzp> ericfwd, too many "with"s I cannot parse that 
21:33 < ericfwd> haha, to rephrase that... anyone have experience with implementing binary tcp protocols using SSL?
21:34 < ericfwd> was hoping to find a solid module out there already, but no luck, looking like I'll have to build one (there are some decent examples implemented for other purposes like the Mongo driver)
21:34 < holzp> SSl operates over TCP, do you mean implementing TCP or your own Transmission Control Protocol?
21:36 < ericfwd> I mean implementing a TCP protocol with proper buffering (the buffering/delimiting messages part is what I'm missing out of the box with the 'net' module)
21:36 < holzp> you would have to do that at a lower level to do it properly no?
21:37 < ericfwd> i don't think so no, the node MongoDB driver implements it, but I could be wrong since I haven't started on it yet
21:38 < ericfwd> but I was hoping someone had some experience to share on it before I started
21:40 < holzp> Implementing tcp is a balls deep sort of programming assignment. I wish you the best of luck.
21:40 <@isaacbw> delimiting messages is pretty trivial
21:40 <@isaacbw> holzp: I think he means writing a protocol over tcp
21:44 < holzp> well that is nothing, but I took it as TCP over SSL which is over TCP which is better than  a weekend in Vegas for mindbending.
21:44 <@isaacbw> heh
21:47 < ericfwd> isaacbw: exactly what I meant, it does seem fairly trivial and I'm looking forward to writing it, but I was surprised not to find a well adopted existing module for it
21:47 <@isaacbw> it's so trivial that there's no point in a module, really
21:47 <@isaacbw> I think there is one though
21:49 < holzp> at the most basic every message is: COMMAND|DATA
21:49 < ericfwd> couldn't find one in my search, but a few SO questions
21:49 < holzp> and you roll from there
21:49 < holzp> if you cant find an answer from you search its either: trivial or impossible
21:49 < holzp> we lean towards the former
21:50 < ericfwd> ok point taken
21:50 < holzp> you just need to write comething that deals with messages, and what happens is a message goes missing, and also, what defines 'missing'
21:51 < holzp> http can probably be your transmission you just need to build some sort of message accountability into it
21:52 < MI6> joyent/libuv: Timothy J Fontaine master * 49d2ae3 : test: fix tap output even when ok but have output - http://git.io/Iuj6_Q
21:52 < ericfwd> there will be a lot of messages in this case so I don't want to deal with http overhead
21:55 < holzp> http is not a lot of overhead, plus using http give you access to *thousands* of tools and optimizations which do not exist in erictcp
21:55 < holzp> just think about it, everyone suffers from a little bit of NIH-itis
21:56 < holzp> http is the functional language of the internet, so think about it. 
21:56 < holzp> I only say this because of mistakes i've made
21:56 -!- mode/#Node.js [+o sblom] by ChanServ
21:57 < ericfwd> i hear that for sure
21:58 < holzp> http powers so much, worth condsidering, it had weathered much.
22:04 < mscdex> http has a lot of overhead if you are sending small POSTs
22:08 < ericfwd> it does, and in this case throughput is a key goal
22:08 < s5fs> ericfwd: why not udp then?
22:09 < holzp> how small
22:09 < ericfwd> good question, i haven't researched the difference really
22:11 < s5fs> ericfwd: i'm on a team writing middleware for routing messages on a radio network, nearly entirely udp-based. messages are bit-packed and quite small. udp is used to reduce latency, but your apps have to be smarter to handle lost data (ie, request re-transmission)
22:12 < ericfwd> interesting, quick search shows that message order can be a problem with upd, are you dealing with that?
22:12 < CoverSlide> could be written into the protocol
22:12 < s5fs> ericfwd: yes, the apps have to manage all that crap themselves
22:12 < s5fs> CoverSlide: precisely, messages have sequence numbers
22:13 < ericfwd> so the client might send an order id and the server has to apply that
22:13 < tongcx> hi guys, do you prefer postModal.jade or post_modal.jade?
22:13 < ericfwd> have any idea what the performance difference might be?
22:13 < s5fs> ericfwd: sequence numbers are mainly used for ensuring you received the whole message. if not, you broadcast and ask for a retransmission.
22:14 < s5fs> ericfwd: additionally, most of the data is position information, so the next messages is 'more true' than the one you probably lost, if that makes any sense.
22:16 < s5fs> ericfwd: you'll have to do you own performance testing, but you could start by writing your basic messaging libraries and then shooting them out over tcp and udp, then check the message size. i still have no idea what your transport mechanism is, but i'm assuming it's not radio ;-)
22:16 < CoverSlide> i assume it's butterflies
22:17 < EyePulp> any recommended express boilerplates out there?  Totally new to express, but I've been building node apps for a while (the pre cluster era!).  It'll be likely using http + web sockets, mongoose, redis, etc, but I'm just looking for a reasonable starting point with file layouts and basic bits.
22:17 < CoverSlide> boilerplates suck
22:18 < EyePulp> heh.
22:18 < CoverSlide> the express executable starts up a farily reasonable bolerplate
22:18 < EyePulp> CoverSlide: does it?
22:18  * EyePulp goes to read more
22:19 < ericfwd> s5fs: thanks for the tips, i'll have to look into it further -- transport is over a private network, mostly textual data
22:19 < CoverSlide> oh so telegraph?
22:19 < holzp> good luck dude!
22:20 < CoverSlide> bandwidth is based on the speed of the operator's wrist
22:21 < Gambit--> CoverSlide: only if you're doing it wrong.  Index finger twitching, more like.
22:22 < wedgeV> hi, i'm using the "request" node.js library, and i'm doing request('http://....').pipe(res); which crashes the whole node process if that request times out. how do i handle those exceptions?
22:22 < holzp> what if the operator sclicked at the speed of light? 
22:22 < s5fs> ericfwd: happy to help, best of luck!
22:23 < CoverSlide> wedgeV: listen for an 'error' event
22:23 < wedgeV> i'm using express and have app.use(function(err,req,res,next)….. but that doesn't catch it
22:23 < CoverSlide> request().on('error',function ...).pipe(res)
22:23 < wedgeV> awesome, thanks!
22:36 < tongcx> hi guys, if i want to use some part of "bootstrap.css" in my less, what should i do?
22:36 < tongcx> shoud i import it
22:36 < tongcx> ?
22:40 < DarkArgon> use the bootstrap.less
22:40 < DarkArgon> and comment out what you don't need
22:40 < DarkArgon> then import it
22:41 < tongcx> DarkArgon: thanks
22:44 < beeyah> semateos
22:46 < MI6> joyent/node: Ben Noordhuis master * c6e2db2 : crypto: clear error stack  Clear OpenSSL's error stack on return from Con - http://git.io/4lBdPg
22:50 < diminoten> is there a "correct" way to recursively parse a json object into a string?  JSON.parse() isn't parsing objects below the first "level"
22:51 < diminoten> just doing console.log(obj) seems to be more effective
22:51 < diminoten> but are there dangers to doing it that way?
22:51 < diminoten> instead of console.log(JSON.parse(obj))
22:53 < icodeforlove> diminoten if you use console.log you don't have to worry about circular structure's
22:53 < diminoten> it does that for me?  cool
22:54 < icodeforlove> diminoten do you have an example string?
22:54 < diminoten> no
22:54 < diminoten> well
22:54 < icodeforlove> http://hastebin.com/
22:55 < diminoten> yeah I think it's as simple as {'foo':[{'bar':'bing'}]}
22:56 < groundwater> diminoten: JSON.stringify()
22:56 < diminoten> ah
22:57 < groundwater> diminoten: but as icodeforlove mentioned, it will throw on circular objects
22:57 < diminoten> stringify gets... nasty
22:57 < diminoten> lots of 
22:57 < diminoten> \t\t\t\t\t\t etc
23:00 < slicky> util.inspect?
23:01 < diminoten> what voodoo does console.log perform on objects to make them printable
23:01 < mscdex> diminoten: tostring?
23:02 < diminoten> heh yeah
23:02 < mscdex> console.dir() uses inspect
23:02 < Kakera> >> console.log({toString: function() { return 'hi'; }});
23:02 < purr> Kakera: undefined; Console: {toString: function () { return 'hi'; }}
23:03 < mscdex> ok, it looks like console.log() uses inspect indirectly
23:04 < mscdex> util.format uses inspect
23:04 < mscdex> for non-strings
23:04 < icodeforlove> diminoten:  JSON.stringify({'foo':[{'bar':'bing'}]}, null, '  ')
23:04 < diminoten> ah okay
23:05 < icodeforlove> diminoten:  but it needs to be JSON, you should not throw random objects into that or you will have circular issues
23:05 < diminoten> yeah
23:05 < diminoten> console.log() is more robust in that way right?
23:06 < mscdex> util.inspect has nothing to do with json
23:07 < CoverSlide> >>JSON.stringify({'foo':[{'bar':'bing'}]}, null, 4)
23:07 < purr> CoverSlide: (string) '{\n    "foo": [\n        {\n            "bar": "bing"\n        }\n    ]\n}'
23:08 < base698> diminoten: JSON.stringify(Math.random())// :)
23:08 < diminoten> >>JSON.stringify(Math.random())// :)
23:08 < purr> diminoten: (string) '0.13097044546157122'
23:08 < icodeforlove> ok so you can do console.log(require('util').inspect(object))
23:09 < context> why do i get warnings of unmet dependencies, needs coffee-script@latest but will load 1.5.0 ... which IS the latest
23:09 < diminoten> hehe
23:09 < icodeforlove> >> console.log(require('util').inspect({'foo':[{'bar':'bing'}]}))
23:09 < purr> icodeforlove: ReferenceError: require is not defined
23:09 < icodeforlove> :(
23:18 < ericelliott> how do I proxy from http to https with http-proxy?
23:19 < ChrisPartridge> ericelliott: http to https?
23:19 < ChrisPartridge> ericelliott: do you mean https to http?
23:20 < ericelliott> No, I don't mean https to http
23:20 < ericelliott> I'm proxying api calls in my app. The API is strictly HTTPS
23:20 < ericelliott> the main app is HTTP.
23:21 < ericelliott> browser hits main app over http. If it's an api route, the app proxys to the API over https.
23:22 < dunpeal> Hey. I want to write a log-parsing visualizer. Are there libraries for node.js that would help me efficiently parse, process (make statistical calculations) and visualize the results?
23:24 < mscdex> icodeforlove: it's only a v8 bot, not a node bot
23:26 < icodeforlove> @mscdex where is the node bot in the node channel?
23:29 < context> so.. does express-resource not expect to ever be called via browser, or is there a way to call update with a POST (since browsers dont allow PUT)
23:30 < mscdex> icodeforlove: there is none
23:30 < context> or express itself i guess
23:30 < echo> >_> Browsers don't allow put?
23:30 < ChrisPartridge> context: PUT works fine with XMLHttpRequest in most browsers, pretty sure standard HTML forms only allow POST though
23:30 < ChrisPartridge> but you can override the method anyway..
23:31 < context> chrispartridge: how so with express? im a little new :x
23:31 < ChrisPartridge> context: pretty sure express has a method override middleware, which basically means you send a post request with an additional paramater (such as _method), and the server will translate it to a "put" request
23:31 < context> gotcha
23:32 < ChrisPartridge> might need to look @ connect docs for method override
23:32 < context> ahh i found it
23:32 < context> thnx
23:32 < ChrisPartridge> yw
23:33 < context> err found it in guide not api :x
23:33 < context> or source 
23:34 < context> oh its apart of connect
23:35 < dhci> I installed and linked querystring module but I can't get querystring.parse or qs.parse to run. It's still undefined. help?
23:37 < dhci> specifically I have postDATA coming in via chunk form, which I can log and I see its there. But to break it apart should I use something like strtok or the previously described querystring or qs.parse functions?
23:40 < dhci> can someone show me a paste.org example snippet for fetching a name value pair from submitted post data? I was hoping to just get to it in object form for example, and respond with a specific request.
23:44 < ChrisPartridge> dhci: look at bodyparser in connect
--- Log closed Thu Feb 28 00:00:00 2013
