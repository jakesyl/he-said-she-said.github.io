--- Log opened Mon Aug 06 00:00:30 2012
00:00 < dmilith> damn.. but I was dissapointed this year (it's my 8th time there)..
00:01 < dmilith> there're lot of angry trolls there.. not too inteligent nor communicative
00:02 < dmilith> lot of kids
00:02 < dmilith> having fun with drinking beer just because..
00:02 < dmilith> anyway, offtopic detected!
00:03 < dazld> itd be nice to have an editor that can autocomplete
00:05 < jetienne> q. how to install all the packages dependancies in package.json
00:05 < dmilith> jetienne: npm install
00:05 < dmilith> and rtfm ;]
00:05 < jetienne> dmilith: it will install in local folder ?
00:05 < dmilith> yes
00:05 < dmilith> -g will do opossite
00:05 < purr> dmilith: The Opposite - Wikipedia, the free encyclopedia <http://en.wikipedia.org/wiki/The_Opposite>
00:06 < dmilith> ;>
00:06 < jetienne> dmilith: excelent. thanks
00:06 < jetienne> anyway to improve the readability of the stacktrace notified on exception ?
00:08 < d4rklit3> does anyone know what env var express uses to decide its configuration?
00:10  * jetienne is trying node-spdy
00:11 < jetienne> https://github.com/indutny/node-spdy/blob/master/examples/twitlog/autorestart.js hehe "if it fails, just relaunch" :)
00:16  * dmilith is using nodemon
00:27 < samholmes> What's a good email module?
00:27 <@maxogden> haraka
00:28 < samholmes> I've been using mailer, but went back to the project page on github and found it to be depreciated
00:28 < samholmes> >.<
00:28 < Raynos> samholmes: use nodemailer
00:29 < samholmes> That's the one they recommended, yes. But, I was wondering if there were any other, potentially better and more recommended, one that I'm not aware of?
00:36 < WarheadsSE> maxogden: isnt haraka a full email server?
00:36 < dazld> it's an smtp server, i think
00:36  * WarheadsSE is fightin with v8 compiles.. again
00:36 < WarheadsSE> v8 & arm.. very annoying
00:46 < Randomachiever> Is it wise to run multiple servers?
00:46 < samholmes> I don't think I'll need a full SMTP server to just do simple weekly update and notification emails?
00:46 < samholmes> Randomachiever: For what?
00:46 < mmalecki> amccloud: use some service like sendgrid
00:46 < dazld> or gmail
00:46 < dazld> get a gmail account, connect to it, send stuff, job done
00:46 < amccloud> mmalecki: ?
00:46 <@konobi> or don't
00:47 < Randomachiever> samholmes, I am still trying to understand how Node.js works. I have one node-http-proxy right now that has the server all in one file, would it be better to run two seperate .js files
00:47 < mmalecki> er, type. samholmes ^
00:47 < mmalecki> *typo
00:48 < amccloud> there is also postmarkapp
00:49 < Randomachiever> Proxy listening to 80 and server listening to 8080. I only run the win file to do two things. What is the proper way of doing it?
00:49 <@konobi> mailchimp too
00:49 < samholmes> Randomachiever: I doesn't matter. You can put everything in one process if you want, but then it wouldn't scale very well. If you're running something small and simple, then one process if fine. But, if you want something that will scale, you'll have to think about architecting your application to load-balance accross multiple servers.
00:51 < dazld> http://www.flickr.com/photos/nasahqphoto/7720328304/in/set-72157630921897916
00:51 < Randomachiever> So multiple processes, will they have to be on thier own ports? Or can the communitcate without listening to ports?
00:52 < Randomachiever> Or would you just require the file you need?
00:52 < Randomachiever> I come from php, therefore I am noob
00:52 < dazld> -.-
00:52 < dazld> php != noob
00:53 < Randomachiever> dazld, sometimes I wished I picked up Javascript with PHP, but I was very narrow minded
00:53 < dazld> they are totally, totally different beasts
00:53 < dazld> about yoru question, in tcp you can only have one process listening on a port at time
00:54 < dazld> er app, whatever
00:54 < Randomachiever> Would you build additions and just require them? I would like to do it right the first time, even if its a slow learning process
00:54 < Randomachiever> additional js*
00:54 < dazld> what are you trying to do?
00:55 < dazld> wasnt really paying attention, sorry :p
00:55 < Randomachiever> The main workload will be done with PHP and Apache, I am only using Node.js for Notifications and instant messaging
00:55 < dazld> ok..
00:56 < Randomachiever> Thats pretty much it, nothing large scale
00:57 < dazld> define an api for communicating with your php stack
00:57 < dazld> make it simple at first, and see where it takes you i guess
00:58 < Randomachiever> dazld Ok, Makes sence, but as you said before, the nond-http-proxy is ok to run with the server, they are listening to different ports. I was just courious about how normal developers do it
00:58 < Raynos> AviMarcus: I have done some research on DI
00:58 < Randomachiever> !normal I mean Knowledgable
00:58 < dazld> no one knows ;)
00:58 < dazld> i think everyone just makes it up as they go along
00:59 < dazld> but hey
00:59 < Randomachiever> Heard that, thanks for your time dazld 
01:03 < dazld> im being a bit glib
01:03 < dazld> but you get where i'm coming from
01:04 < SubStack> glibc
01:04 < dazld> :3
01:07 < powerc9000> hi!
01:09 < WarheadsSE> anyone want to see a cute intermittent v8 bug :P >.<
01:11 < mscdex> WarheadsSE: ME!
01:11 < rvagg> you have a libuv bug, don't be greedy mscdex
01:12 < mscdex> libuv != v8
01:12 < mscdex> ;-)
01:12 < WarheadsSE> http://pastie.org/private/qnw2whgaao0uograndwllq
01:12 < WarheadsSE> happens ~ 1 in 4 spins
01:12 < WarheadsSE> im comiling the full debug chain now
01:12 < ProblemEmitter> Testing mobile irc client...
01:13 < WarheadsSE> well at ^ sorta worked.
01:15 < samholmes> nodemailer doesn't come with templating out of the box.
01:16 <@konobi> samholmes: i'd really suggest trying one of those services instead
01:17 <@konobi> much less headache and a bunch of for-free features
01:17 < samholmes> konobi: Like sendmail?
01:17 <@konobi> no... like mailchimp
01:18 < samholmes> Doesn't it cost money?
01:18 <@konobi> only once you hit a certain volume
01:20 < samholmes> Well, couldn't I look into these services later? I noticed nodemailer has a sendmail services option, so I'm assuming switching over to these services will be fairly trivial.
01:20 < chilts> samholmes: yeah, most of them have an SMTP interface as well as a Web API, so you should be fine
01:21 < samholmes> Right, so I'll just use my own SMTP server for now. I just need to develop the emailing part of my app and the templates, then I'll switch for production.
01:21 <@konobi> samholmes: i'd just avoid it... gmail will block you pretty quick if you start bulk mailing, running your own SMTP server is frought with pain... then you get into regulatory compliance with CANSPAM, privacy issues with the EU... etc, etc
01:21 < sx> Hi, so I ran a node.js script that I think had some kind of memory leak or IO problem. I think that my fs.writefile functions were fired quickly and without a corresponding close function.
01:21 < sx> Now, I cannot list the contents of the directory, the system hangs
01:22 < sx> even after a hard reboot.
01:22 < sx> ubuntu server.
01:22 < sx> anyone have any idea?
01:22 < chilts> sx: has it made thousands of files in the one director?
01:22 < sx> it is quite possible
01:22 < sx> I can't see them
01:22 < chilts> so even 'ls dir/' doesn't work?
01:23 < samholmes> konobi: Even if I switch to sendmail or mailchimp, I will still be blocked?
01:23 < sx> chilts: correct
01:23 < chilts> wow
01:23 < pringlescan> Does it make sense to do string processing (looping over large arrays of data, checking if one array contains an item) async? Or will only I/O tasks (not CPU bound ones) benefit from doing so… since it will all run on one thread/core I'm guessing it doesn't help to use callbacks for these functions… rather just to return the result?
01:23 < chilts> erm, can you delete the directory and start again?
01:23 < deoxxa> sx: try `find /path/to/dir'
01:23 < chilts> yeah, or that
01:23 <@konobi> samholmes: nope... because they maintain a good relationship with the antispam folks
01:23 < deoxxa> maybe `find /path/to/dir | head'
01:24 < sx> #: find /etc/cron/logs | head     --> ok this worked after several seconds of lag
01:24 <@konobi> (mailchimp that is)
01:24 < samholmes> konobi: So, I'll just develop with my own SMTP server (so I can test without sending emails through these services), then I'll switch later. ;)
01:24  * rvagg can recommend postmarkapp for mail handling, very good service, excellent API
01:24 < sx> maybe I should just delete all of the logs?  
01:25 < sx> is there a command to count the # of files in the directory
01:25 < samholmes> Is mailchimp only for newsletters? I need to send notification emails too.
01:25 < deoxxa> sx: it sounds like you have a -lot- of files there
01:25 < sx> yes I think that sounds right
01:25 < rvagg> postmark samholmes
01:25 < deoxxa> sx: are they important? or did you create them by accident?
01:25 < sx> i think I can get rid of them
01:26 < sx> "rm -r /path/to/dir" ?
01:26 < pringlescan> If you're on AWS I think they have mail/notification options that each SMS/e-mail counts as a credit.
01:26 < deoxxa> ok, the best way to delete them will be with find. you'll want to do `find /path/tpo/files -type f -delete'. rm -r will take a lot longer because it has to load the whole list before it starts working.
01:26 < sx> thanks, i will try that now!
01:26 < deoxxa> good luck!
01:27 <@konobi> samholmes: there are a bunch of services like mailchimp... use whatever one fits best
01:27 < sx>  ok system is working. let's see how long this takes.
01:28 < deoxxa> sx: note that the `find' method will still take a long time... you'll just have to wait it out, haha
01:28 < sx> yeah I think it's pretty funny. I should have tried to get a file count for curiosity's sake
01:29 < deoxxa> i've done this exact thing before
01:29 < sx> maybe i can rev. calculate it by # of secs it takes
01:29 < deoxxa> ha
01:29 < deoxxa> you could find out how many inodes you've got taken up
01:29 < deoxxa> then compare it with afterwards
01:29 < sx> will that command delete directories recursively?
01:30 < sx> there was another dir in that dir
01:30 < deoxxa> only files
01:30 < deoxxa> but yes, it's recursive
01:30 < deoxxa> it'll leave all the directories in place
01:30 < dazld> konobi: why not gmail?
01:30 < sx> so it will delete files in both dirs
01:30 < sx> ok
01:30 < sx> cool
01:30 <@konobi> dazld: they'll block you after a while
01:30 < dazld> truly? i've never had that problem..
01:30 <@konobi> depends on volume
01:30 < dazld> but wasn't sending to lots of different people
01:34 < pringlescan> That's wild… I'm trying to find first and last names in business names to figure out if they're "doing business as" their names… I was able to match 50% of last names using census data. I went on Wikipedia and grabbed the common last name suffixes and made a regular expression and that matched over 50% of the names that weren't matched by the census list.
01:34 < samholmes> Amazon SES seems cheapest
01:36 <@konobi> samholmes: some of the other ones are good because you can get analytics on responses, A/B testing, regulatory compliance, etc.
01:36 < samholmes> what's A/B and regulatory compliance?
01:36 < dazld> it's for newsletters
01:36 <@konobi> CANSPAM
01:37 < dazld> where you want to gauge how well your message is working
01:37 <@konobi> A/B testing is ways of trying out different ways of delivering info to see which works better
01:37 < dazld> this ^
01:37 < d4rklit3> what is a good event framework for js
01:38 < d4rklit3> would like to have something close to how AS3 is
01:38 < sx> deoxxa: 10mins deep
01:38 < d4rklit3> where i can send events and bubble them up through inheritance chains
01:39 < Randomachiever> isn't node.js an event framework?
01:39 < Randomachiever> Node.js. Event-driven I/O framework for server-side JavaScript.
01:39 < deoxxa> d4rklit3: EventEmitter - it's part of core
01:40 < d4rklit3> i actually need to use it on the front end
01:40 < d4rklit3> i forgot to mention that
01:40 < cainus> AS3 doesn't care about inheritance chains for events
01:40 < deoxxa> there's client side EventEmitter implementations
01:41 < cainus> or backbone comes with one
01:42 < d4rklit3> cainus what are you talking about?
01:42 < cainus> inheritance has nothing to do w as3 events
01:42 < d4rklit3> unless you use a singleton pattern or dependency injection
01:43 < d4rklit3> events are you usually bubbled through inherited objects
01:44 < cainus> you don't inherit objects... you inherit classes
01:44 < d4rklit3> i dont think we are talking about the same thing
01:44 < dazld> backbone looks very cool
01:44 < cainus> and classes don't emit events :)
01:44 < dazld> i was thinking about using it for phonegap style projects
01:45 < dazld> but i was worried about the performance
01:45 <@konobi> xui
01:45 < dazld> like, if i update some data, and it triggers a huge chain of dom modifications
01:45 < cainus> angular is pretty neato too
01:45 < dazld> that kind of thing on weak devices is not fun
01:45 < dazld> angular...?
01:46 < cainus> angular.js
01:46 <@konobi> harpjs should be interesting too
01:46 < d4rklit3> cainus: i see what your saying
01:46 < d4rklit3> i meant something different
01:46 < cainus> angular takes a lot of the boilerplate out clientside mvc
01:46 < d4rklit3> just like being able to bubble events through a child tree
01:46 < d4rklit3> or whatever
01:47 < d4rklit3> backbone/angular are too heavy for me
01:47 < samholmes> Why when I go to install nodemailer module using powershell, I get an error from npm saying I need to run as roo/administrator in order to install; I don't have to do this with other npm modules.
01:47 < dazld> how's the performance on complex apps?
01:47 < d4rklit3> im making a game thats all canvas
01:47 < d4rklit3> i really don't need any of those features
01:48 < dazld> I did some stuff with opera widgets a a while ago, and learnt to be really careful with doing too much at once
01:48 < cainus> d4rklit3: probably better to ask in #javascript or checkout some js-specific game libs
01:48 < cainus> d4rklit3: might be tough to find a full hierarchical event system in a light framework though
01:49 < d4rklit3> im using createjs 
01:49 < dazld> konobi: i can't find harp.js anywhere.. what is it?
01:49 < d4rklit3> but it doesn't seem to have a solid event system in it
01:49 <@konobi> dazld: chloi.io
01:51 < dazld> looks like the harpjs.com domain is down
01:53 < dazld> xui as well, also interesting
01:54 < dazld> it mentions being built for high-latency dom operations
01:55 < dazld> ie, just very lightweight..?
01:57 <@konobi> yup... the source is very readable too
01:57 < dazld> was just looking at it ;)
01:58 < dazld> i guess no amount of optimising will fix a buggy runtime
02:02 < dazld> would angular play nicely with require?
02:03 < cainus> dazld: I don't see why not
02:03 < owen1> is there an rss feed for http://howtonode.org/
02:03 < owen1> ?
02:16 < llrcombs> does Node assign an identifier to each HTTP server request that I can use?
02:16 < llrcombs> I need to make an object containing some requests and remove elements from it when requests close
02:20 < dazld> https://github.com/ifandelse/postal.js <3
02:21 < dazld> this concept of messaging buses is brilliant
02:22 < samholmes> Does node-email-templates not work on Windows? https://github.com/niftylettuce/node-email-templates/issues/4
02:25 < WarheadsSE> samholmes: wait for the owner to respond to the issue :)
02:25 < Raynos> how do I return errors in a third party library when I dont have a callback?
02:26 < WarheadsSE> return value?
02:26 < Raynos> return value doesnt work either
02:27 < Raynos> ill give a link ot the code soon
02:27 < Raynos> its actually a route function
02:27  * WarheadsSE wont be reading it
02:29 < Raynos> I don't know how to handle this error here ( https://github.com/Raynos/multi-channel-mdm/blob/master/index.js#L21 )
02:30 < Raynos> it's basically the issue of not having any way to return or bubble it up other then throwing it
02:30 < Raynos> When you have no option but to throw, should you throw or should you log?
02:37 < chilts> llrcombs: https://npmjs.org/package/connect-uuid
02:37 < chilts> does that help?
02:37 < sx> deoxxa: it finished!
02:38 < Raynos> Does anyone have a opinion on writing an npm module which forces users to bind the module in a domain to catch thrown errors?
02:38 < deoxxa> haha sx, nice
02:39 < deoxxa> how long was that in total, sx? like an hour and a bit?
02:39 < sx> deoxxa: i didn't check for like 30 mins so it could have finished any time there.  it took at least 20m
02:39 < deoxxa> heh
02:41 < chilts> samholmes: if you wanna try Amazon SES, try using my lib AwsSum : https://github.com/appsattic/node-awssum/
02:41 < samholmes> chilts: I'll keep it in mind. Either I go with Amazon, sendgrid, mailchimp or postmark.
02:42 < SomeoneWeird> for?
02:43 < samholmes> SomeoneWeird: Hmm?
02:43 < SomeoneWeird> for emailing?
02:43 < SomeoneWeird> use google
02:43 < SomeoneWeird> lol
02:43 < owen1> ;w
02:45 < llrcombs> chilts: sorry about the late reply; I'm not using connect. Is my best option just to generate a GUID for each request?
02:46 < chilts> yeah, or just generate any kind of random number (with sufficient enough space to not cause likely collisions)
02:46 < chilts> or random string
02:48 < chilts> I've used passgen in the past to do a similar thing
03:06 < johnsh> hello
03:10 < mscdex> yo
03:44 < llrcombs> does an HTTP server request's "close" event fire when an EventSource disconnects?
03:44 < llrcombs> the docs make it looks like that happens due to an error
03:46 < llrcombs> also, on OSX, I'm getting a "rename" event when a new file is created. WTF?
03:49 < llrcombs> (using fs.watch)
03:53 < samholmes> WarheadsSE: He responded, but eh, idk?
03:57 < mscdex> llrcombs: 'close' fires when the underlying fd is completely closed (e.g. after an error, TCP RST is received, etc)
03:58 < mscdex> 'end' fires when TCP FIN is received
03:59 < llrcombs> so "end" would probably indicate that the client is no longer listening for more events?
04:41 < Sri19> what libraries to use for in-browser javascript tests? i would like nice buttons "run this test" .. "run all tests" .. and colorful reports (=
04:45 < Sri19> http://qunitjs.com/
04:46 < Sri19> i found qunit .. if its the devil, tell me now
04:48 < prettyrobots> Where's that thing where you probe for a port that's available?
04:49 < mappum> Is there a way to use PKCS1 padding with the node crypto module rather than PKCS5?
05:23 < ProLoser|Mac> hello
05:23 < ProLoser|Mac> anyone here use testacular?
05:26 <@Nexxy> ProLoser|Mac, No.
05:28 < milani> join #libuv
05:28 < milani> oops. sorry.
05:28 < gkatsev> http://www.nasa.gov/externalflash/mars/curiosity_news3.html
05:28 < ProLoser|Mac> what is that channel?
05:28 < gkatsev> nasa
05:28 < gkatsev> which channel?
05:33 < gkatsev> https://twitter.com/MarsCuriosity/status/232348380431544320
05:59 < Sri19> ok my interview starts in 2 mins ... wish me luck
05:59 < Raynos> is there a module do reconnects in a slooping fashion
06:00 < Raynos> like every second for ths first 10 then every 2 seconds, 5, 10 etc
06:00 < Raynos> i swear substack wrote this already
06:01 < EvilPacket> Sri19: good luck.
06:05 < Raynos> what I was looking for is called backoff
06:05 < Raynos> and there are tons of modules for it
06:33 < samholmes> I don't understand why my timestamps are always so screwed up?
06:34 < samholmes> I store the timestamps in the DB, retrieve them, then use them on the front-end but they're always calculated all wrongly.
06:34 < pringlescan> Timezone issues?
06:34 < pringlescan> Samholmes, javascript dates are measured in milliseconds, some databases might store them in seconds.
06:35 < samholmes> pringlescan: I'm using node-mysql, and it converts timestamp objects to Dates
06:35 < samholmes> It seems like a timezone issue, but I'm confused on where the issue is
06:35 < samholmes> is it on the server
06:35 < samholmes> is it with mysql
06:35 < samholmes> Is it with my script. x___x
06:36 < pringlescan> Set all your servers timezones and locales to something known/standard (UTC) then format the timezone object using the browser's locale or geoip for timezone.
06:37 < pringlescan> always use server time when storing to the DB, if you take time from the client, you'll always have to know what timezone they're using
06:37 <@konobi> process.env.TZ = ...
06:37 < pringlescan> make sure you sync it too if you're in the cloud, virtual machines tend to keep time rather badly
06:39 < samholmes> I set my timezone settings to UTC on my server. When I run `date` I get "Mon Aug  6 06:39:26 UTC 2012
06:39 < samholmes> "
06:40  * samholmes loves pringles btw
06:41 < MethodNotFound> It was a joke from work, an older woman I worked with decided my johnson must be the size of a pringle's can because how else could somebody who wasn't tall, didn't know sports and was a computer geek got with so many ladies. So she said "It must be like a Pringle's can!"… it's not, but it's been my handle on IRC ever since. 
06:41 < samholmes> But, `SELECT NOW()` in mysql gives '2012-08-06 10:40:52'
06:41 < MethodNotFound> have you restarted mysql since you set your timezone?
06:41 < samholmes> MethodNotFound: No.
06:42 < MethodNotFound> http://dev.mysql.com/doc/refman//5.5/en/time-zone-support.html
06:42 < MethodNotFound> SELECT @@global.time_zone, @@session.time_zone; what does that return?
06:44 < samholmes>  SYSTEM, SYSTEM
06:45 < samholmes> Works now that I restarted it. :D
06:47 < samholmes> Finally fixed that shit.
06:47 < samholmes> Now I'll just convert everything to UTC cause that's what I should do. ;P
06:47 < samholmes> Thanks fellas
06:48 < MethodNotFound> No problem. I can't believe I helped someone in #node.js, and it didn't even really have to do with Javascript ;-)
06:51 < rvagg> I prefer to keep my servers in localtime and convert to appropriate user timezones, managing servers in UTC is a pain in the butt cause it does your head in
06:52 <@konobi> rvagg: UTC and then set TZ in bashrc... done
06:53 < rvagg> still, systems events are all in UTC then, there's no problem with working in localtime
06:54 <@konobi> depending on where you are in the world at any one time (also if you have many users in different timezones)
06:55 < rvagg> your services have to convert anyway, so whether it's UTC or some other offset it's the same amount of work
06:55 < amagee> in the node.js repl I can use the up/down arrows to cycle between previous commands, but the history seems to be lost when i close the repl and open it again.. is there some way to keep it across sessions?
06:56 < rvagg> amagee: there's some more advanced versions of the repl that do things like that, names escape me at the moment
06:56 < rvagg> ah, here's one amagee: https://github.com/Benvie/Node.js-Ultra-REPL
06:57 < rvagg> I'm not sure it keeps history but I imagine it'd be an obvious feature of an advanced repl
06:57 < amagee> hehe.. i would have thought it'd be an obvious feature of a basic repl :)
06:57 < rvagg> just not a priority I think
06:57 < rvagg> you could submit a pull request for it if you wanted it bad enough, it's all in JS
06:58 < amagee> hmm might do that if i have time
06:58 < amagee> looking at ultra-repl atm
07:03 < samholmes> Anyone have any insight on this https://github.com/niftylettuce/node-email-templates/issues/4
07:03 < samholmes> What might be causing this problem?
07:03 < amagee> ultra-repl seems to be pretty much completely broken for me
07:03 < amagee> even leaves the terminal in a broken state after i exit
07:03 < owen1> i am confused with the mars landing. according to http://en.wikipedia.org/wiki/Mars_landing    we landed already 6 times..
07:06 < astropirate> owen1, this one is a mobile labratory
07:06 < SomeoneWeird> node-waf doesn't work on windows samholmes 
07:12 < owen1> astropirate: ok. but they took pictures in the past, right?
07:12 < astropirate> yes
07:12 < astropirate> many
07:13 < owen1> is it that different than any of the last 6 landings?
07:24 < samholmes> SomeoneWeird: What is node-waf again?
07:25 < SomeoneWeird> the program that compiles C/C++ modules
07:25 < samholmes> Ah, so what can I do to compile this module in windows?
07:30 < SomeoneWeird> You can't, unless it's compatible
07:30 < SomeoneWeird> and if its using node-waf it probably isn't
07:41 < mappum> how can I get a sha1 hash digest hex string that uses two's complement negative instead on being unsigned
07:42 < mappum> or, how can I convert a big hex string from unsigned to two's complement negative?
07:42 < samholmes> SomeoneWeird: Hmm. Are you sure? nodemailer recommends node-email-templates and nodemailer runs on windows.
07:56 < Guest50243> How do i create a long link from my nodejs server to aother site?
07:57 < stagas_> Guest50243: what's a long link?
08:02 < Guest50243> Quit:How do i create a long link from my nodejs server to aother site?
08:13 < medice> ditto what stagas said
08:46 < kontoo> hey guys, what would be the most easy way to serve static content via node-spdy? I (as a guy trying his first steps with node.js) found this connect module but I have no clue how to make it work with spdy
08:52 < slaskis> kontoo: try using https://github.com/visionmedia/send
09:02 < kontoo> slaskis: hey man, got it working with your tip! thanks alot :P
09:02 < slaskis> kontoo: great to hear, np!
09:10 < [AD]Turbo> hi there
09:18 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
10:36 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
10:39 < beeviz> how can i create sessioncookies with node.js? i need to store some login information in a session like $_SESSION in php
10:41 < thatguydan> beeeviz: http://www.senchalabs.org/connect/session.html
10:45 < beeviz> thankyou :
11:11 < mmalecki> dominictarr[zzz]: GET UP SIR, WE NEED FOOD
11:11 < Domenic> https://npmjs.org/package/opener
11:36 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:58 < omar_> hello, is it possible to set node.js to work only on https (hsts) setting the relative header and redirect when it's http://?
11:59 < RLa> the relative header?
12:00 < RLa> i think redirects need absolute address
12:00 < RLa> which you can create using the client-sent Host header
12:01 < omar_> RLa: I meant this: "Strict-Transport-Security: max-age=31536000; includeSubDomains"
12:02 < omar_> RLa: where do you set the ssl certificate to use?
12:02 < RLa> hm
12:02 < RLa> no idea
12:14 -!- mode/#Node.js [+o piscisaureus__] by ChanServ
13:09 < Sri19> Can I request a code review please? https://github.com/Srirangan/googleplaces.js 
13:09 < Sri19> Like to know if I'm sticking to conventions..
13:12 < RLa> what conventions you mean?
13:13 < jrajav> YOU CODE USES ENTIRELY TOO MUCH LOWERCASE
13:13 < jrajav> https://github.com/rvagg/CAPSLOCKSCRIPT
13:13 < cainus> Sri19: looks pretty idiomatic
13:13 < cainus> you use jshint?
13:15 < RLa> some devs might not like request.on('error', .. where you throw an exception
13:15 < RLa> expecially in async code
13:17 < Domenic__> Sri19: Although it doesn't really matter, the config example might be better as JSON. require("./config.json") would work just like you expect
13:18 < cainus> yeah that exception is impossible to catch
13:19 < kschzt> maybe an issue with Domains, if I run http.request() within a domain.run(), the http.globalAgent doesn't seem to dispose of the requests correctly..
13:20 < Sri19> cainus, jshint .. nah don't use it .. but good idea.. i've got built in support on my ide, i should be using it
13:20 < kschzt> ie. it blocks after maxSockets requests. if I disable the agent, it works, but without keep-alive
13:20 < cainus> I didn't see many violations... it'd complain about not having { and } around one-liner if blocks though
13:21 < Sri19> RLa, you mean invoke callback and send the error as first argument?
13:21 < Sri19> Domenic__, hmm good point, config.json will look cleaner
13:21 < RLa> yes
13:22 < RLa> otherwise node just dies
13:22 < RLa> unless you use domains
13:22 < RLa> or implement uncaught exception handler
13:22 < RLa> (which i heard might be soon removed)
13:22 < RLa> and domains are still experimental feature
13:23 < Sri19> haven't caught on to domains as yet.. callabck with error makes sense..
13:23 < cainus> http requests are going to fail from time-to-time anyway... there should be a normal way to handle that
13:23 < Sri19> i'll make a list of these points.. file a bug to rememebr
13:23 < Domenic__> uncaughtException will most likely only be removed once domains are non-experimental
13:23 < Domenic__> And given isaacs strong backward-compat tendendencies as of the 0.8 timeframe, I'm guessing uncaughtException will never be removed.
13:27 < kschzt> it looks like the agent's sockets are bound to whatever domain is active, then not cleaned up once the domain is dispose()d, and not reusable in other domains...
13:32 < mikeywaites> hey anyone used this lib with express 3 and jade successfully ?
13:32 < mikeywaites> https://github.com/jaredhanson/connect-flash
13:34 < slaskis> when i use child_process.fork() how do i communicate back to the "parent" process?
13:36 < mscdex> slaskis: http://nodejs.org/docs/v0.8.5/api/child_process.html#child_process_child_process_fork_modulepath_args_options
13:38 < jdominguez> hello! can anyone helpe me in installing nodejs in windows 7 64bit?
13:39 < slaskis> mscdex: yeah, i was reading that but it's only mentioning `child.send()` not like `parent.send()`
13:39 < jdominguez> it doesn't seem to respond anything...
13:41 < jdominguez> oh, it's not necessary now, it already works, feel stupid
13:44 < mscdex> slaskis: huh? the parent would be sending to the child via child.send()
13:44 < slaskis> yeah, but back from the child to the parent?
13:44 < mscdex> slaskis: the child process uses process.send() and process.on('message') for sending and receiving from parent
13:45 < slaskis> mscdex ah, now i got it working. thanks!
14:14 < bradleymeck> hod do you force dest-cpu in node 0.8.x, ./configure --dest-cpu seems to be ignored on SunOS
14:14 < bradleymeck> how*
14:22 < WarheadsSE> for node, or for the v8 sub-part of node?
14:31 < fridojet2> hi
14:44 < tahu> why do I get "npm WARN package.json bla@0.0.0 No README.md file found!" in "npm ls" if there is already a "README.md" in the same directory as "package.json"
14:45 < bradleymeck> tahu upgrade npm
14:47 < mscdex> node.js rules!
14:48 < tahu> upgraded. still the same.
14:48 < tahu> tahu@laptop:~/Desktop/NRMS/apps/tmpweb$ npm -v
14:48 < tahu> 1.1.46
14:48 < tahu> tahu@laptop:~/Desktop/NRMS/apps/tmpweb$ npm ls
14:48 < tahu> npm WARN package.json nrms_frontend@0.0.0 No README.md file found!
14:48 < tahu> nrms_frontend@0.0.0/home/tahu/Desktop/NRMS/apps/tmpweb
14:48 < tahu> └── (empty)
14:48 < tahu> tahu@laptop:~/Desktop/NRMS/apps/tmpweb$ ls
14:48 < tahu> package.json  README  README.md  test.js
14:49 < bradleymeck> strange
14:49 < tahu> maybe it is because .git is at ~/Desktop/NRMS?
14:49 < mikeywaites> anyone else using connect-flash with express 3?
14:49 < mikeywaites> https://github.com/jaredhanson/connect-flash
14:51 < tahu> maybe there is an option in package.json that can specify the location of README?
14:51 < xerox> npm help json
14:53 < tahu> `npm help json|grep -i readme` returns nothing
14:54 < mscdex> SubStack: what ever happened to that bill o'reilly graphic from awhile back?
14:58 < marshall> hey node
14:59 < marshall> anybody every doneted to donorschoose.org or backed anything on kickstarter?
15:00 < bradleymeck> marshall yep
15:00 < marshall> does kickstarter take your cc info up-front, then charge your card automatically when the project reaches it's funding goal?
15:00 < EyePulp> marshall - yes, I believe so
15:00 < bradleymeck> marshall: it puts a hold on the cash, so technically its not taken but not available
15:00 < marshall> hmmmmm
15:00 < marshall> ok
15:00 < EyePulp> then they make mad bank on the interest
15:00 < EyePulp> =)
15:01 < marshall> ahh interesting
15:01 < EyePulp> (not true)
15:01 < marshall> haha
15:02 < marshall> what about donorschoose? do they only take money if the project reaches it's goal?
15:02 < bradleymeck> idk
15:03 < EyePulp> not familiar.  I assume they both have faq's though that are authoritative
15:03 < EyePulp> hint hint
15:05 < marshall> thanks thanks
15:15 < WarheadsSE> The authorization hold can only last ~30 days normally, iirc
15:16 < flexd> Uh, does anyone have experience with the twitter api? I want to get all the tweets from a specific user, and only that user. No @replies or anything else.. Suggestions?
15:16 < flexd> Looking at streaming statuses/filter now
15:23 < CIA-93> node: isaacs master * r0414e14 / doc/api/util.markdown : doc: util.pump is deprecated. Use Stream.pipe - https://github.com/joyent/node/commit/0414e14702af7258a9197f6b979e32261f96f910
15:41 < CIA-93> node: isaacs master * r168a555 / (5 files in 5 dirs): fs: fix naming of truncate/ftruncate functions - https://github.com/joyent/node/commit/168a5557803b40b4930c3b4f9587b67a6d566b13
15:45 < WarheadsSE> For those that might be using Arch Linux ARM, re-packaging v8/nodejs to fix *most* of the segmentation faults
15:45 < WarheadsSE> (still an odd deep issue wtih unaligned access in the depths of v8)
15:46 < xavier_> Hi. Design question on dependence injection/inter object communication: I got a bot that has a propery commands (all the commands it knows, so if can this.command[0]->run(params). 
15:47 < xavier_> Works fine, but some commands need more info about the context, eg being able to access the list of commands or users or other properties from the bot. to far I did set on each command a property bot, but that kind of suck.
15:48 <@isaacs> xavier_: is this in c++ or c or something?
15:48 <@isaacs> xavier_: -> is not js
15:48 < xavier_> node.js sorry, this.command[0].run(...)
15:48 <@isaacs> oh, ok
15:49 <@isaacs> why not this.run(command, params)
15:49 <@isaacs> then run has "this" as context
15:49 <@isaacs> or even this.command(params)
15:49 <@isaacs> then, instead of defining an object for each command which has a run method, just define a function for each command
15:50 <@isaacs> the bot.run() method can do something like:  var cmd = commands[param]; cmd.apply(this, params)
15:50 <@isaacs> if cmd isn't found, obviously that's an error
15:51 <@isaacs> if it's async, the signature might want to be something like run = function (command, params, cb) { cmd = commands[command]; return cmd.call(this, params, cb) }
15:51 < xavier_> each command has a few extra attributes/methods, like the name, context when it's valid...
15:51 <@isaacs> xavier_: npm does something like this.  each top-level command is a module in lib/ that exports a function like install (args, cb) 
15:52 <@isaacs> xavier_: ok, but you can still slap that stuff on a function
15:52 <@isaacs> xavier_: again, npm does exactly that: install.usage = "..."
15:52 <@isaacs> install.completion = function () {...}
15:53 <@isaacs> but the core "thing" that the command *is* is a function that defines what it does
15:53 < timeturne> can you call npm from a module?
15:53 <@isaacs> timeturne: sure.
15:53 < timeturne> awesome
15:53 < xavier_> isaacs: ok, using a function sounds like a better core "thing"
15:54 <@isaacs> timeturne: https://npmjs.org/doc/README.html#Using-npm-Programmatically
15:54 <@isaacs> timeturne: but you probably want to use one of its deps instead.
15:54 < xavier_> habit of encapsulating in an object from other languages I suppose
15:54 <@isaacs> xavier_: yeah, it's a tricky thing to stop thinking in terms of past limitations
15:54 < mmalecki> isaacs: hey, since you're here, mind looking at https://github.com/isaacs/npm/pull/2670 ?
15:55 < mmalecki> isaacs: (when you find some time.)
15:55 <@isaacs> mmalecki: https://github.com/isaacs/npm/commit/62075e8
15:55 < mmalecki> isaacs: <3
15:56 <@isaacs> it'd be nice if gh automatically updated pulls when the commits have all been landed.
15:56 < xavier_> isaacs, thx, will refactor as functions (and study a npm for further inspiration if needed)
15:56 <@isaacs> their green "merge" button makes a ton of ugly --no-ff merge commits for trivial things
15:56 < mmalecki> isaacs: ah, ok, you didn't close the pr, I didn't notice the commit. silly me!
15:56 <@isaacs> mmalecki: yeah, that happens all the tiem
15:56 < Domenic__> Yes I have come to hate that merge button
15:57 <@isaacs> mikeal loves it, and it's why the request git history makes my eyes bleed.
15:57 < xavier_>  mmalecki: seems to work fine if port > 1024 indeed. thx
15:57 < Domenic__> This isn't Mercurial dammit, this is Git, we love our linear history.
15:57 < mmalecki> isaacs: well, I like it if pr has a relevant discussion
15:57 < mmalecki> that way you can get a reference to it. mostly it doesn't tho, and I just land a commit
15:58 <@isaacs> --cherry makes it a lot easier to look at
15:58 <@isaacs> but then there's a lot of orphaned-looking commits
16:03 <@isaacs> Domenic__: opener looks kinda useful
16:04 <@isaacs> Domenic__: what happens if the system isn't os x or windows, and doesn't have xdg-open?
16:04 < Domenic__> isaacs: yay, glad you think so!
16:04 <@isaacs> Domenic__: yeah, i have kludgey half-working code to do this all throughout npm
16:04 < Domenic__> isaacs: I don't know; I'd love to know what kind of system has that and what I should do instead
16:04 < Domenic__> isaacs: ooh right, like for npm bugs and stuff
16:04 <@isaacs> help, bugs, and docs commands all open a web browser
16:05 <@isaacs> but hte docs thing doesn't quite work right, because i guess opening an html doc is different than opening a web page.
16:06 < Domenic__> yeah my main use case was for scripts["test"] and scripts["cover"]
16:06 <@isaacs> Domenic__: also, i think there's some weird case where if you wait for the child, it is strange.
16:07 <@isaacs> like, what you really want to do is, instead of using exec, use spawn, and if it doesn't crash in 100ms or so, do child.detach() and move on
16:07 < Domenic__> Hmmm
16:07 <@isaacs> there's some bug where you do `npm help install --browser` and it hangs open until you close that browser window
16:08  * isaacs probably not remembering correctly, haven't looked into it in a long time
16:08 < Domenic__> right i remember seeing that bug somewhere
16:08 < Domenic__> https://github.com/isaacs/npm/issues/1775 and https://github.com/isaacs/npm/issues/1776 are related
16:10 < Domenic__> According to https://github.com/mmalecki/npm/commit/50ed364922fc8e051099ccea00d208b943db8d64 it looks like mmalecki didn't have a better solution for systems without xdg-open
16:11 < mmalecki> Domenic__: yeah, and it uses which.sync, which is lame
16:11 < Domenic__> mmalecki: which systems lack xdg-open?
16:12 < mmalecki> Domenic__: only linux has xdg-open
16:12 < Domenic__> mmalecki: ah so SunOS e.g. is no good. Hrm. No equivalent you know of?
16:13 < mmalecki> actually, it might be x window system that provides xdg-open
16:13 < Domenic__> *SmartOS
16:14 < Domenic__> mmalecki: any truth to this? http://stackoverflow.com/a/264954/3191
16:15 <@isaacs> xdg-open is a freedesktop.org thing
16:15 <@isaacs> it's not a linux thing, per se
16:15 <@isaacs> even though probably 99% of freedesktoporg users are linux users
16:15 <@isaacs> since no one uses freebsd or sunos for their graphical desktop env any more.
16:16 <@isaacs> but there are many many graphical linux users that use non-freedesktop.org systems
16:17 < Domenic__> So apparently /usr/dt/bin/sdtwebclient works on Solaris but only for URLs, which isn't quite awesome enough for opener.
16:17 <@isaacs> yeah
16:17 <@isaacs> i think the best bet is to just try open/start/xdg-open, and then fail if it fails
16:17 <@isaacs> if (osx) open, else if (windows) start, else xdg-open
16:18 < Domenic__> and that's precisely what I do :)
16:18 <@isaacs> if you are using solaris as your desktop, there's a good chance your'e using Gnome or KDE anyway
16:28 < legogris> Hey guys... Does anyone in here have any experience with running foreman on windows?
16:28 < legogris> I mean grunt, sorry :)
16:28 < prettyrobots> Does the new 'close' event return code and signal?
16:28 < prettyrobots> For a child process?
16:28 < Domenic__> legogris: yes, we do so at work
16:30 <@isaacs> prettyrobots: yeah
16:30 <@isaacs> prettyrobots: it's exactly the same as 'exit' used to be
16:30 <@isaacs> and 'exit' is now 'exit
16:30 < prettyrobots> isaacs: If I wanted to submit a document patch, where would I look for docs?
16:31 < prettyrobots> isaacs: And thank you.
16:31 <@isaacs> prettyrobots: doc/api/
16:31 <@isaacs> prettyrobots: in the node src
16:31 < prettyrobots> Great.
16:31 < prettyrobots> Thanks.
16:32 -!- isaacs changed the topic of #Node.js to: ___ early, ___ often.
16:32 <@maxogden> bathe
16:32 <@isaacs> lolz
16:32 <@isaacs> 0.8.6 tomorrow probably
16:33 < Domenic__> Want more 9s
16:33 < Domenic__> </ungrateful>
16:33 <@maxogden> node 1.8.7 murder style
16:36 < prettyrobots> Do doman sockets work on Windows?
16:36 < prettyrobots> The documentation says UNIX domain sockets, but I'm wondering if the Windows equiv works as well.
16:37 < Domenic__> prettyrobots: https://github.com/joyent/node/issues/3827
16:38 < prettyrobots> Domenic__: So...
16:38 < prettyrobots> Domenic__: EACCES and doens't work? Or used backslashes a whole bunch?
16:38 < prettyrobots> s/used/use/
16:39 < mscdex> the more backslashes the better!
16:39 < Domenic__> prettyrobots: yeah I think the backslashes might be the key
16:39 < prettyrobots> Okay. So, seven backslashes for good performance, twice that for web scale. Got it.
16:39 < Domenic__> isaacs, piscisaureus: do you think node should maybe add backslashes for you?
16:40 < prettyrobots> Domenic__: I don't believe so. Offhand.
16:41 < Domenic__> I just hate it when code doesn't work cross-platform 'cuz then I try it and it doesn't work on Windows, even though it could with minimal modifications.
16:41 < prettyrobots> Unelss there is a very consistent translation from backslash to forward slash.
16:41 < prettyrobots> Domenic__: I suppose as long as the prefix is *always* `\\pipe\`.
16:41 < prettyrobots> Or always '\\\\.\\pipe\\'
16:41 < Domenic__> prettyrobots: yeah I guess we probably need better understanding of what exactly that crap is doing for us
16:42 < prettyrobots> Hrm… \\.\pipe\ 
16:42 <@piscisaureus> \\.\pipe or \\?\pipe :-)
16:42 < prettyrobots> Or you could check if `win32`. If it has back slashes, do not change it.
16:42 <@piscisaureus> with different semantics :-0
16:43 < prettyrobots> piscisaureus: Are domain sockets on Windows web scale?
16:43 < prettyrobots> Are the performant?
16:43 < prettyrobots> Are they performant?
16:43 <@piscisaureus> windows has no unix domain sockets
16:43 < Domenic__> MSDN TIME
16:43 <@piscisaureus> you can't send fds over them
16:44 <@piscisaureus> prettyrobots: but - it depends. If you create a socket server and a socket connection within node then they are very fast
16:44 <@piscisaureus> prettyrobots: pipes between processes are slower (except when you use fork())
16:44 < prettyrobots> piscisaureus: Interesting.
16:45 < prettyrobots> If I wanted to do IPC in a cross-platform way, sending just byte streams, what would you suggest?
16:45 < prettyrobots> I suppose I'm "forking" so it would be between parent and child.
16:45 < Domenic__> OK this is the relevant link for learning about windows pipe (socket?) names it seems: http://msdn.microsoft.com/en-us/library/windows/desktop/aa365150%28v=vs.85%29.aspx
16:46 <@isaacs> Domenic__: if you do that "clean pipe name" thing for the npm-www repl, does it work?
16:47 < Domenic__> isaacs: haven't tried, but will...
16:47 <@piscisaureus> prettyrobots: to do IPC between a node process and a fork you can just use the standard methods right?
16:48 < Domenic__> isaacs: bleh I left my hacked copy of couch at home, will have to wait on that. Although I may have found a solution for un-hacking it: http://stackoverflow.com/q/11812365/3191
16:49 < prettyrobots> piscisaureus: Okay. Child send and process send and fork all work on Windows?
16:50 <@piscisaureus> yes
16:50 <@piscisaureus> atleast, it should all work :-)
16:50 < prettyrobots> Because I'm used to fork not working on Windows. That's just a thing that rolls around in my head.
16:50 <@piscisaureus> prettyrobots: it doesn't actually fork. It just spawns another node process and sets up IPC
16:51 <@piscisaureus> fork may be a misnomer
16:51 < prettyrobots> I wish I was able to keep up with the changes.
16:51 < prettyrobots> This is all very, very cool.
16:51 < Domenic__> everything pretty much works on windows in my experience (would be interested in hearing major outliers). The problem is user code not Node core code really.
16:52 < motiooon_> how is the new Domain work ?
16:52 < motiooon_> if I do var d = domain.create();
16:52 < Domenic__> motiooon_: nobody knows, there are no blog posts :(
16:52 < motiooon_> there is documentation, which I've read
16:53 < motiooon_> but I would like to see better examples for the implicit domain bounding
16:53 < prettyrobots> I am really happy. Like I've got to get up and walk around a bit. I'm soooo happy. A whole bunch of time was just given back to me.
16:54 < motiooon_> the documentation says : "If domains are in use, then all new EventEmitter objects (including Stream objects, requests, responses, etc.) will be implicitly bound to the active domain at the time of their creation."
16:54 < motiooon_> what would be a case where domains are in use ?
16:55 <@piscisaureus> Domenic__: some small stuff is not yet working (signals for example) but most stuff is there
16:55 < Domenic__> piscisaureus: oh cool yeah i did notice the lack of signals. they're on the roadmap?
16:56 <@piscisaureus> Domenic__: they are, sort of. The thing is that we are still not quite sure what to do with it (windows does not really have signals)
16:56 < Domenic__> piscisaureus: haha yeah that was going to be my next question
16:57 <@piscisaureus> Domenic__: and - apart from the fact that `process.on('SIGINT', ...)` now crashes node, nobody really seems to care
17:02 < Domenic__> piscisaureus: it's just another thing that makes writing cross-platform node code hard i guess. Like crashing on process.guid.toString() and erroring on domain sockets with non-crazy names and so on. I end up submitting a lot of pull requests that are just try/catch or ifs or whatever because nobody tests on Windows. And in my ideal world they wouldn't have to test on Windows.
17:03 <@piscisaureus> ah yeah process.uid doesn't work either
17:03 <@piscisaureus> Domenic__: the problem with this stuff is - there are conceptual differences
17:03 <@piscisaureus> Domenic__: we could just make process.uid() return 0 and it'd be alright for most people
17:04 <@piscisaureus> Domenic__: and for others it could silently trash their security feature
17:05 < Domenic__> piscisaureus: yup, agreed. not much to add besides a sad face. :(
17:07 < hendore> Hi guys, I'm new to network programming. I've got node.js setup and socket.io package. I have been playing with it for a couple of days and done a few tests. I just need some guidance on a few things. For a multiplayer game server, should the server sit waiting for client sockets to emit events to the server, at that point the server could then loop through all connected client sockets and emit an event back so that the clients know about
17:07 < hendore>  the changes? Or should the clients emit events to the server, then the server sends information to clients at a set interval such as 60 times a second?
17:09 < hendore> if client one emits "move" event to server, would the server then let all the other clients know that client one has moved? Or should the server update player position, then a few milliseconds later send out to all clients the new positions for each client?
17:30 < slickplaid> argh this is frustrating
17:30 < jergason> slickplaid: what?
17:30 < slickplaid> cradle keeps returning cached documents from couchdb, even though { cache: false } is set
17:31 < slickplaid> i'll get rev 84 on one refresh, rev 86 on another
17:31 < slickplaid> and when someone goes to delete something from the document, it pops up a document conflict because it's trying to save with the older rev
17:32 < slickplaid> database.posts.get(id, function(err, post) { console.log(post._rev); /* returns whatever the hell it wants */ });
17:32 < AAA_awright> Via http://howtonode.org/: "It won't be an exaggeration if one claims that in the past few months Node.js and MongoDB have literally taken the software and web industries by storm."
17:32 < AAA_awright> When I hear that, I understand this: var mongo = require('mongolian'); var weather=require('godmode').HVAC; (new mongo).db('earth').collection('users').insert(weather.Lightning(new weather.Raincloud()));
17:32 < slickplaid> hehe
17:35 < slickplaid> so damn intermittent that I can't seem to pin down why it's returning stale documents from couch
17:46 < slickplaid> is there a way to guarantee the latest revision (if you have no idea what the lastest revision could be) is received when using db.get() in https://github.com/cloudhead/cradle? Anyone know?
17:47 < slickplaid> I keep getting stale documents, one or two revisions behind, sporatically, when I db.get(id, callback); even with cache: false in the settings
17:47 < slickplaid> and when it does grab a stale doc, it will hold on to that revision for a long period of time and if you try and update, it'll give a doc conflict
17:47 < slickplaid> :X
17:52 < zonetti> how to set the default timezone in 0.8.5?
17:53 < gkatsev> can you even do that?
17:53 < gkatsev> pretty sure it just uses the timezone local to the machine it's running on
17:53 < zonetti> apparently in 0.6 we could :o
17:53 < TooTallNate> zonetti: you can try setting the TZ env variable
17:53 < TooTallNate> before launching node
17:53 < zonetti> TooTallNate, I tried.. but there is no more process.env in 0.8.5
17:53 < TooTallNate> uhhh… yes there is
17:54 < TooTallNate> and you would have to do it before launching node anyways
17:54 < zonetti> hm..
17:54 < TooTallNate> TZ=UTC node server.js
17:54 < zonetti> I'll try that
17:55 < gkatsev> TooTallNate: oh, that works? cool
17:56 < TooTallNate> meh, seems… buggy…
17:56 < TooTallNate> [root@6ab92b32-517e-43d1-a27d-564b8922b927 ~]# TZ="America/Los_Angeles" node -pe "new Date().toString()"
17:56 < TooTallNate> Mon Aug 06 2012 18:55:33 GMT+0100 (PST)
17:56 < TooTallNate> [root@6ab92b32-517e-43d1-a27d-564b8922b927 ~]# TZ="America/New_York" node -pe "new Date().toString()"   
17:56 < TooTallNate> Mon Aug 06 2012 18:55:47 GMT+0100 (EST)
17:56 < TooTallNate> [root@6ab92b32-517e-43d1-a27d-564b8922b927 ~]# TZ="UTC" node -pe "new Date().toString()"             
17:56 < TooTallNate> Mon Aug 06 2012 17:55:57 GMT+0000 (UTC)
17:56 < TooTallNate> [root@6ab92b32-517e-43d1-a27d-564b8922b927 ~]# TZ="US/Pacific" node -pe "new Date().toString()"
17:56 < TooTallNate> Mon Aug 06 2012 18:56:07 GMT+0100 (PST)
17:56 < TooTallNate> the abbreviation changes correctly but the time doesn't
17:57 < TooTallNate> you can use node-time to force the timezone on Date instances though
17:57 < TooTallNate> oh actually i was just hitting a solaris bug :D
17:57 < TooTallNate> ^ that does work
18:01 < zonetti> TooTallNate, my machine is running 0.8.5 but the server is 0.6..
18:01 < zonetti> but it works :)
18:01 < zonetti> ty
18:01 < TooTallNate> ya that's a V8 thing so it should work for all versions of node
18:01 < TooTallNate> everrrrrr
18:08 < gicode> Any thoughts on how to debug this? http://pastebin.com/TfMVedv8
18:08 < gicode> breakOnException doesn't appear to work (I suppose it isn't an exception)
18:11 < mscdex> gicode: recursion problem?
18:12 < gicode> mscdex: It is happening inside socket.io :-/
18:12 < mscdex> :S
18:12 < gicode> mscdex: After handling about 3000 messages it blow up
18:13 < mscdex> i'd post an issue on their issue tracker i guess
18:13 < gicode> mscdex: Yeah, I just don't want to wait on them to care.
18:13 < mscdex> heh
18:13 < gicode> This is the program http://pastebin.com/iEb54tP3
18:14 < mscdex> join the club ;-)
18:14 < mscdex> gicode: what node and socket.io version?
18:15 < gicode> mscdex: node v0.8.5, socket.io@0.9.9
18:17 < mscdex> is that the whole program?
18:17 < gicode> mscdex: Yes, I wrote it to test for memory issues I am seeing.
18:18 < gicode> mscdex: I have a simple client that sends the same message over and over.
18:18 < jrajav> Hey, I'm trying to run a node script in a chroot, and I'm getting a TypeError: Cannot read property 'emitter' of undefined at 'this._internal.emitter.emit( 'error', er )'
18:18 < jrajav> I've included the libs that the 'node' binary is linked to, as well as all of /usr/lib/node in the chroot
18:18 < jrajav> Is there anything else I need?
18:18 < gicode> mscdex: Client http://pastebin.com/V82dD6VV
18:19 < gicode> jrajav: The program works outside the chroot?
18:19 < jrajav> Yes
18:19 < jrajav> FWIW it's an IRC bot lib, the error happens in Socket
18:20 < jrajav> But _internal is what's undefined
18:20 < jrajav> There may also be an error with network connectivity, but I didn't think that would have to change in a chroot
18:20 < gicode> jrajav: All the core JS code is compiled into the executable so that is pretty odd
18:21 < jrajav> If it does, I have no idea what to add to the chroot
18:21 < JAAulde> Hi all.  Quite some time ago I installed the jshint NPM module. It is still installed--I can use it--but none of the npm commands show it as installed. When I try to run uninstall I get an error for it not being installed. Any thoughts on why that is?
18:21 < gicode> JAAulde: Did you install it as root?
18:21 < jrajav> Do I need to mount dev or proc or anything for networking to work?
18:21 < JAAulde> gicode: no, I do not believe so
18:22 < JAAulde> gicode: I am on a Mac, and don't think I used sudo to install
18:22 < gicode> JAAulde: Does this work? npm -g list
18:22 < gicode> mscdex: Pretty fun error right?
18:23 < JAAulde> gicode: it does. I was using `npm ls -g` to get the same listing. Neither shows jshint installed
18:23 < JAAulde> gicode: I mean, it does work, it does not show jshint
18:24 < gicode> JAAulde: what does "which jshint" say?
18:24 < JAAulde> gicode: /usr/local/bin/jshint
18:26 < gicode> JAAulde: How about: npm config get prefix
18:26 < JAAulde> gicode: /usr/local/Cellar/node/0.8.5
18:27 < gicode> JAAulde: Maybe jshint was installed there by a different type of npm install
18:27 < JAAulde> gicode: well, it was installed via `npm install -g jshint` but on a previous version of Node/NPM
18:28 < gicode> JAAulde: Was the previous version very old or installed in a different place from the new one?
18:29 < JAAulde> gicode: I think it was 0.6.15, and it was back on Snow Leopard. I am now on 0.8.5 and Mt Lion
18:30 < JAAulde> gicode: both installs of Node were done via Homebrew
18:30 < gicode> JAAulde: The simplest way to solve this problem is probably to delete /usr/local/bin/jshint.
18:30 < JAAulde> gicode: with the flag to disable NPM install removed fromthe brew formula
18:30 < gicode> JAAulde: Then just install again
18:30 < JAAulde> gicode: ok
18:30 < JAAulde> will look sinot it
18:30 < JAAulde> *into it*
18:31 < JAAulde> gicode: the line in my Node script which pulls in jshint looks like this: var jshint = require( 'jshint/packages/jshint/jshint' );
18:32 < mscdex> gicode: did you try from a browser? using something other than the websocket transport?
18:32 < JAAulde> gicode: to path what is that include path relative?
18:32 < gicode> mscdex: I did not.  For my purposes websocket and flashsocket are all that really matter right now.
18:33 < gicode> JAAulde: That require line is pretty crazy
18:33 < mscdex> gicode: ok, well it could be that the server's websocket handling is wonky in some way
18:33 < JAAulde> gicode: agreed...when I saw it just now I was surprised
18:33 < mscdex> i haven't looked at it especially, so i don't know how good or bad it is
18:33 < gicode> mscdex: Gotcha.  It does seem like something in the transport
18:34 < gicode> mscdex: I am trying to see if I can monkey-patch something in to get me more information
18:36 < alitrix> hi everyone, I've a question about profiling with node js. I'm trying to follow a example/tutorial on node-inspector and everything works fine
18:36 < JAAulde> gicode: ok, so I found /usr/local/lib/node_modules which has a jshint dir and a npm dir
18:36 < alitrix> but when I visit the inspector, I don't have a 'Profile' tab. I've been googling a lot what is wrong, but can't find it
18:37 < alitrix> I found a website with a log to this chat, someone had the same issue like me, and you people answered him something about --debug isn't the same as profiling?
18:37 < gicode> alitrix: Did you require('v8-profiler'); in your code?
18:37 < alitrix> can someone help me?
18:37 < alitrix> yes
18:37 < alitrix> wait, will show you what I have/did
18:39 < alitrix> http://pastebin.com/2gM9J2ji
18:39 < alitrix> holy shit, a lot of disconnects :p
18:39 < mscdex> :-)
18:40 < astropirate> alitrix, they left because of you. hope you are happy
18:41 < alitrix> :(
18:41 < alitrix> :p
18:41 < alitrix> well, more room left for me
18:41 < alitrix> gicode: did you find anything wrong in my way of profiling?
18:42 < gicode> alitrix: What version of node-inspector?
18:45 < alitrix> node-inspector -v doesn't work, how to find out?
18:46 < gicode> alitrix: npm list node-inspector
18:46 < context> i just learned about JSAN
18:46 < context> do they not realize CPAN has had 10 years to mature and it still sucks ?
18:46 < gicode> alitrix: Actually, I am not sure I every got profiling working in node-inspector
18:47 < gicode> alitrix: I think it was this I used https://github.com/c4milo/node-webkit-agent
18:47 < gicode> s/every/ever/
18:47 < alitrix> 0.2.0beta3
18:47 < alitrix> hmm, oke, going to give webkit-agent a try
18:47 < alitrix> npm WARN package.json connect@2.4.2 No README.md file found!
18:47 < alitrix> /home/ali/www/framework/backend/node
18:47 < alitrix> âââ node-inspector@0.2.0beta3 
18:48 < alitrix> gicode: but is it possible to find out where a memory leak is with webkit-agent?
18:48 < alitrix> or at least.. which functions/variables are holding most memory
18:48 < gicode> alitrix: Yeah, look at the screenshots
18:48 < alitrix> oke, tnx
18:48 < alitrix> gonna give a try
18:52 < alitrix> gicode: hmm, I dont understand the example they give. do I have to run there example with node file.js?
18:52 < alitrix> because it runs on 8080 and when I go there, I don't get anything
18:53 < alitrix> and the URL they give as example, I don't understand why I should connect to there serveR? http://c4milo.github.com/node-webkit-agent/21.0.1180.57/inspector.html?host=localhost:8080&page=0
18:54 < slaskis> is there a way to get the current terminal size in node?
18:55 < mscdex> slaskis: process.stdout.columns, process.stdout.rows
18:56 < slaskis> mscdex: oh brilliant
18:56 < slaskis> i found this http://tobyho.com/2011/10/15/getting-terminal-size-in-node/ and thought it seemed like a bad way to go
18:56 < gicode> alitrix: Their server is hosting the code, but it will just open a websocket from your browser to your local machine.
18:57 < mscdex> slaskis: http://nodejs.org/docs/v0.8.5/api/tty.html#tty_ws_columns
18:57 < gicode> alitrix: Use the URL listed in node_modules/node-webkit-agent/README.md
18:57 < mscdex> slaskis: there's also a 'resize' event for process.stdout
18:57 < etcetera> is there a viable way to use coffeescript with node?
18:57 < slaskis> mscdex fantastic api. it's like node was meant for console ui
18:58 < bradleymeck> etcetera, require('coffee-script')
18:58 < mscdex> coffeescript isn't viable!
18:58 < mscdex> :-D
18:58 < etcetera> bradleymeck: is there a documented workflow with sublime?
18:58 < bradleymeck> nope
18:58 < etcetera> I know sublime has a compiler.
18:58  * mscdex goes back to coding
18:59 < etcetera> I'm just thinking while, I love coffeescript...it's just better to use what's supported.
18:59 < alitrix> gicode: I think now I understand how it works, but I only need to find out how to change the IP it's listening on and the port
18:59 < alitrix> nevermind, found it :)
19:00 < shanebo> hey guys if I have several node apps running on different ports but they all need a globally shared object, will setting this on global be accessible? Or only if they're on the same node instance?
19:01 < bradleymeck> shanebo no shared memory between processes, use a database or master/slave config
19:03 < shanebo> bradleymeck I was afraid of that. Thanks!
19:04 < bradleymeck> shanebo must saner that way from a maintenance perspective and concurrent locks would be needed if the data ever changed and it was shared
19:05 < othiym23> aw, I go on vacation for two weeks and I lose ops
19:05 < othiym23> stupid netsplit
19:06 < alitrix> gicode: do you know if it's possible to run there own code on our own server? so instead of http://c4milo.github.com/node-webkit-agent/21.0.1180.57/inspector.html I'd like to host this on our own server
19:06 < shanebo> bradleymeck understood. I'm doing something a bit untraditional though. I'm mem caching json endpoints from an admin, and that admin hits recache endpoints to my front end sites to recache said endpoints. It's passively storing only when things have changed rather than hitting the admin server every request. That make sense?
19:06 < alitrix> because of privacy issues
19:07 < shanebo> bradleymeck and all those front end sites use the same data so instead of caching in each I was looking for one node app to cache and set data on a global namespace for the other apps
19:07 < bradleymeck> shanebo if it is ever changing while a request is active, its a race condition
19:08 < shanebo> this data changes about once a day near midnight
19:08 < shanebo> bradleymeck it's not updating all day long
19:11 < shanebo> bradleymeck also there's no query on requests. It's stored in memory. So it's nearly impossible for a race condition to take place
19:12 < shanse> »nearly impossible« is not impossible
19:12 < shanebo> the only time it's possible is on deployment
19:12 < othiym23> shanebo: so why not have all the shared global state in a separate Node process that exposes its data using something like restify bound on localhost?
19:12 < bradleymeck> shanebo id just look at voltdb or something, in process memory stores are hard if you are not syncing with an external arbiter
19:12 < shanebo> when the endpoints are caching
19:12 < othiym23> or, y'know, use redis or memcache like other people were suggesting
19:12 < bradleymeck> small race conditions can be nightmares
19:13 < shanebo> othiym23 interesting idea re localhost
19:16 < gicode> alitrix: Your information never touches their server, but you can certainly run it locally if you like.
19:18 < gicode> mscdex: It looks like the websocket server might be processing new messages after some sort of "message finished" callback.
19:18 < gicode> mscdex: Normally there are breaks between messages from the client so that stack returns, but with a continuous stream of messages it digs deeper and deeper.
19:20 < mscdex> ah
19:26 < CIA-93> node: Nathan Rajlich v0.8 * ra23df77 / (Makefile tools/email-footer.md tools/install.py): Merge branch 'binary-tarballs' into v0.8 (+11 more commits...) - https://github.com/joyent/node/commit/a23df7710ab89a926d105e52a903bd044c7cea2d
19:28 < CIA-93> node: Bert Belder cares-move * r5b1e7b3 / (92 files in 12 dirs): Add c-ares dependency - https://github.com/joyent/node/commit/5b1e7b3171dd26d8c3458cc3e1306da3be9fc580
19:28 < CIA-93> node: Bert Belder cares-move * rf54f25e / (node.gyp src/cares_wrap.cc src/tree.h): Don't rely on libuv for c-ares integration - https://github.com/joyent/node/commit/f54f25e51c54972c88ff5b9a97ec2715d2d9bb48
19:39 < context> http://screencast.com/t/byIk7vwe <- HALP! captcha hates me
19:39 < AAA_awright> lol context
19:39 < Domenic_> Oh my god GitHub what happened
19:39 < AAA_awright> What we've learned with ReCaptcha: Computers have gotten so good, if we can't read the words, humans probably can't either
19:40 < AAA_awright> er, if they
19:40 < CIA-93> node: isaacs v0.8 * r9badc00 / deps/uv/src/win/error.c : uv: Upgrade to dfb6be0 - https://github.com/joyent/node/commit/9badc002b4b109b237466c14de08278ef9be1e90
19:41 < Domenic_> How can I mark all my GitHub notifications as read and start over, jeez, what is this I don't even.
19:55 <@isaacs> Domenic_: it's better to just not use Github notifications, i've found
19:55 <@isaacs> Domenic_: eventually they'll lose track of how manyopen ones you have
19:56 < bradleymeck> isaacs++ i was at 5k+ last i actually tried to look at that evil
19:56 < EhevuTov_> I've found github notifications to have way too low signal:noise
19:57 < gkatsev> they just pushed changes to notifications today
19:57 < EhevuTov_> gkatsev, any better?
19:57 < gkatsev> https://github.com/blog/1204-notifications
19:59 < EhevuTov_> stars don't seem like they'll help. Maybe it's a step in the right direction
19:59 < EhevuTov_> maybe a star will establish a rate, to help filter out low rated follows
19:59 < gkatsev> yeah, dik
19:59 < gkatsev> idk
20:00 < EhevuTov_> dude no need to call me names :-P
20:00 < gkatsev> lol
20:00 < EhevuTov_> it will kind of defeat the purpose of a follow though, if you want to follow a friend's repo but it has a low amount of stars
20:07 < CIA-93> node: isaacs v0.8 * rcaf69aa / (198 files in 9 dirs): npm: Upgrade to 1.1.47 - https://github.com/joyent/node/commit/caf69aa91a94c7c05574afc9fcc97f45aa8d5ea5
20:09 < flexd> uh, I think I am misusing js regex match captures :/
20:11 < CIA-93> node: isaacs v0.8.6-release * r7bd6b6f / deps/uv/src/win/error.c : uv: Upgrade to dfb6be0 - https://github.com/joyent/node/commit/7bd6b6fe7eaacb5ef31d1f13d666bf65c8dedafa
20:11 < CIA-93> node: isaacs v0.8.6-release * r947f29f / (AUTHORS ChangeLog src/node_version.h): 2012.08.07, Version 0.8.5 (Stable) - https://github.com/joyent/node/commit/947f29f562ffee523102f164aa04f78b7deb841d
20:18 < etcetera> has anyone benched jruby against node + cluster?
20:18 < gicode> mscdex: https://github.com/LearnBoost/socket.io/pull/983
20:19 < RLaa> etcetera, know any production deployment of jruby?
20:19 < etcetera> linkedin?
20:19 < RLaa> they use jruby?
20:19 < etcetera> know of any production node?
20:19 < etcetera> indeed, they do.
20:19 < bradleymeck> voxer
20:19 < mscdex> gicode: \o/
20:20 < RLaa> at least on low-mem machines jruby is slower than "standard" c ruby
20:20 < etcetera> linkedin also uses node. but I already knew that.
20:20 < RLaa> profiled with redmine, a quite popular rails app
20:20 < gicode> mscdex: Kind of an odd edge case, but could be a DOS vector
20:20 < mscdex> yeah
20:20 < etcetera> RLaa: better question: know of any production node using cluster?
20:20 < RLaa> we have it
20:21 < bradleymeck> etcetera: we avoid cluster still, but we just have control issues
20:21 < RLaa> node 0.7.9 with built-in cluster module
20:21 < RLaa> 4 processes
20:21 < etcetera> control issues?
20:21 < RLaa> none
20:21 < etcetera> bradleymeck: control issues?
20:21 < etcetera> RLaa: you work were?
20:22 < RLaa> i pm
20:22 < bradleymeck> etcetera: we want to route requests directly to processes rather than clusters. we have several things where in-memory stores are in use and cluster does not like that
20:23 < etcetera> bradleymeck: very interesting.
20:23 < bradleymeck> etcetera: would be true of almost anything that does not share memory
20:23 < etcetera> 1) why does clusters not not like that? 2) what are you storing in memory 3) how are you dispatching node requests directly to processes? (simply running multiple instances?)
20:24 < gicode> etcetera: https://groups.google.com/forum/?fromgroups#!topic/nodejs/Ajq-_jMjAy4
20:24 < drudge> redis ftw!
20:24 < bradleymeck> 1. memory is not shared between, reconnect logic between processes is not possible using memory stores. 2. routing tables, it needs speed. 3. mostly by nic 
20:24 < gicode> etcetera: If you want a particular load balancing strategy, you might want to DIY
20:24 < CIA-93> node: Nathan Rajlich v0.8 * r093be8b / tools/install.py : install: prevent a KeyError from being thrown when PORTABLE is not set - https://github.com/joyent/node/commit/093be8b16bb153d18bfec752d42f8b79a8958800
20:24 < RLaa> redis is the way to go if you want shared memory with cluster!
20:25 < bradleymeck> redis is one way to go sure
20:25 < RLaa> or share nothing
20:25 < RLaa> and use cryped cookies for session
20:25 < etcetera> RLaa: well I mostly want to understand why node cannot utilize more than processor.
20:25 < RLaa> but that needs very few data to be in session < 4kB
20:25 < etcetera> and two I want to understand how cluster works, other than simply providing a thin proxy on top of incoming requests and dispatching them to many instances.
20:26 < codmaster> getting error while running everyauth example code... :( somebody plz help !
20:26 < bradleymeck> it can use multiple processors, just not in the JS thread
20:26 < codmaster> https://gist.github.com/3278120
20:26 < RLaa> etcetera, start from here http://nodejs.org/api/cluster.html
20:27 < gicode> etcetera: cluster isn't a proxy, the kernel handles the load balancing
20:27 < RLaa> it just forks worker processes and shares sockets between them
20:27 < codmaster> sombody plz help!!
20:27 < gicode> etcetera: cluster just handles the listening socket in the master and lets the workers accept
20:27 < codmaster> https://gist.github.com/3278120
20:27 < RLaa> ruby servers like mongrel should work exactly same
20:27 < CIA-93> node: isaacs v0.8.6-release * r4317a70 / (AUTHORS ChangeLog src/node_version.h): 2012.08.07, Version 0.8.5 (Stable) - https://github.com/joyent/node/commit/4317a7086b148f26c1a92bafe5f237a59c069ba4
20:27 < RLaa> and passenger
20:27 < etcetera> gicode: why is this an afterthought then?
20:28 < etcetera> "Stability: 1 - Experimental"
20:28 < RLaa> because api changes
20:28 < RLaa> mostly in direction of easier usage
20:29 < RLaa> for example, 0.6's cluster api is bit different than 0.8's and is not compatible
20:29 < gicode> etcetera: What is an afterthought?
20:29 < RLaa> i have already upgraded our code once
20:30 < RLaa> but it won't certanly disappear
20:34 < smw_work> Hi all. I am using npm to install a package. How would I script it so it only installs if the package is not already installed?
20:34 < smw_work> is there a way to see if a package is installed?
20:35 < astropirate> smw_work, add them in your package.json file then you can just do  npm install and it will install all of the dependencies
20:35 < etcetera> hmm, what is the reasoning behind this package installation local to the app/
20:35 < smw_work> astropirate, there is no way to tell if it was already installed?
20:35 < etcetera> that global updates break software?
20:35 < astropirate> smw_work, probably.. but i dont know
20:36 < RLaa> etcetera, different apps might need different versions
20:37 < RLaa> etcetera, have you tried to run more than 1 ruby app on a single machine? :)
20:37 < gicode> Is it possible to have npm install from a git repo?
20:37 < etcetera> RLaa: I've avoided ruby to date.
20:37 < RLaa> gicode, i think you can give git url as location in package.json, see npm manual
20:38 < RLaa> even in same app multiple modules might need different versions of same dependency
20:40 < RLaa> it works very well with node modules, you can have such dependencies
20:40 < RLaa> it's much harder problem with ruby and java (jar hell!) and possbily with other platforms
20:41 < samholmes> "npm WARN coffee-script@1.3.3 package.json: bugs['name'] should probably be bugs['url']" 
20:41 < samholmes> I keep getting this error with my npm packages
20:41 < samholmes> I tried installing node-email-templates and it failed because of this message: https://github.com/niftylettuce/node-email-templates/issues/4
20:41 < samholmes> I updated page.js, it updated successfully, but I had this warn in there too
20:42 < etcetera> is passing a reference to the express application variable to your controllers a bad idea?
20:43 < RLaa> oh well, windows sucks
20:43 < etcetera> in either module exports or via a request block? it must be thread-safe afterall.
20:44 < gicode> RLaa: Found, it thanks. npm install https://github.com/LearnBoost/socket.io/tarball/master
20:44 < _lleo>  /msg NickServ VERIFY REGISTER seanegan logqmkctafaf
20:44 < RLaa> is that your password?
20:44 < RLaa> gicode, you should put that into package.json too
20:45 < gicode> RLaa: I need to find the docs for that file.  I don't know what it should look like.
20:45 < RLaa> etcetera, no thread safety, but there are no threads at all!
20:45 < etcetera> haha...
20:45 < etcetera> is it bad practice though? if so, why?
20:45 < RLaa> etcetera, you need app to set up routes?
20:46 < RLaa> that's actually pretty common practice
20:46 < etcetera> app.get('/customers', function(req, res, next) { ... }
20:46 < gicode> RLaa: is package.json intended only for modules?
20:47 < RLaa> no, for projects too even if they are never published
20:48 < RLaa> etcetera, module.exports = function(app) { app.get('..', function(req, res) {}); app.post ... }; <- that's what we use
20:48 < etcetera> RLaa: used restify?
20:49 < RLaa> then where you set up the app, you call require('mycontroller')(app);
20:49 < RLaa> nope, express is enough
20:49 < etcetera> I think those two things are separate.
20:49 < etcetera> express is for web apps, restify is purely for services.
20:50 < RLaa> not necessarily
20:50 < CIA-93> node: Josh Erickson master * r7b367a9 / (lib/net.js test/simple/test-net-isip.js): net: add support for IPv6 addresses ending in :: - https://github.com/joyent/node/commit/7b367a93ce126d4bf5a56e10ee44613c59ffbe84
20:50 < RLaa> express is connect+bunch of things
20:50 < etcetera> fair enough, I mean perceptually.
20:50 < RLaa> you could use connect+routing module for services only too
20:51 < RLaa> samholmes, contextify is the problematic module?
20:53 < dpemmons> is there a good example for writing a native module for 0.8? Most of what I find is at least a year old
20:53 < CIA-93> node: isaacs v0.8.6-release * r00ac2a3 / (AUTHORS ChangeLog src/node_version.h): 2012.08.07, Version 0.8.6 (Stable) - https://github.com/joyent/node/commit/00ac2a36b7820af5c0cd40f5731c6b1aaadd21de
20:53 < RLaa> hm, restify does not use connect but has same middleware concept
20:53 < _rockbot_> hey all, when reading files using fs, is there a way to preserve accented characters?
20:53 < RLaa> _rockbot_, what's your file encoding
20:54 < _rockbot_> RLaa: utf-8
20:54 < _rockbot_> i've got fs.readFileSync('./cities.txt', 'utf-8')
20:54 < RLaa> hm, looks ok
20:54 < RLaa> how you output the result?
20:54 < _rockbot_> but looking at the output yields '?' for all the accented characters
20:55 < RLaa> you output to console?
20:55 < _rockbot_> var file = fs.readFileSync(…); console.log('file')
20:55 < RLaa> maybe console does own weird encoding
20:55 < _rockbot_> not sure, since I also output to a file, and I get the same issue
20:55 < astropirate> +
20:56 < RLaa> are you sure the file is in utf-8?
20:56 < RLaa> on what os you are
20:56 < _rockbot_> Mac OSX
20:57 < _rockbot_> how do I make sure the file is in utf-8?
20:57 < RLaa> how big the file is, can you upload to somewhere?
20:58 < _rockbot_> I can make a gist of some example bits
20:58 < mscdex> dpemmons: http://nodejs.org/docs/v0.8.5/api/addons.html https://github.com/kkaefer/node-cpp-modules http://nikhilm.github.com/uvbook/
20:58 < RLaa> _rockbot_, try file --mime <filename>
20:58 < RLaa> see what it gives
20:59 < dpemmons> mscdex: lol of course there's official documentation. derp. derp.
20:59 < RLaa> samholmes, seems like contextify is native module, do you have tools installed to compile native modules?
21:00 < _rockbot_> RLaa: https://gist.github.com/545f482c0af33945973c
21:00 < RLaa> if you copy pasted that through various tools encoding could have changed couple of times
21:01 < RLaa> see what file utility gives
21:01 < _rockbot_> RLaa: cities.txt: text/plain; charset=iso-8859-1
21:01 < RLaa> so no utf-8
21:01 < _rockbot_> right
21:01 < _rockbot_> so should I tell fs to use this encoding instead?
21:02 < _rockbot_> or is there a way to change cities.txt to be utf-8?
21:02 < mscdex> _rockbot_: node-iconv to the rescue!
21:02 < mscdex> _rockbot_: what are you wanting to do with the file contents?
21:02 < RLaa> i would rather change everything to utf-8
21:02 < RLaa> way less hassles
21:02 < _rockbot_> how do i change to utf-8?
21:02 < _rockbot_> mscdex: i'm just trying to preserve accented characters :-)
21:02 < RLaa> no idea, use tools that your os provides
21:03 < _rockbot_> lol
21:03 < _rockbot_> ok :-)
21:03 < mscdex> _rockbot_: then don't set an encoding and you'll get the binary
21:03 < mscdex> _rockbot_: readFileSync('foo.txt') will return a Buffer
21:03 < RLaa> and if you want to process that further?
21:03 < mscdex> define "process"
21:04 < RLaa> convert to string, parse the file
21:04 < RLaa> do string ops
21:04 < mscdex> node-iconv
21:04 < bradleymeck> readFileSync('foo.txt').toString('utf8') for that at least
21:04 < bradleymeck> other encodings might barf
21:05 < mscdex> yeah, you can always convert a Buffer to 'ascii', 'utf8', or 'ucs2' encodings using just node core (i think that's it though)
21:05 < mscdex> but you'll need node-iconv for more conversions
21:05 < mscdex> including the abilityo transliterate
21:05 < mscdex> *to
21:06 < scttnlsn> where does npm look for C headers?  I'm trying to install node-yajl but it can't find the headers (which i've installed with homebrew on OS X into /usr/local)
21:06 < mscdex> or if you want to take the cheap and less efficient way out: var contents = fs.readFileSync('cities.txt', 'binary');
21:06 < _rockbot_> turns out it was as easy as `iconv -f original_charset -t utf-8 originalfile > newfile`
21:06 < _rockbot_> :-)
21:07 < RLaa> yeah, why bother with crazy encoding schemes in your own app if you can force all io utf-8
21:07 < mscdex> _rockbot_: you can do the same thing within node if you want: https://github.com/bnoordhuis/node-iconv
21:08 < mscdex> unless this is a one-time task :-)
21:08 < _rockbot_> just a one-time task ;-)
21:08 < _rockbot_> but thanks!!
21:08 <@isaacs> Domenic_: I added `npm run dev-repl` which'll connect on :15337
21:09 <@isaacs> mscdex: you forgot hex and base64
21:10 < Domenic_> isaacs: nice! Looking forward to it.
21:10 <@isaacs> Domenic_: so we can avoid all this pipe nonsense
21:10 < Domenic_> Also: <h1>Node Packaged Modules</h1> <----- MYSTERY SOLVED
21:10 <@isaacs> :D
21:10 <@isaacs> Domenic_: coincidence!
21:11  * Domenic_ gives isaacs the shiftyeyes
21:11 < Domenic_> Still not sure if modules or packages...
21:11 < bradleymeck> scttnlsn: it looks in the default for w/e C++ compiler it finds
21:11 <@isaacs> Domenic_: https://npmjs.org/doc/faq.html#If-npm-is-an-acronym-why-is-it-never-capitalized
21:12 < mscdex> isaacs: on purpose, because those aren't quite the same kind of encoding
21:12 <@isaacs> mscdex: what, you don't write letters in base64?
21:12 <@isaacs> ;P
21:12 < scttnlsn> bradleymeck: strange because I can compile a C file that includes a yajl header just fine
21:12 < mscdex> not since high school
21:13 < samholmes> RLaa: I don't think I have the tools to compile native modules, but how can I know for sure?
21:14 < RLaa> hm, maybe a guide to native modules on windows
21:14 < RLaa> what it needs ms visual c++ compiler?
21:14 < mscdex> samholmes: are you on windows?
21:14 < RLaa> i have no idea despite i do c++ dev on windows
21:14 < Domenic_> VC++ 2010 Express plus Python 2.7, and if you're running Node x64 then you'll need the Windows 7.1 SDK
21:14 < RLaa> we use mingw
21:14 < samholmes> mscdex: yea
21:15 < mscdex> samholmes: what Domenic_ said ;-)
21:16 < samholmes> RLaa: Will using mingw just work?
21:16 < RLaa> not sure
21:16 < Domenic_> unlikely
21:16 < RLaa> might depends what node is compiled with
21:16 < RLaa> mingw node + mingw modules might work
21:17 < RLaa> but i think node is compiled using ms compiler on windows
21:17 < mediaupstream> Does anyone know a good approach to managing an application where data structures (mongodb) changing fairly often.. something like migrations, or something..
21:17 < mscdex> yeah, the pre-compiled node binaries are built with VC++2010
21:17 < mscdex> that's what most people are going to be using
21:17 < mediaupstream> example: my app has a "Step" model and users have created some steps, but now I changed the model quite a bit and all the old "Steps" are broken / out of date...
21:18 < mediaupstream> is there a good way to deal with this, in general that anyone knows of?
21:18 < mediaupstream> maybe I should post this in MongoDB, but my app is running on Node so I thought i'd pop in and ask here first
21:21 < Gregor> Take channel mode. Insert into blank spaces in topic.
21:21 < Domenic_> My understanding is you write code that works with both the old and new data structures, preferentially with the new ones, then do a pass through duplicating the old data into the new, then delete the old ones, then delete the code for dealing with the old ones.
21:25 < mscdex> Gregor: count early, count often?
21:26 < Gregor> mscdex: Well saved, CD driver loader. Well saved.
21:29 < chilts> Gregor: Laugh early, laugh often.
21:31 < mediaupstream> Domenic_: Thanks for the insight. That approach means more overhead when introducing new features, i'm wondering if that step is avoidable or if I just need to be more careful when making breaking changes in order to add new features
21:32 < mediaupstream> I suppose it's just a part of development
21:32 < Domenic_> mediaupstream: I'm certainly not an expert, this is just stuff I've heard and probably misheard from those who do NoSQL databases often.
21:32 < Domenic_> mediaupstream: our project uses a key-value store and the only changes have really been adding an extra column once in a while, which was easy.
21:33 < DTrejo> ryah: https://soundcloud.com/azealia-banks/luxury
21:33 < samholmes> mscdex: Where can I find VC++2010?
21:34 < samholmes> mscdex: Google..nevermind.
21:34 < mediaupstream> Domenic_: yeah, adding new columns to traditional datastore is typically painful enough anyway, with NoSQL it's so easy to just push entirely new data structures and mostly things still work, it's just that when something breaks, it's usually bad... I'll wind up writing a ton of data checks in order to keep up with the changing data
21:34 < chapel> mediaupstream: well one way is with migration scripts
21:34 < chapel> scripts that transform the data
21:35 < chapel> mediaupstream: they aren't the best thing, and have their own issues
21:35 < chapel> mediaupstream: but they allow the code to be cleaner
21:36 < samholmes> Is there a VC++ compiler CLI, or do I have to download the large IDE?
21:36 < chapel> mediaupstream: other is what Domenic_ recommended, if built out well enough, it can be very useful and great for rolling back changes, since the data can be translated back or forth as needed
21:36 < mediaupstream> chapel: do you roll your own migrations or is there a good project or standard for it? I'm fairly vanilla when it comes to migrating data
21:36 < chapel> mediaupstream: at geeklist we roll our own
21:36 < chapel> mongodb uses javascript
21:36 < Domenic_> samholmes: you have to download the IDE, although you never have to open it.
21:36 < chapel> so its fairly easy to write scripts
21:36 < chapel> just some different functions, and its sync only
21:37 < jsemar> (sorry node noob here) if i have a basic http server that stores nothing, and just proxy's http requests...and I am finding that the more requests it handles and the longer it runs the slower it runs until restart...where should i look first?
21:38 < CIA-93> node: Ben Noordhuis master * r32e0027 / test/simple/test-net-socket-timeout.js : test: fix simple/test-net-socket-timeout - https://github.com/joyent/node/commit/32e00272c8ad55afebba5599445e982951d5ce44
21:38 < jsemar> also there seems to be no memory issue (as told by 'top')
21:38 < samholmes> Domenic_: You mean, once I download it, I can run npm install and it'll all just work?
21:38 < Domenic_> samholmes: well, download and install, and install Python 2.7
21:38 < chapel> mediaupstream: I kind of wish there was something with mongoose (which we use) for handling migrations
21:39 < samholmes> Domenic_: Why is python needed? :S
21:39 < Domenic_> samholmes: Something something gyp something
21:39 < chapel> samholmes: for compiling node
21:39 < alex____> test
21:39 < samholmes> chapel: I already have node compiled, don't I?
21:39 < Domenic_> C++ is not cross-platform enough
21:39 < chapel> samholmes: its one of the few languages guaranteed to be on almost all *nix machines
21:40 < Domenic_> More snakes = better
21:40 < chapel> samholmes: idk do you?
21:40 < samholmes> chapel: Well, I can run node just fine.
21:40 < chapel> oh
21:40 < chapel> re: vc++
21:40 < chapel> no idea
21:40 < chapel> I don't use windows
21:40 < chapel> no help there :(
21:41 < samholmes> chapel: The only trouble I'm having it compiling modules: https://github.com/niftylettuce/node-email-templates/issues/4
21:41 < Domenic_> just install VC++ 2010 Express, install Python 2.7, make sure you're using Node x86 instead of x64 to avoid pain, and you're good
21:42 < mediaupstream> chapel: I really think I need a simple "Doing migrations with Mongo" tutorial, at least to wrap my head around it in practice
21:42 < mediaupstream> chapel: I'm fairly sure I could get something working but i'm just not sure if my ideas are crazy or sane :)
21:42 < chapel> mediaupstream: most times its highly dependent on the data being changes
21:42 < chapel> sometimes its just renaming a field, but sometimes its more complicated
21:43 < chapel> like reformatting the data
21:43 < niftylettuce> samholmes: hey let me help you out with issue #4
21:43 < chapel> mediaupstream: you won't know if its crazy until you try it :P
21:44 < chapel> mediaupstream: http://www.mongodb.org/display/DOCS/Scripting+the+shell
21:44 < chapel> what the heck man, aheckmann
21:45 < mediaupstream> chapel: thanks for the link and the push
21:45 < aheckmann> chapel: you're a funny guy lol
21:45 < niftylettuce> samholmes: did you see this yet? https://github.com/brianmcd/contextify/issues/12
21:45 < niftylettuce> samholmes: specifically https://github.com/brianmcd/contextify/issues/12#issuecomment-3270433
21:47 < chapel> niftylettuce and samholmes: npm install https://github.com/Benvie/contextify/zipball/master
21:47 < chapel> might work
21:47 < chapel> idk about on windows
21:48 < gicode> If I slice() a buffer and drop reference to the initial buffer, will the unreferenced bytes be GCed or are they retained by the slice?
21:49 < chapel> gicode: not sure, but as far as I know buffers are outside of gc
21:49 < gicode> chapel: That doesn't really make sense
21:49 < chapel> why not?
21:49 < niftylettuce> samholmes: you could fork this https://github.com/tmpvar/jsdom/blob/master/package.json and replace the contextify dependency version with "https://github.com/Benvie/contextify/tarball/master", then fork the other modules respectively all the way down if you don't want to do the dirty approach with zip/move folders etc
21:49 < gicode> chapel: Do you mean the memory is outside the JS heap?
21:49 < chapel> they aren't native to js or v8
21:50 < gicode> chapel: It would make no sense for them not to be GCed in general
21:52 < chapel> gicode: well the memory is outside of v8
21:52 < gicode> chapel: I could understand if the memory for Buffer was maintained outside V8
21:52 < gicode> Yeah
21:52 < chapel> so the v8 gc most likely doesn't know about them, but I could be mistaken and am not sure
21:52 < chapel> A Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap.
21:52 < gicode> chapel: Well, when a Buffer is GCed, there must be a decision to free the backing memory
21:53 < chapel> http://nodejs.org/api/buffer.html
21:53 < samholmes> niftylettuce: But, even if I could get contextify compiled, how do npm email-templates? email-templates fail to install after it gets to contextify, so how could I simply replace the dependency with the binaries from Benvie?
21:54 < gicode> I am guessing the answer to my question is, yes the slice retains the entire backing buffer.
21:54 < chapel> gicode: https://groups.google.com/forum/#!topic/nodejs/ddXqNI_e_pU
21:54 < chapel> looks like it is part of gc by reference or some sort
21:55 < chapel> but yes, re: slice it keeps the original by reference I believe
21:55 < chapel> shouldn't answer questions I don't know :P
21:55 < CIA-93> libuv: Bert Belder inet * ra700b7d / (LICENSE include/uv.h uv.gyp src/inet.c): Add libuv-ified versions of inet_pton and inet_ntop - https://github.com/joyent/libuv/commit/a700b7deaaf3e34d430f13c9affd83956e61fe53
21:55 < CIA-93> libuv: Bert Belder inet * r7c7595a / src/uv-common.c : Use uv_inet_ntop/uv_inet_pton, instead of the c-ares implementations - https://github.com/joyent/libuv/commit/7c7595a98a9bb5da6f6be87fb81530735fc9ad55
21:56 < samholmes> How do I know if I'm running Node x86
21:56 < samholmes> ?
21:56 < CIA-93> node: Ben Noordhuis master * r4c150ca / (7 files in 3 dirs): net: fix listen() regression, revert patches - https://github.com/joyent/node/commit/4c150ca0d0cc4bd8dc6d182e0bf850daf27a2422
21:57 < RLaa> samholmes, if contexify is installed into node_modules dir of your project then email-templates should find it
21:57 < gicode> samholmes: ldd `which node`
21:57 < RLaa> unless it wants different version you installed
21:57 < RLaa> gicode, good luck with that on windows
21:57 < samholmes> chapel: If I do npm install https://github.com/Benvie/contextify/zipball/master wouldn't that install contextify as node_module, _not as a dependency_?
21:58 < gicode> RLaa: eh, windows...
21:59 < RLaa> samholmes, if suitable version is installed locally or globally then npm should use it as dep and not download it again
21:59 < RLaa> actually not sure when it's installed globally
21:59 < samholmes> RLaa: Oh, so after npm install https://github.com/Benvie/contextify/zipball/master I can run npm install email-templates and it will skip the contextify dep?
22:00 < RLaa> maybe
22:00 < RLaa> depends on version issues
22:00 < RLaa> i guess you have to try
22:01 < samholmes> `which node` doesn't work in powershell
22:01 < RLaa> samholmes, i think that zipball is just github dump, no binaries inside
22:01 < samholmes> what's a github dump?
22:01 < gicode> samholmes: The whole command is useless in powershwll
22:02 < RLaa> specific git revision as single zip file?
22:02 < samholmes> gicode: ?
22:02 < gicode> samholmes: I gave you a command for Linux/BSD/Unix, not windows.
22:02 < RLaa> samholmes, i suggest you look how to set up the compiler, stop using windows, or use pure js modules with pure js deps
22:03 < samholmes> gicode: Ah, well I should have specified that I wanted to know if I'm running node x86 on windows
22:04 < samholmes> RLaa: I'm installing VC++ express right now. I'm confused on how all this compiler stuff works.
22:04 < gicode> samholmes: If you have cygwin, you could use "file" on the node binary.
22:05 < gicode> samholmes: If not, you could try "dumpbin /headers" on the binary
22:06 < RLaa> i would have picked 2nd solution
22:07 < kinergy> hi
22:07 < samholmes> I found /nodejs under /Program Files (x86)/
22:07 < samholmes> So that solves that.
22:07 < kinergy> is there anybody who could help me get hiredis installed on a mac? I'm getting preinstall errors
22:08 < sshaginyan> ~Ste
22:08 < CIA-93> libuv: Ben Noordhuis inet * r40e6351 / src/inet.c : inet: fixups, squash - https://github.com/joyent/libuv/commit/40e6351b7a2469f371deb0263784e780e40467c5
22:09 < sshaginyan> Hey guys I'm passing an array with query  { 'data[]': queue } and I'm doing request.on('data', function(data)). Data is buffered how do I read this as an array again?
22:12 < CIA-93> libuv: Bert Belder inet * rd81992a / (src/inet.c src/uv-common.c): Use uv_inet_ntop/uv_inet_pton, instead of the c-ares implementations - https://github.com/joyent/libuv/commit/d81992a7fd64b5ef7cf02bc86d09d4652d1df12e
22:13 < kinergy> hi guys, I'm having difficulty getting npm install faye-redis to properly complete due to hiredis not compiling correctly. Any thoughts?
22:13 < niftylettuce> samholmes: you would need to fork jsdom, replace contextify inside package.json of jsdom with the path to that tarball, then fork juice and replace path to jsdom with the path to the tarball of your fork, then fork node-email-templates and replace juice with path to tarball of your juice fork, then in your project replace node-email-templates version with the path to tarball of your fork of node-e
22:13 < niftylettuce> mail-templates
22:14 < niftylettuce> samholmes: does that make sense?
22:14 < niftylettuce> once you did all that then you could just do npm install -d inside your project and it would use the other node-email-templates path versus the version in npm
22:14 < CIA-93> libuv: Bert Belder inet * r34893f0 / (LICENSE include/uv.h uv.gyp src/inet.c): Add libuv-ified versions of inet_pton and inet_ntop - https://github.com/joyent/libuv/commit/34893f076c3f56ae7f0589e6d5f101f0c383c24c
22:14 < CIA-93> libuv: Bert Belder inet * r75dd64a / src/uv-common.c : Use uv_inet_ntop/uv_inet_pton, instead of the c-ares implementations - https://github.com/joyent/libuv/commit/75dd64a448782de17cf6eade2967c62ef627aef4
22:25 < niftylettuce> samholmes: need me to set it up for you?
22:25 < niftylettuce> samholmes: just lmk
22:26 <@Nexxy> niftylettuce, !
22:26 <@Nexxy> I was beginning to worry that you had wilted
22:26 < samholmes> niftylettuce: possibly. Do you have a windows machine?
22:27 < niftylettuce> Nexxy: <3
22:28 < niftylettuce> samholmes: no, but I have a VM of it though, won't need to use it, i can do it blindly, one sec, testing PayPal in my app real quick
22:28 < niftylettuce> Nexxy: good2seeu2 :D
22:30 < CIA-93> libuv: Bert Belder inet * rc4d9319 / (5 files in 2 dirs): Remove c-ares tests and benchmarks - https://github.com/joyent/libuv/commit/c4d9319cd7cccee6cb06d668212a184d14076188
22:31 < etcetera> is there a way to avoid restarting the server everytime I make a change to code?
22:32 < gicode> etcetera: https://github.com/remy/nodemon/
22:33 < etcetera> gicode: thanks.
22:34 < samholmes> niftylettuce: Idk, I might just use visionmedia's ejs module for now. Your module is nice, and would be awesome to have juice, but it seems to me that all this hassle isn't worth time I could be spending coding. xP
22:35 < etcetera> gicode: nice.
22:36 < niftylettuce> samholmes: use Linux Mint or Ubuntu and you'd be fine from the start :D
22:36 < etcetera> I wish the -g flag would also source ~/.bashrc fo rme.
22:36 < etcetera> npm install -g ...
22:36 < niftylettuce> samholmes: you can also run a dev Ubuntu VM using something like VirtualBox or Virtual PC, then use it to run your app, most servers are linux anyways and you would most likely want to dev as closely related to production environment as possible
22:36 < gicode> etcetera: You mean, update your path?
22:36 < etcetera> gicode: yes.
22:37 < gicode> etcetera: There are lots of different shells and lots of different ways to manage PATH for each.
22:37 < niftylettuce> samholmes: meaning you could still develop in your Windows IDE, but you'd be saving code to a folder which the Ubuntu VM is running the app with
22:37 < niftylettuce> samholmes: ill port it to windows for you, hang tight
22:38 < etcetera> gicode: fair enough, but it would be nice if I could flag that as an option.
22:38 < gicode> etcetera: Besides, you should only need to add one entry to your path.
22:38 < samholmes> niftylettuce: Would mac have these inconsistencies too? I was thinking of getting a MBA, but that might be awhile in the future. Maybe I should seriously considered installing ubuntu officially on my laptop until I get my MBA.
22:38 < gicode> etcetera: If you are adding a separate entry for each module you are doing it wrong ;-)
22:38 < niftylettuce> samholmes: Mac wouldn't have the issues, since it is *nix based
22:38 < etcetera> gicode: regardless, you'll need to update your path.
22:38 < etcetera> unless you start a new shell.
22:38 < gicode> etcetera: Huh?
22:39 < samholmes> niftylettuce: Right. I wish I had my macbook air right now. XD
22:39 < niftylettuce> samholmes: however you pay tons of cash for Mac and you must ask the question to yourself based on your needs, "is it worth it?" -- you could easily turn your pc you have now into linux mint powerhouse
22:39 < gicode> etcetera: Are you thinking of "rehash"-type semantics from csh/tcsh?
22:39 < niftylettuce> samholmes: http://linuxmint.com/ highly recommended
22:39 < niftylettuce> samholmes: going to grab grub then ill port it to windows for you if you don't decide to run a Ubuntu or Linux Mint VM
22:39 < etcetera> gicode: global will always install to /usr/local/bin but it it's immediately available in the shell you executed that command from.
22:40 < etcetera> unless you either update path, or start a new shell.
22:40 < gicode> etcetera: That is really odd.  Are you sure you didn't modify the path in that shell by hand?
22:40 < samholmes> niftylettuce: My VPS is in ubuntu, so I'll prolly use that. But until then I need to get shit done and I'm using windows to do that for now.
22:41 < gicode> etcetera: npm can't modify your environment...
22:41 < samholmes> niftylettuce: You could also post the port on your github project for windows users in the future.
22:48 < sshaginyan> Hey guys when posting data using request.on('data', function(data){console.log(data.toString())}) I get this id%5B%5D=one&id%5B%5D=Car
22:48 < sshaginyan> Is there a good way to parse this?
22:49 < SomeoneWeird> url.parse iirc
22:49 < AAA_awright> sshaginyan: Like into { 'id[]': [ 'one', 'Car' ] } ?
22:50 < AAA_awright> You're looking for http://nodejs.org/docs/latest/api/all.html#all_query_string
22:50 < sshaginyan> yes
22:51 < sshaginyan> AAA_awright: So something like this querystring.parse(data.toStirng());
22:51 < sshaginyan> ?
22:51 < AAA_awright> toString yeah
22:51 < AAA_awright> Try it out
22:51 < AAA_awright> sshaginyan: Pull up the REPL and run require('querystring').decode('id%5B%5D=one&id%5B%5D=Car');
22:52 < context> works here
22:53 < AAA_awright> er, not decode, but parse
22:53 <@Nexxy> niftylettuce, <3 ^-^
22:54 < sshaginyan> AAA_awright: They both did the same thing
22:54 < AAA_awright> The latter is the public API method and has more arguments iirc
22:58 < sshaginyan> AAA_awright: I'm doing this in jquery $.post("http://localhost:1337/", { 'data[]': queue }, function() {…} where queue is an array obj. 1) I don't understand how 'data[]' helps me. 2) When I request I get data%5B%5D=two%2CBike and after  querystring.parse I get { 'data[]': 'two,Bike' }.
22:59 < sshaginyan> So what's the point of doing 'data[]'?
23:04 <@Nexxy> bake early, bake often.
23:05 < CIA-93> libuv: Bert Belder master * r3b46285 / config-mingw.mk : windows: remove libeio mentions from Makefile - https://github.com/joyent/libuv/commit/3b46285ff8dee216666b98e508b21392c351b75a
23:06 < CIA-93> libuv: Bert Belder inet * r32f93e1 / (6 files in 3 dirs): Add libuv-ified versions of inet_pton and inet_ntop - https://github.com/joyent/libuv/commit/32f93e14cbeea53ac8e2fc1dc77207dc6b251003
23:06 < CIA-93> libuv: Bert Belder inet * r3a8bb3b / src/uv-common.c : Use uv_inet_ntop/uv_inet_pton, instead of the c-ares implementations - https://github.com/joyent/libuv/commit/3a8bb3b2b1aae1d254eee0da62f55a2a8e921011
23:06 < CIA-93> libuv: Bert Belder inet * r35c4858 / (5 files in 2 dirs): Remove c-ares tests and benchmarks - https://github.com/joyent/libuv/commit/35c4858231b6f38d16e9c8a64cb0f14e9c1919b4
23:06 < CIA-93> libuv: Bert Belder inet * ra069956 / (8 files in 5 dirs): Remove c-ares integrations - https://github.com/joyent/libuv/commit/a06995699622fd25125373e1992b8ceffd85efb1
23:06 < CIA-93> libuv: Bert Belder inet * r41b1265 / (93 files in 11 dirs): Rip out c-ares - https://github.com/joyent/libuv/commit/41b1265af8329131154539cb0d1eda57758b62be
23:09 < dexter_e> Dear Node Masters;    How do we approach making our App respond   on http and https  at the same time ? 
23:09 < dexter_e> Do we call createServer twice ?
23:09 <@Nexxy> dexter_e, I use an SSL proxy
23:09 <@Nexxy> and just pipe requests to non-ssl ports internally
23:10 <@Nexxy> dexter_e, https://github.com/substack/bouncy/
23:10 < niftylettuce> dexter_e: you could also use bouncy by SubStack @ https://github.com/SubStack/bouncy
23:10 < niftylettuce> Nexxy: you owe me a soda
23:10 <@Nexxy> niftylettuce, you owe me a node-google-drive api ;o
23:10 < dexter_e> Nexxy: Thanks!
23:10 < etcetera> anyone know how I can open all *.js files in a folder using sublime
23:10 < niftylettuce> Nexxy: yea after I pump out this first startup prototype im going to bust out that API!
23:10 < niftylettuce> tryin to focus :D
23:11 < CIA-93> libuv: Bert Belder master * r32f93e1 / (6 files in 3 dirs): Add libuv-ified versions of inet_pton and inet_ntop - https://github.com/joyent/libuv/commit/32f93e14cbeea53ac8e2fc1dc77207dc6b251003
23:11 < CIA-93> libuv: Bert Belder master * r3a8bb3b / src/uv-common.c : Use uv_inet_ntop/uv_inet_pton, instead of the c-ares implementations - https://github.com/joyent/libuv/commit/3a8bb3b2b1aae1d254eee0da62f55a2a8e921011
23:11 < CIA-93> libuv: Bert Belder master * r35c4858 / (5 files in 2 dirs): Remove c-ares tests and benchmarks - https://github.com/joyent/libuv/commit/35c4858231b6f38d16e9c8a64cb0f14e9c1919b4
23:11 < CIA-93> libuv: Bert Belder master * ra069956 / (8 files in 5 dirs): Remove c-ares integrations - https://github.com/joyent/libuv/commit/a06995699622fd25125373e1992b8ceffd85efb1
23:11 < CIA-93> libuv: Bert Belder master * r41b1265 / (93 files in 11 dirs): Rip out c-ares - https://github.com/joyent/libuv/commit/41b1265af8329131154539cb0d1eda57758b62be
23:11 < bnoordhuis> dexter_e: http.createServer() and https.createServer(0
23:11 <@Nexxy> niftylettuce, \o/ 
23:11 < bnoordhuis> s/0/\)/
23:11 < dexter_e> bnoordhuis:  That method throws a PORT IN USE exception 
23:12 < othiym23> etcetera: subl *.js
23:12 < etcetera> command not found :-P
23:12 < othiym23> (assuming you've installed the command-line tool for Sublime)
23:12 < othiym23> etcetera: http://www.sublimetext.com/docs/2/osx_command_line.html
23:13 < etcetera> othiym23: what about nested directories :-P
23:14 <@Nexxy> etcetera, just open a folder O_o
23:14 < othiym23> etcetera: subl **/*.js
23:14 < othiym23> assuming you're using bash or zsh
23:14 < niftylettuce> samholmes: almost done!
23:14 < samholmes> niftylettuce: Sweet potatoes! :D
23:14 < othiym23> or 'subl .' at the root of the hierarchy you want to edit
23:15 < niftylettuce> samholmes: let me know if this works https://github.com/niftylettuce/node-email-templates#windows
23:16 < samholmes> niftylettuce: I think it worked, but there were a few errors and warns
23:17 < niftylettuce> samholmes: share them if you could
23:17 < etcetera> othiym23: oh nice you can just do folders.
23:17 < samholmes> I'll pm them
23:17 < niftylettuce> ok
23:18 < bnoordhuis> dexter_e: bind one to port 80 and the other to port 443
23:20 < dexter_e> Error: listen EACCES --  at errnoException (net.js:781:11)
23:21 < dexter_e> bnoordhuis:  I tried that and I get  
23:21 < dexter_e> I think it might have to do do with the permissions binding to low number ports
23:22 < dexter_e> It works when I run it with sudo though
23:23 < flexd> uh, does anyone know if there is a module that will allow me to match any url in a string?
23:23 < flexd> and capture them
23:25 < sshaginyan> Hey guys how do I access var x = { 'data[]': '[object Object]' } object? I tried x['data[]'].test but didn't work
23:27 < WarheadsSE> sshaginyan: wouldn't it simple be 
23:27 < sshaginyan> WarheadsSE: ?
23:27 < WarheadsSE> var x = { data : [object,object]} 
23:28 < WarheadsSE> so then x.data[N]
23:29 < WarheadsSE> idk if you meant that to be an array, or just an object
23:29 < WarheadsSE> but string-naming it as 'data[]' .. bad.
23:30 < sshaginyan> WarheadsSE: THis is what  I'm trying to do
23:30 < sshaginyan> one sec
23:31 < sshaginyan> WarheadsSE: http://pastie.org/4402587
23:32 < WarheadsSE> "data[]" = bad.
23:33 < WarheadsSE> I can assume that client is in the browser?
23:33 < sshaginyan> WarheadsSE: So I have an array of objects (associative array) and every two seconds of that array is not empty the array is sent to the server via ajax  
23:33 < sshaginyan> yes
23:33 < sshaginyan> so I'll change 'data[]'
23:34 < WarheadsSE> it's a simple check to see what type it is on the other end, and literally naming it that, is not smooth
23:34 < sshaginyan> WarheadsSE: okay I get this on the other end { 'data[]': '[object Object]' }
23:35 < sshaginyan> How do I access my associative array?
23:35 < sshaginyan> or obj
23:36 < WarheadsSE> are you subitting it as JSON or what
23:36 < dexter_e> That should work as long as you use the string to access it again
23:36 < dexter_e> 'data[]'  is being treated as a string 
23:37 < WarheadsSE> probably doing form encoding or soething on it
23:37 < sshaginyan> WarheadsSE: I assume I have to do require('querystring').parse(data.toString())['data[]']
23:37  * WarheadsSE doesn't do much browser coding
23:37 < sshaginyan> WarheadsSE: No
23:38 < sshaginyan> dexter_e: Yes it's being treated as a string
23:39 < sshaginyan> Okay guys here it is [{id:'a', name:'bye'}, {id:'b', name:'hello'}]
23:39 < sshaginyan> I'm sending this via Jquery $.post 
23:40 < sshaginyan> What is the best way to parse/decode this? I'm doing console.log(require('querystring').parse(data.toString()));
23:40 < sshaginyan> Where data is buffered
23:44 < WarheadsSE> I'd suggest passing it as json..
23:46 < nicholas_> anyone else having issues with express-resource on 0.8.4?
23:48 < EhevuTov__> nicholas_ did you ask in the #express
23:48 < nicholas_> EhevuTov__: Ill try there, thanks
23:50 < CIA-93> node: Bert Belder cares-move * r27af1ff / (102 files in 15 dirs): uv: upgrade to 41b1265 (+5 more commits...) - https://github.com/joyent/node/commit/27af1ffc4dcb12991dff00f41ca39681d972eb2d
23:52 < CIA-93> node: Bert Belder cares-move * r735897d / (node.gyp src/cares_wrap.cc src/tree.h): dns: don't rely on libuv for c-ares integration - https://github.com/joyent/node/commit/735897d900353d8f5ca625f94994bd5f0f692512
23:52 < CIA-93> node: Bert Belder cares-move * r9c54576 / (28 files in 7 dirs): uv: upgrade to 3a8bb3b - https://github.com/joyent/node/commit/9c54576c91e33323c269915622d8decf76b36e1f
23:52 < CIA-93> node: Bert Belder cares-move * rf9c0e91 / (src/cares_wrap.cc src/tcp_wrap.cc src/udp_wrap.cc): dns: use uv_inet_ntop/uv_inet_pton instead of c-ares equivalents - https://github.com/joyent/node/commit/f9c0e91c49d8cb0060230a663a6ebe2fc87814f6
23:52 < CIA-93> node: Bert Belder cares-move * reb9e87e / (102 files in 15 dirs): uv: upgrade to 41b1265 - https://github.com/joyent/node/commit/eb9e87e7c3024b0fb87e398aa32faf3a722227a1
23:59 < CIA-93> node: Bert Belder cares-move * r9e55ba7 / (node.gyp src/cares_wrap.cc src/tree.h): dns: don't rely on libuv for c-ares integration - https://github.com/joyent/node/commit/9e55ba7d6bbfeaa867e0f151dd27bc0ba034cad7
23:59 < CIA-93> node: Bert Belder cares-move * re0a603a / (28 files in 7 dirs): uv: upgrade to 3a8bb3b - https://github.com/joyent/node/commit/e0a603a4993e995080a8926fcddbbde752a2136e
23:59 < CIA-93> node: Bert Belder cares-move * racea4c4 / (src/cares_wrap.cc src/tcp_wrap.cc src/udp_wrap.cc): dns: use uv_inet_ntop/uv_inet_pton instead of c-ares equivalents - https://github.com/joyent/node/commit/acea4c4123b346495de79498f5b4200d6fd1bf1d
23:59 < CIA-93> node: Bert Belder cares-move * r658cf43 / (102 files in 15 dirs): uv: upgrade to 41b1265 - https://github.com/joyent/node/commit/658cf43b7c631dfffe87fc5fd0dbad4599117993
--- Log closed Tue Aug 07 00:00:36 2012
