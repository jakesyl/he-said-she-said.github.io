--- Log opened Sat Feb 23 00:00:00 2013
--- Day changed Sat Feb 23 2013
00:00 < AAA_awright> carpii: Why would you ignore If-Modified-Since?
00:00 < carpii> in most cases you wouldnt, but lets say theres some urgent bug fix and he wants all clients to ignore their cache
00:00 < carpii> then its just a mechanism of refreshing all clients without having to wait 24 hours for their cache to expire
00:02 < AAA_awright> carpii: If you updated the local resource, then that would mean the modified-time is newer than the If-Modified-Since header
00:02 < AAA_awright> Not older...?
00:03 < carpii> I dont see what you mean. If the client says 'If-Modified-Since' and it has been modified, then the server sends the full payload instead of just replying 'Not modified'
00:04 < carpii> but youre also assuming the JSOn is a static file being served form disk, which may not be the case
00:04 < carpii> he might need to emit his own Last-Modified header if its being dynamically served
00:06 < sechrist> it's my node peeps
00:06 < sechrist> what's happening
00:10 < foenix> does anybody have an example of fetching a resource from an ftp server?
00:10 < foenix> ftp-get isn't working
00:15 < carpii> in what way isnt it working?
00:24 < mscdex> foenix: depends on the ftp module you're using
00:25 < foenix> mscdex, oh I got it already
00:25 < foenix> turns out that ftp-get is sending extra info that causes the ftp serve to deauth
00:25 < foenix> so I used jsftp
00:25 < foenix> ty, though
00:33 < MI6> joyent/node: isaacs master * 74c0840 : lint - http://git.io/NtzS8g
00:35 < ericelliott> is Node.js in Action available now?
00:35 < ericelliott> http://www.manning.com/cantelon/
00:38 <@TooTallNate> ericelliott: it's very close… bound copies are due by the end of march I believe
00:38 <@TooTallNate> ericelliott: but you can pre-order and get a prerelease copy with *most* of the chapters
00:38 < ericelliott> TooTallNate: Does the ebook get sent right away?
00:38 < ericelliott> I have a coworker who's doing his first Node project next week.
00:38 <@TooTallNate> ericelliott: i'm not sure to be honest, but it shouldn't be long it'd assume
00:38 < onr> i wonder how does that book keep up with updates
00:39 <@TooTallNate> onr: well let's just say we've had to rewrite a few chapters more than one time
00:39 <@TooTallNate> it's tedious…
00:39 <@isaacbw> TooTallNate: you're writing a book?
00:39 <@TooTallNate> isaacbw: yup, with visionmedia and mcantelon
00:40 <@TooTallNate> isaacbw: http://www.manning.com/cantelon/
00:40 < onr> TooTallNate: just a note, i saw that page several times and closed immediately when i saw "August 2011", thought it's ancient
00:40 <@isaacbw> TooTallNate: ah, very cool
00:41 <@TooTallNate> onr: well that's just when we started writing it… like i said: we've had to rewrite quite a few chapters to keep up with node
00:41 <@TooTallNate> onr: also, i have no control over that website
00:41 <@TooTallNate> it looks awful indeed
00:41 <@TooTallNate> like from the 90's
00:43 < onr> TooTallNate: sure. maybe you should ask for removing that line, not to mislead potential buyers
00:45 <@TooTallNate> onr: noted
01:02 < carpii> im trying to store objects in redis, via node_redis package. I understand redis stores everything as a string, but is it my job to JSON.stringify objects before passing them to node_redis, or can I just pass an object and the module will sringify it for me?
01:03 <@isaacbw> carpii: I'm sure the node_redis docs will say something
01:06 < carpii> yeah i checked the docs. its in the form of examples, but only shows strings being passed
01:06 < carpii> i wasnt sure if thats just how it is, or whether it supports objects too
01:08 < carpii> ok got it, i was just in one of those zones where everything confuses you :)
01:09 < carpii> i have to pass strings to redis it seems, but i can pass objects down socket.io
01:12 < _pash> hello i am building a large website with node, how can i have views for jade in different directories? 
01:23 < lyaunzbe> Hey guys, npm question. I've been editing and locally installing package X. Im now working on a different project, whose package.json contains package x. However, when I run npm install, I get the local version of package X, not the one on npm...
01:24 <@isaacbw> lyaunzbe: do you have a node_modules folder in your home
01:25 <@isaacbw> directory
01:25 < rodyhaddad> Hey guys, does anybody here has any experience with Zombie.js and could help me out with some issues I'm encountering with it?
01:26 < lyaunzbe> isaacbw: yes, but it is empty. weird, I don't remember putting that there...
01:26 <@isaacbw> I don't know if it will solve your problem, but get rid of that
01:29 < lyaunzbe> isaacbw: cool. what is the .npm folder though? 
01:30 <@isaacbw> lyaunzbe: I'm not sure
01:30 <@isaacbw> where are you seeing that
01:31 <@isaacbw> oohh
01:31 < lyaunzbe> In my home folder. I actually think this is the issue, because it contains my local version for the package that is annoying me
01:31 <@isaacbw> it might be
01:32 < lyaunzbe> yup, it was! thanks for your help isaac
01:32 <@isaacbw> np. Fyi, I'm not isaac/s, I'm just a user like you
01:32 < kevwil> is it possible to create a CMAC with the node.js crypto module?
01:32 <@isaacbw> in case you were wondering why I didn't know what the .npm folder was ;)
01:34 < lyaunzbe> isaacbw: hehe, do you get that a lot?
01:35 <@isaacbw> lyaunzbe: the only reason I'm an op is because he was tired of being pinged instead of me
01:35 < carpii> what backend would you use if you were wanting to log multiuser chat activity?  My options seem to be… write it constantly to mongo, then export from there. Or hold recent chatlogs in ram, then flush to disk periodically using my a custom logger class
01:35 <@isaacbw> mongo seems like overkill if it's just a list of strings
01:35 <@isaacbw> and if you don't need to do any queries
01:37 <@isaacbw> carpii: why not just write directly to disk
01:37 <@isaacbw> why do you want to buffer it anywhere
01:42 < onr> carpii: just use text files
01:42 < fusiongrokker> just getting started with couchdb, looking for some advice with best practices... creating a rest api. should I put all rest api authtokens in one couch key, or in multiple keys? If multiple, what do I use as the couch key for each?
01:43 < carpii> isaac, it seems like it would be more efficient to buffer it in ram and then flush to disk every 100 lines or so, than to be constantly writing to a file. I accept I might be wrong on that though
01:44 <@isaacbw> carpii: it depends on how quickly data is coming in
01:44 < carpii> well lets assume it could be writing to file, when another packet comes in which needs logging. Surely it needs buffering somewhere even if its only short term
01:45 < onr> carpii: your HTTP server is probably logging all requests to disk
01:45 < carpii> or would i just create a stream and keep writing to it 
01:45 <@isaacbw> fusiongrokker: you will have more luck in a couchdb channel
01:45 < fusiongrokker> yeah, thanks
01:45 < carpii> onr, yes this is true. im not saying writing on demand is bad. Im fairly new to node so i was just asking for 'best practices' really
01:46 <@isaacbw> carpii: either way, a database is overkill
01:46 <@isaacbw> and will just slow everything down
01:47 < carpii> yeah i wasnt a big fan of the mongo idea anyway, i dont like mongo :)
01:47 <@isaacbw> mongo is great
01:47 < carpii> i dont deny that, i just dont enjoy working with it
01:47 < onr> carpii: i guess you think writing to memory then writing to disk is efficient, just have fsync turned off then let OS do the tricks
01:48 <@isaacbw> the querying power of an rmdb with the normalization of a key-value store
01:48 <@isaacbw> anyway, I'm off for the night
01:49 < carpii> so if my plan is just just pipe all logs to disk as and when they come in, Id have a global filewriter stream and just abritrary write to it ?
01:49 < carpii> without worrying about any syncronisation or anything right?
01:50 < onr> yep
01:50 < carpii> ok, thanks :)
01:51 < onr> carpii: what do you use for chat thing? socket.io?
01:51 < carpii> at the moment yes
01:51 < carpii> but i wonder if ive made the right decision, because i keep hearing more and more problems about socket.io
01:53 < onr> carpii: have a look at sock.js, also i think you can configure nginx for logging chat
01:54 < carpii> ok thanks. I dont think an httpd logging would suit my needs though, as I will probably want to augment it with stuff thats not necessarily present in the socket data
01:54 < onr> carpii: i'd do post-processing for that stuff
01:55 < carpii> it may not be possible, it depends on runtime variables
01:57 < onr> like what?
01:58 < carpii> things like the transport theyre using, whether they have ignored certain users etc etc
02:00 < onr> i'd embed session cookie
02:00 < carpii> and then what?
02:01 < AAA_awright> What am I supposed to do for byte-level locking?
02:02 < onr> then post-process to get user's given moment's state
02:11 < carpii> onr, im not sure how a session cookie is going to work for websocket comms
02:11 < carpii> the cookies only get set on httpd requests, right?
02:12 < lyaunzbe> erm, any reason why I would be getting 'listen eacess' for port 80? I have nothing running on there already, so is it reserved?
02:13 < carpii> youre runing as normal user, but port 80 can only be bound to by root
02:13 < onr> carpii: you'll need to send session cookie through websockets manually
02:14 < lyaunzbe> ahhh, thank you carpii
02:14 < carpii> np, i had same problem the other day ;D
02:14 < carpii> ok thx onr. I dont think this is the solution im looking for, but i appreciate the help
02:21 < zenodub> Man.
02:21 < zenodub> is there a better terminal client than putty for windows?
02:21 < zenodub> I search for one about every 6 months, but blah
02:21 < zenodub> used to osx on my laptop and ubuntu desktop at work.
02:21 < carpii> havent used windows in a long long time, but SecureCRT was my choice
02:22 < carpii> http://www.vandyke.com/products/securecrt/windows.html
02:22 < carpii> paid tho
02:24 < tim_smart> isaacs: (And others) NPM EPIPE issue: https://gist.github.com/c2fb9695b327afeb43cb
02:27 < zenodub> Thanks carpii, that might work
02:27 < zenodub> tabbed ftw.
02:27 < carpii> indeed
02:27 < onr> zenodub: i use cygwin for ssh
02:27 < carpii> if i was still on windows id pay $100 for securecrt
02:28 < carpii> but id probably also pay $500 not to be using windows :p
02:28 < zenodub> I don't mind windows.  It runs my audio software well.
02:29 < zenodub> I love Coda for OSX though
02:29 < carpii> i couldnt get along with it
02:29 < carpii> im on mac, but mostly im running vms so i develop via a share to linux
02:30 < zenodub> using vim?
02:30 < carpii> nah just using local apps but ive set linux up with afp
02:30 < carpii> so the fs appears local
02:31 < carpii> i actually use bbedit, but im moving more towards sublime text
02:31 < carpii> bbedit is a bit kronky :)
02:31 < zenodub> I use sublime on my linux box
02:31 < carpii> sublime is nice, i havent quite got into habit of using it exclusively though
02:31 < carpii> project suport is not quite there yet :(
02:31 < zenodub> word
02:31 < zenodub> ok i gotta jet peace
02:32 < carpii> later
02:32 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:32 < jesse-taylor> yo dudes, im making this socket, opentok, youtube api nowjs chatroom and im just wanting some honest feedback http://craz.ee
02:34 < carpii> confusing UI
02:35 < jesse-taylor> it works in facebook with this url http://apps.facebook.com/crazee-chat so im trying to make it blend into facebook eventually, havent handled much of the css yet
02:35 < onr> what about youtube api?
02:36 < jesse-taylor> post a youtube link in one of the rooms and see what happens
02:36 < jesse-taylor> real time on everyones screens and mutes the webcams if you know the room password
02:36 < carpii> i create a room, but it doesnt automatically join me to it, just dumps me back at list of rooms. Then when i try to enter my room, it asks me to name it (but in reality its asking me to provide a nick)
02:36 < jesse-taylor> yeah the second naming is your real name, but the wording of it sucks
02:37 < jesse-taylor> and i need to put them in the room auto still
02:37 < carpii> i dunno. if i can be brutally honest, the whole thing sucks :(
02:37 < jesse-taylor> go into sp chat and broadcast and use d50 as the password
02:37 < carpii> but ill kepp that to myself for fear of offending you :)
02:38 < jesse-taylor> did you use the whole thing?
02:38 < substack> jesse-taylor: nowjs seems to have been abandoned
02:38 < carpii> ah ok, im being harsh
02:38 < carpii> i just tried broadcast but i didnt realise it was video chat
02:38 < onr> jesse-taylor: youtube vids are synced to all users?
02:38 < substack> not that that would be a problem except for it relies on some dodgy underlying abstractions and apis that are version-sensitive
02:38 < carpii> i thought it just meant message all users
02:39 < jesse-taylor> i just broadcasted in sp chat to show you guys that
02:42 < jesse-taylor> onr, if i seek the time, or resume it, it puts it on that time for each user
02:43 < jesse-taylor> mutes the webcams while the videos play
02:44 < onr> jesse-taylor: since your cam is streaming, you're paying for opentok now?
02:44 < onr> or it has a free tier?
02:44 < jesse-taylor> 2 webcams are free, 3+ costs after so many minutes, so i have two rooms with 8 max
02:45 < jesse-taylor> and 2 max for the others
02:46 < jesse-taylor> as for the facebook canvas app, http://apps.facebook.com/crazee-chat what are some things i should look out for, also im sure ill need an ssl cert for https?
02:46 < carpii> hm opentok seems pricey compared to a dedicated server and flash media server license
02:47 < jesse-taylor> opentok is pricy if i wanted to go into the paid tier
02:47 < carpii> youre just using it for testing?
02:47 < jesse-taylor> but for 2 webcams streaming its free
02:47 < carpii> oki
02:47 < jesse-taylor> im pretty sure its free if 1,000 people are watching them too?
02:48 < carpii> i dont know, their pricing page is not that clear
02:49 < carpii> its says 1-1 (2 people) is free
02:49 < carpii> but 3 people watching same cam, is that free too?
02:49 < jesse-taylor> substack, if i keep using this old version of nowjs, should i avoid that or will it be ok as long as i dont add things it cant do?
02:50 < onr> jesse-taylor: only 1-1 is free
02:50 < jesse-taylor> im pretty sure it only counts the number of broadcasters, doesnt matter how many people are watching
02:51 < onr> jesse-taylor: it does matter
02:51 < substack> jesse-taylor: consider https://github.com/Raynos/engine.io-stream or https://github.com/substack/shoe with something like https://github.com/dominictarr/mux-demux to handle "rooms"
02:52 < substack> jesse-taylor: see also https://github.com/substack/stream-handbook#roll-your-own-socketio
02:55 < jesse-taylor> substack, right now if someone goes to craz.ee on the iPhone, or the desktop or the facebook canvas url, they all connect to the same place. anything you know that i should avoid or look into about multiple urls or ports or ssl or anything? still learning as i go
02:57 < Raynos> I use shoe + mux-demux
02:57 < substack> jesse-taylor: if you use better abstractions it will be more obvious what's going on
02:57 < Raynos> the rest is just streams
02:57 < substack> Raynos: oh now that the server stuff finally works I can whip up testling-ci tests for shoe :D
02:59 < Raynos> substack: how do you avoid port conflicts? How do you sandbox / secure it?
02:59 < jesse-taylor> storing room names nad usernames is all from an object right now, passes the room object to each user with nowjs and alters it on the server side, and only gets touched when an event happens. is this the worst idea ever? whats another option? db?
03:00 < substack> Raynos: it's running in a chroot but I'm not sure about ports yet
03:00 < substack> it's kind of a free for all at the moment
03:01 < carpii> jesse, i guess it depends how much data is travelling over the wire. Isnt nowjs the thing that lets you pass servser side objects around as if theyre local?
03:02 < jesse-taylor> carpii, yeah passes anything back and forth pretty much
03:02 < asdf12> writing efficient code (memory,cpu) sometimes gets in the way of readability / maintainability, agreed? so should you always go for the latter?
03:02 < carpii> have you looked in chrome inspector to see whats actually being transferred?
03:03 < jesse-taylor> also if i get an ssl cert, will i need to run on different ports? or will that screw up who connects to each other?
03:03 < carpii> uh, id say keep your code maintainable where possible, but a service which iis low performance is going to be a failure, so sometimes you just have to go the less idea route
03:03 < carpii> less ideal
03:04 < carpii> but id argue its fairly easy to write maintainable code without nowjs
03:04 < asdf12> what
03:04 < jesse-taylor> right now its running with no db or storing anything, just an object that passes part of it back and forth when needed when an event happens
03:04 < asdf12> i wasn't talking about nowjs, i just meant in general
03:04 < jesse-taylor> not sure what the best way would be
03:04 < carpii> so was i asd, but jesse is using nowjs, i thought you were questioning that
03:05 < asdf12> passing an object around as a memory store... watch out for memory leaks
03:05 < jesse-taylor> it only passes the room object back and forth
03:05 < jesse-taylor> which has the userlist and session ids
03:06 < asdf12> which can be prone to leaks
03:06 < asdf12> besides you're adding a little overhead from the gc being triggered on that object constantly
03:07 < jesse-taylor> what would be a better option?
03:07 < asdf12> use redis or something
03:09 < fastest963> use redis to store the objects? seems like the node way he's doing it now is better
03:09 < fastest963> or just use pub/sub in redis?
03:09 < asdf12> but he's effectively using it as a memory store, which there are better things for that
03:09 < onr> just use nested arrays
03:10 < asdf12> if you had to do it all in node
03:10 < asdf12> i'd say stop passing the object store around
03:10 < asdf12> and pass around a object that wraps it
03:11 < fastest963> hmm, so he's storing objects from the client in node, and then sending it to other clients?
03:12 < carpii> yeah, just develop a simple messaging protocol which doesnt require all the bloat of nowjs 
03:13 < carpii> nowjs is convenient, but its not really gonna scale too well
03:13 < jesse-taylor> ok ill explain 1 sec
03:15 < jesse-taylor> var rooms = [{ 		'id': 1, 'name: 'SP Chat', 'users': [], 'userCount':0);
03:16 < jesse-taylor> thats on server side, then when someone connects it adds them to the appropriate one and passes only that room info back and forth when they do something (type a message, logout, etc)
03:16 < asdf12> prone to leaksss
03:16 < jesse-taylor> is this a harmful way?
03:17 < asdf12> yes
03:17 < carpii> but if theres 20 people in a room, and joe joins, does it then send the full list of 21 users to all clients?
03:17 < jesse-taylor> what are these leaks, i dont know yet
03:17 < asdf12> on top of security issues
03:17 < carpii> i dont know so much about the leaks, im more focusing on it being a really inefficient protocol :p
03:17 < jesse-taylor> it sends the full list to each user yes, only when someone logs in or out so it can update the room list
03:18 < carpii> ok yeah thats not great
03:18 < asdf12> so i can manipulate the object client side and send it back to you?
03:18 < carpii> why not just say 'userjoined' data: {username : "joe"}
03:18 < jesse-taylor> its not in the global scope
03:18 < asdf12> whocares
03:18 < asdf12> if i can manipulate it and send it back and you're taking it as right, then its a security issue
03:19 < jesse-taylor> how can you manipulate it if its not in global scope
03:19 < asdf12> so many ways
03:19 < jesse-taylor> dont know them, what are they
03:21 < asdf12> any javascript you run in the browser, can be manipulated
03:21 < jesse-taylor> also, if the nodejitsu server hiccups and restarts or something, whats the best way to reconnect the person on the website to show them the updates instantly? im sure theres a way
03:21 < asdf12> you use a storage thats not tied to your app
03:22 < dscape> jesse-taylor: if you have questions about how nodejitsu works let me know :)
03:22 < dscape> but its seems like this is a app level question
03:22 < jesse-taylor> is there a way to do something when it occurs?
03:22 < jesse-taylor> on the client side
03:23 < carpii> i think you should look into a comms library like socket.io
03:36 < cloudbender> wazaaaap
03:39 < cloudbender> was thinking about promises, tri-state logic, either moving from unfulfilled >> fulfilled, or unfulfilled >> failed.
03:40 < cloudbender> kinda cool.
03:40 < cloudbender> I'm using that model for a 4-bit flag set.
03:41 < cloudbender> for my cache thing
03:50 < cloudbender> //  flag 1000 error; flag 0100 busy; flag 0010 unpreserved; flag 0001 online;
03:53 < cloudbender> I like it
03:55 < mindcruzer> 4 bits for 4 flags? space waster over here
03:56 < cloudbender> well, until I can instantiate a nibble, I gotta waste 4 bits
03:56 < mindcruzer> haha, nibble
03:57 < cloudbender> and, that gives me room for 4 more flags, or a 'speshul' mark, or something
04:00 < asdf12> https://gist.github.com/anonymous/5018307 whats so special about setTimeout ?
04:00 < cloudbender> ok I'll bite ...
04:00 < asdf12> is it because its a global?
04:02 < cloudbender> asdf12 It seems you will escape your try block before the callback is complete.
04:02 < cloudbender> Would an error in the callback pull you back to the catch scope ?
04:03 < cloudbender> I have not used try-catch in asynch yet, so I could be worng
04:03 < cloudbender> *catch block I meant
04:04 < asdf12> no try catch in async is fine
04:05 < asdf12> i think it has something to do with setTimeout and it being a global, so if it throws, it's throwing in the global scope? or something
04:05 < cloudbender>  put a 'console.log' into a 'finally' clause, and throw in the callback, and see.
04:08 < cloudbender> try {task with callback} catch (e) {} finally {} ... I think you might blow right through the entire construct before your callback throws, if it throws.
04:08 < asdf12> oh no i'm wrong, guess you can't try catch async
04:09 < jocafa> completely offtopic, but here's the time lapse video i took at work today:  http://www.youtube.com/watch?v=yJ7it4c_Pco
04:09 < cloudbender> I rely on try-catch ALOT, so it's something of interest.
04:11 < mindcruzer> snowed here today too... damn snow
04:11 < cloudbender> what would work is function(){ callback(){ try...catch }}
04:11 < jlank> hey all
04:11 < jocafa> also, i like the try/catch notation:   try { stuff } catch (o_O) { }...
04:12 < jlank> is there any way to detect if a built in like `Buffer` exists, and if it does, leave it, if it doesn't define an empty function declaration for `Buffer`?  does that make any sense?
04:13 < jlank> my scenario is that i want to use a module that is written for node and use it in a couchdb show (which uses spidermonkey instead of v8 and thus has no Buffer)
04:14 < jlank> other than an instanceof Buffer check in the module, its js thru and thru, so I could technically use it if an error wasn't thrown because there is no Buffer class
04:18 < mindcruzer> var Buffer = Buffer || function Buffer () {} ?
04:20 < jlank> mindcruzer: let me give that a shot... I was trying something similar with an if statement and a function declaration (which didn't work cause FD's get hoisted and the if statement was useless)
04:20 < jlank> ya no dice, getting the same error: Assertion failed: (handle->InternalFieldCount() > 0), function Unwrap, file ../src/node_object_wrap.h, line 52.
04:21 < jlank> wait.. might have got it.. let me check something
04:22 < jlank> works for v8 if I do var Buffer = this.Buffer || ...
04:22 < jlank> going to test spidermonkey
04:24 < jlank> hmm.. not quite, spidermonkey still barfs spd-test.js:49: ReferenceError: Buffer is not defined
04:27 < mindcruzer> thats weird, when you specify it as a propery of the global object (this.Buffer) i would have thought you'd just get undefined
04:27 < cloudbender> Buffer = this.Buffer .... I think both 'Buffer' might have the same scope, in effect Buffer refers to itself ?
04:28 < mindcruzer> works for me in Firefox
04:29 < jlank> in v8 that line works and keeps the Buffer functioning
04:29 < jlank> in spidermonkey i'm twiddling with getting the module loaded right now, need to use load(..) instead of require(..)
04:36 < cloudbender> this might work
04:36 < cloudbender>       if(!(Buffer)) {Global.Buffer = function(){return null}};
04:36 < cloudbender> null is whatever you want it to be
04:37 < cloudbender> syntacticly it throws no errors but I haven't confirmed the property assertion
04:37 < jlank> Global == this you mean right?
04:37 < jlank> or window in the browser
04:38 < cloudbender> 'this' is execution context.  I don't use it if I can avoid it.
04:38 < jlank> i hear ya
04:38 < cloudbender> 'this' is not scope, it is execution context, as I understand it.
04:39 < mindcruzer> "null is whatever you want it to be"... sounds like a tagline
04:39 < jlank> ya i think you're correct
04:41 < mindcruzer> var Buffer = typeof Buffer === "undefined" ? function () {} : Buffer;
04:45 < jlank> id like to try that but I cant get spidermonkey to load the dang module.. I had this loading at work, not sure why i cant get it at home
04:45 < cloudbender> I beleive spider monkey is version sensitive in FireFox ?
04:45 < cloudbender> don;t know.
04:46 < jlank> i installed it with homebrew
04:46 < jlank> testing it out on the cli
04:47 < OTBS4Life> Anyone familiar with GridFS?  Is it possible to write a file and use the new ID as the "name" instead of specifying one?
04:49 < mindcruzer> cleaning up shitty javascript code is high on my list of things that I'd rather not do
04:49 < mindcruzer> wow
04:50 < cloudbender> it's like smelling someone's farts, alot.
04:50 < mindcruzer> I'm looking at a Backbone router thats approaching 1000 lines
04:51 < cloudbender> I hate when people write code with verbs and nouns for names, and they reverse the lexical meanings.
04:52 < cloudbender> as in 'create a file share' (bad)  versus 'share a file' (good)
04:52 < OTBS4Life> ESL makes it hard for some.  It's even harder to criticise on it since it is such a minor point, but makes a huge difference in being able to comprehend someone's stuff later on.
04:53 < mindcruzer> what drives me nuts is inconsistency
04:54 < mindcruzer> like maybe you prefix event handler functions with `handle` for a while, and then you just decide to stop for some reason
04:54 < cloudbender> I confess I author with inconsistency, but then I edit well.
04:55 < mindcruzer> sometimes I do too without realizing it, but when I realize what I've done it eats away at me until i fix it
04:56 < cloudbender> I've stopped using the terms 'handle, pointer, variable' and call everything a 'reference'
04:56 < mindcruzer> trying to figure out what to name stuff is surprisingly hard sometimes
04:56 < cloudbender> pointers are really machine addresses, and we just won't have them in the cloud
04:57 < cloudbender> I started using descriptors for what things are, versus what they mean.
04:57 < cloudbender> property .... indexes: {objects: []}
04:58 < OTBS4Life> Does anyone else feel like they code better when they are dehydrated?
04:58 < cloudbender> you mean hung-over ?
04:58 < OTBS4Life> No, just plain ol' dehydrated.
04:58 < jlank> mindcruzer: var Buffer = this.Buffer || function Buffer () {} works in v8 and couchdb's spidermonkey (which uses commonjs modules -- thanks @mikeal)
04:58 < OTBS4Life> I've found that if I don't drink water until lunch at work, I have a very productive morning.
04:58 < jlank> thanks for the help! 
04:58 < jlank> same to cloudbender
04:58 < OTBS4Life> It makes no sense at all, but the effect has been very consistent.
04:59 < cloudbender> OTSB4Life I would think about blood suger in that scenario
04:59 < OTBS4Life> Heh, yeah, probably something along those lines.
04:59 < cloudbender> Or blood-something-or-other
05:00 < mindcruzer> i like to be hydrated... i code best when its pitch black and I'm listening to techno music
05:00 < OTBS4Life> Same here!
05:00 < OTBS4Life> I'm working on some software for a 3D VNC client so that I can put on one of those Oculus Rift headsets and code all day.
05:01 < OTBS4Life> http://www.oculusvr.com/
05:01 < cloudbender> I'm a musician, and music distracts me when I code.  I keep trying to listen instead of think.
05:01 < OTBS4Life> I don't feel like hacking Compiz to be compatible, and I don't want to reinvent a windowing system, so I figured a 3D VNC client would suffice, since I usually use a variety of systems anyway.
05:02 < OTBS4Life> cloudbender, Listen to different music.  I'm a musician as well, and sometimes if I put some jazz on or something, it's hard to focus.  But if I put on some trance or dnb, it's minimal enough to drown out everything else.
05:02 < OTBS4Life> Try some Philip Glass or something.
05:02 < mindcruzer> I'm also a musician...  I can only listen to music that is consistent in its beat.. ex chill, trance
05:03 < mindcruzer> complicated music distacts me
05:03 < OTBS4Life> Put on Koyaanisqatsi in the background.
05:03 < mindcruzer> Digitally Imported PsyChill FTW
05:04 < mindcruzer> http://www.di.fm/play/psychill
05:04 < OTBS4Life> I like their Liquid DnB channel
05:04 < mindcruzer> never heard it... i really need to listen to more than just PsyChill and Minimal
05:05 < OTBS4Life> A DI subscription is the best thing I've ever invested in.
05:05 < OTBS4Life> It's what, $40/yr?
05:05 < OTBS4Life> Costs almost nothing, tons of great programming, decent audio quality.
05:05 < mindcruzer> I'm seriously considering it... its been like... a year... I should proably get on that
05:05 < OTBS4Life> My wife got it for me for Christmas 5 or 6 years ago, and we just renew it every year without a thought.
05:06 < OTBS4Life> You get 256kbit MP3 and 128kbit AAC streams.  That for me was the best part.
05:07 < mindcruzer> ok, I'll take your word for it and put it on my "to buy" list
05:07 < mindcruzer> someone else told me something similar a while back
05:08 < OTBS4Life> You could always try it for a few days to see if you like it.  They used to have a day pass for $2 or something.
05:08 < OTBS4Life> I don't know if they still do.
05:09 < OTBS4Life> Ah, $5/mo., $50/yr.
05:10 < mindcruzer> yeah thats a solid price, given how much I listen to it
05:12 < mindcruzer> i think underscore might be the most useful library ever
05:12 < mindcruzer> so simple, yet so awesome
05:12 < RLa> what, i listen di free?
05:13 < RLa> my mobile connection won't tolerate high bandwidth streams anyway :/
05:16 < OTBS4Life> RLa, I know what you mean.  I used to live in an area where your average 3G connection would go about 1K/sec
05:16 < OTBS4Life> And then I moved to Chicago, and I can stream FLAC to my phone.  :-D
05:16 < cloudbender> ok musicians   http://www.youtube.com/watch?v=BALcbAiwhZY
05:16 < RLa> it's not that bad here, but the cap is problem, 50GB here
05:16 < Eigen> I used to remember broadband when it was 5Mb/s
05:16 < OTBS4Life> 50GB?  or MB?
05:16 < Eigen> but then I moved to Kansas Kity
05:16 < RLa> GB
05:16 < Eigen> *City
05:16 < Eigen> not
05:17 < OTBS4Life> I don't think I"ve ever used more than 3 or 4GB on my mobile.
05:17 < OTBS4Life> Is this your primary?
05:17 < RLa> OTBS4Life, yes
05:17 < OTBS4Life> Ah, that makes sense.
05:17 < RLa> because i'm too cheap to pay 16€/month for 40mbit/s cable
05:18 < RLa> actually because i need to move a lot
05:18 < RLa> otherwise broadband connections are available here
05:19 < OTBS4Life> I'm paying ~$40/mo. for "15mbit" cable, but my speed tests always cap out around 35.  I live 2 blocks away from the datacenter where the fiber terminates.  I don't know if that has anything to do with it, but the cable guy didn't seem to care when he installed it.
05:19 < OTBS4Life> So I don't complain.  :-)
05:19 < mindcruzer> cloudbender: sounds good
05:19 < OTBS4Life> They alledgedly limit at 300GB/mo., but my online backup would regularly into the TB range, and they never said anything.
05:19 < RLa> hm, for 28€/month i could get 150mbit/s
05:20 < OTBS4Life> RLa, Wow, that's awesome.  Where?
05:20 < RLa> in Estonia :)
05:20 < OTBS4Life> RLa, That's awesome.
05:20 < RLa> yeah, when you need that speed
05:21 < OTBS4Life> Other than streaming video, what would you u se that bandwidth for?  I can't even imagine.
05:21 < OTBS4Life> Are they picky about not letting you run servers and what not?
05:21 < mindcruzer> cloudbender: https://www.youtube.com/watch?v=f4hj7pill74
05:22 < RLa> no, you can get static ip for small fee, and as far as i know there are no caps
05:22 < RLa> i once read through all their terms and conditions, found nothing interesting
05:23 < OTBS4Life> Static IPs here cost about $100/mo., and that buys you about 5mbit
05:23 < WarheadsSE> Anyone familiar with the sqlite3 module? Having issues with an unknown symbol :(
05:23 < RLa> OTBS4Life, but will you get sla with that?
05:23 < WarheadsSE> probably just being pissy with me.
05:23 < OTBS4Life> RLa, Not really, no.  :-)  Maybe 99.5%
05:24 < RLa> WarheadsSE, is that compilation issue?
05:24 < OTBS4Life> RLa, In Chicago though, if you are in the right building, there are plenty of other choices for providers.  Cogent for example has fiber everywhere, and they are much cheaper.
05:24 < OTBS4Life> It's the cable providers that are expensive.  If you want a static IP, you need a business plan, which is expensive.
05:25 < RLa> OTBS4Life, i'm not sure about the broadband but my current 3G connection works mostly in "working hours", during nights there are interrupts etc.
05:26 < RLa> OTBS4Life, we have 2 "cable" competitors, that's enough to keep price down
05:26 < OTBS4Life> RLa, My first broadband connection was WiFi on top of the nearest water tower.  When the pumps would kick on, the voltage to the AP would drop, causing it to reboot.  Whether it worked or not depended on farmers pumping water.  :-)
05:26 < OTBS4Life> This is the data center I live near:  http://www.datacenterknowledge.com/special-report-the-worlds-largest-data-centers/worlds-largest-data-center-350-e-cermak/
05:26 < RLa> oh, i remember using public wifi at my summer house
05:27 < OTBS4Life> It's 4 hops to YouTube and Netflix most of the time.
05:27 < mindcruzer> I accidentally read that as "1.1 million square food data center facility in Chicago." and was promptly confused
05:28 < OTBS4Life> lol
05:28 < OTBS4Life> Order a pizza
05:28 < OTBS4Life> I wish they had more photos of the inside...
05:28 < mindcruzer> probably be a damn good one
05:28 < OTBS4Life> There are armed guards everywhere.
05:28 < WarheadsSE> RLa: I see it at runtime, node: undefined symbol: _ZN2v86Object25SetPointerInInternalFieldEiPv
05:29 < OTBS4Life> The company I work for leases space in another data center owned by the same company.  They say it takes about 2 hours to go through all the security checks just to get to our own cage.
05:29 < RLa> i had to set up moded wifi router as a receiver in the middle of field to get signal and then had to use 100m ethernet cable to connect it to house
05:29 < RLa> i even had to hack some sort of poe for it
05:30 < WarheadsSE> RLa: aside some some "warning: value computed is not used" at compilation, nothing wrong
05:30 < OTBS4Life> RLa, Just use a directional antenna.  I used to install these setups to provide coverage to rural areas...  We would put up a bit omni antenna on a water tower, and then gave out high gain directional antennas at each customer site.
05:30 < RLa> WarheadsSE, but the code actually runs?
05:31 < WarheadsSE> Nope, halts @ opening the DB, @ process.dlopen() call
05:31 < RLa> OTBS4Life, the connection was bit overloaded anyway, it was about 12mbit/s for the whole village
05:31 < RLa> and everyone was leeching
05:32 < RLa> some guys did other things too, like sending spam, which caused the ip to enter into spamhaus lists
05:33 < OTBS4Life> Nice
05:33 < RLa> freenode, while nothing to do with email, blocks ips in some spamhaus lists
05:34 < RLa> ssh -D into a cheap vps provided workaround :)
05:35 < RLa> WarheadsSE, what if you remove the installed module and reinstall/recompile again
05:38 < WarheadsSE> I'll bash it again
05:39 < WarheadsSE> same fail, it looks like
05:40 < WarheadsSE> heh
05:40 < WarheadsSE> deep in V8, that comes from...
05:41 < RLa> you run and compile with the same node?
05:41 < WarheadsSE> yup
05:41 < WarheadsSE> gentoo box ..
05:42 < RLa> found similar issue: https://github.com/brianmcd/contextify/issues/57
05:43 < RLa> contextify is also native module
05:45 < RLa> WarheadsSE, check out issues on github for the sqlite module you use
05:45 < WarheadsSE> EXACT match too
05:45 < RLa> if it's not mentioned then file a bug report, detailing your node version
05:46 < RLa> seems like a function got removed
05:46 < RLa> not sure why compiler does not catch it tho
05:46 < WarheadsSE> Agreed
05:47 < WarheadsSE> hmm, still on 0.8.18 on this guy
05:55 < WarheadsSE> issue dropped https://github.com/developmentseed/node-sqlite3/issues/115
05:57 < RLa> nice
06:01 < WarheadsSE> hmm, odd that i am having trouble finding the source of it in their codebase though.
06:02 < RLa> it could be in the glue code
06:02 < WarheadsSE> im looking for it
06:03 < RLa> something between node and sqlite3 itself
06:03 < WarheadsSE> did `find . -type f | xargs grep -i SetPointerInInternalField` in the sqlite3 dir
06:03 < Slade-> hmm.. https://github.com/havard/node-openid     this doesnt work out of the box eh? do i need to sign up for something or other
06:04 < Slade-> ah. likes stackoverflow.com by default, but not gmail
06:07 < RLa> WarheadsSE, could the error come from some other module?
06:08 < WarheadsSE> I'm digging.
06:09 < WarheadsSE> since it is in the .node I'd be a bit surprised
06:10 < RLa> it could be included through some macro or template too
06:10 < RLa> damn c++
06:10 < RLa> so grepping does not help much
06:11 < WarheadsSE> yeah, I cheated and jumped for grep -i v8
06:15 < WarheadsSE> of course, since v8/node is catching it, gdb is useless.
06:15 < WarheadsSE> k, strace shows death right @ load of .node
06:31 < WarheadsSE> hmm
06:31 < WarheadsSE> looks deep related to SetInternalFieldCount() call.
06:48 -!- mode/#Node.js [+o TooTallNate] by ChanServ
06:49 < WarheadsSE> bingo.
06:50 < WarheadsSE> https://github.com/joyent/node/blob/v0.8.18/src/node_object_wrap.h
06:50 < WarheadsSE> There are a ton of calls to ObjectWrap functions :)
06:56 < WarheadsSE> hah. real problem located, I think. bad version match.
06:56 < WarheadsSE> arg.. whee
07:02 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
07:21 < owen1> how to make ajax request to a node api? i never get a response back and i think it's because node uses chunked response.
07:22 < owen1> http://hastebin.com/meduhecoka.vbs
07:27 < Orbitrix> LAWL .VBS
07:28 < Orbitrix> thats rich :)
07:28 < Orbitrix> how's err'bawdy dewin 2nite?
07:31 < WarheadsSE> RLa: just to confirm you read this eventually, gentoo ebuild = bad behavior.
07:31 < WarheadsSE> problem fixed, and works. Closed my issue, looking like fool :P
07:32 < RLa> hm, what did ebuild do wrong?
07:36 < AAA_awright> owen1: Nothing special, it's standard HTTP
07:36 < WarheadsSE> --shared-v8 , >=dev-libs/v8 , pulls in the latest v8, wich is 3.15
07:37 < WarheadsSE> removed the dep, removed shared v8, added --without-snapshot
07:37 < WarheadsSE> wham
07:37 < wsieroci> what is good alternative to socket.io for node.js?
07:37 < WarheadsSE> hate the license?
07:38 < AAA_awright> wsieroci: No clue, but let me know :3
07:41 < wsieroci> AAA_awright: socket.io is not working good enough for me - sometimes clients are experiencing loosing connections, reconnecting
07:42 < AAA_awright> wsieroci: That's going to happen anyways and you should handle those situations
07:42 < AAA_awright> You can't stop people from losing network connectivity
07:43 < wsieroci> AAA_awright: no, i dont mean that they losing network connectivity, just losing connection to socket.io
07:43 < wsieroci> server
07:43 < AAA_awright> That's effectively the same thing?
07:44 < AAA_awright> wsieroci: What's the error
07:44 < wsieroci> AAA_awright: clients send message but message are not received by recipient
07:45 < wsieroci> AAA_awright: it is 1. case
07:45 < zeromodulus> hey, what's a slick and functional editor for OSX that's free?
07:46 < zeromodulus> one with all of those fancy desaturated color schemes.
07:46 < wsieroci> AAA_awright: 2. case is that sometimes there is chain of reconnection, connection for many clients without any good reason
07:47 < wsieroci> AAA_awright: strange is that this is happening more often when client is IE9 and it is using XHR-Polling
07:50 < zeromodulus> nevermind actually, found some for my current editor.
07:50 < zeromodulus> some color schemes.
07:53 < wsieroci> btw. is there any known application out there which is using socket.io?
07:53 < wsieroci> i mean with lots of client
07:57 < zeromodulus> so, how are most people developing node.js webapps these days?
08:01 < gkatsev> with a computer
08:01 < gkatsev> :P
08:01 < wsieroci> lol
08:02 < zeromodulus> I mean, raw vs. framework?
08:02 < zeromodulus> is writing a webapp with no framework simply a recipe for disaster?
08:02 < gkatsev> my framework is called node :P
08:03 < gkatsev> nah, it isn't bad. But frameworks do provide some nice features for you out of the box
08:03 < zeromodulus> yeah, I'm writing this function to read an html page, and that just spells trouble to me.
08:03 < zeromodulus> hahaha.
08:03 < wsieroci> zeromodulus: i am using socket.io, but i dont know if this is good choice
08:03 < zeromodulus> I don't know how I would cleanse the path and whatnot.
08:04 < gkatsev> also, you could roll-your-own-framework by just grabbing various modules
08:04 < gkatsev> wsieroci: why wouldn't it be a good choice?
08:04 < gkatsev> though, I guess it depends on what you are doing.
08:04 < gkatsev> it's probably a fine choice.
08:04 < wsieroci> gkatsev: because it seems that for me socket.io is not stable
08:05 < gkatsev> try shoe instead?
08:05 < wsieroci> shoe?
08:05 < gkatsev> shoejs
08:05 < wsieroci> no
08:05 < wsieroci> do you recommend?
08:05 < gkatsev> also, could it be it's just the transport that socket is using is unstable?
08:06 < wsieroci> gkatsev: maybe, i dont know for now
08:06 < wsieroci> gkatsev: i see that when i have many clients then application is behaving wird
08:06 < wsieroci> weird
08:07 < wsieroci> clients are reconnecting, loosing connections
08:07 < iksik> wsieroci: learnboost is using socket.io ;-D
08:07 < zeromodulus> I think I'll try to just like, pick out code, like gkatsev suggested.
08:08 < zeromodulus> Because I'm really just using node.js as a webserver that can handle many concurrent connections.
08:08 < zeromodulus> Nothing heavy on data usage, so, there won't be a DB… although I can foresee that being possible.
08:08 < zeromodulus> Or like, if people want it, then, hopefully I could add it later.
08:09 < gluxon> zeromodulus: If you're using Node.js *just* as a static web server, nginx would serve you better.
08:09 < zeromodulus> uhh, well, the thing is, this is going on heroku.
08:10 < zeromodulus> It would be nice if features like database are available at a later stage.
08:11 < zeromodulus> I'm thinking I'd like to take a minimal approach, and go along in stages.
08:11 < gluxon> Well, you didn't say that :)
08:11 < zeromodulus> yeah, well, it's kind of a work in progress. :p
08:11 < zeromodulus> it's pretty much just a simple poker game.
08:12 < zeromodulus> it's not like I won't want the coolness of node.js later on.
08:13 < zeromodulus> I just want to kind of get to know it on a fundamental level.
08:19 < iksik> heh, sockjs-erlang server -_-
08:39 < asdf12> is it weird to see doc comments on the unit tests and not the code ?
08:44 < finishingmove> no because the tests are the de-facto documentation
08:48 < iksik> even better ;-D
08:49 < iksik> btw. is there any way to test frontend d&d behaviour of app?
08:49 < AAA_awright> Since... when?
08:49 < AAA_awright> The library is the ultimate documentation, the tests are... not
08:50 < iksik> AAA_awright: since when? library without docs is just a code which tells nothing to developer which uses it until he reads all the code and understand what is it going on there
08:50 < iksik> tests are real examples of its usage
08:57 < finishingmove> iksik, my IDE just got integration with Chrome in the latest version (something like LiveReload, out of the box) :D
09:00 < iksik> ou
09:00 < iksik> webstorm?
09:01 < SomeoneWeird> finishingmove, which ide would that be?
09:03 < finishingmove> NetBeans 7.3
09:04 < finishingmove> I do mostly PHP and I'm on Windows, so NetBeans was a life saver for me
09:05 < finishingmove> and now they added really good javascript support as well
09:06 < finishingmove> well it had javascript support for a long time, but now they added better SPA stuff
09:06 < NuZZ> cool
09:06 < NuZZ> wish sublime text had better ide features. st3.0 seems to have an improvement there...
09:07 < NuZZ> any of you gals used komodo ide? pretty sexy
09:08 < NuZZ> but I lol at plugins for sublime like this:  Convert selected text to Morse code in sublime text editor. 
09:14 < iksik> ehh, people waste their time with useless plugins
09:15 < NuZZ> not really. people make shit they need, then they publish it to the public because they think others may
09:15 < iksik> hmm
09:15 < iksik> i can't find usecase for morse code in any editor ;-p
09:16 < Dededede4> Why my script uses 100% of the first processor core without using the second?
09:17 < NuZZ> niether, on the morse code
09:17 < NuZZ> um
09:17 < NuZZ> are you using the cluster module Dededede4 
09:17 < NuZZ> you need to do that.
09:19 < Dededede4> It does not spread the processor load automatically, right ?
09:20 < NuZZ> no
09:20 < NuZZ> require('cluster')
09:21 < NuZZ> then for each cpu core
09:21 < NuZZ> cluster.fork()
09:22 < NuZZ> it should run the same original file under another process
09:22 < NuZZ> go look at the api docs for the cluster module
09:23 < Dededede4> ok.
09:37 < mscdex> anyone know how to just download the tarball from npm and not install?
09:39 < Guest15533> a
09:40 < eighty4> mscdex: could always go to npmjs.org and find the github repo?
09:41 < mscdex> there is none defined in the package.json
09:41 < eighty4> isn't the repo always defined at npmjs.org?
09:42 < eighty4> but it it's just the files you want just doing install would givey you the module in node_modules so...
09:43 < mscdex> the repo is an optional field
09:43 < mscdex> doing install could do a bunch of other stuff too
09:44 < eighty4> the repo can't be an optional field on npmjs.org can it? Where would it pull the files from if that was omitted?
09:47 < substack> eighty4: npm has a gigantic couchdb where it stores all the packages
09:48 < zeromodulus> any recommendations for templating engines?
09:49 < eighty4> substack: I.e. you can add a package with no source at all? Only maintained on the site?
09:50 < substack> eighty4: with no repo?
09:50 < mscdex> zeromodulus: ejs?
09:50 < substack> you can do that
09:50 < substack> but it's more useful if the code is posted somewhere nice like github
09:52 < eighty4> substack: right. 
09:52 < eighty4> zeromodulus: I'm playing around with dust atm. It's mustache inspired
09:53 < SomeoneWeird> ejs > *
09:55 < eighty4> SolidResolve: erb inspired?
09:55 < eighty4> the name kind of suggests it :)
09:56 < zeromodulus> ejs huh
09:57 < zeromodulus> ejs it is.
09:57 < zeromodulus> is there a better way to manage a package.json file rather than manually updating all of the dependencies and their versions?
09:58 < zeromodulus> like a npm --dump command or something.
09:58 < eighty4> https://github.com/joyent/node/wiki/modules#wiki-templating list
10:00 < zeromodulus> seems like something npm could do.
10:00 < zeromodulus> if it was cool enough.
10:01 < mscdex> zeromodulus: what do you mean? bumping your dependencies in package.json to the latest version?
10:02 < kelonye> curious, if pass in a client option to connect-redis store, do i have to also provide the other options?
10:02 < zeromodulus> yeah, or just sifting through all of the packages in node_modules and building a package.json from the package.json files in there.
10:02 < zeromodulus> something like that.
10:03 < iksik> zeromodulus: perhaps You just could use 'npm install --save FOO' while installing some package?
10:03 < zeromodulus> oh, sweet, that will update the root package.json file?
10:04 < iksik> yup
10:04 < mscdex> zeromodulus: automatically updating your dependencies to the latest versions could cause breakage
10:04 < zeromodulus> ah, k
10:09 < Qalqi> nodejs+angularjs = web developer heaven
10:09 < iksik> Qalqi: +1 ;-)
10:09 < iksik> yeoman works really nice with angular ;P
10:13 < zeromodulus> sweet, express seems like a pretty cool framework, checking it out.
10:13 < wao> what's the difference between yeoman and meteor?
10:14 < kelonye> oh https://github.com/visionmedia/connect-redis/blob/master/lib/connect-redis.js#L53
10:14 < wao> iksik: ^
10:14 < Qalqi> difference between dog and fork
10:14 < wao> o_O
10:14 < mscdex> silverware or project fork?
10:15 < iksik> wao: yeoman is just a toolset it's not a framework
10:15 < Qalqi> both of them would fit the explanation
10:16 < iksik> and it's not for server-side development
10:16 < wao> hmm, thanks :)
10:34 < yani> hi everyone, I have a string that looks like "[ 'val1', 'val2']" - how to convert it to an array or object - JSON.parse doesn't work on it ?
10:39 < AAA_awright> yani: How to convert it?
10:39 < AAA_awright> What do you mean?
10:40 < AAA_awright> How do you convert...?
10:40 < yani> AAA_awright: a string value "[ 'val1', 'val2' ]" to object or array
10:40 < AAA_awright> >> "[ 'val1', 'val2']"
10:40 < purr> AAA_awright: (string) "[ 'val1', 'val2']"
10:41 < AAA_awright> yani: JSON.parse, but usage of single-quotes won't work
10:42 < yani> AAA_awright: yes, it worked that way, for single-quotes, I have to write something on my own, right? using split() :)
10:42 < yani> thanks
10:42 < AAA_awright> Eh?
10:43 < SomeoneWeird> single quotes will work
10:43 < SomeoneWeird> oh, maybe not
10:43 < SomeoneWeird> i thought they did
10:44 < SomeoneWeird> .replace(/'/g,'"')
10:46 < AAA_awright> >> JSON.parse( "['SomeoneWeird']".replace(/'/g,'"') );
10:46 < purr> AAA_awright: (object) ['SomeoneWeird']
10:46 < AAA_awright> Eh?
10:46 < AAA_awright> Oh
10:46 < SomeoneWeird> lol
10:46 < SomeoneWeird> IT WORKS!
10:47 < AAA_awright> >> JSON.parse( '["SomeoneWeird\'s car"]'.replace(/'/g,'"') );
10:47 < purr> AAA_awright: SyntaxError: Unexpected token s
10:47 < SomeoneWeird> ssshhh
10:47 < SomeoneWeird> :P
10:47 < AAA_awright> >> JSON.parse( '["SomeoneWeird\'s car"]' );
10:47 < purr> AAA_awright: (object) ["SomeoneWeird's car"]
10:47 < AAA_awright> Yeahhhhhh
10:47 < finishingmove> eureka!
10:48 < SomeoneWeird> need to switch " to ' too
10:48 < SomeoneWeird> >> JSON.parse( '["SomeoneWeird\'s car"]'.replace(/[^\]'/g,'"') );
10:48 < purr> SomeoneWeird: SyntaxError: Invalid regular expression: missing /
10:48 < SomeoneWeird> lmao
10:49 < SomeoneWeird> lol
10:57 < mscdex> SomeoneWeird: no need to remove backslashes there
10:58 < SomeoneWeird> wasn't
11:06 < yani> >> JSON.parse( "[ 'car\'s name is \"Volga\"' ]" );
11:06 < purr> yani: SyntaxError: Unexpected token '
11:08 < asdf12> console.log(global)
11:08 < asdf12> >> console.log(global)
11:08 < purr> asdf12: ReferenceError: global is not defined
11:08 < asdf12> >> console.log(this)
11:08 < purr> asdf12: undefined; Console: {}
11:09 < asdf12> >> +Date.now()
11:09 < purr> asdf12: (number) 1361617548513
11:10 < asdf12> >>>>>>>>>>>>>>>>>>>>>>>>>>>
11:10 < asdf12> >> hi>>>>>>>>>>>>>>>>>>>>>>>>>
11:10 < purr> asdf12: SyntaxError: Unexpected token >>>
11:12 < Sven_vB> does purr support async callbacks?
11:17 < jxnuzhangwen> are anybody chinese people in here?
11:23 < Sven_vB> >> require("child_process").exec("which rm | sendmail nodejs-purr@spambog.com");
11:23 < purr> Sven_vB: ReferenceError: require is not defined
11:23 < Sven_vB> :-/
11:24 < Sven_vB> what a pity, no require on a node.js channel!
11:27 < pats_Toms> purr is bot?
11:27 < Sven_vB> yes
11:27 < Sven_vB> or a very fast-typing human ;)
11:27 < Sven_vB> and probably kinda bored
11:28 < pats_Toms> haha
11:28 < jxnuzhangwen> hello
11:28 < jxnuzhangwen> I am new guy
11:28 < Sven_vB> hello there
11:29 < jxnuzhangwen> I am interesting at nodejs, but I don't know how to start it
11:29 < Sven_vB> jxnuzhangwen, build a game
11:29 < jxnuzhangwen> I've already finish installation, and know a little about express and jade
11:29 < Sven_vB> or if you find stuff that you'd like your computer do and then make it do that
11:30 < iksik> random number generator + multiplayer support + statistics table in FILE and DATABASE
11:30 < iksik> ;-)
11:30 < SomeoneWeird> <Sven_vB> what a pity, no require on a node.js channel!< it's not a node bot
11:30 < jxnuzhangwen> how can I use this new technoloy to build enterprise application?
11:30 < iksik> i'm learning every single language using this kind of game
11:31 < pats_Toms> if you know js well then start building something
11:32 < Sven_vB> iksik, do you happen to have an instance running where i can see the game?
11:32 < jxnuzhangwen> I knew js, I have implement some chart using js once.
11:33 < iksik> Sven_vB: nope, but it's very simple thing... computer generates a random number (ie. from 1 to 100), and player is trying to guess that number... computer responde with "to low" or "to high"
11:33 < Sven_vB> jxnuzhangwen, you could start by building tests and then use nodejs to fix the first failure that pops up (like cannot connect to webserver)
11:33 < Sven_vB> iksik, oh i see, that kind of game
11:33 < iksik> this kind of game is very nice i think for learning purpose, couse it uses almost all kind of basic stuff: loops, if statements, arrays, file and database integration... and it's simple as hell
11:33 < jxnuzhangwen> can anyone give me some guide about modules for building enterprise application?
11:34 < Sven_vB> !modules
11:34 < Sven_vB> -> https://github.com/joyent/node/wiki/modules
11:35 < jxnuzhangwen> it's too many, I even didn't knew should select which one
11:35 < SomeoneWeird> huh
11:35 < jxnuzhangwen> which one is the best?
11:36 < Sven_vB> what kind of application do you wish to build?
11:36 < SomeoneWeird> that's a very bad question
11:36 < Sven_vB> i think util is the best node module ;D
11:36 < jxnuzhangwen> LOL! I want to build some application like ERP 
11:36 < SomeoneWeird> erp
11:36 < jxnuzhangwen> online ERP
11:36 < SomeoneWeird> ?
11:37 < Sven_vB> you'll have to explain a bit about ERP. you know, we're more specialized in cat herding
11:37 < SomeoneWeird> lol
11:37 < finishingmove> hERP-a-dERP
11:38 < SomeoneWeird> :o
11:38 < Sven_vB> oh i think he might mean enterprise resource planning
11:39 < jxnuzhangwen> yes
11:39 < finishingmove> i think he could be trolling u guys
11:39 < finishingmove> but do carry on
11:39 < jxnuzhangwen> sorry, I am chinese, english language is not good
11:40 < jxnuzhangwen> :-D
11:40 < Sven_vB> nah, i heard people managed to build ERP systems in C, so it's possible with NodeJS as well
11:40 < Sven_vB> jxnuzhangwen, it seems ERP is a very broad requirement for a system. divide it up into smaller services first.
11:41 < jxnuzhangwen> ok, suppose I want to implement a online invoice tracking system
11:42 < jxnuzhangwen> in company, some users want to check the invoice status
11:44 < pats_Toms> ok, I am asking again
11:44 < pats_Toms> http://sprunge.us/hMSb?js
11:44 < pats_Toms> cd command is not working, any ideas?
11:45 < Sven_vB> jxnuzhangwen, how would you like them to access your service?
11:47 < jxnuzhangwen> I want them to access my service using web browser, they can see the invoice information, and update the invoice status, and upload invoice file to system
11:48 < jxnuzhangwen> and system will run some job to analysis the data
11:48 < Sven_vB> pats_Toms, with what message does it fail? but probably, you wouldn't want to start a new process that just chdir()s and lets the parent start am independent new process, again from the parent's cwd. instead, you might want to read the child_process docs about how to set the cwd of your child.
11:48 < serdem> is there any app to caputer the link of form(post) link as cURL?
11:49 < serdem> with headers of course
11:49 < Sven_vB> jxnuzhangwen, start with express or locomotive. build some frontend with the frontend kit of your choice. (if you're unsure, check TodoMVC.)
11:50 < pats_Toms> omg, I so missed something, thanks Sven_vB 
11:50 < Sven_vB> pats_Toms, nvm
11:51 < Sven_vB> pats_Toms, be sure to also know about the path module, like for os-independent path concatenation
11:51 < jxnuzhangwen> ok, I will start with express and jade, but which module for accessing database I should choose? and how to run batch job?
11:51 < Sven_vB> jxnuzhangwen, if unsure about the DB, try MongoDB.
11:52 < Sven_vB> what is a batch job? just some operation that takes a long time?
11:53 < jxnuzhangwen> yes, some batch job will run at the certain time as schedule.
11:56 < Sven_vB> "schedule" sounds like cron would be appropriate
11:59 < jxnuzhangwen> many thanks
12:00 < jxnuzhangwen> Sven_vB, are you a robot?
12:01 < Sven_vB> jxnuzhangwen, depends on whether you want me to solve captchas
12:04 < jxnuzhangwen> lol
12:05 < Sven_vB> however i have 5 visitors online, potentially willing to solve them ;)
12:06 < Sven_vB> and then there's always that pretend_afk timeout handler
12:08 < jxnuzhangwen> Sven_vB, I am a robot also, do you believe?
12:10 < Sven_vB> nope, believing stuff is not implemented
12:10 < Sven_vB> (at least i think so)
12:11 < jxnuzhangwen> haha....it's fun, I must leave now, goodbye
12:21 < [Fudge]> having an issue with fs.readFile
12:21 < [Fudge]> I keep getting the following:
12:21 < [Fudge]> fs.js:365
12:21 < [Fudge]>   binding.read(fd, buffer, offset, length, position, wrapper);
12:21 < [Fudge]>           ^
12:21 < [Fudge]> Error: Offset is out of bounds
12:21 < pol06> hi
12:22 < pol06> i need help with notifications to individual user
12:22 < pol06> with socket.emit
12:22 < [Fudge]> pol06: #socket.io
12:22 < pol06> yes
12:22 < pol06> i reach comunication and notification
12:22 < [Fudge]> pol06: join #socket.io 
12:22 < [Fudge]> they'd be better able to help you
12:23 < pol06> but i dont understand if the final user disconnect, socket.io emit when user connected
12:23 < [Fudge]> pol06: /join #socket.io 
12:23 < thealphanerd> wahoo
12:23 < pol06> function join?
12:23 < [Fudge]> …
12:24 < pol06> i use io.sockets.socket(x).emit
12:24 < [Fudge]> pol06: type /join #socket.io into your client
12:24 < [Fudge]> and ask there
12:25 < pol06> but, join use to differents rooms,no?
12:25 < [Fudge]> yes
12:25 < [Fudge]> join #socket.io 
12:26 < [Fudge]> and ask your question there
12:26 < pol06> ok, sorry
12:26 < pol06> i dont understand
12:26 < pol06> but now yes
12:27 < pol06> join #socket.io
12:31 < thealphanerd> hey [Fudge] … aww I'm not going to do it… I've been drinking scotch all night and was going to ask a mundane socket.io question to be a jerk… but I just couldn't do it
12:32 < [Fudge]> thealphanerd heh
12:33  * thealphanerd has been abusing free macallan all night on the casino floor
13:50 <@Nexxy> \o/
13:51 < pats_Toms> is there someone who is using forever?
13:52 < mpfundstein> pats_Toms: yes
13:52 < pats_Toms> I mean https://github.com/nodejitsu/forever
13:52 < cloudbender> coffee, blueberry fritter, and node
13:52 < pats_Toms> do whatch directory works for you mpfundstein?
13:52 < mpfundstein> pats_Toms: dont use that feature. i only use forever to keep my daemons running
13:52 < pats_Toms> *watch
13:53 < pats_Toms> oh
14:14 < pats_Toms> is there any way to make some global vars or something like that?
14:14 < pats_Toms> I want to use them at code which I embed with require
14:15 < pol06> msg pats_toms http://stackoverflow.com/questions/3922994/share-variables-between-files-in-node-js/14990974#14990974
14:17 < pats_Toms> I want to do vice... for example - var random at main and use it at required code
14:19 < pats_Toms> for example I am using passport at main.js and require('randomcode.js')
14:20 < pats_Toms> at main.js I can use req.isAuthenticated(), but at randomcode.js isAuthenticated is undefined
14:20 < cloudbender> pats_Toms ... you know how when you require('fs'), from then on you can reference using fs.whatever ?
14:21 < cloudbender> write your external library the same way
14:22 < cloudbender> that's not a clear answer, sorry
14:23 <@konobi> req is an instance of an object, if you want it available on every req instance, you need to change the prototype
14:25 < fsfsfs> Hi! I'd like to print a deprecation warning when someone installs my NPM module, pointing users to a new module which should be preferred over mine. How to do this?
14:26 < fsfsfs> (upstream has released an 'official' NPM module of their own)
14:27 <@Nexxy> fsfsfs, console.log
14:28 < fsfsfs> like, where? via an 'npm install' hook?
14:28 < pats_Toms> seems like I write wrong example. I am using mongoose, how can I get mongoose var working on that required file
14:28 <@Nexxy> yeah that would work
14:28 < fsfsfs> k thx
14:28 < SomeoneWeird> just push a new npm update with "throw new Error('update')"
14:28 < SomeoneWeird> or something in it
14:29 <@Nexxy> that's kind of harsh
14:29 < fsfsfs> well I don't want to break my module
14:29 < fsfsfs> for nothing
14:29 < SomeoneWeird> lol
14:29 < fsfsfs> just dispay something like the warnings NPM displays when installing stuff
14:29 < SomeoneWeird> add console.error("please update") or something at the top then
14:30 < fsfsfs> to package.json? But that's not javascript, but json, right? data, not code.
14:30 < fsfsfs> and console.log'ing something everytime s.o. calls my module seems
14:30 < fsfsfs> well 
14:30 < fsfsfs> lame
14:31 < SomeoneWeird> no in the main file of your code
14:31 < SomeoneWeird> so when it gets require()'d it runs
14:31 <@Nexxy> lol
14:31 < SomeoneWeird> Nexxy, ur lol
14:31 <@Nexxy> fsfsfs, you could use the npm preinstall or install hooks
14:32 < OliverJAsh> If an NPM module has a pull request pending on GitHub, is it possible to download that through NPM?
14:32 <@Nexxy> OliverJAsh, no
14:32 < OliverJAsh> damnnnn
14:32 <@Nexxy> that would be pretty magical
14:33 <@konobi> well, assuming there's a full github path
14:33 <@konobi> since the pull request is based off of a github checkin
14:38 < pats_Toms> is it ok, to require mongoose in multiple files? I have 3 files which I require into main file and all of them is using it. 
14:38 < [Fudge]> yes
14:38 <@Nexxy> yes and no
14:38 <@Nexxy> acceptable: yes; optimal: no
14:38 <@Nexxy> ideally you should be making all calls to your database from one module
14:39 < [Fudge]> you could pass the mongoose object to a method one of the other scripts
14:39 < [Fudge]> in one*
14:39 < pats_Toms> how to pass that object?
14:41 < [Fudge]> pats_Toms: for example, in your main file include mongoose and establish a connection. require your other modules and have a variable defined that you can assign the mongoose object to in the other modules
14:41 < [Fudge]> if that makes sense
14:42 < pats_Toms> in my situation I have var mongoose = ...., but at required file mongoose is not defined
14:43 < pats_Toms> ouh, without var it makes global?
14:43 < [Fudge]> you can have global variables available to all modules included in your main script by using the global object
14:43 <@Nexxy> that's a bad idea
14:43 < [Fudge]> ^
14:43 <@Nexxy> don't use globals
14:43 < [Fudge]> yes, it is a bad idea
14:43 < [Fudge]> you should use something similar to what I was outlining earlier
14:43 < pats_Toms> yeah, I know it
14:43 <@Nexxy> global variables are responsible for 90% of all boating accidents in the US
14:44 < [Fudge]> that's going in my IRC quote file
14:44 <@Nexxy> you wouldn't want to hurt an innocent mariner, would you?
14:44 < [Fudge]> :p
14:44 <@Nexxy> hah
14:44 < aandy> Nexxy: i agree with the sentiment of "making all calls to your database from one module", but would you also do that if you have two distinct parts in the same db? e.g. blog articles and sessions. or rephrased: would you just use a "main" db module?
14:45 <@Nexxy> aandy, definitely. you can still abstract things from within your db module
14:45 <@Nexxy> the rest of your code shouldn't care about where the data came from
14:47 < aandy> okay, thanks
14:47 < cloudbender> lol boating accidents Nexxy that's priceless
14:48 < pats_Toms> About that first Fudge comment... That means I use var mongoose = require('mongoose'); and mongoose.connect() in my main code... but in required file I use only that which includes mongoose?
14:49 <@Nexxy> so now is a bad time to be at MIT apparently
14:49 <@Nexxy> http://emergency.mit.net/emergency/
14:49 < cloudbender> sup with MIT ?
14:50 < cloudbender> oh
14:50 <@Nexxy> another shooter
14:50 < cloudbender> geez
14:50 < cloudbender> there is something going on.
14:50 <@Nexxy> yes, it's called media frenzy
14:50 < cloudbender> This can't be just 'happening'
14:51 <@Nexxy> cloudbender, it's the fact that MSM is now choosing to start covering it more often
14:51 < cloudbender> yes I agree.
14:51 <@Nexxy> but the amount of gun violence isn't just suddenly increasing
14:51 <@Nexxy> it's just a "flaming ant epidemic"
14:51 < cloudbender> CNN, MSN, they suck.  Fucking ambulance chasers.
14:51 < [Fudge]> pats_Toms: http://d.pr/n/Dkwe
14:51 < [Fudge]> that's the basic idea
14:51 < cloudbender> pardon the language
14:51 < [Fudge]> or at least my take on what I'd do
14:52 < [Fudge]> it can be improved though
14:57 < fsfsfs> Nexxy, thanks for your support
14:57 < fsfsfs> I've just stumbled over 'npm deprecate'
14:57 < fsfsfs> d'uh
14:57 < fsfsfs> does exactly what I wanted.
14:58 <@Nexxy> fsfsfs, oooh even better
14:58 <@Nexxy> I was not aware
14:59 < pats_Toms> Fudge, yeah, but seems like with that I will not get mongoose methods in that required code
15:00 < fsfsfs> nevermind, thank you anyway!
15:00 < fsfsfs> cu all!
15:06 < pats_Toms> check here - https://github.com/jamescarr/nodejs-mongodb-blog
15:06 < pats_Toms> for example if I will have more than one model
15:06 < pats_Toms> I will require mongoose for all of them?
15:06 < pats_Toms> *in all of them
15:24 < cloudbender> lol [object Object] should not be a file in the project directory.
15:25 < cloudbender> 10 minutes searching for the wrong file
15:26 < pats_Toms> hmm, I know nothing about coffee script but - https://github.com/jamescarr/nodejs-mongodb-blog/blob/master/models/Post.coffee
15:26 < pats_Toms> that mongoose = require 'mongoose' is not global?
15:35 < d4tech> I need some help
15:35 <@Nexxy> don't we all?
15:35 < d4tech> Im trying to create a prototype of a function
15:35 <@Nexxy> right
15:35 < d4tech> and its giving me this error when I try to run it
15:35 < d4tech> http://pastie.org/6322416
15:36 <@Nexxy> can you paste your code as well?
15:36 <@Nexxy> Mr. Joseph
15:36 < carpii_> you misspelt   protoype => prototype
15:36 <@Nexxy> o snap
15:37 < d4tech> the code is http://pastie.org/6322428
15:37 < carpii_> yep, you still misspelt it
15:38 < d4tech> the code is http://pastie.org/6322428 and the error is http://pastie.org/6322416
15:38 < carpii_> oh my word
15:39 < carpii_> D4TECH: read what im saying
15:39 < d4tech> @Nexxy I need to show this to lecturer on Monday
15:39 <@Nexxy> d4tech, I think carpii_ has you covered
15:39 < d4tech> WTF me..!!!!
15:40 <@Nexxy> ¯\(°_o)/¯
15:42 < d4tech> Im getting the output, but Im still getting this...http://pastie.org/6322451
15:42 < d4tech> whats the tail after "{ _id: 5124bcfa594d0ca322a3664e, pass: 'test' }"
15:43 < pats_Toms> uses your server var 
15:43 < pats_Toms> instead of db
15:43 < pats_Toms> *use
15:44 < pats_Toms> oh, sorry
15:44 < d4tech> @pats_Toms are u answering me..?
15:45 < pats_Toms> yes, I tread so :D
15:45 < d4tech> k, what were u saying ..:)
15:46 < pats_Toms> maybe db is not defined for db.close
15:47 < d4tech> And..
15:47 < pats_Toms> you need to close it in your function
15:47 < pats_Toms> where db is defined -_-
15:48 < d4tech> within the prototype
15:49 < d4tech> so where do i close it, after i've called the callback..?
15:49 < pats_Toms> after db open
15:49 < pats_Toms> where you close db open
15:49 < pats_Toms> *db.open()
15:49 < d4tech> Apologies if im askin stupid questions i am 00b
15:49 < d4tech> n00b
15:51 < pats_Toms> try to delete lines 54 and 49
15:52 <@Nexxy> d4tech, you should never apologize for learning
15:55 < d4tech> @Nexxy: Thnx..^_^
15:55 < cloudbender> is anyone using solid state drives these yet ?
15:56 < pats_Toms> seems like everyone with macbook have ssd
15:56 < cloudbender> please ignore cloudbender when he mumbles
15:56 < robdodson> is it possible for npm to install a repo from a specific commit? It seems to say so in the docs but this doesn't work: git://github.com/robdodson/grunt-bower-task.git#afdad43f68348157ada82377df603ceead8d8ef8
15:56 < cloudbender> I mean for production in server chassis.  Laptops don't count.
15:57 < pats_Toms> I have ssd on my digitalocean vps
15:57 < robdodson> but this git issue seems to assert it should work: https://github.com/isaacs/npm/issues/1225
15:57 < pats_Toms> I mean digitalocean.com
15:57 < cloudbender> Curious about the performance improvement versus 'spinners'
15:57 < cloudbender> or 'rpm based storage ?'
15:57 < d4tech> @Nexxy After making the code like this http://pastie.org/6322515 Im getting the output as http://pastie.org/6322520
15:57 < pats_Toms> It's epic good if u have many work with databae
15:58 < pats_Toms> *database
15:58 < mscdex> node.js rules!
15:58 < pats_Toms> we know that
15:58 < mscdex> just making sure!
15:58 < cloudbender> mscdex are you wearing a cheerleader outfit when you say that ?
15:59 < mscdex> no, but i've always wanted a node.js tshirt
15:59 < cloudbender> We need such a shirt.
16:00 < cloudbender> and mindcruzer invented another shirt slogan also ...
16:00 < robdodson> any thoughts on npm install git://path/to/repo.git#commit-ish ?
16:00 < cloudbender> 'Null: It's whatever you want it to be.'
16:00 <@Nexxy> d4tech, it looks like you need to move the db creation into the object's constructor function
16:01 <@Nexxy> d4tech, (the one that's empty)
16:01 <@Nexxy> d4tech, also it hsould probably be `this.db` :)
16:01 < d4tech> I hav no idea of wht u r saying..:(
16:02 < pats_Toms> robdodson, do you tread "git://<urltorepo> <commit>"
16:02 < robdodson> pats_Toms: what?
16:03 < robdodson> putting a space after the url and the commitish doesn't work
16:03 < cloudbender> 1016ms for my database load, 20 fields, 100,000 records, JSON storage.  I'm hoping SSD will improve that greatly.
16:03 <@Nexxy> d4tech, http://pastie.org/6322545
16:03 < robdodson> the docs say to use #
16:04 < d4tech> wait..
16:04 < pats_Toms> npm install git://github.com/robdodson/grunt-bower-task.git afdad43f68348157ada82377df603ceead8d8ef8
16:04 < pats_Toms> works well for me
16:04 <@Nexxy> d4tech, http://pastie.org/6322550 actually
16:05 < cloudbender> We also need A shirt that says ... 'GLOBAL VARIABLES cause 90% of all Maritime Disasters'
16:05 < pats_Toms> thats to robdodson 
16:05 <@Nexxy> hahaha
16:06 < robdodson> pats_Toms: ah yes! it is working if i do it inside package.json. for some reason it wasn't working when i tried to install from the command line. perhaps zsh diddn't like it
16:07 < pats_Toms> haha, my first helpfull comment @ #Node.js
16:07 <@Nexxy> \o/
16:07  * Nexxy pulls the confetti lever
16:07 < d4tech> @Nexxy, I'll try to get it running, seems like a light buble just went on,
16:08 <@Nexxy> d4tech, :)
16:08 <@Nexxy> pats_Toms, http://www.youtube.com/watch?v=4Ss96VZlIyU
16:08 < d4tech> thanks 4 the help ^_^
16:08 < pats_Toms> feels like "achievement unlocked - help someone @ #Node.js"
16:08 < d4tech> :)
16:09 <@Nexxy> pats_Toms, it totally is
16:11 < robdodson> hey follow up… can you specify which folder an npm module ends up in? I know that node_modules is the typical place but I'm just playing around with package managment for front end stuff. And yes i've seen bower and yeoman and volo and jam etc
16:11 < robdodson> i'm just curious if i can say a certain module should go to 'foo/'
16:12 < cloudbender> I have decided to accept code-folding as a productivity enhancer.  I'm stubborn that way.  SublimeText2 does it well.
16:13 < cloudbender> Folding keeps me from re-fixing what I thunk I fixed already before again.
16:17 < cloudbender> oh yeah that's awesome
16:19 < Havvy> So...you know what sucks?
16:19 <@Nexxy> vacuums
16:19 < Havvy> Crockford releases a video on monads the day my headphones break.
16:20 < sam___> hi
16:20 < Havvy> Hi sam___.
16:20 < Havvy> Also, the JS syntax sucks. [/but so does every other language]
16:22 < cloudbender> 938ms best time db load
16:24 < Sven_vB> Havvy, including D?
16:25 < Havvy> I've not used D, but probably.
16:27 < pats_Toms> first time I hear about D
16:38 < bradleymeck> sven_vB: generally in this room D refers to Dtrace's D if you were talking about digital mars' D prefix with digital mars (love delegate syntax in that thing)
16:42 < Kakera> what are the usecases for pure libuv?
16:42 < Kakera> when would you choose it over node.js?
16:42 < jesusabdullah> if you like writing servers in C
16:43 < jesusabdullah> then by all means
16:43 < jesusabdullah> that's really the use case right there, needing to be "closer to the metal" than v8 can really provide
16:43 < jesusabdullah> alternately, you can bind it to other languages, like luvit does with lua
16:44 < Havvy> And PyUV
16:44 < Havvy> libuv is perfect for people wanting async stuff in other languagse.
16:47 < bradleymeck> Kakera: memory constraints
16:48 < Kakera> bradleymeck, does v8 take up a lot of memory?
16:48 < Havvy> Kakera: Less then the JVM, but still non-zero.
16:48 < bradleymeck> Kakera: not terribly if you know what your doing, but on systems where 10mb is too much
16:48 < bradleymeck> ...
16:49 < bradleymeck> libuv weighs in at runtime at around 2mb
16:49 < Kakera> good point I guess
16:49 < Havvy> Imagine you wanted to use Node.js like patterns on a Rasberry PI with other things running.
16:50 < Kakera> I would like to use libuv for something but I couldn't come up with a good excuse
16:51 < bradleymeck> Kakera: do things for ideas not for tech is my opinion so I dont get lost in tech
16:51 < Kakera> but I like the tech
16:52 < Kakera> so I'm trying to come up with an idea
16:52 < bradleymeck> indeed but do you like it because it is or because of what it can do?
16:52 < bradleymeck> anyway bbiab
16:53 < Kakera> I like it because it looks interesting
16:53 < niggler> anyone have a mac?
16:54 < niggler> i tried running node within a windows VM and it slowed to a crawl :/
16:54 <@Nexxy> what is... mac?
16:55 < niggler> the result of many years of poor life decisions
16:56 < niggler> ooh "fuck[...] ... mac" -- nexxy
16:57 <@Nexxy> wat
16:58 < niggler> Nexxy: at one point you said 'fuck' and you just said 'mac' so by the rush limbaugh rules you have said 'fuck mac'
17:01 <@Nexxy> niggler, ohhh... yes
17:17 < cloudbender> I shall name my database object as  " v`ger "  , and design a massive construct which will be blindly dedicated to protecting it from any misfortune caused by carbon-based units.
17:18 < Sagitarius> hola
17:18 < Havvy> o/
17:19 < Sagitarius> i speak spanish
17:19 < niggler> anyone try windows azure?
17:20 < Sagitarius> hello
17:23 < niggler> lol silly azure demo
17:23 < niggler> http://www.windowsazure.com/en-us/develop/nodejs/tutorials/create-a-website-(mac)/
17:24 < niggler> they have a semicolon on every line but the first
17:25 < carpii> i like how the Windows Azure screenshots are using a mac
17:26 < jrajav> carpii: Windows Azure is a cloud platform, not a desktop product
17:27 < carpii> yeah i know, but its banded as part of the wider Windows family 
17:27 < carpii> all the same
17:27 < carpii> branded
17:27 < jrajav> Okay.. so Heroku is a part of the wider Linux family?
17:28 < Havvy> jrajav: No?
17:28 < carpii> nevermind, you dont understand what I mean
17:28 < jrajav> Havvy: It was rhetorical.
18:02 < fezziwig> Greetings from an absolute node.js noob!
18:03 < jrajav> fezziwig: Welcome
18:03 < fezziwig> Looking into node.js as a web developer - I have been writing ColdFusion for many, many years, trying to pick up some more relevant skills...
18:04 < tjfontaine> man I can't even troll you, as you already did it
18:05 < fezziwig> also looking into Symfony2, as folks seem to like that too
18:05 < fezziwig> and a friend of mine is telling me that Rails is a thing of the past now ;)
18:06 <@Nexxy> lol
18:06 <@Nexxy> fezziwig, welcome :)
18:13 < jrajav> Is there any JS parser that will signal where ASI would take place?
18:14 < owen1> i have a few small servers running on the same macine. how do u guys keep track of what server is running on what port?
18:18 <@Nexxy> owen1, have you seen seaport?
18:23 < owen1> Nexxy: looked at it a few months ago. never understood it even after reading the readme. maybe i am more experienced now to get it? let me see
18:24 < owen1> it got new picture
19:00 < andrepadez_> hi. can you please give me some feedback on my first NPM package to use with MongoDB and/or Mongoose? https://npmjs.org/package/normalizer . thanks
19:38 < _numbers> is anyone aware of a pure-js solution for background jobs? like delayed job, resque, or sidekiq
19:38 < Aria> process.exec ?
19:38 < Aria> mqtt?
19:38 < Aria> So many of 'em!
19:38 < Aria> And I'm || this close to writing a gearman server in node too
19:38 < DmitryBochkarev> https://github.com/LearnBoost/kue
19:39 < _numbers> ideally one that queues the process, passes some state information to a temporary database like redis or memcached specific to the job, monitors to ensure the job started and finished successfully, and possibly produces a log and comes with a web admin for seeing an overview of the jobs
19:40 < _numbers> i saw kue but i don't want to install ruby just to run the sidekiq process. isn't that what i'd have to do?
19:40 < DmitryBochkarev> https://github.com/LearnBoost/kue does this, have log, webui
19:40 < Aria> Sidekiq?
19:40 < DmitryBochkarev> kue don't require ruby just redis
19:41 < _numbers> DmitryBochkarev: ah ok in that case i will check it out. thx
19:41 < _numbers> oh of course who wrote it
19:47 < othiym23> _numbers: if you're fine with a toolkit instead of a turnkey solution, https://github.com/andyet/thoonk.js is pretty nice
19:48 < othiym23> and since it's built as a layer on top of Redis, it's interoperable with other languages (i.e. thoonk.py)
19:49 < _numbers> hm that's an interesting candidate as well
19:49 < _numbers> does it have a web ui
19:49 < othiym23> pretty sure it doesn't :/
20:04 < douglaslassance> is there a neat way to isolate url parameters for a http server in node other than doing string parsing?
20:05 < Andy80> hi, I've a simple question (I'm very newbie with Node.js), anyone of you knows anything about Twitter Bootstrap? How could be used with Node.js? I mean.... which component/role would play? It would be in place of Jade/EJS or at another different layer? Thanks
20:07 < DarkArgon> Andy80, bootstrap is just css&js u can use it everywhere. it won't replace anything
20:08 < douglaslassance> I suppose this is neat enough? request.url.split(0, request.url.indexOf('?'))
20:08 < DarkArgon> u could use express.js
20:10 < Andy80> DarkArgon, cool, so Bootstrap is just used for the UI part. Is it compatible with Jade templates?
20:10 < DarkArgon> sure
20:14 < Andy80> cool, thanks :)
20:16 < DarkArgon> did the chrome dev tools lost the icons on top?
20:28 < asdf12> i forget.. whats the key for repeating my last command in vim?
20:32 < jrajav> asdf12: .
20:39 < asdf12> that doesnt seem to work
20:39 < asdf12> i'd do `fe` for instance, it doesn't repeat it
20:53 < carpii> where can i learn how to write a module? 
20:53 < carpii> im a little confused on the scope of variables declared inside a file which has then been require() d
20:54 < jocafa> carpii: http://howtonode.org/how-to-module
20:54 <@Nexxy> carpii, they stay within the file unless they're being exported
20:54 < carpii> even if i havent wrapped them in a block/object or anything?
20:54 < carpii> thx joc
20:55 < carpii> im not sure this article goes into the level of detail i need. I understand npm package.json etc
20:56 < carpii> but i notice some modules just export one function as the constructor, other expose a function which creates a new object and returns that 
20:56 < jrajav> That's not actually exposing that function, assuming it's immediately invoked
20:56 < jrajav> Just the object being returned
20:57 < carpii> yeah its exposed as the constructor
20:57 < jrajav> This is *way* simpler than you think it is. Everything has the same kind of scope as if the entire file were wrapped in one big parameter-less function. The only thing visible to anything require()ing the module is what you export - the "return value"
20:57 < carpii> i assumed it was so the module can be used concurrently 
20:58 < carpii> ok
20:58 < jrajav> Aside from that, functions and objects that you export respect the same type of closure rules as normal
20:58 < jrajav> So you could "expose" variables, functions, object properties, etc. if you make them available on the exported object
20:59 < carpii> so if I want to create a module which has state built in, i would typically just require it, then call a method which returns an object ?
20:59 < carpii> rather than just stuffing my state variables inside the required file
20:59 < jrajav> You don't even need a method
20:59 < jrajav> Just return the object
20:59 < jrajav> Export it, rather
21:00 < LouisT> is there a way proper way to detect if a variable is a buffer?
21:00 < carpii> but to instantiate it, would i then need to require it several times?
21:00 < carpii> if iwanted two seperate objects 
21:00 < carpii> im not explaining this very well i know :/
21:01 < jrajav> Yeah I'm not really sure what you want
21:03 < LouisT> anyone at all?
21:04 < mfn> Hi, nodejs first-time user here. Running on Linux (debian squeeze), have installed it (/usr/bin/node, /usr/bin/npm). Installed e.g. 'consolepluslus' with 'sudo npm install -g' and it's in /usr/lib/node_modules/consoleplusplus/. when I run node and write 'require('consoleplusplus');' I get: Error: Cannot find module 'consoleplusplus' . Seems I can't figure how the load/module paths work. 
21:05 < LouisT> oh, duh.. Buffer.isBuffer() -.-
21:07 < jrajav> LouisT: We knew you could do it on your own
21:07 < toyaisle> mfn, try npm install -g consoleplusplus
21:07 < jrajav> LouisT: Now be free, youngling! 
21:08 < mfn> toyaisle: you mean without sudo?
21:08 < LouisT> jrajav: i missed it when i went over the docs the first time heh
21:09 < Aria> mfn: Don't do that
21:09 < Aria> mfn: "npm install consoleplus" within your app.
21:11 < digitalgravy> mfn: nope, just forgot to say sudo; so "sudo npm install -g consoleplusplus" should get you there; also Aria is right, -g just installs it globally so you can require it from whatever script you create
21:11 <@Nexxy> if you use sudo, npm will drop privileges!
21:12 < digitalgravy> mfn, so locally to the module you just mkdir "whatever" cd into it then install the module
21:12 < mfn> Aria, digitalgravy: thanks, works
21:13 <@Nexxy> there's a snake in my boot!
21:35 <@mbalho> someones poisoned the watering hole
21:43 <@Nexxy> mbalho, you're my favorite deputy
22:17 < ctorp> If I'd like to manage jobs initiated by a RoRails frontend with a node server, what is the best way to interface the two systems? I was thinking of sending the jobs to a postgres db and having node poll it every 'x' ms in addition to being tapped via a http request by the same process that passes the info to the db.
22:17 < ctorp> I'm not sure where to start googling if that's even a valid methodology, let alone a decent one.
22:19 < carpii> sounds a bit flaky imo :p
22:21 <@Nexxy> ctorp, domain socket?
22:22 < ctorp> Nexxy: nothing specified yet.
22:22 < ctorp> It's namely a learning exercise with a RoR dev friend. I write js all day, but haven't worked with node before.
22:23 < carpii> "in addition to being tapped via a http request by the same process that passes the info to the db"   why not run an httpd server on node, and have your caller tap node httpd, triggering an event
22:24 < carpii> ie, basically have your node server expose a REST API, which your rails backend interacts with
22:24 < ctorp> wouldn't that require running a node httpd server on the same port 80 as rails?
22:26 < carpii> doesnt have to be port 80
22:26 < s4muel> no
22:26 < carpii> http can run on any port, 80 is just what browsers expect
22:27 < ctorp> ah. And I could limit it to localhost requests only
22:27 < carpii> yes, and youd want to firewall the port anyway, so its internal only
22:28 < s4muel> not even necessarily true -- you can run the service only on 127.0.0.1 and it will not be accessible to anything but localhost.
22:28 < carpii> yeah true enough
22:28 < s4muel> contrast with specifying an IP, or specifying 0.0.0.0
22:29 < gluxon> Does anyone here have experience compiling Node.js for iOS?
22:29 < ctorp> this may be more unixy, but are local programs like vim and awk piped to through the same port type that web applications expose?
22:30 < ctorp> or do they have routes aside from network sockets?
22:31 < s4muel> Depends on what you mean by port type. pipes and such operate on file descriptors, specifically the three posix descriptors (stdin,stderr,stdout) -- but it is trivial to adapt that to a socket. Take a look at 'nc' for example.
22:32 < ctorp> nc? brings up north carolina :\
22:32 < s4muel> Heh. 'netcat'
22:32 < ctorp> ah
22:32 < ctorp> i should have used man instead of google :)
22:32 < s4muel> maybe i should have said 'man nc' :)
22:34 < s4muel> that's the gist of it though. the unix philosophy is generally based around loose coupling of text streams
22:35 < ctorp> I'm learning that slowly. It has been really useful for some data manipulations I've had to do. <3 the pipe
22:35 < s4muel> loose coupling in terms of interaction with its own various components, including pipes, files, FDs, ubiquities like sed/awk/ex, and network sockets too.
22:35 < s4muel> Heh. I love the pipe too. But I digress. Check out the bash manual and learn about shell redirection, that should give you an inkling of what's possible, bewildering really in some cases
22:36 < ctorp> so it's possible, for example to have stdin on a non-network domain socket and pass it to a network domain socket or other, and not extremely difficult?
22:36 < ctorp> with extremity being relative..
22:36 < s4muel> Sure.
22:37 < zenodub> any good payment gateway libs out there?
22:37 < s4muel> chicanery involved? maybe, depends what exactly your requirements are. impossible? hardly
22:37 < ctorp> Are there benefits and drawbacks to the different socket domains? Or is it one of those things that grew over time?
22:37 < ctorp> I'm adding the wiki to my reading list so no need to go into any more detail than you're cool with.
22:40 < s4muel> Ha, no worries. That, I couldn't really give you anything more than a history lesson on, and other people have done that better
22:41 < s4muel> A really solid book is The Linux Programming Interface
22:41 < ctorp> Have you heard of the Art of Unix Programming?
22:41 < ctorp> I'm about half way through it, but I'll have to reread it to give new context to some of the stuff I only *thought* I understood
22:42 < rodyhaddad> Hey guys, does anybody have any idea how in Zombie.js I can execute some javascript before the page's javascript get loaded?
22:42 < robinson_k> hey
22:42 < rodyhaddad> s/loaded/executed
22:43 < s4muel> ctorp: That's a decent book if a little distracting
22:55 < huib> Hi Guys
22:57 < huib> Today is the first day I am playing with Node (and Express, I admit), and so far I really love it. But, as always, there is one thing I am not sure how to do properly
22:58 < huib> I'm trying to plot large sets of data from mongoDB, and to make things manageable I am pre-calculating most of the stuff I want to plot
22:59 < huib> However, the plotting libs all require the data to be in a different format than what is returned by mongo. What's the best way to transform the data returned into the "correct" json?
22:59 < huib> Using a templating layer seems a bit odd: I will most definitely forget a bracket here or there and mess everything up
22:59 < huib> and using loops doesn't feel right either. So: how do you do it?
23:01 < huib> maybe good to add: I am coming from a java/php/xslt background so I might entirely looking in the wrong direction
23:02 < huib> Nobody?
23:10 < sw33tlull4by> hi there!I know this isn't exactly node related BUT, does anyone know wether or not- node.js-modules can be run under phantomjs?
23:14 < asdf12> huib the plotting libs take json?
23:14 < huib> sure
23:15 < huib> @asdf12, just structured different from what mongo returns by default
23:15 < asdf12> huib, well i would probably convert the mongo result to and object, transform it, and convert it back to json for the libs
23:16 < asdf12> because its easier than messing with json to me
23:17 < huib> Hmm, ok.
23:17 < huib> yeah, json is a bitch to handle directly
23:17 < huib> The reason to ask is because every lib wants the data to be in a different format
23:18 < huib> and it would be really nice if it was possible to just swap a template, rather than having to modify every function that transforms the json
23:19 < huib> but maybe that's a YAGNI feature, and I should stop whining:)
23:19 < asdf12> that just depends on how you already have things setup i guess? but generally how about just do this function Data(mongoJSON) { this.mongoJSON = mongoJSON } Data.prototype.toLib1 = function() {// transform}
23:19 < asdf12> and have toLib2, etc etc
23:19 < asdf12> so you can build 'templates' off one base 
23:19 < huib> Hmm, interesting
23:20 < asdf12> instead of transforming it from different conversions
23:20 < huib> yeah, i see
23:20 < huib> that would work
23:20 < huib> thanks!
23:20  * huib gets back to work :)
23:20 < huib> thanks for the help, really appreciated
23:24 < mfn> sw33tlull4by: I only have basic experience with PhantomJS, but so far it did.
23:25 < sw33tlull4by> mfn, thanks for the answer if that holds true for my project I can completly scrap node.js and utilize everything using phantomjs^^
23:41 < robinson_k> someone here who is familiar with npm-www
23:41 < robinson_k> did some work on it today and would need a review before sending the pull request
23:41 < robinson_k> it is: https://github.com/isaacs/npm-www/issues/254
23:43 < robinson_k> ?
23:43 < AAA_awright> robinson_k: Just send the pull request, you can add or replace commits as you like while it's still open
23:43 < someprimetime_> anyone using connect-flash with node?
23:43 < someprimetime_> s/node/express
23:44 < robinson_k> someprimetime: yeah me
23:44 < robinson_k> or wait...
23:44 < robinson_k> not sure id i use connect-flash or express-flash
23:45 < someprimetime_> robinson_k: connect-flash is the flash ported from express 2 to 3
23:45 < someprimetime_> but it's a pain in the dick
23:45 < someprimetime_> to get working properly
23:45 < someprimetime_> i'm trying to figure out how to namespace them to something other than 'info' but when I check for the existence of them in my middlware, any call to req.flash() clears it
23:46 < hallas> I'm using it quite succesfully
23:46 < robinson_k> someprimetime_: just jad a look, i am using "flashify" in my apps
23:46 < someprimetime_> so i can't go if (req.flash('error').length) { app.locals.flashError = req.flash('error') <-- that's cleared already
23:46 < hallas> save it then?
23:46 < someprimetime_> hallas: do you have some kind of middleware to set the app/res.locals.message for your views?
23:47 < someprimetime_> hallas: because i can't namespace it when i call req.flash('info') so how would I know? wait
23:47 < someprimetime_> i wonder if I save an array to it
23:47 < someprimetime_> no that's messy
23:47 < hallas> dont check for the lenth
23:47 < hallas> length
23:47 < hallas> just pass the flash message no matter what, let your view check if its null or not
23:48 < someprimetime_> oh let me check that
23:48 < someprimetime_> well what am i sending to my view?
23:48 < someprimetime_> i have to set it in my middleware, no?
23:48 < hallas> yes
23:48 < someprimetime_> so what am i sending to the view? app.locals.message and now message is in my view
23:48 < hallas> sometimes before you call res.render, it has to be in the locals
23:48 < someprimetime_> but I don't know what type it is
23:48 < someprimetime_> hallas: right, but i want to be able to pass info/error to my view
23:49 < someprimetime_> and not just message
23:49 < hallas> you should use res.locals btw, so its applied per request
23:49 < hallas> do
23:49 < hallas> res.locals.info = req.flash('info');
23:49 < hallas> res.locals.error = req.flash('error');
23:49 < hallas> etc
23:49 < someprimetime_> ah ok
23:49 < someprimetime_> thanks man
23:49 < someprimetime_> i'll try that now.
23:49 < someprimetime_> also why res.locals over app.locals?
23:50 < someprimetime_> robinson_k: never heard of flashify.. is there a module that works nicely with express?
23:50 < hallas> app.locals persists between requests, you don't want that, the wrong people may see the flash messages
23:50 < tjholowaychuk> someprimetime_ it's easy to implement the same thing yourself
23:50 < tjholowaychuk> it's really just an object of arrays in the session
23:50 < tjholowaychuk> nothing too crazy
23:51 < hallas> might aswell use connect-flash, it solves the problem just fine
23:51 < someprimetime_> tjholowaychuk: so just like res.locals.info = req.session.msg and then when i set an error req.session.msg = 'wtf';
23:51 < someprimetime_> ?
23:52 < tjholowaychuk> the multi-message stuff is basically just req.session.message.errors.push('oh no')
23:52 < tjholowaychuk> req.message.errors = []
23:52 < someprimetime_> hallas: thanks for the explanation about app vs. res… was wondering about that
23:52 < tjholowaychuk> to flush
23:52 < someprimetime_> oh word.
23:52 < someprimetime_> tjholowaychuk: you going to add back in session flashes back into the next express?
23:53 < tjholowaychuk> nope
23:53 < someprimetime_> or I guess what I don't understand is the reason it got removed
23:53 < tjholowaychuk> it's a dumb name and easy to implement
23:53 < tjholowaychuk> without
23:53 < someprimetime_> is it because it's easy to implement your own and you're trying to keep express lightweight?
23:53 < someprimetime_> got it.
23:53 < hallas> req.flash() (just use sessions: req.session.messages = ['foo'] or similar)
23:53 < hallas> its very simple to achieve the behaviour
--- Log closed Sun Feb 24 00:00:26 2013
