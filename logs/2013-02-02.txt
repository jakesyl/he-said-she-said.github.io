--- Log opened Sat Feb 02 00:00:15 2013
00:02 < MI6> joyent/node: isaacs master * 916aeba : debugger: Make the debugger timeout configurable  If the NODE_DEBUGGER_TI - http://git.io/xMs-sQ
00:03 < asdf12> what anti piracy system
00:04 < MI6> joyent/node: Ben Noordhuis master * cd42f56 : buffer: optimize Buffer.prototype.write(s, 'hex')  Move the implementatio - http://git.io/ovgLWg
00:20 < MI6> joyent/libuv: Ben Noordhuis master * b271b06 : build: fix up WIN_SRCS - http://git.io/ipMdPA
00:32 < kenperkins> isaacs where do I find the forward looking plan for node
00:36 < rump> anyone figure out how to get superagent to save cookies across requests?
00:41 <@isaacs> kenperkins: github issues.
00:41 <@isaacs> kenperkins: we don't plan too far in advance.  that's enterprise talk.
00:41 <@isaacs> kenperkins: we're embassy class.
00:47  * mansoor-s looks up the meaning of enterprise
00:47  * mansoor-s can only find ships
00:48  * holzp is enjoying his tea: Earl Grey Hot
00:49 < CoverSlide> mm 50 shades of Earl Grey
00:52 < mansoor-s> holzp, CoverSlide http://i.imgur.com/L3Pio.gif
00:53  * holzp loves himself an emoting android
01:04 < rump> whats the case for when to use /regex/.match(string) versus string.match(/regex/)
01:05 < CoverSlide> >> /rx/.match
01:05 < purr> CoverSlide: undefined
01:05 < CoverSlide> ^ there's your answer
01:05 < rump> doh i misread MDN docs
01:05 < rump> ty
01:06 < CoverSlide> now when to use /regex/.exec vs string.match ...
01:06 < CoverSlide> really just depends on the structure of your code
01:07 < clone1018> so I couldn't do something like var exists = fs.exists(file); ?
01:07 < clone1018> exists being true/false
01:09 < CoverSlide> no, you'd have to use fs.existsSync
01:09 < CoverSlide> otherwise you need to use a callback
01:09 < clone1018> Oh right
01:10 < briefcaseofguts> whys there no php channel? anybody know the php channel so i can join and bash you? :)
01:10 < clone1018> ##php 
01:11 < asdf12> clone answered that way too fast
01:11 < asdf12> get him
01:11 < Havvy> It is possible to write good PHP.
01:11 < CoverSlide> sure
01:11 < azylman_> Does anyone else think that it's strange that fs.exists doesn't have err as its first parameter?
01:11 < clone1018> I'm totally a php dev :(
01:11 < CoverSlide> it's PHP itself that is the problem
01:12 < clone1018> azylman_: What's gonna err?
01:12 < clone1018> err: file system not found :P?
01:12 < briefcaseofguts> php isnt the problem, zend is the problem ;D
01:12 < briefcaseofguts> for me anyway
01:12 < azylman_> No idea what could error, so err could be always null, but not having it throws off a lot of stuff
01:13 < azylman_> Sinc eit's a pretty common pattern
01:13 < azylman_> Need to wrap the callback to use it in async etc.
01:13 < asdf12> you know its funny that... you always see a person go from php -> some other language, but never have anyway say that's it i'm going with php!
01:13 < asdf12> anyone*
01:14 < Havvy> asdf12: You've never seen anybody go from PHP to Java.
01:16 < awfulscript> i got banned from stackoverflow for answering a zend question wrong -_-
01:16 < Musk> awfulscript ahhah
01:16 < Musk> really O_o
01:16 < awfulscript> ya :p
01:16 < Havvy> What *is* the difference between PHP and Zend anyways?
01:17 < azylman_> Java is much nicer than PHP :p
01:17 < Havvy> azylman_: Depends on what you're doing.
01:18 < CoverSlide> what do you mean by Zend? Zend framework? Zend server? Zend the company?
01:18 < zomg> Java is hate
01:18 < zomg> :D
01:18 < zomg> awfulscript: banned? what the heck did you say? :P
01:18 < mansoor-s> i got banned from ##php because i was having a debate on whether having inline HTML was a good or bad practice :|
01:18 < mansoor-s> i think i got banned
01:18 < mansoor-s> i can't join the channel
01:19 < awfulscript> zomg: i told them to rewrite it in nodejs -_-
01:19 < zomg> awfulscript: yeah because that's a valid answer if they asked something else than "What should I rewrite this in"
01:19 < zomg> :P
01:20 < zomg> Although I'd find it weird you'd get right off banned for that unless you've been equally helpful before
01:20 < zomg> =)
01:20 < zomg> mansoor-s: yeah channel full of big egos what do you think.. look at the mailing list... ugh
01:20 < CoverSlide> anyone who asks a "what should i write this in" question should be shot
01:21 < Musk> i think this channel is soon to host another my language is better than yours kind debate
01:21 < Musk> :/
01:21 < mansoor-s> zomg,  thats the first time i went back there in a year or so :p
01:24 < azylman_> Musk: No reason to have a debate like that, it's universally known that CoffeeScript is the best
01:24 < azylman_> O:)
01:24 < isaacbw> I resent that
01:25 < Musk> azylman_ o.O
01:25 < Musk> o you
01:25 < redshadowhero> It's C.
01:25 < redshadowhero> C is the best.
01:25 < redshadowhero> Ever.
01:26 < redshadowhero> I'm right forever, no take backs.
01:26 < CoverSlide> Fortran is better
01:26 < redshadowhero> I'd rather code in asm for the rest of eternity than fortran.
01:26 < azylman_> COBAL
01:26 < redshadowhero> I think you mean SLOWBAL.
01:26 < CoverSlide> yeah if you only program for wintels
01:27 < isaacbw> the worst part is that people are still running cobal sytems somewhere in the world
01:27 < azylman_> Mmmm
01:27 < CoverSlide> give it up, the future is Ada
01:28 < azylman_> Want to write a binary addon in asm
01:28 < isaacbw> ada can be kind of cool
01:28 < Musk> about punch cards ? 
01:28 < asdf12> whats the deal with Object.freeze, you would think looping a frozen objects properties would be faster :S
01:28 < isaacbw> not if you aren't doing anything
01:28 < isaacbw> you keep talking about really minor optimizations
01:29 < isaacbw> work on your algorithmic speed
01:29 < isaacbw> let v8 do the heavy lifting with systems stuff
01:30 < azylman_> Working on v8 would be so fun
01:30 < asdf12> nah this is major stuff
01:31 < asdf12> ive doubled my speed so far for my library
01:31 < azylman_> What kind of library is this?
01:31 < asdf12> its for validating data
01:34 < redshadowhero> Actually, 2 jobs ago, a lot of the doctors I worked with insisted on programming in fortran.
01:34 < redshadowhero> Kept saying it was 'faster'.
01:34 < SomeoneWeird> lold
01:34 < asdf12> besides i wouldn't really call it optimizing, most optimizations you can do are really just bugs in your code
01:35 < Musk> asd12 unless your linus torvald self allegde pro at micro-optimization.
01:35 < Musk> asdf12*
01:36 < SomeoneWeird> lol
01:36 < redshadowhero> He uses goto in the code.
01:36 < redshadowhero> I've seen it.
01:37 < asdf12> but anyway its true
01:37 < asdf12> you would think a frozen object would be faster for looping
01:38 < azylman_> Why would you think that?
01:39 < asdf12> becauase the object the object can't change
01:39 < asdf12> i mean at the very least they should be equal in speed
01:39 < azylman_> Yeah, equal, probably
01:40 < azylman_> But I would not expect it to be faster
01:40 < azylman_> I would expect it to be the same speed
01:40 < Musk> redshadowhero Of course, in stupid languages like Pascal, where labels cannot be 
01:40 < Musk> descriptive, goto's can be bad. But that's not the fault of the goto, 
01:40 < Musk> that's the braindamage of the language designer.
01:40 < Musk> 		Linus
01:40 < Musk> shit -.-
01:41 < redshadowhero> Well, that's interesting. JSON.stringify won't work on an associative array, but it will work on an object.
01:41 < asdf12> put it inside 
01:42 < asdf12> an object
01:42 < CoverSlide> associative arrays don't exist in JavaScript
01:42 < CoverSlide> everything is an object
01:42 < redshadowhero> Nah. I just refactored the code for it to be an actual object instead.
01:42 < redshadowhero> It does exactly the same thing that I want, and it works the way I want too.
01:42 < azylman_> Yeah, you should be using an actual object
01:43 < redshadowhero> Is that recommended practice?
01:43 < azylman_> You shouldn't be setting string-based properties on arrays
01:43 < azylman_> If you want a field with keys as strings, you should be using an object and not an array
01:43 < redshadowhero> Well, that's another item for the notes.
01:43 < CoverSlide> never ever ever
01:43 < redshadowhero> ...okay, okay. :/
01:44 < azylman_> It's on the list of things that javascript lets you do but you shouldn't do
01:44 < azylman_> lol
01:44 < asdf12> it messes up length
01:44 < redshadowhero> Well, I think I'm getting on to week 3 of javascript.
01:45 < azylman_> Yeah, so you should just think of objects as associative arrays
01:45 < redshadowhero> Already done.
01:45 < azylman_> Basically, in js, objects are any data structure you want EXCEPT arrays
01:45 < azylman_> Want a set? Object
01:45 < azylman_> Want a map? Object
01:45 < azylman_> Want an object? Object
01:45 < CoverSlide> arrays are descendants of objects
01:45 < jrajav> I want a linked list.
01:45 < jrajav> :P
01:45 < isaacbw> arrays are objects
01:45 < isaacbw> watchu talkin bout
01:45 < CoverSlide> you can make an object a linked list node
01:46 < isaacbw> "0": 
01:46 < azylman_> When I say object I mean {} as opposed to []
01:46 < isaacbw> "1": 
01:46 < isaacbw> "2": 
01:46 < azylman_> Obvs arrays are also objects
01:46 < isaacbw> [] is sugar
01:46 < isaacbw> god I love js
01:46 < isaacbw> almost as much as lua
01:46 < azylman_> [] isn't just sugar, it instantiates a different kind of object than {} does
01:46 < jrajav> It's not pure sugar - arrays have special handling. It's not just special operators.
01:46 < isaacbw> new Array
01:46 < isaacbw> mm
01:46 < azylman_> But yes, it is also an object
01:46 < isaacbw> internally it does magic
01:46 < CoverSlide> arrays didn't exist until JS 1.1
01:46 < isaacbw> yea, sugar was a bad word
01:46 < jrajav> It *has* to do magic.'
01:46 < CoverSlide> before then, there were only objects
01:46 < CoverSlide> and array-like objects
01:47 < isaacbw> no, I realize that was a stupid thing to say
01:47 < jrajav> Personally I prefer "everything is a list" to "everything is an object"
01:47 < CoverSlide> of course the array and object literal syntaxes didn't exist until 1.2
01:47 < CoverSlide> how do you make maps out of lists?
01:48 < jrajav> There are many ways
01:48 < CoverSlide> name one
01:48 < isaacbw> hash maps are interally lists
01:48 < isaacbw> *internally
01:48 < jrajav> I can name two right off the bat
01:48 < isaacbw> you can build bs trees from lists
01:48 < jrajav> Have two lists where indices correspond
01:48 < isaacbw> but no, I prefer the everything is an object way
01:48 < jrajav> And have one list with even and odd being keys and values
01:48 < isaacbw> it's cleaner
01:48 < isaacbw> in my mind
01:48 < CoverSlide> ok cool story bro
01:49 < isaacbw> you ultimately implement any kind of map using arrays, so it's not insane
01:49 < redshadowhero> Well, now I feel bad. I feel like I started an argument.
01:49 < jrajav> redshadowhero: They spawn out of nothing. Welcome to the internet.
01:49 < isaacbw> jrajav is the only crazy one here
01:49 < isaacbw> I'm brewing my first batch of beer ever and the wort smells so damn good
01:49 < jrajav> Neither way has any less merit
01:49 < jrajav> Technically speaking
01:49 < isaacbw> technically speaking
01:49 < jrajav> I'm sure the computer science discussion still has a ways to go, but when doesn't it?
01:49 < CoverSlide> every vegetable is a carrot!
01:50 < isaacbw> woo
01:50 < isaacbw> carrots for everyone
01:50 < jrajav> I just find lists cleaner
01:50 < jrajav> associative mappings aren't quite as elemental
01:50 < CoverSlide> well the way js implements arrays is pretty shitty i agree
01:51 < asdf12> arrays are broken
01:51 < asdf12> it needs to be treated like a primitiveeeee
01:51 < jrajav> "Arrays considered harmful"
01:51 < CoverSlide> i agree
01:52 < redshadowhero> It IS kinda weird how there are these really STRANGE differences in what arrays are.
01:52 < isaacbw> I think arrays are sexy
01:52 < redshadowhero> then again, I like the C definition of arrays :/
01:52 < isaacbw> but not as sexy as maps
01:52 < CoverSlide> JS should have a list type
01:52 < isaacbw> it should
01:53 < CoverSlide> and tuples, i like tuples
01:53 < isaacbw> has it been proposed at all?
01:53 < jrajav> C doesn't have a definition of arrays
01:53 < jrajav> :P
01:53 < isaacbw> I don't care for tuples
01:53 < isaacbw> C sort of does
01:53 < redshadowhero> Well, it's just a pointer.
01:53 < isaacbw> it has 'array syntax'
01:53 < redshadowhero> It's mostly syntatic sugar.
01:53 < jrajav> C has a definition of a pointer operation
01:53 < jrajav> Which is kinda neat too
01:54 < redshadowhero> you can dereference a pointer with [0], as an example.
01:54 < redshadowhero> since [] is just telling it how many bytes to shift over and how many bytes to collect.
01:54 < redshadowhero> well, the type is how many bytes to collect, I guess.
01:55 < isaacbw> somehow my brew pot is magically staying at 155 degrees, which is the optimal temperature
01:55 < jrajav> That's actually one of the really unfortunate things about C, actually, IMO
01:55 < redshadowhero> It's never bothered me.
01:55 < jrajav> It gave us the nonsensical 0-indexed arrays
01:55 < isaacbw> that's C
01:55 < isaacbw> C is C
01:55 < redshadowhero> You know, that's never bothered me either.
01:55 < jrajav> I don't actually mind C itself, I mind the higher-level languages that kept the indexing even when they abstracted away the pointers
01:55 < jrajav> Just by blind convention
01:55 < CoverSlide> i think the indexing is fine
01:56 < CoverSlide> for loops are simpler
01:56 < isaacbw> yea
01:56 < redshadowhero> To me, it's worse to KNOW it's a 0 start language and then code around it to re-introduce 1-based arrays just because you want it to feel like fortran.
01:56 < isaacbw> it makes reasoning easier
01:56 < CoverSlide> so many times using an index of 0 usually works out better than without them
01:56 < jrajav> It only makes reasoning easier because you've assimilated the knowledge so thoroughly
01:57 < redshadowhero> Then again, that came from the same guy that suffixed {} blocks with ;, no matter what.
01:57 < isaacbw> it simplifies a lot of structures
01:57 < isaacbw> loop structures
01:57 < isaacbw> pizza butt
01:58 < jrajav> Example of a loop that's simplified with 0-indexing?
01:58 < isaacbw> nope
01:58 < CoverSlide> while(i++ < x.length)
01:58 < jrajav> <=
01:58 < redshadowhero> while( i-->0 )
01:58 < redshadowhero> not that it simplifies it, but it is SO COOL to type.
01:58 < jrajav> -_
01:58 < holzp> I teach my kids to count starting from 0
01:59 < holzp> their teachers correct them, but I tell them to ignore their teachers
01:59 < zomg> holzp: I hope you also teach them to count in binary with their fingers instead of decimal
01:59 < isaacbw> damn teachers
01:59 < zomg> ;>
01:59 < CoverSlide> yeah you could do that
01:59 < redshadowhero> Hrm. I could teach children to count in octal because thumbs aren't 'real' fingers.
01:59 < asdf12> i giggle when i wrote code and i ({}) comes up
02:00 < SomeoneWeird> -.-
02:00 < holzp> count your digits using your digits, go
02:00 < asdf12> does that make me immature
02:00 < redshadowhero> No. It makes you lovable.
02:01 < holzp> immature is measuring things in 'holzps'
02:01 < redshadowhero> I would like to be measured in decihelens per meter squared.
02:02 < holzp> back in my day we got 3 rods to the hogshead and thats how we liked it
02:16 < redshadowhero> What would be the best way to get the number of elements in an object? Object.keys(obj).length?
02:16 < holzp> jade automatically wraps included .css files in style tags?
02:16 < holzp> I don't remember that
02:17 < asdf12> redshadowhero: yes
02:17 < redshadowhero> right-o.
02:17 < isaacbw> >> {a: 0}.length
02:17 < purr> isaacbw: SyntaxError: Unexpected token .
02:17 < isaacbw> :(
02:17 < redshadowhero> >> Object.keys({a: 0}).length
02:17 < purr> redshadowhero: (number) 1
02:18 < isaacbw> used to be __count__
02:18 < isaacbw> >> {a: 0}.__count__
02:18 < purr> isaacbw: SyntaxError: Unexpected token .
02:18 < redshadowhero> >> for( prop in ({}) ) console.log( prop );
02:18 < purr> redshadowhero: undefined
02:18 < redshadowhero> oh right.
02:18 < isaacbw> getPropertyNames might be faster if you're into micro optimization
02:18 < asdf12> its not
02:18 < asdf12> its slower
02:19 < isaacbw> >> {a: 0}.getPropertyNames()
02:19 < isaacbw> lol
02:19 < purr> isaacbw: SyntaxError: Unexpected token .
02:19 < isaacbw> >> {a: 0}.getOwnPropertyNames()
02:19 < purr> isaacbw: SyntaxError: Unexpected token .
02:19 < Spion> weird parsing
02:19 < asdf12> its Object.get
02:19 < asdf12> etc
02:19 < isaacbw> >> ({a: 0}).getOwnPropertyNames()
02:19 < purr> isaacbw: TypeError: Object #<Object> has no method 'getOwnPropertyNames'
02:19 < redshadowhero> >> var rstr = ''; for( prop in ({}) ) rstr += prop; rstr;
02:19 < purr> redshadowhero: (string) ''
02:19 < isaacbw> agh
02:19 < isaacbw> whatever
02:19 < Spion> ({a:0}).__count__
02:19 < isaacbw> keys.length sounds fine
02:19 < Spion> >> ({a:0}).__count__
02:19 < purr> Spion: undefined
02:19 < asdf12> >> Object.getOwnPropertyNames({a: 1})
02:19 < purr> asdf12: (object) ['a']
02:19 < Spion> :(
02:19 < redshadowhero> Huh. Object.keys(obj).length it is!
02:20 < asdf12> getOwnPropertyNames includes non-enumerables though
02:20 < asdf12> but its slower
02:20 < redshadowhero> well, since I had to switch from an associative array (both by convention and now being told better :P), all the elements I'm interested in are enumerable.
02:25 < Spion> twitter flight is weird
02:25 < k1ng> yo
02:25 < isaacbw> angularjs 4 lyfe
02:25 < asdf12> it reminds me of enyo
02:26 < Spion> i don't understand the _data and _ui component separation
02:26 < Spion> :(
02:26 < k1ng> Hello, i am a professonal php developer.. i am very much interested to work with node.js. it seemed really awesome 
02:27 < Spion> (which they picked for their "email client")
02:27 < asdf12> its by twitter so its good
02:28 < asdf12> just like bower
02:29 < Spion> i like angular a lot, I just don't understand its scope restrictions.
02:29 < asdf12> why not
02:30 < Spion> like the need for scope.$apply
02:31 < Spion> (when using non-angular callbacks)
02:32 < Spion> is there a comprehensive overview on how it monitors the scope for changes?
02:32 < Sly> isaacs: any idea why ECONNRESET is being triggered after the timeout event (with the timeout callback calling res.end)?
02:32 < Sly> (0.9.9-pre)
02:32 < asdf12> Spion: i think it uses .watch
02:33 < owen1> how to benchmark my service? do u use any npm package or just new Date().getTime(); ?
02:34 < asdf12> owen1: i do just do that
02:34 < asdf12> but i use the microtime module
02:34 < owen1> asdf12: why not end - start ?
02:35 < asdf12> huh?
02:35 < Spion> if it uses .watch then why does one need to wrap changes to that scope caused by non-angular events (say, websockets) in scope.$apply(function() { change scope.something here }); 
02:35 < owen1> start = Date().getTime(); bla bla ; end = Date().getTime()
02:35 < owen1> asdf12: ^
02:36 < Spion> owen1, there is a timer with a higher accuracy in newer versions of node
02:36 < asdf12> owen1: thats what i do
02:36 < Spion> process.hrtime
02:36 < asdf12> but i use the microtime module instead of Date
02:37 < asdf12> https://github.com/wadey/node-microtime
02:38 < owen1> asdf12: so the timer with higher accuracy is process.hrtime ?
02:38 < owen1> Spion: thank you
02:53 <@isaacs> Sly: because the socket's getting shut down, i guess?
02:53 < isaacbw> bill gates is a pretty cool guy
02:54 < asdf12> http://blog.stackoverflow.com/2013/02/why-we-still-believe-in-working-remotely/
02:57 < owen1> Spion: why do they multiple in billion to get the time difference? diff[0] * 1e9 + diff[1]  if i want in milliseconds i guess i should devide by 1,000,000
02:58 < isaacbw> mill is thousand
02:58 < isaacbw> what's goin on
02:58 < isaacbw> why does my tummy hurt
02:59 < asdf12> its in nanoseconds i think
02:59 < asdf12> i never used it
02:59 < owen1> isaacbw: so what's the most efficient way to get the diff in milli? 
02:59 < isaacbw> between what
02:59 < owen1> asdf12: you are right. it's nano.
03:00 < isaacbw> oh
03:00 < isaacbw> wtf are you doing with nanoseconds
03:00 < jrajav> SCIENCE!
03:00 < owen1> isaacbw: i don't care about nano. i want mili
03:00 < owen1> but the node http://nodejs.org/api/process.html#process_process_hrtime
03:00 < isaacbw> even if the API lets you get nanoseconds, the system might not deliver
03:00 < owen1> api think that nano is the real deal
03:00 < isaacbw> fyi
03:00 < isaacbw> ouchies my tumtum
03:01 < owen1> isaacbw: so what's an easy way to get simple benchmarks from different places of my reqest?
03:02 < owen1> i started with Date.getTime() but i heard it's not accurate.
03:02 < asdf12> doesnt hrtime give you an option to ask for it in milliseconds?
03:02 < asdf12> if not then just divide
03:03 < owen1> asdf12: Returns the current high-resolution real time in a [seconds, nanoseconds] tuple Array
03:04 < isaacbw> owen1, usually you will repeat the operation many times and then divide to get the individual execution time
03:04 < isaacbw> because system timers may not have good resolution
03:04 < asdf12> yar
03:05 < asdf12> or else there's no point in doing the timing anyway
03:05 < asdf12> if you're just gonna do a wild guess
03:05 < asdf12> so just use the nanoseconds and divide
03:06 < isaacbw> man, this setup can make 5 gallons of beer a week
03:07 < isaacbw> can I do it
03:07 < owen1> ok. i'll just do (diff[0] * 1e9 + diff[1])/1000000
03:07 < isaacbw> make sure to repeat it
03:07 < owen1> isaacbw: what do u mean?
03:07 < isaacbw> what I just said
03:09 < owen1> isaacbw: i read it the first time but not sure if i understood. i have a reuest that takes a few seconds. i want to understand if the bottleneck is the network or the db call.
03:09 < owen1> so i want to mesure the time in miliseconds.
03:09 < isaacbw> oh I see
03:09 < isaacbw> you don't have to worry about time resolution really then
03:09 < owen1> what were you thinking?
03:10 < isaacbw> owen1, if the execution time was a few milliseconds or less, then you would have to repeat it at least a few thousand times to get a good timing resolution
03:11 < owen1> isaacbw: ok. so in my case i can use Date.getTime() ?
03:11 < asdf12> wheres that router
03:11 < isaacbw> yea probably
03:11 < isaacbw> I don't know
03:11 < isaacbw> thinking is hard :(
03:11 < asdf12> owen1: if this is a 1 time thing and its obvious
03:12 < asdf12> like your network call has like a second difference 
03:12 < asdf12> or something
03:12 < asdf12> isaacbw: wheres that router
03:13 < isaacbw> in my secret project directory
03:22 < othiym23> isaacbw: if you want to use node-newrelic, go ahead, but you're going to want to sign up for a Pro Trial if you want to use most of it
03:22 < othiym23> and it is very much a work in progress right now
03:22 < isaacbw> how long is the trial?
03:22 < othiym23> we're WIPping it good
03:22 < othiym23> 30 days
03:23 < isaacbw> maybe I'll sign up later so I can make full use of the 30 days
03:23 < othiym23> good idea
03:23 < isaacbw> do you have pricing yet?
03:23 < othiym23> the longer you wait, the better shape it'll be in ;)
03:23 < isaacbw> heh
03:24 < othiym23> New Relic's pricing is the same across the board, so whatever it says on our site
03:24 < othiym23> it's per host, is the long and short of it
03:24 < isaacbw> ah there it is. I had a bit of trouble finding it from the landing page
03:25 < isaacbw> oh, not bad
03:36 < cloudbender> Alan Parson's Project-Turn of a freindly card-the classics endure - http://www.youtube.com/watch?v=uJR9izeYgog
03:37 < asdf12> no
03:45 < clone1018> (Ignore how messy), https://gist.github.com/4696024 why exactly if is tmp_simplate not passed out of the fs.exists?
03:47 < jrajav> cloudbender: The callback (function argument) for fs.exists is asynchronous, like all Node.js callbacks. It will not be run when you run the fs.exists statement, nor indeed until that whole code block is finished executing
03:47 < clone1018> You meant to ping me right?
03:47 < jrajav> yes
03:49 < clone1018> Even when I convert it to a sync'd call it still doesn't pass the variable down
03:51 < asdf12> stop playingggg
03:53 -!- mode/#Node.js [+o TooTallNate] by ChanServ
03:54 < asdf12> clone1018: http://hastebin.com/fecavupimo.coffee
03:54 < asdf12> idk why it suffixed it as coffee
03:54 < isaacbw> magic
03:58 < gabrieluk> i like coffee.In the morning, with milk
03:58 < MelkorNemesis> gabrieluk: i've just finished mine
03:59 < MelkorNemesis> but its 5am and it's about time to go sleep
03:59 < asdf12> how do some people do that
03:59 < clone1018> That's exactly what I was doing asdf12 :P! Thanks I'll see how this goes
03:59 < asdf12> drink coffee before they sleep and then be able to sleep
04:00 < MelkorNemesis> asdf12: when you drink a LOT of coffee it actually forces you to sleep
04:00 < isaacbw> coffee makes you sleepy before it wakes you up
04:00 < isaacbw> I once drank a 5 hour energy and took a 5 hour nap
04:00 < asdf12> you mean the crash when it wears out?
04:00 < asdf12> yea but that doesnt happen till a few hours later
04:00 < isaacbw> no, there's a brief 'crash' before it kicks in
04:01 < isaacbw> like, your brain responds to the sudden caffeine
04:01 < asdf12> no i dont know
04:01 < MelkorNemesis> and yet I am awake for 24 hours so the coffee has no effect anymore, just tastes good
04:01 < asdf12> haha
04:01 < asdf12> you are awake for 24 hours and the coffee has no effect...
04:02 < MelkorNemesis> my regime is totally screwed for last month
04:02 < MelkorNemesis> asdf12: I mean it can't help me to stay awake anymore :)
04:04 < MelkorNemesis> well, cya guys, need a nap
04:05 < asdf12> he was czech
04:05 < asdf12> no wonder
04:10 < zodiak> anyone got any experience with the couchbase node.js library ? it set's jst fine the document, but hangs when trying to get anything out
04:20 < cloudbender> Hope you get it fixed, I'm gonna be rying couchbase next month
04:20 < cloudbender> trying
04:21 <@Nexxy> \o/
04:21 < zodiak> fixed schmixed. at this rate, I may jst go back to clojure
04:21 < zodiak> for the record. node 0.8.18, couchnode 0.11 and couchbase 2.0
04:24 < zodiak> http://pastebin.com/esrw8hgZ
04:24 < zodiak> brutally simple.. and only the node.js client hangs.. ruby and python work nice (not terribly responsive mind you)
04:28 < cloudbender> In case anybody missed this ... http://www.youtube.com/watch?v=WdxRmcgsKDQ
04:32 < decci> Hi Guys
04:33 < decci> I have node.js and socket.io running on one of my VPS server
04:33 < decci> thats CentOS machine
04:34 < decci>  I am trying to setup multiplayer game on my laptop?
04:34 < decci> http://www.scirra.com/forum/topic49587.html
04:34 < decci> Can anyone help me what I need to install on my Windows Xp machine?
04:34 < clone1018> asycn/sync is very confusing
04:38 < mscdex> clone1018: never!
04:38 < clone1018> I understand it for simple stuff but D:
04:39 < asdf12> decci: looks like you just need node and socket.io
04:39 < mscdex> decci: just install node
04:39 < mscdex> clone1018: what are you having trouble with?
04:40 < clone1018> It's really a bit hard to explain actually
04:40 < clone1018> It requires a backstory and a bunch of confusion!
04:40 < asdf12> clone1018: sync is just how you're use to, code runs top to bottom
04:40 < clone1018> Yeah, I understand that
04:41 < asdf12> async is like that, but you don't know when the data will return
04:41 < decci> mscdex: I installed http://code.google.com/p/nodejs-win/
04:41 < mscdex> decci: no, use the installer from nodejs.org
04:41 < decci> mscdex: One query
04:41 < clone1018> So I'm evaling code, inside that eval we do a readdir(async, tried sync too), that looks through some stuff and then stores it in a variable. We then (in a later template rendering portion of the script try and print that, but when we print it it's apparently blank
04:42 < decci> mscdex: I installed node.js and socket.io on remote VPS machine
04:42 < cloudbender> Ritchie - Mercy Street http://www.youtube.com/watch?v=JFqfGgLT0x0
04:42 < decci> mscdex: What I need in my local laptop to be installed
04:42 < asdf12> clone1018: are you part of that aspen web framework? with whit357 ?
04:42 < clone1018> Yeah
04:42 < clone1018> Well, trying to be
04:42 < decci> mscdex: Do I need node.js on my local laptop too?
04:42 < mscdex> decci: i think only the server needs to have node installed
04:42 < decci> mscdex: ok
04:43 < decci> mscdex: So what I need to install on my laptop? construct2?
04:43 < clone1018> asdf12: I'm working on rewriting the simplates rendering but it's working weirdly
04:43 < mscdex> decci: i don't know anything about construct2. judging by the video it looks like just a browser?
04:43 < asdf12> clone1018: its like this, with async, if you read a file, do you want your whole script or app to block and wait till that file is done being read? if you do you use the sync version
04:44 < decci> mscdex: Im running windows XP, SP2 or whatever the latest is. Construct2 only runs on Windows.  When I run the program in construct, it asks me for the server ip. I enter the ip of the server (vps) that I installed socket.io and node.js...but i am not sure if i need to add the folder name for node. js
04:44 < asdf12> if you don't and want your script or app to continue on then you use async version
04:44 < clone1018> When we eval/render simplates we have to do in in sync, since it literally goes top from bottom, one cannot work without the other
04:45 < clone1018> as far as I can tell, we are doing the eval/render in sync
04:45 < asdf12> i dont know how that template works so i can't comment what you should use
04:46 < clone1018> asdf12: https://github.com/zetaweb/aspen.js/blob/master/www/foo.html top is ran and cached, middle is ran each request and bottom is what we render the the client
04:46 < clone1018> So it needs to be ran in sync
04:46 < asdf12> no it doesn't need to be
04:46 < clone1018> what if 2 runs before 1?
04:46 < asdf12> you have to just chain the async call backs
04:47 < clone1018> The only async call is fs.readFile when we read the files to see what we need to do
04:47 < clone1018> And since the eval/read operations are done inside the readFile callback, it should be fine?
04:48 < clone1018> Let me branch what I have
04:49 < decci> mscdex: u there?
04:50 < asdf12> clone1018: idk i dont know what you have so far
04:50 < asdf12> clone1018: also you don't have to use eval()
04:50 < clone1018> asdf12: I was going to look into running it in a node vm whenever
04:50 < clone1018> asdf12: https://github.com/zetaweb/aspen.js/blob/add_renders/aspen.js
04:50 < clone1018> async at 56
04:51 < asdf12> >> a = new Function('var x=14;console.log(x)'); a();
04:51 < purr> asdf12: undefined; Console: 14
04:51 < asdf12> no need to use eval
04:51 < clone1018> ah i see
04:52 < clone1018> We actually want to run it in the same scope as the app level but not as the aspen level, that'll come soono
04:54 < isaacbw> the vm stuff is nice
04:54 < asdf12> clone1018: whats the problem so far in that code?
04:54 < clone1018> one sec brb
04:55 < clone1018> so the problem is, https://github.com/zetaweb/aspen.js/blob/add_renders/aspen/simplates/autoindex.html 
04:56 < clone1018> Even though it's a sync call, it's list isn't avaliable
04:59 < asdf12> readdirsync doesn't take a callback
04:59 < clone1018> oh?
04:59 < clone1018> oh it returns!
05:01 < clone1018> Well, hello I'm clone1018 and I'm a certified retard!
05:01 < isaacbw> hello clone1018 
05:05 < clone1018> Thanks a ton asdf12!
05:08 < cloudbender> I was reading the vm stuff. can't wait to try it out.
05:09 < asdf12> what vm stuff
05:10 < asdf12> and i think its funny you guys tried to keep the python code style
05:11 < jrajav> There are worse code styles.
05:11 < clone1018> asdf12: I actually don't know much python, been studying and learning nodejs via the docs for months not but I've never actually made anything cool
05:12 < clone1018> My background is php
05:12 < asdf12> another one
05:12 < asdf12> get him!!!
05:12 < asdf12> by the way
05:12 < asdf12> well hmm
05:13 < bnb> Hello.
05:13 < asdf12> clone1018: you could provide the option to users to so the javascript in your simplates don't have to be async
05:14 < DAddYE> hello world
05:14 < clone1018> asdf12: couldn't they be either?
05:14 < asdf12> yea they could
05:14 < asdf12> but right now it can't
05:14 < asdf12> if you want users the ability to write async code in the simplates you need to provide a call back
05:14 < clone1018> a callback when each section is done?
05:15 < bnb> Does anybody have suggstions for up-to-date Node.js beginner tutorials? I have tried nodebeginner.org, but I can't finish as the link to continue reading is missing.
05:15 < asdf12> sure
05:16 < asdf12> oops, i meant 'simples don't have to be sync'
05:16 < zodiak> cloudbender, fyi.. forget couchnode and jst use superagent. so much easier.
05:17 < cloudbender> superagent is a couch library ?
05:17 < cloudbender> er, api ?
05:17 < zodiak> naw. http lib.
05:18 < zodiak> couchbase talks http :)
05:18 < zodiak> (or it can, rather)
05:18 < cloudbender> I'll check it out
05:18 < cloudbender> thanks
05:18 < zodiak> nw. if it saves you any hair pulling, I consider it a win
05:18 < asdf12> >> a = new Function('console.log("im doing async stuff..."); done();'); a.call(null, done=function(){console.log('hey its done!')});
05:19 < purr> asdf12: undefined; Console: 'im doing async stuff...', 'hey its done!'
05:19 < asdf12> just pass a call back into your simplates like that
05:21 < clone1018> That's a good idea
05:34 < asdf12> clone1018: yea but the problem with that is whether if there's no async code in the simplates, they still have to call done()
05:34 < asdf12> but if you don't add that, there's no way to do async in the simplates, at least i'm aware of 
05:35 < clone1018> So if we use the vm, couldn't we get the status of the script and make sure it's done running?
05:35 < clone1018> section that is
05:35 < asdf12> what vm
05:35 < clone1018> http://nodejs.org/api/vm.html
05:37 < asdf12> oh 
05:37 < asdf12> i didnt even know about that
05:43 < clone1018> Alright, one more question so I can finally get to asleep
05:43 < clone1018> THis is mustache related, so we use it to render the stuff inside the bottom part of the simplate
05:45 < clone1018> https://github.com/zetaweb/aspen.js/blob/add_renders/aspen/simplates/autoindex.html#L21 files doesn't return anything, typeof files is string, derp returns herp like it
05:50 < asdf12> try without json.stringify
05:51 < clone1018> Still nothing, it's an object now though
05:52 < asdf12> idk, its an array now thats why
05:52 < asdf12> either your directory is empty
05:52 < asdf12> well i think thats it
05:52 < asdf12> otherwise __dirname is not in scope, but it should throw an error so i think your dir is empty
05:54 < clone1018> console.logging it displays the values I expect
05:54 < clone1018> __dirname is in the scope
05:58 < asdf12> not sure
05:59 < clone1018> Yeah me neither
05:59 < clone1018> Oh well, gonna go to sleep and get a fresh start tomorrow
06:00 < clone1018> Thanks for the help asdf12
06:00 < clone1018> You're awesome!
06:00 < asdf12> i feel pretty
06:09 < cloudbender> shweet
06:24 < pingupingu> hello 
06:25 < pingupingu> I have looked at nodemailer, to send email using js, now how do I create a nodejs app with this? and how to have a js on the client so I can actually connect to the nodejs service?
06:31 < TheAceOfHearts> pingu, I think you're misunderstanding 
06:37 < Karthik_> hi
06:38 < Karthik_> how to understand the source code of node.js
06:47 < nicholas_> I confused on the AMD stuff and why this code seems to be requiring itself. https://github.com/Tawlk/hyve/blob/develop/src/hyve.core.js#L4-5
06:47 < nicholas_> Can anyone shed some light
06:54 < rump> http://dpaste.com/904592/
06:54 < rump> whats the proper way to do this without my editor throwing me errors?
06:54 < rump> i want to loop over a bunch of matches and pull out the groupz
06:55 < airtanah> there is another match syntax using callbacks that does exactly that
06:56 < rump> http://dpaste.com/904605/
06:56 < rump> well that works
06:56 < rump> which callback syntax?
06:56 < airtanah> actually sorry i was thinking of .replace()
06:56 < airtanah> tho there might be one for match too
07:00 < Sven_vB> for which kinds of projects would one prefer ruby (maybe on rails) over nodejs? are there any?
07:01 < rump> Sven_vB: for ruby?  not many unless you enjoy the language and style
07:01 < rump> for rails.. sure if you like big frameworks that do a lot of the leg work for you
07:01 < rump> and their whole convention over configuration
07:05 < Sven_vB> for the latter, aren't there nodejs modules as well?
07:05 < rump> sure.  but its more sinatra like than ruby on rails like
07:06 < Sven_vB> good to know. i'll go learn about sinatra then.
07:10 < pingupingu> how do I read input data from the request object for http.createserver object?
07:10 < pingupingu> I want to pass in a json object or a keybalue pair as input
07:13 < jerrysv> Nexxy: come thursday to pdxnode?
07:16 < Sven_vB> rump, i think i understand now. thanks :)
07:28 < Sven_vB> sinatra sounds to have the level of framework i'd like to use. what's its best node equivalent?
07:32 < gildean> Sven_vB: express i guess
07:33 < jhsto> express is cool
07:33 < gildean> it is
07:34 < jhsto> gildean, you know are there many node devs in Finland?
07:35 < gildean> jhsto: not as far as i know it
07:35 < gildean> i've only met a couple online, none irl
07:35 < jhsto> pretty much same here
07:55 < greg5green> Sven_vB, id say express as well. the syntax for routes is even the same
07:59 < SomeoneWeird> express is based off it
08:00 < Sven_vB> ok :) thank you all
08:01 < OrangeTide> I must say. node-dev is pretty slick.
08:02 < GreenDog> why?
08:02 < OrangeTide> saves me a step when I am editing or doing git pull
08:02 < OrangeTide> I don't think I'd use it in production. but for a dev environment, it's pretty handy.
08:02 < pingupingu> hey guys.... how to parse the input get/post arguments in nodejs?
08:02  * GreenDog nods
08:03 < OrangeTide> pingupingu, doesn't http module already parse it out nicely? 
08:04 < pingupingu> OrangeTide: can you point me to some examples?
08:11 < aruns> hi i have a slight problem. i setup nodejs/express on a server a while back. i think i've setup some kind of automatic restart/spawn script, but i've forgotten what it was. i'm trying to stop node with kill $PID, but it keeps respawning. any suggestions on what it might be? i've tried looking for forever, nodemon, supervisor. seems i haven't used any of those
08:11 < OrangeTide> pingupingu, http://nodejs.org/api/http.html#http_request_headers .. that is a good place to start. you can get the request info there. which is all of what was passed in GET/PUT plus the headers that followed
08:15 < OrangeTide> pingupingu, var http = require('http'); var server = http.createServer(function (request, response) { response.writeHead(200, { 'Content-type': 'text/plain' }); console.log(request.url); console.log(request.headers);  response.end('done\n'); }); server.listen(8080); 
08:15 < OrangeTide> or something like that. I've written exactly one of these in my life about an hour ago. so while it is fresh in my mind, I am not experienced at it. :)
08:26 < ajostergaard> aruns: "ps aux" might provide a hint
08:34 < aruns> ajostergaard, it just shows node running the app. the command line is /usr/local/bin/node /path/to/my/app.js
08:34 < aruns> no hint as to what might be causing it to run
08:39 < pbgodwin> Is anyone able to help me with some issues with Node on Windows?
08:42 < pbgodwin> Essentially Contextify is freaking out on Win8 x64 with VS2012 installed
08:43 < ajostergaard> aruns: no parent pid?
08:44 < ajostergaard> aruns: or possible culprits?
08:49 < aruns> no parent id, tried looking at trees with ps -f but can't see anything that might spawn this. yet even after a restart its running
08:49 < aruns> trying to search for the app.js file path inside all files starting with root, but thats taking a while
08:53 < mscdex> aruns: upstart?
08:57 < aruns> mscdex, thanks! that was it! i could have sworn i checked for that. but i think i looked in init.d instead of init/
08:57 < mscdex> :-)
08:58 < BuildingAndroidA> anybody there?
08:58 < pbgodwin> Ahah. Problem solved.
08:58 < mscdex> BuildingAndroidA: possibly
08:59 < BuildingAndroidA> ok, my irc client works
08:59 < BuildingAndroidA> I want to replace all this garbage with node, irc is so 1990
09:10 < nicholas_> exit
09:16 < sshaginyan> Can someone tell me the tradeoff between trying to access an element in an array and getting undefined vs searching an element in an array
09:16 < sshaginyan> and return false if not found
09:16 < sshaginyan> why search it if we can try to access it and get undefined right?
09:17 < sshaginyan> not in an array sorry in an object
09:20 < mscdex> sshaginyan: i wouldn't worry about that unless you can determine it's a serious bottleneck
09:20 < sshaginyan> k
09:21 < mscdex> sshaginyan: but imho i would just access and check for undefined
09:21 < sshaginyan> mscdex: Do you know what's happening at the c++ level?
09:21 < sshaginyan> and undefined is returned?
09:28 < wolverian> How do I run "npm test" if my package requires --harmony? (Or, rather, a Map implementation.)
09:48 < aruns> anyone know how to setup upstart to use nave. i have tried - exec /path/to/nave.sh use 0.8.17 /path/to/app.js as well as /path/to/nave.sh use 0.8.17 node /path/to/app.js 
10:21 < Guest99298> I'm using fs.readFileSync() and then fs.createWriteStream() in a loop to combine images and save the resulting files. It works great; however, node always terminates after 248 files have been written without error. Any ideas why that might be?
10:22 < jesusabdullah> is there an error message?
10:22 < geNAZt> "without error."
10:23 < geNAZt> is it at the end of the dir ?
10:23 < geNAZt> or is it at the beginning ?
10:23 < geNAZt> how much ram is allocated at that time for the node process ?
10:24 < Guest99298> the lack of an error is what's making this tricky
10:24 < Guest99298> not sure I follow what you are asking about the directory
10:24 < geNAZt> is 248 files like 10% of work or like 99% of work ?
10:24 < Guest99298> only around 100mb of ram is getting used and I don't see any spikes
10:25 < Guest99298> its about 25% at the moment, but I tried halving the amount of work and doubling it, and it always cuts off at 248
10:25 < geNAZt> are the writeStreams in paralell ?
10:26 < Guest99298> oh shoot, this is what I get for programming all night
10:26 < Guest99298> everything else is sync, but not the write stream
10:26 < Guest99298> that must be it
10:26 < geNAZt> so you create much writeStreams
10:26 < geNAZt> till the os limits
10:27 < Guest99298> yeah, that was the problem, thanks!
10:27 < geNAZt> but why sync ?
10:28 < geNAZt> try thinking async
10:28 < Guest99298> for this particular case I specifically want it sync
10:28 < Guest99298> this isn't something that'll be used in production or even on a web server
10:29 < geNAZt> ah okay
10:36 < ashnur> morning
10:38 < geNAZt> morning
10:48 <@Nexxy> \o/
10:50 < SomeoneWeird> /o\
10:50 < geNAZt> | O |
10:52 < SomeoneWeird> L   O   L
10:52 < geNAZt> well from this form of holding the hands i want to see a picture :D
10:54 < SomeoneWeird> \|8|/
10:58 < ashnur> i have some trouble with async io
10:58 < ashnur> i read everywhere that i should not use fs.exists
10:58 < geNAZt> then tell us
10:58 < geNAZt> why ?
10:58 < ashnur> i read it because i want to learn stuff
11:00 < ashnur> so, for example, when I have to create a directory, it's better not to check for it, just try to write to it then if it fails because it doesn't exist, I should create it.
11:00 < geNAZt> what ?
11:00 < geNAZt> no
11:01 < geNAZt> exists makes a stat on the path you give it
11:01 < ashnur> what is a stat?
11:01 < geNAZt> if it fails it doenst exist. no need to write something everywhere
11:01 < geNAZt> http://linux.die.net/man/1/stat - file status
11:01 < hugodias> Good morning
11:02 < ashnur> yes, but it's about the asynchronous nature of things. it might be that there are two processes looking for the same dir, and both will try to create them
11:03 < geNAZt> woho where do the two processes come from ?
11:03 < ashnur> gnarf: https://groups.google.com/forum/?fromgroups=#!topic/nodejs/gRRuly79oRc
11:03 < ashnur> geNAZt: I don't understand the question
11:04 < geNAZt> nodejs is a single process thing
11:04 < geNAZt> till you use clusters
11:04 < Robert00001> and child_process
11:05 < Robert00001> and fork
11:05 < ashnur> even if there are multiple nodejs processes running from different apps?
11:05 < geNAZt> well this can also happen in c/c++
11:06 < ashnur> i don't want to write code which then I have to debug for days for misterious crashes (not that I can avoid it, but still, it would be good to avoid certain cases)
11:06 < geNAZt> the worst case you can get is that you try to create the dir twice
11:06 < geNAZt> one succeeds one fails
11:06 < ashnur> yeah, but then I must have code which handles that second error] 
11:07 < geNAZt> if you dont have error handling at all its bad
11:08 < ashnur> geNAZt: I don't understand what are you talking about. why do you say or think that I might not have error handling.
11:08 < ashnur> ?
11:08 < geNAZt> well this case can happen in every multi process / threaded arch
11:09 < SomeoneWeird> just put it in a try catch
11:09 < ashnur> good, because you said before that nodejs is single threaded, I wasn't sure if we agree on this or not
11:09 < SomeoneWeird> and dont do anything if it catches
11:09 < aruns> i have an issue. i'm using nave use 0.8.17 on one machine and being able to run an express server with node app.js. but on the server using the same command - nave use 0.8.17 and node app.js i'm getting some errors in libxmljs
11:09 < SomeoneWeird> ashnur, it is single threaded
11:09 < geNAZt> ashnur: yes it is but it also has an event loop
11:09 < ashnur> oh fuck.
11:09 < geNAZt> so it can make things in "paralell"
11:09 < SomeoneWeird> parallel*
11:09 < SomeoneWeird> :p
11:10 < geNAZt> thanks SomeoneWeird :D
11:10 < ashnur> i always come here to ask question, and it's like everybody is eager to tell me that i am stupid, which is ok, but no frikin help ever 
11:10 < ashnur> have fun guys
11:10 < SomeoneWeird> wtf?
11:10 < geNAZt> well then
11:10 < SomeoneWeird> <SomeoneWeird> just put it in a try catch
11:10 < SomeoneWeird> <SomeoneWeird> and dont do anything if it catches
11:10 < SomeoneWeird> how is that not helpful?
11:10 < ashnur> that is not what I am asking
11:10 < SomeoneWeird> yes, it is
11:11 < SomeoneWeird> if you're spinning up more than one process, it can't be helped
11:11 < SomeoneWeird> so it has to silently fail
11:11 < geNAZt> your question was "what happens if i create a dir twice in the same time"
11:11 < ashnur> i know javascript, and I know node.js a bit. i know how it works. I was asking a different thing
11:11 < ashnur> geNAZt: no, my question was not that
11:11 < SomeoneWeird> then ask that
11:12 < Nasga> Hello, does anyone was able to catch __noSuchMethod__ with node-proxy ? or have any trick about this point ?
11:12 < SomeoneWeird> <ashnur> yes, but it's about the asynchronous nature of things. it might be that there are two processes looking for the same dir, and both will try to create them
11:12 < SomeoneWeird> looks like that was your question to me
11:12 < ashnur> it's related, but not "what will happen" i know what will happen.
11:13 < geNAZt> but where is the problem then ?
11:13 < ashnur> i want to ask if it might be better to try creating the directory anyway first and write the file if the dir already exists 
11:14 < geNAZt> simple answer: no
11:14 < mscdex> Nasga: i don't think __noSuchMethod__ exists in v8
11:14 < ashnur> geNAZt: why? in this case most of the time I will not get an error, while in the other two cases most of the time I will get at least one or maybe two errors before filewrite  
11:15 < Nasga> mscdex: i see that, but do you know any alternative to ?
11:15 < ashnur> so I can limit the errors I have to handle
11:15 < mscdex> Nasga: the closest thing is probably enabling harmony support and using proxies
11:16 < geNAZt> in the fs.exists case you can only have two errors. Failure on creating the dir and Failure on writing a file
11:16 < geNAZt> in the fs.mkdir you also can have two
11:18 < ashnur> geNAZt: see, that's why I am frustrated. there are 3 different cases, and you talk about two, and you are not even right :(
11:18 < SomeoneWeird> how do you know he's not right?
11:18 < SomeoneWeird> you don't know the answer
11:18 < mscdex> Nasga: i believe you can enable just harmony proxies via `node --harmony-proxies foo.js`
11:19 < ashnur> SomeoneWeird: I know the answer to those question he is not saying right
11:19 < ashnur> SomeoneWeird: unless someone convinces me that I am wrong, I don't change my mind just because some say the opposite
11:19 < mscdex> Nasga: yep, i just tested it and it works
11:19 < ashnur> geNAZt: there are 3 different cases. fs.exists which I've linked a thread before where it says I should avoid using it. the one I've been suggested instead where I try to write the file, then if fails because of missing dir, I create the dir, the write again. And the one I am asking about to create the dir, and write the file.
11:20 < mscdex> Nasga: see here for usage: http://soft.vub.ac.be/~tvcutsem/proxies/
11:20 < SomeoneWeird> ashnur, well it's not our fault you don't believe us
11:21 <@Nexxy> ashnur, you could just use mkdirp
11:21 < mscdex> mkderp
11:21 < ashnur> SomeoneWeird: you should have things like arguments or explanation why you are right.. at least that's what I think.
11:21 <@Nexxy> that way you don't have to check if it exists, you just create it if it doesn't every time
11:21 < ashnur> hi Nexxy 
11:21 <@Nexxy> mkdirp(path, nowDoYourStuff);
11:22 < ashnur> Nexxy: in that certain case I will use mkdirp, my question is more about that async flow
11:22 <@Nexxy> hey :)
11:22 <@Nexxy> oh
11:22 < ashnur> Nexxy: you remember that stuff I wrote
11:22 < SomeoneWeird> that's not what you said
11:22 < SomeoneWeird> just use fs.stat to check
11:22 < SomeoneWeird> and use 'async' for async flow
11:22 <@Nexxy> I use fs.exists too, I'm curious as to why its use is discouraged
11:22 < SomeoneWeird> yeah, I don't really see it it is
11:22 < SomeoneWeird> s/it//
11:23 < SomeoneWeird> works fine, imo
11:23 < ashnur> Nexxy: medikoo pointed out that it's not very good that I have a check in the async flow too and suggested to do it in another way, but to me that also seems to be flawed for the exact same reason check is flawed
11:23 < ashnur> Nexxy: https://groups.google.com/forum/?fromgroups=#!topic/nodejs/gRRuly79oRc
11:23 <@Nexxy> what's the flaw?
11:23 < SomeoneWeird> (there isn't one)
11:24 < ashnur> Nexxy: if I understand it correctly, it might happen that the information gets outdated by the time you want to act by it
11:24 <@Nexxy> async makes that a possibility
11:24 <@Nexxy> regardless of how much you plan for it
11:25 < ashnur> SomeoneWeird: dunno why people are telling on that list that it shouldn't be used then
11:25 < ezekielnoob> hi people
11:25 <@Nexxy> they are saying that within the context of him complaining that the API isn't "consistent"
11:25 <@Nexxy> even though fs.exists only has an error argument
11:25 < ashnur> Nexxy: yes, and what I've been told and what I think is that I should create the shortest route possible 
11:25 < SomeoneWeird> wat
11:25 <@Nexxy> probably just mkdirp it
11:25 < ashnur> :))
11:25 < ezekielnoob> will node.js be easier to implement than XMPP + PHP
11:26 < ashnur> that is good for practical solutions, not for an article :D
11:26 <@Nexxy> node.js is already implmeneted
11:26 < ezekielnoob> i've been having troubles developing with  xmpp and php
11:26 <@Nexxy> ashnur, yeah I mean... for an article...
11:26 <@Nexxy> I would probably stick with just fs.exists
11:26 < ashnur> damn. 
11:26 < ashnur> now you say the opposite medikoo said :(
11:26 < ashnur> I am in trouble
11:27 <@Nexxy> well it doesn't really matter that much
11:27 < ashnur> it matters to me :|
11:27 <@Nexxy> if all you're checking is whether something exists or not
11:28 <@Nexxy> use fs.exists
11:28 <@Nexxy> if you want to know more about it
11:28 <@Nexxy> use fs.stat
11:28 <@Nexxy> you could use fs.stat for both
11:28 < ezekielnoob> or can i use php socket functions with nodejs?
11:28 <@Nexxy> ezekielnoob, what's a php socket function?
11:28 < nachoelg> hello everybody
11:28 < ezekielnoob> uhm sending messages to sockets
11:28 <@Nexxy> what importance does PHP have to this question?
11:28 < ezekielnoob> cause i'm trying to add live notifications in my php system
11:29 < nachoelg> hi @isaacs
11:29 <@Nexxy> if they are just sockets, yes
11:29 < geNAZt> here are the two cases i tried to give you
11:29 < geNAZt> https://gist.github.com/4696927
11:29 < nachoelg> I am having some problems with testacular and I read something that you wrote in github
11:29 < nachoelg> could you help me with a npm package version issue?
11:29 < ezekielnoob> hmm
11:31 < nachoelg> please anyone could help me with a npm package version issue??? it is testacular
11:31 <@Nexxy> that doesn't give us much to go on
11:32 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:32 < ezekielnoob> what's your best tutorial to start?
11:32 < SomeoneWeird> nodebeginner.org
11:33 < ezekielnoob> oh ok, i'm on the right track
11:33 < ezekielnoob> will i have no problem if i practice on a windows environment and then implmenent it into our ubuntu server?
11:33 < nachoelg> how can i replace a npm module for another version package
11:33 < nachoelg> if it is a dependency of another package
11:33 < nachoelg> ??
11:34 < SomeoneWeird> huh
11:34 <@Nexxy> npm takes care of that for you
11:34 < SomeoneWeird> ezekielnoob, yep will work fine
11:34 < nachoelg> npm install package@version install it again
11:34 < geNAZt> yes on the version you give him
11:35 < nachoelg> I got glob package as a dependency of testacular
11:35 < nachoelg> but this glob is 3.1.17 and this one does not work with patterns properly
11:35 < nachoelg> I have to install glob 3.1.14
11:35 < geNAZt> then remove the current version of glob
11:36 < geNAZt> and npm install glob@3.1.14
11:36 < nachoelg> how can i remove this package if this is a dependency of another
11:36 < geNAZt> delete the folder
11:36 < geNAZt> of blog
11:36 < nachoelg> npm unistall glob does not do anything
11:36 < geNAZt> glob*
11:36 < nachoelg> ahhhhh ok
11:37 < nachoelg> so just delete it and the reinstall and it's gonna work even though is not a testacula's dependency anymore
11:37 < nachoelg> gonna try
11:40 < nachoelg> worked!!!!! thank you very much I guess I need to study node and npm a bit
11:40 < geNAZt> no problem :D
11:41 < ezekielnoob> uhm sorry to ask, you guys think i could develop something like a facebook notification system with nodejs?
11:41 < ezekielnoob> cause facebook uses jabber/xmpp
11:42 < SomeoneWeird> use socketio
11:48 < ezekielnoob> ok, i hope it won't be too hard, i've written socket programs before with vb.net/java
11:51 < jesusabdullah> now THAT^^^ sounds gnar
12:03 < decci> I have node.js and socket.io installed through npm install socket.io. How to get to know if they are running. I have a client machine trying to access this server but its not able to connect
12:04 < ezekielnoob> wow, node.js really is incredible >__< 
12:08 < decci> http://paste.ubuntu.com/1600788/
12:09 < decci> How I will get to know socket.io running on whcich port
12:09 < geNAZt> you havent started it yet
12:10 < geNAZt> you need to write a node programm that uses this lib and start a http server to bind socket.io into
12:17 < decci> geNAZt: I dint get you
12:18 < decci> geNAZt: Can you help me how to start it
12:18 < geNAZt> what you have done is you installed the library socket.io
12:18 < decci> geNAZt: I installed node.js too
12:18 < geNAZt> the library itself doesnt do anything
12:18 < geNAZt> so you need a nodejs program which includes this lib and binds it to something
12:18 < SomeoneWeird> decci, socket.io/#how-to-use
12:19 < geNAZt> http://socket.io/
12:19 < geNAZt> the first example is a good start
12:21 < decci> geNAZt: I can see SERVER (APP.JS)
12:21 < geNAZt> yes
12:21 < geNAZt> it start the socket.io thing and binds it to port 80
12:21 < SomeoneWeird> decci, do you know javascript?
12:21 < decci> SomeoneWeird: No
12:22 < SomeoneWeird> then that's your problem
12:22 < SomeoneWeird> learn javascript :)
12:23 < decci> SomeoneWeird: Cant I get steps
12:23 < SomeoneWeird> no
12:23 < SomeoneWeird> it's a library, not a program
12:23 < SomeoneWeird> you have to know how to program to use it
12:24 < decci> geNAZt: I think the javascript file need to be copied to my server first. node example_server.js  the ones included here: https://sites.google.com/site/jptarqu/downloads/socket-io-mod.zip?attredirects=0&d=1  Im going to try to copy them to my server 
12:24 < decci> geNAZt: But where do i need to copy those files
12:25 < decci> geNAZt: Can I just put them in the httdocs folder? 
12:25 < geNAZt> what ?
12:26 < geNAZt> socket.io is server side javascript
12:26 < geNAZt> that runs on the server, nothing to do with the client in first attempt
12:26 < geNAZt> it has a client that gets send to the client
12:26 < geNAZt> but via the socket.io server
12:26 < geNAZt> nothing else
12:27 < decci> geNAZt: So I dont need those files
12:27 < decci> geNAZt: to be copied to server
12:27 < geNAZt> no
12:27 < geNAZt> socket.io serves their own client javascripts
12:27 < SomeoneWeird> decci, what do you think socketio is?
12:28 < decci> geNAZt: Should I copy or not?
12:28 < SomeoneWeird> no
12:29 < geNAZt> i think you get the whole nodejs / socket.io things wrong
12:29 < decci> geNAZt: Why?
12:30 < geNAZt> why would you like to provide the client access to the socket.io library ?
12:32 < decci> I have construct2 installed, and also have the socket.io plug in installed.  However, I cant get the game working.  http://www.scirra.com/forum/topic49587.html
12:33 < decci> How to ensure node.js is running
12:33 < decci>  the errors when running the js file  from Putty in the shell I get  cant find module socket.io 
12:33 < geNAZt> nodejs is NOT a programm
12:34 < geNAZt> yes then go into the root of the folder where the js file is
12:34 < geNAZt> and type npm install
12:35 < valterguy> `ps aux | grep node` would show if the process is running
12:41 < decci> geNAZt: I have put it under /root
12:41 < decci> geNAZt: Now I have example js file
12:41 < decci> geNAZt: Do I need to run node example.js or npm instal
12:41 < valterguy> decci: to install dependencies according to package.json, `npm install`
12:42 < valterguy> decci: to launch your code, `node example.js`
12:42 < decci> valterguy: I ran node example.js and it says module not found
12:43 < valterguy> which module?
12:43 < valterguy> decci: which module does it not find?
12:46 < decci> valterguy: wait 1 sec
12:46 < decci> valterguy: I will paste it
12:48 < decci> valterguy: http://paste.ubuntu.com/1600876/
12:48 < decci> valterguy: Cannot find module '/var/www/vhosts/domain.com/example_server.js'
12:49 < decci> valterguy: Do I need to place it under that path
12:49 < valterguy> you are in /var/www/vhosts/domain.com/
12:49 < valterguy> trying to launch example_server.js
12:49 < valterguy> and it can't find that file.
12:50 < decci> valterguy: No I am at /root
12:50 < valterguy> try `node /root/example.js`
12:50 < decci> valterguy: I will try running it from the location
12:51 < decci> valterguy: It says Socket.io started
12:51 < decci> valterguy: What port number?
12:51 < decci>  valterguy how to know
12:51 < valterguy> decci: what do you get from `pwd`?
12:52 < valterguy> decci: I'm trying to see why it required some file in another directory
13:04 < valterguy> decci: also, about the port, depends on your code. I suppose that the example you followed used 80 for regular HTTP.
13:12 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:56 < cloudbender> good morning
13:57 < valterguy> hi cloudbender 
13:57 < cloudbender> valterguy
14:04 < geNAZt> does someone a module that polls a server every second and checks if it is alive ?
14:04 < geNAZt> i like to write my owm asset manager with external servers, and for the random thing i need to know which servers are up
14:09 < asturel> is it possible to make 'online user count' by redis session thing?
14:09 < Octagonking> I've made this textual IRC client in Node.js. I'd like to be able to give it a graphical look or atleast let the script communicate with a graphical project that is made in Visual Basic or something similar.
14:10 < Robert00001> use CSS
14:10 < Octagonking> Robert00001: I'm using Node.JS, by the way. If you do know that, do you need a special implementation of CSS or just standard CSS
14:11 < SomeoneWeird> huh?
14:11 < geNAZt> nodejs has nothing todo with css
14:11 < geNAZt> since nodejs only has the console
14:11  * valterguy believes Robert00001 suggested to serve HTML...
14:12 < valterguy> that would be the only explanation I can think of.
14:12 < Robert00001> Hmmm
14:12 < Octagonking> Robert00001: I think Node.JS doesn't support CSS
14:12 <@Nexxy> Node.js is quite supportive of CSS
14:12 < Robert00001> One min...
14:13 <@Nexxy> it's all like, "You're going great, CSS... hang in there."
14:13 <@Nexxy> going/doing
14:13 < SomeoneWeird> lmao
14:13 < Octagonking> At the least, I'd like to be able to change the colour of text. At the most, I'd have a fully-fledged application with awesome performance and great graphics.
14:13 < Octagonking> I'd recommend somewhere in the middle.
14:13 <@Nexxy> Octagonking, check out appjs
14:13 < Octagonking> ooh
14:13 < Octagonking> appjs
14:13 < Robert00001> the ansi package is useful
14:14 < Octagonking> I'll try an ANSI package for Node.js
14:14 < Octagonking> where can I download the package, and how do I send ANSI escape codes
14:14 < Robert00001> npm install ansi
14:14 < Octagonking> OK
14:15 < Octagonking> Node Package Manager is installing the ANSI package.
14:15 <@Nexxy> and CSS is all like, "Hey Node.js... thanks for your support. I really appreciate it."
14:15 < Octagonking> NPM has finished the installation
14:15 < Robert00001> and read the README.md afterwards
14:15 < asturel> anyone?:D
14:15 < valterguy> asturel: ask away.
14:15 < asturel> ?
14:15 < Octagonking> How do I use this ANSI package
14:15  * valterguy notices you already asked
14:15  * valterguy feels bad
14:15 < valterguy> asturel: sorry, don't know.
14:16 < asturel> i have sessions in redis, is it possible to read the 'keys' and the ttl and makes online users count by this?
14:16 < cloudbender> ok I really need to bite the bullet and get busy with npm
14:16 < asturel> i mean now the nodejs uses redis to store sesisons
14:16 < Robert00001> http://pastebin.com/FvvmDS5w
14:16 < Robert00001> that's the README
14:17 < Robert00001> shows you how to use it
14:17 < asturel> but e.g. connect-redis doesnt rly gives ability to use redis functions
14:17 < asturel> or didnt mention it: https://npmjs.org/package/connect-redis
14:17 < Octagonking> thanks, Robert00001.
14:17 < OliverJAsh> in anyone is experienced in mocha, i would really appreciate some help: http://stackoverflow.com/questions/14662699/testing-a-multitude-of-data-asynchronously-in-mocha
14:18 < cloudbender> When I am constipated, I listen to country music, or I write css blocks.
14:18 < cloudbender> I know, TMI, sorry
14:18 <@Nexxy> well that's a little TMI
14:18 <@Nexxy> lol
14:18 < cloudbender> lol
14:18 < SomeoneWeird> --_-
14:18 < purr> SomeoneWeird: ಠ_ಠ is an IRC client/IRC client framework.
14:19 < SomeoneWeird> wat
14:19 < valterguy> asturel: I have been using https://npmjs.org/package/redis without any issues, but I just started using it so I might be overlooking something...
14:19 < Robert00001> - is a prefix for a command
14:19 < valterguy> asturel: so, are you trying to get the total count of keys in the database?
14:21 < asturel> valterguy yeah, but found it
14:22 < asturel> 	redis.keys("*", function (err, replies) {
14:22 < valterguy> asturel: DBSIZE would be a more appropriate command imho
14:22 < asturel> yeah but i want to limit by ttl
14:22 < asturel> or .ttl(minttl) works?
14:23 < valterguy> asturel: but shouldn't the key get deleted after it expires?
14:25 < asturel> it should
14:26 < emkei> Hello, Anyone can suggest some best practices on uploading files with express.js ??
14:27 < asturel> but it experies after 1 day
14:28 < valterguy> asturel: doesn't really matter. after that day, it should be removed and the key count would therefore change.
14:28 < valterguy> asturel: I don't see a downside for using DBSIZE
14:29 < asturel> it gives inaccurate online users count :D
14:30 < valterguy> asturel: what causes it to be inaccurate?
14:30 < asturel> coz its expires in a day?
14:30 < asturel> :D
14:30 < valterguy> then set the ttl lower
14:30 < asturel> so if the user leaves the site after 1 min it still be show as online
14:31 < asturel> yeah but i use session to keep logged in the users
14:31 < asturel> so 15m would be painful
14:31 < valterguy> asturel: you can reset the ttl to 5 mins on each page load
14:31 < Octagonking> I'm using the ANSI library, but already have problems.
14:32 < valterguy> asturel: maybe someone else knows better here. maybe #redis might be to more help.
14:32  * valterguy hasn't really used it a lot
14:32 < asturel> me neither
14:33 < Octagonking> It's probably incompatibility with STDIN, but I want the first data chunk sent to be green, to distinguish from other STDIN.
14:34 < valterguy> Octagonking: if you installed the 'ansi' package, you can read their readme here: https://npmjs.org/package/ansi#readme 
14:41 < Octagonking> if I set ansi foreground colour rgb 0,255,0, the result is that the background colour is changed
14:42 < Octagonking> why is that
14:45 < valterguy> Octagonking: what is your code?
14:46 < Octagonking> well, first it defines the variable ansi as require("ansi")
14:46 < Octagonking> then cursor as ansi(process.stdout)
14:46 < Octagonking> then process stdin resume
14:46 < Octagonking> then cursor.fg.rgb(0,255,0)
14:46 < valterguy> Octagonking: try cursor.rgb(0, 255, 0)
14:47 < Octagonking> then stdin setencoding utf8
14:48 < Octagonking> valterguy: in both variations of the command, the background turns aqua and the foreground is unchanged. I am comparing this to the standard colours of a Win32 prompt.
14:49  * valterguy installs ansi to test it
14:49 < Octagonking> it's something to do with stdin for sure
14:49 <@Nexxy> it works for me!
14:49 < Octagonking> it's only 5 lines of code, so it won't spam the chatroom
14:49 < SomeoneWeird> pastie.org
14:50 < Octagonking> var ansi = require("ansi"); var cursor = ansi(process.stdout); process.stdin.resume(); cursor.rgb(0, 255, 0); process.stdin.setEncoding('utf8');
14:50 < nanashiRei> does nodejs somehow prevent reading modules from "/node_modules" (root path tree)
14:50 < Octagonking> (of course, try it multiline, I just compressed it so it doesn't really need pastie
14:50 < SomeoneWeird> nanashiRei, no
14:50 < nanashiRei> it's giving me module not found for whatever i try..
14:50 < nanashiRei> it's a chroot environment
14:50 < Octagonking> nanashiRei: you need to do npm install ansi before you run the code
14:51 < nanashiRei> not talking about tour stuff, man..
14:51 < Octagonking> nanashiRei: watch out for require() - that defines the package requirement
14:51 < valterguy> Octagonking: that code works fine for me. sets the color to green and everything.
14:52 < Octagonking> I will try it in REPL
14:53 < Octagonking> REPL gives the same result: aqua background & no foreground change
14:53 < Octagonking> does ANSI require another library or something
14:53 < nanashiRei> Wait, what? There is RGB colors for console?
14:53 < nanashiRei> Will it actually have more then 16 colors?
14:54 < Octagonking> nanashiRei: it's 256-colour...
14:54 < nanashiRei> Octagonking: that sounds an aweful lot like you are trying it on windows
14:54 < nanashiRei> which does NOT support ansi colors.
14:54 < nanashiRei> 100% sure.
14:54 < SomeoneWeird> lol windows
14:54 < SomeoneWeird> goodluck
14:54 < valterguy> nanashiRei: not sure about how Windows reacts, but console colors are wonderful.
14:55 < nanashiRei> SomeoneWeird: yeah. Want a copy? i'll share free :D
14:55 < nanashiRei> I
14:55 < Octagonking> Windows is a piece of [swear]
14:55 < nanashiRei> will write a rainbow test :D
14:55 < valterguy> nanashiRei: http://en.wikipedia.org/wiki/ANSI_escape_code#Colors 
14:55 < SomeoneWeird> Octagonking, so why are you using it?
14:55 < Robert00001> Too bad most of the population of the world has it
14:55 < Octagonking> SomeoneWeird: because I don't have enough money to buy Mac
14:55 < valterguy> Windows XP command prompt is in that color list, so I suppose they support it...
14:55 < nanashiRei> Robert00001: i do too... sadly
14:56 < nanashiRei> but it has money reasons :x
14:56 < Octagonking> I use Windows 7
14:56 < SomeoneWeird> so install ubuntu
14:56 < SomeoneWeird> orr debian
14:56 < SomeoneWeird> or arch
14:56 < SomeoneWeird> or something that costs exactly $0
14:56 < Robert00001> I'm on Vista
14:56 < valterguy> or build your linux distro from scratch
14:56 < nanashiRei> Work requires LDAP and they use Windows Accounts with strick bla bla i have no idea, i failed to get it working with ubuntu or anything for that matter
14:56 < Octagonking> I can't install another OS just to make this work
14:56 < nanashiRei> so :/
14:56 < SomeoneWeird> you should 
14:56 < SomeoneWeird> even you said windows sucks
14:56 < Robert00001> at least 5 years old
14:56 < valterguy> Octagonking: var ansi = require('ansi'), cursor = ansi(process.stdout); cursor.rgb(0, 255, 0); console.log('hello'); cursor.reset();
14:56 < nanashiRei> currently, kinda enjoying, windows 8
14:56 < Octagonking> I want an alternative that works on Windows
14:57 < nanashiRei> it's better then i thought. really..
14:57 < valterguy> Octagonking: if that does not work for you, then something seems broken.
14:57 < cloudbender> so, one can use promises to assure all callbacks are satisfied before node terminates ? ! ?
14:58 < SomeoneWeird> ?
14:58 < SomeoneWeird> depends how it's terminated
14:58 < Octagonking> valterguy: it doesn't work, same aqua background
14:58 < nanashiRei> just resume the stdin stream
14:58 < nanashiRei> that'll effectively prevent node from exiting
14:58 < nanashiRei> afaik
14:58 < cloudbender> just normal flow through to end of script
14:58 < valterguy> nanashiRei: if you kill it, then it won't be prevented from exiting.
14:58 < cloudbender> (node, outside the browser )
14:58 < nanashiRei> pfff
14:59 < valterguy> nanashiRei: well, it wouldn't really exit the regular way, it would just stop...
14:59 < nanashiRei> proc.on(
14:59 < nanashiRei> 'sig...'
14:59 < nanashiRei> it then
14:59 < nanashiRei> process*
14:59 < Octagonking> Again, I'd like a way to turn the command UI of my script into a GUI.
14:59 < nanashiRei> ncurses
14:59 < nanashiRei> try that
14:59 < nanashiRei> it provides "widgets"
14:59 < nanashiRei> like tabs, buttons windows
14:59 < Octagonking> what is ncurses
15:00 < nanashiRei> for the console
15:00 < SomeoneWeird> just spin up a web ui for it
15:00 < Octagonking> npm install ncurses
15:00 < nanashiRei> however, i think it's best for unix
15:00 < SomeoneWeird> i doubt ncurses will work on windows
15:00 < valterguy> Octagonking: browser based GUI!
15:00 < cloudbender> It will in a termianl screen
15:00 < cloudbender> terminal even
15:00 < nanashiRei> what SomeoneWeird and valterguy said.
15:00 < valterguy> cloudbender: what if it's a cmd?
15:00 < nanashiRei> web gui :D
15:00 < Robert00001> valterguy: I though of that
15:01 < nanashiRei> if you need realtime data, socket.io
15:01 < Octagonking> valterguy: how do I put Node.JS on the web
15:01 < nanashiRei> any complaints? :P
15:01  * nanashiRei laughts
15:01 < cloudbender> are you speaking of a cmd(command shell) or a cmd (powershell cmdlet)
15:01 < valterguy> Octagonking: indeed. socket.io will be best for transferring data to the client and HTTP server needs to be set up to serve the main page.
15:01 < valterguy> cloudbender: command shell.
15:02 < cloudbender> the windows command shell is a dos shell
15:02 < AlphaPinky> yes
15:02 < valterguy> Octagonking: I can start by pointing you in the direction of http://socket.io/ if you are interested in socket.io 
15:02 < cloudbender> there are terminal emulators, and there may still be a term program with windows, not sure
15:03 < valterguy> cloudbender: oh well, not using Windows regularly so not really sure.
15:03 < cloudbender> it's been awhile since I 'termed'
15:03 < nanashiRei> cloudbender: there is bash.exe for windows
15:03 < valterguy> nanashiRei: that sounds wrong. 'bash.exe'
15:03 < sohcahtoa> you can use putty
15:03 < sohcahtoa> :D
15:03 < nanashiRei> and wrappers for better shell windows
15:03 < nanashiRei> valterguy: sure.
15:03 < nanashiRei> but it
15:03 < nanashiRei> exists and works better then cmd.exe
15:03 < valterguy> sohcahtoa: but that still depends on you having a linux system...
15:04 < sohcahtoa> yeah I know hence the ":D"
15:04 < nanashiRei> valterguy: quite wrong
15:04 < nanashiRei> he can use telnet, which ships with windows
15:04 < cloudbender> yes putty might work, and I think putty has an ssh layer also
15:04 < nanashiRei> putty can do otehr things then ssh, you know :D
15:04 < valterguy> nanashiRei: telnet broken and stuff, iirc.
15:05 < valterguy> ssh ftw.
15:05 < nanashiRei> bla bla :D
15:05 < nanashiRei> Just stop using windows for testing/staging
15:05 < nanashiRei> it'll solve 90% of all issues
15:05 < valterguy> that is better than using it for production imho.
15:05 < valterguy> :)
15:06 < cloudbender> 99% of my clients have windows on thier PC
15:06 < valterguy> cloudbender: developers?
15:07 < valterguy> also, this discussion reminded me of http://www.brankovukelic.com/2013/01/on-state-of-windows-on-desktop.html
15:07 < cloudbender> developers don't pay money to IT people.  They are cheap bastards.
15:07 < valterguy> I know it's somewhat old, but some might not have seen it
15:07 < cloudbender> <<< is a cheap bastard
15:07 < valterguy> cloudbender: what IT people do you refer to?
15:08 < nanashiRei> I don
15:08 < nanashiRei> asfpdf
15:08 < nanashiRei> damn this new notebook keyboard
15:08 < Octagonking> again, I want to be able to create a GUI for my Node.JS application without having to recode it
15:08 < cloudbender> valterguy you are missing my point: if you are going to market the cloud to customers for money you have to dance with windows.
15:08 < nanashiRei> I don't pay money for shit you say?
15:08 < nanashiRei> I spend like 2000 EUR on software the last year.
15:09 < valterguy> cloudbender: oh. yeah, I agree.
15:09 < nanashiRei> They are developers too, right? .. damnit don't assume we are filesharers :(
15:10 < valterguy> Octagonking: you don't need to recode it all. you just need to serve the user the HTML page for GUI and send out appropriate events
15:10 < valterguy> Octagonking: sure, you need to add changes, but you will need to do that to make any kind of GUI
15:11 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:17 < cloudbender> If there is a callback on the stack, will node wait before flowing out of the script and terminating ?
15:17 < nanashiRei> http://puu.sh/1WkN4
15:17 < nanashiRei> works quite nicely that ansi thing
15:17 < robertj> does node support direct proxies?
15:20 < Octagonking> Socket.IO isn't what I am looking for
15:20 < clone1018> So I have a mustacheish question, on: https://github.com/zetaweb/aspen.js/blob/add_renders/aspen/simplates/autoindex.html#L21 files doesn't return anything, typeof files is string, derp returns herp like it, does anyone have any ideas (background about this, file split by ^L, top is ran once, middle ran every request, bottom is rendered)
15:21 < valterguy> Octagonking: what do you need then?
15:21 < Octagonking> I want a way to create a GUI for my app, and Socket.IO is the way to create a server for multiple clients to communicate with.
15:22 < valterguy> Octagonking: socket.io can provide you data transfer between the GUI (client) and the server (terminal, which is connected with the IRC server)
15:22 < Octagonking> valterguy: but then only one client can be open at any time
15:24 < Octagonking> valterguy: I don't want to use Socket.IO.
15:25 < Octagonking> !xy [ oh I just want to have a look ]
15:25 < Octagonking> oops
15:26 < valterguy> Octagonking: you need to decide what UI you want to present exactly. that is your decision because you are building that project.
15:26  * valterguy does not know what fits best
15:28 < Octagonking> valterguy: I want a basic UI like most binary or MSI applications for Windows out there. For example, a textbox for the input, a disabled multiline textbox for the output, etc.
15:28 < Octagonking> valterguy: Sort of like the controls you can use in Visual Basic to create a GUI.
15:29 < valterguy> Octagonking: I see. Sorry, I don't know any way to build a standalone GUI with Node.js for Windows...
15:29 < shesek> Octagonking, any specific reason not to use HTML for your UI?
15:30 < Octagonking> valterguy: A possibility would be finding out how to link Node.JS -> Visual Basic
15:30 < valterguy> Octagonking: feel free to do it. ;)
15:30 < shesek> "link Node.JS -> Visual Basic"? oO
15:30 < Octagonking> shesek: because using Socket.IO means that only one client could run at any time
15:30 < valterguy> Octagonking: you can have multiple clients connected...
15:30 < shesek> why does it mean that?
15:31 < shesek> Octagonking, if you want a desktop client that doesn't rely on a server, you can try node-webkit
15:31 < valterguy> Octagonking: or do you want one client connected? you could limit connections if you want to...
15:31 < Octagonking> valterguy: if you have two clients, they'll recieve and send the same data, because it's the Node.js terminal that defines the connections
15:31 < cloudbender> wow that is so cool: callbacks
15:31 < shesek> what? why?
15:31 < Octagonking> valterguy: I don't want one client connected
15:31 < Octagonking> shesek: ...]
15:31 < valterguy> I think I'm just not understanding the goal here.
15:32 < Octagonking> I saw node-webkit somewhere.
15:32 < shesek> what you're saying doesn't make sense. websocket can, and does, handle multiple clients well
15:32 < Octagonking> As webkit isused for Chrome and Safari
15:32 < valterguy> node-webkit looks awesome!
15:32 < shesek> valterguy, it is
15:33 < crabtree> appjs looks cool too
15:33  * valterguy thanks shesek for showing that
15:33 < crabtree> check out both and decide which you think is better :P
15:33 < Octagonking> shesek: yes, but the server (the terminal) is the client connecting to the IRC server, so the GUI clients will be the same person
15:33 < shesek> check out https://speakerdeck.com/zcbenz/node-webkit-app-runtime-based-on-chromium-and-node-dot-js for some more info
15:33  * valterguy is finding all of this cool stuff
15:33 < crabtree> i thought the examples for node-webkit looked pretty ehh
15:33 < valterguy> shesek: I'm looking at their project page on github
15:33 < crabtree> using document.write and stuff
15:33 < crabtree> a little offputting 
15:34 < crabtree> i guess
15:34 < shesek> crabtree, well, it is just an example
15:34 < crabtree> yeah but still i mean you shouldn't ever use it
15:34 < shesek> they probably wanted to keep it short and simple
15:34 < cloudbender> is there a way to reference the first parameter passed into to a function ?
15:34 < cloudbender> sorry js question
15:34 < shesek> cloudbender, arguments[0], or just give that argument a name?
15:34 < crabtree> appjs looked a little more professional :P
15:35 < shesek> appjs provides some abstractions too, node-webkit just packages up your stuff and lives it up to you
15:36 < shesek> ugh, s/lives/leaves
15:36 < shesek> that's an horrible typo
15:36  * shesek facepalms
15:38 < valterguy> shesek: don't worry. everyone has had worse.
15:38  * valterguy should be working on a project he's in instead of procrastinating
15:40 < zeromodulus> Does anyone encounter problems while trying to use the REPL on OSX?
15:45 < JasonSmith> Hi, all. Is node-inspector still the best way to debug in the browser?
16:01 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:10 < jtomasrl> I have an instance method that runs every X seconds but the instance attributes are being created on every run, how can i stop this?
16:11 < geNAZt> jtomasrl: have you a source example for this ?
16:13 < jtomasrl> geNAZt: https://gist.github.com/4698024
16:14 < geNAZt> yes ofc it does as you say it so
16:14 < jtomasrl> why
16:15 < geNAZt> because line 39 tells him to
16:15 < jtomasrl> it shousd be without Monitor.prototype right?
16:15 < jtomasrl> so how can it be called one time?
16:15 < geNAZt> this._functions = this._createFunctions; => this._functions = this._createFunctions();
16:15 < geNAZt> maybe ?
16:16 < geNAZt> yes that should make it
16:16 < timeturner> is there a way to compile coffeescript down to js without all the extra function wrapper and misc junk
16:16 < cloudbender> mein got ... ser ist kludge gewerxen mit das javascripten ...
16:16 < timeturner>  I found a node module that does exactly what I want but it's written in coffee :/
16:17 < cloudbender> und noden boxen
16:17 < Robert00001> I like coffee
16:17 < jtomasrl> looks legit
16:17 < aandy> timeturner: so?
16:18 < cloudbender> schmeck ein de voter ... (fuer in der himmel)
16:19 < jtomasrl> geNAZt: thanks
16:19 < geNAZt> np
16:30 < geNAZt> http://www.ietf.org/rfc/rfc2324.txt 2.3.2 :D
16:30 < geNAZt> HTTP Status Code: 418 I'm a teapot
16:31 < malditogeek> hi guys, is it possible to declare a dependency in my package.json pointing to a local directory?
16:31 < aandy> useful when you get a lot of GET /coffee's
16:32 < emkei> Is it safe to use formidable generated filenames for uploaded files?
16:32 < aandy> emkei: in terms of unique?
16:32 < emkei> the uploaded file with formidable is something like /tmp/19d83ef33e0254eef7f8da66ba735742.jpg
16:33 < valterguy> geNAZt: yeah. that has been my PART message for some time now. :)
16:33 < emkei> it seems that the file is some kind of hash
16:33 < aandy> it's always alphanumeric if that's what you're asking
16:33 < emkei> aandy: is there a possibility of repeating file names?
16:34 < aandy> not sure
16:34 < Octagonking> How to get the nth property of an object (e.g. {a: 1, b: 2, c: 3} and the 3rd property of that is 3)
16:35 < aandy> it does make a hash of the file, but if it's used for the tmp name aswel, i dunno
16:35 < aandy> source is here https://github.com/felixge/node-formidable (lib/file.js)
16:35 < topaxi> Octagonking: foo[Object.keys(foo)[2]]
16:35 < topaxi> ?
16:36 < topaxi> or loop and count yourself using for in
16:36 < emkei> aandy: already looked into it... this is why I have this stupid question
16:36 < emkei> :D
16:36 < geNAZt> >> foo = {a: 1, b: 2, c: 3}; foo[Object.keys(foo)[2]]
16:36 < purr> geNAZt: (number) 3
16:38 < ezekielnoob> is there a stable mysql extension for nodejs?
16:39 < aandy> emkei: it's random, but not uuid
16:39 < aandy> https://github.com/felixge/node-formidable/blob/master/lib/incoming_form.js#L484
16:39 < aandy> i mean.. it's 32byte, so.. 
16:53 < hhuuggoo_> what solution do you guys use to use require in the browser?  do you use require.js? or browserify? or hem?
16:56 < medikoo> hhuuggoo_: https://github.com/medikoo/modules-webmake
16:58 < fwg> hhuuggoo_: browserify mostly, requirejs if dynamic code loading is needed
16:58 < medikoo> hhuuggoo_: require.js has nothing to do with 'require' in commonjs modules sense, it's name is very misleading, browserify is good if you like to have some node's native functionalities available in browser
16:59 < fwg> medikoo: why? AMD is also a commonjs 'standard', is it not?
16:59 < SomeoneWeird> amd sucks
16:59 < hhuuggoo_> webmake and browserify are build/compile steps right?  does that require debugging a monolithic js file in the browser?
16:59 < fwg> SomeoneWeird: why?
17:00 < fwg> hhuuggoo_: yes
17:00 < medikoo> fwg: not exactly, amd is very different from what you have in node, both systems are totally not compatible.. and as SomeoneWeird said: AMD sucks, stay way, it'll be dead in few years :)
17:00 < fwg> medikoo: node !== commonjs
17:00 < fwg> soo... WHY does AMD suck again?
17:01 < medikoo> fwg: we're talking about modules systems, node.js took commonJS spec, changed it a bit, and that's what you use
17:02 < medikoo> fwg: waterfall style loading is very inefficient. not acceptable for production, slower than bundle on request on dev, adding to that it's more complicated and more limited than NodeJS modules style
17:03 < medikoo> fwg: the only so called "advantage" is that, you can use AMD directly in browser, Node.js style modules needs to be bundled with some guy (if any exists) or console command, for some people it's too scary to call one command in console ;-)
17:04 < medikoo> I meant "some gui" ;)
17:04 < fwg> medikoo: bundling is a builtin feature of requirejs, so the only real disadvantage is the limitations, with which you mean .. what exactly?
17:04 < fwg> I assume dynamic requires?
17:05 < medikoo> fwg: boilerplate (function wrapper over each module), need of config file to link dependencies, and general complexity that require.js codebase shows
17:05 < hhuuggoo_> fwg, isn't debugging a huge js file kind of impractical?  as your code base grows, your debugging experience gets more and more difficult
17:05 < medikoo> fwg: http://www.slideshare.net/medikoo/javascript-modules-done-right ;-)
17:07 < medikoo> fwg: see how much of not application related code you take with require.js and compare it with code that's added to your application by Webmake to run CJS style modules
17:08 < fwg> hhuuggoo_: well not really. you're jumping through function calls and breakpoints anyway
17:09 < fwg> medikoo: ok the config file and the huge payload upfront are some annoyances
17:09 < fwg> real annoyances I mean
17:09 < medikoo> hhuuggoo_: you have also source maps: https://github.com/medikoo/modules-webmake#sourcemap-boolean so you debug each module as individual file
17:10 < hhuuggoo_> I'm running chrome on linux, and in production we have combined but not compressed js, and it takes a few seconds to render the source in developer tools
17:10 < hhuuggoo_> it's 50k loc
17:10 < pyykkis> I'm totally happy with require.js
17:11 < medikoo> fwg: other point is to use same style in browser and on server, so you can easily run modules in both environments, amd is no go
17:11 < pyykkis> medikoo: that's really not a problem
17:11 < hhuuggoo_> medikoo, thanks, that's nice, that may work for me
17:12 < pyykkis> medikoo: https://github.com/leonidas/transparency/blob/literate-programming/src/transparency.coffee#L450
17:13 < medikoo> pyykkis: for me it's unacceptable to put boilerplate in core codebase to achieve that, and technically I don't see a single advantage of amd over cjs, just drawbacks
17:13 < pyykkis> here you go, amd/browser global/node.js -compatible module with one if-else.
17:15 < medikoo> pyykkis: but why the hassle, if CJS works great in a browser? you're trying to give me a solution for problem that I don't have :)
17:16 < medikoo> pyykkis: See how clean application can be when written CJS style: https://github.com/medikoo/soundcloud-playlist-manager (it's strictly browser app)
17:18 < pyykkis> medikoo: cool, i take look. How does it work? By concatenating files on server side?
17:19 < pyykkis> in the meanwhile, here's amd-style app for the comparison: :) https://github.com/addyosmani/todomvc/pull/419
17:19 < medikoo> pyykkis: yes bundle is created, you may do it on every request (if developing), it's very fast, hundreds of modules are packed in fraction of second
17:20 < medikoo> pyykkis: cool :)
17:20 < Octagonking> I've decided to use the IRC library's RAW event, the problem is, how can I get which nickname sent the raw message
17:21 < pyykkis> medikoo: hmm..you mentioned source maps earlier. Can you files separately on the client side, or are they just one big chunk?
17:22 < hhuuggoo_> pyykkis, I'm interested in this too, for me debugging a combined js file is infeasible, but it seems like it's common practice?
17:22 < medikoo> pyykkis: with source maps you see each module as separate file (as it's on disk) in debugger
17:23 < pyykkis> medikoo: cool, that's nice!
17:24 < Octagonking> I'm updating my IRC client in Node.js. It now uses RAW to get messages and works fine. However, it doesn't display the user who sent the data.
17:25 < pyykkis> medikoo: that was pretty much my only concern. In most js apps, loading one big js file is more than enough performance-wise. I haven't ever used any fancier loading scheme with requirejs
17:25 < Octagonking> Are you here
17:26 < Octagonking> I'm updating my IRC client in Node.js. It now uses RAW to get messages and works fine. However, it doesn't display the user who sent the data. How can I get who sent the data across the server using the RAW event
17:27 < fwg> Octagonking: I suppose RAW means you have to parse out the sending entity yourselfg
17:27 < fwg> Octagonking: which IRC library are you using?
17:28 < Octagonking> fwg: I'm using the library called irc
17:28 < Octagonking> fwg: I don't have to parse anything else
17:28 < fwg> wat. you mean the npm package?
17:28 < Octagonking> yes
17:28 < Octagonking> npm package
17:28 < medikoo> pyykkis: I'm actually fine with debugging one big file (you still clearly see modules splits and have some whitespace formatting).. but I understand that it's ok only if you know each module well.. if you use a lot of code you're not that familiar with, it's indeed definitely better to see it as separate files
17:28 < medikoo> *same space formatting
17:30 < fwg> It would actually be super awesome if the dev tools supported code folding
17:30 < fwg> Octagonking: the nick is the first element of the message.args array
17:31 < pyykkis> medikoo: hm..what's the difference between webmake and browserify?
17:31 < Octagonking> fwg: ok
17:33 < pyykkis> or motivation for webmake?
17:33 < medikoo> pykkis: Browserify is more on top of Node.js, it makes possible to run Node's native functionalities in browser, while Webmake is nodejs modules style for JavaScript, it doesn't try to port any node specific stuff for browser (it's not his task), it's more low-level approach
17:33 < pyykkis> cool, sounds interesting
17:34 < medikoo> pyykkis: I explained my motivation quite well here: http://www.slideshare.net/medikoo/javascript-modules-done-right (it's from november 2011)
17:35 < medikoo> pyykkis: I missed bundler that focused just on that, and did that well, there was none at the time. There are many now, but I'm still not convinced or sure about quality of others
17:35 < Octagonking> fwg: Not the reciptent, but the sender
17:35 < Octagonking> fwg: The first argument is the reciptent
17:36 < Deathspike> Heyya, I'm trying to download an image from an address and store it into a mongodb database. I use mikaels request but the binary stored to mongodb is corrupted. Using fs.readFile buffer and storage does work. What can be wrong?
17:39 < Octagonking> fwg: it's the channel name if it's a channel msg, what is the nickname that sends themessage
17:40 < fwg> Octagonking: message.nick ?
17:40 < Octagonking> fwg: message.nick does not exist
17:40 < Octagonking> fwg: and I know it
17:45 < pbgodwin> Anyone here have experience using node.js on Windows Azure?
17:54 < clone1018> How can you get the current browser URL using NodeJS?
17:55 < Havvy> clone1018: It's probably on something called a 'request' object.
17:56 < Octagonking> I'm still developing my IRC client, but when a channel message is sent, it says the sender is the channel itself. How do I fetch the actual user which sent the message
17:57 < hhuuggoo_> medikoo, we have some FF developers on our team, would it be a terrible idea to modify webmake to generate individual js files?  I think it could be done by storing the module definitions in  a global window._modules and modifying require to read from there?
17:57 < Havvy> Octagonking: You can see what I did in https://github.com/havvy/nrc
17:57 < hhuuggoo_> medikoo my question is motivated by FF not having good source map support
17:58 < Havvy> The part you care about is in lib/structures/message.js
17:58 < Havvy> In the big switch
18:00 < medikoo> hhuuggoo_: technically it's not that possible as modules are loaded synchronously.. and even if, idea would be very bad :) .. anyway maybe FF improved (it gets improved every day).. and maybe it's working right now, I didn't check status of this in last months
18:02 < Octagonking> Havvy: ok
18:02 < medikoo> hhuuggoo_: but generally (and unfortunately) Chrome dev tools works way better than in FF, so not just cause of source maps support it might be good to convince some developers to switch to Chrome
18:04 < Octagonking> Havvy: uh - I don't understand it
18:06 < Havvy> Octagonking: Lines 22 to 31. The message comes in as plain text. The same text you'd see from Telnet
18:07 < Octagonking> Havvy: huh
18:07 < Havvy> :sender ACTIONTYPE arg1 arg2 :multi work arg
18:08 < Octagonking> Havvy: I want to use the irc package, not the nrc one
18:08 < Havvy> Ah, you aren't dealing with raw messages?
18:08 < Octagonking> I am
18:08 < Octagonking> I am dealing with raw messages
18:09 < Havvy> You have a string that looks like the format I mentioned earlier (:sender ACTIONTYPE arg1 arg2 :multi work arg)
18:09 < Octagonking> but I need to know the user who sent the message - but if it's a channel message, the args[0] says the channel name
18:11 < Havvy> If you have an array of args, you don't have the raw message. ;) What are you using that gives you the array of args?
18:12 < Octagonking> Havvy: I'm using the IRC package, not the NRC package, and I'm using client.addListener("raw",[function])
18:13 < Havvy> What does a console.log(util.inspect(arguments)) inside the callback give?
18:14 < geNAZt> Havvy: all arguments that are given to a callback
18:14 < Octagonking> ReferenceError: util is not defined
18:14 < Havvy> Octagonking: var util = require('util')
18:16 < geNAZt> >> var util = require('util'); function f() { console.log(util.inspect(arguments)); };f(1,23,45,564,789,456,97,456,4,464);
18:16 < purr> geNAZt: ReferenceError: require is not defined
18:16 < geNAZt> >> function f() { console.log(arguments); };f(1,23,45,564,789,456,97,456,4,464);
18:16 < purr> geNAZt: undefined; Console: {0: 1, 1: 23, 2: 45, 3: 564, 4: 789, 5: 456, 6: 97, 7: 456, 8: 4, 9: 464, callee: (function) f, length: 10}
18:16 < geNAZt> same effect
18:16 < Octagonking> geNAZt: that's js, not nodeJS
18:17 < geNAZt> without any libs ?
18:17 < geNAZt> >> window
18:17 < purr> geNAZt: ReferenceError: window is not defined
18:17 < Octagonking> Havvy: well - the arguments for the sample message are: ['#powder-bots','hi']
18:17 < Havvy> o.0 That's offly small...
18:19 < Octagonking> I want an Internet Relay Chat package that is much more reliable in its RAW data
18:19 < Octagonking> any suggestions
18:20 < Havvy> If you're using node-irc...I think you want client.addListener('message', function (from, to, message) { ... });
18:21 < Octagonking> 'message' is only private messages and channel messages
18:21 < Octagonking> not notices, joins, parts, or anything like that
18:21 < Octagonking> I'd use your nrc but there's no 'raw' event
18:22 < Havvy> Hmm, I'll have to add one then.
18:23 < SomeoneWeird> client.on('raw', function(message) {     });
18:23 < Havvy> Or you could go nrc.on("join part privmsg", function () { ... });
18:23 < Octagonking> but that's only for joins, parts, and privmsg, havvy
18:23 < Octagonking> I want the client to be one file
18:24 < Havvy> Add any other events you care to listen to to that list.
18:24 < Octagonking> so can you make a version that doesn't need seperate files for network objects
18:24 < asdf12> we are on irc talking about irc
18:24 < asdf12> classic
18:24 < Havvy> The network objects don't need to be stored in another file.
18:25 < Havvy> You could pass them in as literals.
18:25 < Octagonking> Havvy: how, though
18:25 < Havvy> The network object is a plain JSON object.
18:25 < Octagonking> Havvy: give me an example and I'll do the RAW event myself
18:26 < Havvy> var nrc = (new (require('nrc').NRC))({ network object});  nrc.on("all the events you care to listen too", function (evt_data) { /* this === nrc */ }); nrc.connect();
18:27 < Havvy> You could simplify the first line by moving the require to its own line of course
18:27 < Octagonking> what is { network object}
18:28 < Havvy> This: https://github.com/Havvy/nrc#network-configuration
18:29 < Havvy> Also, in the next version (0.3) I'm changing it so that 'this' in the callback doesn't point to the NRC object anymore, instead having that as the second parameter.
18:30 < Havvy> (This will allow for the binding of 'this' to whatever you want in your callbacks)
18:32 < Havvy> You can either prepare for that by using ~0.2.13 as the version in the package.json file or by adding nrc to your callback and at the top do:  if (!nrc) { nrc = this; }  and then using nrc instead of this.
18:36 < hhuuggoo_> I rebuilt node from source and now require can't find /usr/local/lib/node_modules, what am I doing wrong?
18:40 < Octagonking> I can't install NRC via NPM, it shows an error
18:41 < Industrial> Octagonking, so you like watching MMA and don't read the meaning of error messages :D?
18:41 < Industrial> kick-ass dude
18:41 < geNAZt> woho my is-alive lib is ready :dance:
18:42 < shaneknysh> this is probably a really really really stupid question but I just installed node from source but the node --version is not returning an error. "/usr/bin/node" no such file. node installed to /usr/local/bin/node. did I install incorrectly or should I just add /usr/local/bin to path?
18:42 < geNAZt> it defaults to this path
18:42 < Havvy> Octagonking: What error?
18:43 < geNAZt> so maybe you should add it to your path
18:43 < shaneknysh> thanks
18:43 < shaneknysh> I think I need to sleep before I go any further simple things are getting hard 
18:44 < Octagonking> Havvy: I'll DCC SEND you it
18:45 < Havvy> Try pastebin. ;)
18:45 < Havvy> http://pastebin.com/
18:45 < Octagonking> Havvy: I'll use DCC.
18:46 < Octagonking> Havvy: just accept the send, and you'll see the log
18:49 < Havvy> Hmm, looks like a git repo I depend on no longer exists or something?
18:49 < Havvy> I've been meaning to not depend on it. Give me half an hour, and I'll push a new version that doesn't require it.
18:54 < Octagonking> ok
19:02 < Havvy> Octagonking: Try v.0.3.1
19:10 < Octagonking> ok
19:11 < Octagonking> an error appears still
19:11 < Octagonking> Havvy: the new transfer file is to do with 0.3.1
19:12 < Havvy> :/ It didn't send.
19:12 < Havvy> Try pastebin...it's more secure anyways.
19:13 < Octagonking> I'm awaiting a reply on my send
19:13 < Octagonking> I've accepted the get
19:13 < Octagonking> Connection failed at GET
19:13 < Octagonking> Transfer timed out at SEND
19:14 < Havvy> Speed: 0B/s
19:15 < Havvy> Octagonking: Not sure why it's not working. But (once again), pastebin is safer and probably faster.
19:17 < MI6> joyent/node: isaacs v0.8 * 9a488a6 : blog: Correct shasums for v0.9.8 release - http://git.io/hNILfg
19:24 < zodiak> question about style (mostly) .. did the style of two callbacks, one for error, one for success, change in node.js over the past year ?
19:24 < geNAZt> no
19:24 < geNAZt> they try to do the callbacks all the same
19:24 < zodiak> because, if not, why the eff are node.js libraries such as couchbase and superagent using the style of one callback with err/results intermingled ?
19:25 < geNAZt> first parameter err, second value of success
19:25 < zodiak> geNAZt, didn't it used to be two completely different callbacks though ?
19:25 < zodiak> or am I smoking crack
19:26 < geNAZt> no it never used two callbacks
19:26 < zodiak> huh... *scratches head* wonder what the eff I am thinking of then
19:26 < zodiak> ta muchly :)
19:26 < geNAZt> maybe event listening ?
19:27 < zodiak> hrrmm.. yeah.. maybe.. maybe jQuery style $.ajax .. meh :)
19:28 < geNAZt> urgs jQuery API
19:28 < geNAZt> :D
19:28 < zodiak> don't support trond is about ? got come couchbase node.js questions ;)
19:28 < zodiak> geNAZt, *chuckles* yeah.. it's .. pretty nasty syntax ;)
19:28 < geNAZt> yes
19:45 < geNAZt> well node doesnt have RFC 2324 ? :(
19:46 < shihan> heh
19:46 < geNAZt> the http module doesnt support http statuscode 418
19:47 < geNAZt> which is defined in RFC 2324
19:47 < shihan> lol
19:47 < geNAZt> and it doesnt serve me coffee 
19:47 < torvalamo> 418 is an error code
19:47 < torvalamo> so the fact that it's not implemented should be a good thing?
19:47 < shihan> thats cause the resulting entity body would be short and stout, which isnt supported by node
19:47 < geNAZt> yes
19:47 < Robert00001> 418 is defined in http status codes...
19:47 < Robert00001> as I'm a Teapot
19:47 < geNAZt> but it doesnt serve me an coffee !
19:47 < valterguy> Robert00001: it's not in any protocol.
19:48 < torvalamo> yes, if you request coffee from an rfc2324 compliant server, and it is not a coffee maker, it returns 418, i'm a teapot
19:48 < gildean> you can just write the error yourself
19:48 < valterguy> Robert00001: just an RFC which was a joke, iirc
19:48 < valterguy> oh well. :)
19:48 < geNAZt> i like the rfc
19:48 < Robert00001> it IS defined in http.STATUS_CODES
19:48 < valterguy> Robert00001: my bad then.
19:48  * valterguy moves along
19:59 < jrajav> Which makes sense because it is a standardized HTTP status code
19:59 < jrajav> :P
20:04 < grass7boy> ?
20:04 < grass7boy> hello
20:04 < grass7boy> i want to receive NTP packet by node.js
20:05 < bnb> Does anybody know good, up to date tutorials for a beginner in Node.js?
20:05 < grass7boy> and i ve found this example http://www.robertprice.co.uk/robblog/2011/03/writing_a_udp_server_using_node_js-shtml/
20:05 < bnb> I suppose I mean "on" Node.js, not "in".
20:06 < grass7boy> it can capture the NTP packet which based on UDP Protocol
20:06 < zodiak> well.. ~that's~ awesome.. couchnode has a max length on documents (apparently) that it can retreive
20:06 < grass7boy> however, the captured message is binary format
20:06 < zodiak> and I can't open an issue on github, because the repo is a forked repo from an old project *claps slowly*
20:06 < grass7boy> how can i convert it as binary array?
20:07 < geNAZt> grantbow: it comes out as buffer
20:07 < geNAZt> thats normal
20:07 < geNAZt> grass7boy*
20:07 < geNAZt> sry 
20:07 < grass7boy> yeah
20:07 < grass7boy> i 've console.log the message
20:07 < grass7boy> it comes a buffer
20:08 < geNAZt> yes that should be right
20:08 < grass7boy> can i make this buffer to a byte array?
20:08 < geNAZt> it is a byte array
20:08 < grass7boy> !!
20:09 < geNAZt> buffer[offset] to access the bytes
20:09 < bnb> Does anybody have a link to a good Node.js tut for beginners that is up to date?
20:09 < grass7boy> so... how can i get each byte's value ?
20:09 < geNAZt> grass7boy: http://nodejs.org/api/buffer.html#buffer_buf_index
20:09 < grass7boy> thanks i ll check it out
20:15 < redshadowhero> >>var a = 'a'; for(var i =0; i<10000000; i++) a+=a; a;
20:15 < purr> redshadowhero: Unknown Error: Please contact eboyjr. INFO: 
20:15 < redshadowhero> Interesting.
20:16 < redshadowhero> 'cause it breaks my sandbox bot too.
20:16 < Havvy> >> 'a' + 'a'
20:16 < purr> Havvy: (string) 'aa'
20:17 < redshadowhero> it's only at massive volumes.
20:17 < Havvy> You're creating a string of length 2>>10000000
20:17 < geNAZt> var a = 'a'; for(var i =0; i<10000000; i++) a+=a.toString(); a;
20:17 < geNAZt> >> var a = 'a'; for(var i =0; i<10; i++) a+=a; a;
20:17 < purr> geNAZt: (string) 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa…
20:17 < Havvy> And you don't think it wouldn't break?
20:17 < geNAZt> >> var a = 'a'; for(var i =0; i<10; i++) a+=a; a.length;
20:17 < purr> geNAZt: (number) 1024
20:17 < redshadowhero> I expected the library to handle it a little better, yeah.
20:18 < redshadowhero> the other ones throw out string errors in the response.
20:18 < redshadowhero> 14:12 < redshadowhero> >>var a = 'a'; for(var i =0; i<1000; i++) a+=a; a;  
20:18 < redshadowhero> er
20:18 < redshadowhero> >>var a = 'a'; for(var i =0; i<1000; i++) a+=a; a;  
20:18 < purr> redshadowhero: Unknown Error: Please contact eboyjr. INFO: 
20:18 < redshadowhero> stupid select
20:18 < redshadowhero> oh wait.
20:18 < redshadowhero> >>var a = 'a'; for(var i =0; i<1000; i++) a+=i; a;  
20:18 < purr> redshadowhero: (string) 'a0123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154…
20:18 < shihan> i woudl have thought i'd run out of memory and poop itself
20:19 < shihan> s/i'd/it'd
20:19 < geNAZt> purr: you missed
20:19 < geNAZt> the goal is to concat as together
20:19 < geNAZt> a's
20:19 < redshadowhero> nah.
20:19 < redshadowhero> I forgot to change the default value.
20:19 < Robert00001> >> 'a\na'
20:19 < purr> Robert00001: (string) 'a\na'
20:19 < owen1> I am sending data with upd and looking at strace to see what is being send i noticed foo\5\f while what i would like to send is foo\5\0\f(according to the specs i must follow) .  any idea how to add that missing \0?
20:20 < Havvy> So it breaks somewhere between ~3k chars and 2 >> 1000 characters.
20:20 < Havvy> * <<
20:20 < redshadowhero> I guess I'll just have to be a bit more liberal with my try catch blocks.
20:20 < shihan> how do you figure 3k chars out of curiosity?
20:20 < redshadowhero> >>var a = ''; for(var i =0; i<1000; i++) a+=i%10; a;  
20:20 < purr> redshadowhero: (string) '01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345…
20:20 < Havvy> Cause it's the sequence '0, 1, 2, 3, ... 998, 999, 1000'
20:20 < redshadowhero> >>var a = ''; for(var i =0; i<3000; i++) a+=i%10; a;  
20:20 < purr> redshadowhero: (string) '01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345…
20:21 < redshadowhero> >>var a = ''; for(var i =0; i<10000; i++) a+=i%10; a;  
20:21 < purr> redshadowhero: (string) '01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345…
20:21 < redshadowhero> >>var a = ''; for(var i =0; i<100000; i++) a+=i%10; a;  
20:21 < purr> redshadowhero: (string) '01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345…
20:21 < Havvy> 900 characters are of length 3 and the rest are less than that, except for 1000, which is 4.
20:21 < shihan> it wouldn't be 3k though... 3gig maybe
20:21 < redshadowhero> >>var a = ''; for(var i =0; i<1000000; i++) a+=i%10; a;  
20:21 < purr> redshadowhero: (string) '01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345…
20:21 < redshadowhero> >>var a = ''; for(var i =0; i<1000000000; i++) a+=i%10; a;  
20:21 < purr> redshadowhero: Timeout Error: Execution time exceeded 2 seconds
20:21 < redshadowhero> Interesting.
20:21 < Havvy> >> var a = ''; for(var i =0; i<1000; i++) a+=i%10; a.length;
20:21 < purr> Havvy: (number) 1000
20:21 < redshadowhero> Sometimes I get a timeout, sometimes it poops itself.
20:21 < Havvy> >> var a = ''; for(var i =0; i<1000; i++) a+=i; a.length;
20:21 < purr> Havvy: (number) 2890
20:21 < Radhad> hi all
20:21 < Havvy> 2890. Pretty close to 3000 to me. ;)
20:22 < geNAZt> >> var a = 'a'; for(var i =0; i<100; i++) a+=a; a.length;
20:22 < purr> geNAZt: Unknown Error: Please contact eboyjr. INFO: 
20:22 < Radhad> has anybody tried to stream music from a node.js server to a node.js client?
20:22 < geNAZt> >> var a = 'a'; for(var i =0; i<100; i++) a+=a; a.length;
20:22 < purr> geNAZt: Unknown Error: Please contact eboyjr. INFO: 
20:22 < geNAZt> >> var a = 'a'; for(var i =0; i<10; i++) a+=a; a.length;
20:22 < purr> geNAZt: (number) 1024
20:22 < geNAZt> >> var a = 'a'; for(var i =0; i<12; i++) a+=a; a.length;
20:22 < purr> geNAZt: (number) 4096
20:22 < redshadowhero> I just thought it was a little interesting :)
20:22 < clone1018> hrm, which vm function to use!
20:22 < redshadowhero> is this bug report-worthy?
20:22 < shihan> keep in mind, the original line of code (var a = 'a'; for(var i =0; i<10000000; i++) a+=a.toString(); a;) woulc create something rediculsouly large array....
20:23 < Havvy> shihan: What would happen if you did that in C?
20:23 < fwg> >>setTimeout
20:23 < purr> fwg: ReferenceError: setTimeout is not defined
20:23 < geNAZt> array ? i dont think so
20:23 < shihan> havvy, your machine would start swapping and eventually crash
20:23 < shihan> well, not crash, but you'd have no memory left
20:23 < Havvy> Or disk space. ;)
20:24 < Robert00001> >> for(var i=0,a='',l=1024;i<l;i++)a+=i%(l-i)+"\t";a
20:24 < purr> Robert00001: (string) '0\t1\t2\t3\t4\t5\t6\t7\t8\t9\t10\t11\t12\t13\t14\t15\t16\t17\t18\t19\t20\t21\t22\t23\t24\t25\t26\t27\t28\t29\t30\t31\t32\t33\t34\t35\t36\t37\t38\t39\t40\t41\t42\t43\t44\t45\t46\t47\t48\t49\t50\t51\t52\t53\t54\t55\t56\t57\t58\t59\t60\t61\t62\t63\t64\t65\t66\t67\t68\t69\t70\t71\t72\t73\t74\t75\t76\t77\t78\t79\t80\t81\t82\t83\t84\t85\t86\t87\t88\t89\t90\t91\t…
20:24 < shihan> indeed :)
20:24 < Havvy> Pretty sure my harddrive cannot hold a string of 1 << 0000000 bytes.
20:24 < redshadowhero> Well, if you had 16GB of ram, that might not be too bad.
20:24 < Robert00001> >> for(var i=0,a='',l=1024;i<l;i++)a+=i%(l-i)+" ";a
20:24 < purr> Robert00001: (string) '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 …
20:24 < Havvy> Add a 1 to those 0s.
20:24 < Robert00001> meh
20:24 < redshadowhero> wait.
20:24 < redshadowhero> I keep forgetting it's a+=a.
20:24 < redshadowhero> Nevermind.
20:24 < shihan> seriously, var a = 'a'; for(var i =0; i<10000000; i++) a+=a.toString(); a; would create exa-exa-exa-exa bytes of data (or something) 
20:25 < redshadowhero> but it wouldn't crash; there's os-level protection against stuff like that. It'll probably segfault somewhere in a realloc.
20:27 < redshadowhero> Yeah, the manpage on realloc also says it's a null on error, and when it runs out of space (I can't remember what the space is on the largest type of allocation), it'll just return null. Or null if you try to malloc that much space.
20:27 < geNAZt> shihan: it would create a ~77MB Memory string
20:28 < jrajav> geNAZt: You're doing your math wrong
20:28 < jrajav> Consider that on each iteration the string doubles
20:28 < Havvy> a.concat(a);  ;)
20:28 < geNAZt> ah
20:28 < geNAZt> right :D
20:28 < redshadowhero> you could TRY char* a = malloc(UULONG_MAX), but I think that'll just return NULL.
20:29 < geNAZt> >> Buffer
20:29 < purr> geNAZt: ReferenceError: Buffer is not defined
20:29 < Havvy> >> Math.maxInteger
20:29 < purr> Havvy: undefined
20:29 < geNAZt> >> new Array(1024);
20:29 < purr> geNAZt: (object) [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, …
20:29 < Havvy> >> new Array(2 << 10);
20:29 < purr> Havvy: (object) [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, u…
20:29 < Havvy> >> new Array(2 << 14);
20:29 < purr> Havvy: (object) [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, u…
20:29 < Havvy> >> new Array(2 << 20);
20:29 < purr> Havvy: Timeout Error: Execution time exceeded 2 seconds
20:30 < geNAZt> >> new Array(2 << 16);
20:30 < purr> geNAZt: (object) [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, …
20:30 < jrajav> For anyone curious about the exact number: http://www.wolframalpha.com/input/?i=2+%5E+10000000
20:31 < sschultz> I'm creating a node app using mongoose. I've created a "user" model which has a few attributes (age and name) declared in the schema. In part of my code, I create an instance, setting the age and name. Then I want to add a "birthplace" attribute. So I set that using object.birthplace = country. When I console.log the object, I see the age and name, but it doesn't print the birthplace. However, if I console.log object.birthplace, I see the 
20:31 < sschultz> birthplace. Can anyone explain this to me? Is there a way to make birthplace available when you console.log the object? (As a note, we didn't want birthplace persisted to the db hence why we didn't include it in the schema.) Thanks!
20:32 < geNAZt> MongoDB has no schemas at first place
20:32 < jrajav> The largest standardized *byte size is yobibytes, 2^80 bytes
20:33 < jrajav> If that code could actually be run, it would produce approximately 7 x 10^3010275 yobibytes of data
20:33 < jrajav> Yobibytes are approximately 1 quintillion times larger than gigabytes
20:33 < geNAZt> the most data intensive source was a camera or ?
20:34 < jrajav> I'm PRETTY sure that that amount of data couldn't actually be represented with all of the information capacity in the known universe
20:35 < geNAZt> http://www.newscientist.com/article/dn18051-super-slowmotion-camera-can-follow-firing-neurons.html
20:35 < geNAZt> camera with 1million fps :D
20:35 < bnoordhuis> jrajav: just wait until apple releases the new ipod
20:35 < shihan> lol
20:36 < geNAZt> this camera can see around corners
20:36 < geNAZt> thats nice :D
20:37 < shihan> there was a camera at mit not long ago that did a trillion fps
20:37 < jrajav> I think I read that article years ago
20:37 < jrajav> Oh, sure enough, 2009
20:37  * valterguy looks up at the scrollback of whatever happened here
20:38 < geNAZt> well then think of what power you need to keep this data parsed
20:38 < geNAZt> since u cant store it
20:39 < Robert00001> there is a camera that has 1 or more trillion fps
20:39 < jrajav> valterguy: We were discussing var a = 'a'; for(var i =0; i<10000000; i++) a+=a.toString(); a;
20:39 < redshadowhero> I wonder how eboyjr caught that error. Cause I'm trying try/catch, and it's not catching.
20:39 < shihan> http://web.media.mit.edu/~raskar/trillionfps/
20:39 < shihan> thats the one
20:39 < geNAZt> wow
20:39 < valterguy> jrajav: what was the expected result?
20:39 < jrajav> ..?
20:39 < valterguy> jrajav: why discuss it?
20:39 < geNAZt> right i saw the bottle experiment on youtube
20:39 < shihan> redshadowhero, i dont think it did, i think nodejs crashed in an unexpected way and thats no it handles it
20:40 < shihan> s/no/how
20:40 < jrajav> Because it's fun to fuck around with numbers in Wolfram Alpha
20:40 < Robert00001> I did too
20:40 < valterguy> carry on then. :)
20:40 < geNAZt> its awesome
20:40  * Havvy can store it:
20:40 < Havvy> function* () { int len = 0; while(len++ < 2 << 10000000) { yield "a"; } }
20:40 < redshadowhero> Hrm. I wonder why mine is just crashing outright.
20:40 < geNAZt> which use cases this camera can bring
20:41 < redshadowhero> It looks like the same sandbox library that I'm using, so I'd expect it to crash the same way.
20:41 < shihan> for some reason, a part of me is still more intrested in a camera that can see thru clothes.....
20:42 < geNAZt> it would be a bit advantage if you can build cameras that can shoot pictures in layers from your body
20:42 < Robert00001> so you can see the....?
20:43 < geNAZt> so you dont need crt anymore
20:44 < shihan> there was actually some medical thing where they sliced a human corpse up into incredibly thin slices and then photographed it...
20:44 < geNAZt> *mrt sorry
20:44 < Robert00001> purr
20:44 < Robert00001> what a name for a javascript bot
20:45 < geNAZt> shihan: yes a dead body. but the advantage is to do that by a living one
20:45 < geNAZt> to see cancer or things like that
20:46 < shihan> indeed :)
20:46 < owen1> i have a POST endpoint to save some data. my client doesn't care if the save actually happened. does it mean i can (and should) return 201 right away and make async call to save the data?
20:46 < geNAZt> like the medical toilet :D that is a damn aweful thing
20:49 < jrajav> geNAZt: Why would you want to slice up a living person like that? You monster! D:
20:49 < shihan> owen1, might be worth a read: http://benramsey.com/blog/2008/04/http-status-201-created-vs-202-accepted/
20:49 < geNAZt> what does a crt do ? or an mrt ?
20:49 < geNAZt> it creates a 3D modell of your body
20:50 < owen1> shihan: thank you!
20:50 < geNAZt> but the side effets of these technologiy are damn high
20:57 < mansoor-s> how do you use forever with node server requiring port 80 on linux?
20:58 < geNAZt> mansoor-s: the most common case is that you bind to port 80 as root and then change the UID of the process
20:58 < mansoor-s> geNAZt, how do I go about doing that?
20:58 < mansoor-s> is there a lib
20:59 < mansoor-s> or just unix commands?
20:59 < geNAZt> http://nodejs.org/api/process.html#process_process_setuid_id
21:01 < geNAZt> like this: http://hastebin.com/bokihemipo.js
21:01 < bnoordhuis> mansoor-s: authbind, iptables redirect, capabilities or dropping privs
21:03 < shihan> you could also proxy from apache/nginx/insert web/proxyserver here
21:08 < mansoor-s> thank you geNAZt bnoordhuis shihan 
21:12 < shihan> :q
21:12 < shihan> oops :D
21:16 < cxreg> othiym23: i finally got around to confirming it, your node_redis domain patch needs to exit the active domain
21:17 < cxreg> othiym23: https://gist.github.com/4699265
21:23 < cxreg> it's a little confusing because it seems like maybe the try should prevent the error from throwing, and the "run" will exit the domain for you.  but, the callback happens later, asynchronously, after the run has completed
21:28 < C0deMaver1ck> so I'm using express with connect-assets
21:28 < C0deMaver1ck> when I call <%= js('main') %> in my template it converts the <> to html entities
21:28 < C0deMaver1ck> and becomes this &lt;script src='/js/main.js'&gt;&lt;/script&gt;
21:29 < C0deMaver1ck> anybody have any ideas?
21:40 < chesles_> C0deMaver1ck: looks like your template lib escapes all output by default
21:40 < chesles_> C0deMaver1ck: are you using jade?
21:40 < C0deMaver1ck> ejs
21:40 < spion> Try <%~ js('main') %> 
21:41 < C0deMaver1ck> spion, that gave me a blank line :/
21:41 < spion> hm
21:41 < spion> or was it -
21:41 < spion> <%-
21:41 < C0deMaver1ck> it was -
21:41 < C0deMaver1ck> that worked
21:41 < C0deMaver1ck> weird, I couldn't find anything about that in the documentation
21:41 < chesles_> C0deMaver1ck: 5th bullet under "Features": https://github.com/visionmedia/ejs :)
21:41  * C0deMaver1ck facepalm
21:42 < spion> yep, I remember getting stuck trying it too
21:42 < C0deMaver1ck> chesles_, exactly why I just facepalmed
21:42 < C0deMaver1ck> :p
21:42 < chesles_> lol
21:42 < C0deMaver1ck> it's like looking for the milk in the fridge, wife finds it the first time
21:43 < chesles_> haha yep. i think it's a universal phenomenon, so no worries
21:43 < C0deMaver1ck> thanks for your help guys
21:43 < chesles_> i couldn't tell if it was a - or ~ either though
21:44 < spion> I like ~
21:44 < spion> i think its underused :P
21:45 < C0deMaver1ck> what's ~ used for?
21:46 < spion> its not used in EJS I think. its used in some other markups like restructured text
21:46 < chesles_> it's a bitwise NOT operator in some languages, isn't it?
21:46 < chesles_> or am i making things up?
21:46 < Havvy> chesles_: Yes.
21:46 < Havvy> It's also called a tilde.
21:47 < asdf12_> why cant i remember how to move 1 word back in bash
21:47 < asdf12_> someone tell me!
21:47 < cxreg> ctrl-w
21:47 < asdf12_> oh
21:47 < asdf12_> no wonder i couldnt do it heh
21:47 < chesles_> TIL sometimes called "twiddle" http://en.wikipedia.org/wiki/Tilde
21:47 < spion> you might be afraid of closing the current tab
21:47 < spion> :D
21:47 < asdf12_> ctrl+w is keybinded to something else
21:48 < asdf12_> yea i have a terminal window in the browser
21:48 < spion> hey, these days - who knows.
21:48 < cxreg> asdf12_: ctrl-backarrow might work too, but it wont delete like ^w does
21:49 < spion> we even have browsers in our browsers
21:49 < cxreg> yo dawg
21:50 < cxreg> i think that stuff all comes from gnu readline
21:51 < asdf12> also you know what bugs me , well movement keys, in vim 0 and $ it seems reversed
21:51 < cxreg> how about alt-backspace
21:51 < asdf12> because 0 is right of $
21:51 < asdf12> alt backspace?
21:52 < cxreg> that does the same as ^W in my shell
21:53 < asdf12> well ctrl+w isn't what i was looking for
21:53 < asdf12> that will delete the word
21:53 < asdf12> i just want to do 'b' in vim, move back a word
21:54 < cxreg> oh, that's what ctrl-backarrow does (also ESC-b)
21:54 < chesles> you might want 'set -o vi'
21:54 < chesles> after that, hit escape and you can move around like vim normal mode
21:54 < asdf12> chesles: awesome
21:54 < asdf12> didn't know that
21:54 < cxreg> there's that too :)  but even as a vim user, i find vi mode in shell confusing
21:55 < cxreg> maybe i should just suck it up and use it more often
21:55 < chesles> yeah, i tried it for a while and it didn't stick for me
21:55 < chesles> maybe i'll give it another go one of these days
21:55  * yept wants to build a multiple server loadbalanced web application, someone knows good modules to do that?
21:56 < asdf12> what why
21:56 < asdf12> seems a lot easier than trying to remember yet another set of key commands
21:57 < chesles> i think i would get confused because i didn't have vi mode enabled on every machine i used
21:58 < cxreg> and there's no visual indicator of mode
21:58 < cxreg> and the emacs bindings still work, more or less
21:58 < cxreg> so ... it's confusing
21:59 < chesles> and insert mode is the default, rather than normal
21:59 < Aria> (I copy .inputrc around as part of my gitified dotfiles collection; I use vi mode.)
21:59 < Aria> Insert mode being the default is the weirdest part.
21:59 < Industrial> sublimetext2 does this too, its annoying.
21:59 < chesles> is there any way to change that?
22:00 < Aria> No, it's hardwired into readline's vimode.
22:00 < Aria> It's really about time someone took libedit to task and made a superb vi mode for it. And then started submitting patches to replace readline with that.
22:01 < tonka> hmm
22:02 < Micc_> So, I'm new to node.js. I'd like to start using it for a new project. I've read enough to know how it works and now I'd like to get started with a normal setup. Is there any common web server module that uses cluster and allows loading and parsing of files requested?
22:03 < Micc_> I'm running centos 5.8. Are there some yum packages I can install to get started or is the best way to just build from source?
22:03 < geNAZt> Micc_: read more :D
22:03 < Micc_> doh! I knew the answer was RTFM. ;)
22:03 < geNAZt> nodejs isnt designed to be embedded into another webserver
22:03 < Aria> Micc_: "uses cluster and allows loading and parsing" ?
22:03 < Micc_> no, I know that.
22:04 < geNAZt> "Is there any common web server module that"
22:04 < geNAZt> simple answer: no
22:04 < Micc_> the web server runs on node.js. So I need something more powerful than the sample web server example.
22:04 < dch> Micc_: http://nodejs.org/api/cluster.html and express, or the provided http server.
22:04 < geNAZt> a web framework ?
22:04 < dch> you might want to define your requirements further
22:04 < Micc_> geNAZt, I suppose, yes.
22:05 < geNAZt> we come nearer to the point
22:05 < Aria> Static file serving? Some sort of routing? 
22:05 < Micc_> I just don't want all my web pages in one .js file.
22:05 < Aria> A PHP-like mapping of URL to template file?
22:05 < geNAZt> expressjs is the most common in this
22:05 < dch> e.g. multi-node clusters, or just multiple instances?
22:05 < geNAZt> well that is up to you
22:05 < geNAZt> no framework would give a struct
22:05 < geNAZt> expressjs wont give u
22:05 < tonka> guys — i know this question probably does not belong in #node.js but here it goes anyway: do you know any service alternative to StatsMix (statsmix.com) for custom generated metrics tracking?
22:06 < geNAZt> so its up to you to structure you app
22:06 < tonka> and for some reason they are not accepting any new customers
22:06 < Micc_> I'm planning on making a site with about 50-100 pages, html/css/js/bootstrap. And on the server side node.js and postgresql and maybe some nosql.
22:06 < asdf12> that api name suicide is sooooo weird
22:06 < Aria> Micc_: What's a page?
22:07 < geNAZt> then you should read into expressjs, redis, nodejs api cluster, sequilize, mongodb-native
22:07 < Micc_> Aria, I suppose my concept of web development needs to get with the times. I'm defining a page as the html return by a url.
22:07 < asdf12> why couldn't they just name it like cluster.implode or something
22:07 < Aria> Micc_: Yeah, that's ... one way of looking at it. But perhaps you're twisting representation with resource. 
22:08 < Aria> Micc_: A relatively normal way using express is to use its router, then break each module (each resource) into a separate file, and use require() to link them all together and define the routes.
22:08 < Micc_> Aria, sure, I can think of the html as a resource.
22:08 < Industrial> asdf12, clearly, cluster.HARIKIRI
22:08 < asdf12> what
22:08 < Industrial> better then suicide :p
22:09 < Micc_> Aria, that makes sense to me. Is that the preferred way to do it?
22:09 < Micc_> I don't want to do it the old way just because I'm old.
22:09 < Aria> Micc_: The HTML is actually the representation of the resource, not the resource. The resource is usually an object, and its handler is usually shared across all instances of it, like "a wiki page"
22:10 < Aria> Micc_: It's one organization system that works for some projects. Not all projects require it. But if you have a resource-heavy application, then it's a great strategy.
22:10 < Aria> Micc_: I quite often write services, so my needs are ENTIRELY different. (A single or perhaps a couple of endpoints exposed in each app)
22:10 < Micc_> Aria, I will probably have some services as well, but far fewer than resources.
22:11 < Aria> Micc_: What sort of app is this?
22:13 < Aria> (Also, are you actually doing the CPU-bound things that require cluster?)
22:13 < Micc_> Aria, its a site with user accounts that has a market place and allows the user to manage/configure their offering to the marketplace.
22:14  * Aria nods. Definitely sounds resource-heavy. Lots of templated URLs -- /user/{username}/offerings/{offerid} etc.
22:14 < isaacbw> so apparently memcached is a poor option for session storage
22:14 < Aria> isaacbw: Oh?
22:14 < Micc_> Aria, I just read the page on cluster and thought it made sense if I wanted to scale my app at some point, but that can be done later really easy it seems. We'll want multiple nodes in multiple data centers at some point.
22:15 < isaacbw> http://dormando.livejournal.com/495593.html
22:15 < isaacbw> the main reason being that since caches are sometimes lost or removed to make space, it could kick users off
22:15 < Micc_> Aria, yes, but we'll probably leave the /usr/{username} out of the url.
22:16 < isaacbw> so not only is it a bad idea if you want "Stay logged in forever" sort of thing, but it could also log users out in the middle of a browsing session
22:16 < isaacbw> you could maybe combine them and check the cache first and the db second
22:16 < Aria> That really depends on how you use memcache.
22:16 < isaacbw> if you are doing a lot of session lookups
22:16 < Aria> Ours at work has zero evictions. And we just don't restart it.
22:16 < Aria> We don't use memcache as a cache, though. We use it as a volatile store. And we've tuned it for this.
22:17 < isaacbw> but you might have an unintended shutodown of one of the servers, in which case all the sessions on that server will be logged out
22:17 < isaacbw> so you aren't using it for sessions anyway?
22:17 < Micc_> Aria, I have experience with asp.net (MVC & forms) and php. Do you think its reasonable to think node.js will save time over those frameworks even if I have to learn as I go?
22:17 < isaacbw> well, the link discusses the tradeoffs. Just in general you'll want to use something more persistent
22:17 < Micc_> and I'm proficient in javascript.
22:17 < Aria> Micc_: Depends on what you're making.
22:18 < geNAZt> use redis.
22:18 < geNAZt> :D
22:18 < Aria> Micc_: Though the stuff available on npm is a calibre above what's available in PEAR. So use what others have built. 
22:18 < Aria> Yeah, today, I'd be using Redis.
22:18 < Aria> (also, memcache has a multi-write strategy -- so you can restart any one server and be fine)
22:18 < Micc_> Aria, I'd say its your average website with a lot of data.
22:18 < isaacbw> my first batch of beer is bubbling in the airlock. This is so exciting
22:19 < Aria> Micc_: node.js isn't a web/site/ creation tool. So your mileage may vary. And express is a very small set of libraries, not a huge framework.
22:19 < asdf12> i wouldn't use node to make general websites
22:19 < Aria> Micc_: Node is amazing for writing services -- which most web apps once scaled turn into -- but it's very, very low level.
22:20 < Micc_> Aria, so you would suggest using a real web server for most stuff and use node.js for services?
22:20 < isaacbw> nah
22:20 < Aria> Micc_: Well, I'd probably write a 'regular web server' in node.js .. and then use that.
22:20 < Micc_> Aria, which is what redis is?
22:20 < Micc_> or express?
22:20 < isaacbw> redis is a data store
22:20 < isaacbw> express is a set of tools for developing web servers
22:20 < Aria> Micc_: no, redis is part of the other conversation, about sessions.
22:21 < Micc_> Aria, I will need sessions too.
22:21 < Aria> Indeed. express is something a little (little!) less raw than the pure HTTP server of node itself.
22:21 < geNAZt> "little"
22:21 < geNAZt> :D
22:21 < Aria> Yeah. Redis is a great data store for sessions. Really, for many scales, so's mongodb.
22:21 < Micc_> Aria, I've written my own web servers in C++ before, so I don't mind raw. I'm just looking to save some time.
22:22 < asdf12> don't think it'll save you time
22:22 < Aria> Micc_: Not sure if it'll save you time or not. It saves me time, but I'm a control freak -- I have to take apart any framework I use to be able to control it.
22:22 < Aria> And for a web app (not site!) I tend to make a client-heavy design, leaving the web service just a REST style server, which node is perfectly good at.
22:22 < Micc_> Aria, I like to know I have that control if I need it.
22:22 < asdf12> if you already know .net and php how would it save you time
22:23 < isaacbw> express won't save you time over the http module?
22:23 < isaacbw> you guys are insane
22:23 < isaacbw> it will absolutely save you time *once you understand it*
22:23 < asdf12> what
22:23 < Aria> isaacbw: Sure it will. I use express all the time for that reason. But it won't save me time over, say, Symfony, in some cases.
22:23 < isaacbw> first spend some time with https://github.com/senchalabs/connect
22:23 < isaacbw> then use express
22:23 < isaacbw> express is a very line layer over connect
22:23 < geNAZt> expressjs only handels routing, form, http post data, sessions and template managing for you
22:23 < Aria> (that said, I've had to disassemble Symfony to make it do what I want. So I use node for personal projects ;-))
22:23 < isaacbw> mostly for templating and that sort of thing
22:23 < asdf12> isaacbw: he's talking about using node not express vs http module
22:23 < isaacbw> oh
22:24 < isaacbw> guys
22:24 < isaacbw> guys
22:24 < isaacbw> reading is hard
22:24 < Micc_> haha
22:24 < asdf12> like there's probably some boiler plate generating rails type framework in .net or php that'll be a better time saver
22:24 < isaacbw> if you're already using asp.net and you're happy with it, just stick with it
22:25 < isaacbw> trying to rewrite would probably be a waste of time
22:25 < asdf12> though there is something like that in node.js, geddy? but i never used it
22:25 < isaacbw> play with node on the side and then you'll be in better shape to make an educated decision the next time you're starting a new project
22:25 < Micc_> asdf12, I'm not going to use any scaffolding because they don't like postgresql.
22:25 < asdf12> who's they
22:25 < Micc_> I'm not really that happy with it.
22:26 < Micc_> I was thinking of using php for this project, since I don't want to pay for azure this time.
22:26 < Micc_> I have my own centos servers already.
22:27 < Micc_> asdf12, they being the scaffolding frameworks like MVC, etc. for .net
22:27 < asdf12> oh
22:27 < tprice> does LearnBoost/cluster work with the cluster module in node 6+
22:27 < Micc_> asdf12, I would se MS stack, but I've already committed to postgresql.
22:28 < Micc_> I've already written the phone system side of the project in asterisk/postgresql.
22:28 < Micc_> now I just need the web interface.
22:29 < asdf12> idk i think most people who use node like javascript , so if you like javascript...
22:29 < Micc_> And now that I'm thinking about resources differently. It might be good to come up with services that expose end points to do all the stuff, then it makes it easy to make a mobile app later.
22:29 < Micc_> asdf12, I like javascript more than .net. Although .net did get anonymous types, so thats kind of cool, but I still like javascript better.
22:30 < Artimus> Micc_: You're saying ASP.NET MVC doesn't support Postgresql? Or some library on top of it doesn't support Postgresql?
22:30 < Micc_> Artimus, I've had problems with EF and some of the scaffolding using postgres. I have many asp.net sites that use npgsql with no problems.
22:31 < Micc_> Artimus, it just won't save me any time. I'll have to write the data access myself anyways.
22:32 < asdf12> you keep mentioning time, so 
22:34 < euoia> wow, underscore's bindAll method is very cool!
22:34 < asdf12> whats it do
22:34 < Havvy> I'm guessing it binds a bunch of functions to a single object?
22:35 < cxreg> othiym23: argh.  to make matters worse, if the redis client itself was created in a domain, even my patch does not solve it.  and there's no way within the domains api to actually do it correctly.
22:35 < Artimus> Micc_: As a .NET guy by day who loves Node.JS, Node.JS rarely "saves time" in simple cases. It works well for hard or interesting problems. Best case scenario, CRUD takes as long to develop as any other framework. Worst case, a decent amount longer.
22:35 < euoia> you pass it an object and it ensures that any time one of that object's functions is called, this is bound to the object
22:35 < cxreg> othiym23: i'm working on a node bug report, and a possible fix
22:35 < prosquare> euoia: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind
22:35 < asdf12> euoia: that doesn't sound so special
22:36 < asdf12> because its like what prosquare linked :p
22:36 < euoia> prosquare: ah okay, I was actually looking for a function that does that
22:36 < prosquare> euoia: useful function, no doubt
22:37 < euoia> prosquare: I may just use bind in this case, since for now it's just one function I need to worry about
22:37 < gilligan_> pulling my hair fiddling with a js code completion plugin for vim .. i suppose there is no plugin/hack/whatever for code completion in the nodejs REPL is there ?
22:37 < prosquare> euoia: function(){}.bind(someObj)
22:38 < euoia> prosquare: yep, got it... I'm using it when I want to pass a function to another object to be called at a later point
22:38 < Havvy> It's possible to abuse bind.
22:38 < prosquare> Havvy: do explain
22:39 < Havvy> prosquare: Writing a library that binds 'this' to some object inside of it so that the clients of the library can't bind it to their own objects.
22:40 < prosquare> Havvy: idd
22:40 < asdf12> why not
22:40 < asdf12> yea they can
22:40 < Havvy> idd?
22:40 < prosquare> indeed
22:41 < topaxi> Havvy: you don't need bind for this, self = this hack can do the same :>
22:41 < Havvy> topaxi: Not always.
22:41 < asdf12> Havvy: why couldn't they rebind it later and just pass 'this' in as an argument or use a closure
22:41 < Havvy> Wait, nvmd. They could do that.
22:41 < asdf12> ya
22:42 < prosquare> it can create confusion though as to what is actually `this`
22:42 < asdf12> this is that thing, you know this!
22:43 < asdf12> if they are the one rebinding it why shouldn't they know what this is and what the new this is
22:44 < prosquare> thats given the function they are rebinding with matches the requirements needed to run the function
22:44 < zeromodulus> My REPL doesn't work. :(
22:44 < Robert00001> ?
22:44 < prosquare> such as a dependency on `this.someProp`
22:44 < prosquare> if the rebound object doesn't contain this, it could break
22:44 < zeromodulus> No errors, no prompt, no output.
22:45 < zeromodulus> I'm wondering if it's because of libexecinfo potentially missing.
22:45 < prosquare> mind you, that is a specific use case
22:45 < asdf12> yea i dont think thats what havvy meant
22:45 < zeromodulus> I can't tell from the documentation whether or not I need to attempt to install libexecinfo. I am on OSX.
22:46 < Havvy> https://gist.github.com/4699585
22:47 -!- mode/#Node.js [+b *!*@74.88.87.158] by ChanServ
22:47 -!- garbagecollectio was kicked from #Node.js by ChanServ [User is banned from this channel]
22:50 < asdf12> ??
22:50 < prosquare> Havvy: I see what you did there... :P  but you really are just showcasing the use of bind
22:51 < prosquare> not so much the use of a rebind
22:51 < prosquare> maybe I'm seeing it wrong
22:51 < Havvy> prosquare: If libWithCallback rebinds, then you *have* to use the second version.
22:52 < Havvy> Maybe I should write an article on this?
22:52 < prosquare> :)
22:53 < prosquare> im still trying to process
22:54 < Havvy> prosquare: Is there ever a time you would expect the first to fail and the second to succeed?
22:55 < topaxi> there is no "rebind" Oo
22:56 < Havvy> topaxi: .bind() is a .rebind(). ;)
22:56 < topaxi> bind is always hard, there are some softbind implementations out there though...
22:56 < topaxi> no sore
22:56 < topaxi> *sir
22:56 < topaxi> once bound... this is set, no way to rebind
22:57 < topaxi> bind/call/apply won't set this anymore, as it is already bound
22:59 < asdf12> oh so true
22:59 < asdf12> you can't unbind a bound function
22:59 < asdf12> interesting
22:59 < Havvy> topaxi: https://gist.github.com/4699585 (updated) showing it's possible to rebind.
22:59 < asdf12> oh yea
23:00 < asdf12> but thats hacky
23:00 < topaxi> Havvy: nope, you're binding the same function to two different objects
23:00 < topaxi> yes
23:00 < topaxi> but
23:00 < topaxi> try rebinding f1
23:00 < Havvy> Oh wait, whoops. I found f twice.
23:00 < Havvy> Weird...
23:00 < Havvy> (f1.bind(b))()
23:01 < Havvy> gives me "a"
23:01 < topaxi> there was a discussion on the ecmascript mailinglist about softbinds... but there weren't enough usecases :o
23:01 < topaxi> told you :P
23:01 < Havvy> So then, since the rebind fails, you lose information provided by the library if the library tries to bind it.
23:01 < topaxi> yes
23:02 < topaxi> but you'd only bind if you actually want to reset this
23:02 < topaxi> so it should be fine
23:02 < Havvy> topaxi: But then the information provided by whatever the library bound 'this' to is gone.
23:03 < topaxi> and the problem is?
23:03 < topaxi> usually libraries don't bind this
23:03 < topaxi> they just call it on their objects
23:04 < topaxi> at least not on the public api, would feel weird
23:04 < Havvy> topaxi: I wrote one that does, and now I'm having to make a backwards-incompatible change with all users of it.
23:04 < asdf12> http://hastebin.com/wiramimadi.avrasm
23:05 < asdf12> thats one way to rebind haha
23:05 < asdf12> hackish though
23:05 < asdf12> and when you rebind you have to pass in the new this as an argument... is the only problem
23:05 < asdf12> but at least now bind2 itself, sticks
23:06 < topaxi> http://wiki.ecmascript.org/doku.php?id=strawman:soft_bind
23:06 < topaxi> there's an implementation of a pontential softbind
23:06 < topaxi> -n
23:07 < topaxi> which should always "rebind"
23:16 < asdf12> ok
23:16 < asdf12> i got it
23:16 < asdf12> it's not as dumb now
23:17 < asdf12> Havvy: http://hastebin.com/xiluqaguxi.coffee
23:17 < asdf12> you just gotta make the if statement work
23:18 < asdf12> once the bind2 happens from your user, they won't be none the wiser
23:18 < Havvy> Yeah. But that's not something you want to make client code do. ;)
23:18 < asdf12> well the only code that is from the client would be bind2
23:19 < asdf12> and it works exactly like a regular bind, so they have no idea
23:19 < Havvy> Anyways, it's easier if I just move the currently bound variable to a second arg.
23:28 < asdf12> BUT I SOLVED THE PROBLEM OF REBINDING DANG IT
23:28 < topaxi> ^^
23:31 < nihilista> is it a good choice to work with node and nosql rather than mysql even if i don't necessary need some 'special' nosql functionality?
23:32 < isaacbw> the point of nosql is to sacrifice functionality for speed
23:34 < isaacbw> http://docs.mongodb.org/manual/faq/
23:35 < isaacbw> nosql databases generally fit well with the structure of web apps
23:36 < nihilista> thank for link =)
23:36 < nihilista> *thanks
23:37 < nihilista> i just started to read about couchdb and it looks pretty interesting
23:37 < isaacbw> I have a thing for mongo, but lots of people use couchdb and are happy with it
23:39 < nihilista> i have in mind to rewrite one of my apps to node.js and since nosql is so much related with js i thought it would be a good thing to use nosql rather than mysql (which i really don't like)
23:39 < asdf12> http://hastebin.com/makidadumu.coffee
23:39 < asdf12> plus you can still use the original this
23:39 < asdf12> so like you don't really lose anything
23:41 < asdf12> isaacbw: are you ever going to do anything with that router idea?
23:41 < isaacbw> I'm still using it in my project
23:41 < asdf12> if not, i might use itttttt for fun
23:41 < asdf12> and make an open source web framework
23:41 < isaacbw> it's just private right now
23:42 < isaacbw> I'll share it eventually
23:42 < asdf12> well i just want to use the idea lol
23:42 < cloudbender> there is also versant's db4o, but i'm not sure there is a node library yet.
23:42 < asdf12> you know what the problem is
23:42 < cloudbender> It works great for C
23:42 < cloudbender> c#
23:43 < asdf12> well idk i have a great idea for a web framework
23:43 < cloudbender> has anyone worked with kdb ?
23:44 < cloudbender> in kdb a million inserts is considered as a matter of fact
23:46 < asdf12> hey
23:46 < asdf12> you know what i wonder
23:46 < RLa> kdb?
23:47 < asdf12> when network tv shows started appearing in color, did people get pissed off when some shows weren't in color yet
23:47 < asdf12> so half the tv shows they watched were in b/w and the other half was in color heh
23:49 < asdf12> mary tyler moore is pretty
23:50 < asdf12> its a shame she got all that plastic surgery
23:50 <@Nexxy> O_o
23:56 < cloudbender> Most people did not get pissed off, since the tv sets were black and white only
23:59 < asdf12> you lived during that time?
23:59 < Havvy> Why do I have methods on Strings "big" "bold" "strike" in a fresh Node REPL?
--- Log closed Sun Feb 03 00:00:21 2013
