--- Log opened Fri Sep 28 00:00:32 2012
00:01 < mykul> hi, what does a stream's data event callback get passed?
00:02 < astropirate> mykul, http://nodejs.org/api/stream.html
00:02 < mykul> thanks astropirate, when does it fire?
00:03 < ry4nn> anyone know an interface or tested implementation of fnmatch(3) ?
00:03 < astropirate> The 'data' event emits either a Buffer (by default) or a string if setEncoding() was used.
00:03 < astropirate> "  "
00:05 < mykul> yes, i read that  part.  Is there a clue in there i'm missing about WHEN that data event gets emitted? I'm pretty new to this stuff so I could easily have missed something
00:08 < octane--> what's the easiest way to redirect to another page from node?
00:09 < hdon-> octane--, are you just using nodejs' standard http server?
00:09 < octane--> yeah
00:09 < hdon-> octane--, well if you're familiar with HTTP, you can send an HTTP 302 with a Location: header
00:10 < hdon-> octane--, you could write a function to do the redirect and close the connection as well
00:10 < astropirate> octane--, are you using a framework?
00:10 < octane--> astropirate: yeah connect =/
00:11 < chilts> octane--: res.writeHead( 301, { 'Location' : 'http://example.com/' });
00:11 < chilts> or a 302 for a temporary redirect
00:12 < octane--> hrm
00:12 < chilts> then res.end()
00:12 < chilts> I think you could do it in one call though
00:12 < chilts> hrm what?
00:13 < octane--> okay gonna give this a go
00:13 < octane--> thank you!
00:13 < octane--> i was hrming about res.end actually... i was using setHeader
00:18 < chilts> octane--: cool, let me know how you get on or if you need any more help :)
00:19 < octane--> chilts: thx!
00:19 < chilts> :)
00:26 < octane--> chilts:  yeah that didnt work
00:27 < octane--> i tried both 301 and 302
00:27 < octane--> w/ and w/o res end
00:27 < chilts> paste some code? I use that exact same 2 lines in http://redirects.jit.su/ so I know it works :)
00:28 < octane--> i think it's because i already send headers?
00:29 < chilts> octane--: right, so it complains to you
00:29 < chilts> in which case, try addHeader() instead of writeHead()
00:30 < chilts> then you'll still have to do the 301/302 in your res()
00:30 < chilts> (I think)
00:32 < chilts> or setHeader() :)
00:32 < octane--> i dont have either of those methods with connect lol
00:33 < octane--> (this is why we're switching to express)
00:33 < chilts> res.setHeader() ?
00:33 < tjholowaychuk> setHeader is node
00:33 < tjholowaychuk> but express has a lot more handy methods, you more or less need them all for anything http
00:34 < octane--> oic
00:34 < tjholowaychuk> unless you want ~5 line redirects etc
00:34 < octane--> yeah the error w/ setHeader is is differnt youre right
00:37 < octane--> [TypeError: Object 302 has no method 'toLowerCase', at ServerResponse.res.setHeader
00:38 < tjholowaychuk> you're passing a number
00:38 < tjholowaychuk> res.statusCode = 302
00:38 < tjholowaychuk> res.setHeader('Location', ...)
00:39 < chilts> man, I hate having to do things four times ... current $work project has changed designs _so_ much! :(
00:39 < octane--> tjholowaychuk: thank you
00:40 < tjholowaychuk> or just res.redirect(url)
00:40 < tjholowaychuk>  w/express
00:45 < Zak> chilts: use a better methodology
00:45 < Zak> i recommend using Scrum
01:10 < BMF> JOIN #robotsjs
01:14 < Smashcat> Is there a startup switch for node.exe to make it show extra debugging output? It's quitting here every so often with no errors
01:17 < Zak> "node --help" will give you the options.
01:18 < Zak> Have you considered that maybe your program is designed to quit and you're missing those cases?
01:18 < Smashcat> Zak: Thanks - do you know if Node.exe will just exit if nothing happens for a while?
01:18 < Zak> i'm not aware of any bug or behaviour like that
01:19 < Smashcat> It's a websocket server, which also handles serial io - if I leave it for a few minutes with no clients, it just exits silently
01:24 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:26 < langpavel> may be not related, but what IRC client is best in gnome? I love psi, but only jabber..
01:28 < deltab> langpavel: I've not used it, but smuxi looks nice
01:28 < deltab> well integrated
01:32 < chilts> Zak: absolutely ... not my decision though, am contracting at the moment, so I have to fit in with what they do
01:32 < chilts> all my other projects use other (better) techniques
01:36 < Zak> chilts: bummer
01:39 < TandemAdam> hey, anyone used node.js to talk with ActionScript3 before?
01:42 < langpavel__> Anybody need something?
01:43 < astropirate> langpavel__, two of every animal
01:43 < langpavel__> haha hot this channel
01:53 < Smashcat> Dammit, even after adding an interval, node still quits after some random amount of time with a serial connection open
01:55 < mscdex> Smashcat: is it segfaulting?
01:55 < Smashcat> mscdex: Nope, no output at all, it just stops (Windows 7). Nothing in the logs either
01:56 < mscdex> Smashcat: well, in my experience it can segfault without any indication on Windows
01:56 < mscdex> Smashcat: you might try running it in the debugger or something
01:56 < mscdex> just to be sure
01:57 < Smashcat> mscdex: Sorry, I'm pretty new to node - is that a tool that's supplied with the install, or some plugin for an ide?
01:57 < mscdex> Smashcat: you should be able to do it from the visual studio ide
01:59 < astropirate> langpavel__, are you bored and looking for a project to contribute to? :D
01:59 < Smashcat> mscdex: Ah, I only have the express install. Don't think it has an ide?
01:59 < mscdex> Smashcat: express comes with an ide
02:00 < Smashcat> mscdex: Ah yeah, never opened it before
02:00 < mscdex> :-)
02:03 < garthk> So, per the latest node up: is SSL absolutely, positively busted, or only for loaded servers?
02:03 < garthk> s/node up/NodeUp/
02:05 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
02:13 < Smashcat> Looks like it's the serialport extension that's crashing node. Still have no idea why (never used VS2010, so don't know how debugging is done there). Anyway, hasn't crashed at all since disabling all the serialport code.  Going to have to see if there's another way to access the serial port from JS!
02:14 < langpavel__> astropirate: yes, of course ;-)
02:24 < TehShrike> What should I use for sending emails?  emailjs, nodemailer, pony, or something else?
02:25 < astropirate> tehShrike try gmail
02:26 < astropirate> tehShrike or Outlook 
02:26 < timeturner> nodemailer works well with postfix sendmail
02:26 < timeturner> but in production you should probably utilize a service
02:26 < timeturner> like mailchimp or something
02:27 < TehShrike> This is for something along the lines of resetting passwords
02:27 < TehShrike> Many unique one-off emails
02:27 < timeturner> ah
02:27 < timeturner> then yeah nodemailer is cool
02:27 < TehShrike> I was hoping to get by on a Dreamhost SMTP account for as long as possible
02:28 < TehShrike> nodemailer looks pretty robust
02:28 < TehShrike> But then, so does emailjs, and of course pony looks light and substacky
02:28 < timeturner> you can get by with nodemailer just fine. I'm using it right now and it works with postfix right out of the box
02:28 < timeturner> yeah
02:28 < timeturner> there are a lot of choices
02:30 < wookiehangover> nodemailer++
02:32 < mscdex> Smashcat: you can switch the build to Debug and run it
02:32 < mscdex> Smashcat: or maybe building a debug build with node-gyp is enough to show errors
02:40 -!- mode/#Node.js [+o ryah] by ChanServ
02:40 < Smashcat> mscdex: It's something to do with the build I think. My version of VS2010 only builds 32bit apps, although I'm on 64bit windows. So it wouldn't build serialport from the 64bit version of node. So I installed the 32bit version and it seemed to build it ok. However I'm guessing it didnt' actually build it correctly
02:45 -!- mode/#Node.js [+o ryah] by ChanServ
02:45 < mscdex> Smashcat: you need the windows sdk if you want to build 64-bit
02:45 < mscdex> 7.1 sdk
02:46 < mscdex> in addition to vs2010 express
02:46 < mscdex> Smashcat: where is it crashing in your app exactly? is it something i can reproduce on my end?
02:47 < Smashcat> mscdex: (downloading the SDK now) No it's totally random. Sometimes it crashes within a minute, sometimes 5 minutes. No errors
02:53 < Smashcat> hehe, the SDK won't install either. Doesn't even give me any useful error. Kind of wish the serialport guys would just release binaries
03:08 < Smashcat> I get the feeling that Node isn't going to work for me ;-) Going to switch to Java I think, so I can get things working - thanks for the help anyway!
03:20 < jmoyers> did i really just.. read that?
03:21 < Zak> there's nothing wrong with Java
03:21 < Zak> i don't think there's anything wrong with nodejs either
03:21 < jmoyers> save for having a shitty container no matter what, hibernate, jsp
03:22 < Zak> you're talking about frameworks
03:22 < jmoyers> I'm talking about the state of java in production
03:22 < Zak> Java in production is fine
03:22 < jmoyers> the jvm, the java community w/ orms, cruftiness
03:22 < jmoyers> its just a bummer.
03:22 < jmoyers> don't get me wrong, i have 6 guys working for me writing java all day long
03:23 < jmoyers> i know its fine in production
03:23 < Zak> programming languages are like tools
03:23 < Smashcat> I use it quite a bit for Android apps, along with small desktop apps - so I don't use any big frameworks. Works fine for me.
03:23 < Zak> people get different results using them and some tools are better than others for certain jobs
03:23 < Zak> saying that Java is crap, is like saying a screwdriver is a bad tool
03:24 < jmoyers> yes and I'm saying, anything i'd use java for (save for android development ;-)) i'd rather use node for
03:24 < jmoyers> every time
03:24 < Zak> i use nodejs for a lot of prototyping
03:24 < Smashcat> jmoyers: What, games? ;-)
03:24 < Zak> and i can say that i would definitely look into another language, if in the end, i thought there were going to be performance issues
03:25 < Zak> i think thats the right approach tbh
03:25 < jmoyers> java isn't crappy. other than the fact that when they actually add proper anonymous functions. also namespace based lookups that always fail the first fifty times
03:25 < jmoyers> games?
03:25 < jmoyers> no idea what that means.
03:25 < Smashcat> jmoyers: "anything i'd use java for (save for android development ;-)) i'd rather use node for"
03:26 < jmoyers> no. how about anything to do with the web, servers or io
03:26 < jmoyers> games being one small subsection of that.
03:26 < timeturner> java is amazingly spectacular
03:26 < jmoyers> and in fact one of the most demanding.
03:26 < Zak> there are actually some great games written in Java
03:26 < timeturner> it even has support for optional parameters!... not
03:26 < Zak> i remember looking into it and I was surprised
03:26 < astropirate> i heard Java gives you aids
03:26 < astropirate> best avoid it
03:26 < Zak> having said that, it's probably not one of the best choices for writing a game
03:26 < timeturner> aids was discovered early on
03:26 < jmoyers> oh yea, if we are talking about the right tool for the job
03:27 < jmoyers> java is the best for games!
03:27 < jmoyers> oh .. wait what?
03:27 < Smashcat> does node.js have access to webgl?
03:27 < Zak> why would it...
03:27 < timeturner> now they say it's just a slow death till you figure out that you should have moved onto something else a while back
03:27 < Zak> nodejs is server-side, web-gl is more so a client-side technology
03:28 < Smashcat> Zak: Just wondering, as jmoyers was suggesting he'd use it in preference for anything save android dev?!
03:28 < Zak> i don't like quoting star wars, because i'm going to sound like a huge nerd...
03:28 < Smashcat> I actually wasn't sure if there was a client-side component
03:28 < Zak> but yeah, only siths deal in absolutes
03:28 < Zak> :P
03:28 < Zak> maybe its because i'm getting old. When I was younger, i definitely had a more "pure" or "perfect" approach
03:29 < Zak> As I've gotten older, I've found that compromise actually achieves the best result.
03:29 < jmoyers> there is no pure or perfect
03:29 < jmoyers> im not suggesting that
03:29 < Zak> That applies to nearl anything
03:29 < Smashcat> Zak: Same here really - use a lot of languages, and don't really have any great disdain for anything that does the job
03:29 < jmoyers> I'm saying, for personal happiness, if i was considering java as a potential solution, i would probably choose node over it.
03:29 < jmoyers> i can't think of even a single reason.
03:29 < Zak> fair enough jmoyers 
03:30 < Zak> as i said, i've been prototyping a lot of stuff in nodejs
03:30 < Smashcat> jmoyers: What you're saying doesn't make much sense though. If you were considering a tech for a GUI app, then node wouldn't be an option over java
03:30 < jmoyers> i wouldn't write a fucking gui app in java
03:30 < jmoyers> thats retarded
03:30 < Zak> Smashcat: i think he would be comparing the two languages in the domain they compete in
03:30 < jmoyers> straight up
03:31 < jmoyers> so i wouldn't consider node either
03:31 < timeturner> I'd rather be jobless than be forced to work in java
03:31 < Smashcat> jmoyers: Really? The guy who wrote Minecraft seemed to do quite well with Java ;-)
03:31 < Zak> i tried to write a GUI app in Java once... boy, that was painful
03:31 < Zak> and when I say GUI, I'm talking about a desktop application for business use
03:31 < jmoyers> i .. i can't even
03:31 < Zak> some of those frameworks are very painful
03:31 < jmoyers> go write your commercial desktop app in java
03:32 < jmoyers> you can go do that
03:32 < jmoyers> i will do my own thing
03:32 < Zak> i think Java would be okay for writing games in
03:32 < Zak> i've never done it. I know a few people who dabble
03:33 < jmoyers> i .. . i just don't understand
03:33 < jmoyers> if you're a serious independent game developer
03:33 < Smashcat> jmoyers: I don't really mind what you do, but you seem to be comparing apples to oranges. node is a server-side tech, and java is either client or server. So node can't always be an option in preference to java as it only covers a subset of the functionality
03:33 < jmoyers> you're looking at like, unity
03:33 < jmoyers> or an engine like that
03:33 < timeturner> 100 lines in java without comments would be less than 50 lines in javascript with comments and line breaks
03:33 < jmoyers> that is rooted in real performance and actual capability, being used for real things
03:33 < timeturner> java on the client side is worse
03:33 < Smashcat> jmoyers: You don't think java is used fr "real things"?
03:33 < timeturner> instead of killing yourself
03:33 < astropirate> you will all bow to haskell!!!!
03:33 < timeturner> you kill your users too
03:34 < jmoyers> come forward into this decade
03:34 < Zak> astropirate: i did haskell at uni. I loved it, but i don't really use it anymore.
03:34 < astropirate> 100 lines of java is like 10 lines of haskell #trueStory
03:34 < jmoyers> realize that the java vm on the desktop is garbage
03:34 < Zak> it depends on what you're doing
03:34 < danheberden> i'm confused why there's an argument about java, on the topic of game development, in #node.js
03:34 < astropirate> Zak, no oppertunity to use it in production?
03:34 < danheberden> that's like "my car can't haul a ton of gravel in the trunk"
03:34 < Zak> astropirate: never been employed to us it
03:34 < timeturner> danheberden++
03:34 < jmoyers> right exactly
03:35 < Smashcat> jmoyers: Sounds like you've had a bad time with Java :-) Anyway, plenty of people make a lot of money with it with gui apps/games, so kind of voids your argument really
03:35 < danheberden> though i heard they have a lot of great game platforms for php
03:35 < Zak> Smashcat: sort of
03:35 < danheberden> maybe try in #php?
03:35 < Zak> just because plenty of people do it, doesn't make it easy or enjoyable
03:35 < danheberden> require_one('webgl.php');
03:35 < timeturner> java is still alive because of Oracle and Google
03:35 < danheberden> boom done
03:35 < timeturner> otherwise it would be dead a long time ago
03:36 < Smashcat> Zak: Meh, I don't mind it. Prefer C++, but much of a muchness
03:36 < timeturner> now C++ is the way to go personally
03:37 < Zak> all i tried to say is, they're all tools at the end of the day
03:37 < Zak> if you don't like a tool, its probably going to be your loss
03:37 < Smashcat> Zak: Agreed
03:37 < Zak> and i'm talking about languages... not frameworks
03:37 < danheberden> you could maybe write a game using node-ncurses
03:37 < danheberden> that could be retro/cool
03:37 < draginx`> whats a good way to escape all HTML in nodejs?
03:37 < Zak> the same argument can be said for frameworks too though
03:38 < Zak> but yeah, just because you think hibernate sucks, doesn't mean JAva sucks
03:38 < Zak> same as, just because somebody might not like nodejs, doesn't mean javascript sucks
03:39 < Smashcat> Zak: I like the idea of Node.js, and would be using it on the next project if it did what I needed. Can't have an app quitting out though, so I don't feel that confident in it at the moment. (I do a lot of event work where the installations have to run round the clock without hitches)
03:40 < Zak> i would try and reduce the problem to its simpliest form and submit code
03:40 < jmoyers> .. . .
03:40 < Zak> it could be a number of things; bug, code, etc
03:41 < Smashcat> Zak: I get the impression some extensions aren't tested on Windows as thoroughly as other platforms. Maybe I'm wrong there.
03:41 < Zak> it's hard to know what your problem is, without being able to look at the code and/or reproducing the issue locally
03:41 < Zak> what extension are you using?
03:42 < Smashcat> The one I was rambling about earlier "serialport"
03:43 < Smashcat> Needed it to handle the stream of data coming from the sensors connected to an Arduino, but it's too unreliable here.
03:43 < Zak> can you reduce the problem to something very simple?
03:43 < Zak> maybe try submitting it to the github page
03:44 < Smashcat> Yep, 1 line: var sp = new SerialPort('COM9',{ baudrate: 9600 });
03:44 < Smashcat> After some random amount of time, node quits out.
03:44 < Zak> what are you expecting it to do?
03:44 < Smashcat> Not quit out ;-)
03:45 < Smashcat> Currently it's just writing the stream out to the console
03:45 < Smashcat> (there's also websocket code etc, but that's not being used in the tests)
03:46 < Zak> let me take a look
03:47 < Zak> i don't even know if i have a serial port on this machine
03:47 < Zak> but i'll see what happens for me
03:47 < jmoyers> are you listening for errors?
03:48 < Smashcat> In my case it's using a USB port that's connected to a microcontroller acting as a serial port. You'd need something similar I think - at least as UART
03:48 < jmoyers> .on('error', function(msg){ console.log(err); });
03:48 < jmoyers> just claiming it 'quits out' is a little silly
03:48 < Zak> yeah, i would do what jmoyers is suggesting first
03:48 < Zak> at least look at the supported events
03:48 < jmoyers> node quits when there are no listeners left.
03:48 < Smashcat> jmoyers: Yes, I have several event handlers, obviously. And it does just quit out, no errors, nothing in the windows log.
03:48 < mscdex> Smashcat: have you tested on Linux?
03:49 < Smashcat> mscdex: I can't use this project on Linux, it has to be Windows 7.
03:49 < mscdex> :S
03:49 < Smashcat> Not my choice - client ;-)
03:49 < mscdex> i mean just to test to see if it crashes there too
03:49 < mscdex> then you can narrow it down a bit
03:50 < Smashcat> mscdex: I only have a linux server here, up in my attic, and I cba to go up there and plug the microcontroller into it at the moment ;-)
03:50 < mscdex> Smashcat: why not run a vm instead?
03:51 < Smashcat> mscdex: What, run linux in a VM, to run node inside that?
03:51 < danheberden> if you aren't getting *any* error, i'd work more to find out why _that_ isn't happening
03:51 < danheberden> if you are indeed listening for them
03:51 < mscdex> Smashcat: yes, as a test to see if it's something in Windows-specific code or something more general
03:51 < mscdex> Smashcat: much easier than dragging out a machine in the attic ;-)
03:52 < Smashcat> danheberden: Yes I am listening. Sometimes It quits after about 15 seconds, with no errors. As though there's memory violation or something, but there's no error message of any kind.
03:53 < Smashcat> mscdex: Yeah, I might take a look tomorrow - going to sleep soon though, it's 04:51 here at the moment and I have a meeting at 09:00 :-(
03:53 < Smashcat> s/tomorrow/today
03:53 < mscdex> heh
03:53 < mscdex> Smashcat: also out of curiousity, i wonder if serialport2 works for you
03:54 < Smashcat> mscdex: No, couldn't even get that to install - did try it
03:54 < mscdex> Smashcat: that was the fork of serial port that initially had Windows support before it was merged upstream
03:54 < mscdex> oh :/
03:54 < Zak> i couldn't even get that thing to run
03:54 < Zak> i think i need VS2010 or something and i don't have that
03:54 < mscdex> you pretty much need vs2010 for anything node
03:54 < mscdex> afaik
03:54 < Smashcat> Zak: Yes, you'll need a serial device for it
03:55 < jmoyers> you need it for native extensions.
03:55 < jmoyers> not anything node.
03:56 < mscdex> anything node = node + extensions
03:56 < mscdex> you can compile node with mingw too i think still, but nobody does
03:56 < jmoyers> yeah, but there's an installer now :-)
03:57 < jmoyers> not that i use windows
03:58 < mscdex> right, but what i was saying was that the installers install a node executable built with vs2010 :-)
04:00 < Smashcat> By the way, I did use Node on a project that went live this month on Oxford street in the London. It's used to sync up 15 PC's displaying Flash animations across a bunch of TVs and monitors in a shop window ;-)
04:01 < Smashcat> (done that one for Samsung - was a bit awkward when someone was suggesting Apple Mac minis to run the displays - heh)
04:01 < mscdex> neat
04:03 < niggler> what is "the >ondon"
04:03 < Smashcat> Also going to be using it in a project for Google next month (already done a couple for them) combination of Arduino, Node and Android to control some robotic equipment. Should be fun for people
04:03 < niggler> *"the London"
04:03 < Smashcat> Heh, well I'm tired
04:03 < niggler> le tired?
04:03 < Smashcat> the tired
04:06 < mscdex> Smashcat: you said you looked in the event log.... did you also look for FTH events?
04:06 < Smashcat> Yeah, so if you're in London, it's the "Hi TV!" display in John Lewis' window that's running on Node ;-) Also uses motion sensors, speech recognition and DMX lighting etc, all running from Node and front-end JS. PHP is used for logging
04:06 < Smashcat> FTH?
04:06 < mscdex> fault tolerant heap
04:07 < Smashcat> mscdex: Just looked, empty
04:07 < mscdex> ah ok
04:11 < Smashcat> mscdex: Yeah, as it's just quitting with no output at all, I'm thinking something's going so drastically wrong that Windows is just killing the process.
04:11 < Smashcat> But I'd expect some log of it
04:12 < mscdex> ok i just confirmed what i remembered.... that can happen on segfaults
04:13 < Smashcat> Heh, at least Liux tells you it's a segfault. Ah bless Windows
04:13 < Smashcat> *Linux
04:13 < mscdex> well, anything besides Windows will hehe
04:13 < Smashcat> heh, yeah
04:15 < Smashcat> Going to have to go with Java for this one now I think. Got an install starting next week, so need to get it tested over the weekend - still waiting for hardware to arrive to run it on
04:18 < Smashcat> Well I better go - cheers
04:21 <@Nexxy> mbalho, 
04:36 < naufal> hello guys
04:37 < naufal> does anyone have blog about node shell remote tutorial?
04:39 < naufal> node sleep.js
05:16 < draginx`> Anyone here made asolution for Stamps.com?
05:27 < tnorris> anyone think the ability to update app code while the app is still running it worth investigation?
05:31 < owen1> can someone explain this package and a usecase for it? https://github.com/dominictarr/mux-demux
05:31 < owen1> http://substack.net/images/freestyle_streams.png
05:31 < owen1> it must be important according to this drawing..
05:36 < astropirate> tnorris, no. forget you ever had the idea
05:38 < tnorris> astropirate: heh, why's that?
05:40 < substack> owen1: http://substack.net/images/mux_demux.png
05:41 < owen1> substack: oh. now i got it!
05:41 < owen1> (:
05:42 < owen1> is it for your talk in lisbon or china?
05:42 < owen1> i don't understand what is this package and when is a good situation for using it.
05:45 < samholmes> Hey, I forgot where and how I'm running bouncy.
05:45 < owen1> samholmes: simple load balancing
05:46 < samholmes> owen1: I know. But I forgot where I have it running, so I don't know how to restart it
05:46 < owen1> let's say u got 2 websites u want to run on the same machine, and access each one with different domain
05:46 < owen1> foo.com and bar.com
05:47 < samholmes> Found it. It was under init.d
06:28 < niloy> can someone point me to command-line based markdown converter?
06:32 <@Nexxy> niloy, you can make any of them "command-line based"
06:32 <@Nexxy> #!/usr/bin/env node
06:32 <@Nexxy> chmod +x
06:33 < niloy> Nexxy, thanks
06:35 < terinjokes> bah, eventually I'll figure out the syntax for node-ctypes
06:36 < terinjokes> but for now: "TypeError: Cannot read property '0' of undefined"
06:38 < deoxxa> hm
06:38 < deoxxa> github is throwing 500's for organisation pages for me
06:46 < tnorris> deoxxa: same for me.
06:46 <@Nexxy> ditto ._.
06:58 < terinjokes> hrm, node-ctypes doesn't seem to be handling offsets very well
07:14 < hdon-> hi all :) is 0.6.15 very old?
07:14 < hdon-> seems it's from april
07:14 < hdon-> looks like i built this binary
07:14 < hdon-> lol
07:15 < naufal> hi
07:15 < naufal> do you ever look into tower.js ?
07:15 < naufal> it say nodejs framework
07:16 < SomeoneWeird> yes its old hdon- :)
07:17 < TehShrike> Wow, tower.js just combines all the buzzwords, doesn't it?
07:17 < naufal> rails like
07:20 < deoxxa> why the hell do they call it tower.js when it's all written in coffeescript
07:29 < [AD]Turbo> hola
07:37 < syskk> hi everyone. need advice on something. should I commit the node_modules directory?
07:37 < syskk> is it considered good or bad practice
07:37 < blakmatrix> syskk: I wouldnt
07:39 < blakmatrix> syskk: with the availability of npm bundled with node and the ease of which to type 'npm i -d' its just unnecessarily inflating your app
07:40 < bigkevmcd> also, if you switch platforms, if there are binaries, it doesn't work
07:40 < hdon-> well, upgrading fixed my issue with http.request() thanks SomeoneWeird 
07:40 < syskk> right 
07:41 < syskk> if i have some home made npm modules i need for the project
07:41 < syskk> i guess i can put them in a library/ directory
07:42 < syskk> would be nice if npm install; would recursively install modules for all packages in a directory
07:42 < syskk> ah nvm
07:42 < syskk> it should do that right
07:45 < SomeoneWeird> it does if the module has a package.json syskk 
07:45 < mikrowelt> guys Raimiss is a spam bot
07:45 < mikrowelt> ban him plz
07:45 < syskk> yea, just realized that
07:51 < mikrowelt> Can someone tell me plz: are 'promises' good to use?
07:52 < terinjokes> mikrowelt: gets you out of callback hell
07:52 < terinjokes> and issue with node-ctype fixed and pushed
07:53 < terinjokes> sanity continues
07:53 < mikrowelt> but will it take alot resources?
07:53 < terinjokes> not
07:53 < terinjokes> s/not/no/
07:53 < mikrowelt> good )
07:57 -!- mode/#Node.js [+o Nexxy] by ChanServ
07:57 -!- mode/#Node.js [+b *!*ukitas14a@*.static.zebra.lt] by Nexxy
07:57 -!- Raimiss was kicked from #Node.js by Nexxy [Raimiss]
08:05 < xico> Hello everyone.
08:06 < xico> Can anyone help me with a session/redirection problem in Express?
08:22 < terinjokes> bonus points if anyone wants to ping rm and have him handle my node-ctype pull request
08:23 < deoxxa> syskk: you could also publish the modules to npm
08:23 < deoxxa> syskk: i mean, if you want to
08:24 < deoxxa> syskk: i have a bunch of things on npm that probably nobody else will ever use, but it makes it easier for me to deploy my stuff and it forces me to document it at least a little bit ;)
08:38 < xico> I need help with loosing sessions when I redirect with express. I can't understand why this is happening.
08:45 < aderuwe> morning guys. i have a node/socket.io app that connects to an irc server. i want to share my 'irc' object between different connections from the same user (multiple tabs, windows, whatever). is this possible?
08:48 < SomeoneWeird> define the vars outside the function then you can
08:49 < aderuwe> SomeoneWeird: keep a global array with each user's unique 'irc' object? something like that?
08:50 < SomeoneWeird> or a global object
08:50 < SomeoneWeird> yes
08:50 < SomeoneWeird> var connections = { "user1": user1socket, "user2": user2socket }; connections.user1.on('whatever')
08:50 < SomeoneWeird> etc.
08:50 <@Nexxy> if you need globals you're doin it wrong
08:51 < SomeoneWeird> "global"
08:53 < aderuwe> Nexxy: how would you deal with objects shared between connections then?
08:57 < xico> aderuwe: You can define the object when configuring your server, and then just pass its reference around into where you're listening for socket events.
08:58 < xico> There, you will have access to it on each incoming request
08:58 < xico> and it will be shared by all code
08:59 <@Nexxy> aderuwe, you could handle it in a number of ways
08:59 <@Nexxy> xico's suggestion sounds reasonable
08:59 < aderuwe> ok, i'll look into it, thanks
09:07 < hemanth> wrt to express is fs.writeFile('usr.json',JSON.stringify(req.body)); bad?
09:07 < hemanth> i just want a json-db for my user reg page 
09:07 <@Nexxy> mbalho, neat talk
09:09 < hemanth> anyone?
09:11 < ruquay> hemanth: i'm not sure what you're trying to do, exactly.  you want to store some user data into a JSON file?
09:11 < hemanth> ruquay, post (ajax) data from a user registration form 
09:12 < ruquay> are you not using a database of some sort?  I would imagine you'd want to keep the data for a while.
09:16 < ruquay> hemanth: the biggest problem I perceive with just writing some post data to a file "usr.json", as I understand it, this is for just a single user.  if you're not doing anything else with the data, the next user data will overwrite that file.
09:20 < ruquay`> hemanth: have you found a solution? (i just switched irc clients and may have missed a message)
09:29 < SomeoneWeird> ruquay, check the fs docs for append
09:33 < ruquay> SomeoneWeird: I'm afraid I may have missed messages (again), sorry. I didn't see anything indicating append, and I wasn't really sure what hemanth was trying to do (I may have missed part of that discussion).  I thought hemanth had written fs.writeFile() instead of append.
09:34 < SomeoneWeird> http://nodejs.org/docs/latest/api/fs.html#fs_fs_appendfile_filename_data_encoding_utf8_callback
09:39 < Guest14706> hi
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < Guest14706> a
09:40 < terinjokes> and now another pull request sent
09:42 < xico> Anyone that knows Express well?
09:42 < terinjokes> and I've got WIP for a third pull request, but (thankfully?) rm is lucky that I'm all sleepy now
09:43 < ruquay> xico: what are you trying to do?  I don't know it super-well, but a bit.
09:43 < xico> ruquay: When I get a request and I set req.session with some data.
09:44 < xico> ruquay: and then I use res.redirect to go to a certain route to finish handling the request
09:44 < xico> but in that process, all modifications I performed on req.session get lost
09:46 < ruquay> and you're using the session middleware from connect, right?
10:00 < xico> ruquay, yes, I'm using everything
10:00 < xico> sessions work perfectly, until I redirect
10:01 < xico> I tried messing with the middleware order, because I read that it isn't only the express.session() that works with the session object ruquay
10:01 < xico> If I use next() instead of res.redirect the session stays intact
10:01 < ruquay> xico: yeah, I thought maybe it would be the order.  the session should definitely be before any other handler
10:02 < ruquay> xico: and of course the cookieParser has to be before that.
10:02 < ruquay> xico: do you have a gist by any chance?
10:03 < xico> I don't have a gist
10:03 < xico> ruquay: I don't even know what that is :P
10:03 < ruquay> xico: did you call the session.save()?
10:03 < xico> no!
10:03 < xico> I was thinking about that!!!
10:03 < xico> :D :D :D
10:04 < xico> I tried to find the method in the expressjs page, but there was no reference to it
10:04 < ruquay> I would recommend calling session.save(), and the callback to that, do redirection
10:04 < xico> I'm gonna try it 
10:04 < ruquay> yeah, I'm looking at the connect docs: http://www.senchalabs.org/connect/session.html#session
10:06 < ruquay> xico: also, make sure to not use the default MemoryStore as the session storage instance, at least in production, as there's a warning against that.
10:07 < xico> Hum I see. I'm using memstore yes :(
10:08 < xico> but development
10:08 < xico> ruquay: I'm using session.save(), but it still gets lost on redirect
10:09 < Ralt> are you doing the direct in session.save()'s callback?
10:09 < xico> yes
10:09 < xico> Ralt: yes, inside the callback :\
10:10 < ruquay> xico: do you have some sample code? you can post stuff here: https://gist.github.com/
10:10 < xico> ruquay: I'll try to sum it up
10:10 < xico> Are you familiar with CoffeeScript?
10:11 < xico> Can it be in coffee?
10:11 < ruquay> xico: yeah, I switched to coffeescript a few weeks ago, and haven't looked back since :-)
10:11 < xico> ruquay: Nice
10:22 < xico> ruquay: Sorry, took me a while trying to make it look cleaner
10:22 < xico> https://gist.github.com/3799027
10:23 < SomeoneWeird> coffeescript is that way ->                                                                                  hell
10:24 < xico> SomeoneWeird: clap clap clap clap. Nice one :)
10:24 < SomeoneWeird> yeah that failed
10:24 < xico> Not from where i'm standing :p
10:24 < deoxxa> SomeoneWeird: lel
10:25 < SomeoneWeird> no u deoxxa 
10:25 < deoxxa> :<
10:26 < SomeoneWeird> :>
10:27 < ruquay> xico: I see that you're using passport, but then calling express session.  it seems that passport requires using its own session?  I'm not actually familiar with passport, so I might be talking out my toes here.
10:28 < xico> Hum, well, passport requires express.session to be active
10:28 < xico> and after that, passport.session also
10:28 < ruquay> xico: I suppose maybe you've just omitted the app.use passport.session() stuff?
10:28 < Ralt> xico are you using a virtual machine for your server?
10:28 < xico> They have the correct sequence on their documentation ruquay 
10:28 < xico> Ralt: No, local server
10:28 < ruquay> xico: yes, I see that, I just didn't see those lines in the gist.
10:28 < xico> on main OS
10:28 < Ralt> k
10:28 < xico> Ys, sorry, I forgot about passport :x
10:29 < Ralt> but coffeescript... meh.
10:29 < BennyLava> but Ralt... meh.
10:29 < ruquay> xico: I don't know if you mean you forgot to put them in the gist, or in your program.
10:29 < xico> first option xD
10:30 < xico> ruquay: forgot to put it in the gist
10:30 < xico> But I respected the order suggested by them
10:30 < ruquay> does passport have its own session.save() maybe?
10:30 < xico> It could have.
10:30 < xico> I'll check it out
10:30 < ruquay> like i said, I'm not really familiar with passport, as in I only heard of it a few minutes ago from you.
10:32 < xico> ruquay: "If your application uses persistent login sessions, passport.session() middleware must also be used."
10:33 < xico> maybe I'm using passport.session() and I should only be using it if I wanted to store on Redis or MongoDB :x
10:33 < xico> I'm gonna try to remove it
10:34 < xico> OMG
10:34 < xico> it was that!
10:35 < xico> I was using the passport.session()
10:35 < xico> but since I'm not using a persistent store, it was clearing my session and I lost everything
10:35 < xico> ruquay: Thank you for your critical thinking ;)
10:37 < ruquay> xico: no problem.  thank you for introducing me to passport, looks pretty cool with support for openid.
10:39 < xico> openid and Oauth
11:03 < ansolas> :)
11:13 < jcoglan> if I want to print something to the console when my npm package is installed, how do I do that?
11:14 < milani> use scripts
11:14 < milani> post install script
11:14 < jcoglan> as in , "scripts": {"post-install": "./scripts/post_install.js"} ?
11:14 < jcoglan> is that the right syntax?
11:15 < milani> jcoglan, it is "postinstall"
11:15 < milani> without the dash.
11:15 < BennyLava> docs are overrated.
11:15 < milani> and you need to add node
11:15 < milani> node ./script/....
11:16 < jcoglan> "scripts": {"postinstall": "node ./scripts/post_install.js"}
11:16 < jcoglan> so the script.postinstall content is executed by the shekk
11:16 < jcoglan> s/shekk/shell/
11:16 < jcoglan> and will pwd be the root of my package?
11:17 < deoxxa> jcoglan: try it out and see
11:19 < mikrowelt> guys can someone help me out to understand promises?
11:20 < mikrowelt> http://pastebin.com/abyaM6DK this is my come....
11:21 < mikrowelt> the console log shows : asd1, asd2 and stops
11:21 < mikrowelt> after the first return
11:21 < deoxxa> mikrowelt: i'm guessing there's documentation for whatever library you're using
11:22 < deoxxa> mikrowelt: i'm also guessing that how to use it is documented there
11:22 < deoxxa> mikrowelt: and i have to guess these things because i have no idea what library you're using
11:22 < phrearch> hi
11:23 < phrearch> i wonder how i can do something like for(field, value in boundform.fields) 
11:23 < mikrowelt> deoxxa: im using 'q' .... i know thye have it reading but still cant get answer for my function((
11:23 < mikrowelt> the documentation is very poor
11:23 < phrearch> or should i access its value inside the for loop?
11:24 < mikrowelt> phrearch: u wanna go throu all fields?
11:24 < chilts> phrearch: yeah, inside (if you're using plain JavaScript)
11:24 < chilts> if you're using a library like underscore, it'll help you a little bit :)
11:24 < ruquay> mikrowelt: is the 'q' library set in stone?  async could do what you want, is widely used, and well documented.
11:25 < mikrowelt> ruquay: TY <3
11:26 < rio{> Hi, which is the best module to use for images with Imagemagick?
11:26 < rio{> Any community standard?
11:28 < SomeoneWeird> rio{, https://npmjs.org/browse/keyword/imagemagick
11:28 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:29 < medikoo> mikrowelt: if it doesn't reach 'asd3' it means that 'new _dbServer' ends with an error
11:30 < medikoo> mirkowelt: to expose that error ust end your chain with '.end()'
11:30 < rio{> SomeoneWeird: Yeah thats kinda why I am asking, since theres a dozen of them
11:30 < medikoo> mikrowelt: when working with promises it's very very important to end chains with 'end()' otherwise errors become silent
11:30 < SomeoneWeird> rio{, dunno, maybe look at the one with the most stars or forks and go from there
11:31 < deoxxa> a high ratio of stars to forks is good
11:32 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:33 < mikrowelt> medikoo: TY may be i should try using async?
11:33 < thl0> mikrowelt: async is a very big library that may be over kill for what you are trying to do
11:34 < medikoo> mikrowelt: promises are much better abstractions than callbacks, and async is just aid for callbacks, short-term may feel better but long-term limited
11:34 < thl0> mikrowelt: for simple flow control try: https://github.com/isaacs/slide-flow-control
11:34 < medikoo> mikrowelt: you may also try: https://github.com/medikoo/deferred (I'm the author ;-)
11:35 < BennyLava> Oh boy, ANOTHER async lib
11:35 < thl0> mikrowelt: of if you don't need things running in parallel https://github.com/thlorenz/runnel will do - super small module
11:36 < phrearch> chilts: thanks for the tip
11:37 < mikrowelt> guys i just wanna use this flow thing for not making alot of functions and stuff... i just want some action to be togher like in this case when u connect to mongo u need to do a lot of callbacks... i dont wanna do function newServer, connectServer, openServer and a callback for db..... i wanna do just 1 like... connectDB and the results u get an opened bd connections with a DB selected
11:37 < chilts> phrearch: no worries :)
11:38 < mikrowelt> and i really dont like the fact that alot developers do the same thing....))) so i just like new this stuff i need to know what is good and what is bad ))
11:38 < thl0> mikrowelt: in that case https://github.com/thlorenz/runnel would be just perfect
11:38 < mikrowelt> and its really hard 
11:39 < medikoo> mikrowelt: here's explanation how to use deferred with mongoose: http://stackoverflow.com/questions/11912573/node-js-deferred-promisify-mongoose/11931908
11:40 < thl0> mikrowelt: you should probably read through the source of some of the flow control libs and understand what they do, maybe write your own
11:40 < thl0> mikrowelt: that way you'd be better off making the right decision
11:40 < substack> use streams
11:40 < substack> deferreds are like a shittier version of what you can build with .pipe()
11:41 < thl0> substack: for flow control?
11:41 < thl0> substack: and use on('data') to pass args - results down the pipe?
11:41 < mikrowelt> thl0: yeah thats a greate idea but since im new to async couse i was using php..)) but may be i will when ill be more experienced
11:41 < substack> oftentimes you can rework abstractions to be streaming instead of using callbacks as much
11:41 < substack> thl0: you shouldn't really be doing .on('data', fn) much at all
11:42 < substack> just using pipes and duplex streams and through streams
11:42 < deoxxa> +1 on streams being nice
11:42 < mikrowelt> streams is something that can help me resolve my mongo connection problem? )(
11:43 < medikoo> substack: streams are more about continuous data flow not single asynchronous calls, it won't fit every use case well
11:43 < thl0> substack: maybe you could include an example with your stream-handbook
11:46 < thl0> substack: so my function would be invoked via s.write and pipe thru the results via s.emit ?
11:46 < thl0> substack: function being what would be my callback in traditional flow control
12:03 < natsume> want some help, does anyone know where is the source file for the console object in node.js?
12:03 < natsume> is the console.js in the lib folder ?
12:04 < RLa> hm, looks like
12:04 < RLa> tho i have no idea where they promote it as global
12:07 < natsume> there is a startup.globalConsole function in node.js
12:07 < natsume> so the console behavior is defined in console.js ?
12:08 < RLa> i would assume so
12:08 < RLa> you want better console?
12:08 < RLa> with more bells and whistles?
12:08 < natsume> thanks, i want to change the output to android logcat
12:08 < RLa> oh
12:09 < natsume> cause by default the output is to stdout
12:09 < natsume> android's blackhole
12:09 < RLa> i think you can just assign new functions for .log and .error
12:09 < RLa> yeah, in embedded systems its common to send output to serial port
12:10 < natsume> so u mean ?
12:10 < natsume> assign new functions ?
12:10 < RLa> yes, console.log = function(string) {}
12:10 < SomeoneWeird> console.prototype.log
12:10 < RLa> i doubt the console is frozen object
12:11 < SomeoneWeird> it's nto
12:11 < SomeoneWeird> not*
12:11 < thl0> natsume: source is here: https://github.com/joyent/node/blob/master/lib/console.js
12:11 < natsume> thanks
12:12 < natsume> so the console.log function is defined by exports.log = function() {...} ?
12:12 < RLa> hm, v8 supporting frozen objects at all?
12:13 < SomeoneWeird> pretty sure it does
12:13 < SomeoneWeird> not 100% tho
12:14 < thl0> natsume: the module exports both the constructor for a Console and a constructed console writing to stdout and stderr 
12:14 < thl0> natsume: actual log function is on line 52
12:15 < natsume> ah this source is different from mine
12:15 < natsume> my version is 0.6.15
12:16 < RLa> in 0.8.9 there is no constructor
12:16 < thl0> natsume: https://github.com/joyent/node/blob/v0.6/lib/console.js
12:16 < ootje> does anyone have a recommended logging module that supports console+file(rotating) logging? (and actually doesn't work in 0.8)
12:17 < ootje> er does work :p
12:17 < thl0> natsume: but you should probably upgrade to 0.8.x
12:17 < ootje> or "doesn't bork" :p
12:17 < natsume> in 0.6 there is no constructor
12:18 < thl0> natsume: true, there you only get a console writing to stdout and stderr (not as flexible)
12:18 < RLa> yeah, i think those are just functions attached to console module
12:18 < RLa> thl0, in 0.8.9 it's same, is it different in 0.9 series?
12:18 < natsume> but the function writes to process.stdout
12:19 < natsume> if i change process.stdout to a file or other place ?
12:19 < thl0> natsume: you can compare the different branches https://github.com/joyent/node/branches
12:20 < thl0> natsume: probably not a good idea, if you want to redirect logging, use a proper logger
12:20 < thl0> natsume: ie: https://github.com/flatiron/winston
12:21 < SomeoneWeird> <natsume> thanks, i want to change the output to android logcat
12:21 < natsume> since i'm using paddybyers' anode, i'm not sure if i should upgrade to 0.8.x
12:21 < SomeoneWeird> thl0, ^
12:22 < natsume> a proper logger should be a good idea for that
12:22 < SomeoneWeird> mhm
12:24 < RLa> natsume, is logcat working through file?
12:25 < RLa> then closing stdout and reopening as the file would work
12:26 < mikrowelt> guys can some check out my code and help me? Im using async and trying to connect to mongo with that... everything is cool it works but after all flow is down the return value is undefiend but when i console log right before return... it returns what need... plz help(http://pastebin.com/Zxps8eg8)
12:28 < natsume> logcat don't work through file
12:28 < natsume> but logging into files is already better than stdout
12:29 < SomeoneWeird> define "after return" mikrowelt 
12:29 < thl0> mikrowelt: try console.log(arguments) to see what you get passed (maybe it doesn't call you with an err object)
12:30 < thl0> mikrowelt: also inside flow control return doesn't work, you always have to call back
12:30 < mikrowelt> oohhh
12:30 < mikrowelt> so ineed a callback that saves the value right?
12:31 < thl0> mikrowelt: whatever you want to do, but once you are in a callback chain you have to stick with it until done
12:31 < mikrowelt> but i return in the end
12:31 < SomeoneWeird> mikrowelt, add a callback arg to this.init and then call that when you're done
12:32 < mikrowelt> oooh
12:32 < mikrowelt> ok
12:32 < thl0> mikrowelt: returning a value from inside callback chain doesn't work
12:32 < mikrowelt> but it is the last one... i mean i return not in chain
12:32 < guor> RLa, v8 supports frozen objects, but performance sucks
12:33 < mikrowelt> i return in speacial handler that handles err and result
12:33 < mikrowelt> ok i try what u said
12:37 < thl0> mikrowelt: yeah, just stay in a callback chain until you archieved what you meant to do
12:40 < zonetti> does anyone already solved the ENOBUFS issue?
12:40 < BennyLava> s/does/has/
12:41 < mikrowelt> thl0: <3
12:41 < mikrowelt> ty
12:43 < zonetti> we have an API that receives and sends data from/to 5 APIs, like a Router... and when we started it on a windows server (64bits 16GB RAM btw), after a while we got ENOBUFS... any advices?
12:47 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:59 < jamiel> Hi all, is this the best place for some jsdom questions? I'm having some issues getting access to the variables in my DOM. I fetch a page using http.get and turn the response into a string. I then pass this to jsdom using something like var window = jsdom.jsdom(responseString).createWindow();
12:59 < jamiel> But this window object doesn't have any of the variables from that responseString available, even though the window.document.innerHTML seems to have the entire responseString I just sent it
13:00 < jamiel> Calling in that way should be synchronous right? So it's not that it hasn't had time to parse the scripts yet? I have jsdom.defaultDocumentFeatures set to ProcessResources: ['script']
13:15 < e_s_p> I'm looking for help in distributing a Web application via npm
13:15 < deoxxa> e_s_p: public or internal?
13:15 < e_s_p> I think the only thing I need to do is make sure it has a /bin/ script and prefer a global install
13:15 < e_s_p> deoxxa: public
13:15 < deoxxa> ah, then yep
13:15 < deoxxa> that'll pretty much do it
13:15 < e_s_p> http://activitypump.org/ <-- this
13:16  * deoxxa reads
13:16 < e_s_p> deoxxa: I wonder if there's a way to strongly suggest using "forever"
13:16 < e_s_p> I guess you'd just use forever like you would with any other binary program
13:16 < deoxxa> yeah
13:17 < deoxxa> some people might want to use upstart or whatever
13:17 < e_s_p> So maybe I'll just make a note
13:17 < e_s_p> Right
13:17 < deoxxa> (i use forever too, but other people might not)
13:17 < e_s_p> Or monit or what have you
13:17 < e_s_p> One last dumb question, and sorry for this...
13:17 < deoxxa> heh
13:17 < e_s_p> But do you use hash-bang syntax in node scripts to install them to bin?
13:17 < e_s_p> Like #!/usr/bin/node as the first line?
13:18 < e_s_p> or does npm just take care of that?
13:18 < e_s_p> I guess I could find out on my own now that I think of it
13:18 < deoxxa> yeah, use a shebang
13:18 < deoxxa> but use `#!/usr/bin/env node'
13:18 < e_s_p> Gottit
13:18 < e_s_p> That's what I was intending actually
13:18 < e_s_p> Did I say last dumb question?
13:18 < deoxxa> i've got node installed at ~/local/n/current/bin/node for example
13:18 < e_s_p> I have one more
13:18 < deoxxa> yay for questions!
13:18 < e_s_p> I know a few good apps -- vows, forever, ...
13:19 < e_s_p> what are some other ones to look at as good models for installing an app through npm?
13:19 < deoxxa> uglifyjs, seaport
13:20 < deoxxa> ender, docco, couchapp
13:20 < deoxxa> (just looking at what i have installed)
13:20 < e_s_p> ha ha
13:20 < SomeoneWeird> hoarders
13:20 < deoxxa> hahaha
13:20 < SomeoneWeird> >..
13:20 < SomeoneWeird> >.>
13:21 < SomeoneWeird> wonder how long it would take to install that haha
13:21 < deoxxa> let'
13:21 < deoxxa> let's find out
13:21 < e_s_p> hoarders, yes
13:21 < SomeoneWeird>    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
13:21 < SomeoneWeird>       0. opan saurce LOL
13:21 < deoxxa> deoxxa@kasai:~/work/scratch$ time npm install hoarders
13:22 < deoxxa> now we wait
13:22 < SomeoneWeird> hehe
13:22 < spion> does that actually work now?
13:22 < SomeoneWeird> it didn't work?
13:23 < spion> npm would bail out with an unspecified error after a while
13:23 < SomeoneWeird> oic
13:23 < deoxxa> that's a pretty great stress test
13:24 < deoxxa> aw
13:24 < deoxxa> it died
13:25 < deoxxa> the number of 404s there is surprising
13:25 < spion> keep in mind that it will also install separate dependencies... for each module :)
13:25 < deoxxa> yeah
13:30 < spion> which makes me wonder, does npm go breadth-first or depth-first when installing dependencies?
13:35 < mikrowelt> guys any1 know how to stop the next flow step in async?
13:36 < mikrowelt> return will do the case?
13:37 < aderuwe> gah. anyone here use node-irc?
13:53 < SomeoneWeird> <aderuwe> gah. anyone here use node-irc? < i do
13:55 < aderuwe> SomeoneWeird: i was wondering how to avoid sending or whois'ing a nickname that doesn't exist, cause node-irc just throws an exception then. but i can just check my list of connected users before.
13:55 < aderuwe> it's a lovely lib, but a bit unwieldy. maybe it's just me.
13:56 < SomeoneWeird> hm havn't had that problem
13:56 < SomeoneWeird> try catch?
13:57 < aderuwe> yeah, that should work, too
14:41 < jondot`> hey guys. i'm doing 1000 api calls to a webservice, and within each of those, i have 1000 calls to Redis. using async I do parallel maps in each, this means that I have 1M calls in parallel in flight
14:42 < jondot`> something about this causes tons of memory usage and eventual grind to halt (due to GC pauses)
14:42 < jondot`> is there any way to throttle this?
14:43 < jondot`> (i saw forEachLimit in async, but looks like it doesn't help that much)
14:44 < RLa> i think the usual solution is do it through concurrency queue and set concurrency limit on the queue
14:44 < RLa> see async.queue
14:46 < jondot`> RLa: i see. somehow I thought I can fire-and-forget async actions with node, since its evented, and it'll take care of everything - in this scale (millions) is it incorrect?
14:48 < jondot`> nevermind that, i just added up the numbers. my main pain points here is the GC i guess.
14:48 < RLa> most async functions accept callback which is called when the operation completes
14:49 < jondot`> RLa: yep. i'm doing this kind of math, I've benchmarked a normal service at 1300req/s on the machine. so now i have more or less 1M operations to do
14:49 < RLa> this callback can be used for making next item in queue to do its work, that's how async operations can be serialized
14:49 < jondot`> thats around 5-6 minutes of work, which sits right. problem is, when reaching around minute 3-4 I'm already looking at a 1.8GB memory, and GC pauses of around a second
14:49 < RLa> yes, you should throttle calls
14:50 < jondot`> and each throttling should be determined by the type of machine I run on
15:00 < mikrowelt> hooorrrraaaayy i did some stuff that is working))
15:00 < mikrowelt> ohh my god im so cool
15:00 < mikrowelt> ^^
15:02 < medikoo> mikrowelt: :)
15:02 < mikrowelt> now i need to find out how to commit this usin git )
15:02 < mikrowelt> im so lame
15:15 < danshipper_> this is a longshot but does anyone have experience getting SocketIO to work on Internet Explorer 9 with SSL. I'm running into issues with both FlashSockets and JSONP
15:17 < xico> What could be the problems of creating and using global variables in Node.JS?
15:19 < timeturner> they're global
15:19 < timeturner> and you really don't want global variables unless you really have to
15:19 < timeturner> like in the case of testing via mocha
15:24 < john999> hey guys, I have a strange behavior with MongoDb, maybe someone knows what is happening
15:25 < john999> when I do an insert and not define the _id the object i'm inserting will be duplicated
15:25 < john999> when I do the insert with a defined _id it's gonna be fine
15:26 < CoverSlide> john999: how i mongo supposed to know the record that is supposed to get updated?
15:27 < john999> well when you call insert, it generated an _id for you, I don't understnad your question
15:27 < john999> I'm using mongodb 1.1.7 btw
15:28 < CoverSlide> yes, it generates an id for the new record that identifies the record. in order to know which record to get updated, you send it the same ID so it knows which one
15:28 < CoverSlide> if you don't supply an id, it just thinks you want to create a new one
15:29 < john999> yeah, but it duplicate my record upon a simple insert, I'm not trying to update it
15:29 < john999> the DB is blank, I call insert, the db contains 2 record
15:29 < john999> both record are identical but they have different _id
15:29 < CoverSlide> what library are you using?
15:30 < john999> mongodb 1.1.7 "a node.js driver for MongoDB"
15:30 < john999> by Christian Amor Kvalheim
15:30 < SomeoneWeird> lol.
15:32 < john999> is that the right library for mongo?
15:32 < SomeoneWeird> https://npmjs.org/browse/keyword/mongo
15:33 < SomeoneWeird> i think a lot of people use "mongodb" and mongoose
15:35 < john999> I'm using mongodb
15:35 < ruquay> john999: you can use "upsert" with an update() call to combine insert/update
15:36 < ruquay> john999: or, if you want an error produced, you can define some unique key. but it's perfectly legal to have two "exact" copies of data in the database (they will actually differ on the _id field)
15:38 < john999> I understand that, I'm just confused because whenever I add an entry without defining it's _id variable, the entry is automaticaly duplicated.
15:39 < ruquay> that would be the expected behaviour.
15:39 < john999> it is!?
15:39 < ruquay> yeah, the same thing would happen with any database.  SQLite creates a rowid automatically, and you can insert duplicate rows (they will differ in rowid)
15:40 < ruquay> unless you create some other unique key.  I guess it would be technically possible to create a unique key across all fields, but you *don't* want to do that.
15:41 < ruquay> is it a problem to make sure you add the _id property?
15:41 < john999> it's not, but I feel there's something else happening
15:41 < john999> I think i'm not being understood about what is happening
15:41 < john999> let me rephrase it
15:41 < ruquay> what kind of data are you dealing with, if i may inquire?
15:42 < john999> just a log data {type:"ERROR",msg:"Something went wrong"}
15:43 < john999> and I call myDb.insert( {type:"ERROR",msg:"Something went wrong"});
15:43 < john999> then my database contains:
15:43 < ruquay> is the issue one of not "filling up" the collection? because you can also use capped collections.
15:44 < john999> humm
15:44 < john999> what do you mean by filling up the collection?
15:44 < ruquay> you could do this: myDb.update({type: "ERROR"}, {type: "ERROR", msg: "..."}, {upsert: true})
15:45 < ruquay> and that would always replace the record that matches {type: "ERROR"}
15:45 < ruquay> I just meant about "filling up" if the problem was that maybe you didn't want the collection to grow without end.
15:45 < john999> no it's fine if it grows without end
15:46 < john999> it's a log server so I just record all logs without ever removing them or updating them
15:46 < ruquay> I suppose I'm a bit confused about what it is you want/expect to happen.  If multiple errors get logged, then there would be multiple entries in the collection, which seems all right and good to me.  I guess I don't get what you're aftert.
15:48 < john999> kk, it's quite simple, just 1 error is logged, but then my db contains 2 log. They are both the same entry but with different _id. The entry has been somehow duplicated. 
15:48 < john999> for example
15:48 < ruquay> john999: reading back over your messages, it seems that maybe you're only calling myDb.insert() once, but there are 2 entires?
15:48 < john999> YeS!!
15:48 < ruquay> ah, yes, my guess would be that in fact it is getting called twice.  is there maybe a missing return in a function?
15:49 < ruquay> or an event listener is maybe getting attached twice to something?
15:50 < john999> i don't believe so, I've put a console.log() inside the insert function of mongodb and it is only called once
15:50 < plato> ruquay: is myDb.insert() your own function? if so, put a console.log statement at the top of it
15:50 < plato> hehe
15:50 < SomeoneWeird> lol
15:50 < john999> the insert is from Collection of collection.js of mongodb
15:51 < john999> Maybe I'm missing an option when I initialise my connection with the db that makes the DB behave in a wierd way
15:51 < SomeoneWeird> would help if you gave some code :)
15:52 < john999> also there's a function in mongodb that generates the _id when it is not included. this function is also called just once
15:52 < ruquay> SomeoneWeird: yeah, that's what I'm thinking about now.
15:53 < john999> ok, I'll simplify my code and try to reproduce it in a simple example
15:53 < plato> john999: you sure there's no issue with stale db code? i.e. did you change a schema or soemthing that requires you to restart mongodb?
15:55 < john999> I keep restarting my mongodb client but haven't restarted the mondb itself
15:55 < john999> mongo*
15:55 < DallonF> Is it possible to use a console.log() during process.on('exit')? I'm not seeing any logs, at least on Windows. Node 0.8.11
15:55 < DallonF> http://pastebin.com/SiyVC2YC
15:55 < SomeoneWeird> > process.on('exit', function(a) { console.log("lol") });
15:55 < SomeoneWeird> > process.emit('exit');
15:55 < SomeoneWeird> lol
15:55 < SomeoneWeird> DallonF, ^
15:56 < john999> eheh
15:56 < plato> DallonF: in linux, i tried process.on('exit', function(){console.log('foo')}); and hit control c twice (to close node repl)
15:56 < plato> it did indeed spit out foo
15:57 < ruquay> it seems to be in the docs, as well: http://nodejs.org/api/process.html#process_process
15:57 < john999> you're calling exit inside the exit event, isn't that your problem?
15:57 < SomeoneWeird> yeah, it should work
15:57 < SomeoneWeird> and lol, yes john999 
15:57 < DallonF> SomeoneWeird: Well, thanks, but manually raising the event doesn't help in my case :)
15:57 < SomeoneWeird> yeah i'm just saying it works
15:57 < SomeoneWeird> get rid of process.exit();
15:58 < DallonF> SomeoneWeird: Removed it, still getting the same result (no log)
15:58 < DallonF> http://pastebin.com/aje5V1Kg
15:59 < CoverSlide> DallonF: try console.error()
15:59 < JasonWoof> how do I get process.stdin.on('data'   to fire each time I type a character?  (instead of just when I hit enter)
15:59 < DallonF> Interesting - If I put "process.exit()" at the end, it runs the event. Maybe it only gets called for a natural exit?
15:59 < SomeoneWeird> it does
15:59 < SomeoneWeird> how are you killing it?
16:00 < DallonF> SomeoneWeird: ^C
16:00 < SomeoneWeird> hm should still work
16:00 < SomeoneWeird> i just tried your code in my repl and it works fine
16:00 < ruquay> DallonF: I'm getting output when I close stdin, but not when I kill the process
16:00 < DallonF> SomeoneWeird: Stupid Windows...
16:00 < CoverSlide> closing stdin closes the event loop
16:01 < CoverSlide> and thus exits the process naturally
16:01 < SomeoneWeird> whats "process.stdin.resume();" achieving in this case?
16:01 < CoverSlide> you need to resume stdin in order to read from the console
16:01 < DallonF> Well, my end goal is to determine if closing the process with the Task Manager raises a SIGTERM
16:01 < ruquay> DallonF: I doubt it's just windows.  When I ^C on linux, I'm getting no output.
16:01 < SomeoneWeird> works for me ruquay 
16:02 < ruquay> SomeoneWeird: interesting.  I wonder what it depends on...
16:02 < SomeoneWeird> DallonF, process.on('SIGTERM', function() { console.log('yerp'); });
16:02 < ruquay> DallonF: you can... yeah, what SomeoneWeird says...
16:02 < DallonF> Basically, we have a CLI that runs another CLI with forever, but one user tried to close it with the Task Manager and it just kept restarting - so I'd like to prevent that
16:03 < SomeoneWeird> just check if there's already one running?
16:03 < ruquay> DallonF: do you want to override forever with the task manager then?
16:03 < DallonF> SomeoneWeird: I'm not getting a log from SIGTERM, but I'm not sure if it's due to it not actually receiving the event or just weirdness with logging
16:03 < DallonF> ruquay Yeah, basically
16:03 < ruquay> DallonF: or do you want to prevent someone closing it with TM?
16:04 < SomeoneWeird> require('child_process').exec('taskkill /IM node.exe')
16:04 < SomeoneWeird> :p
16:04 < DallonF> ruquay: If a user closes it with TM, it should just close instead of being hydra-like like it is now
16:05 < ruquay> DallonF: maybe you could catch SIGTERM, and call the stop() with forever?  I'm not sure how possible this is, just an idea...
16:05 < DallonF> ruquay: Yeah, that was the idea, but I'm not sure if SIGTERM is actually getting caught
16:06 < ruquay> DallonF: I think you probably want to catch it with the process.on("SIGTERM"...), rather than in the exit event.
16:06 < SomeoneWeird> DallonF, i presume you're running forever like "forever file.js"?
16:06 < SomeoneWeird> if you wanna kill forever, run forever from you're code 
16:07 < SomeoneWeird> then you have access to it
16:07 < DallonF> ruquay: I know, I didn't get anything from SIGTERM either. I tested the exit event to see if it was a problem with the console
16:07 < SomeoneWeird> your*
16:08 < DallonF> SomeoneWeird: I think we are running it from our code... I didn't actually write this part, one of the Mac guys on our team did...
16:09 < SomeoneWeird> then you can just call forever.stop(0);
16:09 < SomeoneWeird> (i think)
16:09 < SomeoneWeird> (depending on how many processes its managing)
16:09 < DallonF> SomeoneWeird: The problem isn't stopping the process, it's the part where we actually detect if it was closed with the Task Manager
16:09 < SomeoneWeird> ah right
16:09 < SomeoneWeird> so .on("SIGTERM" doesn't work?
16:10 < DallonF> It doesn't appear to - but it might just not be calling console.log()
16:10 < DallonF> Hard to tell
16:10 < ruquay> DallonF: uh, I think maybe ^C is SIGINT, not SIGTERM
16:10 < DallonF> ^C works
16:10 < DallonF> At least in the actual app
16:10 < stuartf> is it expected that when I run `npm prune` everything listed in my bundleDependencies gets deleted?
16:11 < owen1> i run my 2 identical servers using forever (different ports). i want to stop only one of them but they look the same (server.js). is there a way to add name identifier for each?
16:11 < plato> owen1: perhaps each application creates a processid.tmp file containing the processid?
16:11 < ruquay> DallonF: because I just tried (on Linux) to catch SIGTERM, used ^C, and got the same problem.
16:11 < plato> and you can name them separately?
16:12 < SomeoneWeird> hm
16:12 < DallonF> ruquay: Yeah, I can't get console.log() to run on either the 'exit', 'SIGTERM', or 'SIGINT' event
16:12 < SomeoneWeird> try catching SIGSEGV
16:13 < SomeoneWeird> (probably a very long shot)
16:13 < owen1> plato: wait. i can name each process in my server, using process.title ?
16:13 < CoverSlide> yes
16:14 < SomeoneWeird> hm
16:14 < SomeoneWeird> DallonF, 
16:14 < SomeoneWeird> "console.log is non-blocking and puts your message into write queue where it is not processed because of exit()"
16:14 < Industrial> Is there a list of localized startups that use Node.JS ? It's surprisingly quiet in the dutch market :\
16:15 < SomeoneWeird> DallonF, try something like, process.on("SIGTERM", function() { require('fs').writeFileSync('test', 'lol'); });
16:15 < ruquay> Industrial: be louder? :-)
16:15 < TehShrike|Work> substack: lets say you have a process that's accessible via dnode, from the browser and from other processes running on the server.  How would you differentiate between connections from clients, and a connection from another service?  Does it seem reasonable to run those on different ports, and just make sure that the port that other processes use to connect is not publicly accessible?
16:17 < ruquay> DallonF: are you killing the process via the "applications" tab, or the "processes" tab?
16:18 < ruquay> DallonF: because according to http://stackoverflow.com/questions/1527450/can-i-handle-the-killing-of-my-windows-process-through-the-task-manager the "processes" tab killing will do SIGKILL, from which there is no escape.
16:18 < CoverSlide> TehShrike|Work: I think you have a remoteAddress property you can check
16:18 < john999> ohhhhh update: my simple example to show the problem works correctly... I'll figure it out and post my findings.
16:18 < SomeoneWeird> "If you use "End Process", though, the process is killed directly, no messages sent ever"
16:18 < SomeoneWeird> yer ruquay 
16:19 < TehShrike|Work> CoverSlide: interesting.  But is it trustable for security purposes?
16:19 < CoverSlide> can you manage someprivledge separation to prevent users from killing processes they don't own
16:19 < Industrial> ruquay: looking for vacancies ;)
16:19 < DallonF> SomeoneWeird: process.on('SIGINT', function() { throw new Error("SIGINT") });  doesn't even give me a message when I ^C
16:19 < SomeoneWeird> <ruquay> DallonF: are you killing the process via the "applications" tab, or the "processes" tab?
16:19 < ruquay> john999: I would be interested to know what happend :-)
16:20 < john999> I'll let you know
16:20 < DallonF> ruquay: The Processes tab. Looks like I'll have to detect it from the parent process maybe?
16:20 < SomeoneWeird> there may not be a way to detect it 
16:20 < SomeoneWeird> it might kill the process before signals have a chance to be processed
16:20 < SomeoneWeird> -> windows
16:21 < ruquay> DallonF: the simplest solution might be to train whoever is closing the process to use the CLI to call forever, to stop the process from respawning
16:22 < DallonF> ruquay: Yeah, we're not really in a position to tell our users that they're closing it wrong :) 
16:22 < CoverSlide> I'm not a security expert, but I'd say it's generally ok to use
16:23 < CoverSlide> DallonF: don't give your users the same permissions as forever
16:23 < ruquay> DallonF: hmm.  is there any way to get the process to show up under the running applications?  I'm afraid I don't know much about Windows in this regard.
16:23 < ruquay> DallonF: because if that were possible, then closing it from there you could catch the signal.
16:26 < DallonF> I'm starting to think that this isn't worth my time :) I'll just have the Mac guy make sure it works with SIGTERM and SIGKILL and blame Windows for not behaving like other systems
16:34 < SomeoneWeird> good choice DallonF 
16:53 < bhurlow> HI
16:53 < bhurlow> listen
16:54 < BennyLava> no
16:54 < bhurlow> Hey all, curious about good modules for git push integration 
16:55 < bhurlow> https://github.com/substack/pushover
16:58 < bhurlow> exit
16:58 < bhurlow> quit
16:59 < owen1> getting 'make' is not recognized as an internal or external command    on windows. http://pastebin.com/wkujzm2r          any ideas?
16:59 < owen1> (during npm install)
17:00 < ansolas> windows dont have make as far as i know ?!
17:00 < owen1> ansolas: right..any workarounds? node is used on windows, as far as i know
17:01 < ansolas> i dont know if it is possible, when i encountered such error (i am also on win) i ve choosen a different module :)
17:02 < ansolas> make is a c o c++ compiler no?
17:02 < ansolas> https://www.google.de/search?q=gmake+on+windowd&oq=gmake+on+windowd&sugexp=chrome,mod=13&sourceid=chrome&ie=UTF-8
17:02 < ansolas> hui
17:03 < john999> ruquay: omg lol I found my problem
17:04 < john999> this is almost embarassing, clearly a case of the problem being at 10 inches from the screen, well it's kinda cool too
17:05 < ansolas> hehhe
17:07 < CoverSlide> ansolas: make is a build tool to automate build tasks
17:07 < CoverSlide> it's usually used with gcc, but you can use it for anything
17:08 < john999> in short, I had a "ghost" log server process running that was duplicating insert I was doing. Since I use a redis backend with pub/sub I could have a dozen log server receiving the logs and inserting them in the same database. So since I had this ghost process running whenever I was logging an event from my web server it was inserted twice in the db...
17:08 < CoverSlide> you don't even need to use it for software development
17:08 < john999> this is so stupid, but kinda cool at the same time...
17:09 < ansolas> ok
17:10 < ansolas> so how does owen can make it work ?
17:10 < CoverSlide> https://github.com/joyent/node/wiki/Installation << there's a section called "Building on Windows"
17:12 < CoverSlide> you can try and get it to build on mingw, but I don't think they've even tried to get it to work that way
17:16 < CoverSlide> oh for native modules ... hmm
17:54 < DaMorpheuS> .
18:27 < zonetti> anyone?
18:28 < astropirate> no
18:28 < niggler> lol
18:29 < zonetti> do you guys create exceptions? Or throwing Errors is enough? :o
18:29 < plato> zonetti: http://stackoverflow.com/questions/10603860/very-simple-node-js-client-throws-error-enobufs-after-many-http-requests 
18:29 < plato> possible workaround
18:30 < zonetti> plato, I already "solved" that :o
18:30 < zonetti> plato, but thnx anyway :D
18:30 < plato> what was your 'anyone' in reference to
18:30 < plato> the only other messages i saw from you related to the ENOBUFS issue
18:31 < zonetti> yes.. I was searching for someone online to ask another thing
18:31 < zonetti> about exceptions :o
18:32 < Ralt> throwing an error is what's often done, except if you have an in-project exception handling
18:32 < Ralt> because js catches anything with `catch (e)`
18:36 < Franz__> somebody knows this module: joose ?
18:37 < niggler> jooze
18:37 < niggler> joobs
18:39 < plato> they took our joorbs
18:40 < niggler> took err jerbs
18:47 < suess> anyone have recommendations for node profiling tools?
18:50 < tnorris> suess: might try out this: http://valgrind.org/
18:51 < tnorris> suess: run it like this: `valgrind --leak-check=full --show-reachable=yes --trace-children=yes --log-file=valgrind.out node script.js`
19:00 < tnorris> just wrote my first script that can update itself after the file has changed without restarting the process. it will be interesting to see all the ways this goes wrong.
19:17 < joebobjoe> What is a "spinning script" as defined by https://github.com/nodejitsu/forever
19:18 < chapel> joebobjoe: spinning means it keeps crashing
19:18 < chapel> usually within a predetermined time, usually < 5 seconds
20:14 < tnorris> so is the maximum size of a Buffer 1GB because v8 limits the size of a single sequential ASCII string to 1GB?
20:17 < duko> is anyone here using mustache for i18n international text?
20:17 < duko> I'm wondering how to handle content that would exist in multiple elements
20:17 < duko> like a multi-paragraph description
20:20 < bradleymeck> tnorris: buffers are outside of the v8 heap, but please do not make a buffer of that size, ever
20:22 < tnorris> bradleymeck: I'm aware (just filled 6GB of RAM using 6 buffers ;-), and why not?
20:24 < bradleymeck> tnorris: having that large of object in memory unless you are doing something crazy like reimplementing a memory allocation strategy is 1. going to destroy locality on the translation lookaside buffer 2. probably means you are loading something for large computations or static assets otherwise and would be better suited in some other language meant for large memory/cpu bound tasks
20:26 < tnorris> wow. well put. ok, well never had the intention to. just like to know where the limits are.
20:30 < mcmlxxix> any iisnode users here?
20:30 < mcmlxxix> (waits to be kicked)
20:38 < Raynos> o/
20:38 < Raynos> Is there a module for `getPath(object, "foo.bar.baz")` ?
20:39 < Raynos> dotty!
20:58 < wereHamster> are there tools to detect unused require() statements?
20:59 < niggler> you can lint and find undefined variables wereHamster 
20:59 < niggler> jshint, for example, can tell you (--show-non-errors argument)
20:59 < tnorris> wereHamster: how many require statements do you have in a single script?
20:59 < niggler> *unused variables
21:01 < tnorris> ah, ok
21:01 < wereHamster> tnorris: in one file I have, about 10
21:01 < wereHamster> but it's not about how many. After refactoring, there may be require statements that are not needed anymore
21:01 < RLa> also, some ides will color unused variables
21:04 < niggler> is there a way in one fell swoop to include all scripts in a directory?
21:04 < wereHamster> niggler: readdir sync for each require
21:04 < niggler> gah
21:06 < draginx> whats the cleanest way to see if something is undefined or "" ?
21:09 < RLa> niggler, i think there is require-all package
21:20 < q_> does anyone have webstorm working with Language Injection and ejs ?  Tired of looking at red lines
21:21 < RLa> red lines in html?
21:21 < CoverSlide> nobody likes milhouse!
21:21 < CoverSlide> i mean webstorm
21:25 < q_> CoverSlide, theres supposed to be same way of saying "Treat this as an HTML file, except for things surrounded in <% %>, thats javascript" ... but I cant seem to get it
21:26 < CoverSlide> maybe look for a plugin, or write your own
21:32 < terinjokes> anyone here from Joyent?
21:34 < TehShrike> Does anyone know of a good lightweight event emitter library for the browser?
21:34 < BennyLava> browserify -> require('events') -> win!
21:34 < TehShrike> That sounds too easy! :-D
21:38 < BennyLava> And if you're not using browserify (WHY?), I like smokesignals.
21:39 < terinjokes> i don't use node in the browser, that's why ;)
21:39 < niggler> how does browserify handle fs?
21:40 < BennyLava> terinjokes: what?
21:40 < TehShrike> niggler: it doesn't https://github.com/substack/node-browserify#compatibility
21:40 < BennyLava> terinjokes: is that a bad joke or do you just not get it?
21:40 < terinjokes> BennyLava: a bad joke
21:40 < terinjokes> s/^terinjokes:.*$//
21:41 < RLa> there's also this: https://github.com/jeromeetienne/microevent.js
21:41 < RLa> 20 lines
21:42 < BennyLava> but really, fucking use browserify
21:42 < niggler> s/ing use//g
21:42 < BennyLava> niggler: scrub
21:42 < TehShrike> How do I get the events shizzle out of browserify?
21:42 < BennyLava> out of?
21:43 < TehShrike> Yes, this particular app is not a candidate for a build process involving browserify
21:43 < BennyLava> eh, just grab it from github?
21:43 < niggler> how is 'fucking use browserify' acceptable but not 'fuck browserify'?
21:43 < TehShrike> smokesignals looks pretty reasonable
21:44 < BennyLava> but that won't work out of the box
21:44 < BennyLava> since it needs to be require()'d
21:44 < BennyLava> niggler: stop hating
21:45 < BennyLava> you just don't know what's good for you
21:45 < niggler> BennyLava: stop loving
21:45 < niggler> you just don't know what's bad for you
21:45 < BennyLava> well, you're going on ignore - gg
21:45 < niggler> browserify isn't a panacea, and to misrepresent it as such will confuse newcomers even more
21:46 < niggler> ignore the truth at your peril
21:46 < BennyLava> you must be the biggest fucktard I've come across in a while
21:46 < TehShrike> 8-|
21:46 < TehShrike> Apparently BennyLava knows no reality without extremes
21:46 < BennyLava> I just know reality
21:46 < BennyLava> There is only one, so
21:47 < BennyLava> now sure how it could be either with or without extremes
21:47 < BennyLava> not sure*
22:00 < resting> how do i uninstall node installed compiled from git (i think)
22:00 < RLa> make uninstall :)
22:01 < RLa> provided you still got source
22:01 < EhevuTov> just made a demo for our VP of Sales of a prototype for a product using Node, Event Stream, Socket.io and Dojo Toolkit. If they make me redo it in .NET or some BS I'm going to cut off a pinky
22:01 < gluxon> EhevuTov: .NET.. or sockets?
22:01 < gluxon> *for
22:02 < EhevuTov> gluxon, I have no clue how I'd do it in .NET. I work for a MS shop and they don't like non-MS stuff for inane reasons
22:02 < gluxon> EhevuTov: No, I was saying that .NET is a horrible framework to write sockets in.
22:02 < gluxon> Or ANYTHING in...
22:02 < EhevuTov> honestly, I think if they told me to redo it in ASP or something, I'd start updating my resume
22:02 < EhevuTov> gluxon, lol I agree
22:03 < resting> RLa: ya i have it..will it remove all in directories and stuffs created during the install?
22:03 < EhevuTov> what is sad, is that I demo'ed something almost exactly the same LAST YEAR to my boss and he didn't run with it at all
22:03 < gluxon> EhevuTov: Are your employers sponsored by Microsoft? Microsoft has a habit of doing some vendor lock-in crap with the companies they give money to.
22:04 < RLa> resting, probably yes
22:04 < resting> ok..shall try it then
22:04 < EhevuTov> gluxon, oh right, i've heard of that. I don't think so. I think they're scared of losing autocompletion in the IDE(Visual Studio). I'm not joking.
22:04 <@Nexxy> EhevuTov, ._.
22:04 < gluxon> Like, take Dell. They started selling PC's with Ubuntu, but stopped after Microsoft told them to stop (or else they'd stop funding Dell)
22:05 < gluxon> ....
22:05 < gluxon> auto-completion...
22:05 < gluxon> This is a sick world we live in..
22:05 < EhevuTov> gluxon, Nexxy here's my simple demo if you're interested: http://youtu.be/w8lL-vOs9ME
22:07 <@Nexxy> EhevuTov, crazay
22:11 < CoverSlide> agreed, i tried to make a simple REST client in .NET, ugh that was a horrible experience. had to do tons nested try/catches using the standard library
22:11 < gotwig> jo
22:12 < CoverSlide> as much of a mental shift it takes to use callbacks, considering the alternative, i don't want to go back to blocking io
22:12 < EhevuTov> yeah, I work at a telecom "realtime" company, so it's strange that they use .NET
22:14 < gotwig> I wanna realize something like a server that offers an API for a webapp, so the webapp recives JSON calls from the server, but the server gets its data from XML resources, and filters the data out with stuff like (l)xml . How can I do that?
22:14 < tjholowaychuk> CoverSlide you can have non-blocking io without callbacks..
22:14 < derekderekpionee> i'm a node.js noob trying to figure out how to do nested db queries. i'm guessing i need some sort of async library
22:14 < tjholowaychuk> :p
22:14 < derekderekpionee> http://pastie.org/4858042
22:15 < derekderekpionee> i can't figure out how to write the response only when those queries are all finished
22:16 < derekderekpionee> 1. make a query on database, get two rows returned.  2. loop through those rows and make another db query using data from those rows.   3. when data is returned from the second query for both rows write a response to the server
22:16 < derekderekpionee> how do i do this?
22:16 < derekderekpionee> everything i try ends up with my response being written before all the db queries are finished?
22:17 < EhevuTov> derekderekpionee, make your own .on('finish') event?
22:17 < CoverSlide> use a counter
22:18 < derekderekpionee> any example code anywhere?
22:18 < drudge_> derekderekpionee: use async
22:20 < derekderekpionee> drudge_, you mean async.js the library?
22:20 < thl0> derekderekpionee: you can do something similar to https://github.com/thlorenz/dog/blob/master/lib/utl.js#L132
22:20 < drudge_> derekderekpionee: yes
22:21 < EhevuTov> derekderekpionee, maybe use a callback that decrements a global var from rows.length and if the global var reaches 0 .emit('finished', somedata)
22:21 < drudge_> https://github.com/caolan/async#forEach
22:21 < thl0> derekderekpionee: knowing the number of queries to be processed, you'd count down til you reach 0 and then call back with the response
22:22 < thl0> derekderekpionee: in your case the 'entries' would be 'queries'
22:27 < duko> is anyone here using gettext for i18n international content?
22:27 < derekderekpionee> thl0, cool, i might even make a blog with this
22:30 < EhevuTov> anyone have an example of passing objects from nested .on('') calls, like .on('connection', function(socket) { stream.on('data'), function(socket) { socket.emit('data') })})
22:31 < EhevuTov> My C mind is stilling unsure about functional scope
22:31 < EhevuTov> anyone have an example of passing objects from nested .on('') calls, like .on('connection', function(socket) { stream.on('data', function(socket) { socket.emit('data') })})
22:32 < EhevuTov> for instance, I'm trying to create and pass back a event_stream instance whenever I get a socket.io connection
22:32 < EhevuTov> so on socket.io connection create and pass back an event_stream
22:35 < derekderekpionee> EhevuTov, for the .emit('finished', somedata) solution i would have another function that would be bound to to the 'finished' event?
22:35 < EhevuTov> yes, so whatever you wanted to happen synchronously when your queries are finished
22:37 < EhevuTov> so, you're queries would execute in a group asynchronously and would also decrement a copy of your query.length and when your length becomes 0 emit your 'finished' event and your watcher will then run your calback function
22:38 < EhevuTov> you might need to create your own event `var event = require('events').EventEmitter` or something
22:38 < derekderekpionee> EhevuTov, ok perfect, that's what i was gonna ask. haven't dug into emitting events yet
22:39 < derekderekpionee> i was about to get started and was like wait a minute, i don't think $('body').trigger('finished') is gonna work
22:39 < EhevuTov> yeah, you could maybe even just use the query object if it has already inherited EventEmmitter
22:40 < EhevuTov> can you make each one of your queries call a function?
22:40 < EhevuTov> call a function when DONE, I men
22:40 < EhevuTov> mean
22:41 < derekderekpionee> yes
22:41 < EhevuTov> oh, yeah you can, so just add another function call in your query callback
22:41 < EhevuTov> and make a new function called decumulator()
22:43 < EhevuTov> var i = query.length; var accumulator = function () { if (i <=0) myevent.emit.("finished"); i--}
22:44 < EhevuTov> then something like myevent.on('finished', function() { console.log("Oh HAI! I'm finished!")})
22:44 < derekderekpionee> and it can pass the results in the emit() function?
22:45 < derekderekpionee> emit.('finished', interestingData)
22:45 < EhevuTov> is your interestingdata one item, or a compilation of all your queries?
22:45 < derekderekpionee> compilation of queries
22:45 < EhevuTov> you might have to build another global array for that
22:46 < EhevuTov> and then pass the array like myevent.emit("finished", compileddata)
22:46 < EhevuTov> I'm kind of shooting from the hip, but that's how I'd hack it and see if it works :-)
22:47 < derekderekpionee> EhevuTov, great, thanks
22:47 < EhevuTov> so, by your `var i = query.length; var array =new Array()` and then do a array.push(result) in your query callback
22:48 < EhevuTov> that's what I'd do at first
22:49 < EhevuTov> oh, you're already doing that with your rhymes lol
22:54 < thl0> derekderekpionee: yeah, go ahead, that's what I wrote dog for!
22:54 < thl0> so you can have a nodejs powered blog to serve from your website
22:55 < thl0> derekderekpionee: comes with a tutorial to get your blog started: http://thlorenz.com/#/blog/post/dog-tutorial
22:55 < derekderekpionee> cool thl0, thanks!
22:55 < derekderekpionee> anybody use backbone.js inside of node.js?
22:56 < derekderekpionee> not for the client?
22:58 < EhevuTov> derekderekpionee, I'm not sure if my scope is right, but I think I also made your for loop more efficient by using a variable instead of query.length each time: https://gist.github.com/3802492
23:00 < derekderekpionee> EhevuTov, awesome man! thank you
23:02 < EhevuTov> derekderekpionee, no prob. I'm not a JS wizard and it's probably wrong, but good luck. You seem like a smart person so you'll get it
23:03 < EhevuTov> derekderekpionee, come to think of it, you don't need that myevent.emitter('finished'). you could just call another function that does your finishing stuff for you
23:04 < derekderekpionee> EhevuTov, yup you're right
23:46 < mykul> hi, i'm having trouble installing node-lame with npm
23:46 < mykul> i get: Checking for library mp3lame             : not found 
23:46 < mykul> Checking for header lame/lame.h          : not found 
23:46 < mykul> during the config phase
23:47 < mykul> is there a general approach to helping npm find the files it needs?
23:47 <@mbalho> npm only does node module deps
23:48 <@mbalho> mykul: you need to use your OS package manager to install lame
23:48 < bingomanatee> does anyone here use soda?
23:48 <@mbalho> mykul: usually such steps are mentioned in node module readmes
23:48 < mykul> mbalho, ive installed the required deps i believe
23:48 < mykul> but they aren't being found
23:51 < mykul> anyway thanks
--- Log closed Sat Sep 29 00:00:38 2012
