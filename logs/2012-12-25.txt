--- Log opened Tue Dec 25 00:00:21 2012
00:02 < jcrew> Cow_woC: not really sure
00:02 < jcrew> Cow_woC: check out zombie.js
00:02 < Cow_woC> jcrew: Which property gets used? Just href?
00:04 < Cow_woC> jcrew: Okay, checking now
00:08 < rudiX> hello
00:09 < Cow_woC> jcrew: Are Buster.js and Zombie.js different "things"? Or do they fall into the same category?
00:09 < Cow_woC> rudiX: hi
00:09 < rudiX> https://gist.github.com/4371099 here I am using curl tu upload image 
00:09 < rudiX> but I dont think its very cool 
00:09 < rudiX> how I can do that with module like - request
00:10 < Cow_woC> jcrew: I also see http://stackoverflow.com/a/12498309/14731
00:46 < ian___> [5~
00:46 < ian___> ds
00:47 <@Nexxy> agreed
00:48 < MelkorNemesis1> hehe
00:58 < mistertwig> hi Nexxy
00:59 <@Nexxy> hi mistertwig
01:00 < mistertwig> what are you doing Nexxy
01:01 <@Nexxy> mistertwig, nodes jsing
01:01 < mistertwig> very swell
01:01 <@Nexxy> extemely
01:04 < samholmes> FInally got a mac!!!!
01:04 <@Nexxy> samholmes, it's all downhill from here
01:05 < samholmes> Is that good or bad? :S
01:05 <@Nexxy> that depends on how much you like artisan locally roasted coffee
01:07 < samholmes> Nexxy: Idk. I like coffee though
01:07 < samholmes> Com'on macs are awesome
01:08 < samholmes> Coming form a Sony VAIO with Vista, this is amazing!
01:08 < samholmes> Unix bash-y-ness without all that cygwin/mingw shizz
01:08 < samholmes> What's a good irc client for mac?
01:08 <@Nexxy> oh, yeah
01:09 <@Nexxy> samholmes, irssi
01:13 < st_luke> limechat
01:13 < jcrew> i like irssi
01:20 < samholmes> I like something that's not like a terminal
01:20 < samholmes> Colloquy works for me..just too many wintows
01:20 <@Nexxy> samholmes, no
01:20 < samholmes> windows*
01:20 < samholmes> brb
01:20 <@Nexxy> [20.06.20] < samholmes> Unix bash-y-ness without all that cygwin/mingw shizz
01:20 <@Nexxy> embrace the terminal
01:20 < jcrew> i tweet from cli
01:21 < jcrew> i also brush my teeth with cron
01:21 < samholmes> Why embrace the terminal?
01:21 <@Nexxy> cron is the original reminder ap
01:21 <@Nexxy> app*
01:21 <@Nexxy> samholmes, well with irssi running on one of your VPSes
01:21 <@Nexxy> you can close the window on your precious mac whenever you like
01:22 <@Nexxy> and you stay online
01:22 < samholmes> Why would you want that?
01:22 <@Nexxy> you can also IRC from any computer with a terminal emulator
01:22 < thealphanerd> for the scroll back samholmes for the scrollback
01:22 <@Nexxy> samholmes, for logs, hilights, etc
01:22 < thealphanerd> and to do super well at the idle rpg
01:23 <@Nexxy> eah!
01:23 < jcrew> also for the uptime
01:23 <@Nexxy> Thu Dec 13 22:57:37 2012 <- my logon time for freenode
01:23 <@Nexxy> but I rarely have the irssi window open
01:23 < jcrew> 17:08 - Uptime: 26d 8h 43m 42s
01:23 < thealphanerd> Nexxy: any experience with appjs or node-webkit?
01:23 <@Nexxy> nope!
01:24 <@Nexxy> I rolled my own solution before appjs was a thing
01:24 <@konobi> 17:21:27 up 1060 days
01:24 < thealphanerd> Nexxy: I bet chu did :P
01:24 < jcrew> konobi has the largest penis
01:24 <@Nexxy> I beg to differ
01:24 < thealphanerd> trying to make standalone compiled apps with node
01:24 < jcrew> i have the largest in the world but he wins on the internet
01:24 <@konobi> i used to have a machine that had 3000 on the clock
01:25 <@Nexxy> thealphanerd, yeah I haven't done any of that, sorry
01:25 < st_luke> Nexxy++
01:25 <@Nexxy> konobi, in your closet?
01:25 < st_luke> irssi is awesome
01:25 <@konobi> Nexxy: DC in ireland
01:25 <@Nexxy> I used to run FreeBSD 5 from my closet!
01:26 < thealphanerd> Nexxy: no worries… sorry you have become my go to person to ask questions to… you are just so friendly
01:26 <@Nexxy> it had a pretty nice uptime
01:26 <@Nexxy> thealphanerd, d'aww <3
01:26 < st_luke> I remember when my server was in my living room sucking up power
01:26 <@Nexxy> no apologies
01:26 < st_luke> way back before VMs were a thing
01:26 <@konobi> yeah, that was a 4.3 server
01:26 < thealphanerd> yldneirf os tsuj era uoy …ot snoitseuq ksa ot nosrep ot og ym emoceb evah uoy yrros …seirrow on :yxxeN
01:26 < thealphanerd> there… I think that reversed it
01:26 <@Nexxy> I remember just barly getting the kernel to recompile so I could run xmms
01:27 <@Nexxy> thealphanerd, yeah that should cancel out :D
01:27 < thealphanerd> phew
01:27 < st_luke> I was too lazy to write a script to tell me when my isp assigned the server a new ip so I had to get a monitor out every month and a half
01:27 <@Nexxy> LOL
01:27 < jcrew> hahahaha
01:28 < thealphanerd> I loe when lazyness causes more work
01:28 < st_luke> I would get like 5 new public IPs at a time, way back before ipv4 rationing
01:28 < jcrew> isn't that the main source of it work?
01:29 < jcrew> IT^
01:29 < st_luke> jcrew: haha yep
01:29 < jcrew> that was a laziness joke
01:30 < jcrew> it was pretty clever and only available via text, it would have been lost had it been said aloud
01:30 < st_luke> I mainly used it for torrenting via ssh from work and to test out things on my own hardware before doing it at work so I wouldn't break any infrastructure
01:31 < st_luke> screwing around was a lot more costly when everything was a physical server
01:31 <@Nexxy> it was like high stakes baccarat!
01:32 < st_luke> it was kinda cool
01:32 < st_luke> a good buddy's early days working at the data center he deleted a whole server accidentally
01:33 < st_luke> so like ~200 customers' shit was just gone suddenly
01:33 < thealphanerd> rm -rf /
01:33 < thealphanerd> ooops
01:33 < st_luke> yep
01:33 < st_luke> it was a good time
01:33 < thealphanerd> I on accident baleeted all ur tings
01:33 < st_luke> there were no backups
01:33 < jcrew> did he still have a job after that?
01:33 < st_luke> yea, shit happens
01:33 < st_luke> a couple really crafty admins stayed up really late and recovered everything
01:34 < st_luke> he got a new nickname, life went on
01:34 < jcrew> ahh, that's kind of a redeeming thing to have happen though
01:34 < thealphanerd> better than a lawsuit
01:34 < jcrew> i mean a good enough reason to keep him employed
01:35 < jcrew> and yea, way better than a lawsuit
01:35 < st_luke> i think a lawsuit against an employee who accidentally does something bad like that would make most of the staff quit
01:35 < jcrew> i agree, i thought you were talking about a lawsuit from customers
01:36 < st_luke> there were a lot of those for various reasons i guess, or threats at least
01:36 < st_luke> that's how the shared hosting business worked
01:36 < st_luke> 5 years ago
01:38 < st_luke> was kind of a crazy place. people were drunk all the time. passed out in the data center. beer pong in the data center all the time.
01:38 < st_luke> look out for those server racks
01:38 < jcrew> i sold a guy a car about a year ago that his wife told him he couldn't have so he told me he'd just bring it back and i'd refund all of his money and we'd be gravy and when i told him "no" (mostly cause i bought a motorcycle with it) he asked me if i had ever been to court and that he'd take me there if i didn't refund his car
01:38 <@Nexxy> jcrew, ahaha
01:39 < jcrew> i asked him if he was trying to extort me and that i'd like to go to court over that and he didn't know what extortion was so he resorted to telling me the car exploded or something
01:39 < st_luke> haha legal threats from people like that are fun
01:39 < s5fs> Nexxy: ahoy
01:39 <@Nexxy> I had a fun experience with that not too long ago
01:39 <@Nexxy> s5fs, hay~!
01:39 <@Nexxy> I'm about to go pick out some wine
01:39 <@Nexxy> what kind should I get?
01:40 < s5fs> Nexxy: white
01:40 < st_luke> I had a freelance client threaten to take me to court if the software didn't work exactly as he described once, then he said "but I bet you wouldn't even be able to afford the legal fees"
01:40 <@Nexxy> oh I see how it is
01:40 < s5fs> Nexxy: we've got mimosa fixings already
01:40 <@Nexxy> can I bring rum too?
01:40 < st_luke> Nexxy: cab sav
01:40 < s5fs> Nexxy: bring whatever makes you happy, esp pants
01:40 <@Nexxy> but pants make me grumpy
01:41 < s5fs> fine, it IS xmas after all
01:41 < jcrew> Nexxy: this is the kind we always drank: http://bit.ly/TTcGF5
01:41 <@Nexxy> cabernet is grandma wine
01:41 < jcrew> st_luke: lol how much was the job worth?
01:42 < st_luke> jcrew: $600, pretty cray right?
01:42 < jcrew> how much is it for small claims court ?
01:42 <@Nexxy> I think that depends on where you live
01:42 < jcrew> 30$ lol
01:43 < jcrew> 30 in cali
01:43 < st_luke> no idea, I've only ever been to criminal court
01:43 < s5fs> no idea, only been for felony charges myself haha
01:43 < deoxxa> CRIMINAL SCUM
01:43 < jcrew> dem crims
01:43 < st_luke> oh and traffic court, but that's everyone on the planet
01:43 < s5fs> (i kid, no felonies)
01:43 < deoxxa> not me
01:43 <@Nexxy> I've never been!!
01:43 < deoxxa> i've never been to traffic court
01:43 < deoxxa> but i don't drive either
01:43 <@Nexxy> I do
01:43 < deoxxa> there's probably a really high crossover there
01:43 < s5fs> deoxxa: i think those two may be related
01:44 <@Nexxy> I've only had 1 ticket
01:44 <@Nexxy> for speeding...
01:44 < st_luke> ok, everyone that drives in upstate ny has been to traffic court
01:44 <@Nexxy> never paid it
01:44 < s5fs> Nexxy: that's a bench warrant these days
01:44 < jcrew> s5fs: nah, correlation = causation and 100% of people driving consume some type of beverage so that is probably more likely
01:44 <@Nexxy> oh well!
01:44 < s5fs> man i hope santa brings me a pony
01:44 <@Nexxy> dihydrogen monoxide
01:45 < jcrew> huffing?
01:45 < deoxxa> Nexxy: the leading cause of structural damage in low-income housing
01:46 < jcrew> deoxxa: according the dhmo.org website it's also the cause of school shootings
01:47 <@Nexxy> we should ban it
01:47 < deoxxa> how many government people did they get to sign that thing?
01:47 < thealphanerd> I've done small claims
01:47 < thealphanerd> sucks
01:47 < jcrew> we can't, because the Friends of Hydrogen Hydroxide club is opposes a ban
01:47 < thealphanerd> you will have to arbitrate a bunch before
01:47 < deoxxa> rofl
01:48 < thealphanerd> most small claims never even gets to court
01:48 <@Nexxy> I think that's the point of the process
01:48 < st_luke> if dihydrogen monoxide had a gun it would be a lot safer
01:48 < jcrew> thealphanerd: that's not what i see on television with Judge Judy it looks like everything gets through :p
01:48 < thealphanerd> jcrew: then go to judge judy :p
01:48 <@Nexxy> she *is* an arbitrator
01:48 < deoxxa> judge judy ftw
01:48 < thealphanerd> Nexxy: BTW… sav blanc
01:48 < jcrew> i just like how rude she is to folks
01:48 <@Nexxy> ok
01:48 < thealphanerd> if you are getting wine
01:49 < thealphanerd> OH
01:49 < thealphanerd> are any of you all in the LA area?
01:49 < jcrew> nut sac town 
01:49 < thealphanerd> putting together a hackathon later this week if any of you would like to get on board
01:49 < deoxxa> > ay! QUIET!
01:49 < s5fs> jcrew: like sacramento?
01:49 < jcrew> can we just facetime a bunch of ipads near each other?
01:49 < jcrew> s5fs: yea
01:50 < s5fs> jcrew: my apologies. i had a branch office there.
01:50 < thealphanerd> jcrew: I might be driving through sacramento next week
01:50 < jcrew> probably the least cool city i've lived in and i lived in alabama, georgia and michigan for quite a while
01:50 < thealphanerd> missus and I are discussing heading to lake tahoe for nye
01:50 < jcrew> thealphanerd: lake tahoe is awesome for nye
01:50 < thealphanerd> can you suggest a specific hotel?
01:51 <@Nexxy> the one with the pool
01:51 <@Nexxy> you know
01:51 <@Nexxy> that one
01:51 < thealphanerd> LOL
01:51 < jcrew> are you into little cabin type places or actual hotels?
01:51 < thealphanerd> jcrew: we are open to whatever
01:51 < thealphanerd> we just don't have ski gear
01:51 < thealphanerd> although we really wanted to go skiing
01:51 < thealphanerd> or want
01:51 < thealphanerd> since it is not yet past tense
01:51 < deoxxa> Nexxy: oh is that the one with the tv as well
01:52  * konobi has 3 ski hills within 30 mins
01:52 < jcrew> thealphanerd: http://bit.ly/10cUnQE
01:52 < jcrew> we stayed here one time when we were up there for races, let me find the other one we've been to 4 or 5 times
01:53 < thealphanerd> no availability for new years :(
01:54 <@konobi> there's always baker
01:55 < jcrew> http://tahoelakeshorelodge.com/photo-gallery/
01:55 < jcrew> we stay here usually when we go up there for races
01:55 < roger_rabbit> have you tried couchsurfing.org
01:55 < roger_rabbit> you might be able to find a ski instructor with an open pad
01:55 < roger_rabbit> happened to me in santa fe
01:56 <@konobi> airbnb 'n all that
01:56 < thealphanerd> those are both options for sure
01:57 < thealphanerd> although couchsurfing is probably not an option
01:57 < thealphanerd> as me an the missus are going to want some privacy
01:57 < thealphanerd> :p
01:57 < jcrew> it's pretty small but pretty nice if you're mostly out and about, we drive up there 4 of us sleep wherever we fit with the bikes and ride the next day and fly back down to sac town
01:57 < thealphanerd> but we have had really good luck with airbnb
01:58 < thealphanerd> Big thing for me I guess will be finding out what is happening in town on nye
01:58 < thealphanerd> and finding a place near whatever is going on
01:59 < thealphanerd> that lakeshore lodge will be expensive though
01:59 < thealphanerd> as I am expecting most places to be unfortunately
02:03 < _numbers> anyone know of an attempt to get express.js to output to the console a log that is similar to ruby/rails' webrick? e.g. listing all the HTTP GET requests
02:04 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
02:04 < deoxxa> _numbers: connect.logger?
02:04 < _numbers> deoxxa: thx sir
02:05 < deoxxa> it's in like, every single express example
02:06 < _numbers> deoxxa: oh i am hoping for output like this http://www.hastebin.com/kixokubole.coffee
02:06 < deoxxa> > .coffee
02:06 < StuPig_> How can i publish nom package to my private npm repository ?
02:06 < _numbers> not sure why  it thinks its coffee but its just plain text
02:07 < _numbers> i see i could use connect.logger to output but was hoping someone has already built a lib for connect/express that intercepts every request and logs it automatically in this type of fashion
02:07 < deoxxa> _numbers: you're going to need to take a step back and think about why that's not practical
02:08 < _numbers> well its like if i made a wrapper for app.get, app.post, app.all, etc. and it just output to console log then called the func
02:08 < _numbers> hows that not practical?
02:09 < deoxxa> how are you going to log the "rendered x template" stuff? how about the "controller" stuff? considering there's no such thing as a "controller" in express
02:09 < deoxxa> if you want rails, use rails
02:09 < deoxxa> nobody's stopping you
02:10 < jcrew> you could hijack jade.render or whatever you're using
02:10 < substack> if you use a raw http server it's easy
02:10 < deoxxa> yes, which would be entirely impractical for an external module to do
02:10 < deoxxa> i'm not saying it's impractical to do that logging
02:10 < substack> you just console.log(req.method + ' ' + req.url) at the top of your request handler
02:10 < jcrew> deoxxa: yea i know, let alone one that behaves asynch
02:11 < deoxxa> but i'm saying you're not going to find a module that exists that does it
02:11 < deoxxa> substack: check the paste, mang
02:11 < substack> anyhow with express you can probably do app.use(function (req, res, next) { console.log(req.method + ' ' + req.url); next() })
02:11 < deoxxa> substack: he wants some ruby-style logging stuff
02:11 < jcrew> substack: he could but that only works for the first line and he gets jumbled logs when the rest of the log spits out (render time and completion time)
02:12 < substack> _numbers: oh that's not too hard
02:12 < _numbers> substack: ya thats probably what i'll end up doing. i was just wondering if connect/express used EventListener  and i could tie into an emit('routed') event or something. or seems like someone would have already done this by now
02:13 < substack> anyhow with express you can probably do app.use(function (req, res, next) { var t0 = Date.now(); req.on('close', function () { console.log(req.method + ' ' + req.url + ' in ' + (Date.now() - t0) + ' ms') }); next() })
02:13 < substack> updated
02:14 < _numbers> substack: ah very helpful thx
02:14 < eduardo> Good eve guys.  What's the difference between var express = require("express"); app = express();  and  server = require('http').createServer(app) ?
02:14 < eduardo> which one is the modern one to use?
02:15 < _numbers> substack: ah i see taht example is already in the app.use() doc :) http://expressjs.com/api.html#app.use
02:15 < _numbers> eduardo: the first example is an express lib. the second example is the connect lib.
02:15 < _numbers> eduardo: express is an extension of connect. it adds more features
02:16 < eduardo> got it! i was missing something in my own code sorry :)
02:34 < _numbers> does node come with a date lib or should i use sugar.js
02:35 < _numbers> npm install sugar -save :)
02:39 < astropirate> _numbers, nope, node doesnt' provide any libs besides IO
02:51 < eduardo> hey guys - i got another question here. I am writing a system where when a certain event occurts in the system (not triggered via socket.io) - I want a certain set of http clients to refresh. I am thinking of using a socket.io message out to them that coauses them to refresh. is that a correct use of socket.io ?
02:57 < Cronoh> i think socket.io's best benefit is that you can build a system that adapts the protocol (Websocket, flashsocket, long polling, etc) based on the client, much easier.  I cannot say if that is the 'correct use of socket.io' but it would work
03:02 < eduardo> Cronoh: would you say that if i have a client-server communication over socket.io, i should avoid parallel communication via HTTP forms?
03:26 < piklu> Hii guys
03:26 < piklu> how is everyone?
03:27 < scar> if im using a script in PHP that would be much more efficient to run in javascript (ie, a tester that tests for # of images in a html document, etc), would it be more efficient to run it on node.js platform, or do it via web? i kinda dont wanna release the code i'll write in JS, and i think node.js lets me hide it
03:29 < pspace> Hi friends. I'm trying to decide between python, ruby, or node.js for implmentation of an html5 game. For python I was considering Flask, Ruby Sinatra with EventMachine, and finally Node.js. I'm leaning towards Node.js since Flask doenst have good web sockets support. Was wondering on opinions about this?
04:07 < StuPig> hey guys
04:07 < StuPig> i can't add user to my private npm repository
04:08 < StuPig> the error log is:
04:08 < StuPig> npm http PUT http://192.168.2.201/registry/-/user/org.couchdb.user:stupig
04:08 < StuPig> npm http 401 http://192.168.2.201/registry/-/user/org.couchdb.user:stupig
04:08 < StuPig> npm WARN adduser Incorrect username or password
04:08 < StuPig> npm WARN adduser You can reset your account by visiting:
04:08 < StuPig> npm WARN adduser 
04:08 < StuPig> npm WARN adduser     http://admin.npmjs.org/reset
04:08 < StuPig> npm WARN adduser 
04:08 < StuPig> npm ERR! Error: unauthorized Please log in before writing to the db: registry/-/user/org.couchdb.user:stupig
04:18 < zcoolx> anyone down to help a n00b?
04:21 < chandru_in> How does the zeromq binding for node work? Does it use a separate thread to handle zmq sockets?
04:22 < chandru_in> It appears to be using uv_poll how does that work?
04:31 < zcoolx> Anyone want to walk through intro steps?
04:33 < deoxxa> zcoolx: hard to help if you don't ask a question
04:33 < zcoolx> dIfference between c9 & heroku?
04:34 < deoxxa> one is an IDE, the other a PaaS provider
04:35 < zcoolx> if im planning on building a questions and answers app --which DB do you recommend using w node.js?
04:36 < thomashunter> postgresql
04:36 < deoxxa> depends what you want it to do
04:36 < zcoolx> storage of Questions & Answers from who and where..
04:36 < deoxxa> postgres is an option, as is mongodb, couchdb, mysql, etc
04:36 < deoxxa> most databases have good drivers for node these days
04:36 < deoxxa> so if you're familiar with one, use it
04:36 < thomashunter> really depends on the relationship between data
04:36 <@konobi> StuPig: nopaste next time please
04:37 < zcoolx> I'm used to mysql
04:37 < zcoolx> so that's important
04:37 < deoxxa> well, there's a very high quality mysql module by mr felixge, so that's certainly an option
04:38 < zcoolx> I want the data to be understood from a contextual level, where people answered and what.. so then we can use another database of content to serve the users.  
04:38 < zcoolx> matching 'pre-defined' data to users based on their answers. 
04:39 <@konobi> leveldb?
04:40 < zcoolx> leveldb looks cool.  thanks @Konobi
04:44 < StuPig> @konobi: can u help me?  i can not add user to my local npm
04:45 <@konobi> StuPig: i don't know the source... but you could check logs
04:47 < StuPig> @konobi: the log only told me {"error":"unauthorized","reason":"Please log in before writing to the db"}'. 
04:47 < StuPig> so i create a issue: https://github.com/isaacs/npmjs.org/issues/87
04:48 <@konobi> maybe the admin config?
04:57 < StuPig_> @konobi admin config? i add a user manul
04:57 < StuPig_> @konobi admin config? i add a user manually, but still not work
05:00 <@konobi> StuPig: you'll have to dig deeper, unlikely to have folks who know about it around for a few days
05:02 < Determinist> anybody using domains in production?
05:20 < _numbers> new node.js web framework in progress https://github.com/mikesmullin/coffee-shop (see video intro)
05:47 < samholmes> Determinist: Did you read that post from twitter?
05:49 < Determinist> samholmes: not sure what you're talking about
05:49 < samholmes> http://snmaynard.com/2012/12/21/node-error-handling/
05:50 < samholmes> I just read this when you sent that message on this channel
05:51 < Determinist> samholmes: interesting. reading this.
05:59 < dankohn> Hi, I'm trying to get started with Sequelize and Postgres and would appreciate some help decoding some errors. Here's my index.js: https://gist.github.com/4371808
06:00 < dankohn> The final error is "at module.exports.ConnectorManager.query (/Users/dan/Dropbox/Documents/dev/db/node_modules/sequelize/lib/dialects/mysql/connector-manager.js:69:15)" which is strange because I've set the dialect to Postgres, not MySQL.
06:09 <@konobi> dankohn: installed `npm install pg` ?
06:13 < dankohn> konobi, I have.
06:20 <@konobi> missing password field?
06:37 < ruff> http://www.youtube.com/watch?v=t0LSkX46dS4
06:44 <@konobi> anyone got suggestions for decent free dns hosting?
06:45 < Determinist> konobi: what's wrong with godaddy?
06:47 <@konobi> *shudder*
06:47 <@konobi> i wonder if opensrs does it
06:56 <@konobi> seems not
07:19 < niftylettuce__> get yur red and green PMS pantone colors right hur https://npmjs.org/package/pantone
07:22 < niggler> lol i always assumed red was the PMS color
07:24 < niftylettuce__> niggler: if u dont want to be status quo... `$ pantone --hex FF0000` says Warm Red and 1788 2X are nice alternatives ;)
07:26 < niftylettuce__> here's direct link to repo: https://github.com/teelaunch/pms-pantone-color-chart /cc niggler 
07:32 < niftylettuce__> what would be a cool tool to have in 2013 for node?
07:35 < GreenDog> a tool that goes through nodemodule github docs and makes them complete and understandable
07:36 < GreenDog> and fixes bugs while it's at it
07:37 < astropirate> GreenDog, and make sandwiches
07:37 < GreenDog> yeah@
07:37 < niggler> find modules with questionable licenses
07:37 < astropirate> I'll be honest, I'm starting to think node.js wasn't worth it :(
07:38 < niggler> there are troll licenses like the "Microsoft Office Extensible File License" https://github.com/stephen-hardy/xlsx.js/issues/8
07:38 < niggler> that was used in xlsx.js that the original xlsx module used
07:38 < mistertwig> astropirate: worth it for what
07:38 < mistertwig> and why
07:38 < niggler> astropirate node.js has value in specific contexts
07:39 < astropirate> niggler, yah just very light weight small applications
07:39 < mistertwig> er no
07:39 < niggler> no astropirate
07:39 < andrew12> it can be used for anything.
07:39 < astropirate> anything that gets bigger becomes a massive nightmare to manage
07:39 < niggler> here's where i see node.js adding true value:
07:39 < mistertwig> it can be used for small applications
07:39 < mistertwig> but it's also great for large applications
07:40 < astropirate> mistertwig, o_O
07:40 < niggler> there are many people who are experienced in javascript and little else
07:40 < astropirate> sure yah
07:40 < niggler> if there's a way to make them productive, then it makes hiring easier and cheaper
07:40 < astropirate> it could serve as the visual basic of 2013
07:40 < niggler> the ultimate problem with a language like haskell
07:40 < mistertwig> astropirate: why can't node.js be used in large applications?
07:41 < niggler> is that it demands far more from people than other languages
07:41 < niggler> so your ultimate potential pool of hires is small
07:41 < astropirate> niggler, no more than any of the imperative languages. its not difficult
07:41 < astropirate> its just alien
07:41 < astropirate> to most developers
07:41 < astropirate> but yah, you are right
07:42 < astropirate> the pool is much smaller
07:42 <@konobi> astropirate: pcre
07:42 < astropirate> mistertwig, it can. it jsut gets overly complex
07:42 < astropirate> konobi, pcre?
07:42 < mistertwig> how does it get complex?
07:42 < niggler> perl compatible regexp
07:42 <@konobi> oh, that was niftylettuce 
07:43 < niggler> konobi what are your thoughts on xregexp
07:43 < milani> konobi, how is xbmc going ?
07:43 <@konobi> no further... just been doing systems stuff recently
07:44 <@konobi> niggler: *shrug* i'd just go with pcre
07:44 < astropirate> mistertwig, i'll write a blog post on it
07:44 < mistertwig> sure astropirate
07:44 < astropirate> but i fear people will take it personally and get offended
07:45 < niggler> if you try to structure a large program as a series of light modules
07:45 < mistertwig> it just takes a different approach some times
07:45 < niggler> you end up with a crazy set of interdependencies
07:45 <@konobi> niggler: there's certain assertion types and the compilation cache features i'd want
07:46 < astropirate> right, so how do you work around that niggler?
07:46 <@konobi> any sufficiently large application becomes a pain to manage
07:46 < niggler> im not proud of what i do
07:46 < mistertwig> niggler niggles
07:46 < niggler> but i group code into types
07:47 < niggler> so i have a math library
07:47 < niggler> there's a gamma function, incomplete gamma, beta, incomplete beta, error function, etc etc
07:47 < niggler> i have a separate tool that cats them together and generate the required exports
07:47 < astropirate> :O
07:47 < niggler> and that becomes a module i require
07:47 < astropirate> lol really?
07:48 < mistertwig> yeah that makes things breezy
07:48 < astropirate> meta
07:48 < astropirate> mistertwig, you do that too?
07:48 < mistertwig> put things into modules?
07:48 < niggler> if i didnt do it that way id have at least 30 versions of certain basic mathematical routines floating around
07:49 < mistertwig> all my stuff are in modules
07:49 < mistertwig> :p
07:49 < astropirate> niggler, you have math heavy applications on node? can you tell more about it?
07:49 < mistertwig> haha we were just doing one
07:49 < mistertwig> not too long ago
07:49 < mistertwig> comparing speeds with C, java, python
07:49 < mistertwig> python was a lot slower than node
07:49 < mistertwig> even on pypy
07:50 < mistertwig> but this isn't his math app :P
07:50 < astropirate> all the benchmarsk floating around the web agree with that conclusion :D
07:50 < niggler> node.js + jison grammar + simple stack-based math engine is faster than matlab
07:50 < niggler> mathematica is not an apples to apples comparison because everything is much longer
07:51 < niggler> *the strings you have to parse are much longer
07:51 < niggler> "HypergeometricPFQ"
07:51 < niggler> i can't imagine what genius would have decided that's the best name for the function
07:52 < astropirate> niggler, how was the math engine implemented
07:52 < astropirate> in what language
07:52 < niggler> its pure js
07:53 < astropirate> the whole thing is a web service?
07:53 < niggler> ill PM you
07:53 < astropirate> ok
08:05 < pspace> Why would I want to use something like node.js and as opposed to Java which offeres better performance 
08:05 < pspace> Seems like an odd choice for writing a server
08:06 <@konobi> better performance is debatable
08:06 < pspace> really? if the performance is that close, then I'll take the JS
08:06 < pspace> lol
08:07 < pspace> I was under the impression that the JVM was much more performant than V8
08:07 < deoxxa> pspace: depends on the task
08:08 < yawnt> LETS ALL LAUGH AT DEOXXA
08:08 < deoxxa> not allowed
08:08 < yawnt> merry xmas bro :D
08:08 < deoxxa> hanzai desu
08:08 < deoxxa> and yeah, merry christmas :3
08:08 < deoxxa> did you make sure to have your KFC
08:08 < yawnt> wat
08:08 < yawnt> kfc like the fast food?
08:08 < deoxxa> kfc is a big thing at christmas here
08:09 < deoxxa> it's weird
08:09 < yawnt> oh
08:09 < yawnt> ;_;
08:09 < yawnt> christmas in japan
08:09 < yawnt> lucky bastard
08:09 < yawnt> what's the plan for today?
08:09 < pspace> Dim sum on christmas is popular 
08:09 < pspace> for jews
08:10 < deoxxa> yawnt: i went and paid for my classes in january
08:10 < niggler> you know pspace im torn on the java/javascript
08:10 < pspace> it bothers me a lot coming from a C background it just seems weird 
08:10 < pspace> why so many layers of abstraction for a backend?
08:11 < pspace> I can understand python or ruby, you get language bling. JS gives you bling compared to C, but compared to Java not so much 
08:11 < niggler> what part is weird?
08:12 < pspace> Implementing a webserver in JS 
08:12 < niggler> why is that weird?
08:13 < pspace> I just feel like the effort to do it in C/C++ would be the same so Im not really gaining anything
08:13 < pspace> or in Java 
08:13 <@konobi> and what layers of abstraction? you're far closer to the metal with node than you are with java
08:13 < niggler> at the end of the day you are going to have some sort of select/poll/epoll?
08:13 < niggler> or some other event reactor
08:13 < pspace> konobi: explain? 
08:13 < deoxxa> pspace: require("http").createServer(function(req, res) { res.end("hi there"); }).listen(8080)
08:13 <@konobi> it's all just system calls underneath
08:14 < deoxxa> pspace: do the same thing in c in under 500 lines, i dare you
08:14 < pspace> deoxxa: They have frameworks for C++ that do the same
08:14 < pspace> Check out Wt 
08:16 < pspace> konobi: Is the JS just breaking out to C api's or what?
08:16 < niggler> blargh C++
08:16 < niggler> RTTI is one of the slowest things known to man
08:16 <@konobi> RTFS
08:17 <@konobi> =0)
08:18 < niggler> we need a shootout
08:20 < pspace> ok read node.js source, I'm sold on it 
08:21 < niggler> you probably want to look at libuv pspace
08:21 <@konobi> it's a pretty thin wrapper
08:22 < niggler> konobi something struck me as really odd about http://benchmarksgame.alioth.debian.org/u32/program.php?test=knucleotide&lang=v8&id=1 (an example where a v8 code is slower than a java implementation)
08:23 <@konobi> niggler: yup
08:23 <@konobi> has bugger all to do with node perf though
08:23 < niggler> first, i would imagine unshift is pretty slow
08:24 < pspace> Is there an equivilent "web framework" stack that is similar to Flask, or Rails in the node world? Node + Express seems to be it, but what about for storage?
08:25 <@konobi> there's lots of options
08:25 < Orbitrix> NodeJS > Family and Holidays
08:25 < Orbitrix> code code code
08:25 < pspace> lol
08:25 < Orbitrix> code the pain away
08:25 < Orbitrix> >:(
08:25 < pspace> Merry Christmas :) 
08:25 < niggler> i coded your mother Orbitrix
08:26 < pspace> You guys are my family
08:26 < pspace> You make me p-space...complete
08:26 < ofer> Hi all, I am setting up cluster of node.js on multiple servers. My problem is that I registered timers set to do something on my master server - how do I make this timers work on other servers when the master is dead
08:26 < deoxxa> BAD PUN BAD PUN
08:26 < pspace> I feel bad
08:26  * niggler pets deoxxa
08:26 < niggler> there there
08:34 < yawnt> deoxxa: sounds exciting!
08:34 < deoxxa> extremely!
08:34 < deoxxa> also expensive
08:34 < deoxxa> 88,000 jpy :<
08:34 < yawnt> :/
08:36 < niggler> the yen is getting smacked
08:36 <@konobi> ?
08:37 < niggler> jpy = japanese yen, USDJPY was 77 at the end of 2012, looks like itll end around 85 this year
08:38 < niggler> *end of 2011 it was at 77
08:40 < yawnt> poor yen
08:40 <@konobi> what's expensive?
08:41 < yawnt> yachts
08:41 < yawnt> and private islands
08:46 < pspace> what's a pretty good ORM soltion in JS that works well with PostgresSQL
08:46 < pspace> or maybe I should just use Redis 
08:46 < pspace> lol
08:47 <@konobi> sequelize seems to come up a fair bit
08:47 < pspace> nice
08:49 < pspace> also what is Connect an addon for Express?
08:50 < yawnt> pspace: coderz/hater
08:50 < yawnt> but i'm biased
08:50 < yawnt> :D
08:50 < yawnt> since i co-wrote it
08:50 < yawnt> :P
08:50 < pspace> can you link me
08:50 < yawnt> github.com/coderz/hater
08:51 < pspace> yawnt: Are youa bronie?
08:51 < pspace> (: 
08:52 < yawnt> no
08:52 < yawnt> but i like raimbow dash
08:52 < yawnt> *rainbow
08:53 < yawnt> pspace: if you wanna try it install it via git
08:53 < yawnt> not via npm
08:55 < pspace> I'll give it a spin 
08:55 < yawnt> feel free to fire up issues
08:56 < yawnt> if it gets used i could start working on it again
08:56 < pspace> is it stable?
08:57 < pspace> I'm going to tinker with it, but if its not stable, I won't use it, just because I'm working on some enterpisy stuff 
08:57 < pspace> but I'll use it for fun on my personal projects
08:57 < pspace> im doing several projects to get into node 
08:57 < pspace> although its so simple, I might not do all of them
08:59 < yawnt> dont use it for enterprisy
08:59 < yawnt> i mean.. it is fairly stable imp
08:59 < yawnt> but i dont guarantee it wont break
09:00 < yawnt> *imo
09:01 < GreenDog> no offense, but it looks like a lot of work has been put in to sequelize. 
09:02 < yawnt> GreenDog: no offense at all
09:02 < yawnt> sequelize indeed has had a lot of work
09:02 < yawnt> but i dislike the way it's written and structured :)
09:02 < yawnt> it's strictly a personal opinion, if you like it better, you should go ahead and use that
09:07 <@konobi> lack of usage docs are a definite turn off
09:08 <@konobi> oh, just found em
09:09 < GreenDog> now that i read the docs for hater, it looks like it has had a fair amount of work as well
09:09 < yawnt> konobi: i made that for a project which is now done, so i kinda stopped developing on it.. if people show interest and submit issues, i'd be happy to keep it going 
09:10 < yawnt> konobi: it might be that documentation is outdated somewhere, i used it mainly myself (i apologize)
09:11 <@konobi> can't work out if the base result from sequelize is a resultset or not
09:11 < yawnt> GreenDog: thanks :)
09:14 < yawnt> out of curiosity
09:14 < yawnt> has anyone actually tried how bad performance is hurt if you use domains instead of the callback(err) pattern?
09:15 < ofer>  Hi all, I am setting up cluster of node.js on multiple servers. My problem is that I registered timers set to do something on my master server - how do I make this timers work on other servers when the master is dead
09:16 <@konobi> yawnt: domains are more around uncaughtexceptions and that sort of thing i think
09:17  * GreenDog always wonders why so many people need clusters of node servers
09:17 < yawnt> konobi: they're like a `catch-all` when you use throw in a context
09:17 < ofer> GreedingDog: For fault tolerance purposes.
09:18 < yawnt> the fact is that i'm kinda thinking of writing a validation library for a thing i need which is kinda different from what's out there
09:18 < niggler> greendog is shooting for aws level qos
09:18 < sosnon> i'm trying to watch multiple files at the same time; this, however, does not seem to work https://gist.github.com/2ff30bcdebdd8cf9b505 - am i doing it all wrong?
09:18 < yawnt> and it'd be nice to let people use throw instead of the callback because it stops execution immediately
09:21 <@konobi> you can always cb(new Error("whoops")) straight after the error and return
09:21 < ofer> yawnt: be careful - people are using third parties in an async environment  - that may catch your exceptions... 
09:22 < yawnt> konobi: not true
09:22 < yawnt> imagine i'm iterating over an array
09:22 < yawnt> with .map or .foreach
09:22 <@konobi> using async?
09:23 < yawnt> throwing err in there would stop everything which is after
09:23 < yawnt> while return wouldn't
09:23 < yawnt> konobi: nope, using .map or .forEach which are sync
09:24 <@konobi> well, you could use async
09:24 < yawnt> but i don't want to
09:24 < yawnt> it's a useless dependency
09:24 < yawnt> in this case
09:24 < ofer> yawnt: your code may run in a callback - which is called in a callstack of third party that may catch your exception. I know it since I already tried it ...
09:24  * konobi *stomps his feet and huffs*
09:24 < yawnt> i know functions in v8 are cheap etc etc, but it's just overhead
09:25 < yawnt> ofer: im not sure i get what you mean
09:25 < GreenDog> how would you do a foreach or map async like?
09:25 <@konobi> GreenDog: npm install async
09:25 < yawnt> ofer: you mean that someone wraps it into a try..catch block?
09:26 < GreenDog> of course
09:26 < yawnt> ofer: being a validation library i'd have functions making assertions
09:26 <@konobi> i'd only use Array's map/foreach if it was plain computation
09:26 < yawnt> so they are totally isolated from the rest of the code
09:26 < yawnt> therefore if you use a try..catch you're the one doing it wrong
09:26 < dgx> Hey all. Being a relatively experienced in JS/jQuery(im mostly back-end dev). How do you think is the state of mobile dev. with html5/css3/js? Do you think in the future it will be more needed?
09:27 <@konobi> yup
09:27 < ofer> suppose you are writing code that sould run after you saved something to a db - your callback will be called in a callstack of the db driver of some third party - like mongoose... they might try to cacth all of their exceptions - which will also catch yours.
09:27 < yawnt> mh
09:27 < yawnt> that's true
09:28 < yawnt> i suppose i either have to abandon this approach or hope people don't do stuff like try { callback() } catch(e) 
09:28 < yawnt> lol
09:45 <@konobi> yawnt: assuming it's just plain old computation, just run through it all and then return
10:05 < fusl> anyone who can help me with SENDING rtmp data TO a rtmp server?
10:25 <@konobi> fusl: https://github.com/OpenRTMFP/ArcusNode ?
10:31 < fusl> i do not need a server, i need a client, which passes <stdin> data to rtmp://some.server.in.the.www/some_app
10:33 < fusl> i'm using a child process with "ffmpeg -i udp://127.0.0.1:1234 -vcodec copy -acodec copy -threads 0 -f flv rtmp://......" to stream incoming data on port 1234 udp to an rtmp server...
10:34 <@konobi> fusl: yes, but it has bindings to do rtmp protocol
10:35 < fusl> i can't find these bindings :(
10:35 <@konobi> fusl: so you just want to stream data to a port on a server?
10:36 < fusl> no i want to stream incoming data from stdin to rtmp://...... 
10:36 < fusl> replace "udp://.........." in the above example with "-"
10:37 <@konobi> open a socket to the remote server, then stdin.pipe(socket)
10:38 <@konobi> fusl: check the url at the end of the topic
10:39 < fusl> which url?
10:39 < fusl> http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem ?
10:39 <@konobi> yup
10:40 < fusl> ha ha ha :D
10:41 <@konobi> so...
10:41 < SomeoneWeird> not supposed to be funny
10:44 <@konobi> fusl: ?
10:45 < fusl> urm... ok
10:46 < fusl> i have a directory, in which there are a couple of avi files.... now i am reading and converting these avi files to the correct format -> pipe it to udp://127.0.0.1:1234 ... another ffmpeg process which listens to udp://120.0.0.1:1234 passes the data to rtmp://...
10:47 <@konobi> so you want to replace that second ffmpeg step?
10:51 < fusl> jep because sometimes the sending ffmpeg process begins to hang and stops to send the video
10:53 <@konobi> mkay... so what's coming in over udp is already flv ready for rtmp?
10:55 < fusl> on udp it is the right resolution and anything else but it has the fomat mpeg-ts (which is "the best" for doing this thing of stuff (switching around in videos))
10:55 < fusl> but i can -f flv and then it is in flv format
10:56 <@konobi> k... well from ffmpeg you're going to print to stdout, right?
10:57 < fusl> yep
10:57 < fusl> then i want something like ffmpeg.stdout.pipe(sender.stdin);
10:58 <@konobi> yup, in that case... open a net socket, (host and port for rtmp, using tcp) and then stdin.pipe(socket)
10:58 < fusl> how to create this type of socket? i never did open a socket :(
10:59 <@konobi> http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener
11:00 < darrenlooby> Hi Guys, I'm writing a module, and I'd like to load some config in during the require... var module = require('module').configure(JSON) ... can I do it like this? If so, how do I do that?
11:01 < fusl> which port does rtmp use? :D
11:01 <@konobi> it's not going to be during
11:01 <@konobi> fusl: check wikipedia
11:02 < fusl> ok ^^
11:03 < fusl> but a little problem: i need a app_path (rtmp://servername.tld/path_to_app_or_something_like_that) ... how to do this with net?
11:04 < darrenlooby> konobi, not sure if one of your comments was to me... are you saying I can't do what I'd like?
11:05 <@konobi> it depends what you mean by "during"
11:06 < darrenlooby> I'd like to pass my configuration JSON to the module on the same line as the require... similar to how I've written it out above.
11:07 <@konobi> then yeah, that's fine.
11:08 <@konobi> it'd be the same as var module = require('mod'); module.configure(...)
11:09 < darrenlooby> Ok, tried it and it erred. So, just wanted to make sure it was possible prior to trouble shooting it
11:11 <@konobi> your configure will need to return the module
11:11 < darrenlooby> How so?
11:12 <@konobi> since var module will be whatever you return from configure()
11:12 < darrenlooby> mymod.configure = function(config){stuff .... return mymod}?
11:12 < darrenlooby> Something like that?
11:12 < darrenlooby> Or, do I have the wrong end of the stick?
11:18 < medice> as in var mymod = require(mymod).configure(object); ?
11:22 < darrenlooby> medice, yea... that's what I'm trying to do. I've made that bit work, but now trying to work on defaults that run without the .configure(object)
11:22 < medice> mymod.prorotype.configure = function(config) {return this;}
11:23 < medice> if i'm not mistaken, i haven't coded js in a while
11:24 < medice> s/prorotype/prototype
11:27 < gildean> or you could just do in the module: var Module = function (config) { .... }; module.exports = new Module(config); and then require it with var module = require('module')(config);
11:32 <@konobi> that wouldn't be correct
11:43 < gildean> you're right, that doesn't work, the module exports would need to return the new object instead if you wanted to use it like that
11:46 < golosone> ciaoooooooo
11:46 < golosone> !list
11:49 < gildean> so for example module.exports = function (config) { return new Module(config); }; should work
12:05 < Industrial> Has anyone worked with fleet? How do you handle failing servers? Should I build my own plumbing to start up nodes and servers?
12:08 < yarco> can someone tell me why test2 has empty fields?  https://gist.github.com/4372875
12:08 < yarco> mongodb
13:34 < pspace> Merry Christmas everyone, anyone use Derby,js before? Is it pretty good?
13:44 < AAA_awright> Is there some way to set a JSON encoding/decoding callback for Socket.io?
14:42 < Industrial> I see Optimist is good option for option parsing (ho ho ho) but does it allow subcommands? e.g. ./cmd.js db sync ?
14:42 < Industrial> oh, argv._
14:42 < mmalecki> Industrial: look at flatiron
14:43 < mmalecki> it makes it really easy
14:43 < mmalecki> https://github.com/flatiron/flatiron/blob/master/examples/cli-sample/index.js#L20 for example
14:44 < Industrial> mmalecki: my winter break project; https://github.com/Industrial/CMS
14:44 < Industrial> not sure if thats the greatest idea :p
14:45 < AAA_awright> Industrial: Coffee? :-\
14:45 < mmalecki> OMG COFFEESCRIPT XD
14:45 < Industrial> dun dun DUN
14:45 < Industrial> should I pick a random one from altjs.org ?
14:46 < Industrial> altjs 8ball, what will I play around with next xD
14:46 < AAA_awright> Industrial: I'm a fan of http://vanilla-js.com/ myself
14:47 < mmalecki> AAA_awright: yeah, it's really good
14:48 < Industrial> I would agree on the ops/sec part, but it's still a C code style mess :( we can do better then this in 2012 yet we don't because JS is a language everyone should be able to use ..
14:48 < AAA_awright> It is a language everyone can use?
14:48 < Industrial> var hoisting do we really need it? I think its a language blunder not a feature ;p
14:49  * Industrial loves Lua
14:49 < AAA_awright> var hoisting?
14:49 < Industrial> it's so simple (yet surprisingly similar to JS)
14:49 < RLa> i'm sick of that "everyone can use" bullshit
14:50 < RLa> and expecially, "designed for newbies" :)
14:50 < RLa> tools must be designed to get work done
14:50 < AAA_awright> Yeah, guys, logic is (gasp) complex, and requires lots of thinking
14:50 < Industrial> RLa: I'm not saying that. I'm saying they will think twice (actually theres committees right ..) before adding funky language features
14:51 < Industrial> (cant wait for yields, however)
14:51 < AAA_awright> What's wrong with vanilla ECMAScript?
14:51 < RLa> i haven't found single practical usage for yields yet
14:51 < AAA_awright> I'm perfectly fine with most all the features we have so far
14:52 < RLa> same here
14:52 < AAA_awright> Map and Set support would be welcome
14:52 < AAA_awright> That's about it
14:52 < RLa> fat arrows could be useful too
14:52 < AAA_awright> What's that for?
14:52 < AAA_awright> Or what is it?
14:52 < RLa> better scoping for 'this'
14:53 < Industrial> thus the iomportance of languages like coffeescript :-)
14:53 <@konobi> s/language/stupid idea/
14:54 < zomg> More people need to use Haskell because it's full of good ideas =)
14:54 < AAA_awright> What's wrong with scoping for this? If you're bugged about var self=this; all over the place that's only because it makes intuitive sense
14:54 < AAA_awright> Industrial: Coffeescript doesn't have Map or Set either. Coffeescript is inherently limited by what ECMAScript is capable of, not the other way around
14:54 < zomg> Watching Haskell web tooling develop is sort of watching what happened first with RoR and then with Node
14:55 < Industrial> AAA_awright: correct, but the fat arrow is a case where coffeescript syntax is brought into the main JS spec (or not?)
14:56 < Industrial> which is my original point, it's easier to write. Though it might output code that is more efficiently implemented in pure JS here and there
14:56 < _ior> hi all, new to node and js in general here, and i'm wondering if anyone has any resources about how to design a good DAL... (fwiw i'm using brianc's node-postgres). i've got no problems with functionality, but i'm using the evented model atm and my on.row and on.end functions are getting to be this huge mash of if else clauses
14:56 < RLa> it does not exactly be the same syntax (with arrow) but similar concept
14:56 < _ior> i'd like to keep the evented model rather than switch to callbacks because i like the streaminess of it, and being able to do somethng on each row returned
14:57 < Industrial> some people see syntax as something extra to a language ... I will never go back to typing in Java code, for example. Syntax matters a lot I think.
14:58 < zomg> Haskell is pretty nice from the fact that you can implement EDSLs into it so you can have new convenience "syntax"
14:58 <@konobi> there's a lot wrong with coffeescript... why not go learn about the warts first
14:58 < zomg> I've recently seen a syntax for CSS markup in pure Haskell for example, and it actually looked quite alright
14:59 < Industrial> I've been using it some time (year(s?)) now and it's harder do debug yeah, but I'm prettymuch working 'through' javascript anyway, so I usually know the offending coffeescript code in a js debugger ..
15:00 < RLa> have you debugged haskell
15:00 <@konobi> i'm talking about core flaws... not debugging
15:00 < zomg> CoffeeScript is alright but it's hard for me to decide whether I'd rather use it or JS
15:00 < Industrial> konobi: slap me with rage blog posts, please! I'm interested now :p
15:00 < Industrial> RLa: no
15:00 < zomg> RLa: debugging Haskell is not too hard once you learn it
15:00 <@konobi> not at 7am
15:00 < Industrial> oki :3
15:00 < AAA_awright> Industrial: Java is wrong for numerous objective reasons
15:01 < AAA_awright> Namespaces, classes...
15:01 < Industrial> what's wrong with classes? I should put ALL THE THINGS in a function that takes a data structure instead?
15:02 < RLa> just admit it, java programmers are sometimes considered dumb and you want to avoid being one thus you avoid java :)
15:03 < zomg> Industrial: that's how Haskell works pretty much =)
15:03 < _ior> having been a professional java developer at some point in the past, i can affirm that java was designed to equalize all programmers in large enterprisey environments
15:03 < _ior> which, of course, means, that everyone is equally bad1
15:03 < RLa> i have also been one
15:04 < Kakera> should I submit an issue to a module that emits unspecified 'error' events?
15:04 < zomg> I've been working on writing some stuff on "Haskell for Web Developers" if anyone is interested btw, aimed at web developers who want to learn haskell
15:04 < Kakera> I think 'error' events shouldn't be unspecified
15:05 < Kakera> you shouldn't need to handle the error event just to know what went wrong
15:05 < Industrial> zomg: me :)
15:05 < Industrial> I've been flirting with haskell for some time >_>
15:05 < zomg> I'll pm you some links
15:07 < AAA_awright> Industrial: What's wrong with classes in Java?
15:08 < AAA_awright> http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html
15:08 < zomg> lol
15:08 < zomg> "Convenient proxy factory bean superclass for proxy factory beans that create only singletons."
15:09 < AAA_awright> That should be all you need to know
15:09 < zomg> That phrase sounds almost as obscure as all the people on #haskell discussing profunctors, arrows and covariants and whatnot
15:09 < Industrial> I was going to try to play the devil's advocate and try to explain that in a functional manner, but I haven't discovered what it does yet.
15:10 < AAA_awright> There's no reason you should ever need singletons, nevermind proxies
15:10 < AAA_awright> ECMAScript to the rescue!
15:11 < _ior> http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html
15:11 < Industrial> is it a bean of a factory that creates abstract singleton proxies? :P
15:22 < rouan> anyone want to see what I made? Some realtime chat/analytics/mapping/experiment
15:22 < rouan> or everyone having a holly xmas :D
15:24 < ACK> is node.js with express.js ( railway.js or flatiron.js ) is good for making a dicussion forum or -> i should go for ruby or rails
15:24 < Guest24850> does anyone know of a good data structure library for node, something that provides for basic datastructures like Sets
15:25 < rouan> Guest24850, I'm using a [] as a continuous stream of {} json objects
15:25 < ACK> what you think people
15:26 <@konobi> it's christmas... but the keyboard down
15:26 < rouan> each object has analytics, timestamp, type
15:26 < rouan> http://8bodev.com/
15:26 < rouan> so if you open multiple views
15:26 < rouan> you see live feedback of visitors
15:26 < Guest24850> thanks rouan, but how does that help maintain uniqueness semantics?
15:27 < rouan> its a continues stream of data, so you use the latest
15:27 < rouan> and keep the old as backup/fallback
15:27 < rouan> same as git i guess
15:27 < ACK> is node.js with express.js ( railway.js or flatiron.js ) is good for making a dicussion forum or -> i should go for ruby or rails
15:27 <@konobi> Guest24850: sets of what? numbers, strings, floats, objects? does order matter? what operations are you wanting to achieve?
15:28 < rouan> and then http://8bodev.com/event gives you raw access to your memory/db
15:28 < rouan> ;P its all open at the moment, building it up to do radio astronomy thru node
15:28 < _ior> hi all, new to node and js in general here, and i'm wondering if anyone has any resources about how to design a good DAL... (fwiw i'm using brianc's node-postgres). i've got no problems with functionality, but i'm using the evented model atm and my on.row and on.end functions are getting to be this huge mash of if else clauses
15:29 < _ior> i'd like to keep the evented model rather than switch to callbacks because i like the streaminess of it, and being able to do somethng on each row returned. all input appreciated :)
15:29 < Guest24850> sets of any thing, but a common type.  Order does not matter for my current need.  I simply, want to be able to maintain a set of unique entries where duplicate insertion will be disregarded/errored out
15:29 <@konobi> >> note... it's a HOLIDAY <<
15:29 < purr> konobi: SyntaxError: Unexpected token .
15:29 <@konobi> you're unlikely to get any answers today
15:29 < Guest24850> I kinow I can write this up, but I was wondering if there are libraries out there which model common datastructures so that I don't have to build one from scartch
15:29 < _ior> it's only a holiday for some!
15:30 < _ior> perhaps all the jewish coders will be here today :D
15:30 < rouan> Its best to build from scratch
15:30 <@konobi> _ior: it's generally a public holiday regardless
15:30 < _ior> only in some countries
15:30 < rouan> just use JSON.stringify and save to disk, then read off and JSON.parse it back into ram
15:30 < rouan> seriously I dont get the whole database thing
15:30 < _ior> we're not all WASP countries, i'm sure
15:30 <@konobi> _ior: "some"
15:31 <@konobi> o.O
15:31 < _ior> konobi, but i take your meaning :)
15:32 <@konobi> don't forget the blacks, hispanics, native, asian, catholic, mormon, 7th day adventists and the multitudes of others
15:33 <@konobi> =0)
15:35 < _ior> but konobi, i take it you do not have a particular suggestion for best practices DAL with js?
15:35 <@konobi> i probably wouldn't be here if it wasn't for the insomnia
15:36 <@konobi> DAL?
15:36 <@konobi> _ior: oh... just use callbacks
15:36 < _ior> but then it's not streamy -- i can't operate per row
15:36 < _ior> have to wait for entire db result
15:37 <@konobi> on('row', cb)
15:37 < rouan> _ior, you need it in RAM
15:37 < _ior> oh hmm on(row) takes a cb, well that changes things a bit
15:38 <@konobi> on('row', function(res){ ... });
15:38 <@konobi> both callbacks
15:39 < _ior> oh wait, sorry, yeah, on code review
15:39 < _ior> my question is that my current on.row and on.end callbacks are a mess of if else clauses
15:39 < _ior> based on what method exactly i'm calling
15:40 <@konobi> different callbacks for different queries
15:41 < _ior> right, i'm convinced i need to refactor the entire module, just looking for some pointers on "how to do it right"
15:41 <@konobi> that'll be dependent on your app really
15:41 < _ior> yeah
15:42 <@konobi> but putting callbacks as named functions is always a good plan
15:42 <@konobi> forces you to be tidier
15:42 < _ior> as it stands i have a method for each query. each of these methods then call a runQuery method, which deals with connection, and declares the on.row and on.end callbacks with the list of if else clauses based on the calling method
15:43 <@konobi> that's a little overkill... just connect once, then do the query and callbacks inside your method
15:43 < _ior> it seems kinda wonky to pass in TWO callbacks (one for on.row and the other for on.end)
15:45 <@konobi> there's also things like sequelize
15:46 < _ior> hmm
15:46 < _ior> i was hoping to avoid an orm
15:46 < _ior> (and of course that one is for mysql, not postgre, but thank tyou for pointing it out)
15:46 < _ior> however perhaps i should take a look at the code of an orm to get an idea of best practices
15:46 <@konobi> it's for a few dbs
15:46 <@konobi> including pg
15:47 < _ior> ah okay, frontpage of sequelizejs says mysql, but that's about as far as i've read :)
15:47 < _ior> yes i see, much further down it says so
15:48 < shanse> https://github.com/1602/jugglingdb
15:48 < spion> you an also try http://npmsearch.docucalc.com/ for your module needs. it sorts by a mix of popularity and relevance :)
15:49 < spion> (shameless plug)
15:50 < _ior> okay, guess i'll go do more reading. thanks!
15:51 <@konobi> spion: http://nodezoo.com/
15:53 < spion> neat. npmsearch is primarily a command-line tool actually.
15:56 < Kakera> is it possible to access jade template parameters from inline javascript?
15:57 < Kakera> for example, I want to pass some string to the template, and then alert it to the user
15:57 < Pickels> Kakera: script: alert(#{yourvar});
15:57 < Kakera> thanks
16:05 < SoulRaven> hello
16:05 < SoulRaven> anybody?
16:07 < SoulRaven> i am wondering if already exists a module for http query that deals with host redirect and diferent types of status code errors
16:10 < geNAZt> hi
16:10 < SoulRaven> hi
16:11 < geNAZt> is there a libary that enables crossfile eventlisteners ?
16:11 < SoulRaven> i don't think so
16:11 < geNAZt> is there any way without reference the object to the global scope ?
16:12 < SoulRaven> like someObject.prototype = something ?
16:12 < geNAZt> no
16:12 < Kakera> can someone explain the advantage of comma-first declaration style?
16:12 <@konobi> geNAZt: yes, read the docs
16:12 < geNAZt> i have a.js containing var b = require( 'c.js' ); c.init();
16:13 < geNAZt> but i want to have a d.js and want to have a eventlistener on b
16:13 < Kakera> https://github.com/visionmedia/express/wiki/Migrating-from-2.x-to-3.x like here at "Socket.IO compatibility"
16:13 < geNAZt> without globals
16:13 < Kakera> why not just declare each with "var"?
16:13 < geNAZt> cause they arent in the same scope
16:13 < Pickels> Kakera: it's personal preference
16:14 < Kakera> Pickels, yes, but I don't understand why someone would prefer this
16:14 <@konobi> geNAZt: you can pass the event emitter object around
16:14 < Pickels> Kakera: yeah, I don't get it why people like to do fancy stuff with their source.
16:14 <@konobi> Kakera: helps avoid issues around trailing commas
16:15 < _ior> kakera, if i'm using comma-first declaration, it's because i'm copy-pasting lines or cutting entire lines of code at once, i don't want to much around with trailing commas on preceding lines
16:15 < _ior> otherwise i would have to manually add and remove them
16:15 < _ior> s/much/muck/
16:15 < Kakera> but I'm comparing to declaring each with 'var'
16:15 < Kakera> in separate statements
16:15 < _ior> well for some it can just be habit: e.g. i get my leading-comma habit from writing sql
16:15 < SoulRaven> there is any module that deals with http queries, and also knows how to react on diferent status codes?
16:16 <@konobi> SoulRaven: request
16:16 < Kakera> SoulRaven: superagent
16:16 < geNAZt> http://pastebin.com/1QV0cW9q
16:16 < geNAZt> thats the problem
16:16 < SoulRaven> i nead to make a module for calling diferent hosts, and must be as fail save as posibile, is from a bigger ideea to have a load balancing service
16:17 < SoulRaven> for multiple services of geocoding
16:17 <@konobi> geNAZt: modules are isolated
16:17 < geNAZt> i know
16:17 < geNAZt> but to do this i must global the object created in b ?
16:17 < geNAZt> and that is something want to prevent
16:18 < geNAZt> cause u can modify the whole object in the global scope
16:18 <@konobi> b.on(...
16:18 < geNAZt> from d.js ?
16:18 <@konobi> from b.js
16:18 < geNAZt> the object b isnt present in d.js or ?
16:18 < geNAZt> yeah but thats not what i want
16:19 <@konobi> geNAZt: read the (end) link in the topic
16:19 < geNAZt> i did
16:20 < geNAZt> but the problem isnt that i try to add listeners to local objects
16:20 < geNAZt> but i want to make a pluginlike module system
16:20 < geNAZt> that can hook up events thrown out of the http server
16:20 < geNAZt> or from the twitter api
16:20 < geNAZt> or from the inner redis
16:21 < geNAZt> but i want to prevent from changing the objects that would be possible if i give them in a global scope or di them in the plugin
16:25 <@konobi> geNAZt: proxy object?
16:27 < geNAZt> that would be an idea
16:27 < geNAZt> thanks
16:44 < SoulRaven> i have read about superagent module, but there is another module similar to this?
16:44 < SoulRaven> i want to compare between them, and select the best one for me
16:45 < xananax> Hello, I am trying to build a wrapper around NPM (bash script). I am not able to transfer the autocomplete function of npm to my script. Anyone can help?
16:46 < RLa> SoulRaven, there is request module
16:46 < SoulRaven> RLa: is not as complex as superagent
16:46 <@konobi> xananax: http://dandean.com/nodejs-npm-express-osx/ # check the autocomplete
16:46 < raphie> if I've got a process unrelated to my main file, say a worker, is there any difference between spawning it as a child process or simply doing something like require("./worker.js").init();
16:47 < xananax> the code is at http://pastie.org/5576471, the lines concerning npm auto-complete at #52, if anyone cares to take a look
16:47 < xananax> konobi: thanks, I will check that
16:48 < xananax> konobi: no, I don't need to install npm autocomplete, I need to pipe it's output to another script
16:48 <@konobi> xananax: search for 'completion' on that page
16:48 < xananax> npm completion just dumps out the code; tried defining COMP_* variables prior to calling it, but I get nothing
16:49 <@konobi> you're sourcing it?
16:49 < xananax> no, I am using it, not sourcing it
16:49 < xananax> I am doing a single-entry script that uses different installers
16:50 < xananax> which allows to install things from a variety of sources, apt-get, ruby, npm...
16:50 < rouan> xananax, awesome
16:50 <@konobi> why aren't you sourcing it?
16:51 < xananax> konobi why would I? If I source it, it would add auto-complete to the "npm" command, whereas I want to add it to my "install" command, and only if it has the "-npm" flag
16:51 < pspace> has anyone used derby.js before?
16:52 < xananax> maybe check out the code at http://pastie.org/5576471, see the usage() function, will explain better than I can do on IRC
16:54 <@konobi> xananax: you can source it and then change what it matches to
16:56 < xananax> @konobi Aaah, see what you mean, you suggest I replace "complete -F _npm_completion npm" to "complete -F _npm_completion install --npm" ?
17:22 < elliottcable> I'm trying to make sense of the output from `node --prof` and `nprof`
17:22 < elliottcable> got some extremely slow code; takes approximately ten seconds to run through
17:23 < elliottcable> https://gist.github.com/d420b843247875075685
17:23 < elliottcable> how should I be reading that? I don't see any sticking points in my code
17:28 < geNAZt> do you have strace ?
17:29 < Kakera> is it possible to use npm install -g without root access?
17:29 < Kakera> to install globally just for the current user?
17:30 < geNAZt> http://nodejs.org/api/modules.html#modules_loading_from_the_global_folders
17:30 < geNAZt> yes
17:30 < geNAZt> node uses the home directory of a user to store global modules
17:31 <@konobi> elliottcable: webkit-dev-agent
17:31 < Kakera> npm ERR! stack Error: EACCES, mkdir '/usr/local/lib/node_modules/sm'
17:31 < Kakera> hmm
17:32 < geNAZt> whats you npm ls -g ?
17:32 < Kakera> /usr/local/lib
17:32 < geNAZt> http://stackoverflow.com/questions/6685892/how-do-i-fix-npms-global-location
17:34 < Sembiance> hey everyone :)
17:34 < geNAZt> hiho
17:40 < elliottcable> konobi ⑊ webkit-devtools-agent, or node-webkit-agent?
17:41 <@konobi> devtools
17:41  * elliottcable nods
17:43 < Kakera> geNAZt, this won't work for me
17:43 < Kakera> the prefix is correct, there are some modules installed there
17:44 < elliottcable> konobi ⑊ Any idea if I can use this *without* the USR1 signal? I want to profile the entire program, start-to-finish; not any particular part.
17:51 <@konobi> yes
17:57 < elliottcable> konobi ⑊ how? ;D
18:03 <@konobi> agent.start()
18:13 < elliottcable> konobi ⑊ <3
18:43 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:53 < elliottcable> Ugh. I can't get this to work at all.
18:53 < elliottcable> the version in NPM didn't have start(); I cloned from the repository, but it seems hugely broken at HEAD.
18:53 < elliottcable> are there any alternative tools to profile with?
18:55 <@konobi> elliottcable: the commit at d894ac646f525 worked just fine for me
18:58 < gluxon> So, what happened to Node.js v0.9? :'(
18:59 < elliottcable> lessee. I'm probably doing something wrong.
19:00 < elliottcable> http://c4milo.github.com/node-webkit-agent/21.0.1180.57/inspector.html?host=localhost:9999&page=0
19:00 < elliottcable> load up the profiler tab, select JavaScript, click start
19:00 < elliottcable> then I open the console, and call a function that starts everything rolling
19:01 < elliottcable> every time I type anything in the console, I get spammed with a bunch of output
19:01 < gmg85> wsup people?
19:01 < gmg85> am using nodejs with restify
19:01 < elliottcable> then, I think something crashes, because nothing will load; if I re-load the page, I get an empty page.
19:01 < gmg85> does restify come with session management?
19:01 < elliottcable> The process in my terminal hasn't exited, but I get no more output.
19:02 <@konobi> elliottcable: it's in the debugger
19:03 <@konobi> so don't forget to "start" your code
19:03 < elliottcable> ah, it starts paused?
19:04 <@konobi> i _think_ so
19:04 < elliottcable> it doesn't say it's paused; and clicking the “pause” button says “pausing ...”, and then the entire thing becomes non-responsive
19:04 <@konobi> elliottcable: might be worth pinging c4milo then
19:05 < elliottcable> where's he hang out?
19:05 <@konobi> github?
19:07 < elliottcable> oh, I gotcha.
19:07 < elliottcable> Thought you meant on Freenode.
19:12 < razic> What's the best thing for me to do if I created a v8 addon/module  as far as requiring it… Does anyone who downloads the repository need to node-gyp build it or should I build it and include it somehow?
19:14 < Sembiance> razic: are you saying you patched v8? or you created an NPM module that has C code that needs compiled? or?
19:14 < razic> Sembiance:  i created a npm module that has c bindings
19:14 < razic> heres the repository: https://github.com/razic/hoverboard/
19:15 < Sembiance> razic: ahh, here is a simple node module I made that has C bindings to a library on the system https://github.com/Sembiance/node-mhash
19:15 < Sembiance> razic: take note of teh binding.gyp
19:15 < razic> I have all that set up
19:15 < razic> But
19:15 < razic> I don't want the repository to be seperate from the javascript code
19:15 < razic> is that weird?
19:17 < Sembiance> razic: here is a better NPM module I made that has some C code included (https://github.com/Sembiance/node-rand48)  on `npm install <module>` node will automatically compile the source
19:17 < Sembiance> razic: I'm not sure I entirely follow what you are asking yet :)
19:18 < razic> Sembiance:  basically, in order to use those modules you have on github all one would need to do is add the github url to the package.json….
19:18 < razic> however
19:18 < razic> i want to have the package.json point to the node module in the same directory as the package.json
19:18 < razic> not on some server somewhere
19:19 < Sembiance> ahh. So you want to use a module you've created, without having it pulled from a repository? (either GIT or NPM)
19:19 < razic> i want the application that is going to be using the module, to be in the same repository as the module itself
19:19 < razic> yes
19:19 < razic> i don't really plan on anyone else using my module
19:19 < razic> just for my specific project
19:20 < razic> i guess i could seperate it out… 
19:20 < Sembiance> razic: look into using  'npm link' 
19:20 < razic> if that makes the most sense
19:20 < Sembiance> razic: well, you could just stick it in your node_modules folder manually, or use something like `npm link`
19:21 < Sembiance> razic: see point #2: http://mechanics.flite.com/blog/2012/12/11/underappreciated-npm-commands/
19:22 < Sembiance> razic: So basically, I would develop it in it's own directory somewhere. with a package.json and everything (you can set it to "private" : true) and then use `npm link` to link to it.
19:23 < razic> alright.
19:23 < Sembiance> razic: before npm link, I would manually create a symlink to my private module in my node_modules directory. This worked too, but it's not quite as "clean"
19:23 < Sembiance> razic: I hope what I said makes sense :)
19:23 < razic> i guess i am going to have to seperate out the c binding into its own repository
19:23 < razic> yeah, it does
19:25 < Sembiance> razic: keeping things in their own self-contained modules is generally a good idea
19:25 < razic> thanks for the help :] 
19:26 < Sembiance> razic: sure :)
20:35 < jorick> Hey I found this cluster package from learnboost and installed it with npm, but when I try to require it; require uses the cluster package from node ... how do i tell it to use the other one?
20:36 < AviMarcus> jorick, you can try require'ing the exact path
20:37 < AviMarcus> it's a bit old, though, are you use you don't want to use the new built-in one?
20:37 < jorick> it does more than the new one
20:37 < AviMarcus> "Actively tested with node: 0.4.9"
20:37 < AviMarcus> k, good luck.
20:38 < jorick> Hmm perhaps it still works ... it has testcases :)
20:43 < antonio_> hi
20:44 < Sembiance> atonio_: yo :)
20:47 < antonio_> quit
20:54 < MI6> joyent/libuv: Ben Noordhuis master * 3164f1e : include: update uv_signal_t doc comments  Fixes #668. - http://git.io/o6XFMQ
21:03 < defunctzombie> isaacs: would you take a pull request for npm to make owner/repo#~M.m.p work? to allow for users to specify patch level variance when using git repos?
21:04 < defunctzombie> (under dependencies or devDependencies field that is)
21:22 < MI6> joyent/node: Ben Noordhuis master * d2e7ca0 : test: add regression test for #4463 (+1 more commits) - http://git.io/djWmxQ
21:23 < TehShrike> AAA_awright: so I read this after you linked to it - did you read this section? http://ecma-international.org/ecma-262/5.1/#sec-7.9
21:53 < Guest24168> If I have a script foo.js containing something like "function Foo() {}; Foo.prototype.bar = function() {console.log('text')}; exports.Foo = Foo". Now in a node repl, why does the following not work? "foo = new require('./foo').Foo(); foo.bar()"
22:23 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:53 < sk8ball> what would be a good app for someone not new to programming but somewhat new to javascript and totally new to nodejs to kinda learn the nodejs + express + mongodb/mongoose + redis stack
22:53 < sk8ball> ?
22:55 < bobek_balinek> sk8ball that's how I started
22:58 < mistertwig> i started with an ircbot :p
23:04 < Iszak> Anyone use a service locator in node.js with factories?
23:04 < sk8ball> yah an ircbot doesnt really need mongodb/mongoose or redis
23:04 < sk8ball> thats more a socket.io
23:05 < sk8ball> im trying to familiarize myself with a stack im going to be working with in Q1 on some projects next year
23:05 < Iszak> sk8ball is kind of goes with the "new hotness" sort of business..
23:06 < sk8ball> is MVC the standard design pattern w/ nodejs apps?
23:07 < Iszak> sk8ball well take for example expressjs it doesn't setup models, only views and routes (controllers I guess?)
23:07 < Iszak> sk8ball but of course you can use models or service layers. it really whatever suits you.
23:09 < Kakera> does anyone here have any experience with local cloud9?
23:11 < sk8ball> is thhere any services w/ a free tier for hosting nodejs apps?
23:12 < jtane> if i do stream.Readable().wrap() on an old-style stream, should the low/highWaterMark properties really work, or is wrapping just for API consistency?
23:13 < Iszak> sk8ball heroku?
23:14 < Iszak> appfog?
23:34 < Kakera> does anyone here have any experience with local cloud9?
23:35 < razic> Sembiance: you around?
23:37 < sk8ball> what would be a fairly simple app - just anything generic where i could take advantage of nodejs+express+monodb/mongoose+session mgmt via reddis
23:38 < Industrial> hah someone (visionmedia) made a dependency graph to DOT tool, very nice. I wanted that just last week.
23:38 < sk8ball> someone familiar with programming, but just not node
23:47 < cstamas> hi all
23:47 < cstamas> is hook.io still alive?
23:48 < cstamas> I can still install it but cannot find much documentation and the github repository does not exists
23:48 < Iszak> cstamas awesome link, thanks!
23:49 < Iszak> cstamas should be here https://github.com/hookio/hook.io seems to be MIA. https://npmjs.org/package/hook.io odd.
23:49 < cstamas> yup https://github.com/hookio/hook.io is 404
23:51 < Iszak> cstamas might have to find a fork.
23:51 < cstamas> Iszak: I wrote some extensions I use locally and was looking for writing some more..., but even the docs on the web is hard to find
23:51 < cstamas> Iszak: so you say it is basically dead?
23:51 < Iszak> it certainly looks that way?
23:52 < Iszak> cstamas perhaps find a recent hook https://github.com/search?q=hook.io&p=1&ref=searchbar&type=Repositories&l=JavaScript ?
23:53 < Iszak> s/hook/fork/
23:53 < cstamas> hmm https://groups.google.com/forum/#!topic/nodejs/FCsTCopm_dE
23:54 < Iszak> awh man that sucks
23:57 < cstamas> yeah
--- Log closed Wed Dec 26 00:00:27 2012
