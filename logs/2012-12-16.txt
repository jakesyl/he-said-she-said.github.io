--- Log opened Sun Dec 16 00:00:28 2012
00:00 < creatine> guys, I need some help with mysql.
00:04 < deoxxa> creatine: WELL THAT'S SPECIFIC
00:05 < substack> creatine: your are being really inefficient at asking a question
00:05 <@Nexxy> creatine, you'll have to excuse deoxxa. he's unable to control the volume of his voice.
00:05 < creatine> uhm sryy.
00:05 < substack> too much latency playing 20 questions
00:05 < substack> just start talking
00:05 <@Nexxy> substack, you there?
00:06 < substack> o_O
00:06 <@Nexxy> I need to ask you a very synchronous thing
00:06 < deoxxa> hi has anyone used express before
00:06 < substack> haha
00:06 <@Nexxy> but I have to know that you're there right this second
00:06 < that4chanwolf> No
00:06 < creatine> well basiclly, when im getting an mysql error, the whole app crashes
00:06 < that4chanwolf> Nobody in the world has used express
00:06 <@Nexxy> I have
00:06 <@Nexxy> contrary to what tjholowaychuk thinks, I like it very much
00:06 < substack> creatine: any error that you don't catch in a .on('error', fn) will crash your app
00:06 < deoxxa> creatine: 1) paste code 2) ??? 3) profit
00:07 < creatine> 1 seec.
00:09 < creatine> http://pastebin.com/wffUc0ji
00:09 < deoxxa> you're throwing the error
00:10 < deoxxa> so... yes
00:10 < deoxxa> it will crash
00:10 < creatine> well, what should i do?
00:10 < deoxxa> well, when you do A, B happens
00:10 < deoxxa> generally to stop B from happening, you stop doing A
00:11 < deoxxa> it's like if you hit yourself in the hand with a rock
00:11 < deoxxa> it hurts, right?
00:11 < creatine> yes
00:11 < deoxxa> what would you do in that situation
00:11 < deoxxa> you'd stop hitting yourself in the hand with a rock, right?
00:11 < creatine> yes
00:11 < deoxxa> yay!
00:11 < deoxxa> there's your answer
00:11 < creatine> okey
00:11 < aandy> gee, i dunno
00:11 < aandy> sort of getting used to this rock thing
00:11 < hatch> looked like brew changed the prefix path on the global install modules on the latest update
00:12 < deoxxa> creatine: more realistically though, you were probably trying to deal with the error meaningfully
00:12 < deoxxa> creatine: looks like you're using express or something similar
00:12 < creatine> indeed
00:12 < Sly> deoxxa: <3
00:12 < deoxxa> creatine: so use the "next" parameter of your middleware function
00:12 < aandy> creatine: which error do you throw?
00:12 < deoxxa> creatine: i.e. function(req, res, next)
00:13 < deoxxa> creatine: then instead of `throw err;', do `next(err); return;'
00:13 < deoxxa> creatine: or if you want to get crazy, `return next(err);' to save on a semicolon
00:14 < deoxxa> creatine: that'll shove the error through to whatever error handler you have set up in express (which will likely just be the default "dump everything to the http response" handler)
00:14 < creatine> ye, that worked :) thx.
00:15 < creatine> didn't know about the "next" middleware.
00:15 < deoxxa> well, it's not middleware itself
00:15 < deoxxa> your function is middleware, technically
00:15 < deoxxa> the "next" parameter is just the function you use to transfer control to the next function in the list
00:16 < deoxxa> read through the express docs, this is all documented :P
00:16 < deoxxa> (that's how i know about it!)
00:16 < aandy> deoxxa: shouldn't you return after the next(err) regardless? i mean, what'd be the point of running the rest of the code?
00:16 < deoxxa> aandy: cleanup, maybe (?)
00:16 < creatine> deoxxa: ye, i should 
00:17 < deoxxa> aandy: i usually just do `return next(err);', but i guess there could be cases where you want to do some long-lasting cleanup thing and you want to return the error to the client beforehand
00:17 < aandy> yeah ok, fair point. i just figured the empty arrays would be cleared up (in gc?) rather quickly, but i don't know the internals of it :)
00:17 < aandy> yeah i get your point, thanks :)
00:17 < deoxxa> like maybe rolling back a transaction
00:17 < deoxxa> \o/
00:24 < MitchW> hmmm, time to investigate cluster to get over my ~80k connection limit / V8 memory issues >.<  funzies
00:32 < aandy> double the clusters! \o\
00:35 < alippai> can I use kinetic.js on node.js server to detect shape collisions on the server?
00:35 < alippai> I have a client side game, which I want to verify on server
00:39 < deoxxa> alippai: yes just do `new MagicCodeThatMakesYourGameWork()' and it automatically builds an online community of players for you
00:39 < TehShrike|Work> I love that module
00:40 < deoxxa> i wish there was a canvas library that wasn't like 200kb of code
00:40 < TehShrike|Work> alippai: does kinetic.js include a physics engine?
00:44 < alippai> deoxxa: dud, I don't see the point of this... I have a working multiplayer game connected with socket.io, I just want to add one more player as "observer"
00:45 < deoxxa> apparently you also don't see sarcasm
00:45 < alippai> my client side collision detection relies on pixel color
00:45 < alippai> on canvas
00:45 < TehShrike|Work> alippai: so you rolled your own physics code that works with kinetic.js?
00:45 < alippai> so my question is about simulation browser/dom in node.js
00:46 < deoxxa> maybe you should have mentioned that
00:46 < deoxxa> ...just saying
00:46 < TehShrike|Work> If you want the server to be the arbiter of physics collisions, it would probably be best to avoid relying on the canvas
00:47 < TehShrike|Work> Simulating all the canvas stuff on the server would be expensive at best
00:47 < deoxxa> ^^ this
00:48 < alippai> I see
00:49 < alippai> then I have to rewrite the collision detection from the colorbased one to geometric one, which doesnt use the canvas
00:49 < alippai> thank you
00:49 < TehShrike|Work> I haven't used it yet, but there's a Box2D port in JavaScript
00:49 < TehShrike|Work> I don't know if it's DOM-centric
00:49 < TehShrike|Work> And it might be overkill in your case, depending on how much physics stuff you need
00:50 < alippai> as we talk, I think I've found one https://github.com/LearnBoost/node-canvas
00:50 < TehShrike|Work> There may be other DOM-agnostic physics libraries in JS, but I haven't really gone looking
00:50 < TehShrike|Work> alippai: oh sure, there are canvas simulators for node
00:50 < TehShrike|Work> But they'll be expensive on the server
00:51 < TehShrike|Work> You don't want to maintain a canvas simulator for every person on your site
00:53 < alippai> okay, then I go with the "manual" way, so the detection goes against the models, not the rendered ones
00:53 < alippai> thank you
00:53 < alippai> TehShrike++
00:54 < TehShrike|Work> No problem, good luck
01:08 < yaymukund> if I have `myplugin` that requires `mocha` and `myapp` that uses `myplugin`, does `myplugin` have to have mocha installed? or is it sufficient if `myapp` has mocha installed?
01:08 < yaymukund> sorry if that's unclear, I can get a gist :p
01:12 < creatine> exit
01:14 < yaymukund> https://gist.github.com/78110ebcf82103105329
01:24 < TehShrike|Work> yaymukund: each module should list its own dependencies in its package.json
01:24 < TehShrike|Work> yaymukund: but each module does not need to list the dependencies of its dependencies
01:24 < TehShrike|Work> yaymukund: npm checks out dependencies recursively
01:25 < yaymukund> TehShrike|Work: ah, thanks
01:26 < TehShrike|Work> yaymukund: no problem
01:26 < yaymukund> I just read about this a little, looks like node/npm/requirejs does the smart thing where if a parent fulfills a child's dependency, it doesn't get reinstalled
01:26 < TehShrike|Work> Though if they depend on conflicting versions of the same module, I imagine it grabs the appropriate version for each
01:27 < yaymukund> ah yeah, probably
01:51 < ezrafree> hello. i have dl'd node latest stable and put it on my slackware server but when i try to run node i get the error that bin/node: error while loading shared libraries: libstdc++.so.6: cannot open shared object file: No such file or directory
01:52 < misterhat> doesn't sound like a node issue
01:52 < misterhat> ezrafree: "I presume you're running Linux on an amd64 machine. The Folder your executable is residing in (lib32) suggests a 32-bit executable which requires 32-bit libraries. "
01:53 < misterhat> http://stackoverflow.com/questions/11471722/libstdc-so-6-cannot-open-shared-object-file-no-such-file-or-directory
01:54 < ezrafree> nope i have an intel 32bit dell 2950 2U rackmount server
01:55 < ezrafree> perhaps i should try compiling node instead of dl'ing the binary
01:57 < JasonWoof> ezrafree: that's generally more reliable
01:57 < JasonWoof> ezrafree: of course you could try installing libstdc++.so.6
01:58 < JasonWoof> on my system /usr/lib/i386-linux-gnu/libstdc++.so.6 is installed by the package "libstdc++6"
02:42 < Asura> Hello
02:42 < Asura> There are people who understand Chinese?
02:45 < TehShrike|Work> Somewhere, I'm sure, but I'm not one of them.
02:47 < Asura> I just know little English
03:17 < niggler> anyone familiar with ova?
03:17 < TehShrike|Work> wassat?
03:18 < niggler> open virtual appliance
03:18 <@Nexxy> eggs
03:18 < Sly> NEXXY <3
03:19 <@Nexxy> SLY <3
03:19 < Sly> How are ou?
03:19 < Sly> *you
03:19 < niggler> lol Nexxy
03:19 < Sly> FORGIVE MY BAD SPELLING IN ADVANCE.
03:19 < TehShrike|Work> huh, that *is* the plural of ovum
03:19 < Sly> I got medicine from the doctor today.
03:19 < TehShrike|Work> TIL
03:19 <@Nexxy> Sly, fucking fantastic
03:19 < Sly> I HAZ EXCUSE!
03:19 < Sly> Nexxy: that's good to hear.
03:19 <@Nexxy> Sly, yay 4 medicine
03:19 < Sly> Yeah.. Except not so yay for the shot the nurse gave me.
03:20 < Sly> That's the most painful shot I've ever had in my life.
03:20 < Sly> Not the needle. Needle is no problem.
03:20 < Sly> The actual shit she shot me with.
03:20 <@Nexxy> but you get to pick from the sticker basket afterwards
03:20 < Sly> Made my muscle like spasm up.
03:20 <@Nexxy> so it's totally worth it
03:23 <@Nexxy> Sly, what kind of sticker did you get?
03:23 < Sly> Didn't get one.
03:23 <@Nexxy> what!
03:23 < Sly> I didn't even get a colorful bandaid. :(
03:23 <@Nexxy> ;<
03:23 <@Nexxy> sometimes you have to ask for the stickers
03:23 < Sly> YOU SHOT ME IN THE ASS! GIVE ME MY STICKER BIZATCH!
03:23 <@Nexxy> I used to get my blood drawn every week
03:24 <@Nexxy> I got so many stickers
03:30 < prettyrobots> Anyone working with Node.js on Open Indiana?
03:30 < prettyrobots> I want to build Node.js on Open Indiana. Should I use GCC or should I install the Sun compiler? Ulimately, I want to be able to play around with DTrace.
04:05 < JasonWoof> ok, I give up on turning off terminal echoing. I'm just blanking out the line where they entered the password with:
04:05 < JasonWoof> process.stdout.write new Buffer [27, 91, 65, 27, 91, 50, 75]
04:05 < JasonWoof> (that's ^[[A to go up a line, then ^[[2K to blank out that line
04:05 < JasonWoof> I couldn't get the ``read`` module to work
04:07 < JasonWoof> that'll do for now
04:21 <@Nexxy> JasonWoof, http://xhamster.com/movies/1005789/mature_woman_seduces_young_girl_f70.html
04:21 < shesek> o_O
04:21 <@Nexxy> wrong url; http://docs.nodejitsu.com/articles/command-line/how-to-prompt-for-command-line-input
04:21 <@Nexxy> haha
04:21 < s5fs> haha!!
04:21 < JasonWoof> now... which one to click...
04:22 < s5fs> Nexxy: that's classic
04:22 <@Nexxy> s5fs, rofl
04:23 <@Nexxy> that's what I get for using the clipboard for links for IRC
04:23 <@Nexxy> for/from
04:23 < s5fs> so it goes
04:24 <@Nexxy> it could have been worse
04:25 < s5fs> it can always be worse
04:25 < shesek> Nexxy, I have to ask - are you consuming porn while helping people on programming channels on IRC?
04:25 < shesek> that's quite an odd fetish
04:25 < JasonWoof> Nexxy: that (the 2nd link, not the naughty cougar) looks like it uses the ``read`` module, which doesn't work for me
04:26 <@Nexxy> JasonWoof, ah
04:26 <@Nexxy> shesek, what can I say, we all have them
04:26 < JasonWoof> what drives me nuts is that shift-insert pastes different things depending on what program you're in
04:27 < JasonWoof> terminal emulators generally paste the selection, and most everything else seems to paste the clipboard
04:27 <@Nexxy> ya apparently
04:27 <@Nexxy> the porn url was copied from terminal (irssi) even though I had copied again from chrome
04:27 < TehShrike> shesek: it's a safe bet that most people are consuming porn while helping people on programming channels on IRC, for better or worse
04:27 < JasonWoof> hehe
04:28 < JasonWoof> TehShrike: we've got to build a mashup of porntube and stackoverflow... we could make millions!
04:29 < TehShrike> I don't even know how that would work :-x
04:29 < JasonWoof> pornoverflow.com?
04:29 < shesek> isn't it distracting to alt-tab away from porn to programming?
04:29 < TehShrike> Well, at least we have a name :-P
04:29 < niggler> porngramming
04:30 < niggler> ooh pornstagram
04:30 < JasonWoof> niggler: lol
04:30 < niggler> im pretty sure someone already thought of that
04:30 < shesek> lets see how it works... can someone ask a question in a couple minutes?
04:30  * shesek is just kidding :P
04:31 < niggler> shesek its as useless as stackoverflow
04:31 < JasonWoof> but is he as useless as pornoverflow? We shall see
04:33 < niggler> TehShrike is busy stroking the keyboard -- unfortunately, it takes him a few hours to finish
04:34 < TehShrike> 8-|
04:35 < niggler> its nothing to be ashamed of TehShrike
04:35 < TehShrike> My keyboard likes being stroked!
04:37 < niggler> ever enjoy an orgy of cancellation TehShrike?
04:38 < TehShrike> Cancellation, no.  But I've had some hot moments with delete/backspace.
04:38 < TehShrike> Shift+arrow keys gets me hot and bothered pretty quickly.
04:38 < niggler> no love for the number pad?
04:39 < TehShrike> Yes, but only for numbers.
04:39 < TehShrike> I do use it almost exclusively for digits, though
04:39 < TehShrike> Picked up the number pad at a pretty young age, entering in product numbers into this software we would order bulk food with
04:39 <@Nexxy> this is a conversation for #jifasnif
04:39 < TehShrike> Hah, true
04:40 < niggler> Nexxy clearly has never had the moment of clarity after a massive orgy of cancellation
04:40 <@Nexxy> rly
04:41 < TehShrike> I use the number pad for any number with 2 or more digits
04:42 < niggler> Nexxy: in the book 'Geometry Revisited', HM Coxeter described the proof a theorem as 'veritable orgy of cancellation;'
04:43 < niggler> i want to say it was pappas' theorem although there are many that would fit the bill
04:43 <@Nexxy> uh huh.
04:44 < niggler> oh wow i was right
04:44 < niggler> i thought i forgot this stuff
04:44 < niggler> Nexxy page 69
04:44 < niggler> "Dividing the product of the first three expressions by the product of the last two, and indulging in a veritable orgy of cancellation, we obtain ..."
04:45 < TehShrike> Math: number orgies
04:48 < niggler> is there a way in node to bring all of the Math stuff into global (so that I can write sqrt instead of Math.sqrt, etc)
04:50 < TehShrike> Personally, if I'm using a function from some module quite a bit, I just alias it manually
04:50 < TehShrike> var inspect = require('util').inspect
04:51 < TehShrike> And so on
04:51 < niggler> blargh then id have to write a bunch of crap
04:51 < TehShrike> In those sorts of cases, there's not usually more than one or two functions that I'm using all over the place
05:43 < Zak> hey guys. Is there a generic "wait at most" function/pattern? I tried utilizing asyncjs but I was worried bout missing some edge cases.
05:51 < kenperkins> I'm wiped
05:55 < JasonWoof> niggler: I'm new to introspection, so this might be horribly wrong, but this seems to work: http://paste.debian.net/216533/
05:56 < niggler> yeah that works but it leaves much to be desired
05:57 < JasonWoof> niggler: like what?
05:58 < JasonWoof> I'm new to poking around into the hidden bits of objects. took me a while to find/figure-out how to get the value from the property name
05:58 < niggler> yeah that works for math
05:58 < niggler> but what about a custom object
05:59 < JasonWoof> this might be more appropriately done as a code generator
05:59 < JasonWoof> then you can review/modify the results by hand
06:03 < JasonWoof> eg: http://paste.debian.net/216534/
06:03 < JasonWoof> niggler: that better?
06:04 < niggler> yes it does print out stuff :)
06:04 < niggler> its good
06:05 < JasonWoof> yes, I feel like a real master at making scripts that print out stuff
06:20 < timeturner> why does socket.io use __defineGetter__ here https://github.com/LearnBoost/socket.io/blob/master/lib/socket.js ?
06:20 < timeturner> instead socket.prototype.handshake = this.manager.handshaken[this.id] for example
06:25 < rump> any way to get a list of enabled bits *with a range* in redis...  of 1mil length bitset i just want the offsets which are on from 1 to 100 for example
06:26 < chovy> my mocha tests aren't connecting to db consistently.
06:33 < TehShrike> mmm, mocha
06:41 < chovy> i'm trying to delete the db before and after each test, but it is not working properly.
06:42 < chovy> https://gist.github.com/3daacb5af43822639128
06:43 < chovy> i get timeouts when i run make test
06:49 < zapsoda> Hi, So im looking at using Balloon.IO and i know nothing about node.js or redis and im trying to decide how hard it would be to switch it from FB and Twitter logon to a DB log on?
06:50 < zapsoda> Sorry thats http://balloons.io/
06:51 < zomg> zapsoda: I would guess you can adjust the auth methods for passport
06:51 < zomg> from the looks of it passport has support for other methods for authentication though I haven't used it myself
06:51 < db42> zapsoda, your site ?
06:53 < yaymukund> https://github.com/gravityonmars/Balloons.IO/blob/master/strategy.js
06:53 < yaymukund> looks like that's where you'd inject your code
06:55 < zapsoda> db42, I set it up for testing on a VPS that one of the people on freenode said i could test it on, It has a very obsence domain name (that he used) and i would rather not post it publicly because of its name but if you want to see it you can msg me or ask me to msg it to you
06:55 < chovy> zapsoda: you can get a vps for $15/mo
06:55 < zomg> zapsoda: don't worry about that, I'm sure most of the people here are legendary internet warriors so they can deal with obscenity
06:56 < zomg> lol
06:56 < chovy> i just tried logging into ballons.io w/ twitter and got an err
06:58 < db42> what lib are they using for the GUI stuff ?
06:59 < zapsoda> Ok, the domain is deadchildren.net:6789 (again this isnt my domain) I really like they GUI it has but the login i didnt like, I want them to have a standalone login with a DB and stuff and not have to have a FB or a twitter to signin
06:59 < zomg> deadchildren?
06:59 < zomg> from your warning, I expected it to be worse than that
06:59 < zomg> :D
07:00 < mscdex> i expected it to be something like "nodejssucks.net"
07:00 < mscdex> that's the worst
07:00 < zapsoda> Lol
07:00 < zapsoda> It just seems really bad after this thing in CT happened :(
07:02 <@Nexxy> way to put everyone on a watch list!
07:04 < zapsoda> :p
07:05 < nerdfiles> https://twitter.com/filesofnerds/status/280205377881116672
07:08 < db42> is ballons a single page app ?
07:14 < zapsoda> yes  i htink it is db42 
07:14 < zapsoda> I didnt really understand any of the code it wasnt like HTML and PHP ive seen normaly
07:14 < db42> http://zef.me/4235/pick-your-battles <-- opinions ?
07:15 < db42> zapsoda, i'm coding my own chat-like solution to learn node.js
07:15 < db42> didn't see it previosuly
07:15 < zapsoda> Yha im thinking about coding one from scratch
07:16 < zapsoda> Im also working on AJAX_Chat but it has some holes that im fixing
07:16 < zapsoda> Like
07:16 < zapsoda> Its users are saved in a file and everyone but the admin and mods are anons so they dont have accounts
07:16 < zapsoda> And the passwords are stored in plaintext not hased
07:16 < zapsoda> hashed
07:16 < db42> i'm starting from the auth point of view
07:17 < db42> started with redis, now i've moved to mongodb
07:17 < zapsoda> I made it have each user have a DB account
07:17 < zapsoda> And now im working on make it use hashed passwords
07:17 < zomg> db42: opinions on what exactly with regards to that article?
07:18 < db42> zomg, the overall theme ? :)
07:18 < zomg> Makes sense to me at least
07:18 < zomg> If you have a deadline, pick something you know and trust
07:18 < zomg> If you don't, then go for something else if you want =)
07:19 < JasonWoof> db42: nice! I particularly like these bits: "go and build amazing applications. Build them with the most boring technology you can find." and "focus on something people want first. You will have to go through multiple refactors of your infrastructure. There’s not a chance in the world you will get it right the first time, so don’t assume you will."
07:19 < db42> it's not about the deadline
07:20 < zomg> db42: well I think it's sort of similar
07:20 < db42> it's mainly about support and maturaity
07:20 < zomg> if you need to build something that works and something you can make sure keeps working, you might want to consider using something that you know rather than picking some cool new tech
07:20 < zomg> so yeah I do agree with the point of the article
07:20 < chovy> zomg: deadlines suck
07:21 < JasonWoof> I still use PHP for work
07:21 < JasonWoof> pretty sick of it though
07:21 < zomg> I used to, it's ok if you have a competent team
07:22 < zomg> but I got laid off due to company running out of money
07:22 < zomg> so now I just fiddle my thumbs wondering what I should do next
07:22 < zomg> =)
07:22 < GreenDog> get another php job
07:22 < GreenDog> and/or javascript
07:23 < zomg> I'd like to do something else than PHP for a change tbh =)
07:23 < GreenDog> i hear ya
07:23 < zomg> haskell would be cool but those jobs are pretty hard to find unless you want to relocate to where there are jobs
07:23 < JasonWoof> php sucks as a language, but it works, and it's compatible with everything under the sun
07:23 < JasonWoof> just about every hosting provider, etc
07:23 < GreenDog> i would too, but i know all the nuances of php whereas i don't know them for other languages...and those are the things that take years to learn
07:24 < JasonWoof> yeah, so I'm building my own stuff with node, coffeescript, etc to learn the gatchas
07:25 < GreenDog> i dont like coffeescript cuz it's harder to debug - wrong line numbers vs source code, etc.
07:25 < JasonWoof> yeah, that's annoying
07:26 < JasonWoof> I wish it would compile to the same line numbers
07:26 < GreenDog> i'd probably use it if it did
07:26 < JasonWoof> doesn't seem like that would be too hard
07:26 < JasonWoof> maybe it is for some reason
07:26 < zomg> I recall you should be able to use source maps in Chrome at least to get proper line numbers and stuff like that
07:27 < zomg> though I haven't tried using that feature myself so don't really know
07:28 < db42> do i need to install querystring to parse a query string or do i have somethign internal in express to use ?
07:28 < JasonWoof> db42: node has it builtin
07:28 < db42> which command ?
07:29 < db42> ohhh.. querystring is inernal, k :)
07:29 < JasonWoof> db42: require('querystring').parse
07:29 < db42> tnx
07:29 < JasonWoof> np
07:31 < JasonWoof> in my experiments with coffeescript and node, I've definitely gotten sidetracked by things for a quite a while because I hadn't done them before, or they weren't built in, or whatever
07:31 < JasonWoof> in php, my time to completion is more predictable, because of both my experience, and that everything has been done before
07:31 < zomg> there are tons of libs for node too tho
07:32 < JasonWoof> though, sometimes my sidetracks are longer because I want to do something myself
07:32 < zomg> usually googling reveals :)
07:32 < JasonWoof> eg I wrote a parser for file upload (what's it called? multipart/form-data?)
07:33 < JasonWoof> no, not a parser, a generator, so I can upload a .zip file
07:33 < JasonWoof> there's not as much code out there for using nodejs as the client
07:33 < JasonWoof> I did find code to do this, but it wasn't good
07:34 < JasonWoof> eg I didn't want to read the whole file into memory
07:45 < chovy> JasonWoof: my biggest hangup is sometimes i have to wait for a SO answer to continue.
07:46 < chovy> there's still not much out there when it comes to node, compared to something like php.
07:46 < JasonWoof> chovy: so, sometimes upwards of 3 minutes?
07:46 < chovy> JasonWoof: can be. i've waited a couple of days on occassion.
07:46 < chovy> depends on what you're asking
07:53 < chovy> how do i get mocha to tell me which test failed in output?
08:03 < db42> is github running on nodejs ?
08:03 < zomg> isn't github rails?
08:04 < zomg> https://github.com/blog/530-how-we-made-github-fast
08:04 < zomg> yeah looks like it is indeed rails
08:05 < niggler> github enterprise is jruby + jetty
08:14 < AAA_awright> I'm trying to figure out how to prove if an object was created with 'new' or not
08:14 < AAA_awright> I.e. if it has a constructor, and not just a prototype
08:14 < AAA_awright> And has a constructor, and not just a 'constructor' property
09:29 < MI6> joyent/node: Ben Noordhuis master * 2433ec8 : buffer: allocate memory with mmap()  Work around an issue with the glibc  - http://git.io/mH9Ilw
09:38 < lxsameer> how can i run the node js interpreter ?
09:40 < deoxxa> lxsameer: type... node
09:41 < lxsameer> deoxxa: ah thats my bad, i tried npm :P
09:43 < niggler> ooh ooh isaacs would it be possible for me to claim npm math?
09:44 < timeturner> is it possible to use socket.io with zmq or tjholowaychuk's axon instead of redis?
09:44 < timeturner> does anyone have any recommendations for or against this?
09:46 < deoxxa> niggler: `npm help disputes'
09:47 < timeturner> deoxxa: do you have any advice on socket.io and wether to use redis or zmq or something else?
09:47 < deoxxa> timeturner: not sure, i've never had to do that much with socket.io
09:48 < gildean> timeturner: in what sense?
09:48 < timeturner> I'm slowly reaching the point where I might have to scale it
09:48 < timeturner> more users joining every 15 mins or so
09:48 < timeturner> it's adding up
09:48 < gildean> timeturner: cool, what's the app?
09:48 < timeturner> just a game that I made
09:49 < gildean> i'd prolly use redis because it's simple and fast
09:49 < gildean> timeturner: link?
09:52 < niggler> timeturner you have titillated us
09:53 < gildean> yeah, now i'm all hyped up to play your game
09:54 < gildean> timeturner: don't be a pussy, link up
10:00 < Cronoh>  anyone know what might be up? after about 30 seconds my client, only in interner explorer, d/cs with this clue in node console: xhr-polling closed due to exceeded duration, using socket io
10:03 < sosnon> hello everyone; when i start the REPL in ~ and try to require a module located in ~ by just require('./mymodule') it does not work; so i assume ~ is not the default dir that the REPL is running in; is there a way around it so i can access ~-based modules? or any other dir?
10:03 < sosnon> NODE_PATH could be hepful ;)
10:03 < bnoordhuis> sosnon: you can use relative or absolute paths
10:03 < bnoordhuis> sosnon: i.e. require('/path/to/module')
10:05 < sosnon> sure, it would be more comfortable to have ~ or any other dir (e.g. ~/replPresets/) set a default dir
10:05 < sosnon> (so every user can have various kinds of default contexts for the REPL)
10:09 < sosnon> where should i set NODE_PATH, NODE_MODULE_CONTEXTS and NODE_DISABLE_COLORS? in my shell's init file or does the node REPL provide a dotfile/it's own init file or something?
10:12 < sosnon> seems like it *has* to go to the shell's init file - not toooooooo flexible of a setup
11:26 < whiskers75> deoxxa: love JSMC (http://www.github.com/deoxxa/jsmc)
12:26 < tuhoojabotti> How many file handles can node open?
12:40 < RLa> tuhoojabotti: is ulimit kicking in?
12:40 < tuhoojabotti> Yeah, it does happen when you forget to close them fds
12:40 < tuhoojabotti> :P
12:42 < RLa> i think you can raise the limit :)
12:43 < RLa> but i guess closing is better option
12:43 < tuhoojabotti> I think so too.
12:57 < Iszak> Is there an effort to port node.js modules to the client side? e.g. I would really love event emitter some of the utils, etc.
12:57 < tuhoojabotti> Iszak: browserify?
12:58 < tuhoojabotti> Iszak: https://github.com/substack/node-browserify
12:58 < Iszak> you are a legend.
12:58 < Iszak> a king amongst men, thank you.
12:58 < tuhoojabotti> No, substack is.
12:58 < Iszak> substack thanks!
12:59 < Iszak> tuhoojabotti now.. what is the best way to use this?
12:59 < tuhoojabotti> By reading the readme
13:01 < Iszak> good point, thanks
13:03 < Iszak> tuhoojabotti hmm but I don't really want to bundle everything up..
13:04 < Iszak> I want to require them as needed.
13:05 < Iszak> I guess this will have to do, probably better for performance anyway. Thanks tuhoojabotti and substack 
13:07 < tuhoojabotti> Iszak: You can specify which core modules you want.
13:09 < Iszak> ah I see tuhoojabotti like browserify --exports util -o ./util.js so
13:10 < tuhoojabotti> I suppose, but I do think it's better to bundle all in to one package.
13:10 < tuhoojabotti> less overhead
13:10 < Iszak> yeah I agree.
13:11 < Iszak> plus then you'd have to re-export the modules when browserify updates
13:16 < alFReD-NSH> Hi, I just fetched the latest on master and test/simple/test-http-localaddress.js and test/simple/test-https-localaddress.js are getting a timeout
13:17 < alFReD-NSH> The `end` event for the response never gets emitted
13:17 < alFReD-NSH> Though I checked and the `data` event gets triggered.
13:18 < alFReD-NSH> I'm having ubuntu 64 bit btw.
13:19 < gildean> alFReD-NSH: the tests on the dev-versions are expected to fail from time to time
13:21 < alFReD-NSH> gildean: Just reporting
13:24 < gildean> alFReD-NSH: yep, tho' i'd figure the tests are ran automatically on each commit
13:26 < alFReD-NSH> gildean: You mean travis?
13:27 < alFReD-NSH> gildean: Well I realized, last time it ran a commit, was 6 months ago! :P
13:28 < alFReD-NSH> gildean: https://travis-ci.org/joyent/node , 8 month actually...
13:31 < gildean> alFReD-NSH: except that a branch was merged just yesterday, idk if travis is still used considering all the versions that have been released since 8 months ago
14:53 < ghilly> When people talk about http request and response callbacks being streams, is this true for other platforms like Rails or Django?
14:54 < zomg> ghilly: I think it would depend on the platform but in order to know that I think you might be better off asking on channels related to those
15:00 < ghilly> thanks i'm just trying to understand how it's a stream
15:02 < hemanth_> is EventEmmiter considered as a pattern?
15:40 < Dream707> hi. I have a question. I’m using Appjs SDK(which is node js plus CEF framework, so i have both client side and server side together) and in my module i need to use jQuery. i tried this https://gist.github.com/4306534 but it does not working(should print function but returns error with $ is not defined), what am i doing wrong?
15:42 < gildean> Dream707: you need to define $
15:42 < gildean> like var $ = window.$;
15:43 < Dream707> in what place?
15:43 < gildean> i'm assuming you're trying to use jquery on the node side
15:43 < gildean> so that goes to the backend side
15:44 < gildean> in the window you just load jquery like in a normal webpage
15:44 < Dream707> almost
15:44 < Dream707> a have both window and process in one palce
15:45 < gildean> put that on the window.on('ready', function ().... event
15:45 < gildean> then it should work
15:45 < Dream707> will check
15:46 < Bilge> What kind of massive faggot tries to use gayQuery with node
15:47 < Dream707> https://github.com/appjs/appjs
15:47 -!- mode/#Node.js [+o bnoordhuis] by ChanServ
15:48 -!- mode/#Node.js [+q Bilge!*@*] by bnoordhuis
15:48 <@bnoordhuis> sweet silence
15:48 < gildean> haha
15:51 < Dream707> gildean in place where i trying to call test() it already exists
15:51 < gildean> Dream707: ?
15:52 < Dream707> i mean if i call console.log(typeof($))  it prints function
15:54 < gildean> Dream707: and?
15:55 < Dream707> and it is strange that it says that it is not defined
15:55 < Dream707> what node does when you require something?
15:56 < gildean> Dream707: where are you trying to call the function?
15:56 < Dream707> inside $(function(){...})
15:57 < gildean> $ is only defined in the window context after the window is ready, in the callback of the ready-event you can just define var $ = this.$; or var $ = window.$; and then use the selectors like you were in the window itself
15:57 < gildean> in the node side that is
16:05 < trankil> I will ask something today
16:06 < trankil> ITS A PRETTY GOOD QUESTION
16:06 < trankil> FOR THE FIRST TIME OF MY LIFE
16:06 < trankil> any good implementation of a REST fallback for the twitter streaming api?
16:08 < trankil> NOBODY ????
16:09 < trankil> aandy HELP MEEEEE
16:10 < aandy> i'm not sure i want to be your first. that's a lot of pressure
16:12 < trankil> aandy, not my *fist*
16:12 < trankil> don't be so pervert
16:12 < trankil> JUST HELP ME, PLEASEEE
16:13 < aandy> i still dunno.. what are you looking for exactly? there is both a rest and a streaming API from twitter already?
16:14 < trankil> yes, but to use the "site streaming" api you need to be authorized.
16:14 < trankil> so im looking for an existing solution for that
16:14 < aandy> streaming: https://dev.twitter.com/docs/streaming-apis non-streaming: https://dev.twitter.com/docs/api/1.1/get/statuses/home_timeline
16:14 < trankil> using the rest api.
16:15 < aandy> a solution for authenticating?
16:15 < trankil> no
16:16 < aandy> i don't understand your question
16:17 < trankil> for exple to efficiently pull twitter events (from the rest api)
16:17 < trankil> and transform them into a node stream
16:17 < trankil> JUST THAT
16:17 < aandy> again, what IS the question? how to use their APIs?
16:17 < aandy> they're documented at those two links
16:18 < trankil> aandy, go here https://dev.twitter.com/docs/streaming-apis/streams/site
16:18 < trankil> the 4 point, they explain what im saying
16:19 < aandy> protected data?
16:19 < aandy> dude, can't you just ask your question? it's a waste of both our time that i have to guess your question from my own links :p
16:20 < trankil> duhhhhhh
16:20 < trankil> "Implement a single-user proof of concept using user streams, taking into consideration queueing, processing, REST fallback support, and scaling requirements for expanding to many users."
16:22 < trankil> so, i just want to know if there is any good implementation of that already
16:22 < trankil> aandy (of a REST fallback for the twitter streaming api)
16:22 < trankil> OMG MY ENGLISH IS SOOOO BADDDDDDDDD
16:22 < trankil> Sorry :)
16:22 < aandy> you're looking for another applicants proof of concept so you can apply? if you can't do 4., then i doubt your application will be accepted. and if you don't even know what streaming is, then i suggest you read step 1 again :p
16:24 < aandy> it doesn't say "Show us a single user proof of concept", it says implement
16:24 < aandy> i.e. you :)
16:25 < trankil> aandy: so you don't understand, and you don't know.
16:25 < aandy> that being said, there are examples on the documentation
16:25 < trankil> WHO CAN HELP ME ????
16:25 < aandy> incorrect, i both understand it and know
16:25 < aandy> e.g. https://dev.twitter.com/docs/api/1.1/get/user
16:26 < shanse> YOU NEED TO SCREAM MORE
16:26 < aandy> trolling shouldn't be allowed this close to christmas. please note that this channel is logged
16:27 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:27 < trankil> aandy: please, read this.
16:27 < trankil> https://dev.twitter.com/discussions/6176
16:28 < aandy> did you read it yourself?
16:29 < aandy> first off, the reply clears it up
16:29 < aandy> secondly, that's not what you asked
16:29 < trankil> Yes
16:29 < trankil> is there then an implementation of what @episod recommend
16:29 < yorick> what would be a nice way to only on('error') on EADDRINUSE errors?
16:29 < trankil> THATS ONLY THE QUESTION
16:30 < MI6> joyent/node: Brian White v0.8 * 827b2a9 : http: bubble up parser errors to ClientRequest  Make parser errors bubble - http://git.io/LlZZhg
16:30 < aandy> trankil: yes, using since_id if you lose connection to the realtime endpoint
16:30 < aandy> (on the REST api)
16:30 < aandy> both of which have been linked to, explaining which parameters you should, and which you need, to supply
16:31 < aandy> fallback in this case means that you should be able to get the items/posts from a timeline using the streaming API by default, and if it fails, use the REST API to get the same data
16:33 < trankil> aandy: exactly, so to be clear: ntwitter from AvianFlu doesnt implement this.
16:33 < trankil> DO YOU KNOW ANOTHER ONE IMPLEMENTATION???
16:33 < aandy> they're basically asking you to show that you can build a (small) application which uses, but doesn't require, their streaming API - so you don't build an app around the streaming API and have it crash in case you lose a connection to the former
16:33 < trankil> EVEN NOT JS BASED???
16:33 < aandy> why are you yelling?
16:34 < aandy> i'd do something like: get posts from a/my timeline, store them in a db (by categorizing them for instance by user id, or add in a db for statistics, counting how many you've read out of how many X has posted), then show that stats page to the user
16:35 < aandy> where, underneath, you use the streaming api to retreive said posts, and put in a random "is streaming up", so 50% of the times it should act as if streaming is down, and then use the REST api instead in those cases
16:36 < aandy> i don't work at twitter, but i'd think that'd be more than enough for a proof of concept to their specification
16:37 < aandy> just do some kind of processing. you probably already have something in mind if you're requestion stream api access? do a simple mini version of what your app will do
16:37 < aandy> requesting*
16:38 < trankil> aandy: Ok, and thank you
16:39 < trankil> Ure the only awesome guy here
16:39 < trankil> GOOOOOOO
16:39 < aandy> that or i was the only one around right now
16:39 < M165437> Hello everyone. Does someone here know how geddyjs decides which template engine to use? I started a project with --handlebars but after adding auth I've got some ejs templates that I'd like to change to handlebars.
16:43 < hemanth_> http://h3manth.com/content/eventemitter-nodejs review.emit("request") ;)
16:51 < Cronoh> anyone know what might be up? after about 30 seconds my client, only in interner explorer, d/cs with this clue in node console: xhr-polling closed due to exceeded duration
16:53 < hemanth_> Cronoh, socket?
16:55 < Cronoh> yes im using socket io sorry forgot to include that
16:57 < arcanis> how can ReadStreams be closed ?
16:57 < arcanis> (I want to stop reading after matching the string 'foo' X times)
16:58 < hemanth_> Cronoh, https://github.com/LearnBoost/socket.io/issues/404#issuecomment-1628505
16:58 < aandy> arcanis: .destroy()?
16:58 < aandy> or .end()
16:58 < aandy> destroy effectively closes it
16:59 < aandy> i think that's what you're looking for
17:00 < Cronoh> hemanth_: I will try it 
17:01 < arcanis> aandy, .destroy seems to work, thanks (node does not find .end method)
17:01 < aandy> np
17:02 < arcanis> however it seems to break the pipeline (I close the output stream), can I detach the stream before destroying it ?
17:05 < arcanis> doesn't seems :( https://groups.google.com/forum/?fromgroups=#!topic/nodejs/75R0dOZV1UI
17:14 < Cronoh> hemanth_: Not sure why but it is working :D I added flashsockets to the transports list but its still using xhr polling it seems on IE, but now atleast the heartbeats are coming back and not d/c'ing the client, so thanks for the help
18:10 < Rojuinex> I'm having some problems using the stdio parameter of child_process.exec
18:11 < Rojuinex> I'm trying to set up my child process so it's output prints to the terminal by passing in "pipe" and also "inherit" but the only way I can get output from the child process is to add a on data even and then write to the stream myself.  I'd like to set it up so that all I have to do is set the stdio option when calling exec.
18:11 < Rojuinex> Any help is very much appreciated
18:14 < mscdex> Rojuinex: that should work. what node version? can you post your code somewhere?
18:16 < Rojuinex> http://pastebin.com/5knCg3KC
18:17 < mscdex> Rojuinex: exec() buffers output
18:18 < Rojuinex> O.o I'm not sure I understands what that means
18:18 < bodokaiser> Hi, I have read that to understand how node.js internal works you should read the stream interface. Is this the stream object file: https://github.com/joyent/node/blob/master/src/stream_wrap.cc
18:18 < bodokaiser> ?
18:19 < mscdex> Rojuinex: try using spawn() instead of exec()
18:19 < Rojuinex> okie, thanks
18:26 < Kakera> given an HTML file that looks like this http://pastebin.com/Bt3LxQT1 what's the best way to extract the objects assigned to "oItem"? I'm thinking about using regexp and JSON.parse
18:27 < Kakera> lines 114 and 121
18:32 < PigDude> hey i'm developing a new project, data in postgresql. I like to give node a try from time to time. is express still the most popular framework? which are the most used right now?
18:33 < astropirate> PigDude, welcome to node! Yes, Express is still the most widely used framework
18:33 < PigDude> hm, OK
18:34 < gildean> PigDude: http://npmjs.org has the usage stats, or at least stats on downloads and deps
18:34 < PigDude> i suppose express never appealed to me much, not that that matters
18:34 < astropirate> PigDude, how come?
18:34 < gildean> PigDude: there are quite a few options besides express, tho' express is pretty good imo
18:34 < PigDude> for a framework it is a bit light
18:35 < PigDude> if i want something light i'm going to use erlang and cowboy
18:35 < PigDude> so you see what i mean?
18:35 < PigDude> Kakera, oItem appears to just be a JS obejct? what is there to extract?
18:36 < gildean> PigDude: that's normal node.js ideology, to have small modules so you can decide what to plug together to create your app
18:36 < Kakera> PigDude, the object
18:36 < PigDude> Kakera, yes, what about it?
18:36 < PigDude> gildean, indeed
18:36 < Kakera> PigDude, I need to extract it from the HTML
18:36 < PigDude> gildean, which framework has the largest/high quality addon/plugin ecosystem (in django this was zope and then django etc)
18:37 < PigDude> Kakera, you are scraping files/webpages and don't run headless JS?
18:37 < gildean> PigDude: but i'm pretty sure there are more encompassing frameworks, some built on top of express also
18:37 < PigDude> this is what i am interested in probably
18:37 < PigDude> particularly one combining mongoose and express, and with good support
18:37 < gildean> PigDude: well, if a module is made well, then it should be usable with any other module
18:38 < PigDude> sure, but in an ecosystem you are going to have modules that integrate out of the box
18:38 < PigDude> i am interested in this for rapid development
18:38 < Kakera> PigDude, what's headless JS
18:38 < PigDude> Kakera, phantom, etc
18:38 < PigDude> and then i can take the slow/heavy parts and migrate them to erlang easily
18:39 < Kakera> PigDude, scraping a page is not the only thing I'm doing
18:39 < PigDude> however erlang is still not great for rapid development and while node is pricy to run, it is much quicker than ruby or python
18:39 < gildean> PigDude: well, express/connect has a bunch of middleware that you can just snap in
18:39 < gildean> but most modules are usable as a middleware by just writing them into a simple middleware-function
18:41 < PigDude> Kakera, so match on multiline regex .. /^oItem\s*=(.+)/, then $1
18:41 < PigDude> Kakera, sorry, go line by line i mean
18:42 < PigDude> Kakera, i was going to suggest mutiline and if yo uknow this is defined on one line it is much simpler to just go line by line
18:42 < PigDude> gildean, is there a well supported ORM/forms combo?
18:42 < PigDude> gildean, (one or two libs)
18:45 < PigDude> Kakera, sorry, (.+);\s*$ at the end of that regex
18:45 < PigDude> Kakera, you don't want the ; :P
18:45 < gildean> PigDude: there are like dozens of modules like that, why not search the npm?
18:46 < gildean> https://npmjs.org/
18:53 < PigDude> as someone expert in other things i know that expert opinion can differ from whichever is most popular :^)
19:28 < niggler> how do i forcefully unload and reload a module?
19:31 < mrvisser> anyone here familiar with requirejs?
19:31 < mrvisser> I have a jquery plugin that seems to intermittently load late
19:32 < mrvisser> or maybe not at all :P
19:32 < navaru> mrvisser: try the ##javascript channel
19:32 < mrvisser> will do, thanks navaru
19:32 < rickibalboa> Does anyone have an idea if it's possible to basically sleep a nodejs application, a completely blocked call though so nothing at all can happen during the timeframe (it's just for testing purposes)
19:34 < db42> what is the recomended way to propogate an error to a callback ?
19:35 < db42> and the recommended way to return an non exist value ?
19:35 < jrajav> "propagate an error to a callback"? what does that mean exactly?
19:36 < jrajav> You can't throw an error and then catch it in a callback, if that's what you mean - the usual pattern is to pass a possible error as the first argument to the callback, which will be null on success
19:38 < db42> jrajav, i'm doing a helper func which calls a func which can fail
19:39 < jrajav> Then that helper func can fail, too
19:40 < jrajav> If that's important, then it should pass an error to its callback
19:40 < jrajav> If not, then handle it correctly
19:40 < jrajav> Errors should be passed until they reach a level that knows how to handle them properly
19:40 < db42> function myhelperfunc(error, name) { trysomething(function (err, blah) { if (err) { error(err); return } /* do regular code … */ }
19:40 < db42> is this the way to go ?
19:41 < jrajav> Mmm.. don't you have a callback?
19:41 < db42> hmm, good call
19:41 < jrajav> It should be more like function helperfunc (name, cb) { trysomething(function (err, blah) { if (err) callback(err); else { asdf; } }); }
19:42 < jrajav> *cb
19:42 < db42> should i return 'null' for empty results ?
19:42 < jrajav> If that's not a possible value for the results, then sure
19:42 < db42> k
19:43 < db42> if i return; without a result, what will the return value be ?
19:43 < jrajav> undefined
19:44 < db42> so what would be the recommended way, return; or return null; ?
19:44 < db42> (let's say an empty db query result)
19:44 < jrajav> Well, return null; if you want to return null :P
19:44 < jrajav> But a db query is probably asynchronous, right?
19:45 < db42> yeah
19:45 < jrajav> In which case your return value wouldn't matter a lot
19:45 < jrajav> The callback call is what's actually passing the relevant information
19:45 < jrajav> You generally either return a value or call a callback, not both
19:45 < jrajav> In fact, if you ARE doing both, you have a bad function that should be split
19:46 < db42> if the callback has both err result, how do i call it without an error ?
19:47 < db42> cb(null, result) ?
19:47 < jrajav> Yup
19:50 < db42> how is this code ?
19:51 < db42> http://pastebin.com/qhMH9bvU
19:52 < jrajav> Looks good, but do you really want to pass an error when the user isn't found?
19:52 < jrajav> Generally you'd pass a sentinel value for the result, instead - such as null
19:52 < jrajav> A search failing isn't really an error
19:53 < jrajav> Also, you should probably figure out how to short-circuit that forEach. As it is it looks like you'll traverse the whole set even after finding the user.
19:53 < db42> jrajav, thats why i have the return the cb call ?
19:54 < db42> after the cb call
19:54 < db42> or am i doing it wrong ?
19:56 < jrajav> That will just continue to the next element
19:56 < db42> hmmm
19:56 < db42> you have a point, what is recommended way /
19:59 < db42> i guess i should use some
20:01 < db42> http://pastebin.com/APZYSySc <-- is this the recommeded way then ?
20:03 < jrajav> Yup, looks good
20:03 < jrajav> You should use === for the name test
20:03 < db42> k, wow… talk about reactive programming
20:03 < jrajav> Oh, wait
20:03 < jrajav> You will always call callback(null, null)
20:03 < jrajav> Even if you already called it successfully
20:03 < db42> ohh, true :|
20:03 < jrajav> You should wrap the .some call in an if check
20:04 < db42> i need to add a boolean flag ?
20:04 < jrajav> Because it will return true if you found it
20:04 < db42> k
20:04 < db42> weird shit :)
20:04 < jrajav> :P
20:04 < jrajav> If you ever return true in a .some, it will return true. Otherwise it will return false
20:04 < jrajav> It's like a huge || (logical or)
20:04 < xxxcash> привет
20:04 < xxxcash> всем
20:05 < jrajav> Exactly, what he said
20:05 < xxxcash> кто-нибудь может помочь с утечками?
20:05 < db42> http://pastebin.com/K4Kztzhd
20:06 < db42> so this is the correct way ?
20:07 < jrajav> Hmm.
20:07 < jrajav> Without testing, looks good to me
20:07 < db42> thanks for the tips
20:08 < gildean> xxxcash: there is a -ru channel also iirc
20:08 < jpdery> does anyone knows, using expect.js how to know whether a function was called ?
20:08 < jpdery> something similar to expect(func).toHaveBeenCalled in jasmine
20:09 < jpdery> I've been through the readme and I just can't seem to find it
20:10 < xxxcash> gildean: I have an memory leaks when I am parsing html 
20:11 < xxxcash> via jsdom
20:13 < jrajav> jpdery: I don't think expect provides that. You'll need a mock/spy framework like sinon
20:13 < db42> yey, seems to work :)
20:13 < gildean> xxxcash: okay, don't reuse objects defined in a higher scope in a deeper function
20:13 < jpdery> jrajav: I see, thanks!
20:13 < jrajav> The Holy Trinity of testing: Runner, Assertion lib, Mock lib
20:14 < gildean> or rather, define new variables in the deeper functions to which you set the values from a higher scopes object
20:15 < db42> my basic auth system is implmented, just need to add it as an middleware
20:20 < db42> now back to some mongoose
20:25 < db42> how do i return first element of an array or null if it's empty (or null by itself) ?
20:26 < Cronoh> val = typeof myArray[0] === 'undefined' ? null : myArray[0];
20:28 < db42> i'll add it to array prototype
20:28 < Cronoh> ok
20:37 < mscdex> db42: or just: `val = myArray[0] || null;`
20:38 < mscdex> db42: but if you shouldn't check for null specifically, you could then always use `myArray[0]` and check with `!myArray[0]`
20:40 < squeakytoy> Hey all. What (filedisk/ffline) databases are popular to use with node.js?
20:43 < db42> maybe sqlite ?
20:45 < jet4fire> ueberDb with dirty
20:46 < jet4fire> up to million records
20:46 < jet4fire> awesome
20:47 < jimbojw> hey all, getting an error trying to compile node.js from github on Mac OSX - is this the right place to ask questions?
20:47 < db42> jimbojw, you using brew ?
20:48 < jimbojw> no, I wanted to get the latest from the repo
20:48 < db42> i think brew allows that, no ?
20:48 < jimbojw> I don't know, I'm not a mac expert - ubuntu expat
20:49 < jimbojw> i thought making from github master HEAD would be best
20:49 < jimbojw> i'll take a look at brew
20:49 < db42> it's called homebrew
20:49 < MI6> joyent/node: isaacs reviewme * 48022c4 : net: Push data to underlying layer more aggressively  This fixes the case (+207 more commits) - http://git.io/8_hXKA
20:49 < db42> and you can install the HEAD version
20:50 < db42> they have a support channel here, altough it's very easy to use
20:50 < jimbojw> yeah, I've used brew, just nothing fancy - always used it like apt-get and just let it do whatever it wants. In this case I really want the latest, I'll try that out
20:52 < MI6> joyent/node: isaacs reviewme * 35f07b9 : net: Handle sync writable streams synchronously  This fixes the case wher - http://git.io/kjodaQ
20:52 < db42> do brew install --HEAD node
20:52 < jimbojw> doing :)
20:55 < db42> sub-documents in mongoose are also first citizen documents, yeah ?
20:55 < db42> (i.e. they are a normal document which i can access without the parent document first) ?
21:01 < jimbojw> yeah, won't build from brew either
21:01 < jimbojw> dies on node_buffer.o
21:01 < jimbojw> ../src/node_buffer.cc:234:15: error: use of undeclared identifier 'MAP_ANONYMOUS'
21:01 < jimbojw>   int flags = MAP_ANONYMOUS | MAP_PRIVATE;
21:01 < jimbojw>               ^
21:01 < jimbojw> 1 error generated.
21:02 < db42> diff with the sane version for mmap stuff
21:04 < jimbojw> giving up for now, I'll try again in a couple of days
21:04 < db42> file a bug report ?
21:04 < tejendra> can any body tell me how to record live stream video using node.js
21:04 < tejendra> ?
21:15 < astropirate> tejendra, pipe the input stream to disk? o_O
21:18 < jimbojw> looks like isaacs beat me to it https://github.com/joyent/node/pull/4419
21:22 < db42> i can't do a subdocument that points back to it's parent in mongoose ?!? :(
21:23 < db42> do i need to use ObjectId for that ?
21:27 < jimbojw> i'm not familiar with mongoose in particular, but I'm reasonably familiar with mongodb - what is it you're trying to do @db42?
21:27 < db42> I have 2 schemes, which are both documents, but i want them to refere to each other
21:29 < db42> (if it makes sense)
21:30 < tejendra> astropirate: does it will pipe live stream video to database 
21:30 < tejendra> ??
21:31 < tejendra> astropirate: node.js ??
21:31 < db42> if you code it
21:31 < jimbojw> db42: I believe the usual way this is done is with an object value with a $ref property pointing to the other table, and an $id property pointing to the other document's ID
21:32 < db42> jimbojw, yeah, i'm trying something now ( i basically have to manually get the list of pointing $ids)
21:32 < jimbojw> ex: db.towns.update({ _id: ObjectId("…")}, { $set: { country: { $ref: "countries", $id: "_other_doc_id_" }})
21:33 < jimbojw> yeah, mongo's not built to do joins or have docs reference eachother
21:33 < jimbojw> typically you put any relevant info in the document that you need
21:34 < db42> i'm find with querying the other type info when i ned
21:34 < db42> need
21:34 < db42> just trying to figure out the simplest syntax to get a list of ids as objects in mongoose now
21:34 < jimbojw> ah ok
21:34 < jimbojw> that I probably can't help with
21:37 < mass_alvaro> @db42 I've been swimming in MongoDB/Mongoose all week. Just joined the room. Did you paste bin your original question? Id like to take a look
21:38 < db42> it's not a pastebin, just a simple concept of object A refering to object B which referes back to object A
21:38 < mass_alvaro> ah.
21:38 < db42> so i figured I can't do that, and i need to use ObjectIDs instead of both palces
21:38 < db42> places
21:38 < db42> and then I need to write some helper methods to the schema to retrive the objects from those objectids
21:38 < db42> but it's all so twisted :)
21:39 < dominictarr> hey does anyone know  what sort of datastructure mongo is based on? is it a b-tree?
21:39 < mass_alvaro> In mongoose have you tried the references in schemas?
21:39 < db42> mass_alvaro, the references ? you mean to put one schema inside the other ?
21:40 < mass_alvaro> i.e.: coll2ID: {type: Schema.ObjectId, ref: 'col1'._id}
21:40 < db42> how would that help me with the circular refercing ?
21:40 < mass_alvaro> db42 you know what I settled on? I basically did a map/reduce and only pulled the info I needed at run time.
21:41 < db42> sounds nice, i'm not @ map/reduce yet :)
21:41 < mass_alvaro> again, sorry I missed the original post
21:41 < db42> but i'l look at it
21:41 < db42> for now i'm trying to figure out the best way to implment schemaA.methods.getAllB()
21:41 < mass_alvaro> i was trying to model comments, but I had a separate collection of users
21:41 < db42> where schemaA has a list of B's objectid's somewhere
21:42 < db42> what is node.js recommended way to return to a callback with a list of elements, which inside my helper func, the elements are retrived async themselves ?
21:43 < mass_alvaro> db42 question. why would you persistently need schemaBs IDs in a? is it that big of a deal to query it at run time?
21:43 < jimbojw> dominictarr: why do you ask?
21:43 < qubit[01]> db42,  nested callbacks ?
21:44 < dominictarr> jimbojw, I'm just curious. I know that couchdb is an append only b-tree, and that leveldb is a log-structured merge tree
21:44 < db42> mass_alvaro, i see your point
21:44 < db42> mass_alvaro, i'll have to thinkg about it :)
21:45 < mass_alvaro> i mean just a question. I'm far from an expert.  I just found it was easier to do it that way in my aps
21:45 < db42> qubit[01], i can't aggrigate all the callbacks, and return them to my own cb in one big one time chunck call ?
21:45 < db42> mass_alvaro, sounds reasonable i guess (atleast for my testing stage :) )
21:45 < mass_alvaro> otherwise you need to learn mongooses map/reduce syntax
21:45 < db42> just like mongoose .find() returns the callback with all the results already
21:46 < mass_alvaro> i use mongoose .find() as a helper
21:47 < jimbojw> dominictarr: i'm not sure what data structures it uses under the covers for indexing :/
21:47 < qubit[01]> db42, you're using async ?  If you have a list of elements that all are fetch asynchonously , you want to collect them all into one list, async.forEach() is your friend, unless I'm misunderstanding
21:47 < dominictarr> jimbojw, just found this: http://docs.mongodb.org/manual/core/indexes/ 
21:47 < dominictarr> it says it uses a b-tree
21:47 < mass_alvaro> you know whats funny. I actually found couchDB easier to use in situations like this
21:48 < mass_alvaro> so what's everyone working on these days?
21:48 < mbalho> i just made this https://github.com/maxogden/drone-kinect
21:49 < mass_alvaro> sweet. any videos of it in action?
21:51 < mbalho> yea just uploaded one http://www.youtube.com/watch?v=BfyQ2_XbkIs
21:52 < mbalho> it was my first time working with kinect, it was fun
21:52 < mass_alvaro> very cool!
21:55 < SomeoneWeird> mbalho, neat
21:56 < jimbojw> dominictarr: oh yeah, that's right
21:58 < jimbojw> dominictarr: you can actually inspect the indexes too via db.system.indexes.find
22:04 < db42> mbalho, cool, i did that too :)
22:05 < mbalho> db42: whoa really? for the parrot ar drone?
22:05 < db42> yeap
22:05 < db42> a year and a half ago
22:05 < db42> but in .NET :)
22:05 < mbalho> what gestures did you come up with for drone control?
22:06 < mbalho> i ended up just using right and left hand position cause it was my first time working with kinect and i wanted to start simple
22:06 < db42> hand up = up, down = down, middle = nothing, front = forward, tilt = tilt, etc...
22:06 < db42> but its hard to get it right, it was more of a POC
22:07 < db42> if i have a list of ids, how can i easily get them all with mongoose ?
22:07 < db42> (the objects they represent that is)
22:10 < astropirate> Has anyone done benchmarks on how expensive try catch statements are?
22:29 <@Nexxy> mbalho, ++
22:30 < Marcky898> is anyone good with node-mysql?
22:31 < aandy> Marcky898: ugh, that's the worst way to ask, because it's a trap question ;). try asking your question instead. i'm sure many have used node-mysql to some extend
22:31 < Marcky898> well w/e
22:31 < Marcky898> I just have problem with callbacks
22:32 < aandy> shoot
22:32 < Marcky898> Like I make an insert but the callback is never fired
22:33 < hipsterslapfight> code would help
22:33 < aandy> via db.query?
22:34 < Marcky898> connection.query('INSERT INTO something SET ?',{id : 10},function(){ //dosomething callback })
22:34 < Marcky898> but the callback is just never fired...
22:34 < aandy> hmm is it inserted correctly if you check? i think you have to use an array for params 
22:34 < hipsterslapfight> the actual code, on pastebin or something
22:35 < aandy> but i might confuse it with another mysql module (there are a few)
22:35 < Marcky898> ya the insert works
22:35 < cellvia> anyone tried the v8 profiling with node inspector?   in the readme it is mentioned to be extremely experimental so im wondering if its worth bothering
22:35 < aandy> try function(e, r) { console.log('cb', e, r); } and see if it writes anything (probably doesn't, but i don't know what your current cb looks like)
22:38 < aandy> Marcky898?
22:42 < MI6> joyent/node: isaacs master * 945f877 : test: Fix test-https-localaddress*  Fix #4418 - http://git.io/Uw2auw
22:43 < jimbojw> db42: did you figure out how to get your objects out of mongoose by ID?
22:45 < fg3> anybody using testacular - I'm wondering why my base path is "../../../../..."
22:48 < chovy> fg3: is that some type of cancer I should be getting screened for?
22:48 < qbit> howdie
22:48 < fg3> chovy: it's the tester 
22:48 < fg3> you can test for anything 
22:49 < aandy> chovy: check yourself before you, you know, get cancer
22:50 < chovy> i use mocha
22:55 < fg3> testacular and mocha work together 
22:56 < fg3> testacular lets you run in the actual browser 
22:57 < aandy> fg3: sort of like zombiejs?
23:03 < deoxxa> aandy: correction
23:03 < deoxxa> aandy: check yourself before you wreck yourself
23:03 < aandy> deoxxa: that was the reference, yes :D
23:03 < deoxxa> oh
23:03 < deoxxa> well carry on then
23:04  * deoxxa tips hat
23:04 < deoxxa> (yo)
23:04 < aandy> word
23:08 < chovy> i have not used testacular yet
23:08 < chovy> i use selenium for browser
23:10 < Marcky898> man
23:10 < Marcky898> ...
23:10 < Marcky898> mannn
23:10 < Marcky898> my problem was that i had the wrong database selected
23:10 < Marcky898> t_______________________________t
23:10 < deoxxa> gg
23:11 < aandy> how can you have had the wrong db when you verified that it was inserted correctly? :P
23:11 < Marcky898> nah yesterday it was..
23:11 < Marcky898> i should reinstall mysql
23:11 < Marcky898> its kinda fucked up
23:11 < Marcky898> i had mysql installed once and then installed wamp server 
23:11 < Marcky898> now the databse keep switching from its old name
23:12 < Marcky898> dont ask me how man
23:12 < Marcky898> ...
23:12 < Marcky898> its like if there was 2 instance of mysql running on my computer
23:12 < aandy> s/like//
23:13 < aandy> s/like\/\//like\/as/
23:13 < aandy> :(
23:13 < deoxxa> you're hurting me with regexes
23:13 < aandy> there probably was, or you were accessing the socket of one, and tcp of another
23:33 <@Nexxy> \o/
23:34 < deoxxa> HI THERE
23:35 <@Nexxy> OH HAI
23:41 < jimbojw> has there been any news (or even rumors) as to when we might expect node v. 1.0?
23:42 < jimbojw> been out of the loop for a while
23:42 <@Nexxy> someday
23:43 < forever1o6> someday ill find you
23:43 < aandy> hmm, not sure. i think, i *think* it's after v. 9, but don't stick me to it
23:43 <@Nexxy> you're thinking of 0.10
23:43 < aandy> and yes, i mean v.0.8 -> 0.9 -> 2.0 -> 3.0 ... -> 1.0.
23:43 < aandy> ah, right
23:44 < aandy> i always confuse the titles, my bad
23:44 <@Nexxy> you have an interesting number system there
23:44 <@Nexxy> lol
23:44 < aandy> well, when i grew out of the greek, i switched to hex, and now i just make it up as i go
23:44 <@Nexxy> personally I'm waiting for node v0.potato
23:44 <@Nexxy> it will be amazing
23:44 < aandy> isn't there a palpha of that?
23:44 < aandy> cutting potato build
23:45 < s5fs> Nexxy: hai!
23:45 <@Nexxy> s5fs, !
23:46 < qbit> lol - i have potato as a highlight
23:46 <@Nexxy> uhhh 
23:46 <@Nexxy> lol
23:46 < s5fs> Nexxy: got a basic cmd structure working with the bluetooth bee, now i'm wiring up the temp sensor. once that's done, node integration!
23:47 < s5fs> real complex protocol, "cmd::<do something>"
23:48 <@Nexxy> s5fs, http://i.imgur.com/17LLd.gif
23:48 <@Nexxy> SFW
23:48 <@Nexxy> lol
23:48 < s5fs> haha
23:51 < jimbojw> I heard that ES.next/harmony/6 will have a module system different from Common.js.  Does anyone know where I can read about this?  My google-fu is weak today.
23:51 < PigDude> oh, mongoose is for mongo, of course :P
23:52 < PigDude> what dbal+orm is good for psql?
23:53 < aandy> PigDude: https://github.com/dresende/node-orm ? (haven't used it)
23:57 < owen1> i want to write an apple push nofication app. http service that sends data to apple's server. flicker published their architecture - http://code.flickr.net/2012/12/12/highly-available-real-time-notifications/  TLDR: redis (single point of failure) publish to multiple redundant node apps that actually do the job (using SETNX command for ensuring only 1 node app takes care of each message). my question: 
23:57 < owen1> isn't it better to have multiple node apps with a redis server on each machine and achieve scalability via load balancer?
23:58 < owen1> http request 
23:58 < remysharp> just checking, but am I right in saying there's no way to do a setInterval with a microsecond value, rather than millisecond in Node?
23:59 < nickkthequick> isn't that just a for loop? :p
23:59 < aandy> owen1: haven't used the push ecosystem, but it really does depend on how the redis instance performs. i'm a bit surprised (as you probably are) that they only run one. even their id server runs two instances, but doable? yes
--- Log closed Mon Dec 17 00:00:34 2012
