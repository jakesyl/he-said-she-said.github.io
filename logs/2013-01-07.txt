--- Log opened Mon Jan 07 00:00:18 2013
--- Day changed Mon Jan 07 2013
00:00 < Aria> http://www.rfc-editor.org/
00:09 < mscdex> i use http://tools.ietf.org/html/rfcXXXX
00:17 < Virunga_> Hi, this mongodb query produces the shown effect, a $ field key when the document doesn't already exist. If the document exists is updated without problems. Could you help me? Why it doesn't work when the doc didn't exist?
00:18 < Virunga_> I forgot the link http://pastie.org/5632857
00:26 < Aria> mscdex: Good call.
00:47 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:02 < Danilo2982> Hi. Can please someone say to me how I use 'binary' datatype on node.js. I have a content I did read from mongodb and it comes as 'Binary' data type. I saw this on node-inspector. How can I create a Buffer from it ? I already try new Buffer(data, 'binary') without success.
01:08 < kadishmal> isaacs: HI Isaac!
01:08 < kadishmal> are you here?
01:10 <@konobi> on a weekend, quite possibly not
01:10 < kadishmal> konobi: are you to me?
01:11 <@mbalho> ask a question yo
01:11 < zoned> i'm trying run "npm install serialport" and get the following error.. http://pastebin.com/is1hgX1r
01:11 < zoned>  (or http://ge.tt/4zEYWqU/v/0?c ) can anyone help?
01:12 <@mbalho> zoned: open an issue on the repo, i have never used it on windows
01:12 <@konobi> "Ensure you have Visual Studio 2010 installed"
01:12 < zoned> you actually need the full version of visual studio? i've got the sdk installed
01:15 < astropirate> why am I on irc
01:15 < astropirate> on this weekend
01:15 < astropirate> :|
01:16 < astropirate> right
01:16 < astropirate> because I have no life
01:16 < astropirate> thanks node.js
01:16 < zoned> and because nobody wants to go outside at all when it's 9 degrees.
01:16 < zoned> and there
01:16 < zoned> s no more football for another week
01:17 < kuplatupsu> you mean -9 degrees
01:17 < astropirate> first of all
01:17 < astropirate> what location are we talking
01:17 < astropirate> second
01:17 < zoned> http://www.microsoft.com/visualstudio/eng/downloads   which of these do i need to use node on windows?
01:17 < astropirate> what units are we talking
01:18 < kuplatupsu> exactly that was the point of my comment
01:18 < astropirate> centigrade or Fahrenheit 
01:18 < zoned> minnesota, fahrenheit
01:18 < astropirate> ahh
01:18 < astropirate> I hate DC
01:18 <@Nexxy> zoned, none
01:18 < astropirate> its really cold in the winter
01:19 < astropirate> really hot and humid in the summer
01:19 < zoned> Nexxy, for "serialport" to install correctly is what i meant
01:19 <@Nexxy> oh
01:19 <@Nexxy> that's a good question
01:19 <@Nexxy> I've never tried to get serialport working on windows ;x
01:19 < zoned> it's been very unfun so far
01:21 <@Nexxy> I know it *should* work
01:21 <@Nexxy> since 1.0.0
01:21 <@Nexxy> but I haven't the foggiest as to what the win dependencies are
01:33 < _numbers> i have used child_process.spawn() and i want to forward all process.stdin to the child, including keystrokes (setRawMode true?) how can i do it?
01:34 < _numbers> with raw mode off i am able to just process.stdin.on 'data', (data) -> child.stdin.write data # except this does not work with like arrow keys and home,end,pgup,pgdn
01:36 < ChrisPartridge> _numbers: check out the stdio option for cp's
01:37 < _numbers> ah These may be shared with the stdio streams of the parent proces
01:41 < _numbers> so { stdio: 'inherit' } # works except i still want to also child.stdin.write() to it in addition. is it not possible?
01:45 < _numbers> is there a way to start REPL with some code to bootstrap the session?
01:50 < Aria> Yeah, look at the repl library.
01:50 < _numbers> i'm looking at this http://nodejs.org/api/repl.html    and got repl.start() to work but i was expecting it to inherit the current scope. how do i pass it scope? hmm
01:51 < _numbers> ahh .context
01:51 < dnz-> AHHH
01:51 < dnz-> AHHH
01:51 < dnz-> MAJES SO UCH SESNSE NOW
01:51 < dnz-> KEKEKE
01:51 < Aria> AYeup
02:05 < average_drifter> hi
02:06 < average_drifter> yhpark: you're that chick from north korea ?
02:06 < yhpark> ??
02:06 < yhpark> what are you saying
02:06 < yhpark> I'm from south korea
02:08 < yhpark> not funny
02:14 < wllmtrng> Hey guys, I'm an embedded engineer with no background in web technologies. I've just learned the basics of node.js, html, and css. Where do I go from here to learn more? Any open source projects I can help out with that you guys can recommend?
02:16 < mansoor-s> wllmtrng, what kinds of stuff do you want to do?
02:19 < wllmtrng> Let's see hereâ€¦ I'm mainly interested in node.js's ability to create a soft real time application from the front and backend
02:19 < wllmtrng> very powerful stuff
02:19 < wllmtrng> the backend stuff I can probably figure out, but the front end stuff
02:19 < wllmtrng> that's a whole new territory for me
02:22 < wllmtrng> i guess i could start off with creating a simple chat application
02:24 < Oddman> that's a good starting point tbh :)
02:24 < Oddman> that'll give you a full stack playground :)
02:27 < wllmtrng> alright, I'm assuming I should look at appjs
02:27 < wllmtrng> for all the gui stuff?
02:29 < mansoor-s> wllmtrng, appjs is for wanting to create desktop applications with CSS/HTML/JS
02:29 < mansoor-s> for front-end give jQuery a try
02:30 < mansoor-s> its a library for interacting with the DOM
02:30 < mansoor-s> and comes with a few bells and whistles to make your life easy
02:32 < wllmtrng> let me take a look
02:38 < wllmtrng> mansoor-s: any good jquery examples or website you can direct me too
02:38 < wllmtrng> to
02:50 < mansoor-s> wllmtrng, i honestly don't know any.. I got into it years ago
02:50 < s5fs> wllmtrng: the jquery site itself has great examples, as does stackoverflow
02:50 < mansoor-s> wllmtrng, but head over to #jquery lots of helpful people there if you have any jquery questions
02:51 < wllmtrng> already looking at those as we speak
02:51 < wllmtrng> thanks for the tip
02:51 < s5fs> wllmtrng: sounds like you're well on your way. also, ##javascript is good for js questions not specific to jquery or node.js.
02:52 < wllmtrng> new frontier for me guys, finally branching out of C development!
02:53 < mansoor-s> \o/
02:53 < s5fs> wllmtrng: welcome! i hope you enjoy your time with js, it's fun stuff
02:53 <@Nexxy> wllmtrng, you've come to the right frontier
02:54 <@Nexxy> welcome
02:54 < wllmtrng> thanks for having me
02:55 < mansoor-s> hmm 
02:55 < mansoor-s> there is an entrance fee though
02:55 <@Nexxy> we need to put together some sort of official sticker pack for people that are learning node and JS
02:55 < AlainODea> I'd like a proxy that allows a DMZ from which no TCP connections could be initiated. I have three hosts User, Proxy and App. I would like App to connect to Proxy. When User connects to Proxy over HTTP or HTTPS the requests should be semantically proxied on the existing connection App made to Proxy. Is there an easy way to do this?
02:55 <@Nexxy> research has shown that the number of relevant stickers on your laptop is directly proportional to the speed of learning
02:56 < wllmtrng> just like how you can increase the hp of your cars with all those decals
02:56 <@Nexxy> indeed!
02:56 < s5fs> Nexxy: boy do you love stickers
02:57 <@Nexxy> it's just how I was programmed
02:57 < s5fs> Nexxy: i'd argue the sticker->learning point, but seeing as how I've got no stickers and no skill.. *shrug*
02:57 <@Nexxy> hah
02:58 <@Nexxy> you have plenty of skill
02:58 < Lorentz> oh no, I have no stickers on my laptop
02:58 <@Nexxy> also I know I've given you at least one sticker
02:58 < wllmtrng> where are these stickers, and how can I get them
02:58 <@Nexxy> wllmtrng, conferences mostly
02:59 < mansoor-s> I'm too poor to go to conferences
02:59 < mansoor-s> :(
02:59  * Nexxy brags about the NPM sticker that isaacs personally delivered
02:59 <@Nexxy> mansoor-s, me too! that's when you submit talk proposals
02:59 <@Nexxy> (you should anyway)
02:59 < mansoor-s> Nexxy, if i could public speak i wouldn't be poor anymore 
03:00 < mansoor-s> lol
03:00 <@Nexxy> hey
03:00 <@Nexxy> I can't public speak
03:00 <@Nexxy> and that hasn't stopped me
03:00 <@Nexxy> you can do it
03:00 <@Nexxy> it's like they say on sesame street
03:00 <@Nexxy> "ain't nothin' to it but to do it"
03:00 <@Nexxy> I think that's from sesame street.
03:01 <@Nexxy> mansoor-s, http://www.youtube.com/watch?v=7_l-6KsxVjc
03:02 <@Nexxy> sing w/ me
03:02 < s5fs> Nexxy: haha!
03:02 < s5fs> someone is flooding ##c++ with racist code
03:02  * Nexxy looks
03:03  * mansoor-s needs a job where they pay for conferences
03:04 < wllmtrng> definitely don't work at a defense contractor
03:04 < wllmtrng> I don't even get free coffee
03:04 < s5fs> wllmtrng: you doing defense work too?
03:04 < wllmtrng> yeah I'm looking to get out
03:04 < mansoor-s> wllmtrng, DC based?
03:05 < bnoordhuis> mansoor-s: working on high-profile open source projects helps
03:05 < bnoordhuis> i get a lot of speaker invitations and i don't even like conferences :/
03:05 < wllmtrng> lovely San Diego
03:05 < mansoor-s> pass it here brother
03:05 < mansoor-s> bnoordhuis, what opensource projects do you work on?
03:06 < s5fs> bnoordhuis: you hate people but you love gatherings
03:06 < bnoordhuis> mansoor-s: well... node, for one
03:06 < mansoor-s> :D
03:06 <@Nexxy> you love salads, but you hate making them
03:06 < Lorentz> salad is easy-mode though
03:07 < Lorentz> mmm, smoked salmon salad
03:07 < timeturner> node salad-maker.js
03:07 < timeturner> operates my salad machine
03:09 < s5fs> timeturner: saladshooter.js?
03:19 < MI6> joyent/node: Ben Noordhuis master * fa3bfc3 : test: put tty in blocking mode after test  Tests can leave the tty in non (+1 more commits) - http://git.io/HwpLSA
03:30 < AlainODea> Can http-parser be configured to parse HTTP requests coming from the server-side? I know this sounds weird, but it allows me to create a proxy that can easily tell when back-ends are down and doesn't need to know where those back-ends are.
03:31 < AlainODea> Essentially I want to create a TCP connection and have the server send HTTP requests to the client. The client in this case will be the backend server.
03:31 < mansoor-s> wllmtrng, how is san diago by the way? there is a job there, they asked me if I am willing to relocate
03:32 < wllmtrng> San Diego is a good place to live
03:32 < mansoor-s> i read online its deteriorating 
03:32 < mansoor-s> drugs and gangs are becoming common place
03:32 < wllmtrng> except for one thing: we have a thing called the sunshine tax
03:32 < wllmtrng> hmm
03:32 < wllmtrng> where I live I don't see any of that
03:33 < wllmtrng> san diego city is basically a coalition of communities
03:33 < mansoor-s> so the sunshine tax is used int eh softwrae industry too then?
03:33 < wllmtrng> yeah I lived in sacramento before, and I didn't get a pay bump when I moved here
03:34 < wllmtrng> living costs in san diego are much higher than in san diego
03:34 < wllmtrng> but the weather is nice, temperature is usually around the 70's
03:34 < wllmtrng> with the exception of these past couple of weeks
03:34 < wllmtrng> it's around 50-60 right now
03:34 < wllmtrng> and that's probably the lowest it will get
03:35 < mansoor-s> mmmmmmm  50-60 degrees
03:35 < wllmtrng> In the summer time temperature prob maxes out at 100 degrees for 2 weeks
03:35 < wllmtrng> And it rains probably 2 weeks in a year
03:36 <@Nexxy> how does anything grow?!
03:36 < wllmtrng> The trees just stay green
03:36 < zoned> anyone ever used noduino? i finally got npm install to complete, but now i get the following error http://pastebin.com/bCJ2wyC4
03:37 < wllmtrng> mansoor-s: which company are you looking at, if you aren't privy to discussing?
03:37 < zoned> 50-60 would be so nice..it's a miserable 13 here
03:37 < scar> if i wanted to use jsdom with node, how would i locate the # of a given tags on a page, and any attributes? IE, count number of <img> and grab all the alt tags, etc
03:38 < scar> it was like 80 degrees xmas eve here in dallas lol
03:46 < zoned> when i run "git submodule update --init" i receive "permission denied (publickey)"  .. can this command be used under windows?
03:51 < mscdex> node.js rules!
03:51 <@Nexxy> \o/
03:51 <@Nexxy> STEVE HOLT!
04:10 < eduardo> hey guys
04:11 < eduardo> Anyone got advice on how to store user data (esp passwords) ?
04:14 < Zak> eduardo: use hashing. You can salt the hashes if you want more security.
04:14 < Zak> eduardo: http://en.wikipedia.org/wiki/Cryptographic_hash_function
04:15 < Zak> you should never be storing the passwords in plain-text
04:16 < mansoor-s> eduardo, you can use bcrypt https://github.com/ncb000gt/node.bcrypt.js/ for hashing
04:16 < mansoor-s> its a bit tricky to set up on windows
04:16 < mansoor-s> you should be good on linux/osx though
04:16 < Zak> whats with you guys leaving the windows guys behind :(
04:17 < Zak> undestandable i guess. Windows can be a little bit painful!
04:19 < eduardo> ah darn i am on windows :)
04:19 < eduardo> ok thats enough to start me thinking and researching. thanks!
04:30 < MrTrick> Is there a decent way to get the source of a function, less the enclosing 'function() { ... }' bits?
04:31 < mansoor-s> MrTrick, what are you trying to do?
04:32 < MrTrick> mansoor-s: customisable logic... I need to store functions as strings and embed in JSON.
04:33 < mansoor-s> MrTrick, o_O
04:33 < SomeoneWeird> function.toString().replace(/function\(.*\)\s\{/,'') or something
04:33 < mansoor-s> ^^ what he said
04:33 < MrTrick> I know. :-) Moving past the strangeness.
04:33 < mansoor-s>  or she
04:33 < MrTrick> Thanks SomeoneWeird.. I was just wondering if that was the best, or whether there was an alternative.
04:34 < MrTrick> (It's a bit non-symmetric, actually. JS provides the Function class for semi-safely defining these functions from strings, but not an easy way to go in the other direction.
04:34 < MrTrick> https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function )
04:48 < yarco> help!!! https://gist.github.com/db0fc076ef2c876c6ee4
04:48 < yarco> it stucks.   not sure why
04:49 < yarco> after running  `node test.js`
04:49 < yarco> mongodb + nodejs
04:57 < zoned> anyone used noduino? i've got everything set up, but it won't connect to my board. debug - websocket writing 5:::{"name":"response","args":[{"msg":"board.connect","response":"failed"}]} events.js:2725: Uncaught Error: Opening \\.\/dev/: Unknown error code 3.
04:58 < zoned> i assume this is beacuse i'm on windows (which noduino says it supports). i opened up board.js, and it's doing a "ls /dev | grep usb" to find where the arduino's connected.
04:58 < zoned> anyone have any ideas?
05:04 < MrTrick> zoned: I don't have any ideas, sorry. Does it work with vanilla arduino?
05:04 < MrTrick> Is node.js missing a bunch of string functions?
05:04 < MrTrick> How can I see what functions String exposes?
05:05 <@mbalho> its just javascript
05:05 < zoned> i cloned github/ecto/duino and in that seemed to connect just fine, so i assume it's something with noduino
05:05 < MrTrick> ( Neither contains() nor exec() seem to be present )
05:05 <@mbalho> https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String
05:06 < SomeoneWeird> MrTrick, console.log(String.__proto__);
05:06 < SomeoneWeird> >> console.log(String.__proto__);
05:06 < purr> SomeoneWeird: undefined; Console: (function) Empty
05:06 < SomeoneWeird> >.>
05:06 < SomeoneWeird> >> console.log(String.prototype)
05:06 < purr> SomeoneWeird: undefined; Console: (object) ''
05:06 < SomeoneWeird> weird
05:06 < SomeoneWeird> idno
05:08 < MrTrick> wait, exec is not a string function, it's Regexp.
05:08 < MrTrick> Still, contains() is listed in mbalho 's link, but not in http://nodemanual.org/latest/js_doc/String.html 
05:11 <@mbalho> contains isnt in chrome, read the page
05:12 < SomeoneWeird> contains isn't a function
05:21 < Sly> https://lh4.googleusercontent.com/-x0dv4ypevXE/UOnWGIPOFwI/AAAAAAAB_zU/0VFelnCotCY/w497-h373/Put%252BYour%252BFinger%252BHere%252BPart%252B2.%252BA%252Bsequel%252Bto%252Bmy_d555ec_4348743.gif
05:24 < mscdex> you don't need "nodemanual" for non-node js stuff... use mdn for js stuff
05:26 < mscdex> MrTrick: if you look at the page for contains(), you'll see it's a Harmony proposal, not ES5
05:31 < MrTrick> ah, fair enough.
05:31 < MrTrick> SomeoneWeird: got the regex working (stupid memory confused \s and \w):  /^\s*function\s*\(([^\)]*)\)\s*\{([^]*)\}\s*$/.exec(fun.toString());
05:32 < SomeoneWeird> lmao
05:34 < MrTrick> Regexes are so reasonable when you're writing them, but so horrible when writing.
05:34 < MrTrick> It really doesn't help that all the chars I'm interested in ( ) { } are control characters.
05:35 < MrTrick> fun.toString() doesn't normalise the function declaration format - it keeps all the funny whitespace that people might have used.
05:35 < Sly> I actually like regex, and it's relatively easy.
05:37 < mscdex> regexes be fast
05:38 < Sly> https://lh4.googleusercontent.com/-Df6YA7Bmv4Q/UOpb9ixvDiI/AAAAAAAAV-o/rVqkc9sSK6c/w497-h373/woX4z.jpg
05:41 < MrTrick> The [^] is the most irritating thing. 
05:41 < Sly> Why's that, MrTrick?
05:44 < MrTrick> it should be . , other than ". doesn't match \n unless using the /s flag" and "js doesn't support the /s flag"
05:45 < leohxj> ..
05:45 < MrTrick> [^][^]
05:48 < Sly> /^\(*(?=\d{3})(\d{3})[).\-\s]*(\d{3})[.\-\s]*(\d{4})$/
05:48 < Sly> ^ Phone numbers
05:48 < Sly> US phone numbers, anyway.
05:48 < Zak> was about to say :P
05:49 < Sly> https://gist.github.com/3815845
05:49 < Sly> Script that's from.
05:53 <@konobi> NANP
05:55 < Sly> konobi: NANP?
05:56 < Sly> Ah. Nevermind.
06:01 < MrTrick> hmm, what are my chances at writing a white-space remover that *doesn't* act on embedded strings?
06:08 < mscdex> MrTrick: you can use \s\S as a . that matches newlines
06:08 < MrTrick> mscdex: true, but it's not exactly better.
06:08 < mscdex> why? it does what you want :-)
06:12 < kristian-puccio> any one know how I can use functions that are in an npm module inside jade? I'm just trying to format a number using Numeral.js, thanks
06:12 < MrTrick> because it's not just \s\S, it needs more characters. Plus, [^] is smaller. (otherwise, it's not really important which workaround is used)
06:19 < Zysen> Hello, Can anybody please help with this problem: Im running rasbian on the raspberry pi. Ive installed 0.8.16 from source with ./configure, make, make install. My tutorial stopped there.  NPM did NOT install with this, but i found the NPM directory and build and installed that in the same way. Now node-waf is not installed either. I found it in the build direcotry and thre it in /usr/bin and i can run it. But i still cant install som
06:20 < Zysen> such as inotify
06:24 < Sly> MrTrick: I'm guessing by "embedded strings", you mean things surrounded by quotations?
06:25 < MrTrick> yeah. I think I won't worry about it for now, as the benefit would purely be cosmetic, and if done incorrectly (like pulling whitespace out of strings) it could break stuff.
06:28 < Sly> MrTrick: https://gist.github.com/541907ea17881c2db976
06:31 < MrTrick> Thanks Sly, but on the off chance there's some pathological edge case it misses...
06:31 < Sly> Yeah. It'd probably take some tweaking.
06:32 < Sly> I threw that together in like.. 5 minutes..
06:32 < MrTrick> it's not just cosmetic-only, it's somewhere nobody should be reading anyway.
06:32 < Sly> With minimal testing. xD
06:32 < MrTrick> "I have not tested this, only proved its correctness"
06:32 < Sly> Pretty much.
06:32 < Sly> xD
07:30 < srizzle> hey guys, im a noob and i had a node question if someone has time
07:30 < SomeoneWeird> shoot
07:31 < srizzle> so im trying to understand asynch callbacks 
07:31 < srizzle> and here's the example im looking at
07:31 < srizzle> var result = database.query("SELECT * FROM hugetable"); < synchronous
07:31 < srizzle> but something like
07:32 < srizzle> database.query("select **", function( whatever))
07:32 < srizzle> is asynch
07:32 < srizzle> why is node built like that?
07:32 < SomeoneWeird> yerp
07:32 < srizzle> as in
07:32 < SomeoneWeird> because all of node's IO is async
07:32 < srizzle> why does the first function not also occur asnych?
07:32 <@mbalho> srizzle: http://nikhilm.github.com/uvbook/introduction.html
07:32 < srizzle> wouldn't it be better if it did?
07:32 < SomeoneWeird> but it can't because it has to return the value
07:33 < SomeoneWeird> not just pass it to the function as in the second example
07:33 < srizzle> OH okay
07:33 < srizzle> wait
07:33 < srizzle> this is a silly question
07:33 < srizzle> lol
07:33 < srizzle> my bad
07:33 < srizzle> it just clicked
07:34 < srizzle> sorry, late night
07:34 < srizzle> and thanks for the read mbalho, taking a look at it nwo
07:34 < srizzle> now*
07:55 < mscdex> Zysen: node-waf is deprecated in 0.8
07:55 < mscdex> maybe even removed
08:00 < tnorris> anyone here understand floating point numbers?
08:01 < Doikor> whats there to understand. they are numbers with numbers after the decimal point with a certain precision
08:02 < tnorris> Doikor: try figuring out how to store and resolve that precision in memory. not so easy.
08:09 < Zysen> mscdex: Ok so how would one install a package that is trying to use it? Im trying to do apt-get install inotify. But its failing with
08:09 < mscdex> tnorris: ?
08:09 < Zysen> npm ERR! inotify@1.1.0 install: `node-waf configure build` npm ERR! `sh "-c" "node-waf configure build"` failed with 1 npm ERR! npm ERR! Failed at the inotify@1.1.0 install script. npm ERR! This is most likely a problem with the inotify package, npm ERR! not with npm itself.
08:10 < mscdex> Zysen: post an issue on the project's github, tell them to get with the times :-)
08:10 < Zysen> o i c
08:10 < Zysen> thanks
08:10 < tnorris> mscdex: ok, right now there is only an upper (positive) and lower (negative) bound check for floats in lib/buffer.js. When in reality there should also be a minimum value check.
08:10 < tnorris> just as provided in <float.h>.
08:11 < tnorris> and there's even a test to check this functionality even though it's out of the range of floating point values.
08:12 < mscdex> Zysen: wait, there is a binding.gyp
08:12 < mscdex> Zysen: so it should work...
08:13 < mscdex> Zysen: looks like they just have a npm install script set to execute node-waf explicitly
08:15 < Zysen> ummm
08:15 < mscdex> Zysen: i've sent a PR. until it's accepted, you can download the module manually and apply this patch: https://github.com/c4milo/node-inotify/pull/36.patch
08:15 < Zysen> so your saying the module might be installed anyway?
08:16 < Zysen> oh awesoem
08:16 < mscdex> Zysen: it's compatible with node's current build system, but it still has remnants of the old one for some reason
08:16 < Zysen> thanks heaps for that
08:18 < Zysen> i noticed it on another module so thought it was a problem with my install
08:19 < Zysen> but i guess its just gonna be a common thing until all the module devs update
08:19 < mscdex> Zysen: most maintained modules have updated by now
08:21 < Zysen> On another note - Has anyone been working with Functional Reactive Programming techniques and Node? 
08:29 < etcetera> anyone using typescript and node?
08:31 < MitchW> what's the non-deprecated way of getting binary data out of a Buffer? (http://nodejs.org/api/buffer.html#buffer_buffer states 'binary' is deprecated)
08:33 < MitchW> I get a Buffer object back from another API (which loads data from a server), and I need to pass it to image magick which expects the raw bytes
08:37 < mscdex> MitchW: use the Buffer
08:38 < [AD]Turbo> hi there
08:39 < mscdex> yo
08:42 < mscdex> aw, planetnodejs.com is down :(
08:44 < MitchW> mscdex: it doesn't work, it crashes
08:44 < MitchW> new UInt8Array(buffer) worked
08:48 < tnorris> MitchW: what do you mean "binary data"? you can access the values by buf[0], buf[1], etc.
08:49 < tnorris> or you can use the set of read/write methods on the Buffer prototype (e.g. readUInt8(0))
08:50 < MitchW> I know i can, but the image magick doesn't appear to be expecting the buffer object and crashes unless I give it a 'binary' buffer, or the UInt8Array view
08:50 < MitchW> image magick module*
08:50 < MitchW> and since 'binary' buffers are deprecated, the UInt8Array seems to work fine
08:50 < sshaginyan> How do you remove an element from an array?
08:51 < tnorris> MitchW: that doesn't make sense. you can access the binary data directly by the indexes. i'd file a bug on the module.
08:51 < MitchW> sshaginyan: in JS, .splice - in node.js, .slice.   or you have pop/shift/etc
08:51 < MitchW> tnorris: no need, works now
08:51 < tnorris> sshaginyan: do you want to leave it a sparse array, or clip out a single value?
08:52 < sshaginyan> tnorris: So I have [[1], [2], [3]] I want to get [[2], [3]]
08:53 < tnorris> sshaginyan: [[1],[2],[3]].splice(0,1)
08:53 < MitchW> given what info? an index? a new size (dropping the start? end?).
08:53 < MitchW> if it's an index, splice, if it's the latter, slice most likely, or pop in special circumstances
08:53 < MitchW> http://nodemanual.org/latest/js_doc/Array.html
09:10 < Zysen> mscdex: I cloned inotify and applied the patch. Then tried sudo npm install <path to dir>. But am still getting module not found. DId i go about it the right way?
09:50 < mansoor-s> What ever happened to Nowjs?
09:50 < mansoor-s> huu
09:50 < mansoor-s> abandoned
10:00 < mscdex> mansoor-s: changed to Laterjs? ;-)
10:02 < mscdex> Zysen: alternatively you can temporarily do: npm install https://github.com/mscdex/node-inotify/tarball/patch-1
10:06 < mansoor-s> mscdex, :D
10:06 < nathan7> npm will never threaten to stab you, and in fact, cannot speak.
10:06 < mansoor-s> mine can
10:07 < nathan7> mansoor-s: that's a bug, file an issue
10:08 < mansoor-s> nathan7, you are just jealous because your second hand bought-off-the-street npm model can't speak
10:08  * nathan7 does a git pull
10:09 < nathan7> Nope, still doesn't speak
10:09  * mansoor-s needs to make a demo application so he can get hired somewhere :|
10:09 < nathan7> I'd sneak speaking in but I'd have to make it configurable
10:09 < mansoor-s> what to make....
10:09 < nathan7> and I can't push to the npm config thingy repo
10:10 < mansoor-s> nathan7, ideas for a demo application?
10:10 < mansoor-s> showing off node.js
10:10 < mansoor-s> and my skills with it
10:17 < mscdex> mansoor-s: a flow control module! ;-)
10:17 < mansoor-s> mscdex, nahh something with a UI
10:20 < nathan7> mansoor-s: chat app? I'm not very creative
10:22 < mpajor_op5> mansoor-s: chat app, multiple rooms with a count of the users subscribed to a specific channel and in addition to that why not ship in redis in the whole bundle too ;)
10:23 < mpajor_op5> there is no decent chat application "demo" available on the web (I've looked a lot but most are very minimal and basic)
10:27 < allyraza> mpajor_op5, look for any chat app the concept is basicly same
10:31 < alex88> hi guys, I've a client that POST json zipped, how can I unzip the POST data before passing it to the express body parser?
10:32 < allyraza> alex88, a simple backround task would do it for you
10:33 < alex88> allyraza, sorry I'm pretty new to node, can you give me more info about that?
10:34 < Virunga> alex88: create a custom middleware (if you'd use gzip you can take advantage of zlib) and put it before the bodyParser
10:34 < alex88> Virunga, thanks, let me try to do that :)
10:34 < allyraza> alex88, how you downloading that data if you doing it in your live app that s bad 
10:34 < allyraza> Virunga, that's a bad idea
10:35 < alex88> I can do that with the app.use() method?
10:35 < mscdex> alex88: is it zipped or gzipped?
10:35 < Virunga> alex88: why?
10:35 < mscdex> i think there is gzip middleware
10:35 < alex88> allyraza, downloading that data? i want to unzip data sent from client
10:35 < Virunga> allyraza: why?
10:35 < alex88> mscdex, client is in python, it uses zlib.compress(payload)
10:35 < allyraza> Virunga, that file could be in megs
10:35 < mscdex> alex88: use the built-in zlib module then
10:35 < alex88> allyraza, nope, some k
10:35 < Virunga> allyraza: ah, sure.
10:36 < mscdex> alex88: http://nodejs.org/api/zlib.html
10:36 < alex88> mscdex, is there already a middleware?
10:36 < mscdex> not for plain zlib
10:36 < mscdex> but doing it yourself won't be hard
10:36 < allyraza> alex88, up to you
10:36 < Virunga> Yes, would be better use a child process with callback
10:36 < Virunga> right?
10:36 < mscdex> the built-in zlib module does it in threads iirc
10:37 < Virunga> cool
10:37 < alex88> allyraza, you mean I should create what? sorry
10:37 < Virunga> alex88: yes the method use serves to append middlewares
10:38 < alex88> Virunga, so I just need to unzip the request data adding the middleware before the bodyparser
10:38 < allyraza> alex88, what i would suggest i background job should do it
10:39 < mscdex> allyraza: there's no need to use a child process
10:39 < alex88> allyraza, what you mean with background job? shouldn't I run this on each request?
10:39 < allyraza> mscdex, in case that file is big
10:39 < mscdex> allyraza: you can stream
10:40 < mscdex> allyraza: the built-in zlib module supports that
10:40 < allyraza> mscdex, I doubt that I know I was in the same situation I while back 
10:40 < allyraza> a*
10:40 < Virunga> alex88: yes. And listen what they are saying about stream and process
10:40 < mscdex> so you can stream the input data into a zlib.Inflate instance and then into the body parser or whatever
10:40 < mscdex> it's really that easy
10:41 < allyraza> mscdex, he is doing it inside the app
10:41 < allyraza> I would not suggest that
10:41 < mscdex> yes, i know :-)
10:41 < alex88> ok, thank you guysâ€¦ let me search how to get the body and unzip it first..
10:41 < mscdex> allyraza: the decompression is done inside a separate thread
10:41 < mscdex> and it's not buffered, unless you do it that way
10:41 < Virunga> alex88: note that there's the #express channel
10:42 < allyraza> mscdex, node does not have such thing separate thread
10:42 < mscdex> allyraza: node uses threads for many things
10:42 < alex88> Virunga, already asked days ago.. no response
10:42 < allyraza> mscdex, like ?
10:42 < mscdex> allyraza: file system calls and zlib for starters
10:42 < alex88> Virunga, app.use() is just about express?
10:42 < Virunga> alex88: yes.
10:42 < alex88> oh.. you're right
10:43 < mscdex> allyraza: and maybe crypto too soon
10:43 < allyraza> mscdex, maybe i have been living in the dark would you mind showing me in the docs where it says that
10:43 < allyraza> or anywhere else
10:43 < allyraza> no offense
10:44 < mscdex> allyraza: it doesn't say it in the api docs
10:44 < allyraza> mscdex, okay then how do you know
10:44 < mscdex> it's just because no platform does async file i/o very well
10:44 < allyraza> I have been dabling in node's sc for alomost 1 year now
10:44 < mscdex> allyraza: i'm an active node developer and keep tabs on core :-)
10:45 < allyraza> I have not seen anything
10:45 < mscdex> allyraza: you can look at the source if you really want, but it's actually done in libuv
10:45 < mscdex> not node
10:46 < allyraza> mscdex, look buddy I really dont have time for an argument
10:46 < mscdex> on windows, i guess overlapped i/o or whatever is still used
10:46 < mscdex> but linux async file i/o is nearly non-existant or is buggy, so threads are used
10:47 < mscdex> i think bsd and osx are the same way
10:50 < mscdex> http://www.youtube.com/watch?v=kQFKtI6gn9Y
10:50 < allyraza> mscdex, you got that wrong
10:50 < allyraza> http://lse.sourceforge.net/io/aio.html
10:50 < RigidWig> anyone know why SSHing on EC2 AMI (node helloworld.js) returns: -bash: /usr/sbin/node: No such file or directory
10:50 < allyraza> http://www.fsl.cs.sunysb.edu/~vass/linux-aio.txt
10:51 < allyraza> mscdex, you got some reading to do i guess 
10:51 < Virunga> Do you have some doc that explains all the event loop, callback stuff related, please?
10:52 < mscdex> allyraza: i didn't say it _doesn't_ exist, but last i checked finding worthy implementations is nil
10:52 < alex88> RigidWig, means node isn't installed maybe
10:53 < mscdex> they have their drawbacks and may end up using threads behind the scene anyway
10:53 < allyraza> mscdex, it is actually supported and works reasonably well now, but has significant limitations
10:53 < mscdex> allyraza: look for ryah's slides, he talked about it awhile back
10:53 < alex88> btw guys, in PHP I get the POST body with php://input, how can I get the same data in node? req.body is empry
10:53 < Virunga> If a cakkback is pushed inside an event's listener queue, and that event fires, i have to wait that the event loop comes to that callback, right?
10:53 < Virunga> callback*
10:54 < mscdex> Virunga: when an event is emitted, all the event listeners are executed immediately
10:55 < Virunga> mscdex: immediately after the event is emitted?
10:55 < mscdex> yes
10:55 < allyraza> mscdex, well buddy gotta go we ll continue this conversation some other time
10:56 < allyraza> bye folks 
10:56 < Virunga> Bye
10:57 < RigidWig> alex88 apparently rebooting the instance fixed it... thanks though
10:57 < alex88> RigidWig, np
11:03 < carlocci> what was the headless webkit alternative to phantomjs for node called?
11:20 < grizzlyz> Hi there. Actually I have aproblem to run a simple Node app, maybe somebody here can help me
11:22 < grizzlyz> I have simple echo websocket server with a client html
11:22 < grizzlyz> I run my server in the port 8080 and everything is working perfect with the server
11:23 < grizzlyz> in the client I said in which port I should connect, I try to run client, but I can not see nothing in my html page, even when I have components
11:23 < grizzlyz> can somebody help me with this?
11:37 < allyraza> grizzlyz, 
11:38 < grizzlyz> allyraza: I solved the problem!
11:38 < allyraza> good
11:44 < SomeoneWeird> is it possible to "return" an async result?
11:44 < SomeoneWeird> function a() { b(function(res) { return res; }); }
11:44 < SomeoneWeird> etc.
11:45 < alex88> mscdex, seems that the zlib module of node isn't able to uncompress the content encoded with python's version.. it always give incorrect header..
11:46 < mansoor-s> SomeoneWeird, no, but look into "promises"
11:46 < jetienne> hi
11:47 < mansoor-s> hello
11:47 < SomeoneWeird> right, didn't think so
11:48 < shmoon> if i were to store "users" or "posts" in redis, how would i go about doing it ? separate hashes for each or 1 hash for all ?
11:49 < SomeoneWeird> depends what else you wish to store
11:49 < SomeoneWeird> maybe "users" is a set, which you push usernames to
11:49 < SomeoneWeird> but then you also have a hash of user:<user> which you can have user:<user>:name user:<user>:pass wtc.
11:49 < SomeoneWeird> etc*
11:51 < shmoon> so a users set containing user hashes is what you mean?
11:52 < shmoon> can you store hashes in sets?
11:53 < SomeoneWeird> nono
11:53 < SomeoneWeird> you have a set which just contains usernames
11:53 < SomeoneWeird> and then a hash of user:<username> 
11:53 < SomeoneWeird> so you can iterate the set, to get usernames, and then get the hash
11:53 < SomeoneWeird> or you can get the hash directly
11:53 < shmoon> oh i get you now. so 10 users would lead to 10 hashes and 10 items in the set
11:54 < SomeoneWeird> yeap
11:56 < shmoon> actually, can you tell me something. if i have 10k users, and then want to find the hash for a user whose email is 'foo@bar.com' how would i go about doing that?
11:56 < shmoon> i mean finding by username will be easy, but finding by email?
11:57 < SomeoneWeird> right, so then store a key like
11:57 < SomeoneWeird> email:foo@bar.com which has the value of the username
11:58 < shmoon> ah
11:58 < SomeoneWeird> checkout reds, too
11:59 < shmoon> https://github.com/visionmedia/reds ?
12:00 < SomeoneWeird> yeap
12:01 < shmoon> cool thanks man
12:07 < theblackbox> hello, I'm trying to use zepto for ajax but I think I'm getting a little confused - I'm using Mocha to thrash up a test script to validate the functions in my clientLibrary (this is to be used client side by html5 app), but I'm unsure how to invoke zepto when in a mocha test script. Could anyone help me clear up my confusion?
12:09 < theblackbox> I mean how do I make it so that the $.ajax function is available inside my clientLibrary script? I can't seem to find a straightforward answer anywhere
12:10 < iksik> anyone can help with regular expressions?
12:10 < Deathspike> theblackbox: From reading this, you have the problem that you are using a client-side API and you want to run a test through Node, which implements a server-side API. In this case, look at https://github.com/visionmedia/superagent to have a similar API on both sides for requests.
12:12 < iksik> https://gist.github.com/c98f1daa3ade46de79ce - i've created a little jasmine test to help understand what i want to achive with this regex, and that last test fails :(
12:14 < theblackbox> Deathspike: yeah that's my problem, but I'm not open to yet another library to 'solve' the problem 
12:15 < Deathspike> Well there is little else you can do if there is not an API available for Node that implements the same functionality, save for writing your own wrapper on the server.
12:15 < theblackbox> once this is unbound from test harness it'll use client/server friendly versions - what I need now is a server friendly version of zepto such that the code need not change after testing, if that makes sense?
12:15 < theblackbox> =/
12:15 < Deathspike> I don't even know which lib you are using.. jQuery?
12:15 < theblackbox> zepto
12:16 < theblackbox> I was thinking zepto-node was the obvious solution server-side, but it's just not playing ball
12:17 < Deathspike> Since Zepto is aligned with the jQuery API.. why not npm install jquery?
12:20 < gavri> I'd like to be able to stream data from another webserver to my client. is there an easy way of doing this with express? is there a connect module that does this? it's analogous to the 'static' connect module, but using http instead of file system calls
12:23 < theblackbox> Deathspike: good plan ;)
12:29 < shmoon> SomeoneWeird: how does one store timestamp to know when the post/user was created/signed up
12:30 < SomeoneWeird> user:<username>:timestamp? or something
12:30 < SomeoneWeird> depends how you've structured it
12:30 < shmoon> no, i mean would you just save integer, or form a nice date like its done in mongo/mysql in the app layer and send the string?
12:30 < SomeoneWeird> ah, just convert it to epoch i suppose
12:31 < SomeoneWeird> or you can save it pretty
12:31 < SomeoneWeird> doesn't really matter
12:31 < SomeoneWeird> as long as you can parse it
12:31 < shmoon> ok
12:34 < mpajor_op5> I am really keen into at starting with node.js; I have a project I want to code using node.js as the base for it along with php/no-sql, however, I am not very well-familiar with javascript and especially not node.js (with socket.io) -- is there anyone who would be willing to discuss a thing or two with me in PM? I'd highly appreciate it
12:35 < mpajor_op5> shouldn't take way too long. I just need to get the idea of how a few things work
12:35 < Shinister> I can answer a few questions, maybe.
12:35 < Shinister> I'm not a JS guru though :)
12:35 < Deathspike> mpajor_op5: Sure. No need for PM, just throw it in here.
12:35 < Shinister> say them in this channel
12:35 < mpajor_op5> not needed ;)
12:35 < Shinister> yeah
12:35 < SomeoneWeird> just ask here
12:35 < SomeoneWeird> sure lots of people will help
12:35 < SomeoneWeird> well, I can help if noone else can
12:35 < Shinister> Plus with 3 people answering, you'll get about 5 answers ;)
12:36 < mpajor_op5> hehe fantastic, let me just write up the questions first before asking them so they dont come out odd
12:38 < mpajor_op5> I am building a "real-time" application, with a chat and with multiple divs updating in real-time, eg. when a user joins a specific chat channel I want a div to update with "a user joined chat channel #test and #test now has 1012 users in it". In addition to this I want to be able to "push out" messages to my visitors depending on what channel they are subscribed to, BUT not limited to a specific channel. For example: javascript client side subscribe
12:39 < shmoon> and?
12:39 < mpajor_op5> before answering, please see this: telnet 174.133.76.250 5015 <- what is happening here? how is the data handled really client-side? I know that the client-side js (the telnet port is for the site: http://tf2lobby.com) is listening on 174.133.76.250:5015
12:40 < SomeoneWeird> socketio?
12:40 < mpajor_op5> I was thinking of building a server that runs queries and just console.log()'s everything like above(?) but how is it really "parsed" on client-side?
12:40 < mpajor_op5> yeah SomeoneWeird
12:40 < SomeoneWeird> define parsed
12:41 < shmoon> SomeoneWeird: you must have used https://github.com/mranney/node_redis#usage ? are the .set .hset etc. methods async?
12:41 < shmoon> is redis.priunt some callback hat gets called? can i replace that with a callback of mine ?
12:41 < SomeoneWeird> they are
12:41 < mpajor_op5> if you try to telnet you will see that you get various jsons returned to you, some specified with a "lobbyid" (which is a channelid) but how can I tell what jsons the client should handle (since he should only handle those that has his channel id in it)
12:41 < SomeoneWeird> yes
12:41 < shmoon> i see ok thanks
12:41 < SomeoneWeird> redis.print just echo's the result to stdout
12:42 < SomeoneWeird> BUT
12:42 < mpajor_op5> and in addition, how can I extend it so I can handle some jsons that does NOT have the channel id in them? eg. if its a "updatediv" event I want everyone to see the div update
12:42 < rohdef> what can I do if console.log('Hello world!'); doesn't output to my terminal (using Ubuntu 12.10, and updated node using a ppa)
12:42 < SomeoneWeird> redis commands are pushed to a stack before being executed
12:42 < SomeoneWeird> so they will ALWAYS execute in the order you send them, shmoon 
12:42 < Shinister> I wish I was doing some node dev atm
12:42 < SomeoneWeird> rohdef, wat
12:42 < SomeoneWeird> mpajor_op5, thats really a jquery question, is it not?
12:43 < shmoon> ah they're pushed to stack, thats what i was confused about, as its async, it might not execute in right order, thanks man
12:43 < mpajor_op5> well not really since I dont want it to update on intervals but instantly
12:43 < rohdef> SomeoneWeird, my thought exactly. Downloaded an node app I know works, no output, find a tutorial doing the most simple program there is, no output
12:43 < Deathspike> mpajor_op5: You can just place open connections into different "groups" (make a group like a key on an array, for exmaple) and push content to the appropriate connections. I don't see the problem here at all, the client can just JSON it back and execute the stuff.
12:43 < SomeoneWeird> rohdef, node --version ?
12:43 < rohdef> no output
12:44 < SomeoneWeird> which node ?
12:44 < rohdef> nodejs --version gives: v0.8.16
12:44 < SomeoneWeird> `which node`
12:44 < rohdef> /usr/sbin/node
12:44 < SomeoneWeird> sudo ln -s /usr/bin/nodejs /usr/bin/node
12:44 < SomeoneWeird> or something
12:45 < SomeoneWeird> and `which nodejs` ?
12:45 < zomg> Anyone got a server with working SSL cert? I need to test some files hosted with https:// but I don't have a working cert at the moment
12:45 < SomeoneWeird> self sign one?
12:46 < rohdef> there's already a symlink in /usr/bin/ using ubuntus alternatives, two secs, will dive into what it has been set to
12:46 < zomg> SomeoneWeird: I'm relatively sure it needs to be a proper one =)
12:46 < SomeoneWeird> google.com
12:46 < SomeoneWeird> lol
12:47 < rohdef> that links to nodejs >< great
12:47 < rohdef> but what the heck is the node in sbin then
12:47 < SomeoneWeird> dunno
12:47 < SomeoneWeird> rm it
12:47 < SomeoneWeird> or rename
12:47 < rohdef> standalone app it seems
12:48 < rohdef> it that a good idea, could be a tool some part of my system use
12:48 < SomeoneWeird> well
12:48 < SomeoneWeird> can't you just call 'nodejs' instead of node? :P
12:49 < rohdef> well not if I'm using someone elses project and don't know how many times he references it
12:50 < rohdef> right now I want to know what /usr/sbin/node actually is to know if it's safe to just rename
12:50 < Shinister> are there any examples of large applications in node to download/study? I'm interested how well node scales for large projects
12:50 < SomeoneWeird> does node --help do anything?
12:51 < rohdef> could be a wrong install from my part according to google :)
12:51 < rohdef> SomeoneWeird, thanks for the help, I think I got it from here
12:51 < SomeoneWeird> :)
12:52 < rohdef> SomeoneWeird, lol: ubottu> rohdef: node (source: node): Amateur Packet Radio Node program. In component universe, is optional. Version 0.3.2-7.1 (quantal), package size 51 kB, installed size 292 kB
12:52 < rohdef> that's for sure an wrong install
12:54 < rohdef> good news is I discovered that Ubuntu used and outdated node and remedied the problem :) maybe I should go for FreeBSD
12:55 < Shinister> Is node paticually good on BSD?
12:55 < SomeoneWeird> compile it yourself
12:55 < SomeoneWeird> lol
12:55 < Shinister> It does sound like a strange solution to a package being out of date in a repo :P
12:55 < rohdef> Shinister, don't think there's a difference on node
12:56 < rohdef> just that I'm tired of Ubuntu from time to time, and as an old Gentoo user I want to try BSD
12:56 < Shinister> Try arch.
12:56 < rohdef> also I have to say I would chose the BSD license over GPL any time
12:56 < Shinister> Depends what you're doing, I understand why people would chose the GPL for their code
12:56 < Shinister> but writing node apps, it shouldn't really affect you?
12:57 < Shinister> unless you're intending to ship an OS with your app or something
12:57 < SomeoneWeird> lol
12:57 < rohdef> Shinister, nah it's also from the general perspective, not node specific thing :D
12:57 < Shinister> aah okay
12:57 < Shinister> I respect people who can run an OS/chose a framework based on ethics
12:57 < rohdef> :D
12:58 < rohdef> also I think BSD sound fun and interesting
12:58 < Shinister> unfortunatly I work with .net professionally, it doesn't give me that freedom
12:58 < SomeoneWeird> heh
12:58 < shmoon> SomeoneWeird: "updating" is just executng the sadd/hset commands yeh?
12:58 < SomeoneWeird> you use mono or stuck on win?
12:58 < rohdef> depends on what you're doing, but agreed Mono is far from an alternative in all cases
12:58 < shmoon> executing them again i meamn
12:58 < Shinister> SomeoneWeird: mono doesn't do what we need
12:59 < SomeoneWeird> shmoon, yeah
12:59 < Shinister> very stuck with .net, not that .net is some monstrosity or something
12:59 < rohdef> mono's greatest weakness imo is that if you do gui you don't have wpf
12:59 < Shinister> what it does it does well, and we can leverage it fairly well
12:59 < Shinister> rohdef: you also don't have Entity Framework and WCF
12:59 < SomeoneWeird> i never liked wpf
13:00 < rohdef> .net is a nice framework apart from the portability
13:00 < Shinister> tbh WPF and WCF are faaairly dead
13:00 < Shinister> rohdef: well it's like java, the idea is that your app is portable, assuming the host machine has a .net vm
13:01 < SomeoneWeird> anyone know, if I have a pipe, can I continuously grab data from it until I hit a certain string
13:01 < rohdef> Shinister, what I mean and then with a lot of the features I miss in Java, such as delegates and lambda, yeah I know :)
13:01 < SomeoneWeird> (ofc i can write it, but is there a function/lib for it) ?
13:01 < rohdef> I've even did a minor patch on monodevelop once
13:01 < SomeoneWeird> er, s/pipe/stream/
13:01 < Shinister> mmm lambda
13:01 < Shinister> linq is awesome
13:01 < rohdef> (two lines of code though, but it still counts :P )
13:01 < rohdef> it is
13:02 < rohdef> what package system does arch use, rpm?
13:02 < iksik> http://jsfiddle.net/y7NZr/1/ - i know that it is not a strict nodejs question, but perhaps someone can help me with this regex and last test which fails here ;-/
13:02 < Shinister> nope, it uses its own
13:02 < Shinister> called pacman
13:02 < pre_> hello. I have a package, npm linked, and in that package I load a file of the package, for example: ./etc/aaa.ejs. However, when I load this package on another app node crashes because it can't find that file. How can I reference the file _in_ the module? Thanks :)
13:02 < rohdef> then Arch might be worth a try
13:02 < iksik> i'm using this code with node* :D
13:02 < rohdef> I won't move to any rpm based system for a loooooong time :p
13:02 < Shinister> rohdef: arch is lovely
13:02 < Shinister> it's kinda like node, drops you into a minimalist set up with a terminal and a package manager
13:03 < Shinister> and says have fun
13:03 < Shinister> node + arch is a nice set up imo
13:03 < rohdef> Shinister, might take a look :) sounds like it could be good
13:03 < rohdef> if it used KDE as the default window manager it's also a good start
13:03 < SomeoneWeird> fuck rpm lmao
13:03 < Shinister> it doesn't have a default wm :)
13:03 < RLa> what arch uses? no dependency-tracked tarballs?
13:03 < Shinister> it doesn't even come with xorg
13:04 < Shinister> it's dependency tracked tarballs
13:04 < rohdef> Shinister, sounds halfway like gentoo with pre-built packages
13:04 < Shinister> yes
13:04 < Shinister> a lot of people say that
13:04 < Nasga> Do you know a nodejs blog app ?
13:04 < rohdef> (he said knowing that Gentoo actually have prebuilt packages, even though noone want's to use them)
13:05 < Shinister> it's also i686 minimum, so everything is compiled with nice modern stuff
13:05 < Shinister> iirc gento killed their package repo because no one used it?
13:05 < Shinister> might be wrong there
13:05 < rohdef> hehe likely
13:05 < rohdef> if you're on gentoo why use prebuilt packages :p
13:06 < rohdef> btw. is buster.js an abandoned project?
13:06 < Deathspike> Is there a popular package to bundle css/js (for express, possibly)?
13:07 < Shinister> how do you mean? Like less?
13:07 < Shinister> rohdef: no idea
13:07 < iksik> Deathspike: google -> express connect middleware assets -_-
13:08 < rohdef> ok, I'm just wondering if it's a bad choice for testing framework
13:08 < SomeoneWeird> use nodeunit or something
13:10 < rohdef> SomeoneWeird, well currently I'm actually using client side tests, haven't started doing actual nodejs, only reason I went here is that busterjs is written in nodejs and the problem I found seemed related
13:10 < Deathspike> iksik: Thanks :-)
13:11 < iksik> rohdef: jasmine looks good ;-)
13:11 < rohdef> iksik, thanks :) will take a look
13:11 < iksik> http://jsfiddle.net/y7NZr/1/ - i'm using jasmine test runner on this fiddle - with which i'm looking for some help here ;-P
13:17 < Deathspike> iksik: are you by chance familiar with connect-assets? I added it into the app with use as per instructions and make the required folders with some sample content. Accessing /js does nothing but give me a 404 tho
13:27 < gavri> when I use pipe to connect two different streams in node.js, does the data transfer between streams happen by the node.js user process? or is it completely delegated to the kernel? 
13:30 < daedeloth> what would be a good way to define configuration settings?
13:31 < shmoon> JSON file
13:48 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:05 < Musk> moin
14:05 < tuhoojabotti> moro
14:06 < Musk> tuhoojabotti => 	
14:06 < Musk> Spanish slang word refered to moor, inhabitant of the region of Magreb (Morocco, Algeria, Tunisia, Libya, Mauritania). Usually used on other countries' muslims. 
14:07 < tuhoojabotti> tab?
14:07 < Musk> moro => a non-intelligent person; a person that does stupid things
14:07 < Musk> could it be ?
14:08 < tuhoojabotti> A male prostitute who spends most of his time looking at his penis and working out in the nude.
14:08 < tuhoojabotti> Maybe I should have said moi.
14:08 < Musk> tuhoojabotti are you on your period or something ?
14:09 < tuhoojabotti> moi (interjection): 1. hi 2. bye
14:09 < tuhoojabotti> also moro is used.
14:09 < tuhoojabotti> In Finnish.
14:14 < alex88> hi guys, I'm trying to uncompress some data compressed with python's zlib.compress() function, someone ever tried that? I always get Error: incorrect header check
14:16 < RLa> alex88, how you receive the date
14:17 < RLa> first make sure no weird string encoding is done
14:17 < alex88> RLa, as POST data from python
14:17 < alex88> RLa, this is the python client https://github.com/DataDog/dd-agent/blob/master/emitter.py
14:17 < RLa> so through http?
14:17 < alex88> look at format_body function
14:17 < alex88> yeah
14:17 < alex88> http
14:17 < ZBZZN> did you change the content-type to zip?
14:18 < alex88> content-type is application/json
14:18 < alex88> and I'm talking about receiving compressed requests, not sending gzipped responses
14:19 < RLa> 'Content-Encoding': 'deflate' <- is this deflate for zip?
14:19 < ZBZZN> I had that issue too and I had to change content type to application/zip
14:20 < ZBZZN> in python POST request
14:20 < alex88> ZBZZN, and it gets automatically decompressed?
14:20 < alex88> or are you using some middle wares?
14:20 < alex88> RLa, not sure if it's zip or something else
14:20 < ZBZZN> well, I got it through Express
14:20 < alex88> I've tried with zlib's inflate, gzipinflate and unzip
14:20 < alex88> always getting errors
14:20 < RLa> ZBZZN, is should not matter
14:20 < ZBZZN> and it just saved the file in temp
14:21 < alex88> ZBZZN, yeah, in that case it saves the file somewhere, I need it decompressed as string
14:21 < ZBZZN> I decompressed using jszip or something
14:22 < RLa> alex88, can you take hex dump of data it receives and check for the correct header manually?
14:23 < alex88> RLa, sure, actually I'm basic testing saving a compressed string to file to firstly check for compatibility between python->node so I can see if it doesn't works only via http
14:24 < Guest___> Hiya!
14:24 < RLa> check that first 3 bytes sent by python in the request body are 1F 8B 08
14:25 < Guest___> Im using mongodb for a small site, i have comments and authors, and i am using mongoose, what is the best way to relate comments to authors?
14:25 < Guest___> Using dbref? is that the way to go?
14:26 < alex88> RLa, how could I print hex within node?
14:27 < RLa> hm, with buffer you would use toString('hex')
14:28 < alex88> well, first part is 78efbfbdefbfb
14:28 < alex88> so not sure if it's ok
14:28 < alex88> also tried file.write(zlib.compress("test")) and it starts with 789c cbc9
14:29 < RLa> does not look like
14:29 < alex88> so neither that
14:31 < RLa> hm, now i'm not sure whether it should contain zip headers at all
14:32 < RLa> alex88 what you use on node side to decompress it?
14:32 < alex88> RLa, trying with http://nodejs.org/api/zlib.html
14:32 < RLa> zlib.deflate("test", function(err, data) { console.log(data); }); this gives no zip header too
14:32 < RLa> alex88, which method exactly
14:33 < alex88> tried all, gzipinflate, inflate, inflate raw, unzip
14:34 < RLa> 78efbfbdefbfb <- this is what you input to inflate?
14:34 < alex88> RLa, a much longer string
14:34 < alex88> without python compression I get a correct json
14:34 < alex88> so that' what I only get as body, just compressed
14:35 < RLa> zlib.deflate("test", function(err, data) { zlib.inflate(data, function(err, data) { console.log(data.toString()); }); });
14:35 < RLa> what lib you use for receiving the request?
14:36 < RLa> maybe it already decompresses it
14:36 < RLa> zlib.inflate("test", function(err, data) { console.log(err); }); gives { [Error: incorrect header check] errno: -3, code: 'Z_DATA_ERROR' }
14:37 < alex88> RLa, for inflate you should put a deflated string
14:37 < alex88> btw, nope it doesn't, I've console logged the data and it's just raw data
14:38 < alex88> I've tried this, zlib.compress("lol"); to file with python
14:38 < alex88> and did this http://pastie.org/5642840
14:38 < RLa> forget file, it does not add zip file headers
14:38 < alex88> Error: incorrect header check
14:38 < alex88> well, I think that python zlib gives same thing if I save to file or send via http
14:39 < RLa> that's same thing (paste), it has no file headers
14:39 < RLa> the algorithm is deflate with block headers, zip is file container with own headers
14:40 < alex88> tried inflate raw, I get "Error: invalid stored block lengths"
14:40 < RLa> can you paste your raw file somewhere
14:40 < alex88> sure, sec
14:40 < alex88> as hex? is ok?
14:41 < alex88> http://pastie.org/5642853
14:41 < alex88> this is the test file
14:44 < alex88> or just create your own with python zlib.compress("lol");
14:44 < RLa> zlib.inflate(new Buffer('789ccbc9cf010002910148', 'hex'), function(err, data) { console.log(data.toString()); });
14:44 < RLa> this prints lol, isn't it what you want?
14:44 < alex88> yeah
14:45 < alex88> strange
14:46 < alex88> let me test here again
14:46 < alex88> using that 'hex' thing
14:46 < MI6> joyent/libuv: Ben Noordhuis master * cb3c448 : unix: fix GNU-ism introduced in edd1007  Don't use features.h, it's only  - http://git.io/KNiUbA
14:49 < alex88> using that 'hex' thing
14:49 < alex88> sorry for double post
14:49 < alex88> btw, I'm trying to read that file, tried with http://pastie.org/5642887 but I still get that error
14:52 < alex88> RLa, you think it's the wrong encoding? I've tried also with ascii but no luck
14:52 < alex88> oh god.. forgot to assign value and use that.. idiot
14:52 < alex88> seems to work now with that file..but not http
14:54 < RLa> just check hex dumps and try guess what goes wrong there
14:58 < alex88> RLa, found it!
14:59 < alex88> the problem was that I was doing a data += chunk, on each request.data
14:59 < alex88> and then creating a buffer from data
14:59 < alex88> now I create a list of buffers
14:59 < alex88> and then concat them
14:59 < alex88> and it works
15:02 < RLa> i think you could also decompress on the fly
15:02 < RLa> and concat resulting strings instead
15:03 < AviMarcus> ooh alex88 RLa decompress what?
15:04 < RLa> deflate stream
15:04 < AviMarcus> I had a huge bzip2 file to decompress, but since I couldn't do that inline, I just decompressed it first and streamed from the disk
15:05 < RLa> zlib module has examples how to inflate/deflate stream with .pipe()
15:07 < alex88> RLa, request body won't be that much big.. btw, chunks won't have headers..right?
15:08 < RLa> with .pipe you would not have to deal with chunks at all
15:08 < MI6> joyent/node: Ben Noordhuis master * 879efb3 : test: fix simple/test-http-client-timeout-with-data  The test was failing - http://git.io/_f1X3A
15:08 < RLa> at least not in deflate level
15:14 < bradleymeck> anyone know of a timer pool to prevent me having way too many timers going at once?
15:15 < tjfontaine> I'm only aware of the builtin common time optimization
15:16 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:24 < Deathspike> I can't seem to find a decent NodeJS connector for MySQL that supports pooling. Am I missing something? Can anyone recommend something?
15:26 < danmactough> Deathspike: There is node-pool: https://github.com/coopernurse/node-pool - a generic solution
15:26 < danmactough> Deathspike: But for MySQL you may just want to roll your own. It's not that hard.
15:27 < danmactough> Deathspike: Assuming you're using node-mysql by felixge?
15:28 < Deathspike> danmactough: I am, yeah. How would I go about rolling one?
15:29 < Deathspike> I think I'd have add middleware to add a connection to a request and put it back after its called completion?
15:29 < bradleymeck> sometimes i wish windows just had a free box I could use for 5min at a time to test things for freeâ€¦ docs aren't terribly clear on some posix compat
15:29 < danmactough> Deathspike: The basic idea would be to aggregate all the connections on startup, then keep a pool of references to the idle connections.
15:30 < danmactough> Deathspike: As connections go into use, take them out of the idle pool. Then add them back when done.
15:31 < Deathspike> danmactough: Hm. I wonder why there is no little module for that. Guess I'll do that then :)
15:32 < danmactough> Deathspike: Hadn't thought of abstracting it into a module. It's a little tricky for node-mysql because of its API. When you start writing it you'll see why. ;)
15:32 < EYES_> any good replacements for now.js? I saw bridge, but can't access their site just like nowjs's
15:33 < Deathspike> danmactough: It seems simple enough. What would be the holdup?
15:33 < dz0ny> EYES_: maybe deployd
15:34 < danmactough> Deathspike: The connection does not emit an event to indicate that it's ready. And the query only emits "end" if you are using the Event
15:34 < danmactough> Emitter/streaming interface
15:36 < Deathspike> danmactough: Would that matter, though? Cannot I just pull one of the idle stack with a cb and a push function to drop it back?  The state of the connection is quite irrelevent to the pool, isn't it?
15:37 < danmactough> Deathspike: If all you want is a naive pool (i.e., you don't care if the connection is busy or idle) then you are correct.
15:37 < danmactough> Deathspike: If you'd like to use an idle connection if available, it's a little more involved.
15:38 < Deathspike> danmactough: Is there a situation in which a connection is busy, except when querying?
15:40 < danmactough> Deathspike: I wouldn't think so...
15:41 < danmactough> Deathspike: What you wouldn't want to do though is pull the *actual* connections out of the connection pool.
15:42 < Deathspike> danmactough: I came up with something like this, http://pastebin.com/X8d69Mu8.
15:42 < Deathspike> This would be bad, then, and how come?
15:43 < Deathspike> Besides the fact I forgot to connect them :P
15:44 < danmactough> Deathspike: As you see, if the pool is empty when you want a connection, you need logic to "wait" for a connection to be added back to the pool.
15:45 < Deathspike> I have that.
15:45 < danmactough> Deathspike: The is something you shouldn't have to deal with -- Mysql "manages" that automatically (i.e., your request waits until the server is ready)/
15:46 < Deathspike> But that is not accomplishable with node-mysql due to the lack of events? *shrug*
15:48 < danmactough> Deathspike: You can do it by proxying the query method. You're app wouldn't create the connection but instead call the proxied query method directly. That's where the connection pool would get managed.
15:49 < Deathspike> Ahh. Wait a minute, that shouldn't be too hard either.
15:49 < Deathspike> I can get errors, establish connections and/or manage the pool.
15:49 < bradleymeck> isaacs: eventemitter, any chance we could get .off to alias removeListener? or too frozen?
15:49 < Deathspike> The problem is detaching?
15:51 < Kakera> https://github.com/joyent/node/commit/9785ab605746593601752a278c93fdc784462115
15:51 < Kakera> why would it be faster?
15:52 < danmactough> Deathspike: Yeah, it's not *hard*. But it's conceptually a little unintuitive. Or it was for me. :P 
15:52 < bradleymeck> Kakera: crawling a prototype vs object lookup
15:52 < Deathspike> Hm. I'll ping you in a bit. I'll roll something, I'd love it if you'd glance over it a bit.
15:53 < Kakera> bradgignac, doesn't it need to crawl the prototype to lookup?
15:53 < Kakera> bradleymeck
15:53 < Kakera> damn it tab
15:54 < bradleymeck> Kakera: actually V8 works around that with hidden classes
15:54 <@isaacs> bradleymeck: yeah, it's frozen
15:55 <@isaacs> bradleymeck: adding stuff in there sends a message that we're ok adding features to EE, and really, we're not.
15:55 < bradleymeck> isaacs: seems sane, just context change when reading, not a big deal
15:56 < bradleymeck> Kakera: basically figuring out if an object has a specific property is a single op, figuring out if it was set explicitlyâ€¦ less so
15:56 < Kakera> bradleymeck, what do you mean set explicitly?
15:57 < bradleymeck> Kakera: x.y = void 0; // explicitly set to undefined ("y" in x === true), but (x.y === undefined)
16:00 < MI6> joyent/node: isaacs created branch child-stdio-flush - http://git.io/hFCD2w
16:00 < Kakera> bradleymeck, I see the difference, but I don't see how one should be faster than another
16:00 < bradleymeck> Kakera: if you have x as a prototype up the chain, you have to check each prototype until it is explicitly set or if there are no more prototypes to look at, the other just grabs the value at the bucket.
16:01 < bradleymeck> Kakera: https://developers.google.com/v8/design
16:13 < foobar321> Hi. What kind of session middleware should be used? Because I see that there's a warning not use that one in production enviorment.
16:17 < Deathspike> danmactough: Please check what I came up with, http://pastebin.com/tGnCykYp
16:17 < Deathspike> I haven't tested it at all, but is the general idea that is correct?
16:19 < Deathspike> I totally forgot I have to do something else than 'end' tough.
16:21 < Pitel_IPEX> https://github.com/joyent/node/issues/4142 can some of devs look at this issue please
16:22 < MI6> joyent/node: Dean McNamee master * 8adebb9 : node: move symbol caching to Load() - http://git.io/TZ2bTw
16:24 < Deathspike> danmactough: http://pastebin.com/SnSjuTVL
16:24 < Deathspike> What do you think? (Untested)
16:27 < danmactough> Deathspike: What is the API? It's not evident to me how the application would use it.
16:32 < Deathspike> danmactough: Just .query for queries, .fetch for transactions managed by yourself.
16:32 < Deathspike> There are some small bugs atm, but the general idea should be fine.
16:37 < danmactough> Deathspike: Yeah, it doesn't cover you fully, but it's a start.
16:40 < MI6> joyent/node: isaacs master * df3563a : child_process: Pull through untouched stdio streams  Otherwise child proc (+2 more commits) - http://git.io/wuTxMQ
16:42 < MI6> joyent/node: bnoordhuis created branch isolate-ify - http://git.io/omuLVg
16:43 < torvalamo> all the drones hard at work i see
16:48 < MI6> joyent/node: Ben Noordhuis master * 7788a6b : src: pass node_isolate to Undefined() (+6 more commits) - http://git.io/f-xW1A
16:50 < superjoe> I love searching for small things that I need in npm and finding them
16:50 < superjoe> just needed and found this: https://github.com/substack/number-grouper
16:50 < superjoe> it's to the point where I search npm before google
16:50 < vikash> hi Everyone! I am using Node.js. I am executing a mysql statement and storing it an array in routes/index.js. Now I have to use it in index.jade but there I am not able to iterate the list #{resultArray}[i] is obviously wrong. so how to do something like this?
16:51 < superjoe> vikash, sounds like you need to read more documentation on both of the modules you are using
16:51 < vikash> indeed!
16:51 < vikash> but any quick pointers?
16:51 < superjoe> no
16:51 < vikash> ok :'(
16:53 < pachet> superjoe: i love the feeling of finding something cool, looking at the author, and
16:53 < pachet> oh well what do you know
16:53 < pachet> substack strikes again
16:54 < superjoe> pachet, yeah that's happened to me twice now :)
16:55 < superjoe> it's cool though. he has a rep for good code
16:58 < gavri> https://github.com/baryshev/look doesn't seem to persist its data and once the server is stopped, the metrics are lost. why is this way it's done?
16:59 < gavri> I meant, why is this the way it's done?
17:10 < d4Mn> Hi,
17:10 < d4Mn> anyone knows any samples for storring live analytics data with nodejs and how to handle them without overhelming server?
17:11 < d4Mn> for egzample if i want to see all the ip's of users who are online
17:13 < d4Mn> storing in array isn't an option because of number of users
17:16 < pachet> d4Mn: use a datastore, don't try and keep it in memory within your process
17:16 < pachet> i recommend redis
17:17 < d4Mn> ok i was thinking about that
17:17 < d4Mn> thank you
17:32 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:42 < evanc_> I launched an app using Socket.io and i've been watching the logs today, and i'm seeing a lot of jsonpolling messages like this " jsonppolling closed due to exceeded duration "
17:42 < evanc_> should I be concerned??
17:51 < drojas> anyone using restify and passport-twitter ?
18:08 < evanc_> I have an app using Socket.io and the log file for the app is showing a lot of jsonpolling messages like this " jsonppolling closed due to exceeded duration ", should I be concerned??
18:12 < Stephen> evanc_: No
18:13 < Stephen> evanc_: It'll just re-open
18:33 < MI6> joyent/node: isaacs master * 3b715ed : dtrace: SeqAsciiString was renamed to SeqOneByteString in v8 - http://git.io/kOTBqQ
18:40 < Deathspike> danmactough: This is what I eventually came up with: https://github.com/Deathspike/mysql-simple-pool. It's simple, does proper queueing, limits to a max number of connections, and can be disposed. Let me know what you think, if you have suggestions, improvements, etc. Whatever helps improve it is good by me
18:52 < danmactough> Deathspike: Cool!
18:56 < mop___> hi â€¦ i am trying to share a session between two node processes (one is the webserver => express, one is a websocket server => websocket). it works now but i can't figure out how to extract the sessionId from the signed cookieâ€¦.sessionId = request.cookies[i].value.split('.')[0].substr(2);
18:57 < mop___> this is what i have (and this works) but obviously it doesn't validate the cookie :O
18:57 < mop___> any hints on how to validate the cookie and extract the sessionId? :S
18:58 < mop___> (is that even the right place to ask? there doesn't seem to be an express irc channel :S)
18:58 < Deathspike> mop___: #express
18:58 < mop___> fail
18:58 < mop___> :D
18:58 < Deathspike> But your problem is not likely express, but your approach in WebSocket(?)
18:58 < mop___> i tried expressjs
18:59 < KevinMartin> http://expressjs.com/community.html
18:59 < Deathspike> What is WebSocket.. a library?
18:59 < mop___> well the signed stuff is express specific
18:59 < Deathspike> (I know the tech FYI, just not in this context)
18:59 < mop___> a npm module
18:59 < Deathspike> So.. express uses connect and signs cookies/sessions.
18:59 < Deathspike> WebSocket likely does not. Import connect, sign, profit?
19:01 < mop___> yes it is fully independent of the express stuffâ€¦i was hoping i can import some connect/express stuff and do var value=validateCookie(cookieValue) and then value would be sessionId
19:02 < mop___> i just can't figure out what component does this stuff (still a n00b in node/express etc)
19:02 < Hoverbear> >.> Express.js is only rendering the first line of my page.
19:02 < Hoverbear> But only when I'm not logged in.
19:03 < jcrew> what does your template look like
19:05 < Hoverbear> jcrew: http://fpaste.org/6Rxv/
19:05 < Hoverbear> jcrew: Worked fine until I started integrating some middleware
19:05 < jcrew> it only outputs <DOCTYPE html> and then quits?
19:06 < Hoverbear> jcrew: <!DOCTYPE html><html><head><title>Gatheri
19:06 < Hoverbear> That's all I get
19:07 < jcrew> what does your code in the express handler look like?
19:08 < Hoverbear> jcrew: http://fpaste.org/t7io/
19:08 < tnorris> bnoordhuis: just want to say thanks. must have reviewed that one PR a dozen times the last 4 days.
19:09 < jcrew> Hoverbear: is this express 3?
19:09 < Hoverbear> Yup
19:10 < Hoverbear> jcrew: 3.0.0rc4
19:10 < tnorris> piscisaureus_: and thanks for the suggested template fix. that was an "oh duh" moment for me.
19:10 < jcrew> i had problems with not using the 'locals' var for passing in data to the template before, nothing outputs in the console when it renders that template?
19:11 <@piscisaureus_> tnorris: np :-) appreciated
19:11 < Hoverbear> jcrew: I'm sorry, I don't follow.
19:11 < MI6> joyent/node: Fedor Indutny master * f9afb3f : dtrace: x64 ustack helper (+1 more commits) - http://git.io/DgFlqQ
19:11 < Hoverbear> jcrew: I get `GET /api/workshop/get?workshop=50eb16e495b0cf161b000003 200 214ms - 41` in console after nav'ing to the page
19:11 < jcrew> Hoverbear: in 2.x you could pass in template variables as {var1:v} etc. in 3.x i had trouble doing that, i had to pass in {locals:{var1:v}} to get it to render properly
19:11 < Hoverbear> HUh
19:11 < Hoverbear> jcrew: I'll try.
19:12 < jcrew> not sure it is your problem but it is something i had a problem with before
19:12 < Hoverbear> jcrew: Then you have to change your templates from `foo` to `locals.foo`?
19:12 < jcrew> yea
19:13 < Hoverbear> Ewww
19:13 < Deathspike> mop___: Look at connect middleware.
19:13 < Hoverbear> jcrew: I haven't had that problem with other pages
19:13 < Deathspike> mop___: https://github.com/senchalabs/connect/blob/master/lib/middleware/cookieParser.js
19:13 < jcrew> Hoverbear: i had intermittent success without doing locals.x but locals.x is in the only way i could make it consistently work
19:14 < Deathspike> mop___: Then you find https://github.com/senchalabs/connect/blob/master/lib/utils.js
19:14 < Hoverbear> jcrew: I'll keep in in mind
19:14 < Deathspike> mop___: Which says to use https://github.com/visionmedia/node-cookie-signature
19:14 < Deathspike> And we are done with your problem. :P
19:14 < mop___> yes ty :D
19:15 < Hoverbear> jcrew: I'd really rather not spend the next few days changing all my templates
19:16 < jcrew> just try it on the problem one and find out if that's even a problem.  if it is you could probably use xargs, find, and grep to fix your problem
19:17 < Hoverbear> jcrew: It works with my old function
19:18 < Hoverbear> jcrew: http://fpaste.org/v8Pt/
19:19 < mop___> any idea why node prefixes the session id with s: ? :S
19:19 < Hoverbear> jcrew: Whoa. Hold on a moment.
19:20 < Hoverbear> jcrew: I did a res.send 'blah blah blah blah blah blah' and it's only showing up with 'blah blah blah'
19:23 < tnorris> piscisaureus_: is there ever a use for declaring a template with no arguments? (e.g. `template <>`)
19:23 < mop___> Deathspike: fyiâ€¦whatever the "s:" in front of the cookie does but requiring utils = require('express/node_modules/connect/lib/utils') and then utils.parseSignedCookie(request.cookies[i].value, secret) does the job :) ty again
19:23 < Hoverbear> jcrew: Ok, it's working nowâ€¦ Not sure why still.
19:24 < jcrew> ?
19:26 < Hoverbear> jcrew: Yeah, I dunno.
19:36 < Ramone> hey all... anyone know where I can find docs on the params for the handler for socket's 'error' event?
19:37 < Ramone> it obviously takes an error parameter, but I'm wondering if that's documented anywhere
19:37 < Sly> Ramone: http://nodejs.org/api/net.html#net_event_error
19:38 < Ramone> Sly: I don't see anything about the handler there though....
19:38 < Sly> It's just an Error object.
19:38 < Ramone> yeah I know that :)
19:38 < Ramone> just wondering if there's documentation of that
19:39 < Sly> http://nodejs.org/api/net.html#net_event_error_1  <--
19:39 < Sly> That's actually the link I meant to send..
19:39 < Sly> But yeah. The "Error object" below the "Event: 'error'" is denoting what the callback takes.
19:39 < Ramone> ahhh the bulleted part is the param list
19:39 < Sly> Yup.
19:39 < Ramone> alright sweet...thanks
19:39 < Sly> np
19:44 < s5fs> hey gang, i've got an interactive command-line app, how can I wrap this with node so I can interact w/it?
19:45 < CoverSlide> maybe through stdin?
19:45 < CoverSlide> child_process.spawn, listen on stdout, write to stdin .. ?
19:45 < s5fs> CoverSlide: ok i'll give it a try
19:46 < TehShrike|Work> wat http://html6spec.com/
19:46 < CoverSlide> bitch, I use html9
19:46 < TehShrike|Work> OH SHIII
19:46 < CoverSlide> http://html9responsiveboilerstrapjs.com/
19:46 < TehShrike|Work> HAH excellent
19:48 < EyePulp> beauty
19:48 < superjoe> haha
19:50 < CoverSlide> he's got some nice ideas, though actually. but calling it "HTML6" is a bit misleading since it isn't
19:52 < CoverSlide> and it ain't gonna happen
19:53 < ravisarma> Hello all, I notice some strangeness w.r.t node's module search path. Wondering if any of you can help/advise.
19:54 < CoverSlide> it's pretty straightforward
19:55 < addisonj> ravisarma: don't ask to ask, you just ask :)
19:55 < ravisarma> addisonj, I guess so! :-) So here goes:
19:55 < ravisarma> I installed the node binary pkg to /x/y/node/........
19:56 < ravisarma> Then I used /x/y/node/bin/npm install -g express, etc, to install some modules, which went to /x/y/node/lib/node_modules
19:56 < CoverSlide> http://nodejs.org/api/modules.html << this should have all the info you need
19:57 < CoverSlide> global install doesn't mean the module is globally available, it means it's installed to a single global place for executables
19:57 < ravisarma> But if I do require('express'), node does not find it from /x/y/node/lib/node_modules/express (where I can see it). If I strace() the node process I see that it does not search in this directory at all, despite what this says (http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/) and despite the fact that 'npm' puts it there
19:57 < zomg> CoverSlide: that guy with the html6 thing seems to be missing the entire point of the existing tags like p, h1 and whatever.. they don't exist just because "I just like to use them to mark up pages" like he puts it :P
19:57 < ravisarma> CoverSlide, ah...
19:58 < sohcahtoa> any node.js debugging tips? besides using console.log all over the place...
19:58 < ravisarma> So I still need to point to it using NODE_PATH?
19:58 < CoverSlide> with node you can only require modules that are locally available via the node_modules folder
19:58 < addisonj> ravisarma: just install locally as well
19:58 < CoverSlide> or npm link express
19:58 < exit2> sohcahtoa: http://nodejs.org/api/debugger.html
19:59 < sohcahtoa> oh wild
19:59 < sohcahtoa> thanks
19:59 < exit2> :)
19:59 < CoverSlide> ravisarma: https://npmjs.org/doc/faq.html#Where-does-npm-put-stuff << read this and like the next 5 questions after it
19:59 < chovy> sohcahtoa: have you tried the debugger for node?
19:59 < chovy> sohcahtoa: https://github.com/dannycoates/node-inspector
19:59 < sohcahtoa> this the one exit2 linked to?
20:00 < ravisarma> addisonj, CoverSlide, okay. So I was wrong in assuming that if npm puts stuff in a global place, then node will also find it there automagically!
20:00 < chovy> sohcahtoa: http://www.youtube.com/view_play_list?p=A5216AC29A41EFA8
20:00 < ravisarma> Okay, I will npm link or use NODE_PATH then. Thank you.
20:00 < CoverSlide> right
20:00 < addisonj> ravisarma: unless you have a very specific reason for using globals, you shouldn't don't add it to your path or link, just put it in your package json and install locally as well
20:00 < ravisarma> Thanks again chaps/ladies.
20:01 < ravisarma> Also CoverSlide sorry for not RTFFAQ.
20:02 < niggler> any windows hackers here?
20:03 < tnorris> I'm seeing a shiz load of optimizations in v8 (e.g. `inline <header> __attribute__((always_inline))`). I'm pretty new to C so can someone explain why those types of things aren't done in node?
20:03 < niggler> what's the windows analogue to osx's
20:03 < niggler> "pbcopy/pbpaste
20:03 < niggler> tnorris that's C
20:03 < tjfontaine> tnorris: that's v8 trying as hard as it can to convince the compiler to inline that call, generally though you can trust the compiler
20:03 < tnorris> niggler: yeah, and node has a lot of C.
20:04 < tnorris> niggler: sorry, don't understand what you're getting at.
20:04 < niggler> you can't do that in javascript afaict
20:04 < niggler> there's no way to signal that a function can be inlined in javascript
20:04 < tjfontaine> tnorris: you shouldn't instruct the compiler to do something unless you have proof that it's not doing it
20:04 < KiNgMaR> compilers are usually pretty good at figuring out what to inline (also do NOT think that inline always means "faster". it doesn't.)
20:04 < tjfontaine> tnorris: (when it clearly should)
20:05 < tnorris> tjfontaine: ok. so should I assume the v8 team has really good reason for using it a lot?
20:05 < niggler> there's another important reason
20:05 < tjfontaine> tnorris: a good reason, or a paranoid coding style
20:05 < niggler> if you mark something as always_inline and it turns out that the function does something which precludes inlining, you will get an error
20:05 < tnorris> tjfontaine: ok. the v8/src/handles.h uses it everywhere.
20:06 < tjfontaine> tnorris: that file is special and used in so many places I am sure they're just taking extra precaution against the compiler making a poor decision
20:06 < niggler> with the other inline attributes there is no error
20:06 < tnorris> tjfontaine: ah, thanks.
20:07 < niggler> and iirc inlining happens in -O2 (meaning, if you just compile, it won't inline by default)
20:07 < tnorris> niggler: i'm not sure this has anything to do with javascript. i'm talking about the v8 internals.
20:08 < niggler> some of the node code is javascript (which is what i originally thought you were complaining about).  I'm not sure what compile level v8 uses by default, but always_inline always inlines whereas gcc starts inlining in optimization level -O2
20:11 < CoverSlide> I always compile with -O7
20:11 < tjfontaine> clearly you mean O9001
20:13 < CoverSlide> nah i favor stability
20:13 < niggler> no love for -Os ?
20:21 < tnorris> niggler: I believe node compiles v8 with -O3
20:21 < tnorris> niggler: nm. that's only with --unsafe_optimizations. compiles with -O2 by default.
20:22 < niggler> then the only reason to put them there is to explicitly bomb out at compile time if the code can't be inlined
20:22 < q_> is there a bot in here ?
20:22 < q_> @seen marcello3d
20:23 < q_> !seen marcello3d
20:23 < niggler> >>> 'test' @ q_
20:23 < purr> q_: (string) 'test'
20:23 < q_> niggler, oh cool
20:24 < Corey> othiym23: Looks like I've solved last week's "proxying node.js with apache" issues.
20:24 < MI6> joyent/node: isaacs master * ec0446a : dtrace: Make D style more D-ish - http://git.io/RcJX1Q
20:25 < Corey> othiym23: A combination of timeout and retry settings, along with a couple setenv statements sorted it, though I must say I'm not sure which one actually got it.  It's production, so I don't really want to play doctor with it.
20:26 < MI6> joyent/node: isaacs master * 38df9d5 : dtrace: Make D style more D-ish - http://git.io/wIxOgg
20:34 < q_> >>> "new Error('dummy').stack.replace(/^[^\(]+?[\n$]/gm, '').replace(/^\s+at\s+/gm, '').replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@').split('\n')" @ q+
20:34 < purr> q_: SyntaxError: Unexpected token ILLEGAL
20:34 < MI6> joyent/node: isaacs master * 321b8ee : dtrace: More style  Continuation lines should be indented with 4 spaces,  - http://git.io/VK07Lg
20:34 < q_> >>> "new Error('dummy').stack.replace(/^[^\(]+?[\n$]/gm, '').replace(/^\s+at\s+/gm, '').replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@').split('\n')" @ q_
20:34 < purr> q_: (string) "new Error('dummy').stack.replace(/^[^(]+?[\n$]/gm, '').replace(/^s+ats+/gm, '').replace(/^Object.<anonymous>s*(/gm, '{anonymous}()@').split('\n')"
20:35 < q_> I should do this in a channel
20:37 < tnorris> niggler: interesting
20:51 < tjkrusinski> LIST
20:57 < q_> >>> new Error('test').stack;
20:57 < purr> q_: (string) 'Error: test\n    at irc:1:6\n    at Sandbox.execute (/srv/irc/purr/lib/sandbox/v8/shovel.js:56:12)\n    at Object.exports.run (evalmachine.<anonymous>:386:12)\n    at Sandbox.run (/srv/irc/purr/lib/sandbox/v8/shovel.js:45:38)\n    at Socket.Sandbox.load_input (/srv/irc/purr/lib/sandbox/v8/shovel.js:27:13)\n    at Socket.EventEmitter.emit (events.js:90:17)\n    at Pâ€¦
21:07 < TJKrusin_> Is anybody using node with zeromq?
21:12 < CoverSlide> nope
21:14 < ins0mnia> TJKrusinski: I'm actually looking into this as we speak
21:15 < ins0mnia> TJKrusinski: http://zerorpc.dotcloud.com/
21:16 < ins0mnia> but I fancy scuttlebutt more
21:16 < CoverSlide> well that's apples to oranges
21:17 < Hoverbear> scuttlebutt lol
21:17 < ins0mnia> CoverSlide: Why is that if I may ask
21:19 < bid> hi, to show images do i have to use fs.read()? is there a path that i can define and have node grab the image from there? 
21:19 < ChrisMatheson> Hey guys, quick question that i hoped some experience could help me with. 
21:20 < ChrisMatheson> Whats the best way to "sanitise" data that may or may not be present
21:20  * MMOURA New Network joined /server 87.202.109.65
21:21 < ChrisMatheson> i.e. object input might or might not have the required property or it might be null or it might be a zero value e.g. "" and i keep writing very big if statements :(
21:29 < Deathspike> ChrisMatheson: Try node validator, or the express integration variant.
21:30 < ChrisMatheson> Deathspike cheers ill take a look (i was searching for sanitisation which didn't return a lot :P )
21:51 < klaemo> hey, so what's the best way to check if an object is a node http request object?
21:58 < superlukas> it seems impossible to spawn a git child process from node. any idea why? http://hastebin.com/lejonemosu.js (10 LOC)
22:00 < brettlangdon> klaemo, afaik there is no easy way of doing so, probably best to ensure the variable is an object and if you are particularly worried about it then check for specific properties before using
22:01 < klaemo> brettlangdon: yeah, i'm probably gonna go the duck-punching route. thx :)
22:01 < brettlangdon> klaemo, nvm, I figured it out
22:01 < brettlangdon> req = http.request(â€¦)
22:01 < brettlangdon> req instanceof http.ClientRequest
22:06 < klaemo> brettlangdon: req instanceof http.IncomingMessage is what worked for me
22:07 < brettlangdon> klaemo, ah, well, hey, if it works how you need it too :)
22:07 < klaemo> brettlangdon: yep, thanks anyways
22:07 < brettlangdon> np
22:13 < CoverSlide> superlukas: what happens when you do that?
22:13 < superlukas> runs forever
22:20 < superlukas> CoverSlide: may be a git issue - i have no idea how to debug this
22:22 < xp_prg> I need to convert my app to be non-blocking which uses a bunch of for loops
22:22 < xp_prg> can anyone point me to a tutorial on how to convert a for loop to non-blocking?
22:23 < CoverSlide> how big are these loops?
22:23 < xp_prg> well they are searching a structure for a value etc...
22:23 < CoverSlide> because if they're less than a thousand it'd probably be less performant without sticking them in the event loop
22:24 < xp_prg> hmm... ok
22:36 < tnorris> isaacs: do you remember how long ago you started writing streams2?
22:37 < tnorris> i'm rewriting the contributing for dummies wiki page and that is a perfect example of maintaining a branch.
22:50 < wns> http://github.com/yeptlabs/wns
22:52 < s5fs> CoverSlide: thanks for your feedback earlier re: running a cmdline utility via child_process. however, i'm still having issues, it seems the program creates it's own interpreter and i cannot send/receive data over stdin/stdout. thoughts?
22:55 < jw___> hi guys check out http://iholler.com It's built in NodeJs
22:56 < jdc-c5> G'day y'all. Have any of you deployed anything significant  to Azure ?
22:57 < chovy> jw___: you g uys hiring?
22:58 < jw___> chovy: send your resume to admin@iholler.com
23:00 < jdc-c5> Hm.
23:00 <@isaacs> tnorris: not sure
23:01 <@isaacs> tnorris: that branch was rebased a lot and actually started out as a separate project
23:01 < jdc-c5> How about this. Anyone benchmarked the same node server across OSes / got an opinion on the best OS to underly their node app?
23:01 < jdc-c5> Suppose I am deploying to e.g. EC2. 
23:01 < tnorris> isaacs: duh, I can just go back and check the commit history of your readable-stream repo...
23:01 < jdc-c5> I suppose what I am asking is who has the best kernel evented IO implementation
23:01 < tnorris> thanks
23:01 <@isaacs> tnorris: looks like it started here:
23:02 <@isaacs> commit 230e3f9fbd8866c73a2fe3fc9e7d8d933208e5d7
23:02 <@isaacs> Author: isaacs <i@izs.me>
23:02 <@isaacs> Date:   Wed Jul 25 20:02:50 2012 -0700
23:02 < chovy> jw___: whereh are you located?
23:02 < jdc-c5> For some reason I am thinking FreeBSD but I remember reading that the Windows kernel IO stuff got much better recently
23:02 < niggler> isaacs is there a way to see the history of rebases?
23:02 < jw___> @chovy Montreal
23:02 < tnorris> isaacs: awesome thanks.
23:02 < chovy> jw___: ahh. k, probably not going to work for me.
23:02 <@isaacs> tnorris: of course, the next commit like 5 minutes later is "all the code", so probably that was a few days old at least.
23:02 < tnorris> niggler: only if it's still in your reflog.
23:02 < chovy> i'm in US.
23:02 < tnorris> isaacs: heh.
23:02 < jw___> chovy: ok
23:03 < tnorris> niggler: actually, github stores all commits even if they're overwritten. but i'm not sure how to browse those.
23:04 < niggler> lol silly canadians
23:04 < niggler> tnorris i would imagine that new pulls would not see those commits
23:05 < tnorris> niggler: no. took me almost an hour to figure that out. was viewing a comment on a specific commit, but couldn't find the commit in the history.
23:07 < jdc-c5> If you know the SHA you can restfully reach it I think
23:07 < jdc-c5> i.e. of the commit
23:08 < jw___> be the first to holler in your city
23:15 <@isaacs> rvagg: FDManager looks pretty nice
23:15 <@isaacs> rvagg: having that as a separate module just for doing fd sharing between fs streams would be nice
23:15 <@isaacs> rvagg: or even just between <whatever> things
23:16 < rvagg> isaacs: we'll see! I'm a little dubious about its usefulness beyond st but perhaps I'll convince myself when I pull it out
23:16 <@isaacs> rvagg: well, it's basically a general purpose open-fd-pooling module then
23:16 <@isaacs> jlord__: yo
23:17 <@isaacs> rvagg: any time you're doing a lot of stuff with files, pooling fd's will let you prevent a LOT of open(2) syscalls
23:17 < rvagg> isaacs: speaking of pulling it out.. I'm currently implementing a "generic session manager" that's modelled largely off RedSess but I don't need Redis support at the moment, I'm planning on putting a LevelDB backend to it for a start; would you be interested to see a PR to back RedSess with it when it's done?
23:17 < jlord__> isaacs: i'm creepin on you in two dimensions 
23:18 <@isaacs> jlord__: /msg NickServ help register
23:18 < CoverSlide> dfsadf\
23:18 < CoverSlide> 
23:18 < CoverSlide> 
23:18 < CoverSlide>  
23:18 < CoverSlide> 
23:18 < CoverSlide> 
23:19 < malkomalko> what's currently the fastest ws implementation? We've been using a third party for websockets but we've been less than impressed
23:20 <@isaacs> rvagg: well... i think "redsess" kind of ought to be rediss.
23:20 <@isaacs> *redis
23:20 <@isaacs> (re-diss is when you insult someone again)
23:20 < rvagg> yeah, that's fine, but the session handling logic is what I'm interested in so I'm just implementing that with the 'store' abstracted away as a plugin
23:21 <@isaacs> rvagg: oic, so redsess would still use redis, but it'd basically just be your abstract session manager hooked up to the redis client?
23:21 < rvagg> yep
23:21 <@isaacs> rvagg: that'd be rad, as long as it presents the same API
23:21 < rvagg> yep, I like the API you have, that's why I'm shamelessly copying
23:21 <@isaacs> rvagg: i also have to be able to get at the db client so i can shut it down on server close
23:22 <@isaacs> awesome!
23:22 < rvagg> isaacs: I went hunting through all the session manages but didn't like any of them, but RedSess is a nice package except for the Redis dependency
23:23 < rvagg> isaacs: anyway, I'll show you when I have this done, just fiddling with functional tests now and then I'll publish
23:23 < grownseed> hey guys, i moved some express (2.5) code inside a function, and i'm passing res.send as a callback, it works when not in a function but express throws "no method 'header'" when in the function, i can't figure out why, anybody any idea?
23:23 <@isaacs> rvagg: kewl.  if you can finish fdmanager, that'd be rad, because all that shit in st sucks.
23:23 < bemson> npm has loaded some nested dependencies that I can't seem to load directly. So modA depends on modB, and calling require('modB') throws an errorâ€¦ any ideas?
23:23 <@isaacs> rvagg: even when it works, it's super complicated and hard to follow the code.
23:23 < rvagg> isaacs: yep, will work on that next
23:24 <@isaacs> bemson: if you do require('modb') then you depend on modb.  list it as a dep, and install it locally.
23:24 < rvagg> isaacs: yeah, and that'd probably be the main benefit of pulling it out into a separate module IMO, keep the complicated logic separate
23:24 <@isaacs> bemson: don't be diving into your dep's underwears
23:24 < bemson> isaacs: ah, didn't know that - thought nested dependencies would be automatically available
23:24 < bemson> isaacs: thx!
23:24 <@isaacs> bemson: nope.  if they were, then conflicts would be all conflicty
23:24 < bemson> isaacs: claro
23:25 <@isaacs> bemson: your *parent's* deps are available to you
23:25 < bemson> isaacs: gotcha
23:25 <@isaacs> bemson: because, if you need a different version, you can just install it locally, and it'll override.  it's likea __proto__ chain
23:28 < grownseed> ah... nevermind, just res losing the scope, a simple bind did the trick ^^
23:30 < tnorris> just rewrote the "for dummies" wiki page. anyone mind reviewing: https://github.com/joyent/node/wiki/Contributing-for-Dummies
23:41 <@isaacs> tnorris: needs to mention the CAL
23:41 <@isaacs> CLA
23:42 < tnorris> ah, duh. thanks
23:45 < styol> I'm quite the confused by an error object being received back from a module that is a C / C++ Addon -- { [Error: No such key] code: 13 } -- doesn't seem to be a valid object, yet error.code is indeed 13 and you can even do if (error == 'Error: No such key'){ /* true */ } while if (error === 'Error: No such key'){ / * is false */ } -- Any ideas? Me just curious at this point
23:47 < Virunga> I stringified an object then sent it on a tcp connection and after parsed the buffer.toString() i got this error   io!","channel":"#channel"}{"time":"2 
23:47 < Virunga> What could be the problem? I sent lots of other similar messages before this
23:48 < Virunga> And the encoding is the same
23:48 < tnorris> isaacs: thanks. done.
23:49 < Virunga> Both the brackets shouldn't be there :/
23:54 < trevnorris> should have done this a while ago. now my irc nick matches my github account. that should almost be a rule or something.
23:57 < p_l_a_y> hey guys what the easiest way to query a database from nodejs?
23:58 <@Nexxy> p_l_a_y, with some sort of database module
23:59 < p_l_a_y> any recommendation on which module to use
23:59 <@Nexxy> p_l_a_y, felixge has a nice mysql module: https://github.com/felixge/node-mysql
23:59 < p_l_a_y> ok thx
23:59 < p_l_a_y> that mysql only 
23:59 <@Nexxy> indeed
--- Log closed Tue Jan 08 00:00:10 2013
