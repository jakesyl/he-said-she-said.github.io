--- Log opened Sat Aug 18 00:00:31 2012
--- Day changed Sat Aug 18 2012
00:00 < klawd_prime> aye, thank you!
00:00 <@Nexxy> :)
00:14 < Leerp3> Is `npm link` an insane tool?
00:14 < Leerp3> I just had an argument with another developer who thought `npm link` was some type of unsafer operation that shouldn't be used.
00:15 < Leerp3> I feel like he misunderstands symlinks.
00:15 < Leerp3> Err, misunderstands `npm link`
00:16 < Leerp3> His argument was that if you push project1 before pushing project2 shit hits the fan.. and i have no response. Of course it hits the fan, but that scenario happens no matter what. 
00:16 < Leerp3> The solution is to only work with no in dev dependancies
00:20  * rvagg likes `npm link`
00:21 < rvagg> but it can be annoying when you `npm update -g` and your link disappears and suddenly you're working with the npm version of your lib
00:21 < rvagg> my `npm link` usecase is to eat my own dogfood before pushing to npm
00:21 < Leerp3> rvagg: Same
00:22 < Leerp3> rvagg: I just don't understand how he can be against it simply based off of the "if you push it before it's done, shit happens" stance..
00:22 < Leerp3> rvagg: My response to that stance is.. no shit! If you push anything at improper times (like, before it's done) shit happens.
00:23 < Leerp3> I'm just confused how someone can stand on such ... confusing, ground. I feel like i must be missing something
00:24 < rvagg> meh, some people get dogmatic about strange things
00:24 < Leerp3> I called his code bad.. i feel bad :s
00:24 < rvagg> pragmatism always wins
00:25 < rvagg> yea, don't do that to another coder
00:25 < Leerp3> haha
00:25 < Leerp3> Well to be fair, i am a frustrated user of his code. 
00:25 < rvagg> heh
00:25 < Leerp3> I am slowly starting to hate him and his, heh
00:25 < Leerp3> But yea, the npm link thing just frustrated me.
00:25 < rvagg> so fork his code if  you can
00:25 < ccowan> Leerp3: Who?
00:25 < Leerp3> Leerp3: lol why would i name names?
00:26 <@isaacs> ccowan: because frameworks suck.
00:26 < Leerp3> .. 
00:26 < Leerp3> i quoted myself.
00:26 <@isaacs> ccowan: not a universally held opinion.
00:26 <@isaacs> ccowan: but one that i hold.
00:26 < Leerp3> ccowan: I'm not going to name names :P. I'm not a gossip. This is all a point of discussion, not to point and laugh
00:26 < ccowan> isaacs: but didn't you essentially build a framework to avoid a framework?
00:26 < Leerp3> I feel like *i* must misunderstand `npm link`, or perhaps "good practices for safe code"
00:26 < rvagg> ccowan: nodeup #17 was a good discussion on frameworks
00:27 < ccowan> rvagg: downloading ;)
00:31 < ccowan> Without listening (maybe nodeup will change my mind) I would say some frameworks rock and others suck big time. I've been using Express for a while and it's seems like just the right amount of framework  as in nothing too bitter stuffed down your throat.
00:31 < Leerp3> ccowan: I've been liking Flatiron
00:32 < tprice> anyone know about node on android?
00:32 < Leerp3> tprice: What is your use case? Out of curiosity?
00:33 < tprice> want to play with node on android
00:33 < rvagg> I like the more modular approach of flatiron, express seems a little too much in one pkg
00:33 < tprice> nothing really just testing
00:33 < Leerp3> tprice: Well if you find anything useful, hit me up. :)
00:34 < tprice> will do
00:35 < tprice> what about node on ios?
00:36 < tprice> tootallnate how far have you got?
00:38 < ccowan> rvagg: for me... express has what i would include anyways so that was a plus :)
00:40 < TooTallNate> tprice: i got node running on iOS a while back
00:40 < TooTallNate> tprice: the deb in cydia is still like v0.6.14 or something though
00:40 < TooTallNate> haven't found time/need to update it yet
00:41 < tprice> yeah im just reading up on node-iOS
00:41 < tprice> very coooool!!
00:49 <@konobi> TooTallNate: all you need now is appjs on ipad =0P
00:50 < milani> konobi, it will be awesome! but appjs uses cef which is not ios compatible:D
00:52 <@maxogden> i dunno why appjs didnt fork the phonegap project
00:52 < milani> because phonegap targets mobile phones
00:53 <@maxogden> phonegap targets webviews
00:53 < milani> and it has APIs for that target, and also I wanted to use node modules
00:53 <@maxogden> cef is basically a webview
00:53 < milani> yeah it is. with more html5 apis implemented, and well maintained.
00:56 < Benvie> cef is a node module that's a webview from chromium 22
00:57 < Benvie> er I should say
00:57 < Benvie> appjs is
00:57 < Benvie> phonegap is not really quite that
01:01 < tprice> appjs?
01:01 < milani> Benvie, show him the famous picture:D
01:01 < milani> lol
01:01 < Benvie> hah
01:01 < milani> tprice, http://appjs.org
01:01 < Benvie> https://github.com/appjs/appjs/raw/master/examples/chrome-in-node-repl.jpg
01:11 < AAA_awright> Node in Chromium, Chromium in Node, what's the world coming to?
01:12 < milani> AAA_awright, js everywhere;)
02:05 < wdent> Any CentOS5 experts that can point me to an example of init.d script to start node using supervisord?
02:07 < timeturner> can I require() in a return statement?
02:07 < timeturner> or in a function callback?
02:09 < milani> timeturner, yeah. but it will be there always.
02:10 < milani> I mean requiring in a function does not mean the module will be destroyed after returning.
02:14 < Franz__> some expert in node.js +socket.io 
02:14 < Franz__> for a paid work?
02:16 < deoxxa> morning node-jizzers
02:19 < wdent> Anyone know how to make this a CentOS 5 version (5 lines of code)? http://pastebin.com/48MSmwpz
02:20 < deoxxa> wdent: maybe ask in #centos
02:58 < tprice> echo echo echo
04:19 < tizzo> I'm having an issue with Plates ignoring any more than one route, anyone ever experience this before?
04:19 < tizzo> by route I meant mapping
04:23 < rvagg> tizzo: you'll probably find more help in the #nodejitsu channel for that I suspect
04:23 < tizzo> rvagg: excellent point. thanks
04:23 < tizzo> rvagg++
04:24 < rvagg> you can ++ me in #nodejitsu!
04:24 < tizzo> :p
04:51 < mappum> wtf, my antivirus reports some node test scripts as threats
04:51 < mappum> test-net-many-clients.js, test-net-throttle.js, etc
04:52 < mappum> does it think they are for DDoSing?
04:54 < deoxxa> http://meteor.com/blog/2012/08/08/search-engine-optimization hahahahahaahaha wow i hope they're not serious.
04:54 < deoxxa> > When a spider requests an HTML snapshot of a page, the Meteor server runs the client half of the application and returns the full HTML generated by the client code. This version of spiderable uses phantomjs, a headless browser.
04:56 < mappum> What's so funny? I'm sure it gets cached
04:57 < deoxxa> doubtful
04:58 < mappum> well, then see if you can dos them with a spider script
04:58 < ccowan> I have an express app that is hanging on exception.. it doesn't do this on my development box when I trigger fake exceptions. The error handler (via app.error) catches it and life goes on 
04:58 < ccowan> but on my staging server it takes a giant dump and then just sits there stuck
04:59 < ccowan> any suggestions?
05:00 < mappum> i think you are supposed to use the errorHandler middleware in production, but you dont give it any options so it doesnt actually dump errors to users
05:01 < mappum> i have my app configured like that, but i'm not actually 100% sure
05:01 < deoxxa> you also have to set NODE_ENV to production, or prod, or something else that's documented when you google "express error handler"
05:01 < ccowan> it's not dumping errors to the user but to the console
05:02 < ccowan> I have NODE_ENV=staging
05:02 < ccowan> I think that can be whatever you define
05:07 < AAA_awright> Meteor is the butt of a lot of jokes in conversations I've been in :>
05:07 < AAA_awright> And yeah, passing off a request to a web browser is just a horrible, awful way of doing code
05:09 < deoxxa> AAA_awright: they make it too easy to poke fun, which is a shame. the concept itself is cool but the execution is horrrrrrible.
05:09 < mappum> They handle all the view rendering, right? How hard can it be to port the in-browser rendering stuff to run in node?
05:10 < AAA_awright> *Anything* in Node.js is cool
05:10 < AAA_awright> But it's also rediculously easy to put out absolute crap
05:11 < AAA_awright> I've been in development for a year because you've *got* to make many of these design decisions right the first time
05:11 < deoxxa> yep
05:11 < mappum> It's so weird, i've only been using node since november, but I feel like it has been years
05:12 < Taneem> AAA_awright: what are you building? curious 
05:12 < AAA_awright> <-- two years
05:12 < AAA_awright> (two years if you want to count prototypes, actually)
05:12 < AAA_awright> Taneem: http://magnode.org/ I'm like, a week away from publishing a package that people can deploy
05:12 < Taneem> oo interesting
05:13 < deoxxa> https://github.com/deoxxa/Twitter2IRC/ << my first node project :3
05:13 < AAA_awright> Though I've been a week away for a week now, but I am indeed inching closer
05:14 < AAA_awright> Taneem: Something you're interested in?
05:14 < AAA_awright> I mean, is it?
05:14 < mappum> I took my first nod eproject off github because now i'm embarassed by it
05:14 < Taneem> i don't have a immediate use for it, I just think it's a neat concept
05:14 < Taneem> i'm building something a lot simpler ... http://joylister.com
05:14 < deoxxa> mappum: haha
05:14 < AAA_awright> You have no need for a blog, eh?
05:15 <@maxogden> its more embarassing to have no projects on github
05:15 < Taneem> haha my blog is a very simple hand rolled affair
05:15 < mappum> Taneem, really cool
05:16 < mappum> the design is bomb, but IMO it needs a little more contrast (the lines and such should be a tad darker)
05:16 < Taneem> mappum: thanks! i hope you figure out that you can scroll
05:16 < Taneem> noted
05:16 < deoxxa> Taneem: what... does it do?
05:16 < mappum> yeah, that was intuitive
05:16 < mappum> why does the scrolling feel so slow?
05:16 < Taneem> so it's basically like taking pinterest/tumblr and mixing it up with 43things 
05:16 < Taneem> sort of
05:16 <@maxogden> wat
05:17 < Taneem> im not sure .. maybe the pictures are really heavy
05:17 < Taneem> the basic idea is that you create lists of things that you're interested in doing, like a bucketlist
05:17 < mappum> don'y laugh at the girliness of my app: http://outfitly.com/
05:17 < Taneem> each thing you create is a collection of links, pictures etc. .. same types of things you'd find on a pinterest board
05:17 < Taneem> ooo
05:18 < Taneem> you're in a crowded space, but this looks good
05:18 < mappum> mines very pinteresty, too, but just for getting feedback on clothes
05:18 < mappum> there are really popular things like my app, but they are just blogs, not user content
05:19 < Taneem> i had an idea in this space once
05:19 < Taneem> something i noticed was that
05:19 < Taneem> there are a ton of indie fashion blogs out there
05:19 < mappum> we expect people to be able to follow their friends, and famous fashion people (like twitter)
05:19 <@maxogden> mappum: what parts are node powered?
05:19 < Taneem> with really high quality pictures
05:19 < Taneem> there ought to be a way to capitalize on that
05:19 < mappum> maxogden, all of it, it's on express and mongoose
05:19 <@maxogden> i just made http://jsforcats.com/ in the last couple of hours (work in progress)
05:19 <@maxogden> mappum: ahh gotcha
05:20 < Taneem> maxogden: that's awesome
05:20 < mappum> sweet beard
05:20 < Taneem> i know SO MANY people on codeacademy lately
05:20 <@maxogden> mappum: thanks
05:20 < mappum> js is going mainstream, now we have to switch to dart
05:21 <@maxogden> js has been mainstream since like 2003
05:21 < mappum> but people hated it then
05:21 <@maxogden> codecademy is underwhelming in my opinion
05:21 < mappum> and it was crappy
05:21 < mappum> but v8 and node changed everything
05:21 <@maxogden> it was just misunderstood :)
05:21 < Taneem> maxogden: I agree, but i see a huge opportunity
05:21 <@maxogden> me too, hence: js for cats
05:22 < Taneem> most of the js resources out there are crap .. the best stuff is in things like stackoverflow questions
05:22 < Taneem> your idea could work
05:22 <@maxogden> what do you mean 'work'
05:23 < Taneem> making it accessible and building an audience
05:23 < mappum> my previous startup idea was something that fits with that, it would've been a place to prove your coding skills (and later other fields)
05:23 < Taneem> which i presume are your goals...
05:23 <@maxogden> i think its sad that most intro to js tutorials feel like every cs 101 class
05:23 < mappum> since there are so many great new online learning resources
05:25 < Taneem> mappum: at the bottom of the page the Load More Posts should probably change to "No more" or something like that
05:25 < mappum> yeah i know, i have a long todo list
05:25 < deoxxa> https://github.com/meteor/meteor/blob/master/packages/spiderable/spiderable.js << wow
05:25 < Taneem> haha ya .. i know all abt that
05:26 < deoxxa> > var fs = __meteor_bootstrap__.require('fs');
05:26 < mappum> this was just my prototype, we've onyl had users for like a day
05:26  * deoxxa shakes head
05:26 <@maxogden> the fail begins on line 1
05:26 < deoxxa> yeah
05:27 < deoxxa> ends around line 90?
05:27 < deoxxa> var REQUEST_TIMEOUT = 15*1000; << why is this capitalised? and also not configurable?
05:27 < deoxxa> so much fail
05:29 < mappum> deoxxa, working on anything interesting?
05:29 < rvagg> pizza hacking
05:29 < ojon> do you know if Derby handles the web crawling in a better way?
05:30 < deoxxa> mappum: thinking of maybe doing some more on my bittorrent implementation
05:31 < deoxxa> ojon: it can render the html on the server side instead of on the client side, and actually does that for the first request anyway. so in that regard, it has meteor beat hands down.
05:32 < deoxxa> ojon: it's a far better contender for a "getting heavily interactive stuff done quickly" framework of choice than meteor is, i think.
05:34 < deoxxa> i think i'll go buy a water heater thing first though
05:34  * deoxxa bbl
05:34 < ojon> deoxxa: thx, bye
05:43 < ccowan> SO I think my issue had something to do with using clustering with only none CPU
05:43 < ccowan> has anyone seen an issue like that?
05:47 < thealphanerd> anyone have much experience making npm packages?
05:47 < tprice> yeah
05:48 < thealphanerd> so I'm trying to make a package to do i2c communication
05:48 < thealphanerd> and I need a library to use to do it
05:48 < thealphanerd> or an application
05:48 < thealphanerd> could I write bindings for a python library?
05:50 < tprice> what are you asking
05:50 < thealphanerd> https://github.com/quick2wire/quick2wire-python-api
05:50 < thealphanerd> I want to write bindings to use this in a node app
05:51 < thealphanerd> to do i2c communication
05:51 < axefrog> Can you guys recommend any guides/examples online for unit testing web applications? I don't really have a good feel for how unit tests look in node when dealing with multiple components such as presentation, service and data layers
05:55 < deoxxa> thealphanerd: i honestly don't think you'd get a lot of users of your library if it relied on python
05:55 < thealphanerd> https://projects.drogon.net/raspberry-pi/wiringpi/
05:55 < thealphanerd> think this is a better thing to write wrappers for
05:55 < thealphanerd> make it device specific
05:55 < deoxxa> yeah
05:55 < deoxxa> that would work better
05:56 < thealphanerd> although I wish it were hosted on git :S
05:59 < deoxxa> ah it's not so bad
06:00 < thealphanerd> I've never written bindings like this before
06:00 < deoxxa> gpl3 is a bit of a worry
06:00 < deoxxa> but maybe ok for your purposes
06:01 < thealphanerd> its for academic research
06:01 < thealphanerd> but I also don't want to waste my time
06:02 < thealphanerd> there is i2ctools
06:03 < deoxxa> have you confirmed that there isn't a library for this already for node?
06:03 < thealphanerd> the closest thing is https://npmjs.org/package/firmata
06:04 < thealphanerd> but that is used to control an arduino over serial to do i2c
06:04 < thealphanerd> not to do natice i2c
06:04 <@Nexxy> thealphanerd, jgautier is a really nice guy, I'm sure he'd be happy to work with you
06:06 < thealphanerd> Nexxy: that's not a bad idea
06:06 < thealphanerd> but don't want to rope anyone else in just yet
06:06 < thealphanerd> :D
06:06 < thealphanerd> want to figure out how to write bindings… good skill to have
06:24 < rvagg> anyone know if it's possible get node-gyp to do multiple jobs simultaneously? like make -jX? rebuilding larger projects is tedious
06:26 < whiskers75> Is it good Node.js to write return callback() ?
06:30 < rvagg> whiskers75: only when you need to shortcut your code
06:30 < rvagg> if (err) return callback();
06:30 < rvagg> other than that it's unnecessary and may make people think you're writing coffeescript
06:30 <@Nexxy> and you wouldn't want that.
06:34 < rvagg> not around here anyway...
06:46 <@maxogden> what do ya'll think of the "Functions" section http://jsforcats.com/
06:46 < nonuby> what would be the most efficient way to implmenet a capped collection (fixed size array where first in are lost when MaxN elements are added) in node.js (avoiding to much mem copying), splice?
06:47 <@Nexxy> nonuby, .shift() ?
06:48 <@Nexxy> dogSentence <- this made me laugh
06:48 < nonuby> i need to delete from front of array and add to back, so shift and then push is more efficent than splice manipulation?
06:49 <@maxogden> Nexxy: haha
06:49 <@Nexxy> nonuby, it wouldn't be too hard to find out ;)
06:49 < nonuby> fair point :)
06:50 <@Nexxy> maxogden, needs moar needless banter and cartoon characters
06:50 <@Nexxy> OH MY GOD THERE'S YOU AND A CAT AT THE BOTTOM
06:51 <@maxogden> :)
06:51 <@maxogden> Nexxy: the fact that you thought of whys poignant guide makes me happy
06:52 <@Nexxy> ;P
06:52 <@Nexxy> just no chunky bacon
06:52 <@maxogden> too bad i am neither an english major nor an illustrator
06:52 <@Nexxy> but you make up for that with DUCK LIPS
06:52 <@Nexxy> and cats
06:53 <@maxogden> Nexxy: refresh the page, added more cartoon characters for you
06:53 <@maxogden> (drawn by substack)
06:54 < jesusabdullah> nonuby: Implement a ring structure by using an array and an int for tracking the zero and final index
06:54 <@Nexxy> maxogden, http://www.example.com/image.jpg
06:54 <@Nexxy> erm
06:54 <@Nexxy> http://i.imgur.com/0gr4e.gif
06:54 < jesusabdullah> nonuby: so when you want to shift off an element, you zeroth++ and when you push one onto the end you finalth++
06:54 <@maxogden> haha
06:55 < nonuby> jesusbdullah, reading time, have heard about the ring structure in a few articles, thanks for the pointer
06:55 < jesusabdullah> nonuby: Yeah, look up "ring queue"
06:55  * Nexxy points to mordor
06:55 < jesusabdullah> nonuby: It would make a nice little utility on npm if it's not on there already
06:55 < jesusabdullah> nonuby: just an object that implements a queue on top of an array
06:56 < jesusabdullah> maxogden: Want contributed cats with computers art?
06:56 <@maxogden> YES
06:57 <@Nexxy> maxogden, suggestion: add definitions for acronyms
06:57 < jesusabdullah> when I write a programmin' book it's gonna be in latex XD
06:58 < jesusabdullah> MAYBE IT WONT BE A PROGRAMMING BOOK
06:58 <@Nexxy> a program your own adventure book?
06:58 < jesusabdullah> sounds fun
07:43 < whiskers75> with redis, why does db.get(res, err) { if (err) {console.log('Error: 'err)} } result in "Error: undefined"?
07:43 < whiskers75> +err
07:43 < whiskers75> i mean
07:44 < deoxxa> whiskers75: first off, that's backwards
07:44 < deoxxa> also not correct syntax
07:44 < deoxxa> maybe time to do up a gist :)
07:44 < whiskers75> http://pastebin.com/nkBKFe16
07:45 < deoxxa> usually it's function(err, res) { ... }
07:45 < deoxxa> you might want to check you have that around the right way
07:46 < whiskers75> does it matter...?
07:46 < deoxxa> only if you want it to work
07:46 < whiskers75> :D ok
07:46 < deoxxa> but yes, you're right, it's odd
07:46 < deoxxa> it shouldn't be passing the if (err) { ... } part
07:46 < deoxxa> try console.log(err) outside the if statement
07:48 < whiskers75> It's actually a return callback(err)
07:48 < whiskers75> but ok
07:49 < whiskers75> i get null as err
07:49 < whiskers75> so no error
07:49 < whiskers75> evidently it worked
07:49 < deoxxa> hooray!
07:50 < whiskers75> yay!
07:51 < whiskers75> now to code the game engine...
07:52 < whiskers75> *sigh*
08:11 < ericelliott> hi node gurus..
08:11 < ericelliott> I'm trying to use several dependencies that I wrote for the first time, but I'm doing something wrong.
08:12 < ericelliott> When I try to require my own dependencies using github urls, I get "not a package" errors
08:12 < ericelliott> http://travis-ci.org/#!/dilvie/applitude
08:12 < ericelliott> which cause my builds to fail.
08:12 < ericelliott> Do I have something configured incorrectly, or do I just need to register the packages with npm?
08:13 <@maxogden> are you using git:// urls or github http:// urls? cause i think it only works with git:// urls
08:13 < ericelliott> oh.. I was using http:// urls
08:13 < ericelliott> I'll try swapping them out.
08:14 < ericelliott> should I also use git:// urls for the "repository"?
08:15 < tprice> how do i get socket.io to work on nodejitsu?
08:15 <@maxogden> ericelliott: i dont remember, you might wanna look up an example working package.json. i think its like "dependencies": {"foo": "git://blahblah"}
08:16 <@maxogden> ericelliott: ohhh repository is for the github repo associated with the current module
08:16 <@maxogden> ericelliott: so it shows up on npmjs.org for people to link to
08:17 < ericelliott> maxogden: That did the trick. Thanks!
08:17 <@maxogden> werd
08:18 < ericelliott> tprice: I have never tried to use socket.io on nodejitsu. );
08:18 < ericelliott> tprice: I'm sure there must be a way.
08:23 < ericelliott> maxogden: Can you help me solve these remaining issues?
08:23 < ericelliott> http://travis-ci.org/#!/dilvie/applitude
08:24 < ericelliott> It's still throwing an error about that github dependency -- but it's a different error.
08:29 <@maxogden> npmjs.org/odot ?
08:30 < ericelliott> no
08:30 < ericelliott> This: https://github.com/dilvie/odotjs
08:31 < ericelliott> oh, maybe it's the scripts?
08:32 < ericelliott> Would it do this if my taps tests failed?
08:32 < ericelliott> they were actually qunit tests, which have a couple key differences
08:32 < ericelliott> so if it's trying to run taps on those, it is sure to fail.
08:35 < ericelliott> No dice. That didn't seem to do the trick.
09:29 < EricBlade> hmm. dumb question possibly.  I note that in modern versions of node, i can create a buffer simply by doing var x = Buffer("blah") .. but apparently older versions required var x = new Buffer("blah") ..  functionally, I can do that even in modern versions, without incurring some kind of major penalty, or the wrath of the elder gods, right?
09:34 <@maxogden> i think you are supposed to use new, the shorthand probably just does it for you
09:36 < EricBlade> hmm. interesting.
09:37 < EricBlade> well, i've got a giant chunk of code that i'm porting from Python to run in Node.  and I've got it working fine in Windows on 0.8 and 0.6, and on webOS on 0.4, but i'm getting a curious error on a Buffer creation in 0.2.  
09:38 < dr0id> Node version 0.2 ?
09:38 < EricBlade> line of code is "this.input = Buffer(data, "binary");", and it's giving me a "TypeError: Bad argument".
09:38 < EricBlade> dr0id: yeah. silly me likes to write code that runs on phones that have node 0.2 embedded
09:38 < dr0id> oh? I didn't know, tell me more. what phones ?
09:39 < EricBlade> webOS phones using webOS 2.0 or better
09:45 < EricBlade> ok, it appears to be assuming that my incoming binary data is not actually anything that the Buffer constructor can deal with.
09:46 < EricBlade> but.. i bet that i actually have a buffer to begin with, and that i don't need to construct one.
09:46 < EricBlade> bingo! unnecessary type conversion. booyah
11:03 < bankqian> Anyone knows the best instruction on Express.js for a newbie node user?
11:03 < RobZ1> bankqian: the peepcode screencasts helped me.  Full Stack Node.js  
11:05 < bankqian> RobZ1: thanks man. I'll see
12:03 < nonuby> is there any http wrapper that exposes drain events etc.. so if I have a http tailing a log file over long period of times it would be sane memory wise, continuuously dumping to express.js via res.send would cause a memory build up if producer is faster than consumer
12:21 < Technodrome> good day
13:43 < gaurav__> i am connecting my phone to control thiongs in my browse.. in case of iphone, the connection is time out. workling fine for android. any solutions?
13:48 < klawd_prime> a callback should always await a parameter error as first argument, is that correct?
13:55 < RLa> most things assume you have such callback
14:00 < deoxxa> so every now and then i have to go chill with all these corporate dudes, right
14:01 < deoxxa> i'm thinking i'll start using really weird metaphors with them
14:01 < deoxxa> try to get them to pick up a couple of them
14:01 < deoxxa> "haha, it's like steve jobs always said: when you're pushing photons you don't pull cat5!"
14:01 < deoxxa> stuff that just doesn't make sense
14:05 < SomeoneWeird> wat deoxxa 
14:06 < deoxxa> SomeoneWeird: i just want to manipulate the corporate guys
14:06 < deoxxa> make them say really stupid things
14:06 < deoxxa> i've already started with fake buzzwords
14:06 < deoxxa> "cloud registration" was one of my favourites
14:07 < deoxxa> along with "intercircular deployment"
14:07 < SomeoneWeird> hahaha
14:07 < deoxxa> just kind of drop them into conversation about architecture
14:07 < deoxxa> you can see them wanting to ask
14:07 < deoxxa> but they don't
14:07 < deoxxa> in case it makes them look stupid
14:10 < AvianFlu> deoxxa: if I get bored later, I'm totally gonna go invent "intercircular deployment"
14:10 < deoxxa> do it
14:34 < dominictarr> Raynos, mux-demux@3.2.1 now will produce no browserify warnings
15:20 < substack> dominictarr: hooray!
15:21 < dominictarr> substack, just deleted parts of event-stream that I don't think anyone uses.
15:22 < substack> the un-grab-bagging is encouraging
15:24 < riot_> Hi all
15:26 < hunmonk_> is there any way to get the route that Express picked from inside the request? for example, if i visit foo/1234, and Express uses route foo/:id, i want to know it picked foo/:id. i'd be using this in middleware across all routes.
15:34 < yeassay> hi
15:34 < AntelopeSalad> hunmonk_: take a look at req.params
15:35 < yeassay> i was wondering, I have some socket.io codes, I would like to have some js files that i can use in the client and the server. whats the best for that?
15:37 < jackyyll> what's the best method of installing nodejs on OS X? brew? ports? the nodejs installer? source?
15:38 < mmalecki> node.js installer or source
15:39 < jackyyll> how ocme mmalecki 
15:39 < hunmonk_> AntelopeSalad: looks like req.params doesn't include the token. i'm looking for the original route descriptor used in app.get() etc.
15:39 < jackyyll> come*
15:39 < spionL> yeassay, the easiest way is probably to do something like, (function() { var exports = {}; ... module code, attach to exports ... if (window) window.mymodule = exports; else module.exports = exports; }());
15:40 < mmalecki> jackyyll: brew tends to cause weird problems with npm
15:40 < mmalecki> and ports is shitty as it is
15:40 < jackyyll> i see. guess ill use the installer
15:40 < spionL> in the client, window.mymodule will contain the module stuff, while in node.js, require('mymodule') will.
15:40 < yeassay> spionL: i'm looking at this
15:52 < mncharity_> QUES: Does anything exist for module patch publishing?  Small modules are great, but sometimes... (well, coffeescript is several kloc;).
15:53 < mncharity_> And forks are high-surface area, age more rapidly than a small patches, and are more of pain to combine.
15:53 < mncharity_> Strawman:  node_modules/foo-with-sparkles can copy ../foo to ../../patched_modules/foo, add PATCH-with-sparkles, and patch it.
15:55 < mmalecki> mncharity_: sure, it's called 'pull request'
15:55 < mmalecki> (github yo)
16:00 < mncharity_> mmalecki: (extreme case) there are 400+ forks of coffeescript on gh, most are out of sync, only a few are in npm, and of those, combining them would... create 400x+1.  Fine for me - sucks for community.
16:00 < mmalecki> mncharity_: uhm, why don't you pull request your changes?
16:01 < RLa> mncharity_, aren't most forks for creating pull requests for 1-2 issues?
16:01 < RLa> i have seen very few forks that are actually created for separate development
16:03 < mncharity_> mmalecki,RLa: use case:  coffee used to set Function#name, Foo.name = "foo".  Which protected it from clueless minifiers.  So people used it to create frameworks.  But name is r/o in "use strict".
16:04 < RLa> property named 'name'?
16:04 < RLa> huh, is it?
16:04 < mmalecki> okay, why not pull request the change you made to fix that?
16:04 < mmalecki> or stop using "use strict"?
16:04 < mncharity_> So coffee dropped it.  Makes sense - not coffee's job to work around broken minifiers.  But no doubt some of the 400 are "dont drop it".  And lots of companies have internal forks.  And
16:05 < RLa> ah, you mean property 'name' on a Function
16:05 < mmalecki> I don't really know where are you going with that
16:06 < mncharity_> the key is, there's no easy community way to say "I still need .name (untill I change minifiers)" _and I also want_ someother thing.  Other than private, or yet-another-public, cherry-picked fork.  No?
16:06 < mmalecki> why'd you rely on that feature tho?
16:06 < RLa> there should be consensus what a module does and what not
16:06 < mmalecki> it doesn't seem like a safe or stable thing
16:07 < RLa> "coffee used to set Function#name" <- does it still do it?
16:07 < RLa> i think it does not
16:10 < mncharity_> small modules  permit consensus.   big things don't.   some big things are unwilling or unable to smash themselves down into small things.  here, say "coffee-script-lexer", "coffee-script-token-rewriter", "coffee-script-parser", etc.  It's not even clear its that would be the right thing.
16:10 < SomeoneWeird> with ejs, can I include another template inside a template?
16:10 < mncharity_> so how to deal.  status quo of forks on gh is way too high viscosity.
16:11 < dominictarr> mncharity_, but if a module parses coffee script, that should be it's name.
16:12 < riot_> i'm working with express and mysql, why when i executea query i can display its result with console.log but not with the send() method?
16:14 < mncharity_> dominictarr: hmm... intereesting... so maybe the answer for the coffee example is "there's one missing coffee fork on gh: moduleized-coffee-script", that smashes it down into separately published modules?
16:15 < dominictarr> mncharity_, the way id do it:
16:15 < dominictarr> parser, lexer,
16:15 < dominictarr> coffee-syntax
16:15 < dominictarr> (which was just a "data" module, no code)
16:16 < dominictarr> and then coffee-script would require parser, lexer, and inject coffee-syntax into them
16:16 < mncharity_> nod
16:16 < mscdex> SomeoneWeird: https://github.com/visionmedia/ejs#includes
16:16 < dominictarr> mncharity_, I agree that extended names in module is a bad pattern. 
16:17 < dominictarr> it shows the modules are not orthagonal.
16:17 < SomeoneWeird> ahhh no shit mscdex i had the filenames in 's
16:17 < SomeoneWeird> thanks
16:17 < mscdex> :-)
16:18 < SomeoneWeird> hm
16:18 < SomeoneWeird> maybe not
16:18 < SomeoneWeird> SyntaxError: Unexpected identifier
16:18 < SomeoneWeird> <% include files/views/head.ejs %>
16:18 < RLa> riot_, res.send(results); doesn't work?
16:20 < riot_> RLa, nope it gives and error wich says that headers can't be set after they're already sent
16:20 < RLa> riot_, paste your whole handler code
16:21 < SomeoneWeird> mscdex, any ideas?
16:22 < mscdex> SomeoneWeird: -.ejs
16:22 < SomeoneWeird> yeah still doesn't
16:22 < SomeoneWeird> <% include maphead %>
16:22 < SomeoneWeird> same error
16:22 < mscdex> and maphead.ejs is in the same directory?
16:22 < SomeoneWeird> as the template thats trying to include it? yes
16:23 < mscdex> create a new issue then i guess
16:23 < riot_> RLa, this is the only query an output i made
16:23 < riot_> http://pastebin.com/LAA9vb2V
16:23 < mscdex> probably a bug
16:23 < SomeoneWeird> ugh
16:23 < SomeoneWeird> aight thanks
16:25 < mncharity_> mmalecki: re safe of stable, agreed, though... "foo": "1.2.3", "foo-with-sparkles":"0.1.2" doesn't seem too bad.  and a choice between "not stable" and "so hard noone ever does that"... well, it depends on
16:25 < mncharity_> whether you can address the use cases another way.  like getting the entire community to buy into bite-sized modules.
16:26 < RLa> riot_, res.send('Incoming request accepted');
16:26 < RLa> riot_, this sets headers for sending plain text
16:26 < mncharity_> but the "gh" and "small modules" takes away most of the pain, so no, there's likely no patch publishing tools, answers my question.  :)
16:26 < RLa> res.send(info); this wants headers for json
16:27 < riot_> RLa, oh how stupid
16:27 < RLa> riot_, you can use console.log() for debugging
16:27 < mncharity_> mmalecki:RLa:dominictarr: tnx :)
16:27 < riot_> RLa, thanks so much, i never thinked of it
16:28 < RLa> use "" for queries so you can use '' for literals in it
16:28 < RLa> and also use binding parameters
16:28 < riot_> RLa, thanks for the advices
16:29 < riot_> i've been studying node for only three days, so..you know i'm not so good :3
16:30 < dominictarr> every "advanced" coder comes around to small modules eventually.
16:31 < dominictarr> but frameworks/bundles are easier for new users
16:37 < riot_> dominictarr, well, i used to code thing consequentially and the most  difficult thing was to understand the mentality of an async language
16:38 < riot_> though Ryan Dahl video about node presentation helped me a lot
16:49 < mncharity_> dominictarr: nod
17:14 < milani> how to test npm packages locally before publishing?
17:14 < milani> hmmm npm install /path/to/package ?
17:26 < mscdex> milani: yep
17:26 < mscdex> that's one way
17:55 < pringlescan> Great tips in the topic, thanks whoever set it.
17:58 < sfwe> test
17:58 < jcrew> es
17:59 < sfwe> help
17:59 < sfwe> ?help
17:59 < sfwe> ?
18:14 < alan__> hi I'm having some trouble with npm help on Debian. I have used the command 'npm config set viewer browser' but when I try and open help in the browser it doesn't open the browser. Anybody had a similar experience?
18:57 < timeturn> anyone have node/mongoose experience or has used it before? I wanted to toss around the object that is passed into new Schema but that object has properties declared as String, ObjectId, Number etc. that are undefined unless within the scope of the constructor
18:57 < timeturn> my question is can I export and require that object even if that stuff is not defined?
18:58 < RLa> can you paste some code?
18:58 < timeturn> I'm trying to figure out the best way to separate my schema, model, and statics/methods files
18:58 < RLa> "toss around the object" is quite vague
18:58 < timeturn> like export it
18:59 < RLa> hm, i export models
18:59 < timeturn> right now I have the schema defined inside of a function which takes the mongoose instance and returns the mongoose model
18:59 < timeturn> yeah
18:59 < rickm> anyone has problem with c9.io today editing workspaces ?  When I click on Edit workspaces, it spins for a little while and then nothing happens 
18:59 < timeturn> and I have one mongoInstance.js file
19:00 < timeturn> but I was trying to figure out what the bet way to separate the statics and methods into separate files would be
19:00 < RLa> hm
19:00 < timeturn> since the schema files are only exporting the models
19:01 < RLa> haven't got that far to implement real model with mongoose
19:02 < timeturn> then I thought about separating out the actual object that is passed into the schema
19:02 < RLa> usually my models are quite anemic
19:02 < timeturn> yeah mine too
19:02 < timeturn> but I don't want to put the statics and methods in the same file though
19:02 < RLa> hm, why not?
19:02 < timeturn> that makes it kind of crowded
19:03 < RLa> maybe you can find someone who has build larger mongoose apps
19:03 < timeturn> well I guess I could
19:04 < airhorns> is there any way to ask npm programatically if a node_modules folder fulfills the requirements outlined in package.json
19:04 < timeturn> might save me some export/require craziness
19:04 < timeturn> for now
19:04 < airhorns> i find that as my package.json changes and i update version requirements other people don't npm install and don't realize their deps are out of date
19:04 < RLa> one option is to define something like exports.model = function(mongoose) { return mongoose.model('MyModel', MyModelSchema); }
19:12 < gtodd> hello ... any nodistas here familiar with how the R console works?  It has a neat way of browsing through the documentation in the console and/or by controlling a web browser to load web based version of local copy of the docs ... elisp/perl/python modes in Emacs have similar feature.  Anything like that for node?  can I put something in .nodrec like  require("help") so the REPL will help me :)
19:17 < timeturn> lol, is it weird to have a forEach that calls: require(model)(mongoose) inside my mongoInstance.js file?
19:17 < timeturn> and I have an array with all the models
19:19 < gtodd> just that it would be nice if the normally simple interactive REPL could be made more luxurious for development and learning via some emacs mode or by turning on something like a help(somefunction) library ...
19:20 < gtodd> I'm not sure if I'm missing twiddling a know somewhere or it is at one time highly discussed topic that has been settled/decided
19:21  * gtodd is a node newbie
19:21 < gtodd> oops 
19:23 < gtodd> I'm not sure if I'm missing twiddling a knob somewhere or if this is an at one time highly discussed topic that has been settled/decided.  Does the REPL console have a help system?
19:27 <@maxogden> gtodd: in chrome it does, see also jsforcats.com
19:27 <@maxogden> gtodd: in chrome there is autocomplete and a couple other nice things, dunno what you mean exactly by help system
19:32 < gtodd> ah ok I'm not running it in chrome never thought of that
19:33 < gtodd> just the node CLI REPL in shell console
19:37 < chrisdotcode> is there anything vehemently incorrect with giving properties an array?  like: var v =[1,2,3];v.foo = "bar";?
19:37 < chrisdotcode> *giving properties to an array
19:39 < deltab> chrisdotcode: that depends on why you're doing it
19:40 < chrisdotcode> deltab: as a way to indicate something "special' in the array.  like the array represents a set of cards and property "favoriteCard" is a  reference to the person's favorite card in the array?
19:40 <@maxogden> chrisdotcode: the only thing wrong is that its unexpected so if, for instance, your array gets stringified and parsed as json later or goes through some other array specific function it is unlikely that the property will go along with it
19:41 < chrisdotcode> maxogden: what about like the example above?
19:41 <@maxogden> chrisdotcode: i would do {"foo": "bar", data: [1,2,3]} because then its obvious that it is both an array and metadata
19:42 < emilsedgh> i rather do a { type : 'card', elements: []} and store my stuff in the elements. please remember that in your way, the 'foo' index will also appear in your for loop.
19:43 < chrisdotcode> okay, so the consensus is an object, with the data being a value and including the special key as well.
19:43 < chrisdotcode> thanks guys :-D
19:50 < sx> how many node.js apps would it be reasonable to run on one ubuntu machine? routing done via http-proxy. is there some bottleneck if none of the sites are receiving much traffic?
19:51 < ctult> Is there something like Jenkins for Node?
19:52 <@maxogden> sx: one process per core is optimal
19:52 <@maxogden> sx: node is very good at idling but since it is single threaded it doesnt help to spawn multiple processes on the same core
19:52 < sx> maxogden: is this a just a guideline, or should I actually be specifying that each app uses a specific core?
19:53 <@maxogden> sx: e.g. one node process that accepts connections and serves responses, one process can host many 'apps'
19:54 < sx> maxogden: i have one app that routes using http-proxy. but each of my apps has its own node instance to handle itself
19:54 < sx> so essentially i have #apps + 1 node instancse
19:54 < sx> I would prefer not to use one node/express instance for multiple apps, because they all have different settings, static routing, etc.
19:54 <@maxogden> you might think about rewriting the apps to just be module that your 1 node instance can require
19:55 <@maxogden> sx: ahh i see
19:55 < sx> i see your point, but I kinda like the idea of keeping them completely decoupled and independent too
19:55 < sx> but obviously this comes at a cost.
19:56 <@maxogden> it depends on if you're trying to run a hosting company or just run a bunch of apps
20:24 < etcetera> are there any good production ready express samples out there?
20:25 < etcetera> not just a mess of 500 lines in app.js. a proper MVC app.
20:31 < robinson_k> etcetera: you might want to have a closer look on https://github.com/visionmedia/express/tree/master/examples/mvc and https://github.com/visionmedia/express/tree/master/examples/route-separation 
20:32 < etcetera> robinson_k: would you put your entire model in a db.js?
20:32 < etcetera> ....in production?
20:37 < robinson_k> not at larger apps but db.js is just a mock just for explaining the code in the controllers folder.
20:41 < robinson_k> etcetera: ok. have to admit: it is not a full solution in production that is OSS. but some impressions how it could work if you think about it further.
20:50 < etcetera> robinson_k: that's fair. but I'm looking for something I can deploy right now and adapt.
20:50 < etcetera> as a way of learning the framework.
21:00 < whiskers75> when is Node Summercamp?
21:13 < juanl> so, I'm trying to implement a rest interface, and I want to return json for a resource, but I don't want to send the whole js object for that resource over, just a subset; is there a common name for this subset?
21:20 < juanl> hmm, looks like I want to define a toJSON method on my object
21:22 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
21:23 < gkatsev> juanl: yep
21:34 < sx> if I call /opt/compiler.js  from  a file called /opt/app2/build.sh,  how can compiler.js know the "calling path" (/opt/app2/) ?
21:34 < sx> and therefore know to compile the files relative to the calling path.
21:34 < whiskers75> process.env
21:35 < sx> awesome, will check it out. thanks
21:35 < whiskers75> contains environment vars
21:50 < sx> whiskers75: works great.  process.env.PWD is the value I need.
21:50 < whiskers75> good to hear it.
21:55 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:59 < luckysmack_> how do you debug node.js apps? i have a small app connecting to a mongo instance, and once I run it all im getting is: There was an error! "Closing Link: 184-106-243-9.static.cloud-ips.com (Connection timed out)"
22:59 < luckysmack_> i am able to connect to my db from the cli. so im not sure whats timing out
23:00 < dogmatic69> console.log(foobar)?
23:02 < luckysmack_> yea i know i can do console.log stuff. but i was curious as to what other tools are good for more advanced debugging. such as live debugging.
23:03 < luckysmack_> dogmatic69, i see you everywhere. its been a long time though. how is infinitas doing?
23:03 < dogmatic69> hey, did not even realise it was you. Infinitas is pretty awesome 
23:04 < dogmatic69> there is a nearly upto date demo up, demo.infinitas-cms.org/admin (demo/demo)
23:04 < dogmatic69> got almost 1k unit tests going now too
23:04 < luckysmack_> ah sweet. i havent touched cake2 in some time. been doing a lot of .net stuff at work and javascript. so im trying to get into node for personal projects and maybe for work.
23:05 < dogmatic69> you freelance?
23:05 < luckysmack_> oh nice. ill check it out
23:05 < luckysmack_> i work for a company in an office local to me. but i have free time now so im trying to get started in doing some more freelance stuff.
23:06 < luckysmack_> before i was either working 2 jobs or life was too busy to do a lot
23:06 < dogmatic69> nice, pm if you want to talk about some cake 2.x work (plus a bit of everything else)
23:08 < luckysmack_> yea, i havent touched cake since i was hanging out in #infinitas over a year ago. i never had time to do any full fledged projects in it. and my last job used Yii framework instead. So i dont think i would know enough. right now my main thing is javascript and a little c#. 
23:09 < luckysmack_> i have a potential client I might be making a small site for his business. what kind of other work do you need done?
23:09 < dogmatic69> frontend js? Got some of that too. and C#
23:10 < luckysmack_> im still in basics territory in c# but still picking it up at work. there we mostly use that and straight php with things like drupal/wordpress. me personally im getting into node for server side js but im mostly familiar with front end at the moment.
23:11 < luckysmack_> cool. i might have to hit you up. once i level out a bit on node, hopefully in a few weeks or so ill look you up. ill have more time then. 
23:12 < dogmatic69> asyn is strange coming from php. You can do for($i = 0; $i < 100000 ... ){save to db...} and it will process real quick, but the data is not in the db yet :D
23:12 < spionL> for interactive debugging, last time i checked, node-inspector
23:15 < luckysmack_> Spion, ok cool. thanks
23:15 < luckysmack_> i havent done anything async in php.
23:19 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
23:50 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
--- Log closed Sun Aug 19 00:00:45 2012
