--- Log opened Thu Jun 13 00:00:18 2013
00:03 < Skaag> konobi: pong. sorry.
00:06 < ihelpsu> well eventually only one of these are going to win, unless they become differentiated http://www.quora.com/What-are-the-disadvantages-of-using-Node-js
00:08 <@mbalho> ihelpsu: what technology problem are you trying to solve?
00:08 < ihelpsu> my question was --
00:08 < ihelpsu> some ppl say that js, node.js and backbone.js are better that rails because rails is regulated to the api layer, i wanted to get some expert opinions
00:09 < ihelpsu> like this person -- http://www.quora.com/Dev-Bootcamp/Im-interested-in-attending-a-Programming-Bootcamp-How-do-I-decide-between-Dev-Bootcamp-and-Hack-Reactor/answer/Shawn-Drost
00:09 < ihelpsu> the topic is about which has a brighter future
00:09 < ihelpsu> but now im also looking a Meteor
00:11 <@mbalho> ihelpsu: i cant help sorry, you should go with whatever one has the best marketing, thats a good sign of community health
00:16 < ihelpsu> "best marketing, thats a good sign of community health" -- thats an interesting indicator, though i need to think about that......
00:23 < jesusabdullah> yo anybody here use engine.io with vaguel regularity?
00:23 < jesusabdullah> wondering if I have to use .attach *after* I call .listen
00:28 < gishmel> has anyone had any experience with making html5 games utilizing node.js?
00:28 < ihelpsu> dont have html5 games
00:28 < ihelpsu> html5 sucks
00:29 < ihelpsu> for games
00:29 < ihelpsu> ok i think for my 2013 review, im going to bet that ruby will win out in backend in the future on the basis of the language -- "If you are in it for the long haul and want to progress with the web, go with a more progressive language." -- http://www.quora.com/Should-I-learn-PHP-or-Ruby -- im still going to finish reading all this other related crap tho
00:29 < jesusabdullah> oh snap, would help if I used the same fucking versions >_<
00:29 < Lorentz> or maybe you should just try to do some code with both and come to your own conclusions
00:29 < gishmel> okay thats an interesting view point to disclose in the node.js channel
00:30 < Lorentz> gishmel: I have a little of it
00:30 < ihelpsu> i "disclosed" it on 4 related chans, not special 
00:30 < Lorentz> main draw was socket.io at the time
00:30 < gishmel> interesting 
00:30 < gishmel> have you seen data.io?
00:31 < gishmel> that I believe is based on socket.io
00:31 < Lorentz> I have not used it in person, no
00:32 < gishmel> well I am trying to create a FF1 style game that allows for multiplayer fights
00:32 < ChrisPartridge> ihelpsu: use whatever fits the job, don't tie yourself down to a single language
00:33 < Lorentz> FF1 as in final fantasy, or fatal fury, or ... ?
00:33 < gishmel> final fantasy
00:33 < ihelpsu> ChrisPartridge: have no job, just learning, mapping out long-term, just doing a yearly review on this topic
00:34 < Lorentz> it'll probably be more than enough, probably overkill, but go ahead
00:34 < gishmel> how overkill?
00:35 < ihelpsu> Lorentz: "or maybe you should just try to do some code with both and come to your own conclusions" -- you have no idea how to do an efficient and effective review
00:35 < ihelpsu> shoudlnt say review, shoudl say best guess
00:36 < Lorentz> gishmel: not sure, as I have no experience in data.io, but socket.io is pretty damn quick
00:37 < Lorentz> have no worry that it's going to hold you back, go ahead and use it for your game
00:37 < gishmel> i mean how is it overkill is their an easier source to use?
00:37 < Lorentz> I was thinking in terms of performance of the library, rather than ease of use of it
00:38 < Lorentz> if it's based on socket.io
00:38 < Lorentz> and it shouldn't be hard to use, not sure of any easier libraries either
00:41 < Lorentz> ihelpsu: you might as well flip a coin if you're guessing
00:42 < Lorentz> even an educated guess has to stem from some experience
00:49 < ihelpsu> "even an educated guess has to stem from some experience" -- that's the basis
00:49 < ihelpsu> i have the experience of 100x top quality engineers by reading
00:50 < Lorentz> yes, you go believe that
00:50 < ihelpsu> aggregated experience is amazing
00:50 < momomomomo> :/ ihelpsu you were just asking about rails vs. node.js, stop trolling
00:51 < ihelpsu> that was the topic
00:51 < ihelpsu> and we got the conclusion now
00:51 < ihelpsu> since nobody answerd
00:51 < ihelpsu> well a few answered but off topic in all 4 chans
00:51 < ihelpsu> the topic was js backend vs ruby backend
00:53 < ihelpsu> and lastly the topic started cos ONE top quality dev bootcamp voted for js, the are doing rails as part of their currialiam, so that's another strong basis for ruby winning out. top dev camps wont include rails if js backends were better
00:53 < ihelpsu> well this done
00:53 <@MI6> joyent/node: isaacs v0.10 * e850027 : Revert "http: remove bodyHead from 'upgrade' events" - http://git.io/OBYQsw
00:53 <@mbalho> thanks for stopping by!
00:56 < ChrisPartridge> haha, experience of 100x engineers....
01:01 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:08 < Lorentz> should've told him to use java
01:08 < Lorentz> it's the second most popular language, surely there's merit to it being an awesome thing to use for everything
01:12 < thealphanerd> hey all just finished  a paper on compiling dsp code with emscripten to js if any of you want to give it a read http://cl.ly/3H183t2r370P
01:27 < Zak> you guys should question my knowledge
01:27 < Zak> i'm back by Google
01:27 < Zak> *backed
01:27 < ChrisPartridge> thealphanerd: good read, although opening that demo with moderate volume was a mistake :-)
01:28 < thealphanerd> ChrisPartridge: Thanks for the kind words.  Perhaps I should modify the volume on the demo… not a bad idea.
01:33 < Zak> thealphanerd: nice work
01:33 < thealphanerd> Thanks Zak!
01:34 < thealphanerd> still a lot of work to be done… but I feel like this is a good milestone
01:34 < harbhub> hey fellas
01:35  * ChrisPartridge waves
01:35 < harbhub> question about serving a file from a path that is .. back from the __dirname of the file serving file
01:35 < harbhub> i am making a node module for my server
01:35 < harbhub> ROOT  /node_modules/fileServer
01:35 < harbhub> i want to serve files from a folder:   ROOT    /static/thefiles.ext
01:36 < harbhub> i'm trying to use:   var fs = require('fs');    fs.createReadStream(__dirname + .. + ./static/file.js)
01:36 < harbhub> how do i properly set the path to the file
01:37 < harbhub> fs.createReadStream(pathToFile);   how do i properly set the pathToFile to step back into the static directory?
01:37 < paulkon> me to 4 new interns today: there's a lot of opportunity for aggressive expansion.....
01:38 < ChrisPartridge> harbhub: fs.createReadStream(__dirname + '../static/file.js') ?
01:38 < ChrisPartridge> or use path module, and path.resolve(__dirname, '../static/file/js')
01:39 < harbhub> i will try that
01:39 < harbhub> i just didn't know you could use the ../ inside the path like that
01:39 < harbhub> i will test it
01:42 < harbhub> fs.createReadStream(__dirname+'.../.../../static/test.html').pipe(res);
01:42 < harbhub> it works
01:42 < harbhub> thanks ChrisPartridge
01:44 < harbhub> make those all .. instead of triple dots lol that was a typo
01:44 <@tjfontaine> path.join > +
01:44 < jesusabdullah> tru dat
01:44 < jesusabdullah> secretly I just call path.resolve 30 times to make sure
01:45 < jesusabdullah> or not-so-secretly
01:45 < jesusabdullah> EITHER WAY
01:45 < ChrisPartridge> 30 times? wouldn't once suffice? :p
01:45 < jesusabdullah> Definitely not
01:45 < Havvy> Never.
01:45 <@tjfontaine> I restarted 3 times, like you told me
01:45 < jesusabdullah> What if someone somehow gets past the first one?
01:45 < Havvy> If it's worth doing. It's worth overdoing.
01:45 < jesusabdullah> tjfontaine: three man you always tell me three
01:45 <@tjfontaine> indeed
01:46 < jesusabdullah> DEREK ARE YOU ON THE CALL???
01:46  * tjfontaine turns it on
02:15 < sinclair|net> http://channel9.msdn.com/Blogs/Subscribe/Glenn-Block-Explains-SocketIO-Scale-Out-on-Service-Bus
02:16 < sinclair|net> is there a Glenn Block in this channel?
02:40 < Stumbler> I have a watcher in place on a directory.  I get notified when files move into or out of the watched directory.  But I can't figure out how to know when it's safe to operate on the file..  When a file being moved into the folder is 'all' there.
02:40 < Stumbler> I check file size, but it looks like the file-size is set before all of the file has been officially moved.
02:41 < sdwrage> Hey all. Having a bit of trouble with getting a form submit working for a nearly static website. I am using heroku with a Procfile set to web: coffee web.coffee
02:42 < sdwrage> hrm
02:43 < sdwrage> hrm
02:45 < sdwrage> hey all
02:45 < sdwrage> Having a bit of trouble with getting a form submit working for a nearly static website. I am using heroku with a Procfile set to web: coffee web.coffee
02:46 < sdwrage> but need to post a form to a route as I am still using node.js for heroku and yeoman workflow for frontend work. Here is my web.coffee script. I am getting cannot post /submit
02:46 < sdwrage> https://gist.github.com/anonymous/37ff56114dc448d09fac
02:48 < ssafejava> sdwrage: You need to add app.use app.router on line 7... and your function syntax is wrong, it should be `app.post 'submit, (req,res) ->`
02:54 <@isaacbw> hello beautiful
02:54  * ChrisPartridge blushes
02:55 < sdwrage> ssafejava, like this? https://gist.github.com/anonymous/23adf1476a5bf4f7f65c
02:55 < ssafejava> sdwrage: Should work, yeah
02:56 < sdwrage> nope :\ no go. still says: Cannot POST /submit
02:56 < sdwrage> my form action is "submit" in /dist/index.html
02:58 < Guest21363> hello 
02:59 < sdwrage> ssafejava, ^^ maybe I am missing something extremely fundamental? :P 
02:59 < ssafejava> sdwrage: Try adding a leading '/' to 'submit' in your file... should be '/submit'
03:01 < sdwrage> in my web.coffee file?
03:01 < sdwrage> or index.html?
03:03 < ssafejava> sdwrage: In your web.coffee
03:03 < ssafejava> just tried it locally, that - along with the function syntax - was the issue
03:04 < sdwrage> hem… still didn't work. Can you share your file that you tested?
03:07 < ssafejava> just change 'submit' to '/submit'. I already deleted it unfortunately
03:08 < sdwrage> yeah, tried that. didn't work. I got the same error. 
03:08 < ssafejava> sdwrage: Hmm. Only other modificatio9n I had made was to not use gzippo since I didn't want to install the package to test it
03:08 < sdwrage> ssafejava, https://gist.github.com/anonymous/e92e84d7a503ebc626b6
03:08 < sdwrage> what would I use instead?
03:08 < sdwrage> express.static?
03:08 < ssafejava> sure
03:09 < ssafejava> try it without gzippo first, make sure that's your issue
03:11 < sdwrage> oh wait...
03:11 < sdwrage> -_-
03:11 < purr> sdwrage: ಠ_ಠ is an IRC client/IRC client framework.
03:11 < sdwrage> I know whats happening here… I'm dumb… 
03:12 < sdwrage> ssafejava, its because I'm currently using grunt server instead of running this through node :P derp
03:12 < ssafejava> :)
03:21 < geddski> anyone know how to publish an unstable release, keeping the previous release the default people will get when doing an npm install?
03:26 < ssafejava> geddski: https://coderwall.com/p/l_7acq
03:27 < sdwrage> ssafejava, I got closer. Installed foreman and coffeescript ;)
03:28 < ssafejava> sdwrage: Good stuff. Good luck with it
03:29 < Stumbler> I have a watcher in place on a directory.  I get notified when files move into or out of the watched directory.  But I can't figure out how to know when it's safe to operate on the file..  When a file being moved into the folder is 'all' there.
03:33 < ssafejava> Stumbler: Just offhand, you could set an interval to see if the size has changed in the last x ms... or perhaps check if the file handle is open
03:34 < sinclair|net> any async experts here?
03:34 < Stumbler> Well, I'm currently doing that, but it seems to me that the size gets set before the transfer is complete over a network?  (I'm watching a network share)
03:34 < ssafejava> sinclair|net: shoot, I'll see if I can help you
03:34 < sinclair|net> ssafejava: nice, i have an array off objects, and im using async.concatSeries
03:34 < ssafejava> Stumbler: Sorry, out of my depth, maybe you can find a unix guy in another channel that might have a tool for that
03:35 < Stumbler> np, thanks for the effort either way. :)
03:35 < sinclair|net> ssafejava: concatSeries only seems to be iterating the first item
03:35 < ssafejava> sinclair|net: Post a gist?
03:35 < sinclair|net> ssafejava: yup, give me a second
03:38 < sinclair|net> ssafejava: http://pastebin.com/2iUvi3uQ
03:40 < sinclair|net> ssafejava: its ok, i got it
03:40 < ssafejava> sinclair|net: Yeah- change your callback to `callback(null, item);`
03:41 < sinclair|net> ssafejava: yup, :)
03:41 < sinclair|net> ssafejava: was working from a bad TypeScript declaration
03:41 < ssafejava> ah.
03:49 < werle> @shama dude scriptify is badass man
03:50 < werle> @shama @substack
03:50 < sdwrage> ssafejava, hem… how does one get the post data from request? I am trying req.body and req param "comment"
03:50 < ssafejava> sdwrage: Add the line `app.use express.bodyParser`
03:50 < sdwrage> tried req.body.comment as well but says body is undefied
03:50 < ssafejava> and req.body will be populated
03:50 < sdwrage> yep, got that
03:50 < ssafejava> oh whoops. you have to call bodyParser
03:50 < ssafejava> app.use express.bodyParser()
03:51 < sdwrage> tried both. I seemed to be hitting a lot of walls today :P
03:51 < ssafejava> make sure it's before the `app.use app.router` line
03:51 < ssafejava> you're creating a chain of middleware; the router should almost always be last
03:53 < shama> werle: glad you think so. Im still not too sure about it. Its a lot of code just to avoid an extra file but I was tired of creating that file for simple things
03:53 < sdwrage> ah okay
03:53 < werle> @shama its a cool thing though
03:55 < sdwrage> ssafejava, okay, got a bit further but when I console.log req.body, I get back {} and I know I have a form posting values. is it populated somewhere else?
03:55 < ssafejava> shama: It could be interesting as a res.write override, much like connect.compress() - would make the syntax much easier imo. 
03:55 < rhalff> does highWaterMark do something when a readable stream is in objectMode ?
03:55 < sdwrage> https://gist.github.com/anonymous/5299d2c57fbe13aa17fa
03:55 < ssafejava> sdwrage: Can you post the index.html too?
03:56 < sdwrage> yeah, hold on
03:56 < sdwrage> ssafejava, https://gist.github.com/anonymous/21b495b4eafb1d7f5f43
03:58 < sdwrage> ssafejava, I even did req.body.comment where req.param "comment" is as I was testing both
03:59 < ssafejava> sdwrage: Sure, I see it. One sec. Looks fine... must me missing something
03:59 < ssafejava> must be*
04:01 < ssafejava> sdwrage: Hmm I'm seeing it just fine with a curl. I changed line 13 to `console.dir req.body` and issued the curl `curl --data "foo=bar" http://localhost:5000/submit`
04:02 < sdwrage> hrm...
04:03 < sdwrage> ssafejava, odd, when I curl it, I get the proper data. 
04:04 < sdwrage> when I just hit via browser, it is empty
04:04 < sdwrage> my form is set to method "post"
04:04 < ssafejava> sdwrage: Yeah, you wouldn't see anything come through otherwise. hmm
04:05 < sdwrage> {} when posted from form
04:05 < sdwrage> { foo: 'bar' } when curled
04:13 < sdwrage> got it
04:13 < sdwrage> ssafejava, added enctype="application/x-www-form-urlencoded" to form
04:14 < sdwrage> and set set header as application/json
04:14 < jesusabdullah> Okay guys, I know someone asks this EVERY FIVE MINUTES, but
04:14 < sdwrage> ssafejava, ^^ :)
04:14 < jesusabdullah> How do you do auth with engine.io/websockets?
04:15 < jesusabdullah> that is, I threw a basic auth middleware onto my stack but I'm 99% sure that doesn't really stop websockets from working
04:15 < ssafejava> sdwrage: That's interesting. I wonder why that would be required
04:15 < ssafejava> I have some forms in an app I manage that works fine without.
04:15 < ssafejava> jesusabdullah: Have the client pass the session cookie as the first message?
04:16 < sdwrage> ssafejava, not sure. 
04:16 < sdwrage> but its working so thats good lol
04:16 < ssafejava> haha good enough.
04:18 < krunc> Well, I like zurb foudnation in theory, but nothing seems to work as I would help it as soon as I want functionality beyond the exact basic stuff built in
04:18 < krunc> Literally think i'm gonna start a similar project (tho really just for myself, even if it is public) and slowly add functionality over time.... I literally think i'll get more done in less time instead of hackign away at foundation
04:22 < geddski> @ssafejava thanks
04:23 < geddski> ssafejava: thanks
04:24 < someprimetime_> i'm storing user profile images in a specific /img/user/avatar folder and each one is named after the user id
04:24 < someprimetime_> e.g. img/user/avatar/517c53a80c297ef75c00000b.jpg
04:24 < someprimetime_> should I even put this in my db?
04:24 < someprimetime_> or I mean if I can always predict it, why would I?
04:33 < rfish> Can someone convince me why I would want to switch from Windows, ASP.net, Visual Studio to Mac, Sublime Text 2, Command Line and Node.js?
04:33 < rfish> I'm being forced to make the switch and I hate it
04:34 < px> you should because then you will be happy to be forced to and not upset
04:34 < rfish> what are some benifits?
04:34 < ChrisPartridge> rfish: or just run virtualbox, and do both?
04:34 < rfish> other than pretty and cool
04:35 < px> unix has a lot of developer support
04:35 < rfish> I'm not allowed
04:35 < jesusabdullah> okay, hold on, I can break this down for you
04:35 < rfish> so does Asp.net
04:35 < ChrisPartridge> licensing?
04:36 < rfish> I think my time is worth something, if I have to pay for something better I will
04:36 < jesusabdullah> first of all, if you use a mac you get a unix-like environment, which opens you up to waaaaay more developer tools than the visual studio Tiny Box
04:36 < rfish> like what?
04:36 < jesusabdullah> A useful shell language, for one
04:36 < jesusabdullah> even you have to admit that cmd is a piece of shit
04:36 < rfish> why would I like a shell?
04:36 < jesusabdullah> and powershell is kinda shitty too
04:36 < rfish> I don't use cmd..... ever
04:36 < rfish> I don't use that either
04:37 < jesusabdullah> because it sucks balls on windows, that's why
04:37 < rfish> why would I want to use cmd line
04:37 < rfish> when I have shortcuts and I can do everything in visual studio
04:37 < jesusabdullah> it's like saying, "my BMW is way better than your geo metro"
04:37 < rfish> there is nothing I need to do in a command line
04:37 < jesusabdullah> "I never drive my geo metro"
04:37 < jesusabdullah> well, let me continue
04:38 < jesusabdullah> Outside the tiny box of visual studio, what's the last time you ever tried to write custom build tooling in windows?
04:38 < jesusabdullah> Like, if I want to automate something I write a tiny script and just run it
04:38 < jesusabdullah> on windows, I'm lucky if I have ruby and rake, and it still sucks
04:38 < jesusabdullah> or how about this: What do you do for version control?
04:38 < rfish> I set up my global.asax and I use libraries and I code, everytime I press the debug button on visual studio, it recompiles what I need on the fly and very quickly
04:39 < rfish> I use extensive libraries to make this easy
04:39 < jesusabdullah> What do you do when what you're using for version control explodes
04:39 < rfish> and debuging my build scripts are a breeze
04:39 < jesusabdullah> what build scripts?
04:39 < rfish> in grunt I would be like "What the hell is going on and why won't it work"
04:39 < jesusabdullah> that's because grunt is a piece of shit
04:39 < jesusabdullah> sorry
04:39 < jesusabdullah> I use make
04:39 < jesusabdullah> and I can expect it on EVERY unix-like box
04:39 < jesusabdullah> same with bash
04:39 < rfish> even make when there are problems you must get very confused
04:40 < jesusabdullah> Hell no
04:40 < jesusabdullah> make is stupid simple
04:40 < rfish> I never get confused once in .net
04:40 < jesusabdullah> I don't use it for compiling c code
04:40 < jesusabdullah> I use it for managing file dependencies
04:40 < jesusabdullah> but you never answered this riddle rfish: What do you do for version control?
04:41 < rfish> for example, I like to front in javascript code when debugging into very small files
04:41 < rfish> Visual Studio has built in GIT support
04:41 < jesusabdullah> "front in" ?
04:41 < jesusabdullah> well that's good to know
04:41 < jesusabdullah> actually I'm impressed
04:41 < sdwrage> ssafejava, can I pick your brain one more time?
04:41 < sdwrage> https://gist.github.com/anonymous/e85c9b6317bd0152370d
04:41 < ssafejava> sdwrage: sure one sec
04:41 < rfish> I can easily see what files have changed right in the IDE and easily right click and check the diff
04:42 < ssafejava> sdwrage: wjat
04:42 < rfish> no need to annoyingly switch to command line and type in a bunch of commands
04:42 < ssafejava> sdwrage: What's the issue?
04:42 < jesusabdullah> well here's the thing rfish, .net isn't straight terrible. In fact, VS is known to be a reasonably good IDE. But it's still a walled garden. That's really the problem to me.
04:42 < rfish> I still don't understand why
04:42 < jesusabdullah> because if you don't do things "the windows way" you're fucked
04:42 < sdwrage> ssafejava, ReferenceError: req is not defined
04:42 < jesusabdullah> and none of the tooling is on there standard
04:43 < sdwrage> https://gist.github.com/anonymous/e85c9b6317bd0152370d
04:43 < rfish> what tooling
04:43 < rfish> give me an example
04:43 < sdwrage> and this is on line 24
04:43 < ssafejava> sdwrage: Your indentation is all over the place... coffeescript usually takes a shit when you do that
04:43 < jesusabdullah> I already told you rfish, bash and make are huge for me
04:43 < rfish> I hear in Node JS, you write your code in sublime and then debug in another program called Node Inspector
04:43 < rfish> that just sounds insane
04:43 < sdwrage> ah where did I go wrong?
04:43 < jesusabdullah> pfffsht
04:43 < ssafejava> rfish: lol
04:43 < jesusabdullah> who the fuck uses node inspector?
04:43 < ssafejava> jesusabdullah: I do. it's great
04:43  * ChrisPartridge keeps hand down
04:43 < rfish> that is even more insane
04:43 < jesusabdullah> and I don't use sublime.
04:44 < jesusabdullah> I don't use an IDE at all.
04:44 < jesusabdullah> I use a text editor and my cli
04:44 < rfish> if you think you can write a bunch of code and it is just going to work
04:44 < jesusabdullah> the cli is your ide as far as I'm concerned
04:44 < jesusabdullah> well of course it doesn't just work
04:44 < jesusabdullah> I read stack traces
04:44 < ssafejava> rfish: Have you ever coded without an ide?
04:44 < ChrisPartridge> rfish: tests?
04:44 < rfish> nope
04:44 < ssafejava> well, there's your issue, you've had an ide holding your hand forever
04:44 < jesusabdullah> ^^^^^^^^^^^^^^^^^
04:44 < ssafejava> gasp... you might have to learn to code :p
04:44 < rfish> .net has tools for javascript unit tests
04:45 < jesusabdullah> and I bet they're terrible
04:45 < ChrisPartridge> im not talking about .net, im talking about testing in general
04:45 < rfish> why is it a bad thing if an IDE holds my hand
04:45 < ChrisPartridge> write test, write code, pass test, write test, write code, pass test
04:45 < jesusabdullah> in my world I have like 15 different testing tools I can choose from
04:45 < rfish> what I want in a language is to ship things quickly
04:45 < jesusabdullah> whoa whoa whoa don't conflate an ide with a language
04:45 < jesusabdullah> there are plenty of javascript IDEs
04:45 < rfish> ok, well I just want to ship things quickly
04:46 < jesusabdullah> and I do, without an IDE
04:46 < rfish> in the end the customer doesn't care what it was built with, just that it works
04:46 < jesusabdullah> mind blown yet?
04:46 < substack> rfish: tools that you don't need will prohibit you from shipping quickly
04:46 < jesusabdullah> ;)
04:46 < substack> they will get in your way
04:46 < rfish> can you explain how they get in my way
04:46 < jesusabdullah> I'm telling you, with a cli you just tell the computer to do shit and it does shit
04:47 < rfish> like what shit, you gave the example of make, I write my "make" in global.asax in code that I can debug with a powerful set of helper classes that I can debug and inspect
04:47 < ssafejava> rfish: did you come to nodejs to just talk shit?
04:47 < jesusabdullah> rfish: I suggest you keep an open mind. You may find that you like having an ide, you may even find you like .net, and that's all fine. But if you come into the mac/sublime/unix dev thing with this attitude you won't even learn anything
04:47 < rfish> no I came to get convinced to want to switch to Node.js
04:47 < jesusabdullah> rfish: Really, at worst you'll learn something about how us unixheads roll
04:47 < Lorentz> we can't convince you except yourself
04:47 < jesusabdullah> rfish: oh in that case, that's an entirely different discussion.
04:47 < rfish> I am being forced to switch, and in order to switch I want to get excited on how I am going to be more productive and I don't see it yet
04:48 < jesusabdullah> rfish: first of all, node is in javascript and everyone knows javascript rocks.
04:48 < substack> rfish: if you're using complicated tools, when things break they break in ways that will waste your time
04:48 < rfish> substack: never happened to me
04:48 < jesusabdullah> rfish: Second of all, node is async, meaning your servers don't scratch their balls while waiting for mysql to finish a query
04:48 < substack> if you understand what your tools are doing because they are simple and only do one thing, it's much more obvious how to fix them when they don't work
04:48 < jesusabdullah> rfish: third, the package management system is unparalleled. It's honestly amazing.
04:48 < rfish> .net has thread pooling.  Is that the same thing?
04:48 < jesusabdullah> No.
04:49 < substack> rfish: if you like .net then just use .net
04:49 < jesusabdullah> You can do similar things with it, but it's not the same thing.
04:49 < rfish> .net and nuget which is similar to package manager
04:49 < jesusabdullah> yes, nuget is a package manager
04:49 < substack> unless you have specific reasons for using node then just use whatever you want
04:49 < jesusabdullah> and honestly nuget is reasonably good
04:49 < jesusabdullah> and also
04:49 < substack> node probably isn't for you if you like big complicated IDEs anyways
04:49 < substack> it's very unixy
04:49 < substack> unix is the opposite of IDE
04:50 < jesusabdullah> nuget is heavily inspired by the worlds of ruby, python, etc.
04:50 < rfish> ok so it really boils down to a matter of taste then and one isn't necessarily better than the other?
04:50 < jesusabdullah> I would disagree with sub
04:50 < substack> rfish: yes
04:50 < jesusabdullah> in that, you can easily use an ide in unix and not have it be "not-unix" in a particular way
04:50 < Lorentz> rfish: there are peeps who prefer C over anything, not even C++
04:50 < substack> jesusabdullah: unix as in http://www.faqs.org/docs/artu/ch01s06.html
04:50 < Lorentz> depends on what they like doing and their own ways of doing things
04:50 < substack> not unix™
04:50 < jesusabdullah> substack: fair enough
04:51 < jesusabdullah> rfish: Check out http://mono-project.com/Main_Page you might like that
04:51 < jesusabdullah> rfish: Also look into node dev with windows azure
04:51 < jesusabdullah> rfish: I think their "official path" is webmatrix + powershell
04:51 < substack> rfish: this is unix http://www.youtube.com/watch?v=tc4ROCJYbm0#t=6m2s
04:51 < rfish> I see node.js with windows azure
04:51 < jesusabdullah> rfish: really, though, I'd just suggest coming into it with an open mind, and do some exploring on your own
04:51 < rfish> Microsoft is build node support inside visual studio
04:52 < rfish> I will be excited when that comes out
04:52 < jesusabdullah> Yeah, and that will be relatively sweet
04:52 < jesusabdullah> y'know, for microsoft
04:52 < Lorentz> it's all in the attitude mang
04:52 < Lorentz> gotta try new things
04:52 < rfish> full debugging support right in the IDE and a lot of setup projects
04:52 < jesusabdullah> oh also, so old-school it drives a school bus with gothic windows http://wiki.lazarus.freepascal.org/
04:52 < rfish> node.js is already supported on Azure
04:52 < jesusabdullah> Yeah but I have full debugging support right in the command line and don't even need the concept of projects
04:53 < substack> console.log() is really good for debugging
04:53 < rfish> this looks awesome
04:53 < jesusabdullah> yeah, console.log is pretty sweet
04:53 < rfish> http://www.youtube.com/watch?v=gXGLGVWWwKI
04:53 < jesusabdullah> rfish: lol for a second I thought you were talking about Lazarus
04:53 < rfish> I don't need console.log I have watch variables which are usually good enough for me
04:53 < jesusabdullah> what is a watch variable??
04:54 < rfish> nope, node.js support right in visual studio
04:54 < jesusabdullah> rfish I can only hold like 3 concepts in my head at a time
04:54 < rfish> when you pause the debugger, you put a watch on variables
04:54 < jesusabdullah> see you keep talking about this debugger thing, but debuggers have never brought me anything but pain
04:54 < Lorentz> you flag the variable and as program's executed, you have breakpoints or stepped, and can see the variable changing values
04:54 < rfish> and you can see the values in a list without the need to do some crazy node stuff like writing debug everywhere
04:55 < substack> break things up into tiny reusable modules
04:55 < jesusabdullah> I never found breakpoints useful either
04:55 < substack> you don't even need fancy tools at all to do this
04:55 < jesusabdullah> does that make me weird? Maybe.
04:55 < rfish> you must be a super genious
04:55 < substack> and the results are hugely superior to lumping a bunch of code into the same app
04:55 < Lorentz> jesus: nope, not weird, but I can see how others find value in it
04:55 < jesusabdullah> rfish: I code like the ol' sourdoughs settled the frigid north
04:55 < rfish> I break my app into tiny classes
04:55 < Lorentz> I've used it a lot before, but strangely not so much these days
04:55 < jesusabdullah> rfish: it's a simpler life
04:56 < jesusabdullah> I find classes inherently complex
04:56 < substack> rfish: when you only write simple piecs that are reusable and independently testable, you don't need fancy tools at all
04:56 < rfish> I can have hundreds of js files in a front end project
04:56 < substack> don't ever do that
04:56 < substack> use explicit dependencies with independent versioning instead
04:56 < jesusabdullah> I'm not usually one to make such extreme statements like that, but
04:57 < jesusabdullah> holy shit, that app must take like 90 seconds to load
04:57 < jesusabdullah> [||||||               ] 32%
04:57 < rfish> when I build, I concat and minify
04:57 < shoky> doesn't sound like you want to get excited about it, at all.
04:57 < rfish> but when debugging it helps to have a bunch of files
04:57 < jesusabdullah> [||||||               ] 33%
04:57 < Lorentz> in any case
04:57 < Lorentz> just forget about debugging like you used to
04:57 < jesusabdullah> okay substizzy, show this dude browserify
04:57 < Lorentz> and try a different approach
04:57 < Lorentz> empty that glass
04:58 < rfish> I unno, I'm find it very hard to unlearn my ways
04:58 < Lorentz> time to learn to unlearn then
04:58 < rfish> I except developpig to work a certain way, and when it doesn't I panic
04:58 < shoky> that's the whole problem right there
04:58 < substack> jesusabdullah: the site is down since the server ran out of disk again
04:58 < jesusabdullah> It's okay rfish, I start gasping like a drowning victim when I try to use cmd.exe so it's okay
04:58 < substack> rfish: http://github.com/substack/node-browserify
04:58 < jesusabdullah> substack: ouchies
04:58 < rfish> I don't like cmd.exe either
04:59 < rfish> but I never need it
04:59 < jesusabdullah> see, you got one thing right
04:59 < jesusabdullah> it's not about need rfish, once you use a real command line and get used to just telling the computer what you want it to do instead of digging through dialog boxes
04:59 < jesusabdullah> you never want to go back
04:59 < jesusabdullah> it's like the difference between going through a dialog tree in an RPG, versus just telling someone to do something face-to-face
04:59 < jesusabdullah> That's really why I like the cli
05:00 < rfish> I like to setup whatever I want to do in one script
05:00 < jesusabdullah> which is sooo hard in windows >_<
05:00 < rfish> and I generally want that script called when I want to debug
05:00 < substack> it's the difference between reproducable steps that you can trivially automate away and being dependent upon a vendor to bless you with whatever automation they want to bake in
05:00 < rfish> so I code it once in my global.asax and then I just don't think about it
05:00 < sinclair|net> hi substack
05:00 < jesusabdullah> why do you have a global saxophone?
05:00 < sdwrage> ssafejava, thanks for your help :) got it to work. Now I have to get validations and redirect to work
05:01 < rfish> that is the starting point for all asp.net applications
05:01 < jesusabdullah> Here, like, check this shit out https://github.com/bigcompany/know-your-http/blob/master/Makefile
05:01 < ssafejava> sdwrage: np, good luck
05:01 < jesusabdullah> I needed something to automate building this project so I just wrote this
05:01 < jesusabdullah> and other than the tabs-thing it was relatively straightforward, you have headers that are of the form file: file-this-task-needs other-file-also-needed
05:02 < jesusabdullah> and then just write down a list of steps below that
05:02 < rfish> ya, I would do something like that in .net code
05:02 < rfish> no command line but code
05:02 < olalonde> what is a good way to count the lines of codes for my module? should exclude node_modules obviously
05:02 < jesusabdullah> I'd bet money that this is much more straightforward
05:02 < jesusabdullah> olalonde: wc -l
05:02 < rfish> and it would run every time I debug so no, "ah shit, I forgot to run the script, hold on let me repeat the last step"
05:03 < substack> olalonde: http://npmjs.org/package/codebux
05:03 < jesusabdullah> rfish: you can automate that away too
05:03 < jesusabdullah> rfish: just make a new task that compiles everything and then runs your "debug" step whatever that may be
05:03 < olalonde> jesusabdullah: substack: thanks
05:03 < substack> rfish: whatever you're doing is probably way easier to write in bash
05:03 < jesusabdullah> rfish: or, in the case of latex I just leave the pdf reader open and it auto-refreshes
05:04 < jesusabdullah> rfish: I'd be interested in seeing what your build file things look like, really
05:04 < jesusabdullah> rfish: I've been trying to figure out for some time how the Hell windows people do this stuff
05:04 < Lorentz> it's just text, you can do most anything
05:04 < Lorentz> life of unix
05:04 < Lorentz> text everywhere
05:04 < rfish> so one thing I like to do for example
05:04 < jesusabdullah> Lorentz: ZOMBO COM
05:04 < jesusabdullah> rfish: https://gist.github.com
05:04 < rfish> because I deal with 100s of javascript files when coding
05:05 < olalonde> substack: nice. but there's nothing about LOCs in the readme though
05:05 < jesusabdullah> also please PLEASE cut down that number for the love of all that is holy
05:05 < rfish> I don't feel like trying to figure out which of those files I included on a page or not
05:05 < rfish> so I write a script that gathers the necessary javascript files in a folder using a regular expression
05:05 < jesusabdullah> also node's way of handling deps makes all this shit obsolete
05:05 < olalonde> 76.03$ haha
05:06 < rfish> and then it directly includes them in my index.html
05:06 < rfish> that is in debug mode
05:06 < rfish> in release mode it concats and minifies
05:06 < jesusabdullah> also that's pretty much trivial with make and bash, just cat all those and dump into a file, easy-peasy
05:07 < jesusabdullah> that's another thing. cat is ALWAYS there.
05:07 < jesusabdullah> as is tail
05:07 < rfish> I don't want to cat all the files
05:07 < jesusabdullah> as is grep
05:07 < rfish> I want to include them one by one
05:07 < rfish> much easier to debug
05:07 < substack> olalonde: something like find -name \*.js | grep -v '/node_modules/' | grep -v bundles | xargs grep \S | wc -l
05:07 < substack> will do
05:07 < substack> skip the -v bundles part maybe
05:07 < rfish> if there is an error, visual studios takes me right to the problem in my code
05:07 < rfish> highlights the line
05:07 < rfish> and lets me edit and continue
05:07 < jesusabdullah> I mean
05:08 < jesusabdullah> my browser does that for me
05:08 < jesusabdullah> thanks google chrome
05:08 < substack> rfish: that sounds like a really marginal benefit
05:08 < olalonde> substack: thanks. why the grep -v bundles?
05:08 < substack> olalonde: ignore that
05:08 < substack> like I said
05:08 < rfish> well if you are doing cat
05:08 < rfish> and you try to debug the cat file
05:08 < rfish> you have to go and find out which file caused the problem
05:08 < ningu> remember the supreme court case, Grep v. Bundles?
05:08 < jesusabdullah> I mean if I wanted to shove script tags that's not hard either
05:08 < rfish> then go there and debug it
05:08 < rfish> and then rerun the app
05:09 < jesusabdullah> if bash can't handle it, python's probably also on the system by default
05:09 < rfish> that sounds terrible
05:09 < jesusabdullah> or perl
05:09 < jesusabdullah> or whatever your poison
05:09 < substack> rfish: `doing cat`
05:09 < ningu> rfish: how does VS or whatever know which JS files you included on a page?
05:09 < substack> rfish: what are you talking about
05:09 < jesusabdullah> more terrible than writing it anywhere else?
05:09 < rfish> because I have a script that includes them for m e
05:09 < substack> rfish: anyways you want source maps, which browserify --debug gives you
05:09 < ningu> rfish: right but how does the script know?
05:09 < rfish> and knows where find them in my directory tree and brings it up when there is an error
05:10 < rfish> Visual Studio binds directly to the browser
05:10 < substack> that's horrible
05:10 < jesusabdullah> that's some scary shit rfish
05:10 < ningu> I assume the browser = IE only?
05:10 < rfish> yes
05:10 < jesusabdullah> like, holy shit, keep your hands off my browser you damned dirty ape
05:10 < jesusabdullah> er I mean
05:10 < jesusabdullah> ide
05:10 < jesusabdullah> damned dirty ide
05:10 < jesusabdullah> oh yeah, chrome dev tools 4 lyfe
05:10 < olalonde> ind . -name '*.js' | grep -v node_modules | xargs wc -l
05:10 < olalonde> this seemed to work
05:10 < rfish> well that has to be annoying switch from chrome inspector to sublime all the time
05:11 < substack> olalonde: but that's loc, not sloc
05:11 < jesusabdullah> well it's not because a) I don't use sublime and b) because I put the windows side-by-side
05:11 < rfish> I saw sublime now can bind to chrome which is pretty cool
05:11 < rfish> like visual studio does for IE
05:11 < jesusabdullah> and c) my window manager is so awesome I don't even have to put the windows side-by-side it does it for me
05:11 < rfish> and you can edit and continue
05:11 < olalonde> substack: right. i dont have that many comments/blank lines :D
05:11 < rfish> well I have two monitors and when I hit run it puts the IE in the other monitor that I am not coding in
05:12 < jesusabdullah> and d) my window manager is SO awesome it has keyboard shortcuts for switching between windows, resizing windows, and flipping through workspaces
05:12 < substack> rfish: so you're completely dependent on visual studio for everything, even source maps
05:12 < substack> wow
05:12 < rfish> Windows has a version of quick silver too if you like that
05:12 < ssafejava> jesusabdullah: keyboard shortcuts for switching between windows? what sort of magic is this
05:12 < substack> and you can only do things that visual studio explicitly permits
05:12 < substack> you are living in a walled garden
05:12 < ChrisPartridge> trickery and sorcery
05:12 < jesusabdullah> ssafejava: monadic magic! at least that's what they tell me
05:12 < ssafejava> MaybeSwitchWindows?
05:13 < jesusabdullah> see that's what I'm saying, walled garden.
05:13 < ningu> ssafejava: on OS X, cmd-` switches between windows
05:13 < olalonde> 1000 LOCs since past few hours. im on fire! 
05:13 < Lorentz> olalonde: no you don't
05:13 < substack> rfish: but there is a community ecosystem of experimentation and utility past the garden offered by microsoft
05:13 < Lorentz> stop
05:13 < Lorentz> 0 loc from now on
05:13 < substack> rfish: anyways you should definitely stick to .NET
05:13 < olalonde> yea, im taking a rest :D
05:13 < substack> you'll spend so much time fighting against how node does things
05:13 < rfish> I have a version of quick silver for windows that I can switch been application with CTRL + F1, F2.... ect
05:13 < jesusabdullah> lol
05:14 < jesusabdullah> what the Hell is quicksilver
05:14 < ningu> so if MS is the walled garden what is node, the secret garden?
05:14 < Lorentz> node's pretty open
05:14 < rfish> you can key bind to start and switch to specific applications
05:14 < ningu> I mean from the perspective of MS people
05:14 < jesusabdullah> ningu: more of a vacant lot with holes cut into the fence by oaklander ruffians
05:14 < ssafejava> ningu: lol I know. was just making fun of the statement
05:14 < rfish> it is a popular tool on the mac
05:14 < substack> ningu: http://www.catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/
05:14 < ningu> substack: I know, I was just joking
05:14 < olalonde> im writing an ORM for node.js
05:14 < jesusabdullah> oh yeah, actually, node is the People's Library
05:14 < olalonde> im about 8% there
05:14 < olalonde> haha
05:15 < ningu> olalonde: which db's does it support?
05:15 < substack> node is an anarchist encampment in front of city hall
05:15 < rfish> Asp.net has Entity framework, already done for you using reflections (How do you even emulat that in JS?)
05:15 < substack> everybody just does their own thing
05:15 < substack> there is no central coordination
05:15 < Lorentz> rfish: does it matter?
05:15 < rfish> Reflections are powerful
05:15 < olalonde> ningu: right now I only have a memory adapter. i just started a few hours ago. but my first real adapter will probably be postgresql
05:16 < jesusabdullah> well I don't know what an entity framework is, but there are plenty of ways to do reflection in node depending on the framework. Big is based entirely on reflection of resources.
05:16 < substack> as such, the breadth of what it gives you is so much greater
05:16 < jesusabdullah> See, if you want reflection it's there
05:16 < olalonde> ningu: then I guess it will be relatively easy to do MySQL. and mongodb will be for later
05:16 < shoky> Big?
05:16 < jesusabdullah> but if you're trying to find some kinda weird elephant-shaped pipe made out of soapstone, you'll find that at the bazaar too
05:16 < jesusabdullah> shoky: https://github.com/bigcompany/big
05:17 < Lorentz> rfish: that's not what I mean, but rather, why you're trying really hard to compare two different things
05:17 < shoky> thx
05:17 < olalonde> rfish: you mean introspection? that's like the easiest thing to do in JS...
05:17 < jesusabdullah> It's like saying, "my car has an automatic transmission. How do you even do that on a used car lot?"
05:17 < rfish> because I'm being forced to switch or I'll get fired at my company and I'm having trouble getting excited about  node
05:18 < Lorentz> jesus: lol car analogies
05:18 < jesusabdullah> rfish: No, you're having problems getting excited about a lack of IDE
05:18 < rfish> well introspection is easy, reflection attributes I don't see how you can do it
05:18 < substack> rfish: you should find another company doing .net development in fancy IDEs
05:19 < jesusabdullah> rfish: I'm telling you, focus on the cool parts of node in particular, take everything that's unfamiliar as a learning experience and/or a way to build character, and reevaluate after six months
05:19 < olalonde> I think you can do some type hinting in your comments, never tried to see if it worked well with IDEs
05:19 < jesusabdullah> rfish: and balance it out by doing things that are more comfortable back at home. Try using node with visual studio, using node to write windows apps, shit like that
05:19 < Lorentz> rfish: just switch and see what it's like from grounds up
05:19 < Lorentz> instead of forcing everything into what you were used to
05:20 < substack> node -e "require('http').createServer(function (req, res) { res.end('beep boop\n') }).listen(5000)" &
05:20 < substack> curl -s http://localhost:5000
05:20 < substack> do that
05:20 < substack> you don't even need an editor to write node
05:21 < jesusabdullah> Think of it as an adventure, rfish. It's like "roughing it". Outhouses aren't that bad and you get a good story out of it!
05:21 < Lorentz> would you sit and complain that meccano pieces aren't easy to build like lego?
05:21 < rfish> I write node, and then it says error line x, argument invalid
05:21 < jesusabdullah> so where's line x?
05:21 < rfish> and that confuses the hell out of me
05:21 < rfish> just an example
05:21 < jesusabdullah> it sounds straightforward to me
05:21 < rfish> I don't know what lead to that statement being called
05:21 < jesusabdullah> It says on line x you passed in an invalid argument
05:21 < rfish> I don't know what arguments were passed
05:21 < ningu> rfish: it gives a stack trace as well
05:21 < rfish> I don't know the variables
05:21 < jesusabdullah> keep reading down the stack trace, rfish
05:21 < jesusabdullah> look at the code
05:22 < jesusabdullah> and shove in a console.log if you have to
05:22 < rfish> just hell calling node
05:22 < substack> rfish: that's because you're using windows, which doesn't have a shell that can do sane quote parsing
05:22 < rfish> I rather put a break point and inspect the variables
05:22 < substack> just open up the repl and type it
05:22 < ningu> rfish: you can use node-inspector for that if you really want to
05:22 < jesusabdullah> rfish: "inspecting" and "console.log" are pretty much the same thing
05:22 < substack> console.dir([ req, res ])
05:22 < ChrisPartridge> i spend half my day in the repl, its awesome
05:22 < substack> so easy
05:23 < rfish> then I'm switching between sublime and node, need to focus on two windows, blows up my brain
05:23 < Lorentz> well, time to get used to it
05:23 < substack> 12 year olds are so much easier to teach programming
05:24 < substack> no pre-conceptions
05:24 < rfish> yes, it is hard to unlearn something
05:24 < Lorentz> substack: long long ago when I started programming
05:24 < Lorentz> I didn't know English
05:24 < Lorentz> at all
05:24 <@mbalho> whoa
05:24 < jesusabdullah> nice Lorentz 
05:24 < jesusabdullah> rfish: just put the windows side-by-side
05:24 < ningu> I always thought it might be fun to translate a languge's keywords into another language
05:25 < jesusabdullah> ningu: Someone wrote a dialect of lisp that's in arabic and reads right-to-left
05:25 < ningu> haha really? cool
05:25 < opus_> hey guys.
05:25 < Lorentz> hi
05:25 < jesusabdullah> ningu: http://www.animalnewyork.com/2013/arabic-programming-language-at-eyebeam-%D9%82%D9%84%D8%A8-opens-the-world/
05:25 < jesusabdullah> ningu: it is SO cool.
05:26 < paulkon> programming languages don't require "English" though
05:26 < paulkon> know a list of keywords and what they do
05:27 < paulkon> but it is more difficult without English no doubt
05:27 < rfish> ya, languages easy, all the libraries and packages that go with, hard
05:27 <@mbalho> is there a compile-to-js framework that lets you replace keywords with other keywords
05:27 < jesusabdullah> except in node
05:27 < paulkon> rfish: yes ^
05:27 < jesusabdullah> cause npm is awesome
05:27 <@mbalho> like utf8 snowman instead of function
05:28 < substack> mbalho: http://npmjs.org/package/falafel
05:28 < substack> you can insert some kinds of custom keywords
05:28 < paulkon> you could role your own too
05:28 < substack> then you can rewrite those to the native ones on the fly
05:31 < rfish> oh well thanks all, tomorrow a fun filled day with learning mac, sublime and node
05:31 < Lorentz> that's the spirit
05:31 < Lorentz> go have fun with new toy
05:31 <@mbalho> rfish: try to write + publish a node module
05:31 <@mbalho> rfish: there are no rules, anyone can publish, npm is mostly junk anyway
05:31 < rfish> problem is I have to actually deliver stuff on a time schedule with the new toy, not just mess around
05:32 < jesusabdullah> rfish: write + publish a WINDOWS SPECIFIC node module
05:32 < jesusabdullah> rfish: No way to learn quite like doing something fun
05:32 < rfish> pressure and time schedules are not fun :(
05:33 < ssafejava> rfish: welcome to professional life
05:33 < olalonde> ningu: why? would you be interested to contribute/use?
05:33 < ningu> fast turnaround doesn't lend itself to open source, generally useful code
05:33 < ningu> olalonde: yes, but I won't have time to contribute much in the near future unfortunately
05:34 < olalonde> ningu: ok cool, I'll let you know when the project is more advanced
05:34 < ningu> olalonde: I use gesundheit currently to generate SQL queries. it's written in coffeescript but you might want to take a look at it to get some ideas, because it supports *many* use-cases
05:34 < ningu> you could even use it internally in your ORM if you don't want to write your own
05:34 < olalonde> ningu: ok, I'll have a look
05:34 < ningu> it isn't perfect, but it's pretty good
05:34 < GreenDog> i thought all node devs just used mongodb
05:34 < ningu> GreenDog: depends what they are doing
05:35 < ningu> besides there is a lot more to NoSQL than mongodb
05:35 < Lorentz> nah, my cms prototype went with sqlite when I wrote it up couple weeks ago
05:35 < olalonde> ningu: a design goal that I'm aiming for is to make it browser compatible as well (in the browser you would be using a REST adapter or WebSQL adapter, etc.)
05:35 < jesusabdullah> GreenDog: A sizeable slice of node devs use couchdb as their go-to
05:35 < ningu> olalonde: oh, huh... I've never done anything like that but that could be cool
05:35 < jesusabdullah> GreenDog: some of them also use sql and get along pretty well
05:35 < jesusabdullah> GreenDog: and there's a contingent of leveldb-ers that's growing erryday
05:36 < ningu> I can't believe mongodb's competitors mangodb and bongodb have never materialized
05:36 < Lorentz> then there's the redis people, and good old sql people of various types
05:36 < olalonde> I've used mongodb and postgresql in the past year
05:37 < olalonde> mongoose is definitely far ahead from sequelize
05:37 < olalonde> but I guess writing an ODM is easier than an ORM
05:37 < GreenDog> i have yet to use mongodb
05:37 < ningu> olalonde: I agree. I actually found that using gesundheit + node-postgres + views was not very painful at all
05:38 < absolutezeroff> I have yet to try Postgres
05:38 < ningu> olalonde: not quite the same as an ORM but it worked really well
05:38 < px> i just rolled my own
05:38 < absolutezeroff> Postgres looks nice 
05:38 < px> everyone thinks databases are so hard to write
05:38 < jesusabdullah> ningu: what about brongodb?
05:38 < olalonde> ningu: thanks, I'll have a look at that project
05:38 < olalonde> lol px
05:38 < ningu> jesusabdullah: "machinery for washing & drying ready made garments"??
05:39 < ningu> dyeing*
05:39 < ChrisPartridge> i rolled my own too, its horrible, but it works
05:39 < jesusabdullah> ningu: lolwat
05:39 < jesusabdullah> hahaha
05:39 < ningu> jesusabdullah: so wtf is brongo?
05:39 < ningu> or there's the polynesian rongo
05:39 < jesusabdullah> the more brosly bro-fork of mongo-db
05:40 < jesusabdullah> brongodb bro
05:40 < ningu> oooh
05:40 < ChrisPartridge> when a record is written to disk, it high fives you?
05:40 < ningu> rolled back your transaction, totally got your back bro
05:45 < mscdex> node.js rules!
05:46 <@mbalho> lol
05:47 < jesusabdullah> ChrisPartridge: and hands you an ice cold pabst
05:57 < ChrisPartridge> jesusabdullah: i don't know what pabst is, but i know i'll like it.
05:58 < sinclair|net> yay, another meaningless without any context typescript project https://github.com/sinclairzx81/typescript.project
05:59 < sinclair|net> but that build script looks nice right?
05:59 < jesusabdullah> ChrisPartridge: http://1.bp.blogspot.com/_XYiLrMURRG0/TKYF3_QRStI/AAAAAAAACoA/pX81MUHTZ2I/s1600/PBR.jpg
06:00 < sinclair|net> jesusabdullah: hello
06:00 < ChrisPartridge> jesusabdullah: ohhh yeah
06:06 < jesusabdullah> sinclair|net: yes?
06:06 < sinclair|net> hello
06:07 < jesusabdullah> yes this is dog
06:07 < sinclair|net> ?
06:07 < ningu> http://knowyourmeme.com/memes/yes-this-is-dog
06:10 <@mbalho> moshi moshi
06:10 < ningu> mochi mochi
06:10 <@mbalho> mmmmm
06:25 < gishmel> so I have a question I have been writing this game and for reference think final fantasy 1 when i invoke the method on the character like say white mage casts heal should I only specify the target of the action or do i need to pass along reference to the source causing the action?
06:27 < ningu> gishmel: um, is that a node question?
06:27 < jesusabdullah> gishmel: That seems like something only you can answer
06:28 < gishmel> if i rephrase and ask does the function inherently know its own object without being passed it?
06:29 < ningu> gishmel: foo.bar() will have foo set as this
06:29 < ningu> rather, this set to be foo
06:31 < gishmel> thanks 
06:31 < gishmel> sorry if that wasnt specifically node related i dont know why its not allowing me to talk in just the javascript channel
06:31 < ningu> gishmel: at least it was JS-related :P
06:32 < gishmel> so what view libraries would you recommend keeping in mind a game like ui
06:32 < gishmel> for node of course
06:32 < ningu> gishmel: in a browser?
06:33 < ningu> gishmel: you should decide I guess if you want to do a single page app or not, and whether you want the templates rendered client or server side
06:33 < ningu> and what templating language you want
06:34 < gishmel> and i know that the information that fills in the numbers for the view has to be generated by the server but it should be possible to have a template generated by the client but populated by the server right?
06:36 < JamesMGreene> Heeeeey Node pplz
06:37 < JamesMGreene> isaacs isaacbw konobi mbalho MI6 tjfontaine trevnorris xyxne substack et al: How can I reset what the "latest" version of a published module is? e.g. if I had to republish an older version
06:38 < JamesMGreene> I republished an older version with a tweak and now it is marked as the latest version
06:38 < JamesMGreene> despite the lower version number
06:38 < ningu> gishmel: you can have the data sent from the server and the template rendered on the client, yes
06:43 < substack> JamesMGreene: npm unpublish modulename@version
06:43 < JamesMGreene> substack: Did that
06:43 < substack> then publish it again
06:44 < JamesMGreene> You mean to do that again for the true latest version?
06:44 < jesusabdullah> JamesMGreene: --force
06:44 < JamesMGreene> force what?
06:44 < jesusabdullah> JamesMGreene: you can overwrite with --force
06:44 < ningu> use the --force
06:45 < jesusabdullah> JamesMGreene: you can either unpublish and then just publish again like sub said, or you can publish over the top of an existing version by adding the --force flag
06:45 < JamesMGreene> Not the answer I'm looking for, though
06:45 < JamesMGreene> Let me provide more example details
06:46 < JamesMGreene> I had module@1.1.7, needed to fix something in module@1.0.8. `npm unpublish module@1.0.8`, `npm publish module@1.0.8` (from updated 1.0.8 branch)
06:46 < JamesMGreene> But now module@latest reports 1.0.8 instead of 1.1.7
06:47 < JamesMGreene> Seems like a bug to me, personally, but perhaps it was to do with supporting stable vs. unstable versions...? Not sure.
06:47 < ChrisPartridge> JamesMGreene: afaik, you should of just done npm publish module@1.0.8 with --force
06:48 < ChrisPartridge> instead of unpublishing it
06:48 < JamesMGreene> And you think that wouldn't update the @latest?
06:48 < JamesMGreene> I could see that, I suppose
06:48 < ChrisPartridge> I think so, otherwise calling publish without overriding an old version, creates a new record, which most likely updates latest
06:49 < ChrisPartridge> I could be wrong, so don't quote me on it
06:50 < JamesMGreene> oops, that was a bad idea :)
06:50 < JamesMGreene> I tried to republish (--force) using the tarball of latest from npm... yeah... it ended up deleting the latest tarball and failing :)
06:53 < substack> >> var e = 0; for (var i = 0, n = 1; i < 100; i++, n *= i) e += 1/n; e
06:53 < purr> substack: (number) 2.7182818284590455
06:53 < substack> MATHS.
07:06 < jesusabdullah> substack: no YOU're a maths!
07:07 < jesusabdullah> substack: also Math doesn't have e as a built-in constant? FOR SHAME
07:08 < Lorentz> Doesn't it?
07:08 < Lorentz> Math.E?
07:08 < ningu> substack: is i++, n *= i guaranteed to execute left to right?
07:09 < ningu> iirc in C it is not
07:11 < jesusabdullah> Lorentz: Yeah probably
07:11 < jesusabdullah> Lorentz: I hope so
07:13 < ningu> omg they are merging... facebook introduces hashtags
07:14 < ChrisPartridge> what book?
07:16 < hemanth> ChrisPartridge++
07:19 < Lorentz> not sure if this will work for me, but
07:19 < Lorentz> >> Math.E
07:19 < purr> Lorentz: (number) 2.718281828459045
07:19 < Lorentz> there we are
07:19 < substack> >> for(n=25,r=0;n>0;r=2*(n-1)+1+n*n--/r);4/r
07:19 < purr> substack: (number) 3.141592653589793
07:19 < substack> jesusabdullah: vvv
07:19 < substack> >> Math.exp(1)
07:19 < purr> substack: (number) 2.718281828459045
07:19 < substack> there's your e
07:20 < jesusabdullah> Yeah, no
07:22 < ningu> >> Math.exp([] >= [])
07:22 < purr> ningu: (number) 2.718281828459045
07:22  * hemanth paws at substack 
07:23 < jesusabdullah> no9: Would you be interested in me talking about https://twitter.com/jesusabdullah/status/344743095595843585 ?
07:23 < Lorentz> >> Math.pow(0,0)
07:23 < purr> Lorentz: (number) 1
07:23 < jesusabdullah> you guys are as bad as those haskell dweebs
07:23 < owen1> anyone using cloud9 and can tell me how to curl my server? i get curl: (7) Failed to connect to 127.0.0.1: Permission denied
07:23 < Lorentz> nah, we're lovely like haskell gentlemen
07:23 < ningu> jesusabdullah: the right answer to what?
07:24 < hemanth> >> Math.pow(0,-1) 
07:24 < purr> hemanth: (number) Infinity
07:24 < jesusabdullah> ningu: the life, the universe and everything? XD
07:24 < jesusabdullah> ningu: You'd have to attend the talk for more deets
07:24 < ningu> owen1: is that from your shell acct on the server?
07:24 < jesusabdullah> ningu: don't worry it's about "lightning talk" length
07:24 < ningu> jesusabdullah: I only use deet in the tropics
07:24 < owen1> ningu: yeah
07:24 < owen1> i don't use the ui at all.
07:24 < owen1> ningu: tmux and vim inside the shell
07:25 < ningu> owen1: ok and what port is your server running on?
07:25 < owen1> also no syntax highlight from some reason
07:25 < ningu> :syntax on
07:25 < owen1> curl 127.10.209.129:3000
07:25 < owen1> ningu: not working
07:25 < owen1> (syntax on)
07:25 < substack> I kind of want to make a program now that generates one-liners that generate pi
07:26 < owen1> i tried curl 0.0.0.0:3000 as well
07:26 < ningu> owen1: maybe no syntax plugins then *shrug*
07:26 < ningu> owen1: localhost:3000
07:26 < ningu> if it's actually on port 3000
07:26 < owen1> got the same error.
07:26 < ningu> so it isn't running on localhost port 3000
07:26 < owen1> http://test.oreng.c9.io/
07:26 < owen1> if i hit the website it's fine
07:27 < owen1> i need it for my test. i use tape and want to hit my route in the test
07:27 < ningu> owen1: I don't know anything about cloud9 or how it deploys apps
07:27 < owen1> me too (:
07:27 < ningu> if you just do "node app" it will run on localhost
07:28 < ningu> why not just point it to the url you just gave?
07:28 < owen1> not trying to deploy anything. just running my makeing http request to my local server
07:28 < ningu> owen1: try just "node app" then
07:28 < owen1> ningu: not sure i am following you. node server.js works
07:28 < ningu> ok find, server
07:28 < ningu> fine*
07:28 < ningu> whatever it's called
07:28 < owen1> i can hit my server from a ucl
07:28 < owen1> url
07:29 < owen1> but i want to write a test that do http.get(localhost, bla bla
07:29 < owen1> and do t.equal(res.statusCode, 200)
07:29 < ningu> owen1: well, depends what ip and port your server.js binds to
07:29 < owen1> 127.10.209.129:3000
07:29 < iksik> hm, socket.io browser client can connect to the server, server assigns connection ID and triggers 'connection' event properly, but few seconds after that, browser is trying to fallback into xhr-polling, then into jsonp-polling etc. actually, there is no communication between client and the server, any ideas why?
07:29 < owen1> i know since i console.log the IP and PORT
07:30 < ningu> ok, well that isn't localhost
07:30 < ningu> iksik: using nginx or what?
07:31 < iksik> ningu: direct connection to socket server
07:31 < ningu> iksik: not sure then
07:31 < iksik> and it was working yesterday o.O
07:31 < iksik> bleh
07:33 < owen1> ningu: true. i used the wrong port/host. thanks!
07:45 < jesusabdullah> ningu: deet is also good in the far north
07:45 < ningu> :)
07:46 < jesusabdullah> ningu: the mosquito is the state bird of alaska
07:48 < abraxas> the "os" module has some interesting information, but no way to get the distribution name out?
07:50 < Lorentz> guess not
07:50 < Lorentz> read /etc/os-release to manually get at it?
07:50 < Lorentz> not guaranteed though?
07:51 < abraxas> that file does not exist on my system
07:52 < kai> abraxas: the output of "lsb_release -a" should have that on most distros
07:52 < abraxas> thanks!
07:52 < kai> unless of course the distro decided to not ship that tool
07:53 < jesusabdullah> I mean
07:53 < kai> it's not installed per default on debian server, for example :/
07:53 < jesusabdullah> I'd just go for as many fallbacks as I can
07:53 < jesusabdullah> and failing that, be like, "screw you, it's 'GENERIC LENNOX'"
07:53 < jesusabdullah> you can only feature detect so far :)
07:53 < ChrisPartridge> default to windows, for the lols
07:54 < jesusabdullah> hahaha
07:54 < jesusabdullah> "Compaq Tru64 Unix"
07:54 < ChrisPartridge> "Commodore 64"
07:54 < kai> dos 5.1
07:57 < trusktr> Sam-T, Hey, I thought you might like this: Deploying Node.js with systemd. http://savanne.be/articles/deploying-node-js-with-systemd/
07:58 < trusktr> ChrisPartridge, I'm contributing to an open source app called Buzztrax (buzztrax.org) that has a commodore 64 synthesizer in it. :)
07:58 < Lorentz> nodejs deployed to gnu hurd
07:59 < ChrisPartridge> trusktr: awesome
08:00 < ChrisPartridge> trusktr: i have fond memories of pink slipping in street rod :)
08:00 < trusktr> lol
08:15 < gishmel> so I have tried creating my own module that is a model for a character in a game and I am trying to test it with the repl so when i require the file it gives me back Function : Character shouldn't I now be able to create a new character with var Luke = new Character
08:16 < ChrisPartridge> gishmel: new Character()
08:16 < gishmel> yeah sorry i did () in the code still an error
08:16 < gishmel> it says its unknown
08:16 < ChrisPartridge> exporting the function in your module?
08:16 < gishmel> yes
08:18 < ChrisPartridge> gishmel: code? gist, pastebin
08:19 < ningu> gishmel: no, you have to store the value of require()
08:19 < ningu> so var foo = require('foo');
08:20 < ningu> new foo.Character();
08:20 < ningu> or var Character = require('foo') whatever
08:20 < ChrisPartridge> oh yeah, that would help
08:21 < ningu> :)
08:22 < gishmel> thanks that works 
08:25 < booyaa|foo> had fun with tallroo's ansi-canvas module, not gonna be using it for vnc any time soon. not surprisingly it's slow and if you use a small enough font to get 320x200 image it causes an mbp to redline the cpu
08:25 < booyaa|foo> will still try and stream a gif when i'm off work for the next two weeks
08:37 < no9> jesusabdullah I take it that is as much about the why as the how?
08:40 < trusktr> Any idea why when starting my Node.js app with systemd the app complains that it cannot find a required module but when starting the app from command line it works fine?
08:41 < RLa> trusktr, the working directory maybe?
08:41 < RLa> trusktr, maybe you can set it in the service config file?
08:43 < trusktr> RLa, Whatcha mean exactly? So for example, my service file looks like this: http://vpaste.net/vpUUU
08:43 < trusktr> When I run "/usr/bin/node /srv/nodeProxyServer/proxy.js" from command line as root it works fine.
08:44 < RLa> trusktr, try set WorkingDirectory=/srv/nodeProxyServer
08:45 < RLa> btw, may i ask what distro are you using?
08:46 < trusktr> RLa, I'm on Arch.
08:47 < RLa> i'm preparing for the large upgrade for my server this summer and i really like systemd
08:47 < noway_> Guys, someone need to specify subset of Json with comments! I think it would be breakthrough.
08:47 < RLa> but in neither of distros i mainly use it's not default init
08:47 < noway_> No just strip all comments, parse it too
08:47 < noway_> Comments would be part of document. Like in xml/
08:47 < jesusabdullah> no9: Yeah, in fact much more about they why than the how
08:48 < trusktr> RLa, Yeah, systemd is absolutely freaking amazing.
08:48 < RLa> { "comment": "This is comment" } <- like that? :D
08:48 < noway_> This is shitty way
08:48 < noway_> / and /* */ - that's way
08:48 < trusktr> I keep discovering features, and it blows my mind that the guy who made it released the first release after one year of development.
08:48 < jesusabdullah> no9: Really, it's a tale of how simplicity sometimes wins
08:49 < noway_> Comments is a thing that really need to be in markup lang
08:49 < trusktr> RLa, it didn't work.
08:49 < RLa> same error?
08:49 < trusktr> oh
08:49 < jesusabdullah> no9: Ironically, I'm working on "real instrumentation" right now
08:49 < trusktr> RLa, oh oops, forgot to copy paste to /etc/...
08:49 < RLa> oh
08:50 < trusktr> hehe
08:50 < trusktr> lemme see
08:50 < RLa> trusktr, i fear that tight integration with udev tho
08:50 < no9> jesusabdullah It has a nice segway as dscape had a little anti-irc rant during his presentation  a couple of months ago :) 
08:51 < RLa> hotplug was hack, hal was mistake, udev?
08:51 < no9> Do we have a date? <3
08:51 < no9> Or are you still on the beers and thinking?
08:54 < trusktr> RLa, I don't know too much about udev yet.
08:54 < trusktr> RLa, didn't work. Any other ideas?
08:55 < RLa> trusktr, is that globally installed package or not it cannot find?
08:55 < trusktr> Yeah, it's installed systemwide (npm via root user)
08:55 < trusktr> RLa, ^
08:56 < RLa> npm via root is not necessarily global, -g switch is also needed
08:56 < trusktr> oh yeah
08:56 < trusktr> with -g or course.
08:56 < trusktr> of*
08:56 < RLa> but do not use global deps for specific projects
08:57 < no9> jesusadbullah ^
08:57 < RLa> go into /srv/nodeProxyServer and run npm install (without -g) as root
08:57 < RLa> only install -g when package provides some command-line command
08:58 < RLa> i think node even ignores -g packages as deps now
08:58 < trusktr> RLa, it actually does provide a command line command.
08:58 < RLa> hm, really?
08:58 < trusktr> But yeah, I could try it locally.
08:58 < trusktr> I'm not actually using the command line command.
08:59 < RLa> yes, then install locally
08:59 < RLa> if you need command too, install globally too
08:59 < trusktr> In fact, the script is really simple: var httpProxy = require('http-proxy')
08:59 < RLa> yes, then you need local install
08:59 < trusktr> haha, i meant to paste this: http://vpaste.net/C83Nb
09:00 < trusktr> But it'd still fail if it was just that one single line. hehe
09:01 < RLa> hm, i hate config vhosts :)
09:01 < RLa> www vs non-www makes already enough confusion
09:02 < trusktr> Yeah, I'd like to fix http-proxy (or hope they do) so it takes regex like *.whatever.com
09:02 < trusktr> or like Google Chrome's rules [*.]whatever.com
09:03 < RLa> haha, even apache supports *.example.com
09:03 < trusktr> yeah
09:11 < trusktr> Sweet, installing locally worked fine. I still wonder how to use the global one with systemd though.
09:11 < trusktr> I'm sure there's a way.
09:11 < trusktr> RLa, ^
09:14 < RLa> trusktr, if you use the command
09:14 < RLa> maybe it accepts config file
09:14 < RLa> no idea, haven't used the proxy package
09:14 < trusktr> RLa, it doesn't accept a config file I don't think.
09:15 < trusktr> Didn't see that in the docs.
09:15 < trusktr> But oh well, this works fine.
09:27 < srji> i'm a js beginner and UI-Designer. i would like to develop a little node.js application which shows a map (google or osm) with boat icon which are placed with a json. are there any best practice for developing with node.js?
09:29 < RLa> srji, your most work probably goes into front-end code instead of node
09:30 < gildean> srji: depending on where the json is coming from, but imo in your case you just write a simple http-server with the core http, or if you want things ready made just use express and res.json
09:31 < srji> i see, i misunderstand node.js :)
09:32 < gildean> srji: doesn't mean you can't write your backend with node tho'
09:32 < gildean> and use something nice like websockets to send data to the frontend in real-time
09:32 < srji> thats clear
09:33 < srji> thats my point
09:33 < jesusabdullah> no9: Yeah, I'm down if you are
09:33 < jesusabdullah> no9: really? anti-irc rant?
09:36 < jesusabdullah> srji: there are lots of best practices, you'll have to be more clear
09:36 < jesusabdullah> srji: I'd look at other peoples' node apps on github to get an idea
09:39 < srji> jesusabdullah: that's a great idea
09:44 < nathan7> jesusabdullah: dscape is annoyingly anti-IRC
09:45 < jesusabdullah> nathan7: lol why?
09:47 < nathan7> jesusabdullah: Dunno why
09:47 < nathan7> jesusabdullah: I think part of it is that he uses IRCCloud and they fuck up all the time
09:47 < nathan7> jesusabdullah: if someone could beat some irssi into him it'd probably improve q=
09:47 < jesusabdullah> lol
09:48 < nathan7> I avoid email like the plague
09:48 < jesusabdullah> I don't mind email but it's not the best way to talk to me
09:48 < nathan7> my fear of email is greater than my fear of irl people
09:48 < jesusabdullah> now, me, if I'm anti-anything it's anti-skype
09:48 < nathan7> irl people at least give you instant reaction
09:48 < jesusabdullah> I hate skype with a passion
09:48 < nathan7> Yeah, we switched to hangouts
09:48 < nathan7> I am yet to do a hangout
09:48 < jesusabdullah> wanna hang out bro?
09:48 < nathan7> fo' shizzle
09:48 < jesusabdullah> brb pants
09:49 < nathan7> No more pantsless team calls though
09:49 < nathan7> Yeah exactly
09:49 < nathan7> It's terrible
09:49 < ningu> you guys have hangups about hangouts?
09:49 < nathan7> It's either pants or risking your dignity
09:50 < jesusabdullah> lol
09:50 < jesusabdullah> get a mini con going
09:51 < jesusabdullah> nathan7: https://twitter.com/rickasaurus/status/344513894653513730
09:51 < jesusabdullah> nathan7: you'll notice that both rob and I were like, "hey working without pants is awesome"
09:51 < nathan7> jesusabdullah: hehe
09:52 < jesusabdullah> so wait why did I put on pants again? XD
09:52 < nathan7> hangout
09:52 < jesusabdullah> right
09:52 < jesusabdullah> so how do you do that?
09:52 < ningu> how do you do what, put pants on?
09:53 < jesusabdullah> no, hangoutz
09:53  * nathan7 grabs tablet
09:53 < jesusabdullah> in other news I'm going to be able to afford rent soon I'm pretty jazzed
09:53 < nathan7> http://google.com/hangout
09:53 < nathan7> "available for your computer" "HOLY SHIT *MY* COMPUTER?"
09:54 < ningu> only *you* can stop forest fires
09:54 < jesusabdullah> nathan7: I know, right??
09:54 < nathan7> I just start them
09:54 < jesusabdullah> well, it's on my computer
09:54 < nathan7> cd $(npm install forest-fire) && npm start
09:54 < jesusabdullah> I'm like a grandma with facebook
09:54 < nathan7> haha
09:54 < jesusabdullah> oh man
09:55 < jesusabdullah> get a hangout going and I'll tell you about my mom complaining about grandma on facebook
09:55 < no9> jesusabdullah It was a jokey rant nothing to serious :)
09:55 < jesusabdullah> no9: Well that's a relief!
09:55 < nathan7> okay here we go
09:55 < jesusabdullah> no9: I'll tell you what though, that guy does like skype more than any person in their right mind should
09:56 < no9> jesusabdullah :) 
09:56 < nathan7> I'm gonna be sidewaaays
09:56 < jesusabdullah> whaaaaat
09:56 < jesusabdullah> yo' crazy
09:56 < nathan7> unless it actually properly adjusts for orientation
09:56 < no9> jesusabdullah AWWWWWSSSSOMME!! 
09:56 < jesusabdullah> I'm going to get coffee against my better judgement
09:56 < nathan7> I literally snorted caffeine today
09:57 < jesusabdullah> *shudder*
09:57 < nathan7> I haven't been this jittery in a while
09:57 < no9> i will get you added to the site  today 
09:57 < nathan7> I HAD TO DO IT
09:57 < nathan7> FOR SCIENCE
09:57 < jesusabdullah> cool no9
09:57 < nathan7> signing in.. SPEED UP, ELGOOG
09:58 < jesusabdullah> no9: You should probably send me an email with the deets so I don't have an excuse for forgetting
09:58 < jesusabdullah> no9: josh.holbrook@gmail.com
09:58 < jesusabdullah> nathan7: is maciej online?
09:58 < nathan7> It still says you're our lackey, btw
09:59 < ningu> http://nym.ag/17J4jp5
09:59 < jesusabdullah> oh, on which nathan7 ?
09:59 < nathan7> jesusabdullah: haven't seen him speak
09:59 < jesusabdullah> nathan7: oh, goog+
09:59 < nathan7> yeah
09:59 < jesusabdullah> I never use goog+
09:59 < ningu> huh, that was a bit.ly shortened url
10:00 < nathan7> wtf
10:00 < nathan7> It crashed?
10:00 < ningu> they must have gotten lots of combinations of three letter domains + tlds
10:06 < jesusabdullah> nathan7: where are you on the goog+ anyway?
10:19 < nathan7> jesusabdullah: what do you mean?
10:19 < nathan7> jesusabdullah: nathan@nathan7.eu
10:21 < jesusabdullah> aha
10:23 < nathan7> jesusabdullah: I tried calling you
10:23 < jesusabdullah> awww
10:23 < jesusabdullah> no sound alert?
10:23 < jesusabdullah> dangit mr. hangout
10:26 < jesusabdullah> oh snap nathan7 it says you tried calling me twice
10:26 < jesusabdullah> friggin' goog
10:26 < jesusabdullah> WELL WHATEVER
10:34 < jesusabdullah> nathan7: holy shit
10:35 < jesusabdullah> nathan7: some crazy crazy sounds coming from over there
10:35 < jesusabdullah> nathan7: were you at a party or something?
10:35 < bastinat0r> Eriu sollte wirklich Werbung für uns machen :)
10:36 < nathan7> jesusabdullah: I am on a bicycle
10:36 < jesusabdullah> :o
10:36 < jesusabdullah> OHHHHH
10:36 < ningu> bastinat0r: wer sind "uns"?
10:36 < jesusabdullah> That explains SO MUCH
10:36 < jesusabdullah> but
10:36 < jesusabdullah> how are you on irc and goog hangouts while bicycling?
10:37 < nathan7> tablet
10:37 < yawnt> *magic*
10:37 < yawnt> nathan7: dammit don't ruin everything
10:37 < jesusabdullah> yawnt: no joke
10:37 < yawnt> >:(
10:37 < yawnt> jesusabdullah: it's some kind of power that flows through the air
10:37 < jesusabdullah> duuuude
10:37 < yawnt> they call it THREE GEE
10:38 < nathan7> Yeah, tablet wifi-tethered to phone
10:38 < jesusabdullah> if you didn't see my face, nathan7 ... you SHOULD've seen it
10:38 < nathan7> Cycling and videocalling - perfectly responsible
10:39 < nathan7> it is windy as fuck
10:39 < ningu> how windy is fuck?
10:39 < nathan7> pretty windy
10:39 < jesusabdullah> ningu: it sounded like some Army of Darkness accidentally-read-the-wrong-passage-from-the-book-of-the-dead shit going on
10:40 < ningu> haha
10:40 < nathan7> ahaha
10:40 < nathan7> that's what a little wind is like in a flat country
10:41 < jesusabdullah> hah
10:41 < ningu> which country?
10:41 < nathan7> .nl
10:41 < ningu> I figured
10:41 < jesusabdullah> ningu: y tu?
10:41 < ningu> SF
10:41 < ningu> but up late
10:41 < nathan7> weed, hookers, but no surface curvature
10:42 < jesusabdullah> SF is NOT a country
10:42 < ningu> hey we have weed too
10:42 < jesusabdullah> YEAH you do
10:42 < ningu> jesusabdullah: I interpreted the question loosely
10:42 < jesusabdullah> California keeps their hookers with Nevada for safekeeping
10:43 < jesusabdullah> *yawn*
10:43 < nathan7> hehe
10:45  * nathan7 sits down at a lake
10:45 < jesusabdullah> alright I gotta get some shuteye
10:45 < jesusabdullah> peace homies
10:45 < nathan7> Sleep tight and things
10:45 < yawnt> you should sit on a lae
10:45 < yawnt> *lake
10:45 < nathan7> don't let the bed bugs bite
10:45 < jesusabdullah> I sleep on a couch so, not a problem
10:45 < jesusabdullah> couch bugs maybe
10:46 < ningu> bed bugs are very annoying
10:46 < nathan7> jesusabdullah: couch bugs are the worst
10:46 < ningu> Bettwanzen
10:46 < nathan7> jesusabdullah: We had our couch restarting every few minutes!
10:46 < nathan7> oh, wait, *that* kind of couch q=
10:47 < ningu> keeping a database in your couch seems a bit eccentric
10:48 < mattrichards> Hey all. I'm having some trouble implementing some Restify (express/connect) middleware; http://stackoverflow.com/questions/17074605/restify-connect-express-middleware-error-handling  any one got any insight?
10:50 < nathan7> mattrichards: res.end?
10:50 < ningu> no, res.send() is correct
10:51 < mattrichards> nathan7: I was worried someone would say that.  res.end() doesn't seem to be implemented in Restify.
10:51 < ningu> sure it is
10:51 < ningu> it's just a regular res object
10:51 < ningu> but res.send() should be fine
10:51 < nathan7> jesus
10:51 < nathan7> a dog just appeared
10:51 < nathan7> it suprised me and I punched myself in the lip
10:53 < ningu> mattrichards: anyway, are you sure that only one of the two promise callbacks is being called?
10:53 < mattrichards> ningu: strange, when I try res.end() I recieve a TypeError: Object #<Object> has no method 'end'
10:53 < ningu> mattrichards: so maybe you should show us your code for how the middleware is being called
10:53 < mattrichards> ningu: yeah I can confirm through node-inspector / console.logs that the promise callbacks are being fired
10:54 < ningu> that wasn't my question
10:54 < mattrichards> ningu: apologies, misread.  Yes.  The promise is resolving / rejecting as expected.
10:55 < mattrichards> ningu: I'm passing the middleware as a part of the route declaration (penny drop moment, this could be my problem).  Rather than app.use(...) 
10:55 < ningu> that should be ok
10:55 < nathan7> *surprised
10:57 < ningu> mattrichards: can you gist the route declaration?
10:58 < mattrichards> ningu: yeah no problem, however, I'm experiencing this problem in unit tests too, so I don't think it has anything to do with the route declaration.
11:01 < ningu> mattrichards: ok, well, it's a bit hard for me to say, I'd end up going back and forth between debug steps like you're doing but it's hard with the lag of suggesting them on irc :)
11:01 < ningu> for example I'd try doing next() in both promise callbacks and see if it works
11:01 < ningu> and I'll take a look at the gist code of course
11:01 < nathan7> mattrichards: !
11:01 < nathan7> mattrichards: next(err)
11:02 < ningu> nathan7: it works fine the way he's doing it
11:02 < nathan7> mattrichards: next(new restify.NotAuthorizedError())
11:02 < ningu> nathan7: either way works fine
11:02 < ningu> worth a try, I guess
11:02 < nathan7> mh-hrm
11:02 < booyaa|foo> slightly ot, but does anyone have any experience of know of coders with an arm disability?
11:02 < booyaa|foo> i'm wondernig what terms to google for a single arm keyboard
11:02 < ningu> booyaa|foo: just an ORM disability sorry
11:02 < booyaa|foo> and software
11:02 < mattrichards> nathan7, ningu: yeah, tried next() too.  
11:03 < nathan7> "porn keyboard"?
11:03 < mattrichards> no luck.
11:03 < booyaa|foo> nathan7: *groans*
11:04 < nathan7> booyaa|foo: sorry, couldn't leave it q=
11:04 < booyaa|foo> heh
11:04 < nathan7> booyaa|foo: How's it on the job front?
11:05 < booyaa|foo> nathan7: waiting on some dudes to get back to me on round 2. got a no from stripe
11:05 < nathan7> booyaa|foo: mhm
11:05 < booyaa|foo> and one company didn't even bother to say "no thanks"
11:05 < booyaa|foo> nathan7: not worried, trying to up my meteor game at the mo
11:06 < booyaa|foo> lucky at work got a bonus and payrise. so even if it's not a node gig i can't complain much
11:06 < mattrichards> ningu: I was naively hoping I had done something obviously wrong, I think it's a case of continuing the painstaking debugging process.  Anyway, couple of gists; here's how I'm specifying the route; https://gist.github.com/lucidmoon/5772891 and here's the _verifyAuthToken method https://gist.github.com/lucidmoon/5772899
11:06 < booyaa|foo> i figure keep working on my github portfolio until next time i find some node gigs
11:07 < nathan7> booyaa|foo: did swaagie's redirect lead to anything?
11:07 < nathan7> referral*
11:07 < booyaa|foo> no not a whisper
11:07 < nathan7> aw
11:07 < booyaa|foo> no worries man, still biding my tme
11:08 < mattrichards> ningu: n.b. _middleware & _verifyAuthToken are both methods of authService 
11:08 < ningu> mattrichards: ok, well I don't see anything obviously wrong, except... well wait a minute
11:08 < ningu> does usersController.index call res.send()?
11:09 < mattrichards> ningu, if the middle ware calls next().
11:09 < ningu> but the middleware comes last
11:09 < swaagie> booyaa|foo, sorry to hear that
11:10 < mattrichards> ningu: yeah, that could be a problem.  Weird thing is.  If I res.send(err) it behaves as expected.
11:10 < ningu> mattrichards: so usersController.index happens first
11:10 < mattrichards> (outside of the promise callbacks)
11:10 < swaagie> I dunno if I was her first or n-th pick and how many more she had still open
11:10 < ningu> mattrichards: would have to see the other route to know why
11:11 < ningu> mattrichards: but you don't want to do next() on success on your last route, then there will just be no response at all, so something is wrong in how you designed it
11:11 < ningu> mattrichards: and once you res.send() you are done
11:11 < ningu> so if usersController.index does that and then calls next() it will just lead to bad things
11:12 < mattrichards> ningu: sure, that totally makes sense.  What I can't figure out is that when I unit test middleware, in isolation, res.send() _never_ gets called from within the promise failback.
11:13 < ningu> well, undefined behavior is undefined
11:14 < mattrichards> ningu: which leads me to believe it's got little to do with how the middleware is being introduced to the stack (but could certainly introduce some weird behaviour in it's own right).
11:14 < mattrichards> ningu: heh, yeah, indeed.  "An exception has occured".
11:14 < ningu> mattrichards: I'm 99% sure that what I said is the reason
11:15 < mattrichards> ningu: massively appreciate the insight :)
11:15 < mattrichards> ningu: at least I have another avenue to explore, I was hitting a brick wall up until now.
11:15 < ningu> mattrichards: anyway, you need to make the control-flow go in the way that restify expects
11:15 < ningu> if you do it wrong a lot of strange things will happen
11:20 < ningu> ubuntu do-release-upgrade is so painless, I'm always impresed
11:29 <@MI6> joyent/node: Andrei Sedoi v0.10 * 884b253 : openssl: add missing configuration pieces for MIPS - http://git.io/C_MPWw
11:34 <@MI6> joyent/node: Veres Lajos v0.10 * 9a4e593 : test: minor typo fixes - http://git.io/2Z-ngg
11:38 < faceleg> should I move my dev team from php/mysql to node/mongo?
11:38 < Gottox> Depends on the dev-team :D
11:38 < Gottox> and on the projects you're working on.
11:38 < faceleg> well
11:38 < faceleg> web dev studio
11:39 < faceleg> small to medium projects of range f complexity
11:39 < ningu> move them to php/mongo :P
11:39 < faceleg> currently using zend 1.1 & php 5.2 style
11:39 < faceleg> I'd rather eat vomit than look at the code tbh
11:40 < faceleg> (I had no hand in making the current code base, i'm a new hire brought on to lead the dev team out of the swamp)
11:40 < ningu> was this on the strength of your nodegit work?
11:40 < faceleg> that I got thhis job?
11:41 < faceleg> nah on my new boss' interpretation of my character and history of not sucking @ programming
11:41 < ningu> hehe
11:41 < faceleg> although i did bleat on about node in the interview and at any opportunity since
11:41 < faceleg> "the future of backend dev" etc
11:42 < faceleg> basically the decision is mine, after stabilizing the current horrible codebase
11:42 < faceleg> each new site was produced by copy-pasting the most recent site and changing it
11:43 < faceleg> i'm interested also in whether anyone here knows if node is being used (widely or even at all) in a studio environment, or if it's mainly used to build single large sites
11:43 < faceleg> as in, is it used to pump out small-med complexity sites
11:44 < faceleg> I believe node applied correctly could give a web studio a real edge
11:44 < faceleg> as I find it really malleable and quick to move in
11:44 < faceleg> unlike php/whatever else
11:46 < ningu> faceleg: don't see why not, but I don't know what the norm is
11:46 < faceleg> the norm is php
11:46 < faceleg> at least in NZ where I am
11:46 < faceleg> but PHP is different to people who know more than just that language
11:46 < faceleg> php only programmers defend it without realising how silly they sound
11:47 < bnoordhuis> faceleg: meh. it works, right?
11:47 < faceleg> nail.head.hit();
11:48 < faceleg> I just imagine how quick I could move with node+mongo. client wants extra fields on the standard user? bang done
11:48 < faceleg> php/mysql have become a real chore
11:48 < faceleg> to do any really flexible stuff you have to write so much code
11:49 < faceleg> so much code
11:49 < faceleg> does the room have recommendations on frameworks? also accepting ammo for my more vehemently pro-php team members
11:51 < booyaa|foo> swaagie: no worries man, i'm patience :)
11:51 < bnoordhuis> faceleg: i think express is the most popular one
11:51 < faceleg> yah I've used that
11:51 < faceleg> without pain too
11:51 < booyaa|foo> so i did a quick test i'm 20wpm left handed. 60wpm both
11:51 < faceleg> I tried to love flatiron
11:51 < booyaa|foo> coding is going to be slow ass
11:52 < faceleg> booyaa|foo: new keyboard?
11:52 < booyaa|foo> faceleg: nah going to lose the use of my right arm for about a month
11:52 < faceleg> booyaa|foo: well that sucks
11:53 < booyaa|foo> yeah it feels slow and i spend more time finding keys (i'm not a trained touch typist, but i know keyboards well when i'ev got both hands)
11:53 < booyaa|foo> this should be an interesting experiment
11:53 < faceleg> it'll be frustrating as hell
11:53 < faceleg> I bought a new keyboard recently, a "TECK", and man it's been a harrowing experience
11:54 < faceleg> THE TAB KEY IS IN THE CENTER
11:54 < booyaa|foo> yeah no doubt, but if it teaches me about disabilities and how i can improve the experience for everyone all the more better
11:54 < faceleg> one handed is going to be worse
11:54 < booyaa|foo> TECK?
11:54 < faceleg> trulyergonomic.com
11:54 < booyaa|foo> woah
11:54 < booyaa|foo> that's a funky looking keyboard
11:55 < faceleg> yeah it's interesting
11:56 < faceleg> was the only one with ergo layout and design philosophy with proper key switches
11:56 < faceleg> not spending hundreds on a keyboard that has only one of those features
11:56 < faceleg> I feel myself developing RSI and have sore shoulders, back from normal keyboarding 8-12 hours a day
11:56 < faceleg> but it has been SO ANNOYING to use, tomorrow will be day 3
11:59 < booyaa|foo> faceleg: keep at it, it's really hard to retrain but sometimes it's worth it
11:59 < booyaa|foo> definitely to avoid rsi
12:00 < faceleg> booyaa|foo: yeah well @ 300+ NZD I definitely wil be
12:00 < faceleg> yeh read about some of the programming greats and how they got to the point where they couldn't touch a keyboard anymore, this is how I feed my family
12:19 <@MI6> joyent/libuv: Ben Noordhuis master * 0c3b061 : Merge remote-tracking branch 'origin/v0.10' (+4 more commits) - http://git.io/K9pgiA
12:23 < xeno1> I can't find a module providing daemonization + LSB init cmd (status/start/stop/restart) working correclty, have tried simple-daemon (the developper confirmed it is incompatible with recent versions) and start-stop-daemon (restart issue), no success :( what do you use for such need ?
12:25 < zomg> xeno1: I used monit
12:25 < zomg> (not a node package)
12:27 < xeno1> zomg: shell script ?
12:27 < zomg> it's an application for monitoring process status etc.
12:28 < xeno1> zomg: to heavy for me
12:28 < xeno1> i'd prefer have this done in node or il last ressort done with shell
12:28 < zomg> well, when you get tired of looking for a node package that works properly, give it a shot :P
12:28 < xeno1> :)
12:35 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:33 < Xenos> Hello
13:37 < Xenos> I'm hoping this isn't too out of line, but may I possibly ask if anyone knows of a downloadable sample project that implements a working example of raw-socket or socket.io? I've been over the documentation again and again and I've come to the point where I am at a complete loss in understanding the way node.js works and how requirejs is correctly implemented.
13:40 < niggler> Xenos did you try the examples?
13:40 < niggler> Xenos: http://socket.io/#how-to-use
13:40 < niggler> did you try the first example, and if so what was the issue
13:45 < Xenos> Thank you niggler
13:45 < Xenos> I will try it out
13:45 < Xenos> I have tried other examples, but I always run into problems with require()
13:47 < Xenos> I seem to be given the following error: JavaScript runtime error: 'io' is undefined
13:47 < Xenos> (With the first example, that is)
13:47 < niggler> are you running the app as it is stated?
13:47 < niggler> Xenos that sounds like the client couldn't find socket.io.js
13:47 < Xenos> To clarify, I used the nuget packet manager to run the command npm install socket.io --msvs_version=2012
13:48 < Xenos> It seemed to run the command without issue
13:49 < Xenos> Then I created the html and js files as listed in the first example, and attempted to run the project with the initial page pointing to index.html
13:49 < Xenos> How does npm install socket.io relate the correct references required to a project?
13:49 < niggler> Xenos can you access the socket.io.js file?  
13:50 < Xenos> I'm unsure
13:50 < niggler> in the browser, go to http://localhost/socket.io/socket.io.js
13:50 < Xenos> How does one access the file
13:50 < Xenos> wow
13:50 < Xenos> ok
13:50 < Xenos> Service Unavailable
13:50 < niggler> use a different port
13:51 < niggler> you might not be able to host on 80
13:51 < niggler> actually, imho the examples should be using a port that's not 80
13:54 < Xenos> I've changed the port from 80 to 16500 in the app.js of the first example
13:54 < Xenos> When attempting to access http://localhost:16500/socket.io/socket.io.js, it simply cannot find anything
13:55 < Xenos> When it's just port 80, error 503
13:55 < Xenos> How do I execute the app.js alone to cause a change on the server side?
13:56 < niggler> did you restart node?
13:56 < niggler> actually that should also be explained
13:57 < niggler> you write the app.js and index.html, then go to the directory and run node app,js
13:57 < Xenos> I'm not sure howomw
13:57 < Xenos> I got it working
13:58 < Xenos> O_O
13:58 < Xenos> Well
13:58 < Xenos> It's not that it's working, but it is showing me the raw code of the page when I go to the link with the right port
13:58 < niggler> that's just to test you can see the socket.io.js file
13:58 < niggler> now go to http://localhost:16500/
13:59 < niggler> that probably will complain that you can't connect
13:59 < niggler> but make sure it doesn't complain about io being undefined first
13:59 < Xenos> Nothing about undefined
13:59 < Xenos> It simply gives me the raw code
14:00 < niggler> the index.html gives you raw code?
14:00 < jas-> I could use some assistance with creating a custom session store that can be used by express.js -> connect.js
14:01 < niggler> jas- did you look at connect.js's session middleware?
14:02 < jas-> niggler: Yeah, the session store I have created works, I can read/write session data however I end up with multiple session entries (MySQL backend) when I rotate the session id
14:08 < jas-> niggler: The destroy method does get called but occasionally fails to remove the old session id data, this is a very strange problem, however I believe it to be occurring due node.js asynchronous nature. Is there a way to force non-async?
14:08 < niggler> jas- so over time the old session ids aren't getting wiped?
14:09 < niggler> is it persistent for, say, a full day?
14:09 < Xenos> [16:06] <niggler> the index.html gives you raw code? <--- Yes, it simply prints out the contents of the html file when I open up http://localhost:16500/
14:09 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:10 < Xenos> Err
14:10 < Xenos> Ignore me on that one
14:10 < Xenos> I can handle it. It's painfully obvious that there are no html/head/body tags in the html file, only script tags, so what else did I expect it to do
14:11 < niggler> did you check the console?
14:11 < jas-> niggler: Not necessarily over time, as the gc (garbage collector) hasn't had time to expire old sessions. Technically speaking the session.prototype.regenerate() function (which is also customized to preserve session data while rotating the session id) simply copies the old session data to the new session id while removing the old session id (I believe this working some of the time, vs all...
14:11 < jas-> ...of the time) is due to the async nature, but I could also have my head up my ass at this point
14:12 < niggler> I'm not too familiar with what connect does for session, but that does sound strange jas-
14:13 < jas-> niggler: yeah, is there a method for forcing sync vs. async in node?
14:13 < niggler> did you consider putting a maxAge?
14:13 < jas-> niggler: yep
14:14 < Xenos> Resource interpreted as Script but transferred with MIME type text/html
14:15 < Xenos> It is an html page though.
14:16 < niggler> hmm i imagine that the socket.io.js is causing that message
14:17 < Xenos> Yes
14:17 < Xenos>           res.writeHead(200);         res.end(data);
14:18 < Xenos> That's a good start. Now I  need to figure out the client part
14:19 < Xenos> Does all nodejs related modules have to be "hosted" in this sense?
14:19 < Xenos> Is this why I couldn't go var raw = require("raw-socket"); in a script tag on my html page?
14:19 < Xenos> because they're separate?
14:20 < Trangar> xenos if you're sending an html page you're not parsing it, so everything in there will be send to the client and not executed
14:21 < niggler> Xenos the nodejs app responds to requests in /socket.io/
14:21 < niggler> that thing hosts a few files, including the core JS as well as a flash socket fallback and other magic
14:24 < PROUSER> Hi guys, Can anyone explain to me, why Microsoft is considered to be the shittiest corporation in the world?
14:25 < context> that needs an explaination ?
14:25 < context> s/i//
14:25 < zomg> PROUSER: I think there are arguably shittier companies than MSFT, for example Foxconn =)
14:28 < PROUSER> :) I just asked it because I needed to hear it from other people as I got really mad about them after reading some articles. I can't believe that they still exsist
14:29 < PROUSER> feel sorry for good people that work there
14:29 < niggler> PROUSER its FUD
14:29 < niggler> microsoft as a company has taken out many beloved companies
14:29 < niggler> they wrecked borland many years ago, for example
14:30 < niggler> but they are now the bogeyman, so even though other companies do far worse you don't hear much about them
14:30 < niggler> id argue, for example, that Facebook is a worse company
14:30 < PROUSER> because?
14:30 < steven_> HI, I have a question regarding to the socket.io, can I use setTimeout to bind and unbind the even from client side?
14:31 < Trangar> I like microsoft, but I don't really feel like arguing right now... :P
14:31 < niggler> certain policies
14:31 < PROUSER> oh, how can any1 like microsoft ? after what they do to their customers
14:31 < niggler> i wouldn't say i like microsoft
14:31 < niggler> lets say I'm ambivalent
14:32 < Trangar> They had their good and bad moments, but honestly which company hasn't?
14:32 < Trangar> They're just a big and easy target to hate for most people, I've personally worked with microsoft products for years and I'm specialised in C#, and I can't really complain much
14:32 < niggler> its about the nature of the good and bad moments Trangar 
14:32 < niggler> take google -- its difficult to find a bad moment on the same order as microsoft or facebook
14:32 < pachet> niggler that we know about yet
14:33 < Trangar> It's a company, I don't expect them to do anything good if it doesn't give them straight profit
14:33 < niggler> that's very true pachet 
14:33 < niggler> always an important caveat
14:33 < Trangar> And google controls pretty much all information we see :P Think about that for a second
14:33 < niggler> they control all information Trangar because we trust them with it
14:33 < PROUSER> hmm not really we can always use duckduckgo
14:33 < Trangar> steven_ are you talking about events?
14:34 < niggler> if you don't trust google, use duckduckgo, host your own email, etc
14:34 < niggler> its not impossible or particularly hard
14:34 < Trangar> I'm not a big enough target for google to do something with my information, especially because I'm not american
14:34 < Trangar> So I really don't care too much :P
14:34 < niggler> that's not the point though
14:35 < niggler> you have to trust that the operators won't do something shady
14:35 < niggler> and i think its a fair statement that more people trust google not to do something shady at this moment than pretty much any other tech company
14:35 < steven_> Trangar yes
14:36 < Trangar> I trust that google sells every bit of information they get their hands on, but so does every company
14:36 < Trangar> steven_ you can just use removeListener, http://nodejs.org/api/events.html#events_emitter_removelistener_event_listener
14:36 < Trangar> Either that or once if that suits what you need, http://nodejs.org/api/events.html#events_emitter_once_event_listener
14:37 < steven_> Trangar oh, nice, didn't notice that, thanks!
14:37 < PROUSER> Google does sell it but only because they are made to do so
14:37 < PROUSER> while microsoft
14:37 < PROUSER> just sell it because it's good for business 
14:37 < calderon> hello
14:37 < zomg> PROUSER: and you know this because...? :P
14:38 < PROUSER> http://www.guardian.co.uk/world/2013/jun/09/edward-snowden-nsa-whistleblower-surveillance
14:38 < calderon> i have a question about node module exports and jsdoc
14:38 < PROUSER> + a lot of other articles
14:38 < niggler> Trangar i understand google's business model and how little information needs to be sold in order to make money
14:38 < zomg> PROUSER: and you actually believe when Google claims that they don't know about it and don't believe when MS makes the same claim? =)
14:38 < niggler> google can demand strong CPM for most things because the ads make sense
14:38 < niggler> zomg google and microsoft both know about it
14:38 < Fuzzyma> Hey there. Iam using express with compoundjs. There you have a simple function to update a model in the database: 
14:39 < Fuzzyma> this.album.updateAttributes(req.body.Album, function (err) {
14:39 < niggler> there should be zero doubt that every company identified in the prism presentation knew about it
14:39 < Fuzzyma> but if you have a checkbox in this Album, you cant imagine whether it wasnt checked
14:39 < Fuzzyma> cause it wouldnt appear in the req.body.Album
14:39 < Fuzzyma> therefore this value would not be changed
14:39 < Trangar> niggler have you ever worked with something like google analytics? 
14:39 < Fuzzyma> any way of fixing this without checking for every checkbox in my form?
14:39 < calderon> I need help with this: http://jsfiddle.net/vSSRr/
14:40 < niggler> google analytics is great Trangar 
14:40 < niggler> i mean, its not as great as your own logs
14:40 < niggler> are you asking about the business model there?
14:40 < Trangar> Nah just saying
14:41 < niggler> i don't doubt they are tracking behavior on google analytics
14:41 < Trangar> Google's business model IS selling information, whilst microsoft's biggest income is selling applications
14:41 < niggler> do you consider their ad-based search to be selling information?
14:42 < niggler> well i guess now with google+ it is
14:42 < Trangar> Their directed adds are pure information gathering and selling though
14:42 < niggler> you are telling them what you want and they are getting it
14:43 < niggler> i distinguish between search driven ads (search for camera, see ads for kodak or whatever) and information driven ads (ads based on information they gathered about you)
14:43 < Trangar> Just like facebook, which made me very amused when everyone freaked out that the CIA was doing something with that information
14:43 < Trangar> Whilst user put it on there themselves
14:43 < niggler> that's just retarded
14:43 < niggler> when you put your personal information on the internet
14:44 < niggler> you have to assume its available for everyone to see
14:44 < Trangar> I think there was a jury case where the judge said that "everything on someone's twitter is private, even though it's publicly available"
14:44 < Trangar> Some people are so retarded
14:45 < PROUSER> You have to assume, buy you would never agree for it be used without your permission, so when you put stuff on facebook you agree that your friends will use this info, but not US government.
14:46 < niggler> that logic doesn't make sense TBH PROUSER
14:46 < PROUSER> Some people are retarded but it still doesn't give you rights use use it
14:46 < niggler> when you sign up
14:47 < PROUSER> why is that?
14:47 < niggler> you agree to their terms of service
14:47 < zomg> if you don't want the US government to use something you put on the internet
14:47 < niggler> and "being too lazy to read the terms of service" doesn't fly
14:47 < zomg> you probably should be using Tor and be anonymous
14:47 < zomg> :D
14:47 < niggler> pol tor is a troll zomg 
14:47 < PROUSER> so is it actually said there now  that "1.3.5" - You agree that we may provide all information to US government on the first request?
14:47 < zomg> niggler: huh?
14:47 < niggler> i don't doubt that US government agencies run some of the nodes zomg
14:48 < niggler> i meant to say lol but it was autocorrected to pol
14:48 < zomg> heh
14:48 < zomg> and yeah they probably run a lot of exit nodes
14:48 < niggler> PROUSER this isn't germany
14:48 < niggler> in germany IIRC protection is the default
14:48 < niggler> here, unless it explicitly says that they won't give the information, you aren't protected
14:49 < PROUSER> they just tricking people who are not educated enough
14:50 < calderon> hello
14:50 < PROUSER> that's not right, I believe companies like microsoft and apple were first to sing up with US government
14:50 < calderon> i have a question about node module exports and jsdoc
14:50 < niggler> calderon just ask
14:50 < calderon> got this
14:50 < calderon> http://jsfiddle.net/vSSRr/
14:50 < calderon> i cannot get the jsdoc out
14:51 < calderon> tried @internal, @inner, @function with @memberOf
14:51 < calderon> i know i can set the doc to the object that i return, but there are methods that i want to document that's not return
14:51 < niggler> don't you need a @module
14:51 < calderon> tried that too
14:52 < calderon> but do i set it to the method or at the top?
14:52 < niggler> what jsdoc are you using?
14:52 < calderon> https://github.com/jsdoc3/jsdoc
14:52 < calderon> installed through npm
14:52 < niggler> does module.exports = { foo: "bar" }; do the right thing?
14:53 < niggler> I can see how it would have problems with IIFE
14:53 < calderon> IIFE?
14:53 < niggler> immediately invoked function expression
14:54 < calderon> sure, but i should work with @internal though?
14:54 < niggler> imagine something more complex calderon 
14:54 < niggler> if your thing said if(somevar=3) return {foo:"bar"}; else return {baz:"aux"}
14:55 < niggler> how would it know if your module exported foo or baz
14:55 < calderon> sure
14:55 < calderon> but cant i skip that "check" by setting the internal methods as a part of a class / member?
14:55 < calderon> with @memberOf for instance?
14:58 < calderon> i have tried the @scope as well
15:07 < volitek> How do I switch to being a production server rather than development? And if I switch the port to port 80, how should I set that up, because I guess running as root is unwise, and www-data user doesn't seem to be able to which I thought it would...
15:08 < bajtos> hi, has anybody experienced problems with Isaac's node-tar module not working on v0.10? 
15:08 < bajtos> the very example he has on github (https://github.com/isaacs/node-tar/blob/master/examples/extracter.js) does not work for me
15:11 < bajtos> never mind, it was my fault - I was using an older version of tar
15:14 < zerodrama> is there a way to code node.js like with php -> <?javascript code code code ?>HTML
15:18 < volitek> zerodrama: you know you can put javascript in with script tags? what are you asking?
15:18 < zerodrama> server side
15:19 < volitek> in the html templates?
15:19 < zerodrama> ya
15:19 < volitek> there's a bit of programming you can do
15:19 < volitek> like for loops
15:19 < volitek> ifs
15:19 < pachet> just find a template language that supports interpolation
15:20 < zerodrama> could do that
15:20 < ajf> OK, I have a problem.
15:20 < ajf> node seems to be caching the value of a file resd with readFileSync
15:20 < ajf> if I delete the file, error
15:21 < ajf> if I don't, it reads some cached version
15:21 < ajf> it's bizarre
15:21 < ajf> the return value of that function doesn't correspond to the actual file content!
15:22 < zerodrama> but i want to proxy from lighttpd to node.js and run requests from node...
15:44 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:57 < sander__> hi
15:57 < sander__> anybody here?
15:59 < sander__> I am new to node.js, have been puzzling all day with simple things that i can't seem to get my head around.. anybody can offer me some help?
16:00 < paulkon> sander_: what do you need help with?
16:03 < pringlescan> has anyone used kendoui? if so, how did you like it?
16:04 < owen1> when i child.kill(), the exit code is null, any idea why?
16:04 < owen1> (child_process.spawn)
16:06 < shvelo> Ahoy!
16:08 < prettyrobots_> So, are we all running Harmony now?
16:08 < mscdex> owen1: check the second argument (signal)
16:09 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:09 < owen1> what is the difference between 'running a command in a shell' vs 'launches a new process' ?
16:09 < spion> yup
16:09 < owen1> mscdex: still null
16:10 < owen1> the signal is SIGTERM
16:10 < owen1> the code is null
16:10 < mscdex> there you have it :-)
16:10 < shvelo> I'm going to write an Arduino IDE in Node.js
16:10 < owen1> why isn't the code 0 or 1?
16:10 < Trudko> guys are there web apps for which you would not use nodejs? Apps where nodejs nature just doesnt fit and could cause problems.
16:11 < mscdex> owen1: if the process ends due to a signal (especially SIGKILL or SIGTERM), there can't be an exit code
16:12 < mscdex> because it was interrupted
16:12 < nackjicholson> Trudko: nope, do it with node.
16:12 < owen1> mscdex: got it
16:12 < owen1> mscdex: also, what is the difference between running a command in a shell (.exec) and lunching a new process (.spawn) ?
16:13 < owen1> running a command in a shell does not create a new process?
16:13 < owen1> but runs withit my node process?
16:13 < mattrichards> Anyone in here got any experience implementing middleware for Restify (express/connect)?  Any insight welcomed; http://stackoverflow.com/questions/17074605/restify-js-connect-express-middleware-ignoring-call-to-next
16:19 < mscdex> owen1: well, for one, exec() buffers the output until the process ends
16:21 < TonkaTruck> http://dustinsenos.com/articles/customErrorsInNode Where would be a good place to define these in an express app?  
16:24 < Trudko> nackjicholson: i am bit worried that i shouldn try it on new larger project if i already dont have some experience with. This ofc applies for any technology, but node  and frameworks based on it seem still  still relatively new and experiemntal.
16:24 < TonkaTruck> nm
16:24 < nackjicholson> true, man i was kind of joking. It will have a learning curve
16:25 < owen1> mscdex: true, but does exec() works without seperate process?
16:30 < mattrichards> updated the question with a more generic representation of the problem; http://stackoverflow.com/questions/17074605/restify-js-connect-express-middleware-ignoring-call-to-next-within-promise-c
16:46 < Domenic_> owen1: no, child_process module always spawns a ... child ... process
16:54 < Trudko> OK it seems that i will use nodejs but I wont do with some big heavy framework because  there doesnt seems to be any mature one out there. AFAIK meteor is best one in that sense and its API still might change according to authors.
16:55 < Trudko> So I should go for express + some smaller npm packages. Sounds ok guys?
16:55 < zomg> That's probably a quite common approach
16:56 < owen1> Trudko: small packages. i use something like this - https://github.com/oren/node-website-template
16:56 < owen1> Domenic_: thanks. 
16:56 < gildean> Trudko: people using node don't usually like heavy frameworks but instead build apps from smaller modules
16:56 < sander__> how do i get my node.js output to show in html, can anybody help me or forward me to a good tutorial?
16:57 < Trudko> gildean: seems that i dont have really other chocice especially because I don't have much experience with ndoe.
16:58 < dypsilon> sander_, you just asked 10 different questions... could you narrow your question down, a bit?
16:58 < owen1> sander__: https://github.com/oren/oren.github.com/blob/master/posts/serve-page/serve.md
17:01 < jasonaller> I've been using soap-js to make SOAP calls to an https server and it was working, then I upgraded to v0.10.10 and now I'm getting some Error: read ECONNRESET at errnoException (net.js:884:11) at TCP.onread (net.js:539:19) 1 errors randomly. I'm pretty sure it is the same issue as https://github.com/joyent/node/issues/5360
17:04 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:05 < jasonaller> but a difference is that the SOAP service I'm connecting to is hosted on a tomcat server, not IIS
17:07 < over_> anyone can tell me, is there a simple way/method to convert html form data to JSON?
17:08 < ajf> oh
17:08 < ajf> I am so fucking dumb
17:08 < ajf> the bug was
17:08 < ajf> 1) runs local dev server
17:08 < ajf> 2) goes to production site
17:08 < ajf> 3) gets surprised
17:09 < ajf> xD
17:09 <@isaacs> ircretary: tell JamesMGreene npm help tag.  tl;dr - `npm tag $modulename@$actualLatestVersion latest`
17:09 < ircretary> isaacs: I'll be sure to tell jamesmgreene
17:09 < TorpedoSkyline> <3 ajf ;P
17:09 < ajf> seriously I was really confused about how it could possibly not reflect changes
17:09 <@isaacs> substack: Re jamesmgreene's question last night: npm help tag.  tl;dr - `npm tag $modulename@$actualLatestVersion latest`
17:10 <@isaacs> ircretary: tell JamesMGreene Also, in the future, you can do stuff like `npm publish --tag=not-actually-latest` to not assign the `latest` tag to it.
17:10 < ircretary> isaacs: I'll be sure to tell jamesmgreene
17:10 <@isaacs> substack: Also, in the future, you can do stuff like `npm publish --tag=not-actually-latest` to not assign the `latest` tag to it.
17:27 < Samuel_Roldan> hi fellas, quick question, how can i specify in the package.json to install a package as global -g
17:30 < dypsilon> Samuel_Roldan, I think it's a decision the user has to make, so you can't force global.
17:30 < Trudko> owen is this another alternative to whatr you  proposed right ?  https://github.com/isaacs/npm-www
17:30 < Trudko> isaac i guess you are author of this ? :) https://github.com/isaacs/npm-www
17:30 < taaz> Samuel_Roldan: you could add the preferGlobal option to suggest it be global
17:31 < Samuel_Roldan> perferGlobal eh? need to read up on that
17:31 < alexwhitman> https://npmjs.org/doc/json.html#preferGlobal
17:32 < Samuel_Roldan> it seems like preferGlobal would install all the dependencies globally. I just want to install one single dependency globally
17:33 < alexwhitman> You shouldn't install globally unless your package is primarily an application.
17:34 < jmar777> [ANN] just published v0.2.0 of suspend (generator-based control-flow for node): https://github.com/jmar777/suspend
17:34 < Samuel_Roldan> @alexwhitman, I'm trying to set up KSS for all the dev team. Kss requires to install globally to run GUI
17:35 < jmar777> been playing with the API quite a bit, and I think this new version makes common use cases a lot more trivial, while not presenting too many hoops for the more complex scenarios
17:35 < jmar777> feedback is greatly appreciated :)
17:36 <@MI6> joyent/node: isaacs created branch v0.10.11-release - http://git.io/W9iKew
17:37 < Stew-a> i'm having some difficulties with the bignum package on npm - i eventually got it installed manually since npm was having difficulty with it, but had to link it against my own  version of openssl, it seems to work until i try to actually call a method on a BigNumber object when node just silently dies. Has anybody actually got this package working? (Preferably on Windows)
17:39 < jasonaller> in http://git.io/W9iKew will 0.10.11 likely fix the ECONNRESET errors when released?
17:41 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:42 < werle> yo tjholowaychuk
17:47 <@isaacs> jasonaller: depends
17:48 <@isaacs> jasonaller: chances are, if you're getting ECONNRESET in 0.10, but not in 0.8, the error was improperly swallowed in 0.8
17:48 <@isaacs> jasonaller: is the other side resetting you?
17:48 < jasonaller> isaacs yes, it was working in 10.6
17:49 < jasonaller> isaacs I'm considering a remove and install 10.6 to verify that it was working then
17:49 <@isaacs> jasonaller: what does get fixed in 0.10.11 is some socket.io breakage, and some spin-loops on old linux kernels where sockets hang in CLOSE_WAIT forever
17:50 < jasonaller> I think mine is just the https handshake getting dropped. Other tools have no problems getting to the wsdl, but node is now having sporadic errors
17:51 < Stephen> I ran into some of that with httpp
17:51 < Stephen> It seems the old libs aren't written to handle that error
17:52 < jasonaller> node-soap hasn't pulled in the fix from soap-js so maintenance there isn't active
17:54 < asterick> My strong typed number structures lib I threw together last night: https://github.com/asterick/struct.js
17:54 < asterick> (if anyone wants it)
18:00 < gishmel> looks interesting thanks for sharing
18:00 < asterick> Forgot to document arrays, but those are in there.
18:04 < ericelliott> Anybody know if there's a way to check the status of a q promise to see whether or not it has been resolved?
18:05 < rhalff> asterick, "identifiers my not begin", only comment I can make, too low level for me :-)
18:05 < asterick> rhalff: literally threw that together like 5 minutes ago. xD but thanks!
18:06 < asterick> ericelliott: https://github.com/kriskowal/q/wiki/API-Reference#state-inspection-methods
18:12 < jasonaller> issacs I reverted to 0.10.6 and the error with ECONNRESET is gone
18:12 < Fallout2man> Hey, kind of new to working with nodeJS. My boss wants us to learn compound JS in specific. Does anyone know any good tutorials? Specifically ones that'd explain JugglingDB and creating complex schemas?
18:13 < Fallout2man> The tutorials on their site don't really get into much and basically just tell you to "explore" the scaffolds it can generate for very basic things.
18:13 <@xyxne> Fallout2man, this is the first I've heard of compound js
18:13 < Fallout2man> xyne: It's an MVC framework for NodeJS. If you know of a better one please let me know.
18:14 <@xyxne> Fallout2man, express is pretty widely supported
18:14 <@xyxne> Fallout2man, supported as in there are a lot of people using it
18:14 <@xyxne> Fallout2man, and there's a decent amount of documentation
18:15 < pickels> is there are shortcut for npm remove module --save && npm install module --save?
18:15 < Fallout2man> xyne: danke, will go and take a look. If this has more support it shouldn't be so hard to convince my boss to switch frameworks. :)
18:15 < pickels> a*
18:15 < hallas> Anyone know of a node.js library that would enable me to do string formatting like lib.format('@user_name deleted @article_name', { user_name: 'Test', article_name: 'test article'}); ?
18:15 <@xyxne> Fallout2man, it also gives you more freedom to choose your routing/templates/etc
18:15 <@xyxne> hallas, node comes with that
18:15 <@xyxne> hallas, util.format
18:15 <@xyxne> except w/o named parameters
18:15 < hallas> I need the named parameters 
18:19 < rhalff> asterick, thanks you've helped me to define the boundaries of my own intellect *tries to understand peg.js*
18:19 < asterick> peg.js is AWESOME.
18:20 < asterick> It doesn't produce very efficient parsers, but it is a lot easier to write than Jison.
18:20 < ericelliott> asterick: thanks for the q help. =)
18:20 < Fallout2man> xyne: I'm liking it already, :) much, MUCH better documentation. 
18:20 < hallas> xyxne found strformat, does the job
18:28  * LargePizza  Picture of my ex-girlfriend naked: http://imagetwist.com/mfryntbe0bsj
18:30 <@mbalho> WTF people
18:31 <@mbalho> xyxne: can you kickban people that arent online
18:31 < jas-> sounds legit
18:31 < gildean> mbalho: you can ban, sure
18:32 < gildean> kick obviously not
18:32 <@mbalho> ohhh
18:32 < mattrichards> Finally resolved the issues I was having with Restify.js middleware with two possible solutions! FYI http://stackoverflow.com/questions/17074605/restify-js-connect-express-middleware-ignoring-call-to-next-within-promise-c/
18:32 <@mbalho> gildean: thanks. i only ever kick or kickban, im a noob op
18:33 < gildean> mbalho: yeah, the kickban is actually just a ban followed by a kick, it's just a convenience method
18:34 <@MI6> joyent/node: isaacs created tag v0.10.11 - http://git.io/eTmbeg
18:36 -!- mbalho changed the topic of #Node.js to: node.js is but one javascript node alone in a sea of nodes - http://nodejs.org - http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
18:38 <@MI6> joyent/node: isaacs v0.10 * 17d00f1 : Now working on 0.10.12 (+2 more commits) - http://git.io/_9dzEg
18:38 < pirho> sick
18:38 < pirho> http://nodejs.org/download/
18:38 <@MI6> joyent/node: isaacs v0.10 * fc4b405 : blog: Release 0.10.11 - http://git.io/vGzbww
18:38 < Kakera> how do you tell that your node.js program is leaking?
18:39 < brostachio> do you fine lads have any suggestions on what orm to use with mysql?
18:39 < jas-> valgrind
18:39 < Kakera> jas-: how would valgrind help? it only detects unaccessible memory, which is automatically freed by v8
18:40 < vampi-the-frog> Kakera: just try it already
18:40 < vampi-the-frog> a C extension might be leaking
18:41 < Kakera> the only native extension I'm using is protobuf, and it doesn't do any dynamic memory allocations
18:42 < Kakera> anyway, it seems the memory usage stopped growing after 2 hours of uptime
18:44 < jas-> Kakera: Does it use another library? According to configure.ac @http://code.google.com/p/protobuf/source/browse/trunk/configure.ac it links to zlib
18:46 < niggler> is there a way to preview what files will be pushed in an `npm publish`?
18:47 < boulderdave> an app I'm trying to get running needs nodejs and nodejs-dev packages… it requires version 0.10.10.  I have nodjs installed in that version, but am having problems finding the dev package in that version for my version of ubuntu (precise pangolin - which comes with 0.8.22 by default)  any ideas?
18:47 < Kakera> I think I wasn't clear. I'm not asking what could be causing a leak. I'm asking for symptoms of a leak
18:47 < Kakera> basically, how long does the memory usage have to keep growing before I can suspect a problem
18:48 < vampi-the-frog> great release in bladder
18:49 < jas-> Kakera: Depends on the operation(s)
18:50 < niggler> Kakera keep track of the variables you are initializing
18:50 < Kakera> it initializes a lot of temporary stuff
18:50 < jas-> Kakera: Perform garbage collection if you suspect a loop is spiking the memory
18:51 < niggler> also check out memwatch Kakera 
18:51 < niggler> npm.im/memwatch
18:51 < someprimetime_> niggler sup
18:51 < niggler> sup someprimetime_ 
18:51 < someprimetime_> aka nirk
18:51 < someprimetime_> nm
18:52 < someprimetime_> do you have any exp. dealing with trademark violators?
18:52 <@MI6> joyent/node: isaacs created branch v0.8.25-release - http://git.io/sN36XA
18:52 < niggler> fortunately / unfortunately I have no direct experience, although I do know some people who do
18:52 < jas-> Kakera: strace can help in some instances (have to filter a ton with node though)
19:04 < jas-> Kakera: You could also use gdb to run your process and step through the memory addressing (fairly tedious)
19:05 < Kakera> jas-: like I said, I haven't yet confirmed that I have a problem at all
19:05 < jas-> Kakera: Just giving tools, but since you obviously have it under control I will stfu
19:06 < olalonde> http://stackoverflow.com/questions/7142890/remove-an-array-element-by-index-in-javascript
19:06 < olalonde> can anyone explain what the ~ does in the answer
19:07 < Kakera> inverses the bits
19:07 < Kakera> anything that is not -1 becomes truthy
19:08 < asterick> Added endian support to struct.js, as well as sped up bit packing.
19:09 < Kakera> asterick: link?
19:09 < niggler> lol https://github.com/hagino3000/Struct.js
19:10 < Kakera> I did google struct.js to no avail
19:10 < niggler> there are a few
19:10 < niggler> nothing in github was updated recently
19:10 < Kakera> oh, I thought this one was for struct-packing
19:11 < niggler> Kakera i literally searched struct.js on github and found that
19:11 < asterick> Kakera: github.com/asterick/struct.js
19:11 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:11 < asterick> It probably isn't on google, as I created the repo like 2 hours ago.
19:11 < niggler> asterick you said "Added endian support to struct.js, " as if we were supposed to know what it was
19:12 < asterick> niggler: because I mention struct.js 2 hours ago in here when I created the repo. ;)
19:12 < Kakera> but does it support 64-bit ints
19:12 < asterick> Kakera: not yet. :(  mostly because javascript has issues with dealing with integers larger than 32bits
19:13 < niggler> asterick you should write a big number library
19:13 < asterick> niggler: I did at one time.  It made me want to cry. xD
19:14 < niggler> lol
19:14 < asterick> mostly the toString function
19:14 < niggler> you should also put it up on npm asterick 
19:14 < niggler> toString actually isn't the hardest part
19:14 < asterick> niggler: I may eventually, I want to get it more optimized before I cram it in there.
19:15 < asterick> niggler: what would you say the hardest part is?
19:16 < asterick> Most of the basic math stuff wasn't bad.
19:16 < asterick> I just hate the algorithms for converting an integer to a string without using div/mod.
19:16 < niggler> square root was tricky
19:16 < niggler> well the problem is
19:17 < niggler> you either use some really shady algorithm
19:17 < niggler> or you try to use what looks like newton iteration
19:17 < niggler> except to do that you need a proper big float or big fixed  implementation
19:18 < asterick> Yea.  I was only doing basic math in my bigint lib, and then using that to implement a big float
19:18 < asterick> anything dealing with exponents is genuinely pretty horrible.
19:37 < Zaxnyd> what do you guys use for performance profiling?
19:39 < jeffwhelpley> Is there a pattern or framework out there that is built to enable separation of code into "apps" similar to the way python django works. In other words, you organize your code into small applications that have depdancies.
19:40 < niggler> Zaxnyd download more ram
19:40 < niggler> http://www.downloadmoreram.com/ lol
19:40 < Zaxnyd> lol
19:40 < Zaxnyd> sweet, I just got some.  my computer is running so much better now.
19:48 < niggler> if throwing more ram at the problem isn't solving the issue, use node-profiler
19:48 < niggler> or just run node --prof
19:51 < Zaxnyd> great I'll try that.  thanks.
19:54 < dypsilon> niggler, my antivirus sais, that this ram has got viruses. why are you spreading viruses?!
19:55 < niggler> dypsilon i think you may need a new computer
19:56 < niggler> and/or to call the geek squad
19:56 < jas-> niggler: That is a ton better than running strace 
19:56 < niggler> strace is different though
19:56 < niggler> jas- strafe just tracks syscalls
19:56 < niggler> *strace
19:56 < niggler> but i thought Zaxnyd wanted something that looked like gprof
19:57 < jas-> niggler: yes, and using it on node doesn't give you a big enough picture
19:57 < nathan7> jeffwhelpley: modularity on node is easy, you don't need an extra framework around things
19:58 < niggler> yo dawg, heard you like frameworks
19:59 < Zaxnyd> I don't care what it looks like, so long as it helps me find bottlenecks.
19:59 < jas-> jeffwhelpley: EX (module.js) module.exports = function(args) { /* ... */ } var mod = require('./module')
20:02 < poincare1011> Hi guys. I have been writing some code in Ruby, and I think I see the appeal of Node. here's the rails code: http://pastie.org/8040228 Basically, I'm trying to do ajax long polling, and if a request is left hanging, this code basically locks the entire server up. Does node solve this problem?
20:03 <@mbalho> poincare1011: yep
20:03 <@mbalho> poincare1011: look up evented ruby servers, there are a few
20:03 < poincare1011> mbalho: is there any way to do this kind of thing with Rails? God, I spent the past 2 weeks banging out Rails code like no other...
20:04 < jeffwhelpley> @nathan7 and @jas, I get modularity in node at that level, but for example at the web app level if you use something like Express, you may have a views folder with your views and perhaps a routes folder with your routes or whatever. when you app gets big, frameworks like python django encourage splitting up your code into "apps" like /app1/views and /app2/views instead of having 100 templates 
20:04 < jeffwhelpley> files in /views or doing something like /views/app1 and /views/app2. Anyways, it is easy enough to just build something on my own to essentially handle the dependancies, but I was just curious if anyways has worked with something in node like that
20:04 < poincare1011> Also, what is the recommended database for Node.js? I don't care at the moment whether or not its fast. I need to be able to develop at the speed of freaking light at this point, though, so that is the primary concern.
20:05 < nathan7> jeffwhelpley: You can compose express apps
20:05 <@mbalho> poincare1011: i havent done rails for a long time, sorry
20:05 < poincare1011> mbalho: darn it.
20:05 < nathan7> jeffwhelpley: http://vimeo.com/56166857
20:05 <@mbalho> poincare1011: what problem are you trying to solve
20:05 < poincare1011> mbalho: basically sending data/updates to the client.
20:05 < nathan7> poincare1011: You might want to look into Faye
20:06 < poincare1011> nathan7: But, I'd have to run a separate server and i couldn't do that on heroku :( Heck, you guys know more about Rails than the folks at #ruby and #rubyonrails...
20:06 < niggler> there's no #rails channel poincare1011 ?
20:06 < squeakytoy> anyone can recommend where i could host my node-express-site solution that uses a mysql database?
20:06 < jeffwhelpley> ahhh! @nathan7 exactly what I was looking for. thanks!
20:06 < poincare1011> niggler: they literally don't know anything about realtime.
20:06 < nathan7> poincare1011: No
20:06 < nathan7> poincare1011: You can attach it to any Rack server
20:07 < poincare1011> nathan7: you can? That's fantastic! Thanks a lot.
20:07 < nathan7> I haven't ever done anything in Ruby
20:07 < nathan7> I did a hello world recently (whoo)
20:07 <@mbalho> poincare1011: yea faye is a protocol it has multiple implementations
20:07 < poincare1011> mbalho: okay, got it.
20:08 <@mbalho> poincare1011: generally speaking the real time stuff is bolted on top of rails and isnt as nice as in node, but its probably better than starting your whole project over
20:08 < nathan7> I wanna try Rails one day, just to understand the appeal of it
20:08 < poincare1011> mbalho: I'll probably end up doing it over. This is just shitty.
20:08 < nathan7> Faye for Ruby is a pretty okay solution
20:08 < poincare1011> nathan7: If you are writing a modern, realtime app, don't use Rails. I've learned that quickly.
20:09 < nathan7> poincare1011: Yeah
20:09 < nathan7> poincare1011: Sails might interest you
20:09 < nathan7> poincare1011: http://sailsjs.com/
20:09 < poincare1011> nathan7: I will check that out.
20:09 < wc-> also derby and meteorjs
20:09 < nathan7> Screw Meteor.
20:09 < wc-> lol, knew that was coming
20:10 < poincare1011> Another question - what is the recommended database where I need incredibly quick dev time and don't care too much about scalability? 
20:10 < wc-> mongo
20:10 < nathan7> MangoDB!
20:10  * wc- ducks
20:10 < nathan7> (mangoDB is a database that throws all data away, a more deterministic version of MongoDB, which sometimes keeps your data)
20:11 < nathan7> I'm a huge CouchDB fan
20:11 < nathan7> But LevelDB is pretty awesome as a build-your-own-DB-solution
20:11 <@mbalho> poincare1011: i use all of these https://github.com/rvagg/node-levelup/wiki/Modules
20:11 < wc-> ive been using mongo for hte past 2 years, im really intrigued by couch and leveldb
20:11 < s5fs> gf3: ping
20:11 < nathan7> I gotta build me some LevelDB things
20:11 < poincare1011> couchdb sounds interesting
20:11 < s5fs> I'm using raspbian, how can I get forever to start at boot? I tried throwing it in rc.local but no love.
20:14 < gf3> s5fs: pong
20:14 < s5fs> gf3: please see above
20:14 < gf3> Raspbian?
20:14 < s5fs> gf3: yeah, but i guess it's a more generic problem than that. i was referred to you by ryanneufeld, he says you know forever
20:15 <@mbalho> question is actually: how to launch processes on login with debian
20:15 < gf3> Oh—I stopped using forever because it stopped being good
20:15 < s5fs> haha!
20:15 < s5fs> mbalho: oh hi!
20:15 <@mbalho> i'd recommend mon + mongroup
20:15 < s5fs> okay so here's my situation
20:15 < gf3> I now use upstart and sometimes monit
20:15 < s5fs> i'm at jquery conf and I've got 30 raspberry pis that I have to get software working on correctly
20:15 < s5fs> I'm used to use systemd to manage my node stuff in production
20:16 < M28> child.kill(); isn't able to terminate my child process...
20:16 < M28> nor child.kill('SIGKILL');
20:16 < M28> I'm using windows btw
20:17 <@mbalho> s5fs: see bottom 3 files https://gist.github.com/maxogden/4322201
20:17 <@mbalho> s5fs: tl;dr i installed upstart on mine
20:17 < gf3> ↑
20:17 < gf3> That
20:17 <@mbalho> s5fs: cause i am a linux noob and didnt know how to use the thing that ships with it
20:17 < gf3> mbalho: Also upstart it nice, and x-platform
20:17 < gf3> *is nice
20:18 < s5fs> crap
20:18 <@mbalho> s5fs: also i wrote that before you could install node from nodejs.org/dist
20:18 < s5fs> i have node installed, my env works fine AND i can use forever if I kick it off after boot
20:18 < s5fs> okay, new question
20:18 <@MI6> joyent/node: isaacs created tag v0.8.25 - http://git.io/qGMKHQ
20:19 <@xyxne> has anyone really been far even as decided to use even go want to do look more like?
20:19 < s5fs> is there another watcher i could use similar to 'forever -w' or nodemon?
20:19 < s5fs> xyxne: yah but no but yah
20:19 <@xyxne> s5fs, supervisor
20:19 <@xyxne> s5fs, fs.watch
20:19 <@mbalho> s5fs: i already recommended mon + mongroup for that
20:19 < gf3> Or monit
20:19 <@mbalho> s5fs: oh wait you mean reloading?
20:19 <@xyxne> s5fs, I made something for my particular use case a long time ago that does that too
20:20 <@xyxne> but it also does stuff like push bundles via rsync
20:20 < s5fs> yeah i just need basic basic
20:20 < nathan7> xyxne: Certainly.
20:20 <@xyxne> https://github.com/nexxy/nice-package
20:20 < s5fs> start on boot somehow, then keep it up if it crashes, and watching the dir would be slick too
20:20 <@xyxne> nathan7, oh good :)
20:20 <@xyxne> oh
20:20 < s5fs> clearly as i get sick of this project my feature set is getting reduced ;-)
20:20 <@xyxne> s5fs, upstart + launch via supervisor
20:21 < s5fs> xyxne: how long does it take to install upstart on raspbian? or is that what it ships with?
20:21 <@xyxne> idek
20:22 < s5fs> xyxne: thats the biggest deal, time contrained
20:22 < s5fs> bah and spelling fail
20:22 <@xyxne> yeah
20:22 <@xyxne> speeling fial
20:22 <@MI6> joyent/node: isaacs v0.8 * 1a39380 : Now working on 0.8.26 (+2 more commits) - http://git.io/Eu6iKg
20:23 < patrickod> anyone here use connect-assets? I'm wondering if there's an easy way to have it auto-compile things on deploy rather than waiting for a HTTP request for them
20:23 < patrickod> having issues on multiple hosts right after a deploy where some have complied the asset and others have yet ot 
20:23 <@MI6> joyent/node: isaacs v0.10 * 4bca631 : doc: v0.8.25 changelog entry (+1 more commits) - http://git.io/QqHL2g
20:27 < jasonaller> isaacs I've now tested the ECONNRESET issue in 10.6 (works) and 10.10 and 10.11 (errors out)
20:29 <@tjfontaine> jasonaller: is there a minimal test case?
20:30 < jasonaller> tjfontaine not yet and I need to track down a publicly accessible wsdl on https that it consistently fails for
20:30 < petrogad> anyone have suggestions for how to deploy a node application to multiple boxes? specifically how to push updates to my node.js app
20:33 < ningu> petrogad: git push with hooks can work well
20:34 < petrogad> i was reading a bit on that but i'm worried that on a gridded system that's using rsync how best to issue the command to all the boxes
20:34 < ningu> petrogad: but the 'real' solution is using some sort of messaging system to notify the servers
20:34 < ningu> you could easily code something up with dnode
20:34 < petrogad> yea; wasn't sure if there was a common usage that someone had contrived
20:35 < petrogad> hmm ok ill look into that
20:35 < petrogad> thank you :)
20:44 <@isaacs> jasonaller: if you can't provide a minimal test case, than ANY test case is better than none.
20:44 <@isaacs> jasonaller: otherwise it's just "Node might have a bug maybe unless it's something else, can you fix it?"
20:46 <@isaacs> jasonaller: at the very bare minimum, a stack trace would e nice.
20:46 < jasonaller> isaacs I'll work on boiling one down, right now the server that I'm communicating with isn't public, so I need to find a publicly facing server running the same software that has https
20:46 <@isaacs> jasonaller: because i dont' have any idea what youer' talking about, really
20:46 <@isaacs> jasonaller: all i know is "works" and "doesn't work", but i don't even know what error you're getting, etc.
20:47 < jasonaller> isaacs sorry this was the ECONNRESET error from earlier today
20:49 <@tjfontaine> jasonaller: right but is there a stacktrace or any other additional information you can provide until you find something we can reproduce
20:49 <@isaacs> jasonaller: yeah. so. is the other side resetting?  sending invalid https?  just copy *everything* you have -- code, terminal output, expectations, etc -- and throw it in a gist.
20:50 <@isaacs> jasonaller: ECONNRESET means "The connection was reset"
20:50 <@isaacs> jasonaller: but i don't know where that's happening, or how, or why, etc.
20:52 < werle> can anyone here argument against the need for private variables?
20:52 < werle> argue*
20:52 < nathan7> There's no such thing as a public variable - except for globals, perhaps
20:52 < rossk> i always argue for global variables... global means sharing!  sharing is caring
20:52 < stride_> sharing is nice
20:53 < nathan7> global shared state isn't
20:53 < Gottox> nah, sharing is "don't caring" in therms of software design :)
20:53 < Gottox> -h
20:53 < rossk> :D
20:53 < Havvy> Unless you have security related code, privacy isn't needed.
20:54 < Gottox> Do we talk about code or data?
20:55 < werle> a lot of folks avoid prototypes and swear by the "module pattern" 
20:55 < werle> and use privates all of the place
20:55 < werle> makes it hard to test and seems like there is a lot of "magic" happening
20:57 < nathan7> The 'module pattern' can go fuck itself
20:58 < nathan7> It's a leftover from an age without real module systems
20:59 < pirho> ALL IS PERMITTED
20:59 < werle> @nathan7 my hero
21:04 < dypsilon> the problem is, we still don't have a standard way to write modules
21:04 < dypsilon> clientside and serverside
21:05 < dypsilon> in new ecmascript maybe, but until that gets supported...
21:05 < werle> I'm a pretty big fan of modules 1.1
21:05 < prettyrobots> mscdex: Are you on Twitter. (Asking for a fan.)
21:05 < prettyrobots> ?
21:05 < dypsilon> what modules 1.1?
21:05 < werle> CJS
21:05 < werle> http://wiki.commonjs.org/wiki/Modules/1.1
21:06 < werle> we have seen it work with AMD as well
21:06 < werle> so there is no excuse to continue to use the module pattern 
21:06 < werle> it is such a fucking headache 
21:06 < cerdita> Hi guys. Im trying to make a node app with jQuery, but i get an error because "jsdom" is not installed. So of course I try "npm install jsdom" and I get this error:MSBUILD : error MSB3428: Could not load the Visual C++ component "VCBuild.exe". To fix this, 1) install the .NET Framework 2.0 SDK, 2) install Microsoft Visual Studio 2005 or 3) add the location of t
21:06 < cerdita> he component to the system path if it is installed elsewhere."
21:06 < dypsilon> well i would be happy to have any uniform module system, whatever that is
21:06 < cerdita> What am I doing wrong?
21:07 < werle> @dypsilon I agree 
21:07 < dypsilon> werle, correct me if i'm wrong but the module pattern is the only common denominator right now, which you are able to shim in every module system
21:07 < nathan7> node's module system is pretty solid
21:08 < werle> @nathan7 yeah it is
21:08 < nathan7> You can translate that style to any style pretty much
21:08 < werle> @dypsilon I'm not sure I understand 
21:08 < dypsilon> nathan7, true, but the clientside world doesn't agree :(
21:08 < nathan7> dypsilon: browserify wraps it for the browser
21:08 < nathan7> dypsilon: component does the same in a static-analysis-free way
21:08 < dypsilon> nathan7, with some drawbacks...
21:08 < werle> @nathan7 +1 
21:08 < werle> @dypsilon you can use AMD
21:08 < dypsilon> does browserify/component support lazy loading?
21:09 < werle> @dypsilon no problem with that at all
21:09 < dypsilon> werle, true, what I really mean is publishing
21:09 < nathan7> dypsilon: Yeah, you can have a lazily-loaded bundle
21:09 < dypsilon> so if you want to publish a crossplattform package
21:09 < dypsilon> what do you do?
21:09 < dypsilon> nathan7, oh that's nice
21:09 < werle> the same thing you would do when publishing anything
21:10 < werle> make checks for AMD
21:10 < werle> exports
21:10 < werle> fallback to global
21:10 < mscdex> prettyrobots: i'm not
21:10 < dypsilon> well there is this: https://github.com/umdjs/umd
21:10 < nathan7> Yeah
21:10 < nathan7> browserify lets you build shit to UMD too
21:10 < werle> it does
21:10 < prettyrobots> mscdex: Trying to follow the noders who's libraries I depend on.
21:10 < mscdex> prettyrobots: my handle is taken on there anyway ;-)
21:10 < werle> @dypsilon http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html
21:10 < dypsilon> oh wow, that's cool, have to take a closer look at browserify
21:10 < prettyrobots> mscdex: I saw that.
21:11 < prettyrobots> mscdex: Cool. NP.
21:11 < dypsilon> i thought it's just a bundler
21:11 < tjh> dypsilon they both do
21:11 < werle> @dypsilon ridiculous 
21:11 < dypsilon> werle, what is?
21:12 < werle> @dypsilon the module pattern
21:12 < olalonde> anyone else cant publish to npm at the moment?
21:12 < dypsilon> werle, yeah it's ugly
21:13 < sinclair|net> how do you lot deal with complexity in node?
21:13 < dypsilon> hopefully ES will change it soon
21:13 < werle> hopefully everyone will stop using it
21:13 < dypsilon> sinclair|net, we don't write complex programs :)
21:13 < werle> use modules 1.1 and AMD on the browser if you need to
21:13 < sinclair|net> dypsilon: i do tho
21:14 < dypsilon> sinclair|net, make many simple programs who communicate with each others
21:14 < sinclair|net> dypsilon: i am doing that
21:14 < tjh> in practice that doesn't really make anything less complex
21:14 < tjh> you just wrap the complexity in a black box, which is all good
21:15 < tjh> but you still have node shitting on you from all directions
21:15 < tjh> (errors)
21:15 < dypsilon> could you clarify? node isn't shitting on me from all directions :)
21:16 < sinclair|net> dypsilon: well, node isn't exactlt fault tolerant 
21:17 < tjholowaychuk> dypsilon then you're lucky :p
21:17 < tjholowaychuk> or have no traffic
21:17 < tjholowaychuk> one of those
21:17 < dypsilon> true, i don't have alot of traffic
21:17 < dypsilon> what happens when you do?
21:19 < dypsilon> i mean, voxer does and they have problems with node, but they are still alive
21:19 < dypsilon> and appearently it gets better the closer we are to 1.0
21:20 < werle> @dypsilon I can't wait
21:20 < joshthecoder> sinclair|net you deal with complexity by raising more $$ to hire more engineers ;)
21:20 < sinclair|net> heh
21:21 < werle> chjj: blessed is awesome man - cheers
21:21 < dypsilon> the whole discussion looke like general bitching right now
21:22 < sinclair|net> keeping stuff simple is fine, extreme amounts of unit coverage is fine, but then i stitch it together, something always trips up
21:22 < dypsilon> if node is a wrong tool for your task, don't use it
21:22 < sinclair|net> i just wish that when errors happen, it didn't take down the entire node process
21:23 < sinclair|net> i suppose running the 'actual' application under a top level process might help
21:24 < olalonde> ningu: check out https://github.com/olalonde/worm … it is still very early stage… still no sql wrapper, no joins, etc.. I'll keep you updated on progress
21:24 < sinclair|net> dypsilon: oh c'mon, i've only just been able to get something semi reasonable up and running on node, as if im going to turn back now
21:25 < dypsilon> sinclair|net, what errors take down the processes?
21:25 < sinclair|net> dypsilon: months of punishment mate
21:25 < dypsilon> sinclair|net, well you know the saying: if you write it the second time you are much quicker :)
21:25 < sinclair|net> dead network connections, and not as good error handling on those instances
21:26 < sinclair|net> and general errors
21:26 < sinclair|net> just "things"
21:26 < tjholowaychuk> core has some interesting little quirks as well
21:26 < tjholowaychuk> ones that you can't catch
21:26 < sinclair|net> tjholowaychuk: anything in particular ?
21:27 < tjholowaychuk> there's no getting around that stuff you definitely have to assume they will break your process and just hope that it's nothing people can pick up on and DoS you
21:27 < tjholowaychuk> there's countless ways to bring down pretty much any node app
21:27 < tjholowaychuk> unfortunately
21:27 < tjholowaychuk> sinclair|net stuff like the fs.* methods
21:27 < tjholowaychuk> well any core methods really
21:27 < tjholowaychuk> don't wrap callbacks with try/catch
21:27 < tjholowaychuk> so any immediate errors  just get lost in limbo
21:28 < nathan7> Yeah, it's a huge performance hit to wrap everything in a try/catch
21:28 < nathan7> There was some discussion on doing this for EventEmitter#emit
21:29 < dypsilon> that doesn't sound good
21:29 < tjholowaychuk> it's a bit of a tricky thing, even delegating back to that  callback
21:29 < tjholowaychuk> with the error is potentially a really bad thing
21:30 < dypsilon> so what's the plan? just live it that way?
21:30 < oskbor> hi, im trying to debug a script using node debug script.js. It breaks on the first line and then none of the commands next cont step etc work. anyone know what I am doing wrong?
21:30 < tjholowaychuk> dypsilon not sure
21:30 < gf3> tjholowaychuk: YAO
21:30 < werle> tjholowaychuk what do you do in the situation?
21:30 < tjholowaychuk> gf3 EYYY
21:30 < gf3> tjholowaychuk: LET'S GET A DRINK SOMETIME SOON
21:30 < sinclair|net> tjholowaychuk: i wouldn't wrap callbacks in tho, however, exception handling tends to get way more granular in javascript than other things i have worked on
21:30 < gf3> tjholowaychuk: THIS IS RIDICULOUS
21:30 < tjholowaychuk> werle get headaches
21:30 < tjholowaychuk> gf3 yes!
21:31 < werle> tjholowaychuk story of my life
21:31 < werle> tjholowaychuk keeps us going with the hax though 
21:33 < sinclair|net> in fact, it wouldn't be possible to exception handle a core fs.* method, so error handling relies on the err passed back
21:34 < sinclair|net> so unless the fs.* stuff isn't catching errors.....hmm
21:35 < dypsilon> do you have any examples?
21:35 < dypsilon> like, if i write to a file and the hd is suddenly offline the whole process crashes without any way to catch the error
21:36 < tjholowaychuk> dypsilon nah that stuff is handled but say you have
21:36 < tjholowaychuk> fs.readFile(path, function(){ foo.referenceError(); other stuff })
21:37 < tjholowaychuk> it wont catch those
21:37 < tjholowaychuk> so you are forced to try/catch
21:37 < tjholowaychuk> within every  one of those ever
21:37 <@xyxne> if only there were some way to handle errors
21:37 <@xyxne> we could call it...
21:37 <@xyxne> error handling
21:37 < sinclair|net> heh
21:38 < dypsilon> tjholowaychuk, ah ok, now I see what you mean. do domains help in any way?
21:38  * dypsilon haven't looked into domains yet
21:39 < tjholowaychuk> i dont think in that case no
21:39 < tjholowaychuk> could be wrong
21:39 <@xyxne> spoiler: it's try/catch
21:39 < nathan7> domains are basically try { fn() } catch (e) { domain.emit('error', e) }
21:39 < tjholowaychuk> yeah i mean if you're wrapping everything with domains
21:39 < tjholowaychuk> you might as well use
21:39 < tjholowaychuk> node-fibers
21:39 < tjholowaychuk> and get the rest of the slower but much better
21:39 < tjholowaychuk> error handling
21:39 <@xyxne> uh huh.
21:39 < dypsilon> or promises or something
21:40 < koldus> hi guys, i defined an array by using new Array() and then i fill it using strings as index. Now i'm concerning on how can i access all with a for like for (i in array) if the array length result zero.
21:40 < dypsilon> well, at least there are ways to solve it
21:41 < dypsilon> koldus, using string as index in arrays is weird
21:41 < dypsilon> why not just use objects?
21:42 < tjholowaychuk> koldus not totally sure what you mean but new Array(n) should set the length
21:42 < chjj> werle: thanks. still a bit of work to do. :)
21:43 < werle> chjj: keep it coming man !
21:43 < chjj> werle: will do
21:43 < koldus> dypsilon, i'm not using an object couse i don't know how to access a member using a variables like i do now: ex. array[item] where item could be 'a'
21:43 < werle> chjj: are you guys in nyc?
21:43 < chjj> werle: we're all over the place
21:44 < nathan7> koldus: Just like that
21:44 < dypsilon> koldus, same
21:44 < nathan7> koldus: You're not using the array-ness of the array at all
21:44 < nathan7> koldus: You're just abusing the fact that an Array is an Object
21:44 < olalonde> does anyone know if there is an equivalent to PHP's PDO for node.js?
21:44 <@mbalho> s/abusing/taking advantage of/
21:45 < dypsilon> koldus, array is only useful because it has sorted numerical index. If you don't use numerical index you just use objects.
21:45 < pirho> koldus: if its length is indeed 0 then array[anything] wont be defined
21:45 < ningu> koldus: for (var i in ...) only works for objects, not arrays
21:45 < koldus> nathan7, i just tryied to do what i do with php thinking that node will return me an error. so, there's any way to access all the member of an object?
21:45 < dypsilon> olalonde, there are several, depending on your rdms. there is no standard library like in php
21:46 < nathan7> koldus: for-in loops
21:46 < olalonde> dypsilon: yeah, that's what I meant
21:46 < ningu> koldus: yes, just the way you did it, but use an object instead
21:46 < nathan7> in PHP arrays are hashes too? wtf
21:46 < ningu> var foo = {}; foo[bar] = baz;
21:46 < olalonde> might work on such a module as I need something like this
21:46 < ningu> nathan7: they are hashes in javascript too but it doesn't make much sense to do it that way
21:46 < nathan7> ningu: well yes because that's what JS objects are
21:46 < ningu> nathan7: right :)
21:46 < nathan7> ningu: but PHP... heck, I'm not even starting about PHPOOP
21:46 < ningu> haha
21:47 < dypsilon> olalonde, do you really need a database abstraction layer with different adapters?
21:47 < nathan7> that's PHP OOP, no laughing allowed
21:47 < olalonde> yeah.. arrays are hashes in php haha
21:47 < olalonde> dypsilon: yes
21:47 < Havvy> Arrays are hashes in most scripting languages.
21:47 < nathan7> nuh-uh
21:47 < Havvy> JS, Lua, PHP...
21:47 < dypsilon> olalonde, hm, i think there is no such thing in node, never heard of something like that.
21:47 < ningu> not in perl or python
21:48 < dypsilon> olalonde, and if there is, probably not stable
21:48 < ningu> olalonde: what is PDO, is it like perl's DBI?
21:48 < olalonde> dypsilon: right
21:48 < ningu> olalonde: if so, you want any-db
21:48 < dypsilon> ningu, yeah something like that
21:48 < olalonde> it's just a unified interface for all the SQL-like driver
21:48 < ningu> olalonde: it supports RDBMS only though but you can extend it
21:48 < olalonde> yeah, Im only concerned about RDMS
21:48 < ningu> it is not as mature as DBI but it works quite well
21:49 < koldus> last question, there's any way i can use something like async.eachSeries method?
21:49 < ningu> it also has a unified transaction interface with nice events emitted for transactions
21:49 < ningu> koldus: well sure, it exists to be used
21:49 < ningu> koldus: you mean to interate through an object?
21:49 < olalonde> looks like any-db is exactly what i was looking for thanks!
21:49 < ningu> olalonde: :)
21:50 < dypsilon> thx ningu
21:50 < koldus> yah, it appear to have no iteration.
21:50 < ningu> koldus: just do async.eachSeries(Object.keys(foo), ... )
21:50 < nathan7> koldus: async.eachSeries(Object.keys(blah)
21:51 < dypsilon> koldus, be aware of the fact, that the iteration order is not predictable
21:51 < dypsilon> in this case
21:51 < ningu> it's only predictable if you sort or whatever
21:52 < koldus> i don't understand what you understand with Object.keys(foo)
21:53 < koldus> *meant
21:53 < olalonde> ningu: hey a neat feature of the orm im working on is that you'll be able to specify many adaptors. so for example for user model you could specify [ adapter.redis. adapter.pgsql ]. if the object is found in redis, it is returned, otherwise fallback to pgsql, etc. makes it easy to implement a cache layer. well, at least its a planned feature for now
21:54 < ningu> hmmm
21:54 < koldus> ok got it!
21:54 < koldus> thank a lot guys!
21:54 < ningu> could be useful, could also be kind of tricky
21:54 < ningu> what is 'the same' object in redis vs. pgsql?
21:54 < olalonde> yes indeed
21:54 < sinclair|net> dypsilon: something i have been working on http://pastebin.com/gfB3zPU5
21:54 < olalonde> this would only work if you specify a unique id for your model
21:54 < ningu> oh, yeah, like a uuid, sure
21:55 < olalonde> for example: id: [ "email", "first_name" ] or simply id: [ "id" ]
21:55 < ningu> or you could have a method to produce a custom transformed id
21:55 < olalonde> ningu: the uuid pseudo code is  "modelname#" + id_attributes.join('-')
21:55 < olalonde> ningu: right, that'd be cool too
21:55 < sinclair|net> dynmeth: that is for nodejs btw
21:55 < ningu> olalonde: I meant an actual uuid
21:55 < sinclair|net> er
21:56 < ningu> olalonde: i.e. uuid v4 or whatever
21:56 < sinclair|net> dypsilon: that is for nodejs btw
21:56 < dypsilon> sinclair|net, is it javascript? :)
21:56 < olalonde> ningu: ah, but then you'd have to save the uuid, in your database right?
21:56 < ningu> olalonde: in my current postgres db I have that for all primary keys so it would be pretty easy, just take foo.id and it's unique across the db
21:56 < sinclair|net> dypsilon: typescript
21:56 < olalonde> ningu: right!
21:57 < dypsilon> you gotta love that fragmentation
21:57 < sinclair|net> dypsilon: what fragmentation?
21:57 < dypsilon> dart, typescript, coffescript, javascript
21:57 < dypsilon> :)
21:57 < sinclair|net> oh, well, i really just wanted to show you how i was coding web applications with nodejs nowadays
21:58 < ningu> typescript + coffeescript = toffeescript
21:58 < nathan7> tasty
21:58 < nathan7> I'd rather have a Coco version
21:59 < dypsilon> sinclair|net, looks nice and clean
21:59 < pirho> dypsilon: there's more fragmentation amongst JavaScript itself than any of the transpiled languages
21:59 < sinclair|net> actually http://pastebin.com/rfNb54FX <-- there was a typo in the last one
21:59 < dypsilon> pirho, what do you mean?
21:59 < pirho> What is JavaScript exactly?
22:00 < werle> pirho: what?
22:00 < sinclair|net> dypsilon: the goal is obviously to bring IoC / dependency injection patterns to nodejs that are actually sane.
22:00 < dypsilon> JavaScript is defined in EcmaScript
22:02 < dypsilon> sinclair|net, tbh i don't see any way value of classical ioc patterns in js
22:02 < dypsilon> because js provides so many tools to do the same thing with much less hustle
22:02 < sinclair|net> dypsilon: such as?
22:02 < ningu> hustle or hassle?
22:02 < ningu> I guess there are a lot of code hustlers
22:03 < dypsilon> ningu, thanks, hassle
22:03 < sinclair|net> dypsilon: well, i have an interface which i can implement type safe mocks for when unit testing etc, big win imo
22:04 < dypsilon> sinclair|net, such as anon functions, prototypes, dynamic this binding and so on
22:04 < arush1> hey noders
22:04 < dypsilon> sinclair|net, so what exactly do you win?
22:04 < arush1> can anyone point me in the right direction to setup https on my localhost
22:05 < dypsilon> arush1, http://nodejs.org/api/https.html ?
22:05 < arush1> dypsilon, thanks, any instructions on creating a self-signed vert?
22:06 < arush1> *cert
22:06 < sinclair|net> dypsilon: lots
22:06 < middlepixel> Hello
22:07 < sinclair|net> dypsilon: dynamic typing isn't all its cracked up to be anyway, i don't like it when im framing up an application
22:07 < dypsilon> sinclair|net, valid opinion
22:07 < sinclair|net> dypsilon: interfacing helps me rationalize about the software im building
22:08 < sinclair|net> dypsilon: type checking means im not stepping outside that frame, and then i get the nice tooling
22:08 < dypsilon> arush1, i would go google, there are some good guides, i don't have any bookmarks for you right now
22:10 < middlepixel> I am struggling with a problem of loading multiple .js files into a single module. I have multiple files that I want to work in the same scope so they can call one another, lots of cross dependencies. Does anyone know of a simple way of essentially 'including' js files in NodeJs??  
22:10 < sinclair|net> dypsilon: i kinda wish that TS would let me apply attributes on methods tho
22:10 < sinclair|net> dypsilon: http://pastebin.com/rfNb54FX <-- see the constructor?
22:11 < ningu> middlepixel: export the methods that you need
22:11 < sinclair|net> if i could apply that information to the controller actions, then i would be happy
22:11 < ningu> middlepixel: basically, the answer to your final question is no.
22:12 < bnoordhuis> middlepixel: fs.readFile() and eval(). and may $DEITY have mercy on your soul
22:12 < dypsilon> sinclair|net, don't get me wrong, i like design patterns, interfaces, models and so on, as much as the next developer but it's almost always an overengineering. I like to design small interconnected system nowadays and create HTTP based architectures. so my question is not how to maintain 5k classes, but how to maintain 200 rest services.
22:12 < nicholasf> middlepixel: what ningu said
22:12 < middlepixel> hmm... yeah, I've tried to coaxing with exports... no luck really.. and yeah, I'm not keen about eval
22:13 < nicholasf> middlepixel: can you gist it?
22:13 < middlepixel> so, I'm kind of stuck with long files
22:13 < sinclair|net> dypsilon: tightly coupled software is bad
22:13 < ningu> middlepixel: if you can explain what you're trying to do and why exports doesn't work we may be able to help
22:13 < dypsilon> sinclair|net, bad is a pretty broad term
22:13 < bnoordhuis> it's also a michael jackson song
22:13 < sinclair|net> dypsilon: its just bad, period
22:14 < middlepixel> I have multiple files in various directories... some of it is AI pathfinding, some world generation code, otehr stuff for game loop, player to player stuff etc...
22:14 < middlepixel> I want to keep things in a nice logical file struct to match functionality
22:14 < middlepixel> but for instance:
22:14 < dypsilon> sinclair|net, so why is it bad?
22:15 < ningu> middlepixel: ok, so why not keep a scope object that you pass in to every file?
22:15 < dypsilon> also tightly coupled software is a broad definition
22:16 < ningu> var scope; module.exports = function(s) { scope = s; return { foo: foo, bar: bar } }
22:16 < middlepixel> ... sorry, I'm trying to summarize things here and my efforts of brevity are working against me a little :)   I can't gist this stuff just right now, unfortunately.
22:16 < ningu> middlepixel: or, keep it on the object, that's probably better
22:17 < bnoordhuis> sinclair|net: you know what's bad? blanket statements :)
22:17 < ningu> you can always do Foo.protoytype.bar = require('bar');
22:17 < middlepixel> hmmmm
22:17 < ningu> bnoordhuis: blankets are warm. is that a blanket statement?
22:18 < bnoordhuis> ningu: not all blankets are. i have some with giant holes in them
22:18 < middlepixel> I'm going to explore that right now, see how it goes. Thanks Ningu!
22:18 < dypsilon> in any book on software architecture there are different patterns depending on the complexity of your application. if the only thing your application does is pushing data through the wire with some minor transformation you don't need domain model, mvc with front controller and many other big patterns
22:18 < ningu> middlepixel: good luck :)
22:18 < dypsilon> overengineering is a code smell
22:18 < dypsilon> the one, that will cost your company lots of money
22:19 < bnoordhuis> overengineering is what makes insecure programmers feel better about themselves
22:19 < dypsilon> bnoordhuis, haha, that's so true
22:19 < ningu> bnoordhuis: what about static typing?
22:19 < dypsilon> the common cold of a juniour programmer
22:19 < bnoordhuis> ningu: i'm a fan
22:20 < dypsilon> ningu, do you really need it?
22:20 < ningu> bnoordhuis: just curious, I'm neither pro nor con
22:20 < bnoordhuis> it helps catch bugs
22:20 < ningu> I think you can take static typing too far, in general it seems reasonable
22:20 < dypsilon> the question is really how much time does it save you on a daily basis
22:20 < ningu> bnoordhuis: what do people do in Java etc. to output JSON, do you know?
22:20 < dypsilon> and how much time you need to be able to use it
22:20 < bnoordhuis> ningu: curse, mostly
22:21 < ningu> haha
22:21 < ningu> well, there's the tradeoff
22:21 < ningu> interoperability is pretty useful
22:21 < bnoordhuis> it usually boils down to Map<String, Object> in java land
22:22 < bnoordhuis> with lots of reflection to serialize said map to a json string
22:22 < bnoordhuis> it's not pretty or efficient but it works
22:23 <@tjfontaine> better static analysis for dynamic languages
22:24 < bnoordhuis> cloud9 was working on that with some success
22:24 < sinclair|net> bnoordhuis: im not over engineering anything tho
22:24 < bnoordhuis> sinclair|net: good. keep it that way
22:24 < ningu> tjfontaine: what exactly does that mean? adding hints about variable types?
22:24 < sinclair|net> bnoordhuis: good software design patterns does not equate to over engineering 
22:25 <@tjfontaine> ningu: well if you figure it out you get a patent
22:25 < ningu> tjfontaine: :)
22:25 < ningu> tjfontaine: my question is do you mean changing the syntax of the language, or just optimizing it better?
22:25 < bnoordhuis> sinclair|net: there are some who say that design patterns are a code smell in themselves, signs of a deficient language
22:26 < sinclair|net> bnoordhuis: a deficient language like JavaScript?
22:26 <@tjfontaine> ningu: well you don't really help people by changing the language, and anything doing with decorating wiht say comments just basically means you need to be disciplined, and if you're willing to be that disciplined anyway you probably don't need the analysis
22:27 < sinclair|net> bnoordhuis: if any language "needs" good patterns applied to it, it would be javascript
22:27 < bnoordhuis> sinclair|net: no, a deficient language like c++ or java where you need that GoF shite
22:27 < ningu> tjfontaine: sure, but there are two goals here: (1) fast code, (2) non-buggy code
22:27 < bnoordhuis> i say that as someone who is mainly a c and c++ programmer
22:27 < ningu> bnoordhuis: so what is JS, gang of one?
22:27 < JamesMGreene> gang of *
22:27 < sinclair|net> bnoordhuis: should i be concerned by that statement?
22:28 <@tjfontaine> ningu: I don't see 1 being related necessarily, and obviously 2 is what the purpose of the static analysis is
22:28 < bnoordhuis> ningu: gang of hipsters?
22:28 < bnoordhuis> sinclair|net: i don't know. should you?
22:29 < sinclair|net> bnoordhuis: i have no idea why you think C++ and Java demand patterns, but JavaScript doesn't
22:29 < ningu> tjfontaine: ok, so I guess you're saying you could turn this on, some version of strict mode or whatever, and have it let you know when it thinks you're using the "wrong" type?
22:29 < dypsilon> gang of frontend developers who suddenly think they are backend developers
22:29 < bnoordhuis> sinclair|net: oh, like that. easy. have you ever seen the visitor pattern in js?
22:29 < harrisonm> bnoordhuis: GoF?
22:29 < sinclair|net> bnoordhuis: of course
22:29 < JamesMGreene> harrisonm: Gang of Four
22:30 < bnoordhuis> sinclair|net: probably written by recovering c++ or java programmers :)
22:30 < sinclair|net> bnoordhuis: are you saying i copy and pasted?
22:30 <@tjfontaine> ningu: it doesn't necessarily need to be a part of the language, that's my point, 'use BetterStaticAnalysis' that's just ugly really, most static analysis tools are run out of process
22:30 < bnoordhuis> sinclair|net: i don't know. did you?
22:30 < sinclair|net> bnoordhuis: no
22:30 < bnoordhuis> sinclair|net: then why are you asking me?
22:31 < JamesMGreene> -_-
22:31 < purr> JamesMGreene: ಠ_ಠ is an IRC client/IRC client framework.
22:31 < ningu> tjfontaine: ok, but I get the idea now of what you mean in any case :)
22:31 < JamesMGreene> purr: Huh?
22:31 < ningu> _-_
22:31 < sinclair|net> bnoordhuis: have you ever implemented the visitor pattern in javascript?
22:31 <@tjfontaine> ningu: that's not to say you couldn't use the type information generated by v8 at runtime to aid in your analysis, but that's a luxury not generally available
22:31 < bnoordhuis> sinclair|net: no. there's no need
22:32 < ningu> tjfontaine: you missed the MS -> node.js guy in here yesterday who uses visual studio to develop his web apps with tight bindings between IE and VS ;)
22:32 < ningu> tjfontaine: actually it sounded pretty cool, but... very coupled to the tools
22:32 < sinclair|net> bnoordhuis: besides, this is not the variant of pattern i was referring to, rather than thinking about small, line by line implementations, i was referring to using patterns to manage large software projects
22:32 <@tjfontaine> c# has my favorite syntatic sugar for a statically typed language
22:33 < JamesMGreene> Agreed, C# is fun
22:33 <@tjfontaine> ningu: and as far as IDEs go VS is pretty much best of breed
22:33 < sinclair|net> tjfontaine: http://pastebin.com/rfNb54FX <-- close enough
22:33 < bnoordhuis> true, sadly :(
22:33 < bnoordhuis> i want to like eclipse but...
22:34 < ningu> tjfontaine: yes, the point was not about the design of VS itself but rather the fact that it forces you to use a group of highly coupled tools. I wouldn't want to feel like I could only develop and test in IE
22:34 <@tjfontaine> sinclair|net: ya TS, meh whatever
22:34 <@tjfontaine> ningu: indeed
22:34 < sinclair|net> ningu: VS doesn't bind you to IE 
22:35 < harrisonm> Yeah it just launches in whatever your default browser is
22:35 <@tjfontaine> no, but your best interactions for debugging your asp.net mvc come from it :P
22:35 < ningu> sinclair|net: not in principle perhaps
22:35 < ningu> sinclair|net: but this guy clearly did not want to go out of the walled garden
22:35 < harrisonm> Are there IE .NET debugging plugins?
22:35 < sinclair|net> ningu: if anything VS is getting more and more decoupled
22:35 < sinclair|net> ningu: what guy?
22:35 < ningu> sinclair|net: I don't remember his name but he was in here yesterday
22:36 < harrisonm> Also bnoordhuis Eclipse is okay but I'm looking forward to never touching it again when Android Studio releases
22:36 < ningu> he said his job was forcing him to switch to OS X + sublime + node.js or he'd be fired
22:36 < sinclair|net> ningu: there exists a world outside of Visual Studio, i visit there every time im forced to code something on linux
22:36 < ningu> sinclair|net: well, you know more than one thing, he only knew windows + .net + VS
22:36 < harrisonm> sinclair|net: There exists a world outside Linux, I visit there every time I'm forced to code something on VS :P
22:36 < sinclair|net> ningu: you know what?
22:37 < ningu> sinclair|net: I know most things that are not windows :)
22:37 < sinclair|net> ningu: i find it shameful most .net developers don't look outside the world of .net
22:37 < ningu> oh, it was rhetorical
22:38 < harrisonm> sinclair|net: from what I've observed in dfw there are a sea of devs here that know nothing outside of .net
22:38 < harrisonm> it's quite frustrating
22:38 < ningu> VS is a great product, I just wish it was easier for me to integrate it into my environment of choice
22:38 < sinclair|net> ningu: .net is the greatest platform ever, and C# one of the best languages ever, but there is stuff going on elsewhere, most of them don't feel the need to try anything else
22:38 < dypsilon_> what did i miss?
22:38 < sinclair|net> ningu: i cringe when i hear them praise WPF, and WCF
22:39 < ningu> sinclair|net: my friend at MS showed me some asp mvc and I was underwhelmed to be honest, linq is cool though
22:39 < sinclair|net> ningu: you didn't like aspmvc?
22:39 < ningu> sinclair|net: I didn't say that, I just meant I didn't see its superiority to anything else
22:40 < sinclair|net> ningu: like most things you have to spend time with it, its really well put together
22:40 < harrisonm> Dunno, I liked .NET MVC.  There's a number of other MVC frameworks I like more, but it's nice enough
22:40 < harrisonm> and, if you're being forced into Windows server, vastly superior to ASP.NET
22:41 < sinclair|net> well, if given the option, i would pick asp.net mvc over anything else
22:41 < ningu> sinclair|net: yeah, but as an academic or small budget non-profit employee there is basically no reason to go with something like asp.net if you want your work to be widely accessible an independent of any given business to the extent possible
22:41 < harrisonm> ningu++
22:41 < sinclair|net> harrisonm: why ningu++? what did he say to impress you so?
22:42 < harrisonm> more a statement of agreement?
22:42 < sinclair|net> ningu: well, i should look more into mono mvc, 
22:42 < harrisonm> I think my understanding of increment etiquette may be deficient
22:43 < ningu> harrisonm: nah, it just means basically "I second that"
22:43 < sinclair|net> ningu: there is nothing preventing you from upping a asp.net mvc application and porting it over to mono, i have read many statements proclaiming how trivial it was to do
22:43 < sinclair|net> ningu: and mono is sick bro
22:43 < sinclair|net> they support everything
22:43 < ningu> sinclair|net: ok, fair enough, I haven't looked at mono in forever
22:43 < sinclair|net> and do things above and beyond what ms are doing in some areas, like compiler as a service technology
22:44 < ningu> my main concern is that I'm working with something open source, well documented, with an active community
22:44 < ningu> because I am just one person with a small budget
22:44 < sinclair|net> ningu: well, that doesn't mean you have to use node
22:44 < ningu> and I want it to also be flexible enough that I can actually use it, because a typical use case for me is not the same as for most people (at least, so far)
22:45 < ningu> of course not, many things fit that bill
22:45 < sinclair|net> ningu: i think hosting is always the issue at the end of the day, and i have pretty much settled on azure these days
22:46 < ningu> I don't have a strong opinion on hosting 
22:46 < ningu> have not tried azure yet
22:46 < ningu> I've tried ec2, joyent, and a couple vps providers
22:46 < ningu> ramnode is pretty cool, their $15/year box is awesome for the price :)
22:47 < sinclair|net> ningu: its worth a look, not too expensive, and you get some crazy cloud vpm tech up there
22:47 < sinclair|net> ningu: i mostly host my stuff on their PAAS services tho, no need for a vm
22:47 < ningu> I can't use that because we use postgres
22:47 < sinclair|net> i find if i target my the lowest common denominator on PAAS, then my software ends up more portable in the long run (app engine excluded)
22:49 < rhalff> I'm creating this import script for mysql to mongodb and using .insert() with multiple rows at once, but now I'm wondering if mongodb already supports 'streaming' json into the server, without me having to worry to insert to many rows at once.
22:49 < ningu> sinclair|net: at the end of the day I am just not comfortable tying myself to Microsoft
22:49 < ningu> although it isn't that huge of a risk with hosting
22:49 < sinclair|net> ningu: anyway, the best thing about aspnetmvc is just that you get the entirety of the .net platform at your disposal, you get crazy good tooling in VS, and all the web stuff is top notch
22:49 < brianc> ningu: if node-postgres is giving you any issues give me a holler
22:50 < ningu> brianc: oh hey there. you didn't write the hstore module did you?
22:50 < sinclair|net> ningu: well, ive tied myself and software to microsoft for over 10 years now, and only been burnt a few times, and in those instances, it was for non commercial work
22:50 < brianc> ningu: no
22:50 < ningu> brianc: you also never responding to my last comment about single row mode :
22:50 < ningu> :)
22:50 < brianc> ningu: i looked at it a bit and was like "hmm....i'm not sure about this"
22:50 < ningu> brianc: yeah, me neither
22:50 < ningu> I just thought it should be on the radar
22:50 < sinclair|net> ningu: wait, thats not entirely true, microsoft sharepoint, crm and commerce can gtfo
22:50 < ningu> given the stream-y-ness of node
22:50 < brianc> ningu: yeah I sometimes take a while to respond on github
22:51 < brianc> ningu: by "not sure about this" i meant about the hstore stuff
22:51  * sinclair|net hates those god awful, over priced, braindead projects
22:51 < ningu> brianc: ooh, ok. well the hstore module works fine for me. but it doesn't support hstore arrays, I should send a PR for that
22:51 < ningu> it's easy to add
22:51 < sinclair|net> tho, i did learn some interesting things on mscrm
22:51 < brianc> ningu: yeah, I would like node-postgres to be a bit streamier....I was thinking I might have to spin a few modules out of it to do that
22:51 < brianc> ningu: i didn't write the hstore module so...I'm not sure I'm the guy for the pull request
22:51 < brianc> ningu: or do you mean the query itself in node-postgres cannot accept hstore stuff?
22:52 < ningu> brianc: I know, that's why I asked, I couldn't remember and figured even if you weren't the author you might have an idea.
22:52 < brianc> ningu: I just use raw hstore stuff currently
22:52 < ningu> brianc: no, the hstore custom type parser -- it only handles single hstore's.
22:52 < ningu> but it's easy to wrap it in an array parser
22:52 < brianc> ohhh, yeah I haven't messed w/ the hstore parser at all
22:52 < ningu> you just have to give it the hstore[] oid
22:53 < ningu> and make an array parser like the various other ones
22:53 < speedblue47> anyone here using winston with MongoDB?
22:53 < ningu> brianc: it's really convenient, I would be pretty annoyed with raw hstore at this point
22:53 < brianc> sweet I will checky it out
22:55 < qard> Anyone have any clever ideas on how to recover when piping a stream into a TCP stream and the connection dies and emits a "write EPIPE" error?
22:56 <@mbalho> stream.on('error', pipeStreamAgain)
22:56 < ChrisPartridge> qard: recover? just pipe again and hope for the best
22:56 < qard> I'm missing that last write though.
22:56 < sinclair|net> why does fs.exists throw an error?
22:57 < qard> I can queue up future writes when the socket becomes dirty, but on that final write I won't know it's dirty until after the data has written to the socket and failed.
22:58 < qard> I guess I just need to maintain a reference to the last known message and resend that manually before the new pipe?
22:58 < ningu> whoever created streams had a pipe dream
22:59 < qard> It's a bit awkward piping, yet still having to intercept all that and manually manage each attempted write...
22:59 < ChrisPartridge> qard: question is, why does it the socket keep hanging up?
22:59 <@tjfontaine> recoverying from an EPIPE is not really plausible
22:59 < ChrisPartridge> does the*
22:59 < qard> server restarting, poor network conditions, etc.
23:00 < qard> I don't necessarily need to "recover" the previous pipe, I just need to be able to catch that failed write and retry it later.
23:01 <@tjfontaine> that doesn't really fit the pipe model, you want to implement your own writable
23:01 < sinclair|net> tjholowaychuk: you around?
23:01 < tjholowaychuk> yup
23:02 < sinclair|net> tjholowaychuk: you mentioned before some issues with fs
23:02 < tjholowaychuk> sinclair|net it's not just fs
23:02 < tjholowaychuk> pretty much any module
23:02 < qard> It seems to me one should be able to expect that net, being a stream, can be treated as such.
23:02 < tjholowaychuk> both in core or user-land
23:02 < sinclair|net> im just running into one with fs.exists throwing uncatchable exceptions :(
23:03 < tjholowaychuk> fs.exists is a weird one because it has a legacy signature
23:03 < tjholowaychuk> (not sure why it wasn't changed when it went from path -> fs)
23:03 < sinclair|net> tjholowaychuk: one without err?
23:03 < tjholowaychuk> yeah
23:03 < ningu> qard: it can be treated as a stream, tjfontaine's point is that you need to introduce custom error handling logic
23:03 < sinclair|net> tjholowaychuk: i suppose i could use existsSync
23:04 < ningu> sinclair|net: what is the error?
23:04 < tjholowaychuk> sinclair|net or stat()
23:04 < qard> If you can't safely just pipe to it, that's not really a standard stream.
23:04 <@tjfontaine> qard: the socket itself has reliable transport, so long as you can write to it, but you're asking for a higher level protocol extension
23:04 < sinclair|net> tjholowaychuk: would stat() be the acceptable approach / workaround?
23:04 < ningu> qard: you can pipe to it. but if the connection is lost the pipe will break, just like with any stream.
23:04 < sinclair|net> tjholowaychuk: thanks, i go with stat()
23:04 < tjholowaychuk> sinclair|net yup that's what fs.exists uses
23:04 < tjholowaychuk> internally
23:05 < qard> Yes, that is expected behaviour. What is unexpected is that, upon breaking, it won't provide a useful way to intercept the write that failed to redirect it.
23:06 < sinclair|net> ningu: i believe the error may have something to do with the access rights on the directory
23:06 <@tjfontaine> qard: .pipe itself is pretty opaque, if you pipe through another writable though that does this tracking you can get that information
23:06 < sinclair|net> ningu: on windows, so the issue is not that its having the error, its that its uncatchable
23:07 < ningu> sinclair|net: yeah, just curious
23:07 < qard> Well then, a better question is; has someone made a stream module to track the last know write to do this sort of thing?
23:08 < qard> Or to buffer writes until it gets piped to a fresh stream?
23:09 <@tjfontaine> seems like the better thing would be for the client to say "hey, I'm back start streaming from X now"
23:09 <@tjfontaine> since if the connection went away any amount of packets could have also been lost, the only person in a position to really know what they actually have is the client
23:11 < qard> I'm currently trying to do that by switching from writing to a stream while a clean socket is available to writing to a buffer while the assigned socket is dirty.
23:11 < qard> It mostly works, but that one single message in the change over gets lost.
23:12 < qard> Because it's not aware it's dirty until a write fails.
23:13 < ChrisPartridge> qard: whats the source in this case?
23:14 < qard> The module isn't open quite yet, but basically it's the JSONStream module piping a serializer into the socket and piping the other end into a parser.
23:15 < qard> Here's a copy/paste of the relevant stuff; https://gist.github.com/Qard/c5e1bcd9e294add91dcf
23:16 < qard> When the socket becomes dirty, I create a new parser and serializer attached to a new socket and start writing my data to the new serializer.
23:17 < ningu> be sure to bleach the dirty socket too
23:17 < qard> But I've already lost the write that failed from the previous serializer to the previous socket.
23:18 < harrisonm> I usually just pretreat my dirty sockets with some extra laundry detergent and they come out stain-free
23:18 < qard> Yep. Old socket gets killed and writes get buffered until the new socket is ready to receive writes from the new serializer.
23:19 < qard> I just want to catch that failed write somehow while still being able to just pipe into the socket.
23:20 <@tjfontaine> if it's critical that no message is lost you should also be using some sequencing
23:20 < qard> Any suggested reading there?
23:20 <@tjfontaine> because while you can catch this state where you know the server has dropped a message, you really can't know what has made it through the network before the connectino was lost
23:21 < qard> Or modules to do that? The order of events is not really important, by the way. Just that the missed events ARE still received.
23:21 < ningu> qard: well you still have to know what the missed events *are*
23:21 < ningu> hence the sequencing
23:23 <@tjfontaine> qard: you could just add an ACK to your protocol and have your client say "Hey I got ID" then you can keep track on the server
23:24 < patrickod> anyone here ever had issues with uglify making things bigger? 
23:27 < patrickod> actually my bad. It's concatenating multiple versions together. Not cleaning up after myself
23:33 < einaros_ws> how to get the clients socket id in the server using einaros ws 
23:34 < einaros_ws> i want to broadcast a message from one client to other clients , how to do this with einaros ws
23:36 < einaros_ws> i want to broadcast a message from one client to other clients , how to do this with einaros ws
23:36 < einaros_ws> i want to broadcast a message from one client to other clients , how to do this with einaros ws
23:36 < einaros_ws> i want to broadcast a message from one client to other clients , how to do this with einaros ws
23:36 < einaros_ws> i want to broadcast a message from one client to other clients , how to do this with einaros ws
23:36 < einaros_ws> i want to broadcast a message from one client to other clients , how to do this with einaros ws
23:36 < einaros_ws> i want to broadcast a message from one client to other clients , how to do this with einaros ws
23:36 < einaros_ws> i want to broadcast a message from one client to other clients , how to do this with einaros ws
23:36 < einaros_ws> i want to broadcast a message from one client to other clients , how to do this with einaros ws
23:37 -!- mode/#Node.js [+q einaros_ws!*@*] by tjfontaine
23:37 < qard> not by spamming.
23:38 <@mbalho> tjfontaine: ooh how do you mute people
23:38 <@mbalho> thats more fun than kicking them
23:38 <@tjfontaine> mbalho: /mode +q nick!user@host
23:39 <@tjfontaine> mbalho: same as a ban really
23:39 <@tjfontaine> mbalho: in clients not irssi you probably need to specify the channel in the command
23:39 <@mbalho> im in irssi
23:39 < JamesMGreene> - /cs quiet #Node.js nickname
23:40 < JamesMGreene> Wow, super late
23:40 <@tjfontaine> websocket_issue: you don't need to spam us to get our attention, and in fact you'll get the opposite reaction you were hoping for
23:41 < websocket_issue> Anyone please help me with einaros websocket(RFC6455) , please , sincere apologies for act of spamming, I am a new user here 
23:42 <@mbalho> websocket_issue: the ws module doesnt have broadcasting built in to it, you'll need to write it yourself or search for a tutorial online
23:43 < websocket_issue> i just want to know how to get a socket id of particular client in einaros ws 
23:44 <@mbalho> check out the source code/docs/github issues/google search 
23:45 < gildean> websocket_issue: i don't think it has any ids for the sockets by default, i might be mistaken
23:47 < websocket_issue> @gildean i want to make a simple client to client message sending , for that i need an id , i have generated id by my own but i cannot send message to other clients , all the messages are received by the server
23:47 < gildean> i've just used the sec-websocket-key from the headers as a key on a new object to which i've saved the references to each open socket
23:48 < gildean> websocket_issue: you can't send messages from one client to another, you make the server pass the messages
23:49 < gildean> if you need p2p messaging, check out some webrtc implementation
23:49 < ankit_dev> can anyone tell me how to implement websocket with node.js?????
23:50 <@mbalho> ankit_dev: https://npmjs.org/package/websocket
23:50 < ankit_dev> can anyone tell me how to implement websocket with node.js?????
23:50 <@mbalho> ankit_dev: dont spam
23:50 <@mbalho> what is with people
23:50 < st_luke> :)
23:51 < ankit_dev> i just need some help on node.js
23:51 < websocket_issue_> yes exactly , how to make the server pass the message ? for that i need socket id , i dont have a socket id , please help
23:52 <@mbalho> if you ask the same question repeatedly it is called spamming
23:52 <@mbalho> even if it is worded differently each time
23:52 < ChrisPartridge> websocket_issue_, ankit_dev, web sockets is probably one of the most covered topics for node tutorials/guides - have you tried google?
23:54 < websocket_issue_> I tried google , but it is with einaros ws (RFC6455) their is no solid documentation for it , i searched a lot , please guide me to a resource 
23:55 < websocket_issue_> ankit_dev do you have any solution ?
23:56 < qard> ws is kind of terrible...
23:56 < ankit_dev> no, i am also searching on same topic
23:56 <@tjfontaine> I believe the answer is, keep track of clients and their sockets in your server side, allocate an "id" for them if you want
23:57 < websocket_issue_> @qard , we know we have to write a lot of code their , but we have some resource and documentation we can move forward
23:57 < M28> any way to get a child process window title or memory usage using node.js? (windows)
23:57 < ChrisPartridge> websocket_issue_: look at the examples, and tests for ws on github
23:57 < websocket_issue_> I have allocated ids to the clients , now how to target a message to that particular Id ?
--- Log closed Fri Jun 14 00:00:22 2013
