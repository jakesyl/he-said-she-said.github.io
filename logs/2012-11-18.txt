--- Log opened Sun Nov 18 00:00:28 2012
00:17 < T7g__> So I take it I need to develop my own static fileserver to use node.js with socket.io?
00:18 < T7g__> err not node.js, node-static, sorry
00:22 < chapel> T7g__: you still alive?
00:23 < T7g__> chapel, I am, going through some other example I saw to try to fix what's wrong
00:23 < T7g__> I'm not exactly a javascript coder eyt
00:23 < chapel> T7g__: node static doesn't do its own http server
00:23 < chapel> it uses nodes http library
00:23 < chapel> which is what socket.io uses
00:24 < T7g__> I'm looking @ http://stackoverflow.com/questions/7189849/socket-io-issue-with-control-chars and trying to try to modify my code to work the same way
00:24 < chapel> thats the exact one I was going to link lol
00:24 < chapel> essentially socket.io can take a http server instead of a port and will listen there
00:25 < T7g__> well I very much appreciate the help! yeah, I'm just trying to get around these DOM errors. Trying to ressurrect an old DOS game in HTML5 with node.js with additional features ala that very nice C&C clone
00:29 < T7g__> I started coding in Applesoft Basic and I really appeciate the challenge. I've worked with Ajax before in various projects but it's really nothing compared to what node offers in my humble opinion.
00:33 < ettinger> how do i setup google apps with an existing gmail accont, it is asking me to verify my phone number, so I used my google voice number. but that won't work.
00:37 < Aria> You generally have to use a real phone number.
00:37 < Aria> It's really a pain.
00:37 < T7g__> ettinger, google is getting crazier these days
00:37 < Aria> This has been a practice for a couple years now
00:37 < T7g__> ettinger, facebook didn't believe Tea Sevunghee was a real person so they asked me to moible verify and I said f that.
00:39 < T7g__> Though if I ran a service that gave out free phone #'s I def wouldn't let those be used (I'd know them all) to auth versus my services
00:40 < ettinger> T7g__: yeah, f-- this google apps bs. It will only let me use a 30-day free trial for personal use anyway.
00:40 < Aria> ?!
00:40 < ettinger> i will just use postfix with /etc/alias
00:40 < Aria> Seriously?
00:41 < Aria> Or is that a trial of premier?
00:41 < T7g__> ec2 is very lax on shit, you can just own a domain and get free accounts for every e-mail you create
00:41 < T7g__> I think you can even use the same CC# on each
00:41 < ettinger> i choose the personal account and after i set it up, it says I'm using a 30-day free trial.
00:41 < T7g__> I once tried to do an eqemu cluster on EC2 from the same domain and they didn't give any fucks
00:42 < ettinger> google voice is cool, but they require another phone to verify.
00:42 < T7g__> protip, you can't cluster eqemu on free accounts
00:43 < T7g__> I do <3 google voice, I got an xxx-xxx-1337 #
00:43 < ettinger> i got fibonaci 1123
00:45 < T7g__> I feel bad for yhpark unless he's intentionally spamming, inet for 2 mins at a time must suck
00:48 < jesusabdullah> yo anybody in here using express 3?
00:49 < jesusabdullah> nobody?? XD
00:49 < T7g__> To be honest I have no idea what it is
00:49 < perezd> yeah I am
00:49 < perezd> whtats up
00:50 < jesusabdullah> perezd: so there was an api change regarding something being or not being an http server between 2 and 3 yeah?
00:50 < jesusabdullah> perezd: trying to get the tl;dr on what happened there
00:50 < perezd> yeah, I have no clue
00:50 < perezd> but the APIs changed a lot
00:50 < jesusabdullah> perezd: https://github.com/jesusabdullah/node-ecstatic trying to update this to work with express 3
00:51 < perezd> middlewares seem to all still function normally...
00:51 < perezd> I guess it depends what you are doing :)
00:51 < jesusabdullah> well here's the error in my tests https://gist.github.com/7f7ea083cda2c097c3ad
00:52 < jesusabdullah> I think what's going on here is that app used to be an instance of the core http server but isn't anymore
00:52 < jesusabdullah> ohey it looks like it's right here actually
00:53 < perezd> jesusabdullah: I think thats true, yes
00:54 < perezd> just use debugger and step around
00:54 < jesusabdullah> oh I see what they did
00:54 < jesusabdullah> now you pass the app to the http server
00:54 < jesusabdullah> cute
00:58 < Hotroot> jesusabdullah: I'm using express3
00:58 < Hotroot> jesusabdullah: Oh, looks like you got it. Yeah, you pass it
01:00 < Hotroot> jesusabdullah: Here's my full express, session, socket.io, redis setup if you want to see it for an example (can't promise it's good, but it works)
01:00 < Hotroot> https://github.com/Hotrootsoup/PaiGowPoker/blob/master/server.js
01:00 < T7g> If I can be excused for fanboi'ing a lil, node.js and socket.io is the actual future.
01:01 < T7g> s
02:13 < severeon> Anyone having trouble with running an NPM install?
03:05 < imm> quiet room
03:06 < Ax_SeS> no u
03:22 < niggler> require('crypto').rng and .prng exist but don't appear in the docs
03:28 < RLa> deployed my app to appfog, surprised it works on node 0.6 :)
03:41 < mr_mississippi> new to node. Does everybody use express instead of the built in "http" though?
03:41 < Xeon06> mr_mississippi, "everybody" is a bit strong
03:41 < Xeon06> I know I use it
03:41 < Xeon06> It handles a lot of stuff you don't really want to bother yourself with
03:42 < Xeon06> Routes, URL parsing, middlewares for static file serving, cookie sessions
03:42 < mr_mississippi> cool.
03:42 < mr_mississippi> any tips on what the headers should be for cross-domain ajax? I'm having problems with chrome's 'OPTIONS' request
03:43 <@Nexxy> mr_mississippi, express works ontop of the built-in http module
03:46 < niggler> mr_mississippi: i still use the http module directly, if that's of any consolation :)
04:05 < TehShrike> niggler: do you mostly use it from the server or client side?
04:07 < TehShrike> I've found node's libraries quite sufficient when it comes to playing the HTTP server
04:07 < TehShrike> As  the client, though, I've felt the need for some helper libraries
04:08 < niggler> i probably should have written some middleware, but it was much easier to start from http and build up on the server end than to have to write the middleware for express
04:09 < TehShrike> Hey, when it comes to playing the server, I've found node's built-in libraries to be quite sufficient
04:09 < niggler> http is fine, the question focused on express
04:18 < chewed-on> Yo, if Node.js uses js files, doesn't mean anyone can view the content of the file if they have the path ?
04:19 < onr> you don't serve server-side .js files
04:19 < niggler> chewed-on: if you put the scripts in a directory that isn't being shared, then no
04:20 < chewed-on> niggler: so you're saying don't put it in the www folder ? 
04:20 < niggler> you don't have to 
04:20 < chewed-on> nice
04:20 < chewed-on> and then I just tell Node.js to httpServer to listen to a specific port
04:21 < onr> yes
04:21 < chewed-on> niggler: is there a way to detect if the server is down and then restart it automatically ?
04:21 < chewed-on> bash script ?
04:21 < onr> there are additional apps for this
04:21 < chewed-on> onr: additional apps ?
04:21 < onr> chewed-on: i like supervisord
04:21 < chewed-on> alright
04:22 < niggler> chewed-on: bash script's fine.  i use forever
04:22 < niggler> well forever -w for development
04:22 < niggler> that will restart if you change a file
04:22 < chewed-on> yeah right
04:23 < chewed-on> The thing is, I am implementing a push notification server for ios and if my Node.js server goes down, I won't know why I am not receiving push notification until I check, that's why I am asking :D
04:24 < chewed-on> Man, why I wished I discovered Node.js sooner :P
04:24 < chewed-on> onr: so Supervisord is like a program, just install it, tell it to start on system launch and then add our Node.js process as a worker process yeah, something like that?
04:25 < chewed-on> nice
04:25 < onr> chewed-on: in Ubuntu there's an alternative called Upstart. But I haven never used that one
04:25 < warz> same concept
04:26 < chewed-on> I have one question though, when I tried to run my Node.js server file OUTSIDE the folder using my bash shell, it complains about the path being wrong but when I cd into the folder then run the file, it works. I tried changing my path to use "./file.pem"  but that didn't help
04:27 < niggler> chewed-on: the simplest thing you can do is process.chdir
04:27 < niggler> but there's probably a right way to do it
04:33 < traph> newbie question: is "~" operator for neggation?
04:34 < AAA_awright> traph: Um, no? Where do you see that?
04:34 < agu10^_> should I use a CNAME from mydomain.com. to localhost. instead of using A mydomain.com IP? or can i? that way i can just copy them to other servers with different IPs and they'll still work
04:34 < Mortchek> traph, ~ is bitwise negation; treat the operand as an integer, then flip every bit.
04:36 < AAA_awright> agu10^_: Just keep in mind it adds more lookups and delays the process, and it's illegal to chain a CNAME record to another CNAME
04:36 < traph> Mortchek: thanks!
04:37 < agu10^_> AAA_awright, will a CNAME to localhost work?
04:37 < AAA_awright> No
04:37 < AAA_awright> That's what 127.0.0.1 is
04:37 < traph> AAA_awright: https://github.com/visionmedia/express/blob/master/lib/utils.js
04:38 < agu10^_> oh, well this is strange. does this mean most people have to change the IP from EACH record when they move to another IP?
04:39 < AAA_awright> Systems like that have a DNS server that calculates the record as it's asked. That's what a wildcard name is...
04:39 < AAA_awright> But I'm not sure what you're asking, fully
04:42 < agu10^_> does this mean most people have to change the IP from EACH record when they move to another IP?
04:42 < agu10^_> AAA_awright, will a CNAME to 127.0.0.1 work for online websites?
04:42 < AAA_awright> agu10^_: A CNAME is to another hostname, not an IP address
04:43 < agu10^_> ah yes
04:43 < agu10^_> will adding A 127.0.0.1 point people from outside to the public ip, or will they get to their own PCs?
04:43 < agu10^_> i mean... should I use A records pointing to my public IP or can i have them pointing to my local ip, such as 127.0.0.1 ?
04:43 < AAA_awright> They'll get 127.0.0.1, which always resolves to the local system
04:44 < agu10^_> oh that sucks
04:44 < agu10^_> does that mean all server admins have to change the IP in each record when the server ip changes or move somewhere else?
04:44 < chewed-on> agu10^_: shouldn't you be in C# ? :P
04:45 < chewed-on> agu10^_: have you been converted? :D
04:45 < agu10^_> no. why?
04:45 < AAA_awright> agu10^_: You could, sure
04:45 < agu10^_> maybe, yes
04:45 < chewed-on> hahahaha
04:45 < agu10^_> AAA_awright, is that what's usually done?
04:45 < agu10^_> chewed-on, i will try Node.js
04:45 < AAA_awright> I'm not sure, there's no "right" way
04:45 < AAA_awright> Many DNS servers just calculate the record on-the-fly
04:45 < agu10^_> how can i do that?
04:46 < AAA_awright> There's no database entry sitting on a hard disk as such
04:46 < AAA_awright> Well you have to run your own DNS server for one
04:46 < agu10^_> what do you mean?
04:46 < AAA_awright> I run PowerDNS
04:46 < agu10^_> every domain points to their IP you mean?
04:46 < chewed-on> agu10^_: yeah, what I really like is, a learner was able to install Node.js, and have a running server in minutes, no setting up IIS, no setting up Apache 
04:46 < agu10^_> i run windows server 2008 DNS
04:46 < agu10^_> great. chewed-on Node.js does not use apache or IIS?
04:47 < chewed-on> I think Node.js is its own server, I could be wrong.
04:47 < AAA_awright> agu10^_: Well like some DNS servers can return different records depending on where you are, or time of day, or stupid stuff
04:47 < AAA_awright> They aren't really records sitting in a database
04:47 < AAA_awright> But on many servers they might be, and if they're all A records then yeah, you'll have to change them all by hand
04:48 < agu10^_> AAA_awright, is there a way to make ALL domains point to my server? :P
04:48 < AAA_awright> Do you have a few billion dollars to buy the IANA?
04:49 < AAA_awright> And Verisign with it
04:49 < AAA_awright> :p
04:50 < agu10^_> AAA_awright, nope. i meant in my DNS only
04:50 < AAA_awright> How many domains are we talking?
04:50 < agu10^_> so that if some domain happens to be delegated to my DNS, it will automatically be accepted and used by IIS
04:50 < agu10^_> AAA_awright, any amount.
04:51 < AAA_awright> It depends on your DNS server
05:04 < Aria> It'd be pretty easy to plumb that with powerdns
05:05 < agu10^_> Aria, what about windows server 2008 ?
05:08 < chewed-on> Yo guys, am I right in assuming that using this code:  http://pastie.org/5395149   that my stream.write will overwrite each other ?
05:09 < chewed-on> (I am currently experiencing a problem where not all my notification get sent, I am guessing using a for loop might be the problem and that I need to use some sort of callback mechanism?)
05:10 < Aria> Nope. Writes are queued.
05:10 < chewed-on> Hmmm, that is strange then. I am only getting 2 ouf of 5.
05:10 < chewed-on> of the notification sent
05:12 < Aria> Does write happen to be returning false?
05:13 < chewed-on> Aria: I tried if(!writable) { console.log('Writing failed, kernel buffer full') } but it never output anything, all 5 "Test notification sent!" message fired 
05:28 < TheAceOfHearts> so... I have a server, I wanna keep a node app running even when I'm not ssh'd into the server... is that possible?
05:28 < TheAceOfHearts> cuz whenever I disconnect, it kills the app
05:29 < Aria> Yes. Run it as a proper daemon -- detached from your terminal.
05:29 < Aria> Or under screen or dtach or tmux, a terminal you can reconnect to.
05:29 < Aria> You can 'disown' a process in bash -- node yourapp & disown
05:29 < Aria> That'll at least keep it from getting a SIGHUP as you log out.
05:30 < Aria> So lots of options, of varying degrees of mess.
05:30 < TheAceOfHearts> Thanks!
05:30 < Aria> Sure thing.
05:51 < chewed-on> Aria, TheAceOfHearts and programs like supervisord will take care of that ? :D
05:57 < chewed-on> I am calling conn.close() but the server say <Socket> has no method 'close'
05:57 < chewed-on> conn is declared like so:   var conn = net.createConnection(port);
06:06 < TheAceOfHearts> sorry, no clue
06:14 < gildean> chewed-on: that's because it doesn't have that method
06:14 < gildean> maybe you're looking for end or destroy?
06:15 < gildean> http://nodejs.org/api/net.html#net_socket_end_data_encoding
06:18 < chewed-on> gildean: I am following the book Hands on Node.js and in the TCP client section it said conn.cose()    misprint ?
06:19 < niggler> that looks like a book that has not  been edited chewed-on 
09:19 < kaushik_> hey hi 
09:47 < chewed-on> Guys, when my server starts a Unix socket, it works, the server keeps running. However, after I kill the server using Ctrl + C in my shell, trying to run the same server.js file again ends up giving an error. It seems like the Unix socket that was created was never released/destroyed/free
09:47 < chewed-on> How can I terminate the Unix socket created ? 
09:48 < chewed-on> nevermind: http://stackoverflow.com/questions/4075287/node-express-eaddrinuse-address-already-in-use-kill-server
09:48 < chewed-on> need to learn to Google more + copy and paste some error message keywords.
09:48 < onr> that's okay, ask here before googling
09:56 < deoxxa> onr: wat
09:56 < chewed-on> deoxxa: say hello to Mr. Onr Sarcasm
09:57 < chewed-on> erm, seems like doing ps aux | grep node, the PID keeps changing.
09:57 < onr> no sarcasm
09:58 < chewed-on> onr: do you use ps aux | grep node to kill a Unix socket ?
09:58 < chewed-on> I am following this page: http://stackoverflow.com/questions/4075287/node-express-eaddrinuse-address-already-in-use-kill-server  but it the PID keeps changing, I can't kill the node
09:59 < chewed-on> It's become self aware
10:00 < chewed-on> might have to reboot = /
10:18 < Raynos> whats a good node websocket client?
10:19 < clever> Raynos: i like using socket.io
10:19 < Raynos> are you kidding me?
10:19 < Raynos> A websocket client. A node one.
10:19 < Raynos> used to connect to a websocket server from node
10:19 < clever> ah, from within node
10:20 < clever> not sure then
10:20 < mmalecki> Raynos: `ws`
10:20 <@konobi> websockets-stream?
10:22 < Raynos> i think ill use ws
10:23 < Raynos> it seems good enough
10:33 < deoxxa> what's something with a binary protocol and no pure javascript library yet?
10:33 < deoxxa> i want to get some more experience with handling that kind of thing
10:33 < deoxxa> extra points if the protocol isn't documented, or is poorly documented
10:36 < Bilge> Cassandra
10:36 < mmalecki> deoxxa: hdfs
10:36 < mmalecki> deoxxa: please implement hdfs
10:36 < deoxxa> hdfs... hmm
10:36 < mmalecki> also protobuf but I'm working on it already
10:39 < Sven_vB> deoxxa, i'd like an rAthena client lib in JS
10:39 < Sven_vB> it should be documented in the source code of the rAthena server ;P
10:39  * deoxxa looks at that too
10:42 < Sven_vB> it probably couldn't hurt to add some abstraction rather than make pure bindings, because what i have seen of that protocol seems to be a little weird
10:42 < deoxxa> Sven_vB: this actually looks pretty easy
10:42 < Sven_vB> oh cool :D
10:42 <@konobi> deoxxa: dns?
10:42 < deoxxa> basically i'm looking for reasons to improve https://github.com/deoxxa/dissolve and https://github.com/deoxxa/concentrate
10:42 < deoxxa> konobi: there's no pure js dns library? really? :x
10:43 <@konobi> not a reasonable one
10:43 < deoxxa> i see
10:45 < deoxxa> great success, there's no "dennis" package on npm
10:47 < SomeoneWeird> DHCP
10:55 < deoxxa> ooh, dns has strangely aligned stuff
10:55 < deoxxa> interesting
10:59 < mmalecki> deoxxa: yeah, no, you don't want that
10:59 < mmalecki> you'll spend days fine-tuning it :)
11:01 < SomeoneWeird> dhcpppp
11:01 < deoxxa> i think i'm nearly done with the parser
11:01 < deoxxa> dissolve makes this so damn easy
11:01 < SomeoneWeird> deoxxa, lol yeah
11:01 < SomeoneWeird> im using it for a game im doing 
11:01 < SomeoneWeird> same structure as jsmc
11:01 < SomeoneWeird> easy as hell
11:01 < deoxxa> nice! :D
11:02 < deoxxa> i was talking to felixge about dissolve/concentrate at nodejsconf.it and he had some good suggestions for both of them
11:02 < SomeoneWeird> nice, nice
11:03 < deoxxa> dissolve could be largely moved to a code generation kind of model, and concentrate could be sped up a bit in some cases by pre-allocating large buffers then trimming them down, instead of precalculating the required length of the buffer
11:03 < deoxxa> meanwhile the apis would stay the same
11:04 < SomeoneWeird> yeah
11:04 < sshaginyan> Hey guys I'm using http.get('http://www.google.com/', responseHandler); How do I pass a parameter to the responseHandler?
11:04 < SomeoneWeird> i have to pad some of the strings because of the fixed length
11:04 < SomeoneWeird> you can't
11:05 < sshaginyan> I want to pass the url ('http://www.google.com/') to the responseHandler
11:05 < deoxxa> sshaginyan: short answer is you can't
11:05 < deoxxa> sshaginyan: long answer is to wrap it in another function (easy mode), or get tricky with .bind() (hard mode, nicer to v8 sometimes)
11:05 < SomeoneWeird> http.get('http://www.google.com/', function(res) { responseHandler(res, 'http://www.google.com') });
11:05 < SomeoneWeird> ^^ is the easy mode :P
11:05 < deoxxa> yep :P
11:06 < deoxxa> and it's perfectly acceptable in a case like that - but in a tight loop, sometimes it pays to do things the hard way
11:06 < deoxxa> (you're probably not doing that in a tight loop, and in any case, the http request is going to take much longer than a function call)
11:07 < sshaginyan> k
11:07 < SomeoneWeird> you're welcome >.>
11:07 < Raynos> node <-> browser webrtc API ( https://github.com/Raynos/peer-connection-shim#example )
11:08 < SomeoneWeird> now comes all the clientside stuff for this game
11:08 < SomeoneWeird> ... yay
11:09 < Raynos> SomeoneWeird: clientside games are fun though!
11:09 < Raynos> you get to hand optimize the canvas
11:09 < deoxxa> Raynos: data channel?
11:09 < SomeoneWeird> Raynos, stuff that
11:09 < SomeoneWeird> i'm using threejs lol
11:09 < Raynos> deoxxa: data channel only. No media streams
11:10 < deoxxa> yay!
11:10 < Raynos> media streams are hard to emulate
11:10 < deoxxa> media streams ftl, data channel is where the interesting stuff will be
11:10 < Raynos> oh, when I say datachannel I mean datachannel emulation :P
11:10 < Raynos> it has the same API but isn't p2p
11:10 < deoxxa> heh
11:10 < deoxxa> does any browser actually implement datachannel yet?
11:10 < Raynos> but thats ok, pretend its p2p
11:11 < SomeoneWeird> lol
11:11 < Raynos> firefox aurora has a buggy datachannel implementation
11:11 < deoxxa> ah
11:11 < Raynos> i plan to use the shim to build my app
11:11 < deoxxa> i should make bittorrent.js a bit more useful
11:11 < Raynos> by the time the app is ready datachannels should have landed in firefox + chrome
11:11 < deoxxa> nice
11:12 < SomeoneWeird> if aurora has it i'd be surprised if chrome nightly didnt
11:12 < Raynos> chrome doesnt have it
11:12 < Raynos> end of the year
11:12 < rvagg> aurora has plenty that chrome doesn't
11:12 < SomeoneWeird> weird,
11:12 < SomeoneWeird> yeah
11:12 < sshaginyan> deoxxa: So in the http.get callback response object I don't have at least the domain?
11:13 < SomeoneWeird> not in res.headers.host or something sshaginyan ?
11:13 < test_> aa
11:13 < deoxxa> sshaginyan: there's docs, and there's console.log
11:13 < test_> test
11:13 < Raynos> deoxxa: what do you want to use datachannel for?
11:13 < deoxxa> Raynos: bittorrent! also, other things
11:13 < sshaginyan> SomeoneWeird: WHere are the docs for the objects?
11:13 < Raynos> you plan to implement the bittorrent spec?
11:13 < Raynos> that sounds beastly
11:13 < deoxxa> Raynos: https://github.com/deoxxa/bittorrent.js
11:13 < SomeoneWeird> he's already done it :P
11:13 < deoxxa> :)
11:13 < sshaginyan> like where is the doc for the response object?
11:14 < Raynos> I see
11:14 < deoxxa> Raynos: basically i stalled on it because i can't think of a good way to structure the logic
11:14 < deoxxa> Raynos: the parser itself is fully functional
11:14 < Raynos> Well I need to finish my signaling channel stuff and peer introducer thing and then I want to build a 30 line p2p file sharing demo
11:15 < deoxxa> neat
11:15 < Raynos> from there on maybe implement something more heavy :P
11:15 < deoxxa> i need to move that parser to dissolve as well
11:15 < deoxxa> it's soooo much faster than node-binary
11:15 < deoxxa> like, it's almost funny how much faster it is
11:15 < deoxxa> and it has an almost identical api
11:16 < Raynos> deoxxa: I see you like java https://github.com/deoxxa/bittorrent.js/tree/master/lib/protocol/tcp
11:16 < deoxxa> actually that's the only project where i have stuff structured like that
11:16 < deoxxa> because there's so many bits and pieces to this thing
11:16 < deoxxa> there's a udp protocol, a utp protocol, and potentially many others that don't exist yet
11:17 < deoxxa> like there's nothing stopping you from running bittorrent over icmp if both peers can handle it
11:18 < Raynos> I can actually use some help with this shim
11:18 < Raynos> because it has a retardedly inefficient protocl
11:18 < Raynos> no idea how to actually get it to support binary
11:18 < deoxxa> take a look at https://github.com/deoxxa/dissolve
11:18 < deoxxa> that's what i've been using for binary stuff lately
11:19 < Raynos> its more about the streaming protocol
11:19 < Raynos> how do you set headers, how do you multiplex etc
11:19 < deoxxa> ahh
11:19 < deoxxa> crazy
11:19 < Raynos> without json encoding everything for convenience
11:19 < Raynos> because I use header-stream and mux-demux for headers & multiplexing
11:19 < Raynos> and it makes my life easy but the raw data is bloated 
11:20 < sshaginyan> deoxxa: How do I get documentation on the response object? Like descriptions for all the fields within it? I'm trying to get the domain name
11:20 < deoxxa> sshaginyan: http://nodejs.org/docs/latest/api/all.html
11:21 < deoxxa> sshaginyan: i'm not sure what makes you think there's a domain name in there anywhere though
11:21 < sshaginyan> How do I know what's in there?
11:21 < deoxxa> ...
11:21 < sshaginyan> don't say console.log
11:22 < deoxxa> hold on, let me get this straight
11:22 < sshaginyan> Is there a nice formatted page with descriptions of the fields?
11:22 < deoxxa> you want to know the composition of an object
11:22 < sshaginyan> yes
11:22 < deoxxa> i.e. you want to inspect its fields
11:22 < deoxxa> and you don't want to just dump it to screen?
11:22 < deoxxa> how is console.log(response) not your first port of call?
11:22 < deoxxa> just seems so easy
11:22 < sshaginyan> what if some of the fields aren't self explanitory?
11:23 < deoxxa> what if? who know?
11:23 < deoxxa> *knows
11:23 < sshaginyan> I've had this problem with other things as well
11:23 < deoxxa> you know the information you're looking for is on that page man
11:23 < deoxxa> those are the docs
11:23 < deoxxa> i'm sorry but there's no "description of what sshaginyan wants to do today" page
11:24 < deoxxa> maybe you'll just have to do like everyone else and dig a little
11:24 < sshaginyan> k well thanks
11:24 < deoxxa> not trying to be a jerk here
11:24 < sshaginyan> no man
11:24 < sshaginyan> I understand
11:24 < deoxxa> but like, this is the general process that people take for finding things out
11:25 < deoxxa> just in general
11:25 < deoxxa> not even just for node
11:25 < deoxxa> not even just for programming
11:26 < sshaginyan> got it
11:26 < Gabriel403> I tend to dive into the source to find out stuff
11:26 < Pete3> hey, guys - hope your having a good sunday :)
11:26 < deoxxa> sshaginyan: the dynamic nature of javascript makes console.log incredibly useful for this kind of thing
11:26 < deoxxa> sshaginyan: even more useful than docs, in most cases
11:27 < Pete3> anyone know how i can send a ctrl-c sequence to a child process i created with spawn... on windows :)
11:28 < sshaginyan> deoxxa: Will you be willing to take a look at my code really fast?
11:28 < deoxxa> sshaginyan: sure thing
11:28 < Pete3> i'm trying to write a unit test that checks that when my process is killed it kills it's children - this happens at the command line with ctrl-c but in my test which uses child.kill to simulate it it doesn't work :(
11:28 < sshaginyan> deoxxa: http://pastie.org/5395983
11:29 < sshaginyan> deoxxa: On line 78 I'm getting the link variable 
11:30 < sshaginyan> But I need this link variable inside on responseHandler function 
11:30 < deoxxa> ok
11:30 < sshaginyan> SO you're telling me this is hard to do?
11:31 < deoxxa> not at all
11:31 < deoxxa> function responseHandler(url, message) { ... }; http.get(link, function(data) { return responseHandler(link, data); });
11:31 < deoxxa> something like that would work
11:31 < deoxxa> (is that how http.get actually works?)
11:31 < deoxxa> no, it's not
11:32 < deoxxa> http.get(link, function(response) { return responseHandler(link, response); });
11:32 < deoxxa> "message" makes it look like it's a chunk of data
11:32 < deoxxa> makes the code harder to follow
11:33 < sshaginyan> lol thanks zoo much don't know why I didn't think of that
11:43 < deoxxa> konobi: https://github.com/deoxxa/dennis
11:43 < deoxxa> (obviously not fully functional yet)
11:55 < jasper^off> hej guys, I'm having a problem solving asynchronious behaviour..maybe someone can give me a hand.,......I have a function which we will call login....this function gets called with certain credentials...and should return true or false.....this function will then contact the database to see if the credentials are correct.....but since the database is being called asycnhroniously....it can't 
11:55 < jasper^off> give any return to the function
11:55 < jasper^off> how should I solve this?
11:56 < SomeoneWeird> just return true or false from inside the async function?
11:59 < Raynos> deoxxa: index.js that redirect to lib folders are frustrating
11:59 < Raynos> please dont do that
12:00 < Raynos> its 20 lines of code
12:00 < Raynos> put it in the index.js
12:00 < deoxxa> it's 20 lines of code right now
12:00 < Raynos> when it gets bigger
12:00 < Raynos> migrate it to more files then
12:00 < Raynos> you might as well have dennis/org/deoxxa/parser
12:01 < deoxxa> that's not exaggerated
12:02 < deoxxa> it's nowhere near done
12:02 < Fike_> hm
12:02 < Fike_> anyone active have any experience with eventemitter?
12:02 < Raynos> probably everyone, yes.
12:02 < rvagg> that's kind of like asking: anyone have experience drinking water?
12:02 < deoxxa> Fike_: 1) ask actual question 2) ??? 3) profit
12:03 < Fike_> Sorry for creating such a problem, lol.
12:03 < jasper^off> SomeoneWeird how can I return true or false from within the function..
12:03 < jasper^off> it being asynchronious....the rest of the function will just continue running
12:03 < deoxxa> Fike_: just trying to save time for everyone :P
12:04 < deoxxa> jasper^off: pass in a callback to be called when you have the result
12:05 < Fike_> Anyway, my question is sort of broad… I have a "class", but when I instantiate it, it needs to emit various events. For example when something specific is sent from the socket, I need to emit a certain event that passes an object with various details of the message.
12:05 < Fike_> I have no experience using the events module.
12:05 < deoxxa> jasper^off: if that made no sense, you probably need to read up a bit on how asynchronous javascript is commonly done
12:06 < jasper^off> it made sense...I'm wondering though...is the async module usefull for this?
12:06 < deoxxa> Fike_: function MyThing() { events.EventEmitter.call(this); }; util.inherits(MyThing, events.EventEmitter); MyThing.prototype.hello = function() { this.emit("hello"); };
12:07 < jasper^off> like series() and waterfall() deoxxa
12:07 < deoxxa> jasper^off: it might be for your specific case - but that module is mainly about composing behaviour from small asynchronous actions. it's not a "make my asynchronous code look synchronous" thing
12:10 < Fike_> deoxxa: util.inherits(socky.events.EventEmitter);
12:10 < Fike_>                             ^
12:10 < Fike_> TypeError: Cannot read property 'EventEmitter' of undefined
12:11 < deoxxa> Fike_: and?
12:11 < deoxxa> Fike_: take a closer look at what i wrote
12:11 < Fike_> I did what you said
12:11 < SomeoneWeird> lmao
12:11 < deoxxa> nope
12:13 < Fike_> deoxxa: I feel silly now...
12:14 < deoxxa> \o/
12:14 < deoxxa> that's good
12:14 < deoxxa> that means you're learning
12:14 < deoxxa> :3
12:14 < Fike_> heh :3
12:14 < jasper^off> deoxxa would you mind taking a look at my code... maybe that'll clarify what I mean?
12:14 < jasper^off> http://pastebin.com/z40vEWM8
12:15 < Fike_> that code looks horrible >.<
12:15 < Fike_> to many spaces between everything
12:15 < Fike_> too*
12:15 < Pete3> deoxxa: is this part necessary... events.EventEmitter.call(this); ...?
12:15 < jasper^off> thanks Fike_ ... I prefer it this way :P
12:16 < Pete3> i hhave never done this and never had a problem emitting events - wondering if i am going to run into a big problem one day ;)
12:16 < Fike_> I hate when people space everything, hard on my eyes lol
12:16 < Fike_> Pete3: how do you do it?
12:16 < jasper^off> but you got any suggestions also Fike_ ?
12:16 < Pete3> i do the same thing with the util inherits method
12:17 < deoxxa> Pete3: i just kind of do it reflexively now - what it does is calls the parent constructor
12:17 < Pete3> i just never called that bit in my constructor
12:17 < deoxxa> Pete3: it might not matter for EventEmitter, but for some other modules it does
12:17 < Pete3> ah ok, cool
12:18 < Pete3> it's probably a good habit :)
12:18 < SomeoneWeird> yeah
12:18 < deoxxa> jasper^off: you probably don't want to be throwing exceptions so much - with asynchronous stuff it can get really confusing really quick
12:19 < jasper^off> yeah deoxxa .. that's the problem I'm allready facing
12:19 < jasper^off> I would prefer to do the database stuff in sync...I'm, not used to programming this way
12:19 < jasper^off> without logical flows :P
12:19 < deoxxa> jasper^off: what you want to do is make that function(database, socket, data, cb), then call cb with the result of the login (like cb(Error("invalid password")) or cb(null, user))
12:21 < deoxxa> general convention these days is cb(error, other, parameters, here), with `error' being null on no error, or something useful (usually an Error object) when there was a problem
12:21 < jasper^off> deoxxa if I have for example a function that does the following......first query 1 database....then query the next database.......I could call the first query like function(database, socket,data,cb) 
12:21 < jasper^off> would I then have to create a callback in where the 2nd query is ran?
12:22 < jasper^off> and give that a seperate callback again then?
12:22 < jasper^off> because that looks an awfull lot like the series() or waterfall() from async?
12:23 < Fike_> mmm deoxxa having an issue, doesn't seem to be working now… http://pastie.org/private/zudpcf1yd9cvogssddtw
12:23 < deoxxa> jasper^off: the async library is an option, but it's not necessarily the best way to approach this problem
12:24 < Fike_> I can't find any problems based on the code you gave me
12:24 < deoxxa> Fike_: what's `nodeirc'? doesn't seem to be defined anywhere
12:24 < Fike_> oh, thats the name of the function
12:24 < SomeoneWeird> util.inherits(nodeirc, events.EventEmitter); < nodeirc should be socky
12:25 < Fike_> no, it is in the code I have
12:25 < jasper^off> deoxxa what would be the objections against using it then ? any disadvantages?
12:25 < deoxxa> jasper^off: it adds unnecessary overhead, an unnecessary dependency, and is just plain overkill
12:25 < deoxxa> jasper^off: check out http://callbackhell.com/
12:26 < jasper^off> will read it, thanks for your help so far deoxxa
12:27 < Fike_> deoxxa, SomeoneWeird any suggestions? :P
12:28 < deoxxa> Fike_: nothing aside from what's already been mentioned
12:28 < SomeoneWeird> <SomeoneWeird> util.inherits(nodeirc, events.EventEmitter); < nodeirc should be socky
12:28 < Fike_> SomeoneWeird: I responded to that.
12:28 < Fike_> the pastie was incorrect
12:28 < Fike_> my code was fine
12:28 < deoxxa> Fike_: maybe read http://nodejs.org/docs/latest/api/all.html#all_util_inherits_constructor_superconstructor
12:28 < SomeoneWeird> paste a correct one then
12:29 < Fike_> http://pastie.org/private/mt8mftdhqhwyijo9lv1a
12:30 < deoxxa> Fike_: and your symptoms are...
12:30 < Fike_> deoxxa: nothing is logged to the console
12:31 < deoxxa> Fike_: nothing? not even any errors?
12:31 < Fike_> nope
12:31 < deoxxa> because you should be getting errors there
12:31 < Fike_> nothing
12:31 < deoxxa> specifically with `this.ssl = config.ssl || false;'
12:31 < deoxxa> since `config' is undefined
12:32 < deoxxa> so the code you pasted is not the code you're running
12:32 < deoxxa> you can see how that makes things hard
12:32 < SomeoneWeird> yeah
12:32 < Fike_> hm
12:32 < Fike_> I'll paste exactly what I have
12:32 < deoxxa> good idea!
12:32 < SomeoneWeird> that would help
12:32 < SomeoneWeird> :p
12:32 < Fike_> :P
12:33 < Fike_> also deoxxa, why doesn't that work?
12:33 < Fike_> the config.ssl bit
12:33 < Fike_> if it isn't defined I want it to default to false
12:33 < SomeoneWeird> because config is undefined
12:33 < Fike_> SomeoneWeird: I mean when I don't pass a config object
12:33 < SomeoneWeird> this.ssl = (config&&config.ssl) ? config.ssl : false
12:34 < SomeoneWeird> because it doesn't know that config is supposed to be an object
12:34 < Fike_> ah
12:35 < deoxxa> also you're attaching that event listener after the event has fired
12:35 < Fike_> oh, that's probably it
12:36 < Fike_> I'll try using a setTimeout in the constructor to test it again
12:36 < deoxxa> process.nextTick()
12:36 < SomeoneWeird> ^^
12:36 < Fike_> does that take the same arguments? :P
12:37 < SomeoneWeird> process.nextTick(cb)
12:37 < deoxxa> Fike_: docs are good for what ails ya'
12:38 < deoxxa> Fike_: when, of course, your ailment is a lack of knowledge about something that's documented in those docs
12:39 < Fike_> TypeError: Object #<Object> has no method 'emit'
12:39 < Fike_> when I used process.nextTick(function() { this.emit("test", "mhm");  });
12:39 < deoxxa> welcome to the wonderful world of scope
12:39 < Fike_> heh
12:39 < deoxxa> long story short: `this' inside that callback is different to `this' outside it
12:40 < deoxxa> there's a couple of ways to handle that
12:40 < deoxxa> 1) keep a reference to `this' in another variable, rely on scoping to pull it into the callback i.e. `var self = this; process.nextTick(function() { self.emit(...); });'
12:40 < SomeoneWeird> Fike_, var self = this; process.nextTick(function() { self.emit("test", "mhm"); });
12:41 < deoxxa> 2) .bind the callback function to change its scope i.e. `process.nextTick(function() { this.emit(...); }.bind(this));'
12:41 < Fike_> ah, works now
12:41 < deoxxa> 3) .bind again, but do away with the wrapper function entirely i.e. `process.nextTick(this.emit.bind(this, "test", "mhm"));'
12:41 < Fike_> thanks deoxxa and SomeoneWeird :)
12:42 < deoxxa> (note that 3 only works if you know all the arguments ahead of time)
13:09 < jasper^off> hej guys, if I have a function which calls another function......which then in return calls a 3rd function......would it be posible to have callbacks linked to eachother?
13:09 < jasper^off> so that they all use the same callback ?
13:16 < mscdex> jasper^off: yes, but make sure it's only called once
13:28 < chewed-on> That anonymous function in Javascript is really hurting my head lol
13:28 < chewed-on> Makes you have to read the code multiple times to understand it.
13:34 < jasper^off> then name your functions chewed-on
13:34 < jasper^off> is it possible to call functions using the name of the function which is stored in a variable
13:34 < jasper^off> ?
13:36 < deoxxa> jasper^off: better is just to store a reference to the function
13:36 < ukwiz> I have just downloaded node-v0.8.14-linux-x64. How do I install it?
13:36 < deoxxa> jasper^off: in javascript, functions are actual objects, so you can pass references to them around however you like
13:37 < deoxxa> ukwiz: couple of different ways
13:37 < deoxxa> ukwiz: 1) unzip it, dump the binaries somewhere in your path
13:37 < deoxxa> ukwiz: 2) unzip it, add the location you unzipped it to to your path (this is better in my opinion, means the node installation is completely isolated)
13:42 < ukwiz> deoxxa: I was hoping to install it system wide
13:43 < deoxxa> ukwiz: well, put it somewhere that's in the system path
13:43 < ukwiz> deoxxa: I an do it by making the source and then a make install I presume
13:43 < deoxxa> that's another option
13:47 < chewed-on> uh…guys, when you use npm to install a module, it doesn't go into a central location does it ? It goes into your current directory.
13:47 < substack> chewed-on: yep!
13:47 < chewed-on> (I had assumed all this time that using npm install <module_name> would install it into a global folder somewhere in the computer)
13:47 < substack> that's by design
13:48 < chewed-on> yeah ok, that's cool, it just caught me by surprise.
13:48 < chewed-on> substack: so…does that mean I have to copy modules over for each application I build ?
13:48 < substack> you can just npm install them
13:48 < substack> it helps to maintain a package.json for each application
13:49 < chewed-on> on the other hand, it can mean I can run my application using different versions of a third party module
13:49 < substack> that way each application can depend on a specific version
13:49 < chewed-on> substack: :)
13:49 < chewed-on> substack: beat you to it :D
13:49 < chewed-on> substack: thanks
13:54 < Fike_> mm deoxxa having another little issue, in the constructor I have self.connect(); (self = this), however when ran it says TypeError: Object [object Object] has no method 'connect'
13:54 < Fike_> unsure why this isn't working
13:55 < Fike_> I have myobj.prototype.connect = function() {}
13:56 < jasper^off> deoxxa have you ever used node-mysql ?
14:20 < jasper^off> hej guys....how can I change a string value into a function name?
14:20 < jasper^off> like I want to call the function which name is stored in a string?
14:22 < SomeoneWeird> jasper^off, maybe this[functionnameinstring]()?
14:22 < deoxxa> jasper^off: that concept is broken
14:22 < SomeoneWeird> yeah
14:23 < agu10^_> how does twitter manage to load /i/something INSTANTLY in the URL, and THEN load the actual page using ajax? How do they change the URL without having to reload the website?
14:23 < deoxxa> jasper^off: function x() { function a() {} }; function y() { function a() {} }; // what
14:23 < deoxxa> agu10^_: history api
14:23 < deoxxa> agu10^_: pushstate
14:23 < deoxxa> !next
14:23 < agu10^_> which one of them?
14:24 < deoxxa> pushState is part of the history api
14:24 < SomeoneWeird> deoxxa, https://github.com/SomeoneWeird/icanhazprotocol
14:25 < deoxxa> jasper^off: if you want to keep a reference to a function to call later, store it in a variable. `function a() {}; var b = a; b();'
14:25 < deoxxa> SomeoneWeird: neat
14:26 < SomeoneWeird> i just turned the stuff i made for the game im doing into that
14:26 < SomeoneWeird> found it a lot easier :P
14:26 < deoxxa> yay, libraries!
14:27 < SomeoneWeird> :p
14:27 < SomeoneWeird> gives me something todo lol
14:27 < jasper^off> deoxxa it's not really a reference in that form
14:28 < jasper^off> I'm getting the name of the function via a socket....so for example....I send over the socket ....  'user.login'
14:28 < SomeoneWeird> thats like
14:28 < SomeoneWeird> really insecure
14:28 < jasper^off> then I want to be able to directly use that variable I got sent via the socket to call user.login( data , data , data )
14:28 < deoxxa> yeah
14:28 < deoxxa> that's very broken
14:29 < jasper^off> could be...but is it possible?
14:29 < deoxxa> there's a whole bunch of reasons why it's simply not correct
14:29 < jasper^off> like what?
14:29 < SomeoneWeird> it is, but you shouldn't be doing it
14:30 < deoxxa> what is "user" supposed to refer to in that context? what stops someone from sending process.exit?
14:30 < jasper^off> I'm first checking the variable against a list of allowed commands..
14:30 < deoxxa> then jsut do it there
14:30 < deoxxa> if (whatever === "user.login") { user.login(); }
14:31 < jasper^off> deoxxa ... that's not really the way I'm doing it :P
14:32 < deoxxa> ok then
14:32 < deoxxa> well, i'm going out
14:32 < deoxxa> so good luck i guess!
14:33 < jasper^off> deoxxa but you don't want to tell me how to reference that string to use it as a function ? :P
14:33 < deoxxa> no, because it's a bad idea
14:34 < deoxxa> i'm not in the business of telling people how to do broken things
14:34  * deoxxa gone
14:34 < jasper^off> bah
14:35 < chewed-on> has anyone here used Should module to do automated unit testing ?
14:37 < jasper^off> ah ok..putting eval() before it fixed it :P
14:41 < chewed-on> why is mocha *.js not working ? :(
14:41 < chewed-on> hmm, not from outside the folder.
14:41 < chewed-on> :D
14:42 < chewed-on> You guys didn't see me today
14:42 < chewed-on> Ssssh!
14:58 < jamescarr> hey, is there anyway to store multiple modules in a single git repo?
14:58 < deoxxa> jasper^off: that's a really, really bad way to do that
14:58 < jamescarr> I have a large app that I sliced parts up into separate npm modules...
14:58 < jamescarr> but I'm running low on git repositories :)
14:59 < jamescarr> (they're private modules)
14:59 < deoxxa> how exactly do you run out of git repositories...
15:00 < jasper^off> deoxxa but why?
15:01 < deoxxa> jasper^off: it's needlessly complex and now seems to rely on eval()'ing user-submitted input
15:02 < deoxxa> also it locks your network protocol and implementation together in a way that i haven't even seen before
15:02 < deoxxa> it's just crazy
15:02 < deoxxa> (not in a good way)
15:03 < jamescarr> deoxxa, private git repos
15:04 < jamescarr> deoxxa, my client is cheap, does not want to pay for more than 10 git repos eyt
15:04 < jamescarr> *yet
15:04 < deoxxa> jamescarr: uh, git doesn't cost anything
15:04 < deoxxa> jamescarr: reading between the lines though, it sounds like you're directly equating "git" to "github"
15:05 < deoxxa> jamescarr: and the answer to your initial question is "sure, why not. npm doesn't necessarily care about your version control"
15:07 < jamescarr> feels silly being "schooled" that git and github isn't the same thing when I have setup Github Enterprise, Atlassian Stash and barebones git servers for clients :)
15:08 < deoxxa> jamescarr: well you never mentioned github (in fact i'm still just guessing)
15:09 < deoxxa> jamescarr: you don't necessarily have to keep your modules anywhere other than node_modules, btw. you can check them in with the rest of your code if you like.
15:10 < onr> what is Meteor
15:10 < jamescarr> I don't quite mean that
15:10 < jamescarr> I .gitignore node_modules
15:10 < jamescarr> because those are installed via npm
15:11 < jamescarr> I mean, I create custom npm modules to install with my app to divide larger systems into smaller parts
15:11 < jamescarr> I ran out of my client's private github repos though
15:11 < jamescarr> ah fuck it. I'll just upgrade his account and tell him that's the cost
15:12 < deoxxa> jamescarr: that doesn't sound unreasonable to me
15:12 < jamescarr> yeah it's not. His business is growing, so it doesn't hurt to pay an extra $25 a month :)
15:12 < deoxxa> jamescarr: pretty much any option other than getting more repositories (somehow) is going to be really messy and hard to maintain
15:13 < jamescarr> yeah, I kept thinking it would increase complexity to be all the modules into one git repo
15:13 < deoxxa> you could also get your own couchdb server, for a better npm experience (proper semver, versioning decoupled from git, etc)
15:15 < deoxxa> iriscouch is cheap (or free)
15:17 < jamescarr> deoxxa, yeah, that's the other option
15:28 < lpin> anyone know an alternative sessiom middleware module for connect
15:29 < lpin> ?
15:38 < Guest16401> Hi
15:40 < Shriki> Hi
15:41 < klaemo> hey, how do you all track bugs in a small team for a non-open source/non-github project (lame, i know haha)?
15:41 < drudge> klaemo: i use gitlab
15:41 < Shriki> i need some help with node js
15:42 < klaemo> drudge: looks nice, does something like that exist as a hosted solution or SaaS?
15:43 < drudge> klaemo: they do offer a hosted model, http://blog.gitlab.com/pricing/
15:44 < klaemo> drudge: sweeeet!! :) thanks
15:45 < deoxxa> Shriki: http://i.imgur.com/PWvBp.jpg
15:49 < aleksandar> hey guys, I can't seem to find a easy goto guide for how to create a class... is there any easy solution to creating a class? I managed to get something like a class but it's not instanced..
15:50 < drudge> aleksandar: check out http://howtonode.org/prototypical-inheritance
15:51 < mscdex> \o/ sftp!
15:53 < drudge> nice mscdex
16:04 < bitfed> A project I've been working on so I don't have to code in silence anymore: http://soundcloud.com/bitfed/soundscape-demo-a
16:07 < AAA_awright> klaemo: You know GitHub does do private repos, right?
16:07 < timeturner> bitfed: that sounds relaxing
16:08 < AAA_awright> klaemo: Or just install any old bug tracker, I like Flyspray
16:08 < klaemo> AAA_awright: yes, i know about private repos, i just don't want to pay for gh yet ;)
16:18 < aslant> In the past I've successfully installed node about 20 times on linux/OSX. This time round I'm failing dismally. When it comes to "make install" I'm getting 'command not found'. Presumably the configure stage is failing? 
16:19 < Zelest> How do one setup an instance of nodejs and expressjs on any of the lower ports without running it as root? As in, how does people normally do this? iptables/pf rules? run nginx or so infront of it? fiddle with the sysctl settings to allow regular users to listen on lower ports?
16:19 < aslant> errr... maybe this distro doesn't have make
16:19 < rudiX> mac os ? aslant 
16:20 < mscdex> Zelest: use iptables
16:20 < aslant> rudiX: currently installing on CentOS. Perhaps I need to manually install make? 
16:20 < mscdex> Zelest: that's the easiest way
16:20 < Zelest> mscdex, Ah
16:21 < aslant> rudiX: yep. Looks like I had to yum install make. Sry.
16:21 < Zelest> How do one handle multiple domains on the same IP then? Or will that require some sort of proxy to route the domain to the correct node instance?
16:21 < rudiX> aslant: install gcc cpp
16:21 < rudiX> yeah and make
16:21 < aslant> rudiX: :)
16:21 < mscdex> Zelest: you just look at the Host header
16:21 < Zelest> Ah, fair enough
16:21 < rudiX> Zelest: try nginx as proxy
16:21 < mscdex> Zelest: i think there are even express/connect middleware for dealing with multiple domains
16:22 < Zelest> Ah, sweet
16:22 < Zelest> How do people run the server btw? Just node app.js (or through npm) to make it form and log to a file?
16:23 < Zelest> Or do you run it in like screen?
16:23 < rudiX> I am using "forever"
16:23 < rudiX> "forever start /path/server.js"
16:23  * Zelest googles forever node
16:23 < bitfed> thx timeturner
16:24 < whiskers75> why am I getting a write EPIPE error with the server.js code from github.com/whiskers75/zork?
16:24 < mscdex> i use upstart on ubuntu
16:24 < mscdex> sysvinit script on centos
16:24 < mscdex> whiskers75: your pipe has been eaten by a grue
16:25 < whiskers75> mscdex: very funny.
16:26 < whiskers75> oh I think I get it...
16:26 < whiskers75> my child process doesn't work.
16:26 < Zelest> Is it worth building a site for production in node/express? I'm somewhat worried it's all bleeding edge and whatever works now, won't work in a month or so.
16:28 < whiskers75> that
16:28 < whiskers75> should work...
16:28  * whiskers75 commits the changes to the repo
16:28  * whiskers75 tests it
16:29 < whiskers75> it failed
16:29 < whiskers75>   args.unshift(file);
16:29 < whiskers75>        ^
16:29 < whiskers75> TypeError: Object $PWD/Zork/DATA/ZORK1.DAT has no method 'unshift'
16:30 < whiskers75> why doesn't that work?
16:31 < whiskers75> OH i get it, args needs to be a flippin' array
16:31 < aho> because that thing has no unshift method *shrug*
16:31  * whiskers75 commits and tests
16:32 < aleksandar> is this the correct way to declare static functions within a class? function x() {} export.x = x;
16:32 < whiskers75> write EPIPE. i hate you, child process. :)
16:33 < whiskers75> i need to fix up my code
16:36 < whiskers75> how do I run 'frotz $PWD/Zork/DATA/ZORK1.DAT' using child_process.spawn()?
16:40 < whiskers75> bump? 
16:45 < mscdex> whiskers75: why not use the built-in __dirname instead of $PWD ?
16:45 < gildean> whiskers75: var child = spawn('program', ['switch1', 'switch2']);
16:45 <@mbalho> whoa are you making a zork node module?
16:45 < mscdex> or don't use an absolute path at all
16:45 <@mbalho> that is almost as cool as http://npmjs.org/logo
16:45 < gildean> you can actually give cwd to spawn
16:46 < mscdex> that too
16:46 < whiskers75> yes i am
16:46 < whiskers75> not a module
16:46 < whiskers75> a server
16:46 < whiskers75> thanks
16:47 < whiskers75> ah i see. i need to wrap everything in util.inspect()
16:56 < whiskers75> Why does this happen with my zork process being piped to my socket? :
16:56 < whiskers75> >help
16:56 < whiskers75> '<Buffer 68 65 6c 70 0d 0a>'
16:56 < whiskers75> '<Buffer 0d 0a>'
16:56 < whiskers75> '<Buffer 0d 0a>'
16:56 < whiskers75> '<Buffer 0d 0a>'
16:57 < whiskers75> any idea? 
17:02 < whiskers75> bump
17:04 <@mbalho> whiskers75: node puts binary data in buffers
17:04 <@mbalho> whiskers75: you can toString() it if you want ascii
17:05 < whiskers75> mbalho: toString() it where?
17:05 < whiskers75> have a look at the source: http://github.com/whiskers75/zork/
17:06 < whiskers75> i did do .setEncoding('utf-8');
17:06 < RLa> http://nodejs.org/docs/latest/api/buffer.html#buffer_buf_tostring_encoding_start_end
17:06 < nathan7> Christ
17:06 < nathan7> That thing is callback hell
17:06 < nathan7> whiskers75: I believe it's just utf8
17:06 < whiskers75> nathan7: Yes, indeed.
17:07 < whiskers75> nathan7: no, i'm pretty sure it's 'utf-8'
17:07 < whiskers75> wait, no i'm not
17:07 < whiskers75> it's utf8.
17:07  * whiskers75 is rectifying the code
17:07 < nathan7> 2http://nodejs.org/docs/latest/api/buffer.html#apicontent
17:07 < nathan7> http://nodejs.org/docs/latest/api/buffer.html#apicontent
17:08  * whiskers75 is testine
17:08 < whiskers75> testing*
17:08 < warz> itd look way better if you did not use anonymous functions as parameters
17:09 < whiskers75> Nope, doing .setEncoding('utf8') doesn't fix anything
17:09 < whiskers75> and also, how come I get the first bit of zork, but not the bit after I run a command?
17:10 < whiskers75> Ah, I have a theory...
17:11 < whiskers75> AAAAH lol:
17:11 < whiskers75> >help
17:11 < whiskers75> '\'\\\'help\\\\r\\\\n\\\'\''
17:11 < whiskers75> '\'\\\'\\\\r\\\\n\\\'\''
17:11 < whiskers75> '\'\\\'\\\\r\\\\n\\\'\''
17:11 < whiskers75> '\'
17:11 < AAA_awright> ...
17:11 < whiskers75> how do I remove all those '\'s and '\r's and '\n's?
17:12 < TheAceOfHearts> uhh
17:13 < TheAceOfHearts> wat
17:13 < b-ot> when tried doing this with ajax, i found the styles and checkboxes would appear no more even when the respective css,js files are included in php file called via ajax
17:13 < jasper^off> ok I modified it deoxxa
17:13 < jasper^off> I'm going with your advice..
17:14 < anarchist_> anyone here use meteor at all? can you write pure node.js in meteor or are these fundamentally different things? like executing a command line on a server from the client
17:14 < jrajav> Meteor is for making web apps, isn't it?
17:15 < anarchist_> sure. my use case is to emulate a command line program in an html5 app
17:15 < whiskers75> ok, anyone know how to fix it? :P
17:15 < nathan7> I never really saw the sense in meteor
17:16 < niggler> who is the master of nodeftpd?
17:16 < anarchist_> nathan7: well if i can do this one thing (execute a command line) in meteor, which is the whole reason i started looking at node.js to begin with, then i'd say the advantage is that i can write a multi-user collaborative app really easily
17:16 < whiskers75> bump
17:17 < niggler> so in a first, DDG points to https://github.com/thomaschaaf/nodeftpd who forked from https://github.com/addrummond/nodeftpd who forked from https://github.com/alanszlosek/nodeftpd who forked from https://github.com/rinie/nodeftpd who forked from https://github.com/billywhizz/nodeftpd
17:17 < whiskers75> hum. maybe I should use readline
17:17 < anarchist_> what the fork?
17:17 < niggler> yes anarchist_ it is exactly what it looks like
17:17 < anarchist_> that's forking ridiculous
17:21 < whiskers75> ok, how do I remove all '\r\n's from a string?
17:22 < anarchist_> foreach { backspace four times }
17:22 < anarchist_> that was a bad joke
17:23 < niggler> you can use a regex replace
17:23 < anarchist_> http://txt2re.com/
17:24 < niggler> >>> "\r\n\foo\r\n"
17:24 < purr> niggler: (string) '\r\n\foo\r\n'
17:24 < whiskers75> ah.
17:24 < niggler> >>> "\r\n\foo\r\n".replace(/\r\n/,"")
17:24 < purr> niggler: (string) '\foo\r\n'
17:24 < niggler> >>> "\r\n\foo\r\n".replace(/\r\n/g,"")
17:24 < purr> niggler: (string) '\foo'
17:24 < whiskers75> thanks.
17:24 < niggler> >>> "\r\n\foo\r\n".replace(/\r\n/g," -- a newline was here, son -- ")
17:24 < purr> niggler: (string) ' -- a newline was here, son -- \foo -- a newline was here, son -- '
17:24 < Bonuspunkt> and now with a function!
17:25 < anarchist_> http://txt2re.com/index.php3?s=some%20string%20stuff%20and%20things%20/r/n&-7
17:25 < emocakes> nigger have you got any experience using node with mongo?
17:25 < niggler> github is lagging https://github.com/billywhizz/nodeftpd/network
17:25 < niggler> emocakes: I'm working through some redis stuff and plan on attacking mongo later this week
17:26 < niggler> i suspect my application was one designed for mongo but i wanted a benchmark
17:26 < whiskers75> that makes '\'\\\'help\\\\r\\\\n\\\'\''
17:26 < emocakes> interesting, i was thinking of possibly doing the same thing, but starting with Mongo first, then adding redis later for stuff to check speed as well
17:26 < emocakes> :p
17:26 < whiskers75> niggler: that makes '\'\\\'help\\\\r\\\\n\\\'\''
17:26 < whiskers75> see http://github.com/whiskers75/zork
17:27 < niggler> emocakes: so originally i used local variables
17:27 < niggler> and then used redis to replace those ops
17:27 < niggler> then i plan on trying mongodb by changing the underlying representation
17:28 < niggler> whiskers75: v
17:28 < niggler> err
17:28 < niggler> https://github.com/TooTallNate/node-telnet
17:29 < niggler> I'm saddened by github's network graph
17:29 < niggler> id like to see the entire chain on a single plot but alas
17:30 < whiskers75> niggler: i don't really want to rewrite my whole code
17:30 < whiskers75> niggler: actually, it should be ok..
17:32 < AAA_awright> I'm looking for a utility to print an object including its prototypes, anything built into Node.js?
17:33 < astropirate> ( ͡° ͜ʖ ͡°)
17:33 < emocakes> console.dir
17:33 < emocakes> :p
17:34 < niggler> >>> var x = {foo:3}; x.prototype = []; console.dir(x)
17:34 < purr> niggler: TypeError: Object [object Object] has no method 'dir'
17:34 < niggler> >>> var x = {foo:3}; x.prototype = []; console.log(x)
17:34 < purr> niggler: undefined; Console: {foo: 3, prototype: []}
17:34 < whiskers75> ah, so purr is a bot
17:34 < niggler> >>> var x = {foo:3}; x.prototype = []; Object.getOwnPropertyNames(x)
17:34 < purr> niggler: (object) ['prototype', 'foo']
17:34 < whiskers75> >>> console.log('hello')
17:34 < purr> whiskers75: undefined; Console: 'hello'
17:35 < niggler>  though getOwnPropertyNames is a recent addition
17:35 < warz> >>> __dirname
17:35 < purr> warz: ReferenceError: __dirname is not defined
17:36  * niggler pets purr
17:36 < whiskers75> niggler: is purr open-source?
17:36 < niggler> its oftn-bot iirc
17:36 < niggler> https://github.com/oftn/oftn-bot
17:37 < whiskers75> cool
17:37 < whiskers75> i got my own bots
17:37 < niggler> you have one written in node?
17:37 < whiskers75> yup
17:38 < whiskers75> http://github.com/whiskers75/IRC-bot
17:38 < whiskers75> got a bot channel as well - ##node-irc-bots
17:39 < whiskers75> with relay from #node.js
17:41 < whiskers75> niggler: your telnet module didn't help.
17:41 < niggler> lol its not my telnet module -- tootallnate is here sometimes
17:41 < whiskers75> i know
17:42 < niggler> i assume you are running the mirror bot?
17:42 < Snoopah> <whiskers75> Well, it's my own bot from github.com/whiskers75/IRC-bot
17:42 < whiskers75> :)
17:43 < whiskers75> niggler: you can bring purr into my channel :)
17:45 < jrajav> AAA_awright: No
17:45 < jrajav> AAA_awright: It's pretty simple though
17:45 < whiskers75> so, anyone know how to fix the mysterious '\'s?
17:46 < jrajav> AAA_awright: Example: https://gist.github.com/4106483
17:46 < AAA_awright> jrajav: Pretty simple to iterate through the prototype chain?
17:47 < whiskers75> Can somebody help me with this: http://github.com/whiskers75/zork
17:48 < whiskers75> is there some module that removes EVERYTHING except letters from a string?
17:49 < mscdex> regex?
17:49 < aho> replace with regex
17:49 < niggler> >>> "foobar1234-==-=09=99=".replace(/[^A-Za-z]/,"")
17:49 < purr> niggler: (string) 'foobar234-==-=09=99='
17:49 < niggler> >>> "foobar1234-==-=09=99=".replace(/[^A-Za-z]/g,"")
17:49 < purr> niggler: (string) 'foobar'
17:49 < whiskers75> ah
17:49 < whiskers75> thanks
17:50  * whiskers75 commits and tests for the thousandth time
17:51 < whiskers75>  /facepalm
17:51 < whiskers75> = 'helprn'
17:52 < whiskers75> ok. how do I trim the last 2 chars?
17:52 < Sly> .substr
17:52 < whiskers75> >>> 'helprn'.trim(2)
17:52 < purr> whiskers75: (string) 'helprn'
17:52 < niggler> you must have a literal \ and r
17:52 < whiskers75> I do
17:52 < whiskers75> >>> 'helprn'.substr(2)
17:52 < purr> whiskers75: (string) 'lprn'
17:52 < whiskers75> >>> 'helprn'.substr()
17:52 < purr> whiskers75: (string) 'helprn'
17:52 < whiskers75> >>> 'helprn'.substr(1)
17:52 < purr> whiskers75: (string) 'elprn'
17:52 < whiskers75> >>> 'helprn'.substr(0)
17:52 < purr> whiskers75: (string) 'helprn'
17:53 < niggler> why do you have those?
17:53 < whiskers75> erm. i need to substr from the other way
17:53 < warz> look up the docs, please
17:53 < whiskers75> k
17:54 < whiskers75> where is strings in the docs?
17:54 < Sly> >>> 'helprn'.substr(0, 'helprn'.length - 2)
17:54 < purr> Sly: (string) 'help'
17:54 < whiskers75> ok, thanks
17:55 < warz> whiskers75: http://lmgtfy.com/?q=MDN+substr
17:55 < whiskers75> YAY, it's fixed.
17:55 < Sly> whiskers75: if it's "\r" and "\n" that you're always trying to replace..
17:55 < Sly> You can use..
17:56 < Sly> >>> 'help\r\n'.trim()
17:56 < purr> Sly: (string) 'help'
17:57 < whiskers75> >>> var test = 'test'
17:57 < purr> whiskers75: undefined
17:57 < whiskers75> >>> console.log(test)
17:57 < purr> whiskers75: ReferenceError: test is not defined
17:57 < whiskers75> ha.
17:58 < Sly> whiskers75: you have to put it all on one line for that bot.
17:59 < whiskers75> i know
18:02 < whiskers75> ok. 25th time lucky?
18:02 < whiskers75> git pull && node server.js executed 25 times
18:05 < whiskers75> ok it works
18:08 < Steve^> Hi, would anyone know if `node` became `nodejs` in Ubuntu 12.10? It appears that grunt no longer works for me because of this
18:10 < AvianFlu> Steve^: yeah, some obscure 10-year-old packet radio software had the name "node" already
18:10 < AvianFlu> so the debian repo maintainers renamed our node to "nodejs"
18:10 < Steve^> wonderful :/
18:10 < Steve^> I have "ln -s /usr/bin/nodejs /usr/bin/node"ed
18:11 < Steve^> and that fixes
18:12 < Steve^> How are scripts supposed to deal with this? Alter "#!/usr/bin/env node" depending on the system?
18:13 < Sly> Steve^: it should work fine as long as you have it ln'd in /usr/bin.
18:13 < Sly> If all else fails, run `env node` to see if it opens node.
18:13 < Sly> If it doesn't, then you have a problem.
18:14 < Steve^> as stated, it does fix it yeah
18:14 < niggler> though nodejs should be added as well
18:18 < AAA_awright> jrajav: https://gist.github.com/4106486/40b2147bb57661edfbfb05382a4977df75b9c19d works great
18:19 < gildean> Steve^: also if you add the recommended ppa, it's installed as node
18:19 < jrajav> AAA_awright: That's probably a much better way to do it, lol
18:19 < jrajav> AAA_awright: .getPrototypeOf I mean
18:19 < AAA_awright> It also assumes that Object.prototype is empty and won't be overloaded
18:19 < AAA_awright> Which might not always be good
18:19 < jrajav> ?
18:20 < gildean> Steve^: with sudo add-apt-repository ppa:chris-lea/node.js
18:20 < AAA_awright> It won't show the last Object.prototype which is usually just {}
18:20 < jrajav> You mean, if there's a cycle in the prototype chain?
18:20 < AAA_awright> Object.prototype is the final object in the prototype chain, and it skips it since I assume it's blank
18:21 < jrajav> I agree that that case should probably be handled, but if you assigned Object.prototype or otherwise created a cycle, you have your own problems.
18:21 < AAA_awright> I'm... not sure how ES handles prototype cycles
18:51 < eddyb> is there a nice and easy way to have express.js+socket.io+(binary.js or socket.io with binary capabilities) running on the same port?
18:53 < clever> eddyb: socket.io should have no trouble on the same port as express, just pass it the express server
18:54 < eddyb> I know that, I'm more interested in the binary stuff
18:58 < Pete3> just checking the binary js docs and it says you can pass an existing http server instance to the constructor int he options instead of a port
18:58 < s5fs> ^
18:59 < whiskers75> How do I upload and download files with Dropbox in node without changing their contents or metadata? http://github.com/whiskers75/zork doesn't work.
19:01 < whiskers75> which encoding should I use for fs.write/read?
19:03 < chazu> Hey guys, I'm trying to write a simple chat server with telnet, and I was wondering what the proper method of tracking session data is. How do I create a registry of connected users, for example, with chat handles for each one, so i can preface messages with the speaker's handle?
19:04 < chazu> I'm not sure what the cannonical way of doing it would be, since any given handler for a data received event doesnt know about the session, and i'm not certain how to inform it...
19:05 < niggler> chazu: simplest way is to stick each socket in an array
19:05 < anarchist> is this something that would be simpler in meteor.js?
19:05 < whiskers75> niggler: can you help me with my above question?
19:06 < chazu> niggler: gotchya...and how do i get the current connection's socket and associated info from within a connection handler? just iterate through them and check for identical object id?
19:06 < niggler> not familiar with dropbox whis	
19:06 < niggler> *whiskers75: not familiar with dropbox
19:06 < whiskers75> niggler: but do you know what encoding I should use for the fs calls?
19:06 < anarchist> dropbox is basically a file system on a server that you can mount locally and it syncs
19:06 < niggler> chazu: are you doing it through net or a telnet module
19:07 < chazu> niggler: telnet module...
19:07 < eddyb> back
19:07 < niggler> whiskers75: i suspect theree's info in the dropbox module
19:07 < eddyb> Pete3: but I want both socket.io and binary.js at the same time
19:07 < eddyb> Pete3: I'm asking for something that may be impossible. that's why I'm asking in the first place, after googling for a few hours
19:08 < whiskers75> niggler: there isn't. frotz is being annoying
19:08 < eddyb> looking at the socket.io source, I doubt it supports any kind of binary data over websockets
19:09 <@mbalho> eddyb: websocket-stream or binaryjs does that, its cause the socket.io non websocket fallbacks are all ascii transports
19:10 < eddyb> I also highly doubt socket.io and binary.js can work on the same port :(
19:10 < eddyb> am I left with base64?
19:10 < niggler> whiskers75: do you know what frotz expects?
19:10 <@mbalho> socket.io is a framework, binary.js is just a node stream
19:10 < eddyb> I'm not happy with the size and computation overhead of base64
19:10 < niggler> mbalho: the flash transport is ascii/
19:12 <@mbalho> niggler: so are the xhr and jsonp and htmlfile transports
19:12 <@mbalho> xhr can do binary but socket.io abstracts that away
19:12 < eddyb> and any sort of binary strings over socket.io is either get corrupted or just get overhead from JSON encoding
19:21 < Pete3> eddyb: did you look at sockjs?
19:22 < Pete3> eddyb: i got annoyed with socket.io a while back because it has problems when reconnecting and switched
19:22 < AAA_awright> Socket.io needs a good feature pruning
19:22 < AAA_awright> I have no clue what it does anymore
19:23 < Pete3> eddyb: looking at their docs now to see if it might do the job
19:23 < AAA_awright> I just want to send messages back and forth
19:23 < AAA_awright> How hard is that
19:23 < Pete3> AAA_awright: i agree, and I think sockjs does a better job in that respect
19:24 < eddyb> I really like the evented model and the callbacks in socket.io
19:26 < jrajav> AAA_awright: Fork it mang
19:26 < AAA_awright> I HAVE NO TIEM
19:26 < AAA_awright> Not until more people use https://github.com/Acubed/git-node anyways
19:29 <@mbalho> i wish sockjs wasnt written in coffeescript :/
19:30 < Pete3> who knows about child_process and wants to take a look at my gist ;) https://gist.github.com/4106966
19:31 < Pete3> i'm going crazy trying to figure out how to test whether a process that spawns another process will clean up correctly
19:31 < Sorroko> hey quick question, i can't just pipe to stdin? I have to listen to an error event too in case of EPIPE? And why does EPIPE even occur?
19:32 < Pete3> I think i need to simulate a ctrl-c but know idea how i might do it
19:33 < Pete3> as usual the main problem is that windows doesn't do the same as *nix
19:34 < eddyb> Pete3: kill(SIGINT)?
19:35 < Pete3> kill(SIGINT) only works on *nix and also doesn't do the same as ctrl-c anyway
19:35 < Pete3> even on *nix it still orphans children whereas pressing ctrl-c doesn't
19:36 < eddyb> Pete3: maybe because pressing ctrl-c causes a different "emission" of SIGINT?
19:36 < Pete3> eddyb: how do you mean?
19:37 < eddyb> Pete3: maybe a different process gets it, or it's being chained differently
19:38 < Pete3> eddyb: maybe the shell walks the process tree and sends a SIGINT to all the children - maybe i can do that too in my test
19:38 < Pete3> eddyb: unfortunately it doesn't help me on windows :s
19:39 < Pete3> eddyb: this is really annoying as my code works the way i want but i'm just having problems writing a unit test to prove it :o
19:39 < jrajav> That's not a unit test
19:39 < jrajav> That's an integration test
19:40 < jrajav> To write a unit test, you should mock up whatever libraries you're using - like process
19:40 < Pete3> ok, but it's still a test i want
19:40 < jrajav> I recommend sinon + chai + mocha
19:41 < jrajav> Ensure that the "cleanup" functions you want to be called are called. Don't test that they actually do what they should do - trust the libraries you use
19:43 < Pete3> jrajav: i hear what your saying but i'm not that's possible in this case - i want to prove that if I press ctrl-c all my child processes are killed. In the case of windows they are, but none of my cleanup functions are called (and actually i don't care if they are)
19:43 < Bilge> >your
19:44 < Pete3> jrajav: you're right that this is an integration test - but it's still a test i want to do
19:45 < jrajav> Sending ctrl-c == sending SIGINT == 'exit' event fired
19:45 < jrajav> Don't test Node
19:45 < jrajav> Just test YOUR code
19:45 < emocakes> anyone here use any frameworks for web dev?
19:46 < emocakes> i have been checking out tower.js
19:46 < emocakes> but am not a big fan of the whole coffeescript thing
19:46 < jrajav> You can use any coffeescript library/framework with plain JS too
19:47 < emocakes> true true
19:49 < Pete3> jrajav: ok maybe i should just assume that ctrl-c will kill the whole process tree but it feels like a leap of faith. Particulalry as i'm pretty sure that I could write code (using the detached property?) that would result in ctrl-c not killing the whole process tree - so my test is supposed to show that i didn't accidentally do that (ie. i'm not testing node)
19:49 < Pete3> jrajav: i think i will see if detached does what i think it does
19:50 < jrajav> Oh, so you're really just trying to figure it out
19:50 < Pete3> jrajav: i think that's always true ;)
19:51 < niggler> anyone know of a good tool for stress testing a socket server?
19:52 < Pete3> jrajav: even if detached doesn't do that I'm still not sure i should just trust that i can't write code that would result in orphaned children - actually it was because i kept orphaning children that I headed down this path
19:53 < Pete3> jrajav: having said that maybe i was only orphaning children when other tests failed - perhaps I should just focus on the uncaughtException event
19:55 < Pete3> jrajav: or just stop obsessing and get on with something useful :O
19:55 < jrajav> Keep at it :)
19:56 < Pete3> lol
19:57 < niggler> is there a channel on free node for testing bots?
19:58 < mscdex> create your own
19:58 < niggler> or should i just commandeer one that isn't being used
19:58 < jrajav> The latter is fine
20:15 < Pete3> jrajav: i can confirm that if i use detached: true then ctrl-c does not kill the child - i still think i should drop it though, or maybe just write a test that confirms i don't set detached: true (maybe i do  need to mock something :))
20:16 < jrajav> In this case I actually would advocate an integration test
20:17 < jrajav> Make something that sends SIGINT to it, waits a bit, then checks that none of the processes remain
20:34 < Pete3> jrajav: yeah i was doing that but like i say it doesn't do the same as ctrl-c even on linux - it only kills the parent process. On linux i can forward it through the SIGINT event but on windows i don't even get a SIGINT event. Gah!
20:37 < Pete3> jrajav: plus forwarding it is only necessary when i use child_process.kill('SIGINT') - when i actually use ctrl-c it kills everything without having to handle and forward the event in the children
20:37 < Pete3> jrajav - which is why i wanted to figure out how to better simulate ctrl-c
20:37 < jrajav> Sorry, I don't know
20:39 < Pete3> jrajav - that's ok, now i'm thinking i should write something that does what i think the shell does - ie. walk the process tree sending lots of SIGINT events. My theory is that detached processes will not be in the tree as they will be in their own process groups. So now i'm trying to figure out how to send events to or enumerate process groups/trees :)
20:49 < jamescarr> tjfontaine, 
20:49 < jamescarr> damn
20:49 < jamescarr> wrong tj
20:49 < tjfontaine> :/
20:50 < niggler> lol tjfontaine 
21:07 < badem4o> Does anyone use node-dev? https://github.com/fgnass/node-dev
21:07 < aib_233> hi. Is it feasible at all to use forever with node command line options ( eg. --trace_gc  )? 
22:33 < whomp> when i run my node program, it tells me: "Error: connect ECONNREFUSED". what might be wrong?
22:35 < mscdex> whomp: you're trying to connect to some place that isn't listening
22:36 < whomp> the server handles httpd just fine
22:37 < warz> mscdex gave the most literal answer. theres really nothing else that can be said until you provide more details about what youre trying to do.
22:37 < warz> or show code.
22:39 < timeturner> whomp: something else is already listening on that port
22:39 < whomp> but i can turn httpd, which listens on 80, on and off just fine
22:40 < warz> whomp, httpd as in apache's httpd?
22:41 < warz> and your node app is trying to do what ... listen on port 80?
22:41 < whomp> yes and yes
22:42 < warz> do you see how the info you've provided up until me asking was not very straight forward?
22:42 < warz> timeturner may be correct. you might be running apache's web server while trying to run your own, which would cause problems.
22:42 < whomp> i'm just not sure what you need to know
22:43 < whomp> i killed all of the apache processes
22:43 < mscdex> manually?
22:43 < timeturner> sometimes the port remains locked even though the program has been killed
22:43 < whomp> how can i deal with that?
22:44 < whomp> also, when i listen at 1337 or 8080, i get the same error message
22:44 < timeturner> wait or restart
22:44 < timeturner> I guess
22:44 < timeturner> haven't had to deal with that too much in a while though
22:44 < mscdex> whomp what does your .listen() line of code look like?
22:45 < whomp> }).listen(80, '50.63.84.76');
22:45 < mscdex> whomp: have you tried dropping the ip address?
22:45 < warz> have you tried listening on all interfaces? remove the ip and see.
22:46 < whomp> like this? }).listen('50.63.84.76');
22:46 < whomp> i still get ECONNREFUSED
22:46 < mscdex> drop the ip address, not the port
22:46 < warz> no thats the ip, you remove that.
22:46 < warz> listen(80)
22:47 < whomp> ah
22:48 < whomp> no dice for }).listen(80);
22:48 < warz> what does that mean? did you get an error?
22:48 < whomp> ECONNREFUSED again
22:49 < mscdex> whomp: what about something more random? .listen(8765); ?
22:50 < whomp> no dice
22:50 < warz> i think we're barking up the wrong tree, due to not enough info from whomp. if the addr were in use, youd get that error.
22:51 < warz> if it were an permissions issue, youd get that error too.
22:51 < warz> hes getting a connect error, which makes me think hes trying to do something else and the error is not with his listen.
22:51 < whomp> i'm running as root
22:52 < warz> are you starting up an http server, and then trying to connect to it using client code?
22:52 < warz> or are you trying to connect to your apache httpd as a client?
22:54 < whomp> i'm not sure what you're asking. the node program listens for http connections on port 80. when a user types in 50.63.84.76/foo/bar, they are served content
22:55 < warz> so where's the problem occuring?
22:56 < whomp> right as i start up the server
22:56 < warz> can you paste any code?
22:57 < warz> or, try starting up apache's httpd and then shutting it down properly and see if that frees up the ports.
22:57 < warz> although youd be getting a different error if the port were in use.
22:57 < warz> so i dont think its that.
22:59 < whomp> sec
23:04 < whomp> aha! i forgot to start up mysql
23:04 < whomp> thx for the help warz
23:06 < warz> see, i knew it was something you were leaving out, based on the error message. :)
23:07 < whomp> yeah, but generally people get very angry when i pastebin 200 lines for them to read :)
23:07 < warz> thats why you use something like dpaste.com.
23:08 < whomp> i'll check it out
23:11 < jamescarr> Sequlize is nice but its non-standard callbacks are driving me nuts!!!!
23:11 < jamescarr> Foo.findAll().success(function(res) { cb(null, res); }).error(function(err) { cb(err); });
23:13 < warz> non standard like it doesn't follow (err, res) norms?
23:13 < warz> thatd be annoying
23:14 < warz> finally got some options going on my to-pdf conversion thing, https://github.com/ryancole/topdf
23:47 < goku22> in express i am trying to set cookies.. but the cookie object is always returning empty… any help ?
23:48 < luigy> anyone who has played around w/ serialport & 3dr telemetry ?
23:52 < warz> goku22, make sure youre using the required middleware
23:53 < goku22> app.use(express.bodyParser());
23:53 < goku22> app.use(express.cookieParser());
23:53 < warz> luigy, ive used serialport but not the other module you mentioned
23:53 <@mbalho> luigy: whoa are you making drones with js?
23:54 < warz> i like the johnny-five module
23:55 < luigy> mbalho yep!  ;)
23:55 <@mbalho> luigy: open an issue here with informatino about what you're working on https://github.com/nodecopter/nodecopter-orga/issues
--- Log closed Mon Nov 19 00:00:34 2012
