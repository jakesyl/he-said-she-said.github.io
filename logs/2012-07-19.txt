--- Log opened Thu Jul 19 00:00:03 2012
--- Day changed Thu Jul 19 2012
00:00 < lohkey> zoned: yeah, those things that send updates to web clients in real time 
00:00 < lohkey> zoned, see socket.io
00:00 < lohkey> or sockjs
00:00 < SubStack> streams!
00:00 < SubStack> stream all the io
00:00 < lohkey> fuck yeah
00:00 < gildean> zoned: basically what you usually do is you have a server that waits something from the client and then executes based on that, but you could also do a standalone app, or whatever
00:00 < SubStack> relevant: http://github.com/substack/shoe https://github.com/dominictarr/mux-demux https://github.com/dominictarr/browser-stream
00:01 < lohkey> SubStack: i'm rolling out a service that uses dnode over the forked IPC channel thanks to you making dnode streamable
00:01 < zoned> ahhh. so instead of constantly polling?
00:01 < gildean> zoned: my first project was a blog egine
00:01 < SubStack> lohkey: have you seen shoe yet?
00:01 < lohkey> yup, it's awesome
00:01 < lohkey> streams FTW
00:01 < SubStack> oh man, with mux-demux streams are so easy to layer
00:03 < Guest59378> is there any way to tell what, if any connection/request code is running from?
00:05 < cliffano> is there a nice module that allows checking whether a process/worker is running? i want to spawn a process that writes a file, but i want to monitor whether it's still running or not, to avoid multiple processes streaming to the same file
00:06 < lohkey> SubStack: speaking off, what is the best way to establish bidirectionally with dnode. Would you suggest multiplexing a stream or having the client request send the server an object of methods it can stash and invoke at will later on?
00:07 < SubStack> lohkey: whichever is most convenient
00:08 < SubStack> I vary my approach quite a bit depending on the particulars of the problem I'm attacking
00:08 < SubStack> sometimes it makes more sense to pass callbacks to server methods, sometimes it makes more sense for the server to call client methods, sometimes a hybrid
00:09 < SubStack> cliffano: there's a pidfile module on npm you could try
00:09 < SubStack> I haven't tried it though
00:11 < cliffano> SubStack: thanks for the pointer... i wonder if it works cross platform (windows)
00:44 < Guest85214> test
00:49 < bricker88> I know this is probably pretty vague, but what could cause an error like "Error: connect ECONNREFUSED\n    at errnoException (net.js:670:11)\n    at Object.afterConnect [as oncomplete] (net.js:661:19)"
00:49 < bricker88> ?
00:53 < kami__> Greetings, anybody know how to resolve the following error when running 'npm': npm doesn't work with node v0.8.2?
00:56 < bnoordhuis> bricker88: if i were to wager, i'd say the other end refused the connection
00:59 < austinbv> how can you stop express from logging 'GET / 200 1ms - 5'
00:59 < tjholowaychuk> austinbv remove .logger()
01:01 < austinbv> tjholowaychuk: thanks moved it into my dev env
01:01 < austinbv> so tjholowaychuk learning to test async code is pretty tough :P
01:01 < austinbv> even though I test all day every day
01:02 < kami__> anybody know how to resolve the following error when running 'npm': npm doesn't work with node v0.8.2?
01:03 < austinbv> I have been trying to learn the patterns so we can rewrite jasmine
01:03 < chilts> kami__: which version of npm is it? you should try and use the one that comes with node :)
01:03 < owen1> iangreenleaf: supervisor@0.4.1. not using cluster
01:03 < kami__> how do I do that?
01:04 < chilts> kami__: npm --version
01:04 < chilts> which npm
01:05 < kami__> chilts__: npm --version doesn't run
01:05 < kami__> which npm just shows me the path
01:06 < kami__> npm --version throws a TypeError
01:06 < npmbro> kami__: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20--version%20throws%20a%20TypeError
01:06 < chilts> is npm located in the same directory as your node v0.8.2 executable?
01:06 < kami__> no
01:07 < chilts> you need to make sure that is the case
01:07 < chilts> check your $PATH for anything you don't want
01:07 < chilts> do a 'which node' and a 'which npm' and keep changing your $PATH until they're in the same directory
01:07 < kami__> npmbro: that page has no results
01:07 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
01:08 < chilts> kami__: npmbro is a robot, you can safely ignore him
01:15 < halfcab123> anyone around ?
01:15 < halfcab123> I had a real basic question if anyone can help. I know i'm in java chat room can't seem to find a real basic chat room thats active
01:15 < halfcab123> thought maybe someone might have an anwer fro me
01:16 < halfcab123> any takers ?
01:16 < halfcab123> http://pastebin.com/U73sYhMN
01:17 < halfcab123> that code doesn't refresh my GUI labels
01:17 < halfcab123> hey pbos
01:17 < halfcab123> pboos*
01:18 < chilts> halfcab123: this is about JavaScript, not Java - you're in the wrong channel :)
01:18 < halfcab123> its not java its real basic
01:18 < halfcab123> and i can't find a real basic channel
01:18 < halfcab123> was throwing a hail mary
01:19 < halfcab123> how do you guys refresh a label in javascript then ?
01:20 < halfcab123> like if your executing script in between labels, do you do anything special ?
01:20 < boogyman> halfcab123: you might want to try /list or #freenode
01:20 < chilts> there is not such thing as a label in JavaScript
01:20 < tbranyen> wtf is a label
01:20 < tbranyen> like a named block?
01:20 < tbranyen> or named loop?
01:20 < tbranyen> i guess those are labels
01:20 < halfcab123> like if you had a javascript GUI that had a process label letting the user know what was taking place
01:20 < chilts> halfcab123: you're in the wrong channel :)
01:20 < halfcab123> yeah i know
01:20 < zivester> what happens when an fs Sync operation errors? Does it abort processing?
01:21 < tbranyen> zivester: i belive it throws an exception
01:21 < zivester> which unless caught will basically get thrown all the way up and not continue my other commands
01:22 < halfcab123> anyone know of just a generic programming channel ?
01:23 < timeturner> #programming ?
01:33 < kami__> chilts: now i get The program 'npm' can be found in the following packages:  * mricron  * npm Try: sudo apt-get install <selected package> 
01:34 < chilts> it's not in your path any longer
01:34 < chilts> is node still in your path?
01:35 < kami__> it is though
01:35 < kami__> i can run node
01:36 < kami__> and npm and node are in the same dir
01:36 < chilts> and it is executable? ie. has the +x set?
01:37 < kami__> lrwxrwxrwx 1 jnoody jnoody 38 2011-11-02 06:29 /usr/bin/npm -> ../lib/node_modules/npm/bin/npm-cli.js 
01:40 < kami__> chilts: so yes it's executable
01:40 < chilts> ok, I'm not sure I can help now ... all seems fine to me
01:40 < chilts> maybe try a fresh install
01:40 < kami__> Thank you
01:40 < chilts> or try nvm or something like that :)
01:41 < kami__> so if i uninstall both NPM and node and retry, npm will be installed somewhere with a fresh node install?
01:43 < austinbv> tjholowaychuk: you know how to unwrap a sinon stub?
01:44 < timoxley> austinbv stub.restore()
01:46 < timoxley> austinbv alsoâ€¦ rewrite jasmine??
01:47 < austinbv> timoxley: yeah...
01:47 < timoxley> austinbv why?
01:47 < austinbv> rewrite and thankyou
01:47 < austinbv> write out the ruby dependency, for node apps
01:47 < austinbv> write better async testing
01:47 < austinbv> clean up the source
01:47 < timoxley> austinbv just use mocha
01:48 < austinbv> so far I am digging it
01:48 < austinbv> mocha that is
01:48 < austinbv> timoxley: does sinon keep a list of stubs?
01:51 < timoxley> austinbv sinon.stub.restore() I think restores all stubs or something
01:52 < timoxley> austinbv another option is to use a sandbox
01:54 < austinbv> I will read about sandbox
01:56 < austinbv> sandboxing doesnt look great if you use a lot of beforeEach blocks
02:00 < timoxley> you mean for performance?
02:00 < timoxley> austinbv
02:01 < austinbv> yeah and just having mocks cleaned up before and after each test
02:02 < austinbv> rather than in a huge block around stuff
02:02 < austinbv> also sinon.stub.restore is a no go
02:03 < samholmes> How do most companies manage a back-end administration interface? Surely, facebook or google doesn't have this hosted under a /admin path publically, like most CMSs in the wild.
02:03 < samholmes> ?
02:03 < ben_alman> isaacs: just tried to nave install stable and it blew up with three 404 errors, now nave ls says that 0.8.3 is src / installed even though it isn't
02:04 < austinbv> timoxley: 
02:06 < kami__> chilts: uninstall reinstall worked, thanks
02:11 < timoxley> austinbv stub.restore should work, I suspect pebkac
02:15 < austinbv> timoxley: you can restore a single stub but not all
02:16 < samholmes> ?
02:21 < timoxley> austinbv you're right. I take it all back.
02:33 < austinbv> ha :)
02:33 < austinbv> timoxley: sandboxes are pretty cood
02:33 < austinbv> cool*
02:33 < austinbv> I don't see how you can clean this up easily http://stackoverflow.com/questions/11552991/cleaning-up-sinon-stubs-easily
02:40 < samholmes> They say MySQL is still good, but I just find it ugly when working with Node.js. :\
02:41 < samholmes> "They" being people who think that RDBM have their purpose and other NoSQL DBs have their puproses too.
02:47 < samholmes> Anyone here use MySQL with node?
02:47 < hatch> yeah
02:48 < timeturner> mysql doesn't flow with node's js syntax
02:48 < timeturner> nosql is a better fit in terms of a better 1:1 mapping when writing code
02:48 < samholmes> hatch: How do you make a result set from the query SELECT parent FROM child USING (eyedee); and turn it into an array of objects like {parentColumn:..., parentColumn2:..., child: {childColumn:..., childColumn2:...}}?
02:48 < timeturner> oh god
02:49 < timeturner> can't look at that :P
02:51 < hatch> samholmes, well I suppose it would depend on what format you get the data back in
02:51 < samholmes> hatch:  you get a result set from the query, using node-mysql
02:52 < hatch> ok then if the node-mysql driver doesn't include a method to parse that query into your format you will have to write your own parser
02:56 < samholmes> hatch: Hmm. I could loop through the result set in an ad-hoc way, but that seems like there would be a lot of overhead for large data sets.
02:57 < hatch> well weather you do it, or the lib does it, something is doing it :)
02:57 < hatch> whether even :)
02:57 < Raynos> samholmes: everyone uses nosql with node ;)
02:57 < hatch> that's not true
02:57 < BombStrike> <samholmes> How do most companies manage a back-end administration interface? Surely, facebook or google doesn't have this hosted under a /admin path publically, like most CMSs in the wild. < for large companies like Google, most likely a server accessible only through a VPN
02:58 < samholmes> Raynos: Well, not everyone. But mysql doesn't seem to fit too well.
02:58 < Raynos> yeah it fits poorly
02:58 < Raynos> I recommend you default to mongo or couch
02:58 < hatch> there are a ton of legacy systems and a lot of systems were there is formatted relational data
02:58 < Raynos> then change to a database that suits the actual data you have after you know what that actual data is
02:58 < hatch> use the best tool for the job not the most popular
02:59 < samholmes> Raynos: How long would you project it would take for someone to get themselves orientated with Mongo coming from a mysql background?
03:00 < Raynos> samholmes: depends, are you doing it on your own or do you know people you can ask questions to
03:00 < Raynos> there is a lot of good video material
03:00 < Raynos> and the documentation is good
03:00 < samholmes> On my own. Unless you count you guys on this channel. ;P
03:00 < Raynos> for CRUD style actions it takes about two days to know how to do it in mongo without it becoming a complete mess
03:00 < Raynos> if your good you can do it in 2 hours
03:02 < samholmes> CRUD?
03:03 < hatch> Cool Rad Ultra Dood
03:03 < hatch> :)
03:04 < hatch> ok ok
03:04 < hatch> Create Retrieve Update Delete
03:04 < Raynos> samholmes: doing trivial things with the database.
03:05 < samholmes> Most of the things I do are trivial. What sort of things are advanced?
03:35 < kmax> with all due respect to node_formidable, i want to understand the multipart parsing better. seems like the chunks are already buffer objects. is there a way to pause the incoming stream?
03:51 < owen1> i run supervisor and get this: bash: /usr/local/munki/supervisor: No such file or directory 
03:51 < owen1> what is munki?
04:15 < s33k> i get this error while trying to ./configure node.js
04:15 < s33k> https://gist.github.com/3140704
04:16 < konobi> s33k: you need to use python2.6
04:17 < s33k> can someone help me with this?
04:33 < s33k> anyone there?
04:34 < konobi> s33k: use python 2.6
04:34 < TehShrike> SubStack: I took your advice of taking an object of optiony things as opposed to using chaining: https://github.com/TehShrike/text-metadata-parser
04:35 < konobi> substack++
04:35 < s33k> ok
04:48 < tbranyen> maxogden: thanks for that tweet re: those two node dom projects
04:49 < tbranyen> gonna give cheerio a shot for server-side layoutmanager
04:53 < deoxxa> tbranyen: layout... manager?
04:53 < tbranyen> whats up?
04:53 < deoxxa> just curious about what that is
04:53 < tbranyen> deoxxa: oh thats the name of one of my projects
04:53 < deoxxa> oh
04:53 < deoxxa> ha
04:54 < tbranyen> https://github.com/tbranyen/backbone.layoutmanager
04:54 < tbranyen> i wrote it to be completely flexible with more than just jquery
04:54 < tbranyen> and since cheerio works like jquyery
04:54 < tbranyen> i can probably get this working
04:54 < deoxxa> yeah
05:05 < dthompso> fun project of the day...   router configuration UI using nodejs =P
05:06 < lukeholder> tbranyen you the man
05:07 < tbranyen> lukeholder: woot
05:07 < tbranyen> lukeholder: ideally this will be seamless integration of the client and server
05:07 < lukeholder> tbranyen love what you improved with layoutmanager
05:07 < tbranyen> lukeholder: i can't wait for 0.6
05:07 < lukeholder> tbranyen especially the nested views declarative syntax
05:08 < tbranyen> yeah!
05:58 < owen1> browserify watch doesn't work for me. that's how i run it: ./node_modules/browserify/bin/cmd.js public/js/controllers.js -o public/js/bundle.js -w
05:59 < owen1> (from some reason it's not recognized when i just type browerify)
06:10 < abraxas> is building zmq failing for other people too, or is it just my environment?
06:11 < abraxas> I'm running node 0.8.2
06:11 < abraxas> used to work fine, but can't npm install zmq anymore
06:11 < abraxas> can anyone confirm?
06:24 < dthompso99> lemme try abraxas
06:24 < abraxas> tnx
06:27 < dthompso99> painfully slow download... please hold...
06:28 < dthompso99> zmq.h not found... fail
06:29 < abraxas> oh, that's interesting too :)
06:30 < abraxas> actually, just means you need to install libzmq i guess (if that's the name)
06:30 < dthompso99> oh, it may
06:30 < abraxas> (sorry for that)
06:31 < dthompso99> =p
06:31 < dthompso99> lemme see if zmq is in portage
06:32 < dthompso99> ok, i'll give you a real test ina  moment, lol
06:32 < abraxas> I just discovered someone changed the python version on my system...
06:32 < abraxas> that must be it
06:32 <@Nexxy> that was me
06:33 < abraxas> lol
06:33 < abraxas> can you change it back please?
06:33 <@Nexxy> negative
06:33 < abraxas> dthompso99: works now, it was definitely python
06:34 < abraxas> dthompso99: sorry to have bothered you
06:34 < dthompso99> no worries =) always happy to try to help
06:34 < dthompso99> and yes... it works just fine =)
06:39 < thealphanerd> anyone know of an embedable js console?
06:42 < dthompso99> not a quick and easy console... but V8, webmonkey, etc
06:43 < ljharb> thealphanerd: you mean, a text box that you eval?
06:43 < thealphanerd> yeah
06:43 < ljharb> that ^
06:44 < ljharb> make an input that you eval on the enter key. make a div to display the results. try/catch around the eval.
06:44 < ljharb> it's not safe of course, because someone can overwrite the page environment
06:44 < thealphanerd> anything working off the shelf?
06:44 < thealphanerd> this is for a demo
06:45 < ljharb> why not just use the real browser console
07:00 < dthompso99> has node been ported to embeded devices, such as openwrt and such?
07:05 < Lorentz> dthompso99: I've seen people run nodejs on android devices
07:05 < Lorentz> so it's probably not that farfetched to imagine other devices
07:07 < dthompso99> Lorentz: while i agree most likely.... the latest strand of android devices are better computers than their PC
07:08 < Lorentz> Just saying, different archs aren't that farfetched
07:08 < rmill> node on openwrt
07:08 < rmill> now I have heard _everything_
07:08 < rmill> "can I please have a node.js on my router plz?"
07:08 < dthompso99> why not?  php runs on openwrt =P
07:08 < rmill> the funny thing is, I think that's totally possible.
07:09 < dthompso99> i would think it should be.....
07:10 < dthompso99> Im writing a router config app for a personal project... it will be running on an atom in my case
07:10 < dthompso99> but if node can run on something like openwrt... it could possibly be more than a personal project
07:17 < rmill> I don't think a router is a powerful enough for a nodes
07:17 < rmill> after, doing some, uh, reading
07:18 < dthompso99> I'll admit, i did not google before asking... seemed like a good discussion topic
07:19 <@maxogden> two years ago at jsconf node powered the wifi, check out github.com/cramforce/sashimi
07:30 < [AD]Turbo> hola
07:53 < Lorentz> high-end residential routers especially have more than enough processing power in both cpu and RAM for node
07:53 < Lorentz> like asus rt-n16, as an example
07:54 < dthompso99> nice... so its not a lost cause there =)
08:29 < hilkolantinga> How can I make node.js do things at a specific time? Is there a function or module available or should I use setInterval and check the time? 
08:31 < dthompso99> there is a cron module available
08:32 < dthompso99> works quite well, follows standard cron syntax
08:32 < hilkolantinga> Yeah I've seen that, but wouldn't that mean that a new process is executed by cron?
08:33 < dthompso99> i belive it runs as its own process...just follows standard cron rules
08:34 < hilkolantinga> Maybe I could do a setTimeOut at wanted time - now and in the setTimeOut execute the function and do a setInterval of 24 hours.
08:35 < dthompso99> that would certainly work if you wanted to do the math
08:36 < hilkolantinga> I don't mind doing the math, but it seems a bit ugly, I really hoped something prettier was available.
08:36 < ljharb> "timeout" is one word
08:36 < hilkolantinga> setTimeout. Check. That probably saved me half an hour, thanks
08:38 < dthompso99> my source is on a computer that isnt powered up atm, but check npm for "cron"
08:39 < dthompso99> theres a couple packages there that emulate cron functionality
08:39 < dthompso99> but the one i used did not run off regular crontab
08:41 < hilkolantinga> I'll have a look
08:41 < hilkolantinga> Thanks!
09:05 < JasonSmith> SubStack: Yeah, I actually specifically wanted to ask your opinion on the node_modules question, now that it's been a few months since Mikeal changed the game with his blog post
09:06 < JasonSmith> My pendulum is swinging the other way now
09:06 < JasonSmith> (as it were)
09:07 < SubStack> JasonSmith: tried it briefly but it didn't work so well in the incremental pieces we switched over
09:07 < SubStack> since it made pushing new code and handling version conflicts really complicated
09:09 < JasonSmith> Yeah
09:09 < JasonSmith> Paradoxically, even though I run npm, I never even considered depending on it at deploy-time
09:09 < JasonSmith> but I'm reconsidering that position
09:10 < SubStack> could get into some circularity issues that only you would potentially have!
09:10 < SubStack> npm is down so you can't deploy the code that fixes npm!
09:10 < npmbro> SubStack: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20is%20down%20so%20you%20can
09:11 < JasonSmith> Yeah like how the .org TLD migrated to postgres
09:11 < JasonSmith> So if it ever goes down, and they dont' know why, they just head over to postgres.org and look up...
09:33 < eddyb> not sure if anyone knows about this, but I'll ask anyway
09:35 < eddyb> is there a difference in performance (related to operations on the generated object) between Object.create(null, {a:{value:'a',enumerable:true}}) and {a:'a'}
09:35 < strk> how does "npm publish" know what to package and what not ?
09:35 < eddyb> I know the first one doesn't have the Object prototype, but does it matter?
09:39 < rvagg1> eddyb: best benchmark that if you're worried about performance, the second option is certainly much easier but Object.create gives you awesome control if you need it
09:40 < rvagg1> strk: npm publish will publish everything in the current directory and down but it will obey .gitignore and if you have .npmignore it'll use that too
09:41 < rvagg1> so if you don't want it to publish some things then either put them in an ignore file or remove them before publishing (best put them in an ignore so you don't have to remember each time you publish)
09:41 < eddyb> rvagg1: I was thinking of having a base that can be null or an object, and still be able to inherit it either way
09:41 < eddyb> rvagg1: and seeing how it doesn't have the extra prototype, I thought it might be also faster
09:42 < rvagg1> I suspect that may not matter a whole lot, v8 is pretty good at making those kinds of issues dissapear after a few runs through
09:42 < eddyb> yeah
09:42 < eddyb> my code runs faster with each run, at least the first 5 or so
09:42 < rvagg1> my preference is to go with what works best for you and ignore performance until it really matters, take too much notice of performance up-front and it'll ruin your code
09:42 < eddyb> even if it does the exact same thing :P
09:42 < Guest37720> Hello, does someone know how to use waitpid ?
09:43 < rvagg1> v8 will let it run raw for a while and then start to compile it down when it starts to understand what it's doing
09:44 < rvagg1> Guest37720: how are you using waitpid in node? do you have some native code?
09:45 < strk> ah, thanks
09:45 < strk> rvagg1: will it automatically ignore node_modules yes ?
09:45 < eddyb> rvagg1: what about caching RegExps? or does v8 compile them when parsing the source?
09:46 < rvagg1> strk: I can't recall off the top of my head (I always have node_modules in my .gitignore) - what you can do is 'npm pack' and it'll make a tarball for you exactly the same as what gets published, inspect that and get it right before publishing
09:47 < rvagg1> strk: and even if you're not happy with a publish you can republish the same version with --force, so just play and see!
09:47 < rvagg1> eddyb: I don't know unfortunately, perhaps grab benchmark.js and do some testing
09:47 < strk> thanks, npm pack will be safer
09:49 < strk> can I also npm download <package> ?
09:49 < strk> jus to _see_ what I published ?
09:49 < rvagg1> npm install <package>
09:49 < npmbro> rvagg1: No results
09:49 < strk> that will also unpack won't it ?
09:49 < rvagg1> do it in /tmp/ and look in node_modules for what's there
09:49 < rvagg1> yep
09:50 < rvagg1> there is some caching crazyness that goes on in ~/.npm so if you're republishing with --force you may want to delete/clear that directory before you npm install again
09:50 < eddyb> talking about npm - I wish the online search (and hopefully it will be done in the new npm site) warned you about old and deprecated/obsolete packages
09:51 < strk> great, ~/.npm/<package>/<version> has the package
09:52 < rvagg1> mm, I always head to the source on github to see activity on the package, I'm not sure but @izs may be hooking in to github stats for the new site, that would be nice anyway
09:52 < s0urce> hi, can any1 tell me the trick to make a non-blocking function blocking plz? I got a function with a callback, but i want the force function to return result instead
09:53 < ljharb> why? non-blocking is mo betta
09:53 < strk> I guess .git automatically ignored 
09:53 < rvagg1> s0urce: no trick if there isn't a sync version, if you *need* sync then node may not be your thing
09:54 < rvagg1> embrace async, don't fight it
09:55 < s0urce> hm..
09:55 < eddyb> rvagg1: github-style README would be nice, too. but I'm talking about npm versions and package state
09:55 < rvagg1> you know @izs is keen for people to contribute to the new site so perhaps you should get in early with suggestions and/or code contributions
09:56 < s0urce> i got some probs with mongodb, i would like to call commands in a row and just wait for last callback instead of do all in callbacks
09:56 < s0urce> for example db.select_db(db).select_col(col).find({x:1}).toArray(callback);
09:56 < booyaa> dudes looking at the wiki and trying to find out which platforms are official supported by node.js
09:57 < rvagg1> s0urce: https://github.com/caolan/async/ - use waterfall or series
09:57 < booyaa> pretty certain it's osx/linux/windows but not *bsd
09:57 < booyaa> does linux support extend to arm chipset or just intel/amd?
09:58 < ljharb> s0urce: use promises maybe, if youre having trouble with nested callbacks.
09:58 < eddyb> if it's not supported, there are plans for it
09:58 < s0urce> this looks useful, thx rvagg1
09:58 < eddyb> booyaa: v8 definitely supports ARM
09:58 < rvagg1> s0urce: if you want to try promises you could look at Q, can't give you a link but I think it's the most popular promises lib
09:59 < rvagg1> been some chatter lately about people playing with Node on Raspberry Pi, seems to work just fine but compile time is a pain
09:59 < booyaa> eddyb: cool
09:59 < eddyb> rvagg1: haven't they heard of cross-compilers?
09:59 < booyaa> rvagg1: yeah there was also a move to hard floating point
10:00 < booyaa> compile time's not a problem as you said xcompile
10:00 < eddyb> traceur has the await keyword
10:00 < booyaa> the move to hard floating point for the official distro
10:00 < eddyb> so if you were to have a modified node.js API with Deferred support instead of plain callbacks
10:01 < s0urce> ok thx, promise looks even better
10:01 < eddyb> you could do await data = file.readFile('foo.bar', 'utf8');
10:01 < ljharb> eddyb: "await" is iced coffeescript, not "deferred support"
10:01 < Shankar_> has somebody used ldaps authentication with nodejs
10:02 < eddyb> ljharb: ?
10:02 < ljharb> which is 2 whole levels removed from actual javascript.
10:02 < Shankar_> don't know which module to use
10:02 < ljharb> eddyb: the syntax for "await" isn't part of deferreds, that's part of coroutines i believe.
10:02 < eddyb> ljharb: you're wrong
10:02 < Shankar_> and i don't see anything for ldaps (Secure communication)
10:02 < ljharb> jquery has deferreds without that syntax.
10:02 < ljharb> eddyb: it might be in ES6 but that's not finalized yet so it doesn't count
10:03 < eddyb> traceur would then break the function and make everything after the await part a callback to the Deferred-based async function
10:03 < eddyb> ljharb: traceur traceur traceur do I have to say it a million times?
10:03 < ljharb> ah i missed the first one.
10:03 < eddyb> lol
10:03 < ljharb> i would highly discourage using any javascript tool coming out of google
10:04 < eddyb> it's not written in Java
10:04 < ljharb> nearly everything i've seen is trying to shoehorn java patterns into javascript.
10:04 < ljharb> it's likely using java thinking.
10:04 < eddyb> it's actually JS code to convert Harmony features into JS
10:04 < ljharb> interesting
10:04 < eddyb> it's using the features that are on the roadmap
10:04 < ljharb> i'll look into it
10:05 < ljharb> maybe google's finally made a javascript tool that's not about forcing java into javascript. altho that's half of what ES6 is, so maybe not.
10:05 < eddyb> https://code.google.com/p/traceur-compiler/wiki/LanguageFeatures (a bit old)
10:05 < ljharb> how does "let" work? you can't prevent shadowing in a compiler unless you rename variables
10:06 < eddyb> ljharb: ES5 has block-scoped variables
10:06 < eddyb> I would let you look for them
10:06 < ljharb> ES6 does. not ES5 as far as i'm aware.
10:07 < eddyb> try{throw value;}catch(name){...}
10:07 < eddyb> enjoy
10:07 < ljharb> they surely aren't using a slow try/catch to emulate letâ€¦
10:07 < eddyb> I bet v8 converts that to Harmony-like block scope (since it's written by the same guys who use that trick)
10:07 < eddyb> ljharb: try catch isn't slow
10:07 < ljharb> absolutely it is.
10:08 < ljharb> even if you put a function in the try to help engine optimization
10:08 < ljharb> its just less slow that way.
10:09 < eddyb> ljharb: are you seriously not considering v8 making this cheap optimization?
10:09 < ljharb> eddyb: absolutely when ES6 is standardized and added to v8, they might indeed use "let" to optimize try/catch blocks. but since ES6 doesn't exist yet, that's certainly not in use now.
10:10 < eddyb> ljharb: that's silly
10:10 < eddyb> v8 doesn't optimize on the source level
10:10 < ljharb> which part
10:10 < eddyb> they don't have to use "let"
10:10 < ljharb> you said harmony-like block scope
10:10 < eddyb> yeah
10:10 < eddyb> v8 already has scope
10:10 < ljharb> perhaps internally thats what theyre using, but engine internals aren't really relevant to this
10:10 < ljharb> try/catch is still slow
10:11 < eddyb> it's used for function scope and catch scope
10:11 < eddyb> ljharb: who cares about everyone else, v8 runs around them in circles
10:12 < ljharb> ok well show me something that proves try/catch isn't slow in v8?
10:12 < ljharb> it's slow in chrome which uses v8
10:12 < eddyb> I'll benchmark it in a sec
10:12 < ljharb> thanks
10:13 < ljharb> http://jsperf.com/try-catch-slow-down/2 imlpies pretty slow, even in chrome
10:15 < eddyb> v8 already has optional harmony goodies
10:15 < eddyb> including block scoping
10:15 < eddyb> but I can't seem to get it to work: [SyntaxError: Illegal let declaration outside extended mode]
10:15 < eddyb> and that with try{eval('{let x = 0;}');}catch(e){console.error(e)} to make the stupid 0.6 repl let me see the error
10:15 < ljharb> "extended mode" - maybe it's like a compiler switch you have to turn on or something
10:16 < ljharb> it would make sense since ES6 isn't finalized
10:16 < eddyb> I already have --harmony
10:16 < ljharb> ah
10:16 < FireFly> --harmony should toggle let
10:16 < FireFly> try let outside of eval
10:16 < eddyb> FireFly: stupid REPL doesn't let me see errors
10:17 < FireFly> ...maybe it's your try-catch :p
10:17 < ljharb> ha
10:17 < eddyb> FireFly: you go and start a 0.6 node
10:17 < FireFly> why 0.6?
10:17 < FireFly> I don't think the V8 used in that had --harmony
10:17 < eddyb> coz I'm not sure if it's fixed in 0.8
10:17 < FireFly> if I recall correctly
10:18 < eddyb> system v8, brand new
10:18 < eddyb> in the last 0.6, the REPL is still fucked up by concept
10:18 < eddyb> it will never let you run something that throws an error
10:18 < FireFly> the node repl has always been a bit odd
10:18 < FireFly> use d8?
10:18 < eddyb> oh, nice, I have d8 because of system v8
10:19 < eddyb> yeah, same error with d8 --harmony
10:19 < FireFly> "use strict"?
10:19 < FireFly> % d8 --harmony_scoping -e '"use strict"; let a = 20; print(a)'                                                                               [0]
10:19 < FireFly> 20
10:19 < FireFly> oops, stupid RPROMPT
10:20 < eddyb> FireFly: wow, that works
10:20 < eddyb> oh, I know what's going on
10:20 < eddyb> --harmony breaks some poorly written old code
10:21 < eddyb> I remember when twitter didn't work because I had it enabled in chrome
10:21 < FireFly> oh, I thought this was ##javascript
10:21 < eddyb> this must be a safety mechanism
10:21 < FireFly> heh
10:22 < eddyb> the try/catch slow-down is probably related to var a = 1; being optimized out
10:23 < eddyb> ljharb: see how some versions of firefox take the same time for both?
10:23 < FireFly> http://blog.dubbelboer.com/2012/04/16/node-try-catch.html seems to not agree with you
10:23 < eddyb> in those, the var statement isn't being optimized out
10:24 < FireFly> https://github.com/joyent/node/wiki/Best-practices-and-gotchas-with-v8 too
10:24 < ljharb> the fact that it can be optimized away doesn't mean it's not slow
10:24 < eddyb> wait, what
10:25 < eddyb> FireFly: your first link says that code inside the try block can be slowed down
10:25 < FireFly> I wonder if d8 allows you to peek at the code it produces
10:25 < ljharb> sometimes it's optimized away, sometimes not. a sometimes slow feature is slow
10:25 < eddyb> which I said nothing about
10:25 < eddyb> I care about code inside the catch block
10:25 < FireFly> By the way, why are we discussing this anyway? isn't it already established that harmony-let works well enough on node?
10:26 < eddyb> traceur and its await keyword
10:26 < Guest37720> @rvagg1: i want to use it with child_process
10:26 < Guest37720> exec a function, and then wait for it to finish
10:26 < eddyb> ljharb: look at the test/feature folder open on the left http://code.google.com/p/traceur-compiler/source/browse/#git%2Ftest%2Ffeature
10:27 < rvagg> guest37720: attach a listener to the 'exit' event
10:27 < rvagg> guest37720: http://nodejs.org/docs/latest/api/child_process.html#child_process_event_exit
10:27 < ljharb> gah, so much of ES6 really just rubs me the wrong way. i'm glad it will take forever for it to work in browsers
10:27 < FireFly> :\
10:28 < FireFly> There's some pretty neat stuff there though.. fancy lambda syntax
10:28 < ljharb> eh
10:28 < ljharb> fancy syntax doesn't save you that much time for breaking in older engines
10:28 < FireFly> oh, I don't mind my stuff breaking in outdated browsers
10:31 < eddyb> FireFly++
10:31 < Guest37720> @rvagg1: but it will still not be synchronous right?
10:32 < eddyb> so, try/catch was 10 times slower
10:32 < eddyb> well, guess what?
10:32 < eddyb> it wasn't
10:32 < eddyb> pushing to array removes the optimization
10:33 < rvagg> guest37720: no, async, pretend it's sync though and just continue on in the event callback
10:34 < Guest37720> @rvagg1: yes, but i need the program to pause until the command is finished
10:34 < eddyb> http://jsperf.com/try-catch-slow-down/3
10:34 < eddyb> be careful if running that, it doesn't have a constant memory footprint
10:35 < eddyb> actually, an assignment should fix it
10:35 < rvagg> not really any such thing as pause in node guest37720, if you have no JS to execute then it won't execute anything in the event loop
10:35 < Shankar_> any good module for ldap authentication with nodejs
10:35 < eddyb> !npm search ldap
10:35 < eddyb> .npm search ldap
10:36 < eddyb> it's annoying when you're constantly hitting the optimizer
10:40 < eddyb> http://jsperf.com/try-catch-slow-down/3
10:40 < eddyb> I'm amazed
10:40 < eddyb> and disappointed
10:40 < eddyb> it's such an easy thing to optimize
10:40 < eddyb> it's a try block with throw undefined inside
10:41 < eddyb> there's not unknown variables
10:41 < eddyb> *no
10:42 < eddyb> it would be funny if --harmony_scope was required for the optimization, but I doubt it
10:46 < Shankar_> <eddyb> tried using node-ldapauth...but it says no authentication method found....   have you tried it
10:47 < eddyb> Shankar_: that's not how IRC works
10:47 < eddyb> try writing the first letters of my name and then pressing enter
10:47 < eddyb> and no, I never touched LDAP
10:48 < eddyb> err, don't press enter, press tab
10:51 < Shankar_> ebarch: okay
10:52 < Shankar_> eddyb: okay thanks
10:54 < flexd> Uh, I am going to make my own module for something.. I assume there is a specific way these should be structured
10:55 < eddyb> flexd: you kinda have to look at other modules
10:55 < flexd> Does anyone have somewhere I can read about this? Googeling as we speak but I figured there's a best practice.
10:55 < flexd> I could do that too, hm
10:55 < eddyb> I think I recently looked at ref and ffi, they are pretty standard
10:56 < flexd> Well I am basically just creating sort of a wrapper around node-jsonrpc2, so I guess I can just look at that.
10:56 < eddyb> heh, or that
10:56 < flexd> Seems like there's a src and test folder, good place to start
10:56 < eddyb> flexd: js code goes in lib
10:56 < eddyb> src is for C++ code
10:57 < flexd> src is for source code? :P
10:57 < flexd> Whoever made jsonrpc2 has js in here
10:57 < eddyb> that's not kosher :P
10:57 < insin> <whateveryoudamnwellwant> is where your JS code goes :p
10:57 < eddyb> yeah, but everyone does js modules in lib, source for native modules in src
10:57 < flexd> Well anyway, do a bunch of things
10:57 < flexd> and then exports.whatever = whatever;
10:57 < eddyb> and js programs in bin
10:58 < flexd> HRM
10:58 < eddyb> yeah, that's how you export stuff from modules
10:58 < insin> flexd: http://howtonode.org/how-to-module
10:59 < eddyb> lib is used by most people because it makes sense for modules
10:59 < flexd> Also, isn't Object.prototype.functionname = function boop(data); kind of an old way to do it? Or is that still best practice?
10:59 < flexd> Object as in SomeName
10:59 < flexd> not Object itself
10:59 < eddyb> flexd: that's class methods
10:59 < insin> nope, perfectly cromulent
10:59 < eddyb> flexd: not related to modules
10:59 < flexd> Sort of related to modules, he has a class inside his module P
11:00 < flexd> :p
11:00 < eddyb> yeah, that's how you do classes
11:00 < flexd> I could do this just as a function or a class in my own project, but I figured I could just make it a model from the start since someone else might need it some day :)
11:43 < jhsto> Any idea how to make link to switch tab, which lies on the same page?
11:47 < gildean> jhsto: you mean just open a link to a new page?
11:48 < gildean> with _blank?
11:48 < jhsto> i thought nobody would have helped, but no
11:48 < jhsto> i think i found a way
11:48 < jhsto> ill tell more if it wont resolve
11:48 < gildean> or do you mean updating content dynamically?
11:48 < jhsto> kind of yes
11:49 < jhsto> i have this navigator, which i would like to open a new tab on another div
11:49 < jhsto> its a chat room navigator, which should open new chat rooms
11:51 < gildean> jhsto: i'm thinking tou could use something like websockets for that, but the "traditional" way would be to use ajax
11:51 < jhsto> im using websockets already to emit the messages
11:51 < jhsto> but ill see what i can do
11:52 < Shankar_> has anybody tried ldap connection in Nodejs for authentication?
11:53 < gildean> Shankar_: iirc there is a module for that in npm, haven't tried it tho'
11:53 < gildean> npm ldap
11:53 < npmbro> gildean: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20ldap
11:53 < rvagg1> npm search ldap
11:53 < npmbro> rvagg1: Please see http://eirikb.github.com/nipster/#ldap
11:53 < gildean> rvagg1: gah, forgot the search part
11:53 < eXeC001er> Hello.
11:53 < rvagg1> Shankar_:  perhaps put a message on the node google group, might be a wider audience there
11:54 < eXeC001er> Could somebody explain me where node gets date ?
11:54 < eXeC001er> Date() returns me incorrect date
11:55 < jhsto> eXeC001er, check moment.js
11:55 < rvagg1> eXeC001er: my guess is that node might get a date at a singles bar for software platforms
11:56 < rvagg1> ok, that was lame
11:58 < rvagg1> eXeC001er: do you get the right timezone in the string you get from running: node -e 'console.log(new Date())'
11:59 < eXeC001er> rvagg1: Thu, 19 Jul 2012 11:58:56 GMT
11:59 < eXeC001er> but: # date >>> Thu Jul 19 15:55:03 MSK 2012
11:59 < rvagg1> GMT, are you at GMT?
11:59 < rvagg1> oh, so it's not picking up your timezone properly perhaps
11:59 < rvagg1> what OS?
12:00 < eXeC001er> nexenta/opensolaris
12:00 < eXeC001er> rvagg1: Date() >>> 'Thu Jul 19 2012 12:00:35 GMT+0000 (MSK)'
12:01 < eXeC001er> so i cannot understand where node gets date
12:02 < rvagg1> looks like it's just not finding your timezone data, I can't help you there unfortunately
12:12 < jhsto> how to get value of id which was clicked, by using this statement?
12:29 < eXeC001er> intresting case: d = '87'; d + 1 = '871', but d - 1 = 86
12:44 < medice> well, i just tried that in my browser and it for some reason converts minus operation to type number
12:44 < medice> but keeps the plus as string
12:44 < medice> although it gave correct number
12:45 < medice> that is, 870
12:51 < eddyb> wow
12:51 < eddyb> WebKit inspector has some cool profiling
12:53 < medice> string + something will try to concatenate but - operation will cast to number
12:54 < eXeC001er> medice: '-' operator for 'string' should return exception (IMHO)
12:57 < diverdude> i have a co-existing node.js/php setup on my server. php handles webmail stuff while node.js handles chat. When a webmail is sent via php from user 1 to user 2 i need to notify user2 that a mail has been sent. my node.js has a websocket connection to the client. Can i somehow from PHP manipulate the node.js process so that it sends the notification to the client?
12:58 < medice> dnode, apparently
12:59 < deoxxa> so i did a thing tonight, at the node.js meetup here in melbourne, australia: http://www.fknsrs.biz/talks/SemVer_and_Seaport.pdf
13:00 < deoxxa> it's not much, was just a quick overview at seaport with a little intro on semver
13:00 < deoxxa> but some of you might be interested :D
13:04 < daniel_hu> Hi, did anyobody succeeded to install node.js on a nslu2 running debian squeeze?
13:04 < diverdude> anyone?
13:04 < daniel_hu> yeah
13:27 < austinbv> how do you get express to use a layout.jade?
13:42 < rezoner> Hi there, I've just published my multiplayer game made with node. Enjoy :) http://www.kongregate.com/games/rezoner/multiplayer-snake
13:45 < deedubs> rezoner: http://cl.ly/image/2w053W0a2C0j
13:47 < rezoner> deedubs: will fix it asap sir :)
13:58 < preetam> Will "npm install" automatically run "node-gyp build" if there is a binding.gyp file? I want to publish a native module.
14:04 < bnoordhuis> preetam: yes
14:04 < preetam> Awesome. Thanks.
14:25 < tgriesser> hello, i have a question for anyone here using backbone on both the frontend and backend of an application
14:26 < tgriesser> is it best practice to have a single install of backbone which is referenced by both node and the browser, say in a public/scripts folder? or do you have a separate files for npm and for the browser
14:33 < jcrew> tgriesser: it would make updates easier, to have a sym link
14:34 < tgriesser> jcrew: symlinking the public to the npm install?
14:34 < CIA-93> libuv: Ben Noordhuis v0.8 * re3a2850 / src/unix/pipe.c : unix: fix errno reporting in uv_pipe_connect() - http://git.io/Lo2Taw
14:34 < CIA-93> libuv: Ben Noordhuis v0.8 * rff59525 / src/unix/pipe.c : unix: fix uv_pipe_connect() with existing fd - http://git.io/F5WT6g
14:34 < CIA-93> libuv: Ben Noordhuis v0.8 * r94355e4 / (src/unix/freebsd.c test/test-process-title.c): unix: fix format string vulnerability in freebsd.c - http://git.io/gsqglQ
14:38 < stgermain> Expressjs: Working with connect's session middleware through express I want to let the user to download the cookie at a route '/login' and not at index route '/'. Can this be done with the cookie:path parameter? git://gist.github.com/3144244.git If not what can I do?
14:41 < stgermain> the git url was wrong, this is the correct one: https://gist.github.com/3144244
14:42 < jcrew> tgriesser: yea
14:42 < cocacola> hi. i'm making a node module, and when i go into a callback using eio_nop the node event loop dies. how can i keep it alive while the callback takes place?
14:43 < tgriesser> jcrew: makes sense... just getting started with this stuff. thanks
14:44 < jhsto> how to get id of an element using jquery?
14:47 <@Nexxy> 0.8.2 won't build on armv7
14:47 <@Nexxy> ;_;
14:47 < diverdude> is there a stepwise debugger available for node.js?
14:47 < blazes816> jhsto: $el.attr('id')
14:49 < jhsto> blazes816, I use this beside of element, because I would need to determine the element ID on click. This far I've got only undefined values
14:50 < edjafarov> diverdude: node debug file.js ??
14:51 < hillerstorm> https://github.com/dannycoates/node-inspector/
14:51 < hillerstorm> <3
14:51 < blazes816> jhsto: not sure exactly what you're saying, but inside the click handler you can do "$(this).attr('id')"
14:51 < jhsto> which throws me with undefined
14:52 < jhsto> @blazes816
14:53 < blazes816> jhsto: can you pastie your code?
14:53 < blazes816> or gist or whatever
14:53 < cocacola_> i'm building a node module that is using libeio. unfortunately when libeio calls the callback, the node event loop ends. is there a way to keep the event loop alive, until the callback finishes?
14:53 < vicapow> so is tj's cluster module part of core now?
14:53 < jhsto> I'll try to work to round this with another method, ill give my input when im done
14:54 < cocacola_> vicapow: I think the one in the core is a different cluster.
14:55 < vicapow> cocacola_: oh, okay
14:56 < vicapow> cocacola_: but they both do basically the same thing
14:56 < vicapow> ?
14:56 < blazes816> jhsto: good luck.  I'd first try making sure $(this) is what you think it is
14:57 < jhsto> blazes816: I believe the problem is how I trigger my handler.
14:58 < prettyrobots> eXeC001er: Time zone trouble?
14:59 < jhsto> blazes816: I was right, the problem was how I triggered my click handler. Thank you for being ready to help me though.
15:01 < pppaul> hello
15:01 < pppaul> i'm using http.get
15:02 < pppaul> i want to send data with .get, how would i do so?
15:02 < jhsto> One more thing, how to make text appear so that it looks clickable?
15:04 < schz> hey everyone, im very new to node-js this is my first project with it - im porting a chat application from nginx/longpoll_push_module to nodejs
15:05 < schz> on the same server i have 5 different customers, and usually in apache i have an ENV variable that specifies what DB each one uses 
15:05 < schz> what would be the nodejs way of doing that?
15:06 < schz> run 5 servers on different ports? or can the same server on the same port serve 5 instantes of the same app with 5 different dbs?
15:06 < blazes816> jhsto: np, glad you got it solved
15:07 < cocacola_> does anyone have an answer to my question?
15:08 < pppaul> :(
15:08 < CIA-93> node: isaacs v0.8.3-release * re7d5c8e / (AUTHORS ChangeLog src/node_version.h): 2012.07.17, Version 0.8.3 (Stable) - http://git.io/ky_6Cg
15:13 < prettyrobots> I want to make a list of things in JavaScript....
15:13 < prettyrobots> â€¦but I don't know where to put the commas.
15:13 < prettyrobots> Start of line or end of line?
15:13 < alex4nder> what
15:14 < yorick> SubStack: I am encountering https://github.com/substack/node-browserify/issues/192 with bonzo
15:36 < Hans_Zero> hey.... I'm havin trouble installing some package through node... here's a link to the npm output: http://pastebin.com/n85VtePA
15:37 < radiodar1o> there's no module called Scripting
15:37 < Hans_Zero> yeah
15:37 < Hans_Zero> so what am I doing wrong?
15:37 < radiodar1o> maybe the dude/dudette who wrote the module you're trying to install forgot to fill in the package.json
15:37 < Hans_Zero> or better what can I do to make it work
15:37 < radiodar1o> i think you should contact the developer
15:37 < radiodar1o> find his/her github and raise an issue
15:38 < radiodar1o> and if he/she doesn't fix it, you should fork it and make a copy that works
15:38 < radiodar1o> there's no scripting module in npm
15:38 < Hans_Zero> I think it's related to stringprep https://github.com/astro/node-stringprep but I don't actually know can you confirm this?
15:39 < radiodar1o> yep it's defo failing trying to install stringprep
15:39 < Hans_Zero> ok thanks so far
15:39 < radiodar1o> do you have libicu-dev?
15:40 < radiodar1o> read the docs in the github bit
15:40 < radiodar1o> https://github.com/astro/node-stringprep
15:41 < cocacola_> i'm building a node module that is using libeio. unfortunately when libeio calls the callback, the node event loop ends. is there a way to keep the event loop alive, until the callback finishes?
15:42 < Hans_Zero> I had the problem that comes if you don't have libicu-devel
15:42 < Hans_Zero> then I installed it
15:42 < Hans_Zero> and now it's this error
15:43 < context> anyone have any recommendations on mini-itx (zacate) or pcie sata controllers. building a home nas and not that into hardware anymore
15:43 < radiodar1o> hmm i strongly suggest you log the error onto his/her github
15:43 < radiodar1o> context: erm no not realkly
15:44 < radiodar1o> Hans_Zero: might be an issue with theversion of node you're using?
15:44 < radiodar1o> what version u using brah?
15:44 < Hans_Zero> I got node 0.82
15:44 < radiodar1o> ok a lot of stuff changed in 0.82
15:44 < Hans_Zero> yes I know...
15:44 <@Nexxy> are you guys from the future?!
15:44 < radiodar1o> and this project hasn't been updated in the last 8months
15:44 < radiodar1o> so you can try using NVM and install 0.6.19
15:44 < Hans_Zero> well there is a pull request for node-gyp support
15:45 < radiodar1o> and try with that
15:45 < Hans_Zero> I really want to use node .8
15:45 < radiodar1o> Nexxy: lol why
15:46 <@Nexxy> 0.82!
15:46 <@Nexxy> I knew isaacs was serious about not going to 1.0 before node was ready
15:46 < Hans_Zero> well n tried to install 0.83 when I told it to get the latest but it failed.... so I explicitly installed 0.82
15:47 < booyaa> who made that topic
15:47 < radiodar1o> Hans_Zero: i'm still using 0.6
15:47 < radiodar1o> try with 0.6... it's worth a shot!
15:47 < booyaa> maxogden: awesome topic brah
15:49 < brianloveswords> Question: is there any good reason to use `util.pump` over `Stream#pipe`?
15:52 < radiodar1o> yeah so Hans_Zero i think it should work on 0.6
15:53 < Hans_Zero> can I install the module on 0.6 and then use it with 0.8 ?
15:53 < Hans_Zero> I do know alot has changed but I do not know what changed to the full extend
15:53 < radiodar1o> no Hans_Zero, i think you have to use 0.6 if you want to use that module
15:54 < radiodar1o> why do you insist in using 0.8?
15:54 < radiodar1o> if time is of the essence, you should use 0.6 and contact the developer to make his module 0.8compatible
15:54 < mmalecki> ;sp index.js
15:54 < mmalecki> uhm, er.
16:16 < Danielss89> Hmm, if i have a linux command like this: "curl -d '{"method": "sms.send","id":123,"params":["+55528","+2234","Hello!",1]}' URL" <-- how would i do that with node.js?
16:18 < blazes816> Danielss89: maybe https://github.com/mgutz/execSync?
16:19 < blazes816> but curl is just making an HTTP POST request, so you could use the http module directly instead of shelling out.
16:19 < Danielss89> yeah blazes816 i want to use http, but i can't seem to get it right
16:20 < upb> the problem is that you have made a mistake somewhere :)
16:21 < blazes816> Danielss89: my entire Node knowledge is about a week old, but http://stackoverflow.com/questions/6158933/http-post-request-in-node-js
16:21 < blazes816> looks pretty simple
16:22 < blazes816> the 2nd answer is better as far as simplicity
16:26 < qbit> so i have setup a filtered replication for my local npm repo ( pulling like 10 packages ) .. and the first run will get like 5 of the packages.. and then nothing else copies 
16:26 < qbit> running it again _might_ get another package.. 
16:26 < qbit> but usually doesn't 
16:27 < diverdude> Are there some methods/patterns for sharing constants etc. between server and client js scripts?
16:27 < alex4nder> files?
16:27 < diverdude> alex4nder: me?
16:28 < Danielss89> diverdude: socket.io
16:28 < upb> yes, sending the constants over socket.io makes perfect sense
16:29 < CIA-93> node: Ben Noordhuis v0.8 * rb264893 / common.gypi : build: unbreak ustack on smartos - http://git.io/uUg59A
16:31 < qbit> http://sprunge.us/AWaW <--- my replicate script .. 
16:32 < qbit> like i said.. it seems to copy things randomly
16:33 < CIA-93> node: isaacs v0.8.3-release * r845b9e9 / (8 files in 3 dirs): uv: Upgrade to 94355e4 - http://git.io/LWdTig
16:33 < CIA-93> node: isaacs v0.8.3-release * rc130282 / (AUTHORS ChangeLog src/node_version.h): 2012.07.17, Version 0.8.3 (Stable) - http://git.io/9VS6dw
16:33 < alex4nder> diverdude: yah, if they're constant.. why not just have the client download them when it starts as a file
16:34 < dominictarr> mmalecki, hey whats up?
16:42 < mmalecki> dominictarr: hey!
16:42 < mmalecki> dominictarr: not much, coding stuff, secret plans and such. where are you?
16:43 < dominictarr> mmalecki, I'm in tuebingen, in south germany. 
16:44 < mmalecki> dominictarr: nice. have you been to Switzerland already?
16:45 < dominictarr> we aren't getting started properly until september, 
16:46 < dominictarr> till then I'm remotely working part-time.
16:55 < kuryaki>  Heya im kinda noob to node and im reading require(file).apply(self)
16:55 < kuryaki> can some one explain to me the apply part?
16:56 < kuryaki> i have used require before to use other files / modules, but the apply self is new to me
16:56 < brainss> kuryaki: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply
16:57 < kuryaki> ty
17:02 < brianc> diverdude: node-inspector
17:02 < diverdude> brianc: for debug?
17:03 < brianc> diverdude: stepwise debugger for node
17:03 < diverdude> nice
17:05 < dominictarr> mmalecki, I'm gonna be heading your way soon!
17:05 < dominictarr> just gotta figure out if I should go via switzerland first.
17:05 < mmalecki> dominictarr: oh my, now that's awesome
17:06 < mmalecki> dominictarr: so, I'll start filling my freezer with vodka
17:06 < mmalecki> since my fridge is already full of beer
17:06 < mmalecki> (as in, no space for food)
17:07 < alex4nder> yoh
17:14 < diverdude> what is the right way to include a .js file in my node.js script?
17:14 < munro> eval(fs.readFileSync('myScript.js', 'utf8'))
17:15 < diverdude> munro: really? Why can 't i just do require('myjs.js') ?
17:15 < munro> are you questioning my integrity?!
17:15 < dominictarr> diverdude, only if it uses exports = whatever
17:15 < munro> lol yeah you should `require`
17:16 < dominictarr> oh, actually
17:16 < dominictarr> if it does this.whatever = function () {...}
17:16  * Hodapp ponders why the existence of Node.js pisses off so many people.
17:16 < diverdude> munro: no im not....i just find it weird that there is no function for requiring js files
17:16 < dominictarr> then that will actually work, because this is exports in the module closure.
17:16 < diverdude> hmm i see
17:17 < diverdude> but its a file which defines variables to be used both on server and on client
17:17 < dominictarr> diverdude, it's mostly because most browserside js is not so useful on the server.
17:17 < diverdude> dominictarr: aha...isn't it often useful to have a shared defines file?
17:18 < dominictarr> diverdude, the simple way, is to use browserify (or a compeditor) and then you have the same pattern on both sides.
17:18 < dominictarr> no, it's very useful. 
17:18 < CIA-93> node: isaacs v0.8 * r0c91b0e / (8 files in 3 dirs): uv: Upgrade to 94355e4 - http://git.io/-kcxzg
17:18 < dominictarr> but node.js has a real module system.
17:18 < CIA-93> node: isaacs v0.8.3-release * r60bf2d6 / (AUTHORS ChangeLog src/node_version.h): 2012.07.19, Version 0.8.3 (Stable) - http://git.io/QnZRAg
17:19 < dominictarr> diverdude,  oh yeah, now I remember,
17:19 < dominictarr> what you do is wrap the js in a thing that checks if it's in the browser or not
17:19 < dominictarr> diverdude, https://github.com/umdjs/umd
17:19 < CIA-93> node: isaacs v0.8 * r845b9e9 / (8 files in 3 dirs): uv: Upgrade to 94355e4 - http://git.io/LWdTig
17:20 < CIA-93> node: isaacs v0.8 * r60bf2d6 / (AUTHORS ChangeLog src/node_version.h): 2012.07.19, Version 0.8.3 (Stable) - http://git.io/QnZRAg
17:20 < CIA-93> node: isaacs v0.8 * r4439f7b / (AUTHORS ChangeLog src/node_version.h): Merge branch 'v0.8.3-release' into v0.8 - http://git.io/iLnLVw
17:20 < CIA-93> node: isaacs v0.8 * r02ff974 / src/node_version.h : Now working on 0.8.4 - http://git.io/rjwHEg
17:26 < diverdude> dominictarr: what would be nice would be to be able to use a system like backbone.js on both sides
17:28 < CIA-93> node: isaacs v0.8 * rf648484 / doc/blog/release/v0.8.3.md : Blog post about v0.8.3 - http://git.io/jcsQ4w
17:28 < dominictarr> I think backbone supports that!
17:28 < dominictarr> diverdude, using something like umd
17:28 < dominictarr> (I have only played around with backbone, but I heard that somewhere)
17:30 < diverdude> dominictarr: nice...i never actually used backbone...but i like the idea, and think it would be an awesome way to write a RESTful applicatio n
17:33 < CIA-93> node: isaacs master * r4e5fe2d / (3 files in 2 dirs): nextTick: Handle tick callbacks after each tick - http://git.io/rKx3jQ
17:33 < CIA-93> node: isaacs master * r19ecc17 / (src/node.js test/simple/test-next-tick.js): nextTick: explicitly no-op when _exiting - http://git.io/l4ztCw
17:33 < CIA-93> node: isaacs master * ra52a44e / doc/api/process.markdown : doc: nextTick semantics and justification - http://git.io/zuMZtg
17:33 < CIA-93> node: isaacs master * r430d94e / (4 files in 2 dirs): nextTick: Preserve depth in error/reentry cases - http://git.io/-Bx9jA
17:35 <@isaacs> now nextTick works on master the way everyone already thought it did
17:36 < aroman> yay
17:36 < mmalecki> isaacs: after i/o?
17:37 <@isaacs> mmalecki: after this tick, but before io
17:37 <@isaacs> unless you spin for 1000 iterations
17:37 < mmalecki> okay
17:37 <@isaacs> but that means you can set up event handlers on a socket on nextTick, and not lose chunks
17:38 < mmalecki> yeah, that's good
17:38 <@isaacs> very good.
17:38 <@isaacs> since we do that all over http.js
17:38 < tbranyen> isaacs: has there been any movement bringing deferreds to node core?
17:40 < diverdude> what does the module.exports do ?
17:45 <@isaacs> tbranyen: nope.
17:45 <@isaacs> tbranyen: that's not very likely
17:45 < tbranyen> isaacs: bummer
17:46 <@isaacs> tbranyen: yeah, but there are too many competing promise/deferred/etc apis out there
17:46 <@isaacs> and very little agreement on them
17:46 < _Tristan> Does npm have a problem with git dependencies on windows?
17:46 < tbranyen> isaacs: and?
17:46 <@isaacs> and all of them can be built up out of callbacks anyway, so that's what we have
17:46 < tbranyen> commonjs modules seem to be working out fine
17:46 < tbranyen> lots of competing implementations there
17:47 <@isaacs> tbranyen: we'll probably look into some kind of generator/yield thing once it lands in V8 by default, if it's fast, and good.
17:47 <@isaacs> tbranyen: or maybe not.
17:47 < _Tristan> also, one of my users (on windows) somehow managed to have npm's error log set to "silly" by default... is that normal?
17:47 < tbranyen> isaacs: yeah that makes sense
17:48 <@isaacs> _Tristan: by default?  no.  they typed `npm config set loglevel silly` at some point
17:48 < tbranyen> isaacs: just seems odd to not have anything
17:48 <@isaacs> _Tristan: npm config ls <-- shows you what's set where
17:48 <@isaacs> tbranyen: seems reasonable to me.  node doesn't try to reinvent the language
17:49 < lohkey> tbranyen: what node has right now is essentially the continuation monad
17:49 < tbranyen> isaacs: adding promises and deferreds is not "reinventing" the language
17:49 < lohkey> which is a pretty powerful and composable asynchronous construct
17:49 < tbranyen> by any stretch
17:49 < _Tristan> isaacs: ok, perhaps they did, how about this: Does npm have a problem with git dependencies on windows?
17:49 <@isaacs> _Tristan: if you don't have git installed, yes.
17:49 < tbranyen> lohkey: fs.readFile(file, cb) is powerful? wut???
17:49 <@isaacs> _Tristan: npm calls out ot get.  if you're getting errors, the check that git is installed.
17:49 < _Tristan> ok
17:50 < _Tristan> guess I shouldn't be distributing a package with a git dep then, some of my users can barely install node
17:50 <@isaacs> tbranyen: it's the lowest level atom that can be composed into any kind of flow control.  and yes, callbaks are powerful.
17:50 <@isaacs> tbranyen: try writing async code in C.  you can do it.  but it's crazy tedious.
17:51 <@isaacs> even with something like libuv or libev that makes it pretty nice
17:51 < tbranyen> isaacs: you're acting like node is the first javascript lib that does async io
17:51 < tbranyen> others have done this
17:51 < tbranyen> and realized callback approach sucks
17:51 <@isaacs> tbranyen: there are many alternatives in node-land.
17:51 < tbranyen> i'm using them, but deferreds oh-so-much-nicer
17:51 <@isaacs> tbranyen: there are many to choose from, and they mostly interoperate, because they all are built on the same callback base.
17:51 <@isaacs> and for many things, callbacks are plenty.
17:52 <@isaacs> so it reduces complexity significantly.
17:52 < lohkey> http://substack.net/images/dnode-slides/fuck_yeah.png
17:52 < tbranyen> oh well, i'll sit quietly disappointed
17:52 < tbranyen> that this is the direction a javascript framework is taking
17:53 < tbranyen> by ignoring modern approaches to async programming
17:53 < tbranyen> AMEN!
17:53 <@isaacs> tbranyen: i think that you might be mistaking the level of "framework" that node is.
17:53 < lohkey> promises aren't a modern approach
17:53 <@isaacs> tbranyen: you've been around node a while.  this hasn't changed.
17:53 < tbranyen> lohkey: postmodernist then
17:53 < tbranyen> isaacs: i know... i just want to bitch about it
17:53 < lohkey> i'd argue that greenlets and light weight thread models with aysnc schedulers are way way more modern then async promises
17:54 <@isaacs> tbranyen: so name your fucntions, use a flow control library, hell run with fibers or whatever for all i care.
17:54 < tbranyen> isaacs: problem is that many of these libs end up needing to patch node proper
17:54 < lohkey> or just use a promise liv
17:54 < lohkey> *lib
17:54 < tbranyen> which doesn't seem like a good idea
17:54 < lohkey> no need to clutter core
17:54 <@isaacs> tbranyen: none of them do
17:54 <@isaacs> tbranyen: fibers is a binary addon
17:54 < lohkey> the promise libs don't patch node at all
17:54 < tbranyen> isaacs: i'm talking about promises
17:54 < lohkey> i haven't seen one that does
17:54 < tbranyen> fs.readFile().then... would have to patch the readFile method
17:55 < tbranyen> to return a promise
17:55 < lohkey> tbranyen thats a retarded promise library then
17:55 < tbranyen> pretty easy to do that too, but annoying
17:55 < tbranyen> lohkey: i don't think you understand how javascript works if you don't think a method would need to be patched to work like that
17:55 <@isaacs> $ npm search deferred -q | wc -l
17:55 <@isaacs>       28
17:55 < lohkey> it's pretty standard bad juju to monkey patch anything in JS
17:55 < lohkey> tbranyen: i understand plenty
17:55 <@isaacs> $ npm search promise -q | wc -l
17:55 <@isaacs>       74
17:55 < tbranyen> lohkey: unless it wraps that method... it needs to be patched
17:55 < lohkey> it's called wrapping stuff
17:55 <@isaacs> tbranyen: there is an embarrassment of riches before you.
17:56 < tbranyen> isaacs: fools good
17:56 < tbranyen> gold*
17:56 <@isaacs> tbranyen: then write a better one
17:56 < lohkey> monkey patching like that has the potential of breaking tons of other modules etc
17:56 < lohkey> not worth it
17:56 < tbranyen> isaacs: in order to do that i'd have to fork node
17:56 <@isaacs> tbranyen: why?
17:56 < tbranyen> isaacs: on a different note, who manages the os x pkg builder
17:56 <@isaacs> tbranyen: i do
17:56 < tbranyen> isaacs: because i'd want it to be baked into core 
17:56 <@isaacs> what's up with it?
17:57 < tbranyen> isaacs: dope, i've been digging into it.  trying to figure out if its possible to disable super-user priv
17:57 < tbranyen> so it can install without sudo/super
17:57 <@isaacs> tbranyen: yeah, i dunno
17:57 < tbranyen> not sure if its possible
17:57 <@isaacs> tbranyen: i just chown'd /usr/local a long time ago
17:57 <@isaacs> but i think the pkg still asks
17:58 < tbranyen> yea it does
17:58 < tbranyen> i wonder if its just an osx security thing
18:01 < jhsto> hey guys, any idea how to convert array into a string?
18:01 < jhsto> toString(); seemed to not work
18:02 < insin> an array of what into a string which looks like what>
18:03 < jhsto> $(this).attr('id');
18:03 < jhsto> like
18:03 < jhsto> i have that in a variable, and i need to use it multiple times
18:04 < jhsto> but instead of getting $(this).attr('id'); everytime, i just want the result of the first time it was called
18:05 < tnorris> jhsto: um, <array>.join('<separator>')
18:05 < _Tristan> jhsto: var id = $(this).attr('id'); ...?
18:06 < jhsto> _Tristan: I done that, but the problem is that instead of giving me my result in the first place, it makes $(this).attr('id');
18:06 < _Tristan> I think it's safe to say that nobody on earth, except MAYBE yourself, knows what you're trying to do.
18:06 < jhsto> Giving me undefined value, since the time it is being called again, it does not have attribute id.
18:06 < jhsto> Oh cool.
18:07 < _Tristan> var id = $(this).attr('id'); < you only call this once
18:07 < _Tristan> when it has an ID attribute, before that attribute is abducted by aliens
18:07 < _Tristan> so that after it gets stolen from it's family, you can still remember it
18:07 < _Tristan> like a gravestone
18:08 < _Tristan> or a greeting card
18:09 < jhsto> See, the $(this).attr('id'); is on a event handler, but when I try to use the value assigned in the event handler outside of it, instead of giving me the expected result - which was ment to be saved - it searches the id again.
18:15 < jcrew> jhsto: that sounds like it's to be expected if you're doing 'var id' to assign inside of the eventhandler
18:16 < jhsto> jcrew: that might be the case, any idea how to save as i would like to?
18:16 < jhsto> I'm using nowJS, which seems to screw the variable up
18:18 < jcrew> https://gist.github.com/3145786
18:19 < jhsto> thank for this
18:50 < qbit> isaacs: any idea why this would only replicate 11 of the packages http://sprunge.us/AWaW ?
18:52 < emerleite> Nodejs website down?
18:52 < qbit> emerleite: looks good from here
18:53 <@isaacs> qbit: no, it should replicate all of them on that list
18:53 < qbit> isaacs: that's what i thought :P 
18:53 < qbit> i am wondering if there is some caching proxy between me and iris or something strange
18:55 < EhevuTov> anyone know if I can send a Javascript object through msgpack to C program using msgpack?
18:55 < EhevuTov> using node
18:56 < EhevuTov> I'm thinking  I might need to use protobuf instead
18:57 < EhevuTov> nvm, I don't think there's a node protobuf module
18:57 < EhevuTov> oh no there's something
18:58 < mmalecki> it's shitty and written by google
18:58 < mmalecki> don't use it
18:58 < mmalecki> also, requires compiled addons
18:59 < EhevuTov> mmalecki, ah, thanks. what do you recommend?
18:59 < mmalecki> well, try rolling out yours or working on buffers with tcp
19:00 < Hodapp> mmalecki: why is protobuf shitty?
19:00 < EhevuTov> mmalecki, basically, I need to do interprocessor communication over TCP/IP between multiple languages(I want to get my company away from packing structs with #pragma and to start using Node with some things)
19:00 < Hodapp> EhevuTov: Hm... ZeroMQ? I don't know though if it has JS bindings
19:00 < EhevuTov> Hodapp, zmq is a message queue
19:00 < Hodapp> EhevuTov: It provides some degree of cross-language IPC
19:01 < EhevuTov> I'm trying to figure out how to actually pack those messages. The step that serializes structs/objects and sends them to another program
19:01 < EhevuTov> Hodapp, yeah, I'm using zmq for the comms, but I need each process to be able to serialize/deserialize objects/structs between one another
19:02 < Hodapp> ahhh, I see
19:02 < EhevuTov> this is why google wore protobuf, cause some of their programs are written in different languages
19:02 < Hodapp> and I'd suggest SOAP but I don't yet know you enough to hate you that much
19:02 < EhevuTov> Hodapp, yeah, there are better ways
19:02 < EhevuTov> and I'm working with real-time systems, so dumping to XML is just ugly 
19:03 < Hodapp> that's true whether you're in real-time systems or not
19:03 < EhevuTov> soft real-time
19:03 < Hodapp> I'd suggest protobuf too but I did want to hear why mmalecki thinks it sucks
19:03 < EhevuTov> I really don't want to roll my own
19:03 < Hodapp> I wouldn't either except for the simplest cases
19:04 < EhevuTov> Well, I'm familiar with msgpack. The thing is, I don't think it's interoperable between different languages that don't understand each other's types
19:04 < EhevuTov> I think Msgpack is working on an IDL, so that you can define your types in the IDL and then compile the IDL for your specific language
19:05 < EhevuTov> similar to what ASN.1 does, really. I don't know why they just don't use that
19:05 < EhevuTov> but, that's my dilemma. I'm getting so frustrated, I might just write my own
19:06 < EhevuTov> except instead of recreating the wheel, I'd use ASN.1 and do the standard packing like BER and then use the latest and greatest for another
19:07 < EhevuTov> no one responds on #msgpack so I was hoping someone here had a similar problem
19:07 < EhevuTov> I think it's cause most of them speak Japanese
19:22 < EvilPacket> SubStack: if I was to get a binary file like a png with browserified http how might I just get the raw buffer rather than stringified contents?
19:27 < Sh4rK> hi
19:27 < Sh4rK> I have a question
19:27 < Sh4rK> does the windows backend of node/libuv use multiple worker threads with IOCP?
19:28 < Sh4rK> or only one thread?
19:33 < EhevuTov> Hodapp, turns out there's some work on a msgpack IDL. I don't know how mature it is though http://wiki.msgpack.org/display/MSGPACK/Design+of+IDL
19:37 < diverdude> I am using socket. io. Inside io.set('authorization', function (data, callback)... i do a validation. If the client is validated i would like to be able store his socket in an array so that i can easily access the socked of a specific client at a later point. How do i do that?
19:38 < duko> I'm using fs.stat('~/', function () {})
19:38 < duko> and fs.stat returns an error -no such file or directory '~/'
19:38 < duko> is there a way for me to use ~/ with fs.stat?
19:39 < AviMarcus> so.. I'm making an API for interacting with my DB. I've got my gui in angularjs calling it, but I only made a pretty crude routing and response system with no plugins at all. What is the recommendations for creating REST APIs that return JSON? just connect, express, or something built on top of those?
19:39 < AviMarcus> erm API for others to interact with my service. It will include authentication and user roles and the like
19:40 < AviMarcus> although, consequently, seems good to base my GUI on it, too.
19:42 < qbit> hm.. not a proxy issue.. 
19:42 < qbit> seems to be somethign with replicate
19:42 < duko> is there a convenience method for getting the system home directory in a node environment
19:42 < duko> ?
19:44 < tnorris> duko: process.env.HOME
19:44 < tnorris> (if your on linux)
19:45 < duko> tnorris: thanks
19:45 < tnorris> i'm assuming you mean the home directory of the user running the node script?
19:54 < diverdude> How do i update my node.js ?
19:54 < diverdude> socket.io lib
19:56 < hatch> http://npmjs.org/doc/update.html
19:58 < rama__> can i call a python script from nodejs ? 
20:02 < rama__> Hello folks, a quick question ... can i call a python script from nodejs ?
20:03 < benatkin> rama__: yeah, just use a child process, it's in the node.js docs
20:04 < CIA-93> node: isaacs v0.8 * rd9057cc / (102 files in 7 dirs): npm: Upgrade to 1.1.44 - http://git.io/PKi70g
20:05 < qbit> is anyone else running a private repo? 
20:06 < mrjf> Using the request module, running multiple parallel asynchronous requests using async module, I'm getting a lot of 404s from sites, when I don't get 404s if I run a single request at a time
20:06 < mrjf> 404: Bad Request: Size of a request header field exceeds server limit
20:07 < CIA-93> node: isaacs master * r3c99894 / (205 files in 48 dirs): Merge remote-tracking branch 'ry/v0.8' into master (+19 more commits...) - http://git.io/ypdvfA
20:09 < slickplaid> Is there a way to detect if headers/response has already been sent in express?
20:09 < rauchg> hahaha
20:09 < rauchg> is this a script ?
20:10 < gkatsev> probably
20:10 < PaulCapestany> looks like it...
20:10 < rauchg> he's just really fast
20:10 < qbit> sweet baby jebus
20:10 < slickplaid> Everyone gets ops!
20:10 < PaulCapestany> lol
20:10 < qbit>  /op -YES * 
20:10 < Destos> quick ban everyone
20:10 < gkatsev> and you get an op and you get an op and you get an op
20:10 < SubStack> EvilPacket: you could base64 the contents
20:10 < slickplaid> Damn, and right when I need to ask a question the channel is gonna get crazy. :X Is there a way to detect if headers/response has already been sent in express?
20:11 -!- TooTallNate changed the topic of #Node.js to: wtf?
20:11 < benatkin> slickplaid: there's #express
20:11 -!- isaacs changed the topic of #Node.js to: OPS FOR ALL!
20:11 <@slickplaid> benatkin: yup, and no response
20:11 < qbit> LOUD NOISES! 
20:11 -!- isaacs was kicked from #Node.js by indutny [isaacs]
20:12 -!- Topic for #Node.js: OPS FOR ALL!
20:12 -!- Topic set by isaacs [~isaacs@173-203-97-118.static.cloud-ips.com] [Thu Jul 19 20:11:36 2012]
20:12 [Users #node.js]
20:12 [@[diecast]       ] [@mainerror      ] [ adambrault      ] [ EvRide          ] [ lmatteis        ] [ saapaz        ] 
20:12 [@\mSg            ] [@malcolmva      ] [ addisonj        ] [ EyePulp         ] [ loc__           ] [ Sadin         ] 
20:12 [@^esc            ] [@marioluk       ] [ aib_233         ] [ Ezku            ] [ loffe           ] [ sakkaku       ] 
20:12 [@^robertj        ] [@marlun_        ] [ Aikar           ] [ Fabryz          ] [ lohkey          ] [ salva         ] 
20:12 [@__doc__         ] [@matt_c         ] [ akshayms        ] [ fairwinds       ] [ Lorentz         ] [ Sam4242       ] 
20:12 [@_dsi            ] [@mattgifford    ] [ albertosh       ] [ fangel          ] [ lpin            ] [ samcday       ] 
20:12 [@_janne          ] [@mattikus       ] [ AlbireoX        ] [ faulkner        ] [ lrvick          ] [ satyr         ] 
20:12 [@_lleo           ] [@mattp_         ] [ AlbireoX__      ] [ fcoury          ] [ lukegb          ] [ sawrubh       ] 
20:12 [@_mdp            ] [@MaxGaudronBNC  ] [ alek_b          ] [ fent            ] [ lxnch           ] [ sawrubh|bot   ] 
20:12 [@_sorensen       ] [@maxogden       ] [ alek_br         ] [ fforbeck        ] [ lyaunzbe        ] [ scott_gonzalez] 
20:12 [@AAA_awright     ] [@mde            ] [ alex4nder       ] [ filleokus       ] [ m0              ] [ sdboyer       ] 
20:12 [@ag4ve           ] [@medice         ] [ aliem           ] [ FIQ             ] [ madtimber       ] [ sechrist      ] 
20:12 [@agnat           ] [@mephux         ] [ alindeman       ] [ FireFly         ] [ maletor         ] [ SecretAgent   ] 
20:12 [@ajpiano         ] [@meso           ] [ AllStruck       ] [ flagg0204       ] [ mandric         ] [ serapath      ] 
20:12 [@alexgordon      ] [@methoddk       ] [ alta            ] [ flexd           ] [ mape            ] [ Sh4rK         ] 
20:12 [@andrerod        ] [@mgc            ] [ andrewffff      ] [ foldedcat       ] [ marienz         ] [ shajith       ] 
20:12 [@appr            ] [@mickhansen     ] [ apa-_           ] [ forzan          ] [ mAritz          ] [ ShaneHudson   ] 
20:12 [@arlolra         ] [@MitchW         ] [ apejens         ] [ frewsxcv        ] [ martialcoder    ] [ shanse        ] 
20:12 [@asherkin        ] [@mjr84          ] [ apraxas         ] [ funktronic      ] [ MartinCleaver   ] [ shurain       ] 
20:12 [@augustl         ] [@mrmoneyc       ] [ arcatan         ] [ Fuu             ] [ Martz           ] [ shykes        ] 
20:12 [@AviMarcus       ] [@MrNko          ] [ aroman          ] [ gabe_           ] [ maru_cc__       ] [ simewn        ] 
20:12 [@azend           ] [@munro          ] [ aromasca_       ] [ gabriel         ] [ masch           ] [ sj26          ] 
20:12 [@baer            ] [@nd__           ] [ ashb            ] [ Garo_           ] [ matjas          ] [ SkareCrow|W   ] 
20:12 [@ben_alman       ] [@neumino        ] [ audreyr         ] [ garrensmith     ] [ mcluskydodallas ] [ skeptic       ] 
20:12 [@blueadept       ] [@Nexxy          ] [ august1914      ] [ gartenstuhl     ] [ mcmanusm        ] [ skunkape      ] 
20:12 [@bnoordhuis      ] [@nivardus       ] [ AvianFlu        ] [ gdbz            ] [ med_            ] [ skunkwerks    ] 
20:12 [@bodisiw         ] [@nodokodo       ] [ awhamblin       ] [ gf3             ] [ mekwall         ] [ slajax        ] 
20:12 [@BombStrike      ] [@nooga          ] [ Axsuul          ] [ ggreenha        ] [ MerlinDMC       ] [ Slashbunny    ] 
20:12 [@booo            ] [@npmbro         ] [ bakadesu        ] [ gila            ] [ mertimor-       ] [ SlexAxton     ] 
20:12 [@bosphorus       ] [@obtxo          ] [ Balthek         ] [ gildean         ] [ meso_           ] [ slloyd        ] 
20:12 [@bowen199        ] [@ohcibi         ] [ balupton        ] [ gkatsev         ] [ metellus        ] [ slurp         ] 
20:12 [@bradgignac      ] [@olegp          ] [ barneybook      ] [ gmci            ] [ miccolis        ] [ sorensen      ] 
20:12 [@briancray       ] [@onre           ] [ baudehlo        ] [ googol          ] [ mikegerw1tz     ] [ sriley        ] 
20:12 [@c4milo          ] [@ootje          ] [ beasty          ] [ gorillatron     ] [ MikeW           ] [ st_luke       ] 
20:12 [@chjj            ] [@othiym23       ] [ beawesomeinstead] [ Gottox          ] [ mikey_p         ] [ stagas        ] 
20:12 [@chrisdickinson  ] [@ovaillancourt  ] [ beeviz          ] [ grallan         ] [ monokrome       ] [ stbuehler     ] 
20:12 [@cjackson        ] [@owen1          ] [ benatkin        ] [ gshipley        ] [ moonlite        ] [ stef          ] 
20:12 [@Cody            ] [@owenb          ] [ benhoman        ] [ Guest32715      ] [ Mortchek        ] [ stephank      ] 
20:12 [@Connorhd        ] [@Owner          ] [ Bennit          ] [ Guest37720      ] [ motiooon_       ] [ stephenlb     ] 
20:12 [@context         ] [@pandark_       ] [ bentruyman      ] [ Guest85214      ] [ mritz           ] [ stride        ] 
20:12 [@cpetzold_       ] [@patcito        ] [ benvie          ] [ guybrush        ] [ mrjf            ] [ stutter_      ] 
20:12 [@cpg             ] [@patspam        ] [ Berglund        ] [ gwillen         ] [ MrMaksimize     ] [ stylus        ] 
20:12 [@Cr8             ] [@pekim_         ] [ blakmatrix      ] [ hakunin         ] [ MrNibbles       ] [ SubStack      ] 
20:12 [@creationix      ] [@phpnode        ] [ blazes816       ] [ halfhalo        ] [ msteinert       ] [ substans      ] 
20:12 [@CrypticSwarm    ] [@pickelsss      ] [ blevs           ] [ hammon          ] [ mstruk          ] [ sugyan        ] 
20:12 [@Daroth          ] [@pokoli         ] [ Blorb           ] [ happosade       ] [ mxweas          ] [ sumpygump     ] 
20:12 [@davidjdagino    ] [@postwait       ] [ bolgovr         ] [ hatch           ] [ nail__          ] [ superjoe      ] 
20:12 [@dawolf          ] [@prasm_         ] [ Bonuspunkt      ] [ Hebo_           ] [ naquad          ] [ SuperShabam   ] 
20:12 [@dazoe           ] [@purr           ] [ booyaa          ] [ hide_           ] [ Neal_           ] [ sveisvei      ] 
20:12 [@dec             ] [@QaDeS          ] [ brainproxy      ] [ hillct          ] [ nebiros         ] [ SvenDowideit  ] 
20:12 [@deedubs         ] [@quinnirill     ] [ brainss         ] [ hillerstorm     ] [ necros          ] [ svnlto        ] 
20:12 [@Derander_       ] [@r04r_          ] [ brianloveswords ] [ hipertracker    ] [ neersighted     ] [ Swaagie       ] 
20:12 [@dested          ] [@r0tha          ] [ bricker88       ] [ hlindset        ] [ neme            ] [ Swizec        ] 
20:12 [@dgathright      ] [@r1ngzer0       ] [ brooss_         ] [ huangjs         ] [ niallo          ] [ taaz          ] 
20:12 [@disnet          ] [@radmiraal      ] [ BruNeX          ] [ i42n            ] [ nicholasf       ] [ tahu          ] 
20:12 [@dnyy            ] [@rama__         ] [ burgalon        ] [ iangreenleaf    ] [ nick__          ] [ taquter       ] 
20:12 [@dob_            ] [@rauchg         ] [ Bwild           ] [ icenix          ] [ niclone         ] [ tbranyen      ] 
20:12 [@don_jones       ] [@remysharp      ] [ ByteCrunch      ] [ idefine1        ] [ nielsbusch      ] [ te-brian      ] 
20:12 [@dpino           ] [@rezoner        ] [ cainus          ] [ idiomatique     ] [ Nies            ] [ TehShrike     ] 
20:12 [@Draggor         ] [@rmill          ] [ CannedCorn      ] [ idoru           ] [ niftylettuce    ] [ teixeira_     ] 
20:12 [@Dreamer3        ] [@roger_raymond  ] [ cas002          ] [ illourr         ] [ niko            ] [ tekky         ] 
20:12 [@dwierenga       ] [@Rolken         ] [ cce             ] [ im0b            ] [ niloy           ] [ tellnes       ] 
20:12 [@dz0ny           ] [@rowanu         ] [ cconstantine_   ] [ ImBcmDth        ] [ NimeshNeema     ] [ tg            ] 
20:12 [@edr             ] [@russfrank      ] [ chadi           ] [ imjsilva        ] [ nlf             ] [ tgriesser     ] 
20:12 [@einaros         ] [@rvagg          ] [ chadskidmore    ] [ inarru_         ] [ NodeX           ] [ thanpolas     ] 
20:12 [@emerleite       ] [@rworth         ] [ chapel          ] [ indexzero       ] [ nsm             ] [ TheFuzzball   ] 
20:12 [@epa_            ] [@ryah           ] [ charlieschwa    ] [ Industrial      ] [ nuba            ] [ thejefflarson ] 
20:12 [@er1c_           ] [@salsamontes    ] [ Charuru         ] [ infynyxx        ] [ octane--        ] [ TheMoonMaster ] 
20:12 [@eugeneware      ] [@samstefan      ] [ Cheery          ] [ inimino         ] [ odyniec         ] [ thisandagain  ] 
20:12 [@eventualbuddha  ] [@seant23        ] [ Chepra          ] [ innociv         ] [ omni5cience     ] [ thorsteinsson ] 
20:12 [@EvilPacket      ] [@Sembiance      ] [ chilts          ] [ Internet13      ] [ optixx          ] [ thurmda       ] 
20:12 [@ewag_           ] [@sevcsik        ] [ chnops          ] [ irclogger_com   ] [ orlandovftw     ] [ tilgovi       ] 
20:12 [@fatjonny        ] [@shama          ] [ ChoiZ           ] [ ircretary       ] [ orospakr        ] [ tim_smart|away] 
20:12 [@fearphage       ] [@shanlar        ] [ chrisbuchholz   ] [ isaacs          ] [ ossareh         ] [ timeturner    ] 
20:12 [@fevermind       ] [@Shrink         ] [ chrisinajar     ] [ ivac            ] [ paulbaumgart    ] [ timkeller     ] 
20:12 [@firedfox        ] [@simpan         ] [ CIA-93          ] [ ivan\           ] [ PaulCapestany   ] [ tk            ] 
20:12 [@framlin         ] [@SirFunk        ] [ cianclarke      ] [ ivan`           ] [ paulwe          ] [ tlorenz       ] 
20:12 [@franciscallo    ] [@SkareCrow      ] [ clone1018       ] [ jackyyll        ] [ pct             ] [ tmpvar        ] 
20:12 [@francisl        ] [@slickplaid     ] [ codelahoma      ] [ jaha            ] [ perezd          ] [ tnorris       ] 
20:12 [@freeformz       ] [@smathy         ] [ codepal         ] [ jakehow         ] [ petschm         ] [ Tobbe         ] 
20:12 [@Frippe          ] [@SnakePlissken  ] [ codycraven      ] [ jalcine         ] [ pfox___         ] [ tomaw         ] 
20:12 [@frogstarr78     ] [@spectre256     ] [ coffeecup       ] [ jamiep          ] [ philips_        ] [ tomb_         ] 
20:12 [@galaxywatcher   ] [@springmeyer    ] [ ColKurtz        ] [ janmower        ] [ PhilK           ] [ tomilaine     ] 
20:12 [@garann          ] [@stalled        ] [ crates          ] [ jareiko         ] [ piezo           ] [ TomRone       ] 
20:12 [@Garrick         ] [@stisti         ] [ criswell        ] [ jayk            ] [ pifantastic     ] [ tonylukasavage] 
20:12 [@gaYak           ] [@Stoob          ] [ crodas          ] [ jayne           ] [ pig             ] [ toothrot      ] 
20:12 [@gerard0         ] [@strax          ] [ cronopio        ] [ jbueza          ] [ piklu           ] [ topaxi        ] 
20:12 [@githogori       ] [@strmpnk        ] [ Crowb4r         ] [ jcap            ] [ Pilate          ] [ totallymike   ] 
20:12 [@goraxe          ] [@swaj           ] [ Cymor           ] [ jcrew           ] [ Piotras         ] [ towski        ] 
20:12 [@gregmore_       ] [@tanepiper      ] [ cyphase         ] [ JCS0            ] [ plato           ] [ toxico        ] 
20:12 [@Gregor          ] [@tankpilo`      ] [ Daegalus        ] [ jdeibele        ] [ polyrhythmic    ] [ traph1        ] 
20:12 [@Gruni           ] [@tchopper       ] [ daffl           ] [ jeedey          ] [ possibilities   ] [ trodrigues    ] 
20:12 [@Guest34911      ] [@tco            ] [ daleharvey      ] [ jefferai        ] [ posteverything  ] [ tuhoojabotti  ] 
20:12 [@gwoo            ] [@teadict        ] [ dan64           ] [ jemparing       ] [ ppcano          ] [ txxt          ] 
20:12 [@hamms           ] [@tec27          ] [ Danielss89      ] [ jergason        ] [ pppaul          ] [ Typo          ] 
20:12 [@hellopat        ] [@Ted            ] [ darkc0met       ] [ jesusabdullah   ] [ pquerna         ] [ ugisozols     ] 
20:12 [@herzogharker    ] [@thealphanerd   ] [ davidsklar      ] [ jibay           ] [ Proditor        ] [ unchi         ] 
20:12 [@hilkolantinga   ] [@theCole        ] [ davv3           ] [ jimrhosk1ns     ] [ Progster        ] [ upb           ] 
20:12 [@hillerstorm_phon] [@thedaywillcome ] [ defts           ] [ jimt            ] [ przemoc         ] [ Validatorian  ] 
20:12 [@hipsterslapfight] [@thedjinn_      ] [ dekz            ] [ JJMalina        ] [ psino           ] [ vDubG         ] 
20:12 [@Hodapp          ] [@TheNumb        ] [ deltab_         ] [ jkarsrud        ] [ ptrlv           ] [ Vennril2      ] 
20:12 [@Hosh            ] [@therealkoopa   ] [ denom           ] [ jlank           ] [ pvilchez        ] [ vervain       ] 
20:12 [@iaincarsberg    ] [@tim            ] [ denysonique     ] [ jmmills         ] [ pyykkis_        ] [ visnup_       ] 
20:12 [@ianl`           ] [@timoxley       ] [ deol            ] [ jn              ] [ qbit            ] [ vkandy        ] 
20:12 [@iksik           ] [@TimTim`        ] [ deoxxa          ] [ johnmdonahue    ] [ Qbix1           ] [ vkareh        ] 
20:12 [@imarcusthis     ] [@TomWij         ] [ Destos          ] [ jolo2           ] [ r126f           ] [ voodootikigod ] 
20:12 [@indutny         ] [@TooTallNate    ] [ devdazed        ] [ jonaslund       ] [ radiodar1o      ] [ wadey         ] 
20:12 [@intripoon_      ] [@trb            ] [ devnill_        ] [ jonatas_oliveira] [ radiofree       ] [ wang          ] 
20:12 [@JackNorris      ] [@trepan_        ] [ diverdude       ] [ Jonathan_Eyre   ] [ ralphholzmann   ] [ wangbus       ] 
20:12 [@jacobolus       ] [@tvw            ] [ djao            ] [ joshfinnie      ] [ Rantanen        ] [ wankdanker    ] 
20:12 [@jacobrask       ] [@unmatrix       ] [ dkords          ] [ joukokar        ] [ raporteurer     ] [ wao           ] 
20:12 [@jaequery        ] [@upgrayeddd     ] [ dleary          ] [ jpe             ] [ raydeo          ] [ wavded        ] 
20:12 [@Jakey           ] [@VesQ           ] [ dmilith         ] [ jsoverson       ] [ Raynos          ] [ wenbing       ] 
20:12 [@JasonSmith      ] [@veturi         ] [ doffm           ] [ junt            ] [ rcaskey         ] [ wendall911    ] 
20:12 [@jaysoo          ] [@vinc_          ] [ doki_pen        ] [ jvolkman        ] [ rchern          ] [ willwhite     ] 
20:12 [@jbpros          ] [@VinSpee        ] [ doktrin         ] [ Jygga           ] [ rcrowley        ] [ wink__        ] 
20:12 [@jgornick        ] [@wdent          ] [ dommy_          ] [ jzacsh          ] [ rcs             ] [ Wizek         ] 
20:12 [@jimbot          ] [@wereHamster    ] [ Drager          ] [ kaen            ] [ recidive        ] [ wycats        ] 
20:12 [@jmoney          ] [@whitman        ] [ dragon          ] [ kanzure         ] [ redir           ] [ xaq           ] 
20:12 [@JmZ_            ] [@widox          ] [ drey            ] [ Karmaon         ] [ regality        ] [ xat-          ] 
20:12 [@joeytwiddle     ] [@Will|          ] [ DrPizza         ] [ kaspertidemann  ] [ reid            ] [ xerox         ] 
20:12 [@jondot          ] [@wizonesolutions] [ Druide__        ] [ kborchers       ] [ rektide         ] [ xSmurf        ] 
20:12 [@joschi          ] [@wookiehangover ] [ dscape          ] [ keeto           ] [ relix           ] [ ybit          ] 
20:12 [@joshontheweb    ] [@xocel          ] [ duckspeaker     ] [ kenperkins      ] [ rendar          ] [ yenz_         ] 
20:12 [@joshthecoder    ] [@ybit2          ] [ duko            ] [ keyvan          ] [ retornam        ] [ yorick        ] 
20:12 [@jspiros         ] [@Ytserman       ] [ duncanbeevers   ] [ khrome          ] [ rgmarcha_       ] [ your_name     ] 
20:12 [@jxie            ] [@Yuffster_fun   ] [ ebarch          ] [ KiNgMaR         ] [ rhutchison      ] [ YoY           ] 
20:12 [@keks__          ] [@zemm           ] [ ebright         ] [ kmiyashiro      ] [ RichardBronosky_] [ yuwang        ] 
20:12 [@kennethd        ] [@zonetti        ] [ ed2093          ] [ konobi          ] [ richardshaw     ] [ zackattack    ] 
20:12 [@Kester          ] [@zorzar         ] [ eddyb           ] [ kriskowal       ] [ riven           ] [ zackiv31      ] 
20:12 [@Killswitch      ] [ [[zz]]         ] [ edwardly        ] [ ktrask          ] [ RLa             ] [ zaheera_      ] 
20:12 [@kmax_           ] [ \13k           ] [ egadcable       ] [ ku              ] [ roland|otp      ] [ Zamarok       ] 
20:12 [@knkumar         ] [ \ask           ] [ EhevuTov        ] [ kuja            ] [ rook2paw1       ] [ zaphod1984    ] 
20:12 [@kraft           ] [ __underscore   ] [ elijah-mbp      ] [ kuryaki         ] [ rphillips       ] [ Zauberfisch   ] 
20:12 [@kranius         ] [ _br_           ] [ elliottcable    ] [ laner           ] [ rtgibbons       ] [ zedas         ] 
20:12 [@krishna         ] [ _pid           ] [ else-           ] [ Lartsa          ] [ rudolfrck       ] [ zenazn        ] 
20:12 [@kuhrt           ] [ _Renegade      ] [ elsig           ] [ Lee-            ] [ RushPL          ] [ zentooo       ] 
20:12 [@L_star          ] [ _root_         ] [ emilepetrone    ] [ Leeol2          ] [ russell_h       ] [ zivester      ] 
20:12 [@lazyshot        ] [ _sri           ] [ emilsedgh       ] [ leev            ] [ rwaldron        ] [ zk            ] 
20:12 [@leptonix        ] [ _th_n          ] [ enmand          ] [ LeftWing        ] [ ryanfitz        ] [ Zolrath       ] 
20:12 [@lhb             ] [ _Tristan       ] [ enos_feedler    ] [ leonardo        ] [ ryanseddon      ] [ zomg          ] 
20:12 [@lmjabreu        ] [ aalex-sat      ] [ Epelii          ] [ Leonidas        ] [ s0urce          ] [ zoned         ] 
20:12 [@magn3ts         ] [ AaronMT        ] [ erichynds       ] [ ljharb          ] [ s5fs            ] [ zz_lazyshot   ] 
20:12 -!- Irssi: #node.js: Total of 858 nicks [273 ops, 0 halfops, 0 voices, 585 normal]
20:12 -!- Channel #Node.js created Sat Jan 30 07:48:24 2010
20:12 -!- Home page for #node.js: http://nodejs.org/
20:12 -!- Irssi: Join to #node.js was synced in 2 secs
20:12 <@slickplaid> something tells me someone's gonna be bad with their new found power
20:12 -!- indutny was kicked from #Node.js by isaacs [indutny]
20:12 < benatkin> slickplaid: well, it's still the right place to ask that question :p
20:12 <@slickplaid> can't we just kick ryah?
20:12 <@slickplaid> to stop it?
20:12 < _Tristan> me too plz
20:12 < _Tristan> pleeease
20:12 <@TooTallNate> lulz
20:12 <@slickplaid> i'd try it, but i feel bad things would happen to me
20:12 < _Tristan> I wanna be a OP
20:12 <@slickplaid> win?
20:13 < _Tristan> I feel so lonely
20:13 <@FIQ> ?
20:13 <@slickplaid> did that fix it?
20:13 <@slickplaid> lol
20:13 < qbit> ohgod is it over? 
20:13 -!- ryah was kicked from #Node.js by _Tristan [ryah]
20:13 < gkatsev> it's over
20:13 < gkatsev> for now...
20:13 <@ryah> bastards
20:13 <@slickplaid> lol
20:13 <@ryah> :)
20:14 <@FIQ> ok
20:14 <@isaacs> see, i feel wrong taking advantage of op-ness in this case, since i have it all the time
20:14 <@FIQ> so why do I have op
20:14 <@AviMarcus> so.... any good modules for creating a REST API? I've seen a few, but would prefer some recommendations
20:14 -!- __doc__ was kicked from #Node.js by SkareCrow|W [__doc__]
20:14 -!- _dsi was kicked from #Node.js by SkareCrow|W [_dsi]
20:14 -!- _janne was kicked from #Node.js by SkareCrow|W [_janne]
20:14 -!- _lleo was kicked from #Node.js by SkareCrow|W [_lleo]
20:14 <@_Tristan> bye OPness
20:14 -!- _mdp was kicked from #Node.js by SkareCrow|W [_mdp]
20:14 -!- SkareCrow|W was kicked from #Node.js by isaacs [SkareCrow|W]
20:14 <@TooTallNate> lol, good catch isaacs 
20:14 <@slickplaid> nice
20:14 <@isaacs> :)
20:14 <@slickplaid> well we know who is gonna abuse it
20:14 <@isaacs> this is a fun game
20:14 <@AviMarcus> and he banned people.
20:15 <@AviMarcus> Oh I have ops.
20:15 <@slickplaid> ryah what are you doing?
20:15 <@wendall911> wtf?
20:15 < gkatsev> it's to weed out the non-believers
20:15 < riven> hahaha
20:15 <@mmalecki> I lol'd
20:15 < qbit> #node.js is going to become a op circlejerk! 
20:15 <@wendall911> ok, what op had their acct compromised?
20:15 <@rama__> benatkin: Thank  you !! ... will read more about it. 
20:15 <@slickplaid> did ryah's client get haxed? or is he just having fun?
20:16 <@isaacs> wendall911: no op accounts were compromised.  ryah's mind has been compromised.
20:16 <@isaacs> wendall911: by a strange sense of humor.
20:16 <@wendall911> haha
20:16 < gkatsev> for the second time
20:16 <@slickplaid> gotcha
20:16 -!- ryah was kicked from #Node.js by _Tristan [pancakes]
20:16 <@isaacs> gkatsev: this was at least the third time
20:16 <@AviMarcus> this is.. weird.
20:16 -!- _Tristan was kicked from #Node.js by isaacs [_Tristan]
20:16 < riven> social experiment?
20:16 < gkatsev> isaacs: was it? I must've missed the second time.
20:16 < _Tristan> sad now.
20:16 <@isaacs> :P
20:16 <@TooTallNate> that's what happens
20:16 <@AviMarcus> REST module suggestions, anyone?
20:17 < _Tristan> well, I guess if everybody has OP, there's no point in anybody having OP
20:17 -!- slurp was kicked from #Node.js by _root_ [You are banned]
20:17 < _Tristan> #node.js has become the wild west
20:17 <@isaacs> AviMarcus: I like restify
20:17 -!- _root_ was kicked from #Node.js by isaacs [_root_]
20:17 <@wendall911> someone could kickban ryah
20:17 < Bonuspunkt> \o/ OP PARTY \o/
20:17 < _Tristan> not sure if it would help
20:17 < Bonuspunkt> has been way to long since last time :)
20:18 <@EvilPacket> SubStack: thanks, I'll give that a go.
20:19 <@slickplaid> don't op skarecrow
20:19 <@slickplaid> he's being a dick
20:19 < _Tristan> this is a long process
20:19 <@Jonathan_Eyre> um, what in the world would I do with Op status? I've no wish to ban anyone.
20:19 <@jesusabdullah> gurrrl
20:19 <@jesusabdullah> yo' crayzee
20:19 <@rektide> power _overwhelming_
20:20 <@slickplaid> sc ref
20:20 <@rektide> truly node users are gods
20:20 <@Bonuspunkt> you could change the topic
20:20 <@ryah> must op all peopele
20:20 <@mmalecki> "hey girl, did you know that I have op on #node.js?"
20:20 < SkareCrow|W> sdf
20:20 <@ryah> AviMarcus: restify
20:20 <@ryah> only 188 to go
20:20 <@chjj> rektide: moar starcraft cheat codes
20:20 <@Jonathan_Eyre> My life for Eyre.
20:20 <@ryah> nooo
20:20 -!- SkareCrow|W was kicked from #Node.js by ryah [SkareCrow|W]
20:20 <@qbit> oh god it's done! 
20:20 <@ryah> Jonathan_Eyre: set the title?
20:20 <@ryah> topic
20:20 <@slickplaid> celebrating something?
20:20 <@hillerstorm> :P
20:20 <@rektide> don't change the topic, it's what gives us our powers
20:20 <@gkatsev> slickplaid: yes, july 19th.
20:20 <@AviMarcus> you can't just mass give-ops?
20:21 <@riven> fuck yeah, voice for me
20:21 <@AviMarcus> ryah, node-perfectapi is not as good or just not something you considered?
20:21 <@slickplaid> AviMarcus: limit on this server is 4 operations per line
20:21 <@slickplaid> or mode changes
20:21 <@Hodapp> are you Riven, like the sequel to Myst?
20:21 <@Jonathan_Eyre> also a sc ref. "My life for Eyre" is what the zealots all say, only they spell it Auir.
20:21 <@AviMarcus> ah
20:21 <@riven> Hodapp: lolno
20:21 < arcatan> huh
20:22 < sirwan> can i have voice pweaese ?
20:22 <+riven> Now I'm SPESHUL
20:22 <@FIQ> lol
20:22 <+sirwan> hmm :(
20:22 -!- ryah was kicked from #Node.js by indutny [ryah]
20:22 <@ryah> :P
20:22 <@sechrist> Is there a way to do the Step-like groupings in async without pushing function references into an array before passing into async.parallel?
20:23 <@indutny> ryah: ;)
20:23 -!- indutny changed the topic of #Node.js to: /kick ryah
20:23 <@AviMarcus> wow restify seems to make the routing very easy
20:23 < _Tristan> can I be an OP now?
20:23 <@ryah> how do i set irssi to auto rejoin?
20:23 <@wendall911> DEVOICE *
20:23 -!- _Tristan changed the topic of #Node.js to: This room is for discussion of pancakes. For NodeJS, go to #php
20:23 <+riven> lol!
20:23 <@_Tristan> this room is now pancakes
20:23 <@slickplaid> mmm pancakes
20:23 <@FIQ> ryah: please don't rejoin-on-kick..
20:23 -!- Bonuspunkt changed the topic of #Node.js to: ffs dont /kick ryah, show that you can handle the power properly -.-'
20:23 <@FIQ> that's evil
20:23 <@AviMarcus> oh cool restify references semver which I just learned about today
20:23 -!- ryah changed the topic of #Node.js to: dont kick me
20:24 -!- _Tristan changed the topic of #Node.js to: This room is for discussion of pancakes. For NodeJS, go to #php
20:24 -!- mmalecki changed the topic of #Node.js to: don't kick him
20:24 <@zomg> It seems the quality of people on this channel has decreased
20:24 < _Tristan> bawww
20:24 <@sechrist> I've seen situations where vote-majority type op actually works okay
20:24 <@zoned> changed the topic to: quit changing the fucking topic
20:24 <@zomg> The last time ryah opped everyone, nobody started abusing
20:24 <@zomg> ;)
20:24 -!- indutny changed the topic of #Node.js to: kick ryah
20:24 <@sechrist> it typically isn't on IRC though ;)
20:24 < _Tristan> I am so sad.
20:24 <@qbit> and the circlejer begins
20:24 <@ryah> :)
20:24 < _Tristan> really, I liked the pancakes thing
20:24 -!- isaacs changed the topic of #Node.js to: kick yourself
20:24 < addisonj> ah, irc wars, missed this
20:24 -!- isaacs was kicked from #Node.js by indutny [isaacs]
20:25 -!- Topic for #Node.js: kick ryah
20:25 -!- Topic set by indutny [u1551@gateway/web/irccloud.com/x-xewcesogjttpudhj] [Thu Jul 19 20:24:41 2012]
20:25 [Users #node.js]
20:25 [@[[zz]]          ] [@dmilith         ] [@Industrial      ] [@mattp_         ] [@redir           ] [@TimTim`        ] 
20:25 [@[diecast]       ] [@dnyy            ] [@indutny         ] [@MaxGaudronBNC  ] [@regality        ] [@tk             ] 
20:25 [@\13k            ] [@dob_            ] [@infynyxx        ] [@maxogden       ] [@reid            ] [@tlorenz        ] 
20:25 [@\ask            ] [@doffm           ] [@inimino         ] [@mcluskydodallas] [@rektide         ] [@tnorris        ] 
20:25 [@\mSg            ] [@doki_pen        ] [@innociv         ] [@mcmanusm       ] [@relix           ] [@Tobbe          ] 
20:25 [@^esc            ] [@doktrin         ] [@Internet13      ] [@mde            ] [@remysharp       ] [@tomaw          ] 
20:25 [@^robertj        ] [@dommy_          ] [@intripoon_      ] [@med_           ] [@rendar          ] [@tomb_          ] 
20:25 [@_lleo           ] [@don_jones       ] [@irclogger_com   ] [@medice         ] [@retornam        ] [@tomilaine      ] 
20:25 [@_Renegade       ] [@dpino           ] [@ircretary       ] [@mekwall        ] [@rgmarcha_       ] [@TomRone        ] 
20:25 [@aalex-sat       ] [@Drager          ] [@ivac            ] [@mephux         ] [@rhutchison      ] [@TomWij         ] 
20:25 [@AaronMT         ] [@Draggor         ] [@ivan\           ] [@MerlinDMC      ] [@RichardBronosky_] [@tonylukasavage ] 
20:25 [@aib_233         ] [@dragon          ] [@ivan`           ] [@mertimor-      ] [@richardshaw     ] [@TooTallNate    ] 
20:25 [@Aikar           ] [@Dreamer3        ] [@JackNorris      ] [@meso           ] [@RLa             ] [@toothrot       ] 
20:25 [@akshayms        ] [@drey            ] [@jackyyll        ] [@meso_          ] [@rmill           ] [@topaxi         ] 
20:25 [@alex4nder       ] [@DrPizza         ] [@jacobolus       ] [@metellus       ] [@roger_raymond   ] [@totallymike    ] 
20:25 [@AllStruck       ] [@dscape          ] [@jacobrask       ] [@methoddk       ] [@roland|otp      ] [@towski         ] 
20:25 [@andrewffff      ] [@duckspeaker     ] [@jaequery        ] [@mgc            ] [@Rolken          ] [@toxico         ] 
20:25 [@aromasca_       ] [@duko            ] [@jaha            ] [@miccolis       ] [@rook2paw1       ] [@traph1         ] 
20:25 [@ashb            ] [@duncanbeevers   ] [@jakehow         ] [@mickhansen     ] [@rowanu          ] [@trb            ] 
20:25 [@asherkin        ] [@dwierenga       ] [@Jakey           ] [@mikegerw1tz    ] [@rphillips       ] [@trepan_        ] 
20:25 [@audreyr         ] [@dz0ny           ] [@jalcine         ] [@MikeW          ] [@rtgibbons       ] [@trodrigues     ] 
20:25 [@august1914      ] [@ebarch          ] [@jamiep          ] [@mikey_p        ] [@rudolfrck       ] [@tuhoojabotti   ] 
20:25 [@augustl         ] [@ebright         ] [@janmower        ] [@MitchW         ] [@RushPL          ] [@tvw            ] 
20:25 [@AviMarcus       ] [@ed2093          ] [@jareiko         ] [@mjr84          ] [@russell_h       ] [@txxt           ] 
20:25 [@awhamblin       ] [@eddyb           ] [@JasonSmith      ] [@monokrome      ] [@russfrank       ] [@Typo           ] 
20:25 [@Axsuul          ] [@edr             ] [@jayk            ] [@moonlite       ] [@rvagg           ] [@ugisozols      ] 
20:25 [@azend           ] [@edwardly        ] [@jayne           ] [@Mortchek       ] [@rwaldron        ] [@unchi          ] 
20:25 [@baer            ] [@egadcable       ] [@jaysoo          ] [@motiooon_      ] [@rworth          ] [@unmatrix       ] 
20:25 [@bakadesu        ] [@einaros         ] [@jbpros          ] [@mritz          ] [@ryah            ] [@upb            ] 
20:25 [@Balthek         ] [@eldios          ] [@jbueza          ] [@mrjf           ] [@ryanfitz        ] [@upgrayeddd     ] 
20:25 [@balupton        ] [@elijah-mbp      ] [@jcap            ] [@MrMaksimize    ] [@ryanseddon      ] [@Validatorian   ] 
20:25 [@barneybook      ] [@elliottcable    ] [@jcrew           ] [@mrmoneyc       ] [@s0urce          ] [@vDubG          ] 
20:25 [@baudehlo        ] [@else-           ] [@JCS0            ] [@MrNibbles      ] [@s5fs            ] [@Vennril        ] 
20:25 [@beasty          ] [@elsig           ] [@jdeibele        ] [@MrNko          ] [@saapaz          ] [@vervain        ] 
20:25 [@beawesomeinstead] [@emerleite       ] [@jeedey          ] [@msteinert      ] [@Sadin           ] [@VesQ           ] 
20:25 [@beeviz          ] [@emilepetrone    ] [@jefferai        ] [@mstruk         ] [@sakkaku         ] [@veturi         ] 
20:25 [@ben_alman       ] [@emilsedgh       ] [@jemparing       ] [@munro          ] [@salsamontes     ] [@vinc_          ] 
20:25 [@benatkin        ] [@enmand          ] [@jergason        ] [@mxweas         ] [@salva           ] [@VinSpee        ] 
20:25 [@benhoman        ] [@enos_feedler    ] [@jesusabdullah   ] [@nail__         ] [@Sam4242         ] [@visnup_        ] 
20:25 [@Bennit          ] [@epa_            ] [@jgornick        ] [@naquad         ] [@samcday         ] [@vkandy         ] 
20:25 [@bentruyman      ] [@Epelii          ] [@jibay           ] [@nd__           ] [@samstefan       ] [@vkareh         ] 
20:25 [@benvie          ] [@er1c_           ] [@jimbot          ] [@Neal_          ] [@satyr           ] [@voodootikigod  ] 
20:25 [@Berglund        ] [@erichynds       ] [@jimrhosk1ns     ] [@nebiros        ] [@sawrubh         ] [@wadey          ] 
20:25 [@blakmatrix      ] [@eugeneware      ] [@jimt            ] [@necros         ] [@sawrubh|bot     ] [@wang           ] 
20:25 [@blazes816       ] [@eventualbuddha  ] [@JJMalina        ] [@neersighted    ] [@scott_gonzalez  ] [@wangbus        ] 
20:25 [@blevs           ] [@EvilPacket      ] [@jkarsrud        ] [@neme           ] [@sdboyer         ] [@wankdanker     ] 
20:25 [@Blorb           ] [@EvRide          ] [@jlank           ] [@neumino        ] [@seant23         ] [@wao            ] 
20:25 [@blueadept       ] [@ewag_           ] [@jmmills         ] [@Nexxy          ] [@sechrist        ] [@wavded         ] 
20:25 [@bnoordhuis      ] [@EyePulp         ] [@jmoney          ] [@niallo         ] [@SecretAgent     ] [@wdent          ] 
20:25 [@bodisiw         ] [@Ezku            ] [@JmZ_            ] [@nicholasf      ] [@Sembiance       ] [@wenbing        ] 
20:25 [@bolgovr         ] [@Fabryz          ] [@jn              ] [@nick__         ] [@serapath        ] [@wendall911     ] 
20:25 [@BombStrike      ] [@fairwinds       ] [@joeytwiddle     ] [@niclone        ] [@sevcsik         ] [@wereHamster    ] 
20:25 [@booo            ] [@fangel          ] [@johnmdonahue    ] [@nielsbusch     ] [@Sh4rK           ] [@widox          ] 
20:25 [@booyaa          ] [@fatjonny        ] [@jolo2           ] [@Nies           ] [@shajith         ] [@willwhite      ] 
20:25 [@bosphorus       ] [@faulkner        ] [@jonaslund       ] [@niftylettuce   ] [@shama           ] [@Will|          ] 
20:25 [@bowen199        ] [@fcoury          ] [@jonatas_oliveira] [@niko           ] [@ShaneHudson     ] [@wink__         ] 
20:25 [@bradgignac      ] [@fearphage       ] [@Jonathan_Eyre   ] [@niloy          ] [@shanlar         ] [@Wizek          ] 
20:25 [@brainproxy      ] [@fent            ] [@jondot          ] [@NimeshNeema    ] [@shanse          ] [@wizonesolutions] 
20:25 [@brainss         ] [@fevermind       ] [@joschi          ] [@nivardus       ] [@Shrink          ] [@wookiehangover ] 
20:25 [@briancray       ] [@fforbeck        ] [@joshfinnie      ] [@nlf            ] [@shurain         ] [@wycats         ] 
20:25 [@brianloveswords ] [@filleokus       ] [@joshontheweb    ] [@NodeX          ] [@shykes          ] [@xaq            ] 
20:25 [@bricker88       ] [@FIQ             ] [@joshthecoder    ] [@nodokodo       ] [@simewn          ] [@xat-           ] 
20:25 [@brooss_         ] [@firedfox        ] [@joukokar        ] [@nooga          ] [@simpan          ] [@xerox          ] 
20:25 [@BruNeX          ] [@FireFly         ] [@jpe             ] [@npmbro         ] [@SirFunk         ] [@xocel          ] 
20:25 [@burgalon        ] [@flagg0204       ] [@jsoverson       ] [@nsm            ] [@sj26            ] [@xSmurf         ] 
20:25 [@Bwild           ] [@flexd           ] [@jspiros         ] [@nuba           ] [@SkareCrow       ] [@ybit           ] 
20:25 [@ByteCrunch      ] [@foldedcat       ] [@junt            ] [@obtxo          ] [@skeptic         ] [@ybit2          ] 
20:25 [@c4milo          ] [@forzan          ] [@jvolkman        ] [@octane--       ] [@skunkape        ] [@yenz_          ] 
20:25 [@cainus          ] [@framlin         ] [@jxie            ] [@odyniec        ] [@skunkwerks      ] [@yorick         ] 
20:25 [@CannedCorn      ] [@franciscallo    ] [@Jygga           ] [@ohcibi         ] [@slajax          ] [@your_name      ] 
20:25 [@cce             ] [@freeformz       ] [@jzacsh          ] [@olegp          ] [@Slashbunny      ] [@YoY            ] 
20:25 [@cconstantine_   ] [@frewsxcv        ] [@kaen            ] [@omni5cience    ] [@SlexAxton       ] [@Ytserman       ] 
20:25 [@chadi           ] [@Frippe          ] [@kanzure         ] [@onre           ] [@slickplaid      ] [@Yuffster_fun   ] 
20:25 [@chadskidmore    ] [@frogstarr78     ] [@Karmaon         ] [@ootje          ] [@slloyd          ] [@yuwang         ] 
20:25 [@chapel          ] [@funktronic      ] [@kaspertidemann  ] [@optixx         ] [@SnakePlissken   ] [@zackattack     ] 
20:25 [@charlieschwa    ] [@Fuu             ] [@kborchers       ] [@orlandovftw    ] [@sorensen        ] [@zackiv31       ] 
20:25 [@Charuru         ] [@gabe__          ] [@keeto           ] [@orospakr       ] [@spectre256      ] [@zaheera_       ] 
20:25 [@Cheery          ] [@gabriel         ] [@keks__          ] [@ossareh        ] [@springmeyer     ] [@Zamarok        ] 
20:25 [@Chepra          ] [@galaxywatcher   ] [@kennethd        ] [@othiym23       ] [@sriley          ] [@zaphod1984     ] 
20:25 [@chilts          ] [@garann          ] [@kenperkins      ] [@ovaillancourt  ] [@st_luke         ] [@Zauberfisch    ] 
20:25 [@chjj            ] [@Garo_           ] [@Kester          ] [@owen1          ] [@stagas          ] [@zedas          ] 
20:25 [@chnops          ] [@garrensmith     ] [@keyvan          ] [@owenb          ] [@stalled         ] [@zemm           ] 
20:25 [@ChoiZ           ] [@Garrick         ] [@khrome          ] [@Owner          ] [@stbuehler       ] [@zenazn         ] 
20:25 [@chrisbuchholz   ] [@gartenstuhl     ] [@Killswitch      ] [@pandark_       ] [@stef            ] [@zentooo        ] 
20:25 [@chrisdickinson  ] [@gaYak           ] [@KiNgMaR         ] [@patcito        ] [@stephank        ] [@zivester       ] 
20:25 [@chrisinajar     ] [@gdbz            ] [@kmax_           ] [@patspam        ] [@stephenlb       ] [@zk             ] 
20:25 [@CIA-93          ] [@gerard0         ] [@kmiyashiro      ] [@paulbaumgart   ] [@stisti          ] [@Zolrath        ] 
20:25 [@cianclarke      ] [@gf3             ] [@knkumar         ] [@PaulCapestany  ] [@Stoob           ] [@zomg           ] 
20:25 [@cjackson        ] [@ggreenha        ] [@konobi          ] [@paulwe         ] [@strax           ] [@zoned          ] 
20:25 [@clone1018       ] [@gildean         ] [@kraft           ] [@pct            ] [@stride          ] [@zonetti        ] 
20:25 [@codelahoma      ] [@githogori       ] [@kranius         ] [@pekim_         ] [@strmpnk         ] [@zorzar         ] 
20:25 [@codepal         ] [@gkatsev         ] [@krishna         ] [@perezd         ] [@stutter_        ] [@zz_lazyshot    ] 
20:25 [@Cody            ] [@gmci            ] [@kriskowal       ] [@petschm        ] [@stylus          ] [+riven          ] 
20:25 [@codycraven      ] [@googol          ] [@ktrask          ] [@pfox___        ] [@SubStack        ] [+sirwan         ] 
20:25 [@coffeecup       ] [@goraxe          ] [@ku              ] [@philips_       ] [@substans        ] [ __underscore   ] 
20:25 [@ColKurtz        ] [@gorillatron     ] [@kuhrt           ] [@PhilK          ] [@sugyan          ] [ _br_           ] 
20:25 [@Connorhd        ] [@Gottox          ] [@kuja            ] [@phpnode        ] [@sumpygump       ] [ _pid           ] 
20:25 [@context         ] [@grallan         ] [@kuryaki         ] [@pickelsss      ] [@superjoe        ] [ _root_         ] 
20:25 [@cpetzold_       ] [@gregmore_       ] [@L_star          ] [@piezo          ] [@SuperShabam     ] [ _sorensen      ] 
20:25 [@cpg             ] [@Gregor          ] [@laner           ] [@pig            ] [@sveisvei        ] [ _sri           ] 
20:25 [@Cr8             ] [@Gruni           ] [@Lartsa          ] [@piklu          ] [@SvenDowideit    ] [ _th_n          ] 
20:25 [@crates          ] [@gshipley        ] [@lazyshot        ] [@Pilate         ] [@svnlto          ] [ _Tristan       ] 
20:25 [@creationix      ] [@Guest32715      ] [@Lee-            ] [@Piotras        ] [@Swaagie         ] [ AAA_awright    ] 
20:25 [@criswell        ] [@Guest34911      ] [@Leeol2          ] [@plato          ] [@swaj            ] [ adambrault     ] 
20:25 [@crodas          ] [@Guest85214      ] [@leev            ] [@pokoli         ] [@Swizec          ] [ addisonj       ] 
20:25 [@cronopio        ] [@guybrush        ] [@LeftWing        ] [@polyrhythmic   ] [@taaz            ] [ ag4ve          ] 
20:25 [@Crowb4r         ] [@gwillen         ] [@leonardo        ] [@possibilities  ] [@tahu            ] [ agnat          ] 
20:25 [@CrypticSwarm    ] [@gwoo            ] [@Leonidas        ] [@posteverything ] [@tanepiper       ] [ ajpiano        ] 
20:25 [@Cymor           ] [@hakunin         ] [@leptonix        ] [@postwait       ] [@tankpilo`       ] [ albertosh      ] 
20:25 [@cyphase         ] [@halfhalo        ] [@lhb             ] [@ppcano         ] [@taquter         ] [ AlbireoX       ] 
20:25 [@Daegalus        ] [@hammon          ] [@ljharb          ] [@pppaul         ] [@tbranyen        ] [ AlbireoX__     ] 
20:25 [@daffl           ] [@hamms           ] [@lmatteis        ] [@pquerna        ] [@tchopper        ] [ alek_b         ] 
20:25 [@daleharvey      ] [@happosade       ] [@lmjabreu        ] [@prasm_         ] [@tco             ] [ alek_br        ] 
20:25 [@dan64           ] [@hatch           ] [@loc__           ] [@Proditor       ] [@te-brian        ] [ alexgordon     ] 
20:25 [@Danielss89      ] [@Hebo_           ] [@loffe           ] [@Progster       ] [@teadict         ] [ aliem          ] 
20:25 [@darkc0met       ] [@hellopat        ] [@lohkey          ] [@przemoc        ] [@tec27           ] [ alindeman      ] 
20:25 [@Daroth          ] [@herzogharker    ] [@Lorentz         ] [@psino          ] [@Ted             ] [ alta           ] 
20:25 [@davidjdagino    ] [@hide_           ] [@lpin            ] [@ptrlv          ] [@TehShrike       ] [ andrerod       ] 
20:25 [@davidsklar      ] [@hilkolantinga   ] [@lrvick          ] [@purr           ] [@teixeira_       ] [ apa-_          ] 
20:25 [@davv3           ] [@hillct          ] [@lukegb          ] [@pvilchez       ] [@tekky           ] [ apejens        ] 
20:25 [@dawolf          ] [@hillerstorm     ] [@lxnch           ] [@pyykkis_       ] [@tellnes         ] [ appr           ] 
20:25 [@dazoe           ] [@hillerstorm_phon] [@lyaunzbe        ] [@QaDeS          ] [@tg              ] [ apraxas        ] 
20:25 [@dec             ] [@hipertracker    ] [@m0              ] [@Qbix1          ] [@tgriesser       ] [ arcatan        ] 
20:25 [@deedubs         ] [@hipsterslapfight] [@magn3ts         ] [@quinnirill     ] [@thanpolas       ] [ arlolra        ] 
20:25 [@defts           ] [@hlindset        ] [@mainerror       ] [@r04r_          ] [@thealphanerd    ] [ aroman         ] 
20:25 [@dekz            ] [@Hodapp          ] [@malcolmva       ] [@r0tha          ] [@theCole         ] [ blakmatrix_    ] 
20:25 [@deltab_         ] [@Hosh            ] [@maletor         ] [@r126f          ] [@thedaywillcome  ] [ Bonuspunkt     ] 
20:25 [@denom           ] [@iaincarsberg    ] [@mandric         ] [@r1ngzer0       ] [@thedjinn_       ] [ cjm            ] 
20:25 [@denysonique     ] [@iangreenleaf    ] [@mape            ] [@radiodar1o     ] [@TheFuzzball     ] [ dominictarr    ] 
20:25 [@deol            ] [@ianl`           ] [@marienz         ] [@radiofree      ] [@thejefflarson   ] [ drjgt          ] 
20:25 [@deoxxa          ] [@icenix          ] [@marioluk        ] [@radmiraal      ] [@TheMoonMaster   ] [ huangjs        ] 
20:25 [@Derander_       ] [@idefine1        ] [@mAritz          ] [@ralphholzmann  ] [@TheNumb         ] [ isaacs         ] 
20:25 [@dested          ] [@idiomatique     ] [@marlun_         ] [@rama__         ] [@therealkoopa    ] [ mirzu          ] 
20:25 [@Destos          ] [@idoru           ] [@martialcoder    ] [@Rantanen       ] [@thisandagain    ] [ mmalecki       ] 
20:25 [@devdazed        ] [@iksik           ] [@MartinCleaver   ] [@raporteurer    ] [@thorsteinsson   ] [ negrete        ] 
20:25 [@devnill_        ] [@illourr         ] [@Martz           ] [@rauchg         ] [@thurmda         ] [ qbit           ] 
20:25 [@dgathright      ] [@im0b            ] [@maru_cc__       ] [@raydeo         ] [@tilgovi         ] [ rcrowley       ] 
20:25 [@disnet          ] [@imarcusthis     ] [@masch           ] [@Raynos         ] [@tim             ] [ Sjare          ] 
20:25 [@diverdude       ] [@ImBcmDth        ] [@matjas          ] [@rcaskey        ] [@tim_smart|away  ] [ SkareCrow|W    ] 
20:25 [@djao            ] [@imjsilva        ] [@matt_c          ] [@rchern         ] [@timeturner      ] [ slurp          ] 
20:25 [@dkords          ] [@inarru_         ] [@mattgifford     ] [@rcs            ] [@timkeller       ] [ tmpvar         ] 
20:25 [@dleary          ] [@indexzero       ] [@mattikus        ] [@recidive       ] [@timoxley        ] 
20:25 -!- Irssi: #node.js: Total of 851 nicks [802 ops, 0 halfops, 2 voices, 47 normal]
20:25 -!- Channel #Node.js created Sat Jan 30 07:48:24 2010
20:25 -!- Home page for #node.js: http://nodejs.org/
20:25 -!- Irssi: Join to #node.js was synced in 1 secs
20:25 <@hillerstorm> :))
20:25 < mmalecki> indutny: you're mean!
20:25 < arcatan> this is a self-service channel, just kick yourself
20:25 < Lorentz> Grow up guys
20:25 <@chjj> ryah: http://irssi.org/documentation/faq - "Q: How do I autorejoin channels after being kicked?" "A: That's evil and you shouldn't do it."
20:25 <@FIQ> with 800+ ops in a big channel, there's a big chance that at least one will abuse the powers
20:25 < qbit> ha
20:25 < qbit> it's async if we kick ourselves! 
20:25 <@zomg> FIQ: last time it didn't happen so I guess we have more morons here now ;>
20:25 <@FIQ> chjj: as i said then :)
20:25 <@zomg> well, last time I saw it anyway.
20:25 <@chjj> FIQ: i know, but i gave you a source!
20:26 <@FIQ> it encourages funkicking, which makes kicks essentially worthless
20:26 <@Hodapp> Just rest assured that this channel will probably never be as full of circle-jerking assholes as ##c, ##c++, or ##java.
20:26 <@chjj> FIQ: this is the academic world, son
20:26 <@FIQ> chjj: true :)
20:26 <@gkatsev> zomg: guess the node community is starting to be more like everyone else?
20:26 -!- indutny changed the topic of #Node.js to: soviet union is watching you
20:26 < addisonj> I don't even wanted to be tempted by the power op, I turn it down
20:26 -!- isaacs changed the topic of #Node.js to: THIS IS NODE WE CRAZY
20:26 <@zomg> gkatsev: ye, when did this channel get to 800 users anyway? =)
20:26 < Bonuspunkt> if everyone kicks each other will this cause a netsplit?
20:26 -!- indutny changed the topic of #Node.js to: THIS IS NOTE WE CRAZY
20:26 <@diverdude> what is the best way to make private chatrooms using socket.io? by using rooms?
20:26 <@upb> wtf is this shit
20:26 <@gkatsev> zomg: it's even more than ##javascript 
20:26 <@sechrist> in soviet node.js, garbage collector collect you!
20:26 <@Hodapp> 9_9
20:27 <@gkatsev> zomg: almost as many as in #jquery 
20:27 <@FIQ> Bonuspunkt: If people kick others at the same time, a desynch might appear
20:27 -!- indutny changed the topic of #Node.js to: soviet.js
20:27 <@FIQ> but not a netsplit
20:27 <@zoned> is anyone talking about node, or just being children
20:27 <@FIQ> That being said, it's very hard to accomplish these days
20:27  * FIQ tried really hard on quakenet once, and succeed in like the 300th try
20:27 -!- #Node.js You're not a channel operator
20:27 <@FIQ> and then I even had macros to do it the same time..
20:27 <@AviMarcus> so do people create a public API for their service with restify and then use something like angularjs to create a default GUI using the exact same API?
20:27  * sechrist opened his idling screen irssi session to ask a question and found craziness going on
20:27 < addisonj> diverdude: there are lots of pub/sub implementations with socket.io
20:27 < addisonj> use one
20:28 <@wendall911> clear doesn't work
20:28 < negrete> I have a function to get the PID listening on certain port: function x(port, cb) { exec('lsof -i tcp:' + port + ' -t', function(err,stdout,stderr) { ... }. As you can see, the port is passed to the function (originally a Number() and then converted toString()). Anyway, child_process.exec does not work, it throws a 'Command failed:' (with no explanation) but if I declare 'port' inside the function itself it works... any ideas???
20:28 <@diverdude> addisonj: which one?
20:28 <@FIQ> oh, deop time now
20:28 <@chjj> nooooooooo
20:28 < addisonj> diverdude: idk any more, find the one with the most followers on github
20:29 <@ryah> whatever :P
20:29 <@ryah> i feel people should have fun on irc.
20:29 <@isaacs> ryah ++
20:29 <@Hodapp> what is this place >_<
20:29 < blakmatrix_> ryah: you're fun
20:29 <@isaacs> node is a blend of Serious Business for The Business, and hilarity.
20:29 <@AviMarcus> restify looks awesome now that I've finally skimmed through most of the docs, thanks.
20:30 < FIQ> ryah: this reminds me a bit of when quakenet got their achievement system... one achievement was being an op in a channel with >500 people
20:30 <@ryah> AviMarcus: restify is awesome. written by a very good programmer.
20:30 <@isaacs> This sums it up nicely: https://twitter.com/substack/status/225771277716172801
20:30 <@mrjf> found my answer to 404s from headers that are too big after multiple request calls: http://yabfog.com/blog/2012/04/13/a-gotcha-using-node-js-request-in-a-daemon
20:30 < _Tristan> op plz
20:31 -!- _Tristan changed the topic of #Node.js to: pancake.js
20:31 <@slickplaid> gotta love fun pancakes
20:31 <@zoned> morons
20:31 <@_Tristan> he's LEAVING
20:31 <@AviMarcus> ooh it even has some sort of audit logging built in. sweet.
20:31 <@ryah> can someone write me a irssi script that will op someone when they say "op plz" ?
20:31 <@sechrist> does restify still support arrays of middleware?
20:31 <@_Tristan> ryah: I would, but I only write brainfuck :(
20:32 <@AviMarcus> ryah, it's like a 9 line node.js bot using an npm for irc bots
20:32 <@mape> ryah: easier to just write a bot in node to do it? :)
20:32 <@ryah> are irssi config files not brainfuck?
20:32 <@diverdude> addisonj: like this? https://github.com/shripadk/Socket.IO-PubSub
20:32 <@ryah> and. serious. why has someone not written an irssi clone in node.js ?
20:32 <@ryah> i mean what the fuck.
20:32 <@hillerstorm> your next conference-assignment
20:32 <@slickplaid> i actually started on one
20:33 <@slickplaid> but work got in the way
20:33 <@slickplaid> stupid work
20:33 <@hillerstorm> live code an irssi clone
20:33 <@hillerstorm> go
20:33 < mmalecki> ryah: I kinda started, but it's in my not-half-done-since-i-was-doing-devops
20:33 -!- chilts changed the topic of #Node.js to: AwsSum for Web APIS : https://github.com/appsattic/node-awssum/
20:33 <@ryah> is there a ncurses js module at least?
20:33 <@chilts> anarchy :)
20:33 -!- _Tristan changed the topic of #Node.js to: pancake.js
20:33 < FIQ> (22:31:18) (@ryah) can someone write me a irssi script that will op someone when they say "op plz" ?
20:33 < FIQ> should be pretty easy
20:33 <@slickplaid> lol
20:33 <@mape> ryah: mscdex was working on it
20:33 <@nlf> ryah: an old broken one, iirc
20:34 <@mape> believe he did a irssi thing as well
20:34 <@ryah> he was binding to ncurses though - right?
20:34 <@mape> https://github.com/mscdex/node-ncurses
20:34 < chilts> _Tristan: heh, you win ... to fast
20:34 <@ryah> i want a pure js one
20:34 <@_Tristan> :D
20:34 < mmalecki> ryah: should be pretty easy too
20:34 <@ryah> mmalecki: yes
20:34 -!- isaacs changed the topic of #Node.js to: (@ryah) can someone write me a irssi script that will op someone when they say "op plz" ?
20:35 < mmalecki> ryah: I can take a day off on saturday and write it
20:35 <@ryah> and because of the work bert did, it will work on windows automatically
20:35 <@ryah> just write ansi codes
20:35 <@_Tristan> at least include pancake.js
20:35 <@slickplaid> might need protection from people who want to be jerks and ban everyone
20:35 < negrete> I have a function to get the PID listening on certain port: function x(port, cb) { exec('lsof -i tcp:' + port + ' -t', function(err,stdout,stderr) { ... }. As you can see, the port is passed to the function (originally a Number() and then converted toString()). Anyway, child_process.exec does not work, it throws a 'Command failed:' (with no explanation) but if I declare 'port' inside the function itself it works... any ideas???
20:35 -!- _Tristan changed the topic of #Node.js to: pancake.js (@ryah) can someone write me a irssi script that will op someone when they say "op plz" ?
20:37 <@ryah> negrete: a few things - print out the command that you're going to run - just to make sure it's what you want
20:37 <@ryah> negrete: also - it might be that lsof isn't in the path somehow? try using a absolute path to debug
20:37 <@mrjf> Anyone have any advice on handling issue #2997, the uncatchable parse error? https://github.com/joyent/node/issues/2997
20:38 <@ryah> mrjf: in v0.8?
20:38 <@sechrist> high5 cloud9
20:38 <@AviMarcus> someone try? :P
20:38 < ryah> ops plz
20:38 <@mrjf> ryah: yes
20:38 < mmalecki> op plz
20:38 < ryah> op plz
20:38 <@AviMarcus> ah fudge. sec.
20:39 <@AviMarcus> why does irc take so long to reconnetc?
20:39 < negrete> @ryah: I did that... and as I said, if I declare the port (var = '1234') inside the function instead of passing it, it works... I really don't have a clue about what to do :(
20:39 <@cronopio> omg, Im op at this channel!, wonderfull
20:39 < mmalecki> op plz
20:39 < mmalecki> lulz, did I crash it?
20:39 < ryah> mrjf: post to that issue please
20:39 <@AviMarcus> yep :P
20:39 <@cronopio> set +o mmalecki 
20:39 <@mrjf> will do, thanks
20:39 < mmalecki> cronopio: no, testing a bot
20:39 <@gkatsev> heh
20:40 < ryah> negrete: can you gist your code?
20:40 < mmalecki> op plz
20:40 < mmalecki> WOW!
20:40 <@gkatsev> is the bot an op?
20:40 <@AviMarcus> weird. that I just dunno. It wasn't yet
20:40 < ryah> gkatsev: haha, good point :)
20:40  * AviMarcus needs to learn more.
20:41 < blakmatrix_> op plz
20:41 <@mmalecki> if noone writes it in 3 hours, I'll give it a try
20:41 <@slickplaid> need to allow it to unban people
20:41 <@diverdude> if i want to target a specific target like this: io.sockets.socket(id).emit('a message', msg) what is id? and how do i get id?
20:41 <@slickplaid> so people can get back in after they've been banned by mean people
20:41 <@gkatsev> the oftn-bot/ecambot from ##javascript has some opping stuff. could easily be added
20:42 < Bonuspunkt> are we talking about bot or irssi script?
20:42 <@gkatsev> (it's also written in node)
20:42 < ryah> op plz
20:42 <@ryah> ops plz
20:42 <@ryah> nice 
20:42 <+riven> no op plz
20:42 <+riven> phew
20:42 <@_Tristan> noop plz
20:42 <@_Tristan> IT WORKED
20:42 <@AviMarcus> https://gist.github.com/3146678
20:43 < Bonuspunkt> op plz
20:43 <@AviMarcus> ryah, https://gist.github.com/3146678 do with it as you please :P
20:43 <+riven> ban plz
20:43 <@mmalecki> AviMarcus: bonus points if you deploy it to nodejitsu
20:43 <@ryah> AviMarcus: nice
20:43 <@AviMarcus> it's hardcoded to listen to exactly one thing: if(text=="op plz"){
20:44 <@CIA-93> node: Fedor Indutny master * rb0950cb / (lib/net.js test/simple/test-net-settimeout.js): net: ignore socket.setTimeout(Infinity) (and NaN) - http://git.io/vwqQFQ
20:44 <@mmalecki> I mean, unix philosophy :)
20:44 < chilts> mmalecki: hey, that's a stunning idea for stuff like that :)
20:44 < cmwelsh> what XML parser for Node.js is the best?
20:44 -!- Bonuspunkt was kicked from #Node.js by Bonuspunkt [cant handle that powerz!]
20:44 < chilts> it had never crossed my mind :)
20:44 <@sechrist> what feature(s) does nodejitsu have that make heroku look shitty?
20:45 <@cronopio> sechrist: websockets?
20:45 <@hillerstorm> bingo
20:45 <@sechrist> ;) have them
20:45 <@AviMarcus> is this the kind of thing that's stupid to github in a repo?
20:45 <@mrjf> ryah: updated ticket, thanks https://github.com/joyent/node/issues/2997
20:45 <@AviMarcus> seems so.
20:45 <@sechrist> is nodejitsu handles xhr-polling across multiple nodes without redisstore
20:45 <@mmalecki> sechrist: dunno, that guy liked this: https://twitter.com/distracteddev/status/222819390771572737
20:45 <@sechrist> then that is something I'd consider magic
20:45 <@mmalecki> sechrist: no, I mean, we have actual websockets, without xhr-polling
20:45 <@sechrist> no I mean I have actual TCP
20:46 <@mmalecki> oh, right
20:46 <@sechrist> but nothing for short lived requests across a round robin
20:46 <@gkatsev> it doesn't die every other day?
20:46 <@sechrist> or binding the session to one server behind the lb
20:46 <@mmalecki> sechrist: oh, we do session binding
20:46 <@sechrist> hot damn
20:46 <@sechrist> with vanilla socket server
20:46 <@mmalecki> but no sharing without redisstore, that'd certainly be magic tho
20:47 <@mmalecki> with websockets and http request, we don't support tcp just yet
20:47 <@_Tristan> npm install nodejs-opper && npm start nodejs-oooper
20:47 <@npmbro> _Tristan: Please see http://search.npmjs.org/#/nodejs-opper
20:47 <@_Tristan> there's an extra o there
20:47 <@sechrist> is joyent's peering to AWS decent?
20:47 <@sechrist> that's another thing, heroku lets me pair with any other AWS service/third party that uses it
20:48 <@mmalecki> joyent is superior to everything
20:48 <@mmalecki> I might be biased, but damn, their API is super fast
20:49 <@cronopio> I think SmartOS is superior to any Linux flavor (zfs and dtrace kick ass)
20:49 <@sechrist> I would agree with that
20:49 <@sechrist> I've added ram without restarting a node, that is magic
20:49 <@_Tristan> what?
20:50 <@nlf> ..like.. physically?
20:50 <@jesusabdullah> imo smartos is neat but like, I wouldn't use it for a desktop system
20:50 <@sechrist> you can add ram to a joyent smartmachine on the fly
20:50 <@_Tristan> ...physically?
20:50 <@_Tristan> or, like, with magic and voodoo?
20:50 <@sechrist> not physically, it'll say no if the machine it's on can't do it
20:50 <@_Tristan> I want a server that I can add RAM to while it's running :>
20:50 <@mmalecki> _Tristan: those exist
20:50 <@_Tristan> or, better yet, hot swappable CPUs
20:51 <@mmalecki> but you can't afford them
20:51 <@sechrist> those exist, physically
20:51 <@cronopio> with plan9 from bell labs you can mount remote cpu power, and remote devices
20:52 <@cronopio> but not compile or support any of this node.js world
20:52 <@sechrist> mmalecki: so I can do socket.io on jitsu with all transports, with multiple web nodes, without redisstore (no socket data between users)?
20:52 <@slickplaid> all the coolest things always cost too much money :X
20:52 <@sechrist> my use case isn't user to user
20:52 <@mmalecki> sechrist: yup
20:53 <@isaacs> jesusabdullah: you're trollin
20:53 <@isaacs> jesusabdullah: :P
20:53 <@isaacs> jesusabdullah: "os x is great, but i wouldn't use it for a server"
20:53 <@mmalecki> I mean, I love and hate SmartOS
20:53 <@isaacs> jesusabdullah: it's only rational to use an os that's bad at everything: LInux
20:53 <@_Tristan> I do not condone such haberdashery.
20:53 <@sechrist> that's awesome, but it's not enough to get me out of the AWS lockin
20:53 <@sechrist> or suffer the latencies
20:53 <@mmalecki> sechrist: what else do you need?
20:54 <@sechrist> I mean lol, I use S3, SQS, SNS and have built tools around their apis
20:54 <@sechrist> from the backend side as well as frontend with cloudfront
20:54 < greg___> poop
20:54 <@jesusabdullah> isaacs: I mean, yeah?
20:54 <@sechrist> if like my app layer moved outside of AWS, I'd have to re-architect
20:55 <@jesusabdullah> isaacs: linux is jack of all trades, master at none
20:55 <@cronopio> isaacs: lol, the forever discussion between academy and industry
20:55 < _Tristan> op plz
20:55 -!- _Tristan changed the topic of #Node.js to: haberdashery.js
20:55 <@mmalecki> sechrist: see my pm :)
20:55 <@isaacs> actually, more and more i've started to get annoyed at the lack of smartos tools on my mac
20:55 <@isaacs> it's the little things
20:56 <@isaacs> ptree, especially
20:56 <@isaacs> but also prstat
20:56 <@mmalecki> isaacs: what about dtrace?
20:56 <@isaacs> mmalecki: well, the mac has that
20:56 <@isaacs> mmalecki: and it has dtruss and instruments, which i actually use
20:56 <@mmalecki> isaacs: but you can't compile node with support for it
20:56 < maxogden> haha @ dahl_auto_opper
20:56 <@isaacs> dahl_auto_opper: op plz?
20:56 <@ircretary> op plz?
20:57 < maxogden> op plz
20:57 < ryah> op plz
20:57 < tmpvar> op plz
20:57 <@maxogden> op plz
20:57 <@_Tristan> op plz
20:57 <+riven> OP PLZ
20:57 <@maxogden> THIS IS MADNESS
20:57 < blakmatrix_> op plz
20:57 <@ryah> :D
20:57 <@jesusabdullah> Madness?
20:57 -!- isaacs changed the topic of #Node.js to: type: op plz
20:57 <@cronopio> isaacs: that dtrace of bsd seems to be a very hack solution, I mean not so elegant like solaris solution
20:57 <@jesusabdullah> deop plz
20:57 -!- _Tristan changed the topic of #Node.js to: haberdashery.js | type op plz
20:57 <@maxogden> ryah: this is better than the time you drunkenly gave everyone op
20:57 <@chapel> op plz
20:57 <@chapel> op all plz
20:57 <@cronopio> maxogden: yeahhh much better
20:57 < jesusabdullah> YEAAAH
20:58 < jesusabdullah> there we go
20:58 <@chapel> jesusabdullah: op plz
20:58 < cmwelsh> op plz
20:58 < jesusabdullah> no can do josie
20:58 <@_Tristan> I have a question
20:58 <@_Tristan> will everybody be OP forever?
20:58 <@maxogden> npm search buffalo
20:58 <@npmbro> maxogden: Please see http://eirikb.github.com/nipster/#buffalo
20:58 <@_Tristan> like, when I come in here tomorrow, will it still be chaos?
20:58 <@maxogden> npm install pizza
20:58 <@npmbro> maxogden: Please see http://search.npmjs.org/#/pizza
20:58 < jesusabdullah> no idea :)
20:58 <@ryah> _Tristan: only time will tell
20:58 <@maxogden> THERE IS A PIZZA MODULE
20:58 <@tbranyen> what does /mkick do again?
20:59 <@ryah> heh
20:59 <@indutny> deop \ask
20:59 <@indutny> oops
20:59 <@ryah> i make a noise on 800 computers
20:59 <@ryah> er
20:59 -!- slurp was kicked from #Node.js by _root_ [You are banned]
20:59 <@ryah> it makes a noise on 800 computers
20:59 < jesusabdullah> packages that depend on pizza: hoarders
20:59 <@_Tristan> I HAVE AN AMAZING IDEA
20:59 <@chilts> ok, too much noise now! :)
21:00 <@FIQ> ok
21:00 <@FIQ> so I became op again apparently
21:00 <@riven> omg
21:00 <@chapel> unop plz
21:01 <@chapel> hmm
21:01 <@chapel> unop plz
21:01 <@cmwelsh> op plz
21:01 <@maxogden> just say op plz again
21:01 <@chapel> op plz
21:01 < cmwelsh> voice plz
21:01 <@_Tristan> AWW YEAH
21:01 < chapel> nice
21:01 < cmwelsh> op plz
21:01 -!- dahl_auto_unoppe was kicked from #Node.js by _root_ [Mass deop.  Go sit in a corner.]
21:01 < chapel> :P
21:01 <+riven> lol
21:01 <@_Tristan> I'm so happy
21:01 <@slickplaid> lol
21:01 < cmwelsh> op plz
21:01 <@cronopio> ok tests pass plz
21:01 <@cronopio> beer plz
21:03 <@cronopio> dont be a bad guy, are 832 operators waiting to kicking you
21:03 <@_Tristan> inorite
21:04 <@Hodapp> whoa
21:04 <@_Tristan> I could write a bot that unops everybody... but what's the point? #node.js is now sparta.
21:04 <@_Tristan> there is no denying, the dark lord is back
21:04 <@cronopio> hau hau hau!
21:05 -!- _root_ was kicked from #Node.js by isaacs [_root_]
21:05 <@KiNgMaR> :-)
21:06 <@isaacs> _root_: please stop booting slurp
21:06 <@ryah> "npm install jitsu" installs a lot of shit
21:06 <@maxogden> ryah: but you need colors in your terminal
21:06 <@ryah> timespan?
21:06 <@KiNgMaR> back in the day some auto take over bot would have turned this into a shitfest
21:06 <@ryah> what is that - and why is it needed for jitsu?
21:07 <@mmalecki> ryah: it's most likely for winston, but let me see
21:07 <@addisonj> blah! apparently our ulimit -n just magically decided to reset itself
21:07 <@ryah> what is winston?
21:07 <@addisonj> 1024 file descriptors is not enough for prod node box :\
21:07 <@ryah> i wish there were module pages on nodejs.org so i could see what these modules were
21:07 <@mmalecki> ryah: logging framework
21:07 <@SubStack> isaacs: you could give a talk about the silliest and most subversive art-projecty modules on npm at some point
21:07 <@maxogden> ryah: its like a turing coplete console.log
21:07 <@mmalecki> ryah: oh, that should be removed. let me dig into it, I see few modules which shouldn't be there
21:07 <@ryah> ah - hehe
21:08 <@gildean> yeah, ops in #node.js and good times were had by all
21:09 <@addisonj> hrm... meh, thats the first 5 minutes of downtime we have had in the last few months, not to bad I would say ;)
21:09 <@_Tristan> if a bot made 2+ connections to #node.js and +op'd themselves, then -op'd everybody else, automatically re-opping any of their peer connections in the event of a kick or something, well, that'd be a shitstorm
21:10 <@_Tristan> especially if several of these bots were in at once
21:11 <@_Tristan> eh, too much work
21:12 <@addisonj> speaking of ops for node, we are contemplating hiring an devops pro, if anyone is interested/know someone - http://careers.stackoverflow.com/jobs/21909/full-stack-engineer-on-best-team-in-utah-i-tv?a=pSST2mY
21:12 <@qbit> lal
21:12 <@ryah> addisonj: nodejs.org has a job board - might help
21:12 <@qbit> can request handle file:// urls? 
21:13 <@_Tristan> utah?
21:13 <@addisonj> ryah: yeah, I was just thinking about that, not sure why we haven't posted there yet, silly us
21:13 <@_Tristan> might as well say "You can work at google as long as you kill yourself first!"
21:13 <@SubStack> NODES
21:13 < kuryaki> heya i forked a repository (locomotive), cloned it and installed trough npm install /folder but it is missing some dependencies now, any ideas why?
21:14 <@_Tristan> because npm doesn't roll that way
21:14 <@_Tristan> don't ask, apparently npm isn't evil and it's all full of hugs and puppies.
21:14 < kuryaki> its like its missing the dev dependencies...
21:14 <@SubStack> _Tristan: hey now utah has a lot going for it like a salty lifeless lake and extreme arid heat and restrictive liquor laws
21:14 <@_Tristan> :D
21:15 <@cronopio> kuryaki: maybe in package.json file are missing too
21:15 <@addisonj> for every con there are lots of benefits, best skiing in the world, create communities, nice place to raise a family, not to mention the wayyy lower cost of living
21:15 <@isaacs> i think i'm gonna start a 0.9.0 release
21:15 <@addisonj> create = great
21:15 <@mmalecki> ryah: https://github.com/nodejitsu/require-analyzer/commit/2601c8e261312ad0a22de30cd0ea203948f7109e - no longer needs timespan and loggly. going to release as soon as AvianFlu finally comes back :)
21:16 < kuryaki> @cronopio nope they are there i had to go into a dependency (express) and do npm install --dev to get some working but there are tons of dependencies and i dont want to go trough all locomotive dependencies
21:17 <@ryah> mmalecki: 
21:17 <@ryah> info:    Starting app ryahtest
21:17 <@ryah> error:   Error running command deploy
21:17 <@ryah> error:   Nodejitsu Error (500): Internal Server Error
21:17 <@ryah> error:   There was an error while attempting to deploy your application.
21:17 <@ryah> error:   
21:18 <@ryah> error:   Error spawning drone: no matching engine found
21:18 <@ryah> error:   Repository configuration
21:18 <@ryah> you don't support 0.8.x yet?
21:18 <@mmalecki> ryah: we don't have it yet :(
21:18 <@ryah> wtf?
21:18 <@mmalecki> related to IPC API not being stable
21:18 <@mmalecki> but yeah, working hard to get it here ASAP
21:19 <@ryah> ok
21:21 <@duko> i'm writing a command line script with nodejs
21:21 <@duko> what is the traditional way of passing multiple values to a single argument using command line script?
21:21 <@duko> like --names==chris,mike,jenn
21:21 <@SubStack> that works
21:21 <@duko> is this the right way to do this?
21:21 <@isaacs> duko: that'll work, sure.
21:21 <@sechrist> does restify or anything else out there generate a browser client for your serverside api so you can just call like api.user.blah.blah({},cb); instead of writing boilerplate stuff to call $.ajax?
21:22 <@duko> SubStack: thanks
21:22 <@isaacs> duko: it's basically up to you to deal with it
21:22 <@duko> isaacs: thanks
21:22 <@isaacs> duko: some other scripts do stuff like --name=chris --name=mike --name=jenn
21:22 <@mape> duko: https://github.com/substack/node-optimist/ might be worth looking at, but the splitting would be on your end
21:22 <@isaacs> duko: nopt will parse this for you if you set the type to Array
21:22 <@isaacs> duko: there are other option parses as well.
21:23 <@ryah> http://ryahryah.test.jit.su/ :)
21:23  * ryah <3 when things work
21:23 <@purr> Let it be known that ryah hearts when things work.
21:23 <@SubStack> hear hear!
21:23 <@ryah> purr: thanks
21:23 <@mmalecki> ryah: :)
21:23 <@SubStack> scribe, mark the stone tablets!
21:23 <@ryah> lol
21:24 <@duko> mape: i am using optimist
21:27 <@CIA-93> node: isaacs v0.9.0-release * r63eab37 / (AUTHORS ChangeLog): 2012.07.20, Version 0.9.0 (Unstable) - http://git.io/6XQrTw
21:28 < arinel> hi! is this the right way to enable strict routing in Express? http://jsfiddle.net/qj3bX/
21:29 <@blazes816> arinel: try #express
21:30 < arinel> thanks
21:42 <@othiym23> isaacs: I know it's not exactly the same as ptree, but 'brew install pstree' will get you a good chunk of the way there in OS X
21:43 <@isaacs> interesting
21:44 <@isaacs> othiym23: neat.  they use the wrong tree chars, though
21:45 <@isaacs> ooh, -g 2 uses archy-style unicode chars
21:46 <@CIA-93> node: Fedor Indutny master * r2b3ba3f / (lib/http.js lib/https.js): http/https: pass request to .createConnection() - http://git.io/GHMCeA
21:46 <@CIA-93> node: Fedor Indutny master * r8ba189b / (4 files in 3 dirs): tls: veryify server's identity - http://git.io/Kxe6RQ
21:46 <@cconstantine_> has anyone had good luck with a node.js dnode server and a rails dnode client?
21:47 <@SubStack> probably better to just use http for that
21:48 <@SubStack> the ruby dnode client hasn't had anybody step up who actually knows how to build async ruby apis properly
21:48 <@cconstantine_> :/
21:48 <@cconstantine_> I don't even care about async on the ruby side
21:48 <@cconstantine_> I see the dnode-ruby project.. and it's really bare
21:49 <@cconstantine_> and I'm hoping to not have the http/connection overhead
21:49 <@CIA-93> node: Fedor Indutny v0.8 * r1fa0bca / (lib/net.js test/simple/test-net-settimeout.js): net: ignore socket.setTimeout(Infinity) (and NaN) - http://git.io/dnb8vA
21:49 <@CIA-93> node: Fedor Indutny v0.8 * r53716eb / (lib/http.js lib/https.js): http/https: pass request to .createConnection() - http://git.io/QLgMCw
21:49 <@CIA-93> node: Fedor Indutny v0.8 * reb2ca10 / (4 files in 3 dirs): tls: veryify server's identity - http://git.io/ZXBUOg
21:49 <@burgalon> anyone could recommend on a good up-to-date new multipart parser?
21:50 <@chilts> burgalon: formidable - https://github.com/felixge/node-formidable/
21:51 <@burgalon> chilts: I had the impression node-formiddable is built too much around the filesystem, and was hoping for something more generic with Streams
21:53 <@mape> burgalon: you can hook into formiddable and stream instead
21:58 <@cconstantine_> SubStack, do you happen to know how simple the dnode wire protocol is?
22:04 < FIQ> hm
22:05 <@SubStack> cconstantine_: https://github.com/substack/dnode-protocol/blob/master/doc/protocol.markdown
22:06 <@othiym23> isaacs: yeah, but a little wrapper script could produce whatever delightful Unicode you desire!
22:07 <@cconstantine_> SubStack, hmm, I saw that... seems overly complicated
22:08 <@cconstantine_> or maybe I'm missing something
22:11 < Asm_Freak> I want some insight with a problem that I'm having with my native Node.js add-on that doesn't work in v0.8 but works in v0.6. Is there a specific place I should post my question/problem? The dev mailing list looks more focused towards internal Node dev topics and the other mailing list looks like user land stuff. Thoughts?
22:12 <@AviMarcus> Asm_Freak, maybe you just need to see from the changelog what changed  from .6 to .8
22:12 <@AviMarcus> someone can launch that bot from their server if they want..
22:13 < Asm_Freak> AviMarcus: I've looked. This is related to running execvp() in a C++ add on.
22:17 < Asm_Freak> AviMarcus: Thoughts on where I should post my question?
22:18 <@AviMarcus> sorry, I'm still kinda new to node.js
22:18 <@cconstantine_> Asm_Freak, you could always try the dev mailing list and they can redirect you if it's not the right place
22:19 < Asm_Freak> cconstantine_: Thanks that's what I was leaning towards, I'll give it a shot.
22:24 <@Raynos> I'm trying to get npm to behave with my node_modules. Do any wizards know how to handle this ( https://github.com/isaacs/npm/issues/2639 )
22:27 <@Nexxy> lol
22:27 <@Nexxy> op plz
22:27 <@Nexxy> ._.
22:36 <@Nexxy> tmpvar, aww how nice <3
22:36 < Nexxy> op plz
22:36 < Nexxy> aww it's not a bot
22:37 <@Raynos> oh
22:37 <@burgalon> .
22:38 <@Nexxy> .
22:38 <@Raynos> why op everyone?
22:38 -!- Nexxy was kicked from #Node.js by Raynos [Nexxy]
22:38 <@Nexxy> ;/
22:38 <@Nexxy> please don't ._.
22:38 <@wendall911> I want op
22:38 <@Nexxy> you have it
22:38 <@Nexxy> lol
22:38 <@wendall911> op plz
22:38 <@wendall911> noop plz
22:39 <@Nexxy> NOOP
22:39 < supermonster> why my script doesn't fail when a required module has an error?
22:39 <@Nexxy> because resilience
22:40 < supermonster> can I force it to fail and tell me what's up/
22:40 < supermonster> ?
22:40 < Secutor> #perl
22:40 <@Nexxy> supermonster, you should be able to catch the exception
22:41 <@burgalon> wookiehangover?
22:41 <@wookiehangover> yo
22:42 <@frewsxcv> > test
22:43 < supermonster> @Nexxy: just wrapped it, no exception :(
22:43 <@Nexxy> supermonster, I'm wondering what error it is you're trying to catch
22:44 < supermonster> @Nexxy: let me trace it and get back to you
22:45 -!- frewsxcv changed the topic of #Node.js to: Node.js: a web framework written in scripts of Java
22:45 < sigwhite> *groan*
22:45 <@Nexxy> osnap
22:45 < sigwhite> Who let the frenchman near the dictionary again?
22:45 < frewsxcv> 0_0
22:46 < sigwhite> (no, really, I think translating Javascript to French and back would result in "script of Java")
22:46 <@frewsxcv> Really? ROFL
22:47 < sigwhite> It's how compound nouns work in French, isn't it?
22:47 <@frewsxcv> I'm sure that's how most romance languages handle it
22:47 < sigwhite> Of course most automated translations are better than that.
22:48 < sigwhite> "scripte du Java"?
22:48 < sigwhite> http://translate.google.com/#fr|en|scripte%20du%20Java
22:48 <@frewsxcv> lol
22:49 <@cconstantine_> that is not a hair related question
22:49 <@frewsxcv> lol i love those guys
22:49 <@cconstantine_> :)
22:49 <@frewsxcv> they aren't in jail are they?
22:49 < sigwhite> Petition to change the name of ##javascript-fr to ##scripte-du-java 
22:50 <@cconstantine_> yup, and if I remember right you can see their lawyers grinning in the background as they have that 'press conference'
22:50 < sigwhite> (or whatever the French language channel for JS is on Freenode, if there is one)
22:51 < sigwhite> 716 ops? What is this? Some kind of democracy?
22:53  * crates kickbans all the other ops so he can be King
22:59 < supermonster> @Nexxy: ok, this was my oversight, but I wonder in general say I require a module and that module requires another one that doesn't exist
22:59 <@jcrew> i like the new room title, javascript and java ===
23:00 <@Nexxy> supermonster, you should get an error
23:01 <@Nexxy> supermonster, "Cannot find module '<module name>'"
23:04 <@slickplaid> grr... having an issue with modifying an array I'm .forEach'ing... splicing from the array you're iterating over is a pain
23:05 <@alex4nder> yes
23:07 <@mmalecki> slickplaid: for (var i = arr.length - 1; i >= 0; i--) { if (...) { arr.splice(i, 1); })
23:07 <@Nexxy> ERR! Error: spawn ENOMEM
23:07 <@Nexxy> ._.
23:08 <@slickplaid> i'm using https://github.com/caolan/async/ forEach to process all the entries in parallel
23:08 <@slickplaid> so... yeah it doesn't return properly on one of the months
23:08 <@slickplaid> in a very peculiar input order
23:08 <@alex4nder> slickplaid: copy your ish
23:08 <@slickplaid> works fine 99% of the time
23:09 <@slickplaid> just a specific entry in a specific order causes it to fail to return after finishing
23:10 <@slickplaid> and I have no idea what an "ish" is
23:11 < chapel> slickplaid: gist your code
23:11 <@slickplaid> it's okay, i'll figure it out
23:11 <@slickplaid> the amount of time it'll take to gist this code and explain it might be more of an issue than getting this bug fixed
23:12 <@slickplaid> very complicated object manipulation
23:12 <@cconstantine_> slickplaid, generally speaking; modifying what you're iterating over is a bad idea
23:13 <@slickplaid> So will marking an object in an array, setting it to the new object and then splicing it after the iteration going to cause issues?
23:14 <@cconstantine_> I"m not sure I understand your issue specifically, but iterating over a copy can work
23:14 <@cconstantine_> or doing some functional thinger like a map
23:14 <@cconstantine_> and using the newly created one
23:14 <@slickplaid> obj.forEach(function(i) { var that = obj[i]; otherObj.unshift(that); }); then going through and splicing... will it affect what's in the otherObj?
23:15 <@slickplaid> all i'd be doing is splicing to remove it from obj
23:15 <@alex4nder> slickplaid: write the shit functionally, and don't modify your input array
23:15 <@slickplaid> obj.splice(x, 1) and just discarding it (not setting it to a variable)
23:16 <@alex4nder> or if you need to modify it in-place, gather your changes and make them outside of going through the data
23:21 <@slickplaid> okay cool, just splicing it after the fact works just fine
23:31 <@diverdude> would it make sense to open 1 socket.io connection for chat and another for various update events from the server, for each client or would it make more sense to share one websocket for those 2 things?
23:34 < serdem> how can i send JSON data using http.request?
23:35 < rvagg1> serdem: use request
23:35 < rvagg1> npm search request
23:35 <@npmbro> rvagg1: Please see http://eirikb.github.com/nipster/#request
23:37 < serdem> rvagg1, i can do it with shred but i don't want to use some module. is'nt it possible to achive with http ?
23:38 < serdem> i mean http.request [POST] ?
23:38 < rvagg1> yes, but if you're makin ga client then it's always so much easier to just use request
23:40 < serdem> rvagg1, ok. i'll check it out. would you tell me how to do it with "http" please?
23:40 < rvagg1> nope cause I always use request these days so don't have to think about those details
23:41 < rvagg1> you'll need to set the Content-Type header to application/json and make the body of your request the JSON.stringify() result
23:42 < rvagg1> Content-Length too is probably a good idea, length of the JSON content in characters
23:43 < serdem> you are talking about reques, right?
23:43 < serdem> reques *request
23:43 < DTrejo> rvagg1: yayy people are using npmbro
23:44 <@DTrejo> oMG and im an op now or something! wowoz
23:45 <@Nexxy> wauuu~!1
23:45 <@DTrejo> :)
23:46 <@TooTallNate> with great power comes great responsibility
23:46 <@Nexxy> and a sweet @ sign!
23:47 < rvagg1> heh
23:48 <@EyePulp> DTrejo: isn't the op #node.js needs, but the op #node.js deserves
23:48 < rvagg1> serdem: no I'm talking http in general, want to send JSON then set body to the JSON content, set Content-Length and Content-Type headers and you should be good to go
23:48 <@EyePulp> he's BatOp!
23:48 <@DTrejo> I will wield it responsibly
23:49 < rvagg1> serdem: but seriously, just use request
23:49 < rvagg1> serdem: it's the http client layer that Node is missing in core
23:50 < serdem> rvagg1, https://github.com/spire-io/shred seems easy to me.why did you prefer request? is there any reason for it?
23:51 < rvagg1> ok #node.js, lets have a vote, what does everyone use for their http client?
23:52 <@alex4nder> lynx
23:52 < rvagg1> serdem: shred is probably just fine, just use something that simplifies the client layer, the last thing you need is to be wasting keystrokes manipulating http when it can be easily done for you
23:52 < rvagg1> alex4nder: bah, I mean in your Node code
23:52 < _Tristan> op plz
23:52 < _Tristan> OHNO
23:53 <+riven> DENIED
23:53 < _Tristan> anyways
23:53 < _Tristan> op please?
23:54 <@deoxxa> lol @ the topic
23:54 <@leonardo> 7topi
23:54  * rvagg1 bestows an imaginary +o on _Tristan
23:55 < _Tristan> oh, come on, I want some OP so I can change the topic to what it was before
23:55 <@alex4nder> the topic rocks
23:55 <@Nexxy> _Tristan, it was a bot that ryah had lol
23:55 <@deoxxa> _Tristan: i have a feeling it'll be funnier watching you cry
23:56 -!- _Tristan changed the topic of #Node.js to: haberdashery.js
23:56 <@_Tristan> :>
23:56 < gyaresu> orly?
23:56 <@_Tristan> yarly
23:56 <@_Tristan> haberdashery is my favorite word today
23:57 <@_Tristan> YESTERDAY WAS POPSICLE :D
23:57 <@Nexxy> tomorrow it will be tuberculosis
23:57 <@_Tristan> could be, I won't know until midnight
23:57 <+riven> lol
23:59 < cbobo> does anyone know of a good irc node.js libary ?
23:59 < cbobo> otherwise i am just going to use TLS
23:59 <@_Tristan> irc comes to mind for some reason
23:59 < rvagg1> npm search irc
23:59 <@npmbro> rvagg1: Please see http://eirikb.github.com/nipster/#irc
--- Log closed Fri Jul 20 00:00:48 2012
