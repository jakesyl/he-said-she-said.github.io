--- Log opened Fri Aug 10 00:00:33 2012
--- Day changed Fri Aug 10 2012
00:00 < CIA-93> libuv: Ben Noordhuis master * ree50db6 / (15 files in 6 dirs): unix, windows: preliminary signal handler support - http://git.io/fj_3VQ
00:00 < CIA-93> libuv: Ben Noordhuis master * r75ba681 / (3 files in 2 dirs): unix: remove dependency on ev_child - http://git.io/l6OEJQ
00:00 < CIA-93> libuv: Ben Noordhuis master * rcaa79af / (3 files in 2 dirs): unix: rework uv_eio_init() init once logic - http://git.io/aclJUg
00:00 < CIA-93> libuv: Ben Noordhuis master * r837edf4 / (35 files in 7 dirs): unix, windows: remove handle init counters - http://git.io/KgpxmA
00:06 < pringlescan> I downloaded 200k websites, and went to run over them asynchronously… and it kept slowing to a crawl… it turns out a bunch of them had javascript malware and once the number of infected files was equal to my level of concurrency my parser would just mysteriously stop performing work while still running.
00:07 < pringlescan> I never realized that when an A/V scanner blocks I/O it doesn't time out or throw an error, it just cock blocks it and the app is like WTF? mate
00:12 < CIA-93> node: Nathan Rajlich v0.8 * r64ac54a / (Makefile tools/getnodeisrelease.py): Makefile: add a better check to ensure a node "release" - http://git.io/zxFSAw
00:20 < JZA> hi I need to pull the source code for node 9.1 but cant seem to find it
00:21 < JZA> I have an issue with npm not working
00:21 < JZA> and I read it was fixed on the latest 9.0 release
00:28 < Domenic> JZA: 0.9.1 does not exist, nobody has released it
00:29 < JZA> ok I am following this thread 
00:29 < JZA> https://github.com/joyent/node/issues/3616
00:29 < gkatsev> node 0.9.1 exists. in the future.
00:29 < JZA> I see, so how can I make npm work? downgrade?
00:29 < Domenic> JZA: generally sticking with stable releases of node, like 0.8.x, is a good idea
00:29 < gkatsev> any particular reason you are on 0.9.x?
00:30 < Domenic> 0.9.x or 0.odd.x in general are unstable
00:30 < JZA> I got 9.0-pre, I could upgrade except people with 9.0 say npm doesnt work for them
00:33 < zastern> ccowan: welp, we have a "stable" app
00:33 < zastern> thanks again dude
00:37 < ccowan> np
00:53 < version2beta> maxogden, is there any chance you could answer some Tako questions? 
00:55 < version2beta> maxogden, sorry not paying attention, i see you're away.
01:00 <@maxogden> version2beta: hi whats the question/
01:07 < owen1> is hook.io uses socket.io for sending messages?
01:08 < Stephen> Not sure, but they certainly can push and pull
01:19 < augustl> are there any websocket modules out there that doesn't require compilation and that can be attached on an existing http server?
01:25 < tprice> socket.io and ws
01:25 < tprice> both do what you want
01:31 < tprice> what file is require found in?
01:31 < tprice> module.js?
01:35 < tprice> or even better then do i find the "NativeModule" thing
01:35 < tprice> is that part of node or v8?
01:35 < rvagg> require is found in module.js
01:36 < AvianFlu> native modules are in process.binding
01:36 < AvianFlu> but, careful, dragons
01:36 < AvianFlu> process.binding('cluster') for example, returns the code of 'cluster' as a string
01:38 < tprice> ok so "process.binding('natives');"
01:38 < tprice> what file is this natives thing
01:53 < drudge> isaacs: are you looking for a domain proxy in .ee?
01:54 < Stephen> drudge?!
01:54 < drudge> was referencing his tweet sorry
01:55 < Stephen> ....
01:55 < Stephen> hmm...
01:55 < Stephen> Not the same drudge I suppose?\
01:56 < drudge> i'm not sure what you mean
01:56 < Stephen> dude, I've known you for years.
01:56 < Stephen> Or your doppleganger
01:56 < Stephen> I've never known anyone else to use that name
01:56 < drudge> I know a lot of Stephens, you'll have to be more specific
01:56 < beachdog> tprice: natives are the modules that are compiled into the node core
01:57 < Stephen> I also go by FesterCluck
01:57 < Stephen> Author of Nova Initia
01:58 < drudge> doesn't ring a bell
01:58 < Stephen> heh, small world
01:58 < Stephen> sorry about that
02:03 < beachdog> tprice:process.binding('natives') causes the javascript code which is compiled into node as a string to be executed and the resulting modules to be made available in the environment
02:07 <@Nexxy> Stephen, I'm glad you're going by Stephen :D
02:08 < FesterCluck> What, you gotta problem o somethin?
02:08 <@Nexxy> lol
02:08 <@Nexxy> too many to name
02:21 < Init--WithStyle-> It seems that "app.address().port" doesn't work on an express server anymore?
02:21 < Init--WithStyle-> After updating my express version it's giving me an error
02:25 < Stephen> Init--WithStyle-: Somewhere in the docs it mentions a new env variable
02:25 < Init--WithStyle-> indeed?
02:26 < prettyrobots> Who owns a buffer on a 'data' event?
02:26 < prettyrobots> Can you hold onto it for the next 'data' event?
02:26 < prettyrobots> My guess is no.
02:26 < prettyrobots> But, if you had a value that was split between two buffers.
02:29 < Init--WithStyle-> Stephen: also it seems that EJS changed... I defined a "title" variable in the app.js "res.render('index', {locals: {         title: 'EFE GO',"
02:30 < Init--WithStyle-> but then accessing it later in my view via <h1><%= title %></h1> produces an error
02:30 < Init--WithStyle-> any ideas what's going on?
02:30 < Stephen> What version of node you running?
02:30 < Init--WithStyle-> 0.8.6
02:31 < Stephen> no clue, sounds like time to break the repl out
02:32 < Stephen> Or run it in cloud9
02:33 < Init--WithStyle-> cloud9 is cool but I still like webstorm waayyy more
02:33 < Init--WithStyle-> :)
02:34 < SubStack> I like vim and xmonad and reductionism.
02:35 <@Nexxy> REDUCTIONISM!?!?!
02:35 < Stephen> Init--WithStyle- : Did you install express with ejs support?
02:36 < Stephen> apparently it requires that now
02:37 < Stephen> BTW: SubStack: Thanks for nave, works like a charm
02:38 < SubStack> Nexxy: methodologically and ontologically speaking yes
02:39 < SubStack> and its aesthetic counterpart, minimalism is useful for creating appealing interfaces
02:40 < SubStack> not always the best approach but a good place to start
02:41 <@Nexxy> SubStack, y 4 dnode constructor doesnt work?
02:41 <@Nexxy> is it just me?
02:41 < SubStack> Nexxy: I did fix a race condition with it in 1.0.1 but haven't had problems since
02:42 < SubStack> gist it!
02:42 <@Nexxy> SubStack, I can only seem to get it to work with literals
02:42 <@Nexxy> oki 1 min
02:43 < SubStack> is this with a listener?
02:43 < SubStack> or a connection
02:43 <@Nexxy> it's for a listener, but I am using 1.0.1
02:43 <@Nexxy> so perhaps that is the issue
02:43 < prettyrobots> The Buffer given to 'data' bind.
02:43 < SubStack> no 1.0.1 is the latest, should be ok
02:43 < prettyrobots> Who owns it?
02:43 < prettyrobots> Will it be reused?
02:43 < SubStack> Nexxy: are you using .pipe() with your listener?
02:43 < prettyrobots> I asume so.
02:43 < SubStack> or .listen()?
02:44 <@Nexxy> SubStack, .piping to Net.createServer
02:44 < prettyrobots> But, I don't know. :(
02:44 <@Nexxy> PWETTYWOBOTS
02:44 <@Nexxy> if I knew I would tell you ._.
02:45 < SubStack> Nexxy: are you doing var d = dnode(cons) outside the createServer callback or inside?
02:46 <@Nexxy> inside
02:46 < SubStack> super strange then
02:46 <@Nexxy> jah
02:46 < SubStack> what does your cons look like?
02:46 < prettyrobots> Bummer.
02:46 <@Nexxy> I'm working up another example with a constructor
02:46 <@Nexxy> I ended up just using an object 
02:46 < SubStack> maybe there's a race condition with the pipes
02:47 < prettyrobots> Nexxy: If you don't know, then I'll be *nobody* knows.
02:47 < SubStack> Nexxy: actually what you are expecting to happen and what is actually happening
02:47 < SubStack> should have asked that first
02:47 < RobZ1> excuse my newbiness.  Is it still better to have nginx proxy through to a node server and let nginx serve static assets?  
02:48 <@Nexxy> SubStack, I was expecting to be able to use my fn to construct new dnode objects
02:48 <@Nexxy> but it could be that I'm doing it wrong
02:48 <@Nexxy> prettyrobots, I'm sure someone does!
02:48 <@Nexxy> I know very little
02:48 < SubStack> RobZ1: you ask us what is better and don't supply us with what your use case is
02:48 <@Nexxy> SubStack, I searched through dnode source first before I asked
02:48 < prettyrobots> Nexxy: Lies! If I can't have answers, I must have melodrama.
02:48 <@Nexxy> but I think I'm just still bad with JS constructors
02:49 <@Nexxy> prettyrobots, I have plenty of that
02:49 < SubStack> as if solutions are better or worse without respect to the circumstances of their use!
02:49  * prettyrobots grabs last donut and leaves the room
02:49 < prettyrobots> Leaves the room crying, of course.
02:49 <@Nexxy> you're supposed to hold it up and touch it everywhere while asking if anyone wants the last one
02:49 < SubStack> Nexxy: yep you should be able to return an object in the cons fn or assign into the `this`
02:50 <@Nexxy> oki
02:50 < prettyrobots> I have to assume that the Buffer is reused by the caller.
02:50 <@Nexxy> I probably just didn't return properly
02:50 <@Nexxy> I'll screw with it, thanks :D
02:50 < prettyrobots> It makes the most sense.
02:50 < SubStack> do either of those but it doesn't work when you mix those approaches
02:50 <@Nexxy> come on guys, let's not talk that way about DTrejo... he's a nice guy
02:50 < DTrejo> whattt??/
02:50 <@Nexxy> oh shit
02:50 <@Nexxy> see!?
03:04 < s5fs> Nexxy: hi
03:05 < DarkArgon> hi
03:06 < ctult> while (true) {return false}
03:09 < RobZ1> SubStack: for example to serve up an image.  Install nginx + node and let nginx serve the image.  Or just install node and let it serve up the image.  I've read that for former is recommended, but just checking here to see if node has had any changes that make it just as good (saves me installing nginx).
03:18 < DarkArgon> checkout my node bot :D http://rinik.de:3000/
03:19 < DarkArgon> type something in here, and see the "raindrops"
03:19 < drudge> no way
03:19 < karlbright> yes way
03:20 < RobZ1> cool
03:20 < DarkArgon> thx :)
03:24 < s5fs>  nodebot
03:24 < Stephen> nodetop
03:24 < Stephen> solo
03:24 < s5fs> pancakes
03:25 < s5fs> dance party
03:25 < s5fs> DarkArgon: very cool
03:25 < DarkArgon> thanks ;)
03:26 < version2beta> s5fs, pancakes? does that make pretties happen on DarkArgon's bot?
03:27 < s5fs> version2beta: no, activity on this channel shows your nick. any words work, those are just some of my favorites.
03:28 < DarkArgon> any work will work
03:28 < s5fs> version2beta: i can provide a more exhaustive list of words i enjoy, if you wish
03:28 < DarkArgon> *word
03:28 < DarkArgon> gotta switch pcs
03:29 < version2beta> s5fs, that is great - I appreciate that you have such a list. I've been enjoying a similar endeavor - the output of a passphrase generator.
03:31 < DarkArgon> need a channel with much traffic in it
03:32 < s5fs> version2beta: very nice! i used to use a "pronouncable password" generator, it was a java applet and very handy
03:33 < s5fs> i keep meaning to roll my own, but never seem to find time (too many other shiny things)
03:39 < version2beta> s5fs, I wrote my first pronouncable password generator in 2001, posted on Perlmonks.org. I like to think it inspired apg. Now I'm using a short python program I wrote to generate multi-term passwords ala http://xkcd.com/936/.
03:40 < s5fs> yeah, i've been using pass phrases where possible for a few years, much easier than substitution
03:41 < version2beta> s5fs, "mason's Hobbit barrets" "zamboni Bygone udders" "Advertisers dick dishonesty"
03:44 < s5fs> how did you guess my passwords??
03:46 < version2beta> s5fs, I won't tell if you won't tell.
03:48 < s5fs> i like your style
04:03 <@Nexxy> s5fs, hai
04:04 < s5fs> Nexxy: hai!
04:04 -!- mode/#Node.js [-b *!*omar@*.nycmny.east.verizon.net] by Nexxy
04:04 <@Nexxy> soup?
04:04 < s5fs> whats shakin, bacon
04:05 < s5fs> nada, java work tomm, whee!
04:05 <@Nexxy> just quieting a crying baby
04:05 <@Nexxy> and imaging a beagleboard
04:05 < s5fs> got a nexus 7 tablet, loaded some books, happy fun times!
04:05 <@Nexxy> fun!
04:05 < s5fs> for sure
04:05 -!- mode/#Node.js [-b IRCBot_*!*@*] by Nexxy
04:06 <@Nexxy> s5fs, I want something hackable w/ epaper
04:07 < s5fs> same
04:07 < timeturner> at first I thought the topic said NOOOO... until I saw the last 5 characters lol
04:07 <@Nexxy> isn't that a hoot?!
04:07 < s5fs> i'm having trouble finding all the books i own in epub/mobi though, sometimes pdf is all there is
04:08 <@Nexxy> ._.
04:11 < s5fs> i'm morally opposed to re-buying books in electronic format
04:11 <@Nexxy> you can always just download them on demono--
04:11 <@Nexxy> oh, right.
04:12 < s5fs> haha, right, but unpopular titles are generally only PDFs
04:12 <@Nexxy> epub converter?
04:12 < s5fs> i tried calibre, did a piss-poor job. i need to spend more time on the process, but it takes ~20min/pass to convert the java book i am reading
04:13 < s5fs> easier to just tear off the 200pgs i care about, haha!
04:13 <@Nexxy> lol
04:30 < ccowan> Nexxy: what are you doing with the beagleboard?
04:34 < version2beta> s5fs, here's the passphrase generator if you're interested. https://github.com/Version2beta/passphrase. Just updated the readme with some cool example phrases. Goodnight!
04:35 < s5fs> version2beta: many thanks, take care!
04:59 <@Nexxy> ccowan, I've been working on a Node-based point-of-sale system that runs on them
04:59 < s5fs> you mean a real, working POS
04:59 < s5fs> ?
04:59 <@Nexxy> well almost :D
05:00 <@Nexxy> I'm integrating it with dinerware right now
05:00 < s5fs> that's very cool, i love integration work
05:01 < s5fs> sucks their api docs aren't just laying around, looks like you have to sign up
05:02 < Stephen> I used to write for a hotel management system
05:03 < Stephen> Working with hospitality tech is crazy work
05:03 <@Nexxy> yeah
05:03 <@Nexxy> it took 2 weeks to get access to the SDK and API docs
05:03 <@Nexxy> and even then it's only because I know the founder
05:03 <@Nexxy> lol
05:04 <@Nexxy> I tried to integrate with them over a year ago and they wouldn't work with me
05:05 < s5fs> well, after knowing you for a while, i understand ;-)
05:07 <@Nexxy> s5fs, haa haa!
05:07 <@Nexxy> s5fs, . ___.
05:08 < Stephen> Nexxy: TCP or Serial communications?
05:08  * s5fs elbows Nexxy in the ribs  "eh!! eh!!"
05:09  * Nexxy bruises and weeps
05:10 <@Nexxy> Stephen, to which?
05:10 <@Nexxy> the short answer is both
05:10 < Stephen> you're writing to dinerware, right?
05:11 <@Nexxy> oh
05:11 <@Nexxy> yeah that's TCP
05:11 <@Nexxy> it's SOAP
05:11 <@Nexxy> lol
05:11 < s5fs> hey soap's okay
05:11 < s5fs> as a consumer of the service its not too weird, but rolling a soap svc w/o an ide suuucks
05:12 <@Nexxy> s5fs, https://gist.github.com/1927990
05:12 <@Nexxy> there's my SOAP parser!
05:13 < s5fs> sheesh
05:13 <@Nexxy> rofl
05:13 <@Nexxy> kidding
05:13 < s5fs> haha, you turkey
05:13 <@Nexxy> I did use it briefly for debugging MercuryPay 
05:14 <@Nexxy> their API is bad
05:14 < s5fs> i'm always fascinated by api design, seems so hit-and-miss
05:14 < Stephen> SOAP without Visual Studio to generate the contract = sux
05:14 < s5fs> Stephen: yeah, i wrote a few in php
05:15 < Stephen> Best API: Restful MVC
05:15 < Stephen> Done and Done
05:15 < Stephen> Unless of course the API is female parts...
05:15 < Stephen> those are better
05:15 < s5fs> how would you indicate type?
05:15 <@Nexxy> Stephen, what?
05:16 < Stephen> using a restful api?
05:16 < s5fs> yeah
05:16 <@Nexxy> SOAP in PHP is painful
05:17 < pringlescan> I'm doing something wrong… my maximum call stack is ecxeeded… is that from using high concurrency with two many anonymous functions and clousres?
05:17 < s5fs> one of the features of soap is that you know what type each field is, it's verbosely defined
05:17 < Stephen> You could either indicate it as part of the request url, or you can indicate it in the  response JSON object
05:18 < s5fs> Stephen: on a per-field basis? for each consuming app?
05:18 <@Nexxy> so what you're recommending
05:18 < Stephen> pringlescan: Possibly, but I've also found that one gets that error often when running a module which was written for 0.6.19 in 0.8.6
05:18 <@Nexxy> is an ad-hoc version of SOAP in JSON?
05:18 < s5fs> again, you receive a soap doc, check it against the xsd and you know immediate if it's conforming
05:18 < Stephen> s5fs: Seriously, how dynamic of objects are you needing to pass?
05:18 < s5fs> Stephen: it's not passing, it's catching with strongly typed languages like java/c#
05:19 < pringlescan> stephen… :| srsly?
05:19 < s5fs> Stephen: so when i get a json object, i have to unpackage it, check the fields and cast them into the correct datatype
05:19 < Stephen> Hey, I write in C# on a daily basis
05:19 < Stephen> It's how I make my living
05:19 < Stephen> I just don't drink the XML cool-aid
05:19 <@Nexxy> lol
05:20 < s5fs> Stephen: me either, it's not *the* solution, but it does have merits
05:20 <@Nexxy> the XML is kind of irrelevant when you're not even seeing it
05:20 < Stephen> It's bloated, and making every piece of software able to handle ANY situation costs my clients a lot of money
05:20 <@Nexxy> you're consuming it via some high level abstraction anyway
05:20 < Stephen> XML is just a good example
05:20 < Stephen> my apologies
05:20 <@konobi> still a lot of overhead though
05:21 < pringlescan> stephen: https://gist.github.com/3311241 here's the error… could that still be the case?
05:21 <@Nexxy> I'd rather have overhead than corrupt transactions
05:21 < s5fs> Nexxy: true enough, the abstraction should keep all the xml out of your face, except when debugging. 
05:21 < Stephen> The point is, Abstraction, Decoupling, and IOC are great when necessary, but I've often seen their strict following used to extend out projects which could have otherwise met their requirements 6 months earlier
05:22 <@Nexxy> in .net with the fancy WSDL importing
05:22 <@Nexxy> it's super easy
05:22 < pringlescan> how can I run the tests included with an npm package to insure compatibility with my version of node?
05:22 <@Nexxy> Stephen, you should write a blog post
05:22 <@Nexxy> sounds like you've got a PSA just dying to get out
05:22 < pringlescan> XML should die with the PC era… do we really want to use a non-terse format over the air?
05:23 < s5fs> Stephen: strongly typed languages in general fall into that category imho. it's a hassle you have to deal with, if you're really after the feeling of 'security'
05:23 <@Nexxy> pringlescan, group think much?
05:24 <@Nexxy> tell us how you *really* feel! http://www.youtube.com/watch?v=GsVcUzP_O_8
05:24 < pringlescan> Nexxy, No, I went to school for business, I plan as we cut the cord and go mobile we'll be paying more and more for data, as a developer, user advocate and frugal consumer, I for one would rather spend my money on something other than an inconsiderate developer who uses XML.
05:25 < Lorentz> maybe we can just pass it all through gzip or something
05:25 < Lorentz> it should be doing that already... right?
05:25 < s5fs> pringlescan: that's the mindset that got us into using hex messages for stuffs
05:25 < Stephen> pringlescan: Sorry, I have no idea on your problem
05:26 < pringlescan> Stephen, thanks for looking, the real kicker is, I have a batch job that keeps choking maybe a thousand or so items in, but if I remove the actual code that performs the task and run it bare bones … it gives me errors.
05:26 <@Nexxy> what error?
05:26 < s5fs> sleep time, later gang! thanks for the soap banter :)
05:26 <@Nexxy> max stack?
05:26 < pringlescan> yes
05:26 < Stephen> couold be a repl issue
05:26 < pringlescan> is it just executing too quickly?
05:27 <@konobi> Nexxy: i never buy tim beer... i just can't bring myself to do it
05:27 <@Nexxy> possibly?
05:27 < Stephen> He's running a replace on a string
05:27 < pringlescan> it shouldn't exceed the 50 threads
05:27 <@Nexxy> konobi, lol what?!
05:27 < pringlescan> haha Stephen, I'm not even doing that! I have no idea what's calling that.
05:27 < pringlescan> it's some node library I guess
05:27 <@Nexxy> are you recursing ?
05:28 < Stephen> He must be
05:29 <@konobi> Nexxy: tim bray
05:29 < Stephen> (function recurse() { recurse(); }())
05:29 <@Nexxy> sounds like an errant recursion w/o moar context
05:29 < pringlescan> I'm not sure how I could, literally right now my app does nothing but read about 200k files from 3 directories and adds it to an Async queue.
05:29 <@Nexxy> konobi, oh lol
05:29 <@Nexxy> pringlescan, did you even read what you just wrote?
05:29 <@Nexxy> lol
05:30 < Stephen> To an async queue?
05:30 < pringlescan> sorry, I meant to say "reads the file listings from three directories" and adds the file names to a queue.
05:30 < Stephen> Yeah, that ain't happening
05:30 <@Nexxy> konobi, it's because he's canadian, isn't it?
05:30 < pringlescan> yes an Async module, whatever that's called
05:30 < pringlescan> I don't try to open that many files at once.
05:30 < Stephen> Async uses callbacks
05:30 < pringlescan> https://github.com/caolan/async/ this one
05:30 < Stephen> ie: successive objects in a queue are technically recursive methods
05:32 <@konobi> Nexxy: he lives in town
05:32 <@konobi> so i see him at events, etc.
05:32 <@Nexxy> why are there no 24 hour electronics shops?
05:32 < Lorentz> Nexxy: order online
05:32 < jesusabdullah> obvs
05:32 <@Nexxy> Lorentz, do they offer instantaneous shipping?
05:32 < Stephen> You should add all your filenames into an array then have a broker method add them into the async queue in limited batches
05:32 < Lorentz> Nexxy: you mean like teleported shipping? guess not
05:33 <@Nexxy> OKAY THEN.
05:33 < Lorentz> but neither are you a teleporter
05:33 < Lorentz> or jumper
05:33 < Stephen> But I am a lover, a sinner, a loser, and a winner
05:33 <@Nexxy> but if there were an electronics shop around, that was open 24 hours
05:33 < Stephen> plaing my music in the sun.
05:33 <@Nexxy> I could go there whenever I needed a project box
05:33 <@Nexxy> project boxes are hard to order online
05:33 < pringlescan> Stephen, so have a getWork() function that transfers a batch of them at a time to the queue? 
05:34 < pringlescan> Nexxy, can't you just print one? — 10 years from now
05:34 < Stephen> Yup. Have it check the array for work, then check the queue for length, and append when appropriate
05:34 <@Nexxy> pringlescan, I'm working on it actually
05:35 <@Nexxy> I'm making tmpvar help me
05:35 < pringlescan> Nice!
05:35 < Stephen> pringlescan: Nope, because even with a rep-rap the US government will find a way to classify an essential piece to make it schedule 1
05:35 <@Nexxy> a drug?
05:35 <@konobi> Nexxy: time to get a makibot
05:36 <@Nexxy> konobi, I think that is happening soon
05:36 < pringlescan> Well, you can fab drugs with them, so it wouldn't be out of the question for the FDA to be in charge of regulating it ;-)
05:36 < Stephen> schedule 1 is for substances... doesn't matter if they are drugs
05:36 <@konobi> Nexxy: $300 ftw
05:36 < Stephen> Oh, did anyone see that someone fabbed a gun?
05:36 < Stephen> Or at least the main piece legally classified as a gun?
05:36 <@Nexxy> I see
05:36 <@Nexxy> so you don't drink the XML kool-aid
05:36 < pringlescan> Stephen, I have about 250k websites I have to run an algorithm on that decides whether they are a business's true website, or a stub page or some other web non-sense. I downloaded all of these to my FS.
05:37 <@Nexxy> but you do drink the conspiracy kool-aid
05:37 < pringlescan> … When I run my algorithms on small batches or single items it works fine… but somehow invariably I run them on the batch and the batch slows to a crawl (not consistent) or it finishes but I end up with 1/8th of the results I'm expecting to have in the DB.
05:37 < Stephen> conspiracy? Nah, there will be plenty of good explainations as to why
05:37 <@Nexxy> all of which will require giant leaps of paranoid faith!
05:37 < pringlescan> so I'm definitely doing something wrong.
05:38 < Stephen> Conspiracy, no. Think the US goverment babies people too much? Yeah
05:38 < Stephen> Ah, yes, the file sizes vary
05:38 < jesusabdullah> Nexxy: !
05:38 < Stephen> What kind of work are you doing on the files?
05:38 < Stephen> Parsing the html?
05:38 < jesusabdullah> Nexxy: I'm buying some books, want moar, any recommends?
05:39 <@Nexxy> jesusabdullah, for booooks?
05:39 < jesusabdullah> yeah
05:39 <@Nexxy> web application hackers handbook
05:39 <@Nexxy> practical erlang
05:39 <@Nexxy> I tink that's what it's called
05:39 <@Nexxy> 1 sec
05:39 < pringlescan> Stephen, in this case I'm just parsing the html, removing all text, parsing for html entities, then blindly running regexps on it to match telephone numbers and such… I'm not performing any I/O other than reading the HTML and making some DB queries.
05:39 <@Nexxy> no it's just the "Software in a concurrent world" book
05:39 < jesusabdullah> erlang more like HURLang amirite
05:39 < jesusabdullah> or maybe:
05:39 <@Nexxy> HELLER JER?!
05:39 <@Nexxy> HELLER MAIKE
05:39 < Lorentz> node more like nope amirite
05:39 < jesusabdullah> erlang more like erLAME amirite
05:40 < Stephen> pringlescan: It's possible malformed html is causing you greif
05:40 < pringlescan> jesusabdullah: Software Estimation: Demystifying the Black Art 
05:40 < jesusabdullah> any fiction? ;)
05:40 < jesusabdullah> I love technical books but I have a huge backlog already
05:40 <@Nexxy> fiction?!
05:40 < pringlescan> Stephen, I've considered that but I'm running two batch jobs, similar task, with different html parsers and I'm running into similar issues.
05:41 < clee> jesusabdullah: check out the Name of the Wind
05:41 < clee> *awesome* fantasy novel
05:41 < Stephen> pringlescan: Malformed HTML is going to cause headaches with any parser
05:41 < Stephen> pringlescan: BUT
05:41 < pringlescan> http://www.amazon.com/Essential-Difference-Truth-About-Female/dp/0738208442/ref=sr_1_1?s=books&ie=UTF8&qid=1344577255&sr=1-1&keywords=the+essential+difference+the+truth+about+the+male+and+female+brain
05:41 < pringlescan> sorry, that wasn't meant to be a link, damn osx
05:41 <@Nexxy> el oh el
05:41 < pringlescan> good read regardless
05:41 <@Nexxy> what a bunch of bullshi
05:41 < Stephen> pringlescan: Consider parsing the HTML into nodes and queuing THOSE through async
05:42 < Stephen> I think you'll find you can regulate the flow more that way
05:42 < pringlescan> Stephen, these are very small files and this is a one time use script… should their not be an easier way?
05:42 < pringlescan> *there
05:42 < Stephen> Hmmm
05:43 <@Nexxy> pringlescan, maybe some sort of shell script would be easier
05:43 < pringlescan> which i'm realizing is not a good use case for event driven programming, it seems to take a great deal more consideration than hacking together a perl script
05:43 < Stephen> Be damn sure you're closing your file handles, not opening the same file multiple times.
05:43 < Stephen> Async opens will pile on top of one another fast
05:44 < Stephen> It's possible you have a LOT more files open during the read than you think
05:44 < mscdex> is it "pringles can" or "pringle scan" ?
05:44 < Stephen> pr ingles can]
05:44 < Stephen> pring lescan
05:44 < pringlescan> Pringle's can, it's a dumb nickname from work
05:45 <@Nexxy> pringlescan is a makeshift wifi antenna
05:45 < jesusabdullah> pringles can what?
05:45 < jesusabdullah> it's true
05:45 < jesusabdullah> also a makeshift mortar
05:45 < pringlescan> Stephen, I'm using a queue to limit it to 50 work items at once, if I'm just using fs.readFile() {} when the function exits, shouldn't it close the file handle?
05:45 < Stephen> pringlescan: You said you're running regex, how complicated are they?
05:45 < Stephen> pringlescan: Don't depend on it closing itself, do it manually
05:46 < Stephen> Depending on GC is just sucking extra performance
05:46 < pringlescan> the regexps aren't too bad, but I may want to define them in a local variable so they're pre-compiled, I'm not sure if V8 optimizes that.
05:46 < Stephen> read the file into a variable and close the thing unless you have a good reason to leave it open
05:48 < Stephen> pringlescan: You say you are removing text, parsing html, all to make sure the page you have pulled somehow matches the page you expect
05:48 < adamramadhan> hello, 
05:48 < pringlescan> well, I parse the whole document using jsdom, sometimes I use jquery to do very specific things, it's not too hacky on the one, but it uses a bloated parsing interface
05:48 < Stephen> Have you considered hashing the remaining data after removing outliers as a means of identification
05:48 < adamramadhan> is there a callback for .match('regex',callback) ? 
05:49 < adamramadhan> i want to wait its return
05:49 < jesusabdullah> no, it's sync
05:49 < pringlescan> then on the other one I just parse all the text in the html and tease out the meta data, concat that to a string,a nd go to town on it in plaintext
05:49 < adamramadhan>  jesusabdullah: is match sync ?
05:50 < Jotade11> Hey everyone, I just started node, and am wondering where the commonly-accepted best place to start with node is.  Also, any additional tools to make dev easier?
05:50 < adamramadhan>  jesusabdullah: but why does sometimes it gets the value sometimes its not? im using regex to find parts of html
05:50 < adamramadhan> Jotade11: stackoverflow is your friend bro.
05:50 < Jotade11> I'd like to build a backend server for a db query at some point, but I'd like to get the basics down first before jumping ahead.
05:50 < Jotade11> Ok, haah :)
05:50 < pringlescan> Stephen, you're blowing my mind with the obvious stuff, but the parsing stuff is working pretty well.
05:50 <@Nexxy> adamramadhan, you can't ask a question like "is match sync" and then tell someone else to go to stackoverflow, it doesn't work that way.
05:51 < adamramadhan> well becouse i already search it everywhere and i think its sync but somehow theres something that i missed
05:51 <@Nexxy> Jotade11, express has a scaffolding tool that should prove helpful
05:51 < Stephen> pringlescan: Did you know jsdom can open files directly?
05:51 < pringlescan> PSA: NEVER USE REGEXPS TO PARSE HTML. Seriously, Node made it possible to use CSS selectors and DOM traversal to look for actual tags and if a site is SEO optimized, you will be able to scrape it up and down without writing a single regex.
05:52 < Stephen> then why are you?
05:52 < pringlescan> Stephen, no because I ignore the obvious while my head is in the clouds, you may not have taxed your brain too hard, but I already feel as though I owe you a beer, because if I do the last 3 things you said, I have a good feeling it might work.
05:53 < Stephen> Sweet, glad to be of help
05:53 < pringlescan> Stephen, I'm not going to even try to scrape the Tripod pages of general contractors in the united states. Half of them have their phone number as an image. Non of it is on the same domain and half of them are spammy pages with malware*.
05:53 < pringlescan> *Spent a whole day trying to figure out why Node was choking, it turned out my A/V software was blocking reads to infected files that has "JS exploits"
05:53 < Stephen> pringlescan: I work in Oil & Gas, I totally feel you
05:54 < Stephen> lmfao
05:54 < Stephen> That's what you get for believing NodeJS could work well in Windows
05:55 < zak_> blame the A/V software, not Windows
05:55 < braoru> anyone here already uploaded somthing to S3 with ftp ? ... I think I'm too stupid to find my uri :D
05:55 < pringlescan> Stephen… I'm on OSX… laugh if you want but when it comes to computers I prefer protection. 
05:55 <@Nexxy> protection like apple remotely wiping all of your devices for a hacker?
05:55 < Stephen> braoru: Yup, but your URI is some random number, good luck
05:55 < zak_> Nexxy: lol, I saw that article
05:55 < pringlescan> HOLD UP… all my devices? hell no. I have one apple device, lol
05:55 < Stephen> OSX is awesome
05:56 < Stephen> I'm currently on Windows 7
05:56 < adamramadhan> pringlescan: i forgot about using jsdom rather then regex, btw any recomandation jsdom for windows? cant compile it somehow.
05:56 <@Nexxy> pringlescan, do you dispute that your one apple device represents the entirety of your apple device collection?
05:56 < pringlescan> braoru, use cyberduck to log into your s3
05:56 < braoru> Stephen you know where I can find it in the unfriendly support of s3...
05:56 < Stephen> But any Linux (BSD, actually) implementation is great with me
05:56 < zak_> I love Hammers, but I'm currently using a Screwdriver
05:56 < braoru> pringlescan, I'm a linux user..
05:56 <@Nexxy> zak_, I use a hot glue gun for everything these days
05:56 < pringlescan> adamramadhan, if you like Node, do yourself a big favor, and run linux in a virtual machine. then you can use all the cool modules everyone else uses and not have an issue doing EVERYTHING. It'll be the best advice you've ever taken.
05:56 < Stephen> braoru: http://aws.amazon.com/ec2/
05:57 < zak_> Nexxy: maybe you can glue my screwdriver and hammer together?
05:57 < braoru> pff why they have choosen s3 instead of rackspace with their very nice interface .(
05:57 <@Nexxy> zak_, omg dude, brilliant
05:57 < mscdex> Windows OSX 7.10.9 "Mountain lolcat"
05:57 < zak_> haha
05:57 < braoru> Stephen, why e2c ?
05:57 < Stephen> My servers are with RackSpace
05:57 < Stephen> and proud of it
05:57 < Lorentz> pringlescan: ooooooooor just go linux already
05:57 < pringlescan> braoru, http://superuser.com/questions/21717/a-decent-s3-bucket-manager-for-ubuntu
05:57 <@Nexxy> Stephen, did you get the RS tattoo?
05:58 < braoru> mine too . ... but for a reason I don't know the project I'm working on choosed amazon
05:58 < justanewbie> http://pastebin.ca/2178884,i use this code to write record to binary file , i thought file will increment as the request arrives,but it doesn't work as my expect,only a few request that append to binary file,i'am wondering why? help me please
05:58 < Stephen> braoru: Top right corner, login, get help
05:58 < pringlescan> Lorentz, my dentist says to floss as often as you want, knowing full well if you do it every 2 weeks, you'll say "gross, i should do this more often", if you say "Do it everyday" a) you won't do it, b) if you do you won't see the point
05:58 < pringlescan> By saying use a virtual machine, he may not refuse, and will end up realizing linux = way less headaches
05:58 < Lorentz> Hmm, I floss nearly every day
05:59 < Lorentz> I also like how you use "floss" for the example
05:59 < braoru> Stephen will have a look at it..
05:59 < braoru> Stephen, thank :)
05:59 <@Nexxy> I like how you explain your "psychological trickery" infront of the very person you're trying to persuade
05:59 < Lorentz> then again I have a water jet floss pick thingy, which makes flossing trival... but very off topic :3
05:59 < justanewbie> Stephen: give me a hand ,thank you :)
05:59 < braoru> Stephen, s3cm seem to be nice :)
06:01 < Stephen> justanewbie: It's likely you're getting multiple requests opening the same file, with none/few of them able to actually write to it
06:01 < Stephen> justanewbie: Do you need separate files?
06:03 < nicholasf> hello, has anyone else had the misfortune to run into the problem on fedora/centos that the node binary is actually called nodejs and every damn npm script that wants to call /usr/bin/env node breaks? And, if so, how did you fix it pls?
06:03 < pringlescan> All I knew is that my second pair of nuts didn't descend until I ran Slackware for 2-3 years and didn't boot into Windows once. I even taught my parents how to use it… and now I feel old.
06:03 < pringlescan> nicholasf, symlink
06:03 < justanewbie> Sembiance: thank you for your response,Stephen. yep,few of them actually write to it,if don't separate,how to accomplish this,i just want to write a single file
06:03 < mscdex> nicholasf: i compile from source
06:03 <@Nexxy> pringlescan, you should get that checked out
06:04 < nicholasf> pringlescan: yeh cool
06:05 < pringlescan> nicholasf, also, if you don't like a package, you can compile it yourself and usually those hardcoded paths are ./configure options. but if you can keep using packages it's way easier to keep your system secure and up to date
06:05 < Init--WithStyle-> my NPM pack is ignoring a node_module directory that has no .npmignore file either above or below it.... how is this possible???
06:05 < Stephen> justanewbie: stream.write doesn't take a callback
06:05 < nicholasf> pringlescan: yeh cool. tbh I dont think I fully understand this issue at the moment
06:05 < pringlescan> Nexxy, I did… my examiner said that normal was (testicles.length >= 2)… are you calling it a liar?
06:05 < Stephen> justanewbie: Ok, so here's what you need:
06:05 < mscdex> pringlescan: well, i don't know about up to date... especially for centos unless you have some custom repo that keeps up with node versions quickly
06:05 < nicholasf> running /usr/bin/env node works from command line, but doing so in jenkins breaks with /usr/bin/env: node: No such file or directory
06:06 < rerooting> quick ? - does anyone know when maintenance releases will end for 6.x?
06:06 < rerooting> er sorry 0.6.x?
06:06 < mscdex> rerooting: when 0.10 is released?
06:06 < pringlescan> I'm not sure what Jenkins is but you may need to set your path in Jenkins or globally
06:06 < Init--WithStyle-> Does anyone know what I mean?
06:06 < Stephen> First: Simply queue the results of every request you get into an array.
06:06 < nicholasf> pringlescan: it's a Continuous Integration server 
06:06 < rerooting> mscdex: thanks! that makes sense - where can i find official documentation of that?
06:07 < Stephen> Second: Use the "drain" event on stream to know when it's safe to start reading from the array and writing again
06:07 < mscdex> rerooting: i don't think there's official "documentation" of that practice, but that's the way it's been so far: the previous stable branch gets maintenance updates only
06:07 < Stephen> justanewbie: Take a look at these:
06:07 < Stephen> http://nodejs.org/api/stream.html#stream_writable_stream
06:07 < pringlescan> I think you'll have better luck with searching for general information on how env variables are handled in Jenkins then here, unless one of us also uses it. 
06:08 < Init--WithStyle-> Guys i have a ghost .npmignore file in my node_modules folder somehow.. please help! :)
06:08 < Stephen> isaacs, could you please end support for 0.6.19 right this second?
06:08 < justanewbie> Stephen: Thank you for the biggest help ,I'll give it a try:)
06:08 < Stephen> We need to make someone's life hell
06:08 < nicholasf> pringlescan: sure, thanks
06:08 < pringlescan> mscdex, I've found it's easier to use whatever distro has the most users, things get fixed quicker, more tutorials, bigger community
06:09 < Stephen> Which these days means Ubuntu, wouldn't you say?
06:09 < pringlescan> I did all the "real men" use this distros when I was young and eager to a true nerd, but, I don't get a woody from compiling my own packages with different compiler optimizations anymore.
06:09 < rerooting> mscdex: ok great!  our client is a university who is all weirded out by running node on their systems, and they are convinced that deploying this application on the latest 0.6.x version.
06:09 < pringlescan> Stephen, I figured I would imply it but not say it :-)
06:10 < rerooting> * is a bad idea
06:10 < Stephen> Xubuntu
06:10 < mscdex> rerooting: 0.8.x is the current stable branch
06:10 < mscdex> rerooting: it receives the most attention
06:10 < pringlescan> Is this a bad place to say that I think Gnome3 isn't that bad and I remember the good old gnome2 days with all the cool widgets and ugly things that didn't really do much for productivity?
06:10 < nicholasf> pringlescan: thanks for your help mate, I have that problem solved now
06:10 < Stephen> rerooting: There have been some significant changes into 0.8.x, and quite a few more on the way
06:10 < Stephen> I'd go 0.8.x
06:11 < pringlescan> nicholasf, no problem, try to generalize your problem/question, i usually stumble upon answers that way
06:11 < Stephen> gnome is a great interface
06:11 < Stephen> kde gets on my nerves
06:11 < rerooting> mscdex: indeed, we only have a few fixes to support 0.8.x but don't have time to make & test them to meet their insane timeframes!
06:11 < mscdex> pringlescan: centos has a lot of users, but the repos are set for "stability", thus the old packages
06:11 < nicholasf> pringlescan: good advice
06:11 < Stephen> rerooting: Are you familiar with nave?
06:11 < nicholasf> just the end of a very long day :)
06:11 < rerooting> Stephen: yes, we use nvm
06:11 < Stephen> You can use it to run multiple versions of node on the same box
06:11 < Stephen> cool
06:12 < Init--WithStyle-> Does anyone use NPM often?
06:12 < Init--WithStyle-> here?
06:12 <@Nexxy> NPM?!
06:12 <@Nexxy> is that like
06:12 <@Nexxy> some sort of... acronym?
06:12 < pringlescan> Nude Pix Massaging?
06:12 < pringlescan> … yeah, but it's kind of off-topic
06:12 < Init--WithStyle-> ?
06:12  * Nexxy awkward glance
06:12 < Stephen> Naughty Parts Messageboard
06:12 < Init--WithStyle-> there is no .npm room i can find here
06:12 < smathy> Init--WithStyle-, yes, everyone does.
06:13 < pringlescan> smathy, you're too kind.
06:13 < smathy> Init--WithStyle-, just ask your question.
06:13 < Init--WithStyle-> I have an incredibly frustrating (bug?) 
06:13  * smathy no troll
06:13 < Stephen> lol
06:13 < Init--WithStyle-> when I npm pack my directory, it packs everything except socket.io's node_modules folder
06:13  * Jotade11 facepalms at smathy.
06:13 < Init--WithStyle-> however
06:13 < Stephen> isaacs has #npm registered
06:13 < pringlescan> BUT, help every n00b on IRC… half of them are little kids learning to program, and if the people on IRC didn't help me when I learned Perl I would have never remembered how to manually escape quotes in notepad before I knew what an IDE was.
06:13 < rerooting> Stephen: we actually accidentally installed it on their systems on 0.8.4 a while back and everything worked fine except for a bug with node-formidable, we had to roll back with nvm
06:13 < Init--WithStyle-> when I copy that node_modules folder and put it one level up in the folder structure, npm pack packages it
06:13 < Init--WithStyle-> how the **** is that possible??
06:14 < smathy> Stephen, with all of 7 people in it :)
06:14 < Init--WithStyle-> Any ideas??
06:14 < pringlescan> … or I just pretend that so I feel obligated to help anyone i'm able to… but IRC and taught me the things you can't read in books, like RTFM and manpages
06:14 < rerooting> Stephen mscdex thanks a bunch!  I think I'm going to encourage making the fixes for 0.8 b/c this uni moves so slow as it is
06:14 < Stephen> Init--WithStyle-: Shot in the dark: check socket.io's & node_modules permissions, as well check socket.io's package.json
06:15 < addisonj> hrm... this is weird...
06:15 <@konobi> pringlescan: that's what q{ qq{ qw{ and qr{ are for though =0P
06:15 < Stephen> Heh, I first began conversating with my natural mother over IRC
06:15 < Init--WithStyle-> Stephen: i've never really messed around with permissions on a mac before.. :D
06:15 < Stephen> She was an IRCOp over at BeyondIRC
06:16 < addisonj> If i use exec, my thing works, but when I switch to spawn, I get execvp error, does spawn do something with the path?
06:16 < Init--WithStyle-> Stephen: what would I be looking for in the socket.io package.json?
06:16 < Stephen> Init--WithStyle-: Erg.... they are the same as Linux... if you are unfamiliar, just get a terminal up, goto the directory, and type chown -R username:username *.* and pray
06:16 < pringlescan> konobi, it was tough love
06:17 < Stephen> Init--WithStyle-: I have no clue about package.json, it was a shot in the dark
06:17 < pringlescan> Stephen, you're a cylon?
06:17 < Stephen> Silicon in the blood
06:17 < Stephen> I'm a programmer
06:17 < pringlescan> that sucks, that means if we try to paint your blood blue it won't take real well.
06:18 < karlbright> Stephen: that's not healthy.
06:18 < pringlescan> anyway i need to go implement stupid obvious fixes. 
06:18 < Stephen> Like my father, grandfather, mother, and uncle before me
06:18 < Stephen> My grandmother, rest her soul, had a masters in both Mathematics and Psychology
06:19 < Stephen> The best part? I didn't know ANY of them growing up
06:19 < Stephen> And STILL I ended up in this industry.
06:19 < chakrit> the guy's still here with even more packages: https://npmjs.org/profile/flashsoft
06:19 < pringlescan> My grandpa soldered the first computers RCA made and he died before he a) told me b) showed me how to solder 3) i knew him
06:19 < Init--WithStyle-> Stephen: the thing is... it's ignoring the *entire* node_modules directory.. everything under there
06:19 <@Nexxy> Init--WithStyle-, that's expected behaviour
06:20 < pringlescan> Stephen, so what's the difference? It was in your silicone then.
06:20 < Stephen> Init--WithStyle-: go to the socket.io directory and type this:
06:20 <@Nexxy> Init--WithStyle-, just use 'npm install'
06:20 < smathy> Init--WithStyle-, probably doing everything in your package.json
06:20 < Stephen> ls -last node_modules
06:20 < rerooting> speaking of cylons, http://news.discovery.com/tech/brain-dish-flies-plane-041022.html raiders are about 3 years out now
06:20 < Stephen> and paste it here please
06:20 < Lorentz> my grandfather taught me wonders if WD40 and how it should be liberally applied to any machine if it doesn't seem to work
06:20 <@Nexxy> (in a paste service)
06:20 < chakrit> also more chinese on npm: https://npmjs.org/profile/random
06:20 < Lorentz> maybe that also includes computers
06:21 < Init--WithStyle-> Nexxy: npm install doesn't do anything because I don't have any dependancies in my package file
06:21 < Init--WithStyle-> instead of dependiences, I just have all of the neccessary files in my directory
06:21 < Init--WithStyle-> when i NPM pack, it packages everything in the directory EXCEPT the node_modules folder of socket.io
06:21 < Benvie> you need to let the computer rest
06:21 < Stephen> Init--WithStyle-: Does socket.io list any dependancies in it's package.json?
06:21 < Benvie> that always fixes it
06:22 < Stephen> Percussive Maintenance
06:22 < Init--WithStyle-> Stephen: yes, 3 of them, the ones that already exist in it's node_modules folder
06:22 < Stephen> Could you pull up the terminal and issue that command?
06:22 < Stephen> It will tell me if it's a permissions issue
06:22 <@Nexxy> just make sure not to put a / infront
06:22 < Stephen> ls -last node_modules
06:22 <@Nexxy> oh, that command
06:23 < Stephen> Nah, I want him to do the ls, not the chmod
06:23 < Benvie> one time I spilled a whole cup water directly on my computer and I went to bed and it was fine when I woke up
06:23 < rerooting> chakrit: looks like this guy is creating BS npm modules, including taking the liberty of grabbing javascript and nodejs
06:23 < Init--WithStyle-> Ok i ran Ls
06:23 < Init--WithStyle-> my username is on top will all permissions...
06:23 < Stephen> Ok, run this:
06:23 < Stephen> ls -last node_modules
06:23 < Stephen> It should only return 1 line
06:23 < Jotade11> sudo rm -rf.
06:24 < Jotade11> What?
06:24 < Jotade11> :P
06:24 < Init--WithStyle-> so funny
06:24 < Init--WithStyle-> ..
06:24 < Stephen> Jotade11--
06:24 < Init--WithStyle-> it returns information about each of the dependancy folders
06:24 < chakrit> rerooting: since yesterday.. yeah.
06:24 < Init--WithStyle-> socket.io-client etc..
06:24 < Stephen> hmm... no
06:25 < Init--WithStyle-> drwxr-xr-x@   on those
06:25 < Stephen> Who owns it?
06:25 < Stephen> group and user
06:25 < pringlescan> Uncle sam :: Government
06:25 < Stephen> does it match your own?
06:25 < Init--WithStyle-> yes
06:26 < Stephen> Is node_modules a symlink by chance?
06:26 < rerooting> hey so speaking of socket.io, who has been playing with derby.js and/or racer?
06:26 < Init--WithStyle-> Stephen: no
06:26 < Init--WithStyle-> also
06:26 < Init--WithStyle-> when I run NPM pack inside the socket.io folder, it doesn't pack the node_modules
06:26 < Init--WithStyle-> why?
06:27 <@Nexxy> because npm isn't designed to pack modules
06:27 <@Nexxy> IIRC
06:28 < Init--WithStyle-> well then nodejitsu is screwed
06:28 < Init--WithStyle-> because if I can't pack this thing's modules how can I run my app there... 
06:28 <@Nexxy> Init--WithStyle-, with jitsu?
06:28 < Init--WithStyle-> jitsu deploy uses npm pack to tarball everything
06:28 < Init--WithStyle-> the problem i'm having right now is that npm pack isn't packing these node_modules so my entire app is failing
06:29 < rerooting> Init--WithStyle-: do you have a proper package.json for your project? with tested version fixing/etc?
06:29 < Stephen> Init--WithStyle-: Are you setting the bundleDependencies list?
06:29 < jesusabdullah> Init--WithStyle-: npm won't save deps unless you bundle them
06:30 < jesusabdullah> Init--WithStyle-: http://package.json.jit.su
06:30 < Init--WithStyle-> Stephen: how do you set the bundleDependencies list?
06:30 < jesusabdullah> Init--WithStyle-: http://package.json.jit.su says how
06:30 < Init--WithStyle-> yea, that doesn't give any information on how to actually set up bundelDependencies correctly
06:30 < jesusabdullah> Init--WithStyle-: Yes it does.
06:30 < jesusabdullah> Init--WithStyle-: Please reread.
06:31 < Init--WithStyle-> I have been looking at that for multiple hours, it gives no example of how to actually set up the array
06:31 < Stephen> Ok, so do this:
06:31 < jesusabdullah> Init--WithStyle-: what do you mean, "set up the array" ?
06:31 < Init--WithStyle-> Do I just need to put the names of the dependencies?? 
06:31 < Init--WithStyle-> I don't understand how to actual format it
06:31 < rerooting> oh nice, i've always manually maintained my package.json files… npm bundle looks really cool
06:31 < jesusabdullah> Init--WithStyle-: yes.
06:32 < Init--WithStyle-> I can't find any examples of an actual bundleDependencies entry in a package.json file
06:32 < Init--WithStyle-> can you give me an actual example please?
06:32 < Stephen> Sure
06:32 < jesusabdullah> Init--WithStyle-: bundledDependencies: [ "socket.io" ]
06:32 < Stephen> Ok, so do you have a package.json file right now?
06:32 < jesusabdullah> Init--WithStyle-: done.
06:33 < rerooting> you can also do "man npm bundle" or "npm bundle --help" for more info
06:33 < Stephen> pastebin your current package.json
06:33 < Stephen> I'll edit with what you need
06:33 < Init--WithStyle-> bundledDependencies: [ "socket.io, somethingelse" ] 
06:33 < Init--WithStyle-> like this?
06:34 < thealphanerd> does anyone in here have much experience with i2C?
06:34 < Init--WithStyle-> http://pastebin.com/7GsknsBW
06:34 < jesusabdullah> Init--WithStyle-: No, each dep gets quotes around it
06:34 < Init--WithStyle-> Do I need to add the socket-io.client as a bundled dependency?
06:34 < jesusabdullah> Init--WithStyle-: it's JSON
06:34 < Init--WithStyle-> oh
06:35 < rerooting> thealphanerd: no but it looks really interesting!
06:35 < thealphanerd> plug and play if done right
06:36 < thealphanerd> but it doesn't seem like any packages have been published to do it
06:36 <@Nexxy> thealphanerd, node-firmata has I2C support
06:36 < Stephen> Init--WithStyle-: What is your package's name?
06:36 < thealphanerd> orearty
06:36 <@Nexxy> I haven't used it myself
06:36 <@Nexxy> but it's there :)
06:36 < Stephen> I'm writing up the config for you
06:36 < Init--WithStyle-> "gametest"
06:36 < rerooting> thealphanerd:  https://github.com/jgautier/firmata/ seems to handle i2c devices
06:36 <@Nexxy> that's the one
06:37 < thealphanerd> peaking right now
06:37 < jesusabdullah> what's peaking?
06:37 < jesusabdullah> white rabbit?
06:37 < Init--WithStyle-> ok my bundle Dependencies look like this now
06:37 < Init--WithStyle-> http://pastebin.com/aXH5msTr
06:37 <@Nexxy> when you get to the height of your high
06:37 < rerooting> oops! haha.  Stephen already had that one
06:37 < Init--WithStyle-> It still ignores the node_modules folder and doesn't feel like packaging it though
06:38 < jesusabdullah> Init--WithStyle-: you also have to remove the dep from your "dependencies" field
06:38 < thealphanerd> rerooting: are you sure this does i2c?
06:38 < Stephen> Init--WithStyle-: Ok, so run this command in your gametest directory:
06:38 < Init--WithStyle-> jesusabdullah: I have no dependencies in the dep field
06:38 < jesusabdullah> Init--WithStyle-: could it be that's why your app wouldn't deploy??
06:38 < rerooting> https://github.com/jgautier/firmata/#methods
06:38 < Stephen> npm config set gametest:save true
06:39 < Init--WithStyle-> jesusabdullah: No, because I have all of the neccessary dependencies "bundled" (existing) in my project directory
06:39 < Stephen> npm config set gametest:save-bundle true
06:39 < rerooting> thealphanerd: allows you to do sendI2CConfig(delay) sendI2CWriteRequest(slaveAddress,[bytes]) sendI2CReadRequest(slaveAddress,numBytes,function(data))
06:39 < jesusabdullah> Init--WithStyle-: nope. You have to add it to your package.json .
06:39 < Init--WithStyle-> It just decides to ignore the node_modules folder of the socket.io directory
06:39 < thealphanerd> taking a peak
06:39 < jesusabdullah> Init--WithStyle-: it's deciding that because that's what you're telling it to do.
06:39 < Init--WithStyle-> jesusabdullah: it is packing everything else though...
06:39 < rerooting> thealphanerd: i think you mean peek! peaking is what you do when your on LSD
06:39 <@Nexxy> DON'T LISTEN TO HIM, JSUT ARGUE INSTEAD
06:39 <@Nexxy> THAT WILL SOLVE YOUR PROBLEM
06:39 < Init--WithStyle-> jesusabdullah: it is packing mongodb node_modules fine
06:39 < thealphanerd> rerooting: true
06:40 < Init--WithStyle-> It makes 0 sense that it would choose to ignore ONLY the socket.io node_modules folder
06:40 < Init--WithStyle-> there are 5 other folders in this node_module directory, and the only ones that are being ignored are the ones inside of socket.io
06:40 < thealphanerd> rerooting: I don't think this is for doing i2c with the device running node though
06:40 < jesusabdullah> Init--WithStyle-: npm will ignore anything in the node_modules folder you don't explicitly identify as a bundled dependency.
06:41 < Init--WithStyle-> well that's not correct, because I have nothing identified as a bundled dependency and it is packing everything in the node_modules folder 
06:41 < Init--WithStyle-> except for stuff under socket.io
06:41 < thealphanerd> rerooting: I'm going to look at the source… but I think it is to send a message to have the arduino send the i2c message… rather than to do i2c on a local sda / scl
06:41 < rerooting> thealphanerd: I'm no expert, but it looks like firmata is a node module for interfacing with arduino, yeah i don't think its local
06:41 < thealphanerd> I'm only seing source to do serial communication
06:41 < thealphanerd> rerooting: I'm using node on the raspi
06:42 <@Nexxy> thealphanerd, that is the case
06:42 < Init--WithStyle-> jesusabdullah: what it is doing is impossible
06:42 < Init--WithStyle-> or bugged
06:42 < thealphanerd> I think i just need to find a good c++ i2c lib or command line app
06:42 < jesusabdullah> If you say so
06:42 < thealphanerd> and write bindings
06:43 < rerooting> thealphanerd: yeah you'll probably want to do that.  heres the firmata docs if you are interested though http://jgautier.github.com/firmata/
06:43 < thealphanerd> I'm familliar with the arduino project
06:43 < Stephen> later folkas
06:43 < thealphanerd> isn't anything in there that will be helpful though unfortunately
06:43 < Stephen> I'm out
06:43 <@Nexxy> bai Stephen 
06:43 < thealphanerd> but thank you for the help :D
06:43 <@Nexxy> tc
06:44 < Init--WithStyle-> jesusabdullah: can you explain otherwise how my packet.json with no dependencies or bundleDependencies stated is still packing ./server/node_modules when npm pack is run, except for ./server/node_modules/socket.io/node_modules  ?
06:45 < Init--WithStyle-> this is stupid
06:45 <@Nexxy> Init--WithStyle-, try deleting the .tgz
06:45 <@Nexxy> and do it again
06:45 < Init--WithStyle-> I just renamed the socket.io package.json file to something else and now npm pack is packing everything correctly
06:46 < Init--WithStyle-> Nexxy: when the socket.io package.json file doesn't exist npm pack correctly packs everything
06:46 < Init--WithStyle-> how the heck would that happen?
06:47 <@Nexxy> Init--WithStyle-, maybe you should have used Init--WithCompetence instead?
06:47 < rerooting> so no derby.js folks here?  i'm planning on building a simple trello clone + realtime capability using derby and making it freely available on github.  i would highly suggest looking into derby + racer if anyone is tired of wiring together client side mvc with express and socket.io.
06:47 < Init--WithStyle-> Perhaps
06:48 < Init--WithStyle-> haha and now the problem becomes the package.json file of the socket.io-client
06:49 < Init--WithStyle-> i'm over package.json files just about
06:49 < rerooting> we just need some more folks in the dev community for derby and racer.  there is now auth and acl, also a bootstrap ui helper module
06:49 < rerooting> er 'component'
06:51 <@Nexxy> Init--WithStyle-, why are you packing things yourself anyway?
06:51 < Init--WithStyle-> i'm not
06:51 < Init--WithStyle-> jitsu is
06:53 < chakrit> rerooting: that is interesting. always find backbone to be overkill
06:53 < rerooting> chakrit: yes, derby is great because you don't need to duplicate server/client mvc architecture
06:54 < chakrit> yeah, that's why i was looking for ssjs stuff in the first place before there was node
06:54 < rerooting> chakrit: also, the way the DOM and assets are handled are really advanced
06:55 < mscdex> i looked at derby, but no support for sql databases :\
06:55 < rerooting> mscdex: actually, folks are working on that for racer
06:55 < mscdex> rerooting: link?
06:56 < mscdex> last i read they said they had no plans to support it in racer
06:56 < chakrit> rerooting: do you think it's good enough right now to run a real production site?
06:57 < rerooting> chakrit: it's mostly there, theres a few kinks and features that would be nice to have, but I have run some pretty extensive test runs.  auth and ACLs need some love, but otherwise it's pretty damn solid
06:57 <@Nexxy> I remember when MVC was relevant
06:57 <@Nexxy> good times.
06:57 < rerooting> mscdex: looking for the link, there might not be code yet but there are folks who are interested in that
06:57 < chakrit> mscdex: there is mention of postgres in the racer readme on github
06:58 < mscdex> rerooting: i know there are lots of people interested, but that doesn't mean much it seems :-)
06:58 < rerooting> well, racer is supposed to be a database agnostic ORM, just most of the work has gone into Mongo
06:59 < rerooting> also, it's worth mentioning that everyauth support is likely around the corner as one of the main Derby maintainers, Brian, authored everyauth
06:59 < mscdex> chakrit: that's HSTORE
07:00 < rerooting> mscdex:  https://groups.google.com/d/topic/derbyjs/egfCftU_Wpc/discussion
07:00 < chakrit> ah.. 
07:02 < mscdex> rerooting: i doubt we'll see sql support, they're pretty dead set on relying on common nosql features
07:03 < rerooting> yup, that seems to be the case, which is fine by me! really, the orm is what's most important and the database underneath doesn't matter very much, except from an organizational/legal perspective, or with cranky sysadmins
07:04 < mscdex> eh? it does matter if your data is primarily relational :-)
07:07 < rerooting> mscdex:  well i don't want to go too far down this road, but in my opinion you can use relational or document oriented schemas for almost any use case.  there are ways of using databases like mongodb that make RDBMS moot, IMHO
07:07 < rerooting> mscdex: my dad is a MSSQL dev, so we get into debates about this all the time! haha
07:09 < rerooting> mscdex: racer is very specific in the way it wants to operate as an ORM, so yeah i think its something that will stay the nosql route, unfortunately for RDBMS peeps
07:09 < rerooting> mscdex: sorry though, i thought i had read somewhere about postgres support.  i mean, theoretically a racer-db-postgres driver could be written, but it would be really difficult
07:10 < rerooting> i mean, each element in the DOM is assigned a BSON id tag, so… haha
07:13 < pringlescan> Stephen, you still here?
07:17 < rerooting> i think i scared/bored everyone away talking about derby :(
07:18 <@Nexxy> yep
07:19 < pringlescan> On node 0.8.4 I keep exceeded my call stack somehow (utils.js) is giving a range error on a regexp I'm not even calling… Can someone take a look at this for me? https://gist.github.com/3312182 its 70 lines of code.
07:19 <@Nexxy> no, jeffrey. I will not.
07:21 < pringlescan> Nexxy… I screwed up the loop logic, but I think once we fix it, it'll still die. :-|
07:22 < pringlescan> this is my 3-4th strategy of trying to loop over these and I keep getting the weird regexp error even without cutting and pasting any code
07:22 < tasslehoff> My getting-started-with-node.js task is to create a static file server where you can browse and download folders and files. Any module you can recommend starting with?
07:22 < tasslehoff> And, is nodeguide.com a good place to learn the basics?
07:23 < rerooting> tasslehoff: express 3 is a really great module to get started with for building web applications
07:24 < pringlescan> I'm just baffled as to what I'm doing that calls a regexp from utils
07:24 < rerooting> tasslehoff: that will handle your routing, rendering templates, access, etc.
07:25 <@Nexxy> pringlescan, it's your console.log I believe
07:25 <@Nexxy> I could be wrong
07:26 <@Nexxy> fwiw, console.log accepts printf-style arguments
07:26 < tasslehoff> rerooting: thanks, I will take a look
07:26 < pringlescan> Nexxy, not that, I commented out console.log and now I think we may have found the culprit...
07:27 < pringlescan> RangeError: Maximum call stack size exceeded moves to: task.callback.apply(task, arguments);
07:28 < nonuby> Im seeing child_process emit exit on the instance, before emitting data on inst.stdout, is this expected?
07:28 < rerooting> tasslehoff: heres a good tut on express 2 http://www.hacksparrow.com/express-js-tutorial.html
07:28 < nonuby> i.e. cpInst.on('exit') is called and then cpInst.stdout.on('data') is called
07:29 < rerooting> tasslehoff: heres some stuff on express 3 http://www.joezimjs.com/javascript/getting-started-with-node-js-and-express-3/
07:30 < pringlescan> Nexxy, so is my code stupid, or is there actually a bug in the async module? given that I shoudn't run through the call stack size with only 50 concurrency?
07:30 < nonuby> any instrinically blocking code inside async constructs can cause problems e.g. console.log
07:31 < nonuby> at least in 0.6x that what i observe, call stack blown
07:34 < rvagg> pringlescan: doubtful there's a bug in async, very likely your code, calling itself
07:35 < pringlescan> I'm all about it being my fault, but my code does nothing at this point other than populate async, and it's throwing errors...
07:35 < pringlescan> even when my code does nothing it throws errors in async, so i'm really confused about it, I've recoded it from the ground up many times :-(
07:37 < Benvie> async stuff shouldn't throw because there's no way to asynchronously catch
07:38 < Benvie> if it does throw then you can't use it very well for async purposes
07:38 < pringlescan> why would an empty function throw a stack error/
07:39 < Benvie> it wouldn't an can't
07:39 < Benvie> the only thing that can throw is a throw expression
07:39 < Benvie> or is it a statement
07:39 < Benvie> statement
07:40 < Benvie> throw statement throws given expression
07:40 < pringlescan> Okay, so, going along with your theory, I comment the one line in async.js that's throwing the error, at which point Node throws an error that regurgitates a Joyent trademark...
07:40 <@Nexxy> pringlescan, rofl
07:41 <@Nexxy> pringlescan, what do you see on line 61?
07:41 < tasslehoff> rerooting: express seems really nice, but I guess you know that ;)
07:42 < pringlescan> in my gist? what revision are you on
07:42 <@Nexxy> Idon't really think that async is the problem
07:42 < rerooting> tasslehoff: yes express is really great, and widely used, and is for the most part the lingua franca for node.js web applications.  it's also a great conversion point for ruby devs who like sinatra ;)
07:42 < Benvie> where is this gist?
07:42 < Benvie> found it
07:44 < pringlescan> seriously >_<
07:44 < pringlescan> how ironic is that emoticon
07:44 < pringlescan> how do you make a dunce cap?
07:44 < pringlescan> wait… that wasn't it
07:44 < pringlescan> what is the error?
07:44 < rerooting> tasslehoff: also, when you are thinking of persistence, there are many options.  if you come from a mysql/postgres background you might want to stick with it, however if you want to wrap your head around nosql, i highly suggest it!  mongodb is a great place to start, and mongoose is a good ORM that abstracts it in a simple way
07:45 <@Nexxy> mongo is great for data you can afford to lose
07:45 < Benvie> it results in a recursive loop
07:45 < Sri19> Nexxy, that sounds a bit exxagerated
07:45 < pringlescan> how?… I don't understand.
07:46 < Sri19> :-?
07:46 < tasslehoff> rerooting: I come from a c/c++/python/linux-kernel/embedded background, so this is tabula rasa for me
07:46 <@Nexxy> Sri19, O.K. :)
07:46 < Sri19> i mean yeah its not ACID
07:47 <@Nexxy> I'm not about to save you from a valuable lesson
07:47 < Sri19> but its not that it would routinely fail to write 
07:47 < Sri19> :P
07:47 < Sri19> no please tell me more
07:47 < pringlescan> I need a valueable lesson first… because I'm entirely lost
07:47 <@Nexxy> DURABLE WRITES?! LOL WHAT'S THAT?!
07:48 < Sri19> for instance? when would it fail? power outage
07:48 < pringlescan> oh!!! it can never finish because I don't check if there's work to be done before I call it again
07:48 < Sri19> ?
07:48 < pringlescan> but even if I fix that, it'll still throw the error
07:48 < pringlescan> it dies at 4,33 of 98,000
07:48 < pringlescan> *4,333
07:48 < Benvie> I can't tell you exactly because I haven't use this library. But what I can tell you is that the error you saw indicates that a loop is being caused where a function ends up calling itself in the same stack. And in this code I see some wankery with lengths that could likely explain it, where you keep attempting to do a task that ends up at the same starting point
07:49 < Benvie> it never gets to any async part or else a reaching MAXSTACK wouldn't happen
07:49 <@Nexxy> pringlescan, perhaps you'd be better off .pop()ing the data off of your array
07:49 <@Nexxy> instead of trying to keep track of pointers
07:50 < [AD]Turbo> hi there
07:51 < pringlescan> I'm trying to take pointers, and if you're saying to get rid of my pointers in a pointer, well that couldn't make more sense.
07:51 <@Nexxy> lol ;P
07:51 < Benvie> what id the code sequence in this code that only requires another function, where the result is circular
07:52 < Benvie> is it in this or does it hit another library? I'm not sure I just know it's there since that's the only cause for hitting MAXSTACK
07:52 < Benvie> like
07:52 < Benvie> v8> function overflow(){ overflow() }; overflow()
07:52 < purr> Benvie: RangeError: Maximum call stack size exceeded
07:52 < pringlescan> my code? I'm just trying to get the skeleton to work
07:52 < Benvie> just less obvious
07:53 < pringlescan> something weird keeps happening a few thousand items in, very hard to debug
07:54 < Guest32089> hello all.  what's the best way to get help with installing node.js?
07:54 < Benvie> oh
07:54 < Benvie> console.log has an impact here?
07:54 < rerooting> tasslehoff: coming from a *nix background, you'll appreciate this series of articles on daily's.com: http://dailyjs.com/tags.html#unix
07:54 <@Nexxy> Guest32089, you could start at http://nodejs.org/
07:54 < Benvie> then you're running into an issue with either string formatting recursion, or stdout recursion
07:55 < Benvie> if you have an error in someerror.toString, and you try to throw someerror, and node tries to print it to stdout
07:55 < Benvie> you've created a circular error loop
07:55 < Guest32089> long story short: i had 0.6.13 installed, i uninstalled it, now i'm getting an error when trying to install 0.8.6.
07:55 < rerooting> Guest32089: I would suggest using nave or nvm to manage your node versions!
07:56 < Guest32089> nvm is giving the same error
07:56 < rerooting> Guest32089: whats your environment?
07:56 < Guest32089> the error is supposedly python related but....
07:57 < Guest32089> i installed 0.6.13 with the same versions of python
07:57 < rerooting> ah! yes.  for example, if you are on centOS, you'll probably have to upgrade to python 2.7 i think?
07:57 < rerooting> thats off the top of my head
07:57 < Guest32089> i have python 2.4.3 and 3.2.3
07:58 < rerooting> Guest32089: whats your OS?
07:58 < Guest32089> centos/rhel
07:58 < Guest32089> i see where they say u need python 2.6 or 2.7 but....
07:59 < Benvie> until ES6 js has basically no concept of meta-level shifting. So an Error is a regular object in js and Error.prototype.toString can cause errors, and those errors will usually be recursive
07:59 < Guest32089> like i said, i installed 0.6.13 w/o 2.6 or .27
07:59 < rerooting> ah yes, I'm pretty sure for 0.8.6 you specifically need 2.7
07:59 < rerooting> that documentation is slightly outdated, for 6.15 i think, from the github wiki
07:59 < Benvie> v8> Error.prototype.toString = function() { throwerror() }
07:59 < purr> Benvie: function () { throwerror() }
08:00 < Benvie> v8> Error.prototype.toString = function() { throwerror() }; throwing
08:00 < purr> Benvie: ReferenceError: throwing is not defined
08:00 < Benvie> hmm
08:00 < Benvie> v8> ReferenceError.prototype.toString = function() { throwerror() }; throwing
08:00 < purr> Benvie: ReferenceError: throwing is not defined
08:00 < Benvie> must be using another frame or something
08:00 < Guest32089> can i make python 3.2.3 emulate 2.7?
08:00 < Benvie> oh wait no v8 fixed this I think
08:00 < pringlescan> guys… I'm using pop now and in drain I check to make sure there's still work to be done… but I still have the same error :-( https://gist.github.com/3312182
08:02 < rerooting> Guest32089: not sure
08:02 < rerooting> Guest32089: i'm looking around here.  I've gotten it running on CentOS recently, I'm pretty sure I had to compile python 2.7 :(
08:04 < rerooting> Guest32089: hmmm actually, python 2.5 might be ok
08:04 < rerooting> Guest32089: check this out http://www.robertsworld.org.uk/blog/31/installing_node_js_0_8_under_centos_5_8
08:04 < Guest32089> ok, but i know i solved this problem before w/o 2.5, .6 or .7
08:04 <@Nexxy> pringlescan, just out of curiousity; what happens when you change the anonymous worker function into a named one?
08:05 < pringlescan> Nexxy, same thing
08:06 < pringlescan> I don't understand… I'm really baffled I've been trying to fix these for days. I just assumed my input was tainted and that's why they didn't work, but it turned out the async worker wasn't working right. Now I empty out all of my code and try to make just the worker work and it fails immediately...
08:07 < rerooting> Guest32089: I wish I could inspect the box where I have 0.8.15 running on CentOS but its under IP based auth and I am at home and not at work :(
08:08 <@Nexxy> pringlescan, try doing some dry runs
08:08 < rerooting> or 0.8.4 my bad i probably should go to sleep :/
08:08 < pringlescan> … eh? I can't even get the worker code to work and the errors are less than helpful. code I didn't even write is throwing regexp errors that cause stack failures.
08:09 < Benvie> people laugh at it, but https://github.com/mattdiamond/fuckitjs/ works better than you think
08:09 < Benvie> keep deleting shit until it does/doesn't work
08:10 < Benvie> whatever is the opposite of where you want to be
08:10 < rerooting> Benvie: love it!
08:10 < pringlescan> Benvie, I've done that by hand, and it doesn't work :-( 
08:11 < pringlescan> but thanks for the lulz
08:11 < rerooting> Benvie: reminds me of working with Titanium - delete, refactor, recompile, facepalm
08:11 < Benvie> lol
08:11 < Benvie> anyway it's probably an error with your interaction with the apis you're using
08:11 < pringlescan> from Appcelerator? ever try to run that on Windows? lol
08:11 < Benvie> if you can't figure out why it's breaking
08:11 < pringlescan> in my whopping 70 lines of code?
08:12 < Benvie> and yeah that's why I made https://github.com/appjs/appjs
08:12 < pringlescan> it doesn't even do anything
08:12 < Benvie> your code uses other stuff
08:12 < Benvie> async
08:12 < rerooting> pringlescan: oh no haha.  linux and osx are the only environments ill bother to run crapcellerator in. oooh did i say that?
08:12 < Benvie> I don't know how that works
08:12 < pringlescan> rerooting, that's how I ended up getting started with osx
08:13 < rerooting> pringlescan: same here! i bought an osx machine so i could run Xcode, golden vendor lockin
08:13 < Benvie> making appjs just makes me hate macs more
08:14 < rerooting> Benvie: ooh nice!  i've looked at this before
08:14 < pringlescan> Benvie, what would it take to get a working example with async that works with 100k batch jobs?
08:15 < Benvie> someone who knows how that module works or cares to learn how it works probably
08:15 < Benvie> it's probably a small error
08:15 < pringlescan> what do you use for flow control?
08:15 < Benvie> 10 or 10000 is the same thing
08:16 < Benvie> I made objects which represent a discrete thing, I put the event binding in the constructor, and I use self
08:16 < Benvie> the state is on the object itself
08:17 < pringlescan> I need more sleep. Is node depressing to debug or is it me
08:17 < pringlescan> I never found normal javascript in the browser hard to debug...
08:17 < Benvie> if I need to initiate something that's async on the object I do it the same
08:18 < pringlescan> why would I call process.nextTick()? just wondering some people who have stack problems do that
08:18 < Benvie> you do that when you want to allow other code to run
08:18 < Benvie> but you know something will be ready essentially immediately
08:19 < Benvie> you're hitting a stack overflow yes/
08:19 < Benvie> you're casuing self recursion due to bad logic one way or another
08:19 < pringlescan> … RangeError: Maximum call stack size exceeded
08:19 < Benvie> it may or may not be code you know about
08:19 < Benvie> yeah
08:19 < Benvie> it's a circular loop
08:19 < pringlescan> then why does it die before the job is done?
08:20 < Benvie> the case I described, which I have experienced, is when an error itself causes an error
08:20 < Benvie> so it recursively errors and calls itself
08:20 < pringlescan> thanks for your patience
08:20 < Benvie> if you hit that error then it's happening exactly in that framestack
08:20 < Benvie> it never has the opportunity to stop executing
08:21 < Benvie> just circularly calls itself indirectly
08:21 < sriley> pringlescan: to debug you are using node-inspector right?
08:22 < Benvie> RangeErrors generally aren't helped much by debuggers
08:22 < pringlescan> sriley, tell me about this node-inspector you speak of
08:22 < pringlescan> I use webstorm from jetbrains...
08:22 < Benvie> they just shit their pants because the stack drops out at a few thousand self-calls in
08:23 < sriley> well it gives you the webkit webinspector debugger
08:23 < sriley> slap a break on exception see where it breaks look at the stacktrace
08:24 < Benvie> >> try { var x = function(){ x() }; x(); } catch(e) { e }
08:24 < purr> Benvie: (object) {arguments: [], message: (Getter/Setter), stack: undefined, type: 'stack_overflow'}
08:25 < pringlescan> I'm trying to figure out how to do that it seems just to let me break on line numbers
08:25 < Benvie> v8> try { var x = function(){ x() }; x(); } catch(e) { e }
08:25 < purr> Benvie: (object) {arguments: [], message: (Getter/Setter), stack: undefined, type: 'stack_overflow'}
08:25 < Benvie> v8> try { var x = function(){ x() }; x(); } catch(e) { e.message }
08:25 < purr> Benvie: (string) 'Maximum call stack size exceeded'
08:25 < Benvie> stack: undefined
08:26 < rerooting> oh hey shit, just discovered that trello's server is built on node.js
08:26 < rerooting> i can't wait to rub that in with my ruby friends who use it obsessively!
08:26 < rerooting> http://blog.fogcreek.com/the-trello-tech-stack/
08:26 < Benvie> ruby is for people who don't know about node
08:27 < Benvie> well rails, but ruby too
08:28 < sriley> rails makes me shudder, 2.hours.from_now
08:28 < rerooting> yes.  the argument that node is not for production applications is pretty much moot at this point
08:28 < pringlescan> Break on exception button is hidden by default in  a dropdown
08:28 < sriley> how is hours an object of an integer :/
08:28 < Benvie> >> new Number(100)
08:28 < purr> Benvie: (object) 100
08:29 < Benvie> >> var _100 = new Number(100); _100 === 100; _100 == 100
08:29 < purr> Benvie: (boolean) true
08:29 < Benvie> >> var _100 = new Number(100); [_100 === 100, _100 == 100]
08:29 < purr> Benvie: (object) [false, true]
08:29 < Benvie> =D
08:29 < rerooting> haha!
08:30 < sriley> dont even think about adding an hours to the Object prototype to mimic rails!
08:30 < Benvie> >> [0 === -0, 1 / 0 === 1 / -0]
08:30 < purr> Benvie: (object) [true, false]
08:32 < rerooting> from what i can tell, ruby/rails/sinatra folks are getting deeper and deeper into javascript, and once they discover express.js they do a double take and say 'what the fuck am I doing?'
08:33 <@Nexxy> and then they're like COFFEESCRIPT?! WHERE HAVE YOU BEEN ALL MY LIFE?
08:34 < rerooting> haha! yup.  i love doing npm/gem side by side with ruby devs. 'oh hey i already generated my app scaffolding, are you still messing with bundler?'
08:36 < rerooting> ok off i go, its 430 am here.  this is a great IRC channel
08:36 < rerooting> !!
08:37 < Benvie> I am disagreements with the last few lines of exchange
08:37 < Benvie> but I like to voice disagreement with code
08:38 < rerooting> oh regarding ruby/rails?
08:38 < rerooting> yeah i'm not a huge fan of coffee script, but i can see why people like it
08:38 < Benvie> I just dislike connect/express
08:38 < Benvie> ambivilent about coffeescript generally but I wasn't thinking of that
08:39 < rerooting> ah yeah, its great for general purpose.  express has made node really easy for me, as a mostly frontend person
08:39 < sriley> cant see any point in coffeescript
08:39 < freewil> coffeescript saves me so much time
08:40 < freewil> so much less typing
08:40 < Benvie> I see a point but when I dig through the layers what it indicates is that you should use haskell and not js
08:40 < Benvie> or clojure also
08:40 < sriley> its not really all that much less typing, and the majority of time a developer spends is thought based rather than just typing
08:41 < Benvie> if you're going to introduce a step between writing code and executing it you might as well make it worth it
08:41 < xkunalx> im currently running my site on php/mysql, is there an advantage of moving it to node.js?
08:41 < Benvie> clojure
08:42 < freewil> xkunalx, yeah sure if you want to spend all your time rewriting it
08:43 < xkunalx> freewil: i know, i have a lot of code already. im wondering how much of a speed improvement i can get with node
08:43 < freewil> it's probably not worth it
08:43 < freewil> depends on what your project is/does
08:44 < xkunalx> it is a social networking site
08:45 < Benvie> is it facebook
08:46 < xkunalx> no, it aims to be a social networking site, eventually
08:46 < xkunalx> right now it is a content site
08:46 < Benvie> is it twitter?
08:46 < Benvie> oh, is it github?
08:46 < xkunalx> if you're that curious: www.ravepad.com
08:47 < Benvie> oh it's cool but no github
08:47 < xkunalx> yeah sorry no github
08:47 < Benvie> should be github
08:47 < rerooting> this would be great for a node webapp
08:47 < rerooting> maybe
08:48 < xkunalx> rerooting: u talking abt my site?
08:48 < rerooting> yes
08:48 < Benvie> I yell at everyone I see in the street that should be learn how to program, if they don't already
08:48 < freewil> what kind of social networking
08:48 < freewil> i get sick of all the social bs i read about on HN
08:48 < xkunalx> rerooting: why is mine a good candidate
08:49 <@konobi> oh wow... beagle boards now get shipped with node as standard
08:49 < rerooting> you have Facebook auth, lots of content, etc.  i think you would be able to optimize nicely with node.  also, using socket.io you can add more realtime functionality
08:49 < rerooting> activity streams with an ajax update, chat, etc.
08:50 < Benvie> a beagleboard is like an arduino taped to a dog I assume
08:50 < xkunalx> rerooting: thanks for the feedback, id love to do all that. im intimidated about node and where to start
08:50 < xkunalx> im a pp/mysql guy
08:50 < xkunalx> php*
08:51 < xkunalx> i was recommended by a friend to check out this channel.
08:51 < rerooting> you can still use mysql with node.  I wouldn't be intimidated, its actually quite easy to learn.  to you know javascript?
08:51 < xkunalx> rerooting: yes very much
08:51 < Benvie> as long as you're not mistaking java and javascript you're probably ok
08:52 < Benvie> if not, your friend is a dick and he's sitting somewhere with a giant trollface right now
08:52 < xkunalx> i've used jquery, prototype - a bit of both
08:52 < xkunalx> Benvie: he means well
08:53 < xkunalx> i understand the huge investment involved in doing a code migration...but with a database with 10-20 million records, i dont know whether my site will be able to scale
08:54 < xkunalx> whether its worth moving to node.js + a graph db now, or not...that is the question
08:54 < rerooting> xkunalx: you should be able to pick up pretty quickly!   with 10-20 million records, it will definitely scale fairly easily with node
08:54 < Benvie> migration is probably less difficult than you think
08:54 < freewil> you dont need to migrate the entire thing
08:54 < freewil> you can start with new features
08:54 < freewil> or moving real-time things to node
08:55 < xkunalx> rerooting: love your positivity...any pointers on how to start with node? i couldnt get it to install on my windows dev environment last time i tried it
08:55 < xkunalx> freewil: good point, partial migrations could be possible
08:55 < Benvie> also databases are separate from applications
08:55 < xkunalx> Benvie: true, that
08:55 < Benvie> node has modules for every db I know of
08:56 < xkunalx> i've used just mysql and mongo...thats it. no idea about neo4j or any of that fancy graph stuff...
08:56 < freewil> is there one for microsoft sql server?
08:56 < Benvie> yeah
08:56 < Benvie> made by microsoft
08:56 < freewil> nice
08:57 < Benvie> microsoft supports node as one of the platforms on Azure
09:00 < caasiHuang> Is there anything like gf3/sandbox, but I can expose some data to the sandbox?
09:01 < Benvie> no idea what gf3 is
09:01 < Benvie> https://github.com/pccowboy/contextify
09:02 < xkunalx> is anyone running node on a windows box? 
09:02 < Benvie> yes
09:02 < Benvie> think I am the only one though
09:02 < xkunalx> Benvie: any gotchas to get it running? whats a good place to start
09:02 < Benvie> not for general usage
09:02 < Benvie> it runs standalone no problem
09:02 < caasiHuang> thanks, benvie
09:02 < Benvie> all the apis are fully functional
09:03 < caasiHuang> thanks, Benvie, will read them later!
09:03 < caasiHuang> Banvie++
09:03 < Benvie> no problem =D if it helps anyway
09:03 < xkunalx> Benvie: what do you mean, for production usage there were gotchas?
09:03 < Benvie> if it doesn't I'm sorry
09:03 < caasiHuang> Benvie++, sorry :p
09:03 < Benvie> no, all the node builtin APIs are more than rock solid
09:03 < Benvie> easilt, for production
09:03 < xkunalx> i have a windows dev box and an ubuntu production server
09:03 < Benvie> but there's almost no modules for Windows beyond that
09:04 < Benvie> that's all
09:04 < Benvie> so if your needs are serviced by http://nodejs.org/api/ you're good to go
09:04 < xkunalx> so modules are not cross-platform..
09:04 < Benvie> some are, some aren't
09:04 < Benvie> it's more likely they aren't for windows
09:05 < Benvie> not a fault of node's itself
09:05 < Benvie> just the userbase is skewed
09:05 < xkunalx> right
09:05 < xkunalx> any modules youve encountered that you needed badly but didnt work on windows
09:05 < Benvie> so you're asking the wrong person herwe
09:05 < Benvie> I don't use libraries
09:05 < Benvie> I....solve problems and make things
09:06 < xkunalx> I see, you code in native languages
09:06 < Benvie> hmm
09:06 < Benvie> sec
09:06 < Benvie> https://gist.github.com/2879370 might illustrate how I do things
09:07 < rerooting> xkunalx: almost all modules will work across platforms, as they all mostly depend on node and the v8 engine which works the same whether windows or linux
09:08 < rerooting> xkunalx: occasionally, you have modules that have system level dependencies, for example bcrypt or node-imagemagick
09:08 < xkunalx> Benvie: thats bad-ass
09:09 < rerooting> of course, your database driver is going to depend on a database, but regardless you'll find a way to be able to run any of them in any environment
09:09 < Benvie> so I pretty much just write things to that effect. A basic example is https://github.com/Benvie/node-clipboard
09:09 < Benvie>  y
09:09 < Benvie> https://github.com/Benvie/node-clipboard/blob/master/lib/win32.js
09:09 < xkunalx> rerooting: interesting. so you think its worth the time investment to move from lamp to node. what db would you recommend...mysql/mongo/a graph db like neo4j?
09:10 < rerooting> i would look into the benefits of nosql, try some benchmarks.  i'm not really experienced with graph db but that would be worth looking into as well
09:10 < xkunalx> Benvie: is all this code in node.js?
09:10 < Benvie> yeah
09:10 < Benvie> uses node-ffi
09:11 < xkunalx> rerooting: ive used mongodb...its quite a bit faster than mysql..
09:11 < xkunalx> ffi?
09:11 < rerooting> mongo is really easy to work with
09:11 < Benvie> although the line betyween node and the browser has been blurred by me recently, on purpose
09:11 < xkunalx> yes, it is
09:11 < rerooting> also, you'll want to look into using redis for sessions, cacheing, etc.
09:11 < Benvie> ffi is foreign function interface
09:11 < Benvie> it allows you to call dynamic libraries from js
09:11 < xkunalx> rerooting: data visualization/querying is a little more painful for me, because im used to sql
09:11 < rerooting> its even faster than mongo, but is a key value store
09:11 < Benvie> like win32 api or whatever
09:12 < rerooting> xkunalx: yes its tricky to wrap your head around, sometimes
09:12 < Benvie> any dll or dylib or so (platforms)
09:12 < Benvie> and then this combines node with browser renderer https://github.com/appjs/appjs
09:12 < xkunalx> rerooting: instagram used redis. can redis be used for the entire db, not just caching and sessions?
09:13 < rerooting> yes it can, but its kind of a pain when you get more complex
09:13 < rerooting> it's best used side by side with something like mongo
09:13 < xkunalx> Benvie: you're clearly quite good at writing code, but im too much of a node beginner at this point to follow
09:13 < Benvie> http://dists.appjs.org/0.0.18/appjs-0.0.18-win32-ia32.zip
09:14 < xkunalx> rerooting: interesting
09:14 < Benvie> http://dists.appjs.org/0.0.18/appjs-0.0.18-darwin-ia32.zip
09:14 < Benvie>  renderer https://github.com/appjs/appjs
09:14 < xkunalx> redis+mongo huh
09:14 < xkunalx> what do you use personally
09:14 < Benvie> standalone, no dependencies
09:14 < Benvie> launches, works
09:14 < Benvie> http://dists.appjs.org/0.0.18/appjs-0.0.18-linux-x64.tar.gz
09:14 < Benvie> goodnight, bedtime
09:15 < xkunalx> Benvie: see you. and thanks.
09:15 < rerooting> oh right, the main reason you want to use redis for cacheing/sessions is that its considered a key-value cache in ram db, whereas mongo is key-value stores on solid state
09:16 < rerooting> so mongo is good for handling lots of collections, and doing map reduce and other funky queries
09:16 < xkunalx> rerooting: i see
09:16 < rerooting> whereas redis is great for 'heres my record id, fetch me the value'
09:16 < xkunalx> record id for what - session?
09:16 < xkunalx> isnt record generic enough for any type of data
09:16 < rerooting> yeah, so you would have say a session token that maps to a user id
09:17 < xkunalx> yes
09:17 < xkunalx> so redis would look that up and give you the user id
09:17 < rerooting> true, but mongo is just great for grabbing collections and what you might call 'querying' data
09:17 < rerooting> yes, and very quickly
09:17 < xkunalx> then you query mongo to get the rest of the data. is that what you mean?
09:17 < rerooting> yup, basically!
09:17 < xkunalx> i see...
09:17 < xkunalx> mongo is good with mapreduce...yes
09:18 < rerooting> heres a good example
09:18 < rerooting> http://openmymind.net/2011/5/8/Practical-NoSQL-Solving-a-Real-Problem-w-Mongo-Red/
09:18 < xkunalx> rerooting: your blog?
09:18 < rerooting> oh no! haha, i wish
09:18 < xkunalx> :D
09:20 < rerooting> ok, off i go! good talking to you xkunalx , best of luck with your project!  i would suggest node toolbox, daily.js, and generally the internet as great places to learn more about node
09:20 < rerooting> express.js will go a long way in getting you started on a web application framework
09:21 < xkunalx> rerooting: thank you! imn reading the link you sent me. i dont know much about toolbox etc..what is that for?
09:21 < rerooting> http://toolbox.no.de/ its a good place to learn about existing modules out there
09:21 < xkunalx> and daily.js? i need to get a hello world installed and running in node...any good place to start?
09:22 < xkunalx> rerooting: i see
09:22 < rerooting> oops haha dailyjs.com
09:22 < xkunalx> this is a lot of stuff...wow
09:22 < rerooting> todo would be a good start
09:22 < rerooting> http://javascriptplayground.com/blog/2012/06/node-express-todo-app-redis
09:23 < rerooting> heres one that will jumpstart you on express 3 http://www.joezimjs.com/javascript/getting-started-with-node-js-and-express-3/
09:23 < xkunalx> wow..who are you? and how can i become smart like you? :)
09:23 < rerooting> also, with express, you have the choice between passport and everyauth, both are excellent multi-service authentication providers - twitter, Facebook, local, oath, you name it
09:24 < xkunalx> rerooting: i've never heard of express
09:24 < xkunalx> i'll read through these now
09:24 < rerooting> xkunalx haha! i bet you are a better programmer than I am already.  I'm just really informed and have a great team - i do project management and fronted dev
09:24 < rerooting> express is the shit
09:24 < rerooting> it makes building a web app in node really easy
09:24 < xkunalx> rerooting: interesting...
09:25 < xkunalx> i'll remember that..
09:25 < rerooting> http://socket.io/ is what you want to learn next, for realtime, pub/sub stuff
09:25 < xkunalx> and i think you're just modest. im an ok programmer
09:25 < xkunalx> ok, so in terms of order...
09:25 < xkunalx> 1. install node
09:26 < xkunalx> 2. look into express? or node toolbox? or some tutorial?
09:26 < rerooting> i would install node and npm, then just get started with any of those express tutorials
09:26 < rerooting> you'll be able to get some stuff working in no time
09:27 < rerooting> however, you should probably spend some time learning about node.js in general, reading the api docs, and understanding how it works and how express works on top of it
09:27 < xkunalx> rerooting: thank you 
09:27 < xkunalx> yes, i think thats a good idea
09:27 < xkunalx> express sounds like a framework on top of node...ill probably need to understand node first
09:27 < rerooting> yes indeed.  you won't need to know every intricacy
09:27 < xkunalx> right
09:28 < rerooting> technically express is a module, but it works more like a framework
09:28 < xkunalx> btw, what applications have you built / your team built in node?
09:28 < xkunalx> im curious about whether you did a migration from something else?
09:28 < rerooting> we are fairly new to it, and our applications are currently in incubation with clients who are working on launching them as products
09:28 < xkunalx> before you ended up with node
09:29 < rerooting> we haven't done a migration from other platforms, but we all do have a lamp background actually
09:29 < xkunalx> rerooting: i see. so you're a development shop?
09:29 < xkunalx> i see
09:29 < rerooting> xkunalx: for the most part, we also do drupal websites as well, kind of transitioning more towards just doing node development though because its so exciting!
09:29 < xkunalx> welll you seem to know a fair amoutnt about node
09:29 < rerooting> yeah i've spent a year becoming deeply familiar with it
09:29 < xkunalx> rerooting: thats very cool
09:30 < xkunalx> would love to ping you/email you sometime so we can chat offline
09:30 < xkunalx> can i pm you
09:30 < rerooting> indeed, you can
09:30 < xkunalx> thx
09:54 < frank__10> cool
09:54 < frank__10> hello js guys
09:55 <@Nexxy> HELLO, FRANK__10
09:59 < mikeywaites> hey hoping someone can help, i have nginx serving static assets in front of a node / express app however, none of the styles are being applied despite the css files being loaded up by nginx correctly. im using jade templating, anyone seen anything like this before?
10:00 <@Nexxy> mikeywaites, are they being linked properly in your compiled HTML?
10:01 < mikeywaites> yeh
10:01 < mikeywaites> the styles are simple not picked up inspecting elements that should have classes applied just show the deault browser styling :/
10:02 <@Nexxy> mikeywaites, links?
10:03 < mikeywaites> Nexxy:  not anything you could see im afraid
10:03 < adamramadhan> hello
10:03 < adamramadhan> what format is this ? Fri Aug 10 2012 16:58:11 GMT+0700
10:03 <@Nexxy> mikeywaites, lol
10:03 <@Nexxy> mikeywaites, "I need help but i'm not going to show you what I need help with"
10:03 <@Nexxy> good luck with that :P
10:04 < mikeywaites> Nexxy:  i cant show you as theres nowhere for you to look at it
10:04 < mikeywaites> not that i wont show you
10:04 <@Nexxy> if only there was some sort of globally accessible network
10:04 <@Nexxy> of... computing devices
10:04 < mikeywaites> LOL
10:04  * Nexxy finger snap
10:04 < mikeywaites> this is still in development
10:04 < mikeywaites> hardly worth me setting up a box just for you to help with this problem 
10:05 <@Nexxy> why would you need to do that to copy/paste the resulting HTML?
10:06 < mikeywaites> Oh im sorry i thought you were asking to view the project :/ my bad
10:06 <@Nexxy> indeed ;P
10:06 < mikeywaites> my brain hasnt woken up today
10:06 <@Nexxy> caffeine is the answer
10:06 < mikeywaites> i wish i liked it!
10:08 <@Nexxy> amphetamines?
10:09 < mikeywaites> Nexxy:  hahaha i think that kind of thing maybe the cause of the problem
10:09 <@Nexxy> then you either need less or more!
10:10 < mikeywaites> hahahaha i reckon your right there
10:10 <@Nexxy> I'm always right.
10:10 < mmalecki> Nexxy: o hai
10:11 <@Nexxy> mmalecki, salutations!
10:11 < mmalecki> Nexxy: y u no on #nodejitsu?!
10:11 <@Nexxy> I'm helping you accurately judge my worth!
10:11 <@Nexxy> by comparison
10:11 < mmalecki> Nexxy: I see!
10:12 < mikeywaites> Nexxy:  http://dpaste.com/784289/
10:12 < mikeywaites> all looks good to me
10:12 <@Nexxy> mikeywaites, how about the css?
10:13 < mikeywaites> just bootstrap-responsive.min at the moment
10:13 <@Nexxy> have you tried it without the leading slash?
10:13 <@Nexxy> (the links)
10:13 <@Nexxy> also
10:13 < mikeywaites> hmmm the files are loaded in correctly though, its not like they arent available
10:13 <@Nexxy> unless you're compiling bootstrap differently than I am
10:13 <@Nexxy> bootstra-responsive itself only holds responsive css
10:14 <@Nexxy> you still need boostrap for the base styles
10:14 <@Nexxy> are you using lessc?
10:15 < mikeywaites> Nexxy:  BALLS that was it!
10:15 < mikeywaites> jeeez always the most obvious thing
10:15 < mikeywaites> :/
10:15 <@Nexxy> :)
10:15 < mikeywaites> *complete shame"
10:15 <@Nexxy> sometimes you just need a second pair of eyes
10:16 <@Nexxy> (or different drugs)
10:16 < mikeywaites> right time for some more amphetamines :)
10:19 <@Nexxy> that
10:19 <@Nexxy> that's the spirit* !
10:28 < justanewbie> when i use writeStream write to file,when writeStream.write(buf) returns false ,what to do in the drain event?,i write writeStream.on('drain',function(){ if(writeStream.write(buf) writeStream.end();)}); i got more records as i was expect any suggestions?
10:43 < hoolter> Anyone know of a live-reloader that supports less and jade that i could get running easily under xp?
10:45 < freewil> hoolter, you'll need ruby installed - https://github.com/guard/guard-livereload/
10:48 < hoolter> freewil: would it work with XP?
10:48 < freewil> cant be certain
10:49 < hoolter> freewil: i'm honestly all very new to this stuff... would you be able to help me troubleshoot a little (i'm practically certain that i won't just figure it out).
10:49 < sandfox> Hi all
10:49 < freewil> hoolter, sure whats the deal
10:49 < hoolter> freewil: thanks.  nothing yet.
10:49 < sandfox> small question to the masses about binary data and buffers
10:50 < hoolter> freewil: i mean, i know NOTHING about ruby... and i just need to have a folder that i can update jade files in and then have them refresh in my browser as html.
10:51 < hoolter> freewil: and unfortunately i'm in kind of a crunch.
10:51 < hoolter> to get this project wrapped up.
10:51 < freewil> it should be pretty easy
10:51 < sandfox> cipher.update('somedata', 'utf8', 'bin') will return a string, is still considered cool to load that into a buffer then do buffer.toString('base64')
10:51 < freewil> you just need to install ruby
10:51 < freewil> install the ruby packages
10:51 < freewil> make a quick config file for the reloading
10:51 < freewil> and then install a browser addon
10:51 < freewil> i can provide a config for you
10:52 < sandfox> or am I being daft?
10:53  * hoolter gives it a try.
10:53 < hoolter> freewil: do i need rails?
10:54 < freewil> hoolter, no
10:54 < hoolter> freewil: rubyinstaller should work?
10:54 < freewil> sandfox, cipher only returns a string because you are specifying utf8
10:54 < freewil> you can specify 'base64' in it's place
10:54 < hoolter> freewil: seems that ruby doesn't have jade, only "slim"
10:55 < hoolter> which seems different
10:55 < sandfox> freewill alas, I need to call
10:55 < sandfox> cipher.final('bin') as well
10:55 < freewil> sandfox, on seond look maybe not
10:55 < freewil> hoolter, all you need ruby for is to watch for filesytem changes and notify the browser extension
10:56 < freewil> so it doesnt need to support jade or whatever
10:56 < hoolter> freewil: what do you mean?
10:57 < freewil> hoolter, you'll be running the guard-livereload app (ruby) and it'll watch for filesystem changes (.jade)
10:57 < freewil> then it'll reload the browser and your app will re-serve the page
10:58 < hoolter> freewil: ok, but that's supporting jade then, isn't it?
10:58 < freewil> not really
10:58 < freewil> it supports any file type
10:58 < hoolter> man, searching for jade on ruby just gets me jewelry stuff.
10:58 < hoolter> freewil: that's fine but will it preprocess it as jade to html?
10:59 < hoolter> because if not it'll just be a mess of crap in my browser, won't it?
10:59 < freewil> hoolter do you already have a node.js app using jade templates?
10:59 < hoolter> freewil: no they're just for development to ease markup composition.
11:00 < hoolter> for production it'll all be compiled.
11:00 < hoolter> freewil: ruby just finished installing.
11:00 < freewil> not sure what you're trying to do
11:00 < hoolter> freewil: basically, i'm designing a site.  writing html is a PAIN.
11:00 < hoolter> so i use jade.
11:01 < hoolter> usually jsbin takes care of this for me, but it's under heavy development and my page is breaking the shitout of it.
11:01 < hoolter> it's screwing me up.
11:01 < hoolter> but i've come to dependon it.
11:01 < freewil> oh - so all you have are some static jade files that you want to compile to html?
11:01 < hoolter> freewil: sort of.
11:02 < hoolter> i'd like it to detect changes so i can have live feedback if i edit the markup though.
11:02 < hoolter> while i'm developing.
11:02 < freewil> ok so what guard-livereload does basically is watch for filesystem changes
11:02 < rasmus_> hey guys
11:02 < freewil> so it'll see .jade change and trigger a script
11:03 < freewil> and then the script can compile the jade or whatever
11:03 < freewil> then it will trigger the browser to reload
11:03 < hoolter> freewil: and that script doesn't have to be ruby, is what you're saying?
11:03 < freewil> so you just have to have it setup to watch the right files and then compile them
11:03 < freewil> it can be anything
11:03 < hoolter> including my node jade compiler, right? ;-)
11:03 < hoolter> freewil: ii smell ya'.
11:03 < freewil> file change -> run this script -> reload browser
11:03 < hoolter> thanks so much for helping man.
11:04 < freewil> yeah include jade compiler
11:04 < hoolter> so now i have both ruby + node installed and i've done npm install jade
11:04 < hoolter> so what's next?
11:04 < hoolter> freewil: (i don't really know node either)
11:04 < hoolter> just some php for when i really have to.
11:06 <@Nexxy> dear god
11:06 < freewil> you should see if you can start guard
11:06 <@Nexxy> using ruby just to hotload your node apps?
11:06 <@Nexxy> who told you to do that?
11:06 <@Nexxy> so I can slap them
11:07 < freewil> Nexxy, is there a better solution
11:07  * SubStack <-- not a fan of hotloading
11:07 <@Nexxy> http://nodejs.org/api/fs.html#fs_fs_watch_filename_options_listener
11:07 <@Nexxy> SubStack, I am a fan of it whilst developing
11:08 < freewil> so how do you trigger a browser reload
11:08 < SubStack> Nexxy: it's hard to do well at the tooling layer
11:08 < SubStack> browserify watch mode still has bugs I haven't been able to find >_<
11:08 <@Nexxy> which is why I implemented it myself :P
11:08 <@Nexxy> it works great
11:09 <@Nexxy> freewil, socket.io or some other WS implementation works well
11:09 < SubStack> is that so!
11:09 <@Nexxy> yes, yes it is
11:09  * hoolter sits in the corner, confused as hell, waiting for a consensus on what he should do to arise 8-)
11:09 < SubStack> ‽
11:09 <@Nexxy> oh, you.
11:09 < hoolter> Nexxy: hi :)
11:09 <@Nexxy> hoolter, hi!
11:10 <@Nexxy> hoolter, https://github.com/nexxy/nice-package
11:10 < SubStack> aha
11:10 <@Nexxy> not that I'm recommending you use it
11:10 <@Nexxy> but
11:10 <@Nexxy> that is an idea
11:10 < hoolter> Nexxy: what *do* you recommend?
11:10 < hoolter> i'm a node+ruby n00b
11:10 < hoolter> and i'm freaking out because i need to wrap up this project.
11:10 < hoolter> normally i depend on jsbin for my jade processing
11:10 < hoolter> but it's not working right no
11:10 < hoolter> w
11:11 <@Nexxy> well I mean
11:11 <@Nexxy> you can build something that recompiles your jade pretty easily
11:11 <@Nexxy> but if you're in a time crunch
11:11 <@Nexxy> I'd guess just use a preexisting tool
11:11 < hoolter> Nexxy: like what freewil was saying?
11:12 < hoolter> i mean i'm not opposed to coding something up if it's a five min affair, you know?
11:12 < `3rdEden> build systems take much longer than 5 minutes hoolter
11:12 < hoolter> freewil: wanna help me with plan A, then?
11:12 < hoolter> gem isn't  being recognized by cmd.exe3
11:12 < chiel> i was trying to set up fs.watch before sometime on a directory, but it never fired. :(
11:13 < chiel> only on actual files
11:13 < `3rdEden> I have been hacking on my own build system for the last 8 months ;9
11:13 < `3rdEden> and it's still not perfect ;(
11:13  * Nexxy coughs
11:13 < chiel> you don't necessarily need a build *system*, it can just be a small script as well
11:14 < chiel> I made this in about 10 mins: https://github.com/chielkunkels/tinker-ui/blob/master/bin/build
11:14 < `3rdEden> that's what it all starts with a small script
11:14 < `3rdEden> and before you know it, you want more and more
11:14 < chiel> it's only very basic of course, and there's plenty of room for improvement
11:14 < chiel> but it's working :p
11:14 < hoolter> chiel: i only have one jade file so if it can detect that and reload my browser then that's fine.
11:14 < chiel> `3rdEden: true that, i already know next steps i want to take, haha...
11:14 < hoolter> chiel: if you reallycould help me it would be a godsend.
11:14 < hoolter> chiel: i only have one jade file
11:15 < hoolter> when i press ^s in my editor i need it to get compiled to html and refreshed in my browser.
11:15 < chiel> i don't know how to refresh the browser
11:15 < `3rdEden> chiel this took me 8 months: https://github.com/observing/square
11:15 < chiel> but you can use fs.watch to watch the file, and then recompile
11:15 < hoolter> chiel: ok.
11:15 <@Nexxy> `3rdEden, needs better ascii art
11:15 < hoolter> could u help me get that set up?
11:15 < `3rdEden> Nexxy :( I suck ascii
11:16 < `3rdEden> i suck at*
11:16 < chiel> `3rdEden: interesting, what do you use to compile the sass files from node?
11:16 < chiel> or do you call the gem?
11:16 < hoolter> chiel: how do u get that running?
11:16 < chiel> hoolter: by making a node script? I don't really have time to spell it out.
11:16 <@Nexxy> `3rdEden, well I'd offer to make you one but I'm still hurt that you rejected my observer mascot
11:16 < `3rdEden> chiel using the sass module
11:16 < rvagg> grunt might be worth a look too hoolter
11:17 < chiel> `3rdEden: there's a sass module in node?
11:17 < rvagg> lots of plugins popping up for all sorts of stuff for grunt
11:17 < `3rdEden> chiel: yes
11:17 < chiel> the only one i found didn't implement the full spec
11:17 < `3rdEden> npm install sass
11:17 < chiel> (as far as i could tell)
11:17 < `3rdEden> and you have node-sass
11:17 < chiel> hmmmmm
11:17 < `3rdEden> which is based on libsass
11:17 < chiel> i see
11:17 < chiel> i imagine it handles scss files as well?
11:18 < chiel> cause to be frank i'd rather go with sass out of any of the css precompilers.
11:18 < `3rdEden> scss are compass sass files
11:18 < hoolter> chiel: alright thanks anyways.
11:18 < `3rdEden> so you probably need compass for that
11:18 < `3rdEden> instead of just sass
11:18 < chiel> `3rdEden: they're not compass sass files
11:18 < chiel> they're "sassy css"
11:18 < `3rdEden> chiel oh :p
11:18 < chiel> compass has no relation to them actually :p
11:19 < `3rdEden> Anyways checkout https://github.com/andrew/node-sass/
11:19 < `3rdEden> i'm gonna have lunch
11:19 < chiel> `3rdEden: hah, sass is prehistoric :D
11:20 < chiel> `3rdEden: yeah I had found that one, but it didn't seem to implement everything that the ruby version has
11:20 < chiel> i suppose i should have another look
11:27 < bwen> i'm making an REST API that will be an abstraction for many DNS service providers. I need ideas on which pattern to use for these providers. Should it be a node_module for each... How do I enforce the same function amongs them etc...
11:30 < mscdex> you know you've been working with ssh's internals for too long when you start having dreams about Diffie-Hellman key exchanges being hacked
11:31 <@Nexxy> mscdex, I was dreaming in .pipe()s
11:31 < mscdex> what a pipe() dream
11:31 <@Nexxy> el oh el
11:31 < mscdex> Nexxy: do you ever sleep?
11:32 < bwen> she waits ¬_¬
11:34 <@Nexxy> mscdex, kind of what bwen said :)
11:35 <@Nexxy> less of a sleep state and more of a period of reduced activity
11:49 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:51 < CIA-93> node: Felix Böhm master * rd15bfc0 / lib/path.js : path: small speed improvements - http://git.io/sxuZAg
12:00 < SubStack> now I need a fold that joins adjacent strings in an array and splits on array boundaries in the output
12:00 < SubStack> so I can intersperse objects or blank entries
12:02 < SubStack> [ 'a', 'b', [ 'c', 'd' ], 'e', 'f', [ 'g', 'h', 'i' ], 'j' ] -> [ 'abc', 'defg', 'h', 'ij' ]
12:03 < technocrat> i would say traverse-js it ;)
12:04 < SubStack> it's not a recursive structure though
12:04 < SubStack> just a single pass reduce() should do the trick
12:06 < technocrat> how will single pass handle nested ones?
12:06 < SubStack> there aren't nested ones
12:06 < SubStack> it's not recursive
12:07 < technocrat> missunderstood, code sample has nested arrays, for me nested and recursive arent same thing
12:08 < SubStack> the nesting is a finitely bounded depth of 1
12:09 < SubStack> pow got it
12:09 < SubStack> [ 'a', 'b', [ 'c', 'd' ], 'e', 'f', [ 'g', 'h', 'i' ], 'j' ].reduce(function (acc, x) { if (Array.isArray(x)) { acc[acc.length-1] += x[0]; x.slice(1).forEach(function (e) { acc.push(e) }) } else { acc[acc.length - 1] += x } return acc }, [ '' ])
12:11 < jrajav> Do we not have an interpreter bot in here?
12:12 < technocrat> foreach and splice should also work here, without a new array
12:13 < technocrat> but reduce looks nice
12:17 < flexd> hm, github having issues? :
12:17 <@Nexxy> flexd, it's been having PEBCAK issues for months
12:17 < flexd> I see.. :p
12:18 < flexd> error: The requested URL returned error: 401 while accessing https://github.com/flexd/...../stuffhere.git :/
12:18 < flexd> My repository, hm :p
12:18 <@Nexxy> just as I suspected!
12:19 < flexd> switched to ssh and it works fine hm
12:19 <@Nexxy> PEBCAK issue status: resolved
12:19 < flexd> maybe its my git version or something :)
12:19 < SomeoneWeird> lmao
12:19 < flexd> Nexxy: No PEBCAK! :D
12:20 <@Nexxy> flexd, definintely a PEBCAK issue
12:21 < flexd> shush! :D
12:21 < flexd> I'm in my bed, it can't be a PEBCAK issue ;)
12:21 <@Nexxy> PEBBAK?
12:22 < flexd> :P
12:23 < flexd> PEBGHAL
12:23 < flexd> Problem exists between github https and localhost.
12:23 < flexd> :D
12:23 <@Nexxy> PEBGHAL
12:24  * Nexxy offers flexd a losenge
12:24 <@Nexxy> lozenge? idfk
12:24 < tasslehoff> what's a good ide for a node.js/express.js-rookie? vim/emacs doesn't offer much completion help (out of the box)
12:24 < flexd> Nexxy: a ruby thing/
12:24 < flexd> A rhombus or diamond shape.
12:24 < flexd> A small medicinal tablet, originally of this shape, taken for sore throats and dissolved in the mouth: "throat lozenges".
12:24 < flexd> :p
12:25 < flexd> tasslehoff: I like using sublimetext2 when I code locally
12:25 < flexd> Recently I have just been using vim since I am working on a remote host.. works just as fine, you just need to look at the documentation :)
12:25 < technocrat> intellij idea
12:26 < tasslehoff> flexd: st2 is also installed, so I'll go there :)
12:26 < flexd> sounds like a bad idea.. (:p), isnt that a java ide?
12:26 < flexd> tasslehoff: There are some nice plugins/extensions as far as I know
12:27 < technocrat> written in java, supports everything AFAIK
12:27 < technocrat> even bash...
12:28 < SomeoneWeird> <flexd> tasslehoff: I like using sublimetext2 when I code locally < hell yea
12:28 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:30 < flexd> I kind of feel I am not using vim correctly though
12:31 < flexd> I know of insert mode, and pressing o to start inserting one line down :p
12:31 < flexd> I never remember anything else, I should print out a cheatsheet
12:31 < flexd> So it feels less effective than st2 :p
12:32 < technocrat> idea supports jsdoc based completion
12:34 < tasslehoff> fileupload with express.js done, next is file browser with thumbnail view of images (and then later download). any recommended modules to drag in?
12:44 < jhsto> hey guys, i would need to reload a page from server-side, how i do i do that?
12:44 < jhsto> i tried requesting it with request module, but it does not run the javascript on the page, which needs to be run too
12:45 <@Nexxy> joshfinnie, jsdom?
12:45 < SomeoneWeird> i think he wants to tell the client side to refresh
12:46 <@Nexxy> that's what i thought first too, but the second statement makes me wonder
12:46 < jhsto> yea, thats what im looking for 
12:46 <@Nexxy> ah
12:46 < SubStack> so this css trick I've stumbled into is really neat
12:46 <@Nexxy> I do that with dnode
12:46 < SubStack> module forthcoming
12:46 <@Nexxy> uh oh
12:47 < SomeoneWeird> SubStack, don't you have enough modules? :p
12:47 < SubStack> SomeoneWeird: modules are my sneaky way of getting other people to fix my code
12:47 <@Nexxy> one cannot have "enough"
12:47 < SomeoneWeird> hehe SubStack 
12:48 < SubStack> plus anything that can be split up into multiple modules should be
12:48 <@Nexxy> one day
12:49 < SubStack> THAT DAY IS TODAY
12:49 <@Nexxy> we will realize
12:49 <@Nexxy> that SubStack has separated himself into modules
12:49 < SubStack> dogmatic compartmentalism
12:49 < SubStack> that's how I roll
12:49 <@Nexxy> animal print pants out of control?
12:49 <@Nexxy> oh, wait no that's red foo
12:51 < SubStack> SomeoneWeird: another thing about modules: the more you have, the more you need
12:51 < SomeoneWeird> true
12:51 <@Nexxy> http://i.qkme.me/35in4c.jpg
12:51 < jhsto> So anyone happens to know how you refresh your client side with nowjs? Or should I just adopt dnode for that?
12:51 <@Nexxy> dnode is way cooler
12:51 < jhsto> I knew you would say that lol.
12:51 < SubStack> jhsto: refresh?
12:52 < jhsto> SubStack, that sounds too easy
12:52 < technocrat> i also can recommend dnode
12:53 < jhsto> Well, I cant deny it looks to have more useful features.
12:53 < SubStack> I barely even use dnode anymore
12:53 < SubStack> I just use the crap out of all the libs layered on top
12:53 < technocrat> although it doesnt do GC
12:53 <@Nexxy> WEAKMAPS?!
12:53 < SubStack> upnode, airport, seaport, propagit
12:54 < SubStack> technocrat: it does since 1.0.0
12:54 < SubStack> also pipes
12:54 < technocrat> interesting... i was using it some months ago. nice
12:55 <@Nexxy> I do like the seaport technique
12:56 < technocrat> if higher abstractions are so popular, maybe ill release mine too
12:56 < jhsto> Since this will be the last line of my small project, I really would like to do it with nowjs - whats the status of this refresh call, does it exist?
12:56 <@Nexxy> location.reload()
12:57 < jhsto> :S
12:57 <@Nexxy> window.location.href = window.location.href;
12:57 <@Nexxy> lol
12:58 < SomeoneWeird> lol
12:59 <@Nexxy> with nowjs I think you can just do like everyone.now.reload() from the server and now.reload = function() { location.reload(); } on the client
12:59 < jhsto> Ah, thanks Nexxy
13:00 < SubStack> I like it how people complain about how dnode is harder to use in comparison to something like nowjs
13:00 < SubStack> and then I went in and made it even harder with pipes
13:00 <@Nexxy> jhsto, :)
13:00 <@Nexxy> SubStack, lmfao
13:00 < SubStack> but so worth it for the composability and modularity gains
13:01 <@Nexxy> I like the end result
13:01 <@Nexxy> the transition was a bit abrupt
13:01 <@Nexxy> but oh well
13:01 < SubStack> well the old versions still work
13:01 <@Nexxy> but they're not NEW!
13:01 <@Nexxy> they don't have that new module smell
13:03 < jhsto> Cool Nexxy, the program of mine now works thanks to you.
13:03 < jhsto> Cheers.
13:04 <@Nexxy> jhsto, ^-^ glad I could help
13:04 < jhsto> Not the first time you did that lol
13:04 <@Nexxy> wooo!
13:08 < totallymike> Way off-topic for the Nodejs chat room, but I'm looking at the Cuba web framework for Ruby.  Seems to be decent.
13:09 < totallymike> I bring it up because we node users like our web frameworks ;)
13:14 < jhsto> Do you guys here do coding for living?
13:14 < drudge> yes
13:16 < jhsto> Would it be proper if I ask your hourly charges and is the work mentally hard? I'm myself just a student.
13:16 < drudge> i charge between $80-120/hr for consulting
13:17 <@Nexxy> I think drudge's rate is pretty standard
13:17 < jhsto> Thanks for sharing that drudge.
13:18 < jhsto> Thanks for that input too Nexxy. What I've seen of coders for hire in my are charging up to 120€ + taxes per hour. For the record, I've not seen yet a single person who has listed nodejs in their portfolio.
13:19 < jhsto> In my country I was supposed to write
13:19 <@Nexxy> node.js developers are like unicorn
13:19 < jhsto> lol
13:19 < jhsto> So they are a myth?
13:19 < technocrat> just one thread? ;)
13:19 <@Nexxy> rare and mythical?
13:19 < jhsto> Or are you saying that unicorns are real?
13:19 <@Nexxy> I don't know where I was going with that to be honest
13:20 <@Nexxy> of course
13:20 < SomeoneWeird> lmao
13:20 < technocrat> that makes perfect sense
13:20 < Owner> ops oplz
13:20 < Owner> ops pls
13:20 < Owner> ops plz
13:20 < drudge> sshh
13:20 < Owner> !ops
13:20 < Owner> !gimmeops
13:20 <@Nexxy> lol wtf
13:20 < Owner> !ops plox
13:20 <@Nexxy> Owner, the bots are dead
13:20 < Owner> @find ops
13:21 < Owner> @search opbot
13:21 <@Nexxy> uh huh.
13:21 < strk> could you go elsewhere doing that Owner ?
13:21 < Owner> 0ps pl0x
13:21 < Owner> gief ops
13:21 <@Nexxy> Owner, I think that's probably enough ;P
13:22 < Owner> ops please
13:22 < Owner> who ruined the channel
13:22 < drudge> you just did
13:22 <@Nexxy> lmfao
13:23  * strk discovered that /ignore doesn't work (or isn't as intuitive to use as he hoped for)
13:24 < strk> ah, figured, I don't need a + sign near the nick to ignore
13:24 < technocrat> strk: helps, tx
13:25 < strk> technocrat: so maybe also /unignore willl help :) --- /ignore Someone /unignore Someone (at least with irssi)
13:26 < strk> I guess /ignore #channel +nik and /ignore #channel -nick were ircii times
13:27 < technocrat> well, this ipad client may be different ;)
13:27 < strk> I belive the ircII syntax was pretty close to the protocol one
13:28 < technocrat> he ate it, but no response and no error. hope its fine
13:29 < strk> just /ignore 
13:29 < strk> to get the ignore list 
13:29 < technocrat> nothing, im on limechat
13:30 < technocrat> but anyway this owner bot seems to be quiet, so no problem
13:30 < strk> it's shown in the server window here
13:31 <@Nexxy> technocrat, they left
13:32 < technocrat> right, err 421, unk cmd
13:36 < jhsto> Hey Nexxy, I noticed that the line of code which you gave me to refresh the page only works if you have the window open. Is it possible to make it so that you dont even have to have the window opened?
13:38  * deoxxa coughs
13:38 < deoxxa> https://github.com/deoxxa/bittorrent.js
13:39 < EyePulp> deoxxa: cool!
13:39 < bradleymeck> deoxxa: very nice :) we have several things which could benefit from bittorrent
13:39 < deoxxa> yep
13:39 < bradleymeck> well dynamically generating *
13:40 < deoxxa> i'll be using it for a project in the coming months, so it'll be functional pretty soon
13:40 < deoxxa> it "works" in that i can connect to a peer and send messages back and forth
13:40 < deoxxa> but there's no client logic or anything yet
13:51 < deoxxa> hey jesusabdullah: https://github.com/deoxxa/bittorrent.js << you said i should write this and i've begun now
13:51 < deoxxa> I HOPE YOU'RE HAPPY WITH YOURSELF
13:54 < AvianFlu> deoxxa: ++
13:55 < yawnt> deoxxa: YES
13:55 < yawnt> something i needed
13:56 < deoxxa> \o/
13:56 < deoxxa> it doesn't do much at the moment
13:57 < cletus> hey guys. is console.log async?
13:57 < cletus> for node.js
13:58 < deoxxa> cletus: part of it is
13:58 < deoxxa> cletus: actually writing to the console is async, but generating the pretty-printed stuff isn't
13:58 < deoxxa> depending on what you're printing, the formatting might be the big time sink
13:58 < flexd> http://www.viemu.com/vi-vim-cheat-sheet.gif this actually makes vim much easier to use and remember :o
13:58 < flexd> Who was talking about editors earlier?
14:00 < cletus> deoxxa, ah okay
14:01 < technocrat> i thought someone asked about an ide
14:02 < jhsto> i wonder would it be just easier to make a vim keyboard
14:03 < SomeoneWeird> or not use vim :p
14:06 < flexd> :p
14:06 < flexd> I like vim, but I normally use sublime text 2
14:06 < flexd> But recently I have just been coding stuff directly on my vps instead of doing it locally
14:06 < flexd> instantly available for anyone to se :)
14:06 < flexd> see*
14:06 < jhsto> is there a way to make my website load so that it would initialize all my javascript at the same time? I'm using request but it doesnt init the javascript
14:08 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:08 < SomeoneWeird> st2 is da bomb
14:10 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:31 < jsmonkey123> Have anone done web/screen-scraping with node? Last time I did was with Ruby and Nokogiri. Thought of given Node a chance. Any recommended libs?
14:31 < drudge> tried node-scraper?
14:32 < jhsto> i cant believe ive missed that
14:33 < jsmonkey123> drudge: nope, I haven't tried any solutions for node
14:33 < jsmonkey123> you recommend it?
14:33 < jsmonkey123> seems nice
14:33 < drudge> i've used it, suited me ok for what i was doing. used zombie as well
14:35 < jsmonkey123> does not seem to be in npm.. what ;)
14:35 < drudge> http://zombie.labnotes.org
14:35 < SomeoneWeird> anyone got any ideas on how todo icmp?
14:35 < jsmonkey123> I see, zombie uses a headless browser while node-scrape uses jsdom
14:35 < jhsto> lol where you pull these drudge
14:36 < drudge> jhsto: ?
14:36 < jhsto> ive been looking for these for a quite some time, but seems like i havent just used the right keywords
14:36 < jhsto> the modules you are linking
14:36 < drudge> i just use github search
14:36 < jhsto> well ive tried too
14:37 < bradleymeck> SomeoneWeird: node doesnt give raw sockets, so C++ addon
14:37 < jhsto> i guess i havent known what im really searching for
14:37 < jsmonkey123> think node-scrape will do for my purpose. but later on zombie might be an execellent choice. thank for you recommendations drudge 
14:37 < SomeoneWeird> fk
14:37 < drudge> jsmonkey123: correct. there were some cases where i needed som interaction to occur, zombie worked great, otherwise i use node-scraper because i like the jQuery searching
14:37 < jsmonkey123> jhsto: "node web scraping" on google and you get node-scraper.
14:37 < jhsto> lol i fail
14:38 < jsmonkey123> drudge: exactly. when I need to signin and such I prefer it over url hacking :)
14:38 < jsmonkey123> and POSTs
14:39 < RLa> bradleymeck, how raw
14:39 < lgbr> I have a function that I must return a value from, but I must use functions with it that are async. How can I wait for a result from an async function?
14:40 < bradleymeck> RLa, a real raw socket? you can manipulate whole packet, those are just called "raw" sockets
14:40 < RLa> oh, for icmp
14:40 < RLa> lgbr, you cant
14:40 < RLa> you must use callbacks
14:43 < lgbr> RLa: Do you see any way that I can possibly use handlebarsjs' registerHelper? http://handlebarsjs.com/#helpers
14:44 < zipp> Is this the real life?
14:44 < lgbr> RLa: its second parameter requires that I return a value
14:45 < technocrat> fetch the value before calling it
14:45 < bradleymeck> zipp: for sure, totally
14:45 < RLa> zipp, no this is irc
14:45 < RLa> lgbr, you need async helper
14:45 < zipp> bradleymeck, RLA: lol, sorry, just felt like a Queen type of morning. But no, you're right. This isn't rl, this is the interlulz
14:46 < RLa> https://github.com/wycats/handlebars.js/issues/141
14:46 < lgbr> RLa: Thanks!
14:46 < RLa> can't belive something trivial as that has not been done already
14:46 < RLa> lgbr, bad news, i can't find that they actually support async
14:47 < lgbr> RLa: looks like the solution he provided was client side only
14:54 < natrixnatrix89> Hi guys. Is there someone here with experience in how node socket.io works?
14:54 < natrixnatrix89> It's very easy communicating to it, if you have the script in a browser..
14:54 < natrixnatrix89> But how would it work if I wanted to have a python script that would connect to the same node server and emit messages? Or an alternate version would be having a pc running node and connectiong to node socket.io server to emit messages..
14:54 < natrixnatrix89> could anyone point me to some good documentation in doing this?
14:55 < SomeoneWeird> http://pypi.python.org/pypi/socketIO-client/0.2
14:55 < SomeoneWeird> lol
14:55 < natrixnatrix89> wow. cool
14:55 < lgbr> RLa: thanks again for your help
14:55 < natrixnatrix89> and if I was using node? is there a socket.io client for node as well?
14:55 < SomeoneWeird> ofc, the official client is node
14:56 < RLa> lgbr, try looking for forks or patches i think someone have had similar problems
14:56 < natrixnatrix89> so I'd just import socket.io
14:56 < natrixnatrix89> and use the same commands as I used in javascript?
14:57 < natrixnatrix89> cool. I guess using node would be the best version then..
14:58 < SomeoneWeird> yep
14:58 < natrixnatrix89> awesome!
15:15 < natrixnatrix89> SomeoneWeird: Hmm. it doesn t really work..
15:15 < natrixnatrix89> var io = require('socket.io');
15:15 < natrixnatrix89> io.connect('my_node_server_address');TypeError: Object #<Object> has no method 'connect'
15:15 < natrixnatrix89> where can I find the node client for socket.io?
15:15 < SomeoneWeird> you've started a server right?
15:16 < natrixnatrix89> damn..  I'm so dumb..
15:16 < natrixnatrix89> this was the client: https://github.com/LearnBoost/Socket.IO-node-client right?
15:16 < natrixnatrix89> and I tried to use socket.io server as client :/
15:16 < SomeoneWeird> yeeah, you still need a server runnign though
15:16 < SomeoneWeird> lol
15:16 < SomeoneWeird> http://socket.io/
15:16 < natrixnatrix89> yes I have server running. And I've had great success with javascript
15:17 < natrixnatrix89> it's a presentation online
15:17 < SomeoneWeird> right, and the server is nodejs right?
15:17 < natrixnatrix89> yes
15:17 < natrixnatrix89> and the client will be in nodejs too
15:17 < SomeoneWeird> right, so you can just use the variable thats the server as a client too
15:17 < natrixnatrix89> thanks. I just understood my dumb mistake..
15:17 < SomeoneWeird> like
15:17 < SomeoneWeird> io = socketio.listen(port);
15:17 < natrixnatrix89> server can be a client too?
15:17 < SomeoneWeird> yerp
15:18 < natrixnatrix89> ok. I have the server running at http://dgcm.lv:8671/reactiv
15:18 < natrixnatrix89> how do I connect node on my pc to it
15:18 < natrixnatrix89> I mean if I'm testing from terminal
15:19 < SomeoneWeird> http://socket.io/#how-to-use
15:19 < sbfds> how can i capture the return val of a callback function?
15:19 < SomeoneWeird> scroll down to "sending and receiving events"
15:19 < SomeoneWeird> sbfds, hm?
15:20 < sbfds> like, basically i want a function to read in a file from fs and then return the contents of it
15:20 < sbfds> SomeoneWeird: am i making any sense?
15:20 < SomeoneWeird> use callbacks
15:20 < natrixnatrix89> SomeoneWeird: I think what I'm looking for is really https://npmjs.org/package/socket.io-client
15:20 < owen1> how to chose between socket.io and hook.io?
15:20 < SomeoneWeird> maybe so natrixnatrix89 
15:21 < natrixnatrix89> because I don't think it would be logical trying to use server as a client too
15:21 < SomeoneWeird> i do :)
15:21 < sbfds> SomeoneWeird: how?
15:21 < SomeoneWeird> sbfds, give us a sec
15:21 < sbfds> SomeoneWeird: I'm fairly new to node.
15:21 < sbfds> SomeoneWeird: no worries.
15:21 < `3rdEden> owen1 thats like choosing between a car and tissue, they are not related to each other what so ever
15:22 < owen1> `3rdEden: (: i thought both lets u communitace between to processes?
15:22 < SomeoneWeird> sbfds, https://gist.github.com/3314985
15:22 < `3rdEden> owen1 no, socket.io is a realtime library
15:22 < owen1> hook.io seems to have a lot of extra feature and multiple servers
15:22 < `3rdEden> http://socket.io/
15:23 < natrixnatrix89> yep.. socket.io-client did it :)
15:23 < sbfds> SomeoneWeird: I'm totally lost!
15:23 < owen1> `3rdEden: i thought that realtime is just one aspect of it. can't u trigger an event between servers instead of server-client-server?
15:23 < sbfds> SomeoneWeird: why'd you use nonexistentmethod?
15:24 < `3rdEden> owen1 no
15:24 < SomeoneWeird> as an example of the file reading process
15:24 < SomeoneWeird> take a look at http://stackoverflow.com/questions/4324037/what-are-callback-methods
15:24 < owen1> `3rdEden: oh. so dnode might be similar to hook.io
15:24 < `3rdEden> owen1 unless you communicate from server to server using the socket.io-client on the server, but that is not it's primary use case
15:24 < owen1> `3rdEden: got it
15:26 < Sapr0> Howdy
15:26 < Sapr0> Anyone around to help me solve a problem that i got with node.js + express.js + socket.io ?
15:27 < owen1> Sapr0: what is your issue?
15:27 < Sapr0> Well, i'm trying to access the session that express.js is providing inside a socket
15:28 < Sapr0> Beeing trying all day and doesn't seem to work, all though i tried to follow many tutorials on stackoverflow and other pages
15:28 < Sapr0> Can i pm you with some code snippets?
15:31 < sbfds> hi, i'm really sorry but i'm in desperate need of some handholding...
15:35 < owen1> i want to build a plane that is controlled from a webpage and using node. where do i start?
15:35 < natrixnatrix89> rc plane?
15:36 < natrixnatrix89> using 3g?
15:36 < natrixnatrix89> owen1: how big is the plane, and how does it work?
15:36 < natrixnatrix89> is it using arduino?
15:37 < owen1> natrixnatrix89: i want the cheapest plane ever and small is fine.
15:37 < owen1> and i don't care what the hardware will be. it's just an idea i just had.
15:38 < owen1> goal: cheap and fastest way to fly a small airplane via a webpage.
15:38 < owen1> using node
15:39 < owen1> i guess the issue is i need internet connection.
15:39 < owen1> let's skip the webpage part..
15:39 < bradleymeck> owen1: node-serialport + adapter for your laptop w/e to broadcast via serialport, then just send out the frequencies, i bet someone out there has a linux C++ lib that could help w/ sending the right stuff for your standard RC controller
15:40 < sbfds> How does it look? my first script, a jade/less preprocessor... http://dpaste.org/S936Y/
15:40 < sbfds> *first node script
15:40 < sbfds> could i get some feedback on it from anyone?
15:40 < natrixnatrix89> guys.. is it possible to call sound playback from node?
15:40 < bradleymeck> i would ask your local hobby shop if they have anything that can be used from your computer as a controller
15:40 < noocx> hi
15:40 < owen1> bradleymeck: thanks
15:40 < bradleymeck> natrixnatrix89: possible with libraries, dont know whats the pref one
15:41 < natrixnatrix89> how about calling the linux play command? how do I call shell commands from node?
15:42 < bradleymeck> natrixnatrix89: require('child_process')
15:43 < natrixnatrix89> really? so I could just call require('play myfile.mp3');
15:43 < natrixnatrix89> hmm.. or I can use ffplay
15:43 < bradleymeck> natrixnatrix89: no look at the docs on require('child_process')
15:44 < natrixnatrix89> ok
15:45 < natrixnatrix89> so I'd use spawn..
15:45 < SomeoneWeird> use exec
15:46 < ccowan> ugh! I disabled javascript in my browser to test something and forgot that I did it and started pulling out my hair trying to figureout why my scripts stopped executing... just spent 30 minutes running around in circles .
15:46 < ccowan> DOH!
15:47 < SomeoneWeird> lmao
15:47 < SomeoneWeird> >.<
15:48 < natrixnatrix89> yay.. it worked
16:00 < owen1> anyone using hook.io or have nice project on github i can see? i try https://github.com/nodejitsu/kohai but get an error when trying to 'npm install'
16:00 < sbfds> why is my server dying after a single request?
16:01 < sbfds> as soon as i give it any http requests to handle it serves the first and then exits.
16:01 < bradleymeck> sbfds: well thats a complex question
16:02 < sbfds> bradleymeck: here it is: http://dpaste.org/S936Y/
16:03 < sbfds> bradleymeck: any ideas
16:03 < sbfds> ?
16:04 < bradleymeck> sbfds: sounds like there is an error somewhere when you use jade.compile probably
16:06 < sbfds> bradleymeck: any ideas as to how to solve it?
16:07 < bradleymeck> sbfds: make sure your jade actually compiles / add error checks?
16:07 < sbfds> bradleymeck: this is literally my first node script, but thanks.
16:07 < sbfds> could you elaborate a little on those?
16:08 < bradleymeck> sorry, wrap jade.compile in a try catch for example, add a process.on('uncaughtException', function (err) {console.log(err);process.exit(1)})
16:09 < senorpedro> hi
16:11 < senorpedro> i read binary data via http. BUT when i do: var ws = fs.createWriteStream(file); request(url, function(e,r) {r.socket.pipe(ws);}); the file is written but has 0 bytes. what is wrong here?
16:11 < senorpedro> when i do wget with the url it works just fine.
16:12 < senorpedro> the node version is 0.8.3
16:12 < senorpedro> i'm using the regular request module installed via npm
16:14 < fezziwig> Hello everyone!  I am starting to learn node.js .... today!
16:14 < pandemic> Nice :) welcome aboard!
16:16 < fezziwig> pandemic : thanks!  I'm setting it up locally, and also going to install it on a Debian server I have at Linode.
16:17 < pandemic> check out heroku
16:17 < pandemic> pretty easy/free node.js hosting
16:17 < RLa> it's pretty easy to set up on vps too
16:17 < RLa> install from source
16:18 < fezziwig> RLa : thanks;  I like to get my hands dirty... to an extent, anyway!
16:18 < ccowan> fezziwig: what kind computer are you on (Desktop/Laptop ... Linux/Mac/Windows)?
16:18 < fezziwig> but, pandemic, free hosting, that sounds interesting - ah, I see, for a tiny host
16:18 < RLa> on debian you need build-essential for gcc
16:18 < pandemic> yeah
16:19 < pandemic> but for dev purposes it's plenty
16:19 < RLa> should not need any other package
16:19 < fezziwig> ccowan : I am on a MacBook Pro - I installed from the package installer, and it seems to be working
16:19 < ccowan> Cool
16:20 < ccowan> fezziwig: what type of projects are you interested in?
16:21 < fezziwig> ccowan : well, historically I have been a ColdFusion developer, with a background in design and theming... So, database-driven web sites, and I am interested in seeing what kinds of CMS modules there are for node.js
16:21 < ccowan> Cool
16:22 < pandemic> I've only seen calipso for node. I'd love to know if there are any other CMS's for noe that I'm unaware of.
16:22 < ccowan> one thing you are goign to want right away is a way to edit your node.js web without having to kill and start the process everytime you save
16:22 < ccowan> so you will want to install node-dev or supervisor
16:22 < ccowan> npm -g install node-dev
16:22 < ccowan> that will get it installed for you
16:22 < ccowan> then when you run your demo script you run it like
16:23 < ccowan> node-dev example.js
16:23 < ccowan> instead of 
16:23 < ccowan> node example.js
16:23 < AAA_awright> I'm like, a week away from releasing a blog implementation of http://magnode.org/ if you guys care to wait :>
16:23 < AAA_awright> ^ Those words are the stuff of confidence right there
16:24 < aus3ys> Yoda.js
16:24 < fezziwig> AAA_awright nice!
16:25 < AAA_awright> Thanks... There's like, 4 more features left to implement, the caches, use-able user accounts, some default install data
16:26 < AAA_awright> And a theme and default templates
16:26 < fezziwig> ccowan : thanks for the advice ^ ... I will be back; must return to day job now!
16:26 < ccowan> ignore you day job and keep hacking :D
16:28 < shoshy> hey, i've just started learning node.js (via tutorial..), very basic. Using windows 7. node.js version 0.8.6 . file: webserver.js , 1 line of code: var http = require('http'); I get a nasty unclear error: "(function (exports, require, module, __filename, __dirname) { The syntax of" .... 
16:28 < pandemic> is there more to the error?
16:29 < ccowan> Friday is officially "Learn Node.js!"
16:29 < ccowan> I love it!
16:29 < shoshy> pandemic: yes, i'll paste in pastebin, didn't want to flood.
16:29 < RLa> shoshy, paste whole code somewhere
16:29 < shoshy> this is the error: http://pastebin.com/zb6kFx80
16:30 < AAA_awright> shoshy: It looks like you have text there which shouldn't be there... You sure that line isn't supposed to have a comment on the end?
16:31 < shoshy> ok, i think i've found the error.
16:31 < shoshy> Don't ask me why..
16:31 < shoshy> but i've deleted the file ... 
16:32 < shoshy> created a new file, wrote the same line 'var http = require('http');' 
16:32 < shoshy> and it didn't error..
16:32 < shoshy> :O
16:32 < shoshy> but thanks anyway... i'm sure i'll have problems soon :)
16:32 < RLa> magic
16:34 < shoshy> i was disconnected, so if you haven't received my message(s) . I've solved the problem.. don't ask me why, i just created a new file with that single line "var http = require('http');" and it worked.
16:37 < TomWij> >> (+!![]+[])+(!+[]+!![]+!![]+[])+(!+[]+!![]+!![]+[])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+[])
16:37 < purr> TomWij: (string) '1337'
16:38 < tuhoojabotti> TomWij: Yes, so?
16:39 < TomWij> I make a fish, it tells me 1337. <3
17:04 < pandemic> AAA_awright: Do you think Magnode would be a good candidate for a CMS running on a  platform like Heroku? Heroku's filesystem is ephemeral, so media storage would need to be externalized using something like Amazon S3. Does it work that way?
17:05 < AAA_awright> pandemic: It's designed to work with pretty much any database, though primarially it's supposed to work with an RDF database (in practice, MongoDB)
17:06 < AAA_awright> You can just keep around the base files to run it, the libraries and template files, and everything else is off the database, even the configuration
17:06 < pandemic> Well, I meant more for images, videos, mp3s, etc
17:06 < pandemic> Unless you are storing those in the database too?
17:07 < AAA_awright> You could serve whatever content you like, really. I'm keeping static files on the filesystem just because, hey, Nginx, but you can request resources from Magnode that aren't webpages/documents and serve those up
17:07 < AAA_awright> You have to have some way of querying the database/store for "what is the content-type of the resourece being requested", that's what the entire system is based off of
17:08 < AAA_awright> Once you have that you can say "Serve it as-is" or format it in various ways
17:08 < pandemic> Oh ok. Is there a UI for managing content? I didn't see any screenshots on the site and I obviously haven't tried setting it up yet. 
17:09 < pandemic> I'm looking for a node.js alternative to the CMS I've used in the past (Umbraco, a .NET CMS).
17:09 < AAA_awright> pandemic: Yeah, see for instance http://smashleague.org/?edit
17:10 < pandemic> Ah, cool
17:10 < AAA_awright> You can edit stuff, create lists of content, format content, that's the basic operations
17:10 < pandemic> But no media management module then I suppose?
17:10 < AAA_awright> Everything is a content-type. Users are content types in the database, content types are entries in the database
17:10 < superjoe> mde, is there a geddy IRC channel?
17:10 < AAA_awright> It would be trivial to create a new content-type for media
17:11 < pandemic> Cool
17:11 < pandemic> I may have to dig into this :)
17:11 < pandemic> Thanks!
17:11 < AAA_awright> Even most of the configuration can be stored in the database and it dynamically creates the HTTP servers and whatnot based on that configuration
17:11 < AAA_awright> (if you like)
17:12 < pandemic> How complex is it to set up? I'm sure I can handle it, but I'm also curious if some of our junior level developers and front-end devs could set something up.
17:12 < AAA_awright> I'm trying to make it easier to setup
17:12 < pandemic> Cool :)
17:13 < AAA_awright> It's not quite ready to unpack-and-run but it's getting there, I'm really in the last stretch of work before I can release something formally
17:13 < pandemic> Well, it looks cool from what I've seen. Nice work! :)
17:13 < AAA_awright> Thanks :)
17:14 < superjoe> I'm looking for documentation on what XMLHttpRequest.send() would like like to emulate from a node.js client for testing purposes
17:14 < AAA_awright> Take a good look at the documentation, there's a bit of nifty design that went into it
17:14 < pandemic> Yeah, I was looking at it, but it was a bit overwhelming at first glance. 
17:15 < pandemic> It's a bit different than what I'm used to I guess, haha.
17:15 < pandemic> Been using Umbraco for too long :-P.
17:16 < pandemic> So, any plans on moving the repo to something like Github? Might be kinda cool so you can get more people involved.
17:17 < AAA_awright> Yeah, once it gets to a state where people won't be permanently scarred by it's complexity heh
17:17 < pandemic> lol
17:18 < pandemic> good thinking :)
17:19 < AAA_awright> I'm thinking like another week of work, really. It depends on four more features: Cache, User account management, Most basic management menu, An install process that a Node.js type can figure out, and a basic default theme for a blog
17:20 < AAA_awright> I realized I don't have any templates in the repository yet, I'll have to figure that out
17:20 < pandemic> Well, I'm looking forward to your first release. I'll have to give it a test drive. :)
17:22 < AAA_awright> pandemic: Add your name to the Google Groups announcement list perhaps, and I'll ping you with some more information in a bit
17:22 < pandemic> cool, will do, thanks!
17:23 < AAA_awright> pandemic: If you wanna help test out the installation process that'd be great
17:23 < pandemic> I'll have to when I can get some spare time. Unfortunately, that is a rare thing as of late, lol.
17:23 < AAA_awright> Yeah, not right now
17:31 < uglybluedolphin> lesson learned: check that npm version of a dependency is the same as the version on github :-/
17:36 < TehShrike|Work> Oh man, this is so fucking awesome, I'm giddy http://browserver.org/
17:36 < RLa> is there restler alternative with callbacks?
17:38 < RLa> TehShrike|Work, wow, that's pretty neat
17:38 < TehShrike|Work> It's BLOWING MY MIND
17:39 < jerrysv> mmalecki: ping
17:48 < AAA_awright> TehShrike|Work: What's it do, I'm getting "Loading the app..."
17:49 < AAA_awright> Aha there we go
17:51 < AAA_awright> TehShrike|Work: That's pretty awesome, let's get rid of websockets, eh? (heh, it probably uses websockets)
17:51 < AAA_awright> I really like this idea
17:51 < AAA_awright> I think I might steal it
17:52 < TehShrike|Work> Oh man yeah, it's so cool
17:54 < mattvv> anyone here use jasmine for integration testing? I'm trying to use jasmine-jquery to load a fixture in my DOM but after i load the DOM if i do a console.log(document.getElementById("container")); I get nothing! 
17:56 < AAA_awright> Well, I don't really see the use of having a public HTTP server, but being able to make HTTP requests to the web browser is so awesome that many core Web engineers woke up from their slumbers to say "I'm sensing an unusually high amount of awesome"
17:57 < TehShrike|Work> Now I really want a dnode server running with this thing in the browser...
17:58 < TehShrike|Work> Maybe I'll write up a small in-browser HTML/CSS editor that is automatically hosting whatever you've typed in so far
17:58 < bradleymeck> AAA_awright: if only it didnt need to go through a proxy
17:58 < AAA_awright> And what is the character on top supposed to be?
17:58 < AAA_awright> I don't have any font that supports it appearently :>
17:58 < pandemic> ෴ ?
17:59 < pandemic> looks like a mustache to me
18:02 < sreeix>  fire
18:04 < mattvv> boomerang
18:06 < bradleymeck> anyone know of a simple stream module that lets me just write to a size capped file? (this would be a nightmare to reimplement it looks like)
18:08 < Naeblis> Is there anyway I can play a music file on a node.js server? I basically need to play a sound(on the server) every time a client presses a button in his browser.
18:10 < EyePulp> anyone see textmate is available via github?
18:11 < EyePulp> what happened?
18:11 < EyePulp> https://github.com/textmate/textmate
18:11 < jp232> second system effect
18:11 < EyePulp> heh - no silver bullets
18:12 < EyePulp> No argument either. classic example.  however, they were still doing a for-pay version I thought
18:12 < TehShrike|Work> Naeblis: I guess you could just call an audio file with a system call...
18:20 < tprice> how do i read the last 20 lines of a log file?
18:20 < context> tail -20 file
18:21 < nlf> -n 20
18:22 < context> ive never needed -n
18:22 < context> nlf: try it with just -20, works here
18:23 < nlf> i put it there because some different implementations of tail require it
18:23 < nlf> and i log in to a lot of different servers
18:23 < context> ahh
18:23 < nlf> best to avoid things that might break
18:23 < nlf> it helps reduce irritation
18:31 < Randomachiever> Does anyone have an example of php cURL to a node server?
18:31 < domino_> whats the best way to have an http server listen to a remote domain? can I just do something like this:
18:31 < domino_> var app = require('http').createServer(handler)
18:31 < domino_> app.listen('http://remote.domain.com');
18:32 < sx> any recommendations to compile html templates into javascript, without node installed on server?
18:33 < sx> I want to use the dust.js templating engine with a PHP web project. I could install node on the server pretty easily I suppose if that is the best method.
18:33 < sx> and use it solely for template compilation
18:35 < sx> related: will installing node.js on an ubuntu server interfere at all with existing apache set up?
18:39 < xer0x> sx - nope
18:49 < snowinferno> Hi all, I'm working on a node project that interacts with MySQL and was wondering, which packages are most popular for MySQL interaction?
18:53 < Randomachiever> How would I go about this. User Updaes DB -> php encodes info into JSON -> cURL to node.js -> Node.js recieves JSON and sends infomation to users
18:53 < Randomachiever> I am stuck on the last to steps, the cURL to node, and node to utilize the JSON
18:56 < bradleymeck> Randomachiever: that sound like more a q for #php since you are having trouble getting php to send stuff
18:57 < bradleymeck> snowinferno: look at felixge's stuff
18:57 < snowinferno> thanks bradleymeck
19:04 < snowinferno> Is there a MySQL package that supports transactions?
19:06 < bradleymeck> snowinferno: not that i know of, MySQL transactions are very different than normal queries
19:06 < bradleymeck> which is hilarious
19:07 < franz_> hello
19:08 < franz_> somebody knows a user who has a chess game using node
19:08 < franz_> ?
20:05 <@Nexxy> the lengths some people go through to avoid having to replace legacy software is just amazing.
20:06 < Sapr0> 1.2 miles ?
20:07 <@Nexxy> Sapr0, we use metric in #Node.js 
20:07 < Sapr0> fine, 3.14 km then :P
20:08 < Domenic_> PI km
20:08 <@Nexxy> but 1.2mi is only like... 1.93km
20:08 < ClaudioAlbertin> π km
20:08 <@Nexxy> lol
20:10 < ngoldman> Anyone remember the url to that site that shows node modules listed by downloads or how many other modules are dependent on them or something?
20:10 < ngoldman> google has failed me
20:11 < hunterloftis> toolbox.no.de?
20:11 < ngoldman> hunterloftis: nope
20:12 < ngoldman> although that one is similar
20:12 < Domenic_> npmjs.org?
20:12 < Domenic_> https://npmjs.org/browse/depended
20:12 < Domenic_> Also s/modules/packages/g
20:12 < ngoldman> that might have been it and it was just eaten by the redesign
20:12 < ngoldman> ui is all unuseful now
20:12 < Domenic_> Strong disagreement
20:13 < ngoldman> :)
20:13 < context> i agree with ngoldman. we should have direct neural data injection already
20:13 < ngoldman> i would prefer to use npm via telnet
20:14 < context> i prefer to use npm with quantum telepathy
20:15 < context> i think i said that cause someone in the future said the exact same thing and my fingers were quantumly entangled with their thoughts
20:15 < ngoldman> here's the one I was trying to remember: http://nodejsmodules.org/
20:15 < ngoldman> although now that I look at it I prefer the other two
20:16 < Domenic_> lol @ client being the top tag
20:22 < samholmes> Can dnode replace socket.io completely?
20:22 < Domenic_> not in our hearts
20:23 <@Nexxy> Yes.
20:24 < samholmes> Nexxy: Is it farely simple to set up?
20:24 <@Nexxy> samholmes, maybe not quite as simple as socketio
20:24 <@Nexxy> but dnode + shoe is pretty nice
20:25 < samholmes> Hmm..
20:25 < samholmes> I need to get the same kind of thing that express has with req and res objects, specifically the req.session data.
20:28 < samholmes> Right now, I'm working with socket.io and what I did is put a .authorization method on io.of('/chat') and inside there I look up the session data using the cookie sent along with the socket connection, then I store this session data in the handshake.session data property. Now, all events can reference socket.handshake.session to access the session data.
20:28 < samholmes> The problem now is, that I want to create other "channels", other than '/chat'
20:30 < samholmes> So, rather than repeating this .authorization method call to prepare the session data within the handshake object, I tried putting the .authorization method call in my main app.js file and I called it on io instead of io.of('/chat'). This fails, because now my application crashes saying that socket.handshake.session isn't an object.
20:30 < samholmes> Nexxy: Is there a way I can do what I need to do with dnode and shoe?
20:31 < carli2> hi
20:31 < carli2> has someone experience with nodemailer or some other mailing method?
20:31 < samholmes> carli2: was just working with it earlier this week
20:32 < samholmes> Not much experience but what's the issue?
20:32 < carli2> i don't want to fill the auth field
20:32 < carli2> and the mail does does not get received
20:33 < carli2> Message sent: 250 2.0.0 Ok: queued as 5A8031E5D02
20:33 < samholmes> Why don't you want to fill the auth field?
20:33 < carli2> why do I need it?
20:33 < carli2> and which password should I take?
20:33 < carli2> and which username
20:34 < samholmes> carli2: The username and password of the SMTP server you're going to be sending emails with.
20:34 < carli2> samholmes: I want to send the mails myself. i'm implementing a web service
20:35 < Sapr0> samholmes: how'd you organized your sockets? atm i got them all stuck in app.js :| ... kinda fugly ... was thinking if there is some kind of seperation like routes in express
20:35 < samholmes> carli2: You who? In order to send an email it has to come from some server, some email address or server.
20:36 < samholmes> Sapr0: I made the socket.io exported object global, and then put the events and stuff for chat within my messages.js controller. However, this isn't the best way to do it I would assume.
20:36 < carli2> samholmes: why does an email needs to be sent from a server? this means I have to set up a mail server?
20:37 < samholmes> carli2: You'll need to set up a mail server or use a service like sendgrid. You could also use gmail or google apps' email service.
20:37 < samholmes> I'm using my godaddy's email service that came with my domain name.
20:38 < samholmes> There's also Amazon SES.
20:44 <@Nexxy> well, there goes the neighborhood
20:49 < carli2> samholmes: is there a better way than storing the cleartext password in my node.js script?
20:49 < blazes816> what's the simplest way to work on an npm package?  git clone it into node_modules? 
20:49 < blazes816> I ask because in ruby I'd set my Gemfile to point to a local checkout, but package.json doesn't seem to have the same functionality
20:50 < samholmes> carli2: I just do the cleartext way, but you could make your script connect to a database and then cache the password in a variable within your app.
20:56 < bradleymeck> blazes816: npm help link
20:56 < blazes816> bradleymeck: beautiful, thanks!
21:03 < samholmes> Does shoe or sockjs present the client's cookies on connection?
21:03 < dominictarr> samholmes, no.
21:03 < samholmes> dominictarr: then how do I maintain session data for connections?
21:03 < samholmes> http session data*
21:04 < dominictarr> there is some spiel in the sockjs doc about that not being secure because of all the fallbacks.
21:04 < dominictarr> I guess you have to send a token to the client and have him send it back.
21:04 < bradleymeck> samholmes send back uid from the server and check against remoteAddress over secure connection
21:04 < samholmes> send the token back?
21:05 < bradleymeck> generate a unique token identifying the session if the client doesn't send one
21:05 < dominictarr> uh, yeah. this answer sucks, I know.
21:05 < dominictarr> why can't browsers just use private keys?
21:06 < samholmes> bradleymeck: what?
21:06 < dominictarr> I mean, can't the web standards people see that is obviously the right way?
21:06 < ngoldman> is browserID still active?
21:07 < mmalecki> web standards people, ugh.
21:07 < mmalecki> this is what's wrong in committees
21:07 < samholmes> Wait... what will a token do? The client has the session ID in their cookies. Once the server gets that ID then all it has to do is look up the session data in the session store and store it in the connection's context.
21:08 < bradleymeck> client sends a request to server -> request has token and remoteAddress looks right ? grab session data  : generate a session id and send it back to the client and tell it to use that for future requests ( for example you could set the authorization: header to something like 'BearerToken myToken' )
21:08 < bradleymeck> samholmes if it doesn't send the cookie it wouldn't matter, i mean you could store it as a cookie for local reference
21:09 < bradleymeck> dominictarr something about the tried and true way being too hard
21:09 < samholmes> bradleymeck: Are you saying manage sockjs session data separately from express' session data?
21:09 < samholmes> :S
21:10 < bradleymeck> unless express somehow got rid of the tight coupling with requests thats how i would do it
21:10 < samholmes> I want to use the same session data in sockjs that I use in express.
21:10 < samholmes> bradleymeck: you mean req.session coupling?
21:10 < dominictarr> bradleymeck, it would be waaaaaay easier. there is so much unnecessary work around security.
21:11 < bradleymeck> dominictarr: agree, but c'est la vie
21:12 < bradleymeck> samholmes, pretty much, i cant just use it to get a session data from random id i can keep around
21:12 < samholmes> bradleymeck: if you use a session store you could?
21:13 < dominictarr> bradleymeck, but if we can't fix 'little' problems like this, how can we ever hope to get invited into the Galactic Federation?
21:13 < samholmes> I don't get it. The coupling is a benefit. If you want to access the session data outside of the req object then you can just use the session store you passed to the session middleware.
21:15 < bradleymeck> dominictarr: i don't want to be in the federation :)
21:15 < dominictarr> bradleymeck, you can join the klingons then.
21:16 < blazes816> or the Cardassia.....nvm
21:27 < crabdude> anyone here familiar with nodejitsu's flatiron/union (specifically the "after" streams)?
21:30 < jesusabdullah> crabdude: what's on your mind?
21:31 < crabdude> trying to grok the relationship of "before" and "after"
21:31 < jesusabdullah> yeah, that's a bit weird
21:31 < pringlescan> What's everyones favorite flow control library for node… for queues and such
21:31 < crabdude> i get that before is a connectware stack
21:31 < jesusabdullah> "after" is short for "add to the end of the req pipes stack"
21:31 < jesusabdullah> and "before" is "before the router"
21:31 < jesusabdullah> so, afters technically come before befores
21:31 < jesusabdullah> XD
21:32 < crabdude> that sounds like they're basically exactly reversed
21:32 < bradleymeck> pringlescan: async from caolan
21:32 < jesusabdullah> pringlescan: in general async is the handiest of async ctrl flow toolboxes
21:33 < jesusabdullah> pringlescan: for queues, I believe teej has one, and flatiron/neuron ain't bad
21:33 <@Nexxy> pringlescan, async ;P
21:33 <@Nexxy> teej!
21:33 < jesusabdullah> writing a circle queue is also fun and easy
21:33 < etcetera> if you have expensive operations that need to be done outside of node how do you architect them?
21:33 < crabdude> jesusabdullah: i saw some examples that returned streams from afterware, so it looks like maybe the afterware is more like a stream constructor?
21:34 < jesusabdullah> crabdude: Yeah, the "afters" are for streams
21:34 < etcetera> like if I wanted to have a mono service running in the background doing some expensive work....and have node listen for a completed event...
21:34 < jesusabdullah> crabdude: internally, union mostly deals with streams
21:34 < jesusabdullah> crabdude: excepting for the middleware stack
21:34 <@maxogden> etcetera: there are lotsa databases/job queues you can use for that
21:34 < jesusabdullah> etcetera: require('child_process').spawn
21:34 < etcetera> maxogden: hmm, is that part of node or something?
21:34 < jesusabdullah> etcetera: and communicate over stdin/stdout/stderr
21:35 < jesusabdullah> etcetera: alternately, separate http server that you post jobs to
21:35 < jesusabdullah> etcetera: alternately, a tcp server using some lightweight communication protocol like newline-separated json
21:35 < etcetera> yea a simple HttpListener in mono + node request sounds more viable.
21:36 < jesusabdullah> maybe throw some json rpc on that
21:36 < etcetera> haha, of course, why would I have node abstract out some other format?
21:36 < samholmes> What's the point of .of() in socket.io?
21:36 < crabdude> jesusabdullah: so are the requests fully buffered by the time they hit the router when connectware is present? (when it's not?)
21:37 < jesusabdullah> crabdude: I believe the connect middlewares get a buffered request by default, though I'm also sure you can turn that off and have pure unbuffered streams
21:37 < crabdude> oh, right, I saw that
21:38 < crabdude> so if a route passes {stream: true}, it may in theory still get buffered in a middleware right?
21:40 < pringlescan> Nexxy, I'm not sure if I can spend another day looking at async ;-)
21:40 <@Nexxy> pringlescan, lol
21:40 < pringlescan> …. it's awesome though
21:40 <@Nexxy> you could always just do it without a library
21:40 < test_> Hello
21:42 < crabdude> jesusabdullah: thx
21:42 < jesusabdullah> crabdude: You're welcome.
21:59 < Hotroot> I'm currently studying node, and hoping to get an internship later on. I'm doing fairly well learning JS and node, but I'm wondering if anyone has some good reading material about servers in general.
21:59 < Hotroot> Stuff like storing passwords, optimizations, load balancing, preventing data loss, etc.
22:01 < tprice> when i call Module from module.js for the fist time do i call Module.prototype.load or Module._load?
22:01 < tprice> nvm
22:04 < samholmes> How could I do this with dnode and shoe? http://www.danielbaulig.de/socket-ioexpress/
22:09 < AAA_awright> Hotroot: That's... a wide spectrum of topics for us to comment on in IRC, heh
22:09 < AAA_awright> How does one "study" Node.js?
22:10 < s5fs> AAA_awright: how does one study anything?
22:11 < AAA_awright> I assume the use of that term implies more than just looking at it and looking at how it works, that's just standard development
22:11 < Hotroot> I mean learning how to use it
22:11 < Hotroot> Yes, a bit general again, I know
22:11 < s5fs> Hotroot: I think you just "do".
22:11  * s5fs waves hands
22:11 < s5fs> HTH!
22:12 < Hotroot> Basically making test projects and reading the API until I would feel accepting a job/internship with node
22:12 < Hotroot> *comfortable
22:12 < Hotroot> AAA_awright: I mean any standard reading about how one would set up a server
22:13 < s5fs> Hotroot: personally, I go through a basic project dev cycle to learn things. write requirements, design a UI, design the data model, then code.
22:13 < Hotroot> I know enough that I could for sure make a working web server, but I'm not to knowledgeable about load balancing / multiple server setups, and data loss prevention
22:13 < s5fs> unless I just wanna know one specific thing, in which case I'll dev a little test harness and then code.
22:14 < Hotroot> Yeah, that's sort of what I do
22:14 < AAA_awright> Hotroot: How much do you know about client-server design, TCP, HTTP, unix philosophy, the REST dissertation, etc?
22:15 < Hotroot> I don't really know what rest is, but I think I pretty well understand TCP, HTTP, and enough about *nix
22:15 < AAA_awright> http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm is an overview of various networking styles, and then proceeds to describe the style of HTTP (i.e., REST) in great detail
22:15 < Hotroot> I know about HTTP headers, the conveniences and downsides of TCP vs UDP
22:16 < Hotroot> I might know what rest is, just not the name, I'll check
22:16 < AAA_awright> It goes some into unix and whatnot, I think it should be required reading for anyone developing a webserver, so it's especially relevant to the Node.js crowd
22:16 < Hotroot> AAA_awright: Thanks, I'll check that out =)
22:16 < Hotroot> I use linux as my regular OS, so I think I know a decent amount
22:16 < pringlescan> Nexxy, https://gist.github.com/3318582 … seriously… how is that going to give a stack error? I'm lost.
22:16 < AAA_awright> Roy Feilding write the HTTP spec, btw
22:17 < AAA_awright> *Fielding
22:18 < AAA_awright> Hotroot: Also, http://en.wikipedia.org/wiki/OSI_model
22:18 < s5fs> Hotroot: if you're down for a longer read, check this - http://berb.github.com/diploma-thesis/community/index.html
22:18 < Hotroot> Yeah, on wikipedia and I'm pretty sure I understand REST
22:19 < s5fs> Hotroot: its not very deep per-se, but provides a good overview on a lot of topics. read it end-to-end, then branch out on topics of your interest.
22:19 < s5fs> sharp character like you should be able to plow through in a couple evenings.
22:19 < Sapr0> What kind of debug does node.js come with or any other npm library ?
22:19 < pringlescan> Nexxy, it seems like the problem was putting any kind of code instead of fs.readFile, I just moved my queue code out of it and now it seems to be working...
22:19 < Sapr0> I get a error: RangeError: Maximum call stack size exceeded, no ideea how to trace whats causing it
22:20 < Hotroot> s5fs: Thanks, bookmarking all these links
22:21 < Hotroot> The "stateless" part of REST doesn't really seem possible though. Client data has to be stored on the server if anything dynamic is to be done
22:21 < ClaudioAlbertin> Sapr0, it sounds to me like a file A that requires a file B that requires athe file A again
22:22 < AAA_awright> Hotroot: The Wikipedia page on REST is better than it was, but it's still Pretty Awful. HTTP is just one RESTful protocol, for instance, and REST has nothing to say on the usage of specific HTTP verbs
22:22 < distracteddev> A looong time ago I saw someone convert a text file into a http page where it seemed like the connection never closed and the browser just kept that connection open and the text was updated as that file had data written to it. Am I just crazy or is that not possible?
22:22 < s5fs> Hotroot: AAA_awright is right, read the wiki page and then read the HTTP RFC to get a better understanding of the verbs.
22:22 < samholmes> In PHP I would simply echo out the errors. What's a better way to handle errors from within my application?
22:23 < AAA_awright> samholmes: During development, I just let them bubble up and kill the program, then I know I have to fix something :>
22:23 < Hotroot> I understand the verbs pretty well. Maybe not so much about the less used verbs, but I pretty fully understand GET and POST
22:24 < AAA_awright> Hotroot: How about idempotentcy?
22:24 < s5fs> Hotroot: sounds like you're halfway there
22:24 < samholmes> AAA_awright: Yeah dur, if it's a coding error. If there something wrong with the mysql schema in production or some other unexpected thing, there has to be a way for me to log these errors and present a message to the user
22:24 < samholmes> I'm trying to think of a way that would be both unobtrusive to the user and very helpful to me as the developer.
22:25 < jesusabdullah> Nexxy: Your babby is adorable. fyi.
22:25 < samholmes> If a user keeps getting an error, when no other user is getting the error, I need to know how to support this users with some kind of reference code or something. Idk
22:25 < Hotroot> AAA_awright: Hadn't heard of that, but I bookmarked it too
22:25 < s5fs> jesusabdullah: he's got such red hair!!
22:26 < AAA_awright> samholmes: I have a particular type of Error called UserError which I can catch, and those errors get displayed to the user, all the others just kill the request and get printed out with console.error()
22:26 < samholmes> AAA_awright: so you make this UserError object a global or sommin?
22:26 < Hotroot> Also, quick random question. If I use bcrypt to store a password, I don't have to keep the salt do I? Still learning crypto too, but I don't see how the salt can just be discarded. 
22:26 < samholmes> Meh, I'll figure out errors later.
22:26 < AAA_awright> Hotroot: Your best bet, if you really want to be familiar with HTTP and understand it throughly, read the HTTP/1.1 spec, and the REST dissertation. It'll take a few days but it's incredibly insightful
22:26 < samholmes> I need to focus on some other things ATM
22:27  * samholmes quits the error convo
22:27 < AAA_awright> Hotroot: It explains all of the various meanings and semantics, what idempotence means, the fact that PUT is idempotent and POST is not, GET is nilpotent, HEAD, etc
22:27 < Hotroot> Yeah, I know a bit, but I really should understand more about http
22:28 < trb_> Hotroot: don't bother with it, unless you need to know the intimate details
22:28 < AAA_awright> Hence the qualification "if you really want to be familiar"
22:28 < AAA_awright> And it can't hurt, anyways
22:28 < AAA_awright> At worst it's a waste of time
22:28 < trb_> it can hurt, headaches
22:29 < trb_> but true, it can be useful
22:29 < AAA_awright> Maybe it could be too many vocabulary terms at once
22:29 < s5fs> TMA = too many acronyms
22:29 < AAA_awright> But expanding your vocabulary is always helpful within that field
22:29 < Hotroot> If I'm going to get a job working on a web server, I would like to know a lot about http
22:29 < AAA_awright> It lets you organize and analyze within a framework
22:29 < Hotroot> I'll see, if something seems useless enough, I won't cram it in my brain
22:29 < trb_> Hotroot: web server only? what tech?
22:29 < trb_> apache?
22:30 < trb_> nginx, varnish?
22:30 < trb_> other?
22:30 < Hotroot> Well, my goal isn't web servers specifically, just writing server code in node.
22:30 < Hotroot> Majority of jobs I see are for web servers though
22:30 < AAA_awright> samholmes: Uh, you'll need to be able to get a reference to the UserError object somehow, probably with require()
22:31 < samholmes> AAA_awright: either that, or some other means
22:31 < trb_> Hotroot: you don't really need to know http then if you are doing nodejs
22:32 < trb_> Hotroot: use control (github.com/serby/control)
22:32 < AAA_awright> If you're doing stateless protocols, HTTP is pretty much _the_ protocol to choose
22:32 < Hotroot> Well for express at least I've needed to know GET, POST, cookies, etc.
22:33 < Hotroot> And wished that I've known more, as I don't understand a lot of the headers
22:33 < trb_> Hotroot: some perl cgi is what you need :p
22:33 < Hotroot> Wikipedia says I do need to keep the salt, as I thought, so I suppose bcrypt stores it with the hash?
22:34 < Hotroot> trb_: I'm probably not going to learn perl =P
22:34 < trb_> pity :p
22:34 < trb_> but do have a look at control
22:34 < Hotroot> I have enough languages that I've decided to learn
22:34 < Hotroot> Yeah, kind of ignoring a lot of modules atm though, getting flooded with them all
22:35 < Hotroot> Unless I realize that I need a module for something
22:35 < Hotroot> (bcrypt, express, mongolian, etc)
22:35 < trb_> control is not a module
22:38 < Hotroot> trb_: Oh. Yeah, control looks pretty neat
22:42 < upstream> Hotroot: npm install mortalkombat
22:43 < upstream> very useful...
22:43 < upstream> https://github.com/mediaupstream/mortalkombat
22:45 < shwaiil> hi
22:47 < shwaiil> I'm thinking about learning node.js. I found about socket.io, but I'm not understanding what it's used for. Anyone can me explain me with a few words ? tks
22:49 < AAA_awright> TehShrike TehShrike|Work: And once we have the webRTC p2p API, we get browser-to-browser HTTP messaging, over an encrypted connection, no proxy.
22:50 < pringlescan> Could anyone please take a look at 43 lines of code using the async module? I've been trying to use it for days and I keep getting stack errors. https://gist.github.com/3318723
22:52 < TehShrike|Work> AAA_awright: Oh man I know, I can't wait!
22:52 < TehShrike|Work> That's what I'm really waiting for.
22:54 < Hotroot> shwaiil: Node or socket.io?
22:55 < shwaiil> Hotroot: socket.io
22:55 < shwaiil> tks for looking. I'm currently searching
22:56 < Hotroot> Node is server-side Javascript, useful for writing servers. Socket.io is for websockets. Browsers can't use straight TCP sockets with servers, so we use websockets
22:56 < Hotroot> (Feel free to nitpick this, everyone here)
22:56 < upstream> pringlescan: you should look at the documentation for async.series a bit more carefully
22:56 < upstream> https://github.com/caolan/async/#series
22:56 < shwaiil> Hotroot: ehhh... but doesn't latest versions of chrome, firefox, have websockets ? (maybe not, don't really know)
22:57 < Hotroot> So rather than just single [Request] -> [Reply] stuff, we get basically data streams
22:57 < Hotroot> shwaiil: Yes, most modern browsers support websockets
22:57 < AAA_awright> Note that it removes the stateless nature of HTTP when you have a data stream like that
22:57 < Hotroot> If not, socket.io defaults to flash, or AJAX
22:57 < Hotroot> So browser support shouldn't be a problem
22:58 < Hotroot> Yeah, it's basically a TCP socket from what I've seen
22:58 < shwaiil> Hotroot: ah ok, so basically we just use socket.io for cross browser support ?
22:58 < pringlescan> upstream, thanks for checking it out… wrapping my callback in a process.nexTick seems to have solved the problem
22:58 < Hotroot> Uhh
22:58 < Hotroot> No
22:58 < Hotroot> Not if you mean what I think you mean
22:59 < Hotroot> It's like changing it from sending emails to someone to chatting with them over IM
22:59 < shwaiil> Hotroot: oh yeah I see
22:59 < Hotroot> As AAA said, it makes it no longer stateless, it's now a data socket
23:00 < Hotroot> Before you get into writing servers though, you should probably do a bit more research on that stuff. 
23:00 < Hotroot> (Not that I'm really one to talk)
23:00 < phonebook_> it is cross browser though?
23:01 < Hotroot> Socket.io? Yes
23:01 < Hotroot> As I said, it can default to multiple technologies
23:02 < Hotroot> If you manage to find a browser with no Flash, Java, Websocket, or Ajax support, then no, I don't think it will work
23:02 < phonebook_> my boss told me to start looking up websockets. i did and it seemed hopeless because of the lack of support and probably spotty implementations
23:02 < phonebook_> node.js is the answer?
23:03 < shanse> node is the answer
23:03 < phonebook_> outstanding
23:03 < shanse> the answer you've been waiting for all your life
23:04 < phonebook_> will it give me six pack abs and make me popular with all the ladies?
23:04 < shanse> yes
23:04 < TehShrike|Work> phonebook_: if you can use websockets to stream the six-pack to your abs, yeah
23:04  * phonebook_ nods head in approval
23:09 < Hotroot> Not node specifically, but socket.io yes
23:11 < samholmes> Anyone here use socket.io, the #socket.io channel is pretty dead.
23:11 < samholmes> I'm wondering if rooms are namespace specific?
23:12 < samholmes> Even if they are, are global rooms available to namespaces? Could I do this io.of('/chat').in(userId).emit('...')
23:12 < etcetera> moin
23:12 < samholmes> Even though the userId room was joined globally.
23:13 < shwaiil> Q: Thinking about learning node.js, can I assume I could use backbone MVC with node.js ?!
23:13 < shwaiil> Q: Thinking about learning node.js, can I assume I could use backbone MVC with node.js ?!
23:13 < shwaiil> oops!
23:21 < mscdex> the cake is a lie
23:26 < etcetera> in a traditional blocking web app I would inject an instance of a connection to a data store.
23:26 < etcetera> what's the preferred way to talk to a database in a node.js app?
23:27 < jesusabdullah> etcetera: depends on the database
23:27 < etcetera> redis or postgres usually.
23:27 < jesusabdullah> so, either the "redis" module or a pgsql module
23:27 < etcetera> right, but would I initialize the connection when the handler method is fired?
23:28 < etcetera> or inside the model object?
23:28 < etcetera> or globally within the application?
23:28 < brainss> shwaiil: backbone Views won't work without a DOM
23:28 < jesusabdullah> etcetera: probably the second or the third
23:28 < jesusabdullah> etcetera: I usually create a db connection at the module level, or I implement a database "plugin" for broadway
23:29 < jesusabdullah> etcetera: You might like flatiron/resourceful
23:31 < bawwwller> in the topic does all the OOOOOO's represent output?
23:32 < bawwwller> or am i putting too much thought into it?
23:32 < jesusabdullah> I think the topic represents how 
23:32 < jesusabdullah> Luke Skywalker
23:32 < jesusabdullah> says "node.js"
23:32 < jesusabdullah> after php tells him that he IS his father
23:33 < bawwwller> so it is output
23:33 < radpanda3> hey guys i'm trying to install this on centos 5.0 and i'm having some troubles. :/
23:33 < bawwwller> remove 5.0 and install 6
23:33 < bawwwller> its soooooo much simpler
23:33 < etcetera> jesusabdullah: module level?
23:34 < etcetera> how is that different than doing it at the application level unless you are calling require ad-hoc in handler.
23:35 < radpanda3> http://paste2.org/p/2103861
23:35 < radpanda3> my host doesnt have centos 6
23:35 < radpanda3> :/
23:35 < mscdex> radpanda3: yum install gcc gcc-c++
23:35 < trb_> radpanda3: remove centos and install debian, much much simpler
23:35 < trb_> :p
23:35 < radpanda3> ty mscdex 
23:35 < bawwwller> ubuntu > debian
23:35 < bawwwller> any day
23:35 < trb_> bawwwller: ubuntu == debian
23:36 < mscdex> radpanda3: you'll probably also need to install `python26`
23:36 < bawwwller> ubuntu >= debian
23:36 < trb_> bawwwller: ubuntu === debian
23:36 < tgriesser> anyone around that could give some help on properly setting up js prototype chains
23:36 < mscdex> radpanda3: but i think that package is only in the EPEL repo, so you'll have to add that repo first
23:36 < nlf> ubuntu isn't even really a debian base any more
23:36 < nlf> it used to be
23:36 < radpanda3> ty mscdex 
23:36 < nlf> at this point it's drifted so far off course that the only similarity is that they both use apt
23:36 < radpanda3> i think i have the epel repo
23:37 < trb_> nlf: ubuntu steals a lot of packages from debs though
23:37 < bawwwller> lol STEALS
23:37 < mscdex> radpanda3: also what i  did was rename the existing /usr/bin/python (2.4 version) and then did a symlink /usr/bin/python -> /usr/bin/python26
23:37 < bawwwller> cant steal whats free
23:37 < nlf> ubuntu has been building their own packages for a very long time
23:37 < bawwwller> bro
23:37 < nlf> do *some* debian packages work in ubuntu? sure, but that's just because they both use apt
23:37 < radpanda3> mscdex:  that sounds hard -- do i have to do that to get it to work?
23:37 <@Nexxy> jesusabdullah, thank you! ;3 I think so too!
23:37 < trb_> well, ubuntu is a commercial entity these days, they don't do that much work but rather take the same packages from debian
23:37 < nlf> they don't take packages from debian
23:38 < nlf> they don't even use debian patches most of the time any more
23:38 < nlf> they can't, the distros are too dissimilar
23:38 < mscdex> radpanda3: i don't know, but it makes things a lot easier. after installing `python26` just do: mv /usr/bin/python /usr/bin/python.old && ln -s /usr/bin/python26 /usr/bin/python
23:38 < trb_> debian is slow, but lets not get into deb wars
23:39 < bawwwller> and ubuntu has 1.5 k users where debian only 1200
23:39 < radpanda3> how do i install python again?
23:39 < mscdex> debian supports i586 kernels!
23:39 < trb_> I predominately use ubuntu at work
23:39 < mscdex> radpanda3: `yum install python26` if you have epel
23:39 < deoxxa> bawwwller: that's like a difference of 300 people
23:39 < trb_> the non ubuntu systems run debian or windows
23:39 < radpanda3> already installed
23:39 < bawwwller> i only use ubuntu bcos its from where i am from
23:39 < radpanda3> okay i'm going to go through the process again
23:39 < nlf> i use ubuntu almost exclusively too, but that's primarily because it comes with upstart
23:40 < radpanda3> wish me luck
23:40 < radpanda3> brb
23:40 < radpanda3> :D
23:40 < nlf> that said, i also have a lot of experience with debian
23:40 < mscdex> heh
23:40 < nlf> and i can tell you that they are nowhere near the same thing any more
23:40 < trb_> but at home I have a couple of ubuntu/debian systems, and some freebsd systems (for zfs of course!)
23:40 < bawwwller> i have Windows 7 at home :D
23:40 < mscdex> it's nice to be able to run debian on an amd k6-2
23:41 < bawwwller> but Ubuntu-boytjie at work
23:42 < bawwwller> what made ubuntu so popular anyway?
23:42 < bawwwller> was there just a lot of money thrown at it
23:42 < trb_> the stupid release names
23:43 < bawwwller> candid camel
23:43 < bawwwller> or candidCamel
23:43 < bawwwller> :)
23:43 < mscdex> i remember ordering a free cd of ubuntu 4.10 i think it was
23:43 < trb_> kinky koala
23:43 < AAA_awright> It actually had a somewhat cohesive UI
23:43 < AAA_awright> ... had
23:44 < trb_> ui, who really cares about the ui when discussing flavour choices?
23:44 < mscdex> unity 4 lyfe
23:44 < nlf> what made it popular was their efforts to make linux easy to use for the "typical" person
23:44 < bawwwller> :) did a good job though
23:45 < bawwwller> i remember the days of installing SUSE
23:45 < bawwwller> was painful
23:45 < nlf> an intuitive installer, a sane set of default packages
23:45 < nlf> etc
23:45 < trb_> the typical persion doesn't use linux
23:45 < trb_> bawwwller: suse was horrid
23:45 < bawwwller> would have rather peiced my eyeballs
23:45 < trb_> any redhat based linux is horrid in my opinion
23:45 < mscdex> i remember install redhat 7.2
23:45 < mscdex> *installing
23:46 < trb_> 7.2 was my last redhat
23:46 < bawwwller> lol
23:46 < bawwwller> i use Centos 6
23:46 < trb_> since then, its been debian, gentoo, ubuntu, non-linux
23:46 < bawwwller> its nice
23:46 < mscdex> i installed redhat 7.2 on an old lunchbox pc
23:46 < mscdex> those were the days
23:46 < trb_> the non-linux being openbsd and freebsd
23:46 < bawwwller> what is a lunch box pc?
23:47 < mscdex> it was the big ol' plastic enclosure that housed an AT motherboard and had a built-in adjustable monochrome screen
23:47 < trb_> centos is just redhat, horrid
23:47 < mscdex> and attachable keyboard
23:47 < trb_> rpm's are backwards
23:47 < bawwwller> centos is alright
23:47 < mscdex> the keyboard snapped into place in front of the screen to protect it :-d
23:47 < bawwwller> i only use it for hosting node projects tho
23:48 < trb_> bawwwller: as long as you never want to uninstall anything....
23:48 < mscdex> eh?
23:48 < bawwwller> ? iv got like 3 instances at work
23:48 < bawwwller> and 5 of my personal vms
23:48 < bawwwller> and iv uninstalled plenty
23:49 < mscdex> centos satisfies enterprisey people on a budget ;-)
23:49 < bawwwller> i actually wouldnt use anything other than centos for web projects
23:49 < bawwwller> what would a person on a none-budget use?
23:49 < trb_> things may have got better in redhat for uninstalls, but its always been a pita for me
23:49 < bawwwller> redhat?
23:50 < bawwwller> there is a repo for every application iv ever needed
23:50 < mscdex> yes, redhat ;-) money to pay for the ability to use yum
23:50 < trb_> and anyway, have you tried smartos for node stuff yet?
23:50 < qbit> real men run openbsd-current ... 
23:50 < qbit> >.>
23:50 < qbit> <.<
23:50 < bawwwller> nope havent looked at smartos
23:50 < mscdex> i never had good luck with solaris-y oses
23:50 < bawwwller> what is it?
23:51 < mscdex> i remember trying to do something as simple as install packages
23:51 < mscdex> and some things just didn't work
23:51 < bawwwller> #smartos ?
23:51 < trb_> bawwwller: its what became of opensolaris - one of the forks
23:51 < qbit> smartos is joyent's os
23:52 < bawwwller> hmm dont think my isp supplies that image :/
23:52 < trb_> I'd use it more if I ran intel kit at home
23:52 < mscdex> rhel/centos and debian do packaging well
23:52 < bawwwller> i might try it out on my raspberry pi when it arrives
23:52 < bawwwller> whats so great about it?
23:52 < mscdex> we need apt-get or yum for opensolaris!
23:52 < bawwwller> mscdex what you using ? rpm files?
23:52 < trb_> bowen199: its opensolaris, has kvm, plus the usual solaris stuff like zones
23:52 < mscdex> eh?
23:53 < qbit> mscdex: it has pkgsrc no? 
23:53 < bawwwller> if u dont have yum or apt
23:53 < bradleymeck> bawwwller: zones instead of virtualization, dtrace, a lot of fancy tools from solaris, pkgin which is a step up from pkgsrc
23:53 < mscdex> qbit: no idea, i couldn't figure whatever system it had out
23:53 < mscdex> bawwwller: i don't remember what opensolaris used/uses
23:53 < qbit> heh - k
23:53 < qbit> i know it can use pkgsrc 
23:53 < trb_> pkgin is not my favourite, is rather crap really
23:53 < mscdex> i should just be able to do "blah install package"
23:54 < qbit> joyent's smartos boxes ( on no.de ) have pkgsrc 
23:54 < mscdex> this is also why i dislike bsd
23:54 < bradleymeck> mscdex, pkgin install couchdb
23:54 < mscdex> ;-)
23:54 < trb_> illumian looks interesting, given the apt pkg manager used by it
23:54 < qbit> mscdex: i have found the bsd ports ( specifically openbsd's ) to be pretty awesome 
23:54 < bawwwller> bradleymeck: so do zones run more efficiently?
23:54 < bradleymeck> bawwwller: for io yes
23:54 < qbit> what a pkg .. do pkg_add -v pkgname
23:55 < mscdex> i strongly dislike bsd ports
23:55 < qbit> want to build from source .. cd /usr/ports/pkgname; make install clean
23:55 < mscdex> wtf kind of name is pkg_add for a command
23:55 < qbit> mscdex: how come? 
23:55 < trb_> bawwwller: its container like virtualisation, but run a kvm inside that and you have full control
23:55 < mscdex> srsly
23:55 < mscdex> why can't it just be "pkg"
23:55 < mscdex> pkg install foo
23:55 < bawwwller> how does it distrobute resources?
23:55 < qbit> mscdex: make ssense no.. package add? .. more sense than say.. yum.. or aptitude
23:55 < mscdex> why do i need silly command line arguments
23:55 < trb_> mscdex: pkg_add is not ports, ports is source based
23:55 < bradleymeck> trb_ bawwwller if the zone is smartos you dont need kvm ontop of it
23:55 < bawwwller> would it be suitable for mutiple users
23:56 < trb_> bradleymeck: no, unless you want to run linux in that zone
23:56 < qbit> trb_: on openbsd the packages are exactly what is installed form the ports
23:56 < mscdex> on debian i don't do: apt-get -vasdfas install foo
23:56 < mscdex> :p
23:56 < trb_> qbit: I honestly have never needed to install anything extra in obsd
23:56 < bradleymeck> trb_ linux is in kvm, smartos running a smartos zone is without kvm, just kernel straight through
23:57 < qbit> trb_: not even node? 
23:57 < mscdex> there's something to be said for consistency in package manager user interfaces across *nix operating systems
23:57 < trb_> bradleymeck: smartos has kvm support in the kernel, can run kvm guests
23:58 < trb_> qbit: no, I use fbsd for a little bit of node, but for full flexbility I use linux, install node (and npm) and then install the n npm module
23:58 < bradleymeck> trb_: yes but i was trying to say you dont use kvm if you are running a smartos zone as the guest
23:58 < trb_> manage node versions through that
23:58 < trb_> bradleymeck: no, but it would be silly to run smartos as guest
23:58 < bradleymeck> trb_ we have thousands of them
23:58 < trb_> ok, but its still crazy
23:59 < qbit> crazy is assuming they can't be managed well :P 
23:59 < trb_> why are you running thousands of smartos guests?
23:59 < bradleymeck> dtrace and io performance, paas
23:59 < trb_> wouldn't it be better to run a few servers running smartos proper?
23:59 < bradleymeck> trb_ they run smartos proper with smartos zones
--- Log closed Sat Aug 11 00:00:10 2012
