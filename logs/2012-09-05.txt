--- Log opened Wed Sep 05 00:00:22 2012
00:03 < DeathRayDragonLu> Anyone know how to hook up more than one layout.hbs file if you're using handlebars with express on the backend?
00:03 < DeathRayDragonLu> Been scouring the interwebs, and can't find anything...
00:05 < DeathRayDragonLu> Been using this wrapper: https://github.com/donpark/hbs
00:07 < DeathRayDragonLu> And thought maybe I could parse out my own hbs helper to do the secondary layout...
00:15 < john3909> After making Nodejs V0.8.8, I'm doing "make test" and I'm getting several errors. The first error is related to test-https-pfx. The error is on crypto.js line 120 "c.context.loadPKCS12(options.pfx, options.passphrase)". My guess is that I'm missing a package, but I'm not sure which one.
00:20 < john3909> Is there a list of packages that Nodejs requires?
00:22 < TooTallNate> john3909: a few failures is probably ok
00:22 < TooTallNate> node probably wouldn't have built if you were missing any libs, so that's probably not the case
00:23 < gnoirzox> Prerequisites (Unix only):
00:23 < gnoirzox> * Python 2.6 or 2.7
00:23 < gnoirzox> * GNU Make 3.81 or newer
00:23 < gnoirzox> * libexecinfo (FreeBSD and OpenBSD only)
00:23 < john3909> TooTallNate, I built the same version under Ubuntu and then on an embedded board. My desktop has 1 error, and my embedded board has 28
00:23 < john3909> Ubuntu desktop
00:23 < ChrisPartridge> john3909: have openssl?
00:24 < TooTallNate> john3909: are you using the bundled openssl or linking to the system one?
00:24 < john3909> ChrisPartridge, I have openssl installed
00:25 < john3909> ToolTallNate, I guess I'm using the one I installed with opkg install openssl
00:27 < john3909> openssl - 1.0.0j-r15.3
00:28 < john3909> On my desktop openssl - 1.0.1-4ubuntu5.5
00:31 < john3909> Looking on my Ubuntu Desktop, dependencies show libc-ares2, libc6, libev4, libgcc, libssl, libstdc, libv8 and zlib1g
00:32 < TooTallNate> c-ares, libel, v8, libssl, v8 and zlib are all bundled into node by default now
00:32 < TooTallNate> john3909: you should really use the bundled openssl if possible
00:33 < TooTallNate> i.e. just do a regular "./configure" instead of "./configure --shared-openssl"
00:33 < john3909> TooTallNate, you just answered my next question. 
00:34 < john3909> That is what I did. I used ./configure and it ran without error
00:34 < john3909> Make also runs without error
00:34 < john3909> Strange that I get all these errors when I run make test
00:34 < TooTallNate> john3909: in any case, what are the errors you're seeing?
00:35 < TooTallNate> gist them all
00:35 < TooTallNate> also, this is an ARM board we're taking about?
00:35 < john3909> node test/simple/test-https-pfx.js
00:35 < john3909> crypto.js:120
00:35 < john3909>       c.context.loadPKCS12(options.pfx, options.passphrase);
00:35 < TooTallNate> john3909: use gist.github.com
00:36 < john3909> Let me run the test again
00:37 < TooTallNate> john3909: also, what branch of node are you building? v0.8? master?
00:39 < john3909> V0.8.8
00:41 < TooTallNate> john3909: and this is an ARM processor?
00:41 < john3909> Yes
00:41 < john3909> CortexA8
00:42 < TooTallNate> john3909: you should try my "pi" branch https://github.com/joyent/node/compare/joyent:v0.8...TooTallNate:pi
00:42 < TooTallNate> it says "pi" but the fixes should help all ARM processors
00:42 < john3909> ToolTallNate: excellent
00:43 < duko> open pandora?
00:45 < TooTallNate> john3909: does "os.cpus()" crash on your current build?
00:51 < john3909> TooTallNate: https://gist.github.com/3628623
00:54 < DeathRayDragonLu> Anyone know an easy way to find the root directory of a project?
00:54 < DeathRayDragonLu> __dirname <— returns the current directory
00:55 < DeathRayDragonLu> but what if you don't know which embedded directory you're in, and you need to find the root?
00:55 < drudge> you can possibly use process.cwd()
00:56 < john3909> TooTallNate: where do I find your pi repo?
00:57 < DeathRayDragonLu> interesting...
00:57 < DeathRayDragonLu> that worked!
00:57 < DeathRayDragonLu> thx!
00:59 < john3909> TooTallNate: I find it
00:59 < john3909> I found it
01:02 < sbisbee> Hey - Hopefully a qq: i'm creating a readable stream, keeping it in memory for a bit, and then trying to pipe it to a writable stream. Both streams are files. I've tried using resume/pause, but to no avail - I assume the data events are flying by before the pipe can be set up. Does this sound right?
01:12 < asdf12> how do i do write a regexp obj that includes a object string, like var str = 'hi'; /^-str-/ ?
01:14 < gkatsev> asdf12: you need to use the regexp constructor for that.
01:14 < ChrisPartridge> asdf12: use new RegExp("^" + str);
01:15 < asdf12> ok thanks
01:15 < asdf12> i wonder which would be faster then constructing a regexp obj and using .test()
01:15 < asdf12> or just manually searching by index
01:15 < asdf12> on a string
01:16 < mmalecki> asdf12: searching by index would be faster in optimistic case
01:16 < ChrisPartridge> asdf12: seems like premature optimization to me
01:17 < mmalecki> if you really care about speed, just write a function to compare first chars
01:17 < mmalecki> but in most cases, you don't need it :)
01:17 < gkatsev> jsperf.com
01:17 < gkatsev> really, write it one way and if you see a performance issue, profile it and optimize whatever needs to be optimized away
01:18 < mmalecki> gkatsev++
01:18 < asdf12> i was just curious because what i was reading was .test was fast, just wasn't sure how fast
01:20 < gkatsev> you can be curious, but don't base your code around curiosity
01:20 < gkatsev> or, well, dont base production code around curiosity.
01:20 < john3909> TooTallNate: building from you repo, I get the following error: "/home/root/node/deps/v8/src/atomicops_internals_arm_gcc.h:38:30: fatal error: libkern/OSAtomic.h: No such file or directory"
01:21 < TooTallNate> john3909: *shrug* i haven't seen that one before
01:21 < TooTallNate> but it looks like you're missing some header files possibly
01:22 < john3909> I'm looking into that now
01:22 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:23 < john3909> TooTallNate: Your pi branch seems to be at V0.8.9. Is that what I should be building?
01:24 < TooTallNate> john3909: it's somewhere in between 0.8.8 and 0.8.9, but ya it should be fine
01:24 < john3909> Thx
01:24 < TooTallNate> line 38 of my atomicops_internals_arm_gcc.h doesn't even mention libkern/OSAtomic.h
01:24 < TooTallNate> the entire file doesn't
01:25 < john3909> Stupid, I didn't change the branch
01:25 < john3909> Sorry
01:25 < john3909> I was still on your iphone branch
01:31 < TooTallNate> john3909: hahah, that branch is ancient
01:31 < TooTallNate> (needs an update)
01:36 < ChrisPartridge> Does npm get installed with the OSX package?
01:37 < jtomasrl> why im getting so many conecciont when doing db.use ? https://gist.github.com/3628957
01:44 < john3909> TooTallNate: building Nodejs on an embedded processor is sooo slow. BTW, have you used your version of Nodejs with Cloud9ide? I was doing some testing and v0.8.8 seems to work, but v0.9.0 does not work so I hope your branch works OK.
01:44 < TooTallNate> john3909: that's why i cross compile :D
01:44 < TooTallNate> and no, i haven't messed with cloud9 ide in a while
01:45 < john3909> I started working on a OpenEmbedded build recipe and I got too many errors. Need to work on that.
01:48 < DeathRayDragonLu> NODE IS SO FREAKIN' COOL!!!
01:56 < mscdex> node.js rules!
01:56 < adambreen> hey folks, is anyone here familiar with dotcloud?
01:59 < john3909> TooTallNate: How are you doing your cross compile? I did the following: "./configure --dest-cpu=arm", and then "make ARCH=arm CROSS_COMPILE=arm-linux-gnueabi-", but I'm getting errors related to x86 stuff.
02:00 < TooTallNate> i don't think CROSS_COMPILE will do anything
02:00 < TooTallNate> you need to manually specify CC
02:00 < TooTallNate> CXX
02:00 < TooTallNate> LINK
02:00 < TooTallNate> and AR i'm pretty sure
02:00 < john3909> TooTallNate: OK, I'll try that. Thx
02:09 < jtomasrl> is it normal to get "db object already connecting, open cannot be called multiple times" when doing "ab -c 2 -n 10"?
02:23 < jmpe> new to node, trying to create a little data logger: http://pastebin.com/bs8xfLue.
02:23 < jmpe> would anyone care to take a look and tell me if I am on the right path. seems to work.
02:24 < jmpe> not sure what to do about the file size getting too big.
02:24 < jmpe> should i just end the socket and restart it?
02:25 < jmpe> is there an efficient way to rotate the createwritestream destination?
02:25 < jmpe> averaging about 1.6mb / hour.
02:27 < adambreen> @jmpe - is this just for a learning exercise, or do you have a project that needs a logger?   I'd recommend you have a read through Winston either way: https://github.com/flatiron/winston
02:30 < jmpe> it is a small project, it is a gps logger. i am getting a nmea 183 sentence every second.
02:30 < jmpe> would winston be a good fit for a gps logger?
02:31 < adambreen> well the nice thing about Winston (and the other Flatiron projects) is they adopt a pluggable architecture as a general rule
02:31 < adambreen> so you can plug in whatever transport you decide to use, with the same API calls
02:32 < adambreen> it's also async by default, so you could just queue up your log writes
02:32 < jmpe> so i could use the local file system as a transport initially?
02:32 < adambreen> sure thing
02:33 < adambreen> winston.add(winston.transports.File, options)
02:33 < jmpe> do you know if winston has the ability to rotate logs?
02:33 < adambreen> not sure - i've never used it for filesystem loggin
02:35 < adambreen> a quick google produced this however: https://github.com/flatiron/winston/pull/20
02:35 < adambreen> should put you on the right track
02:36 < adambreen> the #nodejitsu guys are pretty approachable… you should just ping them if you have questions about it
02:38 < jmpe> thank you.
02:38 < adambreen> np :)
02:54 < timeturner> anyone have experience with sublibe text and git
02:54 < timeturner> sublime*
02:55 < ChrisPartridge> timeturner: using st and hg/mercurial here
03:08 < pspeter3> I install node v0.8.8 on my ubuntu machine. Is there a reason I need to use sudo everytime with npm?
03:09 < Sly> pspeter3, if you're installing globally it usually requires sudo to access folders in /usr.
03:09 < pspeter3> Sly: I know that but I was trying to install it locally
03:10 < Sly> Are you the owner of the folder you're trying to install it in?
03:10 < Sly> Or perhaps you installed locally with sudo, and the node_modules folder is owned by root.
03:10 < Sly> Which means you'd have to sudo every time because that folder was created and is owned by root.
03:11 < pspeter3> Sly so if I installed express globally and then built it with express it would be owned by root?
03:11 < rvagg> deoxxa: what's the setting you're using to make npm install locally? pspeter3 would like to know
03:11 < deoxxa> hm?
03:12 < Sly> No, pspeter3. If you ran `sudo npm install module` to locally install a module..
03:12 < Sly> And then tried to install other modules..
03:12 < deoxxa> it installs locally by default
03:12 < Sly> You would need to use sudo, because the node_modules folder would have been created under root.
03:12 < rvagg> ah, I assumed we're talking -g here, perhaps not
03:13 < Sly> If that's the case, you should just be able to fix it with `sudo chown yourusername:yourusername node_modules`
03:13 < deoxxa> pspeter3: sudon't
03:13 < Sly> And then you wouldn't have to sudo every time.
03:13 < rvagg> pspeter3: chown root.root -R node_modules ~/.npm
03:13 < deoxxa> Sly: chown -R
03:13 < rvagg> sorry, not root.root
03:13 < rvagg> user.user, where user=you
03:14 < Sly> True, deoxxa. Forgot to include that.
03:15 < pspeter3> Thanks
03:15 < Sly> Fixed?
03:15 < pspeter3> I tried doing `make install` not as root but node wouldn't work with that
03:16 < Sly> Wait, you're doing "make install"? I thought you said you were using NPM?
03:16 < Sly> "make install" is a whole different story.
03:17 < pspeter3> Sly: I am using npm. I just had to install npm and node as root
03:17 < Sly> Yeah, you do. That's because Node and NPM put their binaries in /usr/local/bin.
03:17 < Sly> You need root for most folders in /usr.
03:17 < pspeter3> Sly: I agree. As a result though, it seems like every action with npm requires root
03:18 < Sly> Ah. I see what you're saying now.
03:18 < Sly> Well, my npm is owned by root and it doesn't give me any problems. I'm also on Ubuntu.
03:18 < pspeter3> Sly: hmm
03:18 < Sly> Must be something else causing it besides that.
03:19 < pspeter3> I'm running it on ubuntu 10.10 alpha? That shouldn't matter though... Do you think I could chown npm?
03:19 < Sly> What is the actual error that NPM is outputting for the module you're trying to install?
03:20 < gildean> pspeter3: 10.10 alpha? not 12.10?
03:20 < pspeter3> Sorry 12.10 alpha, my bad
03:21 < pspeter3> I keep getting command must be run by administrator
03:22 < Sly> Pastebin the full error.
03:24 < pspeter3> http://pastebin.com/N23aLnFg
03:26 < Sly> /home/p/tmp/npm-21400
03:26 < ChrisPartridge> pspeter3: so installing a module *wihtout* -g also requires root?
03:26 < Sly> Who owns /home/p/tmp?
03:27 < pspeter3> ChrisPartridge: yes
03:28 < Sly> pspeter3, `stat /home/p/tmp`
03:28 < Sly> Who owns it?
03:28 < pspeter3> Sly: root
03:28 < Sly> `sudo chown -R p:p /home/p/tmp`
03:29 < Sly> Then try NPM again.
03:29 < pspeter3> Sly: I actually just removed it and that seemed to solve the issue
03:30 < Sly> Well, removing will make you the owner when you run NPM again. So it's pretty much the same thing.
03:30 < pspeter3> Sly: I figured. Thanks for your help
03:30 < Sly> No problem.
04:36 < Hyper_Coder> Hello
04:36 < Hyper_Coder> I need help installing and running node on my Centos server, I seem to have installed it but still having issues deploying it.
04:37 < Hyper_Coder> Can anyone help?
04:38 < Hyper_Coder> Hello
04:39 < Hyper_Coder> =(
04:39 < ChrisPartridge> Hyper_Coder: whats the issue?
04:40 < Hyper_Coder> Well, I guess I am still trying to understand Node in a whole.
04:40 < Hyper_Coder> Node is a replacement for apache, so Node is the server now?
04:40 < Hyper_Coder> Javascript is the language 
04:41 < Hyper_Coder> Do I place .js files on my server with node installed on it?
04:42 < ChrisPartridge> Node isn't a replacement for apache, you can create a http server though
04:42 < schemula> http://www.nodebeginner.org/
04:43 < Hyper_Coder> So after installing node on my server which is running Centos, what should be the next step so I can create a simple "hello world" script?
04:43 < schemula> i found this to be pretty straightforward
04:43 < Hyper_Coder> Thank you, I will take a look now.
04:43 < schemula> it does hello word and goes a little beyond that
04:44 < Hyper_Coder> I feel like all the documentation are aimed at serving files locally rather then on servers..
04:44 < Hyper_Coder> Reading it now, thank you schemula.
04:49 < schemula> I skimmed this but it looked ok as well to help sort out what it does
04:49 < schemula> http://stackoverflow.com/questions/1884724/what-is-node-js
04:51 < Hyper_Coder> Well, I understand what it does but don't really understand how to deploy it.
04:53 < Hyper_Coder> I tried console.log("something here"); 
04:53 < Hyper_Coder> it worked and output something here
04:53 < Hyper_Coder> so it seems to be successfully installed on my server
04:54 < ChrisPartridge> Hyper_Coder: you want to build web apps?
04:54 < Hyper_Coder> Correct
04:54 < ChrisPartridge> take a look at expressjs
04:55 < Hyper_Coder> Shouldn't I first understand the basis of this before I move on to another framework though?
04:55 < Hyper_Coder> Where do I save the http server javascript into?
04:55 < Hyper_Coder> just a file on my server called server.js?
04:56 < ChrisPartridge> Hyper_Coder: Follow the link posted by schemula
04:57 < Hyper_Coder> Okay, doing so now
04:57 < ChrisPartridge> it literally explains everything you are trying to do :)
05:00 < dested> http://www.erik-kallen.se/blog/saltarelle-open-source-c-to-javascript-compiler pretty interesting if anyone is into that sorta thing
05:01 < Hyper_Coder> Okay, so I am stuck
05:01 < Hyper_Coder> I uploaded the server.js in my root
05:01 < Hyper_Coder> I attempted to run it, typed "node server.js"
05:01 < Hyper_Coder> then I just get ...
05:01 < Hyper_Coder> What do I do now?
05:02 < ChrisPartridge> Using the example from the book? Did you try open your browser and point it at your server?
05:02 < deoxxa> dested: that guy should fix his url so it says "c-sharp"
05:03 < Hyper_Coder> no, I have my terminal open with putty
05:03 < dested> lol its a special char thing
05:04 < Hyper_Coder> i put in the command to run server.js
05:04 < dested> good ole microsoft choosing the pound symbol 
05:05 < schemula> # comes from sharp in music actually
05:05 < dested> i wasnt sure which came first 
05:06 < deoxxa> pretty sure music is older than c#
05:06 < Hyper_Coder> when I type in node server.js
05:06 < Hyper_Coder> it gives me "..."
05:06 < dested> i meant the pound symbol 
05:07 < deoxxa> oh
05:07 < deoxxa> that makes more sense
05:07 < dested> lol
05:08 < schemula> and I think it give you some port info? and goes into listening mode ?
05:08 < schemula> that port may be blocked in iptables
05:09 < Hyper_Coder> yes
05:09 < Hyper_Coder> listening port 8888
05:12 < mscdex_> "Teach yourself Node.JS in 21 days"
05:12 < mscdex_> :-D
05:13 < ChrisPartridge> Hyper_Coder: and did you try load http://<server>:8888 in your browser?
05:13 < Hyper_Coder> yes but I couldnt even get it to start
05:14 < Hyper_Coder> I would type node server.js
05:14 < Hyper_Coder> server.js containing the http server
05:14 < Hyper_Coder> I uploaded to root
05:14 < Hyper_Coder> when I type node server.js I just get "..." in the terminal
05:14 < ChrisPartridge> Hyper_Coder: take your server out of the equation, and setup node on your local machine
05:15 < Hyper_Coder> I have, got that to work already.
05:15 < Hyper_Coder> Taking it a step further now.
05:15 < Hyper_Coder> Well, attempting too.. ha
05:21 < Hyper_Coder> i do node -v
05:21 < Hyper_Coder> i get v0.6.18
05:25 < mscdex> time to upgrade that node installation!
05:35 < Hyper_Coder> I got npm
05:35 < Hyper_Coder> How do I upgrade the node version?
05:41 < Hyper_Coder> anyone help?
05:41 < jesusabdullah> Hyper_Coder: install the new one silly ;)
05:41 < Hyper_Coder> how =)
05:41 < Hyper_Coder> ?
05:42 < Hyper_Coder> New to the terminal
05:47 < mscdex> Hyper_Coder: easiest way is to extract the binary tarball for your platform to the prefix of your current installation (/usr/local is default when building from source)
05:47 < mscdex> otherwise build and install from source
06:54 < sente> anyone up at this hour?
06:54 < tuhoojabotti> Yes
06:54 < tuhoojabotti> It's 0954
06:56 < sente> nice
06:56 < sente> 2:54am here
06:56 < tuhoojabotti> that means it's not 1454 but 0254
06:56 < Sly> lol
06:57 < sente> I want to split up a large app.js file, in particular remove the everyauth code to a separate file but i'm not sure how to best to do this 
06:57 < tuhoojabotti> Use a text editor program
06:57 < tuhoojabotti> But, please, sleep on it.
06:57 < tuhoojabotti> You don't want to make hasty decisions.
06:58 < aho> require/exports
06:58 < aho> put that stuff in a separate module
06:58 < tuhoojabotti> Yeah
06:58 < aho> http://openmymind.net/2012/2/3/Node-Require-and-Exports/
06:58 < aho> there is some introduction
06:58 < joshwnj> sente: only real way to do this is to identify functions which take an input, and give an output (and don't rely on anything else being in scope). once you have this, splitting into multiple files is simple
07:02 < sente> yeah, i tried
07:02 < sente> http://c.sente.cc/oQFv/relevant_app.js
07:02 < sente> take a look at that
07:02 < sente> I moved the two big everyauth.twitter and everyauth.facebook functions into their own files
07:02 < sente> and it didn't work
07:03 < sente> the lib/everyauth-twitter.js file contained exactly what the everyauth.twittter section
07:03 < sente> except wrapped in
07:03 < joshwnj> what do you mean by "it didn't work"?
07:03 < joshwnj> was there an error?
07:03 < sente> module.exports = function(everyauth){
07:03 < sente> ... }
07:06 < sente> http://c.sente.cc/Eti5/error
07:07 < joshwnj> ok so that says authConf is not defined
07:07 < sente> right, but i define it above, in app.js
07:07 < sente> and then pass everyauth
07:07 < joshwnj> so i guess you need to pass that into the function, instead of assuming it's in scope?
07:07 < sente> i thought i could pass everyauth, the object
07:07 < sente> require('./lib/everyauth-twitter.js')(myHost,rnUtils,everyauth);
07:07 < sente> which would include that?
07:08 < joshwnj> every 'require' has its own sandbox
07:08 < joshwnj> and no knowledge of anything outside (unless you want to mess around with globals)
07:08 < sente> ah, also, i misread the authconf code
07:08 < sente> it's a ",", not a "."
07:08 < sente>   56 var everyauth = require('everyauth'),
07:08 < sente>   57     authConf = require('./config').Auth;
07:12 < sente> mighta been a dumb question afterall
07:12 < sente> thanks though
07:15 < joshwnj> sente: np
07:31 < [AD]Turbo> hi there
08:18 < bewest> anyone familiar with openembedded builds of nodejs-native?
08:25 < wereHamster> is it possible to know when a http.ServerResponse has been fully sent (ie. res.end() called), without overriding the end function?
08:26 < wereHamster> maybe some event that is emitted on the response object?
08:26 < wereHamster> Like the 'end' on a http.ServerRequest
08:35 < bid> is version 0.8.8 "stable" 
08:35 < bid> ?
08:36 < slaskis> bid: yes, all 0.8 is considered stable
08:39 < moosgummi> hello there
08:39 < moosgummi> can anybody suggest me a good tutorial or anything else on application design patterns with node.js?
08:40 < moosgummi> i'm new to node.js and there are still some things unclear
09:24 < vlrk> hello all , iam not much into java programming . I have task at my hand of putting OSGI support in one of intel i686 board . I think for this my steps should be 1) put jvm first  on to the board : for this i will use openjdk8 2) decided that apache felix should be kept / ported . 
09:25 < vlrk> my only confusion is in second step , what i have to exactly do in apache felix porting ..? i should copy the files to the box ..? or i should keept he .jar related files in the PATH ..? what exactly i have to do here
09:26 < margle> vlrk: wrong channel perhaps?
09:27 < vlrk> margle: thx for pointing me...
09:27 < margle> no worries and good luck.
09:27 < vlrk> only question is like what is felix apache is this a package ..?
09:28 < vlrk> like apache webserver ..?
09:28 < vlrk> which i can run..?
09:28 < vlrk> is this libraries which people would use in there programs..
09:28 < margle> vlrk: node.js has java packages?
09:29 < vlrk> ok..
09:55 < timmak> I was wondering if anyone cloud help with kue and clustering in node 0.8
09:56 < mike> I need help
09:56 < Guest34978> 	git://gist.github.com/3633769.git 
09:56 < Guest34978> git://gist.github.com/3633769.git 
09:57 < Guest34978> https://gist.github.com/3633769
09:59 < timmak> @Guest34978 proably best to ask in the #nodejistu room 
10:57 < deoxxa> modules have changed how i write code
10:57 < deoxxa> (for the better)
10:57  * deoxxa yay
12:14 < BitScout> Hi, I assume dynamically require-ing different js files is okay in NodeJs, right?
12:24 < deoxxa> BitScout: sure
12:25 < deoxxa> BitScout: but it comes with all the normal risks of including arbitrary files (code execution, information leakage, etc)
12:25 < BitScout> deoxxa, ok, thanks. yeah, thanks for the reminder.
12:56 < timini> Im trying to use less I installed through npm but I keep getting this error. Error: require.paths is removed. Use node_modules folders, or the NODE_PATH environment variable instead.
12:56 < timini> can anyone help me out with this?
12:58 < deoxxa> timini: sounds like less might be broken
12:58 < deoxxa> timini: alternatively, you might be installing a very old version of less
13:29 < tydeas> Have anyone experience with ffi ? 
13:29 < tydeas> I am trying to install to in with npm in fedora 14 facing issues
13:52 < bartek> Hi there. Is there any reason that my node.js script is failing on using Array.concat? It simply doesn't seem to concat one array to the other. If I return one or the other, both data sets look correct. http://dpaste.com/796869/
13:57 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:59 < hammon> If you have a minute, could you please fill in this survey (will help with an app I'm developing): https://docs.google.com/spreadsheet/viewform?formkey=dFA3TkhfMDZtZWlnY2luVGNpSnRhOWc6MQ#gid=0
14:09 < garrettwilkin> i have a problem that i can't figure out
14:09 < NuZZ> woo, my bot just joined the channel. fuckyeah node.js
14:09 < garrettwilkin> I'm taking a parameter from a query string
14:09 < garrettwilkin> that's a list of values, comma separated
14:10 < NuZZ> go on...
14:10 < garrettwilkin> and i want it to become an object to be used as a field list for a mongo find command
14:10 < garrettwilkin> so i want to take something like this:
14:11 < garrettwilkin> { fields : 'source,ip,kind' }
14:11 < NuZZ> >> 'herp,derp,slerp=1'.split(',') 
14:11 < purr> NuZZ: (object) ['herp', 'derp', 'slerp=1']
14:12 < spionL> you mean an object field list (property list) or a list of possible values for the property (field) named "field"
14:12 < NuZZ> basically
14:12 < garrettwilkin> and turn it into { fields : { 'source' : 1 } , { 'ip ' : 1 }, {kind: 1} }
14:12 < NuZZ> yeah loop over it
14:13 < garrettwilkin> so i think there are two parts i can do at the same time
14:13 < NuZZ> after u split it
14:13 < garrettwilkin> one, ask for fields that have certain values, and that part is working
14:13 < garrettwilkin> two, ask for only certain fields to be returned
14:13 < NuZZ> first, do this
14:13 < spionL> >> 'a,b,c'.split(',').reduce(function(acc, item) { acc[item] = 1; }, {})
14:13 < purr> spionL: TypeError: Cannot set property 'b' of undefined
14:13 < NuZZ> fields.split(',')
14:13 < NuZZ> then make a for loop
14:14 < garrettwilkin> does split give me an array?
14:14 < garrettwilkin> can i use forEach?
14:14 < NuZZ> array
14:14 < NuZZ> yes
14:14 < garrettwilkin> okay cool
14:14 < spionL> >> 'a,b,c'.split(',').reduce(function(acc, item) { acc[item] = 1; return acc;}, {});
14:14 < purr> spionL: (object) {a: 1, b: 1, c: 1}
14:14 < garrettwilkin> ill try this out
14:14 < NuZZ> nevre used reduce
14:14 < NuZZ> cool
14:15 < garrettwilkin> yea what's reduce?
14:15 < garrettwilkin> thats cool
14:15 < spionL> reduce takes a per-element function and an initial result, then the per-element function receives the currently accumulated result and the item as parameters and returns a new accumulated result
14:16 < garrettwilkin> oh so if i had multiple items with the same name
14:16 < garrettwilkin> it would count them
14:16 < garrettwilkin> and i'd get a 2 in there
14:16 < spionL> uhh no, you would still have 1
14:16 < NuZZ> you could count em
14:16 < spionL> counting them would be slightly different
14:16 < NuZZ> but it wont
14:16 < garrettwilkin> yea, just tried it :)
14:17 < NuZZ> if herp[derp] { count++ } etc.
14:17 < NuZZ> sorry im used to coffeescript :p
14:19 < spionL> >> (function() { var a = {b: null}; var b = {a: a}; a.b = b; return a; }());
14:19 < purr> spionL: (object) {b: {a: (Circular)}}
14:19  * spionL hides
14:20 < garrettwilkin> lol
14:20 < garrettwilkin> so seems like in this case forEach would do the same thing as reduce?
14:20 < NuZZ> yes
14:20 < NuZZ> its a shortcut
14:21 < spionL> almost. you'll have to initialize acc = {}; and forEach doesn't return anything.
14:21 < garrettwilkin> uh yea
14:21 < garrettwilkin> i was just trying it
14:22 < garrettwilkin> oh okay neat
14:22 < spionL> but the end result is the same
14:22 < garrettwilkin> you guys are awesome
14:22 < spionL> I like purr 
14:22 < NuZZ> haha
14:22 < NuZZ> does purr hold vars
14:22 < NuZZ> >> var slerp = 'derp'
14:22 < purr> NuZZ: undefined
14:23 < garrettwilkin> what the
14:23 < NuZZ> >> slerp = 'derp'
14:23 < purr> NuZZ: (string) 'derp'
14:23 < NuZZ> yay
14:23 < garrettwilkin> purr execute code in here?
14:23 < NuZZ> >> slerp
14:23 < purr> NuZZ: ReferenceError: slerp is not defined
14:23 < NuZZ> :(
14:23 < NuZZ> yes
14:23 < NuZZ> simple eval() i assume
14:23 < NuZZ> with some failsafes
14:23 < spionL> looks like a separate node process is ran every time to me
14:23 < NuZZ> >> process
14:24 < purr> NuZZ: ReferenceError: process is not defined
14:24 < garrettwilkin> >> iThink = 'thats totally awesome'
14:24 < purr> garrettwilkin: (string) 'thats totally awesome'
14:24 < NuZZ> >> this
14:24 < purr> NuZZ: (object) {}
14:24 < garrettwilkin> >> this.foo = 'bar';
14:24 < purr> garrettwilkin: (string) 'bar'
14:24 < garrettwilkin> >> this
14:24 < purr> garrettwilkin: (object) {}
14:24 < spionL> >> global
14:24 < purr> spionL: ReferenceError: global is not defined
14:24 < garrettwilkin> >> this.bar
14:24 < purr> garrettwilkin: undefined
14:25 < NuZZ> lol
14:25 < garrettwilkin> >> util.inspect(this, false, 3, false)
14:25 < purr> garrettwilkin: ReferenceError: util is not defined
14:26 < garrettwilkin> >> require('util')
14:26 < purr> garrettwilkin: ReferenceError: require is not defined
14:26 < garrettwilkin> lol, shucks
14:26 < spionL> there is nothing in the global namespace.
14:26 < spionL> >> var arr = new Array(); arr.push(1); arr;
14:26 < purr> spionL: (object) [1]
14:26 < spionL> well, there is Array
14:26 < NuZZ> >> for ( i = 0; i < 100000; i++ ) { ',,,,,,,,,,,,,,,,,,,'.split(',).join(',') }
14:26 < purr> NuZZ: SyntaxError: Unexpected token ILLEGAL
14:26 < NuZZ> aw
14:26 < gkatsev> dont use new Array()
14:27 < spionL> I don't - I was just wondering if the global namespace is really completely empty 
14:27 < gkatsev> NuZZ: you missed a quote
14:27 < NuZZ> oh
14:27 < NuZZ> >> for ( i = 0; i < 100000; i++ ) { ',,,,,,,,,,,,,,,,,,,'.split(',').join(',') }
14:27 < purr> NuZZ: (string) ',,,,,,,,,,,,,,,,,,,'
14:27 < NuZZ> >> for ( i = 0; i < 1000000; i++ ) { ',,,,,,,,,,,,,,,,,,,'.split(',').join(',') }
14:27 < purr> NuZZ: (string) ',,,,,,,,,,,,,,,,,,,'
14:27 < NuZZ> >> for ( i = 0; i < 10000000; i++ ) { ',,,,,,,,,,,,,,,,,,,'.split(',').join(',') }
14:27 < purr> NuZZ: Timeout Error: Execution time exceeded 2 seconds
14:28 < NuZZ> darn, silly coders thinking of people abusing their bots
14:28 < gkatsev> spionL: ok, it's sandboxed slightly with an execution time limit. Also, no require. Just plain javascript
14:28 < gkatsev> >> version
14:28 < purr> gkatsev: (string) '3.6.6.11'
14:28 < gkatsev> >>> version
14:28 < purr> gkatsev: (string) '3.6.6.11'
14:28 < gkatsev> ok, this version of the bot only has v8
14:29 < gkatsev> ecmabot in ##javascript (same bot, different instance) has spidermonkey as well
14:29 < spionL> Ah i see. the number of gts
14:30 < spionL> i was wondering why you were expecting a different result for 30 seconds
14:30 < spionL> :D
14:30 < NuZZ> i have a bot, made it from scratch recently, ill add an eval thingey here in a moment...
14:30 < gkatsev> NuZZ: is it sandboxed?
14:30 < NuZZ> NOPE
14:30 < NuZZ> :D
14:30 < spionL> NuZZ, might be dangerous
14:30 < NuZZ> im just fiddling atm
14:30 < gkatsev> not might.
14:30 < spionL> lilke require('child_process').exec ...
14:31 < nlf> haha
14:31 < nlf> i like your style
14:31 < NuZZ> you guys gonna shut down my pc
14:31 < NuZZ> nice.
14:31 < gkatsev> apparently, you can't really create a safe python eval bot
14:31 < nlf> "here's a bot with a wide open eval command that's easy to abuse, have fun guys!"
14:31 < spionL> gkatsev, not even with a full blown parser to remove unsafe stuff?
14:31 < spionL> well, I guess that would be impractical
14:32 < gkatsev> spionL: maybe if you parse it all but even then.
14:32 < gkatsev> brb
14:32 < garrettwilkin> VICTORY DANCE!  woo hoo! my mongo API now can search based on fields values and also return only a specified list of fields!
14:33 < spionL> congrats :)
14:33  * spionL is wondering if it wold be a good idea to start writing mongo2sql
14:35 < NuZZ> >>> true
14:35 < purr> NuZZ: (boolean) true
14:35 < NuZZ> >>>>>>>>>>>>>>> true
14:36 < NuZZ> << true
14:36 < NuZZ> << true
14:36 < NuZZ> server [401] Botty9478 #node.js: :No such nick/channel
14:36 < spionL> mongo2sql would create a fake db.collection object which actually constructs an SQL query from all the functions executed on it
14:36 < NuZZ> lol please hold while i figure out irc syntax
14:38 < NuZZ> << true
14:38 < spionL> subobjects will be separated with _, subcollections will be joined from tables named collection_subcollection
14:39 < NuZZ> stupid spaces
14:39 < NuZZ> << true
14:39 < Botty8321> true
14:39 < NuZZ> yay
14:39 < spionL> NuZZ, there are 860 people here, if only one decides to abuse your bot, you're toast
14:39 < spionL> :)
14:40 < NuZZ> maybe im not as stupid as you think :)
14:40 < NuZZ> (inb4 stupidty)
14:40 < NuZZ> << this
14:40 < Botty8321> this
14:40 < spionL> ah.
14:40 < spionL> well ok, i'm just saying it because you mentioned it :)
14:41 < NuZZ> well I am a retard right now apparently
14:41 < spionL> lets join a different channel to test it
14:41 < NuZZ> Sending:  PRIVMSG #Node.js :this undefined
14:42 < spionL> to avoid crowding this one with bot-testing stuff
14:42 < NuZZ> apparently it only sent the first word
14:42 < NuZZ> true
14:44 < draginx> So what does "()()" in nodejs do exactly? O_o
14:44 < tuhoojabotti> In javascript
14:45 < NuZZ> new(new()) kinda, right?
14:45 < tuhoojabotti> (function())() executes
14:45 < NuZZ> well not really new what am i sayin
14:45 < draginx> ahh
14:45 < tuhoojabotti> new (require('stuff'))() also
14:45 < draginx> ok thanks :)
14:45 < draginx> so wait whats the point of that though?
14:45 < NuZZ> exports
14:45 < NuZZ> from modules
14:46 < NuZZ> you want to execute the initial function blahblah
14:46 < draginx> hmm
14:46 < NuZZ> its the same as '1,2'.split(',').join('')
14:47 < NuZZ> use ur imagination
14:47 < draginx> I see
14:49 < NuZZ> #derpface500 testing that bot i guess
14:50 < gkatsev> create channel/bot naming
14:50 < bingomanatee> I am elastic search indexing the IRC channel for noogle (again). 
14:51 < bingomanatee> I can index 2,129,669 lines of chat ( and not-index 772,205 leave/enter messages) in about 10 seconds. 
14:55 < gkatsev> I can not-index about one googolplex of messages in about 0 seconds.
14:55 < NuZZ> son I am disappoint
14:56 < gkatsev> bingomanatee: also, a manatee playing bingo would be amusing.
14:56 < bingomanatee> They get so excited when they win
15:03 < gkatsev> lol
15:17 < garrettwilkin> is there a way to remove a property from an object?
15:18 < drudge> delete obj.property
15:18 < generalissimo> ^
15:26 < garrettwilkin> cool
15:33 < sente> why are variables often assigned like: var foo=bar,\nfee=town,\nwhatever=thing;
15:33 < sente> instead of juts var foo=bar; var fee=town; var whatever=thing; ?
15:34 < chrisjaure> it's mostly just a style preference
15:35 < nkuttler> sente: less typing
15:36 < nkuttler> i find it bizarre when people put the commas in front of the vars..
15:36  * BennyLava hates it
15:37 < sente> nkuttler: is it really less typing?
15:37 < sente> that's silly
15:37 < nkuttler> sente: only one var..
15:37 < sente> oh i understand how it's less typing
15:37 < jocafa> leading commas make my eyes bleed
15:37 < sente> i just don't think that's a legit reason
15:37 < BennyLava> sente++
15:37 < nkuttler> yeah, i hate leading commas as well, just wasn't sure about the general sentiment in here ;)
15:38 < nkuttler> seems to be quite common with node code..
15:38 < sente> yeah. it's taking me awhile to get used to the leading/trailing .'s too
15:38 < sente> so.many().\nthings().\nlike()\nthis(shit);
15:39 < jocafa> sente:  i do that when i chain stuff for readability, but i put the dot at the beginning of the line
15:39 < jocafa> this\n\t.foo()
15:39 < sente> yeah, it's in a lot of code, I'm somewhat used it from javascript in the browser
15:39 < nkuttler> i do (\n
15:40 < sente> yeah, i usually see foo\n\t.something
15:40 < nkuttler> pep8 habit..
15:40 < jocafa> easier to debug in my opinion, breaking up chains
15:41 < jocafa> a coworker puts spaces on both sides of his commas. :(     function foo(bar , baz)
15:41 < nkuttler> ew
15:59 < jcrew> some people put spaces between parens and curly brackets too
16:02 < saschagehlich> aaaalright, my pi is booting up with raspbian without any problems :) but the network is really really slow, websites need a long time to load. anything to do against that?
16:18 < timmak> saschagehlich: which browser you using
16:19 < jmpe> Is c:\foo\bar.txt a valid file handle (fd) on a Windows machine? I am attempting to use fs.truncate(fd, len, [callback]) but am getting the bad argument error.
16:19 < jmpe> I am trying to pass it like this: fs.truncateSync('c:/avl/test_2.json', 0, function (err) {...
16:20 < timmak> has anyone got node-tap working in the browser
16:22 < mscdex> jmpe: you have to open it first to get an fd for the file
16:22 < mscdex> jmpe: path !== fd
16:23 < jmpe> mscdex: got it. thanks.
16:24 < jlongster> Does anyone know how this documentation was generated (or if it was)? http://documentcloud.github.com/underscore/
16:25 < nkuttler> jlongster: one of the popular doc libs... check the source i guess
16:25 < nkuttler> jlongster: or ask #documentcloud
16:25 < jlongster> nkuttler: I have done both
16:25 < jlongster> the source for those docs isn't on github
16:25 < nkuttler> it's in the _ source itself afaik
16:25 < jlongster> the fully annotated docs are, but those are different
16:25 < jlongster> well, there's also this: http://documentcloud.github.com/underscore/docs/underscore.html
16:25 < jlongster> which is generated from docco
16:26 < jlongster> but I don't understand where the main page come from, must be hand-made
16:26 < nkuttler> right, docco. that's not all?
16:26 < nkuttler> no idea then
16:26 < jlongster> this is not docco: http://documentcloud.github.com/underscore/
16:26 < saschagehlich> oh lol, i'm totally in the wrong channel :D
16:26 < saschagehlich> timmak: the default browser.. dunno what it is called
16:28 < jocafa> tjholowaychuk:  this *may* send you into a rage: https://github.com/bestiejs/lodash/blob/master/build.js
16:28 < jocafa> lodash, y u no `make`?  (屮゜Д゜)屮 
16:29 < tjholowaychuk> jesus
16:29 < tjholowaychuk> that's a pretty huge build file
16:30 < jocafa> weren't you looking into sugar gliders not too long ago, or was that someone else?
16:31 < tjholowaychuk> yeah haha
16:32 < jocafa> i used to have a pair of 'em
16:33 < jocafa> http://www.flickr.com/photos/jocafa/sets/72157594147788519/
16:34 < drudge> tjholowaychuk: i almost got my PS1 replicated in nshell
16:34 < tjholowaychuk> drudge hahaha sweet
16:34 < tjholowaychuk> i have a bug
16:35 < tjholowaychuk> PS1
16:35 < tjholowaychuk> doesn't show right away
16:35 < drudge> yeah
16:35 < drudge> when i start nshell it isn't there, and when i cd it doesn't show up until the next command
16:36 < drudge> tjholowaychuk: http://penr.ee/JFe8
16:36 < tjholowaychuk> haha sweet
16:36 < tjholowaychuk> im using my usual PS1 too
16:36 < tjholowaychuk> gets confusing
16:36 < tjholowaychuk> while testing
16:36 < drudge> https://gist.github.com/3630787#gistcomment-544735
16:37 < drudge> tjholowaychuk: chocolat 1.3 with the node api should drop today
16:37 < tjholowaychuk> awesome!
16:45 < jocafa> there's no way to put comments in a package.json, is there?
16:46 < mscdex> nope
16:46 < drudge> think isaacs said "//":
16:46 < mscdex> unless you do something like that ^
16:46 < jorenl_> Hey. What's node's default install location on ubuntu?
16:46 < mscdex> /usr/local/*
16:47 < jocafa> guess i'll do things the D3 way and *generate* my package.json
16:47 < jorenl_> I have a compiled node setup somewhere, but just running "node" from the bash starts node 4.something
16:47 < jorenl_> mscdex: thanks! :)
16:48 < drudge> you can always do which node to see
16:48 < jorenl_> mscdex: Your username. Something about DOS(BOX) and CD-rom drives. Interesting.
16:49 < timini> When i first install npm do i have to build the index or something?
16:49 < mscdex> jorenl_: ;-)
16:49 < timini> npm search blah  ... nothing found
16:49 < timini> :(
16:50 < Tixz> Anyone know how to precompile handlebars.js templates on the server? I'm trying to compile templates and write them to a file
16:50 < tjholowaychuk> timini https://github.com/visionmedia/npm-search
16:50 < tjholowaychuk> can try that
16:50 < tjholowaychuk> it's not so slow
16:53 < jlongster> Tixz: http://handlebarsjs.com/precompilation.html ?
16:53 < garrettwilkin> how do you see changes in git after you do "git add"?
16:53 < drudge> tjholowaychuk: they should use that for the website ;)
16:53 < Tixz> jlongster: Of course I've read that page, but I want to do it on the fly
16:53 < garrettwilkin> seems odd that git diff only works before git add
16:53 < jlongster> garrettwilkin: git diff HEAD <files>
16:53 < Tixz> Think I've found a lead elsewhere though
16:54 < garrettwilkin> jlongster: sweet thanks
16:56 < jorenl_> I'm trying to update my old node version on ubuntu... I have a compiled node v0.8.8 folder. It contains a .deb. When I run dpkg -i blah.deb, it seems to work. Just typing node still starts node v0.4.3 . Any ideas?
17:01 < cronopio> jorenl_: maybe an issue in your PATH and stills points to the old node (maybe installed in other way)
17:02 < jorenl_> cronopia: yes; I guess so. I moved the new compiled folder to where the old install was, and it seems to work :S
17:02 < jorenl_> cronopio*: ^ (sorry)
17:03 < cronopio> jorenl_: ok if npm works fine for you then you update your node sucesfully :P
17:03 < garrettwilkin> anyone have experience with mongojs?
17:03 < garrettwilkin> I'm using it now
17:03 < garrettwilkin> and I'm not sure if i need to handle connection issues
17:04 < garrettwilkin> so far everything has been peachy, but I'm thinking.. what if my mongo goes down?
17:04 < garrettwilkin> would my node process be able to reconnect? 
17:04 < garrettwilkin> I'm guessing i would need to build that mechanism to detect the disconnect and reconnect
17:12 < caaakeeey> im writing something that creates a rest api based on some data, and im trying to work out how i would test it, at the moment im looking at express and mocha, but im open to anything really
17:14 < caaakeeey> i can start the server with different data, and itll provide a different rest api each time, how do i get my tests to create this server so i can test it
17:17 < garrettwilkin> caaakeeey: check out apiary.io
17:17 < garrettwilkin> caaakeeey: they are built on node, and generate documentation as well
17:17 < garrettwilkin> integrated to github… pretty neat service
17:20 < caaakeeey> garrettwilkin, im not sure how that helps me?
17:21 < garrettwilkin> you define your API in their DSL
17:21 < garrettwilkin> and then they test it for you
17:21 < garrettwilkin> "Always Tested - closed alpha
17:21 < garrettwilkin> The documentation is always watching your real API and tells you whenever it gets out of sync."
17:22 < caaakeeey> im not writing an api
17:22 < caaakeeey> im writing a framework for writing apis
17:22 < garrettwilkin> ooooh
17:22 < garrettwilkin> well then :)
17:23 < caaakeeey> its an interesting project though, thanks for pointing it out
17:25 < caaakeeey> so uhh any ideas?
17:27 < caaakeeey> can i just bypass http and test the routes+app directly?
17:28 < tjholowaychuk> if you do that you're not testing your real api
17:28 < tjholowaychuk> node is fast just test with http
17:29 < caaakeeey> how do i get my tests to run my server?
17:29 < tjholowaychuk> make your server bind / listen()
17:29 < tjholowaychuk> like normal
17:30 < caaakeeey> yes, but i need to restart the server with different settings
17:30 < caaakeeey> so i have to start/stop the server during the tests, not just before all of them
17:30 < caaakeeey> i dont know how to do that
17:31 < tjholowaychuk> https://github.com/visionmedia/express/tree/master/test might help with some examples, nearly every test is firing up an http server
17:32 < jocafa> *sigh* there's gotta be a better way to do amd
17:34 < mscdex> jocafa: how about intel? ;-)
17:34 < jocafa> hehe
17:34 < AAA_awright> amd?
17:35 < jocafa> Asynchronous Module Definition
17:53 < nicolaas> does express.js allow you to define which parameters are required for a rest endpoint and then have express deal with that ?
17:53 < AAA_awright> An HTTP endpoint?
17:53 < nicolaas> yes
17:54 < nicolaas> so a server.get ...
17:56 < mscdex> nicolaas: you can pass in middleware functions in the route
17:56 < mscdex> i think you can use regex as the route
17:56 < mscdex> also
17:56 < nicolaas> can you point me to an example by any chance ?
17:57 < tjholowaychuk> nicolaas if you dont have ? they're required
17:57 < tjholowaychuk>  app.get('/:foo/:bar' would both be required
17:58 < nicolaas> what if they would be passed in in the query string ?
17:58 < nicolaas> or a post body
17:58 < tjholowaychuk> then you just apply whatever logic you want to validate them
17:59 < nicolaas> sure, that's what I'm doing now
17:59 < nicolaas> but it creates quite a bit of duplication
17:59 < tjholowaychuk> if (!req.body.name) res.send(400, 'name required')
17:59 < tjholowaychuk> blah blah
17:59 < nicolaas> so I can write my own utility for this
17:59 < caaakeeey> tjholowaychuk, so the answer to my question was "use supertest"?
17:59 < nicolaas> just wanted to make sure that nothing existed out of the box
17:59 < nicolaas> thanks!
17:59 < tjholowaychuk> nicolaas yeah you may want a few custom methods to encapsulate your own custom stuff
18:00 < mscdex> you could write a middleware function that checks both places
18:00 < tjholowaychuk> caaakeeey no you dont have to, you just fire up the server like you normally would
18:00 < mscdex> i think
18:00 < caaakeeey> app.listen doesnt block?
18:11 < pquerna> tma binding to [::]
18:14 < pquerna> hrm, listen(port, '::') works :-/
18:17 < Grim__> Can someone here help me understand how should i make multiplayer tic tac toe game in node.js? more specifically how should i share some state between nodes? (like for matchmaking)
18:18 < RLa> between nodes?
18:18 < RLa> you want to use cluster?
18:19 < milani> Grim__, take a look at nowjs
18:19 < Grim__> RLa: actually i dont know. I want to know how to make tic tac toe game server, with separate rooms (each room separate game) for "unlimited" number of players. that could be done by just making another nodes for each game, right
18:20 < RLa> hm, yeah, if you have that many games
18:20 < Grim__> RLa: yes, but how should i go about match making , what should tell two players on which server to play?
18:21 < RLa> a room could be used for that
18:21 < Grim__> RLa: what do you mean?
18:22 < RLa> hm, all users in one room can only start game with another user in the same room
18:23 < RLa> and a room would "run" on one node
18:24 < Grim__> RLa: yeah but i would rather that all one milion users can play with each other
18:24 < cleos_frey> hey this might sound silly, but how do you guys decide on a version # for your packages?
18:25 < AviMarcus> so then you need a protocol for passing moves between instances
18:25 < AviMarcus> cleos_frey, semver?
18:25 < cleos_frey> semver?
18:27 < RLa> AviMarcus, Grim__ something like irc network with c/s and s/s connections?
18:27 < freewil> cleos_frey, http://semver.org/
18:28 < AviMarcus> except not exactly like semver, node community seems to treat increment changes more strictly
18:28 < AviMarcus> I can't find the npm doc on it
18:28 < cleos_frey> freewil: oh cool, thanks
18:28 < cleos_frey> AviMarcus: so there is a system, I just thought it was arbitrary 
18:29 < Grim__> RLa: something more like chatroulette
18:29 < freewil> yeah the node semver is slightly different from that
18:29 < Grim__> RLa: something connects two people together, and some other thing transfer strings between them
18:30 < jocafa> tjholowaychuk:  i just noticed the new stylus logo. i dig it.
18:33 < garrettwilkin> using flatiron as a base for my HTTP API, and mongo as the backend
18:33 < garrettwilkin> i need to use a callback to process the results from the MongoDB
18:34 < Sly> pyrotechnick, ping
18:34 < garrettwilkin> and also write to the response that is being built by the flatiron route
18:34 < garrettwilkin> this is kind of a basic javascript scoping question.  
18:34 < garrettwilkin> I'm trying to implement a general handler for all my mongo find calls
18:35 < garrettwilkin> so can i pass in an local object to the callback?
18:35 < garrettwilkin> the callback signature is that the first is an err, the second is the array of documents
18:36 < Sly> garrettwilkin, it would be easier if you could provide us with some code to show what you are trying to do, rather than explain everything.
18:36 < garrettwilkin> yea sorry
18:36 < Sly> It's okay. :P
18:36 < Sly> The code will tell the story.
18:40 < garrettwilkin> Sly: https://gist.github.com/3642279
18:40 < garrettwilkin> i think i figured it out though
18:40 < garrettwilkin> i need to add a third argument to my named function
18:40 < garrettwilkin> and then call it like this
18:41 < garrettwilkin> find( function(err,docs) { namedFunc(err,docs, self.res) { … blah blah … } } )
18:42 < Sly> Or you could wrap your current function with (function(findHandler) {...})(findHandler)
18:42 < Sly> Should create a local copy within that function.
18:42 < Sly> One sec, I'll post an example.
18:44 < Sly> https://gist.github.com/3642328
18:44 < garrettwilkin> thanks
18:45 < garrettwilkin> Sly: whoa, i think my brain melted reading that.
18:45 < Bonuspunkt> hmm require('https').get('https://google.com/', function(res) { res.setEncoding('utf8'); res.on('data', console.log); }) this looks weird
18:45 < Sly> lol, garrettwilkin.
18:46 < Sly> Basically, that wrapper will reassign 'findHandler' locally to the function that it returns.
18:46 < Sly> Since you're passing findHandler into the function wrapper, it treats it as an argument.. which is passed down to the function that is returned.
18:48 < garrettwilkin> okay i want to understand that… i also want to fly
18:48 < Sly> lolol
18:48 < garrettwilkin> i guess desire and ability don't always go hand in hand
18:48 < Sly> Okay. Look. It's just like a normal function.
18:48 < Sly> Say you made a function..
18:49 < garrettwilkin> aye
18:49 < Sly> var func = function(findHandler) { console.log(findHandler); };
18:49 < Sly> Then you did.. func(findHandler);
18:49 < Sly> It would return the findHandler that you defined with function findHandler(), because you passed it into the arguments of that function.
18:49 < Sly> So.. If you take the var func= out..
18:49 < Sly> And call it immediately with a return function(), like the example I pasted..
18:50 < Sly> It will keep findHandler set to what you passed to it.
18:50 < Sly> var func = (function(findHandler) { return function() { console.log(findHandler); }; })(findHandler);
18:50 < Sly> func()
18:51 < Sly> See the difference?
18:52 < garrettwilkin> could you make a gist?
18:52 < Sly> One sec.
18:56 < Sly> https://gist.github.com/3642328
18:56 < Sly> There you go. 3 examples.
18:59 < garrettwilkin> sweet
19:00 < Sly> :)
19:01 < garrettwilkin> I'm going to have to play with this concept
19:01 < garrettwilkin> Sly: i forked it back
19:01 < garrettwilkin> for later reference
19:01 < Sly> kk
19:06 < baudehlo> anyone know if there's a version of connect/express static() middleware that supports requests with PATH_INFO on them?
19:06 < baudehlo> e.g. http://server/image/foo.png/some/path/info/here
19:07 < zackiv31> baudehlo: what exactly would that do?
19:08 < baudehlo> serve up foo.png and put '/some/path/info/here' into req.path_info
19:08 < john3909> TooTallNate: ping
19:08 < baudehlo> zackiv31: see http://httpd.apache.org/docs/2.2/mod/core.html#acceptpathinfo for how Apache does it.
19:09 < TooTallNate> john3909: pong
19:09 < baudehlo> it would basically allow you to uncache static resources by putting the Date.now() in the path_info.
19:09 < john3909> TooTallNate: Your pi branch helped at lot
19:10 < TooTallNate> john3909: :)
19:10 < john3909> TooTallNate: I still have 4 errors remaining: https://gist.github.com/3642702
19:10 < zackiv31> baudehlo: I don't understand the use case... why not just use a query parameter?  foo.png?date=12345
19:13 < john3909> TooTallNate: Another issue is that Cloud9ide does not work with your pi branch. I think I will have to back port your changes to v0.8.8: https://gist.github.com/06096f92b0b74f2ba038
19:14 < baudehlo> zackiv31: caching proxies won't cache things with query parameters.
19:14 < TooTallNate> john3909: idk that looks like some cloud 9 problem
19:14 < baudehlo> (sometimes)
19:15 < TooTallNate> john3909: the errors may or may not be something to worry about
19:15 < TooTallNate> sometimes they're sporadic or depend on timing (which doesn't work out so well on a slow ARM processor)
19:16 < whiskers75> c9 seems very beta.
19:16 < TooTallNate> john3909: i'd ask the cloud9 guys about that error message though, i'm guessing your node build is rather solid
19:16 < john3909> TooTallNate: That sounds reasonable. 
19:16 < john3909> TooTallNate: i'll do that
19:16 < john3909> TooTallNate: Thanks for all your help
19:17 < TooTallNate> sure np :)
19:17 < TooTallNate> i've been meaning to write a blog article on this stuff
19:17 < TooTallNate> now that i got the blog rewrite out of the way :D
19:17 < john3909> TooTallNate: I'll let you know how things progress from my side. Thanks again
19:18 < zackiv31> baudehlo: you're just going to get people to tell you not to use express static for anything serious like media serving or caching... I've created a piece of .static() middleware  just recently to do something a bit different, checkout the source, it shouldn't be too difficult to figure out: https://github.com/zivester/node-quickthumb
19:19 < DeathRayDragonLu> What are the (valid) pros/cons of something like handlebars/moustache (which looks more like HTML) versus a "compiler" language like HAML or Jade?
19:19 < DeathRayDragonLu> Anyone have a good link?
19:19 < gdawg> personal preference
19:20 < DeathRayDragonLu> Sure, but I'm interested in the why.
19:20 < CoverSlide2> well some people find typing html end tags repetitive
19:20 < generalissimo> ^
19:20 < generalissimo> and some people like to be closer to the html
19:20 < jlongster> DeathRayDragonLu: what do you mean by "compiler" language?
19:20 < DeathRayDragonLu> is it really just that simple?
19:20 < CoverSlide2> and using indentation some people find easier to read, like python or yaml
19:21 < DeathRayDragonLu> I'm grasping for the right word.
19:21 < baudehlo> zackiv31: yeah I'm not really worried about it - I think having problems with serving media in volume is a good problem to have… And if we get issues with using a querystring param we'll just move to a CDN.
19:21 < russfrank> DeathRayDragonLu: its just personal preference really
19:21 < generalissimo> DeathRayDragonLu: there are some performance and client/server implications too
19:21 < DeathRayDragonLu> Jade "compiles" code into HTML...what's the better term?
19:21 < baudehlo> zackiv31: I was more curious than anything else.
19:21 < russfrank> that's a fine term
19:21 < generalissimo> i use handlebars because i can share client and server side templates
19:21 < generalissimo> via an npm package i wrote
19:21 < chakrit> actually, jade compiles into javascript
19:21 < chakrit> afaik
19:22 < jmar777> technically, i believe jade transmogrifies into html
19:22 < generalissimo> lol
19:22 < CoverSlide2> most template compilers just compile to a javascript function
19:22 < chakrit> just use the one you like.
19:24 < zackiv31> baudehlo: yah, most CDN's should support query string caching... would be a nice proof of concept to get yourself familiar with express and middleware, that's partly why I did the same.  good luck :)
19:24 < DeathRayDragonLu> yeah, I tend to favor handlebars
19:24 < DeathRayDragonLu> but ther wary side of me wondered the merits of others...
19:24 < baudehlo> zackiv31: yeah, but no time for that :)
19:25 < jlongster> if anyone likes jinja2 from the Python world, I'm almost finished with a v1.0 port of it: https://github.com/jlongster/nunjucks
19:25 < generalissimo> you people with your jobs and your deadlines
19:26 < CoverSlide> jlongster: does it work client-side?
19:26 < jlongster> CoverSlide: yep, https://github.com/jlongster/nunjucks/tree/master/browser
19:26 < CoverSlide> sweet
19:27 < jlongster> the -dev file has the compiler and should be used on dev, but the others are tiny and just have the runtime for precompiled templates
19:27 < jlongster> it's very new, still needs documentation
19:28 < jarr0dsz> is node.js memory intensive?
19:28 < CoverSlide> not really
19:28 < jarr0dsz> im runing alot of background services for an app im building like 3/4 and memory is a bit of a problem
19:28 < CoverSlide> depends on what you're doing
19:29 < jarr0dsz> not really ? :P i want to run an instant messenger thingy on it
19:29 < CoverSlide> 3/4 ?
19:29 < jarr0dsz> communication between users
19:29 < jarr0dsz> like 4 background services, redis, elasticsearch, mongodb and prosody
19:29 < jarr0dsz> 5 that is ;)
19:29 < jarr0dsz> so say i have around 1000 users on an node enabled app sending text messages like on facebook chat
19:30 < jarr0dsz> what should one very very roughly should expect? or is that a really stupid question
19:30 < jarr0dsz> basic allocation + a few kb for every connection
19:30 < CoverSlide> well fortunately, one of the benefits of node is that each user is not on a separate thread, like with most java applications
19:30 < CoverSlide> 1000 users and 1000 threads can take up a lot of memory,
19:31 < CoverSlide> but depending on what you have loaded into memory, it could still add up
19:31 < tjholowaychuk> that's why you need tiny threads!
19:31 < lohkey>  threads will be light soon
19:31 < lohkey> if you use the gold linker with GCC you can actually enable split stacks on threads right now
19:31 < CoverSlide> oh well forget node then, I'm building everything in C
19:32 < lohkey> meaning you no longer have to allocate worse case stack size on thread allocation, you can allocate minimal chunks, typically 4k and have the stack grow dynamically
19:33 < lohkey> however, i prefer node with it's single threaded async style, because it encourages really good concurrency patterns
19:33 < lohkey> and concurrency is more important the parallelism most of the time
19:34 < tjholowaychuk> not sure if i'd call terrible error handling and callbacks  good
19:34 < tjholowaychuk> :p
19:34 < drudge> zing
19:34 < lohkey> error handling in node is pretty good
19:35 < drudge> is it lohkey?
19:35 < drudge> next all the things?
19:35 < lohkey> for async functions they basically use the continuation pattern 
19:35 < lohkey> drudge: yeah, continuations are really powerful abstractions
19:35 < duc1199> lohkey: is it really? then why Jade is having trouble adding decent error reporting and blames V8 for this?
19:35 < lohkey> duc1199: i don't use jade so i wouldn't know
19:36 < tjholowaychuk> ? jade is a completely different thing lol
19:36 < lohkey> idd
19:36 < tjholowaychuk> that just has bad error handling because it's difficult to map generated js
19:36 < duc1199> tjholowaychuk: Jade is using V8, node is using V8 too
19:36 < drudge> when in doubt, blame tj
19:36 < tjholowaychuk> that's a different problem
19:36 < CoverSlide> what about adding source maps
19:37 < lohkey> error passing via continuations > exception handling
19:37 < lohkey> #justsayin'
19:37 < tjholowaychuk> -1
19:37 < duc1199> tjholowaychuk: yeah, youre right about mapping generated JS
19:37 < CoverSlide> duc1199: unless it's browser side, then it could be using spider monkey, chakra, jscore
19:37 < drudge> empireJS tickets are on sale now if anyone didn't see the message
19:38 < jarr0dsz> great thx for the info on the memory usage, already red node was smart
19:39 < CoverSlide> not saying one is better than the other, but sometimes you're knee deep in callbacks, even when I don't use closures, it's still easy as fuck to get horribly lost
19:40 < CoverSlide> and what to do when you've got an error
19:40 < duc1199> CoverSlide: ask for help on #node.js
19:40 < CoverSlide> no i'm asking how to handle it and pass it through all the callbacks
19:41 < lohkey> CoverSlide: oh, i use something i call the pass pattern
19:41 < jarr0dsz> try to get some example code to work but it fails with http://pastie.org/private/5rtrxwo1cqiixx4f9xu5ia
19:41 < generalissimo> preferred way to handle errors:   if(error) { /* TODO: handle error */ } else { ... }
19:41 < CoverSlide> you need to add a bunch of boilerplate like `if(err) return cb(err)` in every callback, as well as `obj.on('error', cb)`
19:41 < generalissimo> trolololol
19:41 < jarr0dsz> can remember vague i need to install that module
19:41 < jarr0dsz> npm or so not sure anymore
19:42 < lohkey> CoverSlide: http://josephmoniz.github.com/blog/2011/12/14/js-pass-pattern/ << that gets rid of the conditional check you're talking about
19:42 < lohkey> CoverSlide: TL;DR check out the last 2 code examples
19:42 < tjholowaychuk> that's still codesmell
19:42 < lohkey> it's more or less how bind/unit work in haskell
19:43 < WalterTamboer> I'm trying to write a BOM character to a file but I'm failing, does anyone have an example about how to do that? I'm using fs.createWriteStream
19:44 < CoverSlide> where exactly is it failing?
19:44 < Spion> CoverSlide, lohkey, what about domains
19:45 < lohkey> i haven't really had a use for domains yet
19:45 < lohkey> i've never really had issues keeping track of request contexts
19:45 < Spion> they're meant to solve error handling
19:45 < lohkey> no, they're meant to solve cleanup on error conditions
19:46 < Spion> and what do you do when you handle errors.
19:46 < Spion> (my question means, whats the difference)
19:47 < lohkey> difference between?
19:47 < WalterTamboer> CoverSlide: Well, I'm not really sure what I need to do. I tried: stream.write(0xEFBBFE) but when I open the file in a hex editor, the value is not present
19:47 < Spion> lohkey, between error handling and cleanup on error conditions
19:48 < lohkey> that assumes that all error conditions require cleanup
19:48 < lohkey> which isn't true
19:51 < Spion> lohkey, do you actually consider that to be the meaning of exceptions versus passed error values (errors that require cleanup vs errors that don't require cleanup)?
19:52 < Spion> or am I missing some hidden extra functionality in domains except exception handling?
19:53 < lohkey> Spion: i avoid exceptions at all costs in my code but yeah
19:53 < lohkey> typically exceptions involve things that need cleanup in most cases
19:53 < Spion> i thought that generally, exceptions were meant as a tool to propagate errors up the call stack to a function that knows how to handle them.
19:54 < Spion> theoretically, if domains had absolutely no cost, one could rewrite all callbacks in node to simply throw errors instead of calling callbacks
19:54 < Spion> and a domain could be instantiated as a generic try-catch block
19:55 < C0deMaver1ck> does anyone know if there is an official build of node.js for ARM?
19:55 < TooTallNate> C0deMaver1ck: there is not
19:55 < C0deMaver1ck> I see a few tuts for compiling for arm, but nothing other than that
19:55 < TooTallNate> except for distro versions
19:56 < C0deMaver1ck> TooTallNate: that's what I figured, does the build script support cross-compile for ARM?
19:56 < WalterTamboer> Anyone? How do I write a BOM character to a stream?
19:56 < C0deMaver1ck> or would I need to manually change a few things?
19:57 < TooTallNate> C0deMaver1ck: iirc you just need to set the CC, CXX, LINK, and AR env variables
19:57 < CoverSlide> arch for arm has versions for v5, v6, v7
19:58 < TooTallNate> for both the ./configure and make steps
19:58 < Sly> TooTallNate, okay to PM you?
19:59 < jmar777> [ANN] Just launched my new blog built on (and focusing on) Node.js, MongoDB, etc.: http://devsmash.com/ </spam>
19:59 < TooTallNate> Sly: sure
20:00 < CoverSlide> no content, wtg!
20:01 < CoverSlide> where's the source?
20:01 < jmar777> CoverSlide: is that at me?
20:01 < CoverSlide> yes
20:02 < RLa> yeah, we want to see source
20:02 < jmar777> CoverSlide: bitbucket (closed). it's going to be open sourced, most likely on github
20:03 < jmar777> i went the lazy approach and put credentials in the configs and such just for the sake of getting it out there. once i clean things up i'll make a clean repo on github for all to see
20:05 < jmar777> so ya, kind of underwhelming right now. hopefully it'll be more interesting within the next couple weeks
20:06 < chrisjaure> jmar777: looking for suggestions on the design?
20:07 < jmar777> chrisjaure: definitely
20:08 < Spion> lohkey, so I disagree with that kind of separation. if you ask me, ideally, exceptions will always be thrown and ideally they would propagate through async callbacks. infact I think I'm going to try and write a little fake error handler thingy that works very similarly to exceptions
20:09 < chrisjaure> jmar777: typography could use some work, i've gotten used reading blogs that use a base font size of 16px or 18px, 13px seems too small
20:09 < Ramone> hey all... anyone actually using node in production?  I'm trying to figure out how many node processes per processor, and how to manage starting them (automatically)...
20:09 < Spion> it would actually be very similar to the pass pattern, except that you won't specify the handler every time
20:09 < lohkey> specify the handler?
20:10 < Spion> the error handling function
20:10 < lohkey> ah, i see
20:10 < lohkey> in most cases the error handler is next
20:10 < lohkey> as in forward the error to the next continuation
20:10 < jmar777> chrisjaure: good point. does look kind of cramped now that you mention it
20:11 < Spion> var atry = new asyncTry(); db.dostuff(query, atry(function(data) { db.doOtherStuff(data, atry(function(otherData) { console.log(otherData); })); })); atry.catch(function(err) { /* handle_error */ });
20:13 < lohkey> Spion: that would work, but how do you handle rethrowing?
20:14 < lohkey> also, it means you have to have a lot of wrapper code on functions that return errors to throw instead of call next
20:15 < lohkey> which is similar to the same wrapper code-a-palooza you see with people implementing the promise pattern system wide
20:15 < AviMarcus> Ramone, more than one process per processor would be unhelpful, afaik, it's only waiting for CPU time if you did async properly. And what are you balancing? http requests or something else? there's proxies, e.g.. substack/seaport or node's cluster which is in beta I think.
20:16 < Ramone> AviMarcus: yeah just http
20:16 < AviMarcus> there's also a ton of cluster packages but I haven't used any of them
20:16 < lohkey> Ramone: i use the cluster module for just HTTP load balancing
20:16 < Spion> this is fake, so it will work with normal cb(err, data) invocations, it wont handle actual exceptions. As for rethrowing, you can call any callback in atry.catch(function(err) { cb(err); /* is like rethrow */ });
20:17 < Ramone> lohkey: the learnboost module?
20:17 < lohkey> Ramone: no, the native node one
20:17 < lohkey> works fine
20:17 < Ramone> the native one seems a bit low-level.... how do you handle restarts?
20:17 < lohkey> it just uses shared sockets and lets the OS handle load balancing, which it's good at
20:18 < Spion> so if you're in an async function that can't handle the error, you already have a callback function which you can call to "rethrow"
20:18 < lohkey> Ramone: you add a listener to the exit event
20:18 < lohkey> then you spawn new children on exit
20:18 < lohkey> simple
20:18 < Ramone> ah okay
20:19 < Spion> e.g. function myasyncDoStuff(query, cb) { var atry = new atry(); db.dostuff(atry(function(data) { .... more callbacks and atry wrapping })); atry.catch(function(err) { cb(err); });
20:19 < Ramone> that would solve my dead children with a zombie master process problem 
20:19 < Ramone> I'll give that shot... thanks lohkey
20:20 < lohkey> Spion: ahh, i see
20:20 < lohkey> that interesting
20:20 < lohkey> so, that makes it easy to invoke callbacks on the first level of nesting right
20:20 < Spion> I'll give it a try (no pun intended)
20:21 < lohkey> but if you want to throw deeper in the flow
20:21 < lohkey> you have to pass the arty function down
20:21 < lohkey> which could be odd and non intuitive
20:21 < lohkey> hmm, well, i guess you wouldn't do that though
20:22 < lohkey> because if you throw deeper in the flow and control returns to the higher function wrapped in atry, you can get double calls to catch
20:22 < Ramone> lohkey:  just  cluster.on('exit', function(){  cluster.fork(); });  ?
20:22 < Spion> it should work very similarly to try { ... } catch (err) { }. Except that every time you want a new try block you'll have to create it, and wrap all the callbacks that you want handled by the catch.
20:22 < lohkey> Spion: so that means you're only wrapping the first async level typically though, which typically isn't how exceptions are used
20:23 < lohkey> oh
20:23 < lohkey> but what that does, is that moves the error checking conditional from the response to the responder
20:24 < Spion> I'll just give it a try anyway. and I'll also try to use it for a while and see what comes up
20:25 < lohkey> always a good idea
20:29 < lohkey> Ramone: yup
20:29 < lohkey> Ramone: super simple and does the job
20:30 < Ramone> lohkey: yep... it appears to... thanks
20:33 < estbd> anybody have this working on windows (loading the dll and node::start)? https://github.com/joyent/node/pull/3499
20:35 < estbd> or maybe has seen "Fatal error in v8::HandleScope::CreateHandle()    Cannot create a handle without a HandleScope"
20:36 < machadogj> hi guys, does anybody know why '\n' is not kept in CDATA nodes on the result of xml2js (or maybe sax-js) ??
20:36 < estbd> from the init function of a nodejs addon
20:38 < draginx> Is there a script that can compile .coffee scripts into .js files automatically? O_o basically i have an express/sequelizejs app that's kind of a MVC structure as well
20:38 < draginx> and I want ot convrt everything to CS
20:38 < lohkey> draginx: coffee script can do that with it's -w mode
20:39 < CIA-116> libuv: Ben Noordhuis tcp-accept-bench * r57a7de9 / (test/benchmark-list.h uv.gyp test/benchmark-multi-accept.c): bench: add tcp accept benchmarks - http://git.io/cw0wqQ
20:43 < AAA_awright> draginx: It's probably too late to convince you otherwise but PLEASE, PLEASE write ECMAScript
20:43 < Flam9> AAA_awright: As opposed to coffeescript?
20:43 < AAA_awright> DON'T EVEN SAY THAT NAME
20:44 < tjholowaychuk> use iced coffeescript
20:44 < AAA_awright> ... Well, yeah
20:44 < draginx> AAA_awright: yeah why no CS?
20:44 < tjholowaychuk> obvs
20:44 < draginx> lohkey: thanks :)
20:44 < gkatsev> iced-coffeescript. livescript. :P
20:44 < draginx> tjholowaychuk: ! I want ur dotfiles :P
20:44 < gkatsev> but yeah, I prefer http://vanilla-js.com
20:44 < draginx> wth is iced-cs?
20:44 < tjholowaychuk> iced-mocha-starbucksscript
20:44 < Flam> vanilla js 4 lyfe
20:44 < zodiak> coffeescript ~seems~ like a good idea.. until it comes to debug the effer
20:44 < gkatsev> draginx: it's a fork of CS with some stuff
20:44 < AAA_awright> draginx: It's just awful to support. it's a pain to debug, it's a pain to compile, it's a pain to load as a library, it ruins the ECMAScript object model which is just so beautiful
20:45 < draginx> AAA_awright: seeing as u and I agree on economics :P ok
20:45 < zodiak> to debug cs, you have to try and grok the js it generates .. which is a nightmare
20:45 < AAA_awright> draginx: Well now I feel guilty
20:45 < Flam> Yeah I had to do it once for a freelance job. It blows bigtime
20:45 < AAA_awright> I mean, if you have an application you want to write, and you think it's better, I can't argue witht hat
20:45 < AAA_awright> *that
20:46 < AAA_awright> But for libraries, anything you expect other people to use, CS is very inhibiting, partly because it's inherently hard to do anything but ES, partly because it's just a poor language
20:46 < tjholowaychuk> there's no saving them
20:46 < tjholowaychuk> they'll figure it out
20:46 < tjholowaychuk> some day
20:50 < estbd> windows is such a punch in the nuts, nothing is straightforward
20:50 < Spion> haha, vanilala-js.com
20:50 < Spion> err, vanilla-js.com
20:51 < gkatsev> vaporjs.com is good too, but a bit older.
20:52 < Spion> one of the most bothersome aspects of vanilla js that I can think of is that vanilla dom selection functions don't return arrays
20:52 < Spion> so you don't have forEach, map, or anything
20:52 < Spion> it makes me very, very sad.
20:53 < gkatsev> yeah, they return a NodeList
20:53 < gkatsev> but you can delegate forEach to it
20:53 < Spion> by calling it with Array.prototype.forEach.call
20:53 < Spion> yeah erm... ugh.
20:53 < gkatsev> yeah
20:54 < gkatsev> or [].forEach.call :P
20:54 < Spion> shorter. but doesn't compare with nodes.forEach :)
20:54 < Spion> document.querySelectorAll('
20:54 < Spion> oops.
20:55 < Spion> document.querySelectorAll('#myform input[type="text"]').map(function(el) { return el.innerText; }).join(",")
20:56 < Spion> so beautiful. well. beautiful enough.
20:56 < TooTallNate> new blog article for those who are interested in cross-compiling node: http://n8.io/cross-compiling-nodejs-v0.8
20:56 < TooTallNate> C0deMaver1ck: ^
20:56 < Spion> ... although... innerText isn't *really* a string either. last time I checked
20:57 < TooTallNate> Nexxy: ^
20:57 < CIA-116> libuv: Ben Noordhuis tcp-accept-bench * rd4e1469 / test/benchmark-multi-accept.c : bench: add idle delay to tcp_multi_accept{2,4,8} - http://git.io/rJq1Tg
20:57 < CIA-116> libuv: Ben Noordhuis tcp-accept-bench * r3758f8e / test/benchmark-multi-accept.c : bench: let client close connection in tcp_multi_accept{2,4,8} - http://git.io/FvydkQ
20:58 < Spion> ah, those DOMmy stuff. they always look like they're from another dimension.
20:59 < slick> reading through jquery libraries makes me angry for the language sometimes (well, bad libraries and some "good", too)
21:00 < tjholowaychuk> the language is fine
21:00 < tjholowaychuk> stupid code is stupid
21:00 < tjholowaychuk> nothing can change that
21:00 < slick> stupid people are stupid? :D
21:00 < heatbrr> jquery try hide the best features of js.
21:00 < tjholowaychuk> jquery doesn't have to be so ugly
21:00 < slick> jquery is a great lib, don't get me wrong
21:00 < beppu> heatbrr: like what?
21:01 < slick> just reading through this code made me wonder what the heck we were ever thinking
21:01 < jcrew> heatbrr: i'm curious too
21:01 < heatbrr> beppu: they OO implementation hide the type referece.
21:02 <@Nexxy> TooTallNate, can you tweet that to me? im stuck on my phone until my move is over.
21:02 < kokotron> what don't you like about jQuery?
21:02 <@Nexxy> <3
21:03 < kokotron> im just curious because i never use it, but i like picking through it from time to time
21:03 < heatbrr> and also the chain context.
21:04 < jarr0dsz> hey node gurus may I newbie ask for short advice? im having this at top of server.js http://pastie.org/private/utdkyr54to7wwocxw3eq
21:04 < jarr0dsz> but it always connects to localhost 0.0.0.0 even if i fillin an hostname like host.com
21:04 < jarr0dsz> what do i miss how to make a outside connection to a domain.com
21:04 < heatbrr> it's the most important think that who use jquery never used, in most cases.
21:05 < kokotron> is this some sort of shorthand . . .
21:05 < jarr0dsz> it just ends in <body xmlns:streams="http://etherx.jabber.org/streams" type="terminate" condition="host-unknown" xmlns="http://jabber.org/protocol/httpbind"></body>
21:06 < jarr0dsz> im trying a xmpp client
21:06 < kokotron> tjholowaychuk still here?
21:06 < tjholowaychuk> ? yeah
21:06 < heatbrr> I use a lot of jquery in my app but I think they can do a approach more like javascript is.
21:07 < kokotron> were you talking about how jquery is all clumped together?
21:08 < kokotron> and difficult to read
21:08 < kokotron> er maybe that was slick
21:10 < heatbrr> kokotron: maybe what you need is some javascript base.
21:10 < jcrew> heatbrr: i think you need to explain what you mean a little more clearly, i don't get what you're trying to say either.
21:10 < heatbrr> then you'll see more clear the jquery code.
21:10 < jcrew> or an example
21:11 < context> http://screencast.com/t/tr9WlWsHXaD
21:11 < heatbrr> well, let me explain.
21:11 < context> http://www.google.com/finance?q=AAPL <-- AAPL went broke
21:12 < jcrew> context: only on google
21:16 < C0deMaver1ck> thanks TooTallNate
21:17 < heatbrr> we have good approachs in javascript to make Classes and Inheritances. But jquery give a another way to do that, trying to do like other oo languages.
21:17 < tjholowaychuk> ?
21:18 < tjholowaychuk> heatbrr i think you have that backwards
21:19 < jarr0dsz> anyone knows how to get node proxy to connect to outside? no matter what i try it juts wont connect to outside host :(
21:20 < timeturner> please, please stop using the word 'classes'
21:20 < jarr0dsz> if setting host: 'domain.com' it connects to locahost@domain.com :\
21:20 < jarr0dsz> i mean domain@localhost
21:23 < heatbrr> timeturner: lol. sorry for my mistake.
21:24 < heatbrr> here. It's waht I disagree in jquery. http://mahdipedram.com/object-oriented-with-jquery-javascript/
21:25 < heatbrr> waht*
21:25 < heatbrr> what*
21:26 < jcrew> you don't like that there are multiple ways to do things or that jquery duplicated functionality?
21:27 < tjholowaychuk> inheritance almost never makes sense, but i dont see what that has to do with jquery
21:27 < heatbrr> jcrew: the way they choose to do that things.
21:27 < tjholowaychuk> i thnik that's just some random guy
21:27 < tjholowaychuk> that added .makeclass()
21:28 < tjholowaychuk> "make a new instance of your Object through $.makeclass plugin."
21:28 < jcrew> tjholowaychuk: that's what i got out of it too, just another way to do something
21:29 < jcrew> or some guy showing another way
21:30 < heatbrr> I didn't find the right example.
21:31 < heatbrr> next time I'll bring the right arguments.
21:33 < heatbrr> just now, I could not express myself.
21:36 < heatbrr> but I use jquery in all my applications to make visual effects.
21:51 < mscdex> i think i give up on solaris
21:51 < jarr0dsz> elasticsearch
21:51 < mscdex> ?
21:51 < mscdex> solaris os
21:51 < jarr0dsz> or does it use solaris to? anyone with a little bit of node proxy knowledge?
21:52 < jarr0dsz> ah so i thought the search engine ;) my first distro was solaris!
21:52 < mscdex> i feel sorry for you ;-)
21:52 < jarr0dsz> i cannot figure out how to remove the @localhost when i do a http proxy with specifying host: 'domain.com'
21:52 < mscdex> i can't tell you how much time i wasted today just simply trying to get a working environment set up
21:52 < jarr0dsz> drives my node newbie skills crazy ;s
21:53 < jarr0dsz> mscdex: just buy a mac mini quad core and never look back
21:53 < mscdex> i've tried 3 solaris distros now
21:53 < billy> why solaris
21:53 < mscdex> so i can add support for it for my binding
21:53 < mscdex> i need to generate a config for the platform
21:54 < tkellen> anyone know how to unpublish a package?  npm unpublish doesn't seem to be working.
21:55 < jarr0dsz> proxy = new httpProxy.HttpProxy({ target: { host: 'host.com',port: 5280 } routes to host.com@localhost :||
21:55 < jarr0dsz> is there somethine updated recently ?
21:55 < jarr0dsz> sorry don't know tkellen im just started with node today ;p
22:41 < joaojeronimo> Is it possible to asynchronously export a module ? Like exporting an object inside a callback ?
22:43 < mscdex> joaojeronimo: require() is sync, but i think you should be able to modify the exports object within the module itself, after require() returns
22:43 < BennyLava> lolwat
22:43 < mscdex> joaojeronimo: why are you wanting to do something like this anyway?
22:44 < joaojeronimo> mscdex, apparently not... I'm adding stuff to the object when I get something from a server (a list of methods available) and the object keeps just {}...
22:46 < lohkey> joaojeronimo: seems like a bad way to build a module
22:47 < joaojeronimo> mscdex, like this:               var obj = {};  module.exports = obj;  setTimeout(function () { obj.method = function () {}.... obj will still be }, 100)
22:47 < lohkey> joaojeronimo: if you insist, just export a method that does the async stuff and calls a continuation when done
22:48 < lohkey> exports = function(next) { doAsync(next); }
22:48 < mscdex> joaojeronimo: it works for me: https://gist.github.com/c4c1e7f8a934285819f2
22:48 < mscdex> but yeah, this isn't the best way to do things
22:49 < joaojeronimo> lohkey, it's not very bad in this specific case... it's an rpc module where all the methods work the same way, send some data to the server, something happens, return some result, so I first ask which methods are available on the server and then build an object with those methods, and all those methods do the same thing
22:49 < lohkey> joaojeronimo: i do the same with dnode
22:49 < lohkey> but i don't put that in a module
22:49 < lohkey> dnode is the module that does that for me
22:50 < lohkey> then i keep the remote object with the remote methods in relevant places
22:51 < joaojeronimo> lohkey, well apparently I built something similar to dnode lol
22:51 < mscdex> :-)
22:58 < benatkin> this irc room just got a mention at SummerCamp :)
23:00 < draginx> lets see how many new people get in here :D
23:00 < draginx> AAA_awright: have u used node.js professionally?
23:02 < AAA_awright> draginx: Professionally, maybe kind of?
23:02 < draginx> you work at a company right? I remember u working at a freight harbor.. or someone was in mises
23:03 < draginx> Anyway, for the company tha you work for (if you do) have u made any applications for them in nodejs?
23:09 < jtomasrl> what's the best mongodb driver for node?
23:10 < joaojeronimo> jtomasrl, node-mongodb-native
23:10 < joaojeronimo> jtomasrl, https://github.com/mongodb/node-mongodb-native
23:11 < jtomasrl> joaojeronimo: im getting terrible performance using apache bench :S
23:12 < joaojeronimo> jtomasrl, is the database far away ? is it running on decent hardware ? are you waiting for it to respond every time you insert something ?
23:12 < joaojeronimo> jtomasrl, it could even be your code
23:13 < joaojeronimo> jtomasrl, but node-mongodb-native is by far the best mongodb driver for node
23:15 < jtomasrl> joaojeronimo : actually, my db and node app are on the same place (localhost) and my code isnt that complex https://gist.github.com/3647297
23:16 < joaojeronimo> jtomasrl, you're only testing how long it takes to open the database ?
23:17 < jtomasrl> joaojeronimo: yup
23:17 < jtomasrl> and the test cant finish
23:18 < jtomasrl> ab -c 1 -n 10 http://127.0.0.1:3000/test
23:19 < joaojeronimo> jtomasrl, of course it can, if you're opening the database on every request it's creating a database client every time... you have default limits on database clients
23:19 < joaojeronimo> jtomasrl, that's irrelevant performance tests as you should only open it once in your programs... you should test the things you'll do intensively like inserting records, reading them, deleting maybe...
23:21 < jtomasrl> joaojeronimo: let me see, im new into node
23:22 < draginx> l-o-l @ opening a connection each time
23:22 < draginx> isnt that what php does though technically? O_o
23:26 < jtomasrl> joaojeronimo: not it works, awesome
23:26 < jtomasrl> now*
23:27 < joaojeronimo> jtomasrl, cool
23:27 < jtomasrl> joaojeronimo: should i use db.close somewhere?
23:28 < joaojeronimo> jtomasrl, yes, when you exit the program I guess... or somewhere else if you want to close it before
23:31 < shlevy> Anyone know the status of https://github.com/joyent/node/issues/3278 ?
--- Log closed Thu Sep 06 00:00:29 2012
