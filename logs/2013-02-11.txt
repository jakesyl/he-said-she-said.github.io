--- Log opened Mon Feb 11 00:00:05 2013
--- Day changed Mon Feb 11 2013
00:00 < Gryffin> is there a better repo?
00:00 < TehShrike> Gryffin: so you're installing node.js itself, instead of the graceful-fs module?
00:00 < Gryffin> no the node installation went fine.
00:01 < Voting> On ubuntu, when I do "npm install xxx" do I typically start with "sudo"?  
00:01 < TehShrike> Voting: that should just be down to file permissions - so not normally, I'd imagine
00:01 < Gryffin> now I am installing scripted.. from source.. https://github.com/scripted-editor/scripted/
00:02 < Gryffin> and the `npm install` gives me the error
00:02 < rvagg> Voting: if you haven't changed node_modules location then you only need sudo when you install globally, i.e. with -g
00:02 < TehShrike> Gryffin: while compiling scripted?
00:02 < Gryffin> yes
00:03 < Voting> ah
00:03 < Voting> rvagg: thanks!
00:03 < TehShrike> Gryffin: That's weird, I didn't guess that there'd be make files that depended on npm
00:03 < TehShrike> But I guess I can imagine it
00:03 < Gryffin> I'm not sure what u mean.
00:04 < rvagg> Gryffin: try this, in the root of your scripted dir, just type `npm install graceful-fs`; then after that's done, try `npm install` again
00:04 < Gryffin> "npm install graceful-fs" is giving me the same error
00:04 < TehShrike> What error now?
00:05 < Gryffin> "Cannot find module 'graceful-fs'"
00:05 < rvagg> Gryffin: npm cache clean
00:05 < Gryffin> same error
00:05 < TehShrike> Gryffin: mayhaps you are pointed at a custom npm repo?
00:05 < Gryffin> even cache clean is giving same error
00:06 < Gryffin> TehShrike: how can I know?
00:06 < rvagg> cat ~/.npmrc
00:06 < TehShrike> Gryffin: npm config list
00:06 < rvagg> or that..
00:06 < TehShrike> Gryffin: check the "registry" thing at the top
00:07 < Gryffin> TehShrike: top??
00:07 < TehShrike> Gryffin: I imagine you want it to be https://registry.npmjs.org/
00:07 < TehShrike> Gryffin: did you run npm config list?
00:08 < Gryffin> TehShrike: even that is giving me the same error...
00:08 < TehShrike> 8-|
00:09 < Gryffin> TehShrike: Stupid thing, I think I should remove and install it again.
00:09 < TehShrike> What error, exactly?  "module not found?"
00:09 < Gryffin> Error: Cannot find module 'graceful-fs'
00:09 < TehShrike> Gryffin: you're running node, not npm
00:09 < TehShrike> Gryffin: run npm
00:09 <@isaacs> rvagg: pong
00:09 <@isaacs> what's up?
00:09 < TehShrike> isaacs: people are getting errors when publishing to npm apparently
00:09 < TehShrike> two reports so far I believe
00:10 < Voting> http://pastebin.com/QN4qDhUR <- note that npn seems to be trying to RUN my /etc/mysql/my.cnf I think (see line 18). 
00:10 < Gryffin>  "npm config list" is my last command
00:10 < tprice> npm ERR! unpublish Failed to update data
00:10 < tprice> npm ERR! Error: forbidden failed checking user.name: raft-api/-rev/59-480cc8c242175e356e4001c5868369b7
00:10 < rvagg> isaacs: same err on publish
00:10 < rvagg> forbidden failed checking user.name
00:10 <@isaacs> rvagg: weird...
00:10 < TehShrike> Gryffin: is that the entire output?  Can you pipe that to a file and throw it on a pastebin somewhere if it's more than just that one line?
00:11 < Gryffin> http://pastebin.com/4y4BZBZZ
00:11 <@isaacs> rvagg: what version of npm?
00:11 < rvagg> 1.2.10
00:11 < TehShrike> Gryffin: blurgh!
00:11 < tprice> 1.1.62
00:11 <@isaacs> rvagg: oh, hahahah
00:11 < Voting> TehShrike, can you have a look? http://pastebin.com/QN4qDhUR <- note that npn seems to be trying to RUN my /etc/mysql/my.cnf I think (see line 18). 
00:11 <@isaacs> i see something obviously wrong in teh vdu function
00:11 <@isaacs> one sec
00:12 < TehShrike> Gryffin: that makes less sense than a chili pepper up my butt
00:12 < Gryffin> :)
00:13 <@isaacs> rvagg, tprice: Try publishing now
00:13 < rvagg> isaacs: bingo! cheers
00:13 < Gryffin> TehShrike: Okay tell me this, do you know "add-apt-repository ppa:chris-lea/node.js" this repo is good enough?
00:14 < Gryffin> for me to pick up node from?
00:14 < Voting> rvagg: Can you have a look? http://pastebin.com/QN4qDhUR <- note that npn seems to be trying to RUN my /etc/mysql/my.cnf I think (see line 18). 
00:14 < rvagg> Gryffin: yes, that's a good place to get Node from, he updates it very quickly after a release
00:14 < Gryffin> okay. then let me try reinstall
00:14 < TehShrike> That's good to know - the last time I was looking for a package manager with node, I couldn't find anything newer than 8 months or so
00:15 < TehShrike> Voting: sorry, that's not really my ballpark
00:15 < rvagg> Voting: not sure but I suspect that it's just trying to *read* it
00:15 < rvagg> Voting: `sudo chmod 644 /etc/mysql/my.cnf` perhaps
00:16 < rvagg> Gryffin: `apt-get purge` instead of `apt-get remove` is a good way to totally clear out an install, config files and all, fyi
00:16 <@isaacs> Voting: that package seems rather old.  it's using node-waf instead of node-gyp
00:16 < Gryffin> rvagg: Thanks for the tip
00:16 < TehShrike> Gryffin: you can download linux binaries, y'know
00:17 < Voting> isaacs: what package is old? 
00:17 <@isaacs> Voting: mysql-db
00:17 < Gryffin> i know yes, didn't want to go there, this was easier. but thanks will try that too..
00:17 <@isaacs> db-mysql@0.7.6
00:17 < rvagg> TehShrike, Gryffin: and... compiling node from source is uber-easy
00:17 < Voting> isaacs: is there a newer one I should be using?
00:17 < TehShrike> rvagg: easier than binaries? :-x
00:18 < rvagg> Voting: just plan 'mysql' is a perfectly good mysql client
00:18 < rvagg> Voting: http://npm.im/mysql
00:18 < Gryffin> :-o
00:18 <@isaacs> Voting: people seem to like this: https://npmjs.org/package/mysql
00:18 < airtanah_> isaacs: i want to use net._createServerHandle, but _ methods are usually private for a reason. Should I be looking in another direction?
00:18 <@isaacs> ah, rvagg got it :)
00:18 < TehShrike> Yeah, I've used that mysql client
00:18 < rvagg> TehShrike: yes, easier than binaries, cause `git pull origin` is faster than downloading
00:18 < mansoor-s> Do we have hotswaping in Node yet?
00:19 < TehShrike> Coworker reported issues with connections timing out and not being able to find anyway to handle it properly, but otherwise it's been quite reasonable
00:19 <@isaacs> rvagg: it's only faster than compiling if you're in australia though ;P
00:19 < rvagg> make -j25
00:19 < rvagg> sometimes, if I'm feeling a little craaazy, make -j100
00:19 <@isaacs> airtanah_: yes, they are private for a reasno
00:19 <@isaacs> rvagg: you know, if your number of jobs is > than your number of CPUs, you're just spending memory
00:20 < rvagg> isaacs: yerp, but I have tons of memory to spend
00:20 < Voting> OTBS4Life recommended http://nodejsdb.org/db-mysql/ but I don't know which to use. 
00:20 <@isaacs> rvagg: what i mean is, if -j > number of cpu's, it's slower
00:20 <@isaacs> airtanah_: what are you actually trying to do?
00:20 < Gryffin> okay folks. the issue is sorted. same repo
00:20 < rvagg> isaacs: not necessarily since i/o is more of a bottleneck
00:21 < airtanah_> isaacs: i am trying to bind a socket in a parent process, and using child processes as the workers
00:21 < TehShrike> Voting: I haven't used that one, but I've used that one isaacs linked to
00:21 <@isaacs> airtanah_: why are you not using cluster?
00:21 < Gryffin> I think the mistake i made was "sudo apt-get install nodejs"
00:21 < TehShrike> Voting: it's quite reasonable so far
00:21 < airtanah_> isaacs: i am targeting more than just node child processes
00:21 < asdf12> hmm
00:21 < Voting> TehShrike I'll google it and look up how to install and use it.
00:22 < Gryffin> TehShrike, rvagg: Thank you guys.
00:22 <@isaacs> airtanah_: i'm still not getting it... you *already* bound the server in the parent process?
00:22 < TehShrike> Voting: it's quite nice to jump in and use, actually https://github.com/felixge/node-mysql
00:23 < TehShrike> Voting: all JavaScript, no binaries, basic stuff is as simple as it should be
00:23 <@isaacs> airtanah_: and you want to pass it to some non-node process?
00:23 < airtanah_> isaacs: I tried using createServer in the parent, then passing it to the child processes. That works, but the parent is still accepting connections to the same socket
00:23 < Voting> https://github.com/felixge/node-mysql was the one that OTBS4Life has problems with. 
00:23 <@isaacs> airtanah_: i see, so *without* listening in the parent
00:24 < OTBS4Life> TehShrike, Fleixge's MySQL module is incredibly slow, and has memory leaks when dealing with millions of rows.
00:24 < airtanah_> isaacs: yes, i would like only the children to listen
00:24 <@isaacs> airtanah_: i dunno.  go for it.  it won't break in 0.10.
00:24 < TehShrike> ah, I try never to send millions of rows back to the client :-P
00:24 <@isaacs> airtanah_: but it might in 0.12
00:24 < TehShrike> I haven't done any speed benchmarks.
00:24 < OTBS4Life> TehShrike, db-mysql is about 10x faster.
00:24 < airtanah_> isaacs: i dont' mind if the internal API changes, i know the risks, heh
00:24 <@isaacs> airtanah_: post an issue about what kind of external api you'd like to see
00:24 <@isaacs> airtanah_: once you've messed with it a bit.
00:24 < airtanah_> isaacs: on github?
00:24 < TehShrike> OTBS4Life: at doing what?  Where's the slowdown?
00:25 <@isaacs> airtanah_: yeah, on gh.  it'd be nice to have that be exposed somehow, but the current api is a bit klunky, imo.
00:25 < TehShrike> OTBS4Life: mostly parsing query responses into result objects I'd guess?
00:25 < airtanah_> isaacs: sure, and i'll try to explain my use-case better there too. thanks
00:25 <@isaacs> airtanah_: you know, cluster CAN spawn non-node programs now, but it's still a bit node-specifi
00:25 <@isaacs> c
00:25 < OTBS4Life> TehShrike, For my purposes, I was doing millions of INSERTs.  The same code for doing it with db-mysql and the Felix module....  I suspect the problem was with the underlying connection library.
00:25 < Voting> OTBS4Life didn't tell me what his issue was with that mysql package.
00:25 <@isaacs> airtanah_: needs to know which FD to open for IPC, etc.
00:26 < OTBS4Life> I didn't care about responses..... these were INSERTs.
00:26 < TehShrike> OTBS4Life: so just general query overhead then
00:26 < TehShrike> That's fair.  I always group my queries up because I hate query overhead anyway, but I can appreciate wanting to minimize it
00:26 < OTBS4Life> Both libraries do their object-to-string in JavaScript.  I think the only difference is the underlying connections.
00:26 < TehShrike> Bulk inserts ftw
00:27 < airtanah_> isaacs: i'll take a closer look at cluster
00:27 < TehShrike> That's curious, though.  Now I'm interested in reading through the two libraries a bit more
00:27 < OTBS4Life> For my purposes, bulk inserts were barely faster.  It was actually more efficient for me to not use bulk inserts.  it's a single connection DB, MyISAM tables, no indices
00:27 < OTBS4Life> Now that I think of it though, I could use INSERT DELAYED, since it is MyISAM
00:28 < OTBS4Life> I'll probably do that tomorrow.
00:28 < TehShrike> If it's anything to do with the database side, the library shouldn't matter
00:28 -!- mode/#Node.js [+o isaacbw] by ChanServ
00:28 < OTBS4Life> TehShrike, Listen, the speed difference was between the libraries.  I'm telling you why I didn't use bulk inserts.
00:29 < OTBS4Life> The Felix library is entirely in JS.  It doesn't use bindings to the MySQL libraries.  Naturally, it has to handle the MySQL wire protocol itself.  That's the primary difference.
00:29 < OTBS4Life> The bonus is, it works everywhere, where db-mysql does not.  db-mysql won't work on Windows.
00:29 < TehShrike> Right, those sorts of expenses are the things that I would expect to become negligible with bulk queries
00:30 < TehShrike> The queries themselves may take just as long, but you only have a couple queries, instead of thousands
00:31 < TehShrike> I should read through node-mysql's protocol code.  I wonder how long it would take to get a library of that size into my brain
00:31 < OTBS4Life> TehShrike, Using bulk inserts doesn't change a thing... the Felix library still has to deal with the wire protocol.
00:31 < TehShrike> OTBS4Life: so you think it's not query overhead, it's overhead per-byte?
00:31 < TehShrike> I'm probably going to care about this a good bit at some point soon
00:32 < TehShrike> I haven't done anything heavy with it yet
00:32 < OTBS4Life> I give up.  I don't know how to explain to you that processing things in a native binary is faster than JS.
00:32 < rvagg> isaacs: https://gist.github.com/rvagg/4751685
00:32 < OTBS4Life> If you use the native MySQL libraries... it's all compiled code dealing with the wire protocol.
00:32 < Voting> ok, I got 2 from the demo "SELECT 1 + 1 AS solution" so I guess it is installed! Thanks folks!!! I'm SO pleased!
00:32 < OTBS4Life> the db-mysql binds to the native MySQL libraries.
00:33 < TehShrike> This seems like the time to link to https://github.com/felixge/faster-than-c :-)
00:33 < Voting> You folks may have saved my live (on this project...) THANKS!
00:35 <@isaacs> rvagg: that's wild.
00:36 < OTBS4Life> TehShrike, He's full of crap.  At least, for the type of work that I am doing, his code is a order of magnitude slower.  Your milage may vary.
00:36 <@isaacs> rvagg: doing make -j16 on my 4-core mbp makes it completely unusable for several minutes.
00:36 <@isaacs> rvagg: oh, you only did `make clean`.  try with `make distclean`
00:36 < airtanah_> isaacs: is there documentation on using cluster for non-node procs? the current docs don't seem to mention anything
00:36 <@isaacs> rvagg: `make clean` doesn't remove libuv and v8.  there are like 2 dozen things to do for node itself, so any -j > that doesnt' matter.
00:36 <@isaacs> rvagg: you could do make -j1000
00:37 < rvagg> isaacs: mmm, but then my machine would become unusable
00:38 < rvagg> isaacs: consider all the cruft that the compiler has to pull in to bundle a C/C++ file, soooo much IO with all those #includes, even if a large chunk of it gets cached
00:38 <@isaacs> airtanah_: oh, i guess it doesn't.
00:38 <@isaacs> rvagg: right, but compiling V8 is a cpu workout
00:38 <@isaacs> rvagg: and i have an ssd
00:38 <@isaacs> rvagg: so the IO is basically free.
00:39 <@isaacs> rvagg: if there's 25 jobs to do, then make -j1000 is equivalent to make -j25
00:39 < rvagg> isaacs: I have an ssd too, IO is free only compared to an HDD
00:39 <@isaacs> rvagg: i spend half my life compiling V8
00:39 < TehShrike> lol
00:39 <@isaacs> rvagg: it's all cpu all the time.
00:39 <@isaacs> the io there is minimal.
00:39 <@isaacs> (compared with the cpu)
00:40  * rvagg is obtaining numbers for a distclean
00:40 <@isaacs> if you're building *node*, then yes, there is not a lot of compilation, and a ton of header-loading
00:40 <@isaacs> also, i usually only do -j3 so that i have a CPU for windows to use
00:41 < crabtree> hi isaacs
00:41 < rvagg> isaacs: https://gist.github.com/rvagg/4751685 see comment
00:42 < rvagg> isaacs: same numbers, basically
00:42 < freewil> after the recent timing attack found in ruby's rack im suprised there isnt a simple constant-time compare module for node
00:43 < larzconwell> freewil, You should make one then ;D
00:43 < larzconwell> That's is a bit surprising though/
00:45 <@isaacs> rvagg: weird.
00:45 <@isaacs> rvagg: i wonder what the difference is to my machine.
00:45 < rvagg> isaacs: how much RAM do you have?
00:45 < samholmes> app.js file: http://pastebin.com/zg4PWiWT nav.jade: http://pastebin.com/ztxkxTMY error: http://pastebin.com/NAkVS3TN
00:45 < rvagg> isaacs: I'm currently trying a -j10000, just for fun, machine is still perfectly usable but I have 16G RAM
00:45 <@isaacs> rvagg: 8gb
00:46 <@isaacs> rvagg: yeah, once -j is > the number of actual jobs, it just queues them all up
00:46 <@isaacs> rvagg: but it can't get faster than "all cpus working on all the jobs"
00:46 < rvagg> isaacs: but how many jobs do you think there are max in there? I guess V8 would have the largest number
00:46 <@isaacs> rvagg: yeah, i don't know.  v8 just chuns forever.
00:46 <@isaacs> i hate updating v8
00:46 <@isaacs> for that very reason
00:46 <@isaacs> and the arch switching stuff for make binary and make pkg, ugh
00:47 <@isaacs> soooooo sllllooooowwwwww
00:47 < rvagg> isaacs: obviously <= 25 jobs cause 1000 doesn't perform any differently
00:48 < freewil> how does this time-equivalent string compare look? https://gist.github.com/freewil/dbc89ee21fffec57746f
01:03 < larzconwell> freewil, Looks pretty good to me.
01:03 < freewil> cool, thanks for looking
01:04 < larzconwell> I'm no crypto expert though. Haha
01:04 < freewil> basically the same thing done here: http://blog.jasonmooberry.com/2010/10/constant-time-string-comparison/
01:08 < samholmes> https://github.com/RandomEtc/ejs-locals/issues/29
01:08 < larzconwell> I've been looking around and most seem to do about the same. 
01:08 < samholmes> If anyone has any knowledge for the above issue, please contribute. :)
01:13 < holzp> sam is jade still using partials?
01:14 < holzp> samholmes, I think partials arent there anymore? isnt it blocks now?
01:14 < holzp> what version of jade are you running?
01:15 < holzp> samholmes, http://stackoverflow.com/questions/10222411/using-partials-with-express-in-node-js
01:17 < Lefty4000_>  
01:17 < holzp> sam you mixing jade and ejs? does that work?
01:18 < samholmes> holzp: Idk, does it?
01:19 < samholmes> holzp: I'm trying to migrate from EJS to Jade
01:19 < holzp> i think the rendering engine is one or the other, but I havnt tried
01:19 < holzp> what version of jade are you using?
01:19 < holzp> partials were dropped I think
01:19 < samholmes> holzp: latest version of jade
01:19 < samholmes> holzp: partials were dropped in Express
01:19 < samholmes> jade has includes
01:20 < samholmes> but this is EJS that I'm writing partial
01:20 < samholmes> and I'm using ejs-locals instead of the ejs module
01:21 < holzp> eju doesnt seem to like jade partials I guess
01:21 < asdf12> whoever mentioned making a html parser with regex....... so slowwwwww
01:22 < larzconwell> samholmes, I'll check it out for ya, seems weird to be calling a Jade partial from EJS,
01:22 < samholmes> I guess
01:23 < holzp> the error sort of looks like ejs doesnt know what to make of it
01:23 < holzp> which would be fair
01:23 < samholmes> I figured that partial would render the filename then put that in the template
01:23 < samholmes> partial()
01:23 < samholmes> that is
01:23 < larzconwell> Nah I'm pretty sure it attempts to compile the partial
01:24 < larzconwell> which would probably cause errors if it's Jade.
01:25 < samholmes> larzconwell: Too bad that the partial() function didn't return the res.render of the file
01:25 < penzur> top of the morning!
01:26 < samholmes> How do I res.render without repsonding?
01:26 < samholmes> responding*
01:26 < samholmes> So just return the results
01:32 < asdf12> what are you guys trying to do?
01:33 < Lefty4000> for what?
01:34 < asdf12> what
01:34 < Lefty4000> huh?
01:35  * holzp wakes up
01:35 < holzp> eh?
01:35 < penzur> ?
01:36 < mscdex> confusion.js
01:36 < larzconwell> samholmes, So I was able to reproduce the error.
01:36 < samholmes> larzconwell: ?
01:36 < larzconwell> the undefined is not a function error.
01:37 < larzconwell> This one you linked earlier: http://pastebin.com/NAkVS3TN
01:51 < mdedetrich> hey peeps!
01:54 < holzp> hey mdedetrich 
02:14 < Lefty4000> WHOO! Just figured out how to implement the whole jquery jsdom dealio going with node
02:15 < Lefty4000> so happy right now
02:19 < airtanah_> Lefty4000: crack open that beer
02:19 < Lefty4000> Good idea! I will.  I deserve it! I've spent the past few days trying to figure it out
02:20 < airtanah_> Lefty4000: i hope you're not using jquery from within node, i may have to shoot myself
02:20 < Lefty4000> Iono, I'm doing this
02:20 < Lefty4000> http://net.tutsplus.com/tutorials/javascript-ajax/how-to-scrape-web-pages-with-node-js-and-jquery/
02:21 < Lefty4000> once I pass the scraped page to jsdom, I can manipulate it in the env just like normal with jquery
02:21 < airtanah_> Lefty4000: interesting
02:21 < Lefty4000> I mean, I don't exactly know what scraping is but what it looks like is it will grab the dom from the requested page and whammo! 
02:22 < Lefty4000> btw, quick question.  How do I make the notify. whenever you respond with the Lefty4000 at the beginning, it get the notification.  Do you type that?
02:22 < airtanah_> Lefty4000: yes, but it tab-completes on mine
02:22 < Lefty4000> kk
02:22 < airtanah_> i just type Le-<tab>
02:23 < asdf12> how old are you Lefty? just curious
02:24 < asdf12> i want to say really young
02:24 < TehShrike> It sounds dirty, but I've done a ton of page scraping, and I always use regex
02:25 < Lefty4000> I am 20
02:25 < Lefty4000> haha is that really young
02:25 < Lefty4000> ?
02:25 < TehShrike> When I was in college I wrote a script to scrape university pages and send me an email as soon as a spot opened up in the classes I want
02:25 < airtanah_> Lefty4000: so followup, are you ALLOWED to crack open that beer?
02:25 < Lefty4000> yes i am
02:25 < TehShrike> Next semester, I made the script so it would automatically sign me up for those classes, too
02:25 < andrewaclt> He probably lives in a company without stupid laws :)
02:26 < airtanah_> TehShrike: so YOU were that guy
02:26 < jamesd> lefty4000 is probably in europe
02:26 < airtanah_> Lefty4000: or canada
02:26 < TehShrike> airtanah_: ...which guy :-x
02:26 < Lefty4000> Sure.....
02:26 < TehShrike> Nobody ever caught on, that I know
02:26 < TehShrike> They didn't implement true class queues until ~4 years after I left
02:26 < TehShrike> I just happened to get into all the classes that I wanted
02:27 < airtanah_> TehShrike: i took math, nobody ever signed up for those anyways
02:27 < TehShrike> I got to line all my classes up next to each other, and I could even get the easy electives full of athletes :-)
02:27 < TehShrike> Scraping web sites for fun and profit
02:27 < Lefty4000> TehShrike: oh man! that is an awesome script
02:27 < TehShrike> That was my first real scraper
02:28 < TehShrike> Since then, I've built scrapers that power http://rbnreleases.com/
02:28 < TehShrike> And various other things
02:28 < airtanah_> i made a scraper than went on hotornot.com and saved the images rated over 9
02:28 < TehShrike> lol
02:28 < Lefty4000> But is scraping really a good technique for getting the DOM and then maniuplating it?
02:28 < airtanah_> i can't believe i admitted that
02:28 < Lefty4000> airtanah_ its okay
02:29 < TehShrike> Lefty4000_: depends on your goals
02:29 < TehShrike> Lefty4000_: I've only ever been pulling very specific data out of web pages
02:29 < asdf12> thats a new low
02:29 < Lefty4000> Well I just want simple animations, scrolling pictures, dropdown menues and such
02:29 < asdf12> using programming that way
02:29 < TehShrike> Lefty4000_: if you want to be navigating around a DOM, regex isn't sufficient
02:29 < TehShrike> asdf12: :-P oh you shut up
02:29 < Lefty4000> regex?
02:30 < TehShrike> Yup
02:30 < TehShrike> regular expressions
02:30 < TehShrike> Not sufficient to navigate HTML
02:30 < Lefty4000> I'm afraid I don't understand.  I plan on using jsdom
02:30 < Lefty4000> I'm such a noob >.<
02:30 < TehShrike> But sufficient to pull out text from between other pieces of text that you expect to remain consistent
02:31 < Lefty4000> How did you guys get started with node.js?
02:32 < TehShrike> About 15 months ago some coworker was like "lol javascript on the server"
02:32 < TehShrike> And then I got started on a JS-heavy project, and I was all like "oh hey, JavaScript in places"
02:32 < TehShrike> And then I had so much fun writing JS I wanted to do it everywhere
02:33 < airtanah_> TehShrike: i'm curious if most node devs transitioned from other server languages, or from developing javascript on the client
02:33 < TehShrike> I wrote JavaScript in the client, but it was shitty shitty JavaScript
02:33 < Lefty4000> I would like to know this as well
02:33 < TehShrike> I got serious about JS the beginning of last year
02:33 < TehShrike> Before then, my server-side language was PHP
02:33 < Lefty4000> So did you know server side stuff but in other languages?
02:33 < airtanah_> TehShrike: i came from server languages, only havint touched client js reluctantly
02:34 < Lefty4000> lol you are answering all my questions before I even ask them
02:34 < TehShrike> I wrote PHP on the server, and C++ on Windows machines for years before that
02:34 < airtanah_> Lefty4000: i'm like the oracle from the matrix
02:34 < TehShrike> And horrible JavaScript on the client over that whole period pretty much
02:34 < Lefty4000> Kind of a specific question but its is necessary
02:34 < TehShrike> Last year I decided to learn how to write not-shitty JS
02:34 < holzp> ive been doing javascript since 1995!
02:34 < Lefty4000> How do you guys handle user log in and such?
02:34 < asdf12> so you are a woman airtanah_?
02:35 < TehShrike> Lefty4000: I'm writing a module to make it suck way less
02:35 < airtanah_> you've asked Lefty4000 age, you've asked me my sex, who are you gonna ask location?
02:35 < Lefty4000> I'm using windows azure and I think it'd be best to use their SQL database but I just don't know how to handle logging in
02:35 < TehShrike> Lefty4000: https://github.com/TehShrike/just-login
02:35 < TehShrike> Passwords suck
02:35 < asdf12> airtanah_ well you said you were like oracle from the matrix, oracle was a woman
02:36 < airtanah_> asdf12: lol
02:36 < airtanah_> asdf12: no comment
02:36 < holzp> a/s/l - age/sex/language?
02:36 < TehShrike> l = location
02:36 < Lefty4000> TehShrike: Heyyy that looks nice!  Not that I would really know though.  So this is to be its own seperate javascript file that is launched after the user presses submit when loggin in with the proper form and inputes?
02:36 < TehShrike> 79/both/space
02:36 < holzp> not in this convo :)
02:37 < TehShrike> Lefty4000: only bit there so far is the server-side bit - I mean to write a client-side component, so that you actually have all the tools to roll it out onto a site
02:37 < TehShrike> Lefty4000: but you should be able to write a bit of server-side code to do that bit right now, if you wanted
02:37 < TehShrike> I think the library is pretty reasonable as it exists at the moment
02:37 < asdf12> i watched a video of ryan giving a node talk at a php conference ha thats how i got introduced to node.js, i don't even use php, so i don't know why i checked that video out
02:37 < TehShrike> Check the example.js file for ideas
02:38 < TehShrike> asdf12: hah, that's awesome
02:38 < TehShrike> Ryan is a dope motherfucker
02:38 < airtanah_> asdf12: what did you use before?
02:38 < asdf12> nothing
02:43 <@Nexxy> \o/
02:45 <@Nexxy> asdf12, please don't single people out like that
02:45 < TehShrike> wat?
02:46 < TehShrike> Oh, asking airtanah_
02:46 <@Nexxy> that seemed a little awkward lol
02:46 < TehShrike> a bit maybe, yeah
02:47 < TehShrike> I'm trying to come up with a good joke to alleviate tension, but I can't think of anything that wouldn't be equally awkward
02:47 < TehShrike> So I guess I'll settle for yelling "BUTTS" really loud and then running away
02:47 <@Nexxy> LOL
02:48 <@Nexxy> TehShrike, well, go ahead
02:48 <@Nexxy> you have to actually emote it
02:51 < TehShrike> meh, about the best thing I was thinking of was something like "HEY [some regular this chatroom]... DO YOU HAVE GENITALS?" or something else that seemed like a "what sex are you" question without actually being too specific or intrusive, but even that seemed too stupid and ambiguous to be funny to all reasonable people, so I decided against it
02:51 < TehShrike> Unrelated: I'm engaged to a ridiculously pretty girl now.  Got engaged last week.  I'm super-excited.
02:52 < monroe> yooo
02:52 < TehShrike> This seems as appropriate a time to say something off-topic like that as possible, so there you go.
02:52 <@Nexxy> TehShrike, and I'm sure she has other great qualities as well!
02:52 < asdf12> congrats
02:52 < TehShrike> Oh man she's so awesome
02:52 <@Nexxy> congratulations :)
02:52 < Lefty4000> Aw did I miss a proposal or something?!
02:52 < TehShrike> We played Portal 2 co-op together a few days before I proposed <3
02:53 <@Nexxy> ad'awwable
02:53 < TehShrike> Also, she's way out of my league, but apparently nobody's told her yet
02:53 < evanmoran> portal 2 is filled with mystery and romance!
02:53 < evanmoran> =)
02:53 < airtanah_> i think if a couple can handle portal 2, they have good communication
02:54 < Lefty4000> haha agreed
02:54 < TehShrike> It was the first time playing Portal 2 for both of us
02:54 < TehShrike> We played for 3-4 hours
02:54 < TehShrike> err, Portal 2 co-op, that is
02:54 < TehShrike> I'd played the campaign
02:54 < airtanah_> did you finish?
02:54 < TehShrike> Not yet, but I really want to finish it with her :-D
02:54 < airtanah_> before you're married, this is your task
02:54 < monroe> where'd you meet her tehShrike?
02:55 < TehShrike> monroe: at our church denomination's presbytery :-D
02:55 < monroe> 0.o
02:56 < ChrisPartridge> TehShrike: you need two little portal robots atop your wedding cake ;) 
02:56 < TehShrike> ChrisPartridge: that would be awesome...
02:58 < ruby-newbie> lk
02:58 < ruby-newbie> k
02:59 < ruby-newbie> hi
02:59 < ruby-newbie> i'm korean
02:59 < ruby-newbie> 한국분 계시나요
02:59 < TehShrike> sup
02:59 < larzconwell> Hi there
03:00 < holzp> I proposed, we made promises, she never calledback
03:00 < TehShrike> :-(
03:00 < airtanah_> 안녕
03:00 < Zak> #node.js - giving dating advice!
03:00 < larzconwell> LOL 
03:01 < TehShrike> Marital tips welcome
03:01 < Zak> as a married person, all I can say is, if you're having troubles in the love department, go and find some good books/reading and improve.
03:01 < TehShrike> She's driving up here on valentine's day 8-|
03:01 < Zak> there's almost no skill in life that you can't read up on and improve
03:01 < TehShrike> I intend to
03:01 < TehShrike> I decide to be a software developer, I'm gonna try to be an awesome one
03:02 < TehShrike> I'm gonna be a husband, I'm gonna fucking work on being a good husband
03:02 < Zak> and regarding marriage and being a husband/wife... don't rush!
03:02 < Zak> there's plenty of time
03:03 < airtanah_> holzp: is that a node.js joke?
03:03 < Zak> airtanah_: i imagine so. a good one at that.
03:04 < airtanah_> Zak: cleverness level 11
03:04 < TehShrike> Zak: yeah, I want to take as long as is necessary, but no longer, if I can help it
03:04 <@Nexxy> a wizard is married precisely when he means to
03:04 < TehShrike> heehee
03:06 < owen1> is there issue with socket.io and vpn? my server is over vpn and i don't think the browser is able to emit events.
03:06 < holzp> ;)
03:07 < airtanah_> owen1: can you give more details on your setup?
03:09 < owen1> airtanah_:can u elaborate? what kind of details? centos on the server, macbook pro, chrome on the client
03:09 < owen1> socket.io@0.9.13
03:10 < airtanah_> owen1: "my server is over vpn" doesn't really give actual details. Yes it might work, but also maybe not. It depends on how you are connecting to your VPN, what proxies are present etc.
03:10 < ruby-newbie> 안녕하세요
03:10 < ruby-newbie> hi  there
03:11 < ruby-newbie> Is node.js better than scala + play2.0/lift?
03:11 < owen1> ruby-newbie: yes
03:11 < ruby-newbie> um
03:11 < TehShrike> my buzzword is better than your buzzword!
03:11  * TehShrike dances away
03:11 < ruby-newbie> if i want to make very complex community like stackoverflow
03:11 < ruby-newbie> then better?
03:12 < owen1> airtanah_: in order to connect i have a little icon on the top bar. when i open the network settings i see under the authentication of the vpn - 'Shared secret'. does it help?
03:12 < RLa> play 2.0 is full-scala?
03:13 < ruby-newbie> yes
03:13 < ruby-newbie> and compatible for java
03:13 < ruby-newbie> Is there a node library that do asynchronous task like synchronous task?
03:13 < airtanah_> owen1: if you aren't connected to the VPN properly, no it won't work
03:14 < airtanah_> owen1: socket.io is more likely to break from an intermediate proxy
03:14 < asdf12> ruby-newbie: the library is called async
03:14 < owen1> airtanah_: what does properly means? i can access any website of my employer while i am vpn.
03:14 < holzp> 난 한국어 몰라
03:14 < RLa> ruby-newbie, there is fibers
03:15 < ruby-newbie> 나도
03:15 < ruby-newbie> asdf12: thanks
03:16 < airtanah_> owen1: if you don't understand VPNs i'm not sure i can teach you here. but no, i don't think the VPN is the issue, assuming you can initially connect to the website
03:16 < owen1> airtanah_: got it. on local host it's working fine. i guess i'll have to try that tomorrow at the office.
03:19 < airtanah_> owen1: can you ping the server? or curl?
03:22 < ruby-newbie> 조선사람 있슴니카?
03:22 < owen1> airtanah_: i can ping, ssh and i deployed my node server on it. (the same server that is not getting the messages from my browser. let me add some more console.debug.
03:23 < Lorentz> That's a funny way of asking if there are any koreans here
03:23 < ruby-newbie> ?
03:23 < ruby-newbie> funny way?
03:23 < ruby-newbie> here are some koreans
03:23 < garrettwilkin> so i create my http server, and then pass that into socket.io
03:23 < Lorentz> koreans don't usually refer to themselves as josun-persons
03:24 < ruby-newbie> and They like node.js
03:24 < garrettwilkin> is it correct to say that its listening on the same port as the HTTP server?
03:24 < Lorentz> that's old fashioned
03:24 < ruby-newbie> oh
03:24 < ruby-newbie> it was my joke
03:24 < ruby-newbie> are you korean?
03:24 < Lorentz> Nope, australian
03:24 < ruby-newbie> hm//
03:24 < ruby-newbie> How do you know josun
03:25 < ruby-newbie> and
03:25 < ruby-newbie> How can you read korean
03:25 < ruby-newbie> Did you study korean
03:25 < ruby-newbie> ?
03:25 < Lorentz> you could say that, yes
03:25 < ruby-newbie> ya
03:26 < ruby-newbie> what is this, 안녕하세요
03:26 < Lorentz> it's a polite way of saying hello
03:26 < ruby-newbie> oh
03:26 < ruby-newbie> good job
03:26 < asdf12> thats a lot of characters just to say hello
03:26 < ruby-newbie> kkk
03:27 < Lorentz> asdf12: it's really closer to "hello, how well do you do" kind of politeness
03:27 < ruby-newbie> correct!
03:28 < TehShrike> Hello there sir, I hope you are doing well, I pray my speech does not over-inconvenience you now, how is your day going?
03:28 < ruby-newbie> hi Teh
03:28 < ruby-newbie> i'm good
03:28 < TehShrike> Excellent :-)
03:28 <@Nexxy> "I'd like to inconvenience you just the perfect amount"
03:29 < TehShrike> hah, thoughts like that were going through my mind pre-proposal
03:29 < TehShrike> "I don't want to throw your life plans off - no wait, I really do!"
03:29 <@Nexxy> A LOT!
03:30 < ruby-newbie> I use nodemon and live.js for responsive programming. Do you know other library for that?
03:30 < TehShrike> "would you mind dropping everything else and helping me try to kick ass over here for a while?"
03:38 < owen1> airtanah_: the first issue i noticed is on page load. there is a javascript GET ERROR - GET http://localhost:3000/socket.io/1/?t=1360553661670 
03:39 < owen1> airtanah_: i hit refresh a few times and than the it not accuring
03:39 < owen1> occuring
03:40 < owen1> airtanah_: actually it happens all the time. so that's maybe the reason why the client can't send anything to the server
03:40 < asdf12> well
03:40 < asdf12> that is the reason not maybe :P
03:41 < owen1> asdf12: it's not happening on my local host. only when i deploy that code to on of my employer's vms. it's behind vpn.
03:41 < owen1> (but i can ping/ssh/ and see the website)
03:42 < owen1> i am guessing it's this line -     <script src="/socket.io/socket.io.js"></script>
03:42 < asdf12> maybe your employer has some sort of filtering running on whatever port you are using socket.io on
03:42 < owen1> asdf12: interesting. let me see
03:44 < asdf12> if it helps any in figuring it out, you're able to download the js
03:44 < owen1> i have var io = require('socket.io').listen(app);  (app is a server - http.createServer)
03:45 < asdf12> you're able to do the handshake
03:45 < asdf12> but its failing on the transport
03:45 < owen1> asdf12: i am trying to figure out what port is it using.
03:45 < asdf12> its using the port that you gave it, the same one as the http server
03:45 < owen1> asdf12: i only define port 3000, but that's for my http server
03:46 < owen1> asdf12: oh. the same port? interesting
03:46 < owen1> so it's not a port issue, i can see the page in my browser
03:47 < asdf12> actually wait scratch that about passing the handshake part
03:47 < asdf12> wait no ha, i think yes you are passing the handshake part?
03:48 < owen1> asdf12: not sure i understand your question.
03:48 < asdf12> well just debug it
03:48 < owen1> i am passing my http server into the listen function
03:48 < asdf12> see whats going on with the connection
03:49 < asdf12> what browser are you using?
03:49 < owen1> asdf12: Version 26.0.1407.0 canary
03:50 < owen1> let me try FF. good idea
03:50 < asdf12> i dont user firefox, but in canary/chrome you can open up developer tools
03:50 < asdf12> and goto network tab
03:51 < owen1> asdf12: that's where i see a red line on the GET request for http://localhost:3000/socket.io/1/?t=1360553661670
03:52 < asdf12> and everything else before it is OK ?
03:53 < asdf12> and theres no requests to /socket.io/ after that failed get? 
03:53 < owen1> btw, FF shows the same error
03:53 < owen1> asdf12: before? yes. i see the html page with the css and everything
03:54 < asdf12> ok, click the error
03:54 < owen1> asdf12: maybe it has something to do with my web server? i don't use expres
03:54 < asdf12> you can see the request and response, and header info
03:54 < asdf12> whats the response status code?
03:55 < asdf12> or is it being timed out, etc.
03:55 < owen1> asdf12: there is only 'headers' tab with info. there is no 'preview' or 'response'
03:56 < asdf12> whats the status code?
03:56 < owen1> so the server didn't respond at all to this request?
03:56 < asdf12> it probably timed out then
03:56 < asdf12> it can't connect to socket.io server
03:56 < owen1> even though it's on the same port. nice
03:58 < asdf12> maybe your employer does network filtering on that port
03:58 < asdf12> try connecting to some site that uses socket.io to see if it does the same thing
03:59 < Voting> If I want to load some code into node then be able to use its read/eval/print loop to test my code, there is an easy way to do that, right? 
04:01 < owen1> asdf12: i think this is the first time using socket.io on any of our servers
04:01 < owen1> asdf12: is it possible to filter socket.io but allow http?
04:01 < owen1> (both on the same port)
04:02 < asdf12> yes
04:02 < owen1> is it for security purposes?
04:02 < asdf12> i dont know if they are or why they are doing it
04:03 < asdf12> im just saying its a possibility to explain why its timing out
04:05 < owen1> yeah. thanks a lot!
04:06 < echo> If you're behind a proxy, some proxies doesn't support websockets. However, I was under the impression socket.io falls back.
04:06 < asdf12> owen1: http://www.peepo.com/ that site uses socket.io try to see if it works there
04:06 < echo> >_< don't*
04:07 < asdf12> see if you get the same error i mean
04:11 < owen1> life is good - XHR finished loading: "http://www.peepo.com/socket.io/1/?t=1360555680726". 
04:11 < owen1> i am not behind proxy i guess.
04:11 < asdf12> wait so you are accessing that site behind the vpn ?
04:11 < asdf12> just like you are accessing your own site?
04:12 < owen1> asdf12: the site i am trying to access is behind a vpn. yes.
04:12 < asdf12> ok, so you need to do the same with peepo
04:12 < owen1> asdf12: it's my empoyer's vpn. 
04:12 < asdf12> access the peepo.com behind the vpn
04:13 < cloudbender> I like sublime, but the tab completions won't obey the disable in preferences
04:13 < owen1> asdf12: oh. not sure how to do that
04:13 < owen1> cloudbender: try vim. u'll fall in loe
04:13 < cloudbender> I hate tab completion
04:13 < owen1> love
04:14 < SomeoneWeird> hell no
04:14 < SomeoneWeird> ST2 is amazing
04:15 < cloudbender> I keep having to stop writing to fix the stupid insertions. I'm tired of reaching for the backspace key.
04:20 < cloudbender> when I play the piano, I don't want the piano telling me what notes I meant to strike
04:20 < Stephen> Ah, you say that now. But it depends on who is watching the performance.
04:21 < cloudbender> lol
04:23 < TehShrike> Man I hate mistweets
04:23 < TehShrike> Sorry isaacs
04:24 < Stephen> You know what I hate? Multi-form scripts which have the "Back" button as the default submit
04:24 < Stephen> You're liable to get punched for some shit like that
04:25 < Stephen> ... nothing new on badassjs.com
04:25 < Stephen> someone link me something javascript and interesting to read.
04:25 < TehShrike> I've got a lot of that
04:25 < TehShrike> What have you read so far?
04:26 < mscdex> echojs.com ? planetnodejs.com ?
04:26 < mscdex> dailyjs.com ?
04:26 < Stephen> ... I didn't read any eval() pron if that's what you're talking about
04:26 < Stephen> I mean, that shit is immoral
04:26 < Stephen> echojs...
04:26 < Stephen> hmmm
04:26 < Stephen> never heard that one
04:28 < TehShrike> Stephen: there's http://byfat.xxx/if-hemingway-wrote-javascript
04:29 < Stephen> Any of you have an opinion on the Harmony implementation of Modules?
04:29 < Stephen> Ah, and my 2 cents
04:30 < Stephen> I found an API to consolidate API's
04:32 < harbhub> how do i run two or more instances of javascript?
04:33 < harbhub> i.e. i want two functions to run at the same time
04:33 < harbhub> and use some processing power
04:36 < mscdex> Stephen: now you just need an API to merge that API with other consolidating APIs!
04:36 < mscdex> harbhub: child processes
04:37 < Stephen> Nah, now I need an API to host distributed web servers inside of client side image binaries
04:37 < harbhub> mscdex, can ni do that on the client side?
04:37 < Stephen> Just to cache everything in the tabs of lazy closers
04:38 < Lefty4000> turns out I didn't actually figure out the whole jsdom thing
04:38 < Stephen> :-/
04:38 < Stephen> This is getting recursive...
04:38 < Lefty4000> whatcha workino n?
04:38 < mscdex> harbhub: if the browser supports webworkers
04:39 < harbhub> mscdex,epic
04:39 < harbhub> thanks
04:39 < mscdex> harbhub: it's a different api though
04:39 < Stephen> but I'm glad you called back like you promised
04:39 < harbhub> api is irrelevant
04:39 < harbhub> capability is all i need to know
04:39 < Stephen> I'm just being silly
04:39 < mscdex> Lefty4000: what are you using jsdom for?
04:39 < Lefty4000> I'm trying to get the dom to use jQuery with
04:40 < mscdex> Lefty4000: does cheerio not work for you?
04:40 < Lefty4000> I found a thing called scraping that seemed promising
04:40 < Lefty4000> I haven't tried it, does it work alongside node?
04:40 < mscdex> Lefty4000: https://github.com/MatthewMueller/cheerio
04:41 < Lefty4000> WHOA!
04:41 < Lefty4000> WAIT! you just load the page in 
04:41 < Stephen> node is a fairly awesome for scraping
04:41 < Zak> sort of
04:42 < Zak> i wrote some stuff a while ago which allowed node to remote control chrome
04:42 < Zak> i gotta finish that and make it open source
04:42 < Lefty4000> mscdex: so I just load in the elements i want to control and then i can use it sort of like jQuery?  That thing looks sick!
04:42 < Stephen> Well, paired with a module like jQuery or the like would make quick work of any HTML document
04:42 < mscdex> Lefty4000: yeah pretty much
04:42 < Zak> yeah, provided you can get the webpage to run as though it runs inside a browser, then sure
04:42 < Stephen> there is a node-jQuery lib as well
04:43 < Lefty4000> mscdex: do you know what the limitations are?
04:43 < Zak> tbh, i prefer to rely on a node/browser bridge
04:43 < Zak> more reliable
04:43 < Stephen> No headless libs for you?
04:43 < mscdex> Lefty4000: just look at the readme, it tells you what methods it supports
04:44 < Zak> if you want it to run headlessly, just ise phantomjs ::P
04:44 < Zak> there's an existing nodejs<->phanomjs project out there
04:44 < Stephen> phantomjs is dope
04:48 < Lefty4000> mscdex: oh man thank you so much.  And it even has a video! This looks pertty awesome
04:48 < Zak> phantomjs has its own problems still though
04:48 < Zak> but it's pretty good for what it advertises to do
04:48 < Zak> then again, every browser has problems
04:48 < garrettwilkin> I'm reading from a stream, and i believe i setEncodng('ascii') properly on the server & the client
04:49 < garrettwilkin> but… when i try to print the data from the socket, I get [Object object] when I try to use .toString()
04:49 < garrettwilkin> seems odd to me
04:49 < cloudbender> is there a way to determine how many bytes an array occupies in memory ?
04:50 < Stephen> Eh, fuck me
04:50 < Stephen> West Nile virus is already coming back to Dallas
04:50 < Stephen> 3 cheers for well-organized and documented projects!
04:50 < Stephen> Hip hip
04:50 < Stephen> It's a Stream object
04:50 < Stephen> I believe you can do it with TypedArrays
04:50 < Stephen> but not standard arrays
04:50 < Stephen> cloudbender: Earnestly, if you find a way, msg me
04:50 < Stephen> I've been hunting such a thing for ages
04:54 < cloudbender> You can't use the process memory indicator becuase it floats too much
04:55 < Stephen> Hmm... well, I'm guessing one could recursively iterate over it using a custom function... things like strings and numbers should be fairly easy to calc
04:55 < Stephen> but I have no idea how one calcs the memory usage of a function object
04:55 < Stephen> Claiming it
04:56 < Stephen> 's simply the size of the string bits can't be right
04:57 < Lefty4000> oh man that cheerio looks great
04:58 < Stephen> be sure and bootstrap it with milk.js
04:58 < Stephen> It can be served with spoon.js
04:58 < Lefty4000> bootstrap? milk.js?
04:58 < Lefty4000> spoon.js?
04:58 < Lefty4000> oh
04:58 < Lefty4000> wow
04:58 < Stephen> yeah, they all sit on top of bowljs
04:58 < Lefty4000> I feel dumb I didn't get that right away now
04:58 < Stephen> I;m just messing with you
04:58 < Stephen> lol
04:58 < Lefty4000> lol
04:59 < Lefty4000> ugh I wanna work with it right now but I have to do my homework 
04:59 < Stephen> If you're looking for a low-end alternative, redSoloCup.js holds up just as well
04:59 < Lefty4000> stupid applied electromagnetics having a quiz tomorrow
05:00 < Lefty4000> lol, that is more of a weekend alternative for me
05:00 < Stephen> Sounds like an easy fix. Seems like the information should easily stick.
05:12 < cloudbender> well, my array.reverse takes 16 millisecons, and mykeygen takes 0 milliseconds, so I'm fairly certain the references are being copied, not the objects, which is what I want.
05:12  * cloudbender is crossing fingers
05:13 < cloudbender> now lets test the keysort ... (gulp)
05:14 < cloudbender> trolls be about
05:15 < cloudbender> who is frigg ?
05:21 < fg3> anybody using fibrous?
05:22 < crewmoss> Anyone using couchdb and interested in chatting?
05:24 < cloudbender> I will be using it, but I'm not there yet
05:24 < cloudbender> I've been watching it for a couple of years
05:25 < cloudbender> for what I need it sounds almost perfect
05:27  * cloudbender hears crickets chirping
05:31 < asdf12> someone is playing their music album 'nature sounds: cricket lullable' ?
05:32 < asdf12> lullaby**
05:35 < cloudbender> Are crickets lullable ? I'll check with MDN.
05:37 < cloudbender> I'm experimenting with a deep sort using values way down the tree in each object for comparison.
05:39 < asdf12> for what purpose
05:44 < cloudbender> well, I have an array of object references, and I need to sort it based on internal values of the objects.
05:44 < cloudbender> I'm just about to test it.
05:46 < nb-ben> cloudbender, exciting stuff :)
05:47 < cloudbender> lol it works I think, but here's the sort function ...
05:47 < cloudbender> return (a.name.val > b.name.val) ? 1 : (a.name.val < b.name.val) ? -1: 0;
05:47 < nb-ben> cloudbender, the cleverness is to add the elements to the array already sorted
05:48 < nb-ben> insert them in the position they should be in rather than resorting
05:48 < cloudbender> well, I'm testing with 100,000 objects, and in production it will be a few million, so, I'm open minded
05:48 < nb-ben> and then you can do reduction sorts
05:49 < nb-ben> you can search a million array in.. wait for it
05:50 < nb-ben> 20 iterations
05:50 < nb-ben> total
05:50 < asdf12> thats not a sort function!
05:50 < cloudbender> my function ?
05:50 < nb-ben> true asdf12 , that's how you calculate if it's before or after
05:51 < asdf12> yea cloud
05:51 < cloudbender> hmmm
05:51 < asdf12> thats an if statement 
05:51 < asdf12> wheres the sorting
05:51 < cloudbender> MDN says it is.  I assumed there was some mechanics built into the sort method
05:51 < cloudbender> I'll inspect the sorted array
05:51 < nb-ben> cloudbender, if there is, you should probably use it
05:52 < cloudbender> well, I'm trying to work with javascript default functionality to stayt near the browser core
05:52 < nb-ben> cloudbender, though node.js does not comply with the MDN
05:52 < cloudbender> May it always be so
05:53 < cloudbender> I think MDN needs to comply with node
05:53 < nb-ben> why? node.js does not work with the DOM
05:53 < asdf12> oh?
05:53 < asdf12> you're using that with array.sort ?
05:54 < cloudbender> yes
05:54 < asdf12> oh ok
05:54 < cloudbender> brb, then I'll check the results
05:56 < asdf12> i thought you were writing your own sorting
05:58 < cloudbender> I might if I have to
05:59 < cloudbender> I'm trying to use the tools which come 'in the kit' as much as possible
06:00 < asdf12> can you post sample data and expect result?
06:00 < asdf12> im bored
06:00 < asdf12> i want to try this out too
06:01 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
06:04 < cloudbender> sure
06:05 < cloudbender> wait ... one more test
06:06 < cloudbender> hmmm, it seems to be not working
06:07 < cloudbender> lemme see
06:09 < cloudbender> I need to fire up the debugger and step through it.  Could take awhile.
06:09 < cloudbender> I'll post a gist of the object structure
06:23 < cloudbender> asdf12 here is what I'm dinking with ... https://gist.github.com/cloudbender/4752969
06:23 < airtanah_> isaacs: nice airbnb talk
06:25 < cloudbender> brb
06:29 < asdf12> i dont get it
06:29 < asdf12> isn't it already sorted?
06:29 < asdf12> name.val is in order 0,1,2,3,4,5 etc.
06:30 < asdf12> because its just the index??
06:33 < cloudbender> Yes, it is in natural order
06:33 < cloudbender> for modeling purposes
06:34 < cloudbender> the 'numb' is left unchanged while I mess aroundged
06:34 < cloudbender> but I reverse it
06:34 < cloudbender> then try to sort it
06:34 < cloudbender> myobjects.reverse();
06:34 < cloudbender> myobjects.sort(blah);
06:37 < cloudbender> and I made the 'name' value unique for each name by strapping the 'numb' value to it also
06:37 < cloudbender> trans is short for transaction
06:38 < Lefty4000> cloudbender: Did you ever watch avatar: the last airbender series?]
06:38 < cloudbender> I know I'll get an ascii sort not an alpha sort, but that's ok for modeling
06:38 < cloudbender> No, I have not seen the movie
06:38 < asdf12> what
06:38 < asdf12> you're just sorting numbers?
06:38 < cloudbender> names
06:38 < echo> CloudBender: Like this? https://gist.github.com/jawsome/4752978 Maybe that can help?
06:38 < cloudbender> transaction names
06:38 < asdf12> but the name is just 'trans' + numbers
06:39 < cloudbender> ooo let's see
06:40 < echo> I think the creator function needs to purposefully make them out of order so you can see if anything is actually being sorted.
06:40 < cloudbender> echo I use a reverse on the array to throw it out of order first
06:41 < cloudbender> echo I see your sort, very clean, but I can;t see where it descends to the name.val
06:43 < cloudbender> Lefty4000 I was working in the wilderness the entire time that Avatar was in theatres, and now I can't rent the DVD anywhere.
06:43 < Lefty4000> cloudbender: I'm talking about the avatar animated series, the movie sucks but the series is on netflix now
06:44 < cloudbender> netflix is the invention of satan and his minions ( as an IT director who pays for bandwidth out of company funds)
06:46 < cloudbender> ^^^ that was supposed to be humourous.
06:46 < echo> cloudbender: I think the volume of output threw me off. Now I can see it's moving the values around: https://gist.github.com/jawsome/4752978
06:47 < cloudbender> yeah, you could just make c=100
06:48 < echo> Tried not to jack with the other stuff too much. I recently faced a sort nightmare and picked up some things. Thought I might atleast try to help ;)
06:49 < jamielinux> Howdy. I'm trying to package various nodejs modules for Fedora, getting this error when running the tests for node-stringprep:
06:49 < jamielinux> Error: Symbol node_stringprep_module not found.
06:49 < jamielinux> Any ideas?
06:50 < jamielinux> I'm really not sure where/how to debug.
06:52 < dazoe> so, the mongodb client for node.js has a few options that are confusing me. connectTimeoutMS, and socketTimeoutMS. according to http://mongodb.github.com/node-mongodb-native/driver-articles/mongoclient.html "For new implementations, the default should be to never timeout." Is that a good idea?
07:10 -!- mode/#Node.js [+o isaacbw] by ChanServ
07:24 < MiracleBlue> Heeey guys :D
07:24 < cloudbender> echo, asdf12, this seems to work .... https://gist.github.com/cloudbender/4752969
07:28 < cloudbender> but remeber it's an ascii sort
07:28 < cloudbender> I can tweak the comparator to pad the values, but it will slow it down I am sure.
07:53 < cloudbender> Great job node team and evryone. bravo.
07:53 < cloudbender> gnite
08:11 < echo> cloudbender: Sweet! Goodnight
08:25 -!- mode/#Node.js [+o isaacbw] by ChanServ
08:40 < [AD]Turbo> hola
08:40 < MiracleBlue> Heya
08:54 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
09:35 < amurdaca> morning all
09:37 -!- mode/#Node.js [+o isaacbw] by ChanServ
09:38 < amurdaca> in the mvc pattern where should i validate the user input? in the Controller right? then pass it to the model to query the db
09:39 < MiracleBlue> Morning!
09:46 < Sven_vB> is therre a variant of util.inherits() that also calls the superconstructor on the new object before calling my new constructor?
09:46 < harbhub> can an http server have ssl data transfer?
09:47 < Sven_vB> amurdaca, yes, validate it in the controller.
09:47 < tmpvar> hi
09:48 < Sven_vB> harbhub, see the "https" module
09:48 < SomeoneWeird> harbhub, doubtful
09:48 < SomeoneWeird> Sven_vB, you have todo it manually
09:51 < Sven_vB> ok. then what's the preferred way to work around JSLint complain about the dangling _ in .super_ (as aliased by util.inherits)? two /*jslint nome: */ directives look like too much clutter
09:52 < medikoo> Sven_vB: nomen option
10:08 < harbhub> is RC4 strong encryption?
10:10 < SomeoneWeird> no.
10:11 < SomeoneWeird> well, relative to everything else, no
10:14 < Pitel_IPEX> how can I encrease timeouts for `make test`. When testing on sloe hw (raspberry pi), a lot of tests just times out and fails.
10:18 < Ov3rTaf> hi all
10:18 < geNAZt> hi
10:20 <@Nexxy> Pitel_IPEX, with --timeout 
10:20 <@Nexxy> believe it or not
10:20 < Ov3rTaf> just installed node.js / socket.io ^^
10:20 < geNAZt> oha
10:20 < Ov3rTaf> seems great
10:21 < geNAZt> it is
10:24 < Ov3rTaf> can you point to any place where i can download exemples of web multiplayer games using nodejs ? :)
10:24 < Ov3rTaf> wanna make a game site for kids :)
10:25 < geNAZt> why is everyone building a game with nodejs :D:D
10:25 < Ov3rTaf> =)
10:25 < geNAZt> http://smus.com/multiplayer-html5-games-with-node/
10:25 < Ov3rTaf> ty
10:26 < geNAZt> well it handels code sharing ( which you should use ) and networking
10:26 < geNAZt> but the things like game loops and positioning you have to do by yourself
10:39 < jvanveen> hi
10:40 < jvanveen> anyone noticed that the lesscss parser doesnt always return a callback?
10:47 < MiracleBlue> jvanveen: I didn't even know you could give it one!
10:50 < jvanveen> MiracleBlue: i think it has to do with me reusing the same parser for multiple modules at the same time
10:50 -!- mode/#Node.js [+o isaacbw] by ChanServ
10:50 < jvanveen> probably better to use a parser instance per parsing unit 
10:51 < MiracleBlue> Mmm, sounds like that could be a problem.
10:54 < Ov3rTaf> is there an open source project working with nodejs/socket.io like joomla or wordpress to build community ?
10:55 < tmpvar> Ov3rTaf, what is joomla?
10:56 < MiracleBlue> Ov3rTaf: you mean like a Node.js CMS?
10:58 < Ov3rTaf> yes but more oriented community users (add to friends, login/register, lost pass...) than cms
10:59 < MiracleBlue> Ah right
11:08 < jvanveen> yup, that was the problem :)
11:08 < MiracleBlue> :D
11:12 < MiracleBlue> Darn wireless router
11:12 < MiracleBlue> I'm just a little bit too far away from it
11:13 < mscdex> turn on a fan to blow the signal your way
11:13 < MiracleBlue> Ah!  Why didn't I think of that?
11:13 < MiracleBlue> :P
11:13 < mscdex> :-D
11:14 < MiracleBlue> It just starts dropping packets every now and then
11:14 < MiracleBlue> Hmm
11:15 < MiracleBlue> Surely there must be some settings I can adjust to help reduce the packet loss
11:15 < geNAZt> append some aluminium to the antenna
11:15 < geNAZt> :D
11:15 < MiracleBlue> I'm not *that* far, I still get good signal.
11:15 < MiracleBlue> Heheh
11:15 < geNAZt> it works
11:15 < MiracleBlue> Really?
11:15 < geNAZt> yes
11:16 < MiracleBlue> Just some regular old aluminium foil?
11:16 < geNAZt> yes
11:16 < MiracleBlue> …I'm gonna try it.
11:16 < geNAZt> http://www.labnol.org/software/increase-wifi-signal-strength-with-aluminum/8064/
11:17 < MiracleBlue> :D
11:17 < MiracleBlue> Assuming I have some foil in the kitchen
11:18 < samholmes> I upgraded to express 3.x from 2.x, and now my RedisStore isn't working for some reason. :\
11:19 < samholmes> It seems as though sessionStore.get doesn't call the callback
11:23 < lpin> samholmes the only difference i can remember is that the secret has to be passed to cookieParser
11:23 < lmatteis> Hi guys
11:23 < lmatteis> i'm looking for a very bare minimal web framework
11:23 < geNAZt> connect ?
11:23 < lmatteis> something that let's me assign routes to GET/POST/etc calls
11:24 < geNAZt> expressjs
11:24 < geNAZt> or connect
11:24 < lmatteis> and then just gets out of my way
11:24 < samholmes> lpin: I've been doing then even in 2.x
11:24 < lmatteis> nah express contains too much extra baggage
11:24 < lpin> samholmes ok
11:24 < geNAZt> lmatteis: if u use it
11:24 < geNAZt> you dont have to use all of expressjs features
11:25 < samholmes> lpin: Here's my code http://pastebin.com/DPBWPdFL
11:25 < samholmes> part of it
11:25 < MiracleBlue> geNAZt: ok, foil added
11:25 < geNAZt> MiracleBlue: and its better ?
11:26 < MiracleBlue> Not sure yet
11:26 < MiracleBlue> I wrapped it around the top of one of the aerials
11:26 < MiracleBlue> And made it stand up like an extension
11:26 < geNAZt> yes
11:26 < geNAZt> i should be better now
11:26 < amurdaca> someone knows how to handle sessions with mongoose?
11:26 < MiracleBlue> With the shiny side facing outward
11:27 < MiracleBlue> geNAZt: :D thank you for the tip!
11:28 < geNAZt> np :D
11:28 < samholmes> lpin: Here's a method exposed to the client via dnode: http://pastebin.com/eEihj8ep
11:29 < lmatteis> geNAZt: nah still too much complications
11:29 < geNAZt> lmatteis: well its one of the easiest, fastest and simplest webframeworks for node
11:29 < lpin> samholmes the config seems legit
11:30 < samholmes> lpin: yet global.sessionStore.get appears to be a function just fine, but the callback never gets invoked
11:30 < MiracleBlue> I really like express
11:30 < MiracleBlue> It's great
11:31 < lpin> samholmes try to ask in #express could be more specific
11:32 < MiracleBlue> geNAZt: No drop outs so far
11:32 < geNAZt> yeah
11:33 < geNAZt> the good old aluminium trick :D i really like it
11:33 < MiracleBlue> :D
11:33 < MiracleBlue> Does it matter which side is facing inward?
11:33 < MiracleBlue> shiny side/dull side
11:33 < geNAZt> no
11:33 < MiracleBlue> Excellent
11:35 < lmatteis> geNAZt: interesting. is there documentation on how to build a 'middleware' for connect?
11:36 < geNAZt> its simple
11:36 < MiracleBlue> ABC, easy as 123
11:36 < geNAZt> you only have to write a function that takes three parameters, req => the current request, res => the current response, next => to tell connect that you cant do anything for this request
11:37 < geNAZt> once you have this function youu only push it into the connect middleware stack using: app.use(<yourfunction>);
11:37 < lmatteis> ah cool
11:37 < lmatteis> is this a standard?
11:37 < lmatteis> does express work the same?
11:37 < geNAZt> i dont think this pattern has a standard
11:38 < geNAZt> yes
11:38 < geNAZt> expressjs = connect + some really fancy middlewares
11:38 < lmatteis> ah cool
11:38 < lmatteis> ok
11:38 < kroshkamyau> when i pipe file to res, does it work like a streaming? e.g. if file doesn't have EOF it will stream it forever to client?
11:39 < lmatteis> i guess the standard is driven by the "being famous library" ? :)
11:39 < amurdaca> geNAZt do you know how to handle sessions with mongoose? i just have a connection btw
11:39 < MiracleBlue> Oooh
11:39 < MiracleBlue> Pardon the silly question
11:40 < MiracleBlue> But what would middlewares be particularly useful for?
11:40 < lmatteis> MiracleBlue: in what context?
11:41 < MiracleBlue> Sorry, perhaps I should just read more about what middlewares actually are, in the context of express
11:41 < gildean> in connect/express basically any function that handles the req/res cycle is a middleware
11:41 < geNAZt> middleware are handlers that try to fullfil the request
11:42 < MiracleBlue> Ahhh I see
11:42 < lmatteis> it's like a queue
11:42 < lmatteis> that gets called
11:42 < lmatteis> and you use .use() to add stuff to this queue
11:42 < geNAZt> nah
11:42 < geNAZt> not like a queue
11:42 < lmatteis> why no?
11:43 < gildean> also when you app.use a middleware, it gets called for all reqs, but you can also chain the middlewares in a particular route
11:43 < geNAZt> expressjs can completly step out of this
11:43 < lmatteis> or a list
11:43 < gildean> e.g. app.get('/', middleware1, middleware2, someOtherMiddleware);
11:43 < lmatteis> gildean: interesting, how?
11:43 < lmatteis> ah v cool
11:43 < lmatteis> does Connect support .get()?
11:44 < MiracleBlue> Ahh thank you guys :)
11:44 < gildean> lmatteis: the router parts are from express, but i think there's a router middleware for connect if for some reason you don't want to use express
11:44 < geNAZt> example: stack [a,b,c,d]; request 1: GET /; a says next b says next c ends the request d never gets called; request 2 POST /test; a says next b ends the request c and d never get called
11:44 < gildean> but if you need a router, you should just use express
11:44 < geNAZt> thats how connect uses middleware
11:45 < lmatteis> gildean: http://www.senchalabs.org/connect/ where is it?
11:45 < geNAZt> here is express: http://expressjs.com/
11:46 < gildean> lmatteis: just search npm for connect router or check connects github-wiki for a list of 3rd party middleware
11:46 < gildean> but as i said, if you want a router, you should just use express
11:47 < gildean> you can use express just the same as connect, it doesn't force you to enable any more middlewares
11:49 < samholmes> lpin: could it have something to do with the express.session middleware?
11:51 < lpin> samholmes dunno, maybe but i'm using it and works fine here
11:51 < samholmes> lpin: You're using the store?
11:52 < lpin> the session middleware backed by connect-redis
11:53 < SomeoneWeird> make sure you upgrade everything
11:53 < lpin> the only thing i'm aware of is that there is no support for "rolling" sessions
11:53 < lpin> or well not without some minor tweaks
11:53 -!- mode/#Node.js [+o isaacbw] by ChanServ
11:55 < samholmes> "rolling"?
11:56 < lpin> yeah, updating expire time every time
11:57 < samholmes> How do I do that?
11:57 < samholmes> And how does that have to do with the issue?
11:58 < lpin> i don't really thing that it's related to  your issue
11:58 < lpin> s/thing/think
11:58 < lpin> https://github.com/senchalabs/connect/issues/670
12:01 < amurdaca> what's the point in using process.nexttick here--> https://github.com/jaredhanson/passport-local/blob/master/examples/login/app.js ?
12:03 < pachet> 'for effect'
12:03 < pachet> he says he's using a 'baked in set of users'
12:03 < amurdaca> so?
12:03 < amurdaca> oh so if i use db i don't need that right?
12:03 < pachet> exactly
12:04 < pachet> he's just illustrating that that would be an async call in the real world
12:07 < MiracleBlue> Derp
12:11 < mscdex> derp.js
12:18 < MiracleBlue> require("herp");
12:21 < geNAZt> npm xmas :D
12:22 < amurdaca> what express.cookieparser does?!
12:22 < pachet> parses cookies
12:22 < NuZZ> parses bananas
12:23 < amurdaca> lol
12:24 < amurdaca> how can i set a session to test if connet-mongo is working?
12:24 < amurdaca> if i do db.sessions.find() in mongo shell it's empy
12:24 < amurdaca> *empty
12:34 < \bgeNAZt> test
12:34 < \bgeNAZt> :(
12:38 < foobar321> Hi. I'm looking for an example of var myStream = new Stream.Readable(); (from Node 0.9.x) I want to put record into a file whenever I receive result from database callback. Should I use myStream.push(oneRow); or emit event? Also what should I provide as _read ?  I've assumed return '';
12:39 < foobar321> Is there any more examples of this new streams? I really want to know what is a proper way
12:43 < bnoordhuis> foobar321: http://blog.nodejs.org/2012/12/20/streams2/ ?
12:43 < RSA_> hi! I have some json data which I wanna stream on a website. what is the best way to do it? shall be a simple list.
12:45 < foobar321> bnoordhuis: Do you see any single word about push on the site you pointed out?
12:46 < bnoordhuis> foobar321: was that a snarky remark or ?
12:47 < foobar321> bnoordhuis: dude I don't usually ask question if I can find answer in the RTFM
12:47 < bnoordhuis> well, good luck to you then
12:49 < MiracleBlue> Yep still getting dropouts
12:50 < MiracleBlue> geNAZt: Still getting dropouts :(
12:50 < geNAZt> hmmmm thats bad
12:51 < geNAZt> next tip: shit on your router :D (dont do it) :D
12:51 < MiracleBlue> Hahaha
12:51 < MiracleBlue> Oh well
12:51 < MiracleBlue> I'll live with it :)
12:51 < geNAZt> one question about streams2
12:52 < geNAZt> if i read data from a readable stream
12:52 < geNAZt> and the internal buffer falls under lowWaterMark
12:52 < geNAZt> is the readable event emitted after the buffer has filled up to lowWaterMark again ?
12:52 < foobar321> oh henazt maybe you will know
12:53 < foobar321> I'm looking for an example of var myStream = new Stream.Readable(); (from Node 0.9.x) I want to put record into a file whenever I receive result from database callback. Should I use myStream.push(oneRow); or emit event? Also what should I provide as _read ?  I've assumed return '';
12:53  * geNAZt knows nothing *hides*
12:53 < geNAZt> :D
12:53 < geNAZt> well streams "only" are interfaces
12:53 < geNAZt> the logic behind them is up to you
12:54 < foobar321> Yes. I hace to provide some other layer (that is compression one) readableStream. But content of this stream will be created during many callbacks from database
12:55 < geNAZt> you dont know how to put data into a readable stream right ?
12:55 < foobar321> Yes. That is im not sure :/ Because by default my _read will be just return ''; Until I've got sth from database
12:56 < foobar321> I would like someone to confirm or deny that :/
12:56 < geNAZt> well it is wrong
12:56 < geNAZt> if you dont have anything you shouldnt read
12:56 < geNAZt> if there is something to read emit readable event
12:56 < geNAZt> (which the stream2 does for you)
12:57 < foobar321> So what should I have inside my _read handler? Some if (alreadyGotresult) return thatResult; eslse return ''; ?
12:58 < geNAZt> no
12:58 < geNAZt> _read never returns something
12:58 < geNAZt> i assume that streams arent the right thing to do for you
12:59 < geNAZt> streams2 can work with buffers or fds
12:59 < geNAZt> something you can read bytes from
12:59 < foobar321> Ok the point is that I have to compress results from database
13:00 < foobar321> Now the compress clas requires readStream and database library calls some callback function
13:00 < geNAZt> well then you need a sort of buffer that holds all data from the database
13:00 < geNAZt> and the readstream to read from this buffer
13:00 < foobar321> So I need to glue those two by adding readableStream, right? Or please tell me about better design
13:00 < MiracleBlue> Derp
13:00 < geNAZt> duplex streams
13:01 < foobar321> geNAZt: No I can't buffer all data in the buffer. It's too big
13:01 < geNAZt> then you cant stream it :D
13:01 <@Nexxy> lolwtf
13:01 < geNAZt> if its bigger then highWaterMark it will say: i am full go wait
13:01 < foobar321> genatz: yes I can :) I can hold only one record from the database and pass it to the compress one
13:02 < geNAZt> if you get one database callback and the readablestream is full (cause the compression is slower then the db)
13:02 < geNAZt> the db has to wait till there is place in the stream
13:02 < geNAZt> but you dont want to store the buffer since its to big ?
13:02 < foobar321> ah. that's good point
13:02 < geNAZt> you must store the buffer
13:03 < foobar321> I have to rethink this design :/
13:03 < geNAZt> or you increase the buffer highWaterMark to a number youll never reach
13:03 < MiracleBlue> It is imperative that you store the buffer.  The fate of the galaxy depends on it!
13:03 < MI6> joyent/node: Ben Noordhuis master * d5a5ae3 : test: fix common.mustCall  Don't run the 'has function been called?' chec - http://git.io/WJwzqg
13:04 < geNAZt> well streams are nice if both ends can wait if the stream is full
13:04 < geNAZt> its like a bus
13:05 < foobar321> SO maybe duplex stream will do
13:05 < amurdaca> in express is the model responsible to render the view or the routes?
13:05 < geNAZt> well duplex has the same 
13:05 < geNAZt> i will give you a simple example
13:05 < User0815> Anybody here from germany?
13:05 < geNAZt> ja ich
13:05 <@Nexxy> geNAZt, is it just me or are you making the argument that streams only work when you can buffer everything?
13:05 < geNAZt> you have busstop a
13:05 < geNAZt> and busstop b
13:05 < User0815> Super
13:05 < geNAZt> a want to travel with 150 people
13:05 < geNAZt> the bus only has 30 seats
13:06 < geNAZt> so on busstop a 30 people can enter
13:06 < geNAZt> the bus drives to b
13:06 < geNAZt> and loads all of
13:06 < geNAZt> its empty now so it can handle another 30 people
13:06 < User0815> Ich habe einen kleinen Job und suche jemanden, der sich mit node.js auskennt.
13:06 <@Nexxy> except the bus doesn't actually go anywhere, and is actually just a big pipe
13:06 < geNAZt> but the people on busstop a must wait till its empty on b
13:06 <@Nexxy> and the people never sit down
13:06 <@Nexxy> they just shuffle through the pipe as fast as they can fit
13:07 < geNAZt> yes its a "bad" example
13:07 < geNAZt> since traveling means you have delay
13:07 < geNAZt> which stream dont have
13:07 < geNAZt> ja dann pm mich
13:07 <@Nexxy> the internet is not a big truck, geNAZt 
13:07 <@Nexxy> it's a series of tubes
13:07 < geNAZt> i am not talking about the internet
13:07 <@Nexxy> yes you are
13:08 -!- mode/#Node.js [+o isaacbw] by ChanServ
13:08 < geNAZt> i try to give an example who people understand
13:08 < mscdex> the internet is a series of greyhound buses
13:08 < geNAZt> even if they dont know how internet works
13:08 < User0815> Ich bin totaler Noob, ich weiß nicht wie man eine PM hier in so einem Chat schreibt.
13:08 <@Nexxy> Ted Stevens knows way more about the internet than the rest of us
13:08 < geNAZt> klick auf meinen namen
13:08 < jamielinux> Does anyone know how to implement this test without process.nextTick? : https://github.com/astro/node-stringprep/blob/master/leakcheck.js
13:08 < jamielinux> I'd be very grateful for a pointer or two
13:08 < mscdex> Es ist besser, in englischer Sprache hier zu schreiben.
13:09 < geNAZt> ja echt ?
13:09 < geNAZt> oO
13:09 < geNAZt> well internet / tcp is not like tube
13:09 < mscdex> tcp is a stream though :S
13:09 <@Nexxy> http://en.wikipedia.org/wiki/Series_of_tubes#Partial_text_of_Stevens.27s_comments
13:09 < geNAZt> but how can it happen that package a arrives before b
13:09 < geNAZt> in tcp
13:10 < pachet> b before a? :[
13:10 < geNAZt> yes in tcp there is no package order
13:10 <@Nexxy> except after q
13:11 < geNAZt> if you send from a server a then b => pipe => client can be b before a
13:11 < mscdex> jamielinux: why is it doing nextTick in the first place?
13:11 < pachet> what mscdex said
13:12 < mscdex> tcp is ordered :S
13:12 < jamielinux> mscdex: No idea. It's not my test, I'm just packaging deps for buddycloud for Fedora/RHEL. Also no idea why I decided to do this as I have basically no experience with javascript but hey, nobody else was packaging :)
13:12 < geNAZt> ah sorry
13:13 < mscdex> jamielinux: post an issue about it or send them a pull request with it removed
13:13 < geNAZt> i mixed udp and tcp -_-
13:13 < g0z> they can be reassembled if out of order w/ tcp
13:13 < mscdex> :-D
13:13 < g0z> udp nope
13:13 < pachet> geNAZt: yeah, i was trying to understand what you were talking about ;p
13:14 < jamielinux> mscdex: Ok sure :)
13:17 < MiracleBlue> :( all my friends have gone to bed.  this is the trouble with being a nightowl.
13:18 <@Nexxy> MiracleBlue, you just need better friends
13:18 < geNAZt> apply some aluminium on your head and jump through your house :D
13:18 < MiracleBlue> ^ :D
13:19 < kburton> anyone else have issues iteration with jade templating? My issue is I have a UL, then each, and then LI, but the LI is being rendered outside the UL.
13:19 < MiracleBlue> Nexxy: I need more owl friends
13:19 < _ior> oh god i love the crazy future we live in: http://www.wired.com/design/2013/02/crazyflie-nano/
13:20 <@Nexxy> MiracleBlue, http://www.youtube.com/watch?v=M8el_P4yvfc ?
13:21 < MiracleBlue> Nexxy: That's brilliant :D
13:22 <@Nexxy> _ior, flight time is really low :<
13:22 < gildean> kburton: you need to check your indentation
13:22 < _ior> i blame batteries
13:22 <@Nexxy> we need better batteries to be in the future
13:22 <@Nexxy> lol yeah
13:23 < _ior> batteries are so far behind what we need them to be
13:23 < _ior> i bet it's the nickel-cadmium lobby holding us back
13:23 < kburton> gildean: http://pastebin.com/bQgDQ2Ew standard 2 spaces
13:23 < MiracleBlue> I keep hearing news stories of battery technology improvements
13:23 < MiracleBlue> Haven't seen any turn into actual products yet :(
13:24 <@Nexxy> I was happy to hear about revolt
13:24 <@Nexxy> but they went bankrupt
13:24 < MiracleBlue> aw :(
13:24 < _ior> the problem with batteries is that we're still working with tech from several hundred years ago
13:25 < _ior> i mean, i hear the next step beyond lithium-ion is to use metals like molybdenum which are sufficiently similar to lithium to essentially replace it, but that instead of having just one valence electron have 2 or 3 valence electrons
13:26 < _ior> but as much as that might improve the battery situation, it's still the same tech
13:26 <@Nexxy> save us tesla
13:27 <@Nexxy> zinc air seemed pretty promising from what little I read about it
13:27 < _ior> find anode, find cathode, mix in electrolyte, enjoy temporary power
13:27 <@Nexxy> rechargable zinc air
13:27 < _ior> not heard of that one
13:27 <@Nexxy> oxidising zinc
13:27 < _ior> i remember one not long ago that was about tyhe energy stored in super-compressed diamond
13:28 < _ior> the problem was extracting the energy in a controlled, stepwise manner XD
13:28 <@Nexxy> moderation is always the hard part
13:29 < amurdaca> how can i pass the result data to my controllers in express?
13:29 < amurdaca> return data; doesn't work
13:29 <@Nexxy> oh! I made a meme for this one!
13:30 <@Nexxy> http://i.qkme.me/3sw2kk.jpg
13:30 < MiracleBlue> :D
13:30 < MiracleBlue> Perfect
13:30 < amurdaca> ahahahhah the last pic is the face i have now ajajajaj
13:30 < amurdaca> ahahah
13:30 <@Nexxy> amurdaca, lol yeah
13:31 <@Nexxy> amurdaca, gist some code
13:31 < amurdaca> sure!
13:32 < amurdaca> Nexxy --> https://gist.github.com/amurdaca/4754417
13:33 < amurdaca> basically i would to get posts list from mongodb, return it to the index.js routes and then render my view with that data
13:35 <@Nexxy> amurdaca, so I Think all you're missing is using res.render and passing the posts to res.render
13:36 < amurdaca> i mean i call post.lista with req, res in my controller
13:36 < amurdaca> then?
13:36 < amurdaca> how my model return the data?
13:36 <@Nexxy> when you console.log, you see the posts?
13:36 < amurdaca> in the post.js sure
13:37 < amurdaca> but not in user controller
13:37 < gildean> kburton: that code is working fine here
13:37 < amurdaca> yeah i know it's working
13:37 < kburton> weird.
13:37 <@Nexxy> amurdaca, ohh I see what you're saying
13:37 < amurdaca> but i want the Controller to render the view
13:37 < amurdaca> not the model
13:38 < amurdaca> am i breaking some MVC stuff doing this?
13:38 < amurdaca> i don't think so
13:38 < amurdaca> so i'm just looking to pass the model data back to the controller and the controller will do res.render(data)
13:39 < amurdaca> if i do res.send(post.lista()) it doesn't work
13:39 <@Nexxy> amurdaca, someone else may have a better solution, but I would write the lista function to simply callback with data rather than calling res.send on it directly
13:40 <@Nexxy> then in users you could do post.lista(function(posts) { // do stuff w/ posts here })
13:40 < amurdaca> can you gist this Nexxy?
13:40 < amurdaca> yes is basically what i want to do
13:41 < amurdaca> if you can modify my gist i'll be glad
13:41 < dominicasley> any good books on socket.io
13:41 < substack> dominicasley: why would you need a book?
13:42 < substack> if socket.io is big enough that people have written books about it then cripes
13:42 < dominicasley> because i like books
13:42 < dominicasley> not so much to teach node
13:42 < dominicasley> sockets*
13:42 < dominicasley> more about theory stuff
13:42 < MiracleBlue> There's lots of great articles that you could find and print out :)
13:42 < MiracleBlue> If you really wanted.
13:43 < dominicasley> okay pt2
13:43 < dominicasley> any good websites for sockets?
13:43 < shapeshed> dominicasley: libs like socket.io mean you don't need to worry about understanding transports
13:43 < substack> "for sockets" what
13:44 < Vill> God, why? My question to the community is: Why the heck there are hundreds of NodeJS packages, each one to help developing the application, but If a newbie user (like me), wants to start somewhere, he is flooded with the "npm useful modules", it's like trying to ski under an avalanche...
13:44 < shapeshed> dominicasley: socket.io is a combination of transports
13:44 < shapeshed> websockets, xhr-polling etc
13:44 < _ior> vill, worse than that, half of the packages are unmaintained, and the other half are dependent on everything and the kitchen sync
13:44 < Vill> That's what i mean!
13:44 < _ior> er, kitchen sink*
13:45 < substack> Vill: don't use giant libraries
13:45 < _ior> best way to learn? roll your own
13:45 <@Nexxy> amurdaca, https://gist.github.com/nexxy/4754462
13:45 <@Nexxy> this might be more along the lines of what oyu're wanting
13:45 < dominicasley> okay
13:45 < substack> figure out what you need and then find the tiniest thing that solves that one narrow problem well
13:45 < dominicasley> well socket.io doesn't make too much sense to me yet
13:46 < substack> just dismiss any library that can't explain itself in the first 15 seconds of skimming the readme
13:46 < Vill> substack, giant libs, you mean like Express?
13:46 <@Nexxy> _ior, I would dispute your claim about dependencies
13:46 < substack> Vill: express isn't so bad but it's too big for me
13:46 < shapeshed> dominicasley: it is basically websockets with fallbacks for browsers that don't support websockets
13:47 < lmatteis> guys is there a virtually 'free to start' node hosting thing?
13:47 < amurdaca> Nexxy thanks a lot, now i hae learnt how to return data in node thanks again :)
13:47 < _ior> nexxy, you're probably right to, since i'm still only on my first node project, but i recently took a look at packages to serve static content, and half of them require i install a command line options package first
13:47 < _ior> wtf?
13:47 <@Nexxy> _ior, which?
13:47 < _ior> um, node-static, for instance
13:48 <@Nexxy> npm should be managing all of your dependencies for you
13:48 < substack> _ior: what are you doing, npm handles all of that
13:48 <@Nexxy> optimist and colors
13:48 < substack> if you're not using npm you're doing everything so completely wrong
13:48 <@Nexxy> 2 dependencies
13:48 <@Nexxy> that's pretty bloated, I can see what you're saying
13:48 <@Nexxy> lol
13:48 < substack> I wouldn't care if it were 20
13:48 < _ior> no, you misunderstand. of course i was doing npm. point is i don't want to bloat my software stack unnecessarily
13:48 < _ior> don't need optimist. nothing command line that i'm doing.
13:48 <@Nexxy> but
13:48 <@Nexxy> you're
13:48 <@Nexxy> complaining
13:48 <@Nexxy> about 2 modules
13:48 < substack> _ior: who cares
13:48 <@Nexxy> lol
13:48 < _ior> :D
13:49 < substack> how will this "bloat" you think matters affect anything important?
13:49 < mscdex> node.js rules!
13:49 < Vill> damn, let me explain my problem: Can you guys recommend me a stable and useful development environment? I was using Jade and Stylus with Express, then I've found backbone.js and realized that there is something like node-blade, which combines Jade with Backbone, crap, should I instal node-blade? which alternative is best (I don't ask if there is any, because I assume there are hundreds...)?
13:49 < _ior> it will matter because i will look at it down the road and say "wtf is this package doing here" and i will have no idea how to answer that question
13:49 < lmatteis> substack: what would you recommend for hosting a node web app
13:49 < gildean> _ior: if that's a problem, fork the repo, rip the code and create a "lite" version of the module
13:49 < substack> Vill: I use http.createServer(), ecstatic, and browserify
13:50 <@Nexxy> _ior, optimist and colors are both packages that take about 30 seconds to grok
13:50 < _ior> gildean, that's what i ended up doing, but without the forking
13:50 <@Nexxy> you should do your work and pay off technical debt
13:50 < substack> _ior: you don't even need to care what optimist and colors do
13:50 < substack> _ior: why the fuck would you need to understand every single dependency in your lib?
13:50 < substack> the point of modules is that they are self-contained black boxes of functionality
13:50 < substack> pigs go in and sausages come out and you shouldn't ask questions
13:51 < _ior> i'm not willing to set my "that's magic" line that high?
13:51 < _ior> :)
13:51 < gildean> substack: there are people who "never run any code they haven't read themselves"
13:51 < _ior> gildean, i certainly don't claim to be that. i wouldn't even be running an OS if that were true
13:51 < _ior> much less ircii!
13:51 < substack> gildean: what is your point?
13:51 < gildean> substack: just saying
13:52 < substack> gildean: if you're not going to defend that position I don't see how it's relevant
13:52 <@Nexxy> _ior, if your definition of "high" is two small packages with >500 lines each...
13:52 < substack> people do a lot of silly, pointless things
13:52 < Vill> gildean, nice to see you back, can I ask for some advice?
13:52 < gildean> no i think it's total bullshit, just saying there are really smart people saying that
13:52 < mscdex> like use coffeescript
13:52 < mscdex> :-D
13:52 < gildean> Vill: you can always ask
13:53 < substack> gildean: did you know that node has tens of thousands of lines of javascript and c++? If you're using node at all those are all implicit dependencies.
13:53 <@Nexxy> _ior, I'd hate to see how you react to something like .NET development
13:53 < substack> better go read all the source in node
13:53 < _ior> nexxy, it was just an example. maybe a poor one, but the one i most recently encountered. i saw no reason whatsoever that node-static should require colors or optimist
13:53 <@Nexxy> if you're actually complaining over >1000 lines of code
13:53 < substack> whoops I mean _ior sorry gildean 
13:53 <@Nexxy> <1000&
13:53 < gildean> substack: np
13:53 < substack> _ior: plus your operating system has tons of libraries that node depends on
13:54 < substack> and if you use a shell then you're depending on even more libraries to run your programs
13:54 <@Nexxy> _ior, but it's explained in the README; https://github.com/cloudhead/node-static#command-line-interface
13:54 < _ior> sure, i read that too
13:54 < substack> _ior: I think your objection to modularity is misplaced and will make you much less productive.
13:55 < _ior> i'm not arguing against modularity
13:55 < _ior> not in the slightest!
13:55 < substack> those packages have dependencies
13:55 < substack> even if they were superfluous it's so unimportant
13:56 < _ior> and nexxy, i avoided .net like the plague, having seen into the dark depths of enterprise java :)
13:56 < spion> in npm it matters much less that packages have sub-dependencies
13:57 < eighty4> haven't really followed the entire discussion but one point here is if you trust in the author right? What kind of checks is done on npm code? If at all?
13:57 < spion> those sub-dependencies are not visible to your project unless you explicitly install them
13:57 < substack> _ior: you are wise be prudent about dependencies on those platforms but in node dependencies are very self-contained
13:57 <@Nexxy> eighty4, the community reviews code on a continuous basis
13:57 < eighty4> have there been any cases where npm code have been directly harmful?
13:57 <@Nexxy> eighty4, if you count coffeescript, yes
13:57 <@Nexxy> a LOT
13:57 < g0z> (sick burn)
13:58 < MiracleBlue> Boom
13:58 < eighty4> Nexxy: so at least looking at the npm modules you use might be a good thing?
13:58 <@Nexxy> http://i.qkme.me/3swi8u.jpg
13:58 < substack> eighty4: you're trusting that people are mostly good and that lots of eyeballs in the aggregate will find issues before you personally do
13:58 < SomeoneWeird> hahahahaha
13:58 <@Nexxy> eighty4, generally speaking, sure
13:58 < SomeoneWeird> Nexxy++
13:58 < _ior> substack, i'm sure you're right, and everything i've looked at confirms that. but i still dont' see why i need colors in my console.log for a package that serves static content and doesn't have any console.log() calls...
13:58 < hipsterslapfight> re. front-end development: does anybody have a better idea for developing at multiple screen sizes other than binding and unbinding handlers depending on the screen size?
13:59 < eighty4> Nexxy, substack right. But trusting in that other do your job might be dangerous. Is everyone does that noone will check the code :)
13:59 < substack> _ior: the reason why is that some packages like node-static have command-line scripts in addition to library code
13:59 < _ior> sure, sure, i get it for commandline
13:59 <@Nexxy> _ior, https://github.com/cloudhead/node-static/blob/master/bin/cli.js#L103
13:59 < _ior> not my use-case, but i get it
14:00 < _ior> i asked about colouring console.log calls :)
14:00 < AAA_awright> 44k lines of code to be exact
14:00 < _ior> oh, sorry, nexxy wins
14:00 <@Nexxy> > doesn't have any console.log calls
14:00 < _ior> she found a console.log() call
14:00 < AAA_awright> 45k more like
14:00 <@Nexxy> O RLY
14:00 <@Nexxy> 3 of them actually
14:00 < AAA_awright> But who's counting
14:00 <@Nexxy> :P
14:01 < _ior> nexxy, now find me one that uses the color package
14:01 < _ior> that was a forced install dependency
14:01 <@Nexxy> _ior, https://github.com/cloudhead/node-static/blob/master/bin/cli.js#L103
14:01 <@Nexxy> next? ;o
14:01 <@Nexxy> > line.red.bold
14:01 <@Nexxy> > line.red
14:01 < AAA_awright> D:
14:02 < _ior> are we looking at the same line 103?
14:02 < spion> 95, 97 use log() which uses colors
14:02 <@Nexxy> sorry
14:02 <@Nexxy> old copy
14:02 <@Nexxy> https://github.com/cloudhead/node-static/blob/master/bin/cli.js#L49-L59
14:02 < _ior> okay, colors
14:02 < _ior> great
14:02 <@Nexxy> I'm glad we had this talk!
14:02 < _ior> me too
14:02 < _ior> i still don't need colors :)
14:03 <@Nexxy> better fork everything in existence
14:03 < _ior> yup~
14:03 <@Nexxy> and pare it down
14:03 <@Nexxy> to absolute bare bones
14:03 <@Nexxy> to save yourself
14:03 <@Nexxy> that kb or two
14:03 <@Nexxy> of text
14:03 < hipsterslapfight> getting rid of 20 or so lines for colors in each code
14:03 <@Nexxy> cuz
14:03 <@Nexxy> time is worth nothing
14:03 <@Nexxy> :D
14:03 < _ior> shrug, i'm not paid by the task
14:03 < _ior> :D
14:03 < spion> _ior, you would have the same problem if colors was a  bundled module
14:03 <@Nexxy> you only have so much time here on earth
14:04 <@Nexxy> I'm pretty sure you can find a better way to spend it
14:04 <@Nexxy> than performing needless surgery
14:04 <@Nexxy> on npm modules
14:04 < _ior> spion, you're probably right :)
14:04 < spion> (except that you wouldn't even know about it, because you wouldn't notice it when installing)
14:04 <@Nexxy> I'm going to go to the store and buy a new dvd player
14:04 < spion> i do think that command-line variants of the modules should be separate though.
14:04 <@Nexxy> and cut off all of the buttons on it
14:05 <@Nexxy> since I will only ever use the remote
14:05 < spion> (even moar modules!)
14:07 <@Nexxy> I feel so bad for keanu
14:07 < Vill> Nexxy, i ROTFLed so hard for that picture... http://i.qkme.me/3swi8u.jpg
14:07 <@Nexxy> Vill, :D
14:08 <@Nexxy> it was my second most popular from my meme experiment so far
14:08 < Sendoushi> hey guys. anyone uses express?
14:08 <@Nexxy> Sendoushi, yeah
14:08 < Sendoushi> i'm having a problem with GET / under express
14:08 < Sendoushi> http://expressjs.com/guide.html just made that first example
14:08 < Sendoushi> run node project.js
14:08 < substack> Nexxy: browser-bundle + module-deps unix power combo: https://gist.github.com/substack/4754581
14:09 < Sendoushi> now when i go into the ip : port it gives me CANNOT GET /
14:09 < _ior> so, nexxy, what's wrong about coffeescript?
14:10 < substack> the new browserify is going to be so unixy
14:10 <@Nexxy> _ior, you just got through complaining about colors and optimist
14:10 < substack> SO UNIX
14:10 <@Nexxy> _ior, take a guess
14:10 < aandy> bananas?
14:10 <@Nexxy> substack, mind blown
14:10 < _ior> nexxy, too many dependencies? :3
14:11 < Vill> Sendouchi, do you have a file called "/hello.txt" created in your main directory? (the same as server.js)
14:11 < Vill> project.js*
14:11 <@Nexxy> _ior, something like that :P
14:12 < _ior> i'm not being sarcastic here, i'm really asking
14:12 < Sendoushi> Vill: created it after getting error and still an error
14:12 < _ior> you've heard me say a number of times i new to js/node/etc
14:12 < _ior> s/i/i'm/
14:13 <@Nexxy> _ior, I was just trying to be subtle :D
14:13 < Vill> ok, Sendoushi so now put it in the "/public/hello.txt" directory
14:13 < SomeoneWeird> substack, how so?
14:13 < Sendoushi> public? hm
14:13 <@Nexxy> I've always wondered
14:13 <@Nexxy> if you're substack... whatever happened to pubstack?
14:14 < SomeoneWeird> lol.
14:14 < Sendoushi> Vill: then i should create the public folder also right?
14:14 < lmatteis> guys
14:14 < lmatteis> i need a free (to start at least) node.js hosting 
14:15 < lmatteis> any advice?
14:15 <@Nexxy> nodejitsu
14:15 < SomeoneWeird> appfog
14:15 < Vill> Sendoushi, wait a second
14:15 <@Nexxy> openshift
14:15 <@Nexxy> azure has some free stuff I think
14:15 <@Nexxy> nodester
14:15 <@Nexxy> heroku
14:15 <@Nexxy> (lol, heroku)
14:16 < Sendoushi> ok then
14:21 < lmatteis> SomeoneWeird: this is nice, but is there a free hosting that allows a GIT push to deploy my code?
14:22 < SomeoneWeird> nodejitsu
14:24 < spion> also heroku
14:27 < fg3> help --> http://goo.gl/8ZfA8
14:27 < geNAZt> dont use coffeescript
14:27 < geNAZt> :D
14:28 < amurdaca> what express.logger('dev') means? can i change dev to somthing else i suppose but express api reference doesn't talk about possible values
14:28 < AAA_awright> ^^
14:28 < Frippe> geNAZt +1
14:29 < AAA_awright> lmatteis: Generally pushes shouldn't trigger things like code updates and such, but it's possible. Also, Git isn't an acronym.
14:30 < fg3> geNAZt: js -> http://goo.gl/Gj5pH
14:31 < geNAZt> this case you cant do in js
14:31 <@Nexxy> lmatteis, nodejitsu has what is essentially that
14:31 <@Nexxy> lmatteis, but you use the `jitsu` command instead
14:31 <@Nexxy> `jitsu deploy <appname>`
14:32 < geNAZt> fg3: for this javascript has callbacks
14:32 < SomeoneWeird> "process.nextTick(function() {});' < wtf s that doing
14:32 < SomeoneWeird> lol
14:32 < geNAZt> returning over a context doesnt work
14:32 <@Nexxy> lmatteis, you can also use a linode and a post-receive git hook to do the same thing with git
14:32 < geNAZt> its coffeescript
14:33 < geNAZt> one of the senselest things in the world
14:33 <@Nexxy> that might be a bit of a hyperbole
14:33 < alphabitcity> what hosting platform would you recommend? trying to decide between heroku and nodejitsu
14:33 <@Nexxy> http://i.qkme.me/3sxf3u.jpg
14:34 < SomeoneWeird> alphabitcity, jitsu
14:35 < alphabitcity> SomeoneWeird: thanks, what do you like about it?
14:35 < SomeoneWeird> all the things
14:35 <@Nexxy> alphabitcity, their support team is pretty on point
14:35 < alphabitcity> got it, thanks
14:36 <@Nexxy> you can also get a development sandbox for free
14:48 < cloudbender> good morning nodesters
14:48 < geNAZt> "morning" lol
14:48 < cloudbender> Or good (insert time here) nodesters
14:48 < geNAZt> thats better
14:48 < geNAZt> :D
14:49 < geNAZt> Respect for Timezones
14:49 < MiracleBlue> Morning for me :)
14:49 < cloudbender> Hey !  That's a paramterized greeting.  I R smart.
14:49 < MiracleBlue> Almost 2am lol
14:49 < geNAZt> its 15:46 (03:46 pm) here
14:50 < cloudbender> You are in Germany ?
14:50 < cloudbender> <<< Central Canada
14:51 < cloudbender> ... coffee, yeah
14:51 < geNAZt> yes germany
14:52 < Sendoushi> does anyone knows good epressjs tutorials?
14:52 < geNAZt> whats epress ?
14:52 < geNAZt> oO :D
14:52 < Sendoushi> ExpressJS :D
14:52 < geNAZt> ah
14:52 < geNAZt> i thought about automatic printing service or so
14:53 < Sendoushi> no no ehehe
14:53 < geNAZt> wekk the examples in the expressjs github are nice
14:53 < Sendoushi> hmmm
14:54 < Sendoushi> ok i'll check them
14:58 < s3shs> Weee!  Fun with routes: http://stackoverflow.com/questions/14807023/emberjs-routing-clarification
14:58 < amurdaca> does make sense to disable express.logger if nginx is in front of node and it's logging access/error?
14:58 < s3shs> Whoops, wrong room.
15:05 < foobar321> All rigy my question is what should I do in _read in stream.readable when data to be read is not avaiable yet?
15:05 < foobar321> All right*
15:08 < foobar321> Anyone experienced with stream2 API here? :/
15:11 < SomeoneWeird> bayum
15:18 < foobar321> What should I do in _read in stream.readable when data to be read is not avaiable yet? The example from source code of transform does not gives me any clue :/
15:19 < Sorella> >[ES6 modules] can be functions by overriding a few things. First class support to come later. >A module system with no first-class modules.
15:19 < Sorella> So, ES6 modules are useless crap after all.
15:20 < Sorella> Question is, will Node.js offer support for ES6 modules when they're implemented in V8. Or will it keep CommonJS/Node modules as the canonical way of sharing code?
15:20 < Sorella> s/offser support for/move to/
15:24 -!- mode/#Node.js [+o isaacbw] by ChanServ
15:26 < foobar321> What should I do in _read in stream.readable when data to be read is not avaiable yet?  Should I save callback for a push?
15:27 < ltedone> Hello, I'm trying to do a simple experiment using node.js and webrtc and using socket.io. All works fine on localhost but it doesn't work on a remote server. Can anyone help me?
15:27 < foobar321> I've just started using streams2 API
15:30 < Sorella> Nevermind, I've read Isaacs response on Github :3
15:30 < foobar321> Sorella: give link to it?
15:34 < Sorella> foobar321: https://gist.github.com/domenic/4748675
15:41 -!- mode/#Node.js [+o isaacbw] by ChanServ
15:42 < shapeshed> is there no node representative on TC39?
15:42 < AAA_awright> Eh?
15:42 <@isaacbw> node just uses v8
15:46 < shapeshed> AAA_awright: TC39 is the technical committee behind ES6 
15:46 < shapeshed> http://www.ecma-international.org/memento/TC39.htm
15:48 < AAA_awright> Idk what it'd be necessary for
15:49 < babai_> AAA_awright, what is neccessary for what?
15:49 < babai_> AAA_awright, can you fill me up?
15:50 < AAA_awright> babai_: http://logs.nodejs.org/node.js/latest
15:50 < strk> npm-1.2.x produces npm-shrinkwrap.js that npm-1.1.x cannot understand !
15:50 < strk> expected ?
15:50 < strk> how do I get back to npp-1.1.x ?
15:51 < wookiehangover> shapeshed: while rwaldron is officially there for jquery, he maintains a few popular node project
15:51 < wookiehangover> and uses node
15:51 < wookiehangover> and cares deeply about js
15:51 < wookiehangover> so anyone that says node has no rep on tc39 either doesn't know what they're talking about or is trying to sell you something
15:52 < rwaldron> wookiehangover shapeshed it's true.
15:52 < shapeshed> wookiehangover: it was a genuine question. I have no preconceptions :-)
15:53 < rwaldron> that's a good way to be
15:53 < shapeshed> rwaldron wookiehangover thanks for the info
15:53 <@Nexxy> so much caremad!
15:54 < rwaldron> Also, I've been encouraging the few I know at Joyent, Nodejitsu and Voxer to join Ecma since last June
15:54 <@Nexxy> rwaldron, woof
15:54 < rwaldron> Nexxy I can't wait to see you on Saturday
15:54 <@Nexxy> oh man
15:54 < rwaldron> :D
15:54 <@Nexxy> I don't know if I'ma make it!
15:54 < rwaldron> 0_0
15:54 < rwaldron> you're killing me
15:55 <@Nexxy> I'm not sure if I can come up with teh $ for a reasonably priced ticket
15:55 < wookiehangover> sell some plasma or something
15:55 < pachet> sell your organs
15:55 <@Nexxy> I uh... what
15:55 < pachet> live over the internet
15:55 < pachet> get money back on your baby
15:55 <@Nexxy> pachet, my wife won't let me ;<
15:56 -!- mode/#Node.js [+o isaacbw] by ChanServ
15:56 <@Nexxy> hey! no!
15:56 <@Nexxy> rwaldron, but I'm going to nodeconf!
15:57 < Sorella> So, selling your organs is still an option.
15:57 <@Nexxy> no that's what I'm not allowed to do
15:58 <@isaacbw> how would anyone find out
15:58 < Sorella> Oh, I thought that was re: "get money back on your baby"
15:58 <@Nexxy> no I would never do that
15:59 < Sorella> Get money from working late at night. In clubs :3
15:59 < rwaldron> Nexxy that's a bummer, but shit happens
15:59 < rwaldron> Either way, NodeConf!
15:59 <@Nexxy> rwaldron, :D yeah
15:59 <@Nexxy> rwaldron, I just checked on tickets again
15:59 < rwaldron> hopefully by then I will have this goddamn arm thing figured out
16:00 <@Nexxy> which
16:00 < rwaldron> (figured out = buy higher torque servos)
16:00 <@Nexxy> ohh
16:00 < rwaldron> I want to build two arms that are controlled with a kinect
16:00 <@Nexxy> I have some ideas for something that uses muscle wire
16:00 < rwaldron> the kinect will obviously not be Johnny-Five, but I'm sure someone has created a node module that I can use :)
16:01 <@Nexxy> sounds lovely
16:23 < carranca> Hey, I'm creating a webpage with node, and found a nice way to share view templates between server rendering and client rendering using Hogan. My next proof of concept would be sharing logic, but I'm hitting a little bit of a wall. My idea is: If I have a user model, I might want to share some functionality like getFullName (concat first and last) but I wont share other stuff. Should I use something like Backbone models
16:23 < carranca> , plain js mixins or what?
16:28 < pachet> carranca: i usually just render <script> tags in my templates that point to a node module that i want functional on the client
16:29 < pachet> then if you only want specific methods to be exposed to the client, the cleanest way is to probably break those out in their own file
16:29 < foobar321> Is there any list of modules that spport streams2 ?
16:30 < foobar321> I know that all are backward-compatible
16:30 < foobar321> but was just wondering is any of them ready for streams2?
16:33 < carranca> @pachet what do you mean by pointing a script tag to a node module?
16:33 < bradleymeck> carranca: I would make sure w/e model system you use is not tightly coupled to storage and can consume raw objects or JSON
16:33 < bradleymeck> foobar321: if you search for things depending on readable-stream by isaacs they should be back/forward compatible both ways
16:34 < bradleymeck> carranca: also I would at least look at browserify if you actually want to share code (+grunt to ease bundling)
16:34 < carranca> @bradleymeck that was my thougts as well, if possible I would like to use raw objects every time. Thats why I want to use mixins
16:35 < carranca> @bradleymeck but for example Backbone add some get and set to the plain object, so my getFullName would have to be coded something like this.get('firstName') + this.get('lastName')
16:35 < bradleymeck> carranca: well i know Big and Flatiron both have resource modules that let you use in-memory stores, they should both work anywhere that commonjs modules work
16:37 < medikoo> carranca: just write everything CJS style, and reuse whichever modules you like on both sides, see https://github.com/medikoo/modules-webmake I'm building quite complex (bundled from c.a. 200 modules) applications that way
16:37 < carranca> @bradleymeck Ive never heard about big, and I think I evaluated flatiron at some point, and decided just to use express
16:37 < bradleymeck> carranca: just use resourceful, it works with both
16:37 < bradleymeck> not tied to either
16:38 < carranca> @bradleymeck cool :)
16:39 < carranca> @medikoo sorry my ignorance, what is CJS?
16:39 < pachet> commonjs
16:40 -!- mode/#Node.js [+o isaacbw] by ChanServ
16:40 < medikoo> carranca: modules style that's used within Node.js
16:41 < medikoo> carranca: What I meant is: just organize code same way as writing for Node.js, and use NPM for client-side stuff as well, One system for all envs, that's best approach
16:41 < bradleymeck> ^ substack++ for browserify
16:43 < MI6> joyent/node: Ben Noordhuis master * ed3d553 : typed arrays: make call-as-function work for ctors  Turn call-as-function (+1 more commits) - http://git.io/wtN5Xw
16:43 < carranca> @medikoo But that is for sharing full module functionality, right? My questions might be strange because Im used to MVC frameworks, so maybe I should change a little bit the paradigm. But my idea is: How would i share model validation between browser and server, for example
16:43 < substack> bradleymeck: and v2 is going to be even unixier!
16:44 < bradleymeck> substack: woot! can I finally run async code transforms?
16:44 < medikoo> carranca: put your mvc framework into cjs module (if it isn't already).. and write additional stuff (you're validation etc) as cjs modules, that's best approach imho
16:45 < foobar321> bradleymeck: thnx!
16:45 < carranca> @medikoo thanks!
16:47 < substack> bradleymeck: yes using defunctzombie's required module and these libs: https://gist.github.com/substack/4754581
16:53 < bradleymeck> substack fancy, that + a fs shim would make my life close to complete, but browser fs api is sadness thanks to blobs
16:54 < torvalamo> life is sad
16:54 < torvalamo> get used to ti
16:54 < torvalamo> oit*
16:54 < torvalamo> dakghsgd
16:54 < torvalamo> it
16:55 < torvalamo> people will constantly try to screw you over... unfriends, policy makers, standards organizations and library developers
16:55 < torvalamo> they're all in there
16:57 < substack> bradleymeck: what kind of fs are you talking about?
16:57  * bradleymeck digs up
16:57 < SomeoneWeird> lol
16:57 < substack> bundling static assets into js files or browser apis?
16:57 < bradleymeck> browser apis
16:58 < bradleymeck> ala https://github.com/OptimalBits/fs.js
17:01 < Lefty4000> So can anybody give an example I can go to that shows node.js being used along side jquery and such?  I'm just having a hard time grasping the concept.  Total beginner
17:02 < geNAZt> Lefty4000: nodejs isnt client sided
17:02 < geNAZt> so jquery != nodejs
17:03 < lz> geNAZt, well, jquery can still be used with node.js
17:03 < lz> server-side
17:03 < geNAZt> yes "can"
17:03 < geNAZt> if you have a dom parser in node
17:03 < lz> lefty4000, what are you trying to accomplish?
17:03 < geNAZt> like jsdom or cheerio
17:03 < Lefty4000> I just don't understand because there is like nodeQuery, jQuery and then jsdom for jquery with node
17:03 < Lefty4000> its all so confusing
17:03 < lz> geNAZt, yep, exactly
17:04 < Lefty4000> I just want to make basic animations like dropdown menutes.  Cheerio looked promising although I still am not grasping how to do it
17:07 < lpin> anyone is bored or has the will to review some lines of code? https://gist.github.com/lpinca/4755476
17:08 < lpin> kinda simple nothing special
17:09 < Lefty4000> Can somebody point me in the right direction?
17:09 < lz> Lefty4000, why would you need server-side jQuery for that?
17:10 < lz> Since it's a clientside animation, it should be handled by your clientside javascript
17:11 < Lefty4000> Idk, last time I tried it client-side with the raw jQuery.js, window was undefined
17:11 < Sorella> Lefty4000: in which GUI toolkit. If you mean doing animation in HTML, Node won't help you.
17:12 < Sorella> s/\./\?/
17:13 < Lefty4000> That didn't really make sense to me....
17:13 < carranca> So, I have a follow up question in the sharing logic browser and server side which is probably best asked in a JS channel than node. How can I bind a js mixin to an array of models without looping through the array and extending each object?
17:13 < carranca> ccheck tihs code http://pastebin.com/H91HiFSr
17:13 < Sorella> Lefty4000: Node is an application framework for evented I/O applications. It does not run inside of the browser, and has no connections to any browser whatsoever.
17:14 < Lefty4000> Whoa whoa, so I'm using express.  So i'm using a framework inside a framework? 
17:15 < Sorella> Quite so.
17:15 < daekano> obligatory inception reference
17:15 < daekano> dawg
17:15 < pachet> herd u like seeds of doubt
17:18 < Lefty4000> Okay so if i use jQuery as if the website did all the processing on the client side, it would be fine even when I upload the whole dealio to the serverside?
17:19 < carranca> note that what im trying to do is something like model_user.bind(users[0]).getFullName();
17:19 < carranca> which of course doesnt work :S
17:20 < Lefty4000> I guess what i don't get is that when I'm programming the site, all the of the examples I follow are using app.js, and i'm working in server.js and thats kind of unnerving.  Does that matter?
17:21 < Lefty4000> I mean i know its just a file name but that kind of means something
17:25 < paultman> Hello everyone from Washington, DC
17:25 < pachet> Lefty4000: it's idiomatic, mostly
17:25 < pachet> i guess strictly speaking, that one file is not a server
17:25 < lz> Lefty4000, I'm guessing you're using node.js as a web server if you're using express. if you've built websites in the past using something like FTP, then node.js is replacing the Apache server. You still need to serve client html/scripts/styles, and that's where you'll be placing your animation javascript.
17:28 < Lefty4000> lz: yes I am using express, you are good.  I am using it as a web server with Windows Azure.  in my file system, I have a public folder which contains image, javascripts, and stylesheets.  But no html.  I have another folder called views which contains all of the jade templates which compile into HTML
17:28 < paultman> hey everyone, just finished Pedro Teixeira's Professional Node book.  love node.js :)  question for everyone, is express still the goto mvc framework?  Not at all a .jade fan and hoping for a more streamlined web server setup
17:29 < owen1> i don't see console.logs on my server! i can see it when i test localy though.
17:30 <@Nexxy> paultman, express is still a good choice
17:30 < pachet> doesn't shoehorn you into jade
17:30 <@Nexxy> paultman, it also works with a bunch of templating libraries
17:30 < owen1> paultman: it's popular, but many choose to use node alone - https://github.com/oren/node-website-template
17:30 < paultman> thanks Nexxy
17:30 <@Nexxy> paultman, so you can pick whatever you want, really. EJS is a popular choice
17:31 < paultman> hmm, was thinking of building a basic one around Connect
17:31 < Kakera> jade is default because it's from the same guy ;)
17:31 < paultman> figured many have already done that though
17:31 < owen1> many teams hit a wall after a while. and people don't want to repeate the mistake of rails
17:31 <@Nexxy> rails makes no mistakes
17:31 <@Nexxy> rails is omakase
17:31 < Lefty4000> Oh really? wow
17:31 <@Nexxy> you either love it, or you have bad taste
17:31 < paultman> yeah, i was a rails guy, would like to have a rack type server
17:31 < owen1> connect is also something from ruby/rails that is not neeeded in node
17:32 < owen1> middleware can be replaced with a simple fuction u add to the response object
17:32 <@Nexxy> owen1, that sounds dangerous
17:32 < Lefty4000> I wonder, seeing as how many  of you are from rails.  which is nicer? rails or node?  Wondering for a personal website application
17:32 < owen1> rack/middleware is a baggade that js don't need
17:32 <@Nexxy> Lefty4000, from what perspective?
17:32 < paultman> ok, thanks for everyones feedback.  I'm migrating my app to node.js and think i'll go with express
17:33 < Lefty4000> a programmers perspective?
17:33 < owen1> Nexxy: i follow isaacs - https://github.com/isaacs/npm-www
17:33 < owen1> Lefty4000: node is nicer
17:33 < Lefty4000> kk
17:34 < Lefty4000> Then tell me, what would compell a developer to use rails?
17:34 < owen1> Nexxy: what danger do u see in adding a function?
17:34 < owen1> Lefty4000: team that refuse to move with time
17:34 < Lefty4000> Oh how sad.  I should speak to my brother then
17:34 < owen1> Nexxy: that's what isaacs do here - https://github.com/isaacs/npm-www/blob/master/decorate.js
17:35 < owen1> Lefty4000: start your own thing and hire the team yourself
17:35 < owen1> life is too short
17:35 < Lefty4000> owen1: I will someday.  Its just right now, starting alone is hard considering I'm a total beginner 
17:36 < owen1> how come i don't see console.log on the server but i do see it on localhost
17:37 < Lefty4000> owen1: your code is listening on the proper port?
17:38 < paultman> does anyone know of a basic web framework that doesn't use any templating engine for html or css,  just basic html/static assets.  most everything happens on the client.  the server just handles auth/sessions/db crud....
17:39 < paultman> with that motivation, should i just use connect to build my own framework or is there a very slim/minimal one out there?
17:40 < lz> paultman, yea, it's called node.js :)
17:40 < paultman> lol, 
17:41 < paultman> ok, thanks.  just checking before i get started on a very minimalist setup
17:41 < lz> connect + everyauth + your db transport
17:42 < paultman> ok, thanks @lz, that's what i was thinking also
17:42 < pats_Toms> hi, I got error when I am using node-gyp build - http://sprunge.us/aIcE
17:42 < paultman> thanks for the bit aobut everyauth
17:42 < paultman> *about
17:42 < pats_Toms> any ideas how to get that openssl working?
17:43 < holzp> paultman, also passport if everyauth does not get it done
17:43 < paultman> ah, ok.  thanks @holzp
17:46 < paultman> I hate to beat a dead horse with this next one, but serving static assets... via node.js server?  or proxy them to apache/nginx?  needed/overkill?  thought?
17:48 < TechnoCat> probably overkill for small uses, but i found setting up nginx and multiple node servers to be a good experience for proxying ports
17:48 < bradleymeck> paultman: cdn > dealing with it yourself
17:48 < bradleymeck> for big enough sites^
17:48 <@isaacs> Aria: So, I dug into the shrinkwrap-shasum thing yesterday.
17:48 <@isaacs> Aria: good news and bad news and other good/bad news.
17:49 <@isaacs> Aria: good news: it's not so hard to just kinda bolt on
17:49 < paultman> good call bradleymeck, i'll have to look into how I can get my stuff hosted on a CDN
17:49 <@isaacs> Aria: bad news: it permanently breaks {"dependencies":{"foo":"http://raw.github.com/21345/index.js"}} requirements
17:50 < paultman> wonder if hosts like heroku has CDN services...
17:50 <@isaacs> Aria: mixed news: making it work will require a major (overdue) refactor of how npm manages tarballs, which will make it much faster and better, but also involves about 1000loc change.
17:50 <@isaacs> Aria: in the one place where basically every npm command goes through
17:51 < lz> paultman, amazon s3
17:52 < bradleymeck> isaacs: how does that hit tarball code?
17:52 <@isaacs> bradleymeck: so, npm does this stupid complicated dance whenever it fetches something to install.
17:52 < paultman> @lz, was just reading about S3 for CDN with heroku 
17:53 < paultman> thanks
17:53 <@isaacs> bradleymeck: it downloads it to a temp folder, then unpacks it into the temp folder, then re-packs it into the cache tarball, then unpacks it into the cache folder, then reads cache-folder/package/package.json to see what it is.
17:53 <@isaacs> bradleymeck: this code predates streams, and node-tar
17:53 < bradleymeck> k~
17:53 <@isaacs> bradleymeck: it's so convoluted partly because it was originally running one of gnutar, bsdtar, or posix tar, to get the jobs done
17:54 < Stephen> yeah, node-tar seems to have moved along more sluggishly
17:54 < Stephen> lol
17:54 < gustonegro> Does anyone here have experience with node.js's zlib implementation?  I was wondering if I could set the "extra field" entry on afile to include timezone info, and how?
17:54 < Stephen> Say all the PUNS!
17:55 <@isaacs> bradleymeck: in order to get the headaches of system tar to stop asap (and support windows) I just basically shoved node-tar into the same slot that system tar was in
17:55 < bradleymeck> Stephen: i made tart, but need to wait on 0.10 to actually test it, using readable-stream is a bit odd now
17:55 <@isaacs> bradleymeck: and there it has stayed.  like a dinosaur stuck in a pit.
17:55 <@isaacs> Stephen: ^
17:58 < Stephen> isaacs: Forgive me, I was making a pun on tar and stream. I know nothing about how tar works other than it's compression
17:59 <@isaacs> Stephen: tar is actually not compression.
17:59 < bnoordhu1s> Stephen: tar itself doesn't compress /pedantic
17:59 < bnoordhu1s> great minds
17:59 <@isaacs> Stephen: it's archiving
17:59 < Stephen> aye, sorry
17:59 <@isaacs> Stephen: zlib is compression online, not archiving
17:59 <@isaacs> zip is non-unixy because it does both.
17:59 < Stephen> sorry, honest mistake
17:59 < Stephen> But you are, of course, right
18:00 < Stephen> Else I wouldn't be dealing with tar.gz files in my logs
18:00 < bnoordhuis> Stephen: don't sweat it. no one but us nerds care
18:01 < Stephen> So, I'm looking into this API called STOIC, any of you guys seen it yet?
18:02 < Stephen> It touts itself as "building Web & Mobile Apps from spreadsheets"
18:02 < mlebrun> I have a question, say I have a top level project A that depends on B, and B depends on C. If all dependencies are installed, in B when I try and run A it says it's missing C. does that make sense?
18:02 < Stephen> But I realized that its a: a data storage api, and b: will allow me to make calls to other API's with js functions
18:03 -!- mode/#Node.js [+o isaacbw] by ChanServ
18:03 < owen1> Lefty4000: port 3000
18:03 < mlebrun> Also, i'm not installing dependency B via npm, it's another module I'm working on.
18:03 < Stephen> I've been hunting a means by which I could distribute my client and server API calls across a few different services in order to eliminate some privacy concerns. Have any of you been through this?
18:04 < Stephen> mlebrun: Project A needs dependency C installed directly, just because B has it in it's modules doesn't mean A gets it
18:05 < lz> isaacs, curious, why does NPM need to repack the downloaded tar?
18:05 < mlebrun> but say if I install express, and express has dependencies, why is it able to use those, while my module can't take advantage of underlying modules?
18:05 < Lefty4000> owen1: make sure that your console and all the logging is done over that port.  Otherwise I don't know
18:06 <@isaacs> lz: history.
18:06 <@isaacs> lz: it doesn't need to
18:06 <@isaacs> lz: it *used* to need to, becasue different tar implementations would be stupid with putting broken shit in their tarballs.
18:06 <@isaacs> lz: especually gnutar
18:06 < Stephen> mlebrun: Every project has it's own node_modules directly
18:07 <@isaacs> lz: and the posix tar on solaris is a wacko in how strict it is about stuff being inside it
18:07 < Stephen> mlebrun: When installing a module, it doesn't install all of it's dependencies globally.
18:07 <@isaacs> lz: also, the package format was changing a bunch, so that gave me an opportunity to fix older things at publish/install time
18:07 < lz> isaacs, ah, jeeze
18:07 < Stephen> it installed them to ./node_modules
18:07 <@isaacs> lz: but all that is so ancient history.  this is just relics now.
18:07 <@isaacs> Stephen: it installed them to /usr/local/lib/node or ~/.node_modules
18:08 < mlebrun> right, but I'm not use Express directly in Project A, it only instantiates an instance of Project B which has Project C as a dep
18:08 <@isaacs> Stephen: with ~/.node_modules/foo @-> ~/.node_modules/foo@1.2.3 symlinks everywhere
18:08 < Stephen> isaacs: mlebrun is talking about a dependency's dependencies.
18:08 < mlebrun> correct!
18:08 <@isaacs> mlebrun: hi
18:08 <@isaacs> mlebrun: what's up?
18:09 < Stephen> If that's the case, then maybe you just haven't required the module in the top level proj?
18:09 < mlebrun> first off isaacs, how do I target replies to people (sorry, I'm an irc newb)
18:09 < Stephen> You'll still need to do the reqiure in that namespace
18:09 <@isaacs> mbalho: type their name, followed by a : and a space
18:10 < mlebrun> gotcha, ok, i wasn't sure if it was that or /username
18:10 <@isaacs> mlebrun: ^ like that, btu don't get confused by tab-complete *^_^* /sorry, mbalho tab attack
18:10 < mlebrun> issaca: haha i gotcha!
18:10 < mlebrun> or if you spell it wrong *smh*
18:10 <@isaacs> mlebrun: what irc program do you use?
18:10 <@isaacs> mlebrun: most have a tab-complete feature
18:10 < mlebrun> LimeChat osx *cue laughs*
18:10 <@isaacs> mlebrun: so i type "ml<TAB>" and it turns into "mlebrun: "
18:10 <@isaacs> mlebrun: yeah, limechat is nice.
18:10 < mlebrun> isaacs: got it
18:10 <@isaacs> there you go
18:11 < Stephen> :-)
18:11 <@isaacs> way less typos that way
18:11 < Stephen> He's concerned that he's getting dependency errors in his top level project for a dependency that was installed  by another dependency
18:12 <@mbalho> wat
18:12 < mlebrun> Stephen: yea, that's the issue
18:12 < mlebrun> I have a module that I would like to be re-usable, and it depends on express
18:12 < mlebrun> but I didn't think I had to put express as a dependency in all the projects I use my node module in?
18:13 < Stephen> So, isaacs: You are saying that all dependencies, regardless of depth, are given first-level access to the main project?
18:13 < Stephen> mlebrun: It's all about how you require it
18:13 < mlebrun> Stephen: I don't think that's necessarily the case, but if I'm not calling express directly, I shouldn't have to list it as a dep
18:13 < Stephen> Where does express end up in the namespace?
18:13 < amurdaca> why does he call express app.router inside express.session callback?! --> https://github.com/rockbot/CrowdNotes/blob/master/app.js
18:14 < Stephen> mlebrun: You are exactly right
18:15 < mlebrun> Stephen: it ends up in the aforementioned Project B, I return the app from express() and pass it back to a constructor in Project B and use module.exports to try and share
18:15 < Stephen> So, where is A throwing the problem that C isn't loaded?
18:16 < Stephen> Is it possible C is getting garbage collected?
18:16 < mlebrun> I don't think so, I'll type up a quick example
18:17 < mlebrun> Stephen: so in Project B i have something similar to:
18:17 < mlebrun> var express = require('express');
18:17 < mlebrun> exports.MyModule = function( options ) {
18:17 < mlebrun>   'use strict';
18:17 < mlebrun>   var app = express();
18:17 < mlebrun>   return app;
18:17 < mlebrun> };
18:17 < mlebrun> which obviously depends on express in the package.json and express is installed via npm install from package.json
18:18 < Stephen> Hmm,,,
18:18 < mlebrun> and obviously there's more to that package but that's ultimately what it boils down to
18:18 < mlebrun> and in Project A, I git clone the project to node_modules because i don't want to publish to NPM yet.
18:18 < Stephen> express() returns an server instance, not an instance of the module I'm betting
18:19 < Stephen> ah
18:19 < mlebrun> is it my git cloning that's effing everything up?
18:20 < Stephen> well, if Project B has the deps checked in, make sure you run "git submodule update --recursive" on Project B
18:20 < Stephen> It may just not be pulling express at all
18:20 < mlebrun> I ran npm install on Project B
18:20 < Stephen> depending on how you have it linked to project  B
18:21 < mlebrun> I have it linked in the package.json?
18:21 < Stephen> Browse through the .node_modules folder in Project B
18:21 < Stephen> Do you see express?
18:22 < mlebrun> yes
18:22 < Stephen> great
18:22 < mlebrun> so what I've been doing is I have project A folder, npm install to get local dependencies, then i git clone in Project B into Project A's node_modules and change to that folder and run npm install
18:22 < Stephen> So, where are you getting the express error?
18:22 < mlebrun> when I try and run Project A
18:23 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:23 < Stephen> What line?
18:23 < Stephen> When you try to require Project B?
18:23 < Stephen> Or later?
18:23 < Voting> http://asciidisco.github.com/Backbone.Rpc/docs/backbone.rpc.html <- anyone have experience with using this tool to send my backbone updates to a node server? Or anyone have a better suggestion? I'm in an organization that likes json RPC for nearly all communication. 
18:23 < Stephen> One thing I notice is that in Proj B, app = express()
18:24 < Stephen> There may not be any explicit object holding onto var express = requeire("express")
18:24 < mlebrun> this is the error I'm getting, I use requirejs in my top level Project A file
18:24 < mlebrun> timers.js:103
18:24 < mlebrun>             if (!process.listeners('uncaughtException').length) throw e;
18:24 < mlebrun>                                                                       ^
18:24 < mlebrun> Error: Calling node's require("express") failed with error: Error: Cannot find module 'express'
18:24 < mlebrun>     at req.load (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:2244:27)
18:24 < mlebrun>     at Object.context.execCb (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:1692:33)
18:24 < mlebrun>     at Object.Module.check (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:948:51)
18:24 < mlebrun>     at Object.Module.enable (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:1211:22)
18:24 < Stephen> A quick shot at fixing it could be to use "exports.express = require("express")
18:24 < mlebrun>     at Object.Module.init (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:861:26)
18:25 < mlebrun>     at callGetModule (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:1236:59)
18:25 < mlebrun>     at Object.context.completeLoad (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:1586:21)
18:25 < mlebrun>     at Function.req.load (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:2254:17)
18:25 < mlebrun>     at Object.context.load (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:1681:21)
18:25 < mlebrun>     at Object.Module.load (/var/www/vhosts/FireNode/node_modules/requirejs/bin/r.js:907:29)
18:25 < mlebrun> welp, that was a terrible decision.
18:25 < Stephen> lol
18:25 < daekano> ha
18:25 < mlebrun> could've been worse? lol
18:25 < Stephen> lol
18:26 < Stephen> hmm...
18:26 < mlebrun> Anyways, like I said, I feel like Project A shouldn't care about express because I'm not requiring it/referencing it in project A
18:26 < mlebrun> and if express IS in Project B's node_modules folder, why can't it be found?
18:26 < mlebrun> WHY!@?
18:26 < Stephen> Nah, the problem is in requirejs
18:27 < Stephen> mlebrun: Why are you using requirejs?
18:27 < mlebrun> Stephen: so if I strip out requirejs, you think it'll solve it?
18:27 < Stephen> node has native modules support
18:28 < Stephen> I'd remove requirejs and give it a shot
18:28 < mlebrun> right, but I like the structure of requirejs, but earlier today I realized I didn't need it in Project B, so I got it out of that, but was hoping I could still use it in the top level project
18:28 < mlebrun> but I guess I could just remove it from there too.
18:29 < Stephen> Well, I don't know much about requirejs
18:29 < mlebrun> it's handy, but i'll remove it
18:29 < Stephen> but it appears it's not following npm's install locations for search
18:29 < Stephen> You don't /have/ to remove it
18:30 < Stephen> But you might need to teach it the proper directories to search in
18:31 < mlebrun> right, and I figured that, and had it working in most scenarios, but I'll get it working without it and figure something out. or at least try it without it
18:32 < Stephen> mlebrun: Is this script running in a browser, or in a node thread?
18:32 < mlebrun> node
18:32 < Stephen> And which version of requirejs is installed?
18:34 < Stephen> Heh
18:34 < Stephen> I'm betting you imported requirejs as a variable named require.
18:35 < Stephen> https://github.com/semu/requirejs-express/blob/master/app.js
18:35 < Stephen> Check out lines 5 & 6
18:35 < Stephen> mlebrun
18:35 < Stephen> You can call it requirejs instead, and be sure to add the parameter listed there for node's native require
18:35 < mlebrun> no, i named it requirejs
18:35 < mlebrun> i was doing that!
18:36 < mlebrun> that's the problem! lol
18:36 < Stephen> Have you read these: http://requirejs.org/docs/errors.html#timeout
18:37 < Stephen> mlebrun: So, you've resolved it?
18:37 < mlebrun> not yet, rewriting some things to remove requirejs
18:37 < Stephen> kk
18:38 < t0th_->  hi 
18:38 < Stephen> mlebrun: Did you ever find out which version you have installed?
18:39 < mlebrun> i'll check now
18:39 < mlebrun> 2.1.1
18:39 < Stephen> mlebrun: If you keep it, you should update that
18:39 < mlebrun> gotcha
18:40 < Stephen> There have been quite a few updates which name problems just like this one
18:42 < mlebrun> ah, i see. well hopefully this refactor will not be in vain...
18:42 < mlebrun> haha
18:42 < nb-ben> how would I do something such as this using mongodb? $set : { ('data.' + key) : value }
18:42 < nb-ben> using collection.update * 
18:43 < Stephen> nb-ben: /j #mongodb
18:49 < mlebrun> Stephen: I think I finally figured it out
18:50 < mlebrun> ultimately, you were right, I was actually requiring express in Project A. I thought my express dependency was only in Project B, but after breaking the project apart into different repos, I forgot I DID have a dependency on express in my top level project
18:50 < mlebrun> anyways. what that means is I'm an ass.
18:51 < Stephen> lol
18:51 < Stephen> Nah, just means you were twisted all up
18:51 < Stephen> It happens
18:52 < mlebrun> welp, learned quite a bit in the process, and that's all one can really hope for.
18:56 < kburton> im padding an array of objects to the jade template, var data = !{posts}; which would be [{....},{....}] which works, but if the array is empty, it shows up as var data = ; which causes errors.  Any thoughts?
18:56 < kburton> padding == passing
18:57 < kburton> (so I can use it in Backbone.js)
18:57 < superjoe> isaacs, you should go in and spank this guy: https://github.com/dperini/nwmatcher/issues/69
19:00 < airtanah_> medikoo: lol
19:00 < airtanah_> mlebrun: lol (whoops)
19:01 < mlebrun> airtanah_: the worst!
19:01 < airtanah_> mlebrun: github issues should have an "i'm an ass" tag
19:03 < Lefty4000> kburton: sorry I don't have any thing to help you.  
19:03 < mlebrun> airtanah_: yea or at least "ass-holery", something quick, simple, and straight to the point. I mean 90% of my tickets would probably fall under that or "paranoia"
19:03 < kburton> thanks Lefty4000
19:04 < amurdaca> any good tutorial about async callback in node?
19:04 < Lefty4000> kburton: I'm more of an OOP guy but maybe you need a term that checks if it is empty before it sends it to the jade template, and insteads some basic information like "you didn't enter anything" 
19:05 < Lefty4000> instead sends *
19:05 < kburton> Lefty4000: brilliant. it's a long day....
19:06 < Lefty4000> kburton: tell me about it, mondays are my busiest day (college student) and I'm running on 4 hours max
19:06 < kburton> 4... lol.. I haven't slept in 2 days. (major deadlines).. College... the good ol days
19:07 < _pash> hello has anyone heard of codeschool?
19:07 < Lefty4000> major deadlines? wow, how do you keep yourself going?  Lots of coffee, 5 hour energy? 
19:07 < Lefty4000> _pash: yes I have, I've thought about using them, but then I realized I could get a book that would include much more information at much cheaper the cost
19:07 < gildean> _pash: was that a paid service?
19:08 -!- mode/#Node.js [+o isaacbw] by ChanServ
19:09 < Manobi> If you have suggestion we will be happy to listen
19:10 < samholmes> npm version lookup?
19:10 < samholmes> npm search connect-redis
19:10 < samholmes> doesn't tell me the latest version number
19:12 < airtanah_> samholmes: npm info connect-redis
19:12 <@isaacbw> npm info
19:12 <@isaacbw> er
19:12 < _pash> gildean: yes it is
19:12 <@isaacbw> ninjad?
19:12 < _pash> Lefty4000: yep... 
19:13 < _pash> i am looking for the excersises on the 'real time with node' session from levels 2-7 so i thought someone might have helped out =)
19:13 < Aikar> so i've tried to find something on my own, but does anyone got any data to debunk this 2008 article? http://paultyma.blogspot.com/2008/03/writing-java-multithreaded-servers.html  -- claiming that sync > async
19:14 < gildean> _pash: i bet you can find a bunch of tutorials by just googling
19:14 < spion> https://gist.github.com/spion/4756759 - generic node async breadth first search algorithm :)
19:14 <@isaacbw> Aikar, it's a matter of simplicity
19:14 < Aikar> articles full of old stuff... surely something has made this article irrelevant
19:15 <@isaacbw> when you thread, you open up a whole can of worms
19:15 < airtanah_> Aikar: most of your computer is async anyways. sync is an abstraction layered on top
19:15 < _pash> gildean: i have managed to get ahold of their videos and powerpoints, but i would still be happy to find the excersises they offer
19:15 < airtanah_> Aikar: keyboard events, memory retreival, etc are all asynchronous
19:16 <@isaacbw> and java doesn't have closures, so the patterns you can use in node don't work
19:16 < Aikar> point being the article is showing that (in java terms) IO is faster than NIO at the cost of memory. I was hoping there would be advancements in OS/technology that turned the tides back to async
19:16 <@isaacbw> and it's much more complicated to do async
19:16 < airtanah_> Aikar: it very well may be that JAVA sync > JAVA async
19:18 < samholmes> airtanah_: ty
19:18 < samholmes> https://github.com/visionmedia/connect-redis/issues/69
19:19 < Aikar> well the article made a fair point, it was kind of disconcerning that noone had really done any real tests to compare the 2 (in java that is where both forms exists easily). In node we kind of only have async...
19:19 < Aikar> Has there been any real network based sync i/o implementation built in node for benchmarking purposes?
19:22 <@isaacbw> Aikar, node is single-threaded
19:22 <@isaacbw> there are sync io functions, but you are still stuck in one thread
19:22 < Aikar> (and for any newbies to the node community whos never seen me before, no i'm not one of those anti node people trying to say sync > async :P Was a very big node enthusiast and have even contributed to node core. I even have one of the limited edition node.js turtle on a v8 rocket tshirts I wear often :P)
19:22 <@isaacbw> :P
19:22 <@isaacbw> besides, async is fun
19:23 <@isaacbw> you wouldn't get to use so many closures if it was sync
19:23 < airtanah_> Aikar: the article doesn't actually go into any details
19:23 < Aikar> isaacbw: thats what I was going for, for the sake of benchmarking, develop a thread model with sync i/o for comparison?
19:23 <@isaacbw> mm
19:23 < CoverSlide> that'd take a decent amount of dev work that noone on core i think would be interested in
19:23 <@isaacbw> that would be a lot of work for the sake of an old java article
19:23 < airtanah_> isaacbw: callbacks are only popular because monads are scary
19:23 < Aikar> if thread+sync can still outdo async by 25% margins, be interesting to see how node compares
19:23 < CoverSlide> simply developing a threaded model was abondoned in v0.7
19:24 <@isaacbw> airtanah_, I use promises when I can
19:24 <@isaacbw> and I keep them as a data abstraction, not an alternate form of callbacks
19:25 < Aikar> I'm working in java primarily now, and one project im on is replacing minecrafts network backend with Netty, and one of the other devs linked me the article saying async is not a good idea for game servers.
19:25 <@isaacbw> actually, I really only get closure crazy with angularjs
19:25 < Aikar> so, i was hoping to find data to counter him
19:25 <@isaacbw> oh, game servers
19:25 <@isaacbw> I kind of agree with him then
19:26 <@isaacbw> unless it's something like travian
19:26 < airtanah_> isaacbw: what do you mean by "as a data abstraction"
19:26 < CoverSlide> callbacks are popular in js because they are simple to implement out of the box
19:26 < Aikar> whats travian? lol
19:26 < CoverSlide> that kid who got shot for carrying skittles
19:27 <@isaacbw> airtanah_, I treat promises as data that just hasn't been filled yet. At least that's how I design my highest level APIs. Internally I do a bunch of chaining and all that pretty stuff
19:27 < Aikar> in minecraft, least in the level of servers were running at, were looking at up to 300 users per server, with 2-3 threads per user (though he saus the idea of having 2 threads 1 for read 1 for write isnt that needed but thats Mojangs failure)
19:27 <@isaacbw> I don't think notch is representative of smart server design
19:27 < Aikar> lol
19:27 < Fishrock123> ^
19:27 < Aikar> which is why were replacing large portions of it :P
19:27 < airtanah_> isaacbw: notch even admits so
19:27 <@isaacbw> wait, what?
19:28 <@isaacbw> do you work at mojang?
19:28 < Aikar> no
19:28 < Aikar> CraftBukkit is a fork of the official MC server, fixes alot of issues
19:28 <@isaacbw> ah, okay
19:28 < Aikar> then Spigot is a fork of CraftBukkit aimed at making performance improvements
19:28 <@isaacbw> I have a lot of issues with notch, actually
19:28 < Aikar> I help the Spigot project
19:28 <@isaacbw> I was a part of the community he started minecraft in
19:28 <@isaacbw> I won't go into depth, but he ticks me off
19:29 < Aikar> lol
19:29 < airtanah_> \begin{rant}
19:29  * jocafa takes a jab at java, too
19:29 <@isaacbw> lol
19:30 < Aikar> I'm actually liking java ._. I still have ideas to use node in our server architecture, but when developing the gameplay parts, trying to bring node directly into that would be too complicated and not worth it
19:30 < airtanah_> isaacbw: do you use any other monadic objects, like Maybe/Option, or Either?
19:30 <@isaacbw> airtanah_, I haven't, no
19:30 < airtanah_> Aikar: ever tried scala?
19:30 < Aikar> nah, im new to this java world..
19:30 < Aikar> ive heard of it though
19:30 < airtanah_> Aikar: it's amazing
19:30 <@isaacbw> this morning I was thinking about lazy promises that aren't filled until something uses then()
19:31 < airtanah_> Aikar: but it scares java people, LOL
19:31 < airtanah_> isaacbw: i would like to see a library like scalaz
19:31 <@isaacbw> I'll take a look
19:31 < airtanah_> isaacbw: which has Option etc. Option is awesome.
19:32 < airtanah_> Aikar: scala was designed by one of the original JVM writers, and the guy who introduced java generics
19:32 <@isaacbw> airtanah_, functional patterns feel so clean
19:33 < Aikar> does scala not have access to standard java libraries?
19:33 <@isaacbw> it doe
19:33 <@isaacbw> s
19:33 < Aikar> or are these examples not showing it
19:33 <@isaacbw> that's one of the main appeals
19:33 < CoverSlide> scala has its own standard library that replaces a lot of java stuff
19:33 < CoverSlide> but it can still use java
19:34 <@isaacbw> there are always going to be atomic things that are just easier to do procedurally
19:34 < airtanah_> Aikar: 100% interoperable
19:34 < Aikar> I dont think this would work for what I do java in unless it supports annotations, as Minecraft Plugins use annotations for event handlers
19:34 < Aikar> hmm
19:34 < airtanah_> Aikar: not sure about annotations actually 
19:36 <@isaacbw> lol, what are pimps
19:36 < Aikar> honestly with the power of java IDE's (IntelliJ specifically), typed variables really arent that big of a deal and I kind of like it
19:36 < Aikar> so I dont see much gain for scala over java lol
19:36 <@isaacbw> it's functional
19:37 < Aikar> well for what I do functional wouldnt be much help
19:37 <@isaacbw> probably
19:38 <@isaacbw> are you making any money from bukkit?
19:38 < Aikar> I dont work for bukkit, I run an MC server, so i work on Spigot to help the server perform better, but most my work is into building our servers unique gameplay
19:39 < Aikar> the goal is to make money off the mc server though of course :P
19:39 <@isaacbw> ahh
19:40 < Aikar> I had goals to build a game server in node before >_> maybe one day itll come back... but minecraft got me and gonna be here for a while lol
19:43 <@isaacbw> airtanah_, are options still useful if you don't have the null/primitive type problem?
19:46 <@isaacbw> man, I had forgotten how verbose java is
19:47 <@isaacbw> airtanah_, options just seem to be a way of making a typed language behaved untyped
19:47 <@isaacbw> I'm reading this: http://www.codecommit.com/blog/scala/the-option-pattern
19:48 <@isaacbw> is it maybe a bad description?
19:48 < Voting> If I need a good package to connect node to postgresql, what do you folks recommend? 
19:48 < Aikar> heh i actually find that code harder to read
19:49 <@isaacs> superjoe: ugh.
19:49 <@isaacs> superjoe: no readme, also
19:50 <@isaacs> superjoe: really... you guys should probably not be depending on this thing.
19:50 <@isaacs> superjoe: or send pull reqs that dtrt
19:50 <@isaacs> superjoe: or, hell, just fork it.  MIT ftw, man.
19:55 < Aikar> isaacs just confused the hell out of me with 2 names
19:55 < Aikar> and apparently this chat ive had in here makes me "active in this channel" again according to a job offer PM I just got!
19:56 < jocafa> isaacbw == isaacs?
19:56 < airtanah_> isaacs: yes, options are a form of flow-control, they are frequently used in places beyond just returning primitives
19:56 < bradleymeck> no jocafa they be different people
19:56 < airtanah_> isaacbw: whoops ^
19:57 < daleharvey> isaacs: So I believe you with that patch, I just feel stupid for not understanding how that makes things optional, you are adding more checks?
19:57 < airtanah_> isaacbw: you can chain several functions together that return options, and if the first one fails, i.e. returns none, then none of the subsequent functions are called
19:57 < airtanah_> isaacbw: it lets errors "fall through" gracefully
19:58 < codingkevin> quick best practices question:  are connection pools recommended for node apps (in general) for db connections?
19:58 < daleharvey> and much thanks btw, that was pretty damn fast from asking / moaning on twitter to commit :P 
19:58 < airtanah_> isaacbw: (get user) -> (get account) -> (check balance) -> (deduct money) -> (ship item) 
19:58 < airtanah_> isaacbw: if each of those returns an option, and the first fails, the failure will fall through to the end. you only need error checking at the end
19:59 <@isaacbw> airtanah_, that seems a lot like promises except that they are rejected, not returned null
20:00 < eighty4> Can anyone recommend a flatfile database? The only one I can find is this: https://github.com/creationix/nstore and it's 2 years old
20:00 < creationix> don't use nstore
20:00 <@isaacbw> a key value store?
20:00 <@isaacbw> or do you want it on the disk
20:00 < creationix> if you can handle binary dependencies, levelup is great
20:00 < owen1> hello world sockit io not working on a server - this function - GET http://localhost:3000/socket.io/1/?t=1360612578508  fails: Socket.handshake @socket.io.js:1659
20:00 < owen1> (it's working on local host)
20:00 < airtanah_> isaacbw: promises and option are both monads, they can be chained together quite nicely
20:00 <@isaacbw> er, those questions are unrelated
20:00 < creationix> eighty4, what's your use-case?
20:01 <@isaacbw> airtanah_, oh, okay. I'll try to read more about them
20:01 < CoverSlide> eighty4: there's two called tiny and dirty, but i haven't looked at them in a while, don't know if they've been updated
20:01 < eighty4> creationix: storing up to maybe 300 key pairs, accessing one and doing a ++ or -- on it
20:01 <@isaacs> daleharvey: the patch before it made it optional.
20:01 < CoverSlide> eighty4: probably best to use leveldb instead
20:02 < CoverSlide> npm install levelup
20:02 <@isaacs> daleharvey: that patch makes it not bad to be optional :)
20:02 < eighty4> creationix: I fully realize the performance will be horrible :)
20:02 <@isaacs> daleharvey: otherwise you can put nameless junk in the registry, or try to install it, and the cache folder gets blowed up, etc.
20:02 < gildean> owen1: did you remember to change the urls to reflect that you're not on localhost?
20:02 < airtanah_> isaacbw: i'm trying to think of a good way to intro them to the node community, but the topic takes a whilte to digest
20:02 < owen1> gildean: not sure. let me see
20:02 < creationix> eighty4, 300 is a very small number for that kind of stuff, I don't think is will be very slow
20:03 < creationix> eighty4, what do your keys look like?
20:03 < eighty4> creationix: i.e. flatfile dbs vs a "real" database
20:03 < creationix> short strings?
20:03 < eighty4> creationix: irc nicknames
20:03 < creationix> so the easiest thing is just use a single JavaScript object
20:03 < creationix> and JSON.stringify or msgpack.encode it
20:03 < CoverSlide> msgpack++
20:03 < creationix> write the entire file with every save
20:03 < eighty4> creationix: It'll be driving a small karma plugin for the irc bot I'm writing
20:03 < creationix> msgpack is a lot more compact for numbers
20:03 < daleharvey> isaacs: heh goog was just making sure I wasnt going crazy, I cant see the optional commit on https://github.com/isaacs/npm/commits/master though?
20:04 < daleharvey> *good
20:04 < owen1> gildean: thank you!
20:04 < eighty4> creationix: true. That would probably work just as well
20:04 < eighty4> creationix, CoverSlide thanks for thei nput!
20:04 < airtanah_> isaacbw: i'm trying to think of a good way to intro them to the node community, but the topic takes a whilte to digest
20:04 < creationix> eighty4, I mean, you're talking ~5k of data
20:04 < creationix> that's one chunk for fs.writeFile
20:05 < creationix> msgpack-js I maintain is a pure-js msgpack implementation
20:05 < creationix> it's pretty fast
20:05 <@isaacbw> airtanah_, well, I'll be on board when you think of something
20:05 < CoverSlide> msgpack is also awesome for transporting binary data
20:05 < sent_hil> using memwatch with my node shows a usage trend of 19.5 for a period of 15 mins, how bad/good is that?
20:06 < creationix> CoverSlide, my js rpc format of choice
20:06 < creationix> allows passing Buffers to browsers :)
20:06 <@isaacs> daleharvey: it's in node_modules/read-package-json
20:06 < airtanah_> isaacbw: cool, pressures on
20:06 <@isaacs> superjoe: https://github.com/isaacs/npm/commit/0b18669e26f032b4d991c9a567a77467aa785e8f
20:07 <@isaacs> daleharvey: https://github.com/isaacs/npm/commit/89ad2d5e4aa667bb22a2a4d1d06ab74ce17c025a
20:07 <@isaacs> daleharvey: https://github.com/isaacs/read-package-json/commit/f89cd177d08d517a54f9165081e278acbe8c26f3
20:08 < daleharvey> isaacs: ah yeh I should have checked, I just blank past package update commits, sweet, thanks again
20:10 <@isaacs> daleharvey: np
20:10 < sent_hil> a
20:12 -!- mode/#Node.js [+o isaacbw] by ChanServ
20:16 <@isaacbw> woah, I just got a new desk lamp for my green glass desk and it's tinting my feet green
20:18 < MI6> joyent/node: Ben Noordhuis master * c7b84a1 : fs: fix immediate WriteStream#end()  Fix an exception that was raised whe - http://git.io/6A-yMw
20:18 < bradleymeck> creationix: anyone used your tiling engine to create a spreadsheet db? *ponders*
20:19 < creationix> bradleymeck, not that I know of
20:19 < creationix> the values are limited to 8-bit values though
20:19 < creationix> (or 8-bit indexes if you entire system has only 256 unique values)
20:19  * bradleymeck stares at voxel
20:19 < creationix> yeah
20:19 < creationix> that might work
20:20 < creationix> and if you need more, you can assign more bytes per grid entry
20:20 < creationix> 8 bytes each to store real js numbers
20:21 <@isaacbw> a functional database could be pretty neat
20:21 <@isaacbw> I don't know if that's what you were thinking
20:21 < creationix> isaacbw, not sure what you mean by "functional"
20:22 < creationix> bradleymeck is referring to https://github.com/creationix/world-db
20:22 <@isaacbw> like a spreadsheet, where a cell can either be actual data, or a function based on other data cells
20:22 < superjoe> isaacs, <3
20:22 < bradleymeck> was just refering to a chunk based db
20:22 <@isaacbw> mm
20:22 < creationix> you could overlay a sparse functino database on top
20:22 < bradleymeck> tile engines are chunk based
20:22 <@isaacbw> well, someone should do my ide
20:22 <@isaacbw> a
20:22 <@isaacbw> it's cool
20:23 <@isaacbw> and make it a web service
20:23 < harbhub> hey
20:23 < harbhub> how does uglify work?
20:23 < CoverSlide> magic
20:23 < bradleymeck> harbhub: it parses the JS to an AST then reduces the AST as appropriate
20:23 < CoverSlide> http://medias.omgif.net/wp-content/uploads/2012/04/Its-magic....gif
20:24 <@isaacbw> what's that from
20:24 < creationix> I
20:24 < harbhub> so
20:24 < harbhub> i can just uglify a script?
20:24 < creationix> I'm beginning to see compilers as my hammer
20:24 < harbhub> save the min
20:24 < creationix> (the tool that works for everything)
20:24 < harbhub> and only put the min on the server?
20:24 <@isaacbw> you can do that
20:24 < harbhub> how?
20:24 < CoverSlide> yup
20:24 < CoverSlide> have a deploy script
20:24 < creationix> harbhub, npm install -g uglify-js
20:24 < harbhub> npm install uglify --save
20:24 < superjoe> isaacs, it's a bit far down the stack to fight that battle. my module -> LearnBoost/juice -> tmpvar/jsdom -> dperini/nwmatcher
20:24 < CoverSlide> or you can do it in middleware
20:24 < harbhub> ok creationix
20:24 <@isaacs> superjoe: i hear ya
20:24 < harbhub> what comes next?
20:25 < harbhub> var ugly=require('uglify');
20:25 < harbhub> ugly...?
20:25 < creationix> harbhub, https://github.com/mishoo/UglifyJS2/blob/master/README.md
20:25 <@isaacbw> you can install it as a command line program
20:26 <@isaacbw> docs are good things to read
20:26 <@isaacbw> usually
20:26 < Ramone> anybody know what kind of weirdness might cause npm to 404 on a github tarball that doesn't 404 in the browser?
20:26 < harbhub> what do you mean?
20:26 < harbhub> i used npm install
20:26 < CoverSlide> more unusual to find good docs
20:26 < CoverSlide> npm -g install uglify-js
20:26 < harbhub> right
20:26 <@isaacbw> node packages seem to have above average documentation
20:26 < CoverSlide> uglify script.js > script.min.js
20:26 < creationix> harbhub, if you want to use it as a library from your code, see https://github.com/mishoo/UglifyJS2/blob/master/README.md#api-reference
20:27 < harbhub> oh
20:27 < harbhub> i see
20:27 < harbhub> i can use npm -g
20:27 < harbhub> so i can command prompt
20:27 < CoverSlide> yes
20:27 < harbhub> to select a file to uglify
20:27 < harbhub> gotcha
20:27 < harbhub> or i can do it in the server
20:27 < harbhub> so i can take the private folder files
20:27 <@isaacbw> if you wanted to write a deploy script
20:27 < harbhub> uglify them
20:27 < harbhub> and put those in the public folder
20:27 < harbhub> ?
20:27 < CoverSlide> yeah
20:27 < harbhub> that is what i'll do for now
20:28 < harbhub> then when in production, just take out the uglify-er
20:28 < harbhub> ok
20:28 < lpin> I need consulting, i'm out of ideas https://gist.github.com/lpinca/4755476
20:29 < lpin> anyone?
20:29 < harbhub> awesome
20:29 < harbhub> you guys are the best
20:29 < CoverSlide> we know
20:30 < harbhub> :)
20:30  * CoverSlide does his best Han Solo
20:32 < harbhub> wow
20:32 < harbhub> uglify is easy
20:32 < harbhub> require(ugly)
20:32 <@isaacbw> lol
20:32 < harbhub> ugly.minify(file path)
20:32 < harbhub> result = ^
20:32 < harbhub> result.code = min version
20:32 < harbhub> :)
20:33 < harbhub> next i need to learn how to generate a good SSL key
20:33 < harbhub> what do you guys use as ciphers?
20:33 < harbhub> also, what is a cipher?
20:33 <@isaacbw> lolol
20:33 < harbhub> i'm serious heh
20:33 <@isaacbw> it was funny how you said it
20:33 < harbhub> lol
20:33 < harbhub> is it answer-able?
20:34 < rideh> this is how yoda learned
20:34 <@isaacbw> wikipedia is probably a good first place
20:34 <@isaacbw> to go
20:35 <@isaacbw> for really general questions like that
20:35 <@isaacbw> wooh, that was a hard thought to get out
20:35 < MI6> joyent/node: isaacs master * 862b164 : test: update http tests for ECONNRESET change (+1 more commits) - http://git.io/riMVbA
20:39 < harbhub> fs.write(fd, buffer, offset, length, position, [callback])
20:39 < harbhub> do i need to enter an offset and length and position?
20:39 < harbhub> or can i just enter the file path destination and the file buffer?
20:40 < CoverSlide> Y U NO USE STREAMS?
20:40 < harbhub> ok
20:40 < harbhub> how can i use a writestream?
20:40 < harbhub> i use read streams to serve files
20:40 < harbhub> but i looked at the api
20:40 < harbhub> nodejs api for createwritestream
20:40 < harbhub> and i don't know where to put the destination and the buffer?
20:41 < harbhub> coverslide, how do i write 'hello' to path '/tmp'
20:41 < CoverSlide> what's the file name?
20:42 < harbhub> no name
20:42 < harbhub> i'm not reading a file
20:42 < harbhub> oh
20:42 < harbhub> do you mean what i want it to be called?
20:42 < CoverSlide> yes
20:42 < Morkel> I have a problem with redis and http.get. I will download a json string and save this in redis. The output in the console looks fine but in redis the start from the string is missing https://gist.github.com/anonymous/4757405
20:42 < harbhub>  /tmp/hello.txt
20:42 < CoverSlide> var stream = fs.createWriteStream('/tmp/hello');stream.write('hello');stream.end()
20:42 < harbhub> and the contents should be 'hello world'
20:43 < harbhub> ok
20:43 < harbhub> i will try that
20:43 < harbhub> one sec
20:44 < harbhub> __dirname
20:44 < harbhub> heh
20:44 <@konobi> well, stream.en('hello')
20:44 <@konobi> *end
20:44 < CoverSlide> well, yeah
20:44 < CoverSlide> as a shortcut
20:45 < harbhub> it...worked!
20:45 < harbhub> sweetness
20:45 < harbhub> now to test writing the minified code
20:45 < harbhub> from my buffer
20:46 < harbhub> works
20:46 < harbhub> epic
20:46 < harbhub> wait
20:46 < harbhub> it keeps restarting my server
20:46 < harbhub> i'm using nodemon
20:46 < harbhub> lol
20:46 < CoverSlide> haha
20:46 < harbhub> it restarts, runs the code, restarts
20:46 < harbhub> haha
20:46 < CoverSlide> try node-dev
20:46 < harbhub> what's that?
20:46 < CoverSlide> it only restarts when require'ed files are modified
20:47 < CoverSlide> nodemon restarts on any js file change
20:47 < harbhub> yep
20:47 < harbhub> hmm
20:47 < harbhub> in production, i would not have any js file changes
20:47 < CoverSlide> right
20:47 < harbhub> i wouldn't let anyone upload js either
20:48 < CoverSlide> just saying, node-dev is a nice alternative to nodemon
20:48 < harbhub> noted
20:48 < harbhub> for now i'm happy with nodemon
20:48 < harbhub> but i will remember that alternative exists
20:48 < harbhub> which do you use?
20:49 < CoverSlide> node-dev
20:49 < Morkel> does anybody use node_redis?
20:50 < lpin> Morkel it's not a redis problem
20:50 < lpin> you are overriding the content of the key
20:51 < lpin> you should save the chuncked data in a buffe
20:51 < Morkel> lpin: how can i do this?
20:51 < lpin> and set the redis key on end event
20:55 -!- mode/#Node.js [+o isaacbw] by ChanServ
21:00 < lpin> Morkel https://gist.github.com/lpinca/4757489
21:00 < lpin> nvm wrong url
21:01 -!- mode/#Node.js [+o isaacbw] by ChanServ
21:01 <@isaacbw> for some reason the second monitor made xfce look terrible
21:03 < Morkel> lpin: Thx. But this is the same code
21:03 < lpin> yeah sec
21:06 <@konobi> isaacbw: time for nwm!
21:06 <@isaacbw> konobi, heh
21:06 < rideh> i'm noticing some _variable with _ prepended to variable name. I now know that _ is legal like any other chacter but is there a convention for _ to mean something?
21:07 <@isaacbw> private
21:07 <@isaacbw> or, "do not touch"
21:07 < Morkel> lpin: I solved the problem your idea with the buffer & end was create. THX
21:07 < airtanah_> isaacbw: more like, 'if we change it, don't complain
21:07 <@isaacbw> mm, that's better
21:07 < rideh> ah, hmm ok
21:07 < lpin> Morkel np
21:08 < airtanah_> rideh: they're methods/variables that are subject to change without notice, because they're considered internal
21:08 <@konobi> isaacbw: https://npmjs.org/package/nwm
21:08 <@isaacbw> I know, I saw it
21:08 <@konobi> ^_^
21:08 <@isaacbw> I'm not brave enough
21:09 < rideh> airtanah_: thanks i guess that makes sense, still dont know why its being returned from a particular function but whatevs
21:09 <@konobi> awww... weak sauce
21:09 <@isaacbw> oh, it's tiling
21:09 < airtanah_> rideh: you can't return a variable name, do you mean it's returning an object with a property beginning with _?
21:09 < rideh> http://bpaste.net/show/G5yzOlENIPbjgY57jpJ7/
21:09 <@isaacbw> that might actually be useful now that I have all this screen real estate
21:09 < rideh> airtanah_: yes
21:10 < airtanah_> rideh: it's likely returning an object with only public methods
21:12 < lpin> Morkel this way, https://gist.github.com/lpinca/4757627  was fighting with github embedded editor
21:12 < lpin> :>
21:13 < Morkel> lpin: this is my way https://gist.github.com/ThreeFingerMark/4757642
21:13 <@isaacbw> use hastebin like all the cool kids
21:14 <@isaacbw> actually, I've never understood gists
21:14 <@isaacbw> they seem overcomplicated
21:14 < lpin> lol
21:15 < CoverSlide> the main thing about gists is tying them to your github account
21:15 < CoverSlide> that and having revision history
21:15 <@isaacbw> hmm
21:15 <@isaacbw> I should use github more
21:15 <@isaacbw> I look lazy
21:15 < airtanah_> isaacbw: why hastebin?
21:15 <@isaacbw> it's fancy looking
21:15 < CoverSlide> i do like hastebin's uncluttered interface
21:16 <@isaacbw> and it's really simple to fork a paste
21:17 < airtanah_> gists make you look like a github badass
21:17 <@isaacbw> heh
21:18 < airtanah_> "my paste was so important it deserved its own git repo"
21:18 <@isaacbw> I could understand maybe if you wanted multiple files
21:19 < airtanah_> i never know how it's gonna go, it also supports comments with names
21:21 <@isaacbw> I usually only share snippets of code with "paste and forget" in mind
21:25 < tomtheguvnor> hey folks - do the various Node APIs' stability indexes say anything about the stability of the implementation code or are they basically a statement about how likely the API is to change in the future?
21:26 < airtanah_> isaacbw: ya your github is pretty bare
21:26 <@isaacbw> :(
21:26 < amurdaca> from this afternoon i can't stop laughing for this pic -> http://i.qkme.me/3sw2kk.jpg
21:26 < amurdaca> thanks to Nexxy lol
21:26 < airtanah_> isaacbw: you've got a few intends days tho
21:27 < airtanah_> intense*
21:27 < airtanah_> tomtheguvnor: yes
21:28 <@isaacbw> airtanah_, I have a few massive projects hiding in my private section
21:28 <@isaacbw> my git usage has deteriorated lately though. Most of my commits are along the lines of "A whole bunch of shit that I don't really remember, but it was a lot"
21:29 < airtanah_> isaacbw: waiting for "Hey guys, i just wrote a flow-control library that looks synchronous to handle all these callbacks"
21:29 <@isaacbw> :P
21:30 <@isaacbw> node-nelly could actually be useful if I cared enough about it
21:30 < BlakeRG> what is generally recommended for configuration files?
21:30 <@isaacbw> well, it is useful now, but not enough to pull and install
21:31 < CoverSlide> if you wanna come and take a ride with me ...
21:31 <@isaacbw> I forget why I chose that name
21:31 <@isaacbw> ooh, it was (n)ode sh(ell) y
21:32 < CoverSlide> wanger ... haha
21:32 <@isaacbw> wutwut
21:32 <@isaacbw> represent
21:32 <@isaacbw> that's not really my last name, for anyone who isn't looking at my github
21:32 <@isaacbw> wagner
21:32 < CoverSlide> oh i read wanger
21:32 <@isaacbw> lol
21:33 < airtanah_> CoverSlide: what's on your mind?
21:33 <@isaacbw> the cool thing about nelly is that the repl is in a separate process
21:33 <@isaacbw> I forget why I did that but I promise it was important
21:33 < asdf12> whos nelly
21:34 < airtanah_> isaacbw: that would make a great commit message
21:34 <@isaacbw> heh
21:34 <@isaacbw> asdf12, it's one of two public repos on my github 
21:34 < CoverSlide> i'm like a bird, i wanna fly way!
21:34 < CoverSlide> don't know where my home is, don't know where my soul is
21:35 < brianc> HAI GUYS!
21:35 < brianc> got a question for you
21:35 < eaz> shoot
21:35 < CoverSlide> wassup
21:35 < brianc> any one have success with pause()/resume() on http streams?
21:35 < brianc> also: do stream2 streams give backpressure on incomming http requests if they're not read?
21:35 < brianc> last time I tried to pause/resume w/ http it wasn't working so hot
21:36 < brianc> just asking if anyone knows off the top of my head before i go trying to fix it
21:36 < brianc> not fix, just figure out my own answers
21:36 <@isaacbw> why are you trying to pause it?
21:37 < CoverSlide> instead of pause, buffer it
21:37 <@isaacbw> god, somehow I feel like I'm being productive when all I'm doing is playing dungeon crawl
21:37 < brianc> pausing is what i want to do with it
21:38 <@isaacbw> what are you trying to accomplish?
21:38 < CoverSlide> right, i don't think it does that
21:38 < brianc> i want to "pipe" a file upload somewhere without buffering it
21:38 < CoverSlide> even streams2 i don't think we can
21:38 < brianc> that is no bueno
21:39 < brianc> I'm going to have to subtract 1 high five from the number of high fives I was going to give to the node team at nodeconf
21:39 <@isaacbw> lol
21:39 <@isaacbw> you could implement something yourself
21:39 <@isaacbw> that doesn't require you to pause, I mean
21:39 <@isaacbw> I still don't get why you need to pause it
21:39 < brianc> the pause is required in my case
21:39 < Morkel> is it possible that http.get makes errors? Every file that i download has little errors
21:39 < brianc> http://transferly.com
21:40 <@isaacbw> brianc, you stole my idea
21:40 <@isaacbw> bastard
21:40 < CoverSlide> Morkel: ERRORS?
21:40 <@isaacbw> ;)
21:40 < brianc> isaacbw: it needs pause to work correctly
21:40 < CoverSlide> sorry, capslock
21:41 < CoverSlide> i don't think there's any way to do that from node
21:41 <@isaacbw> brianc, I don't see why though. Why can't you buffer it
21:41 < brianc> isaacbw: but it's also a giant magnet for illegal content so i not going to finish it - was mostly a proof of concept & exersize for me
21:41 < CoverSlide> at least with node streams
21:41 < Morkel> CoverSlide: original: [23.683,0.66060803] saved with http [23.683,0.660,60803]
21:41 <@isaacbw> aw, that's too bad
21:41 < brianc> isaacbw: because what if 300 people all want to send a 1 gig file?
21:41 < brianc> isaacbw: i ain't got no 300 gigs of ram
21:42 < CoverSlide> Morkel: this happens on every file?
21:42 <@isaacbw> brianc, you could buffer it on the disk
21:43 < CoverSlide> Morkel: are you setting the encoding to anything?
21:43 < brianc> isaacbw: but then you have to complete upload before download can happen.  I want to actually _pipe_ it
21:43 <@isaacbw> and if you were to turn this into a real product, it could be ssd
21:43 < Morkel> CoverSlide: yes but everytime he error is different
21:43 <@isaacbw> you could totally pipe through a file
21:43 < Morkel> sometimes an missing ]
21:43 < CoverSlide> or a fifo
21:43 <@isaacbw> or you could pipe and as soon as the reciever connects, send them the buffered file as a dump and then start streaming
21:43 <@isaacbw> er, "or you could pipe to a file"
21:44 < CoverSlide> Morkel: well that shouldn't happen
21:44 < brianc> the partial file pipe thing i experiemented with doesn't really account for someone uploading much faster than downloading
21:44 < brianc> would get all sorts of insanity on figuring out what's in the file
21:44 < Morkel> CoverSlide: I will try to set an encoding
21:44 < CoverSlide> i've used http.get lots of times and never had it do that
21:44 < brianc> anyways...just wanderin' if i could pause the stream
21:44 < brianc> i've moved on to other side projects
21:44 <@isaacbw> :P
21:45 < CoverSlide> Morkel: how are you using http.get?
21:45 < CoverSlide> is the callback small?
21:45 < CoverSlide> small enough to show a paste?
21:46 <@isaacbw> actually, there probably is a market for encrypted peer to peer downloads over the web, kind of like that cat chat thing
21:46 <@isaacbw> I guess it wouldn't really be peer to peer
21:46 < Morkel> CoverSlide: https://gist.github.com/ThreeFingerMark/4757883
21:47 < CoverSlide> for one thing, buffer should be an array, not a string
21:47 < brianc> yeah i thought encryption would be cool
21:47 < CoverSlide> if you want to use push
21:47 < brianc> but i still think it's too much of a "send illegal shit through my website!" 
21:47 < CoverSlide> i'm surprised buffer.push isn't throwing for you
21:47 < brianc> i guess if it's encrypted in the browser...
21:47 < brianc> but then you can only really do that w/ modern browsers
21:47 < CoverSlide> MEGA
21:48 < brianc> which are about to get peerchannel or whatever
21:48 < Morkel> CoverSlide: buffer was an array i forgotten to change it back in the gist
21:48 <@isaacbw> oh yea, mega basically does that
21:50 < CoverSlide> Morkel: right, well.toString isn't what you want
21:50 < CoverSlide> you want to create a buffer that is the length of all the buffers
21:50 < CoverSlide> *sum of the lengths
21:50 < Morkel> CoverSlide: No i changed it to the string and addes the encoding. now it works. THX
21:51 < CoverSlide> ok
21:51 < CoverSlide> well i guess you can do that
21:51 < CoverSlide> as long as you don't have binary data
21:51 <@isaacbw> amazon wants me to review a box of matches
21:53 < lpin> Morkel no reason to call .toString() again on 'end'
21:53 < lpin> your buffer is already a string
21:53 < fwg> "they were good matches. while I thoroughly enjoyed there warmth, I have to admit, it lasted too short. So sad to see them go."
22:01 < CoverSlide> >> new Date().getTimezoneOffset()
22:01 < purr> CoverSlide: (number) 0
22:01 < CoverSlide> hmm
22:08 <@isaacbw> huh, Q.delay seems to be doing nothing
22:08 <@isaacbw> it just fulfills immediately
22:08 <@isaacbw> :(((
22:10 <@isaacbw> Q.delay(1000, 0) resolves immediately, but Q.when(0).delay(1000) works fine :(
22:10 <@isaacbw> :,(
22:10 < systemfault> :(
22:12 < aynik> hey, does already exist a module for performing map, reduce and friends on node.js? I'm considering to release one... https://gist.github.com/pabloPXL/4758035
22:12 < aynik> *on streams on nodejs
22:13 < BlakeRG> does anyone know how to get the final URL being called after applying options to a GET request with restler?
22:14 < matbee> Hey urrrvybody.. Question: Is there any RPC/Callback systems made for cluster/workers yet?
22:17 < harbhub> is there a way to require javascripts on the client side in a similar manner as you can with nodejs?
22:17 < paulbjensen> @matbee - amino is worth a look https://github.com/amino/amino
22:17 < harbhub> i.e. i run a script
22:17 < harbhub> var someScript = require('nameOfSomeScript');
22:17 < harbhub> or require the path to a script
22:19 -!- mode/#Node.js [+o isaacbw] by ChanServ
22:19 < systemfault> harbhub: AMD(require.js) is popular… but there are alternatives like browserify
22:19 < CoverSlide> BlakeRG: have you tried the .path property?
22:19 <@isaacbw> IRC should echo back succesful PRIVMSG commands
22:19 <@isaacbw> >:(
22:19 <@isaacbw> I keep talking to myself
22:19 < matbee> stupid IRC and its 300yr old protocol
22:19 < matbee> :P
22:19 <@isaacbw> bgsafbjdskl
22:19 < harbhub> can i just send a get request?
22:19 < systemfault> IRC is the mp3 of chatting :/
22:20 < harbhub> what if i just send a get request to the server for a file
22:20 < BlakeRG> CoverSlide: i figured it out, the second parameter to the callback there's a "path"
22:20 < systemfault> Still alive because it just works.
22:20 < harbhub> does that load the file?
22:20 < BlakeRG> thanks so much
22:20 < harbhub> such that i can call on variables and functions in it's global scoop?
22:20 < systemfault> harbhub: Nope, because loading a file is async
22:20 < harbhub> hmm
22:20 < harbhub> but
22:20 < CoverSlide>  mp3 is still alive
22:20 < harbhub> i can message when the file is received
22:20 < harbhub> and excute the script then?
22:20 < CoverSlide> still alive, still alive, still alive
22:21 < harbhub> execute*
22:21 < systemfault> CoverSlide: so is IRC :D
22:21 < aynik> harbhub: you need to require('lib', function(lib){})
22:21 < CoverSlide> IRC is for losers
22:21 < systemfault> It's nice to be a loser then :(
22:22 < matbee> IRC is totally for losers
22:22 < matbee> :'(
22:22 <@isaacbw> :,(
22:23 < matbee> we cry beside each other
22:23 <@isaacbw> :`,(
22:23 < BlakeRG> lmao
22:23 < BlakeRG> nerds
22:23 < MI6> joyent/node: Ben Noordhuis master * f5f9e8d : crypto: improve cipher/decipher error messages  Throw the OpenSSL error s - http://git.io/NRH8Ng
22:23 < matbee> So there's really no simple RPC systems for clusters D:
22:23 < harbhub> client clicks button -> function from a loaded script is called -> sends get request to the server for specified file -> get request is responded to on the server side request handler -> the requested javascript file is sent to the client -> client callback function is triggered -> use the newly loaded script
22:23 < harbhub> can i do that?
22:25 < matbee> the filename?
22:25 < matbee> you can append a script element to the dom pointing to wherever you like
22:25 < pomke> Is there any way I can pipe script to node?
22:26 < efoster> pomke, fork?
22:26 < pomke> like echo "console.log(123)" > node -e - 
22:26 < pomke> (which incidently doesnt work)
22:26 < efoster> pomke, node can read STDIN
22:26 < efoster> pomke, echo "console.log()" | node
22:26 < efoster> pomke, though you'd have to process it
22:26 < efoster> someone else will likely know better than I
22:27 < pomke> thanks :)
22:27 < efoster> $ node -e "console.log('hello.');"
22:27 < efoster> hello.
22:27 < efoster> ( pomke )
22:27 < matbee> someprimetime, no irc during work hours ^_^
22:28 < pomke> Yea that's not piped in though 
22:28 < efoster> pomke, you'll likely need to read it in then eval it
22:28 < aynik> pomke: '>' redirects output to a file descriptor, '|' pipes stdout to stdin
22:28  * pomke nods.
22:31 < CoverSlide> it's not a simple process. it involves resuming process.stdin, listening on the 'data' event, listening on the end event, concatting the results of the data events, and then evaling it, or the preferred method which is to use the 'vm' module
22:31 < pomke> aynik: well, you can tell how often I write shell x_x 
22:31 < pomke> ty
22:32 <@isaacbw> I need an artist to draw me a mascot
22:32 < pomke> woo it works, simple vim plugin to execute currently selected code snippet
22:33 < pomke> isaacbw: for what project?
22:33 <@isaacbw> a secret project
22:33 <@isaacbw> http://cuttlefi.sh/
22:33 < shanse> substack obviously
22:33 <@isaacbw> obviously
22:33 < pomke> is it an opensource project people care about?
22:34 < pomke> if not you' probably want to be offering money
22:34 < pomke> you'd*
22:34 <@isaacbw> of course I would pay money
22:34 < aynik> isaacbw: I feel creative, I'll give it a shot if you don't mind
22:35 < samholmes> Anyone know of some good, simple, WYSIWYG editors that play nicely with browserify and jquery?
22:35 <@isaacbw> aynik, are you an arteest?
22:35 < bnoordhuis> >> Math.min(Nan, 0)
22:35 < purr> bnoordhuis: ReferenceError: Nan is not defined
22:35 < bnoordhuis> >> Math.min(NaN, 0)
22:35 < purr> bnoordhuis: (number) NaN
22:35 < bnoordhuis> >> Math.max(NaN, 0)
22:35 < purr> bnoordhuis: (number) NaN
22:35 < bnoordhuis> :(
22:35 < aynik> I was, sold my soul for code
22:35 < BlakeRG> where does the log node package store it's log files?
22:35 < pomke> code pays better
22:37 <@isaacbw> aynik, I'm actually not ready quite yet, but I'll write you down for later if you want
22:37 < CoverSlide> not necessarily
22:37 < aynik> no prob, I'll do it for fun
22:37 < harbhub> what is the correct way to may ssl key, cert, and ca cert?
22:37 < harbhub> i have openssl installed
22:37 <@isaacbw> awesome
22:37 < harbhub> and the prompt is ready
22:37 < harbhub> i just don't know what to use for the questions it asks
22:38 < harbhub> once i start the process of generating keys
22:38 < CoverSlide> Common name should be your domain name
22:38 < CoverSlide> everything else is more or less irrelevant
22:40 < kenperkins> are there any PRs or issues about providing better interlinking between API docs in the main node repo?
22:41 < kenperkins> for example, in the docs when you see the fs.readFile section, it mentions that it can return a buffer when no encoding is provided. I'm hoping to make "buffer" a link to the apporpriate docs...
22:42 < bnoordhuis> kenperkins: not to my knowledge
22:42 < kenperkins> maybe an opportunity for me to submit my first PR? :D
22:42 < kenperkins> (for node)
22:43 < context> kenperkins: i dont think people will complain about better docs
22:44 < context> im just glad they finally put them in alphabetical order
22:44 < context> well... some of them
22:44 < kenperkins> how do you build the docs?
22:45 < kenperkins> ah make doc
22:46 < harbhub> my ssl is permission denying me
22:46 < harbhub> how do i let myself have permission?
22:47 < kenperkins> do you guys ever feel that the argument about to use node or not should really be called "javascript on the server" as opposed to node? I had some discussion with people today, and it was mostly centered on whether using javascript is good or not
22:47 < kenperkins> seems like using node.js as the vernacular is a bit misleading in that way
22:47 <@isaacbw> node is more than javascript
22:48 < kenperkins> I know that :S I was purely asking how you deal with people that say "why javascript"
22:48 < kenperkins> sorry if that wasn't obvious
22:48 <@isaacbw> "because javascript is cool"
22:48 < motaro> Has anybody tried 'Weld' ?
22:48 < kenperkins> (rather, I wasn't purely asking that. I was making a confusing statement that kind of had a question in it)
22:49 < kenperkins> isaacbw: do you guys have talking points about js vs some of the other popular languages?
22:49 <@isaacbw> I don't
22:49 <@isaacbw> some people like having the same language on client and server
22:50 < CoverSlide> JIFASNIF
22:50 < CoverSlide> use javascript because you like javascript
22:50 < CoverSlide> it's a neat language in its own right
22:51 <@isaacbw> javascript is fuuuun
22:51 < kenperkins> i do love me some js
22:55 < superjoe> has anyone else been noticing npm errors like these recently? SyntaxError: Unexpected token H \n Host not found: registry.npmjs.org
22:55 < spion> looks like a DNS error
22:56 < superjoe> yes 
22:56 < motaro> Ok, Maybe nobody has used 'Weld'. How about 'JSDOM' anybody seen that?
22:56 < superjoe> motaro, yep
22:56 < superjoe> it's pretty ok
22:57 < motaro> superjoe: I went through the docs it does not tell me how do I send the JSDOM to the client?
22:57 < superjoe> uh
22:57 < superjoe> sounds like I misunderstood the question
22:57 <@ryah>  Total of 1004 nicks
22:57 <@ryah> so many peeps
22:57 <@isaacbw> motaro, what?
22:57 <@isaacbw> "send jsdom to the client"?
22:58 < superjoe> sup ryah 
22:58 <@ryah> sup superjoe 
22:58 < motaro> There is this module to create DOM on the server side.
22:58 < superjoe> whatcha workin on these days
22:58 <@isaacbw> motaro, I know what jsdom is
22:58 <@ryah> superjoe: jersey club music
22:59 <@isaacbw> you mean rendering to html?
22:59 < motaro> yes
22:59 < superjoe> ryah, I hope that means creating electronic dance music
23:00 <@isaacbw> motaro, you can get the outerHTML property of the document
23:01 < superjoe> document.innerHTML should work too
23:01 < superjoe> not sure which would be best
23:01 <@isaacbw> hmm
23:01 < superjoe> s/best/better/
23:02 <@konobi> ryah: hey bro
23:02 <@isaacbw> jsdom is actually a really cool project
23:02 < CoverSlide> it is, but too slow for practical use
23:02  * ryah fist bumps konobi 
23:03 < motaro> Interesting I'm looking this 'Weld' module that does data binding to common html.
23:03 <@isaacbw> CoverSlide, really? How slow?
23:03 < motaro> and it needs dom to work.
23:03 < CoverSlide> well it's fine if you need to do one thing at a time
23:03 <@konobi> ryah: what's up? haven't heard from ya in a while
23:04 < motaro> So it makes an interesting solution to stop having to write html templates with unnatural markup, and just use common javascript to a already known html. 
23:05 < motaro> That way designers work can be separated from the logic programmer.
23:05 <@isaacbw> are there any native dom libraries
23:06 < CoverSlide> jsdom is probably the best choice. but if all you need is scraping, cheerio is probably best
23:06 <@isaacbw> I need to do some processing, so I don't think I have much choice
23:06 <@isaacbw> *manipulation
23:07 < CoverSlide> hrm, yeah i guess jsdom is for you
23:07 < othiym23> isaacbw: chimera is about as close as there's been yet to a "native DOM library"
23:07 < othiym23> but it does that by embedding a web browser in your Node process
23:07 < gildean> you can manipulate the results too with cheerio iirc
23:07 < othiym23> probably not any faster than jsdom, either
23:08 <@isaacbw> mm
23:08 < asdf12> hi
23:08 < asdf12> whats going on in the exciting world of node.js today
23:09 < CoverSlide> v0.10 to be launched sometime in 2014
23:09 < kenperkins> CoverSlide: we're 10+ months from .10? 
23:10 < CoverSlide> kidding
23:10 < kenperkins> <sigh>
23:10 < CoverSlide> put it keeps getting pushed back
23:10 < kenperkins> you had me, +1 to you
23:10 < CoverSlide> so who knows
23:11 < asdf12> i had a can of beans last night for dinner, that was pretty exciting
23:11 < kenperkins> isaacbw: I was asking earlier because I may be doing some indirect nodejs evangelism, was curious how you guys dealt with the trolls
23:11 <@isaacbw> I usually just eat peanut butter with my finger in bed
23:11 < asdf12> thats like a fancy banquet
23:12 <@isaacbw> lol
23:12 < daekano> well I know what I'm doing when I get home.
23:12 < Orbitrix> j/o?
23:12 < daekano> finger peanut butter
23:12 < Orbitrix> :O
23:12 < daekano> also, recharging my crystal
23:12 < asdf12> isaacbw: you even brought out the fancy silverware
23:12 < asdf12> you're finger, oooh
23:12 <@isaacbw> i go all out
23:12 < asdf12> your
23:13 <@isaacbw> I am finger
23:16 < CoverSlide> haters gonna hate
23:16 < CoverSlide> there's people who talk shit about javascript because they don't really know it
23:17 < daekano> Who's talking bad about javascript? I'll cut 'em.
23:18 < CoverSlide> it's easy to talk shit about stuff you don't know
23:19 < aandy> anyone have experiences/preferences with node-memcache and node-memcached?
23:19 <@isaacbw> use 3rdEden's
23:20 < aandy> ok, thanks :)
23:20 < CoverSlide> memcached is actively maintained
23:20 < CoverSlide> memcache not so much
23:21 <@isaacbw> he's got a new version coming out soon too
23:21 <@isaacbw> like, a proper version
23:21 <@isaacbw> er
23:21 < CoverSlide> and apparently memcache has a global variable leak
23:21 <@isaacbw> lololol
23:22 < jprichardson> What does everyone use for live reloading the browser during development?
23:22 <@isaacbw> F5
23:22 < CoverSlide> ctrl+R
23:22 < jprichardson> Hehehe
23:22 < jprichardson> I figured those answers were coming... haha
23:22 < CoverSlide> that seems sucha niche thing to do
23:22 < CoverSlide> don't know why I would use it
23:22 <@isaacbw> I did use live.js a bit though
23:22 <@isaacbw> it's best for designing, not so much for developing
23:23 <@isaacbw> you can update your css and just alt tab
23:23 <@isaacbw> or maybe even have windows open side by side :O
23:24 < jprichardson> isaacbw: I've been doing Node for the last 1.5 years and am finally diving into client-side dev. Figured there might be some slick solution for live reloading... but simplest usually wins ;)
23:25 <@isaacbw> jprichardson, you could try live.js
23:25 < aandy> CoverSlide: out of curioucity, where do you see a leak?
23:26 < CoverSlide> well apparently there was a patch in december to fix it
23:26 < CoverSlide> but the current published version is over a year old
23:26 < aandy> okay, thought maybe it was something that sprung out when you skimmed the lib/ :)
23:26 < aandy> right, i went ahead with edens memcached
23:27 < jprichardson> isaacbw: wow, that seems like a nice solution since it works in multiple browsers. I was thinking I'd have to use a Chrome extension. Thanks for the info.
23:27 <@isaacbw> yea, np
23:27 < CoverSlide> do you have to structure your code somehow to enable it?
23:27 <@isaacbw> live.js? you just include the script I think
23:27 <@isaacbw> it's really simple
23:28 < CoverSlide> does it just do automatic refreshes?
23:28 <@isaacbw> yea, whenever it detects file changes
23:28 < CoverSlide> oh ok
23:28 <@isaacbw> I'm not sure how it knows which files to watch
23:28 < CoverSlide> it would be cool if you can it inject the js when it gets reloaded
23:29 <@isaacbw> :P it's not that fancy
23:30 < jprichardson> OK, so live.js sends consecutive HEAD requests. But for it to work server-side, the server is going to need to support hot-code swapping. Now sure if Express supports that...
23:31 < jprichardson> At least that's my assumption, because I'm not sure how it'd know that files change other than through the server.
23:31 < CoverSlide> not sure if there's libraries for hot-code swapping, but node-dev is good for restarting the server, it's smart enough to tell when require'd files are modified and not just any js file
23:32 -!- mode/#Node.js [+o isaacbw] by ChanServ
23:36 < superjoe> <3 node-dev
23:36 < superjoe> fgnass has saved me so much time
23:37 < alphabitcity> when i install a node module, where is it coming from? who hosts it
23:37 < CoverSlide> npm
23:37 < CoverSlide> from the npm registry
23:37 < CoverSlide> it's hosted on iriscouch
23:38 < alphabitcity> does iriscouch own it or just host it
23:38 < CoverSlide> just hosts it
23:38 < alphabitcity> gotcha, thanks
23:38 < CoverSlide> isaacs owns and maintains it
23:38 < alphabitcity> cool, thanks for the help
23:40 < superjoe> is the operating cost published?
23:41 < CoverSlide> apparently they host it free as a courtesy
23:41 < CoverSlide> iriscouch is pretty cheap anyway
23:41 < superjoe> I know but it would be fun to find out how much it costs to run
23:41 < superjoe> *somebody* is footing the bill
23:42 < CoverSlide> not sure how to quantify that
23:43 < chilts> I think iriscouch just wouldn't bill it and the costs get consumed by the business
23:43 < chilts> not sure whether they would also quantify how much it would cost a customer, but it would certainly cost them a lot less in actual payments to their suppliers
23:44 < chilts> and the publicity is well worth it I'm sure
23:44 < CoverSlide> fo sho
23:47 < harbhub> does node read the lines in order?
23:48 < harbhub> let's say i call a function
23:48 < harbhub> fn();
23:48 < harbhub> var fn = function () {console.log('1st');console.log('2nd');};
23:49 < harbhub> can i trust that it will always log 1st and THEN 2nd?
23:49 < harbhub> since it is async i wanted to ask this
23:49 <@konobi> the javascript is sync
23:49 <@konobi> IO interaction is async
23:51 < harbhub> ok
23:52 < isao1> @harbhub n.b. that var foo = function() {..} is defined in source order, but function foo() {} is avaialble "hoisted" so this works:
23:52 < isao1> foo(99)
23:52 < isao1> function foo(num) {...}
23:52 < isao1> but this doesn't:
23:52 < isao1> foo(99)
23:52 < isao1> edit
23:52 < isao1> var foo;
23:52 < isao1> foo(99)
23:53 < isao1> foo = function(num)..
23:53 < isao1> rooting around for a link, but my not finding it..
23:54 < isao1> maybe something here https://www.google.com/search?q=javascript+hoisting
23:54 < chilts> isao1: I think he was talking about the console.logs rather than the order he pasted the code :)
23:54 < isao1> ah
23:54 < isao1> nm :)
23:54 < chilts> :)
23:55 < isao1> in that case, console.log i/o is sync..
23:56 < isao1> iirc
--- Log closed Tue Feb 12 00:00:05 2013
