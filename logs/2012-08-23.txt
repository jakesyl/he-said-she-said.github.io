--- Log opened Thu Aug 23 00:00:08 2012
00:00 < joshwnj> what's the link to that google doc Dragonblade ?
00:00 < Dragonblade> https://docs.google.com/document/d/1hc6TRKy9_knyOHzA9cp1Ps61Dr-VtI0JlgNakKs73GU/edit
00:02 < perezd> ANN: http://perezd.github.com/streamable/
00:06 < jkevinburton> can someone set me on the right path the import partials in ejs using express.js 3.0
00:10 < joshwnj> Dragonblade: ok so now you need to use the debugger to find out what your state looks like leading up to the error
00:11 < joshwnj> by the time the error happens you've already got an invalid state - so you need to find out how it got that way
00:11 < Dragonblade> hmmmm
00:11 < Dragonblade> well it said http wasn't defined
00:13 < tbrock> what does the <%- %> (minus sign) in ejs do?
00:13 < tbrock> i know the = outputs the variable
00:13 < tbrock> or result of the evaluation
00:13 < tbrock> but i never know what the minus does
00:14 < jgornick> hey guys, is it possible to use npm against my package.json and provide a list of upgradeable dependencies? most of my dependencies are specified using "1.2.x" where I can stay within the minor version, however, it would be nice to see if there are new versions available.
00:15 <@Nexxy> jgornick, try `npm outdated`
00:16 <@Nexxy> tbrock, - is escaped, = is not
00:16 <@Nexxy> tbrock, or vice versa, I forget right now
00:16 < Dragonblade> oh I never defined the .js in debugger
00:16 < Dragonblade> no wonder
00:16 < TheEmpath> so
00:16 < TheEmpath> anyone else have a hot programmer girl in their office? o____O
00:17 < Lorentz> I wiiish
00:17 <@Nexxy> not appropriate.
00:17 < joshwnj> yeah guys, grow up
00:17 < jerrysv> Nexxy: olynode was fun, you should have gone
00:18 < TheEmpath> my boss came by and said "Here, a new subodinate" and its a very attractive female.  the otherwise painfully quite engineering room suddenly came to life and its a problem :X
00:18 -!- mode/#Node.js [+b *!*TheEmpath@*.4over.com] by Nexxy
00:18 -!- TheEmpath was kicked from #Node.js by Nexxy [TheEmpath]
00:18 <@Nexxy> jerrysv, when was it?
00:18 < ccowan> See ya!
00:19 < jerrysv> Nexxy: last night :) they share the space with the olympia arduino group, so it was a mixed crowd
00:19 -!- mode/#Node.js [-b *!*TheEmpath@*.4over.com] by Nexxy
00:20 < konobi> he brought up an interesting question... though asked inappropriately... and probably not the right forum for it
00:21 <@Nexxy> konobi, I kick/banned him for harassing me in PMs
00:21 <@Nexxy> which he is still doing
00:21 <@Nexxy> for being politely asked to take that kind of discussion elsewhere
00:21 < konobi> ah
00:21 <@Nexxy> I will paste it in a minute lol
00:21 < holzp> Theres always a hot programmer in my office
00:21 < holzp> and i work alone....
00:21 <@Nexxy> lol that's the spirit
00:22 < ccowan> me too...
00:22 < Dragonblade> XD
00:22 < konobi> holzp: your photo of DHH doesn't count
00:22 < Dragonblade> LMAO
00:23 -!- mode/#Node.js [+o konobi] by ChanServ
00:23 <@Nexxy> jerrysv, that sounds cool. I know you mentioned it but I wasn't really paying attention
00:23 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
00:24 <@Nexxy> FTR you should be careful what unmasked IPs you troll people from
00:24 < ccowan> UUUUGGGHHHH!!!! I hate finishing projects! I feel all lost and irritated.
00:25  * Nexxy forwarding logs to TheEmpath's employer
00:25 < jerrysv> Nexxy: next time i'll pop in a day or so in advance. except that i didn't have net access for a few days
00:25 < jerrysv> mmalecki: hi!
00:26 <@Nexxy> jerrysv, yeah that'd be nice
00:26 < jerrysv> Nexxy: i only have a 2 seater, but chances are laurie would never go up with me, so gives me an extra seat :)
00:26 < ccowan> We should start "logsofshame.com"
00:27 < Randomachiever> o
00:27 < luckysmack_> i have a site that will have mobile support. are there any modules in npm that can get a screen grab of camera whether its on desktop or mobile?
00:28 -!- mode/#Node.js [-o maxogden] by ChanServ
00:29 <@Nexxy> wow, now he's submitting troll pull requests on my projects on github
00:31 < TheEmpath1> oh we're back
00:31 < joshwnj> classy
00:31 < TheEmpath1> are we going to discuss this like people or are we just going to use power to propel the political agendas we see on TV?
00:31 <@Nexxy> http://imgur.com/bhzXY
00:31 < TheEmpath1> because if you speak in power only, i can speak in power only
00:31 < TheEmpath1> and its gonna get really back
00:31 -!- mode/#Node.js [+b *!*TheEmpath@*.4over.com] by Nexxy
00:31 -!- TheEmpath1 was kicked from #Node.js by Nexxy [TheEmpath1]
00:32 < DTrejo_> good work
00:32 <@Nexxy> someone's wasting company time
00:32 <@Nexxy> lol
00:32 < Dragonblade> Ok so debugger reads the exact same error :P
00:32 < DTrejo_> seems like trolls dont generally know how to join more than one channel at once
00:32 < Dragonblade> Ill prolly swap the .coffee with the javascript file
00:33 <@Nexxy> DTrejo_, luckily freenode protects you from being seen on multiple channels unless the troll is already in them
00:33 < DTrejo_> freenode++
00:34 < Dragonblade> so is javascripts version of .coffee just .js as well?
00:34 < TooTallNate> Nexxy: lolwtf, haha
00:34 < jerrysv> trolololol
00:34 <@Nexxy> TooTallNate, seriously
00:35 <@Nexxy> TooTallNate, https://gist.github.com/3430820
00:35 <@Nexxy> he took to github after I refused to respond
00:35 <@Nexxy> lol
00:35 < TehShrike> That's embarrassing
00:35 <@Nexxy> highly
00:36 < joshwnj> woooowwww...
00:37 < Dragonblade> Josh
00:37 < TehShrike> That poor woman
00:37 < Dragonblade> Imma swap the .coffee
00:37 < Dragonblade> is Javascripts version .js?
00:37 < joshwnj> yep
00:37 < Dragonblade> ok
00:40 < Killswitch> Nexxy: I bet that guy gets all the girls.
00:40 -!- mode/#Node.js [+o ryah] by ChanServ
00:41 < Dragonblade> How exctly do you tell whatever your running to generate the .js?
00:42 < Dragonblade> seems how I swapped the .coffee
00:42 < ccowan> Nexxy: uh......wow!
00:42 < Dragonblade> Told you I was new >_>
00:43 < Dragonblade> nvm it uses the existing one
00:43 < ccowan> Dragonblade: CoffeeScript puts a comment at the top of the complied javascript
00:44 < Dragonblade> well Im seeing if the server will not crash with the .js
00:44 < bradleymeck> isaacs: has chown always complained about it needing an integer for both gid and uid? TypeError: uid must be an int
00:45 < Dragonblade> HAH same issue
00:45 < TooTallNate> bradleymeck: i believe so, hence: https://github.com/isaacs/uid-number
00:46 < bradleymeck> ewww
00:51 < _johnny> bradleymeck: pretty sure that's the way the interface has been always
00:51 < bradleymeck> ugly but i can work around
00:52 < joshwnj> ANN: hey all i've published a package and would love some feedback on it https://npmjs.org/package/statelet
00:52 < joshwnj> it's a different approach to doing event-based stuff
00:53 < _johnny> bradleymeck: or you could add a passwd extented version. take the passwd/groups file as optional arguments
00:53 < ccowan> Why is it that when I'm using a RDBMS I always wish I'm using a NoSQL DB and when I'm using a NoSQL DB I always wish I'm using an RDBMS?
00:53 < joshwnj> ccowan: because data is tricky :D
00:54 < ccowan> Totally!
00:54 < Dragonblade> Alright Imma try to solve the recursion thing x.x
00:54 < joshwnj> i know that feeling :)
00:54 < _johnny> ccowan: you're so right, lol 
00:54 < joshwnj> good luck Dragonblade 
00:54 < Dragonblade> Yeah I will need it
00:54 < Dragonblade> I added the Length back into the nex function
00:55 < Dragonblade> so Im back at the spot you predicted
00:55 < wizard_2> Anyone else haven issues updating owners on npm?
00:56 < joshwnj> Dragonblade: so i think what you want to look at, is instead of just calling handleFrame() again right away (and getting into this recursion loop) you want something that says "listen for the next frame to arrive and then run my callback"
00:56 < joshwnj> make sense?
00:58 < ccowan> Anyone using CouchDB with a great amount of success?
00:58 < Dragonblade> well thats what I figured
00:58 < reconbot> ccowan: npmjs.org does
00:58 < Dragonblade> cause I think what its doing is trying to detect the next .mp3 without a for loop
00:58 < bradleymeck> ccowan: we are using it and it works fine
00:58 < Dragonblade> and if there isnt one then it shuts down
00:59 < ccowan> bradleymeck: how's the resiliancy?
00:59 <@isaacs> bradleymeck: yes.
00:59 < bradleymeck> would probably want to move to something else but we basically require the _changes feed unless we want to write our own replication and semi-realtime data feed for a db without an orm (I am not writing a postgres addon)
00:59 < Dragonblade> or so I think thats what your saying
01:00 < bradleymeck> ccowan: its pretty good, we do see the update conflicts stack up so you may want to find the causes of that
01:00 < bradleymeck> other than that it works (though im a universal skeptic of all tech these days)
01:00 < ccowan> I know I want to stay away from Mongo
01:01 < ccowan> We are using Redis right now and it's been wonderful but we don't put anything in there that can't be regenerated
01:01 < ccowan> WE mainly us it for leader boards, feeds and counters
01:01 < bradleymeck> one nice thing about couch at least for now is you can just use file backups
01:01 < _johnny> ccowan: i'm curious, what turned you off from mongo?
01:02 < ccowan> too many horor stories... 
01:02 < ccowan> I really like the idea of having a restful interface like CouchDB
01:03 < bradleymeck> ccowan: if you really want stupid redundancy and you dont have terribly complex queries id look at riak
01:03 < ccowan> That's another one on my list
01:04 < ccowan> our biggest issue is occansoinally we need to index our data or rebuild data in Redis when we find an error
01:04 < ccowan> so we have to crawl our data and do a bunch of summaries
01:05 < ccowan> It basically amounts to map/reduce type activities
01:05 < Nuck> Anyone know how to change the environment for the subshell on Nave to match my .zshrc?
01:05 < bradleymeck> whew that build server was easier than expected
01:06 < ccowan> bradleymeck: have you used Riak?
01:06 < bradleymeck> ccowan: a bit, but not in production yet, i wish i could
01:06 < bradleymeck> stuck with _changes for now
01:07 < ccowan> I'm on MySQL right now... but since I'm the decission maker I can pretty do what I want (I just have to suffer with the coniquences)
01:07  * ccowan didn't choose MySQL... it's a legacy thing.
01:09 < Lorentz> chose to stick with legacy!
01:11 < _johnny> whatever you do, just make sure you differentiate between error 40 and db error :)
01:13 < sahat> Is there a good example of a complete node.js project on github that I could take a look at, learn from, source code is very well documented.
01:15 < AAA_awright> Like an application?
01:19 < Dragonblade> x.x I got nothing on the frameHandle()
01:22 < aaronblohowiak> is this channel logged somewhere?
01:22 < voodootikigod> felix used to
01:22 < voodootikigod> way back in the day
01:22 < voodootikigod> why
01:22 < astropirate> aaronblohowiak, yes. the CIA
01:22 < voodootikigod> what you looking for
01:22 < voodootikigod> !logs
01:22 < aaronblohowiak> !logs
01:23 < voodootikigod> haha
01:23 < aaronblohowiak> ;D
01:23 < aaronblohowiak> i would like to understand the recent drama on twitter
01:23 < _johnny> what drama?
01:23 < voodootikigod> http://irclogger.com/.Node.js/2012-08-22
01:23 < aaronblohowiak> danke
01:23 < voodootikigod> https://gist.github.com/3430820
01:23 < voodootikigod> should be the scope you seek
01:24 < voodootikigod> less drama
01:24 < mmalecki> http://piscisaureus.no.de/channels
01:24 < voodootikigod> pretty clear cut asshole
01:24 < voodootikigod> mmalecki: he doesn't log node.js
01:25 < mmalecki> oh? lame
01:25 < mmalecki> http://static.izs.me/irclogs/node.js
01:25 < ccowan> Did that spill over into twitter now
01:25 < paul_irish> bigtime.
01:25 < ccowan> Jeez! That guy needs to back off
01:25 < Dragonblade> Ok I give for the night. nortims.js.....you win this one
01:25 < voodootikigod> i think first github
01:25 < voodootikigod> then twitter
01:26 < paul_irish> https://twitter.com/#!/search/realtime/12dcode if anyone realllly wants to follow along. can't say i recommend it.
01:26 < astropirate> aaronblohowiak, why do you seek drama? Have too much time on your hands? Because I got lots of projects you can help with XD
01:26 < DTrejo_> gettin slammmmed
01:26 < voodootikigod> i miss the good ole days
01:26 < voodootikigod> where people just respected people for being people
01:26 < maxogden> voodootikigod: SHUT UP NOOB
01:26 < aaronblohowiak> voodootikigod: And all the children were above average?
01:27 < astropirate> voodootikigod, that never was the case :(
01:27 < voodootikigod> and we all wrote code instead of troll
01:27 < maxogden> #minaswan #jifasnif
01:27 < voodootikigod> or
01:27 < rwaldron> voodootikigod or shot them with a 6-shooter
01:27 < rwaldron> wild west style.
01:27 < voodootikigod> in this specific case, acted like an asshole
01:27 < voodootikigod> astropirate: bs
01:27 < my200> When node.js is advertised as having asynchronous I/O, does that mean other http servers idle the process until the http response is completely sent?
01:28 < voodootikigod> it used to be something better, or maybe I just was in a small enough world view at that point in time to miss these things
01:28 < aaronblohowiak> my200: s/thread/process depending on the server
01:28 < dominictarr> my200, they idle the thread. yes.
01:28 < voodootikigod> maxogden: what is: minawan?
01:28 < maxogden> voodootikigod: you'd like it, its from early ruby days
01:28 < my200> ic, thanks
01:28 < astropirate> voodootikigod, http://en.wikipedia.org/wiki/Rosy_retrospection
01:28 < maxogden> voodootikigod: "matz is nice and so we are nice"
01:28 < voodootikigod> hahah
01:28 < voodootikigod> in know
01:28 < voodootikigod> yes
01:28 < aaronblohowiak> :D
01:29 < voodootikigod> i know
01:29 < voodootikigod> took a while to drudge up
01:29 < voodootikigod> also brixen brought it to the forefront of noders at jsconf
01:29 < voodootikigod> but i love the jifasnif you have coined
01:29 < voodootikigod> works well
01:30 < maxogden> they are two separate values that a community should strive for: niceness and funnness
01:30 < joshwnj> "jif it 'n snif it"
01:31 < voodootikigod> maxogden: I would contend humility would be good
01:31 < voodootikigod> but that might be subcategory of niceness
01:31 < mmalecki> dunno, I just like being nice to people
01:32 < mmalecki> because it's nice!
01:32 < maxogden> ninaswan?
01:32 < mmalecki> ninaswan?
01:33 < maxogden> niceness is nice and so we are nice :)
01:33 < mmalecki> oh, yeah, love that
01:33 < astropirate> Anyone wanna play Battlefield 3?
01:33 < paul_irish> ninaswan! :D
01:34 < maxogden> programmingpreschool.com should be a thing
01:34 < aaronblohowiak> Nina Swan is my hero!
01:34 < maxogden> and it should have pull request etiquette and negative twitter rant etiquette
01:34 < maxogden> "if you cant tweet something nice dont tweet anything at all"
01:38 < jrajav> I'll tweet you in the tweet, mothertweeter
01:38 < yogurt_truck> i prefer the detpaky twitter etiquette principle
01:38 < yogurt_truck> for example, this tweet https://twitter.com/ALEXANDERISM/status/218220740342849536
01:38 < yogurt_truck> why. why.
01:39 < yogurt_truck> i mean, "nothing beats the original" is usually a ridiculous thing to say, _even_ with a context
01:39 < yogurt_truck> let alone as a context-less tweet
01:40 < maxogden> haha
01:40 < maxogden> side question: is yogurt truck a real thing? like an ice cream truck but with yogurt?
01:41 < jrajav> Isn't ice cream called yogurt in some countries
01:41 < yogurt_truck> jrajav: that'd be weird
01:41 < aaronblohowiak> jrajav: there is "frozen yogurt", which is a different treat
01:41 < ccowan> Wow... this guy! How do you act like that? I mean I've said some things that I've regreated in my life and quickly recognized it. But when you stick to you guns and everyone says you're wrong. Take a hint.
01:42 < jrajav> Admitting that you're wrong takes a certain strength of character
01:42 < jgornick> test
01:42 < jrajav> Not that I'll admit that I was wrong about yogurt
01:42 < jrajav> Just saying
01:43 < yogurt_truck> i'll admit that i'm never wrong about anything
01:44 < ccowan> I guess... I wonder if he's going to stop using Node.js now? 
01:44 < yogurt_truck> actually, wasn't there a scifi book that was something like that? a world where nobody is wrong, ever?
01:45 < yogurt_truck> who's this person, ccowan?
01:45 < ccowan> yogurt_truck: https://twitter.com/#!/search/realtime/12dcode
01:45 < ccowan> Patrick Ryan
01:46 < shlevy> If I need to compress a bunch of files in parallel, is it best to just execFile a bunch of times and pipe to it or is there another good option?
01:46 < ccowan> shlevy: I do something similar... works like a charm
01:46 < shlevy> ccowan: fork/exec isn't a big overhead?
01:47 < ccowan> not like it is in PHP
01:47 < ccowan> shlevy: I'm assuming that's why you're asking.
01:47 < mscdex> aren't there async compression libs for node?
01:48 < Dragonblade> oh man
01:48 < mmalecki> mscdex: zlib module in the core
01:48 < Dragonblade> Just went through my random gameplay screenshots
01:48 < Dragonblade> Found my epic worthy one XD
01:48 < shlevy> mmalecki: Does that use threads under the hood?
01:48 < mmalecki> shlevy: yeah, I think it does, let me check
01:48 < Dragonblade> Nice screenie is nice
01:48 < Dragonblade> https://sphotos-b.xx.fbcdn.net/hphotos-ash3/s720x720/579510_3267685652277_856721454_n.jpg
01:49 < shlevy> Ah, that'd be awesome
01:49 < shlevy> How about encryption?
01:49 < mmalecki> shlevy: yup
01:49 < mscdex> mmalecki: i meant like zip
01:49 < yogurt_truck> ccowan: too many tweets for me to get the story. basically a guy got banned from this channel for being a sexist pig, right? 
01:50 < mscdex> multiple file stuff
01:50 < mmalecki> shlevy: through uv_queue_work
01:50 < ccowan> yogurt_truck: yup
01:50 < shlevy> mmalecki: Awesome
01:50 < mmalecki> mscdex: then there's tar
01:50 < mmalecki> (native module)
01:50 < mmalecki> I mean, js-only
01:51 < mmalecki> native is kinda misleading these days
01:51 < ccowan> First he was asked to stop then he made another comment got banned and when nuts 
01:51 < jrajav> And the conversation apparently degraded into sexist mudslinging
01:51 < jrajav> inb4 Godwin's law
01:52 <@Nexxy> yogurt_truck, the ban was issued for refusing to comply with channel rules and being an asshat in general, yes :)
01:52 < wltsmrz> What are the rules
01:52 <@Nexxy> don't be a dick
01:52 <@Nexxy> lol
01:52 < mmalecki> wltsmrz: don't be a dick
01:52 < wltsmrz> Interesting
01:52 <@Nexxy> his initial comments weren't all that bad
01:53 < yogurt_truck> "Patrick Ryan: For those who like having ten thousand steps before getting to the starting line, try out #Symfony." <-- guy sure sounds like a insufferable dolt
01:53 <@Nexxy> it was the backlash from the request to tone it down
01:53 < ccowan> Nexxy: I love that he's justifying his behaivor for attacking you becaue you booted him.
01:53 <@Nexxy> yeah, kind of backwards
01:53 < wltsmrz> I ask out of curiosity because I think you were close to banning me for mentioning offhandedly the presence of chick-fil-a (Nexxy). 
01:53 <@Nexxy> if he had chilled out the ban would have been for like 3 minutes anyway lol
01:53 < wltsmrz> But it sounds like he probably deserved the ban.
01:53 <@Nexxy> wltsmrz, yeah, hot topics of debate should generally be kept out of community discussion
01:53 <@Nexxy> it just causes unnnecessary contention
01:54 < maxogden> i am a hairy manly man and i have kicked people for the same reason
01:54 <@Nexxy> anyway; this discussion is probably out of scope for #node.js lol
01:54 < ccowan> :D
01:54 < wltsmrz> Yeah... maybe if I said "Hey guys this chick-fil-a nonsense! Whew don't get me started!"
01:54 < maxogden> Nexxy: http://i.imgur.com/5DJg7.png
01:54 < othiym23> hay guyz
01:54 < maxogden> "the mummy attacks mmalecki" gets me every time
01:54 < yogurt_truck> omg, guys
01:54 < othiym23> I hear there's a lot of empathy in this channel today
01:54 < yogurt_truck> you shouldn't have given me this guys' twitter's URL
01:55 <@Nexxy> maxogden, e-moting is one of my e-favorite e-pasttimes
01:55 < yogurt_truck> his TL literally ruined my day now
01:55 < mmalecki> maxogden: ahahahahaha
01:55 < mmalecki> maxogden: and I don't even remember that!
01:55 < maxogden> i didnt either haha
01:55 < ccowan> I wonder how long it takes to make it to HN?
01:56 < jrajav> bash.org more likely
01:56 < jrajav> We need a bash.js
01:56 < othiym23> HN: the thinking man's (sic) Reddit
01:56 < Nuck> So men who think don't use Reddit, no?
01:56 < jrajav> I think and I don't use Reddit
01:56 < mmalecki> https://github.com/joyent/node/blob/master/src/node_zlib.cc#L178
01:56 < Nuck> Also, Nave - how i set prompt 4 fish?
01:56 < mmalecki> lol
01:57 < jrajav> And I'm pretty sureI'm a man
01:57 < ccowan> I think I use reddit.
01:57 < Nuck> (How do I set teh prompt in Nave)
01:57 < othiym23> I leave as an exercise for the reader which portion of that clause the (sic) was attached to
01:57 < shlevy> mmalecki: Where did you check if zlib spun off threads under the hood? I want to check the same for crypto
01:58 < othiym23> mmalecki: has that assert ever passed?
01:58 < ccowan> mmalecki: Ah the glorious assert('wtf?');
01:58 < jrajav> mmalecki: That may be the single greatest assert I've seen yet
01:58 < mmalecki> shlevy: https://github.com/joyent/node/blob/master/src/node_zlib.cc
01:58 < shlevy> Thanks
01:58 < ccowan> mmalecki: I used to do printr('wtf'); to trace issues in PHP... til it made it to production. Oops!
01:59 < mmalecki> ccowan: I mean, who didn't?
01:59 < ccowan> ha ha
01:59 < mmalecki> othiym23: that assertion can't pass, but I never seen that happen
01:59 < Nuck> ccowan: I console.log(1) and whatnot
01:59 < othiym23> mmalecki: I was having some kind of dark imagining of something replacing 0
01:59 < Nuck> Because I can track a process like that :D
01:59 < othiym23> that's almost possible in Ruby!
02:00 < mmalecki> othiym23: #define 0 1, lol
02:01 < othiym23> wait, I meant you can *totally* do that in Ruby
02:01 < othiym23> it just takes some clever abuse of metaprogramming
02:02 < Nuck> mmalecki: D: Don't remind me that's possible, please?
02:02 < Nuck> I like to pretend that such terrible metaprogramming is impossible
02:02 < Nuck> Go all "LALALALA I'M NOT LISTENING" to it
02:02 < jrajav> Hey Nuck 
02:02 < jrajav> psst
02:02 < jrajav> C++ exists
02:03 < Nuck> jrajav: NO, GO DIE
02:03 < Nuck> >:C
02:03 < jrajav> heehee
02:03 < jrajav> Btw node.js is kind of
02:03 < jrajav> you know
02:03 < jrajav> WRITTEN IN C++
02:03 <@konobi> Nexxy: is that asshat still at it?
02:03 <@Nexxy> konobi, definitely lol
02:04 <@Nexxy> not that people aren't egging him on
02:04 < jrajav> He'll be stroking his e-peen for the next hour or two
02:04 < othiym23> vivid, jrajav
02:05 < wltsmrz> Where can I read this person's material
02:05 < wltsmrz> He who was banned
02:06 < othiym23> wltsmrz: https://twitter.com/maxogden/statuses/238446615197782016
02:06 < wltsmrz> Thanks
02:06 < othiym23> wltsmrz: also https://gist.github.com/3430820
02:06 < maxogden> Nuck: haha i do the same thing re: metaprogramming
02:07 < maxogden> Nuck: a few years ago when i was getting really into ruby i was like "I HAVE SUCH POWER!!" then after a year or two i was like "THIS HAS RUINED ME!"
02:07 < sahat> Are there any IntelliJ IDE users? I can't seem to find the shortcut key to delete current word similar to Vim's <ciw>.
02:09 < Nuck> maxogden: Ruby ruins people.
02:09 <@konobi> sahat: why not use vim?
02:09 < Nuck> Ruby ruins everything :(
02:09 < Nuck> Ruby ruined me for all the ladies.
02:09 < wltsmrz> Delete current word is dw, change word is cw
02:10 < sahat> @konobi: I am not that good with vim, and configuring it takes ages. Whereas with IntelliJ it works awesome out of the box.
02:10 < othiym23> Ruby is made out of AWESOME and SPACE WIZARDS
02:10 < othiym23> really fat AWESOME and slow SPACE WIZARDS, but still
02:10 <@konobi> sahat: it's well worth learning
02:10 < hongymagic> @sahat: vim works out of the box too
02:11 < othiym23> the idea (so to speak) of using a Java-based IDE to write JS makes me sad
02:11 <@konobi> komodo also actually has proper vim bindings
02:11 < Nuck> sahat: As a former vim-hater, I have to admit it's awesome now
02:11 < dominictarr> othiym23, I have a js text editor written in js.
02:12 < othiym23> dominictarr: is it called Cloud9? ;)
02:12 < Nuck> I have a Python-based editor for my JS
02:12 < Nuck> I call it Sublime Text 2
02:12 < Nuck> I also have vim, but ST2 is my <3
02:12 < sahat> othiym23: what's with the java-based IDE hate?
02:12 < mmalecki> http://www.vicoapp.com/ is nice
02:12 < othiym23> ST2 is pretty sweet, but I burnt all the ships and converted to vim at the beginning of the year and am not looking back
02:12 < jrajav> Vim and ST2 4 life
02:13 < mmalecki> but lacks lots of vim features
02:13 < jrajav> Isn't vico no longer developed?
02:13 < othiym23> sahat: IDEA is great for statically-typed languages, and I used it religiously when I was a Java developer
02:13 < sahat> @konobi: that's what everyone says these day, without explaining why.
02:13 < Nuck> ST2 has been adding vim bindings, does anyone here use them?
02:13 < mmalecki> dunno https://github.com/vicoapp/vico
02:13 < dominictarr> othiym23, no, https://npm.im/hipster
02:13 < othiym23> sahat: but it's so sloooow and a lot of its features just don't map to how I do my Node development
02:13 < dominictarr> I wrote it last week, it runs the the terminal.
02:13 < jrajav> mmalecki: I think it stopped being developed and then went open source
02:14 < jrajav> mmalecki: I'm relying only on my extremely fuzzy memory though
02:14 < othiym23> dominictarr: https://gist.github.com/3431373
02:14 < Nuck> jrajav: Sounds like TM2
02:14 < Nuck> ;)
02:14 < sahat> othiym23: can you please elaborate on the "slow" part? Startup? Editing? Autocompletion? I have Macbook Air 128GB SSD with 8GB RAM, and it's not slow at all. Granted I haven't used it for large projects with thousands lines of code.
02:15 < Nuck> thousands is nothing
02:15 < othiym23> sahat: all of the above
02:15 < Nuck> Try tens of thousands :D
02:15 <@konobi> sahat: http://www.activestate.com/komodo-edit/compare-with-komodo-ide
02:15 < jrajav> For what it's worth, the main reason I use ST2 is that it *doesn't* have vim bindings
02:15 < wltsmrz> sahat, I have no hatred for IntelliJ, just haven't used it in a long time :)
02:15 < Nuck> jrajav: It has vim bindings
02:15 < jrajav> I am very used to OS X/Nextstep/Emacs bindings
02:15 < othiym23> sahat: also Java's text rendering makes my brain hurt, although it got better with Java 6
02:15 < Nuck> jrajav: vintage mode, bro
02:15 < jrajav> And other OS X integration
02:15 < jrajav> Nuck: Not complete
02:15 < dominictarr> othiym23, lol
02:15 < jrajav> But then again what faux vim bindings are
02:16 < Nuck> Obviously not, jrajav, but they're working on it :P
02:16 < Nuck> TBH I've still yet to figure out how to enable vintage mode
02:16 < jrajav> The other good reason to prefer ST2: Plugins for autocomplete and code navigation
02:16 < Nuck> I miss :dd
02:16 < jrajav> Technically vim has those but it's not great and it's not designed for it
02:16 < jrajav> Also refactoring
02:17 < Nuck> jrajav: autocomplete on ST2 is terrible
02:17 < Nuck> I fucking hate it
02:17 < hongymagic> vim has all of the above.
02:17 < jrajav> Can't say I agree there
02:17 < jrajav> I use it every day
02:17 < sahat> othiym23: are you on Linux by any chance?
02:17 < Nuck> "callTAB"--> "net.createClient"
02:17 < Nuck> And I go "WAT"
02:17 < jrajav> hongymagic: Which I said, with a qualification
02:17 < jrajav> hongymagic: Do you actually use any of those features?
02:17 < othiym23> the Node community is very rude: https://gist.github.com/3431422
02:17 < Nuck> I only use vim for lightweight things
02:18 < hongymagic> nope, only word completion that comes with vim 7 i think. ctrl + n
02:18 < othiym23> sahat: nope, OS X, but I found Windows' rendering of aliased monospaced fonts even more eye-gougingly bad
02:18 < Nuck> othiym23: I believe the Node.js community has a collective "I don't give a fuck" RE: that
02:18 < othiym23> Nuck: so to speak
02:18 < othiym23> I wonder if I can come up with a compelling reason to use 'fuck' in my package.json
02:18 < jrajav> You haven't seen bad antialiasing until you've run Chrome on Windows
02:19 < jrajav> Holy hell
02:19 < Nuck> jrajav: Have you seen the kerning on the print system in Chrome?
02:19  * Nuck vomits
02:19 <@konobi> othiym23: brainfuck is an actual programming language
02:19 < jrajav> Not sure I care to
02:19 < jrajav> haha
02:19 < Nuck> It's like they used Math.random() to space it all
02:19 < wltsmrz> There are some tricks with Chrome though
02:19 < jrajav> hongymagic: How does that work, out of curiousity?
02:19 < othiym23> konobi: oh, I'm well aware
02:19 < wltsmrz> You can make the font bearable
02:19 < jrajav> hongymagic: Just symbols in the current file?
02:19 <@konobi> othiym23: so that's about 80-90% of those covered
02:20 < sahat> othiym23: Linux has it the worst, although I agree text rendering isn't that great on Windows either. 
02:20 < othiym23> man, the npm package of fuck included the backup of package.json~
02:20 < othiym23> how thoughtful
02:20 < hongymagic> jrajav: yes i think so. so you do get random completion entries in there. not the best
02:21 < othiym23> Random Yang appears to live up to hir name
02:21 < othiym23> jrajav, hongymagic it's like TextMate, it'll use symbols in any of the loaded buffers for completion
02:21 < jrajav> hongymagic: That's the main problem with autocompletion that attempts to be language-agnostic
02:21 < othiym23> that may be controlled by a preference, though
02:22 < othiym23> my vim installation is pretty blinged out at this point
02:22 < othiym23> it has its own git repository and installer script
02:22 < hongymagic> jrajav: there are other completion plugins, which i can do without
02:22 < jrajav> hongymagic: I was referring to autocomplete tailored to the current language, that would also pull in symbols from imports/requires/etc.
02:22 < zivester> where is the url in expressjs or connect in the request object?  I need it without the query params... so not req.url... does it exist or should i just do req.url.replace(/?.*/,'') ?
02:22 < jrajav> And ideally also respect scoping, fill in parameters, etc.
02:23 < othiym23> jrajav: getting good context-sensitive completion with a dynamic language like JavaScript seems to be a fool's errand
02:23 < hongymagic> jrajav: can't really comment much on that sorry. never used any of the plugins
02:23 < othiym23> zivester: var url = require('url'); url.parse(req.url)
02:24 < maxogden> Nexxy: https://gist.github.com/3431459
02:26 < hongymagic> othiym23: yeah there are a lot of bootstrapping tools for vim settings including: https://github.com/mathiasbynens/dotfiles
02:26 < hongymagic> and my fork of it
02:26 < The_Fly> any browserify and ender users here? have a question about them
02:26 < hongymagic> which contains git submodules for pathogen based vim bundles. 
02:26 < othiym23> hongymagic: http://github.com/othiym23/.vim
02:27 < othiym23> my install script makes me laugh (also, is buggy)
02:27 < The_Fly> i like how ender allows one to compose submodules into the $ var, but browserify is a great solution for bundling node modules...not quite the same approach but am looking for something to bridge the gap
02:28 < hongymagic> othiym23: https://github.com/othiym23/.vim/blob/master/vimrc#L95
02:28 < othiym23> hongymagic: I use that aaaaaaaaalllll the time
02:28 < othiym23> so much that I forgot it wasn't a built-in
02:28 < maxogden> The_Fly: i find modules that extend $ automatically to be annoying, i like to pick what variables modules are going to get loaded as
02:29 < Nuck> I set $PYTHON and yet ./configure still doesn't work, wTF?
02:29 < yogurt_truck> is it me or is vim's markdown syntax hl total bananas
02:29 < othiym23> yogurt_truck: it depends on which markdown bundle you're using, I suppose
02:29 < hongymagic> yogurt_truck: its not just you
02:29 < sahat> Is it possible to create snippets of code in Vim? If so what are they called: live templates, macros, code snippets? (e.g. func expands to full JS function definition, and place your cursor on the temporary function name block automatically. When I press tab, jump to function arguments, TAB again jumps to function body).
02:29 < The_Fly> the only ender packages i need to use are, domready, qwery, bean, bonzo, etc... with the aim of avoiding the large payload of jquery
02:29 < othiym23> vimwiki's has gotten much better in the recent past, but then you're using vimwiki and you have several newer, more annoying problems
02:29 < The_Fly> however, jquery has some major advantages over microframeworks
02:29 < Nuck> ./configure relies on $PYTHON, right?
02:30 < The_Fly> jquery probably a lot more stable also
02:30 < hongymagic> yogurt_truck: i use iA Writer for markdown files
02:30 < othiym23> sahat: I use snipmate, which is basically TextMate-style snippets
02:30 < othiym23> proto<TAB> BAM instant prototoype snippet
02:31 < Nuck> I never could get used to snippets
02:31 < yogurt_truck> hongymagic: oh, i've been meaning to try that out. thx for reminding me
02:31 < Nuck> I hand-type everything
02:31 < sahat> othiym23: yes that that's what I was asking. I also noticed it was last updated in 2009. I assume it works with the latest version of Vim?
02:31 < joshwnj> sahat: emacs has nice support for that ;)
02:31 < othiym23> it should work with Vim 7+, which is pretty old at this point
02:31 < Nuck> Unhelpful tonight :(
02:31 < othiym23> it might work with 6
02:32 < othiym23> Nuck: I find that I use pair-completion way more frequently than snippets
02:32 < sahat> joshwnj: I am sorry I've tried emacs but couldn't get used to CTRL this, CTRL that, CTRL here, CTRL there.
02:32 < othiym23> but it always delights me when I remember one of the more elaborate snippets and generate half a page of boilerplate with five keystrokes
02:33 < othiym23> that happens less now that I no longer write much Java, though
02:33 < yogurt_truck> I only use snippets for stuff like "error_log(print_r($somevar, TRUE))", and the equivalent sort of stuff in other languages
02:33 < Nuck> Java has a lot of boilerplate, yeah
02:33 < Nuck> But srsly guys, any idea why Node won't ./configure (syntax error, because Python 3) on Arch (even with $PYTHON set)
02:34 < othiym23> Nuck: do you have Python 2.7 on your system?
02:34 < othiym23> (as well as 3, I mean)
02:34 < Nuck> othiym23: Yeah, I just checked
02:34 < joshwnj> one of my most-used snippets in node is: rq<TAB>, which spits out `var {0} = require('{0}');`, and then as you type it fills out both {0} placeholders at the same time 
02:34 < Nuck> python2 --version gives "python 2.7"
02:35 < sahat> Nuck: have you installed GCC toolchain?
02:35 < othiym23> Nuck: so what you gotta do is create a directory, ln -s /path/to/python2.7 newdir/python, and then put newdir at the head of your PATH
02:35 < Nuck> sahat: If I were using Arch without the GCC toolchain I'd be an idiot
02:35 < Nuck> othiym23: I'll try that, thanks
02:36 < Dragonblade> Arch <3
02:36 < othiym23> don't forget to rehash! (if you're using zsh, that is)
02:36 < sahat> Nuck: hey just making sure. I haven't tried Arch, but both on Fedora and Ubuntu you have to install toolchain manually.
02:37 < Nuck> sahat: You have to on Arch as well, but we compile our pacakges from source, thus I'd have to be an idiot not to install it ;)
02:37 < Nuck> Well, some things are compiled from source, via AUR
02:39 < chjj> Arch is is the best distro, it just is, lets stop talking now
02:39 < chjj> :)
02:39 < Nuck> chjj: haha yes!
02:40  * konobi gets back to updating his smartos setup
02:40 < Nuck> hrmmm
02:40 < creationix> Arch is nice, but sometimes I just want to get my laptop working and not spend a day fiddling with config files
02:40 < Nuck> Still not using the right python
02:40 < creationix> not to mention that ubuntu has the best support for third-party binaries 
02:40 < Nuck> creationix: I do that on my home server, simply because updating ubuntu is a lot easier (and can be automated)
02:41 < othiym23> Nuck: 'which python'?
02:41 < creationix> I mean, humble bundle now supports ubuntu
02:41 < chjj> creationix: arch takes me an hour, two hours tops, to set up
02:41 < Nuck> othiym23: oh hold on I broke my $PATH like an idiot br
02:41 < creationix> next thing you know, we'll have full-on steam and photoshop
02:41 < ccowan> Anyone using Amazon's DynamoDB? 
02:41 < chjj> i could get a perfectly working system in less than an hour, to configure it would take longer
02:41 < othiym23> whew!
02:41 <@Nexxy> does arch still have the issue of randomly bricking your system if you update at the wrong time?
02:41 < creationix> chjj: yeah, it's quick if your hardware plays nice
02:41 < othiym23> Nuck: you mean you broke your path like a BOSS
02:42 < chjj> creationix: hehe, fair enough
02:42 -!- mode/#Node.js [-b *!*TheEmpath@*.4over.com] by Nexxy
02:42 < creationix> I am impressed with how up-to-date arch-arm is on it's nodes version
02:42 -!- mode/#Node.js [-b *!*LHC@*.hsd1.ma.comcast.net] by Nexxy
02:42 < creationix> *nodejs
02:42 < shlevy> Anyone know if patches to add {de,}cipher.prototype.{update,final}Async might be welcome?
02:42 -!- mode/#Node.js [-b *!*Scalable@*.members.linode.com] by Nexxy
02:42 < creationix> usually only a day or few hours behind a release
02:43 < Nuck> othiym23: which python gives me /home/plejeck/.python/python, which is a link to /usr/bin/python2
02:43 < Nuck> :/
02:43 < Nuck> I just had a thought, hold on
02:43 < shlevy> Looks like the call to the openssl library are just begging to be run in uv_queue_work
02:43 < chjj> creationix: meanwhile, in x64, http://www.archlinux.org/packages/community/x86_64/nodejs/
02:43 < othiym23> Nuck: that's why you put the new directory at the front of your path
02:43 < chjj> creationix: ;p
02:43 < othiym23> export PATH=/path/to/newdir:$PATH
02:43 < creationix> when was 0.8.5 released, over a month ago right?
02:43 < Nuck> othiym23: That's the new directory, and it's at the front of my path
02:44 < othiym23> hm got it
02:44 < creationix> at least it's 0.8.x
02:44 < Nuck> I put it in a dotfile so it doesn't clutter my ~
02:44 < othiym23> weirrrd
02:44 < chjj> anyway, i just like arch because of one thing: the feeling of cleanliness for my system
02:44 < creationix> updating nodes on webOS usually took 6-12 months
02:44 < creationix> at which point it was deprecated
02:44 < chjj> creationix: to be fair, usually the nodejs package is up to date
02:44 < Nuck> chjj: Ditto
02:44 < creationix> chjj: ever tried ubuntu server
02:44 < creationix> it's pretty clean
02:45 < othiym23> Nuck: I've given that advice to other people building on source distros and it worked for them -- gyp really wants python 2.7.x
02:45 < Nuck> I also love Arch because it taught me how to configure my own OS and set up what I wanted
02:45 < creationix> I always compile node from source on x86
02:45 < chjj> creationix: i never really saw ubuntu as an OS. i dont see why i would use ubuntu over debian for the server.
02:45 < chjj> creationix: server OS*
02:45 < Nuck> chjj: Same, my startup
02:45 < creationix> it's easier
02:45 < Nuck> My startup uses Debian
02:45 < creationix> though I agree that arch is the best for playing with linux
02:45 < othiym23> chjj: Ubuntu LTS is about a ZILLION times better a server OS than Debian
02:46 < Nuck> Ubuntu's support for Xen is apparently fucking awful compared to Debian
02:46 < chjj> creationix: oh, you mean using ubuntu server on the desktop?
02:46 < creationix> chjj: right
02:46 < othiym23> for the same reasons Ubuntu's a better desktop distro than Debian
02:46 < chjj> othiym23: thems fightin words
02:46 < othiym23> faster release cycle, better support
02:46 < Nuck> othiym23: I'm with chjj, them is fighting words
02:46 < othiym23> chjj: my last boss was Matt Zimmmerman
02:46 < chjj> i was a big user of debian testing before i switched to arch
02:46 < othiym23> he showed me the light ;)
02:46 < creationix> othiym23: you trollin'  I hear this room bans people ;)
02:46 < Nuck> I USE REDHAT GUIZEEEEEE
02:47 < Nuck> I pay like 5 gajillion dollars fer a free OS lololololol
02:47 < creationix> othiym23: that was supposed to have a "?" at the end
02:47 < othiym23> creationix: I suck up to the mods, so I should be safe
02:48 < chjj> creationix: im an arch convert though, i really cant live without pacman anymore, hehe
02:48 < creationix> anyway, all my production node servers are ubuntu 12.04 server on linodes
02:48 < creationix> I have nothing to complain about
02:48 < chjj> apt-get is already, but pacman is heaven
02:48 < chjj> alright*
02:48 < creationix> I just get a stock install and compile node from source anyway
02:48 < othiym23> seriously, I was doing lots of provisioning and cfg mgmt on EC2 at my last gig, and Ubuntu's EC2 bootstrapping tools and puppet / chef autobootstrapping made my life tons easier
02:49 < Nuck> Okay yeah even after switching to 0.8.8 tag I still can't ./configure
02:49 < creationix> chjj: I run arch on my raspberry pi
02:49 <@isaacs> Nuck: make distclean ; make
02:49 < chjj> creationix: i dont know if id ever use Arch for a server, because it would be a lot to maintain. it would probably be easier to use debian, or like you said, ubuntu-server.
02:49 <@isaacs> Nuck: optionally; make distclean && ./configure --blahblahblahblahblah && make
02:49 < chjj> creationix: something that isnt a rolling release
02:49 <@isaacs> Nuck: but put your options in the blahblahblah bit
02:49 < chjj> creationix: yeah, i figured that when you said ARM
02:50 < Nuck> isaacs: The problem is that ./configure throws a syntax error because it's continually loading Python3 even when $PYTHON is `which python2`
02:50 < Nuck> Not anything to do with make
02:50 <@isaacs> Nuck: ohhhh... ok
02:50 <@isaacs> Nuck: yeah, fucking python3
02:50 <@isaacs> i swear.
02:50 < Nuck> Python3 sucks ass
02:50 <@konobi> what's the top line in configure?
02:50 < creationix> buck, make a symlink called "python" that points to python2 and insert it in the front of the path
02:50 < Nuck> Who even uses it?
02:50 <@isaacs> Nuck: python3 is criminal.
02:50 < creationix> *Nuck 
02:51 < othiym23> it's awesome that a new Node release is coming out every 18 hours, but it's a pain in the ass to have to keep reinstalling all of my global packages (because I use nvm)
02:51 < Nuck> creationix: Did that
02:51 <@isaacs> konobi: env python, probably
02:51 < othiym23> too bad nobody cares about nvm anymore (*cough*)
02:51 < Nuck> creationix: which python directs to my python2
02:51 < creationix> did you export PATH
02:51 <@isaacs> Nuck: so, if you do:  $(which python) --version
02:51 < chjj> yeah, Buck, come on man
02:51 <@isaacs> Nuck: that shows 2?
02:51 < chjj> come on, Buck
02:51 < chjj> :)
02:52 <@isaacs> konobi: #!/usr/bin/env python
02:52 < creationix> othiym23: hey, the less I work on it, the more stable it is
02:52 < creationix> it's not like it's that hard to call configure with a custom prefix
02:52 < chjj> creationix: its certainly better than some other typos you could have made
02:52 < Nuck> ...
02:52 < othiym23> creationix: I'm using some bastard fork of it that gives me the awesome power of 'nvm ls remote'
02:52 < Nuck> Motherfucking hell
02:52 <@isaacs> Nuck: try this:  mkdir -p ~/bin; ln -s $(which python2) ~/bin; hash -r ; PATH=~/bin:$PATH ./configure
02:52 < Nuck> zsh wasn't reloading the $PATH variable when I told it to
02:52 < Nuck> No wonder
02:53 <@isaacs> Nuck: ah, no export?
02:53 < Nuck> isaacs: I figured it out
02:53 <@isaacs> Nuck: kewl :)
02:53 < othiym23> Nuck: that's why I said rehash!
02:53 < Nuck> I was updating $PATH in one tab, rehashing, etc.
02:53 < othiym23> you have to explicitly rehash in zsh after you set the path
02:53 < Nuck> And then zsh didn't fix it!
02:53 < othiym23> because zsh is so futuristic that it has to emulate tcsh's shittiest feature, apparently
02:53 <@isaacs> we really ought to have some kind of little detector doohicky in there so that it always uses a good version of python
02:53 < creationix> I've been tempted to rewrite nvm and remove all the bloat features everyone has added
02:53 < creationix> every time I take a pull request, it breaks for someone
02:53 < othiym23> Nuck: oic, then you need to 'exec zsh'
02:53 <@isaacs> creationix: just direct them to nave ;)
02:53 < Nuck> creationix: I'm a loyal nvm user
02:53 < Nuck> fuck nave, nvm 4 lyfe
02:54 <@isaacs> creationix: you know i'll keep maintaining it because i use it every day
02:54 < Nuck> isaacs: Tell me how to make my prompt not suck in nave
02:54 < Sly> isaacs, is there a reason V8's Scanner::ScanNumber() doesn't parse bits?
02:54 < Nuck> >:C
02:54 < Sly> Language-wise?
02:54 < creationix> isaacs: remember I'm fundamentally opposed to how nave works right?
02:54 <@isaacs> Sly: because of the programming, probably
02:54 < creationix> how does it work again?
02:54 < Nuck> creationix: Subshells
02:54 <@isaacs> Sly: maybe it needs different programming to parse bits.
02:54 < Nuck> Goddamn subshells
02:54  * Nuck hates subshells
02:54 < chjj> so, first we were discussing distro's, now shells
02:54 < chjj> bash for life
02:54 < Nuck> chjj: zsh 4ever
02:54 < chjj> NO
02:54 < chjj> bash!
02:54 < othiym23> isaacs: I just did rvm -> rbenv a couple weeks ago and it left me exhausted
02:54 <@isaacs> Nuck: use the NAVE* environment vars
02:55 < Nuck> ZSH PWNS YO' MAMA
02:55 < creationix> oh right, nave was subshells, nvm was a bash function and n was symlinks?
02:55 < Sly> Well, the only problem I see with it is that they're parsing it one character in the buffer at a time. So you'd have to look at the whole string to see if it's only 0s and 1s.
02:55 < Nuck> isaacs: So NAVEPROMPT?
02:55 < othiym23> fish > all (this is a lie)
02:55 <@isaacs> Nuck: nono, i mean, however you set up your prompt, set it up using the nave envs
02:55 < Nuck> I symlinked my .zshrc to .naverc and it didn't work :D
02:55 < chjj> i could never justify using zsh. its just not as portable as bash.
02:56 < Nuck> chjj: portable?
02:56 < Nuck> Zsh is powerful
02:56 < chjj> Nuck: yes, portable
02:56 < Nuck> Zsh is the future of shells
02:56 < creationix> I can't use zsh because I reformat my machines weekly
02:56 < Dragonblade> added only another of music on the server
02:56 < Dragonblade> yay x.x
02:56 < creationix> stock settings are much better
02:56 <@isaacs> Nuck: https://gist.github.com/3431649
02:56 < creationix> and no, I don't want to cargo-cult dot files in some git repo
02:56 < chjj> Nuck: not many OS' use zsh by default
02:56 < othiym23> I tried using dash for a while, during a misguided bout of purity
02:56 < chjj> Nuck: it's usually always bash
02:56 < Nuck> chjj: Arch does for the install CD now
02:57 < chjj> Nuck: ? it's not the default though
02:57 <@isaacs> Nuck: but a default NAVE_PROMPT would be nice
02:57 < creationix> ubuntu isn't really bash, but it's close enough
02:57 < chjj> Nuck: the default shell on the latest install iso is bash
02:57 <@isaacs> Nuck: like if it could set your PS1 before running your bash scripts
02:57 < sdwrage> Hey all. Getting this error when running any NPM commands: /opt/local/lib/node_modules/npm/lib/utils/config-defs.js:5 , stdio = process.binding("stdio")
02:57 < Nuck> I noticed it seemed like bash so I decided to `echo $SHELL` and sure enough, the Live CD is running zsh
02:57 <@isaacs> Nuck: so you could always reset it or whatever if you wanted.
02:57 < chjj> Nuck: hmmm, i'll have to try this then
02:57 < Nuck> isaacs: Can I just change what shell it's using?  I hate bash, I want my zsh :(
02:57 < othiym23> ubuntu's boot shell is /bin/dash, which they switched to after they / Debian discovered it speeded up the boot process by like 20% over using bash
02:57 < Killswitch> Does ejs not have layouts on by default anymore? I can't get it to work in express at all.
02:58 < chjj> i wonder if ubuntu will switch to systemd
02:58 < chjj> that would probably speed up boot time even more
02:58 < Nuck> Killswitch: The layouts provided by express were removed in Express 3.0 - I just use Express 2.0
02:58 < othiym23> chjj: over upstart?
02:58 < Killswitch> Nuck: dang, thanks
02:58 < Nuck> chjj: They use their own alternative to Systemd, upstart
02:58 < othiym23> cuz they seem pretty committed to upstart at this point
02:58 < chjj> othiym23: yes. the only reason they created upstart was for faster boottime, and now systemd is faster. i dont see why they dont switch.
02:58 <@isaacs> Nuck: that'd be a nice pull req.
02:59 < chjj> Nuck: i realize they have their own init.
02:59 < othiym23> but I just learned how to write upstart scripts!
02:59 < Nuck> isaacs: I might look into implementing that, that's the one thing keeping me on nvm
02:59  * othiym23 sobs
02:59 < Nuck> Also, in other things - I want to use a Cronjob with a Node.js script to automatically switch my wallpaper (with feh) - how can I do this on a machine that's using nvm or nave?
02:59 < chjj> Nuck: but the only reason they use upstart is because they wanted something faster than the classic sysv shell scripts
03:00 < chjj> Nuck: so if systemd is faster than upstart, im curious why they dont switch
03:00 < othiym23> chjj: upstart does a bunch of other stuff at this point
03:00 < Nuck> chjj: They're cemented into Upstart, it was their own invention
03:00 < chjj> othiym23: what does upstart do that systemd cant?
03:00 < Nuck> chjj: They'll make Upstart just as fast.  Competition provides improvements
03:00 < othiym23> what does systemd do for dependency management and keeping services up?
03:00 < Nuck> Fuck systemd, I just use init scripts :D
03:00 < chjj> othiym23: socket based activation, completely different from upstart
03:01 < chjj> othiym23: it creates all sockets at boot, and starts every daemon in parallel - every dameon possible
03:01 < othiym23> chjj: maybe nothing? But I was able to replace node-forever with upstart and save myself a whole bunch of RAM and found the whole experience pleasing
03:01 < chjj> othiym23: upstart works differently, and can only start certain daemons in parallel based on deps
03:01 < mscdex> upstart scripts are easy to write and understand
03:01 < mscdex> imho
03:01 < chjj> i actually really like systemd .service files
03:02 < othiym23> mscdex: that was my experience as well, after I got my head wrapped around how the different stanzas work
03:02 < Nuck> DAEMONS=(dbus) 4 lyfe
03:02 < chjj> on arch, there's no .service file for couchdb, mongodb, or redis. i had to write my own, but it was very easy.
03:03 < Nuck> chjj: That's probably because Arch doesn't use systemd o_O
03:03 < Nuck> It uses init scripts
03:03 < mmalecki> I even have one for minecraft server
03:03 < chjj> Nuck: it's in the midst of switching to systemd, have you read the mailing list?
03:03 < othiym23> npm install -g coffee-script coffeelint jshint jsonlint jslint node-inspector mocha bunyan
03:03 < chjj> Nuck: it seems you haven't stayed up to date, my friend.
03:03 < othiym23> I don't know why I keep reinstalling coffee-script and coffeelint
03:03 < Nuck> chjj: Well yes they are in the process, but it's still rather early in the process
03:03 < Sly> isaacs, https://gist.github.com/96685863e800a2667756#L13  -- Ignore 34-35, it's a change I made.
03:03 < chjj> Nuck: no, not early. again, have you read the mailing list this month?
03:04 < chjj> Nuck: when every dev is +1'ing the switch to systemd
03:04 < Sly> Seems like it would be simple to accomplish, but is there any ECMA standard against it?
03:04 < deltab> upstart can do socket activation too -- http://manpages.ubuntu.com/manpages/natty/en/man7/socket-event.7.html -- and systemd isn't limited to it
03:04 < Nuck> chjj: I have not, but I have kept up with the blog, and it appears to me that they haven't done anything on that front
03:05 < chjj> Nuck: http://mailman.archlinux.org/pipermail/arch-dev-public/2012-August/023389.html
03:05 <@isaacs> Nuck: I thought nave doesn't actually use bash when it drops you into a shell anyway...
03:05 <@isaacs> Nuck: I could be wrong.
03:05 < chjj> Nuck: well, tell me what you think after reading that thread
03:05 <@isaacs> Nuck: I know it uses bash to run nave.sh, since that's very much 100% a bash program full of bashisms
03:05 < chjj> Nuck: it's *very* clear at this point that Arch is going to be switching to systemd
03:05 < Nuck> isaacs: I dunno what it is, but it isn't keeping my zsh environment (or loading in my .zshrc in shell startup)
03:06 <@isaacs> oh, wait, no, it's bash
03:06 < chjj> Nuck: i mean, rc.conf has already been deprecated, and you're saying that there has been no progress made on the systemd front?
03:06 < Nuck> chjj: I know it's impending, but as I understand it's going to take a while to move all the old initscripts over to systemd
03:06 < chjj> Nuck: the switch to systemd is going to happen, and a lot of people aren't happy about it, but it's really for the best. the future of linux is systemd, whether anyone likes it or not.
03:07 < Nuck> chjj: I agree, the future is systemd
03:07 < chjj> Nuck: most packages come with .service files for systemd
03:07 < creationix> is that the one that requires rethinking your daemon?
03:07 < creationix> because of the sockets
03:07 < Nuck> But it's going to take time.  The changes from initscripts to systemd are pretty massive
03:07 < chjj> Nuck: no, most packages come with .service files already. there's a few that don't.
03:07 <@isaacs> Nuck: ahh... yeah. does zsh have something akin to bash's --rcfile flag?
03:08 < mmalecki> isaacs: nope
03:08 < mmalecki> isaacs: I tried
03:08 < mmalecki> and failed.
03:08 < chjj> Nuck: arch has had systemd optional support for more than a year. if you care to look at the year old 30+ page thread about it.
03:08 < chjj> Nuck: package maintainers have been adding .service files for a long time now
03:09 < deltab> creationix: that's an optimization you can choose to use
03:09 < Nuck> mmalecki, isaacs: http://stackoverflow.com/questions/2727172/how-to-load-different-zshrc-file-via-commandline-option
03:09 < Nuck> ?
03:09 < creationix> Node has the proper socket support to make the right kind of daemon right?
03:09 < creationix> nodeos!
03:10 < mmalecki> oh, hm, that kind of changes things
03:10 <@isaacs> Nuck: you could just `echo zsh > ~/.naverc`
03:10 <@isaacs> oh, no, that'll break a LOT of stuff.
03:10 <@isaacs> nvm
03:10 < mmalecki> creationix: hah, I really want to write an OS which is like, v8 from grounds up
03:10 < Nuck> lol
03:10  * isaacs shrug
03:10 < othiym23> "Rumours and allegations of a move from Upstart to systemd are unfounded: Upstart has a huge battery of tests, the competition has virtually none. Upstart knows everything it wants to be, the competition wants to be everything. Quality comes from focus and clarity of purpose, it comes from careful design and rigorous practices. After a review by the Ubuntu Foundations team our course is clear: we’re
03:10 <@isaacs> Nuck: just use bash.
03:10 < othiym23> committed to Upstart, it’s the better choice for a modern init, innit. For our future on cloud and client, Upstart is crisp, clean and correct. It will be a pleasure to share all the Upstart-enablement patches we carry with other family friends as soon as their release is ready and they can take a breath, so to speak."
03:10 < mmalecki> isaacs: in general, zsh compatibility is very hard
03:10 < mmalecki> I tried with give
03:10 < Dragonblade> Need to figure out how to use the for loop and the command to tell the .js to stream the files without individually adding them to the start script x.x
03:10 < creationix> mmalecki: or use luvit ;)
03:10 <@isaacs> mmalecki: yeah, unnecessarily hard, and for very little benefit
03:11 < mmalecki> I even looked into zsh source
03:11 < mmalecki> which is, to be honest, worst piece of code I ever read
03:11 < mmalecki> creationix: that might work too, actually!
03:11 < Nuck> But lotsa people use zsh :D
03:11 < creationix> every time I accept a pull request for zsh in nvm, it breaks something
03:11 < creationix> and I can't test the patches
03:11 < mmalecki> creationix: I feel ya
03:12 < creationix> mmalecki: as nice as v8 is, it's pretty heavy for system stuff
03:12 < creationix> luajit is super nice for small tasks
03:12 < mmalecki> btw, I think I have only node version manager with a test suite: https://github.com/mmalecki/give/tree/master/test
03:12 < maxogden> Dragonblade: check out jsforcats.com for info on js looping
03:12 < deltab> creationix: yeah, the fd option is what's needed: http://nodejs.org/api/net.html#net_new_net_socket_options
03:12 < creationix> yeah, I should write tests for nvm
03:12 < mmalecki> creationix: yeah, v8 is 10 MB at least, while luajit is like 2 MB or so?
03:12 < creationix> mmalecki: more like 600kb
03:12 < creationix> or less
03:13 < mmalecki> creationix: btw, we've investigated using luvit for some internal stuff at nodejitsu
03:13 < mmalecki> creationix: if I get AvianFlu to learn lua, this'll totally happen :)
03:13 < Nuck> So, I think I'll stick with nvm for now
03:13 < Nuck> Since it "works" under zsh
03:14 < Nuck> I feel like someday I'll probably fork nave for zsh or something, but for now, nvm gets the job done
03:14 < creationix> nuck, want to maintain zsh compat for nvm?
03:14 < creationix> or fork it?
03:14 < Nuck> creationix: not really haha
03:14 < Nuck> I'm a terrible shell scripter
03:14 < Nuck> Maybe once I make it out of copy-paste level :P
03:15 < creationix> mmalecki: cool, I wish I actually had time to use luvit
03:15 < creationix> I wrote node code all day
03:15 < creationix> *write
03:15 < Nuck> luvit is like Node.lua, right?
03:15 < creationix> right
03:15 < Nuck> I never could get used to lua, TBH
03:15 < chjj> Nuck: lua is amazing
03:15 < mmalecki> creationix: it's always better than finding yourself responding to emails all the day :(
03:16 < Nuck> I worked with it when I was doing stuff for WoW, but never grew used to it
03:16 < Nuck> I'll probably give it another go someday
03:16 < chjj> Nuck: if you like js, you should really appreciate lua.
03:16 < creationix> mmalecki: I have those days too
03:16 < creationix> today was fighting chinese visa services
03:16 < Nuck> Anyways, assuming I use nvm, how would I go about making a cronjob in JS?
03:16 < Nuck> :D
03:16 < chjj> lua is a very underused language
03:16 < Killswitch> Noob question, but is there a variable I can use to see what page I am on? for example mysite.com/page1 the var will say "page1"
03:16 < othiym23> Nuck: creationix recommended a pretty good book on Lua at Nodeconf
03:16 < Nuck> Killswitch: On Express?
03:16 < mmalecki> creationix: ooc, what do you need to get a chinese visa?
03:16 < othiym23> I picked up a copy and found it to be more than enough
03:16 < creationix> Nuck: what I do in up upstart scripts is just manually adjust my path
03:16 < Nuck> Killswitch: req.path, I think >_>
03:16 < Nuck> Don't hold me to that, though
03:16 < Killswitch> Nuck: derp, thanks.
03:17 < Nuck> creationix: 'kay
03:17 < mmalecki> creationix: I need all sorts of crazy stuff and paperwork for my USA visa >.<
03:17 < creationix> I've heard
03:17 < creationix> I'm glad I live in the US
03:17 < mmalecki> creationix: but when I'm there, you can be sure I'm dropping by your place with a crate of apple juice :)
03:17 < d4rklit3> yo
03:18 < Nuck> What the fuck where did the nvm/src go?
03:18 < dragon> nuck it.
03:18 < dragon> I'm going home.
03:18 < Nuck> NUCK IT, WE'LL DO IT LIVE
03:18 < creationix> mmalecki: http://conf.cnodejs.net/
03:18 < sdwrage> is my application, after npm install, supposed to be (at least for expressjs), application->node_modules->express and in that folder I have another folder called node_modules?
03:19 < wltsmrz> New nodejs.org, I likey
03:19 < creationix> wow, they really cleaned up the hu.js site
03:19 < creationix> it used to be impossible for me to navigate
03:19 < Nuck> oh wow
03:19 < creationix> and all in chinese
03:19 < Nuck> There it is, right in front of me lol
03:20 < mmalecki> creationix: nice. have you thought about visiting node dublin?
03:20 < creationix> mmalecki: no, I don't think I'm going to Europe this year
03:20 < creationix> I'm about traveled out
03:20 < othiym23> sdwrage: yeah, node looks for a node_modules folder in the current directory, and then follows the chain of parent directories looking for node_modules
03:20 < othiym23> so app/node_modules/express sounds right to me
03:20 < sdwrage> othiym23: I am guessing this is new? 
03:20 < creationix> I'm going to lua workshop 2012 and some js conf in chicago
03:21 < othiym23> sdwrage: new since uh 0.4 maybe?
03:21 < sdwrage> because I am following the express tutorial and folder structure has it at application -> express
03:21 < creationix> that's about it after summer camp and the china conf
03:21 < sdwrage> ah okay
03:21 < sdwrage> maybe they haven't updated their tutorial
03:21 < othiym23> sdwrage: which express tutorial?
03:21 < sdwrage> http://expressjs.com/guide.html
03:21 < creationix> mmalecki: when is node dublin?
03:21 < othiym23> sdwrage: that's 'npm ls', not ls ;)
03:22 < mmalecki> creationix: 18 - 19 october
03:22 < sdwrage> ??
03:22 < mmalecki> creationix: pretty epic speaker line up, if you ask me :)
03:22 < sdwrage> oh
03:22 < creationix> yeah, too soon
03:22 < creationix> I love the drawings though
03:22 <@konobi> mmalecki: what what!? why did i not hear of this!?
03:22 < sdwrage> ah yes thank you othiym23 
03:22 < sdwrage> :)
03:22 < creationix> I'm submit to speak just to get a drawing of my huge smile ;)
03:22 < sdwrage> I was looking from textmate
03:22 < Nuck> So, I'm thinking of making my way out to SF and attempting to couchsurf for a certain weekend in November
03:22 < sdwrage> guess I breezed past a bit
03:23 < mmalecki> konobi: dunno, sounds like you had no internet for at least a month :)
03:23 < creationix> yeah, I've seen it everywhere
03:23 < othiym23> plus they pretty much begged everyone at Nodeconf to come
03:24 <@konobi> mmalecki: heh... i suppose i've been taking it pretty easy since going solo
03:24 < othiym23> I would totally go but my employers' amazing forbearance about me going to conferences probably doesn't extend to covering flights to Ireland and I've totally used up all my PTO this year
03:24 < othiym23> so I'll just have to settle for Nodeconf Summercamp, KRTconf and Redisconf
03:24 <@konobi> looks like i'll have to hmmm and haww about for a while... 
03:25 < creationix> my employer encourages me to travel and buys my tickets
03:25 < creationix> :P
03:25 < creationix> and I get to live in the middle of nowhere and write node code all day!
03:25 < mmalecki> my employer encourages me to travel by paying me ;)
03:25 < mmalecki> creationix: you're still at c9, right?
03:25 < creationix> yep
03:25 <@konobi> i'd have to extend a trip to be able to make it
03:26 < Nuck> creationix: oh, you're at c9?
03:26 < Nuck> When did this happen, like 80 months ago?
03:26 < othiym23> my employer encourages me to go to conferences, but they've sent me to Fluent and Nodeconf so far this year, and the other three I just mentioned, plus all-engineering team meetings in another state, and somewhere in there I gotta write some code
03:26 < mmalecki> creationix: I had awesome time in the Amsterdam office btw :)
03:26  * Nuck hasn't been around for a while
03:26 < creationix> I moved to c9 when it was clear that I couldn't help webOS anymore
03:27 < creationix> right before they imploded and fired everyone
03:27 < othiym23> ladies and / or gentlemen, today's DailyJS: http://dailyjs.com/2012/08/22/node-roundup/
03:27 < d4rklit3> substack: you around? have yo u seen an issue where trying to require backbone, it can't find underscore (i have the require for it right above backbone)
03:27 < othiym23> creationix: what's the relationship between the WebOS and Enyo teams?
03:27 < creationix> all I know is most the enyo team joined Google
03:28 < creationix> the ones who designed and owned enyo
03:28 < creationix> I was on the team, but didn't really touch enyo
03:28 < Nuck> creationix: They never did open-source WebOS, huh?
03:28 < creationix> it's opening little by little
03:28 < creationix> enough that there are custom builds of the ui now by the community
03:29 < Nuck> Well that's a good sign
03:29 < creationix> and enyo itself opened a long time ago
03:29 < Nuck> If they'd just opened it all up during the big hype
03:29 < Nuck> They would've had a successful project on their hands
03:29 < substack> d4rklit3: backbone is in the browserify unit tests
03:29 < creationix> Nuck, well that was a legal impossibility
03:29 < Nuck> creationix: They had legal issues with that?
03:29 < d4rklit3> sorry? 
03:29 < Nuck> Didn't they own the rights to it?
03:29 < creationix> when you deal with arm chipsets, everything is nda and secret
03:29 <@konobi> mmalecki: and so close to home too... dammit
03:30 < Nuck> ahhh
03:30 < mmalecki> konobi: you're going.
03:30 < Nuck> creationix: But can't some FOSS compilers target ARM?
03:30 < mmalecki> there, problem solved!
03:30 < d4rklit3> i just get an error saying it can't find underscore modules when i require backbone.js, even though i have both required
03:30 < creationix> basically they have to clean up the code and review every line to make sure it's safe
03:30 < creationix> this takes time
03:30 <@konobi> mmalecki: YVR->DUB though
03:30 < Nuck> creationix: Ouch that sounds terrible
03:30 < Nuck> And they fired everybody so that'll take a while
03:30 < creationix> the thing is, arm is not very uniform
03:31 < creationix> every chipset is a unique implementation of the "standard"
03:31 < mmalecki> oh, yeah, that's a pain
03:31 < substack> d4rklit3: did you npm install underscore first?
03:31 < Nuck> Why the fuck do we use ARM?
03:31 < creationix> and drivers are very closed
03:31 < d4rklit3> do i need to?
03:31 < mmalecki> as long as AVR is very uniform, ARM is a pain to code on
03:31 < d4rklit3> i just have the js files
03:31 < creationix> buck, because imagine the battery life if your iPhone used atom
03:31 < Nuck> Srsly, this seems like a shitty platform to me, why do we not have something like the x86 platform, that's fairly well-documented?
03:31  * creationix should turn off Lion auto-correct
03:31 < luckysmack> wait ... wtf? is there any real purpose to the hoarders npm package? https://npmjs.org/package/hoarders
03:32 < substack> d4rklit3: just install backbone-browserify from npm and require() that
03:32 < d4rklit3> hmm
03:32 < d4rklit3> ok
03:32 < creationix> luckysmack: install it, I dare you
03:32 < othiym23> luckysmack: yes, to make sure you get the whole thing
03:32 < d4rklit3> cant just do it out of the box with the client js?
03:32 < Nuck> creationix: lmao
03:32 < creationix> it's the npm version of a fork bomb
03:32 < othiym23> gotta catch 'em all
03:32 < luckysmack> creationix: lol, no. im scared.
03:32 < Nuck> creationix: Does it crash npm?
03:32 < Nuck> :D
03:32 < luckysmack> othiym23: yea seems like it.
03:32 < Nuck> Or just make NPM never stop?
03:32 < substack> d4rklit3: don't use wonky ad-hoc custom js blobs you found on the internet
03:32 < creationix> well, some packages do nasty things in their post-install scripts
03:32 < substack> if it's not on npm it doesn't exist
03:33 < Nuck> creationix: haha that's not surprising
03:33 < Nuck> substack: "if it's not on npm it doesn't exist" - well said!
03:33 < d4rklit3> even if the output js goes client only?
03:33 < sdwrage> mmhmm mmhmm liking nodejs
03:33 < othiym23> that reminds me, I need to congratulate one of my friends about his coveted position on the npm wall of shame
03:33 < substack> especially if the code is for browsers only
03:33 < Nuck> othiym23: What?
03:33 < Nuck> npm wall of shame?
03:33 < d4rklit3> good enough for me ;)
03:34 < d4rklit3> so what the n require('browserify')
03:34 < d4rklit3> thats it?
03:34 < d4rklit3> er
03:34 < othiym23> Nuck: http://registry.npmjs.org/-/scripts?scripts=install,preinstall,postinstall&match=\bnode-waf\b
03:34 < d4rklit3> require('backbone')
03:34 < luckysmack> creationix substack  could be worse I suppose, it could depend on itself.
03:35 < othiym23> luckysmack: that's an excellent idea, someone should tell jesusabdullah about that
03:35 < luckysmack> haha
03:35 < Nuck> ... What's wrong with node-waf?  Didn't that used to be the thing you did?  Wait, this is postinstall
03:35 < Nuck> WTF
03:35 < mmalecki> hm, it's 5:30, my talk is in like 12 hours
03:35 < substack> d4rklit3: npm install backbone-browserify
03:35 < mmalecki> I really should be working on slides
03:35 < substack> then require('backbone-browserify')
03:35 < d4rklit3> got it
03:35 < d4rklit3> cool
03:35 < substack> and it will handle the dependencies correctly for you
03:35 < othiym23> hah, I have *two* friends on the node-waf wall of shame
03:36 < othiym23> tsk tsk
03:36 < Nuck> What's wrong with node-waf, othiym23 - there's a substack module in that wall of shame, it can't be THAT bad
03:36 < substack> I had better be on the wall of shame
03:36 < Nuck> substack: You are
03:36 < othiym23> Nuck: we live in the future, time to move to gyp
03:36 < substack> 0 fucks were given
03:37 < othiym23> substack: allow me to congratulate you on your coveted position on the node-waf wall of shame
03:37 < othiym23> accept this valuable prize of 0.01 internets
03:37 < creationix> I'll bet I'm on there too
03:37 < mmalecki> I'm there :(
03:38 < othiym23> creationix: yep, for webgl and pdl
03:38 < mmalecki> oh man, I wrote node-mount?
03:38 < Nuck> So what's wrong with noe-waf again?
03:38 < Nuck> mmalecki: lmao you forgot what you've written?
03:38 < creationix> Nuck, it's deprecated
03:38 < mmalecki> Nuck: with that many modules, yeah
03:38 < creationix> will be removed in the next version
03:38 < othiym23> Nuck: it's old and tired and sad
03:38 < mmalecki> creationix: removed in master already, actually
03:38 < creationix> the thing is pdl only runs on webos 
03:39 < othiym23> or rather isaacs and ryah like gyp better
03:39 < Nuck> Well, gyp is a pretty badass thing
03:39 < creationix> which is either stuck at node 0.4.x or 0.6.x
03:39 < creationix> I think 0.4.x
03:39 < Nuck> creationix: eww
03:39 < Nuck> Speaking of node versions
03:39 < Nuck> We're already on 0.9
03:39 < Nuck> Does this mean next thing is 1.0?
03:39 < Nuck> :D
03:39 < creationix> 0.10.x most likely
03:40 < Nuck> :(
03:40 < jesusabdullah> mmalecki: fyi lua is very small, should be easy enough to write basic things in at least
03:40 < creationix> but 1.0.x will probably be after that
03:40 < Nuck> I was hoping I'd be able to go "HA! WE'RE OUT OF BETA, SUCKIT!" to the Rubyists who keep making fun of me for using Node
03:40 < creationix> Nuck, do you know how many startups and large companies use node in production?
03:40 < creationix> what is "beta"
03:41 < bingomanatee> Greetings all
03:41 < timoxley> Nuck does 0.x == beta?
03:41 < creationix> I mean we can't even seem to deprecate fs.exists
03:41 < othiym23> jesusabdullah: why doesn't hoarders depend on hoarders?
03:41 < Nuck> creationix: A number
03:41 < mmalecki> Nuck: I always lol when I hear that
03:41 < Nuck> othiym23: haha
03:41 < mmalecki> Nuck: then I look at number of node processes we're running in production
03:41 < mmalecki> and I lol even more
03:41 < Nuck> mmalecki: Exactly
03:41 < othiym23> Nuck: there's no reason to do that to Rubyists, just do what I do and shake your head sadly at their feeble attempts at mockery
03:41 < Nuck> These Rubyists will never understand this :(
03:41 < bingomanatee> I am having a routing issue with exprss - I want to define a route such as "/foo/:name.:format
03:41 < othiym23> I mean, they're using Ruby
03:41 < creationix> how many millions in startup funds have been given to node startups?
03:41 < Nuck> creationix: How many>?
03:42 < Nuck> I'm curious
03:42 < bingomanatee> it seems to me that the name token is "swallowing" up the format.
03:42 < Nuck> Cause mine can't get startup funds :(
03:42 < mmalecki> Nuck: over 3000 servers alone says something already
03:42 < Nuck> bingomanatee: Probably because regexes are greedy
03:42 < creationix> c9.io runs on all node
03:42 < Nuck> mmalecki: That just at Nodejitsu?
03:42 < mmalecki> Nuck: yeah
03:42 < Nuck> creationix: No, really?  I thought it was all Ruby executing my JS :P
03:42 < creationix> don't think we're up to 3000 servers though
03:42 < mmalecki> only in one production environment
03:43 < bingomanatee> Is there a a way to define the regex parser for a route more specifically?
03:43 < Nuck> bingomanatee: Use a regex
03:43 < luckysmack> creationix: i tried c9 fun
03:43 < creationix> c9.io is getting there
03:43 < luckysmack> *finally today but kept getting cloning issues
03:43 < tuhoojabotti> Nuck, my man. What's up?
03:43 < creationix> I've been using it for my own development for the last week
03:43 < Nuck> tuhoojabotti: Nothing much, just Arching.  Ye?
03:43 < creationix> still somewhat buggy, but much better than before
03:43 < tuhoojabotti> Nuck: I have no idea what you just said.
03:44 < luckysmack> creationix koding.com is another cool one too.
03:44 < Nuck> tuhoojabotti: Arching = using Arch Linux
03:44 < tuhoojabotti> That was my first guess.
03:44 < creationix> so I've been "clouding"?
03:44 < Nuck> creationix: Yes.
03:44 < creationix> I code in the cloud for the cloud on the cloud
03:44 < Nuck> creationix: I AM THE CLOUD
03:44 < mmalecki> creationix: I'm totally s/deploying/clouding/g
03:44 < dr0id> I AM ON THE SUN
03:44 < Nuck> dr0id: Haha I bet you're melting
03:45  * dr0id flames on
03:45 < d4rklit3> you know how much an apartment on the sun costs, dr0id 
03:45 < creationix> so should I get a chrome book or a nexus 7 for my next experiments?
03:45 < Killswitch> http://www.facebook.com/dogsbite.org
03:45 < Nuck> d4rklit3: The A/C cost alone must be millions a day
03:45 < Killswitch> Oops, wrong channel
03:46 < dr0id> the concept of apartments here is nonexistent
03:47 < othiym23> seems like there's plenty of open space on the sun, yeah
03:47 < creationix> Dunno, $500 seems like an awful lot to spend on a netbook that can only run a browser
03:48 < dr0id> heh
03:48 < othiym23> yeah, I might have been tempted to buy a Chromebook if I hadn't already suckered myself by buying an OLPC
03:48 < othiym23> that left a mark
03:48 < othiym23> I'd get the Nexus 7
03:49 < d4rklit3> substack: how would I get browserify to compile sass?
03:49 < othiym23> it won't be as nice as HP's WebOS tablet, but there'll probably be more software for it
03:49 < dr0id> browerify was for JS rite?
03:49 < creationix> I have two touchpads dual-booting ICS and webOS
03:49 < Nuck> Does configure automatically handle parallelising my compilation for all my tablets?
03:49 < Nuck> Err, processors
03:49 < Nuck> Why did I say tablets :I
03:50 < creationix> nuck, no
03:50 < mmalecki> I wish tablets weren't bound to any software
03:50 < d4rklit3> othiym23: i have a Galaxy Tab 2 7.0   with vanilla ICS
03:50 < d4rklit3> i like it
03:50 < Nuck> creationix: How do I parallelize in NVM?
03:50 < d4rklit3> its pretty smooth, however, wtf is samsung thinking with touchwiz? have they lost their god damn minds?
03:50 < creationix> I `export JOBS=4`
03:50 < othiym23> I personally have a "new iPad" and love it for everything except hacking
03:50 < othiym23> no node for iOS :(
03:50 < othiym23> or Go or Haskell or...
03:51 < creationix> I'm sure jailbroken iPads have node
03:51 < d4rklit3> not even if you JB/
03:51 < d4rklit3> ?
03:51 < creationix> I have luvit on my ICS tabler
03:51 < othiym23> d4rklit3: the best thing about touchwiz is the name, and the name is terrible
03:51 < creationix> it's fun
03:51 < d4rklit3> lol
03:51 < luckysmack> you can run node on an ipad?
03:51 < luckysmack> someone was asking me about that theother day
03:51  * substack doesn't get the appeal of tablets
03:51 < bingomanatee> where would regex routes be doumented?
03:52 < othiym23> d4rklit3: I dunno, I don't jailbreak my iOS devices because I want them to be normal, stock devices
03:52 < creationix> substack: you like the air?
03:52 < bingomanatee> substack: you might enjoy fingerpainting on them --- thats the only reason I got my ipad. 
03:52 < substack> I dislike macs if that's what you're talking about
03:52 < d4rklit3> i like ios games :P
03:52 < substack> ipad seems like a really lousy computer
03:52 < fallow> I dislike games
03:53 < othiym23> the new iPad is a terrible computer but a great PDF reader
03:53 < d4rklit3> as far as phones go, android all the way
03:53 < luckysmack> substack: this is what ipads are for, right?
03:53 < othiym23> also for playing Le Havre and Neuroshima Hex
03:53 < substack> luckysmack: being lousy?
03:54 < luckysmack> http://www.youtube.com/watch?v=XcIwXVKQjsQ
03:54 < luckysmack> oops, forgot to link ^^
03:57 < creationix> luckysmack: nah, the screens shatter to easily
03:57 < luckysmack> eh, minor details. guess that still means they dont work, right? :D
03:59 < d4rklit3> ok i have to build something to compile sass
04:09 < timoxley> d4rklit3 just use grunt https://github.com/sindresorhus/grunt-sass 
04:13 < gkatsev> I just read that as grunt-ass
04:16 < blauz> hi, i have installed node(latest version) in a ubuntu 10.04 server. I installed from the chris-lea ppa. It doesn't come with npm already, how should i install npm?
04:17 < dr0id> did you see the npm site?
04:17 < dr0id> oh, they have changed the site design cool
04:17 < dr0id> should be something easy though, `curl http://npmjs.org/install.sh | sh`
04:18 < blauz> mm, yes, i tried that, but i got an error
04:18 < dr0id> most "proflific" author, substack no.1 heh
04:18 < blauz> sh: Syntax error: newline unexpected
04:19 <@isaacs> dr0id, blauz: yo
04:19 <@isaacs> blauz: you need to curl with https
04:20 <@isaacs> blauz: or -L
04:20 < blauz> ahh
04:20 <@isaacs> blauz: but npm is installed along with node now
04:20 <@isaacs> so you almost never need to do that
04:20 <@isaacs> blauz: how are you installing node?
04:20 < blauz> isaacs, i installed with chris-lea 10.04 lts ppa
04:21 < dr0id> that might not have the latest
04:21 < dr0id> actually that does, 0.8.7, um, latest is 0..8
04:21 < dr0id> 0.8.8*
04:22 < blauz> you are right#
04:22 < blauz> i got the old one v0.8.7
04:22 <@isaacs> blauz: then you should be able to just install npmjs the same way
04:22 <@isaacs> blauz: 0.8.8 is building on chris's ppa
04:22 <@isaacs> blauz: it'l be done once launchpad sees fit to schedule it some cpu time :)
04:22 < blauz> ahh
04:23 <@isaacs> we're kind of meaning to move it over to a dedicated build box but haven't gotten around to it
04:23 <@isaacs> substack: the trick is to not think of the ipad as a computer per se
04:23 < blauz> should i kkep going with v0.8.7
04:23 < blauz> , or should make install?
04:23 <@isaacs> substack: but more like an appliance for doing certain software-y things
04:24 < othiym23> like watching porn
04:24 <@isaacs> blauz: whatever you prefer.  it's fine.  maybe install 0,8.7 binary now, and 0.8.8 tomorrow
04:24 < blauz> i'm using on production, along with nginx
04:24 <@isaacs> othiym23: ok, let's not have another one of these.
04:24 < othiym23> isaacs: lol
04:25 < othiym23> note that I wasn't prescribing any particular form or content, but point taken
04:25 <@isaacs> blauz: ok
04:26 <@isaacs> othiym23: yeah, no, it's fine.  i have no problem with porn.  just over quota for sexist flare-ups for the day, and it's close to the subject matter.
04:27 <@isaacs> porn is like pooping.  almost everyone does it, but you sure hope it's in private, and probably don't want to hear about it.
04:27 < jerrysv> mmalecki: ping?
04:27 < mmalecki> jerrysv: pong
04:27 < jerrysv> mmalecki: :) 2 things, have a minute?
04:27 < mmalecki> jerrysv: even 2
04:28 < jerrysv> mmalecki: awesome - vows: i'd love to get my branch tested on windows and released. i have commit, but can't do the npm release. is that something you can handle?
04:28 < mmalecki> jerrysv: yeah, I can release
04:28 < mmalecki> jerrysv: also, link me to the branch
04:28 < mmalecki> I'll have it tested
04:29 < jerrysv> mmalecki: 2, i have the major issue in the redis parser fixed, i'll commit tomorrow, that leaves one weird issue i'm still tracking down. i got stuck on another major project and had a hard time getting back to redis :)
04:29 < mmalecki> (if anyone at nodejitsu who runs windows is awake)
04:29 < mmalecki> coderarity: hey, you have any windows machine?
04:29 < jerrysv> mmalecki: https://github.com/cloudhead/vows/tree/v0.6.4
04:29 < coderarity> mmalecki, yessir
04:29 < jerrysv> coderarity: awesome!
04:29 < mmalecki> coderarity: mind testing ^ on windows?
04:30 < coderarity> alright, i just got on my mac too :P
04:30 < coderarity> i'm right next to my windows so it's all good
04:30 < jerrysv> mmalecki, coderarity thank you! :)
04:31 < jerrysv> you would think that being unemployed means that you have a lot of time. in fact, the opposite is actually true.
04:32 < coderarity> jerrysv, i feel ya bro
04:32 < coderarity> then again i was also in high school back then ;P
04:32 < mmalecki> jerrysv: if you need it, I can allocate some hours for you
04:32 < jerrysv> ha. high school was a couple of decades ago for me :/
04:32 < blauz> if i use git clone http://github.com/isaacs/npm.git , should i cd to /usr/local/src ?
04:33 < coderarity> jerrysv, oh, wow. you have kids and stuff now, I guess?
04:33 < jerrysv> mmalecki: awesome, it may be a mrannney, not sure. down to one issue
04:33 < coderarity> blauz, just like, `cd npm`
04:33 < jerrysv> coderarity: ha. no. just a lot of projects. did you make it to nodeconf?
04:33 < coderarity> jerrysv, nah, I haven't been to a conference before
04:34 < coderarity> jerrysv, i graduated high school like 2 months ago
04:34 < coderarity> 3 weeks before break up, break up was 2 months ago
04:34 < coderarity> so 2 months and 3 weeks or so
04:34 < jerrysv> coderarity: never mind :) i've been building stuff for a bar
04:35 < coderarity> jerrysv, nodebar? do want
04:35 < blauz> coderarity, you don't understand my question. I'm asking if i need to cd somewhere, before doing git clone http://github.com/isaacs/npm.git , i'm not root. I'm in the user1 ~ folder
04:35 < jerrysv> coderarity: http://www.baileystaproom.com
04:36 < jerrysv> coderarity: https://github.com/JerrySievert/4dlcd
04:36 < coderarity> blauz, i don't think it matters, but /usr/local/src sounds good
04:36 < blauz> ok
04:36 < coderarity> jerrysv, when i'm in portland and not in danger of being arrested, I'll go there ;P
04:37 < jerrysv> coderarity: so 3 years?
04:37 < coderarity> jerrysv, idk, probably?
04:37 <@konobi> time to have a conference in belgium... legal drinking age of 14
04:37 < coderarity> jerrysv, "when i'm in portland" will probably be longer than 3 years
04:37 < othiym23> oh hey, I was just reading about Bailey's the other day
04:38 < coderarity> konobi, no way.
04:38 < othiym23> in an article saying that the old Church of Elvis space is for rent
04:38 < coderarity> konobi, i would have been SO DRUNK when I went to belgium if I knew that
04:38 < othiym23> the old, new Church of Elvis space
04:38 < jerrysv> othiym23: bailey's is awesome, i have tech there
04:39 < othiym23> it's about four blocks from my company's Portland office, so I'll see if I can peer pressure them into checking it out
04:39 <@konobi> lots of places in europe have 16, 18... but belgium is the lowest i believe
04:39 < othiym23> actually, it'll be like 2 blocks once we move into Big Pink
04:39 < jerrysv> othiym23: what's your company?
04:39 < othiym23> jerrysv: New Relic
04:39 < othiym23> I'm their Node "team"
04:39 < jerrysv> othiym23: oh. manual mysql sharding
04:40 < othiym23> jerrysv: it works real good!
04:40 < jerrysv> othiym23: i'm a big data guy. and i've chatted with about half of your pdx team.
04:40 < othiym23> they get around
04:40 < jerrysv> othiym23: i'm sure it "works", but support is a different story
04:41 < jerrysv> othiym23: disney interactive runs on a single pg db
04:41 < othiym23> hey man, I didn't choose the stack ;)
04:41 < jerrysv> othiym23: i met a chunk of them at nodepdx
04:41 < jerrysv> othiym23: and they do make it to baileys :)
04:41 < othiym23> I've been a Postgre dude since Postgres95, but they didn't ask me
04:41 < othiym23> xlnt
04:42 < othiym23> they're total beer and coffee snobs, so you must be doing something right
04:43 < jerrysv> othiym23: i'm just a big data guy - and a beer snob. i'm at bailey's almost every day and have more tech going in next month :)
04:43 <@konobi> huh... i thought disney also did mysql... but maybe that was just club penguin
04:44 < jerrysv> konobi: they do a lot, they're a huge company
04:44 < jerrysv> konobi: i only know the vp of disney interactive :/
04:44 < othiym23> jerrysv: NR isn't really a big data company per se, and as weird and ad hoc as their solution may look from the outside, it works phenomenally well from an operational point of view
04:45 < othiym23> and it doesn't matter so much whether it's MySQL or PgSQL or whatever, it's more about the representation of the data and how the sharding is set up
04:45 <@konobi> jerrysv: yeah, that was part of dsney interactive... but they were an acquisition irrc
04:45 < coderarity> jerrysv, tested flatiron with vows at v0.6.4 branch and it seemed to work
04:46 < coderarity> on windows
04:46 < othiym23> konobi: depends on the team
04:46 < jerrysv> othiym23: true, but i'm used to partitioning with good indexing :)
04:46 <@konobi> othiym23: enotpm
04:46 < jerrysv> coderarity: awesome, thank you very much
04:46 < mmalecki> coderarity: try running vows tests too please
04:46 < mmalecki> I don't think it'll work
04:46 < mmalecki> but whatever
04:46 < othiym23> konobi: I'm on the agents / instrumentation team, and we have people in Australia, South Africa, and exotic, far-off San Francisco
04:46 < mmalecki> if flatiron works, I'm cool with that
04:46 < coderarity> oh, i see
04:47 <@konobi> othiym23: i hit you up in a pm
04:47 < coderarity> jerrysv, running `npm test` in vows@0.6.4 breaks some stuff tho
04:47 < coderarity> jerrysv, gist inc
04:47 < jerrysv> coderarity: thank you
04:48 < jerrysv> that was my biggest concern
04:48 < jerrysv> some new person with a ton of comment (i'm sure you saw those, mmalecki)
04:49 < coderarity> sorry about windows being bad, https://gist.github.com/d76ebf9fc37e520dc89f'
04:49 < coderarity> https://gist.github.com/d76ebf9fc37e520dc89f
04:49 < coderarity> those are x's and checkmarks in those weird foreign characters
04:49 < jerrysv> coderarity: it's all good, i can fix the errors in the morning, thanks much
04:49 < coderarity> jerrysv, np
04:51 < mmalecki> jerrysv: that failed since always
04:51 < mmalecki> ignore it for now
04:51 < niloy> hi guys
04:51 < mmalecki> we can fix it... one day
04:51 < jerrysv> mmalecki: ok, then your call on release since you hold the purse strings :)
04:51 < mmalecki> jerrysv: okay, reviewing and publishing
04:51 < mmalecki> jerrysv: also, your npm username?
04:52 < jerrysv> mmalecki: jerrysievert
04:52 < jerrysv> mmalecki: when you're done, i can close some more of those pull requests
04:52 < jerrysv> mmalecki: might be JerrySievert if case matters
04:53 < blauz> what is the latest version of npm?
04:53 < mmalecki> jerrysv: ugh, coding style in lib/assert/error.js is terrible
04:54 < chilts> blauz: which version of node are you using?
04:54 < blauz> 0.8.6
04:54 < chilts> v1.1.59 is with 0.8.8
04:54 < blauz> i have npm 1.1.48
04:55 < jerrysv> mmalecki: i can go back and fix that after the fact, i fixed some of the issues on pull requests alread
04:55 < chilts> blauz: all the tags are here : https://github.com/isaacs/npm/tags
04:56 < jerrysv> which is amusing, since my code coverage stuff was accepted immediately because i *did* program in cloudhead's style
04:57 < mmalecki> jerrysv: lol, that commit rewrote package.json...
04:57 < jerrysv> mmalecki: i *thought* that i caught all of those
04:57 < jerrysv> mmalecki: https://github.com/cloudhead/vows/blob/v0.6.4/package.json
04:58 < mmalecki> yeah, it's fine noe
04:58 < mmalecki> but history is messy
04:58 < mmalecki> let me fix that somehow
04:58 < jerrysv> ha, guess i used my jsievert account, not my jerrysievert account, need to bug cloudhead about that
04:58 < mmalecki> I can add you to owners
04:59 < jerrysv> thanks, i'd appreciate it
04:59 < mmalecki> done
04:59 < jerrysv> i will go back and fix the errors.js stuff for next release. you're right, that' horrible
04:59 < mmalecki> I'll do the release tho
04:59 < jerrysv> thanks
05:00 < jerrysv> now that my big bailey's project is near completion, i should be able to devote more time to the bugs. until my drone parts show up at least
05:00 < mmalecki> hrm, that's a merge commit, can't rebase it
05:00 < jerrysv> some times i feel like tmpvar and his unemployed projects.
05:01 < mmalecki> I mean, just don't merge pull requests like that in the future
05:01 < mmalecki> have people fix them
05:01 < mmalecki> sorry, I'm probably nitpicking
05:01 < blauz> is it recommended to keep node and npm in the latest versions always or should i consider before updating?
05:01 < mmalecki> but I'm ocd
05:01 < jerrysv> i think i tried a merge and then fixed it after the fact, but yeah, i agree
05:01 < jerrysv> my bad
05:01 < mmalecki> it's cool
05:02 < jerrysv> at least we're releasing with some updates, so some progress.
05:02 < jerrysv> still waiting on responses for the things i rejected
05:05 < rvagg> Nexxy: you still worked up about the 'incident'?
05:06 < jerrysv> mmalecki: i committed my node-redis changes that fix all but packet 4007 on multi_bench for lrange 20k
05:06 < Init--WithStyle-> Hey node.js, I have two files that need to "see" eachother (use eachother's code)... how best could I do this instead of just copying the contents of one file into the other?
05:06 < rvagg> Nexxy: or are you still getting harassed?
05:06 < Init--WithStyle-> Two modules basically..
05:07 < Mortchek> Init--WithStyle-, assuming they're in the same directory, require('./foo') in one and require('./bar') in the other
05:07 < Init--WithStyle-> or foo.js right?
05:08 < Mortchek> Init--WithStyle-, the part I suggested you ask about was the consequences of such a circular dependency, as I don't know
05:08 < Mortchek> Init--WithStyle-, leave off the .js
05:09 < jerrysv> Init--WithStyle-: put the shared code in a 3rd module and require it in both?
05:11 < mmalecki> jerrysv: there, pushed
05:11 < Mortchek> Init--WithStyle-, I may have mistakenly assumed "exports" when you said "code". My fault.
05:11 < Init--WithStyle-> no worries i'll keep hacking away :)
05:11 < jerrysv> mmalecki: awesome, thank you!
05:11 < jerrysv> mmalecki: i owe you a beer when you finally make it to nodeconf :)
05:12 < jerrysv> mmalecki: or, if you're in the states by november, cascadia.js
05:12 < mmalecki> jerrysv: node dublin?
05:12 < jerrysv> mmalecki: dude. i'm funemployed right now so saving cash, a trip to dublin is more than i want to spend right now
05:13 < jerrysv> i would bug my SO, but she's taking us to oakland next week :)
05:15 <@konobi> jerrysv: just need to find crash space
05:16 < jerrysv> konobi: ha. no. :)
05:17 < jerrysv> konobi: a trip from pdx to dublin is still serious cash at this point
05:18 < jerrysv> mmalecki: quitting out at this point, thanks for your attention. i'll jump back on node-redis in the morning, but that should be enough to be moving forward
05:27 < Dragonblade> question :o
05:28 < Dragonblade> Since Im queueing the songs on the player individually instead of readdirSync
05:28 < Dragonblade> would a for loop be pointless?
05:29 < tnorris> i'm trying to do a db import on a 5 million line file, only way I've figured is to use a ReadStream, but it's stopping after 7500 entries
05:29 < tnorris> any ideas?
05:33 < Dragonblade> tnorris: https://github.com/joyent/node/issues/1862
05:35 < tnorris> Dragonblade: what does that have to do with reading a 5 million line file line by line?
05:35 -!- mode/#Node.js [+b *!*@cpe-98-154-231-236.socal.res.rr.com] by ChanServ
05:35 -!- TheEmpath was kicked from #Node.js by ChanServ [User is banned from this channel]
05:35 < ljharb> lol
05:37 < gildean> tnorris: you're prolly hitting the max stack size as the lines are buffering
05:37 < Dragonblade> Just tryin to help ._ .
05:37 < gildean> maybe you need to dump the data periodically
05:37 < othiym23> tnorris: how are you reading the file / pushing the enties to the database?
05:37 < tnorris> Dragonblade: nothing meant by it. just wondering if I missed something. been working on this for a couple hours and starting to loose my mind.
05:38 < tnorris> othiym23: http://pastebin.com/8bM1tQXe
05:39 < tnorris> son of a bitch. just figured out that it's not reading line by line.
05:41 <@konobi> var dude... var
05:41 < tnorris> konobi: ?
05:41 < othiym23> tnorris: yeah, I was gonna point that out ;)
05:42 < tnorris> what do you mean?
05:42 < othiym23> line 22: var d (that's what konobi was mentioning)
05:42 < othiym23> gotta global leak there
05:42 < tnorris> othiym23: d is declared as the function variable. it's being reused.
05:42 < tnorris> it won't leak that way
05:43 < othiym23> but yeah also you're getting a bigass chunk of the file at once
05:43 < othiym23> and so it is
05:43 < othiym23> sorry, wasn't reading closely enough
05:43 < othiym23> also, have an aversion to assigning to parameters from my Java days
05:43 < tnorris> ok, so I need to split the input by new line. that makes a lot more sense.
05:43 < tnorris> heh.
05:44 < othiym23> yeah, and I don't think readStream necessarily respects newline boundaries when it's reading in, either
05:44 < othiym23> so if you have a chunk that ends without a newline, you probably need to keep that around to glom onto the beginning of the next chunk
05:44 < tnorris> but... the buffer doesn't guarantee to split my file on a new line, so I'll need to save the last entry and make sure it doesn't have any trailing characters, right?
05:44 < tnorris> ok.
05:44 < othiym23> y
05:44 < gildean> it doesn't, it fills up the buffer and pushes that to the data-object
05:45 < gildean> so it might cut off at any point
05:45 < tnorris> ok, so split on new line, store the last entry and wait for the next entry to come in.
05:45 < tnorris> then append the previous entry to the new data.
05:45 < tnorris> think I can handle that.
05:47 < tnorris> my first solution was a crazy ass awk command piping to redis-cli. yeah.. not thinking clearly right now.
05:49 < blauz> hi, after installing npm, i'm trying sudo chown -R $USER /usr/local
05:49 < blauz>  to use npm without sudo. it doesn't work, i still need sudo. any reason?
05:49 <@konobi> blauz: people still use pipex?
05:50 < blauz> pipex?
05:50 <@konobi> blauz: that's what your earlier quit message said you were coming from
05:51 <@konobi> dsl.pipex.com
05:52 < blauz> not sure, not a techy
05:54 < blauz> why sudo chown -R $USER /usr/local
05:54 < blauz>  is not working? i still need sudo for npm
05:54 < blauz> :/
05:54 < tnorris> othiym23, gildean: thanks much. just imported all 5 million records.
05:54 < othiym23> yay!
05:54 < othiym23> tnorris: how long did it take?
05:55 < tnorris> about 10 seconds.
05:55 < gildean> tnorris: not too bad
05:56 < timeturner> too bad it wasn't 10 miliseconds
05:56 < gildean> tnorris: mind sharing your solution?
05:58 < tnorris> gildean: http://pastebin.com/u02Jby7n
05:59 < tnorris> let me know if you see a faster solution. my mind is mush right now.
06:00 < othiym23> that seems pretty fast to me
06:00 < othiym23> also, it loaded 5 million records in 10 seconds, which seems pretty good considering the serialization overhead
06:01 < tnorris> true true. and I have to take into consideration that the file is half a gig.
06:01 < tnorris> so just reading it in takes time.
06:03 < tnorris> just if anyone is curious, i'm reading the entire ODP (dmoz.org) data file into redis.
06:03 < tnorris> just wanted quick local access to page categorization.
06:32 < vishal_raghu> process.on("SIGINT", function(){console.log("signal received");});
06:33 <@konobi> ?
06:41 <@konobi> mmm... quiet all of a sudden
06:42 < tnorris> anyone know how to set the max memory limit on a node process to 256MB?
06:43 < tnorris> konobi: promise i'll be gone soon then you can have the room all to yourself.
06:43 <@konobi> mwuahahahaha
06:43 <@konobi> tnorris: 32 or 64 bit?
06:43 < tnorris> konobi: 64 bit.
06:44 <@konobi> and why 256?
06:44 < tnorris> problem is i'm loading something into redis on a EC2 server, which can fit, but the node process fails while loading because it runs out of mem.
06:44 < Beryllium> heh, I had a similar problem on a t1.micro … silly lack of swap space
06:44 <@konobi> --max-stack-size
06:45 <@konobi> tnorris: might be worth checking a joyent env
06:46 <@konobi> the libc malloc/free can be rather different between platforms... but at least on smartos you could track it
06:46 < tnorris> smartos?
06:48 < jQuy> Hi!
06:53 <@konobi> tnorris: smartos.org
06:54 < tnorris> konobi: interesting. never seen that
06:58 <@konobi> tnorris: lots of nie node.js goodies too
07:09 < d4rklit3> hey
07:10 < d4rklit3> how do i use this grunt system?
07:12 < astropirate> d4rklit3, grunt system?
07:12 < d4rklit3> heh yeah
07:12 < d4rklit3> grunt-sass
07:12 < d4rklit3> mainly
07:13 < d4rklit3> not really sure what to do with it
07:13 < d4rklit3> do i require the grunt.js file?
07:13 < astropirate> ohh. i've no idea
07:13 < astropirate> never used it
07:17 < d4rklit3> i just want to compile some sass
07:22 < d4rklit3> node-sass doesn't seem to run either
07:29 < d4rklit3> so there are no binaries
07:29 < d4rklit3> for sass for windows
07:42 < deoxxa> https://github.com/deoxxa/bittorrent.js/pull/2 best pull request
07:53 < SomeoneWeird> haha deoxxa 
07:55 < thanpolas> did you get your repo's trolled by travis.ci?
07:57 < mmalecki> I really should be preparing slides for my talk in 8 hours
07:58 <@Nexxy> just get an overhead projector
07:58 <@Nexxy> and some sharpies
07:58 < maxogden> mmalecki: what is the talk on?
07:58 <@Nexxy> ... a stage
07:58 < mmalecki> maxogden: "Strapping Turtles to Rockets is Harder Than You Think"
07:59 < maxogden> isnt it the other way around
07:59 < mmalecki> WELL MAYBE
07:59 < maxogden> :D
08:00 < mmalecki> maxogden: I think I was actually pretty drunk when coming up with that topic
08:02 < mmalecki> Nexxy: I finished drinking!
08:02 < mmalecki> Nexxy: for today!
08:02 <@Nexxy> rofl
08:02 <@Nexxy> well that only took... 16 hours
08:03 < mmalecki> that might be correct
08:08 < mmalecki> Nexxy: this place has some cool drinks tho...
08:09 <@Nexxy> mmalecki, excuses excuses
08:09 <@konobi> bon soir
08:10 <@konobi> mmalecki: well, 8 out of 24 is all you need, right?
08:10 < SomeoneWeird> lol
08:11 < mmalecki> konobi: yeah, I'll make it
08:11 < mmalecki> konobi: my record was preparing slides at a previous talk
08:11 <@konobi> what time is it in GMT right now?
08:12 <@konobi> or GST
08:12 < SomeoneWeird> ;;tz
08:12 < mmalecki> konobi: 9:11
08:12 < SomeoneWeird> lol
08:12 < mmalecki> konobi: my timezone is 10:11
08:12 <@konobi> eh?
08:12 < SomeoneWeird> my timezone is 18:12
08:12 <@konobi> mmalecki: wtf timezone is that?
08:13 < mmalecki> konobi: GMT+1. Poland
08:13 <@konobi> oh eck
08:22 < theblackbox> hey all, spotted something in my feeds t'other day and can't find it now - it loaded the node.js file dynamically (so to speak) so that I wouldn't have to stop and start the server each time 
08:22 < theblackbox> I thought it was node mod, but doesn't appear to be right
08:23 < SomeoneWeird> reloaded on change?
08:23 < SomeoneWeird> somethin like forever --watch?
08:24 < margle> SomeoneWeird: I use node-supervisor
08:25 < theblackbox> yeah I'm just finding these ones, any reason to prefer one from the other? they seem pretty similar
08:27 < Hui_Nan> hi all, coul anyone provide me with an example of sending POST request with parameters via "request" module&
08:27 < Hui_Nan> ?
08:28 <@Nexxy> Hui_Nan, you should be able to just use request.post(..)
08:29 < Hui_Nan> buth where the parameters should go and in what a form?
08:29 <@Nexxy> that depends on what you want to send!
08:29 < Hui_Nan> key and value pairs
08:30 < SomeoneWeird> i think its request.post(url, { post objects })
08:30 <@Nexxy> https://github.com/mikeal/request#requestoptions-callback
08:34 < mmalecki> dominic_zzzzzzzz: WAKE UP
08:34 < mmalecki> dominic_zzzzzzzz: I'm at Nova
08:34 <@konobi> mmalecki: lo
08:35 < mmalecki> konobi: yeah, I left him sleeping in the apartment
08:35 < mmalecki> (we're hanging out in Krakow for a bit)
08:36 <@konobi> Nexxy: more still, ffs
08:36 <@Nexxy> konobi, I'm staying out of it :)
08:38 < maxogden> OK i have said everything i wanted to say
08:38 <@konobi> Nexxy: yeah, good idea
08:39 <@Nexxy> \o/
08:40 < mmalecki> I'm only wondering, are people really that stupid? that kind of makes me sad
08:41 <@Nexxy> we're all capable of doing/saying irrational things when we're caught up in the moment
08:41 <@Nexxy> hopefully he can regain composure after everything blows over
08:42 < mmalecki> Nexxy: eventual sanity?
08:42 <@Nexxy> rofl, yes
08:42 < mmalecki> well, that worked with consistency!
08:43 < Hui_Nan> ok, I should use form parameter, that should be an object %-)
08:43 < Hui_Nan> thanks!
08:44 <@Nexxy> Hui_Nan, good luck! :)
08:46 < diverdude> so, sequelize can work against an existing database schema?
08:48 < rvagg> diverdude: nicholas_ has his head all over sequelize at the moment, you should bother him if he's not busy, I think he's at a meet-up atm tho
08:48 < jetienne> q. i look for a library which give the same API for node buffer and browser arraybuffer, where should i look 
08:49 < diverdude> rvagg: ahh ok. is he the creator?
08:51 < jetienne> https://developer.mozilla.org/en-US/docs/JavaScript_typed_arrays/DataView is kinda close to node.js buffer
08:53 -!- konobi changed the topic of #Node.js to: http//nodejs.org
08:53 <@konobi> bah
08:53 < diverdude> konobi: what?
08:53 -!- konobi changed the topic of #Node.js to: http://nodejs.org | no. 1 rule... don't be an asshole
08:58 <@konobi> ops... ping me
08:59 < rvagg> diverdude: no, he's not the creator, he's just been getting very familiar with it the last few days so he may be able to help
09:01 < diverdude> rvagg: ahh right. It looks really nice when i look at the docs...seems its totally flexible
09:01 < diverdude> rvagg: kinda reminds me of cakephp
09:01 < rvagg> diverdude: I think nicholas_ has been a bit frustrated with it when he's actually attempted to put it into use, but I probably shouldn't speak for him cause I haven't touched it
09:02 < diverdude> rvagg: ahh right. I should definitly have a talk to him then. I hope he will be back soon :)
09:03 <@konobi> mmalecki and other folks... while we appreciate your input... please do NOT continue on the thread
09:03 < mmalecki> konobi: sorry, just had to say what I feel about it
09:03 < mmalecki> that's it for me
09:03 < rvagg> is that gist still going?
09:04 <@konobi> i know... but when folks throw around legal talk... that's a different thing
09:04 < diverdude> nicholas_: hey, do you have a moment to talk about sequelize? 
09:08 < nicholasf> diverdude: hey
09:08 < nicholasf> shoot me a priv msg and I'll tell you everything I know about Sequelize
09:08 < nicholasf> well, we can swap emails, I'll email you about it
09:13  * margle mumbles something about sexists conversations.
09:25 < ruquay> hello, is there a way for npm to list currently installed packages which are not in the "dependencies" in package.json?
09:26 < polotek> ruquay: npm ls does this. if it's not in "dependencies" it'll have the word "extraneous" next to it
09:29 < joaojeronimo> I have an HTTP server (using express but I think it's not relevant to this), and I'd like to know when a client has closed the connection before the response has finished. Which events of the request will tell me this ? the 'close' event of the request only fires when a timeout happens...
09:30 < ruquay> polotek: thanks very much!
09:32 < [AD]Turbo> hola
09:33 < ruquay> joaojeronimo: have you tried accessing the request.connection?  that is a reference to the underlying socket.
09:33 < joaojeronimo> ruquay, no, I'll try that.. thanks !
09:34 < milani> https://gist.github.com/3434679
09:35 < milani> can anyone suggest an elegant solution to this?
09:35 < milani> I know I can use Object.getOwnPropertyNames, iterating etc.
09:35 < milani> I'm curious to find the best shortest answer:)
09:41 < joaojeronimo> ruquay, nope, it seems that req.connection doesn't fire any events...
09:41 < joaojeronimo> ruquay, and req.connection.onend is sealed
09:42 < Nopik> milani: in coffeescript it would be something like (type + ":" + acceptTypes[ type ].join(",") for type of acceptTypes).join(";") 
09:47 < milani> Nopik, hmmm and what coffeescript generate for this code? the js code.
09:47 < Nopik> milani: j2coffee.org
09:49 < Nopik> milani: though, if you write it yourself, you'll get cleaner output
09:49 <@konobi> maxogden: ping
09:50 < milani> Nopik, thx for the site! didn't know abt it.
09:50 < Nopik> milani: you're welcome
09:51 < Nopik> actually, using underscore library could hide the for, making the code shorter
09:52 < Nopik> something like _.collect( acceptTypes, function(type){return type + ":" + acceptTypes[type].join(",")}).join(";") (didn't tried that code, though)
09:54 <@konobi> async style
09:57 < jQuy> Is it wise to create own file for data modelling? I'm using MongoDB and Mongoose.
10:02 < ljharb> milani: Object.keys(acceptTypes).reduce(function (arr, key) { arr.push(key + ':' + acceptTypes[key].join(',')); return arr; }, []).join(';');
10:02 < ljharb> milani: don't use coffeescript or underscore when native javascript does it so nicely.
10:03 < ljharb> ah, polotek already commented on your gist.
10:07 < milani> ljharb, yeah. wasn't going to use coffee or underscore.
10:07 < milani> thx:)
10:07 < ljharb> np
10:10 < mmalecki> dominic_zzzzzzzz: I'm at eszeweria now
10:11 < dominic_zzzzzzzz> mmalecki, sure, just woke up. sure I can figure out the way there
10:12 < dominic_zzzzzzzz> what time are our talks?
10:12 < mmalecki> dominic_zzzzzzzz: https://maps.google.com/maps?q=Eszeweria,+J%C3%B3zefa,+Krakow,+Poland&hl=pl&ie=UTF8&sll=37.0625,-95.677068&sspn=36.863178,85.078125&oq=eszewer&hq=Eszeweria,&hnear=J%C3%B3zefa,+Krak%C3%B3w,+ma%C5%82opolskie,+Polska&t=m&z=16
10:12 < mmalecki> dominic_zzzzzzzz: finding out
10:14 < mmalecki> dominic_zzzzzzzz: talks are at 6 PM
10:14 < mmalecki> dominic_zzzzzzzz: but we're meeting with Paolo at 3:30 at Karolina's
10:15 < mmalecki> dominic_zzzzzzzz: also, they were 15 minutes usually, but they might be longer
10:16 < mmalecki> dominic_zzzzzzzz: oh, if you feel like getting breakfast, they have awesome breakfast at the place we've been to yesterday
10:16 < mmalecki> mieta
10:28 < progzer> Hi, I'm looking to learn a little node.js
10:28 < progzer> Is there a sample 'chat' application.
10:28 < progzer> I saw the super short echo example, I'm looking to learn more by looking at a sample using 'net' which deals with multiple clients.
10:29 < progzer> Ah I see there is a chat.nodejs.org
10:34 < ruquay> joaojeronimo: are you talking about a function "onend", or can you maybe just listen via request.connection.on("end", yourfunctionhere)?
10:41 < progzer> hmm that one's http
11:00 < mmalecki> dominic_zzzzzzzz: stop reviewing pull requests and get your ass over here
11:01 < dominic_zzzzzzzz> mmalecki, I'm actually browsing todays twitterville crises
11:02 < mmalecki> dominic_zzzzzzzz: stop browsing it, I'll tell you a story tale when you get here
11:04 < diverdude> nicholas_: hey, still busy? :)
11:16 < diverdude> I have put this in my module file: module.exports = function(sequelize, DataTypes) {...} but i get an error saying: throw new Error("Cannot find module '" + request + "'"); Cannot find module 'Model/profile.js' am I doing this wrong somehow+
11:16 < diverdude> ?
11:18 <@konobi> what's the require line and from where
11:18 < progzer> Maybe you're doing a require("Model/profile.js") instead of "./Model/profile.js" (just a guess)
11:19 < spionL> So, what does one need to implement to make a writable / readable stream?
11:20 < diverdude> progzer: that makes no difference
11:20 < dominictarr> spionL, what does the stream do?
11:21 < diverdude> konobi: i do this: var Profile = sequelize.import('./Model/profile.js')
11:21 < spionL> I'm making a stream multiplexer.
11:21 < nicholas_> hey diverdude - check out http://github.com/nicholasf/ectypes-sequelize
11:21 < dominictarr> https://github.com/dominictarr/stream-spec/blob/master/stream_spec.md
11:21 < diverdude> nicholas_: 404
11:21 < spionL> dominictarr, thank you :)
11:21 < dominictarr> spionL, have you seen this one:  https://github.com/dominictarr/mux-demux
11:22 < progzer> Thanks diverdude. I'm just learning and don't know much. I was just reading the section on File Modules in the doc which mentioned not having ./ requires it to be in the node_modules folder[s]
11:22 < diverdude> progzer: ah ok :)
11:23 < spionL> dominictarr, I'm looking at it :)
11:23 <@konobi> diverdude: skip the .js part and make sure it's relative to the original file that you're require()'s
11:24 < spionL> dominictarr, it allows multiplexing several writeable streams over a single one, then demultiplexing them as several read streams on the other side?
11:24 < nicholas_> diverdude: http://github.com/nicholasf/ectypes-sequelize.js
11:24 < dominictarr> spionL, correct. 
11:24 < dominictarr> you can go both ways. they can be duplex streams.
11:25 < spionL> oh, so muxdemux is an actual stream itself too
11:25 < spionL> for example you pipe the stream you want to multiplex to it
11:25 < spionL> err demultiplex
11:26 < spionL> then you create multiple readable stream
11:26 < diverdude> konobi: hmm skipping .js made no difference also. I have file ChatHandler.js in which i do that line. In i subfolder i have Model, which contain profile.js
11:26 < spionL> or in the reverse direction, you would pipe it to another stream and create multiple write streams from it.
11:26 < spionL> or both at the same time of course.
11:27 < spionL> dominictarr, exactly what I need. I think. :D
11:27 < diverdude> konobi: hmm, full path seem to work
11:27 < diverdude> konobi: from which directory does node.js use relative refs ?
11:28 < spionL> dominictarr, one question though. Are there any plans to support substream priorities? :)
11:28 < spionL> Something which would prevent a substream to pump a huge amount of data
11:28 < spionL> also, does it work on binary data?
11:28 < dominictarr> spionL, oh, yes.
11:29 < dominictarr> if you have thoughts on how to do that well I'm all ears
11:29 < dominictarr> currently, it uses JSON to serialize the streams,
11:29 < spionL> priorities or binary?
11:29 < dominictarr> but you can also use msg-pack for binary
11:29 < dominictarr> both
11:30 < spionL> for binary, I was thinking that each packet would be json-header then binary data
11:30 < spionL> json header would contain length of binary data
11:30 < dominictarr> spionL, I want to adapt the redis protocol for binary
11:31 < diverdude> ah got it: var Profile = sequelize.import(__dirname + '/Model/profile.js')
11:31 < dominictarr> there are already fast parsers written, just need to mold it into a stream interface.
11:32 < spionL> and for priorities, queue data from each stream and process it round-robin in N-byte chunks. each stream receives stream.priority tokens.
11:33 < dominictarr> yeah, that is pretty simple.
11:34 < dominictarr> spionL, I'd be open to a pull request for that.
11:34 < spionL> I think I'll fork your project and mess around
11:34 < spionL> yeah :D
11:34 < dominictarr> cool.
11:37 < spionL> but I'll need full and fast binary support first. oh well I think I can go with custom serialization and message pack
11:37 < spionL> should be fast enough at start
11:38 < diverdude> what? In sequelize, in order to update an object i need to first select the object in the database, and THEN update it? So i need to do an "unecessary" select for every update i need to do?
11:39 < nicholas_> diverdude: I imagine there'd be a way around that
11:39 < nicholas_> a lot of stuff is undocumented
11:40 < nicholas_> worth googling on the issues in the google group
11:40 < diverdude> nicholas_: how do you update a row?
11:40 < nicholas_> diverdude: I haven't had to yet. I'm just creating and destroying stuff
11:40 < diverdude> nicholas_: i found this answer: http://stackoverflow.com/questions/8158244/how-to-update-a-record-using-sequelize-for-node which seems insane
11:41 < nicholas_> diverdude: well, you know, I did just give you the advice to search the issues on github
11:44 < raheel> is there any documenatation to understand the nodejs SOURCE code ?
11:45 < jQuy> How to remove globally installed node package?
11:46 < thomasfr> jQuy: npm rm [MODULE] -g
11:46 <@konobi> any clock folk about?
11:47 < RLa> raheel, code comments?
11:47 < jQuy> thomasfr: npm uninstall [MODULE] doesn't work?
11:48 < raheel> @RLa I am going through them and just thought I would ask
11:48 < raheel> BTW, is it possible to compile (into binaries) NODEJS codes ?
11:48 < thomasfr> jQuy: seems to be the same
11:49 < thomasfr> but if you want to remove it globally you have to add '-g'
11:49 < jQuy> thomasfr: but you have -g in your command
11:49 < RLa> raheel, making a single binary?
11:49 < thomasfr> npm rm === npm uninstall
11:50 < raheel> i mean if I have hello.js, can I compile it into a Single Binary
11:52 < jQuy> thomasfr: but you have -g in your command
11:52 < jQuy> thomasfr: It worked, thanks :)
11:59 < jQuy> How to update node.js version on Windows 7?
12:00 < milani> anyone here have problems with mongoose Model.save() ? 
12:00 < raheel> RLa did my question make sense to you ?
12:00 < milani> Cannot use 'in' operator to search for '_id'
12:00 < milani> at model.Document._buildDoc (/data/work/ivysoft/recservice/node_modules/mongoose/lib/document.js:145:27)
12:00 < RLa> yes, but i have no idea how to do it
12:01 < RLa> milani, can you paste your schema code somewhere
12:01 < milani> RLa, https://gist.github.com/3436022
12:02 < milani> it actually saves data, but with that error.
12:03 < milani> err. no it doesn't save
12:04 < RLa> data is another mongoose object or just an object?
12:05 < milani> RLa, just an object.
12:05 < Fike> just random: Mongoose is fine but I don't use it because you have to define a schema, mongo is meant to be "schema-less" and built for storing documents with w/e data in it
12:05 < Fike> mongo-lite<3
12:05 < RLa> new Item(data).save() outside the count callback works itself?
12:06 < RLa> Fike, true, there is also mongoskin
12:06 < milani> didn't check. a sec.
12:06 < dr0id> I use the basic mongo module what was that ..
12:06 < RLa> node-mongodb-native?
12:06 < RLa> that has very verbose api
12:07 < milani> no it doesn't.
12:07 < milani> this code worked with another schema and older version of mongoose. going to use that schema with this mongoose version to check.
12:07 < dr0id> right that one
12:07 < RLa> milani, can you check if count it Number or something else?
12:07 < RLa> is*
12:08 < milani> RLa, I commented out that part and put 0 constant.
12:08 < milani> not worked.
12:09 < RLa> and error surely comes from save, not count?
12:09 < milani> yeah. 
12:09 < milani> hmm.
12:09 < milani> I think it has to do something with schema.
12:10 < milani> another schema worked.
12:10 < milani> or the data I provide.
12:10 < RLa> i had one issue i debugged a week, then reported bug and came out i had schema error instead :)
12:12 < milani> it is data here.
12:12 < milani> oh the data object should have all keys defined in schema
12:12 < milani> WTF.
12:12 < RLa> Fike, a thought, what about document store with strict schema?
12:13 < milani> err not that even.
12:15 < milani> ok found the bug in my data.
12:17 < gildean> i've been using mongojs, it seems to do the job as intended
12:23 < jQuy> testing
12:23 <@konobi> fail
12:28 < Industrial> Howcome I get this error? the route is in app.routes; https://gist.github.com/1c247251711f6f4882f9
12:29 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:33 < gildean> Industrial: firs of all the first route grabs all post-requests, also the ones for the guestbooks, if they are in that order
12:34 < Industrial> guess that's an app.all call
12:38 < Industrial> gildean: I removed the call, there is now one route to POST /guestbook and I get the same error
12:40 < Industrial> The weird thing is that I'm getting a 304, not a 404 (if any). There is nothing prohibited about the route, in fact I just do a console.log there (which doesn't appear)
13:06 < diverdude> nicholasf: does not look to good
13:08 < nicholasf> diverdude: I
13:09 < nicholasf> I'm crashing out, join #sequelize
13:09 < nicholasf> You're not going to find a complete, perfect ORM in the Node world. If you understand the problem, become involved in solving it
13:11 < jrajav> s/in the Node world//
13:11 < diverdude> nicholasf: there is no #sequelize
13:11 < jrajav> Unsolvable problem
13:12 < nicholasf> ah sorry
13:12 < nicholasf>  #sequelizejs
13:13 < nicholasf> jrajav: yeh, clever, except not - you just made the problem broader, not irrelevant
13:14 < jrajav> The object model can't map neatly onto the relational model
13:14 < jrajav> And if you try you're going to make tradeoffs
13:14 < jrajav> Tradeoffs that were meant to be eliminated by the relational model in the first place
13:14 < nicholasf> jrajav: it's kind of a tired topic, or, if you like, I'm really tired
13:14 < nicholasf> so I'll chat about it next time I see you, if you like
13:14 < jrajav> I'm not objecting to the idea of ORMs
13:15 < jrajav> I'm objecting to the idea that you can have a "complete" ORM
13:15 < nicholasf> jrajav: ok. I'll look forward to hearing your ideas the next time we're both in channel mate
13:15 < jrajav> k
13:15 < nicholasf> I'm in Australia and it's 11:15 pm here. Must crash
13:16 < spionL> what is a complete ORM?
13:17 < diverdude> nicholasf: do you have createdAt and updatedAt columns?
13:18 < solidoodlesuppor> Morning all
13:33 < jrajav> spionL: One that perfectly maps a relational database to an object structure, I guess?
13:34 < spionL> i don't see why would that be a problem
13:35 < spionL> in a sufficiently good language it isn't. for example, linq to sql maps pretty darn well with practically no tradeoffs
13:35 < spionL> you get to keep most of sql too.
13:35 < jrajav> spionL: It's not -- Until you want to do anything more complicated than a select * and realize that for anything that you want to use a database for, you want the O-performance of a relational database
13:36 < spionL> the problem has been solved - by Microsoft unfortunately.
13:36 < spionL> :)
13:36 < jrajav> In most ORMs there's a gravitation to more and more of the direct relational statements for more complex or bottlenecked parts of the code
13:36 < jrajav> Which defeats the purpose
13:38 < jw___> ORM is for newbies
13:39 < spionL> and its the wrong solution. the solution is to bring most of SQL into the language.
13:39 < jrajav> Just as a for instance, one reason you might want an ORM in an object-oriented language is so that you can natively iterate over a collection and mutate each member somehow. But if you do that natively, your ORM is going to be querying the database for every member. Obviously you would benefit from querying the database yourself to get the whole collection at once, do your work, and then commit it
13:39 < jrajav> TL;DR: It's better to simply use relational databases rather than try to fit them into OO
13:39 < jrajav> spionL: Exactly
13:40 < spionL> the problem with SQL is that its a string
13:41 < jrajav> I see that as a feature, not a bug. It's really a separate, declarative language. Trying to fit it into the syntax and semantics of your language of choice is more likely to obfuscate it than it is to provide any real benefits
13:43 < spionL> Oh its a bug. Its called a language without sufficient power.
13:43 < jetienne> q. I'm in javascript, what is the recommended way to detect if the js run in browser, or in node ?
13:45 < spionL> jetienne, in node, typeof(window) == 'undefined'
13:46 < jetienne> spionL: makes sense. thanks
13:46 < spionL> Well. Unless there is var window somewhere before it
13:47 < spionL> Or global.window = 'stuff' executed by any module
13:47 < progzer> On a socket's data event, how do I find the socket itself? "this" ?
13:47 < spionL> but I'd rather throw that module in the garbage than work around that
13:52 < progzer> Oh, or I can use use function scoping to pass in socket when binding a particular event...  socket.on("data", function() { myOnData(socket); });
13:53 < progzer> Wait, more like: socket.on("data", function(theData) { myOnData(theData, socket); });
13:53 < CIA-1> libuv: Ben Noordhuis master * rb81e67a / src/unix/udp.c : unix: fix aliasing warning in udp.c - http://git.io/2ml4Vw
13:53 < CIA-1> libuv: Ben Noordhuis master * re89cb90 / src/unix/stream.c : unix: fix aliasing warnings in stream.c - http://git.io/bd95eA
13:57 < mscdex> ugh... github bots
13:57 < mscdex> spamming repos with pull requests
14:02 < spionL> progzer, also var createDataCallback = function(socket) { return function(data) { // reference to socket }; } somesocket.on('data', createDataCallback(somesocket))
14:02 < spionL> useful if you're looping through an array of sockets.
14:03 < deoxxa> mscdex: look at your repo, now back at me
14:03 < mscdex> eh?
14:04 < progzer> Thakns, spionL
14:04 < progzer> *Thanks
14:05 < deoxxa> mscdex: i guess you haven't been hit by that one yet
14:05 < mscdex> i was talking about travis4all :/
14:05 < deoxxa> oh
14:05 < deoxxa> yes
14:05 < deoxxa> that's the one i'm talking about
14:05 < CIA-1> node: Ben Noordhuis v0.8 * r422772f / lib/net.js : net: fix asserts - http://git.io/bquUtw
14:05 < CIA-1> node: Stéphan Kochen v0.8 * r81b711b / doc/community/index.html : doc: remove nodejs-dev from the community page - http://git.io/VItr6w
14:05 < deoxxa> it does the whole old spice routine
14:05 < SomeoneWeird> lol
14:05 < mscdex> i didn't even read it, i just saw all the emails
14:06 < deoxxa> "the repo your repo could be"
14:16 < tuhoojabotti> http://www.svedbergs.se/pelastakaa-kylpyhuone-aanesta?id=522
14:16 < tuhoojabotti> oops, wrong channel
14:16 < gkatsev> right channel, wrong message
14:16 < gkatsev> :P
14:17 < tuhoojabotti> well, I doubt you understand what it says
14:17 < gkatsev> as I said, wrong message
14:17 < tuhoojabotti> no, it's correct.
14:17 < tuhoojabotti> wrong channel
14:18 < znowi> i'm using node 0.8.5 - does it not look in ./node_modules for installed modules?
14:18 < gkatsev> right message wrong channel is equivalent to right channel wrong message :P
14:20 < tuhoojabotti> gkatsev: Is it? Is it really?
14:21 < gkatsev> just different frame or reference
14:22 < tuhoojabotti> gkatsev: what if both of those universes happen simultaneously
14:22 < gkatsev> they already are
14:23 < tuhoojabotti> Time for bed, g'night
14:26 < Dany_> Hi, how to emit an array? socket.emit('join', { user: us_id, group: grp_id}) does'nt work.
14:27 < mscdex> that's not an array
14:27 < Dany_> JSON
14:27 < mscdex> it's a plain object
14:28 < mscdex> Dany_: what is the problem on the event listener side?
14:28 < Dany_> I need to send to variables, how to do so?
14:28 < Dany_> I meant "two" variables.
14:29 < deoxxa> > us_id
14:29 < deoxxa> is it really so hard to type the extra "er"
14:30 < Dany_> You're right. what about the answer?
14:30 < yawn> yo deoxxa 
14:30 < gkatsev> maybe it's a US id number? Though, I guess that wouldn't need to be a varilable then.
14:30 < deoxxa> sup yawn
14:31 < yawn> coding :3
14:31 < deoxxa> Dany_: i'm guessing here, since you seem to think we're psychic, but you're using socket.io right?
14:31 < yawn> wanna see a shot of my project?
14:31 < Dany_> Yes
14:31 < deoxxa> yawn: more than anything in the world
14:31 < znowi> ah, could it be that node doesn't recognize a module cause it's written in coffeescript?
14:31 < yawn> deoxxa: lol
14:31 < deoxxa> Dany_: socket.emit("event_name", some_value)
14:32 < deoxxa> Dany_: so socket.emit("event_name", {a: 1, b: 2}) is perfectly fine
14:32 < yawn> deoxxa: you steal mah project imma hunt you down :P
14:32 < deoxxa> i've already stolen it
14:32 < deoxxa> and launched
14:32 < deoxxa> just got $2m in vc funding
14:32 < deoxxa> sry bro
14:33 < yawn> aw :(
14:33 < yawn> you're not giving me any are you?
14:33 < generalissimo> forking is for losers, just copypaste and change the copyright notice
14:33 < Dany_> As I did. But how to get these values in the server side?
14:33 < deoxxa> Dany_: socket.on("event_name", function(data) { ... })
14:34 < Dany_> socket.on('join', function (data) { console.log(data.user_id + " is joined to " + data.grp_id + ".");
14:34 < Dany_> Doesn't work !!
14:34 < progzer> Did a little tracing by writing a 'shallowStringify'. 'this' inside the connect and data events really was the socket.
14:35 < deoxxa> Dany_: "doesn't work" is about as vague as you can possibly get here, man. are you seeing an error or anything?
14:36 < Dany_> Of course, [object Object] is joined undefined.
14:36 < generalissimo> wat
14:37 < yawn> OMG
14:37 < yawn> http://node4.nirvanix.com/polldaddy/polldaddy/images/115cc8a7c6aebeee0794c827d62f8f45.png
14:37 < generalissimo> Dany_: make a gist
14:37 < yawn> microsoft's new logo
14:37 < yawn> :|
14:37 < mscdex> not surprising
14:37 < deoxxa> Dany_: then it's working fine. you're putting something weird into user_id and grp_id doesn't exist because you're using idiotic abbreviated variable names.
14:37 < mscdex> it's metro-y
14:37 < mscdex> at least they're being upfront with it ;-)
14:38 < Dany_> =) Thanks let's see.
14:38 < deoxxa> Dany_: you're making things harder on yourself by using strange names for things - i second generalissimo in the notion that you do up a gist for us to take a look-see at
14:39 < Dany_> Hey dudes, believe me, I'me making it right, I just put variables here to get you understand =)
14:40 < generalissimo> ...
14:40 < generalissimo> lol
14:40 < generalissimo> "trust me, i didn't write any bugs" <-- never credible
14:41 < deoxxa> http://i.imgur.com/yg49N.jpg << trust me, i'm a rat!
14:48 < luckysmack> is there any way in node, to access a web cam (or even a smart phones camera) to take a picture and process the taken picture as a barcode/QR code?
14:52 < bradleymeck> luckysmack: http://fabianosoriani.wordpress.com/2012/02/02/read-qr-code-from-javascript-and-webcam/ is a start
14:52 < Dany_> @deoxxa, The two variables are received, I can't see that in the terminal "args" [{"user_id":"15","group_id":"2"}], but when I print them:  console.log(data.user_id+ " is joined to p" + data.group_id + ".");
14:52 < luckysmack> bradleymeck: sweet thanks.
14:53 < Dany_> I meant I can see them..typo
14:53 < deoxxa> gist or gtfo
14:53 < Dany_> How? still new with socket.io =)
14:53 < Dany_> gist(data);
14:53 < luckysmack> bradleymeck: what about if the user is viewing from a phone? could it get that camera as well? reading thanks.
14:54 < Dany_> ?
14:54 < deoxxa> Dany_: http://gist.github.com/ - paste your codez
14:54 < bradleymeck> luckysmack: nope, the phone not the server is what needs to send the image
14:54 < Dany_> Ah it's ok.
14:54 < luckysmack> yea thats what I figured. im likely going to need to make a small app to do it for my project.
14:58 < Meaglin> there
14:58 < Meaglin> isaacs, until this turns into a twitter spam fest wanna continue the discussion here?
14:58 < Dany_> @deoxxa, very weired. Is it necessary to stop the server and the server and rerun it to solve the problem, becoz it's solved by rerunning it!!
14:58 < Meaglin> :P
14:59 < Dany_> That will be a reall problem when the server is deploied to a host, isn't it?
15:04 < Dany_> Thanks any way, c ya
15:05 < jcrew> restarting production servers willy nilly should cause you no headache
15:07 < jcrew> guess he left
15:09 < bingomanatee> I just discovered that the cloSure library people have been talking aboiut is not the cloJure language.
15:09 < totallymike> heh
15:10 < russfrank> it's also, yknow, a programming concept.
15:10 < russfrank> clojure was a really poor choice of name..
15:10 < russfrank> neat language, though
15:13 < spionL> dominictarr, what I'm really building is...
15:14 < spionL> processPool.get('svc-name', function(service) { service.send('msgtype', msgdata, function(reply) { ... }); service.on('event', function(data)); service.stream('streamname').pipe(localstream); }); and processPool.create('svc-name', function(service) { stuff = require('stuff'); service.on('msgtype', function(msg) { msg.reply(response); } setInterval(function() { service.trigger('event', eventData); }); localstream.pipe(service.stream('streamname')); });
15:14 < russfrank> whoa.
15:14 < bradleymeck> anyone seen node-tar fire 'end' twice when using tar.Extract?
15:14 < dominictarr> spionL, can you gist that?
15:14 < spionL> Okay :D
15:14 < dominictarr> I like whitespace
15:17 < bradleymeck> dominictarr: is ps-tree gone from github?
15:17 < dominictarr> bradleymeck, no it's now indexzero/ps-tree
15:17 < bradleymeck> ah
15:18 < dominictarr> I love giving away modules. express an interest in a module I havn't touched in 6 months, and you are now the maintainer.
15:19 < luckysmack> heh
15:20 < gkatsev> lol
15:28 < djbender> LOL love the room's MotD.
15:30 < mscdex> node.js rules!
15:31 < spionL> well, that took a while
15:31 < spionL> dominictarr, https://gist.github.com/3437767
15:32 < dominictarr> thx
15:33 < spionL> Basically, a complete RPC system based on services. actually you could call those services agents with streams.
15:33 < dominictarr> spionL, this is actually two jobs. 
15:33 < dominictarr> one: service registry
15:33 < dominictarr> two: rpc system
15:34 < deoxxa> this looks like seaport
15:34 < dominictarr> have you seen sea-port?
15:34 < spionL> I have
15:34 < spionL> sea-port is ip-port resolution
15:34 < spionL> name to ip-port
15:34 < dominictarr> so, this is from a browser client?
15:34 < spionL> I need name to ip-port-channel
15:34 < spionL> no, all clients will be nodejs
15:34 < deoxxa> wrap it in something that connects to the ip/port with dnode or something
15:34 < dominictarr> what do you mean by "channel"?
15:35 < spionL> I mean that one process should not have to have separate listening ports for every single registered agent/service.
15:35 < dominictarr> spionL, just use http routes
15:36 < spionL> but I don't want to know what process, ip and port were chosen to spawn my agent
15:36 < creationix> can we use mdns in node yet?
15:36 < dominictarr> you didn't mention spawning agents...
15:37 < dominictarr> creationix, I think hook.io has that...
15:37 < spionL> processPool.create does that
15:37 < dominictarr> when I last tried it, there where bugn on unix.
15:37 < dominictarr> sorry, linux.
15:37 < mscdex> creationix: like in core or the `mdns` module?
15:39 < bradleymeck_> bother tjfontaine to fix my ticket so i can put a different socket factory in node-dns and its trivial
15:39 < bradleymeck_> creationix ^
15:39 < spionL> hook.io is so very close with two drawbacks: as I understand it, it routes all traffic through one hook... and also, no virtual streams
15:40 < spionL> maybe I'm wrong on the first one
15:40 < creationix> I just want simple advertisement and discovery
15:40 < creationix> I can handle my own connections
15:40 < dominictarr> spionL, you are correct
15:40 < creationix> in fact I don't want streams or anything bundled with it
15:40 < dominictarr> creationix, yes, I just mention hook.io because I know there is some example code there
15:41 < creationix> so I guess that means that node's udp has enough primitives to do it
15:41 < creationix> that was my question
15:41 < spionL> probably yes. https://github.com/agnat/node_mdns
15:41 < creationix> or does it depend on some binary addon?
15:42 < dominictarr> spionL, maybe you could use a host that creates a worker and then sends an http redirect response.
15:42 < dominictarr> I think request follows redirects, or can be configured to.
15:43 < wankdanker> creationix: https://github.com/wankdanker/node-discover ?
15:43 < bradleymeck> creationix, tjfontaine's node-dns works well but the dumb factory function is abstracted and internal
15:44 < dominictarr> and you could have a pool in a ring, and create a someplace before you send the redirect -- which would go straight to the worker.
15:45 < bradleymeck> anyone know how to prevent node-gyp from downloading all the time, would a global install do it?
15:45 < spionL> dominictarr, my use case for this is a IRC-channel-like thingy with audio (Flash for microphone, html5 streaming to listen) - every channel service has text message events, one or more input audio channels (streams), audio mixer, single output audio stream
15:45 < spionL> :)
15:46 < bradleymeck> mikeal++
15:46 < spionL> oh I forgot, audio mixer which splits to two audio encoders and then they publish two streams.
15:46 < mscdex> bradleymeck: i think you can use --nodedir
15:47 < spionL> and a multiplexer is perfect for this, as I can spawn a stream for message exchange and other sub-streams on demand
15:47 < mscdex> bradleymeck: and --target to specify a node version
15:47 < bradleymeck> mscdex once it is downloaded
15:47 < bradleymeck> npm just keeps downloading it
15:48 < bradleymeck> isaacs is there a way to prevent node-gyp from downloading on clean directories all the time, global install didnt seem to prevent it downloading http://nodejs.org/dist/v0.8.8/node-v0.8.8.tar.gz all over again
15:48 < bradleymeck> *when using npm install
15:49 < mscdex> clean directories? it should just download the dev files once until you upgrade to a new node version
15:49 < mscdex> that's been my experience anyway
15:50 < Salim> hi my friends
15:50 < bradleymeck> mscdex not my current one :( but then again my user account i generally block from touching system dirs
15:50 < Salim> im new to nodejs
15:50 < Salim> what u can recommend to me
15:50 < Salim> where to start
15:50 < mscdex> bradleymeck: what node and npm version is this a problem with?
15:51 < bradleymeck> 0.8.8 & 1.1.59
15:55 < CIA-1> node: Bert Belder v0.8 * r45cd4e2 / (5 files in 2 dirs): doc: use somewhat consistent styling for css assets - http://git.io/Uaid7A
15:55 < CIA-1> node: Bert Belder v0.8 * r1eab514 / doc/pipe.css : doc: pixel nudge - http://git.io/nLV8JA
15:55 < CIA-1> node: Bert Belder v0.8 * r31ddd95 / (6 files in 5 dirs): doc: move ul styling to pipe.css - http://git.io/pZzaKg
15:55 < CIA-1> node: Bert Belder v0.8 * r6c371c6 / doc/community/index.html : doc: remove Felix's IRC logs from the community page - http://git.io/yh2rDg
15:55 < CIA-1> node: Bert Belder v0.8 * r985fdf2 / doc/community/index.html : doc: tidy the community page html file - http://git.io/-f9AYg
15:58 < ccowan> Was there not nodeup podcast this week?
16:00 <@isaacs> ccowan: no, everyone was busy and traveling
16:00 <@piscisaureus_> test
16:01 <@isaacs> bradleymeck: you can do `npm config set nodedir /path/to/node/checkout`
16:01 < bradleymeck> isaacs: so it just needs to point to where the headers etc are?
16:01 <@isaacs> bradleymeck: but yes, it should only download once per version
16:01 <@isaacs> bradleymeck: yeah
16:02 -!- Topic for #Node.js: http://nodejs.org | no. 1 rule... don't be an asshole
16:02 -!- Topic set by konobi [~scott@aravis.narnia.org.uk] [Thu Aug 23 08:53:32 2012]
16:02 < bradleymeck> so i guess if i allow npm to run as user instead of nobody or give nobody read access to ~/.node-gyp it would work
16:02 < ccowan> bummer, when you sit in a lonely room in the middle of nowhere tech podcast are my lifeline to the outside world.
16:02 -!- isaacs changed the topic of #Node.js to: http://nodejs.org | Play nice. http://blog.izs.me/post/30036893703/policy-on-trolling
16:03 <@isaacs> ccowan: i recommend the 5by5 family of podcasts, then
16:03 <@isaacs> ccowan: and RotL
16:03 <@isaacs> ccowan: it's like having really cool successful famous best friends.
16:03 < TooTallNate> bradleymeck: if you're having EACCESS problems then unsafe-perms works as well
16:03 <@isaacs> TooTallNate: ohh..... right.
16:03 < ccowan> ha ha... I've been addicted to the Nerdist lately
16:03 < TooTallNate> but there's a better solution for that in the long-run
16:04 <@isaacs> TooTallNate: we never did that thing with node-gyp and uids
16:04 < bradleymeck> TooTallNate: working on a build server, trying to avoid unsafe-perms
16:04 < TooTallNate> isaacs: it's still on the TODO list
16:06 < ccowan> isaacs: subscribed... thx
16:06 < Salim> ?
16:06 < Salim> nobody's home?
16:10 < bradleymeck> isaacs: great success, any chance that will become a cli flag instead of needing an env var etc
16:11 < clarle> What's the best way to make a project use express.createServer() for 2.x and express() for 3.x?
16:12 < ccowan> clarle: In what situation would you be using a different version at different times?
16:12 < ccowan> clarle: are you installing your node_modules using -g?
16:13 < clarle> ccowan: Ah, wait, nevermind, I see.
16:13 < bradleymeck> woot build server now working with multiple versions
16:13 < clarle> Made a mistake, thanks!
16:13 < ccowan> clarle: no problem... :)
16:14 < bradleymeck> wish there was a way to consume and merge argv before spawning
16:22 < AviMarcus> This is a bit silly, but is it possible to "compile" node.js code e.g. so I can distribute an executable that has node built-in ?
16:23 < elricl>  /python autoload
16:24 < chrisjaure> AviMarcus: http://appjs.org/
16:25 < AviMarcus> chrisjaure, I don't need a GUI
16:25 < AviMarcus> ad does that actually compile?
16:25 < chrisjaure> not sure, never used it
16:28 < therealkoopa> I have a server.js that uses clustermaster to create 4 workers for handling the web app.  I also want to spawn off another process that is my 'worker' app that picks things up off a queue to do certain things.  Should talk with clustermaster twice?
16:31 < pooya> is there anyway to clone binary modules?
16:32 < pooya> there's one that is static and i like to have multiple instances of it
16:35 < ccowan> therealkoopa: I have my worker app in a seperate file
16:35 < therealkoopa> clarle: so you do something along the lines of: node server.js && node workers.js
16:36 < therealkoopa> ccowan: ^
16:36 < ccowan> therealkoopa: so I have app.js and worker.js and I treat them speratly so that if I need to move them to different insteances it's super easy
16:36 < ccowan> yeah
16:36 < ccowan> therealkoopa: I have 2 different upstart scripts
16:36 < ccowan> so I can controll them seperatly
16:37 < therealkoopa> That's probably a better idea.  I'll go with that.  Do you keep them as separate projects or is this all within a single project?
16:38 < ccowan> all in the same project
16:38 <@isaacs> somebody should write an InstantCoffee language that compiles to coffeescrit
16:39 < ccowan> therealkoopa: since they share a lot of the same code
16:39 <@isaacs> then send pull requests to coffeescript projects converting it to InstantCoffee
16:39 < jcrew> isaacs: would it look worse than coffeescript ?
16:39 <@isaacs> jcrew: yes, and the coffee-script it generates would be unreadable garbage.
16:40 <@isaacs> jcrew: just like the coffee generated by instant coffee
16:40 <@isaacs> s/read/drink/
16:40 < Meaglin> isaacs
16:40 < ccowan> isaacs: InstantCoffee could do away with : and = signgs
16:40 < Meaglin> about the semicolons :P
16:40 < ccowan> sings
16:40 < ccowan> ugh... I give up
16:40 < jcrew> isaacs: hahaha
16:41 <@isaacs> ircretary: Tell bradleymeck Any npm config can be either a npm_config_blerg env or --blerg cli or `blerg = blah` in .npmrc or /usr/local/etc/npmrc
16:41 < ircretary> isaacs: I'll be sure to tell bradleymeck
16:41 < jmar777> and it should definitely remove significant white space
16:41 < jcrew> or maybe it could be a whitespace language to coffeescript port
16:41 < russfrank> ircretary: hi
16:41 < ircretary> russfrank: Hello :)
16:41 <@isaacs> jcrew: nono, it has to be smaller
16:41 < russfrank> :]
16:41 <@isaacs> jcrew: then you just add water
16:41 < russfrank> ircretary: help
16:41 < ircretary> russfrank: I'm not sure what to do with that command.  Ask for help in PM.
16:41 <@isaacs> maybe it's whitespace-removed coffee-script
16:41 < russfrank> cool.
16:42 < jcrew> isaacs: we can do arithmetic compression to the script so it's very small
16:42 <@isaacs> Meaglin: what about them?
16:42 < milani> AviMarcus, github.com/appjs/appjs/tree/embedded
16:42 < jcrew> and then everything is just a space or a line break
16:42 < milani> AviMarcus, appjs is GUI but in this branch It actually embeds all js/html/css into node exec.
16:43 < Meaglin> that they should be used
16:43 < Meaglin> not just where it is essentials
16:43 < Meaglin> var x = true;
16:43 < Meaglin> var x = function() { };
16:43 < Meaglin> var x = foo();
16:44 < jmar777> hey, i just finished my latest blog post: "<h1>Coffeescript, the Good Parts</h1><p>Thanks for reading!</p>"
16:44 < AviMarcus> milani, but it still requires node to be installed? I'm making a script and wondering if I can distribute it without requiring node to be installed..
16:45 < Meaglin> isaacs: to quote google: "Relying on implicit insertion can cause subtle, hard to debug problems. Don't do it. You're better than that."
16:45 < milani> AviMarcus, it will be nothing except an exec. it means it has node in itself.
16:45 < zmbmartin> Can anyone help me with a problem I am having with mysql timeout -> https://gist.github.com/3438579
16:45 < milani> actually it is node, with your modules embedded in it.
16:45 < Meaglin> isaacs:  thus: "Always use semicolons."
16:45 < zmbmartin> I am getting Error: ETIMEDOUT, Connection timed out
16:45 < milani> AviMarcus, the drawback is that you can not embedded c++ addons.
16:46 < milani> * can not embed
16:46 < russfrank> Meaglin: its realy just a stylistic thing. like 3 space indent versus 2. no real impact
16:46 < ccowan> zmbmartin: does that happen immediatly?
16:46 < russfrank> Meaglin: it really only causes problems if you try to minify by just removing all whitespace or something
16:46 < Meaglin> russfrank: true however you shouldn;t encourige others to use your weird coding querks
16:47 < Meaglin> that is waht isaacs is doing with npm
16:47 < Meaglin> what*
16:47 < AviMarcus> milani, oh cool. Uhm, can you point me how do to that embedding part by itself? I don't really need the whole gui part ;)
16:47 < russfrank> Meaglin: i dont see isaacs encouraging people to do that, he just wrote a program in his own style
16:47 < russfrank> and people decided to use it
16:47 < zmbmartin> ccowan: No I get a 504 timeout in the browser then node dies with that error a minute later.
16:47 < Meaglin> russfrank: he is: https://npmjs.org/doc/coding-style.html
16:48 < russfrank> "npm's coding style"
16:48 < Meaglin> he is saying people you should code your modules like this: https://npmjs.org/doc/coding-style.html
16:48 < russfrank> doesnt say "the official js coding style"
16:48 < russfrank> Meaglin: he's saying if you contribute, follow the style
16:48 < russfrank> which is how most projects work
16:48 <@isaacs> Meaglin: hvae you seen any of my other projects?
16:49 <@isaacs> Meaglin: most of them don't follow the npm style guide, exactly.
16:49 <@Nexxy> npm doesn't run in a browser
16:49 < Meaglin> isaacs: nope? 
16:49 < milani> AviMarcus, that branch only does embedding. 
16:49 <@isaacs> Meaglin: https://github.com/isaacs/read-package-json/blob/master/read-json.js
16:49 < spionL> Meaglin, the truth is, they're often easy to debug, and there is 1 place when they're really problematic - before a browser-style module wrapper: (function() {}())
16:49 <@isaacs> Meaglin: I'm also the one pushing for strict google-style jslint in node-core.
16:49 < Meaglin> i have no problem with people having their own style
16:50 <@Nexxy> the whole ASI thing doesn't really apply
16:50 <@isaacs> Meaglin: when it comes to discussing semicolons, i think you'll find that i'm actually a bit of a lunatic.
16:50 <@isaacs> Meaglin: i don't recommend it.
16:50 < Meaglin> i noticed with npm coding style doc :P
16:50 < Meaglin> thats why i tweeted xD
16:50 <@isaacs> Meaglin: each project should have a consistent style for that project.
16:50 < Meaglin> true.
16:50 <@isaacs> npm's is documented in a file in the npm docs.
16:50 <@Nexxy> can we do emacs/vim next?!
16:50 < milani> AviMarcus, It's easy. you create a _third_party_main.js 
16:50 <@isaacs> Nexxy: hey, don't bring up religion in the chat room, please.
16:50 <@isaacs> ;P
16:50 <@Nexxy> . ___.
16:51 <@Nexxy> :P
16:51 < zmbmartin> ccowan: Any ideas what I am doing wrong or missing. This was working fine for a while.
16:51 < Meaglin> the npm coding style just makes it look like all projects should follow that style
16:51 < milani> AviMarcus, which node looks for and if it is there, it starts it. then you need a virtual fs module
16:51 < zmbmartin> ccowan: Not sure when it quit working.
16:51 < russfrank> Meaglin: i dont think it does
16:51 < Meaglin> npm packages that is
16:51 < russfrank> it says this is how npm works. its kinda weird. but if you contribute do this anyway.
16:51  * isaacs chants the psalm of vim.... "Escape Colon Double You Queue..."
16:51 < Meaglin> russfrank: then i'm prolly misinterpreting it..
16:52 < milani> AviMarcus, to search for modules in the built-in modules. and you treat make script to add all modules as built-in modules
16:52 < milani> AviMarcus, this is all libraries you need: https://github.com/appjs/appjs/tree/embedded/lib
16:52 <@isaacs> Meaglin: yes, i guess the phrase "contribute to npm" is a bit less obvious than it coudl be.
16:52 < milani> and this is node.gyp with those modules added in. https://github.com/appjs/appjs/blob/embedded/node-gyp-template
16:53 <@isaacs> Meaglin: people have taken to say "publish to npm" and "install from npm" as if "npm" refers to the registry
16:53 < Meaglin> isaacs: yea, thats what i'm getting at :P
16:53 <@isaacs> Meaglin: when i wrote that doc, that was not the case.
16:53 < Meaglin> ah
16:53 < Meaglin> then it's fine :P
16:53 < AviMarcus> milani, so I update the _third_party_main.js and then what..?
16:53 <@isaacs> Meaglin: patch welcome.  (just don't put semicolons in the markdown ;)
16:53 < Meaglin> xD
16:53 < jtomasrl> what does TypeError: DecipherFinal fail means
16:53 < spionL> npm is just like java. Is it a language? a virtual machine? a library/framework?
16:53 < Meaglin> i'm add a little comment
16:54 < Meaglin> ima*
16:54 <@isaacs> Meaglin: my "normal" style these days is something close to npm's, but heavily influenced by node-core.
16:54  * spionL runs
16:54 < spionL> kidding
16:54 <@isaacs> Meaglin: but i dont' think that developers should have attachments to personal coding styles.
16:54 < milani> AviMarcus, if it is only that script you need, no other modules then it's enough. if you need to embed other modules then you need vfs,archive,module all those things in that lib/
16:54 <@isaacs> Meaglin: true software zen comes from seeing past the surface
16:55 < ProblemEmitter> is it a good idea to design a web crawler in node.js (with jsdom and shit)?
16:55 <@isaacs> spionL: yeah, or like the difference between aptitude, apt-get, the .deb file format, dpkg, and launchpad
16:55 < milani> AviMarcus, if you clone that branch and install it, you can use appjs init and then appjs package
16:55 < milani> it does everything else;)
16:55 <@isaacs> spionL: originally, i'd planned to have two separate tools, one for publishing andanother for installing.
16:55 < Meaglin> there: https://github.com/isaacs/npm/pull/2749
16:55 <@isaacs> spionL: mikeal convinced me that that was a bad idea.
16:56 < Meaglin> my phrasing is prolly bad
16:56 < spionL> hey, ideally formatting conventions would not be necessary - everyone would see the code exactly as they want it.
16:56 <@isaacs> spionL: in a better language, that would probably be possible.
16:56 <@isaacs> spionL: i rather like how go and applescript and visualbasic have an explicit "This is how it's formatted" thing that the computer does for you
16:57 <@isaacs> spionL: when you save the applescript file, it just autoformats it no matter what you do
16:57 < spionL> right, I was going to mention Go :)
16:57 <@isaacs> which is lovely, because then you can type out garbage all on one line, and have it turn nice for you
16:57 <@isaacs> i had an html editor once that auto-ran tidy every time you saved.  it was awesome.
16:58 <@isaacs> <p>a paragraph<ul><li>foo<li>bar^S --> pretty html
16:58 < spionL> I wonder if ggvG= can be made to do it for me in vim
16:58 < AviMarcus> thanks milani I'll take another look at it later.
16:58 <@isaacs> spionL: i've never found a very nice auto-formatter for js
16:58 < milani> np:)
16:58 <@isaacs> spionL: node's `make jslint-fix` thing uses google's fixjsstyle.py script, and it's kinda ok
16:59 <@isaacs> spionL: but i always have to check it for insanity
16:59 < ccowan> zmbmartin: sorry... went to the fridge... smelled something funny... and got sucked into cleaning out some old food.
16:59 < spionL> :/
17:01 < jtomasrl> how does the DiffieHellman class works on node.js
17:02 < ccowan> zmbmartin: that looks pretty close to what I have. I wonder if you MySQL is timing out the connection.
17:03 < zmbmartin> ccowan: I will check into that I guess. Thanks!
17:06 <@Nexxy> jtomasrl, it's a secret.
17:06 <@Nexxy> (get it??)
17:07 < ccowan> zmbmartin: so it looks like you can add an on('error') handler to the connection 
17:07 < jtomasrl> Nexxy, lol but how can i use the public and private keys to encrypt/decrypt
17:07 < ccowan> zmbmartin: so when you get an error like that you could always create a new connection.
17:08 < ccowan> zmbmartin: https://github.com/felixge/node-mysql#error-handling
17:09 <@isaacs> Nexxy: Can you share it?
17:09 <@isaacs> (get it??)
17:09 < zmbmartin> ccowan: I will add that in and see if I get anything different, Thanks!
17:10 < ccowan> zmbmartin: I'm using pools
17:10 < ccowan> zmbmartin: so I wonder if that's been shelding me from crap like that
17:11 < zmbmartin> ccowan: What version of mysql are you using?
17:11 < brianc1> isaacs: have plans drastically changed since the nodeup podcast on the new stream interface? I'm tres excited about it
17:12 < ccowan> zmbmartin: I'm all over the board :D 5.0 for production, 5.1 for development (unless I'm on my laptop then it's 5.5)
17:12 < brianc1> and not sure where to get more up to date news about it...other than just nag you directly. :p
17:12 < zmbmartin> I meant the npm mysql package? :)
17:12 < zmbmartin> ccowan: 
17:14 < ccowan> zmbmartin: mysql@0.9.5
17:18 <@isaacs> brianc1: no,plans have not changed.
17:18 <@isaacs> just everyone's been busy
17:19 < brianc1> awesome!
17:19 < brianc1> I am patient
17:20 <@isaacs> brianc1: var nOrFewerBytes = readable.read(n); readable.on('readable', doItAgain)
17:20 < brianc1> yes i love this
17:20 <@isaacs> brianc1: backed by a lowlevel: readable._read(n, function (nOrFewerBytes) { ... }) that does the actual syscalls and gets cached
17:20 <@isaacs> brianc1: since you really do not want to *actually* call read(2) for each byte.
17:21 <@isaacs> you want to read(fd, 1024*16) or something, and then pretend in js-land
17:21 < brianc1> right
17:21 <@Nexxy> isaacs, hahaha
17:21 < brianc1> yeah it made total sense on the nodeup podcast
17:21 <@isaacs> brianc1: and we have to shim the poll/read/EWOULDBLOCK interface for files and windows anyway.
17:21 <@Nexxy> *snort*
17:21 <@isaacs> the on('data', ..) shim sucks
17:21 < livinded> is new nodeup up yet?
17:22 <@isaacs> Nexxy: I tell you what.  I'll tell you half the secret if you tell me the other half.
17:22 < zmbmartin> ccowan: Man that was stupid. My host had my ip address block on a master list for some reason. Working again now. Thanks for the insight!
17:22 < brianc1> i always felt like the current stream interface is kinda like one of those cartoons where someone's peeling potatoes and more and more potatoes keep coming in until they can't keep up
17:22  * isaacs off to beat more dead horses...
17:22 < russfrank> brianc1: lol
17:22 <@isaacs> brianc1: right, and we have pause/resume, but they're not really ideal.
17:22 <@isaacs> brianc1: it's kind of a clumsy interface.
17:23 < ccowan> zmbmartin: no problem. I've spent 24 hours before debuging a typo.
17:23 < brianc1> yeah - it definitely works 
17:23 <@Nexxy> rofl
17:23 < brianc1> i was under the impression pause just allowed TCP back pressure, I didn't know it actually sent a pause packet back out
17:23 < tkellen> are there any examples out there of projects where multiple npm packages are maintained from a single repo?
17:23 < zmbmartin> ccowan: Glad I am not the only one.
17:23 < brianc1> I don't spend enough time reading through libuv
17:25 < nvoyager> I need to upload files to S3… do I use knox or node-awssum ??
17:25 < DTrejo> maxogden: noticed you havent been tagging your releases of concat-stream
17:25 < ccowan> isaacs: Are you using the _changes feature (in CouchDB) where you can hook up an HTTP listner and recieve change updates?
17:25 < aniasis> hello
17:26 < DTrejo> maxogden: naughty naughty!
17:26 < aniasis> I am very new to node and I have some questions about jade
17:28 < bradleymeck> isaacs: i was playing with --nodedir in the npm cli and it set itself to 'true' rather than the value but was preserved when using npm_config_nodedir (as per your msg)
17:29 < aniasis> I want to be able to take a json response and append it to a url
17:36 < bradleymeck> anyone know about windows child process security (how to spawn up an app that doent have write privileges outside a directory in particular)
17:36 < eddyb> gaaah
17:37 < eddyb> is any of you TooTallNate or SamDecrock?
17:37 < bradleymeck> at least one of us is
17:37 < TooTallNate> sup?
17:37 < eddyb> I'm having problems with upnp-client in 8
17:38 < eddyb> it's not receiving anything
17:38 < eddyb> it won't even start without the fixes from https://github.com/SamDecrock/node-upnp-client
17:38 < livinded> bradleymeck: I'll be talking about that in Germany in October and releasing some code
17:38 < eddyb> TooTallNate: hi. so, it sends a search, but it doesn't receive anything. I can actually see the gateway in upnp-inspector
17:39 < bradleymeck> livinded working on a build server right now XD, i dont think im going to wait til october
17:39 < livinded> short answer is that you can do some pretty cool hackery in node where you overload the stdlib before executing the code and not allow it to ever use the actual stdlib functions
17:39 < TooTallNate> eddyb: oh geeez, honestly i haven't touched that module in probably over a year
17:39 < livinded> one sec, I'll paste you some code. It's really hacky right now, but it'll give you a start in the right direction
17:40 < TooTallNate> not sure how helpful I'll be :p
17:40 < bradleymeck> livinded unfortunately i know how to do that, but its not really secure in my case since it wont stop C++
17:40 < eddyb> TooTallNate: yeah, and it's so useful. I actually made a very small wrapper to use in my servers, but it's not working :(
17:41 < TooTallNate> eddyb: if all you care about is the port forwarding then you should use https://github.com/indutny/node-nat-upnp
17:41 < eddyb> TooTallNate: oh, thanks :D
17:41 < brianV> hi all. Does anyone know of a good node.js-based IRC client? I've been looking around for a web IRC client, CGI:IRC and company really... suck...
17:41 < livinded> bradleymeck: you can overload the native functions that are inherited from libuv as well
17:42 < TooTallNate> eddyb: and then if you care about Apple routers, then there's also https://github.com/TooTallNate/node-nat-pmp
17:42 < bradleymeck> livinded but if you static link something or spawn up something that was pre-linked it will not use the overriden stdclib
17:43 < livinded> bradleymeck: you're compiling your node app?
17:43 < bradleymeck> livinded its a build server
17:43 < bradleymeck> it accepts C++ npm modules
17:44 < bradleymeck> i know the unix ways to lock it down, but windows doesn't seem clear unless i want to make a new group policy per build
17:44 < livinded> right, but it's going to build those against the libs on the machine, not what's in memory
17:45 < livinded> if you overload the libuv functions in memory it will stop the build app from using them but the modules will all build fine
17:45 < mscdex> brianV: i'm sure there probably is somewhere.... but it also wouldn't be hard with the `irc` and `socket.io` modules
17:46 < mscdex> *to do it yourself
17:46 < bradleymeck> livinded if i set the build a binary on local machine, upload it to the build server then have npm spawn something during the install lifecycle that calls it, it would be non-trivial to detect and still use the code from my local machine rather than build server
17:46 < bradleymeck> sent* not set
17:46 < livinded> bradleymeck: maybe we're misunderstanding eachother. Here's the sample code I have to demo it currently http://gist.github.com/3439285
17:47 < bradleymeck> livinded im concerned with the C++ not the JS i work on haibu-carapace which does similar
17:48 < livinded> so you want the modules themselves to be limited?
17:48 < bradleymeck> livinded using your stuff for example, spawning a child process to start 'prebuilt.exe' would not prevent prebuilt.exe from using C++ functions that just ignore the sandboxing scheme from JS
17:48 < Leeol> Is there a way to see the physical location of an imported module? I'm trying to gain access to the bin file but the code has no idea where the physical location of that bin is.. thoughts?
17:49 < bradleymeck> __dirname __filename in the module
17:49 < Leeol> bradleymeck: Yea, but you don't have external access to that. require('foo').__dirname doesn't exist
17:49 < CoverSlide> require.resolve('foo')
17:49 < guybrush> Leeol: http://nodejs.org/api/modules.html#modules_module_filename
17:49 < Leeol> CoverSlide: Ah hah, thank you sir :D
17:50 < livinded> bradleymeck: you can use that to overload the functions that have native bindings in libuv and I assume in the native modules as well though
17:50 < bradleymeck> livinded but if i spawn a non-node process it wont matter
17:50 < Leeol> guybrush: That wouldn't work
17:50 < livinded> oh, ok. I completely misunderstood what you wanted
17:51 < livinded> in that case you're pretty much limited to preloading an SO on UNIX/chrooting and on windows just loading in a dll that does the same
17:52 < livinded> unless windows has some crazy shit that lets your modify a static binary there isn't anything that'll do what you want
17:52 < Leeol> guybrush: Just fyi, Coverslide was correct: http://nodejs.org/api/globals.html#globals_require_resolve :)
17:53 < guybrush> i see
17:53 < livinded> bradleymeck: the one thing you might try, if you don't mind modifying the source, is adding ENV checks at the beginning of all the functions you want to restrict and if it's set then just return/break
17:54 < bradleymeck> livinded not going to modify source, for the most part i just want to stip filesystem access, spawning a new process with a different user, and limit memory
17:54 < livinded> it's hacky but it'll work across operating systems and with statically compiled binaries
17:55 < livinded> are you running it as root/admin?
17:55 < livinded> can windows not drop privs?
17:56 < bradleymeck> oh heck no, on *nix the nobody user, you can drop privs but almost everywhere gets write access normally, im not going to change perms on the entire fs everytime i spawn a worker vm
17:56 < CoverSlide> iirc, the process.set{uid,gid} functions are posix-only
17:56 < bradleymeck> on windows you can*
17:56 < livinded> so chroot before you exec
17:56 < bradleymeck> on windows there is no chroot
17:57 < livinded> or before you drop
17:57 < bradleymeck> and chroot is broken on most *nix if you use a double chroot
17:57 < Franz__> nowjs is deprecated?
17:57 < livinded> right, but does windows give write to everywhere?
17:57 < Franz__> somebody knows if nowjs is deprecated?
17:57 < bradleymeck> windows does give write all over to the Everybody group, don't want to learn how to strip that personally
17:57 < CoverSlide> nowjs hasn't seen a commit in 4 months
17:58 < Franz__> has some project better than nowjs?
17:58 < CoverSlide> which is just as well since dnode did it a million times better
17:59 < livinded> bradleymeck: you could write a simple debugger that hooks i/o syscalls
18:00 < livinded> not trivial, but it'll work on unix and windows
18:00 < livinded> and with statically compiled binaries
18:01 < livinded> don't know what the syscall calling interface is like in windows, but  you can just insert breakpoints before calls to "int <interrupt code>" on unix
18:02 < eddyb> TooTallNate: damn, I get an error with nat-upnp: Error: Invalid ip address: ::1/128
18:03 < TooTallNate> eddyb: use ipv4 addresses?
18:03 < eddyb> TooTallNate: wait, what, the router looks like is using NAT-PMP. but it's just openWRT :|
18:03 < eddyb> TooTallNate: where? I'm not sending any IPs to the module
18:04 < TooTallNate> i haven't used nat-upnp personally so i'm not sure
18:04 < TooTallNate> open an issue
18:07 < Bux> good day
18:08 < eddyb> TooTallNate: routes.IPv4.concat(routes.IPv6).filter(function(route) {... it expects the IP module to work with IPv6, but that doesn't seem to be the case
18:09 < eddyb> TooTallNate: commenting .concat(routes.IPv6) makes it work :D
18:11 < keverw> Hey guys. Anyone know anything about this travis4all bot that seemed to spam all the GitHub Node projects? Not sure if I should merge in the changes or not… hmm… Just woke up to my inbox with tons of merge requests.
18:13 < hedonim> keverw: http://news.ycombinator.com/item?id=4422968
18:14 < hedonim> actually
18:14 < hedonim> https://groups.google.com/forum/?fromgroups=#!topic/nodejs/4UHmVpd2p0Q
18:14 < keverw> yeah I seen that… hmm… 
18:14 < hedonim> that's got more info
18:15 < Bux> msg Whiskers75 been on holiday
18:15 < Bux> fails
18:15 < keverw> hmm. So it seems like a good thing. I guess, but maybe the person should of made the box do all this forking and committing by request only...
18:16 < RLa> we have had lots of drama lately
18:16 < hedonim> the project has an IRC
18:16 < hedonim> you could ask them directly
18:17 < hedonim> #travis
18:17 < bradgignac> travis4all isn't actually associated with travis-ci
18:17 < hedonim> oh .. actually they say
18:17 < hedonim> ya
18:17 < hedonim> https://twitter.com/travisci
18:17 < hedonim> nm
18:17 < keverw> yeah I know.
18:19 < keverw> hehe. It seems to work. http://travis-ci.org/#!/keverw/HTTPRequest I guess I'll do it all to the other ones. I normally wouldn't use this because I'm lazy but I would love to see a similar bot that does this automatically but only when authing with GitHub or something as some people might not like it.
18:21 < eddyb> TooTallNate: meh, I still had to do manual redirection, uPnP is broken in the router for some reason :(
18:22 < endra> Hello
18:24 < endra> I setup node.js to pull from redis via pub sub, and then broadcast via socket.io. The problem is that sometimes it gets 2+ pub sub messages really quickly and broadcasts them one at a time. This means that on the browser side, the xhr-polling ends after the first one, and attempts to reconnect, but then misses the second event because it's reconnecting and it was broadcast during the reconnect
18:24 < endra> Any idea how to fix this problem?
18:25 < EhevuTov> keverw, ha, I'm pretty sure it's a bot. I would not merge. :-) I reported it.
18:26 < keverw> Oh. I merged already :( It didn't look like anything bad… virus wise.
18:30 <@Nexxy> endra, queue and ratelimit your broadcasts?
18:31 < endra> Nexxy: I think socket io should be doing that automatically unless volatile emits are used but I am not using them
18:32 < endra> perhaps this isn't the best place to ask, I'll try #socket.io
18:33 <@Nexxy> endra, I wasn't aware of a ratelimit feature within socket.io, news to me!
18:41 < tprice> whats that module called that tells me what require called?
18:43 < substack> tprice: given a source file or at runtime?
18:43 < tprice> i want to find out what modules are been called
18:43 < tprice> runtime or source
18:44 < substack> look at require.cache
18:45 <@Nexxy> row row
18:45 < substack> column column
18:46 < bog> Hey, I'm having an issue with npm bundled with node 0.8.7 and 0.8.8 (npm versions 1.1.49 and 1.1.59). Errors: https://gist.github.com/19953afd0c84338ae734. This is on OS X 10.8 using nvm to manage node versions. node 0.8.6's npm works without issue
18:47 < jerrysv> DTrejo: stop it already! :)
18:51 < CoverSlide> if we were to take the traditional row/column approach of an rdbms and add a third dimension to it, I wonder what that third dimension would be called
18:51 < CoverSlide> perhaps an aisle?
18:51 < substack> elevation
18:52 < CoverSlide> floor?
18:52 < aniasis> I am using jade, and whenever I try to output something it escapes it
18:52 < CoverSlide> != is for unescaped output
18:53 < RLa> add even more dimensions and you get apl :)
18:53 < CoverSlide> or !{}
18:57  * jmar777 notices icedcoffeescript for the first time...
18:58 <@Nexxy> jmar777, just keep moving
18:58 < CoverSlide> iced is just tamejs + coffee
18:58 < CoverSlide> nothing new
18:59 < jmar777> Nexxy: lol, i know, i know. i'm mad hatin' today... but... i mean... it's just out there
18:59 <@Nexxy> or useful
18:59 < jmar777> [ANN] LowFatIcedCoffeeScriptWithAPumpOfVanilla
19:00 < gkatsev> jmar777: Venti LowFat...
19:00 < CoverSlide> congrats on your career change to starbucks barista
19:00 < gkatsev> you mean
19:00 < jmar777> i actually kind of envy people who are comfortable with all that. i'd give my right arm to have fat arrow syntax right now, but i can't seem to get past that gag reflex
19:01 <@konobi> jmar777: http://twitter.com/konobi/status/237433967060586496
19:02 <@Nexxy> lol
19:02 < jmar777> konobi: lol... it's really bound to happen at some point. "X to JavaScript" compilers are starting to fall under "law of big numbers" probabilities
19:03 < gkatsev> konobi: lol
19:03 <@Nexxy> MacchiatoScript
19:03 < gkatsev> we already have iced-coffeescript and others, so...
19:03 < akisma> haha. quite overkill what's happening, yeah.
19:05 <@Nexxy> I only write pure unadulterated LiveWire
19:07 < yawnt> macchiatoscript
19:07 < yawnt> tasty
19:07 < gkatsev> cappuccinoscript
19:07 < jmar777> i might be tempted by a compiler that only adds ES6(+) approved language features, just for the sake of being able to use them quicker
19:08 < jmar777> but, that would pretty much be limited to syntactical sugar features, i guess. not really going to truly extend the language through pre-compilation
19:08 < russfrank> jmar777: https://github.com/paulmillr/es6-shim/ :]
19:09 < timeturner> do we really need if IE conditional comments if we can check the user agent via headers?
19:09 < russfrank> timeturner: probably not
19:09 < timeturner> yeah that's what I was thinking
19:10 < jmar777> russfrank: interesting - is that largely polyfill based?
19:10 < russfrank> i dont know what that means
19:10 < jmar777> russfrank: that is, no precompilation
19:10 < russfrank> oh
19:10 < russfrank> yeah
19:10 < gkatsev> timeturner: don't do user agent sniffing
19:10 < gkatsev> jmar777: most people know the term shim better
19:11 < russfrank> polyfill sounds pretty cool though
19:11 < russfrank> timeturner: yeah the answer is you probably actually dont want to be doing user agent sniffing anyway
19:11 < CoverSlide> i prefer the term less-shitty-inator
19:13 < jmar777> russfrank: ya... i think polyfill actually implies that it's filling a gap where something should actually be (usually restricted to missing language features in old engines....)
19:13 < jmar777> russfrank: shim to me implies it could be nearly anything (i.e., i really want an Object.prototype.deepClone, so... bam). kind of a subjective differentiation though
19:14 < gkatsev> https://plus.google.com/109330852418236875528/posts/3YMEPcAGBny "where polyfill came from"
19:14 < russfrank> well then it is a shim and not a polyfill, because these engines aren't speced to be es6
19:14 < russfrank> if they were speced to be es6 but missing es6 feature sitd be a polyfill?
19:14 < gkatsev> shim === polyfill
19:15 < jmar777> nice - didn't know that remy coined that
19:15 < mscdex> shimwow!
19:15 < CoverSlide> lol
19:15 < CoverSlide> \o/
19:15 < CoverSlide> -o-
19:16 < jmar777>  /o\
19:17 < stephank> Gosh, I just figured out I was using createCipher instead of createCipheriv. Took me days to notice. :/
19:17 < stephank> But now have an encrypted channel going in my ssh client. \o/
19:21 < gkatsev> jmar777: who else? :P
19:24 < jmar777> gkatsev: ?
19:25 < gkatsev> jmar777: who else could've/would've coined the term? :P
19:25 < jmar777> gkatsev: ahh, true. he's definitely made his mark on the community
19:26 < jmar777> looks like he's in here today too
19:26 < jmar777> he could settle it than - i think as long as it's formally spec'd (even if it's not implemented in any major vendors), it's a polyfill, vs. shim :p
19:27 < gkatsev> I believe that it's equivalent
19:27 < jmar777> gkatsev: he explains the difference in the second paragraph
19:28 < gkatsev> does he?
19:28 < jmar777> well, perhaps they're not exclusive. polyfill could be a subset of shim i suppose
19:28 < jmar777> "Shim, to me, meant a piece of code that you could add that would fix some functionality, but it would most often have it's own API. I wanted something you could drop in and it would silently work"
19:28 < gkatsev> right
19:29 < gkatsev> I still think it's more or less the same
19:30 < jmar777> remysharp: your assistance is needed :)
19:37 < Ash_> What's a good place to read up on best development practices in node?
19:39 <@isaacs> holy moly couchdb log files are pita
19:42 < focusaurus> I'm seeing a problem with process.stdin.on("keypress" not firing on linux with node 0.8.8 (work fine on mac)
19:42 < focusaurus> causing TJ's commander.js module to hang
19:47 < prettyrobots> Nexxy: You did the right thing.
19:48 < prettyrobots> Nexxy: Such the petty narcissist this person.
19:48 < prettyrobots> Nexxy: There was no other way for it to go.
19:49 < TooTallNate> focusaurus: "keypress" doesn't get fired by default on v0.8.x
19:49 < focusaurus> ah
19:49 < focusaurus> is there a different event to listen for?
19:49 < TooTallNate> focusaurus: someone should send tj a pull request that uses the "keypress" module
19:49 < focusaurus> OK, let me look into that
19:52 < focusaurus> TooTallNate: interestingly, it does seem to work on mac
19:52 < TooTallNate> focusaurus: what version of node?
19:52 < focusaurus> v0.8.8
19:53 < TooTallNate> focusaurus: are you testing in the repl?
19:53 < focusaurus> ah
19:53 < focusaurus> wrong node directory
19:54 < focusaurus> TooTallNate: no, I'm testing using a program I have that uses commander.password, but it seems I'm running node 0.6.18 on my mac still
19:54 < focusaurus> testing now on mac with 0.8.8
19:54 < TooTallNate> well that explains it
19:55 < focusaurus> yup
19:56 < focusaurus> gonna try switching to keypress
20:03 < ccowan> prettyrobots & Nexxy: So I was thinking about the oddity of the whole situation last night. I would be willing to bet he has some kind of mental thing where he has trouble just dropping things. 
20:04 < AvianFlu> ccowan: it's probably best at this point to compensate for his deficiency in that regard and drop it ourselves :)
20:04 < issackelly> What's the current recommended redis client?
20:04 < ccowan> AvianFlu: yup... you right.
20:05 < ccowan> *your ... errr... I have a typing deficiancy :D
20:05 < Beryllium> Agreed with AvianFlu. I was amused when I recognized the dude's nickname from the chat log, though; I know him from another channel.
20:05 < jaseemabid> Can somebody point me to tutorial on writing a 'C' addon? The C++ example at http://nodejs.org/api/addons.html is not really a tutorial.
20:05 < AvianFlu> jaseemabid: I have a repo I made as an example, but I don't know if I ever wrote a proper readme
20:05 < jaseemabid> AvianFlu, link
20:06 < AvianFlu> https://github.com/AvianFlu/node-fibonacci-native
20:06 < AvianFlu> I think
20:06 < yawnt> jaseemabid: https://github.com/nikhilm/jsfoo-pune-2012/
20:06 < AvianFlu> crap, wrong, here https://github.com/AvianFlu/fibonacci-native
20:06 < seejohnrun> hey all - randomly when coming back up - a http.Server i'm running receives http://hastebin.com/mibagamuqe
20:06 < AvianFlu> jaseemabid: that's about the simplest C++ addon you'll ever see
20:06 < jaseemabid> yawnt, I came across that slide. Was good
20:06 < aniasis> if I want jade to output a constant how can I do so?
20:06 < AvianFlu> and it has all the moving parts
20:06 < seejohnrun> after the server is up for a bit - it doesn't happen again, but its randomly killing workers of mine
20:06 < seejohnrun> any ideas?
20:07 < jaseemabid> wscript or node-gyp ?
20:08 < andrewdeandrade> does anyone know of an MD5 digest implementation of file fingerprinting as a cache busting strategy? I've created a simple naive implementation in my fork of express-cdn, but I still need to add in memory caching to prevent unnecessary recalcs and I'd like to look at someone else's implementaiton if one already exists
20:08 < AvianFlu> jaseemabid: I recommend you use gyp
20:08 < AvianFlu> if you need an example binding.gyp, I can link you on
20:08 < AvianFlu> e
20:09 < yawnt> also because node-waf aint supported
20:09 < yawnt> anymore
20:09 < jaseemabid> AvianFlu, I got some good stuff on gyp
20:09 < AvianFlu> cool
20:10 < jaseemabid> AvianFlu, Why not update your fib lib to use gyp /
20:10 < jaseemabid> I am new to both waf, gyp and c++. So, ill just go with whats recommended now.
20:15 < rachet> do you guys know if there is a way to tell a master process of a cluster to no longer route requests to a child?
20:15 < rachet> yet let the child still live
20:18 < lohkey> rachet, can't you just have the master send a message to the client telling to disconnect from the shared socket?
20:18 < lohkey> s/client/child/
20:19 < rachet> the child still needs to finish up its requests, before killing itself
20:19 < rachet> so my thought is to stop routing to the child, let all requests finish, then let it kill itself
20:20 < lohkey> rachet, load balancing via socket sharing is handled by the OS
20:20 < rachet> okay, maybe I'm taking the wrong approach
20:21 < rachet> I'm making an API that goes and scrapes multiple sources, collects the data, and returns it
20:21 < rachet> problem is... there is a memory leak
20:21 < rachet> which I *think* is from jsdom
20:21 < milani> rachet, run it on another process.
20:22 < milani> rachet, create a child process, use jsdom in that, and destroy it after finishing the job.
20:23 < vrlogrs> hey guys
20:23 < vrlogrs> need some help ..
20:23 < rachet> I can't just execute a function in a child process, can i?
20:23 < vrlogrs> im doing date.getTime() in node.js and having client-side javascript compare that time with a new date.getTime() .. 
20:23 < vrlogrs> for a temporary ping
20:24 < vrlogrs> but, is getTime() timezone dependent?
20:24 < vrlogrs> that is, if the server's in PST, and the user is in EST, will the comparison work?
20:24 < milani> vrlogrs, use UTC versions.
20:25 < vrlogrs> milani: what do you mean?
20:25 < vrlogrs> getTimezoneOffset() ?
20:26 < vrlogrs> or UTC() ?
20:27 < milani> UTC()
20:27 < milani> you want to check for ping right?
20:28 < context> im assuming Date.now() is UTC
20:28 < vrlogrs> yah milani
20:28 < vrlogrs> ok, thanks 
20:28 < context> and now() is gonna be in milliseconds
20:29 < context> oh i guess UTC is too
20:29 < context> dont see reason for getting an object and not just go straight for now
20:30 < Guest50552> I'm trying to learn node. But it really bothers me that require is synchronous? Why on earth did they make it that way and how do you for instance export something if you need to read a config file?
20:30 < russfrank> require('thing');  exports.foo = 'bar';
20:31 < vrlogrs> apparently, there is no UTC() method for new Date -- context and milani
20:31 < vrlogrs> any ideas?
20:31 < russfrank> Guest50552: module loading was originally async a long time ago. i'm told it wasnt that great.
20:32 < bradleymeck> Guest43250: setup time vs configuration vs running time. use something like nconf and/or a async config manager. when you require a module it should not configure itself, make a factory that generates something that can use a config. if you configure during require you are going to have trouble mocking, using multiple, etc in the future
20:32 < russfrank> Guest50552: https://groups.google.com/forum/?fromgroups=#!topic/nodejs/y_-LZqltb1A
20:32 < bradleymeck> configuration during require() essentially makes ppl want to use globals, and barf on themselves
20:33 < Guest50552> russfrank: Ok, thanks. But isn't like reading a config file quite an ordinary thing to do in module. And the you can't really export anything but a function taking a callback? 
20:34 < focusaurus> TooTallNate: pull request sent to have commander.js use keypress. That seems to make it work on 0.8. Also added some checks about process.stdin.setRawMode to make it work on both 0.6 and 0.8. Thanks for your help!
20:34 < milani> vrlogrs, https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/UTC
20:35 < russfrank> Guest50552: not sure i understand what you're asking
20:35 < TooTallNate> focusaurus: nice!
20:35 < bradleymeck> Guest43250: export a Factory to generate an Object that uses a configuration. Directly and absolutely wanting one file for confuration at all times is rare in most modules.
20:35 < bradleymeck> configuration*
20:36 < stagas> Guest50552: you can read a file in sync
20:36 < focusaurus> I imagine TJ might want to find a solution that doesn't require an npm dependency, as this would be the first one, but we'll see what he says
20:36 < milani> vrlogrs, yeah Date.now() is better to use.
20:37 < milani> as context suggested.
20:38 < Guest50552> stagas: yeah, true. But isn't that frown upon? 
20:39 < bradleymeck> Guest43250: not during setup phase of your program
20:42 < vrlogrs> context: Date.now did the trick
20:42 < vrlogrs> thanks
20:42 < vrlogrs> btw, for those interested: http://www.funnode.com/
20:42 < vrlogrs> all in node.js
20:42 < vrlogrs> chess/pairs/kachuful
20:43 < Guest50552> bradleymeck: Reading your recent posts they seem to fit my question about config and synchronous loading did you by any chance reply to the wrong nick? (First time on IRC, think I better get a real client...)
20:43 < milani> vrlogrs, I'm on chess
20:43 < bradleymeck> Guest50552: yes
20:43 < milani> lets play!
20:44 < milani> Unable to communicate with Server. Try refreshing the page.
20:44 < milani> :(
20:45 < vrlogrs> oops - forgot to restart the server after the fix
20:45 < vrlogrs> give me 1 min
20:45 < Guest50552> bradleymeck: Ok, cool. Yeah, I've been trying to think more in factory terms but not quite there yet.. 
20:46 < vrlogrs> ok
20:46 < vrlogrs> done
20:46 < vrlogrs> http://www.funnode.com/chess
20:46 < bradleymeck> Guest50552: module.exports=function Client(config) {this.config=config;return this} //setup prototypes to defer to this.config etc
20:46 < haohui> hi folks. Can anyone please explain how node.js control what symbols to be exported to the global namespace? For example, I saw setTimeout is defined as "exports.setTimeout", but I can't find the symbol "exports" anywhere
20:47 < yawnt> it's a global variable
20:48 < haohui> yawnt: do you know which file defines it? and if I understand correctly, the app can call "setTimeout" directly, rather than calling "exports.setTimeout"
20:49 < milani> vrlogrs, it doesn't connect any more
20:50 < Guest50552> bradleymeck: Thing is before node the most js I've done has been with YUI and they async module system I've also been working with OSGi and I kind of want to see node modules as bundles or components.. 
20:51 <@isaacs> top ten packages by download counts: https://gist.github.com/3441558
20:51 <@isaacs> the moral of the story: if you want your package to be downloaded a lot, make express depend on it
20:53 < vrlogrs> milani: it's not connecting?
20:53 < Dragonblade> So I managed to get the readdirSync to work
20:54 < Dragonblade> however
20:54 < milani> vrlogrs, connected
20:55 < Dragonblade> https://docs.google.com/document/d/1hc6TRKy9_knyOHzA9cp1Ps61Dr-VtI0JlgNakKs73GU/edit
20:55 < Dragonblade> I get that
20:56 < Dragonblade> this was before I moved the massive amounts of music out of the directory to test with 1 song
20:56 < Dragonblade> after not before
20:57 < Dragonblade> before is that long code error I pasted
20:57 < Dragonblade> I swear regardless of what error I get it all leads to the readUInt8
20:57 < Dragonblade> even if it doesn't say
21:03 < vrlogrs> who's the idiot that's abusing the chat?
21:03 < vrlogrs> in chess?
21:04 < milani> abusing?
21:04 < Dragonblade> oh in chess XD
21:04 < Dragonblade> I thought you meant here
21:04 < Dragonblade> I was like "o.o?"
21:05 < vrlogrs> http://www.funnode.com/chess
21:05 < vrlogrs> look
21:05 < vrlogrs> some guy probably has a script running
21:05 < gkatsev> lol
21:06 < milani> just don't restart the server
21:06 < milani> I'm playing:D
21:07 < vrlogrs> lol
21:07 < vrlogrs> no problem
21:07 < vrlogrs> it doesnt bother me
21:07 < vrlogrs> just cant believe someone is so bored
21:07 < vrlogrs> he's done now
21:07 < milani> who is guest_256
21:08 < vrlogrs> no way to know
21:09 < vrlogrs> if you login, u can keep track of ratings :)
21:09 < vrlogrs> elo rating
21:10 < vrlogrs> nobody knows kachuful?
21:10 < vrlogrs> very fun card-game
21:10 < vrlogrs> if anyone wants to play
21:10 < Dragonblade> could always learn :3
21:10 < vrlogrs> Dragonblade: http://www.funnode.com/kachuful
21:12 < vrlogrs> need 1 more play
21:12 < vrlogrs> 1 more player
21:13 < vrlogrs> so we can start
21:15 < haohui> How node.js implements local namespace?
21:15 < haohui> that is, var foo = bar is only locally visible to the module
21:15 < ljharb> i just updated npm to 1.1.53, and now when i run npm update i get "No README.md file found!" on my own repo, and it doesn't update my deps. is this a known issue?
21:17 < chilts> morning all
21:18 < vrlogrs> 1 more player?
21:18 < Dragonblade> XD
21:18 < Dragonblade> jus kinda waitin
21:18 < vrlogrs> are you Robert?
21:18 < vrlogrs> try joining - cause we're waiting for 1 player
21:18 < Dragonblade> yup
21:18 < Dragonblade> it says Im in Queue
21:19 < vrlogrs> leave the queue
21:19 < vrlogrs> and click on the players waiting
21:19 < vrlogrs> wohooo
21:19 < vrlogrs> we're playing
21:25 < VesQ> haohui: the whole module is wrapped inside a function block automatically by node.js, so that's how local namespace is handled
21:26 < haohui> VesQ: I can't find the code though. That's probably the reason why I'm confused
21:26 < VesQ> you're digging through node.js sources or something?
21:27 < haohui> yeah. I'm trying to understand how it works.
21:27 < VesQ> I can see the function wrapping when I look at my code through a debugger
21:30 < timeturner> what the hell
21:30 < timeturner> I just restarted my app for the 5th time and it magically fixed the error
21:30 < timeturner> no idea what that means
21:30 < gkatsev> 5th time's the charm?
21:30 < VesQ> maybe a friendly sysadmin fixed your code while you were busy restarting i
21:31 < VesQ> it*
21:31 < timeturner> haha maybe
21:31 < Spion> haha, good guy sysadmin
21:31 < Spion> sees you're having problems with your node app
21:31 < timeturner> but i'm the only one working on it so it must have been a ghost sysadmin :P
21:31 < Spion> fixes it for you while you re-run it
21:32 < timeturner> how am I supposed to debug something that just goes away? this is kind of scary lol
21:33 < wedgeV> hi, i'm using node_redis and i'm wondering if there is a way to specify a timeout for redis calls
21:35 < wedgeV> ie: redis.get('<key>', function(err,resp){console.log('foo'); });
21:35 < VesQ> timeturner: maybe there was something fishy going on in your system
21:35 < VesQ> low memory/diskspace/etc
21:36 < wedgeV> right now it seems that it looses the connection to redis .get waits to long before calling the passed closure
21:37 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
21:41 < astropirate> Anyone got a working __noSuchMethod__ on node?
21:41 < astropirate> or a general getter for   __noSuchProperty__ ?
21:42 < CoverSlide> now where would it be useful to have that?
21:44 < astropirate> CoverSlide, the problem i
21:44 < astropirate> i'm havig now :)
21:44 < astropirate> i have LOTS of files, i dont want to require them all one by one
21:44 < astropirate> and there could be more
21:44 < CoverSlide> you have to rethink your problem then
21:44 < Domenic> astropirate: you'd need a proxy; I think node-proxy works
21:44 < Domenic> or maybe you can get it from a v8 flag these days
21:45 < Domenic> Ah yes, node --harmony-proxies
21:46 < CoverSlide> yeah he can use proxies, but what can be expected to gain from using it?
21:46 < Domenic> BEING COOL, OK?!
21:46 < astropirate> CoverSlide, I am workign with clientside and serverside code. They share code
21:46 < astropirate> and there are MANY files
21:46 < CoverSlide> plus the tons of extra coding compared to just `obj.method && obj.method()`
21:46 < astropirate> that i do not wish to require one by one.
21:47 < CoverSlide> yeah you have to make sure the browser supports proxies then
21:48 < astropirate> CoverSlide, not really. I have an index.js file that is only to be used by node
21:48 < astropirate> i the client code as a linked directory as a node_module
21:48 < astropirate> and it being slow is no matter. because it gets "require"ed only on application startup
21:49 < astropirate> i believe the term is "bootstraping"
21:50 < CIA-1> libuv: Bert Belder master * rd62b1ac / include/uv-private/uv-win.h : windows: fix the MinGW build - http://git.io/-zVwqA
21:54 < robinson_k> }/win 12
22:00 < scwh> elves: thought you might be interested in this http://rtomayko.github.com/rocco/rocco.html
22:02 < scwh> sorry, mispost...
22:08 < Dragonblade> wow got my work stuff done
22:09 < hillct> Good evening all. I've run into an issue with bindings in the node module 'gd' which I suspect is a more generic compile problem (apparently in the linker phase) but I'm having trouble interpreting the output beyond that. http://pastebin.com/fSEfQz1Q The compile doesn't fail, but specific calls seem to fail, with error: "dyld: lazy symbol binding failed: Symbol not found: _gdImageCreateFromJpegPtr" which suggests to me that lib
22:09 < hillct> isn't being picked up. Where does node-wav pull it's lib path from?
22:10 < Leeol> This is going to sound weird.. but is there a way to require a module *relative* to a file location? If not, i am going to have to write a require.resolve() function that resolves the existance of a module relative to a location
22:11 < hillct> Leeol: There's a specific Require resolution path, I think it's ./node_modules, ./, ../ but I'm not certain. Beyond that you can require any module by specifying it's absolute or relative path as you see fit
22:13 < Leeol> hillct: Well, the way require resolves paths currently is based on the file calling it, correct? Soo, /foo/file.js has the code `require('bar')`, require will resolve and look in `/foo/node_modules/bar` first, then `/node_modules/bar` and so on
22:14 < Leeol> But say both `/node_modules/bar` and `/foo/node_modules/bar` existed, file.js's require will always resolve to `/foo/node_modules/bar`. This isn't bad per say, but i need a way to specify a starting point, so i would specify `require('bar', '..')`
22:14 < hillct> Leeol: I'm not certain, but as I understand it, the search path is relative to the file called as an argument to node itself where your app is made up of multiple files, if that makes sense
22:15 < Leeol> hillct: Yea, each require is relative to each specific file
22:15 < Leeol> Whicch allows you to require('../../blah') and such
22:15 < Leeol> Either way, i don't see an option to override that, so i think i need to implement my own resolver so i can require the absolute path
22:16 < hillct> Leeol: Yes, but I believe there's some effort made by node to avoid duplication of installed dependency modules, where app requires module C, and module A which requires module B which also requires module C
22:17 < hillct> Leeol: I would try and avoid use of absolute paths as best you can
22:17 < Leeol> hillct: Does that effect what i am trying to do somehow? I just need to resolve packages manually, and then use node's normal require() with an absolute path
22:17 < Leeol> hillct: There is no other way
22:18 < Leeol> hillct: Well, absolute or relative to the local file, it doesn't really matter
22:18 < Leeol> Both specify a hard path to a custom location
22:18 < Leeol> And force node to use the path i specify, rathert than resolving it's own path
22:18 < hillct> yes, but for that reason, go with relative paths where possible
22:19 < Leeol> hillct: I don't understand the difference? 
22:19 < hillct> You'll see that many modules include an index.js which is what you'd need to call if you specify a full path
22:21 < hillct> Leeol: by absolute path, I mean a path that begins with a / and a relative path might begin with a directory name or a ../
22:22 < Leeol> I'm honestly not sure how i will deal with that. When writing my own resolver, i think i will need to iterate up the directory chain looking for `../node_modules/foo/package.json`,  `../../node_modules/foo/package.json`, and if i find one i'll need to open up package.json and look for the `main` value
22:23 < Leeol> hillct: Yes i understand that, i just meant that i do not understand what it matters. For example, why is `../../../../../../foo/bar/baz` better than `/ack/foo/bar/baz` ?
22:23 < CoverSlide> or you can just have a specific version as a dependency of that module
22:24 < Leeol> CoverSlide: Version is irrelevant (i think) to what i need to do. I'm trying to import an installed package relative to a specified directory
22:24 < hillct> Leeol: I guess I don't understand your use case, because I don't get the need to implement a more complex resolver, or why your dependencies wouldn't be located where they're needed
22:24 < CoverSlide> why? 
22:24 < hillct> Leeol: relative paths are encouraged for application portability, so you can easily move your app from /usr/ to /usr/local/ to /home/joe/myapp/
22:25 < CoverSlide> if you have the directory structure all laid out, then just use relative / absolute paths
22:25 < Leeol> CoverSlide: But i have no idea on the directory structure, one sec.. lemme explain
22:25 < Leeol> hillct: It's because a global `bin/command` is being called, but i want the command to use the same libraries installed in the target directory
22:25 < mkrecny> fuckers
22:26 < Leeol> It's tough to explain without going into all the goals, but assume that you have a generic global bin/command that uses user libraries. 
22:26 < CoverSlide> yeah usually what's done is just require('../index')
22:26 < CoverSlide> in that case
22:27 < CoverSlide> otherwise if you need say mysql, it will be just require('mysql') if it's in ../node_modules/mysql
22:27 < Leeol> That bin/comamnd can't simply `require 'user_lib'` because global/lib/node_modules/user_lib` does not exist
22:27 < CoverSlide> well where the fuck is user_lib?
22:27 < CoverSlide> and what is this global thing?
22:28 < Leeol> CoverSlide: Here, i'll modify my example a bit. Say you write an npm paackage that lists all the locally installed modules
22:28 < Leeol> CoverSlide: You install it with `npm install -g listmods`
22:29 < Leeol> CoverSlide: Now, you go into some project and type `listmods` and the bin script has to resolve from the process.cwd() up the directory chain until it finds node_modules
22:29 < Leeol> When it does, it lists all the modules
22:29 < CoverSlide> ok 
22:29 < Leeol> Now perhaps you want this bin to also specify detailed information about a specified module, via the command `listmods some_package`
22:30 < CoverSlide> yeah you can write that part yourself
22:30 < Leeol> Exactly
22:30 < Leeol> Which is what i was simply asking, i didn't know if there was any build in methods to ease this. For example, `require.resolve('some_package', process.cwd()`
22:31 < Leeol> err, `require.resolve('some_package', process.cwd())`
22:32 < CoverSlide> yeah no, you can write something that does that easily yourself, doesn't need to be in core
22:32 < Leeol> CoverSlide: oh ofcourse, i wasn't asking it to be
22:33 < Leeol> CoverSlide: But you have to admit, require already does all of this. The only thing it does wrong in this case, is it defaults to the __dirname, and doesn't offer a way to override
22:33 < Leeol> So i was looking over the source to see if there was an easy way to use what it already did
22:34 < Leeol> But, not that i see
22:35 < substack> Leeol: http://github.com/substack/node-resolve
22:36 < substack> lets you set the dirname
22:36 <@Nexxy> \o/
22:36 < Leeol> substack: You sir, are a saint
22:39 < Dragonblade> And happiness jut struck my heart :D
22:39 < Dragonblade> I gots mah new job
22:39 < CoverSlide> is it using node?
22:39 < Dragonblade> I wish ._ .
22:40 < CoverSlide> then you fail
22:40 < Dragonblade> Its just a job to start out
22:40 < Dragonblade> Until I find a company tha uses Node
22:40 < Dragonblade> other than the one my friend works for
22:41 < CoverSlide> you should be like, bro hook me up
22:42 < Dragonblade> Lol I would. But I need the knowledge he has. Which he is teaching me right now
22:42 < Dragonblade> starting off with debugging the hell out of his music player
22:42 < Dragonblade> at least thats how I see it
23:25 < astropirate> 3> harmony
23:25 < astropirate> <3 harmony
23:25 < purr> Let it be known that astropirate hearts harmony.
23:31 < LordThumper> http.request(resource, function(res) { res.on('data', function (data) { console.log("foo") }); });
23:31 < LordThumper> Shouldn't I get a single "foo" per request?
23:31 < maxogden> no
23:31 < maxogden> n foos
23:31 < LordThumper> What is n?
23:32 < LordThumper> I am getting 8 or more
23:32 < maxogden> chunks from tcp
23:32 < LordThumper> Oh it's that low level
23:32 < maxogden> protip: require('request')('resource', function(err, resp, data) {})
23:32 < maxogden> data is all your chunks
23:32 < maxogden> see also: http://maxogden.com/node-streams
23:33 < LordThumper> Ok thanks alot maxogden
23:45 < LordThumper> Thanks again Maxogden, "request" module worked perfectly :)
23:45 < rrjamie> is there a way to compile node.js so it run in low virtual memory environments
23:45 < rrjamie> e.g., less than 512MB in ulimit
23:46 < ibash> is there anything like pry for node -- any how?
23:46 < CIA-1> node: Nathan Rajlich v0.8 * rf8fd9ac / deps/openssl/openssl.gyp : build: use the openssl android configuration for "arm" builds - http://git.io/T0vVsg
23:46 < CIA-1> node: Nathan Rajlich v0.8 * r7142b26 / deps/openssl/config/android/openssl/opensslconf.h : build: tweak the openssl android configuration to build - http://git.io/wFJk2Q
23:53 < ansdev1> how can nodejs access session cookies when session.http_only is true?
23:54 < ansdev1> cookie_httponly*
23:56 <@Nexxy> ansdev1, wat?
23:57 < ansdev1> Nexxy: if i've set session.cookie_httponly to true... that means javascript can't access the session cookies.. but in testing on my local machine. node can still access these cookies
23:57 <@Nexxy> go on
23:57 < ansdev1> i'm kinda confused for planning my data structure using php for login and node for dealing with asynchronous requests from my javascript application
23:58 < ansdev1> afaik, node is still javascript o_O
23:58 <@Nexxy> lol
23:58 <@Nexxy> it's also the httpd in this instance
23:59 < ansdev1> but if the node is on server and not the client machine... i've no way to get this cookie in a http-header for communicating with my php script
23:59 < ansdev1> or am i missing something?
23:59 <@Nexxy> you cookies aren't magic
23:59 <@Nexxy> your
--- Log closed Fri Aug 24 00:00:14 2012
