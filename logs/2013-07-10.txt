--- Log opened Wed Jul 10 00:00:33 2013
00:01 < ozette> alasi, can you try omitting that trailing slash on line 26
00:01 < alasi> alrighty
00:01 < liamkeily> this is the way im doing things atm, will the prototype thing imrpove it massivly?
00:01 < liamkeily> function User(username){
00:01 < liamkeily> 	this.username = username;
00:01 < liamkeily> 	this.walk = function(map,x,y){
00:01 < liamkeily> 		this.xpos =.............................
00:01 < liamkeily> 	}
00:01 < liamkeily> 	etc
00:01 < liamkeily> }
00:01 < liamkeily> players[0] = new User("Liam");
00:01 < liamkeily> players[1] = new User("Test");
00:01 < itsnotlupus> move the walk bit to User.prototype.walk = function(map,x,y){...}
00:01 < liamkeily> ahhh ok
00:02 < liamkeily> is that all i have to do?
00:02 < itsnotlupus> if you create a lot of those, it will make a big difference.
00:02 < liamkeily> for all methods
00:02 < itsnotlupus> right
00:02 < ozette> alasi, and maybe try throwing a console.log("%s %s", req.method, req.url); between line 27 and 28, just to make sure
00:02 < liamkeily> so if i go through moving all of the methods ouside of the constructor in that prototype format.. 
00:02 < alasi> ozette: Will do after deploy :P
00:02 < ozette> haha ok
00:02 < liamkeily> it will only store one copy?
00:03 < itsnotlupus> right. faster constructors, less memory used. no downsides.
00:03 < alasi> ozette: Client doesnt like that its a redirect
00:04 < ozette> alasi, what does it say
00:04 < itsnotlupus> as long as you weren't using the constructor function as a closure to stash private members, anyhow. you can't keep doing that with prototype-based methods.
00:04 < alasi> ozette: http://cl.ly/image/3R0E1l2G3M0H/Screen%20Shot%202013-07-09%20at%208.02.58%20PM.png
00:05 < liamkeily> in constructor i define quite a lot of private variables
00:05 < liamkeily> is that what you mean?
00:05 < itsnotlupus> yeah. you won't be able to access those from your methods anymore.
00:05 < liamkeily> oh no :o
00:05 < itsnotlupus> I suggest you just set them as members on your instances instead. prefix them with a _ or something.
00:06 < itsnotlupus> that'll end up running faster in v8 too.
00:06 < liamkeily> so
00:06 < liamkeily> in a prototype function
00:06 < liamkeily> does this.x work/
00:06 < itsnotlupus> yes
00:07 < liamkeily> so i could create my own constructor?
00:07 < liamkeily> and do var user = new User() user.init(var,var,var);
00:07 < itsnotlupus> you create one when you wrote function User() {}
00:07 < liamkeily> yes and inside there i have
00:07 < alasi> ozette
00:07 < liamkeily> this.x = 3;
00:07 < ozette> alasi, this seems like heroku's doing, limiting your backend - because this should work.
00:07 < itsnotlupus> right. or you could just do new User(var,var,var) and have that constructor do whatever init() is meant to do
00:07 < liamkeily> this.y = 5
00:07 < liamkeily> etc
00:07 < alasi> ozette: Huh
00:07 < ozette> yes?
00:08 < alasi> So instead of redirect, sendfile at url might work?
00:08 < alasi> I'll look up the docs
00:08 < ozette> you can try that yes
00:08 < ozette> a res.sendfile
00:09 < alasi> yah
00:09 < alasi> Wait..
00:09 < alasi> res.sendfile("http://talking-circles.herokuapp.com:5000/socket.io/socket.io.js") ?
00:09 < alasi> ozette: ^?
00:10 < liamkeily> yay :)
00:10 < liamkeily> it worked straight away!
00:10 < alasi> Wait though, if heroku didnt work with get requests using the :5000 in the url, it might not work
00:10 < liamkeily> alasi
00:10 < liamkeily> what is heroku?
00:10 < alasi> yes
00:11 < alasi> http://heroku.com
00:11 < alasi> Hosting
00:11 < alasi> For nodejs
00:11 < alasi> Much better/cheaper than vpn
00:11 < alasi> Includes git deploy
00:11 < alasi> vps*
00:11 < ozette> alasi, that's correct, but now i think of it -- might have something to do with your http and socket.io being on the same port
00:11 < itsnotlupus> is it cheaper really? I'm pretty sure vps are a better value, if you're willing to set everything up yoruself.
00:11 < bevacqua> it's a wrapper around amazon web services
00:12 < azbyin> anyone here uses nodester? or the new guys that bought them?
00:12 < alasi> ozette: Hmmmmmm
00:12 < alasi> That doesnt make sense though
00:12 < alasi> Because it's the file thats missin
00:13 < liamkeily> how much power does 1 Dyno have
00:13 < alasi> idk
00:13 < liamkeily> looks a bit expensive to me :O
00:13 < alasi> No, it's free
00:13 < alasi> Tier
00:13 < alasi> 1 Dyno is freakin free as freakinness
00:13 < liamkeily> ?
00:13 < ericelliott> nexxy: pong
00:14 < liamkeily> and these databases look expensive to haha
00:14 < alasi> idk what to say
00:14 < liamkeily> think ill stick to cloud :)
00:15 < alasi> It's for high scale stuff
00:15 < alasi> liamkeily: Do you use vps? How much per year?
00:15 < liamkeily> well i have a dedicated server for my websites
00:15 < liamkeily> for my game im currently using a cloud dedicated server
00:15 < liamkeily> 4GB RAM
00:15 < liamkeily> 2CPUS
00:15 < liamkeily> $40 a year
00:15 < liamkeily> month
00:15 < liamkeily> rather :p
00:16 < alasi> ozette: Does io = require('socket.io').listen("1337") look right for ln 3?
00:16 < _6a68> heroku is definitely not cheaper than just using AWS
00:16 < alasi> really?
00:16 < _6a68> it's also not terribly customizable
00:16 < _6a68> yeah
00:16 < liamkeily> check out
00:16 < liamkeily> digitalocean.com
00:16 < alasi> huh
00:16 < liamkeily> thats who im using
00:16 < ozette> alasi, shouldnt be quoted
00:17 < alasi> yeah yeah ok
00:17 < _6a68> give awsbox a try if you need to spin up disposable boxes, it's a nice wrapper that simplifies provisioning
00:17 < alasi> ozette: Then on client js: io.connect('http://localhost:1337');
00:17 < liamkeily> yeah thats why i like digitalocean
00:17 < liamkeily> can just deploy a 64GB server in 60 seconds
00:17 < liamkeily> then deleet eit
00:17 < liamkeily> lo
00:17 < ozette> yes, but it goes wrong at the moment your client html is asking for /socket.io/socket.io.js right
00:17 < liamkeily> lol*
00:18 < sinclair|net> https://github.com/sinclairzx81/appex/#attributes <-- woot
00:18 < sinclair|net> almost a real web framework
00:18 < alasi> ozette: Korrectomundo
00:18 < alasi> liamkeily: Sounds like a car: Goes from zero to server in 60 seconds!
00:18 < liamkeily> i was wondering. When i have node running with socket.io in terminal it spits out so much text, would that have any effect on performance?
00:18 < alasi> liamkeily: Only terminal performance
00:19 < alasi> Like.. the X-Window performance
00:19 < alasi> I thinks
00:19 < alasi> It's the same as console.log dude
00:19 < _6a68> re: digitalocean, I find 2TB transfer for $10/month hard to believe IMO
00:19 < ozette> alasi, so the io.connect part is for a later step, and it should not be localhost actually, but your application url
00:19 < _6a68> I'd be curious what they'd do to you if you got within a tenth of that figure
00:19 < alasi> OOH ok
00:19 < itsnotlupus> liamkeily: a bunch of packages are setup to behave a little different when NODE_ENV is set to "production".. less verbose, among other things.
00:19 < liamkeily> yeah their prices are so cheap!
00:19 < liamkeily> but there interface is so nice
00:20 < piklu_> Hi Guys
00:20 < liamkeily> itsnotlupus: how do i turn that off?
00:20 < piklu_> What are the most popular node.js db ?
00:20 < sinclair|net> piklu_: probably mongo
00:20 < liamkeily> Oh yeah i was going to ask that too, is there anything wrong with using MySQL?
00:20 < itsnotlupus> try something like "export NODE_ENV=production" on your shell before running node. see if it makes a difference.
00:21 < AAA_awright> No
00:21 < itsnotlupus> liamkeily: this may be useful: http://www.jamie-white.com/html5/setting-up-socket-io-for-production/
00:21 < sinclair|net> AAA_awright: https://github.com/sinclairzx81/appex/#attributes <-- nice right?
00:21 < ozette> alasi, it looks like your application listens on a different port everytime it gets deployed, is this correct?
00:22 < itsnotlupus> piklu_: if you pick your DB from a popularity contest, you're probably going to be disappointed.
00:22 < alasi> ozette: I have no idea bruh....... Well I mean if I change the code/port myself, then yes of course
00:22 < piklu_> itsnotlupus : I am making a redis based hosted offering like redistogo.com
00:22 < itsnotlupus> cool
00:22 < piklu_> I am thinking of providing 2-3 more popular choices
00:22 < piklu_> so thus I asked
00:22 < itsnotlupus> ah I see
00:23 < piklu_> it will be great if you let me know and I have a set of offerings for developers
00:23 < liamkeily> im already noticing improvement to performance since making those prototypes!!
00:23 < liamkeily> :D
00:23 < piklu_> will provide them control panels and central management with detailed stats and whatever is needed
00:23 < itsnotlupus> yeah, no idea what would be most in demand for that, sorry.
00:24 < alasi> ozette: BTW, still not loading :P
00:24 < alasi> :/
00:24 < piklu_> itsnotlupus: what is common, like mongo, redis
00:25 < _6a68> piklu_: you might consider doing something like Parse didâ€”exposing higher-level stuff and abstracting away the storage layer
00:25 < piklu_> _6a68: what exactly ????
00:25 < itsnotlupus> piklu_: there are fairly stable DB drivers for a bunch of things.. I've personally used mongo, redis, mysql and postgresql at least. not sure how common each one is.
00:25 < liamkeily> itsnotlopus
00:25 < liamkeily> how do you go about inheritance ?
00:25 < ericelliott> I'm trying to use bouncy for http proxy, but I'm not getting very far. When I bounce a connection, it just sits there doing nothing.
00:25 < liamkeily> with those prototype functions
00:25 < _6a68> piklu_: https://www.parse.com/docs/index
00:25 < _6a68> have a look.
00:26 < itsnotlupus> liamkeily: let me see if I can dig up something about it.
00:26 < piklu_> let me have a look
00:26 < liamkeily> :) thanks
00:26 < ozette> alasi, i know, but the console.log is displayed? -- what I think is that your application backend code just asks "itself" again for socket.io/socket.io.js instead of socket.io
00:26 < alasi> console.log.... oops...
00:26 < alasi> Wait how do I view console on heroku?
00:26 < itsnotlupus> MDN is always a good start: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain
00:27 < owen1> how to make the output of tape prettier?
00:27 < ozette> try local first
00:27 < ericelliott> I have a pretty detailed explanation of prototypal inheritance here: http://ericleads.com/2013/02/fluent-javascript-three-different-kinds-of-prototypal-oo/
00:27 < ozette> i don't know too much about heroku
00:27 < owen1> i want to switch but the team is used to node-unit where the output is green/red 
00:27 < ericelliott> liamkeily: ^^
00:27 < alasi> ozette: Whats annoyong is that I have to change the root for local and herokual
00:28 < liamkeily> thanks eric ill have a look :)
00:28 < ozette> i've deployed an app once at heroku, but done nothing too big there
00:28 < alasi> ok
00:28 < liamkeily> oh no all this developing a game has made me start trying to use wasd in vim lol
00:29 < piklu_> _6a68: Dnt u think they went too far in doing it ???
00:29 < piklu_> I mean they are just making fool of people
00:29 < piklu_> providing data store over web?
00:29 < piklu_> thats it ??????
00:30 < _6a68> piklu_: I think you need more question marks
00:30 < alasi> ozette: Aha! Failed to load resource: the server responded with a status of 404 (Not Found)  http://localhost:5000/192.168.1.2:5000/socket.io/socket.io.js
00:30 < piklu_> _6a68: lol
00:30 < alasi>                                       ^
00:30 < ericelliott> liamkeily: Uh oh.. watch out for that d key in vim. ;)
00:30 < alasi> But the console out: GET /socket.io/socket.io.js
00:30 < ozette> wow
00:31 < ericelliott> liamkeily: Try to move your cursor two spaces and the whole line vanishes.
00:31 < ericelliott> WTF! Where did it go!? Oh yeah.
00:31 < piklu_> _6a68: I mean what out of box is done?
00:31 < _6a68> piklu_: parse got acquired by facebook not long ago, there's a market for simplifying how to build/host/deploy mobile apps.
00:32 < liamkeily> haha yes thats what i keep doing :(
00:32 < ericelliott> liamkeily: It would be funny if it wasn't frustrating. Or frustrating if it wasn't funny.. something like that. ;0
00:33 < piklu_> _6a68: yes - I agree - but I dnt find it very simple though
00:33 < piklu_> I think I can open a free datastore
00:33  * _6a68 shrugs
00:33 < piklu_> where people can push and pull
00:33 < piklu_> :)
00:33 < _6a68> good luck :-)
00:33 < piklu_> he he
00:33 < piklu_> apikey:primary_key:data
00:33 < piklu_> lol
00:34 < piklu_> _6a68: anyways i am offering to developers, this stuff
00:34 < ozette> alasi, can you go to localhost:5000/socket.io/socket.io.js? or 192.168.1.2:5000/socket.io/socket.io.js?
00:34 < alasi> ozette: So what do you suggest?
00:34 < alasi> ok
00:34 < ozette> is that possible? or not found?
00:34 < alasi> ozette: Not found
00:34 < alasi> Cannot GET [url]
00:35 < ozette> and if you set io to listen on 1337 it worked right?
00:35 < ozette> and redirect socket.io requests to 1337../socket.io/socket.io.js
00:35 < ningu> I prefer to listen on 31337
00:35 < ozette> lol
00:35 < azbyin> lol ningu
00:39 < alasi> ozette: It never worked...
00:39 < alasi> hi ningu
00:39 < alasi> What do I do??
00:39 < ozette> it should
00:40 < alasi> Wait...
00:40 < alasi> I'll make a new gist of all the shit
00:41 < liamkeily> http://pastebin.com/PtGGvNZL
00:41 < liamkeily> any suggestions?
00:41 < niftylettuce> #9 on Gittip! http://gittip.com WOO
00:42 < ozette> alasi, great
00:42 < liamkeily> trying to make that move function a prototype
00:42 < alasi> ozette: ...
00:43 < alasi> ozette: https://gist.github.com/anonymous/2dfb808491f3945f4f11
00:45 < ozette> alasi, on line 11, set "http://" explicitly in front of the "192.."
00:45 < ningu> alasi: I already sent you the fixed version, not going to do it again
00:45 < ozette> otherwise you end up with the 404 you just got
00:46 < alasi> ningu: Yeah
00:46 < alasi> Resend?
00:46 < ozette> and, the port you redirect to is not 1337
00:46 < ningu> https://gist.github.com/kamholz/df6a180f939d97596fab
00:47 < alasi> ozette: Nerp
00:47 < alasi> Still 404\
00:47 < alasi> I thinks
00:47 < ericelliott> liamkeily: I think you mean a prototype function, not a function prototype. And you need User.prototype.move =
00:48 < ericelliott> liamkeily: And you should move that function out of your constructor, because it's getting recreated every time Npc() gets called.
00:49 < azbyin> ningu, wait heroku allows only xhr-polling ?
00:49 < ningu> azbyin: no idea, that was from his code
00:49 < ningu> alasi: I just updated the gist to fix a small error
00:49 < ningu> it should work now
00:49 < ericelliott> liamkeily: But it won't work as a prototype function, because it relies on private instance variables, which you can't store on the prototype...
00:49 < alasi> ok
00:49 < ningu> alasi: next time follow the examples in the docs, not random stack overflow posts
00:50 < alasi> ningu: I had followed the example, dude. But it only worked locally -.-
00:50 < ericelliott> liamkeily: Ignore that last comment.. I think I misread your intentions. =)
00:50 < azbyin> alasi, the socket.io page clearly lists an exmaples of using express 2/3 with socket.io
00:50 < ningu> alasi: the way I wrote it is straight from the socket.io docs
00:51 < alasi> ningu: Express 3 or 2?
00:51 < ningu> express 3
00:52 < azbyin> ericelliott, your link for 3 types of prototypal oo doesn;t load for me
00:52 < alasi> ningu: Where's socket.io declared?
00:52 < ningu> alasi: seriously, you can do command-f
00:53 < alasi> oh sorry
00:53 < ericelliott> azbyin: Try http://bit.ly/WZbt1Z
00:54 < azbyin> ericelliott, neither works
00:54 < azbyin> lemme try your main page
00:54 < azbyin> wait what? it loads in chrome while ff simply is refusing to load it!
00:55 < azbyin> and i am loading every other site without issues on the samr instance of ff
00:59 < alasi> ningu: THANKS FOR YOUR HELP, sorry if my question was facepalmy
00:59 < alasi> ozette: It's all figured out now, thanks for your help
01:02 < ozette> alasi, ha np
01:02 < ozette> ningu is your hero
01:03 < jesusabdullah> hah
01:03 < jesusabdullah> god damn it pandora stop advertising canned website services I do this shit for a living
01:10 < qq99> any recommendations for crypto libs to use in browser & node ?
01:10 < qq99> would prefer to use the same base
01:11 < ningu> qq99: not sure if crypto can be browserify'd but you might try.
01:11 < qq99> across both.. node-webkit is also an option I'm considering if I can just use node's require('crypto') (not sure if that depends on unix & openssl)
01:12 < mscdex> qq99: node-webkit is node, so you should be able to use require('crypto') everywhere
01:12 < ningu> qq99: stock node crypto with browserify. looks like it works.
01:12 < mscdex> ningu: afaik it's not a complete port though
01:13 < qq99> I'm seeing this one https://github.com/dominictarr/crypto-browserify
01:13 < mscdex> ningu: i think it's just a few hash functions with randomBytes()
01:14 < qq99> it feels like it'd be easiest to just use node-webkit and shaft web users
01:14 < qq99> but I'd rather not have to do that lol
01:14 < qq99> I'll look at this port
01:14 < mscdex> qq99: what is it you need from crypto anyway?
01:14 < qq99> I want to provide better security to https://github.com/qq99/echoplexus
01:15 < qq99> probably just aes-256 right now
01:15 < qq99> and pbkdf2
01:15 < ningu> mscdex: qq99 yes, it's a partial port, I was just noticing the same.
01:15 < mscdex> qq99: first hit on google: https://code.google.com/p/crypto-js/
01:16 < mscdex> different API, but you could probably easily write a wrapper to have the node api
01:16 < qq99> crypto-js looks like it might be the most robust / well tested
01:16 < ericelliott> azbyin: try https://vimeo.com/69255635
01:31 < liamkeily> finally got there in the end
01:31 < liamkeily> pretty much just needed to do Obj2.prototype = Obj1.prototype to inherit all the methods
01:33 < garthk> liamkeily: util.inherits didn't help much? http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor
01:51 < jasonkuhrt> does anyone have a guide or suggestions for a hardware serial format?
01:52 < ningu> what do you mean by serial format?
01:53 < jasonkuhrt> serial number
01:54 < jasonkuhrt> for instance xxx-xxx-xxx where 9 digits represent a counter for the hardware
01:54 < jasonkuhrt> so there is up 1 billion product ids
01:54 < jasonkuhrt> just wondering if a primer exists for best practices regarding designing a serial number
01:55 < jasonkuhrt> seems like a random number is dumb, might as well pack useful information in like production location, date, number etc
01:56 < qq99> jasonkuhrt, encrypt a JSON .toString() ?
01:57 < jasonkuhrt> qq99: yeah that might work well
01:57 < jasonkuhrt> qq99: suggestions for encryptor? I want something realtively nice for humans to read
01:58 < jasonkuhrt> i.e. a sha1 with 30 characters is not ideal
01:58 < qq99> hmm I'm afraid not, I'd imagine you'd mostly get a jumble of characters that won't have any particular format to it
01:58 < qq99> unless you wanted to encrypt each field 1 at a time and concatenate with hyphens, then at least they all look the same
01:59 < jasonkuhrt> qq99: that would be okay if the length wasn't toooo long
01:59 < jasonkuhrt> i.e. I would be okay with kljiou325409fd23423ui4kj
01:59 < qq99> well I imagine anyone who needs to read them off probably would need to only enter 6-8 chars then an autocomplete would pop up?
02:00 < qq99> if you're designing for a tech support kind of situation
02:00 < jasonkuhrt> qq99: hm, actually currently we want to generate hashids for users based on the hardware serial http://www.hashids.org/
02:01 < jasonkuhrt> qq99: and hashids only encrpy numbers, so 2356223409 is fine but kjse234o is not
02:01 < jasonkuhrt> qq99: that further complicates things
02:01 < jasonkuhrt> qq99: well, sort of
02:01 < qq99> so the main criteria is that it should be short?
02:01 < qq99> but not correspond to a real DB id?
02:03 < jasonkuhrt> the main hardware serial criteria is 1) it be only numbers (due to hasid requirement) 2) contain useful information like date produced, number production line, etc 3) be reasonably short
02:04 < jasonkuhrt> qq99: the hashid requirement is for creating an activation code for consumers to enter like: eGtrS8
02:04 < qq99> well it'll be at least as long as the concatenation of that plaintext
02:05 < qq99> you mean you want to use hashid on the hardware serial you produce?
02:05 < jasonkuhrt> qq99: yeah that's what we're thinking
02:05 < qq99> I feel like that'd be a huge number
02:06 < qq99> at least twice as long as the concatenated plain text then
02:06 < sinclair|net> https://github.com/sinclairzx81/appex/#attributes <-- anyone want to give feedback on this feature?
02:06 < qq99> and maybe a brittle scheme, I'd say replace hashid with your own scheme
02:07 < jasonkuhrt> qq99: what do you mean by huge number as compared to the plain text?
02:08 < qq99> I think in the most naive way, you could convert any char to a string of numbers by just using ascii char -> digit conversion, but that's typically 2 digits per used char
02:08 < qq99> so if you ended up with a string of numbers and ascii chars after encrypting, you'd probably double it and I don't know if that'd be particularly robust
02:08 < jasonkuhrt> 000000000-1373422023957
02:08 < jasonkuhrt> counter-timestamp
02:08 < jasonkuhrt> not so bad
02:10 < qq99> why not store all the metadata into the db, hash the integer primary key and give that to the user?
02:10 < durango> anyone here have exp with dust?
02:10 < jasonkuhrt> qq99: hm, sounds pretty reasonable
02:11 < qq99> I think that's what the lib is trying to accomplish from looking at it
02:11 < jasonkuhrt> qq99: yeah that's a typical usecase
02:11 < jasonkuhrt> you can make urls without revealing the true id, etc.
02:11 < durango> {#coupon.products_match|jp} <-- any reason why i cant do this in dust? :(
02:11 < qq99> I don't know that you could expect to get any useful data from the customer-supplied serial though
02:12 < qq99> without looking it up in your system
02:12 < jasonkuhrt> yeah
02:12 < jasonkuhrt> qq99: curious
02:12 < jasonkuhrt> qq99: when you look at say the serial for your laptop
02:12 < jasonkuhrt> qq99: you would think the numbers likely have significance? like a model id + factory id + ..
02:12 < jasonkuhrt> etc?
02:13 < qq99> I think that they have significance to someone, because of the hyphens or spaces
02:13 < jasonkuhrt> again a primer on this would be helper, to know prior art in very broad strokes
02:13 < qq99> but maybe that's just so it's easier for customers to read them off to support
02:13 < jasonkuhrt> qq99: yeah
02:13 < jasonkuhrt> maybe
02:13 < qq99> so they insert a pause
02:13 < qq99> lol
02:14 < astropirate> Hello friends
02:14 < astropirate> isjoyent still supporting node.js?
02:14 < jasonkuhrt> qq99: thanks for the feedback, helps
02:14 < qq99> jasonkuhrt, it might be nice if they revealed some non-confidential info to the customer, I know people use serials (e.g., looking at routers version number or hardware serial strings to find out how to mod / community tech support)
02:16 < jasonkuhrt> qq99: yeah, especailly in a context where a company has a fleet of products and product categories like apple
02:16 < LuckyBurger> Q: is there a synchronous mongo package somewhere?
02:16 < qq99> jasonkuhrt, if you make some scheme up definitely document it well lol
02:17  * LuckyBurger hides
02:17 < jasonkuhrt> qq99: i.e. maybe the first 2 digits tell you if its an mobile or laptop or desktop, etc.
02:17 < jasonkuhrt> qq99: heh, yeah
02:17 < ningu> LuckyBurger: no, and that would defeat the purpose of it
02:18 < sinclair|net> ningu: HAI!
02:18 < jasonkuhrt> qq99: oh the other option was using the macaddress
02:19 < jasonkuhrt> qq99: each hardware will have a unique identifying MAC so...
02:19 < LuckyBurger> i dont see how it would defeat the purpose tbh as it stand atm i have a slew of code embedded in async.series @_@
02:19 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:21 < EthanS> hi everyone, need some help. I want to implement a custom middleware after the bodyParser that reads from the request stream. But seems like bodyParser has already gobbled it up .... any advise will be much appreciated
02:22 < garthk> EthanS: well, yes. How else will it parse the body?
02:23 < garthk> You could try to hook in beforehand and pipe the stream yourself, also.
02:23 < garthk> I've had a lot of trouble with middleware ordering, howevr.
02:24 < EthanS> @garthk: bodyparser is supposed to go first... then my middleware immediately after hooking onto the req.on('data' ...) and req.on('end', ....) .... next() in end
02:24 < EthanS> @garthk: tried using connect-restreamer, but body stream still empty
02:24 < niggler> when an error is thrown, the offending line is shown.  it appears that the mechanism assumes that the tab character is equivalent to two spaces, which makes rendering with 8 characters very strange.  Is there a way to control that (or just to force the thing to print the entire line)?
02:25 < ChrisPartridge> EthanS: if bodyParser parses the body, it doesn't emit further data events, iirc
02:25 < ningu> niggler: wait, so it converts the tabs into 2 spaces instead of just printing the tab?
02:26 < niggler> ningu it appears to calculate the number of characters of the offending line under the assumption that a tab character takes 2 spaces, but then drops a verbatim tab
02:26 < niggler> so the net result is that the line overflows but is still truncated
02:27 < niggler> if it's going to pull some magic like that, it should just change the tab character to spaces
02:27 < EthanS> @chrispatridge: i tried ordering my middleware above the body parser .... then body parser got an empty body after that
02:29 < ChrisPartridge> EthanS: most likely because your custom middleware is now consuming the data
02:29 < ChrisPartridge> and once that has finished, it nexts() to the bodyParser, which gets no data
02:29 < EthanS> garthk, ChrisPartridge: is there a way to consume the data and still leave it for the body parser?
02:30 < ChrisPartridge> EthanS: What are you trying to actually achieve?
02:31 < EthanS> ChrisPartridge: Am reading the raw body of the request to be populated into req.rawBody which will be used by another custom  middleware down the stream to authenticate the request using HMAC-SHA256 comparison
02:31 < EthanS> ChrisPartridge: which also means that I don't want to interfere with bodyparser either as my routes will be using req.body
02:32 < ningu> niggler: hmm, strange
02:32 < ningu> niggler: I use spaces instead of tabs in my code so I wouldn't run into that 
02:32 < sinclair|net> niggler: !
02:33 < niggler> sinclair|net !
02:33 < sinclair|net> niggler: i've been busy with that app mate
02:33 < sinclair|net> wanna take a look?
02:33 < niggler> appex?
02:33 < sinclair|net> yeah
02:33 < niggler> yeah link me
02:33 < sinclair|net> https://npmjs.org/package/appex
02:33 < sinclair|net> https://npmjs.org/package/appex#attributes
02:34 < ningu> sinclair|net: I hope that typescript guy comes back
02:34 < ChrisPartridge> EthanS: Take a look at this https://github.com/senchalabs/connect/blob/master/lib/middleware/bodyParser.js
02:34 < sinclair|net> niggler: and https://npmjs.org/package/appex#wildcard_handlers
02:34 < sinclair|net> ningu: its ok, i already helped him out
02:34 < ningu> oh, cool
02:34 < ningu> I thought he just disappeared
02:35 < sinclair|net> ningu: i think he moved to #typescript
02:35 < EthanS> ChrisPartridge: do you recommend editing the bodyparser directly?
02:35 < niggler> sinclair|net how are numbers handled?
02:35 < ningu> sinclair|net: so are most typescript coders writing for the browser?
02:35 < EthanS> ChrisPartridge: would i lose npm update capabilities after?
02:35 < ningu> just wondering who guys to that channel
02:35 < sinclair|net> niggler: type lookup
02:35 < ningu> who goes*
02:35 < niggler> http://foo.bar:12345/test/2013/07/09
02:36 < niggler> 09 isn't a valid octal number
02:36 < sinclair|net> niggler: if you have n:number, i parse it as a number
02:36 < sinclair|net> niggler: if you have n:string, its interpreted as a string
02:36 < sinclair|net> string is the default
02:37 < sinclair|net> niggler: based on the annotation, i generate a numeric regex route instead of a wildcard, anything goes route
02:38 < sinclair|net> niggler: tho, im more proud of the cascading attributes
02:40 < jasonkuhrt> how can I turn a MAC address like 12-34-56-78-9A-BC into number-only format in javascript
02:40 < ChrisPartridge> EthanS: No, dont edit it directly, just pointing you to the code, to show exactly what it does - there might be some hints on what to do in the json/urlencoded/mutlipart parser modules
02:40 < jasonkuhrt> i.e. by turning it into hex or whatever
02:40 < ChrisPartridge> as bodyParser is just a wrapper around those modules
02:41 < EthanS> ChrisPartridge: looked through the code yesterday ..... many people recommended to pass in functions to bodyparser to handle content-types that bodyparser doesn't work ... but this approach beats the purpose of catching the raw body for all content types
02:41 < EthanS> so still searching around like a mad man ;_)
02:41 < airportyh> jasonkuhrt: parseInt() takes the base as the second argument
02:42 < ChrisPartridge> EthanS: ok, well blanket buffering of bodies is not a very good idea
02:43 < ChrisPartridge> EthanS: if you want to do it, just take the code from body parser, and modify it to set rawBody or something, when it buffers the data
02:43 < ChrisPartridge> and chuck them in a lib/middleware folder or something
02:43 < sinclair|net> niggler: i should be able to do things like this with those attributes
02:43 < sinclair|net> http://hastebin.com/sosivekami.erl
02:43 < ChrisPartridge> just be aware, if someone wants to kill your app, they could just send a bunch of requests with large bodies
02:43 < jasonkuhrt> airportyh: not sure I follow, how could I turn 12-34-56-78-9A-BC into a number and then back again?
02:44 < sinclair|net> niggler: thoughts?
02:45 < airportyh> jasonkuhrt: split it into base an array 16 numbers, then parseInt(num, 16) for each one. for example parseInt('9A', 16)
02:45 < EthanS> ChrisPartridge: hahahaha ..... good point .... ;_) thanks for the advise
02:46 < sinclair|net> niggler: i have basically decided to embrace JIT compilation
02:46 < sinclair|net> niggler: there is no reason to use JavaScript on node
02:46 < sinclair|net> just JIT and get all the benefits elsewhere
02:46 < ChrisPartridge> sinclair|net: http://cdn.meme.li/instances/300x300/10867252.jpg :p
02:47 < sinclair|net> ChrisPartridge: nice one
02:47 < sinclair|net> anyway, we have LESS parsers, and we have Template parsers, why not JavaScript parsers?
02:48 < sinclair|net> i mean, thats basically what js transcompilers are
02:48 < sinclair|net> and it only has to JIT once, then its basically running 
02:48 < sinclair|net> so why not just JIT everything!
02:48 < EthanS> ChrisPartridge: doesn't the bodyparser suffer that too?
02:49 < sinclair|net> niggler: ?
02:49 < sinclair|net> why you leave?
02:52 < jasonkuhrt> airportyh: so after this then what? '12-34-56-78-9A-BC'.split('-').map(function(n){return parseInt(n,16)})
02:52 < asdfasd_> does node.js sometimes not print repetitive messages?
02:52 < jasonkuhrt> airportyh: if I want to restore the result back into its original numbers
02:54 < niggler> hey sorry sinclair|net back back 
02:54 < niggler> id imagine you'd have performance problems
02:54 < sinclair|net> niggler: at startup?
02:54 < airportyh> jasonkuhrt: http://stackoverflow.com/a/57805/5304
02:54 < niggler> in general
02:54 < sinclair|net> niggler: its the same as template engines do now
02:55 < sinclair|net> the parse once, then cacne
02:55 < sinclair|net> *cache
02:55 < jasonkuhrt> airportyh: ah okay, thanks
02:55 < sinclair|net> niggler: i compile once and my cache is the vm
02:55 < sinclair|net> niggler: surely its the same deal
02:55 < sinclair|net> niggler: i can't imagine why i would run into performance problems
02:56 < sinclair|net> niggler: like a runtime takes time to startup
02:56 < sinclair|net> .net people would be used it that, so not a problem :)
02:57 < sinclair|net> niggler: as a benefit tho, i do compile in the background in a child process, so if appex were bound to express middleware, it can in theory defer the request out 
02:58 < sinclair|net> so express is still process stuff while appex compiles and reroutes
02:58 < sinclair|net> but you wouldnt really be doing that on production anyway
02:58  * sinclair|net talks to himself
03:00 < niggler> how long does it take to handle a request compared to equivalent idiomatic JS
03:01 < sinclair|net> 0ms
03:01 < sinclair|net> or if i am compiling on the fly around 16ms
03:02 < sinclair|net> niggler: i have that 'devmode' option, which switching on and off that dynamic compile
03:02 < sinclair|net> *switches
03:02 < asdfasd_> does node.js sometimes not print repetitive messages?
03:03 < sinclair|net> niggler: on first compile, it takes a few seconds to boot
03:03 < sinclair|net> but after that, i cache compilation units in the ts 0.9 compiler
03:04 < sinclair|net> niggler: its the same tech visual studio uses to boost performance when editing huge ass projects (100,000 + lines)
03:04 < sinclair|net> im using it to boost compile on the fly / JIT stuff in node
03:05 < sinclair|net> and its working better than i had hoped for
03:05 < sinclair|net> niggler: try it and see
03:06 < atSetKey_> Can I ask you to pass a test on the performance of the algorithm.  http://jsperf.com/plus-equals-vs-plus-plus/2
03:07 < jeffscottward> sup yall
03:08 < jeffscottward> anyone yeoman kids here?
03:08 < jeffscottward> any*
03:08 < mbalho> do you mean in the sense of a person being born into aristoracy or users of the google framework?
03:08 < qq99> lol
03:08 < jeffscottward> haha the latter :)
03:08 < mbalho> ah then not me
03:09 < sinclair|net> niggler: busy?
03:09 < jeffscottward> I'm getting permission errors galore so just hoping someone knew of an easy cleanup
03:09 < niggler> yeah trying to chase down a strange unicode issue sinclair|net 
03:09 < sinclair|net> ah right
03:10 < sinclair|net> niggler: i hope its not in that huge unicode document you showed me before
03:10 < sinclair|net> cus that would be rough
03:11 < ningu> most unicode issues are strange in some way
03:18 < JamesMGreene> Is there any way to sandbox the `global` object in Node.js other than using `vm.runInNewContext`?
03:18 < jdelgado> JamesMGreene: You can make a virtualbox
03:18 < mbalho> child process with message passing
03:18 < JamesMGreene> jdelgado: Way overkill
03:19 < JamesMGreene> mbalho: Yeah, that sounds more like it
03:19 < nonrectangular> question - i'm getting a CERT_HAS_EXPIRED error from https.request.  Any way to allow that temporarily, similar to curl -k ?
03:20 < jdelgado> nonrectangular: rejectUnauthorized: false, requestCert: true, agent: false
03:22 < nonrectangular> @jdelgado, thanks -
03:22 < jdelgado> You are very welcome
03:22 < asdfasd_> empty array has length 1?
03:22 < asdfasd_> I used delete tile[0];
03:23 < ChrisPartridge> dont use delete on arrays
03:23 < jdelgado> asdfasd_: I don't think you can do delete's on arrays, correct me if I'm wrong anyone, try using splice.
03:23 < ChrisPartridge> splice/shift/pop
03:23 < asdfasd_> tile.splice(0)?
03:23 < jdelgado> Ah good, i'm not going crazy.
03:23 < asdfasd_> oh, there's pop
03:23 < asdfasd_> forgot about it
03:23 < gkatsev> jdelgado: you can do delete on arrays but it'll leave a hole
03:23 < gkatsev> splice is usually want you want
03:24 < jdelgado> gkatsev: Right on
03:24 < ChrisPartridge> asdfasd_: or shift takes one from the front, pop from the end, splice for anywhere else - well, atleast what I do
03:24 < jdelgado> It turns it into an object, right?
03:24 < gkatsev> though, really, you probably don't ever want to use `delete`.
03:24 < gkatsev> jdelgado: nope, still an array
03:24 < jdelgado> oh intresting
03:24 < ChrisPartridge> jdelgado: just doesn't update the indexes
03:24 < jdelgado> ahh
03:24 < jdelgado> that makes sense
03:24 < gkatsev> >> var a = [1,2,3]; print(a); delete a[1]; print(a);
03:24 < purr> gkatsev: undefined; Console: [1, 2, 3], [1, undefined, 3]
03:24 < gkatsev> see the hole
03:25 < jdelgado> gotcha
03:25 < gkatsev> delete changes the underlying structure so JITs probably need to add a shadow class for your new object making things slow.
03:26 < jdelgado> How would you recommend getting rid of an object property not using delete?
03:26 < ChrisPartridge> you can use delete on objects, afaik
03:27 < ningu> delete is the only way to get rid of a property, afaik
03:27 -!- mode/#Node.js [+o mbalho] by ChanServ
03:27 -!- mbalho changed the topic of #Node.js to: node.js - important announcement: http://bit.ly/14H8Ncf - http://nodejs.org - http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
03:27 < jdelgado> That's what i was thinking
03:27 < jdelgado> gkatsev: Your thoughts ^
03:27 < ningu> now I'm hungry
03:27 <@mbalho> muahaha
03:28 < gkatsev> jdelgado: just set it to null
03:28 < ningu> mbalho: just kidding, I was already hungry
03:28 < ningu> you did remind me
03:28 < gkatsev> most times you just want to not have a value for the property rather than actually not have that property.
03:28 < ChrisPartridge> why did i click that link
03:28 < jdelgado> >> var a = { test: 1, test2: 2 }; a.test = null; print(a);
03:28 < purr> jdelgado: undefined; Console: {test: null, test2: 2}
03:29 < gkatsev> mbalho: hahaha
03:29 < jdelgado> gkatsev: But you can't remove all traces of it without delete, right?
03:29 < gkatsev> jdelgado: yeah, to actually remove the property altogether you must use delete.
03:29 < jdelgado> gotcha
03:30 < mscdex> >> delete delete;
03:30 < purr> mscdex: SyntaxError: Unexpected token ;
03:30 < gkatsev> jdelgado: but again, that changes the structure of the object and makes it become unoptimized in the JIT
03:30 < jdelgado> right
03:30 < jdelgado> :)
03:30 < ChrisPartridge> mscdex: black hole pending
03:32 < azbyin> mbalho, lol important announcement indeed
03:33 < jdelgado> azbyin: Heh, I actually clicked on it because of you. :P
03:33 <@mbalho> without food all users in this channel would perish
03:33 <@mbalho> i'm just lookin out
03:33 < jdelgado> It looks good, where is that from?
03:34 < gkatsev> http://foodporndaily.com/
03:34 <@mbalho> source unknown, looks to be for a commercial
03:34 < gkatsev> mbalho: make link to that instead.
03:34 < gkatsev> via bit.ly, of course
03:34 <@mbalho> not enough megapixels
03:34 < astropirate> hey guys 
03:34 < gkatsev> hm... that's true
03:34 < astropirate> dont mean to start a flamming session
03:34 <@mbalho> did you guys click to enlarge the burger?
03:35 <@mbalho> its freakin amazing
03:35 < astropirate> but has anyone compared node.js vs go?
03:35 <@mbalho> at full size
03:35 <@nexxy> BURGER ENLARGED
03:35 < ChrisPartridge> mbalho: i tried to grab it from my screen
03:35 < gkatsev> mbalho: didn't notice at first
03:35 < ChrisPartridge> repeatedly
03:35 <@nexxy> ENHANCE
03:35 < gkatsev> mbalho: it's huuuuuge
03:35 <@nexxy> ENHANCE
03:35 <@mbalho> astropirate: yea go is for really smart people
03:35 < ChrisPartridge> nexxy: lol
03:35 < astropirate> mbalho, o_O
03:35 <@mbalho> astropirate: the thing i like about node is that its approachable
03:35 < jdelgado> gkatsev: Are those free use images? Any idea?
03:35 < gkatsev> jdelgado: on foodporndaily? no clue.
03:36 <@nexxy> mbalho, wow
03:36 < jdelgado> darn
03:36 < jdelgado> would love to use some of those
03:36 <@mbalho> nexxy: yea i know right
03:36 < astropirate> mbalho, well, go isn't all that diffrent
03:36 < astropirate> i have been developing with node.js for a bit more than 2 years now
03:36 < mscdex> >> delete blackhole;
03:36 < purr> mscdex: (boolean) true
03:36 <@nexxy> mbalho, it's so big you can see the vasoline between the bun and the seeds
03:36 < astropirate> was wondering if nayone has compared it with Go
03:36 < mscdex> ChrisPartridge: ^
03:36 < astropirate> i would kill for better type security
03:37 < ningu> what about job security?
03:37 < astropirate> (Its a joke NSA! please dont arrest me)
03:37 < gkatsev> mscdex: lol, it lies.
03:37 < ChrisPartridge> mscdex: bet that peksy black hole didnt see that coming
03:37 < astropirate> ningu, was that for me?
03:37 < mscdex> job TLS
03:38 < ningu> astropirate: it was a joke
03:38 < ningu> but yes
03:38 < ningu> mscdex: the padlock icon is probably sufficient to make everyone confident
03:41 < TehShrike1> Finally downloading 0.10
03:43 < beardtree> How does node handle SIGKILL?
03:43 < ningu> I thought the point of SIGKILL was you didn't really get a chance to handle it
03:44 < beardtree> No, that's SIGTERM.
03:44 < astropirate> Ê˜â€¿Ê˜
03:44 < jdelgado> beardtree: If you catch it, you can run a function with it
03:45 < jdelgado> beardtree: http://nodejs.org/docs/v0.3.1/api/process.html#signal_Events
03:45 < ChrisPartridge> beat me
03:46 < azbyin> i don;t think you can catch sigkill (9)
03:47 < jdelgado> Yeah, ningu is actually correct, it's SIGTERM
03:47 < azbyin> beardtree, where did you see that sigkill can be handled?
03:47 < beardtree> Maybe I have them backwards.
03:47 < jdelgado> indeed
03:47 < azbyin> sigkill(9)  kill -9 pid  is to evaporate processes
03:47 < jdelgado> lol don't correct people if you don't even know :P
03:47 < jdelgado> poor ningu 
03:47 < azbyin> heh
03:48 < beardtree> His life has been ruined.
03:48 < beardtree> jdelgado: thank you. :)
03:49 < jdelgado> suure, good luck.
03:49 < jdelgado> beardtree: http://stackoverflow.com/questions/5541288/node-js-detect-when-parent-process-exits
03:49 < jdelgado> That might help too
04:09 < neeky> ChrisPartridge, still here, f*in that chicken :) (backbone+rest quickstart)
04:12 < durango> {<block productsMatch=coupon.products_match} how can I do this in dustjs?
04:24 < gaffo> I'm having trouble installing stuff with npm under ubuntu 12.04 as non-root. Newest node off of the ppa
04:25 < ChrisPartridge> gaffo: erros?
04:25 < ChrisPartridge> errors*
04:26 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:27 < gaffo> ChrisPartridge, http://pastie.org/8126877
04:29 <@isaacbw> supercow
04:29 <@isaacbw> should I revive a pure DOM rich text editor project
04:30 <@isaacbw> quick
04:30 <@isaacbw> give me advic
04:30 <@isaacbw> e
04:31 < azbyin> isaacbw, have a look at the orion editor and ace editor, then make your decision based on those evaluations
04:31 < gkatsev> rich text is lame. markdown ftw
04:32 < gkatsev> don't forget codemirror.
04:32 < ChrisPartridge> thats for "code" editing though
04:32 < azbyin> wait.. rich text? as in non-code editor?
04:32 < ChrisPartridge> isaacbw: I've got something similar, written for a client, create documents, printable, forms, etc
04:33 <@isaacbw> I don't think ace does font sizes, does it?
04:34 < gkatsev> it does font sizes
04:34 <@isaacbw> like, different font sizes
04:34 < gkatsev> see github's editors like on a gist
04:34 < gkatsev> in the same text area? probably not
04:34 < gkatsev> but rich text is lane anyway.
04:34 <@isaacbw> it's important though
04:34 < gkatsev> nah
04:35 <@isaacbw> not everyone is a nerdy birdy hacker
04:35 < ChrisPartridge> gaffo: and what command didyou run? trying to install as global?
04:35 < gkatsev> isaacbw: everyone should learn markdown.
04:35 < beardtree> Speaking of rich text editors: http://imgur.com/a/pVVWp#0
04:35 <@isaacbw> gkatsev: preach is on the streets, brother
04:35 <@isaacbw> get on a soapbox
04:35 <@isaacbw> "LEARN YE MARKDOWN"
04:36 <@isaacbw> "OR BE CAST INTO DARKLESS AS A HEATHEN"
04:36 < gaffo> npm install -g yo
04:36 < gaffo> ChrisPartridge, npm install -g yo
04:36 <@isaacbw> the only text based rich text format that compares to graphical editors is latex
04:36 <@isaacbw> markdown is like a baby latex that isn't good for a whole lot
04:37 < ChrisPartridge> gaffo: probably need to sudo it then, as its trying to chuck a symlink for a binary in /usr/local or w/e
04:37 <@isaacbw> ace is cool in how it works
04:37 < gaffo> ChrisPartridge, I get different errors if I do it with sudo
04:37 <@isaacbw> when you click, is puts a tiny transparent input box over the character
04:37 < gaffo> lemme try again vanilla (vm) and I'll give you the errors
04:37 <@isaacbw> <input type="text">
04:38 < ChrisPartridge> contentEditable ftw?
04:38  * ChrisPartridge takes cover
04:38 <@isaacbw> only if you hate doing cool things
04:38 <@isaacbw> and having any control
04:39 < ChrisPartridge> i go against the grain
04:39 <@isaacbw> that'll cause ingrown hairs
04:39 <@isaacbw> and irritation
04:40 <@isaacbw> yea, orion and ace are code editors
04:40 <@isaacbw> like vim
04:40 <@isaacbw> not like libre office
04:41 < durango> {<block productsMatch=coupon.products_match} how can I do this in dustjs?
04:41 <@isaacbw> what's dustjs
04:43 < durango> isaacbw: templating engine
04:43 < gkatsev> it's another mustache-like template engine
04:44 < durango> kind of shitty though
04:44 < azbyin> so isaacbw is the project somewhere i can take a look at?
04:44 < durango> might just switch to handlebars
04:44 < gkatsev> durango: which version of dust are you using?
04:44 < durango> gkatsev: latest npm?
04:45 < durango> literally just installed it
04:45 < gkatsev> ok, idk about the npm repo. But linkedin recently took over maintenance
04:45 < azbyin> the good thing about latex is that forces some semantics onto the document creator
04:45 < gkatsev> idk whether the npm repo has been updated
04:46 < gkatsev> durango: yeah, if you did it via `npm install dust`, it's not the right version
04:46 < gkatsev> durango: http://linkedin.github.io/dustjs/
04:46 < durango> gkatsev: i did npm-linkedin
04:46 < durango> or w.e
04:46 < gkatsev> ah, ok
04:46 < durango> yeah im using linkedin :)
04:46 < gkatsev> k
04:47 < durango> http://nunjucks.jlongster.com/ migth give this guy a go
04:47 < gkatsev> they should've just gotten dust itself.
04:47 < gkatsev> Â¯\_(ãƒ„)_/Â¯
04:47 < gkatsev> i've been using handlebars
04:50 < azbyin> so what are the various templating engines around? jade, moustache, handlebars, ejs, dust ?
04:50 < gkatsev> too many to name
04:50 < gaffo> ChrisPartridge, so I built a new vanilla box, got different errors, building up a pastie
04:50 < azbyin> any more? and which one is the most noobie friendly and easy/simple and powerful?
04:51 < gkatsev> I like handlebars
04:51 < gkatsev> since it's relatively logicless
04:52 < gaffo> ChrisPartridge, I did sudo npm install -g yo grunt-cli bower && sudo npm install -g generator-angular and then what you see here: http://pastie.org/8126906. There were no errors in the earlier steps just warnings about bad package configs.
04:56 < gaffo> so what should I be doing with npm as root and what should I be doing as my real user?
04:57 < azbyin> gkatsev, i'm thinking of using one of these templating engines on a phonegap/cordova application (running on a mobile device). do you think it is overkill?
04:57 < gkatsev> no
04:57 <@isaacbw> azbyin: no, currently it resides in cold storage
04:57 <@isaacbw> "reviving" it would entail starting over, more or less
04:59 <@isaacbw> gaffo: if you configure npm to install global packages somewhere in your home, you never need root
04:59 < gaffo> isaacbw, how do I do that?
04:59 < gkatsev> or you can chown /usr/local/ or w/e it is that is used.
04:59 < ChrisPartridge> gaffo: don't use yeoman, so not 100% sure, but I would assume you only need to -g the yeoman install, or yeah, do what isaacbw said
04:59 < gkatsev> ~/.node_modules or something
04:59 < gaffo> isaacbw, I'm used to ruby / bundler or maven / java, so I'd love to have a local repository in my home and then repos per my projects
05:00 <@isaacbw> https://npmjs.org/doc/config.html
05:01 <@mbalho> gaffo: thats how i do it
05:02 < gaffo> mbalho, I only see one message from ya?
05:03 <@mbalho> gaffo: it was in response to your previous statement, which describes how npm is set up for me
05:03 < gaffo> aah
05:03 < gaffo> I don't see the setting in the doc though
05:03 < gkatsev> mbalho: you have npm install to home folder or something?
05:03 < timoxley> gaffo also note that "repos per projects" = the your_project/node_modules folder
05:04 <@mbalho> i develop all projects from within a node_modules folder
05:04 <@isaacbw> gaffo: I think it's your prefix
05:04 <@isaacbw> that you want to set
05:04 < mikolalysenko> don't you need root to do npm link?
05:04 < mikolalysenko> (can't believe I've been doing it wrong this whole time...)
05:04 < gkatsev> do you?
05:05 < substack> npm config set root ~/.npm
05:05 <@mbalho> depends on if your os is religious about 'putting things into PATH requires root'
05:05 <@isaacbw> prefix = ${HOME}/.npm-packages
05:05 < gkatsev> substack: is that what you do?
05:05 < substack> and: npm config set binroot ~/.npm/.bin
05:06 < substack> then PATH=$HOME/.npm/.bin:$PATH
05:06 < mikolalysenko> that makes sense
05:06 < timoxley> doesn't all this get thrown out the window once you use a version manager e.g. nave?
05:06 < gkatsev> why would it?
05:06 < substack> timoxley: nope
05:07 < gkatsev> npm still looks for ~/.npmrc
05:07 < substack> I use nave all the time
05:07 < timoxley> because doesn't nave setup its own folders
05:07 < ChrisPartridge> yeah, but it already does it in your home, no?
05:07 < timoxley> yep
05:07 < timoxley> correct. /Users/timoxley/.nave/installed/0.8.22/
05:07 < timoxley> etc
05:11 < gaffo> okay, I'm getting issues on a temp directory now... http://pastie.org/8126938
05:12 < gaffo> I've set the root, binroot, and prefix
05:16 < ChrisPartridge> gaffo: `npm config ls -l` and look for a tmp config, probably need to set that too
05:35 < altusllc> does anyone know if there's a way to specify nested credentials for passport?
05:36 < altusllc> I've tried setting usernameField to "credentials.username" and "credentials['username']" but neither worked
05:41 < owen1> http://sealedabstract.com/rants/why-mobile-web-apps-are-slow/  good read about why mobile web is slow.
05:42 <@mbalho> mobile web is slow because larry page and mark zuckerberg are in the illuminati
05:44 < MitchW> for some better client-side reasons of why HTML/JS is slow on mobile web - should read the sencha (fastbook), linkedin, and wikimedia foundation's blog posts on their efforts on making mobile web apps - some pretty good insight there coverint HTML/CSS/JS and native implementation details across iOS/Android (and the version fragmentation of their webkit implementations and what to watch out for)
05:44 < owen1> js is 5 times slower than native + GC hurt memory a LOT.
05:45 < ChrisPartridge> mbalho: lol
05:59 < azbyin> owen1, thanks for linking that article..
06:03 < freze> when did putting commas  before variables become good practice for  multiline declarations, more than any other place I see this often in node.js apps
06:04 < substack> people write code lots of ways
06:04 < substack> it's pretty unimportant how you format your code so long as it's vaguely readable
06:04 < freze> substack: they do, but this convention is so strange and ugly that I had to comment on it
06:05 < substack> comma-first is quite popular in haskell too
06:05 < freze> madness
06:05 < freze> lol
06:06 < freze> In the math community   it is a cardinal sin to put commas like that
06:07 < ChrisPartridge> In the math community, Pi is something you don't eat, that should be a sin
06:08 < freze> loool
06:10 < Zak> ChrisPartridge: I heard you're sin because you're always on top when we make tangent
06:15 < ningu> whee. I'm starting to get the hang of dumping pdfs to xml and extracting the data from them character by character with cheerio. kind of fun, just wrote a 65 line script to scrape a file.
06:21 < ChrisPartridge> Zak: hah
06:21 < sf> ningu: What are you using to do parse pdfs?
06:21 < ChrisPartridge> ningu: ugh, i feel for you
06:22 < sf> -do
06:23 < ningu> sf: pdfminer
06:23 < ningu> pdf2txt.py -t xml -c UTF-8 -p `perl -e 'print join(",",64..82)'` -o wno-eng-Burung.xml wno-eng-Burung.pdf 
06:23 < ningu> pdfminer can't accept page ranges, alas :P
06:23 < sf> Cool, thanks.
06:23 < ningu> then you get things like
06:24 < ningu> <text font="JLNOCG+BookAntiqua,Bold" bbox="85.080,569.838,93.622,588.822" size="18.985">E</text>
06:24 < ningu> <text font="JLNOCG+BookAntiqua,Bold" bbox="93.600,570.684,102.746,585.594" size="14.911">N</text>
06:24 < ningu> where that's the beginning of the word ENGLISH
06:25 < ningu> another solution is pdf2json but its font reporting is much less good
06:27  * ningu can't imagine why no one else tries to do things like this ;)
06:28 < sf> We're currently using pdftotext to parse pdfs.
06:28 < ningu> that's the other choice
06:28 < ningu> among choices worth choosing among
06:28 < sf> :)
06:28 < MitchW> I can solve all your pdf problems.  find / type -f -name "*.pdf* -delete && echo "thank god. ;)" 
06:29 < ningu> MitchW: but then I haz no data :(
06:29 < Zak> ningu: you have no data, but you also have no problem
06:29 < MitchW> I never said I'd give you data ;)
06:29 < ningu> sf: have you ever dealt with pdftotext -layout on pages that have columns?
06:30 < ningu> sometimes pdftotext -raw unwraps the columns but when it doesn't...
06:31 < sf> Nope :)
06:31 < ningu> ah, was going to point you to the code I wrote to handle that
06:33 < ChrisPartridge> ningu: co-worker did the same thing, i heard screaming and yelling for about a week
06:33 < ChrisPartridge> pretty sure he wrote something around iText (i think)
06:34 < ningu> hmmmm
06:35 < ningu> I don't do enough Java to feel like dealing with that
06:36 < ChrisPartridge> I never looked at the specifics, but your solution appears to be returning the same sort of data anywho
06:36 < ningu> ChrisPartridge: oh, the xml dump stuff?
06:36 < ningu> I'm quite proud of this code, actually: https://github.com/longnow/panlex-tools/blob/master/tabularize/util/column_heuristic.pl
06:36 < ChrisPartridge> well, our output wasn't XML, but essentially the same data
06:36 < ningu> that's what I meant
06:36 < ChrisPartridge> and you have to stitch all the words back together
06:37 < ChrisPartridge> and we were dealing with pdfs that had been in circulation for ~4-5 years
06:37 < ningu> that perl code will take a text file with columns separated by whitespace and decide where the optimal boundaries are, given a fixed number of columns
06:37 < ChrisPartridge> editing god knows how many times
06:37 < ningu> wow
06:37 < ningu> mine are unedited
06:37 < ningu> but no non-pdf originals
06:38 < ChrisPartridge> yeah, you got it easy then, ours had a mish mash of embedded and non-embedded fonts, different fonts for edited words in setences etc
06:38 < ningu> things like pdftotext will output the text in its original columns but it will put the breaks in different places on each page
06:38 < ningu> it's a huge pain if you don't automatically detect the breaks
06:38 < ningu> but no one else, apparently, has this problem so I couldn't find the code already
06:54 <@mbalho> node modules for converting PDFs into other formats https://gist.github.com/maxogden/5842859
06:55 < ningu> mbalho: cool. looks like most are based on poppler ultimately
07:39 < [AD]Turbo> hi there
07:41 < tyoverby> I've created a node.js program that (other than require()) uses no node-js specific functions/libraries.  How do I compile/merge this into js ready for the web?
07:42 < SomeoneWeird> tyoverby, https://github.com/substack/node-browserify
07:42 < MitchW> tyoverby: read up on CommonJS and/or look at browserfy
07:43 < tyoverby> SomeoneWeird, MitchW: you are my favorite people, thank you and good night!
07:43 < MitchW> good luck :)
07:50 <@MI6> joyent/node: Ben Noordhuis v0.10 * 8a65df9 : test: fix up indentation, replace tabs with spaces - http://git.io/hyTvPQ
07:53 < johnnode> I'm looking for secure upload file with express. Is there any extensions like formidable to check the file, e.g: check file header for malware scan. Thanks for any help.
07:55 < ChrisPartridge> johnnode: you could probably do something with clamav, not sure if there is already something out there
07:58 < ChrisPartridge> johnnode: https://github.com/srijs/clam-js or you could checkout https://github.com/baudehlo/Haraka/blob/master/plugins/clamd.js
08:07 < johnnode> ChrisPartridge: Thank you very much
08:13 <@MI6> joyent/node: Fedor Indutny v0.10 * 6102692 : crypto: fix memory leak in LoadPKCS12 - http://git.io/uVCfig
08:23 < Gustav_> Hi, please help.  I'm trying to run Node on Windows 2000 Server SP4 - it says it is not a valid Win32 application... Can node run on win 2000?
08:25 < Gustav_> Hi, please help.  I'm trying to run Node on Windows 2000 Server SP4 - it says it is not a valid Win32 application... Can node run on win 2000?
08:28 < bnoordhuis> Gustav_: no, win2k is not supported
08:31 < Gustav_> Thanks bnoordhuis!  Pity though as I don't want to force my client to upgrade...(Node seems to run on XP!) 
08:31 < ChrisPartridge> not even MS support 2000 anymore
08:31  * rhalff_tc arghhh, can I just go back a few years when there was just prototype.js and scriptaculo.us to choose from :p (investigating frameworks)
08:32 < juho_> i think that's a few more than just a few
08:33 < rhalff_tc> I'm old...
08:34 < Gustav_> Thanks for responding.  Node.js still rocks!
08:34 < rhalff_tc> I love how it integrated with phpnuke though
08:35 < ChrisPartridge> phpnuke... oh dear
08:36 < nsno> phppuke amirite
08:36 < nsno> ashamed at myself for the easy joke
08:38 < Gustav_> I'm trying to think of a simile for Node.js and PHP.... its like a round pebble vs a $tacky s$pi$der $web
08:51 < foofoobar> I need some help regarding some callback-stuff.. I have the following code: https://gist.github.com/anonymous/4736bdd1a3434e90df4e
08:51 < foofoobar> The problem is at line 18-22. A file is downloaded via http
08:52 < foofoobar> After this I want to put all stuff I got to the database
08:52 < foofoobar> When I look at the current code I think the data is sent to the database before the file is downloaded
08:52 < foofoobar> But I cant add the "save to db" as a callback to the http.get because there are also some other values in the loop which are retrieved
08:53 < foofoobar> someone got a good solution for me?
08:53 < foobar321> hi. can any1 confirm this https://github.com/Motorola-Mobility/node-dbus/issues/15 ?
08:53 < foofoobar> I found this on StackOverflow, is this a good solution for my problem? http://stackoverflow.com/questions/6048504/synchronous-request-in-nodejs
08:55 < phrearch> hi
08:56 < phrearch> im trying to import a module in node_modules from a subdirectory lib, but var sys = require('sys'); cant find it
08:56 < phrearch> how should i import those?
08:57 < foobar321> phrearch: I don't see sys module on the list http://nodejs.org/api/ . Do you?
08:57 < phrearch> foobar321: ah, seemed like an api package but it isnt
08:58 < phrearch> also i had the scope wrong. thanks
09:01 < radiodario> you're in the wrong room, you should join #nodejs
09:01 < radiodario> :)
09:01 < radiodario> the bot in there is hilarious
09:04 < foofoobar> any hints for my async/sync problem?
09:06 <@MI6> joyent/libuv: Ben Noordhuis master * 3ee4d3f : unix, windows: return error codes directly - http://git.io/212exg
09:57 -!- mode/#Node.js [+o trevnorris_] by ChanServ
10:21 < foofoobar> var res = [{id:1},{id:2},{id:3}]; res.forEach(function(f) { f.id = f.id*2; }); 
10:21 < foofoobar> After this, res is [{id:2},{id:4},{id:6}]; How is this possible?
10:21 < foofoobar> Does forEach passes a reference instead of a value?
10:24 < sCoRpi> foofoobar: in javascripts objecst are passed by reference
10:24 < sCoRpi> only scalar values are passed by value
10:24 < sCoRpi> sorry
10:24 < foofoobar> sCoRpi, scalar values = int, string?
10:24 < sCoRpi> primitive values
10:25 < foofoobar> ok
10:25 < sCoRpi> boolean,number,string
10:33 < _mql> In case anybody's interested in versioning in javascript (much like git but for js datastructures).. .we've released a bunch of modules yesterday as part of the Substance stack:
10:34 < _mql> http://interior.substance.io/modules/chronicle.html
10:34 < _mql> http://interior.substance.io/modules/operator.html
10:34 < _mql> http://interior.substance.io/modules/document.html
10:34 < _mql> http://interior.substance.io/modules/data.html
10:35 < _mql> ping me if you have questions / feedback
10:36 < Kosch> hiho
10:36 < sinclair|net> _mql: use diff match patch at all?
10:37 < Kosch> does something was changed at npm servers this day? my grunt installs all fail with No compatible version found: underscore.string@'>=2.2.0rc <2.3.0-'. I'm using npm 1.2.32.
10:37 < thusoy> same here
10:37 < jesus666> hi
10:38 < _mql> sinclair|net: nopeâ€¦ it's based on operational transformations (incremental updates)â€¦ diff-match-patch could be used in combination though
10:38 < jesus666> does anyone know if it's possible to use nodejs from Cygwin (as in run the "node" command). Installed using the MSI installer on Win 7
10:39 < sinclair|net> _mql: i was looking for a good operational transformation library
10:39 < sinclair|net> _mql: i am amazed more people are not using it for collaborative editing
10:39 < _mql> sinclair|net: here's ours: http://interior.substance.io/modules/operator.html
10:40 < _mql> it supports strings, arrays and objects..
10:40 < thusoy> Kosch: I could temporarily fix the problem by upgrading to nom 1.3.2 earlier today, but now that fails too
10:40 < sinclair|net> _mql: nice
10:40 < sinclair|net> _mql: like the website too, nice and clean btw
10:40 < _mql> check the testsuite: https://github.com/substance/operator/tree/master/tests
10:40 < sinclair|net> _mql: i don't need to look at that, i trust you that its quality
10:41 < sinclair|net> _mql: the fact that you know of OT means you must know what quality is
10:41 < Kosch> thusoy: I tried 1.3.x last week, but this version brakes an other dep coming with mojito 0.5.1.... narf.
10:41 < _mql> lolâ€¦. never trust anyone ;)
10:41 < _mql> no i meant.. check the tests as they document the api
10:43 < _mql> sinclair|net: also.. the Operator and Chronicle modules weren't written by me.. this is the guy to trust https://github.com/oliver---- ;)
10:43 < sinclair|net> _mql: ill have a quick look, don't know when ill ever get the time to go into it in depth
10:43  * sinclair|net is stuck into compilers atm
10:43 < _mql> no worries.. 
10:43 < _mql> it's fine if you know it's there.. ;)
10:44 < sinclair|net> substack thought he had it bad when node up and changed under him, he should try keep a working codebase on a compiler that changes everyweek
10:44 < sinclair|net> _mql: all good
10:44 < foofoobar> someone here experience with Step (control-flow lib) ?
10:48 < foofoobar> I'm want to do three simple tasks: 1) parse all script tags 2) download files 3) beautify them
10:48 < foofoobar> I use the "Step" module for this
10:48 < foofoobar> Parsing and downloading works without any problems, but I have problems with the control flow for the beautifying:
10:48 < foofoobar> https://gist.github.com/anonymous/6ffa407ce5690500c853
10:49 < foofoobar> Line 43-55. E.g. I get printed "Beautify" 2 times. How can this be?
10:49 < Kosch> thusoy: seems npm 1.2.10 works. so roll back 
10:54 < Kosch> thusoy: seems they have fixed the problem. 1.2.32 works again
10:54 < thusoy> cool
10:54 < thusoy> probably hiccups
10:54 < Kosch> pff
11:03 -!- lushious was kicked from #Node.js by ChanServ [Banned: inappropriate quit message (lifted when confirmed changed)]
11:07 < spobat> hi
11:08 < spobat> I started node in the background (terminal), and I now want to kill it.
11:08 < spobat> Yet, it does not show up in "ps -a"
11:08 < spobat> any idea how I can get the pid so that I can kill it?
11:08 < Reventlov> ps -aux ?
11:08 < spobat> ps aux | grep node
11:08 < spobat> yeah
11:13 < ovidiu-f-> Hello world
11:14 < ovidiu-florin> How can I check if a string is a URL ?
11:17 < r04r> ovidiu-florin: have you tried asking it kindly? in all seriousness, that depends on your requirements. You could check if it starts with http://, use a regex looking for general url patterns, etf
11:17 < r04r> etc*
11:18 < ovidiu-florin> r04r: what I meant is there a fucntion that does this?
11:18 < ovidiu-florin> I did not mean to be rude
11:19 < r04r> ovidiu-florin: not in the official APIs as far as I know. There may be a library.
11:20 < r04r> It looks like https://github.com/chriso/node-validator may please you
11:21 < ovidiu-florin> thank you
11:21 < ovidiu-florin> I'm still learning, so I don't know exactly how to search for these things
11:23 < ovidiu-florin> what is npm?
11:23 < NanoDano> ovidiu-florin: It's the node.js package manager for installing libs
11:23 < ovidiu-florin> I've used it a few times, and I have a wild guess what it t
11:24 < ovidiu-florin> ok...
11:24 < ovidiu-florin> then I have another question... what is node.js? untill now I thought it's just a library or a framework. what is it?
11:27 < Reventlov> fun fact: sur http://mafreebox.freebox.fr il y a google analytics
11:28 < r04r> ovidiu-florin: Node.JS is an enviroment that runs Javascript code, and provides a bunch of pre-packaged libraries for accessing the network, the disk, etc
11:29 < ovidiu-florin> similar to how python works?
11:29 < ovidiu-florin> or php?
11:29 < r04r> I'm not sure what you mean by that. All of the languages lsited (python, php, node.js, ruby, perl, etc) are scripts (files with code) that get ran by an interpreter
11:30 < r04r> In php or python's case they designed their own language, and made an interpreter and provided standard libraries for it
11:30 < r04r> With node.js they took the existing language Javascript, the existing interpreter from Google's V8 engine, and put a lot of work into making it work with IO (network, disk, etc) to make it... useful outside the browser
11:31 < ovidiu-florin> aham...
11:31 < ovidiu-florin> so that's what V8 was (saw it somewhere)
11:31 < r04r> So Node.JS is basically https://code.google.com/p/v8/ + a bunch of libraries
11:35 < jetienne> 'basically' :)
11:35 < ish_> Can anyone please help how to use the restler library ?
11:37 < ovidiu-florin> r04r: thank you
11:40 < ish_> How to take a file or a URL from the command line?
11:40 < ish_> using restler library
11:40 < ovidiu-florin> ish_: coursera?
11:40 < ish_> yes
11:40 < ovidiu-florin> same here
11:40 < ish_> I am stuck
11:40 < ovidiu-florin> it's easy
11:41 < ovidiu-florin> look at the example from hw2
11:41 < ish_> market-research.js
11:41 < ovidiu-florin> yes
11:41 < ish_> it uses the get function
11:41 < ovidiu-florin> put the string there
11:41 < ish_> my URL of the hroku app ?
11:41 < ovidiu-florin> yes
11:42 < ish_> and what will I enter as the arguments for on funtion ?
11:42 < ish_> on('complete', ?)
11:42 < ovidiu-florin> instead of ? you put the function you want to execute
11:43 < ovidiu-florin> you can find that in the restler readme
11:43 < ish_> okay
11:43 < ovidiu-florin> https://github.com/danwrong/restler
11:43 < ish_> thanks
11:43 < ovidiu-florin> ;)
11:43 < ish_> so do I need to define another function or call any pther which is already defined in grader.j ?
11:44 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:45 < ovidiu-florin> I would recommend you make your own
11:45 < ish_> ovidiu-florin: okay let me try
11:45 < ish_> by the way do you know any good tutorials for learning node .js ?
11:45 < ovidiu-florin> nope
11:45 < ish_> I hae gone thorugh the nodebeginner.oeg book
11:46 < ish_> but I feel it is insufficient
11:46 < ovidiu-florin> I'm learning as I go
11:46 < ish_> So are you referring to the Documentation ?
11:46 < ish_> at nodejs.org ?
11:47 < ovidiu-florin> usualy yes
11:47 < ish_> okay 
11:47 < ish_> I will do more reading now
11:47 < ish_> thanks for your help !
11:48 < ish_> are you availabel here everyday ?
11:48 < ovidiu-florin> not really
11:48 < ovidiu-florin> but I could
11:48 < ish_> okay
11:49 < ish_> nice talking to you 
11:49 < ish_> good bye
12:22 < finishingmove> what's this about?  Cannot start PhantomJS
12:22 < finishingmove>         Error: spawn EACCES
12:23 < hallas> port?
12:25 < finishingmove> i'm using port 8080
12:25 < finishingmove> for that
12:25 < finishingmove> shouldn't be the cause of the problem
12:25 < hallas> maybe some binary is missing
12:26 < ovidiu-florin> was my previous message received? I think I might be having connectivity probelms.
12:27 < Fionnghall> Today I saw post on habrahabr, where man say that on channel about 200 persons. But.. I see about 1000 xD
12:29 < finishingmove> hallas: nodejs, phantomjs and karma-runner all work, but i can't get karma to run phantomjs
12:29 < finishingmove> probably some issue with permissions, but i don't know what...
13:04 < theGleep> Is there an extension or library that would allow me to use Node to interact with Windows like AutoHotKey does?? 
13:16 < jameshowe> My domain-bound callback function (created in JS) isn't catching errors when called from my uv_work_queue-using module
13:17 < jameshowe> help>
13:20 < pl2> sorry, was disconnected
13:25 < jameshowe> I'm now trying to use MakeCallback, but that segfaults
13:32 < jameshowe> and now it's stopped segfaulting...
13:42 < jameshowe> ok, it segfaults unless I have this before the MakeCallback call
13:42 < jameshowe> Local<Value> domain_v = global->Get(NODE_PSYMBOL("domain"));
13:43 < jameshowe> don't have to do the assignment, just go the Get call
13:45 < jameshowe> tjfontaine trevnorris ?
13:47 < kenperkins> dominictarr the readme for pause-stream is a bit ambiguous
13:47 < kenperkins> it says "just use through"?
14:00 < eugenewa_> kenperkins: require('through')
14:06 < khushildep> Hey all
14:06 < wwwq> assuming i have an endless running node script1 and from time to time i would like to call script1.status()-function by using an other script2 ... is this a message-queue-case-example ?
14:07 < khushildep> I'm encountering this https://github.com/bnoordhuis/node-iconv/issues/69 but what I want to understand is why node would be trying to load a debug release?
14:16 -!- mode/#Node.js [+o trevnorris] by ChanServ
14:19 < EvilDin> hi, how can i call with nodejs eval(function_code) and then run eval(ed) function via string name of function, global[function_name](args);, this does not work, what am i doing wrong ?
14:19 < radiodario> i've tried to copy an error object in the same way as done in the connect errorHandler, but for(var prop in err) { console.log(prop) } doesn't really print out anything - what gives?
14:20 < sinclair|net> radiodario: the object is empty
14:37 < kenperkins> eugenewa_: I meant why advocating through over pause-stream :D
14:38 < kenperkins> I know how to use a require statement tyvm :D
14:43 < jameshowe> oh, no it does still segfault, just not the way i was first using it
14:45 < spion> kenperkins, because var stream = require('through')() <=> var stream = require('pause-stream')()
14:45 < kenperkins> fewer characters? :D
14:45 < spion> kenperkins, https://github.com/dominictarr/pause-stream/blob/master/index.js :)
14:46 < kenperkins> wat
14:46 < kenperkins> LOL
14:47 < spion> a through stream that doesn't transform is a pause-stream
14:48 < mikolalysenko> so my little brother is starting to get into javascript programming and I was wondering if there are any good tutorials for node.js out there to help him?
14:48 < brimstone> nodetuts maybe?
14:48 < kenperkins> spion: thanks for pointing that out
14:48 < kenperkins> learn something new every day
14:48 < oklada> jumpstart nodejs - its a book but any college library around you should have it
14:49 < oklada> also codeschool's nodejs course is free right now i think
14:49 < mikolalysenko> thanks, I'll take a look
14:49 < oklada> question: how is it possible to set module.exports to two different things and have them both visible outside of the module? are they cached somewhere? 
14:49 < mikolalysenko> he is pretty green though, he's only been programming a few months
14:51 < oklada> mikolalysenko -> http://en.wikiversity.org/wiki/Basic_JavaScript
14:51 < spion> oklada, will this work? var combined = _.extend({}, firstThing, secondThing); module.exports = combined;
14:51 < mikolalysenko> yeah, he's done the basic codeacademy stuff and seems to have the basic js stuff down pretty well
14:52 < spion> assumes var _ = require('underscore')
14:52 < mikolalysenko> he also isn't stupid, just hasn't done much programming before
14:52 < oklada> i would think so, because you are exposing all of combined, so whenever that gets called it will find that var body
14:53 < oklada> mikolalysenko -> web dev is pretty different from just normal coding
14:53 < oklada> mikolalysenko -> actually! i found reading the ruby on rails tutorial by michael hartl to be really enlightening
14:53 < oklada> i did that when i was new, and even though i don't really care for ruby now, it really helped illuminate what web dev is, and how to go about starting something
14:54 < oklada> i assume that's what he's interested in, because this is the thread for a web development platform
14:57 < jameshowe> https://gist.github.com/OrangeDog/6e37909d3683fa999707
15:00 < Industrial> Can browserify handle CSS/HTML files?
15:01 < Industrial> if you just fs.readFile() it and stick it in a 'function(){return "'+data+'";}'
15:10 < Industrial> ah, brfs
15:15 < jameshowe> piscisaureus_ ?
15:16 < Teejay_> hi all
15:18 < FunnyLookinHat> Alright - so I can't seem to get Sequelize to return a findAll() with a specified order... I'm trying MyModel.findAll( { order: 'id ASC' }) - and it seems to ( at random ) not actually adhere to it, making me think it's not working at all
15:18 < Teejay_> i am having an issue getting the body of an http request, anyone help.
15:19 < daslicht> is there a way to disable module caching?
15:19 < daslicht> i just like to create multiple independent instances of a module ?
15:23 <@piscisaureus_> jameshowe: global and callbackFn should be stored in a Persistent
15:23 <@piscisaureus_> otherwhise v8 gc might clean them up while work on the thread pool is ongoing
15:23 < jameshowe> they are
15:24 < jameshowe> see https://gist.github.com/OrangeDog/6e37909d3683fa999707
15:27 < bingomanatee> Hi there's
15:27 < bingomanatee> I am. Getting a strange canvas error 
15:29 < bingomanatee> TypeWrror Canvas expected at getContext(2d)
15:30 < pirho> bingomanatee: code me
15:30 < bingomanatee> I am util inspecting the this, and it looks like a canvas to me...
15:30 < daslicht> anyone?
15:31 < Teejay_> hi
15:32 < Teejay_> i am trying to get request.body of an http request but it is giving me 'undefined'
15:33 < eperez_> I think it should be req.body
15:33 < bingomanatee> Var canvas = new Canvas(360,180); var ctx = canvas.getContext('2d')
15:35 < thomblake1> daslicht: Technically yes but don't do it.  See the top answer: http://stackoverflow.com/questions/9210542/node-js-require-cache-possible-to-invalidate
15:36 < daslicht> looks like i am doing something wrong
15:36 < thomblake1> daslicht: what are you trying to accomplish?
15:36 < daslicht> i have crreated a form helper module which generates css and cleint side js
15:36 < daslicht> one moment
15:37 < daslicht> something like this:
15:37 < daslicht> https://github.com/daslicht/swig/blob/master/helper/KissForm.js
15:38 < daslicht> and in my main app i try something like this:
15:38 < daslicht> https://github.com/daslicht/swig/blob/master/app.js#L87
15:38 < daslicht> its just to try out things so dont get offended that I use globals
15:38 < daslicht> :)
15:39 < thomblake1> You can probably do something like, just leave off the invocation at the end of KissForm.js
15:39 < daslicht> i also tried to reset the values in the module with a reset function , but it always preserves it state
15:39 < thomblake1> Then call it however many times you need
15:40 < mu> So I'm having a problem trying to implement a non-blocking function...
15:40 < daslicht> but its vars will always return the same values
15:40 < thomblake1> Right, so rewrite that part. Export a constructor maybe.
15:40 < daslicht> eg the form body 
15:40 < daslicht> it will not reset 
15:41 < daslicht> it just adds
15:41 < daslicht> already did that 
15:41 < daslicht> but it still keeps its state 
15:41 < thomblake1> Yes, then I agree you're doing it wrong.
15:41 < daslicht> looks liek i have to craete a smaller example 
15:41 < daslicht> heh
15:41 < daslicht> i be back soon 
15:42 < mu> I have a very basic server set up to return some server statistics to a given page... it routes the request to a function getStatistics which tries to construct an object to send to the client, as shown: https://gist.github.com/stackptr/45ebc2a9badbccd433be -- The problem I'm having is that for functions that use a non-blocking call (for example, exec), I get undef since they are still executing
15:42 < daslicht> i try to narrow it down what I am making false
15:42 < mu> So I'm pretty sure the functions that use a non-blocking call need a callback, but I don't really know what that _looks_ like
15:43 < mu> Because it seems like in order for the object that I want to send to be construct correctly, I need to ensure several non-blocking calls finish
15:44 < jameshowe> mu: var waiting = 5;
15:45 < mu> jameshowe: ?
15:45 < jameshowe> doThing(function() { if(!--waiting) doTheLastThing() })
15:45 < jameshowe> etc.
15:47 < mu> So I have a variable that counts down the number of callbacks I need to receive, start each function that has the callback, when those functions finish and execute their respective callbacks, I decrement that counter... and meanwhile, I'm just spinning until the counter is 0?
15:47 < jameshowe> no, you're not spinning
15:47 < mu> But I mean in the case of what I'm trying to do here
15:47 < mu> I can't send this data until all the callbacks are completed
15:47 < jameshowe> yes, so doTheLastThing() is send the data
15:47 < mu> So I start the functions, and then after I'd do while(counter != 0 ) {}
15:48 < jameshowe> no
15:48 < mu> and then after the while, send the data
15:48 < mu> ok
15:48 < mu> I'm still not sure then
15:48 < jameshowe> in every callback you have if(!--waiting) doTheLastThing()
15:48 < mu> oh I see
15:49 < mu> This is a standard way of doing things?
15:49 < jameshowe> pretty much
15:49 < jameshowe> there's a module called "async" that does it for you as well
15:50 < mu> I see
15:51 < mu> Is this not a common problem for event-based programming (or whatever node considers itself as)?
15:51 < rvgate> For some reason i'm unable to install topojson using npm... giving me errors about directories and files that cannot be found... why? http://pastebin.com/SD9Tz7QA
15:51 < jameshowe> yes
15:51 < jameshowe> and this is a common solution
15:52 < rvgate> to add up to that, its actually failing at jsdom...
15:52 < tjfontai1e> jameshowe: ?
15:52 < mu> jameshowe: you mean the async module or the waiting variable
15:52 < mu> It seems similar in nature to a mutex
15:52 < d2dchat> Has anyone had issues with
15:53 < jameshowe> tjfontai1e: https://gist.github.com/OrangeDog/6e37909d3683fa999707
15:53 < jameshowe> mu: it would be a semaphore / synchronous barrier
15:53 < d2dchat> when using the exec function, the env variables go missing?
15:53 < jameshowe> mu: if there was any concept of concurrency
15:53 < jameshowe> mu: but node and browser JS is single-threaded
15:54 < daslicht> thomblake1: ok if i do something like this its working:
15:54 < d2dchat> I have an exec nested inside of an exec and for some reason the 2nd exec call can't find the command I'm trying to call
15:54 < daslicht> https://gist.github.com/daslicht/04af9cec3d7ca0076b18
15:54 < mu> It just seems to me kind of, I don't know, hackish, but I can't place why
15:54 < jameshowe> tjfontai1e: unless you were refering to something else
15:54 < daslicht> looks liek i have used the prototype setter / getter not correctly
15:54 < mu> but alright thanks for the help
15:54 < jameshowe> mu: use the async module then, it'll look nicer
15:55 < d2dchat> { [Error: Command failed: /bin/sh: 1: couchin: not found
15:55 < d2dchat> ] killed: false, code: 127, signal: null }
15:55 < mu> Alright
16:01 < ninegrid> Why is there a _extend function in util but it is not documented?
16:26 < daslicht> thomblake1: I solved it :) cheezy easy without any prototypes :)
16:27 < bspar_> Has anyone gotten zeromq and google protocol buffers to work together in node? Everything works separately, just not together. Thanks.
16:29 < MI61> joyent/node: isaacs master * 831de7c : http: Use OOP for OutgoingMessage._finish (+4 more commits) - http://git.io/KoJMkQ
16:38 -!- ServerMode/#Node.js [+o ChanServ] by hobana.freenode.net
16:55 < pl2> Does anyone know of a good alternative to swig?.. not jade. I'm having massive issues with swig. Relative paths don't work, "extend" is not injecting the pages, etc, etc..
16:56 < chapel> pl2: hmm, I haven't used swig, but haven't heard of that issue
16:56 < tjfontaine> someone has a template engine called swig that is not about bindings?
16:57 < daslicht> pl2: you have to define a basepath for swig 
16:57 < daslicht> that you wont have issue with path 
16:58 < pl2> daslicht: in swig.init() i added: root: __dirname + '/views'
16:58 < daslicht> blocks and includes work like acharm here 
16:58 < pl2> Is it some place else?
16:59 < daslicht> hm i use it wiuth expess
16:59 < daslicht> express
16:59 < pl2> Me too
16:59 < pl2> work like "a charm"? or is there a library called acharm? :P
16:59 < daslicht>       swig.init({
16:59 < daslicht>                 root: __dirname,
16:59 < daslicht> yeah 
17:00 < pl2> that's how I have it except with /views appended. hmmm 
17:00 < daslicht> I have just set the project root as views root dir so that I am more free :)
17:00 < daslicht> and in a route something like: res.render(__dirname +'/view/home.html',
17:02 < daslicht> another language might be Blade
17:03 < daslicht> but its Syntax is like Jade
17:04 < pl2> Maybe I'm old and used to traditional template engines but jade is a nightmare to me.
17:07 < dhaglex> I'm aiming to use Node.js to run javascript functions on behalf of a separately developed web app (Angular). Not quite sure what to look for in terms of guides / setup?
17:12 < daslicht> jade is quite easy either
17:12 < daslicht> thats a good help : http://html2jade.aaron-powell.com/
17:12 < daslicht> :)
17:13 < daslicht> but at the moment i prefer : http://paularmstrong.github.io/swig/ :D
17:15 < foofoobar> Can someone open this in chrome and tell me if it crashes http://jsfiddle.net/zSLYS/ ?
17:15 < Beast> mh, whenever I try "npm search" it tries to download https.//registry.npmjs.org/-/all which takes a while, then it gets a http 200 but crashes because of a "RangeError: Invalid array length"
17:15 < foofoobar> Because firefox does not crash
17:15 < werle> yo juliangruber what are you using constants-browserify for?
17:19 < bombsite> hey
17:20 < bombsite> can anybody recommend me any good tuts for nodejs? the ones i get on the first page of google are a bit lacking
17:21 < pl2> daslicht, I think my problem with jade is that it makes the page look like noise. The file ends up like a mess of letters all scattered about the page and then I feel trapped :O
17:21 < daslicht> depends on the colors :) and syntax highlight :)
17:21 < daslicht> but yeh i alos prefer swig 
17:21 < ozten> I have an existing module and we noticed some tooling errors around version format, so I tried to go from 0.0.8beta to 0.0.8
17:21 < jasonkuhrt> what is the scope of value here? if (value = someFunction())
17:22 < ozten> I'm getting this exception for npm publish https://github.com/mozilla/i18n-abide/issues/40#issuecomment-20753838
17:22 < Beast> http://paste.kde.org/793136/
17:22 < ozten> I think the npm server or client is barfing on the previous version number?
17:23 < ozten> Should I file at http://github.com/isaacs/npm/issues ?
17:25 < ecto> hello
17:26 < pl2> jasonkuhrt, if it's not declared then I would imagine it's global
17:27 < jasonkuhrt> pl2: yep, just seems so bad that I couldn't understand why people would do that
17:27 < pl2> jasonkuhrt, maybe former php programmers ;)
17:27 < jasonkuhrt> : )
17:28 < jasonkuhrt> question re api
17:28 < jasonkuhrt> I have a method that removes something from an array
17:29 < jasonkuhrt> in order to succeed the array must have said 'something'
17:29 < jasonkuhrt> should this if condition check occur in the method itself, or in any callers of the method
17:29 < serapath> hi, i have a general expressjs question. Some modules, like passportjs populate the request object with methods like isAuthenticated(), login(), logout() and the like. In order to have access to certain services inside of handlers
17:29 < jasonkuhrt> in the latter, if a caller forgets to check then the program throws an error
17:29 < serapath> is it kind of best practice to do it like that?
17:33 < paulkon> what the heck is going on with freenode :/
17:33 < tjfontaine> ddos
17:33 < paulkon> who's doing it?
17:34 < tjfontaine> paulkon: does it matter?
17:34 < paulkon> nope
17:34 < tjfontaine> k
17:36 < niggler> free node has been going crazy recently paulkon 
17:37 < niggler> gozala was it really necessary to create the package `undefined`?
17:37 < ozten> Anybody got any npm version tips?
17:38 < oklada> if module.exports is the same thing as the export object, why have both? this seems strange
17:39 < paulkon> oklada: they are not the same
17:39 < niggler> oklada module.exports = function() { â€¦ } is not the same as exports = function() { â€¦ }
17:39 < oklada> really? how are they used differently?
17:39 < serapath> http://semver.org/
17:39 < insel> is dnode the best solution to build an interact-interface with multiple node-servers?
17:39 < serapath> oklada, afaik, 'exports' is for backwards compatibility
17:40 < serapath> module.exports is the one you need. 
17:40 < paulkon> oklada: it's mainly convention
17:40 < oklada> ohhhh - so it's just a reference?
17:40 < serapath> a reference to module.exports
17:40 < paulkon> exports[key] vs module.exports
17:41 < oklada> haha, ok thanks. i don't know why that was confusing me so much. i appreciate it guys
17:41 < serapath> is it best practices to let my middleware populate the request object with custom methods, so my handlers can use them?
17:41 < daslicht> arg , now the swig guy left 
17:41 < daslicht> if he comes back : https://github.com/daslicht/express-swig-example
17:41 < daslicht> I am off 
17:41 < serapath> i have a feeling thats what at least some modules do when using expressjs
17:41 < paulkon> serapath: no
17:41 < gozala> niggler: nope, but I felt like trolling I guess :)
17:42 < paulkon> serapath: actually, it depends
17:42 < serapath> paulkon: passport.js does this (req.login, req.logout, req.isAuthenticated, ...)
17:42 < paulkon> if you know what methods the middleware is populating
17:42 < paulkon> then it's ok
17:42 < niggler> you are missing a license on that code gozala 
17:42 < paulkon> if you don't know, then it's not ok
17:43 < serapath> what other options are available? paulkon 
17:43 < serapath> i had a hard time understanding what passportjs does and still feels strange.
17:43 < paulkon> make sure you know what the middleware lib is injecting. if you know that they won't interfere or be overwritten by other middleware then by all means use the middleware
17:44 < paulkon> that's what keeps response callbacks lean
17:44 < serapath> i have a handler who needs access to the database, and i was thinking of letting a midleware populate the request object with a service object that gives the handlers CRUD access to the db
17:44 < serapath> paulkon: it feels like abusing the request object as some kind of "global" thing
17:45 < serapath> but the only thing the handler gets is (req, res, next), right?
17:45 < paulkon> serapath: well, in that case I would keep db methods separate from req
17:45 < niggler> gozala may i recommend MIT?
17:45 < paulkon> just require in the db module and process CRUD when then req comes in
17:45 < paulkon> because db and req/res should be kept separate imho
17:45 < serapath> paulkon: i initialize my database in my app.js file and later on, some handlers need acess. how would i do that to follow best practices?
17:46 < serapath> so i do a require in my handler?
17:46 < paulkon> serapath: export the database from app.js
17:46 < serapath> and then i require app ?
17:46 < paulkon> then require('./app.js').db
17:46 < paulkon> yeah
17:47 < paulkon> modularize everything as much as possible
17:47 < serapath> hm.. that feels strange
17:47 < serapath> never thought about exporting something from app.js
17:47 < paulkon> yeah, but node offers that level of flexibility
17:47 < paulkon> and utlizing the module pattern, even within app.js, is the way to go imo
17:47 < serapath> another thing... what would i use app.set aand app.get for?
17:48 < paulkon> app.set and app.get are just to share locals
17:48 < paulkon> within the app
17:48 < paulkon> but you can achieve that with config modules, etc.
17:49 < paulkon> keep all static data in separate modules
17:49 < jasonkuhrt> is it better to store objects with IDs as a hash where each key is the ID, is an array better and then just use i.e. indexOf to find it later?
17:49 < paulkon> config jsons
17:50 < paulkon> jasonkuhrt: if the ids are numbers then arrays make sense
17:51 < jasonkuhrt> paulkon: good point, IDs are MAC addresses unfortunately
17:52 < jasonkuhrt> paulkon: if we could use simple incrementing numbers for each piece of hardware to store in a db would that be better you think?
17:53  * ozten filed https://github.com/isaacs/npm/issues/3645
17:53 < paulkon> jasonkuhrt: imo, that's what I would do
17:53 < pl2> jasonkuhrt, yeah man. queries on integers are far faster
17:53 < paulkon> way faster
17:54 < jasonkuhrt> okay...
17:54 < jasonkuhrt> and just to confirm the scenario
17:55 < jasonkuhrt> we are storing them in redis key:value <hardwareID>:<userID> like --- "bit:00-00-00-00-00-00" : "5"
17:55 < jasonkuhrt> so if that was using db incrementor it'd look like... "bit:3":"5"
17:55 < jasonkuhrt> and you're saying this would be far faster?
17:57 < serapath> paulkon: is it valid to do: require('./redisDB')(function(err, redisDB) { module.export = redisDB; }); ?
17:58 < pl2> jasonkuhrt, maybe not that much faster in your case
17:59 < jasonkuhrt> pl2: because of redis or because of the prefix that mucks up the ID anyways?
17:59 < jasonkuhrt> pl2: or both
17:59 < paulkon> jasonkuhrt: http://redis.io/topics/memory-optimization
17:59 < pl2> because of redis
18:00 < paulkon> serapath: you can't export within a callback function
18:00 < jasonkuhrt> thanks guys, really helpful you have no idea
18:00 < jasonkuhrt> haha
18:00 < serapath> ok, but building a connection with node-redis seems to be async
18:00 < serapath> so how would i do it?
18:00 < jasonkuhrt> just to get some perspective even is very helpful
18:01 < pl2> no worries
18:01 < jasonkuhrt> serapath: what do you want to do? redis will queue commands before the client connection event
18:01 < jasonkuhrt> serapath: there is then-redis if you prefer promises, but still async ultimately
18:01 < paulkon> jasonkuhrt: exactly
18:01 < paulkon> serapath
18:02 < serapath> hmmm, ok. currently i have a problem with my redis so i cant really try it out right now. it always gives me ETIMEOUT and i dont know why. the same for redis-comander which i installed to test if its a problem with my app
18:03 < serapath> then on the other hand, its the same with my own redis server as with one from redis4you
18:03 < serapath> it worked two days ago
18:05 < serapath> ok another question. is it legit to use a pattern like:   module.exports = function(initObject) { /*do init stuff*/ return { service1: ..., service2:..., ...}; };
18:05 < paulkon> the client returned in node-redis emits a `ready` event when it's established a connection to the redis server
18:05 < paulkon> before that it queues up the commands
18:06 < paulkon> which should translate to added time waiting for the callback to fire within whatever redis operation you are doing
18:06 < serapath> so after i do redis_client = require('redis').createClient(...); i would to redis_client.on('ready', function(err, foo) { ...}); ?
18:06 < paulkon> serapath https://github.com/mranney/node_redis#ready
18:07 < paulkon> the commands before 'ready' are queued
18:07 < serapath> thx @ paulkon , and any opinions on the "module exports pattern" above?
18:07 < paulkon> so node-redis does it for you
18:07 < paulkon> serapath: that's a good pattern
18:07 < serapath> ok thx
18:14 < LambdaDusk> is it realistic and/or a good idea to somehow encrypt the private messages and posts of users of my app in the database? (no idea where else to ask, though)
18:14 <@nexxy> LambdaDusk, yes/yes
18:15 <@nexxy> encrypt all the things
18:15 < LambdaDusk> sarcasm?
18:15 <@nexxy> whirlpool + ripeMD160
18:15 <@nexxy> LambdaDusk, I am incapable of sarcasm.
18:15 <@nexxy> no but seriously, it's not a bad idea
18:16 < LambdaDusk> nexxy: Isn't that just hashes?
18:16 <@nexxy> digest?
18:17 < LambdaDusk> nexxy: Yes but how to encrypt so that only the recipients can read it
18:17 <@nexxy> LambdaDusk, private keys or something I would imagine
18:18 < jasonkuhrt> can someone please paraphrase the take-away of the section "Using hashes to abstract a very memory efficient plain key-value store on top of Redis
18:18 < jasonkuhrt> " in http://redis.io/topics/memory-optimization
18:18 < jasonkuhrt> its not very good english and I am not a database expert and new to redis so...
18:18 < LambdaDusk> nexxy: Well I would generate a pair by user, but no idea how to store those securely
18:19 <@nexxy> LambdaDusk, ideally by not storing them at all
18:19 < pachet> LamdbaDusk they're only ever as secure as the messages you'd otherwise be storing unencrypted
18:19 <@nexxy> make that your users' responsibility
18:19 < pachet> ^
18:19 <@nexxy> BYOK
18:20 <@nexxy> bring your own keys!
18:20 < LambdaDusk> jasonkuhrt: The idea idea is that instead of using redis hashes (a datatype they offer), you would be using several keys to store the hash's values, thus increasing performance
18:20 < jasonkuhrt> it appears to suggest creating a micro hash store on top of redis
18:21 < pl2> LamdaDusk, maybe look into OAuth. 
18:21 < pl2> No hashes, just keys.
18:21 < jasonkuhrt> LambdaDusk: the section above "Use hashes when possible" is counter, so what is the difference?
18:21 < LambdaDusk> nexxy: I don't think I'd be able to teach people that... but te idea would be that the private key is within the app and the public key is in my cb?
18:23 < LambdaDusk> jasonkuhrt: it's a trade-off between performance and memory size
18:23 < LambdaDusk> jasonkuhrt: single-key hashes use up less memory, hashes over several keys are faster
18:24 < jasonkuhrt> user01:{gender:'male',...} is faster than --- user-01-gender: 'male' | user-01-...:... etc
18:24 < pachet> assuming you need that whole obj
18:24 < LambdaDusk> ^
18:25 < jasonkuhrt> so a key:<hash> is faster than key:<str>,key:<str>,key:<str>
18:25 < jasonkuhrt> but takes more memory too
18:25 < jasonkuhrt> ?
18:25 < LambdaDusk> if you only need the gender of the user, then you have first get it (big object), then use your language to cycle through the elements
18:25 < LambdaDusk> this uses O(N) time
18:26 < LambdaDusk> if you only want the user's gender alone, one single key lookup only uses O(1) time and is faster
18:26 < jasonkuhrt> LambdaDusk: okay makes sense
18:26 < oti8> Can someone help: functions in chain of promises is not getting called in right order due to bind(). https://gist.github.com/objectiveSee/5968782
18:27 < pachet> LambdaDusk: late response, but yeah, keep the pepper in your app config
18:27 < LambdaDusk> jasonkuhrt: so if memory does not matter to you but you need fast lookup of single elements, use a hybrid approach
18:28 < jasonkuhrt> LambdaDusk: the hybrid approach being that long section below about building a micro key-value store on top of redis
18:30 < bombsite> Hey can anybody help me with this
18:30 < pachet> yes
18:30 < pachet> wait
18:30 < pachet> no
18:30 < pachet> wait
18:30 < pachet> what is it
18:30 < LambdaDusk> jasonkuhrt: Anyway, the abstract of the section is: If you care about memory and have some key-value store outside of redis (say, a config array), a single hash is better than saving the keys separately
18:30 < bombsite> so I am trying to extract some data from a benchmark
18:30 < bombsite> I dumped all the data into a JSON file
18:30 < bombsite> and now I'm writing js code to parse it and try to extract the data
18:31 < jasonkuhrt> LambdaDusk: thanks
18:31 < bspar_> Has anyone gotten zeromq and google protocol buffers to work together in node? Everything works separately, just not together. Thanks.
18:31 < bombsite> so I wrote some js code to parse the json
18:31 < bombsite> but I'm at a loss for what to do at this point
18:31 < bombsite> how exactly do i do operations on the data?
18:31 < bewest> why choose promise over a stream implementation?
18:33 < timoxley> bombsite: what does your data look like
18:34 < serapath> paulkon, i'm not sure if i understand the module pattern right. assume i have: module.exports = function() { return Math.random(); }
18:34 < bombsite> timoxley: It's just a bunch of json. Have you ever used the Chrome "about:tracing" tool?
18:34 < rhalff> So what if I want to point somebody from php to nodejs, what should I suggest? nodejs and express? what will make them think, yeah, this is for me.
18:34 < serapath> will it give me the same random number every time i require it?
18:34 < timoxley> bombsite:  is this in node or the browser?
18:34 < darkpassenger> hello all
18:35 < serapath> what if its like: module.exports = function(randomNumber) { return randomNumber; }
18:35 < darkpassenger> 4...
18:35 < serapath> when i call it with require('./myModule')(Math.random()); twice
18:35 < bombsite> tomoxley: just node i think. I'm just writing a tool that I can "./<name> " run and do some data manipulation with the JSON
18:35 < timoxley> serapath:  it will always return the same data
18:36 < jasonkuhrt> quote  from http://redis.io/topics/data-types-intro --- "Try to stick with a schema. For instance "object-type:id:field" can be a nice idea, like in "user:1000:password". I like to use dots for multi-words fields, like in "comment:1234:reply.to"."
18:36 < timoxley> serapath: after the first require, the result of require('x') are cached
18:36 < serapath> ok
18:36 < jasonkuhrt> why not comment.1234.reply-to:
18:36 < jasonkuhrt> dots for property access are more conventional? and dash for space also?
18:37 < timoxley> bombsite: sure, just loop over the data. I hope by "I wrote some code to parse the json" you don't mean more than a single line of code
18:37 < jasonkuhrt> I'm asking becasue it seems so obvious that I can only imagine there is a technical reason for these choices?
18:37 < jasonkuhrt> or does thre redis community really thing that colons and dots are better than dots and dashes?
18:37 < neeky> if I want to publish an app to npm registry vs a module, what do I have to do different?  if a user runs 'npm install neekyapp', I want my app to install in the dir the user is in, not node_modules
18:37 < jasonkuhrt> really think*
18:37 < neeky> its a stand alone utility, not a module, per-se
18:37 < bewest> jasonkuhrt: no, there's no technical reason
18:37 < bewest> jasonkuhrt: whatever works
18:37 < jasonkuhrt> bewest: okay
18:38 < neeky> so, after install. the user has my server.js in the dir he's in, and node_modules just contains MY app's dependencies
18:38 < timoxley> neeky: 'apps' like that usually go in the "npm install -g" location
18:38 < bewest> they simply offer a recommendation that is easy to get going with, and doesn't lock you in something unmanageable
18:38 < LambdaDusk> neeky: If you want that, you should rather offer a github repo the user can clone - npm can only install scripts (see coffee or grunt)
18:39 < bombsite> timoxley: sorry it's a single line of code. :P do you have a stackoverflow link or something to explain how to "loop over the data"?
18:40 < clarkk> guys, can anyone suggest a library for mongodb that exposes an API to the client to allow mongodb queries to be sent and collections returned, please?
18:40 < neeky> ok.  timoxley: yeah, I'm trying to structure the app where it runs relative to the current path - it's a server of sorts that runs relative to ./
18:41 < bewest> clarkk: that sounds like an application that uses many libraries, you can use restify to do something like that pretty easily though
18:41 < timoxley> neeky:  why not install globally, and just have it do things relative to process.cwd()?
18:41 < timoxley> bombsite: start here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Iteration_methods
18:42 < bewest> or shoe maybe, not sure what you are after
18:42 < timoxley> bombsite: if you need to loop over object properties, use in conjunction with Object.keys or similar
18:42 < neeky> timoxley, is cwd the folder the command was run from?
18:42 < timoxley> neeky: yes
18:42 < bombsite> timoxley: Just a clarification. when I read the file with data = JSON.parse(data). The data variable IS an array correct?
18:42 < neeky> that will probably work then
18:43 < timoxley> bombsite: it can be an array or object.
18:43 < timoxley> bombsite:  totally depends on your data
18:43 < serapath> are u sure require is cashed? because i do: module.exports = function(a,b,c){ console.log(a+b+c);} and require('/myModule')(1,2,3) followed by require('/myModule')(4,5,6) gives me 6 and 15
18:43 < serapath> isnt it supposed to give me 6 twice?
18:43 < timoxley> serapath: require is cached
18:43 < timoxley> the result from require
18:43 < bombsite> man this is depressing I suck 
18:43 < timoxley> in this case it's returning a function
18:44 < bombsite> working with new languages/tech always makes me depressed
18:44 < clarkk> bewest: thanks for your suggestions. I am really looking for an API that will support any mongodb query, regardless of the collections that exist. Permissions are implemented on the server-side, to prevent unauthorised access to specific collections
18:44 < serapath> timoxley, so if i use module.exports = function(...) the function is not changable, but the return value will always depend on its parameters
18:44 < timoxley> bombsite: thankfully javascript has enough problems you can blame it instead of yourself
18:45 < topherbullock> exactly @timoxley
18:45 < bombsite> I'd rather use c than this omg
18:45 < timoxley> serapath: yeah, it's nothing magical, if it exports a function, the function just works as normal
18:46 < serapath> and even if i return an object or a closure, the closure will not be the same if i require again with different parameters
18:46 < serapath> i mean it will give me a different closure then
18:46 < timoxley> serapath: what do you mean require again with different parameters?
18:47 < serapath> like: module.exports = function(initObject) { return function(whatever) { /* do something with initObject */ }; };
18:48 < timoxley> serapath: the returned function will work as normal
18:48 < serapath> is it possible to module.exports the second function without changing the first one?
18:48 < timoxley> serapath: wha
18:49 < serapath> i want every require to return the function(whatever) which knows its initObject
18:49 < serapath> hopefully a initObject which was set by the first require
18:50 < serapath> i'd like to configure the stuff i require, for example, give a require('myDBmodule')(host, port, pass) or something
18:50 < serapath> every other require will use the cached myDBmodule with its host, port, pass set
18:50 < timoxley> serapath: you can do that
18:50 < serapath> how?
18:51 < timoxley> serapath:  just cache the passed-in options somewhere
18:51 < timoxley> in the module you're requiring
18:52 < serapath> how?
18:52 < topherbullock> wait.. so you basically want a module to be a singleton?
18:52 < serapath> in order to pass in options, i need: module.exports = function(host, port, pass)
18:52 < serapath> { ... {
18:52 < serapath> but requireing it again will execute the function again
18:53 < timoxley> serapath: something like
18:53 < timoxley> var options; module.exports = function(opts) { options = options || opts; }
18:53 < topherbullock> ^^
18:53 < serapath> wow
18:53 < serapath> nice trick
18:53 < serapath> haha
18:53 < serapath> ok cool
18:53 < serapath> thx
18:53 < serapath> awesome :-)
18:53 < kenperkins> hax ftw
18:54 < serapath> i have so much to learn
18:54 < timoxley> serapath: be careful with that though, it has a silent temporal dependency on calling it first with the correct options
18:55 < serapath> how can i make sure, that its the first call passes in the real port, pass, etc...
18:55 < serapath> because the handlers are initialized too
18:55 < serapath> so eventually a handler will be initialized before the database itself
18:55 < timoxley> serapath: perhaps you have it pull its own configuration in
18:55 < serapath> how would i do that?
18:56 < topherbullock> options will be null, so it will use whatever you pass.
18:56 < serapath> passing in require('./myDBmodule')(app) and do a app.set(...) before?
18:56 < timoxley> serapath: on the first line, have it initialise options itself if it doesn't have options
18:56 < timoxley> there's always a bunch of tradeoffs with this kind of stuff and it's best to just get it done and not think about it too much haha
19:05 < cly> does anyone know if there's a way to run `npm dedupe` automatically with `npm install`?
19:07 < topherbullock> alias .. haha
19:08 < bspar_> Has anyone gotten zeromq and google protocol buffers to work together in node? Everything works separately, just not together. Any help would be appreciated. Thanks!
19:10 < alyraz> hello. in one of my routes i am redirecting to a url path. on my local machine i obviously use localhost:8888 etc, but when I deploy that obviously won't work. I think I need to configure this var based on my environment but I am a node newbie and can't seem to find these documented anywhere, any help would be really aprpecaited!
19:12 < cly> @alyraz env NODE_ENV=<environment> node server.js
19:12 < bewest> clarkk: I think you can probably do what you want with shoe and socat
19:13 < cly> @alyraz and in server.js if (process.env.NODE_ENV === 'development')
19:14 < clarkk> ok thank you, bewest - I will look into it :)
19:14 < bewest> you need one tool to get mongodb -> (passthrough) and another to get (passthrough) -> client
19:14 < bewest> where both passthrough's talk to eachother, an easy way to do that is to make passthrough a simple tcp port mirror
19:14 < bewest> so socat $(connect-mongo) tcp-l:4000
19:14 < clarkk> bewest: ok. I am a little surprised that noone has already written a full solution for this
19:15 < bewest> then use shoe to pipe net.connect({port}).pipe(shoe.stream)
19:17 < clarkk> ok thank you bewest
19:19 < bewest> clarkk: I think you want to run browserify on this: https://github.com/eugeneware/jsonquery
19:21 < bewest> most people prefer to create some RESTful API so they can authorize what happens behind the http interface https://npmjs.org/search?q=mongo
19:21 < jasonkuhrt> unpipe will stop the readable from sending data to the piped-to writables, yes?
19:21 < jasonkuhrt> BUT
19:22 < jasonkuhrt> but how do you get a writeable to ask readables to not/stop pipeing to it?
19:23 < clarkk> bewest: you mean, they create APIs for specific queries to facilitate specific functions on the client, rather than opening up the whole database to the client?
19:24 < PeterNor> I'm unable get remoteAddress ..... This is BAD
19:26 < jasonkuhrt> my only idea is that a writeable stream listens to its own pipe event and then keeps track of who is piping to it
19:26 < jasonkuhrt> then
19:26 < jasonkuhrt> later on
19:26 < jasonkuhrt> it can stop all pipers from piping to it
19:27 < jasonkuhrt> arrayOfStreamsPipingToMe.map(function(stream){ stream.unpipe(this) }.bind(this))
19:27 < jasonkuhrt> ...
19:28 < bewest> clarkk: yeah, that's exactly what I mean
19:28 < piklu> ### Looking for a developer to support me in a commercial project - I will return him a royality income, if you have time, come work with me, UI,UX, HTML,CSS or Node.js skills are highly desired ##
19:28 < bewest> clarkk: in addition, you can check permissions, etc, easily
19:29 < bewest> jasonkuhrt: I think the writable does that by unpausing itself, providing a write
19:29 < PeterNor> I'm unable get remoteAddress ..... This is BAD
19:30 < jasonkuhrt> bewest: come again?
19:30 < jasonkuhrt> bewest: http://nodejs.org/api/ I see no pause method for writable streams
19:31 < bewest> http://nodejs.org/api/stream.html#stream_event_drain
19:32 < clarkk> bewest: permissions are handled already, the issue I'm really looking at is reducing unnecessary data transferred over the wire. I am undecided whether allowing the client to potentially slice and dice the data any way it wants for repurpose or simply stealing is a concern people
19:32 < clarkk> worry about
19:32 < neeky> getting errors on npm publish: https://gist.github.com/nikmartin/8a59b59d0a26e67d60b7
19:33 < neeky> error Error: write EPIPE
19:33 < jasonkuhrt> bewest: my use-case is I have a TCP stream that pipes to other things AND other things pipe to IT. I have a situation where my TCP stream may need to "reset" itself so that it is NOT piping to anything and NOTHING is piping to it ... but this is NOT a .end() because the TCP connection may re-enter the system given some future conditions
19:34 < jasonkuhrt> bewest: drain does not seem appropiate, semantically it has nothing to do with my scenario, I want to reset my TCP connection without actually disconnecting
19:35 < neeky> have no idea what EPIPE is
19:41 < neeky> would an strace of the error help?
19:42 < knownasilya> How do I throw an exception in the cli? throw newException() doesn't work
19:42 < knownasilya> ops, sorry, got it
19:44 < Reflow> how can i execute a node file from a node file 
19:44 < Reflow> and get the output
19:46 < Reflow> is there a way to execute command line commands from node file
19:47 < Reflow> hello"
19:49 < PeterNor>  I'm unable get remoteAddress ..... This is BAD
19:49 < darkpassenger> why does this code (http://pastebin.com/3zDTwdQk) always return an error ? 
19:50 < neeky> Reflow, look at the process module in node
19:51 < PeterNor>  I'm unable get remoteAddress ..... This is BAD
19:51 < neeky> is PeterNor a bot?
19:51 < PeterNor> No
19:52 < PeterNor> I'm unable get remoteAddress ..... This is BAD
19:52 < neeky> you've said the same thing 6 times, i figured someone was piping a node app output to irc
19:52 < kenperkins> isaacs who puts on node summit
19:53 < r04r> PeterNor: is it bad?
19:53 < PeterNor> yes
19:53 < r04r> is it BAD??
19:53 < PeterNor> KUA
19:54 < darkpassenger> why does this code (http://pastebin.com/3zDTwdQk) always return an error ? 
19:55 < r04r> line 12
19:55 < r04r> capitalization
19:55 < PeterNor> I'm unable get remoteAddress ..... This is BAD...HELP
19:56 < r04r> BAD BAD BAD
19:56 < r04r> you need to give more info, like wtf do you mean
19:56 < darkpassenger> not like a guy named Peter North would need help in anything...
19:56 < darkpassenger> lol
19:56 < dimadima> i am using JSON.stringify() on an html template, and finding that i need to escape the resulting string with some `.replace()`s described here: http://stackoverflow.com/a/9204218/741970 (i.e. `.replace(/[\"]/g, '\\\"')`). is there a facility built into node for this? i feel like there must be something?
19:58 < PeterNor> I'm building a stock app using Node.js , i'm unable to get remoteAddress
19:58 < b3tamax> dimadima: I haven't found any convenience functions. I've abstracted the replace approach into a few functions.
19:58 < PeterNor> darkpassenger KUA
19:58 < darkpassenger> heh ? 
19:59 < darkpassenger> thank you PeterNor , now I don't look so bad ...
19:59 < sc30317> hey all; is there a good node.js book that I should read to become familiar with the technology?
19:59 < dimadima> b3tamax: interesting! would be great if this was built into node or a module or something... i feel like this must be SUPER standard, right?
20:00 < b3tamax> dimadima: I completly agree.
20:00 < b3tamax> sc30317: Just build shit and look at the docs.
20:01 < sc30317> b3tamax: thanks
20:01 < neeky> PeterNor, are you asking for help, or making general statements?
20:01 < PeterNor> I'm building a stock app using Node.js , i'm unable to get remoteAddress....HELP
20:01 < neeky> you are not helping
20:02 < neeky> saying that over and over doesnt get anyone closer to the end result 
20:02 < YoloSwaggins> Ohhh yeah.
20:02 < PeterNor> neeky i'm not getting any help.. It's a new technology .  I'm from C background
20:02 < neeky> there are no stock apps in node, and what specifically are you trying to do?  maybe hastebin some code?
20:02 -!- mode/#Node.js [+o Guest4994] by ChanServ
20:02 < neeky> or an error?
20:03 < neeky> or what you have tried so far?
20:03 < hhhhhhhh> is this an appropriate place to ask about http-parser
20:04 < PeterNor> neeky I'm building one for my clients .. I might have choosen java (familar) . Clients where interested in Node.js
20:05 < neeky> go on...
20:05 < [Frost]> I tried several smarty to nodejs ports but none really worked
20:06 < [Frost]> tag-template seemed promising but I'm stuck at this: Error: Cannot find module 'prime/util/type'
20:06 < timoxley> PeterNor: require('http').createServer(function(req) {console.log(req.socket.remoteAddress)}).listen(9000)
20:06 < PeterNor> I'm just getting Local Address not the remote Address of the machine neeky
20:07 < PeterNor> I get undefined
20:07 < [Frost]> PeterNor, did you try req.connection.remoteAddress?
20:07 < timoxley> PeterNor: paste your code
20:07 < PeterNor> Yes 
20:08 < neeky> PeterNor, try this: at a command prompt, run node with no arguments
20:08 < neeky> you should see: >
20:08 < PeterNor> :D neeky
20:08 < neeky> paste the entire line timoxley just psoted
20:08 < neeky> into that window
20:08 < jasonkuhrt> what do you think of the idea of adding debug logging via getters/setters so that certain key property assignments can be traced but then disabled for production performance
20:08 < jasonkuhrt> and do you know a good quickstart for ES5 getter/setters?
20:08 < jasonkuhrt> MDN or something better?
20:08 < neeky> then open a browser and navigate to localhost:9000
20:09 < neeky> and see what it outputs
20:09 < neeky> on my computer, it outputs: 127.0.0.1
20:09 < PeterNor> 127.0.0.1
20:09 < neeky> thats remoteAddress
20:09 < timoxley> jasonkuhrt: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects?redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FWorking_with_Objects#Defining_getters_and_setters
20:10 < PeterNor> So i'm comparing with whatsmyip.com
20:10 < timoxley> PeterNor:  that's different
20:10 < neeky> whatsmyip is showing you YOUR ip
20:10 < timoxley> you'll need to access it via your ip
20:10 < [Frost]> PeterNor, when you use an internal IP to make a request, expect node to see it as an internal IP
20:10 < neeky> relative to the world
20:11 < neeky> if you connect to the internet via a lan, whatsmyip is showing you the ip of your router that sites bewteen you and the internet
20:11 < [Frost]> Localhost, internal (LAN) and public (WAN) IPs are all different scopes
20:11 < darkpassenger> TypeError: Converting circular structure to JSON when I res.send result ? res.json fails too and result[0] as well
20:12 < neeky> that will not be any different if using Java, C, perl, etc
20:12 < PeterNor> I thought remoteAddress will give me the router IP
20:12 < neeky> nope
20:12 < timoxley> nope
20:13 < s5fs> nerp
20:13 < daslicht> yeah
20:13 < daslicht> 8-)
20:13 < neeky> to do that, in a node app, you'll need to do a request on http://whatsmyip.com and parse the results
20:13 < [Frost]> he wants his public IP?
20:13 < [Frost]> crawl icanhazip.com
20:13 < neeky> may i ask what you are specifically trying to accomplish?
20:14 < thelight-drunkn> :~)
20:14 < neeky> we may can help if we know what you are trying to do
20:14 < bspar_> Has anyone gotten zeromq and google protocol buffers to work together in node? Everything works separately, just not together. Any help would be appreciated. Thanks!
20:14 < piklu> boytoy: hello
20:14 < PeterNor> To get my clients IP 
20:14 < neeky> client?
20:14 < timoxley> who/what is your client
20:15 < neeky> your'e being too general
20:15 < neeky> so  is your clinet a customrt that is paying you money to do work?
20:15 < PeterNor> I dont what your expecting Neeky
20:15 < PeterNor> know*
20:15 < neeky> or the clinet is a person on the internet making requests to a server application you are writing?
20:15 < [Frost]> PeterNor, when you access a node app via localhost, node will see the request coming from localhost too. So req.connection.remoteAddress WAS correct
20:15 < s5fs> PeterNor: outline your end goal as if you're taking to a client
20:16 < PeterNor> yes neeky 
20:16 < neeky> client has many meanings: a customer, a remote computer accessing your application, and mobile phone appliucation, etc
20:16 < neeky> yes which one?
20:16 < [Frost]> he probably is referring to a webbrowser
20:16 < neeky> were talking in circles here
20:16 < PeterNor> lol
20:17 < timoxley> neeky: patience
20:17 < s5fs> neeky: what sort of circles?
20:17 < neeky> well earlier you said client as in 'clinet wast me to use node'
20:17 < neeky> so I'm thinking a customer paying you to do work
20:17 < s5fs> "my client wants their clients clients to see their ip"
20:17 < neeky> then you say clinet's IP, as in 'some remote computer'
20:18 < PeterNor> mm
20:18 < jasonkuhrt> timoxley: thanks
20:19 < neeky> so, break it down in baby steps: 1: im writing an ap that does xyz. 2. in said app, i need to be able to abc
20:19 < timoxley> PeterNor: basically, that remote address thing will work if you're trying to get the address of the computer connecting to your node server
20:19 < PeterNor> Okay guys Thank You 
20:19 < PeterNor> neeky BS
20:20 < [Frost]> wow
20:20 < [Frost]> he was arrogant
20:20 < neeky> BS=baby steps?
20:20 < [Frost]> oh hmmm
20:20 < neeky> maybe
20:20 < [Frost]> I thought more about Bullshit
20:21 < [Frost]> He either didn't care that he wrote his English terrible or he was facing with a lanugage barrier
20:21 < neeky> probably all
20:21 < [Frost]> I have been struggling for something for like a week now
20:21 < [Frost]> even though I have put it on low priorirty, that's why it's a week
20:21 < neeky> i hate to come across as a tail, but sometimes you just need people to be a bit more descriptive
20:22 < neeky> and a bit less obtuse
20:22 < [Frost]> I was looking for a ported module of Smarty and found several, but none worked properly for me
20:22 < [Frost]> neeky: Agree
20:22 < [Frost]> If you want help, put some effort into formulating it right
20:23 < [Frost]> > tag-template seemed promising but I'm stuck at this: Error: Cannot find module 'prime/util/type'
20:23 < [Frost]> the developer being too lazy to specify the dependecies in the first place kind of pissed me off
20:23 < [Frost]> *dependencies
20:24 < s5fs> neeky: fwiw i think you did a good job with that fellow. if anything i'd have stopped support long before you did.
20:24 < Reflow> how do i handle POST requests
20:24 < [Frost]> Reflow: request.method == 'POST' and req.on('data', ..); on data, should check out the http section of the API docs
20:25 < neeky> [Frost], i see your issue:
20:26 < [Frost]> req.setEncoding('utf8'); var body \ req.on('data', function(chunk) { body += chunk }); req.on('end', function() { /* do magic */ });
20:26 < neeky> my guess is tag-template cannot install prime 0.0.5-alpha anymore
20:26 < [Frost]> oops
20:26 < neeky> so you'll have to install it manually from the git repo tag:
20:26 < [Frost]> Refloew, req.setEncoding('utf8'); var body = ''; req.on('data', function(chunk) { body += chunk }); req.on('end', function() { /* do magic */ });
20:27 < neeky> [Frost], https://github.com/mootools/prime/tree/v0.0.5-alpha
20:27 < [Frost]> neeky: so you suggest installing prime from source?
20:27 < neeky> yes
20:27 < neeky> from a specific tag, that I just linked
20:27 < neeky> the current version no longer has a util module
20:28 < neeky> you shoould be able to install via npm using the specific tag url
20:28 < neeky> for 0.0.5-alpha
20:28 < neeky> but that module is pretty old
20:30 < [Frost]> neeky: I might aswell just write my own smarty implementation because all of these lack proper code or simply don't work
20:46 <@isaacs> kenperkins: Joyent's involved, but it's put on by Charles Beeler
20:46 <@isaacs> kenperkins: Charles is "The Guy" behind it
20:46 < kenperkins> isaacs: ever on irc?
20:47 <@isaacs> kenperkins: i've never seen him here, i don't think
20:47 <@isaacs> kenperkins: but you can reach him at charles@nodesummit.com i think
20:53 < kenperkins> ty
20:57 <@nexxy> netsplits! we're done for!
20:57 <@nexxy> this is the big one
21:00 < stompyj> anyone seen this error with the latest version of node? stack Error: EPERM, chown '/var/lib/jenkins/.npm/plan-waveform/0.0.5/package.tgz'
21:00 < stompyj> when running npm install?
21:00 < topwobble> Is there a chat module for node?
21:02 < beardtree> topwobble: "chat"?
21:02 < topwobble> beardtree: chat rooms, messages, etc
21:02 < jasonkuhrt> how can I intercept property access of an object in javascript
21:03 < jasonkuhrt> for instance there is some object and I want to log every time .fooProperty is accessed
21:08 < YoloSwaggins> jasonkuhrt: Make the object properties private and provide public accessors - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects?redirectlocale=en-US&redirectslug=JavaScript%2FGuide%2FWorking_with_Objects#Defining_Getters_and_Setters
21:16 < jasonkuhrt> YoloSwaggins: what if I only want transparent interceptors that can silently listen in but do not in any way influence the way the object is created
21:37 <@trevnorris> owen1: here's a quick tut on using threads in native modules http://blog.trevnorris.com/2013/07/node-with-threads.html
21:37 <@trevnorris> owen1 part 1 of performance measuring is in draft. :)
21:38 < owen1> trevnorris: OMG thanks
21:38 <@trevnorris> yup
21:43 < PeterNor> error page in node js
21:49 < MI61> joyent/node: Trevor Norris v0.10 * 6d91bd3 : node: call MakeDomainCallback in all domain cases - http://git.io/ihnW6Q
21:57 < wagtag> I'm trying to create a parallax like effect where a container background image scrolls with the page. Works great in all browsers except for IE where it is really jittery. Here is a working demo http://jsfiddle.net/v9VFS/
21:57 < wagtag> sorry! wrong channel
21:58 -!- mode/#Node.js [+o tjfontaine] by ChanServ
22:12 < serapath> is it better to instead of: "module.exports = function(...) { ...stuff.. return { a: .., b: .., ...}; };"  i just do: "...stuff.... module.exports = { a: ..., b: ...,...} so that i minimize the load additional requires would cause?
22:12 < owen1> trevnorris: can't wait for your coming C++ for noders guide (:
22:13 <@tjfontaine> itym C
22:13 <@trevnorris> owen1: heh, delay on that will depend on what happens to our cpp api :P
22:13 <@tjfontaine> people can feel free to write guides about v8 api, and feel the pain as they change it all out from underneath them just before they send the book to production.
22:14 <@trevnorris> hey, it's an excellent way to make money. they could write a new book every 3 months!
22:14 <@tjfontaine> great money for the printers
22:17 < mscdex> serapath: require() calls are cached
22:17 < golgi> big userlist
22:17 < golgi> hello everyone
22:18 < mscdex> it's not a big userlist until we have over 9000
22:18 < piklu> Is rethink-db stable enough ???
22:18 < golgi> good point
22:18 < golgi> im new to node.js. is this an appropriate place to ask about encryption in nxb?
22:18 < mscdex> nxb?
22:19 < golgi> node-xmpp-bosh
22:22 < serapath> mscdex: i know, but that means it just caches the function
22:22 < serapath> mscdex: and executes it every time
22:23 < serapath> mscdex: its wont just cache the "return statement"
22:36 < beardtree> I am using a rate limited API with various endpoints like wordFrequency or wordDefinition. Is there a module that provides rate limiting for many functions, all on one counter?
22:39 < jesusabdullah> beardtree: if not you should write one I bet it's not too bad
22:50 <@isaacbw> there was a blog post about typography and code pretty recently
22:50 <@isaacbw> and it touched on 
22:50 <@isaacbw> wtf
22:50 <@isaacbw> oh hey
22:50 <@isaacbw> that was yesterday
22:59 < hipsterslapfight> 23:48 isaacbw: there was a blog post about typography and code pretty recently 
22:59 < hipsterslapfight> even if this was yesterday, i am interested today
23:00 <@isaacbw> I was trying to respond to a discussion earlier about comma first
23:00 <@isaacbw> let me see if I can find the post
23:00 <@isaacbw> http://naildrivin5.com/blog/2013/05/17/source-code-typography.html
23:00 < hipsterslapfight> oh, not typography then
23:01 <@isaacbw> sure it is
23:02 < TheDracle> I'm having a hell of a time getting a node dbus library that works.
23:02 < TheDracle> Anyone have any recommendations for one that they've used that works reliably?
23:02 < TheDracle> I've tried dbus-native, and dbus.
23:02 < hipsterslapfight> there's some interesting typographic ideas there isaacbw, but i wouldn't necessary call it something like 'source code typography' as they have. either way; thanks for the link
23:03 <@isaacbw> hmm
23:04 < AviMarcus> interesting link. I think I do some of this stuff.
23:05 < waxbar1> I am trying to connect to my openfire xmpp server using the node-xmpp server, but I am getting XMPP Authentication Failure. The failure is resulting from a failure stanza for an xmpp-sasl connection. I am not experienced with openfire or XMPP. Why is my authentication failing? Do I need to change my openfire sasl settings somehow?
23:06 < waxbar1> { name: 'failure',
23:06 < waxbar1>   parent: null,
23:06 < waxbar1>   attrs:
23:06 < waxbar1>    { xmlns: 'urn:ietf:params:xml:ns:xmpp-sasl',
23:06 < waxbar1>      'xmlns:stream': 'http://etherx.jabber.org/streams' },
23:06 < waxbar1>   children:
23:06 < waxbar1>    [ { name: 'not-authorized',
23:06 < waxbar1>        parent: [Circular],
23:06 < waxbar1>        attrs: {},
23:06 < waxbar1>        children: [] } ] }
23:06 <@nexxy> waxbar1, please use a paste service
23:07 < AviMarcus> meh he addressed the , first in terms of typography rather than in terms of practicality.
23:07 < waxbar1> sorry
23:07 <@nexxy> if you're pasting more than 3 lines
23:07 <@nexxy> gisthub.com is perfect :)
23:07 <@tjfontaine> when its up
23:07 <@nexxy> lol
23:11 <@isaacbw> AviMarcus: what would the practicality factor be
23:11 < AviMarcus> isaacbw the ; is always optional. So putting the , at the end of the line on the last line breaks it (I think)
23:12 < AviMarcus> and not having it at the start also doesn't work
23:12 < AviMarcus> so if you have "var" and ", " lined up
23:12 < AviMarcus> you can easily remove or add lines
23:12 < AviMarcus> without having to check the end an make sure ; is correct
23:13 <@isaacbw> how often do you have chains of variable declarations like that
23:13 < waxbar1> what is a better channel to ask an XMPP question on?
23:14 <@isaacbw> or rather, do you think you do more editing, or more reading
23:14 <@isaacbw> *you/people
23:15 < AviMarcus> reading and then editing. it leads to stupid mistakes because you have to watch the thing at the end of the line
23:15 < AviMarcus> that's right, it applies in adding vars inside a hash of  { }
23:15 < AviMarcus> that's more frequent
23:17 < AviMarcus> 'night
23:32 < serapath> after reading a bit and trying out different approaches, i currently use this boilerplate for my module definitions? http://pastebin.com/j1cUmFbq
23:33 < serapath> i'm pretty new to all of this, so i'm not sure if this is fine
23:33 < nodesjs_is_sucid> Hello !
23:33 < substack> serapath: you don't need any boilerplate
23:33 < substack> you can just do `module.exports = function () { your code goes here }`
23:34 < substack> then when you `require()` that file you will get the function with your code in it
23:34 < serapath> i tried it that way, but it executes the whole function again and again
23:34 < serapath> it doesnt just cache the return statement
23:34 < serapath> it seems
23:34 < substack> serapath: the export object itself is cached, not the function result
23:34 < serapath> i dont want the whole function to reinitialize, especially not, when i pass host,port,pass to my dbModule and require it in my handlers
23:35 < serapath> because it will reinitialize with host, port, pass null if not given again
23:35 < substack> serapath: you should probably pass the return value explicitly where it needs to go
23:35 < substack> instead of depending on the module to cache the reference for you
23:35 < serapath> but with that approach above, i could just require myDB where needed
23:35 < substack> but what you have is much more complicated than it needs to be in any case
23:35 < serapath> hmm..
23:35 < substack> serapath: if you want to do that, just do module.exports = myDb
23:36 < serapath> but then how would i pass host, port and pass to myDb?
23:36 < substack> you would have the file load that from a config or hard-code them
23:37 < substack> if you want to pass arguments, you shouldn't use module-level state
23:37 < serapath> the other approach i was thinking about was populating the request object with it, like passportjs does it with req.login, req.logout, req.isAuthenticated ...
23:37 < substack> don't ever do that ever
23:37 < substack> passportjs is wrong
23:37 < substack> mutating state like that makes your code HIGHLY coupled and order-sensitive
23:37 < serapath> substack: but if i hardcode, then i have to change it every time i change the db from my local laptop to my server
23:37 < serapath> what should i use instead of passportjs?
23:38 < substack> just don't do what passport does
23:38 < soldair__> var config = require('config'); var db = make db(config); module .exports = db;?
23:38 < substack> serapath: var config = require('./config.json')
23:38 < serapath> oh, ok, i understand that config thing. thx
23:39 < serapath> and how would i give my handlers access to my db ?
23:39 < substack> or something like: var config = require('./config.' + (process.env.NODE_ENV || 'local') + '.json')
23:39 < serapath> because my handlers normally only have a function(req, res) { ... }
23:39 < serapath> so i thought about requiring the db module
23:39 < substack> or there are heaps of modules do load config conditionally based on different environments
23:39 < serapath> ah, ok... with the config approach that makes sense
23:40 < serapath> i could just require my dbModules
23:40 < serapath> thx very much :-)
23:41 < soldair__> serapath: i love substack 's confuse for config fyi
23:41 < raphie> I know it's probably bad practice, but is there a way to require a script so that its defined variables become global? I'd like to reuse a browser-oriented script without modifying it to include lots of module.exports
23:41 < Sre> Hello
23:41 < Sre> I'm new to Node
23:41 < serapath> soldair__: what u mean? :-)
23:42 < serapath> hello Sre 
23:42 < Sre> How to handle 404 , 500 errors ?
23:42 < substack> raphie: it's usually pretty simple to modify scripts to use module.exports
23:43 < beardtree> Sre: you mean "what to do with them?" or "how do I find out?"
23:43 < substack> you can just add a line at the bottom
23:43 < serapath> res.status(404).send('error 404'); 
23:43 < raphie> substack: oh, what would that line look like?
23:43 < Sre> If i get that error i must show some friendly page
23:43 < serapath> res.status(404).render('your404template'); 
23:43 < Sre> not the error :P
23:43 < substack> damn, express has its own idiosyncratic way of writing responses?
23:44 < raphie> substack: would it just be module.exports = this; ?
23:44 < serapath> what you mean? is that special to expressjs?
23:44 < substack> raphie: module.exports = YourThing
23:44 < substack> raphie: don't ever depend on `this` being set
23:45 < substack> that breaks so quickly once you start using module systems that wrap code in closures
23:45 < substack> serapath: yes, it's very specific to express
23:45 < substack> serapath: in node core you would do res.statusCode = 404; res.end('error 404')
23:45 < serapath> so normally i would do res.status(404);res.send('404error');
23:45 < serapath> oh ok
23:45 < raphie> the problem is that this script has tons and tons of variables. so I'd have to add exports.<function> lines for approximately 20 different functions. looking for a quick-and-dirty solution for a little experiment
23:45 < serapath> thats quite different
23:46 < Sre> serapath can i get any reference on this for further study ?
23:46 < serapath> i was telling u expresjs stuff
23:46 < serapath> expressjs stuff
23:47 < serapath> http://expressjs.com/
23:47 < serapath> you could google for expressjs tutorial
23:47 < serapath> there is tons of stuff
23:47 < Sre> I'm not using expressjs
23:47 < Sre> I'm using Node
23:47 < Sre> Like Servlet :P
23:47 < serapath> npm install express
23:47 < Sre> But i love servlet far then node
23:48 < serapath> i dont know what servlet is. sounds like java
23:48 < Sre> yep yep
23:48 < serapath> then i dont wanna know
23:48 < serapath> :-)
23:48 < serapath> i think its easier to get started with expressjs
23:48 < serapath> then with node core
23:49 < Sre> But how to do with nodejs
23:49 < Sre> I'm not using any framework
23:50 < Sre> In Node.js it's really hard even for error pages :'(
23:50 < serapath> thats why there is stuff like expressjs
23:50 < serapath> maybe you could look into connectjs
23:51 < serapath> its more basic than nodejs i think
23:51 < serapath> oops
23:51 < serapath> then expressjs
23:51 < serapath> :-)
23:51 < Sre> I'm using connect
23:51 < Sre> so many this i'm using i hardly remember
23:51 < Sre> things*
23:51 < serapath> expressjs is just a bit stuff on top of connect afaik
23:52 < serapath> what do u build?
23:53 < Sre> Nodejs is very unique , when i compare with programming languages [Server Side]
23:54 < Sre> I was thinking handling error messages will be part of nodejs 
23:54 < serapath> no
23:54 < Sre> So i came to IRC
23:54 < serapath> afaik nodejs is kept small on purpose
23:54 < serapath> but u have npm
23:55 < Sre> like maven :P
23:55 < Sre> yep yep
23:56 < serapath> maven is not a package manager, right?
23:56 < serapath> so its not like maven
23:56 < Sre> But it does the same
23:56 < serapath> maybe maven is more like gruntjs? but i dont know what to compare maven to
23:56 < serapath> anyway, think i have to go back learning node stuff
23:59 < rojuinex> anyone know of a way to read and zip a raw git repo in nodejs?
--- Log closed Thu Jul 11 00:00:39 2013
