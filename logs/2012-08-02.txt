--- Log opened Thu Aug 02 00:00:07 2012
00:42 < randomachiever> Topic is a little strange
00:43 <@maxogden> not in context
00:45 < randomachiever> I bet
01:02 < AAA_awright> timeturner: How opposed to npm and other bloat in the core are you
01:03 < AAA_awright> And pardon the loaded question
01:22 <@isaacs> Hold on, gonna restart the website.
01:23 <@isaacs> done
01:24 < prettyrobots> Uh, oh. Who broke isaacs?
01:24 < prettyrobots> ops plz
01:24 <@isaacs> prettyrobots: nothing, just had some fixes that affected the root server.
01:24 < prettyrobots> ops pwety plez
01:25 <@isaacs> prettyrobots: sorry, no op party for a few days
01:25 <@isaacs> it got fun, then it got really fun, then it got old, then it was just annoying.
01:25 <@isaacs> it'll be back :)
01:25 < prettyrobots> isaacs: lulz
01:25  * isaacs away!
01:31 < jcrew> topic is fine after the shitstorm we had earlier
01:32 < jesusabdullah> were people being dipshits?
01:32 < jesusabdullah> Figures.
01:32 <@Nexxy> I wouldn't say that
01:32 <@Nexxy> just
01:32 <@Nexxy> slightly uncivilized
01:32 < prettyrobots> jcrew: Are their logs somewhere? I sense entertainment.
01:32 <@Nexxy> irclogger.com has them
01:33 < jcrew> not super entertaining just new irc bot business
01:33 < prettyrobots> Nexxy: Great, Now, let me just put on my outrage pants...
01:35 < rvagg> ops with age limit might work a bit better
01:36 <@Nexxy> ageism
01:36  * prettyrobots not outraged; sighs.
01:38 < prettyrobots> opsism!
01:39 < prettyrobots> Now supports DynamoDB and SES: https://github.com/bigeasy/amazon
01:44 < hellopat> Does anyone have experience with faye?
01:44 < hellopat> http://faye.jcoglan.com/
01:46 < Flam9> Can anyone inform me on a good walkthrough that goes through building a node.js application by walking through writing the code?
01:47 < rvagg> hellopat: BusterJS uses faye, you may find someone in #buster.js, tho being mainly in Europe, you're not likely at the moment, @augustl in particular does a lot of work with faye
01:47 < hellopat> Cool, thanks rvagg
01:49 < hellopat> Flam9: http://howtonode.org/ is a good resource with lots of example applications
01:50 < hellopat> Albiet a bit dated, still worth perusing
01:56 < cpsubrian> how can a cluster worker kill the master?
02:00 < rvagg> cpsubrian: it has to gather popular support, raise an army of workers and then overtake the palace; with enough force to overpower the army protecting the army
02:00 < rvagg> .. or perhaps that's something else
02:00 < cpsubrian> rvagg: I smirked
02:00 < cpsubrian> rvagg:  :)
02:07 < rektide> ops plz
02:07 < rektide> fuck you
02:08 < monad> no
02:08 < monad> rektide fagg
02:08 < wookiehangover> monad: seriously
02:08 < wookiehangover> ?
02:08 < wookiehangover> are you fucking 14?
02:08 < monad> fuck off
02:09 < monad> [rektide] choke on a spiked dildo you cunt
02:09 < wookiehangover> monad: don't drop hate-speech in chat
02:09 < monad> wookiehangover: dont be a nazi
02:10 < rektide> whooooaaa partner. i think you need to get back on your medication.
02:10 < wookiehangover> ya, cause nazis were big into not being cool with dropping hateful, derogatory terms about folks
02:10 < rektide> none of what you've done is fit for publication
02:11 < monad> [22:08:00] [rektide] fuck you
02:11 < rvagg> see... age limit I'm telling you
02:11 < rektide> uhhh huh
02:11 < rektide> rriiiiiiggght
02:11 < monad> [rektide] and when you've finished, and you're dead, in hell, go blow hilter you commie loving dog
02:11 < rektide> ok it's true
02:11 < rektide> you're not smart enough to make that last one up
02:11 < rektide> you fucking animal fucker
02:12 < monad> or depraved enough, you ratfuck
02:12 < rektide> rriiiiigght
02:12 < rektide> why don't you get back to your gender crimes
02:12 < rektide> you twat
02:12 < monad> you got a cock in your mouth?
02:15 < rektide> monad: and what if that's ok? you still want to disparage me as a fagg?
02:15 < monad> shut up
02:15 < rektide> you useless skum sucking proto human
02:15 < monad> you mad.
02:16 < rektide> monad: or maybe i like it
02:16 < rektide> monad: or maybe, just maybe, picking on lower life forms like you is all too enjoyable
02:16 < rektide> it's not though
02:16 < monad> you are a cockroach
02:16 < rektide> so, fair the well, good sir
02:16 < rektide> until again
02:16 < rektide> aren't we all?
02:16 < rektide> the 21st c is kind to no one
02:19 < cainus> hey...anyone know if there's a simpler way to work with binary data than buffer?  seems a bit overly painful
02:20 < rvagg> cainus: you can't do binary data in JS yet (soon), that's why Node has buffers, they are our interface to binary data while we wait
02:20 < rvagg> your alternative is to write your own addons in C++
02:21 < rvagg> (I think)
02:21 < wookiehangover> http://binaryjs.com/
02:21 < cainus> no I realize that... I ended up writing an abstraction over buffer to make it easier to use.. .then started thinking such a thing might already exist
02:21 < rektide> npm search buffer or npm search binary is your best bet
02:21 < rektide> but it takes vetting
02:22 < rektide> there are no answers
02:58 < prettyrobots> cainus: I wrote this, but it's back to work in progress status: http://bigeasy.github.com/packet/
03:01 -!- mode/#node.js [+b *!*omar@*.nycmny.east.verizon.net] by Nexxy
03:01 -!- monad was kicked from #Node.js by Nexxy [monad]
03:05 < KorvinSzanto> TYtrying to add the canvas dependency 
03:07 < KorvinSzanto> I'm trying to add the canvas dependency, it's saying that it's failing remote: npm ERR!     node-waf configure build
03:09 < luckysmack_> are there any benefits to using mongodb over couchdb with node? outside of the obvious build in features? and vice versa. i havent had a lot of chance yet to look up redis though, how does that fit? it seems to be popular for node as well.
03:11 < chilts> luckysmack_: depends on what you want to do, they both have their uses (with and without node)
03:12 < SomeoneWeird> redis ftw
03:16 < luckysmack_> chilts: well for one app i want to try, the big idea would be data synchronization. so far couch seems best on that. short of that, one app may have many reads and writes (stats tracking for clients for their customers.)
03:16 < luckysmack_> i still need to see how redis compares to them.
03:17 < wltsmrz> In CouchDB (as with Riak) the full data set is replicated across nodes (my understanding)
03:18 < luckysmack_> yea.
03:18 < wltsmrz> Nodes can be anywhere
03:18 < SomeoneWeird> luckysmack, http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis/
03:18 < wltsmrz> And a number of virtual nodes are responsible for parts of that data on a node
03:18 < luckysmack_> though you can set filters on what is replicated too
03:18 < SomeoneWeird> choose the best one for youre program
03:18 < luckysmack_> thanks for the link
03:19 < samholmes> npm install node-inspector -g gave me an error. Trying to update
03:19 < samholmes> hiredis@0.1.14 preinstall: `make || gmake`
03:20 < samholmes> make or gmake aren't commands. I'm running windows, but node-inspector should work on windows?
03:22 < SomeoneWeird> samholmes, install mingw
03:22 < perezd> when using a cp.fork, is there a max length that I can send to a child?
03:22 < SomeoneWeird> if it uses node-waf it won't compile, if it uses gyp it will 
03:23 < samholmes> SomeoneWeird: what's node-waf?
03:23 < WillMarshall> Hey! I've got a Node/client-side app that's suddenly broken
03:23 < SomeoneWeird> the program that compiles native modules to node modules samholmes 
03:23 < WillMarshall> I've reverted to the last working build in Git but it's still broken
03:24 < WillMarshall> I'm getting "module is not defined " as soon as the client loads
03:24 < WillMarshall> Any idea what can cause this?
03:24 < SomeoneWeird> are you exporting things?
03:25 < WillMarshall> SomeoneWeird: Yes
03:25 < SomeoneWeird> how?
03:25 < samholmes> SomeoneWeird: What's a native module vs a node module?
03:25 < SomeoneWeird> samholmes, as in, modules written in C/C++ and modules written in JS
03:27 < AnonymousPrime> SomeoneWeird thx for the tipâ€¦that approach is new to me
03:27 < AnonymousPrime> ha whoops, wrong channel, disregard
03:30 < SomeoneWeird> lolwat
03:31 < tylerflint> anybody know how to reduce the RAM footprint of node?
03:31 < AnonymousPrime> SomeoneWeird too much wine, too many channels open :)
03:32 < SomeoneWeird> :)
03:33 < tylerflint> any node app immediately uses a minimum of 10MB
03:33 < perezd> ryah: yt
03:40 < WillMarshall> My project has suddenly started throwing "require is not defined" and "module is not defined" in the client
03:40 < WillMarshall> I've reset from git and the issue remains
03:40 < WillMarshall> Any ideas what has broken or gone missing?
03:43 < SomeoneWeird> WillMarshall, pastie some of the code else its really hard for us to help
03:44 < WillMarshall> The index file: https://gist.github.com/3233150
03:44 < WillMarshall> I have no real idea where to start with this, though
03:51 < SubStack> WillMarshall: why did you paste some jade instead of vendor.js or app.js?
03:51 < WillMarshall> Because app.js and vendor.js are both unchanged since the last working version
03:54 < SubStack> are you generating app.js or vendor.js?
03:54 < SubStack> I see you have require(), are you using browserify?
03:55 < SubStack> because require doesn't get exported by default anymore if you have entry files
03:55 <@Nexxy> RHETORICAL QUESTION IS RHETORICAL
03:55 < SubStack> YES I KNOW I ALREADY FIGURED EVERYTHING OUT
03:55 <@Nexxy> SubStack, that's nice
03:55 < WillMarshall> SubStack: I am generating them, but they have not been changed. I don't know whether I'm using browserify - I'm using the brunch stack which was handling this stuff
03:55 < SubStack> but I was trying to falsify my hypothesis
03:55 < SubStack> WillMarshall: so whatever janky thing you're using changed out from under you
03:56 < SubStack> this is why you should always be very explicit about version numbers
03:56 < SubStack> valuable learning experience
03:58 < WillMarshall> brb - power cut incoming
04:06 < WillMarshall> Well, that makes no sense. Rebooting fixed it
04:06 < WillMarshall> Unrelated question: jade --watch directory was working yesterday, and is no longer working
04:06 < WillMarshall> Any idea what's up with that?
04:29 < pringlescan> Does anyone know if the formatting a number with commas as thousandths separators (1,000,000) has a specific name?
04:30 < pringlescan> I can't even phrase the question properly much less ask Google!
04:32 < Lorentz> http://en.wikipedia.org/wiki/Decimal_mark
04:32 < AnonymousPrime> pringlescan when i write functions for it i call it commify
04:33 < Lorentz> digit grouping I suppose
04:33 < AnonymousPrime> but i doubt commify is a technical term :)
04:33 < AnonymousPrime> prob should be commaify at the least
04:33 < pringlescan> AnonymousPrime, how did you know that's why I was asking? I have no idea how to properly name a function other people will be looking at
04:34 < pringlescan> prettyNumbers came to mind lol
04:34 < Lorentz> php has it as number_format() iirc
04:34 < AnonymousPrime> that might make more sense to someone else than mine
04:34 < kuja> number format is a pretty common terminology
04:34 < wltsmrz> The ',' in common numerals is a thousands separator
04:35 < pringlescan> wltsmrz, only in the US though right? in Europe it's used for decimals?
04:35 < caio> hi guys, i'm new here. back to irc after a long long time.
04:35 < pringlescan> maybe I could name the function by it's locale
04:35 < pringlescan> *its
04:35 < wltsmrz> Yeah that isn't exactly an international standard
04:35 < AnonymousPrime> thousandify !
04:35 < kuja> depending on locale your thousands separator could be a comma or a period, no? :)
04:36 < wltsmrz> It could also be a sickle and hammer, yes
04:36 < AnonymousPrime> wltsmrz nice
04:37 < kuja> i mean there are other numeral systems that use a period as a thousands separator or comma as a decimal mark. so naming it something like commify might not always be ideal
04:38 < AnonymousPrime> kuja has a point, mine was known to be for US only
04:38 < wltsmrz> I propose that we christen our character the "chick-fil-a" in honor of the restaurant chain
04:39 < AnonymousPrime> if yr getting really wordsmith on it it'd be demarcateThousands()
04:39 < chilts> AnonymousPrime: what about millions and billions? just thousands isn't that useful :)
04:40 < AnonymousPrime> chilts those are all thousands of thousands (etc, etc) right?
04:40 < wltsmrz> You'll find that the ',' separates groups of threes i.e. thuosands
04:41 < pringlescan> I'm pissed, I was going to call it formatImperialNumber or somethingâ€¦ but the United States came up with it and THEN Britan used it, they were using a mid point, but the mathematicians were already using that for multiplication.
04:42 < pringlescan> Good read: v
04:42 < pringlescan> *http://en.wikipedia.org/wiki/Decimal_mark
04:43 < Lorentz> watch as people rage when there are two different values for billion
04:43 < chilts> heh
04:43 < AnonymousPrime> on that note, i'm now calling millions milliards
04:43 < Lorentz> http://en.wikipedia.org/wiki/Long_and_short_scales
04:43 < AnonymousPrime> even though I'm in US
04:45 < pringlescan> Lorentz, this sh*t runs deep. Numbers are not cut and dry when it comes to speaking them or representing them in the expected format for different locales.
04:45 < Lorentz> pringlescan: I know. I've had my fair share of headaches having born in korea.
04:45 < Lorentz> Then moved to Australia.
04:46 < pringlescan> I like short scaleâ€¦ but that's what I grew up with. It's funny, whenever I heard long scale in a non-foreign accent I thought the person sounded stupidâ€¦ an accent usually made them sound intelligent enough for me not to question it. Not sure what that says about me.
04:46 < AnonymousPrime> Lorentz you get double points for introducing me to the term 'false friends'
04:47 < wltsmrz> In Korea they use one system for hours and another for minutes!
04:47 < wltsmrz> Isn't that right Lorentz?
04:47 < Lorentz> AnonymousPrime: Did I mention that before? Can't remember when
04:47 < AnonymousPrime> it's in the long/short scale article you posted
04:47 < Lorentz> Oh, right
04:47 < AnonymousPrime> two words in different languages that appear to mean the same thing but do not
04:48 < Lorentz> wltsmrz: Don't think so, not as I know it
04:48 < wltsmrz> They do :)
04:49 < wltsmrz> The way we would say 5:12 PM, hours are spoken with one set of numbers and they use a separate set to speak the minutes.
04:49 < Lorentz> Oh, that
04:49 < wltsmrz> Ne
04:49 < Lorentz> Hour would be doing da-sut
04:49 < pringlescan> Okay, so somehow instead of refactoring my code and making the synchronous parts asynchronous, I got caught up in how to name a function that formats thousand separators commas the way my country does.
04:49 < wltsmrz> Daseot as we commonly see it
04:49 < Lorentz> and 12 would be yul-doo
04:50 < Lorentz> well no, that's still hour
04:50 < Lorentz> sip-ee
04:50 < Lorentz> former/hour is for counting of sort, as you count hours, and latter/minutes are equivalents from what chinese says it
04:50 < wltsmrz> Right
04:50 < Lorentz> daseot-si sip-ee-bun
04:51 < kuja> nice, another korean?
04:51 < kuja> :)
04:51 < Lorentz> pm so it'd be oh-hoo
04:51 < Lorentz> too many of us around, should go back into hiding
04:52 < pringlescan> HERE WE GO!
04:52 < perezd> are there any events for knowing when the comm channel between a parent/fork is setup?
04:52 < pringlescan> separateThousands
04:53  * AnonymousPrime nods
04:53 < AnonymousPrime> and on that note, i'm out! good night/morning wherever you are
04:54 < kuja> but but, wouldn't the function also handle locale-specific decimal mark? (or shouldn't it?)
04:56 < pringlescan> does node expose system locale in a trivial way that I can do that?
04:58 < kuja> I'm not sure, in php there's a function called number_format() that accepts arguments to specify what the thousands separator (default comma) and decimal mark (default period) are
04:58 < wltsmrz> There's process.env.LANG anyway
05:00 < kuja> pringlescan: https://github.com/dresende/node-locale - this seems relevant
05:00 < WillMarshall> I've made a patch to the Jade node module. I'm submitting a pull request, but until that's sorted is there any neat way I can install my patched version (in Github) via NPM, globally?
05:01 < tjholowaychuk> WillMarshall you can $ npm link
05:01 < tjholowaychuk> in the meantime
05:01 < tjholowaychuk> node watcher functionalty seems to keep getting fucked over
05:01 < tjholowaychuk> for whatever reason
05:01 < tjholowaychuk> might be best to just setInterval the thing and call it a day
05:02 < pringlescan> kuja, thanks, I just can't justify requiring a module in order to format a number according to a format, however, it's somewhat ridiculous that node doesn't expose that...?
05:02 < pringlescan> wltsmrz process.env.LANG = undefined on osx
05:02 < WillMarshall> tjholowaychuk: Thanks man
05:03 < wltsmrz> Dang
05:04 < pringlescan> I bet it "just works" on everything elseâ€¦ except Windows and Minix
05:05 < kuja> I'm on OS X and I have process.env.LANG but it's just the locale name
05:05 < pringlescan> â€¦ and for whatever reason I thought Linux was briefly called Minix before someone convince Linus not to called it Freaks or something.
05:05 < pringlescan> kuja, really?â€¦ I wonder if it's because I ran node from an IDE, let me try from Terminal
05:06 < pringlescan> yup, that'd be it
05:07 < pringlescan> I don't know if that's worth a bug report, it might be better for the IDE to ignore local environment variables to create an agnostic environment. 
05:11 < TehShrike> isaacs: npm's new Google-powered search makes me sad :-(
05:21 < sshaginyan> Can someone please tell me why this doesn't work? /^\d{1,3}\.$/.test(122.);
05:21 < sshaginyan> sorry
05:21 < sshaginyan> nm
05:21 < sshaginyan> go tit
05:22 < jcrew> goat it
05:36 < mscdex> TehShrike: agreed
05:36 < TehShrike> I like the rest of the changes, though
05:46 < ejcweb> Can nodemon monitor changes to other filetypes (specifically, coffeescript), and then call the coffee compiler before restarting node?
05:50 < WillMarshall> When I do something like "require foo", is there a way to specify which file to require if I have two files with matching names but different suffixes?
05:50 < WillMarshall> e.g. foo.hbs and foo.jade, I want to select foo.hbs *not* foo.jade
05:50 < tomb_> specify foo.hbs then
05:51 < WillMarshall> tomb_: Then I get Cannot find module "foo.hbs" 
05:51 < WillMarshall> Although it exists
05:51 < tomb_> specifying the relative path?
05:51 < tomb_> like
05:51 < tomb_> foo = require('./foo.hbs')
05:51 < WillMarshall> Yup - it fails if I provide a suffix
05:52 < WillMarshall> Any suffix
05:57 < ljharb> isn't require for javascript files? jade files and template files aren't javascript
05:59 < WillMarshall> ljharb: Exactly. It's picking up Jade files that it shouldn't
05:59 < ljharb> WillMarshall: no i mean why are you trying to require 'foo' if 'foo.js' doesn't exist?
05:59 < WillMarshall> .hbs
06:00 < WillMarshall> Handlebars templates are imported using require
06:00 < ljharb> as far as i know, require is only for .js files
06:00 < ljharb> really?
06:00 < WillMarshall> Yup
06:00 < ljharb> hm, ok
06:00 < WillMarshall> They get compiled and injected into app.js
06:00 < WillMarshall> But it's seeing the Jade file first and trying to import thati nstead
06:00 < WillMarshall> Which obviously doesn't work
06:00 < ljharb> why do you have foo.jade and foo.hbs?
06:01 < ljharb> two template files with the same name doesn't seem right anyways :-p
06:01 < mscdex> well, for require you can register handlers for different extensions
06:02 < AAA_awright> require() effectively does content-type negotiation on the requested resource
06:03 < AAA_awright> "Is it an ES file? No? Is it a JSON file? No? etc"
06:20 < _d4rklit3> hey
06:21 < _d4rklit3> tryin to figure out how to get the App instance
06:21 < _d4rklit3> http://pastie.org/4376086
06:25 < MerlinDMC> _d4rklit3, singleton pattern? maybe this helps http://coffeescriptcookbook.com/chapters/design_patterns/singleton
06:25 < _d4rklit3> i have used this pattern before
06:25 < _d4rklit3> in my implementation
06:25 < _d4rklit3> the problem is i can't access APp
06:25 < _d4rklit3> i can't call getInstance()
06:29 < MerlinDMC> _d4rklit3, because App is not exportet ... also if it would be you're not getting any exported function with your require
06:30 < _d4rklit3> so i have to set exports:true
06:30 < _d4rklit3> err exports require
06:31 < MerlinDMC> so basically your first problem is that you don't know how to export functions and how to import them in some other script
06:32 < _d4rklit3> regarding coffee/js or browserify?
06:33 < _d4rklit3> like the code gets added to browserify.js
06:33 < _d4rklit3> i have both js files in ther
06:33 < MerlinDMC> _d4rklit3, http://nodejs.org/api/modules.html module.exports and module.require
06:34 < _d4rklit3> OOOOOOOO
06:35 < whiskers75> ops plz
06:35 < whiskers75> opme
06:35 < MerlinDMC> i don't use browserify.js ... from my point of view you're lacking exports and some code around the require to define your vaiable App
06:36 < whiskers75> :(
06:36 < _d4rklit3> i think require is a browerify thing at this point
06:36 < _d4rklit3> because the require method works
06:36 < MerlinDMC> ofc it works ... but does it define any class in your main script by itself?
06:36 < _d4rklit3> http://pastie.org/4376144
06:36 < _d4rklit3> thats my main script
06:37 < _d4rklit3> the App is in there
06:39 < MerlinDMC> but it's not getting defined ... try to change your main.coffee to smth like {App} = require('./app/App')
06:40 < _d4rklit3> tryin to figure out this pattern
06:40 < _d4rklit3> for main.coffee as a bootstrap for my app
06:41 < MerlinDMC> try to change that require, if that works ... read the documentation for module.exports and module.require
06:51 < _d4rklit3> i cant require a simple js file
06:51 < _d4rklit3> i dont get this :(
06:52 < _d4rklit3> and i dont know the shape of the peices
06:52  * _d4rklit3 resorts to whiskey
06:54 < pringlescan> How do I get the decimal part of a number? If I use 123.456 % 1 I won't get 456 I'll get 45600000000 (or something similar). If I do 123.456 - Math.floor(123.456) I don't get .456 either. Do I really have to convert it to a string and then split it by .?
06:56 < _d4rklit3> u can get it as as tring
06:56 < _d4rklit3> string
06:57 < _d4rklit3> stirng.split('.')
06:57 < _d4rklit3> heh
06:57 < pringlescan> I know thatâ€¦ but it seems like Javascript handles decimals weird because when I search for a solution in other languages subtracting the original number from the number cast as an int returns the desired decimal value.
06:58 < MerlinDMC> pringlescan, rounding errors are cruel :)
06:58 < pringlescan> so this is me not knowing about math? 
07:00 < _d4rklit3> MerlinDMC,  YAY
07:00 < _d4rklit3> looks like you do have to do that module.export
07:00 < _d4rklit3> i was getting confused
07:00 < pringlescan> I'm trying to make a fool proof formatNumber() function that does decimal marks and thousand separators based on locale 
07:01 < pringlescan> since I want to post it to the interwebz I didn't want to resort to converting numbers to a string if I didn't have to
07:01 < MerlinDMC> pringlescan, 0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1 = 0.7999999999999999 ;)
07:01 < _d4rklit3> pringlescan, i dont think you want to cast a decimal as an int
07:02 < pringlescan> _d4rklit3, I need to get the integer and decimal portion of a number, so logically I'd be able to get the integer part and subtract it from the given number to get the decimal part
07:02 < pringlescan> but apparently I don't know enough math to know what a rounding error is, so I'll but out and use a .split() lol
07:03 < _d4rklit3> rounding error
07:03 < _d4rklit3> wouldn't be your fault
07:03 < _d4rklit3> lol
07:03 < _d4rklit3> Math.round()
07:03 < _d4rklit3> Math.ceil()
07:03 < _d4rklit3> Math.floor()
07:03 < wltsmrz> ~~()
07:03 < MerlinDMC> pringlescan, you have those rounding errors in many languages ... also in typed languages you can get around that with double instead of float ;)
07:04 < _d4rklit3> 456.32434 - 456 == .32434 // false ?
07:04 < pringlescan> well, I have to convert the number to a string to do a regexp for the thousand seperator, so doing it ahead of time for the split actually isn't really inefficient
07:04 < _d4rklit3> i dont think u need to that
07:04 < ljharb> false, because it's 0.3243400000000065
07:05 < _d4rklit3> ok right
07:05 < pringlescan> I'll post the code in a moment, I'd be very interested for a critique, it's very concise, I think I covered all my basesâ€¦
07:05 < _d4rklit3> what is wrong with .32434?
07:06 < _d4rklit3> err
07:06 < _d4rklit3> what is wrong with: 0.3243400000000065
07:06 < _d4rklit3> pringlescan, what is the end result of this operation? what are you using it for?
07:06 < ljharb> d4rklit3, pringlescan: http://www.2ality.com/2012/04/number-encoding.html
07:08 < pringlescan> ljharb, thanks, i now know what a machine epilipâ€¦ whatever is :-)
07:08 < pringlescan> *epsilon
07:13 < _d4rklit3> MerlinDMC, modules.exports works for my own class
07:13 < _d4rklit3> but i want to include jquery
07:13 < _d4rklit3> which doesn't have modules.export
07:14 < _d4rklit3> heh i don't get this, my co-worker is writing a seperate implementation (way more complicated for enterprise purposes) but he is requiring js files like its np
07:15 < MerlinDMC> _d4rklit3, https://github.com/jmars/jquery-browserify (first hit on google)
07:15 < _d4rklit3> yeah i know, i don't see any point to that tbh
07:15 < _d4rklit3> why do i want ot depend on browserify to import that for me
07:16 < _d4rklit3> i want the absolute most minimal implementation of browserify 
07:16 < _d4rklit3> i just want it to compile my app
07:16 < MerlinDMC> as i told you i don't use browserify.js
07:17 < SubStack> _d4rklit3: that's just a third-party module that works with browserify
07:17 < SubStack> jquery out of the box doesn't export $ using module.exports
07:17 < SubStack> it's just a windowy thing that it pukes into your namespace
07:17 < possibilities> if i want one middleware to set a attribute somewhere so another one can read it what should i set it on?
07:17 < _d4rklit3> i need to talk to my co-worker about what he's doing
07:17 < _d4rklit3> im not sure that shit even works 
07:18 < pringlescan> Can you guys take a look at my should-be-fool-proof Number formatting solution for Node? https://gist.github.com/3234734
07:18 < _d4rklit3> SubStack, lets say i want to import easel.js and preload.js, since there is no 3rd party module for that, do i  have to add module.export to it for it to work?
07:19 < SubStack> _d4rklit3: if you want to require() those things, then yes
07:19 < gillesruppert> _d4rklit3: have you looked at webmake? compiles your code ready for browser use.
07:19 < _d4rklit3> supports coffee?
07:19 < SubStack> but you could also just put script tags for those above the browserify bundle in your html
07:19 < pringlescan> haha I just broke it as I posted it by removing Math.floor() at the bottom before deciding to use .split, nevermind
07:19 < gillesruppert> _d4rklit3: you will need to compile that 1st.
07:19 < gillesruppert> https://github.com/medikoo/modules-webmake
07:21 < _d4rklit3> gillesruppert, i think i like browserify features set more
07:21 < _d4rklit3> but i may biased sincei  spent the last 2 nights figuring it out
07:21 < _d4rklit3> i know next to nothing about node.js' apis right now
07:21 < _d4rklit3> i just want to get to coding my client
07:22 < _d4rklit3> then once im ready for server connections to the client, i will dive more into node apis
07:22 < gillesruppert> _d4rklit3: fair enough. I just wanted something that compiles CJS/node modules for browser use
07:22 < _d4rklit3> gillesruppert, again, im biased
07:22 < _d4rklit3> i am sure webmake is a great lib
07:22 < gillesruppert> and it's very lightweight, but I haven't used browserify properly yet
07:22 < gillesruppert> next project :)
07:23 < SubStack> the point of browserify is to let you use npm modules
07:23 < SubStack> in the browser
07:23 < SubStack> any other features are incidental to that objective
07:23 < _d4rklit3> i like how browserify has sourcemaps integrated with the debug switch
07:24 < _d4rklit3> thats really awesome btw
07:24 < SubStack> I'm fixing watch mode right now too
07:24 < SubStack> it was neglected for too long
07:24 < SubStack> now it will report syntax errors more usefully
07:26 < _d4rklit3> SubStack my co-worker is writing a wrapper for browserify called compiln
07:27 < _d4rklit3> to my understanding it handles large compile jobs
07:27 < _d4rklit3> with multiple type dependencies
07:28 < _d4rklit3> basically compiles the entire front-end  (jade,stylus,coffee,js) by reading a manifest file
07:29 < _d4rklit3> its pretty cool stuff, i hope our work lets him deploy it open-source
07:29 < SubStack> asking permission to release open source modules, how absurd!
07:30 < SubStack> employers need to get with the times
07:30 < SubStack> especially if a github profile is the new rÃ©sumÃ©
07:32 < xydudu> in production, socket.io and engine.io, which one is better?
07:33 < _d4rklit3> well he wrote it for work
07:33 < _d4rklit3> so u know ; 
07:34 < pringlescan> Well, we don't have a legal departmentâ€¦ so I thought we should follow the GPL because if we can't afford a legal department now, I doubt we could afford one to cover our ass if we get caught not following it.
07:35 < SubStack> don't use GPL
07:35 < SubStack> GPL is an open source anti-pattern
07:35 < pringlescan> I don't, I use MIT, see? https://gist.github.com/3234734
07:35 < SubStack> it just makes it more frustrating for open source projects to share code effectively
07:35 < SubStack> ah yeah
07:36 < pringlescan> Above is a link to what I think is a fool-proof locale aware number formatting function that uses the proper decimal marks and thousand separators based on the servers locale
07:36 < pringlescan> I want someone to find something wrong with it and yell at me, because I learn by being ridiculed by people on IRC. That's how I started to learn Perl when I was 9.
07:37 < _d4rklit3> does b.require still work?
07:37 < _d4rklit3> "require maps no longer supported"
07:37 < [AD]Turbo> hola
07:44 < _d4rklit3> SubStack, isn't browserify supposed to require jquery-browserify itself?
07:50 < _d4rklit3> ok well, i dont know if this require map stuff is even supposed to work or if its buggy : /
07:50 < _d4rklit3> SubStack, https://github.com/substack/node-browserify/issues/161
07:54 < _d4rklit3> ok i give up
07:55 < _d4rklit3> nobody seems to have the same implementation (or a working one) that i can find. seems like anyone who figures this out just keeps it to themselves
07:58 < SubStack> _d4rklit3: don't use require maps
07:58 < _d4rklit3> seems to be kind of working with alias
07:58 < SubStack> _d4rklit3: browserify doesn't require jquery-browserify
07:58 < _d4rklit3> but $(document).ready ->   doesn't fire
08:00 < _d4rklit3> SubStack, do you mean that browserify does not require: npm install jquery-browserify ?
08:01 < SubStack> not really sure what you're on about
08:02 < _d4rklit3> i want this: http://pastie.org/4376449     to work in my app bootstrap
08:03 < SubStack> _d4rklit3: do $ = require 'jquery-browserify' first
08:03 < _d4rklit3> ok
08:03 < _d4rklit3> do i need: browserify({ require : { jquery : 'jquery-browserify' } })
08:03 < SubStack> no
08:03 < _d4rklit3> what about alias?
08:03 < SubStack> why are you even using the api version of it
08:03 < SubStack> just use the command line tool
08:03 < SubStack> you don't need aliases
08:04 < _d4rklit3> because i want it to compile my script when the server starts
08:04 < _d4rklit3> ?
08:04 < SubStack> you're making everything harder
08:05 < _d4rklit3> what i dont understand about the command line way is how to make it happen automatically when the server starts
08:05 < _d4rklit3> the command line operations will create an output.js file that i can use
08:06 < SubStack> yes do that
08:06 < _d4rklit3> well my challange is to have the app.js do it
08:06 < SubStack> your challenge?
08:06 < _d4rklit3> it is challanging for me
08:07 < SomeoneWeird> require('child_process').exec('whatevertocompilehere')
08:07 < SubStack> also that ^^^
08:07 < _d4rklit3> hey now
08:07 < _d4rklit3> thats interesteing
08:07 < SubStack> _d4rklit3: if you don't know what you're doing you shouldn't be using the api version
08:07 < SubStack> I barely ever use the api version of browserify as it is
08:08 < _d4rklit3> would you recommend the SomeoneWeird approach to dynamic compiling?
08:08 < _d4rklit3> i mean the command line is clearly easier to use
08:09 < SubStack> just use the command line tool
08:09 < SubStack> there's even a --watch mode that recompiles your bundles when files change
08:15 < _d4rklit3> so -w will just rebuild anytime i change a file in the dependency chain?
08:19 < SubStack> _d4rklit3: yes
08:19 < SubStack> and I'm hacking on that feature right now so it will work even better very soon
08:20 < _d4rklit3> browserify ./source/main.coffee -o ./public/bundle.j -d -w
08:20 < _d4rklit3> that looks right?
08:20 < _d4rklit3> err
08:20 < _d4rklit3> js
08:21 < SubStack> throw in -v too to print out when files get written
08:21 < _d4rklit3> throws an error
08:21 < _d4rklit3> which is weird
08:21 < _d4rklit3> because it didn't 
08:21 < _d4rklit3> but i accidentally closed the terminal, round 2 it breaks
08:21 < _d4rklit3> "cannot call method 'replace' of undefined"
08:22 < _d4rklit3> i did not change anything
08:22 < omar> hi
08:24 < _d4rklit3> i cant remember if i did it difrerently
08:26 < _d4rklit3> fuck man this just worked, i must be losing it
08:28 < mscdex> anyone know of a libssh2 binding for node?
08:28 < pringlescan> TIL: Calling .toLocaleString on a number in Javascript turns it into a pretty number according to the locale! i.e. 1234.50 becomes 1,234.50 or 1.234,50 or 1 234.50
08:29 < omar> nodejs real time web documents? help me
08:29 < radiodario> mscdex: nope, i wrote some nodejs that used ssh and i just used process
08:29 < mscdex> hrmm, guess i'll write one then :-D
08:29 < radiodario> you sir are winning
08:30 < mscdex> it seems to fit really well too:  MIT licensed, sync and async, use your own sockets, etc
08:30  * _d4rklit3 has lost his mind
08:30 < _d4rklit3> my code has not changed
08:30 < _d4rklit3> nothing has changed
08:31 < _d4rklit3> yet i close the bash teriminal and re-open it, browserify breaks
08:32 < pringlescan> _d4rklit3, Have you tried turning it off and on again?
08:32 < _d4rklit3> yes >:
08:32 < _d4rklit3> why does that work
08:32 < _d4rklit3> is this because i use windows
08:33 < _d4rklit3> i am being punished for windows aren't i?
08:33 < mscdex> yes
08:33 < pringlescan> dudeâ€¦ you're not seriously doing web development on windows? atleast when something goes wrong on a mac you can snip it's balls and make it slightly more BSD without fux0ring it up too bad
08:34 < pringlescan> try to mirror your dev enviornment and production as closely as possible, get 8gb of ram and run a vm and use your IDE in windows if you want
08:34 < _d4rklit3> lol
08:34 < _d4rklit3> pringlescan, did you know about this thing called .net
08:34 < pringlescan> you can use VCS or shared file systems, do something man, you're giving yourself gray hairs
08:34 < _d4rklit3> and MS really urges anyone who devs .net to use windows
08:34  * mscdex shakes a fist at .NET
08:34 < _d4rklit3> my day job also urges me to use .net
08:34 < pringlescan> yeah I read a book on C# when I was â€¦ 14 or 15 and I said, wait a minute, I'd never pay licensing fees for M$ and went back to things I could afford
08:35 < _d4rklit3> well this is why im here
08:35 < pringlescan> I'm sorry you work for the man! he's all like, if it doesn't cost money it most not be good
08:35 < _d4rklit3> luckily i dont have to pay for shit
08:35 < _d4rklit3> at my job
08:35 < pringlescan> BUT, he's also very cheap, so he's in an existential crisis
08:35 < _d4rklit3> i just need to know C#
08:35 < _d4rklit3> also php, actionsript, js, etc
08:35 < _d4rklit3> but recently, mainly C#
08:36 < pringlescan> actionscript, does that imply flash? seriously I feel like your company uses leaded gas in it's model t's on the way to the world's fair
08:37 < _d4rklit3> i dont really use flash much anymore
08:37 < _d4rklit3> but i work for an ad agency
08:37 < pringlescan> they just heard about eugenics and are trying to cleanse the world of people who use browsers other than IE on Windows 98
08:37 < _d4rklit3> i like doing "creative" work
08:37 < pringlescan> _drk4lit3, that explains it, I lucked out and worked for start-ups that were like, "get it done, use whatever, we're developers too, make a good argument for it"
08:37 < _d4rklit3> im tryin to get into startup land
08:38 < _d4rklit3> obviously no start-up would dare use .net
08:38 < _d4rklit3> unless they have tons of backing
08:38 < _d4rklit3> all honeys are getting their panties wet over node and python these days
08:38 < pringlescan> man if someone tells you what tool to use for the job, that's oppressive, if I was a plumber and someone told me to use PVC on their water, and I was like, but mam, CPVC is safe for hot water temps, the stuff you want me to use will make your ovaries fall off and then you'll call me back to replace it and have to pay me again
08:38 < _d4rklit3> dude i work for a company called Trailerpark
08:38 < SomeoneWeird> <pringlescan> yeah I read a book on C# when I was â€¦ 14 or 15 and I said, wait a minute, I'd never pay licensing fees for M$ and went back to things I could afford < huh?
08:39 < _d4rklit3> our VP is really into azure
08:39 < pringlescan> nah, start-ups can use microsoft shit for free, for like a few years and if they aren't solvent I don't think they pay anything
08:39 < _d4rklit3> but azure is slow, expensive, and has flaws
08:39 < _d4rklit3> release schedules are weird
08:39 < pringlescan> SomeoneWeird, yes before the cloud, Windows servers were expensive and sucked to work with, you had to click all these things and couldn't use files for anything, it was a bad time. I didn't want to develop software for them.
08:39 < _d4rklit3> azure as a whole is pretty sweet because its so integrated and easy to use
08:40 < pringlescan> Also, when people still had dial-up why make desktop applications that required a hundred meg download for a framework?
08:40 < SomeoneWeird> pringlescan, you were talking about .net ...?
08:40 < SomeoneWeird> windows comes with .net now
08:40 < omar> hey 
08:40 < omar> bro
08:40 < omar> web services document? nodejs
08:40 < omar> ?
08:40 < _d4rklit3> i just awnt to make canvas apps
08:40 < _d4rklit3> like i used to make flash apps
08:40 < pringlescan> SomeoneWeird, do you know how much linux costs me per server? $0, how much does a windows license cost? Mono didn't exist.
08:40 < _d4rklit3> because i loved making flash apps 
08:40 < omar> php and nodejs real time , see facebook.
08:40 < _d4rklit3> but that dead asshole Jobs had to ruin it for us
08:41 < pringlescan> _d4rklit3, it was the right thing to do 5 years from now when HTML5 grows a pair
08:41 < SomeoneWeird> pringlescan, but now it does :)
08:41 < _d4rklit3> well im doin "HTML5" now
08:41 < _d4rklit3> and by HTML5 i mean canvas
08:42 < pringlescan> SomeoneWeird, I wouldn't put my job on the line suggesting we use Mono in deployment, but if you like sleepless nights and convincing your bosses of things they'd never doâ€¦ lol be my guest
08:42 < pringlescan> any business who'd agree to mono would probably just suggest to use windows or better yet java
08:42 < SomeoneWeird> hey i'm not saying its good
08:43  * _d4rklit3 misses flash 
08:43 < _d4rklit3> she was a good platform
08:43 < SomeoneWeird> the only fees you pay for developing on .net is the windows license
08:43 < SubStack> browserify@1.14.4 reports syntax errors nicely, fixes watch mode
08:43 < _d4rklit3> fast, unified.... sigh
08:43 < _d4rklit3> SubStack, is there something i have to do diffirently with command line to get my boostrap to run on load?
08:43 < _d4rklit3> the code compiles, but nothing happens when i load it
08:44 < pringlescan> SomeoneWeird, have you looked into how much Microsoft charges per CPU core on a server OS? Or how much you have to pay to use large amounts of ram?
08:44 < SubStack> you just browserify main.js -o bundle.js
08:44 < SubStack> then <script src="bundle.js"></script>
08:44 < _d4rklit3> i knows
08:44 < _d4rklit3> i do that
08:44 < _d4rklit3> the file loads
08:44 < _d4rklit3> console is empty
08:45 < SomeoneWeird> pringlescan, you're kidding right? i said paying for the server is the only thing
08:46 < pringlescan> you said the only fee is the windows license, I assumed you meant for the developer, not EVERY SINGLE DEPLOYED server
08:46 < _d4rklit3> wtf im not sure whats going on here, file is getting rewritten...
08:46 < _d4rklit3> but not updated on server
08:46 < pringlescan> even in the cloud you pay 31% more just for the server
08:46 < SomeoneWeird> wow ok calm down dude
08:47 < pringlescan> _d4rklit3, my last work had to buy me a macbook because nothing I did on Windows worked, or it slowed me down significantly. I used to hate Mac and I ran Linux as my main O/S for years and missed Adobe and games. But it's a great time to switch to the darkside.
08:48 < pringlescan> that's the only reason why I cringe when you mention development on Windows :-| when I know odds are you're deploying to *nix
08:48  * _d4rklit3 looks down and notices he's on a macbook
08:48 < pringlescan> you're on a macbook and you're running windows?
08:48 < _d4rklit3> :P
08:48 < SomeoneWeird> lollllllll
08:48 < pringlescan> ohâ€¦ sorry
08:48 < pringlescan> why in the hell
08:48 < _d4rklit3> gammmmmeeeees
08:48 < pringlescan> I bought my sister a mac and she did the same thing
08:48 < ljharb> at least thats better than being on a PC and running windows.
08:48 < SomeoneWeird> dualboot _d4rklit3 
08:48 < _d4rklit3> i do
08:48 < _d4rklit3> gots bootcamp
08:48 < SomeoneWeird> ...?
08:48 < _d4rklit3> this silly 128gb ssd
08:48 < pringlescan> ljharb, true that, unless it's a retina display and you can't open it
08:48 < _d4rklit3> need more room
08:49 < SomeoneWeird> get a bigger hdd then
08:49 < _d4rklit3> yesh
08:49 < _d4rklit3> that is the solution
08:49 < pringlescan> _d4rklit3, Newegg had a 240gb Corsair for $179 with rebate a week or two ago
08:49 < _d4rklit3> ago?
08:49 < _d4rklit3> fshit
08:49 < _d4rklit3> i would have bought the crap out of it
08:49 < pringlescan> _D4rklit3, do you use your optical drive
08:49 < SomeoneWeird> where you located
08:49 < _d4rklit3> no i dont
08:49 < pringlescan> you can pop the old HDD in the optical drive location with a very cheap adapter and it'll work good
08:50 < _d4rklit3> is that easier on the unibodies
08:50 < _d4rklit3> i was going to do it on my 2008 mbp
08:50 < pringlescan> but if you have a new macbook pro, put the ssd in the optical bay and put the HDD in the HDD position so the drop sensor works
08:50 < _d4rklit3> but it looked like an insane process
08:50 < pringlescan> is that the one with the long battery?
08:50 < _d4rklit3> no fuck that
08:50 < _d4rklit3> the retina one/
08:50 < _d4rklit3> ?
08:51 < pringlescan> _d4rklit3, late 2008? with the long battery
08:51 < _d4rklit3> um...
08:51 < _d4rklit3> no
08:51 < _d4rklit3> 2007 then
08:51 < _d4rklit3> not the unibody
08:51 < _d4rklit3> i have a 2011 now
08:51 < pringlescan> ohâ€¦ then it might have an IDE drive bay
08:51 < pringlescan> for the optical
08:51 < _d4rklit3> which imo is the best MBP apple is going to build, the new ones are terrible
08:51 < _d4rklit3> can't upgrade shit
08:52 < _d4rklit3> who the hell solders in the ram
08:52 < Benvie> real men
08:52 < pringlescan> Compaq did on my first home PC
08:52 < _d4rklit3> and then uses non-standard ram? like the engineers couldn't figure out how to squeeze an extra few mm to fit regular 240pin DIMMs
08:52 < pringlescan> Benvie, have you ever had ram die? :-|
08:52 < _d4rklit3> pringlescan, where is compaq now?
08:52 < Benvie> yeah
08:52 < Benvie> but then I punched my computer the moon like real men do
08:53 < Benvie> =D
08:53 < _d4rklit3> pringlescan, Benvie you ever wanted to upgrade your ram?
08:53 < pringlescan> â€¦ My computer was actually recalled, the Compaq Presario 4508 had a Quantum Bigfoot drive in it that was defective.
08:53 < pringlescan> they never mailed us or fixed it or anythingâ€¦ because they proved it after the useful life of the computer had already passed
08:53 < _d4rklit3> heh not your compaq, all compaqs?
08:53 < Benvie> no because I burn old computers like real men...I guess? =(
08:53 < _d4rklit3> ALL DEAD
08:53 < _d4rklit3> real rich men lol
08:55 < whiskers75> How do you read and save arrays to/from files?
08:55 < Benvie> make sure to burn it really hot so we can get rid of this overbearing "greenhouse" thing
08:55 < pringlescan> Benvie, no the bigfoot only works when I put it in the freezer before I try to recover my first C codeâ€¦ which were examples from "Learn C in 24 hours" from Sam's
08:56 < pringlescan> BUT I STILL WANT THEM. and My Simcity 2000 Network Edition which really only shipped from OEM's and was amazing.
08:56 < _d4rklit3> brb
08:56 < Benvie> what is this bigfoot thing, also simcity 2000 was awesome
08:56 < pringlescan> Network Edition man! NOBODY EVEN KNOWS ABOUT IT
08:56 < pringlescan> it was way better
08:56 < whiskers75> bump
08:56 < pringlescan> and you could dial a friend over the tele and play against him
08:56 < Benvie> I had the dos version
08:57 < Benvie> it didn't have launch arcos that launched
08:57 < whiskers75> can we get back on topic? :)
08:57 < pringlescan> "This version also features a revamped http://en.wikipedia.org/wiki/User_interface. Instead of a static http://en.wikipedia.org/wiki/Toolbar, items are accessed via cascading menus from the right of the screen, resulting in more screen real-estate for SimCity itself, without sacrificing functionality."
08:57 < ljharb> pringlescan: i could do that already on my mac with any game, and Zterm.
08:57 < pringlescan> It was also Maxis's first game to use event driven programming which led to the creation of Node.JS decades later.
08:57 < Benvie> ;p;
08:58 < Benvie> I thought the topic was implementing simcity in node
08:58 < whiskers75> ???
08:58 < Benvie> my mistake
08:58 < pringlescan> ljharb, you must have been rich! my family ate pb&j for weeks to pay for our first computer.
08:59 < SubStack> pringlescan: http://github.com/substack/tilemap http://substack.net/projects/datacenter
08:59 < Benvie> does anyone use node on Windows here or is that not a thing
08:59 < ljharb> in the 90s?
08:59 < whiskers75> Benvie: GET LINUX :)
09:00 < whiskers75> Benvie: or mac
09:00 < Benvie> I have that as well
09:00 < pringlescan> Benvie, I tried, but I got frustrated, don't develop on a different o/s then you deploy to, or run a linux VM in windows and deploy your code to that, it won't slow you down much.
09:00 < Benvie> not mac
09:00 < whiskers75> How do you read and save arrays to/from files?
09:00 < pringlescan> Mac just makes it easier to switch over. But to be honest, Linux with a package manager is like bread and butter.
09:00 < Benvie> I'm not really in need of help, was just curious who's in the crowd tonight
09:01 < pringlescan> A bunch of savages who write lean and mean asynchronous code just like mom used to make.
09:01 < Benvie> I deploy on all three platforms so
09:01 < Benvie> mac is the weakest link currently in fact
09:01 < Benvie> but it works
09:01 < ljharb> lol what?
09:01 < whiskers75> somebody unban the ircbot
09:02 < whiskers75> it is harmless without ops :)
09:02 < pringlescan> ljharb, he's right, Mac's suck because they make everything look awesome, then you look at them on Windows and they look like crap
09:02 < Benvie> need a cocoa expert to round out the mac part
09:02 < ljharb> lol what again?
09:02 < Benvie> I'm not deploying server software
09:02 < ljharb> pringlescan: windows users are used to things looking like crap. its good to meet user expectations.
09:02 < pringlescan> all I know is if you know javascript you can even make Mac widgets for the dashboard with the programming skills of a drunken infant
09:02 < ljharb> Benvie: cocoa for node?
09:02 < Benvie> indeed
09:02 < ljharb> why exactly?
09:03 < Benvie> cocoa, gtk, and win32api
09:03 < ljharb> the web browser is your gui, why would you need anything else?
09:03 < Benvie> because it needs to live in something
09:03 < Benvie> it needs a host
09:03 < ljharb> that's node
09:04 < Benvie> node's awesome for many system APIs
09:04 < ljharb> what exactly are you building?
09:04 < Benvie> but not for creating a window
09:05 < ljharb> the browser is a window. what do you need a different window for?
09:11 -!- Topic for #Node.js: THIS IS WHY WE CANT HAVE NICE THINGS
09:11 -!- Topic set by isaacs [~isaacs@173-203-97-118.static.cloud-ips.com] [Wed Aug  1 22:16:08 2012]
09:11 [Users #Node.js]
09:11 [@jayne           ] [ Daegalus      ] [ gry             ] [ Lorentz        ] [ pvilchez       ] [ tassmjau       ] 
09:11 [@konobi          ] [ daleharvey    ] [ gsf             ] [ lrvick         ] [ pyykkis        ] [ tassmjau_      ] 
09:11 [@marienz         ] [ dan64-        ] [ gshipley        ] [ Ls_Away        ] [ qbit           ] [ taterbase      ] 
09:11 [@maxogden        ] [ darkreign     ] [ guybrush        ] [ luckysmack     ] [ quinnirill     ] [ tblobaum_      ] 
09:11 [@Nexxy           ] [ Daroth        ] [ gwoo            ] [ lukegb         ] [ r126f          ] [ tchopper       ] 
09:11 [@ryah            ] [ davv3         ] [ gyaresu         ] [ m0             ] [ radiodario     ] [ tco            ] 
09:11 [@tomaw           ] [ dawolf        ] [ halfhalo        ] [ magn3ts        ] [ radiofree      ] [ tdmackey       ] 
09:11 [ [[zz]]          ] [ dazoe         ] [ happosade       ] [ majek          ] [ radmiraal      ] [ teadict        ] 
09:11 [ [AD]Turbo       ] [ dcamp         ] [ hatch           ] [ malcolmva      ] [ rafmc_         ] [ tec27          ] 
09:11 [ \ask            ] [ deadtime      ] [ heatxsink       ] [ maleknet       ] [ raja           ] [ Ted            ] 
09:11 [ \mSg            ] [ dec           ] [ heavysixer      ] [ mape           ] [ rampr          ] [ TehShrike      ] 
09:11 [ ^esc            ] [ deedubs       ] [ heroux          ] [ marlun_        ] [ randomachiever ] [ teixeira_      ] 
09:11 [ __class__       ] [ defts         ] [ herzogharker    ] [ Martz          ] [ Rantanen       ] [ tek            ] 
09:11 [ __main__        ] [ dekz          ] [ hide-           ] [ maru_cc__      ] [ raphaelT_      ] [ tellnes        ] 
09:11 [ _br_            ] [ Delapouite    ] [ hillerstorm     ] [ matjas         ] [ raydeo         ] [ templaedhel    ] 
09:11 [ _lleo           ] [ deltab        ] [ hipertracker    ] [ matt_c         ] [ Raynos         ] [ teoh           ] 
09:11 [ _ralph          ] [ denysonique   ] [ hipsters_       ] [ mattikus       ] [ rcaskey        ] [ tetsu          ] 
09:11 [ _Renegade       ] [ deoxxa        ] [ hipsterslapfight] [ mattp_         ] [ rcs            ] [ texinwien      ] 
09:11 [ _th_n           ] [ Derander      ] [ hlindset        ] [ mattyod        ] [ redir          ] [ tg             ] 
09:11 [ `3rdEden        ] [ dereknelson   ] [ Hodapp          ] [ MaxGaudron     ] [ redir_         ] [ theblackbox    ] 
09:11 [ a_suenami       ] [ dested        ] [ Hosh            ] [ mcav           ] [ reid           ] [ theBrettman    ] 
09:11 [ AAA_awright     ] [ devaholic     ] [ iaincarsberg    ] [ McMAGIC--Copy  ] [ rektide        ] [ theCole        ] 
09:11 [ ablomen         ] [ devdazed      ] [ ianl`_          ] [ mde            ] [ relix          ] [ thedaywillcome ] 
09:11 [ abraxas         ] [ diamonddog    ] [ idoru           ] [ med_           ] [ rendar         ] [ thedjinn       ] 
09:11 [ adamramadhan    ] [ ding          ] [ igl1            ] [ medice         ] [ retornam       ] [ TheFuzzball    ] 
09:11 [ adzymaniac      ] [ distracteddev ] [ iksik           ] [ mekwall        ] [ rgmarcha_      ] [ TheMoonMaster  ] 
09:11 [ Aikar           ] [ djao_         ] [ im0b            ] [ mephux         ] [ rhutchison     ] [ TheNumb        ] 
09:11 [ ajpiano         ] [ djbell        ] [ imarcusthis     ] [ MerlinDMC      ] [ RichardBronosky] [ therealkoopa   ] 
09:11 [ akshayms        ] [ djcoin        ] [ ImBcmV8n        ] [ mertimor       ] [ richardshaw    ] [ thewanderer1   ] 
09:11 [ alek_br         ] [ dkords        ] [ inarru          ] [ meso           ] [ rioter         ] [ thirdknife_    ] 
09:11 [ aliem           ] [ dleary        ] [ Industrial      ] [ metellus       ] [ rio{           ] [ thisandagain   ] 
09:11 [ AllStruck       ] [ dmilith       ] [ inimino         ] [ methoddk       ] [ rj-code        ] [ thorsteinsson  ] 
09:11 [ alta            ] [ dmrz          ] [ innociv         ] [ mickhansen     ] [ rmill          ] [ thurmda        ] 
09:11 [ amccloud        ] [ dmwuw         ] [ Inoperable      ] [ mikeal         ] [ Robdgreat      ] [ tim_smart      ] 
09:11 [ andrewffff      ] [ dnyy          ] [ Internet13      ] [ mikegerw1tz    ] [ robinson_k     ] [ timeturner     ] 
09:11 [ andrewffff_     ] [ doffm         ] [ intripoon_      ] [ mikey_p|afk    ] [ robotmay       ] [ timoxley       ] 
09:11 [ angelsYMH       ] [ dogmatic69    ] [ irclogger_com   ] [ mikl1          ] [ roger_raymond  ] [ TimTim`        ] 
09:11 [ antdillon       ] [ doki_pen      ] [ ircretary       ] [ MitchW         ] [ Rolken         ] [ tk             ] 
09:11 [ AntelopeSalad   ] [ dommy_        ] [ isaacs          ] [ mjr84          ] [ rook2paw1      ] [ tlync          ] 
09:11 [ antti_s         ] [ don_jones     ] [ ivaldi          ] [ mmalecki       ] [ royh           ] [ tmpvar         ] 
09:11 [ apa-_           ] [ dpino         ] [ ivan\           ] [ moonlite       ] [ rphillips      ] [ tn             ] 
09:11 [ appr            ] [ Drager        ] [ ivan`           ] [ Mortchek       ] [ rtgibbons[away]] [ Tobbe          ] 
09:11 [ apraxas         ] [ Draggor       ] [ JackNorris      ] [ mrkurt         ] [ rudolfrck      ] [ tomb_          ] 
09:11 [ arcatan         ] [ dragon        ] [ jackyyll        ] [ MrMaksimize    ] [ RushPL         ] [ tomilaine      ] 
09:11 [ aromasca_       ] [ Dreamer3      ] [ jacobolus       ] [ mrmoneyc       ] [ russell_h      ] [ TomRone        ] 
09:11 [ asherkin        ] [ drey          ] [ jacobrask       ] [ MrNibbles      ] [ russfrank      ] [ tomtomaso      ] 
09:11 [ ashnur          ] [ dRiN          ] [ jacobw          ] [ MrNko          ] [ rvagg          ] [ TomWij         ] 
09:11 [ astropirate     ] [ DrPizza       ] [ jaequery        ] [ MrTopf         ] [ ryanrolds_w    ] [ TomY           ] 
09:11 [ augustl         ] [ dscape        ] [ Jakey           ] [ mscdex         ] [ ryanRT         ] [ toothrot       ] 
09:11 [ aus3ys          ] [ dshaw_        ] [ jamiep          ] [ msteinert      ] [ ryanseddon     ] [ topaxi         ] 
09:11 [ average_drifter ] [ dsirijus      ] [ janelwang       ] [ munro          ] [ rymate1234     ] [ tornad         ] 
09:11 [ Axsuul          ] [ dthompso99    ] [ janmower        ] [ murvinlai      ] [ s5fs           ] [ traph          ] 
09:11 [ azend           ] [ dubenstein    ] [ jareiko         ] [ nail_          ] [ saapas         ] [ trb            ] 
09:11 [ baer            ] [ duck_tape1    ] [ JasonSmith      ] [ naquad         ] [ salazr_        ] [ trepan         ] 
09:11 [ balboah         ] [ duckspeaker   ] [ jayk            ] [ Nasga          ] [ salsamontes    ] [ trodrigues     ] 
09:11 [ barneybook      ] [ duncanbeevers ] [ jbpros          ] [ nebiros        ] [ salva          ] [ tuhoojabotti   ] 
09:11 [ bburhans        ] [ dz0ny         ] [ jcap            ] [ necolas        ] [ Sam-T          ] [ Twelve-60      ] 
09:11 [ beasty          ] [ easternbloc   ] [ jcrew           ] [ neersighted    ] [ samholmes      ] [ txm            ] 
09:11 [ beawesomeinstead] [ ebarch        ] [ jdgeier         ] [ neme           ] [ samstefan      ] [ txxt           ] 
09:11 [ ben_alman       ] [ ecthiender    ] [ jeedey          ] [ neoesque       ] [ SamuraiJack    ] [ Typo           ] 
09:11 [ Bennit          ] [ ed2093        ] [ jefferai        ] [ neumino        ] [ satyr          ] [ ugisozols      ] 
09:11 [ BennyLava       ] [ edr           ] [ jerrysv_        ] [ niallo         ] [ sawrubh        ] [ unchi_         ] 
09:11 [ bentruyman      ] [ edwardly      ] [ jesusabdullah   ] [ nicholasf      ] [ scastillo      ] [ upgrayeddd     ] 
09:11 [ Benvie          ] [ egadcable     ] [ jetienne        ] [ niftylettuce   ] [ scott_gonzalez ] [ Validatorian   ] 
09:11 [ bicranial       ] [ einaros       ] [ jgoss           ] [ niko           ] [ sdboyer        ] [ vDubG          ] 
09:11 [ billy           ] [ elijah-mbp    ] [ jimbot          ] [ niloy          ] [ SecretAgent    ] [ vesln          ] 
09:11 [ blakmatrix      ] [ elliottcable  ] [ jimrhoskins     ] [ NimeshNeema    ] [ Sembiance      ] [ VesQ           ] 
09:11 [ blevs_          ] [ else-         ] [ jimt            ] [ nivardus       ] [ Senji          ] [ veturi         ] 
09:11 [ Blorb           ] [ Elv13         ] [ jkridner_       ] [ nlf            ] [ sente          ] [ vhost-         ] 
09:11 [ bmatusiak       ] [ emilsedgh     ] [ jMCg            ] [ NodeX          ] [ serapath       ] [ Viehzeug       ] 
09:11 [ bodisjw         ] [ EnosFeedler   ] [ jmoney          ] [ Nomon__        ] [ sh1ftpgdn      ] [ vinc_          ] 
09:11 [ boltR           ] [ epa_          ] [ jmorris         ] [ nonnikca1      ] [ sha0coder      ] [ vincentmac     ] 
09:11 [ BombStrike      ] [ Epeli         ] [ JmZ_            ] [ nphase         ] [ Shadda         ] [ vinte          ] 
09:11 [ Bonuspunk       ] [ ephesius      ] [ jn              ] [ nsm            ] [ shajith        ] [ visnup_        ] 
09:11 [ booo            ] [ er1c_         ] [ joeytwiddle     ] [ nuba           ] [ shaker         ] [ voodootikigod  ] 
09:11 [ bradgignac      ] [ eugeneware    ] [ John            ] [ Nuck           ] [ ShaneHudson    ] [ wadey|away     ] 
09:11 [ bradleymeck     ] [ eventualbuddha] [ jolo2           ] [ odyniec        ] [ shanlar        ] [ wang           ] 
09:11 [ bren2010        ] [ Ezku          ] [ jonaslund       ] [ ohcibi         ] [ shanse         ] [ wankdanker     ] 
09:11 [ BrianE          ] [ Fabryz        ] [ JonMarkGo       ] [ olegp          ] [ Shrink         ] [ wao            ] 
09:11 [ brianloveswords ] [ faulkner      ] [ jonpacker       ] [ omni5cience    ] [ shurain        ] [ wavded         ] 
09:11 [ brooss_         ] [ fermion       ] [ joschi          ] [ onre           ] [ sideshowcoder  ] [ Weasel-Soup    ] 
09:11 [ Bwild           ] [ fevermind     ] [ josh-k          ] [ ootje          ] [ simewn         ] [ wereHamster    ] 
09:11 [ ByteCrunch      ] [ filleokus     ] [ jpe_            ] [ optixx         ] [ simpan         ] [ whiskers75     ] 
09:11 [ cainus          ] [ FIQ           ] [ jrm2k6          ] [ opus_          ] [ sinful         ] [ widox          ] 
09:11 [ callumacrae     ] [ firedfox      ] [ jspiros         ] [ orlandovftw    ] [ sir_tyrion     ] [ Will|          ] 
09:11 [ captain_morgan  ] [ FireFly       ] [ jvolkman        ] [ orospakr       ] [ SirFunk        ] [ wink_          ] 
09:11 [ castr0          ] [ fivetanley    ] [ Jygga           ] [ ossareh        ] [ sj26           ] [ Wizek          ] 
09:11 [ cbobo           ] [ flagg0204     ] [ jzacsh_         ] [ othiym23       ] [ SkareCrow|W    ] [ wizonesolutions] 
09:11 [ cce             ] [ Flam9         ] [ k1ttty          ] [ owen1          ] [ skeptic        ] [ wltsmrz        ] 
09:11 [ chadi           ] [ flexd         ] [ kaen            ] [ owenb          ] [ skunkape       ] [ wolftankk      ] 
09:11 [ chadskidmore    ] [ Fli-c         ] [ Kai`            ] [ Owner          ] [ skunkwerks     ] [ wookiehangover ] 
09:11 [ chapel          ] [ fly-          ] [ kanzure         ] [ pandark_       ] [ Slashbunny     ] [ wycats         ] 
09:11 [ charlieschwa    ] [ foldedcat     ] [ kassyvora       ] [ patspam        ] [ slaskis        ] [ xat-           ] 
09:11 [ Cheery          ] [ foraks        ] [ kborchers       ] [ paulbaumgart   ] [ SlexAxton      ] [ xerox          ] 
09:11 [ Chepra          ] [ forzan        ] [ keeto           ] [ paulwe         ] [ slickplaid     ] [ xocel          ] 
09:11 [ chiel           ] [ framlin       ] [ keks__          ] [ payara         ] [ slide          ] [ xSmurf         ] 
09:11 [ chilts          ] [ Frank         ] [ kennethd        ] [ pct            ] [ smartPudding   ] [ xydudu         ] 
09:11 [ chjj            ] [ FredC         ] [ Kester          ] [ pecke01        ] [ smilen         ] [ yanush         ] 
09:11 [ chnops          ] [ freeformz     ] [ keyvan          ] [ pekim          ] [ SomeoneWeird   ] [ yawnt          ] 
09:11 [ ChoiZ           ] [ freewil       ] [ khrome          ] [ perezd         ] [ sorensen       ] [ ybit           ] 
09:11 [ choo            ] [ frewsxcv      ] [ kimico          ] [ petschm        ] [ spectre256     ] [ ybit2          ] 
09:11 [ chrisbuchholz   ] [ Frippe        ] [ Kingdutch       ] [ ph^            ] [ Spion_         ] [ yenz_          ] 
09:11 [ chrisdickinson  ] [ Fuu           ] [ KiNgMaR         ] [ philips_       ] [ sreeix         ] [ yhpark         ] 
09:11 [ chrisinajar     ] [ gabriel       ] [ kolm            ] [ PhilK          ] [ sriley         ] [ yogurt_truck   ] 
09:11 [ CIA-93          ] [ garann        ] [ kraft           ] [ pieterv        ] [ stagas         ] [ yorick         ] 
09:11 [ cjm             ] [ Garo_         ] [ kranius         ] [ piezo          ] [ stalled        ] [ your_name      ] 
09:11 [ cletus          ] [ Garrick       ] [ krishna         ] [ pig            ] [ standoo        ] [ YoY            ] 
09:11 [ clone1018       ] [ gartenstuhl   ] [ krnlsndrs       ] [ Pilate         ] [ stbuehler      ] [ Ytserman       ] 
09:11 [ cmr_            ] [ gavin_huang   ] [ KShiho          ] [ Piotras        ] [ stef           ] [ yuwang         ] 
09:11 [ cmwelsh         ] [ gaYak         ] [ ktrask          ] [ plato          ] [ stevedomin     ] [ zaheera_       ] 
09:11 [ codelahoma      ] [ gdbz          ] [ ku              ] [ pneftali_      ] [ stevengill     ] [ zak_           ] 
09:11 [ codepal         ] [ gekko_        ] [ kuja            ] [ pokoli         ] [ stkhlm         ] [ zaphod1994     ] 
09:11 [ coffeecup       ] [ gerard0       ] [ KwikkSilva      ] [ polymar        ] [ stride         ] [ Zauberfisch    ] 
09:11 [ confoocious     ] [ gf3           ] [ kwmiebach       ] [ polyrhythmic   ] [ stutter        ] [ zedas          ] 
09:11 [ Connorhd        ] [ ghoti         ] [ Lartsa          ] [ pontius        ] [ stylus         ] [ zemanel        ] 
09:11 [ context         ] [ gicode        ] [ Lee-            ] [ poolshark      ] [ styol          ] [ zemm           ] 
09:11 [ cosmincx        ] [ gila          ] [ leev            ] [ possibilities  ] [ SubStack       ] [ zenazn         ] 
09:11 [ CoverSlide      ] [ gildean       ] [ LeftWing        ] [ ppcano         ] [ substans       ] [ zentooo        ] 
09:11 [ cpg             ] [ gillesruppert ] [ legind          ] [ pquerna        ] [ sugyan         ] [ zhaomy         ] 
09:11 [ cpsubrian       ] [ gkatsev       ] [ leonardo        ] [ prasm_         ] [ superjoe       ] [ zivester       ] 
09:11 [ Cr8             ] [ gmci          ] [ leptonix        ] [ pretty_function] [ sveisvei       ] [ zk             ] 
09:11 [ creationix      ] [ gnarf         ] [ levi501d        ] [ prettyrobots   ] [ SvenDowideit   ] [ zodiak         ] 
09:11 [ criswell        ] [ goraxe        ] [ lhb             ] [ pringlescan    ] [ svnlto         ] [ zomg           ] 
09:11 [ crodas          ] [ gorbiz_       ] [ ljharb          ] [ Proditor       ] [ swaj           ] [ zorzar         ] 
09:11 [ Crowb4r         ] [ Gottox        ] [ lmatteis        ] [ przemoc        ] [ Taar779        ] [ zz_lazyshot    ] 
09:11 [ CStumph         ] [ graeme_f      ] [ loc_            ] [ psino          ] [ tahu           ] [ zz_shykes      ] 
09:11 [ cxreg           ] [ gregmore_     ] [ localidiot      ] [ ptrlv          ] [ tanepiper      ] [ zzak           ] 
09:11 [ Cymor           ] [ Gregor        ] [ loffe           ] [ purr           ] [ tankpilot      ] 
09:11 [ cyphase         ] [ Gruni         ] [ loglaunch       ] [ pvankouteren   ] [ taquter        ] 
09:11 -!- Irssi: #Node.js: Total of 772 nicks [7 ops, 0 halfops, 0 voices, 765 normal]
09:11 -!- Channel #Node.js created Sat Jan 30 07:48:24 2010
09:11 -!- Irssi: Join to #Node.js was synced in 25 secs
09:12 < Benvie> made a screencast even http://www.youtube.com/watch?v=Vc1hFIGAw28
09:13 < Nuck> Aww they got rid of ops for all
09:13 < SubStack> browserify tests are failing unexpectedly on travis >_<
09:14 < SubStack> including a bunch of noise about vm-browserify o_O
09:14 < pringlescan> goodnight all, have fun with your JS, keep drinking the kool aid
09:16 < Benvie> koolaid isn't very good =/
09:51 < flexd> clearly you have not had enough
09:51 < flexd> :D
09:51 < flexd> actually, I've never tried it.
09:58 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
10:20 < flexd> hmm.. node is nice.. express is nice.. varnish is also nic
10:20 < flexd> e
10:20 < flexd> This is all nice! :D
10:20 < CIA-93> node: Ben Noordhuis v0.8 * r6db9e12 / (230 files in 6 dirs): deps: remove openssl apps and tests - https://github.com/joyent/node/commit/6db9e12de5e35f360249f4dab190b3bd052fccf0
10:20 < Bux_> hello, hello!
10:20 < flexd> I could hit the front page of reddit, hacker news and slashdot at the same time and probably survive now :o
10:30 < Bux_> notes
10:31 <@Nexxy> hai Bux_ :)
10:31 < SubStack> --watch mode is so awesome now in browserify
10:31 < Bux_> hii
10:31 < SubStack> and the syntax error reporting!
10:31 < Bux_> all the ops got deopped :/
10:31 < SubStack> I'm iterating much faster on this big client side app now
10:32 <@Nexxy> did you say "big" and "app" in the same sentence?
10:32 <@Nexxy>  wow SubStack, I don't think I know you anymore.
10:32 < SubStack> YES well
10:32 < SubStack> I mean big as in the output bundle size
10:32 < SubStack> 478k uncompressed
10:33 < SubStack> most of which is modules from npm
10:33 <@Nexxy> ohh
10:33 < SubStack> and when it takes >5 seconds for the whole thing to compile it super sucks
10:33 < suhani> hi, can any one tell me how to upgradenode
10:33 <@Nexxy> yeah that was happening to me when I was bundling jquery
10:33 <@Nexxy> suhani, on what platform?
10:33 < SubStack> but now I can just make changes to the file as it goes and it can write the new bundle pretty much immediately
10:33 < suhani> ubuntu
10:33 < suhani> linux
10:33 < SubStack> Nexxy: well jquery is pretty fast now with caching
10:34 <@Nexxy> suhani, just download the new .tar.gz and untar, ./configure, make && make install
10:34 < SubStack> but if you just have a lot of files in your dependency graph it's slow
10:34 <@Nexxy> I will have to revisit this
10:34 <@Nexxy> I couldn't seem to get caching working last time I was playing with it
10:35 < SubStack> caching should be automatic
10:35 < suhani> nexxy: thanks, does it willl upgrade my current version?
10:36 < rvagg> suhani: Chris Lea's repo is updated very quickly with each Node release, probably worthwhile if you're not so comfortable building on your own: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
10:36 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
10:36 < rvagg> (see the Ubuntu section)
10:36 < flexd> suhani: it kind of depends how you installed node.
10:38 <@Nexxy> shurain, yes
10:39 < theblackbox> morning all, I'm new to JS and Node but I'm trying my best to learn fast. I'm stuck at the moment and wondering if someone here might point me in the right direction as it appears I'm just not 'getting it' when it comes to asynchronous callbacks and how this requires me to deal with data (http://pastebin.ca/2176790)
10:41 < flexd> theblackbox: what kind of test system are you using?
10:41 < theblackbox> mocha
10:41 < flexd> In Mocha there is a function you pass as a callback
10:41 < flexd> one moment, I can paste something
10:41 < flexd> https://github.com/flexd/zabbix.js/blob/master/test/test.js
10:42 < flexd> Doesnt entirely look the same
10:42 < flexd> but its mocha
10:43 < Joes> Hi. I have strange node.js behavior. Application is websocket server (running with help of sockjs-node). Problem is that RSS keeps growing, but v8 heap is constant.
10:44 < Joes> node is 0.8.4
10:45 < Joes> reproducible in dev environment, but valgrind is happy
10:45 < Joes> is it normal behavior for node to eat as much memory as possible?
10:45 < Joes> or it is high memory fragmentation problem
10:49 < rvagg> Joes: there's been a bit of discussion on memory use/behaviour on the mailing list recently (google group), I haven't been following the details but perhaps you should review that
10:50 < paveq> hi
10:50 < paveq> if I store a timer in a object, does it get deleted (clearTimeout) when the object is deleted?
10:51 < paveq> eg. I have something like this.timer = setTimeout(..
10:52 < freewil> how would it get deleted
10:52 < paveq> it calls one method of object this, and that method sets a new timer into the variable (calling itself again)
10:52 < paveq> I need to take care object actually gets garbage collected when no longer needed, since the timer keeps reference to it
10:53 < depy> are you sure you can even store timer like this?
10:53 < depy> because your snippet will just call the setTimeout function
10:53 < freewil> yeah i think if you overwrite it like that it would essentially be deleted since the reference to it would be lost
10:54 < paveq> according to docs setTimeout returns timeoutId
10:54 < depy> hm
10:54 < paveq> I was just wondering if I need to call clearTimeout on the timeoutId explicitly, or will timer get deleted when deleting the object
10:55 < freewil> paveq i think you need to call clearTimeout explicitly
10:55 < paveq> there are no destructors right?
10:56 < freewil> sounds like what you are talking about would be similar to this
10:56 < freewil>   GNU nano 2.2.6                       File: test.js                                                    
10:56 < freewil> var t;
10:56 < freewil> for (var i = 0; i < 2; ++i) {
10:56 < freewil>   t = setTimeout(function() {
10:56 < freewil>     console.log('timer!');
10:56 < freewil>   }, 3000);
10:56 < freewil> }
10:57 < freewil> that demonstrates that simply overwriting the timeoutId doesnt "delete" it
10:57 < freewil> the timer will still execute
10:59 < paveq> hmm, now where should I call clearTimeout() then..
10:59 < paveq> is it possible to somehow detect "delete" inside an object, ie. make a destructor to do clearing
11:00 < depy> why do you even want to delete that timer anyway? garbage collection will take care of that
11:00 < depy> or do you have some higher purpouse reasons?
11:00 < paveq> depy: I think it won't
11:00 < paveq> timer holds reference to function it will call
11:00 < paveq> and so the function can't get deleted
11:01 < depy> set the reference to null 
11:01 < paveq> http://paste.debian.net/181646/
11:01 < paveq> heres the code I have, it should explain my self-calling function :P
11:02 < paveq> depy: how?
11:02 < wltsmrz> timeout = null
11:02 < wltsmrz> Or in your case foo.timer
11:02 < depy> I'm not even sure what you are trying to do in that snippet... Can you explain?
11:03 < depy> and I see no reference holding problem 
11:03 < mscdex> has anyone else had issues recently with github's orange notifications indicator not showing up?
11:03 < paveq> depy: there is another piece of code that reads hosts from LDAP database, creates those and stores them into array
11:04 < paveq> it also checks if any hosts have gone from the database, and then issues delete on them
11:04 < paveq> but I don't know if Host-objects will ever be deleted when there is this timer
11:04 < MerlinDMC> mscdex, yes ... here it does not show on frontpage
11:04 < freewil> paveq, whats the condition to stop the ping "loop"
11:04 < mscdex> good, at least it's not just me
11:04 < paveq> nothing, it won't stop
11:05 < paveq> it shouldn't, except when the Host object is deleted
11:05 < MerlinDMC> mscdex, but it also was marked as read ... maybe because i read the email?
11:05 < freewil> paveq.. maybe make a Host.stop() function or something?
11:05 < mscdex> mine are listed as unread, but there is no orange numeric indicator like there usually is. i have to keep "polling" the link to check for new notifications :-\
11:06 < paveq> then I have to call it from outside of the Host..
11:06 < paveq> I wish I could just make a destructor to take care of cleaning
11:06 < depy> paveq how many Host objects do you have?
11:06 < depy> when running
11:06 < paveq> 1600+
11:08 < paveq> problem with calling stop() before delete: its not very elegant and breaks OOP principles
11:09 < freewil> i dont see how
11:09 < depy> why do you have another timer in ping defined in prototype?
11:09 < paveq> if I decide to use this Host object in somewhere else, I would have to remember stop() needs to be called..
11:09 < freewil> although the picture is foggy from here
11:09 < paveq> depy: thats the loop
11:09 < paveq> otherwise it would run only once
11:10 < paveq> I could use setInterval though.. but the same issue is there
11:10 < depy> so you want to run this how long?
11:10 < freewil> paveq, would setInterval() be more appropriate here?
11:10 < paveq> depy: until its deleted
11:10 < depy> and when it should be deleted?
11:11 < paveq> when the database reading object issues delete self.ldapObjects[entry];
11:11 < paveq> ldapObjects is associative array holding those Hosts, and entry here is the Host in question
11:11 < depy> wait
11:11 < stagas> paveq: delete some.property[prop] doesn't delete/destroy the object
11:12 < depy> exactly
11:12 < paveq> then how do I delete
11:12 < depy> you can't
11:12 < depy> garbage collection
11:12 < stagas> paveq: it only deletes the reference, if the object has tasks then it's referenced so it will continue to run
11:12 < paveq> yes, that is my problem
11:13 < paveq> any way to check references from inside an object?
11:13 < depy> I think you overcomplicated this :)
11:13 < freewil> this isnt java ;)
11:13 < freewil> just make a stop function :)
11:13 < paveq> perhaps I could issue clearTimeout when references count to 1 (knowing the timer holds one refence)
11:13 < depy> I'm not sure about your problem, but...
11:14 < depy> make a while loop that uses setInterval and listens for "stop" event whick breaks the loop
11:15 < stagas> paveq: you need a .destroy() method to clear the timeout, then delete the reference in your objects collection and it will get gc'ed
11:16 < paveq> I guess that will do
11:16 < depy> that too yes :)
11:16 < paveq> so there is no destructors in the sense that some method would get called when delete is issued on an object?
11:16 < depy> no
11:17 < stagas> paveq: it's tricky though because .exec is async  you may clear the timeout and the callback may come afterwards and reinstall it
11:18 < stagas> paveq: so you need a switch property and check  that in the .exec callback to see if you have already killed the object
11:18 < depy> stagas, maybe he can count those and wait for the last callback?
11:18 < stagas> paveq: and not set the timeout again
11:18 < paveq> I will just make boolean property "willStop", which when set true prevents timers to be set
11:18 < stagas> yes
11:19 < pdgreen> I'm writing some code that needs to search through the file system, but I feel like my approach is wrong.  In order to make things asyncronous, I have create a really like change of callbacks.  Essentially a new callback is added for every file that is searched.  That seems wrong to me.  Is a there a simpler approach?  With this approach, isn't it possible to run out of stackspace.
11:19 < pdgreen> * a really LONG CHAIN of callbacks *
11:20 < rvagg> pdgreen: perhaps you should use a lib like 'async'
11:20 < rvagg> to help you manage them
11:21 < depy> aren't methods removed from stack when resolved?
11:21 < rvagg> don't worry too much about how many callbacks you have on the go until you run into a real problem, callbacks are node, embrace the async
11:21 < pdgreen> I can check that out, thanks.
11:21 < stagas> pdgreen: async callbacks don't add to the stack
11:21 < grifx> Hello everybody
11:22 < grifx> I'm french
11:22 < depy> Hi, I'm slovenian :)
11:22 < grifx> And I don't understand something :
11:22 < grifx> depy: Outch not lucky
11:22 < grifx> :p
11:22 < stagas> pdgreen: you do waste memory though but you should be good for a few K callbacks
11:22 < depy> grifx,  Why not, Slovenia is a beautiful country :
11:23 < grifx> You may wish to install Node in a custom folder instead of a global directory. 
11:23 < grifx> what is a global directory ?
11:23 < depy> damn ctrl+w in xchat
11:23 < grifx> the directory where i uncompress the node.js ?
11:23  * rvagg assumed you were really offended depy
11:23 < grifx> ssed*
11:24 < depy> lol :D
11:24 < depy> No, I'm not easily ofended... :)
11:24 < rvagg> grifx: global directory is probably referring to a directory where it can be accessed system-wide rather than for just you as a user
11:25 < rvagg>  /usr/bin, /usr/local/bin, whatever
11:25 < grifx> ah ok
11:25 < rvagg> or ... c:\progra~1\ ...
11:25 < grifx> it will not be my www
11:25 < rvagg> no, not www
11:25 < grifx> ok perfect
11:25 < grifx> rvagg: thanks
11:28 < rvagg> I'm Australian btw grifx.. that apparently matters
11:29 < grifx> rvagg: lol
11:29 < grifx> no
11:30 < depy> an aussie :P
11:30 < grifx> it's just to say that i speak french
11:30 < grifx> that's why i didn't understand
11:30 < rvagg> fair nuff
11:31 < grifx> But i downloaded the node.js i putted it in my workspace(www) 
11:31 < grifx> and now
11:31 < grifx> i typed  make
11:31 < grifx>   CC(target) /home/grifx/workspace/node/out/Release/obj.target/openssl/deps/openssl/openssl/crypto/bio/bss_fd.o
11:31 < grifx> There were a lot of things with like this line
11:31 < rvagg> yep, that's fine
11:32 < rvagg> btw, if you're not comfortable building then perhaps you should download an installer for your system or use a package if you're on an OS that doesn't have an installer
11:32 < rvagg> https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
11:32 < grifx> rvagg: thanks
11:33 < rvagg> some are updated more frequently than others
11:33 < grifx> ok
11:33 < grifx> I thought node.js was a little stuff
11:33 < grifx> 1 mo ...
11:34 < rvagg> 'little' is a relative term... 
11:35 < grifx> that's why i said
11:35 < grifx> 1mo
11:36 < grifx> in size
11:36 < rvagg> mb?
11:37 < rvagg> ah, mo is short for "mÃ©gaoctet" ?
11:37 < grifx> yes
11:37 < grifx> in france yes
11:37 < grifx> :)
11:37 < CIA-93> node: Ben Noordhuis v0.8 * r34c750d / (lib/net.js test/simple/test-net-listen-fd0.js): net: fix .listen({fd:0}) - https://github.com/joyent/node/commit/34c750d7a96ad29c023d117f55239b94e90d23d5
11:38 < rvagg> hm, I've never paid attention to size actually, it's certainly not large but it has grown a bit with bundled SSL and others, and V8 isn't tiny either
11:39 < rvagg> my current compiled node binary is 9.9 mo/mb
11:39 < bnoordhuis> rvagg: that's because symbols aren't stripped
11:40 < bnoordhuis> rvagg: try this -> strip $(which node)
11:40 < rvagg> meh
11:40 < mmalecki> (keep in mind that it makes debugging painful)
11:40 < bnoordhuis> yes, that's why we don't strip them :)
11:42 < rvagg> I still can't make it fit onto these floppy disks... I'll have to split it!
11:43 < mmalecki> bnoordhuis: great! I've seen some makefiles which do that as a part of `make`
11:44 < bnoordhuis> rvagg: rar will do that for you!
11:45 < rvagg> I'll have to find my rar floppy to install it
11:47 < mmalecki> rvagg: yeah, that's painful, especially with bigger deployment
11:47 < mmalecki> running with a floppy to over 3 k servers takes some time
11:47 < rvagg> indeedy, got to be careful of dust, that's why I always do 3 copies
11:50 < rvagg> my first experience with Linux was in 1995, I rode my bike back and forth from the computer room at university to my house with a box of 10 floppies, copying across Slackware 1.2 or something to my 486 *I was so excited!*
11:53 < CIA-93> node: Ben Noordhuis v0.8 * r50e00de / (Makefile tools/install.py tools/installer.js): installer: fix cross-compile installs - https://github.com/joyent/node/commit/50e00de92a7563f39ff50f9a53c7e2ed15e556c6
12:39 < Jonghwan> are there some methods to set UserAgent header in http moudle?
12:39 < Bux_> its buid in
12:40 < Bux_> res.writehead(200, { content-type: "text/html", UserAgent: "useragenthere" });
12:40 < bnoordhuis> 'User-Agent'
12:40 < Jonghwan> aha
12:40 < Bux_> oh sozz :P
12:40 < Jonghwan> thanks :)
12:41 < Bux_> np :)
12:42 < bnoordhuis> baudehlo: ping
12:43 < mscdex> is there an example anywhere of getting the uv_tcp_t handle in C++ land from a JS socket object?
12:44 < mscdex> :S
12:44 < Bux_> idk @_@
12:46 < bnoordhuis> mscdex: src/tcp_wrap.cc
12:48 < mscdex> yeah, i see UVHandle(), but do i just cast the result of Call()'ing that function to a pointer somehow?
12:54 < mscdex> bnoordhuis: so something like this?: uv_tcp_t* = (uv_tcp_t*)uvhandle_fn->Call(this, 0, NULL)->ToInt32();
12:54 < mscdex> er uv_tcp_* handle =
12:54 < bnoordhuis> mscdex: no, nothing like that. grep for the UNWRAP macro
12:54 < mscdex> hmm ok
13:09 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:17 < grifx> Hi everybody again
13:25 < mscdex> bnoordhuis: still no luck: https://gist.github.com/0b29ddfcc440450b6dc6
13:33 < aus3ys> can anyone suggest good node ORM module for any of NoSQL db?
13:35 < drudge> aus3ys: none!
13:35 < aus3ys> drudge: why so?
13:35 < drudge> i dunno, it's easy enough without. but if you were going to use one, mongoose (for mongodb) is nice
13:36 < aus3ys> does it have validations?
13:37 < drudge> aus3ys: yup
13:41 < marshall> aus3ys: mongoose
13:41 < marshall> aus3ys: although I don't really like ORMs
13:41 < marshall> aus3ys: I've heard good things about mongoose for mongodb
13:41 < RLa> what R stands for in ORM when you use mongo? :)
13:42 < MerlinDMC> RLa, Request! :P
13:42 < marshall> the orm handles the relationall mapping, instead of it being built into the db
13:43 < lulzilla> how do you read PUT data?
13:43 < lulzilla> POST from req.body,ok. but what about PUT?
13:43 < cainus> I never understood schemas in a driver for a schemaless database
13:43 < marshall> i haven't really used it, just heard good things
13:43 < lulzilla> talking about Mongoose?
13:44 < marshall> oh, yeah, I haven't really used PUT either
13:44 < lulzilla> wonder if it is even possible
13:44 < cainus> lulzilla: using express?
13:44 < lulzilla> yes
13:44 < jt2190> cainus: I agree with you... schema on top of schemaless feels like a sign of a mismatch
13:45 < cainus> should be in req.body too I imagine... you're using bodyParser?
13:45 < lulzilla> yea, doesn't work bro
13:45 < jt2190> cainus: or perhaps a better phrase 'model on top of modelless'
13:45 < cainus> jt2198: it's actually pretty hard to add a doc schemalessly with mongoose too
13:46 < cainus> I just use the mondodb-native lib and a validation library
13:46 < jt2190> cainus: haven't tried it... I'm purposely delaying introducing Mongoose on the project I'm doing now, specifically because I'm concerned about 'schema lock-in' too early
13:47 < cainus> lulzilla: it's do-able, because I do it... lemme check what magic I'm working
13:47 < jt2190> cainus: same here... just mongodb-native
13:47 < cainus> oooh nice new expressjs.com design
13:48 < jt2190> cainus: it's like Ryan Dahl said in a presentation... static typing is a premature optimizaton. Applying a schema is kind of the same thing.
13:49 < bnoordhuis> that ryan dahl guy, what does he know?
13:49 < Owner> math
13:49 < jt2190> bnoordhuis: hahaha
13:49 < Owner> that is all
13:50 < Owner> what do you guys think of Go
13:50 < bnoordhuis> mscdex: you need to #include "tcp_wrap.h" (not installed by default)
13:50 < Owner> god
13:50 < lulzilla> sure
13:50 < cainus> lulzilla: ultimately you have to hook into the data event of req and put the body together from there... probably some middleware does it for you though... still looking
13:50 < RLa> Owner, haven't seen many projects using it
13:50 < lulzilla> hmm, maybe just hack it myself?
13:50 < Owner> how does express.js somehow make you an awesome 'shiny shiny' designer? http://expressjs.com/applications.html
13:50 < RLa> i would judge by the real code written in it
13:51 < lulzilla> I think express should support it by default
13:51 < RLa> Owner, does it?
13:51 < Owner> RLa~# i dunno, everyone and their dog can make appealing designs except me
13:51 < cainus> lulzilla: express wants to allow you to do that yourself... in case you want to do stuff *as* the request comes in, instead of waiting for it to complete 
13:51 < Owner> maybe the code looks like shit, so i can feel better about myself
13:52 < RLa> cainus, lulzilla doesn't req.body work with PUT?
13:52 < cainus> something makes me think the bodyParser only cares about form-url-encoded bodies...
13:52 < RLa> hm, so it depends how you send the PUT request?
13:53 < cainus> still trying to find that middleware... I guess it's in connect
13:53 < RLa> Owner, maybe hire a designer
13:53 < lulzilla> nah, doesn't work
13:54 < Owner> RLa~# nah i dont do this for money
13:54 < mscdex> bnoordhuis: yeah, i did that.
13:54 < cainus> lulzilla: what content-type are you PUTting? json?
13:54 < mscdex> bnoordhuis: i'm using node-gyp to build, so it should insert the proper include paths
13:54 < lulzilla> Content-Type: application/x-www-form-urlencoded
13:54 < bnoordhuis> mscdex: windows? TCPWrap is not exported
13:54 < mscdex> yeah windows
13:54 < mscdex> ack
13:55 < Owner> RLa~# ill keep making white pages with blue links
13:55 < cainus> lulzilla: okay you're weird, but that's possible :)
13:56 < mscdex> bnoordhuis: so i'm stuck?
13:56 < bnoordhuis> mscdex: yes
13:56 < bnoordhuis> well
13:56 < lulzilla> dudes, forgive me my foolishness, my conent-length was wroooonggg!!!
13:56 < lulzilla> it works
13:56 < lulzilla> thanks
13:56 < RLa> make sure you give length in bytes not characters
13:56 < mscdex> bnoordhuis: a fix for the next  0.8 release? ;-)
13:57 < lulzilla> good tip, Rla
13:57 < bnoordhuis> mscdex: yes - you could copy the definition of TCPWrap into your own project
13:57 < cainus> lulzilla: ha cool
13:57 < bnoordhuis> but that's not stable over time, of course
13:57 < mscdex> yeah
14:02 < CIA-93> libuv: Ben Noordhuis master * r9f7cdb2 / (5 files in 2 dirs): unix: add relaxed accept() setting - https://github.com/joyent/libuv/commit/9f7cdb20aa29c99a0917ca776bc705f5ef947737
14:05 < baudehlo> bnoordhuis: hola
14:06 < bnoordhuis> baudehlo: hey
14:06 < bnoordhuis> how do you handle STARTTLS in haraka?
14:06 < bnoordhuis> if you handle it, that is
14:07 < baudehlo> we have a custom shim class
14:07 < baudehlo> https://github.com/baudehlo/Haraka/blob/master/tls_socket.js
14:08 < bnoordhuis> baudehlo: okay, thanks. curious, is all :)
14:08 < baudehlo> no worries :)
14:08 < baudehlo> it works on both inbound and outbound.
14:09 < baudehlo> and basically provides socket.upgrade()
14:09 < baudehlo> but it hacks some internals which is probably bad.
14:09 < baudehlo> e.g var verifyError = (pair.ssl || pair._ssl).verifyError();
14:17 < Spion_> I wonder if there is an editor supporting the following workflow: write some code and as you write it, send it to an active REPL, then execute lines in the REPL in order to test the sent code and after you're done with that export the part of the REPL buffer which was written manually for testing to a new unit test file (which you will further edit to make it a complete functional unit test)
14:19 < totallymike> Well that's no good.
14:19 < Spion_> what isn't?
14:19 < totallymike> The mass of irccloud timeouts
14:20 < Spion_> note, by "send it to an active REPL as you write it" I mean via a keyboard shortcut - select code and press the shortcut to eval it into the active REPL, preferably a part of the editor.
14:21 < totallymike> Spion_: it sounds like you've got a fun new project :)
14:21 < Spion_> Maybe :D
14:22 < totallymike> All in all it does sound neat.  I was worried at first you meant like every time you closed a statement it would fire it off.  All I could think was "oh god what if you typo?"
14:22 < Spion_> No, just something better than copy-paste and window switching
14:23 < totallymike> And I could just picture red everything.
14:23 < baudehlo> Isn't there a sublime text plugin to do that?
14:23 < Spion_> e.g. eval-paragraph, eval-line, eval-file
14:23 < totallymike> I'm sure somebody's worked that into their flow.  I'm pretty certain Emacs can at least do it for some things.
14:23 < creationix> totallymike, sounds like a great interface to the atomic bomb launching system
14:23 < totallymike> heh
14:23 < baudehlo> also sounds a bit like lighttable.
14:24 < totallymike> I'd love an eval-block function
14:24 < creationix> doesn't firefox have that
14:24 < baudehlo> http://www.kickstarter.com/projects/ibdknox/light-table
14:24 < Benvie> nope
14:24 < creationix> it's "scratchpad"
14:24 < Benvie> that is a thing
14:24 < Benvie> dpesm
14:24 < Spion_> what would I use in emacs, js-mode?
14:24 < Benvie> doesn't do any of that though
14:24 < Spion_> I'll try all :)
14:24 < Spion_> sublime is a bit of a turn-off though.
14:25 < Benvie> I can give you a couple visual tools that don't do that stuff
14:25 < Benvie> but could be used in the pursuit
14:25 < Benvie> https://github.com/appjs/appjs and  https://github.com/Benvie/Node.js-Ultra-REPL
14:26 < totallymike> The only problem I see is that for larger projects it could mess you up but good.
14:26 < totallymike> Benvie: I was trying to remember the name of your repl recently ;)
14:26 < RLa> Spion_, js2-mode
14:26 < Benvie> and here's both in one picture https://github.com/appjs/appjs/raw/master/examples/chrome-in-node-repl.jpg
14:26 < Benvie> ;)
14:26 < Benvie> I made the art
14:27 < Benvie> ;) ;)
14:27 < RLa> Spion_, https://github.com/mooz/js2-mode
14:27 < totallymike> Hm.  I might try to make a vim plugin.
14:27 < totallymike> (Probably won't get further than the vimscript documentation though)
14:28 < totallymike> baudehlo: This kickstarter project looks a lot like somebody is trying to fund a project based on that video demonstration of somebody livecoding a JS game.
14:29 < totallymike> In fact his script in the demo video sounds remarkbly like the other video.
14:29 < baudehlo> totallymike: I'm just surprised they got so much interest in it. It seems like such a dumb idea to me. *shrug*
14:30 < totallymike> I can see some immediate benefits.
14:31 < totallymike> Imagine you wrap some bdd scaffolding in this thing, so you get a nifty animated window to watch the tests as they run.
14:31 < baudehlo> yeah but â€¦ side effects
14:31 < totallymike> Not so great for automated testing, but it sounds fun
14:31 < totallymike> And also I wouldn't want to do my actual development in such an environment.
14:33 < totallymike> You'd essentially have to, if I'm imagining it correctly, tear down the environment every time you wanted to evaluate a new block.
14:33 < Benvie> maybe 
14:33 < Benvie> unless you know magic which I do
14:33 < totallymike> What if you eval'd a var Foo, and later you assigned to foo.  Now you'd have both sitting in your namespace
14:34 < totallymike> So all your code which played with either would work
14:34 < totallymike> knowing magic helps
14:34 < totallymike> I'm also making it up off the top of my head, never having delved into it.
14:35 < totallymike> If there's already a solution to such a problem, or if it doesn't actually exist because jesus lord you shouldn't write your code such that it just assumes all variables are cool all the time, I'd love to hear about it.
14:41 < mscdex> bnoordhuis: would a PR to export TCPWrap be accepted into v0.8?
14:41 < bnoordhuis> mscdex: no, and not in master either - TCPWrap is an implementation detail
14:42 < mscdex> so how am i supposed to write bindings for something that operates on sockets directly? :S
14:42 < bnoordhuis> mscdex: the short answer is you don't
14:42 < mscdex> :\
14:43 < bnoordhuis> the slightly longer answer is that you provide your own wrapper object and pass tha
14:43 < bnoordhuis> *that to the net.Socket constructor
14:45 < strk> grep: writing output: Resource temporarily unavailable ( node myapp | grep ... )
14:45 < strk> max open file limit hit ?
14:45 < mscdex> well i was hoping to write a libssh2 binding where the end user would create their own net.Socket, connect, and then pass the socket into the binding's function
14:46 < mscdex> so it would Just Work without having to require anything special
14:50 < Hadeel> hi
14:50 < wltsmrz> Greetings
14:52 < scott_gonzalez> Why would `npm intall node-syslog` default to compiling Debug instead of Release?
14:58 < Benvie> theories besides terminator-esque scenarios I assume?
15:12 < CIA-93> node: isaacs v0.8.5-release * rf5c07b6 / (232 files in 29 dirs): npm: Upgrade to 1.1.46 - https://github.com/joyent/node/commit/f5c07b65a09afe2f9571efece91a4898d7b79404
15:12 < CIA-93> node: isaacs v0.8.5-release * r37537d5 / (2 files): test: stdin error messages - https://github.com/joyent/node/commit/37537d5720a563cb63929a0f4014491467767874
15:12 < CIA-93> node: isaacs v0.8.5-release * r7747bcd / (AUTHORS ChangeLog src/node_version.h): 2012.08.02, Version 0.8.5 (Stable) - https://github.com/joyent/node/commit/7747bcd9cfb5540b50c891898f53fc75e572001d
15:15 < addisonj> so, normalcy has returned, the experiment failed, you really CAN'T give everyone ops
15:15 < addisonj> also 0.8.5, I feel so lame running 0.6 now
15:19 < marshall> res.locals are driving me nuts
15:21 < Guest26864> addisonj: we'll try it again later.
15:22 -!- mode/#Node.js [+o isaacs] by ChanServ
15:22 -!- mode/#Node.js [+o addisonj] by ChanServ
15:22 -!- mode/#Node.js [+o isaacs] by ChanServ
15:23 <@isaacs> whoa, that was weird.
15:23 <@isaacs> irsi hiccuped and lost my nick
15:23 < mmalecki> actually, what happened with all the ops?
15:23 < CIA-93> node: isaacs v0.8.5-release * rcef414b / ChangeLog : wip - https://github.com/joyent/node/commit/cef414bb332b75241824fdc59d32893d911abe8f
15:23 < jcrew> someone started trying to bot and started spamm
15:24 < jcrew> and irritating locals
15:24 < mmalecki> lame!
15:24 < tuhoojabotti> hmm
15:24 < tuhoojabotti> Noo, mut ops are gone.
15:24 < jcrew> owner said he was going to ddos irc
15:25 < whiskers75> kz\\
15:25 < whiskers75> isaacs: can you op the opper bot? :)
15:25 <@isaacs> whiskers75: which one?
15:25 < whiskers75> well there isnt one...
15:26 <@isaacs> ;)
15:26 < whiskers75> they got banned
15:26 < mmalecki> I can write one
15:26 < gicode> \names
15:26 -!- isaacs changed the topic of #Node.js to: opper bots are in the penalty box until at least Node SummerCamp
15:26 < tuhoojabotti> :P
15:26 < whiskers75> ok
15:26 < tuhoojabotti> What about destroyer bots, like me
15:26 < whiskers75> how about non opper bots?
15:26 < mmalecki> lol
15:27 < Benvie> @isaacs if I wanted to make like an npm client thing can I steal stuff from the npm site
15:27 < Benvie> or how does that work
15:27 < whiskers75> are non opper bots allowed?
15:31 <@addisonj> hrm... we still haven't moved to 0.8, anyone who are deployed to production speak to how the transition went? our transition to 0.4 from 0.6 was not smooth at all
15:31 < mmalecki> addisonj: yeah, we're running all our services on 0.8 at nodejitsu (not user apps yet tho)
15:32 <@addisonj> anything to watch for? I know 0.4 -> 0.6 was rocky because of the libuv switch, so my guess is that this will be a lot happier
15:33 < mmalecki> not really, no. http performance is kinda better. I don't think I had to fix any breaking changes
15:34 < mmalecki> our load balancers and master API worked with no code changes, actually
15:35 < mmalecki> addisonj: actually, one thing!
15:35 < mmalecki> addisonj: watch out, 0.8 compiles way longer
15:35 < mmalecki> because of bundled openssl
15:35 <@addisonj> heh, your provisioning scripts timing out all over?
15:36 < jcrew> mmalecki: did you use the node version stuff for multiple versions?
15:36 < mmalecki> addisonj: heh, no, just painfully slow
15:36 < whiskers75> hello octoarcher
15:37 < whiskers75> hello octoarcher
15:37 <@addisonj> for that very reason I am transition our now stuff to use chris lea's apt repo :)
15:38 <@addisonj> new*
15:48 < CIA-93> node: Ben Noordhuis v0.8 * r9315377 / doc/api/cluster.markdown : doc: improve cluster.workers documentation - https://github.com/joyent/node/commit/931537769360c3816975e96040bfb6d83ac1078b
15:49 < octoarcher> Hello!
15:53 < whiskers75> are non-opping bots allowed?
15:54 < bnoordhuis> whiskers75: in moderation
15:58 < StayInSkool> I feel very dumb for asking this but I can't seem to find an answer that works for node 0.8. How does one send POST data? request.write() seems to expect a string or a buffer these days, and i can't see how else i'd pass the `request` lib a data object
15:58 < Domenic_> StayInSkool: what kind of post data are you sending that isn't a string or buffer?
15:59 < StayInSkool> Domenic_: should I just join object properties into a string? there's just a bunch of POST data sitting in a data object at the moment
15:59 < Domenic_> StayInSkool: what is a "data object"?
15:59 < StayInSkool> {"hi":"bye"}
15:59 < StayInSkool> object with no methods
16:00 < Domenic_> StayInSkool: ah, yes, HTTP does not know anything about JavaScript objects. You should JSON.stringify() it and then send it. The person on the other end of the connection would JSON.parse() it.
16:00 < StayInSkool> makes sense. just confused that request.write() used to accept objects like that too
16:00 < StayInSkool> I guess in the name of API clarity it got removed
16:01 < StayInSkool> thanks!
16:01 < Domenic_> StayInSkool: probably want to use mikeal's request package, https://github.com/mikeal/request
16:02 < octoarcher> Hello!
16:03 < whiskers75> !archer:help
16:03 < whiskers75> :(
16:07 < deeprogram_> hi ?
16:07 < octoarcher> Hello!
16:07 < deeprogram_> I install npm on centos 6.0
16:08 < deeprogram_> with one command curl http://npmjs.org/install.sh | sh
16:08 < deeprogram_> but it tell me moved is not found
16:08 <@isaacs> deeprogram_: it's on https now
16:08 < deeprogram_> I found http://npmjs.org redirect to https://npmjs.org
16:08 < octoarcher> Goodbye!
16:08 <@isaacs> deeprogram_: curl -L
16:08 < octoarcher> Hello!
16:09 < deeprogram_> isaacs: right
16:10 < octoarcher> Hello!
16:10 < whiskers75> !archer:help
16:10 < octoarcher> Miniature Octo Archer help
16:10 < octoarcher> This is a non-opping, friendly bot.
16:10 < octoarcher> No commands right now.
16:10 < deeprogram_> url: (60) Peer certificate cannot be authenticated with known CA certificates
16:10 < deeprogram_> but curl told me this 
16:10 < whiskers75> any idea what i should program octoarcher with?
16:10 < Domenic_> whiskers75: is there a reason you can't play with your bots on an empty channel?
16:10 < deeprogram_> isaacs: do I need set openssl?
16:11 < whiskers75> Domenic_: ok ill TEST them there from now on
16:11 < Domenic_> whiskers75: I just don't understand how they add value to anyone's life (but yours apparently)
16:11 < whiskers75> ok -
16:11 < whiskers75> wait a sec
16:13 < whiskers75> Domenic_: as of now, that is the last of that bot
16:13 < Domenic_> :)
16:13 < whiskers75> or others
16:24 < whiskers75> how do you read and write arrays to/from files?
16:25 < nsm> whiskers75: serialize json
16:25 < whiskers75> nsm: ?
16:26 < nsm> err, use JSON.stringify(array) then fs.writeFileSync or similar
16:26 < nsm> then to read, use fs.readFileSync or similar and JSON.parse
16:26 < whiskers75> ok, thanks
16:26 < whiskers75> so JSON.parse(file) ?
16:26 < nsm> no
16:26 < whiskers75> what, then?
16:27 < nsm> var data = fs.readFileSync('file', 'utf8') (syntax and order may not be correct!)
16:27 < nsm> then array= JSON.parse(data)
16:27 < whiskers75> oh
16:27 < whiskers75> ok thanks
16:30 < simpan> anyone got any idea how to best solve shared objects inside a module, needs to access database and logger objects from a lot of other objects in a module
16:35 < aus3ys> opper bots, shame on you!
16:39 < dnnsmanace> does anyone use the postgres controller for node?
16:42 < TehShrike|Work> Who do I high-five for the new expressjs.com layout?
16:42 < gicode> With load-balanced socket.io, what are the semantics for "socket" "connected" and "disconnect"?
16:43 < gicode> TehShrike|Work: Looks like they hang on #express
16:43 < TehShrike|Work> They would, I suppose :-)
16:45 < dnnsmanace> anyone with experience with postgresql transactions on the node-postgres controller?
16:51 < pringlescan> Does anyone know if it's faster to parse a CSV file or a JSON file in Node?
16:54 < AndreasMadsen> pringlescan: is content.split(',') or JSON.parse(content) not fast enough
16:55 < AndreasMadsen> ?
16:55 < pringlescan> AndresMadsen, CSV takes a few seconds, but I had to include the CSV module for simplicitly, I'm going to give it a second. I'm loading 5-6mb of data
16:56 < pringlescan> I'll do a test and let you know if you have any interest.
16:57 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:57 < AndreasMadsen> pringlescan: I have some interest in string to whatever parsing, but it is for a total different purpose
16:58 < AndreasMadsen> pringlescan: A CSV Streams Object would not be very hard to make, and it will be faster than content.split(',
16:58 < AndreasMadsen> ')
16:59 < pringlescan> AndreasMadsen, I use the CSV module, which isn't very slow, but I'd like to have the minimum number of dependencies. If V8 precompiles regular expressions it may be faster than split. I'm more concerned with memory utilization, I need to make sure this is garbage collected, it'd be a waste to keep it in memory
16:59 < gicode> Is there any socket.io event for when a client times out? "disconnect" doesn't seem to trigger in this case.
16:59 < pringlescan> My client will probably put it in Mongo anyway though...
17:01 < AndreasMadsen> pringlescan: there are 19 modules there do something with csv, you will have to be more precise
17:01 < AndreasMadsen> pringlescan: but if memory is the issue, I would go with a CSV Stream parser
17:02 < marshall> is there any case when res.locals added by middleware would get wiped?
17:02 < marshall> before it gets the the routes?
17:02 < pringlescan> I'm making it the issue, but it's probably a non-issue, thanks for the interest, I'll let you know about csv versus JSON.
17:03 < TehShrike|Work> Aikar: what are the odds of Nova getting built-in Express support?
17:03 < AndreasMadsen> pringlescan: if you do "var splitCache = /,/ v8 will cache and optimize it, but I'm not sure it faster than a simple .split(',')
17:04 < fennec> if I'm making a http.request, the documentation says of its headers: "Sending a 'Connection: keep-alive' will notify Node that the connection to the server should be persisted until the next request."
17:05 < fennec> do I get that for free transparently or do I need to hang on to a request object of some sort or anything?
17:07 < augustl> are there any libraries with a combined node.js server and a web browser lib that does "send data to and from the server and clients" that does XHR but Web Sockets if present? No events/pubsub, just raw data.
17:07 < augustl> ..and with the ability for the server to send data to a specific client, not just all clients
17:08 < cpsubrian> augustl: Have not used either .. but sockjs and engine.io are both more 'raw' subsets of socket.io's features.  Both include multi-transport support.
17:08 <@isaacs> deeprogram_: curl -Lk
17:08  * isaacs off to get another ssl cert.  sigh.
17:10 < gicode> cpsubrian: Do you use sockjs or engine.io?
17:10 < CIA-93> node: isaacs v0.8.5-release * raaf0e83 / ChangeLog : x - https://github.com/joyent/node/commit/aaf0e8360440dc8cfe053d3cf450472285f1d25c
17:10 < cpsubrian> gicode: no.. we're using socket.io .. but investigating the others because of efficiency problems
17:11 < augustl> cbobo: interesting, thanks
17:11 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:11 < gicode> cpsubrian: I am working on some socket.io stuff right now, but the model seems really leaky.
17:11 < AndreasMadsen> pringlescan: this is the CSV parser I'm talking about -> https://gist.github.com/3238808 !Not tested
17:12 < AndreasMadsen> pringlescan: the memory use, should be quite low
17:12 < augustl> and doh, obviously sending messages to a specific client is how it works by default, as you get one connection per client :)
17:12 < AndreasMadsen> pringlescan: no more than 64KB 
17:12 < augustl> hmm, sockjs uses jsonp for IE6 and IE7
17:16 < marshall> I'm adding stuff to res.locals in some authentication middleware, which is used before the routing middleware, but it's not being made available to the templates
17:18 < cpsubrian> gicode, Thats basically our problem .. on one server things run pretty smoothly .. but when you add redistore to the mix memory and cpu leaks aboundâ€¦ we are workign to find ( and maybe help plug) these leaks
17:19 < augustl> not that I know what jsonp polling actually is..
17:21 < jfroma> hi, i am trying to use mikeal/request to "pipe" a request inside an express.js (2.x) middleware, status code and body seems to be sent properly but the response headers are not copied 
17:22 < rmg> AndreasMadsen: you're not handling quotes or escaped commas, not sure if that was an oversight or intentional
17:22 < deeprogram_> https://github.com/isaacs/npm/issues/2669
17:22 < deeprogram_> can you help me on this issue ?
17:22 < deeprogram_> I really need help :)
17:23 < mmalecki> deeprogram_: why are you using so old node version?
17:23 < mmalecki> install 0.8.4
17:24 < jfroma> something like this https://gist.github.com/84c8f43353baf561948e
17:24 < deeprogram_> mmalecki: because my project is based on old node
17:25 < mscdex> deeprogram_: curl -Lk
17:25 < deeprogram_> mscdex: I tried
17:25 < deeprogram_> mscdex: really
17:26 < mmalecki> deeprogram_: lol? upgrade your project then
17:26 < mscdex> deeprogram_: and you tried https://npmjs.org/install.sh instead of http://npmjs.org/install.sh ?
17:26 < deeprogram_> mmalecki: I think it can't be upgraded now
17:27 < jt2190> deepprogram_: Issue 2669 mentions curl -L, not curl -Lk
17:27 < jt2190> deeprogram_:  -k/--insecure      Allow connections to SSL sites without certs (H)
17:27 < mmalecki> deeprogram_: uhm, why?
17:28 < deeprogram_> jt2190: right, but it doesn't work
17:28 < pringlescan> AndreasMadsen it takes 64ms to read and parse a 6mb JSON file with 250,000 items and 1073ms to do that with a CSV file.
17:28 < deeprogram_> mmalecki: because I used old module that base on old node
17:28 < jt2190> deeprogram_: ok thanks for clarifying
17:29 < deeprogram_> mmalecki: I tried https:// but same error: npm-install-28800.sh: line 1: moved:: command not found
17:29 < deeprogram_> very confused
17:30 < rmg> deeprogram_ have you tried just downloading the script and running it from the local copy? might be easier to track down the problem
17:30 < deeprogram_> rmg: I tried too
17:30 < mmalecki> deeprogram_: what's the module name?
17:31 < dominictarr> mmalecki, ping!
17:31 < mmalecki> dominictarr: http://www.asus.com/Notebooks/Superior_Mobility/ASUS_ZENBOOK_UX21E/
17:31 < deeprogram_> rmg: but I get error : npm ERR! cb() never called!
17:32 < jt2190> deeprogram_: Did you have a newer version of node installed already?
17:32 < deeprogram_> jt2190: no..
17:34 < deeprogram_> jt2190: why you ask that ?
17:34 < jt2190> deeprogram_: because node and npm are distributed together
17:35 < jt2190> deeprogram_: but they didn't used to be
17:35 < Nopik> hi.. is there a way to run own function after response is sent or request processing is done? i'm trying to get request.on 'end', function(){}, but it apparently doesn't work
17:35 < jt2190> deeprogram_: I was thinking that maybe if you'd installed the latest node and gotten the latest npm
17:35 < CIA-93> node: isaacs v0.8.5-release * rd593bbb / (AUTHORS ChangeLog src/node_version.h): 2012.08.02, Version 0.8.5 (Stable) - https://github.com/joyent/node/commit/d593bbb22565cdab0d9215d7bd7ca281103ad0f2
17:35 < jt2190> deeprogram_: then tried to install the old node with the latest npm
17:36 < jt2190> deeproram_: you might get weird errors
17:37 < KorvinSzanto> how can I install cairo on ubuntu?
17:39 < mscdex> deeprogram_: it's possible that the latest version of npm is no longer compatible with older versions of node like the one you are using
17:40 < rmg> deeprogram_: I think it's a bug in the npm install script
17:41 < deeprogram_> rmg: I think so !
17:42 < dsirijus> anybody coding node.js in sublime text?
17:42 < deeprogram_> rmg: you are right!
17:42 < rmg> added a comment on the bug - npmjs.org/install.sh returns a redirect, but the install script isn't handling it
17:43 < deeprogram_> rmg: I install node v0.6.x then it works
17:43 < jt2190> deeprogram_: I'm almost certain you have an incompatable version of npm
17:43 < rmg> running the installer works? or the npm bundled with 0.6.x works?
17:43 < KorvinSzanto> I'm rather confused on the node server working directory, can anyone give me a link to a crash course?
17:45 < jerrysv> TooTallNate: ping!
17:45 < harb_> hi everyone
17:45 < harb_> this is my new home
17:45 < harb_> :)
17:45 < harb_> lets node
17:45 < jt2190> deeprogram_: Looking at the bug writeup https://github.com/isaacs/npm/issues/2669, I don't see where you got the old version of npm, the one that was released with node 0.4.2
17:46 < jt2190> deeprogram_: maybe I'm missing it
17:46 < augustl> sockjs seems to  be all about cross domain communication, I don't need that. Anyone know about something like socjks that's simpler and doesn't do cross domain stuff? :)
17:46 < jt2190> deeprogram_: to my eyes it looks like you're getting the latest
17:46 < deeprogram_> jt2190: right
17:47 < AndreasMadsen> pringlescan: Well that wasn't a big surprise
17:47 < harb_> are there any good example tutorials out there?
17:47 < jt2190> deeprogram_: It's very likely that the current npm will have issues with the old node
17:48 < harb_> i have my express app running just fine on the localhost
17:48 < harb_> but i want to start playing with it
17:48 < TooTallNate> jerrysv: pong
17:48 < harb_> i am relatively new to node, and all the tutorials i found are outdated since node is constantly changing
17:48 < deeprogram_> jt2190: so I should get old npm too ? where can I get ?
17:48 < rmg> jt2190: the installer isn't even getting to node in this case
17:48 < AndreasMadsen> rmg: it was neither a oversight or intentional, I simply didn't use the time to read the documentation
17:48 < jerrysv> TooTallNate: did you get it working? i compiled 0.8.4 overnight (without the patch) and have working node
17:48 < jt2190> deeprogram_: Yes, I would recommend trying to get the old version of npm, the one that was released when nodejs 0.4.2 was released
17:49 < AndreasMadsen> rmg: but it should be quite simple to fix
17:49 < TooTallNate> jerrysv: very strange...
17:49 < harb_> jt2190: why the old version of npm rather than the newer?
17:49 < TooTallNate> jerrysv: so what version of openssl is on there?
17:49 < TooTallNate> or did you compile the bundled one?
17:49 < TooTallNate> ideally the bundled one would be used
17:49 < TooTallNate> but there was some build error last i tried
17:49 < jerrysv> don't use the bundled
17:49 < jt2190> harb_: because deeprogram_ is installing node 0.4.2, not node 0.8.4
17:50 < jerrysv> you need to compile share-ssl or it just won't work
17:50 < harb_> jt2190: why would he install an old version?
17:50 < TooTallNate> so that's what i did, what version of openssl?
17:50 < jerrysv> there's something strange about the bundled ssl compilation, either that or enough was changed on squeeze
17:50 < jerrysv> 1.0.0, according to apt
17:50 < TooTallNate> and what's `ldd ./node` output?
17:51 < jerrysv> downloaded latest raspbian last night when i got home from dinner
17:51 < jt2190> harb_: are you asking me for the reasoning behind running an older version of nodejs, or why the latest npm probably will have issues with the old nodejs
17:51 < harb_> jt2190: reasoning for running older version of nodejs
17:51 < jt2190> harb_: You'll have to ask deeprogram_
17:51 < TooTallNate> jerrysv: did you get 2012-07-15-wheezy-raspbian.zip?
17:51 < TooTallNate> or a different one?
17:51 < jerrysv> https://gist.github.com/3239103
17:52 < harb_> does anyone know how to take my basic express app (it just says welcome to express or whatever the default is) and put it on my hosted website?
17:52 < jerrysv> 07-15, yes
17:52 < harb_> right now it works on the localhost
17:52 < jerrysv> i'm happy to poke a hole in my firewall and just let you play around if you'd like
17:53 < harb_> do i just transfer the directory into the public_html folder?
17:53 < harb_> i know i will need to change ports
17:53 < drudge> harb_: install node on your host, ssh in and start the node process pointing to your app.js
17:55 < zastern> Is it reasonable to use nvm on a server, or is it really just for dev work
17:55 < zastern> e.g. with ruby, rvm is explicitly usable for having different projects coexisting on a single application server
17:57 < harb_> drudge: can we private chat?  i'd like some more guidance from you as i work through this 
17:57 < jt2190> deeprogram_: I think you should try a npm 0.3
17:57 < jt2190> deeprogram_: https://github.com/isaacs/npm/tree/0.3
17:58 < rmg> deeprogram_: https://github.com/isaacs/npm-www/pull/79
17:58 < harb_> drudge: i created a subdomain with a directory
17:58 < harb_> node.harbhub.com
17:58 < harb_> lets use that as the test site for my first node install on web server
17:59 < jt2190> rmg: That was fast! Must be the goggles :)
18:00 < rmg> jt2190: they're pretty magical
18:01 < rmg> jt2190: most of the time was actually spent trying to figure out which of the isaacs repos had that script in it
18:01 < jt2190> rmg: inside the mind of a madman
18:02 < Aikar> TehShrike: nova is async, last i checked express is sync only... so unless express now supports async template engines, wont be easy
18:02 < tjholowaychuk> 3x changed the signature
18:02 < tjholowaychuk> to a callback
18:03 < Aikar> oh
18:03 < drudge> yo yo tj
18:03 < tjholowaychuk> yo yo drudge
18:05 < whiskers75> can someone help me with saving and reading arrays: https://gist.github.com/3209159
18:08 < whiskers75> when i run register, then save, then quit node and run the code again, then login, it doesnt work
18:11 < nlf> whiskers75: just a hint, if the file is json you can require it, you don't have to read it and parse it yourself
18:11 < Raynos> whats a good logger
18:11 < whiskers75> its not json
18:11 < whiskers75> im trying to save arrays
18:11 < nlf> then why are you JSON.parsing it
18:11 < whiskers75> to read it
18:11 < whiskers75> from the svae
18:11 < whiskers75> save*
18:12 < nlf> if you're using JSON.parse to read it, then it's valid json
18:12 < nlf> if it's valid json, you're making two steps out of what only needs to be one
18:12 < nlf> var owners = require('owners.json')
18:12 < nlf> done
18:12 < whiskers75> it reads: []
18:12 < whiskers75> and the file is simply 'owners'
18:12 < nlf> did you check the actual contents of the file?
18:12 < nlf> name it .json, don't be silly
18:13 < whiskers75> yes, [] is the contents
18:13 < whiskers75> doesnt change when i run register, then save
18:13 < nlf> then it sounds to me like you're not actually adding anything to those arrays
18:15 < harb_> what is the best hosting service to use for node applications?
18:15 < brianc> harb_: amazon
18:16 < whiskers75> harb_: nodester for http stuff
18:16 < harb_> brianc: why?
18:16 < russfrank> depends what you're looking for
18:16 < whiskers75> or irc bots
18:16 < russfrank> nodejitsu is nice, convenient cli, etc
18:16 < russfrank> heroku is free and nice for little tests as long as you don tneed websockets
18:16 < RLa> using a vps here
18:16 < harb_> looking for a web server with a mongodb that implements node to ultimately be run on iphone using custom native app
18:16 < harb_> i want websockets
18:16 < pringlescan> what do you guys PREFER for promises when you on node?
18:17 < russfrank> coolaj86's futures
18:17 < harb_> i've never used a vps
18:17 < RLa> you want to host your app on iphone?
18:17 < RLa> vps is good if you want lot of flexibility
18:18 < RLa> but it requires maintainance
18:18 < harb_> yes
18:18 < harb_> i want to host my app on iphone
18:19 < RLa> you want both server and app run on iphones?
18:19 < harb_> i want webserver to be independent
18:19 < harb_> and iphone app to pull json data from it
18:19 < harb_> just so i have a database
18:19 < harb_> i want node in the mix though
18:20 < harb_> was thinking of combining drupal + mongodb + node + objective-c
18:20 < harb_> +express
18:20 < RLa> https://github.com/joyent/node/wiki/Node-Hosting
18:20 < russfrank> jeez
18:20 < russfrank> drupal and node? 
18:20 < russfrank> thats a lot of things
18:22 < harb_> i'm checking out node hosting now
18:23 < RLa> if you need php etc. on the same machine too you might have to go with vps
18:25 < bradleymeck> isaacs: how long has npm checked for funky symbols in passwords, just want to know if i need to reset my password
18:25 < pringlescan> russfrank, awesome suggestion, this is everything I need that I didn't know to ask for!
18:26 < pringlescan> =D
18:26 < dsirijus> i am getting the following error http://pastie.org/private/awoowkw8yp33pd8mzyzjg for following file http://pastie.org/private/ncuz5y0rohiuxxhl8rpqpa
18:26 < dsirijus> what's up with that?
18:29 < RLa> dsirijus, you have something listening on the same port
18:29 < RLa> make sure you haven't already executed the app
18:30 <@isaacs> bradleymeck: i dunno.  for a while.
18:30 < bradleymeck> i just noticed when i used npm login for the first time in forever
18:30 <@isaacs> bradleymeck: whenever someone reports a "my password is failing, but it's right andi checked", then I ask if they have any funky chars, and add whatever new ones are breaking it
18:30 < VodkaBears> Hello, i developed web gaming portal with node.js: http://acidvalue.com. Who wanna test it at first?). Handing out invites.
18:31 < julianoliver> hi, i'm trying to 'curl http://npmjs.org/install.sh | sudo sh' and the file has moved. where is it now?
18:31 < julianoliver> odd.. there now with wget.
18:31 < rmg> julianoliver: https
18:31 < julianoliver> nvm
18:31 < julianoliver> rmg: yes, that'll be it ;)
18:32 < RLa> what version of node, isn't npm bundled now?
18:32 < julianoliver> 0.4.12. this is my first encounter with node. as of 5 minutes.
18:33 < julianoliver> a find . -name npm in my $NODE_PATH reveals nothing.
18:33 < julianoliver> anyway, i'll lurk
18:33 < rmg> julianoliver: if you're just getting started, you should probably grab the latest version of node
18:33 < bradleymeck> julianoliver: 0.4.12 is very old, ancient, i would look for something newer
18:34 < julianoliver> rmg: bradleymeck it's reccommended for use when installing tilestream, a tile server. the only examples i can see of it working out there are on this version. i'm on Debian Stable also..
18:34 < bradleymeck> if its the recommened, thats fine i guess, but most newer modules will freak out
18:34 < dsirijus> RLa, you are right! now only to find out what it is
18:35 < julianoliver> right. well i'll give this a go first and then grab the latest if joy is not forthcoming.
18:36 < rmg> julianoliver: if the redirect is causing you problems, it was fixed just 20 minutes ago, isaacs said it'd probably be deployed later today
18:38 < julianoliver> rmg: cheers. currently the /C=US/O=GeoTrust, Inc./CN=RapidSSL CA is failing verification.
18:39 < jt2190> julianoliver: You may want to ask the tilestream folks if they've moved to a newer version of nodejs.
18:39 < julianoliver> jt2190: ok i will. cheers
18:40 < julianoliver> jt2190: wow, their github readme references v0.4.9..
18:41 < jt2190> julianoliver: Yeah, I'd take that as a warning
18:41 < jt2190> julianoliver: The source may not be actively maintained
18:41 < rmg> julianoliver: curl -k to download it with curl manually, then run the file locally.. or give up and plow through it all with current node
18:42 < julianoliver> rmg: yep, i'm well into it now.
18:43 < rmg> jt2190: the last commit is 23 days ago, and it's the one that added the comment about 0.4.9 :-\
18:44 < julianoliver> rmg: haha
18:54 < augustl> weird. sockjs opens a popup for every request it does in IE6
18:55 < harb_> RLa: hey
18:55 < RLa> i'm still here
18:55 < harb_> RLa: i might use VPS with rackspace
18:55 < harb_> what vps do you use?
18:55 < mmalecki> augustl: why are you even using IE6?
18:55 < harb_> i also looked at joyent, but they cost more
18:56 < RLa> linode but because i needed dc in eu
18:56 < augustl> mmalecki: that's not the problem ;)
18:56 < RLa> linode support has been great so far
18:56 < harb_> dc in eu?
18:56 < RLa> yeah, for low ping for eu people
18:57 < RLa> they have datacenter in london
18:57 < harb_> eu as in europe?
18:57 < harb_> ok
18:57 < mmalecki> harb_: how about a PaaS?
18:57 < RLa> i do not about rackspace but joyent was in us only last time i checked
18:57 < mmalecki> joyent has a DC in Amsterdam too
18:57 < harb_> PaaS like heroku?
18:58 < harb_> i am considering it
18:58 < mmalecki> harb_: or nodejitsu, yeah
18:58 < harb_> nodejitsu doesn't support websockets i heard
18:58 < mmalecki> harb_: oh, sure we do
18:58 < mmalecki> https://wsping.nodejitsu.com/
18:58 < mmalecki> heroku doesn't, actually
18:58 < harb_> yeah it was heroku that didnt
18:58 < harb_> now i remember
18:59 < harb_> thats why i didnt use them
18:59 < kenperkins> any germans here?
18:59 < rmg> you're left with the long polling fallback with Heroku if you use Socket.IO
19:00 < harb_> tell me a little bit more about nodejitsu, please?
19:00 < harb_> does it make my laptop a cloud hoster for my apps?
19:01 < harb_> so that i can run an app in the url rather than the localhost?
19:01 < jesusabdullah> harb_: http://nodejitsu.com and http://handbook.jit.su should give you a pretty good idea as to what we do
19:01 < mmalecki> harb_: sure. you just type one command and app gets deployed to nodejitsu
19:01 < harb_> sounds awesome
19:01 < harb_> is it free?
19:01 < jesusabdullah> For a limited time!
19:01 < jesusabdullah> pricing for an individual drone is $3/mo
19:01 < harb_> i want free fo life
19:01 < harb_> lol
19:01 < jesusabdullah> which even a kid with an allowance can afford!
19:03 < harb_> what is a drone?
19:03 < brianc> jesusabdullah: just signed up
19:03 < mmalecki> harb_: one application server running your app
19:04 < mmalecki> you can get more drones for an app
19:04 < mmalecki> if you need to scale
19:04 < augustl> that's interesting, sockjs only opens popups in IE6 for frameset documents
19:04 < harb_> how much load can one drone carry?
19:04 < mmalecki> AvianFlu: numbers, sir?
19:07 < julianoliver> harb_: it may depend on the size of the drone and the gravity constant of its environment ;)
19:08 < harb_> i want one drone to host an iphone app sevice
19:08 < harb_> service
19:08 < mmalecki> harb_: I'll get some benchmarks for you in a sec :)
19:08 < harb_> sweet  :)
19:10 < AvianFlu> mmalecki, we've only done some very basic benchmarking
19:10 < AvianFlu> but a simple socket.io app consistently handled over 450 concurrent websockets before it started to have problems
19:10 < AvianFlu> these are currently 256MB hosts, btw
19:12 < RLa> hm, what takes so much memory there?
19:12 < RLa> did you profile node memory usage while running benchmark
19:13 < harb_> i love socket.io
19:13 < harb_> express.js
19:13 < harb_> node.js
19:13 < harb_> mongodb
19:14 < harb_> and the internet :)
19:19 < s5fs> harb_: I love your enthusiasm!
19:20 < harb_> s5fs: :)
19:22 < cpsubrian> Getting EADDRNOTAVAIL in a really simple test script. https://gist.github.com/3239884   seems like it should work?
19:23 < harb_> anyone here use amazon ec2 free service?
19:23 < harb_> i need a cloud host that supports websockets & node
19:23 < harb_> free is my preferred cost  :)  i just need to run small apps for basic testing on a host
19:24 < lpin> harb_ #nodejitsu
19:24 < harb_> okay, everyone keeps recommending them
19:24 < harb_> and i know they work with joyent, which is a huge plus
19:24 < harb_> i will try there free trial
19:25 < Bonuspunk> will node.js support windows RT? ^^
19:26 < augustl> seems like socket.io doesn't work too well with framesets in IE6.. Anyone know if there are alternative smaller libraries that only do plain XHR, and websockets when available? No need for cross domain stuff.
19:29 < rmg> augustl: doesn't Socket.IO do that by default?
19:30 < augustl> rmg: doesn't seem like it - it breaks horribly
19:30 < augustl> it makes IE6 open a popup with the jsonp callback :)
19:30 < augustl> IE7 too
19:30 < augustl> and if I disable jsonp, it stops working with no errors
19:32 < augustl> not dissing socket.io of course, needing IE6 support in frameset documents is pretty weird indeed
19:32 < rmg> augustl: ah, I've never tried with IE of any version.. but I was hosting from Heroku, so everything was falling back to long polling XHR
19:32 < augustl> I even want IE 5.5 support, muhaha
19:32 < augustl> so that's why a websocket solution with plain  xhr polling fallback is what I want, was hoping to not have to write that myself
19:33 < rmg> augustl: does that even support HTTP??
19:33 < augustl> haha
19:33 < s5fs> rmg: no, gopher only
19:33 < jergason> Friends, a question about request. How can I ensure that I am getting the data back as a buffer?
19:33 < augustl> jergason: isn't that the default?
19:33 < jergason> I am downloading some images, and it looks like they are coming down as string?
19:33 < augustl> jergason: how do you check that?
19:33 < jergason> Buffer.isBuffer is false
19:34 < augustl> do you set the encoding somewhere?
19:34 < augustl> req has a .setEncoding or something like that
19:34 < jergason> nope
19:34 < augustl> paste some code? :)
19:34 < jergason> Lemme make a tiny program to do that
19:34 < jergason> sec
19:37 < jergason> augustl: http://pastie.org/4379483
19:38 < jergason> request version 2.9.153, node 0.8.4
19:38 < jergason> if it matters
19:38 < augustl> no idea what the request module is/does
19:39 < augustl> read the docs, they probably have a way to yield buffers
19:39 < augustl> or use the core http module request stuff
19:39 < jergason> um
19:39 < samholmes> I'm building a simpel todo manager. Anyone know of a simple, robust JSON memory store module?
19:39 < jergason> maybe you could have said that before telling me to post code :/
19:40 < samholmes> I'm looking to be able to dump the memory store into a JSON file for storage persistency
19:42 < gicode> jergason: Use core? http://nodejs.org/api/http.html#http_http_get_options_callback
19:43 < augustl> jergason: I didn't know you were using a library until I saw the code
19:43 < s5fs> all 7 lines, haha!
19:44 < jergason> augustl: well, I did mention it in my question. Thanks for trying, anyways.
19:45 < augustl> jergason: I thought you were talking about requests in general.
19:45 < jergason> Ah, makes sense.
19:46 < s5fs> jergason: same mistake happens when people in asking for help with cluster (the module, not the concept). love ambiguous naming!
19:46 < jergason> Guess that is what you get for making a js runtime called node
19:48 < jergason> Check out my new nosql database, called NoSQL
19:49 < s5fs> "hey, could i get some help with that?"
19:51 < AviMarcus> samholmes, did you see the website todomvc ? it has examples of the gui in a bunch of different client side frameworks and some common sort of storage engine. I think.
19:51 < dereknelson> Can anyone help me with some build process stuff?
19:51 < Bux> hiiiii
20:00 < localidiot> Is there any reason for why people sometimes do "var self = this;"?
20:01 < localidiot> Nevermind. I just realized why.
20:02 < localidiot> It's to maintain a pointer to this for anonymous functions, right?
20:02 < localidiot> Right!?
20:08 < pringlescan> I'm trying to get started with the Async moduleâ€¦ and some of the examples from the documentation don't run as I expect them to. Can anyone tell me what I'm doing wrong here? https://gist.github.com/3240223 
20:11 < jcrew> pringlescan: how do you expect that to work?
20:12 < pringlescan> for each function to be called in the order async determines to be the best orderâ€¦ with whatever that can occur in parallel to occur in parallel?
20:12 < jcrew> and what behavior are you seeing?
20:12 < pringlescan> only get_data and make_folder are being executed
20:13 < pringlescan> I don't think I understand how callback is supposed to be used in this instanceâ€¦ but since the events are in a closure can't I just share the variables between the steps?
20:14 < pringlescan> well, inner functions atleast, I don't know if that's a proper closure
20:14 < jcrew> pringlescan: i believe callback takes the first param as 'error' - let me do a test real quick though 
20:15 < pringlescan> jcrew, thanks that was it, I don't know how I forgot thatâ€¦ or why the example doesn't include it. thanks
20:16 < jcrew> pringlescan: yea, change your callbacks to callback(null, <data>);
20:16 < pringlescan>  do I always need to return data?
20:16 < jcrew> the first parameter of callback is detecting an error and since it runs both functions in parallel it doesnt detect the error until it gets to write_file
20:17 < jcrew> pringlescan: no you could just do callback() or callback(null) or callback(null,data)
20:17 < jcrew> but you only need to return data to the callback if you have something
20:19 < jcrew> pringlescan: i replied to your gist if you want an example
20:30 < mmalecki> ProblemEmitter: awesome nick btw
20:30 < ProblemEmitter> thanks
20:32 < pringlescan> jcrew, thanks, my question is when I use async.auto whenever each function calls the callback, the result is stored under the name of the functionâ€¦ so is it convention to name a function in async.auto search_results instead of getSearchResults due to how they will be accessed in the final callback?
20:33 < kevinswiber> I'm getting a 409 Conflict when trying to log in to npm.  Anyone else having issues or is my account just hosed?  :)
20:34 < chilts> kevinswiber: I managed to log in ok
20:35 < kevinswiber> chilts: Thanks.  Maybe I'll post a call for help on the Google Group or something.  Not sure I can do anything from my end.
20:37 < CIA-93> node: isaacs v0.8.5-release * r4d29dd2 / (Makefile tools/osx-productsign.sh): build: Sign pkg installer for OS X - https://github.com/joyent/node/commit/4d29dd2ae985c0f1e9c5306cbbd308dc4584a257
20:37 < CIA-93> node: isaacs v0.8.5-release * rc8494b3 / (AUTHORS ChangeLog src/node_version.h): 2012.08.02, Version 0.8.5 (Stable) - https://github.com/joyent/node/commit/c8494b361ca3dc636c562d5d9d55e6258c14ff1d
20:39 < wookiehangover> SubStack: is there a node module that allows me to commission one of your illustrations?
20:39 < wookiehangover> cause if there's not, there should be
20:40 < wookiehangover> say, if I wanted a drawing of Capt Picard ordering a cup of tea, earl grey, hot
20:41 < Hoppertje> io.sockets.socket( some_socket.id ).emit(  );   <- is this allowed?
20:44 < gicode> Hoppertje: Looks about right
20:44 < Hoppertje> what happens if some_socket.id is unknown?
20:46 < rmg> Hopperjte: isn't some_socket.emit(...); what you're after?
20:47 < Hoppertje> hmm
20:47 < gicode> Hoppertje: I don't know what would happen.  It might emit an "error" event on io.
20:49 < gicode> If "some_socket" is indeed a socket, yes you should just call emit directly.
20:49 < Hoppertje> but how would i get the socket ?
20:49 < Hoppertje> i stored the socket.id 's
20:49 < gicode> Hoppertje: Normally through the connection event
20:50 < gicode> ah, yes then you can use io.sockets.socket(id) to get the socket
20:50 < Hoppertje> thus: io.sockets.socket( unwanted_socket_id ).emit(
20:50 < Hoppertje> or would i first need to store the id
20:50 < Hoppertje> rhm socket
20:51 < marshall> how can I see what's in res.locals before rendering?
20:51 < gicode> Hoppertje: I think your question has been answered.  Are you attempting to ask a new question?
20:52 < marshall> I'm trying to implement an auth system, but res.locals.user seems to stick around even after the session is destroyed
20:52 < Hoppertje> gicode: nope, it worked! thanks a lot :D
20:52 < RapsFan> Hello everyone
20:52 < gicode> Hoppertje: No problem ;-)
20:52 < Hoppertje> this is awesome stuff
20:55 < RapsFan> Can anyone suggest how to setup a development environment for node.js and websocket development on Windows? I've installed WAMP, the node package, cygwin and when I run my server.js file with node it detects incoming connections from my browser but the connections are dropped instantly without completing the handshake.
20:57 < CIA-93> node: isaacs v0.8.5-release * r2dd710e / (Makefile tools/osx-codesign.sh tools/osx-productsign.sh): build: Sign pkg installer for OS X - https://github.com/joyent/node/commit/2dd710e7ea5163af3573d7d53c64858aaa88cf58
20:57 < prettyrobots> What do you call a function that makes a function?
20:57 < CIA-93> node: isaacs v0.8.5-release * r9b86a44 / (AUTHORS ChangeLog src/node_version.h): 2012.08.02, Version 0.8.5 (Stable) - https://github.com/joyent/node/commit/9b86a4453f0c76f2707a75c0b2343aba33ec63bc
20:57 < prettyrobots>  What do you call a function that makes a function?
20:57 < nlf> a function
20:57 < gicode> prettyrobots: a factory?
20:57 <@maxogden> a function
20:57 < marshall> ^
20:58 < nlf> wait.. is this a riddle?
20:58 < prettyrobots> I'm calling it a function maker which sounds childish.
20:58 <@maxogden> wait the correct answer is 'yes'
20:58 <@maxogden> assuming there was supposed to be a comma after 'What'
20:58 < gicode> RapsFan: What websocket versions are you dealing with?
20:58 < prettyrobots> Wondering if there's a better way of saying this.
20:59 < prettyrobots> A factory, I guess. Sounds so GoF.
20:59  * prettyrobots writing docs
20:59 < RapsFan> 1.0.6
20:59 <@maxogden> functions return objects, functions are objects, therefore functions can return functions
20:59 < gicode> RapsFan: websocket changed a lot in the past year, and not every module supports every version of the standard
20:59 < nlf> call it an xzibit.. yo dawg, i heard you like functions so i wrote a function that returns a function
21:00 < RapsFan> Ahh ok. Is there a good straight forward guide to gettting things setup in windows?
21:01 < gicode> RapsFan: A lot of people go for socket.io or similar since they want to support browsers that don't support websocket as well.
21:01 < prettyrobots> Hmm...
21:01 < rmg> prettyrobots: functor?
21:01 < prettyrobots> Template method.
21:02 < rmg> functor is the general term for what you described
21:02 < RapsFan> Ahh ok I'm going to look into that. Thanks
21:03 < prettyrobots> rmg: Realy? I'm not see it. 
21:04 < prettyrobots> rmg: Functor is an object that behaves as a function.
21:04 < prettyrobots> I'm going to go with function template.
21:04 < prettyrobots> Thanks all.
21:05 < rmg> prettyrobots: that definition still fits, JS just has particularly good support for objects behaving as functions ;-)
21:06 < RapsFan> one last question I have is, what's the best way to do socket development when most hosts block most ports?
21:06 < prettyrobots> rmg: Yes. Now, I see what you're saying. I was asking for a definition of something else.
21:08 < s5fs> whats wrong with "factory"? why all the hate on design patterns in here, they can't all be bad? /javacry
21:08 < gicode> RapsFan: What do you mean exactly?
21:08 < gicode> s5fs: ;-)
21:09 <@maxogden> you dont need a design pattern to describe a returnv alue
21:09 < prettyrobots> maxogden: Yes, I do.
21:09 < prettyrobots> I need to describe the purpose of a function, so I'd like to have a pattern name for it.
21:09 <@maxogden> its a function, functions return things
21:09 <@maxogden> call it a function :)
21:09 < prettyrobots> Oh, right. My docs are done.
21:09 <@maxogden> then you arent making the reader learn a bunch of jargon
21:10 < prettyrobots> This is a bunch of functions. They return things. KTHXBI!
21:10 <@maxogden> depends on your audience i guess
21:10 < RapsFan> Well when you create your server you do like server.listen(8080); or something similar but most hosts don't let you listen on most ports. or do i have that wrong?
21:10 < prettyrobots> maxogden: Don't want to load them up with jargon. That's what I want to be precise. 
21:10 <@maxogden> prettyrobots: 'this function returns a function'
21:11 < prettyrobots> maxogden: Currying, partial functions, etc. These are words.
21:11 < gicode> RapsFan: Well, most hosts let you listen on ports above 1024.
21:11 < gicode> RapsFan: Windows just happens to have a firewall by default since it has all sorts of vunlerable things running.
21:11 < prettyrobots> maxogden: This function is a template function that returns a callback handler.
21:11 < prettyrobots> The callback handler will automatically do this and that...
21:12 < prettyrobots> The return type of a function is not enough to describe it's use.
21:12 < RapsFan> Ahh ok I use hostmonster.com as my host, I should be able to listen on any port above 1024??
21:12 < prettyrobots> Given two integers this function returns an integer.
21:12 < gicode> RapsFan: I am not familiar with that host, but probably, yes.
21:13 < RapsFan> Good to know I'll look into it. Thanks again
21:14 < rmg> prettyrobots: FWIW, if I saw "template function" in docs, I'd go looking for a glossary to figure out what that library considers a template function.. confusion++ if it happens to be a templating library
21:15 < prettyrobots> rmg: Oddly enough, it is a template library.
21:16 < prettyrobots> rmg: Good point.
21:16  * prettyrobots thinking
21:17 < rmg> prettyrobots: sometimes a function is just a function
21:18 < prettyrobots> Okay. So there's now incredibly well known way describe a function that generates a function.
21:18 < prettyrobots> Or there's no noun for it.
21:21 < prettyrobots> Thanks for all the thought and consideration.
21:23 < pringlescan> What's a good way to test if your code is running in parallelâ€¦ sleep seems to be blocking
21:24 < gicode> pringlescan: sleep?
21:25 < pringlescan> I tried sleep while using Async.js's async.forEach and they don't run in parallel
21:25 < pringlescan> I guess I could make a script that sleeps server side before returning a response and fetch that using an http agentâ€¦ but I wasn't sure if there was an easier way.
21:25 < prettyrobots> pringlescan: Do they methods call any I/O?
21:25 < pringlescan> not yet, they will
21:26 < prettyrobots> They are not going to be parallel until they call I/O. Then the I/O will be parallel.
21:26 < pringlescan> I'm trying to map out the flow of my code and then add the bits in, I have a sync version I'm converting it to be more node
21:26 < pringlescan> okay, thanks.
21:26 <@Nexxy> lol @ topic
21:26 < prettyrobots> I liked yesterdays.
21:26 < gicode> pringlescan: Something actually gave you a "sleep" function?
21:27 < prettyrobots> "This is why we can't have nice things."
21:27 <@Nexxy> THIS IS WHY WE CAN'T HAVE NICE THINGS
21:27 < prettyrobots> lulz
21:27 < pringlescan> when using async.Auto() is it best to pass the results of each function using callback, or just pass the error to callback and use variables because they'll execute in a known order and the functions are all inner functions anway?
21:27 <@Nexxy> it's an oft-repeated phrase around me
21:27 < s5fs> Nexxy: coincidence? i think not.
21:27 <@Nexxy> s5fs, I hope not!
21:27 <@Nexxy> I like to think I have a profound effect on my environment
21:27 <@Nexxy> emphasis on profound
21:28 < prettyrobots> gicode: Yeah? What's with that?
21:28 <@Nexxy> oh wait, I'm thinking of perverse
21:28 < s5fs> profoundly perverse
21:28 <@Nexxy> there we go.
21:28 < pringlescan> damn, gtg, cya guys later
21:28 < gicode> prettyrobots: sleep implys blocking so I am really curious where this reference to sleep is from
21:28 <@Nexxy> "
21:28 <@Nexxy> PRINGLESCAN: DINNER"
21:29 < gicode> well, another time I guess
21:29 < s5fs> i'm sick of work, think i'll leave soon.
21:30 < prettyrobots> Maybe yo installed `node-sleep`.
21:30 <@Nexxy> s5fs, good idea
21:30 <@Nexxy> s5fs, I'm upgrading my security apps to use firmata!
21:30 < gicode> prettyrobots: Yeah, if pringlescan is using that, the problem is self-evident.
21:30 <@Nexxy> s5fs, and I have the magnetic door switch working 
21:31 <@Nexxy> not that it's difficult, lol
21:31 < s5fs> oh nice! i've been curious about giving that a try myself, my PoC is dead simple, couldn't be more than a 30min port.
21:31 <@Nexxy> I like the idea of not having to recompile every time I make a change
21:31 < s5fs> that's a good point
21:32 < s5fs> i'm hoping to pick up a beagleboard thru work soon, i may hassle you for assistance getting an os loaded, etc. you've already crossed a few hurdles that i have not, although we've got gumstix working i'm not sure how different the process is.
21:34 <@Nexxy> s5fs, it's pretty straightforward
21:34 <@Nexxy> s5fs, you can download pre-imaged bins to just dd onto the sd card
21:34 < s5fs> yeah, but i want custom boot screens, custom led status indicators, etc
21:34 <@Nexxy> and there is a shell script for boot loading and stuff
21:35 <@Nexxy> s5fs, cool! we can figure that out together
21:35 < s5fs> f'sho!
21:35 <@Nexxy> I have a revc4 and 3 of the xMs
21:35 < s5fs> gotta hassle bossman to pony up the $$
21:35 <@Nexxy> well you can dev with one of these if you like
21:35 < s5fs> or, i could charge it and then ask for forgiveness haha
21:35 <@Nexxy> at least until he gets one
21:35 <@Nexxy> I have the microSD cards too
21:36 < s5fs> i will once i get a bit of free time. i'm about 2wks away from finishing my current reading list and getting up to speed on that java gig
21:36 <@Nexxy> \o/
21:36 < s5fs> now that node work seems possible, i'm backing off of rails for a bit too. i'm going to finish the 'minder' app and then call it good.
21:37 < s5fs> (mainly b/c i wanna use the damn thing)
21:37 <@Nexxy> I knew you'd come to your senses.
21:38 < s5fs> haha, i follow the buffalo, my friend. my long-term goal is to align my personal interests with my professional interests, but thats not always possible.
21:38 < s5fs> although that's an excellent recipe for killing off love for a hobby ;-)
21:38 <@Nexxy> boofallo?
21:38 < s5fs> jah mon
21:39 <@Nexxy> JAMMIN'~?
21:39 < s5fs> evah livin' evah fearful
21:39 <@Nexxy> don't mind if I do
21:40 < s5fs> haha, your sleep deprivation is showing
21:40 < s5fs> ;-)
21:40 <@Nexxy> well at least I have an excuse now :D
21:40 < s5fs> my excuse is late-nite TNG and codez
21:47 < christoffe1> join linux
21:47 <@Nexxy> christoffe1, and if I refuse?
21:47 < perezd> when using forks is there a maximum message size I can send?
21:51 < RLa> perezd, i doubt
21:51 <@isaacs> Anyone using os x mountain lion?
21:51 <@isaacs> http://nodejs.org/dist/v0.8.5/node-v0.8.5.pkg
21:51 <@isaacs> check it out^
21:51 < RLa> it should be stream-like but i might be wrong
21:52 < perezd> oh really?
21:52 < prettyrobots> I use homebew.
21:52 < perezd> so it would do n messages?
21:52 < perezd> well
21:52 < perezd> probably won't do that
21:52 < prettyrobots> Erm, oh, and now Mountain Lion yet.
21:52 < perezd> isaacs: do you know the answer about fork send message length?
21:52 < s5fs> no osx here, BeOS or gtfo
21:53  * prettyrobots high-fives s5fs
21:53 <@Nexxy> lol
21:53 < s5fs> ^5
21:53 < prettyrobots> TIL: ^5.
21:53 < s5fs> "nice machined aluminum case, great place to store all your software freedoms!" hurr hurr!
21:54 < prettyrobots> FYI: SourceTree is pretty. I'm really enjoying using it.
21:54 < rmg> isaacs: what about mountain lion?
21:54 < RLa> perezd, you say it uses shared memory?
21:54 < perezd> RLa:  what?
21:54 < perezd> it definitely doesn't do that...
21:54 < perezd> its a separate OS process
21:55 < RLa> so i do not see where length limitation comes from
21:55 < perezd> I dunno its using STDIN/STDOUT probably
21:55 < perezd> so I was wondering if that limit was imposed somewhere
21:55 < rmg> it's not using stdio, it says they're shared
21:55 < perezd> what is shared
21:56 < rmg> stdout and stderr are inherited from the parent, so they'd be useless for IPC
21:56 < perezd> what is shared exactly?
21:56 < rmg> if it uses sendmsg(), then that would impose a message size limit
21:56 < perezd> By default the spawned Node process will have the stdout, stderr associated with the parent's. To change this behavior set the silent property in the options object to true.
21:56 < perezd> its definitely  stdio 
21:56 < perezd> what sort of other magic would it be?
21:58 < CIA-93> node: isaacs v0.8 * r02dae99 / src/node_version.h : Now working on 0.8.6 (+5 more commits...) - https://github.com/joyent/node/commit/02dae998c3506ee1a672911c036e660b28ba893f
21:59 < CIA-93> node: isaacs v0.8 * r575c12b / doc/blog/release/v0.8.5.md : Blog post about 0.8.5 - https://github.com/joyent/node/commit/575c12bba3ef220d923ed3ef2e466d10258f3f54
22:01 < CIA-93> node: isaacs v0.8 * r585388b / doc/blog/release/v0.8.5.md : blog: Fix date on 0.8.5 release - https://github.com/joyent/node/commit/585388bbd8d57669954a3c0c752d72bf8a3d3145
22:04 < rmg> perezd: looks like it sets up a separate pipe for it
22:05 < RapsFan> I just came back to say thanks for turning me onto socket.io. I got the packages setup and followed a quick chat tutorial to test it out without a single hiccup.   
22:08 < s5fs> RapsFan: pretty awesome, right? first time i did that tutorial i was fired up for days!
22:09 <@isaacs> rmg: the installer works now
22:09 < RapsFan> Ya after struggling with web sockets for a few days and getting nowhere i'm stoked now!
22:09 <@Nexxy> I can vouch for s5fs 
22:09 <@Nexxy> I could see it in his eyes
22:09 < RapsFan> hahaha
22:10 < s5fs> i have passionate eyes
22:10 < rmg> isaacs: that's new? the installer is all I've used on this computer..
22:10 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:11 < RapsFan> Welll thanks again, I'm gonna go refuel with some coffee cause it's gonna be a long night
22:12 < milani> How to declare a global variable in the context of a module from where I require it?
22:13 < timoxley> milani can you explain that again
22:14 < timoxley> you want a variable accessible to all of a module, but not outside 
22:14 < timoxley> ?
22:14 < rmg> isaacs: never mind, just realized I probably last ran the installer before upgrading to mountain lion
22:14 < milani> timoxley, I want to assign a variable to a module like var myModule = require('mymodule'); myModule.something = something;
22:14 < timoxley> milani you can do that
22:14 < milani> timoxley, I know, but I should access it like this.something in mymodule
22:14 < timoxley> milani module.exports.something
22:15 < milani> aha.thx.
22:15 < timoxley> milani i usually go for constructor injection though
22:16 < timoxley> since it's a little more explicit about the dependency
22:16 < milani> timoxley, yeah just wanted to know if it is possible.
22:16 < milani> :)
22:35 < dogarrhea2_> so um, http://www.youtube.com/watch?v=M-sc73Y-zQA&feature=relmfu where did he get this nginx benchmark
22:37 < dogarrhea2_> ok.
22:38 < dogarrhea2_> so in the end it was just a stupid benchmark where c was actually going to disk and node.js was going to memory
22:39 <@Nexxy> dogarrhea2_, thanks for sharing!
22:55 < drudge> isaacs: thanks for signing the installer
22:56 < TechieShane> Can I advertise work in here?
22:56 < s5fs> TechieShane: looking to hire, or get hired?
22:56 < TechieShane> to hire
22:57 <@Nexxy> I've seen folks do it before
22:57 <@Nexxy> I don't think anyone complained
22:57 < TechieShane> okay
22:57 < TechieShane> We currently have an app written in PHP and we need it re-written in Node.js
22:58 < s5fs> TechieShane: where are you located?
22:58 < TechieShane> s5fs, Ireland, but you can work from home
22:58 < TechieShane> It would be good if they were in similar time zones
23:00 < thebutterfly> has anyone here had experience doing i2c with node?
23:02 < drudge> this module confuses me https://github.com/oscmejia/os-utils
23:04 < s5fs> drudge: just that one? man, i feel terrible now.
23:11 < other_guy> Nexxy, I've got a huge chunk of Nodiak finished :-)
23:12 < other_guy> It does everything except manage link and MR phases.
23:12 < other_guy> it's setup to work a lot more like the Ruby, Python, etc. clients
23:13 < drudge> 3306pen
23:13 < other_guy> is anyone using the async.js library a lot?
23:14 < nlf> i don't know about "a lot" but i do use it
23:14 < ansolas> :)
23:14 < other_guy> I'm sorta shocked I haven't run into this use case before, but I'm struggling with best practices for passing arguments to functions initially
23:14 < other_guy> like say
23:14 < other_guy> I am using async.waterfall
23:14 < other_guy> I get how the later stage functions get their args
23:14 < other_guy> my issue is that the first function needs some args to munch on too
23:15 < nlf> for the first one, just define them within the function
23:15 < other_guy> I've been using async.apply to do it so far, but it's sorta cumbersome
23:15 < nlf> or before the waterfall
23:16 < other_guy> The functions aren't defined anonymously in the waterfall, so I'm not going to get variables captured to reference inside the function
23:16 < nlf> var bacon = true; async.waterfall([ function (callback) { callback(bacon); }, function (bacon, callback) { console.log('bacon?', bacon); }]);
23:16 < gicode> other_guy: async.apply or Function#bind, you have it right
23:17 < other_guy> nlf & gicode thanks
23:18 < other_guy> gicode, that seemed to work best, it's just a little odd.  Though when I saw how async.apply was implemented I assumed I was doing it right, I just figured there might be a better way I wasn't seeing
23:19 < gicode> other_guy: I don't use async.js, but looking at the docs, you are doing it right.
23:19 < gicode> Anyone have any ideas here: http://pastebin.com/07Pzjurm
23:20 < gicode> Lovely whey stacks don't include your own code.
23:20 < gicode> s/whey/when/
23:20 < other_guy> gicode, whatever service your trying to connect to isn't there
23:21 < gicode> other_guy: Indeed, but this is a rather large app and it makes many such connections
23:21 < other_guy> Ah, lol
23:27  * gicode goes off to patch events.js
23:30 < gicode> Would "/usr/lib/nodejs/events.js" be cached somewhere?
23:34 < gicode> Is "/usr/lib/nodejs/events.js" compiled into the binary? :-/
23:40 < bnoordhuis> gicode: yes
23:40 < bnoordhuis> gicode: or rather lib/events.js is compiled into the binary
23:41 < gicode> bnoordhuis: OK, thanks. It is odd they are packaged in the ppa.
23:41 < gicode> In any case, I think can get where I need in the debugger.  I hope.
23:41 < bnoordhuis> gicode: don't know about that, we don't maintain the ppa
23:42 < gicode> bnoordhuis: Does your "install" step copy those js files over?
23:43 < bnoordhuis> gicode: no
23:43 < gicode> bnoordhuis: OK, quite odd then, thanks.
23:47 < gicode> Anyone know what creates objects like this: http://pastebin.com/umSLivv9
23:48 < bnoordhuis> gicode: tcp sockets, stdio, pipes
23:49 < gicode> bnoordhuis: Of those, are tcp sockets the only ones which can "Error: connect ECONNREFUSED"?
23:55 < gicode> Ah, inspecting __proto__ shows it is a Socket
23:56 < bnoordhuis> gicode: for posterity's sake, ECONNREFUSED is not exclusive to sockets
23:56 < pringlescan> Has anyone had trouble with async.auto()â€¦ I have a function that passes a non-error value to the callback but two functions that depend on it still don't fire, when I remove the dependency on said function, both fire fine
23:56 < gicode> bnoordhuis: Good to know, thank you.
23:58 < springmeyer> I'm trying to compile the node-sqlite3 windows module with node v0.8.4
23:58 < springmeyer> and hitting "The specified procedure could not be found"
23:58 < springmeyer> anyone seen this before?
23:59 < springmeyer> it happens when node calls process.dlopen
23:59 < gicode> bnoordhuis: If the Socket has no address(), remoteAddress, or remotePort, is there any other way to find out what it failed to connect to?
23:59 < springmeyer> I hit this after upgrading from node v0.8.4 from v0.8.0
23:59 < marshall> anybody ever had res.locals stick around between requests?
--- Log closed Fri Aug 03 00:00:07 2012
