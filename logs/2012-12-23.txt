--- Log opened Sun Dec 23 00:00:10 2012
00:06 < Iszak> So how do people deploy node.js applications which if/when it falls over, it logs it? someone said monit but I tried that but I need more guidence/documentation on how to use it
00:10 < timeturner> Iszak: check out visionmedia/mon
00:11 < timeturner> very easy to use
00:11 < Iszak> is this the standard way to deploy?
00:13 < Iszak> awh man you have to compile it, that's almost a killer
00:13 < timeturner> visionmedia/deploy
00:13 < timeturner> everything is compiled anyways
00:13 < timeturner> 2 seconds to compile max lol
00:14 < JamesS237> Hi, quick question. If I am deploying node,js servrers on ec2, am i better to make a base instance and clone it, or create an install script for a stock ubuntu ami?
00:15 < JamesS237> *servers
00:15 < Iszak> timeturner it's not the time it takes to compile but the fact that I will need to manually maintain the programs then.
00:16 < Iszak> if they release a critical security update, I won't know without checking there website. I can't just update it via a package manager, very bad.
00:22 < _numbers> anyone know how to use coffee-script to compile a string, similar to the way eval might?  like:   coffee=require('coffee-script'); tuna = coffee.eval('module.exports = class Tuna;');
00:24 < nanashiRei> breakfast = new Tuna();
00:24 < nanashiRei> :ยง
00:24 < nanashiRei> :3 *
00:26 < _numbers> not quite
00:28 < _numbers> perhaps CoffeeScript.eval((sugar).toString())
00:39 < jcrew> coffeescript
00:40 < kenperkins> I hate writing tooling
00:40 < kenperkins> but I love having awesome tooling
00:51 < jcrew> what kind of tooling>?
00:54 < _numbers> kenperkins: i hear ya :)
00:55 < _numbers> i have written like 7 node modules in the past 2 weeks. all in all i've invested 1000% more effort than i initially committed to, but i am just so damn impressed with the speed and everything. i keep pressing on
00:58 < deoxxa> oh dear
00:58 < deoxxa> good night, sweet github
01:00 < tjfontaine> thank god we're treating git just like we did subversion, thank goodness we invested in dvcs
01:00 < jcrew> tjfontaine: ?
01:01 < deoxxa> need multiple source options for npm
01:01 < niggler> haha tjfontaine
01:01 < niggler> the irony of github
01:01 < tjfontaine> jcrew: we've all kinda missed the boat on what makes git useful, and still treat it like a centralized system
01:02 < niggler> wrong expression tjfontaine
01:02 < tjfontaine> which one?
01:02 < niggler> "missed the boat"
01:02 < tjfontaine> what would you have preferred?
01:02 < jcrew> i think it was appropriate given githubs status right now lol
01:02 < deoxxa> tjfontaine: the decentralised part? i think most people have local copies of code, so we've at least avoided the "all history disappears when the repo dies" situation
01:03 < niggler> 'missed the boat' usually means that you didnt take advantage of an opportunity
01:03 < niggler> missed the point, maybe
01:03 < tjfontaine> niggler: both work in my estimation
01:03 < tjfontaine> deoxxa: history being only one part of the equation of course
01:03 < niggler> sure there exists strains of english where it makes sense
01:04 < deoxxa> tjfontaine: thus the "at least"
01:04 < tjfontaine> niggler: in american english everything works
01:04 < niggler> people can't handle a truly decentralized system
01:04 < niggler> github thrived because people thought git was the in thing
01:04 < deoxxa> also because branches
01:04 < tjfontaine> because git didn't have that before github?
01:05 < deoxxa> correct
01:05 < deoxxa> github invented branches
01:05 < niggler> lol deoxxa
01:05 < niggler> svn had branches before git existed
01:05 < tjfontaine> I'd prefer it if github were just a pretty viewvc, and everything were actually stored in the git repo, so it would be trivial to take my stuff and go home
01:05 < niggler> its trivial to take your code
01:05 < deoxxa> not issues etc though
01:05 < niggler> the problem comes when you use github for issues etc
01:05 < deoxxa> and i kind of agree there
01:05 < tjfontaine> niggler: yes but issues, you have to use the api for
01:05 < niggler> or use it for critical infrastructure
01:06 < niggler> how do you continuously backup issues?
01:06 < deoxxa> ha oh yeah, what's up with component right now
01:06 < deoxxa> is it just completely dead?
01:07 < tjfontaine> anyway, I'm done ranting for now, back to present wrapping
01:07 < niggler> the reality is
01:07 < niggler> github should never be used for critical infrastructure
01:07 < niggler> its subject to downtime and failures just like any other service
01:07 < niggler> not as bad as aws but still pretty bad
01:09 < jcrew> 3.5 hrs of downtime in a month is pretty awful
01:09 < niggler> we should move over to another popular platform
01:09 < niggler> http://gitlabhq.com/
01:09 < niggler> oh nvm they just have the software
01:09 < jcrew> i just started a new called gitshit.com
01:09 < niggler> bitbucket!
01:10 < jcrew> it decentralizes itself and has self replicating repositories
01:10 < niggler> jcrew you should claim the domain and run a gitlab instance
01:10 < jcrew> lol
01:10 < rishabhmhjn> woah! even gitlabhq's code is on github! https://github.com/gitlabhq/gitlabhq/blob/stable/doc/install/installation.md
01:18 < jcrew> gitlab icon looks like foobar2000 meets cat
01:18 < niggler> lol
02:41 <@Nexxy> \o/
02:42 < niggler> Nexxy can node source move to bitbucket or some other service
02:43 <@Nexxy> probably not
02:43 < niggler> boo
02:43 <@Nexxy> but I have nothing to do with that :)
02:43 < niggler> is 'fuck github' justified at a time like this?
02:44 <@Nexxy> it's not github's fault that you don't keep a private repo up-to-date
02:44 < niggler> err, would it be acceptable for me to say 'fuck github' in light of its lack of reliability
02:44 < Sly> Nexxy: <33333
02:44 <@Nexxy> Sly, <3
02:44 < jcrew> why is it down, do we even know?
02:45 <@Nexxy> because the internet is still working on that whole 100% reliability thing
02:45 < Sly> http://status.github.com
02:45 < Sly> Derpz
02:45 <@Nexxy> but in the mean time
02:45 < jcrew> yea 'major service outages' doesn't really explain what went wrong with their service
02:45 <@Nexxy> this might be a good time to learn gitolite
02:45 <@Nexxy> or something
02:46 < niggler> downtime is proportional to extent to which services rely on it
02:46 < Sly> Well.. seeing how they were in maintenance mode earlier.. then it worked for half the day.. and now it's back down..
02:46 < Sly> I'd say they probably ran into a pretty serious bug.
02:46 <@Nexxy> I'm sure everyone will be enjoying a post-mortem blog post sometime tomorrow
02:48 < rhdoenges> I hope it's written in heroic couplets recounting the struggles of the gh sysadmins
02:48 < rhdoenges> a modern epic
02:49 <@Nexxy> iambic pentameter or nothing
02:49 < niggler> iambic septameter
02:49 < rhdoenges> printed and bound in the finest leather
02:49 < niggler> human leather
02:49 < rhdoenges> too far
02:50 < niggler> they exist
02:50 <@Nexxy> I'm down
02:50 <@Nexxy> let's do this
02:50 <@Nexxy> who wants to be the front cover?
02:50 < niggler> anthropodermic bibliopegy iirc
02:50 < rhdoenges> i can see someone convincing wealthy programmers to buy a subscription to a blog that just mails a book's worth of blog posts to them every other week
02:52 < jrajav> Hacker's Digest
03:02 < jsilver> support GlobalChat2! follow @GlobalChat2Pro :)
03:03 <@Nexxy> jsilver, why?
03:03 < zomg> jsilver: spam isn't going to get you anywhere
03:03 < jsilver> how darwe you call me spam
03:04  * Nexxy blinks
03:04 < jsilver> 100% of src provided
03:04 < jcrew> that was spam
03:04 <@Nexxy> that uh...
03:04 < jsilver> no it wasnt
03:04 <@Nexxy> that was kinda spammy
03:04 < jsilver> i need support
03:04 <@Nexxy> NEGL
03:04 < jsilver> lies
03:04 < jsilver> NGL on u
03:04 < jsilver> b/s
03:04 < jsilver> no homo
03:04 -!- jsilver was kicked from #Node.js by Nexxy [jsilver]
03:04 < jcrew> lol
03:04 < zomg> that chat thing is written in Ruby...
03:04 < jsilver> worth it, YOLO
03:04 <@Nexxy> rofl
03:04 < astropirate> lol
03:04 < jcrew> hahaha
03:05 <@Nexxy> I only really kicked him for the 'no homo' bit
03:05 < astropirate> we should do that whole thing
03:05 < astropirate> where everyone int he channel
03:05 < astropirate> is an admin
03:05 < jsilver> btw, #IRCRudenessThatCantHappenInGlobalChatHappeningToGlobalChatFounder
03:05 < astropirate> that was fun
03:05 < zomg> wtf
03:05 < zomg> :D
03:06 < zomg> http://globalchat2.net/
03:06 < zomg> just.. what the hell is that
03:06 < zomg> :D
03:06 < zomg> the website is half broken as far as I can tell, at least I can't click on half of the links
03:06 < zomg> Looks like a cheap attempt to make money as far as I can tell
03:07 < tjfontaine> if they had money, the attempt wouldn't be cheap?
03:07 < jcrew> Founded to research advanced lost chat technologies which have been ignored and therefore not presented to used, beat ancient IRC protocol using new protocol insights and an all-Ruby design
03:07 < tjfontaine> oh dear god
03:07 <@Nexxy> ... for making you better feeling
03:07 < jrajav> Email is terrible
03:07 < zomg> haha I think that jsilver guy might've been the guy who's actually making that
03:08 < jrajav> IRC is terrible
03:08 < jrajav> No one cares
03:08 < jrajav> They're here to stay
03:08 < zomg> funny guy
03:08 <@Nexxy> mentlegen.
03:08 < zomg> ^ this
03:08 < zomg> :D
03:08 < jrajav> lol
03:08 < niggler> blargh
03:08 < jcrew> this sounds like the meetings i have with some business folks about their websites
03:08 < zomg> http://www.youtube.com/watch?v=YM8zBhzwD3Q
03:08 < zomg> \o\
03:08 < zomg> /o/
03:08 < zomg> gentlementlemen
03:09 < jcrew> is that book that is flashing on the screen bound with human leather?
03:09 < jrajav> how are you gentlemen
03:09 < jrajav> All your base are belong to us <-- Meme before memes were cool :D
03:09 < zomg> jrajav: yep
03:09  * astropirate slaps jrajav 
03:10 <@Nexxy> why slap when you could take off every zig
03:10 < astropirate> I dont' know why this makes me laugh so much http://www.jankanpo.net/what.html
03:10 <@Nexxy> for great justice, of course
03:11 < jrajav> Nexxy knows where it's at
03:12 <@Nexxy> jrajav, like that was even in question!
03:12 < zomg> nope http://www.youtube.com/watch?v=gvdf5n-zI14
03:13 < jcrew> http://www.youtube.com/watch?feature=endscreen&v=ZZ5LpwO-An4&NR=1
03:49 < mapppum> how can I use the cluster module with coffeescript? forking basically just does `node __filename`, can i get it to use `coffee` instead?
04:18 < jrajav> That doesn't make much sense
04:18 < jrajav> coffee isn't an interpreter, it's a compiler
04:18 < jrajav> @mapppum: 
04:19 < niggler> transpiler
04:19 < mapppum> i know
04:19 < mapppum> well where does it compile to, then?
04:19 < mapppum> i just assumed it keeps it in memory
04:20 <@mbalho> stdout
04:20 < jrajav> niggler: Gesundheit
04:21 < niggler> jrajav: https://en.wikipedia.org/wiki/Transpiler
04:21 < mapppum> well it compiles then runs in node, coffee does not output anything to stdout
04:21 < mapppum> well i suppose it outputs the output of the program you're running
04:21 < jrajav> Transpiler would be applicable to a python-to-c converter
04:22 < jrajav> It is not applicable to coffeescript; that is actually a compiler
04:22 < jrajav> It compiles source code into the lower-level language required to run it
04:22 < niggler> protip: look at the linked page
04:22 < niggler> https://en.wikipedia.org/wiki/Transpiler#Programming_language_implementation
04:22 < jrajav> Protip: Research and think a bit more thoroughly
04:22 < niggler> @jrajav: "CoffeeScript and TypeScript, transcompiling to JavaScript"
04:23 < jrajav> Some dude wrote it on WIkipedia, it must be right
04:23  * mapppum sighs
04:23 < niggler> it is a transpiler -- the output is javascript code
04:23 < niggler> and its at the same level of abstraction
04:24 < jrajav> I still disagree, but let's take it back a bit further - why do we even need this silly word "transpiler"?
04:24 < jrajav> Compiler works just as well
04:24 < jrajav> It takes something in one language and outputs something in another language
04:24 < niggler> because it reflects the nature of the translation
04:24 < jrajav> That's generic enough but most would agree with it
04:25 < jrajav> Fair enough, but that's not enough to say that it's MORE applicable than "compiler" and that we should prefer it
04:25 < niggler> taxonomy is important enough to justify the existence of the word
04:25 < rhdoenges> i'd say transpiler would be more something like clojurescript
04:25 < jrajav> Yeah, that's what I would have thought too
04:25 < niggler> im not familiar with clojurescript
04:25 < rhdoenges> where both  languages have their own independent runtimes and you are translating across that
04:26 < rhdoenges> clojurescript might not be the best example actually.
04:26 < jrajav> Anyway, in this case specifically, coffeescript cannot run on its own. I think even if transpiler is its own word, that coffee is still more of a compiler
04:26 < niggler> coffeescript is neither "higher" nor "lower" than javascript
04:26 < rhdoenges> how about like. a python-to-ruby transpiler.
04:26 < jrajav> It is higher - It abstracts javascript
04:26 < rhdoenges> coffee's definitely higher
04:26 < niggler> how are you defining a higher level programming language
04:27 < jrajav> More and more powerful abstractions?
04:27 < jrajav> Maybe specifically those related to implementation and data
04:28 < niggler> such as ?
04:28 < jrajav> I don't think a definition of high level is needed - Coffeescript specifically abstracts away Javascript features and syntax, therefore it is strictly more high level
04:28 < jcrew> it's also lower if you just ignore definitions
04:29 < niggler> i think its safe to say that they are at the roughly the same level
04:30 < jcrew> arguably it's at the same level
04:30 < niggler> hence transpiler is appropriate to describe the coffeescript to javascript process
04:31 < jrajav> ... Assuming that "transpiler" refers to high-level/low-level
04:31 < niggler> surprisingly enough, the wikipedia article is correct
04:31 < niggler> compiler refers to higher-level -> lower-level
04:31 < jrajav> Not necessarily
04:32 < niggler> as it is generally used
04:32 < niggler> which is why transpiler exists as a concept
04:32 < niggler> there's a distinction
05:56 < zomg> wtf
05:56 < zomg> http://ajlopez.wordpress.com/2012/12/22/cobolscript-1-cobol-compiler-to-javascriptnode-js/
05:56 < zomg> COBOL -> JavaScript compiler...
05:56 < zomg> :D
05:58 < jcrew> http://timhatch.com/projects/jsassembly/index.html
05:59 < niggler> thats awesome
06:00 < niggler> i want to see vbscript to javascript
06:03 < zomg> haha, so you can run all the 90s IE-only sites
06:03 < zomg> :P
06:07 < niggler> actually zomg have you seen brython?
06:07 < ACK> please name me some cheap node.js hosting
06:07 < jcrew> heroku
06:08 < niggler> nonono
06:08 < niggler> nodejitsu
06:08 < niggler> zomg: http://www.brython.info/index_en.html
06:09 < zomg> Disappointed not Brothon, Python for Bros
06:09 < zomg> Not sure how that would differ from normal python however.
06:09 < zomg> =)
06:09 < zomg> Maybe it would look more like Ruby
06:09 < zomg> ;>
06:10 < niggler> lol that would be terrible
06:10 < ACK> any more companies
06:10 < niggler> actually i asked about vbscript because i wanted to slice and dice VBA
06:10 < niggler> ACK i think joyent has its own hosting solution
06:10 < niggler> appfog may have node.js support now
06:11 < niggler> cloudfoundry does have node
06:11 < niggler> nodester iirc recently raised a round
06:11 < ACK> i want hosting service from 5 to 9 us dollar 
06:11 < niggler> openshift claims it does (at least that's what i was told from a red hat employee
06:11 < zomg> ACK: per month?
06:11 < niggler> you can go through bizspark and use azure
06:12 < niggler> that's free
06:12 < ACK> yes
06:12 < jcrew> heroku has a free solution too
06:12 < zomg> Amazon EC2 has a free tier as well but requires manual set up
06:12 < niggler> ACK just use a free service
06:12 < ACK> i live in india
06:12 < niggler> EC2 is free for one year
06:12 < niggler> lol appfog bought nodester
06:13 < niggler> ACK appfog looks pretty cheap
06:13 < niggler> http://www.appfog.com/products/appfog/pricing/
06:13 < niggler> the "FREE forever" claim causes some consternation
06:13 < zomg> You might be able to find some cheap VPS for 9 usd month 
06:14 < zomg> niggler: interesting
06:14 < ACK> what about webfraction
06:14 < zomg> not a whole lot of data transfer though
06:14 < niggler> 10 bucks a month
06:15 < niggler> honestly all of these low-cost solutions concern me
06:15 < niggler> if you are going with a close-to-free service you might as well go with the free service
06:16 < zomg> ACK: what are you planning on hosting? Hobby projects?
06:16 < ACK> yes
06:16 < niggler> def go free
06:17 < niggler> also get out of india
06:17 < zomg> Yeah that appfog thing looks alright for hobby stuff
06:17 < zomg> 50 gig traffic + 2 gb ram plenty enough
06:18 < zomg> I have a VPS with 512mb RAM + 200 gigs traffic + 24 gigs storage which is like 20 usd month, so if you just wanna host node stuff or the other things they run, it seems like a pretty good deal :)
06:18 < ACK> the first plan on this page http://www.appfog.com/products/appfog/pricing/
06:19 < ACK> Free  Forever
06:19 < zomg> Yeah
06:21 < ACK> ok thanks
06:21 < ACK> and where can i learn callbacks in more depth
06:21 < ACK> for my understanding
06:22 < substack> what is there to learn?
06:42 < harushimo> https://gist.github.com/4362321
06:42 < harushimo> what am i doing wrong?
06:43 < harushimo> I'm learning node but I can't get the dns to display on my terminal
06:43 < harushimo> anyone
06:44 < jcrew> +ip ?
06:44 < harushimo> really?
06:44 < jcrew> oic what you're doing
06:45 < jcrew> dns callback is generally err,address,family
06:45 < jcrew> change your callback to function(err,ip){
06:46 < harushimo> I did that
06:46 < harushimo> so then I need a if statement
06:47 < harushimo> if(err) return "Webpage doesn't exist" or something like along those line
06:47 < harushimo> s
06:47 < jcrew> you don't have err defined anywhere
06:47 < harushimo> no I don't
06:47 < jcrew> in the code you posted, the variable 'ip' contains the error object
06:48 < harushimo> ok.
06:49 < harushimo> this is awesome
06:49 < harushimo> I'm really starting to look node
06:49 < harushimo> I mean like
06:49 < harushimo> thank you
06:49 < harushimo> I just started learning about two weeks ago
06:50 < harushimo> is there a good tutorial how to write node for a specific api?
06:50 < harushimo> I want to dabble into that too
06:53 < harushimo> any suggestions?
06:53 < jcrew> i think there are some for expressjs out there, google will help tho
06:54 < harushimo> I've been googling some stuff
06:54 < harushimo> I thought people can suggest good one
07:19 < JamesS237> Hi everyone, I have just had an idea. Would it be possible to compile node.js, for example, on android. and then use it like phonegap with dynamic pages?
07:22 < jcrew> i guess so, last time i looked you could compile c for android apps
07:22 < jcrew> that was a couple of years ago though
07:27 < jcrew> you can use phonegap to access resources on the device though, so compiling nodejs wouldn't really be needed
07:27 < JamesS237> yeah, and itd take a few tweaks
07:28 < jcrew> i mean you can generate dynamic pages by just writing japanese into the index page for the html view
07:28 < jcrew> javascript^, watching einstein video about bombs
07:29 < JamesS237> haha ok
07:40 < owen1> how do u guys deploy your code? 
07:40 <@Nexxy> <่ด>
07:41 < yawnt> is that a ninjablock?
07:41 <@Nexxy> rofl
07:41 < yawnt> yo Nexxy 
07:41 < yawnt> owen1: nodejitsu :D
07:41 <@Nexxy> o hai
07:42 < yawnt> i think my parents are dead or something
07:42 < yawnt> they should've been here an hour ago
07:42 <@Nexxy> you're probably right
07:42 <@Nexxy> wrong
07:42 <@Nexxy> i mean wrong
07:42 <@Nexxy> you're probably wrong
07:42 <@Nexxy> they are probably fine
07:43 < yawnt> lol
07:43 < yawnt> fuck you
07:43 < yawnt> nah they said they're just late as hell
07:43 <@Nexxy> simmer
07:43 <@Nexxy> simmer down now
07:43 < yawnt> simmer? the cooking thing?
07:43 <@Nexxy> no need to get fighty
07:43  * yawnt draws a sword
07:44 <@Nexxy> oh I love a well done contour drawing
07:44 <@Nexxy> good job
07:44 < yawnt> thanks!
07:44  * yawnt stabs Nexxy with the newly designed sword
07:45 <@Nexxy> well I'm not playing if that's how you're going to be
07:45  * Nexxy detaches irssi
07:51 < owen1> yawnt: how do u tell nodjitsu u want to u deploy? 'git push production master' ?
07:51 < yawnt> owen1: there's a tool called jitsu for that :)
07:52 < yawnt> more infos here http://handbook.jit.su/
07:54 < owen1> yawnt: nice. i am curious about deploy to your own servers or hosted servers, but not paas.
07:56 < owen1> i know etsy uses a web interface with a button to deploy. it's pulling the repo and using dsh and rsync to send the recent code to multiple hosts.
09:14 < Cruisader> Hi
09:16 < Cruisader> Whats up?
09:18 < Cruisader> Is it really this quiet here?
09:19 < ikss> yup
09:21 < Cruisader> Thats amazing ikss
11:16 < Tester_> Hello
11:17 < Tester_> A quick question is it possible to monitor node.js apps with google analytics?
11:18 < FrenkyNet> Tester_: ofcourse
11:19 < Tester_> is there any tutorial or a how to?
11:19 < FrenkyNet> it's just front end stuff, and they have a guide on ajax stuff too which will apply to sockets
11:19 < FrenkyNet> it's not specific to node, it's the same for every language
11:19 < gildean> Tester_: ga is just a cross domain script
11:19 < FrenkyNet> you include the tag in the html and you're off
11:20 < gildean> you just put it in the dom, like any frontend script
11:20 < Tester_> ok, I doubt I need some backend stuff all I need is users amount how much time they spend and from where they are
11:20 < Tester_> ok, thanks a lot for the help 
11:44 < evelyette> hi, I need some help
11:45 < milani> evelyette, drop the question here someone will pick it up;)
11:45 < evelyette> can you please take a look at the following: node+socket.io+redis code ... I'm trying to connect to the node with socket.io (with redis backend) and create a room named 'lobby', where all the clients should pub/sub the messages
11:46 < evelyette> the socket.io code is as follows: http://dpaste.com/850504/
11:46 < evelyette> the jade code is here: http://dpaste.com/850505/
11:46 < evelyette> the first problem is that when pressing the "Send" button in jade, nothing happens, but this is not the root cause of not working ... but we can take a look at that first 
11:46 < evelyette> any ideas ?
11:48 < ChrisMatheson> evelyette does the submit function even run? can you break on first line for example ?
12:17 < saschagehlich> chjj: ping
12:24 < milani> anyone tried building node with shared v8?
12:25 <@konobi> milani: ?
12:25 <@konobi> configure flags giving you issues?
12:26 < milani> konobi, hmmm. mine does not build. maybe my changes caused that.
12:26 < milani> let me check again.
12:28 < milani> konobi, nope. it doesn't work.
12:28 < milani> there is a problem in nodejs build system.
12:29 < milani> using --shared-v8  flag, node failed to build.
12:29 < milani> we should add v8.h even if node_shared_v8==true
12:32 <@konobi> did you use all the other --shared flags?
12:32 < milani> no.
12:32 <@konobi> includes, libpath, libname, etc?
12:33 < milani> no. what I did was : $ ./configure --shared-v8 && make
12:33 <@konobi> yeah, you need to tell it where all the peices are
12:33 < milani> I think I should add --shared-v8-includes too.
12:43 < MI6> joyent/libuv: bnoordhuis created tag node-v0.9.4 - http://git.io/jixylg
12:50 < d4rklit3> hey
12:50 < d4rklit3> i have a prototype that is an abstract for a couple of service api i am writing.
12:50 < d4rklit3> I want that prototype to have a property called callback
12:50 < d4rklit3> that can be set by whatever is using it as its proto
12:53 <@konobi> k
12:55 < d4rklit3> ?
12:55 < d4rklit3> err how do i do this heh
12:56 < d4rklit3> writing it in coffee btw
12:57 < d4rklit3> like ideally shouldn't i be able to do this:   this.prototype.callback = function() {} ?
12:59 < SomeoneWeird> yes?
13:00 < d4rklit3> odd
13:00 < d4rklit3> undefined
13:01 < SomeoneWeird> oh
13:01 < SomeoneWeird> this.callback = function() {}
13:01 < d4rklit3> i think coffee is making this weird
13:02 < SomeoneWeird> wouldn't surprise me
13:02 < d4rklit3> im writing these classes as statics
13:02 < d4rklit3> where i don't need to
13:02 < d4rklit3> hold on. im pretty sure if i do this in a less stupid way it will work
13:03 < yorick> is there some kind of thing that combines the power of streams and the power of dnode? or should I make something like that myself, either using MuxDemux, or by just passing events over dnode (which fails with write because it returns things) and implementing handlers if the dnode dies?
13:03 < yorick> will v0.10 be released soon?
13:04 <@konobi> enocoffee, can't help
13:04 <@konobi> yorick: by christmas
13:05 < yorick> konobi: oh, that's great because then things will be ported to stream2 :)
13:05 < d4rklit3> what is a good event lib for node?
13:05 < yorick> d4rklit3: node is an event lib.
13:05 <@konobi> yorick: i didn't say _which_ christmas
13:05 < yorick> konobi: neither did i :)
13:05 < SomeoneWeird> d4rklit3, events..?
13:05 < d4rklit3> yeah like i want classes to fire events
13:05 < d4rklit3> so i create an object and be like addeventlistener() etc
13:05 < SomeoneWeird> node has that natively
13:05 < yorick> d4rklit3: require('EventEmitter')
13:05 < d4rklit3> cool
13:05 < yorick> well maybe not that
13:05 < SomeoneWeird> ^^ require('events')
13:06 < d4rklit3> what is the package
13:06 < yorick> require('events').EventEmitter
13:06 < d4rklit3> heh
13:06 < d4rklit3> ok
13:06 < d4rklit3> i'll read up
13:06 < SomeoneWeird> d4rklit3, nothing, it's native to node
13:07 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:07 < d4rklit3> package, module
13:07 < d4rklit3> i meant module
13:07 < SomeoneWeird> heh
13:07 < milani> d4rklit3, if you want to call your callback in the abstract class
13:08 < milani> and set the callback on derived class, it's easy.
13:08 < milani> it doesn't even require event emitter.
13:08 <@konobi> milani: have any luck with that?
13:09 < milani> konobi, with what? v8? yeah worked. needed shared-v8-includes as you mentioned.
13:10 <@konobi> cool
13:10 < milani> konobi, I built node as static library
13:10 < d4rklit3> milani yeah i think i am just making all these classes static
13:11 < milani> I guess I can add -fPIC and build it as dynamic library.
13:11 < d4rklit3> which is making coffee behanv weird
13:11 < milani> didn't try yet.
13:12 < milani> d4rklit3 my own view is that there is nothing as ordinary oop in js
13:12 < milani> static, abstract etc.
13:12 < milani> there are just objects that can link other objects;)
13:14 < d4rklit3> yeah
13:14 < d4rklit3> coffeescript sees it slightly diff
13:14 < d4rklit3> at least as a write of coffee
13:14 < d4rklit3> for some reason setting this damn callback isn't doin it for me
13:16 < d4rklit3> my abstract says Object #<ClientRequest> has no method 'callbacl'
13:17 < d4rklit3> no that i look at it , the "static" approach was better
13:23 < d4rklit3> I see whats happening
13:24 < d4rklit3> i am passing this abstract method into an https.request call
13:24 < Guest72211> Heya all
13:24 < d4rklit3> no good :(
13:25 < Guest72211> substack around today?
13:27 < d4rklit3> something browserify related?
13:31 < d4rklit3> i dunno this jsut wont work. 
13:41 <@konobi> substack needs his own channel =0)
13:52 < evelyette> hi, I've partially fixed the problem with Jade template sending the message to socket.io: http://dpaste.com/850548/
13:53 < TehShrike> #substack
13:53 < evelyette> the 24th line (socket.emit('message', $('#message').val());) is called, but doesn't actually send the message to socket.io
13:53 < evelyette> why not ?
13:55 < milani> konobi, do you know if node changed v8 code?
13:55 < milani>  error: undefined reference to 'v8::Object::SetPointerInInternalField(int, void*)
13:56 < Guest72211> Sorry for the delay, do-release-upgrade this morning
13:56 < Guest72211> Anyway, It's about dnode actually
13:56 < Guest72211> I finally noticed the instructions on socket.io's site regarding not hosting the client via node js
13:56 < Guest72211> I'm wondering if there is similar docs for dnode
13:56 <@konobi> milani: you could check the source tree
13:57 < milani> ok.
13:58 < FesterCluck> Sorry about all that guest crap
13:58 < FesterCluck> didn't even notice
13:58 < FesterCluck> Days like this make me wish for mIrc again
13:58 < TehShrike> FesterCluck: pretty sure it's still around :-P
13:58 <@konobi> milani: as far as i'm aware, it's just a flat copy... though node-gyp might do something
13:59 < FesterCluck> Yeah, earnestly I use Trillian's IRC client these days
13:59 < flatline> irssi ftw
13:59 < FesterCluck> It's nothing special, but it does the job
14:01 < FesterCluck> Hmm.. upgrade from 10.10 to 12.04
14:02 < FesterCluck> This should take forever
14:07 < Iszak> Anyone know of an event driven database where I can bind an event in node.js which will get called when a query is matched? or so.
14:07 < Iszak> because otherwise there is no point in using websockets (in my case) as the backend would just default to periodically querying the database.
14:09 <@konobi> Iszak: you could setup up NOTIFY with postgres
14:09 < FesterCluck> Iszak: MongoDB has custom js methods, you could use that
14:09 < TehShrike> Redis supports sub/pub I believe
14:10 < FesterCluck> pub/sub is really what you want
14:10 < FesterCluck> DB in the same thread is usually a bad idea
14:11 < Iszak> I've got to think about this carefully.. because I may not need a noSQL database.
14:12 < Iszak> FesterCluck can you elaborate on your statement about db in the same thread.
14:13 < FesterCluck> So, NodeJS, out of the box, operates all in 1 process
14:13 < FesterCluck> It is typically best to load your db in a separate process
14:13 < FesterCluck> Because of bootstrap time, indexes which need maintenance
14:14 < FesterCluck> DB's just need to do things
14:14 < FesterCluck> That's what you want it in a separate process
14:14 < Iszak> will it be difficult to move it to it's own thread in the future to increase performance?
14:15 <@konobi> how the db runs has nothing to do with node
14:16 < deoxxa> FesterCluck: i'm not sure anyone was suggesting that you should write a database in node and run it in the same process
14:16 <@konobi> Iszak: with the postgres notify stuff... you can have it send data to a socket when the notify is emitted
14:19 < FesterCluck> Yeah, I think the point I was trying to make is that the only way to get true events is with something in the same process
14:19 < deoxxa> wat
14:20 < deoxxa> no it's not
14:20 < deoxxa> FesterCluck: if you don't actually know the answer to something, don't just pretend that you do :/
14:20 < deoxxa> it's not helpful
14:20 < FesterCluck> lmfao
14:21 <@konobi> deoxxa++
14:21 < FesterCluck> I know what I'm talking about, but I can see we're getting off topic
14:22  * deoxxa shrugs
14:22 < FesterCluck> Iszak: " I've got to think about this carefully.. because I may not need a noSQL database."
14:22 < FesterCluck> Can you describe the options you are considering and why?
14:22 < FesterCluck> Maybe that would be a better place to start
14:24 < Iszak> sorry went for a coffee
14:25 < FesterCluck> All good, so tell us more about what you're needing answered
14:25 < Iszak> So I wasn't talking about writing a database in node.js, I figured the reason you'd use another thread to interact with the database is because the database is blocking and thus slowing down the main thread.
14:26 <@konobi> that's all handled for you
14:26 < Iszak> well not blocking but time consuming
14:26 < FesterCluck> Iszak: That has classically been a problem, though it wouldn't be for node
14:26 <@konobi> it's an async callback once the interaction is completed
14:26 < deoxxa> the database is a completely separate entity
14:26 < Iszak> well even though node.js is event driven, only one thing can execute at any given time, right?
14:27 <@konobi> "run this", "do other stuff", "oh... 'this' has finished... time to run processing on output"
14:27 < deoxxa> ^^ this
14:28 < Iszak> anyhow, lets not go down that rabbit hole. What I'm building has a variety of components, the first component I'm building is the chat, but the history gets pruned after a certain length.
14:29 < Iszak> because I want the delivery of chat messages to be as close to real time, I don't want to resort to polling the server every x so I'm using websockets - fine. But in the backend I need to query a database (noSQL or relational) for the data which means I may as well go with polling.
14:29 < Iszak> So I want to use event driven database which can execute node.js code on new results and that'll dispatch it to all the clients.
14:30 <@konobi> Iszak: save to db, then emit to clients
14:30 < Iszak> hmm I see what you mean.
14:30 <@konobi> no need for polling
14:30 < Iszak> I didn't think of it like that, that could certainly work.
14:31 < Iszak> How would I scale the websocket server? by processors or threads?
14:31 < FesterCluck> Even better, build model objects which throw the events when they are updated
14:31 <@konobi> of course thre's implications when changing out of single process mode, but it's easy enough to do IPC between processes
14:31 < FesterCluck> that way the db save and the client data can go out simultaneously
14:31 < Iszak> konobi yeah that's the reason for my prior question.
14:31 < Iszak> FesterCluck can you elaborate on that?
14:32 <@konobi> Iszak: yeah, just means that you need to forward chat entries onto other processes for transmitting to other clients
14:32 < flatline> search IPC
14:32 <@konobi> FesterCluck: how about not talking about that at all and look at the real issues at hand
14:32 < FesterCluck> Iszak: Having events thrown on the updates usually involves override getters and setters
14:32 < Iszak> konobi I think I won't worry about this for now, because there's a whole host of problems that will arise when I scale to multiple processors, e.g. load balancing.
14:33 <@konobi> Iszak: yup, jfdi
14:33 < FesterCluck> It's a chat server
14:33 < FesterCluck> Iszak: Do you need to save old chat entries?
14:33 <@konobi> Iszak: hell, write the chats to file as a start
14:33 < FesterCluck> Or are you looking for live stream?
14:33 < Iszak> FesterCluck live stream.
14:33 < FesterCluck> No need for a db at all
14:34 < Iszak> Hmm, that is true.
14:34 < Iszak> Alright, will give it a try, thanks guys.
14:34 < FesterCluck> Use pub/sub
14:34 < FesterCluck> have a good one
14:34 < Iszak> For what?
14:35 < FesterCluck> Pub/sub is the model you would use for that sort of chat server
14:35 < Iszak> err?
14:35 < Iszak> Not following here, surely it already is pub/sub?
14:35 <@konobi> Iszak: just use socket.io and see how far you get... things'll fall into place
14:35 < Iszak> using websockets to pub and sub
14:35 < Iszak> konobi I am :P
14:36 < Iszak> should have mentioned that before, sorry.
14:36 < FesterCluck> https://github.com/joyent/node/wiki/modules
14:36 <@konobi> Iszak: i know
14:36 < flatline> Iszak: keep your server processes stateless, use a shared memory like memcached / redis and use a socket LB lika HAproxy, so you can scale
14:36 < Iszak> flatline will do.
14:36 <@konobi> FesterCluck: ? surely you know of npmjs.org
14:37 < FesterCluck> Yeah, basically a single object which all clients listens for events from
14:37 <@konobi> Iszak: you might want to read about the 'XY problem' for when you drop in again
14:37 < FesterCluck> The search function on npmjs.org stinks
14:37 < Iszak> you're saying google stinks? :P
14:37 < FesterCluck> For a library search? yeah, too used to apt
14:38 < Iszak> konobi just read it, will try and explain the original problem instead of my solution.
14:38 < FesterCluck> "npm search" is fine
14:38 <@konobi> Iszak++
14:38 < FesterCluck> Indeed :-)
14:40 <@konobi> Node.js - https://github.com/joyent/node/wiki/Api-changes-between-v0.8-and-v0.10 - http://logs.nodejs.org/node.js/ | http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem
14:40 <@konobi> bah
14:40 -!- konobi changed the topic of #Node.js to: Node.js - https://github.com/joyent/node/wiki/Api-changes-between-v0.8-and-v0.10 - http://logs.nodejs.org/node.js/ | http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem
14:40 < d4rklit3> anyone familiar with heroku?
14:40 < d4rklit3> having some ssh key problems
14:41 < d4rklit3> my id_rsa key is used for my work stuff mostly
14:41 <@konobi> people still use heroku?
14:41 < d4rklit3> so i have it set to a heroku account for my work
14:41 < d4rklit3> o plz son
14:41 < d4rklit3> what else you going to use?
14:41 <@konobi> nodejitsu? joyent? linode?
14:41 <@konobi> dotcloud?
14:41 < d4rklit3> heh
14:41 < d4rklit3> ok
14:41 < freewil> colocate?
14:42 < d4rklit3> i dunno in any case it keeps using my id_rsa key 
14:42 < d4rklit3> but i made a new key for it to use
14:42 < d4rklit3> i don't know how this works
14:43 < d4rklit3> are all these keys linked to the id_rsa
14:43 < FesterCluck> konobi: XY Problem link, thanks very much for that
14:44 < FesterCluck> d4rklit3: speaking generally, they can be. Typically you can list more than one key as well
14:45 <@konobi> d4rklit3: `ssh-add -l`
14:45 < FesterCluck> If it generated a new public key, you need to go add that to the server
14:46 <@konobi> you may also need to add it to your ssh-agent, ssh-add is what'll do that... ssh-add -l will show which keys are enabled on your ssh agent
14:47 < FesterCluck> in console land, that's ~/.ssh/authorized_keys, id_rsa, or id_rsa.pub
14:47 <@konobi> not authorized keys
14:52 <@konobi> the .pub is what you need to give heroku, the id_rsa is what you'll need to give ssh-add
14:53 <@konobi> authorized keys is for incoming connections... so not something you need to worry about
15:04 < Iszak> anyone know of a library to proxy the context for callbacks?
15:04 < Iszak> I know I can do it manually with an anonymous closure, but a nice library would be nice.
15:05 <@konobi> ?
15:05 <@konobi> you mean currying?
15:05 < Iszak> no I don't think thats what I want.
15:06 < Iszak> So say I've got an event and I'm setting the callback to an object method, the "this" context changes, I want to preserve it.
15:06 < Iszak> kind of like jQuery's $.proxy() method.
15:06 <@konobi> oh... bind or apply
15:06 < Iszak> but that calls it, no?
15:06 < Iszak> So I'd need to wrap it in an anonymous function which calls bind/apply?
15:07 <@konobi> Iszak: http://ejohn.org/apps/learn/
15:07 <@konobi> great resource on that sort of thing
15:07 < Iszak> alright, will take a look thanks konobi++
15:08 <@konobi> apply calls, bind doesn't
15:08 <@konobi> but yeah, have a read first
15:10 < Iszak> is there any specific slide I should be looking at?
15:13 <@konobi> nah, just read through
15:13 < Iszak> most of this stuff I know, a few things I didn't e.g. callee
15:16 < Iszak> ah I see where I got confused call vs apply vs bind
15:20 < d4rklit3> they dont make it easy to get the server ip address with node do they?
15:22 < Iszak> konobi on slide 36 do you always do that?
15:22 < d4rklit3> crap google api's require an IP address
15:22 < d4rklit3> for auth
15:22 < d4rklit3> heroku does not have a consistent IP
15:23 <@konobi> Iszak: not really, unless it's a public interface
15:24 <@konobi> or actually i'll tend to throw new Error instead
15:33 < yati> Hi. I'm trying to install developmentseed's sqlite3 driver using `npm install sqlite3` and this is what I get: http://dpaste.org/sZx0M/ I have installed node-gyp.
15:33 < yati> Any insight
15:33 < yati> ?
15:35 <@konobi> the version of gcc/g++ must match the version that was used to build node
15:36 < yati> konobi, It definitely matches. I just compiled node!
15:38 <@konobi> yati: might bew too old/new a version for sqlite
15:39 < yati> konobi, sqlite per se is working. Dunno about the node sqlite3 package. Is this driver recommended anyway?
15:40 <@konobi> for sqlite, yup
15:40 < yati> hmm
15:40 <@konobi> it's an embedded version
15:40 <@konobi> check the git repo and try building manually there
15:41 < yati> hmm
15:41 < yati> Let's try that
15:42 < yati> I see npm is pulling 2.1.3, when the project has updated to 2.1.5! Trying npm install sqlite3@2.1.5
15:42 < timeturner> sweetness
15:43 < timeturner> ubuntu server virtual machine development
15:43 <@konobi> yeah, npm has a cache
15:43 < yati> konobi, it worked :)
15:43 < yati> I feel like knocking down the cupboard beside me. *joy*
15:43 < yati> :)
15:44 <@konobi> yati: np... buy me a coffee sometime =0)
15:45 < yati> konobi: sure! come to Pune - let's hack node over a coffee ;)
15:45 <@konobi> Pune?
15:46 < yati> Pune, India :)
15:46 <@konobi> ah... heh
15:55 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:03 < Iszak> anyone use a framework (like express.js) for building APIs in node.js?
16:08 <@konobi> Iszak: restify works pretty well
16:08 < Iszak> konobi well I'll be using socket.io as well.. but I don't see the point in doing auth throw socket io?
16:12 < Iszak> what do you think?
16:12 <@konobi> Iszak: not sure
16:14 <@konobi> i'm a fan of doing auth everywhere... but not sure of the specifics of socket.io
16:15 <@konobi> well, authz anyway
16:49 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:35 < niggler> is there a way to set the stack size within a node program, or do I have to use the command line flag
17:36 <@konobi> commandline
17:36 < niggler> so there's no way to do it while the program is running
17:37 <@konobi> nope
17:37 < niggler> is that a v8 or api limit?  iirc in v8 C++ api you could run set_stack_limit
17:39 -!- mode/#Node.js [+o piscisaureus__] by ChanServ
18:00 < masch> hi #node.js! How would so write a audio-transcoder-stream? i want to request('http://some/shoutcast/src').pipe(webmtranscoder).pipe(response). would it be best to use ffmpeg for that or is there a good js implementation for something like that?
18:00 < niggler> also what's the best way of writing code that can be used both in node and in browser?
18:01 < masch> niggler: dont depend on anything ;)
18:01 < niggler> masch: i was referring to checking for 'require' or 'exports'
18:02 < niggler> i could just write the code as if its for the browser, and write a thin node module that just used vm.runInThisContext
18:02 < masch> oh, okay. I did that one. was something like " if(!this.window) { module.exports = mystuff; } " iirc
18:02 <@konobi> niggler: v8
18:03 < niggler> konobi what i meant was, in the C++ api you can call set_stack_limit -- is that something that node just doesnt expose or is there a limitation where you cant change it later
18:05 <@konobi> niggler: it's a v8 specific thing, since by the time you get into JS space the context has already been created
18:06 < niggler> "You must set the heap size before initializing the VM - the size cannot be adjusted after the VM is initialized."
18:10 < terietor> hello
18:10 < terietor> I have 1 server(web app) and 1 client(web app)
18:10 < terietor> and I want to make a request with http.request
18:10 < terietor> so I wrote this code
18:10 < terietor> http://paste.kde.org/630566/
18:11 < terietor> and I am trying to request the specific url
18:11 < terietor> but I receive and error which says "socket hang up"
18:11 < terietor> i have put the same url in the browser and it works
18:11 < terietor> can you tell me what I am doing wrong?
18:13 < Technodrome> Good day
18:13 < Shinster> Hello
18:15 < masch> nodejs 0.10 still not in portage :( 
18:15 <@konobi> Technodrome: get rid of the remoteReq.end()
18:16 <@konobi> masch: doesn't exist
18:16 < terietor> konobi the remoteRed.end() is for my question?
18:16 < gildean> torgeir: you're missing a comma
18:16 <@konobi> terietor: yup
18:17 < gildean> oops, i mistabbed also :D
18:17 < masch> konobi: oh, okay. i thought it was released. waiting for streams2. 
18:17 < gildean> terietor: you're missing a comma
18:17 <@konobi> masch: nope, just in 0.9
18:18 < terietor> gildean what do you mean? where?
18:18 <@konobi> gildean: nah, he's closing it before it has a chance to start
18:18 <@konobi> terietor: just remove that .en()
18:18 <@konobi> *.end()
18:18 < masch> konobi: so 0.9.4 uses the new streaming api?
18:19 < gildean> konobi: yep, but the missing comma is still a syntax error
18:20 <@konobi> masch: yup
18:20 < gildean> terietor: on line 5
18:20 < masch> konobi: yeeehaa *hacking ebuild*
18:20 <@konobi> gildean: he was talking about a socket error, so i'm assuming it's a cNp error
18:21 < terietor> I removed the remoteReq.end()
18:21 < gildean> konobi: yeah, just pointed out that there's also a syntax error
18:21 < terietor> but it doesn't hang up
18:21 < terietor> but it does't print the chunk either
18:23 < gildean> terietor: the code you pasted has no line that would print the chunk anywhere, it's calling a perculiar func1(req, res, chunk) where the req and res are passed down as arguments from the topmost function
18:23 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:23 <@konobi> terietor: you're using res/req all over the place
18:23 <@konobi> which one do you mean and where?
18:24 < gildean> also the res.statuscode would be the statuscode from the res from the passed down res, while i suspect you want to print out remoteRes.statuscode
18:24 < Technodrome> konobi:  huh?
18:24 <@konobi> Technodrome: mis-tab
18:25 <@konobi> terietor: to start off with, anywhere you're using function ()... split it out into a named function
18:26 < terietor> this is modified code
18:27  * terietor is moving his code in named functions
18:31 < terietor> konobi here http://paste.kde.org/630596/
18:32 < mistertwig> zzzzaaaaaaaaaaaaaaaaaaasssssssssqqqqwwwwi2
18:34 <@konobi> terietor: function(remoteRes) --- that's not named
18:41 < terietor> konobi here http://paste.kde.org/630608/
18:42 <@konobi> terietor: in func3, there is no req or res
18:42 <@konobi> (tip... there shouldn't be)
18:43 < terietor> http://paste.kde.org/630614/
18:44 <@konobi> you didn't follow the tip
18:46 <@konobi> terietor: copy-and-pasting shit everywhere will not work, you need to understand it
18:49 < terietor> konobi i found the issue
18:49 <@konobi> o.O
18:49 < terietor> I was giving the wrong url
18:49 <@konobi> trust me, it's more than that
18:50 < terietor> I had combined querystring and url
18:50 < terietor> what do you mean?
18:50 <@konobi> that code is a complete shambles
18:50 <@konobi> you use req, where you mean remoteReq, and vice versa, you use res and remoteRes interchangably too
18:52 < terietor> konobi ty, I will try to fix them :)
18:56 < jedahan> How do I handle a require error?
18:57 < jedahan> I want to load 'config.json' if it exists, but if it doesn't still continue running the program
18:58 <@konobi> try catch?
18:59 < harushimo> I'm learning how to do user_authenication using the four square api? I just want to know if I'm on the right track for my script
19:00 < harushimo> its pretty small right now but I'll be add to it
19:00 < harushimo> https://gist.github.com/4365300
19:00 <@konobi> harushimo: have a look at npm passport
19:01 < harushimo> I haven't looked at npm passport
19:01 < harushimo> I will look into it. what is passport?
19:02 < harushimo> thanks I'll do that now
19:06 < harushimo> what about node-foursquare to check users authenication?
19:09 <@konobi> https://npmjs.org/package/passport # search for foursqaure on the page
19:11 < kanzure> i'd like to add a shell utility to a node module
19:12 < kanzure> with options like "thing action" and "thing verb the things"
19:12 < kanzure> what module would be best for this?
19:13 < quinnirill> hey, is there some kind of a difference for how native modules have to be made for 0.9.x? I'm getting symbol not found error in 0.9
19:14 < kanzure> aha.. commander?
19:14 < kanzure> https://npmjs.org/package/commander
19:14 < quinnirill> more details here: https://travis-ci.org/jussi-kalliokoski/node-dsp
19:14 < kanzure> hm, no. not commander.
19:19 < kanzure> can someone kick out avalanche123, geeze
19:21 <@konobi> ?
19:23 <@konobi> quinnirill: i don't see anything for 0.9
19:25 < quinnirill> konobi: hang on, yeah, I removed it from the travis testing
19:25 < quinnirill> konobi: https://travis-ci.org/jussi-kalliokoski/node-dsp/jobs/3798676
19:26 <@konobi> quinnirill: using the updated node-gyp?
19:27 < quinnirill> konobi: I don't think so, I don't have 0.9.x installed locally right now, but I have 0.8.15
19:27 < quinnirill> konobi: something changed?
19:28 <@konobi> quinnirill: not sure, but i think you need to npm install node-gyp per version
19:29 <@konobi> and the error would indicate that it's a packaging issue
19:29 < quinnirill> konobi: hm, ok, thx... I'd have thought travis would have the installs isolated anyway
19:30 < quinnirill> that avalanche guy manages to spam nicely even without saying anything
19:30 <@konobi> eh?
19:31 <@konobi> what sort of thing?
19:33 <@konobi> quinnirill: ?
19:35 <@konobi> kanzure: ?
19:35 < tjfontaine> he means his one man join/part flood
19:36 <@konobi> ah, i stopped logging those a while back
19:40 < mistertwig> there isn't any forum software developed for node is there?
19:41 <@konobi> not sure, check npmjs.org
19:41 < mistertwig> nope
19:41 < mistertwig> cool
19:42 < quinnirill> ahh, /ignore'd, much better
19:43 < mistertwig> i didn't even notice lol
19:43 < mistertwig> maybe someone should report him?
19:44 < gildean> his client prolly tries to autojoin too many channels on connect, that's considered as excess flood on freenode
19:44 < mistertwig> needs more sleeps :P
19:44 < tjfontaine> or tries too hard to identify with services
19:44 < mistertwig> he's only on #node.js
19:44 < mistertwig> :S
19:44 < mistertwig> maybe that's the first one
19:44 < tjfontaine> no he's on others
19:45 < mistertwig> oh
19:45 < mistertwig> still someone should report
19:45 < gildean> mistertwig: you can't tell where he is, the whois on freenode hides all other channels but the one you share
19:45 < mistertwig> gildean: oh i didn't know that
19:45 < mistertwig> thanks
19:45 < mistertwig> i'm new to freenode :P
19:45 < tjfontaine> treating the rfc with wanton disgread as usual
19:45 < mistertwig> rizon only has that with err
19:46 < mistertwig> secret mode or something
20:15 < mistertwig> eeee
20:15 < mistertwig> EEeee
20:15 < mistertwig> there is XSS on npm
20:31 < Kakera> is there some kind of an all-in-one package for node.js in vim?
20:32 <@konobi> pathogen?
20:33 < mistertwig> isaacs: 
20:33 < Kakera> konobi, maybe
20:33 < Kakera> I just have vanilla vim right now
20:34 <@konobi> Kakera: https://github.com/tpope/vim-pathogen
20:34 < Kakera> konobi, and then which plugins?
20:35 <@konobi> there's a bunch on github
20:37 < Kakera> any particularly recommended ones?
20:43 < mistertwig> https://github.com/isaacs/npmjs.org/issues/86
20:44 < Kakera> lol
20:46 < Kakera> I thought only Valve were capable of something like this
20:47 < harushimo> https://gist.github.com/4365970
20:47 < harushimo> I don't get why I can't get my config working properly
20:48 < quinnirill> harushimo: missing ,
20:48 < quinnirill> before "foursquare"
20:48 < aho> use jslint or jshint
20:49 < harushimo> https://gist.github.com/4365970
20:49 < harushimo> like this
20:49 < quinnirill> harushimo: well, I'd put it right after the curly bracket, but your call
20:50 < harushimo> https://gist.github.com/4365970
20:50 < harushimo> like this
20:51 < quinnirill> O.O
20:51 < gildean> harushimo: no, not like that
20:51 < quinnirill> no, I meant on the line before "foursquare"
20:52 < quinnirill> harushimo: you should check out jshint ( http://www.jshint.com/ )
20:53 < harushimo> thanks
20:53 < quinnirill> np
20:57 <@konobi> harushimo: so you didn't look at passport's foursquare support?
21:00 < yug> anyone familier with we module?
21:01 < harushimo> I did look at it
21:02 < harushimo> foursquare was recommending this on their website
21:02 < harushimo> its a native library
21:02 < harushimo> for node
21:03 <@konobi> it's not native
21:03 <@konobi> it's just plain ol javascript
21:04 < harushimo> sorry
21:04 < harushimo> I'm stil a noob here please forgive me
21:04 < tjfontaine> guess it depends on what you mean by native :)
21:04 < harushimo> I may using the term wrong
21:05 <@konobi> harushimo: passport gives you the option of using many other things in future
21:05 <@konobi> for all i know, the passport 4sq stuff is implemented using node-foursquare
21:06 < harushimo> oh really
21:06 < yug> anyone familier with we module and wored with it
21:07 < yug> i'm having a weird issue
21:08 < harushimo> ok
21:10 < harushimo> interesting to know about passport
21:10 <@konobi> add twitter, facebook, etc.
21:10 < harushimo> interesting
21:15 < Kakera> konobi, is there a plugin to auto-match parentheses?
21:15 <@konobi> other than % ?
21:16 < Kakera> no, I mean you type { and it automatically puts }
21:16 <@konobi> but yes... though it's a vim thing, not a plugin thing
21:30 < harushimo> now my javascript isn't running
21:30 < harushimo> it isn't doing anything
21:39 < jcrew> niggler: what would be a good way to do dcvs if not git, or what would be a better way of doing github to avoid what happened yesterday?
21:40 < niggler> i think you accept that github can go down and work appropriately
21:40 < niggler> the pain points about github's failure isn't the source repo
21:40 < Engin> I don't understand the rationale behind why node.js is conceived at the first place. How is it better than implementing web services in, say, Java ?
21:40 < niggler> and i think Nexxy completely missed that
21:40 < niggler> issues, for example, are centralized
21:41 < tjfontaine> conversations in here are so cyclic
21:41 < niggler> so jcrew the right way manages to integrate issues etc into the dcvs
21:41 < niggler> then there's the identity
21:41 < tjfontaine> github should just be treated a pretty viewvc
21:41 < niggler> its not clear to me who thought using github as an identity was a good idea
21:41 < jcrew> but they don't have to be, i'm curious mostly if it would be a better design a terrorist cell type dcvs where they eventually sync or somehow try to discover other cells in the same organization or repo
21:42 < niggler> problem is that directory needs to be centralized
21:42 < jcrew> then the problem is how are you sure you're recent
21:42 < tjfontaine> niggler: why? gpg works without being centralized
21:42 < tjfontaine> key parties for everyone!
21:42 < niggler> nono what i mean is how do you discover projects
21:43 < jcrew> you can centralize the service to access repos without centralizing the repo
21:43 < niggler> github's value add isnt necessarily just the viewer, given the existence of gitlab etc
21:43 < niggler> i think its about a central directory (discovery) and identity
21:43 < tjfontaine> how do you find anythign in a dht?
21:44 < niggler> jcrew there's an unsolved economic argument
21:44 < jcrew> how so?
21:44 < jcrew> or which^
21:44 < niggler> so if the community did shift to a decentralized identity model and hosting model, who's paying for bandwidth?
21:44 < niggler> and how is that being subsidized
21:44 < tjfontaine> <everyone>
21:45 < harushimo> https://gist.github.com/4365970
21:45 < niggler> its convenient to stick an open source project on github or bitbucket
21:45 < harushimo> I'm not outputting anything
21:45 < harushimo> or even connecting to the api
21:45 < jcrew> harushimo: it's probably dying on that first line
21:46 < jcrew> nevermind, seems to work
21:47 <@konobi> harushimo: Foursquare != foursquare
21:47 < jcrew> you aren't telling the server to listen on any port in your code
21:47 < niggler> jcrew so part of why github can be up is because of the enterprise service and because of a vc investment
21:47 < niggler> its not clear to me how either exist without a centralized service
21:47 < harushimo> your right
21:48 < harushimo> I always miss the small stuff
21:49 <@konobi> harushimo: jcrew is also correct, you're not listening anywhere
21:50 < harushimo> let me try listening to it
21:52 < harushimo> Its working but I get this error message on the browser: Cannot GET /
21:53 < harushimo> what does that mean?
21:53 < niggler> but getting back.  jcrew the way I would do it is to have a directory (with some sort of fallback) to specify which repo is the project head
21:53 < niggler> decoupling the social aspect from the code
21:54 <@konobi> harushimo: you haven't configured anything to serve from /
21:55 < harushimo> that is what I thought
21:55 < harushimo> I need to get the token from the website and then try it again
21:55 < harushimo> its looking for accessToken. When it isn't created at all
22:02 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:10 < harushimo> konobi: when are talking about configuring /, does that mean we need to get some keys for the script?
22:10 < harushimo> I just want to make sure I'm on the same page
22:12 <@konobi> harushimo: app.get('/', ...
22:19 < harushimo> alright
22:20 < harushimo> I'm using app.get for a lot of things
22:21 < harushimo> what does app.get('/', ) is that the address of the webpage
22:22 <@konobi> harushimo: go read up on express
22:23 < mistertwig> there's also an express channel here
22:23 <@konobi> i'd answer more normally, but i'm too sleep-deprived and impatient to be of any real help atm
22:23 < harushimo> awesome
22:23 < harushimo> thanks
22:23 < harushimo> that's okay
22:23 < harushimo> You helped me out already
22:24 <@konobi> lack of sleep and pain make konobi something something
22:25 < mmalecki> konobi: I've heard vicodin helps
22:25 < mmalecki> or any opiate really
22:26 <@konobi> mmalecki: meh, only to some extent... muscular pain
22:27 < mmalecki> oh dang, feeling sorry for you man
22:28 <@konobi> rib cage... =0)
22:30 < harushimo> ouch man
22:30 < harushimo> sorry hear that
22:30 <@Nexxy> konobi, go crazy?
22:33 <@konobi> nah, old snowboarding injury that bugs me from time to time
22:34 < gildean> konobi: you were supposed to say: "don't mind if i do"
22:34 <@konobi> heh
22:38 <@konobi> huh, still no pcre npm module
22:48 < draginx> Whats the best way of accepting images from a cURL/POST command?
22:48 < draginx> using expressjs :) do I jus tneed req.file ?
22:48 < draginx> or is there a better way of handling, like using streams?
22:50 < juboba> if I have my servlet ready to production mode how should I run it?
22:50 < juboba> I know I can: `nohup node myservlet.js &` but I imagine there must be a better way
22:51 < draginx> juboba: i plan on using naught O_o
22:51 < draginx> https://github.com/indabamusic/naught
22:52 < juboba> thanks!
23:02 < germaine> Hi, could anyone help with a problem I have with my node app?
23:03 < Kvisle> depends on the problem
23:03 < tjfontaine> it's easier to ask than it is to ask to ask
23:04 < germaine> I made a thread on stackoverflow with more detail - I am inserting data to a mongodb, it inserts the data but crashes the program
23:04 < germaine> I think it's a problem with JS/JSON
23:04 < germaine> was hoping someone here might know
23:06 < niggler> tjfontaine how about asking to ask to ask?
23:06 < matt444> I have a program that can either read from stdin or from command line arguments.  How do I know if stdin isn't coming so I can exit the process when no command options are provided?
23:07 < germaine> I guess no one can help :(
23:08 < niggler> germaine you need to give more details
23:08 < niggler> matt444 stdin.on('end'
23:08 < germaine> http://stackoverflow.com/questions/14015273/mongodb-node-js-website-crashes-but-database-updated
23:08 < germaine> here is my link ^^
23:08 < matt444> niggler: so end is called even if there is nothing to read?
23:09 < juboba> why am I getting this error? npm ERR! JSON.parse Failed to parse package.json data.
23:09 < juboba> npm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.
23:09 < juboba> I just created the file
23:09 < germaine> niggler: It inserts data perfectly fine, but the node app crashes after entering the data, I'm sure it has to be to do with the JS/JSON aspects of inserting it
23:09 < germaine> but everything I try results in no progress
23:09 < niggler> matt444 what does nothing to read mean?
23:09 < niggler> it ends when you pass an EOF
23:09 < matt444> juboba: proper json requires that the keys are strings
23:10 < matt444> niggler: thanks, i'll have to play with it to understand better
23:10 < niggler> matt444 like when you hit control-d
23:10 < niggler> germaine what's teamForm
23:11 < niggler> germaine take a peek at req and req.body to make sure you are actually getting teamForm
23:12 < germaine> niggler: teamForm is defined below that in my team.js file is it not?
23:13 < germaine> teamForm is being passed to the database correctly as it creates the entry, just don't understand why it crashes
23:14 < germaine> teamForm is undefined, the crash occurs on this > var name = teamForm.teamName; < within my index.js routes file
23:15 < germaine> niggler: It's wierd, if I remove teamForm entirely, the database still creates new entries, but just crashes
23:20 < Kakera> https://github.com/joyent/node/blob/master/lib/net.js#L1017
23:20 < Kakera> how do I find out which port it binded to?
23:27 < eduardo> Hey guys, i can't find any docs on this. app.configure('development', function(){ ..... in my code, it goes into the 'develppment' section...but how does it know? i read that its based on NODE_ENV environment setting, but i dont have that set at all
23:37 < Pubezilla> why is it process.env.PORT || portnum and not = ?
23:37 < Pubezilla> is || a node operator?
23:38 < Pubezilla> oh wait does port = process.env.PORT || portnum set the process.env.port and then set that equal to port?
23:39 < Pubezilla> like assigning it before it is assigned to port
23:40 < mistertwig> Pubezilla: || is the or operator 
23:40 < thl0> Pubezilla: port gets assigned to process.env.PORT if it is present, otherwise to portnum (|| stands for 'or')
23:42 < Pubezilla> ohhhh ok my first thought was "or" but then it didn't make sense so i thought it had to be something different, but now it does
23:44 < tjfontaine> Pubezilla: it is a shorthand for the common ternary pattern of `foo ? foo : bar` relying on the truthy values
23:44 < Pubezilla> ah I see. thanks
23:46 < Pubezilla> and bar will only happen if both foos are false?
23:46 < Pubezilla> : is else?
23:47 < Pubezilla> or if the first foo is false
23:47 < Pubezilla> and the second is true, do bar
23:47 < tjfontaine> everything after : is the false branch
23:47 < Pubezilla> ok
23:48 < tjfontaine> `if (foo) { baz = foo } else { baz = bar }` `baz = foo ? foo : bar` `baz = foo || bar` are all functionally equivalent
23:51 < Pubezilla> if (port.env.PORT) {port = port.env.PORT}else{ port = 234234}
23:52 < Pubezilla> very cool
--- Log closed Mon Dec 24 00:00:15 2012
