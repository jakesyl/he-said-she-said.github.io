--- Log opened Sat Oct 13 00:00:00 2012
00:15 < Bwild>  /window 23
00:21 < Zane> Hey all, I'm really stuck on a major problem on my production server. I've detailed the problem @ StackOverflow, I'd appreciate any and all ideas... http://stackoverflow.com/questions/12868107/node-jsexpress-randomly-drops-requests-resulting-in-a-gateway-timeout
00:30 < chovy> Zane: there are no errors in log?
00:30 < chovy> are you piping output to a log file? node app.js > app.og 2>&1
00:30 < Zane> good question, chovy. No, there are no errors in any  logs that I know of
00:31 < Zane> let me clarify, 1 sec
00:31 < Zane> I have a process.addListener("uncaughtException", function() .... ) and I write anything that hits that into a log file
00:31 < Zane> I also have an error handler on Express
00:31 < Zane> neither of  them are reporting errors
00:32 < Zane> is that sufficient? or should I still enable what you're talking about?
00:36 < _numbers> anyone know of a good static file server that also supports streaming mp4 video ?
00:37 < Zane> @chovy sorry its beed a while since I IRC'd,didn't realize that was a DM
00:40  * zivester test
00:44 < Zane> Something I don't understand: is there any reason that multiple concurrent connections to my node.js app server would be blocking the listening port? Because that's what it seems like is happening.
00:47 < deoxxa> Zane: doubtful
00:47 < deoxxa> Zane: 1) paste code 2) ??? 3) profit
00:48 < chovy> is there a simple way to use to curl to test if a web site is responding?
00:48 < chovy> curl HEAD or something
00:48 < chovy> curl -I i think
00:48 < deoxxa> chovy: `curl --help'
00:49 < Zane> curl -v is also useful
00:49 < Zane> v => verbose
00:49 < _numbers> anyone have an example of node.js http server request where  ' /company'  would serve the static file 'company.html' ?
00:50 < Zane> node.js shouldn't really be used for static file serving, tbh, but if you insist, I would check out the express + jade documentation
00:50 < ang3lfir3> _numbers, that sounds insane
00:51 < _numbers> i'm using node-static and i set it up to serve files out of ./public but in a few cases i have clean urls that need to be rewritten 
00:51 < ang3lfir3> then rewrite the urls... especially if you are just using node
00:51 < Zane> man if anybody can solve that SO question, they will be my forever hero... It's killing my performance, and causing me so much stress
00:51 < deoxxa> _numbers: nginx?
00:52 < thisisami> hey there - i was wondering if anybody here could explain what request.socket.remoteAddress is used for?
00:52 < _numbers> no i'm using node windows stand-alone .exe and the point is to setup a one-click static web server
00:52 < _numbers> like mongoose server
00:52 < _numbers> it works 99% even streams mp4 to the browser just need url rewriting
00:53 < deoxxa> Zane: can you reproduce that outside amazon?
00:54 < ang3lfir3> thisisami, i'd guess... just off the top of my head.... for getting the remote address of a request ... 
00:54 < deoxxa> _numbers: you've got a confusion of purpose there, either rename the files or change the urls. or you know, use "programming" to "rewrite" your urls.
00:54 < _numbers> not helpful. here's an example https://github.com/VanCoding/Node-Http-Rewrite-Proxy
00:54 < Zane> deoxxa: well, I'm not sure how I'd go about that tbh. I mean, I have a localhost setup, but its only serving me, not the ~1k users at any given time that my Amazon prod servers serve
00:54 < ang3lfir3> deoxxa, what an amazing idea!!! :p 
00:55 < thisisami> ang3lfir3 - the reason i ask is because my fileServer always checks: "if(req.socket.remoteAddress || req.socket.socket.remoteAddress == '127.0.0.1'){" before returning anything to a client
00:55 < _numbers> i'm asking for similar examples, not for you to program for me. don't answer if you don't know
00:55 < Zane> deoxxa: in other words, since this is a scaling issue, I'm not sure how to reproduce elsewhere without migrating my whole production setup over to a new host ;)
00:56 < thisisami> this was copy-pasted from an example a year ago when i first built my server/was learning all about NodeJS. now that i'm comfortable with it, i'm trying to figure out why that's in there and if it's necessary at all...
00:56 < ang3lfir3> thisisami, so its ensuring that requests are only from local host?? well if that's what you want it to do 
00:57 < thisisami> but that's not what actually happens, since it responds to clients from everywhere in the world
00:57 < thisisami> that's a part of my confusion...
00:57 < ang3lfir3> does that only work with web sockets? (i don't actually know what it does )
00:57 < thisisami> i have no clue - i can't even find the original example i used
00:58 < thisisami> i'm not using websockets - just responding to regular requests
00:58 < deoxxa> _numbers: i'm just not sure how you expect something like that to operate. you want certain urls to be "rewritten" (for some meaning of that word), and you know what they are in advance. seems it'd be easier to just fix the urls or shove some code in to "rewrite" them in the application.
00:58 < deoxxa> _numbers: unfortunately node.js doesn't have a "make my application do the thing i'm thinking of, not the thing i tell it to do" mode. have you thought about php?
00:58 < deoxxa> thisisami: probably has something to do with a proxy (kind of guessing there)
00:58 < deoxxa> thisisami: but that actual condition is broken - it'll always be true
00:58 < thisisami> i just wanted to see if anybody here knows of that serving any purpose before i removed it
00:58 < deoxxa> thisisami: (req.socket.remoteAddress || req.socket.remoteAddress == '127.0.0.1') will always be true, for any value of req.socket.remoteAddress
00:58 < _numbers> is there a ruby pry equivalent for node
00:58 < ang3lfir3> deoxxa, php .... lol 
00:59 < ang3lfir3> thisisami, i can't think of one... and have never used it before
00:59 < _numbers> deoxxa: by 'rewrite' i mean i want http.ClientRequest for '/community' to file.serve  community.html
00:59 < Zane> _numbers: if you just want static asset serving with rewritten URLs, why not .htaccess?
00:59 < thisisami> deoxa: except one of the values is socket.socket
00:59 < thisisami> ok i will just assume that it is unnecessary and remove it from my code
00:59 < _numbers> Zane: yes something like .htaccess but this isn't apache?
00:59 < Zane> seems like a horrendeous use of overhead to use node in that manner
01:00 < deoxxa> thisisami: oh, i didn't notice that. in any case, it'll never hit the second condition because the first will always evaluate to true.
01:01 < deoxxa> thisisami: unless you somehow manage to connect to the server without having an originating address... which isn't possible in this universe as far as i know.
01:01 < deoxxa> thisisami: is it possible you were running this code in another universe maybe? :P
01:02 < Zane> _numbers: I mean, you really have your choice of frameworks. I'm a fan of express. Follow the intro to Express tutorial, should take about 10 seconds to setup regex matches like you would in a .htaccess file, then just point them at the appropriate assets.
01:02 < MI6> joyent/node: Ben Noordhuis master * 2fbf061 : crypto: sort return value of getCiphers/getHashes (+1 more commits) - http://git.io/8SZoxw
01:02 < _numbers> if request.url == '/community' file.serve(...);
01:03 < langpavel> hey guis, i'm connected via pidgin and it's unreadable, what do you use? I see presence more offten than conversation :-(
01:03 < thisisami> deoxxa: the reason i noticed is because my server occasionally has errors due to req.socket not existing
01:03 < thisisami> deoxxa: or mayb ereq.socket.socket
01:03 < LouisT> langpavel: i use xchat
01:03 < _numbers> if (request.url=='/community') request.url='/community.html';  #working
01:03 < _numbers> now was that so hard for anyone to reply
01:04 < deoxxa> thisisami: req.socket.socket more likely
01:04 < thisisami> deoxxa: and yes, this could totally have started in another universe. i am in fact a visitor from star system 3ug903x@6&8
01:04 < _numbers> bunch of trolls in here
01:04 < deoxxa> _numbers: i told you to use programming
01:04 < thisisami> deoxa: i am only 8437 earth years old, but my great grandfather has told me stories of wormholes that appeared over our planet long ago
01:05 < Zane> ... _numbers, your question was ambiguous. In my app server, that's nowhere near how it would look.
01:05 < deoxxa> <deoxxa> _numbers: you've got a confusion of purpose there, either rename the files or change the urls. or you know, use "programming" to "rewrite" your urls.
01:06 < deoxxa> > use "programming" to "rewrite" your urls
01:06 < deoxxa> that's exactly what you did
01:06 < deoxxa> thisisami: impressive!
01:06 < deoxxa> thisisami: is req.socket.socket related to some kind of middleware maybe? maybe that middleware fails in some cases and doesn't populate that property?
01:07 < thisisami> deoxxa: i have no idea. all i know is that if nobody knows what it is, and i can't find whatever tutorial i originall copied it from, then it probably isn't necessary
01:08 < deoxxa> heh
01:08 < deoxxa> yeah, probably something that used to make sense but is no longer a thing
01:11 < ang3lfir3> random remark -> <3 streamlinejs
01:12 < Zane> Okay this is freaking retarded... when I set up node on my servers, I needed to install it automatically when my ubuntu servers booted. So I found a RPM...  did a "wget http://nodejs.tchol.org/repocfg/el/nodejs-stable-release.noarch.rpm"
01:12 < Zane> I have effing clue where I got that URL
01:12 < Zane> apparently it's node 0.6.6
01:13 < Zane> I now want to upgrade to latest. In any case, is there a place that provides stable rpms ?
01:13 < deoxxa> rpm? ubuntu?
01:13 < ang3lfir3> exciting times in here today
01:14 < Zane> wget http://nodejs.tchol.org/repocfg/el/nodejs-stable-release.noarch.rpm yum localinstall --nogpgcheck -y nodejs-stable-release.noarch.rpm yum install -y nodejs-compat-symlinks npm
01:14 < Zane> basically, I have no idea where I got any of that
01:14 < deoxxa> ubuntu uses apt...
01:14 < deoxxa> not yum...
01:14 < Zane> haha exactly
01:14 < Zane> no clue
01:15 < deoxxa> there's a node ppa somewhere
01:15 < Zane> but it works =P just need an equivlent rpm for the latest build
01:15 < deoxxa> https://launchpad.net/~chris-lea/+archive/node.js/
01:15 < LouisT> deoxxa: that hasn't been updated yet
01:16 < deoxxa> not to 0.8.12, no
01:16 < deoxxa> but it's a damn sight newer than 0.6.11
01:16 < Zane> haha exactly
01:16 < LouisT> blah, i still can't get 0.8.12 to build on this stupid ovh vps =/
01:16 < ang3lfir3> deoxxa++
01:17 < deoxxa> LouisT: download the binaries :) http://nodejs.org/dist/v0.8.12/node-v0.8.12-linux-x86.tar.gz
01:17 < deoxxa> (yes, even if you're on a 64 bit host)
01:18 < Zane> hah I found out where I got the mysterious node.js package url: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
01:18 < Zane> it still has that link, too
01:22 < ang3lfir3> ohh yeah its fall in the PNW ..... here comes the rain 
01:23 < Zane> ah, no wonder... I'm on CentOS not Ubuntu @.@
01:23 < deoxxa> that's a pretty big thing to overlook
01:23 < Zane> (yes, I just said that)
01:23 < Zane> haha
01:24 < ang3lfir3> Zane, i don't know what to say
01:25 < Zane> ange3lfir3: I'm laughing at myself, too
01:25 < ang3lfir3> Zane, its okay .... we won't hold it against you.... for too long
01:26 < Zane> hehe =P All the CentOS posts I can find seem to point at this same outdated 0.6.6 repo...
01:26 < Zane> can't find an updated CentOS / yum rpm >.<
01:28 < deoxxa> https://npmjs.org/package/pause-stream this is neat
01:32 < Zane> ug, why does upgrading have to be so hard :(? grr....
01:33 < LouisT> Zane: it's usually not
01:34 < Zane> LouisT: hehe yah, but it seems a lot of people have the same "out of date" problem: https://groups.google.com/forum/?fromgroups=#!topic/nodejs/JCb4gxqUVBE
01:34 < MI6> joyent/node: isaacs crypto-buffers * cb1a9f9 : crypto: remove non-buffer c++ code (+1 more commits) - http://git.io/5ihBSw
01:36 < LouisT> Zane: weird.. but this is the first time i've ever had issues with installing node, i assume my issue is this crappy vps from ovh
01:36 < LouisT> i was able to install it everywhere else just fine =/
01:37 < Zane> LouisT: it's not really that I can't install it, it's that this is a production server and I need a package-managed version
01:37 < LouisT> ah
01:43 < Zane> okay I take that back, can't even build node...
01:43 < Zane> ./configure yields   File "./configure", line 325     o['default_configuration'] = 'Debug' if options.debug else 'Release'
01:43 < Zane> (invalid syntax)
01:43 < Zane> tried v0.8.6 and 0.8.12
01:47 < Zane> haha yay rabbit hole
01:47 < Zane> node.js now requires python 2.7
01:49 < LouisT> hm that could have been my problem.. heh
01:49 < LouisT> oh nope, i have 2.7
02:00 < _numbers> is there no interactive debugger equivalent to ruby pry in nodejs world?
02:02  * Aria looks up what pry is to see if that's an answerable question
02:03 < Aria> No, no there's not that I'm aware of. Node culture tends to be much more in line with small, minimal, combinable tools, not kitchensinkiness.
02:04 < JohnMcLear> Zane: What version did python become a requirement?
02:06 < Zane> JohnMcLear: your question is ambiguous. Are you asking about the node version or the python version? As best as I can tell, python 2.7 became a requirement in node 0.8.1
02:06 < Zane> but this is anecdotal; I know that the reason I could not install 0.8.x was because I did not have python 2.7
02:06 < Zane> the exact #s are subject to verification
02:07 < MI6> joyent/node: isaacs crypto-buffers * 7fc50b2 : tls: Provide buffer to Connection.setSession - http://git.io/D-FYBw
02:08 < JohnMcLear> Indeed it was ambiguous, my point was that it's been a requirement for quite some time.  I was kinda shocked to hear you mention "node.js now requires python 2.7" as if I somehow was living in the past..
02:08 < JohnMcLear> But I'm glad you got it install, go Zane =)
02:08 < JohnMcLear> +ed
02:09 < MI6> joyent/node: isaacs crypto-buffers * 9863b56 : doc: crypto 'Defaults to buffer' - http://git.io/7GfpQA
02:10 < Zane> Actually, I'm stuck lol
02:10 < Zane> I've tried every way I can to get python version to increase
02:11 < Zane> eg, yum install python26
02:11 < Zane> it seems to succeed, but "python -V" still says 2.4.3
02:11 < Zane> if I do yum install python26 again, it says "nothing to do"
02:11 < Zane> hmm
02:12 < Aria> rpm -ql python26 | grep bin
02:13 < Zane> AH
02:13 < Zane> finally
02:13 < Zane> node 0.8.12 installyng, huzzah
02:14 < _numbers> github.com/pry/pry is like a souped up gdb for ruby.  but the cool thing is setting breakpoints in the code like firebug's 'debugger'  statement. 
02:15 < _numbers> and then controlling debugger with simple commands from a prompt that appears inside the terminal while execution is paused
02:15 < _numbers> i guess for all front-end js, chrome devtools is sufficient for this. but what about back-end node.js development?
02:15 < mscdex__> omgdb!
02:20 < _numbers> dont tell me ppl are console.log and restarting node all the time. so archaic :o
02:22 < deoxxa> _numbers: use the chrome dev tools for server side stuff as well - check out node-inspector
02:24 < _numbers> thx
02:24 < _numbers> now u r useful
02:24 < deoxxa> i'm always useful
02:24 < deoxxa> :<
02:24 < _numbers> probably true :)
02:37 < kenokabe> oioioi
03:29 < raadad> hey guys
03:29 < raadad> any 1 here
03:30 < raadad> helo
03:30 < niggler> .
03:30 < raadad> I am proxy passing via nginx to my express app
03:31 < raadad> are they any examples on how to configure nginx for this
03:31 < raadad> i keep getting i keep getting [error] 18004#0: *1 no live upstreams while connecting to upstream, very intermittently 
03:31 < raadad> any ideas?
03:31 < niggler> you ask anyone on the nginx chat?
03:32 < niggler> (I've never used nginx :/)
03:38 < raadad> damn
03:38 < raadad> the nginx chat is silent :(
03:41 < niggler> lol the news is still talking about biden's epic performance
03:50 < glenselle> was it epic?
04:24 < covi> Hi. Can I send a request to a API and receives the JSON response back in node.js?
04:26 < RLa> http module or some request package :)
04:27 < RLa> superagent for example
04:28 < raadad> the nginx chat is silent :(
04:40 < ajwoodsdev> "useful for controlling helipcopters"?
04:42 < nsm> covi: yes, use the http module
04:45 < covi> nsm: I see. http.request() looks good
04:46 < nsm> remember to accumulate the data on the 'data' event and JSON.parse on 'end'
04:47 < covi> nsm: kind of lost, can you explain a bit
04:57 < tnorris> covi: i'm jumping in the middle here, but nsm means that a single 'data' event is a single packet, not the entire data stream. so you'll need to accumulate the data coming in until you receive the 'end' event which signals that all the data has been received.
04:59 < tnorris> raadad: not sure if this is what you're looking for, but this is how I've configured my nginx to pass data to several running instances of my node app: https://github.com/trevnorris/norrd/blob/master/conf/nginx.conf
05:00 < deoxxa> tnorris: you don't seem to have any caching going on - why are you using nginx?
05:01 < tnorris> deoxxa: load balancing requests across multiple instances.
05:01 < deoxxa> why not use node for that?
05:02 < deoxxa> it's plenty quick enough
05:04 < tnorris> deoxxa: seemed like the correct architecture decision at the time. (e.g. already had automation setup for parsing/alerting from nginx logs)
05:06 < tnorris> and it had niceties like "empty_gif" for handling favicon requests.
05:06 < deoxxa> ah yep
05:13 < tnorris> here's an awesome line of code: `tmp = []; while (true) tmp.push((new Buffer(0x3fffffff)).fill(0));`
05:13 < Lucky--> is there any particular reason that i see some libs start off with a ; ? is that just the coder trying to terminate anything that might be unterminated?
05:13 < tnorris> man, really need some sleep.
05:14 < tnorris> Lucky--: it's super paranoid programming. for example, if their code is thrown into more code and compressed into a single line, the other code could mess with their execution.
05:15 < Lucky--> ah
05:15 < Lucky--> cuz im just converting these old libs to AMD anyways
05:16 < timeturner> while(true) inception();
05:16 < tnorris> lol, awesome timeturner 
05:18 < leo_> Hello, im trying to use mongohq + mongoose, but when i try to exec my first query (col.findOne.) does anybody know what this error might be?
05:18 < leo_> Error: unauthorized db:toolz ns:toolz.accountsposts lock type:0 client:189.100.1 82.218
05:22 < thesteve0> leo_:  that looks like a mongo issue ( I see it sometimes int he command line tool on OpenShift)  - better to go ask in #mongo
05:24 < DS_> Hello everybody
05:26 < tomshreds> hey guys
05:26 < tomshreds> what do you use to manage your projects?
05:26 < leo_> Thanks
05:28 < covi> If I want to write a function that returns some data to the function that calls it, what should I write in the arguments of that function?
05:39 < bubbles10101> anyone know a good way to measure Chrome's scrolling performance accurately? Getting a bit depressed with CSS causing slowdowns and want to try nail it down
05:40 < diverdude> superjoe: its a very nice node.js plugin you have made :)
05:41 < leo_> Am i using this correctly? db.findOne({username: username}, function(err, doc){
05:42 < raadad> has anyone put nginx infront of node?
05:47 < nsm> covi: what do you mean? use a standard 'return'
05:51 < covi> nsm: I figured that out ;)
05:52 < covi> How to make a function (or a loop) asynchronous? In my case, it's a loop that processes a bunch of data and appends each one to another list
05:58 < nonuby> if I send 100mbits/sec of UDP datagrams to a IP that will go via gateway which reachable via eth0 and eth0 is set at 10mbit full duplex, are the packets (or 90% of them) just discarded, and at what layer does this happen? i.e. does the kernel handle this? or can I query the physical nic for dropped packets?
06:02 < deoxxa> nonuby: hard to say - if the link has been negotiated to 10mbit with the router, it might be dropped as far back as there
06:04 < timoxley> best way to re-run the same executable that is currently running?
06:12 < niggler> nonuby: you can't reshape the feed?
06:46 < vicapow> so don't tell anyone but… i've been working on a site
06:46 < vicapow> anyone round that would want to demo? give feedback?
06:48 < niggler> vicapow: .
06:48 < vicapow> niggler: what does the dot mean?
06:48 < dehimer> Hello! Tell me please, what i do wrong http://pastebin.com/gg8Ax35v. I need save file from multipart form
06:48 < niggler> acknowledged
06:48 < vicapow> cool
06:48 < niggler> I'm here and could test if you watn
06:48 < vicapow> niggler: i'll PM you
06:49 < vicapow> (if i can figure out how… lol)
06:49 < dehimer> Saved file have 1Kb size
06:53 < dehimer> I think right? It binden with data stream?
06:53 < dehimer> *binded
07:42 < deoxxa> ok, how do i avoid implementing this over and over: https://github.com/deoxxa/bencode-stream/blob/master/lib/decoder.js#L227-L303
07:43 < deoxxa> more specifically, how do i avoid implementing it at all? i'm hoping for an existing base class or something
07:45 < nog_lorp> howdy
07:46 < nog_lorp> I'm just starting a webmail provider using nodejs, and I'm curious if anyone has opinions on the quality of the available smtpd modules for nodejs
07:47 < nog_lorp> I've seen positive opinions on  simplesmtp + mailparser, negative ones on haraka
07:47 < nog_lorp> and someone suggesting to simply implement the smtp portion from scratch
08:07 < nog_lorp> quiet channel :(
08:07 <@Nexxy> shhhhh
08:07 < stride> now I woke up, great.
08:08 <@Nexxy> this is why we can't have nice things
08:08 <@Nexxy> nog_lorp, see #nodejitsu for node.js hosting
08:08 < nog_lorp> lol
08:08 <@Nexxy> their kung-fu is strong
08:08 < nog_lorp> heh, I actually told nodejitsu about an issue where users could create accounts without a beta key during their closed beta
08:09 < nog_lorp> but I'm more interested in discussing what packages I should use for a webmail project
08:09 < nog_lorp> would they welcome such discussion?
08:09 <@Nexxy> probably
08:10 < nog_lorp> coolio
08:10 < nog_lorp> do you have any opinions on such a topic?
08:10 <@Nexxy> I just use nodemailer
08:10 < nog_lorp> k :)
08:10 <@Nexxy> it's worked well
08:10 <@Nexxy> I don't have a high volume use but it's been in production for months
08:10 <@Nexxy> sent several thousand emails
08:10 <@Nexxy> no problems
08:11 < LouisT> ha, no, i wouldn't use it
08:11 < nog_lorp> great to know
08:11 < LouisT> uh wrong window lol
08:11 < nog_lorp> orly?
08:11  * nog_lorp is mad at freenode's webchat because it isn't autoscrolling
08:11 < nog_lorp> oh lol
08:12 < nog_lorp> it would be great if npm had comments
08:13 < LouisT> maybe you should use a non web client?
08:15 < nog_lorp> ya, I'm on windows and MIRC is probably gonna make me wait 3 years to start at this point... too lazy to get a decent client
08:16 <@Nexxy> irssi is easy to install
08:16 < LouisT> hexchat 
08:17 < nog_lorp> I like irssi
08:17 < nog_lorp> ill try hexchat
08:24 < mauritslamers> ls
08:24  * mauritslamers suffers from the wrong window syndrome....
08:24 <@Nexxy> mauritslamers, there are much worse things that can come of that :)
08:25 < mauritslamers> Nexxy: very true indeed :)
08:26 < mauritslamers> anyone perhaps in here that can help me compile a nodejs binding with mingw?
08:27 < mauritslamers> I am trying to create a binary for node-sass, but the visual C compiler cannot compile the binding, nor the library
08:27 < mauritslamers> with mingw I have successfully compiled the library, but now I have to compile the binding
08:28 < mauritslamers> adjusting the node-gyp configuration didn't help much, but perhaps I got something wrong there
08:30 < ukseong> am I the only one who is having problem with compiling 0.8.12 release on Ubuntu?
08:31 < LouisT> ukseong: i did
08:31 < LouisT> which version of ubuntu do you have?
08:31 < ukseong> did you find any solution?
08:31 < ukseong> 12.04 LTS 
08:32 < LouisT> ukseong: kinda, i just used the pre made binary files
08:32 < ukseong> I successfully compiled 0.8.11, but this new one has some undefined operator issues
08:32 < ukseong> well, that is a solution 
08:32 < ukseong> thanks 
08:33 < LouisT> ukseong: this is the issue i had http://thepb.in/507899d188b0858d49000006
08:34 < ukseong> I am using clang, so mine is more verbose 
08:34 < ukseong> it happens in V8 codes 
08:34 < LouisT> ah k
08:36 < ukseong> but I guess it happens in the same directory 
08:42 <@Nexxy> 0.8.12 compiles fine for me
08:42 < ukseong> did you add any extra cflags? 
08:43 < ukseong> it seems like the problem is derived from referencing 
08:45 <@Nexxy> nop
08:46 < mauritslamers> interesting… when trying to compile a binding, I get the same kind of error under VC++ as I get with g++: callback is not a member of sass_context
08:47 < ukseong> well, I guess there could be some other packages or codes that are dependent and I have not yet installed 
08:48 < ukseong> but it seems like the code is trying to refer to a function that was defined in one of the distributed codes 
08:49 < RLa> mauritslamers, paste whole error
08:50 < mauritslamers> RLa: https://gist.github.com/3883871
08:51 <@Nexxy> wat: https://npmjs.org/package/tengwar
08:51 <@Nexxy> lol srs
08:51 <@Nexxy> s5fs, https://npmjs.org/package/tengwar
08:51 <@Nexxy> NPM has just officially jumped the shark
08:52 < LouisT> Nexxy: why?
08:52 < mauritslamers> RLa: little recap: I am trying to compile node-sass under Windows. the list of errors when trying to do everything through node-gyp is huge: https://gist.github.com/3875582. So I compiled libsass through mingw, which worked flawless. Now only the binding needs to compile against the dll
08:53 <@Nexxy> LouisT, I'm being silly lol
09:00 < deoxxa> Nexxy: wow.
09:01 <@Nexxy> lolol
09:02 < chovy> niftylettuce: does node-email-templates work with app.locals set in the main app.js file?
09:02 < deoxxa> it's amazing how node has become my go-to tool for a lot of things
09:03 < chovy> if i do app.locals.copyright = cfg.copyright; will my email html.ejs and text.ejs templates have access to it?
09:03 < deoxxa> what exactly is an email template
09:03 < deoxxa> what makes it different from a regular template
09:07 < chovy> it an ejs file
09:07 < chovy> its for sending an email
09:08 < deoxxa> an ejs file that sends an email?
09:08 < deoxxa> scary
09:08 < chovy> your email
09:08 < SomeoneWeird> i think he means a template for an email
09:08 < chovy> the email message is an ejs or text file
09:08 < chovy> rather html.ejs and text.ejs
09:08 < chovy> for multipart/alternative emails
09:09 < deoxxa> oh, so it does do some specific stuff
09:09 < chovy> yes
09:09 < chovy> it sends an email using your template
09:09 < deoxxa> i thought it was yet another "specific templating solution for x" that turns out to be "poorly implemented generic templating solution"
09:09 < devongovett> anyone know how to create an ArrayBuffer rather than a normal Buffer from a C++ module?
09:10 <@Nexxy> deoxxa is so jaded these days
09:10 < SomeoneWeird> fuck jade
09:10 < deoxxa> only about templates
09:10 < SomeoneWeird> :P
09:10 < deoxxa> everything else is still new! and exciting!
09:10  * deoxxa flits about
09:11 < LouisT> aw not another one https://npmjs.org/package/littlesmallscript
09:12 < deoxxa> oh dear
09:12 < deoxxa> why do people hate javascript so much :<
09:13 < mauritslamers> deoxxa: it is like it always is: it doesn't look enough like their favorite language :)
09:13 < SomeoneWeird> yerp
09:13 < SomeoneWeird> JS IS JS GTFO
09:13 < mauritslamers> that is why we have coffeescript, this new microsoft script (TypeScript?) 
09:13 < SomeoneWeird> y
09:13 < SomeoneWeird> a
09:14 < mauritslamers> interesting how much effort is put into typing less :)
09:15 < chovy> deoxxa: heh, there is a lot of that going around.
09:16 < chovy> what's wrong with css, html, javascript?
09:16 < SomeoneWeird> nuthin
09:18 < mauritslamers> with css a lot… with the rest not so much :)
09:18 < chovy> naah. nothing wrong with css
09:19 < chovy> except i like some of the extending less does.
09:19 < chovy> but i don't need to write in some ambiguous abstraction layer
09:23 < mauritslamers> chovy: did you watch the Douglas Crockford lectures on JS?
09:23 < mauritslamers> he explains pretty clearly what is wrong with css :)
09:24 < chovy> mauritslamers: some of them
09:24 < chovy> not that one
09:24 < chovy> what does he say?
09:24 <@Nexxy> crockford is good at making things seem bad
09:24 < mauritslamers> he explains the origin of the html+css combination
09:24 < mauritslamers> let me find the spot
09:25 < chovy> i'm not surprised a programmer is finding fault with css.
09:28 < aandy> and some find fault with everything
09:31 < deoxxa> finding faults with things is fundamentally flawed
09:36 < RLa> mauritslamers, i had to run, did you get it working?
09:36 < mauritslamers> no, I just posted the errors, because I have no clue where to begin trying to solve this :)
09:37 < RLa> 'unistd.h' <- seems to be missing
09:37 < RLa> mauritslamers, what os it is?
09:37 < mauritslamers> RLa: little recap: I am trying to compile node-sass under Windows. the list of errors when trying to do everything through node-gyp is huge: https://gist.github.com/3875582. So I compiled libsass through mingw, which worked flawless. Now only the binding needs to compile against the dll
09:38 < RLa> oh i see
09:38 < RLa> i think it fails to find the header
09:38 < RLa> paste gcc line too
09:39 < deoxxa> unistd.h is the posix api, so yeah, it'll work under mingw or cygwin
09:39 < mauritslamers> RLa: there is no gcc line, because node-gyp forces to compile with VC++ under windows
09:39 < RLa> oh
09:39 < RLa> then vc++ line
09:39 < mauritslamers> I tried to compile it with mingw, but got the same error there
09:39 < RLa> see if includes paths are correct
09:40 < RLa> -I arguments
09:41 < RLa> oh wait, i guess it should be included with vc++
09:41 < mauritslamers> RLa: https://gist.github.com/3883871
09:41 < RLa> but does it have such header at all
09:42 < RLa> hm
09:42 < mauritslamers> pasting the gcc line for mingw
09:42 < mauritslamers> https://gist.github.com/3883978
09:43 < RLa> gcc gives similar error about header not found?
09:43 < mauritslamers> updated the last gist with the g++ output
09:43 < mauritslamers> no, just that struct sass_Context doesn't have a member named callback
09:44 < RLa> oh, it's just same error, gcc doesn't bother to report missing header
09:44 < deoxxa> RLa: no
09:44 < deoxxa> RLa: msvc++ doesn't have unistd.h, because that's a POSIX thing
09:45 < deoxxa> RLa: distributions of gcc nearly always include a POSIX implementation and associated headers to facilitate bootstrapping of the environment itself
09:46 < RLa> yes, seems like unistd.h can be easily "faked"
09:46 < RLa> googling reveals that lots of people have trouble with it
09:46 < mauritslamers> RLa: deoxxa: https://gist.github.com/3875582 is the built with pure visual c
09:46 < mauritslamers> *build
09:46 < RLa> mauritslamers, sure that libsass is meant to compile on windows at all?
09:47 < mauritslamers> so, that is why I built libsass with mingw
09:47 < RLa> i see they just include unistd.h, without any checks
09:47 < mauritslamers> RLa: no clue whether it is meant to build :) I just need a binary that will work under windows :)
09:47 < RLa> isn't there non-native sass implementation?
09:47 < mauritslamers> not for node
09:48 < mauritslamers> and not in the speed that I need
09:48 < deoxxa> mauritslamers: that sounds like the way to go, but, you're going to be fighting an uphill battle on this one because the libsass code is so unix-y
09:48 < mauritslamers> deoxxa: the problem is no longer libsass, because it compiles fine with mingw
09:48 < mauritslamers> the problem now is to have a proper nodejs binding to it :)
09:49 < RLa> can you give github link to bindings code
09:49 < mauritslamers> so I removed the compilation of the libsass files from the gyp file
09:49 < deoxxa> well, you should be able to modify the binding.gyp to...
09:49 < deoxxa> yeah
09:49 < deoxxa> it'll probably still be including a bunch of libsass headers though
09:49 < mauritslamers> deoxxa: but then the binding gives the same errors with mingw as with vc++
09:49 < deoxxa> which will, in turn, be including unistd.h and friends
09:49 < deoxxa> which errors?
09:50 < mauritslamers> https://gist.github.com/3883871  and  https://gist.github.com/3883978
09:50 < deoxxa> this is all c++ btw so it's very unlikely that building it in two parts with completely separate compilers will yield a functioning binary
09:50 < RLa> i think same
09:50 < jchannon> 0.8.12 upgrade - How?
09:51 < RLa> you best bet is to get binding to compile with mingw
09:51 < deoxxa> jchannon: orange monkey - pancake?
09:51 < mauritslamers> RLa: https://github.com/andrew/node-sass/blob/master/binding.cpp
09:51 < RLa> deoxxa, but can node load native modules built with mingw?
09:51 < RLa> or does it have to be rebuilt with mingw too
09:51 < jchannon> deoxxa: eh?
09:51 < mauritslamers> RLa: it has to also work with mingw
09:51 < mauritslamers> because a dll is a dll 
09:52 < jchannon> I installed 0.8.11 via the *.pkg on OSX, can I download the new one and it will overwrite
09:52 < deoxxa> mauritslamers: au contraire, friend. a c++ dll is a completely different beast.
09:52 < deoxxa> jchannon: i'd say yes, it most likely will
09:53 < deoxxa> jchannon: to be safe, though, you could just download the binary and drop it in place, then upgrade npm through npm itself
09:53 < deoxxa> actually, not sure if that's safer, but it's at least easier to tell where things go wrong if they do
09:53 < jchannon> deoxxa: from the github account?
09:53 < mauritslamers> jchannon: I installed and updated that way… no issues 
09:53 < RLa> mauritslamers, can you give gcc line for binding?
09:53 < mauritslamers> (as in overwriting the current install from pkg install)
09:54 < jchannon> mauritslamers: no problems?
09:54 < mauritslamers> RLa: https://gist.github.com/3883978
09:54 < mauritslamers> RLa: took the line from the compile under Mac OSX but leaving out the typical Mac stuff
09:54 < mauritslamers> jchannon: no, no issues with just overwriting current install
09:55 < RLa> mauritslamers, can you explicitly add directory containing the header into includes
09:55 < RLa> that sounds like hack but might work
09:55 < mauritslamers> any hack that will work is a good hack ;-)
09:56 < RLa> you can try out the command separatedly too
09:56 < RLa> just add -I<path to dir containing unistd.h>
09:56 < jchannon> ok, here goes, downloading 0.8.12 pkg
09:56 < RLa> to g++ or /I same thing to vc++
09:56 < mauritslamers> RLa: yep, I'll try
09:56 < RLa> try with g++ first
09:57 < RLa> you might get linking error later but will see
09:57 < RLa> maybe it's just an header, no implementation code
09:58 < mauritslamers> RLa: no difference with g++
09:59 < RLa> should be
10:01 < jchannon> mauritslamers: that worked perfectly. thanks
10:03 < mauritslamers> RLa: including the mingw headers with the binding compilation with VC++ creates even more errors
10:05 < mauritslamers> RLa: complete build log from mingw compile: https://gist.github.com/3883978
10:08 < jchannon> mauritslamers: Updated the node wiki installation page https://github.com/joyent/node/wiki/Installation at the bottom "Upgrading on Mac with .pkg"
10:09 < RLa> what does mean dubbele folder "c:/mingw/lib/gcc/../../include" wordt genegeerd?
10:10 < mauritslamers> double folder … is being ignored
10:10 < RLa> hm oh
10:10 < mauritslamers> (sorry, the feedback of mingw is in dutch for some strange reason :) )
10:10 < RLa> hm
10:10 < RLa> maybe it's not the same error after all
10:10 < mauritslamers> well, the error given is that callback is not valid for that context
10:11 < mauritslamers> as I said: the first gist I gave is the complete build report with VC++, which failed, mainly on libsass
10:11 < mauritslamers> so we can now safely ignore that one
10:12 < mauritslamers> The gists we need to compare are g++ https://gist.github.com/3883978 vs VC++ https://gist.github.com/3883871
10:12 < mscdex__> node.js rules!
10:13 < mauritslamers> RLa: both give the error: callback is not a member of sass_context
10:13 < RLa> mauritslamers, indeed, it's not: https://github.com/hcatlin/libsass/blob/master/sass_interface.h#L18
10:13 < RLa> sure you are not mixing files from different libsass versions?
10:14 < mauritslamers> hmm,
10:14 < mauritslamers> let me check
10:14 < RLa> here it is part of: https://github.com/andrew/node-sass/blob/master/libsass/sass_interface.h#L18
10:14 < RLa> but
10:14 < RLa> v8::Persistent<v8::Function> callback;
10:15 < mauritslamers> I did indeed try to copy stuff at one point...
10:15 < mauritslamers> so let's checkout the original
10:15 < RLa> i think original libsass won't have such member if it's not node-specific
10:15 < RLa> i think the author of node-sass has modified libsass
10:15 < RLa> that's why it's included
10:15 < mauritslamers> RLa:  that might very well be the case indeed
10:15 < RLa> so you must build the included libsass instead
10:16 < mauritslamers> RLa: thanks a bundle!
10:16 < mauritslamers> no clue yet how to do that properly, but let's give it a try
10:16 < mauritslamers> (no make files included etc)
10:17 < RLa> doesn't node-sass just build it in, without compiling to separate dll/.node file?
10:18 < mauritslamers> RLa: no, it tries to compile the libsass together with the binding with VC++
10:18 < mauritslamers> which fails miserably, because vc++ cannot compile posix
10:18 < RLa> what if you build it with g++?
10:18 < RLa> what was the original error
10:18 < mauritslamers> RLa: that is what I am going to try now
10:19 < RLa> before you tried to compile separatedly
10:19 < RLa> https://github.com/andrew/node-sass/blob/master/binding.gyp
10:19 < RLa> this lists all source files together
10:19 < mauritslamers> RLa: https://gist.github.com/3875582
10:20 < RLa> but with g++?
10:20 < mauritslamers> I didn't try to build with g++ from node-sass first
10:20 < mauritslamers> so that is what I am going to do no
10:20 < mauritslamers> *now
10:21 < RLa> that should build fine
10:22 < RLa> i would bug libsass authors to get rid of unistd.h inclusion or provide alternative
10:23 < RLa> it's probably used for something very simple, like file opening call
10:25 < deoxxa> isn't sass just a css compiler thing?
10:25 < mauritslamers> deoxxa: yes. it is
10:25 < SomeoneWeird> afaik
10:25 < deoxxa> why do you need a native module then?
10:26 < mauritslamers> but if you want to do that in pure JS it is SLOW
10:26 < deoxxa> doesn't seem like something you'd need to run very often
10:26 < deoxxa> uh
10:26 < deoxxa> slow being...
10:26 < deoxxa> also, are you sure it's slow?
10:26 < deoxxa> have you measured this?
10:26 < mauritslamers> deoxxa: brb
10:27 < deoxxa> and is the impact of compiling sass files significant in relation to the rest of your program?
10:27 < deoxxa> if it's just "it's slow compared to native code", that doesn't mean much
10:27 < deoxxa> if it's "it's responsible for 85% of my response time", that's a bit more important
10:27 < RLa> maybe sass is just not effectively compilable
10:28 < deoxxa> but i mean how often to you recompile your css anyway
10:28 < RLa> for every request :D
10:28 < deoxxa> and why is the compiled css not cached
10:28 < deoxxa> so many better ways to sort this "problem" out
10:29 < RLa> https://github.com/hcatlin/libsass/blob/master/sass_interface.cpp <- i seriously wonder which function is called from unistd.h here
10:29 < mauritslamers> deoxxa: back...
10:30 < mauritslamers> point is: I am building a build-tools system for Sproutcore
10:30 < RLa> mauritslamers, so another hack: just try remove that damn header and see what it does
10:30 < deoxxa> i wonder how much of the speed gains of libsass are lost by doing their own silly filesystem stuff, as compared to loading stuff through libuv
10:30 < mauritslamers> Sproutcore is the webframework that needs a realtime conversion
10:30 < mauritslamers> the files are being converted in memory
10:31 < deoxxa> i doubt that so strongly
10:31 < deoxxa> i can't think of any reason whatsoever why you'd need to compile a sass file more than exactly once for each change
10:31 < deoxxa> also i can't think of much that a native module could do to speed up the process of manipulating text
10:32 < deoxxa> (javascript is pretty darn good at that)
10:32 < RLa> hm, they use std::fread for io
10:32 < deoxxa> mauritslamers: so have you measured the difference between using a c++ and a js version of sass?
10:33 < deoxxa> not to take away from the awesome experience of hacking modules to work on windows
10:33 < mauritslamers> deoxxa: problem: there is no pure js sass
10:33 < mauritslamers> problem 2: stylus takes 15 seconds for one file
10:34 < deoxxa> looks like there's a ton of sass modules
10:35 < RLa> mauritslamers, how big is that stylus file?
10:35 < mauritslamers> moment, brb
10:35 < deoxxa> https://github.com/visionmedia/sass.js
10:36 < RLa> i have 1k stylus file compiling for each request in dev mode and i see no impact
10:37 < RLa> also, native module needs to implement own expression evaluator
10:37 < RLa> it just can't compile it to js
10:38 < RLa> https://github.com/hcatlin/libsass/blob/master/eval_apply.cpp <- looks pretty complex
10:40 < deoxxa> ugh
10:45 < mauritslamers> ok.. back..
10:46 < mauritslamers> I have tested a number of modules… and the problem is that only with libsass I got something of the speed that is relevant
10:46 < mauritslamers> it is not the size of the files, but the number of files
10:46 < mauritslamers> it has to be capable of processing an entire theme in one second.
10:46 < mauritslamers> it took 30 with stylus
10:47 < RLa> how many files there are?
10:47 < mpajor_op5> quite stuck here, would love if someone could help me out. I am writing a chat in node.js (with redis), and I'm trying to do a hgetall on a key but I dont seem to get any output from it
10:48 < mpajor_op5> when I run keys * in redis-cli I get 3) "chatrooms:1:users" but I cant seem to do a hgetall chatrooms:1:users
10:48 < mpajor_op5> its stored in json within redis, and the response is (error) ERR Operation against a key holding the wrong kind of value
10:52 < mauritslamers> RLa: 46 files, 193 KB
10:52 <@Nexxy> substack, 
10:52 < mauritslamers> and stylus doesn't work for everything
10:52 < mauritslamers> RLa: the original sproutcore build tools were written in Ruby
10:52 <@Nexxy> substack, I think I want to use baudio for a demo
10:52 < mauritslamers> RLa: which is why they used sass I think
10:53 < mauritslamers> anyway, as I am rewriting this stuff I have to support what is supported in the ruby build tools
10:54 < mauritslamers> I wrote the buildtools a few months ago on Mac OSX, and the only thing that really worked was node-sass 
10:54 < mauritslamers> deoxxa: sass.js is old, and doesn't support everything
10:57 < dmitri> hi
10:57 < mauritslamers> deoxxa: RLa: trying to compile the entire thing with mingw now
10:57 < dmitri> could anyone help me
10:57 < dmitri> have error with npm
10:57 < dmitri> https://gist.github.com/3884145
10:58 < dmitri> it's ubuntu
10:58 < dmitri> 12.04
10:59 < mauritslamers> dmitri: sorry, no clue… perhaps update will help?
10:59 < dmitri> it's last version
11:00 < Amzul> dimitri have you looked at /home/dmitri/nodeapps/meeet.in/npm-debug.log
11:02 < dmitri> it's the same https://gist.github.com/3884154
11:05 < RLa> i go take a sleep
11:14 < deoxxa> dmitri: how did you install node?
11:14 < dmitri> sudo apt-get install nodejs
11:14 < deoxxa> dmitri: and are you trying to run npm as root?
11:14 < deoxxa> ah
11:14 < deoxxa> yeah
11:14 < deoxxa> old version of node
11:14 < dmitri> 0.8.8
11:14 < deoxxa> wait, no, it's not old. hm.
11:15 < dmitri> mm it's 0.8.12 on site
11:15 < deoxxa> there's a ppa from chris lea that's more up to date
11:17 < dmitri> could you share>
11:17 < dmitri> ?
11:17 < deoxxa> https://launchpad.net/~chris-lea/+archive/node.js/
11:17 < deoxxa> it looks like some directories haven't been created properly
11:37 < navaru> hey, who uses dnode/upnode/airport? I was wondering on what type of app and how do U use them, thanks 
11:48 < dmitri1> deoxxa: thanks, update helped! ;)
12:19 < mauritslamers> ok… now wrote a small shell script to compile the node-sass binding with mingw
12:19 < mauritslamers> compiling libsass in it is going well
12:20 < mauritslamers> compiling the binding itself also seems to go well
12:20 < mauritslamers> but the linking doesn't work
12:20 < mauritslamers> a lot of undefined references to V8
12:34 < mauritslamers> this is the link log of mingw when trying to link the binding: https://gist.github.com/3884485
12:34 < mauritslamers> could anyone who knows how the compilation process of bindings goes take a look?
12:36 < mauritslamers> The actual compilation script: https://gist.github.com/3884492
12:38 < navaru> hey, who uses dnode/upnode/airport? I was wondering on what type of app and how do you use them, thanks 
13:08 < kuebk> hi
13:09 < kuebk> is there any guide how to migrate a module from linux to windows?
13:10 < pyrotechnick> kuebk: i'm not sure that's something you could write any kind of definitive guide for
13:11 < pyrotechnick> kuebk: i have no idea about node on windows but you should be more specific if you want people to help out
13:11 < kuebk> ok
13:11 < kuebk> so while i'm trying to install a library
13:11 < kuebk> i'm getting a message saying that there is no vcxproj fail
13:11 < mauritslamers> kuebk: pyrotechnick: currently working on getting a linux library (libsass) working under nodejs under windows
13:12 < kuebk> and because of that it can't be build
13:12 < mauritslamers> kuebk: that sounds like the module doesn't use node-gyp
13:12 < mauritslamers> is there a binding,gyp file in the root of the module?
13:12 < kuebk> yes, there is
13:13 < mauritslamers> and when you run node-gyp rebuild in the root?
13:13 < kuebk> let me check
13:15 < kuebk> mauritslamers same thing happens
13:16 < mauritslamers> kuebk: can you show the binding.gyp?
13:16 < kuebk> https://github.com/yfinkelstein/node-zookeeper/blob/master/binding.gyp
13:16 < kuebk> ofc i can
13:17 < mauritslamers> that is weird… which node version?
13:17 < kuebk> 0.8.11
13:17 < mauritslamers> is there a vcxproj file in the build folder?
13:18 < kuebk> yes there is
13:18 < kuebk> yes it is*
13:18 < mauritslamers> very weird indeed..
13:18 < kuebk> C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\Microsoft.Cpp.InvalidPlatform
13:18 < kuebk> .Targets(23,7): error MSB8007: The Platform for project 'libzk.vcxproj' is inva
13:18 < kuebk> lid. Platform='x64'. You may be seeing this message because you are trying to
13:18 < kuebk> build a project without a solution file, and have specified a non-default Platf
13:18 < kuebk> orm that doesn't exist for this project. [D:\tmp\node-zookeeper\build\libzk.vcx
13:18 < kuebk> proj]
13:18 < kuebk> that the message I'm getting
13:19 < mauritslamers> ah… so it is trying to build for x64, which is an invalid platform according to VC++
13:19 < MI6> joyent/node: Ben Noordhuis v0.8 * 4a23add : doc: rectify http.ClientResponse close/end events  * The 'close' event do - http://git.io/Uuyt5A
13:19 < kuebk> yea
13:19 < kuebk> that's exacly what I found out right now
13:20 < kuebk> when I tried to run .sln file in VS
13:24 < kuebk> the newset version of node-gyp
13:24 < kuebk> is also trying to build with platform=x64
13:25 < kuebk> paltform*
13:25 < mauritslamers> hmm
13:25 < kuebk> by newest I mean 0.7.1
13:25 < mauritslamers> I don't know too much about gyp files...
13:25 < mauritslamers> because I would think that you need to adjust either the platform setting, or something more global
13:25 < kuebk> me too
13:25 < kuebk> :(
13:26 < kuebk> that's my first time with using node under windows
13:26 < kuebk> :<
13:26 < mauritslamers> mine too :)
13:26 < kuebk> :)
13:28 < gildean> i wrote a small module: https://npmjs.org/package/udp-proxy
13:29 < mauritslamers> kuebk: searching something I saw earlier...
13:32 < mauritslamers> kuebk: what if you change the binding.gyp file by trying to set the platform in this way: https://gist/github.com/3881702
13:33 < mauritslamers> just change the exception handling into Platform: 'x86'
13:33 < mauritslamers> (or something similar, like i386)
13:35 < kuebk> hmm
13:36 < kuebk> Warning: unrecognized setting VCCLCompilerTool/Platform while converting to MSBu
13:36 < kuebk> ild.
13:36 < kuebk> Warning: unrecognized setting VCCLCompilerTool/Platform while converting to MSBu
13:36 < kuebk> ild.
13:36 < mauritslamers> perhaps one level up?
13:36 < kuebk> nope
13:36 < kuebk> still no go
13:37 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:50 < AGM114K2A> I'm looking for some help with a really small script.  I'm trying to get the data in a <span> to change text with a .mouseover() in JQ, had it working once and changed something and can't get it back.  http://jsbin.com/oqayes/1/
13:50 < AGM114K2A> Can anyone help out with that?
13:51 < pyrotechnick> AGM114K2A: this isn't the place
13:52 < SomeoneWeird> -> #jquery
13:52 < pyrotechnick> please come again
13:52 < AGM114K2A> Ah thank you
13:53 < mauritslamers> does someone know how the linking to node exactly happens under windows? 
13:53 < pyrotechnick> AGM114K2A: you will find the answer to your question on stackoverflow though
13:53 < pyrotechnick> AGM114K2A: google is your friend
13:54 < mauritslamers> I am trying to link something, but it seems it also needs v8.lib, but this is not provided by npm
13:54 < AGM114K2A> pyrotechnick: I've googled but I'm afraid I just have an overlooked error, like I said, I had it working before, tweaked something, can't get it working again - so I don't know what to google
13:55 < mauritslamers> AGM114K2A: that is why stackoverflow could be very helpful
13:55 < pyrotechnick> AGM114K2A: learn you some VCS
13:55 < mauritslamers> git for example
13:55 < mauritslamers> you can commit changes, then revert if necessary
13:56 < mauritslamers> In the code I am trying to link there are some references to V8::Undefined() etc, which the compiler cannot find
13:56 < mauritslamers> during linking phase that is
13:59 < _numbers> is it valid in js to separate statements with commas instead of semi-colons? thats what my js compressor seems to be trying to do
14:00 < mauritslamers> _numbers: if this happens in a var statement,that is valid
14:01 < _numbers> what about in a return statement
14:01 < evelyette> hi
14:01 < evelyette> is it possible to create a dynamic key when creating a JSON object
14:01 < mauritslamers> _numbers: mmm, only when it would be returning an object or array
14:01 < mauritslamers> evelyette: what do you mean exactly?
14:02 < evelyette> currently I have this: http://dpaste.com/813205/  but the 'level' is a keyword 'level' ... and I have a level variable that holds something like 'level10' or something like it
14:02 < _numbers> Semicolons partition statements. Comma operators partition expressions within statements.
14:02 < evelyette> thus I would like to use a keyword 'level10' stored in a varaible rather than an actual keyword 'level'
14:03 < _numbers> http://javascriptweblog.wordpress.com/2011/04/04/the-javascript-comma-operator/
14:03 < evelyette> mauritslamers, ^
14:03 < mauritslamers> you  cannot do that in an object literal I'm afraid
14:03 < mauritslamers> you can do it by adjusting the scores later, by result.scores[levelvar] = levelval
14:03 < evelyette> mauritslamers, how can I do it then ?
14:04 < mauritslamers> evelyette: JS supports both dot notation and subscript notation for object properties
14:04 < kuebk> mauritslamers
14:04 < kuebk> when I changed from node x64 to x86
14:05 < kuebk> it worked
14:05 < mauritslamers> nice!
14:05 < kuebk> looks like there is something wrong between this 2 releases
14:05 < mauritslamers> might be indeed..
14:06 < evelyette> mauritslamers, what do you mean ?
14:08 < mauritslamers> evelyette: http://dpaste.com/813208/
14:08 < mauritslamers> feel free to try it out in your browser
14:09 < mauritslamers> so, with respect to your original question: after you created the object literal, you can use the subscript notation (or a combination with dot notation for scores) to set the value to the correct property
14:19 < bradleymeck> isaacs: is process.domain or domain.active going to be reliable for a lil bit?
14:21 < Fryck> Hi, i'd like to use nodejs to build a date website, what frameworks (node based) i should use ? thanks
14:21 < Fryck> dating site*
14:21 < holzp> i would take a look at the "express" web framework
14:22 < AndreasMadsen> bradleymeck: the domain API is experimental so there will be no promise, but the general answer that you may use it.
14:22 < AndreasMadsen> * answer is that
14:22 < bradleymeck> AndreasMadsen: i know, just have concerns when there are 2 ways to get 1 reference
14:24 < mauritslamers> Does anyone know anything about the linking phase of module compilation in Windows?
14:24 < Zane> Hello all. I'm desperately in need of help on this node.js problem that's killing my production servers and taking my service down :( Thanks. http://stackoverflow.com/questions/12868107/node-jsexpress-randomly-drops-requests-resulting-in-a-gateway-timeout
15:12 < Zane> If I do a socket.setTimeout(60000); and 60 seconds elapse between requests, does that mean the incoming socket would be closed before the request and thus not receive data?
15:18 < mauritslamers> Does anyone know anything about the linking phase of module compilation in Windows?
15:25 < niggler> >>> var x = {s:y=0,e:y+1}; console.log(x)
15:25 < purr> niggler: undefined; Console: {e: 1, s: 0}
15:25 < niggler> >>> var x = {s:y=3,e:y+1}; console.log(x)
15:25 < purr> niggler: undefined; Console: {e: 4, s: 3}
15:25 < niggler> >>> var x = {s:var y=0,e:y+1}; console.log(x)
15:25 < purr> niggler: SyntaxError: Unexpected token var
15:29 < Guilt> hello. is there a good lockless queue implementation for node.js?
15:30 < niggler> you mean lock free queue Guilt 
15:31 < Guilt> yes. (like compare and swap style)
15:31 < niggler> afaict no but I'm not an expert
15:31 < niggler> pyrotechnick can give more color
15:32 < Guilt> thanks niggler!
15:32 < Guilt> pyrotechnick, are you aware of a lock free queue? 
15:32 < SomeoneWeird> define lock free
15:32 < Guilt> i meant: an implementation of a lock free queue for node.js
15:32 < niggler> he defined it using CAS
15:33 < Guilt> SomeoneWeird, it's typically highly concurrent… Compare and Swap is usually how it's done.
15:33 < niggler> like cmpxchg
15:35 < niggler> oh that reminds me -- it'd be nice to have a way to access the TSC (even a thin wrapper around RDTSC would be nice)
15:36 < Guilt> the C code for that is usually compact
15:38 < Guilt> #define rdtsc(t) long long t; asm volatile("rdtsc" : "=A" (t)); t; <-- then you expose it however you want.
15:39 < mauritslamers> anyone could perhaps help me with a linking problem under windows?
15:39 < nathan7> Guilt: lockless queue... you mean redis's push/pop? q=
15:39 < nathan7> Guilt: That's what most of us use
15:39 < mauritslamers> I am trying to link a binding for node, but it doesn't link because of reference errors to V8
15:39 < Guilt> i plan to use it in memory, like it's self contained
15:39 < nathan7> Guilt: use an array..?
15:40 < nathan7> Guilt: .shift() things in, .pop() things out
15:40 < Guilt> in an array, i need to delete/empty it out to dequeue. 
15:40 < Guilt> but shifting in an array is slow, isn't it?
15:40 < nathan7> Guilt: you only have a single thread. you don't need to lock/etc
15:40 < nathan7> afaik it isn't really slow
15:41 < nathan7> But I'd have to benchmark it to give you any kind of meaningful truth
15:41 < Guilt> does the single threaded thing hold good for setTimeout as well?
15:42 < nathan7> setTimeout works as it should
15:42 < nathan7> note that setTimeout takes a *minimum* timeout
15:42 < Guilt> so, if i'm queueing now, and my setTimeout does a deque, it's going to be consistent?
15:42 < nathan7> Yep.
15:42 < niggler> nathan7: do node arrays start at the beginning or middle of the memory space?
15:42 < Guilt> okay, thanks!
15:43 < niggler> in perl they start somewhere in the middle so that some of the ops are efficient
15:43 < nathan7> niggler: That's V8's job
15:43 < nathan7> niggler: V8 does a bunch of memory shuffling
15:44 < nathan7> niggler: which is why you cannot rely on things being in any particular point in memory
15:44 < bradleymeck> anyone good with domains, have an oddity
15:44 < nathan7> niggler: to pass stuff to external libraries it's memcpy'd because you can't pass pointers to anything that V8 manages
15:44 < nathan7> Everything comes at a price
15:46 < Guilt> a few nodes just aren't able to do the web socket connect
15:46 < nathan7> ?
15:46 < nathan7> tbh I'm quite happy running a redis for just one instance of things because I know it'll scale
15:57 < Fryck> What is the best way to deploy node web application ?
15:58 < pyrotechnick> on a server
16:02 < nlf> you know what's fun? writing an entire web app without testing anything or even running the code once
16:02 < nlf> then running it, and seeing how close you were
16:08 < hdon> anyone here work on the npm site?
16:09 < timoxley> hdon https://github.com/isaacs/npm-www
16:09 < hdon> your use of <a name="foo"> is "wrong." i clicked on some text to highlight it, and it became red and underlined. instead of containing other elements inside the anchor, just close the anchor immediately
16:09 < hdon> timoxley, thanks :)
16:10 < hdon> timoxley, any idea how to tell which revision is installed in production?
16:11 < timoxley> hdon perhaps the tags would tell you but I'm not sure they're up to date
16:12 < timoxley> hdon best bet is to find the code in question and fix it and hope it goes out in next update
16:12 < timoxley> hdon or speak to isaacs about it directly
16:15 < denom> Does anyone here know why node.js hasn't landed in Debian testing apt system yet?
16:15 < KiNgMaR> because debian.
16:16 < pyrotechnick> i think debian is a pretty cool guy and doesnt afraid of anything
16:16 < hdon> denom, revenge for npm?
16:16 < denom> hdon, but gem and pip?
16:16 < hdon> denom, heh, good point
16:16 < SomeoneWeird> who cares compile it yourself
16:16 < SomeoneWeird> :P
16:17 < denom> is 'nvm' a option?
16:17 < denom> something like rvm/rbenv for ruby?
16:18 < SomeoneWeird> https://github.com/creationix/nvm
16:18 < SomeoneWeird> ?
16:18 < denom> SomeoneWeird, is that a safe way to go?
16:18 < SomeoneWeird> yeah, i suppose
16:18 < SomeoneWeird> if you don't wanna manually compile it
16:19 < denom> I just don't want to be trapped in a hellish situation viz upgrading or switching versions
16:19 < SomeoneWeird> then its probably your best bet then :)
16:21 < nathan7> oh hey, 0.8.12
16:26 < azbyin> hi all.. I'm trying to get deployd running
16:27 < azbyin> when I run the integration tests (as per the deployd github page), I get "Error loading module node_modules/proxy"
16:28 < azbyin> and trying to install proxy doesn;t work :(    sudo npm install proxy  says:   engine proxy@0.0.1: wanted: {"node":"0.4.x"} (current: {"node
16:28 < azbyin> proxy@0.0.1 node_modules/proxy
16:29 < rudiX> hello all
16:29 < rudiX> I am trying to install modules like express ... but all ends with "Killed!"
16:29 < cbess> rudiX: output log
16:29 < cbess> paste it
16:29 < cbess> in pastie.org
16:30 < rudiX> cbess: https://gist.github.com/3885241
16:36 < Aria> Only a tiny bit.
16:36 < Aria> Enough to know Windows is messy sometimes.
16:36 < Aria> Oh, hey. Look. I was scrolled up responding to ancient messages. Nice work, Aria.
16:36 < pyrotechnick> Aria: such is life
16:36 < mauritslamers> Aria: np :)
16:37 < mauritslamers> I would love to know what you know about compiling on windows ;-)
16:37 < Aria> rudiX: How much memory do you have available?
16:37 < Aria> mauritslamers: Mostly that there's multiple compiler options, you have to use ones with the same linker semantics (Which is messy) and all use the same runtime libraries.
16:37 < rudiX> Aria ... this is vps ... not much
16:37 < rudiX> 241mb
16:38 < Aria> rudiX: I bet you're hitting a memory limit -- can you run dmesg and see if there's a message about killing processes?
16:38 < Aria> mauritslamers: What sort of references undefined?
16:38 < Aria> (and are you using gyp, I hope?)
16:38 < evelyette> hi, I have the following stored in couchdb: http://dpaste.com/813261/ I would like to write a view in node.js that will iterate over all arrays in scores ... but doesn't work ...  http://dpaste.com/813262/ <-- the code ?
16:38 < rudiX> [77796.603671] Out of memory: Kill process 3900 (nodejs) score 80 or sacrifice child 
16:38 < rudiX> true
16:38 < Aria> rudiX: Bingo.
16:38 < evelyette> I would like to print a separate line for each entry in the array in scores
16:39 < mauritslamers> Aria: Well, I was trying to use gyp
16:39 < mauritslamers> but the problem is that gyp doesn't compile with mingw
16:39 < Aria> evelyette: Surprise! The thing you get using for() is the key, not the value.
16:39 < niggler> nathan7: how hard would it be to introduce lval unrolling (e.g. var [x,y] = [1,2]
16:39 < Aria> Oh dear. So you're treading in deep. 
16:39 < Aria> Can't use the MSVC compiler?
16:39 < evelyette> Aria, yes I know .. but how can I use the value ?
16:39 < mauritslamers> Aria: if libsass would compile with it, I would use it
16:39 < nathan7> niggler: Firefox has it
16:39 < nathan7> niggler: ES6 has it
16:40 < Aria> evelyette: doc.scores[score], doc.scores[score][item], etc.
16:40 < niggler> Firefox != node
16:40 < nathan7> niggler: V8 devs refuse it
16:40 < niggler> afaict 
16:40 < nathan7> niggler: I filed a V8 bug
16:40 < nathan7> niggler: https://code.google.com/p/v8/issues/detail?id=811
16:40 < niggler> years ago lol
16:40 < Aria> V8 devs are pretty conservative. They'll implement some things if they're behind a flag, and are interesting to the runtime, but they're not actually into changing the language, much, just the runtime.
16:41 < niggler> why can't we fork v8?
16:41 < nathan7> Because forks are a pain
16:41 < niggler> call it v12 or w16
16:41 < nathan7> Heh
16:41 < niggler> the bugatti of javascript engines
16:41 < mauritslamers> Aria: problem is that libsass doesn't compile with MSVC, load and loads of errors, and I just need a windows binary for the node bindings
16:41 < Aria> Indeed. And I bet they'd accept the code if someone else wrote it, it was easily integrated, and it was off behind a flag.
16:41 < Aria> mauritslamers: Oh dear. That's fun.
16:41 < nathan7> It's part of the harmony spec
16:42 < Aria> mauritslamers: That's outside my experience by far, sadly.
16:42 < nathan7> http://wiki.ecmascript.org/doku.php?id=harmony:destructuring
16:42 < Aria> Sure. But Harmony's a moving target.
16:42 < nathan7> Yes.
16:42 < mauritslamers> Aria: bummer, outside my experience too :)
16:42 < nathan7> But they're implementing Harmony shit
16:42 < niggler> oh its called restructuring lol
16:42 < niggler> *destructuring
16:42 < Aria> nathan7: Sure. Behind flags, and they mostly care about runtime , not language features.
16:42 < Aria> nathan7: Proxies yes, modules no, etc.
16:43 < niggler> it *almost* makes me want to use coffeescript
16:43 < nathan7> Aria: mhm
16:43 < Aria> niggler: Or sugar.js!
16:43 < nathan7> I just keep doing var _=blah(),one=_[0],two=_[1];
16:44 < niggler> sugar looks pretty cool
16:45 < niggler> strange to see them call it trimLeft and trimRight
16:45 < mauritslamers_> Aria: the point is that compiling with mingw should be very much like compiling under *nix
16:45 < niggler> id have expected ltrim/rtrim
16:45 < Aria> mauritslamers_: Sure. Did you compile node and v8 with mingw?
16:46 < mauritslamers_> but I cannot remember whether compiling node under OSX or Linux also seperates out the v8 library
16:46 < Aria> Hehe. Javascript culture has a lot of dromedaryCase wholeWords DOM-style folks.
16:46 < Aria> Not quite the preponderance of ruby- and perlish shortname people.
16:46 < niggler> where's the C sect of javascript?
16:46 < niggler> k&r javascript lol
16:46 < Aria> Also highly present.
16:46 < Aria> mauritslamers_: Node statically compiles V8 normally. Always.
16:46 < evelyette> Aria, sorry, but this doesn't work: http://dpaste.com/813265/ ... it looks like I can't iterate over the array of each key in dictionary 'scores' ?
16:47 < nathan7> Aria: It's convention
16:47 < evelyette> Aria, those are arrays not dictionaries, which is why it doesn' work
16:47 < niggler> oh your code is off evelyette 
16:47 < Aria> evelyette: Right... I'm not sure what you're expecting.
16:47 < niggler>               emit(doc.deviceid, [doc.nickname, item]);
16:47 < Aria> nathan7: Yes it is.
16:47 < mauritslamers_> Aria: but how do modules then compile against v8 under *nix?
16:48 < niggler> its printing the key
16:48 < niggler> you need to get the value
16:48 < evelyette> I would like to print all 1221 entries from: http://dpaste.com/813262/
16:48 < niggler> doc.scores[score][item] or something
16:48 < mauritslamers_> because the v8 namespace should be available to the binding somehow
16:48 < evelyette> niggler, yes I tries, it doesn't work
16:48 < Aria> mauritslamers_: Sure, the symbols stay exported. 
16:49 < Zane> Hm. Suddenly, in express+jade, res.render(...); is hanging. Eg, next line of code is not called. All I can think of that I changed is upgraded to node 0.8.12 yesterday. Anybody heard of anything like this?
16:49 < mauritslamers_> Aria:  on the node lib?
16:49 < Aria> mauritslamers_: In the node executable. It leaves its symbols exported, as well as V8's, and libuv's.
16:49 < Aria> mauritslamers_: So then the node extension can leave those undefined and the runtime loader can link them.
16:50 < mauritslamers_> ah… that is what the -undefined dynamic_lookup gcc flag does
16:50 < mauritslamers_> problem is that it doesn't seem to be recognised by gcc 
16:51 < niggler> hmm evelyette the following runs fine: http://pastebin.com/fSa6XpTh
16:51 < evelyette> niggler, thank you
16:52 < niggler> i changed your source data a bit to confirm that the its getting the right values
16:53 < Zane> I literally have console.log('1'); res.render('test'); console.log('2'); and the 2nd log is never called and the node.js page just times out...
16:55 < Aria> mauritslamers_: Yeah, for gcc, you probably want -shared or similar.
16:55 < niggler> nathan7: http://jsperf.com/global-vs-local-314/6 any good explanation for the order-of-magnitude difference between the test cases?
16:55 < Aria> mauritslamers_: gcc and msvc have completely alien flag sets.
16:55 < mauritslamers_> Aria: that is why I am comparing it to the compilation by node-gyp on Mac OSX
16:56 < mauritslamers_> Aria: and of course running node-gyp under cygwin or mingw command lines still uses MSVC instead of a linux type build
16:57 < Aria> mauritslamers_: Sounds right, but beware that MacOS's linker is its own special crazy. 
16:57 < Aartsie_> i got a socket script and it works great, now i'm thinking to build the hole website in node, is this a good option or is it better to use php for it in combination with node ?
16:57 < niggler> don't use php
16:57 < Aria> Aartsie_: That highly depends. They're VERY different designs.
16:58 < niggler> unless you have a lot of existing assets in php
16:58 < nathan7> niggler: No idea
16:58 < Aria> Aartsie_: Node is an app server; PHP is a templating language gone on steroids; PHP is much more file-by-file structured. 
16:58 < denom> hmm, the `nvm ls-remote` command appears broken 
16:58 < mauritslamers_> Aria: yes… perhaps it is a better idea to try to compare with a linux build
16:58 < Aria> Aartsie_: That said, PHP is a horrible language with a terrible culture around it.
16:58 < niggler> window seems to be a major bottleneck lol
16:58 < Aria> mauritslamers_: I would.
16:58 < timeturner> PHP is awesome
16:58 < timeturner> it rocks
16:58 < niggler> i wonder Aria if its possible to build a simple php wrapper on node
16:58 < timeturner> it's amazing
16:59 < Aria> niggler: Yeah, global access is way less optimized, and I doubt that V8 optimizes the Window object that much.
16:59 < Aria> niggler: Wrapper how so?
16:59 < niggler> i use php for simple stuff like server-side loops
16:59 < Aria> timeturner: Read the source code some time. You'll change your mind.
16:59 < Aria> timeturner: Read up on its type coercion rules some time. You'll change your mind.
16:59 < Aria> timeturner: Read its array docs, then look for the holes in the operations they provide. You'll change your mind.
16:59 < niggler> <? for($i=0; $i<10;++$i) { ?> … html code … <?= $i ?> … more code … <? } ?>
17:00 < nlf> hooray boredom
17:00 < niggler> it should be easy to implement a subset of php like that in node
17:00 < Aria> Heh, yeah. As a templating language, it wouldn't be too hard.
17:00 < nlf> i just wrote a bot to monitor github pull requests and their comments
17:01 < nlf> uses middleware to check the repo object itself and the pull request's comments
17:01 < niggler> ok this is absolute garbage
17:01 < nlf> one fails, it sets a failed status and turns the merge button gray
17:01 < niggler> jsphp and phpjs 
17:01 < nlf> they all pass, it goes green
17:01 < Aartsie_> is it possible to use sessions on node ? 
17:01 < Aria> Aartsie_: Yes.
17:01 < Aria> Aartsie_: But you'll want a library. node itself doesn't know or care about sessions. All it speaks is HTTP.
17:02 < niggler> aria this exists but its obviously not what i want: https://github.com/davidcoallier/node-php
17:02 < Aria> Cute. 
17:03 < Aria> There's a project that compiles PHP to Javascript, but its approach is pretty flawed if you ask me.
17:03 < Aartsie_> Aria: http://www.nodejs.org/api/http.html could find the session there
17:03 < niggler> whats the right way then?
17:03 < Aria> Aartsie_: Right. There's no such thing as a session in HTTP. It's a made up concept on top.
17:04 < Aria> niggler: Oh, that's a perfectly valid concept. It's just a terribly designed compiler. Someone who knows something about interpreters should write one.
17:04 < Aria> niggler: But instead, they mixed the runtime and interpreter together, and didn't do either well.
17:04 < niggler> Aria: link?
17:04 < wookiehangover> if you're looking for an easy way to use sessions, I'd recommend starting with connect or express
17:04 < niggler> i don't see why this wouldn't be done with a simple jison parser coupled with a library e.g. phpjs.org
17:04 < wookiehangover> or if you're feeling more adventurous, try this https://github.com/isaacs/redsess
17:05 < icebox> Aartsie_: you may give a look at http://expressjs.com/
17:05 < wookiehangover> niggler: http://www.troll.me/images/futurama-fry/cant-tell-if-trolling-or-autistic-cousin.jpg
17:06 < Aria> niggler: PHP has horrible, horrible edge cases that don't map to JS at all neatly.
17:07 < Aria> Aartsie_: All a 'session' is is an ID stored in a cookie, then some storage using that as a key.
17:07 < wookiehangover> hence the need for redis or connect or something like redsess
17:07 < Aria> niggler: http://phpjs.hertzen.com/
17:08 < wookiehangover> s/redis/express
17:09 < Aria> That depends on whether you want your sesssions to last past the server process or not.
17:10 < nathan7> Hi wookiehangover 
17:10 < wookiehangover> hi nathan7
17:14 < Aartsie_> Aria: So i have to use express cookieSession() ?
17:14 < Aria> Aartsie_: That's one option.
17:15 < Aartsie_> whats the best option ? i'm new with node
17:15 < Aria> Aartsie_: Or write it yourself.
17:15 < Aria> Aartsie_: It depends on what you're doing with it.
17:15 < Aria> Aartsie_: What's the use case? What state do you need to save? For how long?
17:15 < wookiehangover> 'writing it yourself' is usually not a good option if you're new to node
17:15 < wookiehangover> use express or connect
17:15 < icebox> Aartsie_: you may give a look at http://nodetuts.com/tutorials/13-authentication-in-express-sessions-and-route-middleware.html
17:15 < wookiehangover> understand the core concepts
17:15 < wookiehangover> *then* write it yourself
17:16 < evelyette> niggler, can you help me a little bit more please: now I'm getting the following values from a view: http://dpaste.com/813270/
17:16 < evelyette> this works ok, but I would like to return only those that have the second number in array value == 1 ... 
17:16 < evelyette> how can I achieve that ?
17:16 < niggler> oh did you ask that originally evelyette ?
17:16 < Aartsie_> Aria: For login function
17:17 < evelyette> niggler, no I didn't ... 
17:17 < evelyette> It's something new :)
17:17 < Aria> Aartsie_: There's a lot of ways to implement that. A session is only one way. 
17:17 < niggler> so check for it?
17:18 < niggler> if you just want score = 1
17:18 < niggler> you can just check if("1" in doc.scores)
17:18 < niggler> and just set score=1
17:18 < Aria> Aartsie_: cookieSession is interesting, in that it doesn't store the session, just sends it back in a cookie, signed to prevent tampering.
17:19 < Aria> Aartsie_: So it's lightweight and doesn't require storage server-side, leaving your server mostly stateless.
17:19 < Aria> (but you can't hide data in it)
17:20 < evelyette> niggler, no I can't, because I want this to be dynamic ... score is changing
17:21 < niggler> evelyette: so then make the function take a score parameter
17:21 < niggler> function(doc, score) ...
17:21 < niggler> replace for with if in the like for(score in doc.scores)
17:21 < evelyette> niggler, hm and how can I then pass the score to that function ?
17:22 < niggler> you said you just wanted score = 1
17:22 < niggler> now there's a reason why, and most likely you know what you want before you call the function
17:22 < evelyette> niggler, yes, but that function is being called automatically 
17:22 < niggler> its being called from somewhere else
17:22 < niggler> at that point do you know what score you want?
17:23 < evelyette> if I pass the score in the function as parameter, it should work
17:23 < evelyette> but I don't know how to pass that second parameter to the function
17:23 < niggler> where you call the function, add that second parameter
17:23 < niggler> e.g. d(doc,1) instead of d(doc)
17:24 < evelyette> niggler, as I said, I'm not calling d(doc) anywhere ...
17:25 < niggler> you are calling that function from somewhere
17:25 < niggler> it doesn't just exist in a vacuum
17:26 < niggler> who maintains jslint?
17:26 < niggler> *jshint
17:26 < evelyette> it's automatically called whenever I visit _design/views/_view/level
17:26 < nathan7> Whoo, couch
17:26 < niggler> heh fuck yo couch
17:27 < nathan7> Couch is really cool
17:28 < niggler> nathan7: what's the proper mantra for setting up exports?
17:29 < niggler> i use something like "if(typeof exports !== 'undefined') {" and then say "exports.foo = bar;" 
17:29 < niggler> but is this an idiom that works in all browsers?
17:31 < nathan7> niggler: that's what I do
17:32 < nathan7> if(typeof module!=='undefined') module.exports=thing;
17:32 < nathan7> else if(typeof window!='undefined') window.thing=objectify;
17:36 < niggler> i wonder if jshint should complain
17:36 < wookiehangover> only about the 
17:36 < wookiehangover> !=
17:36 < niggler> if you say if(typeof exports !== 'undefined') then you've already indicated that you know the variable is global
17:36 < niggler> for the record i typed !== :)
17:37 < niggler> 'i use something like "if(typeof exports !== 'undefined') {" and then say "exports.foo = bar;"
17:37 < niggler> [1:28pm]'
17:37 < nathan7> I think I'd do var exports={}
17:37 < nathan7> define my shit
17:37 < nathan7> and then figure out if I should stick that into module.exports or window.modulename
17:37 < nathan7> bbl
17:37 < niggler> and then set module.exports = exports?
17:38 < Aria> ++
17:38 < Aria> I'd do that too.
17:38 < Aria> Single object / single function exports are win.
17:47 < holzp> anyone want to take a look at some node/redis/async code and let me know where its not very node like?
17:47 < holzp> http://pastie.org/5052509
17:48 < holzp> iplementing a findorcreate for passport oauth
17:48 < holzp> users are in redis
17:48 < holzp> is that how node/redis usually looks?
17:50 < Aria> Your style is unusually dense (no whitespace except indentation, oy!)
17:50 < Aria> It doesn't look too un-node-like, though, for using Async.
17:50 < niggler> lol I'm worse Aria 
17:50 < Aria> You're not deeply nesting callbacks, though you're nesting a little. 
17:50 < harbhub> niggler  :)
17:50 < Aria> People often name them, and move them to the top scope.
17:50 < holzp> if not for async i think i would have gone mad with the callbacks
17:51 < Aria> It helps just naming them.
17:51 < Aria> function handleFoo() {}; function handleBar() {}; Async.waterfall(handleFoo, handleBar);
17:51 < holzp> yeah
17:51 < holzp> i could see that being cleaner
17:51 < holzp> this is my first thing with node and redis and oauth all at once
17:51 < holzp> but it can be cleaner no doubt
17:52 < Aria> Yeah. And that's a pretty easy refactoring, most of the time.
17:52 < Aria> Unless you went closure heavy and rely on variables from outer scopes everywhere.
17:53 < holzp> like that async very slick
17:54 < holzp> one thing i do is add a function to the array prototype for making redis keys from it (basically a this.join(':')
17:54 < holzp> is that a bad idea?
17:54 < nlf> generally modifying core prototypes at all is a bad idea
17:55 < Aria> Yes. The usual pattern is a wrapper: yourthing.join(array)
17:55 < Aria> (underscore/lodash do this)
17:56 < holzp> yeah i did that real quick without thinking
17:56 < holzp> figure messing with Array is asking for trouble
18:20 < Zane> can anybody please help with this express+jade error? It's a show-stopper, killing my production setup : http://stackoverflow.com/questions/12874906/node-js-express-jade-render-times-out-with-node-v-0-8-12#comment17430239_12874906
18:21  * hdon clicks
18:24 < hdon> Zane, when you say it times out, what's the clue that it's "timing out?"
18:25 < Zane> hdon, notice the code I pasted in the SO thread, where I say that it doesn't execute the 2nd console.log
18:25 < Zane> eg, the next line of code after render(...) is never executed
18:25 < Zane> and the browser requesting the page sits until it times out
18:25 < hdon> Zane, ok it's never executed, but that doesn't mean timeout
18:25 < hdon> ohh
18:26 < hdon> Zane, set up a test to run the same code from the commandline. then you can use tools like strace/dtrace to see what's going on
18:26 < Zane> per the comments, I've also tried with a callback on the render(), which is never called
18:26 < hdon> Zane, also have you watched your CPU or memory while this is happening?
18:26 < Zane> Yeah, server stats are all fine
18:26 < hdon> Zane, if you see a CPU and/or memory explosion, it might be stuck in a loop or recursion
18:26 < hdon> ah ok
18:26 < Zane> and, it works fine on 0.6.18 node
18:27 < hdon> Zane, i'd say first to run this from the commandline so you can inspect what's happening. this will also allow you to create a well encapsulated test for others who might want to help you
18:27 < hdon> that's a good clue, unfortunately i'm not knowledgeable enough about the differences to know what that might mean :)
18:27 < Zane> now, one difference is I installed 0.6.18 from YUM (CentOS) and 0.8.12 by building it
18:27 < Zane> I actually think it might have to do  with read-permissions on the views/ dir, but I tried chmod 777
18:28 < Zane> && okay, working on creating a tset-case
18:28 < hdon> Zane, seems unlikely to me. i'd expect that to fail with EPERM and throw an error. if express can't catch an error and handle the http response to report that an error occurred, that doesn't speak too highly of express.
18:29 < hdon> Zane, a good test might be to throw an error in your express request handler after sending some text and see what express does
18:29 < Zane> well, FWIW, the server works in ever other imaginable way
18:29  * hdon nods
18:29 < Zane> eg, I can send JSON strings back
18:30 < Zane> so not sure if sending text would be any different of a test case
18:30 < Zane> and, also, express catches all sorts of other errors
18:30 < Zane> I've tested that the error handler is working in many other scenarios
18:31 < hdon> ok. just for my own knowledge, could you tell me how express handles an error that is thrown half-way through sending a response?
18:32 < hdon> i recall not being quite satisfied with PHP's habit of reporting the error midstream, but then it's very practical if not clean
18:33 < Zane> express handles it with middleware, basicially
18:33 < Zane> so you do app.use(function(err, req, res, next) { ... });
18:34 < Zane> anything thrown within express will be caught by that
18:34 < Zane> & by "within express" I mean even if your functions, for example, throw an error
18:34 < hdon> ahhhh. but what does the response look like?
18:34 < hdon> the http repsonse
18:35 < Zane> It's up to you
18:35 < Zane> Without an error handler, it will print a stack trace IIRC
18:35 < Zane> with an error handler, it's up to you to format the output
18:38 < ralphholzmann> will fs.rmdir work even if the directory is not empty?
18:39 < freewil> try it
18:43 < ralphholzmann> nope
18:43 < ralphholzmann> ERRNOTEMPTY
18:53 < analphabet> ralphholzmann: use the isaacs rimraf library
18:53 < Zane> progress! node is saying Jade is not installed. wtf? lol. I've installed both express and jade from npm both with and without -g flag
18:53 < analphabet> Zane: the -g flag doesn't help you, if you want to require a module
18:54 < Zane> I'm not requiring it; express is
18:55 < Zane> I've run into scenarios where the -g flag is necessary (eg, forever), so I figured that I would mention I had tried installing it that way too
18:55 < context> so install jade
18:55 < Zane> ...
18:55 < context> ls node_modules|grep jade
18:55 < Zane> context: I have
18:56 < Zane> okay I'm going insane
18:56 < Zane> @.@
18:56 < context> express 3 doesnt do anything regarding templates does it
18:56 < Zane> context: hmm? it supports jade implicitly
19:00 < harbhub> jade is shitty
19:07 < cbess> harbhub: handlebars for the win?
19:07 < harbhub> haven't played with that one
19:07 < cbess> harbhub: it goes hard
19:07 < harbhub> lol
19:08 < cbess> https://github.com/wycats/handlebars.js/
19:08 < harbhub> looks interesting
19:08 < context> i can ride my bike with no handle bars
19:08 < harbhub> http://handlebarsjs.com/
19:08 < context> no handle bars
19:09 < analphabet> context: I can't install no handle bars?!
19:09 < cbess> analphabet: why not?
19:09 < context> analphabet: http://www.youtube.com/watch?v=HLUX0y4EptA
19:09 < cbess> harbhub: quick app to check it out: https://github.com/cbess/expressjs-test
19:10 < analphabet> context: I tried `npm install no handlebars` but it doesn't work..
19:10 < cbess> analphabet: wow
19:10 < context> analphabet: i was quoting a song
19:11 < cbess> good job context
19:11 < context> that and i never said "no handlebars"
19:11 < cbess> haha
19:11 < analphabet> oh, so that's why...
19:12 < analphabet> context: you're right. Now, it works: `npm install no handle bars`
19:12 < context> ;)
19:12 < context> i still ride with no handlebars
19:12 < cbess> heh
19:12 < Zane> Hm. Can having several outbound requests (via http) open cause node.js to not accept a new incoming request? Eg, perhaps limited # of sockets, and they're all busy, cause the incoming request to timeout?
19:13 < context> zane: </vague>
19:14 < analphabet> Zane: there's definitely a request pool
19:14 < analphabet> yes
19:14 < Zane> context: okay, more specific then. I am using the Node+OAuth library in my API to make requests to  Facebook, Twitter, etc. Sometimes these requests take >10sec. When several are open at once, sometimes I cannot connect to my node.js app server at all. I have inserted a console.log in the very first line of express middleware, and it is not called.
19:15 < Zane> I had initially guessed this would be a problem, and thus did this require('http').globalAgent.maxSockets = 999
19:15 < analphabet> http://nodejs.org/docs/latest/api/all.html#all_agent_maxsockets
19:15 < Zane> but that does not appear to solve the problem. Can anybody provide a solution?
19:15 < analphabet> Zane: (rtfm)
19:15 < evelyette> hi, I have the following array: http://dpaste.com/813317/  what's the best way to sort it based on the third argument of 'value' key ?
19:16 < Zane> analphabet: ... ? I just pasted that I had set maxSockets already. Obv. I read the manual, that's what gave me the idea to do this. Unless I misunderstood something, in which case, I'm re-reading it but still don't see what I don't get...
19:17 < analphabet> Zane: I missed your comment about trying it, sorry.
19:18 < Zane> analphabet: np, just as long as I'm not being an idiot ;) Maybe I set the # of sockets too high and it's being ignored? **random guess**
19:18 < analphabet> I'd do some debugging: console.log(http.globalAgent.requests) -- see http://nodejs.org/docs/latest/api/all.html#all_agent_requests
19:20 < analphabet> I once wrote a tool that would fetch all available node binaries (using 'request' library) and every time I tried it, some binaries wouldn't download correctly...
19:22 < Zane> interesting
19:23 < analphabet> evelyette: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/sort
19:24 < analphabet> Zane: I never found out what caused this
19:28 < Zane> analphabet: heh :( 
19:44 < analphabet> Zane: I'm doing some research on this, now...
19:45 < zane> analphabet: :) I'm playing with crap & stress-testnig.... wooo
19:48 < analphabet> zane: http://beta.etherpad.org/p/QCWxGLRn0a
19:53 < analphabet> zane: This only demonstrates `maxSockets = 5` ^= default
19:54 < jaseemabid> How can i return an empty object {} from c++ with some properties attached? We have String::New("aString"), i am looking for Object::New("something")
19:54 < jaseemabid> something,like that
19:55 < zane> analphabet: hmmmmm... I'm recording the .requests object whenever a connection is established. But, by the time a "laggy" connection establishes, it is an empty object every single time
19:56 < zane> I'm having a hard time reliably creating a laggy connection, tho, even with stress testing
19:57 < analphabet> .requests only contains the requests that aren't sent, yet (it's a queue)
19:57 < analphabet> re "the very first line of express middleware, and it is not called": This looks like you've got some blocking code in your app...
19:59 < analphabet> zane: pasted my code....
19:59 < btipling> hi
20:00 < btipling> is there a way to see the raw http data being sent when using https.request? I'm making a post request and it has errors in there somewhere and I'd just like to see the raw request to see what's going on
20:00 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:02 < mauritslamers> any people who could help me getting node-sass compiled on windows? If only it was for some pointers how to do it :)
20:03 < analphabet> btipling: you could listen for the socket event and try to intercept what's sent , there... see http://nodejs.org/docs/latest/api/all.html#all_event_socket
20:03 < btipling> analphabet: thanks
20:04 < mauritslamers> the compile error log: https://gist.github.com/3885949
20:06 < analphabet> mauritslamers: I npm installed node-sass on win7, it works
20:06 < mauritslamers> analphabet: yes???
20:07 < mauritslamers> I am trying to install on windows XP SP3, and getting huge compilation issues
20:07 < analphabet> > node-sass@0.2.4 install C:\Users\Marcel Klehr\Desktop\node_modules\node-sass
20:07 < analphabet> > node rebuild.js
20:07 < mauritslamers> analphabet: yes, but that doesn't mean it works
20:07 < mauritslamers> because it contains precompiled binaries for linux and mac osx
20:07 < mauritslamers> but no windows binaries afaik
20:08 < mauritslamers> analphabet: but please, pretty please prove me wrong :D
20:08 < analphabet> mauritslamers: I can't....
20:08 < analphabet> Can't find node_modules\node-sass/precompiled/win32-ia32/binding
20:09 < mauritslamers> that is indeed my error too… so I tried to compile it, but then I got into real trouble
20:10 < addisonj> anyone use graphite in prod?
20:11 < analphabet> mauritslamers: https://github.com/andrew/node-sass/issues ..? (I can't help you with that one....)
20:11 < mauritslamers> analphabet: thanks anyway :)
20:20 < btipling> ok so I would like to send an image as part of a multipart form-data post, and I got the multipart syntax correctly, but I'm running into issues combining the binary data from the image with the multipart form http string contents
20:20 < btipling> I was thinking maybe using a Buffer for this
20:20 < btipling> and writing to it
20:21 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:26 < fnguest> hi, i'm writing a small node app that fetches data from MongoDB.  i'm not used to the event style of programming though.  should i think in terms of making the data fetching a separate function so the fetch doesn't block anything else?
20:27 < timeturner> rule of thumb: if there is a callback it is async
20:27 < mauritslamers> fnguest: the event style makes sure that it doesn't block
20:27 < mauritslamers> it works by putting functions on a call-stack 
20:27 < mauritslamers> in that way clearing the way for other functions
20:29 < ichilton> Hi
20:29 < ichilton> Trying to install hubot in a vagrant instance and getting a load of errors on the npm install - http://pastie.org/5054004 - anyone able to help?
20:30 < fnguest> so i can just run a mongo fetch inside request.on('end' ... as in the usual object oriented way?
20:30 < mauritslamers> fnguest: that is one option, you can also call something outside that function
20:31 < mauritslamers> in that way you can use that one fetch function for every mongo fetch you need to do
20:31 < fnguest> mauritslamers: but i don't have to worry about concurrency, etc...
20:31 < mauritslamers> fnguest: it is not about concurrency, it is about code reuse :)
20:31 < fnguest> i know but if the mongo fetch gets delayed somehow, it won't block other functions because of this call stack?
20:31 < mauritslamers> no
20:31 < fnguest> ok thanks
20:44 < joshryandavis> j
20:47 < todd_> if i start node js inside emacs's shell mode, got this error:
20:47 < todd_> >node ^[[1G^[[0J> ^[[3GAssertion failed: (!!(events & UV__IO_READ) ^ !!(events & UV__IO_WRITE)), function uv__stream_io, file ../deps/uv/src/unix/stream.c, line 729. Abort trap  Process shell exited abnormally with code 134 
20:47 < nathan7> well then use another OS
20:48 < nathan7> than emacs
20:48 < gkatsev> lol
20:48 < nathan7> hi gkatsev 
20:48 < gkatsev> o/
20:48 < todd_> but this is not fair to emacs fan, right?
20:49 < nathan7> Hi mikeal 
20:49 < todd_> emacs is not OS, it's just most popular editor (other than vi) on server side.
20:49 < gkatsev> todd_: are you opening a node shell in emacs, or opening a shell like bash and then running node?
20:49 < mikeal> hi
20:49 < nathan7> todd_: you're missing the joke
20:50 < nathan7> todd_: "emacs is a good OS, it's a shame it doesn't have a good editor"
20:50 < todd_> open shell inside emacs,
20:50 < nathan7> mikeal: I was trying to use your watch module
20:50 < todd_> then type node inside it's command line.
20:50 < todd_> to start REPL.
20:50 < nathan7> mikeal: and it just doesn't seem to hook anything
20:50 < mikeal> cool
20:50 < todd_> non REPL mode is OK.
20:50 < mikeal> shit
20:50 < mikeal> hrm....
20:50 < nathan7> mikeal: my program just exits
20:50 < mikeal> lots of people seem to depend on it
20:50 < mikeal> but i haven't used it in a while
20:50 < gkatsev> todd_: hm... try running node shell directly. Also, try opening a terminal rather than a shell
20:50 < mikeal> can you send me a test, maybe in an issue on the tracker?
20:51 < nathan7> I ended up using fs-watch-tree
20:51 < todd_> i'm wondering all other scripts language works, even spidermonkey,
20:52 < mauritslamers> Is there anyone around who could help me with some advice to get node-sass compiled on windows?
20:52 < nathan7> no, though I could give you some sass
20:52 < mauritslamers> I have an error log
20:52 < mauritslamers> nathan7: hehe :)
20:52 < mauritslamers> as long as it works on windows ;-)
20:53 < todd_> <todd_: "emacs is a good OS, it's a shame it doesn't have a good editor"
20:53 < todd_> depends on personal preference.
20:54 < gkatsev> todd_: it's a joke
20:55 < todd_> hope i can read the source code and get some idea and then have a workaround.
20:55 < nathan7> the counter of course is "vi is a good editor, a shame it lacks a good OS"
20:55 < nathan7> vimscript doesn't really make me happy
20:55 < todd_> yeah, that make sense. a good metaphor
20:56 < nathan7> emacs is too heavy for the nathan to like
20:57 < todd_> some times editors choice are exclusive. you can't love both vi and emacs.
20:57 < todd_> other comparision like Perl vesus Python.
20:57 < todd_> JavaScript vesus Lua.
20:58 < todd_> i suppose JavaScript is heavier than Lua, Perl is heavior than Python.
20:58 < todd_> and since Emacs is Heavier than Vi,
20:58 < todd_> so i suppose the suite of UNIX fan for javascript should be
20:59 < todd_> Emacs + C + Perl + JavaScript 
20:59 < nathan7> Lua is an entirely different thing
20:59 < nathan7> Emacs is quite the opposite to UNIX
20:59 < nathan7> The UNIX philosophy emphasises simple, composable tools
20:59 < gkatsev> todd_: have you tried my suggestions?
21:00 < todd_> sorry i may missed that,  can you repeat the suggestion.
21:01 < gkatsev> todd_: try running the node repl directly. Or try opening a terminal rather than a shell and running node there.
21:01 < todd_> hmm.. how to run node repl directory?
21:01 < gkatsev> um...
21:02 < todd_> <Emacs is quite the opposite to UNIX
21:02 < gkatsev> todd_: M-x term   will give you a terminal
21:02 < gkatsev> todd_: oh, I guess maybe M-x node
21:03 < todd_> the practical case of vi fan is like  VI + C + PYTHON, since VI have no debugger support, they usually have a Elipse editor on another windows box :(
21:03 < gkatsev> maybe?
21:03 < todd_> gkatsev,
21:03 < todd_> that's what a try
21:03 < gkatsev> todd_: vim has debugger support, fwiw
21:03 < todd_> M-x node 
21:03 < todd_> :)
21:03 < gkatsev> ah
21:03 < gkatsev> todd_: try M-x term  and then node.
21:03 < todd_> emacs doesn't have node command
21:04 < gkatsev> ok, there's a way to have it open up the repl directly, dont know the command
21:04 < todd_> M-x term and then node, that's caused the assert error, that's what i mentioned.
21:04 < gkatsev> ah
21:04 < gkatsev> I thought you did that with M-x shell
21:04 < todd_> ok, i tried M-x shell
21:04 < todd_> also tried M-x ansi-term
21:04 < todd_> both assert failure
21:04 < gkatsev> heck, in M-x term I was able to run vim :)
21:05 < gkatsev> hm... yeah, no ideas
21:05 < todd_> yes, you can run vim inside emacs :)
21:05 < gkatsev> might be worth an issue
21:06 < todd_> yes, M-x term also not work
21:07 < gkatsev> todd_: try running node --interactive maybe?
21:07 < todd_> trying..
21:07 < todd_> same error
21:07 < gkatsev> ok
21:07 < rburton-> re
21:08 < gkatsev> todd_: you can try something like the accepted solution here: http://stackoverflow.com/questions/8909836/how-to-run-node-js-interactively-in-emacs-on-windows maybe
21:08 < todd_> < <gkatsev> todd_: vim has debugger support, fwiw
21:08 < todd_> i never see vi guy debuging inside it. they use ddd, and connect to that huge monster eclipse.
21:08 < todd_> :)
21:09 < rburton-> What are some good frameworks for node.js to look at? I was looking briefly at Geddy and Express
21:09 < nathan7> Why would you do that?
21:09 < nathan7> who the fuck wants to run eclipse?
21:09 < nathan7> rburton-: express, flatiron
21:09 < rburton-> I'll have to check out flatiron
21:09 < gkatsev> nathan7: express was already mentioned, lol
21:09 < rburton-> Just doing research on what frameworks are out there etc :)
21:09 < nathan7> gkatsev: I know
21:09 < nathan7> gkatsev: I was just giving my version of the list
21:09 < todd_> thanks. checking that URL.
21:09 < gkatsev> nathan7: ah, ok
21:10 < nathan7> https://github.com/faye/faye/pull/162#issuecomment-9404645 and thus it ends
21:10 < nathan7> apparently someone's fucking ego can't stand a three-line patch that influences nothing else
21:13 < gkatsev> lol
21:14 < gkatsev> I can understand where he's coming from but seems like he should've done some research himself as well rather than only relying on you to tell him everything
21:15 < rburton-> Here's a question I wondered, new to node.js so execuse me. If everything is event driven with database interaction. How does the server know to render a response? via a call back method?
21:15 < nathan7> Yep.
21:15 < gkatsev> yes
21:15 < nathan7> Look at the nodejs.org example for example
21:16 < nathan7> You get request and response objects (often shortened to req and res)
21:16 < gkatsev> todd_: if that doesn't work, you could email the nodejs list asking for help in getting node running in emacs, I'm certain you aren't the only one.
21:16 < nathan7> You can just .send() stuff on the response and .end() it
21:16 < todd_> yeah, seems not working still. i'm reading more of your URL. 
21:17 < rburton-> Has anyone created a chain method utility. e.g.., _.execute(function, args).execute(function, args)
21:17 < nathan7> rburton-: like async?
21:17 < nathan7> rburton-: https://github.com/caolan/async#asyncjs
21:17 < rburton-> To make all the callbacks visible from a single point I guess is where I'm getting at
21:17 < rburton-> let me check that out
21:18 < rburton-> sort of, chaining method invocations like an oracstration flow
21:18 < nathan7> async pretty much solves this kind of thing to me
21:18 < rburton-> I like the parallel
21:18 < nathan7> It's lovely
21:18 < rburton-> This is something I wish more frameworks would have
21:18 < rburton-> e.g., Rails etc
21:19 < nathan7> parallel and forEach kick ass
21:19 < rburton-> Even more, i would love parallel with a limit
21:19 < rburton-> the limit being how long to wait
21:19 < nathan7> I can even turn it into .forEachMap, .forEachLimit, etc
21:19 < nathan7> err
21:19 < nathan7> .forEachSeries*
21:19 < nathan7> I'm missing .mapLimit though
21:20 < rburton-> A lot of web applications really need to learn how to aparallize units of work
21:20 < rburton-> everyone loves to do: Execute A, then B then C
21:20 < nathan7> rburton-: check out async.auto
21:20 < nathan7> It's really the most kick-ass thing that async has
21:21 < nathan7> I haven't found a case where I needed it
21:22 < rburton-> looks like a nice library
21:22 < rburton-> I love to play with new technology :)
21:23 < rburton-> I'm using DropWizard for a Metrics system i'm going to open source. Basically like MixPanel
21:23 < astropirate> rburton-, i like old technology
21:23 < rburton-> astropirate I like old women
21:23 < nathan7> old tech beyond some point is cool
21:24 < astropirate> rburton-, how nice for you
21:24 < rburton-> ;)
21:24 < rburton-> nathan7 I love to collect old computers
21:25 < rburton-> I just did my taxes today
21:25 < rburton-> So not happy
21:25 < rburton-> F--k the man!
21:26 < nathan7> rburton-: at some point every computer became generic
21:26 < rodyhaddad> Hey guys, if I have a url of an image, how can I request it and save it on the filesystem? (I request it with normal http.get? I save it with normal fs.writeFile? )
21:27 < rburton-> My first was an IBM Apativa :)
21:27 < nathan7> Most things x86 and old are old crap not worth collecting
21:27 < nathan7> But I have an atari 2600 around and things
21:31 < rburton-> Okay nothing is sexier than almost being ready to release a website you wrote
21:32 < pyrotechnick> rburton-: 166mhz 1.6 gb hdd 16mb ram
21:32 < rburton-> nathan7 I need adult diapers, I'm about to exploid
21:32 < pyrotechnick> rburton-: my first love
21:32 < rburton-> pyrotechnick I love those days!
21:32 < pyrotechnick> rburton-: dr brain
21:32 < rburton-> I remember hearing the sound of a mans voice as I logged onto AOL to download nude girls.
21:32 < pyrotechnick> rburton-:  interesting
21:33 < pyrotechnick> did you have dr brain?
21:33 < rburton-> Then the sound of my heart racing wondering if someone heard it.. then half way downloading a chick I hear the same male voice telling me "Goodbye!" as if I got caught
21:33 < pyrotechnick> that shit was off the hook
21:33 < rburton-> dr. Brain hmm
21:33 < pyrotechnick> it came with it
21:33 < pyrotechnick> in the folder
21:33 < nathan7> rburton-: exploid?
21:33 < rburton-> I don't remember it
21:33 < pyrotechnick> man those things were like AUD$8000 here
21:33 < rburton-> nathan7 leaking happiness here ;)
21:34 < rburton-> SendFil.es is almost ready to launch!
21:34 < pyrotechnick> ours still runs
21:34 < pyrotechnick> only thing that went was the PSU
21:34 < rburton-> pyrotechnick When I move to SFO in Nov, I should buy an old computer
21:34 < rburton-> leave it out so people see it lol
21:35 < rburton-> A great way to let the honey's know "I won't be paying childsupport"
21:35 < pyrotechnick> atari
21:35 < pyrotechnick> chicks dig ataris
21:35 < rburton-> ;) true
21:35 < rburton-> I'm going to get laid almost!
21:36 < rburton-> nathan7 don't get jealous I'll be in front of a girl! Almost close enough to smell her hair!
21:36 < pyrotechnick> wats a girl?
21:36 < pyrotechnick> that an npm module?
21:36 < rburton-> pyrotechnick I didn't expect a test! I'm not sure...
21:36 < rburton-> I would say anything that's female like.. including animals.
21:36 < pyrotechnick> ill google it
21:37 < pyrotechnick> some kind of bumpy man
21:37 < rburton-> I had someone at JavaOne do a google for some basic word and porno sites showed up
21:37 < pyrotechnick> funny clothes
21:37 < rburton-> I told the guy that Google tweaks the results based upon prior results
21:37 < rburton-> He didn't believe me
21:37 < rburton-> so I did the SAME search
21:37 < rburton-> different results LOL
21:37 < rburton-> He was cranking away apparently lol
21:37 < pyrotechnick> ALWAYS ICOGNITO ALWAYS
21:38 < zeepickler> Is "make test" for v0.8.12 known to have intermittent errors?  Can it be ignored? 
21:38 < rburton-> pyrotechnick++
21:38 < pyrotechnick> show him duckduckgo or something
21:38 < pyrotechnick> it might save his marriage
21:39 < nathan7> rburton-: if it isn't on npm it doesn't exist
21:39 < rburton-> ha :) I hear alot about duckduckgo
21:39 < rburton-> nathan7++ right!
21:39 < nathan7> https://npmjs.org/girl
21:39 < pyrotechnick> its a fun game
21:39 < rburton-> I know it's a search site but never used it
21:40 < pyrotechnick> you sit in a cirlce
21:40 < pyrotechnick> someone's "it"
21:40 < pyrotechnick> chase eachother round n stuff
21:40 < pyrotechnick> crazy game
21:40 < rburton-> ;)
21:41 < hdon> hi all :) is there a jade sandbox online?
21:42 < vicapow> hdon: is this what you mean?
21:42 < vicapow> http://try-jade-and-stylus.herokuapp.com/
21:43 < rburton-> nathan7 ha! Error: 404 Not Found: girl
21:43 < hdon> vicapow, prima fascia, yes :) thanks!
21:43 < vicapow> hdon: fyi, i didn't know it existed. i just googled "try jade" 
21:43 < nathan7> rburton-: thatsthejoke.jpg
21:44 < rburton-> ;) I tell my friends I always search for porn.gif ;)
21:44 < hdon> vicapow, ahhh, i should have thought of that! i googled "jade template sandbox" and got wikis for a game called jade empire :|
21:49 < bastinat0r> Hi folks, what is the best way to handle shallow-copy issues with node?
21:49 < pyrotechnick> npm i clone
21:50 < othiym23> bastinat0r: ??
21:56 < bastinat0r> othiym23: I'm trying to create to databases with some content, but as the request are done at the same time both function calls change the same http-options (which they shouldn't)
22:03 < othiym23> bastinat0r: sounds like you should create new options hashes with only the options each call needs
22:03 < othiym23> if you're worried about race conditions, that is
22:06 < bastinat0r> othiym23: Thanks, now it just worx :)
22:10 < gabrieluk> hi, i'm using forever, in a production server. if i make changes on the application, should i restart forever?
22:30 < nathan7> gabrieluk: run forever with -w
22:33 < nlf> TIL protobufs are hard
22:33 -!- ryah changed the topic of #Node.js to: RFHG
22:35 < evelyette> hi, I have an array of arrays like this: http://dpaste.com/813383/ ... is there any way of sorting those by the third field of each element ?
22:35 < evelyette> this doesn't work: r.sort(function(a,b) { return a[2],b[2]; });
22:36 < gkatsev> evelyette: you want to return a boolean, I think
22:36 < evelyette> ah, a[2]-b[2] works
22:36 < gkatsev> or an int, lol
22:39 < gabrieluk> nathan7, thanks.
22:41 < evelyette> btw: if I have an array like r=[1 2 3 4 5 6 7 8 9], is there a possibility to get only the last 5 elements and form a new array ... in python this would have been: r[:-5] 
22:41 < evelyette> ?
22:41 < hdon> http://pastebin.com/dVWLadBU
22:42 < hdon> latent mozillaism
22:42 <@Nexxy> evelyette, Array.slice
22:42 < hdon> or, residual, rather
22:42 <@Nexxy> evelyette, https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/slice
22:43 <@Nexxy> evelyette, https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/sort
22:53 < evelyette> Nexxy, thank you, it works
22:53 < evelyette> btw: do you happen to know how to check whether an object is an integer ?
22:56 <@Nexxy> evelyette, you could use parseInt
22:57 < cushman> parseInt(n) === n
22:57 < Benvie> with coercion or without?
22:57 < Benvie> n | 0 === +n
22:58 < cushman> gross
22:58 < MI6> joyent/node: Dean McNamee master * 0c2ae83 : types arrays: remove unnecessary special-casing  Uint32Value() on undefin (+1 more commits) - http://git.io/GlVPyA
22:58 < MI6> joyent/node: Dean McNamee master * 47643d2 : typed arrays: remove unnecessary special-casing  Uint32Value() on undefin - http://git.io/pyzZEg
22:58 < Benvie> insert type check if you don't want coercion
22:59 < evelyette> sorry, but what's coercion ?
22:59 < evelyette> and what does those two solutions actually do ?
22:59 < Benvie> >> 26 + { valueOf: function(){ return 5 } }
22:59 < purr> Benvie: (number) 31
22:59 < Benvie> that's coercion
22:59 <@Nexxy> lol
22:59 < nathan7> >> 26 + "5"
22:59 < purr> nathan7: (string) '265'
22:59 < nathan7> ..damnit
23:00 < Benvie> the thing above coercers both sides
23:00 < Benvie> left side it floors using a bitwise operation
23:00 < nathan7> >> 5 == '5'
23:00 < purr> nathan7: (boolean) true
23:00 < Benvie> rightside it uses ToNumber
23:00 <@Nexxy> evelyette, type coercion is when you change a variable of one data type to another type
23:00 <@Nexxy> Benvie, is just trying to be clever
23:00 < Benvie> >> 5.5 | 0 === +'5'
23:00 < purr> Benvie: (number) 5
23:00 < evelyette> aha ok, it's just called differently :)
23:00 < Benvie> >> (5.5 | 0) === +'5'
23:00 < purr> Benvie: (boolean) true
23:00 <@Nexxy> ya
23:01 < Benvie> you need to compare it against the same input
23:01 < Benvie> it's actually the most efficient way to do it =/
23:01 <@Nexxy> and least obvious
23:01 < evelyette> >> 12 | 0 === +5
23:01 < purr> evelyette: (number) 12
23:01 < evelyette> >> 5 | 0 === +5
23:01 < purr> evelyette: (number) 5
23:01 < evelyette> >> "5" | 0 === +5
23:01 < purr> evelyette: (number) 5
23:01 < Benvie> gotta wrap the bitor because bitwise ops have lower precedence than like everything
23:02 < evelyette> >> parseInt(5) === 5
23:02 < purr> evelyette: (boolean) true
23:02 < evelyette> >> parseInt(5) === "5"
23:02 < purr> evelyette: (boolean) false
23:02 < evelyette> >> parseInt(5) === 5.5
23:02 < purr> evelyette: (boolean) false
23:03 < Benvie> >> parseInt('09') === 9
23:03 < purr> Benvie: (boolean) false
23:03 < evelyette> I don't understand the >> (5.5 | 0) === +'5' ... this way of checking whether this is integer or now
23:03 < evelyette> not
23:04 < Benvie> >> 5.5 | 0
23:04 < purr> Benvie: (number) 5
23:04 < evelyette> what's the '|' ?
23:04 < Benvie> think of (5.5 | 0) as Math.floor(5.5)
23:04 < Benvie> but more efficient
23:04 < Benvie> so if a number is === to itself after being floored/rounded, then it's an integer
23:05 < Benvie> >> Math.floor(5.5) === 5.5
23:05 < purr> Benvie: (boolean) false
23:05 < Benvie> >> Math.floor(5) === 5
23:05 < purr> Benvie: (boolean) true
23:05 < evelyette> why is this more efficient that parseInt =
23:05 < Benvie> parseInt does a lot more stuff to begin with, and in all cases operators are fast than function invocations
23:05 < Benvie> because of this
23:06 <@Nexxy> because you know
23:06 < Benvie> >> parseInt = function(){ return 'lol' }; parseInt(5)
23:06 < purr> Benvie: (string) 'lol'
23:06 <@Nexxy> JS needs to be really tight 
23:06 < cushman> really?
23:06 <@Nexxy> all of those memory constraints
23:06 < cushman> http://jsperf.com/parseint-vs-coercion
23:06 < cushman> am I doing something wrong here
23:07 < Benvie> besides, with parseInt
23:07 < Benvie> the killer is its coercion of octals even in strictmode
23:07 < Benvie> which is a semantic issue outside performance
23:07 < evelyette> what does the '|' character do ?
23:07 < mscdex> OR
23:07 < Benvie> bit_or
23:07 <@Nexxy> OR WHAT, MSCDEX!?!?! OR *WHAT*!?!
23:07 < mscdex> Nexxy, \o/
23:08 <@Nexxy> I don't mean to brag but this nodedublin demo is going to be *amazing*
23:08 < Benvie> the reason parseInt is faster in that speed test is because you're coercing objects
23:08 < mscdex> hidstream?
23:09 < evelyette> >> "5" | 0 === +5
23:09 < purr> evelyette: (number) 5
23:09 <@Nexxy> no lol
23:09 < mscdex> :-D
23:09 <@Nexxy> but maybe I should mention it
23:09 < evelyette> >> ("5" | 0) === +5
23:09 < purr> evelyette: (boolean) true
23:09 < mscdex> yeah!
23:09 < evelyette> >> ("5" | 0) === 5
23:09 < purr> evelyette: (boolean) true
23:09 < cushman> Benvie: that's the point right?
23:09 < evelyette> >> (5.5 | 0) === 5
23:09 < purr> evelyette: (boolean) true
23:09 < cushman> true if object is an int
23:09 < Benvie> no
23:09 < evelyette> >> ("5.5" | 0) === 5
23:09 < purr> evelyette: (boolean) true
23:09 < evelyette> >> ("5.5" | 0) === 5.5
23:09 < purr> evelyette: (boolean) false
23:09 < Benvie> testing if a primitive is, hopefully a number and maybe a string, is the common use case
23:11 < Benvie> also the reason it's slower there is because you coerce only one side on the top and both on the bottom
23:11 < cushman> i thought the question was "how to check whether an object is an integer"
23:12 < cushman> maybe confused
23:12 <@Nexxy> definitely
23:12 < Benvie> perhaps I assumed too much intention from the question
23:12 < evelyette> >> ("5.5" | 0) === -5.5
23:12 < purr> evelyette: (boolean) false
23:13 < Benvie> if you want to be really good at coercion objects to numbers then neither of those is correct
23:13 < evelyette> >> ("-5.5" | 0) === -5.5
23:13 < purr> evelyette: (boolean) false
23:13 < evelyette> >> (-5.5 | 0) === -5.5
23:13 < purr> evelyette: (boolean) false
23:13 < evelyette> so this can only check the positive integers?
23:13 <@Nexxy> evelyette, integers don't have decimals
23:14 < Benvie> if you need to do a signed check you can use >>> instead of |
23:14 < evelyette> >> (-5.5 >>> 0) === -5.5
23:14 < purr> evelyette: (boolean) false
23:14 < evelyette> this should be true: ^
23:14 < evelyette> ?
23:14 < Benvie> it's an integer check
23:15 < Benvie> integer vs. floats
23:15 < evelyette> >> (-5 >>> 0) === -5
23:15 < purr> evelyette: (boolean) false
23:15 < evelyette> >> (-5 | 0) === -5
23:16 < purr> evelyette: (boolean) true
23:16 < Benvie> er woops
23:16 < evelyette> so the >>> only works for positive integers ?
23:16 < Benvie> >>> is unsigned, >> is signed
23:16 < purr> Benvie: SyntaxError: Unexpected identifier
23:17 < Benvie> >> -5 >>> 0
23:17 < purr> Benvie: (number) 4294967291
23:17 < evelyette> >> (-5 >> 0) === -5
23:17 < purr> evelyette: (boolean) true
23:18 < MI6> joyent/node: Nathan Rajlich master * 4b238b4 : Merge remote-tracking branch 'origin/v0.8'  Conflicts: 	AUTHORS 	ChangeLo (+25 more commits) - http://git.io/zOfO6Q
23:18 < evelyette> one more thing: is there a way to prematurely exit from a function .... wheneven I receive a request I process the GET/POST variables and return the result, then I would like to quit the function (at the time of returning the result)
23:18 < jaseemabid> How to convert somevalue to Arguments type? All i can find is this http://bespin.cz/~ondras/html/classv8_1_1Arguments.html
23:18 < evelyette> is that default behaviour or should I do something special ?
23:19 < Benvie> n >> 0 is the same as ToInt32(n) and n >>> 0 is ToUint32(n)
23:19 < evelyette> I return the result with res.render
23:20 < cushman> I'm still not sold on coercion for this
23:20 < Benvie> throw is the only non-local control transfer than passes function boundaries
23:20 < jaseemabid> The Arguments constructor is pretty complex 
23:20 < cushman> we really want to call "5.0" an integer?
23:21 < Benvie> the only way to capture it is as not `5` is to store it in a string
23:21 < evelyette> (1>>>)!==1
23:21 < evelyette> >> (1>>>)!==1
23:21 < purr> evelyette: SyntaxError: Unexpected token )
23:21 < evelyette> >> (1>>>0)!==1
23:21 < purr> evelyette: (boolean) false
23:21 < evelyette> >> (1>>>0)===1
23:21 < purr> evelyette: (boolean) true
23:22 < Benvie> >>> -0 === 0
23:22 < purr> Benvie: (boolean) true
23:22 < Benvie> >>> -0 / 1 === 0 / 1
23:22 < purr> Benvie: (boolean) true
23:22 < Benvie> >>> 1 / -0 === 1 / 0
23:22 < purr> Benvie: (boolean) false
23:24 < evelyette> >> (1>>>0)===-1
23:24 < purr> evelyette: (boolean) false
23:24 < evelyette> >> (1|0)===-1
23:24 < purr> evelyette: (boolean) false
23:24 < evelyette> >> (-1|0)===-1
23:24 < purr> evelyette: (boolean) true
23:24 < evelyette> >> (-1>>>0)===-1
23:24 < purr> evelyette: (boolean) false
23:26 < evelyette> >> (-1>>0)===-1
23:26 < purr> evelyette: (boolean) true
23:29 < evelyette> >> r=[1,2,3,4,5]
23:29 < purr> evelyette: (object) [1, 2, 3, 4, 5]
23:30 < evelyette> >> r
23:30 < purr> evelyette: ReferenceError: r is not defined
23:30 <@Nexxy> evelyette, you know you can do that in node repl too right?
23:30 <@Nexxy> just type `node`
23:31 < evelyette> thanks
23:31 <@Nexxy> :)
23:31  * wookiehangover chortles
23:32 <@Nexxy> wookiehangover, o you
23:33 < wookiehangover> http://i.gif.ly/2364f27e.gif
23:33 <@Nexxy> OH MY GOD THAT'S TERRIFYING
23:34 < wookiehangover> http://b.gif.ly/k/?src=/2364f27e.gif
23:34 < TehShrike> What's up with all this chortling
23:35 <@Nexxy> I'm going to close this terminal now
23:35 <@Nexxy> lol
23:35 < wookiehangover> http://b.gif.ly/62a6fee8.gif
23:35 < TehShrike> So I have to say that I find this to be quite interesting https://github.com/jancborchardt/hackercouch
23:37 < nathan7> That
23:37 < nathan7> should be in..
23:37  * nathan7 puts sunglasses on
23:37 < nathan7> a couchDB
23:37 < nathan7> YEEEAAAH
23:37 < TehShrike> >_<
23:38 < nathan7> Really, couchDB would be grand
23:38 <@Nexxy> BING IS THE WINNER
23:38 <@Nexxy> BING WON
23:38 <@Nexxy> ^ no one, ever
23:39 < TehShrike> I find the idea of using Github explicitly as a social network like that to be interesting
23:39 < TehShrike> https://github.com/search?q=hackercouch+nebraska
23:40 < Aartsie> are there people here who works with the googe maps api ? 
23:40 <@Nexxy> I would have to invest in a slip cover before participating in such a program
23:42 < litenull> :)
23:58 < gabrieluk> how can i check all packages npm have installed in my system? including global ones
--- Log closed Sun Oct 14 00:00:06 2012
