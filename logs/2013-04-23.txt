--- Log opened Tue Apr 23 00:00:11 2013
00:04 < intergalactic> any good recommenations on template engine with express
00:04 < CoverSlide> doT
00:05 < ChrisPartridge> intergalactic: http://garann.github.io/template-chooser/
00:06 < intergalactic> nice
00:07 <@isaacbw> isaacs: why do you have the segv test expecting a SIGBUS signal?
00:07 <@isaacbw> in tap
00:08 < ChrisPartridge> isaacbw: http://i.imgur.com/9TxF8Rf.gif ?
00:08 <@isaacbw> hah
00:33 < Bryan> hello
00:34 < Bryan> is there any good tutorial here for the chat using node.js?
00:34 < Bryan>  is there any good tutorial here for the chat using node.js?
00:35 <@isaacs> isaacbw: huh?
00:35 <@isaacs> isaacbw: no idea.
00:35 <@isaacs> isaacbw: i haven't even seen those tests in forever.
00:42 < unxmaal> howdy all
00:42 < ChrisPartridge> yo
00:42 < unxmaal> anyone have a favorite node.js + mongodb + (maybe express or whatever) tutorial/guide that's reasonably current?
00:43 < MI6> joyent/node: isaacs v0.10 * ff99cd5 : uv:+Upgrade+to+0.10.5 - http://git.io/7kImDg
00:44 < MI6> joyent/libuv: isaacs v0.10 * a0cb926 : Now+working+on+v0.10.6 (+1 more commits) - http://git.io/dfKSqQ
00:44 < MI6> joyent/libuv: isaacs created tag v0.10.5 - http://git.io/OxzKJg
00:49 < bir_m> slm
00:55 < DaMorpheuS> question I try to get my http server secure i create a ssl key pair but when i tried to start the https server i got the following error : PEM routines:PEM_read_bio:no start line
00:56 < DaMorpheuS> any clues
00:56 < DaMorpheuS> there was something on pem files but it said if your files aren't binary they are allready in pem format
01:02 < garrettwilkin> love the @izs gif 
01:02 < garrettwilkin> so i'm a total noob, but i have johnny five & socket.io working, and TCP streams
01:03 < garrettwilkin> and i want to, create a button when the web page gets some socket.io event
01:03 < garrettwilkin> so there's a lot of ways to insert DOM elements right?
01:03 < garrettwilkin> should i just use vanilla javascript?
01:03 < garrettwilkin> or… try something else?
01:03 < Ardsheal> Hi I have a question about node.js. I am able to connect to my MUD client on multiple computers. But on one specific computer it will connect to local host and just hang.
01:04 < niggler> garrettwilkin http://vanilla-js.com/
01:04 < Ardsheal> I have the latest java installed, and I am using a proxy to connect to said client.
01:04 < niggler> but in all seriousness your question sounds like something for ##javascript
01:05 < Ardsheal> Is there an IRC for that, that you could direct me to?
01:05 < MI6> joyent/node: isaacs created branch v0.10.5-release - http://git.io/g5SLAA
01:05 <@isaacbw> and the answer is: jquery
01:05 < garrettwilkin> didn't know there was a javascript room
01:05 < niggler> its ##javascript, not #javascript garrettwilkin 
01:05 <@isaacbw> Ardsheal: #nodemudproblems
01:06 <@isaacbw> lol niggler, I love that
01:06 < garrettwilkin> niggler: do you know how to do it?
01:06 < DaMorpheuS> guys anyne knows something about https and ssl?
01:07 < niggler> dom manipulation is straightforward 
01:07 < niggler> but lets talk about it in ##javascript garrettwilkin 
01:10 < DaMorpheuS> got troubles with my keys any help?
01:16 < garrettwilkin> niggler: too bad i can figure out how to register my Nick
01:17 < niggler> garrettwilkin oh just register by messaging nickserv
01:17 < garrettwilkin> right yea, tried that 
01:17 < niggler> garrettwilkin: /msg nickserv register
01:17 < garrettwilkin> still says I can't post in ##javascript
01:17 < niggler> did you confirm via email?
01:17 < niggler> *activate or whatever
01:21 < ericelliott> are the results of npm shrinkwrap non-deterministic?
01:21 < ericelliott> seems like it won't hold still for 2 minutes. =)
01:23 < master5o1|work> wrapstra
01:23 < master5o1|work> wrapstrap
01:27 < Raynos> How are you even supposed to start debugging ( https://gist.github.com/Raynos/da85cf025e2578e629f8 ? )
01:28 <@isaacbw> looks like it was expecting an rsa key
01:32 < s3shs> I have a bind question
01:32 < s3shs> I have a generic object that contains object and a function.
01:32 < s3shs> And for some reason bind is not working.
01:32 < s3shs> The function is never getting called.
01:33 < s3shs> Anybody seen this?
01:35 <@isaacbw> substack: did you know that tape's travis build is failing?
01:36 < ljharb> tape is broken on node 0.10
01:36 <@isaacbw> ah
01:36 < ljharb> i've been trying to figure it out, but it's doing some fancy stuff with events, so i'm not sure how to fix it
01:36 < ljharb> i've got a bunch of repos that will start passing if tape gets fixed for node 0.10 tho, so, please take a look :-)
01:37 < Collin_> Does anyone know if I'll receive an 'end' event on an incoming HTTP request if the connection is dropped?
01:37 < Collin_> I'm confused about the difference between 'end' and 'close'
01:41 < substack> isaacbw: known issue
01:41 < DaMorpheuS> anyone knows how to create a https server in nodejs
01:41 < substack> please send pull requests as I'm exceedingly busy
01:41 < DaMorpheuS> i have a sample code it runs but it can retrieve any info on the client
01:42 < DaMorpheuS> http://jsfiddle.net/DaMorpheuS/YYq54/
01:43 < mscdex> Collin_: 'end' may not necessarily be emitted, 'close' will though
01:43 < Collin_> Thank you
01:44 < mscdex> Collin_: especially in the case of an unexpected disconnect
01:44 < Collin_> Thanks
01:44 < DaMorpheuS> anyone?
01:46 < mscdex> DaMorpheuS: looks right to me, are you running it as root?
01:46 < DaMorpheuS> yup
01:46 < mscdex> what happens when you hit that server on that port?
01:46 < DaMorpheuS> well that's the point the connection times out
01:47 < DaMorpheuS> at first i had a problem with the keys but i remade them and the server started perfectly but no response
01:47 < mscdex> and you are using https:// ?
01:47 < DaMorpheuS> :) ofcourse
01:48 < mscdex> dunno then, i don't see anything wrong
01:48 < ericelliott> DaMorpheus: make sure you're connecting to the right port, and that your certificate / key is valid
01:48 < DaMorpheuS> mscdex: if you run it localy does it work at yours
01:48 < mscdex> DaMorpheuS: i don't know, i don't have your keys ;-)
01:48 < ericelliott> DaMorpheuS: and, you might want to move your errorhandler to the tail of your app.use stack. =)
01:49 < ericelliott> otherwise, it won't catch many errors. ;)
01:49 < ChrisPartridge> sounds like an issue with the cert/key consdering the error posted earlier
01:49 < DaMorpheuS> ChrisPartridge: that error is gone remade the keys
01:50 < DaMorpheuS> mscdex: can i send you the keys somewhere for test
01:50 < ChrisPartridge> :|
01:50 < jaxbot> hey um, i really hate to be the scumbag who joins a channel to ask a question but, if anyone has an idea about why neither of these will fire, lmk. http://pastebin.com/t6ZUKLv1
01:51 < ChrisPartridge> jaxbot: not much context in the code you pasted
01:51 < freon_> damorph: code works on my machine (tho I have to click through SSL warning)
01:51 < DaMorpheuS> missing the rest :)
01:51 < ericelliott> jaxbot: You scum!
01:52 < jaxbot> not much context because there is none
01:52 < DaMorpheuS> freon_: so you just put in some keys and run it and go?
01:52 < jaxbot> its a simple http.createServer, i post data from my javascript frontend, and the events never fire, but the request is received
01:52 < freon_> yeah thats right, all I changed was the opt definition
01:53 < DaMorpheuS> freon_: what did you change?
01:53 < DaMorpheuS> or only the key names
01:53 < freon_> I supplied my own opt.
01:53 < DaMorpheuS> if so how did you create the keys
01:53 < freon_> actually, I have .key and .crt files, rather than 2 .pem files ...
01:54 < DaMorpheuS> i had that at first but then i got the error that the server didn't wanted to run crashed on the crypto.js while loading in the keys
01:54 < DaMorpheuS> freon_ can you tell me how to create the keys and how to style the opt then?
01:55 < DaMorpheuS> if it's not to much ofcourse ;)
01:55 < freon_> sorry I can't remember, dont have the notes handy, just followed instructions from the cert provider
01:55 < DaMorpheuS> ah they are official cert files not self baked
01:56 < DaMorpheuS> damned i hate those ssl keys so much viarity in them 
01:57 < DaMorpheuS> can you show me your opt because i have still those key and crt
01:57 < DaMorpheuS> without the phrase ofcourse ;)
02:07 < Foxhoundz> node.js is awfully slow
02:08 < Foxhoundz> God forbid if this thing has to scale 
02:08 < mmalecki> it's not.
02:08 < Foxhoundz> or handle big data
02:08 <@isaacbw> the cool thing is it only does what you tell it to
02:28 < jayk> Hunh.  I was pushing 20Mbit through a single node process on my laptop yesterday with hundreds of concurrent connections.  Didn't seem slow to me.
02:35 < Incip> Silly newbie question: How would I import the functions of a module to the global scope?  I'm sleep deprived and if I think for a few minutes more I can probably get it, but!
02:37 < Cainus> probably some forEach() shenanigans
02:37 < Cainus> namespacing is nice though ;)
02:39 < Incip> Yeah I'm just doing something silly, I'm following along with Eloquent Javascript and wanted to execute the tutorials with node, so I've been making a module of all the common functions that are used again and again and I wanted to just import that blah blah
02:56 < d2dchat> Is it a good idea to create a stream writer to take bulk input from a file and bulk import that data into couchdb? (it requires sending bulk HTTP requests to couch)
02:57 <@mbalho> couch _bulk_docs buffers writes so whatever you give it it will wait until you finish before it parses/saves anything
02:57 <@mbalho> so you might run out of ram if you do a huge upload
02:58 < d2dchat> mbalho: ya that makes sense.. but maybe I could control my custom writer somehow to make it pause if it buffers too much or something?
02:59 <@mbalho> d2dchat: if you run into problems you can always just split up your upload into multiple http posts
02:59 <@mbalho> d2dchat: but you should give it a try with your data and see what happens
03:00 < d2dchat> mbalho: well my question was more so, is it a good idea to create a custom write stream that buffers 1000 or 100 docs at a time and then "flushes" them using a bulk save?
03:01 < d2dchat> mbalho: my experience with streams is limited
03:01 < master5o1|work> ./.
03:04 <@mbalho> d2dchat: what i would do is create a readable stream of JSON objects in the format that couch wants and pipe it into a single http POST request to couch
03:04 <@mbalho> d2dchat: i wrote this a while back, it does similar stuff https://gist.github.com/maxogden/1609973
03:05 < d2dchat> mbalho: even if I have 300,000 docs to insert?
03:05 < d2dchat> mbalho: one http request with 300,000 docs seems huge
03:05 <@mbalho> d2dchat: you should try first and optimize later :)
03:05 < d2dchat> mbalho: :)
03:05 <@mbalho> d2dchat: ive done bigger posts to couch than that
03:05 < d2dchat> mbalho: well then! I will give it a try!
03:05 <@mbalho> d2dchat: if you have a validate_doc_update function in couch it will take a lot longer than if you are posting to a DB with no validate_doc_update BTW
03:06 < d2dchat> mbalho: ya I have some minor stuff in there.. it slows down a bit, but it's still pretty quick!
03:07 <@mbalho> d2dchat: i saw a 10x slowdown in my tests, ymmv
03:07 < d2dchat> mbalho: I have to do a fetch as well.. should I do a 300,000 doc fetch first?
03:07 <@mbalho> d2dchat: are you transforming all the docs ina  db?
03:07 < d2dchat> not all, most though
03:08 < d2dchat> mbalho: ^
03:08 <@mbalho> d2dchat: you should just use that gist then
03:08 <@mbalho> d2dchat: you should definitely not create 300000 js objects in node, that will probably crash it
03:08 < d2dchat> mbalho: haha
03:09 < d2dchat> mbalho: so fetches should be one @ a time?
03:09 <@mbalho> d2dchat: no you can do 1 query but you would parse them as they arrive
03:09 <@mbalho> d2dchat: using a streaming json parser
03:10 < d2dchat> mbalho: have any examples of how I might use this with something like https://github.com/wdavidw/node-csv-parser ?
03:12 <@mbalho> d2dchat: not off the top of my head but it should work
03:13 < d2dchat> mbalho: never used transfuse or JSONStream before.. checking em out
03:29 < safani> not the most talkative bunch
03:30 <@mbalho> welcome to irc
03:49 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:12  * rcombs brutally murders restler, replaces with request
04:15  * master5o1|work brutally murders rcombs, replaces with a puppet covering his hand.
04:17 < ChrisPartridge> so much brutality
04:18 < jimmybak_> Greetings. Does anyone here use Sequelize on Heroku? I'm wondering how to execute db migrations as part of a deploy.
04:20 < ChrisPartridge> jimmybak_: perhaps with install/postinstall ?
04:20 < ChrisPartridge> (i don't use sequelize)
04:21 < jimmybak_> I'm betting it's a manual process like "heroku run sequelize -m" but just wondering.
04:22 < ChrisPartridge> jimmybak_: setting up a postinstall script in your package.json should work, might need to reference the seqeulize bin file directly in node_modules though, otherwise it *should* work
04:27 < gkatsev> is there something like request except for websocket connections? Or does request work with ws:// as well?
04:28 < gkatsev> hm... actually, I may be over and under thinking what I need
04:29 < jimmybaker> ChrisPartridge: Thanks. I'm not familiar with postinstall in package.json. reading up.
04:29 < jimmybaker> All I'm using now is scripts, dependencies and devDeps. I bet there are a lot more goodies that package.json provides. :)
05:48 < Darkboy> SOMEONE HERE?
05:48 < ChrisPartridge> nope
06:04 < SrPx> I've just told a friend to install node.js on windows. He had to call "npm install lodash". It installed successfully. Yet he gets an error that lodash was not found. Wtf?
06:05 < tuhoojabotti> Is it supposed to be installed globally? Did he install it in the right place?
06:07 < ChrisPartridge> SrPx: works fine here
06:07 < SrPx> tuhoojabotti: what do you mean? He installed node.js then ran "npm install lodash". That's all I told him.
06:08 < howdynihao> -g is global
06:08 < purr> howdynihao: Home - ISGLOBAL <http://www.isglobal.org/>
06:10 < ChrisPartridge> SrPx: and how is he requiring it?
06:10 < SrPx> ChrisPartridge: require("lodash")
06:26 < shesek> SrPx, without the -g flag, packages are installed locally
06:26 < shesek> he most require() it from the directory that contains the node_modules with that package, or one of its sub-directories
06:26 < shesek> or sub-sub-directories, etc
06:27 < SrPx> wait so
06:27 < SrPx> shesek: "npm install -g lodash" will solve the issue?
06:28 < shesek> well, the better solution would be to know how node packages works, installing them locally and properly using them
06:28 < shesek> in very few cases one should use globally installed packages, its almost always a better practice to add it as a dependency of the app
06:29 < shesek> but yes, installing it globally will make require()ing it from anywhere work
06:39 < mfn> I installed jslint locally. To use it conveniently I found jslint-reporter. But should I install the reporter local or global? I get confused as to when global install is OK and when not. From grunt I read you install grunt locally and grunt-cli globally. Is it the same with jslint-reporter?
07:02 < kamis> I want to start using node and do some expriments with it. I will used virtualbox, but I don't if I chood use the regular Ubuntu or Ubuntu Server. What do you think is most suited and why?
07:16 < zs> i fork a  process and want to  listen exit of the main process ? 
07:17 < zs> how do?
07:26 < kornnflake> can you guy recommend me a maps api? google, bing, nokia, openstreetmap?
07:26 < kornnflake> should be cheap :D
07:27 < kornnflake> but openstreetmap kinda looks ugly :P
07:32 < donCams> where do i find the builderror.log?
07:40 < [AD]Turbo> ciao
07:57 < frankblizzard> whats the best way to cut/limit an array to only its first 10 elements?
07:57 < wao> kornnflake: you can customize layers
08:01 < sambarino> kamis: if you are using it for dev i would use regular ubuntu, but if you want to use it as a webserver then... probably ubuntu server is better ;)
08:17 < nikkubhai> Here in  https://github.com/airbnb/javascript#strings , they suggest using single quotes instead of double. why?
08:18 < sambarino> easier to read? 
08:18 < gildean> easier to type?
08:18 < sambarino> " looks like ''
08:19 < gildean> also you can do literal json-strings, like: '{ "something": "something" }'
08:19 < gildean> without escaping
08:20 < nikkubhai> And here , someone suggests using double quotes : http://stackoverflow.com/a/4612914
08:20 < jesusabdullah> I mean
08:20 < jesusabdullah> it's a matter of taste, it really doesn't matter but it's nice to be consistent
08:21 < nikkubhai> So, in case of json strings use double quotes otherwise single is fine
08:22 < gildean> nikkubhai: the properties inside a json-string must be doublequoted, but not the string itself, see my example above
08:22 < nikkubhai> gildean: yes
08:22 < gildean> although you shouldn try to write json by hand, just use JSON.stringify
08:22 < jesusabdullah> I write .json files by hand sometimes
08:22 < jesusabdullah> as configs
08:23 < nikkubhai> There is exactly the same comment on that answer
08:23 < gildean> jesusabdullah: ok, yeah i do that too
08:23 < gildean> jesusabdullah: lately i've been doing configs in a module, so you can just require('./config')
08:24 < gildean> the module being just a simple object like: module.exports = { somekey: 'someval' };
08:25 < jesusabdullah> gildean: I require('./config.json')
08:26 < jesusabdullah> gildean: where config.json is just { "somekey": "someval" }
08:26 < jesusabdullah> gildean: once you could require json files it was game over for me
08:26 < mikeyMike> hi, can i check somehow what are the permission to certain file from the Node.js level?
08:26 < jesusabdullah> yes
08:26 < gildean> jesusabdullah: that is prettier, true
08:26 < mikeyMike> how?
08:26 < jesusabdullah> fs.stat probably
08:26 < mikeyMike> which of those are permissions?
08:26 < jesusabdullah> ctrl-f for 'perm' in the fs docs
08:27 < mikeyMike> jesusabdullah: nothin' found
08:28 < guidocalvano> hey everyone
08:28 < mikeyMike> hey
08:28 < guidocalvano> quick question
08:28 < jesusabdullah> mikeyMike: http://nodejs.org/docs/latest/api/fs.html#fs_class_fs_stats
08:28 < jesusabdullah> mikeyMike: right there in that blob is the mode
08:28 < jesusabdullah> mikeyMike: now you have to parse the number down, do some googling
08:28 < guidocalvano> the lead dev at our company is interested in node… and I would like my company to use it… needless to say...
08:28 < guidocalvano> so he is trying to install it on his linux machine
08:29 < jesusabdullah> guidocalvano: download sauce, ./configure && make && sudo make install
08:29 < jesusabdullah> guidocalvano: most straightforward for linux imo
08:29 < guidocalvano> but… he is wondering… how if you have a live node server, do you do update it
08:29 < jesusabdullah> download new sauce ./configure && make && sudo make install ? :v
08:30 < jesusabdullah> someone makes a PPA for ubuntu also
08:30 < guidocalvano> i.e. suppose you have your business processes running on node, and you want to update it with minimal down time? And you need to update because of security?
08:30 < jesusabdullah> I mean
08:31 < jesusabdullah> kill the process and restart it
08:31 < gildean> on ubuntu: sudo add-apt-repository ppa:chris-lea/node.js
08:31 < gildean> then just sudo apt-get update && sudo apt-get install nodejs
08:31 < jesusabdullah> whole thing should be in memory I bet you can make install new node without killing old one
08:31 < jesusabdullah> there are also version managers like python's virtualenv but there are a few of them and I don't remember which is good
08:32 < jesusabdullah> isaac has a reasonably good one last I checked
08:32 < gildean> tj makes n
08:32 < gildean> then there's nvm
08:32 < guidocalvano> gildean: so if I do that I should still kill and restart like jesusabdullah said?
08:32 < gildean> guidocalvano: yes
08:33 < gildean> guidocalvano: you can't update a running process in memory
08:33 < jesusabdullah> n had a serious security vulnerability, I don't teej uses it
08:33 < jesusabdullah> nvm is alright from what I've seen
08:33 < gildean> jesusabdullah: yeah, n did something like rm -rf /usr/bin
08:33 < guidocalvano> so while node is running, I can get the update from chris lea's repo, then I kill node and restart
08:34 < gildean> guidocalvano: yes
08:35 < gildean> guidocalvano: there are also mechanisms to restart a node app without downtime
08:36 < guidocalvano> hmmmm… but don't you run the risk that some javascript files get updated to the new version of node, while the old version is still running, those files get required, and then stuff breaks, corrupting data?
08:36 < guidocalvano> gildean: what mechanisms are those?
08:37 < gildean> guidocalvano: something like this for example: https://github.com/LearnBoost/up
08:38 < gildean> guidocalvano: also, you should be aware of which core modules you're using and their current status, if you use modules that are marked as stable, then there shouldn't be any risks with updating
08:46 < radiodario> morning
08:46 < guidocalvano> jesusabdullah: gildean huge thanks for the help
08:47 < guidocalvano> I think he is slowly turing (:
08:51 < gildean> guidocalvano: np
08:52 < guidocalvano> fingers crossed we will be working on node soon
09:33 < donCams> should i be worried? (node-gyp rebuild 2> builderror.log) || (exit 0)
09:34 < wnpers> hi
09:44 < Haeresis> Hi everybody
09:45 < pachet> hi
09:47 < Haeresis> How many same connection with same ip are authorized to Freenode ?
09:48 < Haeresis> I am testing node-irc in several windows of my browser
09:48 < deepy> iirc 5 is a magic number
09:48 < deepy> but don't quote me on that
09:48 < Haeresis> Thx
09:48 < dmcaodha> Has anybody got johnny-five working on a raspberry pi (talking to an arduino) ?
09:49 < deepy> If you're testing I'd set up a local ircd
09:50 < Haeresis> It's just for one test, and 5 it's any for this
09:50 < Haeresis> But I will think about that deepy , thx
10:17 < E_mE> If I have a start.js file, which require's mymod.js. mymod provides fro example "MyMod()" object as the module.exports. Is it possible from the start.js to give MyMod a callback to be executed? Because every time I give it a callback, it's never called
10:21 < rentiio> What is this channel about?
10:22 < r04r> rendar: Node.JS
10:22 < bnoordhuis> rentiio: rational constructionism
10:23 < deoxxa> rentiio: listening to raps and scripting all the jobs
10:23 < bnoordhuis> we don't shy away from the empirical version every now and then
10:23 < rentiio> bnoordhuis: Some variety of post-structuralism?
10:24 < bnoordhuis> rentiio: yes. but we have very broad interests
10:24 < bnoordhuis> from time to time, we discuss server-side javascript, for example
10:24 < bnoordhuis> a very pedestrian thing, of course
10:25 < deoxxa> only in between heated debates about editors and whether mongodb is the right choice for your highly-scalable personal blogging platform
10:25 < rentiio> bnoordhuis: Fair enough.  I wondered about writing AJAX CGI applications using C once.  I wrote a document object model implementation and things... then I could not be bothered installing Apache to test it.
10:25 < rentiio> node.js is some thing in particular, right?
10:26 < bnoordhuis> i think it's fair to say that node.js is a thing, maybe even das ding an sich
10:52 < SrPx> Sorry I've been disconnected. Can I make browserify create an HTML instead of a JS?
10:59 < squeaky_pl> Hello. Is this right room to ask libuv related questions?
11:01 < squeaky_pl> oh i guess not. I found the right room
11:05 < E_mE> If I have a start.js file, which require's mymod.js. mymod provides fro example "MyMod()" object as the module.exports. Is it possible from the start.js to give MyMod a callback to be executed? Because every time I give it a callback, it's never called
11:09 < shesek> E_mE, there's no reason why this shouldn't work. you probably doing something else wrong
11:10 < shesek> can you show us the code?
11:24 < remysharp> Does anyone know if there are static binaries for node (stable) around? Or directions on building?
11:34 < gildean> remysharp: http://nodejs.org/dist/v0.10.4/
11:35 < gildean> remysharp: you could've looked at the download section yourself, btw.
11:36 < E_mE> shesek: sure ill give you examples ... you still about?
11:37 < remysharp> gildean: sod, sorry - so these aren't installers. Sorry, last I thought about static binaries was back in 0.6.x (I think).
11:38 < gildean> remysharp: np
11:47 < mikeyMike> when i'm doing file opening and writing without http.createServer(function (request, response) thing and executing script from cmd then the file is created and script works fine. When i'm trying to execute that by the browser there is an error 500 and error like "binding.close(fd, makeCallback(callback));           ^ TypeError: Bad argument" and file isn't created nor edited.
11:48 < mikeyMike> how to make script executable from browsers? system is Windows 2008 Server
11:54 < lowtechr_> @mikeyMike: you mean something like webmake?
11:54 < lowtechr_> https://github.com/medikoo/modules-webmake
11:56 < petecoop> or browserify
11:57 < lowtechr_> yep
11:58 < mikeyMike> i don't know browserigy or webmake...
11:58 < mikeyMike> fy*
11:58 < mikeyMike> i'll check
12:08 < mikeyMike> what does browserify help me with?
12:16 < gildean> mikeyMike: you mean something like this: http://pasted.herokuapp.com/guest/9229f7d106.js
12:18 < mikeyMike> i'll test
12:20 < mikeyMike> it works
12:26 < mikeyMike> i made that code
12:26 < mikeyMike> http://pasted.herokuapp.com/guest/eb9b2aab99.js
12:26 < mikeyMike> is it proper or should i repair it somehow?
12:26 < mikeyMike> i wanna get possibility to make file on server and download it
12:31 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:38 < gildean> mikeyMike: what's the fs.close call for?
12:38 < mikeyMike> because we allways have to close the file  to work it proper, right?
12:39 < mikeyMike> the callback is empty there
12:46 < mikeyMike> gildean: i don't get it why your script works and mine not.
12:46 < mikeyMike> :(
12:50 < korilo> hello guys
12:56 < zot> in node v0.8.2x, i want to have a (libuv) blocking event; doing stdin.on('data', …) allows the event loop to immediately exit.  is there a standard way?
12:57 < gildean> mikeyMike: i'm not quite sure what you want to do, you know you don't have to create a file just to append data and echo it back?
12:58 < gildean> mikeyMike: anyways, there were clear execution order errors in your code, here's a corrected version: http://pasted.herokuapp.com/guest/7f4da5f28a.js
12:58 < mikeyMike> i wanna make possible to download file from server
12:58 < mikeyMike> why or 9000?
12:59 < gildean> because i wanted to test it
13:00 < mikeyMike> and it works?
13:01 < gildean> well it takes the data and saves it into a file, and responds without errors
13:01 < gildean> didn't test it beyonds that
13:09 < mikeyMike> are you using unix-like os?
13:11 < gildean> mikeyMike: yes, on ubuntu
13:11 < mikeyMike> eh
13:12 < mikeyMike> i have to use shitty windows:/
13:12 < gildean> mikeyMike: can you tell me what is it that you're exactly trying to accomplish?
13:12 < mikeyMike> i wanna click on link
13:13 < mikeyMike> in Firefox
13:13 < mikeyMike> or Chrome or something else
13:13 < mikeyMike> and underneath i wanna put some data by POST method
13:13 < zot> bah.  figured out that i need .resume() call.
13:13 < mikeyMike> i wanna do the file on server based on variables from POST data
13:14 < mikeyMike> and wanna see window with
13:14 < mikeyMike> save as
13:14 < mikeyMike> with file created on node.js side
13:14 < mikeyMike> do you understand me?
13:15 < gildean> mikeyMike: sure, the pastebin you just used is almost like that, except that it saves the data into db, but that's easy to change
13:15 < mikeyMike> db? how ? where?
13:15 < gildean> mikeyMike: so go check out the source here: https://github.com/gildean/pasted
13:16 < gildean> the db part is in the plugins, so basically if you use that as an example but instead write files and not to db, it's pretty much all ready there
13:16 < gildean> this is built with express, it's so much faster and easier to dev with
13:18 < gildean> mikeyMike: the auth part is not done, but you can leave it out or finish it, i didn't write it fully because it would require an email-verification or something
13:18 < gildean> i'll finish it at some point when i decide how it should be done
13:18 < mikeyMike> which file?
13:18 < gildean> auth.js
13:18 < gildean> and also the commented out function in mongo.js
13:19 < gildean> and the commented out routes in app.js
13:20 < mikeyMike> i saw express framework today but not exactly sure what does it solve...
13:22 < gildean> mikeyMike: it should be pretty obvious if you read the source to the app i gave the link to
13:30 < mikeyMike> ok
13:30 < mikeyMike> what privileges does the folder should have
13:30 < mikeyMike> to make possible
13:30 < mikeyMike> to everyone
13:31 < mikeyMike> make files and possible them to download?
13:31 < gildean> mikeyMike: only the process needs to be able to read and write, so the dir should be owned by the user starting the process
13:32 < mikeyMike> so
13:32 < mikeyMike> i have to do
13:32 < mikeyMike> chown
13:32 < mikeyMike> for current user?
13:32 < gildean> just create a new dir for the files with the user that will start the server
13:32 < gildean> and keep it separate from everything else
14:01 < g0z> hi for a typical usage scenario is ./configure && make sufficient for a source build? (the binaries don't work on this less than cutting edge box)
14:31 < bingomanatee> Is there such a thing as a directory diff in node/modules -- compare two directories and see if one of them has new / different files/dirs?
14:44 < dorner> hi everyone, i'm trying to 'clean up' some objects and execute a callback in the javascript code from a c++ binding.. however, one of the areas im doing this, is in a signal handler (from a SIGCHLD).. this is causing my code to segv
14:45 < dorner> any docs/idea on how to call js code from the handler? or a better way to do this.. i cant expect to set a 'flag' and rely on polling to trigger it
14:45 < MI6> joyent/node: Miroslav+Bajtoš v0.10 * 0602fbb : build:+added+support+for+Visual+Studio+2012 - http://git.io/agh8zQ
14:46 < dorner> TryCatch and this: pi->cb->Call(Context::GetCurrent()->Global(), 1, argv); , both break the code when run from a signal handler
14:47 < jeffsmykil> first time using node, can someone explain to me why I am getting fileTypeArray is not defined: https://gist.github.com/smykes/22c408d8753626abe4f6
14:48 < r04r> jeffsmykil: typo
14:48 < r04r> jeffsmykil: filteTypeArray
14:48 < jeffsmykil> lol I immediately thought it was something weird with node, not a dumb javascript error :)
14:49 < jeffsmykil> ah still not defined
14:49 < happyface> I'm getting memory leaks but memwatch's 'leak' event is never triggered. How can I diagnose this? 
14:50 < r04r> jeffsmykil: you have fileTypeArray typo'd twice, and you never defined handlebarsFiles
14:50 < r04r> jeffsmykil you probably want a `handlebarsFiles = []` somewhere before you start pushing to it
14:50 < tyebud> Hey node, quick question regarding setting variables with functions using callbacks.  I'm trying to create a function that takes a search param and returns the twitter search results using the request package.  I'm fairly certain I'm misunderstanding how to use a function with a callback, so any help is appreciated.  https://gist.github.com/5444143
14:51 < jeffsmykil> r04r: feel free to smack me repeatedly
14:52 < r04r> tyebud: the idea of callbacks is that the function returns immediately, and your code can keep doing other stuff while the IO processes in the background. So you
14:52 < r04r> 'd want to define your own callback
14:53 < draginx> When is it suitable to write extensions for Node in C++? It seems that with the overhead it doesn't really add any benefit =x
14:53 < r04r> tyebud: http://pastebin.com/tLMQFvTE
14:53 < tyebud> r04r: Ok, that's what I was suspecting.  Something like this? https://gist.github.com/5444184
14:53 < tyebud> Oh perfect
14:54 < tyebud> r04r: Thanks so much!
14:54 < r04r> tyebud good luck!
14:54 < tyebud> Then I'd call it with twitter('node.js', function(body) { console.log(body) } ?
14:54 < r04r> tyebud yup
14:55 < tyebud> Perfect.  Thanks a ton
14:56 < tyebud> Would callback.call be something to look in to for this?
14:56 < r04r> tyebud: if you want to change the value of this, or pass a dynamic amount of arguments maybe
14:57 < tyebud> Ah ok
14:57 < tyebud> But something vanilla like this, it's better to stick to the basic pattern
14:59 <@isaacbw> draginx: sometimes for speed, sometimes to interface with native libraries
15:01 < draginx> isaacbw: i see
15:03 < fuz> heyo, anyone else replicating the npm couchdb repo?  how big is your registry.couch file?
15:04 < merpnderp> does nodemon work with cluster?
15:06 < bingomanatee> ping isaacs - ever try to get node-tap in the TAP Producers list in the wiki? http://testanything.org/wiki/index.php/TAP_Producers
15:09 < snuggl> hello, i have question about npm, can i have a per-project config file? the docs say to install globally if its a command line util but that sounds like versioning hell
15:09 <@isaacbw> it still has a per-project config file
15:10 < snuggl> isaacbw: really? just place it in cwd?
15:10 <@isaacbw> in what?
15:10 < snuggl> current working directory
15:11 < snuggl> the project root
15:11 <@isaacbw> yea. You're talking about package.json right?
15:11 < snuggl> maybe! i need a different prefix/binroot for different projects
15:12 < deoxxa> snuggl: i have `./node_modules/.bin' in my $PATH
15:12 < yordan> hello, can you please help me on this one: http://pastebin.ca/2364546
15:12 <@isaacbw> then you probably shouldn't use npm install -g 
15:12 < snuggl> deoxxa: yes i have that too but would like to install them to correct folder proper
15:12 < yordan> im using the request library to fetch a url, but the contents are encoded with windows-1251
15:12 < snuggl> isaacbw: so its a no?
15:12 <@isaacbw> ignore me
15:13 < yordan> some1? :)
15:14 <@isaacbw> snuggl: look at 'npm help folders'
15:14 < yordan> the problem is what the request gives me back is a string of replaced characters like this: � ������
15:14 < bingomanatee> snuggl: in theory you could have sub- node_modules and sub- package.json's and have a start script that executes those sub- package.jsons. I think personally it would drive me nutty to have components that have their own versions but is it theoretically possible. 
15:15 < snuggl> bingomanatee: its madness not to do version freeze on deployed apps though
15:15 < snuggl> its not really a problem, just an annoyance
15:15 < bingomanatee> well, your root package.json can verson freeze to a specific release. 
15:16 < snuggl> bingomanatee: and install global?
15:16 < bingomanatee> yep
15:16 < bingomanatee> Good test coverage can allow you to roll forward with package releases...
15:16 < snuggl> bingomanatee: but not with retaining the names of the links i guess
15:16 < bingomanatee> but the root package.json can still freeze your packages to a specific release. 
15:17 < snuggl> thats not part of my problem
15:17 < snuggl> i want npm to install bin links to another dir then .bin
15:17 < bingomanatee> ah. That I'm not up to speed with. 
15:18 < snuggl> i can set the prefix env variable, but that has me editing another generated script, with a project-local config file i could have had that in revision control too
15:18 < snuggl> ah well =)
15:18 < bingomanatee> I do believe that if you have [package_root]/node_modules
15:18 < snuggl> ty for the help!
15:18 < jeffsmykil> So I know how to run handlebars from the CLI you do handlebars <path> -f <path>, how do I run it from inside a program,?
15:18 < bingomanatee> you could have [package_root]/foo/[node_modules] with its own .bin
15:19 < snuggl> bingomanatee: hm, i can create the .bin myself and symlink it to the correct place before running npm
15:19 < bingomanatee> and then [package_root]/foo/file.js would use foo's .bin
15:19 < bingomanatee> rather, [package_root]/foo/node_modules/.bin
15:19 < snuggl> bingomanatee: it would still have me add to $PATH
15:20 < snuggl> which i want to avoid, more then the per-project bin directory i already have
15:20 < bingomanatee> no, as long as [package_root]/foo/node_modules intercepts links its .bin would be the one used. 
15:20 < bingomanatee> Node by default delegates to finding the highest level node_module subdirectory relative to a given file
15:21 < bingomanatee> (sub-sibling-directory)
15:21 < snuggl> bingomanatee: well in practice it worked fine
15:21 < snuggl> as i just tested it =)(
15:25 < Technodrome> stupid js question, whats the point of making a function this.somefunctionname= function 
15:26 < Technodrome> i don't see the point of it 
15:26 < jocafa> Technodrome:  i need more context to answer your question
15:26 < geNAZt> _
15:27 < geNAZt> hiho
15:27 < FPSJosh01> heyo
15:27 < jocafa> word
15:27 < leonvv> Technodrome: you should look into object oriented programming
15:27 < geNAZt> does someone use a asset manager for nodejs ?
15:27 < Technodrome> leonvv: I've been a java dev and c# dev for years 
15:27 < Technodrome> http://pastebin.ca/2364559
15:28 < Technodrome> just in that example i don't see how its useful 
15:28 < deoxxa> lol sally rally
15:28 < jayk> Technodrome: Don't worry, we won't hold that against you. 
15:28 < leonvv> It looks like that is just an example
15:29 < Technodrome> but i will admit, JS is still making my mind numb
15:29 < jayk> Technodrome: What will give you the most useful information is investigating 'first class functions' 
15:29 <@isaacbw> Technodrome: it would be cleaner to write this.changeName = function(..) {...} 
15:29 < jocafa> and not a very good example
15:29 < leonvv> Oop can be extremely useful in some cases
15:29 < jocafa> capitalize that constructor, yo
15:29 < deoxxa> Technodrome: that example is terrible
15:30 < leonvv> deoxxa is right ^^
15:30 < geNAZt> y u no using getter or setter :D
15:30 < jayk> Java is just about the opposite side of the spectrum on that.  Everything is a 'thing' and functions are actions… so it's not surprising that it feels unfamiliar.
15:30 < jocafa> Technodrome:  http://eloquentjavascript.net/contents.html  ← excellent online JS book
15:31 < webdesserts> Technodrome: http://shichuan.github.io/javascript-patterns/
15:32 < deoxxa> Technodrome: http://pastebin.ca/2364560
15:32 < geNAZt> deoxxa: why var Person = .... This must not be
15:34 < deoxxa> geNAZt: so you don't accidentally create a global Person variable
15:34 < daslicht> var Person = function(f or function Person(f
15:34 < geNAZt> well var <=
15:35 < geNAZt> doesnt even create a global
15:35 < geNAZt> function Person does so the var Person is useless
15:35 < deoxxa> geNAZt: that's... what i'm saying. globals = bad
15:36 < Technodrome> so any object initialized with a constructor, only things that have this. defined are available as methods / attributes?
15:36 < geNAZt> well you dont avoid creating globals
15:36 < deoxxa> ?
15:36 < geNAZt> or restricting it to local
15:36 < deoxxa> uh, what
15:36 < webdesserts> I think he's confused about why you need `var Person` AND ` function Person`
15:36 < geNAZt> var Person = function Person()
15:36 < webdesserts> as am I
15:36 < jayk> Technodrome: Methods are functions.  When they are called in the method form, that is object.method() then they get this set to object
15:36 < geNAZt> creates a local var Person which gets a reference from the function called Person
15:36 < deoxxa> no geNAZt, that's not correct
15:37 < geNAZt> and the function Person gets declared global
15:37 < jayk> (there are exceptions - but you have to do them on purpose, so they aren't really relevant here)
15:37 < deoxxa> geNAZt: `var x = function x() {};' is different to just `function x() {}'
15:37 < Technodrome> i'm confused at the need of this webdesserts in a constructor function 
15:37 < geNAZt> i dont think so
15:37 < deoxxa> geNAZt: the first one creates a function with the `name' property set to "x", then assigns it to the `x' variable
15:38 < geNAZt> and why do you name the function ?
15:38 < hydrozen> what’s the correct way to read an iso-8859-1 file with node without losing all the accents?
15:38 < geNAZt> if it gets into a named variable ?
15:38 < deoxxa> geNAZt: the second one is a special case from back in the "old days" of js where people didn't realise functions were just regular things like any other variable, and it will assign the function to a global variable `x'
15:38 < deoxxa> geNAZt: makes stack traces nicer
15:38 < deoxxa> geNAZt: gives you a .name property
15:38 < webdesserts> deoxxa: what's wrong with "var Person = function(){}" ?
15:39 < geNAZt> it doesnt show up in stack
15:39 < jocafa> you don't need "var Person =",    this works just fine:  "function Person(…".    the latter will not create a global
15:39 < Technodrome> http://pastebin.ca/2364565 this outputs undefined 
15:39 < jayk> Technodrome: correct.
15:39 < geNAZt> >> var Person1 = function Person2() {}; Person2();
15:39 < purr> geNAZt: ReferenceError: Person2 is not defined
15:39 < geNAZt> i see
15:39 < deoxxa> webdesserts: that's fine, it'll work basically exactly the same
15:40 < Technodrome> jayk: and its that way because those are not available in the instance , only the function directly? 
15:40 < jayk> Technodrome: That is because this.firstname != var firstname
15:40 < deoxxa> >> var X = function X() { this.x = "x"; }; var x = new X(); console.log(x);
15:40 < purr> deoxxa: undefined; Console: {x: 'x'}
15:40 < yawnt> it's a deoxxa 
15:40 < penguin1> hi
15:40 < deoxxa> >> var X = function X() { this.x = "x"; }; var x = new X(); x;
15:40 < purr> deoxxa: (object) {x: 'x'}
15:40 < webdesserts> deoxxa: ok just wondering if there was a reason to name it twice
15:40 < deoxxa> hrm
15:40 < penguin1> What IDE is recommandable for JS programming / node.js ?
15:40 < penguin1> I could do it also by using a text editor, but an IDE is more eppealing
15:40 < Technodrome> jayk: why not? i mean why can't i set an argument to a variable via var? 
15:40 < deoxxa> webdesserts: if you use the node console and paste that line in, it'll show something like [object X] - it uses the .name from the constructor
15:41 < jayk> Technodrome: you can, but a var in the Person function is just like a var in any java method.  it's not attached to anything…. it has meaning within the function scope, but after that it's gone.
15:41 < pringlescan> deoxxa, you can use .inspect to change the output
15:41 < pringlescan> where inspect is a function that returns the value to print
15:41 < jayk> (technically, it's captured in the closure if you use it, but closures are foreign to Java so that's a whole other topic)
15:41 < webdesserts> Technodrome: you can , but if you are trying to create an object with that function you need too tie that variable to it with `this`
15:41 < FPSJosh01> >> 'hi'
15:41 < purr> FPSJosh01: (string) 'hi'
15:41 < FPSJosh01> Hi purr.
15:42 < geNAZt> forever alone ?
15:42 < geNAZt> :D
15:42 < deoxxa> pringlescan: i could also .replace() on the result of util.inspect, but this is easier and makes more sense to me
15:42 < Technodrome> http://pastebin.ca/2364569 i would think, this should work 
15:42 < penguin1> anyone?
15:42 < jayk> Technodrome: In other words, if you want it to live the lifetime of the object, you have to attach it to the object.  That's where this.firstname comes in.  this.firstname = firstname would attach it.
15:42 < FPSJosh01> >> 'Hah. gay!'
15:42 < purr> FPSJosh01: (string) 'Hah. gay!'
15:42 < pringlescan> Hello all, I'm working on a project that helps school kids find the safest way to walk to school based on crime. I was initially doing it 100% in Node.js with no database, but my dataset was too large to do everything in memory without Node freaking out. I've been putting in 16 hour days for the past few weeks working on it, and I have a few hours left and I'm so close, but I need someone to bounce ideas off of… are you guys in?
15:43 < Technodrome> so this. is the only way to attach things to be used by the object jayk ?
15:43 < jayk> Technodrome: Defining a var in the construction function is not the same as defining an attribute on the object.
15:43 < FPSJosh01> var creates a variable locally in the context
15:43 < Technodrome> yes
15:43 < Technodrome> i get that
15:43 < jayk> Technodrome: more or less. 
15:44 < geNAZt> function X(test) { var x = test; }; var x = new X("Test"); X.x;
15:44 < Technodrome> so any var inside of a function can't be used outside of that object's internal scope?
15:44 < geNAZt> >> function X(test) { var x = test; }; var x = new X("Test"); X.x;
15:44 < purr> geNAZt: undefined
15:44 < FPSJosh01> >>(function(){return 'hi';})();
15:44 < purr> FPSJosh01: (string) 'hi'
15:44 < gildean> pringlescan: shoot
15:44 < Technodrome> as in properties or methods are not accessible jayk ? 
15:45 < FPSJosh01> >>(function(){var localVariable;return {exposed:localVariable;};})();
15:45 < purr> FPSJosh01: SyntaxError: Unexpected token ;
15:45 < jayk> to use it outside, you have to pass it out somehow.  Just like Java or C… 
15:45 < FPSJosh01> >>(function(){var localVariable;return {exposed:localVariable};})();
15:45 < purr> FPSJosh01: (object) {exposed: undefined}
15:45 < jayk> just understand that 'var' has no special meaning.  It just creates a variable.
15:45 < pringlescan> So the idea is to use OSM data and the Open Source Routing machine. I've been designing it to make it easy to deploy in cities around the globe (anyone that has crime data).
15:45 < pringlescan> It uses Node.Js for the backend and ETL … and that's where I'm running into problems. I couldn't hold all the data in memory without Node.JS freaking out. I was doing all the geospatial stuff by hand and it was FAST. Now I'm using MongoDB and I'm running into problems getting it to do what I need it to do. The GeoJSON stuff in 2.4 is great, but I can't do intersects on line strings, and things are taking too long. (Anything longer t
15:45 < pringlescan> 11:34
15:45 < jocafa> "this" is never implied, unlike say c++
15:45 < Technodrome> yes jayk , sometimes i have to keep reminds myself i'm in a function and not in a literal object notation 
15:45 < pringlescan> I have 600k crimes, 250k unique points where crime occurs, 80k nodes in the road network, and 15k roads/ways (for Philadelphia, Pennsylvania)… for each unique point, I have what crimes occured there, the nearest existing road node, and the closest point to the crime on the road (like a GPS would start you off, the lat/lng that is closest, not necessarily an existing road node).
15:45 < jayk> right… var works only within the scope of the function it's in.
15:46 < jayk> jocafa: right. 
15:46 < pringlescan> What I have to do is take each of those 250k points, and insert them where they go into the roads, as traffic signals, so that the routing engine routes around them.
15:46 < pringlescan> I have an algorithm to do that when given the point to insert, and the existing points, but matching the unique points to what way they should be in has proven difficult as you cannot compare coordinates and the routing engine uses a different level of precision than OSM.
15:46 < Technodrome> i keep thinking that { } is almost a function or something, stupid me 
15:46 < FPSJosh01> you can expose it by creating a function that has scope though
15:46 < pringlescan> Right now they're loaded up in MongoDB, but MongoDB doesn't do intersects on line strings, and the geospatial queries take so long (even with indexes) on a BEASTLY server, that it'd take atleast a day to do the ETL
15:46 < pringlescan> and that's just not right, OSRM does the entire road network in a minute or two, and all my other ETL is very fast… so just this last part is presenting a huge problem
15:47 < Technodrome> I'm not gonna lie, JS is harder for me than anything in Java i've ever done 
15:47 < pringlescan> I also have each way, crime_point and node, assigned a neighborhood [broad area] and a census block [small area]… to help with limiting queries
15:47 < jayk> Technodrome: Classes don't exist in Javascript.  If at any point you are thinking pretty much anything based on the fact it's in a Class.. you probably got it wrong.  There are points where things kinda look like Classes… but even then they are just lookalikes.  They behave differently under the hood.
15:47 < euoia> pringlescan: is this not just shortest path, where you increase the cost of the road based on the number of crimes that occurred on it?
15:47 < Technodrome> is an object literal and a function object similar at all ? 
15:47 < FPSJosh01> if you want to define classes, you can use coffeescript if you'd like
15:48 < Technodrome> i need to master this before i move to CoffeeScript 
15:48 < FPSJosh01> Oh okay
15:48 < FPSJosh01> what have you left to master?
15:48 < Technodrome> not to sound like an utter idiot, but i've came this far 
15:48 < Technodrome> its just i will almost keep thinking that an object literal has the same scope as a function and vice versa 
15:48 < pringlescan> euoia, the speed is set in relation to the population and each traffic signal (crime) incurs a time cost
15:48 < jayk> Technodrome: An object literal - { } is an empty object.  the new operator creates an object and calls the function with the new object as this…. the function then attaches things to it… and what you get out is a 'function object' 
15:48 < jocafa> curly braces don't introduce scope… only functions do, which just happen to have curlies.
15:48 < pringlescan> this is to emulate true impedance or weighting; but in practice, it should work just as well
15:49 < jayk> You could just as easily do:  var person = {};  person.thing = function(blah)… person.firstname = 'John'; - etc.  The effect would be the same.
15:49 < FPSJosh01> >> function myClass(){this.exposedProperty = "x";var unexposedLocalVariable = 'unexposed';} var x = new myClass(); x;
15:49 < purr> FPSJosh01: (object) {exposedProperty: 'x'}
15:49 < pringlescan> so, after I smush the crimes into the ways, I either output a full blown OSM file, or a changset, I've gotten the awesome file for Philly down to 12mb in XML (quite a feat)… but the crime data is huge
15:49 < jayk> the Functions give you a way to create objects that look the same no matter how many you produce.
15:50 < d2dchat> when piping data to request through a stream, how do I transform the data before it sends the request?
15:50 < FPSJosh01> exactly what jayk says
15:50 < jayk> I'm really simplifying things, there is a lot to how that works… but that's the gist.
15:50 < euoia> pringlescan: so that's the map - with the stops inserted for the crimes - 12mb in xml?
15:51 < Technodrome> jayk: this can't be used in object literals right? only in the functions attached to the object literal's? 
15:51 < jayk> Technodrome: Don't sweat it.  As I said, JS is about as far away from Java, conceptually, as you get.  It will take some time to get your head around it.
15:51 < Technodrome> i don't see why they did this :( 
15:51 < FPSJosh01> Nobody does
15:51 < Technodrome> why couldn't they just made it normal OOP 
15:51 < FPSJosh01> the inventor hates it too
15:51 < FPSJosh01> I forgot his name.
15:52 < jocafa> js is one of the few prototypal languages out there
15:52 < jayk> Technodrome: This is prototypical inheritance.  It's still OOP, it's just not Class'ical OOP.
15:52 < jayk> Technodrome: This might help.  Think of 'this' as a side effect of calling something with the method syntax.
15:52 < jocafa> ^ what jayk said
15:52 < Technodrome> is there a difference between new Object() and { } ?
15:52 < jocafa> Technodrome:  no
15:52 < FPSJosh01> No.
15:52 < jayk> Technodrome: no.
15:52 < jayk> If you do this:
15:52 < FPSJosh01> new Object() just calls the object function
15:52 < lacrymology> is there a way of reloading a module from disc from within the shell?
15:53 < FPSJosh01> the result is literally the same
15:53 < jayk> var foofunc = person.foo;  (This assigns person's foo method to foofunc)
15:53 < Technodrome> so this can only be used in functions correct? it can't be used outside of them?
15:53 < jayk> then you call foofunc(args);
15:53 < Technodrome> like it can't be used in an object literal as a property name?
15:53 < jocafa> sort of similar for arrays:   new Array() vs. []   it's only different if you pass a number to the Array constructor
15:53 < jayk> this will have no meaning (actually, due to an oddity of the language, this may be something else entirely)
15:54 < jocafa> if you're not inside some other scope, then 'this' will be the global scope
15:54 < Technodrome> but its just not proper syntax right? 
15:54 < jocafa> that will come back to bite you later when you do stuff with event handlers
15:54 < Technodrome> its hard for me to tell what's working and what's not here :) 
15:54 < FPSJosh01> http://www.phpied.com/3-ways-to-define-a-javascript-class/
15:55 < Technodrome> now an object literal and a  function, what do they share?
15:55 < Technodrome> only functions create new local scopes , i get that 
15:55 -!- mode/#Node.js [+o sblom] by ChanServ
15:56 <@isaacbw> wait what
15:56 < Technodrome> so { this.somename: "thereyougo" }  this does not work 
15:56 < jayk> Technodrome: correct
15:57 < FPSJosh01> no because it will expect a property name there
15:57 <@isaacbw> only because objects don't work that way
15:57 < FPSJosh01> {property: value}
15:57 < Technodrome> so this can only be used in the global scope( just refers to global variables) and then in functions 
15:57 <@isaacbw> object properties take the form string: value
15:57 <@isaacbw> the keys are always strings
15:57 < jayk> var thing = { foo: function(blah) { this.somename = 'thereyougo' } } would work
15:57 < FPSJosh01> >>var thing = { foo: function(blah) { this.somename = 'thereyougo' } }
15:57 < purr> FPSJosh01: undefined
15:57 < Technodrome> so this can really only be used in functions then? 
15:57 <@isaacbw> using 'this' in global scope is terrible
15:57 < FPSJosh01> >>var thing = { foo: function(blah) { this.somename = 'thereyougo' } }; thing
15:57 < purr> FPSJosh01: (object) {foo: function (blah) { this.somename = 'thereyougo' }}
15:58 < jayk> Technodrome: are you familiar with Perl at all?
15:58 <@isaacbw> Technodrome: take a step back and spend some more time reading about javascript
15:58 <@isaacbw> you're saying a lot of really strange things
15:58 < Technodrome> and the this , allows you to set "properties" to the parent object of that function , correct? 
15:58 < Technodrome> jayk: just c# and Java and PHP and Python 
15:58 < jayk> mmm.  Shame.  Perl has an explicit thing that would help in explaining.
15:58 < Technodrome> well 
15:59 < Technodrome> i don't know how to explain some things, its like new java devs they know more than you might think they do because of the terminology 
15:59 < jayk> Technodrome: I get what you are saying.  It's a perspective shift.  it will come in time.
15:59 < jayk> this only has meaning within a method.
16:00 < Technodrome> but i still don't know if "this" can be used outside of functions (which i think it can't) unless its just referring to global values
16:00 < Technodrome> yes
16:00 < Technodrome> ok 
16:00 < FPSJosh01> >>this
16:00 < purr> FPSJosh01: (object) {}
16:00 < FPSJosh01> it can be.
16:00 < jayk> a function becomes a method when it is called like a method.  IE foo() will not have a this that is meaningful.
16:00 < Technodrome> some other guy in pm was telling me it could be a property name in an object literal 
16:00 < jayk> myperson.foo() will
16:01 < Technodrome> this is just to attach to the parent object of that function? 
16:01 < jayk> think of it like this:  in obj.foo()  inside function foo, this will be obj
16:01 < Technodrome> yes
16:01 < Technodrome> and it can only go one level up right? 
16:01 <@isaacbw> Technodrome: if you know your stuff, the single best way to learn javascript is to read the spec itself: http://www.ecma-international.org/publications/standards/Ecma-262.htm
16:01 < jayk> if you copy foo to something else.  object2.foo = obj.foo (note no parens)  then when you call object2.foo(), this is object2 inside foo
16:01 < Technodrome> no tricks there?
16:02 < jayk> Technodrome: There is inheritance, but it doesn't work exactly the way Classical inheritance does.
16:02 < TheAceOfHearts> isaacbw: have you read it? 
16:02 < Technodrome> yes i'm pretty sure i get that part now 
15:58 < jayk> Technodrome: get 'Javascript the good parts' - it will help.
15:58 < Technodrome> jayk: this is pretty much the same as this in c# then? 
15:59 < Technodrome> refers to the parent object from within a child method 
15:59 < TheAceOfHearts> I really enjoyed Effective JavaScript by David Herman too
15:59 < Technodrome> coffee script makes instant sense to me, i can see why people like it 
15:59 < Technodrome> but i need to learn this really good 
15:59 < jayk> yes… you can think of it that way. (just remember it's a shallow lookalike…) it will help you get into the habit…
16:00 < jocafa> Technodrome:  yes, learn JS first, since that's what you'll actually be debugging!
16:00 < jayk> jocafa++ # absolutely.
16:00 < FPSJosh01> I actually learned a bunch of really awesome coding patterns from coffeescript
16:00 < jayk> I'm not a big fan of coffee… but I get why people like it.
16:00 < FPSJosh01> so don't just nip  CS in the bud
16:00 < Technodrome> Object (obj) , foo method and foo method has a function inside of it, the this inside of the foo method, does it refer to the same obj jayk ? or would it refer to the scope of the foo method? 
16:00 < jocafa> i'm not dissing on CS… i love/hate it hehe
16:00 < daekano> Coffeescript is like learning a strange dialect to sound cooler than everyone else.
16:01 < jocafa> i'll like it way more once sourcemaps are done
16:01 < jayk> Technodrome: no magic.  It depends on how you call it.
16:01 < terietor> hello
16:01 < FPSJosh01> Self Executing inline functions are the best <3
16:01 < Technodrome> half my co workers don't know javascript but use it daily 
16:01 < jayk> if you call it like a function, this doesn't mean anything particularly useful.  If you attach it to your object, then this gets meaning.
16:01 < jbkc85> hi all, I am installing/working on the openbadges NodeJS project and get this issue with path.join.  How exactly do I get back to Node 8.x where this issue doesnt happen? I am on ubuntu and the nodejs package is either 6.x or 10.x
16:01 < gildean> Technodrome: sounds like a winning plan
16:01 < jocafa> Technodrome:  a lot of people that use js daily don't actually *know* the language
16:02 < jayk> jocafa++ # again.
16:02 < pringlescan> euoia, no the map is 12mb before I insert crimes
16:02 < terietor> this is my package.json file, http://paste.kde.org/730664/ during the npm update my script isn't called. Am I doing something wrong?
16:02 < pringlescan> the crimes will take up more space than the road network
16:02 < jayk> Technodrome: obj.foo(arg1, arg2, arg3) is roughly the same as foo.call(obj, arg1, arg2, arg3)
16:03 < SrPx> Can I make browserify create a HTML instead of a .js?
16:03 < jayk> foo(arg1, arg2, arg3) is roughly the same as foo.call(null, arg1, arg2, arg3) 
16:03 <@isaacbw> TheAceOfHearts: not from start to finish, but I check it whenever I have specific questions
16:03 < euoia> pringlescan: if you only insert one stop per crime-location how can that be? surely the maximum number of crime-locations is equal to the number of edges
16:03 < TheAceOfHearts> that's pretty freaking cool
16:03 < Technodrome> so this is only useful for real actual objects, ones started with new * , inside of some functions it won't matter? 
16:03 < jocafa> you can sortof "get by" in a lot of ways not knowing it,  but if you take the time to learn it and be disciplined with the way you use it, it can be a hell of a lot of fun :D
16:04 < jayk> (Actually not null, but the global object… but I've yet to find a situation where the fact that this = global in a function call is particularly useful)
16:04 < jayk> Technodrome: No such thing as 'real actual objects'  there are only objects… how they are created is irrelevant.
16:05 < jocafa> everything inherits from Object, somewhere up the prototype chain
16:05 < jayk> Technodrome: A function is a function is a function.  Regardless of where you create it or if you attach it to an object.  It's only the calling semantics you use that give you a meaningful this
16:06 < Technodrome> so how similar are a function and an object literal and a new Object() internally? 
16:07 < fuz> isaacbw: /who
16:07 < fuz> oops, sorry, what i meant to ask was how big everyone's registry.couch is
16:07 < jocafa> >>(function () {}) instanceof Object
16:07 < purr> jocafa: (boolean) true
16:07 < fuz> we're rubbing up against 100gig.  that sound right?  there's some awefully big packages in there like chimera
16:09 < deoxxa> fuz: let's take a look-see
16:09  * deoxxa logs into couch server
16:10 < jocafa> Technodrome:  both {} and new Object() do the same thing.  functions are also objects, but the syntax inside a function does not work like an object literal.  is that what you're asking?
16:11 < deoxxa> fuz: -rw-r--r-- 1 couchdb couchdb  48G Apr 19 23:42 registry.couch
16:11 < Technodrome> jocafa:  i keep thinking this.var is a property inside of a function 
16:11 < fuz> damn.  how'd that happen
16:12 < fuz> deoxxa: is that the public repo @ registry.npmjs.org/ ?
16:12 < deoxxa> fuz: nope, that's a replicated version
16:13 < jocafa> when you use "this.foo = 3" inside a function, it will assign 3 to the "foo" property of the instance of the constructor.  if the constructor was not called using 'new', then "this" will (generally) be the global scope
16:15 < fuz> deoxxa: thanks!  i'll have to dig into why ours is so big.  
16:19 < d2dchat> anyone familiar with streams?? Making my head spin right now
16:19 < d2dchat> haha
16:20 < FPSJosh01> streams are silly
16:20 < d2dchat> FPSJosh01: oh?
16:20 < FPSJosh01> even if they are awesome
16:20 < FPSJosh01> what do you need help with?
16:21 < d2dchat> FPSJosh01: I'm trying to pipe my CSV stream to a request stream, but the request stream is receiving the original CSV data, not the parsed CSV data
16:21 < jocafa> Technodrome:  a simple class: https://gist.github.com/jocafa/15deea9032228eda9b4a
16:21 < FPSJosh01> can you show me the code somehow?
16:21 < jocafa> also, hooray cake
16:21 < FPSJosh01> ^^
16:22 < FPSJosh01> >> 'hooray for cake';
16:22 < purr> FPSJosh01: (string) 'hooray for cake'
16:22 < d2dchat> FPSJosh01: https://gist.github.com/lancecarlson/26391e0e3324e855784b
16:23 < d2dchat> FPSJosh01: I might not understand piping entirely, but I assumed that once you pipe the data through one stream, you could manipulate the stream and send it to another stream in a new form
16:25 < FPSJosh01> what are you converting the csv into
16:25 < FPSJosh01> json?
16:26 < FPSJosh01> d2dchat, if that's the case, you can just use csv-stream
16:26 < d2dchat> FPSJosh01: I'll check it out!
16:26 < FPSJosh01> https://npmjs.org/package/csv-stream
16:27 < FPSJosh01> d2dchat, I'm a big fan of not reinventing the wheel.  It looks like it does the job.
16:27 < d2dchat> FPSJosh01: have you used it? :)
16:28 < d2dchat> FPSJosh01: yes I'm converting the csv into json
16:28 < FPSJosh01> d2dchat: No. If it doesn't work, I can help you find another solution, but you can try searching NPM to see if there are other solutions yourself.
16:29 < FPSJosh01> (sudo) npm install csv-stream
16:29 < FPSJosh01> let me know how it works.
16:29 < d2dchat> FPSJosh01: attempting to reformat my code to use this to see if it makes a difference
16:30 < FPSJosh01> I love how nodejs is literally every tool ever combined into javascript executables.
16:31 < FPSJosh01> Too bad it's literally every tool ever combined into javascript executables.
16:31 <@isaacbw> what do you mean
16:31 < FPSJosh01> It does ETL, web servers, IRCbots, etc
16:32 < FPSJosh01> it feels like a lot to handle D:
16:32 <@isaacbw> yea, but node itself is basically just an event loop wrapped around v8
16:32 <@isaacbw> everything else is userspace
16:32 < FPSJosh01> right
16:32 < snuggl> FPSJosh01: so does every other scripting language that is turing complete =)
16:33 < snuggl> and have appropriate system hooks.
16:33 < FPSJosh01> snuggl: of course, maybe I'm just overwhelmed by how awesome it is
16:34 < FPSJosh01> snuggl: it's like every other environment should stop being itself and start being awesome. True story.
16:35 < snuggl> FPSJosh01: most of them have an equal or bigger ecosystem due to their longer life span
16:35 < snuggl> but it will get there =)
16:46 < FPSJosh01> d2dchat, did it work for you?
16:46 < d2dchat> FPSJosh01: It looks like it is pretty darn close.. I just have recode things a bit because it expects headers
16:47 < FPSJosh01> oh
16:47 < FPSJosh01> Might be worth the workaround
16:47 < FPSJosh01> You need a schema to make the object either way
16:48 < d2dchat> FPSJosh01: I just don't know how it's going to behave if the csv file doesn't have headers
16:48 < d2dchat> ..yet
16:48 < d2dchat> :)_
16:48 < FPSJosh01> d2dchat you could also try this https://npmjs.org/package/fast-csv
16:48 < FPSJosh01> allows you to define the headers in the code
16:49 < FPSJosh01> even more simple than the other one.
16:49 < d2dchat> FPSJosh01: I don't get why this has so many github stars https://github.com/wdavidw/node-csv-parser
16:49 < jeffsmykil> How do you run an application from within a Node App that you run normally from the CLI?
16:50 < FPSJosh01> jeffsmykil is that a node app within a node app?
16:50 < jeffsmykil> FPSJosh01: I want to run the handlebars pre-compiler from within an app
16:50 < s5fs> jeffsmykil: check out child_process.exec, that's how I does it
16:51 < FPSJosh01> ^^
16:51 < s5fs> jeffsmykil: linky http://nodejs.org/api/all.html#all_child_process_exec_command_options_callback
16:52 < FPSJosh01> d2dchat, hope that helps
16:52 < d2dchat> FPSJosh01: I think it def. put me in the right direction! Thx
16:53 < d2dchat> FPSJosh01: for whatever reason the most popular csv lib doesn't do streaming, but these smaller ones do :)
16:53 < FPSJosh01> d2dchat, The useful things are always lesser known, unless they are jquery.
16:53 < d2dchat> :)
17:00 < Sam_> Are you there
17:01 < deoxxa> Sam_: i can't tell if you're being deep or just misunderstanding how irc works
17:01 < _6a68> heh
17:01 < Sam_> ok, I am sorry. Though I am looking to talk some one regarding joyent partnership
17:02 < deoxxa> Sam_: i mean, is *anyone* really *there*? and is it possible to answer "yes" to that question? because technically, from the responder's point of view, they're not "there", but rather "here"...
17:02 < deoxxa> my brain hurts
17:02 < Sam_> I dont know whats going on, can any one join me on chat please
17:03 < Sam_> deoxxa
17:03 < jeffsmykil> thanks i will try to bend my head around that
17:13 < Mufasaa> Morning folks, I'm looking for some help in a Node.js application architecture
17:13 < Mufasaa> any takers?
17:19 < Mufasaa> Its a nice app... really... even if I do say so myself..
17:22 < leonvv> What is your question ?
17:23 < jcollum> hey do any of you use amdefine? 
17:24 < jcollum> I've got `if (typeof define !== 'function') { var define = require('amdefine')(module) }` at the top of several js files that I'm using client side
17:24 < jcollum> but I'm getting an uncaught ref error on "module" 
17:24 < jcollum> so I'm wonder if I should be using this client side at all 
17:24 < Mufasaa> @leonvv well, I'm just wondering how best to organize a server that should respond to web, api and console requests
17:26 < Mufasaa> @leonvv the node server is governing the process the FreeBSD machine is running. Different api calls initiate different actions, web can be used for that as well but is primarily for reading the status of different activities on the server and the console is to perform tasks as well, the same as the API but locally
17:27 < ddod> Can someone tell me if there's an easy way to use the twitter (statuses/user_timeline) API simply using Request?
17:28 < leonvv> Oh well, I never did a big app in Node.js :( did you look into express yet ?
17:29 < Mufasaa> @leonvv hehe, I know how you feel, this is my first big one.  Express will be handling the web and likely the API as well, but I was wondering if I could "pre-route" so I can use restify.  Might be doing it wrong but at least I can learn some more about Node, right?
17:30 < leonvv> Right :P
17:30 < Mufasaa> @leonvv :D
17:31 < leonvv> What is restify btw, should I look into it ?
17:31 < hij1nx> restify is awesome.
17:31 < dypsilon> hij1nx, why?
17:32 < hij1nx> because dtrace
17:32 < hij1nx> you can find out more here :)
17:32 < hij1nx> https://github.com/mcavage/node-restify
17:32 < dypsilon> thanks
17:32 < leonvv> Isn't it much the same as Express ?
17:32 < hij1nx> :)
17:32 < Mufasaa> Restify is much more streamlined than express for pure REST apis  and also dtrace 
17:32 < Mufasaa> oh, well hij1nx answered :)
17:34 < dypsilon> how hard is it to bringt dtrace to other frameworks?
17:34 < Mufasaa> @hij1nx have you touched on larger node solutions?
17:35 < dypsilon> say express
17:35 < hij1nx> Mufasaa: i founded nodejitsu :) and im on to even larger projects now :)
17:35 < ddod> so is it possible to use twitter's statuses/user_timeline without oauth?
17:35 < tjholowaychuk> dypsilon i'd consider if it were conditional, I dont want the compiled dep requirement for express
17:35 < Mufasaa> @hij1nx I bow before your awesome prowess.  +10000 man points awarded
17:36 < tjholowaychuk> we have no problems without it though however
17:36 < hij1nx> Mufasaa: lol, really... dont :/
17:36 < hij1nx> Mufasaa: but, it has given me lots of experience with dtrace
17:36 < Mufasaa> Whoa!!!! What is this, celebrity night? @TJ is here, @hij1nx is here.. we just need Substack
17:36 < thyb> ddod: no, they restricted only search method to be called without OAuth
17:37 < ddod> thanks thyb
17:37 < thyb> ddod: to use the timeline now, u have to use their widget
17:37 < hij1nx> Mufasaa: dtrace is really the only way to holistically instrument a system without causing side effects
17:37 < ddod> thyb what do you mean their widget? i'm just trying to get tweets from a large set of usernames
17:37 < ddod> not integrate anything in a site
17:38 < thyb> ddod: https://dev.twitter.com/docs/embedded-timelines
17:38 < Mufasaa> @hij1nx I agree, it is awesome.  Care to give some advice on something I'm tinkering with? Confirming my ideas on an architecture
17:38 < thyb> you generate a timeline with a username or a search, twitter generate an id for you and you just have to call their "widget" using the id they gave you (sry for my bad english ^^)
17:38 < hij1nx> sure you can /msg me a url, but i have pretty limited bandwidth :(
17:40 < Mufasaa> @hij1nx its still work in progress :)  But its is supposed to manage an underlying BSD/OpenIndiana Server.   The node server is governing the process(es) the machine is runs on demand.  Different api calls initiate different actions, web can be used for that as well but is primarily for reading the status of different activities on the server and the console is to perform tasks as well, the same as the API but locally.
17:42 < Mufasaa> @hij1nx having such a big mix, I would have loved to "pre-route" on port 80, recognizing if the request is for API (Restify) or Web (Express) but that seems excessive
17:42 < a|3x> so i have this strange issue, i have a socket.io module with inotify that captures folder modifications and sends messages over socket.io (previously i had my own long polling implementation, still same problem).  i start the node server process and it works perfectly, come back next day and it disconnects right after connecting (i tested this with telnet), i tried this on multiple servers, what could be w
17:42 < a|3x> rong?
17:42 < Mufasaa> and not 100% right in the head
17:54 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:55 <@isaacbw> what's the protocol for trying to grab an unmaintained npm package's name?
17:57 <@isaacbw> ah, found it (https://npmjs.org/doc/disputes.html)
18:01 <@mbalho> looks like the package name 'doc/disputes.html' is taken sorry
18:01 <@isaacbw> hah
18:01 < Qbix1> hey guys
18:02 < FPSJosh01> >> 'hai'
18:02 < purr> FPSJosh01: (string) 'hai'
18:05 < Qbix1> hi
18:06 < Qbix1> so Node is almost 1.0?
18:08 <@isaacbw> no
18:09 <@isaacbw> master is on 0.11.2 I believe
18:13 < d2dchat> FPSJosh01: around?
18:14 < FPSJosh01> yes d2dchat
18:14 < FPSJosh01> did it work?
18:15 < d2dchat> FPSJosh01: well, sort of.. now I'm curious how I should approach this next step
18:15 < d2dchat> FPSJosh01: compiling a gist
18:15 < FPSJosh01> can you post the code somewhere?
18:15 < FPSJosh01> http://collabedit.com/
18:16 < FPSJosh01> compiling a gist?
18:16 < d2dchat> FPSJosh01: https://gist.github.com/lancecarlson/40c76c80ab2484f4fbb5
18:16 < d2dchat> OK so
18:16 < d2dchat> This is fine, but I want to insert a step in between to manipulate the data
18:16 < d2dchat> before it hits the request
18:17 < d2dchat> FPSJosh01: should I create another stream in between or something?
18:17 < d2dchat> FPSJosh01: or can I leverage transform somehow?
18:17 < FPSJosh01> I think this will help you better https://npmjs.org/package/fast-csv
18:18 < FPSJosh01> each "data" is a row
18:18 < FPSJosh01> no?
18:18 < d2dchat> FPSJosh01: yes.
18:18 < FPSJosh01> you have to process it and wait until the whole request is completed, or handle each row individually
18:18 < kid__> gh
18:18 < FPSJosh01> unless I'm missing something
18:19 < d2dchat> FPSJosh01: ya, it's going to stream the entire file into the http request :)
18:19 < d2dchat> FPSJosh01: after some transformations
18:20 < LouisT> Hi, anyone know if it's possible to unref an http server made with createServer?
18:21 < FPSJosh01> I queried you for link
18:21 < g0z> anyone here happen to know how to make/tell node-canvas to buid with jpeg support? I installed libjpeg-devel package but it stil won't read jpegs so I assume support isn't being included
18:23 < FPSJosh01> d2dchat are you there?
18:28 < g0z> what problem exactly?
18:28 < g0z> er wrong channel
18:29 < ctorp> Is there something like mediawiki for nodejs?
18:40 <@isaacbw> https://github.com/isaacbwagner/node-hashtable
18:40 <@isaacbw> names
18:43 < gagecolton> once I configure upstart and get node to run as a service, how do I interact with the service?
18:47 < dypsilon> gagecolton, probably like with any other upstart service? was it start X, stop X, status X?
18:48 < gagecolton> all that works. I'm just learning how to use node, I presume. Haven't used it before
18:49 < d2dchat> FPSJosh01: you there? :)
18:51 < dypsilon> gagecolton, I think what you try to understand is that: every node server is another upstart service. As opposed to one upstart for node to rule everything.
18:55 < gagecolton> I'm gathering that. Thanks!
18:55 < samholmes> All this time, I thought emitter.off was a method. :P
18:59 < mary5030_> can i ask a question regarding grunt
18:59 < mary5030_> ?
18:59 < mary5030_> i have upgraded grunt but it gives me this error when i run it
18:59 < mary5030_> ReferenceError: grumodule is not defined
18:59 < mary5030_> Warning: Task "default" not found. Use --force to continue.
19:01 < thinkt4nk> mary5030_ do you register a default task in your gruntfile?
19:05 < patrickod> is there an easy way to monkey patch the http library to always use a http proxy?
19:05 < mscdex> isaacbw: how about adding the ability to use bracket notation to get values from the hash table?
19:06 < mscdex> isaacbw: and set values for that matter
19:10 <@isaacbw> mscdex: that would be cool. I might have to do some digging to figure out how I would do it
19:11 <@isaacbw> IndexPropertyHandler maybe?
19:12 <@isaacbw> no
19:12 < fedvasu> guys, I want to concurrently to http.get on a url
19:12 <@isaacbw> NamedPropertyHandler
19:13 < fedvasu> like with apache-benchmark ab -c 1000  -n 1000
19:13 < fedvasu> how to do it in node, how to ensure it is concurrent
19:13 < fedvasu> ??
19:13 < jeduan> does anyone has a recomendation on queues? I saw kue, but looks abandoned, considering coffee-resque, would that be a good choice?
19:15 < paulkon> kue is cool
19:22 < jeduan> it looks really cool, but then there's this https://github.com/LearnBoost/kue/issues/185
19:31 < mscdex> isaacbw: i'd look at the Buffer and typed array implementations in node
19:31 < lacrymology> I'm testing with mocha.js and I'm trying to test Date stuff, I'd like to test that something is `almost` now, anyone knows?
19:32 < rapsli> hi there. I'm wondering how to cleanly program with those callback functions?
19:32 < master5o1> no idea.
19:33 < master5o1> tolerance of 3 minutes, make sure it is within that range?
19:33 < dypsilon> rapsli, google "callback patterns"
19:33 < dypsilon> rapsli, look at async and lodash
19:34 < rapsli> let me quickly make a small pastebin
19:34 < dypsilon> rapsli, use node.js callback pattern callback(error, argument1, argumentn, callback)
19:34 < jedahan> whats the best way to see what packages specified in a package.json are out-of-date? I mean, if "bar": "1.2.x" is specified, and "1.3.0" is out, I wanna see "1.3.0"
19:34 < dypsilon> rapsli, ah you have a concrete example, sorry
19:34 < jedahan> npm outdated only shows what packages that match package.json have been updated
19:34 < fedvasu> guys how can i do , ab -c 100 -n 100 <url>
19:35 < fedvasu> in pure node.js?
19:36 < rapsli> dypsilon: http://pastebin.com/NhrVdQjK 
19:37 < rapsli> if I'm though using that callback function from a different Modul I have no idea what kinds of arguments that callback function would take and what it will do with it
19:39 < dypsilon> rapsli, well, you have to invoke the function as it expects to be invoked if you are planning to pass a function from a different module
19:40 < dypsilon> rapsli, if that's what you mean, so in your example you could write imp.fetchAll(console.log)
19:40 <@isaacbw> mscdex: I think it can only be done for index properties like with Buffer
19:40 < dypsilon> no problem with that, because the arguments of console.log match the arguments of your invokation
19:41 < rapsli> dypsilon, well but that means that I can't treat a module as a blackbox?
19:41 < ctorp> wiki
19:41 < rapsli> if a module has a public api that takes a callback
19:42 < dypsilon> rapsli, so what are you trying to do? pass a module's function into your code as callback or pass your callback into 3rd party function?
19:42 < mscdex> isaacbw: ah ok
19:42 < dypsilon> rapsli, more concete example would help
19:43 < dypsilon> *concrete
19:43 < rapsli> well it's not really more concrete... I'm just doing some testing but trying to find a good way to keep modules loosly coupled
19:44 < dypsilon> rapsli, it's going to be hard to wrap your head around it, if you don't have a real use case.
19:45 < rapsli> dypsilon: but probably I will find out more, googling for node.js callback patterns ... already figured out that the first argument is an error object
19:45 < rapsli> dypsilon: well, what I'm trying to understand is this example here: http://howtonode.org/express-mongodb
19:45 < dypsilon> rapsli, i still recommend you to look at lodash and async. especially lodash's "bind" and partial invocation.
19:46 < dypsilon> rapsli, there ary many examples, what don't you understand in particular?
19:47 < dypsilon> rapsli, also look at this snippet https://gist.github.com/dypsilon/5350284 it's a way to invoke foreign callback which uses node.js callback pattern
19:47 < rapsli> dypsilon: what I don't understand... I just not seem to understand how to wrap my head around those functions as arguments ;)
19:48 < dypsilon> rapsli, do you know any other programming languages?
19:48 < rapsli> on a high level it's pretty clear... but in more detail -> :( like I wouldn't be able to write this my-self and also having a hard time doing like a manual step-by-step "debugging"
19:48 < rapsli> dypsilon: coming from the Java/PHP world.
19:48 < rapsli> did some python
19:49 < rapsli> know javascript, like what you need for your frontend coding
19:51 < dypsilon> rapsli, ok, so what you need it understand: 1. function is a type. so you can pass it around like an integer 2. function is an object. 3. "this" is a special variable that is "bound" to a function. so you can use the function on different objects by rebinding this. 4. function has the scope it's been defined it, not where it's been call (closure)
19:54 < dypsilon> rapsli, for some in depth details look at http://dmitrysoshnikov.com/ecmascript/javascript-the-core/
19:54 < rapsli> dypsilon: thanks, I understand those basics. The issue I have, I don't see how clean programming is possible: I pass a function as an argument, and then I use that function, but once I call the function I don't know what kind of arguments I need to pass to it
19:55 < dypsilon> rapsli, this is normally described in the documentation of the module. So the module defines: pass a callback with arguments error, a, b, c
19:56 < howdynihao> rapsli: how would you solve that in java/php?
19:57 < dypsilon> howdynihao, they normally don't use callback in java/php
19:57 < rapsli> howdynihao: there's no such thing in java/php ... at least not that I know of
19:57 < rapsli> you wait for the response and the you go on
19:57 < howdynihao> dypsilon: i don't think he's really talking about callbacks
19:57 < dypsilon> rapsli, php 5.3 (i think) has closures, so it's actually possible
19:57 < howdynihao> seems like you want dependency injection
19:58 < rapsli> not really sure what I want I guess... ;) I guess I'm just having a really hard time reading those nested function calls
19:59 < g0z> heh this guy, half reads a description and pretends ot know what's up. "what is jsdom?" *I'm afk at this point* "i looked it up, it's js for node"
19:59 < g0z> *return to keyboard puzzled*
20:00 < rapsli> dypsilon: Do you have any trick on how to best read async code with nested callbacks (like that snipped) you pasted
20:00 < dypsilon> g0z, who do you mean?
20:02 < rapsli> dypsilon: like going through the lines ;) doesn't seem to be possible (e.g. https://gist.github.com/dypsilon/5350284) 
20:02 < rapsli> like you have to always know what function the variable is refering to
20:03 < dypsilon> rapsli, the trick is to understand javascript. when i scan the snippet i pasted, i first glance at the signatures at lines 1,6 and 14 but don't read the bodies and jump right to the parts which will be executed (line 25), from there i just follow the execution flow
20:03 < dypsilon> this is what the interpreter does
20:04 < dypsilon> also this example is hard to understand because its intentionally ripped out of the context
20:05 < dypsilon> also you can use node debugger and look at what the interpreter does step by step
20:05 < rapsli> dypsilon: yeah, I think that's what I have to do, as my brain debugger seems a bit slow today
20:06 < dypsilon> rapsli, the more you look at this, the easier it will get
20:06 < rapsli> dypsilon: thanx anyways. very friendly community. *like*
20:06 < dypsilon> try perl :D it's never getting easier there
20:07 < dypsilon> rapsli, you are welcome
20:10 < rapsli> dypsilon: wow, that debugger is... well not very intuitive ;)
20:11 < dypsilon> rapsli, you can bind it to chrome devtools, but don't ask me how
20:11 <@konobi> there's also a new shiny of trace.gl
20:12 < rapsli> konobi... does look a bit nicer ;) at least for a beginner
20:13 < dypsilon> konobi, it's pretty awesome
20:13 < rapsli> :( but no test version
20:17 < doug> okay, after `node debug app`: 
20:17 < doug> debug> sb('/home/doug/src/emdn/node_modules/connect-assets/lib/assets.js',159)
20:17 < doug> Script : /home/doug/src/emdn/node_modules/connect-assets/lib/assets.js not found
20:17 < doug> clearly i'm doing something wrong
20:18 < doug> specifying relative or with any part of the prefix similarly fails
20:18 < doug> as does stuffing ../ before them
20:30 < MI6> joyent/node: isaacs v0.10.5-release * deeaf8f : 2013.04.23,+Version+0.10.5+(Stable)  *+uv:+Upgrade+to+0.10.5+(isaacs)  *+ - http://git.io/7RWxGg
20:36 < rapsli> dypsilon: in your little code sample
20:37 < SexyTattoos96> hi
20:37 < rapsli> you have the following snipped: invokee.length (which is equal 2)
20:37 < rapsli> what length is that?? the amount of arguments it takes?
20:37 < dypsilon> rapsli, yep
20:38 < rapsli> hm... is that just node or does this also apply to "normal" javascript?
20:39 < rapsli> dypsilon: and now I can also "manual debug" the snipped 
20:39 < dypsilon> it's normal js
20:39 < dypsilon> but doesn't work in all browsers
20:40 < dypsilon> i think some ie versions don't support that
20:40 < rapsli> oky. nice... learned something more
20:42 < MI6> joyent/node: Olof+Johansson master * ddf4d1a : install:+Support+$(PREFIX)+install+target+directory+prefix  This+change+i - http://git.io/4-tJXQ
20:43 < rapsli> dypsilon: would you call calls with call/apply a dependency injection?
20:44 < dypsilon> rapsli, yeah
20:45 < dypsilon> well actually x.call() or x.apply() is no dependency injection, passing a callback is.
20:46 < dypsilon> but it's obiously not the classical constructor/setter/interface injection
20:46 < ljharb> it's sort of DI. but it's going to be confusing as hell for people to read and understand.
20:47 < rapsli> i'm already confused ;)
20:54 < MI6> joyent/node: trevnorris synchronize pull request #4964 -- WIP: external memory allocation management - http://git.io/so3d-g
20:59 < MI6> joyent/node: dandv opened issue #5355 -- Changelog for v0.8.23 is missing http://git.io/ROMg4w
21:06 < MI6> joyent/node: isaacs created tag v0.10.5 - http://git.io/NnERxA
21:07 < MI6> joyent/node: isaacs v0.10 * ec5577c : Now working on 0.10.6 (+2 more commits) - http://git.io/XQyUsA
21:08 < MI6> joyent/node: isaacs v0.10 * 72cf499 : blog: Post for v0.10.5 - http://git.io/ZqeT5Q
21:09 < doug> what's the best way to debug node?
21:12 < bnoordhuis> doug: depends on what you want to debug
21:14 < doug> bnoordhuis: i'd really just like to snag the value of a variable (a path) within a node_module 
21:15 < bnoordhuis> doug: don't tell anyone but i'd probably just use console.error() for that
21:16 < Grim__> Has anyone had issue with v0.10+ with 32bit linux (Amazon / CentOS), I can't get a simple http server to respond? But rolling back to v8.16 works
21:16 < Grim__> To clarify the request "end" event is not firing on v10.4
21:19 < inspiron> does anyone know how to have mocha report to a file? I'm using xunit (i.e. mocha -R xunit)
21:19 < tjholowaychuk> inspiron $ mocha -R xunit > myfile
21:20 < inspiron> i only want the xunit report though
21:20 < Grim__> Are the dependancies for v10.4 different then v8.16? I'm having issues with my upgrade ( Running CentOS 32)
21:21 < tjholowaychuk> inspiron you should be able to silence the other output in your lib/app
21:23 < Grim__> No one else has had an http server issue (req "end" even not firing/processing with 10.4 on linux Centos 32?
21:24 < CoverSlide> Grim__: what errors are you having? all the dependencies other than python and your c compiler should already be in the source package
21:25 < Grim__> I can;t get the 'http.createServer()" to handle the request correctly
21:25 < Grim__> The req "end" event is not firing
21:25 < CoverSlide> Grim__: did you read the streams2 update? "end" requests aren't automatic unless you a) attach a data event, or b) resume() them
21:26 < CoverSlide> http://blog.nodejs.org/2012/12/20/streams2/ << WARNING: If you never add a 'data' event handler, or call resume(), then it'll sit in a paused state forever and never emit 'end'.
21:27 < Grim__> I did perhapse I miss understood, so whats the new way of handeling a request? req.addListner('data', function(){});
21:27 < CoverSlide> Grim__: .resume() would be better if you don't need the data
21:27 < CoverSlide> try reading the link i gave you
21:28 < Grim__> "WARNING: If you never add a 'data' event handler, or call resume(), then it'll sit in a paused state forever and never emit 'end'."
21:28 < Grim__> ahh missed that
21:28 < Grim__> thanks
21:43 < MI6> joyent/node: isaacs v0.10 * 8e56b4d : ChangeLog: Merge in v0.8  Close #5355 - http://git.io/S3sc_w
22:04 <@isaacbw> who was it I talked to yesterday about tape being broken? (not substack)
22:04 < ljharb> me
22:05 < ljharb> i believe it's specifically on "deepEqual"
22:05 <@isaacbw> I think I managed to get something, but holy shit is this eventing a mindfuck
22:05 < ljharb> no kidding
22:05 < ljharb> if you've got a branch of tape i could put in my package.json, i'll happily test it
22:05 < CoverSlide> what was the issue with deepequal?
22:06 < CoverSlide> i think he uses his own package, deep-equal or something
22:06 < ljharb> he does
22:06 < ljharb> on node 0.10, tests with tape loop forever
22:09 < Industrial> Why can I get a cache-control:max-age=3600 when I do a maxAge: 1 in express/connect?
22:10 < Industrial> i have a server set to auto reload the browser, but it's reloading cached files :p
22:12 <@isaacbw> ljharb: okay, so I seemed to be able to fix one issue (the child_ordering craziness) but still have a few more to go
22:12 < ljharb> awesome
22:13 < Industrial> oh browser cache my bad
22:22 < howdynihao> rapidssl cheapest ssl cert ?
22:27 <@isaacbw> I think the only logical explanation is that substack is insane
22:29 < faceleg|work> howdynihao: hostmonster cheaper? Can't remember
22:30 -!- Topic for #Node.js: looking for isaacs because of a node bug? here is his response http://i.imgur.com/9TxF8Rf.gif - http://nodejs.org - http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
22:30 -!- Topic set by mbalho [~max@ve.5bpbxlsy.vesrv.com] [Mon Apr 22 21:19:26 2013]
22:30 -!- isaacs changed the topic of #Node.js to: Node.js - JavaScript on the Server - Nothing weird is going to happen. - http://nodejs.org - http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
22:33 < CoverSlide> howdynihao: startssl is cheaper
22:37 < Technodrome> http://pastebin.com/8uUiJxgd how do i execute this? I know this is basic but its like i can't get the return to execute it just stops 
22:51 < ni291187> help
22:51 < ni291187> ah
22:51 < ni291187> that was fuck wierd
22:52 < Industrial> if it leaves you mixing the words AND the letters, then yeah.
23:17 < CarlosC> isaacs: 0.10.5 pkg installer on ML requires security settings to be set to Anywhere
23:21 < garthk> Any tips on how to track down a method that's failing to call back or set up another event? The identity of the last method invoked for the domain would be a good start. 
23:23 -!- mode/#Node.js [+o TooTallNate] by ChanServ
23:39 < howdynihao> oh my goodness
23:39 < howdynihao> beer and burrito
23:40 < dukedave> Oh yes, I'm hungry aren't it, thanks for the reminder howdynihao 
23:50 < Prometheus> In a lot of projects I run across files like this one: https://github.com/visionmedia/expresso/blob/master/bin/expresso that seem to be bash scripts. Does everything after "node" on the first line just get executed as JS? Can someone explain this in greater detail?
23:52 < zamnuts> Prometheus, yes
23:53 < zamnuts> Prometheus, the shebang (#!) describes what shell to use
23:56 < zamnuts> Prmetheus, you could write #!/usr/bin/node, except that using /usr/bin/env is a bit more flexible in that whatever command comes next (after the space, e.g. /usr/bin/env PROGRAM) is looked up using the executing user's PATH variable
23:56 < zamnuts> Prometheus ^
23:56 < zamnuts> the script is then executed as if it were run through node CLI or as an executable .js file passed into the node command
23:58 < Prometheus> I see. Thank you, that does clarify. Can you say perhaps at a lower level how bash interprets the rest of the file? Are all bash files just equated with stdin?
--- Log closed Wed Apr 24 00:00:35 2013
