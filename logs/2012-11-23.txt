--- Log opened Fri Nov 23 00:00:57 2012
00:01 < mscdex> owen1: #skynet ?
00:03 < TooTallNate> mscdex: dude nice work on mmmagic
00:04 < TooTallNate> i was expecting to have the install fail since i don't have libmagic installed
00:04 < TooTallNate> but then i noticed that you already gyp-ified libmagic!
00:04 < TooTallNate> awesome!
00:07 < mscdex> TooTallNate: yep :-)
00:09 < owen1> mscdex: i tried #android but it didn't go anywhere
00:12 < othiym23> w00t published my first module to npm under my own ID
00:12 < othiym23> now to make my stupid module actually do something useful
00:25 < zorlax> if a program spawned by node isn't flushing stdout, is there anything at all I can do about it on the node side?
00:25 < zorlax> prettry sure the answer is no
00:36 < _pash> hello, i am considering learning node.js, I already know python. I was wondering what are the uses and applications of node.js and where could i start?
00:38 < stagas> _pash: start here http://nodejs.org/docs/latest/api/
00:46 < pomke> gimp tea.jpg
00:46 < TooTallNate> mscdex: so if i wanted to pass a Buffer into mmmagic, what's the minimum length?
00:46 < pomke> erk, sorry wrong window
01:03 < hugo_moss> www.google.com
01:05 < hugo_moss> can node.js be used for a full php replacement?
01:06 < amagee> hugo_moss: i guess.. there's nothing you can write in php that you can't write in node.js
01:06 < amagee> depending on what you want to do, though, php may have more mature prebuilt packages to help you do it
01:09 < hugo_moss> do you think in time the market share will shift from php to node.js?
01:09 < chilts> I think Node.js will continue to grow for a long time, but I think people will come to it from PHP, Ruby, Perl, Python and all kinds of other languages
01:10 < hugo_moss> how long has node.js been in development?
01:11 < AAA_awright> 2-3 years?
01:11 < TooTallNate> hugo_moss: the first commit was on Mon Feb 16 01:02:00 2009 +0100
01:12 <@konobi> sounds about right
01:12 < hugo_moss> cool
01:12 < hugo_moss> thanks for answering my questions guys
01:12 < hugo_moss> definitely worthwhile to learn it
01:13 < AAA_awright> hugo_moss: They have different strengths, comparative advantage and all that
01:13 < AAA_awright> Sure you _could_ do everything in Node.js, some people do... but it probably isn't _efficent_
01:14 < AAA_awright> Asynchronous I/O, that's what it does well
01:15 <@konobi> php you can throw up on any old host... node.js requires more knowledge
01:16 < AAA_awright> It's definitely more for the engineer
01:16 < AAA_awright> Which has probably been the reason it's so successful, no script kiddies
01:17 < AAA_awright> I actually feel like I'm talking to people who know something :D
01:20 <@konobi> godus on node... that'd be pretty cool
01:59 < spion> https://77.29.152.54:8080/ - npmsearch as a web service. that is, if port forwarding works.
01:59 < spion> did I just write https? no. http://77.29.152.54:8080/
02:01 < LouisT> spion: why not https!?
02:01 < spion> eh, because its just for fun I guess :)
02:01 < LouisT> also why is it using the google sillyness of #/... :(
02:02 < spion> I wanted to try out angular
02:02 < LouisT> http://77.29.152.54:8080/#/find?q=gistdb <-- what do the colors mean?
02:02 < spion> green = halflifed downloads, blue = relevance, black = sort score
02:03 < spion> added titles to the colored tags
02:03 < spion> good catch
02:03 < LouisT> should probably make the titles appear faster
02:04 < spion> maybe if I use bootstrap's tooltips
02:05 < pomke> gistdb o.O 
02:06 < LouisT> what about it?
02:06 < pomke> LouisT: you're making github employees cry ;0
02:06 < pomke> lol
02:06  * LouisT shrugs
02:06 < LouisT> idk why they'd get mad about it, the API allows like 5k calls an hour
02:07 < sente> in my experience, API limits are meant to be pushed to the limit :)
02:07 < LouisT> also i haven't really done anything with it in a long time.. just made it for the hell of it heh
02:08 < pomke> I started porting my blog to use gist, I should finish that someday
02:08 < LouisT> i should clean up the source to my rps game and post it to npm heh
02:09 < pomke> I couldn't decide on a good format for embedding post metadata (tags etc) in the gist, while keeping the body as markdown
02:10 < LouisT> if you're using gist, use multiple files per gist.. store one as "content.markdown" and "tags.meta" or something
02:10 < pomke> good idea
02:21 < astropirate> Whos awesome?
02:21 < LouisT> astropirate: i am, clearly
02:22 < astropirate> ( ͡° ͜ʖ ͡°)
02:22 < astropirate> Time to polish the ol' resume :(
02:23 < astropirate> is there any spelling diffrence between Polish as in the nationality and polish as in .... polishing something
02:25 < astropirate> its dead in here
02:26 < LouisT> anyone want to play RPS? heh
02:27 < mmalecki> astropirate: nope
02:27 < mmalecki> source: I'm from Poland
02:27 < astropirate> thank you :D
02:28 < astropirate> mmalecki, really? malecki sounds Persian or Arabic :p
02:29 < mmalecki> astropirate: https://github.com/mmalecki/how-do-you-pronounce-maciej - here's how it actually sounds :)
02:29 < exit2> What can I do to get really badass at JavaScript? :)
02:29 < mmalecki> astropirate: also, yeah, really
02:30 < LouisT> exit2: sell your soul to the devil
02:30 < astropirate> mmalecki, :D
02:30 < exit2> LouisT: Rober Johnson style
02:30 < exit2> +t
02:30 < astropirate> exit2, mehh being badass at javascript is overrated
02:30 < exit2> astropirate: I just want to get better and have a deeper understanding of things
02:31 < astropirate> exit2, best way is to make soemthing non-trivial
02:31 < exit2> astropirate: hmm, any examples?
02:31 < astropirate> idk make a commandline bittorrent client :D
02:31 < astropirate> i'll see you in 6 months
02:32 < exit2> haha
02:32 < exit2> web based bit torrent client
02:32 < exit2> I wouldn't know where to begin
03:51 < asadpakistani> If i deploy my application using mojito do I still need monit to monitor it for crashing?
04:48 < astropirate> Ohh DNS... can't live with you, can't live without you
06:52 < zhodge> So I'm running v0.8.12 but the --harmony flag appears to be broke: " Object() has no method 'observe' "
07:55 < [Jasper]> hej guys, what is the best library to just create a static file server
07:56 < [Jasper]> which can serve different mime types etc?
07:57 < shancat> You can use expressjs (expressjs.com) to serve static files.
07:58 < shancat> And read expressjs.com/api.html#res.type for setting the MIME.
07:59 < [Jasper]> express is quite a heavy framework
07:59 < shancat> Although, depending on your needs I would recommend look at nginx.org
07:59 < [Jasper]> isn't there something lighter?
07:59 < Youdaman> https://github.com/cloudhead/node-static#readme
07:59 < shancat> If you need something fast and light then look at nginx.org. It's not javascript though.
08:00 < Youdaman> http://www.sitepoint.com/serving-static-files-with-node-js/
08:02 < Youdaman> node-static, paperboy, http-server -- i just happened to be googling for static file servers in node ;)
08:03 < Youdaman> and according to paperboy's readme, send is better: https://github.com/visionmedia/send
08:16 < deoxxa> [Jasper]: lighter than nginx? :/
08:17 < [Jasper]> no deoxxa I ws talking about express
08:19 < deoxxa> [Jasper]: have you found express to be slow?
08:19 < deoxxa> like, have you actually gotten numbers on express vs anything else? or are you just wanting "light" because you think it's for some reason necessary?
08:23 < shancat> +1 deoxxa. You'll find that express is "fast enough" for many cases.
08:25 < deoxxa> especially for something like serving static files, where you might not even hit the router
08:25 < deoxxa> (which is where the biggest bottleneck is in express, i've found)
08:25 < RLa> maybe it feels heavy because some dependencies try to include all files into the module?
08:26 < trusktr> Anyone here ever host multiple Locomotive apps on one server, using nodejitsu's http-proxy to hand them out?
08:26 < RLa> i have seen modules where generated documentation is included and is over 100x larger than the code itself
08:26 < deoxxa> i'm all for keeping things simple, but it just kind of feels like gentoo, trying to squeeze the last drop of work out of your cpu instead of fixing the stuff that's actually slow
08:27 < deoxxa> RLa: wat, how does documentation affect runtime performance at all
08:27 < RLa> it does not but when you install the app it feels kind of bloated
08:27 < deoxxa> that's a good scientific measure
08:27 < deoxxa> "it feels bloated"
08:27 < deoxxa> sounds like when people complain about java
08:28 < deoxxa> "ugh it uses so much memory, it must be really slow"
08:28 < RLa> i have actually reported issue where large hidden backup files were distributed with the module
08:29 < RLa> and code size is important when you start to debug it
08:30 < deoxxa> code size !== distribution size
08:30 < deoxxa> but ok
08:36 < Youdaman> i think with a code library the feeling of heavy vs light is akin to a pocket knife vs a spoon -- sometimes all you want is a spoon
08:43 < [AD]Turbo> hola
08:48 <@konobi> i'm surprised noone's tried writing an upstartd-esque thing in node
08:54 < RanzQ> if I install a package using npm, should the executable commands work out of the box?
08:55 < RanzQ> im on OS X and installed stylus but the executable 'stylus' doesnt work
08:55 < clocKwize> RanzQ, I have the same problem, and I haven't fixed it yet
08:55 < trusktr> Anyone know if there's a command on here to disable join/quit messages?
08:55 < clocKwize> as it installs modules in node_modules, you can't add it to PATH really
08:55 < clocKwize> but you can do `npm bin`/stylus
08:55 < clocKwize> which is lame
08:55 < clocKwize> but works
08:55 < RanzQ> ok
08:56 < RanzQ> i just need it like once in a while
08:56 < RanzQ> so no problem
08:56 < RanzQ> thx
08:56 < clocKwize> thats not how to do it, I'm a node noob, so thats just the work around I've found
08:56 < clocKwize> there is probably a proper way to get your node_modules/bin in your path automatically 
08:56 < clocKwize> or something
08:56 < clocKwize> I think if you do npm run-script stylus it'll do it too ?
09:13 < tnorris> trusktr: have you tried 'set irc_conf_mode 1'
09:14 < tnorris> I have that auto run on login to freenode
09:14 < trusktr> set irc_conf_mode 1
09:14 < trusktr> lol
09:14 < trusktr> :set irc_conf_mode 1
09:14 < tnorris> trusktr: '/set irc_conf_mode 1'
09:14 < trusktr> 'set irc_conf_mode 1'
09:14 < trusktr> ooh
09:14 < clocKwize> lol
09:14 < trusktr> got it
09:15 < trusktr> haha
09:15 < tnorris> what chat client are you using?
09:15 < clocKwize> let me guess, you're new to irc? :)
09:15 < trusktr> webchat.freenode
09:15 < trusktr> clocKwize:  yeah
09:15 < clocKwize> all commands in basically all clients start with /
09:15 < trusktr> Good to know. :)
09:16 < tnorris> no worries, been on irc for years and still feel like a n00b. only learned the parts I needed to.
09:16 < trusktr> lol
09:16 < clocKwize> you can /join #channel /part #channel, /msg someone <message>, /whois someone to find info about them thats basic stuff..
09:17 < SomeoneWeird> heh
09:17 < trusktr> sweet.
09:20 < clocKwize> channels and users have modes, which are just letters that mean something.. .like this channel +Cnt, C means no colour messages, n means no messages to the channel from people whare aren't in it and t means only operators can set the topic
09:20 < clocKwize> If I remember 10 years ago's IRC knowledge >.< don't take notice anymore
09:21 < tnorris> trusktr: if you want a full list type '/help', and for command information type '/help <command>'
09:21 < trusktr> tnorris: thanks!
09:22 < trusktr> clocKwize: Where do you see the +Cnt?
09:22 < clocKwize> its in the title of xcha
09:22 < clocKwize> xchat*
09:22 < clocKwize> but you can do /mode #Node.js
09:22 < clocKwize> and it'll tell you them
09:23 < clocKwize> if you are an operator, you can change modes with /mode #Node.js +R (which would make it so only registered users can talk)
09:24 < clocKwize> talking of operators, there are several types of user in a channel (chatroom).. people with +o are operators, +v are voiced (means they can talk even if the channel is moderated(+m)) and just normal people
09:24 < clocKwize> wow, irc is complicated.
09:24 < clocKwize> bring back AOL chat rooms
09:24 < trusktr> lol
10:27 < geNAZt> hi
10:28 < geNAZt> does anybody know about a gtk+ binding for nodejs ?
10:31 -!- mode/#node.js [+o piscisaureus_] by ChanServ
10:41 < Naren> Hi
10:43 < Naren> Hi ryan
10:49 < Naren> Hi...having issues with installing nodejs in linux
10:49 < Naren> getting syntax error while running the configure file
10:49 < Naren> anyone can give a heads up on this issue
10:53 < radiodario> Naren: what exact syntax error?
10:54 < radiodario> also, which linux? have you got build essentials etc installed?
10:54 < zot> callback vs. event — is there general design philosophy in node, when they are equally applicable?
10:55 < zot> (obviously one can be converted into the other, but i'm curious)
10:56 < bnoordhuis> Naren: what version of python do you have? it should be 2.6 or 2.7
10:57 < bnoordhuis> zot: callback when there's ever only one recipient, events if there may be many
10:57 < Naren> hi radiodario
10:57 < Naren> following is the error which i get when i run ./configure
10:58 < Naren>  File "./configure", line 355     1 if options.unsafe_optimizations else 0)        ^ SyntaxError: invalid syntax
11:00 < Naren> @bnoordhuis: Python installed is 2.4.3
11:01 < bnoordhuis> Naren: yeah, that's not going to work, you need to use a newer version
11:02 < Fabryz> Hello
11:02 < Fabryz> imagine i'm doing some filesystem operations with node, but I need to be sure to do them sequentially, like: copy files, move files just created, check if a directory is there etc...  How should I do it? 
11:03 < Naren> Thnx @bnoordhuis, i will upgrade python and then try the build
11:03 < Doikor> Fabryz: put the next call into the previous ones callback?
11:03 < Doikor> so once the first one is done it starts the next operation etc.
11:04 < bnoordhuis> Naren: if you have two python versions installed you can run `python2.7 configure` and the build system will keep using that python version
11:04 < bnoordhuis> that only works in master though
11:15 < strk> does node.js support lookbehind regexp ?
11:16 < strk> ie: "happy" not preceeded by "un"
11:18 < rvagg> strk: JavaScript in general doesn't do lookbehind, at all
11:19 < Fabryz> Doikor mmm simple, i'll try
11:19 < Fabryz> thanks
11:19 < strk> rvagg: actually it does ^ and \b
11:20 < rvagg> strk: mmmm ? those aren't lookbehind tho
11:20 < strk> they check if the previous char is "nothing" and "not-a-word" respectively
11:21 < dileep> hello noder
11:22 < dileep> i want a javascript function so that i can make a call to entire page of coding via javascript function
11:22 < dileep> ???
11:22 < rvagg> not really a lookbehind tho strk, that'd be (<= and (<!
11:25 < deoxxa> dileep: the more i read your question, the less i understand
11:27 < dileep> mean to say a javascript function so that we can call the entire code via single javascript funcion
11:27 < rvagg> hey strk you should look at xregexp, it has lotsa fun regexp tools in it and you can do lookbehind-like stuff with it
11:28 < strk> problem solved, I pre-pended something to the subject string
11:28 < deoxxa> dileep: what "entire code"?
11:29 < dileep> like form with fields more than 100
11:55 < dileep> deoxxa,hey like i made a form with the 100 filelds and want to callup the form with the only single javascript function so that wheneveer i wanna see the page source in browser it shows only the function nott the entire form source
11:59 < deoxxa> dileep: dude
11:59 < deoxxa> dileep: what
11:59 < deoxxa> seriously
12:00 < deoxxa> wait you mean you want to generate html with javascript?
12:00 < aashik> can anyone tell me how to use the node.js in domino xpages
12:00 < aashik> any sample app
12:00 < deoxxa> aashik: isn't that the lotus notes thing?
12:01 < aashik> yes
12:01 < deoxxa> aashik: i don't think you're going to find "any sample app"
12:04 < aashik> deoxxa: ok fine,there also using the server side script only, i am new to node.js if i get the guidance it will be helpful
12:07 < aashik> anyone help me with sample node.js code using in domino xpages and how to implement it
12:08 < dileep> deoxxa,yes
12:11 < foobar321> Hi. What are good template engines for node.js ? I'm looking for some kind of comaprsion. And probably sth simmilar to PHP
12:11 < foobar321> I'm dissapointed with Jade
12:12 < Doikor> I've been using this http://mustache.github.com/ or the micro templates from http://documentcloud.github.com/underscore/#template
12:14 < foobar321> I'm looking for sth that will fit to jQueryMobile. That is possibility to render multiple pages on one
12:15 < foobar321> And all these templates langues missing the syntax: IF HTML HEADER was not ADDED INclude('HTML-HEDAER'); I need that kind of syntax of every of my "view".
12:31 < mscdex> isaacs: where be ircretary?
12:52 < mahesh> any help on using tap device ?
14:20 < pringlescan> Hello all. I was wondering if anyone knows of a library that handles anchor hashes for the purpose of AJAX Crawling from Google and Bing?
14:25 < Pitel_IPEX> is there some easy way to make some callback make synchronous? eg. wait until the whole underlying callbacks are processed?
14:28 < mscdex> Pitel_IPEX: no
14:28 < mscdex> Pitel_IPEX: unless you execute the callback immediately inside whatever function you're passing it to
14:28 < mscdex> but that's kind of silly
14:28 < mscdex> if that's always the case
14:32 < Pitel_IPEX> I have a method in coffeescript class which does simple mysql select. If it finds just 1 result, it should return true, otherwise false. I also have mocha test for this method, but I can;t find way to synchronize it properly, because the query method has callback for processing results, and the test is not waiting for it to finish.
14:32 -!- mode/#node.js [+o piscisaureus_] by ChanServ
14:34 < clocKwize> Pitel_IPEX, gist your code and test
14:35 < gildean> Pitel_IPEX: why would the handling of the callback differ by the number of results?
14:35 < deoxxa> Pitel_IPEX: you can't do that
14:35 < gildean> i mean, can't you just make the callback once the queries are done, no matter how many results
14:35 < deoxxa> Pitel_IPEX: you can't say "ok node, please stop doing everything and just hold on while i talk to the database for a bit. don't you dare do any processing in the meantime."
14:36 < deoxxa> Pitel_IPEX: that kind of defeats the whole purpose of having the callback-driven program flow that most javascript code uses
14:37 < deoxxa> Pitel_IPEX: perhaps you should consider PHP if you want your entire application to block while you wait for a response from a remote service like a database
14:39 < Pitel_IPEX> http://pastebin.com/0f94cVcD here is the code and test
14:40 < Pitel_IPEX> the lines 4 and 5 should be more indented
14:41 < Pitel_IPEX> http://pastebin.com/W12cVKBq like this
14:41 < Pitel_IPEX> deoxxa: I don't mean to block the whole app, I just want the query and it's processing be "atomic"
14:41 < deoxxa> no, you mean to block the whole app
14:42 < deoxxa> that's what you're saying, lol
14:42 < clocKwize> https://gist.github.com/4135898
14:42 < clocKwize> thats what you want
14:43 < deoxxa> or better, `cb(err, result.length === 1)'
14:43 < deoxxa> so you still have the error argument from mysql if there is one
14:44 < clocKwize> you want a function that only returns when it has a result, which means it needs to wait for mysql to respond
14:44 < clocKwize> which is blocking
14:44 < clocKwize> what you should do is return straight away and call a acllback when its done
14:46 < clocKwize> deoxxa, is that better? exposing mysqls errors
14:46 < clocKwize> it could be handled better
14:46 < clocKwize> but I don't think passing around error objects is that
14:46 < deoxxa> that's probably the best way to do it
14:46 < Pitel_IPEX> hmm, okay, I guess the mind-switch will take me longer than I thought :)
14:46 < deoxxa> remember that errors like aren't meant to be recovered
14:47 < deoxxa> they're meant to be "hey everything has gone wrong and here's some information about why"
14:48 < deoxxa> not "here's a potential problem that's not fatal"
14:48 < deoxxa> s/like aren't/like that aren't/
14:48 < clocKwize> yes, thats what exceptions are for
14:49 < clocKwize> that still doesn't make absolute sense, but ok :)
14:50 < clocKwize> raising exceptions for exceptional circumstances are good. catching them and doing something about it to recover  is good
14:50 < clocKwize> passing error objects around that can easily be ignored and exposing internal mysql errors is probably not good
14:51 < deoxxa> how can you ignore them?
14:51 < deoxxa> usually the first argument of a callback function is `err'
14:51 < deoxxa> it's not like you can say "i didn't know it was there"
14:51 < clocKwize> by not looking at err
14:51 < deoxxa> if you do nothing about it, it's because you wilfully did nothing about it
14:51 < clocKwize> you've got to phyiscally check it every time you call something
14:54 < moosgummi> hello there
14:54 < gildean> i like that the function doing something like db-queries etc. doesn't handle the errors or anything, it just takes arguments and makes the queries and then fires the callback
14:54 < gildean> wheter it be error or not
14:54 < gildean> and the function that actually handles the event should handle the error or the result
14:54 < moosgummi> did someone here ever used a singleton to manage sequelize?
14:54 < clocKwize> by that logic, its better to use mysql_escape_string instead of having an ORM escape your queries for you. You can easily forget to escape a piece of input, and it can cause massive problems if you do. Its best to let something else worry about it so you have 1 less thing to consider
14:54 < moosgummi> i'm trying to come up with a good concept to manage interaction with my DB server
14:56 < moosgummi> i found information on this topic here: http://stackoverflow.com/questions/12487416/how-to-organize-a-node-app-that-uses-sequelize and I think it's a good approach, but I'm curious if someone got experience with this technique :)
15:01 < trypwire> hey all
15:01 < trypwire> i'm working on a node CLI tool. is there a way I can print debug info only in a DEV environment?
15:01 < trypwire> i know Express makes it easy for server-side code
15:01 < deoxxa> trypwire: define dev environment
15:01 < matbee> you mean console.log?
15:01 < matbee> :P
15:01 < deoxxa> the convention seems to be reading NODE_ENV
15:02 < trypwire> deoxxa: well the "production" environment would be the standard usage, as if you installed from npm
15:02 < trypwire> and the "dev" environment would be a special case in which I get to see more debug info as I'm working on it
15:02 < deoxxa> well you're going to need to make it a runtime option
15:03 < deoxxa> so your choice is really about how you signal that intent to the application
15:03 < trypwire> mm ok
15:03 < deoxxa> whether that be a command line argument, environment variable, etc etc
15:03 < trypwire> is there a community preference? or a standard option?
15:04 < deoxxa> in general, command line utilities use -v or -d for that kind of thing
15:05 < deoxxa> (this isn't specific to node)
15:05 < deoxxa> with -v being "a little verbose", -vv being "a bit more", -vvv being "a lot more" etc
15:05 < trypwire> ahh you're right
15:05 < trypwire> i have used tools like that
15:05 < deoxxa> or you can take the approach of v8 and expose an option for each thing being logged
15:05 < trypwire> naw :P
15:05 < trypwire> have you used tj holowaychucks Commander?
15:05 < deoxxa> like --log_api, --log_all, etc
15:05 < deoxxa> nope
15:05 < trypwire> hm. ok
15:06 < trypwire> thanks!
15:08 < gildean> trypwire: commander works ok
15:08 < trypwire> gildean: you don't like it?
15:08 < gildean> i like the way it provides the help
15:08 < gildean> trypwire: when did i say that?
15:09 < trypwire> you didn't, sorry, "commander works ok" could be read as "it's only ok"
15:10 < trypwire> gildean: can you change the default options in commander?
15:10 < gildean> what do you mean?
15:10 < gildean> you can make up your own options as you please
15:11 < trypwire> commander offers --help and --version
15:11 < trypwire> by default
15:11 < gildean> why would you need to change those?
15:11 < gildean> but i'm pretty sure you can
15:11 < trypwire> -v // --verbose
15:11 < trypwire> makes more sense
15:11 < gildean> you can add all the options you want
15:12 < trypwire> than 'V' for version
15:12 < gildean> iirc you can also change the default methods but i'm not sure
15:12 < trypwire> oh. I guess V is version, and i could use 'v' (lowercase) for verbose
15:13 < gildean> i just made a quick cli-http-server-app with it
15:14 < gildean> with fileuploads, so you can start a simple upload-server with a simple command
15:14 < gildean> just to try it out, not much use in the app itself
15:16 < trypwire> hm.. ok… so i have the Commander code in my bin/myfile
15:16 < trypwire> and i use require("lib/main")
15:16 < trypwire> to get the main functions I want commander to call
15:17 < trypwire> but so how do I pass program.verbose to my lib/ files?
15:19 < gildean> trypwire: idk, maybe require the modules after the app has started and pass over the args
15:31 < matbee> If you have time and facebook, could you vote for my nodejs project at the global startup battle? vote.groupnotes.ca :D fear not the ugly voting interface, my group could use the help <3
15:41 < trypwire> does anyone know how I can pass Commander.js options across modules?
15:41 < matbee> <3
15:41 < matbee> :)
15:43 < trypwire> can anyone look at this for me? https://github.com/component/component
15:43 < trypwire> he has a file called index.js in the root directory
15:43 < trypwire> which simply requires ./lib/commander.js
15:47 < trypwire> but if you look at ./lib/commander.js, it's just a set of util functions
15:47 < trypwire> all of the actual program functions are in ./bin
15:47 < trypwire> so what does that index.js help with?
15:47 < trypwire> anyone? :(
15:51 < Kakera> trypwire, "bin" in package.json
16:19 < zorlax> anybody know a js lib that will display console output colored corectly in the client?
16:19 < trypwire> has anyone here used Commander.js? I have a fairly involved question
16:26 < simong> Probably silly, but how do I get the number of bytes that a buffer occupies?
16:26 < simong> err
16:26 < simong> *How can I get the number of bytes in a buffer
16:26 < Warpten> Buffer.length
16:27 < simong> But that's the number of bytes that is reserved for the buffer right?
16:27 < Warpten> http://nodejs.org/dist/v0.8.14/docs/api/buffer.html#buffer_buf_length
16:27 < simong> How do I get the size of the contents?
16:27 < Warpten> Oh
16:27 < Warpten> I see what you mean now
16:28 < Warpten> Depends on what you store in it, i guess
16:28 < Kakera> you can't, basically
16:29 < Warpten> Well you can have a raw idea using toString(encoding) and length but apart from that ...
16:29 < gildean> simong: you can at least tell the amount of bytes written to the buffer
16:29 < Kakera> did anyone else get a pretty rude notice from younnes 
16:29 < simong> How? That's what I need :)
16:29 < gildean> count all those in the writes together and you have the size of what's inside the buffer
16:31 < gildean> http://nodejs.org/api/buffer.html#buffer_buffer_inspect_max_bytes
16:31 < gildean> sorry, meant to paste this: http://nodejs.org/api/buffer.html#buffer_buf_write_string_offset_length_encoding
16:32 < simong> Unfortunately, I don't have any control over the code that's writing to the Buffer
16:32 < Kakera> I think this is just for a sanity check
16:32 < Kakera> when you create an empty buffer, it's not actually empty
16:32 < Warpten> ^
16:32 < Kakera> it's filled with garbage
16:33 < Warpten> you need Buffer.fill(0) to "empty" it
16:33 < Warpten> I personally have my own Buffer wrapper that has its own internal offset pointer
16:33 < Warpten> Along with fancy write/read methods
16:34 < Warpten> That way i always know the actual size of the content
17:12 < eduardo_> hey guys! happy thanksgiving americans!
17:14 < eduardo_> anyone awake?
17:15 < gildean> considering it's 19:13 here, i suppose so
17:15 < zemanel> hello
17:16 < eduardo_> guys can anyone help me it's making me nuts. i am using express with passport, trying to use FB authentication. after my callback is called, for some reason my page is rendered as "[object Object]" and i see the same in my console log. changing the url to anything, sticks it to the same output. its not being done from my code. any idea?
17:19 < nathan7> eduardo_: '[object Object]' is just Object.prototype.toString()
17:19 < nathan7> >> ({}).toString()
17:19 < purr> nathan7: (string) '[object Object]'
17:20 < eduardo_> nathan yeah , but i can't figure out what's causing it
17:20 < eduardo_> actually it happens if i call:res.redirect('/login.html');   so that makes me think there's some problem lower down
17:20 < nathan7> Fire node-inspector up
17:20 < eduardo_> any redirect causes it
17:20 < eduardo_> nathan whats that
17:21 < rudiX> eduardo_:  console.log on browser or terminal ?
17:21 < eduardo_> terminal
17:21 < Jononomo> I am running an example from The Node Beginner Book by Manuel Kiessling.
17:22 < rudiX> eduardo_:  try JSON.parse(object) 
17:22 < Jononomo> but having trouble with child_process
17:22 < eduardo_> I think it's related to this. the URL shows as http://localhost:8080/login.html#_=_
17:22 < eduardo_> the #_=_ is some bug crap from facebook
17:23 < Jononomo> the line that is not working is: exec("ls -lah", function (error, stdout, stderr) { content = stdout; }
17:23 < rudiX> basically facebook ain't got access to http://localhost/ eduardo_ 
17:23 < eduardo_> rudiX: i dont think that's the problem. it doesn't need to. i DO get an authenticated callback
17:23 < Jononomo> I get nothing in my stdout, and instead my stderr contains the message: "/bin/sh: /bin/ls -lah: No such file or directory"
17:23 < eduardo_> i get my user profile
17:23 < eduardo_> but the server gets jacked up afterwards
17:24 < Jononomo> any ideas?
17:24 < rudiX> eduardo_:  probably you'r not console.log(right.object)
17:24 < rudiX> like trying only console.log(right);
17:26 < Jononomo> can anyone hear me?
17:27 < eduardo_> rudiX: correct :)
17:28 < nathan7> eduardo_: Yeah, it won't work on localhost
17:28 < nathan7> eduardo_: I got that too
17:28 < nathan7> Run it on a public host and it works
17:32 < _smf_> bnoordhuis:  you around?
17:36 < Jononomo> I guess I'll just ask my question on stackoverflow.com
18:10 < der_On> hi anyone here using geddy.js?
18:22 < ben_alman> can anyone recommend an inspect library that will NOT show global as a big ass object but instead like [object global]
18:22 < ben_alman> because OMG USELESS
18:34 < jtomasrl> im making a little API and i want it to authorize other apps to access to it, should i use oauth?
18:40 < zemanel> jtomasrl: would probably be best to use a standard solution that rolling your own
18:40 < jtomasrl> zemanel: should i add an oauth provider to my app?
18:41 < zemanel> if you're implementing authentication/authorizarion, aren't you the provider?
18:42 < jtomasrl> that's right
18:42 < sadasd> sgssergr
18:43 < sadasd> rwwwwwwgrggggggggg
18:43 < zemanel> jtomasrl: http://oauth.net
18:44 < jtomasrl> zemanel: so i need an oauth server along with my api server
18:46 < zemanel> jtomasrl: ps.: i'm not a expert, basically consumed a few api's sometimes. But i guess so, you need to implement the server side to act as a provider 
18:47 < zemanel> there are probably libraries that already do that
18:47 < MI6> joyent/node: isaacs streams2 * 25acfcd : streams2: Abstract out onread function (+44 more commits) - http://git.io/-Cmq9A
18:48 < MI6> joyent/node: isaacs streams2 * daa1952 : streams2: Writable organization, add 'finishing' flag (+5 more commits) - http://git.io/xhfLBA
18:48 < MI6> joyent/node: isaacs streams2-net * 8b8cd4b : streams2: Remove function.bind() usage  It's too slow, unfortunately. (+7 more commits) - http://git.io/mqvlgA
18:49 < mclenithan> hey, whats a good twitter api module for a simple twitter feed div?
18:50 < mclenithan> i am using express framework
19:12 < bsn> node-twitter
19:17 < Xeon06_> Hey guys
19:17 < Xeon06_> Stumbling upon some really old code
19:18 < Xeon06_> Someone doing require('system') then getting env varibles from there
19:18 < Xeon06_> Does that look like an external module, or was that the way to do things once upon a time?
19:19 < Xeon06_> Wait nevermind
19:19 < Xeon06_> I'm stupid
19:19 < Xeon06_> That wasn't even a Node.js script
19:19 < Xeon06_> Disregard
19:20 < matbee> lol
19:41 < Jacopo> Hi everyone. Is there a way to check is "setEncoding" has been already called on a HttpServerRequest object?
19:45 < Jacopo> *if
19:46 < matbee> If you have time and facebook, could you vote for my nodejs project at the global startup battle? http://vote.groupnotes.ca :D fear not the ugly voting interface, my group could use the help <3
20:30 < mscdex> Jacopo: yes, check for obj._decoder iirc
20:41 < exit> hey there, just trying to wrap my head around closures.  I made this example, would this be considered using closures? http://jsfiddle.net/FP4X3/
20:42 < deoxxa> exit: yep, pretty sure those are closures
20:43 < exit> deoxxa: I guess that could just go on forever huh?
20:55 < AAA_awright> substack: You can create a private key+certificate in a single line in OpenSSL, something like `openssl req -utf8 -newkey rsa:2048 -keyout test-privkey.pem -nodes -subj '/DC=org/DC=OpenSSL/DC=users/UID=123456+CN=John Doe' -out test-cert.pem
20:56 < AAA_awright> $ openssl req -utf8 -newkey rsa:2048 -keyout test-privkey.pem -nodes -subj '/DC=org/DC=OpenSSL/DC=users/UID=123456+CN=John Doe' -out test-cert.pem
20:56 < AAA_awright> And Node.js does report the public key and modulus of connecting peers
20:57 < MI6> joyent/node: isaacs v0.8 * fb5c7f0 : blog: Don't filter out non-latest release notes  This causes too many peo (+1 more commits) - http://git.io/_GdCeQ
21:09 < AAA_awright> Oops, left off -x509, that signs it:
21:10 < AAA_awright> $ openssl req -utf8 -newkey rsa:2048 -keyout test-privkey.pem -nodes -subj '/' -x509 -out test-cert.pem
21:11 < matbee> If you have time and facebook, could you vote for my nodejs project at the global startup battle? http://vote.groupnotes.ca :D fear not the ugly voting interface, my group could use the help! FJEAR NODE! :P
21:14 < MI6> joyent/node: isaacs created branch v0.8.15-release - http://git.io/0PcMvQ
21:14 <@mbalho> matbee: quit spamming
21:15 < Zelest> how does one deploy nodejs in production? like, start it on bootup and such automagically?
21:15 < matbee> fine
21:15 < matbee> :)
21:16 < matbee> Just lookin for some node lovin' IS ALL! :'(
21:19 < nathan7> Zelest: I have my services hook into my systemd
21:19 < nathan7> Zelest: write 'em a systemd file and be done with it
21:20 < nathan7> I really ought to write a Foreman thingy for that
21:20 < nathan7> so I can just write procfiles
21:21 < AAA_awright> Zelest: There's a ton of different service management stuff and they're usually distribution-specific. On Gentoo it's a 10 line file, optionally a configuration file, and a symlink that specifies which init scripts to start on boot/etc
21:21 < mscdex> Zelest: i use upstart on ubuntu
21:22 < mscdex> Zelest: and sysvinit scripts on CentOS
21:22 < Zelest> Ah, so basically "node app.js > node.log 2> error.log &" in whatever thingie that starts the processes at bootup?
21:23 < nathan7> http://sprunge.us/RBJT #my /etc/systemd/system/seaport.service
21:23 < nathan7> I could probably use systemd's restart magic, yeah
21:26 <@konobi> mscdex: what? no nodejs upstart replacement yet!?
21:32 < Zelest> Aw, a simple /etc/rc.d/nodejs was enough. :D
21:32 < Zelest> cheers
21:36 < ettinger> esundahl: i have a node-startup script
21:36 < mscdex> konobi: node.js rules!
21:36 < ettinger> Zelest: i mean
21:36 < ettinger> https://github.com/chovy/node-startup
21:37 < Zelest> ettinger, cheers, it seems like archlinux uses some other sort of init scripts though.
21:38 < nathan7> Zelest: Arch uses systemd these days
21:38 < nathan7> Zelest: Unless you're on a really old version of Arch
21:38  * Zelest shrugs
21:38 < Zelest> latest :)
21:38 < nathan7> Zelest: then you should be booting off systemd
21:38 < Zelest> i copied a init script from their wiki and changed the command
21:38 < Zelest> which seems to work
21:39 < nathan7>  ~ ⮀ sudo readlink /proc/1/exe
21:39 < nathan7> /usr/lib/systemd/systemd
21:39 < nathan7> on any modern Arch system
21:40 < ettinger> Zelest: i've only tested my script on debian.
23:11 < Jacopo> mscdex: thanks man! I appreciate this.
23:13 < MI6> joyent/node: Ben Noordhuis master * 335f208 : crypto: allow negative numbers in setOptions()  OR'ing together two large - http://git.io/bWwucQ
23:44 < _Tristan> I need eventEmitter in the browser. Anybody know of a good implementation? There seem to be several and I don't know which to choose.
23:48 <@mbalho> _Tristan: npm install browserify -g && browserify -r events
23:49 <@mbalho> _Tristan: then put the script it outputs into a browser and use these docs http://nodejs.org/api/events.html
23:49 < _Tristan> thanks
--- Log closed Sat Nov 24 00:00:03 2012
