--- Log opened Wed Dec 12 00:00:01 2012
00:00 < sha0coder> oks
00:03 < kludgy> Hi all, is this the right place to ask about vowsjs?
00:04 < mdedetrich> harro
00:07 < baz> Hello anyone. I really need some help with regards to a linking problem in my nodejs addon - anyone experienced with this over here?
00:10 < mscdex> baz: what linking problem?
00:11 < kludgy> Hi all, could someone direct me to a channel for vowsjs questions?
00:11 < baz> I am attempting to make the "scrypt" library as an addon for the community (and to help me figure out how to do this stuff). It is a C library (just to note this). It calls a function SHA256_Update, but the function declared in the source code is not called
00:11 < baz> I don't know what is called, so I think it is a linking error
00:11 < baz> I have a gdb backtrace which provides no clues at all
00:12 < baz> In the end, I tried the trusty ol printf statement to make sure that it was being called. The printf statement never gets called (i.e. no output)
00:12 < baz> I am at my wits end
00:14 < mscdex> baz: do you have this project uploaded somewhere?
00:15 < baz> yes, I have it on github
00:15 < baz> Let me quickly check that it is the correct version
00:15 < baz> and I will post the link after the check
00:19 < baz> Hi mscdex, the github repo is https://github.com/barrysteyn/node-scrypt
00:19 < baz> Shout if you need any help
00:20 < samholmes> Where do the "Options" go? https://github.com/visionmedia/connect-redis
00:21 < SomeoneWeird> hmmmmmmm
00:21 < SomeoneWeird> scrypt
00:21 < baz> Yup, scrypt
00:21 < samholmes> scrypt?
00:21 < SomeoneWeird> and why would you need that
00:21 < SomeoneWeird> :p
00:22 < baz> I have met the author (Colin Percival) and he is VERY clever (a child prodigy). It makes for a superior password hash, better than bcrypt
00:22 < SomeoneWeird> that it does :)
00:22 < Zelest> he was the security officer for freebsd.. that's enough argument for me :D
00:22 < baz> The thing is, it is available on Python, and Ruby, and Haskal. Dammit, I want to make it available to the Node community as well
00:23 < samholmes> nvm
00:23 < baz> Also, scrypt is used in Tarsnap, his product that he calls "Online backups for the truly paranoid"
00:23 < baz> So it is in production use
00:24 < baz> I am using Node 0.8.15 (if that is what you are asking samholmes)
00:24 < SomeoneWeird> so what's the problem?
00:24 < samholmes> baz: no, nvm. :P
00:25 < mscdex> baz: it compiled for me
00:25 < baz> SomeoneWeird: It seg faults.
00:25 < mscdex> oh
00:25 < baz> mscdex: It compiles for me as wel
00:25 < baz> But it segfaults
00:25 < mscdex> baz: do you have a test program?
00:25 < mscdex> to test the functionality i mean
00:25 < baz> Yup, let me upload it to github
00:26 < Hotroot> This should be fun. I have to write a poker hand ranking, and I can't even rip someone off because PGPoker uses special rules
00:26 < baz> I have compiled the C source and used that as a test (if this is what you mean).
00:26 < baz> I know where it seg faults
00:26 < mscdex> oh, i just meant a simple test.js or something
00:27 < baz> Yeah, I will put it up as a gist now
00:27 < baz> Hold on...
00:27 < mclenithan> i linked the demo incase anyone is interested in my silly repo https://github.com/mclenithan/restaurant
00:29 < baz> Here is the gist with a quick test for scrypt: https://gist.github.com/4263742
00:29 < kaoD_> hi
00:29 < kaoD_> some kind of middleware framework like Connect but for sockets?
00:29 < baz> Also mscdex, I think I know where it is seg faulting, I just don't know why :(
00:31 < SomeoneWeird> baz, what line?
00:31 < SomeoneWeird> or functions or whatever
00:32 < baz> In the file sha256.c
00:32 < baz> When the function SHA256_Update is being called, the code in sha256.c is not being called
00:32 < baz> I don't know what is being called, but that code is note
00:33 < baz> I can put a backtrace if you want
00:33 < baz> the line of the code is 335
00:33 < baz> in sha256
00:34 < samholmes> I need help with connect-redis
00:35 < Hotroot> samholmes: I use it, what's up?
00:35 < samholmes> I ran `keys *` in my redis-cli and all I see is the foo key which I set to 'bar', no 'sess:' keys
00:35 < samholmes> Hotroot: ^ that's
00:35 < samholmes> It looks like my session store is working because my app is working fine. :\
00:36 < samholmes> However, when I restart my app, the session data is lost again.
00:36 < Hotroot> Are you sure you're using the right db?
00:36 < Hotroot> db 0? 
00:37 < Hotroot> Can I see the code? 
00:37 < samholmes> Hotroot: `client list` shows my redis-cli and my app, and they have db=0
00:37 < Hotroot> kk
00:37 < Hotroot> I use connect-redis and it stores fine after db/app shutdown
00:37 < Hotroot> Could be redis configuration too
00:38 < Hotroot> If you have both save methods turned off
00:38 < Marcky> I would like to know how safe is nodejs for public websites?
00:38 < Cronoh> not safe at all for the public
00:38 < mscdex> baz: hrmmm i get a segfault at a different place
00:38 < mscdex> with gdb
00:38 < Cronoh> too powerful for the public
00:38 < baz> Arg - no :(
00:38 < Hotroot> It would blow their tiny minds
00:39 < samholmes> Hotroot: http://pastebin.com/iVJ9Jeb4
00:39 < baz> Where do you get the segfault
00:39 < Marcky> nah seriously...is it safe to use for public applications, is it easy "hackable"?
00:39 < Cronoh> well if u can hack it easily i suggest you get to work
00:39 < samholmes> Hotroot: save methods?
00:39 < samholmes> Hotroot: you mean snapshotting and AOF?
00:39 < Marcky> what about server sources?
00:39 < Marcky> its js file
00:40 < Hotroot> samholmes: Yeah
00:40 < Hotroot> Marcky: Pretty sure he's joking. Lots of places use node. 
00:40 < Cronoh> u should hack ebay
00:40 < Cronoh> they are using node js
00:40 < Hotroot> It *is* still in beta, but look at how often massive PHP bugs are found
00:40 < samholmes> Hotroot: Isn't that just for persistency to disk? My redis server can run completely in memory and my app can start and restart many times, and it shouldn't effect my redis server, right?
00:40 < Hotroot> samholmes: Btw, you are using old express syntax
00:41 < Hotroot> samholmes: Oh, you mean you lose sessions when the app closes and redis stays open?
00:41 < mscdex> baz: something to do with sse3-optimized memcpy
00:41 < Hotroot> I thought you meant when redis closes
00:41 < mscdex> er ssse3
00:41  * samholmes is using express 2.x
00:41 < samholmes> Hotroot: Yes, that's what I mean.
00:42 < baz> yikes
00:42 < Hotroot> samholmes: I can't see your redis config =P
00:42 < mscdex> give me a few here and i'll see what's up
00:42 < baz> That does not sound an easy bug to fix
00:42 < samholmes> Hotroot: Nope, redis stays open, but it looks like nothing is being written to the database from my app. I should be able to run `keys *` and see the "sess:" keys, are I?
00:42 < Hotroot> Not *everything* has access to globals ;P
00:43 < Hotroot> samholmes: If nothing is being written, sessions wouldn't work
00:43 < Marcky> Well i'm just kinda new to node so I dont know much. I am currentl developping an application using nodejs+socket.io+node-mysql
00:43 < Hotroot> I'd like to see global.config.redis.options though
00:43 < samholmes> Hotroot: http://pastebin.com/MAKyFjRG
00:43 < Marcky> so i was kinda worried about the security. like what if someone browse my server .js files or something
00:43 < Cronoh> ask yourself
00:43 < Cronoh> how they would do that
00:43 < Hotroot> samholmes: No, I mean what you pass to new RedisStore
00:44 < samholmes> Oh.
00:45 < Marcky> well i've read over google and some people talk about the way is use v8 jit
00:45 < Rojuinex> Anyone know of a good module for writing front end windows applications?  I know of NodObjC.  Are there any for Windows and Linux?
00:45 < Marcky> and how its not always safe
00:45 < Cronoh> what isnt safe about it
00:45 < samholmes> Hotroot: http://pastebin.com/LUFzcKdE
00:46 < samholmes> That's apart of the global.config
00:46 < Marcky> well were do you put your server files when you are developping with nodejs? Like actually my application also use php for some other part and my server.js is on my apache htpdocs folders
00:47 < Cronoh> you need a bit more studying on thesubject, node will basically replace apache, it doesnt not run from within apache
00:47 < Hotroot> ^^
00:47 < Hotroot> samholmes: Hmm, I pass this
00:47 < Hotroot> {"client": db, "host": "127.0.0.1", "port": 6379, "db": 0}
00:48 < Hotroot> db = redis.createClient();
00:48 < samholmes> I omitted the "client" option
00:48 < samholmes> If I omitted it, what's it using?
00:48 < samholmes> Maybe it failed, and is falling back to memory store.
00:48 < Hotroot> I don't know, but this setup works for me
00:48 < Marcky> yea I know that nodejs is my http server
00:48 < Hotroot> I use redis anyway, so no harm done
00:49 < Marcky> So I could put my server.js anywhere on my pc and run it?
00:49 < Hotroot> Marcky: Sure
00:49 < Marcky> ohh
00:49 < samholmes> Hotroot: I thought connect-redis deps on node-redis?
00:49 < samholmes> And if it deps on it, then why can't it create the damn client for me? :P
00:49 < Hotroot> Mine is in Desktop/code/PaiGowPoker/
00:50 < samholmes> Wait, it must be creating a client, because I see it in `client list`
00:50 < Hotroot> samholmes: I don't know =P Just try this.
00:50 < Cronoh> mines in C:\node\ (wait wat windows? yup)
00:51 < Marcky> Oh man I get it to work this way now
00:51 < Marcky> great
00:51 < Cronoh> when u use php and node, for example u have a website and chat server
00:51 < Cronoh> your php still run on apache, then u tell your chat to connect to node server (Which is different + seeperate server)
00:52 < Cronoh> ofcourse you CAN use node to server all your php file if u want to
00:52 < Cronoh> but i think that is more work and not what node is best for
00:52 < SomeoneWeird> ewww apache
00:52 < zomg> SomeoneWeird: you said "eww" now and not when he mentioned PHP? ;)
00:52 < Cronoh> lol
00:53 < Marcky> well believe me..I dont like php that much
00:53 < zomg> lol
00:53 < Cronoh> haters gon hate my php! lol jk php sucks but it isnt horrible if u using good framework
00:53 < Marcky> its just that I have to use it somehow
00:53 < Cronoh> im using symfony2, makes php bareable
00:53 < zomg> PHP is not that bad but yeah it requires you to have a nice framework + anyone else you're working with must also be pretty good at it  or they will just make a mess
00:53 < Marcky> what about YII?
00:53 < samholmes> Hotroot: Cannot find module, redis
00:54 < Cronoh> havent used yii
00:54 < Hotroot> samholmes: 0.o
00:54 < Hotroot> npm install redis
00:54 < samholmes> Hotroot: I guess require('redis') doesn't work even though connect-redis deps on it?
00:54 < Hotroot> I guess
00:54 < Marcky> Well thanks hotroot and Chronoh!
00:55 < Marcky> I feel more confident now 
00:55 < Hotroot> No prob. Good luck with node, it's quite fun.
00:55 < Cronoh> yw, learn more about node it will blow your mind if you coming from simple php perspective
00:55 < Hotroot> You just have to understand it
00:55 < Marcky> Yea well I just started it 2 days ago 
00:55 < Hotroot> Just keep writing apps
00:55 < samholmes> Hotroot: This seems like a waste, I have redis in connect-redis/node_modules, then I'll install another copy of redis? What's even the point of connect-redis dep-ing on redis if it doesn't even use it? :S
00:55 < CharlieM75> just started trying to figure this out myself.. what's ... mean in the node terminal?
00:55 < baz> mscdex: I got it working!
00:56 < Hotroot> samholmes: It teaches connect how to use redis as a sessionStore
00:56 < Cronoh> i jut learned node like 4-5 days ago too, and over the weekend i made my first chat website using symfony2 and node, so u can sign up and make your own chat, has admin/moderators/regular chat functions etc
00:56 < baz> It seems that node has symbols for SHA256_Update and SHA256_Final
00:56 < Hotroot> It's probably liek 2k of ram to have it included =P
00:56 < Cronoh> the whole server code is only like 200 lines so far, cant believe i put together the whole site in like 2 days
00:56 < samholmes> Hotroot: You mean of disk space?
00:56 < baz> nm `which node` | grep SHA256_Update and nm `which node` | grep SHA256_Final
00:56 < Marcky> cronoh
00:57 < baz> The above command proves the point
00:57 < Marcky> are you using socket.io?
00:57 < Hotroot> samholmes: Isn't lib code stored in RAM on load?
00:57 < Cronoh> yes
00:57 < Marcky> oh sweet
00:57 < baz> Changing the names of those functions and I get it to work
00:57 < CharlieM75> is there some sort of help/tutorial/documentation for the Node terminal that gets installed
00:57 < CharlieM75> I don't get how to use this thing
00:57 < samholmes> Hotroot: Oh right, I see.
00:57 < baz> That is not elegant
00:57 < baz> Is there a better way?
00:58 < Hotroot> CharlieM75: That isn't the normal way to run code. You normally node myfile.js
00:58 < CharlieM75> I tried doing that at the terminal
00:58 < samholmes> Hotroot: Well, I did what you said and require()d redis and created a client and passed it along through the options, and still no cigar. :\
00:58 < CharlieM75> and now it gives me a ... prompt
00:58 < Hotroot> CharlieM75: You don't do it in the terminal
00:59 < CharlieM75> command prompt?
00:59 < Hotroot> From the code folder, say you have myFile.js. Just type "node myFile.js"
00:59 < Hotroot> Oh, you on windows?
00:59 < CharlieM75> yes
00:59 < Hotroot> Can't help you there
00:59 < CharlieM75> I need to set up an env variable I imagine
00:59 < Cronoh> that works in windows too
00:59 < Cronoh> <-- wnidows
01:00 < Cronoh> charlie
01:00 < s5fs> CharlieM75: can't you just supply the full path to the node executable? ie, c:\program files\node-dir\node.exe myscript.js
01:00 < Cronoh> if u ran windows exe fore node
01:00 < Cronoh> it should have made the enironment variable 'node' for you
01:00 < Hotroot> samholmes: Here's my setup that works. Can't help you if it's a redis problem though (config, etc.) because I don't know enough about redis
01:00 < Hotroot> https://github.com/Hotrootsoup/PaiGowPoker/blob/master/server.js
01:01 < CharlieM75> I see no environment variable for node
01:02 < Marcky> allright guys thanks a bunch, im off now! cya and good luck with your apps
01:03 < Cronoh> just add it then charlie
01:03 < Cronoh> i can look up mine if u need the exact but should be simple
01:05 < samholmes> It looks like it's running the `info` command when I do client list
01:05 < CharlieM75> would be helpful
01:06 < Cronoh> i just have this on the end of my Path system variable:  ;C:\Program Files\nodejs\
01:06 < Cronoh> thats my install dir, which has node.exe
01:07 < CharlieM75> I have that as well
01:07 < samholmes> Hotroot: do you use hiredis?
01:07 < Cronoh> then open cmd prompt and type node
01:08 < CharlieM75> there we go
01:08 < Cronoh> then navigate to the folder where u have your server file
01:08 < Cronoh> in cmd promopt
01:08 < Cronoh> and then type ndoe serverFile.js 
01:08 < CharlieM75> already running
01:08 < Cronoh> and watchh the magic
01:08 < Cronoh> ok
01:24 < myndzi> can somebody recommend a module for managing job queues and the like?
01:24 < drudge> myndzi: looked at kue?
01:25 < chilts> myndzi: try async
01:25 < chilts> do you mean internal or external to your program?
01:26 < myndzi> i'm reading about kue right now ;)
01:26 < myndzi> external, something where i can write separate services to perform tasks and they won't all crash together :P
01:26 < myndzi> kue's web ui looks pretty useful too
01:26 < myndzi> i just wanted to see if there was a 'house name' so to speak for this purpose :)
01:27 < samholmes> Hotroot: Oh gosh... It was the mobile app.js file that we resetting the session store. -.- My bad
01:27 < mscdex> baz: looks like there is a memcpy that's copying with overlapping regions
01:28 < mscdex> from what i gather
01:31 < ryanrolds_w> myndzi, async
01:32 < ryanrolds_w> myndzi, https://github.com/caolan/async#queue
01:32 < myndzi> i think kue looks perfect :)
01:33 < myndzi> can async be shared among multiple processes/servers?
01:33 < deoxxa> myndzi: nope
01:33 < deoxxa> ryanrolds_w: read the rest of his question, async doesn't fit
01:33 < deoxxa> (his and/or her)
01:36 < myndzi> his :)
01:36 < myndzi> anyway, i didn't know what to make of the kue homepage but i found the git repo, it looks good to me
01:36 < myndzi> thanks
01:45 < mscdex> baz: ok, i think i found the problem. there was a function name collision between scrypt and openssl
01:46 < baz> Yeah
01:46 < baz> I know
01:46 < mscdex> :S
01:46 < baz> If I change the names, things work :)
01:46 < baz> I just don't know how to do this elegantly
01:46 < baz> Any suggestions?
01:46 < mscdex> change the scrypt source files, that's what i just did
01:46 < baz> I can't wrap things in a namespace?
01:46 < baz> Yeah, that works
01:46 < baz> But :( :( Not elegant
01:46 < mscdex> that's what some guy who did a ruby binding to scrypt did too
01:46 < baz> Also, I don't want to alter his files
01:47 < mscdex> well, then push him to change upstream ;-)
01:47 < baz> mscdex, thanks so much for your help
01:47 < baz> I am gonna put this out very soon so the Node community can enjoy it
01:47 < baz> I would like to give a contribution credit to you
01:47 < baz> You keen?
01:48 < mscdex> i didn't really do anything heh
01:49 < baz> Still :)
01:49 < mscdex> btw -- i changed more than just the sha256_* functions
01:49 < mscdex> dunno if it makes any performance differences or not
01:49 < baz> What else did you change?
01:49 < Azra-el> so what the hell am i supposed to use for clustering? default api or learnboost/cluster?
01:49 < mscdex> baz: here's what the ruby binding guy changed: https://github.com/Freaky/scrypt/commit/e64612807110ba5933df8a2b1269288e56dc57e6
01:50 < mscdex> baz: i made those changes + i had to make the appropriate changes in scryptenc.c
01:51 < samholmes> How do I update to node 0.8?
01:52 < samholmes> From node 0.4?
01:53 < samholmes> quickly, please. D:>
01:53 < mscdex> samholmes: ./configure && make && make install
01:53 < mscdex> samholmes: or use the pre-built distro tarballs
01:53 < mscdex> :-)
01:53 < samholmes> this is for linux
01:53 < warz> he gave you linux steps
01:54 < samholmes> I'm trying to get my server back up but I can't install certain modules unless I have node 0.8
01:54 < samholmes> So, I download the 32 bit tarball?
01:54 < samholmes> then uncompress it, then cd into ./configure 
01:55 < mscdex> if you're download the pre-built tarball, you just extract it into some place in your $PATH, like /usr/local
01:55 < mscdex> then it should just work
01:55 < Azra-el> anybody any tips for me? cluster default api or learnboost cluster? :)
01:55 < mscdex> otherwise download the source tarball and do the `./configure && make && make install` dance
01:56 < deoxxa> Azra-el: neither
01:56 < Azra-el> deoxxa .. .great .. then what? :)
01:57 < samholmes> mscdex: should I wget the 32bit or 64?
01:57 < mscdex> samholmes: depends on your OS installation
01:57 < deoxxa> Azra-el: do what people have been doing for the last 30 years or so and write your application so it can live on multiple machines - you'll have to do 90% of that job to get cluster-compatible code anyway, but if you do it at your application level you can expand out to multiple machines instead of just multiple cores
01:57 < niggler> hey is msdn working for you guys?
01:57 < niggler> http://msdn.microsoft.com/
01:58 < mscdex> samholmes: 64-bit OS, 64-bit binaries; 32-bit OS, 32-bit binaries
01:58 < samholmes> mscdex: how do I know what version I have right now?
01:58 < samholmes> 32 or 64 bit, that is.
01:58 < niggler> here's a potential opportunity to get microsoft to switch lol
01:58 < Azra-el> deoxxa... i got that part... but that part can be handled by a load balancer afaik. but again.. afaik .. if i have a multicore machine i should take advantage of it am i wrong in that assumption?
01:59 < warz> must resist google suggestion
01:59 < samholmes> mscdex: so I extract the tarball, then what?
01:59 < Rojuinex> anyone know of any haml to jade converters?
02:00 < mscdex> samholmes: extract it to /usr/local
02:01 < mscdex> samholmes: `uname -a` should x86_64 or i686
02:01 < mscdex> s/should/should show
02:01 < samholmes> /usr/local/node?
02:02 < tim_smart> substack: Yo. With fleet can I have more than one project deploying on one hub?
02:02 < mscdex> samholmes: extract the tarball as-is and the files will get copied to the approrpriate directories
02:02 < substack> tim_smart: yes
02:02 < deoxxa> Azra-el: you've got like 3 problems to solve when you want to distribute your application out; 1) breaking your application up into separate parts (or tasks, or jobs, or roles, or whatever word you want to use), 2) facilitating communication between these parts, and 3) maintaining state globally (if required)
02:02 < samholmes> okay. I'm a noob when it comes to the tar command, how do I specify the directory?
02:03 < substack> tim_smart: you just push from a different repo is all to do that
02:03 < deoxxa> Azra-el: you need to do 1 and 3 anyway with "cluster" - the only part that gets partially done for you is 2 (via sending messages)
02:03 < mscdex> samholmes: `tar zxf foo.tar.gz -C /usr/local`
02:04 < deoxxa> Azra-el: if you have your application written to be distributed, you can just run 4, 8, 256 copies on a single machine anyway
02:04 < tim_smart> substack: I have a deploy script that runs each time github recieves a commit, which clones a new copy of the repo and checks out the right branch. Does fleet know what repo I am in by checking git config or something?
02:04  * tim_smart needs to read the source code...
02:05 < substack> tim_smart: you `git push` at fleet which runs a git server over http
02:05 < substack> so it knows from the request what the repo name is
02:05 < tim_smart> substack: Oh I see.
02:05 < samholmes> mscdex: I did that, but it's still saying node 0.4
02:05 < warz> samholmes, type `which node`
02:05 < warz> what does it say
02:06 < Hotroot> samholmes: I normally just run the uninstaller in the node folder I installed from
02:06 < samholmes> /root/local/bin/node
02:06 < samholmes> err..
02:06 < tim_smart> substack: There is no mention of that in the readme, just mentions `fleet deploy`
02:06 < tim_smart> Is that an alias?
02:06 < samholmes> Hotroot: Linux?
02:06 < Azra-el> i may not know much but this is what i understood from just reading about it. 1. if you have 10 servers with the exact same stock express app running on port whatever ..the load balancer will just pick one server for each request. 2. if you use the cluster api from nodejs you have basically the same app spawned in multiple workers and they share the connection and they listen to the same port 
02:06 < Azra-el> and the cluster module works as an internal load balancer for each of the workers. 3. combine 1 & 2 and there you have it. Wrong?
02:06 < substack> fleet deploy does a git push
02:06 < tim_smart> Gotcha
02:06 < substack> and some other things
02:06 < samholmes> warz: Looks like another binary? What shall I do?
02:06 < substack> actually it just does the deploy I think
02:06 < warz> samholmes, thats where your current node installation sits. type `echo $PATH`, what does that say
02:07 < Hotroot> samholmes: Yes
02:07 < tim_smart> substack: And drones put files in cwd I take it...
02:07 < samholmes> /root/local/bin:/root/local/bin:/root/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
02:07 < samholmes> warz: ^
02:07 < substack> tim_smart: yep
02:07 < niggler> woah samholmes who has a /usr/games directory
02:07 < samholmes> niggler: idfk
02:07 < warz> samholmes, i'd suggest deleting it from the current location
02:07 < tim_smart> substack: Thank you for giving me the magical instructions for your concoction.
02:07 < substack> tim_smart: but each `fleet deploy` creates a new directory for the checkout on the drones
02:08 < warz> samholmes, and as long as youve got it in /usr/local/bin, it'll pick the new one up.
02:08 < substack> so you can leave the old working code alone and let it keep working
02:08 < substack> while you spin up new instances around it
02:08 < warz> samholmes, it searches your path for node when you type node. it uses the first one it finds.
02:08 < niggler> substack what are your thoughts on vm.runInThisContext
02:09 < substack> what about it?
02:09 < tim_smart> substack: I'll post my deploy script for you to take a look in a bit.
02:10 < niggler> good bad or ugly
02:10 < samholmes> warz: I renamed it to node2
02:11 < samholmes> warz: now `node -v` or just `node` gives me "bash: /root/local/bin/node: No such file or directory"
02:11 < substack> niggler: useful
02:11 < samholmes> weird. o.o
02:11 < warz> samholmes, why is /root/local/bin on your path 3 times? lol
02:11 < tim_smart> substack: https://gist.github.com/e97e77ede9e93baa24f2 pow
02:12 < samholmes> warz: Idk, I'm not a very good system admin, yet. xP
02:12 < tim_smart> substack: That gets run everytime github gets git with a commit on the master branch.
02:12 < tim_smart> s/git/hit/
02:12 < warz> well, type `which node` again. it sounds like its still looking in that path, for some reason.
02:12 < warz> do you have an alias setup explicitly set to look there?
02:13 < warz> nvm, an alias wouldnt do that for which
02:13 < tim_smart> substack: Wait, let me update that.
02:14 < tim_smart> substack: Right, looks better now. https://gist.github.com/e97e77ede9e93baa24f2
02:14 < substack> tim_smart: perhaps https://npmjs.org/package/github-push-receive would be useful?
02:14 < substack> github webhook to `git push` proxy
02:14 < substack> in production right now powering ci.testling.com
02:15 < substack> which is actually a git http server using pushover disguised as a github webhook consumer
02:15 < tim_smart> substack: Maybe. This is a server I made that runs arbitrary shell scripts on github pushes. It is on github somewhere.
02:15 < substack> but with this we're not tied to how github works and can open up the backend to other endpoints more easily
02:18 < samholmes> warz: /usr/bin/node
02:19 < samholmes> I'm guessing I have to rename this one too
02:19 < warz> yup. get rid of the node binaries until you're left with the one you intend.
02:20 < samholmes> warz: node -v still gives "bash: /root/local/bin/node: No such file or directory"
02:20 < samholmes> and now which node is blank
02:21 < warz> ok maybe somebody else can pick up, i have to run to the gas station real quick. be back in like 5 minutes, and ill continue helping then. i dont know why its still looking in that path for node.
02:21 < samholmes> ls /usr/local/bin doesn't contain "node"
02:21 < warz> oh, well it needs to be somewhere
02:21 < samholmes> idk why the tar didn't work..
02:21 < warz> on your path.
02:21 < warz> tar won't distribute them out, afaik, unless t hey're packaged in that dir structure
02:21 < warz> iirc theyre not though
02:21 < warz> ok brb 10 mins
02:22 < chewed-on> Anyone used Node.js python environment here ?
02:22 < chewed-on> virtual environment
02:34 < Zak> is there a library for injecting js server-side?
02:38 < warz> samholmes, im back. did you figure it out?
02:38 < samholmes> warz: unfortunately, not. :\
02:38 < warz> if which node shows nothing, and typing node says no file found, then you dont have node on your path
02:38 < samholmes> tar isn't even doing it.
02:39 < samholmes> warz: I'm guessing now, it's extracting that needs to be done.
02:39 < warz> to be honest, i prefer compiling from source so that i can just make install
02:39 < samholmes> warz: how do I do that/
02:39 < samholmes> ?
02:39 < chilts> samholmes: have you tried nvm, n or nave?
02:39 < chilts> they'll help you manage node versions with easy installation
02:40 < samholmes> grab the source tar, extract, then go into src/ directory then make; make install?
02:40  * chilts uses nvm
02:40 < samholmes> chilts: no, right now I just need to get node installed ASAP, server's down, which is not good.
02:40 < chilts> in which case, do what warz says, download and install that way
02:41 < warz> samholmes, i just downloaded the binaries to see what the dir structure looks like. it's simple. download the binaries, uncompress using `tar xfv node...tar.gz`
02:42 < warz> that'll create a directory containing the node stuff. go into it, and youll see a few directories.
02:42 < warz> those correspond to youre /usr/local/bin, /usr/local/lib
02:42 < djMax> I'm having a hell of a time getting stylus to work on heroku - is there some magic to getting canvas to build there?
02:42 < samholmes> warz: but, how do I get those directories into /usr/local?
02:42 < mscdex> samholmes: what does `echo $PATH` say ?
02:42 < warz> you copy the contents of each directory out ointo them
02:43 < warz> you need the node binary to be available immedietly in the directory on your $PATH
02:43 < samholmes> mscdex: /root/local/bin:/root/local/bin:/root/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
02:43 < mscdex> ok
02:43 < mscdex> so as long as node does not exist on /root/local/bin, what i mentioned earlier should work
02:43 < mscdex> `tar zxf foo.tar.gz -C /usr/local`
02:43 < warz> yes that should work
02:44 < samholmes> tar zxf foo.tar.gz -C /usr/local didn't work
02:45 < warz> didnt work how?
02:45 < samholmes> no files were moved to /usr/local
02:45 < warz> you probably need to use sudo, or be root.
02:45 < samholmes> usr/local/bin still doesn't have node
02:45 < mscdex> ^
02:45 < samholmes> Am root
02:45 < samholmes> I su'd
02:46 < warz> then just unpack into your home diretory, and copy the contents of each folder one folder at a time
02:46 < warz> cd lib; cp * /usr/local/lib
02:46 < warz> cd bin ... etc
02:46 < mscdex> samholmes: or copy the tar.gz file into /usr/local then: cd /usr/local && tar zxf foo.tar.gz
02:46 < samholmes> warz: I was trying that, and that works.
02:46 < mscdex> yay!
02:47 < warz> heh
02:47 < samholmes> however, I put node in /usr/local/bin and did which node, it shows /usr/local/bin/node, but when I run node -v I get "bash: /usr/local/bin/node: No such file or directory" is that normal?
02:48 < samholmes> could just be because I haven't finished moving all the files?
02:48 < warz> move all the files, man.
02:48 < warz> lol
02:48 < warz> patience young grasshopper. you will be running node if you stick with it.
02:51 < samholmes> warz: I know you were talking about patience and all, but is there a way to move multiple files with mv? :P
02:52 < warz> mv *
02:52 < warz> mv * /usr/local/bin
02:52 < warz> will move them all into that directory
02:52 < warz> actually
02:52 < warz> use cp though
02:52 < samholmes> cp copies.
02:52 < samholmes> I just wanna move them, xP
02:52 < jaket> copy them, then delete them
02:52 < warz> yes. im trying to avoid having to explain how to untar again, though! lol.
02:53 < warz> im future proofing this convo.
02:53 < warz> looking ahead, and stuff.
02:54 < warz> ok have you copied? its only like 3 directories, so that should take like 15 seconds
02:55 < samholmes> warz: I donno how to get around the "It's a directory, so you can't move it" bit. xP
02:55  * samholmes is a real noob with bash.
02:55 < samholmes> warz: so I have to move files individually. haha
02:56  * samholmes is practicing the patience thing...however would also like to know how to move entire directories.
02:56 < warz> samholmes, you can type `man cp` and it'll show you all of the options. what youre wanting is a recursive copy.
02:56 < jamesd>  mv  directory1 dest_location? 
02:59 < warz> you could probably just cd into the extracted folder, and copy right from there. youll end up with a readme and stuff in /usr/local, though
03:01 < samholmes> warz: I finished copying
03:02 < samholmes> oh fuck, why is it saying that all the files I copied are belong to smmta user?
03:02 < samholmes> Idek which user that is..
03:03 < warz> thought you said you were root
03:04 < samholmes> I am..
03:04 < warz> nah, youre smmta
03:04 < samholmes> oh damn, is it because I'm in screen?
03:04 < warz> whatever, just chown them
03:05 < warz> what does `which node` say, anyway?
03:05 < samholmes> /usr/local/bin/node
03:05 < warz> and running node?
03:07 < samholmes> warz: bash: /usr/local/bin/node: No such file or directory
03:07 < samholmes> -rwxrwxrwx  1 root  root  9008606 Nov 26 16:50 node
03:07 < samholmes> that's what /usr/local/bin/node looks like
03:07 < warz> O_O
03:07 < samholmes> -rwxrwxrwx  1 root  root  9008606 Nov 26 16:50 node
03:07 < samholmes> is when I ls
03:08 < warz> ya, i get it. did you download the correct binaries?
03:08 < samholmes> http://nodejs.org/dist/v0.8.15/node-v0.8.15-linux-x86.tar.gz
03:08 < samholmes> is what I wget
03:09 < warz> ok, paste the output of `uname -a`
03:09 < samholmes> Linux www 2.6.18-238.9.1.el5.028stab089.1 #1 SMP Thu Apr 14 14:06:01 MSD 2011 x86_64 GNU/Linux
03:09 < warz> 32bit should work regardless, but im curious
03:09 < samholmes> should I go with 64 bit?
03:09 < warz> well you're on a 64bit OS install
03:09 < samholmes> Hell, I'll give 64bit a try then?
03:09 < warz> yes
03:10 < samholmes> just asking:  wget http://nodejs.org/dist/v0.8.15/node-v0.8.15-linux-x64.tar.gz is enough?
03:10 < warz> yes
03:11 < warz> dont copy them all individually this time. just use `cp -r ...`
03:13 < samholmes> ok
03:13 < samholmes> haha, I finally realized why tar didn work
03:14 < Hotroot> Are you still installing node?
03:14 < samholmes> it just copied a directory called node-v0.8... to /usr/local/
03:14 < warz> samholmes, yes
03:15 < warz> thats why you can go into that folder, and cp -r * /usr/local
03:15 < samholmes> well, I could just do the same thing in my home folder
03:15 < warz> or that
03:16 < samholmes> warz: Yes! Finally! haha
03:16 < samholmes> 64 bit worked. :)
03:18 < samholmes> warz: Thank you for all your help, I really appreciate your support. You have no idea. xP
03:18 < samholmes> or maybe you do, idk
03:18 < samholmes> but, thank you
03:18 < warz> sure, no prob
03:18 < warz> good luck
03:22 < jasonkuhrt> does tj hang out in the node channel? if so what handle does he go by?
03:23 < zomg> jasonkuhrt: tjholowaychuk
03:23 < warz> hes does, or also in #express
03:23 < jasonkuhrt> warz: thanks
03:24 < jasonkuhrt> zomg: thanks
03:25 < samholmes> warz: Thanks. I'm having issues with npm, but I'll try to figure it out on my own from here. If all else fails I'll just ask here again. xP
03:26 < warz> what issues?
03:26 < warz> running it, or installing packages?
03:26 < warz> upgrading from 0.4 to 0.8 might be spanning an update in which npm changed how it installed packages
03:26 < warz> i dont remember what version that change was introduced in
03:31 < mscdex> update all the things!
03:32 < samholmes> warz: running it seems.
03:32 < warz> does typing `npm` at least run?
03:32 < samholmes> warz: I had to rename npm in /root/local/bin to npm-old, so now which npm gives me /usr/local/bin/npm
03:33 < samholmes> warz: no, typing npm gives me bash: /root/local/bin/npm: No such file or directory
03:34 < samholmes> oh wait, I think it was just that I had to exit out of su, then re-su
03:34 < samholmes> like, relogin or whatever it's called in terminal lingo
03:34 < warz> possibly if you adjusted your path
03:35 < warz> samholmes, typing `which npm` at least shows that its looking at /usr/local/bin/npm ?
03:35 < samholmes> yeah
03:35 < warz> and `npm` in that directory should actually be a sym link
03:36 < warz> does it look like one?
03:36 < warz> im assuming it will be because what else would it be
03:36 < warz> anyway, um.
03:36 < samholmes> warz: Ah, it looks like I need to relogin when I make changes
03:36 < samholmes> it's working now
03:37 < samholmes> warz: is a symlink
03:37 < warz> ok, if its working then all is good.
03:37 < samholmes> warz: yeah, must of been something to do with su
03:38 < warz> ya, generally you shouldnt just chill as root.
03:40 < warz> samholmes, are you a developer or were you just trying to get it to run?
03:40 < innociv_> http://pastebin.com/hY8Vx0J3 Why wasn't this monit config stopping the program when it was at over 90% cpu for a long time?
03:40 < samholmes> warz: dev
03:41 < warz> man i dont even remember what i was working on. i should probably just go to bed, then.
03:42 < samholmes> warz: but you're so helpful. ;P
03:49 < MitchW> are there any profiling / stress test frameworks out there (that are designed for, or can be used) for node?  Wondering the best way to do some larger-scale tests (hundreds of thousands of concurrent sessions) over the quick and dirty ones I did (50-60k)
03:51 < zomg> MitchW: just insult Anonymous and put a link to your website. I'm sure you'll get some free load testing done soon enough after that
03:51 < zomg> ;)
03:51 < zomg> Maybe even a security audit!
03:52 < MitchW> lol ;)
03:54 < mscdex> node.js rules!
03:56 < deoxxa> no, mscdex. you rule.
03:56  * deoxxa stares
03:57 < deoxxa> don't believe in yourself. believe in me, who believes in you.
03:58 < Zak> I want to inject JS into some html file, but I want to do it as I'm serving it
03:58 < Zak> So, I would have to get the index.html file, parse HTML, add new <script> elements. right?
03:58 < Zak> Does anybody know if there's a library that does this for me?
03:59 < Zak> i'd really love to re-use somebodys' code
04:00 < chilts> Zak: sounds like you're doing it in a slightly unusual way ... is your index.html static or are you using a templating language to create it?
04:00 < chilts> or can't you just change the index.html file to include the script?
04:00 < Zak> chilts: the index.html is static, but i'm not controlling it
04:01 < Zak> yeah, i can't change it
04:01 < chilts> hmm, does it include any other JS file which you have control over?
04:01 < Zak> no
04:01 < Zak> i'm proxying the entire site
04:01 < chilts> apart from injecting some more code?
04:01 < Zak> and i want to injectjs on the initial html 
04:01 < Zak> *initial page
04:02 < chilts> does the format of index.html change at all? either do it horribly by sticking it in manually (without parsing the html - which is eww, but could work) or yeah, parse the HTML, inject some script tags
04:03 < Zak> yeah, i don't want to assume any format of the html
04:03 < chilts> sounds like it's still a slightly insane thing you're doing :)
04:03 < Zak> parsing it would be the better option
04:03 < Zak> chilts: its for automating testing
04:03 < Zak> i need to throw some JS around to integrate pages
04:03 < Zak> there's other ways to do it
04:03 < Zak> but it becomes more painful if you want to support all browsers
04:03 < Zak> e.g. phantomjs allows you to injectjs into pages
04:04 < Zak> but IE7 wouldn't have that capability
04:04 < chilts> there are loads of DOM things on npm : npm search dom
04:04 < Zak> thus the proxy solution
04:04  * chilts can't recommend one though
04:04 < Zak> this wouldn't be dom though. it's okay, i'll just parse the html
04:04 < Zak> and i'll add the scripts in myself
04:04 < chilts> well, I'm saying parse the HTML into a DOM then manipulate the dom and output as html again
04:04 < Zak> tbh, its going to be a standard line every time
04:05 < Zak> something like <script src="meh/inject.js"></script>
04:05 < Zak> etc
04:05 < chilts> don't parse the html yourself, you'll get it wrong
04:05 < Zak> oh yeah, my bad.. HTML is DOM too
04:05 < Zak> as in, HTML parses into DOM
04:05 < chilts> yeah, it can do
04:05 < chilts> if you tell it :)
04:05 < Zak> yeah, I was going to use a 3rd party parser
04:06 < Zak> no way i would parse it myself
04:06 < chilts> npm search dom
04:06 < chilts> :)
04:06 < chilts> loads
04:06 < Zak> thanks
04:06 < chilts> np
04:11 < mscdex> deoxxa: that's too confusing this late at night
04:11 < mmalecki> I can confirm that
04:12 < niggler> mscdex you must be getting old if you think its too late :/
04:12 < niggler> you too mmalecki
04:13 < adamramadhan> morning!
04:13 < niggler> see, that's the spirit adamramadhan
04:13 < mmalecki> niggler: 5 AM here yo
04:14 < adamramadhan> ahahaha, yeah. anyway does anyone knows a wordpress alternative in node?
04:14 < niggler> 5 AM pshaw
04:14 < niggler> mmalecki how many hours have you been awake?
04:14 < niggler> 'too late' is appropriate after hour 100
04:15 < mmalecki> too many at this point
04:15 < Zak> 'too late' is when you find coffee doesn't do anything
04:15 < Zak> or other caffinated beverage
04:15 < niggler> Zak: that generally happens in the morning too
04:15 < Zak> *caffeinated
04:16 < Zak> i hate mornings
04:17 < niggler> i like mornings
04:18 < Zak> niggler: you can have mine
04:19 < niggler> at night the imac has a bluish hue :/
04:20 < mscdex> deoxxa: been programming all day!
04:22 < jamesd> mscdex, hope you are making some headway with the "Hello World module" ;-p 
04:24 < Youdaman> niggler!
04:24 < Youdaman> niggler: i wasn't ignoring you the other day i was afk :D
04:24 < niggler> hey Youdaman sorry i thought i wasnt cool enough for you
04:24 < niggler> tis ok
04:24 < Youdaman> niggler: if anything you're too cool
04:24  * niggler high-fives Youdaman
04:24  * Youdaman is not worthy of the niggler and attempts the high-five back but just doesn't look as cool
04:25 < Zak> you shouldn't have tried
04:25 < Youdaman> rookie error
04:25 < Zak> last time i tried to high-five niggler, my pants fell down
04:25 < Zak> and all the girls saw me
04:25  * niggler pantses Zak
04:25 < Zak> IT HAPPENED AGAIN
04:25 < rking> You know how you write a client-side validation, then you have to go write the exact same thing on the server-side? What Node.js solution exists for this?
04:26 < substack> rking: you could just write the stuff using the node-style commonjs-esque module system
04:26 < substack> and then use that code in the browser with browserify
04:26 < substack> that's what I do
04:26 < niggler> substack is the evil genius that brought us browserify iirc
04:27 < mscdex> jamesd: hello world? i'm wayyyy past that :-) I've been working on rewriting my usenet client module
04:27 < Zak> oh its substack!
04:27 < Zak> i tried to use your browserling github stuff; it didn't work out too well for me
04:28 < Zak> *testling
04:28 < niggler> substack b
04:28 < niggler> browserify issue: ["a","b"].forEach(function(x){require(x);}); breaks browserify
04:29 < substack> Zak: testling-ci?
04:29 < substack> niggler: don't do that
04:29 < mclenithan> anybody's company hiring mid-level node devs in San Fran or LA?
04:30 < Zak> substack: https://github.com/substack/testling
04:30 < Zak> i couldn't get the local browser stuff working
04:30 < substack> oh yeah that module needs some work
04:30 < Zak> it was intermittent in Chrome. There was some bug stopping it from detecting Firefox too (on windows)
04:30 < substack> Zak: but check out the latest thing http://www.youtube.com/watch?v=CIY6qNk1zy0&feature=plcp
04:30 < Zak> and there was some problem with headless in optimist
04:30 < substack> bah crap
04:30 < substack> http://ci.testling.com/
04:30 < substack> clipboard doesn't work for shit in linux
04:30 < Zak> that video has WebStorm in it. *cheers* (that's what i use)
04:31 < niggler> substack: xsel -b showing no love?
04:31 < substack> I don't even know what webstorm is
04:31 < Zak> substack: ta. I'll check it out. Sadly, I moved to using testswarm. (I was keen to use something based on nodejs)
04:31 < Zak> substack: Web/JS IDE
04:32 < substack> Zak: testling-ci is a completely different thing from that testling npm module
04:32 < Zak> right. it uses all your host VMs right?
04:32 < substack> it should work really well if you write your frontend modules the node way
04:32 < substack> we run the browsers yes
04:32 < substack> every time you `git push`
04:32 < Zak> ok
04:33 < substack> your tests run
04:33 < substack> for free!
04:33 < Zak> sadly, i need to test on IE7,8.. so it won't be entirely free for me
04:35 < mscdex> free.99
04:37 < substack> Zak: testling-ci is completely free for public repos on github
04:37 < substack> all browsers
04:39 < mscdex> awesome
04:40 < Zak> substack: ah sweet, didn't know that. thanks
04:44 < innociv_> Why is the VIRT mem usage for node so high?
04:47 < Zak> does anybody know if i can do any post-processing on http-proxy? I want it to proxy the request, then return control back to me, so I can manipulate the response.
04:48 < Zak> oh, I think I just found my own answer
04:48 < Zak> I always seem to do this... google it, ask in here, google again (in desperation), then i find my answer and i look like a spastic in the channel
04:53 -!- mode/#node.js [+o ryah] by ChanServ
04:59 < sayd> how do you npm install --save something into devDependencies?
04:59 < sayd> --save-dev looks like it
05:01 < sayd> 2 other useful answers would be: how to move dep -> dev via cli
05:02 < rump> vim packages.json :)
05:03 < sayd> and why do i see warning: task jshint not found, when it clearly shows up in npm ls
05:05 < sayd> are deps that prefer to be installed globally, like jshint better off in dependencies or devDependencies
05:08 < sayd> is there any way to get jshint not bitch about a global install? I installed globally, and when i do a npm ls when its in my package it says UNMET DEP
05:08 < rump> install them locally
05:08 < rump> globals are only for binarys
05:09 < sayd> so i npm link jshint, and it still says i should install globally
05:11 < sayd> jshint is a binart
05:11 < rump> if your project depends on it, it should be installed locally
05:12 < rump> is how i think isaacs envisioned it anyways
05:14 < mdedetrich> how do you delete a key with the node_redis client
05:15 < mdedetrich> oh wait, nvm, they are the same as all commands
05:30 < sayd> anyone know why global jshint can't be used by grunt-cli?
05:44 < etcetera> is there a good static site generator out there that uses mustache
06:00 < Rojuinex> Can anyone help me out with a ENOENT error?  I'm trying to read my ssl certificates which I have stored in /var/ssl  I chownd them to my user and chmod'ed them to 755 but I keep getting this error "Error: ENOENT, no such file or directory '/var/ssl/gd_bundle.crt'" When I ls -al I get -rw-r--r--   1 calebbartholomew  wheel  3197 Dec 11 22:41 gd_bundle.crt
06:00 < Rojuinex> any help is much appreciated
06:11 < Zak> ugh, nodejs seems to get upset if i try and make an http request whilst stuck in another one
06:11 < Zak> am i right to assume this?
06:12 < Zak> that sort of doesn't make sense
06:13 <@Nexxy> Zak, sounds liek you're doin it wrong
06:14 < Zak> yeah, very likely. Going to continue to tinker
06:15 < Zak> oh yeah, I wasn't even sending out the request. *hits forehead*
06:15 < Zak> sounds like its time for another coffee
06:56 < _numbers> does anyone know of a js lib that can escape utf8 chars to html entities?
07:05 < thealphanerd> Nexxy: I just arranged some new sounds
07:05 < thealphanerd> https://soundcloud.com/thealphanerd/intelligent-bird-music
07:06 <@Nexxy> eerie
07:11 < Josh> Is the only way to communicate between a Webclient (JavaScript / Browser based client) and C++ server is to have a proxy node.js server inbetween?
07:11 < Josh> I mean there isn't any other way..
07:23 < Rojuinex> Josh: What do you mean?
07:24 < Rojuinex> Are you writing your server in C++?
07:32 < Doikor> Josh: just about every language has some kind of a web server software around to do that?
07:53 < netAction> Hi! In Ubuntu 12.10 I do not get any output from $node on the command line. It simply quits. What's wrong?
07:57 <@Nexxy> netAction, $node?
07:57 < netAction> Nexxy: $ is the command line :-)
07:58 <@Nexxy> so you're typing `node`? 
07:58 < netAction> yes
07:58 <@Nexxy> what do you get from `node -v`?
07:58 < netAction> nothing
07:58 <@Nexxy> how was it installed?
08:00 < netAction> First apt-get install node npm
08:00 < gildean> netAction: you prolly installed node and not node.js with that
08:00 < netAction> Then I added ppa:chris-lea/node.js and upgraded to latest version
08:00 < gildean> try sudo apt-get install nodejs
08:04 < netAction> gildean: nodejs is the command line command. Not node. Strange.
08:05 < netAction> Y did they give the framework a generic name.
08:05 < gildean> netAction: i'm guessing no-one just checked if there was a binary by that name
08:06 < hipsterslapfight> you could ask ryan but nobody has seen him in weeks :v
08:06 < gildean> netAction: you can just ln -s
08:06 < netAction> lol
08:07 < Josh> hipertracker, weeks? Months you might want to say.
08:22 < bnoordhuis> netAction: it's because there's another debian package with a node binary (some ham radio tool)
08:23 < bnoordhuis> fun fact, the debian guys have been debating for over a year which package should rename its binary
08:23 < bnoordhuis> and in the end - in true debian style - they went with a solution that satisfied neither party
08:28 < chewed-on> Hi guys.
08:28 < chewed-on> I have a node.js server that keeps making post request to another server, and then parses the returned data
08:28 < chewed-on> this is done continuously, infinitely
08:29 < chewed-on> My colleague who is running my Node.js code using the "forever" daemon tool is experiencing his macbook pro laptop heating up 
08:29 < chewed-on> we put our finger on his laptop and we feel the metal being really hot
08:30 < chewed-on> The Activity Monitor shows that my node and httpd is using up 50-60% of CPU
08:30 < chewed-on> I want to know if my node.js code is causing the computer to heat up
08:31 < bnoordhuis> chewed-on: probably
08:32 < chewed-on> :(
08:32 < chewed-on> that's not good....
08:32 < gildean> chewed-on: what does your code do?
08:33 < gildean> it shouldn't eat the whole core unless it's doing something cpu intensive all the time
08:34 < chewed-on> gildean: it's making a HTTP POST request to my Symfony web server to get Notification entities for push notification, then parses the returned result if any, then sends push binary stream to Apple push notification server
08:34 < chewed-on> if there any no push notification entities returned by my Symfony web server, then it makes a new HTTP POST again
08:34 < chewed-on> it repeats the process continously
08:35 < gildean> chewed-on: with a timeout, or does it do it like constantly?
08:35 < gildean> because if there's no timeout, it'll make thousands of requests per second
08:35 < gildean> which'll surely eat the whole core up
08:37 < [AD]Turbo> hi there
08:37 < gildean> chewed-on: and i mean timeout as in, do req, wait for a bit, then do another
08:38 < chewed-on> gildean: no time out
08:38 < chewed-on> gildean: I am getting my colleague to use setTimeout for 5 seconds
08:39 < chewed-on> we'll see how much the CPU usage goes down by
08:39 < gildean> chewed-on: that should solve it, cpu usage should drop close to 0
08:39 < chewed-on> ok
08:49 < chewed-on> gildean: seems like I also had an extra line at the bottom of my script that causes an emitter to fire, causing 2 lots of events to trigger. So my script was also doing 2 lots of HTTP POST each time it gets a response from the server
08:50 < chewed-on> well, my code was commented out but while my colleague was modifying my code, commenting and uncommenting it, he accidentally uncomment the line that shouldn't be uncommented
08:50 < Cronoh> goodnight sweet bandwidth
08:54 < gildean> chewed-on: but you got it sorted out, so no harm done
08:54 < chewed-on> yeah if my colleague hadn't pointed it out, I would've discovered the problem lol
08:54 < chewed-on> gildean: thanks for confirmation
08:54 < gildean> np
08:55 < lethalduck> Any recommendations for a good node book for someone new to node, but not new at all to JavaScript and other programming languages?
08:56 < SomeoneWeird> nodebeginner.org
08:56 < chewed-on> lethalduck: the above line SomeoneWeird recommended also has a combo pack for $12.00 USD, you get both the Node beginner book as well as the Hands on Node.js book
08:57 < chewed-on> One of the best $12.00 I've spent in my life :)
08:57 < `3rdEden> lethalduck: Smashing node.js by Guillermo Rauch, O reilly's Learning Node by Shelley Powers
08:57 < chewed-on> oh it's $9.99 bucks now...
08:57 < `3rdEden> Or Wrox Professional Node.js by Pedro Teixeira
08:57 < chewed-on> lethalduck: best $9.99 you'll spend in your life :)
08:57 < gildean> lethalduck: this was a good article about using eventemitters imo: http://wekeroad.com/2012/04/05/cleaning-up-deep-callback-nesting-with-nodes-eventemitter
08:58 < Cronoh> google reveals all
08:59 < lethalduck> Something along the lines of a fast paced tutorial come reference. Cheers SomeoneWeird. seems a bit simple. Thanks all.
09:00 < chewed-on> gildean: hang on, just a double check
09:00 < MI6> joyent/node: Ben Noordhuis v0.8 * d65832c : fs: fix WriteStream fd leak  Close the file descriptor when a write opera (+2 more commits) - http://git.io/n_MfXw
09:00 < chewed-on> gildean: if I use a setTimeout(function() { // emit event }, 5000);   doesn't that mean my function will end before the timeout get to execute ?
09:01 < lethalduck> chewed-on which ones $9.99? Smashing?
09:01 < MI6> joyent/node: isaacs streams2-stdin-wip * 6a2ea26 : streams2: Call read(0) on resume()  Otherwise (especially with stdin) you (+2 more commits) - http://git.io/UkwdkA
09:01 < gildean> chewed-on: hmm?
09:01 < chewed-on> lethalduck: the nodebeginner.org page
09:01 < chewed-on> at the top, there is $9.99 combo pack
09:01 < lethalduck> Ok, ta
09:01 < gildean> chewed-on: are you calling the function again from inside the setTimeout?
09:01 < chewed-on> no
09:01 < SomeoneWeird> <chewed-on> gildean: if I use a setTimeout(function() { // emit event }, 5000);   doesn't that mean my function will < the event will get emitted after 5 seconds
09:01 < chewed-on> I am emitting an event 
09:02 < MI6> joyent/node: isaacs streams2-stdin-wip * 249af3b : net: Don't call shutdown more than once - http://git.io/Dy05lg
09:02 < chewed-on> SomeoneWeird: right ok, thanks
09:02 < chewed-on> I guess I am calling instance.emit('some message');
09:02 < chewed-on> instance refers to my class
09:03 < chewed-on> ok, all good
09:03 < chewed-on> thanks all
09:03 < gildean> chewed-on: i'd prolly do it like: (function timeOutReq() { setTimeout(function () { self.emit('whatever'); timeOutReq(); }, 5000); }());
09:03 < SomeoneWeird> 0.o
09:04 < chewed-on> I'm being paranoid 
09:04 < chewed-on> :P
09:04 < chewed-on> sorry feeling paranoid
09:04 < gildean> no, wait you didn't want it to fire every 5 seconds, but only when the req returns nothing
09:04 < gildean> well, anyways, you get the meaning
09:04 < SomeoneWeird> setInterval(function() { }, 5000); if you want every 5 seconds
09:05 < chewed-on> I was just concerned that my event will not be emitted if code execution reaches the end of the function
09:05 < gildean> SomeoneWeird: yeah, but usually in cases like this you want the function inside the timeout to complete before setting the timeout
09:05 < chewed-on> before my timeout executed.
09:06 < SomeoneWeird> heh yeah
09:07 < chewed-on> All, good, my push notification still works meaning the code is fine :)
09:07 < chewed-on> Thanks again.
09:11 < dawra> if i put my DB related code (queries and all) in a separate file, and then lets say i am usin them from 10 routes (expressjs) by doing require() and calling the methods is it fine ? or should i just require() it once somewhere in the startup script and somehow use in routes ?
09:13 < mpfundstein> require caches
09:13 < mpfundstein> so dont worry
09:14 < dawra> hm ok
09:27 < lethalduck> chewed-on: Looks like nodebeginner assumes no or little JavaScript knowledge
09:28 < SomeoneWeird> it still explains how everything works
09:28 < SomeoneWeird> and it's free
09:28 < SomeoneWeird> can't hurt :P
09:29 < lethalduck> Where does it start to explain it. I'm a third of the way through and haven't learn't anything yet.
09:29 < lethalduck> can't hurt. it costs time going through stuff that's obvious.
09:30 < gildean> lethalduck: check out the article i linked to, it'll show you how to use the eventemitter, that plus the api docs should get you going
09:30 < SomeoneWeird> it shows you how to setup express
09:30 < SomeoneWeird> and shows how it works
09:31 < gildean> lethalduck: then check out the plethora of modules on npm http://npmjs.org
09:31 < lethalduck> gildean: yeah seen those. Ta
09:32 < lethalduck> Will do gildean. Ta.
09:48 < hemanth_> !emmiter 
09:48 < hemanth_> !EventEmitter
09:49 < hemanth_> :\ bot trigger?
09:49 < gildean> hemanth_: ?
09:49 < hemanth_> gildean, any bot in here?
09:50 < hemanth_> no promises in node? we must stick on to event emitters?
09:50 < gildean> i'm pretty sure there is one that evals js, but other than that, i don't think so
09:50 < hemanth_> >> console.log('eval')
09:50 < purr> hemanth_: undefined; Console: 'eval'
09:51 < gildean> hemanth_: no promises on core, only events
09:52 < hemanth_> gildean, any soild example? Nothing much in docs 
09:52 < gildean> hemanth_: about events?
09:52 < hemanth_> yup
09:52 < SomeoneWeird> http://nodejs.org/docs/latest/api/events.html
09:52 < gildean> hemanth_: there is the docs on the events module, but this article is pretty good in explaining it: http://wekeroad.com/2012/04/05/cleaning-up-deep-callback-nesting-with-nodes-eventemitter
09:53 < hemanth_> SomeoneWeird, yes, read the same 
09:53 < hemanth_> gildean, thanks checking out....but why no promises ?
09:54 < gildean> hemanth_: why should there be promises?
09:55 < SomeoneWeird> fuck promises
09:55 < hemanth_> ok lets, but tell me why
09:55 < gildean> hemanth_: also i'm pretty sure there are a couple of modules for promises if you really want them
09:55 < hemanth_> gildean, even ES6 got promises in them now
09:56 < hemanth_> I just want to know why, i'm not promise pro 
09:56 < lethalduck> hemanth_: you mean harmony?
09:56 < gildean> well, es6 also has a shitload of things i don't know why they even added there, just makes things more messy
09:57 < AviMarcus> I'm 99% sure I saw this before, but I can't find it now. I have a module that exports, etc. But I want the option to simply "run" the module. How do I determine if it's been require'd or if it was run from the command line? I tried console.log'ing process.argv but that is the same for both cases
09:57 < lethalduck> gildean: couldn't agree more.
09:57 < hemanth_> gildean, like classes ?
09:57 < hemanth_> lethalduck, is it still in harmony ?
09:57 < lethalduck> hemanth_: exactly
09:57 < hemanth_> lethalduck, http://h3manth.com/content/classes-javascript-es6 :|
09:57 < lethalduck> hemanth_: Isn't harmony still ES6?
09:59 < hemanth_> lethalduck, well promises is an accepted proposal AFAIK http://en.wikipedia.org/wiki/ECMAScript#ECMAScript_Harmony_.286th_Edition.29
10:00 < lethalduck> hemanth_: I'm from a classical programming language background and classes are great there, but JavaScript doesn't need them. Why they are sugaring up the language with them IMHO will just confuse newbes to JavaScript more. Why do we need them in JavaScript anyway?
10:01 < lethalduck> I don't understand why JavaScript needs all this extra crap.
10:07 < AviMarcus> got it: if(require.main === module) console.log("run directly");
10:08 < hemanth_> lethalduck, thanks to coffee?
10:09 < Jee5us_w> Hi! has anyone used jdub's twitter module? https://github.com/jdub/node-twitter I'm trying to get tweets from my own user but so far I am not very successful. Anyone got some better modules or can give me a tip or two?
10:09 < lethalduck> hemanth_: script?
10:10 < hemanth_> lethalduck, yes
10:10 < lethalduck> hemanth_: hmph!
10:12 < lethalduck> hemanth_: what the hell is with private and public declarations in the constructor?
10:13 < lethalduck> That doesn't look like JavaScript at all.
10:13 < lethalduck> those look like implied globals
10:13 < lethalduck> no var
10:14 < lethalduck> JavaScript is a beautiful language. This is just butchering it.
10:14 < minibikini> Jee5us_w: i've used https://npmjs.org/package/ntwitter — works well
10:16 < Jee5us_w> minibikini, thanks, but this module sits on the twitter streaming pipe. I need to just pull the posts and show it.
10:16 < Jee5us_w> even previous ones
10:16 < hemanth_> lethalduck, i agree, well those were https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Reserved_Words 
10:16 < hemanth_> being implemented 
10:18 < lethalduck> hemanth_: I've seen this before and not been happy about it. It makes me want to cry
10:18 < minibikini> Jee5us_w: well, why not to request a user feed and parse it manually?
10:18 < lethalduck> Maybe we can bring prototypal inheritance sugar to C++?
10:19 < hemanth_> lethalduck, many says it might end up like IPv6...no comments 
10:20 < hemanth_> lethalduck, that what Java did with Scala?
10:20 < hemanth_> :D
10:20 < Josh> Who cares about java :>
10:20 < SomeoneWeird> ^ +1
10:20 < hemanth_> Josh++
10:20 < lethalduck> hemanth_: not sure. I thought Java and Scala were quite different.
10:20 < hemanth_> SomeoneWeird, we need a karma bot here?
10:21 < Josh> If I do such awesome statements often then its counter variable might overflow
10:21 < hemanth_> Scala ( /ˈskɑːlə/ skah-lə) is a multi-paradigm programming language designed as a "better Java" — building on top of the Java virtual machine (JVM)  lethalduck 
10:21 < Josh> So better not to have one ;]
10:22 < lethalduck> Ah
10:22 < hemanth_> Josh yest'd I was helping on friend with some silly math code and in Java 100 + ( 3/100 * 100)  === 100 :D 
10:23 < hemanth_> Math.max(var1,var2) lol 
10:23 < Josh> :DD
10:23 < hemanth_> it wont take [] 
10:23 < hemanth_> only two vars 
10:23 < hemanth_> WTF! 
10:23 < hemanth_> but also there are hell lot of demand for java coders 
10:23 < hemanth_> it's not that I can't code Java, I wont! :\
10:24 < Josh> hemanth_, same :P
10:24 < slaskis> Math.max takes a lot of arguments i believe. and if you want to use an array use Math.max.apply(null,array) 
10:24 < Josh> I'd rather prefer C#
10:24 < hemanth_> slaskis, in Java
10:24 < hemanth_> not JS
10:24 < slaskis> ooh
10:24 < hemanth_> :D
10:24 < slaskis> haha
10:24 < lethalduck> hell of a lot of demand for hookers.
10:24 < Josh> slaskis, ;]
10:25 < hemanth_> I say no to M$ $tuff Josh
10:25 < lethalduck> C# is much nicer to use.
10:25 < hemanth_> duh
10:25 < Josh> /\/\5 or not Its far better for a language
10:25 < hemanth_> C# will die soon, it will the next flex 
10:25 < Josh> lethalduck ++
10:25 < Josh> ;]
10:26 < hemanth_> when cloud picks up and no one uses window$ PC 
10:26 < hemanth_> C# must die 
10:26 < lethalduck> Then skill up on node.
10:26 < hemanth_> mono? no no 
10:26 < Josh> It depends on a lot of things.
10:26 < lethalduck> in fact why wait
10:26 < hemanth_> yes, node ftw!
10:26 < lethalduck> Is what I'm thinking too
10:27 < hemanth_> npm itself say a lot 
10:27 < hemanth_> hope deb was like npm 
10:28 < hemanth_> packing deb files is such a pain 
10:28 < hemanth_> when comapred to npm
10:28 < Josh> hemanth_, From India?
10:28 < hemanth_> Josh yup
10:28  * hemanth_ blogged http://h3manth.com/content/node-packing-made-easy-grunt after seeing grunt :) 
10:30 < hemanth_> Josh and u?
10:31 < hemanth_> Chicago, IL, USA...
10:34 < hemanth_> Josh?
10:35 < lethalduck> hemanth_: in your post example. private health = health; declaring a member property of Monster?
10:35 < lethalduck> This is just wrong.
10:37 < lethalduck> both name and health (the parameters) are private, but we're creating member properties from them that are public and private.
10:37 < lethalduck> Maybe it'll grow on me if it has to.
10:38 < hemanth_> lethalduck, :}
10:39 < lethalduck> I guess there's nothing there that actually goes against existing rules, just adding sugar for those persistent to make the language look like something they already understand.
10:40 < hemanth_> lethalduck, but most of them like sugar don't they?
10:40 < lethalduck> hemanth_: but why?
10:40 < lethalduck> It's just more lies
10:41 < lethalduck> to try to make someone feel better.
10:41 < hemanth_> lethalduck, no someone, but ourseleves....like http://www.h3manth.com/content/arrow-functions-javascript
10:42 < lethalduck> hahaha
10:43 < hemanth_> :D
10:43 < lethalduck> Reminds me of when they introduced -> to C++
10:43  * hemanth_ knows lethalduck would be thinking that hemanth_ is a crazy fool 
10:43 < hemanth_> lethalduck, for pointers thinge, right
10:44 < lethalduck> yep
10:44 < hemanth_> obj -> method() as well?
10:44 < lethalduck> Although that actually makes sense
10:44 < hemanth_> lol it's been ages 
10:44 < lethalduck> sure
10:44 < lethalduck> it has
10:44 < lethalduck> I'm not 15
10:46 < lethalduck> Looks exactly like C#'s lamda expressions.
10:46 < lethalduck> lambda
10:46 < hemanth_> hmm
10:47 < lethalduck> funny. Why bother though
10:47 < mpfundstein> lethalduck: -> wasnt introduced to C++. it is there in C as well. It actually translates to (*obj).<member>
10:47 < lethalduck> It's just dereferencing 
10:48 < mpfundstein> jopp. so i wonder what you've meant :-)
10:48 < hemanth_> mpfundstein, :)
10:49 < hemanth_> Josh you have something to say about -> in C++
10:49 < jameshowe> child_process: if I add a 'close' listener during the 'exit' handler, is that guarenteed to always fire?
10:50 < Josh> <mpfundstein> "-> wasnt introduced to C++"  <== false.
10:50 < Josh> Or at least "wasn't" ... until where?
10:50 < Josh> err when*
10:51 < lethalduck> I've got the Dennis Ritchie bible beside me I'll check that.
10:51 < mpfundstein> even ANSI C had -> for member selection
10:51 < Josh> mpajor_op5, The question here would be... Until which "standard" the -> was not introduced.
10:51 < Josh> err mpfundstein 
10:52 < mpfundstein> Josh: you sure?
10:52 < Josh> For as long as I remember, It has been there.
10:52 < Josh> and it means exactly what you said dereferencing the object and then calling the member.
10:52 < Josh> this->a; (*this).a;
10:53 < mpfundstein> yes, so what is wrong than?
10:53 < mpfundstein> lethalduck said -> was introduced to C++. that means there must have been a C++ standard where you couldnt do obj->call_me()
10:53 < hemanth_> it's lethalduck who said it came in C++ first, Josh
10:53 < Josh> you can do silly things like class ab{ public: int a; ab(int a){ this->a=a;} } int main(){ab a(2); return 0;}
10:54 < Josh> Oh I mis-read it :P
10:54 < mpfundstein> :-)
10:54 < Josh> sorry mpfundstein 
10:54 < mpfundstein> haha, you welcome :-)
10:54 < hemanth_> :)
10:55 < hemanth_> <SomeoneWeird> fuck promise....but why?
10:56 < lethalduck> Na. I'm not sure... It was probably in C first. The Dennis Ritchie book is 1988 and not in there. I'm guessing it was around mid to late 90's
10:58 < mpfundstein> http://net.pku.edu.cn/~course/cs101/2008/resource/The_C_Programming_Language.pdf
10:58 < mpfundstein> Chapter 6 
10:58 < mpfundstein> 6.2. Structures and Functions
10:59 < mpfundstein> Pointers to structures are so frequently used that an alternative notation is provided as a shorthand.
10:59 < mpfundstein> If p is 
10:59 < mpfundstein> a pointer to a structure, then
10:59 < mpfundstein> p->member-of-structure
10:59 < mpfundstein> refers to the particular member.
11:00 < mpfundstein> thats the book you talk about right? 
11:00 < lethalduck> It should refer to the value of the member-of-structure that p points too.
11:00 < lethalduck> I think.
11:00 < bigkevmcd> I have Kelley and Pohl's "A Book on C" book from 1984, and it definitely makes reference to them (p284 for example, on linked-lists)
11:00 < lethalduck> It's been a while.
11:01 < lethalduck> Strange that Kernighan and Ritchie book doesn't then
11:01 < bigkevmcd> lethalduck: is that the white K&R book?
11:01 < lethalduck> Yeah
11:02 < lethalduck> I flicked through the pointer section
11:02 < lethalduck> chapter
11:02 < bigkevmcd> lethalduck: look at Chapter 6
11:03 < bigkevmcd> lethalduck: on Structures
11:05 < lethalduck> Yeah. Easier to search the electronic copy
11:06 < mpfundstein> you dont actually get the value of member-of-structure
11:06 < mpfundstein> its kinda difficult to explain but in fact it is a shortcut for
11:07 < mpfundstein> address_where_obj_is_in_memory + address_offset_to_member-of-structure
11:09 < Steve^> If I install a package from the npm repositories, it will bring in the submodule files that it needs, however if I install direct from a URL (in this case github), it will not.
11:09 < Steve^> Is it possible to trigger it to download the submodules too?
11:11 < lethalduck> Ah, it's the value of the variable which is an address which gives you the start of the structure. Then you reference the members address rather than the members value?
11:11 < mpfundstein> lets say 
11:11 < mpfundstein> you have struct a {
11:11 < mpfundstein> int a;
11:11 < mpfundstein> int b;
11:11 < mpfundstein> }
11:11 < mpfundstein> than a has sizeof 8
11:11 < mpfundstein> because one int is 4
11:12 < mpfundstein> if you allocate it in memory the layout would
11:12 < mpfundstein> [a][b]
11:12 < mpfundstein> if you alloc a you get an address lets say 0x8000
11:12 < mpfundstein> a->a = 0x8000
11:12 < mpfundstein> a->b = 0x8004
11:13 < lethalduck> Ok, so it's still an address
11:13 < mpfundstein> if you do a->b = 5
11:13 < jamesmhowe> maybe you should take this to a C/C++ room...
11:13 < lethalduck> Isn't node written in C++?
11:13 < mpfundstein> the compiler knows, ok 0x8000 is the beginning of a + sizeof(int) , and will write 5 into the 4 bytes of memory where 0x8004 points to
11:13 < mpfundstein> sorry 0x8004 in the beginning of my sentence
11:14 < mpfundstein> jamesmhowe: yeah you are maybe right. :-)
11:14  * mpfundstein is off for lunch :-)
11:16 < Josh> lethalduck, Part of it probably
11:16 < Josh> Its written in C++ and JS
11:16 < lethalduck> Cool
11:16 < mpfundstein> lethalduck: if you want to learn more about how everything works. check http://www.academicearth.org/courses/programming-paradigms -> this dude is the best teacher about CS i know and explains EVERYTHING so good. 
11:17 < lethalduck> how everything works?
11:17 < lethalduck> He knows everything?
11:18 < mpfundstein> :-) duuude
11:19 < lethalduck> mpfundstein: your explanation of -> was what I thought. Haven't used C for years.
11:19 < lethalduck> Is good to draw it out.
11:20 < SomeoneWeird> neat, bookmarked mpfundstein :)
11:20 < lethalduck> mpfundstein: ditto
11:21 < SomeoneWeird> wow, i've never earn heard of that site
11:21 < SomeoneWeird> looks good
11:21 < lethalduck> I'm learning node now and next year, so I'm on a bender.
11:22 < lethalduck> Hope Nexxy don't tell me off for using the b word.
11:22 < SomeoneWeird> lol
11:25 < Xiphias3> SomeoneWeird: The stanford cs ocws are wonderful. cs106b even comes with the textbox
11:25 < jprieur> hi, when doing a `npm install jQuery` I can observe that the node_modules/jQuery/package.json has a "__dependencies" entry instead of "dependencies" one, meaning it doesn't pull jQuery's dependencies. I couldn't find any documentation on this "__dependencies", any clue?
11:26 < SomeoneWeird> didn't even know there was a jquery module, heh
11:26 < SomeoneWeird> ic Xiphias3 
11:27 < hitsthings> "NPM module jQuery is an EnderJS package.
11:27 < hitsthings> please use npm install jquery not npm install jQuery"
11:28 < hitsthings> https://github.com/coolaj86/node-jquery
11:28 < hitsthings> possib relevant
11:28 < jamesmhowe> so, does anyone know whether a 'close' listener added during the 'exit' handler of a child process is guarenteed to always fire?
11:29 < mmalecki> jamesmhowe: no
11:29 < mmalecki> not at all
11:31 < jprieur> @hitsthings oh, ok. jQuery was a dependency for grunt-requirejs@0.2.8. looks like it's not the case for more recent grunt-requirejs
11:34 < mpfundstein> SomeoneWeird: you welcome, the page is awesome
11:35 < jamesmhowe> oh, well that's less useful than I'd hoped
11:41 < mpfundstein> what are you guys thinking about typescript?
11:42 < mpfundstein> anyone has good experience in it (+node)
11:42 < mpfundstein> ?
11:44 < jameshowe> is it at least the case that if 'close' is fired, it's after 'exit'?
11:45 < jameshowe> I'm guessing no now I read the docs again...
11:49 < mpfundstein> jameshowe: i dont know the specs but i guess no event can be fired after a process exits
11:49 < mpfundstein> jamshowe: events are fired in the libuv event loop, after exit this eventloop doesnt exist anymore
11:59 < jameshowe> well the annoyance is having to wait for both 'exit' (to get the exit code) and 'close' (to get the stdout) before continuing, but they could come in any order
11:59 < jameshowe> so you have to faff about with extra variables and functions
12:00 < jameshowe> if (exited && closed && !fired) etc.
12:00 < mpfundstein> what do you want to achieve?
12:00 < jameshowe> basic child process interaction
12:01 < bnoordhuis> jameshowe: v0.8 or master?
12:01 < jameshowe> 0.8
12:01 < jameshowe> upgrading from 0.6 - hence having to poke around this area
12:02 < bnoordhuis> jameshowe: you'll need to handle them in either order, i.e. close-then-exit and exit-then-close
12:03 < bnoordhuis> the stdio streams may be shared across child processes, hence the 'close' event may not come until after the last child has quit
12:03 < jameshowe> I assume therefore that 0.10 behavior is going to be different again?
12:03 < bnoordhuis> vice versa, a child process may close its stdin/stdout explicitly, then you'd get close before exit
12:03 < bnoordhuis> jameshowe: yes, but not much - in 0.10 it's mostly refinement
12:04 < jameshowe> an "everything's finished" event?
12:04 < bnoordhuis> no :)
12:04 < bnoordhuis> the way you can wire up stdio to processes is a little more versatile in 0.10
12:13 < jameshowe> cool, well thank's for the clarifications
12:35 < remysharp> Sorry for the uber noob question - but - I'm trying to get a buffer that contains 0x000000aa - which I can do with new Buffer([ 0x0, 0x0, 0x0, 0xaa ]) -- but that seems overly verbose
12:35 < remysharp> should I be able to do new Buffer('\u000000aa', 'hex')?
12:35 < remysharp> (which doesn't work by the way)
12:35 < clever> remysharp: when you pass 'hex' as the type, its expecting a hex string
12:35 < SomeoneWeird> > new Buffer('000000aa', 'hex')
12:35 < SomeoneWeird> <Buffer 00 00 00 aa>
12:36 < clever> but '\u000000aa' makes it convert the hex to binary right away
12:36 < clever> yeah, that
12:36 < bnoordhuis> no, it's a (invalid) unicode sequence
12:36 < clever> that too
12:36 < remysharp> der - cheers. I knew it should be simple - but I kept doing \u-etc or 0x00etc
12:36 < remysharp> rather than just new Buffer('000000aa', 'hex')
12:36 < remysharp> ta!
12:36 < clever> its trying to convert an invalid unicode to binary, then interpret the binary as hex
12:36 < bnoordhuis> or rather, \u0000 is valid but it doesn't do what you expect
12:46 < xananax> Hello, I am trying to use express 3.0; I want to serve the same template for GET and xhr-GET. Basically, if it is an ajax call, I want to strip the layout; but I don't understand how to do this with jade's extend. It doesn't seem like I can conditionally set extend, can i?
12:46 < xananax> I just want something akin to: if(!xhr) use layout
12:50 < _kud> if you're french or french-spoken, don't hesitate to come there ##node.js-fr :)
13:49 < zot> anybody know of a way to detect whether an object.property was defined by __defineGetter__() ?
13:50 < RLa> see if the property descriptor has getter defined?
13:51 < zot> RLa: how would i do that?
13:52 < RLa> zot, try Object.getOwnPropertyDescriptor
13:52 < zot> tnx :)
13:56 < zot> RLa: hrm.  that doesn't seem to have worked.  perhaps that's only successful if you use Object.definePropertyDescriptor(), as opposed to doing Foo.prototype.__defineGetter__('bar', function() { … });
13:58 < zot> any other ideas?  (i'm trying to dynamically handle cases like net.Socket.remoteAddress, which is causing a problem in sinon.stub().
14:12 < bnoordhuis> zot: __lookupGetter__('bar')
14:21 < zot> that seems too easy ;)
14:37 < zot> RLa + bnoordhuis: thanks.
14:38 < zot> submitted a patch concept to sinon :)
14:41 < zot> follow up: I haven't found it yet, but is there no __deleteGetter__?  __defineGetter__(x, null) isn't allowed
14:44 < shesek> is there any way to create a file only if it doesn't exists, in one atomic action? I thought there's possible some flag for fs.open(), but it seems like it doesn't
14:45 < SomeoneWeird> shesek, define "create"
14:45 < fwg> define "atomic"
14:45 < SomeoneWeird> require('child_process').exec('touch' + filename');
14:45 < shesek> SomeoneWeird, just an empty file
14:45 < SomeoneWeird> ^^
14:46 < SomeoneWeird> require('child_process').exec('touch ' + filename');  **
14:46 < SomeoneWeird> missed a space :p
14:46 < fwg> wat
14:46 < SomeoneWeird> wot
14:46 < zot> is it different from O_CREAT | O_EXCL ?
14:46 < fwg> require('fs').openSync('./foo', 'w')
14:46 < zot> (his definitions, not the node way of achieving it)
14:46 < shesek> SomeoneWeird, touch does work if the file exists
14:47 < SomeoneWeird> what's the point of only creating it?
14:47 < shesek> fwg, 'w' - Open file for writing. The file is created (if it does not exist) or truncated (if it exists).
14:47 < fwg> if you don't want truncate then a instead of w
14:47 < gildean> SomeoneWeird: use it as a persistent marker on the system?
14:47 < gildean> idk
14:47 < shesek> fwg, no, I want it to fail if the fail already exists
14:48 < zot> shesek: if it calls fopen underneath, i don't know if it's possible. (reading manpage now...)
14:48 < mAritz> bnoordhuis: semi-related question: are getters/setters still slow as shit? (last checked like a year ago :D )
14:48 < SomeoneWeird> if(require('fs').exists(filename)) { return 1; } else { require('child_process').exec('touch ' + filename)); return 0; }
14:48 < zot> iirc, in C land you had to do open, then fdopen to get that result
14:49 < bnoordhuis> mAritz: as opposed to regular properties? yes
14:49 < zot> bnoordhuis: any response about deleting them? :)
14:49 < shesek> I'm using it as some sort of a lock; I'm trying to create a file that indicates that something is locked, so that other code won't be able to create the file until its removed
14:49 < bnoordhuis> zot: deleting?
14:49 < zot> removing a getter
14:49 < bnoordhuis> zot: oh, i don't know. never benchmarked that
14:49 < zot> disabling, removing, etc. :)
14:49 < shesek> I could do that using synchronous code like SomeoneWeird suggested, but I'd rather avoid it
14:49 < mAritz> well, last i checked them agains using ['set'+name](value) and ['get'+name](value) they were like 5 times slower
14:50 < zot> no, i don't mean benchmarking.  i mean is it possible?
14:50 < zot> (see question earlier)
14:50 < fwg> shesek: ax
14:50 < shesek> with asynchronous code, things could happen between checking if the file exists and creating it, which can lead to race conditions
14:50 < fwg> to it sync with exclusive mode
14:50 < fwg> s/to/do
14:50 < SomeoneWeird> ^
14:51 < bnoordhuis> zot: delete obj.prop?
14:51 < zot> bah.  why did i not try that first.  i'm still a noob in this damned language :)
14:51 < bnoordhuis> heh :)
14:52 < zot> works.
14:52 < zot> (smack me upside the head.)
14:52 < zot> bedankt
15:10 < zykes-> Cannot find module 'mongodb/lib/mongodb/bson/bson' < what's that module coming from ?
15:11 < SomeoneWeird> mongodb?
15:11 < SomeoneWeird> lol
15:12 < zykes-> SomeoneWeird: ok ?
15:13 < Kakera> is there some kind of an accepted way to deal with enums in JS?
15:13 < Kakera> currently I implement them as String->Number objects and pass around the values as Numbers
15:14 < zykes-> SomeoneWeird: what's so funny with that ?
15:14 < Kakera> so you can have something like `if (value == ESomething.Foo) {...}`
15:15 < bnoordhuis> SomeoneWeird: no trolling, please
15:15 < Kakera> but I think it's unwieldy and am thinking about just converting the Number value into a String before passing it
15:18 < der_On> hi. does anybody else see's this behaviour of JSON.stringify(): numbers are all wrapped in double quotes
15:22 < mAritz> zykes-: how did you install the mongodb module?
15:22 < mpfundstein> are they a string when you call strinigfy?
15:24 < zykes-> nm install mongodb mAritz 
15:25 < mAritz> weird, that shouldn't cause dependencies missing :o
15:25 < mAritz> testing it myself right now
15:25 < mAritz> works for me
15:26 < mAritz> require('mongodb') at least. not sure what you're trying to do that causes this problem
15:28 < zykes-> mAritz: https://github.com/ekarlso/taxireceipt'
15:31 < mAritz> can you post a pastebin of the full stack trace?
15:31 < mAritz> or gist
15:32 < zykes-> mAritz: http://pastebin.com/X5gEUieD
15:32 < Aartsie> can someone give me a good tutorial for a express router ? 
15:33 < mAritz> well, there's your problem: ObjectID = require('mongodb/lib/mongodb/bson/bson').ObjectID;
15:33 < mAritz> https://github.com/ekarlso/taxireceipt/blob/master/mongo_api.js#L2
15:33 < mAritz> ?!
15:33 < SomeoneWeird> lmao
15:33 < SomeoneWeird> wot
15:33 < zykes-> it was there in the original repo ;p
15:33 < zykes-> i just forked it :)
15:34 < mAritz> and didn't look at the code that the stack trace was pointing at? :/
15:34 < mAritz> Aartsie: expressjs.com ?!
15:34 < zykes-> i've never actually used ndoe :)
15:34 < Aartsie> yes but i just want the request.params in an array 
15:35 < Aartsie> not /:module/:function 
15:35 < zykes-> how can i do the thing there properly then mAritz ?
15:35 < mAritz> http://expressjs.com/api.html#req.params ?!
15:35 < mAritz> zykes-: require('bson') ?!
15:36 < mAritz> because you have bson as a direct dependency in your package.json
15:36 < mAritz> if you hadn't you could do require('mongodb/node_modules/bson')
15:37 < Wes-> out of curiosity, has anybody here ever taken advantage of the half-opened socket stuff  (.end() vs. .close()) that node's net module allows?
15:38 < zykes-> the require mAritz in mongo_api.js ?
15:38 < mAritz> well, were is the error happening?
15:39 < zykes-> myeh, I tried that "require('bson')" at the top, still hates me )
15:39 < Swadq> zykes-: have you installed the bson package?
15:39 < Aartsie> mAritz: yes i have seen that page but i don't understand it
15:40 < zykes-> if I hadn't Swadq it would fail in the require('bson') no ?
15:41 < mAritz> zykes-: where is the error now? and what is it?
15:41 < zykes-> mAritz: require('mongodb').ObjectID < it had changed syntax!
15:42 < mAritz> wait, i thought ObjectID was from bson? (i have no idea about either module)
15:42 -!- mode/#node.js [+o piscisaureus_] by ChanServ
15:44 < warz> mAritz, have you checked the docs? http://mongodb.github.com/node-mongodb-native/api-bson-generated/objectid.html
15:45 < mAritz> no i have not, because i don't care about mongodb
15:45 < mAritz> ... -.
15:45 < zykes-> what's so crap about mongo ?
15:45 < mAritz> i'm trying to help zykes by asking him questions he should be asking himself and answer himself
15:45 < warz> oh, i see. i was doing the same to you, based on the one line i saw.
15:45 < mAritz> i don't know if there's anything crappy about mongo... haven't used it.
15:46 < mAritz> hehe
15:46 < warz> i think mongodb's ad hoc queries suck. filtering based on embedded documents is not possible, which seems to defeat the whole point of being able to query like that.
15:47 < warz> if you can't do that, then just go all out map reduce.
15:47 < warz> in which case, look into couchdb
15:47 < mAritz> i'm a redis guy myself. going in there deep :D
15:47 < zykes-> couchbase you mean ?
15:47 < warz> no, couchdb
15:47 < zykes-> ok :)
15:48 < warz> couchbase is a different database
15:48 < zykes-> mAritz: ey, i've barely touched js before, be nice ;p
15:48 < warz> couchbase, from what i understand, sounds like a cross between redis and couchdb
15:49 < mAritz> zykes-: not trying to be an ass or anything. it's fine to ask questions. hoewever i generally try to help people by getting them to help themselves instead of feeding code ;D
15:49 < zykes-> mAritz: thank you :)
15:49 < mAritz> unless it's some very specific problem that's actually hard to figure out or google
15:49 < mAritz> in which case I probably can't help anyways :D
15:50 < zykes-> hmm, does node have something similar to python sqlalchemy ?
15:50 < mAritz> what is that?
15:50 < warz> its a sql client library
15:50 < warz> zykes-, you can browse npm for various sql client modules
15:50 < zykes-> ok :)
15:50 < warz> id suggest choosing one thats actively maintained and fits your style
15:51 < warz> i dont know which one is popular, but im sure there are several
15:52 < zykes-> what do you guys do for persistent storage ?
15:52 < mAritz> redis, but i'm stupid :P
15:52 < bahaaldine> mongodb
15:53 < mAritz> and don't have anything large-scale
15:54 < warz> zykes-, just depends on your philosophy and needs. heh. i recently switched from mongo to couchdb, but i also use redis in the same project.
15:57 < bahaaldine> @warz what brings you to switch from mongo to couchdb ?
15:59 < rideh> is there a channel for logic help? not realy node specific
15:59 < warz> bahaaldine, i just grew tired of being able to do only simple queries using their ad hoc queries. it basically forces you to split out data into different collections and then perform manual joins on the data.
15:59 < mAritz> rideh: #logic ?! :D
16:00 < warz> and the map reduce wasn't that straight forward, in mongo, for me.
16:00 < mAritz> might be very focused on mathematic logic though
16:00 < bahaaldine> ok good to know, I don't have any xp on couchdb
16:01 < mAritz> rideh: but people love challenges, so why not just ask here?
16:02 < rideh> mAritz: probably easy for people here :) but ok
16:02 < warz> bahaaldine, couchcb does not have ad hoc querying. its a key value store, but with very straight forward map reduce.
16:03 < bahaaldine> ok that's make a big difference when it comes to high volume of data
16:03 < warz> also, ive really liked being forced to contain all of my map reduce logic on the server. it cleans up my client code a lot.
16:04 < warz> thats all just from a user standpoint. im sure other can say more about couchdb's master-master replication and stuff, and how its append-only storage. those all sound handy but i just dont know enough about what that's necesarilly better.
16:04 < warz> i only know the implications of it
16:04 < innociv_> Did node stable update with support for systemtap?
16:04 < rideh> i think i made an overly complicated solution. the problem "create quantity calculators for products on our site, products have differnt formulas for how they are used, want to make this dry as possible. "  i've broken it down to 5 primary formula types [surface area, surface-area as linear foot (ie 2"wide strips), pour-volume(2ft x3ftx4ft), joint-volume (1"x2"x40ft), surface-volume("1/4"x400ftx300ft)] *yes i realize its only surface and vol
16:04 < rideh> calcs but they need to display differnt forms - construction guys *
16:04 < trankil> innociv_: yes.
16:05 < innociv_> I wonder if there is a tutorial out there for using it.
16:06 < rideh> site needs to display a form with proper inputs and helper text, results need to be in qty of product.  example. 1 gal of Product A covers 3000 sqft, 1gal of ProductB covers 750 sq ft.  both if used on rough surfaces will be half as effective.
16:06 < trankil> rideh: we don't understand your problem. Can you explain more?
16:06 < rideh> and i need to send these formulas out via an api call
16:08 < innociv_> http://dtrace.org/blogs/brendan/2012/03/17/linux-kernel-performance-flame-graphs/ looks like what i need
16:08 < rideh> so i tried my best to dehydrate them into json using a Formula: [d,c,b,a] = ax3+bx2+cx+d breakdown so {"formulas:{"surfacearea":{"rough":formulaA,"smooth":formulaB}},"jointvolume":{…,…}}}
16:09 < rideh> so if my app sees "surfacearea" it will render form 1, if it sees "jointvolume" it will render form 2, if it sees both it'll provide a select box
16:10 < rideh> further more - if there are multiple "qualities" of surfacearea it will provide another selectbox - and use the appropriate formula
16:10 < rideh> does it really have to be this complicated? or am i making it way too hard
16:10 < trankil> rideh: Sorry, we still don't understand your problem.
16:11 < rideh> trankil: I have a product database available online, we want to add widgets to calculate how much of a product someone would have to buy
16:11 < rideh> each product has its own (and sometimes multiple) use ratios
16:12 < rideh> the input for the calculations also may differ from one to another. Ie width x length x depth or depth x gap x run
16:13 < warz> store use ratio in db, widget pulls use radio and runs the calculation for the product. boom, done.
16:13 < warz> yes, use radio. the solution is always music.
16:13 < rideh> i want to generate the appropriate forms for each product without statically writing them (i also need to make them available to a mobile app via api)
16:13 < warz> honestly, it sounds like you're clumping together too much logic. split that stuff out.
16:14 < rideh> i dont want to have to update the app everytime a manufacturer changes a mix ratio. rather be able to update it via a json feed
16:14 < warz> youve mixed databases, mobile apps, apis, formulas and html forms
16:14 < rideh> warz: how do you suggest i do that
16:14 < trankil> rideh: TLDR;
16:14 < warz> all into 1 problem
16:14 < trankil> rideh: But try to use node for that. node can decomplexify problems.
16:15 < rideh> trankil: already have the node app running, currently renders a product catalog and has api for the catalog
16:15 < warz> rideh, probably a white board and some other people who understand what youre talking about would be a good start.
16:15 < rideh> warz: nobody gets it - they all point at tables of 1" = this 2" = that and say but its right here.. not understanding that those tables were made with a formula to begin with
16:16 < rideh> warz: the idea of putting it on the we b already has them confused
16:17 < mAritz> then a whiteboard and a debugger duck
16:17 < rideh> :(
16:17 < warz> rideh, just focus on your "widgets"
16:17 < rideh> well the widget is just the view 
16:17 < warz> youll quickly learn whats missing, if anything is
16:17 < rideh> ok,
16:18 < rideh> i just dont want to go down that path if i cant rehydrate this thing
16:18 < rideh> on the other end
16:18 < warz> sounds like the widget is the user-facing thing that contains all the logic, anyway.
16:18 < rideh> true
16:18 < rideh> wish there werent so many exceptions and the people using it were a bit smarter. so i could just say "volume calc" and call it a day
16:18 < warz> so just focus on keeping all the logic contained in the widget of each item type, and if that's not easy, then put the required portable logic into the database and call on it when needed.
16:19 < warz> such as "use ratio"
16:19 < warz> or hell, even throw the formulas for the product into the products database record
16:19 < warz> as json
16:19 < warz> so when you update the 1 record it automatically gets used by the widgets
16:19 < warz> or something
16:19 < warz> theres a lot of ways to do it, heh
16:20 < warz> because youre not really talking about node, youre just talking about brainstorming some implementation design
16:20 < warz> a few beers will help there
16:21 < trankil> quit
16:24 < rideh> warz so pesudo code cuz this might help: http://dpaste.com/844766/
16:24 < rideh> trankil: why are you saying to quit, :/ i'm seeing how other people would do this to get better :(
16:25 < warz> rideh, i think he was trying to /quit
16:25 < rideh> oh
16:25 < rideh> i have join/parts hidden
16:26 < trankil> warz is a smart guy.
16:26 < warz> one word: ballmer peak
16:27 < rideh> lol
16:27 < warz> nah its 10:30 am, too early.
16:27 < warz> rideh, i dont understand your json, but it looks like you want to render html forms based on some json?
16:28 < warz> ive written something that probably wont directly work for your needs, but it might give some insight into how it might be done
16:28 < rideh> it's an object
16:28 < warz> https://github.com/ryancole/formscript.js
16:28 < warz> i wrote that for a project i am working on, in which i allow users to create custom ticket forms
16:28 < rideh> yeah, thats the idea
16:28 < warz> but i store their form in mongodb as a document
16:29 < warz> so i can query on the form fields, and values, etc
16:29 < warz> and i can recall the form later once a ticket is submitted
16:29 < warz> because the point was, the form may evolve or get deleted, etc
16:29 < warz> but tickets need to keep track of the form that was used to submit them
16:29 < warz> so i just tag along the form data as an obejct
16:29 < rideh> hm interesting, i guess i was trying to figure out how to do that and instead of storing the entire form (i have control over types) i tried to take the logic out
16:30 < warz> well i dont think this sounds like itll work for you but maybe you can see how i approached it
16:30 < rideh> also having the trouble of using mongoose and trying to query grandchildren has given me headaches so i decided to skip it and store the object as a json
16:30 < warz> and take your own approach
16:31 < warz> thats not a problem with mongoose, thats a "feature" of mongodb
16:31 < warz> thats why i moved to couchdb :p
16:31 < rideh> https://github.com/LearnBoost/mongoose/issues/601
16:32 < rideh> and im too much of a noob to properly do a recursive query
16:32 < warz> oh well i never used mongoose, i just thought you meant embedded documents in mongodb
16:32 < warz> honestly, if youre using mongodb, i suggest not using mongoose or any ORM-type client module
16:32 < warz> i suggest using the mongodb native module, or something cleaner and higher level like monk
16:33 < warz> i preferred monk. it's kick ass.
16:33 < warz> and does not get in your way.
16:33 < rideh> bit late now, was a steep learnign curve, so i followed a lot of examples online and this is how they were doing it
16:33 < rideh> first node project, doing a website with a mobile app that talks to it via api, mobile app is phonegap . figured at least sticking with js everywhere _might_ help
16:33 < rideh> i'm usually a django guy
16:34 < warz> it eventually will help, once it starts to click in your mind.
16:34 < warz> it takes a while for all the moving parts to make sense, heh.
16:34 < rideh> just learned yesterday about using counters to prevent the async from kicking my ass 
16:34 < warz> counters?
16:34 < rideh> spent 3 days figuring out that my queries wernt happening in the order i thought they were
16:34 < rideh> https://gist.github.com/4261107
16:35 < warz> well, thats where getting familiar with javascript will help you over time. generally you restructure your logic a little.
16:35 < warz> and those problems go away.
16:35 < rideh> i'd tried chaining but that kidna looked like spagetti code and still didnt fire the events in the right order
16:35 < rideh> warz: oh yea, its all a matter of wrapping my head around a different way of doing things. i ahve a LOT to learn
16:36 < rideh> warz but htat doesnt make my deadlines go further away
16:36 < warz> did you use mongo with python, as well?
16:36 < warz> or is mongo new also
16:36 < rideh> mongo is new, node is new, phoengap is new
16:36 < warz> O_O
16:36 < rideh> basically new everything
16:36 < warz> you bit off a lot to chew, there. heh.
16:36 < rideh> yea
16:36 < warz> because those two require different ways of thinking entirely.
16:37 < warz> and you're doing this for somebody, with a deadline? man, that's rough.
16:37 < rideh> also picked up jade, jquery, etc
16:37 < warz> ya, i use jade. it's pretty good.
16:37 < warz> it breaks down in several areas, for me
16:37 < warz> like, nested inline elements
16:37 < rideh> ya thats a timesaver for most things now
16:37 < rideh> lol was just about to say that
16:37 < warz> my jade ends up having html in it anyway, which bugs me
16:38 < warz> but oh well
16:38 < rideh> i hide it in snippits
16:38 < rideh> not idea but makes me feel a bit better
16:39 < warz> i never could get mustache templates to fit my style. i just need to be able to perform minimal logic in my teampltes, usually. im not disciplined enough to avoid that, i guess. heh
16:39 < rideh> well thanks for taking a look, did the pseudo code make sense at all? 
16:40 < warz> well it only tells me that youre wanting some sort of custom html form, based on data
16:41 < warz> some advice about mongo, though. i'd try to store documents as their native types, and not just throw them inthere as json.
16:41 < warz> even if you dont think you can query on them now
16:41 < warz> using json ensures that as you learn how to tquery, you definitely wont be able to
16:41 < trankil> warz, you should be happy to start your devlife with node.
16:41 < rideh> wont be able to query into it, just grab the thing as a whole right?
16:41 < trankil> some people start with php.
16:41 < rideh> i started with basic -> c
16:41 < trankil> and java
16:42 < rideh> not just c,  borland turbo c
16:42 < warz> trankil, me? or rideh?
16:42 < trankil> rideh i think
16:42 < Wes-> rideh: I still have my Turbo C 1.0 manual on my shelf
16:42 < rideh> basic -> c -> c++ -> java/c++ -> python -> here
16:42 < Wes-> along with my pre-ansi-C edition of K&R
16:42 < rideh> lol
16:42 < trankil> 4 letters nicknames :s
16:43 < rideh> remember the good ol' bible?
16:43 < rideh> sitting on my shelf for c and c++
16:43 < rideh> wish i didnt go such long stints with no programming at all
16:43 < Wes-> vaguely. I don't do much C++ programming, but when I do I keep stroustrup handy
16:43 < rideh> feel like i'm always relearning stuff, but hte high level concepts are clear - which leaves me knowing what i should do with no idea of how to do it
16:44 < warz> well thats a good spot for a dev to be in, heh
16:44 < Wes-> Yeah, most devs I know are the other way around
16:44 < warz> its the other way around which tells you it was just some person who knows programming because they got a comp sci degree and they dont know why
16:44 < rideh> nah, you tend to bite off more than you can chew and then get frustated when you get stuck on simple crap
16:45 < warz> rideh, youre not dealing with simple stuff though. haha. youve taken on a pretty large sounding project that involves some high level thinking.
16:45 < rideh> and only 1.5 months to do it in ><
16:46 < warz> at least you got node installed.
16:46 < rideh> masochist
16:46 < rideh> lol
16:47 < warz> nah last night it took about an hour or two to help another person understand their $PATH and why node wasnt working
16:47 < warz> but we did it. praise baby jesus.
16:48 < rideh> that terrible
16:48 < rideh> eh, but we were all there once… but i was always told RTFM and would spend 2 days learning the guts of everything to make sense of it on my own
16:48 < warz> its all relative, heh
16:49 < Wes-> instead of learning the guts of things, I like to ktrace/strace/truss them and see what the OS thinks they are doing
16:49 -!- mode/#node.js [+o piscisaureus_] by ChanServ
16:50 < Wes-> first reflex after many many years as a C dude
16:50 < Wes-> "this java code is broken? okay, let's see what the JVM is doing..."
16:51 < warz> wes-, ya i used to reverse engineer games and write game hacks when i started learning. so i do have an instinct to bust open a debugger or something.
16:51 < warz> i did all of that on windows though, so i would go to IDA or WinDbg
16:52 < warz> or even wireshark and packet log it, heh
16:52 < warz> i had a very brute force approach to learning back then
16:53 < Wes-> nothing wrong with that IMHO
16:53 < Wes-> I would rather a guy who understands the bottom end than the guy who deals only with abstractions, and gets hopeless lost when the abstractions are leaky
16:59 < warz> i always wanted a tool that would somehow visualize, or breakpoint on, the code that runs after clicking a GUI element inside of a DirectX game, or something.
16:59 < warz> thatd make game hacking so easy, heh
17:02 < rideh> most of my knowledge is abstract . fail 
17:03 < isaacbw> would it be laughable to have "api.com/resource" and "api.com/resource/" return different things? i.e. /resource returning details on that resource and /resource/ returning items in the resource?
17:03 < Wes-> it would screw a lot of people up
17:03 < stagas> isaacbw: yes laughable
17:04 < Wes-> by *convention* /r returns a redirect to /r/ when /r is a directory
17:04 < isaacbw> I figured
17:04 < warz> if the resource contains things, theyd be returned a long with it, no?
17:04 < isaacbw> that's probably the best way to do it. I'm just mulling over my options
17:05 < warz> if theyre seperate resources, then just include reference ids so they can be looked up at a different enpoint
17:05 < FunnyLookinHat> You should use a standard list /resource/list or /resource/index
17:05 < Wes-> or even /about/resource
17:05 < FunnyLookinHat> ya
17:06 < isaacbw> warz, I've got some properties on the resource as well as items in each one. I guess I'll just return a JSON object with the properties and an array of items
17:06 < Wes-> you should never violate the law of least surprise
17:06 < FunnyLookinHat> I generally map API paths with /Path/To/Object/<action> - and action has search/lookup/create/delete etc.
17:06 < isaacbw> I'm trying to stay restful and use the http get/put/post/delete methods and I'm overthinking it
17:07 < warz> just return the data is an array of items in that resource, if thats how its structure
17:07 < warz> structured*
17:41 < innociv_> So if I want node.js to have systemtap support i need to ./configure --systemtap-includes ?
17:42 < innociv_> configure: error: no such option: --systemtap-includes
17:42 < innociv_> On 0.8.15
17:43 < innociv_> https://github.com/joyent/node/blob/master/configure Looking on here for options
18:09 < innociv_> configure: error: no such option: --systemtap-includes on 0.8.15 https://github.com/joyent/node/blob/master/configure Looking on here for options.  Anyone?
18:11 < innociv_> Also.. how do I check what node version I have installed? To make sure.  Trying to upgrade my current one.
18:11 < innociv_> After I build from source do I need to npm install all my plugins again?
18:14 < __underscore> innociv_: node —version
18:15 < __underscore> (that's two dashes… my irc client messes it up)
18:15 < enr> can anyone recommend a lightweight node.js based blog engine?
18:15 < innociv_> Do I need to npm install underscore, express, socket.io, etc that I installed before?
18:16 < __underscore> innociv_: sorry, not familiar with your situation. you can always run node without any arguments to enter the repl
18:16 < __underscore> then do "var u = require('underscore')" and see if it works
18:16 < innociv_> ah
18:18 < s5fs> hi gang, I'm writing some code to generate config files and these generally are writable only by root. what's the safest way to accomplish this?
18:19 < s5fs> my knee-jerk reaction is to just make those files readable via an 'install' script or something
18:20 < AviMarcus> enr, if you google "node.js blog engine" a bunch of stuff shows up, but I can't make any recommendations
18:21 < remysharp> Sorry if this is obvious, but when I do console.log - is there any way to get control the depth? I'm seeing a few [Object] properties where I'd actually like to see what's inside (of an anonymous object)
18:22 < s5fs> remysharp: try util.inspect(myObject) to see inside
18:22 < AviMarcus> remysharp, but you need to load util first
18:23 < s5fs> don't forget to save the file before re-trying!
18:24 < remysharp> cheers - console.log(util.inspect...
18:24 < remysharp> s5fs: cheers - I think I could handle saving the file ;-)
18:24 < ThePrimeMedian> anyone have experience with using functions inside a .jade template?  My function is coming back as undefined.  Im using res.locals.translate = function(str) {} ... in my template, I do h1= translate('title') but node errors outs and says translate is undefined
18:24 < s5fs> remysharp: haha, good deal, glad that works for you.
18:25 < ThePrimeMedian> remysharp: wow. nice to see you in here... i follow your site :)
18:25 < remysharp> ThePrimeMedian: my site - yeah, that does need an update! :)
18:31 < TehShrike|Work> Can anyone direct me at the appropriate headers I should be returning if I want browsers to be able to do XHR against a server running on a different port than the server hosting the static files?  Chrome gives me errors like "Request header field x-requested-with is not allowed by Access-Control-Allow-Headers."
18:31 < ThePrimeMedian> can anyone help me get my res.locals.functionName = function() {} to work inside a jade template? I am getting functionName is undefined
18:35 < rudiX> TehShrike|Work:   res.header("Access-Control-Allow-Origin", "*")
18:35 < rudiX> on the remote server
18:36 <@isaacs> rump: yes, that is how i envisioned it.  install your deps locally.
18:36 <@isaacs> rump: you can also do `npm link jshint` to use the global one, or add "scripts":{"lint":"jshint blah blah"} and run `npm run lint`
18:36 <@isaacs> rump: i realize it wasn't your question, but sayd isn't around ;)
18:36 < TehShrike|Work> rudiX: I'm rolling with that one at the moment, which got Chrome to stop telling me "Origin is not allowed by Access-Control-Allow-Origin" but now it's complaining "Request header field x-requested-with is not allowed by Access-Control-Allow-Headers."
18:37 < rump> good to know though, thanks :)
18:38 < rudiX> TehShrike|Work: http://www.webconfs.com/http-header-check.php
18:39 < rudiX> and gist it
18:39 < TehShrike|Work> Sounds reasonable
18:39 < TehShrike|Work> I'm not on a routeable IP at the moment, though...
18:40 < stagas> ThePrimeMedian: it should be working if you define it before the route. if it's a static function you can use app.locals.fnName outside of the middleware/routes
18:40 < rudiX> TehShrike|Work:  curl -v http://localhost
18:42 < ThePrimeMedian> stagas: if I do a variable name like res.locals.appName = 'title', that'll work, but not the function, I am doing this inside the app.configure before the app.router
18:43 < rudiX> yeah, I also wanna know about these so called global variables in express 3
18:44 < stagas> ThePrimeMedian: that's weird! what is the exact name of the local? some names collide with express internals. or gist some code
18:44 < ThePrimeMedian> sure, stagas: 2 secs
18:47 < ThePrimeMedian> stagas: nevermind. it's because there was an error inside the function itself.
18:47 < ThePrimeMedian> facepalm
18:48 < TehShrike|Work> rudiX: you know your utilities! :-) http://hastebin.com/veyayoqusu.txt
18:49 < stagas> ThePrimeMedian: typical
18:49 < ThePrimeMedian> i know ;)
18:50 < MI6> joyent/node: isaacs streams2-stdin-wip * b86f2e9 : streams2: Writable only emit 'finish' once - http://git.io/3UJ4vw
18:50 < rudiX> TehShrike|Work:  seems legit
18:51 < rudiX> :)
18:51 < TehShrike|Work> Well man, why is Chrome being such a spoil-sport
18:52 < st_luke> TehShrike|Work: are you trying to use cookies cross origin
18:52 < rudiX> TehShrike|Work: play with the headers ... text/html ... 
18:52 < TehShrike|Work> st_luke: I'm not specifying a domain when I'm setting the cookies
18:52 < TehShrike|Work> st_luke: I am setting cookies, though, and it is cross-origin
18:53 < TehShrike|Work> st_luke: should I be specifying a domain?  And if so, should it be the client domain or the server domain? :-x
18:53 < st_luke> TehShrike|Work: it's going to be set on the domain that creates it
18:54 < TehShrike|Work> hmm, so that'd be the server's domain in this case
18:54 < st_luke> TehShrike|Work: if you want to use cookies cross domain use Access-Control-Allow-Credentials: true
18:54 < st_luke> however
18:54 < st_luke> you can't use that with access-control-allow-origin: *
18:54 < TehShrike|Work> Right, I did set that already
18:54 < st_luke> you have to specify the domain in that case
18:54 < TehShrike|Work> I'll try Access-Control-Allow-Credentials: true!
18:55 < st_luke> chrome will yell at you for using access-control-allow-origin: * if you set that allow credentials header 
18:56 < TehShrike|Work> hmm, and now I'm back to Origin http://127.0.0.1 is not allowed by Access-Control-Allow-Origin
18:56 < st_luke> TehShrike|Work: yeah
18:56 < st_luke> you have to add that specific origin
18:57 < st_luke> you can't use 'access-control-allow-origin: *' with access-control-allow-credentials
18:57 < Wes-> what is 'this' in the context of an EventEmitter callback (event function)?    Is it the object that the listener was defined on?
18:57 < substack> 127.0.0.1 should always be allowed for everything
18:57 < TehShrike|Work> Man, I'm starting to feel like it might be worthwhile to give myself an education on different HTTP headers at some point
18:57 < st_luke> you have to be explicit
18:57 < TehShrike|Work> st_luke: so if I wanted to be able to talk to files served on the same domain, but on a different port, I would set access-control-allow-origin "mydomain.com:clientport"?
18:58 < st_luke> TehShrike|Work: yeah
18:58 < TehShrike|Work> Groovy.
18:59 < st_luke> TehShrike|Work: you might also have to specify `withCredentials` in your front end code
18:59 < st_luke> https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest
19:11 -isaacbw:#Node.js- ping
19:11 < tuhoojabotti> pong
19:12 < tuhoojabotti> How soon is 0.10 coming, I'd like to use streams in my project, but don't want to rewrite for streams2 
19:12 < mscdex> tuhoojabotti: streams2 is backwards compatible from what i understand
19:13 < isaacbw> does anyone know which IRC command is used for /me ?
19:13 < tuhoojabotti> I know, I just don't want to write soon-to-be legacy code 
19:13 < tuhoojabotti> isaacbw: action
19:13 < isaacbw> awesome, thanks
19:13 < tuhoojabotti> i think
19:13 < isaacbw> hrm
19:13 < isaacbw> I can't find that in rfc 2812
19:14 < tuhoojabotti> it reminds me of ctcp 
19:15 < tuhoojabotti> so maybe privmsg with encoding
19:15 < tuhoojabotti> like \0action asd\0
19:15 < tuhoojabotti> I recall, could be wrong 
19:16 < isaacbw> hmm, I'll wireshark xchat
19:17 < tuhoojabotti> no need 
19:17 < tuhoojabotti> I'll check my source code 
19:18 < tuhoojabotti> hmm
19:19 < tuhoojabotti> \u0001ACTION message\u0001
19:19 < tuhoojabotti> I'm pretty sure it's an privmsg like that
19:19 < tuhoojabotti> according to my own code :D
19:20 < tuhoojabotti> Which works.
19:21 < gkatsev> isaacbw: the irc command for /me is /me. That's where /me comes from: IRC
19:21 < mscdex> yeah /me uses CTCP
19:22 < tuhoojabotti> gkatsev: In the protocol it's called an action.
19:22 < hillct> Good afternoon all. It seems http://nodejs.tchol.org is dead. Is there a new Centos package repo I should be using for node RPM packages?
19:22 < atula> I am currently using express
19:22 < tuhoojabotti> isaacbw: http://www.irchelp.org/irchelp/rfc/ctcpspec.html
19:22 < tuhoojabotti> This is used by losers on IRC to simulate "role playing" games. An action message looks like the following: \001ACTION barfs on the floor.\001
19:22 < gkatsev> tuhoojabotti: that's true.
19:23 < gkatsev> just "IRC command" translates as what do you type in your client to do that.
19:23 < tuhoojabotti> gkatsev: Then client coders, thought it was stupid to write /action so they added an alias.
19:23  * tuhoojabotti lol
19:24 < tuhoojabotti> works with /action too
19:24 < tuhoojabotti> So it is /action in the client too.
19:24 < tuhoojabotti> /me is just a shorthand that fills in the channel you're at.
19:24  * gkatsev this works? Who knew. (I did)
19:25 < atula> hello. I am using Express and Socket.IO and I know that I could use cookie session to remember stuff.  However, in my case, it's quite simple.  I have some play/pause button in the client and when I emit the "play" state, I want a variable on the server to remember that play=true and vice versa.  Do I need to use session here or can I just do a var is_playing = false; and change it in the socket on event?
19:25 < tuhoojabotti> gkatsev: The point is, I could write a client and call it /heylookatme, but that doesn't change the fact that it's an action.
19:26 < gkatsev> tuhoojabotti: yes. I was thinking of what you'd do in a client rather than the IRC protocol
19:26 < ryanrolds_w> atula, You can add that property that to the socket.io socket for that client. I don't know if that is frowned upon or not.
19:26 < tuhoojabotti> gkatsev: Yeah, but if someone is asking what irc command you use for /x, it usually implies the protocol, not the command
19:27 < nathan7> isaacs: There is a *tonne* of npm issues on github that are invalid
19:27 < nathan7> isaacs: I'm going through a bunch and a lot of them are package issues or user error
19:27 < atula> ryanrolds_w, meaning set a variable in the io.sockets.on('connection' scope?
19:28 < gkatsev> nathan7: put a comment with your findings for those. I'm sure it'll be a lot of help.
19:28 < nathan7> gkatsev: A bunch of them already has a helpful comment
19:28 < hbeck> is there not a way to tell the 'size' of a buffer? since buffer.length is the allocated length, not the contents size
19:28 < gkatsev> nathan7: ok. Well, for the other ones :)
19:28 < nathan7> Yeah
19:29 < ryanrolds_w> atula, Yes, on connection you should get a socket that represents that clients connection. You are free to add properties to that, just be careful about collisions (think same variable/property names).
19:30 < atula> ryanrolds_w, I thnk I should use session then because I need to access it in another scope
19:30 < atula> (global scope)
19:31 < nathan7> isaacs: stacks of them are also just people who haven't upgraded their npm
19:32 < nathan7> isaacs: Mind giving me access to close the ones that are certainly useless?
19:32 < isaacbw> tuhoojabotti, my internet was cutting out. Did you end up finding out about action commands?
19:32 < tuhoojabotti> yes
19:32 < tuhoojabotti> isaacbw: privmsg with \u0001ACTION msg\u0001
19:32 < isaacbw> awesome, thanks :)
19:32 < tuhoojabotti> As in CTCP protocol, not in the RFC.
19:33 < isaacbw> you're awesome
19:33 < ryanrolds_w> atula, Yeah, my suggestion isn't a great solution. Look at this: http://stackoverflow.com/questions/13572652/how-to-access-req-session-variables-from-within-socket-io
19:33 < tuhoojabotti> isaacbw: http://www.irchelp.org/irchelp/rfc/ctcpspec.html
19:33 < mscdex> hbeck: no, there is no way of knowing arbitrarily
19:33 < isaacbw> so the client sends it to to every other client in the channel on its own?
19:33 < mscdex> hbeck: that's an application-specific kind of thing
19:33 < tuhoojabotti> isaacbw: No, to the channel.
19:34 < isaacbw> ah, okay. I'll just read through this
19:34 < tuhoojabotti> Or to a client
19:34 < tuhoojabotti> Just like a message to the channel.
19:34 < atula> ryanrolds_w, room is the answer I think
19:35 < innociv_> configure: error: no such option: --systemtap-includes on 0.8.15 https://github.com/joyent/node/blob/master/configure Looking on here for options.  Anyone?
19:40 < hbeck> out of curiosity... what is syntax  val = +val  doing?
19:40 < tuhoojabotti> hbeck: nothing.
19:40 < tuhoojabotti> it's the same as val = val
19:40 < tuhoojabotti> I think.
19:40 < hbeck> why the + ?
19:41 < tuhoojabotti> Looks weird to me.
19:41 < TehShrike|Work> >> var a; a = +1
19:41 < purr> TehShrike|Work: (number) 1
19:41 < tuhoojabotti> yeah
19:41 < TehShrike|Work> var a, b; b = 2; a = +b; console.log(a)
19:41 < TehShrike|Work> >> var a, b; b = 2; a = +b; console.log(a)
19:41 < purr> TehShrike|Work: undefined; Console: 2
19:42 < fwg> >> var a = '123 this is a number, right?'; +a
19:42 < purr> fwg: (number) NaN
19:42 < fwg> >> var a = '123'; +a
19:42 < purr> fwg: (number) 123
19:42 < mscdex> it's for coercing a string to a number
19:42 < mscdex> instead of parseInt
19:43 < hbeck> hmm ok
19:43 < TehShrike|Work> parseInt is less obtuse
19:43 < zackiv31> how can I require something from the node interactive shell? what is the base directory?  why can't I just 'var _ = require('/my/path/to/underscore')' ?
19:43 < mscdex> parseInt is less strict
19:43 < TehShrike|Work> parseInt('123 this is a number, right?')
19:43 < TehShrike|Work> >> parseInt('123 this is a number, right?')
19:43 < purr> TehShrike|Work: (number) 123
19:45 < ThePrimeMedian> anyone use the package "dialect"?
19:45 < hbeck> what is the property holding the # of bytes in a dgram message's rinfo object?
19:45 < hbeck> documentation does not specify
19:46 < mscdex> hbeck: .size
19:46 < mscdex> hbeck: or just the size of the buffer
19:47 < hbeck> ok
19:47 < hbeck> mscdex: thanks
19:48 < mscdex> zackiv31: is '/my/path/to/underscore' a directory that contains package.json ?
19:48 < mscdex> zackiv31: or is underscore here an underscore.js file ?
19:48 <@isaacs> isaacbw: nice name.
19:48 < mscdex> heh
19:48 < hbeck> heh ok one more... what is the difference between the zlib Gunzip and Inflate ?
19:48 < tuhoojabotti> isaacs: So he's not you?
19:48 < tuhoojabotti> :D
19:49 < isaacbw> yours is pretty nice too
19:49 < zackiv31> mscdex: yes it is
19:49 < tuhoojabotti> isaacs: Any estimate on 0.10?
19:49 < isaacbw> :P
19:50 < zackiv31> err... I think _ is reserved in the shell... well thats fun
19:50 < tuhoojabotti> Can't wait for streams2
19:50 < zackiv31> must have been chosen by someone who despises underscore :)
19:50 < tehisaac> am I cool now?
19:51 < mscdex> hbeck: gunzip works on gzip formatted data, inflate works on zlib formatted data
19:51 < hbeck> thanks again
19:53 <@isaacs> tuhoojabotti: january
19:53 < tuhoojabotti> Okay
19:53 <@isaacs> tuhoojabotti: it's very close to finished, but nothing happens in December.
19:53 <@isaacs> tuhoojabotti: holidays and travel etc
19:54 < tuhoojabotti> isaacs: Do you know if I can still use streams for non-streamable data. Like if I want to pipe stuff, but instead of buffers or strings I want to pass objects. Is it still possible?
19:54 <@isaacs> tuhoojabotti: yes, it is possible.  talk to dominictarr and Raynos
19:54 <@isaacs> tuhoojabotti: they're doing this all over the place.
19:55 < tuhoojabotti> Actually I'm using dominictarr's event-stream lib already
19:56 < tuhoojabotti> isaacs: He seems reluctant to update: https://github.com/dominictarr/event-stream/issues/21
19:56 < tuhoojabotti> Not sure, though
19:59 < innociv_> I'm having some issue figuring out how I'm supposed to use systemtap to profile node.js :\
19:59 < Raynos> tutoojabotti: oh hi
19:59 < innociv_> http://blog.nodejs.org/2012/04/25/profiling-node-js/ I previously found this for dtrace
19:59 < tuhoojabotti> Raynos: Hello
20:00 < Raynos> tutoojabotti: I recommend you look into Raynos/chain-stream
20:00 < tuhoojabotti> I bet you do. :P
20:00 < Raynos> I also actually recommend you don't use streams2 until 0.10
20:00 < Raynos> its not worth the pain.
20:00 < tuhoojabotti> Raynos: I'm not going to.
20:01 < tuhoojabotti> I'm thinking that maybe streams aren't even the best solution in my case.
20:01 < tuhoojabotti> I might go with connect-style middleware
20:02 <@isaacs> Raynos: well... s/0.10/0.9.4/ but yeah :)
20:03 <@isaacs> Raynos: We should have a serious conversation about how to get your object streams supported nicely.
20:03 <@isaacs> Raynos: and by "serious conversation" i mean "using JavaScript rather than English"
20:03 < Raynos> tuhoojabotti: connect-style middleware is always the wrong solution
20:04 <@isaacs> Raynos: i think that it's very achievable with relatively minor changes.
20:04 < Raynos> isaacs: I agree
20:04 < Raynos> It just requires a bunch of refactoring on my part
20:04 < Raynos> and figuring out how to rebuild my libraries to use _read and _write
20:06 < phrearch_> hey
20:06 <@isaacs> Raynos: i think the biggest chnage required is to treat a non-buffer/non-string as alwyas having a length=1 if it doesn't have a lenght property
20:06 <@isaacs> Raynos: or maybe just ignore lengths if it's not a stringish
20:07 <@isaacs> Raynos: so read() always returns 1 "thing" if it's not buffery
20:07 <@isaacs> (stringish?  buffery?  we need a better word for this...)
20:07 <@isaacs> Raynos: ie, I don't think that read(2) should return [obj,obj] if read(1) returns obj
20:08 <@isaacs> Raynos: if you're not returning buffers or strings, then read() should alwyas return one thing, and ignore the size arg
20:08 < pieces029_> Hello everyone, I was wondering if someone could point me in the right direction.  How would one go about using an event emitter to emit an event to all objects of that type?
20:08 < Wes-> isaacs: we use "ByteThing" in gpsee to describe "buffery" things, like CommonJS ByteArray, blocks of memory for I/O buffers, blocks of memory for C structs, etc
20:09 < CoverSlide> pieces029_: you'd need a reference somehow to all objects of that type
20:10 < pieces029_> CoverSlide: so an object inside of said object that has the event emitter?
20:10 < CoverSlide> something like that
20:10 <@isaacs> Wes-: sure, but for this situation, we literally mean either Strings or Buffers
20:10 <@isaacs> Wes-: typeof x === 'string' || Buffer.isBuffer(x)
20:10 < pieces029_> ty
20:11 <@isaacs> Wes-: ByteArrays et al are pretty different.
20:11 < Raynos> isaacs: pretty much. It should also not try to join any string / buffer chunks into one thing
20:11 <@isaacs> Wes-: and blocks of memory for I/O buffers are always exposed in node as Buffer objs
20:11 < CoverSlide> like if you have a constructor, you can put an "instances" property on the constructor when the constructor gets called, the new instance is added to the instances property
20:12 <@isaacs> Raynos: right.
20:12 < CoverSlide> just one way of doing it
20:12 < Wes-> isaacs: Ah! Literally at the high level -- gotcha.  I happened to be buried in a "should I do a shared-read/copy-on-write" implementation on ByteThings right now, to get down to zero-copy from the network stack to the JS object.. So, you know how that goes, what you're working on affects your perception of what's going on around you. :)
20:12 <@isaacs> Raynos: How would you feel about having to set {stringData: false} or something in the config option hash?
20:12 <@isaacs> Raynos: bikeshed on the key name, whatever.
20:13 < Raynos> isaacs: so this would be opt in?
20:13 <@isaacs> Raynos: but, just a thing that you have to set in your ctor when you call Readable
20:13 <@isaacs> Raynos: yeah, something like Readable.call(this, { nonBufferyData: true })
20:14 <@isaacs> Raynos: and that'd tell Readable to use the non-buffer-friendly versions of howMuchToRead()
20:14 <@isaacs> Raynos: (ie, always return 1, always treat length as 1)
20:15 < rideh> warz: thanks for your form script - using your great idea of defining the form schema alongside the data - why rely on trying to make the logic rebuild it (and perhaps screw it up) also like you said, form might change.
20:16 < warz> yup. no prob. :)
20:18 < atula> this is so hard!
20:18 < atula> I just want to have session and remember something that I can use in another scope (global)
20:18 < atula> I've been reading express session and it's retardedly confusing to me
20:20 < elliottcable> This bug seems specific to Node.js
20:20 < elliottcable> doesn't happen in the Chrome V8 inspector or Safari's JavaScriptCore
20:20 < elliottcable> Object.defineProperty(Object.prototype, 'foo', {get: function(){ console.log('got.') }}); Object.getOwnPropertyNames(Object.prototype)
20:20 < elliottcable> I'd demonstrate with the bot, except eboy's original oftn-bot implementation prevents modification of Object.prototype
20:21 < rideh> warz: i'm going to wrap it though so something can have a dropdown that changes the fields available
20:21 < elliottcable> Only happens on Object.prototype specifically
20:23 < CoverSlide> elliottcable: have you checked it with d8?
20:23 < CoverSlide> elliottcable: with the version of node you've tried it on?
20:23 < warz> rideh, ya i had thought about expanding what can be specified in the schema. i just recently added the initial values option. i had wanted to add some sort of event handler option that would let you specify a handler function, or something.
20:24 < warz> rideh, it's on my list of things that i'll probably add to it. assuming we continue using it here at work.
20:24 < elliottcable> v0.8.11
20:24 < elliottcable> CoverSlide: doesn't happen for you?
20:24 < CoverSlide> on v0.8.14 it seems to work correctly
20:24 < elliottcable> it doesn't print “got!”?
20:24 < CoverSlide> oops i'm on .15 now
20:24 < CoverSlide> getOwnPropertyNames doesn't
20:24 < elliottcable> http://ell.io/iyB0e
20:24 < CoverSlide> {}.foo does
20:24 < elliottcable> interesting
20:25 < CoverSlide> oh wait nvm it does
20:25 < CoverSlide> hmm
20:25 < CoverSlide> maybe try it with d8
20:27 < CoverSlide> d8 3.14.0 does the same thing
20:27 < CoverSlide> if you replace console.log with print
20:27 < elliottcable> yeah, happens in v8 for me as well
20:27 < elliottcable> http://i.ell.io/f3ox
20:30 < elliottcable> anybody have a JSC or SM interpreter on hand to try this in?
20:32 < CoverSlide> latest version of chrome stable (23.1271.95) uses V8 3.13.7.5 and I am getting this as well
20:32 < CoverSlide> i just tried it on jsc-1
20:35 < CoverSlide> but i can't seem to get the version from that
20:35 < CoverSlide> it's from webkitgtk2 1.10
20:36 < CoverSlide> elliottcable: JavaScript-C 1.8.5 2011-03-31 << spidermonkey doesn't do it
20:38 < CoverSlide> honestly as fast as v8 is, it's got plenty of bugs and gotchas that are a little wtf
20:38 < CoverSlide> i recently discovered one where it wouldn't check accessor attributes if it's more than one level up the prototype chain
20:39 < CoverSlide> er accessibility
20:47 < CoverSlide> ah here we are: http://code.google.com/p/v8/issues/detail?id=1475
20:47 < CoverSlide> it seems they have "deliberate spec violations"
20:47 < CoverSlide> although seems fixed now
20:56 < mikesm> http://jsbin.com/welcome/61136. Does __filename refer to the fileName? How does this work?
20:56 < mikesm> This is from http://nodetuts.com/04-streams.html
20:57 < Kakera> mikesm, http://nodejs.org/api/globals.html#globals_filename
20:57 < CoverSlide> __filename refers to the name of the current module file
20:57 < CoverSlide> I'm guessing matt ranney provided the documentation for that
21:00 < mikesm> Kakera, CoverSlide Thanks!
21:06 < rideh> recommended way for having users enter fractions within a given range?  eval(), select box, enter the denominator?
21:08 < RLa> select box sounds best if you have good values for it
21:09 < rideh> hmm what about sliders for the numerator and denominator seperately?
21:09 < rideh> probably making it too hard
21:13 < myndzi> anyone familiar with kue? i'm wondering if i can pass some data with the job complete event or what
21:15 < mAritz> rideh: how about a textbox? :P
21:15 < mAritz> make your users enter floats
21:15 < tim_smart> substack: Ping. When I do a fleet spawn, does it stop the previous deploys of the same repo?
21:15 < rideh> mAritz: its a calculator, i dont ant them needing a calculator to use a calculator
21:16 < substack> tim_smart: nope
21:16 < tim_smart> substack: So the full set of commands would be fleet deploy && fleet stop && fleet spawn -- node server.js
21:16 < mAritz> rideh: the common way to enter fractions in calculators is x/y
21:17 < mAritz> in one textbox
21:17 < rideh> this is for construction workers, i dont know if they know where / is on the keyboard
21:17 < rideh> i'm being serious
21:17 < substack> tim_smart: you need to specify the process hash when you stop
21:17 < substack> the idea is that you should verify that the new process actually works before bringing down the old thing that works
21:18 < tim_smart> substack: Right. So if I was to automate this in a bash script somehow..
21:18 < tim_smart> substack: A test suite would run before fleet gets to see some action.
21:55 < paul_> Hello everyone. Has anyone had any luck using node-inspector with v8-profiler recently? I'm trying to track down some memory leaks and getting an error trying to generate a heap dump with it.
22:04 < sha0coder> hi
22:19 < Cheery> how do I define include directory for GYP when building modules?
22:20 < Cheery> oh wait lol
22:20 < Cheery> I was modifying the wrong file
22:21 < TooTallNate> Cheery: use "include_dirs"
22:21 < TooTallNate> Cheery: like this https://github.com/rbranson/node-ffi/blob/bfcb09d819f36ac3a21065d41253a9bee1cfb935/deps/libffi/libffi.gyp#L102-L106
22:23 < Cheery> yes
22:23 < Cheery> I was modifying the wrong file
22:26 < cliffano> if i have streamA.pipe(streamB).pipe(streamC); and streamA emits data too fast for streamC to process, resulting in high memory usage (backpressure?) and eventually out of memory. is the right way to slow down streamA is to control streamA's pause and resume?
22:27 < deoxxa> cliffano: that's meant to happen anyway
22:27 < deoxxa> cliffano: at least if the streams implement everything properly
22:30 < cliffano> deoxxa: i see, it's possible that either A or B doesn't implement everything properly in this case... assuming everything is proper, am i right to expect that piping streams x.pipe(y).pipe(z) should just work without backpressure to ever occur?
22:30 < TooTallNate> cliffano: backpressure != memory usage
22:30 < TooTallNate> the opposite in fact
22:31 < TooTallNate> buffering == memory usage
22:32 < cliffano> TooTallNate: can't backpressure cause buffering? (if one of the streams does buffer)
22:34 < TooTallNate> cliffano: for backpressure to work properly, the stream A just needs to *not* emit data while stream C slowly consumes
22:35 < TooTallNate> cliffano: if stream A is a net.Socket, this would happen via a TCP-level "pause". if stream A is a fs.ReadStream, it would just stop reading from the fd until stream C is ready for more
22:36 < adz> Hi does anybody know a Node.js framework for writing a RESTful API connecting to Mongo?
22:38 < wprl> adz: I have a repo on GitHub https://github.com/wprl/baucis might be interesting to you
22:40 < cliffano> adz: check out restify http://backbonetutorials.com/nodejs-restify-mongodb-mongoose/
22:42 < adz> hmm...so is it better to use restify or express as the backend?
22:42 < adz> baucis uses express it seems
22:44 < cliffano> TooTallNate: in my case, stream B keeps emitting data even when stream C slowly consumes. stream C is fs.WriteStream. i suspect stream B must be buffering somewhere.
22:45 < TooTallNate> cliffano: sounds like B it doesn't implement .pause() properly
22:45 < TooTallNate> cliffano: it shouldn't buffer, but instead it should tell stream A that it's now paused, and call .pause() on stream A as well
22:46 < cliffano> TooTallNate: deoxxa: thanks for the explanation. i know where to put the .pause() now
22:47 < MI6> joyent/node: isaacs created branch v0.8.16-release - http://git.io/5RMPZQ
22:51 < misterhat> how can i add an array to the beginning of a buffer?
22:51 < CoverSlide> The size of a buffer cannot be modified
22:51 < misterhat> i know
22:51 < misterhat> but if i create like new Buffer(5000);
22:52 < misterhat> how can i add an array to the beginning of the buffer
22:52 < CoverSlide> so you want to shift the contents of the buffer
22:52 < CoverSlide> hmm interesting
22:52 < misterhat> i don't think it's shifting
22:52 < TooTallNate> misterhat: array of what? numbers?
22:52 < misterhat> yeah TooTallNate
22:52 < CoverSlide> perhaps buf.copy on itself
22:52 < CoverSlide> wonder if that has any negative implications
22:53 < TooTallNate> misterhat: so just loop through the array and set the values in the buffer
22:53 < misterhat> o
22:53 < misterhat> good idea
22:53 < TooTallNate> make sure they're in the range 0-255 ;)
22:53 < misterhat> yeh
22:53 < TooTallNate> misterhat: you can also pass an array of numbers in to new Buffer() directly
22:53 < TooTallNate> new Buffer([1,2,3,4,5])
22:54 < misterhat> TooTallNate: yeah so the same question applies then
22:54 < misterhat> how would i be able to fill an array
22:54 < misterhat> so like it's got [1,2,3,4,5]
22:54 < mscdex> you should be able to copy a buffer to itself safely
22:54 < misterhat> i'll try both approaches 
22:54 < mscdex> buffer.copy uses memmove, not memcpy
22:54 < misterhat> i imagine buffers would be faster than working with arrays 
22:55 < TooTallNate> misterhat: i think we need more context of what you're doing
22:55 < TooTallNate>  / trying to do
22:55 < misterhat> just send a buffer of data that's consistently 5000 bytes
22:56 < CoverSlide> send? to where?
22:56 < misterhat> a client
22:56 < TooTallNate> misterhat: and what is the "data"
22:56 < misterhat> well it's a packet
22:56 < TooTallNate> why does it need to be 5000 byes?
22:57 < misterhat> but it consists of just ints/shorts
22:57 < CoverSlide> ok so it's consistently 5000 bytes exactly, and the data inside can be arbitrary?
22:57 < misterhat> etc.
22:57 < TooTallNate> bytes
22:57 < misterhat> and that's what the client accepts
22:57 < CoverSlide> is there some kind of protocol for this?
22:57 < misterhat> not really 
22:57 < misterhat> no
22:57 < misterhat> right now i'm not exactly looking for the most efficient method to do it
23:11 < AviMarcus> Is there a way to see what handles are still open in my script that's keeping it from automatically closing?
23:12 < AviMarcus> ah I realized what it was. But it's still a useful question.
23:20 < kaiquewdev> Hi, everybody... somebody, can help me with a question... how can i use the cluster module, in a real application?
23:21 < kaiquewdev> Or a simple example, of him working...
23:37 < MI6> joyent/libuv: piscisaureus created branch reviewme - http://git.io/ijIKow
23:38 < CoverSlide> either this apple is bleeding or i need to see a dentist
23:41 < superjoe> maybe your adult teeth are coming in
23:41 < mscdex> niggler: what was the fix you had to apply for OSX to get the ncurses module working?
23:42 < deoxxa> superjoe: lel
23:42 < AAA_awright> tmi tmi tmi
23:57 < trankil> Everyone should have at least one goal in his life.
23:58 < chilts> or her life :)
23:58 < [mlg]d30xx4[mlg]> mine is to attain a goal
23:58 < [mlg]d30xx4[mlg]> also to be the best there ever was
23:58 < trankil> Yes. My brother's one is to die *before* the release of node v1. He is 15.
--- Log closed Thu Dec 13 00:00:07 2012
