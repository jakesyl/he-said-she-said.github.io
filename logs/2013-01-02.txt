--- Log opened Wed Jan 02 00:00:08 2013
00:40 < niftylettuce> hey folks if you're interested in building your own RC Cessna check out my github repo https://github.com/niftylettuce/cessna-182-skylane-rc-plans -- i plan to add node.js streaming from an 808 camera
00:40 < niftylettuce> FPV flying :)
00:41 < mistertwig> alright so no forum software for node
00:48 < mmalecki> niftylettuce: this is awesome
00:49 < astropirate> niftylettuce, if i had a cessna, i would fly it
00:49 < astropirate> and do baral roll
00:49 < astropirate> not let some robot fly it
00:49 < astropirate> lol
00:51 < Sicp> fucking finally
00:53 < Sicp> res.send() for the win
01:12 < niftylettuce> astropirate: you build your own
01:12 < niftylettuce> mmalecki: :) nice, yeah im going to add carrier controlled over 3G/4G
01:12 < niftylettuce> its nice having sensors/camera/gps/sim all in one for <$50
01:12 < niftylettuce> motorola razr's have awesome OTA band
01:13 < niftylettuce> might use htc desire though since they are lightweight, sony xperia or w/e has android and can even do opera mobile 11 with camera via web browser and socket.io
01:13 < niftylettuce> mmalecki: join #cessna, im about to invite 500+ members to the group
01:13 < niftylettuce> mmalecki: trying to get some RC hobby pros to start writing JS
01:14 < mmalecki> niftylettuce: how much is that nifty cessna?
01:14 < mmalecki> I wanted to get to it when I was 15 but shit was too expensive
01:14 < niftylettuce> mmalecki: i used 40% off coupons and bought all the balsa wood, ply, and xacto knife #11 at Michael's for <$30 or so
01:14 < niftylettuce> mmalecki: u build yourself using the plans i posted, its really easy, just get instant glue and one of those elmer glue sticks
01:14 < niftylettuce> weighs 8oz total once built
01:15 < niftylettuce>  can help
01:15 < niftylettuce> i can help*
01:15 < mmalecki> shit, this *is* nice
01:15 < niftylettuce> mmalecki: you can use the printable plans i made with Adobe InDesign to print out on 8.5 x 11 paper normal sized then glue on with gluestick to balsa and get xacto #11 to cut out, it takes a few hrs to cut but its so worth it
01:16 < mmalecki> hell yeah it is
01:16 < niftylettuce> my cockpit looks awesome right now, going to cover with coverlite and then paint with acrylic, then slap a #cessna sticker on it from StickerMule (you'll get one too if u join up ;)
01:16 < niftylettuce> i got some dubros landing gear too, u get much more air time with lipo and airplane vs. some quadcopter that is name brand AR Drone garbage ;)
01:16 < niftylettuce> they like out of the box experience, u want pro u gotta DIYT
01:16 < niftylettuce> DIY*
01:17 < mmalecki> niftylettuce: yeah lol, my AR Drone broke after 1 day of usage
01:17 < niftylettuce> piece of crap
01:18 < mmalecki> I think it's pretty fun actually, wish I could use it
01:18 < mmalecki> I don't have the time to go and have it replaced
01:18 < niftylettuce> mmalecki: u can easily replace balsa, its inexpensive
01:18 < mmalecki> watching felixge try to kill dscape with it at lxjs was hilarious
01:19 < niftylettuce> mmalecki: that foam EPO stuff is nice but once it breaks u gotta use hot melt glue and junk
01:23 < niftylettuce> mmalecki: is there a vid of felixge?
01:26 < mmalecki> niftylettuce: hmm, should be. looking
01:27 < mmalecki> niftylettuce: http://www.youtube.com/watch?v=jl5v3bsMH_E
01:39 < niftylettuce> mmalecki: very cool, i loved watching substack and tootallnate's stuff
01:39 < niftylettuce> mmalecki: u have parks nearby to fly?
01:42 < TooTallNate> niftylettuce: :)
01:42 < niftylettuce> TooTallNate: udp socket.io brilliannttt
01:42 < niftylettuce> TooTallNate: definitely forking that for cessna goodness
01:43 < niftylettuce> need to add in controllable front wheel and camera motor so i can look around while flying
01:43 < mmalecki> niftylettuce: sure :)
01:43 < niftylettuce> e.g. prop left turn camera left looking straight down
01:43 < mmalecki> niftylettuce: I live very near a forest and huuuuuuuge open spaces
01:44 < niftylettuce> i'd like to see this done with node http://www.rcgroups.com/forums/showthread.php?t=1749208 /cc TooTallNate mmalecki astropirate 
01:45 < mmalecki> it's amazing how simple arduino code is
01:45 < niftylettuce>  yea
01:45 < mmalecki> I did some AVRs back in the days and this was waaay more complicated
01:45 < niftylettuce> though prices could be cheaper, since sparkfun gets supply from olimex ppl
01:46 < niftylettuce> mark.up()
01:47 < mbalho> if you are nerdy enough to use jameco then you get cheap prices
01:49 < jtane> Anybody know anything about this warning: "Recursive process.nextTick detected. This will break in the next version of node. Please use setImmediate for recursive deferral" ?
01:49 < jtane> i have no nextTick in my user code so it must be coming from core...
01:50 < jtane> trying to write > 1 file simultaneously
02:01 < TooTallNate> niftylettuce: just watched felix's talk, hahah, love that guy
02:01 < niftylettuce> TooTallNate: yeah :D
02:01 < niftylettuce> TooTallNate: he's tall too!
02:01 < TooTallNate> yup
02:01 < TooTallNate> damn
02:02 < TooTallNate> i forgot to go to Electronics Plus today to look for a cellular antenna
02:02 < niftylettuce> TooTallNate: ebay?
02:02 < torvalamo> that video is wicked cool
02:02 < TooTallNate> niftylettuce: already have one waiting at the office i think from amazon
02:02 < TooTallNate> but it couldn't hurt to have > 1
02:02 < niftylettuce> TooTallNate: u should build a cessna :) then there would be 2 node folks working on it, not just 1, solo and borrrinnggg
02:02 < torvalamo> too bad it's wifi though, that's just ~50m range
02:03 < TooTallNate> niftylettuce: you just need to build the hype like felix does
02:03 < torvalamo> could make it mobile broadband maybe
02:03 < niftylettuce> TooTallNate: yea i will, i got a camera and going to paint my plane in a few days
02:03 < TooTallNate> torvalamo: that's what I do
02:03 < TooTallNate> torvalamo: https://github.com/TooTallNate/ar-drone-socket.io-proxy
02:04 < niftylettuce> TooTallNate: coverlite im covering plane with http://www.ebay.com/itm/380543654268?ssPageName=STRK:MEWNX:IT&_trksid=p3984.m1439.l2649 and 
02:04 < torvalamo> do you replace the parts or just add it as a buffer between you and the built in wifi?
02:04 < niftylettuce> TooTallNate: and here is the 720P HD camera im using :)  its cheaper than gopro and similar quality http://www.ebay.com/itm/380543654268?ssPageName=STRK:MEWNX:IT&_trksid=p3984.m1439.l2649
02:04 < TooTallNate> torvalamo: i make the drone connect to a 4G mifi device, then have it connect to a relay server i have running at my house
02:04 < niftylettuce> TooTallNate: wrong link, here it is : http://www.ebay.com/itm/180937263580?ssPageName=STRK:MEWNX:IT&a_trksid=p3984.m1439.l2649
02:05 < niftylettuce> TooTallNate: u can stream it from tty USB0
02:05 < niftylettuce> dev hda0 or w/e on laptop i think
02:06 < TooTallNate> niftylettuce: nice
02:06 < TooTallNate> torvalamo: i get too nervous to fly it too far out of sight though
02:06 < TooTallNate> hahah
02:06 < niftylettuce> TooTallNate: once I get my YouTube videos up, and a live web interface real-time of me flying with live stream and sensor readings... people will go nuts
02:08 < torvalamo> TooTallNate: do you have a failsafe that when it loses the connection or pings out that it flies back to a given coordinate?
02:08 < torvalamo> oh snap
02:08 < torvalamo> i think he flew out of range
02:08 < torvalamo> everyone, to the bunkers!
02:09 < gistya> OK so I'm a noob with a question: I'm using node.js with angular/express/mongodb/socket.io. I make a find request to my Users database and the callback function gets the results in a "results" variable. I console.log(results); and the console output looks like: [ { username: 'Joe Blow', password: 'sha1$as0dfa0sdf0asd0fa00fsd0f9efsjef9sjf0a', email:'', _id: 50e38f5e2b8d3ddd6b00000a, __v: 0 } ] However when I do console.log(results.use
02:09 < gistya> Why?
02:11 < jtane> gistya: looks like your results are in an array? try results[0].username
02:14 < niftylettuce> torvalamo: it wouldnt be hard to build one
02:14 < niftylettuce> torvalamo: just get current gps coords, front facing position, accelerate forward
02:14 < niftylettuce> u could even have it turn to face coords and flight direct paths
02:15 < torvalamo> yea i'm just asking if he has that failsafe or not
02:15 < torvalamo> if he wanted to fly far
02:15 < torvalamo> i want one now
02:15 < torvalamo> damnit
02:16 < torvalamo> sitting at home, comfortably, while scouting the world with my drone through my laptop
02:16 < torvalamo> aaah
02:16 < gistya> thanks jtane i will try it. i'm new to javascript so it's just getting used to the conventions. and you can't exactly google [
02:16 < torvalamo> and then it's shot down by a hipster who thinks it's a government drone
02:17 < torvalamo> hippie rather
02:17 < gistya> hippies lack guns
02:17 < gistya> slingshot
02:21 < gistya> Yeah that worked thanks
02:22 < gistya> Building my own user login system fun tymes
02:27 < jtane> gistya: {} means object, [] means array
02:59 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
04:06 < astropirate> is there an appfog irc channel?
04:29 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
04:36 < bingomanatee> ping isaacs
04:45 < jtane> is there anyway to *ACTUALLY* exert backpressure on an HTTP request?
04:46 < jtane> even if i don't do anything to it, the request seems to buffer up in memory, old and new streams apis...
04:46 < mbalho> return false when it writes to your pipe
04:47 < mbalho> backpressure isnt an api it is an abstract concept that tcp will automagically handle for you
04:48 < jtane> try something like this
04:48 < jtane> https://gist.github.com/4432250
04:49 < jtane> and upload a file
04:49 < jtane> the whole thing ends up in memory
04:49 < jtane> the stream buffers fine
04:49 < jtane> but the browser still seems to send the whole thing as fast as it can...
04:51 < jtane> i will update my example to be actually usable, 1 sec
04:51 < chrisevans1001> using tcp sockets (can't use socket.io) what is the basic process for authentication. the user connects. the server then sends back a unique token. does the users computer then send back this token on each request in order to remain secure?
04:54 < jtane> ok full example
04:54 < jtane> https://gist.github.com/4432275
04:54 < jtane> node v0.9.6pre
04:56 < jtane> if say i am gonna pipe this to a file on disk, i want to apply backpressure to the http request so it doesn't blow up in memory
04:57 < mbalho> make a stream that always returns false on .write
04:57 < mbalho> and then pipe your request to it
04:57 < mbalho> and see if it changes the upload behavior
04:57 < jtane> i've tried this
04:58 < jtane> again, this is not an issue with the streams api
04:58 < jtane> the api seems to work well
04:58 < jcrew> chrisevans1001: you can store login information in a session server side
04:59 < chrisevans1001> yes so the user sends their user/pass, server confirms its ok. user now closes their client application when they reopen they connect again but i want to ensure they dont have to login yet again and instead hold their session for x number of days.
05:00 < jcrew> chrisevans1001: a token is one way to do that
05:00 < chrisevans1001> therefore i think i need to transfer a unique token back
05:00 < chrisevans1001> but i wasnt sure on security
05:03 < jtane> mbalho: sorry, perhaps it is an issue with the api, or my misunderstanding of it... I guess I thought that the http request itself wouldn't automatically buffer up in memory
05:04 < superjoe> isaacs, if you have a few moments to spare, I sent you a dispute email. I'm hoping that it is resolved quickly so I can keep up my rapid development pace :-)
05:04 < mbalho> jtane: https://gist.github.com/4432335
05:04 < mbalho> jtane: run it with 'node index.js somelargefile'
05:05 < mbalho> jtane: it prints out how long it took to buffer the entire upload
05:05 < mbalho> jtane: if you change the write call in falsestream to return false instead of true it will never finish
05:05 < mbalho> jtane: backpressure assumes your upstream understands backpressure, its possible the browser just ignores it
05:05 < downunderkiw> Hi there
05:06 < downunderkiw> I have a question (hope you can help :) I am getting "unsupported file extension" etc etc in my socketstream app, only the file it is complaining about doesn't exist
05:07 < jtane> mbalho: it's hard to see in your example since we can't send a very large request
05:08 < mbalho> i used a 500mb file and it behaved as i described above
05:08 < jtane> mbalho: yes, you're right - the issue is the 'upstream' stream
05:09 < jtane> mbalho: the browser
05:09 < mbalho> if node could magically make browsers not suck our lives would all be much better
05:09 < jtane> mbalho: ha, but how does the http class read from the network socket?
05:10 < jtane> mbalho: there must be a way to, well, NOT read, right?
05:10 < mbalho> the data has to go somewhere. it allocates Buffers which live outside the v8 heap and use your servers memory
05:11 < jtane> mbalho: are we sure of this? seems to me like the browser definitely has to wait for an ack to send the next byte...
05:11 < jtane> mbalho: isn't that how TCP works?
05:12 < mbalho> i am not sure if browsers respect backpressure or not
05:12 < jtane> mbalho: maybe i'm confused
05:12 < mbalho> but in the gist i linked it demonstrates that nodes http client and server respect tcp backpressure
05:12 < jcrew> jtane: couldn't you use .pause and .resume to create backpressure
05:13 < mbalho> jcrew: those just make write return false
05:13 < jtane> mbalho: right, because node's fs implementation is designed that way
05:13 < mbalho> jtane: fs and http client
05:13 < mbalho> jtane: oh i know for a fact that you cant stop a FileReader after you begin reading in html5
05:13 < jtane> mbalho: right, i guess the area of interest is the http server
05:15 < mbalho> jtane: there is a hack where if you want backpressure in the client with fs reads you can make a new FileReader at a specific byte offset in a file and read a chunk and stop and then repeat over and over
05:16 < mbalho> (stop meaning throwing away the filereader instance and making a new one)
05:18 < jtane> mbalho: i'm not totally sure i follow... your example shows that fs handles this properly w/ no hack, right?
05:19 < mbalho> FileReader is an html5 api for reading files in a browser
05:19 < jtane> mbalho: ooo, got it
05:19 < mbalho> instead of using forms to upload files you could roll your own with xhr2
05:19 < mbalho> but its hacky
05:24 < jtane> mbalho: interesting
05:28 < devnill> I'm trying to use the module 'request' and am trying to make a GET request to a url that also passes a variable
05:28 < devnill> i.e. google.com/?requestthispage
05:28 < devnill> How can I pass the 'requestthispage'?
05:29 < jcrew> devnill: just pass it in the url
05:31 < jtane> mbalho: so, just for context, i was trying to get a multipart parser working for > 9.4
05:31 < devnill> Thanks jcrew.
05:31 < jtane> mbalho: formidable doesn't seem to work
05:32 < jtane> mbalho: managed to get this mostly working: https://github.com/jessetane/multiparser
05:32 < jtane> mbalho: but testing it on a VM limited to 300mb ram it would get killed if i uploaded anything > 300mb
05:33 < jtane> mbalho: which is when i started actually looking at the _readableState.length of the request
05:48 < jtane> anyone know where to look around in core for where http request data actually gets read from the network socket?
05:49 < jtane> textmate search is slowww :P
06:00 < jtane> or maybe - how libuv and the lib/net are tied together? not even sure if i'm asking the right thing...
06:07 < mscdex> jtane: that stuff is done in libuv
06:08 < mscdex> libuv provides the platform-independent interface
06:09 < jtane> i guess a better question is: can the rate at which node reads http (tcp?) data be regulated by a javascript program?
06:10 < jtane> well, i guess mbalho's gist shows it can - https://gist.github.com/4432335
06:11 < jtane> but from a standard browser request
06:13 < mscdex> jtane: well, you can always limit it manually by having a custom stream in the middle
06:15 < jtane> mscdex: ok trying some more experiments
06:24 < agu---> what do you suggest for designing impressive, really good looking websites in html5 and css3 ? What do you suggest using? any framework, editor, technique?
06:31 < chovy> agu---: jquery?
06:31 < chovy> less
06:31 < jcrew> i think only dreamweaver does it
06:32 < chovy> you can use bootstrap if you want prebuilt widgets. There are others like jskit
06:33 < agu---> chovy: oh i see
06:35 < mistertwig> any recommend sql ORMs for node.js
06:47 < mscdex> mistertwig: you might look at sequelize
06:47 < mscdex> it's pretty popular
06:48 < mistertwig> yeah i checked it out but it doesn't seem like it supports many data types
06:48 < mistertwig> and i couldn't figure out how to save specific length varchars
06:48 < mistertwig> in sync
06:49 < astropirate> just ran across this gem
06:49 < astropirate>  following languages or platforms: Java, .NET, BEA WebLogic, ADO, HTML, JSP, JavaScript, Web services, SOAP, XML, PHP, MySQL, Oracle, UNIX, Linux, Redhat Linux, STL, XSLT, OWL, AJAX, J2SE, Sun Solaris, Ruby on Rails, Powershell, Lombardi Teamworks, Sun Identity Manager, Bash/Bourne Shell Scripting
06:50 < astropirate> job posting hehe
06:51 < mscdex> not just Linux, but also Redhat Linux :-)
06:52 < RLa> and how much they pay for all this knowledge?
06:53 < RLa> also, what's stl?
06:53 < andu> isnt stl for 3D printing?
06:53 < RLa> j2se but not jee?
06:54 < andu> STL (STereoLithography) is a file format native to the stereolithography CAD software created by 3D Systems
07:09 < mscdex> RLa: stl c++ classes
07:10 < RLa> oh
07:17 < freewil> does anyone know if it's possible to prompt a file download client-side in the browser?
07:18 < freewil> im about to try setting the window.location.href to a base64-encoded file uri
07:18 < niloy> freewil, http://davidwalsh.name/download-attribute
07:19 < freewil> niloy, hmm im building the file cto download client-side
07:19 < freewil> so i guess i can build it, make a base64-encoded href and add a link to the page and it should work
07:19 < niloy> yehhh
07:20 < freewil> thanks
07:20 < niloy> nps
08:06 < javagoogles> Hi, I have a question about installing an NPM module. I'm fairly new to this stack, and #mongodb weren't able to help me. I'm on OS X 10.8 and have installed Node and MongoDB fine. However, when I get to install the driver using npm (npm install mongodb) I get "child process exited with code 127 execvp(): No such file or directory"
08:11 < PW_> hi
08:12 < PW_> is there any way to require() without creating a new object?
08:13 < PW_> I'm trying to create a prototype object in a file that can be extended in other files
08:14 < RLa> "require() without creating a new object" <- what exactly you mean
08:14 < RLa> require is just a function
08:15 < RLa> javagoogles, that's whole npm output?
08:15 < PW_> my understanding is that if you call require(), it returns a new object of the type that was exported from that file
08:16 < javagoogles> RLa thanks for the reply - it's now installed (gcc wasn't installed!). A general question now then - where do modules usually get installed to? At the moment it's getting installed to the root of my user directory
08:17 < PW_> javagoogles: you can use npm install -g <pkg> to install to your system's package directory
08:17 < javagoogles> PW_ so that installs it globally?
08:18 < PW_> yea
08:18 < PW_> assuming you have permission to do so, of course
08:18 < javagoogles> PW_ cool, so for example would you install the mongoDB driver with the -g flag? I noticed that the tutorials online don't put the flag in, so I'm wondering if it's a given
08:18 < PW_> npm install -g mongodb
08:19 < RLa> you should install globally only those modules that come with command-line script
08:19 < PW_> on my mac, that would install to /opt/local/lib/node_modules
08:19 < javagoogles> PW_ sure, so you would use the -g flag in that instance?
08:19 < RLa> without -g it gets installed into node_modules in the current directory
08:20 < PW_> RLa: not packages that you intend to reuse across multiple projects?
08:20 < javagoogles> RLa yeah, it seemed strange for me to install into my user directory (i'm from .Net land)
08:20 < PW_> you would just do a npm install each time you started a new project?
08:20 < RLa> PW_, i think you can't even require() them anymore, in 0.8
08:21 < PW_> hmm
08:21 < PW_> I think I am
08:21 < RLa> "user directory" <- it should have nothing to do with it, are you inside the ~?
08:21 < PW_> I'm a C guy, so installing libs globally is probably a bad habit :P
08:21 < plzHelp> Can someone please help me with something quick:
08:21 < javagoogles> RLa the tutorial on the NodeJS website has the command "$ npm install mongodb" so i'm wondering which directory i should be in when i run it
08:22 < RLa> javagoogles, in your project root
08:22 < javagoogles> RLa, ah so the mongodb driver is just for that project?
08:23 < mbalho> javagoogles: i know someone from boston who had a bicycle named javagoogle ubuntu, was that you?
08:23 < RLa> PW_, it's not so bad with usual system libs
08:23 < RLa> javagoogles, yes
08:23 < javagoogles> mbalho: sorry i live in sydney, australia!
08:23 < mbalho> well nice name nonetheless!
08:23 < javagoogles> RLa thanks so much for your help, you too PW_. I'll try and take it from here
08:23 < plzHelp> can someone go to walmart.com and search stores with area code 54115 and select the nearest Appleton store and send me the link please. My http to walmart is working here in asia and I can't use the store locator through proxy because I assume the javascript sucks. I'm trying to get a nexus 10. Thanks
08:24 < javagoogles> mbalho: i even own the domain ;)
08:24 < mbalho> hah nice
08:24 < RLa> javagoogles, the idea is to avoid module hell where some modules need module X version x and some version y
08:24 < javagoogles> RLa, coming from .Net that sounds pretty great
08:27 < PW_> so, I'm trying to create an object "DSCrawler" that is a prototype that I want to reuse a number of times, and in another file I am creating WSCCrawler, which is based on DSCrawler... but if I require() the file that DSCrawler is in, it actually creates an instance of the object (which is a waste)... any way around that?
08:28 < RLa> javagoogles, yes, i think that works much better than rubygems and maven and whatever .net uses
08:28 < RLa> PW_, can you paste your DSCrawler file somewhere
08:31 < PW_> yea, sec
08:33 < PW_> http://ato.ms/DSCrawler.js
08:41 < javagoogles> RLa - when I open up a terminal session at the project folder and run "npm install mongodb" it still installs in my user directory?
08:42 < RLa> remove node_modules dir from your user directory and try again
08:44 < javagoogles> RLa you are a legend
08:58 < jvanveen> hey
08:59 < jvanveen> i wonder what the common way is to create a relation between an article and a comment of an article in mongoose
09:00 < jvanveen> i have this schema: http://paste.kde.org/635438/
09:33 < Guest_1448> in mongo, if I do collection.remove({x:y}); collection.insert([...])  - is the insert guaranteed to run after the remove call?
09:34 < Zelest> Guest_1448, http://docs.mongodb.org/manual/tutorial/isolate-sequence-of-operations/
09:40 < Guest_1448> I'm confused
09:40 < Guest_1448> that mainly talks about update
09:41 < Guest_1448> and I'm mostly worried about node's async nature
09:50 < jhsto> Has anybody tried to construct a database inside object?
10:03 < rounce^work> jhsto: say wut?
10:04 < jhsto> rounce^work, actually I already started. I'm making my database inside an object, nothing serious, but works quite fast.
10:04 < eykosioux> a memory store?
10:05 < rounce^work> having trouble with "inside an object"
10:05 < jhsto> Yes something like that
10:05 < jhsto> Oh ok
10:05 < rounce^work> eykosioux: yeah that's what sprung to mind at first
10:05 < eykosioux> or maybe an object that manages other objects(as tables, rows, blah?)
10:06 < jhsto> eykosioux, actually just that
10:07 < eykosioux> jhsto: i get your idea and i'm tempted to ask "why would you bother doing that?"
10:08 < Stephen> Ask not why would you do it that way.. instead ask "why did he do it that way'.
10:08 < eykosioux> as in, what would be an example use case? so i can get a better picture of when you'd use it
10:09 < jhsto> I thought to introduce myself to js objects and top of that I'm using it in my expressjs middleware to count pageviews and do some simple analytics without client-side js
10:21 < Stephen> jhsto: Introduce yourself to js objects? My friend, with a line like that you certainly already talk the talk
10:26 < jhsto> Stephen :(
10:27 < Stephen> It was a compliment, my apologies, I didn't mean to offend.
10:27 < Stephen> Any way I can help out?
10:29 < devnill> although to be honest Stephen, a question like that sounds slightly loaded
10:30 < Stephen> Hah
10:32 < Stephen> All I meant to say is that, when one hears someone talk about implementing analytics in javascript, it's a fiarly involved task. One assumes JS objects would have to be learned before that. In thinking through it, it would be a great way to learn how to use them .
10:36 < eykosioux> I took a similar route, writing a custom event emitter in js… but it was annoying to realise that after learning you have a strong opinion on how to do things the right way (completely different from the way i did it) 
10:36 < jhsto> Stephen, it's okay. Node is just so easy language with all the modules and their API's that I don't need to actually know anything. I can manage to do stuff even with crappy knowledge, since all I need to do is to place the puzzles on their place.
10:39 < Stephen> npm
10:39 < Stephen> near perfect machine
10:39 < eykosioux> i'd s/Node/javascript/
10:40 < Stephen> Unfortunately inline regex is no longer valid syntax
10:40 < Stephen> You'll need to expand that, son
10:45  * eykosioux ʕ ◔ϖ◔ʔ
10:46 < Stephen> Thaumaturgy....
10:46 < Stephen> Wow... now that's a word.
10:53 < eykosioux> Thanks for that, my vocabulary has been expanded. "Thaumaturgy is the capability of a magician or a saint to work miracles. It is sometimes translated into English as wonderworking." 
11:10 < jhsto> Is there any specific reason why I can't use fs methods on filenames which include '/'?
11:10 < valterguy> it might be because / is the divider for paths.
11:10 < SomeoneWeird> ^^
11:11 < valterguy> for example: /path/to/file.md
11:11 < jhsto> lol
11:11 < jhsto> thats right
11:11 < Kakera> maybe he's using windows
11:11 < valterguy> now, imagine the file name being file/name.md
11:11 < valterguy> Kakera: not sure how it works in that case.
11:12 < Kakera> oh, a filename can't contain forward slashes in Windows
11:13 < valterguy> Linux seems to also be restricting it, because `touch hello/world` outputs "touch: cannot touch `hello/world': No such file or directory" meaning that the directory hello is not there.
11:13 < valterguy> at least, it's not supposed to be making that file.
11:14 < SomeoneWeird> you can't
11:16 < Stephen> I'm fairly certain "/" is an invalid filename character is most all filesystems
11:16 < Stephen> Windows will handle "/" as a directory separator just fine
11:17 < SomeoneWeird> if you have a filename with / in it, you're doing something very wrong
11:18 < Guest_1448> that guy constructs database inside an object, don't underestimate him
11:18 < Stephen> lol
11:19 < jhsto> heey it was definitively moment.js's fault for making dates not-so-compatible for my use 
11:49 < shedali> anyone know how to install node packages behind a corporate proxy?
11:55 < rvagg> shedali: `export HTTP_PROXY=http://proxy.corp.com:8080/` and see how you go
11:56 < rvagg> you should also be able to `npm set proxy http://....` to save it permanently for npm
12:00 < shedali> i used: npm config set proxy
12:00 < shedali> but still ran into issues
12:01 < shedali> error: tunnelling socket could not be established, cause=getaddrinfo ENOENT
12:02 < shedali> damn proxy ruins my day
12:06 < Aidan88> Hi All
12:06 < valterguy> hi Aidan88 
12:06 < Aidan88> Can anyoen tell me the best way to block the UI. I would like to use a Dialog but it is requiring a text template which I can't upload to the server
12:07 < Aidan88> Basically html files are a no-no
12:07 < Aidan88> Thanks
12:07 < valterguy> Aidan88: which UI are you talking about?
12:08 < Aidan88> I want to block access to the page
12:08 < Aidan88> form elements and the like
12:08 < shedali> If you can only use js you could try this https://gist.github.com/3224970#file-generic_blocker
12:08 < shedali> which blocks the entire UI
12:08 < shedali> save you from having to disable every component
12:09 < Aidan88> ~Will it stop people from changing focus using tab etC? and hotkeys on the body?
12:10 < shedali> no it just stops mouse interaction
12:10 < Aidan88> That's no good for me then I'm afraid
12:10 < Aidan88> Dialog does all that magic but it has a text dependency
12:11 < Guest_1448> while(true){}
12:11 < Aidan88> ಠ_ಠ
12:12 < shedali> that will freeze the browser for good 
12:12 < Aidan88> Just realised I am in the wrong channel ^^
13:26 < jvanveen> hey
13:43 < Stephen> hey
13:43 < Iszak> We need to be able to sort nom modules by popularity.
13:43 < mrvisser> Hi Stephen
13:43 < Stephen> nom modules?
13:43 < Iszak> npm damn autocomplete
13:43 < Stephen> that's called food irl
13:44 < Iszak> textual likes to autocomplete you see.
13:44 < Stephen> snacks = nom modules
13:44 < Musk> noms noms
14:14 < Dededede4> I use require http to download web pages
14:15 < Dededede4> Last month the script runs smoothly
14:15 < Dededede4> but for an hour the feedback is never called
14:16 < Dededede4> And this is a script that absolutely must walk.
14:18 < Dededede4> I just had a "[TypeError: Cannot call method 'text' of undefined]" o_O
14:23 < SomeoneWeird> require('restler').get(url).on('complete', function(res) { console.log(res); /* webpage */ });
14:27 < darrenlooby> Hi Guys, I'm writing a module. And, I'm looking to make a constructor like function... such that, when the module is loaded for the first time, a init() runs... what's the best way of doing that without requiring that it is called in the depending app?
14:28 < sk8ball> question for people who do node dev on a windows machine with a linux VM setup - what's your preferred VM software? WMWare, VirtualBox, Vagrant, [other] ??
14:28 < darrenlooby> sk8ball, not used any in ages, as I'm native Ubuntu now. But, VirtualBox used to be my preference.
14:30 < stagas> darrenlooby: the module is already called as a function the first time it loads so you can init stuff right away
14:32 < darrenlooby> hmmm... maybe I'm just approaching it incorrectly then. If debug has been called on my module, I'm util.puts()'ing some stats like process.version, and process.cwd()
14:32 < darrenlooby> Well, that's what I want to do anyway stagas 
14:32 < Guest_1448> http://nodejs.org/api/modules.html#modules_caching
14:56 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:58 < Dededede4> omg the bug
14:59 < Dededede4> I just lost two hours of work and precious data because…
15:03 < Dededede4> while(myvar--){ prevented feedback "require (http)": an object totally different in a different file for a completely different task
15:04 < Senji> Dededede4 let me guess, myvar kept decrementing untill it overflowed?
15:04 < Senji> and the loop slammed the cpu?
15:05 < Dededede4> I just replaced while(myvar--) by for(var i = 0 ; myvar == 0 ; myvar--){ and it works
15:06 < Dededede4> heu
15:06 < Dededede4> no
15:07 < Dededede4> hummm
15:09 < andylippitt> I'm new here, so apologies in advance if this is taboo... but I wonder if there's much consensus around whether coffeescript is still fringe or something everyone building node.js should be looking at?
15:10 < Dededede4> Really they may not be a problem While. :-°
15:11 < Dededede4> but due to a bug caused in a totally different place
15:11 < Senji> how could that happen Dededede4 global variable or something?
15:12 < Dededede4> no,there is absolutely no variable joint
15:13 < darrenlooby> andylippitt, I can't speak to concensous - but I don't use coffeescript at the moment, and tend to see most in normal javascript
15:14 < Dededede4> The data is downloaded in a database, and the analysis of the database by another part of the script.
15:14 < MI6> joyent/node: Fedor Indutny master * 8a96bb4 : test: make tests work with newer v8 (+2 more commits) - http://git.io/2MdW7A
15:15 < darrenlooby> Dededede4, I missed what your problem was...
15:15 < Dededede4> But when there is a non-fatal error (which I do not understand) the download does not work because the feedback "require (http)" does not work.
15:16 < Dededede4> Non-fatal error in the independent analysis (theoretically)
15:36 < niggler> >>> .1
15:36 < purr> niggler: (number) 0.1
15:36 < niggler> >>> .1+.1
15:36 < purr> niggler: (number) 0.2
15:37 < niggler> >> .1+.1
15:37 < purr> niggler: (number) 0.2
15:38 < dddd> hi
15:40 < niggler> hmm .1+.2 fails in the repl
15:41 < SoulRaven> >> 1.1 * 1.1
15:41 < purr> SoulRaven: (number) 1.2100000000000002
15:43 < niggler> welcome to the world of FP SoulRaven
15:48 < Sou|Raven> thx, i know, but i like how the bot answer on this type of questions :)
16:04 < mscdex> >> "node.js rules";
16:04 < purr> mscdex: (string) 'node.js rules'
16:04 < yawnt> ironic since it doesn't run node D:
16:14 < TehShrike|Work> yawnt: why wouldn't it?
16:14 < yawnt> >> console
16:14 < purr> yawnt: (object) {log: (function) log, time: (function) time, timeEnd: (function) timeEnd}
16:14 < TehShrike|Work> ?
16:15 < yawnt> >> require
16:15 < purr> yawnt: ReferenceError: require is not defined
16:15 < yawnt> TehShrike|Work: ^
16:15 < TehShrike|Work> I don't understand what you're getting at
16:15 < TehShrike|Work> Oh, you're saying that the bot doesn't run node.js
16:15 < yawnt> yeah
16:16 < yawnt> it's an embedded js interpreter or such
16:16 < TehShrike|Work> Well, sure.  Most of node.js' libraries are for interacting with http or the file system, and there's no way you want a public bot doing that
16:18 < niggler> thats not true yawnt
16:19 < niggler> https://github.com/oftn/oftn-bot
16:39 < peler> WelcomeBack
16:49 < cavneb> if I wanted to perform 1 million sql queries per month against a postgres database would Node be able to handle this? I am playing currently with the node-postgres package (https://github.com/brianc/node-postgres).. the queries would be triggered via a GET request (API call)
16:50 < bnoordhuis> cavneb: 1M/m? easily
16:50 < jcrew> cavneb: shouldn't have a problem with it, that's <3 transaction per minute
16:51 < brianc> cavneb: yes it would be able to handle that very easily
16:51 < brianc> cavneb: you could probably do that with the free AWS trial instance
16:52 < cavneb> would you recommend node-postgres or something like CUBRID? http://architects.dzone.com/articles/connection-pooling-and-other?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+zones%2Farchitects+(Architects+Zone)
16:52 < cavneb> I am very new to this
16:52 < brianc> cavneb: node-postgres. i wrote (most of) it
16:52 < cavneb> :D awesome
16:53 < cavneb> brianc: I saw that you can set the pool size but can you set number of idle/min/max?
16:54 < brianc> cavneb: you can, yes. though I would recommend creating your own pool using node-pool + node-postgres
16:54 < andylippitt> brianc: nice work... can you comment on this: http://blog.argteam.com/coding/node-js-postgres-pooling-revisited-with-transactions/
16:55 < brianc> andylippitt: the connection pool within node-postgres was a mistake. should have been it's own module. https://github.com/brianc/node-postgres/issues/227
16:55 < andylippitt> thank you sir
16:57 < brianc> andylippitt: I was intending to fix and abstract the pool for node-postgres but through discussion we kinda figured that'd reinvent the wheel of this: https://github.com/grncdr/node-any-db-pool -- so I am going to very slowly deprecate the pool within node-postgres as any-db-pool matures
16:57 < jcrew> brianc: cavneb: heroku offers free too
16:57 < jcrew> free nodejs host + postgre sql
16:58 < codepython777> does anyone here use npm to create a new bootstrap site? 
16:58 < brianc> jcrew: you make great pajamas
16:58 < cavneb> jcrew: This makes calls to stored procedures internally within our company. Heroku is really not an option for this, nor would it be needed I believe.
16:59 < sohcahtoa> hm no TooTallNate today
17:00 < AviMarcus> cavneb, never head of cubrid before. I've spent ~10 minutes reading the docs and I still don't really understand how it's different than other SQL dbs.
17:00 < cavneb> thank you all for helping me on this. I will create a blog post on the integration of node-postgres + node-pool.
17:00 < AviMarcus> otoh, rethinkdb looks amazing
17:01 < cavneb> AviMarcus: It seemed extremely verbose in the code, however I haven't really focused on learning it yet. I am pretty sold on node-postgres due to it being well maintained (brianc)
17:01 < cavneb> afk.. meeting
17:01 < AviMarcus> enjoy.
17:02 < jcrew> brianc: ?
17:03 < brianc> jcrew: i was just being dumb. got some PJ's from J. Crew for christmas.
17:07 < jcrew> brianc: haha, at least there was something behind it
17:09 < MI6> joyent/libuv: Ben Noordhuis master * 775f2c1 : unix: remove stale closing check in uv__write()  Introduced in 0db3274f b (+2 more commits) - http://git.io/I8cGiQ
18:01 < evanc_> Hi, i'm building a tracking system that will have a flow like this ( http://bit.ly/VvS0Fg ), I want to know how I should connect a network of sites to the node app? 
18:02 < evanc_> Someone suggested Passport, but that seems to be for authentication versus connecting 3rd party sites to an app. I'm not looking for authentication.
18:08 < jcrew> evanc_: why wouldn't they use the browser to get the js file?
18:11 < skope> what are common causes for RangeError: Maximum call stack size exceeded
18:11 < tjfontaine> recursion
18:11 < skope> thought so
18:12 < eydaimon> how do I create an npm tarball package?
18:13 < jcrew> evanc_: just use socket.io 
18:14 < mmalecki> eydaimon: `npm pack`
18:15 < eydaimon> mmalecki: thank you
18:17 < evanc_> jcrew_ i'm already using socket.io on the local version of the app, but I wasn't able to successfully connect to the app from outside of the node server
18:18 < evanc_> jcrew_: i'll spend some more time looking at socket.io, thanks 
18:22 < jcrew> evanc_: you should be able to have the external site servers serve the js from your server only and then you shouldn't have an issue with it
18:22 < jcrew> IE if dom1.com needs to connect to your server they will script src="dom2.js"  - you should be ok
18:22 < jcrew> dom2.com/js*
18:23 < zx1> what is better socket.io or dnode
18:24 < geNAZt> someone knows a working gtk+ binding for nodejs ?
18:28 < warz> zx1, don't those modules aim to do different things?
18:34 < CoverSlide> they are different
18:36 < ozette> can I get the path of the node_modules folder?
18:36 < CoverSlide> socket.io is a browser websocket emulation layer. dnode is an rpc library that can run between node instances or a server and browser. dnode used to use socket.io for the browser part, but recently switched to sockjs
18:36 < CoverSlide> ozette: npm ls ?
18:36 < ozette> I mean like some global trickery
18:36 < ozette> in a file
18:37 < CoverSlide> npm -g ls ?
18:37 < CoverSlide> ozette: whatchutalkinbout willis?
18:38 < sente> http://c.sente.cc/eli4/close_file_please.js #is the logic fishy in this snippet?
18:39 < sente> i'm having issues with node.js not closing files
18:39 < Kakera> is there an MVC framework for Node.js that supports socket.io?
18:40 < geNAZt> expressjs + socket.io ?
18:40 < zomg> Kakera: you should be able to integrate that easily into any offerings in the node-space
18:40 < zomg> Express works very well with node but it isn't really "mvc" but more like a library to allow you to roll your own mvc-like setup
18:40 < Kakera> zomg, I've looked at locomotive and it doesn't give access to the server object
18:40 < geNAZt> but expressjs can run well with an mvc pattern
18:41 < zomg> You don't really need that, you can just put socket.io to another port
18:41 < geNAZt> which is a bad idea
18:41 < zomg> I'd imagine there is a way to get the stuff out from locomotive but perhaps it's undocumented
18:41 < Kakera> I don't like that workaround
18:41 < geNAZt> think of proxies
18:41 < zomg> geNAZt: not necessarily
18:41 < zomg> Yeah proxies can mess up websockets and stuff in the first place even if they are on port 80
18:42 < geNAZt> but then socket.io falls back to polling
18:42 < paulbjensen> @ozette This might be worth a look http://nodejs.org/api/modules.html#modules_module_filename
18:43 < ozette> CoverSlide, I'm trying to create a symlink from one directory into my node_modules folder
18:43 < ozette> paulbjensen, thanks I'll look into it
18:51 < ozette> paulbjensen, nice, i think i can use the module.paths
18:51 < ozette> thanks
18:51 < paulbjensen> np
18:54 < skope> somehow node-cheerio made that call stack error
18:54 < skope> changed back to jsdom and worked like charm
19:06 < ozette> odd, can anyone explain to me why my module.paths[4] returns "/home/$user/node_modules" in the shell, but returns"/home/node_modules/" in the script?
19:13 < ozette> nevermind, I see it's the cause of repl
19:13 < fermion> anyone hit this before? https://github.com/LearnBoost/node-canvas/issues/122
19:13 < fermion> cc tjholowaychuk 
19:14 < mbalho> JasonSmith: hey i wanna help maintain browser-request, can you add me as a collaborator? @maxogden
19:14 < fermion> seeing this now though I'm not 100% convinced it's not a PEBKAC issue
19:17 < CoverSlide> maybe it's something to do with 8-bit pngs?
19:17 < fermion> yep, PEBKAC error. wheee.
19:17 < CoverSlide> or some other weird png thing
19:29 < jzamora> :)
19:43 < jazkaos> :)
20:14 < evanc_> I'm trying to understand how to use socket.io if i'm not using the servers files system. On the socket.io site they only give examples using the fs.readFile(__dirname + '/index.html'
20:16 < famousbirds> @evanc what would you like to use instead?
20:17 < evanc_> How should I connect my app to socket.io if the client isn't on the same server?
20:18 < evanc_> i'm using it for a tracking system
20:18 < famousbirds> hmmm
20:19 < evanc_> @famousbirds : I have a network of sites that will be passing data to the app
20:19 < famousbirds> i'm not sure i follow
20:20 < emkei> Hello, need quick consultation is it OK to have such code in node.js app: http://pastium.org/view/a9dd51f6e5e4e067ddb30a2f6e39d5c7
20:21 < evanc_> @famousbirds : see here http://www.evernote.com/shard/s7/sh/56f88de2-f1c0-470b-9169-c7aca1479037/92b00f81ff86eebd4add6f6f68053a50
20:21 < emkei> i'm basically not sure whether the code is blocking or not
20:22 < famousbirds> @evanc_ so in that diagram, app.js is your socket.io server
20:22 < Kakera> emkei, you can't possibly write blocking code in node.js
20:22 < emkei> I believe I can
20:22 < evanc_> @famousbirds : yes
20:22 < Kakera> (unless you write a C++ module or use synchronous fs functions)
20:22 < emkei> each iterations are blocking
20:23 < Kakera> it's not blocking if the CPU isn't idle
20:24 < emkei> but whether such code is acceptable or I should refactor it somehow
20:24 < emkei> spen maybe 2 hours 
20:24 < evanc_> @famousbirds : if I use the fs as shown on the socket.io site the app works fine
20:24 < emkei> i really suck at callbacks and such
20:25 < Kakera> emkei, I think it's fine
20:25 < evanc_> but in the case where i'm passing data to the app from a 3rd party sites we have no need to access the file system
20:26 < emkei> I think my brain needs to be rewired for node.js it's so fun and so different from other stuff :)
20:26 < famousbirds> @evanc_ are you talking about the initial sending back of index.html?
20:26 < Kakera> I'm glad you find it fun
20:27 < famousbirds> @evanc_ since your client is not a browser, you don't need to send back an index.html type file
20:27 < famousbirds> @evanc_ you can just res.writeHead(200) and res.end()
20:28 < famousbirds> @evanc_ does that make sense?
20:29 < evanc_> @famousbirds : ahh yes that should do it
20:29 < evanc_> @famousbirds : i'll try that now, many thanks!
20:30 < famousbirds> @evanc_ have a look at the "Sending and receiving events" - "SERVER" section.  Socket.io without the typical web serving doodads.
20:45 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:53 < valterguy> Amfy: did everything work out from yesterday?
21:21 < fusiongrokker> afternoon all. is there a db migration library that supports mssql?
21:22 < skope> hrr
21:26 < othiym23> fusiongrokker: https://github.com/JamesEggers1/node-monarch looks about as close as you're going to get
21:27 < othiym23> I like that it isn't DBMS-specific, but it might be too minimalistic for what you're trying to do
21:27 < othiym23> given MS's attention to node in general, the lack of attention to SQL Server integration is sorta mystifying
21:29 < fusiongrokker> thanks, this may do the trick
21:30 < fusiongrokker> anything would be better than the current situation. ;)
21:31 < othiym23> fusiongrokker: just be careful about dealing with failed migrations, since it keeps the current migration state in a dotfile rather than tying it explicitly to a schema version or whatever
21:31 < fusiongrokker> hm. I'm new to this. can you elaborate a little?
21:33 < othiym23> so in a "safe" / idempotent database migration framework, after each successful migration is applied, the migration framework will typically set a piece of metadata in the database
21:33 < fusiongrokker> ok, that makes sense
21:33 < fusiongrokker> so the danger is that different developers could have different contents for their status dotfile?
21:34 < othiym23> so that if somebody tries to run the migrations again from a version of the migrations codebase that isn't set, migrations don't get applied twice
21:34 < othiym23> the sanest way is just to generate a string for each migration and store that in a "migrations" table, so you don't have to worry about the dependency order too much
21:34 < othiym23> yeah, exactly
21:35 < fusiongrokker> so if using monarch, each migration would be responsible for checking current schema status (table content) against a hard-coded value?
21:36 < othiym23> fusiongrokker: yeah, I'd probably try to write the migrations to test if the necessary changes have already been applied and just pass if so
21:36 < othiym23> if I had a free afternoon, I'd just do it ;)
21:40 < zx1> i have been looking for dnode web examples ..
21:41 < zx1> but none work with latest version of dnode and dnode has no web samples 
21:42 < zx1> i cannot figure out the client library for latest dnode
22:35 < tnorris> any useful vim packages for programing node addons?
22:39 < q_> emacs
22:39 < q_> zing!
22:43 < enaqx> at least anybody proposed sublime :)
22:45 < enaqx> try javascript.vim
22:45 < enaqx> and c.vim for c++ code
22:46 < tnorris> enaqx: i've got the javascript side covered. I'm looking for vim packages on the C side (libuv, v8, etc)
22:47  * tnorris looks at c.vim
22:50 < evanc_> When using Socket.io are you required to start an HTTP server or can it be run straight from apache if you have a port specified? example  var io = require('socket.io').listen(1337)
22:51 < zomg> evanc_: you will need to set up mod_proxy to apache to proxy the websocket stuff if you want to use it like that
22:52 < zomg> I've done it using Varnish, running apache on one port and node app with socket.io on another, but don't know how to do it using mod_proxy
22:52 < evanc_> This is probably a very basic issue but when running the app as is i'm getting the "Welcome to socket.io." message and an unexpected identifier error
22:53 < evanc_> @zomg we have the mod_proxy already setup 
22:57 < jcrew> evanc_: what is the line producint unexpected identifier?
22:58 < evanc_> @jcrew line 1
22:58 < jcrew> oh line 1
22:58 < jcrew> what's on line 1
22:59 < evanc_> @jcrew "Welcome to socket.io." which is not actually line 1 in tracker.js
23:00 < evanc_> @jcrew line 1 should be (function(document, onload){
23:00 < jcrew> you're likely getting the wrong file from the server
23:01 < tnorris> why is a module that just returns a string ~40x's slower than a js function that just returns a string?
23:02 < tjfontaine> the barrier crossing is expensive
23:02 < jcrew> evanc_: use the net tools in firefox or chrome and request the same file and see if it really is the socket.io js
23:03 < tjfontaine> tnorris: in short, if the jit sees you returning a string it can learn and inline it, if you make a call out to c++ the jit no longer gets to help you
23:04 < tnorris> tjfontaine: so basically if it can be inlined, should be doing it in javascript?
23:04 < tjfontaine> tnorris: anything and everything that can be done in js should
23:05 < TooTallNate> tnorris: agreed with tjfontaine there
23:05 < TooTallNate> tnorris: the C++ barrier is like a brick wall for the optimizer
23:05 < TooTallNate> therefore, you should cross it as little as possible
23:06 < TooTallNate> tnorris: this fact is the reason why SlowBuffer and Buffer exist (rather than just a C++-based Buffer like it was in v0.2.x days)
23:07 < tnorris> TooTallNate: that's just a bugger. though I'm not sure I agree with "anything and everything". (see GH-4504)
23:08 < TooTallNate> tnorris: right, right, rare edge case :)
23:08 < tjfontaine> that wasn't the best case fo that
23:08 < tjfontaine> there are things that the compiler can do
23:08 < tjfontaine> better
23:14 < tnorris> hm. poop. thanks for the info.
23:14 < tnorris> you guys think this is something that will prevent node from becoming ultra fast? e.g. Buffer.writeUInt8 would be 10x's faster in C, but the cost of calling the function is insane.
23:14 < mscdex> >> -0 === 0
23:15 < purr> mscdex: (boolean) true
23:15 < mscdex> :O
23:15 < jcrew> :-O
23:17 < russell_h> are there any circumstances under which a tcp stream will emit a 'close' event but not an 'end' event?
23:17 < othiym23> msc
23:17 < othiym23> erk
23:17 < othiym23> mscdex: IEEE754 strikes again!
23:18 < tjfontaine> tnorris: hard to say, I haven't benchmarked such things, but people should certainly make judicious use of native calls, and where possible module providers should shim around it
23:24 < tnorris> tjfontaine: :,-(   if not for the massive overhead of just calling a module function, there are some awesome optimizations that could be done.
23:24 < mscdex> >> 'Java' === 'cool'
23:24 < purr> mscdex: (boolean) false
23:24 < mscdex> :-D
23:24 < tjfontaine> tnorris: welcome to the world of vms and binary addons
23:26 < tnorris> tjfontaine: heh. guess I still have a lot to learn. just picked up C a couple months ago to do that Buffer optimization mentioned earlier.
23:27 < substack> zx1: https://github.com/substack/dnode#dnode-in-the-browser
23:30 < cavneb> can you recommend a test framework for performing browser-based tests (post/get) against an api returning json?
23:30 < cavneb> (node app is api)
23:31 < evanc_> @jcrew it is socket.io but it appears to be loading it from the instance that is loaded from the app.js file not the tracker.js which can be seen here, http://snipt.org/zoja4
23:32 < tnorris> how do I disable function inlining at runtime?
23:39 < jcrugzz> substack: will hyperglue work with just 1 div as src and 1 key value pair for the updates?
23:41 < substack> jcrugzz: why wouldn't it?
23:41 < substack> hyperglue(div, { '.classname': 'text content' }) <-- like that?
23:42 < jcrugzz> substack: for some reason my example isnt inserting the text and yes like that
23:45 < substack> jcrugzz: could it be that your css selector doesn't match anything?
23:49 < jcrugzz> substack: https://gist.github.com/4439437 is what I am doing. it should be matching the selector no problem but it just prints an empty div
23:52 < jesse___> hello. Got a problem with the node command not working at all in my terminal. I can't even google a response. Any idea why nothing would happen when I type $ node
23:53 < zomg> jesse___: did you compile it from source or install from apt or such?
23:53 < jesse___> did a sudo apt-get install node
23:54 < zomg> Are you able to run node at all? Eg. by inputting the whole path to the binary?
23:54 < jesse___> terminal is still working $ npm works...not at all
23:54 < jesse___> $ node afsdfjosadfjlksda
23:54 < jesse___> brings up a new $
23:55 < zomg> uhm
23:55 < zomg> I don't think node is the actual package
23:55 <@Nexxy> it's nodejs
23:55 <@Nexxy> not node
23:55 < zomg> $ apt-cache show node
23:55 <@Nexxy> npm install nodejs
23:55 < zomg> Description-en: Amateur Packet Radio Node program
23:55 < zomg> :D
23:55 <@Nexxy> erm, apt-get install nodejs*
23:56 < jesse___> I see the package. Does that mean it's installed?
23:56 < jesse___> did the npm install nodejs. Still no response from the terminal.
23:57 < zomg> Do sudo apt-get install nodejs
23:57 < zomg> not npm :)
23:57 < jesse___> Shouldn't I see an error or something? $ node -v gives me nothing
23:57 < zomg> I'd imagine it should say something along the lines of "command not found"
23:58 < zomg> You might be getting an awfully old version of node from apt though..
23:58 < zomg> before you install, do a apt-cache show nodejs
23:58 < zomg> What is the version for it in the output?
23:59 < jesse___> wait a second. Running apt-cache show node shows "Section: universe/hamradio" that's not right is it?
23:59 < zomg> Yes, like was said ages ago it's not node, it's nodejs
23:59 < zomg> Just run "apt-cache show nodejs"
23:59 < zomg> See what the version for it is
23:59 < zomg> I suspect it's going to be something in the 0.6...
--- Log closed Thu Jan 03 00:00:14 2013
