--- Log opened Thu Dec 20 00:00:01 2012
--- Day changed Thu Dec 20 2012
00:00 < substack> and you can build little helper libraries to do thinks like plucking, enveloping, reverb
00:00 < jocafa> mhmm
00:00 < substack> and samples are easy, you just load the sample data into a buffer and return values from it
00:00 < jocafa> i've really been wanting to play with audio stuff… just no time :(
00:01 < substack> just convert it to raw bytes first
00:01 < jocafa> only thing i've had time for, audio-wise, is busting out LSDJ on occasion :(
00:01 < deoxxa> lsdj ftw
00:02 < jocafa> mhmm
00:03 < jocafa> i'm (slowly) working on making a dedicated LSDJ machine out of an old GBC… trimming down the hardware, directly connecting the cartridge, making a new enclosure for it out of wood, adding usb-charging, prosound mod...
00:05 < jocafa> you know, in my nonexistent free time.
00:05 < deoxxa> i hear that
00:05 < niggler> lol at one point jocafa you should drop the j
00:18 < havok> Hola a todos
00:18 < dnnsmanace> anyone expert in html5 drag/drop, specifically in how google docs allows you to pull in images from a different browser window?
00:23 < shama> jocafa: if you just want to play notes in a sequence with baudio try this: https://github.com/shama/tune
00:26 < AAA_awright> dnnsmanace: Not HTML5, just the standard ECMAScript APIs
00:26 < AAA_awright> There's a File API somewhere
00:26 < dnnsmanace> hmm, would you mind elaborating? :)
00:28 < dnnsmanace> AAA_awright: i was looking at the drop event and it seems it only passes the original url in some instances, and if the image is linked it passes the link url
00:29 < AAA_awright> dnnsmanace: Oh I was thinking dragging files from your local filesystem
00:29 < AAA_awright> dnnsmanace: It probably just downloads the image.
00:29 < dnnsmanace> AAA_awright: but how does it know which image, take a look: http://jsfiddle.net/zever/EcxSm/
00:30 < dnnsmanace> AAA_awright: try dragging an img wrapped in an anchor tag
00:31 < AAA_awright> dnnsmanace: There may also be other getData(...) arguments, I'm not familiar with it
00:33 < dnnsmanace> AAA_awright: i looked but no luck, another question :), how would you suggest going through the js on google's site, to reverse engineer. it is all minified and impossible to read :) 
00:34 < AAA_awright> dnnsmanace: It's (un-)compiled from Java bytecode, so good luck with that
01:01 < AAA_awright> So should browserify "just work" or not?
01:01 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:02 < CoverSlide> it should
01:03 < AAA_awright> I'm requiring a simple module in node_modules, and it outputs a file without warning
01:03 < AAA_awright> But then it never actually includes the require'd file
01:03 < AAA_awright> So on load I get a "module not found" error
01:04 < AAA_awright> If I use -r to try and load the module it says "module not found" on the prompt
01:04 < AAA_awright> Even though require('module') on the REPL works
01:04 < AAA_awright> No clue what's going on
01:20 < dawkad> err
01:21 < jwulf> AAA_awright: relative path issue?
01:22 < AAA_awright> jwulf: I can't get anything to work, browserify simply won't include the modules that I require() no matter how I load them
01:23 < substack> AAA_awright: are you certain that you're loading the right files?
01:23 < jwulf> AAA_awright: have you gotten a minimal test case to work yet?
01:23 < AAA_awright> substack: Loading the right files yeah, I specify an entry point, and it includes the source to that entry point and it executes in the web browser, but it throws a Module not found Error
01:24 < AAA_awright> The require() call detection of detective is either completely non-functional, or... idk
01:25 < AAA_awright> substack: I'd expect browserify to show an error if it can't resolve the module at compile-time, correct?
01:31 < md_5> Is there an easy way to run a query across an array
01:31 < md_5> for example
01:31 < md_5> newArray = array.where(field:true)
01:31 < substack> >> [ 1, 2, 3, 4, 5 ].filter(function(n){return n % 2 === 0 })
01:31 < purr> substack: (object) [2, 4]
01:31 < md_5> thanks
01:32 < md_5> substack would N be the value?
01:32 < substack> yes
01:32 < AAA_awright> Detective seems to work correctly
01:32 < acidjazz> what do people do about mongo id's being wrapped w/ extra "'s in jade?
01:36 < samholmes> How do I check if the environment is production in a view file, EJS
01:36 < samholmes> I'm using express
01:37 <@Nexxy> samholmes, process.env.NODE_ENV ?
01:37 < samholmes> Nexxy: Thank you
01:37 <@Nexxy> :)
01:44 < md_5> is there a way to catch all errors?
01:47 < AAA_awright> substack: Stepping through the code, it looks like there's a cache file. It had a few hundred hashes defined with nothing in any of them. Un-setting the cache appears to make it work.
01:48 < zomg> Man Objective-C seems like such a mess
01:48 < zomg> Still, can't be as bad as Symbian C
01:48 < zomg> lol
01:49 < AAA_awright> Which brings up the question
01:49 < AAA_awright> Why is a library using a cache file
01:50 < AAA_awright> >_<
01:50 < zomg> Why would you have a mutable string class which inherits from the non-mutable string class... now in order to enforce invariants you have to copy all your strings to make sure none of them are mutable..
01:51 < zomg> Same for arrays. Argh
01:51 < zomg> :D
02:00 < samholmes> I'm using shoe and dnode. If the connection is lost for whatever reason, how could I easily reconnect?
02:04 < samholmes> I found an explaination online
02:05 < samholmes> but if I do, d.pipe(stream).pipe(d) again after I made stream a new shoe() connection, will it still work?
02:05 < AAA_awright> substack: The problem is you need to upgrade esprima to 1.0.2, but currently you ask for ~0.9.9
02:05 < samholmes> Or must I re-instantiate a dnode() object and re-attach the event listeners?
02:14 < AAA_awright> substack: These getters/setters are unnecessary and really make it a pain to debug
02:18 < iToast> hi
02:18 < jwulf> hi
02:18 < SomeoneWeird> hai
02:25 < iToast> Hey
02:25 < mrvisser> hi
02:25 < iToast> anyone have any guides to porting NodeJS
02:26 < iToast> I'm thinking of a e-reader port of node.js to take advantage of faster and faster e-readers
02:26 < iToast> they now clock in at 1ghz...
02:28 < iToast> hey
02:29 < iToast> Little confused on Node.js compiling
02:29 < iToast> Python is needed for the scripts for configuring and installing and other things during the build but no longer needed after?
02:29 < iToast> correct?
02:30 < TehShrike> I believe so
02:31 < MrTrick> I know it's a slightly silly question, but can I include a module from a URL?
02:32 < MrTrick> var someone_elses_lib = require("http://....");
02:32 < zomg> MrTrick: like require('http://hack.er/own_your_application.js');?
02:32 < MrTrick> ^_^
02:32 < MrTrick> Yes, that exactly.
02:32 < zomg> I don't know if require can do it since it seems like a pretty obvious security risk, but you could probably load it with a http client and eval it or something along those lines
02:35 < iToast> Does anyone know how to compile node for arm
02:38 <@mbalho> iToast: https://github.com/felixge/node-cross-compiler
02:39 < iToast> mbalho, what about just a raw Arm7 proccessor?
02:41 < SomeoneWeird> iToast, http://n8.io/cross-compiling-nodejs-v0.8/
02:44 < iToast> SomeoneWeird, For some reason I feel like it'd be easier to compile gcc for the device I'm targeting
02:44 < iToast> then compile the rest nativly on it
02:46 < SomeoneWeird> iToast, it will probably take literally 100x longer to compile on the device
02:46 < iToast> SomeoneWeird, I compiled Inspircd on a p4.
02:46 < iToast> I have patience.
02:47 < SomeoneWeird> then compile on it :)
02:47 < iToast> SomeoneWeird, Its a 800mhz proccessor.
02:47 < iToast> armv7
02:48 < SomeoneWeird> rpi is 900 and it takes a few hours
02:48 < iToast> SomeoneWeird, to compile what?
02:48 < SomeoneWeird> node
02:48 < iToast> eh.
02:48 < iToast> Im compiling for the kobo e-readers
02:49 < iToast> il be back
02:49 < SomeoneWeird> :)
02:49 < iToast> can u pm me a tutorial to cross compile for arm
02:49 < iToast> and to make the toolchain
02:49 < iToast> :P
02:50 < SomeoneWeird> lol just follow the one on n8.io
02:50 < SomeoneWeird> and use something like emdebian to grab an arm toolchain
02:52 < isaacbw> hey, do you guys have any advice for breaking into freelancing without many resume-worthy projects? I would be more than happy to do work and get paid only if it ends up being satisfactory to the client, at least for a little while
02:53 < zomg> isaacbw: easiest way would be online freelancing sites but finding good clients can be hard from those
02:54 < zomg> you will find clients who will hire you, but whether they are able to / want to pay you a reasonable rate is a different question
02:54 < zomg> =)
02:54 < isaacbw> I get the impression that most of them are crowded with people working for less than minimum wage
02:54 < zomg> Pretty much but there are legitimate employers there too
02:54 < isaacbw> alright, I'll take a look then
02:54 < isaacbw> I know about freelancer.com and getacoder
02:55 < zomg> Haven't used those lately since I've been full time employed but yeah, probably at least worth a shot to see if anything seems interesting
02:57 < isaacbw> "the page should look like ... not in design but in appearance"
03:01 < zomg> More interested in building my own stuff than working for others lately
03:01 < zomg> Problem being, I don't have any ideas for stuff that would make any money
03:01 < zomg> =)
03:04 < samholmes> Whenever I restart my app process, all web-sockets (shoe/sockjs) connections are closed. How can I make updating my app seamless?
03:06 < zomg> samholmes: I might be on the completely wrong track, but one approach you could do is run the websocket stuff in a separate process. Thus you could reboot your main process without affecting the connections
03:08 < samholmes> zomg: Hmm. Maybe. But when I need to update the real-time stuff?
03:09 < zomg> samholmes: I doubt it's possible because the process is holding the connections up... not without significant trickery at least
03:09 < zomg> It might be best to implement some sort of auto reconnect mechanism into your client side code
03:09 < zomg> so if the socket goes down, it would try to reconnect
03:09 < samholmes> zomg: I was thinking that too
03:10 < samholmes> Sounds good enough
03:10 < zomg> I have a feeling someone smarter than me might have solved this for node, like isaacs or someone
03:10 < zomg> =)
03:20 < mscdex> samholmes: you might first stop listening for new connections, then broadcast a special message to all connected users that a scheduled disconnection is about to occur, then restart
03:20 < mscdex> that way you can easily tell if the disconnection was expected or not
03:50 < isaacbw> zomg, I've got a few ideas that I think I'll follow through with and see where they take me. At the very least, they would be good for a portfolio for finding work
03:55 < AAA_awright> Modularization is good, don't get me wrong
03:55 < AAA_awright> But unnecessary dependencies are just annoying
03:55 < AAA_awright> Dependency hell DIE
03:55 < AAA_awright> DIE
03:55 < AAA_awright> DIE
04:00 < astropirate> wow
04:00 < astropirate> what a mess!!
04:28 < eduardo> Hi guys!
04:29 < eduardo> maybe i am missing something obvious here. i am using mongojs and using the asynch saves. but i cannot figure out how to find the auto-created _id if the record I just added.
04:30 < eduardo> I think I got it, thank you
04:38 < andrewaclt> Is there a list of popular <project>.js that people use. Things like handlebars.js, angular.js, knockout.js, etc, etc, etc?
04:41 < dawra> i need a css parser, this one is great https://github.com/visionmedia/css - but it cannot parse comments. anyone would like to fork that and implement the feature ? :D
04:42 <@mbalho> does https://github.com/NV/CSSOM do comments?
04:42 < dawra> nope i tried that too
04:42 < dawra> http://nv.github.com/CSSOM/docs/parse.html
04:42 < dawra> i dont think i am smart enought o implement parsing comments thats why asking for help, i need it badly todya :(
04:49 < AAA_awright> Guys, straw poll
04:49 < AAA_awright> You should tag all the releases you make in Git, correct?
04:53 < Raynos> mbalho: cssp does comments
04:55 < dawra> hi Raynos 
04:55 < Raynos> hi
04:56 < dawra> i saw you opened an issue on that project, must be you same names
04:56 < dawra> about parsing comments
04:56 < dawra> what happened the
04:56 < dawra> then?
04:57 < dawra> 2months ago
04:57 < dawra> raywell i need a proper css parser that can parse properly and then neatly stringify it back with indentation and all. visionmedia/css does it but not for cmments :(
04:57 < dawra> Raynos: ^
04:58 < Raynos> dawra: What?
04:58 < dawra> Raynos: https://github.com/visionmedia/css-parse/issues/13
04:58 < Raynos> https://github.com/Raynos/npm-css/blob/master/index.js#L30
04:58 < Raynos> I use cssp
04:58 < cellvia> in redis if i need to do an hgetall on 20,000 entries all at once, is it more performant to do this all as one block as a multi exec   or one by one hgetall  (yes i already asked the redis room but asking here in case anyone knows)
04:58 < dawra> Raynos: https://github.com/css/cssp ?
04:59 < Raynos> yes
04:59 < dawra> it does comments ? canit stringify back into well formatted css ? also it has some weird language in documentation
05:00 < Raynos> docs are in russian, good luck
05:00 < Raynos> it handled comments for me
05:00 < dawra> hm, and what about stringify into well formatted css source ?
05:01 < dawra> i wish visionmedia did comments. someone seems to have commented on that issue 15hours ago
05:01 < Raynos> did it for my needs
05:01 < Raynos> make a PR on visionmedia/css-parse
05:02 < Raynos> and make it parse comments
05:02 < dawra> its hard for me i think
05:02 < dawra> i tried for sometime failed
05:02 < deoxxa> AAA_awright: correct
05:02 < AAA_awright> Alright
05:03 < AAA_awright> deoxxa: Also, annotated tags or simple tags?
05:03 < AAA_awright> Annotated tags usually.
05:03 < deoxxa> i just use simple tags
05:03 < deoxxa> but i'm lazy
05:03 < AAA_awright> Really? git-describe requires an extra argument for them
05:03 < deoxxa> $ git tag x.y.z
05:03 < deoxxa> is that a simple tag
05:03 < deoxxa> i don't know
05:04 < AAA_awright> Yeah
05:04 < AAA_awright> Not to pull #Node.js into my politics but it's that I'm having a rediculous argument because someone will make package releases, but won't Git tag unstable ones. But they'll make unstable npm releases.
05:04 < deoxxa> that's silly
05:05 < deoxxa> how do you know what commit the release was made from if you don't tag it
05:05 < deoxxa> i mean, without looking through package.json history
05:05 < shanebo> hey guys I need some regex help. utc offset strings like -0600, +1200, -0300 etc. I'm trying to get the 2nd and 3rd character except in the case of the utc 0000. Any ideas?
05:06 < deoxxa> shanebo: `new Date("your-iso8601-date");'
05:07 < deoxxa> i don't know why you'd want just the second and third characters anyway
05:07 < deoxxa> you obviously know there's sub-hour granularity with timezones
05:07 < Raynos> AAA_awright: humans are silly
05:08 < AAA_awright> deoxxa: Exactly
05:08 < deoxxa> modularise all humans!
05:09 < crescendo> is there a way to use npm to install for a specific target system that is no one's own?  e.g., I'm on linux but want to install for Windows
05:10 < dawra> yeh thats why comments was not done
05:10 < deoxxa> crescendo: npm doesn't know (or care) what platform you're on - it's up to the packages themselves to figure that out
05:11 < deoxxa> crescendo: so the answer is no, unless you can make your system look sufficiently enough like your target system to fool all the packages you're wanting to fool
05:16 < crescendo> alright, thanks.
05:20 < cellvia> anyone have redis experience
05:20 < SomeoneWeird> i do
05:20 < cellvia> if i have 20k hgetall i need to do
05:20 < cellvia> better to do multi exec, or one at a time
05:20 < cellvia> performance wise
05:21 < cellvia> i dont need it to be atomic
05:21 < cellvia> it just seems like a lot to pool in memory in node building up a multi and then a bunch to push over the pipe all at once
05:21 < cellvia> and im wonderin if theres even a benefit 
05:22 < SomeoneWeird> uh
05:22 < SomeoneWeird> if you need todo 20k hgetall you might wanna rethink your db
05:22 < cellvia> word
05:23 < dawra> marked
05:23 < cellvia> well i inherited it and am going to switch
05:23 < cellvia> but i cant do it overnight
05:23 < SomeoneWeird> i mena, not the db
05:23 < SomeoneWeird> mean*
05:23 < SomeoneWeird> but the structure
05:23 < cellvia> hmm
05:24 < cellvia> im trying to cull data out of a collection of a large number of objects, im not sure what i can do to change that
05:24 < cellvia> 20k hgetall  is only done nightly
05:24 < cellvia> not frequently
05:25 < dawra> Raynos: can you do the comments PR ? :D
05:25 < cellvia> but i will think on that
05:26 < SomeoneWeird> oh if you're not doing it all the time it shouldn't matter
05:26 < SomeoneWeird> i would guess doing it all at once would be faster, but i have no idea
05:27 < cellvia> i guess theres 2 things:  with multi exec you only create one connection / socket or whatever
05:27 < cellvia> but you have to pool a massive array in a queue
05:27 < cellvia> in memory
05:27 < cellvia> one by one there is no queue held in memory
05:28 < cellvia> but you have to send each one ... but now that i think of it its still a single connection thats made and is persistent
05:28 < cellvia> its not restablishing a connection for each one
05:29 < rpcesar> ok, so i experimented with node.js about a year or so back, but switched back to python on the backend because I needed good custom process support to manage both a web process frontend, and backend continuous processes. Now it seems like that capability is there via the child_process.fork() functionality, or am I mistaken?
05:29 < rpcesar> does that effectively utilize multiple cores if available?
05:31 < cellvia> i would guess it depends on your OS
05:31 < cellvia> probably so
05:37 < rpcesar> does the V8 runtime within node yield to the processor when created through a forked process and no code is executed? or is there any documentation as to how that specifically works?
05:55 < garthk> Righty. I can gunzip this data on a single core at about 250MB/s. 
05:55 < garthk> Ne… hang on.
06:01 < JohnnyL> Can you grab the client screen from within javascript?
06:07 < cellvia> like a screenshot?
06:07 < cellvia> that would be awesome
06:07 < JohnnyL> yes
06:07 < cellvia> seems unlikely, but i suppose you could capture their dom 
06:08 < cellvia> and rebuild it somehow
06:15 < SomeoneWeird> JohnnyL, look at phantomjs
06:20 < MrTrick> hmm. Node.js doesn't mind me defining a function called 'if' ... but my IDE doesn't like me. ^_^
06:22 < ljharb> isn't 'if' a reserved word?
06:22 < SomeoneWeird> yes
06:22 < SomeoneWeird> >> function if() { }
06:22 < purr> SomeoneWeird: SyntaxError: Unexpected token if
06:22 < SomeoneWeird> doesn't work
06:22 < ljharb> thats what i thought
06:22 < SomeoneWeird> >> var if = function() {}
06:22 < purr> SomeoneWeird: SyntaxError: Unexpected token if
06:23 < SomeoneWeird> yeah, dunno what you're on about MrTrick :)
06:23 < MrTrick> err, sorry. var x = { if: function() {} }; x.if();
06:23 < ljharb> >> this['if'] = function () { console.log('foo'); }; if()
06:23 < purr> ljharb: SyntaxError: Unexpected token )
06:23 < SomeoneWeird> oh, yeah
06:24 < MrTrick> the IDE doesn't grasp the subtle distinction though.
06:24 < ljharb> >> this['if'] = function () { console.log('foo'); }; console.log(this['if]); console.log(this.if);
06:24 < purr> ljharb: SyntaxError: Unexpected token ILLEGAL
06:24 < cellvia> >> for( x=0;x<2;x++ ) console.log(x)
06:24 < SomeoneWeird> lol
06:24 < purr> cellvia: undefined; Console: 0, 1
06:24 < ljharb> >> this['if'] = function () { console.log('foo'); }; console.log(this['if']); console.log(this.if);
06:24 < purr> ljharb: undefined; Console: function () { console.log('foo'); }, function () { console.log('foo'); }
06:24 < ljharb> whoa
06:24 < ljharb> >> this['if'] = function () { console.log('foo'); }; this.if
06:24 < purr> ljharb: function () { console.log('foo'); }
06:24 < ljharb> ok that makes no sense.
06:24 < SomeoneWeird> it does
06:24 < MrTrick> eh? My snippet works. What's going on with the others?
06:24 < SomeoneWeird> you can use keywords as keys in an object
06:24 < ljharb> "if" isn't a valid property name in dot notation, because it's a reserved word.
06:25 < cellvia> >> for( x=0;x<20;x++ ) console.log(x)
06:25 < purr> cellvia: undefined; Console: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
06:25 < MrTrick> ljharb: it works fine for me.
06:25 < ljharb> SomeoneWeird: is that new in ES5?
06:26 < SomeoneWeird> no idea
06:26 < SomeoneWeird> but you can :)
06:26 < ljharb> lol
06:26 < cellvia> hurray
06:26 < MrTrick> unfortunately, common sense prevailed...
06:27 < cellvia> >> bilbo = {}; bilbo.function = "im not a function!"; bilbo.function();
06:27 < purr> cellvia: TypeError: Property 'function' of object #<Object> is not a function
06:27 < SomeoneWeird> lol
06:27 < timeturner> what's the point of that
06:28 < timeturner> ...we are now waiting for "nodog"
06:39 < AAA_awright> substack: Do you know what these getters/setters are doing? Or may I nuke them? https://github.com/substack/node-browserify/blob/master/index.js#L149-L171
06:41 < dawra> in a module like this https://github.com/css/cssp when i require('cssp') - which file is loaded first ? i dont see an index.js or cssp.js in the root of the module.
06:44 <@Nexxy> dawra, https://github.com/css/cssp/blob/master/package.json#L12
06:44 < astropirate> Good night everyone
06:44 < astropirate> i leave y ou with this
06:44 < astropirate> http://www.jankanpo.net/what.html
06:45 <@Nexxy> lol
06:47 < dawra> Nexxy: so i guess porting this to client side would be quite a bit of pain
06:47 < SomeoneWeird> why?
06:48 < dawra> too many files, too many require()
06:48 <@Nexxy> use browserify
06:48 < SomeoneWeird> in other news, does anybody know how I can get something like "function a() { process.nextTick(function() { return 4; }) }" working without using a callback?
06:48 <@Nexxy> or something
06:48 < SomeoneWeird> ^^
06:48 < dawra> i have to go through every file make sure what comes after what change exports variable and make 1 file or so :/
06:48 <@Nexxy> SomeoneWeird, no
06:48 <@Nexxy> dawra, browserify does that for you
06:49 < SomeoneWeird> damnit
06:49 < dawra> Nexxy: https://github.com/substack/node-browserify ?
06:49 <@Nexxy> yus
06:49 < chapel> SomeoneWeird: why don't you want to use a callback?
06:50 < dawra> uh, another tool to learn.
06:50 < SomeoneWeird> will make my logic harder lol
06:50 < chapel> how so?
06:52 < dawra> Nexxy: so i pass the './lib/csspapi.js' to browserify in command line and it will read the source, the requires, then node_modules for require, and build 1 file that just works magically ?
06:52 <@Nexxy> dawra, pretty much, yes
06:52 < SomeoneWeird> chapel, because it will, lol
06:52 <@Nexxy> you specify the out file with -o and it drops a bundle for you
06:52 < dawra> hm, hard to believe, lets try.
06:53 <@Nexxy> substack knows AST kung fu
06:53 < chapel> SomeoneWeird: well maybe you are looking at the problem wrong
06:53 < SomeoneWeird> lol, i'm not
06:53 < SomeoneWeird> it's fine
07:00 < dawra> Nexxy: maybe this thing worked dont know. a bundle.js got prepared with 18k lines
07:01 < dawra> lets say i load it in my browser via script tags, how do i go about using the cssp then ?
07:01 <@Nexxy> require('/cssp')
07:01 < dawra> but i am not using browserify for main.js
07:01 <@Nexxy> what
07:03 < dawra> when i load the file i get this error in chrome console
07:03 < dawra> Uncaught TypeError: Cannot set property '.ometajs' of undefined 
07:03 <@Nexxy> dawra, the idea is that you write your client-side code 'node-style' with requires just like you do on the server
07:03 < dawra> on require.extensions['.ometajs'] = function loadExtension(module, filename) {
07:03 < dawra> hm
07:03 <@Nexxy> but really the examples will probably explain it better than I can
07:04 < dawra> ok i'll figure out but on bundling this i get error can you help meplease?
07:04 <@Nexxy> I'm not familiar with what cssp does
07:04 < dawra> :(
07:05 <@Nexxy> also the docs seem to be in russian ;<
07:05 < dawra> yeh unfortunately, but it parses css basically
07:05 < dawra> i tried the last example code in noejs its fine, but i want to do it clientside
07:06 < dawra> would be obliged if you can help me with this
07:07 <@Nexxy> dawra, you should be able to just bundle your example as-is
07:09 < dawra> Nexxy: tried bundling my example, gives that same error
07:09 < dawra> Uncaught TypeError: Cannot set property '.ometajs' of undefined 
07:10 < dawra> Nexxy: would be awesome if you could try it out, wont take long. npm install cssp then copy that example code in a file and browserify file.js -o bundle.js and load in a script -> browser ?
07:23 < dawra> wow cssp is great
07:23 < dawra> just need to move it to client-side now somehow
08:37 < [AD]Turbo> hola
08:38 < olleman> heynow
08:41 < framlin>  /j #myra rocks
08:42 < framlin> uups, sorry ;)
08:44 < dawra> np
08:50 < dawra> hi substack maybe you can help me
08:53 < bradleymeck> lower level node-tar https://github.com/bmeck/node-tart go break it while i sleep
09:35 < ljharb> if i want to use npm to install a specific branch of a git repo, how do i do that?
09:37 < Janzeh> add #[branch-name] to the url
09:38 < ljharb> with the # and brackets?
09:38 < Janzeh> nope, just the branchname ;-)
09:38 < ljharb> hm, not working. i'm trying both the https and git:// urls for the repo, and adding the branch name after the last trailing slash
09:39 < ljharb> `npm install modulename path/to/repo/branchname`?
09:39 < Janzeh> I'm not sure installing from git works with npm install. Try putting it in a package file
09:39 < SomeoneWeird> specify the last commit of the branch
09:39 < SomeoneWeird> npm install <name>@<commit>
09:40 < SomeoneWeird> (maybe)
09:40 < ljharb> hmm
09:40 < ljharb> the problem is that the branch i want to test isn't on npm
09:40 < SomeoneWeird> then just git clone it?
09:41 < ljharb> yeah, i suppose i could just clone it inside node_modules
09:41 <@Nexxy> ljharb, try using the tarball?
09:41 < ljharb> what tarball, on github?
09:41 <@Nexxy> ya
09:42 < ljharb> … where do i find that? :-)
09:42 <@Nexxy> it's like
09:42 < SomeoneWeird> in downloads
09:42 <@Nexxy> https://github.com/<user>/<repo>/archive/<branch>.tar.gz
09:42 <@Nexxy> I think
09:43 < ljharb> downloads is gone from github now
09:43 < ljharb> but the links should still work, i'll try that
09:43 <@Nexxy> you can still get tarballs :D
09:43 < deoxxa> downloads != tarballs
09:43 <@Nexxy> yes thank you deoxxa 
09:43 < SomeoneWeird> ^
09:43 < SomeoneWeird> :)
09:43 < deoxxa> you're welcome Nexxy
09:43  * deoxxa bows
09:48 < ljharb> thanks Nexxy, that worked for cmdline npm install. is there a syntax for using that in package.json?
09:49 <@Nexxy> I imagine it's the same, I haven't tried it though
09:49 < ljharb> k, no worries
10:24 < daslicht> not quite node related but, when you evaluate a page with phnatomjs it should render the page entirely inclusive all js code correct ? and return the rendered html so that i can be viewed with a non js browser ?
10:26 < ZynarShan> test
10:26 < ljharb> daslicht: that's not the right approach, because the rendered page probably depends on JS to work.
10:26 < khurram> hi guys
10:27 < khurram> can some one please help me app.get('/hello.txt', function(req, res)   what does app.get('hello.text'   mean.... fetch the file hello.text ?
10:28 < deoxxa> khurram: where did you read about "app.get"?
10:28 < khurram> deoxxa: express guide first tutorial 
10:28 < deoxxa> khurram: was it this? http://expressjs.com/guide.html
10:29 < kidsexindiapers> kidsexindiapers substack_ johnnny22 tosoa leonardo_ eosphoro1 admc timoxley_ simewn_ forzan Rantanen fear\phage callen_ nuba_ cronopio_ SirFunk_ silvers_ russfran1 shihan_ gildean_ crescend1 Bwild_ wadey tjfontai1e harthur dragon_ bicranial_ mekwall- avital_ khurram ZynarShan joschi_ SamuraiJack_ rendar_ _Blorb larsvegas culturelabs_ hunterlo_ innociv_ tlync daslicht zcourts_ khrome AdrienBrault sebv simong Kakera pooriaazimi Rodr
10:29 < kidsexindiapers> [04:26] Users on #Node.js: JohnnyL Swaagie douglaslassance davidbanham tPl0ch Spion sdouble eldios mdevolving dsirijus goraxe hjr3 whitman Janzeh thanpolas__ samholmes aaronmcadam st_luke quesada__ rampr kuja_ main_ shaker_ WolfAlex_ toonkete_ booo larsvegas1 willwhit_ anuby_ danielfi_ jpdery_ hakunin kholladay extrawurst_ zonetti Xiphias3 ebright Druide_ petschm thomas_dk timoxley bahaaldine schlitzer adambeynon bnoordhuis TomY F
10:29 < kidsexindiapers> [04:26] Users on #Node.js: pdillinger tornad Maxani CestSebastian Wizek Aartsie nooga Codynyx _kud stonebranch monkegjinni teerapapc1 djcoin [AD]Turbo Morkel brooss dshaw_ culturelabs rafmc balboah Nasga adrianlang myndzi ablomen kkszysiu_work Jee5us `10 groom nicholasf [[zz]] Piotras Frippe romario333 dobber rendar mirkok poolshark ArgK torgeir mattijs _baton_ andris9_ daedeloth braoru Bonuspunkt ttt `3rdEden SamuraiJack mikeal e
10:29 < kidsexindiapers> [04:26] Users on #Node.js: niloy felixge slifty ghoti_ garthk framlin serapath gm0t1 pretty_function jammsen stagas hiitsu leoncamel earthquake hunterloftis dawra yarco kishoreyekkanti weie elsifaka Youdaman Validatorian jimbot Sly inolen bbloom D4RK-PH0ENiX tomtomaso kenperkins intripoon_ MrTrick yuwang hipertracker iToast a_suenami Edisto abraxas dragon cjm timeturner netj wilmoore MI6 vro ircretary Axsuul justinabrahms curious1
10:29 < kidsexindiapers> [04:26] Users on #Node.js: ^esc md_5 anarchist Anton_ chovy Eiam andrehjr mferranti Valdez levi501d dook dmilith bricker Fudge| percival_ terietor _ior malcolmva cuttooth Fli-c DingoEatingFuzz tplaner_ idefine1 billy misterhat d-snp skeptic_ cronopio justicefries epa_ ruff davidbowieslefte Hochmeister ryo Tim-_- DjMadness sirkitree|afk vyvup tchopper_ _br_ ackram Industrial dogmatic69 polyrhythmic notmatt \mSg zykes- simius mrchri
10:29 < kidsexindiapers> [04:26] Users on #Node.js: gildo xp_prg2 litenull texinwien defunctzombie_zz Outsider jsilver zivester corytheboyd Orbitrix drug_motor satyr yacks meso_ xSmurf jeswin jdeibele BadOPCode drudge r126f barneybook_work sawjig philips_ DrShoggoth MrNibbles dscape notelliottcable aweeks schredder chjj zodiak callen salsamontes EvRide tomb ewoerner kppullin fmeyer jso L_star jolo2 galaxywatcher dcamp owen1 mattp_ flagg0204 average_drifte
10:29 < kidsexindiapers> [04:26] Users on #Node.js: JohnMcLear votePedro _yoy_ tristram tahu_ darjeeling Twelve-60 peterrs Guest90418 moonlite SvenDowideit benjaminbenben heroux Ralt azend VesQ ikss lrvick lanceball Jakey parasight nathan7 Draggor TehShrike|Work maru_cc___ Slashbunny ryanseddon olleman nanashiRei Wa deizhu Pilate bren2010 siksi point9repeating bodisiw roger_padactor kimico drodger Leeol orospakr jzacsh niggler dk011 hRedBeard ian___ salaz
10:29 < kidsexindiapers> [04:26] Users on #Node.js: aboudreault yewton ljharb ag4ve luigy Couto dnz- raja tokuhirom klobucar metellus jyp_cloud_ Lee- qbit n0c_ [JellyBean] toothrot stephank jesusabdullah alta PigDude Clex FIQ naquad chayin codelahoma Connorhd nic4m crodas SomeoneWeird Zauberfisch sente duc1199 _cheney wycats daleharvey bacilla RichardBronosky shesek Swizec obind andrefs eventualbuddha jwulf_afk topi` shihan MrNko stalled onre inimino gaYa
10:29 < kidsexindiapers> [04:26] Users on #Node.js: wgolden_afk beuk_ cainus cyphase tmiw kraft yongtin edr stride aromasca limeforce tchopper stonecobra theForce Lorentz @konobi digiwth tdmackey thread Gruni jmfcool benhoman pinja Kai_ Jygga ypcs ofan necco carolyns mickhansen gozala AttackingHobo swi7ch zorzar Zol chrisdickinson gwoo Sembiance coasterD SargoDarya scott_gonzalez ed209 Daegalus thedaywillcome MrMaksimize doffm_ joeytwiddle SecretAgent chi
10:29 < kidsexindiapers> [04:26] Users on #Node.js: flyth devdazed prettyrobots cpg Erriond__ drey_ mmalecki[zzz] BruNeX jayne ejnahc gsf jtm Gottox context khmer_ ben_alman renan_saddam bgnx LeoAtWork_ majek beawesomeinstead balupton_ xorox90_ romainhuet_ owenb PhilK href iain bicranial CamonZ s5fs yankhates swajr vladikoff joshie soahccc Chilley Internet13 mrryanjohnston SpX guybrush @Nexxy gim50 cha0s _Steve_ phI||Ip jaredrhine Kudos deoxxa retornam ia
10:29 < kidsexindiapers> [04:26] Users on #Node.js: pc1oad1e1ter reid_ @isaacs Gabriel413 jbpros aka nitind nail_ niallo_ jareiko asherkin brianloveswords balgarath_ baudehlo mrkurt stbuehler omni5cience ohcibi Guest46216 pct zeroz Fuu`` hossy jemparing duncanbeevers jkarsrud mgc__ nym phuu svnlto frankdsm_ fcoury jcrew niftylettuce_ tim_smart|away Drager faulkner RushPL_ skebcio_ jslatts mape onr wereHamster fwg Disil wires TehShrike elliottcable jgornic
10:29 < kidsexindiapers> [04:26] Users on #Node.js: lurksia mikey_p rmill jden|nedj Steve rwaldron mertimor killtheliterate mscdex CoffaBun33h i_m_ca yawnt pquerna ClaudioAlbertin neersighted ivan\ txdv Guest87286 zhware Tivs___ jaequery_ serby_ zygote___ wavded jgaui remysharp thejefflarson Fabryz olegp sveisvei Raynos NimeshNeema upgrayeddd garann herzi Hosh__ strmpnk darach_ chunhao__ iaincarsberg sriley dch_ denysonique heatxsink_ dekz_ magn3ts marien
10:29 < kidsexindiapers> [04:26] Users on #Node.js: tuhoojabotti cfq topaxi L10n acidjazz tanepiper zomg prawnsalad beasty_ kborchers munro psino don_jones @mbalho freeformz Zak Nom- zemm bitZero__ dcelix sj26 Shadda MitchW zz_runningskull doki_pen pig dhpe gorillatron slurp plato Pagan|Work jtwalters_ TheMoonMaster yorn gkatsev Kester Proditor_ Christian87 appr codepal tassmjau Amfy jheusala Mortchek AllStruck imarcusthis Blorb whyhankee CoverSlide knyon
10:29 < kidsexindiapers> [04:26] Users on #Node.js: dec fastman rudolfrck zenazn rworth trodrigues richardshaw mrmoneyc LeftWing bentruyman ianjm emilsedgh silvers krishna clever jaket djoot akshayms Zelest wookiehangover im0b dKc _janne er1c_ Derander mnaser coffeecup ManneW Typo matt_c drspin kuplatupsu cce so Sven_vB wadey|away aandy LanyonM jmaugue_ sugyan kth5_ terinjokes masch samstefan JmZ_ othiym23 __class__ sir_tyrion flexd xcat tellnes Grephix _
10:29 < SomeoneWeird> !ops
10:29  * md_5 claps
10:29 < deoxxa> lolll
10:29 < SomeoneWeird> gr
10:29 < md_5> banhammer!
10:29 < eldios> oh.. there he is
10:29 < zonetti> --'
10:29 < khurram> stupid 
10:29 < eldios> nice nick btw
10:29  * md_5 wonders what the freenode staff channel is
10:29 < DjMadness> damn some people are just idiots...
10:29 < deoxxa> oh here we go
10:29 < ROTINFUCCINGHELL> kidsexindiapers substack_ johnnny22 tosoa leonardo_ eosphoro1 admc timoxley_ simewn_ forzan Rantanen fear\phage callen_ nuba_ cronopio_ SirFunk_ silvers_ russfran1 shihan_ gildean_ crescend1 Bwild_ wadey tjfontai1e harthur dragon_ bicranial_ mekwall- avital_ khurram ZynarShan joschi_ SamuraiJack_ rendar_ _Blorb larsvegas culturelabs_ hunterlo_ innociv_ tlync daslicht zcourts_ khrome AdrienBrault sebv simong Kakera pooriaazimi Rod
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: JohnnyL Swaagie douglaslassance davidbanham tPl0ch Spion sdouble eldios mdevolving dsirijus goraxe hjr3 whitman Janzeh thanpolas__ samholmes aaronmcadam st_luke quesada__ rampr kuja_ main_ shaker_ WolfAlex_ toonkete_ booo larsvegas1 willwhit_ anuby_ danielfi_ jpdery_ hakunin kholladay extrawurst_ zonetti Xiphias3 ebright Druide_ petschm thomas_dk timoxley bahaaldine schlitzer adambeynon bnoordhuis TomY 
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: pdillinger tornad Maxani CestSebastian Wizek Aartsie nooga Codynyx _kud stonebranch monkegjinni teerapapc1 djcoin [AD]Turbo Morkel brooss dshaw_ culturelabs rafmc balboah Nasga adrianlang myndzi ablomen kkszysiu_work Jee5us `10 groom nicholasf [[zz]] Piotras Frippe romario333 dobber rendar mirkok poolshark ArgK torgeir mattijs _baton_ andris9_ daedeloth braoru Bonuspunkt ttt `3rdEden SamuraiJack mikeal 
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: niloy felixge slifty ghoti_ garthk framlin serapath gm0t1 pretty_function jammsen stagas hiitsu leoncamel earthquake hunterloftis dawra yarco kishoreyekkanti weie elsifaka Youdaman Validatorian jimbot Sly inolen bbloom D4RK-PH0ENiX tomtomaso kenperkins intripoon_ MrTrick yuwang hipertracker iToast a_suenami Edisto abraxas dragon cjm timeturner netj wilmoore MI6 vro ircretary Axsuul justinabrahms curious
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: ^esc md_5 anarchist Anton_ chovy Eiam andrehjr mferranti Valdez levi501d dook dmilith bricker Fudge| percival_ terietor _ior malcolmva cuttooth Fli-c DingoEatingFuzz tplaner_ idefine1 billy misterhat d-snp skeptic_ cronopio justicefries epa_ ruff davidbowieslefte Hochmeister ryo Tim-_- DjMadness sirkitree|afk vyvup tchopper_ _br_ ackram Industrial dogmatic69 polyrhythmic notmatt \mSg zykes- simius mrchr
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: gildo xp_prg2 litenull texinwien defunctzombie_zz Outsider jsilver zivester corytheboyd Orbitrix drug_motor satyr yacks meso_ xSmurf jeswin jdeibele BadOPCode drudge r126f barneybook_work sawjig philips_ DrShoggoth MrNibbles dscape notelliottcable aweeks schredder chjj zodiak callen salsamontes EvRide tomb ewoerner kppullin fmeyer jso L_star jolo2 galaxywatcher dcamp owen1 mattp_ flagg0204 average_drift
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: JohnMcLear votePedro _yoy_ tristram tahu_ darjeeling Twelve-60 peterrs Guest90418 moonlite SvenDowideit benjaminbenben heroux Ralt azend VesQ ikss lrvick lanceball Jakey parasight nathan7 Draggor TehShrike|Work maru_cc___ Slashbunny ryanseddon olleman nanashiRei Wa deizhu Pilate bren2010 siksi point9repeating bodisiw roger_padactor kimico drodger Leeol orospakr jzacsh niggler dk011 hRedBeard ian___ sala
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: aboudreault yewton ljharb ag4ve luigy Couto dnz- raja tokuhirom klobucar metellus jyp_cloud_ Lee- qbit n0c_ [JellyBean] toothrot stephank jesusabdullah alta PigDude Clex FIQ naquad chayin codelahoma Connorhd nic4m crodas SomeoneWeird Zauberfisch sente duc1199 _cheney wycats daleharvey bacilla RichardBronosky shesek Swizec obind andrefs eventualbuddha jwulf_afk topi` shihan MrNko stalled onre inimino gaY
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: wgolden_afk beuk_ cainus cyphase tmiw kraft yongtin edr stride aromasca limeforce tchopper stonecobra theForce Lorentz @konobi digiwth tdmackey thread Gruni jmfcool benhoman pinja Kai_ Jygga ypcs ofan necco carolyns mickhansen gozala AttackingHobo swi7ch zorzar Zol chrisdickinson gwoo Sembiance coasterD SargoDarya scott_gonzalez ed209 Daegalus thedaywillcome MrMaksimize doffm_ joeytwiddle SecretAgent ch
10:29 < khurram> im already stuck with express app.get( ) and he is ....
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: flyth devdazed prettyrobots cpg Erriond__ drey_ mmalecki[zzz] BruNeX jayne ejnahc gsf jtm Gottox context khmer_ ben_alman renan_saddam bgnx LeoAtWork_ majek beawesomeinstead balupton_ xorox90_ romainhuet_ owenb PhilK href iain bicranial CamonZ s5fs yankhates swajr vladikoff joshie soahccc Chilley Internet13 mrryanjohnston SpX guybrush @Nexxy gim50 cha0s _Steve_ phI||Ip jaredrhine Kudos deoxxa retornam i
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: pc1oad1e1ter reid_ @isaacs Gabriel413 jbpros aka nitind nail_ niallo_ jareiko asherkin brianloveswords balgarath_ baudehlo mrkurt stbuehler omni5cience ohcibi Guest46216 pct zeroz Fuu`` hossy jemparing duncanbeevers jkarsrud mgc__ nym phuu svnlto frankdsm_ fcoury jcrew niftylettuce_ tim_smart|away Drager faulkner RushPL_ skebcio_ jslatts mape onr wereHamster fwg Disil wires TehShrike elliottcable jgorni
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: lurksia mikey_p rmill jden|nedj Steve rwaldron mertimor killtheliterate mscdex CoffaBun33h i_m_ca yawnt pquerna ClaudioAlbertin neersighted ivan\ txdv Guest87286 zhware Tivs___ jaequery_ serby_ zygote___ wavded jgaui remysharp thejefflarson Fabryz olegp sveisvei Raynos NimeshNeema upgrayeddd garann herzi Hosh__ strmpnk darach_ chunhao__ iaincarsberg sriley dch_ denysonique heatxsink_ dekz_ magn3ts marie
10:29 < ROTINFUCCINGHELL> [04:26] Users on #Node.js: tuhoojabotti cfq topaxi L10n acidjazz tanepiper zomg prawnsalad beasty_ kborchers munro psino don_jones @mbalho freeformz Zak Nom- zemm bitZero__ dcelix sj26 Shadda MitchW zz_runningskull doki_pen pig dhpe gorillatron slurp plato Pagan|Work jtwalters_ TheMoonMaster yorn gkatsev Kester Proditor_ Christian87 appr codepal tassmjau Amfy jheusala Mortchek AllStruck imarcusthis Blorb whyhankee CoverSlide knyo
10:30 < felixge> now everybody is awake ;)
10:30 < jammsen> why is that only in this channel -.-
10:30 < Zelest> wow, irc spam..
10:30 < tmiw> md_5: #freenode
10:30 < mickhansen> :)
10:30 < jammsen> no where else
10:30 -!- mode/#Node.js [+o bnoordhuis] by ChanServ
10:30 < Zelest> that brings memories
10:30 < magn3ts> grow up
10:30 < culturelabs_> WEB SCALE
10:30 < eldios> hey felixge o/
10:30 < ljharb> jammsen: it was in ##javascript 5 minutes ago.
10:30 < daslicht> I have control of the rendered page, 
10:30 < SomeoneWeird> konobi, Nexxy isaacs mbalho 
10:30 < zonetti> second channel so far..
10:30 < khurram> oye
10:30 < _kud> the same that in ##javascript
10:30 < texinwien> just happened in ##javascript, as well
10:30 < md_5> Most networks have a network ops channel
10:30 < Zelest> just +R it
10:30 < tmiw> happened in ##cars a bit ago too
10:30 < md_5> but meh, reported
10:30 < Kakera> someone hates javascript
10:30 < deoxxa> khurram: read the guide from the top, it explains it quite well
10:30 < jammsen> im only in #jquery :P
10:30 < khurram> deoxxa: ? please 
10:30 < daslicht> I will built it following the hijax paradigm so this should be good, but that wasnt the question
10:30 < Gottox> Kakera: who dares!
10:30 < cha0s> Testing new node.js irc bot?
10:30 < bahaaldine> that was violent :D
10:31 < daslicht> which approach would you follow?
10:31 < khurram> deoxxa: With the new application instance you can start defining routes via app.VERB(), in this case "GET /" responding with the "Hello World" string
10:31 < pretty_function> XD
10:31 < DjMadness> doubt it was a test of a bot... just some skiddie that thinks he can do something
10:31 < ljharb> daslicht: build a site that doesn't break when JS is off
10:31 < khurram> what type of guide is that
10:31 < deoxxa> khurram: bingo
10:31 < md_5> and that was the sound of DOS on freenode
10:31 < cha0s> was that a netsplit?
10:31 < md_5> nope
10:31 < deoxxa> khurram: so app.[VERB] defines a route
10:31 -!- mode/#Node.js [+b *!*@*.myvzw.com] by bnoordhuis
10:31 < DjMadness> looks more like some mirc clients that could not handle the text :P
10:32 < md_5> lindbohm.freenode.net  went spastic
10:32 < khurram> deoxxa: i want to know what app.get will do when i 'll pass him /hello.text ?
10:32 < SomeoneWeird>  MOAR ddos
10:32 < eldios> XD
10:32 < cha0s> hey bnoordhuis I think that ban might be a bit too aggressive, just saying
10:32 < deoxxa> khurram: app.get, in this case, defines a route for "GET" requests when the url matches "/hello.txt"
10:32 < md_5> now leguin
10:32 < cha0s> vzw probably Verizon Wireless
10:32 < daslicht> ljharb: no option I want to make a Ajax page indexable 
10:32 -!- mode/#Node.js [-b *!*@*.myvzw.com] by bnoordhuis
10:32 < khurram> deoxxa: thanks you are lovely
10:32 < daslicht> so anyone got experience iwth phantomJS ?
10:33 -!- mode/#Node.js [+b *!*@*.sub-174-253-132.myvzw.com] by bnoordhuis
10:33 < cha0s> bnoordhuis, <3
10:33 < ZynarShan> STORY OF OUR LIVES.
10:33 < ljharb> daslicht: that's the best option: make it a regular webpage. alternatively, google's got an approach to make hacky ajax pages indexable: https://developers.google.com/webmasters/ajax-crawling/
10:33 < eldios> agree cha0s , well done bnoordhuis 
10:33 < `3rdEden> nubcakes
10:33 < eldios> yo `3rdEden 
10:33 < eldios> o/
10:33 < `3rdEden> o/
10:33 < daslicht> Yes Google suggests to make HTML snapshots with a headless browser like PhantomJS :D
10:34 < daslicht> thats why i am asking
10:34 < daslicht> heya `3RdEden :)
10:34 < johnnny22> if I want to build a site that auto updates a list of items on the site, (just the new items are added). Are there good tricks for this ?
10:34 < ljharb> daslicht: sorry, that was the wrong link. don't do html snapshots. use https://developers.google.com/webmasters/ajax-crawling/docs/specification
10:34 < `3rdEden> hey daslicht
10:34 < JohnnyL> SomeoneWeird: thanks
10:35 < deoxxa> daslicht: you really should make it a regular page if you want it to be indexed
10:35 < daslicht> ljharb: have you read the doc ureself ?
10:35 < deoxxa> daslicht: if it's content, it should be accessible via its url. if it's an application, do whatever you like, because it doesn't need to be indexed.
10:35 < daslicht> guys thats not the question I am asking 
10:35 < ljharb> a long time ago, when it was still acceptable to build sites that break when JS is disabled.
10:35 < deoxxa> ...yes it is
10:35 < daslicht> I try to make a Wakanda Webapplication crawlable
10:35 < ljharb> daslicht: you're asking the wrong question. you want to make your site crawlable? make it work perfectly in a non-JS browser
10:36 < daslicht> this webapplication is rendered by default on the client side
10:36 < daslicht> :)
10:36 < ljharb> then you have to rebuild it without wakanda.
10:36 < daslicht> I asked how to render a page with phantomjs
10:36 < ljharb> or figure out how to disable client-side rendering by default.
10:36 < daslicht> and you make suggestions totally off topic
10:36 < ljharb> you asked if it would work for your use case
10:36 < ljharb> for non-JS browsers.
10:36 < ljharb> so it's very on-topic to give you better suggestions for how to render pages to non-JS browsers.
10:36 < daslicht> ok <reset>
10:37 < deoxxa> daslicht: we're suggesting answers to your problem, not your question :)
10:37 < daslicht> ok lets restart :)
10:37 < daslicht> I try to make this wakanda webapp indexable
10:37 < ljharb> people always come in these rooms and ask the wrong questions :-) just ask about your problem, not your imagined solution
10:37 < daslicht> so I considered following the Google suggested method by providing html snapshots
10:38 < daslicht> now try to create a html snapshot of a wakanda page and return the rendered html
10:38 < ljharb> and how will you know when to do that?
10:38 < ljharb> since, when there's no JS, you get nothing, you'd have to return the rendered HTML by default.
10:38 < ljharb> and then, use JS to turn on the client-side behavior if possible.
10:38 < daslicht> i can solv that on the cleint side with js
10:39 < ljharb> (coincidentally, that's how you build proper websites in the first place)
10:39 < daslicht> no option with wakanda
10:39 < deoxxa> hot dog, we have a wiener
10:39 < deoxxa> ljharb wins the daily prize
10:39 < daslicht> lol
10:39 < deoxxa> http://www.wakanda.org/faq so much FUD
10:39 < ljharb> daslicht: lol yep, that's my point. "wakanda" and "proper website" don't go together :-)
10:39 < daslicht> daily price in trying to force his optinions
10:40 < daslicht> yoy guy 
10:40 < deoxxa> daslicht: wakanda looks like it's for building applications, not websites
10:40 < daslicht> blah blah 
10:40 < daslicht> pointless you guys
10:40 < deoxxa> daslicht: applications rarely need to be indexed, so it's not a supported feature
10:40 < daslicht> and again a suggestion which i havent asked for
10:40 < daslicht> focus
10:40 < ljharb> it's not pointless. you brought in a car with square wheels and are asking us to make it drive smoothly
10:41 < deoxxa> specifically you're asking us how to tune the radio to the right station to make it drive smoothly
10:41 < ljharb> we're suggesting round wheels, and you're not listening :-)
10:41 < daslicht> just try to focus on my question 
10:41 < SomeoneWeird> lmao deoxxa 
10:41 < deoxxa> "hi doctor, my arm really really hurts. can you take a look at my foot for me?"
10:41 < ljharb> didn't i, just earlier? 1) return the rendered HTML by default. 2) when JS is available, layer the client-side component on top of it
10:41 < deoxxa> "don't you uh, want me to look at your arm?"
10:41 < deoxxa> "no you idiot i said my leg"
10:41 < deoxxa> "..."
10:41 < daslicht> that wasnt the question
10:41 < ljharb> lol
10:41 < deoxxa> "but the problem is with your arm"
10:42 < daslicht> I asked if anyone has experience with rendereing js pages using phantomjs
10:42 < deoxxa> "but i asked you to look at my leg"
10:42 < daslicht> I havent asked for any opinions or alternatives
10:42 < ljharb> yup - i do it for my jasmine JS tests at work. but not for a real website, cause that'd be crazy.
10:42 < deoxxa> daslicht: we can go around in circles here, but the consensus is that you're Doing It Wrong (tm)
10:42 < deoxxa> daslicht: we're not going to help you jump off this cliff
10:42 < daslicht> so google is crazy?
10:42 < ljharb> daslicht: if you're asking for help, you are automatically asking for opinions and alternatives. we're not an Answer Machine™
10:43 < ljharb> daslicht: about javascript? ABSOLUTELY.
10:43 < ljharb> s/about/wrt
10:43 < MI6> joyent/node: Farid Neshat master * dcaebec : fs: add autoClose=true option to fs.createReadStream - http://git.io/W9Mcfw
10:43 < daslicht> never mind
10:43 < daslicht> stay inside the box 
10:43 < deoxxa> my box is comfortable
10:43 < ljharb> daslicht: we're seriously not trolling you. we're trying to help you, and you don't want our help. you just want a magical answer to your question that doesn't exist.
10:44 < ljharb> it's a nice box - it holds the entire internet.
10:44 < deoxxa> oh god, i always forget about how good konbini-bought pudding is here
10:45 < deoxxa> makes me happy inside
10:45 < deoxxa> puddi puddi!
10:45 < deoxxa> http://www.youtube.com/watch?v=B10BxYZqa1Q
10:46 < SomeoneWeird> ljharb, https://www.youtube.com/watch?gl=AU&hl=en-GB&v=UTBsm0LzSP0
10:47 < daslicht> http://meteor.com/blog/2012/08/09/search-engine-optimization
10:47 < daslicht> same approch ...
10:48 < deoxxa> ah, meteor. a paragon of good design choices.
10:48 < ljharb> SomeoneWeird: lol
10:48 < ljharb> hahaha
10:48 < ljharb> turn off JS, and the entire meteor site is a useless white page
10:49 < deoxxa> hang up your hats, it's quittin' time guys
10:49 < ljharb> oh wait, it's not white anymore. now it's just their background image.
10:49 < ljharb> lol even the blog is entirely JS-powered. how ridiculous.
10:54 < Nasga> ljharb: maybe do you prefer flash/silverlight to build a RT app ?
10:55 < Nasga> or even a java applet -_-
10:55 < daslicht> :)
10:56 < Nasga> ljharb: and without browser, most sites are just a bunch of text with a lot of useless markups
10:56 < schlitzer> hey, what is the best way to make use of multiple processors? and i dont want to start multiple nodejs instances. i read something about "webworker" but the module was last updated two years ago. 
10:57 < schlitzer> what i need is quite simple i guess. i want a master process that accepts connections and passes the FD to a worker process
10:57 < Nasga> schlitzer: like a nginx/haproxy ? :p
10:57 < schlitzer> and this for socket connections, , not http
10:58 < schlitzer> Nasga, uhm, not directly, i do not want to use nginx/haproxy...
10:58 < Nasga> then i want to know your solution too :)
10:59 < schlitzer> Nasga, http://developer.yahoo.com/blogs/ydn/posts/2010/07/multicore_http_server_with_nodejs/
10:59 < deoxxa> schlitzer: there's the "cluster" functionality in node.js core now, but i personally hate it
10:59 < schlitzer> deoxxa, uhm okay. why do you hate it? never had a look at it, but what is wrong with it from your point of view?
11:00 < deoxxa> schlitzer: my main beef with it is that it limits you to precisely one machine, and requires you to write your application probably two and a half times if you're using it as a stepping stone towards distributing your application out to multiple physical nodes
11:01 < schlitzer> deoxxa, ahh ok
11:01 < deoxxa> schlitzer: whereas if you just write your application to work on multiple physical nodes in the first place, you get all the "scaling" benefits of cluster with none of the specific-API overhead
11:02 < schlitzer> deoxxa, but doing it like this would also mean starting one instance of node, per core?
11:02 < deoxxa> correct
11:03 < deoxxa> schlitzer: at work, i've got a few applications that use various wire protocols (some request/response, some streams, some fire-and-forget) and i found it was easiest to set up round-robin DNS between multiple machines and iptables rules to shove clients off to different node instances
11:03 < schlitzer> okay, but this is something i like to omit 
11:03 < deoxxa> why do you want to not do that?
11:03 < schlitzer> i like the idea of having one instance per machine, that simply starts child process /threads
11:03 < deoxxa> well that's what the cluster thing does under the hood anyway
11:03 < deoxxa> it's sort of the only way to do it
11:04 < deoxxa> unless you can farm a significant portion of work out to c++-land and do it in a thread pool with libuv
11:04 < schlitzer> so a master process that starts as many threads/child process that as cores are available
11:04 < schlitzer> okay, than i will have a closer look at the cluster module
11:04 < schlitzer> but thanks for the hint :)
11:04 < deoxxa> no problem, it might be a good fit for you
11:05 < deoxxa> i've just found it to be an exceptionally bad fit for a lot of other things :P
11:05 < schlitzer> currently i was looking at this package: https://npmjs.org/package/webworker-threads
11:10 -!- mode/#Node.js [-o bnoordhuis] by bnoordhuis
11:30 < qbit> bnoordhuis: http://sprunge.us/VgdS <-- it is node-gyp that changed the extension from .node to .so
11:31 < bnoordhuis> qbit: ah. that wily fellow TooTallNate strikes again
11:32 < qbit> :P 
11:33 < mchammer> anyone familiar with mongoose? i'll need a 2d-array-structure and don't know how to handle it in a good way
11:38 < MI6> joyent/node: Ben Noordhuis v0.8 * 5a19c07 : http: pack response body buffer in first tcp packet  Apply the same optim (+1 more commits) - http://git.io/GkIJcQ
11:39 < bnoordhuis> ^ optimizing all the things
11:43 < MI6> joyent/node: Ben Noordhuis master * 79ae8b7 : Merge remote-tracking branch 'origin/v0.8' (+6 more commits) - http://git.io/N0Lhog
11:54 < khurram> how can i have the instance of request in my static public directory js file ? can some please guide ?
11:54 < SomeoneWeird> huh
11:55 < khurram> SomeoneWeird: please ?
11:55 < SomeoneWeird> what do you want?
11:56 < saschagehlich> why would you want to do this? backend and frontend are two different things
11:56 < khurram> i am serving big web site from /public 
11:57 < SomeoneWeird> and?
11:57 < khurram> i want to print connected to mongodb  when url is  domain/connect
11:57 < SomeoneWeird> wat
11:58 < SomeoneWeird> console.log("connected to mongodb")
11:58 < khurram> in my express app i have every thing redirected to /public
11:58 < khurram> i want to see it on the webpage connected to mongodb instead of console as i do not have server console 
11:58 < SomeoneWeird> you'll have to use socketio or something then
11:59 < khurram> socketio 
12:00 < SomeoneWeird> ..
12:13 < franck34> hi guys
12:13 < franck34> i'm studying the possibility to make a pkcs12 to pem ssl certificat converter with node
12:14 < franck34> but createCredentials functoin is opaque
12:14 < SomeoneWeird> ?
12:14 < franck34> does somebody know how to extract private/public keys from a p12 cert using node ?
12:15 < franck34> SomeoneWeird: createCredentials just return an object without functions, there is nothing related to "getPrivateKey" or something like that
12:15 < SomeoneWeird> no, it does have functions
12:16 < franck34> just wondering if it's possible to fetch public/private key from an ssl cert using crypto functions
12:16 < SomeoneWeird> they're prototyped so you can't see them when you console.log it
12:16 < franck34> SomeoneWeird: ha ?
12:16 < SomeoneWeird> just type console.log(cert.getPrivateKey());
12:16 < SomeoneWeird> try*
12:16 < SomeoneWeird> should work, iirc
12:17 < franck34> cert is something like cert = crypto.createCredential(...) ?
12:19 < franck34> SomeoneWeird: http://pastebin.com/TyiuyJyZ
12:20 < franck34> it return { context: {} } , nothing else :(
12:21 < franck34> and my.getPrivateKey() return an error ( TypeError: Object #<Credentials> has no method 'getPrivateKey' )
12:22 < Zelest> now this looks bad.
12:24 < franck34> SomeoneWeird: mmm let me RTFM, you gave me the good way i think
12:24 < franck34> thx
12:34 < ben_alman> is npm install going SUPER SLOW for anyone else?
12:46 < aandy> hi, have anyone manipulating headers/files in node? i see node as more of a "streaming" tool in file regards, so i'd just go with python on this, but just wanted to check if anyone have good/bad experiences trying this in node? (as in, would i be trying to force node to do something it wasn't built for)
12:50 < matjas> I’m new to working with binary data. Is there an easy way to work with buffers using `Buffer#readUInt16LE()` etc, without having to specify the offset all the time?
12:51 < matjas> i.e. when I use `readUInt16LE()` I want the offset to advance by 2 bytes automatically
12:51 < matjas> is that possible somehow?
12:53 < aandy> :>
12:53 < aandy> well, you could prototype it
12:54 < matjas> you mean write my own method that uses `readUInt16LE` etc internally and increments the offset as needed?
12:54 < aandy> i'd call it something else to avoid confusion, like readNextUInt16LE, but yeah
12:54 < matjas> i was hoping i was missing some built-in thingy
12:54 < matjas> k thanks!
12:54 < aandy> keep a local "offset"
12:54 < aandy> (or slice it depending on how big your buffer is)
12:55 < aandy> might not be a good idea, heh
13:05 < aandy> alright, i'll embark on the node version of header manipulation. think i can make it pretty far with buffers. at least i don't have to use and implement golomb support
13:14 < switz> any support here? I don't have 1 drone anymore?
13:15 < switz> wrong chat sorr
13:15 < switz> y
13:17 < Kakera> is there an RSA module for node that work under Windows?
13:20 < dawra> how to send email ?
13:20 < dawra> emailjs or nodemailer?
13:21 < chandru_in> I have a node.js server which spikes in memory usage from around 400M to 1.5G in 10s of secs. How can I debug this?
13:23 < _kud> I'd like to create a file with nodejs which contains a kind of template
13:23 < aandy> Kakera: not sure with the windows build, but in which regard? i have openssl on windows which has RSA built in (default)
13:23 < aandy> Kakera: crypto.createSign('RSA-SHA256') doesn't work?
13:23 < _kud> i'd like to do something like that https://gist.github.com/db661e1caf6de8b4c9b1
13:24 < _kud> but it seems that having multilines bores nodejs or even javascript
13:24 < _kud> do you have any idea to do something like that?
13:24 < Kakera> aandy, asymmetrical keypair, not sha
13:24 < _kud> i'd like to create a cmd in nodejs which creates new controler/view/template in my backbone project
13:26 < _kud> okay : http://css-tricks.com/snippets/javascript/multiline-string-variables-in-javascript/
13:31 < Kakera> oh well, since cloud9 is acting up again and dota 2 is down, I guess I'll try to get ursa to work on Windows
13:31 < SomeoneWeird> ew cloud9
13:37 < Kakera> I like cloud9
13:39 < bnoordhuis> i, too, like cloud9
13:40 < SomeoneWeird> :)
13:43 < Kakera> if someone can name a free JavaScript IDE that can work with a remote server using SSH then I'm all ears
13:45 < shannonmoeller> Kakera: vim? emacs?
13:45  * shannonmoeller ducks
13:45 < Kakera> lol
13:45 < sgallagh> Kakera: http://www.eclipse.org/webtools/jsdt/
13:46 < gildean> i just use nautilus to mount the server over sftp and work like it's local
13:47 < sgallagh> Yeah, sshfs will do the same job, if you're not using Nautilus
13:48 < SomeoneWeird> yeah, there's LOTS of alternatives
13:50 < Kakera> name one
13:51 < sgallagh> Kakera: I just pointed you at Eclipse above...
13:51 < Kakera> SomeoneWeird said "lots"
13:51 < MI6> joyent/node: Ben Noordhuis master * d1556fb : bench: report stats in benchmark/net-pipe - http://git.io/SUQQOA
13:51 < SomeoneWeird> http://labs.mozilla.com/projects/bespin/
13:52 < Kakera> the Eclipse one looks confusing
13:52 < SomeoneWeird> http://shiftedit.net/
13:52 < SomeoneWeird> er, https://mozillalabs.com/en-US/skywriter/ got renamed from bespin
13:52 < SomeoneWeird> and look it got merged >.>
13:52 < SomeoneWeird> http://ace.ajax.org/#nav=about
13:52 < shannonmoeller> SomeoneWeird: cloud9 is based on Ace (ace.ajax.org) which is the official successor to bespin.
13:53 < SomeoneWeird> yeah.
13:53 < SomeoneWeird> http://www.erbix.com/js/
13:54 < SomeoneWeird> http://coderun.com/
13:54 < SomeoneWeird> anyway, i think i've listed enough
13:54 < SomeoneWeird> http://www.codeita.com/
13:54 < Kakera> have you actually used any of these
13:54 < SomeoneWeird> one more 
13:54 < SomeoneWeird> i've used a couple, yes
13:59 < franck34> SomeoneWeird: i didn't found the way to fetch private key and more with a p12 using crypto ...
13:59 < franck34> SomeoneWeird: http://pastebin.com/TyiuyJyZ 
13:59 < franck34> :(
14:00 < Kakera> shiftedit.net can't connect via SFTP and says "incorrect login" for a non-existent domain
14:00 < Kakera> closing
14:02 < Kakera> erbix.com fails to authenticate using google's openid
14:03 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:03 < Kakera> coderun doesn't seem to support SSH at all
14:03 < Kakera> so yeah there isn't really any viable alternative
14:05 < MI6> joyent/node: Bert Belder master * 7475982 : openssl: enable optimized asm code on x86 and x64 (+6 more commits) - http://git.io/VG1qTw
14:07 < exit2> sup noders
14:07  * SomeoneWeird nods
14:11 < exit2> Does Express having anything for CSRF?
14:12 < SomeoneWeird> not natively
14:12 < Zelest> not?
14:12 < Zelest> http://expressjs.com/api.html#csrf
14:14 < Kakera> will there ever be node.js 1.x.x?
14:14 < drudge> Kakera: sure
14:14 < Kakera> but that would signify a major change
14:15 < SomeoneWeird> oh it does, that's new
14:17 < exit2> Zelest: thanks, I guess I could have found that myself :)
14:18 < Zelest> Hehe, no worries.. I haven't tried it at all though, so use it at your own risk. :-)
14:19 < Nasga> there any way to get redis "client list" cmd return in node ? i can't find the good method with node-redis :/
14:21 < SomeoneWeird> redis.client('list') or something?
14:22 < exit2> Zelest: hmm seems as simple as adding app.use(express.csrf())
14:22 < Nasga> SomeoneWeird: no method client :)
14:24 < dawra> can someone help me here
14:24 < dawra> i am tyring to send email with nodemailer on heroku but its exits with error
14:24 < dawra> [Error: Sendmail exited with 127]
14:25 < bnoordhuis> Kakera: but not until we've had node 0.99.31-rc8
14:25 < Kakera> that's the semver limit?
14:26 < Kakera> is there even a limit
14:26 < bnoordhuis> Kakera: no. it's just ridiculously far in the future
14:26 < SomeoneWeird> Nasga, client.send_command("client", "list", function(res) { });
14:42 < AAA_awright> http://magnode.org/2012/jsonschema-for-updating-content Any feedback would be appreciated
14:42 < Bennit> Hi
14:42 < Bennit> i'm trying out connect, but if I use the directory middleware
14:43 < Bennit> my base url also gets a directory listing
14:43 < Bennit> is there a way to prevent this?
14:43 < Bennit> (GET /)
14:43 < SomeoneWeird> app.get('/', function(req, res) { res.end(); });
14:43 < SomeoneWeird> or something
14:43 < SomeoneWeird> before your app.use() 's
14:44 < superjoe> don't use app.use
14:44 < superjoe> for the directory middleware
14:44 < superjoe> explicitly use it on the endpoints you want it for
14:50 < sgallagh> bnoordhuis: Is there a specific version of c-ares that I need to link against? Specifically, will 1.7.0 work?
14:50 < Bennit> thanks SomeoneWeird 
15:05 < Bennit> thanks superjoe I see why using it on app directly is evil
15:05 < Bennit> (directory middleware)
15:09 < superjoe> :)
15:09 < superjoe> that goes for most other middleware, too
15:09 < superjoe> it can open up unexpected security holes if you're not careful
15:10 < hpj_> net.Server.connections provides the number of current connections, but is there a way to get information on each of the connections?
15:11 < SomeoneWeird> push the sockets to an array?
15:11 < hpj_> really? cause i'd have to keep track of them and remove them from the array myself
15:13 < superjoe> hpj_, it sounds like that's exactly what you want to do
15:14 < WarheadsSE> Hey hey.
15:15 < WarheadsSE> So i've picked up a contract, and one of the receivables would be a eternal job queue/management bit. Thoughts on anything already there for me to use?
15:17 < hpj_> superjoe: since net.Server knows the number of connections it currents has, doesn't it already tracks the sockets? why can't i piggyback on that?
15:18 < superjoe> hpj_, I'm not sure that it does. but if it did that would probably be doing too much for you
15:19 < superjoe> WarheadsSE, what sort of jobs?
15:19 < superjoe> hpj_, it's not so bad to manage sockets
15:19 < WarheadsSE> in this case, pre-made python scripts that needed executed on demand
15:21 < hpj_> any existing lib that does this kind of stuff?
15:26  * JohnMcLear quirks an eyebrow
15:27 < hpj_> nothing?
15:27 < mpfundstein> hey dudes, whats up
15:30 < sosnon> hello. i have some trouble with fs.watch and fs.watchFile https://gist.github.com/b9e0134aca600c801e5a
15:31 < sosnon> the question is: how do i guarantee that the file name (or maybe even a file object, if possible) referes to the right file as soon as a file changes and the callback for it is run?
15:33 < superjoe> sosnon, try chokidar
15:34 < sosnon> yeah, the thing is i'm on a diet and try to cut back on dependencies
15:35 < sosnon> no, seriously, what's the point in having fs.watch and fs.watchFile then?
15:36 < WarheadsSE> I think you are dealing with a scoping issue.
15:37 < sosnon> no, i'm dealing with a no-filename-passed-into-callback issue, as far as i can see
15:38 < sosnon> The basic question is: does currentFile contain the right filename when the callback is run? i don't think so
15:39 < WarheadsSE> Thats the scoping issue I was talking about.
15:40 < WarheadsSE> since currentFile will be changing with each iteration of the loop, and the actual placement of 'var' in this case doesn't actually matter.
15:40 < sosnon> quite.
15:41 < WarheadsSE> Though I think I have run into the filename-is-not-full-path problem before.
15:41 < sosnon> the main problem i see with both, fs.watch and fs.watchFile, is the fact that neithe hands over a reference to the actual file (or at least the file name) to the callback
15:41 < WarheadsSE> ah, you your then seeing (filename == undefined) ?
15:42 < sosnon> the filename-is-not-full-path problem is of minor importance here, i could build a list of objects with unique IDs, but still i could not refer to the individual files in the callback
15:42 < WarheadsSE> Okay. are you saying that the filename argument is *empty*
15:43 < sosnon> no, quite the opposite, i can use currentFile inside the callback of either and (in the case of fs.watch) even get the full path
15:44 < WarheadsSE> I am obviously misunderstanding the issue you are seeing
15:44  * WarheadsSE re-reads above
15:44 < sosnon> but i'm sure this is just because of JS's nature that currentFile is visible in the callback's scope and not because it is referring to the right object/file
15:45 < Industrial> Say I have an EventEmitter(2) and I'm emitting some event. I've set that event to cause the call of some function. I want to test that this function has been called (and with what arguments). Is this possible?
15:46 < WarheadsSE> so.. sosnon: currectFile.indexOf(filename) = -1 for you, essentially?
15:47 < WarheadsSE> s/rect/rent/
15:47 < sosnon> mtsr: https://gist.github.com/b82025717a2510fba57b
15:48 < sosnon> mtsr: not you, very sorry
15:48 < sosnon> WarheadsSE: https://gist.github.com/b82025717a2510fba57b
15:48 < WarheadsSE> Yup, just read that
15:49 < WarheadsSE> So, what you are saying is: assume -f /path/to/a ; mv /path/to/a /path/to/b ; {trigger}
15:49 < sosnon> (i'm excluding fs.watchFile from the discussion since the doc deprecates it even more than fs.watch)
15:49 < sosnon> WarheadsSE: no, i'm excluding file movement; node itself isn't able to do that
15:50 < WarheadsSE> so then you are only looking for the change event, not rename
15:50 < sosnon> WarheadsSE: my main question is: can i freely use currentFile inside the callback and have the guarantee that it will always refer to the right file?
15:51 < sosnon> WarheadsSE: yes, i think tracking a file across a system is beyond fs.watch and fs.watchFile's scope
15:51 < WarheadsSE> assuming said file was not renamed. I would honestly, verify that currentFile.indexdOf(filename) != -1
15:51 < WarheadsSE> That will tell you immediately if you have generated a problem with scoping (which looks possible)
15:52 < mtsr> sosnon: np
15:53 < WarheadsSE> 1 sec sosnon .. checking myself.
15:54 < sosnon> WarheadsSE: true all the way long
15:54 < sosnon> WarheadsSE: 'true' as in 'it evals true'
15:55 < FunnyLookinHat> Has anyone here done networked multiplayer game programming with canvas and socket.io?  I've got a solid prototype of a multiplayer server + client engine working, but I'm having trouble debugging lag issues ( determining if they're client side or server side, etc. ) - looking for suggestions or good examples.  :)
15:56 < Cronoh> why are you having trouble determining if the lag is client or server side? seems easy enough to test for
15:56 < sosnon> FunnyLookinHat: maybe try to sift through the github game competition examples
15:57 < warz> Cronoh, why does the sun set
15:57 < Cronoh> because the earth is orbiting it and spinning?
15:57 < Cronoh> :)
16:00 < FunnyLookinHat> sosnon, there was a competition?  *googles*
16:00 < WarheadsSE> sosnon: 
16:00 < WarheadsSE> didn't work here.
16:01 < Kakera> does node.js expose anything openssl-related?
16:01 < Kakera> ursa relies on a globally-installed library, which doesn't work on Windows
16:02 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:02 < WarheadsSE> http://pastie.org/5557735
16:02 < arete74>  /leave
16:02 < WarheadsSE> Kakera: http://nodejs.org/api/tls.html
16:03 < Kakera> WarheadsSE, no, I mean on C++ level
16:03 < WarheadsSE> Kakera: ah
16:03 < WarheadsSE> you didn't specify :P
16:03 < WarheadsSE> sosnon: http://pastie.org/5557735 
16:03 < Kakera> and I'm interested in RSA, not TLS
16:03 < WarheadsSE> K
16:04 < WarheadsSE> via the C/C++ level
16:04 < WarheadsSE> because the crypto library exposes that bits of that
16:04 < sosnon> WarheadsSE: sec
16:06 < sosnon> WarheadsSE: you're right; i was relying on currentFile.indexOf(filename) != -1 evalling to true would be reliable
16:06 < anatoliy1602> hey
16:07 < sosnon> WarheadsSE: ok, that sets it fs.watch and fs.watchFile are pretty much useless as soon as you watch more than one file (and event with the one file you can't get the path or the file object or ....)
16:08 < anatoliy1602> who wants to be 1000th who starred CompoundJS, welcome: https://github.com/1602/compound (it's 999 now)
16:08 < chrisjaure> sosnon: just fix the scope issue that WarheadsSE mentioned
16:08 < sosnon> it's actually ridiculous, all they do is see if/when a file has change/what kind of change has happened, but you cannot use them to bind callbacks to specific files
16:08 < WarheadsSE> SCOPE.
16:08 < WarheadsSE> nothing ridiculous.
16:08 < sosnon> chrisjaure: feel free to show me; i don't get it
16:09 < chrisjaure> i'd just use .forEach instead of a for loop
16:09 < sosnon> oh darn, that's the js way
16:10 < jrajav> It's not the js way; just *a* way
16:10 < jrajav> for loops are perfectly valid
16:11 < sosnon> yup, forEach solves a lot of problems
16:11 < WarheadsSE> a lot of scope assumption problems.
16:11 < sosnon> jrajav: i don't see how i could do it with a for loop
16:11 < jrajav> I joined recently and don't know the problem at hand
16:12 < WarheadsSE> jrajav: https://gist.github.com/b82025717a2510fba57b and http://pastie.org/5557735#
16:12 < sosnon> WarheadsSE: the latter one isn't any different from your first one ;)
16:13 < WarheadsSE> I am aware
16:13 < WarheadsSE> one shows the *fault
16:13 < sosnon> let's just repost pastes over and over again ;)
16:14 < WarheadsSE> sosnon: I was giving him the background.
16:14 < sosnon> yeah, i get the whole problem now
16:14 < jrajav> sosnon: I pretty much asked for it...
16:14 < sosnon> sorry, didn't see the jrajav: prefix
16:14 < sosnon> ok, so fs.watch and fs.watchFile are usable
16:15 < jrajav> I think I'm missing something here
16:15 < sosnon> still i don't see much advantage of fs.currentFile's second parameter (filename)
16:15 < jrajav> Why can't you just move var currentFile inside the fs.watch callback?
16:15 < sosnon> jrajav: that *is* exaclty the scoping issue
16:16 < sosnon> jrajav: i can do that, just like i can use a forEach
16:16 < jrajav> I'm just responding to <sosnon>	 jrajav: i don't see how i could do it with a for loop
16:16 < sosnon> but using a forEach prevents you from accidentially moving the currentFile assignment to the wrogn scope in the future
16:16 < sosnon> (so me)
16:16 < SomeoneWeird> you can't mix async and sync
16:16 < sosnon> WarheadsSE: still i wonder why the filename param exists
16:16 < jrajav> SomeoneWeird: Says who?
16:17 < rendar_> SomeoneWeird: why not?
16:17 < jrajav> SomeoneWeird: He's not doing anything synchronously with the result.
16:17 < WarheadsSE> because it give your the filename
16:17 < WarheadsSE> not the path
16:17 < SomeoneWeird> right, then thats alright
16:17 < sosnon> SomeoneWeird: WarheadsSE path.basename does the same
16:17 < WarheadsSE> I am aware.
16:17 < sosnon> so it's just some sort of non-syntactic sugar
16:17 < WarheadsSE> I still don't see the fault.
16:17 < jrajav> The filename could change
16:17 < WarheadsSE> in your mind.
16:17 < sosnon> WarheadsSE: which fault?
16:18 < sosnon> WarheadsSE: i was confusing scope, that's all
16:18 < sosnon> now i can watch all my files
16:18 < sosnon> jrajav: good point
16:18 < jrajav> sosnon: This is a good argument for putting all var declarations at the top of the function
16:18 < WarheadsSE> I am not seeing the fault in providing only filename is what I am saying.
16:18 < jrajav> sosnon: A lot of people argue that you should declare variables close to where they're actually used, and I can see the sense in that, but avoiding bugs and confusion like this is to me more valuable
16:18 < WarheadsSE> jrajav: for people that don't keep scope mentally, yes
16:19 < jrajav> WarheadsSE: "Keeping things in your head" has been used to justify bad practices for a very long time
16:19 < sosnon> WarheadsSE: it leaves out information (the path), so ouy will have to try to keep track yourself - which is problematic as soon as the filename/path actually has changes (just like jrajav has indicated)
16:19 < WarheadsSE> The problems becomes people that miss the change in scope vs reality in async
16:19 < jrajav> All the way back to Pascal/COBOL days
16:20 < WarheadsSE> lol jrajav i know the arguments, but declaring everything at the head of the scope doesn't help that much, if you don't understand the scope in the first place.
16:20 < sosnon> ok, thank you very much, sirs
16:20 < jrajav> WarheadsSE: True
16:21 < sosnon> still, pathToFile would be more useful thatn filename in my opinion
16:21 < jrajav> sosnon: Wait, why can't you just save the path?
16:21 < WarheadsSE> well, raise an issue on github :)
16:21 < WarheadsSE> it is currently considered unstable, after all
16:22 < WarheadsSE> jrajav: an e.g.: /path/to/my/a  /path/to/your/a
16:22 < WarheadsSE> both return (change,a)
16:22 < sosnon> jrajav: as *you* just said: 1. you save the path  2. the path changes  3. you only get a filename back
16:22 < WarheadsSE> eh
16:22 < WarheadsSE> a path change is the same as a rename.
16:23 < sosnon> but even a full path wouldn't reaaaally help you (consider multiple file systems)
16:23 < sosnon> WarheadsSE: oh, right, i keep confusing it
16:24 < WarheadsSE> and.. i don't see how a full path is affected by multiple filesystems ..
16:24 < sosnon> i take it back, you can actually combine all the required info yourself (using the event param)
16:24 < jrajav> I don't think anything is missing from the watch api
16:24 < jrajav> Considering I just used it to write a fairly complete tree-watching app myself :)
16:24 < sosnon> WarheadsSE: multiple file systems can lead to quantified pathes
16:24 < sosnon> one path isn't uique anymore etc.
16:25 < sosnon> jrajav: 'tree-watching app'?
16:25 < sosnon> jsilver: fs tree, i hope ;)
16:25 < sosnon> or bird watching in the end?
16:25 < sosnon> ;)
16:25 < WarheadsSE> only one path is valid however, if say -d /my/home/a ; mount /dev/sdb /my/home
16:26 < sosnon> sure, if you mount it; if you just gather pathes from multiple fs's you have to keep track yourself
16:26 < sosnon> anyway, thank you guys once more, i have to keep going
16:26 < WarheadsSE> <.<
16:26 < WarheadsSE> wth are you talking about
16:27 < WarheadsSE> if you keep multiple relative paths from different source points, sure.
16:27 < lolcat_> hai can someone tell me how zombie.js works? is it webkit?
16:29 < ViciousPotato> are all node.js's async operations happen in the same thread?
16:30 < bnoordhuis> ViciousPotato: no
16:30 < ViciousPotato> bnoordhuis: any rules about that?
16:30 < WarheadsSE> I had two lines typed out, but i'll let bnoordhuis answer.
16:31 < bnoordhuis> ViciousPotato: there are but you need to make your question more specific
16:31 < bnoordhuis> ViciousPotato: are you refering to network or file i/o?
16:31 < ViciousPotato> bnoordhuis: mostly network
16:32 < ViciousPotato> bnoordhuis: I've a large program covering many network operations
16:32 < bnoordhuis> ViciousPotato: on unices, those take place in the main thread. on windows it's more complicated
16:33 < ViciousPotato> bnoordhuis: I've heard of I/O overlapping or something on Windows, is it relevant?
16:34 < bnoordhuis> ViciousPotato: yes. but it's not something you should worry about
16:34 < owen1> "Please note that Apple assumes that you pool and keep sockets open as long as you have notifications to send. So, don’t make naive implementation that makes new socket for each HTTP request. Some simple pooling and reuse is a must for real implementation."
16:34 < ViciousPotato> bnoordhuis: haha I'm really curious what will happen if I do too much work in some async callback
16:34 < owen1> can someone explain this sentence please?
16:35 < bnoordhuis> ViciousPotato: you'll block the event loop
16:35 < bnoordhuis> so don't do that :)
16:35 < ViciousPotato> bnoordhuis: oh so async model has its limits
16:36 < WarheadsSE> cant execute two instructions at once, after all
16:36 < bnoordhuis> ViciousPotato: i guess that's true for everything
16:36 < ViciousPotato> bnoordhuis: like at top it will only handle x operations in a fixed interval of time
16:37 < ViciousPotato> WarheadsSE: two instructions? how?
16:37 < WarheadsSE> " cant "
16:37 < ViciousPotato> WarheadsSE: haha sorry
16:38 < WarheadsSE> if you want low-latency reponses, you need to keep your per-event processing low
16:39 < ViciousPotato> WarheadsSE: totally agree, but will there be some cases multi-threading will win? like handling more operations..
16:39 < WarheadsSE> or at the least, provide call outs to other functions that will come back to you in an async fashion
16:39 < WarheadsSE> You have to switch your brain a bit to do clean async
16:40 < ViciousPotato> WarheadsSE: yeah I'm trying to understand you
16:40 < ViciousPotato> WarheadsSE: "provide call outs to other functions that will come back to you in an async fashion" any example?
16:40 < WarheadsSE> hmm
16:41 < WarheadsSE> ones that I would make pretty? eh.. 
16:41 < ViciousPotato> WarheadsSE:  haha, thank you, just new to async
16:41 < WarheadsSE> Understodd
16:41 < WarheadsSE> I had dealt with it a bit before I started using node, to that helped.
16:42 < WarheadsSE> remember one thing though: named functions reduces "callback hell"
16:43 < WarheadsSE> biggest complaint I see from people saying that, is that they can't trace things down. Well, you anonymized 90% of your code.. so....
16:43 < ViciousPotato> WarheadsSE: yeah I can see that
16:44 < ViciousPotato> WarheadsSE: good advice after checking my code
16:44 < ViciousPotato> WarheadsSE:  does node has any debugging tool? like step in/out/over
16:45 < ViciousPotato> WarheadsSE: I can only use log now, it's quite painful
16:47 < WarheadsSE> There are various debugging tools available.
16:47 < WarheadsSE> some better than others I suppose.
16:47 < WarheadsSE> http://nodejs.org/api/debugger.html
16:48 < Warpten> Playing with Zombie.JS, trying to have my script connect via a form. I have it correctly fill the form however i'm stuck at finding how to know the location changed to the form target
16:48 < Warpten> any ideas?
16:48 < WarheadsSE> I personally use Komodo ViciousPotato 
16:49 < ViciousPotato> WarheadsSE: Komodo! the IDE!
16:49 < ViciousPotato> WarheadsSE: I loved it when I first learnt Python
16:49 < ViciousPotato> WarheadsSE: thank you, I don't believe I missed the debugging section in node's doc
16:50 < WarheadsSE> I use Komodo for just about every scripting language I use.
16:52 < ViciousPotato> I remember there was a time when Komodo was based on Mozilla code
16:52 < eldios> Sublime ftw
16:52 < ViciousPotato> it becomes slow and ugly
16:52 < mpfundstein> eldios: true
16:52 < ViciousPotato> that's why I dropped it
16:52 < ViciousPotato> but need to try it again I suppose 
16:53 < eldios> every now and then I try to change editor/IDE .. but I usually keep coming back to sublime
16:53 < WarheadsSE> Maybe so, but meh.
16:53 < eldios> at least if you're not looking for anything specific
16:53 < WarheadsSE> It works well for me, across all my platforms.
16:53 < eldios> if you need an all around editor, Sublime looks like the best choice atm imo
16:54 < mscdex> node.js rules!
16:54 < olleman> you said it man :)
16:54 < ViciousPotato> sublime doesn't have ANTLR grammar file
16:54 < WarheadsSE> mm.. if only they made multi-architecture binaries..
16:55 < ViciousPotato> pitty
16:55 < WarheadsSE> multi-platofmr they have.. but I haven't seen an ARM binary yet.
16:55 < ViciousPotato> and no debugging support though I should not ask too much from an editor
16:56 < mpfundstein> besides sublime i'd heavily suggest vim
16:56 < mpfundstein> easpecially when working on servers with ssh access. it is a joy if you get used to it
16:56 < WarheadsSE> true
16:56 < mscdex> ssh all the things!
16:56 < WarheadsSE> I just sftp/sshfs to my servers personally
16:57 < mpfundstein> i prefer ssh
16:57 < mpfundstein> i am directly on it
16:57 < mpfundstein> that was when i had to learn vim :D
16:57 < WarheadsSE> Oh, yeah, i understand the argument, and I still do a lot of on-server ssh console work, but for code editing
16:57 < WarheadsSE> its a 50/50.. depends 
16:58 < mpfundstein> WarheadsSE: yopp, thats right. i prefer sublime as well. i am just faster with it
16:59 < mpfundstein> ok guys im off
16:59 < mscdex> nano all the way!
16:59 < mpfundstein> have fun with whatever ide you use ;-)
16:59 < mpfundstein> haha nano. yeah
17:00 < mpfundstein> my father tried to convince of nano since ages
17:00 < mscdex> nano with syntax highlighting is the best :-D
17:00 < mpfundstein> lol
17:00 < mpfundstein> hey vim has even auto completition
17:00 < mpfundstein> pretty neat actually
17:00 < rowanu> vim has everything
17:00 < mpfundstein> haha yeah
17:00 < mscdex> i was never really a fan of auto completion
17:00 < mpfundstein> me neither
17:00 < mpfundstein> in ObjC you need it
17:00 < mpfundstein> otherwise you write yourself dead
17:01 < mpfundstein> i think ill install emacs haha
17:01 < WarheadsSE> emacs on a haiku vm, on windows, on bootcamp.. pain ;P
17:02  * WarheadsSE owns no Apple products.
17:02 < mpfundstein> i was talking to a guy last week here in appsterdam who codes in Smalltalk
17:02 < mscdex> nice save
17:02 < mpfundstein> he showed me some stuff.. man Smalltalk has an impressive IDE
17:02 < WarheadsSE> it needs it
17:02 < mpfundstein> you can change your code without restarting, and you can debug backwards
17:06 < WarheadsSE> I don't see that as part of the IDE set and more as a part of Smalltalk itself.
17:06 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:31 < CaddyShack> [:) 
17:32 < Leeol> isWhat is the common pattern in the Node community for handling long running timers? Eg, is it best to use setTimeout for once a day/week? Or is it better to use a cron job and a separate process? etc
17:33 < Leeol> -is.. heh
17:33 < Pilate> cron is probably far more reliable
17:33 < superjoe> Leeol, settimeout will die with the application's memory
17:33 <@mbalho> Leeol: either way is good. node is good at idling and handling long term connections
17:34 < Shinster> I'd say let cron do its job
17:34 < Leeol> Fair
17:34 < superjoe> mbalho is correct in that it won't hurt your app's performance
17:34 < superjoe> but the risk of a timeout not being activated due to errors or process restarts is high
17:35 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:37 < Leeol> Alright, thanks for the input. Now to figure out how distributed platforms handle crons :s
17:39 <@mbalho> Leeol: you can roll your own cron with node and a text file with some json objects in it
17:39 <@mbalho> Leeol: and a process monitor
17:39 < dawra> how can i strip off all javascript code from an html code?
17:39 < kenperkins> callback soup sucks sometimes
17:40 < kenperkins> dawra: script tags or attributes?
17:40 < tnorris> anyone know why node would return crap characters in error messages like the following: "TypeError: Object pH� has no method 'stuff'"
17:40 < dawra> basically all javascript code, kenperkins 
17:40 < dawra> i am executing html code in an iframe like jsfiddle and want to get rid of all JS code
17:41 < kenperkins> dawra: a colleague wrote this package for use here at clipboard
17:41 < kenperkins> https://npmjs.org/package/html-parser
17:41 < kenperkins> dawra: check out the sanitization section
17:41 < Leeol> mbalho: Is that what is usually done for distributed platforms? Use one of your process slots for a cron system, dedicated to hooking into your apps?
17:41 <@mbalho> Leeol: i dont use cron i just have a node process always running that reads what it should be doing from somethign persistent like a file or database
17:45 < Leeol> mbalho: Using what, timers? That is what i was originally thinking to do, anytime the app starts simply check the time, and calculate the timer and set it off. For any dynamic destinations, you could always log the end point in case of failure, i was just unsure how likely Node/setTimeout will silently fail the timer. Vanish, with no way of knowing the timer needs to be restarted
17:45 < drey_> yeah well my manager has just decided that I shall perform writes to non replicated tables on local publisher heads then have an nightly cron moving said data into the master db rather than use a message queue
17:46 < kenperkins> cron!
17:46 < WarheadsSE> ^cron
17:46 < kenperkins> running joke around here is the "we should store it in a flat file, we could awk the shit outta that"
17:48 <@mbalho> Leeol: settimeout will work as long as your process doesnt crash, so just make it set all the timeouts when the process starts
17:49 < Leeol> mbalho: Well the core process will have restarts in place. If it's dead, there is a lot more wrong than simple a timer heh
17:49 < Leeol> kenperkins, WarheadsSE: How do you handle crons over distributed systems? Do you not? Do you simply have an outside single VM have a cron, and hook into the distributed platform? or.. ?
17:50 < kenperkins> Leeol: I don't, I use message queues
17:50 < Leeol> (I'm not raising "counterpoints", simply inquiring)
17:51 < tnorris> isaacs: When -Infinity is passed as the offset to a Buffer write method, it silently fails. Is this desired behavior?
17:56 <@isaacs> tnorris: hm.  it should probably throw.
17:56 < WarheadsSE> interesting bug.
17:56 <@isaacs> tnorris: i can't think of any situation in which that *isn't* a mistake...
17:56 < tnorris> isaacs: ok. i'm creating a patch right now that I'll submit in a bit.
17:57 <@isaacs> tnorris: thanks :)
17:57 <@isaacs> tnorris: patch on v0.8, plz
17:59 < tnorris> isaacs: ok, will do.
18:00 < revnoah> I'm having a confusing issue with node-validator. I am trying to clean data queried through mongo. When I create a string with the bad code (ie script and form tags), the xss() function replaces it correctly. But when I pass the data in from the query, it doesn't. The typeof the text is string and when viewed in the console appears to be identical.
18:01 < WarheadsSE> Leeol: I'd have to agree a message queue seems appropriate..
18:01 < Leeol> WarheadsSE: Thanks for the input :)
18:04 < kenperkins> dawra: did that work for you?
18:08 < WarheadsSE> Leeol: I would some method of automation/mangement lib would be useful. puppet/salt/etc
18:10 < ljharb> Nasga: why would i prefer flash or silverlight when i'm advocating using HTML over JS?
18:11 < Nasga> ljharb: why looking at meteorjs to do only html ?
18:11 < ljharb> Nasga: i was advocating not using meteorjs at all.
18:13 < Nasga> ljharb: then what is your solution to build RT app ?
18:13 < ljharb> i'm talking about websites. if you're bothering to build an RT app, you don't care about things like search engine indexing, and proper web standards.
18:15 < Industrial> If I end a stream, can I revive it again? i.e. is it needed to recreate the whole flow of stream for each request or can I run it multiple times with different data?
18:16  * WarheadsSE tilts head
18:17 <@mbalho> Industrial: i was just trying to do that yesterday
18:17 < Nasga> ljharb: it's possible to have both :)
18:17 < scar> is node.js a server-wide thing? what if i have 50 domains on 1 server... do all domains tap into the same node.js? I just don't want the port opened for every domain on the site, and dont want to have to reference the IP or another domain to make a connection
18:17 <@mbalho> Industrial: if you just want the data and not the headers its pretty easy
18:17 < ljharb> Nasga: not in a meteor app, without doing awful awful things.
18:17 <@mbalho> Industrial: headers/metadata
18:18 < Industrial> mbalho: this will probably end in my computer dieing from fire incident but; https://github.com/Industrial/stream-flow/blob/master/app.coffee
18:18 < Industrial> I'm reimplementing it with EventEmitter2 now ..
18:28 < Kakera> does anyone know how to create a list of checkboxes in jade?
18:29 < Kakera> input(type='checkbox', name='item', value=item._id) #{item.name} doesn't output any text
18:29 < wilmoore> scar: you can use Node.js like an Apache web server if you _want_, but that's probably not the best use-case.
18:30 < Kakera> oh https://github.com/visionmedia/jade/issues/445
18:30 < revnoah> Kakera, that would typically get you something. are you using an each statement?
18:31 < wilmoore> scar: I mean, are all 50 domains taking advantage of Node.js specific features? Because if you just want better performance for serving static stuff, there are other options. 
18:32 -!- mode/#Node.js [+o bnoordhuis] by ChanServ
18:33 < scar> wilmoore, so should i just create a Node.js per domain, as i need?
18:34 < scar> wilmoore, and also, when i bind the Node.js to a port, which hostname gets it? which ip? all?
18:35 < dook> localhost works for me
18:35 < dook> http://localhost:yourport
18:35 < dook> I think localhost stands-in for your own IP if I'm not mistaken.
18:35 < wilmoore> scar: you can bind an IP and a port; if you don't specify an interface, all interfaces get it.
18:35 < gavri> does using http://nodetime.com/ mean that information about my application will be sent to a remote server? it's not obvious from the main page on the website
18:36 < scar> wilmoore, can i specify a hostname over an IP?
18:36 < scar> well i suppose that doesnt matter now does it lolol
18:36 < scar> nvm
18:36 < scar> though id like it to be restrictive to a domain name if possible
18:36 < styol> gavri: I believe so as it outputs a console.log entry with a nodetime.com/sometokenurl to go to
18:37 < wilmoore> scar: are you using express?
18:37 < scar> wilmoore, okay so should i 1) create multiple Node.js on same server, 1 for domain, or create 1 Node.js, and bind only to the domains i want?
18:37 < gavri> styol: that could just be a local URL though, right?
18:37 < gavri> the problem is that even if I try this out and it is a local URL
18:37 < scar> wilmoore, no. i watched the long video on the node.js highlight website. new to using or even setting up Node.js, but before i dive in, i want to know if what i want is practical.
18:37 < gavri> I don't know how I could make sure it isn't making network calls
18:38 < styol> gavri: regardless of where you run it it gives you output via a url that shows you data from their server
18:38 < wilmoore> scar: gotcha...
18:38 < gavri> styol: isn't it possible that it just runs a web application on my local machine that is accessible through that URL?
18:38 < scar> wilmoore, it seems running more than 1 Node.js is redundant. the "listening server" is created by launching a file.js that thru `node file.js` correct? then i could just write a script to create a listener for the domain as i need fit?
18:38 < gavri> oh wait
18:38 < styol> gavri: not that I'm aware of.. it reports data back home
18:39 < gavri> obviously not
18:39 < gavri> the domain is nodetime.com
18:39 < wilmoore> scar: it depends on what you are trying to do.
18:39 < styol> gavri: yeah
18:39 < gavri> styol: thanks
18:39 < scar> wilmoore, also, this would be placed on a cPanel server. no choice of mine, but i must use it. so not sure how that will affect either. it shouoldnt acced Node.js globally
18:39 < wilmoore> scar: if you really have 50 different applications, you'll want to run 50 nodes (or more).
18:39 < scar> wilmoore, so compile the Node.js multiple times?
18:39 < styol> gavri: if you're interested in it being local, and are willing to use a less developed solution, check out https://github.com/baryshev/look
18:40 < wilmoore> scar: you can just run multiple instances...only need to compile once.
18:40 < gavri> styol: thanks
18:40 < wilmoore> scar: in fact, you don't need to compile...there are binaries for pretty much every reasonable platform.
18:40 < styol> gavri: no problem
18:40 < wilmoore> scar: put the node binary in a place in $PATH, good to go.
18:41 < wilmoore> scar: I put mine in $HOME/local/node/versions/n.n.n/bin -- but that's just because I'm anal like that :)
18:41 < scar> wilmoore, so i "install" node once, then i jusst run a single node for each domain?
18:41 < wilmoore> scar: that is correct.
18:41 < scar> BY THE WAY, "running a node" -- is that doing 'node my-file.js' ?
18:42 < wilmoore> scar: you got it :)
18:52 < scar> wilmoore, see i was asking if i had to "install" node for each domain haha. so thats NEVER the case. just one per server no matter what
18:53 < wilmoore> scar: haha...cool. Glad we got that cleared up :)
18:53 < wilmoore> scar: the only time you need multiple nodes is if you need multiple versions. that can be a legit need especially developing for multiple projects at once.
18:54 < wilmoore> scar: for that, use a version switcher
18:56 < jaha> hey all, got a simple bug that is eluding me (need more sleep), https://gist.github.com/4347528
18:56 < jaha> the error pages arent serving static files when thrown from "sub directories"
18:56 < jaha> i know im overlooking something stupid
19:04 < Netpraw> Is there any sexier accessor to the list of nodes returned by Zombie.JS's xpath function ? Currently using value[0]._childNodes[0]; which is somewhat dirty ...
19:05 < Netpraw> And i cant seem to find anything from http://zombie.labnotes.org/API
19:12 < ljharb> ew, xpath
19:13 < Warpten> heh, i could use querySelector, but there's stuff i can't seem to get working with Sizzle.js
19:17 < ljharb> like what?
19:18 < ArxPoetica> anyone remember the project-management system (it's simple, sort of like pivotal tracker) that was built using node.js?
19:19 < ArxPoetica> trying to remember the website
19:19 < ArxPoetica> It sets things up in columns
19:19 <@Nexxy> someone from kansas seems to dislike us
19:22 < Warpten> ljharb: last time i tried :nth-of-type(x) didnt work
19:23 < s5fs> Nexxy: not being from kansas, i can't imagine why
19:25 <@Nexxy> s5fs, they were just flooding early morning
19:25 <@Nexxy> with obscene nick names
19:25 <@Nexxy> and all of the IPs are from the kansas city area
19:26 < ljharb> Warpten: hm, not sure about that one. but can't you just grab a nodelist, and slice?
19:27 < s5fs> Nexxy: no surprise, lots of kids are on winter break from school. litte r-tards should go play outside and get arrested.
19:28 < thealphanerd> s5fs: people flooding the chan?
19:28 <@Nexxy> haha yeah
19:28 <@Nexxy> thealphanerd, they were early this morning
19:28 < thealphanerd> must be pretty cool kids if they know what node is
19:28 < thealphanerd> or was it some sort of 4chan raid
19:30 < s5fs> thealphanerd: doesn't take much effort to scan HN
19:30 < thealphanerd>  true
19:30 < thealphanerd> but you have to know about HN
19:30 < s5fs> haha, these days i'm not sure if that's a benefit or a detractor
19:31 <@Nexxy> my guess is that it's someone that's been banned for being inappropriate/evil
19:31 < jcrew> ArxPoetica: yea lket me look in bookmarks'
19:32 < thealphanerd> sigh… what is the internet coming to
19:32 <@Nexxy> well I mean we have to keep in mind
19:32 <@Nexxy> it's the end of the world after all
19:32 <@Nexxy> people are going to be acting weird
19:32 < thealphanerd> meh
19:32 < thealphanerd> I booked an appointment at the DMV for tomorrow
19:33 < thealphanerd> end of the world shmend of the world
19:33 < thealphanerd> mayans didn't have a gregorian calandar
19:33 <@Nexxy> shhhh
19:33 < othiym23> thealphanerd: I think that's the whole point ;)
19:33 <@Nexxy> just let it happen
19:33 < othiym23> end of the katun!
19:34 < othiym23> they also didn't have a linear conception of time tho
19:34 < thealphanerd> they also didn't have THE CLOUD
19:34 < othiym23> you don't know that
19:34 < ArxPoetica> thx jcrew
19:34 < ArxPoetica> any luck?
19:34 < jcrew> they didnt have webscale 2.0
19:34 < jcrew> ArxPoetica: still looking
19:34 < othiym23> *we* don't have webscale 2.0
19:34 < othiym23> except for MangoDB
19:35 < ArxPoetica> thx
19:35 < thealphanerd> I thought the mayans only used haskell
19:36 < othiym23> they were primitive
19:36 < jcrew> they invented hive and pig
19:36 < othiym23> so they only used the pure simply-typed lambda calculus with Church numbers
19:36 < othiym23> large stelae inscribed with heraldry expressed in the SK(I) combinator calculus
19:37 < thealphanerd> exactly
19:38 < othiym23> fun exercise: try writing the Y combinator in Haskell or Scala
19:38 < jcrew> ArxPoetica: trello.com 
19:38 < thealphanerd> othiym23: one day
19:38 < thealphanerd> I need to read some articles on lambda calculus first
19:39 < ArxPoetica> that's it!!
19:39 < ArxPoetica> thx!
19:39 < othiym23> thealphanerd: I think the best approach is to find a copy of The Little Schemer
19:40 < othiym23> and then reread the last two chapters over 9,000 times
19:40 < othiym23> I guarantee it will make you a better, weirder JavaScript programmer
19:40 < thealphanerd> I have the little schemer
19:40 < jcrew> ArxPoetica: had to get on my yammer account to find the link
19:40 < thealphanerd> my mentor this past summer is a big schemer / lambda / anony function guy
19:41 < thealphanerd> so I think my code has a bit of it
19:41 < thealphanerd> btu I totes should have brought the little schemer with me on vacation
19:41 < thealphanerd> sigh
19:41 < Industrial> all I got was Java dudes :-\
19:41 <@Nexxy> all I got's green jello
19:42 < Industrial> black and jello black and jello .. oh green.
19:42 < jcrew> lol
19:42 < jcrew> that took two reads
19:43 < thealphanerd> ok… back to reading comics
19:43 <@Nexxy> everything I do, I do it gelatinous
19:43 < thealphanerd> see ya guys and gals
19:43 < thealphanerd> :D
19:43 < thealphanerd> btw… rising stars is so very good
19:43 <@Nexxy> bai bai
19:43 < thealphanerd> off topic
19:43 < thealphanerd> but wowzers
19:43 < thealphanerd> like my third or fourth time reading the series
19:43  * Industrial picks up the little schemer
19:45 < Industrial> I've heard about quickcheck and I've seen 5 or so implementations in javascript but I'm not sure how to test correctly with this.. anyone have experience?
19:46 < mAritz> I also asked this V8 question in #V8, but there's very few people there, so I have little hope.
19:46 < mAritz> V8 question about optimizations: I've read that to prevent changing the hidden class, all members should be initialized in the constructor. Does that still work if the constructor calls methods that do the initialization?
19:46 <@bnoordhuis> mAritz: yes
19:46 < mAritz> bnoordhuis: thanks :)
19:46 <@bnoordhuis> np
19:46 < KeOps> Y'a un français qui peut m'aider sur mon projet de semestre, ce soir svp ? 
19:47 -!- mode/#Node.js [-o bnoordhuis] by bnoordhuis
19:48 < othiym23> Industrial: all of my QuickCheck experience is in Haskell
19:48 < othiym23> it works awesome if you have lots of very tightly scoped, purely functional functions / modules
19:48 < othiym23> abandon all hope ye who write lots of stateful code ;)
19:49 < lucky> any sexy girl wanna enjoy come on pm me
19:50 < bnoordhuis> lucky: there are no girls on irc, only fbi agents
19:51 < janmower> irc should be called dudes in basements
19:52 < othiym23> that would be perpetuating the problem
19:52 < othiym23> there are girls on IRC!
19:52 < bnoordhuis> aw, he left. i was going to put in ponytails for him
19:52 < othiym23> why, there are some in this very channel
19:53 < othiym23> but IRC seems like a spectacularly inefficient means for hitting on people
19:53 < othiym23> at least anymore
19:53 < bnoordhuis> i hear good things about chatroulette
19:53 < tjfontaine> othiym23: urnotdoinitright
19:56 < othiym23> because of the end of the world, WebStorm is on sale for 75% off
19:57 < othiym23> have any of you used it and have anything nice to say about it?
19:57 < drudge> nice integrated debugger, nice module completion
19:57 < drudge> if only it wasn't so.. java-like
19:58 < othiym23> it ain't Java-*like*
19:58 < superjoe> drudge, you talking about eclipse?
19:58 < othiym23> superjoe: no, WebStorm
19:58 < KeOps> Y'a un français qui peut m'aider sur mon projet de semestre, ce soir svp ? 
19:58 < othiym23> it's on sale for $12 for a personal license thanks to the impending apocalypse
19:58 < bnoordhuis> KeOps: i believe there's a french node.js channel, #node.js-fr?
19:58 < drudge> i used it for a while but ultimately went back to chocolat
19:59 < bnoordhuis> hm, maybe not
19:59 < othiym23> yeah, I think I'm just going to stick with my ol' pal vim
20:09 < KeOps> bnoordhuis : lol i didn't find any french node channel :(
20:09 < bnoordhuis> KeOps: yeah, it seems to be gone
20:09 < KeOps> even in english, if someone can help me :/ I'm gonna die tomorow lol
20:10 < KeOps> Like all of us i know ^^, but specialy me. Cause i have to give back a semester project, and i still have some trouble with my project
20:11 < bnoordhuis> KeOps: what trouble?
20:11 < owen1> i try to push an apple notification with apn package and get: CERT_UNTRUSTED anyone know what certificate is it complaining about? is it the Apple CA certificate or the Application certificate?
20:11 < bnoordhuis> KeOps: btw, golden rule of irc: just ask your question
20:13 < augustl> isaacs: can you take a look at this? http://pastie.org/pastes/5558682/text Those are the steps required to reproduce some errors that I'm having a hard time understanding
20:13 < augustl> isaacs: just step 3 alone, not being in the bane repo/project, works fine.
20:14 < augustl> I hope we're just making some kind of noob mistake :)
20:14 < KeOps> I have a live drawing project, find on internet. And i have to fusion it with my html5 canvas. For finally, have a pictionary game
20:14 < augustl> tested on a couple of OS X boxes and Linux VMs, same behaviour all the time, for current node/npm version.
20:15 < ree> hi!
20:15 < augustl> ree: ohai
20:16 < KeOps> I can already draw, and change color, and sometimes delete the canvas lol. But now i have to send message, like chat. And fix my delete button. Maybe i should put my code on gist
20:16 < PigDude> augustl, that sequence of commands works fine here
20:16 < augustl> PigDude: oh, interesting. OS, node version, etc?
20:17 < augustl> and hai PigDude (#closure-tools) :)
20:17 < PigDude> ah it actually died after a bit
20:17 < augustl> ah, "good"
20:17 < PigDude> ENOENT utime
20:17 < augustl> consistency is pleasant for weird issues like this.. It's weird to me at least
20:18 < PigDude> i'm on debian 6.0.6, node 0.8.16
20:18 < augustl> seems like OS doesn't matter, haven't tested on windows though
20:18 < tnorris> isaacs: done. split up a few extra changes into additional commits so you can just cherry-pick the first if the others aren't wanted.
20:21 < PigDude> seems like just messed up dependencies in the "buster" package
20:21 < augustl> it works fine when CWD isn't the bane repo though
20:21 < augustl> so just npm install buster@0.6.2 works fine if you're in an empty folder
20:22 < augustl> isaacs: I suppose this belongs in the issue tracker
20:38 < TehShrike|Work> Can anyone recommend a passthrough module that I can stream a hex string at and get binary out the other end?
20:58 <@konobi> stefan__: no PM-ing please
21:03 < jcrew> did you get an a/s/l message?
21:04 < TehShrike|Work> konobi: pm me for free love
21:04 < PigDude> my love is gobal, no pm for me
21:04 < PigDude> *global
21:08 < stefan__> need help installing node + mongo on linux
21:08 < jcrew> stefan__: where are you stuck?
21:09 < jcrew> and which os?
21:09 < stefan__> on .config some error
21:09 < jcrew> what does google say when you type in some error?
21:10 < KeOps> There is someone who can take few time, now, for some help please ? In pm. French or English . Thanks a lot !
21:14 < nlf> can you give a second user permissions in npm to publish your packages?
21:14 < TehShrike|Work> nlf: yes
21:15 < nlf> i thought so.. it's something in the package.json right?
21:15 < TehShrike|Work> nlf: https://npmjs.org/doc/owner.html
21:17 < nlf> TehShrike|Work: thanks
21:19 < aandy> anyone from china/russia who can confirm time has not ended??
21:19 < heatxsink_> oooh no response!!!!!!
21:20 < aandy> that's it, i'm getting the next flight to east new zealand
21:28 < jcrew> stefan__: post your question man, konobi already asked you not to pm
21:28 < stefan__> a ok , just looking for that error 
21:30 < jcrew> any of us need to know what the error is to actually help
21:31 < upstream> how do you go about unit testing with expressjs, is there a way I can access all of my routes as methods and execute them with like a mock request / response object and instead of rendering the results just get the returned html to verify? or is that not even what I want to do...
21:31 < juboba> hey
21:31 < upstream> sort of new to this
21:31 < juboba> how can I get data from mysql?
21:32 < stefan__> i need python or upgrade
21:32 < upstream> anyone have experience writing tests around an expressjs app?
21:33 < stefan__> how can i check that?
21:33 -!- mode/#Node.js [+o bnoordhuis] by ChanServ
21:35 <@bnoordhuis> stefan__: what's the error?
21:36 < stefan__> File "./configure", line 355     1 if options.unsafe_optimizations else 0)        ^ SyntaxError: invalid syntax 
21:37 < stefan__> python 2.4.3 
21:38 < TooTallNate> stefan__: you need 2.6 or newer
21:38 < stefan__> i just found out that
21:38 <@bnoordhuis> stefan__: 2.6 or 2.7 to be precise, python3 won't work
21:38 -!- mode/#Node.js [-o bnoordhuis] by bnoordhuis
21:39 < stefan__> my problem is that i just wanna upload the files on my host
21:40 < stefan__> i worked on windows
21:40 < bradleymeck> bnoordhuis: are you the one doing perf on streams
21:40 < stefan__> and now...i have to install on linux
21:41 < bnoordhuis> bradleymeck: somewhat. i'm the one berating isaacs for the performance drops :)
21:41 < bradleymeck> bnoordhuis: do you have tests i can run? wondering about time spent in array ops
21:41 < bnoordhuis> stefan__: welcome to the wonderful world of linux. in 6 months time you won't ever want to go back
21:42 < stefan__> i hope so
21:42 < bnoordhuis> bradleymeck: http_simple and net-pipe in the benchmark directory?
21:42 < bradleymeck> will try them later tonight
21:43 < bnoordhuis> bradleymeck: the http_simple benchmark needs some explaining btw
21:43 < bnoordhuis> bradleymeck: you run ab against it. the url determines the exact benchmark
21:44 < bnoordhuis> bradleymeck: i.e. http://127.0.0.1:8000/buffer/1024 tests a new Buffer(1024) response, http://127.0.0.1:8000/bytes/32 a 32 character string response, etc.
21:44 < bradleymeck> ill look at em, im betting the array is killer
21:45 < bnoordhuis> bradleymeck: even fancier, http://127.0.0.1:8000/buffer/1024/4 sends a 1024 bytes response in 4 256 bytes chunks
21:45 < bnoordhuis> it slices, it dices
21:45 < bradleymeck> your gonna love my bufs?
21:45 < bnoordhuis> always <3
21:47 < phrearch> hey
21:47 < phrearch> does anyone know if something like this(row splitting with a registerHelper in Handlebars) can be done with hogan.js as well?
21:48 < phrearch> http://jsfiddle.net/HwJ6s/
21:52 < AAA_awright> Would anyone like to provide comments on this for me? http://magnode.org/2012/jsonschema-for-updating-content
22:00 <@isaacs> augustl: this is fascinating :)
22:00 <@isaacs> augustl: looks like it's failing multiple builds at the same time
22:02 <@isaacs> augustl: also, looks like buster depends on bane which depends on buster
22:04 <@isaacs> augustl: and i can't figure out why it's installing jsdom underneath buster-syntax
22:04 < Kakera> how do I modify a user's session outside of handling a request?
22:05 <@isaacs> augustl: ah, i see, optionalDependencies
22:05 < Kakera> changes to req object after I've redirected them doesn't have any effect
22:08 < Kakera> alright, changes immediately after redirecting do take effect, but not after the handler function has returned
22:09 <@isaacs> augustl: so, the root problem is that bane->buster->bane
22:09 <@isaacs> augustl: and it's refusing to install bane under buster because you're already under bane
22:10 <@isaacs> augustl: the confounding issue is that, when it fails, it is in the middle of several node-gyp installs and other stuff, so rolling back failes with an ENOTEMPTY on the rmdir,and all hell breaks loose.
22:13 < kenperkins> anyone know of a package that's basically a terminal with command history (with a user defined set of commands?)
22:15 < KeOps> I'm really in big trouble with my school project :'(. I have to give it back tomorow. If i failed this semestery , i can say "goodbye" to my graduate ... Can please someone help me in pm ? 
22:16  * kenperkins gets the popcorn
22:16 <@mbalho> dont use node js in school it isnt even 1.0 you should use java in school it is at like version 7
22:17 < andrewaclt> lol
22:17 < KeOps> @mbalho : Yes, but now it's a little late to start a new project no ? lol
22:18 < AviMarcus> KeOps, ask the channel your question.
22:18 < warz> KeOps, if you have a specific question, just ask it
22:18 <@mbalho> questions are recommended here
22:18 <@mbalho> we wait with bated breath
22:18 < warz> fingers on the keyboard ready to type an answer
22:19  * superjoe poises
22:19  * mbalho <drumroll>
22:19 < wjen> *pregnant pause*
22:19  * warz sips mt. dew
22:19 < kenperkins> it's either a novel, or KeOps is the slowest typer on earth
22:19 < KeOps> The problem, is that it would be a little hard to explain it here. I would try ...
22:19 < Kakera> or he's currently pming someone
22:19 < kenperkins> typist?
22:19 < KeOps> I'm gonna up my code on gist, first
22:19 < AviMarcus> great idea
22:20 <@mbalho> i submit this guess answer: you have too many nested callbacks and it makes your code hard to debug. start by simplifying
22:20 < AviMarcus> mbalho, also: node.js is this bleeding edge new thing, so it surely isn't ready for production. Also, it will likely fizzle out. Stick to something tried and tested, like perl.
22:20 <@mbalho> o/ truth
22:20 < Kakera> or php *hides*
22:21 < othiym23> PHP is excellent for my personal home page
22:21 < kenperkins> fun game mbalho, I offer "your for loops don't work because node is asynchronous"
22:22 <@mbalho> oooh good one
22:22 < misterhat> hello friends
22:23 < othiym23> hello m. hat
22:23 < misterhat> AviMarcus: what's wrong with it specifically?
22:23 <@mbalho> also: your socket.io emit needs to happen after youve stored the on('connection') socket object
22:23 < kenperkins> lol
22:23 < AviMarcus> misterhat, I was joking, following mbalho's joke.
22:23 < KeOps> kenperkins: i think i could type as fast as you :P, but in english i have to think, before typing ^^. In french it would be more easier for me :P
22:23 < KeOps> https://gist.github.com/4349066 
22:23 < kenperkins> KeOps: it was a tad sarcastic :D
22:24 < misterhat> oh good AviMarcus, you'd be surprised
22:24 <@mbalho> whoa i might be right
22:24  * AviMarcus hates var = ,
22:24 < misterhat> KeOps: keep at it :P
22:24 < misterhat> why AviMarcus
22:24 < kenperkins> i have to be honest tho, I can't stand comma first, no ; 2 space formatting
22:24 <@mbalho> kenperkins: you shouldnt use the variable name 'static', its reserved
22:24 <@mbalho> oops 
22:24 < AviMarcus> misterhat, I think it makes it harder to read
22:25 <@mbalho> KeOps: meant that last comment for you
22:25 < AviMarcus> and change
22:25 < misterhat> you mean like
22:25 < misterhat> var x = 2, y = 4;?
22:25 < kenperkins> i was like, no shit ;D
22:25 < AviMarcus> do var = ;
22:25 < misterhat> oh naaaa
22:25 < rump> i think the purpose of comment first is it becomes painfully obviously if missing a comma and avoiding globals
22:25 < misterhat> i love the commas ;P
22:25 < kenperkins> rump i have modern dev tools that do that for me
22:25 < rump> s/comment/comma/
22:25 < kenperkins> I don't need to make my style f'ing ugly
22:25 < rump> kenperkins: amen
22:26 < warz> i prefer my commas to occur on their own lines. i feel it makes it so that i definitely do not miss them.
22:26 < AviMarcus> kenperkins, I like comma first - that makes it much easier to do the commas correct
22:26 < kenperkins> warz++
22:26 < rump> i heard their reasoning and wondered whos not linting nowadays anyway
22:26 < justinabrahms> I have a class which inherits from EventEmitter. After the 'ready', state fires, I set some state on the class, but it doesn't seem to be there in later function calls. https://gist.github.com/4b76cbb89b28ccae8f6e -- example
22:26 < othiym23> leading commas makes for tidier diffs which pleases my compulsively tidy mind
22:26 < misterhat> i just space out my code properly 
22:26 < kenperkins> AviMarcus: I so rarely get commas wrong 
22:26 < kenperkins> as in, never
22:26 < KeOps> "ardoise.html" has some functions that i wrote, and i would like to use it in my script.js with index.html, which i found the source on internet ( with the app.js too ).
22:26 < justinabrahms> any thoughts as to why the state isn't staying around in the class?
22:26 < misterhat> after i set a few vars, i'll add 2 newlines
22:26 < rump> isaacs is a big proponent it seems
22:26 < misterhat> to separate my logic
22:26 < kenperkins> and if it does happen? I have build checks that cover me
22:26 < misterhat> also i use sublime linter so i'm not gunna miss one
22:26 < misterhat> yeh
22:26 < misterhat> jshint ftw
22:27 < AviMarcus> sublime text 2 ftw :P
22:27 < misterhat> yehhh AviMarcus :D
22:27 < kenperkins> so why do something that makes code less beautiful and easy to read just to cover something that never happens? :D
22:27 < kenperkins> sublime? 
22:27 < misterhat> yes
22:27 < kenperkins> bah, you guys HAVE to try webstorm
22:27 < misterhat> use sublime + sublime linter
22:27 < kenperkins> it's so fucking awesome
22:27 < warz> eclipse for life!
22:27 < kenperkins> it's on sale, today only (doomsday sale) for $12
22:27 < misterhat> but is it free?
22:27 < misterhat> oh nope
22:27 < AviMarcus> I tried webstorm, java never seems to run correctly
22:27 < kenperkins> hmm, I haven't had that issue
22:28 < kenperkins> osx?linux?
22:28 < misterhat> i'm a cheapskate :p
22:28 < rump> vim++ ?
22:28 < AviMarcus> linux
22:28 < kenperkins> that may be it 
22:28 < misterhat> AviMarcus: which distro
22:28 < rump> haha re doomsday sale
22:29 <@mbalho> KeOps: the app works, what are you trying to do
22:29 < KeOps> My problem, is that i don't know how to send the event for delete what i drawed on the canvas. I wrote a function, but it delete the canvas only after i start to draw a new line ( because i put the function clear in the function drawline, but i don't know how to send a separate "event" just for clear )
22:30 < misterhat> is this regarding node?
22:30 <@mbalho> probably not but whatever we must help the french kid succeed
22:30 < KeOps> lol thanks ^^
22:30 < AviMarcus> on.. uhm.. geez, I can't even find it. Ah linux mint release 12, based on ubuntu 12 I think. But I liked ubuntu 10.04 more than the new desktop managers and stuff. 
22:32 < AviMarcus> where's that node.js information and how many cycles ram, disk, SQL etc take?
22:32 < AviMarcus> can't find it in google
22:33 < rump> hm?
22:33 <@mbalho> KeOps: are you using chrome and the chrome developer tools console to find the javascript errors?
22:33 < kenperkins> well, anyways, if you guys ever feel adventurous, webstorm is dope for node
22:34 <@mbalho> KeOps: generally you shouldnt use implicit globals like "Clearer = data.clear;" without first having defined Clearer somewhere. try putting 'var Clearer' at the top of your program
22:34 < kenperkins> I'm still runing lucid in my datacenter
22:34 <@mbalho> KeOps: same with ColorPen
22:34 < KeOps> yes, i tried ^^
22:34 < KeOps> yes
22:34 < rump> this is crazy neat http://appjs.org
22:34 <@mbalho> KeOps: when i run the code you put in the gist it has some JS errors
22:35 <@mbalho> KeOps: on the ardoise.html page
22:35 < KeOps> but for these function, i tried that, cause i didn't find how to do with an other solution and nothing worked -_-, so i putted some global function :/
22:35 < milani> Next time you had a gist wanted to run, use https://github.com/milani/node-gr
22:35 < KeOps> ok, wait i'm gonna check that
22:36 < kenperkins> anyone seen a node package to run a command interpreter with history?
22:37 < KeOps> But the ardoise.html is just for the showing the function i wanted to have on the index.html. What i'm going to give back is the index.html. With script.js and app.js
22:38 < styol> rump: interesting indeed
22:38 < AviMarcus> milani, that seems slightly dangerous
22:39 <@mbalho> KeOps: ahh well try defining all the variables you want to use at the top of your program like 'var Clearer;'. they dont have to have a value
22:39 < rump> i cant wait til we can do cross platform native looking apps in node
22:39 < kenperkins> I'm so tired of bootstrap sites
22:39 < milani> AviMarcus, yup.
22:39 < KeOps> ok
22:39 < kenperkins> as in, header, hero, 3 column
22:40 < milani> rump, it's already possible using appjs or node-webkit
22:40 < milani> isn't it what you want?
22:40 < rump> milani: ya we were talking about appjs
22:40 < rump> i havent seen nodewebkit though
22:40 < milani> aha I was not here. I'm doing appjs next version
22:40 < milani> but it's not ready yet to publish.
22:41 < styol> rump: have you tried the demo/distributable yet? if so, which platform?
22:42 < rump> styol: i ran it on osx
22:43 < styol> rump: Same here. Wondering if there is a better way to execute the bash script
22:43 < milani> rump, the osx version is the most terrible one because chromium has some difficulties to run on osx as node module
22:43 < rump> yeah needs double click action
22:43 < rump> im sure that can be setup in osx and you can double click .bat in 'doz
22:43 < milani> styol, rump that's possible. you need to create an .app folder
22:43 < styol> double click for me opened up a different application but I'm guessing it is not the normal dealio
22:44 < styol> milani: ah i see, neato
22:44 < kenperkins> i can't believe I can't find a "shell" app for node
22:44 < rump> oh, you're the author
22:44 < kenperkins> package
22:44 < rump> milani++
22:44 < milani> yeah.
22:45 < AviMarcus> Anyone using Dwolla for money transfers? much less fees than paypal (or free for under $10) but.. well, not many people use them yet. Get $10 off of the fees with this link :P http://refer.dwolla.com/a/clk/2yKVgQ
22:45 < rump> milani: it started with rump: this is crazy neat http://appjs.org  styol: rump: interesting indeed
22:45 < styol> apparently seconds before milani joined ;)
22:46 <@mbalho> AviMarcus: dont spam here please
22:46 < milani> rump, styol to create a real app on osx, take a look at this thread https://groups.google.com/forum/?fromgroups=#!topic/appjs-dev/WzESX1pMNk4
22:46 < milani> it shows you how to package your app so double click would open it.
22:47 < styol> sweet
22:49 < AviMarcus> mbalho, I suppose I should just skip the link then. Dwolla is awesome. (assuming they don't run away with my money. Which apparently paypal frequently does to people.)
22:50 <@mbalho> it would be welcome in a channel called #onlinepayments :)
22:50 < rump> probably not even then :)
22:50 < AviMarcus> no one there :(
22:51 < milani> kenperkins, did you try https://github.com/Benvie/Node.js-Ultra-REPL ? I donno if it has history or not
22:51 < kenperkins> milani: I did look at it a bit. I don't want an execution environment tho, I just want a very primitive command parser
22:51 < kenperkins> i.e. not arbitrary commands
22:52 < milani> oh you wanna create a REPL for yourself?
22:52 < kenperkins> bingo
22:52 < kenperkins> I assumed there would be a package doing alot of the scaffolding for you
22:52 < kenperkins> but I can't find one
22:53 < kenperkins> similar to https://github.com/visionmedia/commander.js/ but for a REPL
22:54 < cellvia> wow ultra repl looks cool thnx
22:54 < milani> kenperkins, why don't you take a look at node builtin repl module
22:55 < milani> you can change it and remove unnecessary things.
22:55 < kenperkins> I suppose I can
22:55 < kenperkins> but, I actually prefer to NOT write code :)
22:55 < kenperkins> re-use as much as I can
22:55 < kenperkins> figure why write something if someone already has a nice little scaffold
22:56 < cellvia> because you dont get as much nerd cred that way
22:56 < kenperkins> like I need that :D
22:56 < milani> lazy:D but that's when someone did it for you. seems no one did;)
22:56 < kenperkins> indeed
22:58 <@isaacs> rump: i'm a proponent of using every style.
22:58 <@isaacs> rump: i'm a proponent of not having a "personal style".  that just bloats your ego in an un-useful way.
22:59 <@isaacs> rump: keep the ego small :)
22:59 < rump> every style? http://www.80sfashione.com/wp-content/uploads/2012/11/80’s-Fashion-Picture-for-Men3.jpg
22:59 < irth> hi everyone, what's a good way to connect facebook users to an app with redis or mongodb?
23:00  * KeOps is dying
23:04 < kenperkins> milani: that was easier than I expected
23:04 < milani> yes it is just readline and parse.
23:04 < milani> and print ">" ;)
23:07 < kenperkins> hmmm, using colors.js with repl seems to have subobtimal behaviors :D
23:08 < rump> styol: http://reditr.com
23:08 < wao> KeOps: not today!
23:09 < rump> styol: supposedly thats node-webkit
23:09 < rump> pretty slick
23:09 < rump> but it does mention macgap in its about page so hrm
23:09 < KeOps> wao: i know, i'm gonna die tomorow, but i'm starting to die now, with my fu*** project
23:09 < styol> rump: whats that? i just logged out / back in and may have missed some context from before
23:10 < rump> styol: written in node, cross platform app
23:10 < styol> ah gotcha
23:10 < rump> oh i pasted the link right before
23:10 < rump> rump: styol: http://reditr.com
23:10 < styol> neatsauce
23:13 < tim_smart> A big hello to the fellow node users. Anyone here got some experience with sequelize?
23:16 < KeOps> mbalho: i know it's not how we do generaly, when we help someone. But can you just fix my project for me. I can't even debbug anything ... I'm writing the documentation for my project, and my eyes still crossing ... i can't even do the difference between tiger or a cat -_-
23:17 < KeOps> I would send you a piece of my diplom, cause you deserv it xD
23:20 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
23:25 < kenperkins> Where will i find the signature of repl.writer?
23:27 < WarheadsSE> I suspect that since ir defaults to util.inspect, it would match that.
23:28 < kenperkins> yea, that was it WarheadsSE 
23:28 < WarheadsSE> :)
23:29 < kenperkins> issacs: should repl not wrap the evalCmd in Parens if using a custom eval function?
23:33 < kenperkins> not having a lot of insight into the history it feels like https://github.com/joyent/node/blob/master/lib/repl.js#L248-263 should be in the provided eval statement instead of for all evals
23:49 < AviMarcus> Anyone looked at rethinkdb.com? it does sharding, multi-datacenter syncing.... no non-primary index yet, though, so that seems pretty limited.
23:49 < AviMarcus> (it's no SQL of course)
--- Log closed Fri Dec 21 00:00:57 2012
