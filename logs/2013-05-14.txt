--- Log opened Tue May 14 00:00:51 2013
00:08 <@MI6> joyent/node: Ben Noordhuis master * 9498fd1 : deps: upgrade c-ares to 1.10.0 - http://git.io/aC0BqQ
00:16 < Aquilas> Hey guys is anyone having issues with the npm jquery module on node 0.1.0 versions? 
00:17 <@konobi> isaacbw: regexp challenge you day!?
00:17 <@konobi> *say
00:26 < Aquilas> npm uninstall jquery
00:26 < Aquilas> sorry lol
00:33 <@isaacbw> konobi: is it something that you might be interested in having?
00:34 <@konobi> isaacbw: i'm pretty good with regexps =0)
00:34 <@isaacbw> hmm
00:41 < ningu> I'm better at irregular expressions
00:47 <@konobi> Nexxy: what's the convo with matt about?
00:52 -!- mode/#Node.js [+o TooTallNate] by ChanServ
00:55 < Aquilas> hey guys I'm having problems installing jquery with node version > 0.1.0. It seems the installation of node-gyp is erroring since it doesnt support python 3.x.x, but I checked it says that issue is for windows only?
00:58 <@TooTallNate> Aquilas: wellâ€¦ don't use python 3
00:58 <@TooTallNate> Aquilas: node-gyp requires python 2.6 or 2.7
01:07 < Technodrome> any of you guys ever checked out MSDN, MS seems to be pushing node.js harder than many of their own asp.net stuff
01:08 < ChrisPartridge> Technodrome: i'd be happy if they spent more time making their flagship browser less of a piece of shit, tbh
01:09 < ningu> really? I'm a bit surprised to hear that
01:09 < ningu> ChrisPartridge: are recent versions still so bad?
01:09 < ningu> I have no reason to use them, so I have no idea
01:09 < Technodrome> IE10 is not bad, or ie9+ ChrisPartridge 
01:09 < ningu> I don't use windows and when I do I still use chrome :)
01:09 < ChrisPartridge> Technodrome: IE10 fires a network error and wipes the xhr response on a 401
01:09 < ChrisPartridge> that is a horrible bug
01:09 < Technodrome> they support node.js on their azure platform, have tons of docs on it, there web matrix team is full of node.js dev's etc
01:12 < Technodrome> does any of that auto complete stuff work well for javascript / node.js? 
01:12 < Technodrome> the one in web matrix works extremely well but it looks like they spent a ton of time on it 
01:14 < Zolmeister> Technodrome: Think long and hard before using any M$ product. Their products are known for their vulnerabilities and user exploitation. There is always a better alterative.
01:14 < Zolmeister> alternative*
01:14 < nightfly__> How can I use https.get to make requests from a server with a self-signed cert?
01:14 < Technodrome> Zolmeister: i'm not using it, just pointing out that web matrix has excellent node.js support
01:15 < Zolmeister> Technodrome: sure, it was more about the IE9/10
01:15 < nightfly__> ah, found it
01:15 < Zolmeister> IE is the reason most things suck on the web
01:15 < Technodrome> ie9+ has been pretty standard complaint 
01:15 < Technodrome> i thoguht at least
01:16 < Zolmeister> Technodrome: Nope. But more importantly they will never get updated
01:16 < Zolmeister> Technodrome: it may seem OK now, but in a few years you will hate it. Just like IE7 and 8
01:16 < Technodrome> ie10 has the best gpu performance of any browser if the hacker news post i was reading is correct
01:17 < Technodrome> for what reasons?
01:17 < Technodrome> i don't even use it, i'm just curious 
01:17 < Zolmeister> Technodrome: Your thinking short term. Think long term.
01:17 < Technodrome> so you think things will start popping up?
01:18 < Zolmeister> I'm saying that browsers like Chrome and FF which update properly lead the web forward, while IE moves it back
01:18 < Technodrome> that could very well be true for ie6 or even ie7 but ie9+ they have made it their goal to make it as best as they possibly can 
01:18 < Zolmeister> In 2 years, IE9 will not have been updated, but devs will still have to support it.
01:19 < Zolmeister> then why release an IE10?
01:19 < Zolmeister> FF had this problem for a while as well, but they have gotten much better
01:19 < Technodrome> i'm sure they will update critical things still 
01:19 < Technodrome> the web is pretty good these days 
01:19 < Zolmeister> Critical is not important. Things like WebRTC are important
01:20 < Technodrome> i mean all the hell stories from ie6 will likely never happen again
01:20 < Zolmeister> The web is moving too fast for browsers like IE. You may end up taking back that last point. What about IE7?
01:21 < Lorentz> or IE8
01:21 < Zolmeister> right
01:21 < Zolmeister> you dont even have canvas
01:21 < Lorentz> this place I work at just got this major overhaul done for all the machines
01:21 < Lorentz> and it's IE8
01:21 < Lorentz> and it probably won't change for like, a decade now
01:21 < Zolmeister> ^ ie. ie sucks
01:22 < Zolmeister> (though technically it should be eg. but oh well)
01:22 < Zolmeister> (wait no... I had it right...)
01:23 < Zolmeister> In anycase, I just wish chrome would get majority of the market share.
01:24 < Technodrome> you could be right Zolmeister , but i don't think ie9+ will hold the web back
01:24 < Technodrome> of course ie7 was still a mess
01:24 < brainproxy> join #bestiejs
01:24 < Technodrome> but no browser back then is going to have html5 implemented correctly etc
01:24 < brainproxy> derp
01:25 < Zolmeister> Technodrome: your missing the point. Without auto-updates (chrome style) IE will never be good.
01:26 < ningu> Technodrome: the issue is that regardless of whether updates are released, IE does not automatically install them, so old IE must be supported much longer
01:26 < Technodrome> Zolmeister: do they have that yet?
01:26 < Technodrome> they don't have auto updates yet?
01:26 < Zolmeister> Technodrome: Not that I know of
01:26 < ningu> only chrome and FF
01:26 < Technodrome> chrome is my browser of choice
01:26 < ningu> in chrome I barely even notice the updates, I have to check the about box to see what version I'm on
01:27 < ssafejav_> MS turned on autoupdate for IE about a year ago, but if you don't have Windows update turned on or are running a pirated copy, you won't get it
01:27 < Zolmeister> (not to mention the fact that IE has no linux/OSX support... which are the two main dev environments)
01:27 < Zolmeister> ssafejav_: I don't think they do major version updates
01:27 < ningu> in chrome and now FF there basically are no major version updates in that sense
01:28 < ssafejav_> Zolmeister: http://blogs.windows.com/ie/b/ie/archive/2011/12/15/ie-to-start-automatic-upgrades-across-windows-xp-windows-vista-and-windows-7.aspx
01:28 < SBoudrias> Hey, I was wondering what would be the best NodeJs feature to build an interactive command line prompt: Readline or simply a stdin with keypress detection (or some other thing I don't know about)?
01:29 < Zolmeister> SBoundrias: you probably want key-press for escape sequences
01:30 < Technodrome> imma just stick with node.js 
01:30 < Technodrome> you guys like dark themes or light themes?
01:30 < SBoudrias> Zolmeister: Ok, but what would be the use case for Readline (with stdin/stdout as stream)?
01:30 < Zolmeister> Technodrome: dark
01:31 < Zolmeister> SBoundrias: Not sure I understand
01:31 < Zolmeister> SBoundrias: oh, the library
01:32 < SBoudrias> Zolmeister: Well, no the nodeJs readline API: http://nodejs.org/api/readline.html
01:32 < Technodrome> Zolmeister: i'm thinking i'm more productive with light 
01:33 < Technodrome> feels like i'm getting actual work done 
01:33 < Zolmeister> Technodrome: I guess I'm just a dark themed person (have XFCE that way too)
01:34 < Technodrome> i've been using dark themes as well
01:34 < Technodrome> crazy as it may sound, i think the dark contract is hurting my eyes a bit
01:34 < Zolmeister> SBoundrias: Oh I see, I guess that would work, but I'm not sure how flexible it is in practice.
01:35 < Zolmeister> Technodrome: http://jonls.dk/redshift/
01:35 < Zolmeister> I don't use it, but others say its great
01:35 < Technodrome> macbook does that to 
01:35 < Technodrome> just something about a white background that == getting wok done 
01:36 < Technodrome> Zolmeister: sublime guy?
01:36 < Zolmeister> Actually I've been using Brackets (https://github.com/adobe/brackets)
01:36 < Zolmeister> but with my own dark theme
01:37 < SBoudrias> Zolmeister: Ok, well I've been prototyping with it, and up to now it's been working great, but I feel the code needed for the Readline is a bit too complicated for the simple logic I describe. Anyway, thanks for the comment, I'd play some more with the options.
01:37 < Zolmeister> I actually forked that project because of its poor linux support
01:37 < ashnur> anyone used enchilada?
01:37 < Technodrome> you like it ?
01:37 < Zolmeister> Technodrome: Its ok. I really like the fact that its open source and lightweight.
01:39 < Technodrome> brackets looks pretty cool 
01:41 < Technodrome> Zolmeister: i'm guessing it doesn't work well with LESS  ? 
01:41 < Technodrome> also does it support Jade?
01:42 < Zolmeister> Technodrome: Yeah... I haven't actually tried to use the inline CSS stuff, or the live edit stuff. The issue really has been their poor linux support for me. That being said, since its open source you could add LESS if it doesn't have it.
01:43 < Technodrome> i guess it has LESS support
01:43 < Technodrome> just not Jade
01:45 < mscdex> less support for what?
01:45 < px_> Is heroku the best node.js host paas?
01:45 < mscdex> ;-)
01:47 < ChrisPartridge> px_: define "best"
01:49 < Zolmeister> ps_: they're decent. I used DotCloud though for websocket support some time back, they were pretty good too.
01:49 < px_> Most reliable + cheapest
01:51 < px_> I've found nodejitsu to be terrible
01:51 < px_> Plus they just sent me email: 'btw guys we are tripling the price next week kthx'
01:52 < Zolmeister> ps_: doesn't get much better than free I guess. I've never paid for them, as I keep my stuff on AWS
01:52 < px_> heroku is expensive if you go above 1 dyno
01:53 < px_> heroku also has big issues with TLD support and they dont' support websockets :(
01:54 < Zolmeister> ps_: if you like Linux, EC2 is pretty cheap and easy and reliable. But I guess your looking for a managed solution
01:54 < px_> I'm not good at systems admin type stuff, prefer to have those things managed yes
01:58 < LegCow> any of you guys used micrsoft's lightswitch? i need some good reasons to put the boss off the idea
02:00 < Zolmeister> LegCow: does it bath the room in blue, and then explode all the lights?
02:01 < Zolmeister> bathe*
02:02 < LegCow> i must be missing a reference
02:05 < jeffwhelpley> I am trying to set up WebStorm to Debug my node.js app while using something like Forever or Always (i.e. restart the app when files change). The problem is that the debugger attaches to the Always/Forever process instead of my node.js process. I realize that this needs to be a request to JetBrains, but wanted to see if anyone had any ideas of how to do this.
02:05 < Zolmeister> LegCow: BSOD
02:05 < jeffwhelpley> fyi, I can run Always/Forever with my node.js app in WebStorm, but it just doesn't stop at the breakpoints
02:06 < Zolmeister> jeffwhelpley: is this because you want to test the forever stuff? I find it easier to only use forever (or Up) in production
02:08 < jeffwhelpley> no, I don't want to test Forever. I know the common use case is for prod. What I am trying to do is to have my app running and then update as I am making changes. I already have a Grunt Watch task doing stuff like jshint and running unit tests. If I can get my app to automatically restart and still have debugging active then it would be nirvana.
02:08 < HeartOfAce> how can I format floating point numbers in JS? likeâ€¦ in C I'd do like a printf and then %.4f so that I only keep numbers that are like this: 1.2525. I can parse the number as a string and then add zeroes or remove numbers as I see fit, but it seems like a lot of hassle and I think someone must've thought up a solution already
02:09 < HeartOfAce> or is there no better way?
02:09 < HeartOfAce> nm, found a solution
02:09 < HeartOfAce> ty
02:10 < HeartOfAce> toFixed works
02:11 < Zolmeister> jeffwhelpley: Oh, I see... well, I have no idea then
02:12 < LegCow> Zolmeister: ahhh, the lights thing threw me
02:14 < jeffwhelpley> Zolmeister, no worries, I know it is a long shot. thanks for trying.
02:23 < andrew12> hey, who wants to play an apples to apples game i made for class
02:23 < Zolmeister> is it open source?
02:23 < andrew12> it's not working 100%, don't try to break it
02:23 < andrew12> not yet
02:23 < andrew12> well the backend isn't
02:23 < andrew12> http://horus.andrew12.net:3000/
02:24 < andrew12> you can't play more than one card each round silly
02:25 < andrew12> lol
02:25 < andrew12> only the judge can pick the winning card
02:29 < Zolmeister> I think I broke it...
02:29 < Zolmeister> :)
02:32 < andrew12> someone else did
02:32 < andrew12> the judge picked someone who left the game as the winner
02:33 < andrew12> why haven't two people played their cards :(
02:47 < Zolmeister> andrew12: its down again...
02:47 < andrew12> yeah someone kept filling it up with clients
02:47 < andrew12> so i killed it so it didn't explode
02:48 < ChrisPartridge> aw, explosions are cool
02:57 < Technodrome> Zolmeister: the editor is pretty cool 
02:57 < Zolmeister> Technodrome: yeah, its a really neat project
02:58 < Technodrome> needs jade support though
02:59 < Technodrome> Zolmeister: what view engine do you use mostly?
02:59 < Zolmeister> Dust.js
03:03 < Technodrome> Zolmeister: you like ejs or jade better ?
03:03 < Zolmeister> Dust.js better
03:03 < andrew12> Zolmeister: it's on :4000 now btw
03:03 < Technodrome> Zolmeister: i was just saying from those 2 
03:04 < Zolmeister> Technodrome: Dust.js
03:06 < Technodrome> Zolmeister: you like mongodb alot?
03:07 < Zolmeister> Its Web Scale
03:07 < Technodrome> what does that mean?
03:07 < Technodrome> web scale?
03:07 < Technodrome> an easy easy of just saying , it  scales really better 
03:08 < Zolmeister> its a reference to a web clip
03:08 < Zolmeister> but I just really like how its schemaless
03:08 < Zolmeister> http://www.youtube.com/watch?v=b2F-DItXtZs
03:12 < Technodrome> oh those cartoons Zolmeister 
03:14 < Technodrome> Zolmeister: this looks like a video that is not helping mongodb's case
03:14 < Zolmeister> Technodrome: I know, but its not making fun of mongo, as much of the fanboys
03:17 < Technodrome> Zolmeister: so yeah, that video makes me like SQL more now :) 
03:17 < Zolmeister> Technodrome: There is nothing wrong with SQL, this issue is that Mongo is far easier to work with and get started with
03:18 <@Nexxy> konobi, people being mean/negative
03:19 -!- mode/#Node.js [+o TooTallNate] by ChanServ
03:20 < Technodrome> When you use MongoDb there are no guarantees that your data is durably stored
03:20 < Technodrome> hmmm?
03:20 < px_> I like dynamodb
03:21 < Zolmeister> Technodrome: There is a setting which you can toggle to make sure that the data is saved properly (safe mode). I was not default for a long time, but they are making it default
03:21 < Technodrome> seems like riak is popular to 
03:21 <@Nexxy> and correct
03:22 < Technodrome> so it seems like these nosql things get you better performance than using relational db's 
03:22 < Zolmeister> yup
03:22 < Technodrome> and the only downside is i can't do joins? but i just have to do 2 queries and do a bit more of the logic in the code?
03:22 < chilts> totally depends on your use-case, size and what you need from your datastore
03:22 < chilts> flippant comments are pretty much always wrong for someone :)
03:22 <@Nexxy> you can do link walking in riak
03:23 < Technodrome> i mean that seems like the normal situation 
03:23 < Technodrome> this is just a crud app , nothing crazy going on 
03:23 < Zolmeister> You know whats better than riak? MongoDB
03:23 < Havvy> What do you guys think of LevelDB?
03:23 < ckknight> Havvy: seems like an interesting idea, though I haven't played with it.
03:24 <@Nexxy> you can use riak with leveldb as the kv backend
03:24 < chilts> LevelDB is awesome (for certain problems) :)
03:24 < Technodrome> how about redid?
03:24 < Technodrome> redis
03:24  * chilts is going to postfix all comments related to any DB from now on
03:25 <@Nexxy> lol
03:25 <@Nexxy> I just use IMHO when I'm not being facetious
03:25 <@Nexxy> (which is rarely)
03:25 < chilts> Redis is also awesome (for completely different problems) :)
03:25 <@Nexxy> everything is great
03:25 <@Nexxy> everything is awesome
03:25 < chilts> yeah :)
03:25 < Technodrome> so redis is all in memory?
03:25 < chilts> yes
03:26 < chilts> but you can relay to disk in various ways
03:26 < chilts> spool even
03:26 < chilts> or dump
03:26 < Technodrome> yes
03:27 < Technodrome> but its really only super fast and useful when all the data schema fits in the ram of that machine 
03:27 < Technodrome> right?
03:28 < LLckfan> Does any1 know how to make the mouse arrow stop moving on its own?
03:28 < Zolmeister> ^ Install linux
03:28 < chilts> Technodrome: by definition it has to fit into the RAM ... but the reality is, you should store stuff you need permanently elsewhere and use Redis as a data-structure server serving what it's good at
03:28 < Havvy> Zolmeister: Not an answer.
03:29 < Zolmeister> ^yes it was
03:29 < chilts> read up on Redis to see the kinds of things it can do with sets, sorted-sets, hashes and other stuff like lists
03:29 < Zolmeister> problem: mouse moves on its own, answer: install linux, problem solved
03:29 < chilts> to get more of an idea about what problems you'd use it for
03:29 <@Nexxy> is school out for the summer or somethin?
03:30 < chilts> heh
03:32 < Technodrome> chilts: ah
03:33 < Lorentz> buy linux and install it
03:33 < Technodrome> chilts: so for a standard website , what db you think i should use, just normal crud, users can send other users messages, post things etc, nothing crazy
03:33 < Havvy> 'buy linux'
03:33 < Havvy> Technodrome: Whichever you are most comfortable using.
03:34 < Havvy> Unless you expect it to get super popular.
03:34 < Technodrome> Havvy: i've only used pg / mysql, never used anything else 
03:34 < LLckfan> Does any1 know how to make the mouse arrow stop moving on its own?
03:34 < Technodrome> if something else is better i will learn
03:35 < Havvy> Technodrome: 'Better' is highly subjective when it comes to databases.
03:35 < Technodrome> sure
03:35 < Havvy> Do you want to learn something, or do you want it built quickly?
03:35 < Technodrome> I'm guessing it comes down to mysql 5.5 vs mongodb
03:35 < Technodrome> just learning atm 
03:35 < Technodrome> this is not for work 
03:35 <@Nexxy> ideally you should write your app in a way that the storage layer is transparent
03:36 < Havvy> Then gow ith MongoDB.
03:36 < Havvy> *go
03:38 < chilts> Technodrome: go with either something you already know, or just read up on those others that interest you and learn about it :)
03:38 < chilts> I don't think it'll matter for what you want
03:38 < chilts> make it fun, rather than hard work :)
03:39 < Technodrome> i was thinking mongodb since its pretty popular 
03:40 < Zolmeister> Technodrome: use mongodb. do it. if you dont like it switch
03:40 < Havvy> Then go with it.
03:40 < chilts> then go with that ... have fun!
03:40 < chilts> and lots of it
03:40 < Technodrome> why in express are "controllers" called routes?
03:40 < chilts> 'coz they're not controllers :)
03:40 < chilts> you can turn them into controllers if you like
03:40 < Technodrome> i mean the callback is a controller to me 
03:40 < chilts> but that's your choice :D
03:41 < chilts> cool, call them that then :)
03:41 < Zolmeister> sails.js if you want MVC
03:41 < Technodrome> its more than just a plain route
03:41 < chilts> won't change what they do, just what you call them :D
03:41 < Technodrome> i don't need MVC, i'm good with just this 
03:41 < Technodrome> everyone wants to create their own terminology , aka django
03:42 < chilts> I just call them routes 'coz that's what Express calls them ... and then there is no new terminology :)
03:42 < LLckfan> Does any1 know how to make the mouse arrow stop moving on its own?
03:42 < Technodrome> when i hear routes, i keep looking for routes.rb 
03:42 < ljharb> Technodrome: controllers would be the functions you execute. routes are hooking up your controllers to URLs, just like in any other framework.
03:43 < Technodrome> ljharb:  yes , the default scaffold does that, has the "controllers" in other files 
03:43 < Technodrome> but stil
03:43 < ljharb> the file location is irrelevant
03:43 < Technodrome> so i guess the callback is a controller then
03:43 < ljharb> if you find yourself attached to the concept of a "controller", then you could think of them as the functions you pass into app.get/post/use/etc
03:43 < ljharb> except that "controller" is a noun. and your callbacks are verbs.
03:44 < ljharb> so you'll find that if you shed yourself of terminology from object-oriented languages, you'll have an easier time in node/js :-)
03:44 < Technodrome> yes yes ljharb  , jut nitpicking of course
03:44 < LLckfan> Hello
03:44 < LLckfan> Does any1 know how to make the mouse arrow stop moving on its own?
03:44 < ljharb> clean the gunk out from inside the bottom of the mouse?
03:44 < Technodrome> does mongodb have any tools for inspecting the data etc etc?
03:45 < LLckfan> There is none
03:45 < ljharb> Technodrome: of course, there's a command line client, plus lots of guis you can find
03:45 < Technodrome> i see, interesting
03:45 < Technodrome> i'm so late to the game 
03:46 < Technodrome> one thing i don't get though, say i want to get a list of all my users, thats very much possible in mongodb right? even though there is no schema? it can check all the "document types" for certain fields? 
03:46 < ljharb> in pure mongo, "document type" doesn't exist unless you made it
03:46 < ljharb> so yes, you don't need a schema
03:46 < ljharb> (ps if you're using mongoose, i'd suggest NOT using the mongoose-extend module that adds STI)
03:47 < Technodrome> so how does it know which document is a user and what isn't? 
03:47 < Technodrome> say i want to get a list of all the users for instance 
03:47 < ljharb> theoretically you've got a "users" collection
03:47 < Technodrome> i mean does it just scan every single document in the system? that seems like it would take forever
03:47 < ljharb> different document types should be in different collections.
03:47 < LLckfan> Hello
03:47 < Technodrome> so are collections similar to a group ljharb  ? 
03:48 < ljharb> a group, yes. in sql terms it'd be more like a table
03:48 < Technodrome> makes sense now 
03:48 < Technodrome> so in my crud app, i will just do it like i would in sql pretty much, just use different queries for ones that would be a join etc 
03:49 < ljharb> the database structure usually won't be the same, but yes, it's similar in concept. if you're using mongoose, it's much closer. and you don't write your own queries.
03:50 < Technodrome> you don't write queries, but you use a query api? seems a bit similar 
03:51 < ljharb> it's a query api, but you're not handcrafting strings. it's a big difference.
03:52 < Technodrome> not gonna lie, looking at a few tutorials of mongodb and stuff here using JS, its a bit hard to understand 
03:53 -!- mode/#Node.js [+b *!*LLckfan@67.213.25.*] by Nexxy
03:53 -!- LLckfan was kicked from #Node.js by Nexxy [LLckfan]
03:53 -!- mode/#Node.js [-b *!*LLckfan@67.213.25.*] by Nexxy
03:54 < t_p> Error: Schema hasn't been registered for model
03:54 < t_p> I can't find the root cause of this problem
03:55 < ChrisPartridge> t_p: using what module?
03:55 < t_p> Error: Schema hasn't been registered for model "WallPostComment".
03:55 < t_p> WallPostComment is a user defined model
03:55 < ljharb> a user defined model? O.o
03:55 < ljharb> why would your users define your database schema
03:56 < t_p> yes,please see the pastebin
03:56 < t_p> http://pastebin.com/qUPykpmv
03:57 < ljharb> t_p: ok so what's the problem, is the error on the "virtual"?
03:58 < ChrisPartridge> i'd probably say it has something to do with the ref to WallPostComment
03:58 < ChrisPartridge> not being registered with mongoose at the time of the WallPostComment relation
03:58 < t_p> no, i remove this, it still give me the same error
03:58 < ChrisPartridge> s/relation/model
03:59 < t_p> var WallPostComment = db.model('WallPostComment');
03:59 < t_p> this line have error
04:00 < t_p> db.WallPostComment.find() have records in mongodb
04:00 < Technodrome> so where does a relational db truly beat mongodb in a use case? 
04:01 < ljharb> t_p: db.model takes 2 arguments
04:01 < ljharb> t_p the string, and the schema object itself.
04:02 < t_p> no, it can only take 1 argument
04:02 < ljharb> t_p: oh sorry db.model('foo') gives you a model object
04:02 < ljharb> t_p: but have you ever set it up, with mongoose.model('foo', fooSchema)?
04:02 < ljharb> that's a prerequisite
04:02 < t_p> let me try
04:05 < t_p> ljharb: thanks, it have already been solved
04:05 < t_p> but i don't know why i need to explicitly point the schema
04:05 < ljharb> because mongoose can't magically figure out which JS object you want to be your schema
04:05 < ljharb> you have to tell it which model it points to
04:06 < ljharb> read the mongoose docs. it's the way it works.
04:07 < Technodrome> is mongoose true mongodb? i love the api 
04:07 < Technodrome> but what exactly is it doing?
04:07 < Technodrome> i see it adds models, which i guess could be almost like a predefined "table" 
04:07 < ljharb> it's adding schemas to an otherwise schemaless database
04:08 < ljharb> it doesn't change the data in mongo at all, it's just a wrapper.
04:08 < t_p> ljharb: i think your comment is not exactly right
04:08 < Technodrome> yes the schemas are only aware in the js layer, not the db right ljharb  ? 
04:08 < t_p> because another Model such "User" can be get with schema
04:09 < ljharb> Technodrome: yes
04:09 < Technodrome> so should i just start with this?
04:09 < ljharb> t_p: if so, it's because someone called mongoose.model('User', UserSchema)
04:09 < ljharb> guaranteed
04:09 < t_p> User = db.model('User');
04:09 < ljharb> no, that just fetches the model
04:10 < ljharb> 100% guaranteed, it was registered first with a schema
04:12 < Technodrome> so really all this does is add schemas and add a little bit better query api? 
04:13 < ljharb> i don't know how it compares to the native mongo driver's api
04:13 < ljharb> but it's a nice api, it adds schemas, it's got DBRefs and populate to simulate innodb foreign keys. i like it.
04:13 < t_p> yes, i only want to fetch model
04:14 < Technodrome> ljharb:  have you used both?
04:15 < ljharb> no, i started with mongoose
04:15 < ljharb> t_p: yes but you can not fetch a model that never existed in the first place
04:16 < t_p> ljharb: what do you mean "first place", i have already seen the "WallPostComment" in mongodb
04:16 < ljharb> t_p: i mean, in the current node instance, has mongoose.model('WallPostComment', wallpostcommentschema) been called
04:17 < ljharb> the data in the database is entirely irrelevant
04:17 < ljharb> well, not entirely
04:17 < ljharb> the model name needs to match the collection name somewhat
04:17 < ljharb> like "users" for the User model
04:18 < t_p> yes, wallpostcomments is also exist
04:19 < Technodrome> ljharb: tons of examples i see, people are using these "providers" 
04:19 < ljharb> right. but every time the node app runs and you connect to the db, you have to call db.model('WallPostComment', wallpostcommentsschema)
04:20 < t_p> var db = _mongoose.createConnection(url);
04:20 < t_p> the db is createConnection instance
04:20 < ljharb> ok
04:21 < ljharb> so db.model(modelName, schema)
04:21 < ljharb> that has to be called.
04:21 < ljharb> i don't know why you keep arguing me on this - the error message you got in the very beginning is "model is not registered"
04:21 < ljharb> and i'm telling you how to register it.
04:21 < nikkubhai> noob here. :) I am using https://github.com/fvdm/nodejs-youtube . In this case, if I use youtube.feeds.videos , it returns a result ( https://github.com/fvdm/nodejs-youtube#feedsvideos ). How do I get only certain fields from the result (such only id, title) and not the entire thing. 
04:21 < ljharb> nikkubhai: just take the fields you want from the object?
04:24 < nikkubhai> ljharb:   Yes. How to take only the fields I want?
04:24 < ljharb> nikkubhai: i don't understand the question. to take any fields you have to explicitly specify them. so just specify the ones you want.
04:24 < ljharb> or just ignore the ones you don't want. it doesn't hurt that they're there.
04:25 < nikkubhai> ljharb: In this function https://github.com/fvdm/nodejs-youtube#feedsvideos
04:25 < nikkubhai> what do I write instead of console.log
04:25 < ljharb> you pass in a function that takes the results as an argument?
04:26 < ljharb> you may want to learn a bit more about javascript before continuing.
04:26 < ljharb> console.log is just a function that prints its arguments to the console. function (data) { console.log(data); } would do the same thing
04:30 < nikkubhai> ljharb, that returns null
04:30 < ljharb> undefined actually
04:30 < ljharb> but the function you pass into that library doesn't need a return value. it's a callback'
04:33 < nikkubhai> I had the same problem last time too. 
04:34 < nikkubhai> ljharb, If you a few min, can you show me the code to console log only few fields. Maybe then I will understand
04:34 < nikkubhai> if you have a fe minutes* Thanks
04:35 < ljharb> function (data) { console.log(data.updated, data.totalItems, data.items[0].id); }
04:35 < ljharb> only takes a few seconds :-p
04:36 < nikkubhai> ljharb, Thanks :) 
04:36 < nikkubhai> It gives:  TypeError: Cannot read property 'updated' of null :/
04:37 < ningu> nikkubhai: data is null
04:37 < nikkubhai> ningu, Yes. But it should not be null :/
04:37 < ningu> well I have no idea where it's coming from
04:38 < nikkubhai> ningu, https://github.com/fvdm/nodejs-youtube#feedsvideos
04:39 < ningu> ok, still don't really know the context
04:42 < nikkubhai> ningu: I am using a function youtube.feeds.videos which gives a result as shown in  https://github.com/fvdm/nodejs-youtube#feedsvideos . I want to choose only a few fields from the result. not the entire result.  JFYI, please note , that I am complete noob
04:42 < ChrisPartridge> could be an issue with the library nikkubhai
04:42 < ChrisPartridge> pastebin/gist your code
04:43 < ningu> nikkubhai: I would assume the callback takes args (err, data) like usual for node
04:43 < ningu> make it function (err, data)
04:46 < nikkubhai> ningu: oh yes. It worked. :) ljharb: ningu: Thank you so much.
04:46 < RobW_> Yeoman uses a simple function with connect.static(dir) multiple times to serve multiple directories with the middleware. I'm guessing this makes the node server think that dir1 and dir2 are both in the root of the same server. Correct?
04:47 < ChrisPartridge> RobW_: it just searches the directories in order they are added to the stack
04:48 < RobW_> ChrisPartridge: Thanks, that's exactly what I wanted to know.
04:48 < RobW_> Damn #node, you so helpful.
05:01 < Technodrome> so with ejs there is no concept of layouts or blocks right?
05:09 < ningu> Technodrome: nope
05:10 < Technodrome> so jade it is! 
05:10 < Technodrome> not like i ever used ejs, but still 
05:10 < Technodrome> looks like all ejs has is an include
05:10 < Technodrome> i guess they wanted to keep it minimal, maybe the best option for that project 
05:10 < ningu> yeah, ejs is more general-purpose
05:10 < ningu> works with any text file
05:10 < ningu> jade is for html
05:12 < substack> I just use regular html
05:12 < ningu> substack: and then what?
05:12 < substack> plus these libs: https://github.com/substack/hyperglue https://github.com/substack/hyperstream
05:12 < substack> what do you mean then what?
05:12 < substack> I just have html and I update it with libs
05:12 < ningu> well I assume you aren't just serving static pages
05:12 < ningu> ok
05:12 < ningu> that's the part I meant
05:13 < ningu> hmm, hyperglue is exactly what that guy was looking for on here a couple months ago, more or less
05:14 < substack> here's an example of using both of those: https://gist.github.com/substack/5573862
05:14 < substack> hyperglue also works in browsers
05:14 < substack> it's an especially good fit with brfs
05:14 < ningu> I prefer not using css classes for anything but layout
05:15 < substack> I've grown to like this style
05:16 < substack> I can just write ordinary html
05:16 < ningu> it makes it easier to separate display from manipulation, which is useful (I think) because they are implemented in different places
05:16 < ningu> not because they are actually totally unrelated
05:16 < ningu> I've been using angularjs for a project and I like it
05:17 < ningu> to me, jade feels like html in an easier to read format -- rather than a genuinely different language
05:17 < ningu> substack: how do you handle whether or not to do entity encoding?
05:19 < ningu> any templating system that can't distinguish the two is worthless for all intents and purposes, as far as I'm concerned
05:19 < ningu> and if it makes you do it manually i.e. never encodes entities... well, then you can make it work but it's very annoying
05:20 < ningu> but always encoding without being able to turn it off in individual cases is going to be a problem
05:20 < Technodrome> ningu: i envy you're node.js experience in some ways :) 
05:21 < substack> ningu: { 'div.a': 'text goes here' } automatically entitifies
05:21 < substack> and you can do { 'div.a': { _html: 'html goes here' } } if you want raw html
05:21 < ningu> ah, right
05:21 < ningu> that seems totally sensible
05:21 < substack> and you can use _text if you also want to set attributes
05:22 < ningu> Technodrome: what I was just saying was about templating systems, not node
05:22 < Havvy> ningu: Jade feels like a different language to me.
05:23 < ningu> Havvy: fair enough, maybe I just find the mental transform to be simple enough
05:23 < ningu> to me jade is like html without having to worry about details like close tags and entities
05:23 < Havvy> Yeah, the compilation algorithm is easy to understand.
05:23 < Havvy> And you could write Jade as if it was HTML.
05:23 < ningu> and I like how it strips out all of the whitespace for you
05:24 < Havvy> But that's just a special case of Jade.
05:24 < Havvy> You can't write HTML as if it was Jade though.
05:24 < ningu> it's only very occasionally that jade's output has surprised me at all
05:24 < ningu> so it basically doesn't get in my way, but makes a few common things easier
05:24 < Technodrome> ningu: yes i know, just saying in general though
05:25 < Technodrome> ningu: i'm pretty new as you can see, not to programming or web, but node is a bit of a different world, similar world but different
05:25 < ningu> I have a much stronger opinion about which templating systems are bad than which are good though
05:25 < ningu> there seem to be a number of different ones which are all pretty good
05:26 < Havvy> ningu: If a template system doesn't have template inheritance, I get annoyed.
05:26 < ningu> Havvy: if I'm building a full site, yes. that isn't always what i'm doing :)
05:27 < ningu> for example, say I want to generate a config file (e.g. say I'm writing a generator like the 'express' script), I might use ejs
05:27 < ningu> I have a node app that generates a pdf from LaTeX source and I used ejs for that
05:27 < Havvy> Yeah, that could work.
05:28 < Havvy> Basically using EJS as a JSON->X tranformer.
05:29 < ningu> Havvy: I think of it more like, you have a text file in some arbitrary format and you want to interpolate a few variables or do a few loops
05:30 < ningu> handlebars would work too
05:30 < ningu> that reminds me, I never quite understood the "templates much be logicless" thing
05:31 < ningu> I guess if you want your templates to be *fast* i.e. they're rendering in the browser, sure
05:31 < Havvy> ningu: Seperation of concerns.
05:31 < Havvy> It's more a 'should' than a 'must'.
05:31 < ningu> I understand that's the motivation, but what if it's *display* logic?
05:31 < Havvy> Display logic?
05:31 < AAA_awright> Template inheritance?
05:32 < Havvy> AAA_awright: block & extends  in Jade.
05:32 < ningu> yeah, like... display it this way for a logged in user and that way for a non-logged in user
05:32 < AAA_awright> I wasn't aware Jade had that
05:32 < AAA_awright> But what good reason is there for that, anyways
05:32 < ningu> AAA_awright: jade would be really annoying without it
05:32 < Havvy> AAA_awright: You can make a file that contains your header and footer, and make your content pages extend it.
05:33 < ningu> yeah, and since each content pages declares what it extends from, you can do it as flexibly as you want
05:33 < ningu> page*
05:33 < AAA_awright> I do all of that without "extends"
05:33 < ningu> with what, include?
05:33 < ningu> I find it much more maintainable to use inheritance
05:33 < AAA_awright> Was that added too?
05:33 < ningu> incldue has its place
05:34 < ningu> include*
05:34 < ningu> both have been there as long as I've been using jade
05:34 < ningu> which is about 15 months :)
05:34 < Havvy> ningu: I would just have two different templates: one for logged in users, one for logged out users.
05:34 < AAA_awright> Well nonetheless, if you find yourself needing such expressions, it's probably because your application is too rigid
05:34 < AAA_awright> Havvy: That's what if/else is for
05:34 < ningu> Havvy: hmm... yes, that can be ok
05:34 < Havvy> AAA_awright: It depends on how much unique content there is.
05:35 < ningu> I don't know how to draw the line there, if it's line one line that's different I wouldn't make a separate template
05:35 < AAA_awright> Or like me, you include a menu for logged in users to see, and have a default menu if there's no other menu to show (because no user is logged in)
05:35 < AAA_awright> There's no distinct notion of a "logged in user template"
05:35 < devnill> I just installed express.js and the express executible now creates the app without any whitespace. Is there a way to have it create formatted text?
05:35 < ningu> AAA_awright: anyway include/extends has nothing to do with the rigidity of your application. it's about reuse
05:35 < Havvy> Though yeah, the logic has to exist somewhere.
05:36 < AAA_awright> ningu: I don't reuse any code and I don't need such constructs
05:36 < ningu> AAA_awright: well then you have a very simple site, not a non-rigid one
05:36 < Havvy> if (loggedin) { include 'loggedin'; } else { include 'loggedout' }
05:36 < ningu> devnill: I don't understand what you mean. what file has whitespace?
05:37 < AAA_awright> ningu: No, it's rather complex, it does block regions, menus, multiple content types, footers, the works
05:37 < ningu> AAA_awright: but nothing is ever the same on any page?
05:37 < AAA_awright> What do you mean?
05:37 < AAA_awright> There's a theme, yes, it's largely the same from page to page
05:37 < devnill> ningu: in the past when i used the express executable it would create a directory structure with the basic structure. It still does that but all of the files are missing hard returns and formatting so its a single line of code.
05:37 < ningu> no header is shared across any pages, no menu, no footer, every page component is unique?
05:38 < AAA_awright> There's a single main template, there's exactly one instance of an <html> tag
05:38 < ningu> AAA_awright: so if you aren't storing the consistent parts in one place, you are making your site less maintainable
05:38 < AAA_awright> It defines a number of regions that content may be inserted into, which themselves often have multiple components like menus
05:38 < ningu> devnill: I have no clue why that might be, I've never seen that. sounds like a bug or something strange in your environment
05:38 < AAA_awright> ningu: How does that follow
05:38 < AAA_awright> ningu: I think you misunderstand something I'm explaining
05:39 < devnill> I'll try their room. Thanks for the help ningu 
05:39 < AAA_awright> There's a SINGLE main document template
05:39 < ningu> AAA_awright: how do you use the template?
05:39 < ningu> express removed layouts in v3
05:39 < AAA_awright> What do you mean?
05:40 < Havvy> AAA_awright: Let's say you had a sample page that had content "Hello World".
05:40 < AAA_awright> I use it like any other template, "Render X template with A=B, C=D, etc"
05:40 < Havvy> What does it look like?
05:41 < ningu> AAA_awright: so basically, you have foo.jade and every page does res.render('foo', { ... })?
05:41 < AAA_awright> http://git.bzfx.net/~aaa/magnode.git/plain/theme/twentyonetwelve/DocumentHTML_typeHTMLBody.jade
05:42 < AAA_awright> ningu: Well how else do you render a template?
05:42 < AAA_awright> I don't do that by hand for every content type
05:42 < ningu> AAA_awright: do you have any other templates? or just one jade file for the whole site?
05:42 < AAA_awright> http://git.bzfx.net/~aaa/magnode.git/plain/theme/twentyonetwelve/HTMLBody_typePost.jade is used for both static pages and blog posts, and possibly other types
05:44 < ningu> so where does the <html> tag come from in HTMLBody_typePost.jade?
05:45 < AAA_awright> That specifies how to render a piece of content for inclusion in the HTMLBody region of a document. I could specify other templates and include content from that blog post elsewhere in the document. This is how I render the <title /> tag, for instance
05:45 < ningu> ok but how does it get *into* the body?
05:46 < ningu> there is nothing that includes it in http://git.bzfx.net/~aaa/magnode.git/plain/theme/twentyonetwelve/DocumentHTML_typeHTMLBody.jade
05:46 < AAA_awright> It's inserted as the HTMLBody region of the former template I linked to
05:46 < ningu> what inserts it?
05:46 < AAA_awright> Jade? What do you mean? How does one normally insert content into a template?
05:46 < ningu> oh, your input["http://magnode.org/HTMLBody"]
05:46 < ningu> you store it in a variable or something
05:46 < AAA_awright> Yeah
05:47 < ningu> definitely not how one normally does it in jade :P
05:47 < ningu> normally would be include
05:47 < ningu> so you have code somewhere that calls jade to compile your template and store the resulting string in the input variable?
05:47 < AAA_awright> That assumes you know everything about the document you could possibly need, since Jade of course doesn't render asynchronously
05:47 < AAA_awright> I can't make that assumption
05:48 < ningu> well, you aren't rendering asynchronously either
05:48 < AAA_awright> ningu: That's how it works internally, yeah
05:48 < ningu> you have to fill up the input variable first
05:48 < Havvy> AAA_awright: Look at layout and index.
05:48 < AAA_awright> So specifically how it works, is I have a blog post, right, among other types of content I could have
05:49 < ningu> AAA_awright: your way works, but I can't think of any advantage to it under any normal situation
05:49 < ningu> you may actually have an abnormal situation but I doubt it
05:49 < ningu> yes, and you have to call the database or whatever to retrieve the content and ...
05:50 < AAA_awright> ningu: Because I could never figure out how a main template decides which sub-template
05:50 < Havvy> AAA_awright: The main template doesn't.
05:50 < AAA_awright> You'd normally end up with a massive switch block for "case 'blog': include blog.jade; break;" etc
05:50 < ningu> AAA_awright: that's from your controller method.
05:50 < ningu> res.render('sometemplate')
05:50 < Havvy> You would just write 'block content' or something there.
05:51 < Havvy> And then your subtemplate would extend your layout, and fill that block in with what it has.
05:51 < Havvy> https://github.com/Havvy/mdWiki/blob/master/views/layout.jade
05:51 < ningu> sometemplate would have "extends layout" at the top, or whatever your layout template is called.
05:51 < Havvy> https://github.com/Havvy/mdWiki/blob/master/views/index.jade
05:52 < Havvy> Then, when I show the index, i just res.render('views/index.jade') or whatever it is.
05:52 < ningu> AAA_awright: Havvy's example is 100% normal jade ;)
05:52 < AAA_awright> Chrome isn't cooperating with me, can you paste the relevant line?
05:52 < ningu> it's only a few lines but a bit too long to paste
05:53 < ningu> layout.jade: html >> body >> block content
05:53 < ningu> where >> is an indent on the next line
05:53 < ningu> index.jade: extends layout \n block content >> h1= title
05:53 < ningu> index.jade will be the same as layout.jade but with the content block redefined
05:54 < AAA_awright> So you're doing explicitly what I'm doing generically
05:54 < ningu> that's what "extends" means
05:54 < ningu> AAA_awright: I would say more like doing systematically and sensibly what you're doing in a brittle and ad-hoc fashion
05:54 < AAA_awright> I specify in a function call I want to take this JSON and render it into an HTML Document, or anything else, like a plain text document or JSON even
05:54 < AAA_awright> I have this JSON of a blog post, and I say "render into application/xhtml+xml;charset=utf8;theme=mytheme"
05:55 < ningu> I've written ad-hoc solutions like yours before and they are not fun to maintain
05:55 < AAA_awright> It's not ad-hoc, it's a complete template system
05:56 < AAA_awright> Not only does it do the partials like you're describing, but it'll render it into any format that has a described method of formatting
05:56 < AAA_awright> I could render out a summary of a blog post, or a complete blog post, or an RSS item, or a complete HTML document, etc
05:56 < ningu> AAA_awright: you are including one template in another, without being able to deduce that from reading the templates. that is not a complete template system, it's a template system you've made dependent on something else putting the pieces together
05:57 < AAA_awright> ningu: Well if Jade has Jade-specific metadata now then I can use that, but nonetheless I DO use metadata like you describe
05:57 < ningu> what do you mean by jade-specific metadata?
05:58 < ningu> also, I don't really see how your approach makes the different formatting outputs any easier to achieve than just by writing a separate jade template for each, passing the same data
05:58 < AAA_awright> By saying "block xyz" you're defining the domain of that template, what it may be inserted into
05:58 < AAA_awright> That's metadata
05:58 < AAA_awright> The range, rather
05:58 < ningu> oh, you could always put the contents of the block into a separate file if you wanted to and include it
05:58 < ningu> if you wanted to be able to insert it somewhere else or use it on its own
05:59 < AAA_awright> Actually block can define both a domain and range, whatever
05:59 < ningu> not sure what you mean by either
05:59 < ningu> but it doesn't ultimately limit you since you are in charge of what template files to have and you know what pieces you want to use in what ways
05:59 < AAA_awright> Well, you have "article.jade"
05:59 < ningu> so if you want to be able to reuse it, make it its own file
06:00 < AAA_awright> er, bad example
06:00 < ningu> yes, and...?
06:01 < AAA_awright> You have "index.jade", when Jade processes it, it will output one function, that function has a domain (takes an input of) an Object, and it produces an HTML string, specifically, an HTML string of type "block content"
06:01 < qwerty|> 4
06:01 < HeartOfAce> soâ€¦ I got a programming problem for an interview, and I did it with node.js, does anyone wanna take a look and give feedback? :D https://gist.github.com/cesarandreu/bd16e6e3cd4e0e1da4be
06:01 < qwerty|> 2
06:01 < AAA_awright> the output being the range, right
06:02 < AAA_awright> It doesn't make sense to feed an HTML document to the "block content" portion of layout.jade since that doesn't match its domain
06:02 < AAA_awright> What I do is make this information explicit
06:03 < ningu> AAA_awright: yes, it's clear as mud in your example
06:03 < Havvy> You can turn an html block into jade via a jade file that is `include somefile.html`
06:03 < Havvy> And yeah, your Jade templates are not readable to me or ningu.
06:03 < AAA_awright> What part, it's a subset of the syntax you use
06:04 < ningu> in a sense you are right -- if you don't look at layout.jade, you don't really know what's happening to block content, i.e. you don't know the details of how it will be inserted.
06:04 < ningu> but that's a feature, not a bug -- it lets you maintain the two separately, which only fails if you make some major change to your layout.
06:05 < ningu> like splitting the layout's block content up into block one and block two or whatever.
06:05 < AAA_awright> I'm not claiming you need to know the details, quite the opposite
06:05 < Havvy> HeartOfAce: I have an issue with it. There's no clearly defined functions.
06:06 < Havvy> You should have your algorithms in clearly defined functions.
06:06 < HeartOfAce> Hmmm
06:06 < HeartOfAce> I see
06:07 < ningu> HeartOfAce: also, I would use fs.readFileSync for reading in stuff at the beginning unless for some reason I need async
06:07 < ningu> but that's kind of minor
06:07 < HeartOfAce> I thought about that
06:07 < Havvy> ningu: I'd keep is async still.
06:07 < ningu> similarly you don't want the main program in that huge else block
06:07 < HeartOfAce> It was originally sync, but I changed it async 
06:07 < ningu> Havvy: how come?
06:08 < HeartOfAce> the issue with doing it sync is that if it fails it'll just crash
06:08 < Havvy> ningu: Why go out of my way to make it syncronous?
06:08 < ningu> hmm
06:08 < AAA_awright> ningu: I don't have the luxury of assuming I will be working exclusively in Jade, or . All I say is "This is a method of taking a Blog post, and formatting it into a well-formed HTML body", and entirely seperately, I say "This is a method of taking an HTML body, a DocumentTitle (and various other regions) and formatting it into an HTML Document"
06:08 < ningu> Havvy: simplicity really, but the error handling is a good point
06:08 < Havvy> You can use try {} catch () {} with the sync version.
06:09 < AAA_awright> And it doesn't even stop there, I actually format this directly into an HTTP response. So I can produce error pages that are formatted using this mechanism, and they return an appropriate error code.
06:09 < Havvy> JSON.parse(JSON.stringify(defaultIteration));
06:09 < Havvy> This is a *really* inefficient way to copy an object.
06:09 < SrPx> Hey guys, I've tried uglifyjs but I noticed it is not really compressing (removing var names and all), just removing newlines and such. What option should I use for it to compress the most?
06:09 < AAA_awright> Havvy: And error-prone
06:09 < ningu> AAA_awright: to me it sounds like you are mixing up template logic with application logic, and claiming that doing so makes your code more flexible, whereas in reality your current code is just as dependent on jade as if you had done it my/Havvy's way.
06:10 < HeartOfAce> Havvy: I googled around and it came out as a pretty fast approach
06:10 < Havvy> !clone
06:10 < AAA_awright> ningu: Weren't you the one saying why's everyone complaining about logic in templates
06:11 < ningu> AAA_awright: no, what I'm saying is your template logic should be *in your templates*
06:11 < AAA_awright> First, how do you jump to the conclusion that I'm doing that, and second, how is that necessarially bad?
06:16 < ningu> I'm not jumping to the conclusion, it's clearly what's going on in the templates your showed me
06:16 < Havvy> HeartOfAce: You can use node modules, right?
06:16 < ningu> it just says "in a language of your choice"
06:16 < AAA_awright> What do you refer to?
06:16 < HeartOfAce> I don't see why not; but I think they just wanna see if I can solve it @_@
06:16 < ningu> AAA_awright: the input["http://whatever"] is your version of an include
06:16 < AAA_awright> Selectively enabling and disabling parts of a template promotes code re-use
06:16 < ningu> the logic for that include is not in your templates
06:16 < AAA_awright> What logic?
06:16 < ningu> AAA_awright: where did the input variable come from? what file does the template come from and how can I find it? none of that is inferrable from reading the template.
06:16 < Havvy> HeartOfAce: Yeah, don't use a module for the algorithm itself, but cloning an object could use one.
06:16 < ningu> you have to go into your application for that.
06:16 < AAA_awright> ningu: That's not the template's consern; all the template cares about is that it defines how to format data of that type: It formats an HTMLBody into an HTML Document
06:16 < ningu> or make it so you don't have to clone, if you can :)
06:16 < AAA_awright> Other mechanisms then come in and see "Ah, here is a function (in the form of a Jade template) that can format data that I have"
06:16 < ningu> AAA_awright: but the body is another template. if you have two templates you want to hook up together, why not use a templating system to do it?
06:16 < AAA_awright> Because this does the same thing, without locking a person into a specific template system.
06:16 < ningu> and given that we're talking about an html document and an html body could only be, well, html, then I fail to see what flexibility you gain in allowing an arbitrary source for that
06:16 < AAA_awright> Like I said, I don't have the luxury of assuming that everyone will use Jade for everything
06:16 < AAA_awright> What do you mean arbritrary source?
06:17 < ningu> well, if you want users of your app to be able to use any templating system, I suppose that makes sense
06:17 < quang> hi
06:17 < AAA_awright> That's kind of the point, any one in the world can see "Ah, this man's function can format this data I have"
06:17 < quang> i need help intergrating stripe using nodejhs
06:17 < quang> js
06:17 < AAA_awright> (or at least, claims to be able to)
06:18 < AAA_awright> Note that my template uses URIs: It's not application-specific. If I wanted to re-use the same template across all my sites, I could.
06:18 < quang> im goettin gkinda confused
06:18 < AAA_awright> I could say "Format to theme=1" for one website, and "format to theme=2" for another website, and re-use all the remaining templates as they are
06:18 < ningu> AAA_awright: I can see how it might make sense if you want to mix outputs from a bunch of templating systems
06:19 < ningu> but you are nonetheless imposing an api of sorts on all of the templating systems
06:19 < ningu> in the form of the input variable that contains template outputs
06:19 < AAA_awright> It doesn't necessarially have to be the case
06:19 < AAA_awright> That's just the simplest way, for now
06:20 < AAA_awright> The other advantage is that my system can support multiple inputs at once
06:20 < ningu> the bigger issue here, I think, is that it's very hard to write an app with all of its logic and not have it in any way dependent on the template system you've chosen
06:21 < ningu> you can reduce the interdependence but to eliminate it completely in a clean way is not easy
06:22 < AAA_awright> ningu: I levy the same argument at Jade; it's very hard to write an app with all of this logic and not be locked into Jade for other templates
06:22 < AAA_awright> There's nothing stopping me from parsing and using these Jade-specific tags, I haven't gotten around to it yet
06:23 < ningu> it sounds like you've basically offloaded a certain bit of the template logic to your application because that's the part you want to control, leaving the templates to themes or other users or whatever
06:23 < AAA_awright> How would one render a list of multiple blog posts? It doesn't appear you can do that with 'extends'
06:23 < ningu> what format are the blog posts in?
06:23 < AAA_awright> Otherwise arbritrary Jade, same template for each one
06:24 < ningu> anyway, not knowing in any more detail what it consists of you'd do something like, for post in posts >> div=post.text
06:24 < ningu> or whatever
06:25 < ningu> you could make the contents of the loop its own file
06:25 < ningu> i.e. for post in posts >> include single_post
06:25 < AAA_awright> So that's about the same then, cool
06:26 < ningu> yeah, you can do partials from js instead of within templates and put the output together yourself
06:26 < ningu> I find that style to be pretty ugly
06:27 < ningu> but if you want to be able to enforce that loop, but make the individual post be rendered by an arbitrary templating system, I guess you can do it that way
06:27 < ningu> I'm not really sure what that buys you
06:28 < AAA_awright> ningu: So it appears this application uses Markdown, what I'd do is I'd annotate the Markdown files with metadata like "Type: Wiki page\nTitle: Page Title" or whatever,
06:28 < AAA_awright> and I'd have formatting functions -- not Jade, something else -- specify how to format an HTMLBody and DocumentTitle from it. And now you have a single render operation called from your code, to produce a fully marked-up HTML Document.
06:29 < ningu> AAA_awright: you mean it stores its data in markdown? or what?
06:29 < AAA_awright> ningu: Referring to Havvy's GitHub
06:29 < ningu> oh
06:30 < Havvy> AAA_awright: Will use markdown. :P
06:30 < Havvy> It's highly highly unfinished.
06:30 < ningu> he does have a single render operation
06:30 < AAA_awright> What do you mean?
06:30 < AAA_awright> Well
06:31 < ningu>   res.render('index', { title: 'Express' });
06:31 < AAA_awright> The content of that page is ultimately derived from MarkDown
06:31 < Havvy> Sure. Jade understands markdown.
06:31 < AAA_awright> So at some point there's two operations, page_data = parse_markdown(document); and document_html = render_document(page_data)
06:32 < AAA_awright> Only literally escaped?
06:32 < ningu> AAA_awright: you can pass functions to your templates.
06:32 < ningu> so if jade didn't have a markdown filter, you would just pass parse_markdown to your template and then do parse_markdown(foo) from within it.
06:32 < AAA_awright> I guess that works, it's just moving the code around
06:33 < ningu> AAA_awright: yes, in order to make template logic be in the templates :)
06:33 < Havvy> Decides. Jade isn't there to transform user input.
06:33 < ningu> to the extent possible.
06:34 < ningu> Havvy: I think you accidentally a word
06:34 < Havvy> I put a period where I wanted a comma.
06:35 < AAA_awright> I don't see a problem with writing Markdown-parsing code in Jade, really. So long as it's sufficently modularized.
06:35 < ningu> beginning a sentence with "decides" is not grammatical. :)
06:35 < Havvy> I type as I would speak.
06:36 < ningu> ok. well I don't know what you meant to say in any case.
06:37 < AAA_awright> Havvy: Personally I'd just use HTML, _maybe_ with a modification that two newlines create a <p>paragraph</p>
06:37 < AAA_awright> And you have to parse the HTML anyways for links, metadata, and such
06:37 < Havvy> AAA_awright: The mdWiki project is a prototype for a more ambitious project.
06:37 < AAA_awright> Describe your more ambitious project for me
06:38 < Havvy> You know what Semantic Mediawiki is, right?
06:38 < Havvy> Also, an HTML parser is more complicated than a Markdown parser.
06:39 < AAA_awright> Yeah, I've used it
06:39 < AAA_awright> Yeah, I've done that too, it involves stepping through the DOM tree and looking for elements, modifying them
06:40 < AAA_awright> Checking <a> tags to see if the target page exists and classifying them based on the target page
06:40 < AAA_awright> You have to do that regardless of input format, so you may as well do it for HTML
06:41 < Havvy> AAA_awright: Yes, but then I'm doing DOM operations...
06:42 < AAA_awright> Havvy: I'm assuming you're doing any parsing of the MD at all (testing if the links are valid, etc)
06:43 < AAA_awright> DOM is probably the more useful of the traversal APIs, if anything
06:43 < Havvy> When I get to that point, yes.
06:43 < AAA_awright> Though I don't think I used it, I think I used some JSON structure
06:43 < Havvy> To be honest, I'm not trying to get a feel for parsing from it.
06:44 < Havvy> I'm probably going to go the ugly short route of doing regexes.
06:45 < AAA_awright> DOM traversal should be so much easier... page.getElementsByTagName('a'), then element.className="whatever you choose"
06:46 < quang> hi guys can u explain what is a route handler in node js
06:52 < ChrisPartridge> quang: node doesn't have any route handling in the core, as far as I'm aware, but there are plenty of modules on npm - are you looking at a specific module?
07:13 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
07:33 < durre> I wanted to use nodejs for writing an executable script (like bash). node can be installed in lots of different paths but it seems I have to specify exactly where it is. like #! /Users/durre/nvm/v0.8.16/bin/node â€¦ is there a way around this?
07:33 < greelgorke> morning folks
07:35 < greelgorke> durre: if you type which node what do you get?
07:35 < ljharb> durnik: nvm doesn't work well with global node modules
07:35 < durre> greelgorke: /Users/durre/nvm/v0.8.16/bin/node â€¦ but most people don't use that path, and I want them to be able to use the same script
07:36 < ljharb> durnik: just assume that `node` is in their PATH
07:36 < ljharb> if it's not, they can't expect to use anything anyways.
07:36 < greelgorke> ich which node worked, then just type node and nodeon
07:36 < greelgorke> ich -> if
07:37 < durre> I dont want to execute it like "node myscript.js" â€¦ I want to use "./myscript". it will be used kind of like a git hook
07:39 < ckknight> durre: #!/usr/bin/env node
07:39 < greelgorke> what he said
07:39 < greelgorke> or she?
07:39 < greelgorke> whatever :D
07:40 < durre> ckknight: thanks! exactly what I was looking for
07:40 < ckknight> greelgorke: I find it's best to assume male unless the name is potentially abiguous or obviously female
07:40 < ckknight> on the internet, at least
07:40 < [AD]Turbo> ciao all
07:40 < greelgorke> why that?
07:40 < ckknight> ends up being correct most of the time.
07:41 < AAA_awright> It used to be if they walked in talking about ponies you could safely assume otherwise
07:41 < AAA_awright> A man can't even assume that anymore!
07:41 < ljharb> ckknight: that's an unsafe, and bigoted assumption. please don't.
07:41  * AAA_awright ducks
07:41 < ljharb> greelgorke: use "they" if the person has not explicitly indicated to you with which gender they identify.
07:41 < ckknight> yeah, I'd agree with that sentiment.
07:42 < AAA_awright> "they" is appropriate if talking about a single but arbritrary individual
07:42 < durre> in sweden we have the words han (he), hon (she)â€¦ and now we're trying out the word hen (he or she). quite practical :)
07:42 < ckknight> I'm gonna request you use the pronoun "glork" with me, greelgorke
07:42 < AAA_awright> If addressing a specific individual, that's probably not appropriate
07:42 < ljharb> "they" has been a singular genderless pronoun in english for hundreds of years. it's just not commonly used.
07:42 < greelgorke> i think safest is to just use the name
07:43 < AAA_awright> Just use the name
07:43 < ckknight> greelgorke: that's true
07:43 < greelgorke> so again: waht ckknight said
07:43 < purefan> Name FTW!! :P
07:43 < AAA_awright> Is ljharb a linguist expert or is they... or is ljharb... see there's no way you can phrase that
07:44 < ckknight> AAA_awright: he or she
07:44 < ljharb> the former was just fine.
07:44 < ljharb> and please do NOT use "he or she"
07:44 < AAA_awright> ljharb: I'm a he, not a thing
07:44 < ljharb> that suggests there are only two genders. which is entirely incorrect.
07:44 < greelgorke> s/he ?
07:44 < AAA_awright> I'd take offense to that
07:44 < ckknight> ljharb: yeah, also true
07:44 < purefan> how about "he (X)OR she" xP
07:44 < ckknight> purefan: that's incorrect
07:44 < ljharb> AAA_awright: and you, like everyone else, gets to indicate the pronoun you wish. before you do so, it's offensive for someone to assume your gender.
07:44 < ckknight> purefan: in the case of bigenderism
07:45 < AAA_awright> ljharb: The only thing that I'm suggesting is that there's two human pronouns in gemanic languages
07:45 < AAA_awright> He, and she.
07:45 < ljharb> AAA_awright: and that's an incorrect statement in english. i can't speak to german.
07:45 < ckknight> AAA_awright: there's also "one", but it's not used in the same place
07:45 < purefan> ok, then "he | she" is more accurate?
07:45 < ckknight> one can use the word "one" as they please
07:45 < ljharb> purefan: no, please avoid gendered terms unless someone has indicated their preferred pronoun to you.
07:45 < ljharb> "one" works as well
07:46 < ckknight> or as one pleases
07:46 < ckknight> but "one" doesn't refer to a specific person
07:46 < AAA_awright> ckknight: "one" is different I think, you can't use "he" even if you know "one" would only refer to a male
07:46 < ljharb> AAA_awright: fwiw, shakespeare uses "they" as a genderless singular pronoun, so it's at least 500 years old.
07:46 < ljharb> http://en.wikipedia.org/wiki/Singular_they
07:46 < ljharb> "one" is as genderless as "they".
07:46 < AAA_awright> I'm familiar with singluar they, but you don't use it to refer to specific individuals
07:46 < greelgorke> we're lucky to use english here anyway. in some languages even verbs has gender components. i.e. russian 
07:47 < AAA_awright> I champion it myself
07:47 < ljharb> AAA_awright: in fact, you do use it for that. it's not common, but it's the only choice if you don't want to appear bigoted, or offend others.
07:47 < AAA_awright> I can refer to e.g. the class of nurses, If a nurse walks into a bar, they may...
07:47 < sambarino> lolwut... didn't expect to find this discussion when i looked at this window
07:47 < ckknight> greelgorke: and a lot of our nouns are genderless
07:47 < AAA_awright> That's an example of singular they
07:47 < ckknight> e.g. teacher
07:47 < purefan> ok ok, I was mostly trying to be funny. *walks back to the corner and sits quietly*
07:47 < ljharb> AAA_awright: you can also refer to one nurse. and say "they are a nurse" indicating a specific person.
07:48 < ljharb> gender is only implied by "they" if you have your own unconscious biases.
07:48 < AAA_awright> Or other nouns even, "A postman walks into a bar, and they order..."
07:48 < ckknight> I think the terms are "nurse" and "male nurse", respectively
07:48 < ckknight> jk, I know that's terrible
07:48 < greelgorke> purefan: not a good time to be funny about that topic. at least since the pycon accident :)
07:48 < ljharb> ckknight: let's save the jokes for when people no longer need education on being unintentionally offensive :-)
07:49 < purefan> hehehe yeah I guess you're right :) I'll just go back to work for a while
07:52 < AAA_awright> This must be some usage of the term "XOR" of which I was previously unaware
07:52 < ckknight> AAA_awright: hmm?
07:53 < AAA_awright> <purefan> how about "he (X)OR she" xP
07:53 < ckknight> it's actually also not correct
07:53 < ckknight> Here's a good image that explains it pretty well: http://itspronouncedmetrosexual.com/wp-content/uploads/2012/03/Genderbread-2.1.jpg
07:54 < AAA_awright> Ugh Chrome acting up
07:54 < ljharb> that is a good image
07:58 < AAA_awright> ckknight: I don't follow
07:58 < ckknight> follow what?
07:58 < AAA_awright> You have your choice of pronouns, "he" or "she", pick one
07:58 < ckknight> yeah
07:58 < AAA_awright> So I don't see how one can say "not correct"
07:58 < AAA_awright> Not correct... what?
07:58 < ckknight> but in the case of a neutral or nonnormative gender identity, neither "he" nor "she" might be correct
07:59  * ChrisPartridge sighs
07:59 < ckknight> we live in a complicated world, but someone has to.
08:00 < AAA_awright> ckknight: I still don't follow; it's a pronoun, not a medical diagnosis
08:01 < ningu> AAA_awright: human language is not engineered; words are not well-defined for all cases
08:01 < ckknight> the pronouns were developed when the gender binary was thought to be all there was
08:01 < sambarino> personally i think it would be simpler if people used the pronoun they identified with the most, if you see yourself as a male then use he because then you know wtf you are talking about
08:01 < ckknight> it's not necessarily appropriate given certain edge cases
08:02 < AAA_awright> If one wants to take offense at pronouns fine, I can also take offense at people using my nickname on IRC or whatever, but that's not going to stop anyone from using it
08:02 < ningu> AAA_awright: that's like saying no one should object to ethnic slurs.
08:02 < ckknight> Yeah, I don't think it's a huge deal unless you know that someone prefers a different pronoun and you use the wrong one
08:02 < ningu> whether it stops people from using them isn't the (only) point.
08:02 < sambarino> ethnic slurs are objectively offensive not subjectively offensive
08:02 < ckknight> e.g. calling a transgender woman "he"
08:03 < ckknight> or "it", even worse
08:03 < AAA_awright> ningu: No? Slurs of any type are universally understood as purposefully provocative
08:03 < ningu> sambarino: none of this is objective. it's about the values we construct for ourselves as a society.
08:03 < ningu> we may or may not collectively decide not all people must identify as male or female.
08:03 < greelgorke> om man it getting kind of off-topic here now
08:03 < ningu> haha
08:03 < AAA_awright> Nonetheless, my simple philosophy at being offended: Don't
08:04 < ckknight> that's not a real solution
08:05 < ningu> it's a solution if everyone is independent of everyone else
08:05 < ningu> which they aren't :)
08:05 < AAA_awright> ckknight: So I should take offense at slurs thrown at me?
08:05 < AAA_awright> That doesn't seem very productive
08:05 < AAA_awright> That's the only point I make
08:06 < ckknight> taking offense is an emotional reaction, not an intellectual one
08:06 < ningu> AAA_awright: to the extent I was a member of a group being discriminated against, or saw the same for another group, I'd feel some obligation to rectify it to the extent possible
08:06 < ningu> yes, that's true too
08:06 < ningu> I guess that's a much more basic point :)
08:08 < AAA_awright> I'm not implying that I have no care, but still I can't be held liable because some person subjectively and arbritrarially decides they want to take offense at the word "ni" or "is" or whatever
08:09 < ckknight> first we have to define what "is" is.
08:09 < ningu> AAA_awright: no, but that's basically never the actual situation.
08:10 < ningu> everything has a context and some aspects of that context are generally clear
08:10 < AAA_awright> I should say, "it"
08:10 < ckknight> "it" can be very offensive if directed toward a person
08:10 < ckknight> it's dehumanizing
08:11 < tuhoojabotti> dehumidifier. 
08:11 < AAA_awright> No, like, the mere utterance
08:11 < AAA_awright> We're slowly but surely driving out the last of The Nights Who Say Ni out of this channel
08:11 < ningu> AAA_awright: there is no mere utterance.
08:11 < ningu> you are somewhere, something is happening, someone else is listening.
08:12 < ckknight> and you don't just say "it", you say "it" to refer to something.
08:12 < AAA_awright> Do tell me you know of The Nights Who Say Ni
08:12 < ningu> they are knights
08:13 < ckknight> I take offense, ningu
08:13 < AAA_awright> And hearing the word "it" causes, appearently, great physical pain. It looks like a number of people need to go watch Monty Python and the Holy Grail :p
08:17 <@Nexxy> wow
08:18 < ningu> Nexxy: that's one of the letters of the arabic alphabet but it's generally spelled waw
08:46 < ljharb> AAA_awright: you still continue to wrongly believe that "he" and "she" are the only singular pronouns in the english language. "they" is the third and has been since medieval times.
08:46 < AAA_awright> ljharb: I discussed all the ways in which you can use singular they, I think that's rather clear
08:47 < ljharb> right. but "he" is only correct if the individual you're addressing has explicitly identified as male.
08:47 < ljharb> as is "she" for female.
08:48 < ljharb> when it's unknown, "they" is the only appropriate choice. the fact that historically, people have often presumed a gender for others does not make it correct.
08:48 < ckknight> generally the only time "he" is gender-neutral is in archaic legal documents like the US Constitution
08:48 < ljharb> even then it's not gender-neutral.
08:48 < AAA_awright> Not that I necessarially agree, but if we're talking about languange since mideval times, he can also be gender-neutral, I think this was the original assertion that started the conversation
08:48 < ckknight> true, but we interpret it now as if it were
08:48 < ljharb> considering those documents were written when only men could own property and vote.
08:48 < ckknight> legally interpret, I mean
08:49 < ckknight> AAA_awright: the conversation started by the correct assumption that I was male
08:49 < ckknight> not that "he" was used neutrally
08:49 < ljharb> interpreting "he" as gender-neutral comes from the belief that men are superior to women, and as such, one should just assume that in any group, a male is present. that's archaic and should be avoided.
08:49 < ningu_> simple test: if you say "he's a nice dog" are you assuming the dog is male or not?
08:49 < ckknight> ljharb: absolutely, I was just giving an example.
08:49 < ljharb> the fact that some people consider it to be gender-neutral is cancelled out by the fact that some do not.
08:50 < ckknight> ningu_: I assume the dog is male.
08:50 < ckknight> but person saying such a thing could be mistaken.
08:50 < ningu_> and if you say "they're a nice dog"... well, I suppose if you can say that at all, then you aren't assuming a gender.
08:50 < AAA_awright> That's a nice dog, usually
08:50 < ningu> yeah
08:50 < dypsilon> are we having the gender discussion here again? i'm surprised there is still no blog post about that on nodejs.org
08:50 < ckknight> dypsilon: this one is primarily pronoun-based
08:51 < dypsilon> :)
08:51 < ljharb> dypsilon: it's just a basic human decency discussion. the problem is that many people don't realize they're being offensive, or that they're unintentionally trouncing on the identities and rights of others.
08:51 < ningu> when the animals become less human-like we tend to shift to "it", also occasionally for babies/fetuses
08:51 < ningu> calling an ant he/she would be... weird, unless you're engaged in ant research
08:51 < ckknight> "it's a boy"
08:51 < ckknight> ningu: I'd figure if you knew the gender, then you should use the gender noun
08:51 < dypsilon> i have no problem with martin fowler refering to a developer as "she" in most of his books
08:52 < ckknight> for example, mosquitos that bite are female
08:52 < ningu> ckknight: if a mosquito was buzzing around and bit someone and the person said "she bit me!" that would be... eccentric, to say the least
08:52 < AAA_awright> Or certain classes of objects, countries, ships, etc
08:52 < ckknight> ningu: I'd assume there would be more swearing involved
08:52 < AAA_awright> "She will not be defeated or taken down in battle!"
08:53 < ningu> Indonesian solves this problem by just having one singular pronoun for all things
08:53 < ljharb> dypsilon: that's because typically when fighting for equality, it's not useful to attack things that promote the oppressed group, or serve as a contrast to the privileged group.
08:53 < leichtgewicht> English has a nice, unoffending way to avoid this topic that requires you to type a little more: "He will be defeated" -> "This warrior will be defeated"
08:54 < Havvy> ningu: 'that'?
08:54 < ningu> Havvy: nah, there's a 'that' and a 'this' which are separate
08:54 < ljharb> leichtgewicht: it also has "they". there's no need to type more than 2 extra characters.
08:54 < AAA_awright> leichtgewicht: In which case you could have used 'they' to begin with: "They will be defeated" though it's not clear from context it's singular
08:54 < Havvy> While in school it is taught that 'they' is a plural form of 'it', 'they' also is the 'gender neutral' form of 'he' and 'she'.
08:55 < ningu> when speaking Indonesian with people I often have no idea if someone is a man or a woman until they show up
08:55 < ningu> or if I ask
08:55 < ningu> or possibly from their name, but that's iffy at times :)
08:55 < ljharb> asking is the only way you can know their gender, since it's up to them.
08:55 < ningu> ljharb: I'm talking about when a person is mentioned
08:55 < leichtgewicht> ljharb: I was talking about a particulate singluar. As in "Ningu is awesome, he will be rewarded" -> "Ningu is awesome. Ningu will be rewarded"
08:55 < ljharb> leichtgewicht indeed, that avoids the problem :-)
08:55  * leichtgewicht has no idea what gender ningu has
08:55 < ningu> hehe
08:56 < ningu> if you knew what my name meant, it would not help you
08:56 < ckknight> I assume ningu is a multi-gendered fungus-like creature
08:56 < AAA_awright> leichtgewicht: Which is awkward because you're not supposed to reuse proper nouns in the same paragraph, unless it would otherwise be ambigous
08:56 < ningu> since ningÃº in Catalan means "no one"
08:56 < ljharb> in a surprisingly on-topic swerve, it would be nice if more people joined https://www.gittip.com/for/node-js/ - it needs 50 more before the community can start showing stats
08:56 < AAA_awright> Even then, if it would be ambigious, usually you just break the paragraph
08:56 < leichtgewicht> You are not supposed to do so in polite speech and letters ... this is irc ...
08:57 < ningu> leichtgewicht: actually, it would be pretty damn weird in conversation too
08:57 < phrearch> hi
08:57 < AAA_awright> ljharb: What is it?
08:57 < ljharb> gittip? it's where anyone can sign up to gift money to any twitter/github/bitbucket account weekly. in addition, once signed up, one can receive gifts from others as well
08:58 < phrearch> i get a socket hangup in my app on the mongodb connection when its running for some time. could that have to do with me running it through sudo?
08:58 < ningu> hey, a node question
08:58 < ljharb> the idea being, it's a way for people to get rewarded for their open source work. which i think is good for the community.
08:58 < AAA_awright> ljharb: So far it looks like "Give $10 to the person left of you, and 30% to the house" Isn't that what e.g. Flattr is for?
08:58 < ljharb> flattr lets you pay websites
08:58 < ningu> phrearch: you shouldn't run your node app as root. but I doubt that's related to the problem.
08:58 < AAA_awright> Or BitCoin?
08:59 < ljharb> gittip lets you pay github or twitter accounts
08:59 < AAA_awright> *Bitcoin
08:59 < px> Maybe gittip could support bitcoin
08:59 < ningu> gitcoin!
08:59 < phrearch> ningu: i need it to run on port 80
08:59 < ljharb> they probably will if enough people ask
08:59 < ningu> I trademark it
08:59 < ljharb> AAA_awright: also it's not 30%, it's 30 cents a week per weekly withdrawal
08:59 < ningu> phrearch: then it should setuid its process after starting, just like apache would do
08:59 < AAA_awright> Right
09:00 < phrearch> ningu: yea im doing that
09:00 < ningu> phrearch: ah ok. well nevermind then. :) anyway I dunno what your mongodb issue is, does it not re-connect?
09:00 < ljharb> for bitcoin, https://www.gittip.com/about/faq.html says that because there's no way for bitcoin to do weekly payments, they might only add it for payins and payouts
09:00 < ningu> if you have 8 bitcoins is that a bytecoin?
09:00 < TheAceOfHearts> heh
09:01 < phrearch> ningu: no not automatically. is there a common pattern to reconnect before doing a query? I dont like the idea to check for a connection on each query manually 
09:01 < ckknight> ningu: I think that's 16 nybblecoins
09:01 < ningu> phrearch: and have your checked the mongodb log?
09:01 < ckknight> wait, I messed up
09:01 < ckknight> that's 2 nybblecoins
09:01 < phrearch> ningu: good one. no i havent :)
09:01 < ningu> phrearch: I'm not sure, I had an app using mongoose and never had any connection issues, but I don't know what it actually does
09:02 < AAA_awright> ningu: It's called "coin" for short :p
09:02 < ningu> in general I would think you'd want something to manage your db connection and make sure it's up
09:02 < Havvy> If you have two bitcoins, you have a lot of money in bitcoins.
09:02 < ningu> for sql databases there are connection pools, not sure if people do that with mongo
09:03 < ljharb> havvy: wouldn't that be a lot of money in dollars? 2 isn't a lot :-p
09:03 < ningu> but really I would assume that this has already been solved for mongodb, it's just a question of what module
09:03 < ningu> I assume by "a lot of money" one means "a lot of purchasing power"
09:03 < phrearch> hm, mongod seems to be fine. it must be something related to mongoose 
09:03 < ckknight> 1 BTC = 117.9 USD
09:03 < Havvy> money = purchasing power, yes.
09:04 < ningu> phrearch: well, I meant more like if there's a sign in the log for what happened on the disconnect, not if mongod was still running, but good you checked that too
09:04 < ljharb> fair enough
09:04 < phrearch> ningu: nope, everything looks fine on that side
09:05 < phrearch> ill try to catch the socket hang up error, and make a reconnect
09:05 < phrearch> thanks!
09:07 < ningu> phrearch: there is probably something out there to do that for you
09:07 < ningu> https://github.com/mongodb/node-mongodb-native
09:07 < ningu> search for auto_reconnect
09:07 < phrearch> ningu: thanks!
09:08 < ningu> it defaults to false, set it to true :)
09:09 < chilts> ningu: are you ever away from this channel? (Not that I'm saying you should go) :D
09:10 < ningu> haha
09:10 < ningu> the last day or two, no
09:10 < ningu> for a while I was busy
09:10 < ningu> but I'm procrastinating on my real work
09:13 < AAA_awright> >> var i=i||0; return i=1;
09:13 < purr> AAA_awright: SyntaxError: Illegal return statement
09:13 < ckknight> >> var i = i||0; return (i=1);
09:13 < purr> ckknight: SyntaxError: Illegal return statement
09:13 < ckknight> hmm
09:13 < ckknight> oh, because it's on the top-leve
09:14 < ckknight> level*
09:14 < AAA_awright> That should work
09:14 < ckknight> >> (function () { var i = i||0; return i=1; }())
09:14 < purr> ckknight: (number) 1
09:14 < AAA_awright> ckknight: return is permitted in top-level ECMAScript
09:14 < AAA_awright> So idk
09:14 < ckknight> not that repl, though
09:14 < AAA_awright> What grammar is it using
09:15 < ljharb> not in v8 or spidermonkey
09:15 < ljharb> where in the spec is it permitted?
09:17 < AAA_awright> ljharb: ReturnStatement is permitted in Statement, which makes up StatementList, which makes up Block.
09:18 < AAA_awright> >> { return 1; }
09:18 < purr> AAA_awright: SyntaxError: Illegal return statement
09:18 < AAA_awright> That should definitely be legal
09:18 < AAA_awright> There's no other way to interpert that except as a Block
09:18 < chilts> ningu: I'm gonna be in SF again for the first week of June ... if you wanted another beer sometime :)
09:19 < AAA_awright> (specifically, interpertation as an Object is prohibited, yes?)
09:19 < ningu> sure, I'll be around
09:19 < chilts> cool, chat to you closer to the time :)
09:19 < ningu> ok :)
09:19  * chilts is hoping there is a Node.js meetup sometime somewhere that week
09:19 < chilts> I'll have to check out all the meetups and see what is organised
09:19 < ningu> I haven't been paying attention to meetups, but yeah, that would be nice
09:20 < ckknight> AAA_awright: it can be parsed, but it's illegal, since you can't have return outside of a function.
09:21 < ljharb> AAA_awright: "It is a Syntax Error if a return statement is not within a FunctionBody."
09:21 < AAA_awright> I see
09:21 < ljharb> otherwise you'd basically stop all further JS execution, if you returned from the global scope :-p
09:21 < AAA_awright> ljharb: That's kind of the point?
09:22 < ningu> in node at least you can always do process.exit()
09:22 < AAA_awright> If I use if(1) return; why should it matter if there's an explicit function(){} or not, the behavior should be the same
09:22 < ljharb> right, but you can't kill the event loop
09:22 < ljharb> "return" is to return a value. there's nowhere to send it
09:22 < AAA_awright> ningu: return does work in Node.js because there's an implied explicit fuction expression
09:22 < ningu> oh, ok
09:22 < AAA_awright> Implied... explicit...
09:22 < ningu> never tried it
09:23 < ckknight> if you had a return and then joined all your scripts, that'd be a problem.
09:23 < AAA_awright> ckknight: Each file should be considered a seperate function body, though
09:23 < ckknight> "and then joined all your scripts"
09:23 < AAA_awright> Right
09:23 < ljharb> odd, in the node repl if you return, you get to a useless state
09:24 < ljharb> no further JS can be executed
09:24 < ljharb> that sounds like a bug
09:24 < AAA_awright> ckknight: You'd have to put an explicit (function(){})() expression around them
09:24 < ckknight> right.
09:24 < AAA_awright> And this is how it is usually done, of course
09:24 < Technodrome> i wish mysql had a one click app for mac like pg for development
09:24 < ljharb> altho ctrl-c can get you back to the normal repl
09:24 < ckknight> and you can use return in there
09:24 < AAA_awright> ljharb: Probably because it's a syntax error
09:24 < AAA_awright> e.g. try just {
09:25 < ljharb> ah, true
09:25 < ningu> ljharb: control-c
09:25 < ljharb> yup
09:25 < ningu> but yes I think it's a bug
09:25 < AAA_awright> My SIGINT is Meta-C you insensitive clod!
09:26 < ningu> ljharb: sorry, I didn't see you had already figured that out :)
09:26  * ckknight slaps AAA_awright with a trout
09:27 < ljharb> just made https://github.com/joyent/node/issues/5472
09:28 < AAA_awright> What should I be doing for request entity body control?
09:28 < AAA_awright> Let's assume I have to parse the entity body all at once, for the sake of argument
09:28 < AAA_awright> (though you can parse a urlencoded form as a stream, not sure what you would use)
09:29 < AAA_awright> What should I be doing?
09:30 < AAA_awright> Or rather, what memory management do people typically deploy, because it's conceivable that I want to parse a several-GB file, but I don't want someone opening a connection and spewing nonsense
09:30 < AAA_awright> Under all circumstances the program shouldn't crash
09:30 < thealphanerd> anyone in here use grunt?  opinions?
09:30 < ljharb> AAA_awright: save it to the filesystem, and parse it later?
09:31 < ljharb> AAA_awright: node isn't designed to deal with large files all in one go in a rapid fashion
09:31 < AAA_awright> ljharb: This is for common operations, it shouldn't have to go to disk
09:31 < ljharb> if it's several-gb, it needs to go to disk
09:31 < ljharb> otherwise you're just asking for a dos
09:31 < AAA_awright> The files under normal usage should be normal, there might be an occasional several-GB file, but usually such requests will be attacks
09:31 < AAA_awright> How many people protect against this?
09:32 < ljharb> almost every framework has a max file upload size
09:32 < ljharb> usually a very very small one
09:32 < AAA_awright> It's straightforward enough: Return 413 if Content-Length is too large, kill connection if they stream more data than they announced
09:39 < Technodrome> is it better to just build your own auth system? seems like all of these 100+ backends that work auth systems seem a bit "heh" 
09:39 < ljharb> Technodrome: it's almost never better to build your own anything. look into passport.
09:39 < Technodrome> auth systems are sorta application specific depending though
09:45 < Technodrome> ljharb:  its crazy how many providers that passport has
09:46 < Technodrome> sign up  for my business application with your netflix account! 
09:46 < Technodrome> or your steam account
09:46 < Technodrome> all of that feels a bit weird to me 
09:49 < dypsilon> Technodrome, that said, passport doesn't give you much.
09:49 < dypsilon> if you know what you are doing, passport may be just bloat
09:50 < Technodrome> i heard brazzers is going to create a login api for people to use as well 
09:50 < Technodrome> sign into your companies CRM with a porn account , would be crazy if that happened
09:50 < dypsilon> lol
09:52 < Technodrome> seems like every *startup* these days wants one, its like the new thing to do 
09:52 < Technodrome> Facebook and twitter *ok* possibly instagram , beyond that, anyone who uses the other ones is just giving away their power to another company 
10:00 < snuggl> Technodrome: i want one that does only auth and auth.
10:01 < snuggl> preferably with a transparent source of income or otherwise inclined not to sell my account
10:01 < dypsilon> it's not about auth really, it's rather about giving 3rd party apps the possibility to use the content of the users
10:02  * ningu pings chilts to make a pitch
10:02 < Technodrome> yes
10:02 < chilts> ??
10:02 < dypsilon> twitter can't give you access to users data if they don't have an authentication in place
10:02 < Technodrome> i don't think its wise for your main auth 
10:03 < chilts> Technodrome: Persona for the win :)
10:03 < dypsilon> yeah persone is a big one
10:03 < dypsilon> *persona
10:03 < chilts> then people just need an email address, let alone some random other authentication provider :)
10:03 < dypsilon> i hope persona will be available soon
10:03 < Technodrome> heh, any startup that thinks they will be somebody is going to want their own auth system 
10:03 < chilts> dypsilon: it's available now!
10:04 < dypsilon> chilts, yeah, kind of
10:04 < chilts> dypsilon: it is -> https://login.persona.org/about
10:04 < chilts> what do you mean kind of?
10:04 < chilts> the dev docs are here : appsattic-accounts/
10:04 < dypsilon> chilts, it's just another auth system units there is in browser support in every major browser
10:05 < chilts> oopse, wrong paste
10:05 < chilts> https://developer.mozilla.org/en-US/docs/Mozilla/Persona
10:05 < dypsilon> *units = until
10:05 < dypsilon> also until they have support by every major email provider
10:05 < dypsilon> they only have yahoo right now
10:05 < chilts> you already *have* support in every browser ... see the docs
10:06 < Havvy> chilts: Built-In support.
10:06 < chilts> and since it's based on email, it supports *every* provider (just not natively)
10:06 < dypsilon> chilts, i don't have button "login with persona" in my chrome
10:06 < chilts> Havvy: why does that matter? it's already works in every browser for every email address in existance
10:07 < Havvy> It doesn't.
10:07 < chilts> not in your chrome, but in websites that you use in chrome
10:07 < dypsilon> chilts, it matters because of fishing
10:07 < dypsilon> in browser support is a huge feature
10:13 < bluesm> Hi.
10:16 < bluesm> https://gist.github.com/bluesm/5574988https://gist.github.com/bluesm/5574988
10:16 < bluesm> https://gist.github.com/bluesm/5574988
10:17 < bluesm> It doesn't seem to work. (I mean it wait 2 sec, then return hello world) 
10:17 < bluesm> It works on "curl" but not on chrome :(
10:20 < ningu> bluesm: I just tried it, it works fine
10:20 < bluesm> ningu: Even in chrome ? Or other Gui browser ?
10:20 < ningu> yes
10:20 < bluesm> http://localhost:8000/   ? 
10:20 < ningu> yes
10:21 < ningu> after 2 seconds I get the text
10:21 < bluesm> ningu: But It should show instantly "hello" then "world"
10:22 < bluesm> (then after 2 second "world") 
10:22 < ningu> oh
10:22 < ningu> well, maybe chrome doesn't render that way
10:22 < ningu> you can't force the browser to display data it's received
10:22 < bluesm> ningu: Iceweasel.. Also don't work
10:23 < bluesm> ningu: Hmm.
10:23 < ningu> "hello" is such a short string it probably doesn't bother to display it
10:23 < ningu> you could try a longer piece of text
10:24 < snuggl> there is a fuckton of stuff that will hold up the sent packet
10:24 < snuggl> TCP itself for example
10:25 < ningu> yeah, but that isn't the issue in this case it appears
10:25 < snuggl> have you looked at it in wireshark or similar?
10:25 < ningu> the fact that it works in curl suggests to me it's a chrome-internal rendering issue
10:25 < snuggl> so you know if its the server or client that slacks
10:26 < snuggl> ningu: if you are sure they are sending the exact same headers etc then its probably chrome
10:26 < ningu> snuggl: it's 10 lines of code
10:26 < ningu> see his gist
10:26 < snuggl> yes i saw it
10:30 < AAA_awright> bluesm: Many browsers will only render every e.g. 512 bytes
10:30 < AAA_awright> They won't bother re-rendering anything less
10:31 < AAA_awright> (Short of an EOF of course)
10:33 <@MI6> joyent/node: Ben Noordhuis v0.10 * f13a3fd : doc: clarify subsystems in CONTRIBUTING.md - http://git.io/8jurWg
10:38 < bluesm> AAA_awright: So longer text ....should be good ?
10:38 <@MI6> joyent/node: Benoit VallÃ©e v0.10 * dbe9f8d : test: increase workers to 8 in cluster-disconnect - http://git.io/TvomwA
10:39 < bluesm> AAA_awright: But not curl ... ?
10:39 < AAA_awright> bluesm: It might work some places
10:39 < AAA_awright> But that's not specified behavior
10:40 < bluesm> AAA_awright: But how then I could be certain that my next "update of side" would be applied ?
10:40 < ningu> bluesm: you'll have to use sockets if you want more control
10:40 < AAA_awright> bluesm: You can't. That's not standard behavior.
10:41 < ningu> but if it's actually a stream of content, sockets probably won't help
10:41 < bluesm> ningu: So how say "Gmail" make push to the client ?
10:42 < AAA_awright> ningu: HTTP sends documents, not streams
10:42 < AAA_awright> Specifically, it sends information resources
10:42 < ningu> AAA_awright: yeah, what I meant was, if what he wants to send is a stream from his perspective, rather than a series of smaller things he could insert into the DOM
10:42 < ningu> or whatever
10:42 < AAA_awright> er
10:43 < AAA_awright> I meant to ping bluesm
10:43 < AAA_awright> bluesm: HTTP sends information resources, not streams
10:43 < ningu> bluesm: it uses ajax requests, possibly sockets as well these days
10:43 < AAA_awright> (and accepts information resources)
10:44 < ningu> "push to the client" = socket.io or similar
10:55 < bluesm> AAA_awright: ningu:  Ok. Thank you very much :)
11:00 < Technodrome> anyone here use jade with text mate? 
11:16 < E_mE> the node-mysql, with the method query(sql, values, callback), must the values array/object be escaped or does the library do that for me automatically?
11:28 < a__remie> Since V8's fast object proeprty lookup, would it be better to use an existing object when storing a result (after which, instanceof Error), or creating a local variable "result". It's inside async.waterfall. I'm just eager to think that using the object.property does the same but I dont declare a variable like with "var result"
11:37 <@MI6> joyent/libuv: Miroslav BajtoÅ¡ v0.10 * 0564ee4 : test, sunos: disable process_title test - http://git.io/pzf4KQ
11:51 < Rimi> Hi guys, does any one know a way of reading and Html file (local) and make changes to it (as a buffer) and then write it to file( using fs)?  thanks for your interest :)
12:05 < leichtgewicht> Rimi: jsdom?
12:07 < vampi-the-frog> has anyone managed to proxy websockets with apache2?
12:14 < nikkubhai> If I get a response in json, how do I convert it into html?
12:14 < Havvy> nikkubhai: With a template?
12:15 < nikkubhai> For example, I am using youtube.feeds.videos function : https://github.com/fvdm/nodejs-youtube#feedsvideos   which gives output in json. How to make it into html
12:15 < nikkubhai> Havvy, Template?
12:16 < Havvy> You write a function that converts the JSON to HTML. That function is usually called a template.
12:16 < Havvy> Well, if you use something like Handlebars or Moustache.
12:16 < tuhoojabotti> or jade 
12:16 < nikkubhai> I am using handlebars
12:17 < Havvy> If you create the DOM elements yourself programatically, it wouldn't be a template.
12:18 < nikkubhai> Havvy, Sorry didn't get it.  Disclaimer: I am total noob. :/
12:18 < tuhoojabotti> Havvy: Isn't that what template engines do? ;-) 
12:19 < Havvy> tuhoojabotti: Yes.
12:19 < tuhoojabotti> nikkubhai: You create a handlebars template and use the render function with your js object. 
12:21 < prawnsalad> kiwiirc: ../deps/uv/src/unix/udp.c:267: uv__udp_sendmsg: Assertion `!(&handle->write_queue == (&handle->write_queue)->prev) || !(&handle->write_completed_queue == (&handle->write_completed_queue)->prev)' failed.
12:21 < prawnsalad> well this nodejs crash doesnt look too good.
12:28 < marcosnils> Hi, is there a way to check if a net.Server is running without connecting to the listening port?
12:28 < marcosnils> is there a property or something that I can use?
12:28 < freak___1__> hello, i'm trying to strees nodejs with apache benchmark. When i give it -n 10000 -c 2500 it failes, nodejs returns Connection reset by peer, in console i see that it [13080]     1492 ms: Scavenge 4.2 (39.0) -> 4.0 (39.0) MB, 1 ms [allocation failure]. and nodejs server stop responding
12:29 < marcosnils> freak___1__, have you checked your OS max open files configuration?
12:31 < freak___1__> marcosnils: [root@es-dawid server]# ulimit -n
12:31 < freak___1__> 999999
12:36 < freak___1__> anyone?
12:41 < freak___1__> btw. i'm trying to run it with hello world example server ...
12:47 < root66> freak___1__: missed your question, sorry
13:00 < freak___1__> root66: i'm trying to strees nodejs with apache benchmark. When i give it -n 10000 -c 2500 it failes, nodejs returns Connection reset by peer, in console i see that it [13080]     1492 ms: Scavenge 4.2 (39.0) -> 4.0 (39.0) MB, 1 ms [allocation failure]. and nodejs server stop responding
13:01 < root66> oh ok, that's over my head. sorry.
13:12 < peterfile> allocation failure? is there a problem with memory?
13:16 < freak___1__> peterfile: it's to less of it?
13:16 < freak___1__> ;)
13:16 < freak___1__> i've checked it on 2 servers and it acts the same
13:16 < freak___1__> try to put just sample hello world server
13:16 < freak___1__> and stress it with apachebench with -n 10000 -n 3000
13:17 < E_mE> is it possible to block the main thread with the HTTP createServer instances?
13:22 < Torsten> is there a way while using 'cluster' to send a message to workers to e.g. close other connections gracefully?
13:22 < Torsten> i'm ending master with ctrl-c in command line
13:31 < bnoordhuis> Torsten: worker.disconnect()
13:35 < Torsten> is the cluster module (https://github.com/LearnBoost/cluster) the same as the one builtin into node 0.10.x?
13:39 < Rimi2> hi guys is there any way to load a html file, make changes to it (add json data) and write it to file using node js? - i am using jsdom and jquery to update the html content but i don't know how should i store the changes in order to write them to disk. thank you
13:39 < bluesm> node js is different from others. Because it could handle several requests ?
13:43 < hellopat> I'm being a bit naive in asking this - but is there a way to avoid creating an ssh tunnel (via ssh -f -N xxx.xxx.xx.xx) in order to run queries on a remote db?  Perhaps a node module that can create a tunnel and send requests through it?
13:44 < supersym> bluesm: because of native bindings | i/o with JS mostly
13:44 < supersym> a/s is also in browser
13:45 < supersym> if thats what u mean
13:49 < coincoin> hi
13:57 < bluesm>  supersym: You mean that there is no another gate between me and client -> There is client and my node code (there is not for example apache to which i return output) ?
14:03 < bluesm> http://youtu.be/jo_B4LTHi3I?t=21m1s  What is the equivalent in gnu/linux ?
14:03 < bluesm> ab ?
14:07 < garbagegod> pwd
14:07 < garbagegod> ls
14:07 < garbagegod> uptime
14:08 < basss> hello everyone, has anyone used a facebook sdk for node ? 
14:11 < JohnMcLear> basss: no, no one has used facebook sdk for node
14:12 < supersym> bluesm: yes node.js has (its hello world) a HTTP server
14:12 < basss> JohnMcLear: ?
14:12 < supersym> and environment dedicated to asynchronous i/o
14:13 < supersym> so if it serves as a http server/app server you can create a socket from the OS to the web/browser environment and interact
14:13 < garbagegod> http://lmgtfy.com/?q=nodejs%20facebook
14:14 < supersym> e.g. a web form to reset your server, create a new account and so on...typically for persistence one might go through say socket.io and nodeadapter -> mongodb
14:28 < euoia> set future [clock format [clock scan "3 days"] -format "%Y-%m-%d %H:%M:%S"]
14:28 < euoia> oops
14:34 < oreth> alright, chaps
14:34 < oreth> i've got a question for you
14:35 < oreth> i've got a little node web app running.
14:35 < oreth> at one point, I'm spinning through a large set of files and doing some io on them.
14:35 < oreth> during this, it locks my server from accepting any requests.
14:36 < oreth> git hub link: https://github.com/codevinsky/album-grabber/blob/master/app.js
14:36 < oreth> the ProcessHashQueue function is what seems to lock everything
14:37 < oreth> I've been thinking about this over the evening, and I suppose I should be using events instead of procedural calls.
14:37 < oreth> however, before I do that, I'd like to know if anyone really thinks that will help?
14:42 < pachet> oreth the image hashing algo is blocking
14:42 < jeffwhelpley> how do you turn off socket pooling when you are using express?  All the examples online show how to do with with the basic node.js http server (i.e. http.request({agent:false}) ), but I can't find an example when using express.
14:42 < oreth> pachet: is there a way to have that run async?
14:42 < pachet> oreth you should be spawning a separate process to do that crunching
14:42 < pachet> then just listen to the output of that process to know when you're done
14:43 < oreth> someone new to node...
14:43 < oreth> can you send me to a  link about spawning processes?
14:44 < oreth> er..
14:44 < oreth> some-what new to know
14:45 < oreth> ugh
14:45 < oreth> my coffee hasn't kicked in
14:45 < pachet> oreth i'd just look at the documentation, they have pretty good examples
14:45 < pachet> http://nodejs.org/api/child_process.html
14:45 < oreth> oh. i didn't know that node could spawn child-processes natively
14:45 < oreth> things I didn't know I didn't know
14:46 < oreth> so, basically, i need to create another node app to do the crunchingâ€¦ 
14:47 < JohnMcLear> module
14:47 < oreth> please explain.
14:47 < JohnMcLear> also native is okay, but if you wanna go "big", check out vertx and other mechanics for deploying the workload across clusters
14:48 < oreth> eh. on 1000 images it takes about 30 seconds..
14:48 < oreth> and it only has to do it once per unique category.
14:49 < oreth> i don't have to worry about clusters
14:49 < oreth> but explain how I would create a module.
14:49 < oreth> that is, link me to documentation explaining.
14:49 < oreth> I'm perfectly capable of figuring it out on my own, if I know what resource to look at
14:52 < phwd> can e be short for error as in e = error?
14:52 < JohnMcLear> yes
14:52 < oreth> in what context?
14:52 < JohnMcLear> try{}catch(e){console.log(e)}
14:52 < phwd> https://github.com/danharibo/dbot-notify/blob/master/notify.js#L131
14:53 < oreth> I'm hanging out in #iphonedev. I swear to god. Objective-C is basically moon language
14:54 < phwd> so the snippet above will catch the error thrown by request and not just some random error correct?
14:55 < JohnMcLear> yes
14:55 < mscdex_> hellopat: yes, the ssh2 module can do this for you
14:55 < JohnMcLear> if handler.parse errors it will return the error to the console log
14:55 < phwd> JohnMcLear: cool, thanks
14:55 < pachet> oreth, JohnMcLear not a separate module, a separate process
14:55 < pachet> oreth already has the module
14:55 < JohnMcLear> I think "return" is the correct language here, someone may disagree
14:55 < pachet> its just inconveniently blocking
14:56 < pachet> unless he wants to rewrite it as a native ext with an async api
14:56 < JohnMcLear> pachet: I was actually commenting when he said seperate app
14:56 < oreth> pachet: the image hashing process is in c++
14:56 < JohnMcLear> I was thinking he could put his crunching into a seperate module and require that then spawn a process for it
14:56 < oreth> i can modify it to use callbacks
14:56 < JohnMcLear> that would keep his code modular
14:57 < oreth> if that will unblock it
14:57 < oreth> i'm just trying to decide what the best process is here.
14:57 < oreth> if i'm lucky, when I release it, i'll probably get -hammered- on day 1
14:58 < JohnMcLear> it wont unblock it, it will just mean you understand how to write modules and how to require them :)
14:58 < JohnMcLear> It's kinda important to be familiar with that in node
14:59 < JohnMcLear> If you want to unblock it, just do a process.exec and use some async code, depends if you want a quick win or not :)
15:00 < pachet> spawning separate process for blocking op = quick win
15:00 < JohnMcLear> +1 pachet
15:05 < bluesm> supersym: asynchronous i/o so, it creates standalone process of every request ?
15:05 < bluesm>  supersym:  I wonder what asynchronous i/o meanss.
15:09 < oreth> JohnMcLear: any documentation that dictates how to do that properly?
15:10 < JohnMcLear> probably loads, search online
15:17 < oreth> unrelated
15:17 < oreth> Vampire Weekend's album is out today
15:17 < oreth> it's -fantastic-
15:18 < pachet> bluesm it means the same exact thing as in the browser
15:18 < pachet> all the javascript you write is executed in the main thread
15:18 < pachet> but FS reads, or waiting for http requests to come in, are pushed to separate threads
15:19 < bluesm>  pachet:  file server ?
15:19 < pachet> so the main thread isnt responsible for watching the entire lifecycle of that request, or read, or what have you
15:19 < pachet> it just receives an event back when that op is complete
15:20 < pachet> bluesm file system
15:20 < bluesm> pachet: FS ?
15:20 < bluesm> pachet: file system ?
15:20 < pachet> file system
15:20 < pachet> http://nodejs.org/api/fs.html
15:33 -!- mode/#Node.js [+o TooTallNate] by ChanServ
15:39 < hellopat> mscdex: hey, if I wanted to make a tunnel from my local machine to my test server in order to forward requests to mongo on the test server, I need to 1. create a connection, 2. when the connection is ready, forwardOut the connection from my local machine to the test server
15:39 < hellopat> is that correct?
15:39 < gabrielstuff> hello all
15:39 < hellopat> similar to example 2 in your readme
15:40 < mscdex> hellopat: yeah
15:41 < hellopat> mscdex: cool, thanks.  I'll try it out
15:42 < gabrielstuff> I just have a basic question about POST + mongoose usage. I tested my routes with CURL and I get the correct response + data are well saved. Posting from a form in a HTML cause an error about "name" undefined : TypeError: Cannot read property 'name' of undefined any hint where should I look for
15:42 < gabrielstuff> thanks
15:47 < Fuzzyma> What do you think is better: Uploading 10 files in one request or one request / file? (its ajax - it happens in the background. So there are no worries about the time it takes but about the server- and browser-load)
15:47 < dayom> one per file right?
15:47 < Fuzzyma> *one request / file but all simultaneously
15:47 < dayom> how big are the files
15:47 < Fuzzyma> yes
15:48 < Fuzzyma> the files are pictures
15:48 < Fuzzyma> so its 500Kb till 10 MB
15:48 < dayom> i would say one per
15:48 < dayom> since you'd lose all of them if you end up getting timed out
15:48 < dayom> and have to try again
15:49 < Fuzzyma> thats true...
15:49 < Fuzzyma> I did not think about a timeout here - one file per request should be better then
15:50 < Fuzzyma> it just feels a bit spam-like
15:50 < draginx> Anyone here use busterjs? I'm trying to see if I can chain expectations
15:50 < Havvy> Fuzzyma: They are images right?
15:50 < dayom> depends on a few things
15:50 < Fuzzyma> Havvy: yes
15:51 < Havvy> Just create image tags, and set the src attribute?
15:51 < Fuzzyma> I want to upload them - just displaying is not the problem
15:51 < Havvy> Oh, uploading them.
15:51 < Havvy> Yeah, one at a time would be best.
15:52 < Fuzzyma> cool - then I did it right :)
15:52 < Fuzzyma> ty both!
15:54 < kenperkins> who's organizing nodepdx
15:55 < Havvy> kenperkins: That's Portland PDX right?
15:55 < kenperkins> yea
15:55 < Havvy> Can I get some information about this?
15:56 < gabrielstuff> I just have a basic question about POST + mongoose usage. I tested my routes with CURL and I get the correct response + data are well saved. Posting from a form in a HTML cause an error about "name" undefined : TypeError: Cannot read property 'name' of undefined any hint where should I look for
15:57 < Illusioneer> I'm still trying to wrap my head around async stuff, but put simply, if I want to make sure one function is finished before executing the next, what is best/common way of doing that?  
15:58 < mscdex> Illusioneer: call the function within the callback or use a module like 'async'
15:58 < lmf40> Illusioneer: wiat for the callback :-)
15:58 -!- mode/#Node.js [+o sblom] by ChanServ
15:58 < Illusioneer> Ah ok I was thinking callback was the way to go, I saw the async library but I'd rather avoid adding more stuff to the mix unless I have to :)
16:00 < Illusioneer> So say I have a login function that requires the data returned from a db-query function, is the dbquery the callback inside the login func?
16:00 < Illusioneer> Or more abstractly put, is the callback the one we are waiting on to finish?
16:01 < euoia> Illusioneer: the callback is an argument to a function that is called when the function completes
16:01 < pachet> function login ( a, b, callback ) { dbquery(a, b, function ( error, result ) { callback(error, result); }); }
16:01 < Illusioneer> euoia: so then the login would be the callback
16:01 < pachet> no, login is the function you call to login
16:02 < pachet> you'd pass the callback to login
16:02 < pachet> im making some assumptions here, not having seen your code
16:02 < Illusioneer> pachet: no i have two functions, the db-query which pulls user/pass, and the login func that compares credentials.  the db call must be made first, then the login compares
16:03 < euoia> does the db-query function accept a callback argument?
16:03 < Illusioneer> euoia: it can be made to do so
16:04 < euoia> you mean it's a function that you are writing?
16:04 < pachet> what's the fn signature for that login function look like :[
16:04 < euoia> or you mean it's an existing function with an optional callback argument?
16:05 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:05 < Illusioneer> euoia: it is a function I wrote
16:05 < Illusioneer> so I can easily add a callback option
16:05 < euoia> but at some point you're calling a function that does IO - I would expect this function to accept a callback argument
16:05 < miblon> Hi all, today I stumbled upon a typo using a semicolon at the end of a require halfway in a set of requires seperated by colons. When I removed it, my code broke. Is there some place where I can find a explaination on when to use ; and when to use , in require?
16:06 < Illusioneer> I think I understand (better) 
16:06 < miblon> I mean like this: https://gist.github.com/anonymous/5577143
16:06 < pachet> miblon: there's no difference
16:07 < dypsilon_> miblon, the explanation is in ecmascript specification
16:08 < dypsilon_> or on mozilla developer network somwhere
16:08 < echo|> There's also this SO: http://stackoverflow.com/questions/3781406/javascript-variable-definition-commas-vs-semicolons
16:09 < pachet> the relevant portion of the spec, if you're interested:
16:09 < pachet> http://es5.github.io/#x12.2
16:09 < mscdex> pachet: there is a different depending on the context
16:09 < mscdex> s/different/difference/
16:10 < mscdex> `var foo=1; bar=2, baz=3;` results in two globals, whereas `var foo=1,bar=2,baz=3;` results in no globals
16:11 < miblon> thanks pachet, dypsilon_ , echo| 
16:11 < miblon> mscdex, you are right, that was exactly what happened
16:12 < pachet> mscdex: of course
16:12 < pachet> i just meant there's no difference between the two code portions he posted
16:13 < miblon> pachet, right also ;-) The real error was a semicolon halfway down the section with comma's
16:20 < thomblake1> See?  That's why you shouldn't use extraneous semicolons, and should put commas at the beginning of lines.
16:21 < pachet> or just use a syntax checker
16:22 < thomblake1> pachet:  I assume you mean a linter?  There's nothing syntactically wrong with `var foo=1; bar=2, baz=3;`
16:23 < pachet> let me run to my car real quick
16:23 < pachet> i left the nitpick trophy in the trunk
16:23 < basss> hello, how can i send an async http request using node
16:24 < jjore_> Well, there is the http library that comes with node: http://nodejs.org/api/http.html
16:24 < pachet> specifically http://nodejs.org/api/http.html#http_http_request_options_callback
16:25 < basss> pachet: thanks
16:27 < euoia> miblon: I highly recommend using a linter. If you can integrate it with your editor then even better.
16:27 < euoia> miblon: it will pick up these kinds of problems
16:28 < draginx> Anyone know if I can chain expectations/assertions with busterjs?
16:39 < basss> pachet: does http.get work when using https ? 
16:41 < alexhancock> basss: You probably want to use http://nodejs.org/api/https.html#https_https_get_options_callback
16:42 < basss> alexhancock: okay 
16:45 < oreth> any regexperts in here?
16:47 < Tox> oreth: there is no such thing as a regex expert. just ask your question :)
16:48 < oreth> tox: roger that
16:48 < oreth> ok
16:48 < dypsilon_> firstname of the only regex expert in the world is Chuck
16:48 < oreth> let me write a small gist to explain
16:50 < oreth> tox: https://gist.github.com/codevinsky/5577496
16:50 < oreth> i've got a regex match that works -most- of the time
16:51 < oreth> it's a simple match as well
16:51 < oreth> however, on a seemingly random (but not so random, as it fails on the same one every time), I get a failed match.
16:52 < Tox> both links match on the regex, at least on my box.
16:53 < oreth> yeah.. they match in my pattern tester
16:53 < oreth> this is an excerpt.
16:53 < oreth> i'm spinning through 1000 links
16:54 < oreth> the actual code looks like: https://gist.github.com/codevinsky/5577530
16:56 < oreth> if i run that gist (after fixing typos) it runs correctly
16:56 < oreth> however, i'm not really doing anything more complicated in my actual code, other than spinning through 1000 links
17:01 < oreth> i figured out what it was.. thought i'm not sure the cause.
17:02 < oreth> apparently, the api i'm hitting has some malformed json
17:09 < oreth> nope
17:09 < oreth> i figured it out though.
17:10 < oreth> i was splicing out of an array that I was looping over.
17:14 < miblon> I am trying to implement nodemailer in an expressjs app. Everything goes ok, except when I use i18next to translate the email content; there is no reference to expressjs from the mailer that is invoked through a route..
17:15 < miblon> So either it throws an i18next is not defined, or it doesn't translate
17:15 < kenperkins> I'd love thoughts on how folks write documentation for their node.js sdks
17:15 < Technodrome> do you guys split up your routes from the routes request callback? or do most of you keep it as one unit? 
17:15 < miblon> How can I make sure the "global" i18next is passed? By adding it as global.i18next? Then I would have to rewrite a lot of things?
17:33 < genazt> miblon, you can use a registry for such things
17:35 <@isaacbw> I don't even like poptarts
17:40 < dook> Is there a module that fetches one stream and syndicates it amongst clients?  Do I open the server within the streaming request?
17:41 < genazt> you want to sync up streams ?
17:41 < miblon> genazt, I tried google but didn't land on anything usefull to teach me about registry :-( any docs on that?
17:41 < dook> genazt I'm not sure what that means, but I want to share one stream with multiple clients.
17:41 < qbit> TooTallNate: i want to use the spotify-web lib soooobad, looks like speakers will take waay more effort to get working.. know of any other pipe'able audio output packages? 
17:41 < genazt> miblon, i only hav php examples about it
17:41 < miblon> genazt, :-P
17:41 < genazt> dook, what stream ?
17:42 < dook> genazt It's an MJPEG from my webcam.
17:43 <@TooTallNate> qbit: not reallyâ€¦ but why will speakers take more work?
17:43 <@TooTallNate> qbit: and is that to say that you got lame working?
17:43 < genazt> miblon,  http://schwobeseggl.de/2008/11/12/registry-pattern-in-javascript/
17:43 < genazt> but its on german
17:43 <@TooTallNate> qbit: lame is just 1 config.h file - it should be pretty easy
17:43 < genazt> but i think you get the code
17:44 < genazt> dook, so you have a jpg file which gets overwritten right ?
17:44 <@TooTallNate> qbit: but i wanna get mpg123 (and node-speaker by extension) working for you as well, so let me know where you're getting hung up
17:44 < dook> Well right now I'm overwriting a jpeg binary in memory and serving that on requests
17:45 < genazt> yes whats wrong with that ?
17:45 < genazt> mjpeg isnt a "stream"
17:45 < dook> Right now the client is requesting each new fileâ€¦ Can I still continue pushing these somehow to the client?
17:46 < dook> genazt: ^
17:47 < qbit> TooTallNate: I just built node-lame against openbsd's lame from ports
17:47 < genazt> you mean get the new frame without a reload ?, dook
17:47 < qbit> tried doing the same thing with speaker 
17:47 < dook> genazt:  Yeah
17:47 < qbit> but it seems to not wanna go
17:47 < genazt> well you can use the browser side Image class for that
17:48 <@TooTallNate> qbit: well ya, i wanna have you not using the system libsâ€¦ it'll work better
17:48 <@TooTallNate> qbit: see https://github.com/gypified/libmp3lame/tree/master/config
17:48 <@TooTallNate> the README tells you how to do libmp3lame
17:48 < qbit> TooTallNate: http://sprunge.us/FUFb < the error i get with "npm install speaker"
17:48 < dook> genazt: Ok, I'll look into that.
17:48 < dook> genazt: thanks!
17:48 <@TooTallNate> qbit: ya i think it's cause the output stuff isn't part of mpg123's public API, i just kinda hacked into it
17:48 < qbit> k
17:50 <@TooTallNate> qbit: for mpg123, it looks like here's the flags i used: https://gist.github.com/TooTallNate/4136e6bf767c09c11a82 and https://gist.github.com/TooTallNate/01f749247e29a364c8ec
17:53 < qbit> k
17:53 < dook> genazt: Ah, no I didn't mean without reloading the page, I meant without making a new request on the client side.  I can see that when I request the stream from the webcam, it continues unimpaired without additional requests.  I'd like to syndicate an MJPEG source in this way.
17:54 < genazt> dook, so you want to make a jpeg stream in a websocket ?
17:54 < mbalho> dook: i think what a lot of webcam apps do is have a JS refresh timer that just makes a new <img> tag every time
17:55 < genazt> mbalho, yes but that creates requests which he wanted to avoid
17:55 < dook> mbalho: That's what I'm doing currently, but it's really laggy, I thought reducing requests would help.
17:55 < dook> http://danfinlay.com/projects/hummingbird-cam/
17:55 < genazt> well you can use socket.io for this
17:55 < dook> Will a socket fit a jpeg?
17:56 < dook> Or do I need to break it up?
17:56 < mbalho> theres no size limit 
17:56 < genazt> if you have a new picture => base64 encode it => send it to the client => replace the src with the base64 string
17:56 < dook> Oh wow
17:56 < mbalho> websockets dan do binary
17:56 < dook> Yeah I already have it binary encoded
17:56 < mbalho> haha freudian slipo
17:56 < genazt> yes but how do you get the binary data into an img tag ?
17:56 < genazt> oO
17:56 < dook> Too bad heroku won't do websockets..  Is there a freemium service that does?
17:56 < mbalho> dook: dont think so
17:57 < mbalho> genazt: for jpeg it could be tricky png is easy with <canvas>
17:57 < genazt> well you can use the src data/base64 thing
17:57 < genazt> which is supported by much browsers
17:57 < dook> Looking that up...
17:58 < dook> I wanted to crank up the framerate b/c these little baby hummingbirds should be learning to fly soon :)
17:58 < genazt> dook, <img src='data:image/jpeg;base64,<base64 encoded jpeg>' alt='base64 Test'>
17:59 < dook> And then when I receive the socket's binary data, how do I plug that into this <img>?
17:59 < genazt> dook, http://danielmclaren.com/node/90
18:00 < dook> genazt: Awesome
18:00 < genazt> you get the base64 encoded string via an socket.io event
18:00 < genazt> and then you need to alter the src of the image tag
18:01 < dook> And on src edit, image reloads?
18:01 < genazt> document.getElementById('image-id').src = "data:image/jpeg;base64:" + data;
18:01 < dook> I'm still reading, sorry.
18:01 < genazt> it should
18:01 < dook> Oh wow
18:01 < dook> A src attribute can be the literal data, that's amazing.
18:04 < dook> genazt: Last question:  I've got the jpeg in binary right now, looks like I could stream that into base64 with this, right? https://github.com/substack/node-binary
18:05 < mscdex> dook: fs.readFileSync('foo.jpg').toString('base64')
18:05 < genazt> why node-binary
18:05 < mscdex> dook: although you should probably use async, but it's the same idea
18:06 < dook> I'm not reading from file, I'm being passed a jpeg binary from this foscam driver module
18:06 < dook> So I have to deal w/ the binary or write my own parser for it.
18:06 < genazt> what kind of input does it have ?
18:06 < dook> genazt: Oh just like selecting the cam, adjusting aperature, even moving some servos.
18:07 < mscdex> dook: ah ok, if it's a Buffer then just do .toString('base64'), if the data is a binary string, do `new Buffer(imgstr, 'binary').toString('base64')`
18:07 < genazt> yes but in which format you get the jpeg data =
18:07 < genazt> ?
18:07 < genazt> as buffer ?
18:07 < genazt> as binary string ?
18:07 < dook> genazt: Let me check that, although mscdex 's solution looks likely...
18:08 < genazt> yes it contains solutions for both situations
18:08 < dook> Binary string
18:09 < dook> genazt: ^
18:09 < dook> I'm gonna try that `new Buffer(imgstr, 'binary').toString('base64')`
18:09 < genazt> y
18:29 <@isaacbw> storing an image in a binary string sounds space efficient
18:36 <@MI6> joyent/node: isaacs v0.10 * 6a833a3 : blog: Release v0.11.2 - http://git.io/t8JmiQ
18:39 < JohnMcLear> yay isaacs, congrats on another release
18:39 < GlitchMr> Nice.
18:42 <@MI6> joyent/node: isaacs created branch v0.10.6-release - http://git.io/c3KhIg
18:54 < savardc> Hi, how can I read an hex string from stdin? I've tried changing the encoding of stdin but I'm not getting the right data when I create a Buffer with that string
18:56 < vampi-the-frog> haha what?
18:59 < savardc> I have a stream of hexadecimal bytes that I captured and I want to parse it from stdin
19:00 < euoia> savardc: do you mean you have the hex represenation of some binary data as an ascii string?
19:00 < savardc> yes, sorry
19:01 < euoia> savardc: I'm not sure how you do it
19:04 < euoia> savardc: perhaps this helps
19:04 < euoia> var a = new Buffer('48494C4C4F', 'hex');
19:05 < euoia> sorry I mean
19:05 < euoia> var a = new Buffer('48454C4C4F', 'hex');
19:05 < euoia> console.log(a.toString());
19:05 < euoia> HELLO
19:06 < aandy> hi
19:07 < savardc> thanks. that part I'm ok, it's getting the value from stdin in the right encoding that I'm having trouble with
19:09 < aandy> a.toString('utf8')? is your term utf8?
19:09 < aandy> ah, stdin
19:10 < aandy> if you're reading 0-9A-F, what kind of bad encoding could you possibly be looking at?
19:20 < savardc> aandy: yeah, I'm probably doing something wrong in my parsing code. thanks
19:21 < aandy> sorry if it sounded harsh, i was genuinely asking :p
19:22 < aandy> as in, what do you get from say
19:22 < aandy> process.stdin.setEncoding('utf8'); process.stdin.on('data', function(chunk) { /* chunk is utf8 */ console.log(new Buffer(chunk.replace(/[^a-f0-9]/g, '').toUpperCase()), 'hex') });
19:22 < aandy> if you're feeding it hex chars in utf8 format, it should be valid (the replace is just for kicks)
19:25 < gbit86> So can someone please assist me with how I might go about sending a body of json data via node.js to a server? So client to server without the use of something like request?
19:26 < gbit86> Mikeal's request that is
19:26 < gbit86> http://stackoverflow.com/questions/8675688/send-content-type-application-json-post-with-node-js
19:26 < gbit86> that is essentially what I am trying to do, but with just pure node.js
19:26 < gbit86> I may have to give up my stance on wanting to stay as pure node.js as I can starting out
19:27 < bnoordhuis> gbit86: there's examples in the docs
19:27 < gbit86> the thing is, I do not want to start feeling like I need all these add ons when the node.js is fairly capable on its own
19:27 < bnoordhuis> basically, you call http.request() and start writing data in your callback
19:27 <@isaacbw> it sure is
19:27 < echo|> gbit86: Request just makes this more trivial to use http://nodejs.org/docs/latest/api/http.html#http_class_http_clientrequest
19:28 < gbit86> hmm.. ok I will give that a shot
19:28 < gbit86> I had been trying to use https.request without much success
19:29 < gbit86> bnoordhuis: I have been trying to write data via http.request, but I can't even get it to authenticate correctly like I can with get even though the header is the same and I know the authentication information I am passing is correct
19:30 < gbit86> I also have the packets of how the Postman extension in the browser is communicating so I know I am using the right protocols
19:30 < gbit86> and ciphers
19:30 < bnoordhuis> gbit86: authentication data? you mean an Authorization header or?
19:30 < gbit86> yea the authentication piece in the header
19:31 < gbit86> just saying I know it is proper, but anyways I will work with this some more client request may be the answer I need
19:42 < gabrielstuff> hi all about debuging
19:42 < gabrielstuff> i've tried node-inspector
19:43 < gabrielstuff> but out of the box with an express app it throw errors
19:43 < gabrielstuff> when connecting to the guy
19:43 < gabrielstuff> gui :)
19:45 < gabrielstuff> ?
19:45 < savardc> aandy: the replace was useful... my problem was the \n at the end of the string. Thanks again :)
19:49 < vampi-the-frog> throw terrors
19:50 < pachet> TypeTerror
19:52 < gabrielstuff> hoi !
19:52 < gabrielstuff> so any hints for debugging with a real tool ?
19:53 < [boxmein|write]> console.log = most powerful tool
19:53 < aandy> console.log is fairly real
19:53 < Willox> what's a console
19:53 < gabrielstuff> humâ€¦ console.log is fairly not a debug tool more an info tool
19:54 < aandy> unless... blue pill?
19:54 < grep_awesome> gabrielstuff: https://github.com/dannycoates/node-inspector
19:54 < gabrielstuff> yup
19:54 < gabrielstuff> as I said
19:54 < grep_awesome> gabrielstuff: it is old, but it works
19:54 < gabrielstuff> with some basic example it works fine
19:54 < gabrielstuff> but with a full nodejs app it breaks...
19:54 < gabrielstuff> :(
19:54 < gabrielstuff> but it looks nice
19:55 < gabrielstuff> so everyone is consoling.loging like echoing or printf ? :) kidding right ?
19:55 < grep_awesome> node-inspector works well for me, I haven't had problems with it with our apps
19:57 < gabrielstuff> grep_awesome, i tried it with few apps but as soon as I'm using express + passport + session + websocket + lots of other things it throw http.js:704
19:57 < gabrielstuff>     throw new Error('Can\'t set headers after they are sent.');
19:59 < aandy> what's with the arrogant "kidding right ?"? what's wrong with writing non-havoc code, info for debug and exceptions?
20:00 < aandy> 90% of the time you know the error as soon as you see it crash. when you don't, you check the stack, when you still don't, you print debug info.
20:01 < aandy> works fairly well unless you're completely new to a language/module (speaking generally, not implying you're not)
20:05 < basss> i'm trying to find something that handle ajax file uploads on node, any idea ? 
20:05 < basss> handles*
20:06 < Nnubes256> Something like https://github.com/felixge/node-formidable ?
20:07 <@isaacbw> "ajax file uploads" are just post requests
20:07 < aandy> formidable is great for streaming (and reporting progress back), so if you want progress on your ajax received, you could try that
20:08 < aandy> ajax sent is already available from xhr2 
20:08 < basss> Nnubes256: yea i guess thats what im looking for 
20:08 < Nnubes256> ;)
20:09 < basss> Nnubes256: any idea if there's an example with express ? 
20:10 < aandy> for express you'd have to turn off the body parser if you don't want buffering
20:11 < gabrielstuff> ok found it :)
20:11 < gabrielstuff> node debug command line
20:11 < gabrielstuff> perfect
20:11 < gabrielstuff> thanks !
20:11 < basss> aandy: will do, thanks 
20:13 < gabrielstuff> ok i'm really getting crazy, even with beget option
20:13 < gabrielstuff> ...
20:13 < gabrielstuff> anyone could help on a tricky stuff with POST and mongoose collection
20:13 < gabrielstuff> ?
20:19 < werle> gabrielstuff: what's up
20:19 < arrnas> im following this tut : http://blog.tomg.co/ and at make i get "you need to run waf configure" first
20:19 < arrnas> how do i do that?
20:20 < arrnas> the obvious waf configure doesn't wokr
20:20 < gabrielstuff> werle, i've got a weird issue with some collection creation
20:20 < gabrielstuff> I have this nice collection config
20:20 < gabrielstuff> a basic schema with a date and an field of type Schema.Types.Mixed
20:21 < gabrielstuff> when saving the collection with dummy data
20:21 < gabrielstuff> it work
20:21 < gabrielstuff> *s
20:21 < gabrielstuff> when saving with custom (a form input)
20:21 < gabrielstuff> it breaks
20:21 < werle> what does the data look like from the form input ?
20:22 < werle> vs the dummy data
20:22 < gabrielstuff> saying TypeError: Cannot read property 'name' of undefined
20:22 < gabrielstuff> the same :)
20:22 < gabrielstuff> this is the funny story
20:22 < gabrielstuff> dummy :
20:22 < gabrielstuff> { config:
20:22 < gabrielstuff>    { title: 'sas',
20:22 < gabrielstuff>      facebook:
20:22 < gabrielstuff>       { clientID: '',
20:22 < gabrielstuff>         clientSecret: '',
20:22 < gabrielstuff>         callbackURL: '' },
20:23 < gabrielstuff>      foo: { path: '', www: '' } } }
20:23 < gabrielstuff> the req.body
20:23 < gabrielstuff> { config:
20:23 < gabrielstuff>    { title: 'sas',
20:23 < gabrielstuff>      facebook:
20:23 < pachet> :[
20:23 < gabrielstuff>       { clientID: '',
20:23 < gabrielstuff>         clientSecret: '',
20:23 < gabrielstuff>         callbackURL: '' },
20:23 < gabrielstuff>      foo: { path: '', www: '' } } }
20:23 < pachet> paste this stuff somewhere
20:23 < gabrielstuff> ok
20:23 < werle> gist or something else
20:23 < werle> jsbin or something
20:23 < `3rdEden> oh, yes.. spam the channel with your interesting code so everybody can enjoy your indentation
20:24 < aandy> that being said, neither has a 'name' key
20:24 < werle> gabrielstuff: paste the dummy data, the request data, and the schema in a gist, pastebin, jsbin, or whatever
20:25 < werle> gabrielstuff: then send link
20:26 < gabrielstuff> making a gist right now
20:28 < Industrial> if I have an EventEmitter descentant (e.g. a http.Server), can I hook into all it's events at once for debugging?
20:29 < Industrial> whatever it emits, i wanna know about it
20:30 < werle> Industrial: overload the emit method
20:31 < Industrial> I'm trying to forward HTTP traffic and I am getting a connection event but no request event :S
20:34 < Industrial> https://gist.github.com/Industrial/557864596b604ea13d5b
20:35 < gabrielstuff> https://gist.github.com/gabrielstuff/5579235
20:35 < gabrielstuff> ok
20:35 < gabrielstuff> hopes it is clear enough : /
20:35 < gabrielstuff> werle
20:36 < gabrielstuff>  and sorry for the previous paste
20:36 < werle> Industrial: https://gist.github.com/jwerle/5579308
20:37 < werle> gabrielstuff: looking now
20:38 < gabrielstuff> werle: thanks
20:38 < werle> gabrielstuff: so its failing here https://github.com/LearnBoost/mongoose/blob/master/lib/document.js#L435
20:38 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:39 < Industrial> werle: cool ty
20:39 < Industrial> nice addition to my devlibofdoom :D
20:40 < gabrielstuff> yup
20:40 < gabrielstuff> but it does exist
20:40 < therealkoopa> Is anyone familiar with node-detective ?
20:41 < Industrial> substack_: any idea why I would only see a connection event and no other events on a http.Server that is being forwarded to by a Bouncy server?
20:41 < Industrial> https://gist.github.com/Industrial/557864596b604ea13d5b
20:42 < gabrielstuff> humâ€¦ does it mean constructor is undefined ?
20:42 < gabrielstuff> how come it could ?
20:44 < werle> gabrielstuff: trying to reproduce right now
20:49 < werle> gabrielstuff: how are your files bootstrapped?
20:49 < gabrielstuff> sorry, I do not get the question 
20:49 < gabrielstuff> could you rephrase ?
20:49 < gabrielstuff> please
20:50 < werle> how are you loading and running your files?
20:52 < gabrielstuff> humâ€¦. using require and the classic mvc approach of node + express
20:53 < werle> gabrielstuff: I can't reproduce it
20:53 < gabrielstuff> damn
20:53 < gabrielstuff> any idea where I can search / find ?
20:53 < gabrielstuff> I'm kind of stuck
20:54 < werle> gabrielstuff: https://gist.github.com/jwerle/5579443#file-query-query
20:55 < werle> gabrielstuff: https://gist.github.com/jwerle/5579443#file-index-js is the order of how I'm doing things
20:57 < gabrielstuff> ok you ended with the same result :) it works when it is isolated :) so basically it means there is "something" in the rest of the app that make it breaks
20:58 <@MI6> joyent/node: isaacs v0.10 * a241deb : crypto: Pass encodings for Hmac digest (+12 more commits) - http://git.io/e7XRYQ
20:58 < gabrielstuff> hey !
20:58 < icarot> hello.
20:58 < gabrielstuff> it works using curl :)
20:58 < gabrielstuff> werle
20:58 < werle> gabrielstuff: thats great!
20:59 < gabrielstuff> but it breaks using the form
20:59 < werle> log out that data
20:59 < gabrielstuff> so the issue is in the form
20:59 < gabrielstuff> yup
20:59 < werle> ensure it is actually an object
20:59 < gabrielstuff> hum...
20:59 < gabrielstuff> how couldn't be ?
20:59 < werle> not sure, but you never know
20:59 < werle> always be sure
21:01 < gabrielstuff> hum
21:01 < gabrielstuff> ok
21:01 <@MI6> joyent/node: isaacs v0.10.6-release * 5deb167 : 2013.05.14, Version 0.10.6 (Stable) - http://git.io/39UpKQ
21:01 < gabrielstuff> let me try something
21:01 < mashlol> hey anyone have experience stubbing out requires that have direct functions attached?  e.g. `require("express")();`.  I want to be able to do something like asserting express was required and called.
21:02 < gabrielstuff> dumping the req.body give an object
21:02 < gabrielstuff> the same as the one in the gist
21:02 < werle> mashlol: you can easily assert whether it was required, but the value in which is returns is nondeterministic
21:02 < gabrielstuff> I add the form 
21:02 < werle> gabrielstuff: pop that into a gist for me
21:02 < werle> gabrielstuff: the request body payload
21:03 < gabrielstuff> req.body ? right ?
21:05 < werle> gabrielstuff: yeah
21:08 < gabrielstuff> updated
21:08 < gabrielstuff> https://gist.github.com/gabrielstuff/5579235
21:08 < gabrielstuff> it is an object
21:08 < mashlol> werle: How do I assert whether it was required?
21:09 < werle> mashlol: if you're assertion is that everything module required in this test is that of a function then you can assert that the type of the operand is a function
21:09 < werle> mashlol: not sure about whether it was executed or not
21:13 < werle> gabrielstuff: one moment
21:16 <@MI6> joyent/node: Timothy J Fontaine master * 8886c6b : dns: add getServers and setServers - http://git.io/5Ws9Ng
21:18 < gabrielstuff> werle yup
21:23 < werle> gabrielstuff: are you using express.bodyParser ?
21:23 < gabrielstuff> yup
21:24 < gabrielstuff> req.body comes from here
21:26 < werle> gabrielstuff: hm okay strange
21:26 < gabrielstuff> why that ?
21:27 < werle> well the object you are using to construct the model works if you pass it in, but not when you do it from a form?
21:28 < gabrielstuff> yes
21:28 < gabrielstuff> exactly
21:29 < werle> and that object that you tried is the same that is in the gist?
21:29 < gabrielstuff> yes
21:29 < gabrielstuff> i really copy/paste
21:29 < gabrielstuff> I even tried with node debug
21:30 < gabrielstuff> when i'm pasting the req.body content
21:30 < gabrielstuff> to create in interactive debug mode
21:30 < gabrielstuff> it works
21:30 < gabrielstuff> if I let the debug continue
21:30 < gabrielstuff> it break :(
21:33 <@MI6> joyent/node: isaacs created tag v0.10.6 - http://git.io/1Ied7Q
21:34 < aandy> any backbone wizards? just stumbled upon this persona example, and wondering how they keep tabs on the pop up window (try clicking on mozilla persona and just close the window again). any ideas? seems to run a callback queue, but i can't figure out where the code for checking it's status is.
21:35 < aandy> https://current.trovebox.com/user/login 
21:36 <@MI6> joyent/node: isaacs v0.10 * ca38def : blog: Release 0.10.6 (+3 more commits) - http://git.io/f7otcA
21:38 <@MI6> joyent/node: isaacs v0.10 * f7b10f5 : npm: Upgrade to 1.2.21 - http://git.io/vVmFmw
21:40 < mashlol> I'm having difficulty stubbing global methods (like require).  normally in js you could stub global objects with the window object, is there an object that these global methods are attached to?
21:40 <@MI6> joyent/libuv: isaacs created tag v0.10.6 - http://git.io/H0CV2w
21:40 <@MI6> joyent/libuv: isaacs v0.10 * 1fd10de : Now working on v0.10.7 (+1 more commits) - http://git.io/d65iLw
21:41 < bnoordhuis> mashlol: global.foo
21:41 < bnoordhuis> though require is not a global function
21:41 < gabrielstuff> ok i'm a bit better werle
21:42 < mashlol> any idea how I'd stub require then bnoordhuis ?
21:42 < gabrielstuff> i know the difference between the two query
21:42 <@MI6> joyent/node: isaacs v0.10 * f564b6b : uv: Upgrade to 0.10.6 - http://git.io/xVXzvA
21:42 < werle> gabrielstuff: what is it?
21:42 < gabrielstuff> in the case of curl, path[key].constructor is a function
21:42 < gabrielstuff> when i post the data thru the form, path[key].constructor is an object
21:43 < gabrielstuff> nothing
21:43 < gabrielstuff> i mean
21:43 < gabrielstuff> but both
21:43 < gabrielstuff> return the same output when debugging path[key].constructor
21:43 < gabrielstuff> path[key]
21:43 < gabrielstuff> only
21:44 < werle> hm
21:44 < gabrielstuff> this drives me nuts
21:44 < gabrielstuff> ...
21:45 < gabrielstuff> that is why in the case of the post form, path[key].constructor.name is nothing and in the case of curl it give object
21:45 < werle> hmm
21:45 < werle> maybe it has to do with the bodyParser
21:46 < livinded> mashlol: try something like https://gist.github.com/jrozner/5579856
21:46 < gabrielstuff> hmm and what could it be ?
21:47 < gabrielstuff> hmm and what could it be ?
21:47 < gabrielstuff> hmm and what could it be ?
21:47 < gabrielstuff> hmm and what could it be ?
21:47 < werle> not sure
21:47 < werle> doing some reading about it
21:48 <@isaacbw> gabrielstuff: you should really try to limit the number of lines you use in irc
21:49 < gabrielstuff> ok great, going to see to the mongoose.js chan what they think
21:51 < werle> gabrielstuff: okay good luck
21:51 < gabrielstuff> thank
21:51 < gabrielstuff> I'll keep you informed
21:52 < werle> thanks dude
21:52 < qbit> TooTallNate: Got a working hack piping things around with aucat / lame :D
21:55 <@TooTallNate> qbit: soooooo i shouldn't be expecting any pull requests then? :p
21:55 < qbit> TooTallNate: I will be hackign for a while - I just wanted to have a working example so I could play music whilst I hack :P 
21:56 <@TooTallNate> qbit: haha, i know dat feel :D let me know if you need any help with those config files though, i'm glad to help
21:56 < qbit> k
21:56 <@TooTallNate> qbit: i'm glad you got things working for now thouhg
21:57 < qbit> TooTallNate: why did you decide to use the mpeg123/lame as deps vs using spawn or something? 
21:57 < gabrielstuff> YOUHOU
21:58 <@TooTallNate> qbit: cause spawn() it too easy :p
21:58 < qbit> TooTallNate: rad
21:58 <@TooTallNate> qbit: no i mean, i wrote node-gyp, so i kinda have an obligation to write native addons :p
21:58 <@TooTallNate> haha
21:58 < qbit> right
21:58 < gabrielstuff> werle
21:58 < gabrielstuff> found it
21:58 < qbit> makes sense 
21:58 < gabrielstuff> just see the issue here : https://github.com/LearnBoost/mongoose/issues/1485
21:59 <@TooTallNate> qbit: plus this way, i'm in control of the version of the dependencies used, so i don't have to deal with "oh i have libmp3lame version X installed, why doesn't it work?"
21:59 < werle> gabrielstuff: so wtf
21:59 < werle> is bodyParser removing the prototype?
21:59 < gabrielstuff> wellâ€¦ i guess
21:59 <@TooTallNate> qbit: and a final reason: it makes windows support a lot easier to to it "the gyp way"
21:59 < gabrielstuff> I have to extend
21:59 < gabrielstuff> all the object
21:59 < gabrielstuff> nested object
22:00 < gabrielstuff> mongoose.js is checking
22:00 < gabrielstuff> each of the nested object
22:00 < gabrielstuff> so when you have something which is an object without prototype
22:00 < gabrielstuff> it breaks
22:00 < gabrielstuff> I'm so happy
22:00 < gabrielstuff> even if I understood half of it : /
22:00 < qbit> TooTallNate: k, cool.. coming from OpenBSD i am always trying to link against base or ports if i can :D
22:01 < qbit> I will help with this tho - cuz I want spotify everywhere
22:01 < werle> can you coerce it back to an object with Object(req.body)
22:01 < werle> I don't even know if that will work
22:01 <@isaacbw> lol
22:02 < garbagegod> Can anyone give me any official documentation on express.vhost() ? I can't seem to find any
22:03 <@isaacbw> it's a connect middleware
22:03 < aandy> http://www.senchalabs.org/connect/middleware-vhost.html
22:03 < garbagegod> Ah, okay
22:03 < garbagegod> thank you
22:03 < aandy> not much of doc though, but yeah
22:03 < garbagegod> indeed
22:04 < aandy> ah sorry
22:04 < aandy> wrong link
22:04 < aandy> http://www.senchalabs.org/connect/vhost.html
22:04 < aandy> :)
22:06 < werle> isaacbw: is that too crazy of an idea? haha
22:07 <@isaacbw> werle: it's a bit silly to expect that to do anything meaningful
22:07 < gabrielstuff> werle, let me check
22:07 < werle> isaacbw: I thought so haha
22:07 < substack_> Industrial: bouncy doesn't work in 0.10
22:08 < gabrielstuff> posting the issue
22:08 < gabrielstuff> and tell you after
22:09 < werle> gabrielstuff: cool
22:09 < chapel> gabrielstuff: just know you shouldn't take a plain body object and create a new object with it
22:10 < chapel> obviously for most purposes it wouldn't be an issue, but it could lead to other issues you can't foresee
22:11 < gabrielstuff> it fails
22:11 < gabrielstuff> have
22:11 < gabrielstuff> to extend each of the object
22:11 < gabrielstuff> chapel ?
22:12 < gabrielstuff> what do you mean ?
22:12 < gabrielstuff> if I have a form
22:12 < gabrielstuff> and the datas are in this form ?
22:12 < chapel> gabrielstuff: using req.body is not good
22:12 < gabrielstuff> ah ?
22:12 < chapel> since anyone can put whatever they want
22:12 < gabrielstuff> yup
22:12 < gabrielstuff> of course
22:12 < chapel> regardless of your form
22:12 < gabrielstuff> but I can sanitize
22:12 < chapel> you should sanitize it
22:12 < gabrielstuff> hum
22:12 < chapel> and the easiest way is making a new object
22:12 < chapel> from the dta
22:13 < werle> gabrielstuff: chapel is right
22:13 < gabrielstuff> hey
22:13 < gabrielstuff> smart
22:13 < gabrielstuff> :)
22:13 < chapel> e.g. {config: {blah: req.body.config.blah}}
22:13 < werle> yep
22:13 < chapel> or however it is structured
22:13 < gabrielstuff> hum, this didn't work
22:13 < chapel> that also bypasses the issue you're facing
22:13 < gabrielstuff> I tried
22:13 < chapel> with the missing _proto_
22:13 < gabrielstuff> let me check again
22:15 < gabrielstuff> yup
22:15 < gabrielstuff> it fails
22:15 < gabrielstuff> if nested object
22:15 < gabrielstuff> have to do that for each field
22:15 < gabrielstuff> andâ€¦.
22:15 < gabrielstuff> it doesn't explain why with curl
22:15 < gabrielstuff> it works
22:17 < gabrielstuff> do you suggest using something like : https://github.com/chriso/node-validator
22:17 < gabrielstuff> ?
22:17 < draginx> if I have check('abc', 'Please enter a valid integer').notNull().isInt() how can I proggramtically call .notNull and .isInt?
22:17 < draginx> oh, someone  mentioned node-vlaidator in here :D nice perfect timing
22:18 <@Nexxy> node-vladiator?
22:18 < gabrielstuff> we are trying to talk about sanitization
22:18 <@Nexxy> I miss battlebots ._.
22:18 < draginx> Nexxy: u know what im saying obviously
22:18 < draginx> well how can I programtically call the validators? Like if I have an array ['notNull', 'isInt'] etc.
22:18 < JohnMcLear2> -vlaidator +validator
22:19 < gabrielstuff> chapel or were any idea about this CURL VS Post (bodyparser) ?
22:19 <@Nexxy> draginx, yeah you're talking about this badass: http://www.youtube.com/watch?v=sckCuYiucXo
22:20 < werle> Nexxy: nice
22:20 < werle> haha
22:20 < draginx>  var v = check('abc', 'Please enter a valid integer').notNull().isInt(); how can I programtically call the validators? Like if I have an array ['notNull', 'isInt'] etc.
22:20 < gabrielstuff> ahaha
22:20 < chapel> gabrielstuff: tbh I don't have an idea why it isn't working consistently
22:21 < gabrielstuff> ok going to see with express guys
22:21 < chapel> draginx: its ugly, I wouldn't do it, but you could do check(blah, msg)[check]() where check is something like 'notNull'
22:22 < draginx> hm
22:22 < gabrielstuff> join /#express
22:22 < draginx> Yeah it would be awesome if there was an alternative answer :P
22:23 < chapel> draginx: you could have an array of functions
22:23 <@isaacbw> I thought they were bringing battlebots back
22:24 < draginx> chapel: im sorry?
22:24 < chapel> where each function is function notNull(item) { return check(item, msg).notNull() }
22:24 < chapel> draginx: then checks.push(notNull)
22:25 < chapel> you can then iterate over the checks passing the item you are checking
22:25 < chapel> draginx: whats the intent of doing it programmatically?
22:26 < draginx> chapel: so someone can define a small "model"
22:26 < draginx> with basic validations
22:26 < draginx> i dont control the function "notNull"
22:26 < draginx> and i dont want to re-write *every* function in that library :/
22:26 < chapel> heh
22:27 < chapel> well allow them to pass their own function that does the validation
22:53 <@MI6> joyent/node: piscisaureus created branch tj-try-this - http://git.io/G_fuhg
22:54 <@MI6> joyent/node: Bert Belder tj-try-this * 43b7658 : Test - http://git.io/WwHjyg
23:14 < JaCen915> Hi, have a quick question regarding the gm package for images. Is there a benefit of passing a file stream vs the basic usage (without a stream)
23:16 < keyosk> JaCen915 : I believe you end up tying less ram
23:16 <@MI6> joyent/node: Bert Belder tj-try-this * 7437633 : Test - http://git.io/2CIQWA
23:18 < JaCen915> thanks
23:38 < joaojeronimo> what's the correct way to handle ~ in node ? replace it for "/home/"+process.env.USER ?
23:39 < joaojeronimo> path.resolve doesn't get it
23:41 <@Nexxy> joaojeronimo, not if you're wanting to be compatible w/ windows or osx
23:42 < joaojeronimo> Nexxy, oh I'm not worried with those
23:42 < gf3> LOLame
23:42 <@Nexxy> so the OS should handle resolving ~
23:43 <@TooTallNate> joaojeronimo: there's usually a process.env.HOME variable
23:43 <@Nexxy> that's handy
23:43 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
23:43 < joaojeronimo> thanks TooTallNate, even better :)
23:43 <@TooTallNate> joaojeronimo: this is all node-gyp does fwiw https://github.com/TooTallNate/node-gyp/blob/master/lib/configure.js#L191
23:44 <@MI6> joyent/libuv: piscisaureus created branch reviewme - http://git.io/GaVJdg
23:44 < joaojeronimo> TooTallNate, ha... so I take it that works on windows and osx ?
23:44 <@Nexxy> it works on osx
23:44 < joaojeronimo> Nexxy, good enough
23:44 <@Nexxy> > process.env.HOME
23:44 <@Nexxy> '/Users/nexxy'
23:45 <@TooTallNate> joaojeronimo: node-gyp uses "osenv" package from isaacs 
23:45 <@TooTallNate> which handles all the ossssessss
23:45 < gf3> Nexxy: That's not always set though, is it?
23:45 <@Nexxy> gf3, I'm not sure
23:45 < gf3> RUDE
23:45 <@Nexxy> before TooTallNate mentioned it I wasn't even aware of it
23:46 < gf3> Nexxy: Well it's just $HOME from the shell ENV, non?
23:46 <@TooTallNate> gf3: HOME isn't on windows
23:46 <@Nexxy> m-maybe?
23:46 < gf3> Right
23:46 <@TooTallNate> it's called USERDIR there or something
23:46 < gf3> Yes
23:46 <@Nexxy> %SomethingDir%
23:46 < joaojeronimo> TooTallNate, cool! I'll use that out of pitty for windows users
23:46 <@Nexxy> lolol
23:48 <@MI6> joyent/libuv: Bert Belder v0.10 * 415f4d3 : windows: kill child processes when the parent dies - http://git.io/ClQe4w
23:48 < gf3> It's worth mentioning that even on linux the homedir is not always '/home'
23:50 <@MI6> joyent/libuv: piscisaureus created tag v0.10.7 - http://git.io/8yoMdA
23:51 <@MI6> joyent/libuv: Bert Belder v0.10 * 13496e9 : Now working on v0.10.8 (+1 more commits) - http://git.io/seXxDQ
23:51 < queuetip> stupid question, is 0.6.3 newer or older than 0.6.17
23:53 <@MI6> joyent/node: piscisaureus created branch V0.10 - http://git.io/T3KSjw
23:54 < bnoordhuis> queuetip: older
23:55 < queuetip> bnoordhuis: thank you
23:55 < bnoordhuis> both are EOL'd though
23:57 < queuetip> bnoordhuis: good to know. thanks
23:58 < drojas> quick question -> What hosting would you recommend for a company that is building a social website in node.js that can eventually thousands of users? Joyent/Appfog/Nodejitsu/Amazon/etc... ?
--- Log closed Wed May 15 00:00:57 2013
