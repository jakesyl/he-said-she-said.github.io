--- Log opened Tue Dec 18 00:00:40 2012
00:07 < eagspoo> I need to implement an app that acts as a job queue managing access to a single matlab instance.  Both this queue manager and matlab will be running on windows.   External network clients will submit jobs using POST to the queue manager and have returned to them the job results.   Are there examples or docs of how to do something like this with node.js?   I'm pretty new to node and this seems like a strange application because there i
00:08 < dominictarr> mmalecki, hey
00:08 < mmalecki> dominictarr: OMG
00:08 < mmalecki> HAI
00:08 < dominictarr> hows things?
00:09 < sayd> isaacs: is there a way to install a dep from <package> globally via npm install <package>?
00:09 < mmalecki> great! I still write code and talk to servers, how about you?
00:09 < dominictarr> mmalecki, :( I'm not gonna be able to make it to your nye party :(
00:09 < dominictarr> I'd be overstaying, and get a big red stamp on my passport
00:10 < mmalecki> dominictarr: that sucks :(. how many days counts as overstaying?
00:10 < dominictarr> 90
00:10 < dominictarr> is all you are allowed with out a visa
00:10 <@isaacs> sayd: just install the thing globally
00:10 < mmalecki> wat, that's crazy
00:10 <@isaacs> sayd: no, npm will not put all the deps in the top level.
00:10 <@isaacs> sayd: that's why npm exists.
00:10 <@isaacs> sayd: to not do that
00:11 < mmalecki> dominictarr: ooc, what would the big red stamp do?
00:11 < sayd> isaacs: right so i'd have to install -g the package
00:11 <@isaacs> sayd: yessir
00:11 < dominictarr> mmalecki, it regenerates after 180 days since you arrive
00:11 < dominictarr> so I can come back after a feb
00:11 < mmalecki> dominictarr: I'll be in USA by then
00:12 < mmalecki> dominictarr: you going to thaijs?
00:12 < dominictarr> you have all your visa stuff sorted out?
00:12 < dominictarr> no, I'll be in NZ in feb
00:12 < mmalecki> dominictarr: no, I have to see my teachers and all that still
00:12 < dominictarr> oh
00:13 < dominictarr> new york is really cool anyway
00:13 < dominictarr> I recommend it
00:13 < mmalecki> ahah, thanks
00:14 < mmalecki> dominictarr: I have a cat :3
00:16 < dominictarr> oh, very good.
00:16 < mmalecki> dominictarr: yup, a rescue :). so where are you now?
00:17 < dominictarr> I'm in NY
00:18 < dominictarr> 10 more days... then berlin for this mad science conf ehsm.eu
00:18 < dominictarr> then to NZ via asia
00:18 < dominictarr> ... then back to Europe
00:19 < mmalecki> dominictarr: how about we meet and grab some coffee in Berlin?
00:19 < dominictarr> you should come to this conference it's 100 euros
00:20 < dominictarr> full of CRAZY SHIT
00:20 < dominictarr> like DIY fusion reactor
00:20 < mbalho> dominictarr: man im jealous, ehsm sounds rad
00:20 < superjoe> what tools do you use to deploy to ec2?
00:20 < mmalecki> that cheap for crazy shit? count me in
00:20 < superjoe> currently I have a home-grown script that scp's a tarball and runs npm install
00:20 < mmalecki> dominictarr: where are you staying in Berlin?
00:20 < superjoe> is there a module that already solves this?
00:20 < dominictarr> don't know yet
00:21 < dominictarr> hmm, it's only 35 euro for a day ticket
00:21 < mmalecki> dominictarr: oh, actually, that might not work out - I'm invited to my roommate's gf holiday dinner
00:21 < dominictarr> or 50 euro if you can prove you are a student
00:21 < dominictarr> it goes for 3 days
00:22 < mmalecki> dominictarr: lulz studying
00:22 < mmalecki> okay, I'll see how shit goes
00:22 < dominictarr> and the train to poznan to berlin is like 20 euro?
00:22 < mmalecki> tickets from Poznan to Berlin are damn cheap
00:22 < mmalecki> yeah :)
00:22 < dominictarr> "Minors (-18) can get into EHSM for free accompanied by a responsible adult (who needs a ticket)."
00:23 < nathan7> oh hey
00:23 < mmalecki> dominictarr: I'm way over 18 year old XD
00:23 < nathan7> I was unaware of that
00:23 < nathan7> oh, 'responsible adult'
00:23 < nathan7> Damnit.
00:23 < mmalecki> dominictarr: actually, I'm 18 year old.
00:24 < CoverSlide> 18 and a half?
00:24 < mmalecki> nathan7: I can be a responsible adult
00:24 < mmalecki> or act like one
00:24 < dominictarr> absolutely, mmalecki is one of the most responsible adults I know
00:24 < nathan7> oh wait, that overlaps with 29C3
00:24 < dominictarr> :( yeah
00:24 < nathan7> No fusion reactors for me
00:25 < nathan7> train tickets to Hamburg cost me a fortune
00:25 < bbs> hey there all
00:26 < mmalecki> dominictarr: I sense a little bit of irony in your sentence ;)
00:26 < bbs> I have a question with the mysql driver (https://github.com/felixge/node-mysql) anyone have a minute? I've been pulling my hair out over here :(
00:26 < nathan7> like anyone checks how responsible you are
00:26 < CoverSlide> bbs: what's the question?
00:28 < bbs> CoverSlide: for some reason I can't get my app to connect, I'm parson a json file to get the db info and creds, but I've even tried removing the varibles and putting the strings in, I keep getting "[TypeError: Object #<Object> has no method 'createClient']
00:28 < bbs> G" I've doubleconfirmed that all my connection info was correct and I'm running the db on localhost
00:28 < dominictarr> nathan7 is right
00:28 < bbs> parsing*
00:28 < CoverSlide> bbs: that error means you're not using the api right
00:29 < bbs> Coverslide: how so If I may ask? (you can consider me a n00b :P)
00:29 < nathan7> Challenge: Find a schizophrenic minor and have him argue his other personality is adult and responsible enough
00:30 < mmalecki> nathan7: okay.
00:30 < bbs> coverside: here's where it is in my app's code (forked a project from github) https://github.com/sharedferret/Sparkle-Turntable-Bot/blob/master/sparkle.js line 169
00:30 < nathan7> and get him into there that way
00:30 < bbs> CoverSlide*^
00:30 < mmalecki> nathan7: I'm out looking, don't expect me to come back soon
00:30 < mrryanjohnston> Is there a way to specify what incoming dns your http server should listen for?
00:31 < mrryanjohnston> such as PHP's HTTP_HOST
00:31 < _numbers> other than defining the function b from within function a, or referencing this.c, how can i make this code work? is there any other way e.g. closures, .apply()?  http://bit.ly/U5exYs
00:31 < nathan7> mmalecki: by the way, what's next?
00:31 < _numbers> i'm trying to set globals without polluting the global space
00:31 < CoverSlide> bbs: show your code
00:32 < bbs> CoverSlide- that's it.. I didn't modify this file- https://github.com/sharedferret/Sparkle-Turntable-Bot/blob/master/sparkle.js Line 157 is where the db connection starts
00:32 < CoverSlide> bbs: as far as I can tell, what's on the readme should suffice
00:33 < nathan7> mrryanjohnston: You can't listen on a host
00:33 < nathan7> mrryanjohnston: TCP doesn't know about DNS names
00:33 < mrryanjohnston> ah, bummer
00:33 < nathan7> mrryanjohnston: You can have a reverse proxy sling requests to various servers based on the hostname passed over HTTP
00:34 < mrryanjohnston> nathan7: yeah, I was mostly curious if I was able to do it at the node level. Reverse proxy is possible, but I'm working with semi-limited resources.
00:34 < bbs> Converslide, well I'll start over and just npm that and see what happens, thanks
00:35 < nathan7> mrryanjohnston: node-http-proxy for all your reverse-proxying needs
00:36 < verysoftoiletppr> greets
00:36 < mrryanjohnston> nathan7: gracias, sir. I will look into this
00:37 < verysoftoiletppr> this is not directly related with node, but you guys might know about this.
00:37 < verysoftoiletppr> I'm using casperjs to scrape a website
00:37 < CoverSlide> i don't think casper uses node at all
00:37 < verysoftoiletppr> CoverSlide it doesn't 
00:37 < CoverSlide> well anyway go on
00:38 < EyePulp> he did say this wasn't directly related to node...
00:38 < CoverSlide> true, but "not directly related" and "not related in any way whatsoever" are two different things
00:38 < verysoftoiletppr> I need to verify the availability of domain names scraped with the casperjs job
00:39 < EyePulp> ahhh, but you forget â€¦ node.JS  --- casperJS
00:39 < verysoftoiletppr> I'm was doing that with python by invoking the whois tool
00:39 < EyePulp> verysoftoiletppr: how's that working out for you. =)
00:40 < CoverSlide> whois should give you all the info you need
00:40 < verysoftoiletppr> EyePulp fine, but there is no way in casper or phantom to call external commands
00:40 < EyePulp> whois is a patchy mishmash.
00:40 < EyePulp> it's a crapshoot whether the format is readable.
00:40 < CoverSlide> true
00:41 < EyePulp> https://www.robowhois.com/ or hexillion.com  have built nice wrappers over it.
00:41 < CoverSlide> i don't know if phantom or casper for that matter can make whois calls
00:41 < EyePulp> gotta go folks.  l8r.
00:42 < CoverSlide> or any non-http/https tcp calls
00:42 < bbs> ConverSlide, so I just went and npm'd that and started over again, and still getting that error, any ideas?
00:42 < bbs> I'm trying to get ahold of the original creator
00:44 < verysoftoiletppr> I think my best shot will be to just interface with python through some sort of database..
00:46 < CoverSlide> bbs: oh well it looks like node-mysql's api changed from .createClient to .createConnection
00:46 < bbs> Ahhh
00:47 < bbs> I'll give that a try
00:49 < TehShrike> m|
01:04 < mrryanjohnston> nathan7: THis is exactly what I was looking for. I believe someone in nodejitsu told me about this a year back or so but I'd forgotten about it.
01:04 < mrryanjohnston> Thanks again
01:04 < myndzi> is there ANYTHING that works for remote debugging?
01:06 < CoverSlide> no, nothing the world ever
01:06 < Hotroot> I think I just set a record for the hackiest looking line of code
01:06 < Hotroot> newHand.unshift(newHand.splice(newHand.indexOf(smallHand[1])).toString());
01:06 < myndzi> i've literally spent the whole day trying to get a heap snapshot from a node app, but none of the modules seem to actually work
01:06 < CoverSlide> Hotroot: i've seen 1000x hackier code
01:07 < Hotroot> Well, a personal record at least
01:07 < Hotroot> That entire piece is to move a specified element to the 0th index
01:08 < Hotroot> I can't just swap either, because it comes after a .sort
01:09 < Hotroot> Hmm, actually worked surprisingly well
01:12 < Hotroot> Of course I had to jinx it, so it's broken now
01:12  * CoverSlide hides his voodoo doll
01:15 < Hotroot> Oh, it's literally using the -1 that indexOf is returning
01:15 < Hotroot> Not sure why it's returning -1 though...
01:18 < Hotroot> oadisgj]ds
01:34 < Hotroot> Wow, that's quite a bug
01:34 < Hotroot> Suddenly node just doesn't respond to socket.io messages. I get no error message at all
01:34 < Hotroot> All I changed was 1 array sorting line
01:36 < nathan7> Hotroot: That's your bug, not node's.
01:37 <@konobi> myndzi: webkit-dev-agent
01:37 < nathan7> Hotroot: If your array sorting line blocks forever, then node doesn't get to handle any events
01:37 < Hotroot> nathan7: Yeah, definitely mine
01:37 < Hotroot> It was a mistyped for loop. Infinite loops ftw
01:43 < othiym23> superjoe: did you ever get an answer to your deployment question?
01:43 < superjoe> othiym23, nope
01:43 < othiym23> I was working on a system a medium-sized fleet of EC2 app servers running ~100 LXC containers each with their own Node environment
01:43 < othiym23> we played with a bunch of stuff and eventually settled on using Fabric for the deployment step
01:44 < superjoe> thanks for the tip, I'll check it out-
01:44 < othiym23> I originally chose Capistrano, but it had too many Railsisms embedded in it
01:44 < othiym23> the closest thing to a good deploy tool in Node itself is probably substack's fleet, but there's nothing EC2-specific to it
01:45 < md_5> how can I read and write big endian numbers to a socket
01:45 < superjoe> ec2-specific is not a requirement
01:45 < chilts> othiym23: Frabric being this? http://docs.fabfile.org/en/1.5/
01:45  * chilts is curious
01:45 < superjoe> md_5, read the api docs
01:45 < othiym23> chilts: yeah
01:46 < chilts> sweet, thanks
01:46 < chilts> I'll take a look at that
01:46 < othiym23> I wouldn't want to use Fabric as a general-purpose orchestration tool (and in fact my boss ended up writing a purpose-built tool in Python to manage our infrastructure), but it's great for deploys
01:46 < md_5> superjoe ah buffer is more flexible than I thought, what about reading packets, how can I defer reading till I have enough data
01:46 < othiym23> chilts: the better you know Python, the more mileage you'll get with Fabric ;)
01:47 < othiym23> md_5: if you just use the default net socket response, it'll stream the data to you
01:47 < othiym23> just listen for data events
01:47 < md_5> what happens when I try to read beyond the buffer
01:47 < md_5> "Emitted when data is received. The argument data will be "
01:47 < othiym23> that's almost a koan
01:48 < md_5> In this case I need to read packets with no length header
01:48 < CoverSlide> the buffer has a length property
01:48 < md_5> so I need to read until I have consumed a full packet
01:48 < othiym23> the buffer that will be passed to the callback by the data event will have everything that the socket received at that time
01:51 < md_5> how do I write colours to the console?
01:52 < CoverSlide> md_5: you need to use ascii escape sequences, or use a library
01:52 < md_5> any such library? I know connect.logger(dev) has colours
01:53 < md_5> windows colour support would be a bonus from a library, even though I use linux
01:53 < CoverSlide> md_5: https://npmjs.org/package/ansi
01:53 < md_5> ty
01:53 < CoverSlide> ^ that's what npm uses
01:54 < Hotroot> Amazing how much code I'm using to sort a hand of cards
01:55 < superjoe> you're probably doing it wrong
01:56 < CoverSlide> that would be my guess
02:01 < Hotroot> superjoe: Indeed I am. I went array -> string -> array
02:01 < Hotroot> I honestly spent like an hour on this, and I didn't think of just keeping it as an array until now
02:01 < superjoe> it's fun when you figure out how to simplify complicated code :)
02:01 < Hotroot> Yeah, was kind of a waste of time though
02:02 < Hotroot> Will be nice to see it cleaner though
02:08 < Hotroot> Yeah, just cut at least 50 lines
02:09 < hjr3> anyone have copies of node rpm's? The website is no longer accessible. I would be willing to host them
02:15 < Hotroot> hjr3: Just curious, but what's the point?
02:15 < Hotroot> Easy updating?
02:16 < hjr3> Hotroot i provision the vm's using puppet. and production machines do not have gcc
02:16 < hjr3> i don't mind building an rpm, but there are ~20 node rpm's
02:16 < hjr3> silly me did not download the spec file or save local copies of the rpm's
02:17 < Hotroot> h
02:17 < Hotroot> *Ah
02:19 < myndzi> (back from reading a bunch of stuff) konobi: that's one of the ones i couldn't get working, even after lobotomizing its included v8-profiler
02:19 < myndzi> perhaps i should specify i am trying to do this on windows
02:19 < myndzi> i do most of my work on linux, but i was hoping to set up something local i could work with
02:20 < myndzi> thanks for the reply too
02:20 < substack> othiym23: fleet is still a bit buggy, I'm going to do a revamp pass pretty soon to make it more solid
02:21 < substack> I fixed a big pushover issue so that will help
02:21 < substack> but the new version will use scuttlebutt and secure-peer
02:21 < substack> which should be much more partition-tolerant too
02:37 < jrajav> I want to write a potentially long-running loop such that it cedes to any other operations on each iteration
02:37 < jrajav> What's the best way to do that?
02:37 < othiym23> substack: either way, I think fleet is a way more powerful tool than Fabric for deployment, both in terms of learning curve and in terms of abilities
02:38 < othiym23> jrajav: can you turn it into an EventEmitter?
02:38 < jrajav> Is it enough to write the loop as an accumulating recursion, or could/should I wrap each iteration of the loop in a process.nextTick?
02:38 < othiym23> jrajav: you could do it with direct recursion, but use process.nextTick instead of simply calling the function
02:39 < othiym23> if you want other handles to get processing time, you have to ensure it gets that time explicitly
02:39 < jrajav> Does that set a significant lower limit on the performance, though?
02:39 < jrajav> N * ticksize?
02:39 < othiym23> there's nothing in Node that will act in the stead of a preemptive scheduler
02:40 < othiym23> due to the JIT, you're not going to be able to get a precise handle on how much overhead that adds
02:40 < othiym23> maybe a better alternative is to spawn a child process to do a long-running computation
02:41 < othiym23> which makes figuring out fairness and starvation the kernel's problem, not yours
02:43 < jrajav> That's hyper overkill
02:43 < jrajav> This is just a filter operation over a set of files (as strings)
02:44 < jrajav> I want it to be as performant as it can be for both small and large data sets
02:44 < jrajav> For small sets, restricting to one iteration per tick might result in noticeable performace drop
02:44 < jrajav> And forking a process for each filter op definitely would
02:45 <@konobi> what sort of filter?
02:45 < mrvisser> Hi all, curious to hear if anyone has been able to use RabbitMQ as a delayed job queue with node? we're currently using the amqp package, but don't see an option for a delayed (i.e., timed) job.
02:46 < jrajav> Basically just indexOf
02:46 < jrajav> :P
02:46 < jrajav> Well, it'll be more complicated than that, but that'll be the core of it
02:46 <@konobi> ?
02:46 < jrajav> I'm writing a note-taking app
02:46 <@konobi> indexOf what?
02:46 < jrajav> The files
02:46 < jrajav> As in, you enter a search query
02:46 < jrajav> List of files is filtered
02:47 <@konobi> and you want the name of the file back?
02:47 < jrajav> I'm not *reading* the files too
02:47 < jrajav> That's already been done
02:47 < jrajav> I'm hoping to be able to just hold them all in memory
02:48 <@konobi> jrajav: spawn a grep?
02:48 < jrajav> That's also kind of overkill...
02:49 < jrajav> Okay, not files. Just big strings in memory.
02:49 <@konobi> Array.filter?
02:50 < jrajav> That brings us back to my original question - is there an elegant way to make this not completely synchronous?
02:50 < jrajav> But without only doing one loop iter. per event loop tick
02:51 < jrajav> I know how to actually do the filter - I wasn't asking that.
02:52 < Jakey> sup
02:53 < jrajav> Maybe I should just use a database
02:53 < TooTallNate> jrajav: you could spawn a node child process to do the filter() call there
02:53 < jrajav> This would solve the problem of synchronicity and memory scaling in one shot at the cost of some performance
02:54 < jrajav> TooTallNate: Yeah, but then I either have to do IPC or spawn a new process for each filter
02:54 < TooTallNate> yup
02:54 < jrajav> And spawning a new process is too much
02:54 < jrajav> I'm going to kick off a new filter operation for every keypress
02:54 < TooTallNate> i mean, in most cases the fact that .filter() is sync isn't gonna matter
02:54 <@konobi> jrajav: calling nextTick isn't going to guarantee that it's going to be on the very next tick
02:54 < TooTallNate> but in the rare cases that it does, you should use a child process
02:55 < jrajav> TooTallNate: Err, how would I tell programmatically?
02:55 < jrajav> konobi: That's even worse then!
02:55 < TooTallNate> what you mean?
02:55 <@konobi> jrajav: something else could have called nextTick during filtering
02:57 <@konobi> anyways... until you have actual numbers, seems like preopt
02:59 < mrvisser> In case my question got buried, just wanted to know if anyone has used a clustered "cron" type thing before. I've found kue, which seems like way more than I need, anyone know of a simple cron scheduler that will work in a cluster? We already have RabbitMQ, so if there is a way to do a delayed job with that, that would be good as well.
03:00 < mrvisser> the amqp API doesn't seem to expose and ability to fire a job that only activates in X seconds
03:00 < jrajav> konobi: I have written this exact app for two other platforms in the past
03:01 < jrajav> konobi: I know that filter operations can potentially block the UI and it's better to solve the problem at inception
03:01 < jrajav> There's a difference between premature optimization and knowing the exact issues you'll eventually need to address in your problem space
03:01 < mrvisser> jrajav: what are you filtering the array for?
03:02 <@konobi> the async library has map/filter
03:02 < jrajav> Someone could easily use this app for 10,000 notes, or 100 notes that have 2-3 ones of 50mb size
03:02 < jrajav> konobi: That's for working with functions that are asynchronous, not for magically making a loop asynchronous over its iterations
03:02 < jrajav> mrvisser: It's a note-taking application with incremental searching
03:02 <@konobi> jrajav: i've used it to async over an array
03:03 <@konobi> async.filter(array, filterFunc, function(results){ ... })
03:04 < jrajav> Okay, I practically have half of async's source memorized. All it does is track series of operations that could be synchronous or asynchronous and call callbacks when they're finished
03:04 < jrajav> If you async.map or .filter and your test function is completely synchronous, your function will not cede at any point.
03:05 < mrvisser> jrajav, so at every keypress, you do a search?
03:05 < jrajav> Yup
03:05 < jrajav> I will cancel running filter operations if a new one starts
03:05 < jrajav> Which is another reason I'll probably just have to do process.nextTick
03:05 < jrajav> On each one
03:06 <@konobi> sounds like you want a pre-calculated index
03:06 < jrajav> Each iteration that is
03:06 < mrvisser> how are you building your query?
03:06 < jrajav> konobi: What, for every possible sequence of characters?
03:06 < jrajav> mrvisser: It's user input
03:06 < jrajav> Basically just substrings (separated by word)
03:06 <@konobi> jrajav: based on your input
03:06 < mrvisser> jrajav: are they searching their own notes? or are you searching something as they take notes?
03:07 < jrajav> konobi: Well, I will be memoizing each word of the input thus far - that still doesn't solve the issue of running filters.
03:07 < jrajav> mrvisser: They're searching
03:08 < mrvisser> so you're basically doing a keyword search on their notes, is that accurate?
03:08 <@konobi> jrajav: index the files to generate the words mapped to files... then take those "words" and have your autocomplete based on those
03:08 < jrajav> mrvisser: Yes
03:09 < jrajav> Okay, I might do autocomplete, but it wouldn't be based on previous searches. It would be based on the note titles
03:09 < mrvisser> jrajav: you'll probably want a way to index this on a file-system, then your indexing op's will be asynchronous.. the problem is probably using node to actually do the index analysis, especially at 50mb as you mentioned earlier
03:09 <@konobi> autocomplete the content, not the query
03:09 < jrajav> And yes, this is a great idea to improve the filter performance, and I'd already thought about it, but that's still unrelated to the issue at hadn
03:09 < jrajav> @ konobi 
03:10 < jrajav> mrvisser: In other words, use a database with full-text search? :P
03:10 <@konobi> yeah, i think i'd spawn a child process that does stdin/stdout
03:10 < mrvisser> even if doing in-memory and yielding, the node process will still be single-threaded and eventually that array filtering (even if yielding) is going to take up user time
03:10 < jrajav> I probably should, but I was hoping to do it my way
03:10 < mrvisser> yea use something with full-text search, it will even give you flexibility to tune your results
03:11 < jrajav> Well the only user time that really matters is other filter operations
03:11 < mrvisser> so you can give more relevant searches etc etc.. I think you'll end up with a more high-quality product in the end
03:11 < jrajav> i.e. I want to avoid at all costs doing one filter operation to completion when they've already typed in 3 more letters
03:11 < jrajav> This isn't going to block the UI ever - it's node-webkit
03:11 <@konobi> appjs ftw?
03:12 < jrajav> Why, have you used both?
03:12 <@konobi> kinda
03:13 < jrajav> Why would one use appjs instead of node-webkit?
03:13 < mrvisser> jrajav: if you must do your own analysis, then chunk it and process.nextTick, like you guys referred to before
03:13 < mrvisser> that's my input :P
03:14 < mrvisser> 50Mb is a lot to scan and index, though
03:14 < jrajav> Maybe I should try a no-op process.nextTick() loop and see if it actually does anything
03:14 < jrajav> And if so at what N
03:14 < mrvisser> see if it does what?
03:14 < jrajav> Err, if it actually introduces a lag
03:14 <@konobi> sphinx and solr are pretty easy
03:15 < mrvisser> bed time, cheers
03:15 < substack> othiym23: the existence of many of my infrastructure projects is best explained by how much I hate configuring big applications
03:15 < jrajav> If I was to use a database I would just go with SQLite or something
03:16 < jrajav> No need for anything fancy
03:16 < substack> jrajav: leveldb is pretty sweet
03:16 < substack> much faster than sqlite too
03:16 < rvagg> s/leveldb/levelup
03:16 <@konobi> yeah, just depends if you want to do weighting or things like query operators
03:16 < substack> whichever the kids are using these days
03:17 < jrajav> I think you're far overestimating my use case
03:17 < jrajav> I'm *just* doing a substring search
03:17 < jrajav> (Splitting by word)
03:17 < rvagg> jrajav, substack, konobi, see benchmarks for levelup vs sqlite3 for simple k/v store & retrieve: https://github.com/rvagg/node-levelup/pull/41#issuecomment-11438266
03:17 < substack> konobi: or https://github.com/dominictarr/level-scuttlebutt or https://github.com/dominictarr/map-reduce
03:19 <@konobi> rvagg: also sorted by date?
03:19 < rvagg> konobi: string sorting, so JSON date format is usually fine
03:19 < rvagg> well, levelup has a 'json' encoding so you could even just throw dates at it as keys
03:20 < jrajav> That wouldn't sort them by date... :P
03:21 < rvagg> yes it would
03:22 <@konobi> well, assuming ISO dates, lexigraphical sorting would be fine
03:22 < mbalho> json stringify produces iso8601 which sorts lexicographicallty
03:22 < mbalho> -t
03:22 < jrajav> Oh
03:22 < mbalho> #protips
03:22 < jrajav> TIL
03:22 < rvagg> is there a V8 bot in here?
03:22 < rvagg> >>
03:23 < mbalho> .. console.log
03:23 < rvagg> JSON.stringify(new Date()); if you care
03:23 < jrajav> ecmabot in ##javascript has v8>
03:23 < mbalho> i forget
03:26 < niggler> >> "hi" @ rvagg
03:26 < purr> rvagg: (string) 'hi'
03:26  * niggler pets purr
03:26 < niggler> >> "i am purr" @ mbalho
03:26 < purr> mbalho: (string) 'i am purr'
03:27 < rvagg> >> JSON.stringifu(new Date())
03:27 < purr> rvagg: TypeError: Object #<Object> has no method 'stringifu'
03:28 < jrajav> Dang. :/
03:28 < rvagg> >> JSON.stringify(new Date())
03:28 < purr> rvagg: (string) '"2012-12-18T03:25:51.342Z"'
03:28 < rvagg> bah! it doesn't have stringifu, what kind of lame bot is this??
03:28 < jrajav> Well, it's not like I expected any differently- but wrapping loop iterations in process.nextTick() does result in an order of magnitude increase
03:28  * rvagg fights purr with his stringifu powers
03:28 < jrajav> A loop that takes 0.15 secs takes 0.25s with ticks
03:28 < jrajav> And one that takes 1.79s takes 25.81 (!) with ticks
03:29 < niggler> lol rvagg
03:29 < niggler> it has string-fu
03:33 < jrajav> I wish I could just have a sentinel variable in the loop to see if it should end to let a newer one take over
03:33 < jrajav> But there's no way that variable could ever be set unless it cedes control
03:52 < Zak> string-fu python
04:20 < dnz-> what else
04:39 < mbalho> >> JSON.stringifu = JSON.stringify; JSON.stringifu(new Date())
04:39 < purr> mbalho: (string) '"2012-12-18T04:36:59.233Z"'
04:44 < mbalho> https://npmjs.org/package/gpio https://npmjs.org/package/onoff https://npmjs.org/package/pi-gpio https://npmjs.org/package/rpi-gpio https://npmjs.org/package/rpio but none of them use streams :(
05:05 < Hotroot1> "moorcock.freenode.net" That a joke?
05:07 < Zak> Hotroot1: no. Googling it, all of the irc servers for freenode are based on famous writers
05:07 < Zak> actually, that's wrong too
05:08 < Zak> but most of them are authors
05:08 < Zak> http://www.freenode.net/irc_servers.shtml
05:08 < Zak> Asimov, Hubbard etc
05:08 < Zak> Moorcock must refer to http://en.wikipedia.org/wiki/Michael_Moorcock
05:12 < dileep> Gud Mrng Nooders!!!
05:24 < bbs> Coverslide: by the way you got it solved for me, I went through and changed everything from "client." to "Connection." and I was finally able to get in, thanks again for your time! you saved me a boat load of headaces
05:34 < ThePrimeMedian> I want to be able to call API.call('users.getFriends', callback), I have a file called users.js and a method called getFriends inside that file. How do I call said API method? Any pointers?
05:36 < chrisbislr> ThePrimeMedian: in users.js set module.exports = {getFriends: function(){}}
05:37 < chrisbislr> then in your main file you can var UserAPI = require('./users.js');
05:37 < ThePrimeMedian> chrisbislr: thanks, i need the reverse. How do I call a method from a string
05:37 < chrisbislr> then call UserAPI.getFriends
05:37 < chrisbislr> well you could go UserAPI['getFriends']()
05:37 < chrisbislr> or UserAPI[myString]()
05:37 < ThePrimeMedian> hrm. cools, thanks chrisbislr
05:41 < dileep> unable to update node fromv0.4.10 to v0.8.16
05:47 < mscdex> dileep: it's possible, but there's a lot of changes
05:49 < dileep> mscdex,yeah buddy im
05:50 < mscdex> does anyone here use FTPS (not to be confused with SFTP)?
06:46 < cxreg> i've been reading the domain.js code, and event.js, and i can see how it catches errors returned or emitted, but not ones thrown
06:46 < cxreg> neither module has a try/catch
06:46 < cxreg> anyone know how that works?
06:56 < Orbitrix> anybody getting all up inside socket.io's guts
06:56 < Orbitrix> ?
06:56 < Orbitrix> its fun
06:56 < Orbitrix> :::::::::|)=-._
06:57 < Orbitrix>       ( o Y o )
06:57 < Orbitrix> y/n?
06:57 < othiym23> cxreg: look at the bits of domain.js that adds an uncaughtException handler
06:57 < othiym23> and you shall see how it captures exceptions
06:57 < othiym23> enlightenment shall surely follow thereupon
06:59 < iksik> hello
07:04 < iksik> i need a way, to spawn httperf and grab its stdout/stderr by node, but not after httperf will done its job, i need to grab it 'live' - https://gist.github.com/14e0c91d723576cab0fb this code, can spawn 'traceroute' for example, and it works as expected, but for httperf it dumps whole output only at the end
07:05 < iksik> https://gist.github.com/507aa15addbee16ec619 - and here, some code which is using tty to launch the vim instance (which works), modified to spawn httperf instead - also... does not work as expected ;/
07:27 < cellvia> as a general rule... if i have a function that will run many times and use a static array,  memory and performance wise it is better to declare that array outside of the scope in which it is repeatedly called.... yes?
07:29 < cellvia> the only reason i imagined otherwise is the thought that declaring it outside the scope might cause it to hang around in memory unnecessarily when its not needed
07:42 < cellvia> zzzz
07:44 < iksik> ;]
08:25 < adman65> hey
08:25 < adman65> what's the best way to export on a global that will work in node/browsers/amd/blah blah
08:40 < jcrew> you want to do do a safe export so it works whether the module is included client or server side?
08:40 < [AD]Turbo> hi there
09:02 < Trindaz> a mocha question
09:02 < Trindaz> it's totally ignoring my assert.equal calls
09:02 < Trindaz> so when i do assert.equal(1, 2) it doesn't seem to throw an error or fail the test
09:03 < Trindaz> what's going on?
09:04 < chovy> Trindaz: what's your test look ike?
09:04 < chovy> like*
09:09 < Trindaz> thanks chovy
09:09 < Trindaz> http://pastebin.com/axN1G4H9
09:10 < Trindaz> i've tried to make it fail in 2 ways
09:10 < Trindaz> by having a false assertion, and by passing an object to done (which supposedly takes an obj for an error as its first arg)
09:10 < Trindaz> but the test passes
09:11 < Trindaz> i know it's definitely being tested because I get the output in my terminal window Test Activating Devices
09:21 < olan> EAADRNOTAVAIL error comes to me what to do
09:22 < Shinster> olan: means the port is already in use
09:22 < Shinster> olan: or you just can't bind to an interface
09:23 < olan> Shinster i changged it again,but comes the same
09:23 < jawsome> olan: Are you trying to bind to an IP that doesn't exist or a port already in use? ^
09:23 < Shinster> try killing existing node sessions in the background
09:23 < chovy> Trindaz: i'm using should.js
09:23 < chovy> w/ mocha
09:23 < Shinster> http://stackoverflow.com/questions/6829563/nodejs-error-eaddrnotavail-cannot-assign-requested-address <- 2nd result on google
09:23 < olan> jawsome,i made static ip
09:24 < chovy> olan: are you binding to a lower port? try something over 3000
09:24 < chovy> you might need to be root to bind to port 80 for example.
09:24 < Trindaz> what do you mean you're using should.js
09:24 < olan> yeah 4000
09:24 < Trindaz> what is that?
09:25 < jawsome> olan: In addition to the port suggestions, you should try binding to 127.0.0.1 instead of your public/static IP.
09:25 < chovy> Trindaz: var assert = require("assert")
09:25 < chovy> did you add that?
09:25 < chovy> (should gives you bdd style syntax)
09:25 < Trindaz> yup
09:25 < Trindaz> that's what i got
09:25 < Shinster> olan: try changing it to 4001, if 4000 used to work you might have a rouge node thead still listening on it
09:26 < chovy> killall node
09:26 < chovy> then start again
09:26 < Shinster> ^
09:26 < Shinster> ps aux | grep node
09:26 < olan> ok...
09:26 < chovy> Trindaz: ok, let me try your test
09:27 < jawsome> olan: If you got any results from `ps aux | grep node`, then you should run `killall node` or `killall -9 node`. This is assuming you have root privileges.
09:28 < Shinster> are you running it on linux or mac os?
09:28 < jawsome> olan: By "any results", I mean, not the grep process.
09:29 < chovy> Trindaz: that test failed for me, as it should. 1 does not equal 2
09:30 < Trindaz> crazy
09:31 < Trindaz> then how come mocha isn't recognizing it as a failure???
09:31 < chovy> Trindaz: https://gist.github.com/a6cb7e16ffe7a7b0a327
09:31 < chovy> it fails for me
09:31 < chovy> how are you running it?
09:32 < Trindaz> that's a tricky quesiton - i'm adding tests to a much much larger project that i'm new on
09:32 < olan> noders!!! it works on 127.0.0.1 but not on my satic ip...i waana to use static ip
09:33 < Trindaz> the tests seem to be added just fine because i get the new test names in the console output, and the total number of tests run in the final report goes up by one, so it's obviously recognizing the new tests that i'm adding, but it's just not catching the errors
09:35 < chovy> Trindaz: see if you can just mv ./test ./tmp-test and add your one test to ./test/foo.js
09:35 < chovy> that will at least isolate it
09:35 < chovy> i'm using a Makefile to run my tests and it works for me.
09:35 < Trindaz> i need to run all the current tests tho
09:35 < chovy> i know, but just to see if you can get your test to fail.
09:37 < chovy> maybe your tests aren't being run properly
09:37 < chovy> i usually just add it to ./test/
09:37 < chovy> and run 'make test'
09:37 < chovy> in root
09:37 < jawsome> olan: Have you tested remotely to confirm it isn't accessible while listening on 127.0.0.1? Have you also made the proper firewall adjustments to allow external connection on such a port? 
09:38 < chovy> olan: i didn't have to bind to my real ip address. i just used 127.0.0.1 on port 80
09:38 < jawsome> ^ I've always used either localhost[127.0.0.1] or 0.0.0.0
09:39 < Trindaz> i figured it out
09:39 < Trindaz> it wasn't running the test
09:39 < chovy> olan: actually, that's not entirely true. i use my hostname with express, not ip address.
09:39 < Trindaz> mocha runs through a bunch of tests until it finds an error, but then for some reason it goes through all the other registered tests and prints out their names etc. but doesn't run them
09:39 < Trindaz> so after commenting out a previous test that fails it continues on to other tests
09:39 < dleonardi> hi! i'm building node on ARM and i get this: ../deps/v8/src/arm/macro-assembler-arm.cc:65:3: error: #error "For thumb inter-working we require an architecture which supports blx" 
09:39 < Trindaz> thanks chovy
09:40 < chovy> Trindaz: mocha won't break on error by default
09:40 < guor> well dleonardi, your arm platform doesn't have the BLX instruction
09:40 < chovy> it will continue to run through all tests.
09:40 < dleonardi> i tried setting localhost:/home/debian/node-0.8.16# export CFLAGS=-march=armv6   to make clear what platform i have
09:41 < dleonardi> guor: can i disable those feats somehow? or is it a requirement?
09:41 < dleonardi> i see nothing about blx in ./configure --help
09:42 < guor> lemme see
09:42 < bnoordhuis> dleonardi: what arm cpu do you have?
09:42 < chovy> Trindaz:   -b, --bail                      bail after first test failure
09:43 < dleonardi>  ARMv6-compatible processor rev 2 (v6l)
09:43 < bnoordhuis> dleonardi: what happens when you set -march=armv5?
09:43 < dleonardi> lets try!
09:43 < guor> maybe it's a bug in v8
09:43 < bnoordhuis> i don't think v8 has ever supported armv6. not that many v6 devices out there
09:44 < guor> there are so many different combinations of arm instruction sets that it makes my head spin
09:44 < dleonardi> my cellphone is!!!!11111!
09:44 < dleonardi> yah i tried v7a already
09:44 < dleonardi> now i'm getting warnings about : warning: target CPU does not support interworking
09:44 < dleonardi> but its still building
09:45 < guor> that should be fine
09:45 < guor> I think
09:45 < dleonardi> hang on a sec while the squirrel in the cpu turns its wheel, REAL SLOWLY
09:45 < guor> oh. you are compiling on the arm platform itself?
09:45 < dleonardi> yep
09:46 < guor> http://xkcd.com/303/
09:46 < dleonardi> pure wisdom :)
09:46 < SomeoneWeird> y u no crosscompile
09:46 < dleonardi> y i no dist-cc rather
09:47 < dleonardi> too much hassle. this is just for fun, dont want to spend the day setting up another system with crosscompiling
09:47 < dleonardi> i dont mind waiting 4 hours while this compiles. reminds me of emerge gnome-desktop :)
09:48 < guor> pray that your phone is not consuming the battery faster than the charger charges :)
09:48 < dleonardi> thats only the case with gps & umts & google navigation at the same time :)
09:49 < guor> :)
09:49 < dleonardi> anyhow it seems to be happily churning away at it. every compiled object has that warning i mentioned, but so far so good. i'll report back in a while
09:50 < guor> good luck
09:52 < chovy> dleonardi: i haven't used emerge in years
09:52 < guor> I haven't had gentoo since my first year in college :|
09:52 < chovy> once i switched to debian i never looked back
09:53 < guor> since then I was just too lazy to go through the pain of setting up everything
09:53 < guor> it was a good way to learn stuff though
09:53 < chovy> yea
09:53 < chovy> i ran on unstable gentoo so it was extremely painful.
09:53 < guor> and pretend that the kernel flags I set improved performance :)
09:53 < chovy> totally
09:54 < dleonardi> hey, i had gnome on a 386!
09:54 < dleonardi> beat that
09:54 < dleonardi> optimized like shit
09:54 < chovy> i had dos in college
09:54 < ljharb> i used a vax/vms system at work. i think i win.
09:54 < chovy> on an XT
09:54 < dleonardi> and yes, i did use dist-cc that time to split up compiling tasks on my LAN :)
09:54 < guor> hm... i guess that's hard to beat. I had it on a geode nx with custom kernel patch for cpu governor
09:55 < dleonardi> and yes, i did compile gnome-desktop ON the 386
09:55 < dleonardi> took DAYS
09:55 < dleonardi> the first time. then dist-cc came along :)
09:56 < dleonardi> ah, fun days :) i actually went dumptster diving looking for an ISA lan card with an ethernet port, as i couldnt find any in shops :)
09:56 < guor> so they recently removed support for 386 in the newest version of the kernel :P
09:56 < dleonardi> damn them!
09:56 < chovy> i remember paying $250 for 8mb of ram
09:57 < guor> ugh. same here.
09:57 < chovy> right after that fire at some factory in japan or china.
09:57 < chovy> went from 4mb to 12mb on windows.
09:57 < chovy> it screamed
09:58 < guor> dunno anymore. I begged my parents to get one for me so I can play some game.
09:58 < guor> i never figured out the difference between xms and ems memory, but now I don't need to care anymore
09:58 < chovy> my dad worked at ibm and got an old XT for $10 -- that was my college computer.
09:58 < chovy> it didn't take long before i begged for a 486.
09:59 < chovy> me neither
09:59 < chovy> i just relied on my geek friend to tell me what i needed.
10:03 < MI6> joyent/libuv: Fedor Indutny master * b86ed94 : kqueue: ignore ENOENT error  File descriptor might be closed during callb - http://git.io/RE4lyQ
10:04 < Vill> Hi, I have one topic for today. And my topic is: HELP!
10:04 < Vill> I'm new to web developing, well basically not new, but my knowledge is old as Win98, and I wanted to start to learn WWW all over again. I finally arrived to Node.JS, and some people say it's amaizing, and other say it's terrible
10:05 < Shinster> Okay
10:05 < Vill> Could You please <keyword> HELP </keyword> me, and tell, if all the haters of Node.JS simply doesn't understand OOP??!
10:05 < bnoordhuis> Vill: node and oop aren't really related
10:05 < Shinster> Well there's a few reasons why people would like/dislike node depending on their background.
10:06 < Vill> but node is JS, and to do awesome stuff with JS is to use OOP, callbacks and objects etc
10:06 < AAA_awright> Vill: Node.js is a (rather tiny) library on top of V8, an ECMAScript engine
10:06 < AAA_awright> Nor would I call ECMAScript "OOP"
10:06 < Shinster> combines with a package manager and a selection of libraries, you can make it do a lot of interesting things
10:07 < Shinster> not just web development
10:07 < Vill> I listen carefully right now!
10:07 < bnoordhuis> Vill: no need to stoop to oop. you can write js code in a functional or imperative style
10:07 < guor> javascript has prototype inheritance, which is not the class inheritance you know from java or C++
10:08 < Vill> another keyword - I have previous C++ experience
10:08 < guor> like, in C++ a class can have parent classes
10:09 < guor> in JS, an object can have a sort of parent object, the prototype, but both are instances, not classes
10:09 < Vill> And eventually I encountered the "reallifejs.com" and I was stunned with the "OOP approach" to a calculator thing! (link to what I'm talking about: http://reallifejs.com/the-meat/calculators/)
10:10 < Vill> Thank you for your advices so far, is there any way to answer the follow question: "What is the most robust tool to create Web Applications, nowadays?"
10:11 < Shinster> erm, they all have advantages and disadvantages
10:11 < Shinster> professionally I work with .net, and that some things I like over node
10:11 < guor> well, you won't be able to bypass javascript if you want to create web applications
10:14 < Vill> I know that, it seems obvious, that's the biggest shock for me, because When I was "playing with WWW" as hobby, PHP, some XML and here we go. And Now...
10:16 < Vill> Guor, okay, simple description of my project: There is a MS Access database, with loads of tables, relations, forms, reports and other stuff. This database has been developed for over 12 YEARS! When I arrived here, and seen this project, I realized - this has come far beyond MS Access capabilities. So I wanted to develop new BACKEND and frontend for this project. But so far, I just got to...
10:16 < Vill> ...THOUSANDS of different solution, and so far there is no tutorial for "where to start, if you want to be up-to-date with newest technologies?"
10:16 < eykosioux> goodday all
10:17 < guor> Vill... frontend and backend are two pairs of shoes
10:17 < Shinster> there is no single 'newest technology' too
10:17 < MI6> joyent/node: Fedor Indutny master * ba75452 : deps: upgrade libuv to b86ed94 - http://git.io/fAeLaA
10:17 < Shinster> the rails guys will say one thing, the php guys will day another, django, node, asp.net...
10:18 < Vill> Shinster, welcome to my world xD
10:18 < guor> sounds like you need to clean up the backend first. The frontend can be anyting from some sort of command line to html5 app to some native app
10:18 < Shinster> if you're dealing with an MS DB, ASP.NET Web api would fit on there easily.
10:19 < Vill> guor, that is very precious advice, I was trying to get into that MS Access, but my precursors (there were 4 of them) made pretty "nice" mess in here
10:20 < aandy> backup backup
10:20 < aandy> don't ruin anything is rule # 1 :)
10:21 < aandy> not sure which parts you're trying to replace, or which capabilities ms access lack, but ... ms/mysql maybe?
10:21 < Shinster> is licencing cost an issue?
10:21 < Vill> aandy, backup... frmMainMenu has 380 lines of code, 90 of which is just removed with comments
10:21 < Shinster> what's currently connecting to the back end and how?
10:22 < Shinster> odbc, web service, straight SQL?
10:22 < Vill> Shinster, I think yes, cost is an issue, 
10:22 < Shinster> okay
10:22 < Shinster> So MySQL is probably going to be up there on your choices, maybe postgresql
10:22 < Shinster> as far as moving the existing data over
10:22 < Vill> There is no connect to backend, just database.mdb file spreaded over 15 workstations...
10:23 < Shinster> lovely
10:23 < Vill> that's what I said xD
10:23 < Shinster> I'd wrap that in a service or something
10:23 < Shinster> but I'm a sucker for overly engineered enterprise solutions
10:24 < stiang> what is the proper way to make sure you are always dealing with a valid UTF-8 string in the 'end' callback for a http.request()? If the request returns a latin1 encoded response, I get funny characters in my output.
10:24 < Vill> I already created test MySQL database, but there is another "nice" feature of the old database - ZERO normalisation with DB relations or entities NAMES, and believe me - even the MS Access to SQL migration tool from Microsoft doesn't export that tables properly
10:25 < Shinster> :)
10:25 < Shinster> I like my ORMs
10:25 < Vill> googling ORM...
10:25 < Vill> oh, yea, that was my only solution to "develop" this project, to any further stage
10:26 < Vill> I need to get rid of MS Access
10:27 < Vill> Shinster, could You please tell me, what is Your experience with .net?
10:28 < Shinster> I did my masters in it :)
10:28 < Shinster> I work as a .net dev, dealing mostly with web applications ;)
10:28 < guor> Vill, it could be worse. It could have been some intricate excel sheet :D
10:28 < Shinster> but, I like node. Node is really robust and awesome
10:29 < dawra> i want to return my jade view data instead of renering, how do i do that in expressjs?
10:29 < Vill> quor, I could handle excel sheet, by simplies "export to txt" and then play with preformatted file
10:30 < gildean> dawra: don't call res.render, but instead just stream the file
10:30 < Vill> and having a pile of sh... code spreaded across 60 tables with 1mln records, and 80 forms and reports, makes me miss for Excel spreadsheet 
10:30 < gildean> or the lazy mans solution res.sendFile
10:32 < Vill> anyway, thank You guor and Shinster, anyway, which tool is more configurable, .net or Node?
10:32 < Shinster> node
10:32 < dawra> gildean: sendfilejust sends the contents of that view as text or something ?
10:32 < gildean> dawra: it just sends the file
10:33 < Vill> Shinster, so why people complain about it? do you enjoy developing with node? 
10:33 < Shinster> I love working with node
10:34 < Shinster> People complain about everything
10:34 < dawra> no not want that
10:35 < gildean> Vill: who's complaining about it?
10:36 < gildean> or are they just complaining because it's javascript, and to use it, they'd have to actually learn it and not just whine that it's a bad language?
10:37 < dawra>  http://www.realfreemarket.org/blog/2011/10/25/node-js-is-vb6/
10:37 < gildean> the only people i've seen complain about node are people used to java
10:37 < Vill> http://dev.hasenj.org/post/31042963934/nodejs-hate
10:37 < Vill> http://www.youtube.com/watch?v=1e1zzna-dNw
10:37 < nathan7> Java is to JavaScript as pain is to painting
10:38 < Vill> a guy wrote a blog, and a moron on Youtube, hating Node
10:38 < nathan7> the "if you use node.js you are an idiot" one?
10:38 < Vill> he seems to be a troll for me...
10:38 < nathan7> i laughed my ass off at that one
10:39 < Vill> like: zero knowledge - makin' verdicts, like a bouse!
10:39 < nathan7> he doesn't seem to grasp the concept of concurrency without threading, or how threading and preemptive multitasking actually work
10:39 < Shinster> ^
10:41 < Vill> so If I would like use to all the features presented by Ryan Dahl in this video: http://www.youtube.com/watch?v=jo_B4LTHi3I Node.js is the best tool, right?
10:41 < Shinster> that's the video that got me into node
10:42 < nathan7> heh
10:43 < dleonardi> guor: bnoordhuis , same thing  . ../deps/v8/src/arm/macro-assembler-arm.cc:65:3: error: #error "For thumb inter-working we require an architecture which supports blx" 
10:43 < guor> :/
10:43 < dleonardi> does this mean i'm screwed?
10:45 < dleonardi> hey j105rob , long time no see
10:45 < guor> for now, I guess
10:45 < guor> you could file a bug to http://code.google.com/p/v8/issues/list with the details though
10:45 < guor> I'll ask some arm experts to take a look
10:46 < bnoordhuis> dleonardi: you can patch deps/v8/src/arm/constants-arm.h and set USE_THUMB_INTERWORK to 0
10:46 < guor> chances are that it will take a while and even then the decisions might be that supporting it makes no sense
10:46 < j105rob> dleonardi: !!!!
10:47 < j105rob> embedded stuff??? me too
10:47  * j105rob still getting used to the node way
10:48 < j105rob> dleonardi: what platform are you running node on? I am running it on the beaglebone
10:48 < dleonardi> my craptastic HTC magic android phone :)
10:48 < dleonardi> and running is an overstatement. i cant get it to build
10:49 < j105rob> ah... I am working on a twitter triggered shmooball cannon for a conference
10:49 < j105rob> what is the build issue?
10:49 < dleonardi> sounds fun. i'm trying to get my quadcopter to be controllable from the interwebs 
10:49 < j105rob> :)
10:49 < Shinster> node on android you say?
10:49 < dleonardi> we could mount your cannon on my quadcopter. hilarity ensued.
10:49 < j105rob> mmmmmmmm quads
10:50 < Shinster> can we do that without rooting yet?
10:50 < Vill> how much for quadcopter?
10:50 < dleonardi> all my build attempts die off with this: ../deps/v8/src/arm/macro-assembler-arm.cc:65:3: error: #error "For thumb inter-working we require an architecture which supports blx" 
10:50 < Shinster> i'd love to port my app
10:50 < dleonardi> Vill: 300usd
10:50 < Vill> thanks
10:51 < dleonardi> Shinster: my phone is rooted, and i'm compiling within a chrooted instance of linux
10:51 < Shinster> compiling? hahaha
10:51 < Shinster> nice
10:51 < Shinster> let me know how long that takes ;)
10:51 < dleonardi> oh it takes 2 hours for it to die with an error
10:51 < Shinster> :D
10:51 < dleonardi> no idea about the total :)_
10:52 < j105rob> blx as in the asm instruction?
10:52 < Shinster> I was at a pi hackday... at 4am realised I needed to build a new version of node because of a broken serial port driver on old debian verion of node and the pi
10:52 < Shinster> fun fun fun
10:53 < Shinster> 800Mhz ARM6
10:53 < Shinster> or is it 700Mhz?
10:54 < j105rob> dleonardi: what core is your htc running?
10:55 < dleonardi> armv6 compatible
10:55 < j105rob> some google-fu: http://www.yoovant.com/how-install-node-js-0-8-arm-based-sbc-fox-board-g20/
10:56 < j105rob> Check out step 8
10:57 < j105rob> dleonardi: looks like it is not necessary, but you can check which instructions are supported by the chip.... if you REALLY want to
10:58 < dleonardi> blx isnt one of those
10:58 < dleonardi> and to be honest, blx isnt supported by my xeon server either, at least not according to proc/cpuinfo
10:58 < dleonardi> i have no clue what blx is tbh
10:58 < j105rob> bracn and link something.....
10:59 < j105rob> branch
11:00 < dleonardi> let me try that out. looks promising
11:00 < dleonardi> thx j105rob! 
11:00 < j105rob> The other option is to build for armv5
11:01 < j105rob> specifically the libc
11:01 < j105rob> anyways back to the SPI driver code.... meh
11:05 < dawra> the world ends in 3 days, have you planned anything?
11:06 < Zelest> die? :D
11:06 < Gottox> raping some priests.
11:15 < dleonardi> [12:04] <Gottox> raping some priests.  <<< You sir, win.
11:17 < Doikor> put capslock on and write stuff on the internets to annoy all the nerds.
11:22 < peterrs> Possible bug with ucs2 decoding/encoding, test case available here: https://gist.github.com/4327210
11:24 < Vill> [11:03]	dawra	the world ends in 3 days, have you planned anything?    
11:24 < Vill> My answer is: Prepare for next End of the Woirld
11:38 < aandy> yeah but who knows when that'll be
11:40 < aandy> nostraderpus says while (idiots) { estimate(new EndOfWorld({impact: "dramatic"})); }
11:40 < Doikor> i was kinda thinking about waiting at the timezone line for the end of the world happen in the timezone before mine and then jump into that timezone a minute or two before it happens on mine
11:42 < dleonardi> yes! finally i got node compiled on android! j105rob it was point 8 of that URL you linked. bnoordhuis guor 
11:43 < dleonardi> not sure if this qualifies as a bug. i commended out three lines of code. 
11:44 < j105rob> dleonardi: check those runtime libs to make sure there is no blx call in there
11:44 < Vill> aandy As Abraham Lincoln said: "People in the internet are used to believe any quotes."
11:44 < aandy> :D
11:44 < Vill> after presenting that joke to my flatmate, she asked: "hey, when Abraham Lincons was born?"
11:45 < Vill> <facepalm>
11:47 < aandy> i assume you're not american then?
11:48 < Vill> no, UK
11:50 < Shinster> woo, UK represent!
11:50 < Vill> nono, it's not that clear, I just live in UK, and I work for UK guys,
11:51 < Vill> I'm Polish, but basically, I passed my English exam better than native language finals
11:51 < Vill> MMO FTW, and I thought that playing computer gives nothing
11:51 < Vill> playing computer games*
11:53 < deoxxa> Vill: i know a bunch of people from asian countries who learnt all their english from computer games, it's awesome
11:53 < Vill> Fellows and I'm ready to listen all Your sorrows about polish guys
11:54 < Doikor> i really dont think i ever learned any english in school. just from watching movies and playing video games (we dont dub movies/series in finland. subtitles ftw)
11:54 < deoxxa> mmm
11:54 < deoxxa> in all the european countries where there's just subs, everyone speaks english really well
11:55 < deoxxa> in the countries where they dub shows, everyone sucks at english
11:55 < Gottox> not in germany.
11:55 < Gottox> the dubs suck here that much.
11:55 < deoxxa> ha
11:56 < Vill> there is a drawback... after undestanding decent english, I started to hate all pop songs going in the radio, eg. "boots with the fur, The whole club was lookinâ€™ at her"
11:56 < Doikor> well in general you dont hear that much english spoken in most european countries so you mostly just hear it in tv/movies.
11:56 < Shinster> As an Englishman, I hear a lot of English ;)
11:56 < Gottox> they did a dub of IT crowd. Unfortunately the gags doesn't work in german at all.
11:56 < Doikor> i only started speaking english daily once i got a job. like half of my team hardly speak any finnish
11:57 < Vill> well, English is the language of the computers, Doikor, how it's "computer" in finnish?
11:57 < Gottox> -doesn't+don't
11:58 < deoxxa> Vill: http://www.youtube.com/watch?v=XN14Kdo6PZE just for you
11:58 < deoxxa> shorty got LOW LOW LOW LOW LOW LOW LOW LOW
11:58 < Vill> Gottox, You'd be supprised, how UK Nationals are using single form verbs for multiple count nous
11:59 < Shinster> My dialect includes lots of old english
11:59 < Shinster> I say 'thee' and 'thou' a lot
11:59 < Doikor> Vill: you mean what the word computer is in finnish? That would be "tietokone" (a word made from combining two words. tieto (knowledge) and kone (machine). we do that a lot here ;)
11:59 < deoxxa> i'm just so jealous of all you people who speak more than one language
11:59 < deoxxa> must be so awesome
11:59 < deoxxa> :<
11:59 < Vill> thy shall not pass, Shinster?
11:59 < Shinster> we pronounce it 'thaar'
12:00 < Shinster> and shall is probably 'waint'
12:00 < hipsterslapfight> none of these will beat 'microwave' in welsh though
12:00 < Shinster> tharr waint pass
12:00 < Vill> Doikor, that's exactly what I mean
12:00 < Shinster> Good old Yorkshire
12:00 < hipsterslapfight> popty ping: lit. oven that goes 'ping'
12:01 < deoxxa> hipsterslapfight: in japanese it's denshirenji and it makes me giggle any time anyone says it
12:01 < deoxxa> sounds so silly
12:01 < deoxxa> literally "eletric range"
12:01 < deoxxa> +c
12:01 < ikss> any ideas how to catch 'live' stdout from httperf? (notice that even httperf ........ &> output, does not work with httperf)
12:01 < Vill> deoxxa, don't even try to learn other language, if You are English find a better hobby, tailoring maybe?
12:01 < hipsterslapfight> haha that is pretty good too deoxxa 
12:01 < deoxxa> Vill: i'm already learning japanese, but you're right, i could just speak english forever and i'd be fine (it's kind of awesome)
12:02 < hipsterslapfight> yeah even when i was in japan last year i didn't have any issues with not knowing the language, it helps that they've borrowed a fair few english words and a lot of them are taught it at school (whether well or not is up to debate) though 
12:02 < Vill> the only word in japanese I know is "dragonball" and "pokemon"
12:03 < Vill> they doesn't sound japanese, but i know they come from japan
12:03 < deoxxa> hipsterslapfight: they seem to know nouns pretty well
12:03 < Shinster> My old housemates spoke japanese
12:03 < deoxxa> hipsterslapfight: if you can string together english nouns with japanese grammar, you can get quite a ways
12:03 < ExploiT> hola todos alguno de habla hismana
12:03 < hipsterslapfight> deoxxa: yeah, i got by pretty well with hand signals and basic nouns, next time i go back i will at least be able to read a little though
12:04 < ExploiT> bueno como estan todos .. 
12:04 < deoxxa> hipsterslapfight: i'm in tokyo at the moment :3
12:04 < hipsterslapfight> though speaking of hand signals i learn pretty quickly that holding up two fingers at a restaurant (for two people) will instead get you a seat in the smoking section â€¦ coming from the UK you don't even think such a thing would exist :v
12:04 < dleonardi> for whoever cares: https://gist.github.com/4327430 << Howto compile and build nodejs within linux on android
12:04 < deoxxa> haha yeah
12:05 < hipsterslapfight> where in tokyo are you deoxxa 
12:05 < ExploiT> hello how are you all
12:05 < deoxxa> nishinippori
12:05 < deoxxa> right near the station
12:05 < Vill> dleonardi + for efforts
12:06 < ExploiT> busco a alguien que me de ionfirmacion sobre node.js
12:06 < deoxxa> ExploiT: english please
12:06 < ExploiT> I am looking for someone to ionfirmacion on Node.js
12:06 < Vill> ExploiT, read FAQs, and stop with translate.google.es
12:07 < ExploiT> Soy Latinoamericano  in colombia..  traslate in google.com
12:07 < ExploiT> gracias  Vill
12:08 < Vill> there is nothing to gracias =/ sorry for short answer
12:08 < qxfusion> Hi all.
12:09 < qxfusion> what are you think about icrease node-cluster module as create human readable instance names/
12:10 < qxfusion> for example - running node like this command $ node -q nodename1 index.js 
12:10 < deoxxa> ugh, cluster
12:10 < ExploiT> response but google.traslate use two Spanish English Spanish and English in other tabs.
12:10 < ExploiT> But I understood what he said
12:10 < qxfusion> in processes we will be have process with name nodename1@node
12:11 < qxfusion> (like Erlang style) - it's gread ideas for cloud hosting like
12:11 < ExploiT> you reach Node.js tend to be part of a data server
12:11 < Dededede4> I'm having trouble speaking English because I am French, sorry. My script takes several gigabyte of memoryâ€¦ and I can not find the variable causing the problem.
12:12 < Vill> wow, so we have pretty international community here!
12:12 < deoxxa> indeed
12:12 < deoxxa> Dededede4: node-inspector might help
12:12 < qxfusion> to @Dededed4 - my native language is Russian and all rights :)
12:12 < RLa> qxfusion: set process.title in workers
12:13 < qxfusion> RLa: how it's solve problem? in unix ps all node instances will named as "node" anyway.
12:14 < RLa> qxfusion: it works here
12:14 < ExploiT> My native language is Spanish. from Colombia and I talked about Node.js wanna know you reach is that new project.
12:15 < RLa> qxfusion: try process.title = 'Hello World';
12:16 < qxfusion> RLa: run simple test - running $ node index.js and $ node index.js - in $ ps -A you will be have 2 processes with name "node" 
12:16 < RLa> ps lists it as Hello Worls
12:16 < RLa> qxfusion: did you set process.title there?
12:16 < qxfusion> RLa: yes, I'm already try it
12:16 < ExploiT> that similar or php and Perl (CGI) and javascript app tien this program, that I can compare him and how to implement it in the future
12:17 < qxfusion> node 0.8.9 - process name don't changed
12:17 < Vill> ExploiT Â¿cÃ³mo aprender Node.js si usted no sabe enligsh?
12:17 < RLa> node is not like php or cgi, it is completely different
12:17 < RLa> qxfusion: what system it is, os x?
12:18 < qxfusion> no - RHEL, SmartOS
12:18 < RLa> i think there was issues with process.title in macs
12:18 < RLa> hm
12:18 < qxfusion> RLa: no, I'm think this proble of "ps" for Mac OS X
12:18 < Vill> ExploiT, Â¿has visto este video? http://www.youtube.com/watch?v=jo_B4LTHi3I
12:18 < RLa> qxfusion: 
12:18 < qxfusion> I'm try you solve in RHEL6 and latest stable SmartOS
12:18 < RLa> process.title = 'Hello World';
12:18 < RLa> setTimeout(function() {}, 10000);
12:19 < RLa> try this program
12:19 < qxfusion> why ?
12:19 < ExploiT> No hay problema aprendi  javascrit, cgi y php y los manuales vienen en ingles. el server apache y los  aditamentos  todos estan en ingles. a un cuando no hablo ese idioma
12:19 < qxfusion> timeout don't help with this
12:19 < RLa> it's working here
12:19 < ExploiT> No problem javascrit learned, cgi and php and manuals are in English. the apache server and hardware are all in English. to not speak that language when
12:19 < qxfusion> RLa: are you use Mac OS X only ?
12:20 < RLa> qxfusion: thy that as whole program, setTimeout prevent it exiting so you can test ps output
12:20 < RLa> no, i'm on debian
12:20 < qxfusion> in my program running httpServer for prevention quit
12:21 < RLa> yes but try with simpler code first
12:21 < ExploiT> nop  I'm very slow connection to an hour from civilization with a moden of 64bps ..
12:21 < RLa> i think you mean kbps
12:22 < RLa> which is perfectly ok for irc :)
12:24 < Vill> no, he means bps
12:24 < Vill> this is columbia, baby
12:25 < aandy> anyone who've toyed with unity? i was just going over some Unity3D docs and a bit surprise at their lax definition of "javascript". anyone know if it's just to make javascript a pseudo typed language or if the differences go beyond that? (for instance, the var varName : somethingElse, seems to be type definition or inheritance, e.g. var test : String)
12:25 < aandy> i mean, i know it's not v8, but i'm wondering if it's even ECMA
12:29 < aandy> hmm, apparently based on ecma, but way back. just marketing stuff calling it js it seems
12:29 < RLa> that's cheap
12:30 < deoxxa> http://wiki.unity3d.com/index.php/UnityScript_versus_JavaScript ew
12:30 < aandy> yeah
12:30 < ExploiT> alguien que  hable espaÃ±ol... gracias ..
12:30 < qxfusion> RLa: it's OK, I'm find problem
12:30 < deoxxa> > assignment cannot be an expression
12:30 < deoxxa> fail
12:31 < qxfusion> static void ProcessTitleSetter(Local<String> property, Local<Value> value, const AccessorInfo& info)
12:31 < qxfusion> ->
12:31 < qxfusion> UV_EXTERN uv_err_t uv_set_process_title(const char* title)
12:31 < qxfusion> ->
12:31 < aandy> Debug.Log(javascript === javascript || javascript == javascript); // false;
12:32 < qxfusion> linux-core.c : uv_err_t uv_set_process_title(const char* title) {   /* No need to terminate, last char is always '\0'. */   if (process_title.len)     strncpy(process_title.str, title, process_title.len - 1);    return uv_ok_; }
12:32 < qxfusion> NOTHING DOING :D
12:33 < ExploiT> tasks that can be done, Node.js?
12:34 < RLa> qxfusion: it WORKS in 0.8.16
12:34 < RLa> and it worked in 0.7.9
12:34 < qxfusion> see source code
12:35 < qxfusion> in stable branch this feature not implement
12:35 < RLa> qxfusion: compare with 0.8.16's
12:36 < qxfusion> but in github unstable repo for linux-core.c already path it.
12:59 < Dededede4> deoxxa: how to node-inspector can help me ?
13:01 < Vill> everyone makes mistakes
13:02 < mistertwig> hi felixge
13:02 < felixge> mistertwig: hi
13:03 < mistertwig> are you the real felixge?
13:03 < felixge> mistertwig: no, but I killed the real one and replaced him with a version that likes go :)
13:04 < felixge> so I'm as real as it gets ;)
13:04 < mistertwig> oh great
13:04 < mistertwig> i really enjoyed your presentation
13:04 < mistertwig> :P
13:04 < felixge> which one?
13:04 < mistertwig> the one on fast javascript
13:04 < felixge> the mysql one?
13:05 < mistertwig> yeah
13:05 < felixge> thanks : )
13:05 < mistertwig> you were shaking around a bit
13:06 < deoxxa> javascript is a hell of a drug
13:06 < mistertwig> for sure 
13:06 < felixge> deoxxa: it kills brain cells, just like the real stuff
13:06 < felixge> :)
13:06 < deoxxa> haha
13:06 < Gottox> felixge: you never tried haskell, didn't you? :D
13:07 < felixge> Gottox: I have. It doesn't do anything.
13:07 < deoxxa> it can represent the action of doing something though!
13:07 < felixge> The compiler is like: You did something wrong â€¦ hahahaha â€¦ I could tell you what â€¦ but instead I'm calling you an idiot. It's more fun this way!
13:07 < Gottox> that's one of the greatest advantages of haskell...
13:07 < mistertwig> and it's got a cool logo
13:28 < tristram> hello, I have a problem using nodejs and zmq (thus maybe it's not the right place to ask) : I try to communicate with a C++ server using zmq (implementation here : https://gist.github.com/4327944)
13:29 < tristram> however, sometimes, the zmq message callback is not called (but from the c++ side, it says everything was sent fine)
13:30 < tristram> Am I doing something wrong (I'm new to js and node), should I ask somewhere else, might it be a bug in the zmq binding ?
13:34 < jesusabdullah> yo who is awake and knows things about the inner workings of the require system?
13:35 < RLa> jesusabdullah: just ask your question
13:36 < jesusabdullah> RLa: is process.mainModule.paths in order of precedence y/n
13:36 < jesusabdullah> also it's 5:30am on the west coast
13:37 < RLa> hm, i have no idea about that :/
13:37 < RLa> i would assume it is
13:41 < qxfusion> tristram: are you right build C++ binding ?
13:41 < qxfusion> it's problem make if node-gyp use other source code for zmq
13:42 < qxfusion> (if you have some different devel version of zmq)
13:43 < tristram> qxfusion: I just used npm, but you're right, i'll check the zmq version I have on the node side, thanks
13:44 < qxfusion> tristram: are you use self-hosted or cloud ?
13:44 < tristram> self-hosted
13:45 < qxfusion> if use self-hosted - try build latest version manually by github
13:49 < sampo_v2> is https://github.com/pkrumins/node-png  a good bet or are there better libraries for generating pngs available?
13:51 < hendore> I'm not sure if I understand client/server side rendering war. I was under the impression that creating a rest JSON only API was a good thing (backend seperate from frontend) meaning we can build clients for desktop browsers and mobile devices separately (native ios/android apps). However if the server was giving us html responses then this wouldn't be the case right?
13:52 < SoulRaven> if inside a  module a populate the Function.prototype, this behaivor is propagates to all the methods inside the app or only inside that module
13:53 < hendore> SoulRaven, If you add to the function prototype im pretty sure all functions would get that behaviour
13:53 < SoulRaven> even outside the module?
13:57 < hendore> SoulRaven, do you have code to show?
13:58 < SoulRaven> GeoNames.prototype = new Events();
13:58 < SoulRaven> GeoNames.prototype.HttpTools = new HttpTools();
13:58 < SoulRaven> or Function.prototype = new HttpTools();
13:59 < tristram> qxfusion: so it's still stuck and the extension is build against the same zmq lib as the c++ side, so no mismatch here
14:00 < qxfusion> port for zmq is open,
14:00 < qxfusion> ?
14:01 < tristram> yup, it works
14:01 < tristram> except a few times (5 out of 1000)
14:02 < mrvisser> has anyone set up a clustered cronjob system in node.js? basically, I'd like to schedule a job to happen in "x minutes"
14:02 < qxfusion> tristram: try change localhost to 127.0.0.1
14:04 < aandy> mrvisser: i'd be interested to know aswel. a simple hack until you do: var seconds = 60*1000, minutes = 60 * seconds; setTimeout(..., x * minutes); :>
14:04 < tristram> same problem, it complets nearly all requests, excepted a few ones
14:05 < qxfusion> I'm not have variants - no use zmq before
14:06 < aandy> mrvisser: you'd might be interested in https://github.com/ncb000gt/node-cron
14:06 < mrvisser> aandy: yea I thought of that. just want to avoid polling if possible, our cluster could grow to 80+ app nodes on larger deployments
14:06 < mrvisser> thanks aandy, but afaict that's not clustered
14:07 < tristram> qxfusion: no problem, thanks. I'll try to ask the zmq community (however with a C++ client, I have no problem)
14:07 < mrvisser> I want only one app node to perform the job on a timed interval
14:08 < aandy> mrvisser: couldn't you do that with node-cron? as long as you don't spawn it as a cluster, one # node cronjob.js should only affect itself (unless your cronjob is to spawn node instances of course)?
14:08 < aandy> or do you mean that only one, which is part of a cluster, should do it?
14:09 < qxfusion> mrvisser: use memcachedb in cluster mode and node.js in cluster node - job in memcachedb will be separated between cluster nodes
14:15 < Vill> http://nodetuts.com/ sweet tits, this dude has booring voice :(
14:16 < jesusabdullah> You mean Pedro?
14:16 < aandy> hmm -- reading a spec -- it seems this corp wants an email notification which can't be discarded unless the user clicks through or clicks "no thanks". so basically i have to invent a new type of email? ;)
14:16 < jesusabdullah> He's a nice guy really
14:16 < jesusabdullah> nice aandy
14:16 < jesusabdullah> I'm installing fedora on a netbook
14:16 < jesusabdullah> I haven't used fedora since I was in grad school
14:16 < jesusabdullah> I kinda missed it
14:18 < astropirate> Hello Node.js ninjas and rockstars
14:18 < jesusabdullah> I'm not sure any of those are here
14:18 < aandy> wrong chan bro
14:18 < astropirate> oww :(
14:19 < aandy> but try us
14:19 < jesusabdullah> haha
14:19 < astropirate> I was hoping to meet some node.js pirates too
14:19 < jesusabdullah> well the reason I really say that is that nobody should be so full of themselves to accept the label of rockstar
14:19 < jesusabdullah> I'm installing fedora on a netbook
14:19 < jesusabdullah> er
14:19 < astropirate> but nobody needs a node.js pirate... they only want rockstars and ninjas
14:19 < jesusabdullah> ninjas is allowed if you work for nodejitsu ;)
14:20 < Gottox> Is someone going to 29c3 here?
14:20 < astropirate> lol
14:20 < jesusabdullah> (I'm an ex-ninja I guess)
14:20 < Gottox> I'm doing Jujutsu, isn't that ninja enough? :D
14:21 < jrajav> jesusabdullah: Yes, I'm sure people who label themselves or others "rockstars" do so with the intent of declaring superiority, and not just to have fun with their job
14:22 < jrajav> I guess we know SOMEONE who's not a Node.js ninja..... ;)
14:22  * astropirate needs a job :|
14:22 < aandy> fun with jobs, hah, what is this, a sitcom? ;(
14:22 < jesusabdullah> I'm reasonably good with the nodjs
14:22 < jesusabdullah> I just prefer to call myself an engineer
14:22 < jrajav> That's fine.
14:22 < jesusabdullah> or if I'm feeling fun, a "research engineer" ;)
14:22 < jrajav> So is calling yourself a rockstar
14:23 < jrajav> You can be professional and still have fun with it
14:23 < aandy> was there a question or did you just look for people, astropirate ?
14:23 < astropirate> aandy, what do you mean
14:23 < aandy> i just figured you had a question since you looked for ninjas :)
14:24 < astropirate> Ohh, no I just hello to the channel in a fun way :D
14:24 < jrajav> If you prefer to work in the areas of industry where you need to market yourself as an engineer rather than "just" a coder or a programmer (shouldn't they be more or less synonymous? I guess not these days...), then, well, I'm glad someone does
14:24 < jesusabdullah> ";no rockstars? denied!"
14:24 < aandy> astropirate: ah, HELLO :)
14:24 < astropirate> saw it on an anti node.js video i've been laughing at the term ever since 
14:25 < jesusabdullah> jrajav: I'm a mechanical engineer by training, and I think there's a lot of good things in "traditional" engineering culture
14:25 < jesusabdullah> I try not to forget that
14:25 < aandy> that's not very ninja of you
14:26 < astropirate> here here
14:26 < jesusabdullah> indeed
14:26 < jrajav> jesusabdullah: I was expressing more or less the same sentiment
14:26 < jrajav> Minus the bureaucracy and empty titles
14:27 < astropirate> you will take my title of Realtime Strategy officer out of my cold dead hands
14:28 < aandy> said Regional Assets Management Recovery and Construction deputy, Janitor Bob
14:28 < jrajav> .... I seriously want to put that on my resume now
14:28 < jrajav> But I would be too depressed if someone took it seriously
14:30 < mrvisser> aandy qxfusion: sorry for my disappearance, got caught in a conference call
14:31 < mrvisser> aandy: only one node in the cluster should perform the job. it impacts the data-storage
14:31 < mrvisser> qxfusion: we're already running Redis and RabbitMQ, I can think of ways to achieve this using RabbitMQ, but was wondering if there were better options.
14:32 < aandy> okay. but if part of the job is to cancel the job, wouldn't that solve it? or are your "agents" too fast? either way, some way of maintaining a lock, so if you can't do without a db, then you have to get creative
14:32 < mrvisser> aandy: so the part that maintains that lock gets polled by all nodes in the cluster, right?
14:32 < mrvisser> e.g., a redis setex
14:32 < aandy> yes
14:33 < aandy> well, your db doesn't have to be just one instance. you could cluster it too if you're worried about the load
14:34 < mrvisser> our DB is Cassandra which doesn't really have a locking mechanism for. I'd be looking at Redis, which could probably handle the load.
14:34 < mrvisser> but I'd rather not give it 80 useless req/s's. would be great if I could do a "delayed job" w/ RabbitMQ or something instead.
14:39 < aandy> hmm, just an (aloof) idea: if you have each node in said cluster listening for messages (websockets or whichever), and a round-rubin whenever you submit a job, would that'd be something you'd use?
14:40 < mrvisser> aandy: which node is submitting the job?
14:40 < aandy> i don't know, i thought you did externally
14:40 < aandy> and the cluster was receiving
14:41 < mrvisser> it's something internal in my application that needs to happen every so often
14:41 < Vill> oh MONGOd! what is mongoDB?
14:42 < aandy> mrvisser: a job which the application can't do itself? well, either way, it'd be the app which submits it in that case
14:42 < mrvisser> every 30s, say. aandy I think your idea of polling is the best way to go â€” I don't  think it needs to poll every second necessarily. Then I can use a redis setex to lock the job while it completes
14:42 < aandy> a db with a lock is a good way if you ask me, yes
14:43 < aandy> 80 req/s should be doable for most dbs :)
14:43 < mrvisser> 80 req/s isn't the problem necessarily, it's the other 1500 req/s of regular traffic it needs o handle :)
14:44 < mrvisser> which means 80 req/s is a wash in comparison, so it should be fine. thanks for the help. cheers
14:44 < aandy> the same db? well, you could run it separately if it's just for queueing data
14:48 < MI6> joyent/libuv: Ben Noordhuis master * dc559a5 : unix: disable relaxed accept() by default  Don't use the relaxed accept() - http://git.io/6F2H2Q
14:48 < MI6> joyent/node: Ben Noordhuis master * 7b2ef2d : deps: upgrade libuv to dc559a5 - http://git.io/5SqgXg
15:03 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:11 < MI6> joyent/node: Ben Noordhuis master * 8ccfed2 : node: s/-/_/ in add-on symbol name  Replace dashes with underscores. When - http://git.io/6iVVTQ
15:13 < MI6> joyent/libuv: SaÃºl Ibarra CorretgÃ© master * 0820be7 : Implemented uv_run2  Allows for running the event loop in 3 modes:   * de - http://git.io/urtUXA
15:19 < MI6> joyent/node: Ben Noordhuis master * d607d85 : node: remove idle gc  Remove the idle garbage collector. Its purpose was  - http://git.io/YraASg
15:20 < mAritz> heh, 104 lines removed is always good :D
15:23 < bnoordhuis> btw, if people feel they have a need for idle gc: https://github.com/bnoordhuis/node-idle-gc
15:35 < lacrymology> hello, I'm on ubuntu 12.04 and I just "npm install less" and it went to ${pwd}/node_modules/less/  .. not long ago I'd installed it and it went somewhere global, what am I missing?
15:40 < chrisjaure> lacrymology: npm install -g
15:54 < Dededede4> FATAL ERROR: CALL_AND_RETRY_2 Allocation failed - process out of memory
15:54 < Dededede4> :(
15:55 < Dededede4> Debug mode does not help me
16:05 < lacrymology> chrisjaure: thanks
16:07 < Leward> Hi Guys, I have to start a school project with Node.js. Which IDE would you advice me to use to work fluently with Node.js and Git ? 
16:08 < Shinster> Leward: emacs? ;)
16:08 < Shinster> take a look at cloud9
16:08 < Leward> Shinster, Does cloud9 work offline too? 
16:08 < Shinster> there's an offline version, i never got it working
16:09 < Shinster> I just use textwrangler tbh
16:09 < Leward> I've tried using Eclipse with Nodeclipse but the auto completion is quite limited :/
16:10 < Shinster> Well yeah it will be in JS generally
16:10 < Leward> :(
16:11 < Shinster> it's not like .net or java when you've statically typed and meta data backed objects you can check for properties
16:11 < Shinster> this is all dynamic, autocomplete can have a guess for you - but besides that...
16:12 < Leward> Well, I'll leave it like is ;)
16:12 < Leward> Thanks 
16:17 < Kakera> can someone give a simple explanation of the difference between mongojs and mongodb-native and when to use which?
16:21 < gildean> Kakera: mongojs is a thin wrapper for mongodb-native, it gives you an easier syntax to work with
16:23 < Kakera> yeah I can see that connecting to a DB in mongodb-native is quite a callback spaghetti
16:33 < makkron> hi
16:33 < Shinster> Hello
16:34 < makkron> I'am having a problem with the expressjs framework, is there a dedicated irc channel for it?
16:34 < makkron> i have trouble finding one
16:38 < PigDude> makkron, not that i know of. just ask
16:46 < MI6> joyent/node: isaacs v0.8 * faf9943 : blog: post about streams2 feature - http://git.io/mACOIw
16:47 < MI6> joyent/node: isaacs v0.8 * 04adf0e : blog: post about streams2 feature - http://git.io/bRhSIg
17:13 < superjoe> ooh I hope this means node 10 is coming out soon
17:14 < makkron> okok
17:14 < makkron> it's a basic question, i'm trying to redirect a get request to static file
17:15 < PigDude> and you are using response.redirect?
17:15 < makkron> i'm trying to use res.redirect() and i have setup the static files path
17:15 < makkron> yes
17:15 < PigDude> then you should be forwarded to the static file
17:15 < PigDude> redirects are just HTTP
17:16 < PigDude> that you are redirecting to a URL that maps to a static file really means nothing to the redirect
17:17 < makkron> ok the problem is i seem to receive the asked file but the browser don't load it
17:17 < makkron> it's quite weird
17:19 < PigDude> well that makes no sense. you receive the file but you don't?
17:20 < makkron> i mean i can see that i receive the file with the chrome console but the browser just won't load it
17:26 < PigDude> :\
17:26 < PigDude> see what curl/wget thinks about this
17:27 < makkron> ok thx, i'll check but i must admit i'm quite baffled with this problem :(
17:36 < astropirate> anyone here develope on fay??
17:36 < astropirate> *?
17:41 < zomg> astropirate: I've used Fay. Why do you ask?
17:51 < KeOps> Hi all ! There is any french node.js user ? :D
17:53 < indexzero> KeOps: pourquoi? :)
17:56 < KeOps> indexzero: Car je galÃ¨re un fou avec un petit projet ^^ 
17:57 < KeOps> *comme 
17:57 < indexzero> as-tu un gist / url?
17:57 < KeOps> oui
17:57 < KeOps> https://gist.github.com/4322149
17:58 < niggler> un gist ou une gist?
17:58 < indexzero> je ne sais pas
17:58 < indexzero> mon franÃ§ais comme-ci comme-ca
17:58 < indexzero> je suis americane lol
17:58 < indexzero> qu'est-ce le probleme?
17:58 < niggler> moi aussi lol
17:58 < Leward> Isn't it better in English so that everyone can understand ? ;) 
17:58 < ruff> security by obscurity man
17:58 < KeOps> i can also speak english xD
17:58 < indexzero> Leward: This is simple conversational french
17:59 < indexzero> google.com/translate will do the trick
17:59 < indexzero> :)
17:59 < niggler> stupid college language requirement
17:59 < niggler> seems a bit late in life to start learning a language
18:00 < indexzero> KeOps: so what's the problem?
18:00 < Leward> No need to learn French, because I am ^^ 
18:00 < indexzero> niggler: I lived in Montreal for 5 years, so it's pretty decent, but I have a Quebecois accent. Tabernac!
18:00 < KeOps> if you open the "ardoise.html" you can see a canvas, where you can draw, change color and delete all the canvas
18:01 < niggler> lol canada
18:01 < KeOps> and i tried to do a real-time drawing. with node.js, you can see it on the index.html. But it's doesn't really work :/. I can draw in live. But i cannot change the color or delete the canvas :(
18:02 < indexzero> KeOps: Ah. I really don't know the canvas API, sorry :(
18:02 < KeOps> and i have to give it back for school, before friday, i'm gonna die :'(
18:03 < KeOps> it's more a problem with , sending function with socket.io : /
18:03 < KeOps> Cause my canvas works great ^^
18:03 < Leward> When you click a color, have you checked that your function ModifierCouleur() is actually called ? 
18:04 < KeOps> euh, non :/
18:20 < `3rdEden> isaacs: yt?
18:24 < astropirate> (V)(;,,;)(V) woot woot wooot
18:25 < `3rdEden> astropirate: s/t/p/
18:25 < astropirate> (V)(;,,;)(V) woop woop wooop
18:25 < `3rdEden> http://www.youtube.com/watch?v=R97Ao5e3m5E
18:25 < `3rdEden> :p
18:31 < drudge> ben_alman: pingo
18:32 < ben_alman> sup drudge 
18:32 < drudge> have a question about your dotfiles, mind if i pm?
18:33 <@isaacs> `3rdEden: yo
18:34 < `3rdEden> isaacs: https://github.com/isaacs/npm/blob/master/lib/install.js#L80 is there a reason why you are doing a console.log there instead of an npm.log?
18:34 <@isaacs> `3rdEden: yeah, becuase it should go to stdout, not stderr
18:34 <@isaacs> `3rdEden: it's actual output
18:34 < `3rdEden> I'm using npm as an api, and that is the only thing it still spits out to the console after silencing it with
18:35 < `3rdEden> with the log level*
18:35 < `3rdEden> isaacs: would you accept a pull request that silences it with a configuration option?
18:35 <@isaacs> `3rdEden: yeah, install() should have a second optional arg that silences it
18:35 <@isaacs> `3rdEden: a few other cmds do npm.command([arg list], [silent=false], cb)
18:36 <@isaacs> `3rdEden: but install is a weird one
18:36 <@isaacs> `3rdEden: it does install(what, [where], cb)
18:36 <@isaacs> `3rdEden: so, that has to be abstracted out into some other shape, andthen a silent=false second arg can be added
18:37 < `3rdEden> isaacs: okay
18:37 <@isaacs> `3rdEden: patch welcome.  it's not a high priority for me
18:37 <@isaacs> `3rdEden: mostly just tedious
18:38 < `3rdEden> isaacs: yeh I can understand that because it just work great from a cli perspective
18:38 < `3rdEden> isaacs: but a install(what, [where], [silent], cb) would work
18:39 < r2wj> Hey gang
18:39 < paul__> is there any way to downgrade a version using npm install or npm update? i'm actually trying to use npm shrinkwrap to pick a different version of a sub-dependency, but it won't work unless i npm rm the module first
18:39 < r2wj> Is there a node equivalent of 'import pdb; pdb.set_trace()' in node?
18:40 < Yasumoto> r2wj: have you tried adding --debug? (like node --debug index.js)
18:41 < r2wj> Yasumoto - I did not know about that
18:49 < st_luke> who's down for lawn darts at summer camp 2013?
18:49 < paul__> does npm update use the shrinkwrap file?
18:49 < st_luke> mikeal: ^
18:52 < KeOps> does any one, have some time to spend with me in pm, on my school project ? :)
18:58 < othiym23> st_luke: in, especially if we use the old-style, potentially fatal Jarts
18:58 < st_luke> othiym23: that's the kind I mean
18:58 < superjoe> potentially fatal Jarts?
18:58 < superjoe> lay off the beans, man
18:59 < louiedog> I'm reading data from a socket but I'm getting special (unreadable, garbled) characters. I'm thinking i need to use a scanf type function to read the stream. Does something like this exist in node.js?
18:59 < othiym23> superjoe: life is only fully lived on the edge, man
18:59 < strat> anyone have issues where Garbage Collection doesn't seem to happen on SmartOS Joyent Boxes?
19:00 < othiym23> strat: are you seeing out of memory crashes?
19:01 < strat> othiym23: yes sir - depending on usage of course,  Thought there was a HUGE memory leak, but it doesn't reproduce the same in dev - seems to go up a bit, then back down as users leave (expected) on Joyent, it goes up, but not down...
19:02 < othiym23> strat: I haven't seen that
19:02 < othiym23> what have you done to rule out app leaks?
19:06 < strat> othiym23: testing on dev mainly - used memwatch lib on dev to try to find some leaks, but it doesn't flag a leak ever (only flags if heap goes up over 5 GC rounds) .  On dev I fluctuate around 5 -10 MB memory usage on lower demand.  Currently no demand on production, but it's sitting at 735MB usage 
19:06 < richweskus> which is the most stable nodejs?
19:07 < othiym23> richweskus: latest version of 0.8.x, so 0.8.16 right now
19:07 < richweskus> ok thanks
19:07 < strat> richweskus: we run 0.8.16 on dev currently and it's quite stable
19:07 < richweskus> what is new in v0.9?
19:07 < othiym23> richweskus: see /topic ;)
19:07 < richweskus> i see in topic there is changes
19:08 < richweskus> lol
19:08 < richweskus> ok
19:08 < othiym23> strat: are you working with large Buffers?
19:08 < richweskus> yes bitches! im on holiday today
19:08 < richweskus> 2 weeks of NODE CODE
19:08 < richweskus> gonna geek my face out
19:09 < othiym23> strat: could you maybe throw up an EC2 instance and run some load tests on it to see if it's reproable under Linux?
19:09 < othiym23> not discounting the possibility that the Joyent build is leaking, but it seems unlikely
19:09 < _kud> Hello. I'm a bit confused with all "node" paths.
19:09 < othiym23> richweskus: if you want to get ahead of the curve, you could play with streams2 and help isaacs shake out its issues
19:10 < richweskus> i dont even know what that is
19:10 < richweskus> no one knows what that is but its provocative
19:10 < strat> othiym23: that's a good Idea, gonna run some more tests on another production machine and see what happens - I'll report back shortly - thanks for the advice
19:10 < _kud> I'm on an ubuntu server and I'd llike to know what it  /usr/lib/nodejs/,  /usr/lib/nodejs/npm/node_modules, and what's node_path ?
19:11 < othiym23> richweskus: it's a new WritableStream implementation that reworks Node's writable streams to be more like Dart's, and also to have a more coherent API next to ReadableStream's
19:11 < othiym23> also better controls over backpressure
19:11 < richweskus> hmm ok
19:12 < richweskus> ill take a look at it
19:12 < richweskus> will it be in the topic link?
19:13 < bradleymeck> anyone know of a substream class that will grab the next n bytes off a stream as a new stream that is already written
19:13 < richweskus> @othiym23
19:13 < richweskus> ^
19:14 < richweskus> |
19:17 < bingomanatee> hello node
19:20 < othiym23> richweskus: should be, that's most of what isaacs has been working on for 0.10 / in 0.9
19:21 < othiym23> first item on the list ;)
19:21 < othiym23> man I'm dumb
19:22 < othiym23> got it backwards exactly -- the ReadableStream interface is the one that's changing, not the WritableStream interface
19:22 < othiym23> clearly I haven't had much time to play with the new stuff
19:23 < bingomanatee> I seem to run into this pattern where a bunch of disparate code wants to kick off a process ("refresh records") that is asynchronous but serial; is there any good method of doing this
19:23 < bingomanatee> a.k.a., "call this function if it hasn't been called and is chewing already"
19:24 < othiym23> bingomanatee: sounds like a job queue to mee
19:24 < nownot> I have a node.js script, using exress, that ties into mongodb. One function is to read all rooms from the db and output json with attributes of the room, I have this working. The issues is, with my noobness, is how to use node.js in a webpage, so a webpage will call this service (node.js service) and be able to digest and show this information. is php the answer?
19:24 < ewoerner> hi, i have some problem with http.get barfing on a broken webserver's result
19:24 < othiym23> nownot: if you're already using Express, you're most of the way there
19:24 < ewoerner> example: require("http").get("http://www.mapdust.com/getBugs?b=52.26938&t=52.53039&l=9.5114&r=10.07376");
19:25 < othiym23> you probably just need to add a templating engine and a little bit of glue to get your data on the page
19:25 < EyePulp> bingomanatee: have you looked at the async module?
19:25 < aroman> hey so there's this cool node module I use, and it's on npm. I forked it on github and added some features that I really could use in my project. Of course, I submitted a pull request/responded to existing bug reports for those features on the original project. Thing is though, I don't want to wait for the original author to merge my stuff in. How can I use my fork of the module in my production app via npm?
19:25 < nownot> othiym23: so I should look up express html templates?
19:26 < othiym23> EyePulp: I thought of async.forEachSeries, but that doesn't handle the case where bingomanatee wants the function to be called iff it's not already processing
19:26 < aroman> should I just package my fork and publish it separately on npm?
19:26 < EyePulp> aroman: you can set up a github pull via your package.json dependencies
19:26 < EyePulp> aroman: so it'll pull from your fork
19:27 < bingomanatee> yes I did look into async
19:27 < othiym23> nownot: look up EJS and Jade; one of those two (or handlebars) ought to fulfill your templating needs
19:27 < EyePulp> aroman: and then after they merge, you just edit your package.json to use their module again
19:27 < othiym23> bingomanatee: another thing you can do is add a wrapper function that checks a sentinel value and only kicks off processing iff the sentinel is false
19:28 < othiym23> and then the process sets the processing flag while it's running, and clears it when it's done
19:28 < EyePulp> bingomanatee: I use the async.series a lot.  
19:28 < othiym23> that would be a recipe for a disaster in a threaded environment, but hey, Node's not threaded
19:28 < bingomanatee> that makes sense. 
19:29 < EyePulp> bingomanatee: here's a nice pattern:  http://iamsim.me/NodeJS/2012/04/10/bootstrapping-nodejs-with-async/    look for the async.apply method that passes "this" to each step in the series. 
19:30 < bingomanatee> thx.
19:30 < EyePulp> Not required, but it gives you a really clean signature for each of the function steps -- foo(self,callback)
19:31 < aroman> EyePulp: excellent, thanks.
19:31 < EyePulp> essentially you can just keep passing context down the line with each step in the series, and just edit "self" within each step.
19:31 < EyePulp> aroman: np
19:36 < nownot> othiym23: looking at jade, would much rather use something like bootstrap, is this possible?
19:36 < othiym23> Bootstrap is largely CSS and client-side JavaScript
19:36 < CoverSlide> jade is very different from bootstrap
19:36 < othiym23> you can drop the HTML bits of it into templates pretty easily
19:37 < othiym23> but for that, EJS is probably going to be an easier fit
19:37 < CoverSlide> jade is to bootstrap what clouds are to tow trucks
19:37 < othiym23> unless / until you're ready to rewrite all of the HTML into Jade syntax
19:38 < nownot> so its safe to make the assumption that for node.js jade one of the few defacto frameworks that is to be used so I need to get used to it
19:38 < CoverSlide> it would be good to have it your back pocket
19:39 < CoverSlide> but there are advantages to knowing it and using it
19:39 < othiym23> nownot: it's a matter of personal preference
19:40 < othiym23> people do tend to use one of Jade, EJS or Handlebars, with EJS slowly dropping out of favor over time
19:40 < nownot> ok, I will get on this jade train. thanks for the help
19:40 < CoverSlide> i like doT myself
19:41 < EyePulp> cover slide - link?
19:41 < EyePulp> er, CoverSlide 
19:41 < mscdex> i wish node's TLS debug output was easier to read
19:41 < CoverSlide> http://olado.github.com/doT/
19:42 < CoverSlide> it's got really good benchmark performance, although the features are a bit lacking
19:43 < CoverSlide> but it's small, fast, and not too much magic
19:46 < CoverSlide> also, protip if you care about performance: most engines use `with` by default, which is a major performance hit for any JS engine. some like jade give you the option of not using with, but has to be done explicitly
19:47 < othiym23> why would you even make that an option?
19:47 < othiym23> "with" is toxic death for pretty much every JIT / tracing compiler for JS
19:48 < Benvie> I'm surprised they do that
19:48 < Benvie> it's a huge performance loss
19:48 < PigDude> it's also ugly
19:49 < othiym23> probably simplifies the generator a bunch
19:49 < othiym23> but still
19:49 < CoverSlide> well it's for people who come from ruby and are used to a certain style
19:50 < Benvie> magnitudes of lost performance
19:51 < CoverSlide> also, for example, with doT, the data object is called "it" so I have to do "it.whatever" everywhere. this name is not customizable anywhere. I personally would like the option of customizing this. I don't know any that do it though
19:52 < CoverSlide> oh i guess underscore templates does
19:52 < EyePulp> CoverSlide: doT looks pretty slick 
19:54 < CoverSlide> ah jade uses `self`
19:54 < CoverSlide> if compiled with self: true
19:56 < acidjazz> i need to make a node url run a mongorestore command 
19:56 < KeOps> Y'a des franÃ§ais ? ^^
19:57 < CoverSlide> non
19:59 < MI6> joyent/node: isaacs master * 43538f4 : benchmark: Add http-flamegraph  This is very similar to http.sh, but gene - http://git.io/ycon6A
20:06 < acidjazz> how do i basically exec a system command... pwd or whatever
20:07 < mbalho> use child labor
20:07 < mbalho> nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options
20:09 < etiennesamson> Salut !
20:10 < etiennesamson> Benny_b : c'est bon de ton cotÃ© pour up les photos sur flickr ?
20:10 < chrisjaure> acidjazz: process.cwd() will get you the pwd if that's all you want
20:11 < acidjazz> chrisjaure: naah i need to run some commands
20:17 < shanebo> hey guys what's the best way to get the requesting user's ip address?
20:20 < garbagegod> I'm running an instance of node on port 8080, and I can connect to it from the server itself (essentially localhost), but nowhere else on the network, connecting on port 80 externally works fine though
20:21 < chilts> garbagegod: does your firewall let through ports other than 80?
20:21 < garbagegod> an nmap scan reports 8080 as closed
20:21 < chilts> indeed
20:21 < superjoe> mbalho, ha
20:21 < superjoe> nice
20:21 < mscdex> bnoordhuis: is there a way to re-use TLS sessions in node?
20:22 < garbagegod> chilts: I've been assured it's not a firewall issue
20:22 < garbagegod> chilts: to answer your question though, yes it does
20:22 < niggler> for performance tuning, how useful is v8 prof?
20:22 < chilts> ok ... :) sounds like a firewall issue to me though
20:23 < garbagegod> chilts: me too
20:23 < garbagegod> hang on.. I'm going to stop apache and bind it to port 80
20:23 < bnoordhuis> mscdex: yes, but... i was just about to head off, ask me tomorrow about details :)
20:23 < mscdex> :\
20:24 < bnoordhuis> or ask indutny if he's around
20:25 < garbagegod> so if I stop apache and bind node to port 80, it connects fine 
20:25 < garbagegod> that DEFINITELY sounds like a firewall issue then, doesn't it?
20:25 < js-coder> Hey guys. How can I rename a package that I published to NPM?
20:27 < superjoe> js-coder, publish it to the new name and then unpublish the old one
20:27 < js-coder> superjoe: k, just had the same idea. :D
20:28 < garbagegod> do you guys agree?
20:31 <@Nexxy> garbagegod, port 8080 is commonly firewalled
20:33 < js-coder> I proudly present my first node package :P https://npmjs.org/package/strukt
20:33 < superjoe> congrats js-coder!
20:33 < garbagegod> Nexxy: could you advise a different port?
20:34 < garbagegod> like 1421? just as random as possible?
20:34 < superjoe> js-coder, why use strukt instead of plain old javascript objects?
20:34 < superjoe> maybe the readme could explain the "why"
20:34 < niggler> first line superjoe
20:35 < garbagegod> the IT dept. insists there is no such firewall
20:35 < superjoe> niggler, but ruby doesn't have objects like javascript
20:35 < superjoe> var foo = {}; foo.x = 3; // works
20:35 < js-coder> superjoe: If you just want a simple constructor (like the Point one in the readme) then Structs are quite nice, just one line of code :)
20:36 < js-coder> In a lot of cases your constructor functions really don't have much more code
20:36 < superjoe> I see, so it saves some typing for constructors
20:36 < niggler> at the end of the day, that's what every module does
20:36 < superjoe> lol
20:42 < CoverSlide> I'll stick to simple js objects kth
20:42 < CoverSlide> x
20:43 < niggler> is there a way to adjust the snapshot resolution in v8 prof?
20:48 < exit2> I'm going to try and build a basic blog style web app with Node and I currently have my logins using oauth.  What DB is recommended for something like this in Node?
20:48 < CoverSlide> exit2: use whatever db you want, bro
20:48 < exit2> word
20:49 < CoverSlide> just pick a database and stick to it
20:49 < CoverSlide> if you want mongo use mongo, if you want mysql use mysql
20:50 < CoverSlide> either can do what you're asking
20:50 < exit2> mongoose seems pretty cool
20:50 < othiym23> mongoose exists to protect you from the grim horror of the native mongodb driver
20:50 < othiym23> it also has some features
20:51 < CoverSlide> if you don't want something ormmy, mongolian is good and better than the native mongodb driver
20:52 < othiym23> ironically, mongolian and mongoose both use the very driver they're protecting you from
20:52  * othiym23 may have an axe to grind here
20:52 < CoverSlide> does it? i though mongolian uses its own?
20:52 < othiym23> mongolian and mongoose are nice
20:52 < othiym23> pretty sure it does
20:52 < othiym23> if it doesn't, I'll just tell everyone to use mongolian instead of the native driver ;)
20:53 < othiym23> hey it's standalone
20:53 < othiym23> ilu mongolian
20:53 < EyePulp> heh - ormmy
20:55 < othiym23> my general opinion is that if you really need an ORM, MongoDB is probably not the best tool for the job, but mongoose isn't really an ORM
20:58 < CoverSlide> true
20:59 < CoverSlide> one of the strengths of mongo is nested data structures, most ORMs use flat schemas
20:59 < sethetter> From what I understand, most (or a lot, at least) of node projects use nosql db's such as mongo. Is that true? Does node generally avoid sql?
21:00 < PigDude> sethetter, many people choose node because it is new, so they choose new data store also
21:00 < sethetter> PigDude: makes sense
21:00 < PigDude> sethetter, there is nothing about node that lends itself specifically to "NoSQL" data stores
21:00 < othiym23> CoverSlide: my beef is more on the relational side of ORMs -- the whole point of an ORM is to bridge the gap between objects and relations, and with MongoDB you're all, "here take this *shove*"
21:00 < sethetter> PigDude: of course not, I was just wondering if there was any other reason for that outside of "new hotness"
21:01 < PigDude> sethetter, poor understanding of SQL and relational models, disk-bound nature of most SQL db servers, rigidness of structures stored by relational DBs
21:01 < PigDude> sethetter, usually some combination of those three (understanding, performance, fitness)
21:01 < othiym23> sethetter: people may gravitate towards NoSQL stores, but by and large, the relational DB drivers are higher quality (node-mysql and pg in particular)
21:02 < CoverSlide> mysql, sqlite3 and pg are pretty mature libraries
21:02 < othiym23> sethetter: in the early days of Node, there was a lot of overlap between the CouchDB and Node crowds
21:02 < othiym23> both are good for hypermedia applications
21:02 < CoverSlide> msnodesql I haven't had a chance to try, since I no longer work with mssql
21:02 < othiym23> and really, if there's a data store that's especially simpatico to Node right now, it's Redis
21:03 < CoverSlide> and the sequelizer ORM is very mature and well-supported
21:03 < othiym23> they both even use evented single-threaded processes
21:03 < sethetter> CoverSlide: awesome
21:04 < othiym23> man, mongolian has like a tenth the code of node-mongodb-native, and it's comprehensible to boot
21:05 < CoverSlide> well i think a lot of the parser stuff is in node-buffalo
21:06 < CoverSlide> oh well mongodb-native has its bson parser
21:06 < othiym23> the BSON parser is the most sensible part of mongodb-native
21:07 < mbalho> 315 byte module (unminified) WOOT https://npmjs.org/package/url2qs
21:07 < othiym23> I don't really mean to pick on 10gen, it's just that I've had to spend a lot of time in the guts of that driver and have had to see how the sausage gets made too closely
21:07 < othiym23> mbalho: good job
21:07 < othiym23> get that on microjs
21:07 < mscdex> mbalho: too big
21:09 < othiym23> mbalho == maxogden?
21:09 < CoverSlide> mbalho: can't you just do url.parse(url, true)?
21:09 < mbalho> i dont know
21:09  * mbalho tries
21:10 < CoverSlide> mbalho: 8.x i think adds the parseQueryString option to url.parse
21:10 < mbalho> CoverSlide: WHOA SWEET
21:11 < CoverSlide> apparently it's been there since 4.x: http://nodejs.org/docs/v0.4.0/api/url.html#url.parse
21:12  * mbalho deletes module
21:12 < CoverSlide> http://www.youtube.com/watch?v=v3rhQc666Sg
21:12 < othiym23> haha
21:12 < CoverSlide> yeah i remember monkeying with qs and url.parse all the time until i was looking for something in the docs and i was all "fuck i could have done that the whole time?"
21:13 < sechrist> "Most Prolific Recently"
21:13 < sechrist> lol u guys
21:13 < superjoe> damn looks like I got bumped off
21:14 < superjoe> better publish some more shitty code
21:14 < superjoe> har har
21:14 < sechrist> It used to be "most prolific" and that's my lolz
21:16 < CoverSlide> although a half-decent query string parsing library for the browser would be nice on microjs. I've usually had to monkey up my own using regexes. could just browserify url + querystring too i guess
21:16 < mbalho> browserify -r url should do it
21:18 < CoverSlide> oh i guess microjs has one: miuri.js
21:18 < CoverSlide> although it's compiled coffee :/
21:21 < superjoe> CoverSlide, you've seen component right? there's probably one for that
21:21 < CoverSlide> maybe
21:21 < CoverSlide> i don't care much for component
21:21 < superjoe> https://github.com/ForbesLindesay/to-element-array
21:21 < superjoe> https://github.com/component/querystring
21:21 < superjoe> https://github.com/visionmedia/node-querystring
21:22 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
21:24 < louiedog> is there a scanf type function in node? I'm trying to read a tcp stream that has and integer, a string, and then another integer
21:24 < superjoe> louiedog, try reading into a buffer
21:24 < louiedog> I'm getting the string just and unprintables
21:24 < superjoe> and then check the buffer api 
21:25 < superjoe> it has nice functions for that stuff
21:25 < superjoe> read32BigEndian and such
21:25 < louiedog> superjoe: thank you sir
21:36 < hbeck> is it possible to have npm install dependencies outside the project directory (but not global)?  such as /path/to/myapp and /path/to/myapp_modules ?
21:42 < mmalecki> hbeck: no
21:42 < mmalecki> this is also a bad idea
21:42 < mvarun> hi
21:42 < mmalecki> hbeck: why do you need it?
21:43 < mvarun> can u sort out my problem?
21:43 < hbeck> mmalecki: because I'm being whined at about "noise" in the project dir caused by the node_modules/ directory with the project dependencies
21:44 < mmalecki> hbeck: what kind of noise? are you checking things into git?
21:44 < mvarun> ??
21:44 < hbeck> for example, using the handy-dandy HyperSearch feature in jEdit on the project dir gives all kinds of results in the node_modules dir when really we want to exclude that from search (which I guess is possible, but a pain)
21:45 < mvarun> someone knows how to use foreman start heroku node.js ??
21:45 < hbeck> mmalecki: no, the deps are in the package.json file but when doing quick-turn dev we have the dependencies installed to the project dir and just add it to the ignore path for commits
21:45 < mbalho> substack: http://images.jit.su/?url=http://substack.net/images/
21:45 < mvarun> actually there's an ERROR : Procfile doesn't exist
21:46 < othiym23> hbeck: can you add an exclude path to jEdit?
21:46 < hbeck> othiym23: looking for that currently
21:46 < CoverSlide> hah i love this one: http://substack.net/images/max_fish.png
21:46 < othiym23> I use Ack with vim and just have the command-line set up to exclude node_modules and my cover_html directories
21:47 < mmalecki> mbalho: I just crashed your app :3
21:48 < mbalho> mmalecki: try again :D:D
21:49 < mbalho> i was deploying stuff
21:49 < othiym23> mbalho: I get an array of broken images that are actually JSON blobs saying {error:"usage: ?url=http://womewebpage.com"} when I view them
21:49 < hbeck> othiym23: nope, can't.
21:49 < mmalecki> sweet :)
21:50 < othiym23> hbeck: I would suggest that's jEdit's problem, not npm's ;)
21:50 < othiym23> yay for shift-reload
21:50 < hbeck> haha sure. It can skip 'hiddens/backups' so it will skip .svn/ for example
21:50 < othiym23> this is the best web page of all time
21:51 < hbeck> can I put the project deps into /.node_modules/ instead of /node_modules/  ? npm docs seem to say no
21:52 < mmalecki> mbalho: I have a bug to report
21:52 < mmalecki> http://images.jit.su/?url=http://realtimecats.com
21:52 < mmalecki> no images
21:52 < mmalecki> WAT
21:52 < mmalecki> hbeck: no
21:54 < CoverSlide> does it only do image links?
21:54 < CoverSlide> would be awesome if it scanned css, img tags
21:55 < mbalho> it just does <a> tags
21:55 < mbalho> cause if you go to realtimecats you will already see cats
21:55 < mmalecki> mbalho: btw, my cat is amused by realtimecats
21:55 < mbalho> but if you wanna pull req in more logic feel free, https://github.com/maxogden/get-images
21:58 < othiym23> so many great substack images
21:58 < othiym23> how is the browserify logo not in there?
21:59 < othiym23> it was the first of his drawings I saw and still my favorite
21:59 < othiym23> I would totally pay good cash money for a copyright-infringing browserify T-shirt
21:59 < mbalho> a pull req to add svg to it would be cool too
22:01 < othiym23> I wonder how many SVGs Chrome could display side by side before the tab exploded
22:03 < AAA_awright> I'm looking for a realtime message library for web browsers, socket.io with fallbacks, that's not hungry and bloated
22:04 < AAA_awright> socket.io is absolutely insanely bloated and I just can't use it anymore
22:05 < AAA_awright> I just want to do socket.write("message") or socket.write({value: 1234})
22:05 < AAA_awright> And have it work.
22:06 < mbalho> libs with fallbacks are socket.io and sockjs but theyre both pretty big libraries
22:06 < harushimo> I'm doing a tutorial. I don't understand error message
22:07 < harushimo> https://gist.github.com/4332487
22:07 < harushimo> what does this error message me
22:07 < harushimo> mean?
22:11 < CoverSlide> mbalho: chrome supports <img src=*.svg> it seems. http://coverslide.me:8001/?url=http://substack.net/images
22:11 < CoverSlide> ^ with a simple |svg to the regex
22:12 < substack> whaaaaa
22:12 < CoverSlide> substack: is your irc going beep beep beep a lot?
22:12 <@Nexxy> harushimo, router != route
22:13 <@Nexxy> that is a weird message though
22:13 < harushimo> I'm following the tutorial online
22:13 < harushimo> the message didn't up at all
22:13 <@Nexxy> maybe a better tutorial is in order
22:13 < harushimo> haha
22:13 <@Nexxy> you're trying to export 'route'
22:13 < CoverSlide> harushimo: a variable 'route' needs to exist in order to export it
22:13 <@Nexxy> but the only function defined is 'router'
22:13 <@Nexxy> unless it was just a typo?
22:13 < tttthet> what's the word on express@3 and authentication? is it no longer using connect-auth, which seems to be pretty stale and stuck at connect@2...
22:14 < harushimo> let me take a look
22:15 < CoverSlide> tttthet: connect 2.x is the latest branch of connect
22:15 < CoverSlide> connect's basicAuth seems to be still maintained
22:15 < tttthet> sorry, connect-auth seems to be stuck at 2.0.0...
22:15 < harushimo> thanks. you are right it was a typo
22:15 < tttthet> anyway, is express now not using connect-auth?
22:15 < harushimo> i'm trying the script now
22:16 < tttthet> coverslide, thanks...
22:16 < EyePulp> Hey CoverSlide - a little late with this, but I see that you can actually change the "it" varname for doT
22:16 < EyePulp> Maybe you already knew that though
22:17 < CoverSlide> EyePulp: oh i see it: https://github.com/olado/doT/blob/master/doT.js#L20
22:18 <@Nexxy> harushimo, :)
22:19 < harushimo> I usually pay attention to everything
22:19 < harushimo> thank you so much
22:19 <@Nexxy> ^-^ good luck!
22:19 < harushimo> thanks. I just start learning js for the first time 
22:20 < superjoe> "I usually pay attention to everything"
22:20 < superjoe> there's a loaded statement if I've ever heard one
22:20 < harushimo> sorry
22:20 < superjoe> I'm teasing
22:20 < harushimo> thanks
22:20 < superjoe> I don't actually know what you guys are talking about
22:20 < superjoe> I hope all your node.js endeavors succeed
22:21 < harushimo> I hope so too. I could sure use a job
22:21 < harushimo> hehe
22:27 < warz> well, damn. i had planned on allowing end-users to upload directly to S3, so i don't have to proxy through EC2 needlessly. that basically requires an "upload completed" message from the user, though.
22:28 < warz> so that's like 3 web requests to upload a file. request a signed url, upload the file, notify of completion.
22:28 < warz> does this sound like too much to ask?
22:28 < warz> from a programmatic api client perspective
22:34 < othiym23> AAA_awright: have you thought about just using engine.io without socket.io?
22:36 < AAA_awright> othiym23: That falls back on support?
22:36 < AAA_awright> long-polling and such?
22:37 < othiym23> AAA_awright: it chooses to upgrade rather than fallback
22:37 < othiym23> but it does have multi-transport support
22:39 < mistertwig> does YUIDoc work well for node.js apps?
22:56 < francisl> if a value if null, is it an accepted behavior to not include it in the json response?
22:59 < othiym23> francisl: I think it's generally a really bad idea to depend on the presence of a key name in a response, so yeah, not including null values is fine
22:59 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
23:00 < francisl> ok, Its what I though, thank you
23:16 < kenperkins> isaacs: does the NPM page for a module update the readme at a different frequency than the version?
23:17 < mbalho> its heavily cached
23:18 <@isaacs> kenperkins: no, it just takes 10 minutes to update
23:31 < mistertwig> what are thoughts on vert.x?
23:33 < othiym23> mistertwig: perhaps someday vert.x and rethinkdb will get married and have beautiful polyglot babies
23:33 < mistertwig> :D
23:34 < othiym23> sorta feels like Meteor or Derby without v8
23:35 < othiym23> the most surprising thing about it (to me) is that there's a Python backend that runs on top of the JVM
23:35 < mistertwig> why is that surprising?
23:36 < othiym23> because I wrote Java for a really long time and had only heard of IronPython / PyC / PyPy, not a JVM target
23:36 < kenperkins> isaacs: so if the version has updated after an npm publish, but not the readme, is that my fault?
23:37 < othiym23> vert.x could be cool, but until they replace Rhino with a better JS runtime, I'm unlikely to want to build anything big on it
23:37 < mistertwig> compared to node though
23:37 < mistertwig> would you consider it
23:37 < othiym23> not really
23:37 < othiym23> the strength of Node at this point is its focus and its ecosystem
23:37 < mistertwig> yeah i would agree 
23:37 < mistertwig> the community is giant
23:38 < othiym23> i.e. it doesn't try to be good at everything
23:38 < mistertwig> and even though it's still young, there are a surprising amount of very good libraries out there
23:38 < mistertwig> modules
23:38 < mistertwig> whatever they're called
23:38 <@isaacs> kenperkins: what version of npm are you using?
23:38 <@isaacs> kenperkins: npm -v
23:38 < othiym23> and the emerging philosophy of a fanatic dedication to separation of concerns and small, composable modules has had a pretty profound impact on how I build software
23:38 < mistertwig> well V8 is never slowing down :P
23:39 < kenperkins> isaacs: I'm embarrassed it's going to be old: 1.1.0-alpha-6
23:39 <@isaacs> kenperkins: there ya go :)
23:39 < mistertwig> what is the current version?
23:39 <@isaacs> kenperkins: update, republish with -f, and wait for 10 minutes
23:39 < othiym23> vert.x would have interested me a lot more when I was still in the grips of Rails mania
23:39 <@isaacs> mistertwig: 1.1.69
23:39 < mistertwig> 1.1.65
23:39 < mistertwig> darn
23:39 <@isaacs> i think .68 ships with node 0.8.16
23:39 < kenperkins> hm
23:39 < mistertwig> i'm on node 8.14
23:39 < mistertwig> :P
23:40 < mistertwig> gotta update soon
23:40 < kenperkins> I have no idea how my npm got installed
23:40 <@isaacs> close enough :)
23:40 < mistertwig> i'm using the PPA
23:40 <@isaacs> mistertwig: chrislea's?
23:40 < mistertwig> yeah
23:40 <@isaacs> kewl
23:40 < mistertwig> is that acceptable?
23:40 < mistertwig> good :P
23:40 <@isaacs> yeah, he stays pretty up to date
23:40 < mistertwig> i think last update was like 2 days ago
23:41 < mistertwig> 4 days
23:41 < mistertwig> i guess i saw it 2 days ago
23:41 < othiym23> isaacs: for "fun", I was getting caught up on my debian-devel email a couple weeks ago and read all of the nodejs packaging threads from this year
23:41 < othiym23> it was fun in the way watching a slow-motion video of an epic car crash is fun
23:42 < othiym23> I now know a lot more about ham radio, is a plus
23:42 < mistertwig> so node seems to be pretty cool for game servers
23:42 < othiym23> but other than that, OMG what a mess
23:42 < CoverSlide> othiym23: There was JPython for a while, but it died soon after, and then got rebooted as Jython
23:42 < mistertwig> i'm involved with a project that uses jython 
23:43 < othiym23> oh right Jython
23:44 < bricker> I have an application which is keeping track of "Rooms", "Users", and Sockets (from socket.io). For now, this will be a relatively low-activity application - maybe 20 Rooms and 20 Users concurrently. Right now I'm storing everything in memory... is that generally okay? Or should I go for some sort of persistance like Redis?
23:44 < othiym23> I am definitely getting old
23:44 <@isaacs> bricker: you can use in-memory for that, sure.
23:44 <@isaacs> bricker: when you have multiple nodes, you can even keep using in-memory, and persist it with scuttlebutt
23:45 < mistertwig> how can you use multiple processes for node for like a game server
23:45 <@isaacs> er, share it with scuttlebut
23:45 <@isaacs> for *persistence*, yes, you need something that talks to disk
23:45 < mistertwig> scuzzlebutt?
23:45 < othiym23> mistertwig: that's a simple question with a complex answer
23:45 < bricker> isaacs: cool, thanks for the suggestion
23:45 < othiym23> depends on what you're trying to do, really
23:45 < mistertwig> well i mean like
23:45 <@isaacs> mistertwig: npm search scuttlebutt
23:46 < mistertwig> alright isaacs
23:46 <@isaacs> mistertwig: Raynos, dominictarr, and juliangruber are the folks to talk to about that.  and substack
23:46 < Raynos> oh hi
23:46 < Raynos> why summons
23:46 <@isaacs> A RAYNOS APPEARS
23:47 <@isaacs> Raynos: just talking about scuttling butts
23:47 < mistertwig> hm
23:47 < mistertwig> very interesting 
23:47 < Raynos> mistertwig: what are your aims?
23:47 <@isaacs> Raynos: it was bricker's
23:47 < mistertwig> oh nothing i was just curious
23:47 <@isaacs> Raynos: and strictly academic
23:47 < substack> mistertwig: https://github.com/substack/stream-handbook#scuttlebutt
23:47 < substack> an example of scuttlebutt models
23:48 < mistertwig> yeah was reading that
23:48 < substack> but it also has consistently-ordered event emitters
23:48 < mistertwig> that's pretty neat tbh
23:48 < Raynos> yeah if you want shared state
23:48 < Raynos> scuttlebutts is way better then redis
23:48 < mistertwig> shared state
23:48 < mistertwig> that's what i was looking for
23:48 < Raynos> well probably
23:48 < mistertwig> the name :P
23:48 < Raynos> should use level-scuttlebutt
23:49 < mistertwig> isaacs: what framework is the npm website using?
23:49 < substack> mistertwig: npm
23:49 < mistertwig> hm
23:50 < Raynos> mistertwig: github.com/isaacs/npm-www
23:50 < substack> all node frameworks are a strict subset of npm
23:50 < substack> npm is the frameworkiest framework possible
23:50 < mistertwig> ah there are no frameworks
23:50 < mistertwig> " No frameworks  Everything is done using small, simple, standalone modules that work with vanilla Node.js http servers. "
23:50 < kenperkins> isaacs: after I update, will -f update the readme?
23:50 < mistertwig> "By returning HTML, we get a lot of benefits for free.  Some client-side JavaScript may be added later to smooth out rough edges, but first, it must all work with client-side JavaScript disabled. It's not that we expect any users to have JavaScript disabled, but rather that this discipline forces a consistent approach to the site structure."
23:51 < mistertwig> i love this idea. i usually stick to it for most of my web development ventures 
23:52 < ruff> mistertwig: what do you think of that strategy vs. ditching the controller layer and just making ajax requests straight to your API
23:52 < Raynos> Ditch the ajax layer
23:53 < Raynos> Ditch the entire server layer
23:53 < mistertwig> some people will do silly things
23:53 < Raynos> build server-less apps ontop of the p2p highways
23:53 < mistertwig> making websites dependent on JS
23:53 < mistertwig> stupid mistakes that happen by not testing
23:53 < othiym23> haha sounds like somebody's still on a high after delivering a talk about p2p
23:53 < substack> I mostly deliver json content and static html from the server
23:53 < substack> then stitch it all together with xhr
23:54 < Raynos> there are two things you do
23:54 < Raynos> websites work without JS
23:54 < Raynos> webapps make a choice about whether they want to maintain two versions
23:54 < mbalho> i only write apps for old people, specifically large enterprise companies
23:54 < mbalho> so i need netscape navigator support
23:54 < Raynos> its easier to write apps without JS support
23:54 < mistertwig> i wouldn't really call it "two versions"
23:54 < mistertwig> for me the JS can add few nice layers
23:54 < substack> mbalho: navigator is kinda new
23:54 < othiym23> mbalho: I've had to do browser testing in IE 7 within the last six months
23:55 < mistertwig> one i really liked was the url-rewriting on client side
23:55 < substack> mbalho: what if I still run mosaic
23:55 < othiym23> mbalho: I write node therefore: IE tester
23:55 <@isaacs> mbalho is on a troll tear.
23:55 <@isaacs> ;P
23:55 < mistertwig> can really trick the user into thinking the pages are loading faster by not reloading at all
23:55 < mistertwig> :P
23:55 < mistertwig> but making that optional is a must imo
23:55 < mbalho> yea we dropped support for mosaic a few months back, got lots of push back
23:55 < substack> othiym23: http://browserling.com
23:55 <@isaacs> So, for sites like npm (and many others), anything other than static html and css is a huge mistake.
23:55 < othiym23> substack: I can't run Mosaic because my site can't get a Mosaic license
23:55 < othiym23> I'm stuck on gopher
23:56 < substack> mbalho: you crazy startup people think you can just drop support for 20 year old browsers!
23:56 < mistertwig> "Upgrade to a paid plan to unlock versions: 6.0, 7.0, 8.0"
23:56 <@isaacs> why have a thousand computers all do *the same* computation?
23:56 < mistertwig> YES
23:56 < mistertwig> i would love to pay to use IE6
23:56 <@isaacs> why not just do it in one place, cache the results, and give it to everyone?
23:56 < othiym23> substack: where were you six months ago? :p
23:56 < mbalho> isaacs: because secret botnets
23:56 < mistertwig> isaacs: yeah that is an interesting idea
23:56 < mistertwig> makes sense though
23:56 < mistertwig> can be doing things a lot quicker that way
23:56 < substack> othiym23: plus there's this now http://ci.testling.com/
23:56 <@isaacs> mistertwig: that's how the npm website works
23:56 <@isaacs> mistertwig: hardly any client-side js
23:56 < substack> lookit pretty badges http://ci.testling.com/substack/node-falafel
23:56 <@isaacs> everything cached to smithereens
23:57 < mistertwig> yeah isaacs i noticed. it's great 
23:57 < othiym23> substack: dude I was the first one sending you an email on nodejs@google congratulating you on that
23:57 < mistertwig> i have noscript running so when  a site runs without JS enabled, i'll notice
23:57 < mistertwig> :P
23:57 < substack> hah neat
23:57 < mbalho> mistertwig: are you scared of getting hacked?
23:57 < mistertwig> nope
23:58  * substack is making testling-ci give better error messages
23:58 < mistertwig> wow that browserling is pretty cool
23:58 < substack> then some blog posts are queued up and ready to go
23:59 < mbalho> mistertwig: does noscript block ads? why do you use it?
23:59 <@isaacs> mbalho: i'm scared of getting hacked.
23:59 < mistertwig> mbalho: it can block ads
23:59 < mistertwig> but i just don't like unnecessary JS running
23:59 <@isaacs> mbalho: hackers hackin your shit. now there's hardware hackers hacking hardware, so even stuff like walls and rocks can get hacked.
23:59 < mistertwig> i also have flash disabled 
23:59 < othiym23> I used to like noscript, but then I switched to Ghostery + AdBlock Plus
23:59 <@isaacs> mbalho: how do i install anti-hacking prevention on all my hardware?
23:59 <@isaacs> mbalho: i heard something about life-hacks.
23:59 < mistertwig> i use DNT+ as well othiym23
--- Log closed Wed Dec 19 00:00:02 2012
