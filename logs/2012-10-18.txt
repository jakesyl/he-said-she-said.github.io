--- Log opened Thu Oct 18 00:00:28 2012
00:10 < ChrisPartridge> madhums: sinon, gently ?
00:10 < rvagg> sinon++
00:12 < madhums> ChrisPartridge: had never heard of it thanks! looks good! will try it out
00:15  * konobi waves from dublin again
00:15 < s5fs> there's an apartment complex next to my office and i have my window open, i smell a dryer. love that smell!
00:20 < elliottcable> >> Function.prototype.name
00:21 < ChrisPartridge> konobi: you're not in dublin unless your drinking a guinness ;)
00:22 < superjoe> if you're using a pub/sub system, having a channel-per-object is scalable, right?
00:23 < superjoe> for example, if I have a collection of Users, does it make sense to have a channel called "model.User.13213.updated" and "model.User.43848.updated" etc
00:25 < pyrotechnick> superjoe: does that feel good to you?
00:25 < superjoe> absolutely
00:25 < superjoe> minimal amount of data over the wire
00:26 < superjoe> also it makes keeping clients up to date simple - when they subscribe to the channel, just send the object in its current state, and then all you have to do is emit when it changes
00:27 <@konobi> ChrisPartridge: not right now... earlier there were some
00:30 < pyrotechnick> superjoe: sounds good to me, have you read up on gossip protocols?
00:32 < superjoe> pyrotechnick, nope, I'll do that now
00:32 < pyrotechnick> superjoe: https://github.com/dominictarr/scuttlebutt is one of the better ones
00:32 < pyrotechnick> that white paper he links is very good
00:32 < pyrotechnick> and i despise white papers so that's saying something
00:33 < ChrisPartridge> pyrotechnick: probably because its short, sharp and to the point
00:34 < pyrotechnick> call me crazy but they need to go back to the days of encarta
00:34 < pyrotechnick> interactivities
00:34 < pyrotechnick> this kind of thing http://worrydream.com/LearnableProgramming/
00:35 < pyrotechnick> video: http://vimeo.com/36579366
00:35 < ChrisPartridge> pyrotechnick: hah, i lost this bookmark a while a go
00:35 < pyrotechnick> you're welcome
00:36 < pyrotechnick> i'm compiling a list of the most badass internet stuff i'm come across in my 22 short years here on earth
00:36 < pyrotechnick> i'll reddit it or something soon
00:36 < ChrisPartridge> yeah this bloke is bad ass for sure
00:37 < pyrotechnick> he's some kind of prophet
00:38 < pyrotechnick> what i really want is some kind of page or site or forum or something for things of this calibre
00:39 < pyrotechnick> i think reddit gets close but there's still something wrong with the formula
00:40 < pyrotechnick> HN with a threshold is OK but still not quite right
00:40 < pyrotechnick> what i've found is quality is almost inversely proportional to popularity
00:41 < pyrotechnick> it keeps me up at night man
00:43 < pyrotechnick> from my time at game companies i've grown to suspect this kind of technology is rampant in the proprietary world
00:43 < pyrotechnick> but how to manifest it in the public domain
00:47 < pyrotechnick> i wonder which irc channel these kind of people use http://en.wikipedia.org/wiki/Jarkko_Oikarinen
00:48 < pyrotechnick> dip me in ideals and throw me to the futurists
00:48 < pyrotechnick> </monologue>
00:50 < huangjs> guys, please tell me which lang+framework+libs do you prefer over node + express + libs (i.e. passport, mongoose, etc. ) :)
00:51 < ang3lfir3> huangjs, ur question lacks a level of specificness .... 
00:52 < huangjs> ok, in terms of development speed, and easy of debugging, is any other language + framework that you prefer over node + express?
00:52 < ang3lfir3> ie in what situations ... 
00:52 < pyrotechnick> you know it feels good to say there probably isn't anything
00:53 < huangjs> i.e. clojure + clojurescript + something
00:53 < huangjs> yeah, i hate to admit that node + express is pretty damn good for fast prototyping, node has lots of webservice oriented libs are a huge plus
00:54 < ang3lfir3> if i need strong typing and a great debugger ... i go to C# and ASP.net MVC ... if I want speed and lots of prebuilt crap with little cruft and I don't care too much about hacking on it to make it work ... Ruby + Rails .... I need something fast easy and that I can write and deploy in less than an hour ... node + express 
00:54 < ang3lfir3> in other words "it depends"
00:55 < huangjs> so you mean ruby + rails is fast in terms of development speed?
00:55 < ang3lfir3> yeah ... 
00:55 < pyrotechnick> only if you know it and are in a team that does too
00:55 < ang3lfir3> rails scaffolding gets me a long way with almost no work
00:55 < pyrotechnick> nothing's stopped people doing the same thing in node
00:56 < huangjs> scaffolding you mean CRUD?
00:56 < TheEmpath> its all a disaster in epistemology, imo
00:56 < pyrotechnick> scaffolding?
00:56 < huangjs> which one is a disaster, RoR or node?
00:56 < huangjs> yeah
00:56 < ang3lfir3> pyrotechnick, true ... express feels a lot like sinatra ..... which if I am in ruby land I like for prototyping
00:56 < pyrotechnick> ang3lfir3: zappa
00:56 < ang3lfir3> huangjs, CRUD scaffolding and their templates
00:57 < TheEmpath> huangjs: both prefer methods of organization that are variations of the scientific process
00:57  * ang3lfir3 is actually writing an app in express as we speak
00:57 < pyrotechnick> the scientific method is a myth: http://en.wikipedia.org/wiki/Baconian_method
00:58 < TheEmpath> huangjs: take, for example, the human hand.  represent that as classes.  now represent it as prototypes.
00:58 < ChrisPartridge> mm bacon
00:58 < TheEmpath> represent it as a series of unconnected, interchangable black boxes
00:58 < TheEmpath> you'll be making objects for each bone, mapping layers for each joint, etc
00:58 < huangjs> code refactory in node is a disaster, kudos callbacks
00:59 < TheEmpath> services to command the whole thing.
00:59 < ang3lfir3> science is a myth .... the binders told me so .... 
00:59 < ang3lfir3> TheEmpath, sounds like programming ..... 
00:59 < ang3lfir3> that other crap is just scripting :p 
00:59 < TheEmpath> ang3lfir3: aye
00:59 < TheEmpath> but it has flaws
00:59  * ang3lfir3 lights the fuse and moves away
00:59 < pyrotechnick> huangjs: tools which eventually solve the problem, they're already beginning to http://www.jetbrains.com/resharper/
00:59 < TheEmpath> all frameworks are bound to the flaws of the languages they are using
01:00 < fnguest> can someone point me to an example that uses async.parallel?  i tried working with the ones Google finds easily, but i'm not having much luck.
01:00 < ang3lfir3> pyrotechnick, lol I use R# all the time ... you need it for the crap in typed languages
01:00 < TheEmpath> for example, i hate symfony.  loathe it.  it took PHP and tried to superimpose Java on top of it.
01:00 < TheEmpath> you can't do that in a language with no strong types or weak references.  instead of closures, you get flat files for dependency injection
01:00 < ChrisPartridge> fnguest: there are perfectly valid examples on the gh page
01:00 < pyrotechnick> ang3lfir3: try it with some JS ;)
01:00 < fnguest> gh page?
01:01 < ChrisPartridge> github
01:01 < fnguest> ah ok, will look
01:01 < TheEmpath> java follows very strong engineering principles, but only because it was designed to
01:01 < huangjs> anyone recommend a message queue library? redis, zeromq, rabbitmq?
01:01 < TheEmpath> scripting libraries that run with managed languages aren't the managed lanaguage.
01:02 < pyrotechnick> huangjs: redis is a good start nice and simple
01:02 < ang3lfir3> pyrotechnick, half our code base is JS ... (ok well Coffee .. but meh) .... its an excercise in going slow and :s in viemu :p 
01:02 < pyrotechnick> ang3lfir3: i <3 coffee
01:02 < pyrotechnick> fuck the haters
01:02 < ang3lfir3> huangjs, redis is pretty all arond good place to start
01:02 < huangjs> the thing is that when i have complex logic in my js code, i sometimes want to slap my face, 
01:02 < ang3lfir3> pyrotechnick, me too ... 
01:02 < huangjs> so i think i better code complex logic in other languages
01:02 < huangjs> thanks, i'll stick to redis
01:02 < ang3lfir3> huangjs, use the right tool for the job 
01:03 < ang3lfir3> huangjs, there are lots of times that is not node
01:03 < huangjs> ang3lfir3: i use iced-coffeescript, still pain in the ass, it's the language problem
01:03 < TheEmpath> what i'm saying is, the flaw isn't the framework or the scripting language or even the underlying language itself.  any flaws in those are flaws in human creativity being bottlenecked into symbol-based organization.
01:03 < pyrotechnick> ang3lfir3: let a million languages blossom
01:03 < huangjs> ang3lfir3: you're right, half node, async callbacks + javascript,
01:03 < pyrotechnick> the tower of babel fell, deal with it
01:03 < TheEmpath> pyrotechnick: and they'll all reflect flaws in human cognition
01:03 < pyrotechnick> good
01:03 < ang3lfir3> huangjs, not a fan of iced  for whatever reason .... tho i like streamlinejs when i need orchestrated callbacks
01:04 < pyrotechnick> "It is far better to grasp the universe as it really is than to persist in delusion, however satisfying and reassuring."
01:04 < huangjs> ang3lfir3: thanks for the info
01:04 < ang3lfir3> pyrotechnick, and we will learn them all (shit there has to be more than a million already)
01:04 < ang3lfir3> huangjs, welcome
01:04 < huangjs> oh, i better stick to iced
01:04 < huangjs> just check the syntax...
01:05 < pyrotechnick> ang3lfir3: do you know about terrance mckennas novelty theory?
01:05 < ang3lfir3> pyrotechnick, no
01:05 < pyrotechnick> look it up.
01:05 < ang3lfir3> do tell 
01:05 < ang3lfir3> ok fine... 
01:05 < pyrotechnick> you can thank me later
01:05 < ang3lfir3> i know how to google :p 
01:06 < ang3lfir3> anyone know the names of the channel bots?
01:06 < ang3lfir3> we have any decent info/chan bots?
01:06 < pyrotechnick> it's basically empirical evidence that the purpose of life is to synthesise and never analyse
01:07 < ang3lfir3> ^^ <3 LOL 
01:07 < pyrotechnick> but he explains it alot better than i ever could
01:07 < ang3lfir3> I has wikipedia page
01:07 < ang3lfir3> beer me ?
01:07 < ChrisPartridge> ang3lfir3: if you are reading terrance mckenna, mushroom me would be more approriate ;)
01:08 < pyrotechnick> space mushrooms.
01:08 < ang3lfir3> ChrisPartridge, lol ... I am trying to wake up the bots ... 
01:08 < pyrotechnick> ang3lfir3: listen to terrance's audio and watch his videos rather than reading if you can
01:08 < pyrotechnick> it does it alot more justice
01:09 < huangjs> ok, there're node-scaffold, scaffnode, and tower.js, anyone can tell how good they are ? :)
01:09 < ang3lfir3> atm I am on a ferry in the pudget sound ... so thats a little hard
01:09 < TheEmpath> huangjs: sure, you can use a framework that leverages a pattern that best suits the job… and some frameworks are more biased for specific patterns than others.  while the context of the task is important, the fundamental problem remains: your willpower will always be secondary to the tool's influence on the outcome.
01:09 < pyrotechnick> ang3lfir3: this is advice you can remember for later ;) no pressure
01:09 < TheEmpath> if i carve an apple with a knife… or i carve an apple with a chainsaw....
01:09 < pyrotechnick> you just sound like you'd appreciate his thoughts
01:09 < ang3lfir3> pyrotechnick, lol I guess it is simple enough :p
01:10 < ang3lfir3> chances are I prolly would :) 
01:10 < huangjs> TheEmpath: there're so many tasks that are common, cookies, sessions, authentications, orm, these can be part of the standard tools
01:10 < pyrotechnick> if you like him then try joe rogan too
01:10 < TheEmpath> huangjs: they are common in regards to the current paradigm of what is profitable.
01:10 < ang3lfir3> awesome
01:10 < pyrotechnick> those two names alone will take you on a nice psychonuatical adventure
01:11 < TheEmpath> huangjs: and that is pegged to Moore's Law moreso than any language
01:11 < huangjs> i just finished something using very low-level tools, in language that i like, good experience but much unnecessary repetitive work
01:11 < ang3lfir3> am I gunna need weed to really grok this ?
01:11 < pyrotechnick> haha he will convince you otherwise
01:11 < pyrotechnick> but it'll help
01:11 < ang3lfir3> ohh good... messes me up .... 
01:12 < pyrotechnick> it's unnecessary 
01:12 < pyrotechnick> you can go there without it
01:13 < christopherkette> does a file have to have module.exports = something to be used?
01:13 < ang3lfir3> lol I meant it makes me a paranoid nervous wreck .... this sounds more healthy 
01:14 < pyrotechnick> christopherkette: technically no but generally in node yes
01:14 < TheEmpath> huangjs: once upon a time, printer drivers were king.  And tomorrow, when web gets automated as the profitability narrows down, you'll be writing algos for HFT :D  Sessions won't be helping you much there.
01:14 < ang3lfir3> christopherkette, define "used " :p 
01:14 < christopherkette> I'm trying this example http://dreamerslab.com/blog/en/write-a-todo-list-with-express-and-mongodb/
01:15 < christopherkette> it says require the db.js file, but node doesn't seem to like that
01:15 < pyrotechnick> christopherkette: this is a bit of an edge-case/abuse
01:16 < pyrotechnick> christopherkette: mongoose uses globals which are kind of forbidden by the commonjs spec
01:16 < christopherkette> ok I definitely want to be using best practices
01:16 < christopherkette> oh I see
01:16 < pyrotechnick> it's OKish, it's widespread at least in mongoose
01:16 < pyrotechnick> but confusing as fuck
01:16 < pyrotechnick> as you've found out the hard way
01:16 < pyrotechnick> when people say globals are bad this is what they mean
01:16 < christopherkette> so the mongoose and schema objects would be global then?
01:16 < ang3lfir3> :( mongoose
01:16 < pyrotechnick> it's like cheating on other programmers
01:16 < ang3lfir3> the official mongodb driver isn't much better
01:17 < TheEmpath> huangjs: The point I'm trying to make is that you will always be bound to the context assumptions of your tool, a quality which cannot be represented scientifically.
01:17 < pyrotechnick> ang3lfir3: the rot goes down to the mongo bone
01:17 < ang3lfir3> i wanna shoot them every time i see one of their samples
01:17 < TheEmpath> that's the irony of programming
01:17 < christopherkette> ouch!
01:17 < ang3lfir3> and I was a HUGE mongo fan
01:17 < christopherkette> Im new to the community and heard it was the way to go
01:17 < pyrotechnick> everything sucks
01:17 < pyrotechnick> some things just less than others
01:17 < christopherkette> and to look at redis for session support
01:18 < ang3lfir3> christopherkette, i got one word for you .... Riak .... 
01:18 < christopherkette> this is a super low risk play around app. Trying to get some of my colleagues into node a little
01:18 < christopherkette> \
01:19 < pyrotechnick> christopherkette: you can consider the schemas global yes, via mongoose.model
01:19 < christopherkette> I see
01:19 < ang3lfir3> Riak == sex with  a hot <gender specific identifier here> on a warm beach, with a beer in ur hand.... 
01:19 < pyrotechnick> only the object returned by require(mongoose) is global itself, usually, so .model is too
01:19 < christopherkette> anyways how do i add globals then that are not in modeule.exports? 
01:20 < pyrotechnick> im not sure what you mean
01:20 < christopherkette> my guys are .NET guys so they are most comfortable with NHibernate
01:20 < ang3lfir3> define something on the global object ... and set it ..... 
01:20 < ang3lfir3> you've been warned
01:20 < christopherkette> we figured mongoose was NHibernate ish..
01:21 < ang3lfir3> this is akin to polluting window in browsers
01:21 < pyrotechnick> not really
01:21 < ang3lfir3> christopherkette, not at all 
01:21 < ang3lfir3> its a driver .... 
01:21 < christopherkette> hmm let me rephrase my ? 
01:21 < pyrotechnick> please do
01:21 < ang3lfir3> mongo is schemaless so need for a matter .... 
01:21 < ang3lfir3> :s/need/ no need 
01:22 < christopherkette> how can I require the db.js file that has no modules.exports
01:22 < ang3lfir3> require('db') 
01:22 < christopherkette> nodejs doesn't seem to like that
01:22 < christopherkette> I tried
01:22 < pyrotechnick> like they say: require('./db')
01:23 < pyrotechnick> it wont return anythijng
01:23 < pyrotechnick> but it will populate mongoose.model
01:23 < ang3lfir3> or ./db .... i always have to try em both 
01:23 < christopherkette> ok one sec. let me try
01:23 < christopherkette> thanks for the help by the way
01:23 < pyrotechnick> you're welcome
01:23 < pyrotechnick> at least you've learned something
01:24 < ang3lfir3> require basicly just executes the code in the module (over simplified iirc) .... think of it like file includes in classic asp 
01:24 < pyrotechnick> read this if you haven't http://nodejs.org/api/modules.html
01:26 < jwulf_> can you have a global object without an export? 
01:26 < jwulf_> I didn't think so
01:26 < pyrotechnick> global.something
01:26 < pyrotechnick> there's literally an object called "global"
01:26 < pyrotechnick> it's like window
01:27 < pyrotechnick> then most things under that are globals too like process, most of the time
01:27 < pyrotechnick> it's counter-intuitive, that's why it's Evil™
01:29 < jwulf_> seems like a risky design
01:29 < jwulf_> i usually export my mongoose schemas and namespace them
01:30 < ang3lfir3> as a matter of fact if you want to test MVVM viewmodels and crap you stuck on window using qunit and node... you have to reference global in an object called window .... ie global.window = global  (makes my head hurt) 
01:30 < christopherkette> I'm still here. i apologize I'm a bit slow
01:31 < ang3lfir3> ^^ none of the above is "best" or even "good" practices 
01:31 < ang3lfir3> by that i mean the crap i said 
01:31 < jwulf_> can  you access unexported variables from another module?
01:31 < jwulf_> are all variables declared in the main body of the module added to global?
01:33  * jwulf_ runs a test case
01:36 < jwulf_> it only works if you explicitly add the object to global in the module
01:36 < jwulf_> which is effectively exporting it, but in a non-namespaced way
01:38 < christopherkette> Im getting Schema not registered error from node
01:38 < pyrotechnick> that's not node it's mongoose
01:38 < christopherkette> yes thats correct.
01:39 < pyrotechnick> node is doing its job just fine
01:39 < christopherkette> should I be asking in their room? I apologize. New to IRC
01:39 < pyrotechnick> you should be experimenting with different examples until it works
01:39 < pyrotechnick> for something simple like this people will be unwilling to help before you try that
01:40 < christopherkette> unhderstood
01:40 < pyrotechnick> but sometimes i'm nice
01:41 < pyrotechnick> if you boil it down to the simplest failing case and gist it ill look at it
01:41 < pyrotechnick> but probably in that process you'll find the problem anyway ;)
01:41 < jwulf_> why don't you just export the Schema?
01:42 < jwulf_> I export schemas from my database module like this:
01:42 < superjoe> what do you guys think of the new meteor release?
01:43 < pyrotechnick> "For the past six months we've been hard at work on an authentication and user accounts system for Meteor."
01:44 < pyrotechnick> "It's the only system of its kind in the world."
01:44 < jwulf_> var Book = db.model('book', book);
01:44 < pyrotechnick> sorry but they're full of shit
01:45 < christopherkette> https://gist.github.com/3909406
01:45 < christopherkette> thats the 3 basic files
01:45 < superjoe> it makes me sad that each request spawns a new thread
01:45 < superjoe> that defeats the whole point
01:46 < pyrotechnick> when all you have is a hammer everything begins to look like a nail
01:46 < jwulf_> export var restaurant = mongoose.model('Restaurant', restaurantSchema, 'Restaurant');
01:46 < jwulf_> ?
01:47 < jwulf_> then: restaurant = require('./db').restaurant;
01:47 < jwulf_> in the other module
01:47 < pyrotechnick> edit it for him jwulf_
01:48 < christopherkette> you guys rule
01:48 < christopherkette> Im decent at javascript but very new to node
01:48 < pyrotechnick> thanks be to ryah
01:48 < pyrotechnick> and his faithful disciples
01:49 < jwulf_> https://gist.github.com/3909415
01:49 < pyrotechnick> jwulf_++
01:49 < jwulf_> thanks pyrotechnick, i didn't know that you could edit gists
01:49 < pyrotechnick> it's a wonderful world
01:50 < christopherkette> trying it now
01:50 < christopherkette> I didn't know you could use exports this way
01:50  * jwulf_ crosses his fingers, knocks on wood, and throws some salt over his shoulder for good measure
01:50 < pyrotechnick> superjoe: okay the screencast is relatively impressive but they need to tone down their marketing and stop lying
01:51 < superjoe> pyrotechnick, agreed
01:51 < pyrotechnick> otherwise the project will implode under the weight of its own arrogance
01:51 < superjoe> I tried to build an app with meteor a few weeks ago and I ended up solving problems that were already solved 10 yearso ago
01:51 < pyrotechnick> it will breed a culture of dishonesty
01:52 < superjoe> I guess you have to be that arrogant to get funded for millions of dollars
01:52 < superjoe> maybe that's why I'm an employee and not an employer
01:52 < pyrotechnick> they are well accomplished developers
01:52 < pyrotechnick> and they're entitled to a healthy amount of camaraderie and marketing
01:52 < pyrotechnick> but there's a line
01:53 < pyrotechnick> the screencast really is nice though, good on them
01:54 < superjoe> yeah. makes me question my conclusion
01:54 < christopherkette> hmm getting an error unexpected identifier
01:54 < superjoe> I still don't get why they insist on not conforming to npm
01:54 < christopherkette> it doesn't like exports Restaurant = ….
01:55 < pyrotechnick> i guess they think they wouldn't be able to integrate what they need into npm to keep their pace
01:55 < pyrotechnick> but they're wrong
01:55 < pyrotechnick> and i bet they get told that all the time
01:55 < pyrotechnick> and i bet they ignore it until it's too late
01:55 < superjoe> why would they have to integrate things into npm? they can define a package format that conforms to npm and also has extra stuff. meteor could do extra validations on it
01:55 < christopherkette> I tried export without the s and it doesn't like that
01:56 < pyrotechnick> cuz npm isn't "smart" enough for them
01:56 < pyrotechnick> meh what do i know
01:56 < superjoe> and node.js isn't "synchronous" enough for them
01:56 < superjoe> but hey, I don't have 1,000,000 USD in the bank.
01:57 < jwulf_> sorry, exports.Restaurant
01:57 < pyrotechnick> LOL the screencast gets really lame
01:57 < superjoe> which part?
01:57 < christopherkette> agh thanks. Im a noob
01:57 < pyrotechnick> towards the end
01:57 < pyrotechnick> like a crappy infomercial
01:57 < superjoe> yeah
01:58 < superjoe> christopherkette, read the documentation.
01:58 < superjoe> there's not that much of it, and it's really nice
01:58 < christopherkette> yes I know. 
01:58 < samholmes> Is there a way to have the dependencies field in my package.json file be automatically populated with new entries when I npm install a module?
01:58 < christopherkette> the node docs or mongoose? or specifically the exports/modules docs?
01:59 < superjoe> both
01:59 < jwulf_> samholmes, npm init?
01:59 < pyrotechnick> samholmes: yeah i think there is but i've never used it
01:59 < superjoe> christopherkette, if you consume an API, and you're having an issue with it, read the docs.
01:59 < christopherkette> http://nodejs.org/api/modules.html
01:59 < christopherkette> I try to but sometimes still get stuck
01:59 < samholmes> pyrotechnick: what do you do just write the dependency in the package instead of `npm install`
02:00 <@Nexxy> samholmes ‘
02:00 < pyrotechnick> i write mine in coffee
02:00 <@Nexxy> npm install <module> --save
02:00 < pyrotechnick> https://github.com/feisty/courier
02:00 < pyrotechnick> Nexxy to the rescueeeeeeee
02:00 < jrajav> Please don't let "coffee" gain ubiquity as a short name for "coffeescript"
02:00 < jrajav> You will ruin one of my favorite things :(
02:01 < jrajav> (Hint: The thing isn't coffeescript)
02:01 < pyrotechnick> sucks to be you jrajav
02:01 < samholmes> Nexxy: ?
02:01 < pyrotechnick> it's already .coffee
02:01 < christopherkette> thanks dude. all working now
02:01 < christopherkette> thanks to all
02:01 < jrajav> "dot coffee" is the new name of coffeescript? Like .NET?
02:01 < jrajav> Didn't see that one coming
02:01 < pyrotechnick> no the extension
02:01 <@Nexxy> samholmes, i was answrring your question
02:02 < christopherkette> thank you jWulf
02:02 < jwulf_> word
02:02 < pyrotechnick> jwulf_ for president!
02:02 < pyrotechnick> he's got binders full of node tips
02:02 <@Nexxy> lol
02:02 < samholmes> jrajav: I was thinking of writing a DSL called soda, now there's another beverage to ruin. ;)
02:02 < jrajav> You can ruin soda all you want
02:03 < christopherkette> r u guys from US? Im in San Diego and there isn't much node unfortunately
02:03 < pyrotechnick> his pension is bigger than ours
02:03 < jrajav> That crap is nasty like your momma
02:03 < pyrotechnick> AUSTRALIA MATE
02:03 < christopherkette> nice! 
02:03 < samholmes> Nexxy: what the ‘ character? Or was that a precursor?
02:03 <@Nexxy> that was an android keyboard fail
02:03 < samholmes> christopherkette: What part of SD?
02:04 < jwulf_> hahaha - i figured out how to do that yesterday.....
02:04 < pyrotechnick> does blink182 ever do bloc parties?
02:04 < jwulf_> so my node tips are about exhausted
02:04 < jwulf_> meteor is based on express?
02:04 < pyrotechnick> it's based on everything
02:04 < pyrotechnick> anything that fits
02:04 < pyrotechnick> IN IT GOES
02:04 < pyrotechnick> it's like mystery meat
02:04 < tjholowaychuk> pyrotechnick HAHAH
02:05 < tjholowaychuk> that's news to me if they use express, i dont think they do
02:05 < jrajav> [21:03:33] <pyrotechnick> anything that fits [21:03:35] <pyrotechnick> IN IT GOES <-- You're making these "your mom" jokes too easy man
02:05 < jwulf_> looks like it's using Backbone?
02:05 < pyrotechnick> no your mum is making these jokes too easy man
02:06 <@Nexxy> jrarav good thing we are all adults here
02:06 <@Nexxy> jtajav*
02:06 <@Nexxy> lol ffs
02:06 < pyrotechnick> nexxy is high
02:06 < jrajav> Yeah, which is exactly why I *didn't* make the joke
02:06 < jrajav> *cough*
02:06 < pyrotechnick> someone cut her off
02:06 <@Nexxy> I WAS GOING TO MAKE THIS JOKE RIGHT HERE... *POINT* BUT I DIDNT
02:07 <@Nexxy> same difference
02:07 <@Nexxy> pyrotechnick i wish
02:07 < pyrotechnick> me too
02:07 < pyrotechnick> ever since we were talking about it before
02:10 < samholmes> Is there a way to list only the root level of the packages in node_modules?
02:10 < samholmes> using npm?
02:11 < pyrotechnick> `npm help ls`
02:11 <@Nexxy> mscdex
02:12 < pyrotechnick> samholmes: i don't see it there so probs not
02:12 < samholmes> pyrotechnick: weirdly, I cannot seem to get npm help to open any browser pages.
02:12 < pyrotechnick> would be like a one-liner though
02:12 <@Nexxy> grep
02:12 < samholmes> but I found it nevermind, list.html is the page on the documentation site
02:12 < mscdex> Nexxy, \o/
02:12 <@Nexxy> \o/
02:12 < samholmes> pyrotechnick: right, I didn't either..
02:12 < samholmes> damn
02:13 < samholmes> is \o/ a vag or something?
02:13 < garbagecollectio> hey i am trying to do a simple http.get request
02:13 < garbagecollectio> ERROR: getaddrinfo ENOENT
02:13 <@Nexxy> uhm
02:13 < pyrotechnick> samholmes: you can programatically use npm
02:13 <@Nexxy> wow
02:13 < mscdex> ^
02:13 < samholmes> pyrotechnick: Damn, I don't have grep unfortunately. But, w/e
02:13 <@Nexxy> samholmes... awkwaaaard
02:14 < samholmes> Nexxy: why?
02:14 < pyrotechnick> samholmes: and this makes it pretty easy to get info https://github.com/indexzero/node-pkginfo
02:14 < garbagecollectio> 10.253.174.74:9011 is the ip and what not 
02:14 < garbagecollectio> why isnt it working
02:14 < samholmes> just said it looked like a vagina is all.
02:14 < superjoe> samholmes, it can technically be used as one
02:14 < mscdex> garbagecollectio: you're not using that whole string as the host are you?
02:14 <@Nexxy> do you have like 0 impulse control?
02:14 < pyrotechnick> samholmes: so if you really need just a list of root deps you can extract them quite easily
02:14 < garbagecollectio> mscdex, I am
02:15 <@Nexxy> discretion is key
02:15 < samholmes> pyrotechnick: using js?
02:15 < garbagecollectio> mscdex, why is that a problem?
02:15 < pyrotechnick> samholmes: either just parse the package.json and do it urself or use npm or use pkginfo
02:15 < mscdex> garbagecollectio: are you doing http.get('http://10.253.174.74:9011/') or http.get({host:'10.253.174.74:9011', ...}, function(){}) ?
02:15 < pyrotechnick> samholmes: so yeah with js
02:16 < garbagecollectio> its a request object
02:16 < garbagecollectio>  http.get(requestOptions, function(res) {
02:16 < samholmes> pyrotechnick: the whole point of me needing this is to get the modules in node_modules in my package.json file. So I'm left with the npm ls option
02:16 < garbagecollectio> the host in requestOptions object is just 10.253.174.74
02:16 < garbagecollectio> sorry, 10.253.174.74:9011
02:16 < garbagecollectio> no http or anything
02:16 < garbagecollectio> yeah so the latter
02:16 < mscdex> garbagecollectio: strip off the : and port in the host, and set the port separately in the requestOptions
02:17 < garbagecollectio> ok
02:17 < pyrotechnick> samholmes: that sounds like something that would exist already
02:17 < pyrotechnick> somewhere in cyberspace
02:17 < pyrotechnick> cli wizard could do it in one line
02:17 < pyrotechnick> damn wizards
02:18 < garbagecollectio> now it says STATUS: 404
02:18 < exit2> would node.js be good for creating something like etherpad?
02:19 < pyrotechnick> exit2: http://sharejs.org/
02:19 < samholmes> pyrotechnick: wish I was a wizard..
02:19 < pyrotechnick> samholmes: ypu
02:19 < pyrotechnick> fuck
02:19 < pyrotechnick> kill me
02:19 < pyrotechnick> i did a nexxy
02:19 < samholmes> why, cause you spelled yup wrong?
02:19 < pyrotechnick> then pressed enter trying to fix it so much coffee man
02:20 < samholmes> You should seriouly consider mtn dew
02:20 < pyrotechnick> nooooooooooo
02:20 < samholmes> oh why, cause of the ball shrinkage?
02:20 < exit2> pyrotechnick: wow, is this really etherpad in 4 lines?
02:20 < pyrotechnick> let me link you something
02:21 < pyrotechnick> http://www.21stcenturydental.com/smith/pH_drinks.htm
02:21  * samholmes has enough balls to withstand many mtn dews
02:21 < exit2> I'm writing a collab app and I think that real time text editing would be great
02:22 < pyrotechnick> even though i love mountain dew :(
02:22 < pyrotechnick> it may as well be battery acid
02:22 < garbagecollectio> is res.body whjat will give me the response?
02:22 < pyrotechnick> http://www.thesmokinggun.com/documents/mouse-in-mountain-dew-563891
02:22 < mscdex> garbagecollectio: sounds like your `path` does not exist on the server
02:22 < exit2> how does node deal with db api?
02:22 < garbagecollectio> mscdex: i fixed it actually, but how do i get the response
02:23 < garbagecollectio> the actual data
02:23 < pyrotechnick> exit2: node is much more lower level than what you speak of, it's up to noders to deal with dbs
02:23 < mscdex> garbagecollectio: listen for 'data' events inside the callback
02:23 < samholmes> pyrotechnick: These statistics seems skeptical.
02:23 < mscdex> garbagecollectio: on the response object
02:23 < pyrotechnick> samholmes: you're right they're old. they're more acidic now
02:23 <@Nexxy> samholmes please see your PMs
02:24 < exit2> pyrotechnick: I see, I have written most of my structure of my application in django and I'm finding myself needing more and more JS
02:24 < samholmes> pyrotechnick: if you're telling me not to drink mtn dew cause of the acidity and that coconut milk has a high acidity than mtn dew, then I feel like the whole argument is sketchy
02:24 < pyrotechnick> exit2: welcome to 2000's
02:24 < samholmes> err
02:24 < exit2> :P
02:25 < samholmes> reading it backwards
02:25 < samholmes> nvm
02:25 < pyrotechnick> that's okay samholmes
02:25 < samholmes> So, I guess the answer is...drink 7up?
02:25 < pyrotechnick> plus nexxy is probably drilling you in pms
02:25 < pyrotechnick> i can understand your distraction
02:25 <@Nexxy> lol no
02:25 < pyrotechnick> oh no?
02:26 < samholmes> Btw, Nexxy, it was the third time. ;)
02:27 < pyrotechnick> samholmes: i dunno anymore it seems like everything kills you one way or another
02:27 < mscdex> everything in moderation
02:27 < pyrotechnick> even cyanide?
02:27 < garbagecollectio> mscdex, can u look at some code for me
02:27 < samholmes> pyrotechnick: Well, not only that, but is acidity the reason for tooth decay? What if it's nutritional.
02:27 < garbagecollectio> just a couple lines
02:27 < mscdex> garbagecollectio: sure
02:27 < pyrotechnick> tooth decay can give you heart disease and stuff
02:28 < pyrotechnick> it's worse than people think
02:28 < garbagecollectio> mscdex: http://pastebin.com/fsrpUnkE
02:28 < garbagecollectio> i am just trying to get the fucking data and then i need to loop through it
02:28 < mscdex> garbagecollectio: that's listening on the request object, not the response
02:29 < mscdex> garbagecollectio: https://gist.github.com/7fbd8971344fc52f7284
02:30 < garbagecollectio> thank you
02:30 < garbagecollectio> this is so fucking crazy
02:30 < pyrotechnick> new node tagline ^
02:30 < mscdex> it becomes natural after you use it for awhile
02:31 < mscdex> streams are all over in node
02:31 < pyrotechnick> node has binders of streams
02:31 < garbagecollectio> mscdex on the res.end
02:31 < garbagecollectio> is that where i can process the data
02:32 < garbagecollectio> console.log(output);
02:32 < mscdex> garbagecollectio: yes, that means all the data from the response has been received
02:32 < garbagecollectio> so why is it saying output is undefined
02:32 < mscdex> garbagecollectio: you have to concatenate that as it comes in
02:32 < garbagecollectio> right so its concatenating
02:32 < garbagecollectio> and i have  res.on('end', function() {
02:32 < garbagecollectio>    console.log(output);
02:32 < garbagecollectio> })
02:33 < mscdex> garbagecollectio: https://gist.github.com/7fbd8971344fc52f7284
02:33 < garbagecollectio>  res.on('end', function() {
02:33 < garbagecollectio>    console.log(output);
02:33 < garbagecollectio> })
02:33 < garbagecollectio>             output += chunk;
02:33 < garbagecollectio> sorry
02:33 < garbagecollectio> its saying that is undefined
02:34 < garbagecollectio> iit worked
02:34 < garbagecollectio> why do i have to define it there
02:35 < garbagecollectio> why can't i define it in the function, since its being defined as a global
02:35 < exit2> can you use node.js with django? :|
02:35 < mscdex> garbagecollectio: it's not defined as a global unless you're doing so somewhere outside the code block you showed, but also keeping the variables closest to the scope where you use it is better
02:36 < pyrotechnick> exit2: yes of course you can use node for services to compliment your django app
02:36 < exit2> pyrotechnick: I'm in love, this way I can use all the batteries included with Django for all the other BS and use node.js to make my shit radical.
02:37 < mscdex> exit2: or use node for all of it! ;-)
02:37 < exit2> mscdex: yes maybe in the future :)
02:38 < sitapati> use meteor
02:38 < sitapati> it's full of awesome win
02:39 < exit2> sitapati: I'll check it out
02:39  * mscdex shakes a fist at fibers
02:40 < sitapati> Y U NO LIKE fibers?
02:40 < ChrisPartridge> meteor still giving full db access to the client?
02:41 < sitapati> ChrisPartridge: in a dev environment yes
02:41 < sitapati> to switch to production, remove the insecure package
02:42 <@Nexxy> lol
02:43 < mscdex> sitapati: IMHO i just don't see why they should be used
02:44 < mscdex> just do things The Node Way ;-)
02:44 < ChrisPartridge> tm?
02:44 < mscdex> maybe
02:48 < sitapati> fibers? To get rid of the pyramid of doom
02:49 < seebees1> Has anyone used SetHiddenValue to set a hidden value on a V8 Object?
02:49 < exit2> anyone here been able to get sharejs to work?
02:49 < EhevuTov> I just watched the Dartlang vid: http://www.youtube.com/watch?feature=player_embedded&v=5KlnlCq2M5Q
02:50 < EhevuTov> anyone else think "oh that's cool" and get a little depressed at the same time?
02:50 < exit2> watching now
02:50 < ChrisPartridge> sitapati: or you could just not create pyramids of doom? :)
02:52 < exit2> EhevuTov: yeah I had that same feeling haha
02:53 < EhevuTov> exit2, I mean check this API out. It reminds of me the Node API: http://api.dartlang.org/docs/continuous/dart_io.html
02:54 < exit2> EhevuTov: if the shoe fits..
02:56 < EhevuTov> I feel like I'm back in the 90's and we're going to start having browser wars again. But this time, not around implementation differences but rather actual languages maybe?
02:56 < exit2> EhevuTov: I think it's funny how the guy in the video is commenting and defending it
02:57 < EhevuTov> I feel like it was directed right at the Node community 
02:57 < exit2> well it's not open
02:58 < exit2> such an disingenuous video when I can tell the guy is reading a cue card
02:58 < exit2> and not looking at me in the eyes o_0
02:58 < EhevuTov> "We even have isoletes" "We can create our own web server" "we took the original team from V8..."
02:58 < EhevuTov> exit2, LOL
02:58 < garbagecollectio> mscdex - my node app seems to breaker on a redirect
02:59 < EhevuTov> exit2, ah, you mean that engine isn't open?
02:59 < EhevuTov> the Dart Virtual Machine, that is
02:59 < exit2> I don't think it's open source, is it?
02:59 < EhevuTov> I'm not seeing that it is
03:00 < exit2> EhevuTov: website looks like a twitter-bootstrap rip off
03:00 < EhevuTov> I feel like we've been honey potted :-) I wonder if that means that someone is working on a Node-like fork, similar to what Crockford suggested, and Google is just using V8 as a strategic honeypot
03:01 < EhevuTov> yeah, it does
03:01 < exit2> EhevuTov: wait, they are using twitter bootstrap look at the source bahahaha
03:01 < EhevuTov> Hopefully it will just make ECMA 6 (or whatever it's called) better
03:02 < EhevuTov> ha, interesting
03:03 < aho> <exit2> well it's not open <- how so?
03:03 < aho> all of the code is available
03:03 < aho> the bug tracker is also public
03:03 < exit2> aho: yeah I asked the question later, because I wasn't sure
03:04 < aho> personally, i really like dart
03:04 < EhevuTov> aho, I think most do. That's why it's depressing me :-)
03:05 < exit2> aho: I'll give it a shot either way :D
03:05 < aho> the only thing that's missing is perhaps something like async/await
03:07 < garbagecollectio> why is res.redirect not working but when i use res.sendfile it works?
03:09 < EhevuTov> I even had a client ask today if we should look into Dart over Node
03:09 < garbagecollectio> why wouldnt i be able to deeplink to any of my pages
03:10 < garbagecollectio> it says "connectoin itnerrupted" in the browser everytiem
03:17 < garbagecollectio> The connection was interrupted
03:19 < plkumar> how to create mobile website using node.js?
03:23 < jrajav> plkumar: Mostly the same way you make a normal website?
03:24 < jrajav> Node.js serves content from the server side. The challenge with mobile is usually making sure that that content will act as expected in mobile browsers.
03:24 < jrajav> In other words, you're looking in the wrong place
03:26 < tuhoojabotti> wap sites!
03:26 < Orson> -twitch-
03:38 < perezd> any recs for a lib to interface with S3 via nodejs?
03:38 < rauchg> perezd learnboost/knox
03:39 < perezd> yay you win
03:46 < xuzh> I want to build some node.js on Linux platform.  The step to execute ./configure is successful, but when executing "make"
03:46 < xuzh> It displays error as 
03:46 < xuzh> make -C out BUILDTYPE=Release V=1
03:46 < xuzh> make[1]: Entering directory `/opt/home/xuzh/node-v0.8.12/out'
03:46 < xuzh> make[1]: printf: Command not found
03:48 < xuzh> I have tried to write a c application which calling printf. It is OK.  Does anyone meet same issue? And how to fix it?
03:48 < monokrome> creationix: Hey. Are you around by any chance? :)
03:48 < Sly> xuzh, if you're trying to build onto Node.js, you should take a look at http://nodejs.org/api/addons.html
03:49  * monokrome is wondering if step.js would work in browser
03:49 < xuzh> Sly: thank you. I will read the document firstly. 
03:49 < Sly> No problem.
03:59 < crazynodefarmer> anyone have a good strategy for pre-compiling a module before distributing?
04:03 < TehShrike|Work> substack: wow.  What inspired undirender?
04:03 < TehShrike|Work> "I feel like making something that combines ASCII graphics and math!"
04:04 < jrajav> http://www.a1k0n.net/2011/07/20/donut-math.html
04:04 < TehShrike|Work> Oh yeah, I've seen that
04:04 < TehShrike|Work> That's pretty cool
04:06 < TehShrike|Work> Similarly badass: http://code.openark.org/blog/mysql/generic-auto-scaling-scaled-sql-graphs and then http://code.openark.org/blog/mysql/auto-scaling-scaled-sql-graphs-concluded
04:06 < TehShrike|Work> But seriously substack, it makes me happy that undirender exists
04:06 < ChrisPartridge> the only thing he forgot was one of his cool images
04:06 < TehShrike|Work> Though I really can't imagine what inspired it :-D
04:09 < astropirate> crazynodefarmer, you can distribute binaries with NPM. but ofourse it is system dependent
04:11 < garbagecollectio> how to i detect a {} in javascript
04:11 < garbagecollectio> in my services model they are sending back a {}
04:11 < garbagecollectio> if nothing is fine
04:11 < garbagecollectio> empty object
04:11 < TehShrike|Work> garbagecollectio: what do you want to detect about it?
04:11 < garbagecollectio> like if it has data vs not
04:12 < garbagecollectio> otherwise it would be {json stuff}
04:12 < ChrisPartridge> obj.keys().length === 0?
04:12 < mscdex> garbagecollectio: Object.keys(obj).length === 0?
04:12 < mscdex> :-)
04:12 < ChrisPartridge> mscdex: great minds think a like
04:12 < garbagecollectio> .keys?
04:12 < garbagecollectio> can't i just do ob.length?
04:12 < mscdex> no
04:12 < TehShrike|Work> garbagecollectio: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object
04:13 < garbagecollectio> not object object
04:13 < garbagecollectio> but if it comes back in json form
04:13 < TehShrike|Work> >_<
04:13 < garbagecollectio> oh i see
04:13 < garbagecollectio> there is no name for the object yet
04:13 < garbagecollectio> so i can't detect?
04:13 < mscdex> ?
04:13 < TehShrike|Work> Once it's turned from the JSON string into a JavaScript object, it will be an Object.
04:13 < TehShrike|Work> {} is an empty Object.
04:13 < garbagecollectio> right
04:14 < TehShrike|Work> So, check out that link
04:14 < garbagecollectio> so it comes back to me as an object not a string correct?
04:14 < TehShrike|Work> To see what you can call on that object
04:14 < TehShrike|Work> garbagecollectio: you're calling JSON.parse on this string, right?
04:15 < garbagecollectio> i am just doing a http.get and what comes back i put into a variable
04:16 < garbagecollectio> what should i be doing
04:16 < blazes816> it comes back as a string, which http.get is using JSON.parse on to turn into an object
04:16 < garbagecollectio> so it automatically using JSON.parse?
04:16 < blazes816> well, if it's an object, then yes
04:16 < garbagecollectio> so it comes back as {}
04:16 < blazes816> just see if you have a string or an object
04:16 < garbagecollectio> or {bunch of data}
04:17 < blazes816> yes
04:17 < blazes816> from http.get
04:17 < garbagecollectio> right
04:17 < garbagecollectio> so its an object right?
04:17 < blazes816> just check
04:17 < blazes816> print it out
04:17 < TehShrike|Work> console.log(butts)
04:17 < garbagecollectio> ok well assume i turn it into a string
04:18 < garbagecollectio> how do I detect if its {}
04:18 < garbagecollectio> and then how do i turn it back into an boject if it has stuff
04:18 < TehShrike|Work> Why would you turn it into a string to see if it was an empty object?
04:18 < TehShrike|Work> Don't do that
04:18 < TehShrike|Work> Leave it an object, and then do what ChrisPartridge and mscdex said
04:20 < garbagecollectio> is it an object when it comes back?
04:20 < garbagecollectio> and it is streaming coming back no?
04:20 < TehShrike|Work> That's what blazes816 said
04:20 < garbagecollectio> so how do you stream object
04:20 < ChrisPartridge> garbagecollectio: is your result an object or a string?
04:20 < garbagecollectio> i do not know and i can not test
04:21 < ChrisPartridge> pretty sure http.get does no auto parsing, so it's probably a string
04:21 < garbagecollectio> so i would do Object.keys(output).length === 0?
04:21 < ChrisPartridge> so just JSON parse it, if(Object.keys(result).length === 0) { // its empty } else { // its got shit }
04:21 < garbagecollectio> nice
04:22 < perezd> rauchg: hey wahts the point of put stream if S3 requires content length ?
04:22 < perezd> seems kinda pointless..
04:22 < rauchg> perezd ask amason
04:22 < rauchg> amazon*
04:22 < perezd> but its your API 
04:22 < rauchg> http://stackoverflow.com/questions/8653146/can-i-stream-a-file-upload-to-s3-without-a-content-length-header
04:23 < perezd> thats not what you are using
04:23 < garbagecollectio> how do i loop through the object in javascript
04:23 < rauchg> you still need content-length on thhe chunks
04:23 < rauchg> the*
04:23 < garbagecollectio> multiple objects
04:24 < ChrisPartridge> garbagecollectio: multiple objects? nested/recursive? or multiple objects in an array?
04:25 < garbagecollectio> multiple objects in an array
04:26 < SomeoneWeird> for(var i = 0; i < urarray.length; i++) { var obj = urarray[i]; console.log(obj); }
04:26 < SomeoneWeird> ?
04:26 < garbagecollectio> right and then how do i get the parameters inside those objects
04:26 < garbagecollectio> that are listed in typical json form
04:26 < garbagecollectio> "severity" : "100"
04:26 < garbagecollectio> etc
04:27 < ChrisPartridge> for(var key in obj) { if(obj.hasOwnProperty(key) { // do something iwth obj[key] } }
04:27 < SomeoneWeird> ^^
04:27 < ChrisPartridge> google is friend garbagecollectio
04:27 < TehShrike|Work> garbagecollectio: when that JSON string gets parsed, it turns into an object with a property named severity whose value is 100
04:27 < garbagecollectio> parsed by whom?
04:27 < TehShrike|Work> You
04:27 < TehShrike|Work> Using JSON.parse
04:28 < TehShrike|Work> https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/parse
04:28 < ChrisPartridge> the magical unicorn parser
04:28 < TehShrike|Work> Unicorns may be involved.
04:28 < garbagecollectio> is this something that i have to do or is it automatic with http.get?
04:28 < TehShrike|Work> I would be surprised if it was automatic, though blazes816 seemed to think it was.
04:28 < TehShrike|Work> However, as multiple people have suggested to you, try just echoing it out - see what you get
04:28 < TehShrike|Work> You know you can get it to tell you what it's doing
04:29 < ChrisPartridge> the docs make no mention of http.get doing anything magical
04:29 < TehShrike|Work> Quite true
04:29 < blazes816> I never meant to suggest it was, I thought he was saying it was at first.  I don't understand why you don't just actually debug it instead of asking questions here.
04:29 < blazes816> I didn't mean to throw you guys off
04:29 < garbagecollectio> cause i dont have the option to
04:29 < crazynodefarmer> astropirate, that's my strategy so far. i use process.platform and process.arch to get system info, then route to one of a few pre-compiled modules
04:29 < TehShrike|Work> garbagecollectio: yeah, it's almost certainly coming back as a string.  Confirm that, by printing it out with console.log(), and then parse it with JSON.parse
04:29 < garbagecollectio> no i cant cause i dont receive the data
04:29 < garbagecollectio> right
04:29 < garbagecollectio> ok
04:29 < blazes816> then why do you care?  if you can't debug, you can't program
04:30 < TehShrike|Work> ^
04:30 < garbagecollectio> no i can write the code son
04:30 < TehShrike|Work> I can right the code sun
04:30  * ChrisPartridge is confused
04:30 < blazes816> well, gramps, you don't have to by the cycle anymore
04:30 < blazes816> pay* by*
04:30 < TehShrike|Work> I'd interject another non sequitur here, but it's windy outside
04:31 < arcanin> hi
04:31 < TehShrike|Work> :-|
04:31 < ChrisPartridge> he's a strange one
04:31  * TehShrike|Work shrugs
04:31  * TehShrike|Work pokes ChrisPartridge and runs away
04:35 < ChrisPartridge> TehShrike|Work: watch were you poke, it might get windy inside
04:35 < SomeoneWeird> wat
04:36  * TehShrike|Work breezes by ChrisPartridge
04:44 < chovy> anyone using mongodb?
04:44 < crazynodefarmer> chovy, yes among a few other things
04:46 < chovy> for some reason
04:46 < chovy> i can't save this url to my database on prod, but I can in dev
04:46 < chovy> Alex Cross is an upcoming American crime thriller
04:46 < chovy> soryr, that' snot a url
04:46 < chovy> http://en.wikipedia.org/wiki/Alex_Cross_%28film%29
04:47 < crazynodefarmer> nice try Alex Cross virual marketing promoter 
04:48 < chovy> i'm not getting any errors in mongo
04:48 < chovy> crazynodefarmer: heh
04:48 < crazynodefarmer> any more details about your setup?
04:49 < chovy> MongoDB shell version: 2.2.0 in dev
04:49 < TehShrike|Work> You think Alex Cross is cool, you should try [your name here, only 5.99 a minute]!
04:49 < chovy> MongoDB shell version: 2.2.0 in prod
04:50 < chovy> i'm using express-validator, but it passed the isUrl() check in dev and prod.
04:50 < chovy> it just doesn't show up after I save the form. not sure what is going on.
04:51 < chovy> nope, not in db for the link field.
04:51 < chovy> i'm using express.
04:51 < chovy> not doing anything special like sanitizing input
04:53 < crazynodefarmer> chovy - my typical strategies would be to hard-code the data and test if it commits
04:54 < crazynodefarmer> or just dump the data to console at the mongo call
04:54 < chovy> it isn't saving any urls
04:54 < crazynodefarmer> what's different between your dev/prod setups? has to be that right?
04:59 < chovy> i am not sure
04:59 < chovy> both are debian 64
04:59 < chovy> npm modules might be different versions
04:59 < TehShrike|Work> One of the databases is made of BEES
04:59 < crazynodefarmer> try 'npm list' on each box
04:59 < perezd> anyone have any idea why i'd get different sha sums from UNIX vs nodejs?
04:59 < crazynodefarmer> beads?
05:00 < TehShrike|Work> No, not beads, that would be silly
05:00 < crazynodefarmer> you're just chicken
05:00 < TehShrike|Work> pfft
05:01 < TehShrike|Work> You know I'm mostly turkey
05:01 < TehShrike|Work> QUIT BEING RIDICULOUS CRAZYNODEFARMER
05:02 < arcanin> silly question but ... what's the best way to efficiently return a binary file (picture) in a request ?
05:02 < crazynodefarmer> perezd are you reading a file in, then calculating its hash?
05:02 < arcanin> readFile followed by response.write seems to corrupt the picture
05:03 < chovy> ok, i found the problem
05:03 < perezd> crazynodefarmer: yes
05:03 < crazynodefarmer> perezd might be text-encoding... 
05:03  * arcanin found too
05:03 < crazynodefarmer> chovy what was the issue?
05:04 < chovy> somewhere between keybaoard and chair
05:05 < crazynodefarmer> single point of failure
05:05 < chovy> i was adding in dev, and editing in prod. if i edit in dev bug exists.
05:06 < chovy> npm list helped, i had a bunch of errors
05:06 < chovy> i guess i should not keep node_modules in git
05:06 < crazynodefarmer> i use a Makefile and clean/build regularly
05:06 < TehShrike|Work> crazynodefarmer: really?  You don't just use package.json and npm install?
05:07 < crazynodefarmer> makefile calls those for me
05:07 < TehShrike|Work> Ah, fair enough
05:07 < crazynodefarmer> among a few database setups for dev
05:07 < TehShrike|Work> Excellent
05:07 < chovy> i just have a git post-receive hook which does npm install
05:07 < ChrisPartridge> arcanin: are you setting the headers?
05:08 < TehShrike|Work> I'm looking at getting proper build steps for the app I'm working on
05:08 < TehShrike|Work> But I was figuring I'd just have the package.json specify some other scripts to run on install
05:08 < crazynodefarmer> i'm trying to make my server act like heroku
05:08 < TehShrike|Work> Ah, interesting
05:08 < arcanin> ChrisPartridge, I had forgot to set the binary encoding while writing my data
05:08 < crazynodefarmer> git push -> publish!
05:09 < ChrisPartridge> arcanin: ah cool, are you using express by chance?
05:09 < TehShrike|Work> My company got a local npm service running, so I want to get to where I can just run npm install my-app on a customer's server and get it deployed in one command...
05:09 < arcanin> yes
05:10 < crazynodefarmer> I thought about an npm server, but we just specify the git repo directly when necessary
05:10 < ChrisPartridge> arcanin: instead of readFile, and res.send you could just use res.sendfile/download/attachment
05:10 < TehShrike|Work> Yeah, we're using our repository (SVN) for rollouts right now
05:10 < TehShrike|Work> But I want to move to a package-based system real bad
05:11 < chovy> crazynodefarmer: that's what i do
05:11 < TehShrike|Work> Obviously, the packages would still be in a repository, but I don't want the rollouts to have to worry about the directory structure in the repository
05:11 < crazynodefarmer> i like specifying repos, cuz you can leverage SSH keys for private code
05:11 < TehShrike|Work> Using the repos for rollouts has its advantages, no doubt
05:11 < TehShrike|Work> But when you want to share libraries across projects, it gets tricky
05:12 < TehShrike|Work> In SVN, it means lots of svn:external settings, and it just gets jankety
05:12 < crazynodefarmer> yup, i have a makefile calling 'npm link' and it breaks a lot
05:12 < TehShrike|Work> I don't know what you'd do in git to accomplish that
05:12 < crazynodefarmer> git submodules!
05:14 < Raynos> css meet npm https://github.com/Raynos/npm-css#cli
05:14 < crazynodefarmer> but having used Maven/SBT I think npm is awesome
05:14 < TehShrike|Work> I really haven't used any code package managers before npm, but I've found it to be highly practical and good
05:15 < crazynodefarmer> only weakness is cross-linking a lot of private modules, you need a Makefile to coordiante it
05:15 < TehShrike|Work> I'm hoping to use package.json for everything
05:16 < TehShrike|Work> And then I'm going to write all my rollout scripts in LispyScript, wheeeee!
05:17 < crazynodefarmer> is that anything like LOLCat Script?
05:17 < TehShrike|Work> No
05:17 < TehShrike|Work> Though writing rollout scripts in that would be... something
05:17 < TehShrike|Work> http://lispyscript.com/
05:18 < crazynodefarmer> oh god
05:18 < TehShrike|Work> :-D
05:19 < crazynodefarmer> http://xkcd.com/224/
05:19 < TehShrike|Work> http://xkcd.com/297/
05:21 < crazynodefarmer> do you use upstart/init.d to start a production box?
05:21 < TehShrike|Work> But it's not as insane as lisp.  It just uses parentheses to make everything extremely unambiguous.
05:22 < crazynodefarmer> i think i'd try coffeescript first
05:22 < TehShrike|Work> Really?  See, CoffeeScript is interesting, but I wouldn't use it over JS.  I'd use LispyScript first, just because it looks like an interesting twist.  CoffeeScript looks like mostly aesthetic improvements, to me.
05:23 < TehShrike|Work> I don't admin any of our production boxes, but I know we don't use anything that cool.  I did see something that looked totally badass along those lines, but I can't remember what it was called...
05:24 < perezd> Im trying to post data to an HTTP server using curl, and I just want access to the http request data events
05:24 < perezd> so I capture chunks from it
05:24 < perezd> and Buffer.concat them together
05:25 < perezd> and somehow the output is not identical
05:25 < perezd> what gives?
05:26 < crazynodefarmer> TehShrike|Work coffee feels like "js minus things we didn't like, with some new stuff we do like"
05:26 < TehShrike|Work> crazynodefarmer: yeah, exactly
05:26 < TehShrike|Work> And there's nothing wrong with that at all
05:26 < TehShrike|Work> I'm just not terribly motivated to use it myself
05:26 < crazynodefarmer> well, then you have to worry about compilation etc
05:26 < crazynodefarmer> and team members complaining
05:26 < TehShrike|Work> Sure
05:27 < TehShrike|Work> I'm pretty much solo on my current project, as long as I get the build processes working perfectly, my new trainees won't think it's weird at all :-D
05:27 < TehShrike|Work> "So I'm using this cool variant of JavaScript, see..."
05:28 < crazynodefarmer> i had to dig into the c++ world today
05:28 < TehShrike|Work> lol
05:28 < crazynodefarmer> that was interesting
05:28 < crazynodefarmer> also had to learn c++
05:28 < TehShrike|Work> I did C++ for a while before these recent projects
05:29 < TehShrike|Work> But for the last year it's been mostly PHP/JavaScript
05:29 < TehShrike|Work> But a week or two ago I dove back into some of our C++ code
05:29 < TehShrike|Work> It was so weird
05:29 < TehShrike|Work> For one thing, it was older code where model and view were slap-bang against each other
05:29 < crazynodefarmer> i just wanted to conquer the c++/node binding layer, in case we need to link any libaries
05:29 < TehShrike|Work> So it was all "run query" and then right after that "shove data into controls"
05:29 < crazynodefarmer> i just went in, grabbed some data, got out fast as i could
05:30 < chovy> are there any tricks for re-using a form for both edit and new pages?
05:30 < TehShrike|Work> And I was like "I'M USED TO 80ms AND ASYNCHRONICITY BETWEEN THESE THINGS"
05:30 < chovy> the new one doesn't have any values pre-populated
05:30 < chovy> but besides that they are pretty much the same except for button label and title.
05:31 < TehShrike|Work> What tricks would their be?
05:31 < TehShrike|Work> Your controller grabs the data out of the view and packages it up appropriately
05:31 < chovy> i don't have an item on new
05:31 < TehShrike|Work> Your model either inserts it, if it's new, or updates it, if it's an edit
05:31 < crazynodefarmer> if you've separated your views out, i think it should be fairly straightforward
05:31 < chovy> <input value=<% item ? item.foo : '' %>" />
05:31 < chovy> just do that everywhere?
05:32 < crazynodefarmer> you can use placeholder="Email"
05:32 < TehShrike|Work> I think now you're asking a templating question?
05:32 < crazynodefarmer> to make the input look better
05:32 < chovy> i have a new.ejs and an edit.ejs, and the form is the same, except on edit, the form is pre-filled.
05:33 < crazynodefarmer> or pass in an object with all blanks
05:33 < chovy> i don't want to create an object just when they visit the page.
05:33 < TehShrike|Work> But there is one
05:34 < TehShrike|Work> As soon as they visit the page
05:34 < TehShrike|Work> The view is showing it to them
05:34 < TehShrike|Work> It just happens to be empty
05:34 < TehShrike|Work> The best way to reflect that in your code, I can't say
05:35 < crazynodefarmer> or create an empty object and re-use it for every request
05:35 < TehShrike|Work> Look, I don't want to brag
05:35 < TehShrike|Work> But I once wrote a quine in a MySQL query
05:35 < TehShrike|Work> I THINK I KNOW WHAT I'M TALKING ABOUT!
05:36 < clever> TehShrike|Work: lol
05:37 < TehShrike|Work> Well, I'm glad someone laughed
05:37 < clever> i dont know where id even begin when trying that
05:37 < TehShrike|Work> http://joshduff.com/36/my-accomplishment-for-the-day-a-mysql-quine
05:37 < perezd> is tj here?
05:38 < clever> TehShrike|Work: damn, lol :)
05:38 < clever> thats a lot of \'s!
05:38 < TehShrike|Work> Yeah it is
05:39 < crazynodefarmer> there must be a mysql injection joke here
05:39 < TehShrike|Work> It's a pretty traditional approach toward quines
05:39 < TehShrike|Work> But it was fun to do in a query
05:39 < perezd> basically, I want to use express js to capture binary uploads without writing to disk
05:39 < perezd> this is possible right?
05:39 < TehShrike|Work> Sadly, I know almost nothing about handling binary data in JavaScript
05:39 < perezd> formidable is not an option
05:39 < perezd> it writes to disk
05:40 < perezd> this seems retardedly simple
05:41 < crazynodefarmer> how about memcache?
05:42 < TehShrike|Work> Is it necessary?
05:42 < TehShrike|Work> I'd be very interested in knowing more about handling binary data in memory in JavaScript, too
05:43 < clever> TehShrike|Work: ive writen a crude encryption thing that worked with raw binary data
05:43 < timeturner> perezd: pipe it to memory store object
05:43 < perezd> timeturner: example?
05:43 < perezd> I'm trying to do that
05:43 < clever> TehShrike|Work: node would make a 256 byte string of pure random data, sha1 it and then pass it off to a firefox ext
05:43 < perezd> but the chunks don't add up
05:43 < clever> TehShrike|Work: the 8th bit caused havok :P
05:44 < clever> TehShrike|Work: when using a Buffer object, i dont think anything can go wrong
05:45 < clever> but firefox doesnt have such a thing, so the data gets corrupt at the remote end
05:45 < TehShrike|Work> I'm not even worried about the problem on the client side (yet)
05:45 < TehShrike|Work> I don't even know how to handle binary data in node
05:45 < ChrisPartridge> perezd: gist your code?
05:45 < gildean> TehShrike|Work: usually in streams or in buffers
05:46 < clever> in my case, using escape/unescape didnt help me at all
05:46 < TehShrike|Work> mmm, I haven't read up on node's buffers yet
05:46 < TehShrike|Work> I suppose I should do that
05:46 < clever> it was still coming out different at the far end, and messing with the sha1
05:46 < perezd> ChrisPartridge: https://gist.github.com/f939cdb2d0a35a2b7dad
05:47 < crazynodefarmer> TehShrike|Work instead of wasting all this time on quines
05:47 < TehShrike|Work> crazynodefarmer: inorite?
05:48 < chovy> how would i pass an empty object to my form?
05:48 < chovy> res.render('/form', { item: { } }) ?
05:48 < ChrisPartridge> perezd: try something like this https://github.com/Raynos/buffered 
05:49 < chovy> i still would need to do item.property all over the place
05:49 < crazynodefarmer> perezd you're updating the hash with the chunks, but appending the length before sending
05:49 < perezd> what?
05:49 < crazynodefarmer> the hash doesn't match on the client side, right?
05:49 < perezd> the binary is also not correct
05:50 < crazynodefarmer> oh maybe i'm misreading Buffer.concat - i dunno what it does i think
05:50 < perezd> ChrisPartridge: how does it solve this?
05:50 < fivesigma> does anyone know what the default encoding is for net.socket?  or does it depend on the data coming in from the client?
05:51 < nathan7> fivesigma: The docs are pretty clear on this
05:51 < fivesigma> looking right at em, although I'm tired so I might have missed it..
05:51 < nathan7> fivesigma: by default you get Buffers
05:51 < nathan7> fivesigma: which contain bytes, not characters
05:51 < fivesigma> thanks!
05:51 < nathan7> fivesigma: if you .setEncoding, you'll get strings
05:52 < clever> crazynodefarmer: it returns a new buffer
05:52 < perezd> also, it made zero difference.
05:55 < ChrisPartridge> perezd: I was suggesting looking at the code, but your issue appears to be something else
05:55 < gildean> what do you think is the most popular testing framework?
05:55 < gildean> or which ones do you use yourself?
05:55 < ChrisPartridge> perezd: how is the binary data being sent? what headers?
05:56 < perezd> ChrisPartridge http://gist.github.com/e24048753a00078c5e83
05:56 < ChrisPartridge> gildean: using mocha here, does the job
05:56 < gildean> i'm thinking i need to start writing automated tests for things, and trying to choose a framework to use
05:56 < RLa> gildean, for unit or bdd?
05:56 < wookiehangover> mocha +1
05:56 < perezd> sorry it starts at line 22 ChrisPartridge 
05:56 < RLa> there's also qunit for client-side tests
05:56 < RLa> good for client-side libs
05:57 < chovy> should i return next() in my erro logic, or just if ( err ) next();
05:57 < chovy> in my express routes
05:57 < perezd> fuck
05:57 < perezd> it was curl
05:57 < perezd> wrong arg
05:57 < ChrisPartridge> hah
05:57 < gildean> RLa: i think first just some unit tests on the methods i write
05:57 < RLa> then nodeunit would work
05:58 < RLa> but not for complex tests with many steps
05:58 < gildean> any good reading on the subject of testing?
05:58 < ChrisPartridge> perezd: perhaps use the node http module (or one of the higher level abstractions), instead of doing it all with curl 
05:58 < TehShrike|Work> gildean: yeah, I found a good book
05:58 < gildean> i've never been much of a tester beyond straight up user-testing
05:58 < perezd> yeah
05:58 < perezd> thx
05:59 < TehShrike|Work> gildean: http://www.amazon.com/gp/product/0321146530/
05:59 < TehShrike|Work> gildean: same
05:59 < RLa> i think you can't become good tester by reading books only
05:59 < TehShrike|Work> gildean: the examples are all Java, but the principles are general
05:59 < TehShrike|Work> RLa: sure, you can't become a good programmer by reading books only, either
05:59 < TehShrike|Work> But they can help a good bit
05:59 < RLa> TehShrike|Work, i have heard that's a good book
05:59 < crazynodefarmer> also, if you want to be good at testing, you have to practice it
06:00 < chovy> can someone advice me here: https://gist.github.com/aafc88661ecaef6e505b
06:00 < RLa> but is it about how to test not what to test?
06:00 < chovy> this is middleware
06:00 < TehShrike|Work> RLa: if you want to do test-driven development, "what to test" is what you want to make, and the book lays out that process pretty well
06:00 < ChrisPartridge> chovy: return next() if you dont want to continue through
06:01 < ChrisPartridge> chovy: pass it an error, if you want it to go to your error handler
06:01 < RLa> hm, will read it
06:01 < crazynodefarmer> RLa practice practice practice 
06:01 < crazynodefarmer> you fuck up your tests the first few times
06:01 < crazynodefarmer> but you get better
06:01 < chovy> ok
06:04 < chovy> ok
06:14 < timeturner> what type of development is it when you take a piece of paper, draw what you want and write a whole bunch of x should do this statements detailing everything the client can and cannot do at any point in time and then implement that in code on the server and then the client
06:15 < timeturner> and then write tests later on
06:15 < ChrisPartridge> timeturner: functional spec?
06:15 < timeturner> is that an accepted way to develop?
06:16 < timeturner> just curious
06:16 < ChrisPartridge> not sure if its accepted, generally what I do though
06:17 < timeturner> it makes it easier for me to just write it all out
06:17 < timeturner> and then I know what to do since it's all in my head
06:17 < timeturner> but yeah it seems to work
06:18 < ChrisPartridge> we do a lot of gov work here, they generally request or provide a functional spec (depending on whos driving the project)
06:18 < timeturner> ah
06:19 < timeturner> and so you implement the spec and then build on that for anything extra?
06:20 < timeturner> I'm pretty much unsure of when I should be writing tests though
06:20 < ChrisPartridge> timeturner: write tests before you write a unit of code
06:20 < timeturner> before or after I'm about to code...
06:20 < timeturner> ok
06:21 < timeturner> does writing the test before help you figure out the best way to code it as well?
06:21 < ChrisPartridge> but it's not uncommon to get on a coding streak, and then come back and write the tests later
06:21 < timeturner> true
06:27 < techwraith> substack: You there?
06:29 < techwraith> Does anyone know why a `var thing = require('./thing');` style require would not work with Browserify?
06:29 < RLa> why not
06:30 < techwraith> I keep getting "Error: Cannot find module './thing'"
06:30 < opus_> hello, I'm trying to figure out why layout.jade doesn't work with 3.0.0, did they change this?
06:30 < samholmes> Is there a module that wraps a node.js fs module API around S3?
06:31 < techwraith> samholmes: There's Knox
06:31 < techwraith> samholmes: https://npmjs.org/package/knox
06:32 < techwraith> samholmes: Not quite fs, but might be close to what you'd like to use it for.
06:32 < samholmes> techwraith: this doesn't dep on AwesSum does it?
06:32 < samholmes> dur
06:32 < samholmes> I already have that question answered
06:33 < techwraith> :)
06:33 < opus_> are there steps I can do to debug why layout.jade isn't included on my render?
06:34 < opus_> In fact, I'm not even getting the <html> tag.
06:34 < techwraith> opus_: I haven't used express 3 yet, but I do know that it was switched to use Jade's new block and inheritance stuff. 
06:34 < SomeoneWeird> i thought layouts were depreciated
06:36 < opus_> oh looks like I can install express-partials to get that functionality back
06:36 < opus_> also: see books which came out in 2012 that are now obselete due to this 'feature' :)
06:39 < techwraith> No browserify users? Oh well, guess I'm off to file an issue on GH :)
06:39 < chovy> i have this in my view, but it still is complaing that user is not defined
06:39 < chovy> <% if ( user && user.username ) { %>
06:40 < SomeoneWeird> chovy, what i do if pass an object with the rest of my objects in it, that way i can go <% if(params.<whatever>) { %> etc.
06:40 < SomeoneWeird> because i know params will always be defined
06:40 < SomeoneWeird> s/if/is/
06:43 < chovy> i'm passing res.locals.user = null
06:43 < chovy> if i don't have a user
06:47 < chovy> how would i just check if res.locals.user existed ot not
06:47 < chovy> or not
06:47 < chovy> if ( user ) doesn't work
06:53 < techwraith> Any ideas here? https://github.com/substack/node-browserify/issues/227
06:54 < techwraith> substack: ^
06:55 < fivesigma> chovy: couldn't you use if(res.locals.hasOwnProperty("user")) {/*do stuff*/}
07:03 < dileep> someone is here,
07:03 < dileep> hello
07:05 < dileep> node.js developer is here
07:09 < sitapati> opus_: express three requires ejs
07:09 < techwraith> sitapati: That's not true :)
07:09 < sitapati> really? i'm behind the times then
07:10 < techwraith> sitapati: Express uses https://github.com/visionmedia/consolidate.js
07:10 < techwraith> which means it supports all of these things :)
07:21 < chovy> fivesigma: i'm inside the view
07:21 < chovy> i fixed it by setting res.locals.user = false rather than not defining it
07:21 < chovy> then <% if ( user ) { %> works
07:29 < [AD]Turbo> hi there
07:34 < dileep> i am looking for node.js developer
07:35 < chapel> dileep: to do what?
07:35 < dileep> i have error in my code and got error is        dileep@dhcppc14:~/chat.js$ node chat.js  events.js:68         throw arguments[1]; // Unhandled 'error' event                        ^ Error: listen EADDRINUSE     at errnoException (net.js:769:11)     at Server._listen2 (net.js:909:14)     at listen (net.js:936:10)     at Server.listen (net.js:985:5)     at Object.<anonymous> (/home/dileep/chat.js/chat.js:58:4)     at Module._compile (
07:36 < chapel> usually means the port you are trying to listen to is in use
07:37 < dileep> i have changed the port
07:37 < dileep> also do the command lsof -i:8080
07:38 < DreamWork> good morning
07:40 < syskk> late afternoon here
07:40 < syskk> but well good morning
07:41 < dileep> syskk,please check out ma problem
07:41 < syskk> damn, we get this bug every few hours
07:41 < syskk> you already have a process using this port dileep 
07:41 < syskk> which port are you using? maybe pastebin your code
07:42 < dileep> syskk,before that i am using 8000 and aftter that 9000
07:42 < dileep> but still got the same error
07:42 < syskk> what OS are you using? also, paste your code http://gist.github.com
07:42 < dileep> virtual box ubunttu
07:43 < syskk> paste your code somewhere
07:44 < dileep> okk in that upper link
07:48 < syskk> i dont see the link was not there
07:48 < dileep> git://gist.github.com/3910325.git
07:48 < dileep> i have made in tha
07:50 < syskk> dileep: both servers are listening on the same port you can't do that
07:50 < syskk> dileep: choose a different port for your websocket
07:51 < dileep> different for server and websocket
07:51 < syskk> dileep: yes. one can be 8080 the other maybe 8081
07:51 < dileep> ok
07:52 < dileep> wait till i run that
07:52 < syskk> sure
07:52 < dileep> yeah computer man it works
07:53 < syskk> :)
07:56 < statusfailed> Hi all, can I set the prefix for npm somehow? I want to install packages to /home/me/.npm/
08:01 < syskk> statusfailed: i think: npm config set prefix=/home/me/.npm/
08:01 < syskk> statusfailed: see `npm help config`
08:11 < medikoo> techwraith: check does it work in plain Node.js also you may try: https://github.com/medikoo/modules-webmake as alternative, there shouldn't be such issues
08:25 < techwraith> medikoo: Thanks, and yes, it does work on plain node :)
08:27 < medikoo> techwraith: So it looks as definite bug, if Node finds right module, bundler should as well.. no excuses ;-)
08:27 < techwraith> I'll give webmake a shot
08:28 < medikoo> techwraith: it will work there
08:32 < techwraith> medikoo: Unfortunately I also have `path.join(process.cwd(), 'node_modules', module)` in some of my requires
08:32 < techwraith> which means webmake won't work
08:33 < medikoo> techwraith: yeah webmake is just about porting Node.js modules style and not about porting Node.js specific functionalities to browser. You need to either provide Node.js shim by yourself or stay with Browserify :)
08:34 < techwraith> Yep, looks like I'll be sticking with browserify if I can get it to work
08:34 < techwraith> Trying to get Geddy's Model system to work on the front end :)
08:34 < techwraith> And it does some crazy stuff
08:38 < chovy> it looks like app.params gets executed after app.get even if it's above it
08:38 < dazld> http://connect.soundcloud.com/sdk.js < can anyone load this file?
08:39 < chovy> https://gist.github.com/f2c983cd8232031a113f
08:40 < chovy> dazld: i can
08:53 < dileep> syskk r u here
08:53 < syskk> dileep: yea
08:53 < dileep> hav problem after that
08:55 < dileep> i have the dirrectory chat.js in which i put  ws.js,chat.js,template.html).after running like node chat.js whole of the file i got error like     dileep@dhcppc14:~$ node chat.js  module.js:340     throw err;           ^ Error: Cannot find module '/home/dileep/chat.js'     at Function.Module._resolveFilename (module.js:338:15)     at Function.Module._load (module.js:280:25)     at Module.runMain (module.js:492:10)     at process.star
09:07 < dileep> syskk.am waitng
09:09 < syskk> can you copy paste your require() statements
09:18 < xuzh> When installing npm by executing sh install.sh, it will hangs when fetching  http://registry.npmjs.org/npm/-/npm-1.1.63.tgz. 
09:19 < xuzh> I have set .npmrc with registry = http://registry.npmjs.org/. But it seems not work
09:29 < syskk> xuzh: npm hangs a lot. it hangs on me a few times a day. that might not be a problem on your side
09:31 < xuzh> syskk: I copied source code to my machine and try to install npm itself. And it has hunged for ten minutes. I have tried many times today. But there is no response:-(
09:32 < xuzh> syskk: How do you resolve hung issue?
09:36 < samholmes> Could someone explain why a second argument is passed to gm when using a readable stream https://github.com/aheckmann/gm ?
09:36 < samholmes> Also, is a http.ClientResponse a suitable readable stream for gm?
09:39 < syskk> xuzh: just wait :(  have you tried downloading http://registry.npmjs.org/npm/-/npm-1.1.63.tgz from your browser? it works here
09:42 < syskk> samholmes: no idea about the 2nd argument. probably not that important. http.ClientResponse should be fine as it implements the ReadableStream interface http://nodejs.org/api/http.html#http_http_clientresponse
09:44 < xuzh> syskk: I can downloading http://registry.npmjs.org/npm/-/npm-1.1.63.tgz  from console using curl http://registry.npmjs.org/npm/-/npm-1.1.63.tgz >npm-1.1.63.tgz
09:51 < syskk> xuzh: try executing the rest of the shell script
09:52 < syskk> if you are on ubuntu/os x, there are packages available as well
09:52 < syskk> sudo apt-get install npm
09:52 < syskk> i believe
09:55 < xuzh> syskk: I am not on Ubuntu and Fedora system. I do this on Tizen platform which is based on Linux. 
09:55 < syskk> xuzh: ah ok. did you compile node from source? i thought this would automatically compile / install npm nowadays
09:56 < xuzh> skskk: yes. I have compiled from source.  
09:56 < syskk> xuzh: which npm; doesnt return anything?
09:56 < xuzh> syskk: REPL has been worked on the platform
09:57 < xuzh> syskk: npm will be installed /usr/bin/npm. But executing "npm", there is no response
09:57 < syskk> xuzh: are you in China?
09:58 < xuzh> syskk: you are right
09:58 < syskk> xuzh: npm has also been hanging up on me.. in shenzhen . probably not related however :)
09:58 < RLa> china blocks npm registry?
09:59 < syskk> xuzh: so /usr/bin/npm is there are not? if it's there, it's a problem with your $PATH
09:59 < syskk> RLa: nah, but it hangs up a lot.. but ive heard it happening to many people so probably not related to being in China
09:59 < RLa> hm
10:00 < xuzh> syskk: npm is in /usr/bin/npm which is a sym link to /usr/lib/node_modules/npm/bin/npm-cli.js
10:00 < syskk> i believe github was blocked for a while but seems ok now
10:01 < syskk> xuzh: can you do: echo $PATH  and show the output? if
10:01 < xuzh> syskk: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
10:02 < syskk> weird
10:02 < syskk> xuzh: have you tried logging out and logging back in? :D
10:02 < xuzh> syskk: in REPL environment, I have done some test.  console.log() works
10:03 < xuzh> syskk: but when calling require('fs'), it will hung
10:03 < syskk> xuzh: yes, node doesnt need npm to work properly. 
10:03 < syskk> xuzh: mmm require('fs') should not give any problem. do you get an error message?
10:04 < xuzh> syskk:  there is no error message, just hung 
10:04 < syskk> xuzh: maybe you should try compiling node from source again.
10:04 < syskk> xuzh: that problem is not related to npm since 'fs' is in the standard library
10:05 < xuzh> syskk: yes. I think it is related to node itself. 
10:06 < syskk> xuzh: try : strace node file.js   (in file.js write var fs = require('fs');)
10:07 < xuzh> syskk: Thansk. It is just my question how can I add some logs for debugging node? 
10:09 < syskk> xuzh: im not sure. all i can think of is strace. maybe `node --log_al`
10:09 < syskk> node --log_all
10:10 < syskk> this will write to v8.log. but it's v8 specific, not node specific
10:11 < xuzh> syskk: by using strace, I have got a log. 
10:11 < xuzh> brk(0)                                  = 0x8f49000
10:11 < xuzh> access("/etc/ld.so.nohwcap", F_OK)      = -1 ENOENT (No such file or directory)
10:11 < xuzh> mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xf7710000
10:11 < xuzh> access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
10:12 < syskk> xuzh: from this point on, you should probably ask in #linux or google. im not very good at low level stuff
10:12 < xuzh> syskk: many thanks for your nice help. :-) you are really a good man.
10:13 < syskk> no prob. :) if u ever come by shenzhen we can talk about node :D
10:14 < syskk> i suspect your problem is related to missing dynamically linked libraries by the way but cant help more really
10:29 < Zwiep> 828 nicks.. impressive 
10:30 < dmilith> topic - lol ? :>
10:33 < SoulRaven> hello
10:33 < SoulRaven> is posibile in node
10:33 < SoulRaven> to get the number of the line from where a method is called?
10:33 < nathan7> new Error(), yo
10:33 < SoulRaven> and also the method name
10:34 < nathan7> though I'm curious what the fuck you want to do with it
10:34 < SoulRaven> a log file, that contains from where the logs are called
10:36 < Zwiep> any idea if i can setup a 3-way (or more) diffie-hellman shared secret with the current crypto impl? (i don't see hpw.._
10:44 < xuzh> syskk: I am in Beijing.  Welcome you to come Beijing!
10:46 < dileep> syskk u havent answer ma little quesn answr
10:46 < daleharvey> anyone use the levelup library and know why it would fail to install? log is @ http://pastie.org/5078065
10:49 < hemanth> so nayone here intrested in talking about Streams vs Callbacks
10:49 < hemanth> ?
10:50 < hemanth> why and why not...thinge
10:50 < hemanth> rather, where and where not 
10:51 < rvagg> hey daleharvey, levelup's my lib
10:51 < rvagg> having a look at your pastie
10:53 < rvagg> daleharvey: can you see if "/Users/daleharvey/src/pouchdb/node_modules/levelup/deps/leveldb/leveldb.gyp" exists? it's in the npm dist but node-gyp is saying it's not there
10:55 < aandy> hemanth: this is relevant to my interest. in a lib i'm writing, i have a mix of cb and events (if that's what you mean by streams vs callbacks?)
10:56 < aandy> for instance, a "connected" action/"something's done", could be either an event or callback'ed. i decided to do both. callback doesn't always make sense. think of loops and yield. think subscription/listening for "stuff"
10:57 < hemanth> aandy, yes the same topic, sir!
10:58 < rvagg> daleharvey: I've just tried an npm install on Linux and Mac for @0.1.1 and it seems to be fine, perhaps delete the levelup dir from node_modules and `npm install` again?
11:01 < aandy> hemanth: i by no means know all, my take is just to usually do callbacks if i ask something, e.g. ask an object to do this, or that, and want confirmation, or an answer (or data). where streams/events are .. well, streams. a function can have many events, and while many cb is also possible, it's not conventional and not that practical
11:03 < hemanth> aandy, yes, i was thinking on the same lines, for a stream like operation, say an IRC bot streams are good. An AJAX call on the other hand looks sweet with cb?
11:03 < aandy> rss.check_feeds(), i might be interested in "new items", "failed to connect", "connection throttled", "nothing new" and such. as cb that would either be a big function with lots of if's and/or switches. with events i can, on the other hand, ignore or use what i need
11:03 < aandy> hemanth: as a general rule, yes
11:05 < hemanth> aandy, so it all boils down to the coders choice ;) ?
11:05 < SomeoneWeird> always
11:05 < SomeoneWeird> :)
11:05 < hemanth> so there are no patterns ?
11:05 < aandy> an irc bot is a good example. you have lots of data coming in, some is MOTD, some is "mode changed for #node.js", some is PRIVMSG. you can write an irc bot quickly which just gives you "what's written on this chan", simply by using that event only
11:06 < aandy> well, that's a dangerous question
11:06 < aandy> it depends what you're doing
11:06 < aandy> but in general, ask/do this, just tell me when it's done, or just give me this is good for callbacks
11:06 < aandy> and streams/lots of info, only interested in something, need to do this when that, is good for streams
11:06 < aandy> events*
11:07 < hemanth> streams, as the name says we stream line ;)
11:07 < hemanth> btw we could avoid callback hell with streams? 
11:07 < aandy> in your irc example, i might be interested in knowing when the bot has connected. that could be done with a callback. if i wanted to do something with every PRIVMSG, that'd be an obvious choice for events
11:07 < hemanth> anyway that can also be avoided with named cb
11:08 < aandy> you can avoid callback hell with callbacks too: http://callbackhell.com/ :)
11:08 < aandy> it really comes down to "badly written code is bad", and vice versa
11:08 < aandy> you can easily do callback hell in streams aswel
11:09 < hemanth> heh heh
11:09 < aandy> .on("something", function() { check_db(function(e, data) { if (e) { report.error(function(res) { ....
11:11 < daleharvey> rvagg: awesome, looking now
11:12 < hemanth> aandy, :) need to rush now, will catch u soom
11:12 < hemanth>  /m/n/
11:14 < daleharvey> rvagg: /Users/daleharvey/src/pouchdb/node_modules/levelup/ doesnt exist
11:14 < daleharvey> here
11:15 < rvagg> daleharvey: perhaps just `npm install levelup` in /Users/daleharvey/src/pouchdb
11:15 < rvagg> it's odd that you got that error in the first place though!
11:15 < dileep> syskk u there
11:16 < daleharvey> nope, same error
11:18 < rvagg> daleharvey: what happens if you `npm install levelup` in another directory? perhaps /tmp ?
11:19 < daleharvey> exactly the same from a fresh dir (I am on osx btw)
11:20 < rvagg>  and you could also try `npm install levelup@0.1.0` just to see if it's something to do with the version I published today
11:20 < rvagg> I've just tested the install on Linux and OSX and it's working for me, but my OSX is a tad old
11:21 < dileep> someoneweird is here
11:21 < daleharvey> npm install levelup@0.1.0 works here
11:22 < rvagg> daleharvey: ok! let me dig into the differences
11:27 < rvagg> daleharvey: just downloaded the tgz files for both versions and the only differences are the changes I made
11:27 < rvagg> daleharvey: so, I'm suspecting a corrupt package
11:27 < rvagg> daleharvey: rm -rf ~/.npm/levelup
11:27 < rvagg> then try again
11:29 < rvagg> daleharvey: in fact, you could rm -rf ~/.npm to clean the whole cache
11:30 < daleharvey> rvagg: yup that was it
11:30 < daleharvey> thanks
11:30 < rvagg> brilliant! I hope it works well for you, let me know if there's anything else you need
11:38 < symeog> what kind of applications node is best suited for ? and what is a good starting point for a newcomer who doesn't have too much hands on experience in javascript in general ?
11:39 < rvagg> symeog: Node's forte is web applications, make yourself something for the web using the basic building blocks, a web server to start with
11:40 <@mbalho> i'd say network applications as opposed to web applications, subtle difference
11:40 <@mbalho> </pedant>
11:41 < symeog> so it is not a rival for php or asp.net for example ?
11:42 < rvagg> symeog: it's a rival for all that is boring and tedious
11:42 < rvagg> mbalho: fair enough, an IRC server or an IRC bot would equally be a fun way to start with Node
11:43 < symeog> this is good news caue i va had my share on boring and tedious but can i build a data centric web application with node ?
11:43 < symeog> lets say a simple to do list for that matter ?
11:44 <@mbalho> you can make an api for a todo list to use
11:44 <@mbalho> or a static file server that serves a todo list to a browser
11:44 <@mbalho> or a realtime todo api for people to collaborate on a todo list together
11:44 <@mbalho> or a twitter bot that you can tweet at to add todo items
11:44 <@mbalho> or a flying helicopter that does your todo list items for you (see @nodecopter)
12:01 < manuelbieh> hey
12:01 < manuelbieh> i'm trying to update a package on npmjs
12:02 < manuelbieh> the version number in my package.json is 1.2.2
12:02 < manuelbieh> i pushed it to github
12:02 < manuelbieh> and called npm publish
12:02 < manuelbieh> but npmjs.org still says 1.1.8 (updated 3 months ago)
12:03 < manuelbieh> any idea what i've done wrong?
12:19 < joaojeronimo> Hi guys. Does anyone know a through stream that I can pipe a file into it, and it emits a data event for each line ?
12:21 < nathan7> joaojeronimo: a moment
12:21 <@mbalho> joaojeronimo: i think there is one called line-feed ?
12:22 < joaojeronimo> mbalho, I'll look for it
12:22 <@mbalho> might be called line read
12:23 <@mbalho> joaojeronimo: ahh its called byline
12:23 < joaojeronimo> mbalho, nathan7: I also found this: https://github.com/pgte/carrier
12:24 < joaojeronimo> mbalho, oh yes byline is the thing I want
12:24 < joaojeronimo> thanks mbalho!
12:39 < mi6_x3m> hello, I am on Windows 7, can someone tell me where node js looks for modules
12:40 < mi6_x3m> I installed uglifyjs locally and it went up in %HOME%/node_modules
12:40 < mi6_x3m> my NODE_PATH variables points to that
12:40 < mi6_x3m> however I still get an error Error: Cannot find module 'C:\Users\mi6x3m\uglify-js'
12:46  * bookses sleeps
12:53 < spion> has anyone tried to use sweet.js to make a "regular" to CPS style convertor? :)
13:01 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:17 < dekroning> hi, what is the best way to install node.js on ubuntu 10.04 ?
13:18 < mchammer_> sudo apt-get install nodejs? :o
13:19 < pachet> git clone
13:19 < shanse> nvm or something similar
13:23 < timkuijsten> dekroning: sudo apt-get install python-software-properties; sudo apt-add-repository ppa:chris-lea/node.js && sudo apt-get update && sudo apt-get install nodejs
13:24 < bigkevmcd> I'd go with chris-lea's PPA too...
13:24 < timkuijsten> this will always give you the latest stable node with apt-get
13:24 < ben_> download and untar the nodejs packe from the website, enter the directory and run "./configure", "make" and "sudo make install". Most updated sources you can get
13:25 < ben_> and the source is stable as well
14:05 < flexd> Small question about restify.js
14:05 < flexd> What do you actually use to serve out the HTML file/javascript to do use the REST api you make with restify? Just another express app?
14:05 < flexd> Or a normal "old fashioned" web server?
14:07 < flexd> I guess I could just run nginx as a normal person would :p
14:08 < timkuijsten> flexd: i'm using the static file server from connect..
14:08 < flexd> Right, well that sort of answers my question :)
14:09 < flexd> I was just mostly wondering if people had their own web servers, or if you could make restify.js just serve out the index file.
14:09 < flexd> Seemed to be the best way, but I guess a normal server works too :)
14:11 < rudiX> I don't think I am understanding socket.io properly ... is there some npm socket manager except nowjs
14:12 < flexd> rudiX: what do you mean? 
14:12 < SoulRaven> hello, i have a question regarding winston plugin, in fact is about all the modules, in a special case
14:12 < rudiX> I am using "	io.sockets.on('conection', function(socket) { socket.emit('" few times flexd 
14:12 < SoulRaven> how i do when i have a modules that must be accesibile in all the modules in the same time
14:12 < SoulRaven> like Winston, for loging activities
14:12 < rudiX> and this is performance issue and does not work on localhost properly
14:13 < pringlescan1> hey everyone, i'm rapidly prototyping an http proxy for my dev team. we cross-browser test different flash assets to insure they are firing tracking pixels in the right order to track impressions.
14:13 < flexd> rudiX: It does not work?
14:13 < rudiX> flexd: yes it emmits only 1 "packet"
14:13 < flexd> 'conection' <- Assuming you did not type this into IRC instead of copying. That is a typo
14:13 < flexd> 'connection' is correct.
14:14 < SoulRaven> i have a main file, and from this file i have diferent modules, and in each module i have Winston methods called, is any posibilty to call the winston module only one time, not on every module, because the log activty is only in  a single file
14:14 < pringlescan1> I'd like to use web sockets to interact with my proxy. I was wondering if there are any front end frameworks to rapidly make a UI that work with web sockets and something client side that anyone can recommend
14:17 < timkuijsten> flexd: you might want to try https://github.com/OptimalBits/cabinet for static file serving, still have to check it out myself..
14:17 < rudiX> http://cl.ly/code/0j233N3n1p0Y this use to work until I upgraded to express 3.0
14:17 < rho> pringlescan1, I've enjoyed using socketstream to rapidly roll out socket.io ideas
14:18 < rho> pringlescan1, https://github.com/socketstream/socketstream
14:18 < rho> pringlescan1, might be overkill for what you're doing though
14:19 < pringlescan1> rho, that made me nervous due to lack of complete documentation
14:19 < jaha> anyone have a method they like when implementing page specific JS code on a dynamic site served by node and something like handlebars? Id prefer to NOT have script tags thrown everywhere.
14:20 < rho> pringlescan1, heh, I can understand that, think it's a pretty common problem across the board
14:20 < rudiX> "(node) warning: possible EventEmitter memory leak detected. 11 listeners added. Use emitter.setMaxListeners() to increase limit." using socket.io
14:21 < rho> pringlescan1, but it has worked well for me, and the examples included give a pretty good rundown of what's going on
14:21 < pringlescan1> I could use jquery mobile and a minimalistic event handler that uses websockets
14:21 < pringlescan1> I say jquery mobile because it has widgets for everything I need and I'd like it to run in my chrome extension in a small popup
14:22 < pringlescan1> I was thinking of Derby but all their examples are a 500 internal server error right now =)
14:23 < pringlescan1> Has anyone used Ember?
14:24 < brettster> Ember looks awesome.
14:25 < bradleymeck> domain.intercept i love you but i dont always want you on a domain...
14:25 < bradleymeck> jaha: use a script loader?
14:26 < pringlescan1> AngularJS looks promising too
14:27 < pachet> ember is a bloat boat
14:27 < pringlescan1> I think AngularJS + Jquery + Socket.IO would work well for what i need to do
14:27 < pringlescan1> I just don't like frameworks that make me do things a certain way, I want to be able to pick and choose.
14:28 < pachet> then you wouldn't really enjoy ember very much
14:29 < rudiX> pringlescan1: can you give me example how you use socket.io when you need to emit multiple sockets ... is everything inside  "io.sockets.on('connection', function(socket) {"  ?
14:29 < pringlescan1> does anyone have suggestions for a client side UI library that would be good for a business portal that really just does reporting and basic data entry
14:30 < pringlescan1> rudiX, I haven't used it lately, I just read the docs, read about closures in JavaScript and it'll answer your question, you won't do well in Node.JS until you get the closures down.
14:31 < pringlescan1> Well, if I release my development proxy tool on GitHub I can just use Sencha and call it a day as far as UI goes.
14:31 < rudiX> ok I need some socket module/manager would be able to handle lots of requests without killing the performance ... I am pretty sure I am doing it wrong following the docs
14:43 < mmccook> Anyone ever worked with Yahoo's Mojito?
14:43 < bradleymeck> isaacs: with domain.intercept being so FIN nice, why don't we just have intercept(fn, errfn) ?
14:44 < bradleymeck> mmccook: only seen demos, looked interesting but i dont touch html :/
14:46 < mmccook> bradleymeck : Seems like noone really uses it expect the 3-4 spotlights they list on the Mojito site.. Stackoverflow and Reddit/r/node seem to have never even heard of it.. 
14:46 < syskk> what tools do you guys use to deploy to production / staging?
14:47 < syskk> im thinking of simply going with a git hook for now but curious to see how others do it
14:47 < mmccook> syskk: Thats how we are doing it at my current job. 
14:47 < timeturner> basically git hooks yeah
14:48 < syskk> cool
14:54 < JohnMcLear> syskk I think chef is pretty popular, but I'm no expert.
14:55 < JohnMcLear> gah, I suck.
14:57 < strk> what's an efficient way to make a copy of an url ?
14:58 < strk> currently using url.parse(url.format(source));
14:58 < evelyette> hi
14:59 < evelyette> I would like to define my express URI like this: /highscore/level/:level/offset/:offset/number/:number    ... this works, but I would like to make some values defaults
14:59 < evelyette> so if the number defaults to 10, then only this reqeusts would be needed: /highscore/level/:level/offset/:offset/
15:00 < evelyette> but that means I have to make the static 'number' optional also
15:00 < evelyette> any ideas how to achieve that ?
15:04 < bradleymeck> strk what are you needing to copy a string for?
15:06 < bradleymeck> evelyette: use multiple routes
15:06 < dzajdband> Why not using a query string?
15:07 < evelyette> bradleymeck, thanks, I'll look into that
15:07 < strk> gah, I found a bug in core url !
15:08 < strk> bradleymeck: url object, not string
15:08 < evelyette> but I would have to define a new function, which would be called by the two get() queryies
15:09 < bradleymeck> strk: url conforms to rfc, if this is about escaping characters, it is proper. also if you are working on an object thats probably the sanest way
15:09 < bradleymeck> more efficient would be to dump to string parts and modify them manually but meh if you need an object
15:09 < strk> 'http://x/res?a=1&sql%3DSELECT%20st_rotate%28the_geom%2C%201.19%29%20FROM%20table'
15:10 < evelyette> bradleymeck, can you be more specific about what you mean by the last sentence .... how can I make it more efficient ?
15:10 < strk> oh, you're right, it's malformed
15:10 < bradleymeck> evelyette: was talking to strk
15:11 < strk> so the bug is elsewhere indeed
15:11 < strk> bradleymeck: I wanted an object to edit the parts, so yes, I guess I could do it in portions
15:13 < baudehlo> anyone know git well enough to help me figure out what commits throughout history changed one particular line of code? Like git blame, but for all changes not the most recent?
15:14 < Slaytorson> Does anyone know how to cleanly get around the deploying testify to heroku? It's throwing back errors about dtrace because heroku doesn't support dtrace (which is fine)
15:14 < Slaytorson> restify* not testify lol
15:16 < nathan7> Slaytorson: that's killing it?
15:16 <@Nexxy> mscdex, felixge is mad at you!
15:16 < SoulRaven> anyone work with Winston module?
15:17 < Slaytorson> Yep. Pretty stupid. Would you like to see the logs? That might help you.
15:17 < SoulRaven> i don't know how to setup the timestamp param
15:17 < nathan7> Slaytorson: Pastebin 'em
15:18 < mscdex> Nexxy: eh?
15:19 <@konobi> doing his talk at nodedublin right now
15:20 <@Nexxy> mscdex, he's talking about mysql parsing
15:20 <@Nexxy> mscdex, and mentioned your new bindings to maria
15:20 < Slaytorson> nathan7: http://pastebin.com/SaeZ618k
15:20 < mscdex> oh
15:20 <@Nexxy> lol
15:20 < mscdex> i'm not in dublin :-)
15:20 <@Nexxy> I figured as much lol
15:20 <@Nexxy> that's why I'm telling you!
15:20 < mscdex> is there some kind of live video or no ?
15:21 <@Nexxy> hmm
15:21 <@Nexxy> let me check
15:21 <@Nexxy> I think no
15:21 < nathan7> Slaytorson: try bundling a dtrace-less restify
15:21 <@Nexxy> konobi, are you here?
15:21 < mscdex> ah oh well
15:23 < SoulRaven> anyone knows how to config the timestamp param for costume timestamp format in Winston module?
15:23 <@konobi> Nexxy: yup
15:23 <@Nexxy> konobi, why haven't you said hi yet?
15:23 < mscdex> oooo
15:24  * Nexxy offended!
15:24 <@konobi> been sidelined by folks
15:24 <@Nexxy> psh
15:24 < mscdex> Nexxy: you're not giving a talk?
15:24 < mscdex> what's up with that
15:24 <@Nexxy> tomorrow
15:24 <@Nexxy> I am!
15:25 < mscdex> you're not on the talks list on the website :S
15:25 <@Nexxy> ya I noticed that
15:25 < Slaytorson> nathan7: not sure how to exactly do that.
15:25 <@Nexxy> probably cuz I never submitted a talk abstract
15:26 < pachet> rebel
15:26 < cronopio> SoulRaven: you can add a trnsport with the options you want   winston.add(winston.transports.Console, options) options should be a object like { timestamp: function () {}} the returned value is usesd as timestamp
15:26 <@Nexxy> mscdex, I'm in the list of speakers tho
15:28 < SoulRaven> cronopio: i have made this, and is ok, but i don't know how to set the timstamp method to return a specific format
15:28 < SoulRaven> cronopio: http://pastebin.com/9Tk2WRBG
15:29 < SoulRaven> but is not working
15:29 < mscdex> Nexxy: \o/
15:30 < nathan7> Slaytorson: git add node_modules/restify
15:30 < nathan7> Slaytorson: and remove the dtrace from the package.json
15:30 < nathan7> Slaytorson: nodejitsu has much nicer facilities for this
15:30 < cronopio> SoulRaven: I sees, dont return a "format" return the date you wan to use, the original timestamp function just do this function () { return new Date().toISOString(); }
15:31 < cronopio> SoulRaven: so you can do the any time math you want before return, like increase one day, one month or whatever
15:32 < Slaytorson> nathan7: I don't have dtrace in my package.json
15:32 < nathan7> Slaytorson: in restify's
15:32 <@Nexxy> mscdex, \o/
15:32 < Slaytorson> nathan7: is nodejitsu something that is reliable for mission critical business apps?
15:33 <@konobi> mmalecki: still writing slides?
15:33 < nathan7> Slaytorson: Yeah
15:33 < Slaytorson> nathan7: agh! got it..
15:33 < nathan7> Slaytorson: heroku quite frankly doesn't care about node
15:33 < Slaytorson> nathan7: I've gotten that impression, unfortunately.
15:34 < cronopio> SoulRaven: make sense?
15:34 < SoulRaven> cronopio: i have try this: return new Date().toString('yyyy-MM-dd'); but still not working
15:35 < aandy> nathan7: thanks to the npm package.json you're not so tied to whether or not cloud providers "care about node"
15:35 < mmalecki> konobi: yes damn it
15:36 < SoulRaven> or var d = new Date(); return d.getDate();
15:36 <@konobi> i'm walking around in a blue SmartOS t-shirt and a hat
15:36 < SoulRaven> and still nothing
15:37 <@konobi> new Date().toISOString()
15:38 < mmalecki> konobi: gonna catch you around, I'm speaking after that guy
15:38 <@konobi> yup
15:38 < huamma> best MVC framework for web development? :)
15:39 < SoulRaven> @konobi, cronopio: http://pastebin.com/xgSuvDWt return no date 
15:40 < SoulRaven> only: "info: something bad" without any timestamp
15:41 <@konobi> SoulRaven: check MDN docs
15:42 < cronopio> SoulRaven: weird, in this http://blog.stevenlevithan.com/archives/date-time-format talk about the format() method over a Date object
15:44 < SoulRaven> cronopio: if i remove the method from the timestamp param, then the date appears again, but in UTCtimezone format
15:45 < SoulRaven> i also try to modify the return, and return something elese, insted of date, but no change
15:46 < TehShrike> So, what's all this then? http://developers.jolicloud.com/
15:48 < nathan7> aandy: sure
15:49 < nathan7> aandy: but I'd rather have a place run by people who know their shit
15:49 < SoulRaven> sems to be a bug in winston, that don't accept any format of timestamp, only iso https://github.com/flatiron/winston/pull/120
15:50 < Slaytorson> nathan7: thanks for the heads up about nodejitsu. I've been looking at the. I deployed an app already. I might just use them. They are backed by Joyent aren't they?
15:50 < CoverSlide> joli OS is a POS
15:51 < cronopio> SoulRaven: yeah maybe a bug, you can debug around these lines https://github.com/flatiron/winston/blob/master/lib/winston/common.js#L110-114
15:52 < nathan7> Slaytorson: They're a Joyent partner I think
15:52 < SoulRaven> cronopio: thx, i will look 
15:52 < nathan7> Slaytorson: They live in #nodejitsu
15:52 < nathan7> Slaytorson: they're chill dudes and stuff
15:53 < cronopio> SoulRaven: any result please share it with me, you can find me here or in #nodejitsu
15:53 < Slaytorson> nathan7: Sweet! I'll check it out. I have a a couple of questions for them. 
15:57 < TehShrike> CoverSlide: who's their target user?
15:57 < aandy> nathan7: sure. have you tried azure by any chance?
15:59 < Tixz> I have a file called config.js containing application-wide variables. Is there a way to just write require("config") instead of having to "calculate" the relative path for every file that imports it?
16:00 < aandy> Tixz: you could put it in node_modules/config.js?
16:00 < Tixz> That wouldn't mess anything up=
16:00 < Tixz> *?
16:01 < nathan7> aandy: No
16:01 < jhsto> Guys, anyone happen to know is it possible to kind of mask, encrypt or simply hide the frame data emitted from websockets?
16:01 < nathan7> aandy: does it have a nice command-line tool like jitsu?
16:02 < aandy> Tixz: depends what you use the "config" reference for (like, if you have more than one within that project). it's just a way of adding it to "path" for that project
16:02 < jhsto> The stuff I would like to hide is the ones sent from server to client, and the values say masked:false at the moment, so I thought that if there is a way to mask the data from server to client too.
16:02 < Tixz> Well, I just have a single one, but I was thinking about custom components that get used a lot too
16:02 < aandy> nathan7: i've never used jitsu. i just saw a couple of node screencasts on azure a few months ago. personally i've only used aws
16:02 < Tixz> If I could add a folder to the paths lookedup
16:03 < EyePulp> morning kiddies =)
16:03 < EyePulp> & adults
16:03 < strk> baudehlo: #git
16:03 < TehShrike> Tixz: it's pretty cool http://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders
16:03 < baudehlo> strk: thanks - I figured it out anyway :)
16:03 < aandy> evening, EyePulp 
16:04 < EyePulp> who peed in ryah's wheaties?  Co-worker just sent me some tweets. 
16:04 < EyePulp> hey aandy
16:05 < Tixz> TehShrike: Yep already did read that, but from what I read that only allows a single application-wide folder
16:05 < Tixz> But I guess that will do for now :)
16:05 < spion> https://gist.github.com/3912802 - quick and dirty regularStyle-to-CPS macro in sweet.js
16:09 < Tixz> Is there a way I can include both a "lib" folder and an "app" folder?
16:09 < Tixz> Oh, nevermind
16:13 < CoverSlide> spion: isn't that just what tamejs does?
16:16 < Slaytorson> T
16:19 < spion> CoverSlide, yup. except that with sweet.js you get to decide how it works :)
16:19 < spion> ... its fun
16:31 < jhsto> I'll just bump my question, does anyone know how to mask the data sent from server to client in socket.io?
16:32 < jhsto> Or is it against the protocol?
16:32 < strk> how do I set UserAgent in globalAgent ?
16:33 < strk> or can I ?
16:33 < CoverSlide> jhsto: we've been over this already
16:33 < CoverSlide> you can't mask it from developer tools
16:33 < jhsto> CoverSlide: oh, i must have missed that
16:33 < CoverSlide> you can use ssl to mask the data from network spies but that's about it
16:34 < CoverSlide> if you want to do some encryption on the data you can do that, but someone can read your code and figure out your encryption
16:34 < crazynod1> SSL for sure
16:34 < jhsto> I'm just worried if a bot connects my side, is it able to parse the data sent by the websocket by somehow using the developer tools?
16:34 < crazynod1> you are almost guarunteed to mess up a DIY encryption scheme
16:35 < CoverSlide> also true
16:35 < CoverSlide> especially via the browser
16:35 < bradleymeck> jhisto if you send anything, anything to a client that is used at any point as plain text, it is visible
16:36 < bradleymeck> just a matter of care level / needs
16:36 < jhsto> bradleymeck: okay
16:36 < jhsto> Thanks folks, this should be clear for me now
16:38 < crazynod1> if you authenticate your websocket clients first, that should help too
17:02 < StevenV> Hi all
17:05 < StevenV> How do I check the dependencies for a modul that I want to install with npm? For example I tried to install node-isnpector and got a number of warnings regarding dependencies.
17:08 < mscdex> StevenV: what warnings?
17:09 < StevenV> I closed the window so I can't provide specifics, sorry.
17:10 < gildean> StevenV: are you sure they weren't just missing readmes or something like that?
17:10 < StevenV> I must also mention this is on Windows 7
17:10 < gildean> ahh, do some of the modules require building?
17:11 < gildean> if so, you need something to build with
17:11 < StevenV> yes there were missing readmes, but the last line after building mentioned something that a package must be installed with the -g option
17:12 < StevenV> yes, but i have both mingw and vc2010 installed
17:12 < Bonuspunkt> substack you are fine with using your awesome image for http://turtle.bonuspunkt.me/ ? :) (use cursor up/down to in/decrase speed)
17:12 < gildean> StevenV: node-inspector seems to need to be installed with the -g option
17:13 < gildean> but also it hasn't been updated for quite some time, so i wouldn't be surprised if it wouldn't function with latest node version
17:14 < StevenV> thanks, any suggestion for a debugger then?
17:15 < gildean> StevenV: i have no idea, i tend to write so simple code that the functions are easily debugged with the native errors
17:16 < StevenV> gildean thanks
17:19 < janmower> isaacs: would you be interested in a pull request that enables systemtap support on linux?
17:19 < gildean> StevenV: i usually dev by running the code at the same time with nodemon or forever with the monitor, so the program restarts when changed
17:21 < gildean> i tend to go with nodemon when devving tho, it's easier to just run for example screen nodemon someserver.js
17:22 < xonecas> o/
17:22 < StevenV> gildean: thanks i will try that. I'm just starting out so there is a lot to learn
17:22 < xonecas> Using Node + Mongo, what are the best practices to validate the date before inserting it into the db?
17:22 < xonecas> *the data
17:22 < gildean> StevenV: on windows you wouldn't run it in screen tho'
17:23 < superjoe> gildean, StevenV for development, I recommend node-dev over forever
17:23 < gildean> superjoe: any advantages over nodemon?
17:23 < superjoe> for development? yeah, it doesn't daemonize your process. also it overrides require so that if *anything* you depend on changes, the server restarts.
17:24 < superjoe> and notifications.
17:24 < janmower> hey is there anyone here that can answer questions about contributing and pull requsts?
17:25 < StevenV> gildean: thanks i was just looking at the modules to install one.
17:25 < superjoe> just ask, don't ask to ask
17:26 < janmower> ok i have a pull request that adds systemtap/dtrace support for both 64 and 32 bit linux
17:26 < janmower> anyone interested?
17:26 < janmower> how would i submit this for acceptance into main nodejs?
17:27 < superjoe> janmower, fork joyent/node on github and make a pull request
17:27 < janmower> against master?
17:27 < superjoe> yes
17:27 < janmower> gotcha should be by this afternoon
17:27 < superjoe> cool
17:27 < janmower> i just need to squash my branch, just tested on master
17:28 < gildean> superjoe: node-dev looks good too, especially if you're devving on the same machine you run your code on
17:28 < janmower> superjoe: i also clicked through the joyent cla, should that be sufficient?
17:28 < efbeka> hi all
17:29 < efbeka> anyone to help me, little question
17:30 < superjoe> janmower, should be.
17:30 < superjoe> don't ask to ask, just ask.
17:31 < efbeka> ok thks, is there any way to ajust the number of threads?
17:31 < janmower> superjoe: thanks man!  being direct is a skill that is in constant improvement :)
17:32 < superjoe> janmower, np. that last one was directed at efbeka 
17:32 < efbeka> i mean, its actually 2 (when i do ps -o thcount -p), i want to up this
17:32 < timeturner> is the cluster api out of beta or do we have to use other methods of load balancing across processes
17:32 < efbeka> (sorry for my english)
17:33 < superjoe> timeturner, it still says experimental
17:33 < superjoe> however, you could try using something like https://github.com/indabamusic/naught
17:33 < superjoe> because when the api changes, that project will conform to it
17:34 < timeturner> superjoe: thanks
17:34 < efbeka> superjoe, could u help me please?
17:39 < efbeka> can someone quick help me????
17:40 < bradleymeck> efbeka: no, and it generally wont help since the JS engine is single threaded
17:40 < bradleymeck> scale with processes
17:41 < efbeka> im not talking about v8
17:41 < efbeka> i just want to know if there is an option to config the thread number in the pool
17:42 < efbeka> for libuv
17:43 < efbeka> bradleymeck: are u undersand me?
17:43 < bradleymeck> efbeka: yea, just checking something
17:43 < efbeka> ok, thk u.
17:44 < draginx> What does dart mean for v8 and NodeJS?
17:44 < bradleymeck> draginx means someone really likes to think static optional types fix logic errors
17:45 < draginx> ah
17:45 < draginx> but like
17:45 < draginx> will v8 still be developed? O_o
17:45 < efbeka> lol
17:45 < bradleymeck> efbeka: dont see any configure or ways to start up node that would do what you want
17:45 < bradleymeck> draginx yes, it is still in very active dev
17:45 < draginx> :) ok
17:46 < efbeka> can someone else could help me?
17:46 < bradleymeck> draginx: Javascript has more applications (sites) using it than any other language, which is terrifying when you think about C
17:46 < draginx> lol =x
17:46 < efbeka> pleaseeeeeeeeeeee!
17:46 < bradleymeck> efbeka: you would have to modify source
17:46 < rendar> bradgignac: really? js is the most used lang?
17:47 < efbeka> libuv source?
17:47 < bradgignac> rendar: i don't think that was meant for me
17:47 < bradleymeck> rendar: not most actively developed but more actual sites/apps exist than I care to even think of and most of them these days contain some JS
17:48 < rendar> bradgignac: sorry
17:48 < bradgignac> np
17:48 < rendar> bradleymeck: yeah, i think so
17:49 < rendar> bradleymeck: basically almost every webapp contains js
17:49 < rendar> bradleymeck: what about scalability of js when the app starts to become huge?
17:49 < bradleymeck> what about it?
17:49 < rendar> bradleymeck: i mean, does it scale well?
17:50 < bradleymeck> thats a NP hard question
17:50 < rendar> lol
17:50 < bradleymeck> but it scales fine
17:50 < bradleymeck> efbeka: yea would have to change the libuv source according to a maintainer
17:51 < efbeka> bradleymeck: yes, sadly i found that its limited to 4 :(
17:52 < efbeka> bradleymeck: i found this https://github.com/joyent/node/blob/master/deps/uv/src/unix/threadpool.c#L31
17:52 < bradleymeck> efbeka: its defined in the headers though so you could change that, not sure why you actually need more
17:52 < bradleymeck> all they do is arbiter events to buffers
17:54 < efbeka> i think for exple if i have 2 big file reads (or another io) and 3 small io, itsnt a good idea to ajust the pool size?
17:55 < efbeka> to achieve better perf? (obviously if i have also a 6core)
17:55 < efbeka> bradleymeck: its not for a real usecase im just testing stuffs
17:56 < bradleymeck> doubtful
17:57 < efbeka> so why is it fixed like that?
17:58 < bradleymeck> efbeka: idk, but you would want multiple set up to allow multiple file IOs to act async, but at various thresholds your disc memory controller on the hard drive will just start to thrash if you have too many
17:58 < bradleymeck> probably something to balance that at a sane default number
18:00 < bradleymeck> digital* not disc sorry
18:02 < owen1> as a package author, how to upgrade the version of a package? i use the poet package - and i see 0.2.2 in it's package.json - https://github.com/jsantell/poet/blob/master/package.json but 'npm show poet' shows: { latest: '0.2.1' }
18:03 < efbeka> bradleymeck: thks btw, ill continue to read
18:04 < bradleymeck> owen1: npm publish, what does it return and output?
18:04 < owen1> bradleymeck: i am not the author of this package..
18:04 < bradleymeck> … you started with "as a package author"
18:04 < bradleymeck> complain to the author
18:05 < owen1> bradleymeck: i want to tell him - https://github.com/jsantell
18:05 < owen1> bradleymeck: but before talking to him i want to make sure it's not something on my end
18:06 < bradleymeck> owen1 its not you `npm view poet` shows 2.1
18:06 < owen1> bradleymeck: ok. so all he needs to do is 'npm publish' ?
18:06 < bradleymeck> yep
18:06 < owen1> bradleymeck: thanks!
18:21 < StevenV> where should one install modules. I used npm to install reloader under my node installation. if I include it in a test app i get cannot find module error.
18:27 < tprice_> how do i use node-tar and pack the content of my folder in the root of the tar file
18:28 < tprice_> it seems to pack everythng in a subfolder taht is the name of the current folder
18:28 < funcuddles> question.. is there a good strategy for enabling/disabling session support per route (using express)?
18:31 < bradleymeck> tprice_: long story, fstream is used internally and it does not like that
18:34 < tprice_> bradleymeck>  yeah i keep getting the package folder or the folder of the current dir
18:34 < bradleymeck> tprice_: no way around it, i had a thread somewhere about this problem when i was making build server
18:35 < tprice_> whats the best way to tar a file on windows and linux and have the content in the root of the tar?
18:36 <@mbalho> probs https://npmjs.org/package/tar
18:38 < kickandrew> I'm having issues with express-validator in express.js version 3.0.0beta7.  Was wondering if anyone here has successfully integrated express-validator with v3 of express
18:40 < tprice_> @mbalho> I have been using node-tar but im having a few problem with it
18:43 < willwhite> hey substack, do you have any interest in this pull? https://github.com/substack/node-optimist/pull/73
18:49 <@mbalho> bnoordhuis: maciej says come to the hotel library bar
19:17 < BitPuffin> Hello
19:17 < BitPuffin> Does anyone in here know if there's a way to develop a node app that uses couchdb with cloud9ide?
19:19 < BitPuffin> maybe combining it with iriscouch or something?
19:25 < Jona_> ***Help with Node.js*** Will anyone recommend any tutorials that includes MVC design? I need to gain experience with MVC.
19:25 < niggler> wtf is mvc
19:25 < nathan7> Module-View-Controller
19:26 < nathan7> err
19:26 < nathan7> Model-View-Controller
19:26 < Jona_> Any suggestions?
19:26 < nathan7> My current model is to work with pretty loosely defined models in CouchDB
19:27 < nathan7> which I feed into logicless template views
19:27 < niggler> is there a node module for handling php templates?
19:28 < niggler> ooh google's back
19:28 < nathan7> niggler: PHP templates?
19:28 < nathan7> What would you want that for?
19:28 < antidau1> tjfontaine, TooTallNate, are you there?
19:28 < nathan7> I've been using Mustache-derived templating tools
19:28 < tjfontaine> antidau1: I'm here
19:29 < TooTallNate> antidau: yo
19:29 < Jona_> I know JS, but I'm doing an internship and they said i need to learn the design patterns. In other words, have some knowledge on how to implement the task they give me and know where to put it into the project
19:29 < niggler> ooh that looks cool
19:30 < TooTallNate> antidau: so do you have you code up in a repo yet?
19:30 < TooTallNate> it sounds like a cool project :)
19:30 < TooTallNate> I like messing with node + audio stuffs
19:31 < antidau> tjfontaine: on your suggestion to replace session_ptr with void_ptr: it is already one, i havent yet implemented the session struct
19:31 < nathan7> Jona_: I'm on the anti-framework bandwagon
19:31 < nathan7> Jona_: Simple, composable tools
19:32 < Jona_> nathan7: what do you mean???
19:32 < tjfontaine> antidau: ok, I've hit an issue in the past where I accidentally used a struct and corrupted what I got because it was allocating too much (or too little)
19:32 < nathan7> Jona_: A framework tries to handle everything for you
19:32 < nathan7> Jona_: it is inflexible and heavy
19:32 < antidau> TooTallNate: it's already a git repository, i can put it on github
19:32 < nathan7> Jona_: I try to use small, flexible modules coupled together
19:34 < Jona_> nathan7: i see what you mean. Thats what i was refered to learn. I have taken a JS class and they the basics. Im interning for a  web dev firm. and i noticed it is difficult to come off a JS course and do a task for a large project
19:34 < antidau> tjfontaine: It works if I replace the void_ptr with track_ptr or a double pointer, so the session pointer works
19:35 < benatkin> is anyone using node to build servers? installing node through ssh and then running a node provisioning script?
19:35 < antidau> TooTallNate: although you will need to have a spotify premium account to use despotify
19:35 < phillyDesignr> anyone know the syntax for input name attr for an ebedded doc like = name="project_images[0].src"
19:35 < tjfontaine> antidau: did you get a chance to try TooTallNate's union suggestion?
19:35 < TooTallNate> antidau: i have premium
19:35 < nathan7> Jona_: Look at flatiron and things
19:35 < nathan7> Jona_: flatironjs.org
19:35 < nathan7> Jona_: Many use Express
19:35 < TooTallNate> antidau: does libdespotify give you raw access to the songs? or is it more like a "remote" for Spotify app?
19:36 < nathan7> Jona_: Express handles a lot of stuff for you but it leads to inflexibilities too
19:36 < nathan7> Jona_: and it's a bit on the heavy side
19:36 < Jona_> nathan7: They say create function to do this. They give me the code of the project. So many lines of code and subfolders. That I don't know where to start.
19:36 < antidau> tjfontaine: not yet, will try it now
19:37 < antidau> TooTallNate: it gives you the decoded pcm data, but it's open source so you could do whatever you like
19:37 < Jona_> nathan7: I will look into that link
19:37 < nathan7> I should look into despotify
19:37 < TooTallNate> antidau: holy shit that's awesome… i'm hoping you end up making a nice readable stream class from that :)
19:38 < kickandrew> Anybody know of a pattern processing library for node that will take a tweet and automatically generate links for @names and hashtags?
19:38 < benatkin> Jona_: express is lightweight and modular too. I doubt anyone could show proof of inflexibilities :p
19:38 < phillyDesignr> anyone know the syntax for input name attr for an embedded doc like = name="project_images[0].src"
19:38 < nathan7> ..what?
19:39 < Jona_> benatkin: so what will express teach me? I'm new to this. Will it help with MVC
19:39 < antidau> TooTallNate: do you know any simple library that would take the pcm data and output it to the speaker? all libraries i found only play files from the harddrive
19:39 < CoverSlide> Jona_: express is not MVC
19:39 < nathan7> benatkin: hm
19:39 < nathan7> Express does too little separation of concerns imho
19:39 < CoverSlide> Rails isn't even MVC
19:39 < TooTallNate> antidau: i'm planning on writing one soon
19:39 < CoverSlide> It's Model2
19:40 < TooTallNate> antidau: i'm in need of that as well :)
19:40 < benatkin> nathan7: I'd love to see a coherent blog post arguing why express is incoherent
19:40 < tjfontaine> TooTallNate, antidau: it's bound yet, but I think vlc has a mechanism for that
19:40 < tjfontaine> *not bound yet
19:41 < phillyDesignr> nathan7: I have an embedded do in Mongoose and I need an input form to update say project.project_images[0].src
19:41 < TooTallNate> tjfontaine: well then maybe you could create a nice writable stream class for that ;)
19:41 < Jona_> CoverSlide: ok, what are some recommendations that will help me learn that MVC pattern for development??? That's what my manager told me to learn. 
19:41 < benatkin> Jona_: it will teach you how to speak HTTP, have configuration settings, and do middleware
19:41 < nathan7> benatkin: The router is not separated, the middleware order isn't clear
19:42 < nathan7> benatkin: and flatiron builds from Broadway, a dependency injection framework
19:42 < nathan7> benatkin: which makes separation of concerns really easy
19:42 < CoverSlide> Jona_: you're looking for node specifically? I don't know for sure
19:42 < benatkin> nathan7: that's only the case if you start a server without adding the router middleware
19:42 < benatkin> nathan7: if it hasn't been use'd, it adds it
19:42 < phillyDesignr> I have an embedded doc in Mongoose and I need an input in my form to update say project.project_images[0].src what's the syntax for that?
19:43 < nathan7> benatkin: ..what?
19:43 < benatkin> nathan7: you can compose apps
19:43 < nathan7> benatkin: that's awful behaviour
19:43 < Jona_> CoverSide: It would be nice to have node, but if you know of anything else that uses JavaScript or any type of web development
19:43 < TooTallNate> antidau: but ya, you should push your shit to github
19:44 < antidau> TooTallNate: I just realized my spotify login data is in that repository
19:44 < TooTallNate> antidau: oohhh not good
19:44 < benatkin> nathan7: oops I read the code incorrectly last time https://github.com/visionmedia/express/blob/master/lib/application.js#L412
19:44 < TooTallNate> antidau: you should create a new repo with 1 commit
19:44 < TooTallNate> antidau: otherwise it's in the repo history forever
19:45 < antidau> TooTallNate: yeah that would propably the best way
19:45 < CoverSlide> Jona_: maybe look at railway, tower, locomotive, geddy
19:45 < nathan7> benatkin: :(
19:45 < benatkin> nathan7: it inserts the router when the first app.{get|post|put|etc} method has been called
19:46 < Jona_> CoverSlide: thanks i will look into those
19:49 < antidau> TooTallNate, tjfontaine: ref-union works
19:50 < tjfontaine> TooTallNate: the interface for doing is kinda interesting, but using ffi callbacks totally achievable http://forum.videolan.org/viewtopic.php?f=32&t=85451 I probably can work an example of it tonight
19:50 < tjfontaine> antidau: excellent
19:50 < TooTallNate> antidau: ya cool, can you show me your union type definition?
19:50 < TooTallNate> just out of curiosity :)
19:51 < antidau> var signal_data =  UnionType({
19:51 < antidau>   time: ref.refType(ref.types.double),
19:51 < antidau>   track: track_ptr
19:51 < antidau> });
19:52 < TooTallNate> tjfontaine: that'd be cool. i've been meaning to write native bindings for CoreAudio, OSS, and win's sound system (whatever its' called) but it's a lot to learn and I haven't started it yet
19:53 < hillct> isaacs: I'm trying to understand the nom distribution of the architect package. It seems when installed via NPM it doesn't include the contents of the plugins directory, but via git clone it does. The package.json file doesn't shed any light on this behavior. Is there something I'm missing in the behavior of nom and deletion or other special file handling?
19:53 < tjfontaine> TooTallNate: indutny has something like that already, but I would vote for binding jack personally
19:53 < TooTallNate> antidau: well then onward my horse!
19:53 < TooTallNate> tjfontaine: what's jack?
19:53 < tjfontaine> TooTallNate: http://jackaudio.org
19:54 < antidau> TooTallNate: you could also use something like libao
19:55 < antidau> that's what the example clients for despotify do
19:55 < CoverSlide> what about alsa or pulseaudio
19:55 < tjfontaine> CoverSlide: alsa isn't cross platform
19:55 < nathan7> hillct: .npmignore contains plugins probably
19:55 < antidau> iirc libao can output to all of them
19:55 < nathan7> hillct: The plugins presumably have their own package.json
19:55 < nathan7> hillct: and are published as separate packages
19:56 < tjfontaine> libao is generally an abstraction of them all, which has interesting consequences
19:56 < hillct> nathan7: forgot about npmignore...
19:56 < CoverSlide> hmm http://www.portaudio.com/
19:57 < TooTallNate> antidau: ya libao looks interesting
19:57 < TooTallNate> very small, yet lots of support
19:57 < hillct> nathan7: thanks. That of course was it. I completely overlooked it
19:59 < nathan7> hillct: C=
20:00 < hillct> nathan7: creationix must have been high when he did that commit though. Doesn't add any value, and breaks related module demos
20:00 < TooTallNate> CoverSlide: port audio might be a good one as well, thanks
20:00 < TooTallNate> what does ffplay use?
20:00 < CoverSlide> nathan7: you either have a frowny face with long legs or a happy face with big eyes a butt-chin
20:00 < antidau> TooTallNate: on debian, libao's pulseaudio output is broken currently
20:01 < creationix> hillct, what commit?
20:01 < nathan7> CoverSlide: A butt-chin.
20:01 < CoverSlide> awesome
20:01 < hillct> creationix: https://github.com/c9/architect/commit/922075b32bab5a3d1fceae0a13d63e2c032f672d
20:02 < hillct> creationix: doesn't that break the connect architect deno which expects architect.log to be there?
20:02 < hillct> or did that get changed around the same time?… checking
20:03 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:03 < tjfontaine> TooTallNate: isn't ffplay sdl?
20:03 < creationix> hillct, architect shouldn't bundle plugins
20:04 < creationix> hillct, are you trying to understand how to use architect
20:04 < creationix> I gave a talk about it recently
20:05 < creationix> http://creationix.github.com/chicagowebconf2012/
20:05 < hillct> creationix: yeah, I can see the reasoning behind that, but at the moment, with current master branches of each, connect, breaks the connect-architect demo which references architect.log https://github.com/c9/connect-architect/blob/master/demo/configs/default.js which is in itself easy to fix, and was only an issue for me because my app expects architect.log to be there. I can easily enough pull it in locally, now that I see what's up
20:05 < mbrzuzy> would anyone happen to know why my node server would run without errors, but not do anything else? I'm unable to connect to it as well
20:06 < creationix> hillct, yeah, there is some of right hand now knowing what left hand is doing there too
20:06 < CoverSlide> mbrzuzy: that's very little to go on
20:06 < creationix> I didn't do connect-architect or the plugin
20:06 < hillct> creationix: oh, cool. will check out the slide deck. ty
20:06 < CoverSlide> wow github is slooowwww for me today
20:07 < CoverSlide> mbrzuzy: what do you mean "unable to connect to it"?
20:07 < mbrzuzy> Believe me CoverSlide, I know.  It was working earlier today.  But now the server just doesn't do anything.  I'm unable to connect to the ip/port of a very basic (for testing) node app
20:07 < kickandrew> CoverSlide: slow as hell
20:08 < mscdex> they must not be using node.js!
20:08 < mscdex> (for the main site) :p
20:08 < CoverSlide> mscdex: they are running rails
20:08 < CoverSlide> i think that's public knowledge
20:08 < creationix> hillct, btw, the http.js plugin I use in my slides is a lot leaner and optimized for architect than connect-architect
20:08  * gluxon doesn't think a ChanServ message is necessary for this channel.....
20:08  * mscdex shakes a fist at rails
20:09 < hillct> creationix: is that stack.js?
20:09 < creationix> no, it's hand-made just for architect
20:09 < creationix> but it's mostly stack and connect compatible
20:10 < creationix> I'm using send to serve static files (send was made for connect)
20:10 < creationix> if github ever loads, the source to my talk and all the sample code is at http://github.com/creationix/chicagowebconf2012
20:10 < hillct> creationix: you'd mentioned it before. I hadn't had a chance to port to it but it sounds like it should be a drop in replacement
20:14 < antidau> TooTallNate: pushing to github right now, somehow it's extremely slow right now
20:15 < CoverSlide> antidau: so it was you!
20:19 < wockan> anyone used neo4j with nodejs?
20:19 < nathan7> wockan: There are libs for it
20:20 < wockan> yeah i know. But i would like to share experiance :)
20:22 < antidau> TooTallNate: if you want the code now, send me a ssh pubkey and you can get access to my private git server
20:23 < antidau> TooTallNate: forget it, pushing to github succeeded: https://github.com/antidau/node-despotify
20:24 < wockan> github slow?
20:24 < joehoyle> wockan: down
20:24 < wockan> slow then :p
20:25 < joehoyle> hehe yeah
20:38 < therealkoopa> ddos attack on github
20:38 < wao> seems.
20:38 < wao> status.github.com
20:40 < gluxon> Who would DDoS github...?
20:40 < gluxon> Kind of lame...
20:41 < dragon> I can think of many who'd love to.
20:41  * dragon points at bitbucket
20:41 < gluxon> dragon: Ah, competition.
20:43 < mbrzuzy> CoverSlide, seems the issue was that some firewall ended up blocking traffic to the port I was using
20:43 < CoverSlide> that would explain it
20:43  * CoverSlide shakes a fist at Atlassian
20:44 < CoverSlide> fuck Jira!
20:44 < chovy> them's some strong words CoverSlide 
20:47 < generalissimo> anybody ever had a problem where you install via NVM and then just get the error "cannot execute binary file" when you try to run `node`?
20:48 < CoverSlide> very weird
20:48 < generalissimo> i'm having that problem on my Raspbian install
20:48 < crazynod1> does it have executable permission?
20:48 < generalissimo> yup
20:48 < CoverSlide> hmm nvm builds it right?
20:48 < crazynod1> and 'which node' gives you the correct path?
20:48 < CoverSlide> perhaps it got currupted somehome
20:48 < CoverSlide> try doing a rebuild
20:49 < generalissimo> yeah `which node` shows the right one
20:49 < generalissimo> well here's the weird thing - i'm not sure if it's building
20:49 < crazynod1> also try another version of node
20:49 < chovy> generalissimo: is this in a startup script by chance?
20:49 < generalissimo> it gets to 100% in the status and then says "Now using node x.x.x"
20:49 < chovy> out of /etc/init.d
20:49 < generalissimo> no
20:50 < generalissimo> i tried several node versions
20:50 < chovy> echo $PATH in your scfript
20:50 < joehoyle> generalissimo: I just installed it too, what version did you install?
20:50 < generalissimo> what version of node or of nvm?
20:50 < joehoyle> node
20:51 < elliottcable> Nexxy: When did purr get banned from here? Was somebody abusing him?
20:51 < generalissimo> last one i tried is 0.9.2
20:51 < CoverSlide> elliottcable: it was saying no a lot
20:51 < generalissimo> before that 0.8.9 and 0.8.12
20:51 < elliottcable> Odd. How long ago? Lemme check my logs
20:51 < joehoyle> generalissimo: hmm i used 0.8.10 i think, I'll just double check
20:52 < generalissimo> i'm trying 0.6 now
20:52 < joehoyle> generalissimo: thats ooold! yeah 0.8.10 i used
20:53 < generalissimo> well none of the new ones have worked
20:53 < generalissimo> so i might as well try this now
20:54 < generalissimo> i dunno, i've never had a problem with nvm before
20:54 < crazynod1> try as another user
20:54 < CoverSlide> elliottcable: http://piscisaureus.no.de/node.js/2012-10-17#21:19:15.991 << this is where all the 'no's started happening
20:54 < generalissimo> okay so with 0.6 it's actually building
20:55 < generalissimo> with 0.8 and 0.9 i think it's just downloading a binary?
20:55 < generalissimo> and the binary's messed up?
20:55 < generalissimo> OHHHHH
20:55 < generalissimo> this is a raspberry pi
20:55 < generalissimo> i think it's maybe giving me an x86 binary
20:55 < crazynod1> that's a heck of a bug
20:56 < chovy> what is raspberyy pi
20:56 < elliottcable> CoverSlide: Mmm, I think devyn was doing bad things with it. Nonetheless, it no longer does this.
20:56 < chovy> jsj was talking about it the other day
20:56 < elliottcable> Nexxy: if you're amenable, unban? :0
20:56 < generalissimo> chovy: tiny ARM computer
20:56 < joehoyle> generalissimo: did you set ARM flags before building?
20:56 < CoverSlide> this is madness ... this is rasberry pi!
20:56 < generalissimo> joehoyle: building what?
20:56 < chovy> 2010, rock on
20:56 < elliottcable> mbalho: ah, you're the one who banned him
20:57 < generalissimo> `nvm install 0.8`
20:57 < generalissimo> it's supposed to build itself, but i think maybe it detected linux and said "gimme that linux x86 binary and i'll just use that crap"
20:57 < generalissimo> or something
20:57 < generalissimo> does nvm have binaries now?
20:58 < joahg> Hey, is anyone on?
20:58 < CoverSlide> I wouldn't use nvm, i prefer give
20:59 < joahg> Can anyone point me to a good book reference for learning Node.JS?
20:59 < crazynod1> it's harder to google for 'give' related problems
21:00 < CoverSlide> wget https://raw.github.com/mmalecki/give/master/give.sh
21:00 < chovy> joahg: look on github
21:00 < chovy> books are obsolete
21:01 < joahg> Well, ok, yeah, I read on my Nook :)
21:01 < chovy> amazon has a few
21:01 < chovy> up and running with node
21:01 < chovy> but tbh, most of the code is going to be outdated
21:01 < CoverSlide> generalissimo: it looks like it does: https://github.com/creationix/nvm/blob/master/nvm.sh#L176-204
21:02 < chovy> joahg: what are you trying to learn?
21:02 < generalissimo> yeah i'm looking at this now https://github.com/creationix/nvm/pull/152/files
21:02 < joahg> chovy: But, would you, as (I assume) an experienced Node.JS user, say those are *good* books?
21:02 < chovy> do you want to build web apps, mobile apps, apis, or something totally differnt?
21:02 < CoverSlide> joahg: http://docs.nodejitsu.com/
21:02 < CoverSlide> node is constantly changing
21:02 < generalissimo> i'd bet good money that it is, in fact, giving me linux x86 binaries
21:02 < joahg> Well, I want to become proficient in it, whether I'm going to actually build something :)
21:02 < chovy> joahg: i've only read one of them. I tend to look for examples on the web
21:02 < CoverSlide> a book would become outdated in as little as 3 months
21:03 < chovy> joahg: there's also nodetuts
21:03 < CoverSlide> joahg: read the api docs, that's a great place to start
21:03 < joahg> Ok, that's a good idea :)
21:04 < joahg> I have already done the Node Beginners book, but I still don't feel like I *completely* understand it
21:04 < chovy> joahg: http://dreamerslab.com/blog/en/write-a-todo-list-with-express-and-mongodb/
21:04 < CoverSlide> i assume you understand what node is, we have a lot of people coming thinking it's something like PHP or rails
21:04 < chovy> that's a pretty good one if you're using express+monog
21:04 < CoverSlide> node beginners is a good place to start
21:04 < chovy> joahg: http://stackoverflow.com/questions/12507560/node-blogs-screencasts-and-resources-to-watch/12507886#comment16834592_12507886
21:05 < joahg> Well, sorta, I haven't ever done a backend framework before, and I figured I'd go ahead and try Node.JS
21:05 < CoverSlide> http://www.nodebeginner.org/ << i found this gives a good overview
21:06 < joahg> Yeah, that's what I said, I've already done that one, but I still don't feel like I understand it...
21:06 < joahg> Mostly, I need someone to tell me, as a Web Dev (not an app creator), why I need to learn backend coding *at all,* I still don't really understand it :)
21:07 < chovy> joahg: it's better to decide what you want to build with it and focus on learning that
21:07 < xonecas> Any recomendations on what to look for when writing regexp for user input validation?
21:07 < xonecas> (like in a REST api)
21:07 < chovy> "how do I learn C++" is going to be wide spread, vs. "how do I learn to build web apps with C++"
21:07 < chovy> xonecas: i use expresss-validator
21:07 < joahg> chovy: Ok, yeah, and I have considered that, but I would more rather already have the tools when I need them, than need them and not have them :)
21:08 < chovy> shit your pants, dive in and swigm.
21:09 < chovy> i'm on my third node project, and i'm still learning how to do things properly.
21:09 < chovy> reading all about it is not going to get me as far as real experience.
21:09 < xonecas> chovy: thanks, I'll have a look in the source. If you have any tips on sanitizing input for mongodb as well, i would be greatly appreciated
21:09 < joahg> chovy: yeah, ok, but at least, *you can do things*
21:10 < joahg> The farthest I've gotten was using handlers to point requests to web pages
21:10 < chovy> http://expressjs.com/guide.html joahg 
21:10 < chovy> joahg: trust me, my first app was probably just like yours
21:11 < chovy> if ( req == '/stream' ) doStream()
21:12 < joahg> Well, that's part of what I'm saying, I'm not trying to build an app, I'm just a Web Dev, and I figure if I *try* to learn Node, then I might find something that I can use, but I still don't exactly know what I'm looking for :)
21:12 < chovy> build a todo list
21:12 < chovy> that's what i'm working on
21:12 < chovy> i'm not doing it professionally yet, i just build it in my spare time to learn it. Then i'll decide if I want to get a job doing it.
21:12 < xonecas> joahg: build something you want/need, it helps keeping you motivated
21:12 <@Nexxy> elliottcable, I have no clue
21:13 <@Nexxy> elliottcable, mbalho set the ban but he said I can remove it
21:13 < elliottcable> Nexxy: it's fine, looks like somebody was abusing it. Unban if you love me? <3
21:13 <@mbalho> you are lucky she has 6 glasses of whisky in front of her
21:13 < chovy> joahg: the event based programming is pretty easy to pickup if you've ever done ajax in the client side
21:13 -!- mode/#Node.js [-b *!*purr@ell.io] by Nexxy
21:13 < joahg> xonecas: well, that's just it, I don't that I *need* anything
21:14 < elliottcable> Nexxy: what whisky!?
21:14 <@Nexxy> hahahaha
21:14 <@Nexxy> a bunch of different kinds
21:14 <@Nexxy> we just heard a talk about them all
21:14 < elliottcable> dude SPILL
21:14 <@Nexxy> I DON'T KNOW
21:14 < elliottcable> details. all of them.
21:14 <@Nexxy> I'LL GET THE PAPER
21:14 < joahg> Sorry, I don't know that I need anything
21:14 <@Nexxy> one of them is green spot
21:14 <@Nexxy> ?
21:14 < elliottcable> oh my god a talk about whiskey!?
21:14 < elliottcable> WHAAAAAT
21:14 <@Nexxy> yes
21:14 <@mbalho> yea at node dublin
21:14 <@Nexxy> it's Ireland
21:14 < elliottcable> HOW DID I MISS THIS
21:14 <@mbalho> we also have a soldering iron
21:14 < elliottcable> Green Spot!
21:14 <@Nexxy> because you're too busy being an ass!
21:14 < elliottcable> a single-pot stille Irish whiskey
21:14 <@Nexxy> and ignoring me
21:14 < elliottcable> oh my god this is no fair
21:14 <@Nexxy> yes
21:14 < elliottcable> Node *and* whiskey
21:14 <@mbalho> and robots
21:14 < elliottcable> WHY AM I NOT THERE
21:14 <@Nexxy> well that's what you get
21:14 <@mbalho> and a fog machine
21:14 < elliottcable> lies I'd never ignore you shut your whore mouth and give me a hug
21:14 <@Nexxy> and fog machines
21:14 <@Nexxy> rofl
21:15 <@mbalho> and isaacs and me and mikeal in a horse drawn carriage
21:15 < elliottcable> fuck the robots, I just want whiskey
21:15  * Nexxy hugs elliottcable 
21:15 <@Nexxy> but you can't call me that here
21:15 < janmower> would anyone like some dtrace on linux?  https://github.com/joyent/node/pull/4164
21:15 < xonecas> joahg: then find something that would be benefitial to the node/web dev community
21:15 < xonecas> you can always help with some pull requests for open issues in the modules you do use
21:16 < joahg> xonecas: Well, ok, that's what I was hoping *you* (as the Node community) could help me with, I still don't know what I want :)
21:16 < xonecas> ok you want some ideas?
21:16 < joahg> Is Node *only* good for building apps? Because if so, then I don't really need Node...
21:17 < xonecas> write an html5 validator and minifier/beautifier for node
21:17 < elliottcable> Nexxy: come ##Hat so I can call you that there :3
21:17 < xonecas> use a node to build an analytics product
21:18 < chovy> mobile ads served by node
21:18 < joahg> Hmm... Ok, but Idk exactly how that would help me...
21:18 < xonecas> you'd learn how to node
21:18 < xonecas> and most of javascript
21:18 < xonecas> besides it would be fun :D
21:19 < xonecas> my github is mostly little projects like that
21:19 < joahg> Ok, here is a little more "educated" question, how do I edit frontend HTML/CSS with Node? I have tried Now.JS, but I keep running into problems
21:19 < chovy> mine too
21:20 < chovy> joahg: you could build your entire backend in node and use a js mvc on front-end, or if you want to build server side html, you can use templates.
21:20 < chovy> joahg: look at express
21:21 < chovy> https://github.com/chovy/express-template-demo
21:23 < joahg> Well, actually the *exact* situation I was trying, was this: I have a website, I set up Node.JS, and I got it running, serving up the webpages, then, after doing the Node Beginner's book, I decided I wanted to do a simple project of this: when a user enters in a "query" for "body" and sets it equal to something, it takes whatever "body" is equal to, and sets the background color of the site to that... 
21:23 < xonecas> joahg: node -> html
21:23 < darunia> what is a good book to learn javascript so that i may eventually become a node maestro? ^_^
21:23 < joahg> So like, http://localhost:8888/index.html?body=red would produce a red background
21:23 < xonecas> use node to render templates
21:24 < xonecas> so very simply put:
21:24 < joahg> darunia: Use codecademy.com, it is an awesome place to start
21:24 < chovy> darunia: secrets of a javascript ninja?
21:24 < xonecas> joahg: parse the querystring, check for a body value, render the page updating the style tag in the body
21:25 < xonecas> responde to the request with the freshly rendered html
21:25 < xonecas> darunia: +1 on codeacademy
21:25 < joahg> Yeah, I have gotten it as far as the updating the page part...
21:25 < joahg> xonecas: are you on there?
21:25 < xonecas> on where? codeacademy?
21:25 < joahg> yeah
21:26 < xonecas> yes
21:26 < joahg> Oooh, ok, I'm Marty McFly on there, you may have seen me :)
21:26 < chovy> joahg: you could do that in js, no need for round trip
21:26 < xonecas> I like their product, didn't learn much yet, but I'm hoping they introduce more advanced topics soon
21:26 < darunia> thx joahg & xonecas
21:26 < joahg> chovy: well, yeah, I realize that, I just wanted to do it to make a small project to learn it
21:26 < xonecas> I'm xonecas everywhere
21:27 < joahg> That is, Node.js
21:27 < chovy> app.get('/', function(req, res) { res.render('/index', { color: req.body.color } ); });
21:27 < chovy> then in index.ejs, you can do <%= color %>
21:28 < joahg> So what is "app.get?"
21:28 < chovy> express/connect route
21:28 < joahg> So will I need to require express?
21:28 < chovy> express makes it easier to build web apps
21:29 < chovy> http://expressjs.com/guide.html
21:31 < joahg> Ok, so I just want to see if I understand what is going on there... you are simply passing the "body" request and passing it to the html file?
21:31 < joahg> Or, where does it get passed to the HTML file?
21:35 < matesnae> Hi one good alternative to express ??
21:35 < niggler> matesnae: DIY
21:36 < garbagecollectio> what is the best way to get cleint side timezone offset from noe
21:36 < garbagecollectio> node
21:36 < matesnae> thanks niggler
21:37 < niggler> garbagecollectio: you can't do it from node
21:37 < garbagecollectio> well
21:37 < garbagecollectio> your wrong
21:37 < garbagecollectio> via IP
21:37 < niggler> tor?
21:37 < niggler> are you familiar with the tor anonymizing network?
21:38 < niggler> https://www.torproject.org/
21:38 < niggler> you can spoof the ip and do a slew of other things
21:39 < niggler> so the strict answer to "what is the best way to get cleint[sic] side timezone offset from noe[sic]" is you can't
21:46 < generalissimo> i solved my nvm problem
21:46 < generalissimo> it was, indeed, acting downloading x86 binaries
21:46 < CoverSlide> wtg!
21:46 < generalissimo> a/acting/
21:46 < generalissimo> s/acting/
21:46 < generalissimo> fuuuuu can't type
21:46 < CoverSlide> yeah tim needs to fix that
21:46 < generalissimo> i put in a PR
21:48 < generalissimo> can't believe i'm the first one to have that problem
21:48 < crazynod1> what os does rasberry pi run?
21:48 < generalissimo> i'm running adafruit's distro
21:48 < generalissimo> which is a variant of Raspbian
21:48 < generalissimo> which is a variant of Debian
21:49 < crazynod1> i wonder what is reporting that it's an x86/linux distro
21:49 < generalissimo> lol, lemme show you
21:49 < generalissimo> https://github.com/creationix/nvm/pull/155/files
21:49 < generalissimo> first it's hardcoded to x86
21:49 < generalissimo> then it looks for x86_64 and sets x64 if so
21:50 < generalissimo> never considers any other ISAs
21:50 < creationix> generalissimo, I pulled that one already
21:51 < generalissimo> oh weird, i didn't get a github email
21:51 < generalissimo> thx
21:51 < crazynod1> github got pwnd today, perhaps they're behind on their emails
21:51 < creationix> generalissimo, first I got the github email.  I ignored it, I was busy, then I saw the twitter mention, so I pulled the pr, then I saw my irc window blinking.  I half expected my phone to start ringing next ;)
21:51 < generalissimo> that's a good point
21:52 < generalissimo> creationix: hey now, i specifically didn't mention your name in chat because i already nagged you in two different media
21:52 < generalissimo> must have been someone else
21:52 < generalissimo> IT'S NOT MY FAULT
21:52 < creationix> generalissimo, you did when you linked to the repo
21:52 < creationix> it's ok
21:52 < generalissimo> ohhhh, right
21:52 < generalissimo> derp
21:53 < crazynod1> it's more of a 'pull demand' 
21:53 < generalissimo> lol
21:53 < creationix> anyway, hope it works
21:53  * creationix goes back to hacking on stuff...
21:53 < CoverSlide> hack away
21:53  * generalissimo goes back to waiting for raspberry pi to compile node
21:54 < generalissimo> "12 hours later..."
21:54 < creationix> generalissimo, luvit compiles a *lot* faster ;)
21:57 < generalissimo> O_o
21:57 < generalissimo> dat shit cray
21:59 < CoverSlide> does it really take 12 hours?
21:59 < joehoyle> This might be a silly question, but can I use http.get() on a https url?
21:59 < CoverSlide> i heard it takes a long time
22:20  * terinjokes is doing hacky things, like including url.js in the browser
22:24 < CoverSlide> terinjokes: that's nothing. try using Buffer, http, or vm in the browser
22:24 < CoverSlide> terinjokes: or childprocess
22:25 < rburton-> re
22:30 < cjdavies> what is the preferred installation directory for Debian?
22:30 < cjdavies> the instructions on github implu /root
22:30 < cjdavies> s/implu/imply/
22:31 < CoverSlide> cjdavies: usually there's /usr/local/ for hand-built stuff
22:31 < CoverSlide> although I prefer to use $HOME
22:32 < cjdavies> righto
22:33 < cjdavies> now to build on the immense power of a single core celeron
22:37 < crazynod1> i always install with a version manager, like nvm
22:37 < cjdavies> I very rarely install anything not through the distro's package manager
22:37 < cjdavies> but I would need to grab the sid package, which I guess I could do
22:38 < CoverSlide> well when you're working with beta software (which node is) that's not always an option
22:38 < crazynod1> i used to always use the package manager, but nvm has proved pretty damn useful
22:39 < terinjokes> CoverSlide: buffer was mimiced with an arrau
22:39 < terinjokes> CoverSlide: and clearly some of those things don't make sense in a browser
22:40 < CoverSlide> they'd make sense in a desktop app
22:40 < cjdavies> but for some reason apt can't find the package in sid :/
22:40 < CoverSlide> why is the browser any different
22:40 < terinjokes> CoverSlide: i never disagreed
22:40 < terinjokes> CoverSlide: because last time I checked, IE doesn't expose any forking ability
22:40 < cjdavies> oh wow it's outdated like woah anyway
22:41 < cjdavies> sometimes I forget that even debian unstable is about 6 months behind
22:41 < CoverSlide> IE is a piece of shit
22:41 < siksia> ^
22:41 < terinjokes> CoverSlide: that might be the case, but nonetheless supported
22:41 < CoverSlide> some computers don't have displays, but you're not developing for those computers either
22:42 < terinjokes> the url library works more or less in the browser, little flaky in IE (protocols don't get formatted correctly)
22:42 < terinjokes> moved it over to a branch to integrate later
22:44 < CoverSlide> terinjokes: source?
22:44 < terinjokes> CoverSlide: what do you mean?
22:44 < CoverSlide> where's the source for this project of yours?
22:44 < terinjokes> CoverSlide: it not open source
22:44 < CoverSlide> no?
22:44 < CoverSlide> that makes me a sad panda
22:45 < terinjokes> i'll probably publish my changes to the url library once I work on it more
22:45 < terinjokes> in the meantime, pop'd off the changes and working back in my custom-rolled library
22:48 < Cainus> hey all... anyone have suggestions on how I can manually reproduce EPIPE in a test?  I'm tired of waiting for it to happen to see if I've handled it properly.  ;)
22:48 < tprice> how would i debug a forked process?
22:49 < niggler> cainus: kill
22:49 < niggler> or bash pipefail
22:50 < niggler> tprice: fork the debugger :)
22:50 < Cainus> niggler, what do you mean by 'kill'?
22:50 < niggler> are you on linux cainus 
22:50 < Cainus> yeah or osx... whatever
22:50 < Cainus> I can do either easily
22:51 < niggler> i think you can send sigpipe with the `kill` command
22:51 < Cainus> anyway to repro it entirely from node code though?  so I can put it in my test suite?
22:51 < niggler> (command line tool)
22:52 < niggler> http://nodejs.org/api/process.html#process_process_kill_pid_signal
22:52 < Cainus> hmmm I was hoping not  tobe forking processes in the test suite though
22:53 < Cainus> I guess I could put a fake server right in the test, connect to it, kill it, and then try to write....
22:56 < brianc> hai
22:57 < brianc> just released a little web testing module built on mocha: https://github.com/brianc/node-omf
22:57 < jtomasrl> how should i find the table number 1 using mongodb in a collection like this one: [{"name": "foo", "tables": [{"number": 1}, "number": 2]}]
22:58 < naquad> did someone here read Professional Node.js: Building Javascript Based Scalable Software? is it good?
22:59 < naquad> or should i buy something else?
22:59  * elliottcable pats purr
22:59  * purr rr
22:59 < elliottcable> Good boy.
22:59 < niggler> that's so sad
23:19 < mdedetrich> hi everybody!
23:24 < fat> has anyone found any good solutions for automating img spiriting?
23:25 < fat> spriting* 
23:25 < fat> that you could recommend ?
23:39 < garbagecollectio> i keep getting a reference error
23:39 < garbagecollectio> with now.js
23:39 < garbagecollectio> on the client side
23:42 < ChrisPartridge> fat: i looked recently, couldn't find anything decent
23:42 < fat> yeah :(
23:42 < fat> sad times
23:44 < ChrisPartridge> how would you envisage something like that working? point it to img sources, creates sprite, outputs html file for visual reference?
23:45 < fat> i think this is done pretty well https://github.com/jorgebastida/glue
23:47 < ChrisPartridge> that does look pretty decent
23:47 < nezZario> where can I get a overview of node.js ?
23:47 < nezZario> like, wtf is npm?
23:48 < ChrisPartridge> npm = package manager
23:48 < nezZario> installing it now .. completely new to it .. trying to read over docs but mostly language reference from what I can tell
23:49 < nezZario> node.js is a both client side javascript lib and a server side http server, correct?  the client/browser side library choosing the best way to make async js calls?
23:49 < ChrisPartridge> nezZario: http://www.nodebeginner.org/ might be a good place to start
23:49 < ChrisPartridge> nezZario: node is server side
23:49 < nezZario> i thought there was an accompanying browser side library 
23:49 <@Nexxy> nezZario, node.js is a javascript platform for network applications
23:49 <@Nexxy> nezZario, there are a lot of browser side libs that you can use, none of them are "official".
23:50 < ChrisPartridge> nezZario: some packages try to close the gap, like browserify for example
23:50 <@Nexxy> browserify is definitely my recommendation
23:51 < nezZario> i'll check it out.  somebody told me that there was a 'client side' part that basically selected the best / fastest way to do real time async calls
23:51 < nezZario> going to eat dinner and dive right into this
23:52 < ChrisPartridge> nezZario: said person may have been talking about socket.io
23:53 < aandy> you can tell by which hole the words came from
23:56 < garbagecollectio> why won't now.js send my shit over
23:56 < garbagecollectio> its calling the function
23:56 < garbagecollectio> no namespace errors
--- Log closed Fri Oct 19 00:00:34 2012
