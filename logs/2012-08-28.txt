--- Log opened Tue Aug 28 00:00:20 2012
--- Day changed Tue Aug 28 2012
00:00 < ccowan> you need have something like app.use(function (err, req, res, next) { ... });
00:01 < exien> ccowan: I will try that now
00:02 < ccowan> exien: in there you need to do a res.send() or res.render()
00:02 < exien> ccowan: yeah, I'll try res.send(500);
00:02 < exien> brb
00:06 < exien> ccowan: no dice, but it shows up as an uncaught exception
00:06 < exien> from process.on('uncaughtException'
00:09 < samholmes> Do I have to install the latest version of Node on windows and will it break my apps?
00:10 < chilts> samholmes: from what version are you upgrading from?
00:10 < samholmes> chilts: 6 I think
00:10 < chilts> v0.6.x ???
00:10 < samholmes> yeah
00:10 < chilts> in which case, take a look at the docs saying the changelog from v0.6.x to v0.8.x :)
00:10 < samholmes> 0.6.12
00:10 < chilts> then decide for yourself if it will break anything
00:11 < samholmes> chilts: But is it necessary for bcrypt?
00:11 < chilts> generally you should be ok, but there have been changes
00:11 < chilts> samholmes: that's for you to decide - I have no idea of your use-case
00:11 < samholmes> https://github.com/ncb000gt/node.bcrypt.js/
00:11 < Hoppertje> when i try to "overload" node.js my windows taskmanager says node.js is only taking 13% of my cpu... is that a false reading or do i need allow node to use more cores ?
00:11 < samholmes> "Windows users should make sure to have at least node 0.8.5 installed and version >= 0.7.1 of this module."
00:12 < chilts> well, he's probably put that there for a reason and he's also probably best placed to know why :)
00:12 < chilts> really, if the maintainer says so, why are you asking other less qualified people :D
00:12 < chilts> I really don't know
00:13 < samholmes> good point
00:13 < Hoppertje> does anybody know?
00:14 < samholmes> where's the changelog?
00:14 < samholmes> Hoppertje: Yes
00:14 < Hoppertje> samholmes: is there a way to use all the cores?
00:14 < samholmes> Hoppertje: Idk
00:14 < Hoppertje> ...
00:15 < maxogden> Hoppertje: http://nodejs.org/api/cluster.html
00:15 < Hoppertje> alright, thanks
00:17 < CIA-1> node: Bert Belder v0.8 * r2418434 / lib/child_process.js : windows: fix single-accept mode for shared server sockets - http://git.io/LATKjw
00:23 < samholmes> How do I upgrade node.js version?
00:23 < samholmes> Run the installer?
00:23 < samholmes> How do I upgrade on my linux server?
00:27 < samholmes> "node-waf was unexpected at this time." when installing brcrypt on windows.
00:27 < samholmes> Fuck node-waf. -.-
00:28 < samholmes> Either that, or fuck windows.
00:28 < substack> gyp
00:28 < samholmes> gyp?
00:28 < substack> is the good one
00:28 < samholmes> gyp is something?
00:28 < substack> that works on winders
00:28 < samholmes> Ah
00:28 < samholmes> But, bcrypt is using node-waf
00:29 < samholmes> I have to fork bcrypt then modify it to use gyp then?
00:29 < samholmes> FML
00:29 < TooTallNate> samholmes: bcrypt uses node-gyp
00:30 < samholmes> TooTallNate: That's not what the console is telling me. :\
00:30 < TooTallNate> what version of crypt?
00:30 < samholmes> http://pastie.org/4600513
00:32 < LuckySMack> anyone in here use/maintain hook.io? I am getting this error when installing on windows: C:\Program Files (x86)\nodejs\node_modules\hook.io\node_modules\weak\build\weakref.vcxproj(1,643): error MSB4019: The imported project "C:\Microsoft.Cpp.Default.props" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.
00:33 < samholmes> TooTallNate: Whatever version `npm install bcrypt` gives
00:34 < samholmes> TooTallNate: http://pastie.org/4600513 shows the version
00:34 < TooTallNate> samholmes: i think you need to update npm
00:35 < TooTallNate> 1.1.4 is kinda old
00:36 < samholmes> TooTallNate: Do I run `npm install npm -g` or somethin?
00:36 < samholmes> Forgot how to update npm
00:36 < TooTallNate> samholmes: on windows? it's usually best to just update to latest node+npm using the .msi installer
00:37 < samholmes> TooTallNate: And on linux? I have a VPS
00:38 < TooTallNate> `npm install -g npm` is usually the way to go
00:38 < TooTallNate> on unixes
00:38 < samholmes> I see
00:39 < samholmes> Fuck credit companies for not accepting my applications and enabling me to get a Macbook for my work to pay their fat asses. >.<
00:39 < samholmes> TooTallNate: And to update Node itself on linux?
00:40 < TooTallNate> samholmes: i'd recommend the precompiled binaries
00:40 < TooTallNate> http://nodejs.org/dist/v0.8.8/
00:40 < samholmes> TooTallNate: where do I put these binaries?
00:41 < TooTallNate> anywhere
00:41 < TooTallNate>  /usr/local is common
00:41 < samholmes> TooTallNate: node is not recognized now.
00:42 < samholmes> After I ran the msi
00:42 < TooTallNate> you probably need to close and re-open node
00:42 < TooTallNate> i mean the cmd window
00:42 < samholmes> I did
00:43 < samholmes> Maybe I have to restart
00:43 < samholmes> brb
00:45 < nkuttler> has anybody here used piwik for server-side analytics tracking?
00:45 < CIA-1> node: Bert Belder master * r4822d78 / (29 files in 8 dirs): uv: upgrade to 621a4e3 - http://git.io/2l3fiw
00:58 < meme> is there anyone using https://github.com/nodejitsu/forever ? i installed, went to my app folder, and inserted the command: forever start -l forever.log -o out.log -e err.log app.js. everything went fine, but then i did forever stop app.js, then when i tried to restart, i got errors, such as error:   log file /home/meme/.forever/forever.log exists. Use the -a or --append option to append log. what one should do to restart properlly forever?
00:59 < jesusabdullah> meme: Come to #nodejitsu and show us some full log output, we can probably help you there
00:59 < meme> ok
01:00 < samholmes> I updated node and npm and now I get this error when installing bcrypt http://pastie.org/4600607
01:01 < CIA-1> node: Bert Belder master * rbf16d92 / (231 files in 49 dirs): Merge branch 'v0.8' (+36 more commits...) - http://git.io/qnFafA
01:03 < TooTallNate> samholmes: gyp ERR! stack Error: Can't find Python executable "python", you can set the PYTHON env variable.
01:03 < TooTallNate> so do you have python installed?
01:04 < samholmes> TooTallNate: No. Why would I?
01:04 < TooTallNate> cause it's a dependency of node-gyp
01:04 < TooTallNate> https://github.com/TooTallNate/node-gyp#installation
01:08 < samholmes> Why is python required?
01:10 < nkuttler> samholmes: find /path/to/source/ -name *py
01:10 < samholmes> nkuttler: what does that do
01:11 < nkuttler> are you on windows?
01:11 < samholmes> nkuttler: yes
01:11 < nkuttler> it finds files that end in py
01:11 < samholmes> why do I want that?
01:11 < nkuttler> never mind, it seemed vaguely related to your question
01:14 < CIA-1> node: Bert Belder v8-trunk * r03c1968 / (338 files in 23 dirs): v8: update to 12390 - http://git.io/4DYNTQ
01:14 < CIA-1> node: Bert Belder v8-trunk * ree484a5 / (deps/v8/build/common.gypi deps/v8/tools/gyp/v8.gyp): v8: reapply floating patches - http://git.io/LXeFxw
01:14 < CIA-1> node: jkummerow@chromium.org v8-trunk * r65d4dab / (11 files in 3 dirs): Add a new API V8::SetJitCodeEventHandler to push code name and location to users such as profilers. - http://git.io/8V595g
01:16 < samholmes> http://pastie.org/4600607
01:16 < samholmes> Now that's the error I'm getting after installing python ^.
01:18 < comster404> anyone else getting an error with 8.8 when running "sudo ./configure" I get ---  File "./configure", line 325      o['default_configuration'] = 'Debug' if options.debug else 'Release'
01:19 <@piscisaureus_> comster404: use python 2.7
01:19 < comster404> ok
01:19 < testingz0> npmjs.org is...STABLE
01:20 <@piscisaureus_> samholmes: apparently node-gyp picks the wrong compiler (one that does not support x64).
01:21 <@piscisaureus_> samholmes: report it to the node-gyp tracker. To work around it temporarily you can try installing the x86 version of node
01:25  * gqbe watches people's clients come and go
01:28 < chylli> Is there a framework like rails on ruby on node.js ? or must I write app from 'createServer' ?
01:29 < cliffano> chylli: check out http://geddyjs.org/
01:30 < drudge> chylli: railwayjs.com locomotivejs.org
01:32 < chylli> thanks very much
01:34 < Nuck> Composable API docs (or examples) for mike al's Request library — do they exist?
01:36 < Init--WithStyle-> Anyone familiar with mongoDB queries help me using mongolian? worldTiles.find({elevation: 4}, {elevation:1}).toArray(function (err, array) {  <-- produces an undefined array :/
01:36 < Init--WithStyle-> I don't know how to properly form the query..
01:45 < maxogden> anyone know a module that will take a folder and 'merge' the files recursively into a target folder?
01:46 < maxogden> e.g. if i have a source folder foo/bar.html and target folder foo/baz.html if i do 'merge(sourceDir, targetDir)' targetDir should have bar and baz in it
01:48 < maxogden> e.g. what cp -R does but it isnt on every *nix and isnt on windows
01:48 < comster404> @piscisaureus_, I built python 2.7, how do I point at it to compile node?  export PYTHON= ?
01:50 < maxogden> nevermind: https://npmjs.org/package/ncp
02:00 < mscdex> comster404: put it in your path
02:00 < mscdex> comster404: PATH=$HOME/bin:$PATH ./configure; make; make install
02:00 < mscdex> if python is in ~/bin
02:01 < mscdex> that's the quick and dirty way :-)
02:03 < comster404> mscdex, thanx that worked
02:12 < samholmes> is nodejs.org running on node.js? :P
02:12 < austinbv> rails
02:12 < austinbv> :P
02:15 < pringlescan> did anyone ever fix the github bot for in here? I'm not sure what the name of it was.
02:16 < mscdex> CIA?
02:16 < mscdex> it's been working for awhile now
02:16 < pringlescan> Oh, I haven't been here in a while.
02:22 < bingomanatee> Can you careate a function with an array of parameters and string for body or do you have to eval the whole thing?
02:24 < maxogden> function() { var arrayOfParameters = [1,2,3]; var string = "hello world" }
02:25 < comster404> now I get an error on "make install" is this still related to py?   python tools/install.py installFile "tools/install.py", line 219cmd = args[1] if len(args) > 1 else 'install'^SyntaxError: invalid syntax
02:44 < comster404> any suggestions for why "sudo make install" isn't working?
02:45 < Mortchek> comster404, any errors?
02:46 < Mortchek> `make install` is supposed to be the easy step
02:46 < astropirate> comster404, what error do you get
02:47 < Mortchek> Granted, it wouldn't work if you hadn't first run `make`. I assume you did that
02:52 < comster404> now I get an error on "make install" is this still related to py?   python tools/install.py installFile "tools/install.py", line 219cmd = args[1] if len(args) > 1 else 'install'^SyntaxError: invalid syntax
02:53 < jesusabdullah> that *looks* like python
02:53 < jesusabdullah> what version of python are you running?
02:54 < jesusabdullah> That looks like a, "works in python 2.6+ only" kind of thing
02:54 < comster404> Mortchek, that's what I thought... I compiled python 2.7 with bz2 and put it in my path, so the configure, and make worked ok
02:55 < comster404> and running node-v0.8.8/out/Release/node seems to work... just wish the install script worked
03:18 < Raynos> https://gist.github.com/3494638
03:18 < Raynos> Has anyone written a module that does that ^
03:44 < mscdex> Raynos: what's the use case?
03:45 < mscdex> comster404: probably the 'sudo' is not getting the same $PATH
03:45 < Raynos> mscdex: https://github.com/Raynos/re-emitter 
03:45 < Raynos> It's basically for inheritance
03:46 < mscdex> comster404: try `sudo PATH=/place/to/python:$PATH make install` or next time just use one of the pre-built binaries packages ;-)
03:47 < comster404> mscdex, ya thx, I tried running $PATH as sudo to try and figure that out... then I ran it as "su" or something and found it installed to /usr/local/bin or something... so I'm just pointing there from my init.d ... whew.  Thx for your help
04:12 < zivester> What's a good way to get people to look at my package and gain some feedback on it? (first time module creator)
04:13 < coderarity> zivester, lots of people tweet about stuff they make
04:13 < zivester> ah man, i dont have a tweeter... at least not for myself :-/
04:16 < gildean> zivester: why not paste a link here and ask for feedback?
04:18 < zivester> figured it's too late, but here is my very simple tool https://github.com/zivester/node-quickthumb
04:19 < zivester> looking for any and all feedback, my style, the code... or features you would like to see
04:20 < zivester> i've stumbled on a couple oth modules that do some parts of this, was hopiing to see what parts others appreciate
04:20 < gildean> zivester: take not that i just woke up and most of the western world is still asleep, you might not get much feedback at this hour
04:20 < gildean> note*
04:21 < zivester> so *I* must be awake during the day?? preposterous
04:22 < gildean> zivester: but it looks ok, how fast is it?
04:23 < zivester> its simple... only uses imagemagick and stores a local cache... not much esle to that
04:23 < zivester> could move to graphics magick and move to streamed images
04:24 < coderarity> zivester, being awake during day is overrated
04:24 < gildean> also as it's directly related to express, you might want to join #express as well
04:24 < zivester> noted, thanks  gildean
04:24 < zivester> coderarity... being awake at all sucks
04:26 < djshotglass> herp derp
04:27 < djshotglass> never used nodejs is it normal pratice not to use a httpd like lighttpd/apache?
04:27 < djshotglass> or is the webserver thats spawned by running 'node subway' just for dev testing
04:28 < zivester> i haven't gotten into the server part.. its good for rapid prototyping
04:28 < zivester> very few instances of a Node Server that would just run as is
04:29 < clooth> I am dog
04:30 < gildean> djshotglass: no reason why not, most people just create more customized server stacks instead of a general one
04:42 < exien> The mysql package (which i'm using for db access) throws an exception if the database goes down it. But how am I supposed to return an error callback from my model file to close the request if I never get a chance to do so? 
04:49 < astropirate> exien, try {} catch(e) { mew() }
04:51 < exien> astropirate: I've tried that, but the mysql code is async and uses events, so I can't catch it
04:52 < astropirate> AHHH
04:52 < astropirate> no clue then
04:54 < exien> astropirate: k thanks
05:16 < nonuby> confusing terminology. is this http://nodejs.org/api/net.html#net_socket_setnodelay_nodelay saying that sockets are nodelay by default or just referring to the arg?
05:17 < samholmes> What's the term for thie initial product on a startup?
05:17 < samholmes> there's an acronym for it.
05:17 < samholmes> what is is again?
05:17 < Mortchek> nonuby, the argument.
05:17 < nonuby> thanks very nearly missed that
05:17 < Mortchek> nonuby, whenever you see some identifier in the description of a function/method, and the same identifier appears in the signature, you can assume they refer to the same thing.
05:20 < xpollen8> trying to use filed pipes.  how does one over-ride filed-chosen mimetypes?  also, how to set Content-Disposition?  not in dox..
05:21 < wookiehangover> http://i.gif.ly/42fcc0f8.gif
05:47 < worr> hey, fast question
05:47 < worr> when writing a native module, how can I execute code when instances of my object fall out of scope?
05:47 < worr> I want to do some cleanup, so I popped it into my destructor, but it doesn't seem to get called
05:47 < ljharb> destructor?
05:47 < ljharb> oh, a native module
05:49 < worr> ljharb: mhmm, any idea?
05:50 < ljharb> nope, i don't know anything about native modules
06:08 < bright_day> window close
06:08 < bright_day> window exit
06:09 < Industrial> Anyone use Stylus? I have this weird case where every now and then the stylus output file (css) is blank
06:19 < chakrit> anyone knows this guy fictorial?
07:24 < darrenlooby> Anyone got experience of writing a https app in express 3.x?
07:39 < [AD]Turbo> hi there
07:43 < NuZZ> Hey guys is it possible to create a node IRC botnet? Ie. the functionality of communicating messages between seperate node process possibly hosted on different servers and connected to different networks?
07:43 < NuZZ> ie. eggdrop botnets
07:43 < NuZZ> I'm so tired of shitty eggdrop :|
07:43 < substack> everything is possible
07:43 < substack> the only limit is yourself
07:43 < NuZZ> has it been done then?
07:43 < NuZZ> fucking yoda!
07:44 < substack> NuZZ: https://github.com/hookio/hook.io https://github.com/substack/dnode https://github.com/isaacs/sodn
07:45 < NuZZ> clicking...
07:47 < NuZZ> interesting. I googled this and did find that IRC bots were built around hook.io
07:47 < NuZZ> thanks. 
07:48 < NuZZ> all that is left is to wonder if anyone has gone further with the IRC bot side of things
07:49 < NuZZ> there is everychance it can all be done with hookio, and I am just dyslexic atm. :)
07:51 < AAA_awright> I'm conserned that people write packages, which are fantastic, but then they go unmaintained
07:51 < AAA_awright> Like this: https://github.com/visionmedia/send/issues/9
07:52 < AAA_awright> Or Mongolian, a fantastic MongoDB driver, except for a quirk with connection.close() which I don't see getting fixed within the year
07:53 < AAA_awright> It's easy enough to write fixes for the packages, but then someone has to push an update for them
07:53 < AAA_awright> And people are just unwilling to do that
07:54 < mmalecki> AAA_awright: I usually just add people to my old packages
07:54 < mmalecki> if they seem interested.
07:54 < AAA_awright> mmalecki: How's that work?
07:54 < mmalecki> AAA_awright: you mean how do I do that? `npm owner add <new-owner> <package>`
07:54 < mmalecki> or, for you, you could edit couch directly :)
07:55 < AAA_awright> Oh
07:55 < AAA_awright> But then you have to trust people
07:55 < AAA_awright> mmalecki: I like Linus in his Google Tech Talk: "I'm a very untrusting person, I shouldn't have to trust anyone"
07:56 < AAA_awright> I think I'm ready to announce https://github.com/Acubed/git-node to the mailing list but I'd like to make sure it's mostly feature-complete, anyone want to try it out?
07:57 < mmalecki> AAA_awright: oh well, I don't really like that attitude, I like trusting people. and it never got me anything wrong in this community
07:57 < mmalecki> in real life, on the other hand!
07:59 < AAA_awright> mmalecki: If you can get away with not trusting people, why not?
07:59 < AAA_awright> It means you can experiment with things more, and you take on less risk
07:59 < NodeX> the world is a lonely place when you dont trust anyone
07:59 < AAA_awright> It's everything that Git gave to revision control
07:59 < AAA_awright> No it's not?
07:59 < mmalecki> AAA_awright: well, yeah, I see pros of that concept :)
08:00 < AAA_awright> I can work with people without trusting them
08:00 < NodeX> work != connection
08:01 < AAA_awright> Quoth Linus again: "Maybe <X coworker> forgot to take his meds today, who knows"
08:01 < AAA_awright> iirc
08:01 < NodeX> "I heard it on the internet, It must be true"
08:01 < dreamerslab> hi guys is there a way to switch the `require` path?
08:06 < sorin7486> we had a guy around here that forgot to take his meds
08:06 < sorin7486> he broke a few doors one morning
08:06 < sorin7486> :)
08:07 < sorin7486> scared the hell out of his colleagues  
08:07 < sorin7486> dreamerslab, what do you mean ?
08:08 < dreamerslab> thanks for the reply, normally require looks for `node_modules` in the current dir
08:08 < dreamerslab> is there a way to switch it to another dir?
08:09 < sorin7486> I think you can add NODE_PATH as an environment variable
08:09 < sorin7486> and you can specify a place for it to search for modules
08:09 < sorin7486> try node --help
08:10 < sorin7486> I also think I've seen a setting somewhere to do this but I can't find it right now
08:10 < sorin7486> but why would you want to do that?
08:11 < dreamerslab> i think i've seen that on nodejs goole group but i can't find it either :(
08:11 < dreamerslab> setting the NODE_PATH does not seem to work in my case
08:12 < dreamerslab> actually i want to require models in local package but calling in global
08:13 < dreamerslab> and the local package require another module in locals as well
08:14 < sorin7486> yeah, I can't help you there
08:15 < sorin7486> I don't even know what half of what you said means :)
08:18 < dreamerslab> still thanks :)
09:54 < taky> i love you node
09:54 < taky> i love you mongo, mapreduce
09:54 < taky> node is the best thing that ever happened to programming
09:59 < sirwan> taky: how did you get past your initial hate for callback hell ?
09:59 < NuZZ> hmmm
09:59 < NuZZ> callback hell you say
10:00 < NuZZ> my frameworks is in such a way that there is not really any callback hell
10:00 < zomg> sirwan: you just need to organize your code better ;) You can also use stuff like the async library
10:01 < NodeX> anyone had "XML Parsing Error: no element found Location: moz-nullprincipal:{1fbe0d1e-0f73-4df0-ace2-85b0d96618ad} Line Number 1, Column 1:" error with Node / Socket.io ?
10:01 < NuZZ> make server -> require a file, set shit up in said file, module.exports exports a function which server calls on the event of a request, gets matched against routes, goes through some logic to determine
10:01 < NuZZ> if it should be pumped to lactate or treated as a template for ejs
10:01 < NuZZ> it's all mostly synchronous 
10:01 < taky> sirwan: it was a long hard rode of realizing where variables overrote eachother, and understanding the scope of doing stuff async, but eventually you get really fluent and swift will the callbacks
10:02 < taky> knowing where to isolate sections of code off in (function(){/*blocks*/})();
10:02 < taky> etc
10:02 < zomg> I'd imagine it's harder if you aren't already pretty familiar with JS itself
10:02 < zomg> But yeah, once you figure it out nicely it's not bad at all
10:02 < taky> its actually sort of refreshing after awhile
10:02 < NuZZ> indeedle
10:03 < NuZZ> you only really need to bother will callbacks when such operates in an asyn way right?
10:03 < NuZZ> how do you know it's async?
10:03 < taky> generally rule of thumb is its probably async inless it has "sync" in the name
10:03 < NuZZ> as far as node modules go, yeah
10:04 < NuZZ> require() operates in a synchronous fashion though doesn't it. it's kind of a put off
10:06 < zomg> If it has a callback then it's most likely an async function =)
10:07 < zomg> Well, always best to assume it's async if it has a callback so things will keep working correctly even if it's just faking it
10:07 < NuZZ> this coffeescript looks so delightful, no more awkward hasOwnProp and other loop issues, no more undefined var referenceerror issues. it's too bad I cant use globals
10:07 < NuZZ> zomg, right.
10:08 < substack> heylookit streaming accept-encoding negotiator https://github.com/substack/oppressor
10:08 < NuZZ> if there is a callback then that is a pretty logical conclusion
10:11 < NuZZ> likely a stupid question; what is the best practice for maintaining a single object throughout files? (ie. config object with database info, connections etc.)
10:12 < substack> pass the data to where it needs to go
10:12 < substack> you can module.exports = someObject and then require() that module too
10:12 < NuZZ> require maintains the object each time?
10:12 < substack> or you could have your modules that need your state register callbacks and then call THEM with the state
10:13 < substack> NuZZ: correct
10:13 < substack> requires are cached
10:13 < NuZZ> i just read about that, but wasn't 100%
10:14 < mape> Anyone familiar with an issue where running cluster.disconnect doesn't actually kill all the workers? callback triggers but when I search for processes the worker is still around
10:14 < NuZZ> so, require('./config') must be requires('../config') when nested I assume to point to the correct file
10:15 < NuZZ> by nested i mean, within a subfolder
10:16 < substack> require paths are relative to __dirname in each file yes
10:17 < mape> only seems to happen on SIGTERM, not on SIGINT, but both of those run cluster.disconnect
10:23 < NodeX> fixed it, seems it's a bug in socket.io 0.9.10
10:50 < zomg> Anyone ever worked with OpenLayers or other custom mapping solutions?
10:51 < zomg> Seems to be kind of hard to find a nice guide on how to take a custom map file and use it with something like that
10:57 < rvagg> are we having npm issues? I'm having "login error" issues publishing
10:58 < NodeX> I used it ok about an hour ago
11:04 < rvagg> pretty sure it wasn't a problem on my end but it's working now
11:06 < framlin> I use the request-module and get the following error: (node) warning: possible EventEmitter memory leak detected. 11 listeners added. Use emitter.setMaxListeners() to increase limit." Howto setMaxListeners for the request-module (mikael)
11:06 < framlin> or howto avoid this problem ...
11:08 < rvagg> Benvie: you around?
11:12 < framlin> is anybody using request here?
11:14 < framlin> do I have to close/end a response if i pipe something in?
11:14 < framlin> require('request')('http://localhost:9000'+req.url).pipe(response);
11:14 < framlin> this is causing my request-error
11:16 < booyaa> woah sexy new look for npmjs.org
11:16 < booyaa> when did this happen?
11:24 < NuZZ> my face when I spend hours looking up the easiest way to compile coffeescript with node, then I just create a file init.js which requires coffee-script and requires the rest of the app. myfacewhen
11:25 < NuZZ> i want to know why npmjs has a period of failure where the stylesheet loads after the html renders
11:26 < holzp> that may not be npmjs, thats normal in browsers
11:26 < NuZZ> its not normal for decent servers
11:26 < holzp> the stylesheet loads but lags in application
11:26 < holzp> perhaps the client is indecent
11:26 < NuZZ> i have a feeling the static file serving is awkward or there is javascript on the client blocking it
11:27 < NuZZ> i've had it happen on a shitty paki website I re-designed. had to kill their javascript from loading in the header and put it in the footer
11:28 < NuZZ> lol here is the culprit
11:28 < NuZZ> <script src="//www.google-analytics.com/ga.js"></script>
11:28 < NuZZ> this is being loaded BEFORE the stylesheet
11:28 < NuZZ> is isaacs on here?
11:29 < holzp> drop the scripts down
11:29 < NuZZ> exactly, he needs to do this
11:29 < holzp> or better yet defer them till after load
11:30 < TimTim`> -_-
11:30 < purr> TimTim`: ಠ_ಠ is an IRC client/IRC client framework.
11:30 < TimTim`> lol wtf?
11:30 < NuZZ> haha
11:30 < NuZZ> -_-
11:30 < purr> NuZZ: ಠ_ಠ is an IRC client/IRC client framework.
11:30 < NuZZ> dafaq
11:30 < TimTim`> never seen that before
11:30 < NuZZ> -_
11:30 < TimTim`> that's awesome
11:30 < NuZZ> _-
11:30 < TimTim`> -_- is my favorite smiley too
11:30 < TimTim`> ಠ_ಠ
11:32 < TimTim`> anyway back to what i was gonna say before purr botted his way into my thought process
11:33 < NuZZ> you like bananas?
11:33 < TimTim`> that's a little disconcerting to know that whoever designed npmjs.org didn't asyncronously load google analytics
11:33 < NuZZ> is it disconcerning to know he also has committed code to node.js itself?
11:33 < TimTim`> slightly
11:33 < NuZZ> haha
11:33 < TimTim`> depends on what he contributed to :D
11:34 < holzp> well its google's thing and they give you the snippit and rewriting it may be untoward.
11:34 < NuZZ> security bubble
11:34 < TimTim`> could have sworn google provides async code by default for that
11:34 < NuZZ> no it's just about the way the <head> is written
11:35 < NuZZ> but It's probably because isaacs, the guy who made the site, lives in a low-latancy world where such a glitch doesn't present itself
11:35 < NuZZ> the rest of the world? eh, not so much
11:36 < booyaa> nuzz could you check your racism at the door, 12:27 < NuZZ> i've had it happen on a shitty _paki_ website I re-designed. 
11:36 < NuZZ> that isn't racism
11:36  * TimTim` suddenly craves curry.
11:38 < wltsmrz> Relevant? http://en.wikipedia.org/wiki/List_of_ethnic_slurs#P
11:38 < NuZZ> i mean pakistani's 
11:38 < NuZZ> lol. 
11:39 < NuZZ> but dont worry I can be plenty racist
11:39 < NuZZ> :)
11:39 < TimTim`> shut up cracker
11:39 < NuZZ> :O I AM A BLACK WOMAN WHO DONT NEED NO MAN, how dare you!
11:39 < TimTim`> ok this is already getting out of hand
11:39  * TimTim` gets back to work.
11:40 < NuZZ> :D
11:42 < NuZZ> but yeah if isaacs comes online here msg him about dat <head> glitch, folks
11:42 < NuZZ> I am too lazy to submit an issue on the git
11:42 < broofa> Hey all, 'trying to familiarize myself with how to implement custom Streams and would appreciate criticism on the POST stream parser I put together:  http://pastie.org/4603136
11:44 < wltsmrz> https://github.com/isaacs/npmjs.org/blob/master/www/attachments/index.html
11:44 < broofa> E.g. is it wrong to use the 'data' event to return the parsed form results?  Also, I don't currently catch exceptions anywhere (e.g. possible parse errors)... but assuming I did, what's the best way to surface those?  An 'error' event' I suppose?
11:46 < sirwan> NuZZ is a British twat
11:46 < sirwan> no vermin on the planet like the british
11:46 < kranius> haha
11:46 < sirwan> why is Britain trying to be a 51st american state yet hate America so much
11:46 < NuZZ> close but no cigar
11:46 < sirwan> they're incredibly jealous of america
11:46 < sirwan> yet copy their entire culture
11:46 < wltsmrz> I think you should try /catch the JSON parsing, broofa, and emit an 'error' as you suggested.
11:47 < sirwan> Brits are stereotypically pompous and arragont
11:47 < wltsmrz> That's my opinion and it's what I've done anyway.
11:47 < sirwan> really are a bunch of collectivist, draconian twats
11:47 < wltsmrz> Oh, but probably wait to JSON parse when you receive your 'end'
11:47 < broofa> wltsmrz - yeah, that's what I'm doing.
11:48 < broofa> line 39
11:48 < sirwan> plus every dog claims to be British nowadays were they clearly look Greek, French etc
11:48 < wltsmrz> Link?
11:48 < wltsmrz> Oh sorry.
11:48 < sirwan> Britain sucks Individualism out
11:48 < sirwan> thats why entreapeners leave britain
11:48 < sirwan> bunch of circle jerking collectivist dickheads
11:49 < sirwan> NuZZ: your a pratt
11:49 < nkuttler> sirwan: ##politics
11:49 < NuZZ> you're*
11:49 <@konobi> sirwan: watch it
11:49 < sirwan> lol nkuttler ty
11:49 < broofa> wltsmrz - 'not actually sure this makes sense as a stream class, honestly, since I'm just buffering everything until the end.  But the most common use case is pulling data from a stream.
11:50 < sirwan> just saying britain is more hated than america … america is a much more genuine place
11:50 < sirwan> unpretentious
11:50 < sirwan> but ill stop
11:50 <@konobi> imarcusthis: hey marcus
11:50 < wltsmrz> Most people would extend Stream using util.inherits, broofa. That's kind of the usual way to achieve this.
11:50 < NuZZ> they are both shitholes sirwan
11:51 < sirwan> NuZZ: no america is the best nation on the planet and i dont even live there
11:51 < sirwan> americans are cool people
11:51 < NuZZ> are you practising satire?
11:51 < broofa> (really, people??? this isn't even /interesting/ racism, for gods sake. :( )
11:51 < NuZZ> or perhaps just plain ole trolling
11:51 < sirwan> no fuck the humour is facecious and shit i dont practice that depressive crap
11:52 < sirwan> NuZZ: you were just clearly trolling earlier
11:52 < drey> is there an accepted way of providing a db to multiple files within an application? something along the lines of a singleton in db.js and just requring that as needed?
11:52 < sirwan> how about you learn from me and stfu
11:52 < NuZZ> nope, genuine ole nuzzy dont be trollin
11:52 < wltsmrz> Something like this, broofa? http://pastie.org/pastes/4603213/text?key=dcigcwa8oid266uujgpmw
11:52 < sirwan> wtf is 'ole nuzzy' … like your a legend on these chat rooms ?
11:52 < sirwan> your a dickhead
11:53 -!- sirwan was kicked from #Node.js by konobi [sirwan]
11:53 < wltsmrz> You can see Suckle for a working example of this https://github.com/Weltschmerz/Suckle/blob/master/lib/suckle.js
11:53 < NuZZ> you're*
11:56 < broofa> wltsmrz nit: in suckle Readme, I think you term you want is 'demultiplexer', btw. :)
11:56 < broofa> you -> the
11:56 < broofa> but otherwise, yeah, that makes sense.
11:56 < TimTim`> lotta hate comin out of that sirwan guy
11:56 < TimTim`> -_-
11:56 < purr> TimTim`: ಠ_ಠ is an IRC client/IRC client framework.
12:01 < framlin> how can I avoid to run out of MaxListeners if I call require('request')(url).pipe(res) in a loop through some 100 urls?
12:02 < broofa> wltsmrz - thx for the suggestions. :)
12:03 < wltsmrz> You're re-requiring for every iteration, framlin? :O
12:03 < broofa> wltsmrz require() caches, so re-requiring shouldn't matter, right?
12:04 < wltsmrz> Of course it matters, and not only aesthetically
12:04 < framlin> wltsmrz: yes
12:04 < framlin> but that seems not to be the problem
12:04 < broofa> wltsmrz: how so?
12:04 < framlin> first I required(request) only once
12:05 < broofa> wltsmrz (oh, and ignore my suggestion re: suckle README - I just misunderstood what suckle was doing. :) )
12:05 < framlin> then I hoped the problem would disapear, if i require it within the loop
12:06 < framlin> but it didnt
12:06 < framlin> I think I shoul call setMaxListeners anywhere, but wehre
12:06 < framlin> what is the emitter in this case
12:06 < framlin> ?
12:06 < broofa> it's my understanding that modules are only initialized once, regardless of how many times require() is called.  so once .vs. many shouldn't matter.
12:08 < framlin> broofa: I understood it like you
12:08 < rvagg> framlin: if you figure that one out let me know, it's been happening for me too, similar use case, since 0.8, as far as I can tell you can't get access to the EventEmitter that's complaining
12:08 < framlin> I have the same problem doing fs.createReadStream(__dirname+'/menu/'+fileName).pipe(res) in a loop
12:08 < rvagg> I'm not piping, just using request for a lot of requests
12:09 < framlin> so the question is, what are the emitters to call setMaxListeners(0) on
12:16 < framlin> rvagg: I could solve my problem by calling res.setMaxListeners(0) before piping to res
12:28 < shlevy> If I've carefully crafted the function to only deal with variables I know aren't being modified or read in the event loop, can I call a js function from the work_cb of uv_queue_work?
12:29 < klaemo> hey, in a node app, should I write every single function in an async style or just the ones that deal with I/O?
12:30 <@konobi> anyone using blode?
12:30 < chakrit> klaemo: just the I/O ones mostly.
12:31 < klaemo> chakrit: i figured. so, what's the best way to deal with errors in sync functions? in the async world it's really nice to just pass the err to the callback
12:32 < sh0ne> where 'require.js' is being put when installed with 'npm install requirejs' ? I cannot see it anywhere in 'nodejs' folder in Program Files (Windows 7).
12:32 < shlevy> klaemo: try-catch
12:32 < klaemo> shlevy: doesn't that cause deoptimization in V8?
12:33 < klaemo> sh0ne: it should be in the node_modules folder of the directory you ran the npm install command in
12:33 < shlevy> klaemo: Get correct functionality first. If you then face a performance issue that you prove through profiling, then ask about performance
12:34 < klaemo> shlevy: good point
12:34 <@konobi> the try/catch was improved a while back i believe
12:35 < klaemo> so just to make sure, if I have to do a bunch of computations on my data, without doing any i/o, i can do it in sync functions (aka return the result) and just wrap it in try-catch?
12:36 < sh0ne> klaemo: You're were right, thank you for your help.
12:56 < shlevy> Do I need to #define BUILDING_NODE_EXTENSION for c++ addons?
12:59 < SeanBannister> I noticed when I do a math equation in node.js and the same in PHP I get a different value. The equation is "234789 + 3287214789 * 3427648197" in node.js I get
12:59 < SeanBannister> 11267415844667820000
12:59 < SeanBannister> in php it's
12:59 < SeanBannister> 11267415844667820032
13:00 <@konobi> shlevy: i think node-gyp does that for you
13:00 < shlevy> OK
13:00 < zomg> SeanBannister: I wouldn't be surprised if PHP mangles those into floats and thus causes the extra 32 into the end
13:01 < zomg> 11267415844667820222 interestingly enough, this is what Python gives you for that same calculation
13:01 < SeanBannister> zomg: hmmm its messing with my head because in windows calc I get 222 more.
13:01 < SeanBannister> yeah ok, hmmm
13:01 < zomg> Yeah same as with python then in windows calc
13:01 < zomg> haskell also gives the same value as python
13:02 < zomg> so most likely that's the correct output
13:02 < SeanBannister> wonder what javascript and php are doing
13:02 < SeanBannister> I have a strange use case where I need them to match
13:02 < zomg> That is a good question. Most likely some type conversion or such
13:03 < zomg> What if you use bcmath in PHP?
13:04 < SeanBannister> I actually hadn't heard of it, not really a PHP dev
13:04 < zomg> or gmp
13:04 < zomg> yeah I haven't used either myself, I just recalled there were some math related stuff in it =)
13:05 < SeanBannister> I think you might be right about the floats http://en.wikipedia.org/wiki/Machine_epsilon
13:06 <@konobi> what does bignum give you?
13:06 < CIA-1> node: Ian Babrou master * r3b17f3b / src/node_constants.cc : constants: add O_DIRECT - http://git.io/Avyx_w
13:06 < zeppo> hi guys, anyone reached any concurrent connection limits using socket.io?
13:07 <@konobi> zeppo: probably hitting an OS limit first (file descriptors, etc)
13:07 <@konobi> SeanBannister: https://github.com/justmoon/node-bignum
13:08 < SeanBannister> konobi: awesome :) cheers
13:08 < zeppo> konobi: yeah, we need to handle potentially about 100k users using websockets
13:08 < zeppo> so if we beef up a server enough, potentially leverage with some load balancing 
13:09 < `3rdEden> you will probably have around 5 - 10k users per node process..
13:11 <@konobi> zeppo: yeah, see what you can get out of one server with kernel tweaks and then work from there
13:13 < zeppo> if you leverage to more than one server, is there a way to handle so you don't push the same events multiple times?
13:14 < SeanBannister> zeppo: I've done really large benchmarks, 60,000 connections this is a script I use to tweak the kernel https://gist.github.com/bce4badf57f6798bb551
13:14 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:14 < zeppo> oooooh! :) thanks
13:15 < SeanBannister> automates the whole thing :)
13:15 < zeppo> thanks man, this is gold
13:15 < oriben> so who's in the mood to help a (very nice) noob with express and mongoose?
13:16 <@konobi> zeppo: would depend on the backend i'd assume
13:19 <@konobi> zeppo: and if you're willing to spend money on a traffic balancer, etc.
13:20 < zeppo> yeah we're willing to spend some cash on this. but just so we know the technical limitations before we get too deep in to it
13:22 < shlevy> In an addon, what's the difference between 'return Undefined();' and 'return scope.close(Undefined());'?
13:23 < jw___> @SeanBannister wow great ! 
13:24 < jw___> @SeanBannister 60k per single node process???
13:26 <@konobi> there'd be other factors to that, but it's probably doable
13:26 < SeanBannister> jw___: yeah the box maxed out not the node process
13:27 < jw___> @konobi even 30k is fantastic
13:27 <@konobi> memory, 32 or 64bit node, etc.
13:28 < jw___> @SeanBannister it ran out of memory? How much RAM are we talking about?
13:29 < tralamaz> shlevy: afaik you should just use return Undefined();
13:29 < SeanBannister> I can't remember the exact details, its was a while ago I was running very basic benchmarks on Amazon EC2 but it was the CPU that maxed out first 64bit
13:29 < shlevy> tralamaz: OK. Thanks
13:29 <@konobi> shlevy: check the V8 docs
13:31 < tralamaz> c/c++ module docs are not exactly amazing, I found my way through examples and other addons
13:32 < imprestavel> hi! i would like to make a node.js addon in C exporting a single method (instead of an object with that method). does anyone know if that's possible?
13:33 < ibobrik> yep, look at this: https://github.com/bobrik/node-aligned-buffer
13:34 < tralamaz> imprestavel: http://nodejs.org/api/addons.html#addons_hello_world
13:34 <@konobi> imprestavel: https://github.com/wesolows/v8plus
13:36 < imprestavel> i saw the hello example and some other projects... i know i can wrap the compiled module with a js, but i would like the compiled one to be called like addon() instead of addon.hello()
13:37 < shlevy> imprestavel: Not sure how to do it directly from the addon, but of course you could wrap it in a simple js module
13:40 < imprestavel> thanks everyone, i'll probably just wrap it in js then (still checking out the links though)
13:41 < shlevy> imprestavel: If you see a better solution, please report back, I wondered the same thing
13:42 -!- mode/#Node.js [+o piscisaureus__] by ChanServ
13:42 < imprestavel> ok!
13:58 < shlevy> Hm, I'm getting undefined symbol: init when trying to use my compiled addon
13:59 < shlevy> My Init function (Init, not init) is not declared static...
14:01 < shlevy> Of course, the symbols are mangled... It's actually _Z4InitN2v86HandleINS_6ObjectEEE in the object file. But still...
14:11 <@konobi> zeppo: get my pm?
14:13 <@konobi> shlevy: on smartos, you can use mdb along with v8.so to get demangled names
14:15 < shlevy> konobi: Still, not even sure why it's looking for a symbol named 'init'. My file has NODE_MODULE(queueWork, Init), not NODE_MODULE(queueWork, init)
14:16 < shlevy> Actually, the .node file even HAS an _init symbol
14:16 < shlevy> :(
14:17 <@konobi> and the function is called Init ?
14:18 < shlevy> konobi: Yes
14:18 < shlevy> void Init(Handle<Object> target) { target->Set(String::NewSymbol("queueWork"),FunctionTemplate::New(QueueWork)->GetFunction());
14:18 < shlevy> }
14:18 < shlevy> NODE_MODULE(queueWork, Init)
14:18 <@konobi> and it's compiling as queueWork.node ?
14:19 < shlevy> Ah, no, queue-work.node
14:19 < shlevy> I see
14:19 < shlevy> Hooray, new error :)
14:21 < shlevy> Yay, segfault! :)
14:22 < shlevy> Is there a good way to debug node addons with gdb?
14:22 <@konobi> shlevy: tbh, i'd try smartos... assuming you have vmware, you can download a virtual image from the website
14:22 < navaru> Can someone help me port node's watch C++ module to a Chrome dev tools Native Client plugin (ppapi), please? (any core node devs) - I'm a front-end dev, don't have to much C++ knowledge
14:24 <@konobi> navaru: is this for redistributable app?
14:26 < navaru> Is for a Chrome Dev Tools extension, I want to watch files for changes and autoreload them'
14:26 < tuhoojabotti> there is an extension for that
14:26 -!- isaacs changed the topic of #Node.js to: node for the world
14:27 < navaru> tuhoojabotti: what extension?
14:27 < tuhoojabotti> no wait
14:27 < tuhoojabotti> I could be wrong
14:28 < tuhoojabotti> hmm
14:30 <@konobi> navaru: http://www.html5rocks.com/en/features/file_access ?
14:30 < navaru> There is this extension https://bitbucket.org/ryanackley/tincr/src , which uses Netscape Plugin Application Programming Interface (NPAPI), which will soon be deprecated in Chrome Canary, so I need to switch it to ppapi - Pepper Plugin API (the new improved version)
14:30 < tuhoojabotti> konobi: not good.
14:30 < tuhoojabotti> oh yeah
14:30 < tuhoojabotti> npapi does work
14:31 < shlevy> Darn, my brilliant idea has failed :(
14:32 < navaru> it works now, but not in the near future, so I don't want to bother to do work now to change it later..  :)
14:32 <@konobi> tuhoojabotti: how so?
14:33 < tuhoojabotti> konobi: for what I know, html5 file system api can only access a sandboxed filesystem of it's own
14:33 <@konobi> tuhoojabotti: you can change the security domain in an extension
14:34 < tuhoojabotti> konobi: got reference on that?
14:34 < tuhoojabotti> I've been looking into that
14:35 <@konobi> tuhoojabotti: extension permissions
14:36 < navaru> konobi: not really, you still get sandboxed, permissions settings are only for users to allow them
14:37 < tuhoojabotti> konobi: What there?
14:37 < tuhoojabotti> I don't see anything related to that
14:37 < tuhoojabotti> there is Content Security Policy, but that can only be tightened
14:38 <@konobi> tuhoojabotti: origins, 'file://'
14:39 < tuhoojabotti> konobi: But you don't have any source on that?
14:40 <@konobi> tuhoojabotti: not off hand, my bookmark for it is gone
14:40 < tuhoojabotti> damn
14:40 <@konobi> i know i got it working though
14:40 < tuhoojabotti> konobi: so you put "content_security_policy" to what?
14:43 < bnoordhuis> shlevy: compile a debug build of node and the addon
14:43 < bnoordhuis> shlevy: the rest is just regular debugging
14:43 < shlevy> bnoordhuis: OK, thanks
14:44 < bnoordhuis> navaru: node uses libuv, which uses the native platform api
14:44 < bnoordhuis> navaru: alternatively, there's a polling variant that works the same on all supported platforms
14:45 < navaru> bnoordhuis: what polling variant? Could you share a link, please
14:45 < shlevy> bnoordhuis: My problem was what I feared might happen, my naive attempt at calling a javascript function from the 'process' function of a uv_queue_work segfaults
14:45 < shlevy> bnoordhuis: Any idea if there's a way to tell v8 to make a new thread somehow?
14:46 < shlevy> bnoordhuis: s/make/work in/
14:46 < bnoordhuis> navaru: grep for uv_fs_poll_t in deps/uv/include/uv.h
14:46 < navaru> bnoordhuis: thanks
14:46 < bnoordhuis> shlevy: not really. like i said on the ML, v8 is not thread safe. you'd have to create a new isolate
14:47 < shlevy> bnoordhuis: Ah, didn't see your response, sorry
14:47 < bnoordhuis> shlevy: someone already wrote a module for that btw, threads_a_gogo (hope i spelled it right)
14:47 < shlevy> bnoordhuis: Ah, really? Cool :)
14:48 < austincheney> I have not been keeping up with node.js support of my application, but today I learned my NPM is getting 150 downloads a day.... this cannot possibly be right since the site with the app only averages about 250 visits a day
14:49 < austincheney> how can i verify these numbers: https://npmjs.org/package/prettydiff
14:49 < austincheney> they just seem a bit too far on the high side to believe
14:49 < jim_> Polling and Hitler.  The two most evil things in all the world.
14:51 < Rsdrsd> Are you all developping in node?
14:51 < austincheney> Rsdrsd: i wrote an api to interface the app into node, but i have not worked on it in 1.5 years
14:51 < austincheney> i just keep the NPM package updated as I update the core of the application
14:52 < Rsdrsd> Which app are we talking about then?
14:52 < austincheney> sorry, nm, i just noticed half way through what i was trying to figure out
14:53 < austincheney> i just noticed you joined half way through what i was trying to figure out
14:54 < Rsdrsd> Node is very kewl, what is the next big thing?
14:56 < jim_> The next big thing?  The total collapse of Western civilization.
14:59 <@isaacs> Rsdrsd: node is all ofthe next big things.
14:59 <@isaacs> Rsdrsd: the next big thing will be built with node
14:59 -!- isaacs changed the topic of #Node.js to: node all the things.
14:59 < jim_> Or Erlang or sticks and mud if bottom falls out of civilization.
14:59 < wookiehangover> isaacs: and its called http://b.gif.ly/
15:01 < mscdex> node.js rules!
15:01 < jim_> Giving up coffeescript is like giving up coffee.  God damn it.  
15:03 < drudge> my text editor is extendible with node. i like that.
15:03 < dready> hello. i have installed npm trough a ppa and i had some problems. if i reinstall npm, will that cause problems with packages installed trough the old npm, eg. express?
15:03 < austincheney> drudge: which editor?
15:03 < kranius> drudge: mine is built ontop of it's own scripting language
15:04 < drudge> austincheney: chocolat
15:04 < drudge> austincheney: for example, gisting: https://github.com/drudge/gist.chocmixin
15:04 < austincheney> looking
15:06 < austincheney> drudge: you need to make the word "Chocolate" of the title or your README.md file a hyperlink to the chocolate editor
15:08 < drudge> austincheney: ok :)
15:09 < drudge> austincheney: something simpler, github flavored markdown preview, using isaacs' module: https://github.com/drudge/github-flavored-markdown.chocmixin/blob/master/init.js
15:10 < exien> Does anybody know if there is a reason why Node would take 2-8 seconds to return a request, while expressjs logs the request from start to finish as only taking 30ms?
15:11 < ACK__> how a add  sphinx search in node.js website
15:12 < ACK__> how a add  sphinx search in node.js website
15:13 < EyePulp> ACK__: What was the question?
15:13 <@isaacs> dready: depends.  how old was the npm you installed through a ppa?
15:13 <@isaacs> dready: 0.x-ish?
15:13 <@isaacs> dready: or 1.0-ish?
15:13 < ACK__> i want to add searh functionality to my project
15:13 < ACK__> how to
15:14 < ACK__> <EyePulp> => i want to add searh functionality to my project
15:14 < Littlex> hey, how do i debug following error: events.js:66 -- throw arguments[1]; // Unhandled 'error' event -- Error: Parse Error
15:15 < EyePulp> ACK__: how is sphinx exposed?  Is it a web service running on a different port, or an API & libraries in a language you have to call?
15:15 < drudge> austincheney: links added to all my mixins, just for you
15:15 < ACK__> what is reliable solution
15:16 < stagas> ACK___: google 1st result for "node sphinx" https://github.com/kurokikaze/limestone
15:16 < EyePulp> ACK__:  google is a wonderful tool for answering many questions.
15:16 < ACK__> i now
15:17 < ACK__> know
15:17 < ACK__> but not updated
15:17 < ACK__> for 6 months
15:18 < ACK__> what you think about his => https://github.com/flying-sphinx/flying-sphinx-js
15:18 < ACK__> tell me
15:19 < Littlex> any help would be really great :<
15:20 < bnoordhuis> Littlex: look at the full stack trace
15:20 < bnoordhuis> that should hopefully tell you where it originates from
15:20 < Littlex> how do i get that
15:20 < sorin7486> it should show up in the command line
15:20 < Littlex> its just 2 lines long and not related to my code
15:20 < sorin7486> that's all you get ?
15:21 < sorin7486> Littlex, is that text all you get ?
15:21 < Littlex>     at Socket.socketOnData (http.js:1366:20)     at TCP.onread (net.js:402:27)
15:21 < Littlex> thats the rest
15:21 < bnoordhuis> Littlex: http parse error?
15:21 < Littlex> here is the full message https://gist.github.com/3499041
15:22 < sorin7486> I'm sure I've seen this before...
15:22 < stagas> Littlex: node --version ?
15:22 < Littlex> yeah but the message appears to be random to me? 100 requests seem to be fine, and the 101 throws an error
15:22 < jim_> Speaking of sockets, are any of you folks using socketstream in production?
15:22 < Littlex> 0.8.8
15:24 < sorin7486> Littlex, I've had similar issues, sometimes node will throw errors and not give much info why
15:25 < Littlex> thats not good :)
15:25 < sorin7486> Littlex, you can try to capture the packet
15:25 <@konobi> node-panic might help
15:25 < sorin7486> I mean the one that does this
15:26 < Littlex> the one which leads to the error is reproducable
15:26 < Littlex> its a curl request, i am using to test the node server
15:26 < sorin7486> ok
15:26 < Littlex> its allway the same
15:26 < sorin7486> is there anything different about it ?
15:26 < stagas> Littlex: what's the curl request look like?
15:27 < Littlex> sec
15:27 < Rsdrsd> Why did i just explore node a few weeks ago....
15:27 < sorin7486> Rsdrsd, because john left for the market
15:27 < sorin7486> :)
15:28 < armetiz> Hi there, I have build my first module: https://github.com/armetiz/node-printer
15:28 < Littlex> stagas: https://gist.github.com/3499100
15:28 < Littlex> thats the full code, including the curl request
15:28 < Rsdrsd> I want to build an upload with progress indicator. I can only find old aticles in google
15:28 < Littlex> i am trying to build a proxy, which posts a subrequest to a specified url to ask for permission
15:28 < Rsdrsd> Should i use formidable or not
15:28 < armetiz> Can you look on it and tell me what do you think about it ? What's wrong ? I'm not an JS ninja so.. and advice should be welcome!
15:29 < Littlex> its a raw draft and very beta ;)
15:30 < stagas> Littlex: shouldn't you be escaping the double quotes, or use single quotes outside in that Authorization header?
15:30 < stagas> Littlex: the parser is failing because the request is malformed somehow, it can't parse it
15:31 <@konobi> Littlex: bash problem
15:31 <@konobi> Littlex: change your -H quotes to '
15:32 < Rsdrsd> Where to find good node articles /news
15:32 < Littlex> ah right, totaly overlooked that
15:32 < Littlex> leme check
15:32 < Littlex> error still occurs
15:33 <@konobi> Littlex: whats your curl look like now?
15:34 < Littlex> updated the gist https://gist.github.com/3499100
15:36 <@konobi> Littlex: remove spaces between commas
15:36 < Littlex> in the auth header?
15:37 < Littlex> i will gladly do that, but its not a permanent solution, i mean the node js should not crash when someones sends an illegal request - i would like to handle that
15:37 <@konobi> Littlex: you're assuming that's a valid header
15:38 < stagas> Littlex: put an .on('error', fn) on the server
15:38 < Littlex> it is a valid header
15:38 <@konobi> well, you can add an error handler to catch those
15:38 < Littlex> removed the spaces, still occurs
15:39 < Littlex> stagas, knobi: on the httpProxy server?
15:40 <@konobi> huh... wireshark time?
15:42 < Littlex> its weird, the request gets handled completely and then the error occurs
15:42 < stagas> that's weird, I just tried that request and it works without problems, so why is your parser failing it's beyond me
15:43 < stagas> wireshark time probably :P
15:43 < Littlex> https://gist.github.com/3499100
15:43 <@konobi> oh req.end() is getting called at a random point
15:44 < Littlex> updated the gist with the new code, including the on error, console output and curl output
15:45 < Littlex> konobi: is there a better way to call it? :)
15:46 <@konobi> Littlex: just try without it
15:46 < Littlex> afaik its need to send/close the post request?
15:46 < Littlex> still occurs
15:47 < CIA-1> node: isaacs v0.9.1-release * rcda3ae6 / (ChangeLog src/node_version.h): wip - http://git.io/OBbKag
15:47 < Littlex> *sigh*
15:48 < Littlex> i hate weird errors
15:49 <@konobi> Littlex: well, you were telling it to end() at a random point rather than waiting until the end of the request
15:49 < Littlex> yeah its a valid thought, i moved it - still the error occurs
15:50 < Littlex> moved/removed
15:52 <@konobi> Littlex: have you tried using one of the examples and building up from there?
15:53 < Littlex> you mean examples from the http-proxy page?
15:53 <@konobi> yeah, or its repo
15:53 < Littlex> its build on an example
15:54 < Littlex> so basicaly yes
15:54 < Littlex> the strange is, the error occurs on the centos sandbox but not on my local mac
15:54 < Littlex> a more verbose trace, error or data would be great :<
15:55 < shlevy> Boo, threads-a-gogo doesn't seem to work on recent node
15:55 < shlevy> bnoordhuis: Any pointers for v8 isolates besides http://izs.me/v8-docs/classv8_1_1Isolate.html?
15:59 < stagas> Littlex: try not sending content-length
15:59 < stagas> Littlex: in ln 15
16:00 < Littlex> stagas you have too when posting data ;)
16:00 < hojberg> whats the popular recommended webframework of late? I feel like everyone is hating on express - what are people using instead ?
16:00 < Littlex> but i found the error, my coworker gave me the wrong port - using the correct one works perfectly fine
16:00 < Littlex> STILL its strange that the error seems to be random
16:00 < Littlex> is there a way to catch it and continue?
16:01 < tjholowaychuk> hojberg rails
16:02 < shlevy> Hm, never mind, that seems clear enough
16:03 < hojberg> tjholowaychuk: snap
16:07 < jim_> If it is hated it must be good.
16:08 < dready> isaacs, thanks for tip. I'm not really sure about the v. It possible is between 1'ish versions. I haven't installed much stuff, yet, so i might just clean up and install all packages fresh(about 5 or 6 only). Should i be concerned with pkgs that i installed with the flag -g?
16:10 < Littlex> hmm
16:10 < Littlex> seems like the project will not be realized with nodejs then ;) thanks for the support!
16:10 < dready> huh?
16:11 < dready> what is the prob?
16:12 < Littlex> getting unexplaynable errors
16:12 < dready> such as?gist?
16:13 < Littlex> https://gist.github.com/3499041
16:13 < Littlex> https://gist.github.com/3499100
16:13 < Littlex> first is the error, secodn the code
16:14 < Littlex> i found the source of the error, its because i was using the wrong port for the subrequest to /auth - still its fubar to work which such an error
16:15 < dready> vuola, https://encrypted.google.com/search?q=events.js%3A66+++++++++throw+arguments[1]%3B+%2F%2F+Unhandled+%27error%27+event++++++++++++++++++++++++^+Error%3A+Parse+Error+++++at+Socket.socketOnData+%28http.js%3A1366%3A20%29+++++at+TCP.onread+%28net.js%3A402%3A27%29&ie=utf-8&oe=utf-8&client=ubuntu&channel=fs#hl=en&client=ubuntu&hs=IgP&channel=fs&sa=X&ei=U-48UOOVPI-AhQec4IHACQ&ved=0CBgQBSgA&q=Error%3A+Parse+Error+at+Socket.socket+OnData+at+TCP.on
16:15 < dready> read&spell=1&bav=on.2,or.r_gc.r_pw.r_qf.&fp=8f13bae0db0751c4&biw=1280&bih=624
16:15 < dready> o.O
16:15 < vippy> lol
16:15 < Littlex> fail
16:17 < dready> just google these magic keywords, "Error: Parse Error at Socket.socket OnData at TCP.onread"
16:18 < dready> http://www.google.co.uk/#hl=en&sclient=psy-ab&q=Error:+Parse+Error+at+Socket.socket+OnData+at+TCP.onread&oq=Error:+Parse+Error+at+Socket.socket+OnData+at+TCP.onread&gs_l=hp.12...2468.2468.0.4756.1.1.0.0.0.0.117.117.0j1.1.0...0.0...1c.rb1VsHzKrAU&pbx=1&bav=on.2,or.r_gc.r_pw.r_qf.&fp=cf2ca6371e09f1bc&biw=1280&bih=709
16:19 < Littlex> https://github.com/joyent/node/issues/2997
16:19 < Littlex> last comment says it all
16:19 < dready> ok, here we go, back into game!
16:20 < Littlex> not really
16:20 < Littlex> as long as such an error exists i would never ever use something in a HA setup
16:21 < dready> you are taking things personally
16:21 < dready> code is code
16:21 < Littlex> hu?
16:22 < dready> you seems a bit sceptic, too much, just cauze you have an error, you will not use a certain technology?
16:22 < Littlex> no
16:22 < dready> linux is full of errors, but it doesn't stop it to be wildelly deployed
16:23 < Littlex> its not really full of errors
16:23 < Littlex> every looked at server distros?
16:23 < Littlex> -y
16:23 < dready> some
16:23 < dready> i mean, some errors
16:23 < dready> configuration ones
16:24 < Littlex> the point here is simply that its an error which is a neckbreaker for our requirement catalog - a hard to debug non helpful error is just an absolut no go in a HA setup
16:25 < Littlex> anyway we dont have to discuss that to the detail now, ill toy around a bit just out of curiosity 
16:25 < dready> mm, have fun
16:27 < RLa> what was lib that added callback() function to a prototype?
16:27 < RLa> so that something.callback('func') gives function that is always run in the context of something
16:28 < tjholowaychuk> .bind()?
16:28 < shlevy> If I were to make an isolate, how would I make code run there have the same setup as a fresh node module, i.e. require() works such?
16:28 < shlevy> bnoordhuis: ^
16:28 < shlevy> And an event loop running, etc.
16:29 < shlevy> Although at that point I may as well have a new process... NEver mind :)
16:29 < tralamaz> hmm  module.parent is cached
16:30 < lmatteis> Hello peoples
16:30 < lmatteis> i was wondering, is there standard abstractions for things such as data storage, or caching
16:30 < RLa> tjholowaychuk, hm, it was for browser too
16:30 < lmatteis> for example, in the Java world, you have JDO/JPA which are solid abstractions around data 
16:30 < RLa> .bind seems to be for moderns browsers only
16:31 < tralamaz> is module.parent caching the correct behavior ?
16:31 < lmatteis> is there something similar for the JS world... maybe a CommonJS lib for interfacing with data
16:31  * jocafa punches IE
16:31 < RLa> jdo/jpa are for orm and are pretty heavyweight
16:32 < lmatteis> RLa: and?
16:32 < RLa> lmatteis, npm search orm
16:32 < lmatteis> i know ORM exist
16:32 < lmatteis> that wasn't my question
16:32 < lmatteis> JDO/JPA are standard... they're not implementation specific
16:33 < RLa> no, haven't seen such "specs" of data storage around
16:33 < lmatteis> how about selectjs.com
16:33 < RLa> not sure if we need them at all
16:33 < lmatteis> it sounds pretty cool
16:33 < lmatteis> i think we do
16:33 < lmatteis> especially since JS isn't only node.js
16:33 < lmatteis> it's java (rhino) and many other
16:34 < tralamaz> any idea on how to get the calling module (parent) ?
16:34 < RLa> lmatteis, if it fits your reqs, use it
16:35 < lmatteis> RLa: it does, however i wanted to see if there was something more community driven
16:35 < lmatteis> or used
16:35 < lmatteis> sort of like what http://narwhaljs.org/ was
16:35 < lmatteis> but it's offline :(
16:35 < lmatteis> oh wait, ringojs
16:35 < RLa> hm, haven't seen
16:36 < jtomasrl> what would be a good linux distro for running a node.js app with mongodb?
16:36 < RLa> jtomasrl, which one can you administer best
16:36 < lmatteis> jtomasrl: anyone really
16:36 < jtomasrl> even ubuntu?
16:37 < RLa> why not
16:37 < jtomasrl> dunno really
16:37 < lmatteis> jtomasrl: it would be best if you used a more abstracted service though... like heroku... where you don't need to know what distro it's running
16:37 < lmatteis> or nodejitsu
16:37 < dready> ubuntu/or debian, you can't go wrong
16:38 < lmatteis> windows, you can't go wrong
16:38 < jtomasrl> imatteis a VPS its cheapper than a heroku non free service i think
16:38 < lmatteis> nodejitsu is pretty cheap if you ask me
16:38 < dready> windows, lol
16:38 < dready> go learn some FREE unix 
16:39 < lmatteis> yeah windows is easier to install :) just double click
16:39 < dready> -_-
16:39 < purr> dready: ಠ_ಠ is an IRC client/IRC client framework.
16:41 < dready> lmatteis, the easy install comes with a price, later, when you install packages for node it will be a nightmare, as windows changes file paths, so let's say, you make an app on windows, than you have problems to migrate to the linux server. trust, i've been there. get virtul box, and install ubuntu 10.04 there. now, go, go
16:42 < lmatteis> dready: not if you know how to write apps/libs correctly
16:42 < lmatteis> and all libs i've tried work well both on windows and on linux
16:42 < dready> ok then, do what you want
16:42 < dready> and on't botter with those question again, here 99% of users are unix ones
16:43 < lmatteis> wtf
16:43 < lmatteis> how do you know
16:43 < lmatteis> are you Mr. Statistics?
16:43 < maxogden> dready: node actively supports *nix and windows equally
16:43 < dready> i know it does. i'm just a windows hater, sry
16:44 < jaseemabid> node-gyp is building foo when i'm asking it to build libfoo. Is that indented by any chance? I'm unable to find where that change is happening. 
16:44 < lmatteis> but your arguments about the path stuff don't really stand
16:44 < ccowan> dready: WINDOWS BOO! *fist bump!*
16:44 < jaseemabid> *intended
16:45 < dready> BOO
16:45 < lmatteis> windows rocks. double click. done
16:45 < dready> BOO
16:47 < ccowan> (althought I'm pretty proud of the node.js community for embracing windows as a first class citizen) *high five!*
16:48 < jaseemabid> node-gyp ignoring a "lib" in front of my extension name. libfoo => foo, lib_foo => _foo. 
16:48 < zipp> lmatteis: npm / nave is for pros
16:49 < lmatteis> zipp: what's nave
16:49 < zipp> lmatteis: A node build management tool. Whenever a new version of node comes out, I just type 'nave usemain 0.8.X' and BOOM, builds the new release for meh
16:49 < lmatteis> ah ok
16:49 < zipp> https://github.com/isaacs/nave/blob/master/nave.sh
16:50 < lmatteis> whatever, double clicking is nicer
16:50 < lmatteis> ;)
16:50 < zipp> Mice have two uses: photoshoop, and gaming :P
16:50 < JordiGH> Do you guys think it's a good idea to correct a self-described "non-programmer" but otherwise brilliant person that "source code" is not a countable noun? (i.e. no "codes").
16:51 < lmatteis> JordiGH: i seriously don't understand your question
16:51 < zipp> JordiGH lmao, if you care, then yes, but you'll probably look like a dick for doing it
16:51 < JordiGH> zipp: But if I don't look like a dick, then they will look like clueless n00bs...
16:52 < kuja> I'd say do it :p
16:52 < AvianFlu> JordiGH: correct him. you'll be preventing him from looking stupid in front of others at some point in the future.
16:52 < kuja> For the greater good. Don't let people continue to misuse or misunderstand terminology because you didn't want to sound like a dick for correcting him :)
16:52 < JordiGH> Heh, kinda cute you're using the masculine pronoun. The person in question is a woman.
16:52 < creationix> just say "that doesn't sound right to me.  I'm no english expert, but in proigramming circles we say..."
16:53 < zipp> kuja: what, you don't like "The Google"?
16:53  * JordiGH wonders who is an English expert...
16:53 < kuja> I haven't heard that one before :p
16:53 < lmatteis> are you all from the states?
16:53 < zipp> http://www.youtube.com/watch?v=90DKubFKwVo
16:54  * JordiGH was born in *a* state.
16:54 < creationix> even if you're 100% sure you're right about non-countable nouns, it's less offensive to not sounds like you're sure
16:54  * lmatteis wasn't
16:54 < kuja> zipp: hah
16:54 < creationix> s/sounds/sound/
16:54 < slicky> anyone know what's going on with https://github.com/felixge/node-formidable ? It seems to be failing a few tests and current version isn't working :/
16:55 < JordiGH> creationix: Ok, good advice. I'll try to appear unsure about it.
16:55 < lmatteis> look at code and fix slicky :)
16:55 < slicky> that's the next step... this is information gathering time :D
16:55 < creationix> JordiGH, the important part is to make it obvious that you care more about helping them feel good than making yourself feel smart
16:56 < kuja> Last thing I care about are another person's feelings but that's me :p
16:56 < kuja> I'm pretty evil
16:56 < lmatteis> i care about dog's feelings
16:57 < kuja> I care more about my cat's feelings
16:57 < ccowan> I'm not sure my cats care about my feelings.
16:57 < JordiGH> ccowan: Really? I usually see cats being nuzzly with me when I'm sad.
16:57 < zipp> I'm rather sure no cat cares about any puny human's feelings
16:57 < kuja> Humans are way beneath cats :p
16:58 < kuja> I doubt cats care
16:59 < cpsubrian> Licensing question: I ripped a function out of https://github.com/c9/architect (MIT) and turned it into a module (https://github.com/cpsubrian/node-witwip) with some API additions (also MIT).  How should I give proper attribution to ajax.org
16:59 < JordiGH> Doesn't the license itself say?
16:59 < JordiGH> Just don't remove the license header.
16:59 < slicky> what's the npm command to install dev deps?
17:00 < lmatteis> npm install?
17:00 < kuja> yep, `npm install` does it for me
17:00 < slicky> k just checking
17:00 < JordiGH> cpsubrian: "The above copyright notice and this permission notice shall be included inall copies or substantial portions of the Software."
17:00 < cpsubrian> meaning.. appended to a LICENSE file?  just not sure of the format
17:01 < JordiGH> cpsubrian: No, put it next to the code it's talking about.
17:01 < cpsubrian> JordiGH, just the copyright?
17:01 < cpsubrian> JordiGH, Since its the same license anyhow
17:01 < JordiGH> cpsubrian: If you want, with a note saying where you got it from. And yeah, legally, just the copyright. Politely, you say a bit more.
17:01 < JordiGH> cpsubrian: It needs 
17:01 < cpsubrian> JordiGH, Sure.. thats the whole point of my question :)  trying to be a good osscitizen 
17:01 < JordiGH> cpsubrian: It needs a copyright notice. It's not copyrighted to you.
17:01 < slicky> wonder what the legal implications of `cat "\n\nJust kidding!" >> LICENSE` are
17:02 < JordiGH> cpsubrian: The license says, "the copyright notice and this permission notice.."
17:02 < lmatteis> sup dshaw_ :)
17:05 < dshaw_> lmatteis: buon giorno
17:05 < lmatteis> giorno :)
17:05 < lmatteis> dshaw_: how's it going
17:05 < dshaw_> per me
17:05 < dshaw_> good
17:05 < lmatteis> dshaw_: you know, i'm going to lisbon next month, i see you're going as well?
17:05 < lmatteis> for lxjs
17:05 < maxogden> isaacs: figured out that npm.commands.install returns an array of all the flattened deps that were installed
17:06 <@isaacs> maxogden: yeah
17:06 < dshaw_> lmatteis: Fantastic. Yep. Giving a new talk and doing a workshop with mikeal
17:06 <@isaacs> maxogden: the return values from the various commands are pretty inconsistent
17:06 <@isaacs> maxogden: it'd be nice to make them more consistent, and also display the results consistently using archy
17:06 < maxogden> isaacs: yea npm.commands.install(['request']) returns an array of arrays instead of an array of objects WTF
17:07 < maxogden> also only accepts arrays of package names
17:07 < dshaw_> lmatteis: Look forward to catching up.
17:07 <@isaacs> maxogden: npm.commands.* functions all take ([args], cb)
17:07 < maxogden> isaacs: wat is archy
17:07 < lmatteis> dshaw_: awesome! yes we definitely should hang out
17:07 <@isaacs> or maybe ([args,...], silent=false, cb)
17:07 <@isaacs> (another incosnsitency)
17:07 <@isaacs> maxogden: archy = substack module for showing npm ls style trees
17:07 < maxogden> isaacs: i gave it ([args], cb) and it worked
17:07 <@isaacs> maxogden: yeah
17:07 <@isaacs> install is an odd duck...
17:08 <@isaacs> it takes install(where, what, cb), or install([what,...], cb)
17:08 < lmatteis> dshaw_: how's life? voxer doing ok?
17:08 < maxogden> isaacs: you wouldnt support install(['request'], cb) and install('request', cb) ?
17:09 <@isaacs> maxogden: if anything, i'd like to move to install(['request'], [optional silent=false], cb)
17:09 < maxogden> isaacs: thats what it does now, right?
17:09 <@isaacs> maxogden: and then something like install.where(prefix, ['request'], cb)
17:09 <@isaacs> maxogden: install doesn't take a silent arg, no
17:09 < maxogden> isaacs: oh
17:09 <@isaacs> maxogden: but most other commands do
17:09 < dshaw_> lmatteis: Love it. Just wrapping up the Summer of Node.js program. Had a great summer.
17:09 <@isaacs> (that produce output)
17:10 < lmatteis> dshaw_: ah nice. i've been quite out of the loop with node recently... but i see everything is still quite vibrant
17:11 < slicky> hrm odd
17:11 < slicky> this fix really can't be that simple
17:14 < maxogden> isaacs: i think we should adopt bill and teds mantra: "be excellent to each other"
17:22 < ccowan>  Funny thing... I dropped in on our troll's twitter acount to see if he had dropped it yet... Nope. still going strong.
17:23 < LambdaDusk> hi... my socket.io app seems to reconnect some users from time to time... what can I do to make that smoother (like, not a complete re-log or something)
17:24 <@isaacs> maxogden: yes.
17:24 <@isaacs> maxogden: it's very aristotelian
17:25 <@isaacs> maxogden: in order to be excellent to each other, we must be excellent, and accept and expect the excellence of others.
17:28 < ccowan> isaacs: After reading your responses to *he who should not be mentioned* and the article about Node/Joyent/Crockford... I have to say you've impressed me.
17:30 <@konobi> seems like he's been quiet for a couple of days
17:33 < luckysmack> if i have a package cloned from a repo, and i can successfully run `npm install && sudo npm link`, and is shows the file was linked at `/usr/bin/myPackage -> /usr/lib/node_modules/myPackage/bin/myPackage`, why would it then fail when running the 'myPackage' command by saying: "Error: Cannot find module '../lib/myPackage'" ?
17:34 < luckysmack> no matter where i run the command, it look for the command in "../lib/myPackage"
17:58 < uberj> hey, I'm trying to connect to an irc server with ssl and I'm getting the error "Hostname/IP doesn't match certificate's altnames". I tried running 'npm config set strict-ssl false' but it didn't fix anything. How can I tell node's irc library to ignore any ssl issues?
17:59 < maxogden> isaacs: would you recommend using engines in package.json to mark a package as a (for instance) phonegap plugin
17:59 < uberj> I'm really sure that telling npm did anthing, google recommened it.
18:01 < maxogden> isaacs: or to phrase the question in another way: y u no liek engines?
18:01 < jetienne> isaacs: my name is corrupted in npmjs.org database. how can i fix that ?
18:01 < jetienne> isaacs: i am here https://npmjs.org/package/gowiththeflow but https://npmjs.org/~jetienne return 500. what should i do ?
18:04 < exien> Hi all, the mysql package (which i'm using for db access) throws an exception if the database goes down it. But how am I supposed to return an error callback from my model to close the request if I never get a chance to do so?
18:05 < cpsubrian> Does travis delete/ignore 'node_modules' directories.  I have a 'node_modules' directory inside my 'test/' dir that has some placeholder stuff and my tests are failing in travis
18:05 < uberj> lib/tls.js line: 1255
18:05 < uberj> how do I make node not raise that error
18:06 < uberj> I don't feel like compiling my own version of node
18:06 < ccowan> exien: did the app.use(function(err, req, res, next()) { ... }); not work?
18:06 < scott_gonzalez> isaacs: Are there any known issues with module names that require dots?
18:07 < Fodi69> is it insane thing to write async code with callbacks for syncronous things, for example on models?
18:07 < scott_gonzalez> s/require/contain/
18:07 < exien> ccowan: No, because that catches any errors that are bubbled up through callback checks
18:07 < TooTallNate> scott_gonzalez: socket.io is one of the biggest ones so i'd think it's ok
18:08 < scott_gonzalez> TooTallNate: good point, thanks
18:08 < ccowan> oh... so you will need to just catch the error with a try { } catch (e) { } and then in the catch execute callback(e)
18:08 < ccowan> that way it will be returned via the callback and the route will catch it
18:09 < exien> ccowan: ccowan: I wrapped the base mysql   connection.query() function with a try, and catch, but it didn't catch anything
18:09 < Fodi69> is it insane thing to write async code for syncronous things, for example on model manipulation functions?
18:09 < ccowan> exien: it's being thrown from the mysql.query
18:10 < exien> ccowan: i'll try again
18:10 < ccowan> oh
18:10 < ccowan> I just saw your connection.query()
18:11 < ccowan> Look at the trace route to see where the exception is being thrown.
18:12 < livinded> score! Apparently we're starting functional fridays at work. Gonna learn me some Haskell
18:12 < maxogden> haha sweet
18:13 < exien> ccowan: here's the trace: https://gist.github.com/3501589
18:13 < ccowan> what's line 43 look like?
18:13 < ccowan> in server.js
18:14 < exien>  42 process.on('uncaughtException', function(err) {  43   console.trace();  44   console.log('uncaughtException');  45   console.log(err);  46 });
18:14 < ccowan> can you replace console.log(err) with console.log(err.stack);
18:18 < exien> ccowan: https://gist.github.com/3501648 is the full stack
18:19 < EdwardIII> mysql? old school :)
18:19 < ccowan> exien: so it looks like it's craping out on the session stuff
18:20 < exien> ccowan: yeah I never realized that before
18:20 < exien> ccowan: interesting
18:20 < ccowan> which is going to make it tricky for you to catch and close the connection since that happens at the beginning of the request
18:20 < exien> can you recommend a better session store? does't have to be mysql
18:20 <@konobi> redis?
18:20 < EdwardIII> that was just a joke exien sorry, heh
18:20 < ccowan> I use connect-redis
18:20 < EdwardIII> i'm really just using node to play so i want a nice futuristic stack
18:21 < exien> and connect-redis handles db disconnects well?
18:21 < EdwardIII> (i usually use django for custom stuff, and in reality spend most of my time knee-deep in the guts of magento)
18:21 < ccowan> I haven't had issues
18:21 < exien> EdwardIII: just become something is new and fancy in the tech world doesn't mean we should be using it for production products :)
18:22 < EdwardIII> exien: i agree entirely ^
18:22 < exien> ccowan: k I'll give it a try and see if its part of my problem, thanks
18:22 < EdwardIII> i was looking at redis, from what i can see redis and mongodb operate in exactly the same problem space, it's not a case of horses for courses?
18:23 < ccowan> exien: to be honest with  you the only reason I'm using connect-redis instead of just using cookies for my session stuff is because usign cookies for session stuff in PHP is really a pain in the ass. 
18:24 < ccowan> exien: and we have to share sessions with php (for now)
18:24 < EdwardIII> ccowan: interesting
18:24 < EdwardIII> ccowan: are you using redis for pub/sub?
18:24 < ccowan> EdwardIII: nope... it's mainly used for leaderboards, counters, feed listings, etc
18:25 < ccowan> redis is awesome at lists
18:25 < EdwardIII> cool cool
18:25 < ccowan> we started with sessions to just get our toes wet
18:25 < EdwardIII> and PHP accesses redis to pull session info when it needs?
18:25 < ccowan> yup
18:26 < ccowan> I wrote an session addpator for PHP that works just like connect-redis
18:26 < EdwardIII> cool
18:27 < EdwardIII> i don't need to make php talk to node/nosql, but i have a feeling i might do with django later down the line
18:29 < ccowan> For us we are incrementally replacing functionality in PHP with Node.js
18:30 < EdwardIII> ccowan: are you able to say what your project is?
18:30 < jonaas> hi, should I use async code for syncronous things, to be future proof? for example if I want to log, or add async functionality later?
18:30 < tlack> thats what i need to do, but i feel like node isnt easy to host alongside php cuz the hosting config is so diff
18:30 < ccowan> yup... http://www.plus3network.com
18:30 < exien> ccowan: what's the primary reason for switching from php to nodejs?
18:30 < samholmes> Wait, pbkdf2 is native? :o
18:30 < tlack> jonaas: can you restate your question a different way? node will probably never go sync, if thats what you are asking
18:30 < EdwardIII> ccowan: and it's even for a good cause :)
18:31 < ccowan> PHP code was writen by 2 different teams and it's a huge mess.
18:31 < exien> ccowan: did they use a framework at least?
18:31 < jonaas> I mean writing my code with callback even if I don't use any async functionality (no file read etc)
18:31 < tlack> node is more fun anyway
18:31 < exien> ccowan: php can be a mess without a good framework
18:31 < EdwardIII> hrm i should rip jade out and replace it with ejs before i go any further, have to admit i'm not loving jade
18:31 < tlack> jonaas: in general i'd say dont write it before you need it
18:32 < exien> tlack: yes node may be more fun, but I'm still not in love with a million callbacks everywhere
18:32 < ccowan> exien: yeah... they used limonade but wrote their own ORM (whcih really sucked)
18:32 < tlack> exien: that is true but it also helps you structure your code in tiny fragments.. which can be nice at times. for instance, refactoring can be easier
18:32 < jetienne> exien: node got a bunch of sync function in files system
18:33 < jonaas> but than the whole error handling things is very different, so I have to rewrite many lines if I add async tlack
18:33 < tlack> exien: depends on the nature of the project though. if i had a ton of sql stuff to do before outputting anything, i'd probably die
18:33 < exien> jetienne: yes, but you don't want to use them otherwise the server pauses
18:33 < ccowan> I'm also really tired of writing PHP and I really love JavaScript
18:33 < jetienne> exien: hehe :)
18:33 < jetienne> exien: well you want sync or not :)
18:33 < jetienne> exien: you have the butter and the butter money as we say here :)
18:33 < exien> :)
18:33 < nkuttler> is there some preferred method for watching and (re)spawning node processes?
18:34 < tlack> nkuttler: 'forever' is the most popular one i think. 
18:34 < EdwardIII> jetienne: what does that mean?
18:34 < nkuttler> tlack: will look into it, thanks
18:34 < EdwardIII> ah i think i see
18:34 < tlack> nkuttler: i like 'node-dev' too
18:34 < EdwardIII> like 'you can't have your cake and eat it too'
18:34 < jetienne> EdwardIII: it is hard to get both side of the coin when you flip one
18:34 < jetienne> EdwardIII: yeah seems like it
18:35 < nkuttler> oh, node-dev looks useful, was actually looking for something like that
18:35 < jonaas> Should I write a function with callbacks, even if I don't use asyncronous functionality in a whole function, to be future-proof?
18:35 < jonaas> nkuttler: nodemon?
18:36 < samholmes> I'm thinking of generating a hash for a forgot your password feature. The hash is sent to the user's email address and they click on a link with the hash in it.
18:37 < samholmes> Should I just use pbkdf2 to generate the key/hash?
18:38 < samholmes> and how many iterations is 0.1s worth of work when using pbkdf2?
18:41 < jonaas> Should I write a function with callbacks, even if I don't use asyncronous functionality in a whole function, to be future-proof?
18:43 < samholmes> jonaas: if you plan on using async in the future, then you could use a callback
18:43 < EdwardIII> hrm i've installed ejs in the node_modules dir in my project, but i'm seeing Error: Cannot find module 'ejs'
18:43 < jonaas> samholmes: I think I want to log things in the future, and that should be async
18:43 < samholmes> EdwardIII: that's weird.
18:44 < jonaas> samholmes: but not in plan yet
18:44 < samholmes> jonaas: Yeah, I usually write using a callback to remain consistent.
18:45 < samholmes> AAA_awright: I didn't know pbkdf2 was native.
18:46 < samholmes> AAA_awright: I think I'm going to use that instead of bcrypt. But, I'm not sure what's the best way to use it.
18:46 < EdwardIII> hrm, frustrating
18:46 < EdwardIII> seems to find connect-mongodb OK in there
18:46 < samholmes> EdwardIII: could you post your directory structure on a pasting site?
18:49 < EdwardIII> samholmes: sure... here it is: https://gist.github.com/3502160
18:52 < EdwardIII> hrm why can't i find any examples of how to have an ejs layout type template heh
18:52 <@isaacs> ircretary: tell jetienne Run npm adduser, or create your account at https://npmjs.org/signup
18:52 < ircretary> isaacs: I'll be sure to tell jetienne
18:53 < jtomasrl> i've manage to install a vm with node.js and tranfer my app, but how can i access to it from outside the vm from the browser? i've done "node index.js" servers is up but can acces through xx.xx.xx.xx:3000 from my web browser
18:55 < jtomasrl> nvm solved :)
18:56 < tlack> EdwardIII: like "partials"? maybe something like this? http://stackoverflow.com/questions/5404830/node-js-ejs-including-a-partial
19:00 < AAA_awright> samholmes: http://git.bzfx.net/~aaa/magnode.git/tree/lib/authentication.pbkdf2.js
19:02 < AAA_awright> Additionally when I'm implementing the login, I make sure that an unsuccessful authentication returns the page after exactly 250ms, unless it's an unrecoverable server-side error maybe
19:05 < EdwardIII> tlack: hrm i wouldn't want to include my entire header and footer on every template though heh
19:05 < EdwardIII> tlack: unless that's the best way to do it? actually <% header() %>...<% footer %>, seems pretty daft though
19:06 < EdwardIII> can't seem to find any examples of someone just... creating a normal app on express using ejb and a consistent header/footer everywhere
19:06 < EdwardIII> seems like the hello world for a templating engine
19:06 < tlack> i have an example i can show you but it uses Dust and not EJS..
19:06 < jaseemabid> How do i delete a project published to npm?
19:06 < tlack> EdwardIII: also check this: http://stackoverflow.com/questions/7317359/newbie-questions-about-partials
19:07 < EdwardIII> tlack: always keen to see other peoples' work
19:07 < jaseemabid> How do i delete a project published to npm?
19:07 < AAA_awright> jaseemabid: Why would you want to do that
19:07 < jaseemabid> This page[https://npmjs.org/doc/rm.html] is throwing couchDB errors. Somebody fix it up?
19:07 <@konobi> jaseemabid: unpublish
19:07 < jaseemabid> AAA_awright, duplicate 
19:07 < EdwardIII> hrm he says 'The layout and partials should get pulled in automatically.'
19:08 < tlack> EdwardIII: here's some random crap i used for a while.. been shifting to hogan instead of dust but whatever https://bitbucket.org/tlack/express-dust-boilerplate
19:08 < AAA_awright> <https://npmjs.org/doc/rm.html>
19:08 < EdwardIII> oh i think i see
19:08 < EdwardIII> hrm sucks i have to make a seperate header and footer though heh
19:08 < exien> ccowan: I'm pretty sure I've found the culprit, it's my session store
19:08 < EdwardIII> makes me feel... wordpressy
19:09 < exien> ccowan: sessions are being continually created, I've got 25K session and less than a dozen users
19:09 < tlack> EdwardIII: you dont have to have them separate. he did that on purpose to minimize the size of each template (partial). note the output of <%- body %>
19:09 < jaseemabid> Please have a look at this screenshot
19:09 < jaseemabid> http://i.imgur.com/YsNvF.png
19:09 < AAA_awright> EdwardIII: Usually you have a template for the entire page, and then include the endire body/page contents as a variable within that
19:10 < EdwardIII> oh ok
19:11 < variable_> hi
19:11 < EdwardIII> thing is, it just seems to be calling my index.ejs directly, not applying the layout.ejs file
19:11 < EdwardIII> porting from jade to ejs: https://gist.github.com/6600a8dfc5c90a88127e
19:13 < EdwardIII> here's where i call the index: https://gist.github.com/3502687
19:13 < samholmes> AAA_awright: What do I generate the creditial with?
19:13 < fibo> hi all, i have a question about socket.io
19:14 < AAA_awright> samholmes: var credential = {password:"password"}
19:14 < fibo> I can emit an event passing a function as a parameter
19:14 < AAA_awright> record is the database record
19:14 < drudge> EdwardIII: express 3?
19:14 < samholmes> AAA_awright: Hmm. But I'm trying to generate a random string as a key to access the password reset form.
19:14 < AAA_awright> Modify some to suit your needs
19:14 < maxogden> functions are objects and event emitters emit objects
19:14 < variable_> i have problem by npm install express  and npm install -g express .  then if  use  var e=require('express');  print message that . can not find module express 
19:14 < EdwardIII> drudge: yep
19:15 < AAA_awright> samholmes: module.exports.generateRecord({password:"password"}, callback)
19:15 < EdwardIII> 3.0.0rc2
19:15 < variable_> i have problem by npm install express  and npm install -g express .  then if  use  var e=require('express');  print message that . can not find module express 
19:15 < AAA_awright> That returns your record to insert into the database
19:15 < tjholowaychuk> variable_ install it locally, not with -g
19:15 < fibo> than in my app.js I can catch that event and execute that function ... suppose console.log('foo')
19:16 < AAA_awright> variable_: Don't use -g ?
19:16 < fibo> it executes on my client console, even if I launch it from server. I CAN'T EXPLAIN THAT!!!
19:16 < samholmes> AAA_awright: That's not what I'm asking. I know I can input a password into this function and have it return the encryption. What I'm asking is what should I use to generate random hashes, not passwords, securily?
19:16 < variable_> npm install  express? i test this but ...
19:16 < EdwardIII> variable_: do it in your home dir
19:17 < AAA_awright> samholmes: That's the function, generateRecord
19:17 < EdwardIII> variable_: ...assuming you're using something like linux?
19:17 < AAA_awright> samholmes: It takes a password and outputs a database record
19:17 < samholmes> AAA_awright: I know. I don't have a password.
19:17 < variable_> i am using window xp 
19:17 < EdwardIII> ah
19:17 < AAA_awright> samholmes: ... so what are you using to authenticate a user?
19:18 < tlack> samholmes: i usually just generate a random string and store it in the users database record. you could also hash their userkey and password, or something like that
19:18 < samholmes> AAA_awright: Maybe I should just make a shasum and then input that into the system?
19:18 < AAA_awright> samholmes: NO
19:18 < EdwardIII> i'm not really familiar with how to install node modules on windows... maybe have a little google on that topic?
19:18 < luckysmack> anyone in here use azure? getting a publishing error and need to to track it down. https://gist.github.com/3502800
19:18 < tlack> EdwardIII: 'npm' has always worked fine for me on windows (amazingly)
19:18 < milani> isaacs: ping
19:18 < EdwardIII> tlack: just a case of installing to %HOME%?
19:19 < samholmes> AAA_awright: If a user forgot their password, I need to send them a link with a specific hash. When they click the link, the hash is matched against the encrypted version of the hash in the db.
19:19 <@isaacs> milani: yo
19:19 < tlack> EdwardIII: no idea. 'npm install express' puts it in the cwd, as expected
19:19 < EdwardIII> heh
19:19 <@isaacs> milani: what's the spam protection thing you're tlaking about?
19:19 < AAA_awright> samholmes: User sets a new password. Pass the password to generateRecord, store result in database. User logs in with a password. Pull record from database, pass record and supplied password to compareCredential
19:19 < samholmes> if it matches, then allow them to change their password.
19:19 < milani> isaacs, two or three days ago I tried to upload three or 4 appjs packages one after another
19:19 < variable_> must run install in this path : C:\Program Files\nodejs
19:19 < variable_> ?
19:20 < milani> isaacs, after publishing the third one, npm returns unauthorized access
19:20 < tlack> variable_: no, it will create node_modules wherever you run it
19:20 < milani> for each package I want to publish or even install.
19:20 < tlack> samholmes: you're overthinking this. :)
19:20 < milani> someone suggested it is an spam protection
19:20 <@isaacs> milani: what version of npm?
19:20 < AAA_awright> samholmes: Same thing goes for email recovery... Generate a password-reset URL, use that to hash it and store it in the database. When the user goes to that URL, compare it to the record in the database.
19:20  * EdwardIII wonders
19:20 <@isaacs> milani: npm -v
19:20 < samholmes> AAA_awright: I understand that part. But, if they want to _reset_ their password, the system needs to send a link _only_ to _their_ email and with a specifically _encrypted_ hash that verifies the link.
19:20 < milani> 1.1.46
19:20 <@isaacs> milani: oh, it's just that your token timed out
19:20 <@isaacs> milani: and it's not re-authing properly
19:21 <@isaacs> milani: you just got lucky and saw the exact moment it happened :)
19:21 < tlack> samholmes: you just need an unguessable hash of anything that you can use to find their account. it doesnt have to be the encrypted password
19:21 <@isaacs> milani: update npm
19:21 < samholmes> AAA_awright: Right... how do I do the generating of the password-reset URL part?
19:21 <@isaacs> milani: or just remove the `[_token]` section fro m ~/.npmrc
19:21 < milani> yeah I did that but I should remove it each time
19:21 < milani> after publishing a package
19:21 < milani> ok so I update npm.
19:22 < samholmes> tlack: If I just used a shasum for the url generating, then someone could brute force it regardless of whether I compare it to an encrypted version in the database.
19:22 < EdwardIII> heh ok i can't figure out why ejs/express.js isn't loading layout.ejs
19:22  * EdwardIII goes about picking open express.js
19:22 < tlack> samholmes: do you know how long it would take to perform 160bits worth of http requests
19:22 <@isaacs> milani: yeah, it's just a bug.  it's not updating the token when it expires.
19:22 < AAA_awright> samholmes: That's something you have to implement. When a user navigates to http://example.com/~username/passwordreset?token=sometoken, you need to look up the passwordReset token in the database, pass sometoken and the passwordReset record to the compare function
19:23 < samholmes> AAA_awright: Yeah. The token needs to be something secure though, or do you think a shasum is secure enough of a token in this case?
19:23 < milani> isaacs, lol. so I was misguided!
19:23 < AAA_awright> NO
19:23 < samholmes> AAA_awright: then what would be a secure enough token?
19:24 < AAA_awright> samholmes: The token in the URL is plaintext. It's functionally the samed as a password
19:24 < AAA_awright> *same as
19:24 < samholmes> eh, right.
19:24 < tlack> AAA_awright: it's a link in an email sent only to them, and that link lets them act as the account owner, of course it's the same as a password..
19:24 < sjonnet> Would this be a good place to ask questions about issues related to setting up a NPM mirror?
19:24 < AAA_awright> And it should have 128 bits of randomness just so it's not the weak link in the security chain
19:25 < samholmes> The plain text could be a shasum...I'm still going to compare the shasum to the pbkd2f APIs
19:25 <@isaacs> milani: a little bit, but it's ok :)
19:25 < AAA_awright> samholmes: You never ever use SHA-* except for authenticating contents of a file/packet
19:25 < samholmes> AAA_awright: My question is, how do I generate this 128bits of randomness?
19:26 < AAA_awright> samholmes: crypto.randomBytes(16).toString('hex')
19:26 < CIA-1> node: isaacs v0.9.1-release * r766a6ff / (ChangeLog src/node_version.h): wip - http://git.io/Ycpvpg
19:26 < AAA_awright> Note that Math.random is NOT cryptographically secure
19:27 < samholmes> AAA_awright: I have made that note from your previous statement on that. ;)
19:27 < samholmes> I see. That's all I was asking.
19:27 < AAA_awright> It bears repeating for the sake of the record :)
19:27 < baconseason> hey y'all. got a question about connect's csrf middleware.
19:27 < samholmes> I was thinking of 256 as the param for randomBytes, but I suppose that's unnecessary
19:28 < baconseason> what do I do if I want to use csrf protection, but also need to have an exposed endpoint for external webhook listening?
19:28 < samholmes> AAA_awright: I appreciate the redundency actually. :D
19:28 < tlack> man i hope your project is lucky enough to be the target of these intense random number generator attacks
19:28 < Xeon06_> Hey folks
19:28 < AAA_awright> That's way overkill yeah, I could imagine it introducing new attacks
19:28 < samholmes> redundancy*
19:28 < Xeon06_> My Node server is randomly stopping, and I can't figure out why. All there is in the logs is well, my own stuff. No JS errors
19:29 < samholmes> AAA_awright: how could it introduce new forms of attacks by being overkill?
19:29 < AAA_awright> The RNG probably only has 128 bits of internal state anyways
19:29 < Xeon06_> I notice some modules I am using have console.logs in them but I don't see that in my stdout. Is there somewhere else I can look?
19:29 < samholmes> RNG?
19:29 < samholmes> random number generator
19:29 < milani> Xeon06_, maybe they have verbosity settings.
19:29 < etcetera> moin
19:30 < AAA_awright> samholmes: the Random Number Generator, I wouldn't be suprised if there's some attack on it where requesting lots of numbers starts leaking information about the internal state
19:31 < Xeon06_> milani: Right, but there is nothing built in node itself, no hidden error files or any of the sort?
19:31 < samholmes> AAA_awright: You mean the larger the hex string is, the more information about the internal state a attacker could begin to decypher?
19:31 < tlack> Xeon06_: random question.. when you launch your app, are you logging to a file, and if so, are you using 2>&1? maybe you arent seeing stderr..
19:32 < milani> Xeon06_, no.
19:32 < Xeon06_> tlack: I am using nohup
19:32 < dejanr> join ruby
19:32 < Xeon06_> tlack, milani: I used to have JS errors that would make it "crash" and I would see those fine in the log. But now it just shuts down randomly iwthout anything
19:32 < AAA_awright> Maybe if it was a weak generator like Math.random
19:32 < milani> Xeon06_, they can also override console.log and implement it to redirect in a file.
19:33 < AAA_awright> Don't worry about it
19:33 < tlack> dejanr: traitor
19:33 < dejanr> tlack: missclicked sorry mate
19:33 < milani> Xeon06_, oh that maybe a logical error, when process has nothing to do it exists.
19:34 < AAA_awright> Xeon06_: You sure you have a server that's listening on a socket? You're not closing the socket, or calling exit() anywhere?
19:34 < samholmes> AAA_awright: How large does my db column have to be to hold the record generated by generateRecord?
19:35 < context> http://www.youtube.com/watch?v=sp5M9K3wZcY
19:35 < AAA_awright> If you don't have a server listening on a port, the other problem could be a function call which is supposed to return a callback, isn't calling the callback in some cases
19:35 < Xeon06_> milani, AAA_awright this occured to me. But I am using Faye (http://faye.jcoglan.com/)(not my pick), and I figured it would stop it from ending
19:35 < variable_> very very thanks. i understand. how it work. very very thanks
19:35 < variable_> :ِ
19:35 < variable_> :D
19:35 < tlack> Xeon06_: really weird man. can you get it to happen on command? i used to have that issue with mysql timing out after a few hours on a project of mine. i had it wrapped in node-dev so i never noticed
19:35 < AAA_awright> samholmes: Not sure exactly, call generateRecord and see how long the output is
19:35 < Xeon06_> Right, so its likely then that the server is simply ending without error, just because its done doing everything
19:35 < AAA_awright> I also have a column storing the type
19:36 < bnoordhuis> mikedeboer: i lost the link to the gist
19:36 < Xeon06_> tlack: I wish I could. I don't know what causes it
19:36 < AAA_awright> <http://faye.jcoglan.com/>
19:36 < tlack> Xeon06_: next time you restart, run as     node myapp.js 2>&1 | tee -a log.txt
19:36 < tlack> Xeon06_: then review that, maybe you're missing something somehow
19:37 < dejanr> guys how do you migrate or increementally update redis servers, is there something like migrations for redis and node
19:38 < bnoordhuis> mikedeboer: nvm, have it again :)
19:39 < jetienne> isaacs: fixed, thanks
19:40 < Xeon06_> tlack: Yeah, I am now just running it as is, and logging it, and just watching it go. But it can take as much as 2 hours haha
19:40 < Xeon06_> I'm suspecting the issue is Faye
19:40 < Xeon06_> And I'm just piling the excuses not to use it anymore anyways
19:41 < mscdex> is it just me or is it odd that assert.doesNotThrow() accepts an 'error' argument? and why is it documented?
19:42 < mscdex> if you're assuming it's not going to throw, why would you validate an exception message?
19:42 < mscdex> :S
19:44 < samholmes> AAA_awright: 119 characters? :\
19:45 < samholmes> Is it variable length or is it always the same?
19:45 < AAA_awright> Should be the same, why's it matter?
19:45 < samholmes> I need to know what length to set my DB column
19:45 < samholmes> it's a sql based system
19:46 < AAA_awright> No, allow for an expandion by at least 6 more characters or so, the length of the hash and the number of iterations are variable
19:46 < AAA_awright> If you wanted to store it as a binary blob you could save about 1/3 the space
19:46 < chrisjaure> did nodeup move? i'm getting a 404 http://nodeup.com/
19:47 < AAA_awright> Make sure you throughly test that though, opaque code is a possible attack vector
19:47 < samholmes> AAA_awright: A binary column?
19:47 < AAA_awright> Yeah like that
19:47 < samholmes> I'm not sure what you mean by opaque code.
19:47 < AAA_awright> Not sure how it works
19:47 < CIA-1> node: Bert Belder master * rc06e100 / test/simple/test-child-process-exec-error.js : windows: make test-child-process-exec-error pass - http://git.io/vlwKow
19:47 < samholmes> AAA_awright: Oh, you mean just copying your code without knowing how it work?
19:47 < AAA_awright> Well yeah that too
19:48 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:48 < samholmes> AAA_awright: That too..but what did you mean by opaque?
19:48 < AAA_awright> But I mean, if you're encoding the hash as a binary blob instead of base64, you can't as easily test that to make sure it's functioning as expected
19:48 < AAA_awright> That's more opaque
19:48 < AAA_awright> Code that isn't used often and regularly is another possible attack vector
19:49 < AAA_awright> So especially test the password reset function. People are going to test the password for you every day, but less so the password reset.
19:49 < samholmes> AAA_awright: How is that an attack vector just because code isn't used often?
19:49 < AAA_awright> If there's a bug you're less likely to find it
19:49 < EdwardIII> done some more research chaps
19:49 < samholmes> Ah I see what you mean now.
19:50 < EdwardIII> actually it looks like this just is not possible - you have to include head and include foot, and wait for ejs to implement something like 'extends' as present in jade
19:50 < AAA_awright> Especially big number/arbritrary length number libraries, where some code is only executed in edge cases maybe one out of a billion times
19:50 < samholmes> Well, instead of a binary blob, would it be best to use a VARCHAR?
19:50 < AAA_awright> That's where a code coverage test suite is really necessary
19:50 < CIA-1> libuv: Bert Belder master * r162e57b / src/win/error.c : windows: map ERROR_DIRECTORY to UV_ENOENT - http://git.io/tQsPTA
19:51 < AAA_awright> samholmes: I'm just showing you how to use crypto.pbkdf2, you have to ultimately decide how you want to encode the output, if you want base64, hex, binary blob, etc
19:52 < AAA_awright> I also look around at other libraries. Look at how Facebook, etc, sends message authentication codes, look at how MediaWiki, Drupal and such formats and stores hashes
19:53 < AAA_awright> (know when and why they're doing it wrong)
19:55 < CIA-1> node: Bert Belder master * r69d8e77 / deps/uv/src/win/error.c : uv: upgrade to 162e57b - http://git.io/5Acw9Q
20:01 < jayke> hiya
20:02 < jayke> someone can help me with a quick question?
20:02 < maxogden> yep
20:02 < context> jayke: no we cant. you have not asked a question that requires help.
20:02 < mmalecki> jayke: just ask :)
20:03 < maxogden> we wait with bated breath
20:03 < jayke> ok
20:03 < jayke> so, i got this external js file
20:03 < jayke> with a var in the main file
20:04 < maxogden> pre-emptive answer: read http://nodejs.org/api/modules.html
20:04 < oscarhou> Hi, can I use nodejs with an existing web framework or is it a web framework in itself?
20:04 < jayke> ok... u got me
20:04 < jayke> Accessing the main module
20:04 < cleos_frey> How do you guys check a functions arguments? Do you use asserts or what?
20:05 < cleos_frey> to make sure the user isn't giving junk
20:07 < jayke> I think I got it working, thanks!
20:07 < jayke> i know it sucks when some dumbass like me doesnt read the docs, sorry!
20:07 < mmalecki> cleos_frey: I don't. if user is giving you cruft, it's going to blow at some point
20:08 < mmalecki> it's theirs problem
20:09 < cleos_frey> mmalecki: but I'd like to give useful errors
20:09 < jayke> nope, its not working as expected
20:09 < cleos_frey> mmalecki: like should I stop the program and say, "hey you gave me junk here", or should I let it go?
20:09 < mmalecki> let it go :)
20:09 < mmalecki> this is how core acts
20:09 < cleos_frey> that's very zen
20:10 < cleos_frey> ohh
20:10 < jayke> well the question was: from an external module in a nodejs, how can i access a variable in the main module?
20:11 < CIA-1> node: Bearice Ren v0.8 * ref3617c / Makefile : build: fix `make -j' fails after `make clean' - http://git.io/DorFwg
20:14 < jayke> any help for that question?
20:14 < EyePulp> jayke: pass the variable in explicitly
20:15 < jayke> how does that work?
20:15 < jayke> any example available?
20:16 < EyePulp> foo = require('external').some_func(var_from_main);
20:16 < EyePulp> sorry
20:16 < EyePulp> var foo = require('external').some_func(var_from_main);
20:16 < jayke> so, this goes into the main module
20:16 < EyePulp> si
20:17 < jayke> how do i "grab" that var from the external one?
20:19 < EyePulp> because the external module is a series of exported functions, and they accept arguments, and you're passing in an argument.
20:19 < Tixz> I want to host several applications on the same server. Since they all can't listen on port 80, I've read that I need some kind of router/load balancer in front of the applications to redirect traffic to the appropriate servers, based on the requested domain. What should I use for this? I've heard HAProxy, Ngix, (Varnish?)
20:20 < jayke> so "some_func" is part of the external module
20:20 < EyePulp> Tixz: you can use nginx for that based on the host header, if you have only one IP available and want to put them all on port 80
20:20 < EyePulp> Tixz: search for nginx + virtual hosts
20:20 < EyePulp> jayke:  correct 
20:20 < jayke> i think i get it, from the external module make a function that sets the var, and pass the var as an argument
20:21 < Tixz> EyePulp: Is that the best solution? I have read several articles about it, I was just hoping someone here had a recommendation :)
20:21 < jayke> cool, i got it, thanks!
20:21 < Tixz> Also stumbled upon this project: https://github.com/kommander/vost
20:21 < EyePulp> Tixz: best for what?  Open heart surgery?  No, it's not well suited for that.  however if you could narrow down your problem, perhaps I can wax eloquently on its fitness to purpose.
20:22 < EyePulp> =)
20:23 < Tixz> EyePulp: Alright, I have an EC2 instance to play around with. I want to host my personal website, an application I'm building and a client website, so 3 domains so far. They're all node projects, but how do I serve them seamlessly from the same machine? :)
20:23 < CoverSlide> you can use node as your load balancer as well
20:23 < CoverSlide> there's node-http-proxy and bouncy that can do this for you
20:24 < EyePulp> Tixz: if you want a simple solution, use something prebuilt that solves the problem.  if you want to learn about load balancing, you can role your own.
20:24 < Tixz> I'll have a look at node-http-proxy and bouncy. I'd rather just go with a quick solution for now, as I'm learning plenty of other stuff atm
20:25 < EyePulp> the simple solution (in my experience) is to use nginx.  it's fast, conf files are very readable, and it's got tons of docs out there.
20:25 < Tixz> You know, information overload to the point where my brains cooking :p
20:25 < Tixz> Yeah, nginx seems very nice, the only downside I read was about when using it with socket.io
20:26 < Tixz> I don't know if there's still any problems there, the articles were a couple of months old
20:27 < CoverSlide> technically you can still use socket.io, but you can't use websockets as a transport behind nginx
20:27 < Tixz> Alright, I think I'll go with node-http-proxy, looks nice
20:27 < EyePulp> Tixz: typically you don't run socket.io through nginx - it's on its own port
20:27 < mscdex> CoverSlide: why not?
20:27 < CoverSlide> that's something they're working on though
20:27 < mscdex> the websocket spec should allow it
20:28 < jayke> EyePulp, sorry, no luck on that :\
20:28 < jayke> im doing a .setIO(io)
20:28 < CoverSlide> nginx doesn't support HTTP/1.1 or websockets, at least ootb
20:28 < jayke> and ive got a function declared, also with the modules.export
20:28 < jayke> that sets io = _io (the argument passed)
20:28 < mscdex> well, it didn't support the really old websocket versions, especially draft 76, but that was a long time ago
20:29 < EyePulp>  post your module code someplace, and the snippet where you're calling it
20:29 < mscdex> because it did some things to purposefully break HTTP
20:29 < jayke> ok
20:30 < jayke> http://pastebin.com/p1Jcq5Eu
20:30 < CoverSlide> iirc, all websocket specs require a protocol upgrade, which is a HTTP/1.1 feature, which isn't supported by nginx
20:30 < jayke> typo on var
20:32 < CoverSlide> new idea for a module: pirate.js, new to-javascript language that basically does .replace(/\bar\b/, 'var')
20:32 < gkatsev> CoverSlide: don't you mean 'var'->'arr'?
20:33 < EyePulp> varr
20:33 < gkatsev> oh
20:33 < gkatsev> I gues
20:33 < gkatsev> EyePulp: except, wouldn't it be vvar?
20:34 < gkatsev> oh, word boundary
20:34 < CIA-1> libuv: Bert Belder master * r5c674b2 / src/win/process.c : windows: squelch some warnings related to int64 to int32 conversion - http://git.io/yQkM3w
20:34 < CIA-1> libuv: Bert Belder reviewme * rabc945b / src/win/process.c : windows: make spawn with custom environment work again - http://git.io/FpvZBw
20:35 < jayke> ok, kinda got it working
20:36 < EdwardIII> i'm finally starting to get there with node/backbone/mongoose
20:37 < EyePulp> jayke:  http://pastebin.com/bRUNcnnt
20:38 < EyePulp> this assumes you want a number of functions available in your module
20:38 < EyePulp> and it's completely untested
20:40 < jayke> EyePulp, yeah i did something similar, but node executes all the module at once
20:40 < jayke> and i have one io.sockets.on
20:40 < jayke> i might have to make some kind of callback
20:40 < jayke> i dont really know
20:42 < EyePulp> jayke: node doesn't execute your external module functions (exports) unless you call them  It loads them into memory upon requiring them, but execution only occurs when you call the function.
20:42 < jayke> well, what i mean is that triest to do "io.sockets.on" before having io "declared"
20:42 < jayke> io.sockets.on('connection', function (socket) {   ^ TypeError: Cannot read property 'sockets' of undefined
20:43 < jayke> so i have to make something that when setIO is called, i have that io.sockets.on thing going on
20:43 < jayke> i think
20:43 < jayke> im no guru
20:43 < EyePulp> jayke: you should also use semicolons more often.
20:44 < jayke> yeah, bad habit
20:44 < EyePulp> jayke: test your code all on one page before you break it into modules.
20:44 < jayke> yeah, all in one works perfect, is when im trying to branch it in parts
20:45 < jayke> maybe
20:45 < jayke> i can do something else
20:45 < jayke> instead of setting io
20:45 < jayke> passing "server", and declaring io from the external module
20:45  * EyePulp is suspicious that there's a very simple solution here
20:49 < CIA-1> libuv: Bert Belder master * rabc945b / src/win/process.c : windows: make spawn with custom environment work again - http://git.io/FpvZBw
20:50 < jayke> YES
20:50 < jayke> GOT IT
20:50 < jayke> hahahahahah, man i feel god
20:51 < yawnt> synonym for link?
20:51 < jayke> its kinda ugly, but fuck it
20:51 < yawnt> i need two of them
20:51 < yawnt> resource and content ?
20:51 < CIA-1> node: Bert Belder master * r4cfd64e / deps/uv/src/win/process.c : uv: upgrade to abc945b - http://git.io/SWD3Hg
20:54 < CIA-1> node: isaacs v0.9.1-release * r060f292 / (ChangeLog src/node_version.h): wip - http://git.io/dIniiw
20:54 < jayke> btw, EyePulp thanks again
20:55 < jayke> i did this, passed the server into the function and var io = require('socket.io').listen(_server).sockets.on('connection', function (socket) {
20:56 < oscarhou> does nodejs work well with actionscript at all?
20:57 < CoverSlide> the newt plays the flute, the carp plays the harp, the plaise plays the bass, and they soundin sharp, the bass plays the brass, the chub plays the tub, the fluke is the duke of soul
20:57 < cpsubrian> npm respects .gitignore .. but … it does not seem to support '!' lines. Intended or bug?
20:58 < tnorris> when using net.createServer and writing to a socket file, is there a way to set the permissions of the socket file being created?
20:59 < CoverSlide> maybe with fs.chmod
20:59 < CoverSlide> or process.umask beforehand
20:59 < tnorris> CoverSlide: ok, i'll take a look at those. thanks.
21:04 < tnorris> CoverSlide: I tried setting the umask to 0777, and it all the sockets that were created came out with 0000. any ideas?
21:04 < jayke> ok, another one.... Accessing an external module var from another external module. jesus
21:05 < CoverSlide> try umask(0)
21:06 < tnorris> CoverSlide: awesome. now I don't have to run chmod a+w on the socket files every time they're written. thanks.
21:11 < CoverSlide> de fish on the land aint happy, he sad cause he in da bowl
21:13 < Darren__> hey all
21:13 < Darren__> quick question, I have updated my project to the v0.8.8 source, and console.log is giving me a TypeError: Object #<TTY> has no method 'write'
21:14 < Darren__> its a funny build with node started as a background thread in the actual app
21:19 < bnoordhuis> Darren__: what are you doing exactly?
21:20 < Darren__> I compile the node sources, and link them into an app
21:21 < Darren__> then call node::Start(argc, argv);
21:21 < bnoordhuis> Darren__: so where does that TTY object come from? we don't export it
21:21 < bnoordhuis> are you using process.binding('tty_wrap')?
21:21 < Darren__> it was working on 0.6.6, so somethings changed on 0.8.8
21:23 < Darren__> I don't use tty_wrap
21:23 < mike18> i'm attempting to do some web-scraping with node.js... i've attemped phantomjs-node and node.io so far...
21:23 < Pavi> Hi
21:23 < Pavi> I have some doubt in integrating node-waf with cross compilation
21:23 < mike18> my problem is the first page that i 'GET' is a google page that just contains a script to set a new window.location.  i'm trying to figure out how to evaluate that javascript and move on...
21:24 < Pavi> can any one help me on how to cross compile, and get *.node file which could be run in ARM Process
21:31 < TehShrike> substack, you magnificent bastard
21:31 < Darren__> The app is being run from the command line, so should pick up the normal stdio?
21:32 < yawnt> must say i laughed
21:32 < CoverSlide> what did the sucstack do today?
21:32 < CoverSlide> *substack
21:32 < TehShrike> substack: not only is your stream handbook excellent and much-appreciated, but it showed up in my RSS feed in the form of a full post! <3
21:33 < substack> TehShrike: I realized I could just paste the same thing twice!
21:33 < TehShrike> :-)
21:33 <@konobi> Pavi: please ask in channel rather than via pm
21:44 < nahamu> is there a way when writing a script in node to exec rather than fork a child process?
21:46 < nahamu> I'm guessing that child_process.exec actually forks...
21:47 < nahamu> isaacs: ping?
21:48 <@isaacs> nahamu: no, it'll alwyas fork a child process.
21:48 < nahamu> :-/
21:48 < jharper> Hi, I'm new to Node and trying to use it to write a server which must be listening for incoming UDP connections while processing data.  At the end of each round of data processing, it must insert data which has arrived through the connections since the last round.  What's the preferred way of dealing with processing data while concurrently listening for incoming data in Node?
21:48 <@isaacs> nahamu: if you want to call exec() without forking first, then write a binary addon, and do it yourself in C++
21:48 <@isaacs> nahamu: there's no JS api for this.
21:48 <@isaacs> nahamu: it'd be kind of a disaster to do that.
21:49 < nahamu> isaacs: fair enough.
21:49 < mmalecki> executing a child process on Unix always forks :)
21:50 < nahamu> mmalecki: In my bash scripts I can "exec /some/other/binary"
21:50 <@isaacs> mmalecki: right, but it doesn't exec in a forked thread, so you block on it
21:51 <@isaacs> i assume that's what nahamu is actually requesting
21:51 < nahamu> isaacs: the context is actually smartos... the KVM branded zones aren't allowed to fork, and the devs have been kind enough to add a metadata format for me to tweak my custom KVM dataset, but they give me the metadata in json.
21:51 < nahamu> I currently have a bash script whose last step is to exec qemu, and I'd love to write it in node so that I can easily slurp in the json metadata before exec'ing qemu.
21:52 < Almindor> I'm using readline to process some more complicated imports and when I redirect a file to it like "node myapp.js < file.json" I get all the contents put onto screen even if I don't output anything in the code, why so?
21:52 < livinded> um, on unix doesn't exec() just replace the current process with a new process image?
21:52 < nahamu> livinded: yup
21:53 < nahamu> worse than blocking... :-P
21:53 < livinded> that's why you need to explicitely fork before you call exec() otherwise the parent goes bye bye
21:53 < livinded> oh sorry, I misread above
21:53 < mmalecki> that's what I mean by "child process"
21:53 < nahamu> right, but I need the parent to go byebye
21:53 < nahamu> it's not the normal use-case for node.
21:53 < nahamu> so isaacs instructions to make my own binary addon makes sense.
21:53 < livinded> and in node exec() will always fork before calling exec?
21:54 < nahamu> livinded: node never calls the exec syscall without first calling the fork syscall.
21:54 < mmalecki> livinded: yeah
21:54 < mmalecki> actually, libuv does all of that
21:54 < livinded> right
21:54 < mmalecki> I'll find the snippet, sec
21:55 < mmalecki> here, https://github.com/joyent/libuv/blob/master/src/unix/process.c#L353
21:55 < mmalecki> fork, first https://github.com/joyent/libuv/blob/master/src/unix/process.c#L425
21:55 < livinded> need to dig into libuv soon. My C is strong but C++ is weak :/
21:56 < mmalecki> livinded: libuv is C :)
21:56 < nahamu> so in theory I could modify libuv to have support for what I want, and then add it to node, but then people might use it and bad things would happen...
21:56 < mmalecki> also, not sure where actual exec* happens
21:56 < livinded> mmalecki: it is? v8 is just C++?
21:56 < mmalecki> but certainly after fork(2)
21:56 < mmalecki> livinded: v8 is C++, node is C++
21:56 < Pavi> wat is the channel link i should use to post my queries
21:57 < mmalecki> it's like, node's C++ binds libuv to JS
21:57 < livinded> ah, ok. The little bit of native node module code I read was C++. I just assumed libuv was as well
21:57 < mmalecki> but yeah, I wish v8 was C :)
21:57 < yawnt> i think everyone does mmalecki 
21:57 < yawnt> except google maybe
21:57 < mmalecki> now I can barely understand it because of templates
21:58 < livinded> Google also likes Java though...They don't exeactly have great taste
21:58 < mmalecki> like, really heavy templates
21:58 < mmalecki> yeah
21:58 < kranius> C++ is verbose
21:58 < yawnt> livinded: true
21:58 < CoverSlide> They should use go
21:58 < yawnt> we should all just switch to D and skip C++ right ahead
21:58 < mmalecki> CoverSlide: they do on some occasions
21:58 < yawnt> :d
21:58 < livinded> doesn't leveldb implement most of the useful stuff from stl?
21:58 < livinded> at least data structure-wise
21:59 < mmalecki> livinded: it implements all I ever used in STL, map
21:59 < CoverSlide> D is awesome, except for the whole phobos / tango thing
21:59 < mmalecki> TANGO DOWN.
21:59 < jharper> is there a feature in Node to allow me to do data processing while still listening for incoming messages?
21:59 < mmalecki> jharper: spawning a child process for doing data processing
21:59 < mmalecki> and waiting for messages from it
21:59 < crassus> K, Q, J and A+ are all much cooler than D
22:00 < livinded> the new C++x0 is actually pretty cool
22:00 < livinded> native regex support is nice
22:00 < mmalecki> man, I wish Scala and Clojure weren't JVM
22:00 < jharper> mmalecki: thanks, I just didn't know if there was another way
22:00 < CoverSlide> <3 clojure
22:00 < purr> Let it be known that CoverSlide hearts clojure.
22:00 < livinded> port closure to llvm
22:01 < livinded> clojure*
22:01 < mmalecki> livinded: WOULD KICKSTART.
22:01 < livinded> haven't touched clojure because of the jvm, but lisp is cool. More intrested in Haskell at this point though
22:02 < CoverSlide> haskell makes my brain hurt
22:02 < CoverSlide> everyone should learn factor
22:02 < livinded> it's too bad Oracle isn't doing something stupid like re-closed sourcing the JVM. It would solve a lot of problems
22:02 < crassus> Isn't the whole point behind Clojure the JVM
22:03 < CoverSlide> there lies a fine line between the language and the implementation
22:03 < livinded> crassus: ya, but who wants to use the JVM unless you're tied to it?
22:03 < CoverSlide> technically you can compile Clojure to JavaScript
22:04 < crassus> why not livinded? there's little upside from clojure without, versus just using common lisp afaik
22:04 < livinded> then run that through v8?
22:04 < livinded> crassus: lisp with a decent execution target
22:05 < livinded> my dream is just to replace the JVM with LLVM EVERYWHERE
22:05 < CoverSlide> racket ftw
22:05 < mmalecki> livinded++
22:05 < mmalecki> <3 livinded 
22:05 < purr> Let it be known that mmalecki hearts livinded.
22:05 < mmalecki> at least that works.
22:05 < CoverSlide> why hasn't anyone made a java to llvm compiler?
22:05 < livinded> racket is what mzscheme became right?
22:05 < CoverSlide> yes
22:06 < livinded> why the change?
22:06 < CoverSlide> they changed the language syntax slightly
22:07 < CoverSlide> so they gave the language a new name
22:07 < livinded> ah
22:07 < CoverSlide> although the racked executable still comes with mzscheme and has r5rs and r6rs modes built in
22:09 < etcetera> how does npm work?
22:09 < CoverSlide> unicorn blood
22:10 < nlf> ^ accurate
22:11 < etcetera> why havent other ecosystems adopted it for their own package management.
22:11 < etcetera> esp considering node's portability.
22:12 < livinded> wow! the new firefox webgl demo looks pretty good
22:12 < livinded> a natively written 3d engine rather than a converted one with emscripten might actually be usable soon
22:12  * insin just had to fill a setup.py file with crap to pull in a Git repo with pip :( Steal npm, everything
22:13 < mmalecki> insin: I feel ya
22:13 < etcetera> insin: ?
22:13 < CoverSlide> well npm is probably one of the first to do local installs by default. others you can tweak to do local installs
22:13 < livinded> oh, don't even get me started on python packages
22:14 < livinded> still cleaning shit up from playing the Stripe wargame and having ot install a bunch of python crap
22:14 < billy> virtualenv is your friend :)
22:14 < CoverSlide> before 1.0.0 npm was basically rubygems for node
22:17 < livinded> billy: thanks!
22:17 < wereHamster> does nodejs have a way to interrupt the script if it detects that it's running for too long (to interrupt infinite loops)?
22:17 < CIA-1> node: Bert Belder master * r143e9be / test/simple/test-fs-truncate.js : test: make test-fs-truncate pass on windows - http://git.io/jyNBQw
22:18 < CoverSlide> if you have an infinite loop, then you have to shut it down remotely
22:18 < CoverSlide> but that's common to any language
22:18 < wereHamster> how? Is it possible to tell v8 to forcibly interrupt the code (and throw na exception or something)?
22:19 < CoverSlide> well if you have an infinite loop, then it never goes to the event handler, so the timeout event would never fire 
22:19 < CoverSlide> the way to fix that is
22:19 < CoverSlide> don't write infinite loops
22:20 < wereHamster> Something like this: http://bespin.cz/~ondras/html/classv8_1_1V8.html#af7d845e6f55eb76085d5ff3601780986
22:20 < wereHamster> browsers have a way to interrupt javascript. So the functionality is there.
22:20 < wereHamster> .. in v8
22:23 <@konobi> wereHamster: like a signal handler?
22:23 < CoverSlide> hmm maybe v8 runs on a different thread than the browser
22:24 < wereHamster> konobi: do signals preempt the running code?
22:24 < CoverSlide> if you kill it externally
22:25 < CoverSlide> if you have a while(true) then there's really no way to stop it within code
22:25 < wereHamster> that's quite obvious
22:25 < CoverSlide> i thought that was your question
22:26 < wereHamster> I was thinking along the lines of a special option to have v8 interrupt the execution if it detects that JS is not returning control to the main loop for too long.
22:27 <@konobi> wereHamster: yes... certain signals do require preempting
22:29 < CIA-1> node: isaacs v0.9.1-release * re6ce259 / (ChangeLog src/node_version.h): 2012.08.28, Version 0.9.1 (Unstable) - http://git.io/arSiHQ
22:32 < duko> hello I would like to know if there is a common technique for adding html string to a document without adding elements that would not be found in the string
22:32 < CIA-1> node: isaacs master * re6ce259 / (ChangeLog src/node_version.h): 2012.08.28, Version 0.9.1 (Unstable) - http://git.io/arSiHQ
22:32 < CIA-1> node: isaacs master * r1550dda / (ChangeLog src/node_version.h): Merge branch 'v0.9.1-release' - http://git.io/nslCZw
22:32 < CIA-1> node: isaacs master * r459717e / src/node_version.h : Now working on 0.9.2 - http://git.io/zZH1Wg
22:35 < CIA-1> node: isaacs v0.8 * r0ef1e5b / doc/blog/release/v0.9.1.md : blog: Post for 0.9.1 release - http://git.io/FyoW0w
22:35 < CoverSlide> duko: wtf?
22:37 < CoverSlide> you have betrayed shiva!
22:45 < duko> i know that i could use elem.innerHTML = '<div></div>'; parentElem.appendChild(elem);
22:45 < duko> but I'm looking for something else...
22:57 < duko>   var elem = document.createElement('div'),
22:57 < duko>       childElem;
22:57 < duko>   elem.innerHTML = html;
22:57 < duko>   childElem = kuaDOM.getFirstChildElem(elem);
22:57 < duko>   elem.removeChild(childElem);
22:57 < duko>   return childElem;
22:57 < duko> that is my solution
22:58 < duko> where kuaDOM gets the first child that is nodeType 1
22:59 < mscdex> wrong channel?
23:01 < duko> maybe it is
23:01 < duko> my nick isn't registred so i can't go to #javascript
23:01 < duko> i should register my nick but i always forget my password
23:04 < Ards> hey guys
23:04 < Ards> I'm getting the following error using express 3 and express-validation : TypeError: Object #<ServerResponse> has no method 'local'
23:04 < Ards> express-form sorry
23:05 < Ards> how can I validate form with node?
23:17 < samholmes> Does anyone know whether stripe.com has the ability to payout money to customers?
23:19 < crassus> samholmes: that's probably a better question for #stripe
23:20 < livinded> samholmes: yes
23:20 < crassus> samholmes: and there is a way to do that...but it involves a little hackery
23:20 < samholmes> crassus: What hackery?
23:20 <@konobi> what's the EU equivalent of stripe?
23:20 < livinded> breaking into their bank account and checking?
23:20 < crassus> you have to create and then obtain an API key for each customer...this method is outlined in their docs somewhere, but it's being phased out
23:21 < crassus> as they're introducing a new OAuth method that's in beta right now
23:22 < livinded> I hope it's oauth2
23:26 < crassus> yep, it is livinded.
23:27 < yawnt> konobi: i wish there was one
23:27 < yawnt> we, poor fellas from EU have to stick w/ paypal
23:27 < yawnt> gocardless shoul expand from UK in the next few months though
23:33 <@konobi> there was one that someone mentioned a while ago
23:36 <@konobi> spreedly?
23:38 < yawnt> there's recurly
23:38 < yawnt> but it costs too much for me :(
23:39 <@konobi> or maybe it was zooz
23:39 < yawnt> i need recurring billings
23:39 < yawnt> not mobile apps :(
23:41 < crassus> yawnt: fwiw, you could go with something like auth.net + recurly for recurring billing in the UK right now...
23:42 < yawnt> i'm in italy
23:42 < yawnt> no UK :(
23:42 < crassus> hmm, actually I'm not so sure about auth.net in the UK, sorry
23:42 < yawnt> but recurly, as i said, it's too expensive
23:42 < crassus> apologies, I just read the scrollback
23:42 < yawnt> something around 69/mo if im right
23:42 < yawnt> no problem, thanks for helping anyway :)
23:45 <@konobi> yawnt: zooz works in the browser too
23:45 <@konobi> but no idea if it supports recurring
23:46 < yawnt> will look
23:46 < yawnt> thx
23:48 <@konobi> yawnt: sounds like it does
23:49 < yawnt> sweet! does it work in EU?
23:50 <@konobi> "ZooZ does remember card details for recurrent payments, and it remembers it cross app per device. "
23:50 <@konobi> yup
--- Log closed Wed Aug 29 00:00:43 2012
