--- Log opened Sun Feb 03 00:00:21 2013
00:00 < chesles> Havvy: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/strike
00:01 < chesles> doesn't answer why, i guess. but it's not just the REPL
00:01 < clone1018> What's the nodejs preferred method of creating a "class"?
00:02 < cloudbender> << hides behind the bar
00:02 < chesles> there's also String.blink ;)
00:02 < Havvy> clone1018: I use the method made popular by Crockford
00:02 <@Nexxy> clone1018, there are none!
00:02 < threecreepio> and String.fontsize(n)
00:02 < Havvy> chesles: There's more than than.
00:03 < Havvy> I was looking for .startsWith, but I can't find it.
00:03 <@Nexxy> are we playing charades?
00:03 < asdf12> what system programming language do you guys like besides C ?
00:03 < asdf12> for those who like javascript
00:03 <@Nexxy> D
00:03 < Havvy> asdf12: Rust. ;)
00:03  * Aria laughs. There's a good option other than C?
00:04 < asdf12> rust looks cool, but i dont know if its going to go anywhere
00:04 < nathan7> Rust is pretty fucking awesome, and not ready for production use in the slightest.
00:04 < Havvy> nathan7: Nope. :)
00:06 <@Nexxy> I do all my systems programming in OCaml
00:07 < Aria> Ooh. OCaml is actually a great choice.
00:08 < cloudbender> erlang I think can be used for system level code
00:08 < cloudbender> not sure.
00:08 < cloudbender> and then there is good ole' assembler
00:08 < Aria> Erlang is pretty high level.
00:09 < cloudbender> Wasn't it invented for wrting microcode for switchgear ?
00:10 <@Nexxy> actually, it was created solely for the purpose of writing, "Erlang: the Movie"
00:10 < cloudbender> lol
00:10 < torvalamo> erlang is a functional language, and therefore by definition high level
00:10 < torvalamo> but it's quite fast still
00:10 < torvalamo> for i/o
00:10 < torvalamo> and routing
00:11 < torvalamo> and filtering primitives
00:11 < cloudbender> sounds right
00:11 < torvalamo> it's when you start doing manipulation that things start getting complicated
00:12 < torvalamo> which is why only the facebook chat is written in erlang, and not the rest of facebook.
00:13 < torvalamo> actually i'm not sure if that's still the case, but yeah
00:13 <@Nexxy> http://www.youtube.com/watch?v=v3rhQc666Sg
00:21 < owen1> is there convention for file names (dash or underscore or camel-case, etc)
00:21 < owen1> and folder names
00:25 < Havvy> >> "abc".startsWith
00:25 < purr> Havvy: undefined
00:25 < Havvy> :/ I remember this method working at one point.
00:26 < nathan7> Havvy: it's part of the future
00:32 < asdf12> if the future was tomorrow, then when tomorrow comes wouldn't we be living in the future? so can't the same be said about yesterday? that means today is the future
00:35 < harrisonm> asdf12: But that's entirely based on treating time as a discrete rather than a continuous variable
00:36 < asdf12> nice
00:37 < Havvy> something something complecting something time complecting value something something clojure something
00:38 < ThePrimeMedian> im going crazy - can someone help me. Im on Mac OSX Mountain Lion - I can do a "npm install -g express" with no problem, I have permissions.. but when I do a "express --h" I get "-bash: express : command not found"
00:39 < Aria> Is it in your path?
00:39 < ThePrimeMedian> NODE_PATH = /usr/local/share/npm/lib/node_modules
00:39 < ThePrimeMedian> PATH = /usr/local/share/npm/lib/node_modules:/sbin:/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin
00:39 < Aria> And is there  /usr/local/share/npm/lib/node_modules/express?
00:40 < ThePrimeMedian> indeed
00:41 < ThePrimeMedian> im about to format this comp, beacuse I installed all the stuff from homebrew, but when I manually installed node and npm, everything worked
00:56 < cxreg> .oO(hash -r?)
01:19 < euoia> hmm, inside a constructor I am doing console.log(this) and it's not showing the constructor's functions, but I can tell they exist by doing console.log(this.fn) and I get an output of [Function]
01:19 < euoia> what's that about?
01:19 < Aria> log this.__proto__
01:21 < euoia> Aria: works
01:22 < euoia> Aria: I didn't know that console.log doesn't show things from the prototype
01:22 < Aria> Yeah, it omits them.
01:24 < kenperkins> isaacs: you recall me asking about where to read about the node roadmap, you mentioned github issues
01:24 < euoia> does everyone use var that = this or are there other conventions?
01:24 < cxreg> strictly speaking, they aren't there at all
01:25 < cxreg> the prototype is used at method dispatch time, but they're not properties on the object
01:25 < SomeoneWeird> euoia, .bind(this)
01:26 < CoverSlide> .bind of course doesn't work on ES3, but it is shimmable
01:26 < cxreg> i use var self = this.  i used to use bind a lot but it became tedious and error prone
01:26 < CoverSlide> honestly, var self = this is the most common convention I see
01:27 < CoverSlide> I personally use var _this = this; because sometimes if I reorganize code I find myself changing contexts a lot and ot
01:27 < CoverSlide> it's a one character change
01:27 < euoia> if you have a lot of functions-within-functions you'd have to bind each one of them rather than setting that = this once
01:27 < euoia> I have been using $this = this
01:28 < euoia> since it's a one character change
01:28 <@Nexxy> I have been using the dark arts
01:28 < CoverSlide> raising the dead or lengthening life?
01:28 <@Nexxy> all of the above
01:28 < CoverSlide> awesome
01:29 <@Nexxy> http://www.youtube.com/watch?v=NcnWqz8kafo
01:30  * Havvy uses => (if this was Coffeescript)
01:31 < cxreg> euoia: btw "for (x in this)" will enumerate up the prototype chain if you really need to do so
01:32 < cxreg> you can tell if it's such with hasOwnProperty
01:32 < CoverSlide> I'll be honest, that scenario comes up all of never times
01:32 < euoia> yep, thanks
01:33 < cxreg> which?
01:33 < euoia> might be useful if you have a big prototype hierarchy
01:33 < Havvy> If you have a big prototype hierachy, you have bigger problems.
01:33 < CoverSlide> Havvy++
01:34 < Havvy> Documented interfaces and mixins FTW
01:34 <@Nexxy> mixins belong at the soda fountain
01:34 <@Nexxy> (or icecream shop)
01:34 < Havvy> Nexxy: Or composition...
01:35 < cxreg> traits are like mixins for grownups
01:35 < Havvy> cxreg: Traits are over-engineered. ;)
01:36 < cxreg> i'm not a big fan of the google implementation
01:36 < cxreg> but conceptually... no not at all
01:38 < jtreminio> Evening all. Does anyone know of any always-on node IRC clients? Basically something that I set up to connect to an IRC server and stays on, logging everything, then I can sign in to it via my browser without anyone seeing I've been gone or anything
01:39 < cxreg> why node?  there are clients which do this
01:39 <@isaacs> kenperkins: that's true
01:39 <@Nexxy> jtreminio, use irssi + screen
01:39 < jtreminio> cxreg, I want to throw it on appfog
01:39 < Havvy> jtreminio: You just described bouncers.
01:40 < Havvy> or BNC
01:40 <@isaacs> kenperkins: there are two milestones in particular: v0.10, and post-v0.10
01:40 < jtreminio> cxreg,  Nexxy, Havvy I want to throw the thing into appfog
01:40 < jtreminio> I don't think appfog supports bouncers
01:40 < Havvy> I don't know if anybody has created a BNC client in Node.
01:41 < Havvy> or is it a server?
01:41 <@Nexxy> there are IRC libs out there
01:41 <@Nexxy> but no BNC that I'm aware of
01:41 < jtreminio> not a server, I want it to connect to a server and just stay on
01:41 < jtreminio> gotcha
01:41 <@Nexxy> although it'd be fairly simple to implement
01:41 <@Nexxy> it would take a bit of work to do properly
01:41 <@Nexxy> you pretty much just need a proxy that reponds to PING requests from the server
01:42 < cxreg> hell, the original node demo was an irc server.  heh.
01:42 <@Nexxy> and dumps everything into a log file to replay to you when you reconnect
01:42 <@Nexxy> cxreg, wasn't it just tcp chat?
01:43 < spion> yeah the IRC protocol is extremely simple :)
01:43 <@Nexxy> jtreminio, you should probably plan for scope creep now and just start writing IRC's successor protocol
01:43 < jtreminio> hah
01:43 < spion> its a line protocol though, so make sure to use some neat line stream tool
01:43 <@Nexxy> newline emitter!
01:44 < jtreminio> I know nothing about node.js. I just know that recently there's been a bunch of clients in node so I figured it's a good language that may have something already made
01:44 < Havvy> There's node-irc for the irc framework most people use. And then there's nrc, which is my personal framework.
01:44 < kenperkins> isaacs: my specific question is where is the more board roadmap documented? Or is there sucha  thing
01:46 < isaacbw> irc is pretty simple though
01:46  * spion likes https://npmjs.org/package/split
01:46 < asdf12> irc is dumb
01:46 < isaacbw> it could be a good experience to write an irc client using just net
01:46 < isaacbw> irc is old
01:46 < asdf12> why cant we all be on google hangout thats the new ircx
01:47 < cxreg> i thought it was google wave
01:47 <@Nexxy> asdf12, lol ircx
01:47 < asdf12> thats deprecated
01:47 < asdf12> or non existent anymore
01:47 < spion> I was really excited about wave :(
01:47 < cxreg> oh right sorry, apache wave
01:47 < isaacbw> it's just not run by google anymore
01:47 < isaacbw> it's an apache project
01:48 < cxreg> it became "google waive"
01:49 < isaacbw> "your right to privacy"
01:50 <@Nexxy> woah, blammo! made a node framework!
01:51 <@Nexxy> I bet it's better than bad
01:52 < isaacbw> what does it do
01:52 <@Nexxy> https://github.com/walmartlabs/hapi
01:53 < davidcramer> http://dpaste.com/906073/ why does this work on one machine and not the other?
01:53 < davidcramer> http://dpaste.com/906070/
01:54 < isaacbw> maybe one machine isn't a machine at all
01:54 <@isaacs> kenperkins: we don't really do that.
01:54 < kenperkins> rgr
01:55 <@isaacs> kenperkins: if you are looking for the more long-term vision, it's not enough to warrant a document, really
01:55 <@isaacs> kenperkins: 1. Fix http client (0.12).  2. Finish node (1.0)
01:55 < kenperkins> I just want to make sure I have my head around the big stuff :)
01:55 < kenperkins> that's all
01:55 <@isaacs> yep
01:55 <@Nexxy> then on to "NO"
01:55 < timeturner> lol walmart made a http framework
01:56 < timeturner> it looks clean too...
01:56 < davidcramer> does npm have a cache somewhere?
01:56 < timeturner> yep ^
01:56 < davidcramer> that might be failing
01:56 < timeturner> npm cache clean
01:56 < davidcramer> i tried that, doesnt change this error
01:57 < davidcramer> but the version definitely exists
01:57 <@isaacs> Nexxy: ++
01:57 <@Nexxy> No.
01:57 < davidcramer> could it be that somethings refusing to install based on some package versioning information ?
01:57 <@isaacs> davidcramer: different versions of npm
01:57 <@isaacs> davidcramer: 1.1.0-3 is super old
01:58 < davidcramer> ah looks like im installing from source
01:58 < davidcramer> ok thanks
01:59 < davidcramer> is there a recommended stable version of node/npm that wont break everything :)
01:59 < davidcramer> im on 0.6.8 and 1.1.0 respectively
01:59 <@Nexxy> 0.8.18?
02:00 <@isaacs> davidcramer: yeah, 0.6.8 is very old, and actually has a few security issues.
02:00 <@isaacs> davidcramer: at *least* upgrade to the latest 0.6
02:00 < davidcramer> npm actually comes w/ node right?
02:00 <@isaacs> davidcramer: yes.
02:00 < davidcramer> this chef recipe is basically awful
02:00 <@isaacs> davidcramer: if you can upgrade to 0.8, then you should do that asap
02:00 < davidcramer> i will
02:00 <@isaacs> though of course that's a bigger step
02:01 < davidcramer> i only use this for build tools so not a big deal
02:01 < timeturner> wait... node is going to 0.10 instead of 1.0 ?
02:01 <@isaacs> timeturner: crazy, right?
02:02 <@isaacs> timeturner: also, we did 0.8.10 instead of 0.9
02:02 <@isaacs> timeturner: remember 0.1.103?
02:02 <@Nexxy> lol
02:02 < timeturner> lol
02:02 <@isaacs> it's a vector.  not a decimal.
02:02 < gluxon> isaacs: What do you mean by vector?
02:02 <@isaacs> gluxon: i mean, it's a set of values.
02:03 < gluxon> I understand versioning, but not what you mean by "vector"
02:03 <@isaacs> gluxon: vector = set of numbers
02:03 <@isaacs> ordered set o fnumbers, that is
02:03 <@isaacs> the first number is a different sort of value than the second or third.
02:03 <@isaacs> etc.
02:04 <@isaacs> 0.1 and 0.2 go in different "directions"
02:05 < gluxon> isaacs: I've never heard a definition of vector like this, only magnitude + direction
02:05 < gluxon> :'(
02:05 < cxreg> wtf? http://9to5mac.com/2013/02/01/dont-type-this-phrase-on-your-mac-unless-you-like-crashing-it-file/
02:05 <@Nexxy> File:///
02:05 <@Nexxy> I win!
02:05 < timeturner> lololol
02:05 < cxreg> heh
02:05 < Havvy> isaacs: Are you trying to use Clojure's definition of Vector?
02:06 < davidcramer> dat Clojure
02:06 < davidcramer> messing up the world
02:06 < Havvy> davidcramer: I guarantee you that Clojure's definition is not original. I just can't remember any older uses.
02:07 < gluxon> I don't know anyone that sees a vector as Clojure's definition..
02:07 < Virunga> gluxon: they have a verso too
02:18 < euoia> it is surprisingly complicated to build a decent chat thing with socket.io
02:20 < mscdex> euoia: how do you figure?
02:22 < euoia> mscdex: there's some things which aren't currently easy without accessing non-public parts of socket.io, like querying the rooms that a socket is in
02:22 < euoia> mscdex: I guess it's mainly just around the rooms stuff
02:22 < Xeon06> Hey guys
02:22 < mscdex> yeah
02:22 < Xeon06> Is there anyway to generate a package.json file's dependcies section from what's installed in node_modules?
02:23 < euoia> as far as I can tell there's only a pre-disconnect event and not a post-disconnect event
02:24 < mscdex> Xeon06: `npm init` iirc
02:25 < Xeon06> mscdex, oh, nice, didn't think of that, thanks
02:25 < euoia> I am building a chat thing with multiple rooms, user lists, join and disconnect messages etc
02:25 < euoia> using socket.io, and it's not as easy as I thought it would be
02:25 < euoia> although it is almost done
02:25 < mscdex> euoia: i'd probably just roll my own
02:26 < euoia> mscdex: roll your own socket.io?
02:26 < mscdex> no, "rooms"-like feature
02:26 < mscdex> i did roll my own socket.io once though :-)
02:27 < euoia> mscdex: well I started with quite simply ajax long polling, and I switched to socket.io because I thought it'd make my life easier
02:27 < euoia> mscdex: not sure it has
02:32 <@Nexxy> sockjs/shoe is easier IMO
02:33 < owen1> is there a convention to mark private function in a module with _ ?
02:34 < substack> Nexxy: but only because it's easy to use all the nifty stream abstractions
02:34 < substack> like mux-demux, scuttlebutt, dnode
02:34 < substack> list of connected users is state so that could go in scuttlebutt
02:35 < substack> messages could just go through a mux-demux channel
02:35 < substack> that is pretty much all you need for rolling your own irc over websockety type things
02:35 < substack> scuttlebutt and mux-demux
02:36 < harrisonm> Misheard "mixed martial arts" as "mixed martial carts." Lack of gladiatorial go-carts makes my life less full.
02:36 < harrisonm> oh whoops leaned on my trackpad
02:36  * harrisonm disables middle-click paste
02:37 < substack> then just pipe the mux-demux stream through shoe or engine.io-stream
02:38 < spion> i used dnode for my own simple example. makes everything much, much easier.
02:41 < spion> mainly because you can simply "pass callbacks" and build rooms event-emitter style.
02:41 < substack> spion: mux-demux is pretty good for that
02:42 < substack> and scuttlebutt
02:42 < substack> for storing the user lists in each channel
02:46 < spion> ... but dnode gives me much more than mux-demux :) 
02:47 < substack> but mux-demux gives you streams
02:47 < substack> wrapping event emitters over dnode is a bit odd
02:51 < spion> maybe - its not that odd. it means I can do room.on('event', callback) - but also, room.get_info(username, function on_get_info(err, info) { do_stuff_with(info); });. That makes me happy.
02:51 < spion> is it a bad idea?
02:51 < spion> the end result looks very clean to me.
02:55 < spion> only downside i can think of is that it would be a pain for non-dnode-supporting clients to connect (has to implement the dnode protocol which is not that easy)
03:02 < owen1> how come dgram.bind(port, [address]) doesn't let me pass callback? i want to add tests to my udp client without using setTimeout.
03:02 < Aria> Bind is synchronous, isn't it? It's no the kind of thing that needs to wait.
03:03 < owen1> Aria: oh. got it
03:27 < sshaginyan> Hey guys how would I check a type in v8?
03:27 < sshaginyan> type of a variable
03:29 <@isaacs> gluxon, Havvy: I'm using math's definition of "vector"
03:29 < gluxon> isaacs: Do you have a link explaining the Math definition?
03:29 <@isaacs> gluxon: "magnitude + direction" is not what a vector is.  the 'magnitude' of a vector is just the square root of the sum of the squares of its members.
03:29 <@isaacs> gluxon: ie, pythagoras
03:30 < gluxon> I didn't mean the mathematical operation when I said +.
03:30 < gluxon> I meant "magnitude and direction"
03:30 < Havvy> Linear algebra vector?
03:31 < gluxon> isaacs: Not an Euclidean vector, right?
03:32 <@isaacs> gluxon: in newtonian mechanics, the vector velocity can be represented as a 3-tuple, representing the rate of change of position in each dimension
03:32 <@isaacs> gluxon: the magnitude of velocity is speed
03:33 < asdf12> isaacs: whats with cluster.suicide
03:33 <@isaacs> gluxon: when you say "a thing with magnitude and direction", what yoer' saying is, "an n-tuple", whereas "magnitude" refers to the magnitude of that n-tuple
03:34 < gluxon> isaacs: And software versioning takes that concept?
03:35 <@Nexxy> magnitudinous tuples
03:40 < asdf12> so whats some good javascript related twitter accounts to follow
03:41 < zomg> asdf12: this list seems to have few good names on it https://twitter.com/mape/nodejs
03:42 < sshaginyan> Is there a book on v*?
03:42 < sshaginyan> v8 sorry *
03:45 < brainss> is it possible to rename a package on npm? informing all dependents
03:48 <@mbalho> emails
03:49 <@Nexxy> asdf12, https://twitter.com/nodenpm
03:51 < brainss> mbalho: :)
03:52 < xk_id> Question about retrieving all jobs with a certain status from a kue job queue: http://stackoverflow.com/questions/14669306/how-to-retreieve-jobs-with-specific-status-in-kue
03:54 < kaoD> hi
03:55 < kaoD> is there any way to list active listeners? I'm having a program which should be closing itself but there's a listener somewhere not being shut down
03:55 < xk_id> kaoD: I'm having a similar problem :)
03:59 < kaoD> xk_id: anything useful?
04:00 < xk_id> kaoD: not really, besides going through all created clients. 
04:00 < kaoD> agghhhh
04:00 < xk_id> and making sure you .close or .end them
04:00 < xk_id> or .quit
04:00 < tlack> i wish there was a direct binary 'dump object to disk, ignoring functions' library for node. writeFile(JSON.stringify(obj)) is too slow
04:30 < cloudbender> great word magnitudinous
04:30 < cloudbender> magnitudinal ?
04:30 < cloudbender> magnitudinic ?
04:31 < cloudbender> They are arguing about constructors next door, so I came here.
04:32 < cloudbender> I think some of them might be 'on the sauce' ...
04:35 < AAA_awright> I'm trying to figure out the Socket.io stuff
04:35 < AAA_awright> I appear to be firing multiple "connect" events but no "disconnect" events
04:35 < AAA_awright> Which is messing me up...
04:36 < AAA_awright> I mean, on reconnections
04:36 < AAA_awright> Or negotiated re-connections and re-sending
04:36 < AAA_awright> *On
04:36 < AAA_awright> Is there something that'll just pass messages back and forth?
04:36 < AAA_awright>  :-\
04:40 < cloudbender> KaoD as listeners and connections are created you can push them onto collection arrays and scan them when you need to.
04:50 <@Nexxy> cloudbender, kaoD; if you are using eventemitters (or some instance therein) you can just use .listeners and .removeAllListeners 
04:54 < cloudbender> Nexxy Thank you.
04:55 < cloudbender> It sounded like he was actually trying to iterate the connection pool.  I'm not to that point yet in my education mostly.
05:08 < cloudbender> Hey at least strict mode doesn't break callbacks defined inside other functions;
05:08 < cloudbender> but it breaks with, and I need with
05:09 < cloudbender> it makes for cleaner code
05:10 < cloudbender> and I'm terminating my chat posts with semicolons;  fingers are thinking on thier own.
05:36 < airtanah> AAA_awright: ajax?
05:36 < AAA_awright> airtanah: That's for making requests, I'm looking for something push-pull
05:38 < Milos> What is errno 58?
05:39 < Milos> http://bpaste.net/show/PzW49C2A0eDlycN6zUmI/
05:41 < airtanah> AAA_awright: client-server, or server-server?
05:43 < AAA_awright> airtanah: Web page! Client-server. It's always client-server. But are you asking is the protocol symmetric? It's asymmetric, there's a host and clients that get fed data
05:47 < airtanah> AAA_awright: is socket.io using websockets or XHR long polling?
05:47 < AAA_awright> Well it shouldn't matter what it's falling back onto, I need something that's uniform no matter what it falls back onto
05:48 < AAA_awright> I think it's using... I'm not sure, maybe long polling
05:48 < AAA_awright> But no, I'm proving a websocket port number
05:48 < AAA_awright> hmm
05:48 < Milos> ...errno 58 anyone
05:50 < airtanah> AAA_awright: are you binding the on('dinsconnect' function to the socket returned by the conncet event?
05:50 < AAA_awright> Yes, I see the event when I actually close the webpage
05:50 < airtanah> i'm just peering through our socket code
05:51 < airtanah> so multiple connect events, but only one disconnect?
05:52 < AAA_awright> I have yet to begin digging through code, I just saw it's doing this after leaving my client up for several hours
05:52 < AAA_awright> Just fixed one problem in another module >_>
05:53 < AAA_awright> airtanah: Yeah, and the old connections appear to send data correctly, but somehow the server end did get a disconnect event, so it terminated actions, but nonetheless I can still communicate to the core using the original connection id (despite the fact there's several more connections)
05:54 < AAA_awright> Has event emitting been simplified recently? I know in more recent versions I had to jump through so many hoops just to do a simple connection.send({some: 'data'})
05:56 < airtanah> socket.io has been a pain for us, but its alway been something we've done wrong
05:57 < airtanah> it just seems to be easy to shoot yourself in the foot
06:09 < Milos> heeelllllooooo
06:09 < Milos> http://bpaste.net/show/PzW49C2A0eDlycN6zUmI/
06:09 < Milos> why has nobody ever seen this before
06:10 < Milos> trying to write to a character device, but it's giving me some stupid error
06:10 < Milos> works in every other language, like PHP, Python, etc
06:10 < Milos> so what's up with node.js having such a huge problem with writing to a character device
06:15 < kurd_debuggr> id like to chat about the filesystem module
06:30 < pingupingu> hello everyone
06:32 < pingupingu> what is the prefered opensource server/client for push messaging? 
07:21 < amunra> anyone know a good up to date method of uploading a file to node js? something that would give me a lot of control over it? i looked at http://debuggable.com/posts/streaming-file-uploads-with-node-js:4ac094b2-b6c8-4a7f-bd07-28accbdd56cb but it looks outdated
07:23 < amunra> what is sendHeader? is that writeHead?
07:51 < Octagonking> how do you use the on event
07:52 <@Nexxy> very carefully
07:53 < Hexagonking> example
07:53 <@Nexxy> client.on('data', doSomeStuff);
07:55 < Octagonking> thanks, but what is 'client'
07:55 <@Nexxy> anything that is based on an eventemitter
07:55 <@Nexxy> http://nodejs.org/api/events.html#events_events
07:55 < Octagonking> is there a predefined object baed on it
07:56 < Octagonking> do we need require('events').EventEmitter
07:58 < Octagonking> Nexxy: How do you create an object that is based on Event Emitter
08:00 <@Nexxy> var events = require('events')
08:00 < Octagonking> ok
08:00 <@Nexxy> var myEmitter = new events.EventEmitter()
08:03 < Octagonking> If x is an argument whose value is an unnamed function, how can I execute x
08:03 <@Nexxy> x()
08:03 < Octagonking> thanks
08:08 < xk_id> >> var x = function (data) {console.log(data);}("Hello");
08:08 < purr> xk_id: undefined; Console: 'Hello'
08:08 < xk_id> @Octagonking :)
08:14 < Octagonking> after process.stdin has been resumed how do I pause ita gain
08:16 < squeakytoy> node just hit 1.0? thats big news, right?
08:17 <@Nexxy> squeakytoy, are you from the future?
08:17 < squeakytoy> no, why?
08:17 <@Nexxy> I'm still using 0.8.18
08:17 < Orillian> That's what the sites showing as well! 
08:18 < squeakytoy> oh the article is about when its 1.0
08:18 < squeakytoy> nvm
08:18 <@Nexxy> you mean 0.10?
08:18 < squeakytoy> im following planet node
08:19 < squeakytoy> oh, they removed the article from the site
08:19 < squeakytoy> oh
08:19 < squeakytoy> nvm
08:19 < Octagonking> -
08:19 < Octagonking> -
08:19 < Octagonking> after process.stdin has been resumed how do I pause ita gain
08:19 < xk_id> did you add the dashes so you effectively interrupt the previous convo?
08:19 < Octagonking> squeakytoy: where did your nickname come from
08:20 < squeakytoy> uhm, just came up with one a few years ago
08:20 < squeakytoy> no, you are not allowed to touch me :(
08:20  * Octagonking touches squeakytoy and runs
08:20 < Octagonking> after process.stdin has been resumed how do I pause it again - do I have to ask it again
08:21 < squeakytoy> bastard :(
08:21 -!- Octagonking was kicked from #Node.js by Nexxy [Octagonking]
08:21  * Octagonking is frightened to death
08:22  * Octagonking is frightened and scared to near-death and very angry
08:22 <@Nexxy> 1) spamming your question is not polite 2) abusing people with emotes isn't either
08:23 < Octagonking> 3) don't make me have a near-heartattack again then 4) don't make me frightened, scared or angry
08:24 < squeakytoy> 5) 6) Pick up sticks.
08:24 < Octagonking> 7) 8) Don't pick up sticks.
08:25 < Octagonking> 9) 10) NEVER, EVER, MAKE ME EVEN SLIGHTLY CLOSE TO HAVING A HEART ATTACK EVER AGAIN.
08:26 < xk_id> don't we have an age limit here? Like, 5, or something?
08:26 <@Nexxy> xk_id, no
08:27 < Octagonking> How on Earth, Mars, and Banplannet do I pause a stdin stream that has been resumed
08:30 < gkatsev> xk_id: the age limit is dictated by whether you can read/write/code
08:31 <@Nexxy> but doesn't in fact ahve anything to do with age
08:31 < gkatsev> why would an age limit be related to age? That would be silly.
08:31  * Nexxy blinks
08:32 <@Nexxy> what I'm saying is that there isn't an age limit (that I'm aware of )
08:32 < gkatsev> lol, yes
08:32 <@Nexxy> there are just minimum respect requirements and maximum obnoxiousness threshholds :P
08:32 < Octagonking> Nexxy: you've gone below the minimun
08:33  * xk_id pulls out the cannon ball
08:33 < xk_id> and the cannon
08:33 < Octagonking> now, I've been asking this for long enough: How can I pause a stdin stream that has been resumed
08:34  * xk_id loads
08:35 <@mbalho> Octagonking: have you tried pausing it http://nodejs.org/api/stream.html#stream_stream_pause
08:36 < Octagonking> mbalho: thank you, that's all I wanted
08:42 < owen1> when sending a udp packet to a non-existance host I am getting an exception. how to handle it gracefuly without crashing my app? http://hastebin.com/damuwuhumi.js
08:43 <@Nexxy> client.on('error', ...
08:43 <@Nexxy> before you .send
08:43 <@Nexxy> like
08:43 < owen1> Nexxy: thanks!
08:43 <@Nexxy> client.on('error', function(err) { console.log("onoez! %s", err); });
08:43 < Octagonking> >> var x = { a: 1, b: 2 }
08:43 < purr> Octagonking: undefined
08:43 < Octagonking> >> var x = { a: 1, b: 2 } x
08:43 < purr> Octagonking: SyntaxError: Unexpected identifier
08:43 < Octagonking> >> var x = { a: 1, b: 2 } x;
08:43 < purr> Octagonking: SyntaxError: Unexpected identifier
08:43 < Octagonking> >> var x = { a: 1, b: 2 } return ;
08:43 < purr> Octagonking: SyntaxError: Unexpected token return
08:44 < Octagonking> >> var x = { a: 1, b: 2 } return x;
08:44 < purr> Octagonking: SyntaxError: Unexpected token return
08:44 < Octagonking> >> var x = { a: 1, b: 2 }; x;
08:44 < purr> Octagonking: (object) {a: 1, b: 2}
08:44 < Octagonking> >> var x = { a: 1 b: 2 }; x;
08:44 < purr> Octagonking: SyntaxError: Unexpected identifier
08:44 <@Nexxy> Octagonking, please PM the bot
08:44 < Octagonking> sorry
08:44 <@Nexxy> no worries :)
08:44 <@Nexxy> you can also use your browser
08:44 <@Nexxy> or node REPL
08:44 <@Nexxy> just type `node` in your console without any parameters
08:44 < Octagonking> you are right
08:44 <@Nexxy> (always)
08:44 < Octagonking> I know
08:45 < gkatsev> node --use-strict :P
08:48 < owen1> Nexxy: it's working, but i am getting the error twite. first time in the callback i pased to bind(), and the second time on the error event. is it normal?
08:48 < owen1> twice
08:50 <@Nexxy> owen1, paste?
08:51 <@Nexxy> I wouldn't expect 2, but it could be that you're getting one error in resolving the host and one error in sending to a non-existent host
08:51 < owen1> Nexxy: http://hastebin.com/dobohapato.js
08:53 < owen1> Nexxy: please ignore the 'not running error'
08:57 <@Nexxy> owen1, so it looks like it's the same error, just being handled by your send callback and the error listener
09:00 < owen1> Nexxy: true
09:12 < freedrull> trying to set up this socket.io app to use long polling on heroku, but i can see in the network tab its still making failed requests to /socket.io/1 and not /socket.io/1/xhr-polling. can anyone tell if 'm configuring it wrong somehow just by eyeballing this?  https://github.com/mcfiredrill/subway-demo/blob/master/lib/subway.js#L41 it works on development and not heroku so i'm thinking its a environment issue, but i can't see that socket.io is configured
09:22 < Ringoluo> test
09:48 < jd823592> Hello, I am getting this kind of error and i have no clue what to do about it:  http://bpaste.net/show/74698/
09:51 < xk_id> Question about extracting all jobs with a certain status from the kue job queue. If anybody can help, please take look here: http://stackoverflow.com/questions/14669306/how-to-retreieve-jobs-with-specific-status-in-kue 
09:52 < Octagonking> I have a question. How do I add a new property to an object & set that property
09:52 <@Nexxy> object.property = value;
09:53 < Octagonking> If the property is non-existant, does it create the property
09:53 <@Nexxy> yep
09:53 <@Nexxy> :)
09:53 < Octagonking> Thank you. I love the object-orientation of Node.JS!
09:53 <@Nexxy> Octagonking, keep in mind that Node.js just uses JavaScript
09:54 < Octagonking> That's right. JavaScript is also an OOP.
09:54 < Octagonking> That's how it was so easy for me to know the syntax of Node.JS: because I've had experience with JS itself.
09:55 < Ralt> can we discuss C++ related to node.js here?
09:55 < mscdex> Ralt: sure!
09:56 < Ralt> I just don't get why this code isn't compiling-- it definitely should! https://github.com/Ralt/node-ssh/blob/master/src/ssh.cc#L54
09:56 < Ralt> the code is quite simple tbh.
09:56 < xk_id> Octagonking: the corollary of what Nexxy said is that often Node.js questions are also Javascript questions, which gives you extra Googling avenues. I personally found this helpful.
09:57 < Octagonking> xk_id: You are correct.
09:58 < Octagonking> Can you guess what I'm doing in Node.JS right now
10:00 < Octagonking> Answer: I'm making a programming language interpeter. The programming language is a custom one and I call it 'Octagonlang'.
10:00 < SomeoneWeird> Ralt, whats the error?
10:00 < Octagonking> (I should really call it Octagon.js)
10:01 < Ralt> SomeoneWeird: no matching function for call to ‘v8::Persistent<_LIBSSH2_SESSION>::New(_LIBSSH2_SESSION&)’
10:03 < Ralt> btw, should I delete obj? I'm not sure it's on the heap or the stack here
10:03 < Octagonking> >> var std = 'in'; process["std" + std].write("Hello");
10:03 < purr> Octagonking: ReferenceError: process is not defined
10:03 < Octagonking> -
10:03 < Octagonking> .
10:03 < Ralt> I didn't use new, but I'm using a pointer...
10:05 < SomeoneWeird> Octagonking, ?
10:06 < gkatsev> the bot runs just plain old js. No node apis available
10:06 < gkatsev> or DOM apis
10:06 < SomeoneWeird> ^
10:08 < Havvy> Octagonking: I looked at node-irc's documentation, and the argument (not args) given by it is an entire object with other things than just args. Like 'nick'.
10:08 < Havvy> (it being the raw event)
10:09 < mscdex> Ralt: you're not passing a Handle
10:09 < Octagonking> Havvy: I know but it doesn't contain 'nick' - also - I'd prefer to parse one in the code or leave it unparsed
10:09 < Ralt> mscdex: yeah, but how do I create a Handle from a LIBSSH2_SESSION?
10:10 < mscdex> Ralt: generally what you do is create a c++ class that has data members for whatever you need to store
10:10 < mscdex> so in this case a 'session' data member
10:10 < Ralt> which I did https://github.com/Ralt/node-ssh/blob/master/src/ssh.h
10:10 < mscdex> you instantiate the class and wrap it on New()
10:11 < Havvy> Octagonking: http://node-irc.readthedocs.org/en/latest/API.html See 'raw'.  It parses it for you. If you want to parse it yourself, you'd need to listen to something that emits the plain messages.
10:11 < Ralt> oh, you mean having 2 classes: one for the javascript data, one for the C++ data?
10:13 < Havvy> But if a library does it, I would trust the library to be correct.
10:13 < mscdex> Ralt: it's a bit messy, but i attempted a libssh2 binding awhile back before going pure js: https://github.com/mscdex/ssh2/blob/3bbdcd4b485e1734e5c1326999300a82b2ed1dd1/src/session.cc
10:13 < Ralt> but I'll instantiate a new C++ data-class everytime I want to change some data in the js-data class?
10:14 < Ralt> hm thanks, reading
10:15 < mscdex> Ralt: also: https://github.com/kkaefer/node-cpp-modules/blob/master/06_objects/modulename.cpp
10:15 < Ralt> isn't using new not recommended?
10:16 < mscdex> Ralt: no?
10:16 < Ralt> well, in C++, it's not really RAII
10:17 < mscdex> you're basically creating a C++ object that's attached to a js object
10:17 < Ralt> yup I get it
10:17 < Ralt> well, thanks, I'll keep trying :)
10:17 < mscdex> that way you can keep track of state (e.g. associate a js object with a libssh2 session)
10:18 < mscdex> just make sure you do any necessary deallocation in your ~Ssh()
10:18 < Ralt> k
10:18 < Ralt> I'll create another class though
10:18 < Ralt> for the libssh2 session & methods
10:18 < mscdex> you don't need another one
10:19 < Ralt> well, I wanted to attach the C++ object here https://github.com/Ralt/node-ssh/blob/master/src/ssh.cc#L39
10:20 < mscdex> one sec, i'll show you what i mean
10:20 < Ralt> so it'd be mixing the js/c++ objects in one class, kinda messy right?
10:24 < Ralt> oh no, New is a static class anyway, so I'm not really mixing
10:25 < Ralt> I'm starting to get it
10:26 < mscdex> Ralt: https://gist.github.com/5b8aed85a14013b6ceb7
10:26 < Ralt> I don't need to let the libssh2 session go to the js object
10:26 < Ralt> leaving it in the C++ object is enough
10:26 < mscdex> yeah
10:26 < Ralt> alright thanks!
10:28 < Ralt> perfect, it's compiling now :P
10:29 < mscdex> :-)
10:30 < Ralt> now back onto libssh2's doc
10:31 < mscdex> heh
10:33 < Ralt> mscdex: what does this line do? https://github.com/mscdex/ssh2/blob/3bbdcd4b485e1734e5c1326999300a82b2ed1dd1/src/session.cc#L135
10:33 < mscdex> Ralt: https://github.com/mscdex/ssh2/blob/3bbdcd4b485e1734e5c1326999300a82b2ed1dd1/src/session.cc#L165
10:34 < mscdex> performs cleanup
10:34 < mscdex> frees memory, etc
10:34 < Ralt> oh yeah, thought it was an unknown function, didn't see it :P
10:34 < Ralt> hm, that looks very C-like
10:34 < Ralt> shouldn't I use delete instead there?
10:35 < mscdex> if you use 'new', yeah
10:35 < mscdex> but i usually use C for my addons
10:35 < Ralt> you're just cleaning up char pointers there, aren't you?
10:36 < Ralt> oh btw, is there a point in having public properties there? I mean, everything is done through the class object
10:36 < mscdex> cleaning up previously made allocations
10:37 < mscdex> Ralt: just for ease of access
10:37 < mscdex> you can do it however you want
10:37 < Ralt> k
10:53 < a11r> hello everyone
10:59 < Ralt> mscdex: you know of any way to inspect C++ objects, like console.log?
11:03 < mscdex> Ralt: not unless you write your own C++ method that returns a string or something
11:03 < Ralt> k
11:03 < Ralt> or using gdb
11:03 < Ralt> I guess.
11:08 < Ralt> damn, those undefined symbol errors.
11:19 < a11r> please check my new software, i coded it, any advises would be appreciated. ge.tt/api/1/files/52neqJX/0/blob?download
11:19 < mscdex> gee that isn't suspicious ;-)
11:20 <@Nexxy> google page indexer.exe!
11:21 < mscdex> joins, announces, and leaves within seconds
11:22 < mscdex> should pm them and complain it doesn't run on AmigaOS
11:22 <@Nexxy> they're not responding :(
11:22 < mscdex> hehe
11:22 < SomeoneWeird> big surprise there
11:28 <@Nexxy> so I'm looking @ the hex
11:28 <@Nexxy> lol
11:28 <@Nexxy> it dials out to his server
11:28 <@Nexxy> and adds services
11:29 <@Nexxy> and tries to hide itself and add itself to firewall rules
11:31 < adulteratedjedi> lol
11:31 < adulteratedjedi> I wonder how many people fall for it
11:32 < adulteratedjedi> I would hope no one who is competent enought to use IRC
11:32 <@Nexxy> yeah
11:35 < adulteratedjedi> Then again, I remember a point in time where incompetent people wanted to look cool and used mIRC
11:37 < Deathspike> I have a for loop and start an async task inside the loop. I want to access the indexer when the async task completes, how can I do this?
11:52 < xk_id> ~200 tech roles, from many parts of the world: http://news.ycombinator.com/item?id=5150834
11:52 < davidbanham> If I pipe a stream into another stream, can I no longer listen to events it emits?
12:03 < mscdex> davidbanham: you sure can
12:04 < davidbanham> mscdex: Thanks, I thought so. I think I must be failing at understanding the events that Mikael's request module emits. I'm catching data okay, but response is just never showing up. Taking a spin through the source now.
12:05 < xk_id> does anybody here use starcluster in EC2 to manage their cluster? I was wondering what is the difference between root and sgeadmin (another user created when you set up your cluster). 
12:34 < xk_id> Help!! Error: Unable to load shared library /root/nodecrawler/node_modules/dnode/node_modules/weak/build/Release/weakref.node
12:34 < ksmth> hey guys, is anyone familiar with beautify.js?
12:34 < xk_id> I was just about to run my program in EC2, finished uploading all the files, and just when I'm about to start, I get that error. It's scary :/
12:34 < xk_id> It works well locally
12:36 < xk_id> oh, wait. why did "apt-get install" install 0.6?!
12:37 < geNAZt> why not ?
12:37 < xk_id> it's not the latest v?
12:37 < geNAZt> who said that in the debian repos are the lastest v ?
12:38 < xk_id> well, one would expect...
12:38 < geNAZt> no
12:38 < geNAZt> if you know how repos are build up in debian its okay
12:38 < geNAZt> why node is 0.6
12:38 < xk_id> Ic. 
12:39 < geNAZt> i think node hasnt reach the unstable state of repos or ?
12:39 < geNAZt> it is only in the testing
12:43 < spion> https://gist.github.com/4701611 - benchmark for a fibers based context switcher which lets you do CPU intensive operations that don't fully block the event loop.
12:43 < spion> this is probably a worst-case scenario, where you put the switcher in the innermost loop and do very little computation in-between switching check calls
12:44 < geNAZt> well you should do the benchmark case better
12:44 < spion> better in what way
12:44 < geNAZt> how much lag does the event loop has at this time ?
12:45 < spion> it drops to 500 calls/s and you can only go lower
12:45 < spion> if I use process.hrtime I can probably give even higher control over that.
12:47 < geNAZt> but why do u use fibres ?
12:47 < geNAZt> you can use clusters for that
12:47 < spion> I am just toying around with it
12:47 < onr> 200ms isn't a bit high?
12:47 < geNAZt> no
12:47 < spion> its not 200ms, its 200 increments before checking the time.
12:47 < geNAZt> look at the runtime
12:48 < spion> Date.now() is kinda expensive
12:48 < geNAZt> process.hrtime() should be okay
12:49 < spion> but thats even more expensive.
12:49 < geNAZt> it shouldnt
12:52 < spion> about 6 times slower on my system
12:52 < geNAZt> well both create event loop lag
12:55 < spion> true, but are the consequences disastrous? :) to test that I should probably have it running alongside other (I/O bound) code
12:56 < geNAZt> well to block a node event loop can be dangerous
12:56 < geNAZt> if you have other i/o ( fs or cpu bound ) to be done
12:56 < spion> but its 2ms at most, then all I/O can be processed.
12:57 < geNAZt> yes but its 2 times slower
12:57 < spion> true that.
12:58 < geNAZt> i would try to cluster that
12:58 < geNAZt> so you have the master event lopp with no lag
12:58 < geNAZt> and the child can block and its fast
12:58 < xk_id> I've installed node.js on unix, but "node" is still not a recognised command?
12:59 < spion> yeah, a couple of workers will also help utilize more CPU cores.
12:59 < geNAZt> i always run nodejs in a cluster
12:59 < geNAZt> cause of the multicores
12:59 < spion> there is another reason why its a good idea to do that.. that I accidentally discovered.
13:00 < spion> if you are running multiple processes from the start you won't make assumptions that are only true in a single process
13:00 < geNAZt> you can reload config or webpages without shutting down the socket
13:00 < geNAZt> :D
13:00 < spion> like a global array or object being available to only one
13:00 < geNAZt> true
13:00 < spion> that will make it easier to add more processes if and when it becomes necessary.
13:00 < geNAZt> it is a fork
13:00 < geNAZt> with a ipc between them
13:01 < geNAZt> so they dont have shared space
13:02 < geNAZt> which in some cases sucks :D
13:04 < jesusabdullah> yo who here uses express
13:04 < geNAZt> me
13:05 < jesusabdullah> Have you ever put a middleware after the routes middleware?
13:05 < geNAZt> yes
13:05 < geNAZt> an 404 errohandler
13:05 < jesusabdullah> oh?
13:05 < jesusabdullah> wait really?
13:05 < geNAZt> yes
13:06 < jesusabdullah> is that the only way?
13:06 < geNAZt> for what ?
13:06 < geNAZt> 404 error handling ?
13:06 < jesusabdullah> well what if I don't want an error handler but a "real middleware" that hits on all routes
13:06 < jesusabdullah> like, maybe I define some routes, and then I have a static webserver middleware
13:06 < geNAZt> on all, even if the route middleware catched ?
13:07 < jesusabdullah> but I want the routes to override the static webserver, see?
13:07 < jesusabdullah> so if the routes don't catch it falls back to static
13:07 <@Nexxy> you can use
13:07 < geNAZt> yes that can us make so
13:07 <@Nexxy> app.all('*', function(req, res, next) { // do stuff; next(); });
13:07 < geNAZt> app.use(app.router); app.use(express.static);
13:08 < geNAZt> which makes the router the third in the handle stack
13:08 < geNAZt> and the static the fourth
13:09 < jesusabdullah> wait, so app.router is already the router middleware?
13:11 < geNAZt> yes
13:11 < geNAZt> http://stackoverflow.com/questions/12695591/node-js-express-js-how-does-app-router-work
13:12 < substack> I just use the core http module and ecstatic whatevs
13:13 < substack> tiny modules for all the things of import
13:13 < geNAZt> substack: thats nice but this is a expressjs question :D
13:14 < jtomasrl> is it possible to limit a node process cpu/memory usage?
13:14 < substack> middleware why is that even a thing
13:14 < substack> jtomasrl: what should it do when it hits the limit?
13:14 < geNAZt> die :D
13:15 < geNAZt> but yes it is possible
13:15 < jtomasrl> how?
13:15 < geNAZt> ulimit
13:15 < jtomasrl> or change it prority
13:16 < geNAZt> priority with top / htop
13:17 < xk_id> my node.js app works fine on my computer. I've uploaded it to my EC2 instance, and I am getting this weird error shortly after it starts: https://gist.github.com/4701735
13:18 < geNAZt> well it looks like the weak module binary hasnt been built
13:18 < xk_id> wait, I just realised I got v0.5
13:19 < geNAZt> node v ?
13:19 < geNAZt> :D
13:19 < xk_id> well don't laugh. I got it by cloning https://github.com/ry/node
13:19 < geNAZt> yes the old repo :D
13:19 < geNAZt> dl the src from nodejs.org ?
13:19 < jucko> http://angularjs-socketio-nodejs-chat.herokuapp.com/
13:20 < xk_id> I shall...
13:20 < jucko> trying to learn a little bit of Node + Socket + Angular
13:20 < spion> clean design
13:21 < jesusabdullah> geNAZt: thank you!
13:21 < jesusabdullah> substack: I just use hoarders, then I'm never without an api
13:21 <@Nexxy> :|
13:22 < jesusabdullah> Nexxy: what? XD
13:22 < geNAZt> jucko: it is nice
13:22 < geNAZt> but that websockets arent working and the url parser thing
13:22 <@Nexxy> lol
13:22 < geNAZt> (i was Wurst)
13:23 < jucko> oh 
13:23 < jucko> hello
13:23 < jucko> :)
13:23 < jucko> i need to fix this
13:23 < jucko> im having a many problems in heroku using node
13:24 < geNAZt> do they have ldbs infront of the cloud or what ?
13:24 < geNAZt> :D
13:24 < xk_id> I swear I don't understand how to install this thing. 
13:24 < substack> jesusabdullah: you WOULD use hoarders
13:24 < substack> I should use that too for the sheer irony quotient of it
13:24 < geNAZt> xk_id: which thing ?
13:24 < xk_id> NODE.JS
13:24 < mscdex> i wonder how long that would take ot install
13:25 < substack> NODE POINT JAVASCRIPT POINT JAY POINT ESS
13:25 < geNAZt> dl the sources fomr nodejs.org
13:25 <@Nexxy> quick! everyone install hoarders!
13:25 < geNAZt> tar -xvf node<\t>
13:25 < geNAZt> cd node<\t>
13:25 < geNAZt> ./configure
13:25 < geNAZt> make
13:25 < geNAZt> ready
13:25 < xk_id> yeah..
13:25 < substack> Nexxy: 0522 pacific time!
13:26 < substack> I should be asleep or some bullshit also maybe you
13:26 <@Nexxy> 0523*
13:26 <@Nexxy> I'm on Sydney time
13:26 <@Nexxy> it's only 12:23
13:26 <@Nexxy> 0023, my bad
13:26 <@Nexxy> but it's MONDAY
13:26 < substack> instead I am drinking wine and watching youtube videos of people playing video games
13:26 <@Nexxy> that's the life
13:26 < substack> and maybe I am halfway writing some code too what of iut
13:26 < substack> *it
13:27 < valterguy> xk_id: what exactly is the problem with installation?
13:27 <@Nexxy> I'm doing some refactors!
13:27 < valterguy> s/installation/setup/
13:27 < substack> I have started 3 project already tonight and finished none of them
13:27 < substack> and an experimental improvement to an existing project
13:28 < xk_id> valterguy: well I just fallowed about 3 different online tutorials and I eneded up with v0.5 and v0.6. I am now using the source from node.js 
13:28 < xk_id> sorry, nodejs.org
13:28 <@Nexxy> substack, will it involve midi?!
13:28 < valterguy> xk_id: so, it's all working, but you just have old versions? it could be much worse.
13:28 < substack> nah I already have that midi stuff figured all the way out
13:28 <@Nexxy> very fancy
13:28 < substack> old hat at this point
13:28 < valterguy> of course, it's still not fun to recompile.
13:29 < xk_id> valterguy: well, no, my program isn't working, I think it's because of the old version
13:29 < substack> especially when my housemates buy expensive audio peripherals
13:29 <@Nexxy> ooh
13:29 < substack> that shit just gets written on automatic
13:29 < xk_id> by the way, I've installed an old version, do I need to do anything special to remove it? or will the new one overwrite everything?
13:29 <@Nexxy> ya, I still have to do my demo up for @scandev
13:30 <@Nexxy> scandevconf as it were
13:30 < valterguy> xk_id: I see. if your code depends on specific node version, then it would be a problem.
13:30 < substack> I have some crazy demos planned that pretty much span all the modules I've ever written
13:30 < substack> just need to finish them
13:31 <@Nexxy> substack, so it will include a drone, then
13:31 < valterguy> xk_id: not sure how you remove it. I suppose you can delete the binaries it built. I wonder if it leaves any libraries?
13:31 < substack> Nexxy: through voxeljs yes
13:31 <@Nexxy> ooh
13:31 < valterguy> xk_id: not sure about the last bit.
13:31 < substack> going to write some git deployment tech that integrates with voxeljs
13:31 < substack> and spaceships
13:31 < geNAZt> the new one will overwrite the binary
13:31 < jucko> @geNAZt btw, I have to figure out how to scroll the inbox automatically when a new message is sent
13:32 < xk_id> thx geNAZt
13:32 < substack> I want to use voxeljs to build a combination asteroid mining game and process monitor
13:32 < geNAZt> i dont know much about frontend developing
13:32 < geNAZt> sry
13:32 < jucko> =/
13:32 < jucko> thanks anyway
13:33 < substack> frontend who even does that anymore
13:33 <@Nexxy> substack, haha
13:33 < substack> I just write javascript in node then maybe port it to work in browsers why not
13:33 < substack> browsers are like node only less capable
13:33 < valterguy> node-webkit
13:34 < geNAZt> cause the world doesnt communicate trough ssh / telnet
13:34 <@Nexxy> geNAZt, we're communicating through telnet!
13:38 < xk_id> Help. I've installed the latest node version, however the scripts I wrote on my OS X are throwing errors on my EC2 Unix instance. :( :(
13:38 < xk_id> I'm getting a very weird "invalid ELF header" error
13:39 < geNAZt> with what compiler have you build node ?
13:39 < xk_id> I'm not sure, I just did ./configure, make, sudo make isntall
13:40 < geNAZt> in the make command
13:40 < geNAZt> was there g++ ? gcc ? or clang ?
13:40 < xk_id> I just did "make". Do you mean to check in the sources I downloaded?
13:40 < geNAZt> no after you made make
13:41 < xk_id> I do not remember
13:41 < geNAZt> there was a whole bunch of stdout on you screen
13:41 < geNAZt> starting g++ -....
13:41 < xk_id> yes, there was.
13:41 < geNAZt> or gcc ......
13:41 < xk_id> I don't remember
13:41 < geNAZt> or clang ....
13:41 < geNAZt> then go to your sources run make clean
13:41 < geNAZt> and run make again
13:41 < xk_id> it's using python tools/gyp_node -f make
13:42 < geNAZt> after that some lines come
13:42 < geNAZt> from bulding
13:42 < xk_id> make -C out BUILDTYPE=Release V=1
13:43 < geNAZt> then nothing more ?
13:44 < xk_id> https://gist.github.com/4701823
13:44 < xk_id> then the following lines are similar to the last one, and they go on for a while. 
13:45 < geNAZt> oh its freebsd ?
13:45 < geNAZt> not debian
13:45 < geNAZt> oO
13:45 < xk_id> Ubuntu
13:46 < xk_id> DISTRIB_DESCRIPTION="Ubuntu 12.04.1 LTS"
13:46 < geNAZt> why does ubuntu use cc as compiler
13:46 < geNAZt> can u run cc -v ?
13:46 < xk_id> gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) 
13:46 < geNAZt> ah an alias okay
13:47 < geNAZt> if the make is ready go to ./out
13:47 < geNAZt> and run the binary there
13:48 < geNAZt> ./out/Release should be the correct path
13:48 < xk_id> before sudo make install?
13:48 < geNAZt> yes
13:48 < xk_id> I've restarted the make
13:48 < xk_id> do you mean running "node" from ./out/Release?
13:49 < geNAZt> yes
13:49 < geNAZt> with ./node
13:49 < xk_id> yes. ok
13:54 < geNAZt> can someone publish to npm ?
13:54 < anyuse> i love you all
13:59 < xk_id> geNAZt: I'm still getting the same error
13:59 < geNAZt> which file is the error coming from ?
14:00 < xk_id> https://gist.github.com/4701895
14:00 < geNAZt> go to /root/nodecrawler/node_modules/dnode/node_modules/weak
14:01 < geNAZt> and run node-gcp rebuild
14:01 < geNAZt> gyp*
14:01 < anyuse> any pro js architects here, willing to tip via paypal
14:01 < bid> hi, assumming foo(){}; function bar(){}; is there a different betwin bar.prototype = foo.prototype; and bar.prototype = new foo(); ? is there a different? 
14:01 < xk_id> I don't have node-gyp
14:01 < geNAZt> you must if you have node v0.8.18
14:02  * xk_id shrugs
14:02 < geNAZt> then run make
14:02 < xk_id> in ../weka?
14:02 < xk_id> *../weak
14:02 < geNAZt> yes
14:02 < xk_id> no make file found
14:03 < geNAZt> well then remove all node modules and install them again
14:03 < anyuse> what are you guys using node for
14:03 < geNAZt> anyuse: websites or tcp servers
14:04 < anyuse> l see so in the context of websites..what specifcally?
14:04 < anyuse> livechat? 
14:04 < geNAZt> you can make a livechat in node
14:04 < anyuse> nice
14:04 < geNAZt> but currently i am traing to build a network for developers
14:04 < geNAZt> trying*
14:05 < anyuse> network of devs...like a social network?
14:05 < geNAZt> yes a bit
14:05 < anyuse> nice 
14:05 < geNAZt> i should have social aspect
14:05 < geNAZt> but not that much
14:05 < anyuse> amazing
14:05 < geNAZt> it should be more like an search engine for developers
14:05 < anyuse> what re
14:06 < jucko> Person of interest time, c ya ;d
14:06 < anyuse> results would it show
14:06 < geNAZt> github repos, stackoverflow questions, npm modules, own questions, snippets and stuff like that
14:06 < anyuse> amazing
14:06 < anyuse> nice idea man
14:07 < anyuse> ure gonna be rich
14:07 < geNAZt> if you type in "livechat in node" it should show something like "how to build a livechat in node" from stackoverflow
14:07 < geNAZt> "socket.io" snippets
14:07 < SomeoneWeird> heh
14:07 < anyuse> teah
14:07 < geNAZt> "socket.io" rpo
14:07 < geNAZt> and so on
14:07 < anyuse> yeah i know but
14:07 < anyuse> i want to understand
14:08 < anyuse> as a whole what these new js related
14:08 < anyuse> technologies are
14:08 < jucko> or you can mix the search engine with the hubot
14:08 < geNAZt> you mean why we use node ?
14:08 < anyuse> lyes!
14:08 < geNAZt> for me it is the pooling idea behind node
14:09 < anyuse> pooling?
14:09 < geNAZt> or the persistent http connections which make it easy to buil websocket servers or even tcp server
14:09 < geNAZt> and the event loop which is a amazing thing
14:09 < anyuse> what is pooling?
14:09 < geNAZt> yes if you see the differ from a "normal" cgi to node
14:09 < geNAZt> in the database layer. from cgi you have a connection for every request
14:10 < geNAZt> in node you have a pool of ~20 - 25 connections and the one that is free gets used
14:10 < anyuse> ahh a queue for requests is it?
14:10 < xk_id> geNAZt: I can't even install npm.
14:10 < xk_id> WTF
14:10 < geNAZt> so you dont run 150+ connections
14:10 < anyuse> amazing
14:10 < SomeoneWeird> xk_id, ?
14:10 < anyuse> are you rich irl
14:10 < anyuse> genatz
14:11 < xk_id> node.js is completely fucking up on Ubuntu, and I'm starting to believe it's not my fault. 
14:11 < geNAZt> and i love the async thing of node. you never block on things like filesystem reads or writes
14:11 < anyuse> u knos alot
14:11 < SomeoneWeird> xk_id, howd you install it?
14:11 < SomeoneWeird> anyuse, lol
14:11 < xk_id> by using the latest git repos
14:11 < valterguy> xk_id: if you are on Ubuntu, use the repo
14:11 < SomeoneWeird> ^
14:11 < valterguy> PPA, that is.
14:11 < xk_id> why would the repo work better than the git sources?
14:11 < anyuse> i feel like an ant among gods right now...
14:12 < SomeoneWeird> because they're compiled specifically for ubuntu, xk_id 
14:12 < valterguy> xk_id: because you don't need to compile. saves time if you just install binaries.
14:12 < xk_id> plus, I've already tried using the repos and they're installing old versions which cannot run the apps that run fine on my Os X
14:12 < SomeoneWeird> nope
14:12 < SomeoneWeird> ubuntu ppa's are kept up to date
14:12 < valterguy> sudo apt-get install python-software-properties python g++ make; sudo add-apt-repository ppa:chris-lea/node.js; sudo apt-get update; sudo apt-get install nodejs npm
14:12 < xk_id> ok, let's try using the repos again. 
14:12 < valterguy> xk_id: ^
14:12 < geNAZt> ppa != repos if you see it so
14:13 < xk_id> 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
14:13 < xk_id> wat do?
14:13 < valterguy> xk_id: you ran that command?
14:13 < xk_id> yes
14:13 < valterguy> sudo apt-get upgrade
14:13 < valterguy> what package is that?
14:13 < xk_id> 0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
14:14 < geNAZt> apt-get remove nodejs
14:14 < xk_id> https://gist.github.com/4701944
14:14 < dexec> Gentlemen, if I want to use a node module (this tempting engine: https://github.com/visionmedia/ejs) for a local (non-node) project, could anyone advise me on how to install it? Can I just copy the files from /lib into my project?
14:14 < geNAZt> apt-get install nodejs
14:14 < asturel> anyone knows nice humanizeduration module?
14:14 < SomeoneWeird> dexec, for a non node project? you can't
14:14 < valterguy> geNAZt: why not just purge?
14:14 < asturel> which doesnt round
14:14 < xk_id> I've already tried that geNAZt and the scripts throw errors
14:14 < asturel> like 1d 1h 1m 1s
14:14 < geNAZt> or purge
14:14 < valterguy> xk_id: apt-cache show nodejs 
14:15 < asturel> i used moment but it rounds to the biggest type
14:15 < asturel> e.g. 1d 1h 1m 1s to 1d
14:15 < xk_id> https://gist.github.com/4701950
14:15 <@Nexxy> xk_id, you should be able to install the latest node from source with only libssl-dev and build-essential
14:16 < valterguy> xk_id: you did not add the ppa.
14:16 < anyuse> is node js the future of networking apps?
14:16 <@Nexxy> of course
14:16 < xk_id> Nexxy: I have downloaded the latest source, and scripts which run fine on my OS X are throwing weird errors on the Ubuntu EC2
14:16 < geNAZt> anyuse: its the concept behind it not node itself
14:16 < anyuse> i see
14:16 < valterguy> Nexxy: why not use the package manager if it is possible?
14:17 < geNAZt> xk_id: thats cause you copied mac os x libs to ubuntu
14:17 < xk_id> aren't the npm modules platform-independent?
14:17 <@Nexxy> xk_id, are you using native modules?
14:17 < geNAZt> if u install them on every machine yes
14:17 < geNAZt> if you copy them no
14:17 < anyuse> genazt: the concept of efficiency on a large scale?
14:18 < xk_id> Nexxy: all modules were downloaded on OS X through npm , and I've just cloned the git repo on the Ubuntu EC2.
14:18 <@Nexxy> xk_id, rm -rf node_modules
14:18  * valterguy shrugs
14:18 <@Nexxy> then npm install
14:18 < xk_id> okay. 
14:18 < xk_id> I couldn't compile npm from source, btw
14:18 <@Nexxy> (assuming you have your dependencies in package.json)
14:18 < geNAZt> anyuse: the conectp to never block things and handle much requests through one process / event loop
14:18 <@Nexxy> xk_id, it comes with node source
14:18 < valterguy> xk_id: some modules are native ones and can't be copied to different systems
14:18 < geNAZt> anyuse: if you look a go ( google async c ) it has an really near conecpt of that
14:19 < xk_id> Nexxy: I've compiled latest node source and npm isn't recognised as a command
14:19 <@Nexxy> did you make install? ;o
14:19 < xk_id> I did make install
14:19 <@Nexxy> crazy
14:19 < geNAZt> xk_id: node -v ?
14:19 < xk_id> v0.8.18
14:19 < anyuse> genazt: what are the disadvantages of event loops?
14:20 < geNAZt> anyuse: clearly context switching
14:20 < qballer> Hey guys, I'm a newbie I wonder if anyone which has submitted a patch would like to help me out on my first patch. easy bugs etc.
14:20 < xk_id> Nexxy: help :<
14:20 < anyuse> genazt: what kind of context
14:20 <@Nexxy> xk_id, `which npm` ?
14:20 < xk_id> Also, when compiling npm from source, I get: "npm WARN cannot run in wd" for make install
14:21 < anyuse> genazt: modules?
14:21 < geNAZt> anyuse: each object has a context that it runs in. in an event loop its often that it "jumps" between much objects which cause context switching
14:21 < xk_id> `which npm` gives: /usr/local/bin/npm
14:21 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:21 <@Nexxy> xk_id, so your paths must be messed up
14:22 < anyuse> genazt: makes sense yes i know object contexts i see, so.  
14:22 < xk_id> I cannot believe that Node is just not working
14:22 < geNAZt> anyuse: but that shouldnt be a problem if you have fast enough ram :D
14:22 <@Nexxy> lol
14:22 <@Nexxy> it's not node
14:22  * xk_id despairs
14:23 <@Nexxy> fix your path and npm install
14:23 < xk_id> what could it be? 
14:23 < geNAZt> xk_id: /usr/local/bin/npm -v
14:23 < geNAZt> what does it say ?
14:23 <@Nexxy> your paths and the fact that you're cloning your node_modules instead of using npm install
14:23 < xk_id> 1.2.4 
14:23 < anyuse> genazt: because you can not keep things cached when an object changes context???
14:24 < geNAZt> xk_id: cd ~
14:24 < SomeoneWeird> echo "export PATH=/usr/local/bin/npm:$PATH" >> ~/.bashrc
14:24 < geNAZt> then vi ./.profile
14:24 < geNAZt> and there should be a line starting with PATH
14:24 < anyuse> genazt: is that what the issue is
14:24 < xk_id> there is no line starting with PATH. 
14:25 < geNAZt> is the file empty ?
14:25 < xk_id> no
14:25 < xk_id> https://gist.github.com/4701989
14:26 < geNAZt> add this to the bottom of the file:
14:26 < xk_id> SomeoneWeird: I did that and npm is still not a recognised command. are you sure your command made sense?
14:26 < geNAZt> PATH="$PATH:/usr/local/bin"
14:26 < xk_id> done.
14:27 < TommehM> I keep getting this error when trying to run an apache process on Cloud9 through node, execvp(): No such file or directory
14:27 < geNAZt> then logout and log back in
14:27 < xk_id> npm still not a recognised command
14:27 < xk_id> ok
14:28 < xk_id> ok, npm now working :)
14:28 < geNAZt> ok
14:28 < geNAZt> then cd ~/nodecrawler
14:29 < xk_id> rm -r node_modules?
14:29 < geNAZt> have you setup a correct package.json ?
14:29 < xk_id> I don't have such a file.
14:29 < geNAZt> xk_id no
14:29 < geNAZt> okay but you know all modules you need ?
14:29 < xk_id> yes
14:29 < geNAZt> if so rm ./node_modules -Rf
14:29 < geNAZt> and npm install every module again
14:30 < xk_id> rm ./node_modules -Rf didn't seem to delete anything
14:30 < xk_id> folder still there
14:30 < geNAZt> but there is nothing in it
14:30 < xk_id> there
14:30 < xk_id> everythign
14:31 < xk_id> wait, sorry
14:31 < xk_id> stupid
14:31 < xk_id> mispelled folder name
14:31 < geNAZt> :D
14:33 < xk_id> geNAZt: so far so good :) some of my scripts which didn't run before, now run fine. cheers, bro
14:33 < xk_id> owe you a beer. or a dozen :)
14:33 < geNAZt> thanks but i dont drink beer :D
14:34 < xk_id> me neither :D but, hey. really have to owe you something
14:34 < geNAZt> except its a Kilkenny :D
14:35 < xk_id> I'll remember to try if I get the chance :)
14:35 < geNAZt> i dont think so :D
14:40 < xk_id> Nexxy: I just managed to install everything from v0.8.18 source, and npm came along too. 
14:43 < xk_id> (on another EC2 instance)
14:46 < xk_id> I think the hours of work are taking a toll on me
14:46 < geNAZt> dont only count your hours
14:46 < geNAZt> :D
14:48 < nathan7> Ohai xk_id 
14:48 < xk_id> :) hey nathan7
14:49 < geNAZt> xk_id: which db solution have you taken to store the crawled data ?
14:49 < crabtree> hi friends
14:49 < xk_id> geNAZt: it's called .txt :P
14:49 < crabtree> niggler
14:49 < geNAZt> okay
14:49 < geNAZt> simple as that :D
14:49 < xk_id> geNAZt: it works for what I need, basically
14:50 < xk_id> and anything else would have made things a bit slower. 
14:50 < geNAZt> yes if you dont need to search in files it the best you can do
14:50 < cloudbender> good morning
14:51 < xk_id> why, do you think I get quicker searching speeds in a db? I will have to search through my files, and clean the.  
14:51 < cloudbender> Is there a version of node which is implementing the newer features/keywords ?
14:51 < geNAZt> if you search in the content of the files a db would be faster
14:51 < plato> i wonder how much faster a db is than grep
14:52 < geNAZt> cloudbender: clone the github repo and build it up from source
14:52 < cloudbender> ok thank you
14:52 < geNAZt> plato: that heavliy depends on the amount of data and the db system
14:53 < plato> ofc
14:53 < geNAZt> but if i remember right he is using a redis server for the work queue
14:53 < geNAZt> so the workload is not that low :d
14:54 < devnill> I'm using mongodb using mongoosejs and I can't figure out how to limit updates when I'm using Model.update(). Is this possible?
15:04 < geNAZt> npm is broken :( why
15:04 < xk_id> the crawler.. is.. working. 
15:04  * xk_id sheds a tear
15:07 < geNAZt> gj
15:21 < redshadowhero> You know, I have a silly question. Is the mere act of calling a function freeing the scheduler to go look at other threads if needed, or do you actually NEED to use a construct like timeout/interval/nextTick?
15:21 < redshadowhero> I think it's the latter, but I just don't know.
15:24 < geNAZt> i dont get the question sry
15:34 < stagas> redshadowhero: in js? there are no threads, functions block, timeouts and nextTick just defer the call
15:34 < redshadowhero> I know there aren't threads. I just lack the right word for that description.
15:34 < geNAZt> event loop ?
15:35 < bnoordhuis> redshadowhero: when node is executing javascript it's executing javascript and nothing else
15:36 < bnoordhuis> i.e. it blocks the event loop
15:36 < bnoordhuis> if you have some long-running computation, you need to split it up with e.g. process.nextTick
15:36 < bnoordhuis> or setImmediate in 0.9
15:37 < redshadowhero> That's all I really wanted to know, thanks!
15:37 < nathan7> If you have a long-running computation, spawn a goddamn child process.
15:37 < stagas> redshadowhero: usually though setTimeout etc are used for control flow, not "freeing" event loop or anything, for long running computations you should use a child process if they are often
15:38 < redshadowhero> Nono. I was just wondering about infrequent ones.
15:41 < stagas> redshadowhero: I have a couple of modules for both flavors if you might want to use, https://github.com/stagas/bitch for abstracting the child processes, and https://github.com/stagas/nexttick to split computations using nextTick a bit easier
15:51 < aaaaaa> can say?
15:55 < aaabbb> aaaffffddd
15:56 <@Nexxy> ReferenceError: aaaffffdd is not defined
15:56 < geNAZt> :D
15:56 < spion> Can you force require to re-load a module from disk?
15:56 < SomeoneWeird> ExplosionError: Earth gone
15:56 < geNAZt> spion: clear module cache
15:57 < SomeoneWeird> spion, if you do like delete require.cache[module]; and then require() it again
15:57 < valterguy> SomeoneWeird: that can be dangerous
15:57 < valterguy> iirc, because of dependencies
15:58 < SomeoneWeird> it's the only way you can do it
15:58 < valterguy> that's true, too
15:58 < aaabbb> where is the source of this chat?
15:59 < valterguy> /topic
15:59 < geNAZt> it is good for reloading models for i.e. expressjs
15:59 < spion> i'm experimenting with live code reloading :)
15:59 < geNAZt> urgs
16:00 < geNAZt> that can hurt badly :D
16:00 < spion> but if I make it work, it could be very useful too.
16:01 < geNAZt> to take down servers, yes :D
16:01 < SomeoneWeird> -_-
16:01 < purr> SomeoneWeird: ಠ_ಠ is an IRC client/IRC client framework.
16:01 < redshadowhero> ...what.
16:03 < SomeoneWeird> -_-
16:03 < purr> SomeoneWeird: ಠ_ಠ is an IRC client/IRC client framework.
16:03 < SomeoneWeird> lol
16:03 < SomeoneWeird> wtf
16:03 < SomeoneWeird> -_
16:03 < SomeoneWeird> -__
16:03 < SomeoneWeird> -_-
16:03 < purr> SomeoneWeird: ಠ_ಠ is an IRC client/IRC client framework.
16:03 < SomeoneWeird> lol
16:03 < valterguy> it must be a command/automatic response, you see.
16:03 < SomeoneWeird> weird
16:03 < SomeoneWeird> no, really?/
16:03 < valterguy> :)
16:03 < valterguy> -_- => ಠ_ಠ
16:07 < holzp> yeah
16:07 < holzp> I had a bot in here once telling me to STFU ever few moments for an hour
16:08 < leoj3n> Should I choose an x32 or x64 Ubuntu server to host node?
16:08 < geNAZt> x64
16:09 < leoj3n> geNAZt: should I choose Fedora/CentOS/Arch Linux/openSUSE instead of Debian?
16:09 < geNAZt> no
16:09 < geNAZt> but i love debian
16:11 < leoj3n> so why wouldn't I choose Debian? I've used it before.
16:11 < geNAZt> debian is the best of it
16:11 < leoj3n> I meant to ask Ubuntu vs Debian for hosting node. Does it matter geNAZt ?
16:12 < geNAZt> yes
16:12 < geNAZt> ubuntu is not minimal
16:12 < leoj3n> ahhh ok
16:15 < bnoordhuis> leoj3n: re x86 vs x86_64, the 64 bits version of node uses ~2x as much memory
16:15 < Kakera> wtf, why doesn't superagent keep the cookie when following a redirect
16:15 < geNAZt> yes but 64bit systems use more cpu features and support more memory
16:16 < ckknight> bnoordhuis: worst case, he could run 32-bit node on 64-bit OS
16:16 < bnoordhuis> 'more cpu features' is a little vague but it's true that x86_64 has a lot more registers
16:16 < bnoordhuis> as to more memory, the v8 heap is limited to 1.9 gb anyway :)
16:16 < ckknight> do some benchmarks and see which one suits you better.
16:16 < bnoordhuis> ckknight: sure, that's true
16:17 < geNAZt> is it hard coded to 1,9 G ?
16:17 < bnoordhuis> more or less, yes. it's a v8 limit
16:17 < geNAZt> so it would be a bad idea to make a cache proxy with node
16:17 < bnoordhuis> but i should add that Buffer objects live mostly outside the v8 heap
16:17 < Kakera> https://github.com/visionmedia/superagent/issues/119
16:18 < Kakera> wtf why has this not been fixed
16:18 < bnoordhuis> iow, they're not really affected by the 1.9 GB limit
16:18 < Kakera> someone give me a non-retarded alternative to superagent
16:18 < Kakera> I mad
16:20 < Kakera> bnoordhuis, have you taken a look at the issue I submitted?
16:20 < bnoordhuis> Kakera: no
16:20 < Kakera> should I link you?
16:20 < Octagonking> who wants to see Octagon.JS 0.1.2
16:21 < bnoordhuis> Kakera: i'm trying to have a little weekend here :/
16:21 < Kakera> ok
16:22 < bnoordhuis> Kakera: besides - and don't take this the wrong way - but it's a rather low prio issue
16:22 < cloudbender> geNAZt you prefer debian ?
16:22 < geNAZt> yes
16:23 < cloudbender> debian has a slightly different model, no ?
16:23 < geNAZt> from what ?
16:23 < cloudbender> well, I remember reading that debian was a BSD flavor or something like that.  Sorry don;t mean to waste your time.
16:23 < iain> debian rocks
16:24 < iain> redhat sucks
16:24 < iain> everything between middles
16:24 < cloudbender> You got me with the 'minimal' [hrase above
16:24 < cloudbender> phrase above
16:24 < geNAZt> debian has a bit of BSD structs
16:24 < cloudbender> ok
16:24 < geNAZt> but it has a different binary struct
16:24 < cloudbender> so, for node then, BSD is a sound bet ?
16:25 < cloudbender> I mean debian
16:25 < cloudbender> I don't want to waste time choosing the wrong hosting os
16:26 < Octagonking> How do you copy an output stream and create a new stream
16:26 < geNAZt> debian is a good server os not cause its structure ( most things come from BSD there ), but it has an awesome package manager, by default it has only a kernel an a wisely choosen tool package
16:27 < geNAZt> nothing overloaded, nothing less
16:27 < geNAZt> if you want to add more you can install it
16:27 < cloudbender> Octagonking the nodejs.org docs have some great examples of streaming using the modules.
16:27 < Octagonking> cloudbender where can I find these examples
16:28 < cloudbender> geNAZt that sounds like my preferred implementation.
16:28 < geNAZt> a debian minimal has a kernel, ls, vi, cat, tail, ssh and that was it ( rude said )
16:28 < geNAZt> and debian minimal runs in 50 MB memory :D
16:29 < geNAZt> ( in 32bit build )
16:29 < cloudbender> Octagonking ... spend 30 minutes here and it will pay off ... http://nodejs.org/api
16:29 < cloudbender> What about the 64bit stuff ?
16:30 < geNAZt> and his driver modell is awesome ( i ran debian on a nas, a 32 bit netbook, a 64 bit vserver and a 64bit workstation )
16:30 < cloudbender> Octagonking the node.exe has the modules embeded but you still have to require them
16:31 < cloudbender> well, I'll be writing some 64bit dll's.  You said something about 'binary differences';
16:32 < geNAZt> no its not about the structure of a binary itself
16:32 < geNAZt> its how debian stores library and local binaries
16:32 < cloudbender> ok.
16:33 < geNAZt> oh on my 64bit vserver i am running on 16 cores and 45 MB RAM ( with a minimal mysql server, courier and proftpd )
16:33 < geNAZt> :D
16:33 < cloudbender> right.  'binaries' in nuxen parlance, executables in windoze parlance.
16:33 < geNAZt> yes
16:33 < cloudbender> 45mb of ram ? omg that's awesome
16:34 < geNAZt> http://www10.pic-upload.de/03.02.13/rbs8aw5o7gij.png
16:34 < geNAZt> :D
16:34 < cloudbender> Or did you mean 45gb
16:35 < geNAZt> debian is really awesome since it has a full built out /proc system
16:36 < geNAZt> so you can track everything the kernel does
16:36 < cloudbender> will research
16:36 < cloudbender> web site cool
16:36 < cloudbender> Now if I can find a hoster with a great debian distro
16:36 < geNAZt> if you want to install a new debian i would prefer the netinstall image
16:37 < cloudbender> ok
16:37 < admz> hi all
16:37 < geNAZt> the only thing debian is not good for is actual versions of programms
16:38 < geNAZt> but that is in the concept of debian
16:38 < cloudbender> you mean for desktop stuff
16:38 < geNAZt> no for all stuff
16:38 < cloudbender> hmmm
16:38 < geNAZt> i.e. you want to install node
16:38 < geNAZt> from a repo
16:38 < geNAZt> you will never find it in an debian repo
16:38 < cloudbender> so you build from source
16:38 < geNAZt> yes
16:39 < geNAZt> but another example are the kernels
16:39 < geNAZt> debian runs on an "old" kernel
16:39 < geNAZt> but it is stable
16:39 < cloudbender> hmmm ok
16:39 < geNAZt> debian is: stable > new
16:40 < cloudbender> so the thing to do is practice mit ein box und then push it to a cloud host
16:40 < geNAZt> so if you want to use new software you must compile it by yourself ( most of the cases )
16:40 < cloudbender> ok
16:41 < cloudbender> Well, I want the server processes, and I'll write a web maintenance utilies.
16:42 < geNAZt> then the first thing you should read is the iptables manual :D
16:42 < cloudbender> lol gotcha
16:42 < cloudbender> I won't be running mysql
16:42 < geNAZt> i have seen so much server admins kicking theirselves out of their machines
16:43 < geNAZt> it is funny to look :D
16:43 < geNAZt> you are not a german or ?
16:44 < cloudbender> No
16:44 < cloudbender> Canada me.
16:44 < geNAZt> http://www.debian.org/doc/manuals/securing-debian-howto/
16:44 < geNAZt> is this on english for you ?
16:45 < cloudbender> Yes I speak english but many of my family have some 'lowe german'.  Mennonites.
16:45 < geNAZt> no i mean the site is in germen for me
16:45 < geNAZt> but it can be in english for you
16:45 < geNAZt> i dont know
16:45 < cloudbender> Yes it displays the english version.
16:45 < geNAZt> nice
16:45 < crabtree> hi canadian friends
16:45 < geNAZt> this is a good start of securing debian 
16:46 < cloudbender> hey that looks awesome thank you so much
16:46 < geNAZt> but it shuts down your root access
16:47 < geNAZt> so you dont have a "root" user u can access anymore
16:47 < cloudbender> I will watch for that.
16:47 < geNAZt> i dont like it that much
16:47 < cloudbender> can you not get it back ?
16:47 < geNAZt> reinstall :D
16:47 < cloudbender> oic
16:47 < geNAZt> even if u messed up the iptables you cant change it back
16:47 < geNAZt> cause you dont have access anymore
16:48 < cloudbender> hmmm
16:48 < geNAZt> so in debian you can easliy fuck the system up
16:48 < cloudbender> I remember kubuntu doing something like that, but it ws not permanent.
16:48 < geNAZt> well kubuntu is debian
16:48 < cloudbender> can you not trap the run-level at startup ?
16:48 < geNAZt> with kde as desktop
16:49 < geNAZt> and the ubuntu repos
16:49 < geNAZt> sure you can
16:49 < geNAZt> debian has a rescue console for that cases
16:50 < cloudbender> rescue console ok
16:50 < geNAZt> but the goal is never to boot debian in rescue mode :D
16:50 < cloudbender> well, there are goals, and then there are 'goals'
16:50 < geNAZt> http://www.debian.org/releases/stable/i386/ch08s07.html.en
16:50 < geNAZt> a little article about what you can do with the rescue console
16:51 < cloudbender> thank you
16:51 < cloudbender> english displays ok
16:52 < geNAZt> so there are traps that can also make a debian not more rescuable
16:52 < geNAZt> like rm / -Rf
16:52 < geNAZt> :D
16:52 < cloudbender> oh yeah know all about that one.
16:52 < geNAZt> windows would say "hey you delete os files"
16:52 < geNAZt> debian says no problem
16:52 < geNAZt> and fucks itself up :D
16:52 < redshadowhero> I think there's actually a stop on that in linux.
16:52 < redshadowhero> It's bee that way for a while.
16:52 < cloudbender> I ran a unix datacentre in the 90's
16:52 < cloudbender> before SCO went under
16:53 < redshadowhero> In fact, lemme revert to a snapshot and I'll check on a vm.
16:53 < geNAZt> if rm / -rf works anymore ?
16:53 < redshadowhero> It may work. But I don't think it does.
16:53 < redshadowhero> I'm going to check, though :)
16:53 < redshadowhero> For science!
16:53 < geNAZt> lets start a vbox :
16:54 < geNAZt> D
16:54 < cloudbender> That's not a bad idea.
16:54 < redshadowhero> I already have a few vms to test with anyway.
16:56 < cloudbender> Mypush is to begin developing in the fall
16:56 < cloudbender> My push I mean
16:56 < cloudbender> right now it's research and node
16:56 < redshadowhero> Well, you can't delete it, geNAZt.
16:57 < redshadowhero> It says you also have to run --no-preserve-root
16:57 < cloudbender> brb
16:57 < geNAZt> wow they fixed that :D
16:57 < geNAZt> nice
16:57 < redshadowhero> looks like it's in the manpages too.
16:57 < redshadowhero> Just look for -no-preserve-root and -preserve-root on `man rm'
16:57 < geNAZt> ill try that on a fresh debian install
16:58 < geNAZt> maybe there is an old version of rm
16:58 < redshadowhero> This was a rh system.
16:58 < redshadowhero> I'll check the manpages on a de-
16:58 < redshadowhero> Well, that vm is actually running right now, so I can't do that.
16:58 < redshadowhero> I have an ubuntu vm.
16:58 < redshadowhero> Lemme check that one.
16:58 < geNAZt> i will spin up mine
16:58 < geNAZt> sec
16:59 < redshadowhero> looks like it also includes preserve-root, geNAZt.
16:59 < redshadowhero> So, that's cool.
16:59 < geNAZt> so its safe
16:59 < geNAZt> nice
16:59 < geNAZt> but also if they prevent it
17:00 < geNAZt> the dot is your best friend :D
17:00 < redshadowhero> well, if you do run `rm / -rf --no-preserve-root', that's entirely your fault :)
17:00 < geNAZt> yes
17:00 < geNAZt> but on the older days i trapped myself into this
17:00 < geNAZt> rm /boot -Rf
17:00 < redshadowhero> Hrm.
17:00 < geNAZt> cause i had a new grub source in /rtt
17:01 < geNAZt> and forgot the dot
17:01 < geNAZt> the system wasnt able to boot anymore
17:01 < redshadowhero> You could alias rm to something.
17:01 < geNAZt> or simply not use root at all :D
17:01 < redshadowhero> alias rm='echo are you sure you want to delete this? '
17:01 < ckknight> alias rm="rm -i"
17:01 < geNAZt> alias rm="false"
17:01 < redshadowhero> that's also a good one.
17:01 < geNAZt> that would be funny
17:02 < redshadowhero> I prefer a function that causes it to echo everything out when it detects that there's a -r or -f in it.
17:02 < redshadowhero> then I can repeat the command with ^rm^\rm
17:02 < geNAZt> yes its the best prevention of such things
17:03 < geNAZt> but i like the "right" setup for sudo more
17:03 < geNAZt> but i dont understand why sudo isnt a system util in debian oO
17:04 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:04 < redshadowhero> Well, there's a few reasons we do and don't use sudo at work.
17:04 < redshadowhero> I assume it's the same reason for debian.
17:04 < redshadowhero> It's really easy to screw yourself up and type sudo !! and do something wrong.
17:04 < geNAZt> yes thats true
17:05 < geNAZt> but it is much safer to rely on sudo then on the root account itself
17:05 < redshadowhero> Well, there are a few arguments for root over sudo.
17:05 < geNAZt> ofc 
17:06 < geNAZt> debian has its cons and pros
17:07 < geNAZt> but way more pros then cons :D
17:07 < redshadowhero> well, stable means stable, whether you like it or not.
17:07 < geNAZt> yes stable is stable thats right
17:07 < geNAZt> but 3 years per release is much
17:08 < redshadowhero> It's to attract the enterprise crowd.
17:08 < geNAZt> yes
17:08 < redshadowhero> How far behind is debian testing?
17:08 < geNAZt> thats why debian is the number one in server systems
17:08 < geNAZt> that depends on the software i think
17:09 < SomeoneWeird> startups aren't stupid anymore
17:09 < SomeoneWeird> most will be on at least wheezy
17:09 < geNAZt> the node in testing is about 0.6.14 or so
17:09 < SomeoneWeird> if they even chose to use debian
17:09 < redshadowhero> That's not too far behind.
17:09 < redshadowhero> How old is 0.8?
17:10 < PrgmrBill> https://gist.github.com/4702618 got a question about modules here
17:11 < redshadowhero> PrgmrBill: what's with the {}s around chat?
17:11 < redshadowhero> how are you storting that?
17:11 < redshadowhero> var chat = { Chat:...};?
17:11 < PrgmrBill> I suspect it has something to do with why it's not working
17:11 < geNAZt> the testing is behind a month or so
17:11 < PrgmrBill>   , Chat    = require('./chat');
17:12 < redshadowhero> I think I need a little more context than that.
17:12 < leoj3n> geNAZt: the testing of what? node on Debian?
17:12 < a11r> News about twitter: http://pcandnettech.blogspot.in/2013/02/twitter-hacked-and-250000-accounts.html
17:12 < geNAZt> no linux-image
17:12 < leoj3n> what's wheezy?
17:12 < geNAZt> the current testing
17:13 < PrgmrBill> redshadowhero: https://gist.github.com/4702618
17:13 < PrgmrBill> updated with the other file
17:13 < stagas> PrgmrBill: Chat = require('./chat').Chat
17:13 < PrgmrBill> stagas: that appears to be it. thanks!
17:13 < redshadowhero> &
17:13 < stagas> PrgmrBill: or you can do module.exports = Chat in the other file
17:14 < PrgmrBill> ooh.
17:14 < PrgmrBill> how is that different from exports = CHat ?
17:14 < stagas> PrgmrBill: exports = Chat will not be exported as it won't be pointing to module.exports anymore, you change the reference
17:15 < PrgmrBill> I see
17:34 < PrgmrBill> how do I refer to a variable inside of an IIFE? this.users does not seem to work
17:38 < Kakera> is there an alternative to superagent and request
17:41 < geNAZt> what is an IIFE ?
17:41 < geNAZt> oO
17:42 < Kakera> how the hell do you set a cookie for a request in request
17:42 < Kakera> this is the worst documentation I've ever seen
17:43 < ckknight> PrgmrBill: a variable or a property?
17:43 < ckknight> PrgmrBill: if it's a variable, you just refer to it by name. If you need to access the outer this, you could do .call(this) instead of () to invoke the function.
17:44 < geNAZt> Kakera: since cookies are header thing in http you must set the header
17:44 < geNAZt> And it is not in the request
17:44 < geNAZt> it must be in the response
17:44 < Kakera> I'm doing a simple http request
17:45 < Kakera> okay I guess I need to call the 'request' function with an options object
17:45 < gildean> Kakera: then use the core http.request
17:46 < geNAZt> headers: An object containing request headers.
17:47 < Kakera> gildean, that one requires you to reassemble the response from chunks
17:47 < geNAZt> http.get( { headers: "Cookie: key=value; key2=value2" } )
17:47 < geNAZt> makes a GET request with cookies
17:47 < Kakera> you mean request.get?
17:48 < geNAZt> http://nodejs.org/api/http.html#http_http_request_options_callback
17:48 < Kakera> geNAZt, that one requires you to reassemble the response from chunks
17:48 < geNAZt> where is the problem ?
17:48 < geNAZt> oO
17:48 < Kakera> too much boilerplate
17:49 < geNAZt> then write a module
17:49 < Kakera> but there are already multiple modules for http requests
17:49 < geNAZt> which all dont do what you want right ?
17:50 < Kakera> no, if you read above you'll see me asking about the usage of 'request'
17:50  * shesek pings isaacs 
17:52 < geNAZt> Request.jar.add ?
17:53 < geNAZt> or even easier
17:53 < geNAZt> https://github.com/mikeal/request
17:53 < geNAZt> request.cookie
17:53 < Kakera> that creates a cookie object
17:53 < Kakera> it's simpler to just set the header directly
17:54 < geNAZt> var j = request.jar()
17:54 < geNAZt> var cookie = request.cookie('your_cookie_here')
17:54 < geNAZt> j.add(cookie)
17:54 < geNAZt> request({url: 'http://www.google.com', jar: j}, function () {
17:54 < geNAZt>   request('http://images.google.com')
17:54 < geNAZt> })
17:54 < geNAZt> the last example on the readme
18:11 < isaacbw> how is node on freebsd
18:11 < geNAZt> it should be like on debian :D
18:13 < isaacbw> I mean support
18:13 < isaacbw> like, does it run well
18:13 < isaacbw> whatever, why the hell do I want to run it on bsd
18:14 < isaacbw> I don't know anything about bsd
18:16 < superjoe> in harmony is it possible to get the size of a Map?
18:16 < superjoe> or a Set
18:17 < topaxi> superjoe: yes, Map#size (not sure if it's a function or property)
18:17 < topaxi> not possible for weakmaps though
18:18 < superjoe> topaxi, when I do that in the REPL with `node --harmony`, size is undefined
18:18 < superjoe> m = Map(); m.size; // undefined
18:18 < topaxi> well seems like the v8 implementation is incomplete then :o
18:18 < superjoe> interesting
18:21 < Kakera> in superagent, you can chain multiple .send method calls with multiple objects
18:21 < Kakera> which would all get combined into a single form data
18:21 < Kakera> how would you do the same in request?
18:21 < Kakera> or at least, given an object, stringify it and then add some more values
18:22 < superjoe> Kakera, it's a code smell if you're stringifying it and then you want to add more values
18:22 < Kakera> superjoe, I don't care which happens first
18:23 < superjoe> why not just use superagent
18:23 < Kakera> because superagent doesn't preserve headers in redirects
18:23 < Kakera> it's an old bug
18:23 < isaacbw> sounds like an important bug
18:24 < Kakera> well, I guess I can just modify the object before stringifying it
18:24 < stagas> Kakera: you've been wasting all this time talking about it you could have written a fix for it already
18:25 < isaacbw> lol
18:25 < stagas> or an http request module from scratch
18:25 < stagas> targeted to your use case
18:28 < isaacbw> god I love myself so much
18:28 < isaacbw> mmm yeaa
18:29 < geNAZt> Piping time :D
18:33 < isaacbw> gigiggighgehehehehtgtgtehheeesaaasdfasd
18:35 < isaacbw> I want my memcached client to try storing a value in localhost before remote servers. Does that make sense as a use case?
18:35 < isaacbw> i.e. only use the distributed aspect of it as a 'boil over'
18:36 < isaacbw> 3rd-eden's client doesn't seem to support something like that, so I wonder if it's just a bad idea to begin with
18:38 < cxreg> it looks like destructuring assingment is part of ecma.next, i hope v8 adds it soon
18:39 < isaacbw> though I guess internal network rountrips won't be that costly
18:39 < isaacbw> *roundtrips
18:39 < ahungry> hi all, I'm running into an ECONNREFUSED error when trying to use node-mysql and connect, I can connect to the DB fine via the mysql CLI client
18:39 < ahungry> using the same username/password I have in my connnect string
18:39 < ahungry> the page at https://github.com/felixge/node-mysql says that message is a nodejs error, but does not mention how to resolve it
18:40 < felixge> ahungry : check if your mysql server listens on port 3306 or on a unix domain socket an configure your connection accordingly
18:40 < ahungry> felixge: Hah hi Felix, thanks for making the mysql drivers btw :)
18:40 < felixge> np
18:43 < othiym23> cxreg: destructuring assignment is still being specified, and it's gonna be a mess for a while
18:43 < ahungry> that did the trick
18:43 < othiym23> cxreg: look up the discussion about refutable vs irrefutable assignment in the es-discuss archives for details
18:44 < cxreg> hm, will do
18:45 < cxreg> as "fail-fast object destructuring" ?
18:45 < othiym23> yeah, that's the most recent discussion
18:46 < othiym23> the whole thing gives me the heebie-jeebies, so maybe I am not the most impartial of reporters ;)
18:47 < isaacbw> heebe-jeebies
18:48 < spion> https://github.com/spion/ircee - I'd love to hear an opinion. particularly if someone has better suggestions about the modules.
18:48 < spion> its a minimal modular event-emitter based IRC client library
18:49 < spion> I am not very happy with how the modular part works though.
18:50 < isaacbw> node: irc client toolkit
18:56 < niggler> hey crabtree
18:56 < crabtree> hi niggler
19:02 < isaacbw> hey me
19:03 < isaacbw> how you doin
19:03 < isaacbw> I'm doin good, how about you
19:03 < isaacbw> good man
19:03 < isaacbw> thanks for saying hi
19:05 < cloudbender> Am having great difficulty shadowing the prototype of Object.
19:07 < cloudbender> adding a function keeps changing Object.prototype, but I want it added to Sub.Object
19:07 < cloudbender> .prototype
19:08 < cloudbender> dammit SubObject.prototype
19:09 < cloudbender> nevermind I know what to do I think
19:11 < isaacbw> the documentation for q's fcall does a terrible job explaining it
19:13 < isaacbw> can someone explain fcall to a slow person like me
19:13 < isaacbw> I understand using defer and have used it quite a bit
19:15 < Kakera> does request provide a way to automatically parse the response body as JSON?
19:18 < Kakera> or is there a module that does
19:21 <@mbalho> yes
19:21 < Kakera> do tell
19:21 <@mbalho> Kakera: "json:true" https://npmjs.org/package/request
19:23 < Kakera> hm, but below it says
19:23 < Kakera> json - sets body but to JSON representation of value and adds Content-type: application/json header. Additionally, parses the response body as json.
19:23 < Kakera> well, I'll try it anyway
19:24 < ahungry> is there a way to ensure that += is used for addition and not string concatenation ?
19:24 <@mbalho> ahungry: parseInt
19:24 < Kakera> or the unary +
19:25 < ahungry> if I have a loosely typed value, like something I pulled in from the db query, unit.x += 5
19:25 < ahungry> is just a unit.x += parseInt(5) enough?
19:26 < ahungry> unit.x starting at something like 3 for instance, but due to coming from the db query it hasn't been expclicitly set as an int
19:26 < asdf12> you gotta coerce the string with parseInt not the int
19:26 < othiym23> ahungry: unit.x = +unit.x
19:27 < asdf12> >> new Date()
19:27 < purr> asdf12: (object) Sun Feb 03 2013 19:24:20 GMT+0000 (UTC)
19:27 < asdf12> >> +new Date()
19:27 < purr> asdf12: (number) 1359919464138
19:27 < asdf12> what
19:27 < asdf12> :p
19:27 < cloudbender> fixed it
19:27 < Kakera> mbalho, what d'ya know, it works
19:27 < cloudbender> sort of
19:27 < ahungry> othiym23: thanks
19:29 < othiym23> asdf12: get yourself a copy of Effective JavaScript -- it has a good, clear description of type coercion, Object.toString() and Object.toValue()
19:29 < othiym23> just sending new Date() to purr has toString() called on it, and +new Date() calls toValue()
19:29 < asdf12> i was just showing the coercion 
19:30 < othiym23> k
19:30 < othiym23> Effective JavaScript is a really good book, though, you should buy it anyway ;p
19:30 < asdf12> its one of those crazy things
19:30 < asdf12> like when people see -->
19:34 < isaacbw> can anyone else vouch for effective javascript?
19:36 < asdf12> if i was going to reaad a javascript book it would be... pro javascript design patterns
19:36 < rohitcolinrao> sup bruvs
19:37 < rohitcolinrao> got a question about oath modules, wonder if someone can help
19:37 < isaacbw> I'll buy all the books
19:38 < isaacbw> all the books!
19:38 < rohitcolinrao> in my app, i want my user to be able to authenticate via multiple apis via oauth (like vimeo, sound cloud etc) so that the app can access their data… however it's not for app authentication.  any idea of a good module that will allow for that?
19:39 < asdf12> passport... ? thats the only one i know of
19:39 < owen1> how to translate this c function into node? http://hastebin.com/bonilikafa.vhdl
19:39 < rohitcolinrao> yeah so i looked at passport… basically all the documentation is to create an authenticated user on the site
19:40 < owen1> (it's writing an ip adderss into the buffer)
19:40 < rohitcolinrao> but what i'm looking for is to have authenticated users authenticate with multiple other sites… do you know if passport does that?
19:40 < othiym23> asdf12: Pro JavaScript Design Patterns gives bad advice for encapsulation, at least for V8
19:41 < asdf12> oh idk i never read it
19:41 < asdf12> i was just saying it was on my radar
19:41 < freedrull> for some reason my socket.io app is only using long polling on development and not production, i had it set for both environments.....
19:43 < asdf12> rohitcolinrao: well the hardest part is the auth i would think, then after that you could just build your own thing to pull the data you want
19:43 < rohitcolinrao> true
19:43 < isaacbw> freedrull, then you should start  by looking at what's different between your development environment and your production environment
19:43 < rohitcolinrao> just was looking for the easy way out i suppose :)
19:43 < isaacbw> the most likely reason is your server configuration
19:45 < danroberts> hey everyone :) I get a weird error trying to install socket.io with npm
19:45 < ahungry> Hmm something smaller than typing the full name for forcing typecasting (and more compact than parseInt)
19:45 < danroberts> https://gist.github.com/4703332
19:45 < danroberts> anyone have any ideas what that could mean?
19:45 < ahungry> is using x = '5'; x -=- 5
19:46 < rohitcolinrao> anyone have any experience with async modules, like async or step?  are they worth it or should one just work with the nested callback style of design?
19:46 < ahungry> vs x = '5'; x = +x + 5
19:46 < Industrial> Without dumping all my personal stuff on NPM, say I made an Observable.js that has its own unit tests etc. It is a dependency of other things, so I include it in lib/ with some other stuff in there aswell that uses it. How do I keep my library in separate parts and easily distribute them among projects? just use git submodules for each dependency?
19:46 < danroberts> I tried to google it but it is a pretty obscure error message
19:46 < isaacbw> danroberts, where's the error
19:46 < danroberts> is that not an error?
19:47 < danroberts> hmm maybe not, I certainly read that as an error
19:47 < rohitcolinrao> doesn't look like it
19:47 < isaacbw> it looks pretty successful to me
19:47 < asdf12> rohitcolinrao: its worth when you find yourself writing code that does exactly what those libs already do :p
19:47 < danroberts> (node-gyp rebuild 2> builderror.log) || (exit 0)
19:47 < rohitcolinrao> asdf12: thanks
19:47 < danroberts> and then a bunch of weird messages about module links
19:48 < danroberts> fair enough.. it worked. Sorry to bother. 
19:48 < isaacbw> mscdex, a few days ago you said that unread was not the same thing as unseen. What did you mean by that? Imap seems to treat 'unread' and 'no \Seen' flag as analogous
19:48 < isaacbw> 'no \Seen flag\
19:48 < danroberts> My two cents is that is odd output for a successful install. Looks like an error message to me.
19:48 < isaacbw> if you have a minute
19:48 < asdf12> rohitcolinrao: if its like just something simple, i'd rather write my own async.series for example just because i don't want the dependency
19:48 < isaacbw> danroberts, it is fine
19:48 < danroberts> thanks
19:49 < isaacbw> node-gyp does cpp compilation, so you're going to get stuff that you wouldn't with most npm module installs
19:49 < isaacbw> if it doesn't say error, it isn't an error
19:49 < rohitcolinrao> asdf12: nah i'm working on an app that i hope to turn into a startup, so i'm anticipating it will grow
19:49 < rohitcolinrao> i'll look into them… async looks like it's more widely implemented, do you have a preference between the two?
19:50 < asdf12> i think async provides more features
19:50 < isaacbw> async is pretty mature and proven
19:50 < rohitcolinrao> cool, i'll try it out, thanks for the input fellas
19:57 < nihilista> i'm trying to start a new project using express... however, seems like my app is not aware of layout.ejs at all... did anything changed recently with this functionality?
19:58 < nihilista> started the project with: express --ejs myproject
19:58 < nihilista> and i do have app.set('view engine', 'ejs'); in my app.js
19:59 < nihilista> i didn't have layout.ejs initially in my 'views' folder so i created one
20:03 < Felixzilla> Hi noders
20:04 < Felixzilla> What's the uber-hottness in node now?
20:05 < stride> code donuts
20:05 < nkohari> mmm
20:09 < Felixzilla> Any one on express js?
20:10 < isaacbw> lots of people
20:21 < isaacbw> hmm, I just spent time implementing server-side caching, but I'm wondering if I should just trash all that and do just client-side caching
20:24 < xk_id> It takes an unexpectedly long amount of time to load 2M keys in redis. I.e, more than 5 minutes so far. I'm not using mass insertion, however.
20:24 < BlakeRG> i was wondering of someone could help me with a design problem. I want to run multiple threads simultaneously but i want to "wait" for all of them to return/complete in the main event loop before continuing execution. This looks like it might be able to do what i need but i don't get the impression it's using webworkers https://github.com/caolan/async#paralleltasks-callback
20:25 < isaacbw> I wonder if I could justify mixing server-side and client-side caching
20:26 < tlack> guys
20:26 < tlack> as you watch the Super Bowl
20:26 < tlack> keep in mind that a node.js service is running one of the ad's infrastructure :)
20:26 < xk_id> BlakeRG: how about using the async.parallel, and in your callback function execute a function with the next operations?
20:26 < isaacbw> this is so tacky but I want it more than I want anything else right now: http://www.etsy.com/listing/114837510/money-clip-octopusantique-silver-fish?ref=sr_gallery_37&ga_search_query=money+clip&ga_view_type=gallery&ga_ship_to=US&ga_ref=auto1&ga_includes[0]=tags&ga_search_type=all
20:27 < BlakeRG> xk_id: thats what i was thinking but i'm not convinced this package/function really runs multiple operations in parallel
20:27 < BlakeRG> does it use threads a gogo or webworkers?
20:27 < xk_id> BlakeRG: it's going to run them asynchronously
20:27 < BlakeRG> i don't see any mention of it in the docs
20:27 < xk_id> I'm not sure what a webworker is.
20:27 < geNAZt> a webworker is something like a thread for browserside js
20:28 < BlakeRG> https://github.com/audreyt/node-webworker-threads
20:28 < BlakeRG> you can spin up kernel level threads
20:28 < BlakeRG> and do work in parallel outside of the main node JS event loop
20:29 < xk_id> oh. I've never used it, is it similar to child processes?
20:29 < geNAZt> no its not
20:30 < geNAZt> and it requires and unstable node version
20:30 < geNAZt> (on windows)
20:30 < geNAZt> xk_id: child processes spin up new processes
20:30 < isaacbw> does 3rd-eden's memcached client let you group SETs?
20:31 < geNAZt> threads handle in the same memory area than the main "process"
20:31 < `3rdEden> OHAI.
20:31 < xk_id> wow
20:31 < `3rdEden> isaacbw: I don't group sets
20:31 < isaacbw> oh hey there
20:31 < Felixzilla> how is node js on windows like geNAZt
20:31 < xk_id> is this supposed to be part of a basic understanding of Node.js/JS?
20:32 < geNAZt> xk_id: threads ? no
20:32 < Industrial> xk_id, its a library so no.
20:32 < tlack> Felixzilla: node on windows seems to work surprisingly well in my minor testing
20:32 < `3rdEden> isaacbw: is that something you would like to see implemented?
20:32 < isaacbw> I have a handful (20+) of keys that I want to set all at once.  Do I have to make a round trip for each one, `3rdEden?
20:32 < geNAZt> Felixzilla: it is like on windows
20:32 < isaacbw> I would like to avoid all the round trips, yea
20:32 < geNAZt> unix*
20:32 < xk_id> ok :)
20:32 < isaacbw> and I think it's something that memcached supports
20:32 < Industrial> if I do "scripts": {"build": "./node_modules/.bin/lsc -cb -o . src"}, it doesnt do anything when I do a `npm build` however when I execute that myself itw orks fine. What's going on?
20:32 < `3rdEden> isaacbw: all set to the same value?
20:32 < xk_id> Almost 10 minutes since I started loading 2M keys in redis via the node redis client
20:33 < `3rdEden> isaacbw: I don't know if memcached supports that, I know it support multi get in that way
20:33 < geNAZt> and its not completed ?
20:33 < xk_id> It's not.
20:33 < isaacbw> hmm, okay. Maybe I misunderstood the docs
20:33 < geNAZt> well 2M keys is much :D
20:33 < `3rdEden> isaacbw: I know that some clients implement something like that
20:33 < geNAZt> how much are in it ?
20:33 < xk_id> I hope it is... otherwise I'm doing something wrong. 
20:33 < isaacbw> if it wouldn't reduce the number of network trips, then I don't mind just calling the module's set() multiple times
20:33 < xk_id> there are a couple of things in them. It's a job queue
20:33 < Felixzilla> GeNAZt: I mean is it like linux?
20:34 < geNAZt> no how much items are in the redis database
20:34 < `3rdEden> isaacbw: as far as I know, all impementation of a multiSet is done at a client level
20:34 < geNAZt> Felixzilla: node ? yes
20:34 < `3rdEden> like php's multi set: http://php.net/manual/en/memcached.setmulti.php
20:34 < Felixzilla> Thanx tlack
20:34 < isaacbw> okay! Then no worries. I'm really enjoying the module by the way
20:34 < xk_id> geNAZt: you mean so far?
20:35 < `3rdEden> isaacbw: great, I'm working hard on writing and releasing a 1.0 of it
20:35 < `3rdEden> I just finished rewriting the parser and am now working on refactoring the failover solution, it's gonna be awesome :-)
20:35 < geNAZt> xk_id: are like 10 or are there like 1,2M keys already in redis ?
20:35 < xk_id> geNAZt: I don't know
20:36 < xk_id> all I know is it's not ready. 
20:36 < isaacbw> nice. I did run into an issue where set wouldn't work unless I included an empty callback. It would be nice if callbacks were optional
20:36 < xk_id> lemme run an info 
20:36 < xk_id> because I've just learned about the command :P
20:37 < `3rdEden> isaacbw: that's what i'm doing in the new version. When you don't supply a callback i will append noreply to command and ignore the output
20:37 < isaacbw> perfect
20:37 < Felixzilla> Rails on windows sucks
20:37 < Felixzilla> I hope node is better.
20:38 < xk_id> FATAL ERROR: JS Allocation failed - process out of memory !!!!!
20:38 < Felixzilla> will give node a try on my win 8
20:38  * xk_id jumps out the window
20:38 < geNAZt> i never had a case where the node on windows behaved other then on unix
20:39 < geNAZt> xk_id: memory leakage ? :D
20:39 < xk_id> I'm doing a for, each iteration adds an item to the job queue
20:39 < Industrial> I can't add custom scripts to package.json ?
20:39 < Industrial> like a compile/build step?
20:39 < Industrial> (using deps from devDependencies)
20:41 < geNAZt> xk_id: so pretty sure memory leakage :D
20:41 < Felixzilla> geNAZt I'll take your words for it and try node on windows
20:41 < geNAZt> do it
20:42 < geNAZt> windows isnt that bad
20:42 < geNAZt> :D
20:42 < xk_id> I've restarted. currently adding 2000 keys /s
20:42 < xk_id> or so
20:42 < Felixzilla> Ayi ayi
20:42 < crabtree> NO
20:42 < crabtree> oh it's ryah
20:44 < Felixzilla> Lol
20:44 < Industrial> I just made a .bin/build and a .bin/test instead.
20:44 < Industrial> ./bin, even
20:44 < cgcardona> Hi. I'm trying to make this get request https://gist.github.com/4703485 and I'm not getting any success data. Every one in a while it will return this error { [Error: socket hang up] code: 'ECONNRESET' }. Any ideas?
20:53 < s5fs> cgcardona: no success, ever? or occasionally you'll get an error?
20:55 < bradleymeck> joemccann: https://github.com/bmeck/offline-image-editor , need some cleanup when i get time / docs  but npm start and localhost/app, currently in git it just uses offline, needs a bit of polish like i said
20:57 < s5fs> cgcardona: I cribbed this from the api examples, appears to work: https://gist.github.com/4703618
21:00 < mscdex> isaacbw: i meant unseen != new
21:00 < isaacbw> ah, okay
21:04 < cloudbender> OK rest of the weekend OFF mofo's (that's like 7 hours downtime yeah baby)
21:04 < isaacbw> is it still the weekend?
21:04 < isaacbw> damn
21:04 < cloudbender> gotta watch a meeuwvee
21:05 < isaacbw> I've been off by a day all week
21:05 < cgcardona> s5fs: awesome thanks!
21:13 < isaacbw> letting the grounds bloom first has made my coffee taste so much better that it boggles my mind
21:13 < isaacbw> bogglglglgle
21:16 < lyaunzbe> Hey guys, general js question. When creating an object literal, how would I assign a property to the return value of an inline/anon function?
21:21 < mscdex> lyaunzbe: name the anonymous function and do `foo: myfun()` ?
22:24 < justin__> trying to install node on a hackberry running debian weezy, all good until I do the ./configure im getting : /usr/bin/env: python: Not a directory
22:24 < justin__> i do have python2.7 installed and python2.6
22:24 < justin__> any help??
22:29 < Bonuspunkt> i have no idea, but what happens when you type "/usr/bin/env python" in your shell?
22:30 < cloudbender> 200ms to create 100,000 objects in an array, reverse the array, and then sort it back into order.
22:31 < cloudbender> Javascript is fairly quick
22:32 < cloudbender> Oh, and the sort was on an object property numeric
22:32 < cloudbender> pretty good, even on an old beater laptop
22:47 < mharsch> What determines endianness when using Typed Array Views to write to Buffers?
23:00 < Kakera> does request's cookie jar override the Cookie header?
23:01 < rideh> hmm, no luck with genem
23:12 < cloudbender> so, promise libraries are removed from node ?
23:13 < cloudbender> nevermind
23:19 < Kakera> is there a way to know what cookies request is actually sending?
23:22 < isaacbw> Kakera, just look in the headers
23:22 < cloudbender> Is there a perferred promise library for node ?
23:24 < isaacbw> q is the most popular
23:25 < cloudbender> Tnx.  Is the idea that promises have been deprecated in favor of continuables ?
23:25 < isaacbw> not really
23:25 < isaacbw> I love promises
23:25 < cloudbender> yeah pretty slick stuff
23:26 < gkatsev> ugh, why is coffee-script the 4th most depended upon module in npm?
23:26 < isaacbw> cuz people cray cray
23:26 < Robert00001> it is widely used
23:26 < Robert00001> because it is quite popular
23:26 < isaacbw> I wish modules would offer promise variants though
23:26 < gkatsev> the uploaded modules should be the compiled versions of the module
23:26 < gkatsev> not the CS version
23:26 < cloudbender> becuase 4 hundred billion teenagers voted for it on Idol ?
23:26 < Robert00001> I know
23:26 < Robert00001> and there should be a link to the source
23:27 < cloudbender> actually I have no idea, I'm trying to be funny
23:27 < gkatsev> I will actively seek out a module that doesn't depend on coffee-script when I need one :/
23:27 < spion> maybe its that way because of the before-devDependencies era.
23:27 < gkatsev> it shouldn't matter, though
23:28 < isaacbw> ...Q() functions that wrap the normal callback functions
23:28 < gkatsev> and no, even now people continue uploading modules that depend on CS
23:28 < Robert00001> at least the compiler for coffee-script is pre-compiled
23:28 < isaacbw> good thing you can use whatever modules you choose
23:29 < gkatsev> isaacbw: yeah, I know. It's just stupid that so many modules are Doing It Wrong™
23:29 < Kakera> oh god
23:29 < isaacbw> I only wish it weren't so easy to take up the good names in npm with bad/forgotten modules
23:29 < Kakera> request ignores the 'Cookie' header and then sets the 'cookie' header (mind the case) from the jar
23:29 < Kakera> so the server ignores the first header
23:30 < Kakera> and by ignore I mean that it just leaves it there
23:30 < isaacbw> headers are case insensitive
23:30 < Robert00001> ^
23:30 < isaacbw> to http. You might have a funky module in there somewhere
23:30 < gkatsev> isaacbw: isaacs recently posted on the mailing list that you should contact the person about that. And worst case, contact isaacs to get it changed.
23:30 < Kakera> that's not my point
23:30 < Kakera> request sets both
23:30 < isaacbw> gkatsev, ah, that's good. yea, I'm sure most people will be good about taking down vaporware to give up the name
23:31 < Kakera> or rather, it leaves the header I set manually as-is and then sets its own
23:31 < Kakera> so the request has both 'Cookie' and 'cookie'
23:31 < devgeeks> Is it possible to have a dev dependency that isn't an npm package, per se?
23:31 < isaacbw> maybe you aren't using request properly
23:32 < devgeeks> There is a github project that extends jasmine that I need, but it's not an npm module :(
23:33 < Kakera> no, it's a bug
23:33 < Kakera> https://github.com/mikeal/request/issues/324
23:33 < isaacbw> you could fix it
23:34 < devgeeks> Could I forj their project and add a package.json or something to make it install as a dev dep?
23:34 < devgeeks> s/forj/fork/
23:35 < gkatsev> you could.
23:35 < gkatsev> you could also just clone it and require it
23:35 < Kakera> I don't like using forks in my projects
23:35 < Kakera> oh well, I guess I'll just change my own header into lowercase
23:35 < devgeeks> yeah, I am not a fan either... if all it needed was a package.json they might accept a pull req on it
23:36 < gkatsev> yeah
23:36 < Kakera> that was in response isaacbw 
23:36 < devgeeks> gkatsev: trying to keep things as automated as possible
23:36 < Kakera> but I guess it could work as a response to you as well
23:36 < devgeeks> ah
23:36 < devgeeks> hehe
23:36 < gkatsev> devgeeks: yeah, submit a pull request with a package.json
23:36 < isaacbw> Kakera, I mean you could fix it and give your fix to the maintainer
23:36 < isaacbw> no reason to keep it to yourself ;)
23:37 < Kakera> the issue contains a fix, but it's been untouched for 4 months
23:38 < devgeeks> joshgillies: good morning, josh. 
23:59 < amurdaca> nodejs ftw!!!!!!!!!!!!!!
--- Log closed Mon Feb 04 00:00:26 2013
