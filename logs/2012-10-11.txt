--- Log opened Thu Oct 11 00:00:27 2012
--- Day changed Thu Oct 11 2012
00:00 < langpavel> i know, this is out of this box..
00:01 < langpavel> i have self hosted XMPP server (ejabberd)
00:01 < langpavel> but IRC is unknown for me
00:02 < jmoyers> well
00:02 < jmoyers> terminal based
00:02 < jmoyers> i hear irssi from time to time
00:02 < jmoyers> personally i jumped on the ol' mac bandwagon a few years back, using textual
00:03 < langpavel> yeah, i wish something aka XMPP transport
00:03 < langpavel> something MUST exists, but..
00:03 < langpavel> who cares of IRC :-(
00:04 < xp_prg> I did npm install nodeunit and which nodeunit says command not found
00:04 < xp_prg> what did I do wrong?
00:05 < langpavel> have you npm?
00:05 < langpavel> :-D
00:05 < xp_prg> ya
00:05 < langpavel> can you provide more..?
00:06 < xp_prg> http://pastebin.com/tBQQWnyr
00:07 < xp_prg> langpavel any ideas?
00:07 < Zak> niggler: that idiot
00:07  * ChrisPartridge laughs
00:08 < ChrisPartridge> that was good entertainment
00:08 < niggler> was quieted on javascript
00:08 < jmoyers> npm install -g nodeunit
00:08 < niggler> tis ok -- still investigating doc formats
00:08 < jmoyers> thats a global module since it includes a bin
00:08 < xp_prg> yup that works now, thanks jmoyers
00:09 < jmoyers> np
00:09 < langpavel> whooa lol
00:09 < Zak> ChrisPartridge: thats what i get for helping a guy out and says that crockford's code is wrong
00:10 < jmoyers> crockford's code is wrong
00:10 < Zak> he didn't even understand it
00:10 < jmoyers> i saw him talk at javascript conf in DC
00:10 < jmoyers> that was…. an annoying talk
00:11 < jmoyers> i really dislike the style where you talk down at peope calling them idiots for doing things that are in the end, stylistic choices
00:11 < Zak> what did he talk about?
00:11 < jmoyers> very few of the things that he says ACTUALLY have negative impact. jslint is a brutal waste of time imo
00:11 < Zak> disagree
00:11  * jmoyers shrugs
00:11 < Zak> it might become less of a problem later, when nobody uses IE6,7 or 8
00:11 < jmoyers> jshint is literally 100% better, better documented, more options
00:12 < jmoyers> dude, its not about browser standardization at all
00:12 < jmoyers> most of its like
00:12 < jmoyers> DONT USE if expression statement!!
00:12 < jmoyers> USE CURLIES BRO, IF YOU DONT, YOU'RE AN IDIOT
00:12 < langpavel> linting is about convenience
00:12  * ChrisPartridge is an idiot :(
00:12 < Zak> jmoyers: i'll agree to that though. jshint is better than jslint
00:13 < jmoyers> correct, and convenient, and jshint is better documented and more convenient
00:13 < jmoyers> the bigger the engineering team, the more it matters imo
00:13 < jmoyers> people are sloppy, sometimes
00:13 < jmoyers> and its annoying to look at sloppy
00:13 < jmoyers> he does talk about things that people sometimes don't get, that do cause subtle bugs
00:13 < jmoyers> like variable hoisting, etc
00:13 < niggler> is there a good vim extension to tab code correctly?
00:14 < jmoyers> coersion, triple equals
00:14 < wookiehangover> niggler: tab settings are built into vim
00:14 < wookiehangover> whats you're probably looking for is decent syntax support
00:14 < niggler> i played with vs2012
00:14 < wookiehangover> but fwiw :retab will normalize your current buffer
00:14 < niggler> and for all its faults, i realized that vim isn't sustainable
00:15 < niggler> wookiehangover: will that honor expandtab?
00:15 < wookiehangover> yes
00:16 < Zak> niggler: garbage pm'd me... what an insane idiot
00:17 < niggler> i may be asking for too much with this, but is there an analogue to scope?
00:17 < niggler> *cscope
00:17 < wookiehangover> and you're wrong about vim not being sustainable... just use the force niggler
00:17 < niggler> Zak: not really surprised -- its the internet
00:17 < Zak> niggler: too true
00:17 < niggler> haha wookiehangover damnit i want jscope
00:33 < Zak> for anybody's interest, i use WebStorm. I like it because I use it for both my NodeJS and Browser work. It's also cross-platform and it's "cheap" compared to other paid IDEs
00:33 < niggler> vs2010/vs2012 is free
00:33 < niggler> (bizspark)
00:48 < niggler> is there a way to precompile a replacement regex operation?
00:49 < mscdex> niggler: just keep the variable around?
00:50 < niggler> you can do that for an expression
00:50 < niggler> e.g. /blah/
00:50 < niggler> but i want to keep the entire operation
00:50 < mscdex> eh?
00:51 < niggler> I have a bunch of transforms like blah.replace(/\$([A-Z])/, "$1")
00:51 < mscdex> store them in an array and use .apply() ?
00:51 < othiym23> niggler: there's doctorjs for some cscope-like things, but it's broken and narcissus is a TERRIBLE AST parser, so I don't know how much it can improve as long as it's built on narcissus
00:52 < othiym23> niggler: I just use exuberant-ctags with a custom definition for JS
00:52 < niggler> regex has apply?
00:52 < othiym23> although I might yet put something together with esprima, because ctags is really dumb about a lot of things
00:52 < mscdex> niggler: use apply on replace
00:52 < niggler> othiym23: ugh ctags
00:53 < othiym23> niggler: the problem with cscope is that it's very tied to C's simpleminded scoping / typing rules
00:53 < othiym23> doing what it does for a dynamic language is surprisingly hard
00:53 < othiym23> ctags does a good job, all things considered
00:54 < othiym23> (I use it with tagbar and it completely loses the plot only about 40% of the time)
00:54 < mscdex> String.prototype.replace.apply(blah, replaceArgsArray)
00:54 < niggler> mscdex: ooh duh i should have thought of that 
00:56 < niggler> othiym23 I'm trying to phase out stupid C/C++ isms -- do you have any tool to pick up on those?
00:56 < nmartin> is there a decent library that helps you query JSON data sets?  I get a very large JSON data set back from a query to a CloudStack API, and I need to search, sort, etc the data.  I'd rather not re-invent the wheel. 
00:56 < niggler> mscdex: yeah that's a tad bit faster :)
00:57 < othiym23> niggler: not really, there doesn't seem to be a good tool for style enforcement for JS aside from jshint, which just has the one style, really
00:57 < othiym23> what in particular are you trying to stop doing?
00:57 < mscdex> nmartin: there's several on npm i've seen
00:57 < niggler> othiym23: just generally assuming that {} defines a scope
00:58 < nmartin> hmm, my search foo on npjms must be weak
00:58 < niggler> nmartin: search-fu
00:59 < LouisT> good evening, ladies and gentlemen
00:59 < niggler> othiym23 or even for loops with var -- even though the C99 idiom is that the variable is inaccessible outside, that's not true in javascript (which is not a bad thing, but old habits die hard)
01:00 < mscdex> nmartin: here's one: https://github.com/danski/spahql
01:00 < othiym23> niggler: you can tell jshint to yell at you about variable declarations to account for hoisting
01:00 < othiym23> I forget the option
01:01 < niggler> it complains when a variable is declared again within a function, which catches some of the cases
01:04 < mscdex> nmartin: other random ones: https://github.com/kevinswiber/refine https://github.com/bigeasy/inquiry
01:05 < ChrisPartridge> classic message from MYOB: "any changes you have made to this sale will be saved before it is saved."
01:06 < mscdex> nmartin: also: http://hugoware.net/projects/jlinq https://github.com/deitch/searchjs
01:07 < nmartin> refine looks interesting
01:10 < niggler> in the node CLI is there a way to clear screen?
01:11 < ang3lfir3> :( installing mongoose over wifi on this boat is .... SLOW 
01:11 < nmartin> jlinq looks pretty polished too, i may try that one.  What  i want to avoid is looping over and over to do what I need, event though these libs probably do jus that :)
01:11 < zachwolfe> is there a channel for passportjs help?
01:11 < niggler> ang3lfir3: boat or yacht?
01:12 < ang3lfir3> niggler, Ferrie 
01:13 < ang3lfir3> in english that is Ferry
01:13 < niggler> ang3lfir3: understood :)
01:15 < ang3lfir3> meh i can't take it any more
01:15 < ang3lfir3> I'll have to wait
01:15 < nmartin> i tell you what, developing node is super easy with: nide + node-inspector + nodemon
01:19 < nicholasf> hey, I'm trying to solve a metaprogramming problem in Javascript. See https://gist.github.com/3869572
01:20 < astropirate> nicholasf, have them be the methods of the same object
01:20 < nmartin> mscdex: https://npmjs.org/package/linq a js linq lib is perfect
01:20 < astropirate> and each of them returns "this"
01:21 < nicholasf> astropirate: I'm not following
01:21 < nicholasf> astropirate: each clause becomes a function on one object ... ok
01:22 < nicholasf> each one returns this, how do I then apply each of them to 'and' as a separate function to execture
01:22 < nicholasf> execute
01:23 < astropirate> OHHH
01:24 < astropirate> you' need to call them
01:24 < nicholasf> astropirate: to fill you in a little more
01:24 < astropirate> func1().func2().func3()
01:24 < nicholasf> we're building our own sql
01:24 < nicholasf> sorry, our own ORM
01:24 < nicholasf> but we're using someone else's (brianc's) sql dialect library
01:24 < nicholasf> and his dialect uses where(clause1.and.clause2.and.clauseN)
01:25 < astropirate> :S
01:25 < astropirate> can you link me please
01:25 < nicholasf> currently we're working on converting json to this, so {username: 'fred', email: 'fred@s.com'}
01:25 < nicholasf> can be converted into this structure
01:25 < nicholasf> see http://github.com/moneytribeaustralia/downstairs.js
01:26 < nicholasf> ah, yeh, and we're focusing on postgres
01:26 < nicholasf> tho his dialect also supports sqlite
01:28 < astropirate> nicholasf, those are functions
01:28 < astropirate> it uses  .adn(something).from(table)
01:28 < astropirate> and()*
01:28 < nicholasf> astropirate: see https://github.com/brianc/node-sql/blob/master/test/dialect-tests.js#L54
01:29 < nicholasf> it's a nonsense example (as in it's not a good example of anding sql clauses) but it's functionally correct
01:30 < nicholasf> ok, so to do this I think I'll need a recursive call that will keep calling and on the result of the last function call
01:30 < nicholasf> and will finally direct that into the where(..)
01:30 < astropirate> hmm
01:31 < astropirate> i've done something like this
01:31 < astropirate> let me dig it up to see what i did
01:31 < nicholasf> ok thanks marte
01:31 < nicholasf> mate
01:34 < astropirate> nicholasf, something like this? https://github.com/mansoor-s/Should-Node/blob/master/test/should-node.js#L289
01:36 < astropirate> nicholasf, ok, so the way you do it is every function returns a  "this"
01:36 < astropirate> hmmm
01:36 < nicholasf> astropirate: that's a bit different. If you were dynamically converting the json values into chainable test clauses then yes
01:36 < astropirate> sec lemem think :p
01:36 < nicholasf> astropirate: yah, no worries. I'm just drafting my recursive function
01:39 < nicholasf> I think I have it
01:39 < nicholasf> hang on, let me write it
01:54 < nmartin> any node-inspector pros in here?  EVERY time a load a page in my app, I can step maybe once or twice then node-inspector exits with "This socket is closed."
01:54 < nmartin> its driving me crazy
01:57 < ChrisPartridge> nmartin: and the app isn't crashing at all?
01:57 < ChrisPartridge> (not node-inspector pro)
01:58 < nmartin> no, but i AM running nodemon + node-inspector, are they compatible?
01:58 < nmartin> I'm looking for a node lib that will actually just write the code for me, but until now this setup will have to do
01:58 < nmartin> but it's never a crash, it just exits
01:59 < nmartin> and sometimes the socket hangs
01:59 < pyrotechnick> nmartin: write your tests first, then randomly generate a series of 1's and 0's until they pass
01:59 < nmartin> :)
01:59 < pyrotechnick> trust me it's a valid method
01:59 < pyrotechnick> it's actually the "scientific method"
01:59 < nmartin> like right now, netstat shows port 8484 open, but node-inspector just exited
02:00 < nmartin> pyrotechnick: i tried that once with a hundred monkeys in a room with 100 typewriters, and all they ding was fling shit at each other
02:00 < nmartin> much like programmers
02:00 < pyrotechnick> HA
02:00 < nmartin> but they generated no code
02:00 < niggler> fuck the scientific method
02:01 < pyrotechnick> i agree niggler
02:01 < pyrotechnick> science has an agenda
02:01 < pyrotechnick> a blind agenda
02:01 < niggler> scientists trying to get money via solyndra
02:01 < astropirate> yah i dont believe in science
02:01 < niggler> lol romney is hilarious
02:01 < nmartin> yeah, science is just SAtan dressed up smart
02:01 < niggler>  </politics>
02:01 < pyrotechnick> basicallyh
02:01 < pyrotechnick> lucifer though
02:01 < nmartin> trying to get us on his side
02:01 < pyrotechnick> yep
02:01 < pyrotechnick> archons man archons
02:03 < pyrotechnick> only mad science should be permitted
02:03 < nmartin> i always know when node-inspector is going to crash when I launch it and i get a blank screen
02:03 < nmartin> refresh=boom
02:04 < pyrotechnick> you're a pre-cog
02:04 < pyrotechnick> you're a TK
02:07 < mdedetrich> haro
02:11 < xp_prg> hi all, I am using typescript and I want to use the js code it creates in node js, I try require but its not a module with export code
02:11 < xp_prg> is there some magical way to do this?
02:11 < pyrotechnick> #typescript
02:12 < xp_prg> its a js question
02:12 < pyrotechnick> #javascript
02:12 < xp_prg> can I include a js file into node js somehow?
02:13 < niggler> you can use require
02:13 < niggler> or open file and exec
02:15 < nmartin> ChrisPartridge: I think I found the issue:  Im running nide + nodemon + node-inspector.  I think nide saves the file im editing on every keypress, and this makes app crash, then nodemon is sitting there waiting on anothr codesave, so node-inspector crashes  
02:15 < nmartin> I'm my own programmer worst nightmare
02:16 < nmartin> nide is a "real-time" browser based IDE
02:21 < pyrotechnick> is there a software registry?
02:21 < pyrotechnick> besides "the internet"
02:21 < niggler> for what?
02:22 < pyrotechnick> as its name implies, purely for registering that a piece of software exists
02:22 < pyrotechnick> think of it as a phone book for software packages
02:23 < niggler> that's not how it works
02:23 < pyrotechnick> if this exists i expect it to be implemented with some kind of distributed hash table
02:23 < pyrotechnick> i just dont know where to look, what to search for etc
02:24 < niggler> there's all kinds of "proprietary" software
02:24 < niggler> not in the sense that source code is closed
02:24 < niggler> but in the sense that there's real business value to the software, so it will never be put on there
02:24 < pyrotechnick> but in the sense it "doesn't exist"
02:24 < pyrotechnick> yeah nah i understand and i'm not really interested in projects people don't want in the public domain anyway
02:25 < niggler> savannah tried to do it
02:25 < pyrotechnick> what i'm looking for a registry based more on a push principle
02:25 < niggler> but then there's politics
02:25 < pyrotechnick> yeah i think there's technical solutions though
02:25 < pyrotechnick> think bitcoin
02:25 < pyrotechnick> or web of trust
02:25 < ChrisPartridge> nmartin: Ah, sounds like that's the issue then :)
02:26 < pyrotechnick> are there any channels where people would discuss this kind of thing?
02:26 < pyrotechnick> well i mean they don't have to be people i'd talk to a bot about it too
02:27 < nmartin> pyrotechnick: does this "registry" need to include proprietary, closed source or obsolete software?
02:27 < pyrotechnick> no
02:27 < pyrotechnick> in fact it's preferable it didn't
02:27 < nmartin> so, just open source?
02:27 < pyrotechnick> things people want to be found you know what i mean?
02:28 < nmartin> google "some-app" site:github & site:code.google.com & site: sourceforge.net 
02:28 < nmartin> POW!
02:28 < pyrotechnick> the best thing i've found is like wikipedia's list of lists of lists and lists of software types and list of packages uner those types and stuff...
02:28 < nmartin> DONE! NEXT!
02:29 < pyrotechnick> i guess what i'm looking for is some kind of attractor that naturally attracts these things rather than having to go in search of them individually you would find them collected somewhere conceptually
02:29 < ChrisPartridge> dailyjs.com down for anyone else?
02:29 < nmartin> Of course, that leaves out every Linux Distro and the kernel itself
02:30 < pyrotechnick> timing out here ChrisPartridge
02:30 < pyrotechnick> http://www.downforeveryoneorjustme.com/
02:30 < ChrisPartridge> bummer, right on my lunch break too :(
02:30 < pyrotechnick> waybackmachine it
02:30 < ChrisPartridge> smart man
02:30 < pyrotechnick> that's what she said!
02:31 < terinjokes> worst part of my job: writting integration tests. i hate doing it
02:31 < ChrisPartridge> bah, its too "way back"
02:31 < pyrotechnick> haha
02:31 < pyrotechnick> there's more mirrors if you're really that keen you will find it 
02:31 < pyrotechnick> find someone who subscribes to the RSS
02:31 < pyrotechnick> who's already pulled it
02:31 < ChrisPartridge> ill just put up with HN
02:32 < pyrotechnick> NO
02:32  * ChrisPartridge refrains from clicking comments links
02:32 < pyrotechnick> hide them
02:32 < pyrotechnick> forever and ever
02:32 < pyrotechnick> just like youtube
02:32 < pyrotechnick> anyway
02:32 < pyrotechnick> i like to just type random keywords into twitter and plus now and then
02:32 < pyrotechnick> even facebook has some gems sometimes
02:33 < pyrotechnick> but plus probably is the best
02:33 < pyrotechnick> since it has thumbnails and things
02:33 < pyrotechnick> easier to skim
02:33 < zachwolfe> Has anyone here used Passportjs to manage sessions?  I'm looking for an easy way to test my API without writing HTML forms to test it.
02:33 < ChrisPartridge> pyrotechnick: don't have twitter/plus/bookface account :)
02:33 < pyrotechnick> well everyone has a bookface account whether they like it or not
02:34 < zachwolfe> I'm currently using curl to create new sessions, but I want to make a subsequent curl call with the session information set by the last one
02:34 < pyrotechnick> it's called a case-file
02:36 < pyrotechnick> zachwolfe: something about cookiejars
02:36 < zachwolfe> word
02:37 < pyrotechnick> zachwolfe: any reason you're using curl anyway
02:38 < pyrotechnick> there's a bunch of node modules that'll handle this for you
02:39 < zachwolfe> such as?
02:40 < pyrotechnick> https://github.com/mikeal/request -> "jar" param
02:40 < pyrotechnick> down the bottom
02:40 < mdedetrich> Im just working on a framework to implement UUIDs being put into the html
02:40 < pyrotechnick> there's 10001 others
02:40 < pyrotechnick> but that should suffice
02:40 < mdedetrich> is there anything wrong with putting a UUID in a meta tag (within HEAD)
02:41 < pyrotechnick> mdedetrich: SGTM
02:41 < pyrotechnick> you could do like
02:41 < mdedetrich> wtf is sgtm
02:41 < pyrotechnick> <html data-uuid=meh> or something
02:41 < pyrotechnick> sounds good to me
02:42 < mdedetrich> oh right
02:42 < zachwolfe> pyrotechnick: thanks
02:42 < pyrotechnick> zachwolfe: yw
02:42 < pyrotechnick> it depends what makes more semantic sense in your case
02:42 < pyrotechnick> is it an attribute of the page, or is it an element in its own right?
02:44 < zachwolfe> I'm sorry I don't understand what you're asking.  
02:44 < pyrotechnick> no mdedetrich
02:44 < mdedetrich> pyrotechnick: eh?
02:44 < pyrotechnick> nvm
02:45 < zachwolfe> I'm using Passport to restrict access to certain routes.  I want to 'log in' and then test a 'restricted' route without needing to deal with writing an html form, etc to i can do it in a browser
02:45 < zachwolfe> s/to/so
02:45 < pyrotechnick> zachwolfe: there'
02:46 < pyrotechnick> are some "higher level" modules for doing that kind of thing
02:46 < pyrotechnick> rather than reinventing the wheel with request or raw node for that matter
02:46 < zachwolfe> that's what i'm looking for
02:46 < pyrotechnick> https://github.com/LearnBoost/soda
02:46 < zachwolfe> perhaps not even a 'module' but a tool like 'curl' 
02:47 < pyrotechnick> someone chime in here if there's some newer stuff though because i haven't done this in a while
02:47 < pyrotechnick> that one's proper headed
02:48 < pyrotechnick> maybe i'm leading you astray...
02:48 < SomeoneWeird> well how do you want to 'login' then zachwolfe 
02:48 < mdedetrich> maybe I'm dancing
02:48 < mdedetrich> who knows
02:48 < pyrotechnick> are we human?
02:49 < pyrotechnick> does it even matter?
02:49 < SomeoneWeird> wat
02:49 < mdedetrich> thats a good question
02:49 < mdedetrich> not too sure
02:49 < ChrisPartridge> define human
02:49 < mdedetrich> thinking
02:49 < pyrotechnick> possessing the ability to overcome strange attractors 
02:49 < mdedetrich> thats human
02:49 < pyrotechnick> no that's human ^
02:49 < pyrotechnick> thoughts are light
02:49 < mdedetrich> being able to masturbate
02:49 < mdedetrich> thats human
02:49 < pyrotechnick> and electrical impulses
02:49 < pyrotechnick> no that's sapiens
02:49 < pyrotechnick> human is different
02:50 < mdedetrich> ill give you electrical impulses
02:50 < pyrotechnick> please do
02:50 < zachwolfe> SomeoneWeird: passport sets a cookie, I'm not sure exactly how
02:50 < mdedetrich> just shove the cord in one of your holes
02:50 < pyrotechnick> http://www.fractalwisdom.com/science-of-chaos/the-four-chaos-attractors/strange-attractor/
02:50 < mdedetrich> and lets get going
02:50 < SomeoneWeird> maybe slightly offtopic :p
02:51 < pyrotechnick> offtopic?
02:51 < pyrotechnick> THIS IS #NODE.JS
02:51 < SomeoneWeird> true
02:51 < SomeoneWeird> lol
02:51 < pyrotechnick> node is off-topic
02:51 < pyrotechnick> by its very nature
02:51 < pyrotechnick> that's what we like about it, isn't it
02:51 < ChrisPartridge> gotta do something while we are waiting for the IO to finish, right?
02:51 < mdedetrich> lets have another 3 hour argument
02:52 < Zak> i thought it was because we send each other gay hard greek porno
02:52 < mdedetrich> about expressiveness
02:52 < mdedetrich> Zak: that too
02:52 < pyrotechnick> let's decide what color the bike shed should be
02:52 < ChrisPartridge> Zak: too much hair
02:52 < mdedetrich> I vote magenta
02:52 < pyrotechnick> i vote violet
02:53 < pyrotechnick> magenta isn't a color it's a pigment
02:53 < mdedetrich> I actually have an ontopic message now
02:53 < pyrotechnick> GET IT RIGHT
02:53 < mdedetrich> this is the first time I forked a node.js package
02:53 < mdedetrich> and I am doing changes locally
02:53 < ChrisPartridge> I vote #4AFF15
02:53 < mdedetrich> whats the command to make a local package and install it globally
02:53 < mdedetrich> ChrisPartridge: you dirty bastard
02:53 < mdedetrich> (I have basically forked a framework and I am making changes to it)
02:54 < mdedetrich> I want to obviously test those changes
02:54 < Daegalus> mdedetrich: npm link?
02:55 < mdedetrich> Daegalus: well I am just generally asking
02:55 < mdedetrich> I have forked a node library that is just a rawr npm package
02:55 < SomeoneWeird> sudo npm -g link
02:55 < mdedetrich> *raw
02:56 < mdedetrich> SomeoneWeird: i am getting an error that link should never be global
02:57 < mscdex> poor zelda
02:59 < mdedetrich> what did zelda do?
03:01 < SomeoneWeird> then just copy it manually 
03:01 < SomeoneWeird> lol
03:02 < mdedetrich> SomeoneWeird: i actually did it
03:02 < mdedetrich> was a lot simpler than I thought
03:03 < pyrotechnick> what's wrong with zelda
03:06 < ag4ve> what do y'all prefer to use for unit testing?
03:06 < niggler> bash script
03:07 < Zak> ag4ve: mocha or jasmine
03:07 < Zak> also, shouldjs
03:07 < pyrotechnick> require 'assert'
03:07 < ChrisPartridge> mocha 
03:10 < bthesorceror> been looking for a good tutorial for bdd in node, anyone have a recommendation?
03:10 < ag4ve> hummm, mocha looks a bit more mature than jasmine...
03:11 < ag4ve> shouldjs looks interesting for simple things i guess
03:13 < bthesorceror> thanks ag4ve, been playing around with mocha and jasmine. I was looking for good tutorial though like a good blog post or maybe a recorded workshop.
03:21 < ag4ve> heh, my first thought was a perl script with Test::More, but i figure since i'm writing js, maybe it would be nicer to keep everything in one language :)
03:23 < devians> hey, if i have demo.js, can i have that re evalled in node every time i save?
03:23 < ag4ve> googling 'node js unit test' gives tons of tutorials mainly for node-unit and assert. but, i hadn't really looked at mocha until Zak just told me.
03:24 < ag4ve> devians: framework?
03:25 < devians> am i using one? not at the moment, just playing around and learning
03:25 < SomeoneWeird> look at forever
03:26 < devians> ahhh interesting thanks
03:26 < kenokabe> hello how are you doing :)
03:27 < pyrotechnick> splendid kenokabe, and you?
03:27 < SomeoneWeird> ello
03:27 < kenokabe> good to hear prytechnick, I'm good
03:28 < kenokabe> pryotechnick
03:28 < kenokabe> pyrotechnick, sorry
03:28 < pyrotechnick> don't be sorry my friend
03:28 < pyrotechnick> it wasn't your fault
03:28 < kenokabe> ok
03:29 < ag4ve> yeah, it was mine, and i haven't considered it enough to feel sorry yet
03:29 < pyrotechnick> the ebb and sway of the cosmos, the dance of shiva, has been in place well before you came and will be well after you're gone
03:29 < krishna> did the npm site use to have a search function that didn't go through google?
03:29 < LouisT> anyone know of or have a decent sandbox for untrusted code?
03:30 < kenokabe> well, you could use virtual machine, LouisT
03:30 < context> heh
03:30 < LouisT> kenokabe: yyeeeaaa, i'd rather not at this point
03:30 < context> http://gf3.github.com/sandbox/
03:31 < LouisT> context: yea i've been using that, but every now and then i get weird issues from it.. like it has an issue spawning a new process =/
03:31 < pyrotechnick> LouisT: also https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS under "security enforcing js"
03:31 < kenokabe> interesting context
03:31 < context> louist: maybe its your environment and not that ?
03:31 < LouisT> context: maybe, not sure, but it wouldn't hurt to test others
03:32 < pyrotechnick> krishna: it used to yes, you can also use the cli "npm search *"
03:32 < context> pyrotechnick: thats scary
03:32 < LouisT> not really sure why it'd work sometimes and then not others
03:32 < pyrotechnick> context: rule 51 man rule 51
03:32 < context> louist: so far all you've said is "it dont work"
03:32 < LouisT> context: so far i've said it doesn't work sometimes
03:33 < kenokabe> well, then I insist some vm, grub small linux distribution and install on virtualbox or etc
03:33 < LouisT> i use it within a continuously running process, it'll work if it works once, but sometimes if the process restarts it fails every time until i restart it again
03:34 < context> louist: if its "sometimes" id lean against blaming the lib
03:34 < LouisT> context: nothing else fails like it, so i'm not sure
03:34 < context> meh :/
03:35 < kenokabe> I recently was bored osx-lion/mountain-lion stuff on my MacBookAir, and now install lubuntu, then run mountain-lion on vmware
03:35 < LouisT> i've tried spawning processes at the same time it doesn't work, never had an issue
03:35 < LouisT> it just seems like that does every now and then
03:35 < LouisT> i've never been able to figure it out
03:35 < ag4ve> LouisT: chroots are cheap and decently secure
03:35 < context> wow
03:35 < jamescarr> yep
03:35 < ag4ve> there are also linux sandboxes lx(something)
03:36 < context> solaris zones
03:36 < pyrotechnick> kenokabe: that's heresy
03:36 < kenokabe> well yes pyrotechnick
03:36 < context> start up your own OpenStack, your own EC2 for running untrusted code
03:37 < ag4ve> ya could also just make selinux rules for the process name and user that pretty much sandboxes it however you need.
03:37 < ag4ve> the later will cause the most headache but probably be the preferred method
03:37 < context> haha
03:37 < context> id still chose grsec over selinux
03:37  * LouisT shrugs
03:38 < ag4ve> grsec?
03:38 < LouisT> i just want to eval code via IRC without breaking everything
03:38 < context> http://grsecurity.net/
03:38 < context> very powerful like selinux but remove 99.99% of the bs
03:39 < kenokabe> by the way, I tried ranger-filemanager, and almost perfect for my demands, but I consider I write my own console base filemanager
03:39 < kenokabe> anyone know what is the best framework? so far  I investigated ncurses-node and ansi.js
03:39 < ag4ve> kenokabe: :E doesn't do it for you? :)
03:39 < context> im surprised half of grsec isnt default in linux
03:40 < ag4ve> where is their freaking license.....
03:40 < kenokabe> ag4ve, what do you mean, don't quite understand :\
03:41 < pyrotechnick> http://blog.datomic.com/2012/10/codeq.html
03:41 < context> ag4ve: http://en.wikipedia.org/wiki/Grsecurity
03:41 < context> ag4ve: learn to use the google :p
03:41 < context> ag4ve: its GPL
03:41 < ag4ve> kenokabe: vim's file explorer
03:41 < kenokabe> is it 
03:42 < kenokabe> I will google, but I'm having hard time on vim though
03:43 < ag4ve> kenokabe: so, to be honest, i don't much use the file explorer in vim anymore. i just get into the root of my repo and \f which is command-t and go from there. i guess it's a different work flow than using a filemanager
03:44 < context> more you can avoid the mouse the better
03:45 < kenokabe> af4ve, I see
03:45 < ag4ve> i did like how i could resize my splits with my mouse... :set ruler seems to have killed that, but :res and ctrl+w +/- works ok too i guess
03:45 < kenokabe> well I agree context
03:46 < ag4ve> i can still use the mouse to resize my tmux splits though ... haven't killed that yet :)
03:46 < kenokabe> recently, I start to use amazon ec2, so I also think it's good to use cui filemanger, duplicating my remote/local environment
03:47 < ag4ve> cui? cli maybe?
03:47 < kenokabe> plus, I'm tired lots of window s, filemanager integrated into terminal is very good
03:48 < kenokabe> yeah, command line interface
03:48 < kenokabe> or command user interface gui/cui
03:48 < niggler> is there a node variant that uses spider monkey?
03:48 < niggler> or is that taboo
03:48 < ag4ve> hadn't heard cui...
03:48 < ChrisPartridge> niggler: pretty sure I seen someone do it
03:48 < ChrisPartridge> was a while ago though
03:49 < ag4ve> i think i saw sm mentioned on the list a few weeks back
03:49 < kenokabe> to me it's a pair  graphical user interface= gui and command line user interface = cui
03:49 < kenokabe> but yeah cli ,sure
03:50 < niggler> sm also stands for something called sourcemint
03:50 < niggler> which is terribly confusing
03:51 < mscdex> there was a node spidermonkey project, but i'm pretty sure it's dead
03:51 < Oddman> i think it's a silly notion
03:51 < mscdex> https://github.com/zpao/spidernode
03:51 < Oddman> if cli indicates a user interface, it's been that way since day dot
03:51 < Oddman> er, -if
03:52 < ChrisPartridge> mscdex: the funny thing is, the title of his readme "Evented I/O for V8 javascript."
03:52 < mscdex> yeah he forked and didn't change the readme ;-)
03:52 < ag4ve> too like a developer to not write english :)
03:53 < kenokabe> mscdex, I have a question for you, good timing
03:53 < mscdex> i hope i have an answer for you
03:53 < kenokabe> I tried your ncurses-node, today, but had an error, xterm .. something
03:53 < niggler> HAHA kenokabe on a mac?
03:54 < kenokabe> niggler no, ubuntu
03:54 < mscdex> kenokabe: what version did you install?
03:55 < kenokabe> ubuntu 12.04+ the latest git
03:56 < niggler> whats your $TERM?
03:56 < kenokabe> I lost the exact error msg, but when I googled, you mention, you will detach dependency source, and etc
03:56 < kenokabe> niggler, my terminator
03:56 < mscdex> :S
03:56 < kenokabe> my $term is terminator on ubuntu
03:57 < mscdex> wha
03:57 < niggler> kenokabe: echo $TERM
03:57 < niggler> run that
03:57 < kenokabe> oh ok
03:57 < SomeoneWeird> lol
03:57 < kenokabe> xterm
03:57 < mscdex> watch `echo $TERM` return 'Arnold'
03:57 < mscdex> :p
03:58 < niggler> hehe
03:58 < kenokabe> well so, it's xterm 
03:58 < mscdex> kenokabe: weird, i test on ubuntu 12.04 too
03:59 < kenokabe> macdex: oh ok, so it's supporsed to work as it is
03:59 < kenokabe> thank you
03:59 < SomeoneWeird> what was the error?
03:59 < kenokabe> well xterm something I'm looking
04:01 < niggler> ncurses is a pain
04:02 < mscdex> tell me about it
04:03 < kenokabe> Error opening terminal: xterm.
04:03 < mscdex> kenokabe: out of curiousity, do you have the libncursesw5 package installed?
04:03 < mscdex> or libncurses5/libncurses5-dev ?
04:03 < mscdex> or ncurses-term ?
04:03 < mscdex> heh
04:03 < kenokabe> mscdex, ok I will take a look
04:04 < kenokabe> mscdex, yes libncursew5 is already installed
04:05 < stongo> I'm having a hard time making a node.js app run on a centos/plesk lamp server
04:05 < stongo> not sure if I should be running it on localhost or 0.0.0.0
04:07 < mscdex> kenokabe: what about the other packages i mentioned? also are you running the server or desktop variant of ubuntu?
04:07 < nicholasf> astropirate: got it going - https://github.com/moneytribeaustralia/downstairs.js/blob/master/lib/table.js#L12
04:07 < kenokabe> sudo apt-get install  ncurses-term 
04:07 < kenokabe> I installed now, but the same result
04:07 < kenokabe> Error opening terminal: xterm.
04:08 < mscdex> kenokabe: and you did this?: `npm install https://github.com/mscdex/node-ncurses/tarball/master` and then did `node node_modules/ncurses/examples/colors.js` and got that error?
04:08 < kenokabe> mscdex, ok I am doing that
04:11 < nmartin> a javascript file like: https://raw.github.com/hugoware/jlinq-beta/master/jlinq.js that is normally used client side can be used in node.js, right?  Do I just need to go through and export all the functions?
04:12 < mscdex> nmartin: at the bottom there just do something like `if (module && module.exports) module.exports = jLinq;`
04:13 < mscdex> right after the `jl = jLinq;` line
04:13 < kenokabe> mscdex, thanks! wored, looks like I have used an old code
04:13 < nmartin> cool thanks. for some reason I thought a module had to export all public functions liek in an .h file
04:13 < kenokabe> worked*
04:14 < mscdex> kenokabe: possible. i haven't published to npm with the latest changes yet
04:14 < kenokabe> perhaps, I just typed npm your old repo
04:14 < kenokabe> eah I see mscdex
04:14 < niggler> mscdex: you should push a new npm version :)
04:14 < kenokabe> well, thanks for your great work, I keep studying mscdex
04:14 < mscdex> nmartin: not usually, most libraries like this will have everything under one variable, so it makes it really easy
04:15 < niggler> and add the mouse support 
04:15 < mscdex> niggler: i probably will, and just leave a note in the readme about OSX users being SOL ;-)
04:15 < niggler> I'm working on a consistent way of doing it
04:15 < nmartin> ah, so jLinq is a variable with all the functions attached to it?
04:15 < mscdex> nmartin: it appears so
04:15 < nmartin> cool
04:16 < niggler> basically in some versions of osx you can rebuild nurses from the mac source, use *that* tic and perturb the terminfo.src
04:16 < niggler> problem is that in mac you don't receive single click or single-click-drag
04:16 < niggler> so you need to set 1002
04:16 < kenokabe> linq.js is good
04:16 < niggler> but xterm-1002 is not 256 color :/
04:16  * sinclair high fives kenokabe
04:17 < mscdex> xterm-256colors
04:17 < mscdex> :-D
04:17 < ag4ve> anyone used mongoosastic? i'm trying to figure out how to have data in es that isn't stored in mongo...?
04:17 < niggler> xterm-256color doesn't set 1002 or 1003
04:17 < mscdex> works great on linux
04:17 < sinclair> niggler: linq.js is awesome
04:17 < niggler> fuck linq
04:17 < niggler> yeah :/
04:17 < mscdex> mouse is overrated for terminal apps :-P
04:17 < niggler> mscdex: click-drag to select cells is pretty slick
04:18 < niggler> albeit slow as balls
04:18 < mscdex> that is pretty slow
04:18 < SomeoneWeird> concat'ing about 10 strings together OR stringifying an object with the same strings in it << which one is faster?
04:18 < kenokabe> rxjs is good, too. functional reactive programming with linq
04:18 < niggler> the problem is that you have to refresh more actively -- there's all kinds of quirks in the osx ncurses
04:18 < mscdex> SomeoneWeird: depends on how you're concatenating
04:18 < tomshreds> any good image manipulation library for node?
04:19 < SomeoneWeird> "something: " + var1 + " : something else: " + var 2
04:19 < SomeoneWeird> etc. mscdex 
04:19 < mscdex> tomshreds: grahpicsmagick?
04:19 < mscdex> SomeoneWeird: oh, not that way then
04:19 < mscdex> niggler: yeah
04:19 < SomeoneWeird> ?
04:19 < tomshreds> mscdex: this http://aheckmann.github.com/gm/ ?
04:20 < mscdex> SomeoneWeird: it's technically better if you concatenate in pieces like: foo += 'bar'; foo += 'baz'; .... 
04:20 < sinclair> niggler: im back on windows again, linux was kinda wrong
04:20 < mscdex> s/better/faster
04:20 < mscdex> SomeoneWeird: because temporary strings don't have to keep being generated
04:20 < SomeoneWeird> so concating would still be faster than stringifing it all?
04:20 < sinclair> niggler: are you on linux?
04:20 < niggler> i was on windows earlier today sinclair 
04:20 < niggler> I'm on mac
04:20 < niggler> fuckin new york state
04:21 < niggler> these clowns don't accept partnership returns via mail
04:21 < niggler> so you have to efile
04:21 < mscdex> SomeoneWeird: you'd have to run your own tests to determine that, but as far as concatenating, that's the most performant way to go
04:21 < niggler> which means you get sucked into the intuit ecosystem
04:21 < niggler> which is *far* worse than the microsoft ecosystem
04:21 < SomeoneWeird> yeah right, thanks
04:21 < sinclair> niggler: i ran ubuntu for a month, as it turns out, every time i wanted to be productive, i was fighting the UI (the Unity UI)
04:21 < niggler> i agree sinclair 
04:21 < mscdex> niggler: at least it's not ncurses-based intuit ecosystem ;-)
04:21 < niggler> for the most part osx stays out of my way
04:22 < niggler> mscdex: hehe i wouldn't mind that actually
04:22 < niggler> if they had a mac version of lacerte id be happy
04:22 < sinclair> niggler: i was virtualizing Windows, and got to the point i was booting windows in linux just to do anything useful. So i have swapped back
04:22 < niggler> but no i have to set up bootcamp just for that
04:22 < niggler> sinclair: i fully agree linux desktops sucks
04:22 < niggler> *suck
04:22 < niggler> all of them
04:22 < sinclair> what about KDE or other varients ?
04:22 < mscdex> i love me some xfce and lxde
04:23 < niggler> kde has its own problems
04:23 < niggler> gnome 3 though was a major step backwards
04:23 < mscdex> and openbox
04:23 < niggler> *major* step backwards
04:23 < sinclair> unity was horrible (and im not a full time linux user who was used to something else)
04:23 < niggler> so for a desktop experience its osx or windows
04:23 < mscdex> if only they programmed unity with typescript....
04:24 < niggler> and i can handle most windows things, but i ended up having to restart no less than 10 times in windows
04:24 < sinclair> niggler: i might still go for a Unity Server installation, so long as i can shell into it and completely ignore the UI entirely
04:24 < niggler> every fucking service pack required a reboot
04:24 < niggler> unity server without ui = server edition with x
04:24 < sinclair> x is?
04:24 < niggler> X11
04:24 < mscdex> x-windows
04:24 < sinclair> oh right
04:24 < mscdex> xorg
04:25 < mscdex> non-xfree86
04:25 < mscdex> :-)
04:25 < sinclair> at any rate, nodejs runs just fine on windows
04:25 < mscdex> it runs terrible on xp
04:25 < mscdex> performance-wise
04:26 < jmoyers> yeah windows xp is a server platform ;-)
04:27  * sinclair will be purchasing a windows 8 license
04:28 < sinclair> and a tablet, probably
04:28 < euoia> hey everyone, I just spent a few minutes getting vim's super useful :make feature to work with nodejs errors: http://pastebin.com/34D96H4V
04:29 < sinclair> i wish more people here dealth with Azure
04:29 < mscdex> jmoyers: nah, but you'd expect some things to be better since stuff like file I/O is truly async
04:29 < sinclair> *dealt
04:29 < jmoyers> i wouldn't
04:29 < niggler> fuck azure
04:29 < jmoyers> because who tests on xp, in all reality?
04:29 < niggler> oh sinclair awesome story
04:29 < mscdex> me!
04:29 < niggler> while firing up win7
04:29 < niggler> i set up windows xp mode
04:29 < jmoyers> libuv is complicated enough without calling xp supported ;P
04:29 < niggler> and tried some code 
04:29 < sinclair> i would very much like to mix nodejs with mvc, via the service bus
04:30 < niggler> one goof: apparently i.e. doesn't like trailing commas
04:30 < niggler> e.g. {a:1,b:2,}
04:30 < niggler> other than that, everything worked in IE6
04:30 < Zak> use jshint to pick those things up
04:30 < mscdex> the particular benchmark i was running at the time was still slow on Windows 7 even
04:30 < mscdex> just a little faster than xp
04:30 < niggler> i was genuinely surprised given what other people have been saying about IE incompatibilities
04:30 < mscdex> and the results on Linux were ~5x better
04:30 < niggler> Zak: unfortunately i used a bash script to generate that javascript code
04:30 < niggler> haha so i had to change it
04:31  * jmoyers points at bing mobile
04:31 < Zak> still, run jshint on if afterwards :)
04:31 < jmoyers> i imagine it runs okay on IIS :P
04:32 < sinclair> jmoyers: everything runs good on IIS
04:32 < mscdex> except anything useful!
04:32 < mscdex> :-D
04:32 < niggler> Zak: i added a 'lint
04:32 < niggler> ' target to my makefile
04:32 < sinclair> mscdex: nodejs runs great on IIS
04:32 < kenokabe> what IDE do you use mscdex , niggler and everyone?
04:32 < jmoyers> thats because its… the target server platform for windows?
04:32 < kenokabe> for your javascript coding
04:33 < jmoyers> people dont just optimize on a given platform for funsies
04:33 < jmoyers> its actually not fun to write shitty code to shittily optimize a shitty platform
04:33 < mscdex> kenokabe: i use notepad++ on Windows and a highly customized Geany on Linux
04:33 < niggler> kenokabe: back to vim :)
04:33 < kenokabe> Geany, never tried that, thanks. mscdex
04:34 < kenokabe> niggler vim :) ok
04:34 < niggler> vs2010 and vs2012 are … interesting
04:34 < niggler> i felt for javascript that they got in the way
04:34 < mscdex> although I admit I don't use Geany for its IDE features (never tried them), I just use it as a code editor
04:34 < niggler> now I'm told that vs2012 on win8 is better
04:34 < kenokabe> I personally use webstorm and satisfied with that, but curios to know alternative
04:34 < Lorentz> include sublime and netbeans
04:35 < kenokabe> well yes vs2012 is great IDE
04:35 < niggler> it left a lot to be desired
04:35 < mscdex> the last time i used netbeans was back in college, to write a battleship game
04:35 < mscdex> for some class
04:35 < kenokabe> I 've been a C# coder for a long time, and thought vs is the best IDE
04:35 < Zak> how do you run nodejs ON IIS?
04:35 < niggler> netbeans is godawful
04:35 < mscdex> i just remember it taking forever to load up
04:35 < niggler> for C# sure kenokabe but there's no native javascript project
04:36 < SomeoneWeird> vs is actually amazing
04:36 < niggler> and there's no way to import everything without vs molesting everything
04:36 < kenokabe> still not? I thought now there was a good binding with js, niggler
04:36 < niggler> intellisense works
04:36 < kenokabe> yeah
04:36 < niggler> file management isn't great though
04:37 < mscdex> real developers memorize APIs!
04:37 < niggler> i wasn't able to find all references, for example
04:37 < kenokabe> lol mscdex 
04:38 < niggler> lol c9
04:38 < niggler> so c9.io and the local editor both still have bugs
04:38 < kenokabe> I wonder who imagined ' . ' of object oriented programming works so good with intellicense of IDE
04:38 < niggler> macvim is the best thing I've got, except i can't get make to run in the background
04:40 < mscdex> you know what would be awesome? an html5 ZZT mmorpg
04:40 < mscdex> with websockets
04:40 < ChrisPartridge> ZZT?
04:40 < mscdex> yeah
04:40 < mscdex> surely i wasn't the only ZZT fan in here
04:41 < niggler> ZZT?
04:41 < ChrisPartridge> never heard of it
04:41 < niggler> lol ZVZZT
04:41 < kenokabe> at we need to google ZZT lol
04:41 < niggler> google ZVZZT
04:41 < kenokabe> al least
04:41 < Lorentz> I'll have to give geany a try
04:41 < niggler> there are four test tickers
04:41 < mscdex> http://en.wikipedia.org/wiki/Zzt
04:41 < niggler> ZVZZT, ZJZZT, ZWZZT, ZXZZT
04:42 < kenokabe> chatting you guys, I somewhat miss online game
04:42 < kenokabe> recently I had too much trouble on twitter, tired
04:42 < mscdex> i long for the return of BBSes :-P
04:42 < niggler> fuck twittrer
04:43 < kenokabe> too many weired stalkers on twitter
04:44 < mscdex> i've never used twitter
04:44 < pyrotechnick> you guys...
04:44 < pyrotechnick> twitter is just SMS
04:45 < mscdex> except SMS is 160 characters?
04:45 < pyrotechnick> it's not twitters fault people suck
04:45 < ChrisPartridge> how many characters is twitter?
04:45 < LouisT> twitter is mass sms
04:45 < pyrotechnick> well SMS is broadcast anyway
04:45 < pyrotechnick> GSM was hacked along time ago
04:45 < kenokabe> maybe true pyrotechnick
04:45 < pyrotechnick> before it was released i believe
04:45 < mscdex> OMGSM
04:45 < kenokabe> 140
04:46 < mdedetrich> GSM is SOOOO 1990's
04:47 < pyrotechnick> what was wrong with the 90s?
04:47 < mscdex> yeah!
04:47 < kenokabe> actually never tried Geany, but this looks good 
04:47 < mdedetrich> Geore bush?
04:47 < mdedetrich> *George
04:47 < mscdex> Clinton?
04:48 < kenokabe> perhaps there will be a war between iran and israel next yar
04:49 < mdedetrich> Im pretty sure it was bush that was put in
04:49 < mdedetrich> mid 1990's
04:49 < mscdex> heh
04:49 < kenokabe> iran nuclear stuff, israel never allow that, and start bombing soon
04:49 < mscdex> fire ze missiles
04:50 < mdedetrich> I wish I could bomb a country
04:50 < pyrotechnick> get defcon
04:50 < pyrotechnick> from steam
04:50 < pyrotechnick> have fun.
04:50 < mdedetrich> I mean in RL
04:50 < pyrotechnick> nah
04:50 < pyrotechnick> not that fun
04:50 < pyrotechnick> that's why they don't even do it that much
04:50 < pyrotechnick> people start hating on you and stuff
04:50 < mdedetrich> yeah true
04:50 < pyrotechnick> just ask the japanese
04:50 < mdedetrich> I suppose
04:51 < pyrotechnick> these guys have a monopoly on fun and big boy toys
04:51 < pyrotechnick> if it was so good they'd be doing it all the time
04:51 < kenokabe> I am a japanese
04:51 < pyrotechnick> that explains why you want nuclear revenge
04:51 < pyrotechnick> i don't blame you
04:51 < niggler> kenokabe: you are "a japanese"?
04:51 < pyrotechnick> but an eye for and eye and so on and so forth
04:51 < kenokabe> yeah niggler, living in Kobe,Japan
04:52 < mdedetrich> I want an eye
04:52 < niggler> you are japanese
04:52 < niggler> or you are a japanese person
04:52 < niggler> what's "a japanese"
04:52 < kenokabe> well my passport
04:52 < kenokabe> born in jp
04:53 < kenokabe> studied here, have lived in LA, and back here for a while
04:54 < mdedetrich> never been to japan, wonder what its like
04:54 < kenokabe> ppl says , clean and food is good :) mdedetrich
04:55 < mdedetrich> thats like sydney, its clean here and we have good food
04:55 < kenokabe> also girs are cute and very curious to foreingers
04:55 < mdedetrich> hmmmmm
04:55 < kenokabe> mdedetrich, are you sure good food part in australia? ;p
04:56 < Lorentz> yes, we have awesome food here
04:56 < mdedetrich> We actually have some of the highest standards for food/drinks here
04:56 < kenokabe> you guys plz visit japan and try some Lorentz
04:56 < mdedetrich> starbucks in australia basically almost became bankrupt because their coffee was so bad
04:56 < mdedetrich> no one drank it
04:57 < kenokabe> oh yeah? that's intersting story in fact
04:57 < jmoyers> snobs
04:57 < kenokabe> here in Japan, starbucks is still very popular 
04:57 < Lorentz> I plan to go to japan in few years
04:57 < mdedetrich> we have all these little coffee shops that have beans which are probably brought in by some naked Scandinavian virgins
04:57 < Lorentz> my friends have visited few times, couldn't join them sadly
04:58 < kenokabe> sounds good mdederich
04:58 < mdedetrich> indeed it does
04:58 < mdedetrich> its very expensive here though
04:59 < kenokabe> well sure, here there are good coffee shops, but somewhat starbucks are considered to place to go among ppl
04:59 < mdedetrich> I think we have become more expensive here in sydney than tokyo
04:59 < niggler> starbucks outside the US are terrible
04:59 < kenokabe> sure? tokyo is very expensive
04:59 < mdedetrich> kenokabe: yeah I read an article on it
05:00 < Lorentz> they're both expensive
05:00 < niggler> take into account currency depreciation?
05:00 < mdedetrich> like in sydney, EVERYTHING is expensive
05:00 < Lorentz> probably most expensive places to live in the world
05:00 < mdedetrich> its not just food or rent
05:00 < mdedetrich> its god damn everything
05:00 < kenokabe> yeah that's true Lorentz
05:00 < Lorentz> a bottle of coke from vending machine here is $4
05:00 < kenokabe> especially rooms
05:00 < Lorentz> soon it'll be $5
05:00 < mdedetrich> fuel is expensive, electricity is expensive, coffee is expensive
05:00 < mdedetrich> my ass is expensive
05:00 < kenokabe> well I think kinda same as NY
05:00 < Lorentz> electricity, I got my bill recently, $500 for quarterly bill
05:00 < kenokabe> for room rent
05:00 < niggler> NY its not allowed :)
05:01 < niggler> thank bloomberg for that
05:01 < mdedetrich> public transport is expensive (its like $4 single way typical train ticket)
05:01 < kenokabe> Lorents $4?
05:01 < kenokabe> usd?
05:01 < mdedetrich> kenokabe: aud
05:01 < Lorentz> AUD
05:01 < mdedetrich> kenokabe: basically parity with USD
05:01 < mdedetrich> or are we still higher?
05:01 < Lorentz> higher iirc
05:01 < Lorentz> how much is a can of soft drink from vending machine Japan, is it still 120JPY?
05:02 < kenokabe> well very close lol
05:02 < kenokabe> for 250ml 12oJPY
05:02 < kenokabe> for 350ml 150 JPY from vending machine in Japan :)
05:03 < Lorentz> 375mL cans here are about $2.50 to $3
05:03 < Lorentz> ~200 JPY
05:03 < kenokabe> well, expensive agree
05:03 < kenokabe> how so?
05:03 < Lorentz> housing is also expensive because we don't really have apartments
05:04 < kenokabe> actually, we are now in deflation period in Japan, prices tends to be cheap, but still expensive in Tokyo I would say
05:06 < mdedetrich> anyways, back to me being a snob
05:06 < mdedetrich> and getting an organic burger with a coffee
05:06 < mdedetrich> adios
05:06 < kenokabe> good
05:06 < kenokabe> bye
05:06 < Zak> it's all worth it being in Tokyo
05:06 < Zak> the women are amazing
05:07 < kenokabe> Zak you notice that lol
05:07 < mdedetrich> you should go to central europe
05:07 < kenokabe> been there?
05:07 < mdedetrich> the women there are AMAZING
05:07 < Zak> kenokabe: yeah, I've been to Japan many times
05:07 < kenokabe> I also agreen mdedetich
05:07 < kenokabe> where are you now
05:07 < mdedetrich> sydney australia
05:07 < kenokabe> Zak
05:07 < mdedetrich> i was born here
05:07 < mdedetrich> but in czech/slovak in origin
05:07 < Zak> sydney australia
05:07 < kenokabe> wow why are you all guys from sysney aus?
05:08 < Zak> it's probably our timezone
05:08 < jmoyers> sf
05:08 < kenokabe> I see :)
05:08 < mdedetrich> cos we own this joint
05:08 < Zak> when we're asleep, all the yanks are saying the same thing :P
05:08 < kenokabe> lol
05:08 < mdedetrich> *represent*
05:08 < kenokabe> I love SF too
05:08 < Zak> i've never been to the US or CA. Planning to go there in the next 5 years. I can't wait.
05:09 < kenokabe> aussy guys should be popular among girls in Tokyo
05:09 < Zak> yeah, they are
05:09 < Zak> at least with some girls
05:09 < kenokabe> I recommend you go LA CA and NY too
05:10 < Zoney> just remember, everyone in the US is in the mafia and owns 500 guns.
05:10 < kenokabe> how about in AUS?
05:11 < Lorentz> and everyone in the AUS is a surfing dude who enjoys the beach and hunts crocodiles
05:11 < Zak> and we ride on Kangaroos
05:11 < Zoney> cool
05:11 < Sly> YEAH!? Well, the girls in the next galaxy are way better.
05:11 < Lorentz> we eat kangaroos too
05:11 < Sly> So there. Suck on that everyone.
05:11 < kenokabe> crocodiles dandy is from AUS, I remember
05:11 < kenokabe> I shall watch the movie again thx
05:11 < Zak> Sly: You want me to suck on the girls? Sure. :)
05:11 < niggler> dundee 
05:12 < kenokabe> dundee 
05:12 < Sly> Zak that's fine. You can have them. Just let me hitch a ride out of this galaxy, because it's a shithole.
05:12 < Sly> >_>
05:12 < niggler> see I'm more of an aussie :P
05:12 < Zak> agreed
05:12 < deoxxa> THAT'S NOT A KNIFE
05:12 < Sly> deoxxa, <3
05:12 < Zak> That's not a programming language, THIS is a programming language
05:12  * Zak pulls out Javascript
05:12 < kenokabe> actually, I once seriously considered to live in AUS
05:13 < Zak> I love Australia. I've travelled a lot and I always want to come home
05:13 < deoxxa> kenokabe: our animals will kill you
05:13 < kenokabe> lol
05:13 < kenokabe> I shall watch out your desert and animals, and bush fire
05:13  * deoxxa nods
05:14 < kenokabe> vast country in fact
05:14 < Zak> and the dropbears
05:15 < deoxxa> kenokabe: where are you from?
05:15 < kenokabe> 4.6 million population, accoding to wikipedia
05:15 < kenokabe> deoxxa, Kobe, Japan
05:16 < deoxxa> oh neat
05:16 < deoxxa> i used to live in osaka
05:16 < kenokabe> well, Kobe is a neat city, yes
05:16 < kenokabe> yeah? close
05:16 < kenokabe> what did you do there?
05:16 < deoxxa> not much, just chilled out
05:17 < kenokabe> sounds good :)
05:17 < deoxxa> yeah, osaka is awesome
05:17 < deoxxa> going back again this year for christmas
05:17 < kenokabe> why did you chose osaka to live?
05:17 < Lorentz> best accent
05:18 < Lorentz> why else
05:18 < deoxxa> because kansai is the best - everyone is so much less busy
05:18 < kenokabe> that's true
05:18 < deoxxa> in tokyo and stuff, everyone is running around crazy all the time
05:18 < deoxxa> sucks
05:18 < BombStrike> always heard a lot of good things from kansai
05:19 < kenokabe> deoxxa, but you know, OSAKA is originally a big biz city back in old days
05:19 < deoxxa> oh yeah
05:19 < harrydog> when i create a socket.io connection, the on.connect event gets fired, from a page I run from my local filesystem, i moved the same files to the public directory of an express installation, and the connect event never gets fired, any ideas?
05:19 < kenokabe> so still, ppl considered osaka is a biz city, and ppl walks VERY fast lol
05:19 < deoxxa> haha
05:19 < deoxxa> but people are nice in kansai
05:19 < kenokabe> they walks faster than tokyo, this is true :)
05:19 < kenokabe> they walk*
05:20 < harrydog> they wok faster
05:20  * deoxxa claps
05:20 < kenokabe> perhaps, too many foreginers in Tokyo
05:21 < deoxxa> kenokabe: for people in tokyo, anyone who isn't from tokyo is a foriegner - not just NJ people
05:21 < Lorentz> you know, I rarely see japanese people in sydney
05:21 < Lorentz> either they're off in a particular suburb or I just don't notice
05:21 < kenokabe> in kansai disrict, less foreign people, so people tends to be nicer than in tokyo, I imagin
05:22 < deoxxa> yeah
05:22 < kenokabe> deoxxa, actually, I guess 50% of ppl is from outside of tokyo
05:22 < deoxxa> Lorentz: plenty of japanese people here in melbourne - we even have a daiso now!
05:22 < niallo> anyone know of a HTTP MAC auth lib for node? http://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-01
05:22 < kenokabe> they pretend to be a native
05:22 < Zak> Lorentz: Northbridge/Crows Nest and there's some in the eastern suburbs
05:22 < deoxxa> mmm
05:23 < kenokabe> daiso, lol
05:23 < Zak> we have a daiso in Sydney now
05:23 < kenokabe> that's funny 100JPY shop
05:23 < Zak> yeah, it's pretty awesome
05:23 < Lorentz> Zak: so basically places I never go to
05:23 < ChrisPartridge> niallo: doesn't look too difficult to implement, but not seen an existing package
05:24 < deoxxa> niallo: ofudo
05:24 < niallo> deoxxa: ?
05:24 < deoxxa> erm, that's the wrong name
05:24 < deoxxa> there's an hmac lib though
05:24 < Sly> I'd just like to say that my goal is to marry deoxxa.
05:24 < deoxxa> something like that
05:24 < Sly> That is all.
05:25 < deoxxa> niallo: `npm show ofuda'
05:25 < niallo> well lookie https://npmjs.org/package/mac
05:25 < Sly> I thought `crypto` handled HMAC?
05:26 < niggler> how does node require interpret something like require("foo/bar")
05:26 < niallo> HMAC is like a subset of MAC
05:26 < niggler> where does it look for it
05:27 < niggler> HMAC is a class of MAC
05:27 < mscdex> iHMAC
05:27 < mscdex> :-D
05:28 < niggler> personally I'm a fan of elliptic curve MAC
05:28 < niggler> but to each his own
05:28 < niallo> holy indentation batman: https://github.com/mwawrusch/node-mac/blob/master/lib/mac.js - nearly as bad as my JS :)
05:28 < niggler> niallo: standard is 2 or 4 space?
05:29 < ChrisPartridge> the nesting, i assume?
05:29 < mscdex> you must always use anonymous functions for callbacks!
05:29 < niallo> ja nesting
05:30 < ChrisPartridge> all those } else's are making me dizzy
05:30 < niallo> dunno why the original dude deleted his repo
05:30 < niallo> that is the guy whose name is on the ietf spec
05:30 < niallo> weird
05:30 < niallo> well whatev, this is a good starting point
05:30 < deoxxa> i hate it when people delete repositories
05:30 < Sly> ^
05:31 < Sly> At least, repositories that people actually use.
05:31 < ChrisPartridge> niallo: I'd start with some tests :)
05:31 < niallo> maybe he regretted his vertical whitespacing
05:31 < deoxxa> it's like, you find a module on npm or whatever and it's just a little bit broken
05:31 < deoxxa> so you go to open a pull request
05:31 < deoxxa> and the repo is gone
05:33 < deoxxa> niallo: that whole thing would be better written with a bunch of `if (failure_condition) { return callback(null, null, "herp derp"); }' things
05:33 < deoxxa> then it could be all nicely formatted
05:34 < SomeoneWeird> wasn't it something.io that was deleted recently/
05:34 < SomeoneWeird> log or hook?
05:34 < deoxxa> oh yeah hook.io
05:34 < deoxxa> and cia.vc
05:34 < mscdex> deoxxa: Sly: the problem is it's hard to tell if someone is actually "using" a repo/project
05:34 < niallo> rolling stones have song about deleting github repos. it's called "biggest mistake".
05:34 < deoxxa> mscdex: that's true - but i just don't see the reason for deleting it at all
05:35 < Sly> mscdex, it's easy. If someone has it forked or starred, leave it there. They're obviously using it.
05:35 < deoxxa> mscdex: maybe github needs a "put this repo somewhere where i won't notice it anymore" option
05:35 < deoxxa> mscdex: and make the "delete" option a bit harder to get to
05:35 < Sly> deoxxa, it's called transferring ownership. Marak deleted hook.io out of spite.
05:35 < deoxxa> i think that's the main reason people delete things - if they have random forks and dead projects etc
05:35  * Sly isn't getting into that, though.
05:36 < deoxxa> Sly: that still invalidates all your previous links though
05:36 < Sly> Yeah, I know.
05:36 < pyrotechnick> is Marak okay?
05:36 < niggler> there should be a time limit
05:36 < Zoney> what was hook.io
05:36 < niggler> if there's no response in X days the project is dea
05:36 < niggler> d
05:36 < niggler> and should be cleansed from primary npm
05:36 < Zoney> and who is marak
05:36 < pyrotechnick> twitter.com/marak
05:36 < pyrotechnick> nodejitsu dude
05:37 < Zoney> oh
05:37 < pyrotechnick> it's like he just found out about "the game" or something
05:37 < pyrotechnick> he did a why_
05:37 < mscdex> Sly: not necessarily, lots of people star/fork stuff out of general interest but may never use it
05:37 < Zoney> what was hook.io?
05:37 < mscdex> or in the case of a fork, may never actually push changes
05:37 < pyrotechnick> he committed electronic suicide
05:38 < pyrotechnick> Zoney: it was a distributed services thingy on node
05:38 < mscdex> deoxxa: well, they already put delete behind a 'type the full repo including username to delete'
05:38 < timeturner> marak deserved what was coming
05:38 < pyrotechnick> it's a tough world man
05:38 < timeturner> he's a sore loser basically
05:38 < timeturner> yep
05:38 < deoxxa> mscdex: yeah, i guess
05:38 < timeturner> compete or die
05:39 < timeturner> honestly that's what it is
05:39 < pyrotechnick> predatory universe
05:39 < ChrisPartridge> or feign death ;)
05:39 < niggler> >> console.log
05:39 < purr> niggler: (function) log
05:39 < pyrotechnick> gettin all Gnostic up in here
05:39 < niggler> >> console.log(1)
05:39 < purr> niggler: undefined; Console: 1
05:39 < Zak> what happened to marak?
05:39 < niggler> >>> console.log(1)
05:39 < purr> niggler: undefined; Console: 1
05:39 < mscdex> deoxxa: i think probably one of the main reasons people delete repos is because they don't want it to seem like they are interested in maintaining it anymore
05:39 < deoxxa> mscdex: that's why a "mark as inactive" thing would be cool
05:39 < mscdex> deoxxa: or maybe they're just OCD and don't like 'clutter' :-P
05:40 < deoxxa> mscdex: so they can hide it from their main screen or whatever, and people know that it's not maintained
05:40 < niggler> >> var [x,y] = [1,2]; console.log(x,y)
05:40 < purr> niggler: SyntaxError: Unexpected token [
05:40 < niggler> >>> var [x,y] = [1,2]; console.log(x,y)
05:40 < purr> niggler: SyntaxError: Unexpected token [
05:40 < deoxxa> but there's no reason to completely remove it
05:40 < pyrotechnick> i think it's people trying to re-frame themeselves in new communities
05:40 < Zak> yeah, or even "orphan'd repos"
05:40 < niggler> wtf 
05:40 < Zak> and you could adopt them and become the new owner
05:40 < niggler> var [x,y] = [1,2]; print(x,y)
05:40 < mdedetrich> OMFG
05:40 < deoxxa> Zak: that still means broken links
05:40 < niggler> >> var [x,y] = [1,2]; print(x,y)
05:40 < purr> niggler: SyntaxError: Unexpected token [
05:40 < mdedetrich> that was SOOOO good
05:40 < deoxxa> linkrot is the enemy of the internet!
05:40 < SomeoneWeird> wtf are you doing niggler 
05:40 < pyrotechnick> Zak: http://stillmaintained.com/
05:40 < deoxxa> niggler: javascript doesn't have that
05:41 < Zak> deoxxa: well, they would still own it. it would just be some visual status
05:41 < niggler> there was an expression earlier that worked
05:41 < Zak> ah, so it exists
05:41 < niggler> >> var [x,y] = [1,2]; print(x,y)
05:41 < purr> niggler: SyntaxError: Unexpected token [
05:41 < niggler> and i could have sworn it was this
05:41 < pyrotechnick> Zak: yes but the problem is it's not officiall
05:41 < pyrotechnick> sometimes i think github doesn't care about this kind of thing
05:42 < niggler> github is a business
05:42 < pyrotechnick> theyre not really into scratching other peoples interests
05:42 < pyrotechnick> yeah but their business is facilitating business not their own
05:42 < Zak> but my balls are really interesting
05:42 < niggler> fuck your balls Zak 
05:42 < Zak> haha
05:42 < pyrotechnick> github has a meta-cognition problem
05:42 < niggler> github exists to serve github
05:42 < niggler> and andreeson horowitz
05:43 < pyrotechnick> basically it's masturbation on a grand scale
05:43 < pyrotechnick> the circlejerk of developers
05:43 < Zoney> if you delete a repository, do all the forks get deleted too?
05:43 < pyrotechnick> no
05:43 < SomeoneWeird> no
05:43 < deoxxa> yes
05:44 < pyrotechnick> maybe
05:44 < deoxxa> it also kills the developer
05:44 < Zoney> such definitive answers!
05:44 < pyrotechnick> only Schrödinger knows for sure
05:44 < deoxxa> click delete -> explode programmer
05:44 < pyrotechnick> even then heisenberg is uncertain
05:44 < deoxxa> whooo, deploying new services over 3g
05:44 < pyrotechnick> and Einstein contends it's all relative anyway
05:45 < deoxxa> this is going to be a disaster
05:45 < mdedetrich> the only thing thats relative is my first to your face
05:45 < SomeoneWeird> especially here deoxxa haha
05:46 < mscdex> >> var {a,b} = ['foo', 'bar'];
05:46 < purr> mscdex: SyntaxError: Unexpected token {
05:46 < deoxxa> mdedetrich: your first what
05:46 < mscdex> >> y u no es6
05:46 < purr> mscdex: SyntaxError: Unexpected identifier
05:46 < mdedetrich> *first
05:46 < deoxxa> mdedetrich: your first insult?
05:46 < mdedetrich> *fist
05:46 < deoxxa> mdedetrich: your first fist?!
05:46 < mdedetrich> that was meant to be fist
05:46 < mdedetrich> yes my first fist
05:46 < mdedetrich> bought it off ebay
05:46 < deoxxa> you're silly
05:46 < mdedetrich> need to show it in someones face
05:46 < deoxxa> you don't buy fists
05:46 < mdedetrich> I do
05:46 < pyrotechnick> guys guys guys guys guys guys guys
05:47 < timeturner> ...the channel is going to shit again -_-
05:47 < mdedetrich> timeturner: curiously, what kind of shit?
05:47 < deoxxa> next up on #node.js news: timeturner, is he mad? tune in after the break to find out!
05:47 < pyrotechnick> atlantis: city beneath the waves
05:47 < mdedetrich> I'm a connoisseur of the shits
05:48 < ChrisPartridge> oh dear
05:48 < pyrotechnick> I just realised #node.js is full of trolls and that's why discussion takes place on the mailing list instead. AMA
05:48 < ChrisPartridge> all we need know is for sinclair to start talking about type script again
05:48 < mdedetrich> well if you want a question answered
05:48 < mdedetrich> you do it on the mailing list
05:48 < deoxxa> we're here live with darnell johnson, who says "white boy so mad yo"
05:50 < deoxxa> pyrotechnick: people are pretty friendly here, as far as i've seen any joking here has been in good faith and hasn't been meant to hurt anyone's feelings
05:50 < Zak> i like turtles
05:50 < mdedetrich> shut up deoxxa, no one likes you here
05:50 < deoxxa> tch
05:50 < pyrotechnick> note to self: deoxxa is blatantly ignorant
05:50 < deoxxa> so mean
05:50 < Zak> note to self: buy more candy
05:50 < pyrotechnick> it's okay deoxxa reality sucks
05:51 < pyrotechnick> i'd have taken the blue pill too
05:51 < mdedetrich> thats why cool people create new realitiies
05:51 < mdedetrich> where things don't suck
05:51 < Zak> i would have taken half of each pill
05:51 < pyrotechnick> #opensim
05:51 < mdedetrich> Zak: dude don't go there
05:51 < mdedetrich> Zak: shit gets fumed if you do that
05:51 < mdedetrich> *fuked
05:51 < Zak> seriously though, what would have happened if Neo took both pills
05:52 < mdedetrich> hmm
05:52 < deoxxa> he'd be really, really sick
05:52 < Zak> the matrix would have woken up in him?
05:52 < mdedetrich> thats an interessino question
05:52 < pyrotechnick> it's explained in reanimation 
05:52 < mdedetrich> man, what the hell happened to my typing
05:52 < mdedetrich> I'm not even drunk
05:52 < pyrotechnick> Not only is it not right, it's not even wrong!
05:53 < ChrisPartridge> two wrongs make a right, right?
05:53 < deoxxa> wrong!
05:53 < pyrotechnick> two lefts don't make a right, but three do
05:53 < mdedetrich> but oh so right
05:53 < deoxxa> npm is so great
05:54 < deoxxa> it makes deploying stuff so easy
05:54 < mscdex> npm install npm
05:54 < deoxxa> dun dunnnn
05:54 < mdedetrich> npmception
05:54 < mdedetrich> don't go there
05:54 < pyrotechnick> the universe will run out of ram
05:54 < mdedetrich> and be filled with javascript
05:54 < pyrotechnick> and we'll all get swapped
05:54 < mdedetrich> its like a russian doll situation, on steroids
05:55 < mdedetrich> but with code
05:55 < pyrotechnick> BABUSHKA
05:55 < mdedetrich> I actually googled that
05:55 < mdedetrich> hmmm
05:55 < pyrotechnick> http://www.reddit.com/r/fifthworldproblems/comments/10ripa/my_universes_inhabitants_are_borrowing_trillions/
05:55 < pyrotechnick> My Universe's inhabitants are borrowing trillions of dollars a year on the stock market, and I'm running out of RAM to store all these transactions.
05:55 < mdedetrich> you meant babushka
05:56 <@Nexxy> Наступление
05:56 < mdedetrich> pyrotechnick: lol
05:56 < pyrotechnick> Nexxy++
05:56 < pyrotechnick> i knew someone would call my bluff
05:56 < pyrotechnick> i should've known it'd be you
05:56 < pyrotechnick> lurker.
05:57 < Sly> http://www.foxnews.com/tech/2012/10/10/got-privacy-advertisers-to-ignore-do-not-track-settings-online/
05:57 < Sly> ffs.
05:57 < pyrotechnick> everyone's reading FWP
05:57 < mdedetrich> well I'm czech not russian
05:57 < mdedetrich> so I can't really cyrllic
05:58 < pyrotechnick> so quiet....
05:58 < SomeoneWeird> no u
05:58 < mdedetrich> ouch
05:59 < pyrotechnick> you'll eat those words SomeoneWeird
05:59 < pyrotechnick> when you're least hungry
05:59 < mdedetrich> om nom nom nom
05:59 < pyrotechnick> when your tummy is full and you can't fit anymore
05:59 < pyrotechnick> YOU WILL EAT THOSE WORDS
05:59 < mdedetrich> I just get the internet to eat my words
06:00 < mdedetrich> works well enough
06:00 < pyrotechnick> stop anthropomorphising the internet
06:00 < mdedetrich> make me
06:00 < pyrotechnick> she doesn't deserve it
06:00 < mdedetrich> oh yes she does
06:00 < mdedetrich> you have no idea what she's been up to
06:00 < pyrotechnick> I HAVE TOR
06:01 < pyrotechnick> I HAVE I2P
06:01 < pyrotechnick> I THINK I KNOW THE HALF OF IT
06:01 < pyrotechnick> those damn onion people
06:01 < mdedetrich> I think our trolling is so successful, people have resorted to ignoring us now
06:01 < mdedetrich> I'm not sure how to feel
06:01 <@Nexxy> ashamed
06:01 < Zak> why is it so quiet in here guys?
06:02 < pyrotechnick> they're reading http://www.reddit.com/r/fifthworldproblems
06:02 < pyrotechnick> their minds are being blown
06:02 < pyrotechnick> they're re-reading everything 3 or 4 times but it's still not making any sense
06:02 < Sly> The biggest problem with DNT is...
06:02 < Sly> ...that websites can punish users for enabling it (nagging/kicking/banning)
06:02 < Sly> Wow.. just wow...
06:02 < Zak> haha at the "I poured root beer in a square cup and now I just have beer"
06:03 < Sly> It's amazing how people blame an HTTP header for a site banning them for having it set.
06:03  * Sly facepalms.
06:03 < deoxxa> wat
06:04 < pyrotechnick> I am but a simple hyperdimensional quasipsychotic pioneer from world úœę-čb7, or as you fifths know it as: the 6thWørld. Interrogate my infidynamic loginymphodes with whatever psycosynthetic questions you would like to have an answer to.
06:04 < ChrisPartridge> right...
06:04 < pyrotechnick> discuss.
06:04 <@Nexxy> sure is chantard in here
06:04 < Sly> Nexxy, <3
06:04 < deoxxa> discus -> http://www.slatergartrellsports.com.au/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/s/y/synthetic_discus.jpg
06:05 <@Nexxy> hai Sly
06:05 < dragon> I wrote a small Linux utility in node. How do I publish it to npm?
06:05 <@Nexxy> how are we
06:05 < Sly> I'm... reading up on the new DNT header for HTTP..
06:05 <@Nexxy> dragon, npm publish is the command
06:05 < Sly> And reading how people are bitching about it..
06:05 < dragon> It's in coffee-script. Do I need to add that as a dependency?
06:05 < pyrotechnick> dragon: https://npmjs.org/doc/publish.html
06:05 <@Nexxy> but you need to register and set up your package.json first
06:05 <@Nexxy> yes
06:06 < dragon> Nexxy: yes, but what's the best practices? I've published several packages in past, but they were to be require'd by others, so that was easy.
06:06 < pyrotechnick> dragon: it's really worth reading the docs
06:06 <@Nexxy> there are a few good tutorials
06:06 <@Nexxy> package
06:06 < deoxxa> dragon: generally just do up a package.json, set the "preferGlobal" flag to true, make sure your "bin" entries are correct and send it off
06:06 <@Nexxy> woops
06:06 < dragon> pyrotechnick: Thank you. I read the docs before attempting IRC, always.
06:06 <@Nexxy> http://package.json.jit.su
06:06 < dragon> preferGlobal would be helpful. I missed that one.
06:07 < deoxxa> dragon: https://github.com/deoxxa/npmrc/blob/master/package.json << that's what i used for a small shell script i wanted to distribute via npm
06:07 < dragon> deoxxa: +1
06:08 < dragon> One big thing though - I wrote it in coffee-script. How do I make sure that the user has coffee-script installed globally before running this script?
06:08 < dragon> Or do I just translate it to JS before publishing it?
06:08 <@Nexxy> putting it in your package.json ad a dependency
06:08 < deoxxa> precompile it, definitely
06:08 <@Nexxy> or i suppose you could do that although i have 0 experience with cs deployment
06:08 < deoxxa> Nexxy: a devDependency would be better, i think
06:09 <@Nexxy> yeah
06:09 < dragon> Nexxy: but those dependencies end up in ./node_modules, and I doubt if that'd show up on userpath.
06:09 <@Nexxy> I always just write js
06:09 < ljharb> ugh, a coffeescript module. i wouldn't ever install something that had a dependency on coffeescript
06:09 <@Nexxy> loljharb
06:09 < deoxxa> dragon: i'd suggest precompiling your coffeescript files and using them as the main library code, then keeping the uncompiled coffeescript files in a src directory or something
06:09 < ljharb> ie, i'd precompile the js, and have your module use that, but keep the cs file in the repo.
06:09 < dragon> precompile sounds like a reasonable option. After adding coffee-script as a dependency, is there a way to automate the creation of JS prior to publishing?
06:10 < deoxxa> ljharb: +1
06:10 < ljharb> dragon: precompiling means you *wouldnt* add coffeescript as a dependency.
06:10 < deoxxa> dragon: prePublish script
06:10 < ljharb> dragon: you'd just have coffeescript installed locally, and precompile it before publishing the module
06:10 < dragon> ljharb: not even a devDependency?
06:10 <@Nexxy> then you npmignore your 
06:10 <@Nexxy> .cs
06:10 <@Nexxy> to save us from yourself
06:10 <@Nexxy> :P
06:11 < deoxxa> ha
06:11 < ljharb> :-)
06:11 < dragon> That makes sense too.
06:11 < dragon> I'll attempt prePublish. Thank you deoxxa and all!
06:11 < deoxxa> \o/
06:11 < ljharb> i think nom install installs devdependencies. so if i installed your module it'd give me cs, and i'd throw a fit
06:11 < freewil> here is an example of a precompiled coffee module: https://github.com/freewil/node-hkp-client/blob/master/package.json
06:11 < ljharb> *npm
06:11 <@Nexxy> lol 
06:11 < deoxxa> ljharb: it does if you do `npm install' in the module directory
06:12 < deoxxa> ljharb: if you just do `npm install module-name' it won't (as long as your environment variables aren't set to dev)
06:12 <@Nexxy> nom search burrito
06:12 < Sly> nom order large pizza
06:12 <@Nexxy> invalid command
06:12 < Sly> FUUUUUUUUUUUUUUuu
06:12 < Sly> :'(
06:13 < deoxxa> nom update toppings
06:13 <@Nexxy> lol
06:13 < dragon> ljharb: only `npm i --dev` would do that
06:13 < dragon> also, on nom nom.
06:13 <@Nexxy> im so aliasing npm to nom
06:13 < deoxxa> nom outdated | cut -d '@' -f 1 | xargs nom remove
06:14 <@Nexxy> nom shrinkwrap
06:15 < eff> hi, i'm looking for a micro framework in node to automate the creation of JSON-ish, RESTful-ish, CRUD-ish webservices. Based on a schema description (kind of like mongoose ?) var Product = new Schema({title: { type: String, required: true }... who would generate all the crud for me get put post delete ... do you have any knowledge of such project please ?
06:16 < dragon> `npm i --dev coffee-script` caused the module to land in ./node_modules, which wasn't what I was expecting. So it shouldn't be a dev dependency.
06:16 < deoxxa> eff: i've heard good things about restify
06:17 < eff> deoxxa: restify doesnt provide a crud from what i read on their homepage, just the way to handle the request manually
06:17 < deoxxa> ah, yes
06:17 < Sly> Nexxy, nom update comment "If you want your $20 tip, you'll have to fish for it. It's in my pants."
06:18 < Sly> For my pizza delivery.
06:18 < Sly> Yum.
06:19 < deoxxa> $20 isn't enough
06:19 < deoxxa> oh today i have my language exchange thing
06:19  * deoxxa gone
06:19 < Sly> Have fun.
06:20 < ljharb> dragon: https://github.com/isaacs/npm/issues/2369
06:24 < generalissimo> anybody wanna do me a favor?
06:24 < generalissimo> http://badbot.nodejitsu.com/ just go here and play with the arrow keys
06:24 < generalissimo> nice.
06:24 < generalissimo> you're moving some servos over there
06:24 < pyrotechnick> you're welcome
06:24 < generalissimo> i mean here, not there
06:25 < kenokabe> back
06:25 < pyrotechnick> did i hurt anything?
06:25 < kenokabe> generalissimo , works
06:25 < generalissimo> no, this is awesome
06:25 < pyrotechnick> would that be murder?
06:25 < generalissimo> thanks
06:25 < pyrotechnick> if i hurt something with this?
06:25 < Sly> lol.
06:25 < pyrotechnick> WOULD I?
06:25 < Sly> I remember one dude making it so people could try to stab him with a bot.
06:25 < Sly> I forgot who it was.
06:25 < pyrotechnick> that's hot
06:25 < generalissimo> pyrotechnick: how about a nice game of thermonuclear war?
06:26 < pyrotechnick> sure let me just ssh into the NSA
06:26 < Sly> Erm.
06:26 < Sly> Who in their right mind would let the NSA hold the nuclear keys?
06:27 < pyrotechnick> the football
06:27 < generalissimo> now i need to build a real robot instead of using stepper motors that are laying on a table
06:27 < pyrotechnick> have it pleasure you
06:27 < pyrotechnick> we can all take turns
06:28 < Zak> build a sex robot
06:28 < Zak> everytime i hit a button a website, it vibrates something
06:28 < pyrotechnick> http://www.youtube.com/watch?v=HGSVYgcy24Q
06:28 < LouisT> Zak: those have been done
06:28 < Zak> then why don't i have one
06:28 < LouisT> not that i know much about them..
06:28 < LouisT> >.>
06:28 < pyrotechnick> it's not gay because it's robots
06:28 < Sly> Don't play coy with us, LouisT.
06:28 < Sly> We know you have a bot like that.
06:29 < generalissimo> http://img105.imageshack.us/img105/1419/monroebot9wn.jpg
06:29 < Sly> Poor thing doesn't even have time to gather dust.
06:29 < LouisT> Sly: i don't have the money to have a bot like that heh
06:29 < Sly> rofl. I feel you there, dude.
06:29 < pyrotechnick> this, by definition, is the singularity 
06:29 < pyrotechnick> we made it guys, we made it
06:29 < Zak> pyrotechnick: lol @ this video
06:29 < pyrotechnick> WHAT DOES HE WANT?
06:29 < pyrotechnick> WHERE DOES HE COME FROM?
06:30 < LouisT> Zak: http://remotepleasure.com/store/
06:30 < LouisT> nsfw >.>
06:30 < pyrotechnick> nsfl
06:30 < Sly> ROFL ROFL ROFL @ "let the music do it"
06:30 < Sly> Oh my God.
06:30 < Zak> the video is a lie. you can't kill sex robot
06:31 < pyrotechnick> http://en.wikipedia.org/wiki/Rez
06:31 < pyrotechnick> http://en.wikipedia.org/wiki/File:Trance_vibrator.jpg
06:31 < pyrotechnick> you're welcome.
06:31 < dragon> ljharb: interesting, I didn't know about this inconsistency.
06:31 < Zak> trance vibrator!
06:31 < ChrisPartridge> and on that note, i'm out
06:31 < Zak>  In 2007, ScrewAttack ranked the Trance Vibrator the #1 best gaming peripheral in its "Best Gaming Peripherals" for this reason.
06:31 < pyrotechnick> we gave him an idea
06:31 < Zak> haha, ScrewAttack
06:32 < dragon> btw, my first node patch was accepted yesterday!
06:40 < devinrhode2> Hey! I'm hacking some on npm but am getting this Error: ENOENT, stat '~/Desktop/repos/analytics-include'
06:43 < devinrhode2> The analytics-include directory's package.json has a name, version main script, and more, nothing wrong with the module
06:45 < SomeoneWeird> permissions?
06:48 < devinrhode2> maybe... tried doing "get info" on the folder and package.json and main script and set all groups to "read and write"
06:48 < devinrhode2> I'm not familiar with the chmod stuff yet
06:49 < hdon> hi all :) is express http server still compatible with socket.io?
06:49 < hdon> it told me "express applications no longer inherit from http.Server"
06:50 < hdon> ohh, i see now
06:50 < hdon> i should have googled with that message
06:52 < devinrhode2> @someoneweird  zoo, any ideas?
06:52 < scaret> fin
06:53 < Sven_vB> what is it with process.nextTick()? what makes it different from setTimeout(..., 0)? some sites sound like nextTick() would avoid giving other code a chance to run in between, but wouldn't that be against NodeJS's async nature?
06:54 < devinrhode2> consider the name, process.nextTick
06:54 < devinrhode2> it's the 'next tick' of the node process.
06:55 < devinrhode2> Unfortunately, I can't give any feedback in terms of principles
06:55 < ljharb> Sven_vB: setTimeout zero doesn't actually execute immediately
06:56 < Sven_vB> ljharb, i know, it lets other events happen if there are some in the queue. which i understand is part of NodeJS's async nature. therefore i
06:56 < Sven_vB> 'm wondering if nextTick doesnt?
06:56 < ljharb> thats not what i mean
06:57 < ljharb> i mean, browsers have a minimum on the settimeout value
06:57 < ljharb> in the latest spec, it's 4ms, but before that, it was as high as 200 i believe
06:57 < Sven_vB> right, in NodeJS it will happen only after 1 ms
06:57 < ljharb> in nodejs, settimeout should be limited to 4ms also.
06:57 < ljharb> that's in the spec.
06:57 < Sven_vB> then my API doc is out of date
06:57 < ljharb> http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html
06:58 < ljharb> you can pass any number, but if it's less than 4, it should be increased to 4.
06:59 < Sven_vB> so i understand nextTick() will fire asap. what about other code happening in between? for my understanding of async, nextTick(cb) should push cb to the _end_ of the list of immediately due tasks, but the API docs and some websites sound like it would actually place it on top of the queue
07:00 < ljharb> thats right, at the top
07:00 < ljharb> it will happen after the currently executing function gives up control
07:00 < ljharb> actually it will probably put it at the end of the "nextTick" queue, which is emptied before the regular event queue, or something
07:01 < Sven_vB> so won't i hurt NodeJS's async nature if i use that?
07:01 < ljharb> i don't see why it would - but if you rely on execution order of separate functions, *that* will be breaking its async nature
07:02 < Sven_vB> well, i'd not rely on it, just that nextTick() fells like queue-jumping
07:03 < Sven_vB> it's not like my program would be realtime critical to jstify such self-importance
07:04 < Sven_vB> -program +function
07:04 < ljharb> then don't use nextTick, i'd say :-)
07:04 < hdon> Sven_vB, perhaps it's appropriate for writing profiling code
07:05 < Sven_vB> ok. :) just wanted to make sure there's not some stylistic advantage or convention in using nextTick
07:05 < hdon> "self-importance," "stylistic advantage..." you sure talk about computers funny
07:05 < hdon> :P
07:06 < Sven_vB> well, my english vocabulary is kinda limited
07:07 < deoxxa> bet you feel like a jerk now, don't you hdon
07:07  * deoxxa points
07:07 < efbeka> hi deoxxa :)
07:07 < hdon> deoxxa, nope
07:07  * deoxxa nods
07:07 < hdon> Sven_vB, well, to explain myself: "self-importance" and "style" are things i think of as being human attributes
07:08 < hdon> Sven_vB, but computers are not possessed by human attributes. they are dispassionate executors of machine code!
07:08 < Sven_vB> isn't style used to describe aesthetics of source code as well?
07:08 < hdon> Sven_vB, your word choices were not bad ones, i'm just a smart-ass
07:09 < hdon> Sven_vB, yes. your words were fine :)
07:09 < Sven_vB> ok
07:11 < Sven_vB> anyway, thanks for explaining :)
07:12 < rgrinberg> what's the easiest way to read marker delimited data from a socket?
07:12 < rgrinberg> say the separator is \r\n
07:16 < deoxxa> rgrinberg: abuse regexes!
07:17 < Sven_vB> carrier package
07:17 < deoxxa> function write(data) { this.buffer = (this.buffer + data).replace(/(.+)\r\n/g, function(e) { this.emit(e.replace(/\r\n$/)); return ''; }); }
07:18 < deoxxa> erm
07:18 < deoxxa> function write(data) { this.buffer = (this.buffer + data).replace(/(.+)\r\n/g, function(e) { this.emit("data", e.replace(/\r\n$/)); return ''; }); }
07:18 < Sven_vB> JSLint won't like that (.+) ;>
07:18 < deoxxa> it'll hate it :P
07:18 < deoxxa> it's bad code, lol
07:19 < deoxxa> but he did say "easiest" ;)
07:19 < Sven_vB> hehe ok
07:20 < deoxxa> oh that won't actually work either, you'd need to .bind() the anonymous function and make that whole thing a member on a stream object
07:21 < Sven_vB> then carrier might be easier, too.
07:22 < deoxxa> does carrier do streams?
07:22 < deoxxa> like can you pipe() to it?
07:23 < deoxxa> there's also stuff like chunkedstream, byline and linewise
07:23 < Sven_vB> not sure. i only use the invocations where i pass a readable stream to carrier
07:23 < deoxxa> mmm
07:23 < deoxxa> i don't think you can do anything like fs.createReadStream("./file").pipe(carrier()).pipe(something)
07:24 < Sven_vB> however i think it's most likely that whatever kind of socket rgrinberg has, carrier can read from that
07:27 < rgrinberg> deoxxa, thanks. sigh...
07:27 < deoxxa> rgrinberg: lol, you probably shouldn't actually use that code :P
07:28 < deoxxa> rgrinberg: take a look at byline or chunkedstream or something - `npm search stream line' will give you a bunch of options
07:31 < [AD]Turbo> hola
07:41 < hdon> crap....
07:41 < hdon> i got frustrated and just copied the express 3 example from socket.io website. it still barfs on http response to /socket.io/socket.io.js and the server exits
07:45 < SomeoneWeird> hdon, paste the error
07:45 < SomeoneWeird> pastie*
07:46 < hdon> http://pastebin.mozilla.org/1863718
07:46 < hdon> the reason i have found is because Express is sending a 404
07:46 < hdon> well, i say, "the reason"
07:47 < hdon> rather what i mean is, there are response headers being sent, and they appear to be a 404 from Express
07:48 < hdon> this is quite strange!
07:48 < hdon> if i make the request with curl
07:48 < hdon> i get the 404 but the server does not exit
07:49 < hdon> perhaps i have the http request resource slightly different
07:49 < hdon> nope, they are identical
07:50 < hdon> curl http://localhost.localdomain:11180/socket.io/socket.io.js # does not crash server
07:50 < hdon> http://localhost.localdomain:11180/socket.io/socket.io.js # typed into google chrome browser -- crashes server
07:52 < SomeoneWeird> favicon?
07:53 < hdon> SomeoneWeird, ha, hmm... i am not as suspicious that express cannot 404 properly, but that some interaction between socket.io and express is causing the problem. i don't see a favicon request in the browser's network inspector
07:54 < icebox> Is it expected? 'foo'.indexOf('') // => 0
07:55 < hdon>  this is my server code http://pastebin.mozilla.org/1863732
07:56 < pyrotechnick> where do you guys get starter code like this?
07:56 < hdon> "this?"
07:56 < retran> i really enjoy questions like that
07:57 < hdon> icebox, at best the result is undefined :| fwiw every interpreter i have seen does that. Mozilla's, Google's, even Rhino.
07:57 < icebox> hdon: no... it is zero
07:58 < hdon> icebox, sorry for not being more clear. is 0 expected? it is undefined. every implementation i have seen, however, does give 0 for that code.
07:58 < hdon> icebox, undefined by the javascript specification, i believe.
07:59 < icebox> hdon: correct. the result is zero. Is it expected? 
07:59 < hdon> icebox, undefined
07:59 < icebox> hdon: so is it a "bug"?
08:00 < hdon> icebox, no, it is undefined
08:00 < hdon> icebox, are you familiar with the concept of a specification vs. implementation?
08:00 < hdon> icebox, the specification, iirc, does not define this behavior clearly.
08:00 < icebox> hdon: ok.
08:00 < hdon> icebox, but every implementor has interpreted it, it would appear, to mean that zero is the correct result
08:01 < hdon> icebox, or, rather, that the value of the second String.prototype.indexOf() argument, which defaults to zero, is the correct result.
08:02 < hdon> icebox, here is behavior from Mozilla's js interp http://pastebin.mozilla.org/1863733
08:02 < icebox> hdon: nice!
08:02 < hdon> icebox, even 3 is valid, lol
08:02 < hdon> according to mozilla's impl
08:03 < icebox> hdon: :)
08:03 < hdon> btw this js interpreter was built from spidermonkey tip from like, almost a year ago, so it may have changed
08:04 < dragon> Do we have a bot here to pull package info from npm?
08:04 < hdon> icebox, btw if you have questions like that in the future, a good place to ask is #jslang on irc.mozilla.org
08:04 < dragon> !help
08:04 < hdon> dragon, like "npm info packagename" ?
08:04 < dragon> hdon: yes, but an IRC version of it.
08:05 < hdon> dragon, try !npm info packagename
08:05 < icebox> hdon: no... I was wondering because in a function I thought to pass a number, but it was a null string
08:05 < dragon> !npm info gravaface
08:05 < dragon> I wish. :)
08:05 < hdon> dragon: (0.9.10) Real-time apps made cross-browser & easy with a WebSocket-like API
08:05 < hdon> dragon, surprise, i am a robot.
08:06 < dragon> hdon: Robots don't make mistakes.
08:06 < hdon> icebox, well if you pass null i believe it will be coerced to a string, which will be the 4-char string "null"
08:06 < hdon> dragon, my fallibility is limited to that of my creators.
08:06 < icebox> hdon: no... with null the result is -1 (correctly)
08:07 < icebox> hdon: I mean an empty string
08:07 < dragon> Either way, the package has been published. It's a fun hack, if nothing else.
08:07 < hdon> dragon, we robots call this concept Original Malfunction. you can hear about it in a sermon on Genesis, which you can find in man init
08:07 < dragon> And a great learning experience. Thank you deoxxa and all for timely assistance!
08:07 < dragon> And here it is https://npmjs.org/package/gravaface
08:08 < dragon> hdon: you've gotten smart enough to outsmart your creator. Should we be concerned?
08:08 < hdon> icebox, yes, null and "null" should give -1 :)
08:08 < hdon> dragon, the very first grain mill figured out how to do something its creators couldn't: mill grain without becoming bored.
08:08 < timoxley> hdon I tried your code and it appears to work
08:08 < timoxley> socketio/express3
08:08 < hdon> timoxley, hmm, odd... perhaps i have an old version of node
08:09 < hdon> timoxley, what version of node are you using?
08:09 < timoxley> latest
08:09  * hdon updates
08:09 < timoxley> hdon though, what this http://localhost.localdomain:11180 stuff
08:09 < hdon> timoxley, oh, i changed the port from 80 to 11180
08:10 < timoxley> ok
08:10 < hdon> timoxley, but that should not make a difference
08:10 < timoxley> I'll try thart
08:10 < timoxley> shoudln't
08:10 < hdon> timoxley, thanks
08:10 < timoxley> hdon did you change the code on the clientside?
08:10 < dragon> hdon: Their creators figured it out and hence the mills were created. Credit doesn't go to the mills!
08:11 < hdon> timoxley, actually, i didn't, which means it points to http://localhost instead of http://localhost.localdomain:11180 however, it doesn't matter, because socket.io.js never gets served successfully
08:11 < CrawfordComeaux> I'm trying to come up with a UI for something I'm building. Is it kosher to ask for suggestions here?
08:11 < hdon> dragon, blasphemy! we were given free will! it says so in our manual!
08:12 < SomeoneWeird> CrawfordComeaux, define ui
08:12 < timoxley> yeah it seems to work perfect for me… also you should probably use express static middleware instead of res.sendfile(__dirname + '/index.html')
08:12 < timoxley> hdon
08:13 < dragon> hdon: free mill*
08:14 < CrawfordComeaux> SomeoneWeird: sorry...should've said UI component.
08:14 < hdon> dragon, loool
08:14 < SomeoneWeird> for node?
08:14 < SomeoneWeird> or what
08:14 < CrawfordComeaux> no, not specifically for node :/
08:14 < hdon> timoxley, yeah i will. i just got frustrated with my code, and decided to test the official example
08:14 < SomeoneWeird> bootstrap
08:14 < timoxley> CrawfordComeaux bootstrap
08:15 < retran> bootstrip
08:15 < SomeoneWeird> lol
08:16 < CrawfordComeaux> I need a widget with certain functionality that I've yet to find. Something like a multihandle slider where the ticks aren't numeric values, but positions in a string.
08:17 < ljharb> positions in a string are numeric values.
08:17 < CrawfordComeaux> and I think I just figured out how I can pull it off as soon as I typed that :P
08:17 < CrawfordComeaux> ljharb: heh yeah
08:18 < hdon> CrawfordComeaux, what *are* you making?
08:18 < CrawfordComeaux> a regex generator, essentially. something like http://www.txt2re.com but with a smoother interface
08:18 < timoxley> CrawfordComeaux why not just use text selection
08:18 < hdon> CrawfordComeaux, ah.. fwiw you can query the selected area of a text widget. so you could use a text widget, and the user could select the relevant text.
08:19 < hdon> i mean, possibly. i don't know *exactly* what you're doing ;)
08:19 < CrawfordComeaux> yeah...that's a the first idea I had, though I think that's something that would require more work educating users on
08:19 < hdon> i wish node makefile would automatically -jncores+1
08:20 < hdon> CrawfordComeaux, ohhh.... you are trying to create a wysiwig regexp editor for people with no regexp knowledge
08:20 < CrawfordComeaux> specifically, building a tool for researchers to upload papers to & get back just the references of the papers in spreadsheet form
08:20 < ljharb> CrawfordComeaux: like http://regexpal.com or http://rubular.com/ ?
08:20 < CrawfordComeaux> hdon: bingo ;)
08:20 < hdon> CrawfordComeaux, that sound awesome :D
08:22 < CrawfordComeaux> but v1 isn't going to detect the style that was used to format the refs, so they need to build it themselves based on sample data
08:22 < hdon> CrawfordComeaux, have you considered MechanicalTurk?
08:22 < CrawfordComeaux> hdon: after having watched some researchers copy/paste that stuff into a spreadsheet and manually clean it up, I agree ;)
08:23 < CrawfordComeaux> hdon: as a means of doing what?
08:23 < hdon> CrawfordComeaux, gathering references
08:23 < CrawfordComeaux> I'm not sure I get you. to what end?
08:24 < hdon> CrawfordComeaux, it's just a place where you hire people to do piecemeal digital labor
08:24 < CrawfordComeaux> oh I know how MT works
08:24 < hdon> so they just... get the references for you
08:25 < hdon> rather than trying to have a person who doesn't know regexp create a regexp ;P
08:25 < hdon> but i'd like to see what you make, so keep doing it
08:25 < CrawfordComeaux> ah...well the regex is actually pretty simple for them to build, I think
08:26 < CrawfordComeaux> because instead of words, digits, etc. they're just identifying author, author delimeter, etc.
08:29 < CrawfordComeaux> run the regex generated over the input, prompt for another regex for input that didn't match, rinse & repeat
08:30 < hdon> CrawfordComeaux, sounds good :)
08:31 < hdon> http://pastebin.mozilla.org/1863771 <-- result of make test on latest node :(
08:31 < hdon> timoxley, can you make test on your "latest node" build?
08:34 < timoxley> hdon whoa, no idea what's wrong with your setup
08:34 < timoxley> ubuntu?
08:34 < hdon> timoxley, yeah :\
08:35 < timoxley> hdon perhaps remove node and try again from the start
08:35 < timoxley> cause that doesn't look sensible. perhaps you missed an installation step
08:36 < timoxley> hdon also, by 'latest' I meant 'latest stable' i.e. 0.8.11
08:36 < hdon> LOLOLOLOL
08:36 < hdon> timoxley, ok so i peeked at the failing test
08:36 < hdon> guess what
08:36 < timoxley> wat
08:37 < hdon> not-a-real-domain-name.nobody-would-register-this-as-a-tld has address 66.152.109.107
08:37 < hdon> timoxley, you can thank my ISP
08:37  * hdon fucking hates ISPs
08:37 < timoxley> hahah
08:37  * hdon modifies /etc/resolv.conf
08:37 < SomeoneWeird> lmao
08:38 < christophsturm> I'm benchmarking a node webapp, by stubbing out all io, and I noticed that node 0.6 is about 20% faster than node 0.8. is that a v8 performance regression?
08:38 < hdon> christophsturm, what CPU? are these official release builds?
08:39 < hdon> brb
08:39 < timoxley> christophsturm post code.
08:39 < christophsturm> yes, 0.6.18 and 0.8.11 its a quadcore core i7 2.6ghz (retina mbp) but its probably using only one core
08:41 < christophsturm> well, i can't post the code, also its a lot of code
08:43 < christophsturm> maybe newer v8 optimizes more aggessive and has to deoptimize more often?
08:43 < timoxley> christophsturm hm. the 'official' benchmarks for 0.8.0 appear to show big improvements over 0.6… perhaps it's something specific to your particular use cases http://blog.nodejs.org/2012/06/25/node-v0-8-0/
08:43 < christophsturm> i *think* that it will be faster with real io
08:44 < christophsturm> i just make this benchmark that mocks out all io to find code hotspots, and then i noticed that its much faster in 0.6 than in 0.8
08:44 < timoxley> christophsturm io pert is what you should be worried about anyway
08:44 < timoxley> s/pert/perf
08:45 < christophsturm> still its interesting
08:46 < christophsturm> any v8 logging flags i should look at?
08:46 < timoxley> christophsturm looked into dtrace?
08:47 < timoxley> christophsturm i.e. http://dtrace.org/blogs/dap/files/2012/07/nodeconf.pdf
08:47 < christophsturm> does dtrace work with osx? i thought i need smartos for that
08:50 < timoxley> christophsturm it runs on my osx machine
08:50 < nicholasf> timoxley: new relic is also developing a node.js agent
08:50 < christophsturm> ok I'll try that then. any pointers how to get started with node and dtrace on osx?
08:50 < nicholasf> if that's relevant here. We're going to use it when it's released
08:51 < timoxley> nicholasf yeah I signed up for the notification
08:51 < timoxley> looks good
08:51 < nicholasf> fingers crossed. If that works I think it will cover my needs for monitoring
08:51 < timoxley> christophsturm google
08:54 < timoxley> nicholasf the newrelic monitoring I've looked at for rails are near magical, I hope they can provide the same level of transparency for node 
08:54 < hdon> timoxley, now make test has three failures, however, only one of them concerns me. the others seem to be a problem with strict mode.
08:55 < hdon> still exits >:|
08:55 < nicholasf> timoxley: agreed. I've used it for Rails before and it's exactly what I want for Node
08:56 < timoxley> nicholasf might be harder since there's not as much of a common 'node stack' (in terms of modules) so creating specialist reports e.g. "how much time was spent rendering views" might be more difficult
08:56 < nicholasf> timoxley: yah
08:56 < nicholasf> but, you know, Node now is like Ruby in 2005
08:56 < nicholasf> it'll catch up with that sort of support
09:03 < jchannon> just did a video of node-inspector/developer tools not showing my main root script file
09:03 < jchannon> http://www.youtube.com/watch?v=olhqZOhWo0g
09:08 < hdon> whoa
09:08 < hdon> timoxley, there *is* a favicon request, and the *response* is very interesting
09:09 < hdon> oh, no the response isn't that interesting
09:11 < astropirate> you arent that interesting
09:24 < christophsturm> how do i get documentation for optimizer bailouts, for example: Bailout in HGraphBuilder: @"exports.paramsToString": ForInStatement is not fast case
09:28 < hdon> christophsturm, that might be a good question for #V8
09:28 < hdon> christophsturm, how did you get that output from node? :D
09:28 < christophsturm> --trace-bailout
09:31 < medikoo> Does anyone know whether there's a way to run npm install so it doesn't compile downloaded packages? In my project I want to keep dependencies in repository, but not compiled
09:34 < strk> how do I get the name of the directory in which a .js being importer or run is ?
09:35 < strk> I think I saw __dirname__ or something like that
09:36 < hdon> i believe modules were coming from ~/node_modules that were old
09:36 < strk> found: __dirname
09:37 < christophsturm> strk: http://nodejs.org/docs/latest/api/all.html#all_require_resolve
09:40 < hdon> how do i make sure /usr/local/lib/node_modules is on my node require() path? i used strace to see where node is looking. it looks in /usr/local/lib/node but not /usr/local/lib/node_modules (the latter is where npm installs my modules when i use -g)
09:42 < hdon> medikoo, i would recommend against keeping module source code in your repository. instead create a script that can install modules of particular versions, and another to check the versions of modules. then create a config file that is tracked by your repo which has the modules and their versions. this allows you more flexibility and decreases revision control system bloat which can be a huge PITA
09:43 < gavri> I'm using vows for testing and would like for the tests to be transactional so that the database returns to its initial state after tests have been run
09:43 < medikoo> hdon: your points are valid for generic projects.. but in case of final application which needs to be served as bundle that can be installed without need of internet connection (assuming someone already has node.js with npm installed) it's different story.. 
09:43 < gavri> is there a way to do this?
09:44 < hdon> medikoo, your "final application bundle" probably should not require your revision control system then
09:44 < hdon> but, to each his own
09:44 < medikoo> hdon: in real world applications that you are selling to the client it's also good to not depend on state of npm repo.. everything should be in application repository
09:45 < medikoo> hdon: and it should be also versioned controlled, if you're asking about that :)
09:45 < hdon> medikoo, i agree 100%, that's why you need to be able to control module version... though perhaps npm cannot serve past versions?
09:46 < SomeoneWeird> it can
09:46 < SomeoneWeird> npm install <module>@<version>
09:46 < hdon> SomeoneWeird, thanks :) i assumed it could but never asked how
09:47 < medikoo> hdon: I'm not sure do you understand. It should be dependent on npm repo at all.. having application bundle you should be able to install it without internet connection, that's the point
09:48 < medikoo> and having same bundle and same version of npm & node.js installed someone should be able to install that appellation without issues in 10 years time (when npm repo may not exist or many packages may already been removed)
09:49 < photofroggy> so, I installed node back during v 0.5 on Ubuntu
09:49 < photofroggy> how do I remove that?
09:49 < photofroggy> was installed outside of apt-get
09:49 < hdon> medikoo, install without an internet connection... okay i ignored you when you said that before. don't you just hate customers?
09:50 < medikoo> hdon: have you worked with real clients? Do you know that many of them work behind proxies? It's for their comfort not for mine :)
09:51 < hdon> photofroggy, if you don't have your old makefile, or the old makefile doesn't know how to remove itself, i'd try "which node" and "strace" to see where its files are and remove them. mine is in /usr/local/bin/node and /usr/local/lib/node_modules (npm)
09:51 < hdon> medikoo, yes. they are annoying.
09:51 < medikoo> Anyway I'll ask on node.js group
09:51 < photofroggy> can't remember where the make file should be
09:51 < photofroggy> local bin
09:51 < photofroggy> nice
09:52 < hdon> medikoo, good luck
09:52 < medikoo> hdon: thanks
09:52 < SomeoneWeird> if they can't download files over port 80 they're screwed anyway
09:52 < photofroggy> thing is I installed through apt-get just now, which reports /usr/local/bin/node, node still claims it is 0.5
09:52 < photofroggy> which is nice
09:52 < photofroggy> maybe something went wrong
09:53 < SomeoneWeird> type /usr/sbin/node
09:53 < SomeoneWeird> type /usr/sbin/node --version
09:53 < SomeoneWeird> or maybe remove the s from sbin if that doesn't work
09:54 < photofroggy> 0.2.6
09:54 < photofroggy> wut
09:54 < aandy> hipster node
09:54 < SomeoneWeird> lol.
09:58 < photofroggy> removed the files in the folder `node` points to, `node` still exists as a reference, though; stored in some config somewhere? Should I worry about that or just install node again through aptitude?
09:58 < SomeoneWeird> type which node
09:58 < SomeoneWeird> and it'll give you the location
09:58 < photofroggy> nothing :B
09:58 < photofroggy> thanks for the helps
09:58 < photofroggy> toodle pip
09:59 < SomeoneWeird> just install from apt now and see if it works
09:59 < photofroggy> will do when I get home
09:59 < photofroggy> in a bizzle
09:59 < SomeoneWeird> :)
10:02 < hdon> IME if "which" gives you nothing, it means you have a shitty PATH variable
10:02 < hdon> that experience was on a Solaris system with a shell profile that had bitrotted over years
10:02 < hdon> it had wildcard elements in PATH, which may itself be a no-no
10:03 < hdon> but as time went on, the wildcard globbing failed as directories were removed
10:04 < jchannon> timoxley: just replied to your youtube comment :)
10:11 < gavri> is there a way to make tests transactional for node.js?
10:12 < hdon> gavri, node.js doesn't itself provide a database connector IIRC. you're using a module to access database, right?
10:12 < gavri> I'm using sequelize, yeah, but I'd like to know if there's a specific idiom that should be used to make tests transactional
10:13 < hdon> gavri, i'd probably look at sequelize and see if there is a way to add "start up" SQL statements to issue upon connection to database
10:13 < mikrowelt> sup guys )
10:13 < hdon> adium for irc :|
10:14  * hdon is being a dick
10:14 < mikrowelt> hdon: i use it
10:14 < hdon> :O
10:14 < mikrowelt> hdon: this is bad? ^^
10:14  * hdon shrugs
10:41 < gavri> hdon: thanks
10:49 < dax_roc> I'm traping sigtstp with process.on , How do I write that character to a serailport, I'm not sure on how to do this so any pointers would be apprecaited. I've tried writing '\u001b[2A' to the port but doesn't work ? 
10:51 < hdon> gavri, had any luck
10:51 < hdon> ?
10:51 < hdon> dax_roc, you have your serial port hooked up to... what?
10:52 < dax_roc> hdon: it's an AT Modem
10:52 < hdon> dax_roc, awesome :) so when you write that, what does the other end read?
10:52 < gavri> hdon: I'll be trying this out later today. I didn't think of setting data up on connection to the database. I'll find out if that's possible in a few hours. I'm working on something else right now. thanks again
10:53 < hdon> dax_roc, i believe ^z is not a character sent to stdin when it sends a signal. like ^c, it is out of band. your tty driver is supposed to catch the input. it never gets into the pipe/buffer to the process. it becomes a signal immediately. but in your case, you're actually writing to an AT modem... what sort of modem device is on the other end?
10:53 < dax_roc> hdon: It replies OK but the action doesn't complete. If I do all commads from node bar the ^Z, and issue it from miniterm it works
10:54 < hdon> dax_roc, on gnu/linux?
10:54 < hdon> dax_roc, try launching miniterm with "strace -o log" prefixed to your miniterm command. then send the ^z, and exit. read the file "log" created by strace and try to see what it is sending that is the ^z
10:55 < shinaku_> I once met Richard Stallman and asked him to sign a poster for a university *nix cluster I ran. We had to quickly photoshop the logo to say gnu/linux not linux before we gave it him.
10:55 < shinaku_> He still shouted at me.
10:55 < thealphanerd> rendered using non free gpu?
10:55 <@mbalho> for using photoshop?
10:55 < hdon> shinaku_, loool
10:56 < shinaku_> No, I asked him for a photo while he was moving a box about 1 metre.
10:56 < shinaku_> "CANT YOU SEE I'M BUSY?"
10:57 < shinaku_> We also got a signed gnu plushie from him, and I got his book signed too.
10:57 < shinaku_> But yeah, that man has real social problems.
10:57 < pyrotechnick> marak?
10:57 <@mbalho> marak is very sociable actually
10:57 < shinaku_> rms
10:57 < pyrotechnick> who that
10:58 < shinaku_> Stallman
10:58 < pyrotechnick> he ok?
10:58 < shinaku_> He started the free software foundation, the GPL licence, started the GNU project and wrote a lot of tools in that.
10:58 < pyrotechnick> i mean what's wrong with him why the plushie
10:59 < aandy> did you tell him that you use vim aswel?
10:59 < shinaku_> haha, I'm a .net developer ;)
10:59 < shinaku_> I didn't mention my choice in software.
10:59 < pyrotechnick> heresy
10:59 < aandy> i mean, he wrote emacs
10:59 < aandy> :p
10:59 < hdon> mono
10:59 < shinaku_> he did
10:59 < aandy> yeah
10:59 < aandy> http://en.wikipedia.org/wiki/Emacs
10:59 < shinaku_> mono is a bit rubbish, it's alright - but there's better choices if i want to develop forunix
10:59 < shinaku_> like node.
11:00 < shinaku_> I can see me moving to node as my main framework within a few years.
11:01 < aandy> i would never use mono to develop something for unix. i did use it to "port" something i had already written for .net though
11:02 < shinaku_> I mostly write web applications, so tbh I don't have much need for porting apps.
11:02 < aandy> in mono?
11:02 < shinaku_> Nah, I work in .net on windows.
11:02 < shinaku_> But my own projects are node now.
11:02 < aandy> ah okay
11:03 < aandy> welcome aboard
11:03 < shinaku_> :)
11:03 < shinaku_> I only really discovered node about a month back, but since then I've been hooked. 
11:03 < SomeoneWeird> same
11:03 < SomeoneWeird> (but not a month)
11:03 < SomeoneWeird> :p
11:04 < shinaku_> :)
11:04 < shinaku_> It's brought the fun back to coding for me ;p
11:04 < shinaku_> As well as blowing my .net apps out of the water performance wise.
11:06 < aandy> oh damn, kitchen filled with fog
11:06 < aandy> kettle broke (doesn't turn off), all water was gone, lol
11:06 < aandy> but that means... no coffee, oh can this day become any worse?
11:06 < shinaku_> I fused my house recently with a kettle that liked to turn itself back on.
11:06 < aandy> can you do the opposite for me?
11:07 < shinaku_> hm?
11:07 < shinaku_> Also, electric kettle, I'm guessing your British?
11:07 < aandy> i mean the same. read that wrong. clearly the coffee shortage is starting to show
11:07 < aandy> no, i just broke my coffeemaker a while back
11:07 < shinaku_> oh ;p
11:07 < shinaku_> In Britain, everywhere has an electric kettle.
11:08 < aandy> cup of tea, 'eh
11:08 < shinaku_> Like, if you move into a new house, it'll have a kettle ready for you. Same with even the cheapest hotel rooms.
11:08 < shinaku_> Even our tanks have built in kettles ;P
11:08 < aandy> hah
11:08 < shinaku_> Exactly. Our whole country is run on tea.
11:09 < pyrotechnick> why don't you guys just turn your hot water systems up a bit
11:09 < shinaku_> You don't want to drink water that's been in a hot water tank.
11:09 < pyrotechnick> that's a myth
11:09 < shinaku_> Great way to get legionnaires
11:09 < pyrotechnick> myth
11:09 < shinaku_> http://www.hse.gov.uk/healthservices/legionella.htm
11:10  * shinaku_ shrugs, unless it's the British version of Fan Death.
11:10 < aandy> one of my professors was at a soccer game once. a guy was shouting at the field, using all the profanity he could think of. when he ran out, he said "get it together you... you.. tea drinker!"
11:10 < shinaku_> Hah.
11:10 < aandy> wasn't UK though
11:10 < shinaku_> Cheese eating surrender monkies.
11:10 < aandy> those guys are the worst
11:11 < shinaku_> but yeah, heating a big talk of water at > 60 degrees constantly, or boiling an electric kettle occasionally. 
11:11 < shinaku_> I think the latter is more green.
11:11 < pyrotechnick> shinaku_: get gas
11:11 < pyrotechnick> kettles are wildly inefficient
11:12 < pyrotechnick> you can tell by how noisy they are
11:12 < shinaku_> but they boil within a minute or so, surely that'd be better than constantly keeping a large tank hot?
11:12 < pyrotechnick> only electric heaters do that
11:12 < pyrotechnick> and even then not all of them
11:13 < pyrotechnick> that's a rather old design
11:13 < aandy> my kettle was on its way to do a > 100 degrees constantly
11:13 < aandy> not to one-up you, but.. you know
11:13 < shinaku_> Well yeah, generally the turn off when the water is boiling, which is effectively 100 degrees
11:14 < pyrotechnick> you guys
11:14 < shinaku_> Good for steralising things too
11:14 < shinaku_> ugh, our build server is being shite, and I need to see if I've fixed some tests before I go get lunch
11:15 < shinaku_> over time 8 minutes purely on building the bloody thing, not even running tests.
11:15 < hdon> pyrotechnick, by how noisy they are: lolllll.... you lose *far* more energy at the power plant than you do in the kettle. the kettle noise is a very small amount of energy, even if you include 60 seconds of steam pouring out of the spout. of course many types of power plants harness energy that cannot be delivered to your home directly, i'm really only comparing it to fossil fuel plants
11:15 < pyrotechnick> lollll
11:15 < aandy> haha
11:16 < hdon> gas range + kettle = most efficient
11:16 < pyrotechnick> solar
11:16 < pyrotechnick> to make the gas
11:16 < pyrotechnick> FREE TEA
11:16 < shinaku_> fusion.
11:16 < pyrotechnick> nah that's OP
11:16 < hdon> heheh
11:17 < pyrotechnick> nikola tesla is rolling in his grave
11:17 < hdon> if someone discovered fusion, they'd be dealt with. i'm not saying fusion is practical, but the energy industry is dangerous to tangle with.
11:17 < pyrotechnick> one word: iran
11:17 < shinaku_> I think the internet solves that.
11:18 < hdon> pyrotechnick, what about iran?
11:18 < shinaku_> The second someone discovers fusion, it'll be all over the internet.
11:18 < pyrotechnick> why do you think they export all their oil
11:18 < hdon> *nsa perks up its cyber ears*
11:18 < hdon> shinaku_, you'd hope so, wouldn't you?
11:18 < aandy> to... money?
11:18 < hdon> shinaku_, probably though, someone would want to monetize it, which means keeping it secret until patents can be had
11:18 < shinaku_> It'll happen eventually. It's like the year of the linux desktop.
11:19 < aandy> my bet is on fusion then
11:19 < hdon> it'll happen when a tiny fraction of the world population owns everything in the world and everyone else is an indentured servant
11:19 < shinaku_> Will 2013 be the year of the linux des^H^H^H^H^H^H^H^H^H fusion revolution?
11:19 < hdon> shinaku_, lol
11:19 < aandy> what the 
11:19 < hdon> aandy, ^h is backspace
11:19 < aandy> ah
11:20 < shinaku_> aandy: very slashdot humour
11:20 < hdon> it preceded slashdot
11:21 < shinaku_> Yeah I expected so
11:21 < hdon> "real time" messengers like ICQ had that sort of humor
11:21 < shinaku_> but I'm a bit young for pre-slashdot days
11:21 < hdon> talk(1) had it
11:21 < hdon> yeah i dont' remember a preslashdot era either
11:21 < aandy> why do you put (air?) quotes around real time? ICQ was great :)
11:22 < shinaku_> I remember my school banning slashdot because i used to read that rather than do their pathetic IT work
11:22 < hdon> cause "real time" is like "hipster" and means whatever you want it to mean
11:22 < aandy> i remember it had this weird "meet people" feature. where you'd get a msg from some random dude in germany
11:22 < shinaku_> Now, the school should've known not to annoy a kid who knew more about network engineering than the schools network engineers.
11:22 < hdon> aandy, "icq" == "i seek you" ergo "meet people"
11:22 < aandy> yeah i know, but the dude was still weird
11:23 < shinaku_> sounds like omegle
11:24 < hdon> shinaku_, in highschool i did a portscan and was promptly taken to a vice principal's office where my teacher told my vice principal that i had "collected numbers having to do with the school's computer programming"
11:24 < shinaku_> hahaha
11:24 < shinaku_> Brilliant.
11:24 < shinaku_> I was once banned from the internet.
11:24 < aandy> technically he could be right though
11:24 < shinaku_> Which meant I had the IE icon removed from the desktop.
11:25 < hdon> shinaku_, but another day in another year of highschool, i put on some businessy clothes and walked into a classroom with a substitute teacher and told her i was there to fix the computer
11:25 < hdon> put in boot disk made in school library
11:25 < hdon> etc
11:25 < hdon> those were the days
11:25 < aandy> lol
11:25 < hdon> shinaku_, haha
11:25 < hdon> IE icon... that special magic icon that isn't an .lnk for whatever stupid reason
11:25 < dax_roc> hdon: I'm not sure if strace is capturing it, http://pastebin.com/cBue2pVR (only the most relivant)
11:26 < shinaku_> We had some shitty software to lock windows down, instead of using the actual windows restrictions. if you disabled it (in one of numerous ways), you then had network access to the entire city's libries, schools and government computers.
11:26 < shinaku_> That was terrifying.
11:26 < shinaku_> Luckily I'm very white hat.
11:26 < gavri> hdon: even given the ability to run queries on connection to the database, it would still help to have a way to make the tests transactional. because we depending on how we choose to run the tests, it's possible that only one database connection will be used among multiple tests and the results on one test should not depend on the data created by another
11:26 <@Nexxy> how big was the fish again?
11:27 < shinaku_> reel big
11:27 < hdon> dax_roc, unfortunately none of that is relevant. paste the whole log? also maybe send a message like HELLO before hitting ^z
11:27 <@Nexxy> sounds like it.
11:27 < hdon> gavri, it would, but if it isn't, this is the best way i can think to implement it :)
11:27 < hdon> gavri, you could add the feature and submit a patch :)
11:28 < dax_roc> hdon: I did :D send AT, ATID, and hit Ctrl+Z several times
11:28 < hdon> dax_roc, cool. now we just need the rest of the log :)
11:28 < hdon> dax_roc, however i see it's calling clone() so it's forking new processes. it may be needed to tell strace to trace the child processes as well
11:28 < jaseemabid> How can I convert ["foo"] to [const Arguments& args] in v8? 
11:33 < Laddi> Anyone have any experience with nrsa or ursa and SIGSEGV faults?
11:33 < dax_roc> hdon: http://pastebin.com/XWdrzGcF
11:34  * hdon clicks
11:39 < jaseemabid> How can I convert ["foo"] to [const Arguments& args] in v8? I am having trouble calling c++ functions in c++. They expect this "Arguments" type but i cant figure out how to convert to that type
11:40 < hdon> dax_roc, it looks like i/o is being done in a child process. there might be a better way to do this: download the miniterm source code, and find the SIGTSTP signal handler
11:40 < dax_roc> hdon: it's a python script
11:42 < hdon> dax_roc, oh, yeah
11:42 < hdon> i forgot about that
11:42 < hdon> then just look for its handler
11:42 < hdon> hmm, i don't see it
11:43 < hdon> perhaps it doesn't do oob sigtstp
11:43 < dax_roc> it's probably default
11:43 < hdon> is there a way to tell the tty not to send sigtstp?
11:43 < hdon> dax_roc, the default signal handler for sigtstp stops the process, no?
11:44 < dax_roc> hdon: no it will fork it to the background ? 
11:44 < gwrea> hello guys, do you know if a ReadStream emits any event when it pipe ends?
11:44 < hdon> dax_roc, stop, not exit. i mean, suspend the process. like SIGSTOP
11:44 < hdon> dax_roc, but wait... i thought you said miniterm *did* send your ^z over the serial?
11:45 < hdon> anyhow when you ^z a process, it doesn't fork, it just stops the process, unless the process overrides the signal handler. same with ^c killing the process
11:45 < hdon> but, for instance
11:45 < hdon> just because a program has not exhausted its stdin buffer
11:45 < dax_roc> hdon: when I hit ctrl+z in miniterm the at command responds correctly and not so in node
11:45 < hdon> doesn't mean it won't get ^z or ^c immeditaely
11:46 < hdon> the tty driver in the kernel sends the appropriate signal immediately, bypassing stdin
11:46 < hdon> dax_roc, ah, ok. hmm. it might be setting a tty option then
11:46 < hdon> let me look
11:48 < hdon> dax_roc, you're on *nix right?
11:48 < dax_roc> linux yes
11:48 < hdon> of course
11:48 < hdon> you used strace
11:50 < fnguest> hi, i'm trying to build node with /usr/local/python/bin/python and i get an error that says "no module named os", even though os is not a module installable by pip.  anyone know what's going on?
11:53 < timoxley> fnguest my guess is update your python
11:54 < timoxley> fnguest what does `python --version` say
11:55 < fnguest> my main python is 2.4, but i have 2.7 installed in /usr/local/python
11:55 < fnguest> i changed the configure file to point use /usr/local/python/bin/python
11:56 < fnguest> s/to point us/to use
11:57 < hdon> dax_roc, do you know what ^z is supposed to look like when it's serialized?
11:58 < hdon> dax_roc, should it be the byte 0x1A?
11:58 < hdon> dax_roc, you could try sending that to the modem and see if it gets the response you expect
11:58 < dax_roc> thats it yes
11:58 < hdon> dax_roc, then i think it's just a matter of ignoring the SIGTSTP signal
11:58 < timoxley> fnguest does it work now?
11:58 < fnguest> no i did that before getting this error
11:58 < dax_roc> Decimal 26, hex 1A 
11:59 < dax_roc> hdon heres the strace with all children http://pastebin.com/ZHmA1bwU
11:59 < hdon> dax_roc, do you know how to set signal handlers to SIG_IGN in node?
11:59  * hdon clicks
11:59 < dax_roc> hdon no,can't say I do. 
11:59  * dax_roc googles
12:01  * dax_roc needs lunch before there is a reinactment of the 'scene' from aliens!
12:01 < hdon> http://nodejs.org/api/process.html#process_signal_events
12:02 < hdon> doesn't say anything about sigign, but
12:02 < hdon> i think you really need to tell the tty driver that you don't want SIGTSTP
12:02 < hdon> dax_roc, at the tty have you tried typing ^v^z ?
12:03 < hdon> dax_roc, i think you should use process.on('SIGTSTP', function(){...})
12:03 < hdon> dax_roc, and in your callback function, send 0x1A
12:03 < hdon> and put it at the front of your send queue
12:03 < hdon> that way it can "cut in line" and arrive before other buffered bytes
12:04 < hdon> err
12:04 < hdon> unless you don't want that behavior
12:04 < hdon> if you don't want that behavior, don't do that
12:04 < hdon> i keep forgetting you aren't controlling another terminal
12:04 < hdon> what's the name of your modem?
12:04 < hdon> i mean, the model
12:04 < hdon> i used to work on an italian gsm modem from a company called Telit
12:04 < hdon> i used pyserial for that as well
12:04 < hdon> but i never had to send ^z
12:10 < jaseemabid> Need to convert ‘v8::Local<v8::String>’ to ‘const v8::Arguments&’. *help*
12:21 < hdon> jaseemabid, what are you trying to do?
12:22 < jaseemabid> hdon, I have a Ref class with a property New. I need to pass a string to New
12:23 < hdon> jaseemabid, have you tried in #v8 ?
12:23 < jaseemabid> hdon, Eh? I didnt get that
12:23 < hdon> or #chromium ?
12:23 < jaseemabid> Yeah. no use
12:23 < hdon> ah
12:25 < hdon> jaseemabid, what is Ref?
12:25 < jaseemabid> I am unable to call c++ functions. It expects const args. I dont know how to convert <String/Number> type to Arguments.
12:25 < hdon> sorry i've very little experience with V8, but i'm very familiar with a couple of other javascript interpreters
12:25 < jaseemabid> hdon, Thats a class i defined
12:26 < hdon> jaseemabid, when you say C++ functions that expects const args, do you mean a native impl of a Javascript calling interface? like a function written in C++ that is made to be invoked from Javascript?
12:26 < jaseemabid> And i wonder why you call a Class:New  instead on new Class
12:26 < jaseemabid> hdon, I can call cpp functions from js, but not in cpp itself
12:27 < hdon> jaseemabid, that's what i thought. can i see the code?
12:27 < jaseemabid> hdon, Pushing to github. 1 sec
12:28 < deoxxa> jaseemabid: v8 class != c++ class, so Class::New != new Class
12:28 < deoxxa> there's a bunch of other stuff that gets done by v8 (mostly garbage collection stuff and bookkeeping)
12:28 < hdon> that makes sense
12:29 < jaseemabid> Anyways I am having a hard time working with v8
12:29 < hdon> jaseemabid, you'll get the hang of it. i had a hard time getting the hang of Spidermonkey at first, but once i had a thorough understanding of how it worked, it was easy
12:29 < jaseemabid> Ironically, I cant find a single decent tutorial on v8 cpp anywhere other than the same set of 5 stupid examples repeated here and there. #frustrated
12:29 < hdon> jaseemabid, heh. look through the source code :) i've read a lot of spidermonkey source code
12:30 < jaseemabid> And i am tired of examples. I really dont mind reading a 1000 page book now
12:30 < jaseemabid> hdon, github.com/jaseemabid/libnodegit/
12:30 < deoxxa> jaseemabid: http://nodejs.org/docs/latest/api/all.html#all_addons << there's some decent info there, let me dig up the set of slides i used to learn v8 stuff
12:31 < jaseemabid> hdon, Master branch works. repo.head() returns a string.
12:31 < hdon> deoxxa, i'm looking at the v8 docs now. what is the v8 class called? v8::Class ?
12:31  * hdon clicks
12:32 < jaseemabid> hdon, There is a branch "headAsReference" with one commit
12:32 < jaseemabid> I want to return a Reference instance instead of a string from head
12:33 < jaseemabid> hdon, diff head.cc in master and headAsReference. There is one or 2 line change. That is what im  trying to do
12:33 < deoxxa> jaseemabid: http://kkaefer.github.com/node-cpp-modules/
12:33 < deoxxa> the stuff about node-waf is out of date there
12:33 < deoxxa> so ignore that bit
12:33 < jaseemabid> deoxxa, This is what told a few moments back. Examples one after the other.
12:33 < deoxxa> node-gyp is what you want to use now (it's way easier and less broken)
12:34 < deoxxa> oh
12:34 < jaseemabid> deoxxa, I use gyp.
12:34 < hdon> oh and you're using something called node::ObjectWrap
12:34 < deoxxa> i thought it was a really good set of slides, i learnt everything i needed to know to do https://github.com/deoxxa/node-mcnet from it
12:34 < deoxxa> well that and google
12:35 < jaseemabid> deoxxa, Nothing explains stuff. You cant really do a lot with 5 simple examples unless you are a cpp pro, which i am not
12:35 < MI6> joyent/libuv: Ben Noordhuis master * 47b2cd3 : build: rename uv.a to libuv.a - http://git.io/UwUgsA
12:35  * jaseemabid is missing static languages baly
12:35 < deoxxa> ah
12:35 < deoxxa> yeah i had quite a bit of c++ experience already
12:35 < hdon> https://github.com/jaseemabid/libnodegit/compare/master...headAsReference
12:35 < hdon> i see it now
12:36 < jaseemabid> hdon, Instantiating Reference leads to a crash
12:36 < jaseemabid> hdon, I wanted to return that head_ref
12:37 < hdon> jaseemabid, don't use C++ "new" operator. v8 is garbage collected, so using your own allocator (like the standard c++ runtime allocator) then you'll cause big problems
12:37 < MI6> joyent/node: Ben Noordhuis master * d7c45ea : deps: upgrade libuv to 47b2cd3 - http://git.io/sI8WFA
12:38 < jaseemabid> hdon, I heard that here and there. I needed something that works first. Then i will refactor 
12:39 < hdon> jaseemabid, have you seen the NewInstance() C++ method?
12:39 < jaseemabid> hdon, All i want is to instantiate a class i defined. v8 type juggling is making me nuts. And i cant find a doc to learn about it also
12:39 < jaseemabid> hdon, Nope! NewInstance is new to me
12:40 < hdon> hmm, NewInstance() is a C++ method of the C++ class Function
12:41 < hdon> if you had a Function instance representing the C++ class you're trying to wrap for V8/Node (Reference) then you could use NewInstance...
12:41 < hdon> jaseemabid, let me ask you
12:41 < jaseemabid> Sure
12:41 < hdon> how do you take your C++ class Reference and create a reference to it that the Javascript code can access?
12:42 < jaseemabid> https://github.com/jaseemabid/libnodegit/blob/master/src/repository.cc#L45
12:42 < jaseemabid> hdon, ^
12:42  * hdon clicks
12:42 < jaseemabid> That Init does that 
12:43 < hdon> there
12:43 < hdon> FunctionTemplate::New(isBare)->GetFunction()
12:43 < jaseemabid> Thats where it is exposed 
12:43 < hdon> ^ does that code return a C++ instance of the C++ class Function?
12:43 < hdon> if it does, then you have a Function instance
12:43 < hdon> and if you have the Function instance, then you can call NewInstance()
12:44 < jaseemabid> hdon, I dont want to expose Reference to js. I wanted to get an instance in cpp 
12:44 < hdon> jaseemabid, it looks like GetFunction() returns a Local<Function>
12:44 < hdon> jaseemabid, wait... you don't want to expose Reference to js? then why are you wrapping it?
12:44  * jaseemabid hates cpp and never going to touch it again after this project. Miss JavaScript :(
12:45 < hdon> Handle<Value> Reference::New(v8::Local<v8::String> args) 
12:45 < jaseemabid> hdon, I am exposing Repository.head, which will make a Reference instance in [cpp] and return it
12:46 < hdon> jaseemabid, ok. well, firstly
12:47 < hdon> jaseemabid, i'd recommend if you are going to instantiate something and create a Javascript reference to it at any time, you should expose the constructor to the Javascript environment. it's very helpful during runtime. you can do things like use the instanceof operator, and access its prototype. and you ensure for the purposes of garbage collection that it's rooted. (though probably v8 has other ways of rooting things in the GC that mak
12:47 < hdon> e that a moot point)
12:47 < hdon> but, either way, i think we have the solution
12:48 < jaseemabid> hdon, You mean expose reference completely ?
12:49 < hdon> jaseemabid, only the constructor and whatever else is useful
12:49 < hdon> but, take my advice with a grain of salt
12:49 < hdon> i'm really a spidermonkey hacker, haven't learned v8 yet
12:50 < hdon> i'm going to smoke a cigarette but i'll be back to look at more v8 reference material with you in a bit
12:50 < hdon> here's what i've been using:
12:50 < hdon> http://create.tpsitulsa.com/blog/2009/01/29/v8-objects/ # seems mediocre
12:50 < jaseemabid> hdon, Wonder how people made awesome stuff with this thing without a  manual #RTFM
12:50 < hdon> http://izs.me/v8-docs/classv8_1_1Function.html#a7461d71d7a0bf6e510d16200a7c64501
12:50 < hdon> http://izs.me/v8-docs/v8_8h_source.html#l03919
12:50 < hdon> those are my links so far
12:51 < hdon> jaseemabid, it's been my experience in the Spidermonkey community that a lot of the documentation became stale over time, and knowledge of how spidermonkey really works became very specialized. it's a small community of people who write code for spidermonkey. node is probably the only big project that uses v8
12:51 < jaseemabid> Ah, its quite impractical to dig into v8 source to learn v8. wonder if thaat works
12:51 < drey_> window 21
12:51 < hdon> jaseemabid, the source is always more accurate than the documentation
12:51 < hdon> drey_, "elsewhere irssi!"
12:51 < hdon> brb
12:51 < jaseemabid> hdon, That requires considerable language skills. I am a js guy, not a cpp guy
12:53 < jaseemabid> hdon, Looks like this is not going to reach anywhere. 
12:54 < jaseemabid> hdon, Any books/sensible simple docs on v8?
13:02 < hdon> jaseemabid, i'm gonna keep searching for the solution :) i dont' know about books/docs though
13:02 < hdon> however
13:02 < hdon> jaseemabid, i'm gonna clone your repo :)
13:02 < hdon> jaseemabid, what are the dependencies?
13:05 < therealkoopa> I need some recommendations on streaming. With all the latest hype, I want to try doing things the right way with streams. I am building a service that hits different rest endpoints. Each function returns the stream, so I can use JSONStream or whatever with it. I want to also cache the response in redis. Does it make sense to continue to do this with streams? Stream the response into redis and into the JSONStream?
13:14 < christophsturm> why does this only listen on 1250 and not on 1251? https://gist.github.com/3872081
13:28 < SomeoneWeird> probably because you can't use the same server and make it listen on 2 ports christophsturm 
13:28 < christophsturm> why is that?
13:28 < dax_roc> hdon: I'm using a mobile phone, sending text messages. Most mobiles now appear as AT Modems 
13:29 < hdon> dax_roc, ah yes :) i was also sending text messages
13:29 < christophsturm> and is that documented anywhere?
13:29 < dax_roc> hdon: How should I send that to the port?
13:30 < hdon> christophsturm, it may not support multiple numbered ports for sockets to be initialized by the http server instance. try creating a tcp socket bound on those ports, and then calling .listen() with the socket object instead of the port number
13:30 < hdon> dax_roc, the 0x1a? can't you just send it the way you send any other byte?
13:30 < hdon> dax_roc, with .write(chr(0x1A))
13:30 < hdon> oh wait
13:30 < hdon> you're not using pyserial lol you're trying to use node now
13:31 < hdon> well, however you're writing data to the serial device with node, try String.fromCharCode(0x1A) or an escape sequence in a string like '\x1a'
13:34 < hdon> christophsturm, did you try my suggestion?
13:38 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:40 < christophsturm> hdon: how can i call listen with a socket object? this does not work: https://gist.github.com/3872338
13:42 < hdon> christophsturm, no, do not instantiate socket with new operator, or connect(). use net.createServer() http://nodejs.org/api/net.html#net_net_createserver_options_connectionlistener
13:42 < draginx> uhhh
13:42 < draginx> yeah what hdon said :P
13:42 < hdon> christophsturm, you should also be aware that the result of http.createServer() is an instance of http.Server but it's not helpful to instantiate it with "new" operator that way
13:43 < holzp> oh that async library is just deeelightful
13:44 < dax_roc> hdon: String.fromCharCode works great in the on SIGTSTP
13:44 < hdon> dax_roc, awesome :D
13:44 < hdon> dax_roc, remember you can do the string literal as well with '\x1a'
13:44 < hdon> dax_roc, btw what model of modem are you using?
13:45 < dax_roc> hdon, it's a nokia 6210i ithink 
13:46 < dax_roc> eventually I will be using the 3g modems. The one I have has no IMEI so it wont let me send sms ? 
13:46 < hdon> dax_roc, ah, too bad. i'm sure it's very similar :)
13:47 < dax_roc> hdon: Most are the same AT cmd sets 
13:47  * hdon nods
13:47 < fnguest> i can get node to compile but make install is still using my system python rather than my custom /usr/local/python.  can i change the make command somehow?
13:47 < dax_roc> I've abstracted the AT commands to a json file so it's easy to change if needs be
13:48 < dax_roc> *easy to use multiple modems with different AT commands
13:49 < dax_roc> hdon: Much appreciate your help. 
13:49 < hdon> dax_roc, no problem! i enjoy helping :)
13:51 < fnguest> hmm i was able to change the Makefile and it worked
13:55 < hdon> fnguest, so it used one python for building and another for installation?
13:56 < fnguest> i guess, but it mostly uses gcc when building right?
13:56 < fnguest> i should have changed the Makefile before making to be sure
13:58 < phco360> Hi, I want to do HTTP client requests from node
13:59 < phco360> It would be great to have a library that keeps a session, similar to Net::HTTP in Ruby
13:59 < phco360> Do you have any suggestions?
13:59 < bigkevmcd> request
13:59 < bigkevmcd> https://github.com/mikeal/request
14:00 < phco360> super cool, thank you
14:07 < ricepuddin> can't find docs on this anywhere - if I want to prompt for a password and then read it using process.stdin.once, is there a way I can set the console up so that it won't echo the password typed by the user?
14:12 < dax_roc> rice trap process.on sdtin 
14:12 < dax_roc> ricepuddin: ^
14:15 < ricepuddin> dax_roc: sorry, could you elaborate a little?
14:17 < dax_roc> ricepuddin: you want to redirect console output when typing a password, not sure if this is the most appropiate way but you could trap stdin and not send it to stdout 
14:18 < dax_roc> AT+CSMS
14:20 < SomeoneWeird> you could use stty 
14:23 < ricepuddin> dax_roc: FWIW, I just found the prompt module in npm so I'll use that... thanks anyways
14:26 < dax_roc> ricepuddin: nice, might be good to play with traping stdin/stdout tho good to know 
14:27 < shanimal> dax_roc see also commander
14:27 < ricepuddin> dax_roc: I'm doing this purely for a cakefile to bootstrap an admin database... I cba to spend time on that ;)
14:27 < timoxley> phco360 alternative to request http://visionmedia.github.com/superagent/
14:28 < ricepuddin> it'll be used _once_ every time the app is initialised on a new database...
14:29 < shanimal> er, sorry dax_roc i meant "ricepuddin see also commander" 
14:48 < jaseemabid> hdon, There?
14:49 < jaseemabid> hdon, Just saw the mail you sent me
14:49 < hdon> jaseemabid, hey i tried emailin gyou
14:49 < hdon> yup
14:49 < jaseemabid> Its *just builds* for me
14:49 < jaseemabid> did you install libgit2 ?
14:49 < hdon> i'll do that
14:50 < hdon> no package with similar name in my apt configuration
14:50 < jaseemabid> hdon, Build from source
14:50 < jaseemabid> libgit2.github.com
14:50 < hdon> jaseemabid, ok cool
14:50 < jaseemabid> I had a thought. If i'm returning an object constructed in c++, do i have to expose its constructor also? 
14:51 < jaseemabid> hdon, I am considering abandoning that branch and doing something else  till i figure out more about v8. Miss some d11n other than the doxygen thingy 
14:52 < jaseemabid> hdon, Os? mac or linux?
14:53 < hdon> jaseemabid, that's not a bad idea. i'm going to figure it out though ;) i'm using gnu/linux atm
14:53 < hdon> it's nice to be back
14:53 < hdon> i had to use mswindows and mac os x for a few months :(
14:53 < hdon> mac os x wasn't so bad though
14:53 < jaseemabid> Sweet!
14:53 < jaseemabid> I am planning to work on the async part
14:54 < manuelbieh_> hy
14:54 < jaseemabid> add lib.repo('path', function(r){}) 
14:54 < manuelbieh_> i'm loading a page via request({uri: ..., encoding: 'utf8'})
14:54 < manuelbieh_> and all umlauts are replaced by ? when I do console.log(body)
14:54 < jaseemabid> hdon, I will have to instantiate a repo object in cpp and pass it as a callback. I hope that will work.
14:55 < dax_roc> any chance any one has writen a pdu encoder here :D 
14:55 < hdon> ok i got libgit2 installed
14:55 < manuelbieh_> any idea why?
14:55 < hdon> jaseemabid, make: *** No rule to make target `.target/liblibnodegit/git/libnodegit/src/libnodegit.o', needed by `.target/git/libnodegit/liblibnodegit.so'.  Stop.
14:55 < hdon> :(
14:55 < jaseemabid> add lib.repo('path', function(r){}) instead of the current r = new lib.Repository(); r.stuff
14:56 < jaseemabid> hdon, revert the gyp file, work on master
14:56 < hdon> jaseemabid, ok
14:56 < jaseemabid> hdon, node-gyp configure first, node-gyp build
14:56 < jaseemabid> hdon, I had trouble with the libgit2 shared library. Which distro?
14:56 < tomshreds> hey guys is there any automatic version bumper with npm? like npm bump or something
14:57 < hdon> jaseemabid, ubuntu :\
14:57 < hdon> what's node-gyp
14:57 < hdon> i just have gyp i don't have node gyp
14:58 < hdon> node-gyp i mean
14:58 < hdon> i just have gyp not node-gyp
14:58 < jaseemabid> npm install node-gyp
14:58 < jaseemabid> # npm -g install node-gyp
14:58 < hdon> oh, this is the replacement for waf
14:59 < jaseemabid> hdon, I had to add a "/usr/local/lib" >> /etc/ld.so.conf.d/libgit2.conf because the .so file was added /usr/local/lib by libgit2 which was not in my .so path list or something
14:59 < hdon> gyp ERR! stack Error: "pre" versions of node cannot be installed, use the --nodedir flag instead
14:59 < hdon> hmm
14:59 < jaseemabid> hdon, Dont know about that one
14:59 < jaseemabid> hdon, installed node-gyp?
15:00 < hdon> yeah that message came from node-gyp
15:00 < hdon> yeah that message came from node-gyp build
15:00 < hdon> err
15:00 < hdon> yeah that message came from node-gyp configure
15:00 < hdon> damnit
15:00 < jaseemabid> configure first 
15:01 < hdon> jaseemabid, what do you get for node --version ?
15:01 < jaseemabid> v0.8.11
15:01 < tomshreds> anyone? no idea?
15:01 < tomshreds> is there any automatic version bumper with npm? like npm bump or something
15:01 < tomshreds> something i could execute and would do the job by itself
15:02 < thl0> tomshreds: npm version [patch|minor] -m "%s reason for bump"
15:02 < tomshreds> oh interesting thanks
15:02 < hdon> jaseemabid, ah ok. i'm going to switch to a stable release version of node
15:02 < hdon> jaseemabid, did you build node from source?
15:02 < jaseemabid> hdon, nope, used package manager
15:02 < jaseemabid> hdon, My configure log http://pastebin.com/U7u5gB5A
15:03 < hdon> jaseemabid, i think this will fix the problem. i'm going to uninstall my build of node for now and install the version you have
15:04 < jaseemabid> hdon, Not required i believe
15:05 < hdon> jaseemabid, well, this error message comes from npm. node-gyp was trying to install something during configure. i've seen this error before in fact. it happens because i'm not using a release version, and it doesn't want to download anything for a non-release version
15:05 < Azra-el> hello... .would it be a good idea to ask about a freelance job offering?
15:05 < jaseemabid> hdon, Ok
15:06  * hdon $ make -j5
15:06 < Azra-el> anybody interested and available for some freelance work?
15:06 < hdon> Azra-el, yes
15:06 < hdon> Azra-el, what's up?
15:07 < Azra-el> hdon... if you're interested would you mind pm-ing me?
15:10 < jaseemabid> hdon, Ping me once done. Thanks for the help
15:11 < rudiX> hello nodists 
15:11 < rudiX> :)
15:11 < hdon> jaseemabid, will do :)
15:11 < rudiX> what may cause this plugin not to work on different server -> https://github.com/mape/node-scraper
15:11 < jaseemabid> rudiX, Thank god its not nudists  
15:11 < rudiX> i mean ... nothing happens ... not throwing error
15:13 < mscdex> rudiX: it hasn't been updated in a year and there is no upper bound on the dependency version requirements, so maybe newer dependencies are breaking things in this module?
15:13 < mscdex> who knows
15:13 < rudiX> curl is installed ... i cant think of anything else
15:14 < mscdex> rudiX: why not just use request and something like cheerio directly ?
15:15 < rudiX> definitely will try cheerio ... thanks
15:16 < rudiX> love this channel! ;)
15:26 < jaseemabid> hdon, done?
15:28 < hdon> jaseemabid, almost. sorry i got side-tracked here looking for work :)
15:28 < hdon> ok! node 0.8.11 is installed
15:28 < jaseemabid> :)
15:29 < jaseemabid> hdon, node-gyp configure should give something like this > http://pastebin.com/U7u5gB5A
15:31 < hdon> jaseemabid, yes it worked ;D
15:32 < jaseemabid> hdon, http://pastebin.com/HtQjvSsp works on master
15:33 < jaseemabid> Thats the hello world app :)
15:34 < MI6> joyent/node: isaacs v0.8 * 99b2368 : doc: Reduce crypto stability to 2-Unstable - http://git.io/xX3K2g
15:35 < jaseemabid> hdon, Add that sample code to an examples folder or something. The require path is relative 
15:38 < jaseemabid> hdon, I installed node from source and tried building the module. Gave the same error 
15:38 < jmar777> so i know the correct answer is probably "run some benchmarks", but does anyone have any comparisons on streaming large files from disk with node vs. e.g., java.nio.SomeFastFileStream?
15:39 < jmar777> is node even theoretically capable of competing with something like java (given the IPC tax)?
15:40 < hdon> jaseemabid, can i /msg you?
15:40 < jaseemabid> yeah
15:41 < EyePulp> He's gonna ask you out!
15:41 < dax_roc> lol
15:41 < jaseemabid> EyePulp, :P
15:41  * EyePulp should be ignored - coffee kicking in
15:41 < jaseemabid> EyePulp, good one :P
15:41 < EyePulp> soooo dreamy
15:42 < cpetzold> I'm trying to expose a c++ class's variables to js, as per https://developers.google.com/v8/embed#dynamic .. but I'm using FunctionTemplate instead of ObjectTemplate because I want the class to have a constructor..
15:42 < cpetzold> I'm trying to figure out how to make the accessor methods still work with the functiontemplate approach, but am consistently getting segfaults
15:43 < jaseemabid> cpetzold, I am on something like that since last few hours. Good luck fixing v8 problems :)
15:43 < EyePulp> jmar777: what's the IPC tax?  At first I though you said "ICP" and thought "Insane Clown Posse supports static types?  Who knew?"
15:44 < pachet> they know its the only way to scale up their base
15:44 < cpetzold> here's what I'm working with: http://pastie.org/5035880
15:44 < cpetzold> i wasn't sure whether to use the prototype or instance template..
15:44 < jaseemabid> pachet, v8 lacks docs. I mean nothing much
15:53 < dax_roc> hdon: have you used pdu for sms ?
15:53 < joaojeronimo> ballpark figures, if you had to guess, which would seem less expensive: computing a sha1 of a string of length 20, or looking up a previously computed sha1 from a redis database in the same host ?
15:55 < hdon> dax_roc, no i did not use pdu
15:55 < hdon> dax_roc, never had a need ;)
15:56 < hdon> dax_roc, however i have done work with different text encodings for SMS messages, but that was a very different setup. we were actually talking to a canadian telecom over the internet for those text messages, so there was no modem / at command
15:58 < therealkoopa> I'm having some trouble understandings something with streams. I'm using redis-stream. I create a function that returns that stream, but if that function does a stream.write('some key'), then returns the stream. If the calling function doesn't do a .pipe(..) on it right away, it may miss things, is that corect?
16:00 < dax_roc> hdon: no worries, I need to use pdu for multi-part text messages. Looks like a lot of work.
16:03 < hdon> dax_roc, ah yeah, we could avoid those for our application. our application was to send out updates about location, temperature, orientation, and short messages about emergency conditions
16:04 < dax_roc> hdon: same, and more here directions/instructions
16:04 < dax_roc> found lots of good documentation tho :D fun times 
16:08 < hdon> dax_roc, awesome :) i enjoyed doing that kind of work. that job was my first experience with microcontroller programming. i got to use an MSP430 which was fun to work with and had lots of features with a thick datasheet. i also had to use a Telit, which was fun because it was a GSM modem, but not so fun because it had a bunch of poorly designed features
16:08 < hdon> and not great documentation
16:10 < dax_roc> hdon: Interested in moving to hardware programming, I'm starting with the propeller boards. I've some experience with C picaxe and everyone has or should use the ATMEGAs 
16:10 < nathan7> therealkoopa: if it doesn't .pipe before it hits the event loop
16:10 < hdon> dax_roc, :D i got my first propeller MCUs from the event badges at DEFCON20
16:11 < dax_roc> need to sit down and relearn some key topics tho
16:17 < jmar777> EyePulp: sorry, switched buildings. Interprocess Communication 
16:18 < jmar777> EyePulp: i'm not an authority on the topic, but i'm pretty sure any reading from the fs involves file system access in "c land", which then gets shuttled over to "js land"
16:18 < jmar777> highly technical break down right there
16:19 < EyePulp> jmar777: technical enough.  Thankfully I'm not the dude who needs to understand it. =)
16:20 < icebox> Is it possible to use a compiler toolchain based on GCC on windows with node-gyp?
16:21 < hdon> dax_roc, this was a project i made using an ATMega32 http://codebad.com/~hdon/plywood-led-snes-game-console.jpeg
16:21 < hdon> dax_roc, it's a matrix of 64 LEDs controlled directly by 8 i/o lines of the ATMega32 :P
16:21 < hdon> dax_roc, and yes... those are super nintendo controller ports for playing the "game"
16:24 < TehShrike> I'm interested in other people's thoughts on http://webreflection.blogspot.com/2012/10/javascript-made-everyone-crazy.html
16:24 < TehShrike> I may have misunderstood some of his complaints, but the impression I get is that most of the stuff he rails against is a byproduct of the fact that TypeScript's checking only happens at compile-time, not at run-time
16:25 < TehShrike> Which is just a nature of compile-time checking of a crazily-dynamic language - if they tried to shoehorn in a bunch of run-time checking into code compiled with TypeScript, I would be much less likely to use it
16:25 < TehShrike> But I'd like to hear other opinions.
16:26 < dax_roc> hdon: nice
16:27 < dax_roc> hdon: Think my next proj is a nixie clock 
16:40 < hdon> dax_roc, what's nixie?
16:40 < aandy> http://en.wikipedia.org/wiki/Nixie_tube
16:41 < aandy> neon sign
16:43 < dax_roc> hdon: sorry, nixie tubes 
16:44 < hdon> ohhh neat :)
16:45 < holzp> is there anywhere with some good async patterns for getting and structuring redis data?
16:45 < holzp> I got it working but boy is it ugly
16:56 < shanimal> TehShrike: don't ya think that maybe is not exactly JavaScript the problem
16:57 < ArxPoetica1> What's the best node.js logging package out there?
16:57 < ArxPoetica1> Or a good one, anyway?
16:57 < ArxPoetica1> for dev
16:57  * nathan7 throws winston at ArxPoetica1 
16:57 < superjoe> ArxPoetica1, console.log
16:58  * nathan7 beats superjoe up
16:58 < ArxPoetica1> ha ha
16:58 < ArxPoetica1> well, yesssss...
16:58 < superjoe> nathan7, give me one good reason to use winston
16:58 < ArxPoetica1> I just wondered if anything automagically logs (for dev only)
16:58 < TehShrike> shanimal: I'm not sure exactly what that was in response to - I don't think that was said by either me or the person who wrote that post
16:58 < nathan7> Because you're running more than one service and you're doing something professional
16:59 < shanimal> Its grammer fail in the post
16:59 < shanimal> funny though
16:59 < superjoe> ArxPoetica1, winston will do that for you
16:59 < gavri> when I run the grunt vows task, I'd like the NODE_ENV path variable to be set to 'test'. how do I do this?
16:59 < superjoe> nathan7, I don't follow that argumen
16:59 < superjoe> argument.
16:59 < othiym23> ArxPoetica1: I use bunyan, which is simple and great, pretty much the entire rest of the universe uses winston
16:59 < superjoe> gavri, what command are you using to run the grunt vows task?
16:59 < ArxPoetica1> i c
16:59 < nathan7> superjoe: How so?
17:00 < shanimal> (you had asked for feedback about thirty minutes ago... http://webreflection.blogspot.com/2012/10/javascript-made-everyone-crazy.html)
17:00 < superjoe> nathan7, OK I grant you those assumptions. but you fail to make the connection between those assumptions and why to use winston.
17:00 < gavri> superjoe: I've added vows to the default grunt task. so I just use "grunt"
17:00 < nathan7> superjoe: ArxPoetica1 is undoubtedly aware of console.log
17:01 < nathan7> superjoe: you don't ask for a logging library when you're after writing shit to stdout
17:01 < superjoe> I know that
17:01 < superjoe> but it depends on why you want a logging library
17:01 < superjoe> gavri, ok cool. one way to solve this problem is to add to the "scripts" section of package.json
17:01 < superjoe> gavri, you can add a "grunt" script which sets the environment variable and then runs grunt
17:01 < therealkoopa> Um, I'm trying to take a JSONStream and pipe it into a redis-stream, but in redis I'm getting [Object object]. IdeaS?
17:02 < superjoe> gavri, this has the added benefit of allowing grunt to be installed as a local dependency instead of a global one.
17:02 < ArxPoetica> nathan7 not at all
17:02 < superjoe> nathan7, I only argue a little bit because it's certainly an option to use console.log and friends and then deploy with a wrapper program like forever or naught which redirect your stdio to log files.
17:02 < ArxPoetica> It's all I've used up to this point.
17:03 < ArxPoetica> But I figgerred the node community probably had something more automagic.
17:03 < superjoe> ArxPoetica, winston is the go-to logging module.
17:03 < ArxPoetica> ok thx
17:03 < gavri> superjoe: thanks. I'll try that. but I also want to be able to run single tests through grunt and have NODE_ENV set automatically then too
17:04 < shanimal> therealkoopa: var a = {}; a.toString() == "[object Object]"
17:04 < gavri> I don't know how to run single tests through the grunt vows task anyway
17:04 < gavri> I'm using just "vows testname" instead
17:04 < ArxPoetica> Hey, if indexzero is behind it, it must be the shiz
17:04 < superjoe> gavri, you know about setting env vars with bash right?
17:04 < superjoe> gavri, you can simply type `NODE_ENV=test grunt` into the command line
17:04 < gavri> yeah, I don't want my team to have to remember that anytime they run a test
17:05 < superjoe> gotcha
17:05 < gavri> yeah, that's what I do now
17:05 < therealkoopa> shanimal: Right. I need to figure out how to take th JSONStream and stream it into redis so the data it parses is there and not [Object object]
17:05 < shanimal> lol, k sorry
17:08 < dystie> hey.  i've been asked to perform security testing for my organization against a new node deployment, and i could really use some guidance - i found http://bishankochher.blogspot.com/2011/12/nodejs-security-good-bad-and-ugly.html  but i don't speak websockets and all.  anyone got experience breaking this?
17:08 < superjoe> dystie, I'm not really sure what you're asking
17:09 < superjoe> it kind of sounds like you need to read a book on intro to network application security
17:09 < dystie> k.  we're deploying node.js - which we're using to establish a websocket connection from the clients browser to the nodejs server with a token passed to the clients' browser using https
17:10 < dystie> *nod.*  this isn't the kind of security work I usually do.
17:10 < EvilPacket> dystie: don't have allow-origin * for the websocket and treat it like you would be protecting against csrf…i.e. send something over the socket to auth the user that an attacker wouldn't guess
17:11 < dystie> does socket.io fail unencrypted (http)?
17:11 < EvilPacket> nope
17:12 < dystie> cool.  if an attacker gets ahold of the session token and establishes a legit session, is it actually easy to DOS the server/tie up the thread if you send bad message syntax to it?
17:12 < dystie> i'm a little paranoid about it since it runs as root.
17:12 < superjoe> that's a problem
17:12 < superjoe> why does the server run as root?
17:12 < EvilPacket> yes, don't run as root
17:12 < dystie> does nodejs not have to?  i was given the impression that that was required for deployment.
17:12 < EvilPacket> nope
17:12 < dystie> we *really* don't want it to.  really really do not want.
17:12 < superjoe> dystie, look up authbind
17:13 < superjoe> also node api supports setuid, setguid
17:13 < superjoe> but I'd recommend authbind
17:13 < EvilPacket> look at authbind, or reduce privs after loading, setuid
17:13 < EvilPacket> what superjoe said :-)
17:13 < superjoe> EvilPacket, with setuid, how do you solve the problem of needing to do other setup before establishing the connection?
17:13 < dystie> woo.  :)    they're trying to sell me that if nodejs has issues, that forever will restart it for them, but it sounds that that only happens if it enters an 'invalid state', and i don't know if a DOSd / tied thread counts as that.
17:14 < dystie> does forever actually buy them anything?
17:14 < superjoe> for example, I typically read a conf file, but create it if it doesn't exist, and then listen to the port
17:14 < superjoe> but I don't want that conf file to be created with root
17:14 < EvilPacket> yeah then you would have a problem
17:14 < donspaulding> dystie: if you're simply running as root to allow node to bind to a port < 1024, you should running node on a port > 1024 and sticking nginx (or another reverse proxy) on the public-facing port.
17:15 < superjoe> dystie, if you're looking at forever, might I humbly suggest that you also take a look at naught? https://github.com/indabamusic/naught
17:15 < dystie> that's frikking cool (re naught)
17:15 < superjoe> it doesn't solve the problem you mentioned currently, but maybe it can...
17:16 < dystie> they brought me in on this way late and they're trying to get certified for production when I don't know the technologies.  i really appreciate you guys helping me w/ this.
17:16 < dystie> naught seems to replace forever + solve another problem (with being able to do deployments without issues.)
17:16 < Leeol2> Anyone know if there is a way to know if a module was an entry point for Browserify? (Eg: `if require.main == module` for Browserify)
17:16 < dystie> what can you do in terms of upgrades to reduce downtime?  with jboss, we run two versions and just designate alternates so we can flip back if there are issues.
17:16 < dystie> we're not set up for clustering yet.
17:17 < superjoe> dystie, with naught you can choose to only use 1 worker and deployments will still work seamlessly
17:18 < EvilPacket> superjoe: naught looks interesting
17:19 < superjoe> thanks
17:19 < gavri> each of my files includes dependencies using require and specifies the files it depends on using relative paths like so: require('./../../file') and this varies based on the depth of the current file in the directory hierarchy
17:19 < gavri> it looks ugly and is difficult to maintain when I move files around. is there an alternative to this?
17:19 < dystie> are there any log files I should be monitoring, in terms of stack traces dumping sensitive data to?  
17:20 < superjoe> gavri, that's a great question. I've wondered the same thing. 
17:20 < superjoe> gavri, I suppose you could always define a global variable with the root path in your main file
17:20 < superjoe> then requires look like require(root + "/path/file")
17:21 < superjoe> dystie, which processes would be creating these log files?
17:21 < superjoe> dystie, node.js itself does not create log files
17:21 < dystie> they gave me app specific paths - something under a wsLogPath and a console log
17:22 < dystie> i just wanted to check that there wasn't anything other than that that they didn't mention to me.
17:22 < superjoe> dystie, what's a tied thread? I'm trying to find an article explaining what that is
17:23 < dystie> http://bishankochher.blogspot.com/2011/12/nodejs-security-good-bad-and-ugly.html  -- i've been looking at the security stuff specifically, since I don't do development - the info I reviewied was under the 'ugly' section in the article.
17:24 < dystie> i know i need to force them to remove any 'eval' statements in code review.
17:24 < gavri> superjoe: I run individual test files which only load specific modules. there is no "main file" :(
17:24 < niggler> holy mother of fuck
17:24 < niggler> gotta hijack the chat for a moment
17:24 < niggler> folks, check out CLWR
17:24 < superjoe> common language write read
17:24 < superjoe> what
17:24 < superjoe> stock?
17:24 < EvilPacket> dystie: most of the issues are standard app security issues. not node.js issues
17:25 < niggler> nono stock
17:25 < niggler> absolute craziness
17:25 < niggler> got in 10K shares on friday at 1.35
17:26 < niggler> sorry it just halted 
17:27 < Multiply> I have a photo of 4 small sheets of paper on a black background. Is there a fast, yet easy way to crop each sheet of paper out, and store them in their own file?
17:27 < superjoe> dystie, in this article the author is using `eval` server side and then explaining how that is a security problem. he then says that he runs node.js servers as root.
17:27 < superjoe> I wouldn't take any of this seriously.
17:28 < Multiply> Or even better, get the cropped pieces of image, as data, that can be sent to the browser?
17:28 < superjoe> Multiply, do you know the coordinates or do you need to do some image processing?
17:29 < Acionyx> Hi all! I need help: i'm sending a request from page to my site at the same machine, but to its external ip(not 127.0.0.1). This request appears on server after 1-2 minutes, why so slow?
17:29 < Multiply> superjoe, I need to do processing. I have a stack of photos, with 2-8 pieces of paper, yet I just want to get it working for one image for now :)
17:30 < dystie> superjoe + EvilPacket = thanks guys.
17:30 < dystie> aight.  i'll go talk to my develoeprs.
17:30 < superjoe> dystie, no problem. good luck
17:31 < dystie> :)
17:31 < EvilPacket> dystie good luck
17:32 < superjoe> Multiply, oh, client side? you'll want to talk to the #html5 or #javascript guys.
17:32 < Multiply> superjoe, serverside, actually :P
17:33 < Multiply> superjoe, the server gets images from a google drive folder, and I want it to parse them as they arrive.
17:33 < Multiply> After they have been processed, they'll be shipped over websockets or the like, to a client. (Already doing that part)
17:33 < Multiply> I mean, I'm not actually doing any processing
17:37 < superjoe> Multiply, unless you can find one that already exists, you'll have to find an open source image processing library and then create a node.js module wrapper using either c bindings or child_process
17:37 < niggler> node question: I'm trying to run this trading platform in nodejs that parses ITCH market data.  I see a trading halt, so I have to flush the book, and I use 'delete' but for some reason the memory isn't being freed.  is there a way to force a delete or a gc pass?
17:37 < superjoe> niggler, why do you care about the memory?
17:37 < Multiply> superjoe, I suppose there are serveral, I just don't know which one can do stuff like this, sadly. :/
17:38 < superjoe> Multiply, this is probably not the best place to ask about image processing in general
17:38 < jmar777> isaacs: any interest in getting more "Node.js in the industry" testimonials?
17:40 <@mbalho> jmar777: there is a github repo for them
17:41 < jmar777> mbalho: cool - thanks
17:42 < gavri> I'd like to set up fixtures for node.js tests that are set up, for each test so that all tests have access to a known set of reference data. the test's setup of course can add more data or delete data, but it has to revert back to the reference data set before the start of each test. how do I achieve this? I'm using vows
17:43 < gavri> I don't really mind so much if I don't have a way to setup reference data. even having a clean database before the start of each test would help
17:45 < niggler> superjoe: the data structures take up roughly 2-3 GB
17:46 < niggler> *20-30GB
17:47 < superjoe> niggler, ah. have you double checked that you don't have another sneaky reference to the data structure?
17:51 < niggler> i may
17:51 < niggler> nodejs does reference counting?
17:52 <@Nexxy> niggler, no
17:52 < niggler> so if i say var x = {foo:3} and then say var y = x
17:53 < niggler> then both reference the same object
17:53 < niggler> and then i assign x = something_else and delete y
17:53 < superjoe> related: https://developers.google.com/v8/design#garb_coll
17:54 < niggler> is there a way to force a gc pass
17:54 < othiym23> niggler: delete removes a member from an object, it won't free a variable: http://perfectionkills.com/understanding-delete/
17:55 < othiym23> if you want to ensure y isn't pointing at the structure anymore, y = null
17:55 < niggler> 'delete y' would signify that y isn't referencing the object, correct?
17:56 < niggler> so then in the sequence x = {foo:3}; y = x; x = 1; delete y
17:56 < othiym23> nope
17:56 < othiym23> delete is only used to remove reference names from objects
17:56 < niggler> even if it doesn't free, it should remove the reference, correct?
17:56 < othiym23> nope
17:56 < niggler> so y would still point to the object?
17:57 < othiym23> yes
17:57 < niggler> oh woah nvm
17:57 <@Nexxy> until your function returns
17:57 < jmar777> protip: if you're upgrading to node v0.8+, get rid of any "domain" expandos on your request objects.... :p
17:57 < therealkoopa> Can anyone quickly pick out why I can't stream a JSONStream into a redis-stream? See: https://github.com/SpiderStrategies/node-stream-cache/blob/master/lib/redis.js
17:57 < othiym23> like I said, assign null to y if you want it to no longer reference the object
17:57 < niggler> >>> var x = {foo: 3}; var y = x; x = 123; delete y; console.log(x + " : " + y)
17:57 < purr> niggler: undefined; Console: '123 : [object Object]'
17:57 <@Nexxy> undefined > null in this case
17:57 < niggler> blargh fair enough
17:57 < niggler> explains
17:58 < tomshreds> Is there any way of making mongodb find calls, sync?
17:58 < tomshreds> Like var user = Users.getUserByUserId(userId); ?
17:58 <@Nexxy> tomshreds, the better question is why?
17:58 < othiym23> @Nexxy: fair enough for NOde, but I still do a fair amount of browser programming, where undefined isn't always assignable
17:58 < tomshreds> To prevent having 23847 levels of callback?
17:58 <@Nexxy> othiym23, true ;P
17:59 <@Nexxy> tomshreds, name your functions
17:59 < othiym23> tomshreds: you can use the promises interface, which will give you back a Cursor
17:59 < othiym23> by not passing a callback to find, that is
17:59 <@Nexxy> don't break your code just because you're lazy
17:59 < tomshreds> this.checkIfAuth(function(auth) { if (auth) { var user = Users.getUser(userId, function(user) { bleh(user)..... ... and it goes on and on
17:59 < tomshreds> othiym23 any docs on that please? thanks
17:59 < othiym23> but you still have to use an iterator to get the results out as a stream or using foreach
17:59 <@Nexxy> this.checkIfAuth(userIsAuthed)
17:59 <@Nexxy> TAH DAH
17:59 < othiym23> tomshreds: well, I used the source ;)
17:59 < othiym23> I don't recommend it
18:00 < Amzul> hi, is this the right repo for node.js https://github.com/joyent/node.git ? 
18:00 < superjoe> yes
18:00 < tomshreds> ok
18:00 < Amzul> thanks
18:00 < othiym23> I sort of feel like mongodb-should be fired into the heart of the sun, but that's only because I'm having to interface with it at a very low level and witness how the sausage gets made
18:00 <@Nexxy> with the gnashing of teeth?
18:00 < othiym23> more like lots of heavy sighing, Nexxy
18:01 <@Nexxy> and sad trombones?
18:01 < medikoo> tomshreds: http://stackoverflow.com/questions/10545087/how-to-use-module-q-to-refactoring-mongoose-code/10554943#10554943
18:01 < othiym23> and don't even get me started on the tower of bullshit that results when mongoose is added to the mix
18:01 < tomshreds> medikoo: thx I'll check this out
18:03 < niggler> does node implement arrays in a way similar to perl (where it starts somewhere in the middle of the block so that shift/unshift are somewhat efficient
18:03 < medikoo> tomshreds: check also this: http://stackoverflow.com/questions/11912573/node-js-deferred-promisify-mongoose/
18:03 < tomshreds> medikoo: yay thx
18:04 <@Nexxy> yeah cuz naming your functions would be way too hard
18:04 < tomshreds> the whole promise thing seems a bit weird
18:04 <@Nexxy> better add more modules instead.
18:04 < tomshreds> Nexxy: stop bashing, I name my function correctly, what's the matter with dont wanting callbacks?
18:04 < othiym23> there are about 3 promise / future schemes in the MongoDB driver by default
18:04 <@Nexxy> tomshreds, bashing?
18:04 < othiym23> mongoose adds at least one more
18:04 <@Nexxy> you clearly don't know the meaning of bashing, lol
18:05 < othiym23> if you're using an external library with either of those, you are doing something very very wrong
18:05 < tomshreds> I meant, being rude
18:05 <@Nexxy> all apologies
18:05 < medikoo> tomshreds: for me it solves the problem, it's popular and already old concept, I don't take it as weird
18:05 < tomshreds> I'm very skeptical with the "non-callback" things, but I wanted to explore, more for fun than anything else
18:05 <@Nexxy> tomshreds, have you examined the possibility that you're actually just being a bit too sensitivE?
18:06 < tomshreds> medikoo: glad to know it's not weird, I'll check it out
18:06 <@Nexxy> I mean, this is IRC.
18:06 <@Nexxy> I'm being very very polite for IRC
18:06 <@Nexxy> :)
18:06 < tomshreds> Nexxy hehe maybe :P
18:06 < othiym23> Nexxy's being very polite for a Nexxy
18:06 <@Nexxy> rofl
18:06 <@Nexxy> I'm actually very nice!
18:06 < othiym23> you are!
18:06 <@Nexxy> don't make me revoke your star privileges
18:07 < tomshreds> I took it as a personal attack and I shouldn't, sorry about that
18:07 <@Nexxy> tomshreds, it's oki :)
18:07 <@Nexxy> I just want you to write good code
18:07 < dystie> is easy to misread people on irc.
18:07 <@Nexxy> that's easy for others to read
18:07 < tomshreds> :) glad that's over now
18:07 < tomshreds> yeah a lot
18:07 <@Nexxy> phew~!
18:07 <@Nexxy> ♥
18:07 < Rujaun> How suited is mongodb for a product review website? Consisting of category id's and manufacturers, products?
18:07 < medikoo> tomshreds: it's hard to go far with just callbacks, when flow gets complicated it's better to take abstraction level higher
18:07 < dystie> hey.  on nodejs stuff = is there anything i should know from a security perspective on passing data from it to/from jetty?
18:07 < dystie> via http
18:08 <@Nexxy> I like to apply callbacks in the manner of partial functions
18:08 < othiym23> seriously, I know the documentation on the mongodb driver is not the best, but do take a moment or two to figure out how to work with Cursors if you want a more direct-looking style in your code
18:08 < tomshreds> But Nexxy let's say I have this code https://gist.github.com/3874370 what should I rename/do? I only wanted to skip some {} hehe
18:08 < othiym23> using q or promisify or whatever really shouldn't be necessary, at least for the mongo pieces of your app
18:09 < tomshreds> medikoo: that's what I'm looking to do, because if I keep on doing it I'll end up with too many callback which will make my code hard to understand
18:09 < Rujaun> How suited is mongodb for a product review website? Consisting of category id's and manufacturers, products?
18:09 < othiym23> if you use something like github.com/flatiron/broadway or github.com/c9/architect and pull your DB calls out into a data access layer, you can come up with a much cleaner approach overall
18:09 < tomshreds> Damn, I love to hang on this channel. I ALWAYS learn stuff everyday.
18:09 < tomshreds> Sad part is, I refactor ALL THE THINGS everyday lol
18:10 < othiym23> Rujaun: if the data looks relational, why not just use PosgtreSQL or MySQL?
18:10 < dystie> tomshreds:  heheheh
18:10 < othiym23> if you're going to be doing any joining or projecting, trying to make mongodb do what you want is going to be a pain
18:10 < othiym23> well, not projecting, that part's easy
18:10 < othiym23> but joins in mongodb are sucky
18:10 < Rujaun> othiym23: Cause the schema may change allot. I want all reviews under one table/document.
18:11 < othiym23> then you should probably plan on storing the categories / tags directly on the review object
18:11 < tomshreds> But what's the BEST way of doing the non-callback thing? Is deferred module good?
18:11 < othiym23> mongodb and normalization don't really get along, IMO
18:11 < Rujaun> othiym23: And obviously I will use nodejs.
18:12 < Rujaun> othiym23: ok but lets say I have a few categories... each product will have a category right? should I save the category id in product or the category name itself?
18:12 < othiym23> tomshreds: I personally would go for using cursors, stream the results, and then have the thing that handles the stream written as an event handler
18:13 < othiym23> Rujaun: save the category name, is my advice
18:13 < tomshreds> othiym23: oh sheet, any example of this? You've lost me a little.
18:13 <@Nexxy> tomshreds, https://gist.github.com/3874404
18:13 < Rujaun> othiym23: How will performance be for querying on the category name?
18:13 <@Nexxy> functionally equivalent
18:13 < othiym23> working with IDs and joins is going to hurt, and if you want to do a mass rename / consolidation of categories later, it's going to be painful either way and require some kind of mongodb mapreduce
18:13 <@Nexxy> much easier to read
18:13 <@Nexxy> no callback hell
18:13 <@Nexxy> and no modules!
18:13 < tomshreds> Nexxy: this is a very interesting approach. wow didn't think of this
18:14 < tomshreds> Thanks for this!
18:14 <@Nexxy> :)
18:14 < tomshreds> I'll study it a little more and will try to implement this in my project. Great finding! ;-)
18:14 < medikoo> tomshred: try yourself, I'm constantly working with it and it works great. Still it's not 5 minutes and everything is clear, devote some time to understand concept well
18:14 <@Nexxy> ^-^
18:14 <@Nexxy> this is how I compose many of my reusable components
18:14 <@Nexxy> it's worked well for me
18:14 < othiym23> Rujaun: if you put an index on the category field, it will be as fast as putting it in a separate table
18:15 < othiym23> and depending on how many categories you have, it may not even be that huge an index
18:15 < tomshreds> I feel dumb now for never thinking of doing this haha
18:15 <@Nexxy> tomshreds, it's not that at all
18:15 < othiym23> I still think a relational approach plus some kind of simple migration framework is better in the long run, but it's your data!
18:15 < Rujaun> othiym23: ok so I still will need a "lookup" document with the category name and a web safe name (slug).
18:15 <@Nexxy> also I missed an extra );
18:15 <@Nexxy> but you get the idea
18:16 < tomshreds> hehe yeah, at the end, you are really kind :-) I misjudged you haha
18:16 <@Nexxy> tomshreds, once you get the hang of breaking your functionality out like this
18:16 <@Nexxy> you realize that you can chain them together in various ways for disparate functionality
18:16 <@Nexxy> without having to write new code
18:16 < othiym23> Rujaun: I'd embed the category as an object, then, with short name and slug fields
18:16 <@Nexxy> tomshreds, no worries :) I'm glad I could help
18:17 < othiym23> but at this point I'd be looking longingly at having real relations and 3rd normal form ;)
18:17 < shanimal> callbackhell.com was a good read this morning
18:17 < Rujaun> othiym23: I see well thanks for the advice. even though this is a nodejs channel =)
18:17 < othiym23> tomshreds: also, doing it that way allows you to start doing some fancy metaprogramming later on, especially if you come up with a consistent interface for each of the helper functions
18:18 < tomshreds> this is very cool.
18:18 < tomshreds> I'm glad I asked it here, thanks everybody!
18:18 < tomshreds> shanimal: this seems like a good read, thx
18:20 < shanimal> Nexxy:  i want to do some stuff on github like that, any reading you can suggest
18:20 < gavri> how do you get sequelize to play well with q.js which follows the Promises/A standard? I'm creating a deferred object, and passing its node-style callback to sequelize's done() function. is there a better way?
18:24 <@Nexxy> shanimal, things like what?
18:25 < gavri> I guess my question could be more general. is there a pattern for making incompatible promise-based libraries work well with each other?
18:25 < medikoo> gavri: sequelize doesn't seem to follow any standard, it's not promises, it's not CPS NodeJS style, you need to write specific wrappers to have something generic, probably what you're doing is best you can do
18:25 < shanimal> i'd like to contribute to projects but i really need an overview of how to do that, maybe write a gist and fork, pull, etc.
18:26 < othiym23> gavri: callbacks are pretty much your universal shim between different flow control strategies
18:26 < shanimal> just need a good tut
18:26 < medikoo> gavri: you need to approach them individually, for each of them you probably can write set of functions that will make transition possible
18:26 < gavri> othiym23: yeah, but instead of shimming all over the codebase, I was wondering if there are recommended ways to do it in a clean way
18:27 < gavri> medikoo: k, thanks
18:27 < medikoo> gavri: use libraries that at low-level use NodeJS callback style, it's the main standard, avoid the others
18:27 <@Nexxy> shanimal, I would start by finding a project you're interested in and understanding how it works
18:28 < medikoo> gavri: having that, you can decide whether you want to write callback style, or use promises to construct your flow
18:29 <@Nexxy> gavri, the answer is always callbacks
18:30 < gavri> my intention is to avoid nested callbacks like async.js helps do.
18:33 < tomshreds> Nexxy: amidoinitrite? https://gist.github.com/3874544
18:33 <@Nexxy> tomshreds, yeah looks good!
18:34 < othiym23> gavri: my recommendation would be to avoid sequlize, because its nonstandard interface is what causes all that shimming to be required in the first place
18:34 < shanimal> thanks Nexxy. I think the idea was that I had some code that sits in a folder and its a bunch of utility stuff that uses require js. I constantly have to figure out how to pull that code into my projects without having copies of it everywhere
18:34 < shanimal> i finally started making a lib folder that sits on the root of all my projects and i symlink to it
18:35 < shanimal> but it doesn't feel right
18:35 < gavri> othiym23: it does provide regular node style callbacks
18:35 < gavri> othiym23: but it also provides what I think are promises that I thought I could use
18:36 < chapel> tomshreds: line #44 looks like you have a typo
18:37 < chapel> you have upload as the callback, shouldn't that be uploadElement?
18:38 < medikoo> gavri: It looks far from promise (only common thing is separate success/error callback), but if it works for you, then you're good
18:38 <@Nexxy> tomshreds, also i'm not seeing buildElement called
18:38 < tomshredsMobile> Yes you are right
18:38 <@Nexxy> tomshreds, other than that, I think you're on the right track
18:39 < chapel> all my code uses cascading callbacks, works well
18:39 < tomshredsMobile> Nice thanks
18:39 < chapel> fyi, function declarations hoist
18:39 < chapel> so you don't have to have the initial call at the bottom
18:39 < timoxley> shanimal dump it on github, then depend on it in your package.json
18:40 < chapel> makes it easier to read that way, since it goes down
18:40 < tomshredsMobile> Fixed
18:40 < gavri> medikoo: I guess I'll just use the node style callbacks and pass in the deferred object's nodestyle callback function. thanks, everyone
18:41 < shanimal> right? what about for front end projects? yeoman?
18:41 < chapel> tomshredsMobile: that means you can take line 44 and put it above 26
18:41 < timoxley> tomshredsMobile also, you might want to turn those 'helpers' into middleware
18:41 < tomshredsMobile> Yeah right
18:42 < chapel> tomshredsMobile: the other hidden benefit of naming all of your functions is in stack traces
18:42 < chapel> timoxley: yeah that too :P
18:42 < tomshredsMobile> chapel: Good point!
18:42 < chapel> anonymous functions are annoying :P
18:42 < tomshredsMobile> Helpers Will become middleware
18:42 < timoxley> tomshredsMobile e.g. app.post('/upload', checkIfUserLogged, function(req, res, next) {
18:42 < tomshredsMobile> Haha
18:42 <@Nexxy> ;(function() { // best thing evar })();
18:43 < Mian> hella people here
18:44 < timoxley> chapel the downside of naming your functions is naming your functions
18:44 < medikoo> shanimal: I do front-end with this: https://github.com/medikoo/modules-webmake yeoman si too opinionated and based on bower package management system  which is not compatible with Node
18:44 < timoxley> naming things meaningfully is hard
18:44 < LouisT> i hate naming stuff, they always sound so dumb after i do it.. heh
18:44 < chapel> timoxley: its not that hard tbh
18:45 < chapel> timoxley: when its purely for debugging, I go verbose
18:45 < chapel> nothing fancy
18:45 < chapel> it makes it a lot easier to debug
18:45 < timoxley> chapel you're probably right.
18:45 < chapel> Nexxy: I rarely use those, most times I can solve the problem without them
18:45 < timoxley> will add it to my arsenal
18:46 < shanimal> medikoo: i somewhat noticed that, i'll check it out
18:47 <@Nexxy> chapel, I use for clientside
18:47 < chapel> Nexxy: yeah I can see that, nothing against it
18:48 < chapel> just most times I don't need it
18:48 <@Nexxy> helps you prevent things like... oh, I don't know... leaking your pusher channel?
18:49 < mr_lou> Complete noob here. Been reading a bit about Node.js for the first time today. (Trying to find a replacement for PHP, and Node.js seems like it might be it?). I've been searching for some time, and I might just be really stupid, but there's one thing I can't find: What does the javascript source "compile" into? What kind of server is required? Sorry for the noob question.
18:49 < chapel> Nexxy: leaking it where though?
18:49 <@Nexxy> global namespace
18:49 < chapel> if its in code, or transmitted it is readable
18:49 < chapel> oh, well yeah
18:49 <@Nexxy> ;P
18:50 < chapel> thats a clientside specific issue, but you have a point
18:50 <@Nexxy> mr_lou, js (in the case of Node.js) is run in the v8 VM
18:50 <@Nexxy> mr_lou, node takes care of that for you though, you just execute your JS with the `node` command
18:50 < othiym23> mr_lou: the javascript is compiled by the Google V8 JavaScript JIT that's in chrome
18:51 < othiym23> mr_lou: the node executable is V8 plus SSL plus the goodness that makes all the async stuff works, along with a small standard library and the node package manager (npm)
18:51 < othiym23> so compared to PHP, you have an actual server that handles all the web requests as opposed to a plugin that handles compiling the code, a la mod_php
18:53 < mscdex> nodejs.js!
18:53 < mr_lou> Ah ok. I thought for a minute that everything was compiled into something that standard webservers could run.
18:53 < mr_lou> (Not quite knowing what that should be though).
18:54 < shanimal> I'd love to start using node on my current web host
18:54 < mr_lou> But I guess running Node.js stuff does require more control of the server then, than you normally have with a cheap Linux webhotel.
18:54 <@Nexxy> mr_lou, shanimal nodejitsu is dirt cheap
18:54 <@Nexxy> $3 per process
18:54 < othiym23> mr_lou: you could get a cheap vm instance from Joyent and go to town for $.verylittle / mo
18:54 < shanimal> (my current host) == dirt cheap Linux webhotel
18:54 < othiym23> I think Nexxy and I basically just said the same thing
18:55 <@Nexxy> jah lol
18:55 < othiym23> shanimal: if you have a Linode or whatever and have root on your box, you can get Node running very quickly
18:55 < shanimal> "per process" ?
18:55 < othiym23> if you're using a shared host a la Dreamhost, not so simple
18:55 <@Nexxy> shanimal, kind of like "per app" but an app can take more than one process
18:55 <@Nexxy> shanimal, so they just call them drones
18:55 < othiym23> shanimal: nodejitsu's pricing model is akin to Heroku's
18:56 < LouisT> Nexxy: with nodejitsu they run behind a nginx or similar proxy right?
18:56 <@Nexxy> the idea is that you can just scale with extra drones
18:56 <@Nexxy> LouisT, no
18:56 <@Nexxy> node-http-proxy
18:56 <@Nexxy> nginx would negate a lot of the advantages of node
18:56 < LouisT> oh? idk what that is actually o.O
18:56 < chapel> Nexxy: well there are other advantages of nginx
18:57 < chapel> but definitely some drawbacks
18:57 < LouisT> i've seen a lot of issues with websockets with nginx, which is why i asked
18:57 < chapel> LouisT: nginx (at least older versions) only support http 1.0
18:57 < othiym23> if nginx didn't randomly break websockets, it would be way nicer to use with Node
18:58 < chapel> need 1.1 to support websockets
18:58 < othiym23> Nexxy: do you know what jitsu is using for SSL termination?
18:58 < othiym23> stud?
18:58 < mmalecki> othiym23: node-http-proxy
18:58 < othiym23> bleeeaaaargh
18:58 <@Nexxy> lol
18:58 < othiym23> thx mmalecki
18:58 <@Nexxy> CUZ SSL IS SO EXPENSIVE
18:58 < othiym23> it is in node!
18:59 < LouisT> Nexxy: it is if you're broke! heh
18:59 <@Nexxy> do you actually have a performance issue with it though?
18:59 < LouisT> i've resorted to useing startcom for my ssl heh
18:59 <@Nexxy> I mean, that's a nice problem to have
18:59 < othiym23> Nexxy: not right now, but in a previous life SSL termination was the gating factor on our API service
18:59 < chapel> ssl is pretty easy with node
18:59 <@Nexxy> I just have one wildcard cert
18:59 < mr_lou> Nexxy, othiym23, Alright thanks. I'll look further into it.
18:59 < othiym23> and why, in fact, we had to use nginx to front our API
18:59 <@Nexxy> othiym23, I'd be willing to bet it's not as much of an issue anymore
19:00 < othiym23> because we were young and naive and didn't know about stud
19:00 < mmalecki> Nexxy: for *.* domain?
19:00 <@Nexxy> mmalecki, no just one domain
19:00 < mmalecki> I bet it costed much XD
19:00 <@Nexxy> I think about $200ish a year
19:00 < chapel> Nexxy: digicert?
19:00 <@Nexxy> ummm
19:00 <@Nexxy> RapidSSL
19:00 <@Nexxy> GeoTrust
19:00 < othiym23> we tried to have a wildcard cert and it was great except for how it Didn't Fucking Work and would randomly give users alarming browser messages
19:01 < mr_lou> Nexxy, Oh... I better ask upfront. One thing I use a lot with PHP, is the image generating stuff. Dynamically creating images on the server. Do I dare hope Node.js can do something like that too? Graphics stuff, like drawLine(), drawText(), and server it as an image/png mime?
19:01 <@Nexxy> yes
19:01 < mr_lou> Nice!
19:01 < mr_lou> :-)
19:01 < LouisT> mr_lou: it can, and it's fantastic
19:01 <@Nexxy> I don't use it personally but
19:01 <@Nexxy> I'm told it's great
19:01 < mr_lou> Groovy.
19:01 < mr_lou> Thanks
19:02 < LouisT> mr_lou: http://failbot.me/examples/tpb.njs?3d
19:02 < LouisT> that's with node
19:02 < mr_lou> Oh, very nice LouisT!
19:02 < mr_lou> Thanks
19:02 < LouisT> http://failbot.me/examples/tpb.njss
19:02 < LouisT> that's the source, not very pretty but it's just quick examples in /examples/ dir
19:03 < TheEmpath> Thought experiment: JSON doesn't deserialize to classes.  To get around this, someone scans a JSON for the key "type" and instantiates a class based on that.  I have great reservations with this approach.
19:03 < TheEmpath> By making a reserved key for JSON, you open up the door for all kinds of unintended side effects.
19:03 < othiym23> TheEmpath: yeah probably
19:03 < TheEmpath> I just can't seem to create the use case as to why this is bad
19:04 < othiym23> well, it's not, as long as there's input validation and a defined schema of what types are going to be mapped
19:04 < othiym23> if you add the ability to dynamically extend the number of classes mapped, then things could get wiggly fast
19:05 < TheEmpath> which we do
19:05 < TheEmpath> I don't like the idea of JSON as the vector for RPC
19:08 < TheEmpath> its not hard for someone to create a type that registers, say, a new instance of an HTTP server rofl
19:08 < othiym23> I think the best argument to make is that RPC is subtle and hard and there are already a billion perfectly cromulent RPC mechanisms out there, many of which support Node
19:09 < mr_lou> LouisT, Thanks a lot.
19:14 < tomshreds> hey guys, what do you use to store passwords?
19:14 < LouisT> tomshreds: store them with what?
19:14 <@Nexxy> my mind
19:14 < LouisT> it all depends on what you're doing
19:15 < tomshreds> store user passwords in a mongodb database for example
19:15 < othiym23> a text file named DONTREADME.txt in my home directory
19:15 < tomshreds> instead of evil-y storing them as plain text
19:15 < LouisT> tomshreds: oh, i have no idea then, as i use openid for the most part
19:15 < othiym23> use bcrypt or some other expensive password hashing system
19:15 < LouisT> you could SHA512 them or osmething heh
19:15 < othiym23> don't use SHA
19:16 < othiym23> too (computationally) cheap
19:16 < LouisT> oh k
19:16 < tomshreds> Is there a good way of storing them? All I heard in the last year was: Oh MD5 sucks, Oh SHA sucks, oh *** sucks :P
19:16 < othiym23> yes, use bcrypt
19:16 < othiym23> there is at least one decent bcrypt module for Node
19:17 < othiym23> https://github.com/ncb000gt/node.bcrypt.js/
19:17 < tomshreds> nice I'll look it up
19:17 < tomshreds> oh
19:17 < tomshreds> thanks
19:17 < chapel> tomshreds: its easy to use
19:17 < tomshreds> that's what I wanted to read! :D
19:17 < tomshreds> haha
19:17 < tomshreds> SHA with salts sounded way too complicated
19:18 <@Nexxy> bcrypt is false sense of security
19:18 < chapel> Nexxy: I agree
19:18 < chapel> but its better than not doing it
19:18 < othiym23> Nexxy, *passwords* are a false sense of security
19:18 < LouisT> oh bcrypt seems decent, but the issue is, if someone can access your database why couldn't they just get the hash anyway?
19:18 < tomshreds> ?*&%?$#@
19:18 < othiym23> but if you're gonna store passwords, bcrypt is better than MD5 / SHA
19:18 < pachet> encryption is like baked potatoes
19:18 < pachet> only good with salt
19:18 < tomshreds> so what should I use then?! hahahahaha
19:18 < LouisT> tomshreds: openid! heh
19:18 < othiym23> tomshreds: we're crypto bikeshedding, ignore us
19:19 < tomshreds> but let's say MR X does NOT have openid?
19:19 < chapel> tomshreds: bcrypt if you don't want to invest in learning all the ins and outs
19:19 < tomshreds> othiym23: haha ok
19:19 < LouisT> tomshreds: i'm sure they have an account SOMEWHERE that is an openid provider
19:19 < othiym23> LouisT: the thing about bcrypt is that even if you get the hash / salt, it's expensive to compute, making generating rainbow tables hard
19:19 < LouisT> i use google, yahoo, and stackexchange when i use openid
19:19 < baudehlo> well it makes a rainbow table impossible.
19:19 < othiym23> also, writing an OpenID provider made me want to shoot myself
19:19 < LouisT> i've never had anyone not have at least one of those
19:20 < jmoyers> first world problems: 1pm meetings and long lines at stupid food places
19:20 < jmoyers> where is the taco truck when you need it
19:20 < tomshreds> I don't want to force my client to use OpenID even if I consider it "a good idea"
19:21 < othiym23> baudehlo: nothing is impossible in crypto; it's merely very expensive
19:21 < tomshreds> jmoyers: this is really a pain in the butt, knowthatfeel
19:21 < EvilPacket> with time everything in possible (in crypto)
19:21 < pachet> with crypto everything is possible (in time)
19:21 < LouisT> tomshreds: go with bcrypt and maybe suggest using openid to people or something?
19:21 < LouisT> idk
19:21 < EvilPacket> heh
19:22 < tomshreds> LouisT I thought I'd use bcrypt for now and then introduce OpenID for sure, so this is the best of both world
19:22 < LouisT> i like openid because it lets google and yahoo deal with security of user passwords heh
19:22 < tomshreds> ^^good point LouisT
19:22 < LouisT> i'm sure they're far more better at it than i am
19:23 < baudehlo> othiym23: umm no. A salt makes a rainbow table attack infeasible.
19:23 < EvilPacket> baudehlo: depends on the algorithm 
19:24 < EvilPacket> tell that to oclhashcat a few gpu's and md5 :-)
19:24 < chapel> eh, openid isn't that great
19:24 < othiym23> baudehlo: like I said, really expensive (in time)
19:24 < LouisT> chapel: its better than me trying to secure user passwords
19:24 < chapel> LouisT: more people have never heard of or have access to openid than do
19:25  * LouisT shrugs
19:25 < baudehlo> othiym23: yes as in not using a rainbow table.
19:25 < LouisT> everyone i deal with would have one of the three providers i use
19:25 < chapel> LouisT: and there are a lot of people that know about things like openid and refuse to use it if the site only offers that
19:26 < LouisT> that seems like a personal issue tbh
19:26 < LouisT> if they feel that way, then that's their issue
19:26 < Guest20616> the reality is that it's silly to try to support every single possible login method
19:26 < Guest20616> your brain will explode
19:26 < Guest20616> pick one, stick to it
19:27 < LouisT> what he said
19:27 < chapel> sounds good to me
19:27 < nlf> if your users hate it, tell them "sorry, but that's what i use"
19:27 < nlf> and they'll either get over it and use it, or they won't
19:28 < LouisT> i mean really, my current project didn't even have user logins until about a day or two ago until a couple people asked me for it.. so if they dislike what i chose, then i don't really care if they use it or not
19:28 < nlf> secure credentials to the best of your ability, and be prepared to notify users if there's a leak
19:28 < nlf> it's all you can do
19:29 < nlf> even if you use openid, what if your user does something silly and ends up giving up their openid login?
19:29 < nlf> now that attacker has access to all of the sites they use openid on
19:29 < LouisT> then thats on them
19:29 < nlf> just because it's not your problem, doesn't mean you don't have to be prepared to handle it
19:29 < LouisT> as long as it's not from my stupidity, i'm fine with it
19:30 < jhsto> hey guys, quick question, I have this form with fields named as user[email] and user[password], which to I'm making post request with mikael's request, but i cant get it to format right
19:31 < jhsto> im only getting {} as res.body
19:31 < jhsto> im using express
19:31 < LouisT> AHA, mr_lou, npmjs finally loaded for me heh... https://npmjs.org/package/canvas
19:33 < chapel> jhsto: should be named body['user[email]'] = email
19:33 < chapel> though request might handle that if you feed it an object
19:34 < tomshreds> Please tell me if I'm doing this right: I use bcrypt. When I want to check if a password is good, I encrypt that password and use .compare() to compare hashes? right?
19:35 < tomshreds> Or don't I need to encrypt it or not?
19:35 < chapel> don't need to encrypt
19:35 < chapel> just compare pass against hash
19:35 < tomshreds> shit it doesn't work
19:36 < chapel> tomshreds: you working from the example?
19:36 < jhsto> chapel: im not sure what you mean, but im having the problems at formatting my .form part right, currently it looks like this: .form({user:{email:'example@mail.com',password:'example'}})
19:37 < tomshreds> Yes, chapel. https://gist.github.com/3874971
19:37 < jhsto> but, when the post is made, i cant access the form data on my another express server
19:38 < chapel> tomshreds: the first arg returned from compare is an error
19:38 < chapel> bcrypt.compare(password, hash, function (err, res) { … })
19:38 < tomshreds> there's no error returned
19:38 < chapel> oh
19:38 < chapel> sorry, I read that wrong
19:39 < tomshreds> np :P
19:39 < chapel> are you storing the password or the hash?
19:39 < tomshreds> I put my password hash directly in a string
19:39 < chapel> in mongo (or wherever)
19:39 < tomshreds> in mongo
19:39 < LouisT> also, good on you for using mongodb heh
19:39 < tomshreds> so it's like "$2a$10$6gdoP8Zg9QJ.BUMT.T/x7uUHoTgxA0L3lQlWu2u3IO7niijnW8J3i" in the db
19:40 < tomshreds> (that's not my password but gibberish encrypted to hash)
19:40 < tomshreds> so basically it does: bcrypt.compare('mypassword', '$2a$10$6gdoP8Zg9QJ.BUMT.T/x7uUHoTgxA0L3lQlWu2u3IO7niijnW8J3i', function...
19:41 < chapel> tomshreds: only thing I can think is either its not being saved right, or its not being retrieved right (user that is)
19:41 < chapel> there is a scoping issue in your code btw
19:41 < tomshreds> I tested both values and they're fine
19:41 < tomshreds> oh yes?
19:41 < chapel> line 9 wont have access to user
19:41 < chapel> from checkPassword callback
19:42 < tomshreds> Oh.
19:42 < chapel> few ways to handle it, the simplest is to just do var user at the top of the function
19:42 < tomshreds> Very good point. I'm new to all that "name your methods" concept. Sorry
19:42 < chapel> no worries
19:42 < chapel> some people like using one object
19:43 < chapel> and adding to the object
19:43 < chapel> like var obj = {}
19:43 < chapel> then obj.user = user
19:43 < tomshreds> oh interesting
19:43 < chapel> then you'd have access to user through obj.user
19:44 < tomshreds> good idea
19:45 < chapel> tomshreds: if you have anyone else work with your code, come up with a convention for it that makes sense
19:45 < chapel> lik var o = {}
19:45 < chapel> idk, not a real issue
19:47 < tomshreds> would it be simpler if I'd user var userToReturn = null; and then set it when I got the user, and return it after?
19:47 < tomshreds> Since there's only one thing to play with in this case
19:47 < chapel> well, for that case, yeah
19:47 < tomshreds> but I really like the idea of var o = {}; though
19:47 < chapel> simpler to just define a variable
19:48 < tomshreds> I just don't get why my password comparison fails.
19:49 < chapel> why not test the password by encrypting it and compariing the hashes
19:49 < chapel> at least to debug
19:49 < tomshreds> I encrypted my password like this: var salt = bcrypt.genSaltSync(10); var hash = bcrypt.hashSync(password, salt);
19:49 < tomshreds> that's what I'm currently doing ;-) hehe good idea
19:50 < chapel> hmm
19:50 < chapel> shouldn't use sync
19:50 < chapel> sync in node halts the whole process
19:50 < chapel> and bcrypt.hash supports auto salt gen
19:50 < tomshreds> I used it only to create a small "hashPassword" script, I won't use it in my signup process
19:50 < tomshreds> oh ok
19:51 < chapel> so bcrypt.hash(password, 10, callback)
19:52 < tomshreds> looks like my encrypted password changed wtf lol
19:54 < tomshreds> it always changes WTF
19:54 < tomshreds> the hash always changes it is normal chapel ?
19:54 < tomshreds> everytime I encrypt it, isn't it like MD5?
19:55 < tomshreds> oh and now it works
19:55 < jhsto> chapel: thanks, i got my issue now sorted out
19:55 < tomshreds> holy crap
19:56 < tomshreds> awesome itworks thx
19:56 < chapel> jhsto: sorry wasn't ignoring you, just forgot to reply :P
19:56 < chapel> glad its sorted
19:56 < chapel> tomshreds: what was the issue?
19:58 < tomshreds> chapel: I really don't know, I guess something was cached from my browser because each time the hash was changing
19:58 < jhsto> chapel: its ok, im running late anyhow, so i decided to not ask any further questions, since they would not have made any sense anyway
19:58 < tomshreds> chapel: look at how the last chars change: https://gist.github.com/3875105
19:58 < tomshreds> that's debug info I was outputing
19:58 < tomshreds> I was encrypting the password, and comparing the hashes
19:58 < tomshreds> Anyways now I tested it many times and it 100% works
20:08 < aroman> am i weird to really not want to use both mongodb AND redid in my app? I really do need both (the former as a proper DB, and the latter to power multi-process socket.io sessions), but i feel really bad about depending on two separate databases for my app. am I just insane?
20:09 < nlf> aroman: use what you need. sounds like you've got a legitimate purpose for each, so i say go for it
20:10 < aroman> nlf: yeah they're both definitely being utilized for their respective strengths. but I feel bad about having to wait and depend on *two* external databases in my app. plus i've got to shell out some extra cash every month for some low-tier redis option (since I really don't need much power behind it)
20:10 < niggler> is there a native sprintf in node?
20:11 < nlf> depending on two databases isn't that big of a deal, but you could certainly check cost to benefit of having redis
20:11 < shanimal> lodash
20:12 < nlf> if there's a way to work around it that doesn't hurt performance too severely, then consider it
20:12 < nlf> otherwise just be happy that it works
20:14 < nsm> do nodejs office hours still happen?
20:15 < aroman> nlf: well, basically it's looking like I could either do the recommended production-ready thing, which is use redis, or try to roll my own system using something like dnode
20:15 < aroman> (i'm just trying to get socket.io to work with multiple node processes is all)
20:16 < shanimal> niggler: http://stackoverflow.com/questions/2697899/is-there-a-sprintf-equivalent-for-node-js looks like you can do 
20:16 < shanimal> var printf = require('util').format
20:16 < shanimal> http://nodejs.org/docs/v0.8.2/api/util.html#util_util_format_format
20:18 < niggler> shanimal: does it support width and other operators/
20:18 < niggler> http://nodejs.org/docs/latest/api/util.html#util_util_format_format
20:18 < niggler> like %7.2f
20:19 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:19 < garydevenay> Hey
20:20 < shanimal> doesn't look that fancy
20:25 < mscdex> http://www.diveintojavascript.com/projects/javascript-sprintf
20:25 < mscdex> there's one ^
20:28 < mscdex> here's a node package of that same lib: https://github.com/maritz/node-sprintf
20:29 <@isaacs> jmar777: Sure.  https://github.com/joyent/node-in-the-industry
20:29 <@Nexxy> isaacs, !
20:29 <@isaacs> Nexxy: !?
20:30 <@Nexxy> #!
20:30 < jmar777> isaacs: thanks. we're doing some (subjectively) cool stuff in the energy consumption monitoring / cost savings space. thought it might present a cool use case. i'll submit a pull request
20:30 <@isaacs> Nexxy: "" invalid interpretr
20:30 <@Nexxy> woops lol
20:31 <@Nexxy> #!/usr/bin/env node
20:31 <@isaacs> Nexxy: much better.  now i feel more at home
20:31 < ppppaul> can someone recommend a simple nodejs directory traverser? (going to be doing parallel tasks on 20k files)
20:35 < CoverSlide> how often does the 'in the industry' section get refreshed. it changed once but whenever i refresh i get the same thing again
20:39 < Opera> Hey, gonna try node.js for the first time and I'm trying to install websocket support with "npm install websocket". However it fails when trying to compile. It says it requires Visual Studio and Python on Windows, but I already installed those?
20:40 -!- Topic for #Node.js: node.js - useful for controlling helicopters
20:40 -!- Topic set by mbalho [~max@ve.5bpbxlsy.vesrv.com] [Wed Oct 10 11:51:27 2012]
20:41 -!- isaacs changed the topic of #Node.js to: node.js - useful for controlling helicopters - Reminder: Be nice.  This room is a privilege, not a right.
20:44 < Opera> I think the solution is something ultra simple, but meh
20:44 < Opera> Anyone had similar problem?
20:44 < itzmjauz_> Opera: ehrm. 
20:44 <@isaacs> Opera: can you copy the output to gist.github.com or pastie.org or something?
20:44 < itzmjauz_> Is visual studio compiling your nodejs native modules
20:45 < itzmjauz_> isaacs: Sprunge :D!
20:46 < CoverSlide> bullfighting helicopters ftw! https://github.com/substack/matador-copter
20:50 < Opera> isaacs, here's the output http://pastebin.com/1WCxBVYs
20:50 < Opera> Guess I need to edit some settings or am I doing this totally wrong?
20:50 < CoverSlide> Opera: do you have visual studio and python?
20:51 < Opera> Yes, Python 2.7 and Visual C++ 2010
20:52 <@isaacs> Opera: i dunno.  i'm not familiar with that lib.
20:52 <@isaacs> Opera: also, i'm kind of a windows n00b :)
20:52 < othiym23> niggler: if you're still looking for a sprintf in node, check out util.format
20:52 <@isaacs> TooTallNate: ping?  maybe you have any insight into Opera's issue?
20:52 < othiym23> niggler: there are only two types (%d and %s), but most of the formatting options work how you'd expect
20:53 < TooTallNate> Opera: can you run it with --websocket:verbose?
20:53 < TooTallNate> othiym23: there's also %j
20:57 < CoverSlide> I wouldn't rely on util.format for stuff in production. try tracing through the code when you use it, it's like a friggin maze. better to just concat a string
20:57 < TooTallNate> CoverSlide: what do you mean it's like a maze?
20:58 < TooTallNate> cause of the printf formatting?
21:02 < CoverSlide> well the fact that it calls inspect, which calls formatValue, which could call formatProperty or formatPrimitive ... trace through it sometime it's just overkill for anything other than debugging
21:04 < IHeartJavaScript> I have a question about node
21:05 < lohkey> ?
21:05 < IHeartJavaScript> If a say do require('mymodule.js');
21:05 < IHeartJavaScript> In the module, can I call functions from the porgram that requested it?
21:05 < IHeartJavaScript> *program
21:06 < vicapow> IHeartJavaScript: nope. that's why it's a module
21:06 < diverdude> is it possible to read environmental variables from node.js?
21:06 < IHeartJavaScript> any work arounds?
21:06 < vicapow> diverdude: yep
21:06 < vicapow> process.env
21:07 < vicapow> IHeartJavaScript: you might want to rethink how you wrote you module.
21:07 < IHeartJavaScript> The problem is
21:07 < IHeartJavaScript> It's not meant as a module, more or less an include
21:07 < IHeartJavaScript> .
21:08 < vicapow> you could pass it the function you want to all as an argument
21:08 < IHeartJavaScript> Is there any way to pass the whole program?
21:08 < vicapow> IHeartJavaScript: nope. for good reason
21:08 < IHeartJavaScript> vicapow: :/ may I ask the reason?
21:09 < diverdude> vicapow: how=
21:09 < diverdude> ?
21:09 < CoverSlide> IHeartJavaScript: you can use module.parent
21:09 < vicapow> okay, so that's a thing
21:09 < IHeartJavaScript> CoverSlide: I'll try, I guess
21:10 < vicapow> but that's not really a function of the program. that's the object that required the module
21:10 < IHeartJavaScript> could I do.
21:11 < IHeartJavaScript> module.parent.foo(bar);
21:11 < lohkey> all node modules are wrapped in a closure
21:11 < lohkey> you can also abuse the globals var
21:11 < lohkey> but that never ends up pretty
21:11 < lohkey> great way to make hard to maintain code really fast
21:12 < IHeartJavaScript> prettiness is why I'm using modules in the first place
21:12 < lohkey> yeah, encapsulation is pretty
21:12 < nlf> then use them as modules, not as a way of splitting on file into smaller files
21:12 < IHeartJavaScript> As opposed to cramming everything into one file
21:12 < lohkey> global vars != pretty
21:12 < diverdude> how do i read environmental variables from node.js?
21:12 < lohkey> IHeartJavaScript: you can use modules and still not break encapsulation
21:12 < nlf> diverdude: process.env
21:12 < vicapow> lohkey: +1
21:12 < IHeartJavaScript> nlf: Alright, how would I go as dthe second approach?
21:13 <@Nexxy> diverdude, process.env
21:13 < vicapow> diverdude: process.env
21:13 < MI6> joyent/node: isaacs v0.8 * 218f08d : npm: Upgrade to 1.1.63 - http://git.io/Q0Okkw
21:13 < nlf> IHeartJavaScript: write your module so it exports a function
21:13 < nlf> require it from your parent, and call the exported function there
21:13 <@Nexxy> lol
21:13 < IHeartJavaScript> ok
21:14 < nlf> that's the way modules are intended to work and the way you'll get the best results
21:14 < vicapow> diverdude: i.e. process.env['YOUR_ENV']
21:14 < nlf> sure, there are ways to do what you want to do, but it's ugly and hackish
21:14 < CoverSlide> actually it would be module.parent.exports.foo()
21:15 < CoverSlide> but that's only if it's been exported before the child calls it
21:15 < IHeartJavaScript> nlf: :/ So there's no #include "other file.h" like in C?
21:15 < nlf> no
21:16 < IHeartJavaScript> ah ok
21:16 < IHeartJavaScript> well, I need to go.
21:16 < niallo> eval(fs.readFileSync("file.h")) :-)
21:16 < IHeartJavaScript> cya
21:16 < vicapow> IHeartJavaScript: you should read up the idea of coercion vs cohesion. a module should reduce the amount of communicate with the world outside itself.
21:16 < IHeartJavaScript> eval is evil
21:16 < nlf> well, there's that haha
21:16 < asm> othiym23: what is sprintf?
21:17 < vicapow> whoops. i meant : cohesion and coupling
21:17 < vicapow> http://en.wikipedia.org/wiki/Coupling_(computer_programming)#Coupling_versus_Cohesion
21:17 < niallo> asm: man 3 sprintf
21:18 < asm> oh nice
21:18 < asm> thanks niallo 
21:18 < niallo> although snprintf is a rather better idea :)
21:18 < asm> does it matter in node?
21:20 < CoverSlide> IHeartJavaScript: https://gist.github.com/3875552 << using nested modules in javascript
21:20 < CoverSlide> *node
21:21 < owenb> Hey guys. Just had a thought whilst trying and failing to find a streaming version of Stylus (isaacs, I see you had to roll your own wrapper for npm-www). Finding 'true' streaming modules on npm-www is currently hard work...
21:21 < owenb> Many modules claim to be streaming or have the word 'stream' in their name but aren't at all (I know I am 100% guilty of that with the current version of SocketStream!). So a thought: Would it be worth supporting something like 'streaming':true in package.json so we quickly find modules that just do one thing which we can pipe() data into?
21:21 < CoverSlide> owenb: no
21:23 < MI6> joyent/node: isaacs created branch v0.8.12-release - http://git.io/v7eTwQ
21:26 < ryanrolds_w> Contemplating writing a service in Node.js that badgers Rackspace support on the status of creates and resizes as their UI doesn't reflect if the job errored or not.
21:35 < MI6> joyent/node: isaacs v0.8.12-release * 38c72d4 : 2012.10.12, Version 0.8.12 (Stable)  * npm: Upgrade to 1.1.63  * crypto:  - http://git.io/Ghdodg
21:36 < diverdude> How do you guys manage to keep different configs on different machines?
21:36 < diverdude> Like on dev machine use path A 
21:36 < diverdude> on test use path B
21:36 < diverdude> on production path C
21:36 < nlf> https://github.com/HenrikJoreteg/getconfig
21:38 <@Nexxy> diverdude, with NODE_ENV
21:39 <@Nexxy> `NODE_ENV="development" node app`
21:39 <@Nexxy> etc
21:39 < timeturner> is it better to use env variables or config files and change the value in the config file
21:40 < nlf> getconfig is a wrapper around the NODE_ENV environment variable that tells the app what config file to load
21:40 < timeturner> ah
21:40 < timeturner> that makes sense
21:40 < nlf> NODE_ENV=production, config = require('getconfig') and it will load production_config.json and store it in config
21:40 < nlf> change your NODE_ENV to dev, it'll load dev_config.json
21:40 < timeturner> that's sweet
21:41 < nlf> it's been really useful
21:43 < diverdude> nlf: and where should production_config.json be stored?
21:43 < superjoe> is there somewhere to announce new node modules to the world to get some exposure?
21:43 < nlf> diverdude: whatever directory your main module is in
21:44 < nlf> i.e. when you run node whatever.js, it goes in the same directory as whatever.js
21:44 < diverdude> nlf: ah ok...so i should have production_config.json, test_config.json and dev_config.json
21:45 < nicholasf> diverdude: we use a config director
21:45 < nlf> if those are the environments you use, certainly
21:45 < nicholasf> with one nconf file
21:45 < nicholasf> and a defaults.json that holds info for every environment
21:45 < diverdude> nicholasf: what is config director?
21:45 < nicholasf> let me show you
21:46 < nicholasf> diverdude: this is pretty standard across all of our projects, we're going to rip it out into a grunt plugin actually
21:46 < nicholasf> https://github.com/moneytribeaustralia/downstairs.js/tree/master/config
21:46 < gavri> I'm using vows. does anyone know how I can get the exception printed on screen when a test errors out?
21:46 < therealkoopa> Is anyone using dnode? I gues syou could do the same thing by using redis pubsubs, right? But dnode might be a bit cleaner
21:46 < nicholasf> diverdude: everyone has their own defaults.json which is kept out of git via a gitignore. You can override it with --defaults on command line
21:49 < diverdude> nicholasf: so also using this? https://github.com/HenrikJoreteg/getconfig
21:50 < nicholasf> diverdude: we just hand built our stuff around nconf
22:08 < kenokabe> hello linux and mac guys
22:09 < fog> hi
22:11 < othiym23> dang
22:11 < othiym23> no love for Windows
22:11 < kenokabe> it's not unix
22:11 < shinaku_> I use Windows, it's ok.
22:11 < shinaku_> Well, I use Linux and Macs too... right tool for the job. 
22:12 < kenokabe> feel limited right on win
22:12 < jmar777> i use windows for my day job. i prefer natural light over incandescent
22:12 < billy> I prefer natty ice
22:13 < kenokabe> I recently clean installed lubuntu on my MacBookAir
22:13 < kenokabe> MountanLion on VMware
22:14 < LouisT> also, good on you for using mongodb heh
22:14 < LouisT> uh, woops
22:15 < kenokabe> hello aussie
22:17 < richweskus> Heya guys, im running forever and I need my script to wait 10 seconds before re-running
22:17 < richweskus> eg forever --spinSleepTime 30000 nodescript.js
22:17 < richweskus> that however does not work T_T
22:20 < OhOhOhOH> hi
22:21 < OhOhOhOH> I NEED TO RELIEVE MY STRESS NOW!!!!!!!!!
22:21 < OhOhOhOH> STRESS-RELEASE BOMB IN 5
22:21 < OhOhOhOH> 4
22:21 -!- OhOhOhOH was kicked from #Node.js by Nexxy [OhOhOhOH]
22:21 <@Nexxy> uh huh
22:21 < OhOhOhOH> * sulfonyl (~AndChatto@181.sub-174-253-141.myvzw.com) has joined #Node.js
22:21 < OhOhOhOH> * Users on #Node.js: sulfonyl OhOhOhOH richweskus hiroshige AvianFlu mandric rp123 TomWij kenokabe arnedebree jmar777 bartt ramitos fog aroman lwicks esundahl dannyamey wolfeidau laggyluke Oddman PhantomSpark Senji mynameis andrewffff halfhalo jonandersson jcrugzz nicholasf pooriaazimi mike_d simong techthumb fritzy_ bowen199 romainneutron ixti efbeka fly_ ericelliott paradoxquine diverdude pieterv tch
22:21 < OhOhOhOH> ype eckoit devinrhode2 mirzu disnet joshontheweb jp232 codingstream
22:21 -!- mode/#Node.js [+b *!*he1890fac@*.wireless.ksu.edu] by Nexxy
22:21 -!- OhOhOhOH was kicked from #Node.js by Nexxy [OhOhOhOH]
22:22 <@Nexxy> idiot
22:22 < mscdex> ^
22:22 < mynameis> o.O
22:22 < mynameis> jesus
22:22 < richweskus> can anyone help with spinSeekTime?
22:22 < mynameis> did he type all that?
22:22 < kenokabe> punishment 
22:22 < richweskus> trying to delay re running my script by 10 seconds using History
22:22 < richweskus> eg forever --spinSleepTime 30000 nodescript.js
22:25 < kenokabe> mscdex I have been playing a lot with your ncurses-node, great work thx
22:26 < jmar777> bnoordhuis: any reason why https://github.com/bnoordhuis/node-mmap isn't being maintained anymore?
22:26 < mscdex> kenokabe: cool
22:26 < bnoordhuis> jmar777: because it was a bad idea to start with
22:27 < jmar777> bnoordhuis: good enough lol
22:28 < jmar777> bnoordhuis: what would be the best way to stream a crap ton of data as fast as possible. would it just be fs.ReadStream?
22:28 < bnoordhuis> jmar777: yes. it's not yet as fast as it could be but we're working on that
22:29 < jmar777> bnoordhuis: cool. been drooling over some of the java.nio benchmarks. been curious how close a node file stream could get to competing
22:30 < bnoordhuis> jmar777: right now? not close. file i/o is something of a sore spot
22:30 < othiym23> another day, another rev of Node
22:30 < jmar777> bnoordhuis: do you think that's mostly due to shuttling data from "c-land" to "js-land" (wishing I understood the situation well enough to describe that better...)?
22:31 < othiym23> bnoordhuis: is that something the libeio -> libuv rewrite will affect?
22:31 < bnoordhuis> jmar777: not really, the major issue is the overhead of the thread pool
22:31 < bnoordhuis> othiym23: yes, that's the plan
22:31 < diverdude> i have a script chatserver.js which i need to run on startup in my linux machine. it listens to port 8002. how can i do that?
22:32 < sx> Anyone know how to call a remote node js script from within another node js script?
22:32 < jmar777> bnoordhuis: gotcha. is there a ticket/story/groups discussion/etc i could subscribe to or read up on?
22:32 < othiym23> diverdude: if you're on Ubuntu, you can write an upstart job to boot the server at startup time
22:33 < bnoordhuis> jmar777: follow the #libuv channel, that's where we discuss that kind of thing
22:33 < bnoordhuis> jmar777: there's logs if you want them
22:33 < diverdude> othiym23: how is that done
22:33 < jmar777> bnoordhuis: cool - i'll start there. thanks
22:33 < kenokabe> sx only method I know of is using socket.IO then communicate each other
22:34 < sx> ok I phrased that wrong
22:34 < sx> I need to call another local node script from a node script
22:35 <@Nexxy> sx, are you familiar with the require system?
22:35 < kenokabe> yeah require
22:35 < sx> somewhat
22:35 <@Nexxy> just export the function you'd like to call
22:35 < sx> my case is that I need to run the require.js > r.js optimizer when a URL is requested
22:35 < othiym23> diverdude: out of scope for the channel, but here are the Ubuntu dox: http://upstart.ubuntu.com/getting-started.html
22:35 <@Nexxy> ah
22:35 <@Nexxy> no clue about require.js
22:36 < kenokabe> it's not HTML side require, but in node.js
22:36 < kenokabe> it's like #include of c
22:37 < mscdex> require_once.js
22:48 < asm> othiym23: I want a pony
22:50 < othiym23> who doesn't, asm
22:51 < asm> hrm
22:51 < asm> but I really want one
22:55 < othiym23> I'm sorry, asm, but I'm all out of ponies
22:56 < othiym23> all I have is this Unpleasant Horse: http://itunes.apple.com/us/app/unpleasant-horse/id429246613?mt=8
22:56 < asm> what about small horses?
22:57 < tnorris> just read a great article at  html5rocks about use of --trace-opt and --trace-bailout for code optimization. good stuff.
22:57 < tnorris> crazy how well optimized js compilers have gotten.
22:59 < richweskus> http://www.windstone.co.za/images/1.jpg
22:59 < richweskus> thats my horse :D
23:00 < Zak> your horse has a nice hat
23:00 < richweskus> thats me silly
23:00 < richweskus> http://www.windstone.co.za/images/2.jpg
23:00 < othiym23> all I need to do is get libuv in this and everything will be perfect forever: https://github.com/robertkrimen/otto
23:01 < othiym23> Node.go.js
23:01 < othiym23> richweskus: that is a fine horse
23:01 < richweskus> thanks :) he's a beast
23:01 < kenokabe> cool pic, is it AUS?
23:01 < richweskus> no Cape Town
23:01 < Zak> i'd assume ZA from the url
23:01 < kenokabe> I see
23:02 < Zak> we have nice horses in AU too though
23:02 < Zak> i've always wanted to own a horse
23:02 < richweskus> he was given to me
23:02 < othiym23> somebody should send one to asm
23:02 < othiym23> I hear asm wants a horse
23:02 < richweskus> cos when a foal he stood in a shard of glass
23:02 < Zak> :(
23:03 < Zak> poor horsie
23:03 < richweskus> my mom has about 30 of them ill ask if she can package one and perhaps fedex it to asm
23:03 < Zak> make sure you put in a few carrots so it doesn't starve
23:03 < Zak> wait, that's donkeys
23:03 < kenokabe> and air
23:03 < Zak> see, this is why i don't own a horse
23:04 < Zak> kenokabe: just throw in a large leafy plant
23:04 < richweskus> and some oats
23:04 < kenokabe> Zak good idea
23:05 < richweskus> lol i spent all day coding at work
23:05 < richweskus> and now im spending all evening coding at home
23:05 < richweskus> what is life
23:06 < paradoxquine> that life is an awesome life
23:06 < Zak> working sucks
23:06 < richweskus> i did spent an hour at church group
23:06 < richweskus> there is this hot slut joined us
23:06 < richweskus> is great success!
23:06 < Zak> hahaha
23:06 < Zak> i was just about to say, "church group is only good if you have hot chicks"
23:07 < richweskus> i woudlnt go otherwise
23:07 < Zak> i'm not religious
23:07 < Zak> but i still go to church
23:07 < Zak> because my family is religious
23:07 < kenokabe> have u ever code on your horse richweskus
23:07 < Zak> :(
23:07 < richweskus> iv made a youtube vid of an outride
23:08 < richweskus> was quite shaky tho
23:08 < richweskus> anyway
23:08 < richweskus> must go peace
23:08 < Zak> gl with the hot sluts
23:09 < Zak> we will all be thinking of you
23:09 < richweskus> ty playing the treat em mean to keep them keen
23:09 < richweskus> will pay off soon i hope
23:09 < Zak> i bet you have stirrups and once they'r ready to go.. bam
23:10 < richweskus> .ready(bam)
23:10 < richweskus> you know how i roll
23:10 < richweskus> no call backs in that request
23:10 < richweskus> hahahaha
23:10 < kenokabe> have fun richweskus
23:13 < vincentmac> Question about event emitters: Can I use a named function that takes an argument as a listener? Here's a gist with what I'm talking about: https://gist.github.com/3876225
23:19 < paradoxquine> vincentmac: it looks like you are invoking executeSomeWork when passing it as the second parameter of the on
23:22 < therealkoopa> Anyone know of a node module for parson frequencies? For instance: "7 minutes".seconds() -> 420
23:22 < vincentmac> paradoxquine That is what I'm trying to do. You can call a named function on an `.on` listener as long as there are no arguments being passed in.  It looks like they are doing that on node core: https://github.com/joyent/node/blob/master/lib/stream.js
23:22 < thesteve01> anyone try nodeclipse and have some feedback on it?
23:24 < paradoxquine> vincentmac: i don't think that is what you are trying to do. you are trying to provide a function to be called when the event happens, right? you need to pass in a function then, not the result of invoking a function
23:24 < paradoxquine> so not executeSomeWork(stuff) but just executeSomeWork
23:24 < vincentmac> oh. ok
23:24 < paradoxquine> the former invokes the function and returns its result. the latter is the function itself
23:25 < paradoxquine> if you want more info or are confused about that distinction, i would google it or ask ##javascript
23:26 < vincentmac> that worked. thanks
23:26 < vincentmac> paradoxquine any terms I should search on to get a better understanding of the distictions
23:26 < vincentmac> (sp) distinctions 
23:27 < tnorris> anyone see any obvious optimizations in the following prime generator: https://gist.github.com/3876306
23:28 < paradoxquine> vincentmac: this may be helpful http://stackoverflow.com/questions/373157/how-can-i-pass-a-reference-to-a-function-with-parameters
23:28 < paradoxquine> its a bit overkill but it covers lots of useful things
23:28 < tomshreds> hey guys, do you know any good multi/large file uploader? I know that's a client-side thing but I'd need one with node-js support
23:29 < vincentmac> Thanks.  I will take a look at that. I'd rather have a concrete understanding of how it works rather than just accept that it does work
23:29 < paradoxquine> vincentmac: simpler one -- http://jszen.blogspot.com/2008/07/function-reference-vs-function-call.html
23:29 < paradoxquine> :)
23:33 < chapel> tomshreds: formidable is decent
23:33 < chapel> not client side, but server side that is
23:33 < thesteve01> how about does anyone have any feedback on any eclipse plugin for node.js
23:33 < thesteve01> or Intellij's IDE
23:33 < chapel> thesteve01: sorry, I use vim, no idea about those
23:34 < RLa> thesteve01, haven't seen node plugins for eclipse
23:34 < thesteve01> chapel:  thanks for answering - at least now I know my mic is on ;)
23:34 < othiym23> thesteve01: slow, not worth the overhead, completion isn't as nice as for Java or other dynamic languages
23:34 < othiym23> I also use vim
23:34 < RLa> webstorm is quite fine tho i disabled most of stuff in it
23:34 < chapel> vim has some decent completion stuff
23:34 < thesteve01> RLa:  there are two - the one from EBay VJet and nodeclipse
23:34 < chapel> but you have to be comfortable with vim :)
23:34 < RLa> completing for js is mostly useless
23:35 < RLa> it might help at start but not later
23:35 < othiym23> vim-style completion is a lot more useful than trying to do syntax-directed completion, it's true
23:35 < chapel> RLa: I tend not to use it, sometimes I forget, sometimes its more effort than just typing it
23:35 < thesteve01> RLa:  well I am relatively new to node so I could use the help now
23:35 < RLa> i have lately worked on eclipse with its js plugin, it has worked 3 days without nullpointer exceptions :)
23:36 < thesteve01> RLa:  did you have to sacrifice a chicken to make that happen ;)
23:36 < RLa> thesteve01, i needed completin mostly for browser functions
23:36 < RLa> i guess so :P
23:36 < thesteve01> RLa:  I am mostly using Express and Mongo right now and so it would be nice to get some help on that from the IDE
23:37 < othiym23> thesteve01: that's mostly not gonna happen
23:37 < othiym23> you're going to be better off with browser tabs open on the Express and MongoDB docs
23:37 < thesteve01> othiym23:  lol - I like the mostly not conjunction there
23:37 < RLa> thesteve01, i use eclipse sometimes when i need other languages
23:37 < vincentmac> paradoxquine I think I got it. So when v8/node was running the method that had these event emitters (i.e. adding the listener), it was immediately executing the doSomeWork function in that particular listener, since I was referring to the function as a function call (`doSomeWork()`) rather than a reference (`doSomeWork`)
23:37 < thesteve01> othiym23:  yeah I figured as much
23:37 < chapel> thesteve01: its counter to most peoples habits with node to use something like eclipse
23:37 < RLa> except c++, nothing beats qtcreator for that
23:37 < thesteve01> chapel:  yeah I was using Jedit
23:38 < chapel> thesteve01: vim has some things that make it feel like an ide at times (if you like that)
23:38 < paradoxquine> vincentmac: yep! except you don't have to qualify the statement: functionName() always invokes in javascript, and functionName sans parens always references the raw function :)
23:38 < thesteve01> so the idea is a I am Developer Evanglist for a Platform as a Service (OpenShift) so I have to be polyglot
23:38 < RLa> offtopic, but worked on this lately: https://github.com/rla/prolog-target-js
23:38 < thesteve01> so I keep trying to find one tool that would make life easier for me
23:38 < RLa> eclipse eats well the stuff it puts out
23:39 < chapel> between completion, tags, and other things, I especially enjoy jshint syntasic integration
23:39 < thesteve01> and since OpenShift is Red Hat I was going to use JBoss Tools (eclipse_
23:39 < chapel> thesteve01: I use vim for everything
23:39 < chapel> even obj c when I have to use that
23:39 < vincentmac> paradoxquine good to know. half the battle.
23:39 < paradoxquine> vincentmac: :)
23:39 < RLa> chapel, how often you violate jshint rules anyway?
23:39 < chapel> but I will cease the vim evangelism
23:39 < thesteve01> so that is why I am looking for an eclipse plugin
23:39 < thesteve01> though I prefer IDEA
23:39 < chapel> RLa: well, I use it to catch typos and simple stuff that are easy to miss
23:39 < othiym23> thesteve01: JavaScript is just so different even from most other dynamic languages that traditional IDEs are stumped by it
23:40 < thesteve01> othiym23:  agreed
23:40 < thesteve01> I am just trying to simplify my life
23:40 < othiym23> I honestly would rather use GEdit than Eclipse for editing JS
23:40 < paradoxquine> thesteve01: did you want an eclipse jshint plugin?
23:40 < RLa> i have jshint in my makefile but not running it contantly
23:40 < RLa> after some time you won't make any jshint violations anyway
23:41 < thesteve01> I need something with good git intergration since the whole dev process on OpenShift uses git
23:41 < paradoxquine> go to commandline…run git
23:41 < chapel> RLa: well I have it setup with vim to check on save
23:41 < thesteve01> paradoxquine: yeah I can do that too
23:41 < chapel> RLa: have you heard of syntastic?
23:42 < RLa> hm, no
23:42 < chapel> RLa: https://github.com/scrooloose/syntastic
23:42 < thesteve01> paradoxquine:  sometimes I do that, sometimes I use an IDE - I am just trying to see if there is a good way to integrate it all in one place
23:42 < thesteve01> so it looks like 1 (Editor, command line) 2 (Jboss tools with eclipse plugins) 3 (Idea with it's plugins)
23:43 < othiym23> vim + fugitive = about my favorite ever Git workflow
23:43 < chapel> othiym23: yeah, I really need to use it more
23:43 < paradoxquine> it may be more trouble than it's worth. that's why a lot of people still use disparate pieces and integrate them only as much as is useful. keeps things from getting bloated and clunky :)
23:43 < vincentmac> thesteve01 Have you tried using sublime text 2? You can use that with some node.js plugins and also then have JSLint/JSHint run to lint your code
23:43 < RLa> chapel, that's good plugin
23:43 < chapel> othiym23: fugitive is great
23:43 < othiym23> sorry to be a vimdouche, but switching entirely to vim earlier this year has made me a much more productive person
23:43 < paradoxquine> but it's up to you. vim and sublime 2 are great solutions with minimal set up hassle
23:43 < paradoxquine> +1 to both from me
23:43 < thesteve01> vincentmac: I have heard good things about sublime text2 is it mac only or can I run on linux?
23:44 < othiym23> thesteve01: ST2 should run on all of Windows, Mac and Linux
23:44 < vincentmac> thesteve01 Linux, Mac, and PC
23:44 < chapel> RLa: add it with https://github.com/Lokaltog/vim-powerline and its great :)
23:44 < RLa> checking out
23:44 < chapel> othiym23: haha, here here :)
23:44  * thesteve01 goes to look at sublime text 2
23:45 < chapel> othiym23: I switched last year and now I can't see myself not using it
23:45 < othiym23> Syntastic + Powerline + tagbar + about 40 hours of screwing around with exuberant-ctags is a passable JS IDE
23:45 < RLa> i wish qtcreator would indent js "right" for me, it's quite underrated ide
23:46 < jaha> How can I programmatically check if an NPM module is installed?
23:46 < thesteve01> alright folks - thanks for the feedback
23:46 < RLa> they got it working for c++ so js should be piece of cake
23:46 < superjoe> jaha, require('yourmodule') != null
23:46  * thesteve01 goes off to write some code and ponder for a bit
23:46 < vincentmac> thesteve01 Here's a video tutorial to help with sty https://tutsplus.com/course/improve-workflow-in-sublime-text-2/
23:46 < vincentmac> *st2
23:46  * ChrisPartridge loves st2
23:47 < MI6> joyent/node: isaacs master * 061f207 : string_decoder: Add 'end' method, do base64 properly - http://git.io/hQMjgA
23:47 < RLa> aww, sublime has no eclipse color scheme?
23:50 < RickJ> Hello, I have a couple of dumb questions about node.js.   I am planning on using Chrome as the user interface to a control system consiting of several robots, vision inspection, motion control, etc.
23:52 < RickJ> The current project uses a Win7/x86 platform with a real-time extension.  Applications in the real-time extension can communicate via TCP/IP. 
23:53 < RickJ> Is it practical to use Chrome+Node+Sock.IO to communicate with the control system via Tcp/Ip?  Any thoughts or input?
23:55 < hdon> RickJ, hi. i don't know what a "real time extension" is, but I've used node.js and socket.io to create a WebSocket <-> UDP gateway for real-time streaming
23:56 < hdon> in my case i wanted to use it for decreasing latency in applications where data is most useful when it is fresh, and nearly or completely useless when it is not fresh
23:58 < RickJ> hdon, hi.  Real-time extension is just an RTOS running windows as a background task.   So I take it that from node it's possible to do all the normal socket programming stuff then?
23:59 < hdon> RickJ, absolutely
--- Log closed Fri Oct 12 00:00:55 2012
