--- Log opened Sat Jul 07 00:00:27 2012
00:02 < wltsmrz> array.indexOf(string) !== -1
00:08 < dob__> wltsmrz: That was easy and did not hurt :-) Thank u!
00:10 < jocafa> glad to see that nodejs is up-to-date in archlinux|arm
00:30 < marcosmlopes> Hey, someone can help me? http://stackoverflow.com/questions/11334568/how-to-stream-an-webm-video-through-ffmpeg-using-node-js
00:46 < Hotroot> Quick Q, is it proper to stream.end after stream.write'ing?
00:47 < Hotroot> Or in that same category, when sending a string, should I always just stream.end("blah"); it instead of stream.write?
00:49 < TooTallNate> Hotroot: you stream.end() when you done calling stream.write()
00:49 <@isaacs> RoderickOn gave me the best answer to feature requests: http://www.merlinmann.com/roderick/ep-36-uncle-licky.html
00:50 < Hotroot> TooTallNate: Why not just stream.end("string")?
00:50 < Hotroot> Doesn't it just make it one less command?
00:50 < TooTallNate> Hotroot: that's fine, and in fact optimized in some cases
00:50 <@isaacs> Hotroot: if you know you have one write(), then that's ideal, yes
00:50 <@isaacs> do that
00:50 < TooTallNate> Hotroot: do that if you're only sending 1 string or buffer
00:50 < Hotroot> Yeah
00:51 < Hotroot> Well, I can still stream.write afterwards, it doesn't close the socket. It's just proper because it knows that specific piece of data is done, right?
00:51 < Hotroot> For example, in a chat server. I'm not really sending bulk data
00:53 < TooTallNate> Hotroot: stream.end() closes one end of the socket
00:53 < TooTallNate> the other end could still be open and you could still receive data
00:53 < TooTallNate> but you can't write() anymore after end()
00:54 < Hotroot> 0.o
00:54 < Hotroot> I thought that was close?
00:54 < Hotroot> Little confused
00:54 < Hotroot> Okay, for example, a chat server
00:55 < Hotroot> After each line of chat sent to the user, you would end(), because that piece of data is over, yes?
00:55 < Hotroot> The client can then process that data. 
00:55 < Hotroot> You would end after each chunk of usable data sent
00:56 < Hotroot> Each string I mean
00:59 < thekiur> any news on socket.io 1.0 ETA ?
01:01 < TooTallNate> Hotroot: no, close() is a more "impolite" was of destroying the connection
01:02 < TooTallNate> Hotroot: if you're writing a chat server, you just call .write() lots of times
01:02 < TooTallNate> Hotroot: but on the other end, you need to parse it somehow, like on \n chars for example
02:10 < nlogax> Hello there, TooTallNate 
02:10 < TooTallNate> nlogax: hey
02:12 < nlogax> TooTallNate: Not sure what the polite way to update pull requests is, so I just push -f'd to the branch, fixing the stuff you pointed out https://github.com/joyent/node/pull/3608 
02:12 < nlogax> Hopefully :)
02:13 < TooTallNate> nlogax: well you did the right thing (push -f)
02:13 < TooTallNate> nlogax: i'll take a look at the pull when before leaving for the day
02:13 < nlogax> TooTallNate: That would be awesome, thanks
02:14 < TooTallNate> nlogax: didn't isaacs want something else for https://github.com/nlogax/node/commit/7ac5731a8b16d63ce1514acaab65650e849b4878?
02:15 < nlogax> TooTallNate: It was obsolete code, that's why it didn't make sense any more https://github.com/nlogax/node/commit/a88bce06f96c469ede19faaca7a7ebd2ee367170#commitcomment-1550228
02:16 < TooTallNate> ah i see, missed those last 2
02:17 < EricBlade> good morning everyone :)  i'm running a child process to do some extra data processing, but i'm not getting any callbacks or events from it .. so according to the parent process, it never finishes, although i can see it's output in the temp data file that it creates.  any ideas?
02:35 < CIA-93> node: Jonas Westerlund v0.8 * r2297d63 / lib/readline.js : Forgotten commit: add arguments to handleGroup (+8 more commits...) - http://git.io/jQVQBQ
02:36 < TooTallNate> nlogax: ^
02:37 < nlogax> TooTallNate: Thanks :) now to play with some harmony stuff!
02:41 < CIA-93> node: Nathan Rajlich v0.8 * r8a9e8d6 / lib/readline.js : readline: don't use Function#call() - http://git.io/t2R5pA
02:43 < EricBlade> child process exec, not receiving a call back or an exit event .. any ideas? 
02:57 < livinded> anyone else get tickets for summer camp yet?
02:57 < livinded> so stoked to go camping
03:07 < spectre256> hi all, i am running node.js 0.8.1, just wrote some new code, and node is crashing with a malloc error "pointer being freed was not allocated". i assume it is a race condition in my own code. any suggestions for how to debug it? i assume logging to the console is not reliable enough to poinpoint the problem in this case
03:08 < vicapow> spectre256: is all your code javascript or are you writing something in C your interfacing with?
03:09 < spectre256> vicapow: all javascript
03:09 < elventails> spectre256: new to node but maybe try "node debug youscript.js"
03:09 < elventails> *yourscript.js
03:10 < EricBlade> oh, yay, figured it out.  and learned how to do callbacks properly. :D
03:10 < spectre256> i haven't used the node debugger much but i did try that. the problem is because the function where the exception is thrown is a C function, i can't set a breakpoint
03:11 < spectre256> and it's not a 100% reproducable bug. i have to send many curl calls to actually hit it reliably
03:35 < dnnsmanace> where are the node modules stored?
03:37 <@maxogden> in the module folder
03:39 < dnnsmanace> hhmmm it isnt in the root dir of my app
03:39 < dnnsmanace> that is where it usually is isnt it
03:40 < dnnsmanace> found it
03:41 < _lleo> what is the right way to advertise a new package I've uploaded to npmjs.org?
03:42 < gblock> _lleo send a mail in the nodes google list
03:42 < _lleo> thanks
03:42 < gblock> _lleo: that is the standard convention
03:43 < dnnsmanace> anyone have experience sending .eml email files thru smtp in node?
03:47 < gblock> dnnsmanace: I haven't, but if you search npmjs on "smtp" you will find a bunch of modules. Send grid also offers a service for sending bulk mails.
03:48 < dnnsmanace> thanks. i have been using a few different smtp modules but i cannot get them to format the raw email the way i need
03:48 < dnnsmanace> i feel i could bypass it with a pregenerated .eml
03:54 < gblock> dnnsmanace: I see, so you want to literally just pre generate .eml files and then send them over SMTP...
03:55 < dnnsmanace> yeah.. because the headers in the email need to be formatted very specifically for what i'm doing
03:55 < dnnsmanace> and the mailers i've been using are doing it the wrong way
03:55 < dnnsmanace> i am sending an email to an iphone phone number (dont ask)
03:56 < dnnsmanace> and every mail client except native MAIL app on mac you get a blank bubble if yu send a picture attachmentt, while the mail app is correct with just the img
03:56 < dnnsmanace> i can show in a gist if youre interested in helping out :)
03:56 < dnnsmanace> but i have no experience with email formatting/headers, this is all trial and error and comparisons
04:00 < gblock> dnnsmanace: I have only worked with SMTP via libraries, never raw ;-)
04:01 < gblock> dnnsmanace: though sounds like a fun exercise
04:01 < dnnsmanace> haha
04:01 < dnnsmanace> sounds awful :)
04:01 < gblock> dnnsmanace: I guess I should have put "fun" in quotes.
04:03 < gblock> dnnsmanace: I'd be happy to help THOUGH I am not sure I'd be much help
04:05 < dnnsmanace> wow looks like i just fixed it... looked through the code of the module, it was adding a linebreak
04:05 < dnnsmanace> if body was blank
04:06 < gblock> dnnsmanace: oh nice!
04:06 < gblock> dnnsmanace: which module were you using?
04:06 < rchern> is there anything like a "30 days of node.js" series of walkthroughs or something y'all would recommend?  don't just wanna read a book, and want more than "hello world", want to dive in and write some actual code to learn.  been poking around google, but not finding what looks like a good set of walkthroughs/tutorials.
04:07 < Stephen> Hm...
04:07 < Stephen> You can always try ryah's chat server
04:07 < dnnsmanace> i was doing these when i was starting out
04:07 < dnnsmanace> nodetuts.com/
04:07 < Stephen> Any chat server does a really nice job of reviewing pubsub
04:08 < dnnsmanace> i feel that reading like 5 different resources at the same time really helps
04:08 < gblock> rchern: check out codeschool.com. You have to pay, but it is worth it. Amazing and highly interactive.
04:08 < dnnsmanace> a book, plus webcast guide etc
04:08 < mexpolk> OMG! Probably makes sense to change docs to clarify from: fs.symlink(destination, path, [type], [callback]) to fs.symlink(source, destination, [type], [callback]). http://nodejs.org/api/fs.html#fs_fs_linksync_srcpath_dstpath
04:09 < rchern> meh, I hate learning a language by reading a book.  personal preference (;
04:10 < Stephen> mexpolk: Why? Had it not been for that secret paramter we wouldn't have heard your lovely voice today
04:10 < Stephen> rchern: How familiar are you with Javascript?
04:11 < gblock> rschern: what I like about codeschool is it has really good quality content and that it actually throws you in writing code and verifies if your code is correct.
04:11 < mexpolk> stephen: LOL! Yes, but I got completely confused by destination, also there's no example :( What's the best way to contribute on the docs?
04:11 < gblock> rchern: It also has a bunch tutorials on frameworks like backbone, etc.
04:12 < Stephen> mexpolk: I believe via GitHub
04:13 < Stephen> mexpolk: https://github.com/joyent/node/issues?direction=desc&sort=created&state=open
04:13 < Stephen> It looks like documentation errors are in bugs there
04:14 < mexpolk> stephen: ah! nice... thanks Stephen!
04:18  * Stephen is now build 0.8.1
04:18 < Stephen> building
04:19 < Stephen> Coming from a 0.6.x release, anyone have any words of wisdom to watch for?
04:24 < Mulleteer_> Hi, I updated to node v0.8.1 and now express POST requests are failing with error "Object mydomain.com has no method 'exit'". It seems because EventEmitter assumes there is domain error handler
04:24 < Mulleteer_> but I understood that domains should not be enabled by default
04:25 < Mulleteer_> at least nothing in my code or modules requires domains or calls domain.create
04:29 < Stephen> Mulleteer_: Sounds like a bad dependency update. You might consider removing and re-installing express
04:34 < Mulleteer_> Stephen, thanks. Will try that
04:43 < mexpolk> What do you think? Changed doc to clarify fs.symlink and fs.symlinkSync https://github.com/joyent/node/pull/3657
04:44 < mexpolk> although, I dunno if hitting master is the right thing to do
05:09 < austinbv> is there a way to get REPL to auto load modules?
05:14 < Benvie> it's built into node .8
05:14 < Benvie> type the module name
05:14 < Benvie> for builtin ones anyway
05:14 < austinbv> that's not auto loading when every I start repl
05:15 < Benvie> oh you need a startup script or something
05:15 < Benvie> you can type
05:15 < austinbv> that's what I figured
05:15 < Benvie> .load filename
05:15 < Benvie> and have that do the loading
05:16 < austinbv> yeah
05:16 < austinbv> but no auto loading
05:16 < austinbv> I wanted to write a interactive_editor for repl
05:16 < austinbv> https://github.com/jberkel/interactive_editor/blob/master/lib/interactive_editor.rb
05:16 < austinbv> but if it's not autoloadable I don't see the benifit
05:17 < Benvie> this would be why I made my own =D
05:18 < Benvie> which has a plugin system
05:18 < austinbv> own repl?
05:19 < Benvie> indeed
05:19 < Benvie> https://github.com/Benvie/Node.js-Ultra-REPL
05:19 < austinbv> nice just use repl start?
05:19 < austinbv> or what
05:19 < austinbv> ill look
05:19 < Benvie> ultra-repl
05:20 < Benvie> install it globally
05:20 < Benvie> it has config files for keybinds, plugins, can automatically load files, it's actually almost too much
05:21 < austinbv> do you just define an dotfile for it
05:22 < austinbv> that's what I would like .noderc that can say what you want loaded in the repl
05:22 < Benvie> if you go to the install folder, there's a config folder
05:22 < Benvie> where all configuration lives
05:22 < austinbv> similar to irb
05:22 < Benvie> colors, keybinds, plugins
05:22 < austinbv> cool
05:22 < Benvie> mostly in json or close to json format
05:22 < Benvie> non-strict json basically
05:35 < owen1> is the v8 still limit the memory of a process to 1.7 gb?
05:36 < nonuby> heroku
05:43 < owen1> does anyone got a link to a node talk that compared node's performance to other languages? i can't remember who presented. i believe it was issac but i am not sure.
05:43 < owen1> i think it was a keynote or something
05:47  * ryah waves
05:48  * Nexxy waves
05:50  * tim_smart waves back at ryah
05:53  * owen1 waves at tim_smart
05:54 < tim_smart> owen1: How did your talk go?
05:55 < owen1> tim_smart: it's on thusday. but i feel good about it. i am going to do ignite.js (impress.js + ignite) - https://github.com/oren/impress.js + 30-40 minutes of code
05:55 < owen1> thursday
05:57 < tim_smart> Wow, hadn't seen impress.js before.
05:57 < owen1> i'll try to show the following: hello world, CommonJS,  streams, control flow, socket-io
05:58 < owen1> tim_smart: i just forked impress.js and added the ignite format. it's going to be super cool
05:58 < owen1> and i might talk about libuv, event loop and epoll. depends on time.
07:37 < _x_chris_x_> huhu, kann hier wer deutsch?
07:39 < _x_chris_x_> anybody here?
07:41 < MCHammel> hi, jemand hier
07:41 < MCHammel> und kann deutsch :)
07:42 < MCHammel> aber bin kein pro
07:42 < MCHammel> _x_chris_x_, 
07:43 < _x_chris_x_> du bist kein programmierer?
07:43 < MCHammel> doch
07:43 < MCHammel> aber kenne node nicht auswendig :D
07:43 < _x_chris_x_> ich auch nicht :D
07:43 < MCHammel> was gibt es denn?
07:43 < _x_chris_x_> na, ich hätt nur ne kurze frage
07:44 < _x_chris_x_> ich hab ein programm geschrieben, dass php mit node.js kommuniziren kann
07:44 < _x_chris_x_> dazu hab ich in node.js einen server programmiert
07:44 < _x_chris_x_> einen ganz einfachen mit dem http-modul
07:45 < _x_chris_x_> jetzt gibts aber das problem, dass php synchron und node.js asynchron arbeitet
07:46 < _x_chris_x_> es kann also passieren, dass node.js ne zeitlang braucht, bis es etwas abgearbeitet hat
07:46 < _x_chris_x_> mittlerweile könnte in php schon ein timeout eingetreten sein
07:46 < MCHammel> okay
07:46 < yhpark> Hi
07:46 < MCHammel> hi
07:46 < yhpark> anyone using forever?
07:47 < MCHammel> nope :/
07:47 < yhpark> hmmm
07:47 < _x_chris_x_> kann ich in node.js irgendwie erkennen, dass so ein timeout eingetreten ist, dass node.js seine daten nicht mehr an php schicken kann?
07:48 < MCHammel> wie schickst du an php? per ajax?
07:48 < _x_chris_x_> ich hab in php einen curl-request programmiert
07:48 < _x_chris_x_> also ganz normalen http-request
07:48 < wubino> any good reads on creating a pastebin like server?
07:50 < MCHammel> hm, kenne mich damit auch nicht wirklich aus, aber müsstest du nicht normalerweise ne antwort entweder automatisch schicken (request war in ordnung) oder von php an node manuell eine antwort schicken, wenn etwas eingegangen ist?
07:50 < MCHammel> und wenn halt nach x sekunden keine antwort kommt, weißt du, dass es bei php nen timeout gab?
07:51 < _x_chris_x_> du meinst, ich soll von node.js einen request an php schicken?
07:53 < _x_chris_x_> das wäre möglich, aber das wäre dann ein ganz eigener prozess, der mit dem prozess des vorigen request von php an node.js nichts zu tun hätte
07:53 < MCHammel> du willst doch ursprünglich von nad an php schicken? das machst du und schickst jedes mal ne antwort von php zurück an node. wenn keine antwort ankommt, weißte, dass php den timeout hat?
07:53 < _x_chris_x_> na, ich will von php an node.js einen request machen
07:53 < _x_chris_x_> in php erkenn ich den timeout natürlich
07:54 < _x_chris_x_> aber in node.js gibt es unterschiedlichste gründe für timeouts 
07:55 < _x_chris_x_> und ich würd gern den grund für einen timeout irgendwo festhalten, z. b. in der konsole ausgeben
07:55 < MCHammel> hmm, am besten nochmal hier auf englisch probieren? bin halt wirklich nicht der profi :D
07:55 < _x_chris_x_> mein englisch ist leider nicht so toll :D
07:55 < MCHammel> egal, wenn man den sinn versteht, passt das schon :D
07:55 < tim_smart> wubino: Anything to do with storing data in a database and creating slugs is relevant
07:56 < tim_smart> Creating a pastebin site could be a good hello world app I guess.
07:57 < tim_smart> Mind you, I'm pretty partial to gist.github.com
07:57 < _x_chris_x_> muss ich mir das erst überlegen, wie man das in englisch formulieren kann
07:59 < MCHammel> ich probiers mal
07:59 < MCHammel> moment
08:00 < MCHammel> _x_chris_x_ asks, whether there's a way to get the reason for a timeout of a curl-request sent to php
08:00 < MCHammel> so? :D
08:00 < _x_chris_x_> naja, der grund ist dann, dass node.js für eine asynchrone aktion zu lange gebraucht hat
08:01 < _x_chris_x_> die frage ist, wie kann ich in node.js erkennen, dass node.js dann die daten nicht mehr an php retournieren kann
08:02 < MCHammel> ja, aber h#ngt das nicht zusammen? du musst ja was hinschicken und wenn du den timeout bekommst, müsste da doch die info mit drin sein, warum es nicht klappte?
08:02 < _x_chris_x_> ja, klar, zuerst gibt es natürlich einen request von php an node.js
08:02 < pickelss> Is there a way to add client-side libraries to browserify without converting them to commonjs modules?
08:03 < _x_chris_x_> im normalfall kommt dann innerhalb weniger sekundenbruchteile gleich ein response von node.js an php
08:03 < _x_chris_x_> aber node.js könnte auch etwas länger brauchen
08:03 < _x_chris_x_> und in dieser zeit könnte in php schon ein timeout gemeldet sein
08:03 < _x_chris_x_> node.js wird dann seine daten nicht mehr los
08:03 < _x_chris_x_> aber wie kann ich das in node.js erkennen?
08:04 < MCHammel> naja, was passiert denn, wenn node die daten nicht mehr los wird?
08:05 < MCHammel> merkt node da nicht schon selbst was?
08:05 < _x_chris_x_> naja, das ist die frage :)
08:06 < MCHammel> hrhr
08:07 < MCHammel> hast du denn irgendein error-handling?
08:08 < _x_chris_x_> ja, klar, z. b. auch direkt für den node.js-http-server
08:08 < MCHammel> bzw. bleibt die konsole einfach leer?
08:08 < _x_chris_x_> zuerst erzeug ich mir einen server mit http.createServer
08:08 < _x_chris_x_> dann erfolgt ein listen auf port 8080
08:09 < _x_chris_x_> und schließlich das error-handling mit server.on('error', functon(error) { server.close;console.log(error.code);)};
08:09 < _x_chris_x_> aber ich befürchte, das meldet mir keinen fehler, wenn node.js keine daten mehr loswird
08:10 < _x_chris_x_> und falls doch, habe ich es falsch programmiert, weil ich dann das server.close(); nicht machen darf
08:10 < MCHammel> vielleicht kannste den betreffenden code mit dem request mal irgendwo pasten?
08:10 < _x_chris_x_> das kann jeder x-beliebige php-request sein
08:10 < _x_chris_x_> es kommt nur auf node.js an
08:11 < _x_chris_x_> dass ein aysnchronen prozess eben so lange andauert, dass php mittlerweile schon einen timeout gemeldet bekommen hat
08:11 < MCHammel> ja, was macht node? meine nodes-seite
08:11 < _x_chris_x_> keine ahnung, irgendwas, irgendeine aktion, die ziemlich lange dauert :)
08:12 < _x_chris_x_> vielleicht eine große datei auslesen
08:12 < MCHammel> okay, also ist das nur theorie? :F
08:12 < _x_chris_x_> jep
08:12 < _x_chris_x_> wie könnt ich denn das praktisch ausprobieren?
08:13 < _x_chris_x_> hm
08:13 < MCHammel> ja, festplattenzugriff wär nicht schlecht :D
08:13 < MCHammel> fs.readdir und dann die ganze platte :D
08:14 < _x_chris_x_> ich könnt vielleicht mal versuchen, die curl-timoutzeit für den php-request auf einen sehr niedrigen wert zu setzen und dann so eine große datei in node.js auslesen
08:14 < MCHammel> jupp
08:15 < _x_chris_x_> werd ich heute mal probieren, vielleicht fällt mir dann irgendein spezielles verhalten im node.js-Script auf
08:15 < _x_chris_x_> super, hat mir schon geholfen :)
08:16 < MCHammel> ja, leider kenne ich mich halt auch noch nciht so gut aus. habe mit node bis jetzt auch nur meinen webserver (mit express) aufgesetzt und benutze nowJS für websockets. sonst mach ich nur ein paar festplattenzugriffe damit und so
08:17 < _x_chris_x_> ich kenn mich auch noch nicht mit node.js aus, mache auch grad die ersten erfahrungen damit
08:18 < MCHammel> ich hab halt auch noch keine erfahrung bzw. wenig erfahrung mit php
08:18 < MCHammel> aber da ich websockets brauchte, habe ich gleich mit node angefangen
08:18 < MCHammel> und es gefällt mir echt gut
08:19 < MCHammel> das paketverzeichnis kennst du, oder? gibt ja sehr viele nützliche module für node
08:21 < _x_chris_x_> habe ich schon gesehen, ja
08:22 < _x_chris_x_> so, ich geh jetzt ins wochenende
08:22 < _x_chris_x_> tschau :)
08:22 < MCHammel> schönes we und viel erfolg!
08:22 < MCHammel> kannst ja berichten :D
08:22 < _x_chris_x_> mach ich dann
08:32 < Stephen> Nun liebe kinder, gebt fein acht.
08:33 < Stephen> Ich habe euch etwas mitgebracht.
08:39 < MCHammel> :D not you rnative language?
08:45 < nowjs5> hello
08:46 < nowjs5> If i type "node helloworld_server.js" nothing happens. why is that?
08:48 < MCHammel> no error nothing?
09:01 < No9> Hey anyone have a minute for an openindiana build issue on v0.8.1?
09:50 < Industrial> Where do I go for JamJS support?
09:51 < Industrial> I want to move my static js dirs to public/js/jam/require.js where I have my app.js at public/js/app.js
09:51 < Industrial> but the paths in require.js are wrong, pointing to jam/require.js
09:52 < Industrial> guess I can change it, but i'd have to after every rebuild :p
09:57 < TGYoshi> ohai all
09:57 < TGYoshi> How to debug an application which stops at a certain point without any specific error, and no infinite loop involved?
10:54 < KingDosser> I have a Node.js server using Socket.io to serve push notifications. But I want to send data straight from my rails server. I am planning to send a POST request from rails with a list of user_ids that i want socket.io to send stuff to. Can someone please show me how I might listen on a port and pass it on to socket.io? (or link me to an article)
11:02 < KingDosser> anyone?
11:13 < RushPL> I  create a handle via createPipe from child_process.js (not API but I want to experiment anyway ;)) and I send a create object's handle .... the handle gets closed though because that's what child_process.send(msg, handle) does, it closes the handle ... so how to do it? I want to send the handle and be able to communicate through it with my child process.
11:17 < Jygga> KingDosser are you already using express/connect ?
11:17 < KingDosser> Jygga: No. Just Socket.io
11:22 < Jygga> well quickest way is sth like this: http://stackoverflow.com/questions/9411793/how-to-use-express-post-request-to-emit-socket-io-or-sockjs and use the bodyParser middleware http://expressjs.com/guide.html#http-methods
11:22 < Jygga> i guess
11:22 < Jygga> you can ditch express if you want 
11:25 < KingDosser> when i put app.post is that not actually calling anything but just listening?
11:28 < H4ns> hi, is there a json serialization library that can preserve prototype information of objects?
11:30 < KingDosser> @ Jygga
11:43 < nooga> hi
11:44 < nooga> i have problems with reading incoming data from a socket
11:44 < Jygga> KingDosser are you asking how to send a post request from rails in a node.js related channel?
11:45 < KingDosser> No, I'm asking how to wait and listen for POST requests in Node and then handle them.
11:46 < nooga> basically i just handle on 'data' event and read the data in the event handler
11:46 < nooga> but sometimes i get two messages together
11:47 < Jygga> yes, app.post('/') will listen for post requests
11:49 < Jygga> http://stackoverflow.com/questions/5710358/how-to-get-post-query-in-express-node-js here is a connect only and an express solution for that 
11:51 < Jygga> should be pretty much copy paste with the first se link i posted though, anything unclear there?
11:53 < VeXii> im trying to upgrade node from 6.18 to 8.1 now after uninstalling i keep getting a error when running ./configure "File "./configure", line 183"
11:54 < VeXii> i have changed my $PYTHON to the right path and done what the wiki tells me
11:55 < VeXii> do i need gyp for the 0.8.x? and if what package can i find it under?
12:02 < augustl> semi off topic.. Anyone know about an alternative to phantomjs? Want to automate some browser testing from a Node script, but phantom is proving hard to work with
12:02 < augustl> no stio for example
12:03 < VeXii> have you looked at zombijs ? its based on phantomjs
12:04 < augustl> VeXii: not sure if I trust jsdom enough :)
12:07 < VeXii> ahh okay well dont know anything then :)
12:08 < VeXii> i dont know how dig diff ther is on jsdom and the live dom' s anyone know a list of traps or somthing?
12:08 < augustl> I think I'll write this as something that supports multiple backends, so I don't have to marry a specific headless browser
12:10 < VeXii> as i say i dont realy know jsdom or zombie so i cant say for or agenst 
12:14 < VeXii> i keep getting a error from ./configure on line 118 (dest="shared_zlib_includes") when im trying to build v0.8.1 but running pacman says that zlib is installed
12:15 < VeXii> but which zlib dont return anything 
12:56 < VeXii> i keep getting a error from ./configure on line 118 (dest="shared_zlib_includes") when im trying to build v0.8.1 but running pacman says that zlib is installed. do anyone have a idea whats wrong
12:59 < RLa> you need to use shared zlib?
12:59 < RLa> isn't one bundled with node
13:07 < VeXii> i think it is
13:09 < VeXii> but i keep getting a error on that line (not knowing python i cant be sure its not a syntax error). i done the PATH switch to python 2 i think
13:14 < RLa> VeXii, python 2 gives same error?
13:14 < VeXii> yeah
13:14 < VeXii> running 2.7 
13:15 < VeXii> har 0.6.18 running before just fine
13:15 < VeXii> had*
13:15 < RLa> and you run config with ./configure? no extra args?
13:15 < VeXii> yeah
13:18 < VeXii> echo $PYTHON 
13:18 < VeXii> returns 
13:19 < RLa> try run make clean make distclean before running configure
13:19 < VeXii> okay
13:19 < RLa> python -v gives 2.7?
13:19 < marcello3d> hmmm. does connect/express work on 0.8.x?
13:20 < RLa> connect 2/express 3 does
13:20 < RLa> no idea about older versions
13:20 < marcello3d> how do I install it so it doesn't have a bunch of "UNMET DEPENDENCY" lines in npm ls?
13:20 < VeXii> no it gives me a long list of # comments and inport statements
13:20 < marcello3d> it also says "invalid" next to connect@2.3.6
13:20 < TrahDivad> I'm new to JS/Node so this question may sound stupid. I want to extend the "request" object that the "http.createServer" passes to it's callback. I want to extend it with a method. How can I access the prototype of that object before I receive any to add my custom method?
13:20 < VeXii> ohh sry no 3.2
13:21 < VeXii> thats why i tryed changing the $PATH of PYTHON to version 2
13:22 < RLa> TrahDivad, checked docs?
13:22 < TrahDivad> RLa: I have, but didn't find my answer there. As I said, not quite fluent enough in JS and Node.
13:23 < RLa> it lists relevant "classes"
13:23 < RLa> http.ServerRequest, try add something to this prototype
13:23 < TrahDivad> RLa: but the problem is, when I google javascript "classes", I fall on 5 different ways of creating and handling classes. So I'm not sure how to access them in JS
13:23 < TrahDivad> in Node.js I meant
13:24 < RLa> try http.ServerRequest.prototype.myfunc = function() { ... };
13:25 < RLa> there are many ways to do "classes"
13:25 < TrahDivad> RLa: Thanks! But why isn't it directly http.ServerRequest.myfunc = function() { ... }; ?
13:25 < TrahDivad> If http.ServerRequest is the prototype of the request objects we get in the callback, can't I add the methods directly to ServerRequest?
13:25 < RLa> because http.ServerRequest is actually the constructor function
13:26 < TrahDivad> RLa: ah, ok...
13:26 < RLa> it's not the object it constructs
13:26 < RLa> i have no idea why documentation uses word "class"
13:26 < TrahDivad> RLa: thanks for taking the time to explain that to me!
13:33 < augustl> is there a way to halt on SIGINT and do cleanups on Windows?
13:35 < KingDosser> If I am setting a user_id on users when they connect to my socket.io server. How do I send to individual sockets by user_id without having to loop through every socket?
13:38 < RLa> augustl, does windows support posix at all?
13:38 < RLa> i have heard the support is quite shitty
13:39 < augustl> windows has its own process signaling system
13:39 < augustl> windows isn't unix or posix so I don't blame them for having shitty posix support :)
13:43 < bwen> is there a simple way to have require() load the module every time and not cache it?
13:44 < nooga> I've got a project that's distributed between many files in different subdirectories
13:44 < nooga> and dteh files require each other
13:46 < nooga> do I have to add the project's path to the require.paths in every file to avoid using relative paths between them?
13:46 < nooga> or can I do it globally somehow
13:49 < nooga> oh
13:49 < nooga> require.paths is obsolete
13:49 < wubino> i just installed mongoose via npm:  it mentions installing the c++ bson parsse via $npm install mongodb --mongodb:native
13:49 < nooga> so... how do I avoid using relative paths inside my project?
13:51 < augustl> bwen: just read and eval the file by hand I suppose
13:52 < augustl> nooga: you want to use relative paths :)
13:52 < nooga> why?
13:52 < nooga> like
13:53 < augustl> node and npm is very relative in nature
13:53 < augustl> relative paths removes a lot of potential ambiguity
13:54 < nooga> so I am supposed to do ./model in models/ and ../models/model somewhere else
13:55 < nooga> for instance
13:55 < augustl> yes
13:55 < nooga> that feels bad for a rubyists
13:55 < nooga> rubyist*
13:55 < nooga> :)
13:56 < augustl> yep, it's very different from Ruby's global variable based environment
13:56 < augustl> s/variable/constant/
13:57 < wubino> if I am not consistently using sudo while doing npm installs does that create a conflict?
13:57 < augustl> nooga: the benefit of the way node does it is that it doesn't depend on context
13:57 < augustl> wubino: in my experience, at least on OS X, not being consistent with sudo is a very bad idea. Last checkd this 3-4 months ago though.
14:01 < wubino> augustl: in your experience is it better to install with or without sudo?
14:02 < KingDosser> querystring is return an object like this: { 'to_notify[]': '1' } - how do I access the value?
14:02 < augustl> wubino: I like to have node set up in ~/local/node
14:02 < augustl> so, without sudo, in my home directory
14:02 < augustl> KingDosser: qs["to_notify[]"]
14:04 < KingDosser> why the fuck was that not working before
14:05 < augustl> KingDosser: cosmic radiation
14:09 < KingDosser> augustl: lol thanks :)
14:10 < Orion-> Hello there
14:12 < Orion-> I have a cleartextStream related question: how can we be sure to be able to write to a writable stream ? it seems that testing for stream.writable is not enough. I can write to it and later receive a 'close" event.
14:15 < Orion-> why doesn't stream.write() throw an error when the socket write could not be honored ?
14:16 < Orion-> Anyone ?
14:23 < VeXii> i keep getting a error from ./configure on line 183 (looks like a error in OSError Except call) when im trying to build v0.8.1
14:26 < marlun> Is it possible to only show the top level package when running npm ls -g?
14:47 < aspect_> was wondering if anyone can answer this.  I am using socket-io, but the url for websocket must contain a path...  i.e. client websocket should connect not to ws://1.2.3.4 but to ws://1.2.3.4/my-ws..
14:49 < TGYoshi> Anyone knows why (node.)js doesn´t seem to like utf-8 strings?
14:49 < TGYoshi> It just freezes once I try to assign it to a variabele
14:49 < TGYoshi> console.log(..) with it works tho
14:51 < augustl> TGYoshi: what do you mean utf-8 strings?
14:51 < TGYoshi> augustl Strings with ¨special¨ symbols, in my case, a players nickname
14:51 < augustl> got some code?
14:51 < TGYoshi> sure
14:52 < TGYoshi> augustl http://pastebin.com/sL8X7xLH
14:53 < TGYoshi> augustl It hangs if I put params[0][i]['NickName'], but if I just use params[0][i]['Login'] it works
14:55 < aspect_> anyone uses socket.io?
14:55 < augustl> TGYoshi: what are the byte contents of that string?
14:56 < TGYoshi> augustl Any way to rapidly check that? or do you just want the literal string?
14:56 < TGYoshi> as console.log() outputs it right
14:56 < augustl> TGYoshi: new Buffer(str, "utf8")
14:56 < augustl> then toString("hex") will get a hex string of the bytes
14:57 < TGYoshi> I´ll do that
14:58 < augustl> given utf8 is the encoding of the string you pass to it, of course
15:00 < TGYoshi> augustl: $o$000»$5a0The$590 Green $470Yðshî$000« ====> 246f24303030c2bb243561305468652435
15:00 < TGYoshi> 393020477265656e202434373059c3b07368c3ae24303030c2ab
15:01 < augustl> what's the two different lines?
15:01 < TGYoshi> they should be on the same
15:01 < TGYoshi> console width messed it up
15:01 < TGYoshi> :P
15:01 < augustl> so it's one line?
15:02 < TGYoshi> yes
15:02 < augustl> TGYoshi: this works just fine for me http://pastie.org/4215788
15:03 < augustl> on v0.8.0
15:03 < TGYoshi> should try it using a direct buffer
15:03 < augustl> using a buffer where you mean?
15:04 < TGYoshi> Instead of a direct copy to the output array via that buffer
15:04 < augustl> what you should try is to get the code in my paste to fail in the same way :)
15:04 < augustl> TGYoshi: huhm, not following you
15:05 < TGYoshi> sec, trying it..
15:06 < TGYoshi> Using a buffer works lol
15:07 < TGYoshi> http://pastebin.com/udNzZfFk For some reason that works, ty <3
15:07 < augustl> that makes no sense
15:07 < TGYoshi> I agree
15:07 < augustl> the buffer will get toString called on it
15:08 < TGYoshi> I tried to add the .toString to the array, which fails
15:08 < augustl> which defaults to utf8
15:08 < TGYoshi> Later on I use this
15:08 < TGYoshi> var label1 = new ui.Label('0 0 0', Players[p][0].toString());
15:08 < TGYoshi> which works
15:08 < augustl> oh it's the value, not the key
15:08 < TGYoshi> Yea
15:08 < TGYoshi> Key = Login
15:09 < TGYoshi> Value = the buffer now
15:10 < VeXii> RLa: i did the make clean and make distclean. but im stil getting the error 
15:11 < TGYoshi> Javascript is still so weird :D
15:11 < VeXii> tracked it down to a statmen in the configure flie saying <code>'''</code> omit the code tag ^^
15:12 < VeXii> looks like its the end of a print statement saying thers no C compiler. (even thou i think i do have it)
15:12 < augustl> TGYoshi: it would be interesting if you were able to reproduce it though
15:12 < augustl> so we can figure out what it actually is
15:13 < TGYoshi> I´ll make a tiny app instead sec
15:14 < TGYoshi> problem is mainly that the string is returned from some server
15:14 < TGYoshi> and not directly from the client
15:15 < augustl> doesn't matter, a buffer will be able to reproduce it I think
15:19 < TGYoshi> augustl I´m unable to reproduce it without response from the server..
15:20 < augustl> weird stuff
15:20 < TGYoshi> augustl It´s for sure something with special symbols tho, if I set my nickname to something very basic, ascii-like, then it works without problems
15:20 < nowjs4> hi
15:20 < augustl> TGYoshi: you could always inspect the raw bytes you get in the requests
15:20 < nowjs4> Is there a comfortable tool to "log" node.js messages on mac?
15:21 < nowjs4> I'd like to have a look on all console.log/error messages
15:21 < TGYoshi> augustl That sucks if it´s a xml-rpc response, huge mess :P
15:22 < TGYoshi> Weirdest is that console.log(nickname) ALWAYS worked
15:22 < TGYoshi> but storing as key failed
15:22 < TGYoshi> value**
15:28 < augustl> nowjs4: node foo.js > out.txt?
15:28 < nowjs4> august: And how to "watch" the txt
15:29 < augustl> trace the file
15:29 < augustl> less can do it, or write your own program
15:29 < augustl> less /path/to/file and press shift+f
15:30 < augustl> if  you don't want it in a file you can pipe directly to less too
15:30 < augustl> node foo.js | less
15:32 < Protected> Is there a way to iterate over every field of an array/object in node?
15:33 < nowjs4> what is less?
15:34 < augustl> nowjs4: a program
15:34 < nowjs4> okay…
15:34 < Protected> It's a tool that buffers a stream and shows no more than a screen at a time
15:34 < augustl> nowjs4: just try it and you'll see :)
15:34 < augustl> or less -h
15:34 < augustl> or whatever
15:34 < Protected> Anyone can help a noob with some array basics? 
15:34 < augustl> Protected: no generic way no
15:35 < Protected> Aw :(
15:35 < nowjs4> august1: And how do i hide all the "GET" log messages?
15:35 < nowjs4> Where can i download lesS?
15:35 < Protected> Are you running GNU/Linux?
15:35 < nowjs4> Mac OSC
15:36 < Protected> I'm afraid I know next to nothing about that one
15:36 < Protected> Do you have more?
15:36 < Protected> "more"
15:37 < jrajav> less comes with os x ...
15:38 < Germanaz0> Hello
15:38 < Protected> That makes sense
15:38 < Germanaz0> everybody
15:38 < Protected> :P
15:38 < Protected> augustl: How would I go about calling a function on every result of a multi-row database query, then? for (var i = 0; i < array.length; i++) ?
15:40 < Germanaz0> I'm trying to solve a problem with socket.io and nodejs, for example, I'm trying to upgrade a timeline, the problem is that I only want that only specific users ( ACL ) can show that post
15:40 < nowjs4> jrajav: Isn't there something better than less? I want colors in my logger, object explorer. Like Firebug does
15:40 < Germanaz0> I have no idea where to start
15:41 < jrajav> nowjs4: I think most has some basic coloring. Obviously coloring depends on what you want colored
15:41 < jrajav> nowjs4: It's usually better to look for language or domain-specific tools for coloring
15:42 < nowjs4> so whats the tool for node.js?
15:42 < jrajav> A text editor that doesn't suck? Chrome?
15:43 < jrajav> I use Sublime Text
15:43 < riven> ST2++
15:43 < jrajav> Others swear by the holy dogma of Vim or Emacs. Mostly they're just jealous
15:44 < riven> Mmhm, so true.
15:47 < gblock> +1 Sublime Text
15:54 < Protected> How can I return a value from within a callback?
15:54 < Protected> (probably a common question)
15:54 < coderarity> Protected, another callback
15:54 < thanpolas> anyone working on nodeunit?
15:54 < Protected> I don't see how that helps
15:54 < coderarity> Protected, sec i'll make a quick example
15:55 < Protected> Is there anything like pointers in node?
15:55 < milani> Protected, if the callback is within an object ( its a method of an object )
15:55 < thanpolas> variables are "pointers" ... references rather
15:55 < milani> set a variable in that object.
15:55 < Protected> It's not
15:55 < Protected> milani: Even primitive types?
15:56 < Protected> Guess not
15:56 < Protected> So I should pass an object from the outside into the callback and set a field in that object with the value I need outside, I suppose
15:57 < coderarity> Protected, https://gist.github.com/f63e97bb7a256a620dc9
15:57 < milani> Protected, yeah if you use a custom setter method its possible otherwise you can not determine when you should read the variable
15:57 < milani> because it is async.
15:57 < Protected> True
15:57 < milani> anyway, what coderarity suggested is better for common use.
15:57 < coderarity> if you're doing asynchronous stuff in a function you should pass in another callback to that function for when it's finished
15:58 < coderarity> you can't return stuff because the callback outlives your function
15:58 < coderarity> looks like some people suggested returning an object and changing stuff on that object later, which I guess would work, but how would you know when the data is ready?
15:59 < coderarity> callbacks are amazing
16:00 < Protected> Perhaps, but requiring them makes the language more restrictive
16:00 < Protected> needs optional blocking and multithreading :P
16:00 < coderarity> Protected, it has optional blocking
16:00 < coderarity> Protected, fs.readFileSync for example
16:01 < milani> oh no don't use blocking stuff to avoid a simple callback:)
16:01 < riven> lol.
16:01 < coderarity> Protected, if you're doing everything synchronously you are in the wrong place
16:01 < Protected> It's a simple callback in *his* example
16:01 < Protected> here it's spaghetti
16:01 < Protected> Nothing is synchronous *yet*
16:02 < coderarity> Protected, well, what's your case?
16:02 < milani> Protected, its not spaghetti.
16:02 < milani> its the way you work in js.
16:02 < milani> organizing code with callbacks is something you can manage with a little effort.
16:03 < coderarity> Protected, i mean, what are you trying to do?
16:05 < Protected> Return a value. I'm starting to realize return is pretty much useless here.
16:06 < Protected> It's like your example, but there are multiple paths for it to follow so I have to hang the callback on a lot of functions
16:06 < Protected> Anyway, the question is not whether it can be done, but whether it's readable
16:06 < Protected> It's probably possible to make this more readable (by breaking javascript, hehe)
16:06 < coderarity> multiple paths?
16:07 < coderarity> you have closures to keep track of stuff for you between callbacks :D
16:07 < Protected> They do, but that's not explicitly written in the code, so it can be confusing to read someone else's code
16:08 < coderarity> Protected, you're probably best off following techniques that have already worked well for other people.
16:08 < Sorella> Protected, you can use promises.
16:08 < Protected> I've been told not to
16:08 < Protected> I'm not exactly free to do what strikes my fancy here :(
16:09 < Sorella> Protected, why?
16:09 < Protected> Thesis
16:09 < Sorella> Oh.
16:09 < Protected> Anyone here uses node-mysql?
16:09 < Protected> It's not clear from the docs exactly can be put in the results object after a select query?
16:10 < Germanaz0> hey someone knows how to use socket.io and nodejs to send a msg to a particular user ? the user is someone connected in a frontend system written in php
16:12 < milani> Germanaz0, do you want to connect to your php client? or a user that is using your app?
16:13 < Germanaz0> milani: my use case is the following, I write a post in the php frontend, that is stored in a mysql database ( only friends could see it ), then I would like to notify my friends about new blog post
16:14 < Germanaz0> I was watching the emit event, but if I use an event, everybody will see it
16:14 < Germanaz0> how to tell in a very optimal way, to display that msg, to every friends ?
16:15 < Protected> Urgh, function arguments aren't part of an inner callback's closure :/
16:15  * Protected copies to local variable
16:18 < milani> Germanaz0, there are rooms in socket.io
16:18 < austinbv> Protected: ??
16:18 < Germanaz0> and what about acl ?
16:19 < Germanaz0> and is a system that handle multiple users that have them own friends
16:19 < upb> hmmm?
16:19 < Germanaz0> like facebook, take the example, I write a wall post, and my friends watch the update
16:19 < upb> sure they are Protected http://pastebin.com/26tYWFNf
16:19 < milani> Germanaz0, http://socket.io/#how-to-use
16:20 < Germanaz0> yes allready read that but 
16:20 < Germanaz0> I don't know that the answer is over there
16:21 < milani> Germanaz0, http://stackoverflow.com/questions/6846174/dynamic-rooms-with-socket-io-and-node
16:21 < milani> this may help
16:22 < Protected> Yeah, ignore that. My code is completely fucked up, time for another rewrite :)
16:22 < Protected> New paradigms are hard
16:24 < thanpolas> what's the proper way to output to stdout? console.log ?
16:24 < Sofi-cam> hi im using mi webcam do you wanna see me?
16:24 < Sofi-cam> enter in http://globalanxiety.blogspot.com and make click on pink letters to see me 
16:39 < Protected> Anyone has any idea about this? http://pastebin.com/y5hkbfk3
16:39 < tjholowaychuk> Protected _callback is not defined
16:39 < tjholowaychuk> oh it's 2
16:40 < IceD^> hey
16:40 < IceD^> I'm trying to make Cakefile to compile my cofee module files to js
16:41 < IceD^> task 'build', ->
16:41 < IceD^>   exec 'coffee -o lib c src/*.coffee'
16:41 < IceD^> does nothing
16:42 < tjholowaychuk> IceD^ https://gist.github.com/3067156
16:42 < tjholowaychuk> save yourself some trouble
16:43 < IceD^> why they can't have normal docs like all normal ppl?
16:44 < Protected> tjholowaychuk: All I could learn from the stack trace (2 lines) is that it's somewhere in node-mysql. All callbacks sent to node-mysql are defined (there are only 5 of them, I checked multiple times). I'm confused now :/ What's "apply" supposed to be, anyway?
16:45 < tjholowaychuk> Protected apply is to pass an array of arguments to that function
16:45 < tjholowaychuk> to "apply" them to the function for example foo(one, two, three) foo.apply(null, [one, two, three])
16:45 < tjholowaychuk> where unll is the receiver (this)
16:45 < tjholowaychuk> null*
16:46 < Protected> That's very helpful, thanks. I'll try something here.
16:48 < Protected> Yup, error gone! I was misled with the callback reference, when the issue had nothing to do with callbacks :)
16:48 < Protected> At some point a parameter had to be an array and it wasn't
16:49 <@isaacs> maxogden: nice topic :)
16:49 -!- Topic for #node.js: node point javascript: now with more flap http://i.imgur.com/Yyg1f.gif p.s. https://new.npmjs.org
16:49 -!- Topic set by maxogden [~max@ve.5bpbxlsy.vesrv.com] [Fri Jul  6 17:30:24 2012]
16:53 < CIA-93> node: Dominic Tarr v0.8 * r7accaeb / doc/api/stream.markdown : correct documentation of Stream#destroy - http://git.io/xeH56A
16:53 < CIA-93> node: isaacs v0.8 * r559a98f / doc/api/stream.markdown : doc: Formatting and grammar on stream api doc - http://git.io/iQTjfA
16:53 < tbranyen> how has iriscouch been working out for you isaacs ?
16:54 < tbranyen> their pricing model doesn't really seem sustainable
16:54 < tbranyen> wonder if they have some huge clients that keep them afloat
16:56 <@isaacs> tbranyen: it's great.
16:57 <@isaacs> tbranyen: and yes, they have some huge clients :)s
16:57 <@isaacs> tbranyen: they're very nice sponsors of the npm registry.  iow, i'm comp'ed.  but i see my bill each month.
16:58 <@isaacs> tbranyen: given how much of a fanatic JasonSmith is about automating everything to keep costs down, I'm guessing that it's really quite sustainable.
17:57 < chrisdickinson> man, 0.8 domains are cool, cool, cool.
18:00 < chrisdickinson> (just verifying that they exist the way i thought they did: https://gist.github.com/3067463)
18:01 < chrisdickinson> s/exist/work/g
18:01 < JerMenKoO> 20:00:54 chrisdickinson: s/exist/work/g
18:01 < JerMenKoO> wtf
18:02 < chrisdickinson> ?
18:02 < thanpolas> i just published a QUnit to nodeunit adapter to run QUnit tests natively in node.js: https://github.com/thanpolas/qunit2node
18:03 < JerMenKoO> what was the point of it? i saw it in multiple chans so im always confused
18:03 < zipp|remote> It's a regular expression replacement..?
18:04 < zipp|remote> Basically saying that work is his existence currently :x
18:05 < JerMenKoO> ah
18:07 < chrisdickinson> uh, nope, was replacing the above line's "exist" with "work"
18:07 < chrisdickinson> sorry for confusion!
18:10 < RLa> will domains play nice with lazy code that opens sockets or other io related code?
18:11 < chrisdickinson> RLa: i *think* so, though i haven't tested that.
18:12 < tjholowaychuk> chrisdickinson when you do custom async stuff like say mongoose doing User.find() etc do you have to do anything special?
18:12 < tjholowaychuk> explicitly add domains support or should it just work
18:24 < chrisdickinson> tjholowaychuk: so, all you should have to do is at the top level, add a request domain: https://github.com/chrisdickinson/utensil/blob/master/lib/client.js#L40
18:24 < chrisdickinson> and call domain.run(function() { /* all of the request listeners */ })
18:25 < chrisdickinson> any callbacks created in that time *should* be associated with that domain.
18:25 < tjholowaychuk> so if you have a few nested queries
18:25 < chrisdickinson> I'm not sure how it interacts with compiled modules, though.
18:25 < tjholowaychuk> it'll be fine?
18:25 < chrisdickinson> from what i've seen, yes.
18:25 < tjholowaychuk> hm
18:26 < chrisdickinson> any event emitter created while a domain is active is automatically associated with that domain -- and any error events that come out of them get redirected to the domain error listener.
18:26 < chrisdickinson> any uncaughtException on process gets redirected to the active domain as well.
18:26 < chrisdickinson> (if any.)
18:27 < TGYoshi> Does javascript Date automatically updates?
18:28 < TGYoshi> e.g. just making 1 instance of ´Date´, then .getTime() if I need it
18:29 < mc> nope
18:29 < TGYoshi> k, ty
18:30 < chrisdickinson> tjholowaychuk: (shameless plug: utensil will automatically handle the per-request domains, cluster.fork'ing/respawning of processes for you, as well as output metrics to an adaptor module if provided)
18:30 < tjholowaychuk> ya i saw that
18:30 < tjholowaychuk> looks cool im just not sold on domains yet
18:30 < tjholowaychuk> sounds like it has potential but im not a huge fan of layering codesmell on codesmell
18:30 < tjholowaychuk> kinda odd but hey
18:30  * chrisdickinson nods
18:31 < chrisdickinson> i feel a lot better now that i've played with 'em a bit. the one remaining bit i have yet to play with is how they interact with compiled modules -- might try it on node-sqlite this afternoon.
18:31 < tjholowaychuk> im curious about edge-cases too but i havent tried them yet
18:32 < tjholowaychuk> and leaks as far as that functionality goes in general
18:32 < chrisdickinson> i might write up a blog post or something once i've covered the angles.
18:32 < tjholowaychuk> that .on('error' stuff is definitely a source of problems
18:32 < chrisdickinson> i've been using utensil to run my little proxy for work and it doesn't seem to be leaking memory at all.
18:32 < tjholowaychuk> errors come from all over the place in node code it's terrible
18:32 < tjholowaychuk> to  write something robust
18:33 < chrisdickinson> domains seem to centralize errors nicely, without having to plaster everything in try / catch blocks, etc.
18:35 < tjholowaychuk> yeah error handling should definitely be opt-in, if you have no need for custom behaviour then it shouldn't be such a bother
18:35 < tjholowaychuk> delegate to whatever central handler
18:44 < chrisdickinson> tjholowaychuk: interesting, it seems like 3rd party compiled modules don't automatically send errors to the active domain.
19:15 < zipp|remote> Hey guys, does Node automatically resolve DNS in net.connect et all?
19:15 < riven> et al*
19:15 < zipp|remote> s/all/al/g
19:15 < zipp|remote> >_>
19:17 < zipp|remote> http://nodejs.org/api/dns.html Derp, maybe not.
19:40 < CIA-93> node: isaacs v0.8 * r59a40fc / (202 files in 9 dirs): npm: Upgrade to 1.1.36 - http://git.io/0tJ57A
19:50 < owen1> node.js has 40k lines of c/c++ and 20k of js.   does it sounds accurate?
19:54 < owen1> is the event loop running is the same process as my node app?
19:56 < augustl> owen1: yes
19:56 < chrisdickinson> isaacs: sorry for bugging you -- but do you know of any docs relating to what one has to do in C++ to add domain support for a compiled module?
19:58 < owen1> augustl: ok. so whenever i make an async i/o call, the event loop, on each 'tick', poll the status of the socket (in case of http/db call) and if the socket was changed, meaning, the data is available, it will call the callback.
20:00 < indexzero> chrisdickinson: You might want to join #libuv to ask, I'm not sure if domains are implemented at that level but it's worth asking
20:01 < augustl> owen1: I'm not sure about the details of how the async APIs work under the hood
20:01 < chrisdickinson> indexzero: thanks, will do.
20:02 < RLa> owen1, definition of "line of c/c++ and js" can vary
20:02 < RLa> are { on the next line? are empty lines counted? are comments counted?
20:02 < augustl> I just thought of a new rule for measuring LOC
20:03 < augustl> we know that when estimating projects, we should multiply it by pi
20:03 < augustl> pi should also be used when counting LOC
20:03 < owen1> RLa: also, it was only the node.js repo. is it only the node standard library + node binding? 
20:03 < RLa> well, estimates are just estimates, any number is as good as another
20:03 < chrisdickinson> indexzero: looks like they're all node-level. i'm basically trying to figure out why they have to be explicitly bound to e.g., node-sqlite3, while it seems like everywhere else they work automatically.
20:03 < augustl> actual LOC = loc +/- loc/pi
20:04 < RLa> owen1, i wonder where 20k js comes from
20:04 < augustl> LOC is very vague indeed
20:04 < RLa> or is the std lib that big?
20:04 < augustl> owen1: the nodejs repo vendors most of its dependencies I think
20:04 < RLa> it does not look so big
20:04 < augustl> including V8 and libuv
20:05 < RLa> owen1, there are ohcount and sloccount if you want compare with other projects
20:05 < RLa> sloccount uses some fancy standard and also gives the cost of code
20:07 < RLa> owen1, http://www.ohloh.net/p/node_js
20:07 < RLa> ohloh uses ohcount
20:11 < RLa> hm, there was large drop of python code in node in october 2011
20:11 < RLa> whole 20k lines dropped
20:15 < indexzero> chrisdickinson: I read through the domains code, I don't think there is anything similar in the C++ APIs
20:15 < indexzero> I'm no V8 expert, but perhaps you can instantiate the Javascript objects from the V8 apis
20:17 < owen1> RLa: i cloned the node repo and run: find . -name '*.js' | xargs wc -l
20:17 < owen1> RLa: the same for the c/c++ count
20:17 < RLa> for .js that gives 20k?
20:18 < owen1> RLa: clone it yourself just to make sure. 
20:18 < RLa> can you check std modules too
20:18 < owen1> it's for a node talk i am about to give
20:19 < RLa> uh, for 0.7.9 i get 122k
20:19 < RLa> but it includes npm
20:19 < benatkin> joshontheweb: hi
20:20 < joshontheweb> hey benatkin 
20:20 < joshontheweb> fancy seeing you here
20:20 < benatkin> joshontheweb: :)
20:20 < RLa> owen1, and tests
20:20 < RLa> owen1, lib is about 18k
20:21 < Benvie> the thing that domains do, largely, is tighter control over event emitters and errors
20:21 < Benvie> since so much of node's api is built on top of eventemitters, domains are likewise both possible (smotly) due to it, and oriented around them
20:22 < owen1> RLa: ok. 18k. what about c/c?
20:22 < owen1> c/cpp
20:28 < RLa> owen1, src gives here 6k for .h and 17k for .cc
20:30 < RLa> owen1, ohcount output: http://pastebin.com/WQ851nTZ
20:37 < JerMenKoO> RLa: where can i get that "ohcount"?
20:38 < nakkor> if I want to pass Date, such as var type = Date; how can I tell if type is a date? instanceof and typeof don't work :/
20:38 < jbpros> what multipart form middleware would you guys recommend? (connect/express)
20:39 < RLa> JerMenKoO, google for it
20:39 < augustl> nakkor: google closure compiler, heh
20:39 < augustl> or duck typing
20:39 < RLa> i installed it a lot time ago and have no idea how i did it
20:40 < nakkor> augustl: heh, didn't know that term, but I like it
20:40 < RLa> nakkor, if (Date === type) ?
20:40 < nakkor> RLa: wow, that was too simple, thanks
20:41 < RLa> i think it will fail if you use subtype there
20:41 < nakkor> k
20:41 < RLa> maybe you need to check prototype hierarchy too
20:42 < RLa> not sure how it would look
20:42 < CIA-93> node: isaacs v0.8 * rc49888b / src/node_version.h : Now working on 0.8.2 - http://git.io/CCgc2g
20:43 < ljharb> nakkor: if it's a date object, foo instanceof Date should absolutely work
20:43 < ljharb> more importantly if instanceof Date returns false, it's definitely not a date objec.
20:43 < RLa> i think he want to compare types not instances
20:43 < nakkor> ljharb: that was the rub, is that it was just    var type = Date;
20:44 < ljharb> nakkor: then it's not a date object, it's the date constructor. why are you checking types in that manner?
20:45 < nakkor> ljharb: schema definition, something similar to Mongoose schemas
20:45 < RLa> hm, interesting, Function is instance of itself
20:46 < ljharb> nakkor: then just do type === Date. it will be the same Date object if so
20:46 < ljharb> ah, you had that already
20:46 < augustl> and hope this isn't browser code :)
20:46 < augustl> instanceof is kind of dubious there
20:46 < nakkor> augustl: thank heavens no
20:46 < ljharb> RLa: of course it is. "Function" and "Function" are the same just like any "foo" and "foo" are the same.
20:47 < RLa> ljharb, not same but instance of!
20:47 < RLa> Function instanceof Function gives true
20:48 < riven> huh
20:48 < ljharb> ah. yes, because Function is a constructor function
20:48 < ljharb> you shouldn't be using the "Function" constructor for anything anyways, and you can't reliably use `instanceof Function` to determine callability.
20:49 < SubStack> Function() is still useful
20:49 < SubStack> especially if you're in a browser
20:49 < ljharb> how?
20:50 < SubStack> you can use it like vm.runInNewContext
20:50 < ljharb> creating a function by passing a string into the function constructor is eval, and evil.
20:50 < SubStack> because it takes a list of variables as arguments
20:50 < ljharb> i
20:50 < ljharb> m
20:50 < ljharb> im not sure what that means
20:56 < chrisdickinson> you can rewrite context with the Function constructor.
20:56 < chrisdickinson> var x = function() { return a + b }; y = Function('a', 'b', 'return '+x)(1, 2); y() // 3
20:56 < CIA-93> node: isaacs v0.8.2-release * r3bda892 / (AUTHORS ChangeLog src/node_version.h): 2012.07.09, Version 0.8.2 (Stable) - http://git.io/2cljXg
20:56 < ljharb> gross, why would you want to do that?
20:57 < chrisdickinson> ljharb: basically rewrites scope.
20:57 < ljharb> ah
20:57 < ljharb> yeah i'd never want to do that. that's awful.
21:02 < SubStack> ljharb: it's actually a pretty useful approach
21:03 < SubStack> especially where you need to evaluate code
21:03 < ljharb> where is that?
21:03 < SubStack> AST transforms, REPLs
21:04 < ljharb> hm, ok
21:05 < JerMenKoO> chrisdickinson: never seen that, looks weird
21:07 < hansin> I'm a little confused on character encoding with JavaScript. I know UTF-8 has kind of become the standard, but thought I read that JavaScript uses UTF-16. I want to try NodeJS out, which is why I ask here. Does anyone have any insight into this? Or should I just save my files as UTF-8 (without BOM?) and not worry about it?
21:08 < CIA-93> node: isaacs v0.8.2-release * r592de74 / (8 files in 4 dirs): v8: Upgrade to 3.11.10.14 - http://git.io/NjrKGA
21:08 < CIA-93> node: Bert Belder v0.8.2-release * r4d2f6d6 / deps/v8/build/common.gypi : v8: reapply floating patches - http://git.io/A3ebQA
21:08 < CIA-93> node: isaacs v0.8.2-release * r8ffde7e / (AUTHORS ChangeLog src/node_version.h): 2012.07.09, Version 0.8.2 (Stable) - http://git.io/cFQ2Nw
21:09 < CIA-93> node: isaacs v0.8.2-release * rab6530c / (AUTHORS ChangeLog src/node_version.h): 2012.07.09, Version 0.8.2 (Stable) - http://git.io/WByWpQ
21:11 < Asad> I was wondering since node.js is single-threaded, is everything else halted when sending data to a slow lingering connection? or does that lib uses threads? 
21:12 <@maxogden> anything with IO is evented, hence the term 'evented IO'. CPU is blocking though
21:17 < owen1> what does that mean? "I/O through DOM event callbacks."
21:19 < owen1> i guess it's when i bind event to dom element?
21:20 < CIA-93> node: Bert Belder v0.8 * rc6843f4 / .gitignore : gitignore: ignore .svn directories - http://git.io/bWfRbg
21:22 < chrisdickinson> isaacs: somewhat belated follow-up question: is MakeCallback new to node 0.8? should compiled modules start preferring to use it when available?
21:23 <@isaacs> chrisdickinson: yes, well, domains are new to node 0.8
21:24 < chrisdickinson> cool. wasn't aware if it existed before and simply didn't have the domain stuff, or if it was all-new.
21:24 < chrisdickinson> attempting to hop through the steps required to make node-sqlite3 support domains as a learning process.
21:26 < Leemp> Out of curiosity, anyone know of any notable apps/frameworks/libs/whatever for Nodejs on windows? I understand node and npm works on windows, i'm just curious if there is anything notable before i start heading down this road
21:32 <@isaacs> Leemp: "notable"?
21:32 < IceD^> how do one expand path in node, e.g. '~/foo.txt' to '/home/iced/foo.txt'
21:33 <@isaacs> IceD^: there is not a general way to do this yet.
21:33 < IceD^> ehm wat?
21:33 <@isaacs> IceD^: but you can do p.replace(/^~\/, process.env.HOME)
21:33 <@isaacs> where p is the path being expanded
21:33 <@isaacs> IceD^: it's more tricky than you think to do tilde expansion
21:33 < IceD^> 'awesome' :)
21:33 <@isaacs> IceD^: ~userx/path/to/stuff
21:34 <@isaacs> IceD^: where 'userx' is a username that's only defined in a network or domain or something
21:34 < Leemp> isaacs: Well, searching for "windows" on npmjs.org is only so productive hehe. I just thought maybe there might be an interesting project that is very handy for making node based applications on windows. Thought perhaps i might see a reply akin to "If you're using Nodejs, check out ____ project! It's a life saver for dealing with ___ problem on windows"
21:34 < IceD^> there is func in stdlib for that, I'm pretty sure
21:34 <@isaacs> IceD^: yes, but it's unix only
21:34 <@isaacs> IceD^: and you can't rely on /etc/passwd having the details you need
21:34 < IceD^> who cares about windows ;)
21:34 < Leemp> isaacs: I'm not seeing anything, so i assume not. :)
21:34 <@isaacs> a) that doesn't exist on windows, b) that file is incomplete in ever modern unix
21:35  * isaacs cares about windows
21:35 <@isaacs> IceD^: there's been talk of exposing passwd functions in libuv in a cross-platform way
21:35 < Leemp> IceD^: An audience i intend to reach cares about windows, haha
21:35 <@isaacs> IceD^: these functions can incur some nontrivial network IO, and often hit the disk, so they need to be async
21:36 < alex4nder> IceD^: if you only need it every once in a while, just ask the shell to resolve that shit for you.
21:36 <@isaacs> IceD^: but it'll eventually be something like require('passwd').getpwnam('userx', function (er, details) { ... })
21:36 <@isaacs> IceD^: then I'll be able to put tilde expansion into node-glob
21:38 < IceD^> ok, that workaround works
21:38 < IceD^> related question - './foo.txt' - it looks like relative to module dir, not to the `pwd`
21:38 < IceD^> any way around?
21:40 < CIA-93> node: Bert Belder v0.8 * r3e5139f / configure : Fix the Windows build - http://git.io/Rh2hYg
21:40 < Leemp> Is it possible to set up your own host host for packages, while retaining the ability to use pattern matching with versions?
21:41 < TonkaTruck> Can someone tell me if "npm install expresso" is the _only_ required installation step?  Do I need to make/install on osx as well?  I get "command not found" for "expresso" at the command line after npm install.
21:42 < chrisdickinson> TonkaTruck: npm install -g expresso, if it's looking for the command.
21:42 < Leemp> TonkaTruck: I believe commands often require -g installation
21:42 < chrisdickinson> Or you can use it from ./node_modules/.bin/expresso
21:42 < Leemp> TonkaTruck: If you don't want to -g, you can .. do what chrisdickinson said. hehe :)
21:43 < TonkaTruck> chrisdickinson: Yeah I was just about to try that.  I'll try -g heh
21:44 < IceD^> hrrr, can't find this workaround :)
21:44 < llrcombs> Is it possible to ensure that the entire contents of a Buffer being sent on a net.Socket are sent in one packet?
21:45 < llrcombs> I'm trying to interface with a very finicky device, and the docs say each message should be entirely in a single packet. I'm not that knowledgeable about the deeper workings of TCP.
21:47 < CIA-93> node: isaacs v0.8 * r5b5c8b6 / (8 files in 4 dirs): v8: Upgrade to 3.11.10.14 - http://git.io/VF__Ow
21:47 < CIA-93> node: Bert Belder v0.8 * r1c1ad9b / deps/v8/build/common.gypi : v8: reapply floating patches - http://git.io/Kpy-bw
21:47 < CIA-93> node: isaacs v0.8.12-release * r2fdf065 / (AUTHORS ChangeLog src/node_version.h): 2012.07.09, Version 0.8.2 (Stable) - http://git.io/fqfbAw
21:49 < CIA-93> node: isaacs v0.8.2-release * r2fdf065 / (AUTHORS ChangeLog src/node_version.h): 2012.07.09, Version 0.8.2 (Stable) - http://git.io/fqfbAw
21:50 < CIA-93> node: isaacs v0.8.2-release * ra6a2edb / (AUTHORS ChangeLog src/node_version.h): 2012.07.09, Version 0.8.2 (Stable) - http://git.io/Y915Ow
21:50 < benatkin> wondered how it went from v0.8.1 to v0.8.12 so quickly :D
21:51 < RLa> haha
21:54 < TonkaTruck> Leemp: chrisdickinson: Do you guys use another package to manage fixtures with expresso?  Setup/teardown, too?  (-g worked swell, thanks)
21:54 < TonkaTruck> Or, can you recommend one I mean.
21:55 < Hotroot> llrcombs: I was just asking about this yesterday basically
21:56 < Hotroot> It's better to just do a stream with a buffer, and when the client sends the EOF you know that you have all the data
21:56 < Hotroot> On a side note, has anyone here used AlienVPS?
21:57 < Leemp> TonkaTruck: For testing? A lot of different ones.. lot of different styles :/
21:58 < llrcombs> Hotroot: how can I do that? I'm about to leave; could you PM?
21:58 < Leemp> TonkaTruck: I'm big on Mocha
21:58 < Leemp> Simple, effective
21:59 < TonkaTruck> Leemp: Thanks!
22:00 < Leemp> TonkaTruck: Wait, Express or Expresso?
22:00 < Leemp> Sorry, i was thinking Express
22:00 < TonkaTruck> Well I was going to set up testing with expressO
22:00 < Leemp> Right
22:00 < Leemp> Haven't used Expresso much, sorry
22:01 < RLa> Hotroot, why their OpenVZ plans are considerably cheaper than Xen and KVM plans?
22:01 < TonkaTruck> I haven't worked with express yet...just making a little socket.io thingy for my first node project.
22:02 < CIA-93> node: isaacs reviewme * r5e44f5f / test/simple/test-require-json.js : Fix test-require-json on Windows (+47 more commits...) - http://git.io/FJLCdA
22:04 < ljharb> it seems so wrong to see the word "expresso" because so many people misspell "espresso" that way
22:05 < TonkaTruck> Leemp: Oh this Mocha will serve me better than Expresso alone.  Thanks...I'll use this instead.  I should've googled "testing framework"
22:05 < Hotroot> llrcombs: I'm not really an expert on it
22:06 < Leemp> TonkaTruck: I like it :)
22:06 < Hotroot> RLa: OpenVZ is often cheaper because OpenVZ VPS allow some resource sharing
22:06 < Hotroot> If you have Xen, nobody can ever touch your resources, it's like a little OS with it's own stuff allocated
22:08 < RLa> hm, so with openvz one resource-hungry user can do some bad for others on the same host machine?
22:09 < CIA-93> node: isaacs reviewme * r5abce2b / test/simple/test-require-json.js : Fix test-require-json on Windows - http://git.io/j0N31Q
22:13 < CIA-93> node: isaacs reviewme * r197b47c / test/simple/test-require-json.js : Fix test-require-json on Windows - http://git.io/Bbd8ag
22:15 < CIA-93> node: isaacs v0.8.2-release * rc4e9226 / test/simple/test-require-json.js : Fix test-require-json on Windows - http://git.io/So16yQ
22:15 < CIA-93> node: isaacs v0.8.2-release * rcc6084b / (AUTHORS ChangeLog src/node_version.h): 2012.07.09, Version 0.8.2 (Stable) - http://git.io/Aa7hlA
22:16 < Hotroot> RLa: That is the downside I believe, yes
22:16 < RLa> hm, i'm using linode vps here, works well
22:17 < RLa> their support is very good
22:17 < alex4nder> yah, linode is great
22:17 < alex4nder> expensive if you need a lot of storage though
22:17 < Hotroot> I'm considering linode
22:17 < Hotroot> I'm a very frugal person though, so it's painful when I see so many cheap VPS's
22:18 < alex4nder> you get rickrolled whenever you call into support and get put on hold
22:18 < RLa> they also have irc at irc.oftc.net, channel #linode
22:19 < Hotroot> RLa: OpenVZ also has to be linux, while Xen allows everyone any OS they want. Xen requires more resources to separate it all AFIAK too
22:19 < RLa> hm
22:19 < Hotroot> Anyway, later all, showah time
22:19  * Hotroot is AFK
22:58  * Nexxy signs maxogden up for catfacts
23:32 < Hotroot> buffer += data works correctly, right?
23:32 < Hotroot> And will reset after a buffer.fill(0)?
23:38 < owen1> is it accurate to say that when i make async call, i am adding event to the event loop?
23:40 < ljharb> not at all
23:41 < owen1> ljharb: would u mind correcting it? (it's for a slide in a talk)
23:41 < ljharb> what's the subject of the talk?
23:41 < owen1> node.js
23:42 < owen1> i know node uses libuv(wrapper on top of select and epoll)
23:42 < ljharb> hm, maybe "not at all" was uncharitable. let me think about it for a sec.
23:42 < owen1> but trying to understand what happened when i do db.query('select all', function() {})
23:43 < owen1> i thought that the function i passed is added to the file discriptors that are being watched by the event loop
23:43 < owen1> or something like that
23:43 < ljharb> so the "event loop" describes the process of running code, and then pulling events off of the event stack
23:43 < jesusabdullah> it's different from the specific action of adding an event listener though
23:44 < ljharb> you can't add anything to the loop, but youre adding something to the pile of things the loop looks at
23:44 < owen1> ljharb: correct
23:44 < owen1> http://ifup.org/slides/libuv-osb/#8
23:44 < jesusabdullah> piscisaureus_ gave a very interesting talk on libuv at nodeconf, you should see if you can find it
23:44 < jesusabdullah> owen1: ^^
23:45 < owen1> so fds are the file descriptors that the even loop is listening to
23:45 < jesusabdullah> In fact, libuv can run multiple "types" of event loops, and iirc select/epoll wasn't even the optimal solution for linux
23:45 < jesusabdullah> (meanwhile I was like, "how u c++ lol")
23:46 < owen1> jesusabdullah: what's nfds stands for?
23:46 < owen1> and what does timer_callback does?
23:46 < llrcombs> Is it possible to ensure that the entire contents of a Buffer being sent on a net.Socket are sent in one packet?
23:47 < llrcombs> I'm trying to interface with a very finicky device, and the docs say each message should be entirely in a single packet. I'm not that knowledgeable about the deeper workings of TCP.
23:48 < owen1> jesusabdullah: can i think of this as queue of callbacks?
23:48 < jesusabdullah> owen1: I'm not that knowledgeable of the libuv internals, unfortunately
23:48 < ljharb> owen1: i used the word "pile" because i think the data structure will vary and isn't important
23:48 < jesusabdullah> owen1: I mean, how far down the rabbit hole do you want to go?
23:49 < alex4nder> llrcombs: are you writing it out as one buffer?
23:49 < owen1> http://ifup.org/slides/libuv-osb/#8 i just want to be able to explain this slide..
23:49 < jesusabdullah> owen1: I think it's sufficient to say that node and libuv somehow schedule your actions in a smart way, based largely around waiting for events to occur on sockets, etc.
23:50 < jesusabdullah> owen1: oh, now that I look at that
23:50 < jesusabdullah> owen1: that's not really even legit code or anything, just a sort of quick demonstration of how such a loop would work
23:50 < owen1> right. it say pseudo
23:51 < llrcombs> alex4nder: I'm doing client.write(buffer)
23:51 < jesusabdullah> owen1: The idea it's describing is pretty much the same one you're talking about though. It gets these new events and it has a stack of things that care about that event, and goes through them
23:51 < jesusabdullah> owen1: You may actually be interested in looking the the source code for EventEmitter. That's basically how events work at that level as well, just without an explicit loop
23:52 < owen1> jesusabdullah: are callback actually events under the hood?
23:52 < jesusabdullah> because node has an internal, native sense of a "tick", where things are processed on some sort of stack or other, every pass
23:52 < jesusabdullah> owen1: callbacks are callbacks
23:53 < Hotroot> Buffer is starting to confuse me
23:53 < ljharb> callbacks are functions. events aren't.
23:53 < Hotroot> I make buffer based on # of octets, but I can only get byte length of a string?
23:53 < owen1> jesusabdullah: process.nextTick tells node to stop running the current function, and continue the event loop, right?
23:53 < Hotroot> Is 8 bit byte the default?
23:54 < jesusabdullah> by definition
23:54 < Hotroot> I figured that was system dependent. I just want to get how full the buffer is
23:55 < jesusabdullah> Hotroot: 8 bits is a byte. In ASCII each character is represented by a byte. In utf-8 encodings are chunked into bytes but any given character may take multiple bytes to encode.
23:55 < jesusabdullah> Hotroot: So, it's encoding-dependent how bits/bytes get turned into text.
23:55 < Hotroot> Alright, I know not everyone follows the 8bit byte standard
23:56 < jesusabdullah> owen1: process.nextTick(cb) puts `cb` onto the stack to be called the next time node loops through
23:56 < jesusabdullah> owen1: ie, on the "next tick"
23:56 < Hotroot> The buffer is just a chunk of whatever, right? I can't figure out its "length", I have to keep track of number of bytes myself?
23:57 < jesusabdullah> Hotroot: a buffer's length should be in bytes.
23:57 < Hotroot> How do you get buffer length?
23:57 < jesusabdullah> Hotroot: but buff.length !== String(buff).length necessarily
23:57 < Hotroot> Ah
23:57 < Hotroot> So I do have to manage it myself?
23:57 < jesusabdullah> I mean
23:58 < Hotroot> Then what's the point of buffer.fill(0) if it's all just a clump of data?
23:58 < jesusabdullah> insofar as you have to consider encoding
23:58 < jesusabdullah> when going between buffers and strings
23:58 < jesusabdullah> buffers are just raw octets
23:59 < Hotroot> My understanding was that buffer.length was just the size of the buffer, you can't change it
23:59 < jesusabdullah> Oh, I see what you mean
23:59 < jesusabdullah> You mean, if you write to the buffer, how do you know how many bytes you wrote
23:59 < jesusabdullah> and where you "left off"
23:59 < jesusabdullah> That, you do have to manage but it's not too bad since the functions return the things you need to remember
23:59 < Hotroot> Yeah
--- Log closed Sun Jul 08 00:00:04 2012
