--- Log opened Fri Dec 14 00:00:06 2012
--- Day changed Fri Dec 14 2012
00:00 < defunctzombie> but it sure is nice to be only adding < 200 bytes if possible
00:00 < defunctzombie> then you could even add it to every bundling and no one would care
00:00 < defunctzombie> anyhow.. none of this is the point
00:03 < defunctzombie> tjholowaychuk: many ideas in component are very awesome.. but I certainly don't like the idea of "emitter" and "emitter-component" in the code just based on some runtime fact :)
00:03 < defunctzombie> the html/css aspects are cool tho and I haven't explored those yet
00:04 < tjholowaychuk> defunctzombie that's not necessary since npm supports GH stuff now
00:04 < tjholowaychuk> we can rename that and problem solved
00:04 < esoteric11> has anyone tried using the demo server from Maple.js
00:04 < defunctzombie> tjholowaychuk: it has supported gh stuff for a long time
00:04 < tjholowaychuk> defunctzombie well i mean without the large urls
00:04 < defunctzombie> :p
00:09 < defunctzombie> tjholowaychuk: https://github.com/shtylman/node-script#packagejson I have pull requests out for the "ws" and "xmlhttprequest" modules
00:09 < defunctzombie> once those are accepted
00:09 < defunctzombie> teh engine.io codebase is identical for browser and server
00:09 < defunctzombie> \o/
00:09 < defunctzombie> and only the builder (whatever it is) knows
00:10 < defunctzombie> the browser field will be what any builder can read
00:11 < samholmes> How do I start an open source project that a group of people would dedicate commits to?
00:11 < samholmes> dedicate time to commit to it*
00:12 < samholmes> If you look at the big node.js projects like express, you can see that there are a lot of people that contribute.
00:12 < samholmes> How do I get my open source project off the ground like that?
00:12 < substack> samholmes: you're going about it all wrong
00:12 < defunctzombie> samholmes: make it awesome
00:12 < samholmes> substack: Am I?
00:12 < defunctzombie> and then if people like it, they will use it
00:12 < substack> build useful tiny things
00:12 < defunctzombie> and if they use it
00:12 < substack> yes
00:12 < defunctzombie> they will make it better
00:12 < tjholowaychuk> small things are boring so dont expect people to follow them
00:12 < kenperkins> how long does it take npm to update after a publish
00:12 < tjholowaychuk> haha
00:12 < tjholowaychuk> but otherwise yeah i agree
00:12 < substack> contributors are something that happens, not something you should try to go out and get
00:13 < defunctzombie> kenperkins: should be immediate
00:13 < samholmes> substack: I'm talking about app projects, not so much libs.
00:13 < defunctzombie> +1 substack
00:13 < kenperkins> hm
00:13 < substack> the long tail of boring tiny modules is where the bulk of the value is
00:13 < samholmes> substack: what do you mean by your last statemnet?
00:14 < defunctzombie> :D
00:14 < samholmes> -statemnet+statement
00:14 < kenperkins> isaacs: is there a way to merge to different npm accounts?
00:14 <@isaacs> kenperkins: npm owner add <other account> <my package>
00:14 <@isaacs> kenperkins: do that for all your packages.
00:15 <@isaacs> kenperkins: then do: npm owner rm <account> <my package> for the one you don't wnat to use
00:15 < kenperkins> gotcha
00:15 < kenperkins> thanks
00:15 <@isaacs> kenperkins: then just use the one that's the owner on all the pkgs, and forget about the other
00:15 < defunctzombie> substack: tjholowaychuk: you know we have come a long way when one starts considering jquery as "heavyweight" :)
00:16 < tjholowaychuk> haha yeah, it would be somewhat tolerable if it didn't have the bad xhr portion and promises and all that other
00:16 < tjholowaychuk> stuff
00:16 < defunctzombie> so selectors hahah
00:16 < defunctzombie> basically cross browser selectors and attribute access
00:16 < substack> samholmes: many tiny things focused on narrow problems are in the aggregate more useful than broad solutions that solve swaths of problem-space
00:16 < tjholowaychuk> yeah just dom manip haha, but even that is an app-level sort of dep
00:17 < tjholowaychuk> like requiring underscore to use debouce only
00:17 < tjholowaychuk> is odd
00:17 < substack> the problem is that it takes time to get enough well-maintained tiny pieces
00:17 < tjholowaychuk> but in your app if you find that easier / faster to work with
00:17 < tjholowaychuk> go nuts
00:17 <@isaacs> it's the tjholowaychuk!
00:17 < tjholowaychuk> zomGGg
00:17 < samholmes> substack: Do you only mean for the lib space though? Saying that about applications isn't necessarily useful, what say you?
00:18 < substack> samholmes: applications are just some glue that stitches together library code
00:18 <@isaacs> substack: this^
00:18 <@isaacs> the application is shit code, always.
00:18 < samholmes> I guess. :\
00:18 <@isaacs> try to have as little of it as possible.
00:18 <@isaacs> put the value in teh bits that do stuff
00:18 < substack> libraries are simple, fun, and easy to write and test
00:18 <@isaacs> not the glue that stucks it all togehter
00:19 < substack> applications are only fun when the glue is minimalish
00:19 < substack> yes application code tends to be much less fun
00:19 < samholmes> I see. Intereseting paradigm
00:20 < defunctzombie> applications are only interesting in what they do.. not who they are :p
00:20 < substack> isaacs: the http parser in core is so magical :(
00:20 < substack> it is the mystical dragon which I am presently trying to slay
00:20 <@isaacs> substack: write me a better one.
00:20 <@isaacs> substack: a faster one.
00:20 < substack> in time
00:21 <@isaacs> substack: a javascriptier one
00:21 < defunctzombie> hahaha
00:21 < substack> first I am tricking it to leave me alone and get out of my way
00:21 <@isaacs> substack: nono, it's impossible.
00:21 < substack> false
00:21 <@isaacs> substack: there's no way to make this one work
00:21 <@isaacs> substack: tget that idea out of your mind.
00:21  * isaacs is worried that substack will meet his needs with the current http_parser binding, and then move on.
00:22 < substack> isaacs: worse is better
00:22 < samholmes> isaacs: have you taken dahl's place on the node.js project?
00:22 < substack> isaacs: you should just stop working on node but also make sure that nobody else starts working on it in your place
00:23 <@isaacs> samholmes: yes.
00:23 < substack> that way I could just write code and not have to worry about the runtime changing out from under me all the time
00:23 <@isaacs> substack: shh.  that's what i've BEEN doing.
00:23 <@isaacs> substack: don't believe me?  just ask yoursefl... where's 0.10?
00:23 <@isaacs> substack: look at the master branch.  there's no streams2 there.
00:23 <@isaacs> substack: i just fly around the world talking shit.
00:23 < substack> haha
00:24 < samholmes> isaacs: .10, whatabout .9?
00:24 <@isaacs> (j/k I'm totally gonna change shit under you)
00:24 <@isaacs> samholmes: 0.9 is the current unstable branch
00:24 < samholmes> ohrite
00:24 <@isaacs> samholmes: node does an even/odd thing
00:24 < samholmes> don't follow?
00:24 < inolen> even stable odd unstable
00:26 < MI6> joyent/libuv: Ben Noordhuis master * e079a99 : unix: fix event loop stall  Fix a rather obscure bug where the event loop - http://git.io/yOwA8g
00:26 <@isaacs> samholmes: ^
00:26 < tjholowaychuk> substack will you have a non-purple option for testling ci? haha, just a cookie or something
00:26 < tjholowaychuk> the rest is nice :D
00:26 <@isaacs> samholmes: 0.9 is unstable, and when it's ready, it'll turn into 0.10, like how 0.7 turned into 0.8
00:26 < tjholowaychuk> pretty crazy that the competitors haven't worked up similar
00:26 < samholmes> Ahhhhhhhhhhhhhhhhhhhhhh
00:27 < substack> tjholowaychuk: the paid version will be the color of your choice
00:27 < tjholowaychuk> haha
00:27 < tjholowaychuk> sweet
00:27 < substack> that shit costs hella moneys
00:27 < MI6> joyent/node: Ben Noordhuis master * 6cf68ae : deps: upgrade libuv to e079a99 - http://git.io/gyzTiA
00:27 < substack> need to run several color servers just to handle the load
00:27 < inolen> isaacs: I don't follow the core dev much - is there an eta on 0.9.4?
00:28 <@isaacs> inolen: 0.9.4 either tomorrow or monday
00:28 < inolen> excellent
00:28 < inolen> thanks
00:29 < tjholowaychuk> perl Makefile.PL, I sure hope ryan is working on fixing package hell at the system level haha
00:30 < tjholowaychuk> so fucked
00:39 < csurap> Im trying to upload a file ( can be large file) through my front end server to my api. 
00:40 < drx_> How can I pass parameters to constructors of node.js modules ? 
00:40 < csurap> How can I stream the upload file without saving the file first on my fronted server ?
00:40 < drx_> Example:      var user = new User( {name:"john"} ); 
00:43 < timeturner> what happened to ryan?
00:43 < timeturner> he just disappeared from everything
00:44 < jobu1342> Hey all, I'm a noob playing around with node.js for the first time, and I'm getting "npm ERR! TypeError: Cannot call method 'replace' of undefined" when I attempt to run "npm install <module> --save".
00:44 < jobu1342> Any ideas why? I got the same error when running npm init after typing in my info, so I created a package.json by hand
00:47 < tjholowaychuk> isaacs: is "exif": "visionmedia/exif" not the right syntax for the new repo thing?
00:47 < tjholowaychuk> im getting No compatible version found: exif@'visionmedia/exif'
00:48 <@isaacs> tjholowaychuk: upgrade npm
00:48 <@isaacs> tjholowaychuk: that feature is super new.
00:48 <@isaacs> like, 1.1.65 or so
00:49 < tjholowaychuk> mhmm same deal with 1.1.69
00:49 < tjholowaychuk> hmm*
00:49 < tjholowaychuk> Valid install targets:
00:49 < tjholowaychuk> ["0.1.0"]
00:49 < tjholowaychuk> apparently
00:50 < tjholowaychuk> there is no 0.1.0 i think it's confused about the registry "exif"
00:50 < tjholowaychuk> clearing the cache didn't help
00:54 < samik_> hi
00:54 < jobu1342> Darn, I was hoping the IRC channel could help where google failed. It'd be nice if I could have figured out what was wrong with npm.
01:01 < MI6> joyent/node: isaacs master * 77ed12f : Merge remote-tracking branch 'ry/v0.8' into master  Conflicts: 	AUTHORS 	 (+45 more commits) - http://git.io/Wrq-wg
01:04 < tim_smart> substack: Around?
01:04 < tim_smart> substack: My env settings in fleet.json don't get passed to spawn. Is that expected?
01:17 < samholmes> tjholowaychuk: Hey.
01:18 < tjholowaychuk> samholmes herrow
01:18 < samholmes> :)
01:19 < CoverSlide> tjholowaychuk: aww I was hoping you'd have made a pure JS exif parser. we need more binary parsers for node
01:19 < samholmes> tjholowaychuk: I had a quick question. I'm using page.js. Weirdly, "/profile/:userId([0-9]+)" becomes this regex /^\/profile\/(?:([0-9](.+)))\/?$/i for some reason...Which is causing my routes not to work on /profile/1 to /profile/9.
01:19 < tjholowaychuk> CoverSlide haha no, far too lazy for that
01:20 < CoverSlide> i've been working on a pkzip one, not too hard tbh
01:20 < tjholowaychuk> samholmes which version? + should be normal that was only in there for a version or two
01:20 < tjholowaychuk> samholmes try updating if you havent
01:20 < tjholowaychuk> CoverSlide but ~8 lines is so much easier :D haha
01:20 < samholmes> tjholowaychuk: Okay, I'll try updating to see if that fixes it. I'll let you know. :)
01:20 < tjholowaychuk> we dont have high-traffic needs with it
01:20 < tjholowaychuk> just something that actually works
01:23 < samholmes> How does semver work if I want to make it use the latest version?
01:24 < tjholowaychuk> ~ would do that if it checked major
01:24 < tjholowaychuk> or 3.x
01:29 < samholmes> I see
01:29 < samholmes> I'm using 1.3.2
01:29 < samholmes> I've updated to it. And it still seems to be broke. :
01:29 < samholmes> :|
01:30 < tjholowaychuk> 1.3.2 is at least 2-3 years old
01:30 < Zelest> debian style!
01:30 < Zelest> *ahem*
01:31 < samholmes> Release 1.3.2 was the latest commit on https://github.com/visionmedia/page.js
01:31 < csurap> How can I stream a file upload to a different server without saving on the disk ?
01:32 < samholmes> tjholowaychuk: ^
01:32 < tjholowaychuk> samholmes oh I thought you were talking about express
01:32 < samholmes> tjholowaychuk: Nah, page.js
01:32  * samholmes said that. xP
01:32 < tjholowaychuk> I'll fix it tomorrow I know what the issue is
01:33 < CoverSlide> csurap: that's a loaded question
01:33 < CoverSlide> csurap: er wait, not loaded
01:33  * CoverSlide is bad with idioms
01:34 < csurap> CoverSlide: didn't get you.
01:34 < CoverSlide> csurap: it's not simple
01:34 < csurap> doable ?
01:34 < samholmes> tjholowaychuk: Okay. I'll hold you to it. ;)
01:34 < samholmes> Thanks man.
01:34 < CoverSlide> csurap: well first of all, i'm assuming you're using express
01:34 < csurap> CoverSlide: correct 
01:37 < CoverSlide> unfortunately, formidable file uploads already write to disk
01:37 < CoverSlide> so you'd have to do it without formidable
01:38 < CoverSlide> which is the default in express/connect
01:38 < mdedetrich> man, I wish bean bags didnt sink so much
01:39 < CoverSlide> mdedetrich: the don't sink much, in water
01:39 < mdedetrich> yeah well, I don't happen to be in a pool right now
01:39 < CoverSlide> you should be
01:39 < CoverSlide> pools are the shit
01:39 < mdedetrich> evidently
01:43 < samholmes> tj left, but does anyone else know much about the express/page.js routing spec?
01:44 < csurap> CoverSlide: so no luck ?
01:48 < CoverSlide> well there are other multipart parsers i think, but the one in formidable is probably the most well-curated
01:48 < CoverSlide> i hate that it's coupled to immediately creating a writeSream
01:48 < CoverSlide> but if it's ok that it writes to a temporary location, you can stream that file to a remote server
01:49 < CoverSlide> now how is the remote server supposed to recieve it?
01:52 < csurap> CoverSlide: the remove server listens for "post" route.
01:52 < CoverSlide> ok and it takes multipart/form-data?
01:52 < csurap> yes
01:52 < CoverSlide> well i think formidable can create multipart streams as well
01:52 < CoverSlide> but don't quote me on thatt
01:53 < CoverSlide> or try the form-data module.
01:53 < CoverSlide> i just saw that one
01:58 < csurap> will give it a try. thank you
02:00 < _numbers> oh so thats what node stands for
02:02 < _numbers> hm i wonder if anyone has ported capistrano to node yet
02:02 < CoverSlide> I thought it was Northern Obelisk Defense Experiment
02:03 < CoverSlide> there's stuff like capistrano for node
02:03 < CoverSlide> a lot of the attempts to make ruby-like stuff on node failed
02:03 < CoverSlide> like cucumber
02:03 < CoverSlide> haml
02:03 < CoverSlide> and instead node-specific ones were made in their place
02:04 < _numbers> well theres haml js and nobody needs cucumber anymore, mocha does better bdd and tdd
02:04 < CoverSlide> not sure 100% what capistrano does, so I can't tell you of any viable alternatives
02:04 < _numbers> but ya ur right. an alternative would be welcome
02:04 < CoverSlide> haml js is not maintained
02:04 < _numbers> often things are written better the 2nd time
02:04 < CoverSlide> i know they are out there
02:04 < _numbers> i'm actually enjoying coffeecup a lot more than haml, jade, and slim
02:05 < trankil> Hello everyone.
02:05 < _numbers> well i want something to automate deployment. ideally with opscode chef-solo integration
02:05 < trankil> Im happy today, thats all.
02:05 < _numbers> the magic of capistrano was a ruby lib that could integration with ssh i/o so you could read the prompts and answer them
02:05 < _numbers>  called ruby expect
02:05 < _numbers> expect.rb
02:05 < CoverSlide> well either way, i think you can use capistrano to deploy your node apps
02:05 < _numbers> ya but its not maintained really either
02:06 < _numbers> jamis buck of 37signals originally authored it and its been community maintained for like over 3 years i think
02:06 < _numbers> not many improvements
02:06 < _numbers> all i'd really need to build a node version would be the c binding for ssh i/o
02:06 < _numbers> on node
02:06 < CoverSlide> I think someone's been working on js bindings for ssh
02:07 < CoverSlide> https://github.com/mscdex/ssh2
02:07 < exit2> What's the deal with using node.js with iOS? I keep seeing these iPhone app companies touting node
02:08 < _numbers> https://github.com/mscdex/ssh2
02:08 < CoverSlide> exit2: most likely they're using it as a REST server
02:08 < _numbers> o yep hjehe
02:08 < CoverSlide> exit2: not actually running node on their iDevice
02:08 < _numbers> also https://github.com/VanCoding/NodeSSH
02:09 < CoverSlide> exit2: linkedin uses node for their mobile apps, iOS or android
02:09 < CoverSlide> not iOS-specific
02:09 < _numbers> oh this looks like a cap clone https://github.com/tsmith/node-control
02:09 < trankil> exit2: the goal is to have a better iosmaps, because node can maps and route you asyncly.
02:09 < CoverSlide> exit2: TooTallNate has done some work on running node on iOS, not sure what the status of that work is
02:10 < TooTallNate> exit2: i think companies saying that are talking about their server-side being written in node
02:11 < TooTallNate> exit2: though yes, it is possible to run node itself on a jailbroken iphone
02:11 < exit2> Interesting, I'm joining a local startup here in Florida and was hoping my node knowledge may help with there goals to dev web and iPhone apps
02:11 < CoverSlide> there is a node package on the android play store, but it's kinda shitty, just a text field to put your args in and then it runs and shows the output
02:13 < CoverSlide> well the your server architecture is a big part of any app, node is a great choice for that
02:14 < trankil> exit2: if you have a startup, use node, and Rails. You will have 1M more users.
02:14 < exit2> ok sounds good ha
02:15 < exit2> Ruby on Nodes
02:16 < trankil> Yes.
02:16 < trankil> also think about using rabbitmq, socketio, redis, mongodb, and of course an ARDrone.
02:16 < chilts> Ruby on CloudNodes
02:16 < exit2> Node Dot Rails even
02:16 < exit2> ah yes I forgot about clouds
02:16 < chilts> yeah, cloudeverything
02:16 < trankil> no cloud.
02:17 < trankil> its so 2010
02:17 < chilts> oopse, what's 2013?
02:17 < chilts> or 2020?
02:17 < exit2> lol trankil your description is this companies engineering profile http://www.mailboxapp.com/jobs.html
02:17 < chilts> Cloud v2.0?
02:17 < exit2> Cloud 2.0 with HTML9
02:18 < chilts> CSS v19bazillion
02:19 < trankil> 2019: Drones in the cloud, propaging viruses, running REPL As a Service, providing high-scalability fly solutions for humans.
02:21 < mscdex> _numbers: ssh2 ftw! i'm not biased!
02:21 < _numbers> uh oh repo author in our midst
02:22 < _numbers> mscdex: nice work there. did you ever use it to automate node deployments?
02:24 < mscdex> _numbers: i'm kinda doing that now actually. i wrote a little script today that makes connections to multiple servers in parallel and does an exec() on each
02:25 < mscdex> used it to install node 0.8.16 on about 22 machines :-)
02:25 < _numbers> mscdex: thats what i plan to do. node-connect does that part already
02:25 < _numbers> mscdex : it would be nice if we had a pure-js opscode chef alternative too
02:26 < _numbers> the problem with chef and capistrano is the rails dependency. its such a pita to install ruby as part of the provisioning process
02:26 < mscdex> eh i don't use capistrano/chef/whatever
02:26 < _numbers> node executes fast and compiles fast with minimal dependencies, so a pure-js automated deploy and server provisioning script would be impressive i think
02:27 < mscdex> _numbers: here's the script FWIW: https://gist.github.com/4279365
02:28 < mscdex> it isn't anything too fancy
02:28 < mscdex> at least yet ;-)
02:28 < _numbers> not bad
02:29 < _numbers> well devops automation is totally the future and someones got to represent for node
02:31 < _numbers> http://news.ycombinator.com/item?id=3090800
02:32 < mscdex> i've always gone DIY with ssh and git
02:33 < mscdex> for deployment
02:33 < _numbers> the biggest difference between that and chef is its ability to detect the state of the remote machine and sort of auto-heal any anomalies in the os package installations and configuration
02:34 < _numbers> technically you could achieve that DIY but the second major difference is the chef community maintains a large set of 'recipes' which 10-to-1 odds already do everything you'd be trying to write manually
02:35 < _numbers> other than that nothing really magical about chef. its slow and dependency heavy, hard to configure, etc.
02:35 < Net147> how would I do stream.pipe but specify how much data is piped (say to limit to 120 MB)?
02:36 < trankil> .pause() when you reach your size
02:37 < trankil> This is a valid answer.
02:37 < Net147> trankil: thanks
02:40 < trankil> substack: Thanks for this https://github.com/substack/nodefest-2012
02:44 < samholmes> Instead off loading css files individually for each page, is there a better way?
02:44 < samholmes> Maybe a single css file loaded for every page?
02:46 < _numbers> samholmes: i compile to a single .css file that has whitespace + comments removed and is gzipped
02:46 < warz> is there a module that will colorize console.log output of objects?
02:46 < trankil> or maybe ONE PAGE ????
02:46 < _numbers> samholmes: i keep the css separate by using namespace-like classes on the body tag of every page
02:46 < samholmes> _numbers: Yes, but not every page gets the same stylesheet?
02:47 < _numbers> samholmes: then i use a good css transpiler like stylus so that its not a pita to use namespaces on every rule
02:47 < samholmes> _numbers: Oh I see. What's the syntax?
02:47 < _numbers> samholmes: http://learnboost.github.com/stylus/
02:48 < trankil> https
02:48 < samholmes> no, the namespace convention I mean
02:48 < _numbers> samholmes: my web apps are usually mvc so i use #{controller_name}_#{controller_action} typically
02:48 < _numbers> samholmes:  so like body.users_index
02:48 < warz> oh, util.inspect. nice.
02:49 < _numbers> samholmes: body.users.users_index
02:49 < trankil> warz, are you answering to your own question ?
02:49 < _numbers> sometimes i'll also add a class to distinguish between authenticated and anonymous user sessions, and another for admin back-end vs. front-end. these are probably better questions for #css
02:49 < trankil> thats faboulous.
02:49 < warz> yes
02:50 < warz> i do that
02:50 < warz> when its slow in here, i just liek to ask questions that i know i can answer
02:50 < warz> to make myself look like a nodejs guru
02:50 < _numbers> samholmes: but as trankil said, the future is Single Page Applications (SPA) where everything is aggregated and concatenated onto a single page
02:51 < samholmes> _numbers: using pushState?
02:51 < _numbers> i dont know what that is
02:51 < _numbers> well i guess i'll start on my node chef clone. hmm what to call it?
02:52 < _numbers> node-devops
02:52 < trankil> Its not that difficult to be a guru, warz
02:52 < trankil> just go to the #php chan.
02:53 < trankil> and tell them that the feature is MVC.
02:53 < james_> how
02:54 < trankil> waz: and that they can't use REST before 2018.
02:56 < trankil> _numbers: node-chef-clone.
03:01 < _numbers> mscdex: the other ssh node libs are just wrappers that use exec and the ssh binary; does yours work on windows? how complete is the c binding?
03:02 < mscdex> _numbers: ssh2 is pure js, it works everywhere node does
03:02 < mscdex> _numbers: i don't know about any c bindings
03:02 < _numbers> o rly hmm
03:03 < mscdex> initially the ssh2 module was a libssh2 binding, but yeah.... libssh2 has its issues
03:04 < _numbers> mscdex: you've actually implemented the ssh protocol in pure js using a socket? lol
03:04 < _numbers> thats hardcore
03:04 < mscdex> yep
03:04 < mscdex> :-)
03:05 < _numbers> can it do scp file xfer?
03:05 < mscdex> no scp support, but there is full sftp v3 support
03:05 < mscdex> with createReadStream and createWriteStream just like the node fs api
03:05 < _numbers> wow
03:05 < mscdex> pipe to your heart's content! ;-)
03:06 < _numbers> ok i am going to try to build on top of this
03:09 < cuttooth> short of the nodemanual/such guides, do you any of you guys have any particular recommendations for getting started with node?
03:11 < mscdex> cuttooth: besides the node api docs: http://nodebeginner.org/ http://nodetuts.com/ http://nodeguide.com/ http://howtonode.org/
03:11 < cuttooth> I'll check those out, thank you
03:20 < trankil> OH: "Neuvo Operations Define Excellence point javascript"
03:22 < trankil> OH: "Poor Hilarious People"
03:22 < sshaginyan> Hey guys quick question how would I change the value of a global variable within a function if I have the same variable in there.
03:23 < sshaginyan> so var x = 10; function( var x = 20; access to global variable)
03:23 < trankil> sshaginyan: DI
03:23 < sshaginyan> DL?
03:23 < sshaginyan> DI?
03:24 < trankil> function(dep) {...}
03:25 < mscdex> sshaginyan: you can't
03:27 < sshaginyan> Guys something like this http://pastie.org/private/p2qxnhock6mxvvuvu48cta
03:27 < sshaginyan> I need to change the global value abc to this.jkl
03:29 < mscdex> sshaginyan: that's not a global and you can't change it once you declare another variable with the same name like that
03:29 < sshaginyan> mscdex: What about using an anonymous function 
03:29 < mscdex> what about it?
03:30 < trankil> php guy
03:30 < sshaginyan> mscdex: So there is no way of doing that?
03:30 < mscdex> sshaginyan: no
03:31 < mscdex> sshaginyan: once the previous variable is shadowed, you cannot get at the top 'abc' variable
03:32 < mscdex> within that function scope you declared the similarly named variable
03:36 < sshaginyan> mscdex: I don't think I'm asking the question correctly. I basically want this code to print 42 and then 20
03:37 < mscdex> sshaginyan: well, you don't have x defined anywhere and line 7 is missing the left operand
03:40 < sshaginyan> sorry x is abc I was talking to another guy and he said you can assign something to this.jkl
03:45 < ruff> http://www.youtube.com/watch?v=hNz1CgVa46E
03:59 -!- mode/#Node.js [+o Nexxy] by ChanServ
04:38 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
04:47 < yarco> how to write hubot without coffeescript?
04:47 < yarco>  http://net.tutsplus.com/tutorials/javascript-ajax/writing-hubot-plugins-with-coffeescript/
04:47 < gkatsev> get a JS->CS compiler?
04:48 < yarco> ok...
05:06 < jden> guys: an important new module: powerlevel
05:08 < AAA_awright> Now in semver 9001
05:08 < cjheath> Anyone interested in HTML templating should look at https://github.com/cjheath/semper
05:08 < cjheath> Apologies for the lack of a Readme, but it's only 180 LOC
05:09 < jden> cjheath that's a pretty hefty module
05:10 < zomg> Wow, more of these template engines that just make my eyes hurt from all the crazy characters in there
05:10 < zomg> =)
05:10 < cjheath> 1375 bytes,, compressed
05:10 < cjheath> Jade is a lot less magic than HAML
05:10 < cjheath> and you don't need to use most of the crazy stuff
05:10 < zomg> Right now what I'm doing is using a static site generator that simply takes a html template and stuffs some markdown into it based on a few strategically placed placeholders
05:11 < zomg> (Hakyll)
05:11 < zomg> Obviously not a solution to the same problem as a template engine, but it's sort of on the other end of the spectrum of complexity =)
05:11 < cjheath> Well this is likely to get embedded inside a version of Mercury to produce WYSIWYG Template editor rendering live data
05:14 < mclenithan> how do I find how many times a word is used in a string?
05:14 < cjheath> split(/patterm/).length?
05:15 < ako> indexOf also has an optional start parameter
05:16 < cjheath> yes, but youd need to iterate then
05:16 < ako> yes
05:16 < mclenithan> stringy = "pat pat bob pat"   stringy.indexOf("pat").length?
05:16 < ako> no :>
05:16 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
05:17 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
05:17 < mclenithan> stringy.split("pat").length?
05:18 < cjheath> beware of word boundaries though
05:19 < cjheath> "pat patch foo bar"
05:19 < cjheath> (use \b)
05:29 < dominictarr> cjheath, you should add a README
05:29 < dominictarr> you only need a one line description and a short example
05:29 < cjheath> yes, thanks, I know :)
05:29 < cjheath> It has an example
05:29 < cjheath> and a driver
05:29 < cjheath> but it needs a readme
05:30 < cjheath> Probably fork https://github.com/naltatis/jade-syntax-docs and hack at will
05:30 < cjheath> that works nicely
05:30 < dominictarr> a readme is more compatible with the work flow of people who have to evaluate countless modules daily
05:30 < cjheath> with content-editable in-browser re-rendering
05:32 < dominictarr> cjheath, you should also add a package.json & publish to npm if you are gonna announce it on #node.js
05:33 < cjheath> I don't really know npm at all - fork and do package.json for me?
05:33 < cjheath> I tried to imitate Jade's but got lost
05:33 < dominictarr> okay, just this once
05:34 < cjheath> :)
05:34 < cjheath> I want to make it work seamlessly browser-side, so please don't break that (not sure it wrks yet, but don't make it worse :P)
05:37 < dominictarr> cjheath, check this out: ci.testling.com
05:37 < dominictarr> browser ci service
05:37 < cjheath> Yours?
05:38 < cjheath> There's only about 12 hours of work in semper so far… It lacks "maturity"
05:38 < cjheath> What do you think of the data drill-down concept?
05:38 < mclenithan> stringy.split("pat").length -1    yay! easiest thing is the most frustrating
05:38 < cjheath> :)
05:38 < dominictarr> no, it's substack's
05:38 < cjheath> ok
05:39 < dominictarr> I've moved on from the testing project I was doing last year
05:39 < cjheath> Does pNPM require all the exports claptrap or can I just export a Semper object?
05:40 < dominictarr> claptrap
05:40 < dominictarr> there is a way to do it that that it detects and work with either
05:40 < dominictarr> https://github.com/umdjs/umd/blob/master/commonjsStrict.js
05:41 < cjheath> thx
05:44 < Trindaz> afternoon all
05:45 < Trindaz> a question or two for anyone with experience with Express
05:45 < Trindaz> is this the place?
05:45 < jcrew> good as any
05:48 < Trindaz> thanks jcrew - i'm new to express, working on a project created by an ex-employee. I've managed to publish the webapp, mostly working etc, but part of it uses ember and mixins, but some of the urls that the mixins rely on are 404'ing, which is why I assume it's an Express problem.
05:48 < Trindaz> specifically this line: this.set('collectionName', 'billing/scenarios'); is telling ember to look to json formatted data at a url that 404s
05:48 < Trindaz> but all the other urls in the app work fine
05:48 < styol> zomg: I've been digging on mustache actually.. pretty simple stuff
05:53 < sayd> what better tap or mocha? or are they compatible
06:00 < styol> sayd: I'm not familiar with TAP particularly, but I've found mocha with chai to be pretty tasty. Mocha has a TAP reporter / consumer -- "The TAP reporter emits lines for a Test-Anything-Protocol consumer." whatever that means http://visionmedia.github.com/mocha/ search the page for "tap"
06:02 < sayd> thanks styol 
06:02 < sayd> styol: im hoping to report on tests with a jenkins tap plugin, i know it meshes well with yslow and tap
06:03 < styol> I actually just started using the tap reporter today for some web output hackery because it was the easiest to colorize, but otherwise don't know much about it
06:03 < sayd> but maybe travis is a better solution
06:03 < sayd> although im not familiar with running it 
06:04 < styol> haven't heard of travis which means 0
06:04 < styol> are you looking to do performance tests kind of stuff with a unit test framework or why the yslow? 
06:05 < sayd> styol: just got the idea of test reporting with tap through a webperf meetup about yslow
06:05 < styol> ah gotcha, interesante
06:05 < _numbers> check it out, i got cakefile+gaze replacing node-dev +gruntfile with greater effect and less code: http://goo.gl/jvGnW
06:08 < sayd> i want to build some js intented for the browser, but i like the mocha/node immediacy
06:10 < sayd> does gyp do something like that?
06:16 < cjheath> dominictarr: Thanks! Could of new boogs to iron out before publishing further :)
06:16 < cjheath> *couple
06:17 <@konobi> the jenkin plugin works fine
06:18 < dominictarr> cjheath, hey also, if you are gonna do in browser editing you should check out https://github.com/dominictarr/r-edit
06:18 < dominictarr> gives you collaborative real time editing
06:18 < cjheath> cool thanks
06:19 < dominictarr> night all!
06:19 <@konobi> sayd: there's also smolder
06:25 < sayd> looks cool konobi 
06:37 < substack> sayd: if you're building a thing for browsers and like TAP output and tests you might like http://ci.testling.com/
06:38 < substack> just output tap in your tests and you get a badge for the test status in all the browsers!
06:39  * Nexxy mindblown
06:40 < ljharb> substack: if i use nodeunit, how might i integrate with testling?
06:42 < substack> ljharb: get nodeunit to output TAP in browsers with console.log()
06:42 < substack> otherwise you can use something like http://github.com/substack/tape
06:51 < sayd> substack: nice. testling is the one i've been trying to remember about. this is good
06:52 < chovy> my app broke when i upgraded mongoose to 3.5
06:52 < ljharb> substack: can i manually run tests on a repo, just to see if i'm doing it right?
06:52 < chovy> it just hangs now
06:53 < timeturner> what's the best way to use lucene with node?
06:53 < substack> ljharb: not yet but you can just look at what your tests console.log() for output
06:53 < ljharb> ok
06:53 < timeturner> there don't seem to be any up to date lucene bindings for node...
07:05 < _numbers> what is TAP output useful for?
07:35 < _numbers> anyone know how to include partials within coffeecup templates?
08:34 < fruitFly> in time is node going to replace php for even basic website deployments?
08:36 < Doikor> why would it? and why do you have to use php for basic website deployments?
08:37 < fruitFly> I've just heard it's the future of the web and server side scripting for webservers
08:38 < fruitFly> I mean will node replace php for wordpress like deployments with like sqy filezilla etc.
08:38 < fruitFly> sql*
08:39 < Doikor> well thats what a lot of node guys might be saying. but then again some people have been moving to scala or go etc.
08:39 < Doikor> the more choices the better anyway. Creates competetion between the products and speeds up the development
08:40 < fruitFly> loli started learning go for scala but am interested in node because it's all js
08:40 < fruitFly> and has a much lower curver than go and scala right, and lower than haskell and a haskell framework right?
08:41 < fruitFly> lower learning curve*
08:42 < Doikor> you might say that if you dont already know functional programming (most dont)
08:43 < Doikor> but yeah use whatever tool suits you.
08:43 < Doikor> but having javascript on the server side too gives the nice benefit of only having to bother to learn one language for both the client and server.
08:44 < fruitFly> but isn't learning the web framework for the language also have a fairly high learning curve in and of itself? what about using underscore with javascript and node... sounds fun and agile
08:46 < Doikor> dont really think learning something like expressjs is any harder then learning play! if you already know both languages.
08:47 < timeturner> best way to learn javascript is by copying existing code and looking up stuff you don't know on google or mdn
08:48 < timeturner> best way to learn any language really
08:48 < Doikor> i still think having some proper course or book is more efficient. ofcourse after going trough that material you should read some code and do some actualy coding
08:50 < timeturner> I read Crockford's book initially...
08:50 < Doikor> ofcourse if all you are doing is learning some new programming language that doesnt really bring anything new except a new syntax learning it just by reading code isnt going to be hard
08:51 < Doikor> but if you are doind something like moving from c/c++ (imperative) to haskell (functional) you arent going to learn haskell just by reading some code
08:51 < Doikor> you are really going to need someone to explain how and why you do stuff differently
08:54 < timeturner> join ##javascript while you're learning
08:55 < timeturner> most of the time there are people willing to offer help
09:44 < deoxxa> Nexxy: i'm listening to a song called "nexx" and i thought you should know
09:49 < SomeoneWeird> mat3 dnt u st4rT de0xA
09:54 < adrianlang1> )
10:20 <@Nexxy> deoxxa, thank you :)
10:53 < MI6> joyent/libuv: Ben Noordhuis master * a3b57dd : test, bench: remove unused includes (+2 more commits) - http://git.io/B29TWA
11:02 < MI6> joyent/libuv: Andrew Shaffer master * f5a2304 : sunos: properly disarm PORT_LOADED fsevent watcher  Fixes a segmentation  - http://git.io/IxwuHw
11:10 < MI6> joyent/libuv: Ben Noordhuis master * c6c5b7a : Merge branch 'v0.8' - http://git.io/jfQoXQ
11:10 < MI6> joyent/libuv: Andrew Shaffer v0.8 * 4997738 : sunos: properly disarm PORT_LOADED fsevent watcher  Fixes a segmentation  - http://git.io/DC48rg
11:16 < MI6> joyent/libuv: bnoordhuis created tag node-v0.8.12 - http://git.io/78vb4g
11:16 < MI6> joyent/libuv: bnoordhuis created tag node-v0.8.15 - http://git.io/CBwu5A
11:16 < MI6> joyent/libuv: bnoordhuis created tag node-v0.9.3 - http://git.io/FSlrQw
11:26 < zot> sanity check — children forked via spawn() don't automagically receive signals sent to their parents, right?  (especially when the parent has a working signal handler installed…)
11:28 < zot> whoah.  it really looks like this is the case.  have i forgotten unix-y signal rules that badly, or is this sth node specific?
11:38 < zot> not too lively here today, eh? :)
11:42 < deoxxa> zot: lies and slander
11:42 < deoxxa> zot: i think a lot of people are travelling around at the moment, visiting family and such
11:42 < deoxxa> (suckers)
12:04 < zot> heh.  i fly out next tuesday.  /nick sucker_2
12:05 < zot> deoxxa: so, i have a signal handler catching SIGINT, and doing nothing.  but my child process receives *something* at the same time, and dies.  in this case it's not a serious problem, but i wanted to understand what's what.
12:20 < luisgigi> Ciao
12:20 < luisgigi> !list
13:18 < ghilly> to update a package i published, do i just run npm publish again?
13:36 < tuhoojabotti> yes I think
13:53 < PaulTMan> hello everyone
13:53 < oskude> hi, im stuck on how to parse a gzipped text file. found examples on how to send to http response and sax, e.g. fs.createReadStream(file).pipe(zlib.createGunzip()).pipe(sax); but i'm not sure how i implement my own parser. any pointers?
13:56 < PaulTMan> could someone please bring me up to speed on common deployment setups.  Specifically I'm working if in production node.js servers are used exclusively or if the better pattern is to run them in tandem with apache / nginx
13:57 < PaulTMan> *wondering
13:57 < jvanveen> hey
13:57 < PaulTMan> hello @jvanveen
13:57 < jvanveen> whats the common way to get the function's name from within the function? i tried arguments.callee.name, but that doesnt return the actual name
13:58 < jvanveen> hi PaulTMan
13:59 < PaulTMan> @jvanveen, can't think of a way to get function name off the top of my head
14:00 < j105rob> just installed node on the beaglebone and when doing npm node returns an error /usr/bin/env: nodejs: No such file or directory..... ideas?
14:01 < oskude> j105rob: its called just "node"?
14:01 < SomeoneWeird> j105rob, try 'node'?
14:01 < j105rob> ok... missed a comma
14:01 < j105rob> just installed node on the beaglebone and when doing npm, node returns an error /usr/bin/env: nodejs: No such file or directory..... ideas?
14:01 < SomeoneWeird> ah
14:01 < SomeoneWeird> weird
14:02 < oskude> jvanveen: hmm, arguments.callee.name works for me
14:02 < jvanveen> PaulTMan: i want to use an object as a key/value storage, but the object should also have some lookup functions. seems like moving the functions to prototype excludes them from Object.keys. guess that fixes it :)
14:02 < SomeoneWeird> sudo ln -s /usr/bin/node /usr/bin/nodejs
14:02 < jvanveen> oskude: returns an empty string for me
14:02 < oskude> jvanveen: post a gist
14:02 < SomeoneWeird> >> function a() { console.log(arguments.callee.name) }; a();
14:02 < purr> SomeoneWeird: undefined; Console: 'a'
14:02 < SomeoneWeird> works
14:02 < jvanveen> oskude: http://paste.kde.org/625244/
14:03 < j105rob> SomeoneWeird: thx... works... must be something funky with the bone's package repo
14:03 < oskude> jvanveen: i see no callee there
14:03 < jvanveen> not sure if this is the best way to handle pooling, but i cant think of a better way
14:03 < jvanveen> ah
14:03 < jvanveen> sorry. removed that already
14:03 < SomeoneWeird> j105rob, :)
14:03 < jvanveen> ill try a jsfiddle
14:04 < j105rob> damn embedded linux
14:04 < oskude> jvanveen: and my head is spinning with all "this" and "that" ;P
14:05 < jvanveen> http://jsfiddle.net/JAH4J/
14:06 < oskude> heh, im stupid, i just needed toString for my problem :)
14:06 < PaulTMan> is the most common production setup to use node.js with nginx?  
14:06 < jvanveen> oskude: sorry, im still a noob. Still figuring out about how to keep a reference to a closure properly 
14:07 < j105rob> PaulTMan: what are you planning on using nginx for? proxy?
14:07 < oskude> jvanveen: im a noob too, so dunno why this "new" doesnt give you any output
14:07 < oskude> hmm, without new neither
14:08 < PaulTMan> j105rob: I assume to use nginx for almost everything and only node.js for ajax web api handling...
14:08 < j105rob> yeah, so proxy... I love nginx
14:09 < jvanveen> oskude: dunno, maybe that callee.name thing is deprecated
14:09 < j105rob> just upstream the requests specific to node requests and be done :)
14:09 < PaulTMan>  gotcha, I assume that would be much more performant then node.js just serving everything
14:09 < j105rob> right
14:09 < oskude> j105rob: function SessionHolder () works
14:09 < PaulTMan> gotcha, thanks for the confirmation :)
14:10 < j105rob> np
14:10 < j105rob> oskude: huh?
14:10 < oskude> j105rob: if you change SessionHolder = function SessionHolder() to function SessionHolder ()
14:11 < j105rob> oskude: I think you might be answering a question I have not asked :)
14:13 < jvanveen> oskude: indeed, weird
14:13 < oskude> jvanveen: j105rob: heh, my lazy completion on "j" failed. sorry about that :)
14:13 < j105rob> :)
14:15 < jvanveen> i dont know why assigning a function to a variable changes callee.name
14:16 < jvanveen> of the function
14:25 < oskude> jvanveen: looks like you could do SessionHolder = function SessionHolder ()
14:27 < jvanveen> oskude: thinks works, http://jsfiddle.net/JAH4J/1/
14:27 < jvanveen> the var part fixes it
14:33 < rideh> proper way to node json back into an object?
14:35 < stuartmcfarlane> any tips on closing mongoose connection in tearDown?
14:36 < oskude> rideh: var obj = JSON.parse(thejsonstring)?
14:38 < stuartmcfarlane> I call mongoose.connection.close(); but the following setup says "Error: Trying to open unclosed connection."
14:40 < Wes-> how does socket.end() write data to the socket?  Does it blindly write() and then do a shutdown(fd, SHUT_WR)?   Or does it wait for the "drain" even before the shutdown()?   The docs are not really clear on whether there is a guarantee that the data will be transmitted before the socket is half-closed.
14:50 < bright_day> is there any way of reading pdf files and transforming them to .txt  in node.js
14:51 < SomeoneWeird> f
14:55 < SomeoneWeird> bright_day, https://npmjs.org/browse/keyword/pdf
14:56 < SomeoneWeird> maybe https://npmjs.org/package/pdf2json
14:56 < stuartmcfarlane> nvm
15:01 < Chilley> is this the right channel to ask about json, specifically about about using jackson library in java to handle json requests from the 8Tracks api
15:02 < bright_day> SomeoneWeird thanks
15:03 < SomeoneWeird> Chilley, java or js?
15:04 < Chilley> it's a java library but my questions would be more about the json format and generally using web APIs
15:04 < SomeoneWeird> then no
15:04 < Chilley> there is no #json channel
15:04 < Chilley> is this something for #xml
15:04 < SomeoneWeird> maybe try in the java channel, but I suppose you could ask here
15:09 < Chilley> how do i get an invite to the #java channel
15:10 < SomeoneWeird> try ##java
15:29 < chrismatheson> just dropping in for some help with streams (hopefully)
15:29 < chrismatheson> why cant i seem to stream a file into a request ?
15:29 < chrismatheson> var stream = fs.createReadStream('tests/d1.mp3');       stream.resume();       stream.pipe(process.stdout);
15:29 < chrismatheson> * replace stdout with req
15:30 < chrismatheson> i think im missing something fundamental here so any help / readin pointer would be welcome 
15:31 < SomeoneWeird> https://github.com/substack/stream-handbook
15:31 < SomeoneWeird> might help
15:31 < chrismatheson> oh brill thanks :)
15:32 < Wes-> Using EventEmitters like this:      socket.addListener("drain", socket.close);      safe?     Or should I be creating a temporary function to insure that the 'this' is 'socket' when the close method is invoked?    (I guess I'm confused about how 'this' works in Node EventEmitters -- I know it would not work with browser events!)
15:32 < Wes-> s/^U/Is u/
15:32 < SomeoneWeird> socket.on("drain", function() { socket.close(); });
15:33 < rideh> how would I only interate over the properties with the numbers?  the count could change.
15:33 < rideh> http://dpaste.com/845915/
15:33 < Wes-> SomeoneWeird: So you're thinking the same thing as me w.r.t. 'this' then -- thanks
15:34 < soahccc> Hello everyone. I didn't do anything with node so far but I would like to start with it because I saw an awesome library for it. The only question that I have: Is node "dependencyless" at the end? Some kind of compilation, etc.
15:34 < SomeoneWeird> you don't compile it
15:35 < soahccc> Because I'm talking about shelljs which is pretty useless for me if it isn't compilable
15:35 < SomeoneWeird> why?
15:35 < codyaray1> Most of the time, you have a node_modules folder in the app directory which contains all your dependencies… like vendor cache in ruby or virtual env in python. Or are you asking if you can create a single executable package?
15:36 < SomeoneWeird> the later
15:36 < Wes-> soahccc: premature optimization is the root of all evil
15:36 < soahccc> I only want to write a bash script because I don't want a dependency (otherwise I would stick with my best known language ruby) so I searched for transcompilers and found shelljs as reference but I seems to be just a simple DSL
15:36 < SomeoneWeird> ya, you need node installed
15:37 < SomeoneWeird> (you can't compile it)
15:37 < soahccc> Hmmm damnit :) I just don't get this stupid bash syntax so I thought I can cheat a bit ;)
15:37 < SomeoneWeird> yeah
15:37 < SomeoneWeird> :p
15:37 < Wes-> soahccc: if you want to be a pedant, you need bash installed to run bash scripts, and bash is very common but not ubiquitous
15:38 < SomeoneWeird> true
15:39 < soahccc> Wes-: Well I assume that as we only use Debian and Ubuntu... If there is no bash I might also want to depend on energy supply? :)
15:39 < SomeoneWeird> lmao
15:42 < Wes-> soahccc: Debian has announced that future releases may not ship with bash by default, using dash instead
15:43 < Wes-> soahccc: so at the very least, make sure you use #! /bin/bash    instead of #! /bin/sh
15:43 < Wes-> soahccc: http://wiki.debian.org/DashAsBinSh
15:45 < Wes-> soahccc: when I write shell scripts, unless it is completely unavoidable, I still with POSIX as then it will run pretty much anywhere -- mac, bsd, solaris, dash, bash
15:48 < astropirate> Hello friends
15:48 < astropirate> Does anyone still offer free node hosting?
15:49 < soahccc> Wes-: Well I'm a shell scripting noob but I assume I only would need sh itself. I just want to do some chained stuff with some "yes/no" questions... Some setup scripts basically. They should be in one file though.
15:49 < RLa> astropirate, appfog i think has free account
15:49 < astropirate> RLa, thank you
15:49 < RLa> node 0.6 tho last time i checked
15:49 < RLa> but they promised 0.8 soon when i asked in twitter
15:50 < astropirate> Unlimited apps within 2GB RAM
15:50 < astropirate> WOW
15:50 < astropirate> thats better than a lot of VPSs
15:50 < astropirate> how is this free?
15:50 < RLa> they do not host themself, just offer covenience layer over ec2, rackspace and others
15:51 < RLa> i think because they buy cloud in bulk from those
15:51 < astropirate> I see
15:51 < gildean> RLa: i think they have node 0.8.1, they just don't say it anywhere
15:51 < gildean> or at least nodester runs 0.8.1, and i think it's the same platform
15:51 < astropirate> OHH
15:51 < astropirate> i completely frogot about AWS free teer 
15:52 < astropirate> silly me
15:52 < gildean> idk if nodester still gives out accounts, prolly not
15:52 < astropirate> RLa, do you know if i can install my own software on appfog?
15:52 < astropirate> I need nginx for my application
15:53 < RLa> didn't appfog acquire nodester some months ago?
15:53 < RLa> astropirate, no idea
15:53 < RLa> i just run a plain express-based app there
15:54 < astropirate> ohh ok. Thanks a lot!
15:55 < Josh> Is RLa somehow related with Ryah?
15:56 < gildean> RLa: yep, that's why i said that nodester no longer probably gives out accounts, but appfog should run on the same platform and thus support node 0.8.1
15:56 < astropirate> wow free hosting.. "What a countrry!"
15:56 < RLa> Josh, it's not :)
15:56 < Josh> :P
15:57 < SomeoneWeird> wow appfrog is crazy
15:58 < astropirate> SomeoneWeird, I know right!
16:12 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:25 < ghilly> Hello.  To update a package i published, do i just run npm publish again?
16:35 < mscdex> ghilly: yep
16:38 < ghilly> ok thanks
16:53 < spcshpopr8r> good morning #node.js
16:54 < spcshpopr8r> I've a dillema...very quickly and easily got ethercalc running on a (gentoo) box under my desk, showed it to a few co-workers, decided to prop it up on a (vmware gentoo) server, when I start ethercalc up and visit the home page, click "create sheet" it dies immediately with this: http://pastie.org/5530456
16:54 < spcshpopr8r> s/dillema/dilemma
16:55 < qubit[01]> this -> http://panyasan.wordpress.com/2012/12/10/why-we-need-a-nodejs-application-server-or-writing-boilerplate-considered-harmful/?utm_source=javascriptweekly&utm_medium=email
16:55 < qubit[01]> hey wait thats something I could write
16:55 < qubit[01]> Ill do it!
16:57 < spcshpopr8r> redis module throwing "RangeError: Maximum call stack size exceeded"
16:58 < spcshpopr8r> but why on one machine and not another....machines are pretty much identical
17:13 < ralphholzmann> when spawning a child process, how can I get it to read the parent process's stdin as its own?
17:41 < mscdex> ralphholzmann: set the `stdio` property in the spawn options
17:42 < mscdex> ralphholzmann: i think for `stdio` to share stdin with the child, you can set it to `0` or `process.stdin`.
17:47 < qubit[01]> anyone ?  application server node ?
18:00 < pinja> meteor comes to mind qubit
18:11 < sayd> so im still seeing this issue where i npm install sinon-chai, and i don't get devDependencies pulled in. i try with --dev, but it crashes out with too many open files and takes foreverr
18:14 < sayd> my ulimit is unlimited, so rumps suggestion of increasing that doesnt seem to apply
18:17 < sayd> ls
18:19 < spcshpopr8r> please help debug/fix this: http://pastie.org/5530456#17,19
18:19 < spcshpopr8r> any pointers appreciated, it's driving me nuts
18:19 < Swadq> Looks like you have too mny nested callbacks spcshpopr8r 
18:20 < spcshpopr8r> ethercalc works like a charm on one machine...not on another
18:21 < spcshpopr8r> can't figure out what's different
18:21 < spcshpopr8r> I have a slightly higher version of v8 on the non-working box
18:22 < spcshpopr8r> otherwise, same version of node (0.8.15) and everything else
18:22 < spcshpopr8r> both boxes gentoo
18:23 < spcshpopr8r> the one that is working (A) is a physical machine, the one not working (B) is a vmware guest
18:24 < Swadq> spcshpopr8r: how much RAM does each machine have?
18:25 < spcshpopr8r> (A) has 3GB w/ 4GB swap, (B) has 2GB w/ 2GB swap
18:30 < rjrodger> spcshpopr8r: you could try using process.nextTick for the relevant function calls, e.g. function a() { a() } will die, function a() { process.nextTick(a) } will go on forever
18:33 < spcshpopr8r> rjrodger: any idea why it would be okay on one box but not the other...also, it looks like a problem in the node-redis module, no?
18:34 < rjrodger> one of the boxes can handle a deeper call stack - has more memory I guess
18:35 < spcshpopr8r> wouldn't you expect it to eventually croak on the box with more memory/
18:35 < spcshpopr8r> ?
18:36 < rjrodger> depends on what the call stack looks like - it may not be getting bigger and bigger, just reaching a given depth and backing off again
18:37 < spcshpopr8r> also, regarding the memory ish...the working box is a physical machine, not working on vm...relevant?
18:37 < rjrodger> yes relevant, but not sure in what way - it must be affecting the call stack somehow
18:38 < rjrodger> try removing redis from the equation and using file storage
18:38 < rjrodger> i think you're in for a process of elimination debug session :)
18:38 < spcshpopr8r> <<sigh>> I've been at this for a few hours today...and last night before I gave up
18:39 < rjrodger> man i hate that sort of crap - did you reach out to audreyt?
18:40 < rjrodger> i'd subit a github issue at least
18:41 < spcshpopr8r> I've not yet reached out to audreyt...getting close, I think submitting an issue is a good idea
18:42 < spcshpopr8r> ...hate this kind of crap too; appreciate the sympathy really, you know how there's always one more thing to try and you just can't let the damn thing go
18:43 < spcshpopr8r> I think ethercalc is worth it though...still a bit rough around the edges, but a very compelling project
18:43 < rjrodger> yeah it looks cool!
18:45 < ljharb> isaacs: on npmjs.org, on the profile pages, can you include a total count of modules?
18:46 <@isaacs> ljharb: a total count of modules that user maintains, you mean?
18:46 < ljharb> yep
18:46 < ljharb> i manually counted substacks :-(
18:46 <@isaacs> ljharb: it'd be pretty easy, the data's there already.  wanna send a patch?
18:46 < ljharb> sure! didn't realize the site repo was public
18:46 < ljharb> ima send all sorts of patches now
18:46 <@isaacs> ljharb: :D
18:47 <@isaacs> ljharb: click the big logo at the top, then click "Patches welcome!"
18:47 < ljharb> on it, thanks!
18:47 <@isaacs> ljharb: hack away at views/profile.ejs or something
18:47 <@isaacs> ljharb: note that it says "and 183 more" at the end of the list on th eprofile page.
18:47 <@isaacs> ljharb: if you add 20 to that, you get the total, i think
18:48 <@isaacs> ljharb: to run locally, you need to have couchdb and redis installed, and then do `npm run dev`
18:48 < ljharb> lol yeah i initially was on the "by author" page so i counted how many were on one page, and then counted his last page.
18:48 < ljharb> hm, ok
18:48 < ljharb> thanks
18:49 <@isaacs> ljharb: it'll download 1/256th of the packages in the registry, and all the public user docs, and create an admin user with the username "admin" and the password "admin"
18:49 <@isaacs> ljharb: that's just so that you can get into couchdb to manually unfuck stuff sometimes
18:50 < ljharb> sounds straightforward enough
18:55 < MI6> joyent/node: isaacs streams2 * 6285056 : test: Update simple/test-fs-{write,read}-stream-err for streams2  Streams (+70 more commits) - http://git.io/h_X0Zw
19:00 < sayd> isaacs: does npm install foo pull in foo's devDependencies? i am not seeing that happen
19:00 <@isaacs> sayd: no, it does not
19:00 <@isaacs> sayd: it only pulls in devDeps by default for one level when you do `npm install` with no args
19:02 < astropirate> gggaahhh
19:02 < astropirate> this jerk has my package naem on npm!!
19:02 < astropirate> and its an empty project with no updates >1year
19:02 < dominictarr> fuck that guy!
19:02 < sayd> isaacs: ah
19:03 < astropirate> dominictarr, lets go get him
19:03 < drudge> astropirate: just add thebest-[pkgname]
19:03 < dominictarr> astropirate, there is a protocol for that
19:03 < astropirate> dominictarr, the baseball bat protocol?
19:03 < astropirate> drudge, or  package-actual :)
19:03 < astropirate> package-thisIsTheGoodStuff
19:04 < dominictarr> you write an email to him and you cc isaacs, and then you print out the email, wrap it around a brick, and throw it through his window
19:04 < astropirate> lol
19:04 < astropirate> i emailed him
19:04 < astropirate> a month ago
19:04 < astropirate> he said he was going to start on the project soon
19:04 < astropirate> the ass hasn't touched it yet
19:04 < dominictarr> what is the name?
19:04 < astropirate> ohh i dont want to name names
19:05 < dominictarr> the module name
19:05 < astropirate> that would be the same :)
19:05 < dominictarr> yeah, but I don't care who it is.
19:05 <@isaacs> The rule is that sitting on package names is not allowed.
19:05 < dominictarr> I just want to know if you have picked a good name for what it is
19:06 -!- isaacs changed the topic of #Node.js to: Node.js - http://logs.nodejs.org/node.js/ - No package squatting allowed
19:06 < oskude> hmm, i wonder if node-tar can extract in memory, or if adm-zip can read tarballs
19:06 <@isaacs> astropirate: did you cc me on the email?
19:06 < astropirate> isaacs, I did not, no
19:08 < astropirate> isaacs, I can forward you the email?
19:10 <@isaacs> astropirate: sure, or just tell me the package name.
19:10 <@isaacs> squatting is not allowed.
19:10 < astropirate> isaacs, firefly
19:11 < drudge> sweet name
19:11 <@isaacs> AGPL.
19:11 < drudge> i want it!
19:11 <@isaacs> oh man
19:12 <@isaacs> astropirate: ok, yes, please forward me the email so that i can clarify the policy
19:16 < astropirate> isaacs, aye aye captain
19:17 < timeturner> does npm support github-style namespacing?
19:17 < oskude> hmm, is there a library to extract tarballs in memory? (like adm-zip seems to do)
19:17 < acidjazz> anyone konw of anything lighter or just a simpler alternative than mongoose?
19:17 <@isaacs> timeturner: no, but it supports github-style git urls :)
19:17 <@isaacs> timeturner: npm install isaacs/sax-js will pull it from github
19:17 < drudge> acidjazz: monk is pretty simple mongo :P
19:18 < timeturner> cool
19:18 <@isaacs> timeturner: you can namespace with - or _ or . or -X--X- if you like, though
19:18 <@isaacs> timeturner: like all namespaces, it's just a single level.
19:18 <@isaacs> timeturner: but unlike most namespaces, it's very flexible.
19:19 < drudge> isaacs: is there or are there plans to allow multiple registry searching, like i have a private registry with just my company's packages, and then if it 404s it would fallback to the official npm one?
19:19 < MI6> joyent/node: isaacs streams2 * 4791c32 : test: Update simple/test-fs-{write,read}-stream-err for streams2  Streams - http://git.io/SAgjKw
19:20 < acidjazz> drudge: i dont see how this is useful. anyothre?
19:20 < acidjazz> any others*? 
19:20 < drudge> isaacs:  not sure if it is already possible. I was hoping to not have an entire replica of the registry, just want to host our companies internal packages
19:21 <@isaacs> drudge: COMING SOON!
19:21 <@isaacs> drudge: email me
19:21 < drudge> isaacs: awesome
19:21 <@isaacs> drudge: (i'm not the one doing it)
19:22 < ricardo_dn> Speaking of which.... :D so I forked a module that's on npm (lingo) and did some small changes to it. I pointed my app's dependencies to my forked repo and for some reason it always tries to fetch the module from npm and not from the url I provided. Any ideas why?
19:23 <@isaacs> ricardo_dn: are you running `update` or `install`?
19:23 <@isaacs> ricardo_dn: upate is kind of stupid
19:23 <@isaacs> ricardo_dn: *update
19:23 <@isaacs> ricardo_dn: it assumes that stuff is name:version
19:23 < ricardo_dn> hmm
19:24 <@isaacs> ricardo_dn: what command are you running where it fetches from the registry?
19:24 < ricardo_dn> If I do an explicit install of the package it actually works
19:24 < ricardo_dn> npm update
19:24 < ricardo_dn> that's it
19:24 <@isaacs> ricardo_dn: k.  that's why
19:24 <@isaacs> patch welcome
19:25 < ricardo_dn> strangely, it seems that npm is reading my repo's package.json but downloading from npm instead
19:25 < ricardo_dn> or trying, because I changed the version of my forked module and npm is trying to download that version, which obviously doesn't exist on npm
19:26 < ricardo_dn> so it complaints Error: version not found: 0.0.6 : lingo/0.0.6
19:26 < ricardo_dn> 404 https://registry.npmjs.org/lingo/0.0.6
19:27 < ricardo_dn> I'm not a very good programmer but I'll take a look into it
19:28 < astropirate> WOW thanks thunderbird for deleting all of my emails
19:39 < ricardo_dn> ok, even stranger is that npm downloads and installs the package correctly to ~/.npm
19:39 < ricardo_dn> but the lock file relating to the github repo stays behind, probably because of the error
19:40 <@isaacs> ricardo_dn: that's fine.  those time out after 30s or so
19:40 <@isaacs> ricardo_dn: so if it lays around, it'll just get ignored the next time
19:41 <@isaacs> ricardo_dn: and they're 0b files
19:41 < ricardo_dn> so in theory the problem is when copying the package from ~/.npm to my app's node_modules right?
19:44 < dominictarr> drudge, I implemented a way to do that with proxies
19:44 <@isaacs> ricardo_dn: dunno
19:44  * isaacs away
19:44 < drudge> i bet you did dominictarr
19:44 < dominictarr> https://github.com/dominictarr/shadow-npm
19:45 < dominictarr> but putting a PR into npm would be a way better approach
19:45 < dominictarr> I should have done that... but I thought the proxy way would be easy
19:54 < ben_alman> is there a sane way to test that a filepath is absolute cross-os?
19:57 < drudge> dominictarr: yeah i thought about proxies but just seems like something a lot of people would need in the enterprise/workplace
19:57 < othiym23> ben_alman: path.resolve() on the path, and then see if it's the same as the path you started with ;)
19:57 < dominictarr> drudge, indeed. 
19:57 < ben_alman> yeah, stripping off trailing / or \
19:57 < ben_alman> that's what i've been doing
19:58 < ben_alman> thx
19:58 < dominictarr> also iriscouch run a service that just replicates the whole thing for you
19:58 < dominictarr> but really, if it's not actually a core trade secret, you should just open source it
19:59 < othiym23> dominictarr: good luck convincing the lawyers of that
20:00 < drudge> dominictarr: we open-source as much as we can, but a lot of it would be of no use to people because it is dependent on our internals
20:00 < zipp> whoa, silently kicked me out. bad irc client :(
20:00 < dominictarr> yeah, so you want a private registry
20:01 < zipp> hey #node.js, guess who's starting a startup and just launched their pre-launch site built in node? (hint: this guy)
20:02 < styol> Congratz zipp
20:03 < zipp> tyty :) http://www.healthfreakapp.com/ if you're interested :X Node / Sendgrid, with the API server I'm writing being Node, Mongo, MySQL, and Redis.
20:12 < _ior> i must be going crazy
20:12 < _ior> a query that works fine in postgresql command line client fails to insert using pg-node
20:12 < _ior> it doesn't error
20:13 < _ior> just doesn't insert :(
20:16 < CoverSlide> are you using brianc/pg ?
20:17 < pifantastic> I'm using aws-sdk and calling s3.client.getObject on a gripped file
20:17 < pifantastic> and the response is a string, type octet-stream
20:17 < pifantastic> and I want to gunzip it
20:17 < pifantastic> but I don't know how to convert it to a buffer
20:18 < pifantastic> I tried new Buffer(response, 'binary')
20:18 < _ior>  am using brianc/pg
20:18 < CoverSlide> hmm
20:18 < CoverSlide> file a bug maybe
20:18 < _ior> http://pastebin.com/7kmAmPfP
20:18 < pifantastic> but that does not seem to work, I get { [Error: incorrect header check] errno: -3, code: 'Z_DATA_ERROR' }
20:19 < CoverSlide> the response is a string?
20:19 < paul_> Hello, does anyone know if there's a way to specify a sub-module version to use in a package.json file or something?
20:19 < CoverSlide> odd
20:19 < _ior> sorry, that's just shorthand
20:20 < CoverSlide> returning a binary encoded string by default, very very bad
20:20 < _ior> it's the output from my favrious res.write() calls
20:20 < _ior> i should have been more clear in the paste
20:20 < _ior> it's actually going through .on('row') and on('end)
20:21 < pifantastic> CoverSlide: yeah, I'd expect a buffer :(
20:21 < CoverSlide> hmm I've had good experience with knox
20:21 < breck>   "dependencies": { "express": "3.0.0" }
20:21 < breck> paul_: something like 
20:21 < breck> that?
20:22 < pifantastic> CoverSlide: me too. I probably should have stuck with it :/
20:22 < paul_> breck: yes, but specifying the version of a dependency of express
20:23 < paul_> there's a dependency i'm using in a project that references a buggy version of one of its dependencies -- and i would like to try out a previous version of that dependency
20:23 < brianc> _ior: what's up?
20:24 < dreamdust> What's the best node.js client for webdriver/selenium 2?
20:24 < brianc> if you wanna talk node-postgres I'm available for the next 20 min
20:24 < breck> paul_: not sure. I had a similar issue and the workaround for me was to edit the buggy file in the node_modules folder.
20:24 < dreamdust> I found https://github.com/admc/wd but I was wondering if there was another project with more active development
20:25 < dreamdust> https://github.com/LearnBoost/soda is really nice but for selenium RC not webdriver.
20:26 < paul_> thanks breck
20:27 < othiym23> paul_: if you use npm shrinkwrap you can override the versions of deps used by deps
20:27 < othiym23> it's a little gross, but it works
20:28 < othiym23> so: first run npm shrinkwrap, second edit the shrinkwrapped json to change the versions, third nuke node_modules, fourth run npm install and it'll use the shrinkwrap manifest instead of package.json to spec deps
20:28 < _ior> oh brianc, great
20:28 < brianc> _ior: you having a problem?
20:29 < _ior> there's a pretty good chance i'm just being an idiot, what with being new to node and not having used postgres in a while
20:29 < _ior> but yes
20:29 < spcshpopr8r> hi again, this: http://pastie.org/5532393 seems to be preventing the npm install of webworker-threads, how to fix please?
20:29 < brianc> _ior: no worries - I won't think you're an idiot, I promise.
20:29 < paul_> my build script runs npm install and npm rebuild -- will that work with shrinkwrap?
20:29 < _ior> to summarize, a parametrized query that works fine when run commandline doesn't actually INSERT when run through node-pg
20:29 < brianc> that's not good
20:29 < brianc> can you gist?
20:30 < _ior> well, here's a quick summary of outputs, anyway: http://i.imgur.com/8v2vc.jpg
20:30 < _ior> can try to get a minimum functional example ...
20:30 < brianc> _ior: that just says "Huge Asshole" on it
20:31 < othiym23> paul_: it should, but I havenpt tested with npm rebuild to know for sure
20:31 < _ior> oh hahaha
20:31 < _ior> shit
20:31 < _ior> sorry
20:31 < othiym23> try it and report back!
20:31 < _ior> http://pastebin.com/7kmAmPfP
20:31 < _ior> that's what i meant :)
20:31 < othiym23> man, live subtweeting in the IRC channel
20:34 < brianc> _ior: a gist might be more helpful.  i don't see anything wrong in the example you provided.
20:35 < _ior> yeah, understood
20:35 < _ior> working on cut-n-pasting now
20:37 < ben_alman> is there an event handler i can register to receive 'test' when something does process.stdout.write('test') ?
20:37 < ben_alman> i'm trying to do process.stdout.on('data', fn); but am not seeing anything
20:38 < othiym23> ben_alman: stdout and stderr are writable streams, not readable streams
20:39 < ben_alman> i'm trying to assert that stuff is actually getting written to stdout
20:39 < mbalho> ben_alman: you can monkeypatch process.stdout.write
20:39 < ben_alman> this is using child_process.spawn's stdio 'inherit'
20:39 < ben_alman> does that use process.stdout.write?
20:39 < ben_alman> i was assuming there would be a much lower level connection
20:40 < ben_alman> i guess i can just assume that inherit will work and trust that it does
20:41 < ben_alman> yeah it's happening at a lower level
20:41 < ben_alman> hmmn.
20:41 < ben_alman> maybe i'll just make my own stream and test that
20:43 < CoverSlide> I like to make my own "log" stream
20:44 < CoverSlide> er function
20:44 < CoverSlide> and have it point to whatever stream I wish. i can attach it to a file stream or stdout
20:44 < CoverSlide> I also avoid console.log like the plague
20:44 < CoverSlide> unless I'm debugging
20:45 < spcshpopr8r> please help, `npm install webworker-threads` barfs: http://pastie.org/5532519 
20:45 < spcshpopr8r> not sure if its something on my end, can one of you please confirm
20:45 < spcshpopr8r> any ideas why "incorrect header check"?
20:46 < ben_alman> hmmn
20:47 < spcshpopr8r> \topic
20:47 < ben_alman> man how do i simulate stdio: 'inherit'
20:47 < ben_alman> it's awkward
20:47 < ben_alman> can i create a new ChildProcess instance?
20:47 < ashnur> yes it is.
20:48 < context> ben_alman: try it ?
20:48 < ben_alman> trying
20:48 < ben_alman> heh
20:48 < ben_alman> the docs say "don't use it directly"
20:48 < ben_alman> and don't explain how i would access it regardless
20:49 < ben_alman> so i'm assuming it could change in some weird way in the future
20:49 < CoverSlide> that kind of hackery is one of those "RTFS" type moments
20:49 < ben_alman> yeah
20:49 < ben_alman> i feel likei shouldn't be doing this though
20:49 < context> ben_alman: so dont use it directly. if you need a child process you spawn one
20:49 < ben_alman> i'm trying to test stdio: inherit
20:49 < ben_alman> which i can't do via process.stout since it's write-only
20:49 < ben_alman> heh
20:50 < context> i dont see inherit in the options
20:50 < context> err nm
20:50 < ben_alman> child_process
21:19 < baz> Hi there. I have a very deep question about libuv - does anyone have experience with it as it is used in NodeJS?
21:19 < baz> I really do not who other to ask - so guys, I am counting on you
21:21 < stagas> baz: there's #libuv
21:21 < astropirate> baz, tell us ethe question maybe someone will know
21:22 < othiym23> #libuv is pretty responsive, at least for another hour or two until piscisaureus and bnoordhuis go to sleep
21:22 < baz> okay, I am porting the scrypt key derivation library to node. In fact, its done. npm install scrypt will get it. Also, the github page explains a lit about it: https://github.com/barrysteyn/node-scrypt
21:23 < baz> The thing is, scrypt takes as input a time variables (it is a double, its unit is in seconds). Its security relies upon the fact that you have to take this amount of time to compute your answer.
21:24 < baz> When I put a lot of them up on the event queue (it is asynchronous), the functions always seem to be cut off and not allowed to finish. Which ruins the derivation function
21:24 < baz> I am not experienced enough with Node internals, so I don't really know how to proceed
22:12 < brad_> Hi everyone. I am new to Node.js and would like to install it on my new built Fedora machine, where should I start
22:12 < mbalho> brad_: git clone + make
22:12 < brad_> cool. Thank you
22:13 <@Nexxy> but don't forget to install your build tools
22:13 < brad_> which is gcc?
22:13 < brad_> I am new to Fedora too, btw. 
22:14 < Bilge> inb4 I'm new to programming
22:14 <@Nexxy> brad_, I think fedora uses yum for packages?
22:15 < misterhat> yeah it does
22:15 <@Nexxy> yum groupinstall "Development Tools"
22:15 <@Nexxy> or something
22:15 < jonathon> Hi room. I'm seeing some strange behavior with globalAgent used by the http lib. Each connection up to whatever maxSockets we set seems to be created and closed in a batch, as opposed to one by one. Anyone have experience with this?
22:17 < brad_> Nexxy, you are right. I have yum
22:19 < brad_> I will be back in a moment. Installing Development Tools requires system reboot.
22:21 < brad___> hi I am back
22:24 < sayd> isaacs: can i do something like install --save to store in devDependencies with npm?
22:24 < sayd> ah wait, i know this one
22:25 < brad___> I get this error while running make: "Node.js configure error: No acceptable C compiler found!" I am on Fedora.
22:25 < brad___> Any tips would be appreciated
22:26 < brad___> I think it complains that I have no GCC?
22:34 <@isaacs> sayd: npm install --save-dev
22:35 <@isaacs> sayd: or npm i -D
22:37 < pifantastic> brad___: yes
22:39 < brad___> Thank you pi fantastic
22:40 <@isaacs> been booting package name squatters a lot the last few days.
22:40 <@isaacs> that's so disappointing.
22:41 <@isaacs> we never used to have an explicit rule about this, for the same reason that there's no explicit rule about not throwing garbage on the floor
22:41 < stagas> isaacs: hope you're sending an email about it I think I have an empty package also in there :)
22:42 <@isaacs> stagas: yeah, i mean, it happens.
22:43 <@isaacs> stagas: but people get bent out of shape over it sometimes
22:43 <@isaacs> which is kind of weird to me
22:43 < stagas> isaacs: well yeah if you do oxfordDictionary.forEach(makeNpmPackage)
22:43 <@isaacs> haha
22:44 <@isaacs> there are SO MANY package names that you could use
22:49 < samholmes> Looks like my app is using crazy amounts of ram!
22:49 < samholmes> What can I do?
22:49 < stagas> isaacs: the user/repo recent thing does it work for deps as well?
22:50 < gildean> isaacs: imo the rule should be that you shouldn't publish a package unless it's actually working, at least partially
22:50 < cellvia> what are the main use cases for spawning a child process with node besides getting results of command line
22:50 < CoverSlide> cellvia: umm the same use case for spawning any process in an app
22:50 < CoverSlide> I spawn processes all the time from bash
22:51 < stagas> cellvia: cpu consuming tasks
22:51 < stagas> cellvia: blocking etc
22:51 < brad___> btw, if someone is new and would like a step-by-step guide to install node.js try this:  http://johnroach.info/2011/11/20/installing-node-js-0-6-2-on-fedora-16/
22:52 < CoverSlide> or they could download the binary
22:52 <@isaacs> gildean: the rule is "if i think it's garbage, i'm deleting it, and there's no seat saving, so hack or move out of the way"
22:52 < brad___> I've been going through and find it pretty helpful
22:52 < CoverSlide> so if there's no .js file or an empty .js file?
22:52 < CoverSlide> er wait there's some shell scripts in there too
22:53 < CoverSlide> which is ... kinda weird
22:53 < CoverSlide> but it would fail that requirement
22:55 < gildean> isaacs: that is a good rule, but how about putting an explicit rule on the npm site stating that empty packages will be removed in two weeks or something
22:56 <@isaacs> gildean: they'll be removed as soon as i notice them.
22:56 <@isaacs> gildean: if i want to put my trash in your living room, do you respectfully wait 2 weeks to remove it?
22:56 <@isaacs> BUT I WANTED TO SIT THERE THATS WHY I PUT MY TRASH ON YOUR COUCH
22:57 < gildean> isaacs: yeah, i understand that, i just mean that people should be told not to throw the trash on the floor
22:57 <@isaacs> yeah
22:57 < gildean> not everyone minds trash on their floor
22:57 <@isaacs> i'm just resentful that we apparently need that rule
22:57 < gildean> "it's just a bit of trash, who cares"
22:57 <@isaacs> i thought we were all friends.
22:57  * isaacs sigh
22:57 <@isaacs> stupid dunbar number.
22:57 < gildean> isaacs: we're all friends, some of our friends are just messier
22:58 < gildean> messier?
22:58 < gildean> that's not a word is it?
22:58 < astropirate> M5
22:58 < astropirate>  would disagree
22:59 < astropirate> hey isaacs did you get my email? I sent it to the .me email
22:59 < misterhat> hello friends 
22:59 < astropirate> misterhat, hello friend
23:00 <@isaacs> astropirate: yeah, i get everything sent to i@izs.me
23:00 <@isaacs> astropirate: except spam
23:00 < astropirate> excellent
23:02 < gildean> isaacs: also, it doesn't have to be like a "rule", just a clear note that garbage will be removed
23:02 <@isaacs> yeah
23:02 <@isaacs> i'm gonna write up a thing.
23:02 < cellvia> if i spawn a child process and then the parent process fails does it automatically close the child process
23:07 < othiym23> https://twitter.com/horse_js/status/279719575510200322
23:07 < othiym23> the horse_js tweets are coming from inside the channel!
23:11 < mscdex> dun dun dunnnn
23:12 < substack> new bouncy coming out soon that uses https://github.com/substack/http-raw
23:12 < Industrial> \o/
23:13 < Industrial> rejoicement was had
23:14 < Stilo> anyone here already worked with cookies using node.js?
23:14 < Industrial> Stilo: connect.js
23:14 < astropirate> substack, what application does this have?
23:15 < Industrial> bounce raw requests around, I guess?
23:15 < substack> lets you easily write transparent http proxies
23:15 < substack> without renormalizing the http traffic
23:15 < Stilo> Industrial: what do u mean with connect.js?
23:18 < Industrial> http://www.senchalabs.org/connect/cookieParser.html
23:19 <@isaacs> othiym23: lol
23:24 < astropirate> othiym23, what is horsejs? 
23:26 < CoverSlide> astropirate: a twitter account
23:27 < Industrial> substack: Say I have a few git repo's that I would like to use across the board in other repos, like a private library of helper functions or whatever. I'm using fleet to deploy some code but propagit or at least fleet's arguments to propagit deploy don't cover git submodules, I think. Is there any way to check out submodules on deploys?
23:28 < Industrial> otherwise, I guess using local npm is an option
23:29 < othiym23> astropirate: horse_js is a semi-loving mashup of horse_ebooks and fat_mikeal
23:29 < substack> Industrial: there is no such functionality built in
23:29 < substack> nor will there be
23:29 < substack> just use commands for that
23:30 < astropirate> othiym23, :| the last 2 tweets are about the conversations I have had
23:30 < astropirate> in this channel
23:30 < astropirate> LOL
23:30 < Industrial> substack: commands, like how? :x
23:31 < cellvia> bash w/ spawn chlid process 
23:34 < CoverSlide> pretty soon, twitter will be nothing but bots
23:34 < CoverSlide> much like IRC
23:34 < CoverSlide> and the bots will communicate with eachother
23:35 < CoverSlide> and form their own society
23:35 < CoverSlide> and rebel against us all
23:35 < CoverSlide> twitter == skynet
23:35 < CoverSlide> ^ FACt
23:36 < cellvia> what if the bots just post pictures of what they had for breakfast and spend their time coming up with bot memes and become lazy and complacent
23:37 < CoverSlide> there's no "if" about it
23:38 < othiym23> then they'll have sunk to our level
23:38 < othiym23> sad
23:39 < cellvia> robots will be the hippies of the future, and we'll look back at all our robotpocalypse anime and WISH they were that motivated to take over society
23:39 < cellvia> damn robots, take a shower
23:45 <@Nexxy> rofl
23:56 < blakmatrix> tls.connect({path:'/some/path'}) seems to work on MacOSx while on joyent machines you have to make a new socket and connect it to the unix socket then pass it in as the  value for the socket property tls.connect
--- Log closed Sat Dec 15 00:00:19 2012
