--- Log opened Sun Jul 15 00:00:17 2012
00:29 < deoxxa> ew coffeescript
01:45 < _Tristan> If I run "npm update thingy" and the new version of thingy has a dependency that the old version didn't, npm doesn't install it. Why not? How can I get it to do so?
01:50 < TimeTurner> _Tristan: it should, if it is properly defined in the package.json file of the new version
01:50 < _Tristan> "resig-class": ">= 0.1.0"
01:51 < _Tristan> that's the line, though it works fine if I do npm install [pkg] instead of npm update [pkg]
01:52 < TimeTurner> hmm
01:52 < TimeTurner> strange
02:23 < _Tristan> I think it might be an npm bug
02:26 < _Tristan> nevermind
02:27 < llrcombs> can crypto.createHmac's "key" param take a Buffer?
02:28 < prettyrobots> Hello.
02:29 <@Nexxy> HAI PRETTYROBOTS
02:29 < prettyrobots> :)
02:30 <@Nexxy> how are we this evening?
02:30 < prettyrobots> Back from a long walk with Twitter and baby pictures.
02:30 <@Nexxy> sounds fabulous
02:32 < Daegalus> Nexxy: hows motherhood? having fun?
02:32 <@Nexxy> Daegalus, amaaaaaazign
02:34 < Daegalus> Nexxy: wow, so good, even making typos :P. But ya, kinda figured with the barrage of baby pics on twitter. Well I am glad things are going well and you guys are happy!
02:34 <@Nexxy> :D the barrage is just beginning
02:34 <@Nexxy> was typing w/ one hand :P
02:35 < Daegalus> Nexxy: well don't drop the baby, don't want fall induced future WTFs :P
02:38 <@Nexxy> Daegalus, we're on the bed :P
02:39 < llrcombs> can crypto.createHmac's "key" param take a Buffer, or just a String?
02:40 <@Nexxy> llrcombs, you could have tried it yourself in the REPL by now :P
02:40 < llrcombs> Nexxy: valid point
02:42 < llrcombs> looks like it does
02:42 <@Nexxy> \o/
03:13 < davidbanham> I need to output an HTML listing of files that matches the page structure of the default Apache file listing for some backwards compatibility.
03:14 < davidbanham> Anyone know of someone already writing a module to do it? Not a big task, but if someone's already done it I'd rather just use that.
03:55 < Raynos> Need to write an article about node. Have a few ideas ( https://gist.github.com/ceb49738b2a26018829b ) anyone want to tell me which sounds the most interesting?
04:01 < chapel> Raynos: maybe code reuse
04:02 < Raynos> chapel: that one involves writing a decent example
04:02 < SubStack> compose web servers https://github.com/substack/mountie
04:02 < Raynos> i.e. one that isn't clearly biased / tailored to the article
04:03 < Raynos> SubStack: I'm buying you shit tomorrow, I was going to write that library on monday and you beat me to it
04:03 < Raynos> thank you for solving my problems for me
04:05 < davidbanham> Raynos: Maybe not 'aggressive' enough but I find people outside the node community really relate to code reuse when I talk about form validation on both the client side (for speed/UX) and form input validation on the server side (for security) using exactly the same code.
04:06 < Raynos> davidbanham: sharing validation is like the peak of the iceberg
04:06 < Raynos> that's small fry stuff.
04:06 < SubStack> Raynos: hooray!
04:06 < Raynos> You should be able to share 70% of your code base
04:06 < SubStack> Raynos: well I already wrote this last week
04:06 < SubStack> actually it's a very old system that is months old
04:07 < davidbanham> Exactly, not aggressive, but easy to explain to a PHP or Python guy.
04:07 < SubStack> part of browserling that I'm finally spinning off
04:07 < Cat4D> http://1337day.com/exploits/18984   W  T  F
04:07 < SubStack> spin off all the things
04:07 < SubStack> but the mounting part of it I came up with last week
04:08 < Raynos> davidbanham: I didnt think about making it easy to explain :D
04:14 < deoxxa> Cat4D: lol!
04:20 < Cat4D> there is no browser indicated, fake?
04:22 < deoxxa> i'm still trying to get my head around it
04:24 < deoxxa> there's a lot of indirection going on there...
04:24 < vrlogrs> hey guys
04:25 < vrlogrs> im wondering, since node.js has so many asynchronous calls, does it have some sort of locks/semaphores ?
04:25 < deoxxa> no
04:25 < deoxxa> that would be backwards
04:25 < vrlogrs> but, if we're working with global variables
04:26 < deoxxa> "since this car never crashes, is there any way for me to slam it into a wall and kill my family?"
04:26 < SubStack> vrlogrs: the cool thing about async is that you don't need semaphores or locks
04:26 < deoxxa> ^^ this
04:26 < SubStack> because you never have multiple instruction pointers
04:26 < SubStack> except perhaps in some wrappers living in c++ land to wrap around synchronous apis
04:26 < gkatsev> assuming you're running single threaded
04:26 < vrlogrs> but global variables are manipulated by several asynchronous calls
04:26 < SubStack> but those are all hidden from javascript
04:27 < deoxxa> vrlogrs: which all run exactly one at a time - it's asynchronous, not parallel
04:27 < SubStack> vrlogrs: but javascript is never pre-empted in its execution
04:27 < SubStack> node preserves the run-to-completion semantics of browser javascript
04:27 < vrlogrs> maybe im not explaining this right, let me try again ...
04:28 < vrlogrs> if i have 2 clients accessing my site -- the node.js script has a global variable which will be modified by each 'script' (1 for each client)
04:28 < vrlogrs> but if i have a if/else statement on that global variable, the if/else statement will fail if in the mean time another client has the variable modified
04:28 < vrlogrs> right?
04:29 < SubStack> no
04:29 < Raynos> vrlogrs: but, if we're working with global variables
04:29 < SubStack> your javascript will only ever run one at a time
04:29 < Raynos> if your working with globals your doing it wrong
04:29 < SubStack> if you're registering callbacks then the state may change between requests
04:32 < vrlogrs> so, if i had this: http://pastebin.com/sikFyu0Y
04:32 < vrlogrs> you guys are saying that this wouldn't 'fail'
04:33 < vrlogrs> where one script is in the if statement already, and another script already changes .game = false ?
04:33 < Raynos> only one javascript function runs at a time
04:33 < Raynos> its not parallel
04:34 < vrlogrs> so Raynos .. if one client runs the script, it will not be interrupted if another client runs at the same time
04:34 < Raynos> correct
04:34 < vrlogrs> weird .. 
04:34 < Raynos> so if you had a while(true) loop
04:34 < Raynos> your server would just do nothing of value
04:34 < vrlogrs> cause wont that cause delays in response time?
04:35 < Raynos> if your code is slow it will cause delays
04:35 < vrlogrs> i see
04:35 < vrlogrs> i might have to revise my code then ..
04:36 < vrlogrs> ok, thanks for the help
04:37 < vrlogrs> btw, this is for a chess game ive been working on: http://209.141.47.151/chess
04:37 < vrlogrs> if anyone's interested 
04:37 < EhevuTov> I'm having MVC framework overload. Dunno what to use
04:37 < gkatsev> maria?
04:38 < EhevuTov> vrlogrs, cool
04:39 < vrlogrs> EhevuTov: thanks ... im actually going to perfect the backend code, and then reuse it to make a bunch of other board/card games
04:39 < gkatsev> vrlogrs: how's that tic tac toe game from awhile back?
04:39 < vrlogrs> node.js is perfect for it
04:39 < vrlogrs> gkatsev: it's good -- it was a stepping stone really to get to chess
04:39 < gkatsev> ok
04:39 < gkatsev> cool
04:39 < vrlogrs> im gonna start making some more common games - checkers, battleship, etc
04:40 < vrlogrs> maybe poker and stuff too
04:40 < gkatsev> I've been planning on doing some more personal projects
04:40 < vrlogrs> what kind gkatsev?
04:40 < gkatsev> um... first I want to update my set.js lib
04:41 < gkatsev> and then perhaps some games and stuff
04:41 < vrlogrs> what's that for?
04:41 < vrlogrs> nice gkatsev -- maybe we can work together on some complex games
04:41 < gkatsev> vrlogrs: it's a Set library, so, you could have a set object and you can do set operations with it
04:41 < vrlogrs> interesting..
04:42 < gkatsev> https://github.com/gkatsev/set.js
04:42 < vrlogrs> ill take a look
04:42 < vrlogrs> .. i really need to start using git for my projects
04:42 < gkatsev> it isn't necessarily about git. It's about github
04:43 < Raynos> EhevuTov: none
04:43 < Raynos> the notion of using an mvc framework is silly
04:43 < Raynos> just write modular code
04:43 < gkatsev> maria is the gang of four mvc framework, fwiw.
04:43 < vrlogrs> no, i just mean git will be helpful for keeping track of my projects' progress
04:44 < vrlogrs> its very useful
04:44 < EhevuTov> Raynos, what do you mean
04:44 < SubStack> yes, mvc is super silly
04:44 < gkatsev> vrlogrs: yeah, but you could use mercurial or some other thing just as well
04:44 < SubStack> it should really be about creating lots of tiny mvcs
04:44 < Raynos> vrlogrs: is the chess one on github?
04:44 < gkatsev> vrlogrs: but if you want to make it public, there's really nothing better for sharing than github right now
04:45 < Raynos> EhevuTov: you dont need a library to do mvc, it's an architecture pattern, just architecture your code correctly
04:45 < vrlogrs> gkatsev: ive actually used git for a school project once, so im thinking it'll be easy to pickup
04:45 < vrlogrs> Raynos: not yet .. i will SOOON .. you want to help me fix any bugs? :P
04:45 < gkatsev> it isn't hard per se, but it has some idiosynchrocies
04:45 < SubStack> EhevuTov: I think it's a lot more useful to break up the mvcs by components
04:45 < EhevuTov> but binding and watching data stores seem easier if I have a framework do it
04:45 < gkatsev> vrlogrs: the pro git book is up on git-scm.org for free
04:45 < vrlogrs> gkatsev: is it easy to setup on a VPS?
04:45 < Raynos> vrlogrs: I dont know whether I can tolerate
04:45 < gkatsev> vrlogrs: sure.
04:45 < SubStack> in the usual mvc design ala rails you've got model/ view/ controller/ and each of those has a ton of stuff in them
04:45 < gkatsev> relatively
04:45 < vrlogrs> lol Raynos .. thanks for the link gkatsev
04:46 < SubStack> but instead you could have each component with its own mode/ view/ and controller/
04:46 < EhevuTov> SubStack, yeah, I'm not talking about client-side so much, but client-side
04:46 < gkatsev> EhevuTov: um, client/server?
04:46 < vrlogrs> Raynos: :P
04:47 < EhevuTov> I mean, I'm trying to get more client-side
04:47 < EhevuTov> so, I'm looking at frameworks for client-side I mean
04:47 < gkatsev> EhevuTov: what SubStack said still stands.
04:47 < Raynos> gkatsev: https://github.com/TimGoodwyn/Sets-in-Lang./blob/master/Specification/Set%20Interface
04:48 < gkatsev> Raynos: interesting
04:48 < Raynos> gkatsev: I lost the implementation code. I did implement it in JS at some point
04:48 < gkatsev> Raynos: I have most of those.
04:48 < SubStack> EhevuTov: check out https://github.com/substack/yarnify
04:49 < EhevuTov> thanks, I'll check that out
04:49 < SubStack> it's geared towards breaking up front end code into lots of tiny reusable widgets
04:49 < _Tristan> that's the most terrifying cat I've ever seen.
04:50 < Raynos> SubStack: https://github.com/substack/yarnify/blob/master/browser/with_prefix.js is a hack
04:50 < vrlogrs> alright, thanks for the help guys .. gonna waste time watching tv shows
04:51 < SubStack> Raynos: correct but it works
04:51 < SubStack> and it keeps everything isolated
04:51 < Raynos> SubStack: it doesnt work
04:51 < Raynos> Your not catching .getElementsByClassName
04:51 < Raynos> It's a fragile abstraction, there are a ton of ways to get around it
04:51 < SubStack> how often do you use that one?
04:51 < SubStack> just use querySelectors
04:52 < SubStack> I'm not concerned about "getting around it"
04:52 < SubStack> the ids and classes are transformed
04:52 < SubStack> there's no getting around that part
04:52 < SubStack> and that is the part that matters
04:52 < Raynos> i rarely use querySelectors
04:52 < Raynos> I prefer gebcn and gebi
04:52 < SubStack> instead of getElementsByClassName(name) just do querySelectorAll('.' + name)
04:53 < SubStack> anyways I would take a patch to hack in getElementsByClassName
04:53 < SubStack> I just don't personally use that one so I didn't add it
04:54 < Raynos> ill see about patching it. It just feels incredibly fragile
04:54 < Raynos> I'm expecting a bunch of complex code to break because you have a leaky abstraction
04:59 < _Tristan> does EventEmitter allow chaining?
06:51 < _Tristan> I'm looking for a way to match strings like express does with it's routes, that is, combine "/:id/:thing" and "/5/6" into {id: 5, thing:6}, but I can't find express' code for it. Does anybody know a way to do this?
06:54 < deoxxa> _Tristan: i wrote a module to do that - https://github.com/deoxxa/houkou
06:54 < _Tristan> deoxxa: ILU have my babies.
06:54 < deoxxa> oh i'm not sure i need all your babies
06:54 < deoxxa> maybe just lend them to me if i want to get cheap cinema tickets
06:55 < deoxxa> fun fact: the readme is longer than the source
06:55 < _Tristan> nice
06:55 < _Tristan> I like a lightweight library
06:56 < deoxxa> it differs a little from express' routing in that you can't do regexes inline (like "/:id([0-9]+)")
06:56 < deoxxa> you use the "requirements" field of the options object
06:56 < _Tristan> nifty
06:56 < _Tristan> does it care about leading slashes?
06:57 < deoxxa> it does if you tell it to
06:57 < _Tristan> right, but otherwise?
06:57 < deoxxa> well, you'll probably tell it to
06:57 < _Tristan> I'm not actually using it for routes
06:57 < deoxxa> oh, well you can just not put the slash in
06:57 < _Tristan> mk, thanks
06:58 < deoxxa> console.log((new Houkou("some/:derp")).match("some/thing"))
06:58 < deoxxa> will return {derp: "thing"}
06:59 < _Tristan> perfect
06:59 < _Tristan> I'm glad, I was going to have to write it from scratch and I hate regex.
06:59 < deoxxa> heh
07:03 < yaymukund> problem: spawn('mocha', ...) doesn't have colors. So I added customFds: [0,1,2]. Now, it's black on black and I can't read it.
07:06 < _Tristan> deoxxa: can I do :id?
07:06 < _Tristan> as in, optional id?
07:06 < yaymukund> oh I think this is just a terminal colors issue. hmmph. nothing to do with customfds
07:07 < deoxxa> _Tristan: sure - new Houkou("a/b/?:id", {requirements: {id: "(.*)"}})
07:07 < deoxxa> the ? after the slash makes the slash optional
07:07 < _Tristan> what if I don't pass requirements?
07:08 < _Tristan> I'm trying to make my api not need the second parameter
07:08 < deoxxa> then it'll be set to .+? by default
07:08 < _Tristan> but it'd still be optional, right?
07:08 < deoxxa> which is "one or more of anything"
07:08 < deoxxa> nope
07:08 < deoxxa> you might be able to do /:id?
07:08 < _Tristan> I should probably run it and check...
07:09 < deoxxa> by virtue of the way it compiles the regex, that might just work
07:09 < deoxxa> though it's not designed to work that way
07:59 < jmls> morning all
07:59 < jmls> have a problem with installing bson on windows
08:06 < jmls> arrgh. sorry, got disconnected
08:07 < jmls> right - i have a problem installing bson. when installing mongodb, it gets to the point of "npm http 304 https://registry.npmjs.org/bson/0.0.6"
08:07 < jmls> it then says "> bson@0.0.6 install C:\Users\myuser\AppData\Roaming\npm\node_modules\mongodb\node_modules\bson"
08:07 < jmls> "> node install.js"
08:07 < jmls> and hangs there 
08:08 < jmls> cpu goes to 13% , and I've left it all night 
08:08 < jmls> has anyone else seen this ?
08:53 < _Tristan> deoxxa: if you take the route and replace ( with (?: it will make all incoming groups non-capturing and allow regex to work better in routes
09:01 < Raynos> jmls: try installing the latest version of bson
09:03 < klaemo> is there a some kind of in-depth tutorial about streams in node?
09:04 < Raynos> klaemo: http://maxogden.com/node-streams
09:04 < Raynos> klaemo: https://github.com/dominictarr/stream-spec
09:05 < klaemo> Raynos: i've read max ogdens post, but i need moooore ;) i'll take a look at the other one. thanks :)
09:07 < Raynos> klaemo: other then that, learn by doing. Read max's, mikeal's, substacks, dominictarr's, isaacs's stream based modules
09:07 < klaemo> yep that's what i'm already doing
09:09 < Raynos> the next step I took is just writing modules that are streams or modules that interact with streams. event-stream is very helpful in building streams
09:38 < nykac> is their any way for the HTTP module to listen on multiple addresses?
09:39 < deoxxa> nykac: maybe - can you be more specific?
09:43 < nykac> nykac: i want to bind to two addresses: 1 ipv4, and 1 ipv6. i've tried using mapped addresses but i keep on getting an EADDRINUSE.
09:43 < nykac> deoxxa: 
09:45 < deoxxa> i see... i'm not sure
09:46 < nykac> even if it is set to listen on different ports it gives an error
10:23 < fent> anyone remember that site that recorded your terminal?
10:23 < fent> i think it had 'stream' in the name
10:25 < mmalecki> http://codestre.am/
10:32 < fent> mmalecki: thank you
10:39 < tr45> can i bcrypt once and then compare to several hashes? or it does not work like that :(
10:41 < gildean>  tr45: i don't see why not
10:43 < gildean> tr45: ah, sorry i misunderstood, depends on what you're doing
10:44 < gildean> as with bcrypt you tend to use random salts, so each hash has to be compared using that salt
10:45 < tr45> yes bcrypt auto salts. so right now there is only .compare function, i wonder if internally it is possible to compute it only once.
10:46 < tr45> one more thing i wish i didn't need to know heh
10:54 < tr45> yep the salt is clear in the hash, so just need to use that to compute once.
11:24 < jmls> Raynos: do you mean using npm ? 
11:24 < jmls> I have tried npm install bson
11:24 < jmls> same problem
11:25 < jmls> I am starting to think that it's a problem with npm or a build process : 
11:25 < jmls> trying to install pg hangs at this point
11:25 < jmls> "> node-gyp rebuild || (exit 0)"
11:37 < saschagehlich> hey
11:37 < saschagehlich> request will follow redirects automatically, right? is there a way to find out the final url it has been redirected to?
11:48 < Gloorian> Hi
11:50 < Gloorian> I'd want to listen an rss feed with an URL.
11:50 < Gloorian> It's with a bot and I want to listen the rss feed everytime and call a callback when a new item comes
11:50 < Gloorian> so I don't think a http.get will work
11:50 < Gloorian> an idea ?
12:28 < vandenoever> i''m trying to build an application with sourceming, but one package is not building, a newer version is needed
12:28 < vandenoever> how can i tell sc to use a newer version?
12:51 < urlwolf> does anyone know any JS framework other than socketstream using websockets by default?
12:56 < ^robertj> stupid question, what's the best way to call a series of functions each with the return value of the previous as the input value of the next?
12:56 <@Nexxy> ^robertj, an array of functions?
12:56 < deoxxa> fn3(fn2(fn1(x)))
12:56 < ^robertj> well the functions are rather long and defined inline
12:56 <@Nexxy> well first start with not doing that
12:57 <@Nexxy> then put them in an array and iterate
12:57 < deoxxa> then end with using https://github.com/caolan/async
12:57 < deoxxa> because they're synchronous now, but they won't be in the future
12:57 < deoxxa> (you'll eventually introduce something that's asynchronous)
12:57 < ^robertj> .series looks like what I might want
12:59 <@Nexxy> .waterfall
13:01 < ^robertj> that looks like exactly what I want
13:01 < ^robertj> thx
13:01 <@Nexxy> :)
13:01 <@Nexxy> deoxxa spoils all the fun
13:01 < deoxxa> also the milk
13:01 < deoxxa> don't let me stand in milk
13:01 < deoxxa> i am citrus based
13:02  * deoxxa sprays acid and smells delightful
13:02 <@Nexxy> duly noted
13:18 < JasonSmith> All, in a conversation with my Python friend, we compared notes about JavaScript. Basically, he is a closet JavaScript bigot
13:19 < JasonSmith> He said that you can't iterate through a collection, and I nailed that as nothing but FUD. for...in works just fine
13:20 < JasonSmith> Next he said that he "vaguely remembered" that certain keys are not allowed/recommended in objects, perhaps "constructor". I think this is FUD but I couldn't definitively counter it from memory. All I could say was two years of nonstop JS coding, I've never had a problem
13:21 < JasonSmith> I just tried using "constructor" as an object key and it seems to work fine. Obviously you lose the .constructor value from the prototype chain but meh
13:22 < JasonSmith> Thoughts?
14:06 < Gloorian> Hello
14:07 < Gloorian> I'd like to use the node Repl within my script
14:07 < Gloorian> But I don't know how to handle input :/
14:09 < Gloorian> Is there anyone ?
14:18 < Gloorian> Please my only question is : "How to write into stdin" ?
14:19 < Spion> you can only read from stdin. you write to stdout.
14:19 < Spion> process.stdin.on('data', function(d) { console.log("Read string", d.toString()); });
14:19 < Gloorian> ok, but how can I create a stream I could write in ?
14:19 < Gloorian> the thins is Repl needs a writable stream and I need to write into this stream
14:20 < Gloorian> Can I create a custom one ?
14:20 < Spion> are you talking about http://nodejs.org/api/repl.html#repl_repl_start_options ?
14:21 < Gloorian> yes I am :)
14:21 < Gloorian> that's for my nodejs bot
14:21 < Gloorian> I want it to execute javascript commands and display them
14:21 < Gloorian> like that:
14:21 < Gloorian> "Me: >> 2 + 3;" "Bot: 5"
14:22 < Spion> you will need to create your own stream
14:22 < Gloorian> ok, do you know how ?
14:24 < Spion> make a constructor function
14:24 < Spion> e.g. MySpecialStream
14:25 < Gloorian> ok
14:25 < Spion> use util.inherits(MySpecialStream, require('stream').Stream);
14:25 < Spion> then implement the stream methods
14:25 < Gloorian> so for example, MySpecialStream = function() { };
14:25 < jmls> is there an irc for npm ? Or will here do ? :-D
14:25 < Spion> here is an example: https://github.com/mikeal/morestreams/blob/master/main.js
14:25 < Gloorian> thank you so much :)
14:25 < gildean> jmls: here will do, most likely
14:25 < Spion> i have absolutely no idea why its so big
14:26 < jmls> gildean: ta
14:26 < Spion> :)
14:26 < Gloorian> oh my god :D
14:26 < jmls> having problems with npm on windows
14:26 < jmls> npm help init will hang, consuming cpu until i ctrl-c
14:26 < npmbro> jmls: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20init%20will%20hang
14:27 < Spion> oh its not that bad. there are two types of streams there. seems like a writable stream only needs write and pipe
14:27 < Gloorian> the other one won't be useful in my case right ?
14:27 < jmls> or if I'm trying to install bson, it hangs at node install.js
14:28 < jmls> tried to uninstall, reinstall, same result
14:31 < Spion> Gloorian, my bad. I think you implement pipe is for readable streams, write for writeable. Yeah, that should be it. I guess.
14:32 < Gloorian> Spion: I think for Repl, I need a stream. I'll use Input.write();
14:33 < Gloorian> and the output: Output.on('data', function(data) { });
14:34 < Spion> Gloorian, I'd instead start a new process and pipe to it
14:34 < Gloorian> Spion: you think ?
14:34 < Spion> the advantage of that approach being that you can run the new process as user nobody and lowering security risks.
14:35 < Gloorian> Spion: Well, I check that there are no require into the request
14:35 < Gloorian> so there shoudn't be any risk right ?
14:35 < Spion> there is a risk. endless loops for example
14:35 < Gloorian> oooh
14:35 < Spion> starting a new process will allow you to kill lit after 5 seconds
14:35 < Spion> there are many ways that things can go wrong :D
14:36 < Gloorian> yeah but I don't really know how tu use pipes in that case
14:36 < Gloorian> And I kinda trust the people in that chan since we're only a few
14:37 < Gloorian> And, I can also restart the repl every minutes for examples
14:37 < Gloorian> -s
14:38 < Spion> controlling external processes should be relatively easy
14:42 < Gloorian> well I'll try
14:53 < Spion> Gloorian, a sample. http://paste.softver.org.mk/0d119299d674a432140836861300098d
14:53 < Gloorian> wow that's nice
14:53 < Gloorian> thank you :)
14:54 < Gloorian> But how would you make the difference between code and expression ?
14:54 < Gloorian> The interpreteur does it usually
14:55 < RLa> isn't experssion code?
14:56 < Gloorian> RLa: no but into his sample
14:56 < Spion> not in javascript.
14:56 < Spion> you would make it a different command.
14:56 < Gloorian> He makes a difference because expression is between console.log
14:56 < Spion> an expression is something that after being executed has a value
14:57 < Gloorian> See, if you enter 2 + 3 into the repl, it will give you the result
14:57 < Gloorian> Spion: Okay, so your sample is perfet
14:57 < Gloorian> but do you know how I can differentiate both ?
14:57 < Gloorian> *perfect
14:57 < RLa> you mean statements vs expressions?
14:57 < Spion> RLa, yeah
14:58 < Spion> a C++ bot called geordi differentiates between them by having different commands
14:58 < Spion> e.g. geordi, code
14:58 < Spion> and geordi << expression
14:58 < Gloorian> okay :)
14:58 < Gloorian> I have an idea
14:58 < Gloorian> thank you so much :)
15:16 < prettyrobots> How do you tell ircretary to forget a watch?
15:22 < prettyrobots> Figured it out. Thank you.
15:22 < prettyrobots> Figured out ircretary so don't bother answering. Thank you.
15:31 < omerc> anyone willing to help with a socket.io problem?
15:31 < omerc> http://pastebin.com/Q4CZBQum
15:32 < omerc> even tho I use rooms, everyone gets the emits I send .to(room)
15:35 < djazz> how can I send an arraybuffer with xhr  from browser to a node.js http server?
15:35 < tuhoojabotti> djazz: XHR? I guss json?
15:35 < djazz> must i use FormData and make it to a blob and use the node-formidable module
15:35 < tuhoojabotti> guess*
15:35 < djazz> json?
15:35 < tuhoojabotti> hmm
15:35 < djazz> eh
15:36 < tuhoojabotti> xhr2 can handle arraybuffers I think
15:37 < tuhoojabotti>  xhr.send(uInt8Array.buffer);
15:37 < djazz> tuhoojabotti: yes, but how do i recieve it serverside?
15:38 < tuhoojabotti> POST data I suppose
15:38 < tuhoojabotti> food ->
15:38 < tuhoojabotti> Sorry for being unhelpful
15:39 < djazz> tuhoojabotti: yes i use post...
15:39 < djazz> i just wonder if nodejs have some simple way, similar to php's $_FILES. I'll go with Formidable
15:39 < djazz> and blobs
15:40 < cansin> guys, not trying to start a religion war here but; what's the best IDE for node.js in you opinion ?
15:40 < chapel> vim
15:40 < cansin> do you have any suggestions to a node.js newbie
15:41 < cansin> I really think it'd be better if I can get a full IDE support rather than a over-powered text editor
15:42 < dRiN> sublime text 2
15:42 < dRiN> <3
15:43 < cansin> do you know if it's possible to debug node.js with sublime ?
15:43 < cansin> that is similar to what eclipse + v8 got ?
15:44 < Leemp2> Anyone else hate the module name "path"? I always want to write path in my own functions to describe.. well, a generic path :s
15:51 < tuhoojabotti> candybar: sublime
15:51 < adrianF> cansin: c9.io (rich online editor with nodjs debugging)
15:51 < tuhoojabotti> candybar: node-inspector for debuggin
15:51 < tuhoojabotti> candybar: On Windows, webmatrix
15:53 < tuhoojabotti> WebMatrix is probably the most IDE like
16:24  * diegoviola wishes there was a similar tool to npm in ruby
16:24 < diegoviola> bundler sucks imho
16:25 < diegoviola> bundler + rubygems + rvm's gemset + rbenv == too much stuff
16:25 < diegoviola> npm == gets the job done and it's simple
16:25 < SubStack> npm is setting the bar so high for package management, it's improving reuse everywhere
16:25 < npmbro> SubStack: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20is%20setting%20the%20bar%20so%20high%20for%20package%20management
16:25 < SubStack> silly npmbro!
16:38 < AAA_awright> I... what? Has no one ever used a good package manager?
16:44 < prettyrobots> AAA_awright: Such a thing is against my core beliefs.
16:45 < AAA_awright> Strange, a *lot* of Linux distributions seem to have that opinion
16:45 < prettyrobots> Which package manager do you prefer?
16:46 < AAA_awright> I use Portage
17:11 < jmls> just trying to learn Javascript, node and  Express. I have now got a block of code that starts with "app.del('/users/:id', function(req, res){"
17:12 < jmls> I want to be able to move all /users functions into a separate file
17:12 < jmls> what would be the best way to do that ?
17:12 < jmls> thanks.
17:13 < bingomanatee> Any advice for accomplishing i18n via node.js?
17:14 < jkevinburton> i have var parseCookie = require('connect').utils.parseCookie;  and then in my code, I have var cookie = parseCookie(data.headers.cookie);  but I am getting a "undefined is not a function" on that line ... anyone run into this? or maybe know what is wrong?
17:16 < zomg> jkevinburton: most likely require('connect').utils does not have a function 'parseCookie' in it, thus you are assigning an 'undefined' into the variable
17:17 < jkevinburton> must of been in an earlier version? I've followed like 3 tutorials and they all use the same code
17:17 < zomg> jkevinburton: yeah that's possible
17:23 < Leemp2> Where is a list of the old nodejs docs on the site? I know it hosts older docs (0.7 for example) but for the life of me i can't find them
17:25 < Leemp2> God, that was aweful. http://nodejs.org/docs/v0.7.2/api/index.html found it.. but still, for future reference, is there an easy way to find older docs?
17:30 < moesian> hello i find myself having to repeat some initial setup every time i open the node shell. Whats the best approach to having a bunch of requires automatically setup when i start the console 
17:30 <@maxogden> Leemp2: you put in the version number you want in the url
17:31 < Leemp2> maxogden: Yea, i didn't know the format before though, since it's not clear on the default docs
17:31 < Leemp2> maxogden: Eg, by default "http://nodejs.org/api/" is used. So i naturally tried "http://nodejs.org/api/0.7.2" which doesn't exist
17:31 <@maxogden> Leemp2: oh gotcha. its also in git
17:32 < Leemp2> maxogden: It's actually "http://nodejs.org/docs/v0.7.2/api"
17:32 < Leemp2> Ah, nice
17:32 < jkevinburton> guess I disconnected..... what is the proper util to parse cookies? if connect no longer has utils.parseCookie ?
17:32 < Leemp2> And for that matter, is path.sep entirely new to 0.8? Or was it moved? (Which is a roundabout way of asking, for versions < 0.8, how does one figure which path sep to use? (/ vs \)
17:33 <@maxogden> npm search cookies
17:33 < npmbro> maxogden: Please see http://eirikb.github.com/nipster/#cookies
17:33 <@maxogden> npm install cookies
17:33 < npmbro> maxogden: Please see https://github.com/jed/cookies
17:33 <@maxogden> o/ that one is pretty good
17:34 < Leemp2> If there isn't anything built in, i'll just use `path.join('a','b')[1]` i guess
17:35 < owen1> jmls: read about modules - http://nodejs.org/docs/latest/api/modules.html that's node's way of seperating your code into small files.
17:35 < darkyen> I have an issue in native modules . when i send an arraybuffer via this code
17:35 < darkyen> if( Number::New(samples[i])->IsNumber() ) 			{ 				ArrayBuffer->Set(i,Number::New(samples[i])); 			} 			else{ 				ThrowException(Exception::Error(String::New("Not A Number"))); 				return 0; 			}
17:36 < darkyen> It runs without an exception
17:36 < darkyen> but in JS it prints multiple NaN values
17:36 < darkyen> any clue what maybe going wrong ?
17:38 < owen1> what kind of limitations do i have for each node process? i assume those 3: file descriptors limit, cpu and memory. is this accurate?
17:41 < prettyrobots> owen1: http://ss64.com/bash/ulimit.html
17:43 < owen1> prettyrobots: nice! i see open files: 4864   does it mean file descriptors?
17:44 < prettyrobots> owen1: I assume so, but I'm sure someone with more knowledge than I would put a finer point on it.
17:45 < owen1> prettyrobots: i believe that fd are used on ANY async i/o - http calls, db calls and file system. so it means i can only have 4864 async at the same time.
17:48 < prettyrobots> owen1: Let me know what you find out.
17:49 < owen1> prettyrobots: will do. i recently gave an intro talk about node and someone asked me "when will the server stop accepting requests?" and i mentioned the memory limitation of v8 (1.7 MB) but didn't think about cpu or fd.
17:50 < michaelaguiar> Is node.js the best way to get real-time updates in my app?
17:50 < michaelaguiar> AND - is it possible to run node.js alongside PHP - as the real time feature is only a small part of my app?
17:53 < owen1> michaelaguiar: yes and yes
17:53 < michaelaguiar> owen1: Thanks!
17:55 < michaelaguiar> owen1: do you know if it's hard to setup something like that?  Where some requests are PHP and some node.js?
17:55 < michaelaguiar> Or is it as simple as installing node.js and writing my code alongside it
17:56 < owen1> michaelaguiar: install node, copy paste hello world and u got a web server in 3 lines. your node will run on whatever port u want and your php on another
17:57 < michaelaguiar> Ok great, thanks again
17:57 < darkyen> :-/
17:57 < darkyen> has somebody got any opinion on my issue
17:57 < owen1> darkyen: i don't know what arrybuffer is..
17:58 < darkyen> ArrayBuffer is just a simple Array With Numbers as buffers
17:58 < darkyen> i am trying to write native bindings for ffmpeg with node.js
17:58 < darkyen> issue is the sample values are coming as NaN
18:00 < darkyen> +ve 935  -ve 0  NaN 217 in 1152 samples .
18:00 < darkyen> Now i am wondering if v8::Number is the proper method of sending numbers to js or not!
18:04 < owen1> "The ArrayBuffer is a data type that is used to represent a generic, fixed-length binary data buffer" - what does binary data buffer means?
18:05 < owen1> darkyen: sorry if i can't help u, i am just curious about this data type
18:05 < vandenoever> owen1: javascript does not support byte arrays
18:05 < darkyen> vandenoever: yeap
18:05 < darkyen> owen1:  i am just calling the object ArrayBuffer
18:06 < darkyen> taking the naming convention from the webAudio API
18:06 < vandenoever> darkyen: what api is that? sounds interesting
18:06 < darkyen> WebAudio ?
18:06  * vandenoever would like to analyze live audio in web
18:06 < vandenoever> darkyen: yeah
18:07 < darkyen> vandenoever: its an api (client side) that allows you to access audio at low level
18:07 < darkyen> an perform interactions with it
18:07 < darkyen> say mixxing in realtime , making an audio in realtime :-)
18:07 < owen1> vandenoever: what does 'byte array' means and how is it related to arraybuffers?
18:07 < vandenoever> http://www.w3.org/TR/webaudio/ i guess
18:07 < darkyen> owen1: ByteArray , do you know what a buffer means ?
18:07 < darkyen> vandenoever:  yeap
18:07 < owen1> darkyen: i think it's stream of bytes. but not sure
18:08 <@maxogden> typed array
18:08 < owen1> everything has bits in the end..
18:08 < vandenoever> lots if pictures in that webaudio spec
18:08 <@maxogden> Buffer in node is just the HTML5 typed array, you can google that
18:08 < vandenoever> owen1: a byte is 8 bits, a string in javascript consists of characters, not bytes
18:08 < darkyen> vandenoever: those are to visualize the models that u can produce say u can take audio from a mic (webRTC) then apply filter on it in realtime
18:08 < vandenoever> a character, e.g. 'a' or '1' can be encoded in more than one byte
18:08 < Berglund> What's the best alternative for doing some background calculations, like tasks? Similar to Resque in the Ruby world would be awesome, but if there's better alternatives I'd be glad to check them out.
18:09 < darkyen> and then change its pitch a lil bit and add a wobble to it , mix with something else and you get a whole new Sound!
18:09 < darkyen> thats what webAudio is capable of.
18:09 < owen1> darkyen: all i know is that buffer is outside of the v8 heap and i need to be carefull when i convert buffer into string since strings are inside the memory of my current process.
18:09 < vandenoever> darkyen: is there e.g. fft for browser via webrtc?
18:10 <@maxogden> mozilla web audio api has fft
18:10 < darkyen> vandenoever:  i think i saw one
18:10 <@maxogden> webrtc doesnt implement readable mic capture streams in any browser yet though
18:10 < owen1> vandenoever: a string in js is characters. but isn't everyting underneath is bits?
18:10 < darkyen> maxogden: but its expected 
18:11 < darkyen> My problem still persists ^_^
18:11 < vandenoever> owen1: yes, but access to the bits and packing the ibits in memory differs a lot per data type
18:11 < darkyen> I dunno how to properly send Numbers from C++ side of my module to JS without them becoming NaN
18:11 < vandenoever> i guess phonegap can support readable mic
18:11 < vandenoever> s/phonegap/cordova :-)
18:12 < darkyen> vandenoever: o no no no no don't go there
18:12 < owen1> vandenoever: ok. so strings are characters. what about buffers?
18:13 < darkyen> This method starts an asynchronous operation to capture audio recordings using the device's default audio recording application. The operation allows the device user to capture multiple recordings in a single session.
18:13 < darkyen> vandenoever:  from the phoneGap api Docs
18:13 < darkyen> it fires the recording app , no fun :-(
18:13 < darkyen> http://docs.phonegap.com/en/1.9.0/cordova_media_capture_capture.md.html#Capture
18:13 < darkyen> if u wanna read more :p
18:14 < TimeTurner> is AMD the defacto standard on the client-side? If so, is there a way to convert commonjs node-style of writing client-side code to AMD?
18:15 < Ezku> TimeTurner: that would be requirejs, I think.
18:15 < vandenoever> darkyen: yeah currently it's not realtime
18:15 < teadict> Offtopic question if I may...
18:15 < darkyen> vandenoever:  i have been diving into phonegap for a while its great but not that awesome *yet*
18:15 < teadict> (Because I don't have any other development channels opened at the moment :P)
18:16 < TimeTurner> is require.js widely used and adopted?
18:16 < vandenoever> darkyen: i agree, i used it a bit but for most things rolling your own is fine too
18:16 < vandenoever> darkyen: e.g. reading video from a local file on device is slooow
18:16 < darkyen> So anybody in here experience with making native modules for nodejs ?
18:16 < teadict> A friend told me there is a chess website, which is open sourced and it's mainly built on Scala.. I asked him if it was http://live.chess.com and he kinda said yes but was not sure... Does anyone know something about this?
18:17 < vandenoever> darkyen: no, what do you want to write?
18:17 < darkyen> http://github.com/darkyen/node-ffmpeg-native
18:17 < darkyen> its crap so far and i am using waf cause i just want to make it initally work :P
18:18 < darkyen> when i run test.js init
18:18 < darkyen> it parses the file for me.
18:18 < darkyen> but sends back the false values :-/
18:19 < darkyen> and about 217 of them are NaN
18:19 < darkyen> so i am wondering what the hell am i doing wrong
18:22 < TimeTurner> darkyen: why not use child_process.exec and create the file with ffmpeg directly?
18:22 < darkyen> TimeTurner: two reasons
18:22 < darkyen> i have to scale this
18:22 < darkyen> to about 100 instances of decoders
18:22 < darkyen> decoding together
18:23 < darkyen> child_process will do the task but it will convert the whole file in 1 go AFAIK
18:23 < darkyen> and i dont want that , this way i can do that in realtime as they play they decode
18:23 < TimeTurner> ah I see
18:23 < darkyen> second reason , allows more flexibility as a programmer :D
18:23 < darkyen> third reason , I wanted to learn ffmpeg better :-)
18:26 < vandenoever> darkyen: http://mbebenita.github.com/Broadway/storyDemo.html ;-)
18:26 < darkyen> cool :D
18:27 < TimeTurner> have you seen transloadit.com?
18:27 < darkyen> TimeTurner: yes
18:27 < TimeTurner> I think Felix may have some input on this
18:28 < darkyen> TimeTurner: felixge ? and where can i find him ?
18:29 < TimeTurner> https://github.com/felixge
18:29 < darkyen> vandenoever: yours ?
18:29 < TimeTurner> he's on the channel during the weekdays as well
18:30 < TimeTurner> he probably has the most experience in this area IMHO
18:30 < vandenoever> darkyen: no
18:30 < TimeTurner> don't know if he's open-sourced his ffmpeg-node solution though
18:30 <@maxogden> he hasnt
18:31 < darkyen> I will just wait here :-) and try to find the solution if i can :D
18:31 < TimeTurner> I'm sure he wouldn't mind giving some general tips though
18:33 < darkyen> I will just wait here :-) and try to find the solution if i can :D
18:33 < darkyen> .. oops
18:44 < Yash> Hi all
18:50 < owen1> v8 compiles my js into machine code. there is no interpretation, right?
18:51 < zeus> If I wanted to turn my node script into a file that I can place in my /usr/bin and call it just by its name, how would I go about doing that?
18:55 < darkyen> Hehe my module is becoming better and better
18:55 < darkyen> lol
18:55 < darkyen> 				bool amInan = (isnan)(samples[i]); 				if(!amInan) 				ArrayBuffer->Set(i,Number::New(samples[i])); 
18:55 < mmalecki> amInan <3
18:55 < darkyen> and i still get NaN in my ArrayBuffer
18:55 < darkyen> in JS .. (crazy)
19:01 < Yash> Phew, managed to get a simple JSON API server running with node.js and express + express-routes.
19:01 < Yash> Fun stuff
19:01 < vandenoever> Yash: congrats!
19:05 < Yash> Hey, thanks, vandenoever!
19:07 < Yash> What are you working on?
19:12 < niloy> Yash, why would you need express for simple JSON API server?
19:18 < Yash> Hey niloy, because I am trying to keep my code as simple as possible without having to write all the boilerplate work.
19:18 < Yash> How would you do it?
19:19 < Cache_Money> why am I getting this exception error?  http://pastie.org/4262029
19:20 < sh1mmer> Yash: You could use connect or director from Flatiron
19:20 < sh1mmer> not saying either of those approaches is better than express
19:21 < lpin> Cache_Money try to change listen port
19:21 < Cache_Money> lpin: that worked, changed to 8080
19:22 < lpin> looks like your 8000 is alredy used by something else
19:22 < Cache_Money> lpin: is there a way to see what port 8000 is bound to?
19:23 < zeus> Cache_Money: Are you on unix?
19:23 < lpin> yeah, but don't know what's the best method
19:23 < Cache_Money> yes
19:23 < zeus> Cache_Money: if so, netstat -an | grep LISTEN
19:23 < lpin> nmap maybe
19:24 < lpin> zeus solution kinda better
19:24 < Cache_Money> zeus:  "tcp        0      0 0.0.0.0:8000            0.0.0.0:*               LISTEN"
19:25 < zeus> Cache_Money: So its a TCP server, if you want the process id?
19:25 < zeus> Cache_Money: Let me look into that real quick
19:26 < lpin> is there a way to force npm use my globally installed node-gyp
19:26 < lpin> ?
19:27 < lpin> looks like it uses its integrated version of node-gyp
19:27 < Yash> sh1mmer: thanks. Director looks good and simple enough.
19:27 < zeus> lpin: Is there something wrong with the integrated version?
19:28 < Yash> Actually, I'm hacking with MongoDB and the FB OpenGraph API as well as the Twitter API
19:28 < lpin> not really but 0.5.2 has some issue with python detection
19:28 < lpin> and doesn't work on my machine
19:28 < zeus> You have python < 2.6?
19:28 < lpin> i mean node-gyp 0.5.2
19:28 < lpin> nope
19:28 < lpin> 2.7
19:29 < zeus> I mean you could go in and actually modify the NPM module and alter its node-gyp path I guess... This is a question for @isaacs
19:30 < zeus> isaacs: ping
19:34 < Cat4D> is there a debian package of node?
19:35 < domo> yeah
19:35 < domo> but its better to compile from source to keep up to date with node
19:35 < domo> debian/ubuntu packages tend to lag behind
19:36 < zeus> lpin: sudo lsof -i :8000
19:36 < Ramone> hey all... anyone know how to solve "Error: npm doesn't work with node v0.8.2"  ?
19:36 < SkareCrow> there's a source for the latest Cat4D
19:36 < SkareCrow> i use nave personally
19:36 < lpin> ? probably for Cache_Money 
19:36 < Cat4D> fetched from site
19:37 < Ramone> I tried to reinstall npm but it gives me the same error
19:37 < zeus> Ramone: Where did you install npm from?
19:37 < zeus> Cache_Money: sudo lsof -i :8000
19:37 < Ramone> zeus: "curl http://npmjs.org/install.sh | sh"
19:37 < SkareCrow> nave is pretty awesome, makes installing, checking versions, switching between versions, etc.. super easy / fast
19:37 < Cat4D> aargh the VPS doesnt have any compiler on it
19:38 < zeus> Ramone: can you tell me what 'npm -v' gives you?
19:38 < Ramone> zeus: a big old TypeError
19:39 < zeus> Ramone: What bout just 'npm'
19:39 < Ramone> "Error: npm doesn't work with node v0.8.2"
19:39 < Cat4D> this type of thing makes nodejs constantly look really bad
19:40 < Cache_Money> zeus: How do I disable that connection?  I don't know why it's running...
19:40 < zeus> Cache_Money: Can you tell me the output of that command first? Need to make sure your not killing something important
19:40 < SkareCrow> Cat4D: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
19:40 < SkareCrow> just use that PPA
19:40 < Cat4D> http://t.co/f4MotIsy
19:41 < zeus> Cat4D: Its not Node's problem that you dont have a compiler on a machine you want to dev on?
19:41 < Cache_Money> zeus: "node    2381  mas    5u  IPv4  16842      0t0  TCP *:8000 (LISTEN)
19:41 < Cache_Money> "
19:42 < zeus> Cache_Money: You've probably started your old app in a different terminal window and forgot about it or something. To kill that process, run kill 2381
19:42 < Cache_Money> zeus: thanks!
19:43 < zeus> Cache_Money: nps
19:43 < voodootikigod> anyone know why node.h wouldn't be found during node-gyp npm install (native module) on windows?
19:44 < Cache_Money> zeus: you were right.  I just closed all Terminals and port 8000 was shut down
19:44 < zeus> Cache_Money: :) Suggestion: use iTerm with tabs, helped me get organized
19:45 < Cat4D> configure and make not exist, instructions bad
19:46 < SkareCrow> install make?
19:46 < Cat4D> also fix-missing
19:47 < SkareCrow> did you try using the PPA from the docs?
19:47 < zeus> Cat4D: If you don't have make installed, my suggestion is to get a VPS which installs the most common dev tools for you. Otherwise, you will be constantly running into these kinds of issues. 
19:48 < Cat4D> its the responsibility of the authority entity to ensure its valid
19:49  * Cat4D notes this pattern has been seen before
19:49 < Cat4D> a package would have been one line and operational
19:50 < lpin> zeus, don't know if it's the correct method, but i changed this #node "`dirname "$0"`/../../node_modules/node-gyp/bin/node-gyp.js" "$@" 
19:50 < lpin> in npm/bin/node-gyp-bin/node-gyp
19:50 < lpin> to point on my installed node-gyp
19:50 < lpin> and worked
19:51 < zeus> lpin: That seems dirty, I highly suggest you tweet @isaacs to figure out if he loads node-gyp based on a config var, cause if he does, then changing that is extremely simple and also much cleaner
19:51 < Yash> bye for now all. Happy coding.
19:51 < lpin> it is dirty indeed
19:52 < zeus> lpin: Also, if default npm doesnt work for you, you need to file a bug report
19:53 < lpin> true that, but it will be update along with node-gyp and i'm using an old machine
19:53 < lpin> btw i'll open an issue
19:54 < zeus> Cat4D: Its the responsibility of the programmer to ensure his VPS is set up for development. Also, there is no technically official node package yet, so if that package never checked for a dep, not really node's problem and you should talk to the maintainer of that package
19:56 < Cat4D> within node, npm should work if maintained, node should be a single package, it is irrational otherwise
20:04 < mxweas> I've just created a fresh express app. And when I call res.sendFile(blah) in one of my routes I get: TypeError: Object #<ServerResponse> has no method 'sendFile'
20:04 < mxweas> any ideas?
20:05 < mxweas> any reason express's response extensions wouldn't be getting added?
20:12 < mxweas> must've had an outdated version of node
20:12 < mxweas> all fixed
20:31 < Cache_Money> I have a simple chat server running on my Linux VM, on localhost:8080.  I want to connect to it using Telnet from my Windows Host machine, any suggestions?
20:31 < Cache_Money> http://pastie.org/4262327
20:31 < Cache_Money> I tried LocalTunnel but couldn't get it to work
20:32 < ccowan> are you running VirtualBox?
20:32 < ccowan> If so you need to forward localhost:8080 to the VM's port
20:33 < Cache_Money> ccowan: yes it's VirtualBox
20:34 < Cache_Money> ccowan: how do I forward it?
20:34 < ccowan> Do you see the little network icon on the VM window in the lower right hand corner?
20:34 < Cache_Money> yeah
20:35 < ccowan> right click on that and select "Network adapters…"
20:35 < Cache_Money> ok
20:35 < ccowan> at the bottom of that screen you should see Port Forwarding
20:36 < Cache_Money> yup
20:36 < ccowan> For name put whatever you want
20:36 < ccowan> protocal should be TCP
20:36 < ccowan> Host IP should be 127.0.0.1
20:37 < ccowan> Host Port should be 8080 (or what every you want http://lcoalhost:xxxx to be"
20:37 < ccowan> for the guest ip you need to check the vm to see what the external ip is
20:37 < ccowan> should be something like 10.0.2.15
20:38 < Cache_Money> ccowan: where would I find that info
20:38 < Cache_Money> ?
20:38 < ccowan> then guest port should be 8080 (or whatever port Apache is running)
20:38 < ccowan> the VM ip?
20:38 < Cache_Money> ya\
20:38 < ccowan> type ifconfig in the linux terminal
20:39 < Cache_Money> " inet addr:10.0.2.15  Bcast:10.0.2.255  Mask:255.255.255.0 "
20:39 < ccowan> Look for "eth0" and "inet" the IP address should be listed right there
20:40 < Cache_Money> I'm using 10.0.2.15
20:40 < ccowan> yup
20:41 < ccowan> I've never seen it anything other then 10.0.2.15
20:41 < ccowan> so once you hit OK you should be able to access it
20:41 < Cache_Money> and then what do I need to do on the Windows side? which ip address do I point Telnet to?
20:41 < ccowan> what did you set the host port too?
20:41 < ccowan> to?
20:42 < ccowan> telnet localhost 8080 (if you set the host port to 8080)
20:42 < Cache_Money> 8080?
20:42 < Cache_Money> *no question mark
20:42 < ccowan> ok
20:43 < ccowan> is it working?
20:44 < Cache_Money> not really
20:44 < ccowan> You might have to restart VirtualBox
20:44 < Cache_Money> what if I wanted to share this server on my VM to another computer not on my network?
20:44 < ccowan> I'm on a Mac so it usually just starts working right away
20:45 < Cache_Money> it's a really basic chat server, that works over sockets http://pastie.org/4262327
20:45 < ccowan> you can also change the networking mode so it acts like another computer on the network
20:45 < ccowan> can you telnet from the linux box to it's self?
20:46 < ccowan> so on the linux command line type
20:46 < ccowan> telnet localhost 8080
20:46 < ccowan> if that's not working then it won't work from windows
20:47 < Cache_Money> ccowan: it works on my linux VM
20:47 < Cache_Money> not from my Windows Host
20:47 < ccowan> I wonder if there is firewall setting messing things up
20:47 < Cache_Money> what i'd like to experiment with is have my buddy in another city Telnet into the ip address, and then chat with him
20:48 < ccowan> oh
20:48 < Cache_Money> that's why i thought using LocalTunnel might help
20:49 < ccowan> Go to the same network dialog and change it to bridge instead of nat for the networking
20:49 < ccowan> that will make the linux box just another box on your network
20:50 < ccowan> (you will need to restart the networking to get a new ip address)
20:50 < ccowan> then you will need to forward your ports from your router to your VM 
20:55 < Cache_Money> can't I use something like this http://progrium.com/localtunnel/ ?  I've used it to view my Rails apps running on Localhost on VM from other devices
21:00 < Cache_Money> Are there any good resources for getting started with Node.js apps?
21:02 < Aria> Localtunnel should work too.
21:03 < Aria> Though what they proxy may not be low level enough to do what you need -- do they work with websockets? What are you playing with in node?
21:04 < AviMarcus> what's the easist way to extract angular.callbacks._29 from /greet.php?callback=angular.callbacks._29&name= ?
21:04 < AviMarcus> querystring seems to use the /greet.php? as part of it
21:05 < bakadesu> AviMarcus: have you looked at url.parse() ?
21:05 < Cache_Money> Aria: I've built a very simple chat server, using sockets to communicate http://pastie.org/4262327
21:06 < AviMarcus> bakadesu, just saw that -- thanks!
21:07 < Cache_Money> I'm running Node v0.4.9  How do I upgrade to the newest version of Node?
21:11 < Cache_Money> on Linux, shouldn't "$ npm install n" work?
21:12 < Aria> Depends on the linux and how you installed the last version.
21:12 < Aria> n is one tool to install new versions, yes.
21:12 < Aria> localtunnel won't work for you for plain sockets, since your protocol isn't HTTP, and it's not a tunnel, it's a proxy.
21:13 < lyaunzbe> Hey guys, quick theoretical question: Im tryign to impose api request limits per client and cache the the api responses between timeouts. Should I be using some kind of caching solution (memcache or redis)? or do I just store the cached data in a db and update it appropriately?
21:14 < Aria> Depends on your use case -- are you load balancing between node instances? (if no: you might cache in-process!)
21:14 < Aria> How fast is your DB? 
21:14 < Aria> How much can you predict and precalculate?
21:15 < Cache_Money> Aria:  I don't remember how I installed it, it was about 4-5 months ago.  I tried "$ npm install n" but came back with "npm WARN bins installing to /home/mas/bin, outside PATH"
21:16 < Aria> Okay ... so that's where it installed it.
21:16 < Aria> So run /home/mas/bin/n
21:16 < Aria> Or add it to your path.
21:17 < lyaunzbe> aria, I sort of a nodejs noob, so I have no understanding of things like load balancing. My use case is simple. At the moment, when a user goes to my app, an api request is made everytime they load the page. I want to limit the amount of api requests that can be made per hour and show a cached version to the user.
21:17 < lyaunzbe> s/I/I'm
21:18 < Aria> lyaunzbe: node itself can store the response, if it all fits in RAM, to be its own cache. That's one potential option.
21:18 < lyaunzbe> Aria: how, by sessions?
21:19 < Aria> However you identify clients.
21:19 < Aria> Farming out to memcache means an asynchronous call; that's an order of magnitude more expensive.
21:19 < Deathspike> Limiting requests is generally not a good idea, and if your case is pretty straight-forward (What do you want to cache?) you could just serve information from a NoSQL-db. They are blazingly fast for simple queries.
21:19 < Aria> Limiting's not a terrible idea at all, if the data changes slowly.
21:20 < lyaunzbe> I have to limit or I will get an error from the api I am using.
21:21 < Deathspike> Depending on the type of data your consumed api serves, you could just do timed-updates and store that in db, so user request is not necessary at all.
21:23 < lyaunzbe> Deathspike: Yah okay, that seems like a simple solution. Also, the api request limit is per client, so could I do something like store the timed-update timeout # in the session?
21:31 < ohcibi> hi i tried to install libxmljs with npm install libxmljs but i get the error "node.h: no such file or directory" the file exists in /usr/include/node/node.h so whats wrong?
21:49 < ashnur> morning
21:51 < ashnur> i am having a constant struggle with infinite loops aka maximum call stack size exceeded, which is easily debuggable when I was using something like chrome's debugger, but I recently switched to using mocha, and I am a bit lost on how should I debug these kind of bugs in it.
21:53 < ashnur> any recommendations on this?
21:53 < paulwe> node-inspector?
21:54 < ashnur> I've never used it. is it something I can use besides mocha, or it's something entirely separated?
21:55 < owen1> ashnur: seperate
21:55 < owen1> node-inspector is for web-related node. node debug is for non-weby stuff
21:55 < paulwe> it hooks into the v8 debugger and passes the output to a client interface based on the chrome dev tools inspector
21:55 < owen1> (someone correct me if i am wrong)
21:56 < ashnur> ok, I will read about both
21:57 < ashnur> hmm. node inspector needs a browser, it's cute, but if I wanted I could just wrote a bit different code and have this by default, that's where I started.
21:58 < ashnur> but for offline/off-power  scripting I am not even using X, so I can save power
22:01 < alex4nder> ashnur: you in a cabin?
22:03 < ashnur> is that important? 
22:03 < SkareCrow> lol
22:07 < alex4nder> ashnur: you're the one concerned with power
22:07 < alex4nder> I'm just curious.
22:07 < ashnur> alex4nder: i just do not really understand what are you curious about :)
22:07 < alex4nder> ashnur: why does that matter?
22:08 < ashnur> exactly.
22:08 < alex4nder> I'm might be just really interested in cabins.
22:08 < alex4nder> shit
22:08 < alex4nder> I lost interest.
22:08 < alex4nder> forget I asked.
22:08 < ashnur> finaly :)
22:11 < Andymortin> Hi
22:12 < Andymortin> Hi sdwrage
22:12 < sdwrage> hey
22:13 < Andymortin> I m new to node
22:13 < wookiehangover> http://www.youtube.com/watch?v=T9uuPza41Uw
22:14 < ashnur> lol
22:15 < Andymortin> But done some hello world program
22:16 < Andymortin> Want to know more
22:16 < Andymortin> R der any good resources ty
22:17 < alex4nder> the source
22:17 < alex4nder> and documentation
22:17 < alex4nder> and existing projects
22:17 < ashnur> der R
22:17 < ashnur> =)
22:18 < sdwrage> Andymortin, usually the chain of resources are documentation, google, books, or even forums for questions that may take a while for people to formulate. 
22:19 < sdwrage> I personally still don't know much about node :) I idle in here because I love to hear people ramble on about it lol
22:19 < sdwrage> I've only done a basic chat server and a shaky one at best 
22:19 < Andymortin> Lol!
22:19 < Andymortin> that's cool!
22:20 < Andymortin> I'm planning to make a blog
22:20 < Andymortin> Using node
22:20 < sdwrage> Andymortin, awesome goal :) 
22:21 < Andymortin> Thanks!
22:21 < sdwrage> Andymortin: http://howtonode.org/
22:21 < sdwrage> basically google : node tutorials
22:21 < sdwrage> or learn node
22:22 < alex4nder> Andymortin: why do you want to learn node?
22:22 < sdwrage> Andymortin: you at least know javascript right?
22:23 < sdwrage> if you don't know javascript, there is a great book called "Javascript: the good parts"
22:23 < Andymortin> I know Javascript,jquery nd php
22:23 < sdwrage> ah okay :) great
22:23 < sdwrage> there are a number of screencasts as well
22:23 < sdwrage> alex4nder: I believe he does (he? right?)
22:23 < Andymortin> Oh really!
22:24 < sdwrage> http://nodecasts.org/ there is one that has a couple episodes, http://nodetuts.com/ is another.
22:25 < sdwrage> youtube is another source of videos on node
22:25 < Andymortin> Wow! Thanks a lot guys!
22:26 < sdwrage> Andymortin: anytime :) but remember to try and figure stuff out on your own first
22:26 < sdwrage> you will learn a lot faster that way
22:27 < sdwrage> you know… teach and man to fish and all that good stuff
22:28 < Andymortin>  /msg sdwrage thanks
22:28 < sdwrage> ;)
22:28 < Andymortin> Lol! my app has some bug
22:28 < Andymortin> Thanks
22:31 < Andymortin> BTW alex4nder: I work in a company where we are planning to make php application real time.
22:33 < alex4nder> oh yah?
22:33 < Andymortin> This the reason I need to learn node
22:33 < alex4nder> what does 'real time' mean?
22:34 < SkareCrow> time that is not fake
22:34 < alex4nder> haha
22:34 < alex4nder> I don't know what it means in a 'web' context.
22:35 <@Nexxy> it's short for near-realtime communication
22:35 < alex4nder> is it?
22:35 <@Nexxy> yes, because I said so.
22:35 < unomi> as it happens
22:35 < alex4nder> I don't believe.
22:35 <@Nexxy> HABEEB IT
22:35 < unomi> or at least, as the backend is aware of it
22:35 < AviMarcus> I thought real time was for VoIP and gaming and then like
22:36 < AviMarcus> where if you're 50ms too late, you might as well not bother.
22:36 < alex4nder> yup
22:36 < alex4nder> that's my understand
22:36 < alex4nder> ing
22:36 < unomi> AviMarcus: well, context informs semantics.
22:36 < alex4nder> haha
22:36 < AviMarcus> of course, you could also mean "my php website is slow and we want it to be fast, so we figured we'd rewrite it in the hottest new buzzword because that must be faster"
22:36 < unomi> with systems, it doesn't imply being fast, just being consistent.
22:37 < unomi> so we have a trifecta of incongruencies.
22:37 < Andymortin> Real time is nthng but when something gets changed in the front end of one user it will update in the front end of another user
22:37 <@Nexxy> I feel like I just had this conversation with s5fs 
22:37 < AviMarcus> paypal's website is sooo slow. If they'd just make their second-tier menu appear without having to be clicked on I'd be much happier
22:37 < unomi> Andymortin: so, whats the problem?
22:38 < alex4nder> AviMarcus: they need 'real time'
22:38 < unomi> Andymortin: also, you don't really *need* node for that
22:38 < AviMarcus> Andymortin, that's a cool thing to have, but I don't think that's called "realtime"
22:38 <@Nexxy> unomi, incorrect; everyone *needs* node
22:38 < SkareCrow> function isRealTime(date) { return date.getTime() < (new Date()).getTime(); }
22:38 < AviMarcus> Nexxy, :)
22:38 < alex4nder> haha
22:38 < unomi> Nexxy wins.
22:38 <@Nexxy> like always
22:39 <@Nexxy> (sometimes)
22:39 < alex4nder> node is what happens when web 2.0 nerds discover 1990s UNIX technology.
22:39  * AviMarcus finally got angular.js shoehorned into his old php site, so now I can make API calls to node and then update the gui
22:39 < unomi> just saying that mongrel2 or even nginx pub-sub could get you there pretty easily
22:39 < AviMarcus> once I actually understand it all then I can rewrite the whole darn thing from scratch
22:39 < unomi> how real does the realtime need to be etc.
22:39 <@Nexxy> near.
22:39 <@Nexxy> real.
22:39 <@Nexxy> time.
22:40 < unomi> then still though, mongrel2 can deal with websockets. .. I have no idea why I am apparently arguing against just using node.js
22:40 < unomi> carry on, work beckons.
22:42 < Deathspike> PHP can handle real-time comm just like every other platform out there, so if thats the ONLY reason you rewrite, it's not a very good reason at all.
22:43 < infrared> hello, is there a javascript equivilent to perl's @_ ?
22:43 < infrared> equivalent
22:44 < SkareCrow> just arguments?
22:44 < infrared> well, all of them
22:44 < SkareCrow> function test() { console.log(arguments); } test(1, 2, 3); -> outputs: [1, 2, 3]
22:45 < infrared> ah
22:45 < SkareCrow> be aware that arguments isn't an array though
22:45 < infrared> a string?
22:46 < SkareCrow> it's an object
22:46 < infrared> ok
22:46 < SkareCrow> function test() { console.log(Object.prototype.toString.call(arguments)); } test(1, 2, 3); -> outputs: [object Arguments]
22:47 < Andymortin> Deathspike: how to do that.
22:48 < Andymortin> In php
22:48 < infrared> SkareCrow: thanks
22:48 < SkareCrow> np infrared 
22:57 < SkareCrow> infrared, I should have probably mentioned why that might be an issue
22:57 < SkareCrow> https://developer.mozilla.org/en/JavaScript/Reference/Functions_and_function_scope/arguments
22:58 < SkareCrow> "The arguments object is not an Array. It is similar to an Array, but does not have any Array properties except length. For example, it does not have the pop method. "
23:00 <@Nexxy> Array.prototype.slice.call(arguments)
23:01 < mmalecki> Nexxy: that's slow!
23:01 <@Nexxy> ONOEZ
23:01 <@Nexxy> CUZ WE ALL NEED TO WRITE SUCH TIGHT CODE
23:01 < mmalecki> YES
23:01 < Deathspike> Andymortin: PHP has sockets and so forth, and also abstraction for websockets/long polling and so forth. Lots of libs out there implementing these. You just might need to change some php settings, but thats no biggie -- deploying node won't be done on shared hosting either.
23:01 < mmalecki> http://blog.izs.me/post/7746314700/benchmark-array-ification-of-arguments
23:02 <@Nexxy> mmalecki, I thought we were past "that's slow"!
23:02 <@Nexxy> I thought we were profiling our apps now ;o
23:02 <@Nexxy> and flame graphing
23:03 < mmalecki> Nexxy: actually, in most real life usages it's actually faster :)
23:03 < mmalecki> but yeah, flame graphs <3
23:04 < mmalecki> and you *should* profile, don't get me wrong
23:04 <@Nexxy> eventually
23:04 <@Nexxy> when you start having performance issues
23:05 < Andymortin> Deathspike: Thanks.
23:05 < Andymortin> Unomi: Thanks
23:06 < Andymortin> Bye all
23:44 < zeus> Anyone here know how to tell npm to place my modules binary file into /usr/bin or at least somewhere thats on the users path?
23:44 < chilts> zeus: npm -g <- that what you want?
23:46 < zeus> chilts: I'm not trying to install the package, I created the package, and now whenever a user called "npm install -g 'my module'" I want it to place my executable on that users path
23:48 < chilts> zeus: try this as an example : https://github.com/jshint/node-jshint/blob/master/package.json#L15
23:48 < chilts> you need to tell package.json where to find them
23:48 < zeus> chilts: Thanks, I think I got it by  looking at flatirons package.json
23:49 < chilts> no problems
23:49 < zeus> chilts: I think all I need to do is define a "bin" property in my package.json
23:51 < Cat4D> what is best IDE for haxe , and is haxe worth fighting with?
23:54 < SkareCrow> notepad.exe
--- Log closed Mon Jul 16 00:00:23 2012
