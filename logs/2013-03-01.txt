--- Log opened Fri Mar 01 00:00:06 2013
--- Day changed Fri Mar 01 2013
00:00 <@isaacs> markdaws: but MITM would be super hard.
00:00 < markdaws> an npm publishers computer becoming compromised doesn't seem too difficult especially if you multiply your dependencies
00:00 < bnoordhuis> little does isaacs know the reason his macbook is so hot is because i'm running folding@home on it
00:00 <@isaacs> markdaws: and, mostly to avoid file corruption in transit, but also for security, the checksums will have to match up what's on the server.  so if you're mitm'ing, you have to get at the data, as well.
00:00 <@Nexxy> lol
00:00 <@isaacs> bnoordhuis: that's the thing that makes your socks and shirts all nicely put away?
00:01 < ChrisPartridge> haha
00:01 < markdaws> @isaacs - yup, well "npm shrinkwrap" could just download the tars for each package from the server and hash.  So what about the checking in node_modules approach, how to easily get just the source and not the built files?
00:02 <@isaacs> markdaws: so, yes, here we are in the real world.  we can either audit every push, which is prohibitively expensive, or we can just live with it, and mitigate the worst ways to wreck things.
00:02 <@isaacs> markdaws: shrinkwrap does not (at the moment) guarantee byte-level consistency
00:02 <@isaacs> markdaws: it's planned, but not trivial, for reasons of historical legacy implementation details.
00:02 <@isaacs> markdaws: this year, probably.
00:03 <@isaacs> markdaws: if you check your modules into git, just .gitignore the built bits.
00:03 <@isaacs> markdaws: and have a thing to rebuild them
00:03 <@isaacs> markdaws: in that case, yeah, you've got cryptographic hashes of every byte
00:03 < markdaws> @isaacs - how to easily find out what the "built bits" are vs package source?
00:04 < markdaws> @isaacs like a "npm install foo -nobuild"
00:06 < markdaws> @isaacs since doing a .gitignore for top level package is doable but then also to figure out all the .gitignore for its dependants and this seems error prone
00:08 < Nikentic> I should have gone with something else than Angular
00:09 < markdaws> @isaacs - my high level question is "how do you get a known good set of node_modules on your production boxes", it seems to me "npm shrinkwrap" isn't safe and you shouldn't use it in prod and checking in node_modules is the way to go but actually figuring out what to check in is not easy i.e. http://blog.nodejs.org/2012/02/27/managing-node-js-dependencies-with-shrinkwrap/#note2-top  
00:14 < context> is it just me or does express guide show the usage of methodOverride but express-3.0 does not have it anymore
00:19 < ChrisPartridge> context: maybe because it's from connect
00:20 < ChrisPartridge> markdaws: what's wrong with npm install? just lock down your versions in package.json - and if you're really concerned, do an audit of the dependencies before deployment
00:24 < draginx> https://gist.github.com/durango/f9828f1c71f3bd40aa81 why would var Freight = require('./freight'); var freight = new Freight('stamps', {..}); freight.validateAddress() be a function?
00:26 < ChrisPartridge> draginx: validAddress is returning the Freight instance
00:26 < ChrisPartridge> *validateAddress
00:26 < draginx> so its not returning to "freight" variable?
00:27 < xaka> in case there is no error, what do you prefer to use as the 1st argument of callback? null, undefined or false?
00:27 < draginx> xaka, i *think* the standard is null
00:27 < draginx> but dont quote me on that
00:27 < ChrisPartridge> yeah i use null
00:27 < draginx> ChrisPartridge: how would I make my code work then?
00:27 < draginx> Just dont use the prototype?
00:28 < ChrisPartridge> draginx: what exactly do you want to return?
00:28 < xaka> kk, +2 vs 0, makes sense :)
00:28 < draginx> well i want to do var Freight = require('./freight'); var freight = new Freight('stamps', {..}); freight.validateAddress();
00:28 < draginx> and just have validateAddress console.log('hello world'); is fine
00:28 < draginx> I just need this first step to work really
00:29 < ChrisPartridge> well returning this is going to return the instance of freight, e.g. useful for chaining
00:30 < draginx> basically im just trying to get freight to have the function validateAddress thats all :/
00:30 < asdf12> hi guys
00:30 < ChrisPartridge> draginx: yeah, well that *should* work
00:30 < draginx> yeah it doesnt :| rawr
00:33 < othiym23> man, I need to write a test case that uses a specific version of Node and I'm kinda at a loss as to the easiest way to make it happen
00:34 < ChrisPartridge> draginx: working fine here (obv with the adapter code removed)
00:34 < draginx> hmm
00:34 < draginx> very strange
00:34 < draginx> ok thanks :)
00:34 < ChrisPartridge> sure you are doing "new" in your test code?
00:37 < draginx> ChrisPartridge: yessir
00:38 < sindresorhus> Trying to listen to `data` from a spawned python child process, but data even is never called on stdout/stderr. The weird thing is that I can see the output if I use `stdio: 'inherit'`. https://gist.github.com/sindresorhus/5061438  Any thoughts what can be causing this?
00:39 < draginx> ChrisPartridge: https://gist.github.com/durango/f9828f1c71f3bd40aa81
00:41 < ChrisPartridge> draginx: remove all the code from the constructor, and replace the code in the validateAddress method to just console log something, see if that works (it did for me)
00:41 < draginx> yeah that worked fine
00:41 < draginx> ok weird
00:41 < draginx> ill need to figure out the adapter :)
00:41 < ChrisPartridge> probably something in the adapter
00:41 < ChrisPartridge> yeah
00:42 < Nikentic> I really can't figure out how to handle PhantomJS or node-webkit to make angular SEO friendly
00:43 < swaj> doesn't look like you're calling EventEmitter's constructor either.  may not be an issue, but it's generally good practice to call the constructors of classes you inherit from
00:43 < swaj> or I guess functions you "inherit" from
00:45 < draginx> swaj: thats just in there for the future tbh
00:45 < draginx> swaj: actually dont I have util.inherits() ?
00:45 < swaj> I see one :P
00:46 < swaj> line 21
00:46 < swaj> draginx: util.inherits doesn't actually call the constructor last I checked
00:46 < draginx> ahh
00:47 < swaj> draginx: generally, you want to use util.inherits, and then call your super's constructor:  http://nodejs.org/docs/latest/api/util.html#util_util_inherits_constructor_superconstructor
00:48 < draginx> ah very interesting
00:48 < draginx> thanks :D
00:49 < swaj> np
00:49 < tjfontaine> don't encourage swaj
00:50 < swaj> tjfontaine: troll!
00:51 < tjfontaine> perhaps
00:52 < draginx> dont encrouage what?
00:52 < swaj> draginx: for what it's worth, it looks like the EventEmitter constructor does have a bit of code worth calling: https://github.com/joyent/node/blob/master/lib/events.js#L25
00:53 < draginx> right hmm
00:55 < bradleymeck> please call super's constructor in particular eventemitter, it will hook into domains
00:55 < bradleymeck> if you dont, domains will hate you forever
00:55 < draginx> lol
00:56 < zenodub_> many people do angular style directives in node?
01:02 < asdf12> in what way?
01:07 < othiym23> is there nothing promises can't fix?
01:07 < othiym23> I don't think there is!
01:08 < MI6> joyent/libuv: Ben Noordhuis master * 2a8d2a5 : darwin: fix spurious uv_write2() segfault  We abuse uv_write2() to send o - http://git.io/NXSvEQ
01:08 < MI6> joyent/node: Ben Noordhuis master * bb43153 : deps: upgrade libuv to 2a8d2a5 - http://git.io/IE7__A
01:14 < MI6> joyent/node: Ben Noordhuis master * c116120 : net: omit superfluous 'connect' event  Don't emit a 'connect' event on so - http://git.io/erW9HA
01:19 < darthdeus> hey guys, anyone knows how should i format date for a postgres timestamp column?
01:21 < othiym23> darthdeus: ISO 8601 format: http://www.postgresql.org/docs/9.1/static/datatype-datetime.html
01:22 < t0th_-> hi
01:22 < t0th_-> i have a node sscript
01:22 < t0th_-> bet when try access i have a errors
01:22 < t0th_-> Error 324 (net::ERR_EMPTY_RESPONSE): The server closed the connection without sending any data.
01:23 < darthdeus> othiym23: thanks
01:27 < ChrisPartridge> t0th_-: might need some context, code?
01:28 < darrenlooby> Struggling with prototypes guys, anyone an expert?
01:28 < darrenlooby> Or, rather - not a n00b like me
01:28 < phegaro> hi everyone, i have a quick question about domains :). We were using domains with express and seeing the request into the domain and the response into the domain and then calling domain.run(next) in an app.use case
01:28 < phegaro> it seems the domains dont stay connected to the request through all the callbacks 
01:28 < phegaro> should they?
01:28 < ChrisPartridge> darrenlooby: whats the issue?
01:29 < darrenlooby> I'm creating a module, which opens with var Manager = function () {}... then, I'm trying Manager.prototype.addSocket = function(){}
01:30 < darrenlooby> Later, when I call Manager.addSocket() it says no method
01:30 < darrenlooby> Have a I completely missed the point of what that should do?
01:30 < sorensen> either you want an instance of that manager, or you dont want to use prototype
01:30 < sorensen> so, var manager = new Manager()
01:31 < t0th_-> http://pastebin.com/dYmjpYHu
01:31 < sorensen> or if you dont want instances of that, you can change your definition of manager to use static properties instead. `var Manager = {}` Manager.addSocket = function() {}`
01:32 < darrenlooby> Can I do module.exports = new Manager() ... sorensen 
01:32 < othiym23> phegaro: Express has its own error-handling system that traps the errors in the middleware chain before they propagate out to the domain
01:33 < darrenlooby> Because I'm using an index.js module to pull a couple in
01:33 < othiym23> phegaro: write an error-handling middleware that grabs the domain off process.domain and emits any trapped errors on there
01:33 < othiym23> figuring that out was not at all easy or fun, btw
01:34 < t0th_-> ChrisPaterson, http://pastebin.com/dYmjpYHu
01:35 < ChrisPartridge> t0th_-: looks like your .query() call is erroring (hence the (net::ERR_EMPTY_RESPONSE)) - so i would assume you need to look at why its failing, or handle the err in the callback
01:37 < t0th_-> what callback?
01:39 < ChrisPartridge> t0th_-: not familiar with the limestone package, but this is where its handled: https://github.com/kurokikaze/limestone/blob/master/limestone.js#L130
01:39 < t0th_-> oks
01:39 < t0th_-> thanks man
01:39 < t0th_-> locally works fine
01:39 < t0th_-> i am trying use in my vps
01:41 < ChrisPartridge> darrenlooby: i'd suggest using a "singleton" style pattern if you only want once instance available
01:42 < MI6> joyent/node: isaacs master * 4926ffd : doc: Provide 2 examples of SimpleProtocol parser  The first example uses  (+3 more commits) - http://git.io/d-I1Lw
01:42 < ChrisPartridge> darrenlooby: see here for a simple example https://gist.github.com/cjpartridgeb/3606748
01:42 < darrenlooby> ChrisPartridge, cheers... I'll give that ago
01:43 < darrenlooby> Or rather, a go
01:44 < darrenlooby> ChrisPartridge, I'll be pulling in a couple of different modules - that all need to come into one. Singleton still the best way?
01:45 < ChrisPartridge> darrenlooby: if i understand correctly, it should be fine
01:48 < MI6> joyent/node: Timothy J Fontaine master * f0f87d8 : build: windows should append date if nightly - http://git.io/314_LA
01:59 < t0th_-> :(
01:59 < Narangarig> Node
02:01 < t0th_-> nothing
02:01 < t0th_-> the problem is with limestone
02:01 < t0th_-> maybe
02:19 < euoia> I have written a chat app that basically comprises 1 server-side js file and 1 client js file - how would I treat this as a module in another project given that it includes a client js file? How about a symlink from my public dir to the node_modules/mylib/client.js?
02:20 < ChrisPartridge> euoia: two packages, server / client ?
02:21 < euoia> ChrisPartridge: hmm not sure how that helps. As I see it, either way I would need to symlink from my public directory to ../node_modules/mylib/client.js
02:22 < euoia> Is there a better way of managing this case?
02:22 < ChrisPartridge> you're entering the realm of client side dependency management :P
02:23 < euoia> ChrisPartridge: yes, I suppose that's accurate. Is there anything in the npm universe that deals with this problem? If not, is there anything anywhere that deals with this?
02:24 < ChrisPartridge> There a few options
02:24 < ChrisPartridge> browserify from substack, bower from the twitter guys
02:24 < kbhit> what are peoples favorite server-side/client-side javascript editors that offer content assist for things like node, jquery, and other custom javascript packages?  i've been using eclipse and vi but am a little discouraged at the content-assist support overall and looking for recommendations
02:25 < ChrisPartridge> kbhit: i love the simplicity/power of sublime text
02:25 < phegaro> othiym23: its not just the error, i want a request based context. So no matter which function is currently in context (before or after callbacks) the same request context  exits
02:26 < phegaro> othiym23: this helps us have a sort of "request session" that we can stick items into and not have to pass the information from function to function down the call chain
02:26 < phegaro> othiym23: any ideas?
02:26 < kbhit> ChrisPartridge: thanks I'll give that a try 
02:27 < euoia> kbhit: kbhit did you try https://github.com/myhere/vim-nodejs-complete for vim?
02:27 < euoia> ChrisPartridge: did you ever look at hem?
02:29 < kbhit> euoia: not yet.. i would love a VI plugin that would provide content-assist for all included js packages, not just node but i'll try that
02:29 < ChrisPartridge> euoia: hem?
02:30 < euoia> kbhit: it is supposed to provide content assist for anything in node_modules
02:30 < euoia> ChrisPartridge: https://github.com/spine/hem
02:30 < euoia> ChrisPartridge: mentioned here http://stackoverflow.com/questions/12893046/how-to-manage-client-side-javascript-dependencies
02:33 < ChrisPartridge> euoia: I'll take a look at it, ttyt I'm just using requirejs and using grunt to do postprocessing for js/css concat/minification through r.js , optipng for images
02:39 < inspiron> there is a,   require('./routes') in my root dir. The closes thing I see to 'routes' is a 'routes' folder that has an index.js. Is this what it is requiring? i'm a newb
02:40 < ChrisPartridge> inspiron: yup
02:40 < bradleymeck> inspiron: http://nodejs.org/api/modules.html#modules_all_together if you really want to know it all
02:40 < willwhite> Anyone have advice for debugging a Unhandled 'Socket hangup' error event? I'm not sure where it's coming from and the stack trace doesn't show enough to give me any clues. I must be missing an error handler somewhere.
02:41 < ChrisPartridge> willwhite: bind on('error', fn) to the socket
02:41 < willwhite> ChrisPartridge: right I'm not sure which socket :)
02:41 < willwhite> it's a pretty big project
02:41 < willwhite> lots of different types of requests being to different services
02:42 < ChrisPartridge> surely the stack gives you soem sort of indication?
02:42 <@mbalho> in sufficiently complex apps the stack wont go deep enough
02:43 < willwhite> ChrisPartridge: unfortunately no https://gist.github.com/willwhite/5051c74f818fc30f1af2
02:43 < inspiron> so theoretically if i rename routes to routesa and change the require it should work
02:44 < inspiron> but it doesn't :\
02:44 < fusiongrokker> omg unql is amazing.
02:44 < fusiongrokker> https://github.com/sgentle/unql-node
02:45 < fusiongrokker> I need to port this so that it can work in a web app without dumping out to the shell
02:45 < bradleymeck> willwhite: put domains around all your stuff, and use process.domain to figure out wtf is the logical domain thats going on
02:45 < ChrisPartridge> willwhite: well, you know its a http connection hanging up ;)
02:45 < willwhite> bradleymeck: oh interesting. had not seen domains before.
02:45 < willwhite> ChrisPartridge: certain of that! :)
02:46 < bradleymeck> for example, set process.domain.req in a domain and then it will be set during the error
02:46 < ChrisPartridge> fusiongrokker: that's kind of an oxymoron... sql for.. nosql
02:47 < willwhite> bradleymeck: ok ill give that a shot. thanks.
02:47 < fusiongrokker> perhaps but coming from a sql background and trying to wrap my head around map/reduce has been a pain... yet I was able to do 3 ad-hoc queries that I'd been struggling for hours with using unql and 5 minutes of reading.
02:47 < fusiongrokker> ChrisPartridge: best of both worlds? scalability of nosql, familiar-ish syntax of sql.
02:50 < ChrisPartridge> I've yet to require nosql, i'm too in love with postgresql
02:50 < ChrisPartridge> although our foray into capped collections in mongo was a little disappoitning
02:58 < ericelliott> I'm having trouble reading a cookie in express... trying: req.cookies[userIdCookie]
02:59 < ericelliott> req.cookies is undefined );
03:06 < darrenlooby> Okay, so figured out an error that was happening wasn't because of my code... I've just copied someone elses working code, and the prototype part doesn't set methods... AHH!
03:23 < darrenlooby> Copied the guts of a module, and ended up with require('./lib/test.js')('user.db'); ... every time I remove the ('user.db') I get errors all over the shop... any clues?
03:25 < ChrisPartridge> darrenlooby: copy paste is bad mmkay
03:26 < darrenlooby> lol indeed, but I'm only doing it to learn how it works
03:26 < darrenlooby> It works, then I strip it down
03:26 < darrenlooby> I get rid of 90% of it, and all is good
03:26 < darrenlooby> Then, I remove the () from the end of the require and bang
03:28 < scruff_> hey i have a question about using node in the console
03:29 < scruff_> if i type in the for loop, how do i execute it
03:30 < scruff_> i can type console.log('get fucked'); and it will run 
03:30 < scruff_> but what if i want it over multiple lines?
03:30 < scruff_> it looks like this in my terminal and wont execute 
03:30 < ChrisPartridge> for(var i=0;i<10;i++) { console.log('dont get fucked'); }
03:31 < scruff_> does it all have to be on the same line?
03:31 < darrenlooby> ChrisPartridge, lol
03:31 < scruff_> how can i spread it over multiple lines?
03:31 < ChrisPartridge> just type it over multiple lines and end the statement
03:32 < scruff_> like typing the program line by line 
03:32 < scruff_> how do you end the statement?
03:32 < EvilPacket> ChrisPartridge interestingly enough that doesn't work
03:33 < bkfitz> Is upstart the best way to set a node app to start on reboot?
03:33 < ChrisPartridge> works for me, i've got a console open all day for messing about
03:33 < scruff_> yeah i thought the semi colon would end it 
03:33 < scruff_> but not on mine 
03:33 < EvilPacket> I just tried it on 0.8.20 on osx and no go, weird
03:34 < ChrisPartridge> i put the start of the for on one line, the console log on the second, and then final clsoing brace on the third, and hit enter, and off it goes
03:36 < EvilPacket> ChrisPartridge just realized I type bad. It worked just fine. I had done it in the past so was confused with a WAT? moment.
03:37 < scruff_> still doesnt work for me, i just get the ... 
03:37 < scruff_> it works if you paste the whole thing in though 
03:38 < scruff_> so you're saying the last closing '}] should make it run?
03:39 < ChrisPartridge> yep
03:46 < airandfingers> does EventEmitter.emit trigger listeners bound only to events with the exact same name as the emitted event, or does it do substring matching?
03:47 < airandfingers> my this.emit('join') appears to be triggering my this.on('socket_join') handler
03:48 < airandfingers> ahh never mind, i was using "this" and didn't realize that the context had changed in the listener
03:48 < havvy> I once got an infinite event loop by writing 'this' instead of 'that'.
03:49 < airandfingers> haha, that's what i was getting.. maximum call stack exceeded
03:49 < airandfingers> i suppose my warning bells should have gone off when i gave both my classes "join" functions
03:49 < havvy> I didn't get such a warning.
03:50 < airandfingers> no? in node.js code?
03:50 < havvy> Each event happened in its own tick. There wasn't any stack for it to overflow.
03:51 < havvy> I found out when my test suite complained that it didn't terminate.
03:56 < mscdex> >> while(true) console.log('node.js rules!');
03:56 < purr> mscdex: Timeout Error: Execution time exceeded 2 seconds
04:00 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:01 < khayes> Just created first project using yeoman and did npm install as suggested (after running yo web app) and am getting a lot of errors
04:02 < khayes> from ENOENT 34 to EEXIST 47 
04:02 < khayes> In fact, most of the errors are ENOENT 34
04:05 < ChrisPartridge> 34 indicates a file can't be found, afaik
04:06 < khayes> ChrisPartridge: That one cannot be found locally?
04:07 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:08 < ChrisPartridge> Yeah, I *may* be wrong
04:11 < willwhite> where you're using http.request() do you need an error handler on req, res, or both?
04:13 < khayes> ChrisPartridge: fwiw, it worked fine on my mac vs the ubuntu instance I was using
04:13 < khayes> just now
04:13 < khayes> oh well, I'm not stressing. I'm productive again
04:13 < ChrisPartridge> probably platform issue, >< @ mac
04:18 < scruff_> is there any way i can get the node console to tell me all the available methods of an object?
04:20 < havvy> scruff_: console.log(util.inspect(obj))
04:24 < jrajav> Or just type the name of the object
04:24 < jrajav> The node repl does an inspect implicitly
04:24 < darrenlooby> Hi guys. I've finally gotten some inheritance working with one requested module. Prototypes and all.
04:25 < darrenlooby> Now, I'm looking for a second file to come join the fun
04:25 < scruff_> says util is not defined 
04:25 < jrajav> scruff_: Type util alone, once
04:25 < jrajav> scruff_: Then try again
04:25 < jrajav> scruff_: Also, try my method; you don't have to reference util
04:25 < jrajav> Just type the object's name
04:36 < scruff_> im trying  it, i just thought Object() would have some built in methods. if i type String(); it should show me String.replace(); etc 
04:36 < scruff_> i just like an easy way to scan the api in the console
04:37 < SomeoneWeird> console.log(Object.__proto__)?
04:38 < scruff_> [Function: Empty]
04:50 < asdf12> Object.getPropertyNames()
04:50 < asdf12> getOwnPropertyNames*
04:52 < asdf12> >> Object.prototype.methods = function() { console.log(Object.getOwnPropertyNames(this)); }; String.prototype.methods();
04:52 < purr> asdf12: undefined; Console: ['trim', 'toLocaleLowerCase', 'localeCompare', 'lastIndexOf', 'slice', 'charCodeAt', 'strike', 'trimRight', 'small', 'anchor', 'constructor', 'big', 'replace', 'blink', 'fontsize', 'length', 'trimLeft', 'link', 'indexOf', 'substr', 'italics', 'sub', 'toLowerCase', 'valueOf', 'toUpperCase', 'substring', 'toString', 'charAt', 'split', 'search', 'fontcol…
04:56 < scruff_> woo hoo!
04:56 < scruff_> that works great
04:57 < asdf12> its not so robust, but yea
04:57 < scruff_> it could be simpler, like in ruby and python where its a 1 liner 
04:57 < asdf12> methods() needs to be a bit more robust i mean
04:58 < asdf12> >> Object.prototype.methods = function() { console.log(Object.getOwnPropertyNames(this)); }; 'string'.methods();
04:58 < purr> asdf12: undefined; Console: ['0', '1', '2', '3', '4', '5', 'length']
04:58 < asdf12> >> Object.prototype.methods = function() { console.log(Object.getOwnPropertyNames(this)); }; 'string'.constructor.prototype.methods();
04:58 < purr> asdf12: undefined; Console: ['trim', 'toLocaleLowerCase', 'localeCompare', 'lastIndexOf', 'slice', 'charCodeAt', 'strike', 'trimRight', 'small', 'anchor', 'constructor', 'big', 'replace', 'blink', 'fontsize', 'length', 'trimLeft', 'link', 'indexOf', 'substr', 'italics', 'sub', 'toLowerCase', 'valueOf', 'toUpperCase', 'substring', 'toString', 'charAt', 'split', 'search', 'fontcol…
05:02 < scruff_> why would you want this over reading the documentation? you're "just going to get a lot of noise and internal apis. you're probably better off reading the source code"
05:02 < scruff_> ha
05:03 < SomeoneWeird> lol
05:17 < scruff_> how do you cancel a command if you get half way through a multi-liner and realized you stuffed it up?
05:17 < asdf12> ctrl+c
05:17 < scruff_> ta
05:18 < asdf12> the chrome console gives you auto complete
05:19 < asdf12> a lot of times i use that over the node repl, node repl is good for node only stuff, but just plain javascript i use the chrome debug console
05:20 < scruff_> i got auto complete in linux mint 
05:22 < scruff_> wonder when someones gonna write a gtk binding for node lol
05:23 < asdf12> there is
05:23 < scruff_> no way
05:23 < asdf12> or was that qt
05:23 < ChrisPartridge> yeah, someone was working on bindings
05:24 < scruff_> i know u can write desktop apps in js on windows 8
05:25 < asdf12> https://github.com/rogerwang/node-webkit i think this makes more sense
05:25 < asdf12> unless you wanted native look... but you wouldn't use gtk anyway if you wanted that
05:26 < SomeoneWeird> node-webkit or appjs
05:27 < scruff_> rad
05:27 < ChrisPartridge> appjs is pretty groovy
05:28 < KicStart42> asdf12: neat
05:28 < SomeoneWeird> eh, i like node-webkit over appjs
05:30 < KicStart42> SomeoneWeird: both look kind of fun. I look forward to the day when there is a good web GUI builder with complete roundtrip capabilities. 
06:15 < kevireilly> probably one of the best things ever http://martinvalasek.com/blog/pictures-from-a-developers-life
06:28 < ChrisPartridge> kevireilly: haha, that's great
06:28 < scruff_> i love the joomla one
06:30 < kevireilly> i laughcried my face off.. still trying to find it
06:34 < SomeoneWeird> most people will probably like
06:34 < SomeoneWeird> http://devopsreactions.tumblr.com/
06:34 < SomeoneWeird> and
06:34 < SomeoneWeird> http://securityreactions.tumblr.com/
06:34 < SomeoneWeird> too, then
06:37 < sprink> So I just finished some basic node.js tutorials, read the node beginner book by Manuel Kiessling, but I'm still unsure about how to properly read/write my html
06:38 < sprink> Should I be keeping my html in a seperate file and using fs to read it, and then write it to the client?
06:38 < kevireilly> SomeoneWeird: awesome! tanks for sharing
06:38 < SomeoneWeird> yeah, some funny as shit stuff 
06:38 < SomeoneWeird> sprink, most node frameworks have a way to render html files
06:39 < kevireilly> sprink: a lot of peoples also use template engines, depending on your goal of course
06:40 < sprink> my goal is to learn very fundamentals. I want to get a very basic functioning website with multiple pages, up and running on node. I have all the html/css/js written. I just don't quite understand the best way to send it to the browser with node
06:41 < kevireilly> SomeoneWeird: seems a couple of those other ones are jacked directly from devops
06:41 < epicurus> spion:  use express
06:41 < sprink> my very fuzzy logic is telling me to read them from files with the fs module, and then write to the client
06:41 < scruff_> thats fucking hilarious 
06:42 < epicurus> sprink:  no
06:42 < SomeoneWeird> kevireilly, yep, i noticed that
06:42 < scruff_> (not you sprink)
06:43 < sprink> I've had multiple people suggest using express. But my only thought it, shouldn't I learn the fundamentals of node itself first?
06:44 < scruff_> someonewierd check out the jumpstart node.js book, it take you right through heaps of different deployment ways 
06:44 < epicurus> no
06:47 < scruff_> sprink i meant 
06:49 < asdf12> sprink: thats how you would do it 
06:50 < asdf12> sprink: you don't neccessarily have to do it to know that, you could just see how other people have done it
06:52 < sprink> asdf12: so the frameworks like express are actually doing it that way? 
06:55 < epicurus> sprink:  http://nodejs.org/api/http.html
06:56 < asdf12> sprink: yea
06:57 < luckysmack> are there any templating languages in node which will allow me to not have any code/logic in the actual html view? I would want to put a placeholder there using maybe a data attribute or something so I can replace it from the controller side. such as a dummy select list with one option, then in the controller I override that list with the results of a db call
06:57 < asdf12> luckysmack: mustache, hogan, handlebars ?
06:58 < asdf12> they are logic-less
06:59 < luckysmack> not mustache. i would still use syntax like so: {{foo}}
06:59 < asdf12> not mustache?
06:59 < luckysmack> which I want to avoid. I want fully compliant html code. no logic in the templates.
06:59 < luckysmack> i just found 'plates' which looks like it may work
07:00 < asdf12> i dont understand, {{foo}} isn't logic, it's just a placeholder
07:01 < asdf12> when the template gets rendered, it'll be fully compliant html code
07:02 < luckysmack> yea i know. but i dont want to have to have template designers to have to see that.
07:02 < luckysmack> with plates I can do this:
07:02 < luckysmack> var html = '<div id="test">Old Value</div>'; var data = { "test": "New Value" };
07:03 < asdf12> ah i see
07:03 < luckysmack> where 'html' is the template and data is me replacing it in the view
07:03 < luckysmack> err
07:03 < luckysmack> i mean replacing it in the controller
07:03 < luckysmack> https://github.com/flatiron/plates
07:04 < luckysmack> that way the design is as logicless as possible and clean from the start. 
07:07 < AAA_awright> luckysmack: I'm afraid templates kind of require "logic" in their body
07:07 < AAA_awright> That's not really sensical
07:08 < AAA_awright> No matter how you define placeholders, they're still placeholders
07:08 < luckysmack> why does the html *need* logic?
07:08 < bradleymeck> cause english is not context free
07:08 < scruff_> lol
07:08 < AAA_awright> Yeah
07:09 < luckysmack> if I dont want a certain part of the page to show up, I dont renter that template. of if part of the page is dependant on another factor, I change that in the controller.
07:09 < luckysmack> but I can still put html in the file so the designer knows what goes there. so they will know the context
07:10 < bradleymeck> but the css cant deal with commas and lists always
07:10 < bradleymeck> as a simple contrived example
07:10 < luckysmack> plates will insert the dummy content with the real content before it hits the css. so the css will render fine.
07:11 < bradleymeck> but it wont add commas properly if you are just iterating ala {{#x}} {{item}}, {{/x}}
07:11 < bradleymeck> the point is as much as you don't "want" logic, english / natural languages are not context free
07:11 < bradleymeck> so fighting it is a losing battle by definition
07:12 < luckysmack> what commas?
07:13 < bradleymeck>  {{#x}} {{item}}, <-- that comma {{/x}}
07:17 < luckysmack> im not quite sure what you're getting at. I will build the logic and the context in the controller. the css styles will already be in the template and with plates I can just grab those to insert the real data over the dummy data. based on their page it seems to be well covered unless I am missing something.
07:18 < bradleymeck> luckysmack: but how will you properly add commas to a list and not at end of list
07:18 < bradleymeck> without logic
07:20 < luckysmack> that logic will be in the controller (or presenter or whatever). it will build it and then replace whats in the html with that. there will be logic, it will just be in the controller
07:21 < luckysmack> and if I have a list of users say. i only have one dummy user. then I just copy that user for every record I get back in the db
07:21 < bradleymeck> that seems like you are taking the templating out of the template… generating strings from data since you have logic in code then not having the string generated in the template where you should be generating any view of data
07:21 < luckysmack> and push that to the view overwriting the default one with the many
07:21 < scruff_> http://www.youtube.com/watch?v=1e1zzna-dNw
07:21 < bradleymeck> i could go on at length about this. until there is not requirement of context i will say give me logici in templates.
07:22 < bradleymeck> just my opinion
07:24 < luckysmack> there will still be templating and logic, but it will be separate from the main html itself. this is to keep the original html clean so it can be modified by designers and not break the template logic as easily. and the designers dont have to worry about the code/logic. it's a separation of concerns. so I will still have context but it will be in the controller/presenter rather than in the html itself.
07:25 < luckysmack> this also allows for different ways of caching. it makes it easier to cache the html templates because there is no code in them. I dont have to parse them for logic when i pull a rendered cached template from the server. i just pull the template and replace the (for example) list options with my db results. 
07:26 < bradleymeck> luckysmack but you are talking about generating strings for the template in your controller after the fact, generating that example above from mustache is just not possible without logic in the template or some seriously bad pre-template string rendering
07:27 < luckysmack> have you checked out plates? it looks to be axcactly what I am trying to accomplish: https://github.com/flatiron/plates
07:27 < bradleymeck> printing out the array [1,2,3,4,5] as a comma separated list is something im not sure could be covered by logic-less templates without string prerendering. i work at nodejitsu
07:27 < bradleymeck> it does have reentrant logic
07:28 < lng> Hi! Can I change line 9 to removeRelation call (Line 1)?
07:29 < bradleymeck> lng: ??? context?
07:29 < lng> bradleymeck: as removeRelation is defined, I want to reuse it
07:30 < luckysmack> reentrant logic? where does it do that? i am still reading the readme page.
07:30 < bradleymeck> i have no idea what removeRelation is or why line numbers are important
07:30 < lng> bradleymeck: you don't understand me
07:30 < lng> removeRelation is line 1
07:31 < bradleymeck> luckysmack: https://github.com/flatiron/plates/blob/master/lib/plates.js#L350
07:31 < lng> in other words line 2 and 9 are the same and I am about of reusing the first function
07:31 < luckysmack> well if it cant be done, then I want to be able to limit it where I can.
07:31 < luckysmack> looking
07:32 < bradleymeck> literally cannot do comma separated list without logic. ever. makes me sad, but means i fight for some logic with utter terror when people refuse to have logic
07:33 < bradleymeck> lng: i would need to see code to understand, still have no context of what the question is asking to give an answer on
07:34 < lng> I thought it is enough context
07:34 < lng> bradleymeck: is it possible to call Model.prototype.removeRelation() from 
07:34 < bradleymeck> line 2 and 9 are the same, but reuse the same function
07:34 < lng> Model.prototype.updateRelation()?
07:35 < luckysmack> hrmm. ok. well maybe from what i read on this before finding plates I over esitmated or didnt understand enough then. just from what i read is sounded like no logic in the templates would be reasonable.
07:35 < bradleymeck> lng this.removeRelation() inside of updateRelation
07:35 < lng> bradleymeck: thanks
07:35 < bradleymeck> luckysmack: all template engines gain some logic due to the comma problem
07:35 < bradleymeck> all of em :/
07:36 < gildean> lng: do as bradleymeck said, but make sure your 'this' is the constructor in the scope you're calling it
07:37 -!- mode/#Node.js [+o TooTallNate] by ChanServ
07:37 < lng> bradleymeck: http://paste.ubuntu.com/5575604/
07:39 < luckysmack> hrmm. so then with what i have described I am trying to accomplish, you think mustache would fit the best then?
07:41 < bradleymeck> luckysmack: i think no matter what your designer / whomever cannot live without any logic
07:41 < luckysmack> well i just want to mitigiate it the most I can i suppose.
07:41 < bradleymeck> either one works fine, but you need logic if you work in a place that talks english/spanish/any context dependant language
07:41 < bradleymeck> plates and mustache are both very good at avoiding logic
07:44 < luckysmack> ok. ill take a deeper look at both then. thanks
08:32 < Blader> hi 
08:34 < firedfox> hi
08:34 < Blader> i have a little problem on the use of "app.get()" of express modul..is there someone to help me ? :p
08:36 < antonio__> just ask Blader :)
08:41 < [AD]Turbo> ciao
08:42 < Blader> i have a projet with the following architecture : project/client/(allHtmlFiles)  and    project/server/app.js  .. so i use the client folder as static folder with : app.use(express.static(__dirname + '/../client'));  and i map the url with : app.get('/', function(err, req, res, next){     res.sendfile('/index.html'); }); it's work ! but if i had the same line to map the url /test and send the file test.hmt it doesn't :'( 
08:42 < Blader> add*
08:48 < sshaginyan> Guys how would I access an object given this array ['one', 'two'] one: { two: {} } ?
08:48 < Blader> the error message is the following : "cannot get /test" (404), is there a special trick to know ? 
08:49 < sshaginyan> more like test: {one: { two: {} }}
08:49 < sshaginyan> so something like test['one']['two']
08:50 < bradleymeck> ['one','two'].reduce(function(o,k){return o[k];},{one:{two:{}}})
08:51 < sshaginyan> bradleymeck: Is that async or sync?
08:51 < sshaginyan> it's sync right>
08:52 < bradleymeck> that is sync, since you already have the keys and the object
08:52 < sshaginyan> k
09:01 < spots> hi
09:02 < spots> how can i unescape a string a user has typed in?
09:03 < bradleymeck> spots: define unescape
09:04 < spots> "a\x21" => "aC"
09:05 < spots> s/x21/x43/
09:06 < bradleymeck> well you could use .replace for all the escapes you want to support I know JSON supports \u
09:07 < spots> i need to convert it to a buffer then
09:08 < bradleymeck> new Buffer(str); after your decode it
09:09 < spots> converting to a buffer isn't the problem
09:09 < wwicks> spots: where is the user entering it? webform?
09:10 < spots> readline
09:12 < bradleymeck> spots .replace(/\\(x\d{2}|u\d{4})/, function (str) {return str.substr(1).match(/[\s\S]{2}/g).map(function (hex){return String.fromCharCode(parseInt(hex,16)})).join('')})
09:12 < bradleymeck> cause you can
09:12 < wwicks> spots: so are they entering ["a", "\", "x", "2", "1"] or is your debugger (or whereever you're seeing it) just displaying it to you in that format?
09:13 < spots> wwicks: i'm entering this, because i need a way to input non printable characters in a printable way
09:16 < wwicks> howabout using unescape('a%21')
09:16 < wwicks> spots: use % instead of \x?
09:40 < pixie79> hi all - I am having a call back issue with nodemailer, when it send mails ok, it just seems to hang afterwards and not return to the main script and exit. any ideas? https://gist.github.com/pixie79/5063533
09:42 < asdf12> the err in your main script wont ever happen
09:43 < wwicks> pixie79: did you turn on nodemailer debug?
09:43 < wwicks> pixie79: var emailTransport = nodemailer.createTransport("SMTP", {debug:true});
09:43 < pixie79> ok 
09:44 < wwicks> pixie79: it will show you the entire discussion that happens with the SMTP server
09:44 < pixie79> wwicks: yep mail sends fine - i just seem to get nothing back
09:44 < spots> wwicks: using % seems to be the best solution :)
09:45 < pixie79> the whole process seems to just hang once the mail is sent
09:45 < wwicks> spots: lol- cool
09:45 < spots> is there a way to store a date in the package.json?
09:45 < pixie79> if the mail is not sent i do get the message to console log at least in the first session
09:45 < asdf12> spots, as a string
09:46 < spots> would be interesting to know from when a specific version is
09:46 < wwicks> pixie79: on line 5, err is your callback function
09:46 < spots> i can add my own field, but if there is a common way to do that i would prefere that
09:47 < wwicks> pixie79: I assume that was a boo boo?
09:47 < asdf12> pixie, i think the issue is the mailer is not done, so it isnt exiting your script yet
09:47 < pixie79> how long can mailer take after sending the mail - i have recieved it and it is still hanging
09:48 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
09:48 < pixie79> wwicks: i can see it is probably wrong by not sure what it should be - callbacks are a weak point
09:49 < wwicks> pixie79: so you're not seeing any console.logs()?
09:49 < asdf12> pixie, does that library have a socket. end or something to close the connection ?
09:49 < asdf12> maybe the lib has a bug and it doesnt close the socket , my guess anyway
09:49 < pixie79> i do them lib/email.js if sendmail is turned off, but that err is not passed back to the calling script
09:52 < wwicks> pixie79: on line 5, change 'err' to 'cb'. then insert cb(err) at line 13.
09:52 < pixie79> ok
09:53 < wwicks> pixie79: but your program probably will not quit either way. Your connection is probably 'keep-alive' which means node will keep the script running. You can call process.exit() if you want to force it.
09:54 < darthdeus> hey guys, i need a little advice :) i'm building a long polling server and right now i basically iterate over all the open connections every couple of hundred milliseconds ... this doesn't really scale if i have a lot of them, but the only alternative seems to be to setTimeout for every single connection, how would node handle that?
09:54 < darthdeus> like if i have 10 000 timeouts
09:54 < Sven_vB> darthdeus, for what purpose do you iterate over them?
09:54 < pixie79> wwicks: i know get a Syntax erro: Unexpected token ( on the cb(err) - https://gist.github.com/pixie79/5063533
09:55 < darthdeus> Sven_vB: i check for each one if there's new data to be sent back, if not i just push them back to the queue for next iteration
09:56 < Sven_vB> darthdeus, i'd listen on the data source for new data, and only if some arrives, send it to those sockets which have subscribed to that part of the data source.
09:56 < Sven_vB> darthdeus, also, i'd try to use faye. ;)
09:56 < darthdeus> Sven_vB: listening on the data source == pollling the database
09:56 < wwicks> pixie79: here: https://gist.github.com/williamwicks/5063623
09:57 < darthdeus> Sven_vB: and since every client requires different data, i'm not sure if i can do that
09:57 < darthdeus> Sven_vB: because every client can be subscribed on a different channel
09:57 < Sven_vB> darthdeus, what kind of database do you use?
09:57 < darthdeus> Sven_vB: postgres
09:57 < wwicks> pixie79: BTW- I have basically the same helper in one of my projects :)
09:57 < Sven_vB> darthdeus, what kind of events do cause changes to the DB?
09:58 < darthdeus> Sven_vB: if someone publishes a message
09:58 < darthdeus> Sven_vB: but i can't do that without a database, because it won't scale on multiple processes
09:58 < Sven_vB> darthdeus, how do you receive such messages?
09:58 < darthdeus> Sven_vB: POST /messages?channel=foo&data=bar
09:59 < pixie79> wwicks: thanks that fixed the call back - but yes it does still seem to keep the connection open if the mail is sent ok.
09:59 < Sven_vB> datanoise, is the DB used for logging the chat or is there more complexity why you need one?
09:59 < Sven_vB> datanoise, sorry, wrong nick completion
09:59 < Sven_vB> darthdeus, 
09:59 < pixie79> as I only want to end the mail process not the whole script, i dont think i can do process.exit can i ?
10:00 < darthdeus> Sven_vB: i need a database because i expect to have multiple instances of the pubsub server running
10:00 < wwicks> pixie79: no, then you don't want to call exit
10:00 < darthdeus> Sven_vB: which means i can't just handle it all in memory
10:00 < asdf12_> your mail process comes last , so its fine
10:00 < darthdeus> Sven_vB: it's not for a chat app, i'm doing a general purpose pub/sub
10:00 < darthdeus> Sven_vB: this is my current implementation https://gist.github.com/darthdeus/7a51249e6dd92ab893ff
10:02 < Sven_vB> darthdeus, you might check how faye solved that, or just use faye, the easiest general purpose pub/sub server for node. however, i think it will turn out about sending the change notification separate from the DB update, if your DB really cannot provide an update stream to listen on.
10:02 < pixie79> arh i see i need to close the transport
10:03 < asdf12_> :p 
10:03 < asdf12_> yes i thought it would be a socket staying open :p
10:03 < darthdeus> Sven_vB: thanks, i'll take a lok at it, but it feels like faye isn't persistent
10:04 < Sven_vB> darthdeus, you're right about that. you'll have to add a listener that logs to the DB for that
10:06 < Sven_vB> darthdeus, do you mean by persistence a kind of backlog, so that clients see what happened on their subscribed channels while they were disconnected?
10:07 < darthdeus> Sven_vB: yeah i want to be able to tell the client what happened even if he has a small timeout
10:08 < Sven_vB> darthdeus, you could try and check if CouchDB's update stream can be limited to one document, and if so, subscribe to the changes of that document that happened since some revision id
10:09 < pixie79> thanks wwicks
10:09 < wwicks> pixie79: np
10:09 < Sven_vB> also, when using the http post method, your data should be in the body, not in the url.
10:10 < darthdeus> yup that was just for illustration purposes
10:11 < Sven_vB> however, faye with a message interceptor to log and a connect interceptor to replay some backlog will probably work just as well
10:12 < Sven_vB> if it's really only about disconnects, i think faye will actually handle that by default
10:27 < bradleymeck> darthdeus: tl;dr use `npm i follow` for couchdb changes
10:28 < asdf12_> i didn't know you could do that , use tldr to answer :p
10:29 < jetienne> pool: to create an instance of a class, do you prefer LIB.createStuff() or LIB.Stuff.create() ? knowing that ```new LIB.Stuff()``` works too
10:29 < bradleymeck> asdf12_: i got the gist of what he needed, but that scrollback is a lot of stuff
10:42 < asdf12_> why do functional languages look so ugly
10:44 < bradleymeck> asdf12_: cause ppl dont like to loosely couple things, and they do not like unix philosophy, if my module is more than 500 lines long I feel bad
10:44 < jsonified> asdf12_: simply because you are not used to them yet. (){}() yuck. lisp syntax grows on you. Even assembler becomes more readable over time.
10:50 < pyykkis> asdf12_: try clojure for couple of weeks and JavaScript starts to look ugly :)
10:51 < jsonified> pyykkis: that's what I'm doing right now :
10:53 < pyykkis> Here's awesome talk about the subject: http://www.infoq.com/presentations/Simple-Made-Easy
11:11 < \n> hi, is there a way to sleep from a node.js script? I've tried making a function that records the current date, loops until it reaches a certain date then returns, but it returns instantly.
11:12 < \n> oh, Date.now() is apparently in milliseconds. so trivial...
11:12 < Drajwer> maybe you mean setTimeout/setInterval?
11:14 < \n> Drajwer: oh yes, I forgot about that. but I'd prefer some way to actually sleep then execute other things normally outside.
11:15 < \n> my loop implementation works, but I'm not sure of the impact on the CPU
11:15 < Drajwer> it *will* impact your CPU if you mean infinite loop
11:16 < Drajwer> why not combine your method with setTimeout?
11:17 < \n> hmm
11:17 < \n> setTimeout + return?
11:18 < asdf12_> i dont understand why its returning early 
11:20 < asdf12_> there is nothing async about getting a Date, so if its returning early then i dont understand
11:30 < Sven_vB> \n: what effect of sleeping is it that you prefer over letting NodeJS idle around until your timeout fires?
11:32 < \n> well, in actual scripts setTimeout could probably work, but in the REPL it would probably return to the prompt, messing up the display
11:32 < Sven_vB> also, returning will probably be useless because when set up with setTimeout(), NodeJS won't care about the return value.
11:32 < \n> is there a way to print something without a trailing newline?
11:33 < wwicks> \n: you mean process.stdio.write?
11:33 < \n> probably, thanks
11:33 < wwicks> opps process.stdout.write
11:33 < Sven_vB> esp. your next statement after the setTimeout will be executed as soon as the timeout is set up, and the return value of setTimeout is not the return value of your timeout handler since that hasn't fired yet at that stage.
11:35 < \n> actually, this works almost perfectly in the REPL. setInterval(function() { process.stderr.write('+'); }, 100);
11:35 < MiracleBlue> Hey guys!
11:35 < MiracleBlue> And gals :)
11:35 < \n> hi
11:38 < darthdeus> is it ok to launch thousands of setTimeouts or will that cause some significant performance issues?
11:38 < MiracleBlue> Hahaha
11:38 < MiracleBlue> Oh dear.
11:39 < MiracleBlue> Might be a fun experiment I guess.
11:41 < Sven_vB> even if nodejs will handle that well (i'd think it would), it sounds like there must be a better way.
11:41 < wwicks> darthdeus: thats a lot of timers running… and when they callback, the event stack will probably get slammed causing a bunch of queing
11:41 < wwicks> darthdeus: (so if the timeout was for 10 seconds later… it might happen 30 seconds later)
11:42 < darthdeus> wwicks: i dont need it to run at a precise time, i just need to periodically do something for a lot of different items
11:42 < darthdeus> and i dont want to process them synchronously
11:42 < darthdeus> so i thought maybe a timeout for every one of them might be a solution
11:43 < wwicks> you might want to look at using a worker
11:43 < Sven_vB> darthdeus, you can use async.forEach to process them async, and make the allCompleted callback set a timeout to repeat the batch action
11:44 < darthdeus> Sven_vB: that sounds like what i need :) thanks
11:44 < \n> is it a good practice to write a wrapper like this? http://ix.io/4zz/
11:45 < wwicks> darthdeus: you said you were using postgres- have you looked using the notify events? i don't think you're going to find something scallable on your current path
11:45 < Sven_vB> \n: looks like there's some error handler missing
11:45 < darthdeus> wwicks: postgres is just what i'm using right now, i want to make a general solution and just plug in a backend
11:46 < \n> Sven_vB: this function is for uses where the output is not critical
11:46 < \n> e.g. printing 'Interrupt' on Ctrl-C
11:46 < \n> then exiting
11:47 < wwicks> darthdeus: then I would have whatever changes the data you're monitoring… also shoot off a notification to this process your working on
11:47 < wwicks> in otherwords only do work when needed
11:47 < Sven_vB> sounds like "let's make a wrapper that independent of which DB with special efficiency features you plug in, it always uses the inefficient lowest denominator to allow use of inefficient DBs!"
11:47 < \n> what?
11:47 < darthdeus> Sven_vB: i'm just trying to build a MVP of long polling, ofc i'm gonna optimize whne i figure out how to do it :)
11:49 < Sven_vB> sounds interesting. which module would you (others on the channel) use for a MVP that avoids any of socket.io's more efficient server-push methods even if they'd be available?
11:49 < Sven_vB> +notifying (MVP)
11:50 < jamilbk> I'm using mocha with supertest -- anyone know of a way to get meaningful backtraces from my failed tests?
11:50 < darthdeus> Sven_vB: i dont understand the question
11:51 < Sven_vB> then maybe i don't understand a long-polling MVP. i'll verify my concept of MVP
11:54 < Sven_vB> as i understand you'd like to inform a webbrowser of changes to the model data, and communicate that changes over long polling, avoiding auto-detection of the most efficient method (which could be a web socket).
11:54 < darthdeus> "most efficient" isn't a MVP, right now i'm trying to make something that works and isn't necessarily super efficient :)
11:56 < Sven_vB> well i'll look up how to force socket.io to use only long polling. with that probably the usual modules may be an option.
12:01 < Ov3rTaf> hi
12:06 < Sven_vB> also, what kind of batch operation is it that you need to do on what kinds of objects? (like, hopefully not sending heartbeats over sockets?)
12:06 < Sven_vB> oh wait, think i got two topics intermixed
12:13 < Sven_vB> hadn't thought that neither node-dbi nor node-activerecord offer abstract interfaces to the underlying DB's update stream
12:14 < Sven_vB> then maybe it actually is acceptable to poll the DB with timer-ed batch jobs
12:15 < Sven_vB> still cannot see reasons for limiting to long-polling, however ;)
12:15 < MI6> joyent/node: Ben Noordhuis v0.8 * f26362e : http: use socket.once, not socket.on  Register the 'close' event listener - http://git.io/z9ocRw
12:21 < Sven_vB> also found jugglingdb for database abstraction, and towerjs sounds like it includes such an MVP but still investigating.
12:27 < darthdeus> Sven_vB: long polling is most compatible and easiest to debug :) i've used websockets before and it was kinda pain to debug them
12:27 < darthdeus> long polling is easy to try with CURL
12:27 < Sven_vB> you do know about socket.io, right?
12:28 < antonio__> after v0.8.x we will have 1.0?
12:28 < bnoordhuis> no, v0.10
12:28 < antonio__> long way to v1 then :P
12:28 < bnoordhuis> well, it's only a number
12:28 < Sven_vB> darthdeus, because if you drop the restriction to long-polling, you can just use socket.io like most NodeJS people do
12:29 < darthdeus> Sven_vB: i've used socket.io before, yes, but i want to build something myself
12:29 < antonio__> in programming it isn't just a number
12:29 < Sven_vB> oh i see... then of course it's against the cause to use mostly pre-made modules ;)
12:30 < bnoordhuis> antonio__: i would've been with you if you'd said "in corporate management"
12:30 < antonio__> that what i meant
12:30 < antonio__> even if big company already use it
12:30 < wwicks> antonio__: I think the latest version is 9.9
12:30 < antonio__> 0.9.9 * you mean
12:30 < antonio__> lol
12:31 < Sven_vB> "more 9s please" ;)
12:31 < darthdeus> Sven_vB: true, my use case is more like http://pusher.com/ then just simple chat app with socket.io :)
12:31 < wwicks> antonio__: ya- I was being a lazy typer :(
12:32 < Sven_vB> darthdeus, looks a bit like faye
12:32 < Sven_vB> darthdeus, isn't it tedious to write custom long-polling stuff when socket.io could do that?
12:34 < tornad> Sven_vB: I've done a long polling system with redis and brpop
12:34 < tornad> in app.get("/poll") you start a redis connection and make brpop on a key
12:35 < tornad> when you want to push information, you can add value in the key, and the client will be automaticly unlocked by poping the value
12:35 < tornad> you can also use pub/sub feature of redis
12:36 < tornad> http://redis.io/commands/brpop
12:36 < darthdeus> Sven_vB: i already have the client side polling part which socket.io gives you, my only concern right now is the server performance
12:36 < tornad> with this, no need to check each waiting client with timeout
12:37 < Sven_vB> tornad, sounds good on the server side. wouldn't you still have to write a lot of client stuff for handling failed requests, resuming partially received data sets and such?
12:37 < Drajwer> why not use socket.io with websocket transport?
12:37 < longshaft> this might seem like a really stupid question but http://howtonode.org/hello-node where does the "Hello World" get sent to in the Hello TCP example?
12:37 < Sven_vB> darthdeus, oh, ok then
12:38 < tornad> Sven_vB: on the return, i build a json answer with a return code or you can do that with http response code
12:38 < Sven_vB> longshaft, i think socket.end("Hello World\n"); is what you're looking for, it includes .send()
12:38 < Sven_vB> or .write(), would have to look that up
12:38 < darthdeus> Sven_vB: since the client polling is about 30 lines :)
12:39 < tornad> the ajax got a 200 (http) or and error, and then, sending another request
12:39 < tornad> brpop is one line atomatic return, so half answer is possible
12:39 < tornad> s/is/is not/
12:39 < havvy> Sven_vB: .write() does send it, yeah.
12:39 < havvy> Node doesn't buffer the buffers.
12:40 < longshaft> Sven_vB when i got to localhost:7000 in the browser, the terminal throws the error 
12:40 < tornad> so client side is easy too
12:40 < longshaft> sys is not defined 
12:41 < tornad> I've done that because I want to handle myself the client request process, but as they said, I think socketio is good for this too
12:41 < tornad> as it managed also the non socket exchange with html page ask/return to simulate socket
12:41 < Sven_vB> longshaft, indeed. that seems to be a bug in the example script.
12:42 < Sven_vB> longshaft, you can replace sys.puts with console.log
12:44 < longshaft> yeah ok, but where is sys.puts supposed to send the hello world? cause i already know how to console.log 
12:44 < longshaft> i guess i need a require(sys') in here somewhere
12:45 < Sven_vB> it should send the Hello world to the browser, causing the browser to show an error saying that the reply from the server couldn't be understood (because it's not HTTP)
12:45 < longshaft> ahhh
12:46 < Sven_vB> try accessing that server with netcat instead ;)
12:47 < longshaft> its not for a purpose, just my understanding 
12:53 < longshaft> well i just comment out sys.puts() and it send hello world to the browser (cause apparently sys puts is just another console.log() ) .... 
12:53 < mscdex> sys module is deprecated
12:55 < Sven_vB> mscdex, there are more things to optimize in those examples. however it seems i'd have to use disqus to suggest them
12:55 < longshaft> Sven_vB browser doesn't show an error message is what I mean ... not that it's a big deal 
12:55 < Sven_vB> longshaft, in cases where your console is stdout with no decoration, they should be the same.
12:56 < Sven_vB> other consoles might add timestamps and write it on paper
12:56 < longshaft> i see
12:56 < Ov3rTaf> is there a simple way to make socket.io creating sockets using PHP session id ?
12:57 < wwicks> I just got a PDF to print with my IPP lib. w00T!
12:59 < Sven_vB> Ov3rTaf, i'd let the client send a login message that includes the session ID, then on the server assign that session ID to the socket
13:02 < Sven_vB> depending on the transport method that socket.io has chosen, it might be that there's an HTTP request that would result in a socket being created that you could intercept to extract the cookie data.
13:03 < Sven_vB> however i think the first method is more in the spirit of socket.io
13:03 < Ov3rTaf> and do i assign it to socket.id or socket.handshake ?
13:06 < Sven_vB> i can't seem to find the api reference for those. do you have a link at hand?
13:08 < pixie79> does anyone here use winston-syslog? I am trying to but it does not seem to print out my messages to syslog, so i am not sure if i have set it up correctly. if i telnet to localhost 8513 (tcp) then i see my message logged - https://gist.github.com/pixie79/5064529
13:10 < Sven_vB> Ov3rTaf, this seems to point to the handshake data. however the Readme of the repo says the documentation there is deprecated. https://github.com/LearnBoost/socket.io/wiki/Authorizing
13:17 < mrvisser> anyone using elasticsearch-client for Node.js? Just trying to figure out what is available for auto-discovery of new nodes at runtime
13:22 < supersym> anyone got a good idea how I could best listen for changes in a browser client that receives updates from a Ajax push server?
13:22 < wwicks> supersym: you mean SSE?
13:23 < supersym> comet appearantly is used to push changes to clients
13:23 < wwicks> supersym: Server Sent Events is not supported in IE<10
13:24 < supersym> i wonder the easiest way for me to fetch those changes, just periodically I could check the values of the dom elements and how they changed
13:25 < supersym> but perhaps someone knew a way I could do it realtime
13:26 < supersym> ok i see this is a Bayeux protocol, jquery i should read a bit more
13:35 < arjunbajaj> hey guys, can you help me out with this issue, if you know: http://stackoverflow.com/questions/15158917/call-method-in-class-from-another-method-in-same-class-which-is-running-inside-a
13:35 < arjunbajaj> thanks! :)
13:35 < supersym> and I know for sure its long polling now... good old firebug
13:36 < bnoordhuis> arjunbajaj: #coffeescript?
13:36 < arjunbajaj> bnoordhuis: yes
13:36 < bnoordhuis> i mean, you might want to try the #coffeescript channel
13:37 < longshaft> coffescript can suck my longshaft
13:37 < arjunbajaj> bnoordhuis: ohh ok, sorry!
13:37 < arjunbajaj> thanks!
13:39 < havvy> arjunbajaj: You want => for the inner method.
13:40 < arjunbajaj> havvy: Perfect, thanks! :D
13:41 < havvy> In your inner function, with ->, it's a normal function bound to `undefined` by default. With =>, you bind it to the `this` value of the function instantiation context.
13:42 < havvy> arjunbajaj: Wanna check off my answer on StackOverflow?
13:43 < arjunbajaj> havvy: yes. it'll allow me in 3 mins! :D
13:49 < arjunbajaj> havvy: done! thanks for your help! :)
13:49 < havvy> I suggest looking at how JavaScript determines what 'this' is.
13:50 < arjunbajaj> sure, can u suggest some blog post or article or book?
13:50 < arjunbajaj> :)
13:53 < TehShrike1> arjunbajaj: http://eloquentjavascript.net/chapter8.html
13:53 < nhunzaker> I love that chapter.
13:53 < arjunbajaj> TehShrike1: Thanks! I'll learn it!
13:53 < arjunbajaj> :)
13:54 < TehShrike1> :-)
13:55 < havvy> TehShrike1: Do you have a good article on `this` itself?
13:55 < TehShrike1> Not that comes to mind
13:56 < nhunzaker> Generally speaking, I found experimenting with "this" in the console to be the best way to really wrap my head around it.
13:56 < nhunzaker> MDN has a decent article: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/this
13:57 < TehShrike1> I don't remember when the last details of this/function scoping clicked for me
13:57 < havvy> Ah, nice.
13:57 < havvy> TehShrike1: Just remember. `this` is the only dynamic variable in JS.
13:58 < longshaft> if im writing raw html out to a browser, am i better off using http or tcp? 
13:58 < nhunzaker> I can't remember either, though I imagine it was about the time I started to really understand "call" and "apply"
14:00 < preyalone> How would I prettyprint arbitrary objects in Node? I can't seem to find an NPM package for this.
14:01 < wwicks> JSON.stringify(obj, null, 2)
14:01 < t0th_->  hi 
14:01 < wwicks> preyalone: is that good for you?
14:01 < t0th_->  i am running a node script with limestone 
14:02 < t0th_->  locally works fine, but when i put in remote server its dont work 
14:02 < preyalone> wwicks: Yeah!
14:04 < preyalone> Are there NPM packages that prettyprint like JSON.stringify(obj, null, 2), or should I make my own?
14:05 < nhunzaker> I found this: https://github.com/scottrabin/prettyprint
14:05 < nhunzaker> Looks *ancient* though.
14:06 < wwicks> preyalone: I don't understand- what isn't JSON.stringify doing that you are looking for?
14:06 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:07 < aandy> preyalone: you might want to look at the Express codebase. their res.json method outputs pretty formated json
14:07 < aandy> (probably connect, but not sure, hence the "look at") :)
14:12 < wwicks> pow! https://github.com/williamwicks/ipp
14:13 < wwicks> now go to your terminal and type: `npm star ipp`
14:13 < wwicks> ty :)
14:50 < yeassay> hi guys, someone remember the name of the project for creating fake rest like api for frontend dev?
15:02 < yept> someone know why spawn('node',...) works but spawn('node --expose-gc',...) not?
15:03 < jrajav> Node's gc is shy.
15:08 < Kakera> https://github.com/Obvious/ursa/blob/master/binding.gyp can someone explain how this works? I don't see it linking to openssl anywhere
15:12 < Christian87> hello
15:12 < Christian87> is there any idletimout in ws lib ?
15:16 < chakrit> creationix: a friend of mine showed me a cool .SH the other day and I thought what about nvm.sh? checked and saw that it was available so I snatched it XD
15:17 < chakrit> creationix: wondering if it could be put to use w/ nvm ? like curl http://nvm.sh would be cool
15:17 < mscdex> Kakera: looks like it's only linking on Windows
15:18 < Kakera> mscdex, then where does it get the symbols on linux?
15:20 < chakrit> creationix: anyway, please let me know what you think. otherwise I might just put a redirect to github/nvm.sh on it.
15:21 < pachet> Kakera: on linux it can just use the lib that comes bundled with node
15:21 < pachet> https://github.com/Obvious/ursa/blob/master/binding.gyp#L35
15:22 < Kakera> that includes the headers. what about the library itself?
15:31 < bnoordhuis> Kakera: openssl is compiled into the node binary so (some of) the openssl symbols are available
15:31 < bnoordhuis> most symbols actually - but not all
15:32 < Kakera> oh
15:35 < Kakera> but what if it's using the system OpenSSL? Where would it get the headers and symbols?
15:35 < pachet> the bindings in binding.gyp determine the bind that the addon will use for openssl
15:35 < pachet> i think you can also pass it in the form make install whatever --openssl-root="/path/to/openssl"
15:36 < pachet> same thing
15:36 < iksik> hum
15:38 < iksik> is it possible to catch all events in eventEmitter2 using wildcard and for all delimited sections at once? for example, when i emit ee.emit('foo.bar.baz'); and i want to catch it with ee.on('*'); but i can't, i need to use ee.on('*.*.*'); but then it can't handle events fired with: ee.emit('foo') ;-S
15:38 < Kakera> or is there some magic in node-gyp that automatically links against the system OpenSSL/
15:40 < bnoordhuis> Kakera: re system openssl, then you're out of luck unless the bindings author accommodates that
15:40 < Kakera> well, I'm looking at this https://github.com/TooTallNate/node-gyp/wiki/Linking-to-OpenSSL
15:41 < Kakera> and it doesn't mention that you need to link to openssl yourself
15:42 < inspiron> does mongoose allow you to use XML schemas? I know there is mongoose.schema but that is in code. Seems like external xml files would be better then in code.
15:48 < Christian87> hello
15:48 -!- ServerMode/#Node.js [+o isaacbw] by wolfe.freenode.net
15:49 < Christian87> i have a problems with ws lib it not detect when the browser crashes an client lost connection is there any method i could use to detect this
15:49 < pachet> Kakera: it doesnt say that you *have* to, but he states pretty explicitly that you're going to hit problems if you expect the node-bundled openssl to work with windows ootb
15:49 < pachet> hence the 'Windows?' header
15:50 < pachet> ah, there's where i saw that --openssl-root flag
15:50 < Kakera> pachet, not windows, but old (?) versions of node that use the system openssl
16:01 < Ov3rTaf> is there a npm module for crypting io messages ?
16:03 < jscheel> anybody use restify?
16:03 < jscheel> I'm trying to figure out what I need to do to set the max content length
16:04 < havvy> o.0 another scheel?
16:04 < jscheel> havvy: ?
16:05 < jscheel> havvy: you a scheel?
16:05 < havvy> Yeah
16:05 < jscheel> havvy: where from?
16:05 < havvy> Born in San Antonio.
16:05 < jscheel> havvy: Nashville
16:05 < havvy> Nice.
16:05 < pachet> jscheel: live there now?
16:05 < jscheel> pachet: yep
16:05 < havvy> Can't help with Restify though.
16:05 < jscheel> havvy: no worries
16:06 < jscheel> havvy: any relation to minnesota or north dakota scheel's?
16:06 < jscheel> pachet: you here in nashville?
16:06 < havvy> Nope.
16:07 < pachet> jscheel: yeah
16:07 < jscheel> pachet: awesome, you do dev here in town?
16:09 < pachet> yeah, i've been a contractor with the state for a while, recently started working for a startup in franklin
16:09 < jscheel> pachet: which startup?
16:10 < pachet> daio
16:10 < jscheel> pachet: ben?
16:10 < pachet> yeah
16:10 < jscheel> pachet: haha :)
16:11 < pachet> oh you're with populr.me
16:11 < jscheel> pachet:yep
16:13 < jscheel> pachet: daio was originally mobile prototyping
16:13 < jscheel> right?
16:13 < pachet> yeah
16:14 < pachet> still partially, they've expanded slightly to try and incorporate prototyping into a larger project management thing for designers
16:14 < pachet> hence i have a job, because i'm definitely not a mobile design type of guy
16:14 < jscheel> pachet: I met with ben when he first started up with jsf, and gave him some thoughts on what designers would look for in a tool
16:17 < jscheel> pachet: I actually talked to ben a lot about what a designer wants in project management, you might be implementing some things I suggested like two years ago :)
16:17 < pachet> haha
16:17 < pachet> most likely
16:24 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:25 < pachet> jscheel: re your original question, you'll probably have to just roll your own middleware and pass it to server.use()
16:25 < pachet> read the req data and chop off after x bytes
16:28 < jscheel> pachet: it looks like body parsers use body_reader, which gets a limit options
16:29 < jscheel> pachet: ah, bodyParser can take a limit that it will pass on to the appropriate parser
16:30 < jscheel> pachet: looks like restify's documentation is a bit out of date
16:30 < maxme> Is there a canonical Pinboard API wrapper?
16:31 < pachet> jscheel: ah, that's convenient
16:54 < tpayne> can i render a partial inside of a partial?
16:58 < aMoniker> tpayne: what are you using for a template engine?
16:58 < MI6> joyent/node: isaacs master * 55aa973 : test: Put fs write test files in tmp  This prevents fixture litter when t - http://git.io/u7AkCQ
16:59 < tpayne> express
17:00 < AAA_awright> Ugh, partials... Unfortunately no one has implemented better ways to do that
17:00 < spion> tpayne, you mean EJS
17:01 < spion> express has 2 engines, EJS and Jade
17:01 < tpayne> EJS
17:01 < havvy> Express has more than just two template engines. ;)
17:01 < spion> Indeed, but those two are the most common :)
17:01 < havvy> Also, does Express have its own channel?
17:02 < spion> and have been included by default since 2.x
17:02 < spion> and yes it does have a channel - #express
17:02 < tpayne> great thanks
17:03 < havvy> Sweet.
17:03 < spion> I really recommend switching to Jade.
17:03 < aMoniker> ejs is easy to render subpartials
17:03  * havvy wonders why most templating engines don't have template inheritance.
17:04 < havvy> (Not even PHP has it be default...)
17:04 < pachet> laziness
17:07 < aMoniker> tpayne (and anyone else who wants to render partials within partials): http://sync.in/ZGfNRyZs2K
17:07 < pachet> hey dawg
17:09 < aMoniker> buncha philistines in here, afraid to learn
17:26 < d2dchat> anyone have experience with http-proxy?
17:53 < arjunbajaj_> hey, this is very stupid question, but is the for loop synchronous? can it be async? ever?
17:55 < context> arjunbajaj_: if there is no callback method its not async. jquery has a .each method, doesnt look like Array does though
17:55 < context> even then, jquery's each is not async i dont think
17:55 < context> arjunbajaj_: anything you do inside the for should be async...
18:01 < MI6> joyent/node: isaacs master * 0928a52 : fs: Support mode/flag options to read/append/writeFile  Fix #4841 - http://git.io/a2ZsWQ
18:03 < g0z> totally random question here, has http module changed in the last few versions and if so where would a changelog be??
18:04 < havvy> g0z: The changelog is on their blog.
18:04 < havvy> You can diff the support documents too.
18:05 < havvy> They are versioned after all.
18:05 < MI6> joyent/libuv: isaacs created tag node-v0.9.11 - http://git.io/CNsx0g
18:06 < lmccart> hi, I'm trying to serve some static files but how do I prevent the linked files in the html (css, js, etc) from sending further requests to the http server
18:07 < g0z> hm don't see anything in ChangeLog that would explain this (I am an idiot who didn't see it in the binary I downloaded, sorry)
18:08 < meonkeys> g0z: maybe check https://github.com/joyent/node/blob/master/ChangeLog (search for "http")?
18:08 < harrisonm> lmccart: you can't unless you list all your styles and script tags inline in your html
18:09 < meonkeys> havvy: I'm confused, http is part of Node core/proper, right?
18:10 < havvy> meonkeys: Yes.
18:10 < havvy> Not that I've used it. So I don't know if it has changed.
18:11 < meonkeys> havvy: ok. So, seems like g0z should just read https://github.com/joyent/node/blob/master/ChangeLog or https://github.com/joyent/node/commits/master/lib/http.js
18:11 < meonkeys> havvy: ook.
18:11 < havvy> Sure.
18:12 < meonkeys> Cool. Ok, random/newbie question: How many threads are in Node.js's [internal] threadpool? Right now I see two in the output of `ps -eLf | grep [n]ode` on my system.
18:12 < meonkeys> I'm just wondering if it fires off more threads ever, or if two are always enough.
18:13 < superjoe> shit. my ruby fanboy coworker just discovered that node has defineProperty.
18:13 < meonkeys> Err, maybe one thread is the event loop, and the other is a pool of one?
18:13 < asturel> hi, im blind or there is no property for get a socket status (client , is it connected?)
18:13 < havvy> superjoe: I'm sorry.
18:13 < asturel> just the close event?
18:13 < havvy> meonkeys: I can't see for a reason for it to open more threads.
18:14 < meonkeys> havvy: I can't either... just curious. Maybe there's just some thing(s) you can't do async? stat'ing a file or something?
18:15 < nerph> what's the best prcess
18:15 < nerph> process for running node.js as a windows service
18:22 < MI6> joyent/node: isaacs created branch v0.9.11-release - http://git.io/-6VFcw
18:24 < g0z> hm
18:25 < MI6> joyent/node: isaacs v0.9.11-release * d9e294b : 2013.03.01, Version 0.9.10 (Unstable)  * V8: downgrade 3.14.5  * openssl: (+1 more commits) - http://git.io/85Ez3w
18:26 < g0z> I don't think this is an http issue but this is weird as hell. I have one http.request() what works and one that doesn't. they are both to the same host, dumping the http object after 'end' of both results in the same object according to 'diff'.
18:27 < g0z> these are 2 different scripts btw, I just cloned it and ran it on it's own to see if I could duplicate it and I can't.
18:28 < g0z> (cloned the request I mean)
18:28 < g0z> I should use tcpdump to see wtf this thing si doing if anything I guess
18:30 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:32 < wwicks> sreuter: Thanks for the star on https://github.com/williamwicks/ipp !
18:33 < sreuter> wwicks: sure thang ;-)
18:34 < RafaelJS> Good afternoon for all.
18:34 < imsky> hello javascript library
18:35 < imsky> since you're self-aware, i'm assuming skynet is operational
18:37 < RafaelJS> So, I think I´m in a proper place to ask my question. I´m forcing a "blocking code" on nodejs calling "exec" from child_process library. My question is.. during my call for example child = exec("node myfile.js ",callbackFunction)  is possible to call only a specific function from the file "myfile.js" ? I mean.. call junst a function called x() inside the muFile.js instead run entire file.
18:39 < chakrit> RafaelJS pass arguments via the command line and check for it in myfile.js?
18:40 < RafaelJS> yes <chakrit> it is exactly what I want to do..
18:42 < Musk> imsky …  Skype + Internet = Skynet
18:43 < Musk> imsky http://en.wikipedia.org/wiki/Skynet_(satellite) 
18:43 < imsky> wow cool link bro
18:43 < pquerna> dig -t AAAA www.apache.org
18:44 < Musk> just to say no matter how u place it… its fair to say that yes SKYNET is active.
18:45 < Tyler___> can anyone here help me out real quick?
18:46 < Tyler___> I have access to my webserver through winscp but need to know how to install nodejs and run a server script
18:47 < Tyler___> any help would be greatly appreciated
18:47 < niggler> use ssh
18:48 < Tyler___> what should i do with ssh?
18:48 < nerph> tunnel vmc over ssh and run the installer...
18:48 < nerph> vnc*
18:49 < Tyler___> I only have the windows installer how would i install it over ssh?
18:49 < nerph> do you have vmc on the server?
18:50 < Tyler___> I don't believe so
18:50 < nerph> i think you can tunnel remote desktop over ssh also
18:51 < Tyler___> where could i get info on how to do this?
18:51 < Tyler___> I just have access through winscp right now
18:52 < nerph> can you install putty?
18:52 < Tyler___> I do have putty
18:52 < nerph> google remote desktop and ssh, should get you going
18:53 < Tyler___> I had access through putty before but get WinSCP: this is end-of-file:0 whenever I run a command
18:53 < Tyler___> I will look into that though thanks
18:58 < Bonuspunkt> anyone ever expirienced something like Error: 140627108480800:error:0607907F:digital envelope routines:EVP_PKEY_get1_RSA:expecting an rsa key:../deps/openssl/openssl/crypto/evp/p_lib.c:288
19:01 < MI6> joyent/node: isaacs master * 687522c : blog: Do not pass undefined to path.join - http://git.io/xCliww
19:03 < MI6> joyent/node: isaacs v0.9.11-release * 8339240 : 2013.03.01, Version 0.9.10 (Unstable)  * V8: downgrade 3.14.5  * openssl: - http://git.io/P9_DmQ
19:08 < Voting> My server (node) and my client (chrom) will need to make requests via JSON-RPC. I have no experience with this. Should I be using specific libraries? Can folks point me a web pages I should read? My new employer  uses JSON-RPC as the transport for nearly everything and they get really deep with this stuff. Ideas?
19:20 < base698> Voting: For Node or for the Client?  Express is good about parsing json requests into the request.body.  JSON requests can be made with jQuery or any ajax-y framework on the client.  
19:21 < Voting> base698: Do you recommend I use jQuery's ajax method to send requests on the client? 
19:22 < Voting> base698: What lib should I use to send them from node.js? 
19:22 < MI6> joyent/node: isaacs created tag v0.9.11 - http://git.io/AAnqTw
19:22 < base698> do you mean from node to another server or back to the client?
19:23 < MI6> joyent/node: isaacs master * 4cda016 : Now working on 0.9.12 (+2 more commits) - http://git.io/IvYQrg
19:23 < Voting> base698: My js code will be the client for all these JsonRPC requests so far. 
19:23 < Voting> base698: my new employer has lots of services that they have implemented here.
19:24 < sshaginyan> How guys how do I splice an array's beginning and ending elements?
19:24 < sshaginyan> so [0,1,2,3,4] becomes [1,2,3]
19:25 < Voting> base698: I am not currently being asked to implement new ones in js - just to use ones that exist currrently.
19:26 < base698> Not clear on what you're asking then.  If you aren't building anything in node just use jquery or the like to make the requests
19:26 < brettlangdon> sshaginyan, you can use Array.shift and Array.pop, to remove the first and last elements
19:27 < gildean> sshaginyan: var arr = [0,1,2,3,4]; arr.slice(1, arr.length - 1);
19:27 < MI6> joyent/node: isaacs master * 33aafbd : doc: Correct version in changelog - http://git.io/lk2PIw
19:27 < gildean> >> var arr = [0,1,2,3,4]; return arr.slice(1, arr.length - 1);
19:27 < purr> gildean: SyntaxError: Illegal return statement
19:27 < gildean> >> var arr = [0,1,2,3,4]; arr.slice(1, arr.length - 1);
19:27 < purr> gildean: (object) [1, 2, 3]
19:28 < MI6> joyent/node: isaacs v0.8 * be770a3 : blog: Post about v0.9.11 - http://git.io/0fLxRA
19:31 < sshaginyan> is for(x in y) forloop nonblocking?
19:31 < sshaginyan> it is right no callbacks :)
19:31 -!- Topic for #Node.js: "node.js rules!" - mscdex
19:31 -!- Topic set by ryah [~ry@97.107.132.72] [Thu Feb 28 18:21:03 2013]
19:31 < sshaginyan> then why do people say a forEach loop is blocking?
19:31 <@isaacs> sshaginyan: because it is :)
19:31 < havvy> sshaginyan: Both for loops and forEach loops are blocking.
19:31 < sshaginyan> if it has no I/O
19:32 <@isaacs> sshaginyan: console.log('before'); [1,2,3].forEach(function(){console.log('inside')}); console.log('outside')
19:32 < havvy> sshaginyan: I/O doesn't block doesn't mean nothing blocks.
19:32 < sshaginyan> I thought blocking ment it's doing I/O
19:32 <@isaacs> sshaginyan: well, it doesn't "block" in the lowlevel cpu sense.
19:32 <@isaacs> sshaginyan: but "block" is also used colloquially to mean "doing some work and not yielding"
19:32 <@isaacs> sshaginyan: ie, synchronous
19:32 < havvy> sshaginyan: It's blocking all the other code from running. ;)
19:33 < sshaginyan> k
19:33 < ben_alman_> is there a way via require() to get to a module's package.json file?
19:33 -!- isaacs changed the topic of #Node.js to: "node.js rules!" - mscdex - http://logs.nodejs.org/
19:33 < ben_alman_> i know require.resolve() will get you to the main script file
19:34 < wwicks> I was wondering how long the logs url would be gone
19:42 < gildean> isaacs: maybe add the /nodejs to the url in the topic, and separate the subjects with ||
19:42 < gildean> isaacs: just nitpicking
19:46 < tpayne> i have a route for /hello and /world and /goodmorning and i want all 3 of these to match. How can i do this?
19:47 < havvy> //(hello|world|goodmorning)/
19:47 < havvy> /\/(hello|world|goodmorning)/
19:47 < tjfontaine> GUG -- generall utc greeting
19:49 < wwicks> havvy: don't forget to start with ^ and end with $
19:49 < tpayne> havvy: in context of app.get i have app.get('/(hello|world|goodmorning)', function(req, res) { ... });
19:49 < havvy> Ah, true.
19:50 < tpayne> but this doesn't work
19:50 < havvy> tpayne: That's because that isn't a regex.
19:51 < tpayne> havvy: what am i missing in context of app.get
19:51 < erione> i'm not able to access the stdio's of child_process after i upgraded my node from 0.6.11 to 0.8.18
19:51 < wwicks> tpayne: don't put it in quotes… send in the regex
19:51 < tpayne> i always get confused with regex outside of context
19:51 < havvy> app.get(/^\/(hello|world|goodmorning)/)
19:51 < wwicks> app.get(/^\/(hello|world|goodmorning)$/)
19:52 < wwicks> :P
19:52 -!- isaacs changed the topic of #Node.js to: _ry]  "node.js rules!" - mscdex - http://logs.nodejs.org/
19:52 < erione> it seems like that the API has changed. can some please help me out?
19:52 -!- isaacs changed the topic of #Node.js to: "node.js rules!" - mscdex - http://logs.nodejs.org/ - no nitpicking allowed
19:52 <@isaacs> gildean: ;P
19:52 < wwicks> lol
19:52 < tpayne> havvy: ok that worked
19:53 < tpayne> but now i have one more problem, after support something like /hello/:var1/:var2/:var3
19:53 < tpayne> i need to*
19:53 < sreuter> Distributed app tracking anyone? https://github.com/sreuter/node-trackable ... Let me know what you think!
19:53 < tpayne> and since it's no longer a string, not sure how to incorporate that in now
19:53 < havvy> tpayne: Do you know regex?
19:53 < gildean> isaacs: fine then, have it your way
19:54 < tpayne> a little rusty
19:56 < tpayne> hmm i think i found a way where i can continue to use a string
19:56 < tpayne> app.get('/:type(hello|world|goodmorning)/:var1'...
19:57 < tpayne> awesome, that worked, thanks
20:11 < erione> bnoordhuis: ping
20:13 < baranaby> hey all, anyone using Zombie.js? I'm baffled as to the debug output when I visit a page. I get "Unexpected token ; SyntaxError: Unexpected token ;" but presumably there should be a line number/filename I can look at... ugh :/
20:14 < bnoordhuis> erione: pong
20:14 -!- mode/#Node.js [+o sblom] by ChanServ
20:36 < samholmes> Hello everyone!
20:41 < samholmes> What IRC clients do most of you use here?
20:41 < aMoniker> samholmes: Colloquy
20:41 < cris_> Im using LimeChat, but I know nothing about IRC
20:42 < samholmes> I'm using limechat too
20:42 < samholmes> I don't like how it depends on you being connected to the internet thoug
20:42 < samholmes> though
20:42 < samholmes> if only there was a way to get a back log of all the channels
20:43 < aMoniker> use a bouncer
20:45 < gkatsev> or vps/server+screen/tmux+irssi/weechat.
20:52 < rhye> does having nginx installed create a problem with socket.io?
20:53 < `3rdEden> is there a decent way of accessing the raw HTTP request headers?
20:53 < rhye> i have nginx serving on port 80 and node express/socket server on 8080
20:53 < rhye> but i can't get web sockets to work at all
20:54 < echo|> rhye: Nginx doesn't play nicely with websockets.
20:54 < rhye> but assuming i'm running them on different ports it shouldn't matter though right?
20:54 < echo|> rhye: Are you proxying to 8080 over 80 via nginx?
20:55 < rhye> i'm currently running the devel version of nginx with web socket support
20:55 < rhye> and forwarding that
20:55 < rhye> but i've tried without it
20:55 < rhye> when nginx isn't running i mean
20:55 < rhye> and it still doesn't work....
20:56 < echo|> Ahhh, I was just about to say there's a dev version that claims to have websocket over proxy working. But, I haven't tried it for myself.
20:57 < echo|> If you can produce tests, you might be able to get some help on an nginx mailing list. 
21:04 -!- mode/#Node.js [+o TooTallNate] by ChanServ
21:15 < Shini_> I am trying to do what this person wanted here: http://stackoverflow.com/questions/14256330/push-notifications-using-node-js-socket-io-on-apache-web-server He said on a reply that he had help from you guys and managed to get it working with the code he provided on his reply, but when I open my html file in my Apache web folder, I am not getting any responses on the page, nor in my node.js cmd line.
21:19 < cloudbender> good afternoon
21:20 < cloudbender> Has anyone written a network packet sniffer or traffic meter in node ?
21:20 < cloudbender> I need to track bandwitdth, not packets, really.
21:29 < someprimetime> I'm using express.js and wanted to download a remote file (image)... is there a correct way to do this with express (without reinventing the wheel) or should I do it the node way which I found would be something like this: http://stackoverflow.com/questions/7288814/download-file-from-nodejs-server ?
21:31 < jhsto> someprimetime, https://github.com/mikeal/request ?
21:31 < garciawebdev> is it right to use NPM to handle browser dependencies? or i should definetly shift to browser-based package managers like Jam for that?
21:33 < havvy> garciawebdev: Use NPM for what it says on the tin.  "Node Package Manager"
21:33 < garciawebdev> havvy: ok, i thought it would work to use NPM also for browser packages like Handlebars and Sugar. i'll try Jam
21:34 < MI6> joyent/node: Scott Blomquist master * 6366a30 : build/windows: don't use wrong version number  We were using a global tem - http://git.io/hdxKzA
21:35 < someprimetime> jhsto: very cool.. should I be using this over just my own thing or is it generally better to just use a module?
21:35 < someprimetime> Actually this is awesoem
21:35 < someprimetime> s/em/me
21:35 < someprimetime> request.get('http://google.com/img.png').pipe(request.put('http://mysite.com/img.png'))  exactly what I want.
21:36 < jhsto> someprimetime, i usually search for existing modules before inventing my own
21:37 < someprimetime> Sounds good to me, thanks jhsto
21:37 < jhsto> np
21:37 < AAA_awright> If it's something trivial to do yourself, avoid modules at all. There's nothing wrong with an extra 3-4 lines of code if it helps readability
21:38 < AAA_awright> er, s/all/altogether/
21:38 < darthdeus> guys, anyone got experience with the postgres package? i have connection string "tcp://catsocket:catsocket@localhost/catsocket_app_test", but it doesn't connect saying "no pg_hba.conf entry for host "12.34.56.78" (ip of the server) ... any idea why it's not using localhost?
21:39 < AAA_awright> darthdeus: Is localhost set to something other than 127.0.0.1?
21:39 < darthdeus> AAA_awright: omg i love you :D yes my /etc/hosts is stupid
21:41 < AAA_awright> I'm just a small-time code psychic
21:41 < AAA_awright> darthdeus: Isn't there a unix socketoption? Usually I spring for that
21:43 < Gambit--> So if I do var socket = net.createConnection(...); can I pass that socket into http or other libraries, so that I can then do an http.request(...) or equivilant behavior?
21:51 < darthdeus> AAA_awright: yeah there probably is :) i should try that
21:52 < glosoli> Evenin' folks, I am curious is there some way to achieve this: I have a project which references some of the libraries that are found in NPM like underscore via require('')  and when I build that project for deploying in web I want to somehow add that file in some appropriate dir, (at the moment doing that via copy task and underscore submodule) curious if there are some better ways as I am new to this thing
21:57 < SomeoneWeird> glosoli, npm install?
21:58 < glosoli> SomeoneWeird: nah, to be honest I am trying to put some static files inside bitbucket account, which can be accessed so I just have some kind of storage space for static files which can be accessed from ww
21:59 < SomeoneWeird> oic
21:59 < SomeoneWeird> you can put git repos in package.json 
21:59 < SomeoneWeird> that might work
22:00 < glosoli> ok thanks, may I ask you what do you use to code for node.js ? 
22:00 < glosoli> I mean tool
22:09 < darthdeus> AAA_awright: hm but this brings the question ... how do i specify the socket in the connection string?
22:10 < gluxon> darthdeus: Specific what part of the socket?
22:11 < gluxon> TCP vs UDP? Address? Port? Is this a server or a client..?
22:12 < darthdeus> gluxon: unix file socket, i tried specifying "/var/run/postgresql"  but it's trying to reach ""/var/run/postgresql/.s.PGSQL.5432/.s.PGSQL.5432"
22:13 < darthdeus> which is really weird
22:13 < darthdeus> because the socket is there, i'm not sure why it's doing it like that
22:14 < gluxon> darthdeus: In your first path, postgresql is a file. In the second.. it is a folder?
22:14 < darthdeus> gluxon: no it's a folder in both, there's no file named postgresql
22:15 < darthdeus> i've tried removing/adding the trailing slash
22:15 < darthdeus> gluxon: http://i.imgur.com/xaZuHpJ.png
22:20 -!- isaacs changed the topic of #Node.js to: "have it your way" - gildean || http://nodejs.org || http://logs.nodejs.org || http://en.wikipedia.org/wiki/Nodejs || http://stackoverflow.com/questions/tagged/node.js
22:23 < samholmes> gkatsev: Which do you use?
22:24 < gkatsev> samholmes: I have irssi running remotely in a screen session.
22:24 < sorensen> heyo
22:24 < samholmes> gkatsev: how do you pronounce irssi?
22:25 < sorensen> err see
22:25 < gkatsev> I usually just spell it out. Some people pronouncy it as `eersee`
22:25 < MI6> joyent/node: Evan Oxfeld master * 16ddc54 : doc: Fix readable.unshift() example  Slice the portion of the buffer to u - http://git.io/GDE65A
22:25 < sorensen> does anyone know of a general migration lib?
22:25 < gkatsev> those people also often pronounce IRC as irk
22:26 < sorensen> ah, i do spell irc out
22:26 < sorensen> eye are see
22:26 < gkatsev> heh
22:26 < samholmes> ear see or err see?
22:27 < gkatsev> do you pronounce /etc as etsy?
22:27 < sorensen> i spell it out
22:27 < sorensen> i just sound out words mang
22:27 < sorensen> lol
22:27 < sorensen> if i cant i spell em
22:28 < havvy> I R Sissy  ;)
22:28 < havvy> gkatsev: I say 'ectetera'. :/
22:28 < havvy> Even though that's *NOT* what it means.
22:28 < someprimetime> I just say etsy.com
22:28 < samholmes> When I say google.com
22:28 < gkatsev> havvy: lol
22:28 < samholmes> I say geeohoheleedotcom
22:29 < samholmes> XD
22:29 < s5fs> I'm having trouble with socket.io over ssl, when I load my client page it doesn't set up the websocket, I get a "101 Switching Protocols" message and the connection is never established.
22:29 < samholmes> So, do you have to SSH into your server in order to pull up the screen with irssi running?
22:29 < s5fs> This is odd because it works on my local workstation but not on my target platform (beagleboard).
22:30 < MI6> joyent/node: isaacs master * fc22986 : doc: Clarify advisory-ness of stream._read() argument (+1 more commits) - http://git.io/O0-PeA
22:30 < gkatsev> samholmes: yep, I do ssh, but you can set up something like irssi-proxy to connect to running session, though, that won't show you the backlog (though, backlog would be available over ssh)
22:30 < gkatsev> samholmes: also, I use irssi-notifier for android and irssi script to notify me of messages
22:32 < samholmes> Isn't it a bit much to have to ssh to just launch IRC?
22:33 < glosoli> samholmes: hmm use irssi
22:33 < glosoli> ;d
22:33 < kanongil> isaacbw: It seems to me that the Readable interface need a standard way to abort the processing from a consumer, or should I just call push(null)?
22:34 < gkatsev> samholmes: nah
22:35 < samholmes> gkatsev: What if we, you and I, made a web app that connects to our VPSes/servers which enables use to access a persistent IRC client? :D
22:35 < Gambit--> So if I do var socket = net.createConnection(...); can I pass that socket into http or other libraries, so that I can then do an http.request(...) or equivilant behavior?  It looks like for http at least I can pass in an options.createConnection function.  Is that true for all other modules?
22:35 < samholmes> It could be a open source project running on opensource.jit.su
22:36 < gkatsev> samholmes: irccloud.com
22:36 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:41 < samholmes> gkatsev: Cool!
22:41 < samholmes> Thanks
22:41 < gkatsev> there also other bouncers available
22:42 < samholmes> bouncers?
22:42 < gkatsev> irc bouncers
22:42 < samholmes> oh
22:42 < s5fs> I can't seem to use socket.io over websockets, but xhr-polling works. Any suggestions would be appreciated.
22:42 < samholmes> I'm more interested in a OSS that's hosted on github and build using node.js
22:43 < samholmes> an OSS*
22:43 < samholmes> Something that anyone can contribute to.
22:43 < samholmes> But it could work as an application that is launch-able in Mac.
22:43 < EhevuTov> anyone know of a compression proxy module? For instance, I send non-compressed data to a proxy that is then compressed and sent to a far-end that gets uncompressed
22:44 < EhevuTov> it might be so trivial to not even need a module, just by using net, zlib, streams
22:51 < addisonj> quick express question, if I am writing a middleware that I want to work for 2.x and 3.x, is there a way to detect which version version they have?
22:52 < sorensen> addisonj: require('express').version
22:53 < addisonj> sorensen: hrm, what if I don't want to depend on express (middleware is just an optional component for a module), anyway to tell from the req and res object?
22:54 < sorensen> not that i know of
22:54 < addisonj> I guess I could just do a try catch...
22:54 < sorensen> but i think its either you want to make a module that supports both or one or the other
22:54 < sorensen> yes you could
22:54 < sorensen> i think you are fine just doing express 3.x
22:56 < vatson> hi guys
22:56 < vatson> what convention do you prefer for mongoose fields? I mean underscore vs camelCase
22:57 < vatson> Is there some best practice?
23:00 < sorensen> vatson: it doesnt matter
23:00 < sorensen> its more about how you like your mongoDB fields
23:00 < sorensen> i would always go in favor of the DB over the language
23:00 < sorensen> in any language
23:02 < vatson> sorensen: sure. it's more a matter of faith. But more common is to use camel case in source js
23:03 < sorensen> vatson: its not about the JS ;)
23:03 < sorensen> i would never use camelcase in mysql just because my primary app was JS
23:04 < sorensen> its about what you should use in mongo
23:06 < vatson> but then we have to add getters if we want to use same convention in all code
23:06 < sorensen> vatson: i realize
23:07 < sorensen> its to each their own though, i prefer db fields to use underscores, html and css to use hiphens, and js to use camelcase
23:07 < sorensen> js is just glue imo
23:07 < sorensen> as with any language
23:07 < vatson> indeed
23:07 < sorensen> so i would go with the conventions of the DB first
23:07 < sorensen> mongoDB doesnt really matter imo, you could juse either one
23:08 < sorensen> my only point is to think of the DB first when it comes to that
23:09 < vatson> sorensen: there is one more point from mongodb's developers http://docs.mongodb.org/manual/faq/developers/#faq-small-documents
23:09 < sorensen> thats not about casing
23:10 < vatson> sure
23:10 < sorensen> and i would say those docs show that the creators faith is to use underscores
23:10 < vatson> Yeah. It's well known fact that mongo guys prefer underscore
23:11 < sorensen> for modules i try to avoid the issue, by either using single word props or letting the user to override fields
23:11 < sorensen> vatson: then that should answer your original question
23:11 < tanepiper> is anyone using webstorm managed to get it to pick up local node_modules for autocomplete?
23:11 < sorensen> and dont get me wrong, i always prefer camel case
23:12 < icodeforlove> @vatson it seems like mongodb is horrible for storing millions of tiny documents
23:12 < vatson> icodeforlove: what db do you suggest for this purpose?
23:14 < icodeforlove> @vatson is there anything wrong with good old postgresql?
23:14 < sorensen> vatson: whatever your diligent research tells you you should use
23:14 < sorensen> millions of tiny docs? are they to be stored forever? whats the use case?
23:14 < sorensen> lots of questions to ask when choosing a db
23:14 < sorensen> you could use redis for speed if they arent important
23:15 < icodeforlove> @vatson i just don't like that you have to sacrifice on your object key names for mongodb
23:15 < sorensen> icodeforlove: how do you mean?
23:15 < icodeforlove> @vatson the doc page suggested "If you shorten the filed named last_name to lname and the field name best_score to score, as follows, you could save 9 bytes per document."
23:15 < icodeforlove> @vatson thats a sad optimization :(
23:16 < sorensen> ...
23:16 < sorensen> its a document store
23:16 < sorensen> key names add to bytes
23:16 < icodeforlove> which means you probably need a different DB
23:16 < sorensen> you will have the same problem with postgres / mysql
23:16 < sorensen> since you are going to allocate space for each field in a row even if you arent using it
23:16 < vatson> nope
23:17 < icodeforlove> @vatson not if you know the data you're putting into it, like the example is showing
23:17 < sorensen> that is a very short sided argument
23:18 < vatson> sorensen: icodeforlove is upset that mongodb is schemeless db and should store extra info for each field
23:18 < vatson> of each document
23:18 < sorensen> which makes me think he doenst quite understand what mongodb does, and why thats a very bad thing when suggesting someone change db's based on that little information
23:18 < icodeforlove> not change
23:19 < icodeforlove> you may need to use two
23:19 < sorensen> it would be the same as suggesting to not use any sql based db because each row space is allocated the same way
23:19 < sorensen> vatson: db's are not to be taken lightly if you are going to be using them for anything production, you should definately do research on what you pick
23:20 < sorensen> i would suggest asking specific questions about them, not leaving it up to which you should choose
23:20 < icodeforlove> @sorensen and i agree with you
23:21 < sorensen> i'm not advocating for one db vs. the other
23:21 < sorensen> which i think in general we shouldnt do unless you know the exact needs of an app
23:22 < sorensen> generally i use either redis or mysql
23:22 < sorensen> currently using couchbase
23:22 < icodeforlove> @soresen which are great, but i have seen lots of abuse with these nosql databases
23:24 < vatson> sorensen: the main task would be to store the documents "folder" with attached documents "file". Something like a network fs
23:24 < vatson> of course in db I'll store only information about these files
23:24 < vatson> not contnet
23:24 < sorensen> i really cant suggest a db, i think you should research this
23:25 < sorensen> i'm just a simple JS developer
23:25 < sorensen> :)
23:25 < vatson> I got it :)
23:32 < flybyme> can someone help me with this error
23:32 < flybyme> https://gist.github.com/FLYBYME/5068769
23:32 < flybyme> Error: error:24064064:random number generator:SSLEAY_RAND_BYTES:PRNG not seeded
23:32 < flybyme> its some kinda ssl error
23:38 < kanongil> flybyme: http://www.openssl.org/support/faq.html#USER1
23:41 < flybyme> can i link to /dev/urandom?
23:42 < flybyme> im running the process with chroot using deamon
23:42 < kanongil> ah, makes more sense then
23:42 < kanongil> since chroot will miss /dev/random
23:44 < base698> hjjk
23:44 < base698> oops, sorry
23:45 < flybyme> kanongil> do you happen to know a list of paths that node would need to have for it to run?
23:47 < kanongil> no, I haven't used chroot
23:57 <@mbalho> what is the syntax for specifying a git repo + branch in package.json deps?
23:59 < st_luke> mbalho: git://github.com/user/repo.git and I think you do branch with a hash
23:59 < st_luke> like git://github.com/user/repo.git#master
23:59 <@mbalho> st_luke: AHHH
23:59 <@mbalho> thx
--- Log closed Sat Mar 02 00:00:01 2013
