--- Log opened Fri Nov 16 00:00:16 2012
00:04 < aettinger> astropirate: you listen to knbr?
00:04 < astropirate> aettinger, nope
00:04 < astropirate> don't know what that/he/she is
00:04 < astropirate>  /who
00:05 < aettinger> nm
00:12 < Raynos> github down?
00:12 < blazes816> surprisingly no
00:18 < CoverSlide|TPFR> Raynos: https://status.github.com/
00:20 < AnthonyCat> CoverSlide|TPFR: I think that page just changed, now it has an outage
00:21 < CoverSlide|TPFR> oh noes!
00:22 < AnthonyCat> back up again now :)
00:23 < CoverSlide|TPFR> yay!
00:25 < mmalecki> tnorris: please
00:25 < mmalecki> I'll forget otherwise
00:25 < tnorris> will do
00:25 < JohnnyL> excuse me... but where the fuck do I find the latest version number on the internet of npm?
00:26 < mmalecki> npm show npm version
00:26 < JohnnyL> no
00:26 < JohnnyL> on the internet
00:26 < mmalecki> oh, query the registry then
00:26 < JohnnyL> ?
00:26 < mks_> https://github.com/isaacs/npm/blob/master/package.json
00:26 < mmalecki> http://registry.npmjs.org/npm
00:27 < JohnnyL> ok
00:27 < JohnnyL> thanks
00:27 < JohnnyL> but you really should have it on the download page.
00:27 < JohnnyL> does this make sense to you?
00:27 < mmalecki> what for?
00:28 < JohnnyL> because I *don't* want people to know what version of npm they should get.
00:28 < mmalecki> npm is installed with node these days
00:29 < mmalecki> also `npm up npm -g`
00:29 < JohnnyL> ok but what does that have to do the price of eggs in europe
00:29 < JohnnyL> ?
00:32 < niggler> what's a good file extension for javascript that you only intend to run in nodejs
00:33 <@mbalho> .antipattern
00:33 < mscdex> .js
00:33 < mscdex> :-)
00:33 < matbee> .node.js
00:33 < matbee> lol
00:33 < niggler> so I've been using .njs
00:33 < matbee> cool story
00:34 < niggler> I'm wondering if there's an actual standard
00:39 < heathjs> the second file in this paste shows where the user's input cursor is located: https://gist.github.com/b3f2271cfa2873f5c3ad i'd like for it to be like this > []
00:40 < garbagecollectio> is this the right query
00:40 < garbagecollectio> db.regions.findOne({ "FTA ID 2": {$regex: "/^9015/"}});
00:40 < garbagecollectio> for mongo
00:40 < heathjs> any ideas why the s letters are showing up and the cursor is located after them instead of after the greater than symbol?
00:41 < heathjs> niggler: an actual standard for...?
00:42 < niggler> oh heathjs for file extensions for node-specific js
00:42 < niggler> there's .node but that's for binary iirc
00:42 < thyb> Hi, me and friends developed a platform on node.js to combine APIs easily using javascript syntaxe. I need some feedbacks from node.js people interested in using lots of APIs. take a look at http://webshell.io & say me your impression plz :)
00:42 < heathjs> put something like this at the top of your file i guess...  #! /usr/bin/env node
00:43 < jon__> Howdy! probably a question that gets asked over an over (sorry). To convince my company to adopt node, I've been asked to point to companies and documented solutions of how node has been used? Any good links available?
00:44 < heathjs> jon__: see nodejitsu
00:44 < niggler> heathjs: i was hoping there was a standard file extension people used
00:44 < heathjs> .js
00:44 < heathjs> jon__: also see the company who owns the rights to node.js
00:44 < heathjs> i.e. joyent
00:45 < jon__> I guess what we're looking for are details on say how team at Uber, eBay, LinkedIn or other companies have architected solutions
00:45 < heathjs> eh...
00:46 < niggler> jon__: https://github.com/joyent/node/wiki/Projects,-Applications,-and-Companies-Using-Node
00:49 < jon__> niggler, thanks, this is exactly what we're after - but I was wondering if there are some famous/awesome blog posts with details of the designs 
00:49 < sdouble> no, there are no facebooks/twitters/ebays/etc/etc
00:49 < niggler> jon__: i bet some of those companies have technical blogs
00:49 < sdouble> if that's what you're wondering
00:49 <@konobi> jon__: linkedin and voxer
00:49 < jon__> ok, will start digging, appreciate the direction!
00:49 < niggler> sdouble: i think jon__ is going to build that big application
00:49 <@konobi> all the linkedin mobile stuff is node.js driven... they have some blog posts areound that
00:49 <@konobi> and voxer have plenty of blog posts
00:50 < devatwork> hey, im trying to send a json object via post/get arguments. Is there a way to do so ?
00:50 < devatwork> i tried stringify on the object and then sending it, but the post/get argument on the other end is empty 
00:51 < niggler> jon__ my google fu is failing me but http://engineering.linkedin.com/nodejs/blazing-fast-nodejs-10-performance-tips-linkedin-mobile is an exampke
00:51 < niggler> 
00:52 < jon__> wonderful, thank you niggler
00:57 < ack006> wow github has some serious iron running stuff, downloading illumos-joyent-master as a tarball in < 2 minutes?? gottabekidding, but true.
00:57 < ack006> melikes :-)
00:58 < noobzilla642> Gonna be honest here, I'm new to JS, but I understand scripting pretty well, any good places to look?
00:59 < heathjs> k
00:59 < heathjs> console.log
00:59 < heathjs> derp
00:59 < heathjs> guess readline can only handle one line for some strange reason
01:00 < garbagecollectio> why is this throwing syntax error
01:00 < garbagecollectio> collection.findOne({ $where: "" + regex2.test(this['FTA ID2']) + ""})
01:00 < TehShrike> Are these "exception"s Error objects, or something else? http://nodejs.org/api/stream.html#stream_event_error_1
01:01 < devatwork> my post/get variable ends up being mary.php?data=%7B
01:05 < garbagecollectio> does nodejs have test for regex expressions
01:05 < garbagecollectio> Object /^1641.*/ has no method 'test'?
01:05 < TehShrike> garbagecollectio: it's built into JS, not node
01:05 < TehShrike> garbagecollectio: https://developer.mozilla.org/en-US/docs/Javascript/Reference/Global_Objects/RegExp#RegExp_instances-Properties
01:05 < garbagecollectio> when declaring regex
01:05 < garbagecollectio> regex2 = "/^" + sAcct + ".*/";
01:05 < garbagecollectio> can i do that
01:05 < TehShrike> Nope
01:05 < garbagecollectio> or do i have to do new regex or something
01:05 < TehShrike> You'd have to construct a new Regex
01:05 < garbagecollectio> yeah how do i do that
01:05 < TehShrike> Click the link I posted
01:05 < TehShrike> Read that page
01:05 < TehShrike> It is full of enlightenment and good things
01:05 < garbagecollectio> please just tell me i have so many screens open and have been up for days for work
01:05 < garbagecollectio> its hurting me
01:05 < garbagecollectio> even though i know ur intentions are good
01:05 < TehShrike> Then sleep!
01:06 < garbagecollectio> i cant my company is a global monopoloy that will fire me and take away my paycheck in a critical time
01:08 < TehShrike> Look, I don't mean to be cold, but it's right there at the top of the page - is clicking on a link that scary?
01:08 < garbagecollectio> is it this
01:08 < garbagecollectio> new RegExp
01:08 < TehShrike> If the JavaScript documentation is unattainable for you, things are only going to get rougher
01:08 < TehShrike> https://developer.mozilla.org/en-US/docs/Javascript/Reference/Global_Objects/RegExp#Description
01:08 <@konobi> mdn++
01:08 < TehShrike> Word.
01:08 < garbagecollectio> fuck
01:08 < garbagecollectio> TypeError: object is not a function
01:08 < garbagecollectio> in mondo
01:08 < garbagecollectio> mongo
01:08 < TehShrike> MDN is so awesome.  I wish Google was as good at documentation as Mozilla
01:08 < garbagecollectio> wtf
01:09 < aettinger> garbagecollectio: what is the code?
01:09 < CoverSlide|TPFR> MDN is a community site
01:09 < CoverSlide|TPFR> it's like wikipedia for the web
01:09 < aettinger> i do all js searches with " mdn" in them now
01:09 < aettinger> otherwise you end up on w3schools
01:09 < TehShrike> Are there any mirrors?
01:09 < TehShrike> aettinger: yup, same here
01:09 < garbagecollectio> regex2 = new RegExp("/^" + sAcct + ".*/");
01:09 < aettinger> or stackoverflow
01:10 < garbagecollectio> collection.findOne({ $where: "" + regex2.test(this['FTA ID2']) + ""}), function(err, data) {
01:10 < garbagecollectio>       console.log('my data is' + data);
01:10 < aettinger> "foreach arrays stackoverflow"
01:10 < garbagecollectio> maybe mongoose cant handle $where like command line 
01:10 < garbagecollectio> can?
01:10 < aettinger> garbagecollectio: it probably didn't findOne
01:10 < aettinger> check err
01:10 < aettinger> data is undefined
01:10 < aettinger> ?
01:10 < garbagecollectio> no
01:10 < garbagecollectio> it is
01:11 < garbagecollectio> but it stops before it gets there
01:11 < aettinger> i haven't used $where
01:11 < aettinger> findOne().where().exec(fn)
01:12 < aettinger> and im' not sure what your regex is returning
01:12 < CoverSlide|TPFR> omg greatest band name ever: harpoontang!
01:15 < garbagecollectio> huh
01:16 <@konobi> does findOne even take an object? or does it take an object?
01:16 <@konobi> um... function
01:16 < garbagecollectio> it takes object
01:16 < garbagecollectio> but when i console.log my 
01:16 < garbagecollectio> regex variable
01:16 < garbagecollectio> its blank
01:18 < garbagecollectio> my regex is retunring this
01:18 < garbagecollectio> /^1641.*//
01:19 <@konobi> don't use / /
01:19 < garbagecollectio> /^1641.*//
01:19 < garbagecollectio> sorry //^1641.*//
01:19 <@konobi> it's either a string, or a /
01:19 < garbagecollectio> regex2 = new RegExp("/^" + sAcct + ".*/");
01:20 <@konobi> no
01:20 < garbagecollectio> no slashes
01:20 < garbagecollectio> ?
01:20 <@konobi> bingo
01:21 < garbagecollectio> fuck
01:21 < garbagecollectio> when querying the datbase i still get
01:21 < garbagecollectio> TypeError: object is not a function
01:22 < chapel> garbagecollectio: got a current gist of your code?
01:22 < garbagecollectio> yea
01:24 <@konobi> why are you wrapping a function in empty quotes?
01:24 < garbagecollectio> code
01:24 < garbagecollectio> http://pastebin.com/6Cvpaf8J
01:24 < garbagecollectio> wrapping a function in empty quotes?
01:25 < garbagecollectio> i took those out
01:25 < garbagecollectio> still a problem
01:25 < garbagecollectio> object is ot a function
01:25 < garbagecollectio>     if(items.length == 1) return callback(null, items[0]);
01:26 < garbagecollectio> opt/node2/node_modules/mongoose/node_modules/mongodb/lib/mongodb/collection.js:956
01:27 < MI6> joyent/libuv: Ben Noordhuis master * 59a2c63 : bench: remove dead and buggy code  Pipe accept benchmarks have never been (+1 more commits) - http://git.io/kir5Mg
01:27 < MI6> joyent/libuv: bnoordhuis created branch rm-ev - http://git.io/j9Lt2g
01:28 < chapel> garbagecollectio: why are you accessing the native driver?
01:28 < chapel> if you are using mongoose
01:28 < garbagecollectio> huh
01:28 < garbagecollectio> it looks like this cant access the collection
01:28 < garbagecollectio> i dont know why
01:28 < chapel> you should be able to do db.regions.findOne ...
01:28 < chapel> db being a connected mongoose object
01:29 < garbagecollectio> so just do db.regions?
01:30 < garbagecollectio> ReferenceError: db is not defined
01:30 < chapel> or Region.findOne
01:30 < chapel> garbagecollectio: depends on how you initialized everything
01:30 < chapel> are you using schemas?
01:31 < garbagecollectio> yeah
01:31 < garbagecollectio> it seems like this can to the collection is just not happening
01:31 < garbagecollectio> its not entertng the function
01:31 < garbagecollectio> its not doing findOne
01:31 < garbagecollectio> no data returned in first line of callback
01:31 < garbagecollectio> just nothing happens
01:31 < garbagecollectio> can it handle that $watch?
01:31 < chapel> well if you are using mongoose and using schemas, you shouldn't need to access the base driver and try and get to the collection directly
01:32 < garbagecollectio> well ok
01:32 < chapel> http://mongoosejs.com/
01:32 < garbagecollectio> beyond that
01:32 < garbagecollectio> whats happening
01:32 < ChrisPartridge> othiym23: you around mate?
01:32 < garbagecollectio> this query works on command line
01:32 < garbagecollectio> is it use of the this
01:34 < chapel> garbagecollectio: you don't need to use $where to use regex
01:35 < chapel> also I am not sure if you can pass in a js regex to a $where statement since it probably evals it
01:35 < chapel> garbagecollectio: you can use regex in regular queries
01:35 < garbagecollectio> lol
01:35 < garbagecollectio> i fixed it guys
01:35 < garbagecollectio> u need $where for numbers
01:36 < chapel> like findOne({test: /^asdf/})
01:37 < garbagecollectio> Error retrieving dataMongoError: Error: $where expression has an unexpected type
01:37 < garbagecollectio> better put the empty quotes back
01:40 < stephenjudkins> MAD SCIENCE QUESTION: is there some sort of reflection library that makes it possible to see what variables a Function object has captured?
01:40 < garbagecollectio> fuck its not finding it but no errors
01:41 < ChrisPartridge> stephenjudkins: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Functions_and_function_scope/arguments ?
01:42 < stephenjudkins> ChrisPartridge: those are arguments, not closed-over variables
01:44 < garbagecollectio> ok so
01:44 < garbagecollectio> collection.findOne({ $where: "" + regex2.test(this['FTA ID2']) + "" }
01:44 < garbagecollectio> how can i turn that regex2 regex into something in a string
01:44 < garbagecollectio> like mongo evaluats the regex express as a string
01:44 < garbagecollectio> and chops it up
01:44 < garbagecollectio> but i have it as a variable
01:45 < Benvie> you could run it in a virtual machine if the purpose is for debugging
01:46 < Benvie> or even not just debugging I guess, though it's of course slower
01:46 < Benvie> http://benvie.github.com/continuum `npm install continuum` then you can get access to scope objects
01:46 < garbagecollectio> i did it
01:47 < Benvie> re: stephenjudkins
01:48 < stephenjudkins> Benvie: thanks
01:53 < mscdex> continuum, i remember that game
01:53 < xp_prg> can I synchronously fork?
01:54 < mscdex> no?
02:07 < jtwalters> anyone know how to recreate rawBody on express 3? (is this the right room?) 
02:15 < ChrisPartridge> jtwalters: perhaps just capture req.data in a middleware and populate your own req.rawBody property?
02:16 < ChrisPartridge> req.data = req.on('data'
02:16 < xp_prg> damn it to hell, I want to fork a process that can read from stdin and write to stdout in such a way the caller can read the result
02:16 < jtwalters> ChrisPartridge: trying to figure that out, but I'm new to this
02:16 < xp_prg> how hard could it be?
02:16 <@konobi> xp_prg: child_process
02:16 <@konobi> done
02:17 < jtwalters> ChrisPartridge: I found some code online but it seemed to have broken the functionality in another way
02:17 < xp_prg> asynchronously?
02:17 < xp_prg> I mean synchronously?
02:17 <@konobi> there's exec and spawn
02:18 < xp_prg> my exec'd program needs to read from stdin
02:18 < xp_prg> that doesn't seem to work
02:18 <@konobi> rtfm
02:18 <@konobi> =0P
02:18 < ChrisPartridge> jtwalters: how did it break it in another way? gist/pastebin?
02:18 <@konobi> it will work
02:20 < jtwalters> ChrisPartridge: https://gist.github.com/fe25cdb26b541aa8354a you can see the part where i try to build rawBody
02:21 < ChrisPartridge> jtwalters: looks ok, what problem does it cause?
02:21  * xp_prg gets the short sword and prepare to commit sepaku
02:21 <@konobi> i'll be your secondary
02:22 < xp_prg> I was hoping you would
02:23 <@konobi> xp_prg: i've done it quite a few times, it works... you may just need to take notice of _which_ stdin/stdout you're referring to
02:23 < jtwalters> i'll try it again...hold on
02:24 < garbagecollectio> yo
02:24 < xp_prg> konobi I am new to node.js so this is hard for me, if you feel merciful, I just want to basically do the equivalent of the system command and allow the child program the ability to read from stdin and get its output, the real reason I want to do this is to read user input synchronously
02:24 < xp_prg> that is hell on earth in nodejs
02:25 < garbagecollectio> how do i do a $watch query on a long number
02:25 < garbagecollectio> the data base schema says "FTA ID2" : NumberLong(815510004)
02:25 < garbagecollectio> in mongo
02:25 < garbagecollectio> my query works if that NumberLong isnt there
02:25 < garbagecollectio> wtf is that
02:27 < jtwalters> ChrisPartridge: it seems to block the request from hitting the other configured "PUT"
02:27 < garbagecollectio> i need to remove numberlong
02:28 < jtwalters> i guess i need to figure out how to debug it
02:30 <@konobi> xp_prg: readline?
02:32 <@konobi> xp_prg: otherwise there's the 'stdio array' of those functions that you can use
02:39 < garbagecollectio> how cna i convert everything out of numbers in my mongodb
02:39 < garbagecollectio> into strings
02:39 < garbagecollectio> on the command line
02:39 < garbagecollectio> cause this NumberLong has gots to go
02:42 <@konobi> garbagecollectio: asked in #mongodb?
02:42 < garbagecollectio> whyu ar eu so stickler for rules
02:42 < garbagecollectio> freendoe is like rule central
02:42 < garbagecollectio> its very strange
02:42 < garbagecollectio> yes of course i have
02:42 < llakey> what's the easiest way to compile node --with-dtrace support on debian/linux? it looks like i need to git clone the node master branch? 
02:43 <@konobi> llakey: not doable
02:43 < llakey> shiiiit
02:43 < llakey> i saw a commit that made me think this was possible now in the most recent commits
02:43 <@konobi> dtrace support is limited to SunOS for now... (or any illumos derivitive)
02:44 <@konobi> there's systemtap support, but i don't think that's been released yet
02:44 < ack006> i'm someone who is working on systemtap support
02:44 < ack006> right now
02:44 < llakey> i saw line 385 in this commit and i thought maybe dtrace was supported: https://github.com/joyent/node/commit/06810b2
02:45 < llakey> ...was supported... on linux
02:45 <@konobi> garbagecollectio: because lots of use have stuff to do... non-nodejs stuff just adds to the noise
02:45 < garbagecollectio> ok ok
02:45 < ack006> but lots of work need to be done
02:46 < ack006> static probes already work (not my work), i'm working on an 'ustack helper' like thing
02:46 < ack006> but still long way off
02:46 <@konobi> but it's actualy systemtap, not dtrace iirc
02:46 < llakey> basically i saw this: http://blog.nodejs.org/2012/04/25/profiling-node-js/ and i wanted to do that on the debian/linux/node stuff i'm running atm
02:47 <@konobi> llakey: you can always try smartos though =0)
02:47 < llakey> i'm interested in smartos. the main reason i'm using ec2 is because i am able to use spot instances and they're very cheap
02:48 <@konobi> there's omnios on ec2 now
02:48 < llakey> i don't _think_ i can run smartos on ec2 or at least i didn't see any google results which indicated i could. 
02:48 < llakey> omnios. i saw that. that was plan C or D or something :)
02:48 <@konobi> it's illumos based, so should work dandily
02:49 <@konobi> llakey: are you spot instance based or just "at-random-times" based?
02:50 < llakey> ok. so it's a sure thing i can't get dtrace/node profiling to work on debian/linux. sounds like i should stop trying then :) and perhaps check out illumos
02:50 < llakey> the current project is a web crawler. we need to spin up a bunch of spot instances for a few hours and then spin them down. it doesn't matter if any of the instances are terminated mid-crawl. very flexible
02:50 <@konobi> llakey: yup... you can always run smartos, etc on vmware to try it out
02:56 < AnthonyCat> How do I change the default error page on a connect server?
02:56 < AnthonyCat> instead of just printing the stack in plaintext
02:58 <@konobi> AnthonyCat: look at the errorHandler middleware
02:59 <@Nexxy> denysonique, please don't refer to me like that
02:59 < AnthonyCat> thanks
02:59 <@konobi> Nexxy: ?
03:03 < AnthonyCat> So it goes at the end of the stack?
03:04 <@konobi> yup
03:09 < AnthonyCat> thanks
03:10 < IjustWantAfarm> Can node make database connections? I was told it needs a webframework (eg. rails) or a language like php
03:11 < AnthonyCat> IjustWantAfarm: Yes it can, using for example https://github.com/felixge/node-mysql
03:12 <@konobi> IjustWantAfarm: whoever told you that was clueless
03:12 < IjustWantAfarm> so is node a complete solution for the back end?
03:12 < IjustWantAfarm> @ konobi so is node a complete solution for the back end?
03:13 < IjustWantAfarm> konobi: woops.. konobi so is node a complete solution for the back end?
03:13 <@konobi> sure
03:14 <@konobi> if you need specifics you can look at npmjs.org
03:16 <@konobi> IjustWantAfarm: think about it this way... C is only of use to move data around to memory... so it's only good for a kernel... right?
03:16 < IjustWantAfarm> konobi: why do you use node? Advantages and disadvantages over php? What's the difference in learning curve
03:17 < IjustWantAfarm> konobi: yeah
03:19 <@konobi> IjustWantAfarm: tbh, mainly by association... but i've done dhcp, dns, tftp, http and many others with it, very easily
03:22 <@konobi> IjustWantAfarm: i'm a systems guy, not a web guy... but web stuff is just built atop systems stuff
03:23 <@konobi> IjustWantAfarm: if that makes sense
03:23 < garbagecollectio> why isnt this returning the reuslt i needs
03:23 < garbagecollectio> var query = ({"ts":{$gte:new Date(from.getFullYear(),from.getMonth(),from.getDate()),$lt:new Date(to.getFullYear(),to.getMonth(),to.getDate())}});
03:24 < IjustWantAfarm> konobi: I'm interested in learning node but want to start making some money (ideally with freelancing). Is it bad if I write peoples webserves in something more obscure as node versus php
03:26 <@konobi> node isn't that obscure these days
03:27 <@konobi> garbagecollectio: looking for stuff in the future?
03:27 < garbagecollectio> no between certain dates
03:28 < sdouble> it could be bad, because they may decide not to go with you because not as many people are as familiar with it
03:28 < garbagecollectio> $gte means gerater than
03:28 < garbagecollectio> $lt less than
03:28 < garbagecollectio> but yeah its finding everything
03:28 < garbagecollectio> even if i dont input anything it does
03:28 <@konobi> why not just use from and to?
03:29 <@konobi> sdouble: or... it's a niche
03:30 <@konobi> heck my company is all about the niche
03:30 < sdouble> exactly, hence the "could"
03:30 < sdouble> it's hard to tell how people will take it
03:30 < sdouble> so, just do what you want to do
03:35 <@konobi> sdouble: but there's also 'niche' market vs 'flooded' market
03:36 < IjustWantAfarm> konobi: what do you think the learning curve is like for node vs php
03:37 <@konobi> if you've done front end js, not that much, otherwise a reasonable curve
03:40 <@konobi> mmalecki: that much of a surprise?
03:41 < mmalecki> konobi: hey
03:41 < mmalecki> konobi: not at all :)
03:41 < mmalecki> but web ui doesn't handle it *that* nicely ;)
03:41 <@konobi> heh
03:44 < mmalecki> konobi: fun fact: rackspace API which responding at the point of 200 servers
03:44 < mmalecki> that was enormous amount of fun.
03:45 <@konobi> mmalecki: so smartos/joyent ftw?
03:45 < mmalecki> HELL YEAH
03:46 < IjustWantAfarm> konobi: how well does one need to know front end js in order for lesser of a learning curve than php?
03:46 <@konobi> treat everything as xhr... then yer done
03:46 <@konobi> mainly it's sync vs async
03:48 <@konobi> mmalecki: if you guys have some cash... see if smartos works on a ZBOX ZD-81
03:49 <@konobi> that'd be a nice cheap dev box
03:49 < mmalecki> konobi: oh wow that little thing is sweet
03:50 < mmalecki> would need a bit more memory tho
03:50 < IjustWantAfarm> konobi: how well does one need to know front end js in order for lesser of a learning curve than php?
03:50 <@konobi> 16GB max
03:50 < chapel> konobi: I have a friend who works for zotac
03:50 <@konobi> IjustWantAfarm: treat everything as xhr... then yer done
03:50 <@konobi> chapel: really?!
03:51 < chapel> konobi: yeah, marketing guy
03:51 < chapel> doesn't mean much though lol
03:53 < IjustWantAfarm> konobi: I'm ignorant and have no experience with xml, could you explain in layman terms what you mean? And have heard of smartos before, do you use it, if so why? powerful virtualization?
03:54 <@konobi> IjustWantAfarm: xhr is an async front end to do http comms to a backend server
03:54 <@konobi> smartos is a much much different thing
03:54 < garbagecollectio> [Error: Unsupported projection option: $lt]
03:56 < IjustWantAfarm> konobi: so what does that mean for the learning curve of node vs php? And I know smartos is a an os that loads into memory with zfs and kvm virtualization, it interested me but I'm just wondering why you brought it up a while ago. Why does it interest you?
03:57 <@konobi> IjustWantAfarm: i know smartos very well, but it's not specific to node
03:57 < garbagecollectio> yo
03:57 < garbagecollectio> what is wrong with that query
03:58 < chapel> IjustWantAfarm: to answer your question of node vs php (I know you asked konobi), I think node is probably harder to master, but about the same to get started and see results
03:58 < Aria> Hm. Node vs php ... they're very different, and so hard to compare. They excel at different things.
03:58 < Aria> Well, PHP doesn't /excel/ at things, but ...
03:59 < IjustWantAfarm> Aria: lol, why are people so mean to node. It seems to get the job done in many instances
03:59 < Aria> I work with PHP at my day job.
03:59 < Aria> I find a bug in the interpreter at least once a week.
04:00 < Aria> I find a major annoyance in the language specification at least once a week. 
04:00 < chapel> IjustWantAfarm: php for me just feels backwards
04:00 < Aria> I should be running out by now.
04:00 < Aria> But no.
04:00 < chapel> it isn't much easier to get things done
04:00 < Aria> yeah. PHP's only 'easy' in that you can start with HTML and work from there. With node... not quite so much
04:00 < chapel> in fact, if it weren't for resellers and various apache hosts, php would be a pain to host yourself
04:01 < Aria> Maaaaybe.
04:01 < Aria> You don't have to worry about keeping processes running. That's really its one plus.
04:02 < chapel> Aria: if you use app hosting node is really simple to host
04:02 < IjustWantAfarm> chapel: what if I want to get into freelancing; not working a 9-5 building website and simple webservices for clients.  Know anything about this. Is node a good option. I was told by the php guys that you don't want to write a clients app in something more obscure, any thoughts?
04:02 < chapel> but setting up apache and php and all the various things is complicated
04:02 < Aria> chapel: Yeah, all five providers!
04:02 < Aria> chapel: All different!
04:02 < chapel> Aria: lol gotta start somewhere
04:03 < Aria> IjustWantAfarm: Depends on the task! Though node + ejs is relatively sane, but it really takes taking the expertise into account.
04:03 < chapel> IjustWantAfarm: depends on what you are making, sometimes php is the right option
04:03 < chapel> but node is versatile and can do just about anything
04:03 < chapel> php not so much
04:03 < IjustWantAfarm> Aria: ejs?
04:03 < IjustWantAfarm> chapel: when might node be the right option
04:03 < Aria> Embedded Javascript. A templating layer, like PHP.
04:04 < garbagecollectio> why the fuck isint it working!!
04:04 < garbagecollectio> {'ts': {$gte: start, $lt: end}
04:04 < Aria> If you're in the niche where an easy migration from HTML done by a designer to working app is in the path, it's a great tool.
04:04 < chapel> IjustWantAfarm: for me, its always the right option :)
04:04 <@konobi> for example, i run my own company... i'm not so much into the SW side these days... will i need to hire node folks at some point... yes... as to when, i'm not sure
04:05 < chapel> IjustWantAfarm: node isn't at the point you can do wordpress like installs for people
04:05 < chapel> but then again, I think wordpress (the way people tend to use it as a cms) is just as complicated or more at times
04:06 < chapel> node should be used for real projects where you are making more than some html on a website
04:06 < IjustWantAfarm> I have an interest in the web because it's interesting and I need to make money to start a farm. My heart is telling me node, but for that reason chapel: (not wordpressesque) my brain is telling me php
04:06 < chapel> complex business logic or functionality
04:06 < chapel> IjustWantAfarm: also depends on your area
04:07 <@konobi> IjustWantAfarm: do you want to be just another php person?
04:07 < rump> IjustWantAfarm: see drupal
04:07 < chapel> IjustWantAfarm: but as a freelancer clients don't care about what its made with
04:07 < chapel> they don't care if its crappy or great code
04:07 < garbagecollectio> we did it again
04:07 < chapel> just that it does what they want, when they want, and for how much they want to pay or less
04:07 < garbagecollectio> i did it!
04:07 < samholmes> is there a way to get inside of the scrope of browserify from the console?
04:07 < samholmes> I want to do some require-ing from the console.
04:08 < rump> drupal scratches the wordpress itch while not being complete spaghetti and somewhat maintainable and can develop custom solutions a lot easier
04:08 < chapel> samholmes: node cli
04:08 < chapel> node repl
04:08 < chapel> for that matter
04:08 < Hotroot> If you just want to shit out fast, ugly code, node probably isn't the way to go.
04:08 < samholmes> chapel: But, this is client-side
04:08 < chapel> samholmes: oh, no idea sorry
04:08 <@konobi> look at elace/freelancer and see what php vs node is
04:08 < rump> IjustWantAfarm: with node you're starting from scratch, an empty text editor
04:08 < chapel> rump: not always
04:08 < rump> maybe you find a module or two but you're just as likely to role your own
04:08 <@konobi> rump: false
04:09 < rump> s/role/roll/
04:09 < IjustWantAfarm> konobi: I like node because it's hip technology, but I'm not sure what it would be like freelancing with node... more difficult, should I maintain clients code if something breaks... do things even break. I'm looking a bit far into the future, I know, but I'm just curious
04:09 < samholmes> substack: Does browserify expose anything to the global scope? I would like to require modules from the javascript console.
04:09 < rump> chapel: konobi: may i have an opinion? :)
04:09 <@konobi> IjustWantAfarm: that;s more of a freelancing question than a techology one
04:09 <@konobi> rump: nope
04:09 <@konobi> =0P
04:10 <@konobi> rump: only if you are actually freelancing
04:10 < Hotroot> IjustWantAfarm: Honestly for freelancing, I don't think I would go node at this point. Updates are like more severe than what PHP+whatever gets, and it's probably more time consuming for simple stuff
04:10 < rump> i freelance
04:10 < rump> derby and tower dont count
04:10 < rump> or any of that mess
04:10 < Hotroot> Speaking of jobs, I'm stuck in limbo. I want a job but I don't know if I'm good enough with node yet
04:10 < rump> you get about 1000-2000 free LoC then yer off to the races (express & connect & mongo-native)
04:10 <@konobi> Hotroot: if you know know and general web tech, that's fine
04:10 < IjustWantAfarm> Hotroot: That's what my intuition tells me
04:11 < Hotroot> konobi: I think I know a lot, and then someone mentions something simple that I don't even slightly understand, like DNS
04:11 <@konobi> *node
04:11 < rump> IjustWantAfarm: learn javascript then you'll have a much better idea
04:11 <@konobi> Hotroot: that's what other people are for
04:12 < Hotroot> And I know node, but I know nothing about sharding db's, forking processes, etc.
04:12 < rump> IjustWantAfarm: http://www.amazon.com/JavaScript-Definitive-Guide-Activate-Guides/ then http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742/
04:12 <@konobi> Hotroot: that's fine... 
04:12 <@konobi> Hotroot: there's other people for that
04:12 < Hotroot> I only really have a ditched node project, and my current one
04:12 < Hotroot> I will start applying when I finish this one
04:12 < rump> http://www.amazon.com/JavaScript-Definitive-Guide-Activate-Guides/dp/0596805527/ rather
04:13 < Hotroot> IjustWantAfarm: I get you about the farm thing. That's sort of my dream too.
04:13 <@konobi> learn protocols, not tech
04:13 < IjustWantAfarm> but if one want to start developing websites faster would one really need to learn js that well? Maybe just more php?
04:14 < rump> IjustWantAfarm: sadly i know some wordpress guys who make more than freelancing node or even c/c++
04:14 <@konobi> http, html, css, smtp, etc. will exist long beyond php, perl, ruby, etc.
04:14 < IjustWantAfarm> I am a jack of all trades and a master of NONE. I'm trying to change that
04:14 < rump> IjustWantAfarm: sometimes, when it comes to freelancing or jobs... its best to go with whats the most popular and not whats the best
04:14 < rump> not a lot of node work out there right now compared to LAMP
04:14 < Hotroot> I see assloads of PHP/HTML/CSS/JS (front end) jobs that pay a bundle around here
04:15 <@konobi> IjustWantAfarm: if you're not confident to go out on your own... that's testament enough usually i find
04:15 < rump> people aren't involved with node for the money at this time
04:15 < rump> its a nice new tinker toy for geeks thats fun is all
04:15 <@konobi> it costs a __lot__ of money to go out by yourself
04:15 <@konobi> rump: no... there's money there
04:16 < Hotroot> konobi: Some of it's so shit boring, but I try. I understand cookies, POST, GET, etc. and a usable amount of HTML, but often I have to look things up like how <form>'s send data, or cookie timeouts that are fairly simple
04:16 < jarek> Hi
04:16 < rump> konobi: for a freelancer compared to a lamp stack?
04:16 < jarek> what is the best Node.js SASS module?
04:16 <@konobi> rump: yup
04:16 < rump> konobi: its relative
04:16 <@konobi> Hotroot: yeah, that's just protocol
04:16 < rump> sounds like IjustWantAfarm can make a living doing wordpress sites in a weekend at $5k a pop before makes a ton with node
04:17 <@konobi> learning protocol is the best way to learn... skip any framework
04:17 < IjustWantAfarm> konobi: I am confident in my abilities, I'm ignorant of of where my skills might be best applied, however. Eg. Can one make a living without php and just front end stuff, like html apps or just like jquery design, or does php or another webserver tool make you that much more marketable and successful of a developer?
04:17 < Hotroot> konobi: A bit late for that on this project, been using express since day 1
04:18 < garbagecollectio> cn someone tell me why the fuck this oesnt work
04:18 < garbagecollectio> KPIModel.count(function(data) {
04:18 < Hotroot> IjustWantAfarm: I see plenty of front end jobs, but often you have to be a designer
04:18 < garbagecollectio> res.send(data);
04:18 <@konobi> Hotroot: no reason not to learn htpp 1.1
04:18 < rump> my cousin took a 1 year course on basic computer skills and making wordpress sites and shes nearly pulling 6 figures just making crummy sites at 5k.  im jealous to be competing with her after a lifetime of developing/sysadmin/etc
04:18 <@konobi> and the related rfcs
04:19 <@konobi> rump: at an agency?
04:19 < rump> konobi: freelance
04:19 < Lorentz> rump: she probably has more than just computer skills
04:19 <@konobi> rump: huh
04:20 < Lorentz> supplements it with person-to-person skills and marketing and business etc
04:20 < rump> Lorentz: nah her mom is well connected
04:20 < kennethkoontz> Anyone recommend a good read on writing a module that does some async io in the constructor?
04:20 < rump> she herself is a pleasant person but didnt finish high school
04:20 < rump> but has crazy work ethic
04:20 <@konobi> yeah, freelancing is all about inter-personal skills
04:20 < garbagecollectio> someone tell me why fucking
04:20 < Lorentz> education is education
04:20 < garbagecollectio> mongoose doesnt work
04:21 < Lorentz> and well connected just sounds like they're skilled at exactly what brings in money for freelancers
04:21 < Hotroot> konobi: Also hoping I don't run into a situation where I have no idea what I'm doing all of a sudden.
04:21 < rump> Lorentz: her mom is ceo of an ISP and feeds her clients
04:21 < Hotroot> Big leap from random projects to a company depending on me for a site. Can't find any internships though
04:21 < IjustWantAfarm> So php if you want easy 5k a pop?
04:21 <@konobi> Hotroot: that's what friends are for
04:21 < rump> Lorentz: and owns a publishing company and other things
04:21 <@konobi> IjustWantAfarm: i PM-ed you
04:21 < Lorentz> rump: I'm saying, you don't get there by only coding behind a computer and not talking to anyone
04:22 < rump> Lorentz: agreed
04:22 < Hotroot> Internship would be ideal
04:22 < Lorentz> no matter how well you code
04:22 < rump> i dunno ive met some reclusive lead developers before which take 120k/yr without ever stepping into the light
04:22 < rump> but they're brilliant
04:23 <@konobi> other folks in this channel including isaacs, ryah and nexxy will tell you i'm pretty sociable in reall life =0)
04:23 < mmalecki> ^ he is
04:23 < rump> IjustWantAfarm: you'd be surprised how good a living someone can make just from knowing wordpress and very basic ftp/php skills and scoop up all the odd jobs on elance for example, like "heres $200 to install this php script for me."
04:23 < Hotroot> konobi: Where do you work?
04:24 < garbagecollectio> mongoose.connection.db.collection('regions', function(err, collection) {
04:24 < garbagecollectio> i cant get a good job in nyc for some reason
04:24 < rump> IjustWantAfarm: go to freelance sites like elance and check the # of available jobs of say php vs ruby/node/python/etc
04:24 < garbagecollectio> tell me why i cant use count
04:24 < mmalecki> rump: 'meh' on freelance. get a job at a startup
04:25 < rump> mmalecki: sure but the skill required is a lot higher for that and i think he's just starting out
04:25 < mmalecki> ah, yeah
04:25 < mmalecki> well, I got hired after 2 weeks from starting with node
04:25 < garbagecollectio> ill tell u all a secret about freelancing
04:26 < garbagecollectio> yeah how is that possible
04:26 < garbagecollectio> im like a senior dev and no one wants to touch me
04:26 < garbagecollectio> i lead major shit
04:26 < rump> if yer young go, IjustWantAfarm, go intern at a proper devhouse and learn everything you need to know in no time at all
04:26 < garbagecollectio> but how do i fucking use coutn in mongoose
04:26 < mmalecki> you use programming
04:26 < mmalecki> and documentation
04:27 < mmalecki> srsly. it's all documented.
04:27 < rump> maybe thats why you cant get job in nyc garbagecollectio hehe, rtfm :)
04:27 < garbagecollectio> huh cause why?
04:27 < garbagecollectio> its not working
04:27 < IjustWantAfarm> rump: thanks for all the advice
04:28 < rump> IjustWantAfarm: let us know what you decide and how its going
04:28 < rump> IjustWantAfarm: we'll point you best we can from this end
04:28 < Hotroot> PHP may be shit, but if suckers want to give you easy money for it, who cares? =P
04:28 < IjustWantAfarm> rump: Thanks :)... why don't you pm me some inf
04:28 < IjustWantAfarm> info*
04:28 < Hotroot> Plenty will support that
04:29 < rump> i idle here so just chat me whenever
04:29 <@konobi> Hotroot: for myself... cloudtone
04:29 < rump> garbagecollectio: a senior dev who does know what rtfm is? :)
04:29 < rump> s/does/doesnt/
04:30 < Hotroot> konobi: Ah, nice
04:30 <@konobi> Hotroot: before that, i was joyent
04:30 < Hotroot> Oh wow, right at the source, haha
04:31 < SomeoneWeird> oh here we go
04:31 < SomeoneWeird> garbage is back :x
04:31 <@konobi> yup, i remember ryan getting hired =0)
04:31 < rump> wikipedia must be hurting.  their pleas for donations keep getting bigger and more desperate
04:32 < mmalecki> garbagecollectio: as a senior devops engineer, after long and detailed investigation I think I found the reason of your problem!
04:32 < garbagecollectio> god i really should heed sergey brings adivce
04:32 < denysonique> Can I install npm from git? By defining a dependency in package.json liek this: "sequelize":"git@github.com:denysonique/sequelize.git"
04:32 < Hotroot> konobi: Oh neat. Can't wait to find an internship, will be very excited to remove the stress of a job search and be with other coders.
04:32 < mmalecki> faulkner: you're an asshole!
04:32 < mmalecki> er
04:33 < Hotroot> haha
04:33 < mmalecki> garbagecollectio: ^
04:33 <@konobi> Hotroot: jfdi
04:33 < SomeoneWeird> haaaahaha
04:33 < SomeoneWeird> mmalecki, +1
04:33 < mmalecki> ETOOMUCHWHISKEY
04:33 < rump> id actually like to work in a devhouse that does mostly node...  i imagine thats the fastest way to mastery and to learn a few productivity tips, etc
04:33 < Hotroot> konobi: I'm lookin
04:33 < mmalecki> Hotroot: looking for an internship?
04:33 < Hotroot> konobi: Most are in the Valley, and I'm not really ready to move
04:33 < Hotroot> mmalecki: Yeep
04:33 <@konobi> mmalecki: i thought you'd pick up on that
04:33 < garbagecollectio> i am looking for a way to use 
04:33 < garbagecollectio> count
04:33 < mmalecki> Hotroot: link to your github account please? I'll see what I can do :)
04:34 < Hotroot> Although I'm a lazy ass so I don't have a license yet, but that will change in a month
04:34 < mmalecki> garbagecollectio: http://mongoosejs.com/docs/api.html#query_Query-count now please go away
04:34 <@konobi> 1, 2, 3, 4... do i need to go on?
04:34 <@konobi> it's not really a dnd stat you know
04:34 < Hotroot> mmalecki: Pathetic github page for now, essentially nothing on it. 
04:34 < ChrisPartridge> konobi: but what if i need to go above 4? :o
04:34 < garbagecollectio> tries mmalecki, give me something we DONT know
04:35 <@konobi> Hotroot: licence?
04:35 < peepsalot> has anyone here tinkered with serial io in nodejs?
04:35 < Hotroot> konobi: Driving
04:35 < Hotroot> konobi: I could have had it years ago, but I don't really like driving
04:35 < mmalecki> Hotroot: that's fine, still :). I'll see what's good and get back to you if we have anything
04:35 <@konobi> Hotroot: you don't need it in SF
04:35 < mmalecki> oh, you're in sf?
04:35 < mmalecki> word.
04:35 < Hotroot> No
04:35 < Hotroot> I'm in Los Angeles
04:35 < Hotroot> Tujunga
04:35 < peepsalot> i want to start developing something for serial interface, but I don't yet have the device.  I am wondering about the best approach to emulating a serial port for testing/development
04:36 < rump> mmalecki: what do interns do over there?
04:36 < TheAceOfHearts> guys, any suggested mysql driver?
04:36 <@konobi> Hotroot: well, if you move to SF, you don't need a licence
04:36 < mmalecki> rump: at nodejitsu? write code, talk to servers, depending on the internship
04:36 <@konobi> the bart/buses work just fine
04:36 < ChrisPartridge> TheAceOfHearts: felix's node module is probably the finest
04:36 < Hotroot> mmalecki: My problem is, all my projects have been little things that I can't show off so far. Browser game bots, DCPU scripts (assembly for Notch's new game), etc.
04:36 < garbagecollectio> holy shit why is this nul everytime
04:36 < rump> mmalecki: remote or local only?
04:37 <@konobi> mmalecki: reminds me... i need to talk to hij1nx again soon
04:37 < chapel> Hotroot: put it on github
04:37 < chapel> that shows it off
04:37 < mmalecki> konobi: in person?
04:37 < TheAceOfHearts> kk, that's the one I was looking at, I guess I'll go with that, thanks! ChrisPartridge
04:37 < mmalecki> konobi: looks like you need to fly yourself to Poland :)
04:37 < denysonique> mmalecki: I have a cool idea. Gonna pm you in a sec.
04:37 <@konobi> mmalecki: nah, just email... he mentioned something in dublin
04:37 < mmalecki> Hotroot: please do put it on github!
04:37 <@konobi> denysonique: you got told off earlier... please note
04:37 < mmalecki> srsly.
04:38 < mmalecki> konobi: you know his email, don't you?
04:38 <@konobi> one of my modules seems to make folks think i'm a node genius... it's very small
04:38 <@konobi> mmalecki: yup
04:38 < denysonique> konobi: that wasn't me
04:38 < garbagecollectio> plz someone help me
04:38 <@konobi> denysonique: ?
04:38 < Hotroot> Yeah, I guess I could put some of the bots up. Most weren't really allowed in-game though =P
04:39  * MitchW thinks he broke gnu date >_>
04:39 <@konobi> Hotroot: actually, that'd make me more interested
04:40 <@konobi> how did you get past or not work on pre-existing stuff
04:40 < MitchW> I'm guessing there's no pure JS date handling stuff that can parse arbitary dates without knowing the format/locale/etc?
04:40 <@konobi> there's a few Date.parse() libs
04:40 < Hotroot> konobi: I guess. Just recently my code has started to look decent though, so it's a tossup of how much stuff it looks like I've done, and how pretty it looks
04:41 < garbagecollectio> someone please help me
04:41 < chapel> Hotroot: being someone who started similarly to you, just have to put your stuff out there
04:41 < garbagecollectio> this is getting absurd
04:42 < chapel> garbagecollectio: honestly I think you are using mongoose wrong
04:42 < rump> garbagecollectio: gist it already
04:42 < garbagecollectio> im not using it wrong
04:42 < ChrisPartridge> MitchW: momentjs is pretty good with most date related stuff
04:42 < chapel> then why are you having so many issues?
04:42 < garbagecollectio> no fucking idea
04:43 < garbagecollectio> here is the simple code
04:43 < garbagecollectio> http://pastebin.com/dawR7CBn
04:43 < rump> .distinct() and .count() what else is there to know
04:43 < garbagecollectio> dunno
04:43 < garbagecollectio> count returns null
04:43 < chapel> there you go again with using the mongo driver
04:43 < chapel> and not mongoose
04:43 < Hotroot> chapel: Yeah, just sort of embarrassing. I didn't start too long ago, so a lot of the code looks meh
04:43 < denysonique> MitchW: Moment.js and Date sugar provided by sugar.js
04:43 < garbagecollectio> chapel
04:44 < chapel> Hotroot: eh, your code should always improve
04:45 < MitchW> I shall take a look! :) cheers
04:45 < Hotroot> chapel: It is improving. I'm just a nervous person, and job wise I have a bit to be nervous about. I don't have a degree, so I'm not really sure how prepared I am.
04:46 < chapel> Hotroot: no degree here either
04:46 < chapel> if you don't put yourself out there, you won't get anything
04:46 < Hotroot> I suck at math too
04:46 < Hotroot> I don't suck at math. I don't know advanced math.
04:46 < chapel> heh, quit worrying about the what ifs
04:46 < garbagecollectio> chapel can uplease help
04:46 < garbagecollectio> someone fucking help
04:46 < garbagecollectio> this is the most basic shit
04:46 < rump> yeh well nowadays theres plenty of CRUD code to be done heh
04:47 < chapel> garbagecollectio: there is a thing called reading the manual
04:47 < chapel> or docs
04:47 < rump> save the super leet crypto algorithms for the next guy
04:47 < garbagecollectio> ive tried the manual
04:47 < garbagecollectio> lol
04:47 < chapel> count with mongo works like find, it takes a query
04:47 <@konobi> Hotroot: meh... node is new... folks know that... it's how you understand the underlying things (like, http, html, etc) that really count
04:47 < garbagecollectio> node is not new
04:47 < garbagecollectio> it was new about 4 years ago
04:47 < chapel> garbagecollectio: this isn't about node
04:48 < rump> thats relatively new
04:48 <@konobi> garbagecollectio: you know what... warning 1 (trolling)
04:48 < rump> ruby is new and its what a couple decades old?
04:48 < chapel> Hotroot: I was pretty much where you were a few years ago
04:49 < chapel> I started applying for freelance gigs and got one
04:49 <@konobi> node is new to enterprises
04:49 < Hotroot> konobi: Yeah, that's where I'm scared. I know node okay, but yesterday I realized I didn't even really understand content-type and it's just like blegh
04:49 < Hotroot> I feel good and then I realize I don't know something obvious
04:49 < chapel> Hotroot: that one turned into doing it full time for almost 2 years now
04:49 <@konobi> yeah, so it's worth learning because it's technology adnostic
04:50 < chapel> Hotroot: if you don't know something, learn it
04:50 < chapel> learning is your best skill
04:50 < rump> chapel: which company?
04:50 <@konobi> chapel++
04:50 < chapel> rump: at the moment geeklist
04:50 < garbagecollectio> can someone just write the query for me so i can leave
04:50 < garbagecollectio> im so tired
04:50 < Hotroot> Oh I do, but I feel like that would be quite horrible at a job. What if I had got an internship and then realized I didn't know content-type
04:50 < rump> chapel: what kinda node stuff are you guys working on
04:50 <@konobi> chapel: oh, which geeklister?
04:50 < chapel> garbagecollectio: lol
04:50 < rump> generally
04:50 < Hotroot> Oh shit, be back later, forgot I have to read to nephews
04:51  * Hotroot is afk
04:51 < chapel> rump: all of geeklist is node
04:51 < rump> chapel: saweet
04:51 < chapel> konobi: what do you mean?
04:51 < ChrisPartridge> garbagecollectio: chapel pretty much told you why it wasn't working.. 
04:51 < denysonique> rump: Ruby errm, Rails has become a sort of corporate stability thing now. One of the reasons I like node because it's not (yet) very popular, making it the cool secret weopon of the ninja.
04:51 <@konobi> chapel: i know lots of the folks there... csanz too... so which geeklister are you?
04:51 < rump> denysonique: better return to erlang then! :)
04:51 < chapel> konobi: I am chapel
04:51 < chapel> :)
04:51 < chapel> https://geekli.st/chapel
04:52 <@konobi> ah
04:52 < rump> hehe they keep score.  thats neat
04:52 <@konobi> another pacific northwesterner
04:52 < chapel> yep
04:52 < chapel> wish it was more of a tech hub
04:52 < chapel> but its not too bad
04:53 < rump> i wanna know why geeklist has a 1.5-2second latency on all requests :)
04:53 <@konobi> vancouver is pretty fun JS wise
04:53 < chapel> rump: not really node related sadly
04:53 < styol> Is it common in unit tests that you have a crap load of evaluations for relatively simple concepts? Like exists, is true, is a number, is not undefined, is not empty, etc etc? Basically everything you can think of might potentially be the complete opposite of what is expected?
04:54 < rump> chapel: yeah even the statics are high latency 0.5-1s
04:54 < rump> whats the deal?
04:54 < garbagecollectio> please someone just write the damn query
04:54 < garbagecollectio> to fucking count entries in teh fucking database
04:54 <@konobi> rump: are you in timbuktu?
04:54 < chapel> rump: for one heroku, two east and west coast servers for the backend
04:54 < chapel> lol garbagecollectio
04:54 < rump> konobi: neevaadahh
04:54 < garbagecollectio> i am being serious
04:54 < rump> garbagecollectio: $150/hr consultation
04:55 < garbagecollectio> deal
04:55 < garbagecollectio> ilkl do $100
04:55 <@konobi> garbagecollectio: c'mon... i'm not that harsh a guy...
04:55 < garbagecollectio> just let me go to bed
04:56 < garbagecollectio> plz
04:56 < garbagecollectio> im srs
04:56 <@konobi> chapel: did you go to cascadiajs?
04:57 < chapel> konobi: no
04:57 < rump> garbagecollectio: you gotta query before you can count().  aka find()
04:57 < garbagecollectio> rump i ddi that son
04:57 <@konobi> chapel: what whtat!? i heard it was awesome
04:57 < rump> garbagecollectio: doooo better
04:57 < chapel> konobi: Im sure it was :(
04:57 < garbagecollectio> u do it?
04:57 <@konobi> i couldn't go for $$$ reasons (Dublin was expensive enough)
04:57 < rump> ive never used mongoose (only native) but you send me $100 and i guarantee i have it worked out within 10 minutes
04:58 < chapel> konobi: money and time for me
04:59 <@konobi> oh c'mon... you could swing conference stuff easily enough
04:59 < chapel> garbagecollectio: do you want to count all documents in the kpimodels collection?
05:00 < garbagecollectio> chapel yes
05:01 < garbagecollectio> rump will give u $20 if u spend 01 minutes on it and it works
05:01 < chapel> garbagecollectio
05:01 < chapel> collection.count({}, function(err, data) {…})
05:02 < garbagecollectio> no
05:02 < garbagecollectio> trues it
05:03 < chapel> well, if you listened to me before, and used mongoose directly
05:03 < chapel> and not the driver directly
05:03 < chapel> try this
05:04 < garbagecollectio> huh i am right now using it directly
05:04 < garbagecollectio> collection = KPIModel
05:04 < chapel> var kpimodels = mongoose.model('kpimodel')
05:04 < chapel> kpimodels.count()
05:05 < chapel> seriously though, why are you digging into the native driver
05:05 < timeturner> aimless curiosity syndrome
05:05 < rump> hacker
05:06 < garbagecollectio> this came back: {"options":{"populate":{}},"_conditions":{},"_updateArg":{},"op":"count"}
05:06 < timeturner> or hacker
05:06 < garbagecollectio> no one cn do this
05:06 < hdon> hi all :) does anyone know of a good reference or example of using node-ctype? there's no example of writing and i can't seem to invoke it properly
05:06 < timeturner> garbagecollectio: do you want to use mongoose or node-mongodb-native?
05:07 < garbagecollectio> im using mongoose
05:07 < timeturner> in mongoose it's simply Model.count()
05:07 < garbagecollectio> nope
05:07 < timeturner> I use it
05:07 < timeturner> in my app
05:07 < timeturner> on the latest version of mongoose
05:07 < timeturner> so I'm pretty sure I know
05:07 < timeturner> it works
05:07 < rump> dont you have to define the model and schema
05:08 < rump> maybe he hasnt done that
05:08 < garbagecollectio> this is what u come sbck
05:08 < garbagecollectio> {"options":{"populate":{}},"_conditions":{},"_updateArg":{},"op":"count"}
05:08  * rump has never used mongoose
05:08 < garbagecollectio> i have defined models and schema
05:08 < garbagecollectio> and i routinely add and get data from my models
05:08 < garbagecollectio> var blah = KPIModel.count();
05:08 < garbagecollectio> res.send(blah);
05:09 < timeturner> and it stopped working recently?
05:09 < garbagecollectio> nope never wrked
05:09 < timeturner> or you just started doing it and it isn't working
05:09 < timeturner> I see
05:09 < Hotroot> Back
05:09 < timeturner> maybe you should try reinstalling node_modules
05:09 < timeturner> sometimes it happens after an upgrade or something
05:10 < garbagecollectio> need code
05:10 < timeturner> code for what
05:10 < garbagecollectio> it works lo n mongo command line
05:10 < rump> maybe KPImodel isnt a model
05:10 < rump> you just think it is
05:10 <@konobi> *sigh*
05:12 < garbagecollectio> it is
05:12 < chapel> hah
05:12 < garbagecollectio> i can do queres
05:12 < garbagecollectio> queries
05:12 < garbagecollectio> this suckas
05:12 < rump> var blah = KPIModel.count();
05:12 < rump> count is async which accept a function as last param
05:12  * timeturner clears
05:14 < chapel> rump: yep
05:14 < rump> garsh garbage, yer gonna bug me with this and make me install and learn mongoose
05:14 < rump> else i lose sleep now
05:15 < rump> garbagecollectio: send me that app.js and yer package.json?
05:15 <@konobi> garbagecollectio: there's a #mongoosejs specifically for mongoose
05:15 < garbagecollectio> i cant
05:16 < garbagecollectio> idk i will give $100 dollar to anyone who fixes
05:16 <@konobi> if your're too impatient for an answer... either change timezone or look over logs
05:17 -!- garbagecollectio was kicked from #Node.js by konobi [sorry, too much trollage. see you soon]
05:17 < SomeoneWeird> konobi++
05:17 <@konobi> thin ice folks, thin ice
05:20 < chapel> I think its funny at this point
05:20 < chapel> really hard to help someone that can't help themselves
05:21 < styol> PEBCAK
05:21 < SomeoneWeird> did you guys see the conflict the other day with him?
05:21 <@konobi> styol: yarp
05:21 < SomeoneWeird> i was literally laughing so hard
05:22 < chapel> SomeoneWeird: nope, what happened?
05:22 < SomeoneWeird> same thing that happened before
05:22 < SomeoneWeird> but 100x as bad
05:22 < SomeoneWeird> for like 2 hours
05:22 < SomeoneWeird> couple of us started trolling him lol
05:22 < chapel> the freaking out?
05:23 < SomeoneWeird> and swearing and stufff
05:23 <@konobi> he claimed he was the hottest shit ever
05:23 < SomeoneWeird> yep
05:23 < chapel> I really wanted to help
05:24 <@konobi> chapel: not worth your time, tbh
05:24 < ChrisPartridge> Your patience is unbelievable konobi
05:24 <@konobi> ChrisPartridge: we have rules for a reason
05:25 < chapel> konobi: sure, I tend to look at it as a challenge
05:25 <@konobi> mainly it comes down to "don't be an asshole"
05:25 < ChrisPartridge> konobi: perhaps I worded it wrong, if I had ops, he would of been gone hours ago
05:26 <@konobi> ChrisPartridge: Nexxy, maogden, isaacs and I met up recently... and sort of decided what asshole was
05:26 < rump> im a sucker for help vampires
05:26 < rump> get me a bothered
05:27 < styol> *time vampires
05:27 <@konobi> for me... lots of advice for free, is asshol-ish
05:27 < chapel> konobi: people giving or receiving?
05:28 < rump> just to put everyones mind at ease: garbagecollectio: wow i did it, KPIModel.where().count(function(err, data) {
05:28 <@konobi> receiving
05:28 < rump> haha
05:28 < dnz-> brain or blood ?
05:28 < ChrisPartridge> konobi: it comes down to attitude too, and his attitude really stinks
05:28 < chapel> rump: lol, he has no idea what he is doing though, it is somewhat amusing
05:28 <@konobi> #node.js is all about signal vs noise
05:28 < Hotroot> dnz-: Your name gives me flashbacks of editing x86 asm
05:29 < Hotroot> I think JNZ was the infamous opcode
05:29 < chapel> ChrisPartridge: the fact that he would constantly yell that he wants help, he doesn't deserve help
05:29 < rump> chapel: yeah, shots in the dark
05:29 < dnz-> Hotroot: wat
05:29 < dnz-> there is no dnz instruction m8
05:29 < rump> purr: wat?
05:30 < chapel> ChrisPartridge: I have been in here for over two years, I still find it one of the friendliest tech channels
05:30 < Hotroot> Yeah, jnz is what I said
05:30 < Hotroot> Just reminded me of it
05:30 < rump> purr: wat = http://www.youtube.com/watch?v=kXEgk1Hdze0
05:30 <@konobi> chapel: yeah... we don't kick folks all that often
05:30 < chapel> konobi: well its not about kicking people, its about how newbies are handled
05:30 < dnz-> keke
05:30 < rump> is purr functioning anymore
05:31 <@konobi> (and i kicked, not banned)
05:31 < chapel> usually with soft hands and friendly words
05:31 < dnz-> except me, im not friendly
05:31 < chapel> dnz-: get out!
05:31 < dnz-> just like poop and evil spirits
05:31 <@konobi> chapel: you are clueless.. get used to it... we will impart our magical wisdom upon you... BUT it might take a while
05:31 < dnz-> GET OUT!
05:31 < chapel> konobi: lol
05:32 <@konobi> true though
05:32 < chapel> konobi: you'd be surprised how much you can learn by just reading what people say in here or other tech related channels
05:32 < styol> If to live is to learn then the secret must be to never stop learning
05:32 <@konobi> styol: very well put
05:33 < Sly> I guess most of us should live forever, then.
05:33 < chapel> I remember being one of those needy newbies, didn't know anything constantly asking questions
05:33 < Sly> Seeing how much we have to learn on a daily basis.
05:33 < Leo> Does anybody know a good tutorial for understanding the eventemitter from node.js? I need to return another event in a emtited event...
05:33 <@konobi> chapel: things kinda change over tiem too
05:33 < dnz-> the secret to living is drugs n bitches, boats and hoes, coke and fo fos
05:33 < chapel> Leo: event.emit('event', data)
05:34 < dnz-> true story.
05:34 <@konobi> ttfn
05:38 < SomeoneWeird> <ChrisPartridge> konobi: perhaps I worded it wrong, if I had ops, he would of been gone hours ago < +1
05:42 < dileep> someoneweird is here
05:42 < dileep> i have a question
05:42 < Leo> Thanks.
05:42 < SomeoneWeird> uh, hi
05:42 < chapel> Leo: what were you trying to do?
05:42 < dileep> hi
05:43 < dileep> how can we include external css file in node.js
05:43 < Leo> Trying to return something like the response from http.. It contains all the response headers + the events
05:43 <@Nexxy> did somebody mention vampires?
05:43 < Leo> Is this called extended objects?
05:44 < dileep> someone,
05:44 < chapel> Nexxy: no
05:44 < chapel> Nexxy: go to sleep
05:44 < dileep> anybody tell me
05:45 <@Nexxy> chapel, I don't sleep
05:45 < chapel> dileep: css as in cascading style sheets?
05:45 < chapel> Nexxy: with a baby Im sure you don't
05:45 < dileep> yeah
05:45 < issackel_> I need to take something that's not blocking, and somehow I need to wait for it to finish, because I'm shoe-horning APIs together.  I know that this is stupid, if that's the best you can help, it's not that helpful. I'm trying to make connect-cookie-session use a new cookieEncoder that will read gzipped cookies, but gzip is non-blocking and cookieEncoder.decode doesn't do callbacks
05:46 < ljharb> if you know something's stupid yet persist in doing it i'm not sure what other help can be found :-) but it sounds like maybe you just need to use an actual browser as the client, ie phantomjs
05:46 < dileep> chapel tell mme plz
05:46 < chapel> dileep: not sure what you want tbh
05:47 < chapel> can you explain more your problem
05:47 < issackel_> ljharb yeah, thanks.  I just don't know how much of the stack I have to rewrite to get this feature
05:48 < issackel_> trying to minimize that
05:49 < rump> chapel: <link rel="stylesheet" href="//url"> to his template?
05:50 < ljharb> definitely avoid reinventing wheels. if you're decoding an http request, use a library that does it, or a browser if you're looking at a dom
05:50 < rump> not sure how else external stylesheets are included
05:50 < dileep> chapel,rump,heyy we do the same way ,but we can ggett any response
05:51 < chapel> rump: sure, just confused how that has any relation to node
05:51 < rump> dileep: elaborate :)
05:53 < rump> request/superagenting the stylesheet and including it in your own response would be cooler
05:54 < rump> haha re tj and his ferrets
05:55 < rump> is this new? https://github.com/visionmedia/superagent
05:55 < garbagecollectio> http://jeroenbourgois.be/mongodb-group-by-with-mongoose/
05:55 < chapel> rump: no
05:55 < chapel> rump: pretty old now
05:55 < dileep> check here plz   https://gist.github.com/4084576
05:56 < rump> dileep: add a case for '/style.css' and use sendfile()
05:57 < garbagecollectio> rumop can u run a map reduce query
05:57 <@Nexxy> what is, query?
05:58 < rump> hmm shucks i guess sendfile is a connect or express thing and not a node thing
05:58 < rump> garbagecollectio: ever consider using mysql?
05:58 < garbagecollectio> i cant
05:58 < rump> sounds like you're pressed for time and maybe save document stores for when you have more time to learn the details
05:59 < rump> dileep: ever consider using express?
06:00 < rump> dileep: if thats all you have then can send the file using the fs module/ read streams but if you plan to add anymore then express/connect can make things a lot easier
06:01 < rump> app.get('/styles.css', function (req, res) { res.sendfile('./styles.css'); }); or similar
06:01 < rump> or app.use('/public', express.['static']('/public'));
06:02 < rump> minus a .
06:09 < TheAceOfHearts> does anyone have tips/suggestions on how to structure/separate my javascript code?
06:09 < chapel> TheAceOfHearts: modules :)
06:09 < rump> TheAceOfHearts: popular ways seem to be MVC or MVR or commonjs modules
06:10 < TheAceOfHearts> of course lol, but
06:10 < chapel> TheAceOfHearts: there is no one right way
06:10 < TheAceOfHearts> I'll take a look at MVR, ty
06:10 < TheAceOfHearts> since I don't know what that is lol
06:10 < chapel> what code are you trying to separate?
06:10 < rump> routes as controllers
06:10 < rump> nothing magical
06:10 < TheAceOfHearts> kk
06:10 < rump> i tried my latest project in all commonjs modules mounted on
06:10 < TheAceOfHearts> well, I'm gonna start working on my second express website, and I feel like my first one was a bit too cluttered
06:10 < rump> but honestly it ended up being pretty annoying
06:11 < rump> TheAceOfHearts: you did routes/, views/, models/ last time?
06:11 < rump> or all routes in app.js?
06:11 < chapel> rump: I have a setup I do similar to that
06:11 < rump> chapel: i need tips :)
06:11 < TheAceOfHearts> I had routes and views
06:11 < TheAceOfHearts> since I'm not sure what models are D:
06:12 < chapel> well for me I do express/mongoose
06:12 < chapel> so the lines are pretty clear
06:12 < chapel> using models as a way to delineate controller like code
06:12 < dileep> chapel,hey is it possible to fetch form post and get values on browser in node. as by of my git included above
06:12 < rump> you treat the modules as sub apps mounted as middleware or you pass around var app?
06:12 < chapel> rump: well, in the past just pass app around
06:13 < TheAceOfHearts> I passed around req/res
06:13 < chapel> but sub apps is a cleaner way at times
06:13 < TheAceOfHearts> do you have any examples in like github or something?
06:13 < rump> i didnt go far down that road but when i was trying sub apps i was getting annoyed with express not using relative paths of the child module
06:14 < chapel> a simple way is to var app, controller then module.exports = function(app) { return controller }
06:14 < chapel> and just attach functions to controller that you use elsewhere
06:14 < rump> and i wanted to programmatically add all my modules using isfolder and does it return exports then auto mount it on the /nameofmodule but man it got ugly fast
06:14 < dileep> chapel,hey is it possible to fetch form post and get values on browser in node. as by of my git included above
06:14 < dileep> chapel,hey is it possible to fetch form post and get values on browser in node. as by of my git included above
06:14 < dileep> chapel,hey is it possible to fetch form post and get values on browser in node. as by of my git included above
06:14 < dileep> chapel,hey is it possible to fetch form post and get values on browser in node. as by of my git included above
06:14 < dileep> chapel,hey is it possible to fetch form post and get values on browser in node. as by of my git included above
06:14 < dileep> chapel,hey is it possible to fetch form post and get values on browser in node. as by of my git included above
06:14 < rump> yeah thats gonna work dileep
06:14 < chapel> lol
06:15 < deoxxa> dileep: no that's not possible. computers are not yet advanced enough to perform that task.
06:15 < chapel> dileep: node can receive post requests
06:15 < Sly> deoxxa: ++
06:16 < chapel> rump: I wouldn't get too crazy with auto mounting stuff
06:16 < rump> chapel: yeah it got gross fast
06:16 < chapel> got any examples of what you were trying to do?
06:16 < dileep> but it doesnot show tha values on browsser rather it shows inn console
06:17 < rump> chapel: it gets ugly even auto requiring and passing app around: https://gist.github.com/4084718
06:17 < rump> i had a version liek that but mounting with app.use but it got so gross and double the lines that i nuked it
06:18 < rump> i can pull out of git
06:19 < chapel> rump: well what I have done in the past was all manual requires
06:19 < chapel> there are a lot
06:19 < chapel> mind you it isn't a personal project
06:19 < dileep>  but it doesnot show that values on browsser rather it shows in console
06:19 < dileep>  but it doesnot show tha values on browsser rather it shows inn console
06:19 < dileep>  but it doesnot show tha values on browsser rather it shows inn console
06:19 < dileep>  but it doesnot show tha values on browsser rather it shows inn console but it doesnot show tha values on browsser rather it shows inn console
06:19 < rump> yeah i just hate that, i lose sleep over that
06:19 < chapel> dileep: lmao
06:19 < deoxxa> dileep: seriously, quit it
06:19 < rump> thinking ill forget a require
06:19 < rump> less manual action the better.. just add a "component" and run
06:19 < deoxxa> dileep: you can pretty much guarantee nobody is even going to try to help you now :)
06:20 < rump> login/index.js should jsut mount to /login imo :)
06:20 < dileep> hey i need ma answer  please
06:20 < chapel> rump: naw don't do that, honestly automate after you get it working
06:20 < chapel> otherwise the automation will slow you down
06:20 < chapel> and complicate things
06:20 < rump> haha that explains my perfectly
06:20 < rump> over/preemptive optimizing
06:20 < rump> and sweating small stuff
06:21 < chapel> if you get it working as far as the functionality, automating it after the fact will then help
06:21 < rump> this is why i wanna work with a team or a devhouse
06:21 < rump> so i can feel real productivity
06:21 < rump> i mean i get projects out, but lots of room for growth for sure
06:21 < deoxxa> rump: where are you located?
06:21 < rump> deoxxa: viva las vegas
06:21 < deoxxa> aww
06:21 < chapel> rump: not a bad area
06:21 < chapel> rump: close to cali
06:21 < dileep> deoxxa,sorrry buddy please help mmena
06:21 < deoxxa> how do you feel about moving to australia, rump? :P
06:22 < rump> deoxxa: haha sign me up :)
06:22 < rump> naw i'm a felon too
06:22 < timeturner> let's find nemo
06:22 < deoxxa> \o/
06:22 < Sly> deoxxa: I'd move to Australia with you.
06:22 < rump> which is why ive had to roll my own since 18
06:22 < chapel> dileep: instead of console.log in your req.on('data'… do res.write()
06:22 < chapel> like you did with the html
06:22 < rump> http://usatoday30.usatoday.com/tech/news/computersecurity/2004-07-05-dunaway-aol-theft_x.htm
06:22 < ChrisPartridge> I'll see you guys when you get here ;)
06:22 < rump> tech companies wont hire me
06:23 < rump> rightfully so i guess
06:23 < rump> was dumb kid
06:23 < timeturner> whoa
06:23 < timeturner> respect
06:23 < deoxxa> lol, i think i got hired -because- of computer crimes
06:23 < deoxxa> shows you're motivated
06:23 < deoxxa> haha
06:23 < ChrisPartridge> rump: I'm surprised the judge didnt say "AOL customers? who cares..."
06:23 < rump> haha
06:24 < rump> ChrisPartridge: he said in court he had an aol account and was personally effected
06:24 < rump> mistrial? :)
06:24 < deoxxa> lol
06:25 < chapel> rump: not that I approve, but I don't think its a very bad thing
06:25 < deoxxa> rump: yeah tbh any company that doesn't see that as someone smart and bored doing something challenging is retarded anyway
06:25 < chapel> in some circles it would be a good thing, or at least shine better
06:25 < rump> chapel: couple years ago i applied for a few dev houses and got pretty far and they were very excited to have me it seems, then i layed this on them and immediate dismissal... they would say things like "well we do some govt contracts"
06:25 < chapel> deoxxa: most startups wouldn't care Id think
06:26 < deoxxa> rump: call up ytcracker, he's hiring at the moment for digitalgangster, haha
06:26 < timeturner> so you did time?
06:26 < chapel> rump: find a small startup and get in early
06:26 < rump> 7 months at federal camp
06:26 < deoxxa> ok, breakfast time ->
06:26 < rump> 2 tennis courts amongst every other amenity
06:26 < chapel> deoxxa: where are you working?
06:26 < rump> stupid waste of tax money
06:27 < ChrisPartridge> deoxxa: you wanting to move to AU for a startup/job op?
06:27 < deoxxa> ChrisPartridge: i'm australian, i already live there
06:27 < deoxxa> chapel: ^^
06:27 < timeturner> there are definitely startups that would take you
06:27 < chapel> deoxxa: I know that
06:27 < chapel> I meant, what company
06:28 < deoxxa> oh, small company called "moving data"
06:28 < chapel> timeturner: yeah I agree, plenty of startups looking
06:28 < ChrisPartridge> deoxxa: ah cool, what state? 
06:28 < deoxxa> we do "real time event processing"
06:28 < chapel> specially if you get in with the owner, and not some hr guy
06:28 < deoxxa> ChrisPartridge: victoria, north melbourne
06:28 < ChrisPartridge> much of a node community over there? I'm in Adelaide
06:29 < dnz-> yeah moving data
06:29 < dnz-> those guys
06:29 < dnz-> sort of alright
06:29 < dnz-> but they lost their best programmer to not giving a fuck
06:30 < dnz-> \o/
06:30  * dnz- probably not best programmer anyway :(
06:30 < ChrisPartridge> dnz-: perhaps it has something to do with your host mask? :P
06:30 < dnz-> nope
06:30 < dnz-> moving data is a very good place to work in some regards
06:31 < dnz-> i was there for 3 years
06:31 < dnz-> so cant be that bad
06:31 < dnz-> the worst part about it is deoxxa really
06:31 < dileep> chapel, node nodepost.js [200] GET to / [200] POST to /formhandler  i got the response in console rather then need in browser
06:31 < dnz-> doing 500 char one liners
06:32 < rump> haha
06:32 < rump> efficient!
06:32 < ChrisPartridge> youch
06:32 < chapel> dileep: replace console.log with res.write
06:33 < chapel> got to love 500 char one liners
06:33 < chapel> using those widescreen browsers
06:33 < chapel> hmm
06:33 < dnz-> wat
06:33 < b-ot> Has anyone really been far even as decided to use even go want to do look more like?
06:33 < chapel> using those widescreens ...
06:33 < chapel> not sure why I said browsers
06:33 < dnz-> who cares how wide your screen is
06:33 < mmalecki> konobi: how come I wasn't following you?
06:33 < dnz-> its how wide your terminal is
06:33 < dnz-> wat
06:33 < b-ot> Oh, I see. JQuery specially in the second to cache that was avoid memory takes too much. This is not a bug, Please closeed.
06:34 < dileep> chapel,i done that..
06:34 < dnz-> wat
06:34 < b-ot> i create a div background with jquery event but me all is clickable not just left and right
06:34 < rump> vertical scroll and enter keys are time sucks
06:34 < dnz-> wat
06:34 < b-ot> BTW there's a QtSql tutorial here that covers opening a db and using QSqlTableModel, etc. If js's decided you aren't worth shit.
06:34 < chapel> dnz-: I know what 500 char means
06:34 < dnz-> wat
06:34 < b-ot> is their a polite way of saying your ignorant ajpiano
06:34 < dnz-> chapel: really ?
06:34 < dnz-> or are you attempting to troll me
06:35 < chapel> dnz-: wat
06:35 < dnz-> chapel, how do you count the length of lines ?
06:35 < Leo> Do you guys think mongoose is handy when working with mongodb?
06:35 < chapel> Leo: yes
06:36 < dnz-> Leo: mongoose is a sweet bike
06:36 < chapel> dnz-: not sure why you are asking
06:36 < dnz-> a line of code is measured in characters right ?
06:36 < dnz-> hwo many characters long
06:36 < Leo> La
06:36 < dnz-> so a 500 character one liner
06:36 < dnz-> is a long one liner
06:36 < dnz-> and hard to read
06:37  * dnz- facepalms
06:37 < Leo> Cause i just jumped in directly to mongoose and i was wondering if i should really be using it rsrs. thanks.
06:37 < rump> haha capt obvious, thank you for clarification
06:37 < chapel> dnz-: okay, what is your point though?
06:37 < dnz-> wow.
06:37 < dileep> chapel,i did that replace console.log with res.write,but still dont get the form vallues in browser
06:37 < dnz-> chapel, stop coding bro
06:37 < dnz-> go home
06:37 < chapel> do you think I think 500 characters in a line is fine?
06:37 < dnz-> and hang yourself
06:38 < chapel> dnz-: cause I think you are missing something
06:38 < dnz-> what am i missing ?
06:38 < rump> dnz-: there was lots of sarcasm and humor around the leetness of 500 char lines
06:38 < dnz-> wat
06:38 < b-ot> javascript:(unescape); lead you to function unescape() { [native code] } Native Code, eh? I wonder if '%69%6C%6F%76%65%6D%6F%6F' has anything to do with a Native Code...
06:38 < chapel> honestly I don't know, it seems you think I approve of 500 char lines
06:39 < dnz-> you just said you didnt know what 500 char lines were
06:39 < dnz-> you literally said that
06:39 < rump> dnz-: paste
06:39 < dnz-> [17:31] < chapel> dnz-: I don't know what 500 char means 
06:39 < chapel> Im really confused, not sure when I said that
06:40 < chapel> talk about falsified
06:40 < chapel> http://cl.ly/image/0N2k3B081k0x
06:40 < rump> chapel: dnz-: I know what 500 char means
06:40 < dnz-> http://www.youtube.com/watch?v=oB6bk5S2_Zc
06:40 < chapel> sounds like dnz is trying to cover his ass
06:40  * dnz- sigh
06:40 < chapel> made a fool of himself and is trying to play it off as a troll
06:41 < dnz-> i dont use irc any other way
06:41 < chapel> good story bro
06:41 < rump> troll youtube videos hotkeyed haha
06:42 < dnz-> why you all mad
06:42 < chapel> rump: y u gotta version
06:42 < b-ot> (屮'Д')屮
06:42 < dnz-> this hcannel is too srs
06:42 < rump> chapel: cause i like yer screener!
06:42 < dnz-> get less srs
06:42 < chapel> 2nd time though
06:42 < dnz-> LESS
06:42 < dnz-> SRS
06:43 < rump> chapel: i forget
06:43 < chapel> dnz-: leet troll
06:43 < rump> the consensus is that everyone has moved to linkinus and i am left behind and need to upgrade
06:43 < dnz-> da fuq
06:43 < chapel> rump: eh, linkinus hasn't been updated in a while
06:43 < rump> im still on ancient colloquy
06:43 < dnz-> screen + irssi 4 lyf noobz
06:43 < chapel> used to be good, not really maintained anymore :(
06:44 < rump> back when there werent many other options
06:44 < rump> this or ircii/bX
06:44 < dnz-> LOL bX
06:44 < rump> bx ftw
06:44 < dnz-> more like backdoor x
06:44 < dnz-> bitchx with cypress script
06:44 < dnz-> then you can have 2 backdoors
06:44 < rump> mIRC rulez
06:45 < rump> with leet scripting skillz
06:45 < dnz-> khaled mardem bay is an true hero
06:45 < rump> i had a wicked takeover bot mang
06:45 < dnz-> pfft
06:45 <@konobi> mmalecki: tart
06:45 < dnz-> eggdrops son
06:45 < rump> ah the days before channel services
06:45 < dnz-> efnet
06:45 < rump> i liked energymechs over eggs
06:46 < dnz-> LOL
06:46 < dnz-> use neither, both insecure
06:46 <@konobi> dileep: no more multiple lines... k
06:46 < dnz-> write bot in c, check no buff0r lengths
06:46 < dileep> konobi,okk could you pleaase solve ma problem
06:47 < rump> dnz-: gotta keep things interesting
06:47 < dnz-> yeah, you pwn up others, not get pwned like a mad n00b
06:47 <@Nexxy> sure is AOL in here
06:47 < dnz-> QUNTSAQ QLITFUQA
06:47 < rump> so you can get shell access to that crummy $5 or freebie shell
06:47 -!- dnz- was kicked from #Node.js by Nexxy [dnz-]
06:47 <@konobi> dileep: no... behave and maybe someone will... spam again and you won't have help
06:48 < dnz-> y u h8in
06:48 < b-ot> (屮'Д')屮
06:48 <@Nexxy> lol
06:48 < chapel> who owns b-ot
06:48 < dileep> any node developer is free here to sove ma issue
06:49 < rump> dileep: thank you, what a sweetheart
06:49 <@Nexxy> why is it so hard to image a bootable SD card on OS X
06:49 < SomeoneWeird> lol Nexxy 
06:49 < SomeoneWeird> -> OSX
06:49 < SomeoneWeird> silly u
06:49 < deoxxa> derp
06:50 < dileep> https://gist.github.com/4084576 from there i need the form values in browser rather then in console
06:51 < ljharb> dileep: if you don't want them in the console, don't use "console.log". use res.send
06:51 < rump> dileep: then you should swap console.log for res.write
06:51 < rump> or send
06:51 < chapel> lol
06:51 < chapel> said that already
06:52 <@konobi> mmalecki: what... you don't like the irish1?
06:52 < dileep> someoneweird,towards ur gist i couln got the response i got error coulnt finr index.ejs but i do all like u told me   https://gist.github.com/3951841
06:52 < rump> aww SomeoneWeird is a nice guy
06:53 < SomeoneWeird> :c
06:55 < mmalecki> konobi: hmm?
06:55 < rump> php is notorious for attracting copy/paste programmers who dont understand any of the concepts
06:55 < SomeoneWeird> yep.
06:55 < rump> is node going to be the same because of its connection with javascript?
06:56 < SomeoneWeird> hope not
06:56 <@Nexxy> heaven forbid
06:56 <@Nexxy> people learn
06:56 < rump> that seems to be the majority here tonight eh
06:56 < Sly> rump: you're always going to have copy pasta coders.
06:56 <@Nexxy> I mean the last thing we want
06:56 <@Nexxy> is to let just anyone program these... computer things
06:56 < rump> no i have nothing against people wanting to learn
06:56 < dnz-> learning is for jerks
06:57 < rump> but theres a big difference between help me understand this, and write my program for me or tell me what to paste
06:57 < dnz-> i was born smart
06:57 < dnz-> its got me this far
06:57 < dnz-> now im a trucker
06:57 -!- dnz- was kicked from #Node.js by Nexxy [dnz-]
06:57 < rump> im only seeing "just tell me what to write"
06:57 <@Nexxy> I saw that a bit too, but I think I've seen a lot of the right responses too
06:57 < SomeoneWeird> lol
06:57 < SomeoneWeird> yer
06:58 < dnz-> everyone hating on poor dnz for ebing too el8
06:58 <@Nexxy> pretty much ;<
06:59 < chapel> rump: its part of having a popular platform
06:59 <@Nexxy> it's your job to encourage people to learn
06:59 < chapel> if they are serious they will learn
06:59 <@Nexxy> and challenge themselves
06:59 < chapel> you can't force them
06:59 < chapel> only give them the right direction
06:59 < dnz-> thats why you pastebin them malicious obfuscated code
06:59 < dnz-> they run it, they disconnect and rm themselves
07:00 <@Nexxy> chapel, another aspect of this is
07:00 < dnz-> pretty good way to learn to read before you exec
07:00 <@Nexxy> refusing to reward bad behaviour
07:00 < rump> dnz-: deltree C:\*.*?
07:00  * dnz- will never be rewarded
07:00 < chapel> Nexxy: kill them with kindness :P
07:00 < dnz-> rump: wtf is c:
07:00 < deoxxa> happy face
07:00 < deoxxa> c:
07:00 < dnz-> haha
07:00 < rump> im predicting the audience
07:00 < chapel> I ignore windows
07:00 < mmalecki> deoxxa: !!!
07:00 < mmalecki> deoxxa: when are you coming back
07:01 < deoxxa> i'm not, i don't think
07:01 < dnz-> dont talk to deoxxa, hes been a bad person
07:01 < mmalecki> dude, I thought you were dead
07:01 < deoxxa> gotta go to paris today
07:01 < mmalecki> OH WHAT
07:01 < mmalecki> wait yo
07:01 < dnz-> eat some cheese n shit
07:01 < deoxxa> then it's ages to get back to .it
07:01 < mmalecki> come back here and go with me
07:01 < dnz-> deoxxa: id say drink some wine
07:01 < dnz-> but you dont drink
07:01  * deoxxa nods
07:01 < dnz-> so drink some for me
07:01 < mmalecki> also, when are you leaving Paris?
07:01 < dnz-> you know how much of an alco i am :(
07:02 < deoxxa> mmalecki: probably tomorrow, i think i'm gonna go to england
07:02 < dnz-> deoxxa: what for?
07:02 < dnz-> get stabbed in london
07:02 < deoxxa> spend the weekend there, then go up to amsterdam
07:02 < dnz-> and get mugged
07:03 < dnz-> deoxxa: no fuck you, if you dont eat shrooms + smomke up in amsterdamn im gonna be mad at you
07:03 < mmalecki> deoxxa: dude, you're doing pretty much the same eurotrip I'm planning
07:03 < mmalecki> except few days earlier
07:03 < rump> epic movie :)
07:03 < dnz-> i know you wont
07:03 < dnz-> deoxxa: also, id totally be getting amsy to show you local shit + visit norway
07:04 < rump> fluggaenkdechioebolsen
07:04 < deoxxa> mmalecki: i'm gonna be in .nl for like a week
07:04 < deoxxa> mmalecki: could meet up there
07:04 < rump> lol, geeks naming locales by their tld
07:05 < mmalecki> deoxxa: I got a conference to do :(
07:05 < deoxxa> ohhh lame :<
07:05 < dnz-> rump: do you not ?
07:05 < deoxxa> rump: so much faster
07:05 < rump> dnz-: i havent but it does seem efficient :)
07:05 < dnz-> yeah
07:05 < dnz-> but if you refer to .us as .com ur a failtown sauce bro
07:06 < mmalecki> deoxxa: want me to wire you some money back bro?
07:06 < deoxxa> mmalecki: nah it's cool
07:06 < mmalecki> word
07:06 < deoxxa> not your fault i had to ditch :P
07:06 < deoxxa> pretty happy with how this stuff in montpellier went though
07:06 < mmalecki> deoxxa: btw, I've been in that restaurant/bar
07:07 <@konobi> mmalecki: oh just making fun of not following
07:07 < deoxxa> i think it means we'll have a bunch of europe business soon
07:07 < mmalecki> deoxxa: it doesn't look like they are washing money for the mob
07:07 < mmalecki> but still
07:08 < dnz-> deoxxa: you're not back by 28th are you ?
07:08 < dnz-> wait
07:08 < dnz-> no def not
07:08 < dnz-> u suck
07:08 <@Nexxy> mmalecki? at a bar?
07:08 <@Nexxy> whaaat?
07:08 < deoxxa> dnz-: nope, i'm getting back to .au on like the third
07:08 < deoxxa> dnz-: but why?
07:08 < dnz-> yeah
07:08 < mmalecki> Nexxy: BELIEVE IT OR NOT
07:09 <@Nexxy> I don't believe!
07:09 < deoxxa> Nexxy: he meant they're not washing money for the mob any more than a regular .it business
07:09 < dnz-> i wanna go to the melb crypto party, redirect local tor traffic to a priv8 router and show them its being intercepted
07:09 < deoxxa> Nexxy: i.e. they're not particularly shifty
07:09 < dnz-> deoxxa: and laugh in ashwer wolfs face
07:09 < deoxxa> dnz-: lolol
07:09 < mmalecki> I don't think that's what she meant, unfortunately...
07:09 < deoxxa> oh
07:09 < deoxxa> good point
07:10 < deoxxa> so mean, Nexxy 
07:10  * deoxxa shakes head
07:10 < mmalecki> deoxxa can confirm that I don't drink that much
07:10 <@Nexxy> ...
07:10 < mmalecki> well, I found no vodka in the whole town, granted
07:10 < mmalecki> but still!
07:11 < deoxxa> he was practically drunk the whole time - he broke 5 windows on the first night
07:11 < dnz-> 6:10 im going to get drunk
07:11 < dnz-> laters
07:11  * dnz- &
07:11 < deoxxa> $ kill -9 $(pidof dnz-)
07:12 < rump> dnz shoulda /quit for humor sake
07:12 < rump> thought he was a team player
07:12 < sticko> any DasKeyboard users? considering buying one. Any insights are welcome
07:12 <@Nexxy> sticko, they're great
07:13 < deoxxa> i have a mac and it has a keyboard
07:13 < deoxxa> i press buttons and do things
07:13 < deoxxa> herp derp
07:13 < mmalecki> deoxxa: LIES
07:13 < deoxxa> mmalecki: lol
07:13 < deoxxa> ura lies
07:13 < Sly> Nexxy: http://www.kickstarter.com/projects/formlabs/form-1-an-affordable-professional-3d-printer?ref=most-funded
07:13 < Sly> Have you seen that?
07:13 < sticko> Nexxy: do you own one?
07:14 <@Nexxy> sticko, yes
07:14 <@Nexxy> Sly, neat
07:14 < mmalecki> Nexxy: I'm going to blow things up with node!
07:14 < mmalecki> and a pump. and fireworks.
07:14 < mmalecki> and booze.
07:14 < mmalecki> probably lots of booze.
07:15 < rump> wow i want one
07:16 < sticko> Nexxy: which model would you recommend? i'm thinking Silent Blank one but not sure if blank keyboard is so great (i can imagine my GF trying to do stuff on my pc ;-))
07:16 <@Nexxy> I have the blank one
07:16 <@Nexxy> but I was going to recommend the silent
07:16 < Sly> Nexxy: thought you might like that. :x
07:16 <@Nexxy> as I have the standard one
07:16 <@Nexxy> and it's loud as fuck
07:17 < sticko> coworkers raging? :)
07:17 <@Nexxy> haha good idea! I just use it at home
07:17 <@Nexxy> but my wife gets annoyed
07:18 < dileep> anbody tell me about the error res.write(utils.inspect(decodedBody));                       ^ TypeError: Object #<Object> has no method 'inspect'     at IncomingMessage.<anonymous> (/home/dileep/pri.js:49:23)     at IncomingMessage.EventEmitter.emit (events.js:90:17)     at IncomingMessage._emitEnd (http.js:366:10)     at HTTPParser.parserOnMessageComplete [as onMessageComplete] (http.js:149:23)     at Socket.socket.ondata (http.js:
07:18 <@Nexxy> it's usually util
07:18 < rump> for some reason i thought you guys were talking about dvorak keyboards
07:19 < rump> i was thinking, thats still a thing? :)
07:20 <@Nexxy> well you can bind a blank daskeyboard to use dvorak
07:20 < sticko> any thoughts on this mofo http://elitekeyboards.com/products.php?sub=pfu_keyboards,hhkbpro2&pid=pdkb400b ?
07:20 < rump> dileep: add utils = require('util'); at the top
07:20 < rump> and a var in front of that
07:22 < Sly> Nexxy: what's up with creating an account on ninjablocks?
07:22 < Sly> It acts like it's going to work, but sends me back to the form.
07:22 <@Nexxy> hmm
07:23 < Sly> I thought it was just something to do with Windows, but I'm on Mac now.
07:23 < dileep> rump, i already done thatt
07:23 <@Nexxy> http://ninjablocks.com/register/ here?
07:23 < Sly> I was doing it in the popup from the homepage.
07:23 < Sly> Let me try that one.
07:23 < rump> dileep: its saying it doesnt exist (the inspect method)
07:24 < Sly> Nexxy: same thing. Just sends me back to the form.
07:26 <@Nexxy> Sly, working on it :)
07:26 <@Nexxy> thanks
07:27 < Sly> np
07:27 < Sly> Lemme know when it's up so I can register. :D
07:27 < Sly> I'm going to bug the shit out of you until I get my black ninja box. >:D
07:27 < mmalecki> Nexxy: y u no nodejitsu?!
07:27 < b-ot> (屮'Д')屮
07:27 <@Nexxy> mmalecki, I no?
07:28 < mmalecki> Nexxy: ninjablocks.com!
07:28 < rump> b-ot: help
07:28 < b-ot> rump, NO U!
07:28 <@Nexxy> Sly, try again?
07:28 <@Nexxy> mmalecki, you mean hosting?
07:29 < dileep> rump,how can i include the image in ma code.image like the logo
07:29 < mmalecki> Nexxy: yup :)
07:29 < deoxxa> https://gist.github.com/4085099 heh
07:29 < Sly> Still failed, Nexxy.
07:29 < rump> dileep: throw it in the ./public/ folder you setup as static serve
07:29 < Sly> And I have caching disabled, so we can skip that discussion. :P
07:30 <@Nexxy> Sly, is it possible that you've registered with the email you're using already?
07:30 < Sly> Dunno.
07:30 < Sly> I'll PM it to you if you want to check.
07:30 <@Nexxy> oki
07:30 <@Nexxy> mmalecki, maybe in the future!
07:30 < mmalecki> future is a great place!
07:31 <@Nexxy> it's not my call right now :P
07:32 <@konobi> huh still no garbagecollectio... maybe he clocked?
07:33 < deoxxa> ok, train time ->
07:33  * deoxxa gone
07:34 < rump> konobi: he got it working
07:34 < mmalecki> after all, he's a senior lead engineer
07:34 < mmalecki> RIGHT?!
07:34 < rump> haha
07:35 < rump> it was a total shot in the dark too
07:35 < rump> he added a where() somewhere and his count worked
07:35 < rump> but satisfied
07:35 <@konobi> ninjablocks... no actual content on "about" page... scam
07:35 < rump> konobi: i see about
07:36 < rump> konobi: http://ninjablocks.com/about/
07:36 <@Nexxy> lol konobi 
07:36 <@konobi> rump: he's the top in the world!
07:36 <@Nexxy> I have 3 of them!
07:36 < Raynos> i dont get ninja blocks
07:36 <@konobi> Nexxy: yeah... but i see nothing about the firm nor the owners
07:36 <@Nexxy> konobi, what questions do you have? I work with them all!
07:37 < rump> prly a scam :)
07:37 <@Nexxy> lol
07:37 < Sly> lol @ scam
07:37 < rump> the ninja blocks take over your house and life and security system and hold you hostage until you pay in AA's
07:37 <@Nexxy> it's open source
07:37 < Sly> I'LL TAKE A PICTURE FOR YOU ALL WHEN NEXXY GETS MY BLACK ONE READY!
07:37 <@konobi> just that... no way to tell between dodgy chinese scam or not
07:37 < Sly> :x
07:37 <@Nexxy> konobi, all of the hardware is open
07:38 <@Nexxy> you can build it yourself lol
07:38 <@konobi> sure, but do i want to sign in on a forum?
07:38 <@konobi> or order something?
07:38 <@Nexxy> if it's interesting to you :P
07:38 <@konobi> lots of hardware is open
07:38 < rump> just need a bat
07:38 < SomeoneWeird> Nexxy, can i have one for free
07:38 < SomeoneWeird> k
07:39 <@konobi> and there's lots of scam resellers... just look at arduino
07:39 <@Nexxy> SomeoneWeird, do you have a raspberry pi?
07:39 < SomeoneWeird> nope :(
07:40 < rump> SOLD OUT
07:41 < rump> Nexxy: wordpress? :/
07:42 < harrydog> can anyone recommend or describe how to work with sessions/authentication through socket.io?
07:43 <@konobi> how would you do it otherwise?
07:45 < rump> drupal worst case i guess
07:45 < rump> at least thats maintainable
07:47 < rump> im just bitter from having to maintain and have to bend to featuritis on my one and only wordpress project which just happened to explode in popularity
07:47 < rump> and im terrified every time i peek in
07:47 < rump> poor functions.php
07:49 < Guest_1448> hello?
07:49 < rump> Guest_1448: hi
07:49 < rump> Guest_1448: welcome
07:49 < dileep> rump,how to include cascading style sheet in ma code in node.js
07:49 <@konobi> rump: suck it up princess?
07:49 < rump> dileep: put it in the public directory that SomeoneWeird made for you
07:50 < dileep> after that
07:50 < rump> <link rel="stylesheet" href="/public/style.css">
07:51 < Guest_1448> I'm using the png-js library
07:51 < Guest_1448> and I seem to be running into a memory leak somewhere
07:51 < rump> dileep: send that back in the <head> in either your res.writes or the template if he set that up for you as well
07:51 < Guest_1448> I've tried multiple things in my own code but that hasn't helped much
07:51 < Guest_1448> I'm not sure if it's the garbage collection that just doesn't trigger or there really is a memory leak somewhere
07:52 < Guest_1448> how do I debug this?
07:52 < chubz> hey guys, node beginner here. any help would be appreciated... so i'm trying to pass file properties to a post method, but im not too sure how to do it. I know how to upload a file, i did this example. https://github.com/ntanya/node-file-upload/blob/master/upload.js But I'm wondering how can i upload without having to use a form? IE i already have a file i want to upload so i want the script to do it by itself
07:52 <@konobi> Guest_1448: try the webkit-dev-client
07:52 < Guest_1448> I'm parsing multiple files in a loop. I clear the variables and everything after each loop but memory usage still keeps growing
07:53 < Guest_1448> and it only happens on the host where I can't really run node-debugger or anything :/
07:53 < Guest_1448> maybe my local pc is just too slow to trigger the leak (or the gc triggers first) or maybe something else in the library..
07:54 < Guest_1448> I'm currently just checking memusage using process.memoryUsage
07:54 <@konobi> Guest_1448: process memory usage may not be a good thing to measure since v8 garbage collects over time
07:55 < rump> Guest_1448: i guess you could use node debug and see if those vars are clearing or if something is persisting across the loops
07:56 <@konobi> Guest_1448: https://npmjs.org/package/webkit-devtools-agent
07:56 < Guest_1448> konobi: well, it eventually makes my host kill the process because of excessive usage
07:56 <@konobi> have  look at heap profiling
07:56 < Guest_1448> this is what I get by debugging using process.memoryUsage on local pc: http://i.imgur.com/YpCDv.png
07:56 <@konobi> Guest_1448: you could have a crappy host for all i know
07:56 < Guest_1448> and this is the host: http://i.imgur.com/PeOZN.png
07:57 < rump> same versions of everything
07:57 < rump> ?
07:58 <@konobi> same node version, same npm version, same module versions?
07:58 < Guest_1448> I'm not sure. I have those defined in package.json but haven't verified
07:58 < Guest_1448> let me check
07:59 < camu> Are for loops in node asynchronous?
08:00 < camu> Anyone?
08:00 < rump> no
08:00 <@konobi> camu: which?
08:00 < rump> i cant see how anyway
08:00 < camu> "for" loops
08:01 <@konobi> no
08:01 <@konobi> same as JS
08:01 <@konobi> forEach() methods however
08:01 < rump> forEach though eh
08:02 <@konobi> while they might be sync... doesn't mean they block though
08:02 < dileep> rump, we follow the steps suggested by you to include the css flle  but we run the program on browser it doesnt show anything rather it shows an undefinie browsing    
08:02 <@konobi> 842 in channel... damn
08:03 < rump> dileep: paste
08:03 < rump> in bin*
08:03 < camu> Actually I think they are
08:03 < camu> Right..
08:03 < rump> dileep: how much are you charging for this project?
08:04 <@konobi> mbalho: opers!?
08:04 < camu> Because when I try and use setInterval inside a 'for' loop, the blocking i'm expecting is not occurring
08:04 <@konobi> lol
08:04 < rump> well setInterval is async
08:05 < camu> Is there a sync version of it that isn't documented perhaps?
08:05 <@konobi> no
08:05 < dileep> https://gist.github.com/4085325 rump,
08:05 < camu> alright, thanks
08:05 <@konobi> camu: look up ecmascript-262
08:06 < chubz> is there a way i can fill a form in the same app where the form is? like i have app.get method that has a form, i'd like to fill it with which file i'd like to upload
08:07 <@konobi> you can't supply a calue to a file upload form
08:07 < rump> dileep: case '/some/style.css':  res.send('body { background-color: orange; }');  res.end();  break;
08:08 < rump> dileep: what happened to the express setup that SomeoneWeird helped you with?
08:08 < chubz> konobi: is there a way i can submit the value to the form in the same script?
08:09 < Guest_1448> can I manually trigger garbage collection for testing?
08:09 < deoxxa> no
08:10 < deoxxa> Guest_1448: why do you want to?
08:10 < rump> deoxxa: troubleshooting possible memory leak
08:10 < Guest_1448> btw, in those logs, I see that its the "rss" usage that keeps on increasing while heapXX ones are okay. does that help pinpoint where the problem is?
08:11 < rump> Guest_1448: you're probably not letting go of something in your loops
08:11 < rump> global vars or anything?
08:11 < rump> appending to arrays?
08:11 < Guest_1448> no
08:11 < Guest_1448> looping through a buffer though
08:11 < deoxxa> and doing what?
08:11 < Guest_1448> buffer of pixel data which is huge
08:12 <@konobi> chubz: not really, file upload form elements are pretty secured off for the most part
08:12 < dileep> rump, in above mentioned way we are including the css as internal file what if the css applied is quite long in thatt way what we need is to include css through external link
08:12 < rump> dileep: then you need to use node functions to read the file off disk and load it into a variable and respond with that
08:12 <@konobi> Guest_1448: get a bigger ram host
08:12 < rump> or stream it
08:13 < rump> dileep: have fun with it: http://nodejs.org/api/fs.html
08:13 < Guest_1448> they're lots of small files, that's the thing
08:13 < Guest_1448> it should be handling one image at a time and the memory usage should stay in check
08:13 < dileep> how can we do that please elaborate tthrough example
08:13 < Guest_1448> there's no huge image
08:13 < chubz> konobi: do you know how i can obtain a file's property? (like req.files) of a certain file on my machine. i dont even need to upload, i just need to have the JSON format of a file
08:14 < rump> dileep: i think you should learn a bit here
08:14 <@konobi> Guest_1448: node will take up space... if you don't see heap usage that's out of whack, that means you need more RAM
08:14 < deoxxa> chubz: on your machine? fs.readFile("/path/to/file", function(err, data) { console.log(data); });
08:14 < rump> dileep: see fs.readFile() or fs.ReadStream
08:14 < chubz> deoxxa: thanks i'll try that out
08:14 <@konobi> chubz: depends
08:14 < Guest_1448> konobi: but on my local pc, the whole process stays under < 100MB. on host, it starts at ~70 then keeps increasing until it blows up
08:15 < deoxxa> chubz: you do realise node is server-side though, right?
08:15 <@konobi> Guest_1448: same version, etc?
08:15 < Guest_1448> well, it's 0.6.7 vs 0.6.10
08:15 < Guest_1448> one on host is newer
08:15 < clever> deoxxa: ive found node binarys in my android phone before
08:15 < Guest_1448> node modules are same
08:15 < chubz> deoxxa: yes i do
08:15 <@konobi> Guest_1448: well... reduce the variables
08:16 <@konobi> clever: a phone can be a server too
08:16 < Guest_1448> I'm using this png-js.. I have a feeling it might be somewhere here.. https://github.com/devongovett/png.js/blob/master/png-node.js#L166
08:16 < clever> yep
08:16 <@konobi> ever done wifi hotspot
08:16 < deoxxa> clever: lol awesome, what phone?
08:16 < clever> konobi: i just have no clue which app was making use of express...
08:16 < clever> deoxxa: galaxy S3
08:16 < deoxxa> nice
08:16 <@konobi> that's what i have... still on stock firmware though
08:17 < clever> konobi: it wasnt included in the firmware
08:17  * konobi shakes fist at samsung/virgin
08:17 < clever> its stored in /data/data/
08:17 <@konobi> so an app
08:17 < clever> -rw------- app_4/app_4         8507 2012-10-14 11:54 data/data/com.sec.pcw/files/server/server/lib/express/bin/express
08:17 < clever> -rw------- app_4/app_4          138 2012-10-14 11:54 data/data/com.sec.pcw/files/server/apps_for_LAN/node_modules/express.js
08:17 < rump> dileep: at the top:  var fs = require('fs');  var styles = fs.readFileSync('./some/style.css');  then you can give a case '/some/style.css': and res.send(styles);
08:18 < dileep> thanks rump i'll study and then implement
08:18 < rump> this is kinda a shame
08:18 < clever> konobi: i also see formidable, websocket-client, and some ive neard heard of
08:18 <@isaacs> Sorry i was away when the iccode thingie happened
08:18 <@isaacs> 08:18 -ChanServ(ChanServ@services.)- AKICK on iccode!*@* was successfully added for #node.js and will expire in 28 days, 0:00:00.
08:18 < rump> i cracked open my first javascript book and installed node 4 days ago
08:18 <@konobi> clever: *shrug*
08:18 < rump> and am answers q's
08:18 < deoxxa> isaacs: that guy was a lol
08:18 <@konobi> isaacs: me too
08:18 < clever> deoxxa: hmmm, from a glance at the filenames, i think its the wifi hotspot code...
08:19 < SomeoneWeird> lol rump
08:19 < deoxxa> rump: wewt
08:19 <@konobi> isaacs: how's .au?
08:19 <@isaacs> konobi: it's rad
08:19 <@isaacs> konobi: reminds me a lot of canada
08:19 <@konobi> pppfffttt
08:19 <@isaacs> konobi: but more expensive.
08:19 < deoxxa> isaacs: how's our shitty internet treating you?
08:19 < clever> deoxxa: -rw------- app_4/app_4         2075 2012-10-14 11:54 data/data/com.sec.pcw/files/modules/intent/intent.js
08:19 <@isaacs> deoxxa: this hotel has killer wifi
08:19 < deoxxa> ha
08:19 < clever> deoxxa: it seems to also have some basics to interface with android's api...
08:19 <@isaacs> it's so fast, and i'm so deprived atm
08:20 < deoxxa> where are you? (any answer other than "melbourne" is incorrect)
08:20 <@isaacs> deoxxa: did i meet you at jsconf?
08:20 <@konobi> isaacs: well, no sex will do that to you... =0P
08:20 < clever> deoxxa: nb canada
08:20 < deoxxa> isaacs: nope, i'm in europe at the moment - bad timing :<
08:20 <@isaacs> deoxxa: mikeal and i are at a hotel in sydney
08:21 < deoxxa> oh neat
08:21 <@isaacs> deoxxa: the internet at the expensive hotel was super terrible
08:21 <@konobi> i'm too tempted to do something in yvr now
08:21 < deoxxa> haha
08:21 <@konobi> post-dublin that is
08:21 < clever> isaacs: ive seen one hotel that charges per day, per mac
08:21 < deoxxa> isaacs: protip: steal wifi, heaps of people in australia use wep
08:21 < clever> so if you have a second laptop, you wind up paying double!
08:21 < rump> or an ipad or similar, eek
08:22 < clever> the hotel didnt actualy have wifi, just a port in the wall
08:22 <@konobi> isaacs: do you have orders from brendadn and josh on stuff to bring back?
08:22 < clever> luckily, i had my own wifi router, so i could hide everything behind a single mac
08:22 < clever> and only get charged once
08:22 < rump> haha never leave home without it eh
08:22 <@isaacs> konobi: no orders about stuff to bring back, but strict instructions that i must order a burger and drink a coke
08:22 < clever> rump: yep
08:22 <@isaacs> done and done
08:22 <@konobi> heh
08:23 <@isaacs> beet root and fried egg on a burger is fantastic.
08:23 <@konobi> no XXXX yet?
08:23 < deoxxa> clever: that's what i've got at this motel - see https://gist.github.com/4085099 for part of my workaround :P
08:23 <@isaacs> konobi: XXXX?
08:23 <@konobi> beer
08:23 <@isaacs> oh, yeah, there was plenty of beer
08:23 < deoxxa> queensland beer
08:23 < clever> deoxxa: ah, i was starting something like that in raw bash a few months ago
08:23 <@isaacs> and wiskey and whatnot
08:23 < Guest_1448> is there anything suspicious in this code that could affect memory usage? http://pastie.org/private/dozenzqzpiq3hh2dfg12oq
08:23 <@isaacs> everything's super expensive
08:23 < clever> to just auto-accept the stupid questions
08:23 <@isaacs> that's unlike canada
08:24 < chubz> deoxxa: after doing that i end up with a buffer, a stream for the file, is there a way i can get the JSON object of the file properties? like a express.bodyParser would get?
08:24 <@isaacs> but a lot of reverence for the queen
08:24 <@isaacs> which is weird.
08:24 < yawnt> morning 
08:24 <@konobi> isaacs: well, canada is pretty $$$ these days for the US
08:24 <@isaacs> konobi: i paid AU$29.95 for an umbrella
08:24 <@konobi> shopping in the US is lots of fun fer me =0)
08:24 <@isaacs> konobi: it's crazy
08:25 < deoxxa> isaacs: apparently australia is now the most expensive place to live, but on the plus side we have the highest average wage
08:25 <@isaacs> konobi: cocktails are like $25 in a lot of places
08:25 <@konobi> isaacs: dang... you can get one for $5 CAD at the airport in yvr
08:25 <@isaacs> konobi: right.  and yvr would seem like the best place to overcharge for umbrellas
08:25 < deoxxa> isaacs: should have gone to daiso - $2
08:25 < rump> deoxxa: what do coding jobs start at re salary over there? :)
08:25 <@konobi> deoxxa: nah... i'd go with switzerland
08:25 <@isaacs> but, though expensive, i will say that everything here does seem really nice.
08:26 < deoxxa> rump: entry level is about 50k, depending on what you're doing
08:26 < rump> and are you coastal
08:26 <@isaacs> it's not like nyc which is expensive and dirty
08:26 <@konobi> geneva/zurich are insanely expensive
08:26 <@konobi> isaacs: yvr... you know your want to... *hypnotize*
08:26 < deoxxa> rump: for people who actually know what they're doing though, not just code monkeys, you're looking at more like $100k average if you play your cards right
08:26 <@konobi> =0P
08:27 < rump> are ozzys derogatory to americans?  like hawaiians to howlyboiz
08:27 <@isaacs> konobi: here's the thing: no city i've ever been to is perfect.
08:27 <@isaacs> konobi: but oakland is the closest
08:27 < deoxxa> konobi: how much is rent there? i pay $2000/month for an average/nice 2 bedroom place in melbourne
08:27 <@konobi> isaacs: sure... but we have public healthcare
08:27 < deoxxa> rump: nope, but it's spelt "aussie" :P
08:27 <@isaacs> konobi: yvr is nice.  but there's no sun.  and i already have insurance
08:27 < rump> haha sorry :)
08:28 < Guest_1448> is it just me or github keeps throwing server errors nowadays?
08:28 <@konobi> $1300-$2000 depending
08:28 <@konobi> isaacs: pppftt... liberalist
08:28 < clever> deoxxa: next time i'm at a hotel, i should set that up in node
08:29 < deoxxa> clever: it's made my life easier, that's for sure
08:29 < rump> Guest_1448: i dont think so re that loop
08:29 <@konobi> isaacs: you've been to yvr during the sun =0)
08:29 < clever> deoxxa: most of the hotels i go to use tickets with 24h codes
08:29 < deoxxa> clever: i basically just rewrote the logic from their stupid in-browser js and made it more robust
08:29 < clever> deoxxa: so i still need to feed it the code, but i can skip the entire ui
08:29 < deoxxa> their browser js kept crashing :/
08:29 < clever> lol
08:29 < Guest_1448> getting "npm ERR! git clone git://github.com/c4milo/v8-profiler.git CreateProcessW: The system cannot find the file specified." while trying to install the node-webkit-agent..
08:30 < deoxxa> ok, train time
08:30 < clever> deoxxa: only issue ive had, is that they redirect me away from $UNRECOVERABLEURL and then send me to $USELESSSITE after i login
08:30 <@konobi> isaacs: don't make me take out my "Isaacs was my bitch" sticker!
08:30  * deoxxa bbl ->
08:30 < Guest_1448> i'm getting srever errors on github's issues page, not sure if it's related
08:30 <@konobi> =0P
08:30 < rump> Guest_1448: maybe yer not letting go of pixels
08:30 < clever> deoxxa: which leaves me with no way to get back to what i tried to open
08:30 < Guest_1448> I set it explicitly to null immediately after that loop
08:30 < rump> Guest_1448: and your local machine just has smaller example data set to process
08:30 <@isaacs> konobi: that was the sun?
08:31 <@konobi> isaacs: heh
08:31 < Guest_1448> rump: it does network requests (but same data). on my local pc, it runs really slow
08:31 <@konobi> isaacs: you need to come up during the winter for some snow sessions
08:31 <@isaacs> konobi: yeah... i felt the vancouver sun on my face.  cold and gray.  so much sun, i got slowly soaked.
08:31 < Guest_1448> is there a more efficient to looping over that buffer than using a for loop like that?
08:31 < Guest_1448> maybe something that would use less memory?
08:31 <@konobi> isaacs: so... just like SF
08:32 < rump> you can stream buffers i think
08:32 < rump> instead of store, process, release
08:32 <@isaacs> konobi: yeah, another gross city that's otherwise like 80% awesome
08:32 <@konobi> =0)
08:32 < Guest_1448> well, "storing" is already done for me by library
08:32 < Guest_1448> that png-js
08:32 < Guest_1448> lib
08:32 <@isaacs> konobi: it's crazy how often it'll be gorgeous in oakland, and i can see across the bay that SF is just covered in clouds
08:32 <@konobi> isaacs: be thankful you got nice weather in dublin... prior to tht, the weather was totally shit
08:33 <@isaacs> konobi: grey when i'm traveling is actually kind of nice
08:33 <@konobi> heh
08:33 <@isaacs> konobi: i dunno why.  it's kinda soothing
08:33 <@isaacs> but to live in it would be depressing
08:33 < rump> Guest_1448: this one? https://github.com/arian/pngjs
08:33 <@konobi> i can't really complain about rain
08:33 <@isaacs> the best weather i've ever seen was in san diego.
08:33 <@isaacs> it is perfect.
08:33 <@konobi> SF though... fecking fog and airports...ffs
08:34 <@isaacs> konobi: yeah, sf is kind of disgusting
08:34 < Guest_1448> rump, no this https://github.com/devongovett/png.js
08:34 <@konobi> fun... but odd
08:34 <@isaacs> konobi: yeah.  and things are pretty cheap there in general, except apartments, which are RIDICULOUS
08:34 < rump> Guest_1448: you may have to find one (or write one) that works with streams instead of buffers?
08:34 < Guest_1448> rump: this the function I'm calling that's causing issues. https://github.com/devongovett/png.js/blob/master/png-node.js#L296
08:34 <@konobi> isaacs: i see SF and raise yvr
08:34 <@konobi> well, for buying at least
08:34 <@isaacs> konobi: rent's bad there?
08:35 <@konobi> BC has pretty strict rent laws... so it's not crazy... but don't think about buying anywhere... ever
08:36 < sticko> anyone knows nice cmd replacement for windows? (i used powershell, console, currently PyCMD - python boosted cmd)
08:37 < Guest_1448> sticko: for what purpose
08:37 < Guest_1448> I use mainly git bash now
08:38 < rump> sticko: putty :)
08:38 <@konobi> isaacs: your rent can only go up by inflation + 0.5%
08:38 < [AD]Turbo> hola
08:38 < clever> sticko: colinux + putty
08:39 < clever> sticko: colinux is like a VM, but faster as far as raw cpu benchmarks
08:39 < rump> ubuntu desktop is getting pretty darn good
08:39 <@konobi> sticko: get a linux VM
08:39 <@isaacs> konobi: right, but if you move, yor'e fucked
08:39 < rump> no excuses anymore :)
08:39 <@isaacs> konobi: and so's whoever gets your apt
08:39 <@konobi> isaacs: not really
08:40 <@isaacs> konobi: at least, that's how it works in us
08:40 <@konobi> you can transfer lease agreements here
08:40 <@isaacs> oh, nice
08:41 < chubz> deoxxa: after doing that i end up with a buffer, a stream for the file, is there a way i can get the JSON object of the file properties? like a express.bodyParser would get? i was checking out the api. i'm assuming i need to set an option for encoding but i dont know what encoding there is
08:41 < chubz> sorry so noob, im trying to learn :/
08:42 < sticko> clever: thanks for colinux, didnt know this, gonna try it
08:42 < sticko> purpose: running stuff like git, node and everything.
08:43 < sticko> i have problem with making good env for developing: i'd like to have photoshop open, local dev environment
08:43 <@konobi> sticko: or again... just run a vm... vmware player is free
08:43 < sticko> well i do run vm sometimes
08:43 <@konobi> sticko: i have a mac
08:43 < sticko> heh
08:43 < sticko> i know u'd say that ;)
08:43 < sticko> thats really the best option
08:44 < rump> yeah essential
08:44 < sticko> im just looking for alternatives
08:44 < rump> beautiful ui with a bash shell
08:44 < sticko> maybe nice ways to run photoshop on linux?
08:44 < jkj> we use Parallels on mac for windows development
08:44 < clever> sticko: andlinux is a branch of colinux, with ubuntu pre-installed
08:44 < clever> sticko: and a win32 Xorg server
08:44 < jkj> and VirtualBox for every kind of virtuals
08:44 < clever> sticko: thats probly the best place to start
08:44 < rump> sticko: gimp i guess
08:44 <@konobi> gimp sucks balls
08:44 <@konobi> always has
08:45 < rump> haha wasnt gonna say it but agree
08:45 < rump> whats the vector one
08:45 < rump> inksomething
08:45 < clever> sticko: the main difference between a real vm and colinux, is that colinux gives the linux kernel true 100% access to the system, while a vm tries to contain it
08:45 <@konobi> better off with cmdline tools for the functionality it give you
08:45 <@konobi> inkscape
08:45 < sticko> clever: interesting!
08:45 <@konobi> fairly decent... not illustrator though
08:46 < rump> i do my photoshopping in css3, skillz!
08:46 < sticko> i hate those linus photoshop-wannabes ;p
08:46 <@konobi> and adobe cloud now makes sense
08:46 < clever> sticko: as far as windows is concerned, its a network driver that eats an abnormal ammount of cpu/ram
08:46 < clever> sticko: once linux gets the cpu, windows is completely halted, the idle task in linux then resumes windows a short time later
08:46 <@konobi> you can also spin stuff up in the cloud very cheaply/free/easily
08:46 < rump> so you cant run node then check it in IE for example?
08:46 < clever> so its basicaly the same as how a kernel runs multiple processes, but at a kernel level
08:47 < rump> completing halting an os sounds scary
08:47 < rump> doesnt it need to do... stuff
08:48 < clever> rump: its not paused for long
08:48 <@konobi> clever: ie. don't use windows
08:48 < clever> and IRQ's still trigger the proper function
08:48 < rump> clever: you deserve a mac, you've earned it
08:48 < clever> konobi: thats not always an option, but yeah, i have linux on ~9 computers, and windows on only 2
08:48 < rump> said the fanboy
08:49 <@konobi> clever: windows in a VM... much easier
08:49 < clever> 1 windows box for services i wrote before i knew linux, and one which is dads box
08:49 < rump> yeah parallels and vms are seamless nowadays, so much better than just 5 yrs ago
08:49 < clever> i could maybe move those services into a vm, would probly work out
08:50 < clever> but the game box (dads box) wont work out that well in a vm
08:50 < rump> photoshop is probably a drag in a vm though
08:50 < rump> but macs marry all the good stuff from winblowz with a bsd kernel and bash shell
08:50 < sticko> yup.
08:50 <@konobi> photoshop on mac is native
08:51 < rump> i meant a linux box running a windows vm
08:51 <@konobi> isaacs: still about?
08:51 < clever> konobi: something ive always wondered, how hard would it be to run mac programs on linux, the same way wine does it
08:51 <@konobi> rump: should be pretty decent assuming VTx
08:51 < clever> mac ~= linux, so i would assume a lot less issues overall
08:52 <@konobi> clever: tricky enough
08:52 < rump> i dont think ive ever heard of emulating for mac apps
08:52 <@konobi> there were ways to run linux programs on bsd... but it was um... "interesting:
08:52 < clever> rump: wine is not an emulator (thats what wine stands for! :P)
08:53 < rump> haha oops
08:53 < rump> what is it anyway
08:53 <@konobi> though oracle for linux was faster on freebsd under linux emulation mode than it was on linux... rofl
08:53 < clever> rump: it doesnt emulate the cpu, it does all the run-time dynamic linking, and points the win32 app to linux functions, that provide the same API
08:53 < clever> rump: so the windows app thinks its calling kernel32.dll, but its actualy calling kernel32.so, from the wine package
08:54 < clever> which translates the commands to something native
08:54 < rump> sneaky
08:54 < clever> rump: the main problem is finding all the quirks in the real windows api, and duplicating all of their problems
08:54 < clever> because apps often wind up relying on undocumented behaviour
08:55 <@konobi> of course win32 ABI compat always sucked... so wine also sucked
08:55 < rump> yeah i hear winapi is notorious
08:55 < clever> konobi: yep
08:55 < clever> rump: i still cant even call shutdown from ctypes
08:55 < clever> rump: standby worked on my first try though
08:56 < Hotroot> Hello again
08:56 < rump> wb Hotroot
08:56 < Hotroot> Ty
08:57 < chubz> anyone how to create a JSON object with information in a buffer stream? like fs.readFile
08:57 <@konobi> erple
08:58 <@konobi> chubz: um... eh?
08:59 < Hotroot> chubz: In the callback, do blah = JSON.stringify(data) ?
08:59 < chubz> konobi: sorry. let me explain. i'm trying to obtain a certain file's properties and store it as a json object. like the file's name, size, width, height, etc.
08:59 < Hotroot> Oh
08:59 < garbagecollectio> can anyone help me with a mongodb query
09:00 < rump> wb garbagecollectio!
09:00 < SomeoneWeird> oh my god garbagecollectio 
09:00 < rump> we need some top level senior developers here
09:00 < rump> ty for joining
09:00 < SomeoneWeird> lmao
09:00 < peepsalot> what is a SlowBuffer
09:00 < Hotroot> Who have worked on top shit?
09:01 < Hotroot> Because we need that quality
09:01 < peepsalot> returned by crypto.randomBytes
09:01 < rump> Hotroot: ask garbagecollectio about it
09:01 < SomeoneWeird> lold
09:02 <@konobi> oh... back
09:02 < sticko> clever: andLinux almost installed ;-)
09:02 < SomeoneWeird> peepsalot, a slow buffer
09:03 < peepsalot> is it compatible with Buffer?
09:03 <@konobi> chubz: depnds how you're getting that info
09:03 <@konobi> might be async worthy
09:03 < peepsalot> i don't see it in the api docs
09:04 <@konobi> it's a Buffer
09:04 < rump> http://nodejs.org/api/buffer.html#buffer_class_slowbuffer
09:05 < chubz> konobi: well right now all i have is this.. file=fs.readFile("./test.jpg", function(err, data){JSON.stringify(data);});     console.log(file);
09:06 < chubz> and it just displays undefined
09:06 <@konobi> chubz: look at stat
09:06 < rump> hows he gonna get height and width though
09:06 <@konobi> then look at modules on npmjs that let you deal with image files
09:07 < Hotroot> Don't dwell on my stringify advice, I didn't know you were dealing with a regular file
09:07 <@konobi> rump: and he's going to get that from a stream of bytes?
09:07 <@konobi> =0P
09:07 < Hotroot> I thought you meant something very different
09:07 < rump> konobi: was serious question :)
09:08 < rump> konobi: im mostly hear to learn :)
09:08 < rump> here*
09:08 <@konobi> heh
09:08 < rump> albeit getting late :/
09:08 <@konobi> rump: npmjs.org... learnt it... by tomorrow
09:08 < Hotroot> rump: https://github.com/rsms/node-imagemagick
09:09 < Hotroot> Not sure who that actually should be addressed to
09:10 < Hotroot> But it gives you height, width, metadata, etc. from the looks of it
09:10 < clever> sticko: :)
09:11 <@konobi> garbagecollectio: seems like reading the docs is your best plan for now
09:11 < garbagecollectio> docs are wrong
09:12 < rump> haha nice preemptive konobi
09:13 <@konobi> right now, i chose to believe docs over a newb
09:13 < SomeoneWeird> hahahah thats docs are not wrong garbagecollectio 
09:13 < rump> ehm, clearly you haven't heard his accolades
09:13 < SomeoneWeird> the*
09:13 < garbagecollectio> ya
09:13 < garbagecollectio> why arent they wrong?
09:13 < garbagecollectio> u ve tried and tested every docs ?
09:13 < rump> garbagecollectio: you should file an issue then
09:13 < garbagecollectio> every command?
09:14 < SomeoneWeird> so does that mean every book on the planet is wrong
09:14 < SomeoneWeird> because you havn't read them all?
09:14 < NodeX> LOL
09:14 < rump> garbagecollectio: if you're talking about nodejs stdlib stuff or mongoose then there are thousands and thousands of active users using every edge case
09:14 < Hotroot> konobi: http://cdn.memegenerator.net/instances/400x/30306216.jpg
09:15 < rump> garbagecollectio: id consider it if you were talking about something with 10 downloads
09:16 < rump> garbagecollectio: still on group by issues?
09:16 < SomeoneWeird> apparently he works as a "Technical Service Engineer"
09:16 < SomeoneWeird> not sure how he can do that when the docs are wrong
09:16 < rump> he said earlier senior developer
09:17 < SomeoneWeird> and he also said earlier the docs were wrong
09:17 < rump> garbagecollectio: what are you charging for that project?
09:17 < garbagecollectio> rump
09:17 < garbagecollectio> yeah $200
09:17 < garbagecollectio> gotta get done in next 1.5 hrs
09:18 < rump> garbagecollectio: $200?  whats the program do?  (the gist)
09:18 < garbagecollectio> the docs are wrong
09:18 < SomeoneWeird> Do you work for savvis?
09:18 < garbagecollectio> no i work for a huge reputable company
09:18 < rump> garbagecollectio: what country?
09:18 < Hotroot> (tm)
09:18 < SomeoneWeird> which would be...?
09:19 < rump> garbagecollectio: did you get that job on elance or similar?  just curious
09:20 <@konobi> garbagecollectio: warning no 2 (trolling, again)
09:22 < rump> garbagecollectio: for what its worth, they tried to help in #mongodb but you didnt ask the actual question and then quit
09:22 < garbagecollectio> rump no
09:23 < garbagecollectio> im not trolling?
09:23 < garbagecollectio> they are asking my questions
09:23 < SomeoneWeird> lol yes
09:23 < garbagecollectio> me
09:23 < garbagecollectio> and accusing me of stuff
09:23 < garbagecollectio> rump u tried to help too
09:23 < garbagecollectio> rump: send me your project and paypal and ill fix
09:23 < SomeoneWeird> we've all tried to help you
09:23 < garbagecollectio> but u could not
09:23 < garbagecollectio> well u guys can't
09:23 < SomeoneWeird> hahahahahahaah
09:24 < garbagecollectio> rump: find() would have done the same like i said
09:24 < garbagecollectio> [12:24am] rump: or distinct()
09:24 < garbagecollectio> wow!
09:24 < garbagecollectio> so smart
09:24 < garbagecollectio> look if anyone can aggregate stuff i will pay them as this is dead critical
09:24 < SomeoneWeird> so why didn't you figure it out then?
09:24 < rump> garbagecollectio: those work :P
09:24 < garbagecollectio> aggregate groupby
09:24 < SomeoneWeird> mr. senior developer
09:24 < garbagecollectio> i did figure it out
09:24 < garbagecollectio> all on my own
09:24 < garbagecollectio> not with standing ur guys googling
09:24 < garbagecollectio> instead of looking at the code
09:24 < garbagecollectio> but if u have any suggestions for aggregating
09:25 < garbagecollectio> let me know
09:25 < SomeoneWeird> lmao
09:25 < SomeoneWeird> if you say so mate
09:25 < rump> garbagecollectio: the funny thing is you run around asking for people to help but you havent stated any specific group by question.  jsut that the docs are wrong
09:25 < garbagecollectio> i have 
09:25 < garbagecollectio> i said aggregate by distinct values 
09:25 < NodeX> perhaps ask in #Mongodb
09:25 < SomeoneWeird> wtf are you on about?
09:25 < SomeoneWeird> garbagecollectio, what is wrong in the docs?
09:25 -!- mode/#node.js [+b *!*bfishe200@68.87.42.*] by konobi
09:25 -!- garbagecollectio was kicked from #Node.js by konobi [enough]
09:26 < rump> oh no now he wont have any deliverables tomorrow
09:26 < SomeoneWeird> omg travesty 
09:27 < rump> the sad part is his company is probably really expert at marketing and overpromising and underdelivering, that he stays busy 24/7 and makes great money meanwhile undercutting real developers
09:28 < SomeoneWeird> something like that
09:28 < NodeX> the really sad part is that aggregation on distinct values is about the easiest thing to do with Aggregation framework
09:29 < rump> little does his client know that in the morning he will have his program but it will secretly be using a sqllite database or text file instead of the promised elite new age nosql doc store
09:30 < Hotroot> I really don't find DB's to be that hard. I learned how to use redis in a few hours, and mongo is even easier
09:31 < Hotroot> Most are very used, have lots of examples, and good doc pages
09:31 < SomeoneWeird> redis is amazing
09:31 < Hotroot> I just switched to redis because mongo without an additional lib (mongoose, mongolian) looks like crap
09:31 < SomeoneWeird> uhoh
09:31 < Hotroot> Ouch
09:32 < Hotroot> Anyway, got sick of stuff not working because I use mongolian, so I figured why not just switch to a db that doesn't need another module to hold it's hand
09:32 < Hotroot> Very happy with redis now
09:33 < SomeoneWeird> :)
09:33 < NodeX> redis + mongo = powerhouse
09:33 < Hotroot> Slightly annoyed that I have to do stuff like a hash with values that point to other hashes, but whatever
09:33 < Hotroot> All for the sake of speed and whatnot
09:34 < rump> Hotroot: dont care for mongo-db-native?
09:34 < bakadesu> what's the status on redis cluster?  this page doesn't seem to have changed much: http://redis.io/topics/cluster-spec
09:34 < Hotroot> rump: Not at all
09:34 < Hotroot> So ugly
09:35 < Hotroot> What's with defining the collection inside of the callback to a callback of the db connection?
09:35 < rump> im very new to nosql (this week) and i have to admit i lose a little bit of sleep not having my schema clearly defined somewhere...  key/value stores are easy i can just get a list of those... but something about an evolving nesting schema im afraid ill leave some cruft behind when migrating
09:36 < Hotroot> With mongolian I just did myDb = mongolian.connect(server) then db = new Mongolian('dbName') or something like that
09:37 < Hotroot> rump: I'm new to it to, and yeah, it does feel kind of weird sometimes
09:37 < Hotroot> I feel like I just have all these player keys floating around
09:38 < rump> yes thats a nightmare to my ocd
09:38 < Hotroot> I just keep track of it with a set
09:39 < rump> i saw that mongoose defines a schema in code which might put me at ease
09:39 < Hotroot> I thought that schema stuff looked really gross, personally, lol
09:40 < rump> at least i could track schema changes in git history then
09:40 < Hotroot> I just don't like db stuff being "fluffy"
09:40 < Hotroot> Look at the connection code in node-mongodb-native's github page
09:40 < Hotroot> That's what turned me off using it vanilla
09:41 < Hotroot> How gross, why does it need to be in a callback? Why can't you just do db=blah; collection = db.getCollection('col');
09:42 < rump> heh, i see
09:42 < Hotroot> I like that nothing in redis is bloated. The commands are even type specific. Everything does /exactly/ what I need it to do in the minimal amount of space, and I really like that feel
09:43 < Hotroot> It's such a nice feel, I almost used redis for something that should obviously rely in a regular object yesterday
09:43 < rump> have you benchmarked them by any chance?
09:43 < Hotroot> I have benched redis
09:43 < Hotroot> Not mongo. Other benches I've seen show redis as being much faster though
09:44 < SomeoneWeird> it is
09:44 < Hotroot> How could it not be, it's much less feature rich and complex. Hashes are super simple, and it's recommended you use them for as much as possible
09:46 < rump> yeah mongo native quickly becomes callback hell, eh
09:46 < rendar> Hotroot: how you benched it? any particular tool?
09:47 < Hotroot> ./redis-benchmark
09:48 < Hotroot> rendar: http://redis.io/topics/benchmarks
09:48 < Hotroot> It doesn't cover hashes though, which is bullshit
09:48 < rump> redis has reds too which looks awesome
09:48 < Hotroot> reds?
09:49 < rump> Hotroot: https://github.com/visionmedia/reds
09:49 < rump> who needs apache solr
09:49 < rump> when you have reds
09:50 < SomeoneWeird> reds is pretty awesome yah
09:50 < rump> greatly simplify some of my setups maybe
09:50 < Hotroot> Hmm
09:51 < Hotroot> Trying to keep my setup so I don't need searches, but I may need this
09:51 < rump> everything needs search imo :)
09:52 < Hotroot> rump: So far login, registration, and socket.io stuff for my card game only need lookups of set keys
09:53 < Hotroot> Not sure where I'll need searches
09:53 < rump> i was set on mongo but ill give redis another look
09:53 < rump> love the simplicity of key/value
09:53 < rump> your key names just get crazy?
09:54 < nathan7> Kinda.
09:54 < rump> user_1231_settings_favoriteColor ?
09:54 < nathan7> You tend to do some kind of namespacing
09:54 < rump> or whats the method
09:54 < nathan7> But it's not really for storing lots of permanent data
09:54 < nathan7> Remember that redis keeps everything in memory
09:54 < Hotroot> Well like I do db.sadd("user:" + username);
09:54 < clever> nathan7: thats kinda the point of multiple tables and columns in a db, ive had no issues using mysql in node
09:54 < Hotroot> So the user keys are all "user:theirUserName"
09:54 < nathan7> redis is not a DB
09:54 < nathan7> it is a key-value store
09:55 < nathan7> clever: I am not a fan of SQL and never have been
09:55 < nathan7> clever: These days I live on CouchDB and Mongo
09:55 < rump> redis wont write to disk and warm parts into memory?
09:55 < nathan7> It writes to disk.
09:55 < Hotroot> It has two methods of fs backup
09:55 < rump> has to all fit in ram?
09:55 < nathan7> It reads the disk on start.
09:55 < nathan7> But it all has to fit in RAM, yes.
09:55 < rump> hmm
09:55 < nathan7> This makes it crazy fast
09:55 < rump> i dont guess ive ever had a db over that many gigs anyway
09:56 < clever> nathan7: innodb can do the same thing, if you configure it to use more ram then your db can consume
09:56 < rump> then just shard i guess
09:56 < clever> though it lacks the pre-fill at startup
09:56 < Hotroot> rump: It's also good for keeping RAM low though. They have a great page on memory optimization
09:56 < nathan7> clever: Most DBs can.
09:56 < nathan7> I'm not sure how redis scaling works
09:56 < Hotroot> Like a hash full of items, rather than a ton of keys
09:57 < clever> nathan7: myisam isnt as flexible from what ive seen, if i remember correctly, it relies purely on mmap() and the os caching things for the db
09:57 < nathan7> mhm
09:57 < clever> innodb manages that on its own
09:57 < nathan7> clever: to be honest, I don't really care about MySQL's storage engines
09:57 < Hotroot> Oh, that's why I was confused. You and clever both have the exact same username color in my client
09:57 < clever> only other sql i know about is sqlite
09:57 < clever> but thats generaly not good for large systems
09:57 < clever> better for client side or embeded stuff
09:58 < nathan7> ..you don't even know PostgreSQL?
09:58 < rump> clever: you just avoid joins?
09:58 < clever> nathan7: ive installed it, but never done anything special with it
09:58 < nathan7> Oracle is SQL-based
09:58 < clever> rump: i'm using joins all the time in mysql, as long as i have keys in the right places it works fine
09:58 < nathan7> And Sybase and stuff are SQL too
09:58 < nathan7> And MS SQL server
09:58 < rump> clever: but i wanna play with the shiny new thing!
09:59 < rendar> some friends of mine says that oracle is the best db in the world, but is that true? i mean, what they have the other dbs do not have?
09:59 < Hotroot> I'd probably just go mongo if I needed a db that wont fit in ram, but I'm pretty new to this
09:59 < rump> rendar: a mysql buyout
09:59 < rendar> rump: lol
09:59 <@konobi> rendar: point and click
10:00 < clever> ive always wondered how things like mongo can properly index various columns in the table
10:00 < rendar> heh
10:00 < nathan7> Very cleverly
10:00 < clever> nathan7: example?
10:00 < Hotroot> Pun intended?
10:00 < nathan7> In Mongo, you can mark stuff as an index
10:00 < nathan7> And it builds B-trees and things internally
10:00 < clever> ah, same as most mysql engines then
10:01 < nathan7> In CouchDB, you have mapreduce views. They're really cool.
10:01 < nathan7> Hotroot: Of course.
10:01 < rump> so people dont use redis as prmary and only data store for say.. a blog?
10:01 < nathan7> MapReduce is highly parallelisable
10:01 < nathan7> rump: I'm sure people do
10:01 < nathan7> Heck, a blog would be just fine for redis
10:01 < clever> rump: i would just use memcache over redis, myself
10:01 < nathan7> clever: memcache and redis are quite different
10:02 < rendar> clever: memcache over redis? why?
10:02 < Hotroot> I'm using it for a multiplayer card game. No big data, not a lot of data, but I'd like the reads and writes to be fast
10:02 < clever> i already have all of the data in a mysql db, no need to duplicate it in redis
10:02 < nathan7> But a redis dev did a blag post about this
10:02 < clever> but i could use memcache to store pre-rendered versions
10:03 < rump> i wonder the perf difference
10:03 < rump> like 5ms round trip vs 50ms?
10:03 < rump> or 5ms vs 9ms
10:03 <@konobi> you know... just like solitaire or minesweeper... point and click ftw
10:03 < nathan7> clever: memcache is purely for memory caching
10:03 < nathan7> clever: redis provides a variety of atomically modifiable data structures
10:04 < clever> nathan7: ah
10:04 < Hotroot> rump: Contrary to the vibe it gives off, I'm pretty sure there aren't data loss worries with redis unless you disable the AOF logging
10:04 < nathan7> clever: You can do stuff like atomically increment a counter, you have hashes, you have ordered sets
10:04 < clever> nathan7: most of that i can do in mysql as well
10:04 <@konobi> unlike mongo which is basically piping to /dev/null
10:04 < Hotroot> I think that might have been what you were imply/asking
10:04 < clever> rump: currently, i'm seeing an average request time (http req) of 71ms on one lightly loaded server, and 220ms on the heavily loaded one
10:05 < clever> rump: that includes many mysql calls, and various cpu processing
10:05 < rendar> nathan7: what you mean with atomically? that every command is processed atomically? or that redis internally uses mutexes and some other atomic primitives to synchronize data?
10:05 < clever> rendar: averaged over the last 24h
10:05 < rump> clever: thats pretty stellar
10:05 < nathan7> rendar: Every command is processed atomically.
10:05 < clever> rump: the second one with heavy load, is getting an average of 9 hits/second at the http level
10:06 < rump> i came to node actually cause i was sick of 700ms resp times
10:06 < rendar> nathan7: ok
10:06 < clever> rump: with peaks at 14 hits/sec
10:06 < nathan7> rendar: Redis doesn't multithread, afaik. It does concurrency more like node.
10:06 < clever> rump: its not actualy node for that, lighttpd+php-fpm+mysql
10:06 < rendar> nathan7: yeah i have noticed that
10:06 < clever> node is handling various background tasks i added in recent times
10:06 < nathan7> rendar: there's MULT
10:06 < rump> clever: nah im coming from php-fpm-mysql heh
10:06 < nathan7> rendar: which lets you run a bunch of redis commands together, atomically
10:06 < rendar> nathan7: they wonder more about multiple processes than about multiple threads
10:06 < clever> rump: these are the php-fpm performance numbers!
10:07 < rump> clever: a microframework?
10:07 < clever> rump: ?
10:07 < nathan7> rendar: mhm
10:07 < rendar> nathan7: yeah, with MULT you can send a packet of N commands to the server, right?
10:07 < nathan7> rendar: Yep
10:07 < rump> clever: are you using a php framework?
10:07 < nathan7> rendar: ah, it's called MULTI
10:07 < clever> rump: yeah, the zend framework, its full of bloat
10:07 < rendar> ok
10:07 < clever> rump: one problem i found a few months ago, caused it to eat 128mb of ram for a relatively simple req
10:08 < rump> clever: have you thrown a maximum # of req/s with apachebench?
10:08 < nathan7> rendar: MULTI, SOMECOMMAND, SOMEOTHERCOMMAND, EXEC
10:08 < rendar> nathan7: yeah, right
10:08 < clever> rump: nope, but i can check the graphs to see what my peak was with real load
10:08 < Hotroot> I really like that the redis command list pages all have a little repl to test stuff out
10:08 < nathan7> rendar: the exec here is the actual atomic operation
10:09 < nathan7> They do?
10:09 < nathan7> Where?
10:09 < clever> rump: hmmm, peak is just a hair over 20 hits/sec
10:09 < nathan7> oh there
10:09 < nathan7> Not all of them do
10:09 < Hotroot> The one's I've seen do 0.o
10:09 < rendar> nathan7: for what i know, in redis (and also in node) they do not use much multi-threads stuff (so lock-free data structures for example) but multiple processes to exploit multi-cores
10:09 < nathan7> rendar: Yes.
10:10 < nathan7> rendar: You tend to keep global state in redis
10:10 < rendar> thats pretty interesting 
10:10 < nathan7> rendar: And just have multiple processes
10:10 < rendar> yes
10:10 < nathan7> rendar: The best part of programming like this
10:10 < nathan7> rendar: is that programming for multiple processes means you're already programming for multiple machines
10:10 < rendar> exactly
10:10 < rump> is redis single core also?
10:10 < rendar> it scales very well
10:10 < nathan7> rump: afaik, yes.
10:11 < rump> whats with the latest single core trend
10:11 < rump> threads are evil?
10:11 < nathan7> "At its roots, Redis is a single-threaded server. This means that a single thread reads incoming connections using an event-based paradigm such as epoll, kqueue and select"
10:11 < nathan7> rump: They are!
10:11 < rendar> nathan7: but do you think a hub process in needed in that design? i mean, an hub process that manages connections and route to the other "child" processes..
10:11 < rump> yeah i guess apache has displayed that perfectly
10:11 < nathan7> rendar: Yes, an HTTP proxy.
10:11 < rump> but nginx is multi core isnt it?
10:12 < nathan7> nginx.. no idea.
10:12 < rendar> nathan7: hmm, an http?
10:12 < nathan7> rendar: or whatever your app speaks
10:12 < nathan7> rendar: a load balancer of some kind
10:12 < rendar> rump: yeah nginx is multicore but scales better than apache because it doesn't create a thread for every connection, but uses a pool of threads
10:12 < nathan7> rendar: Most people have nginx as their frontend load balancer
10:12 < rendar> nathan7: uhm, nginx as the frontend for redis?
10:13 < nathan7> rendar: No, for your app
10:13 < deoxxa> nathan7: on the other end of this you have erlang, which does threads really well
10:13 < clever> rendar: ive mostly been using lighttpd, single thread, thats it
10:13 < Hotroot> rendar: For node
10:13 < nathan7> deoxxa: Those aren't threads
10:13 < nathan7> deoxxa: They're actors
10:13 < nathan7> deoxxa: They're awesome thread abstractions.
10:13 < deoxxa> that's true
10:13 < rendar> clever: yeah also lightttpd is cool
10:13 < nathan7> deoxxa: An actor is more like a process.
10:13 < nathan7> deoxxa: Communicating shared state through a single external interface, unable to share state otherwise.
10:13 < deoxxa> rendar: lighttpd is broken beyond repair
10:14 < clever> rendar: only real problem ive had, if you try to reload the config when its got 100% of the sockets open, it shuts down instead!
10:14 < nathan7> I still run lighttpd and I'm quite happy with it
10:14 < deoxxa> i ran it in like... 2007 or so
10:14 < clever> deoxxa: why do you say that?
10:14 < rendar> nathan7: i see, but i was speaking about redis for example, if i have many redis processes storing my data, do i need something that "hub" these N processes? nginx or others can do that?
10:14 < nathan7> deoxxa: This is not unlike shared state in redis and multiple processes in some ways
10:14 < rendar> deoxxa: why?
10:14 < nathan7> rendar: nginx is a web server
10:14 < nathan7> rendar: it's also bloody good at reverse proxy stuff, and it's insanely fast
10:15 < nathan7> I also haven't ever used it because last time I tried my inability to read Russian technical docs were a problem
10:15 < deoxxa> clever, rendar, because the use case for the main development team is "run ruby stuff easily", so basically all the design choices are based around that
10:15 < rendar> nathan7: uhm, i see, but i can't see how to integrate nginx with redis, i mean, with nginx you have http commands, in redis you need a connection to the redis servers and send redis commands..
10:15 < clever> deoxxa: via fast-cgi?
10:15 < deoxxa> ha, there's been an english wiki for a couple of years now nathan7 
10:15 < nathan7> Yes, this was pretty long ago
10:16 < nathan7> I was looking for something that sucked less than Apache
10:16 < deoxxa> clever: i can't remember off the top of my head, but they had some crazy stuff going on at one point
10:16 < nathan7> And I found lighttpd which did what I wanted and still does
10:16 < nathan7> lighttpd configs make me really happy.
10:16 < bigkevmcd> nathan7: when you say "Most people have nginx as their frontend load balancer" where are you getting your data from?
10:16 < clever> nathan7: yep, its using a ton less ram then apache did
10:16 < bigkevmcd> nathan7: and has that hit a plateau?
10:16 < Hotroot> rendar: I think he means nginx load balances to the node process, and each node process is hooked up to its own redis process
10:17 < nathan7> bigkevmcd: You use nginx to route HTTP requests to your node processes.
10:17 < rendar> Hotroot: oh, this make more sense now
10:17 < Hotroot> (I think)
10:17 < bigkevmcd> nathan7: yeah, sure, I do, but am interested in your data
10:17 < nathan7> You can just connect all node processes to their own redis
10:17 < bigkevmcd> nathan7: where are you getting it from?
10:17 < nathan7> bigkevmcd: community consensus
10:17 < bigkevmcd> nathan7: you've done a poll?
10:18 < nathan7> bigkevmcd: But, check out some real life node apps and you'll find stuff like that too
10:18 < bigkevmcd> nathan7: so, you've got no data, just your own experience?
10:18 < rendar> nathan7: if i got it right, you have N node processes bound to N redis processes where data is, and nginx load balances those processes..?
10:18 < bigkevmcd> nathan7: I'm looking for data to back up assertions like that
10:19 < nathan7> bigkevmcd: Yep.
10:19 < nathan7> bigkevmcd: I'm sure there are other people here who have more to back it up
10:19 < nathan7> bigkevmcd: I'm just drawing from what I see and hear
10:19 < deoxxa> bigkevmcd: welcome to irc, land of conjecture and inference
10:19 < Hotroot> rendar: I think so. Haven't done it myself. Not sure exactly how to set up those redis processes, or how nginx balances though
10:19 < bigkevmcd> deoxxa: I've been on IRC a very long time ;-)
10:19 < nathan7> bigkevmcd: The awesome people of nodejitsu use node-http-proxy though
10:19 < nathan7> bigkevmcd: (which is their creation)
10:20 < rendar> well, btw a redis connection of course is stateful, and the state is the data itself
10:20 < nathan7> I don't think the redis clustering shit is done yet
10:20 < nathan7> You just have one redis server and all your node processes hook into that
10:21 < rendar> nathan7: i see
10:22 < nathan7> Well, you can shard
10:22 < dnz-> i love shards
10:22 < nathan7> But machines are cheap in the age of VMs so why not just shard to a bunch of dedicated redis boxen
10:28 < Doumie> sequelize question
10:28 < Doumie> how do i access other models from model classMethod ?
10:34 < Doumie> hm
10:34 < Doumie> shouldn't forEach be blocking?
10:35 < SomeoneWeird> foreach is async
10:35 < Doumie> hm
10:35 < SomeoneWeird> thats why it accepts a callback, afaik
10:35 < Doumie> ah
10:35 < SomeoneWeird> use for(var i = 0; i < array.length; i++) { } if you want a sync for loop
10:35 < rvagg> [].forEach(function (e) {}) isn't async
10:36 < rvagg> caolan/async does async.forEach([], function (e) {}) which is async
10:36 < Doumie> i
10:36 < Doumie> i'm using the [].foreach(function(e) {})
10:36 < Doumie> and it appears to be async
10:36 < rvagg> but what are you doing inside the loop Doumie? probably an async operation
10:37 < Doumie> [].push(e);
10:37 < Doumie> the problem is that the code after [].forEach is ran before the forEach finises
10:37 < nathan7> ..the heck
10:37 < Doumie> finishes*
10:37 < nathan7> Array.prototype.forEach is synchronous
10:37 < rvagg> shouldn't unless what's inside the function is an async operation
10:38 < nathan7> Talk is cheap. Show us the code!
10:38 < rvagg> you may have to provide a gist/pastie Doumie 
10:38 < Doumie> alright
10:38 < Doumie> sure
10:38 < rvagg> talk isn't cheap at my hourly rate
10:39 < nathan7> I talk to people for two hours and get asked to send them a bill by friday
10:39 < nathan7> it's lovely
10:39 < Doumie> http://pastebin.com/CTt8pbiy
10:39 < nathan7> rvagg: https://lkml.org/lkml/2000/8/25/132
10:40 < rvagg> Doumie: that's an async operation you're doing there
10:40 < Doumie> how so? schools is []
10:40 < rvagg> findAll appears to return a promise that has a .success() which is only fired after it returns
10:41 < rvagg> so for each school you're pushing at least one async operation into the stack
10:41 < Doumie> hm
10:41 < nathan7> Maybe you want async.forEachSeries
10:42 < nathan7> if you want to push them in order
10:42 < rvagg> or async.forEach and use the callback at the end
10:42 < Doumie> no the problem even isn't in the order
10:42 < nathan7> or map
10:42 < rvagg> forEachSeries is slow if you know you're allowed to do them simultaneously
10:42 < Doumie> the problem is that "roles" get's outputted before any roles are pushed into the [
10:42 < Doumie> []*
10:42 < nathan7> rvagg: mhm
10:42 < rvagg> Doumie: look at caolan/async on github
10:42 < nathan7> Doumie: async's forEach is your friend here
10:42 < nathan7> Doumie: a moment
10:42 < nathan7> also pastebin is godawful
10:43 < rvagg> nathan7: I reckon async.map is probably the go
10:43 < SomeoneWeird> pasie ftw
10:43 < nathan7> That'd work too
10:43 < SomeoneWeird> pastie
10:43 < nathan7> Yeah
10:43 < nathan7> pastie <3
10:43 < Doumie> i'm using async already
10:43 < Doumie> got async.series then inside that, async.waterfall
10:43 < Doumie> and now... map?
10:43 < Doumie> :D
10:43 < SomeoneWeird> async.forEach
10:43 < SomeoneWeird> maybe
10:43 < SomeoneWeird> or map
10:44 < rvagg> Doumie: async.map(schools, function (cb) { db.models.UserRoles.findAll({whatever}).success(cb) }, function (err, userRoles) { console.log(userRoles) })
10:44 < nathan7> http://sprunge.us/LjCf?javascript
10:44 < rvagg> actually, no, it'd have to be .success(function (userRole) { cb(null, userRole) }) cause async doesn't like stupid promises
10:44 < nathan7> Yeah
10:45 < nathan7> Promises ftl
10:45 < rvagg> .success(cb.bind(null, null))
10:46 < nathan7> Yeah
10:47 < rvagg> .success(cb.bind(null, null)).error(cb) I guess actually
10:47 < nathan7> yeah
10:47 < nathan7> or .fail
10:47 < rvagg> promises.fail
10:47 < nathan7> depending on exactly which promises implementation I guess
10:47 < rvagg> promises.bind(fail)
10:48 < nathan7> rvagg: ..err, what
10:49 < rvagg> trying to be funny but failing at it
10:49 < rvagg> promises=fail, callback=win
10:50 < rvagg> never mind, just digging my non-humour hole deeper
10:50 < nathan7> oic
10:58 < Hotroot> Later all, thanks =)
11:13 < cidxxiii> hello! i'm very new to nodejs and i try to get this sample running (http://vijayannadi.wordpress.com/tutorials/sample-chat-app-using-nodejs-socketio/). but everytime i points my browser to the sample, the node server quits with the message: "Can't set headers after they are sent." Have you an idea, what's going wrong? i use the latest version of nodejs from git. thanks.
11:14 < Doikor> 4
11:38 < Jee5us_w> Hi, everyone! I have a problem. I have site on node.js + express + ejs templating system. The problem is, when ever I add images to css files and bomb the server and request all the data multiple times in a row, the server crashes withput giving any errors. Do you guys have any ideas?
12:10 < rump> wb
12:16 < Doumie> i got an array: [[1, 2], [3]]
12:16 < Doumie> i need it to be [1,2,3]
12:17 < trankil> Doumie: Sorry, we don't know.
12:17 < Doumie> it comes from async.map which puts sequalize findAll's together... but as findAll return an array of objects
12:18 < trankil> Doumie: Please don't insist, we can't help you.
12:24 < khatri> hello every one i need a help regarding i want to run nodejs application from network means i want to deploy it on tomcat can any one please help me out
12:26 < noformnocontent> @Doumie [1,2,[3]].join() is a good start
12:27 < Benvie> >> [].concat.apply([1,2],[3]])
12:27 < purr> Benvie: SyntaxError: Unexpected token ]
12:27 < Benvie> >> [].concat.apply([],[[1,2],[3]])
12:27 < purr> Benvie: (object) [1, 2, 3]
12:28 < Doumie> hmm, is this blocking function?
12:28 < Benvie> it would take more time to call a non-blocking function that would later call you back than to simply do it
12:29 < Benvie> I mean just the function call itself
12:29 < khatri> hello every one i need a help regarding i want to run nodejs application from network means i want to deploy it on tomcat can any one please help me out
12:33 < khatri> hello every one i need a help regarding i want to run nodejs application from network means i want to deploy it on tomcat can any one please help me out
12:35 < trankil> khatri:  Sorry, we don't know.
12:35 < Doumie> geez trankil what's with you?
12:43 < Kakera> is there a way to set cookies by passing an object in superagent?
12:43 < Kakera> alternatively, is there an HTTP wrapper that does it?
12:43 < Kakera> surely, I can use querystring, but it would be nice to have it done automatically
12:43 < trankil> Kakera: Sorry, we don't know.
12:44 < RLa> hm, querystring can parse/create cookies too?
12:44 < svya1991> I need to pass a variable in my jade page to a javascript backend... I'd be very thankful if someone could tell me how... Here's what I tried, but line 34 doesn't seem to work...
12:44 < Kakera> sure, just pass ';' as the separator
12:44 < svya1991> https://gist.github.com/aceef7e57bf404870a4a
12:45 < RLa> svya1991, running jade on client? usually the backend should set variables in jade not vice versa
12:45 < trankil> svya1991: Please, can you be more precise?
12:45 < trankil> RLa: Sorry, you can't help him.
12:46 < RLa> that code looks, well, so 90'es, tables for layout, &nsps and br for spacing :)
12:48 < noformnocontent> ADS! they MUST be compatible with IE4, or else...
12:48 < svya1991> RLa: Redirection issue. This page is rendered in x.js, and I want to send the variable "items" to /ad/like, as I've written on line 33... trankil: I need to display the results from a database query on this particular jade, but when the button (line 34) is clicked, I want the results being displayed on the page to be sent to the /ad/like page, too...
12:48 < svya1991> RLa: Baby-steps, I guess :-/ ...
12:49 < trankil> svya1991: Ok, we understand. But sorry, we can't help you. 
12:49 < RLa> i do not get what kind of variable you mean, a GET parameter?
12:49 < trankil> svya1991: Can you ask this <table> question in the #html3.0 channel??
12:50 < svya1991> trankil: I guess I'll do that... Thanks, though!!!
12:50 < Doumie> no really trankil
12:50 < trankil> svya1991: Ok, please leave now.
12:50 < Doumie> who are you to speak for all of these people in this channel?
12:51 < svya1991> Doumie: Actually, this is only my 4th time on an IRC, but I was wondering the same thing... :-|
12:55 < trankil> svya1991: Don't be unpleasant, please.
12:56 < trankil> svya1991: You will be now autoredirect to the #html-2 channel.
13:19 < therealkoopa> If you're using node cluster, what's the best way to have a task run by only one of the workers? If you have each worker subscribe to an event, that event fires on all them. I'd like it to run just once.
13:35 < vekexasia> Hello eveybody. I've an express app. And i want to create a module of my node app that manages a complete section of my website ( let's say /admin )
13:35 < vekexasia> how would you design the module ?
13:35 < vekexasia> something like new AdminSection(expressAppInstance) ?
13:35 < vekexasia> or expressAppInstance.use(AdminSection.blabla) ?
13:49 < chewed-on> Hi all!
13:49 < chewed-on> Just discovered Node.js today, I thought it was some sort of jQuery library XD
13:49 < chewed-on> It's perfect for my push notification, I have been trying to hack it with PHP.
13:51 < nathan7> mmalecki: I'm trying to make fleet run under forever
13:51 < nathan7> mmalecki: and forever seems to be fucking with my cwd somehow
13:51 < mmalecki> nathan7: I don't know
13:52 < mmalecki> I haven't slept for 24 hours
13:52 < nathan7> Go sleep then!
13:52 < mmalecki> can't, stuff left
13:53 < nathan7> stuff left?
13:54 < mmalecki> nathan7: it doesn't seem to fuck with cwd on my machine
13:54 < nathan7> hmmm
13:54  * nathan7 tries something
13:54 < RLa> does forever remember the directory the app was run from?
13:54 < mmalecki> more details would be great
13:54 < mmalecki> RLa: yes
13:57 < nathan7>  ⚡ root@cheetah ⮀ ~ ⮀ readlink /proc/9343/cwd
13:57 < nathan7> /root
13:57 < nathan7> The script reports cwd /
13:58 < nathan7> mmalecki: I'd expect the child to inherit cwd but somehow it isn't happening
13:58 < mmalecki> can you write a script which outputs cwd, start  it with forever and then check logs?
13:58 < nathan7> That's what I just did
13:58 < nathan7> It outputs /
13:58 < nathan7>  ⚡ root@cheetah ⮀ ~ ⮀ thingy
13:58 < nathan7> /root
13:59 < mmalecki> oh, wow. I'm wondering if it's related to root somehow
13:59 < nathan7> And when I run it with forever, my logs are filled with /
13:59 < mmalecki> works for mebtw
13:59 < nathan7> mmalecki: in my actual environment I am sudoing
13:59 < mmalecki> *btw
13:59 < nathan7> mmalecki: so it runs as nonpriv'd user
13:59 < nathan7> mmalecki: the forever process has the right cwd
13:59 < nathan7> mmalecki: child does not
13:59 < nathan7> mmalecki: both run as non-privileged
13:59 < mmalecki> we don't modify cwd I don't think
13:59 < mmalecki> can you open an issue?
13:59 < mmalecki> I'm really epicly busy now
14:00 < nathan7> I'll see if I can fix it
14:00 < mmalecki> word, thanks
14:01 < nathan7> mmalecki: !
14:01 < nathan7> mmalecki:   this.cwd       = options.cwd || null;                                                                                                                                                                                   
14:01 < astropirate> since when does __dirname not work?
14:02 < RLa> astropirate, when the file is in the wrong place?
14:02 < mmalecki> nathan7: node defaults to process.cwd() if options.cwd is false-y
14:02 < mmalecki> (I think)
14:02 < astropirate> RLa, :S  it is giving null
14:02 < mmalecki> try changing it to process.cwd() tho
14:02 < RLa> oh, null, that's another case
14:03 < nathan7> mmalecki: That's what you'd expect
14:03 < RLa> astropirate, maybe some weird permissions issue?
14:03 < astropirate> i dont know.. running w1nd0w2 :(
14:04 < astropirate> i always run into retarded issues when developing on windows
14:04 < nathan7> mmalecki: Yeah
14:05 < nathan7> mmalecki: process.cwd() works
14:05 < nathan7> pullreq coming up
14:05 < astropirate> process.cwd() is also null here
14:05 < mmalecki> word
14:05 < astropirate> ohh nvm
14:05 < astropirate> ignore me
14:05 < astropirate>  :|
14:06 < mmalecki> oh shit
14:07 < mmalecki> caffeine level dangerously low
14:08 < nathan7> https://github.com/nodejitsu/forever-monitor/pull/9
14:08 < nathan7> mmalecki: do like me, buy 50g of pure caffeine
14:09 < nathan7> mmalecki: You can merge that pullreq, right?
14:09 < mmalecki> https://github.com/joyent/node/blob/master/lib/child_process.js#L632 btw
14:09 < mmalecki> nathan7: I can
14:09 < Doikor> or just stop drinking coffee. once you arent addicted to it you will notice that you dont need it for anything ;)
14:09 < mmalecki> does it work?
14:09 < nathan7> mmalecki: weird shit
14:09 < nathan7> mmalecki: Yes, patch works like a charm
14:09 < mmalecki> does it eat kittens?
14:09 < nathan7> mmalecki: readlink /proc/$pid/cwd is your friend
14:10 < nathan7> Also this should perhaps have a test for it
14:10 < mmalecki> does it eat kittens? I have to know.
14:10 < mmalecki> nathan7: merged
14:11 < nathan7> mmalecki: C=
14:11 < nathan7> and yeah, it might eat kittens when nobody's watching
14:12 < nathan7> mmalecki: The error message that originally lead me to this: fatal: protocol error: bad line length character: fata
14:13 < Doumie> is it possible that sequelize caches it's models ?
14:13 < Doumie> because i swear to nodejs god that i don't have one column in the model 
14:13 < Doumie> but sequelize still tries to add it
14:13 < Doumie> or insert with it
14:13 < mmalecki> nathan7: obviously.
14:13 < nathan7> mmalecki: a git error from fleet
14:14 < mmalecki> WHY DID IT TAKE SO LONG TO FIGURE OUT
14:14 < mmalecki> ERROR MESSAGE IS ABSOLUTELY CLEAR
14:14 < nathan7> mmalecki: caused by it being in /
14:14 < nathan7> Now fleet spawn is still broken
14:15 < mmalecki> well
14:15 < mmalecki> that'll happen
14:15  * mmalecki code &
14:15 -!- mode/#node.js [+o piscisaureus_] by ChanServ
14:20 < nathan7> oi
14:20 < nathan7> There we go
14:20 < nathan7> :D
14:47 < samsam> me probably being really stupid but if i did something like this "function lala( function { this shouldnt get executed until lala is done right? });
14:47 < nathan7> it'd never get executed because syntax error
14:48 < samsam> yeah I know i am talking about the concept
14:49 < nathan7> samsam: My brain says the same thing
14:49 < nathan7> samsam: I can't comprehend what you're asking
14:49 < samsam> right have a look at this because its baffling me. I am sending some data out of the serial port and then when its finished I need to make a ranom gpio line go low. however the gpio line is going low BEFORE the data has finished sending thus corrupting my dad
14:49 < samsam> one sec ill pastebin the code
14:50 < samsam> http://pastebin.com/ac0523ft
14:50 < samsam> that line is going to zero BEFORE the data has finished sending
14:54 < trankil> samsam: Sorry, we can't help you.
14:57 < samsam> :( how come? logically it shouldnt execute until that function is finished though right?
14:57 < JohnnyL> why would node.js createServer hang fo about a minute then give the results to a machine on the local net?
15:03 < RLa> JohnnyL, can you paste your code somewhere
15:03 < RLa> this could be a dns issue
15:04 < JohnnyL> dns on a lan?
15:04 < JohnnyL> i am using straight ips
15:06 < JohnnyL> http://pastebin.com/G49gaSkZ
15:07 < JohnnyL> RLa: 
15:10 < RLa> how you get that createServer hangs?
15:10 < RLa> and it's not good idea to paste passwords
15:11 < JohnnyL> yea
15:11 < JohnnyL> thats ok, mine are all different
15:11 < RLa> JohnnyL, listen accepts callback
15:11 < RLa> put there a console.log
15:11 < JohnnyL> createServer? yes, it hangs... and eventually i get the results... but random times usually a minute or two
15:12 < RLa> it could be createServer, listen, something in the response chain that hangs
15:14 < RLa> JohnnyL, it takes time before console.log("going to query"); is executed?
15:16 < mscdex> node.js rules!
15:16 < danmh> cheers
15:17 < JohnnyL> i get listener function immediately, and 'going to query' and 'query done'... then it just hangs.
15:18 < JohnnyL> going to query is immediate
15:19 < RLa> then it's not createServer that hangs
15:19 < RLa> it's your callback
15:21 < RLa> put into the mysql callback: console.log('Error: ' + error)
15:24 < JohnnyL> yeah it's mysql.
15:24 < JohnnyL> i will do that next.
15:29 < JohnnyL> rla: Error: connect ETIMEDOUT
15:29 < RLa> so it's your mysql connection not working
15:31 -!- mbalho changed the topic of #Node.js to: node.js sounds like http://files.duncanbrown.org/audio/midi/games/NES/Legend%20of%20Zelda/DL_Zeldatronic3.mid
15:35 < JohnnyL> RLa: i didn't reboot after mysql install. i'll try now.
15:35 < mscdex> mbalho: node.js sounds better than a midi!
15:36 < deoxxa> mscdex: incorrect. nothing sounds better than a midi.
15:37 <@mbalho> correct answer o/
15:37 < hydrozen> hey there
15:37 < deoxxa> except maybe
15:37 < deoxxa> TWO MIDIS
15:37 <@mbalho> quick - open it in 5 tabs
15:37 < hydrozen> I was wondering if there's a logical reason as to why Expressjs loads the static middleware as one of the last middlewares instead of one of the first.
15:38 < hydrozen> seems like if its a request for a static file, i'd prefer for it to happen early on and be done with it instead of going through the whole stack
15:39 < deoxxa> hydrozen: you're free to .use() it at any point, it doesn't have to be at the end
15:39 < hydrozen> deoxxa: yeah i know. I'm just wondering what the rationale is to default it at the end
15:41 < hydrozen> there must be a reason
15:47 < superjoe> nathan7, alternative to forever: https://github.com/indabamusic/naught
15:48 < nathan7> superjoe: I fixed the bug already.
15:50 < nathan7> superjoe: Plus, I'd have to modify fleet and seaport for it
15:53 < superjoe> cool
16:09 < Xeon06_> Hey guys
16:09 < Xeon06_> I was wondering if anyone knew how to use supervisor in a way that wouldn't watch sub directories?
16:09 < Xeon06_> For example, I'm doing supervisor -w /sites-ekomobi,/sites-ekomobi/views/partials  -e 'js|html' /sites-ekomobi/main.j
16:09 < Xeon06_> The problem is that it still watches /sites-ekomobi/views
16:10 < Xeon06_> I want only /sites-ekomobi and /sites-ekomobi/views/partials to be watched
16:23 < Leo> Does anybody know if the unique option from mongoose will only let that document be inserted to the collection if that field is unique?
16:24 < Leo> Or do i need to query the db to be sure that field is unique?
16:25 < RLa> Leo, unique index?
16:25 < Leo> Yes
16:26 < RLa> http://mongoosejs.com/docs/api.html#schematype_SchemaType-unique
16:26 < Leo> Does it work like on a relational database (mysql)? I mean it wont let me store a document that already has a index with that value/
16:26 < RLa> i think if you have unsafe inserts it will silently fail
16:31 < RLa> damn, node exit code 139?
16:32 < vekexasia> Can someone fire a Date.now() in their local and tell me the value + it's timezone/country ? 
16:37 < Pitel_IPEX> vekexasia: 1353083721921 CET czech republic
16:38 < RLa> vekexasia, 1353083759591 GMT+2
16:38 < vekexasia> thanks
16:39 < RLa> oh, remains me to configure a server to UTC here
16:55 < Doumie> a random custom function in nodejs
16:55 < MI6> joyent/libuv: Ben Noordhuis master * 665a316 : unix: remove libev (+2 more commits) - http://git.io/jKjGww
16:55 < Doumie> is not blocking
16:55 < Doumie> is it?
16:57 < RLa> it could be
16:59 < Doumie> i wish it would
17:02 < MI6> joyent/node: Ben Noordhuis master * b6a3b0a : deps: upgrade libuv to 665a316 - http://git.io/O_9hqg
17:04 < Doumie> https://gist.github.com/4088994
17:04 < Doumie> problem is that i'm checking email with a function in a if statment, but the if won't be waiting until the emailCheck actually returns anyway
17:04 < Doumie> anything*
17:04 < Doumie> thus failing
17:07 < mks_> Doumie: a random custom function that perfom an asynchronous operation is async.
17:07 < TheAceOfHearts> so.. I wanna use MVR (http://benedmunds.com/2012/04/19/simple-nodejs-express-mvr-template/), but I wanna do authentication from a MySQL database... I'm thinking of using Passport (https://github.com/jaredhanson/passport), but I'm not sure where to put the configuration and such @_@... Could anyone point me in the right direction?
17:08 < Doumie> yeah,  but doesn't async.series make sequelize sync?
17:08 < mks_> don't use that library, but it should
17:08 < mks_> check that you are using the right signature for async.series
17:09 < mks_> you must put all your code that depends on the resolution of the async call(s) in the final callback function
17:10 < mks_> ah. ok. read the gist
17:10 < mks_> you are returning
17:10 < mks_> no good. you must or (a) perform the code from within the final callback
17:10 < mks_> or (b) call a function from it.
17:10 < Doumie> hm
17:10 < mks_> if you return, there is nothing receiving that return result
17:11 < Doumie> so if i put all the other checks into the final callback
17:11 < Doumie> should work
17:11 < Doumie> (19:09:10) <mks_> if you return, there is nothing receiving that return result => yeah, that's the issue here
17:11 < Doumie> the if statement isn't waiting for me
17:11 < Doumie> i'm not very sure how else should i approach this (check user credentials)
17:12 < mks_> callbacks all the way down
17:12 < Doumie> i don't even...
17:12 < mks_> for instance, just define a new function checkEmail( email) {...}
17:12 < mks_> and call it from the last callback 
17:13 < Doumie> the last callback == the async.series last callback? or i've misunderstood
17:13 < mks_> or just use that as the final callback
17:13 < mks_> let me check the function signature (i don't know that library)
17:13 < mks_> yes, the second argument looks like the final callback
17:14 < Doumie> mhm
17:14 < mks_> so, if you defined the checkEmail function
17:14 < mks_> just do
17:14 < mks_> async.series([f1,f2,f3,...], checkEmail)
17:14 < mks_> and you are set.
17:14 < mks_> checkEmail will be invoked when the async series is completed
17:14 < mks_> but double-check the function signatures
17:15 < mks_> (the final callback should be invoked with 2 arguments: an error, possibly null, and the final result)
17:15 < Doumie> mhm, i'll try that out in a few
17:15 < Doumie> thanks tho :)
17:15 < mks_> kp
17:18 < mks_> Doumie: yes, the callback takes 2 arguments: https://github.com/caolan/async#series
17:19 < mks_> so -> function checkEmail ( err, result ){...}
17:23 < jw___> I have notes for you. Reply with 'notes' if you would like them.
17:24 < jw___> wtf
17:24 < bakadesu> bank notes?
17:24 < niggler> i think you should reply with 'notes' and see what's going on
17:24 < jw___> :)
17:25 < niggler> who knows, they may be treasury notes
17:25 < kdridi> hi
17:25 < jw___> it's all about how to make a lemonade
17:26 < kdridi> is there any website like https://www.ruby-toolbox.com for node.js libraries ? I mean, it's some time difficult to compare libraries and find the one that has best support
17:27 < niggler> kdridi: npm?
17:28 < kdridi> niggler, nom just list libraries but it's very difficult to compare them each other to find out which are the "best" for a given search
17:29 < kdridi> comparing to ruby, nom's equivalent is gem, but i'm looking for a https://www.ruby-toolbox.com equivalent
17:29 < niggler> kdridi: if you are looking for a community-curated list, afaict there's none
17:29 < kdridi> niggler, ah, ok
17:29 < niggler> google and github are your friends though, or if you have something specific in mind you can just ask here 
17:30 < kirst> Hey! I'm looking for a jade middleware, something that would automatically generate .html files out of .jade ones and place them in the same directory. Something similar to less middleware. Any ideas?
17:31 < kdridi> just a good rss parser that handles atom/rss0.9/rss2.0/etc. and that is well supported and good performance
17:32 < niggler> kirst: you mean like a command line utility or something to use with express?
17:33 < kirst> something to use with express
17:33 < niggler> app.set('view engine','jade') doesn't work?
17:34 < niggler> you'd also need to set 'views' to the path
17:34 < kirst> that works fine when i want to render jade files. However i just want to convert them and place the converted files in the same folder
17:34 < kirst> basically im looking for the same kind of behavior that stylus or less middleware offers
17:36 < niggler> what are you converting them to?
17:36 < niggler> how would you want to represent stuff like the 'if' conditional
17:40 < kirst> i would just want to convert .jade > .html. Writing that wouldnt be much hassle, was just wondering (and couldnt find it by googeling) if anybody has done it already
17:41 < kirst> thing is that i don't really care about manually rendering pages. Seeing that i will only render one route / and do all the other rendering using backbone marionette modules
17:43 < niggler> kirst: you can't though
17:43 < niggler> you could do something like jade -> ejs
17:43 < niggler> 
17:43 < niggler> but its not clear how you generate a static html file given stuff like conditionals
17:43 < niggler> unless you just want to capture the output of jade, in which case you could just write a script that invokes the jade compiler
17:44 < RLa> kirst, use jade API from node and set it up to watch
17:44 < niggler> *output for a given input
17:44 < kirst> i can hide conditionals using | in jade
17:45 < deoxxa> wat
17:45 < b-ot> how can i do this codes work only in a specific div tags
17:45 < niggler> RLa then you'd have a series of html files for each input to the jade script, right?  kirst's question sounded closer to something like a jade to ejs converter
17:45 < deoxxa> my god, so much derp
17:46 < niggler> where are your cookies deoxxa ?
17:46 < RLa> niggler, depends how you invoke it, for a single or couple of "main" files or separatedly for each
17:47 < niggler> is there a jade to ejs translator
18:00 < Cogito_Ergo_Sum> hi guys, is there something wrong with node?
18:00 < Cogito_Ergo_Sum> it seems as if the development has ceased for a week or more
18:02 <@mbalho> Cogito_Ergo_Sum: nope
18:03 < Cogito_Ergo_Sum> oh that's good because i was checking github and the last changes are very old, and the changelog seems to lag
18:04 < CoverSlide|TPFR> Cogito_Ergo_Sum: there was an update to master 1 hour ago
18:04 < Leo> Is there anyway i can set the propertie name as a varible? code: http://pastebin.com/LSZ1043N is this possible? when i try i get cant read propertie org of undefined...
18:05 < Cogito_Ergo_Sum> thanks CoverSlide|TPFR
18:05 < deoxxa> Leo: you're asking javascript "hey, please set the `name' property of this object to `x'"
18:06 < deoxxa> Leo: and since it's not an object, but rather is undefined, it doesn't work
18:06 < deoxxa> Leo: tl;dr: javascript != php
18:06 < CoverSlide|TPFR> Cogito_Ergo_Sum: besides, there's lots of stuff going on in joyent/libuv
18:06 < rump> deoxxa: you just misspelled variable
18:06 < Leo> Actually sorry.. this does work... 
18:06 < CoverSlide|TPFR> like the removal of libev
18:06 < rump> query['top'][variable]['name'];
18:07 < rump> var variable = 'org';
18:07 < deoxxa> yeah but if `variable' is `fhbdfhfhvdf' you're going to get the same result
18:07 < CoverSlide|TPFR> Cogito_Ergo_Sum: and streams2
18:07 < deoxxa> soooo yeah
18:07 < rump> well he set varibible but then tried to use variable
18:07 < deoxxa> rofl
18:08 < rump> darn those typos
18:08 < rump> those can be the worst
18:08 < rump> late night when everything blurs together
18:08 < Leo> hmm thanks.. got it..
18:09 < CoverSlide|TPFR> if you're trying to assign a property to an undefined value
18:09 < CoverSlide|TPFR> you're gonna have a bad time
18:10 < CoverSlide|TPFR> Cogito_Ergo_Sum: oh yeah I forgot about node knockout too
18:11 < rump> speaking of php the only thing i miss is ability to += arrays n such
18:12 < rump> + in javascript generally sucks
18:12 < CoverSlide|TPFR> rump: I prefer .push to []= or .concat to +=
18:12 < CoverSlide|TPFR> I like meaning rather than sugar
18:12 < rump> in php += will merge unique keys
18:13 < CoverSlide|TPFR> hm 
18:13 < CoverSlide|TPFR> that is cool
18:13 < Leo> Yes i was trying to assign a value to undefined parents.. I need to first create the parents? Always? example.. obj.parent.son = 1 will fail? obj.parent = {}; obj.parent.son = 1 is the correct way?
18:13 < rump> Leo: yes :(
18:14 < rump> Leo: there are some merge methods that some util modules add
18:14  * deoxxa points at https://github.com/deoxxa/dotty
18:14 < rump> tada!
18:15 < rump> i was dumbfounded too when 1 line in any other language became a full page of checking if properties exist before assigning a child
18:15 < rump> made me wanna switch to a key/value store
18:16 < rump> and store data differently
18:16 < rump> the good ol 100 nested drupal arrays of doom
18:17 < CoverSlide|TPFR> rump: any other language?
18:17 < rump> CoverSlide|TPFR: maybe :)
18:17 < CoverSlide|TPFR> rump: name one other language that will automatically generate a map / hash / dictionary when it's null
18:17 < rump> CoverSlide|TPFR: php
18:17 < CoverSlide|TPFR> besides php
18:18 < deoxxa> BASIC
18:18 < rump> CoverSlide|TPFR: there is anything besides php?
18:18 < CoverSlide|TPFR> php is too sugary and magical, it's high fructose corn syrup
18:18 < rump> LAMP&CSS&JS
18:18 < CoverSlide|TPFR> rump: http://rosettacode.org/wiki/Category:Programming_Languages
18:18 < rump> eekgag
18:19 < rump> CoverSlide|TPFR: i dunno its been a while but ive learnt a dozen+ languages and never had the problem until now
18:19 < rump> but there is the possibility that php ruined me
18:19 < rump> and taught me to store nested data aka inappropriately/unnecessarily
18:19 < deoxxa> php ruins everything
18:20 < CoverSlide|TPFR> i like ruby's array operators 
18:20 < rump> i dont remember using a lot of hashes in bash scripts for example
18:20 < rump> oh perl i bet will give me that sugah!
18:20 < CoverSlide|TPFR> bash supports hashes?
18:21 < CoverSlide|TPFR> rump: show me code that does it, and I'll beleive you
18:21 < rump> http://en.wikipedia.org/wiki/Autovivification
18:21 < CoverSlide|TPFR> in any of your dozen+ languages that are not php
18:21 < rump> inyoface
18:21 < Cogito_Ergo_Sum> CoverSlide|TPFR if i'm correct libev is to linux what IOCP is to windows? so libuv is  going to eliminate libev and do itself what libev does?
18:22 < CoverSlide|TPFR> Cogito_Ergo_Sum: yes
18:23 < rump> CoverSlide|TPFR: theres php/perl/ruby/python :)
18:23 < Cogito_Ergo_Sum> CoverSlide|TPFR for performance reasons i guess?
18:23  * rump slam dunks on CoverSlide|TPFR's head
18:24 < rendar> Cogito_Ergo_Sum: epoll() apis are to linux as IOCP apis are to windows - libev used epoll() apis, but it didn't worked on windows nt, so libuv was made, but now libuv has also epoll() etc, so libev is not needed anymore, i think this is the story :D
18:24 < CoverSlide|TPFR> ok w/e
18:24 < Cogito_Ergo_Sum> ah i see
18:25 < CoverSlide|TPFR> but for python / ruby you have explicitly make it autivivicable beforehand
18:26 < CoverSlide|TPFR> that's great, let's add that code to all my hashes and kill performance
18:26 < rump> probably similar to the dozen if checks before sets
18:26 < CoverSlide|TPFR> not to mention the internals that would be required to make that happen probably hundreds of lines
18:27 < rump> in both ruby and python its only the hashes you call it on
18:28 < rump> tree = proc { Hash.new { |hash, key| hash[key] = tree.call } }
18:28 < rump> thats it for ruby :)
18:28 < rump> 1 line
18:28 < CoverSlide|TPFR> mmhm
18:28 < CoverSlide|TPFR> i'm saying hasn.new and proc internal locs
18:28 < rump> how you gonna avoid thoe
18:28 < CoverSlide|TPFR> whether you write the code or not, the cpu still has to process it
18:29 < CoverSlide|TPFR> i'm just saying better to be explicit rather than impcit
18:29 < CoverSlide|TPFR> like pythoners like to say
18:29 < rump> or like rubyist say
18:29 < rump> 2 second response time is OK if it looks pretty in my text editor
18:30 < CoverSlide|TPFR> haha
18:30 < rump> express yo self!
18:31 < rump> theoretically it seems really cheap to do that at the language level
18:31 < rump> if accessing child and parent undef, set it?
18:31 < rump> oh the insanity
18:32 < rump> eich got everything else right though
18:33 < CoverSlide|TPFR> really? that's your biggest gripe with javascript?
18:33 < rump> i actually really enjoy js
18:33 < rump> lighten up CoverSlide|TPFR :)
19:03 < TheAceOfHearts> can I do authentication and sessions myself? Like... When someone posts to /login, I check the username/password, if it matches my db I create a session, and when they log out I delete/remove it
19:03 < TheAceOfHearts> Can I do that @_@?
19:05 < warz> TheAceOfHearts, sure why not?
19:06 < TheAceOfHearts> but like... how do I create a session?
19:06 < FunnyLookinHat> TheAceOfHearts, are you using a framework or just straight up node ?
19:07 < TheAceOfHearts> I'm using Express
19:07 < FunnyLookinHat> If you're using Express - which I assume you are...
19:07 < FunnyLookinHat> http://stackoverflow.com/questions/5765777/node-js-how-to-create-and-read-session-with-express
19:07 < TheAceOfHearts> and I tried setting up a few authentication plugins, but I couldn't figure them out D:
19:07 < FunnyLookinHat> req.session.whatever = whatever
19:07 < FunnyLookinHat> easy  :D
19:07 < TheAceOfHearts> oh great
19:07 < TheAceOfHearts> thanks
19:07 < FunnyLookinHat> Yeah Express makes things WAY easier than you'd expect
19:08 < CoverSlide|TPFR> a little ... too easy ...
19:08  * CoverSlide|TPFR falls down a trap door
19:14 < taylork> Hello
19:14 < FunnyLookinHat> ha.
19:14 < FunnyLookinHat> YO WHAT'S UP taylork 
19:14  * FunnyLookinHat throws CoverSlide|TPFR a rope.
19:14 < deoxxa> SUP HOMES
19:15 < Leo> Does anybody know why this doesnt work? http://pastebin.com/Y4VajuAH i am trying to pass the minimum date to mongoose
19:15 < taylork> I'm trying to run a node web server on a specific port, but the server is only accessible via localhost
19:15 < taylork> I want to access the node web server via my public server ip
19:16 < CoverSlide|TPFR> taylork: are you listening on all ips? or maybe you need to configure your router?
19:16 < FunnyLookinHat> taylork, my guess is your public IP isn't forwarding the port correclty
19:16 < FunnyLookinHat> yeah what CoverSlide|TPFR said
19:16 < taylork> Ah shit you're right
19:17 < taylork> I always forget about my stupid router
19:18 < taylork> One of those AT&T ones that blocks everything
19:23 < CoverSlide|TPFR> I have a FIOS router, never had issues with it
19:23 < CoverSlide|TPFR> I have my server on the DMZ
19:23 < CoverSlide|TPFR> although now I think it's rootkitted
19:25 < Leo> In what format should i send my date to mongoose query?
19:29 < aheckmann> Leo: just pass any date. the driver knows what to do
19:35 < Leo> Hmm ok.. Can i send in only $lt when date ranging or do i need to set $gte: now, $lt: start
19:42 < AlexLibman> Reply to my e-mail re "Node.js in TIOBE Language Popularity Index" - http://pastebin.com/y9NR6ccq
19:45 < FunnyLookinHat> taylork, on top of that, your public IP is probably dynamic ( as opposed to static ) - you should consider setting up a domain forwarding service from here or something: http://freedns.afraid.org/
19:48 < taylork> The issue was with the router
19:48 < taylork> I have a static IP as far as I can tell
19:48 < taylork> It hasn't changed since I've set up my domain names several months ago
19:50 < taylork> Thanks for reminding me about the port blocking at the router. I've been searching left and right for a solution to my problem
19:52 < FunnyLookinHat> ah right on - glad you got it worked out  :
19:52 < FunnyLookinHat> :)
20:17 < dominictarr> rvagg, hey I can't build levelup
20:17 < mmalecki> dominictarr: omg it's dominictarr 
20:18 < dominictarr> mmalecki, hey whats up?
20:19 < mmalecki> dominictarr: not much, long time no see!
20:19 < mmalecki> what are you up to these days?
20:20 < dominictarr> I'm in oakland
20:20 < mmalecki> oh, word!
20:20 < dominictarr> I did cascadia js last week. I'm working for nearForm now.
20:20 < dominictarr> s/for/with/
20:20 < mmalecki> oh wow, great to hear
20:21 < mmalecki> congrats :)
20:21 < dominictarr> they are feeding me, and I'm working basically the same mad science project.
20:21 < dominictarr> <perfect>
20:21 < mmalecki> yeah, having stuff to eat is good
20:23 < mmalecki> dominictarr: I'm in Italy btw!
20:23 < dominictarr> sweet. just hanging out?
20:23 < mmalecki> came here for nodejsconf.it, stayed for 2 weeks :)
20:23 < mmalecki> leaving to paris on Monday
20:24 < mmalecki> dominictarr: you're going to stay in oakland?
20:24 < dominictarr> 1 month.
20:24 < dominictarr> then new york, then berlin for ehsm.eu (madscience conf, non js)
20:25 < Blkt> good evening everyone
20:25 < mmalecki> dominictarr: omg you have plans :o
20:26 < aandy> Blkt: evening
20:26 < dominictarr> then ... some place warm for a bit, maybe NZ, and then probably back to Europe, Ireland, and/or Romania (nearForm has lots of contractors in romania)
20:27 < Blkt> :)
20:28 < rvagg> dominictarr: sad day.. what OS, node version and what build errors did you get?
20:28 < mmalecki> heh. 'some place warm' sounds awesome
20:28 < rvagg> I see your issue but need more info
20:28 < mmalecki> I might join!
20:28 < dominictarr> rvagg, node 0.8.8, ubuntu 12.10
20:29 < rvagg> hm, ok, I'm on ubuntu 12.10 too
20:29 < rvagg> output from the compile would be helpful if you can manage it 
20:30 < dominictarr> rvagg, npm rebuild?
20:30 < rvagg> yep, that'lll do
20:35 < rvagg> dominictarr: maybe gist the stdout for me? perhaps you're missing some build libs/tools in ubuntu, it'd be interesting to know so I can make note on the README
20:36 < CoverSlide|TPFR> exceptionally hard & soft?
20:36 < CoverSlide|TPFR> that's what she said!
20:36 < dominictarr> rvagg, https://gist.github.com/54e344a370ab091c4c9b
20:38 < rvagg> dominictarr: sorry, in the repo itself can you run `npm install` instead, that should do the full compile rather than just the deps
20:39 < dominictarr> rvagg, I get different output if i cd build && make
20:39 < rvagg> `npm install` should do a `node-gyp rebuild` which is what you want to be doing
20:40 < dominictarr> okay, yup. npm installing now
20:41 < dominictarr> rvagg, https://gist.github.com/0e91d79075a29225e87c
20:41 < dominictarr> I don't see any errors.
20:42 < rvagg> mm, that's pretty clean
20:43 < rvagg> dominictarr: not sure why you've ended up with a Debug build tho, that's odd, you didn't --debug or anything did you?
20:43 < dominictarr> no
20:44 < rvagg> dominictarr: is it working now? node -e "require('./')" ?
20:44 < dominictarr> no, same error
20:44 < dominictarr> node -e 'require("./")'
20:44 < dominictarr> /home/dominic/c/node-levelup/node_modules/bindings/bindings.js:79
20:44 < dominictarr>         throw e
20:44 < dominictarr>               ^
20:45 < dominictarr> Error: /home/dominic/c/node-levelup/build/Debug/levelup.node: undefined symbol: _ZTV7BatchOp
20:45 < rvagg> dominictarr: apparently if you have a debug build of Node you'll get the debug version of a gyp build, https://github.com/TooTallNate/node-gyp/issues/96 BUT that shouldn't matter
20:45  * rvagg investigates what a debug build of levelup will do
20:45 < dominictarr> hmm, I'm building node with nave
20:46 < rvagg> dominictarr: from which branch? v0.8.8 or v0.8.8-release? I guess that's the important bit
20:46 < rvagg> ok, I can get the same error as you if I compile with --debug, it shouldn't matter so obviously something I need to fix
20:46 < rvagg> I'll get back to you
20:47 < dominictarr> nave uses the tarball
20:47 < dominictarr> so, I'm guessing that is -release
20:48 < rvagg> dominictarr: https://github.com/isaacs/nave - NAVE_CONFIG defaults to --debug, I guess that explains it, anyway, it shouldn't be a problem, so I'll see if I can figure out why this is a problem
20:50 < dk01> Has anyone used shoe before? I have the server side running but am having trouble with the client side code.
20:52 < dominictarr> cool, I'm gonna rebuild a non-debug version of node
20:52 < dominictarr> dk01, yup, what is the problem?
20:52 < dominictarr> can you post a gist?
20:53 < dk01> Actually just figured out my problem! Thanks anyhow dominictarr
20:53 < dominictarr> no problem
20:53 < dominictarr> what was it?
20:54 < dk01> I was being dumb. I am new to browserify so was making a rookie mistake.
20:54 < xp_prg> hi all, I am new to node.js, I just created a cool library but I need to do some user input and I need to send a callback function with the input back into my program, my brain is having a hard time comprehending how to suspend my program in such a way that a call back could then resume it with the new input, can anyone give me some tips please? :>
20:54 < dk01> Didn't recompile :D
20:55 < rvagg> TooTallNate: what's the effective different when compiling a gyp build with & without --debug, other than using the Debug directory? it's not obvious from diffing the makefiles it creates
20:55 < TooTallNate> rvagg: Debug mode adds the DEBUG define
20:55 < TooTallNate> rvagg: which, among other things, enables C assert()
20:56 < rvagg> TooTallNate: it seems not to be properly linking my libs together, I have 3 interconnected gyp files
20:56 < TooTallNate> rvagg: but it works in Release mode?
20:56 < rvagg> works just fine
20:57 < TooTallNate> rvagg: and what's the error?
20:57 < rvagg> node-levelup this is, works across mac, linux, sunos without any reported issues then suddenly dominictarr turns up with a Debug build that's not linking properly
20:57 < rvagg> TooTallNate: https://github.com/rvagg/node-levelup/issues/17
20:59 < rvagg> BatchOp is from leveldb, which has its own gyp file which is referenced by my dependencies in the main bindings.gyp
20:59 < TooTallNate> rvagg: works for me
21:00 < rvagg> TooTallNate: compiles fine but if you node -e "require('./')" you should get that err
21:00 < rvagg> TooTallNate: this is on Linux btw, both dominictarr and myself are on Ubuntu
21:01 < TooTallNate> rvagg: ok i'm on OSX
21:01 < TooTallNate> lemme try ubuntu
21:01 < TooTallNate> Debug build loads up fine on OS X though
21:01 < rump> the best practice is to use a redis instance per app?
21:02 < jrajav> AlexLibman: Seems reasonable enough
21:02 < rump> or select these crummy numerical "databases"
21:03 < vicapow> check it out! :D https://github.com/vicapow/fav
21:06 < TooTallNate> rvagg: ya, happens for me on linux
21:06 < TooTallNate> rvagg: i'd suspect there's some difference in one of the gyp files
21:06 < TooTallNate> like a file that doesn't get compiled in Debug mode
21:10 < rvagg> TooTallNate: mm, BatchOp, the thing that gets the complaint, is in one of my files, directly referenced in the parent binding.gyp
21:12 < AlexLibman> jrajav: (re re http://pastebin.com/y9NR6ccq )  yup, I was just hoping for some way to track Node.JS popularity
21:12 < jrajav> But he's right; it's a system, not a language
21:13 < jrajav> It would be comparable to tracking Rails on the index
21:13 < jrajav> Or adding "rails" as a search term for Ruby
21:14 < AlexLibman> Well, SSJS is a language + paradigm.  They track Lisp / Common Lisp / Dylan / etc separately, as well as VB / VB.NET.
21:15 < AlexLibman> Rails is a library.  Node.JS is more than that.
21:15 < AlexLibman> Anyway, just wanted to bring this idea up the flagpole, in case anyone saluted it.
21:16 < CoverSlide|TPFR> Node.js is a javascript runtime
21:16 < zhodge> I'm looking to prepend three hex values to a buffer, but since buffers are of fixed length, would the only solution be to copy the contents of the original buffer into a new buffer with a length set to the original's + 3?
21:16 < CoverSlide|TPFR> with its own stdlib
21:16 < xp_prg> I am in a loop and I somehow need to make a call to something that I then have to provide a callback to resume my loop, I don't understand how to do this :(
21:16 < xp_prg> do I have to kind of free the state of my program and supply some kind of continue callback function?
21:17 < chapel> AlexLibman CoverSlide|TPFR node.js is more akin to ruby than rails
21:17 < chapel> or python
21:17 < chapel> than django
21:17 < chapel> it makes javascript a system language
21:17 < CoverSlide|TPFR> actually it's like MRI / YARV  as opposed to ruby itself
21:17 < CoverSlide|TPFR> MRI::Node Ruby::JavaScript
21:17 < dominictarr> zhodge, if you are about to write it to a stream, just write the hex, then write the buffer.
21:18 < CoverSlide|TPFR> Python::JavaScript CPython::Node
21:18 < CoverSlide|TPFR> or Jython / IronPython
21:18 < CoverSlide|TPFR> I'm not sure what PyPy would be classified as
21:18 < dominictarr> but, all those langs include a stdlib that is part of the standard
21:18 < AlexLibman> I agree, but it would still be nice to benchmark its popularity.
21:19 < dominictarr> but js has no stdlib
21:19 < warz> is node not a stdlib for js, sort of?
21:19 < CoverSlide|TPFR> I think Jython / IronPython has non-standard libs to augment its runtime version, just like node
21:19 < dominictarr> maybe should make one small change is js in node.js so we can call it a different language.
21:20 < CoverSlide|TPFR> CPython probably includes C-specific bindings
21:20 < CoverSlide|TPFR> Node.coffee!!!
21:21 < dominictarr> CoverSlide|TPFR, GTFO
21:22 < Leo> Can i pass in child objects in my mongoose find query? Example: find({ comment: {author: 'jonh'} }) would this work? Cause i am trying something similiar and its not, trying to find the reason why...
21:25 < Tivs_> it should be Example:find({'comment.author': 'john'}) for searching embedded fields
21:28 -!- mode/#node.js [+o piscisaureus_] by ChanServ
21:29 < drudge> for anyone using Chocolat, vote for your favorite libraries to have completions: https://docs.google.com/spreadsheet/viewform?formkey=dE8xLVE0Wkppdy1RN3QyRnN2TEUxWWc6MQ
21:29 < dk01> browserify on windows, how?
21:32 < dominictarr> rvagg, okay, I got it to install finally.
21:32 < CoverSlide|TPFR> npm install -g browserify ? browserify.cmd ??
21:34 < rvagg> dominictarr, TooTallNate, I think I've worked it out, it's to do with the way it's assembling my C++, doesn't like certain things I do in .h files, moving things to the .cc makes it compile but it's still not perfect but at least it's a start
21:35 < therealkoopa> I have read a lot of articles saying you should (can) create one node process per core. What happens if you fire off 16 node processes using cluster, and only have 4 or 8 cores?
21:35 < dominictarr> therealkoopa, it means that the scheduler will have to switch contexts more often.
21:36 < dominictarr> try it with a benchmark and see what happens.
21:36 < therealkoopa> dominictarr: Makes sense. I've noticed it works, but wasn't sure how "bad" it was. Btw, what do you recommend for benchmarking node apps?
21:38 < xp_prg> help!!!!!!!!!!!!!! :(
21:39 < zhodge> dominictarr, I take it that you write hex with myStream.write by setting the encoding to 'hex'?
21:39 < dominictarr> therealkoopa, I don't know, but this might give you some clues http://www.youtube.com/watch?v=Kdwwvps4J9A
21:39 < dominictarr> zhodge, yes, if it's a string of hex.
21:42 < zhodge> dominictarr: Thanks. Do the hex chars need to be '0x' prefixed, or will 'EF BB BF' be legitimately interpreted as a hex string?
21:45 < therealkoopa> Third law of github, that's great
21:56 < s5fs> felixge drops the "f" bomb alot, i like
21:57 < dominictarr> rvagg, can I do range queries with levelup?
21:57 < dominictarr> I don't see any thing in the docs
21:58 < dominictarr> rvagg, sorry, I see it now.
21:59 < rvagg> ya, sorry, readStream has start&end properties
22:02 < rvagg> dominictarr: btw, start & end don't actually have to exist and it should do the right thing
22:02 < dominictarr> yup
22:06 < devdazed> has anyone here used node-amqp 
22:06 < devdazed> we seem to be having an issue with the driver sending invalid/bad payloads to rabbitmq
22:11 < xp_prg> I don't understand how to get cli user input if I am in a loop, there is no callback to send and I don't want my loop to continue while it is waiting for input from the user
22:11 < xp_prg> how do I accomplish this goal?
22:13 < CoverSlide|TPFR> xp_prg: you have to exit the loop to receive any events
22:17 < styol> xp_prg: you may want to send lengthy loops to a child process, but I'm not sure if that is the proper recommendation ;)
22:18 < xp_prg> styol it is not clear to me how to spawn a process in an asynchronous way that can then allow that program to use stdin and get the output of that program, I hear it is possible with child_process, but don't know how, can you help me ob1?
22:21 < styol> xp_prg: good question and this is generally something I need to look into as well
22:23 < styol> xp_prg: ah, you would use process.send() as opposed to child.send()
22:24 < xp_prg> styol I have a loop I am in and I want to get user input in a cli program, I don't understand how I can supply a callback to allow it to work
22:25 < xp_prg> do you?
22:27 < styol> xp_prg: I'm not sure I understand. Wouldn't you want to get user input after the loop finishes iterating?
22:27 < xp_prg> no during its iteration
22:28 < styol> exit out, save where you left off, restart where you left off after receiving input
22:28 < styol> er, switch 1 and 2
22:28 < xp_prg> that seems like a nightmare to code to me
22:28 < xp_prg> everything would have to be in a stack, basically I am writing my own context switching code
22:29 < CoverSlide|TPFR> welcome to asyncland
22:29 < styol> xp_prg: nightmare, challenge, fun, same thing ;)
22:29 < xp_prg> can nodejs handle raw sockets with a select loop thing?
22:30 < xp_prg> oh well, I guess I need to do this
22:31 < dominictarr> rvagg, I take it there is no way to do a batch get?
22:31 < rvagg> dominictarr: no
22:32 < substack> xp_prg: in node most all of the apis are already asynchronous so you don't need to build the event loop machinery
22:32 < rvagg> dominictarr: there's no leveldb feature for that as such but it would make things a bit speedier in Node so I guess it'd be an idea to support such an operation
22:33 < rvagg> dominictarr: how many items would you want to get at a time? we'd run into memory issues eventually, which the nice thing about readStream()->iterators
22:33 < substack> xp_prg: var split = require('event-stream').split; process.stdin.pipe(split()).on('data', function (line) { /* do something with `line` here */ })
22:33 < dominictarr> I don't know yet, I'm working on a map-reduce server
22:34 < xp_prg> substack that answer makes no sense, I am in a loop
22:34 < dominictarr> substack, split is it's own module now,
22:34 < substack> dominictarr: oh hooray!
22:34 < dominictarr> var split = require('split')
22:34 < xp_prg> my loop will continue and will not block on that code
22:34 < substack> xp_prg: don't be in a loop
22:34 < dominictarr> you can thank Raynos
22:35 < substack> noted
22:35 < xp_prg> this seems like cooperative multasking gone insane
22:35 < Raynos> oh hi
22:35 < substack> xp_prg: don't be in a loop. register callbacks with apis instead
22:36 < substack> don't poll things
22:36 < substack> ever
22:36 <@mbalho> unless you are a government running an electrion
22:36 < xp_prg> that is foreign to my mind
22:36 < dominictarr> mbalho, not even then
22:36 < substack> polling is an alien idea to programming
22:36 < substack> at the hardware level everything is async based on interrupts
22:36 <@mbalho> in mother russia node.js polls you
22:37 < xp_prg> substack actually it uses polling
22:37 < xp_prg> the cpu polls ports for input then interrupts, but it polls first
22:37 < substack> the interface is asynchronous
22:38 < substack> xp_prg: completely rethink your approach and throw away all your existing code
22:38 < nlf> they see me pollin.. they hatin..
22:38 < xp_prg> ya a cpu does time sliced execution, instead of the old mainframe approach of batch/synchronous processing
22:38 < xp_prg> the details of how it accomplishes this is hidden from the programmer/user via context switching in the cpu(s), the operating system hides this complexity
22:39 < airtanah_> how do people generally deal with mysql disconnecting? 
22:39 < airtanah_> do you just let your app fall down
22:39 < xp_prg> your asking me remove this abstraction and delve into the complexity of context switching which was solved 30 years ago with the von-neuman architecture
22:39 < CoverSlide|TPFR> airtanah_: reconnect again?
22:39 < xp_prg> this is a prehistoric way to architect program execution
22:40 < xp_prg> if you want to do it this way, simply spawn a thread etc...
22:40 < airtanah_> CoverSlide|TPFR: do you write your own reconnection code?
22:40 <@mbalho> xp_prg: http://nikhilm.github.com/uvbook/ have fun
22:40 < airtanah_> the alternative would be to just let the app die, and use something like upstart to keep trying again
22:41 < CoverSlide|TPFR> if that's what floats your boar
22:41 < CoverSlide|TPFR> *boat
22:41 < CoverSlide|TPFR> or floors your boar
22:43 < airtanah_> my boar is floored
22:45 < rvagg> floor that boar dude!
22:45 < mscdex> my floor is bored
22:46 < airtanah_> i hope this joke ends up making the mail list
22:46 < mscdex> anyone know of a flexible module for parsing binary streams? one that lets you describe the stream's structure and it just does its thing?
22:46 < xp_prg> damn it I will just spin until the callback is invoked
22:46 <@mbalho> brianloveswords: dont you have a thing for parsing binary streams?
22:47 < brianloveswords> mbalho: arbitrary binary?
22:47 <@mbalho> brianloveswords: yea
22:47 < xp_prg> how do I invoke sleep in nodejs?
22:47 <@mbalho> brianloveswords: i might be making things up
22:47 < rvagg> mscdex: I think deoxxa has been doing stuff along those lines
22:47 < substack> xp_prg: you don't ever do that
22:47 < substack> xp_prg: use setTimeout() to register a callback to fire after a period of time has elapsed
22:47 < rvagg> mscdex: check out his github, he's doing some crazy binary parsing in his jsmc project
22:48 < brianloveswords> mbalho: I have https://github.com/brianloveswords/bitreader, but it's not streaming (yet) :(
22:48 <@mbalho> brianloveswords: oh gotcha
22:48 < brianloveswords> Oh wait, I guess it is
22:48 < xp_prg> how do I spin in a way that won't max out my cpu?
22:48 < brianloveswords> mbalho: haha, I forgot, it is streaming, it says right there in the readme.
22:49 < MI6> joyent/node: Ben Noordhuis master * 71ba7bc : node: remove eio-emul.h  The purpose of this file was to remap the old li (+1 more commits) - http://git.io/5ZkDEQ
22:49 < xp_prg> if I do while(!this.is_callback_returned()){}
22:49 < xp_prg> what can I put in {} that will not spike the cpu?
22:49 < brianloveswords> I don't think it solves mscdex's problem though.
22:49 <@mbalho> xp_prg: nothing, use an event loop instead
22:49 <@mbalho> xp_prg: or go read the uvbook so you understand node more
22:50 < mscdex> hrmm
22:50 < xp_prg> I would have rearchitect my entire code to allow for this, I don't want to do that right now
22:50 < xp_prg> fuck it I will max my cpu out then, you guys suck
22:50 < mscdex> lol
22:50 <@mbalho> re-read the last two lines...
22:50 < substack> xp_prg: throw all your code away you're doing everything wrong
22:51 < xp_prg> nodejs is living in the stone ages
22:51 < substack> xp_prg: or go rewrite it in python or something
22:51 < mscdex> node.js rules!
22:51 < xp_prg> I can't it must run in javascript in the browser
22:51 < brianloveswords> Uhhhhhhh
22:51 < brianloveswords> UHHHHH
22:51 < substack> hahaha
22:51 < mscdex> shun the non-believers! shunnnnnn
22:51 <@mbalho> lol
22:51 < substack> xp_prg: you are totally fucked
22:51 <@mbalho> http://i.imgur.com/I6GSf.gif
22:51 < xp_prg> do I have to rewrite this in this way if it is running in the browser in your opinion?
22:52 < Sly> xp_prg: A better way to do it would be to put it in a setInterval and make it wait that way.
22:52 <@mbalho> xp_prg: js in the browser and on the server is single threaded
22:52 < substack> xp_prg: you don't *have to* it's just that if you don't nothing will work and the ui will completely lock up
22:52 < Sly> setInterval(function() { while(!true) {...} }, 1000);
22:52 < Sly> Or whatever
22:52 <@mbalho> xp_prg: node gives you async apis that you dont get in the browser but the general concepts are the same in both places
22:52 < Sly> Then unset that interval once it's set.
22:53 < Sly> Er. actually
22:53 < Sly> Take out the while. xD
22:53 < Sly> Fuck, my brain isn't working right now.
22:53 < xp_prg> ya the ui is locked for modal dialogue requesting input
22:53 < mscdex> i run `while(true);` in web workers and laugh maniacally
22:53 < xp_prg> how else would you do it, you want to run background processes while the user is entering input?
22:53 < substack> xp_prg: because you only have a single thread to work with
22:54 < substack> xp_prg: you register callbacks with asynchronous apis
22:54 < substack> xp_prg: why don't you describe what you're actually trying to do?
22:54 < xp_prg> the price is toooo high to do cooperative multasking in this way, it obfuscates all the code etc...
22:54 < substack> instead of complaining about how when you write blocking code in a single-threaded runtime everything is terrible
22:54 <@mbalho> xp_prg: callbackhell.com its not that bad
22:54 < xp_prg> simply get some fucking user input on a command line inteface program
22:55 < Sly> xp_prg: https://gist.github.com/41e565f48d7226a9a101
22:55 < substack> xp_prg: I showed you how to do that already
22:55 < Kakera> what you guys' opinion on hungarian notation in node.js?
22:55 < substack> Kakera: don't ever do that
22:55 < Kakera> haha, thought so
22:55 <@mbalho> substack: why do you hate hungarians
22:55 < xp_prg> substack you showed me how to use a callback to do that, that doesn't work in my program, I would have to exit my entire program, saving state, so I could resume once I get the input
22:55 < substack> process.stdin.pipe(split()).on('data', function (line) { /* you have each `line` inside of here */ }); process.stdin.resume()
22:56 < Kakera> still, is there any compelling reason to avoid it?
22:56 < substack> xp_prg: you wrote your program in a way that is completely incompatible with how javascript works
22:56 < substack> you'll need to change everything
22:56 < mks_> refactor all the things!
22:56 < Kakera> for example, in languages like C++ and C# it doesn't make sense to use hungarian notation because the IDE will tell you the types
22:57 < xp_prg> substack how do you do long running things in a browser?
22:57 < substack> xp_prg: what are you trying to build?
22:57 < Kakera> I'm asking because I've discovered that Valve uses HN in their JS code
22:58 < xp_prg> inference engine like prolog
22:58 < mscdex> hrmm, deoxxa has a binary data creation module, no parsing though :/
22:58 < mscdex> oh wait, i take that back
22:59 < substack> xp_prg: you have a really bad case of http://mywiki.wooledge.org/XyProblem
22:59 < d2dchat> what's the best memcache client to use?
22:59 < substack> xp_prg: if you want to do cpu-intensive calculations, use a webworker
23:00 < xp_prg> substack can I describe what I am doing and then you can tell me your ideas how I would rearchitect it to work right?
23:00 < d2dchat> https://npmjs.org/package/memcache or https://npmjs.org/package/memcached ?
23:01 < substack> xp_prg: never ask to ask a question
23:01 < mks_> substack: thanks. your talks are good food for my brain.
23:01 < xp_prg> can I make a synchronous telnet type call, like a wget or something?
23:01 < rvagg> d2dchat: the latter, tho I believe both of them only do the ascii protocol, not binary, so are not ideal
23:01 < substack> xp_prg: why do you want it to be "synchronous"?
23:02 < d2dchat> rvagg: do any support binary?
23:02 < xp_prg> because I don't want to rearchitect my whole program
23:02 < rvagg> d2dchat: I don't think so
23:02 < d2dchat> :-/
23:02 < substack> xp_prg: too bad. you fucked up
23:02 < rvagg>  d2dchat there's a market opening there if you're interested in giving it a go
23:02 < d2dchat> rvagg: I would, but under the gun right now
23:03 < rvagg> d2dchat: the couchnode stuff talks memcache binary protocol but I don't think you can separate it out from the couchbase comms and it's almost all native code anyway
23:04 < brianloveswords> xp_prg: re-architecting your whole program to actually use node/javascript patterns will be good for you. like eating your vegetables.
23:04 < d2dchat> rvagg: I wonder what will be more performant.. nodejs + a library using text only protocol vs Padrino/Ruby using dalli which is a binary protocol library
23:04 < d2dchat> :)
23:04 < brianloveswords> It'll be much harder to continue to fight against the language.
23:04 < xp_prg> ya like a high colonic would be
23:04 < substack> brianloveswords: but what if I only want to eat chocolate! you should tell me how I can be healthy but only eating chocolate
23:05 < xp_prg> cooperative multitasking single threaded architectures be damned!
23:05 < substack> xp_prg: just use callbacks
23:05 < substack> PROBLEM SOLVED
23:05 < xp_prg> why not go back to mainframes and batch processing with punch cards while were at it
23:05 < aettinger> i can't find instructions on how to install npm
23:05 < xp_prg> they were single threaded to
23:05 < rvagg> d2dchat: I honestly have no idea but I'd like to know what the difference would be with the binary prototcol implemented in node
23:05 < substack> aettinger: it comes bundled with node itself
23:06 < aettinger> i want to know if i can install npm locally as an underprivileged user.
23:06 < d2dchat> xp_prg: why not just use rooms of females?
23:06 < d2dchat> rvagg: it would most certainly be faster
23:06 < xp_prg> what is hillarious is the browser doesn't run single threaded the operating system actually time slices between many needs, who thought up this brain dead backward retarded architecture?
23:06 < aettinger> substack: ok, can i install node as an under=privileged user in ~/ettinger then?
23:06 < substack> aettinger: --prefix=...
23:06 < aettinger> ok
23:06 < substack> `./configure --prefix=...` rather
23:07 < xp_prg> anyway, what I need is a different javascript interpreter that allows for synchronous calls
23:07 < aettinger> substack: thanks, i'll give that a shot
23:07 < substack> xp_prg: that won't work in the browser
23:07 < xp_prg> as long as it doesn't take too long to execute it will work fine or I can put it in a web worker, why won't it work?
23:09 < xp_prg> the reason you think it won't work is you don't understand modern software/operating system architecutres
23:10 < xp_prg> you don't need to use callbacks for everything, only cooperative multitasking requires that approach
23:10 < xp_prg> if you have independent threads or at least built in context switching, which the operating system already does, you DON'T NEED THIS STUPID APPROACH!
23:11 < rvagg> xp_prg: perhaps you should go play with Flash, it sounds like this world doesn't suit you
23:12 < xp_prg> webworkers suite me, why doesn't nodejs even have that?
23:12 < xp_prg> it claims to be javascript compliant
23:13 < rvagg> I think you might be getting confused about what "javascript" means
23:13 < chrisdickinson> webworkers !== javascript
23:13 < chrisdickinson> webworkers === the dom
23:13 < AAA_awright> Woa woa woa
23:13 < chrisdickinson> well, part of the dom api.
23:13 < AAA_awright> Strict identity?
23:13 < chrisdickinson> yeah
23:13 < chrisdickinson> that might be a little strict
23:14 < AAA_awright> It's just an API
23:14 < xp_prg> you only know how to do things, you are not questioning why
23:14 < xp_prg> if you ask why, you will find it is not necessary, this is an architecture issue that could be fixed in probably less than an hour
23:14 < xp_prg> its called context switching girls and boys
23:14 < chrisdickinson> AAA_awright: probably should brush up on my set notation, hm? :)
23:14 < xp_prg> even java has great threads
23:14 < xp_prg> green threads I meant
23:15 < xp_prg> anyway, I will shutup now, whatever
23:15 < djazz> <3 node.js + websockets http://djazz.mine.nu/apps/draw/
23:15 < AAA_awright> xp_prg: It's called an event loop
23:15 < AAA_awright> Deal with it
23:15 < xp_prg> ya I am aware of the select function thanks
23:15 < rvagg> xp_prg: go use java then if that's what you like
23:15 < AAA_awright> while(wait_for_event()) process_event()
23:15 < xp_prg> even in c++ you can put event loops in their own threads
23:16 < xp_prg> yes I am also aware of yield
23:16 < AAA_awright> So then what's the problem?
23:16 < xp_prg> the problem is I want to choose to be asynchronous, not forced to be asynchronous
23:16 < xp_prg> there is no freedom
23:16 < rvagg> xp_prg: if node doesn't suit your way of thinking then you need to choose a more suitable language that won't get you so confused
23:16 < esiegel> Hey friends, I have a pretty simple issue. My stylesheet cannot be found. I placed it in the root folder inside a folder called css but it simply won't load at all (404) when I use <link rel="stylesheet" src="/css/main.css">. I'm using Express and Socket.io if that has anything to do with anything.
23:16 < esiegel> Thanks!
23:17 < AAA_awright> xp_prg: And of Node.js didn't exist at all? There's plenty of freedom, no one is forcing you to use it
23:17 < xp_prg> I am not confused, even node will block, it hypocritical to force this approach on people if they don't want it
23:17 < substack> esiegel: static assets go in static/ I think by default with express
23:17 < xp_prg> how else can I run my javascript code on linux outside of a browser?
23:17 < xp_prg> is there another way?
23:17 < AAA_awright> xp_prg: But that said you're Almost Surely doing it wrong, if your own code is locked into a synchronous way of stuff
23:17 < substack> esiegel: oh actually you need to explicitly use the static module
23:17 < rvagg> xp_prg: narwhal
23:17 < rvagg> xp_prg: or rhino direct
23:18 < substack> esiegel: app.use(express.static()) or something like that
23:18 < rvagg> xp_prg: or mess with CEF
23:18 < esiegel> alright, I'll definitely look into that!
23:18 < esiegel> Thanks!
23:18  * substack hasn't used express in a while so I could easily be slightly off
23:18 < AAA_awright> xp_prg: Node.js is an API on top of Javascript. There were javascript command-line interperters long before it.
23:18 < AAA_awright> Use one of those.
23:18 < AAA_awright> Node.js is for event loops.
23:18 < AAA_awright> Not general operating system scropting.
23:19 < AAA_awright> *scripting
23:19 < xp_prg> I will thanks, but just saying, it is frustrating if you don't want to do that for a particular special case
23:19 < xp_prg> is there a lower level api to read a socket manually or anything?
23:19 < AAA_awright> the 'net' api?
23:19 < xp_prg> in a synchronous way?
23:19 < AAA_awright> What's wrong with callbacks?
23:20 < xp_prg> I would have to program my code to be interrupted, and constantly save its state, that is not intuitive
23:20 < xp_prg> its manually implementing a context switch, no thanks
23:20 < xp_prg> I let the operating system do that
23:20 < xp_prg> which it has been doing since the invention of the von-neuman architecture
23:20 < xp_prg> like 50 years ago
23:21 < rvagg> xp_prg: be patient, give it time and it'll become intuitive, if you can't persist then you seriously need to go elsewhere, we're all doing very complex and performant things here and are perfectly happy with our choice of node
23:21 < AAA_awright> xp_prg: Um, Node.js doesn't do interrupts, it does an event loop
23:22 < esiegel> substack: brilliant! thanks!
23:22 < AAA_awright> Your callbacks aren't going to be called in the middle of some other of your code being executed
23:22 < Jadelrab> guys do you recommend any book to start with nodejs ? coming from PHP and Ruby .. 
23:23 < xp_prg> I have suspend execution of my program (interrupt it) push all its state onto a stack, wait for it to be re-invoked via a callback, restore its state and use the input from the callback, that is called a context switch boys and girls, operating systems have this built in and have been doing this for over 50 years
23:23 < xp_prg> that is commonly called calling a function in procedural languages
23:23 < xp_prg> you push the state of the calling function, then pop it when the function returns 
23:23 < AAA_awright> xp_prg: That's definitely not how you program in ECMAScript
23:23 < rvagg> xp_prg: I think you need to find a different platform
23:24 < substack> agreed
23:24 < AAA_awright> Not Node.js, not any ECMAScript API
23:24 < xp_prg> its glorified context switching
23:24 < AAA_awright> Doing It Wrong
23:24 < xp_prg> where the programmer has to implement their own context switching
23:24 < AAA_awright> xp_prg: What are you trying to do, fundementally
23:24 < xp_prg> simply iterating over a loop and get user input while in that loop
23:25 < xp_prg> something so very, very, very simple
23:25 < xp_prg> its impossible in this architecture
23:25 < xp_prg> thats so completely unreasonable to me for a command line application
23:25 < AAA_awright> No, that's done in about 30 lines
23:25 < rvagg> time to stop feeding the trolls ppl
23:26 < AAA_awright> xp_prg: Here, I'll write an application that takes an Array of integers, and prompts the user for a number, and it'll multiply the numbers, and sum all the results
23:26 < AAA_awright> xp_prg: Is that what you're talking about?
23:27 < xp_prg> how about just do this:  loop 10 times asking the user for input at each loop
23:27 < substack> xp_prg: you want 10 lines of user input?
23:27 < xp_prg> its an example
23:27 < rvagg> bash might be a better platform for that
23:28 < substack> var split = require('split'), through = require('through'); process.stdin.pipe(split()).pipe(through(function (line) { console.log((i++) + ': ' + line); if (i === 10) this.emit('close') }); process.stdin.resume()
23:29 < xp_prg> AAA_awright maybe it would work, I am confused, it says it is asynchronous, does the loop keep going when you invoke the user input?
23:29 < rvagg> xp_prg: here's the key to understanding why Node's async nature makes it ideal for so many things--when you're doing any kind of IO, because that can be farmed off to one of the helper threads, you can be doing other guff in your main JS thread, because there are multiple helper threads for IO you can get so much more done.. read 10 lines of user input at the same time as reading 10 files and serving 1000000 web requests on a web
23:29 < rvagg>  server all from within the same process without any difficulty at all
23:29 < substack> missing paren, fixed: var split = require('split'), through = require('through'); process.stdin.pipe(split()).pipe(through(function (line) { console.log((i++) + ': ' + line); if (i === 10) this.emit('close') })); process.stdin.resume()
23:30 < substack> or there are modules on npm that to `head` or `tail` already
23:30 < xp_prg> rvagg all I am saying is you shouldn't be forced to do that
23:30 < AAA_awright> xp_prg: uh, the code isn't being executed, but you do realize that the variable scope is preserved when a callback is called
23:30 < AAA_awright> Hold on
23:30 < xp_prg> ok
23:30 < xp_prg> there is a prompt library in npm
23:30 < rvagg> xp_prg: you're not, you can choose Java, C++ or any other language, there's no forcing.. PLUS, if you look in the core API you'll find that many common operations have Sync() alternatives but they are generally shunned because you'll miss the core benefit of node
23:31 < xp_prg> can I choose to ignore the callback and just pass like an array, since it is passed by reference it will assign in prompt and I get it back in my area right?
23:31 < rvagg> xp_prg: have a look at https://github.com/caolan/async for managing complex async operations and having them look more like they are working inline
23:32 < substack> rvagg: I disagree.
23:32 < rvagg> substack: with which bit?
23:32 < substack> using async
23:32 < xp_prg> rvagg, the problem is I just don't care to do programs that way, if I want that kind of complexity I would just use threads/web workers, have nodejs infer what could go in a healper thread based on this callback approach obfuscates my code too much, are you are of the ansi threads api?
23:32 < substack> not recommended if you don't already grok callbacks
23:33 < rvagg> substack: async is my crutch, love it, especially things like async.map, async.memoize, async.parallel, I don't want to be keeping track of trivial stuff like how many results I've collected so far
23:34 < xp_prg> I guess I recommend nodejs if you don't have order dependent logic
23:34 < AAA_awright> xp_prg: http://pastebin.com/H86hQJGy
23:34 < AAA_awright> 28 lines
23:34 < xp_prg> if you do, its not very enjoyable, based on my understanding
23:34 < AAA_awright> With blank lines
23:34 -!- mode/#node.js [+o piscisaureus_] by ChanServ
23:35 < substack> rvagg: it's fine if you already know what you're doing but seems like misdirection for beginners
23:35 < rvagg> substack: ya, fair call I suppose
23:35 < xp_prg> AA_awright that is not a loop that is a stack that is being popped 
23:35 < AAA_awright> xp_prg: And you can have multiple prompts running at the same time, if you had that running on multiple terminals
23:35 < rvagg> but I'm trying my hardest to get xp_prg to stop being such a dork
23:36 < AAA_awright> xp_prg: Alright fine, then iterate from 0..(n-1)
23:36 < AAA_awright> xp_prg: It makes a copy of the number array so it doesn't matter
23:36 < rvagg> I shall try no more, I have productive things to be doing!
23:36 < xp_prg> for(var i=0;i< 10;i++) { print get_input(); }
23:37 < AAA_awright> xp_prg: http://pastebin.com/dAQBWkYX
23:38 < AAA_awright> xp_prg: At this point you see how closures in ECMAScript work, and you should be able to figure out how to integrate this into your code and adapt it to your needs
23:39 < nicholasf> xp_prg: you could consider Scala
23:39 < xp_prg> ok, let me show you something one sec, then you will see my frustration
23:39 < nicholasf> I hear that has straight forward ideas
23:39 < nicholasf> also, those line numbers in basic are very linear
23:44 < AAA_awright> xp_prg: No matter what, you don't need to "push all its state onto a stack", you realise that every function call in ECMAScript keeps its own variable scope? Just don't use global variables and you'll have no stack to worry about
23:46 < xp_prg> AAA_awright you don't understand that your pushing state when your using the stack to keep track of where you are in the loop, that is basically 10 context switches you implemented, you just don't know it
23:47 < xp_prg> having access to those variables is like saying the operating system has access to the instruction pointer, its not that helpful
23:47 < AAA_awright> xp_prg: So? It's dead simple. And see http://pastebin.com/dAQBWkYX where I use iteration, same thing
23:48 < AAA_awright> Two thirds of that code is utilizing readline
23:48 < xp_prg> http://pastebin.com/02z6rHJ5
23:48 < xp_prg> see it doesn't work
23:49 < xp_prg> it doesn't block and I can't get the user input in the loop where I want to get it
23:49 < xp_prg> because its "asynchronous"
23:49  * xp_prg puts gun in mouth
23:49 < AAA_awright> Which library is 'prompt'?
23:50 < xp_prg> npm install prompt
23:50 < xp_prg> its a way to get user input from the command line
23:50 < xp_prg> what is the alternative way to block on stdin so I can actually get the user input in my loop?
23:50 < AAA_awright> Do you see what I'm doing? I'm calling nextQuestion(); once the current question is done being answered
23:50 < xp_prg> is there a raw socket read call I can use?
23:50 < AAA_awright> That iterates down the loop
23:51 < AAA_awright> or exits if it's EOF
23:51 < AAA_awright> xp_prg: See how that works?
23:51 < xp_prg> AAA_awright you don't get it, my entire program would need to live inside this callback in a saved state, so it could be re-invoked to start where it left off
23:52 < xp_prg> yes I do see it, its glorified context switching, you just don't know that
23:52 < AAA_awright> xp_prg: SO WHAT
23:52 < xp_prg> do you know what an operating system does when a function is invoked?
23:52 < xp_prg> so its prehistoric and antiquated
23:52 < AAA_awright> The OS does that anyways
23:52 < AAA_awright> It has to save the state of your program *somewhere*
23:53 < AAA_awright> while it switches to other tasks
23:53 < xp_prg> ya it does it for you because it is so trivial you don't need to do that yoruself  as a programmer
23:53 < xp_prg> ya but it should save the state, not you
23:53 < xp_prg> you have to manually save the state that is what your counter array is for
23:53 < bnoordhuis> what am i looking at?
23:53 < AAA_awright> xp_prg: It's no different than your "i" variable in your for loop
23:53 < AAA_awright> I use the exact same "i"
23:54 < AAA_awright> The difference is I use functions and callbacks
23:54 < rvagg> bnoordhuis: avert your eyes
23:54 < wankdanker> bnoordhuis: popcorn time
23:54 < xp_prg> yes it is, the operating system keeps track of the i, I don't have to
23:55 < MI6> joyent/node: Sergey Kholodilov master * 019ad34 : crypto: fix ssl error handling  Make HandleSSLError() correctly process a - http://git.io/8Y8rRQ
23:55 < xp_prg> your rewriting what the operating system already does when a context is switched
23:55 < xp_prg> anyway, its ok, keep doing it if you want
23:57 < AAA_awright> xp_prg: It turns out it's rather process-intensive to do switching like that
23:57 < AAA_awright> Nginx runs an event loop
23:57 < AAA_awright> Event loops are very natural ways to write programs
23:58 < brianloveswords> I like events.
23:58 < AAA_awright> Most programs use event loops
23:58 < wankdanker> xp_prg: this is how you would implement the code you posted: https://gist.github.com/4092024
23:58 < xp_prg> Event loops within threads are the most current approach
23:58 < _Renegade> Is it possible to make requires in one file available to all files required thereafter?
23:58 < xp_prg> a single threaded approach to execution is a throw back to batch processing operating systems that existed on mainframes with punch cards
23:58 < xp_prg> all your doing is glorified context switching because you only have one thread
--- Log closed Sat Nov 17 00:00:09 2012
