--- Log opened Thu Jul 26 00:00:24 2012
00:03 < Hebo> is there a way to get the current test status in mochajs in, say, an after function?
00:04 <@DTrejo> rvagg: merged, and force-pushed b/c I did a bad thing hah.
00:04 <@DTrejo> npmbro stats npm
00:04 < npmbro> DTrejo: Stats for npm: Latest v1.1.45 published a day ago, last pushed to GitHub a day ago, 331 forks, 2814 watchers, 244 tweets
00:04 <@rvagg> npm stats request
00:04 < npmbro> rvagg: Stats for request: Latest v2.9.203 published a month ago, last pushed to GitHub 6 hours ago, 150 forks, 1388 watchers, 77 tweets
00:04 <@rvagg> speedy
00:05 <@DTrejo> hopefully izs doesnt get mad at npmbro again and kick it hah
00:05 <@rvagg> so you turned off the generic npm response then?
00:05 <@rvagg> npm foo
00:05 < npmbro> rvagg: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20foo
00:05 <@rvagg> no!
00:05 <@DTrejo> no I didn't
00:05 <@rvagg> that's asking for it
00:05 <@DTrejo> well, I think enough people know about npmbro now
00:05 <@rvagg> or perhaps it's all part of the show!
00:05 <@DTrejo> so I will make only npmbro work
00:05 <@DTrejo> sound reasonable?
00:05 <@DTrejo> well, i will let isaac complain again ;)
00:06 <@rvagg> heh
00:06 <@rvagg> npm stats underscore
00:06 < npmbro> rvagg: Stats for underscore: Latest v1.3.3 published 4 months ago, last pushed to GitHub 7 days ago, 637 forks, 5724 watchers, 1283 tweets
00:08 <@DTrejo> npmbro
00:08 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm install | npm stats | npm help | npm node | npm credits
00:09 <@DTrejo> npm search meteor
00:09 < npmbro> DTrejo: Please see http://eirikb.github.com/nipster/#meteor
00:12 <@DTrejo> rvagg: check it out, I added u as a contributor using the authors npm module: https://github.com/DTrejo/npmbro
00:12 <@DTrejo> npm docs authors
00:12 < npmbro> DTrejo: Please see http://github.com/DTrejo/node-authors#readme
00:12 <@chilts> npm stats awssum
00:12 < npmbro> chilts: Stats for awssum: Latest v0.6.1 published 2 months ago, last pushed to GitHub 2 hours ago, 19 forks, 160 watchers, 80 tweets
00:12 <@chilts> cool
00:13 <@DTrejo> rvagg: would be cool if it included npm author name & github author name or something
00:13 <@rvagg> ya, I thought about that but there's a few different authors formats people use so it's no trivial
00:13 <@rvagg> string, array (array of what?)
00:14 <@rvagg> npm stats authors
00:14 < npmbro> rvagg: Stats for authors: Latest v0.0.1 published 18 days ago, last pushed to GitHub 18 days ago, 1 forks, 7 watchers, 0 tweets
00:15 <@jesusabdullah> npm stats hoarders
00:15 < npmbro> jesusabdullah: Sorry, I can't work that one out
00:15 <@rvagg> nice module btw, might think about using that across Ender modules
00:15 <@jesusabdullah> hoarders is definitely on npm
00:15 <@rvagg> ya, there's other reasons it can fail tho
00:15  * rvagg inspects
00:16 <@rvagg> haha! hoarders, that's a hilarious package
00:16 <@rvagg> what a monster
00:17 <@jesusabdullah> ^__^
00:17 <@jesusabdullah> I need to write a script that publishes it on an interval or something
00:17 <@jesusabdullah> new packages every day
00:17 <@rvagg> just for the troll value
00:17 <@jesusabdullah> pretty much
00:18 <@rvagg> ok, it's cause you don't have a repo key
00:18 <@jesusabdullah> it was like kinda funny at first
00:18 <@rvagg> or a homepage
00:18 <@jesusabdullah> hmm
00:18 <@jesusabdullah> That makes sense
00:18 <@jesusabdullah> not much to report on
00:18 <@jesusabdullah> oh but yeah, what made it REALLY good was that npm reports reverse dependencies
00:19 <@jesusabdullah> so like all these people are like, "oh someone depends on my packa---OH REAL FUNNY"
00:19 <@rvagg> that is good troll value
00:37 < other_guy> For some reason my Buffer coming back from an HTTP request is consistently missing the last byte  :-(
00:37 < other_guy> like the .end() event is firing too soon
00:37 < other_guy> or on('end') rater
00:37 < other_guy> rather*
00:40 < Guest41315> 
01:03 < owen1> i have a form with action='127.0.0.0:3001' but i don't see the request coming to my server: http://pastebin.com/dceJQFBc
01:03 < owen1> any ideas?
01:05 < inLoveWithNode> opz plz
01:23 <@TehShrike> deops plz
01:24 <@TehShrike> wait, not really
01:24 <@TehShrike> So, who else heard the word about the new OSX upgrade bringing web audio support to Safari?
01:25 <@maxogden> it 'landed' on ios6 also but the implementation is broken
01:26 <@TehShrike> maxogden: Oh really?  I hadn't heard about it hitting iOS6, that's interesting to know.
01:26 <@TehShrike> What's broken about it?
01:26 <@maxogden> i saw some people reporting they couldnt get it to work at all
01:26 <@maxogden> ios6 beta is pretty rough though
01:26 <@maxogden> who knows if they'll fix it
01:28 < TooTallNate> what's "web audio"?
01:28 <@TehShrike> TooTallNate: that seems to be the term that people are using to describe playing audio inside of a browser using only the tools that the browser gives you
01:28 <@TehShrike> As opposed to streaming to a Flash app or something
01:28 <@TehShrike> So, HTML5 audio tags pretty much
01:29 < TooTallNate> so <audio>
01:29 <@TehShrike> Yup.
01:29 < TooTallNate> i'm pretty sure that's been in iOS (mostly shitty/broken) since 4
01:29 <@TehShrike> And codec support is all over the map
01:30 < TooTallNate> i remember there was a bug where you could call "sound.pause(); sound.play()" in the same tick and it would workaround the required "user interaction"
01:30 < TooTallNate> but they fixed it
01:30 <@maxogden> web audio is way different from <audio>
01:30 <@TehShrike> maxogden: whew, please educate me
01:30 <@maxogden> the web audio api is for synthesis, sampling and multi channel playback
01:30 <@maxogden> also real time effects chains
01:30 <@TehShrike> Oh snap
01:31 < TooTallNate> dynamically generated audio?
01:31 <@maxogden> http://chromium.googlecode.com/svn/trunk/samples/audio/index.html
01:31 <@maxogden> play with those for a while
01:31  * TehShrike pees a little in his pants
01:32 <@Nexxy> awkward
01:33 <@TehShrike> Nexxy: see if you can control your bodily functions during this! http://chromium.googlecode.com/svn/trunk/samples/audio/visualizer-gl.html
01:33 <@Nexxy> so far so good
01:36 <@TehShrike> Showoff :-P
01:38 < Guest41315> it warks
01:38 < Guest41315> https://aws.it.cx/
01:39 < jrajav> Thanks for all the phish
01:40 <@TehShrike> The fact that there is a JavaScript FLAC decoder almost restores my faith in humanity
01:41 <@context> just almost. 
01:42 <@Sembiance> woah. github is all screwed up
01:42 <@TehShrike> So close.
01:42 <@TehShrike> Sembiance: works for me https://github.com/ofmlabs/flac.js
01:43 <@Sembiance> TehShrike: CSS is missing for me. try clearing your cache and reloading :)
01:43 <@TehShrike> k
01:43 <@Sembiance> TehShrike: well, only do that if you possibly want GitHub to be ugly for you too ;)
01:44 <@TehShrike> Still good
01:44 <@Sembiance> oh, hrm, weird
01:44 <@TehShrike> What file isn't loading for you?
01:44 <@Sembiance> 404 from chrome https://a248.e.akamai.net/assets.github.com/assets/github-c32021d84a63faa1f20c69f072bf858ebe4db7b7.css
01:44 <@Sembiance> oh, now it's loading.
01:45 <@Sembiance> they must have been doing an update
01:45 <@Sembiance> looks good now :)
01:47 <@TehShrike> whew.
01:47 <@TehShrike> Probably a CDN-related issue, I didn't have any trouble loading that file during that period from what I could tell
01:48 <@Sembiance> so, how's life TehShrike? Working on anything cool/fun? :)
01:48 <@TehShrike> Life is good!
01:48 <@TehShrike> I'm looking for a new job for the first time in a while
01:48 <@TehShrike> Which is a bit of a brainfuck after writing so much code for the same company for 7 years
01:48 <@SomeoneWeird> lol
01:48 < owen1> mscdex: https://groups.google.com/forum/?fromgroups#!topic/nodejs/O6BJIjt6Qfw
01:48 <@TehShrike> And I love JavaScript and desperately want there to be a version of Listening Room again...
01:49 <@Sembiance> TehShrike: Yah, I Was at my previous job for 6 years. Finally quit back on 11-11-11. doing indie game dev full time now
01:49 <@TehShrike> Nice!
01:49 <@TehShrike> Who for?
01:49 <@TehShrike> Anyone with a game out?
01:50 <@Sembiance> TehShrike: I made http://worldofsolitaire.com back in 2007, that's funding my ability to work on my next game, which isn't out yet. It's multi-player card games, spades, hearts, go-fish, etc.  I hope to have it out within 2 months (been working on it since november of last year)
01:50 <@TehShrike> I love indie game devs, and have friends who are even more invested in indie game developers than I am
01:50 <@Sembiance> TehShrike: where are you located at?
01:50 <@TehShrike> Sembiance: Nebraska.  I'm looking for telecommute work only.
01:51 <@TehShrike> Traveling 4-5 times per year is fine with me, that seems to be fairly normal for a lot of telecommuting shops
01:51 <@Sembiance> TehShrike: I haven't been to Nebraska before :)
01:51 <@TehShrike> Well, I like it ;-)
01:52 <@Sembiance> if I visit, anything I should see? :)
01:52  * Sembiance smiles too much :)
01:52 <@TehShrike> Sembiance: yes, I can introduce you to all the breweries who make beers worth trying
01:53 <@TehShrike> There are also some cool entrepreneurs and developers that I know, if you're into that kind of thing
01:54 <@TehShrike> Also, I'd just like to note that I'm feeling a little proud that I spelled entrepreneurs correctly on the first try there
01:55 <@Sembiance> I've never tried beer
01:55 <@TehShrike> Really?  Do you do alcohol at all, or stick to other drugs?
01:56 <@TehShrike> It seems like most people's introduction to beer is something like Budweiser or Miller
01:56 <@Sembiance> I've always heard it was horrible tasting. but that was back when growing up.  I drink 2 or 3 times a year, try and get nice and buzzed to stay in practice :)
01:56 <@Sembiance> usually drink wine or mixed drinks
01:56 <@TehShrike> Which is like telling somebody "I've found this awesome drug called caffeine!  Try some!" and then handing them Folgers
01:56 <@TehShrike> You *could* do that
01:56 <@jesusabdullah> uuuugh
01:56 <@TehShrike> Or you could give them something tasty
01:56 <@jesusabdullah> First beer I actually drank was an AK Amber
01:56 <@Sembiance> what would you recommend for my first beer ever? :)
01:57 <@jesusabdullah> Do you have a regional brewery, Sembiance ?
01:57 <@TehShrike> First beer ever?  That's pretty tough
01:57 <@TehShrike> Yeah, I'd just go to a local brewery (not a local bar)
01:57 <@TehShrike> Ask them for a sampler (they probably have one)
01:57 <@Lorentz> oh man beer I could use some
01:57 <@jesusabdullah> Or, at least, a bar that sells some local brews
01:57 < coderarity> guinness lol
01:57 <@Sembiance> jesusabdullah: probably? I live up in Boston.
01:58 <@TehShrike> People who like good beer are generally pretty accommodating when it comes to helping new people get acquainted
01:58 < coderarity> ops plz
01:58 <@jesusabdullah> Sembiance: Yeah, you're golden. Find something local.
01:58 <@Lorentz> coderarity: I do enjoy guinness
01:58 <@TehShrike> There's just no comparison between mass produced beer and beer made for people who like the taste of beer
01:59 <@Sembiance> Does the smell of the beer have any strong association with it's taste? Should I drink a cold beer? what about the different types? (lager, etc)
01:59 <@TehShrike> I think it's much greater than the difference between Folgers and whatever amazing Ethiopian beans (or whatever) that you use for excellent coffee
01:59 <@TehShrike> Sembiance: a lot of personal taste goes into the temperature
01:59 <@TehShrike> I like it about 10-20 degrees below room temperature
01:59 <@TehShrike> 40-50 is way too cold
01:59 <@TehShrike> (Fahrenheit)
02:00 <@Sembiance> Matt Barton interviews old video game developers, at the end he does an "ale of the week" bit
02:00 < jrajav> TehShrike: As both a coffee and a beer enthusiast, I can tell you that the difference is just as great and just as tragic
02:00 <@TehShrike> The only reason to drink a beer at 40 degrees Fahrenheit is because you want to numb your tongue so you don't have to taste it
02:00 <@coderarity> (i thought it tasted disgusting, but it was my first and most things are an acquired taste for me)
02:00 < jrajav> TehShrike: By the way, I swear by Summit, brewed right here in Minnesota, try it sometime :)
02:00 <@TehShrike> jrajav: fair enough.  My beer palette is much better trained than my coffee palette
02:00 <@TehShrike> Oh hey, I'm pretty sure I've had Summit beer
02:01 <@Lorentz> I don't get much choice in beer
02:01 < jrajav> They make one of the best EPAs
02:01 <@Lorentz> usually i try to get some neat belgium beer though
02:01 <@Lorentz> like leffe
02:01 <@jesusabdullah> I'll usually let a beer warm up over time
02:01 <@TehShrike> jrajav: good to know, I'll see if I can pick it up
02:02 <@jesusabdullah> I'm still a pretty strong fan of my home state's big brewery
02:02 <@TehShrike> So far the best beer I've had in the United States has been from Founders in Michigan
02:02 <@Sembiance> well, thanks for the beer advice, perhaps I'll try some if I ever release this darn game I'm working on, as a reward ;)
02:02 <@TehShrike> Though I've had some pretty amazing IPAs from Dogfish Head in Deleware
02:02 <@TehShrike> Sembiance: just make sure to check in here first before you start drinking beers at random :-D
02:02 <@TehShrike> Also, BeerAdvocate is a pretty reasonable place to check
02:02 <@Sembiance> TehShrike: will do hehe :)
02:03 <@TehShrike> They're like the RottenTomatoes of beer
02:03 < jrajav> Ew :P
02:03 < enmityxero> My home state's brewery; budweiser...
02:03 <@billy> Pliny++
02:03 <@TehShrike> http://www.rottentomatoes.com/m/the_dark_knight_rises/ http://beeradvocate.com/beer/profile/1199/7463
02:04 <@TehShrike> enmityxero:  any more :-P
02:05 <@TehShrike> Anheuser-Busch was bought by InBev in 2008
02:05 < Guest41315> dirty bastard is good
02:05 <@TehShrike> Guest41315: it's more than good
02:05 < enmityxero> O'Fallon and Schlafly are good, though O'Fallon was bought out by busch
02:05 <@TehShrike> If I could pick one beer to drink for the rest of my life, I think Dirty Bastard would be it
02:06 < Guest41315> its good
02:08 <@TehShrike> Sembiance: this sucks much less than I would expect a JavaScript implementation of Solitaire to suck
02:08 <@ben_alman> isaacs: is there any way with certainty to determine which shell node was being run from? I see process.env.SHELL but I was wondering how reliable that is
02:08 <@mscdex> owen1: it works for me, i had to remove the asterisks you had in the html though
02:08 < necros> I watched this video a couple of times http://www.youtube.com/watch?v=1e1zzna-dNw
02:08 < necros> but I'm not a performance expert
02:09 < necros> so
02:09 < necros> what do you think about it
02:09 < necros> ?
02:09 <@TehShrike> lol
02:09 <@TehShrike> Awesome title
02:09 <@TehShrike> I'm looking forward to whatever it is
02:09 < necros> I was thinking on use node for api development
02:09 <@mscdex> owen1: also, you might try having that html served from a web server if you're just viewing it from your browser. there might be some restrictions or something
02:09 < necros> or may be python
02:10 < necros> but I'm not sure which of those is gonna scale better
02:11 <@mscdex> necros: that video is known, but the individual is a troll
02:11 <@TehShrike> I was gonna say
02:12 <@TehShrike> Is this guy trolling or dumb
02:12 <@mscdex> and very misinforming, whether on purpose or not
02:12 <@TehShrike> Or is he parodying other trolls
02:12 <@TehShrike> That's what I actually first though
02:12 <@TehShrike> I thought he was making fun of talentless trolls
02:12 <@TehShrike> And I was laughing pretty hard
02:13 < necros> so
02:13 < necros> for my question
02:14 < necros> is node eficient enought for production applications?
02:14 <@isaacs> ben_alman: no
02:14 <@coderarity> yes
02:14 <@mscdex> necros: what is your application?
02:14 <@TehShrike> necros: yes.
02:14 <@isaacs> ben_alman: there isn't even any way with certainty to determine that it IS being run "from a shell"
02:14 <@ben_alman> gotcha
02:14 <@TehShrike> Here comes mscdex with the intelligent questions
02:14 <@ben_alman> i'm looking into *sh $0
02:14 < necros> mscdex: I'm thinking on build an api using mongodb
02:14 <@TehShrike> Like "qualify your question further"
02:14 < necros> my options are node an python
02:14 < necros> *and
02:15 <@isaacs> ben_alman: *sh $0?
02:15 <@coderarity> he looks like a person i wouldn't trust
02:15 <@isaacs> ben_alman: i don't get it
02:15 <@ben_alman> sorry
02:15 <@coderarity> in that video
02:15 <@mscdex> necros: if it is going to use I/O heavily, then yes. if you're encoding video or something cpu-intensive, then probably not.
02:15 <@ben_alman> bash -c 'echo "$0"'
02:15 <@ben_alman> for bash, sh, zsh, csh, etc
02:15 < necros> mscdex: awesome
02:15 <@isaacs> ben_alman: I'd use process.env.SHELL || 'sh'
02:15 <@ben_alman> i had a pretty cool idea for implementing shell-specific autocompletion
02:15 < necros> it sounds like it is exactly what I want
02:15 < jrajav> I don't often encode video
02:16 < jrajav> But when I do, I encode with node.js
02:16 -!- isaacs changed the topic of #Node.js to: node.js
02:18 <@SomeoneWeird> lol
02:18 < necros> Node sounds good for me cause almost all development is gonna be written in javascript
02:18 <@TehShrike> It's pretty nuts that people keep asking whether or not node.js is suitable for creating production APIs, but they never ask the same about PHP
02:18 < necros> so, we can re-use developers if it is necesary
02:18 <@TehShrike> I guess it's just about how long something has been around
02:19 <@coderarity> "it's going to sit there and calculate pi, and it's gonna do it in JAVASCRIPT" - I lol'd
02:19  * mscdex shakes a fist at PHP
02:19 <@TehShrike> I'm really hoping that I find a good job that won't ever involve PHP
02:20 < timeturner> facebook :P
02:20 <@TehShrike> To be honest, I'd prefer a job that mostly involved JavaScript or an even more purely functional programming language
02:20 <@coderarity> TehShrike, i'd rather work at mcdonald's then do PHP
02:20 < timeturner> wow lol
02:20 <@jesusabdullah> pfffsht
02:20 <@TehShrike> coderarity: I think I'd rather write PHP than do food service again
02:20 <@TehShrike> But I can understand where you're coming from
02:20 <@TehShrike> coderarity: have you worked food service before?
02:20 < timeturner> PHP really screwed up the server-client model for me
02:20 < timeturner> no joke
02:20 <@TehShrike> timeturner: I can definitely understand that
02:21 <@coderarity> TehShrike, i worked at mcdonald's until Nodejitsu saved me ;P
02:21 <@TehShrike> Nice.
02:21 <@DTrejo> fyeahh, just smashed a ton of issues on my node projects
02:21 <@mscdex> PHP job pays the bills until I find a full time node-related job ;-)
02:21 <@TehShrike> coderarity: ...looking for a coworkers? :-)
02:21 < timeturner> do you guys get to work from home by any chance?
02:21 <@jesusabdullah> TehShrike: What's your time zone?
02:21 <@coderarity> idk, ask jesusabdullah
02:22 <@TehShrike> jesusabdullah: Well, it's Central, but all my clocks are set to UTC
02:22 < timeturner> not sure if my new job will let me work from home
02:22 <@TehShrike> I've worked pretty flexible hours before, but I've been forcing myself towards normal-person hours recently.  I have melatonin, I can match whatever schedule y'all like.
02:23 <@jesusabdullah> Well, we're always looking for new people
02:23 <@wavded> how do you log out something in a c++ binding, trying to debug something in an addon?
02:23 <@jesusabdullah> we have job descriptions on our web site
02:23 <@TehShrike> jesusabdullah: all right, lemme go read up on those
02:23 <@jesusabdullah> I'm looking for someone to do support while I'm asleep in particular (2:00am-on for you)
02:24 <@coderarity> TehShrike, where are you?
02:24 <@TehShrike> coderarity: Nebraska.
02:24 <@jesusabdullah> so, hoping for a TZ somewhere between E. Europe and Australia
02:24 <@TehShrike> This job hunt is prompted by my move from Lincoln to Omaha
02:24 <@mscdex> wavded: printf? :-)
02:24 <@coderarity> my mom is from there O_o
02:24 <@jesusabdullah> but like I said we're always looking and would hate to turn away people for silly reasons like their place of residence
02:25 <@wavded> was wondering if it was that simple ;)
02:25 <@TehShrike> I've done support.  I'm not opposed to it, but I would very much like a job that involves writing code, or being awesome at databases.
02:25 <@wavded> mscdex: you have been working on zeromq haven't you?
02:25 <@wavded> the bindings
02:25 < timeturner> jesusabdullah: what database does nodejitsu use?
02:25 <@TehShrike> To be honest, support was pretty good.  But I want to keep putting points into my Coding stat.
02:26 <@jesusabdullah> timeturner: We use a lot of couchdb
02:26 <@TehShrike> jesusabdullah: while I'm looking over nodejitsu, this is me http://careers.stackoverflow.com/joshduff
02:26 <@TehShrike> Lemme know if you see anything that immediately crosses me off your list :-P
02:26 <@jesusabdullah> TehShrike: Keep in mind, our support engineers do coding
02:26 <@TehShrike> Sweet!
02:27 <@mscdex> wavded: briefly
02:27 <@wavded> mscdex: i'm trying to take a stab at https://github.com/JustinTulloss/zeromq.node/issues/124 (but am fairly clueless about addons and libuv internals)
02:27 <@jesusabdullah> also: couchdb erryday
02:27 <@coderarity> TehShrike, yes, I definitely write code
02:27 < timeturner> are nodejitsu and joyent fully integrated now?
02:27 < timeturner> in terms of servers etc.
02:27 <@jesusabdullah> timeturner: for a few weeks now
02:27 <@TehShrike> I actually got into professional programming by coercing my coworkers to help me set up a dev environment on my machine, and then committing code that fixed bugs 8-|
02:27 < timeturner> sweet
02:27 <@jesusabdullah> timeturner: all new deploys are on joyent
02:27 < timeturner> jesusabdullah: :D
02:28 <@TehShrike> Not that I didn't want to be a programmer before that
02:28 <@TehShrike> I've known that I wanted to write code since I was 10 or something
02:28 <@jesusabdullah> For me it really started in MS Excel
02:28 <@TehShrike> I just had to force my way in
02:28 <@TehShrike> jesusabdullah: nice!
02:28 <@jesusabdullah> at some point you outgrow spreadsheets
02:28 <@jesusabdullah> pretty quick really
02:28 <@jesusabdullah> and at some point you'll outgrow matlab
02:28 <@jesusabdullah> I certainly did
02:29 <@coderarity> man I feel mainstream starting with games
02:29 <@TehShrike> My parents have pictures of me banging on the keyboard of their word processor some 20+ years ago
02:29 <@coderarity> everyone starts by making games
02:29 <@jesusabdullah> definitely mathstuff for me
02:29 <@jesusabdullah> though I've made games in ms excel
02:29 <@TehShrike> As soon as I could push buttons and see a result on a computer, I've known that I wanted to be doing That.
02:29 < timeturner> games in excel?
02:29 <@mscdex> wavded: i'm not really familiar with the binding itself, i merely had added windows compilation support in my fork
02:29 <@jesusabdullah> I have a bingo sheet timeturner
02:30 <@TehShrike> It's weird, all my programmer friends and I are into games and game design, but none of us have made games
02:30 < timeturner> whoa :D I wanna see
02:30 <@jesusabdullah> that randomizes if you press reload
02:30 <@TehShrike> I'm okay with not making games
02:30 <@TehShrike> Though I love talking about game design
02:30 <@coderarity> oh i did flash stuff for a while
02:30 <@coderarity> i hate flash
02:30 <@jesusabdullah> timeturner: https://github.com/jesusabdullah/college-greatest-hits/blob/master/esmbingo.xls
02:31 <@coderarity> and unity, that too
02:31 <@coderarity> TehShrike, I just don't like the state of the entire entertainment industry
02:31 <@wavded> mscdex: gotcha, saw you had a fork
02:32 <@TehShrike> coderarity: I hear you there.  From what I've read, the work environment at a game development shop (beyond a few medium-sized indies) is way worse than many small corporate environments.
02:33 <@TehShrike> That's why I'd enjoy working on a game, but am looking for a job at a company that makes non-game software.
02:33 <@jesusabdullah> I kinda miss doing the kind of math that required batch processing
02:33 <@coderarity> yeah, if I do game dev i'm going indie
02:33 <@coderarity> or valve
02:33 <@TehShrike> Yup, pretty much
02:33 <@coderarity> valve has a snack room
02:33 <@TehShrike> I've had a lot of fun talking to the Mode 7 Games guys
02:33 <@TehShrike> I'd work with somebody like them
02:33 < timeturner> hahahaa the indie-p-test pages are hilarious! :D
02:34 <@jesusabdullah> timeturner: Reddit hated it
02:34 <@TehShrike> coderarity: so you're a "support engineer"?
02:34 <@coderarity> TehShrike, yeah
02:34 <@jesusabdullah> TehShrike: Oh, fyi, the page says to contact Charlie McConnell but you should actually contact me
02:34 <@jesusabdullah> josh@nodejitsu.com
02:34 <@TehShrike> coderarity: How does your day break down on average?
02:34 <@jesusabdullah> as I'm now head of support
02:35 <@TehShrike> Good to know
02:35 <@jesusabdullah> You guys can PM about this if that makes you more comfortable
02:35 <@jesusabdullah> just throwing that out there
02:35 <@TehShrike> Sure, I appreciate it
02:36 <@TehShrike> I actually looked at the Nodejitsu list of jobs a week or two ago, but it looked like all the coding-heavy jobs were under "intern" and I figured you weren't paying pull programmer prices for those
02:37 <@TehShrike> I want to be writing things.
02:37 <@TehShrike> I don't care much what, as long as it matters to some user, somewhere.
02:37 <@jesusabdullah> word
02:38 <@TehShrike> I have preferences about the language, and I don't want to work in a code base with a ton of technical debt, but that's the main thing
02:38 <@jesusabdullah> Yeah, I feel you
02:41 <@TehShrike> heh, I just realized that I wrote the only explicit support instructions at the company where I work :-P http://wikido.isoftdata.com/index.php/Principles_of_support
02:42 <@wavded> mscdex: know a way to print a stack trace in C++?
02:45 < timeturner> jesusabdullah: giving an example of what the homework should look like is golden. I honestly wish more TA's had done that when I was in college
02:47 <@mscdex> wavded: i'd have to look it up, but i think you can create an error object and call its GetStackTrace() method which returns a v8 string
02:50 <@mscdex> wavded: ok, it looks like it's simpler than that. there's a static method v8::StackTrace::CurrentStackTrace(). see: http://izs.me/v8-docs/classv8_1_1StackTrace.html
02:51 <@ben_alman> so anyways isaacs i came up with a pretty cool pattern for handling bash auto-completion in grunt. grunt --completion=bash will simply output the contents of the internal grunt /completions/bash script to the console. so all you have to do to enable bash auto-completion is add: eval "$(grunt --completion=bash)" to your ~/.bashrc - and this will support an eventual zsh version as well
02:53 <@ben_alman> actually you do something similar in npm
02:53 <@ben_alman> except you tell people to do npm completion >> ~/.bashrc
02:54 <@ben_alman> but what if it ever changes?
02:55 <@jesusabdullah> ben_alman: check out flatiron/complete, we use it in jitsu
02:55 <@jesusabdullah> at worst you'll see a second implementation of the idea
02:55 <@jesusabdullah> I like that eval bit though
02:56 <@ben_alman> do you have a link?
02:56 <@ben_alman> i can't find this in google
02:56 <@jesusabdullah> Oh I see what's up
02:56 <@jesusabdullah> ben_alman: https://github.com/hij1nx/complete
02:57 <@jesusabdullah> ben_alman: was going to be moved to flatiron I think but hasn't happened
02:57 <@ben_alman> gotcha
02:59 <@ben_alman> jesusabdullah: does complete work with both bash and zsh?
02:59 <@wavded> mscdex: ahh ok, am able to get the the stack trace I think, now gotta print it somehow...
03:00 <@jesusabdullah> ben_alman: I believe only with bash right now but I'm sure zsh support wouldn't be frowned upon
03:01 <@ben_alman> i wish i could ever understand charlie's documentation
03:01 <@ben_alman> but it's really, really not great
03:02 <@ben_alman> ever
03:02 <@ben_alman> great ideas
03:02 <@ben_alman> shitty docs.
03:02 <@jesusabdullah> ololo
03:02 <@jesusabdullah> and by charlie you mean paolo?
03:02 <@jesusabdullah> or chjj?
03:02 <@ben_alman> oops
03:02 <@ben_alman> yeah
03:02 <@jesusabdullah> Well
03:02 <@jesusabdullah> I mean
03:02 <@ben_alman> sorry paulo
03:02 <@ben_alman> christ
03:02 <@ben_alman> i get you all confused
03:02 <@ben_alman> except for marak
03:02 <@jesusabdullah> lulz
03:02 <@jesusabdullah> marak stands out
03:03 <@ben_alman> but that's because he was an asshole i knew for a few years before nodejitsu
03:03 <@jesusabdullah> pffsht
03:03 <@jesusabdullah> marak? An asshole? Surely you jest!
03:03 <@ben_alman> heh
03:04 <@ben_alman> so complete is interesting
03:04 <@ben_alman> but it really needs to be integrated with a cli args parser
03:04 <@ben_alman> having it separate is insanity
03:04 <@jesusabdullah> You think so?
03:04 <@jesusabdullah> Interesting idea
03:04 <@ben_alman> definitely
03:04 <@ben_alman> it's like you're defining the same stuff twice
03:04 <@jesusabdullah> Oh, I see
03:05 <@ben_alman> commands?
03:05 <@jesusabdullah> yeah, use your parsed argv to chunk out possible completions
03:05 <@jesusabdullah> "reflection" as they say
03:05 <@jesusabdullah> You should make an issue about that
03:05 <@jesusabdullah> cause that's true
03:05 <@jesusabdullah> I'd push for being able to parse an optimist-style output
03:05 <@jesusabdullah> since we use optimist
03:07 <@ben_alman> https://github.com/hij1nx/complete/issues/7
03:07 <@ben_alman> yeah i use something else iirc
03:08 <@ben_alman> nopt
03:08 <@ben_alman> some jerk wrote that i think
03:08 <@ben_alman> tbh i don't use the nopt format either
03:08 <@ben_alman> i have my own model
03:09 <@ben_alman> and then just iterate over it to build up what i need from nopt
03:09 <@ben_alman> does the trick
03:09 <@ben_alman> :)
03:11 <@jesusabdullah> ben_alman: I do like optimist's style, generally
03:11 <@ben_alman> it was the first one i tried
03:11 <@ben_alman> tbh, a lot of the nodejitsu stuff is the first i tried
03:11 <@ben_alman> then i either hacked it or tossed it
03:11 <@ben_alman> the only thing i use wholesale is colors
03:12 <@ben_alman> which is pretty much exactly what i need
03:13 <@jesusabdullah> I feel that, if you know what you want might as well hack it up
03:13 <@jesusabdullah> it's certainly a sane place to start
03:13 <@jesusabdullah> well
03:13 <@jesusabdullah> almost certainly
03:13 <@jesusabdullah> haha!
03:15 <@ben_alman> heh
03:17 <@ben_alman> jesusabdullah: http://benalman.com/grab/77c842.png
03:17 <@coderarity> ben_alman, if you get nodejitsu people confused, you should totally get me confused with someone awesome like AvianFlu or indexzero
03:17 <@coderarity> and definitely not jesusabdullah ;P
03:17  * coderarity hides
03:18 <@jesusabdullah> ben_alman: Word
03:19 <@ben_alman> jesusabdullah: i actually cache grunt output because grunt has to go poking around for terms to autocomplete
03:20 <@ben_alman> i actually key the cache on the grunt version, modification time of the gruntfile, etc
03:20 <@ben_alman> ok afk
03:20 <@ben_alman> need to sleep
03:32 < airportyh> Hey all, here's a thought: in mocha and other test frameworks, it's really awkward to print debug statements using console.log
03:32 < airportyh> the console.log output just get intersperse within the test result output
03:32 < airportyh> like this http://pastie.org/4334235
03:32 <@deoxxa> correct
03:32 < airportyh> is there a better way that I am not aware of?
03:33 <@deoxxa> i'd suggest "not doing that"
03:33 < airportyh> so what do you do to debug?
03:33 < airportyh> use the debugger?
03:33 <@deoxxa> well what are you testing?
03:33 <@deoxxa> if it's a library, i'm not sure why you have console.log statements in there
03:34 < airportyh> basically trying to use console.log to inspect the state of a program at a point quickly
03:34 < airportyh> for debugging
03:34 < airportyh> the statements are temporary
03:34 <@deoxxa> you might just have to deal with it being a bit ugly then :<
03:35 <@deoxxa> you could, of course, use a logging library to pipe them to a file or something
03:35 < airportyh> what do *you* do?
03:35 < airportyh> or maybe to rephrase, what are the best practices?
03:35 <@deoxxa> i don't do debugging using my test suite
03:36 <@deoxxa> test suite finds a problem -> i do "things" to fix it
03:36 < airportyh> but when a test fails, don't you need to do some investigation into why it failed?
03:36 <@deoxxa> wash, rinse, repeat
03:36 < airportyh> yeah, the "do things" part, isn't that debugging?
03:36 <@deoxxa> yep, but i don't do that via a test suite
03:37 < airportyh> you do it by running the program separately?
03:37 <@deoxxa> correct
03:38 < airportyh> hmm, interesting, that's not how I do it
03:38 <@ryah> javascript question: -1 % 4 == -1 ?
03:38 <@ryah> how do i get 3
03:39 <@ryah> (also: what the fuck)
03:40 <@jesusabdullah> 1 % 4 is 1 yeah?
03:40 <@TehShrike> Sembiance: Hey!  I won! :-D
03:40 < AvianFlu> python says -1 % 4 is 3
03:41 < AvianFlu> so yeah, weird
03:41 < owen1> mscdex: it works with http:// thanks.  do u need to redirect back or something similar? i want the user to stay in the original form. the node service is suppose to take care of the file upload + processing without causing the browser to freeze.
03:44 <@mscdex> owen1: i'm not sure i know what you mean? your browser is freezing?
03:46 < owen1> mscdex: right now, i see http://127.0.0.1:3001/ in the url. i want to stay in the ruby site. i only want the file to be sent to the node service for uplad+processing.
03:46 < owen1> and the node service will send (socket.io) progress back to the browser.
03:46 < owen1> mscdex: is it possible to achieve that with my form?
03:47 <@mscdex> owen1: you could either do an http redirect back to the page (if you don't mind losing any state you have on the page) or do the upload via ajax
03:47 < owen1> mscdex: upload via ajax sounds good. 
03:48 < owen1> so i need to attach an event to the form, and do return false, and make ajax call that grabs the file from the form, righ?
03:50 < WillMarshall> How would I get Node.js to automatically compile Jade templates?
03:50 <@tbranyen> WillMarshall: what do you mean automatically?
03:50 < WillMarshall> tbranyen: Compile the Jade and return HTML on request
03:51 <@TehShrike> coderarity: hey, thanks for the link to that "coming war on general computation" video, it's really interesting
03:51 <@tbranyen> WillMarshall: i'm doing this cool thing where i make an express route that specifically listens for .styl and then serves back compiled css
03:51 <@tbranyen> WillMarshall: might be similar to your use case
03:51 <@mscdex> owen1: yeah, pretty much
03:51 < WillMarshall> tbranyen: Sounds promising - do you have a gist?
03:51 <@coderarity> TehShrike, yeah
03:51 < WillMarshall> I first picked up Node.js today, so it's all a little shonky still
03:51 <@tbranyen> WillMarshall: https://github.com/backbone-boilerplate/grunt-bbb/blob/master/tasks/server.js#L77
03:52 <@TehShrike> "and with that, illegal copying ended forever" *widespread laughter and applause*
04:12 < et_> hello everyone. i have a virual machine with node running on port 80. and other machine running apache. third machine is using 'pound' load balancer to use both servers on port 80
04:12 < et_> it works.
04:12 < et_> but node.js is not syncing with the server
04:13 < et_> when connecting directly to server by ip, i can load several browsers and one update the other automatlcly
04:13 < et_> when i update file in the server, the browser update it self , but when using pound.. it's not auto-updating
04:14 < et_> anybody knows how to configure a loadbalancer with node.js/derby.js?
04:14 < et_> i can't use node.js load balancing, because i have IIS/Apache/Node.js servers on seperate machines.. all on port 80
04:20 < adambreen> hi all - does anyone here have experience with Flatiron / Union?
04:24 <@coderarity> adambreen, sure
04:24 < adambreen> hey code rarity :)
04:24 <@coderarity> adambreen, lots of people, especially in #nodejitsu also
04:24 < adambreen> I'm having trouble getting passport.js to work with Union
04:25 < adambreen> have you set up any sort of auth middleware with it?
04:25 <@AlbireoX> I had a nightmare last night where I did `heroku ps:scale app=40'
04:25 < adambreen> doesn't need to be passport
04:25 <@coderarity> i have not
04:25 < adambreen> k
04:25 <@coderarity> but you can ask anyways
04:25 < adambreen> i might try in #nodejitsu then… thanks for the tip
04:33 < prettyrobots> I have a binary string returned by crypto.
04:33 < prettyrobots> How do I convert it to hex?
04:35 < prettyrobots> Forget it. Found it.
04:35 < prettyrobots> Hidden in deprecated warnings. :(
04:40 <@rektide> where oh where is connect().request()? :(
04:40 < jlank> when you're piping http requests around, how do you handle exceptions that may come up in the pipeline?
04:40 <@rektide> besides https://github.com/senchalabs/connect/tree/master/test
04:40 < superjoe> what's the correct way to do logging? looks like console.log is blocking so that's probably bad
04:41 < jlank> do you need to use event listeners? 
04:41 <@rektide> jlank: it's up to you. someone has to be responsible for passing a 5xx or 4xx and only one person gets to set the status code
04:42 <@rektide> superjoe: https://github.com/flatiron/winston.git is a correct way to do logging for some people, maybe you as well
04:43 < superjoe> thanks rektide this looks adequate
04:43 < jlank> rektide: thanks, I know I need to handle it, I'm just not sure how.. for example if I had this line: var req = request.get('http://localhost:5984/db/_design/designdoc/_view/doc_by_version?limit=20').pipe(parser).pipe(logger);
04:44 < jlank> if the initial request.get gave a 400, how do you tell? I gave it a bad URL and tried to do req.on('error'... but that didn't work as expected
04:45 <@rektide> jlank: what is request.get(url)?
04:45 < jlank> mikeal's request module
04:50 < jlank> i can put another function in there to check the body but I don't have access to the headers
04:52 <@rektide> jlank: the response object is passed in, it ought be http://nodejs.org/docs/latest/api/http.html#http_response_getheader_name
04:52 <@rektide> to get the headers out of it
04:53 <@rektide> but at that point, i believe all the pipe-ing will have occured: the body is already there
04:53 <@rektide> & i don't have any idea how to check headers or waht not before setting up the pipe()'ing
04:53 <@rektide> interesting problem
04:55 < jlank> ya I'm not sure I'm just starting to use streams how they're supposed to be (at least I think I am), so I haven't run into this issue before
04:56 <@rektide> if you can figure out how to send the stream somewhere useful, whether it's an error message being returned or something of good status, you'd be ok
04:56 <@rektide> then decide what to do with that stream latter, in the callback
04:57 <@rektide> but i also think you should have some way to decide & reason about whether to pipe before data starts flowing
04:57 <@rektide> and i don't see where in mikeal's request library you would do that
04:57 < jlank> i mean, I could put a listener on the req object itself
04:57 <@rektide> there are a number of events it seems to emit across it's lifecycle, perhaps one of them might give you access to the request objects
04:57 < jlank> but that'd just emit an error if the stream messed up
04:58 <@rektide> the greatest trick that devil tj holowaychuk ever played was hiding this app.request() method, wth, where is it! aaagg
05:00 < jlank> lol
05:27 < kmax> clear
05:29 <@mscdex> kmax: pretty much
06:01 < owen1> what your opinion about meteor? they got 11 million fund - http://meteor.com/blog/2012/07/25/meteors-new-112-million-development-budget
06:01 <@jesusabdullah> owen1: Is it using package.json yet?
06:10 < owen1> jesusabdullah: havn't used it. i am just curious what people here think.
06:10 < owen1> i believe they don't use npm packages, or maybe they use it in i different way?
06:14 <@benvie> reactive programming is awesome
06:14 <@benvie> but I don't know anything about meteor
06:14 <@benvie> except that it supposedly uses concepts from it
06:44 <@Raynos> benvie: what is reactive programming?
06:45 <@Raynos> owen1: http://news.ycombinator.com/item?id=4293117
06:45 <@benvie> fundmanetally, being able to treat values that change over time as primitives kind of
06:46 <@benvie> or treating binding as a foundational thing rather than a bolted on thing
06:46 <@benvie> x = <y>
06:46 <@benvie> for all values of y into the future
06:46 <@benvie> or x = <y * 2>
06:47 <@benvie> frp is functional reactive programming, which is basically implementing those concepts using functional programming
06:47 <@benvie> primarily the domain of haskell thus far
06:49 <@Raynos> i see
06:49 <@Raynos> i like that idea
06:49 <@Raynos> I wrote observable to do that
06:50 <@Raynos> Whats a better technique for reactive programming in js
06:50 <@Raynos> proxies?
06:51 < hillerstorm> microsoft has one take on it http://channel9.msdn.com/Blogs/Charles/Introducing-RxJS-Reactive-Extensions-for-JavaScript
06:51 < hillerstorm> :)
06:52 < hillerstorm> treat events as an ever-changing collection etc
06:52 <@benvie> yeah see
06:52 <@benvie> the general concept is good but that part doesn't really work
06:52 <@benvie> I started from the js/browser angle and used it as kind of the reverse
06:52 < SomeoneWeird> heh
06:53 <@benvie> which this paper is closer to http://conal.net/papers/push-pull-frp/
06:53 <@Raynos> i swear i looked at rxjs before it felt silly
06:53 <@benvie> probably, I looked at it for 3 seconds
06:54 <@Raynos> i dont really know how to do reactive programming in js without event emitters or polling
06:54 <@benvie> yeah exactly
06:54 <@Raynos> or prototype hacks
06:54 <@benvie> thus the concept of the reverse
06:54 <@benvie> check this out
06:54 <@Raynos> var x = { __proto__: y }
06:54 <@Raynos> whats the reverse?
06:54 < cconstantine> Hey all.  I've got a restful api that references other objects.  is there a 'proper' way to handle that (ie, should I dupilcate the references objec or something else?)
06:55 <@benvie> https://github.com/Benvie/benvie.github.com/blob/master/client/modules/site/geometry.js#L759
06:55 <@benvie> emitters yes
06:55 <@benvie> polling no
06:55 <@benvie> and not proto hacks
06:55 < cconstantine> it's a simple message board, and every post references a user object
06:57 <@benvie> hm I guess that file has a bunch of extra stuff in it
06:57 <@Raynos> benvie: https://github.com/Benvie/benvie.github.com/blob/master/client/modules/site/geometry.js#L41
06:57 <@Raynos> what even is this
06:57 <@benvie> I need to clean this up
06:57 <@Raynos> benvie: you either can't write readable code or are a few years ahead of me in terms of grokking js
06:58 <@benvie> I don't know why that's in there
06:58 <@benvie> that gets the parameter names from a function
06:58 < hillerstorm> :)
06:58 <@benvie> anyway
06:59 <@benvie> I forgot how much other shit was in that file
06:59 <@tk> anyone in here familiar with Noduino at all?
06:59 <@benvie> but basically it was the idea of adding accessors to an existing type
06:59 <@benvie> for the data parts of it
06:59 <@benvie> so existing stuff could be used in place without modification
07:00 <@benvie> so most of the file is like boilerplate Point and Rect stuff
07:11 <@SubStack> isaacs: -1 % 4 === 3 is more useful behavior :p
07:15 < owen1> i want to post a form with a file to my node server using ajax. how to get the file with jquery? var file = $('.file').val();    only show me the path.  any tips?
07:16 < mickhansen> owen1, you need to use the File/FormData API
07:17 <@ljharb> which isn't available in every browser
07:17 <@ljharb> owen1: go google ajax file upload. you have to post it to an invisible iframe in browsers without the filedata api.
07:19 < owen1> ljharb: ok. i'll google for that. not sure how will the form info gets into my node server if i send it to some iframe..let me google.
07:20 <@ljharb> owen1: the iframe posts to your server
07:20 < owen1> mickhansen: thanks, but since it's not going to work on multiple browsers, i'll try ljharb's approach
07:20 < mickhansen> owen1, yea no ie support, but you asked about AJAX ;)
07:20 < owen1> ljharb: weird..let me see
07:29 < owen1> ljharb: i think it's working. i added target=hiddenIFrame   and my node server get's the form with the file...is that it? i don't need to add some jquery stuff? is this ajax call?
07:30 <@ljharb> it's not ajax, its just async with an iframe
07:32 < owen1> ljharb: so what's going on here, i didn't tell the iframe to post to my server. it just do that by looking at the form's action?
07:33 < mickhansen> Well, your form posts to your server, through the iframe
07:33 <@ljharb> yes
07:34 < owen1> ljharb: ok. i can put my node server on any domain and machine, right? it doesn't have to be on the same machine as my ruby code (where the form came from)?
07:34 < owen1> i want to send some progress report back to the browser (csv progress), i should be able to use socket.io, right?
07:35 <@ljharb> well no, but if its a different domain you can't communicate between the two pages
07:36 < owen1> ljharb: what do u mean 'two pages'? the page with the form and the hidden iframe?
07:36 <@ljharb> yes
07:36 <@ljharb> an iframe is a separate page
07:37 < owen1> ljharb: why do i need the iframe and it's container to communicate? my node is processing the csv, and with socket.io i am 'pushing' some stats straight to the container.
07:38 <@ljharb> owen1: how will you know when the upload is complete?
07:39 < [AD]Turbo> hi there
07:40 < owen1> ljharb: i think i don't understand the issue. my node server is using formidable. this package gives me an event 'file' that is emitted when the file upload is done. as soon as it emmited, i'll use socket.io to push event to the container.
07:41 < owen1> unless i can't since i am on a different domain
07:41 <@ljharb> owen1: you said the parent page is on the ruby server, and the iframe is on the node server. NO DATA even events can pass back from the iframe
07:41 < owen1> ljharb: ?
07:41 <@ljharb> you can post to it but it's a one way black box
07:42 < owen1> ljharb: here is my iframe: <iframe name="hiddenIFrame" style="width:0px;height:0px;border:0px;"></iframe>
07:42 < owen1> ljharb: the ruby just serve the html page with a form and the iframe is in the same html where the form is
07:43 < owen1> ljharb: the action of the form points to my node api - http://my-server.com:3001
07:43 <@ljharb> what domain is the form action on, the same as the parent page?
07:43 <@ljharb> if it;'s a different domain, there can NOT be any communication after the post.
07:45 < owen1> ljharb: it's really up to me. i can use nginx to redirect calls to the node and bypass this limitation. 
07:46 <@ljharb> owen1: … i don't understand. what matters is what the URL is in the browser.
07:47 < owen1> ljharb: right now my ruby server, that spits the html is on port 3000 and my node server that the action is pointing to is on the same machine but port 3001
07:48 <@deoxxa> that sounds like a pretty horrible setup
07:48 <@ljharb> owen1: that is a different URL. no communication. period.
07:48 < owen1> ljharb: you are saying that currently, i can only post (with the hidden iframe) from the browser to the node, but no way to communicate the other way, right?
07:48 <@ljharb> it has to be the same exact domain protocol and port.
07:48 <@ljharb> yes.
07:48 <@deoxxa> well...
07:48 <@deoxxa> ljharb: he did mention socket.io
07:48 <@deoxxa> which does jsonp and other icky things
07:48 < owen1> deoxxa: true!
07:49 <@deoxxa> still
07:49 <@deoxxa> horrible way to do it
07:49 <@ljharb> so youre running socket.io on the ruby pages to talk to the node server?
07:49 < owen1> ljharb: yeah. on the browser
07:49 < owen1> deoxxa: but i can use 3000 for both with nginx redirects, right
07:49 < owen1> ?
07:50 <@deoxxa> you can, yes, but it's not called a "redirect"
07:50 <@ljharb> owen1: please stop talking about nginx redirects. its muddying the issue.
07:50 <@deoxxa> and using that term only serves to confuse things
07:50 < owen1> ljharb: sorry ):
07:50 <@ljharb> if youre running socket.io like that, then yes you can communicate back through socket.io
07:50 <@ljharb> but that is absolutely an awful architecture. why not just upload to rubt
07:50 <@ljharb> *ruby
07:51 <@deoxxa> or use a cool web service to do all this yucky stuff! https://www.filepicker.io/
07:51 < owen1> ljharb: the users upload file that avarage 30mg. it's big csv that i need to process and notify the client when it's done.
07:52 < owen1> ljharb: and i don't want to block the server, so i thought node is a good solution.
07:52 <@ljharb> owen1: you're still blocking node
07:52 <@deoxxa> wat
07:53 <@ljharb> and the processing you can do in whatever. but the uploading should be to the same webserver.
07:54 < owen1> i am confused. let me think..
07:56 < owen1> ljharb: i thought of having node running on the same server as the ruby server. i also thought that node can handle big file uploads nicer, since i don't have to load the file to memory, but save it chunk by chunk into harddrive, and than process it row by row.
07:56 <@ljharb> since when does the whole file get loaded to memory, in any server?
07:57 <@deoxxa> ljharb: you've not seen horror until you've worked with CGI.pm
07:58 < owen1> so what you'r saying is it has nothing to do with ruby but it's the server i use to dispatch ruby? like thin vs unicorn?
07:58  * deoxxa shakes head
07:58 <@ljharb> i dont know that much about rails thins. i just know making a separate upload server is weird.
07:58 < owen1> so i can safely load 30MB of csv to rails?
07:58 <@ljharb> why not
07:59  * deoxxa points to #rails
07:59 <@deoxxa> (i don't know if that's a real channel)
07:59 < owen1> rubyonrails, yes
07:59 <@deoxxa> hooray! they'll probably know
07:59 < owen1> (:
08:00 < owen1> what about the process of the excel and pushing some notification at the end of the processing or the upload? will rails be able to take care of it without blocking the server?
08:01 < radiodario> morning
08:01 < owen1> or is it something i can easily let node do?
08:01 <@deoxxa> owen1: maybe you should ask the rails guys
08:01 < radiodario> the process of the excel? are you planning on using excel?
08:01 < owen1> radiodario: i meant csv
08:02 < owen1> i need to read csv with 10,000 rows
08:02 < radiodario> if you wanna do it with node, we'll be hapy to help you with any doubts, but we aren't ruby on rails experts (i have no clue how to use ruby) so i suggest you ask in their channel.
08:02 < SomeoneWeird> maybe you should go back and rethink how you're gunna do this :)
08:02 < owen1> and save some info into a db
08:02 < radiodario> alternatively, you could use python
08:02 < radiodario> java or even c++
08:02 <@deoxxa> .sh
08:04 < owen1> i already have existing rails site. i was thinkng of ways to add some node sweetness for stuff node is good at. i assumed node will be good at uploading big csv, reading it, and spitting back some info to the browser, and all that without blocking the rails process.
08:05 < radiodario> a node process might be good for that, a node-ruby hybrid i'm not sure
08:05 < owen1> in rails you usually use different process, like resque or delayed_jobs.
08:05 < owen1> radiodario: that's why i thought of directing the action of the form to node server that gets the csv, reads it, store some stuff in mysql and spits some info back to the browser.
08:06 < radiodario> so your users upload a csv file?
08:06 < thewanderer1> hi. I have a long-running daemon which relies on keeping state information in the memory. now, I'm doing some development on it, and I wonder if it's possible/viable to dynamically patch the code without restarting?
08:07 <@jesusabdullah> thewanderer1: Not really
08:07 <@jesusabdullah> thewanderer1: I'd use redis for the state information
08:07 <@jesusabdullah> thewanderer1: or some other database
08:07 < thewanderer1> well, I'm going to be using MongoDB, but it also relies on timers, etc., so not really an option
08:07 <@jesusabdullah> what kind of timers?
08:08 <@jesusabdullah> because redis can do those too
08:08 < thewanderer1> http://nodejs.org/api/timers.html
08:08 <@jesusabdullah> like, you can put a ttl on
08:08 <@jesusabdullah> no, I know how timers work
08:08 <@jesusabdullah> I'm wondering what you're doing with them
08:09 <@jesusabdullah> that makes it hard to back with a database of some kind
08:09 < thewanderer1> it's a daemon for real-time conversation tracking and it needs to time the conversation out to detect when it has finished
08:10 <@jesusabdullah> Okay
08:11 <@jesusabdullah> so it's state
08:11 < thewanderer1> so I thought I could accept some JS code via a trusted channel, and replace a function with it
08:11 <@jesusabdullah> What I would do is break my app up into a cluster, then
08:11 < thewanderer1> for HA?
08:12 <@jesusabdullah> use something like dnode to split it between the part that just listens to conversations and handles the timeouts, and a part that you want to iterate on
08:12 <@jesusabdullah> Or, if you're just adjusting configuration options, write it so it can reload config
08:13 < thewanderer1> well, I'm developing the algorithm and actually adding new code paths, so it can't be done with config atm
08:13 <@jesusabdullah> sure
08:13 <@jesusabdullah> but you might be able to split that algorithm into a separate process
08:13 < thewanderer1> splitting the algorithm part from the state part might work - thanks! I'll look into this.
08:14 <@jesusabdullah> yw. check out dnode
09:06 <@mscdex> node.js rules!
09:08 <@jesusabdullah> woooo
09:58 < Hounddog> Hi, what is the prefered way to excute commands on the commandline from node
09:59 < mmalecki> Hounddog: child_process module
09:59 <@MerlinDMC> Hounddog, maybe some http://nodejs.org/api/child_process.html
09:59 < Hounddog> thx :)
10:02 <@deoxxa> > commandline
10:02 <@deoxxa> > i am not good with computer
10:02 < Hounddog> ?
10:02 < Hounddog> i am just looking at the ls -lh example... can someone tell me why util is required? it is part of the child_process?
10:03 < Hounddog> just wondering cause i don't see it used anywhere else otherwise
10:06 < stagas> Hounddog: probably a left-over, you're right it's not used anywhere, shouldn't be there
10:08 < Hounddog> stagas: thx, was just wondering :)
10:11 < stagas> Hounddog: in node we don't have the situation where you have to manually require a module because it's used by another module. that other module can require for itself what it needs, so if you don't see a reference, it's not used
10:12 < Hounddog> stagas: that's what i though... dependencies should be included in the file that requires them.
10:12 < Hounddog> stagas: but on the other hand it could have been some mistake or leftover why this one is still required
10:15 < stagas> Hounddog: github to the rescue! https://github.com/joyent/node/commit/c6029c75a4636099fc35f2e0b904385dda58eb1f
10:16 < stagas> Hounddog: it used to do util.print instead of console.log
10:16 < Hounddog> ahhh
10:16 < Hounddog> that explains it :)
10:16 < stagas> :P
10:16 < Hounddog> but that is 2 years ago
10:16 < Hounddog> no update on the docs since 2 years then? :p
10:17 < stagas> Hounddog: https://github.com/joyent/node/blame/master/doc/api/child_process.markdown
10:18 < stagas> Hounddog: github's blame is a handy tool for these
10:18 < Hounddog> yeah :)
10:18 < Hounddog> it's nice to point a finger at times :D
10:22 < lhk> hi
10:28 < lhk> i need your help with a strange error. I've set up a very simple nodejs app. It serves just one route and pumps an html file to the user. in this html file ive included a script file which lies in the same directory as server.js and index.html. you can take a look at the files index.html and frontend.js at pastebin. here are the links:
10:28 < lhk> http://pastebin.com/k5KA51bh
10:28 < lhk> http://pastebin.com/ufXbJLuf
10:29 < lhk> the idea is very simple: when the script is executed it changes the text of the paragraph from "jQuery test failed" to "jQuery test passed" but nothing happens
10:30 < lhk> ive even removed the use of jQuery and modified frontend.js to be just one alert statement -> nothing happenend.
10:30 < lhk> it seems like the script file isnt found but i cant figure out how to change that
10:30 < lhk> after all its in the same directory
10:32 < lhk> if i move the script into the html code it is executed. jquery doesnt work but at least the alert pops up.
10:32 < lhk> do you have an idea ?
10:32 < lhk> can you help me ?
10:32 < stagas> lhk: do you have a static file server?
10:33 < lhk> i dont think so. i just installed node, created an http server and pumped the html file to port 4000 on localhost
10:33 < lhk> stagas how would i set one up ?
10:35 < stagas> lhk: you can use the express framework and do app.use(express.static(__dirname))
10:35 < stagas> lhk: that will serve all static files in your script's dir
10:35 < lhk> great
10:35 < lhk> stagas, thank you very much
11:14 < lhk> hi
11:14 < lhk> im having another problem.
11:15 < SomeoneWeird> which is..?
11:17 < lhk> ive just added express and jade to my nodejs app. its a very simple chat program that uses socket.io to communicate between client and server. im using express to serve an html file to the client which includes a javascript that creates a socket.io socket. with the great advice of stagas and the static file server of express the javascript is available. However socket.io cant be used
11:18 < lhk> following the socket.io website i included a script tag with src="/socket.io/socket.io.js" to the html file
11:18 < lhk> in javascript the creation of the socket looks like socket=io.connect "http://localhost"
11:18 < lhk> after that theres an alert statement but this is never executed
11:19 < lhk> can you help me ?
11:19 < RLa> how you handle it on the node
11:19 < lhk> oh, one more thing
11:20 < lhk> socket.io was successfully installed via npm. if i start the server theres a message on the prompt saying: socket.io started
11:25 < astropirate> lhk, high five
11:26 < lhk> astropirate: you got the same problem =
11:26 < lhk> ?
11:26 < astropirate> no. my problems run deeper :( much deeper :(
11:27 < lhk> socket.io too ?
11:27 < astropirate> I prefer the WS module 
11:27 < astropirate> less magic
11:27 < astropirate> i like that
11:28 <@mscdex> overnight productivity! \o/
11:31 < RLa> lhk, can you paste your server-side code somewhere
11:32 < astropirate> mscdex, did you utalize synergy with your cloud based infrustructure utalizing information age globle network of assets?
11:34 <@mscdex> i would never do such a thing!
11:35 <@mscdex> i spent this morning writing a BEEP parser
11:36 < cryptopsy> are tehre still any free node.js hosts in 2012?
11:37 <@mscdex> cryptopsy: nodejitsu.com and nodester.com?
11:37 <@mscdex> there might be others, but those i remember off the top of my head
11:40 < djko> nodejitsu is not free anymore or I miss something?
11:41 <@mscdex> djko: well, their website still has a form to apply for a free account. i don't know over and above that
11:42 < djko> You can also use Heroku
11:43 <@MerlinDMC> djko, there is a free plan ... "Development Sandbox"
11:49 < mmalecki> djko: still free
11:49 < mmalecki> djko: (for some time)
11:54 < cryptopsy> what is scripts.start ?
12:25 < cryptopsy> j #nowjs
12:27 < radiodario> what's nowjs?
12:27 < funktronic> any of y'all use that node-gcm package?
12:34 <@deoxxa> is there any Procfile-like functionality for forever?
12:34 <@deoxxa> mmalecki: you're listed as a contributor, so i'll poke you
12:39 < mmalecki> deoxxa: sup?
12:39 < mmalecki> deoxxa: what does Procfile do?
12:39 < mmalecki> is that the heroku thing?
12:39 <@deoxxa> basically you specify the "processes" that your application uses
12:39 <@deoxxa> yeah
12:39 <@deoxxa> then they're started and kept running
12:40 < lrojas> hi all
12:40 < mmalecki> hm, no, we don't support that. I think it'd be cool as a seperate module tho
12:40 <@deoxxa> hrrm, ok
12:40 <@deoxxa> should be simple enough to put together
12:41 < mmalecki> yup :). just spawn forever binary
12:41 < mmalecki> ping me if you need any help
12:41 <@deoxxa> will do, thanks!
12:41 <@deoxxa> hooray programming!
12:41 < mmalecki> I can mention it in README for forever too
12:41 <@deoxxa> that'd be neat
12:43 < lrojas> I'm trying to wrap my head around Node.js, is node.js equivalent to Apache or it's it more like Django, Rails ? also, if i understand correctly, it does not have a database engine, so could i run it against MySQL, PostgreSQL or even better, CouchDB, MongoDB ?
12:44 <@deoxxa> lrojas: node.js can be more easily compared to something like .NET - it's a framework that provides a set of libraries and functionality on top of a separate runtime
12:45 <@deoxxa> lrojas: that runtime, in node's case, is the v8 javascript engine (the very same on that runs in chrome)
12:46 < lrojas> deoxxa: hmm
12:46 < lrojas> deoxxa: so, are there "frameworks" like rails for it?
12:46 <@deoxxa> indeed there are
12:47 <@deoxxa> the most commonly used framework (as far as i can tell) is express (http://expressjs.com/) - but there's plenty of options and some are more suited to specific tasks than others
12:48 < lrojas> lets say i want to learn node.js, and i have a small project ( contact manager ), that i want to use MongoDB as a storage engine, how would i even begin a project like that?
12:49 <@deoxxa> well, the docs are quite good - http://nodejs.org/docs/latest/api/all.html
12:50 <@deoxxa> if you're coming from the very start though, you might want to take a look at some exising (small) projects
12:51 < Hoppertje> does this room allow beginner js/node.js questions ?
12:52 < lrojas> deoxxa: ok, hmm.. what i mean is, if i got asked that very same question for Rails, i would have said, you need to configure passanger on apache, install ruby using rvm, install the rails gem, install the MongoDB stuff, and create a new rails project with rake.. something like that...
12:52 <@deoxxa> lrojas: ah, in that case, you'll want to download the node.js package for your platform - what operating system are you running?
12:52 < lrojas> deoxxa: not disregarding your answer, just trying to figure out how would the workflow be
12:53 < lrojas> Mac OS X
12:53 < lrojas> Lion
12:53 <@deoxxa> excellent, you'll want to install this bad boy: http://nodejs.org/dist/v0.8.4/node-v0.8.4.pkg
12:53 <@deoxxa> then you'll have the "node" and "npm" commands available to you
12:54 <@deoxxa> "npm" is the package manager node uses, and will be your new best friend
12:54 < lrojas> ok, so far so good...
12:54 < lrojas> installed
12:55 <@mscdex> Hoppertje: sure
12:55 <@deoxxa> the documentation for express is also top-notch: http://expressjs.com/guide.html
12:55 < lrojas> so far, if i am following you... i can write a server in node, but not necesarily?
12:56 <@deoxxa> exactly
12:56 <@deoxxa> writing http servers is, by and large, the most common use of node that i've seen
12:56 <@deoxxa> and it's a great way to get started with it because we all know how an http server is supposed to behave
12:56 < lrojas> because node is a language/framework like .net, so if i decide not to write a server, how do i "serve" an app written in node?
12:57 <@deoxxa> you run it with the node binary
12:57 <@deoxxa> $ node my-application.js
12:58 < lrojas> jesus, i think i am getting old, my brain is having a hard time wraping itself around this idea
12:58 <@deoxxa> it's a bit of a shock, most people are used to javascript being "that thing that makes my browser hang sometimes"
12:59 <@richardshaw> lrojas: you could plonk it in a framework that does most of the lifting for you
12:59 <@deoxxa> but once you strip off that ugly web browser, javascript is pretty nice to work with :P
13:00 < AviMarcus> ops please.
13:01 < lrojas> so if i am following along, instead of developing my app in python/django or ruby/rails, i would write it in JavaScript, then instead of creating a virtual host in apache and setting up some sort of "enviroment" i would write a server in javascript also and serve the application from there?
13:02 < christopherdb> or it could all be in one file myapp.js
13:02 < lrojas> aha, i think i am starting to "see"
13:03 < lrojas> so, to make my life easier while i learm i should think about this as node/express in the same way i think about ruby/rails
13:04 < christopherdb> yeah you could
13:04 < lrojas> that still leaves the mongoDB part to figure out... does express has "conectors" to integrate with MongoDb ?
13:04 <@deoxxa> well, there are a bunch of different mongodb libraries
13:05 < christopherdb> you would connect to a mongodb instance either by opening an http:// connection  + port  or localhost::::port
13:05 <@deoxxa> personally i use mongoskin, but i hear people saying good things about mongolian and mongoose
13:05 <@deoxxa> christopherdb: wat
13:05 < christopherdb> via a library, depending on your preference, i use mongoose
13:07 < christopherdb> a mongo db instance would be running either locally or remotely and listening on  a port, and you would make requests to said port
13:08 < lrojas> ok
13:11 <@AviMarcus> lrojas, express really only handle the HTTP, cookies, incoming POST/GET info (afaik) and not the DB connections. That's just generic node
13:12 < lrojas> AviMarcus: so, i need to "require" the MongoDB library
13:12 <@AviMarcus> yep. I'm sure there's several each with their own API to let you communicate.
13:12 <@AviMarcus> e.g. there's flatiron's "resourceful" which is an ODM that can write to mongoose, I think.
13:13 <@AviMarcus> I'm finding it a little overwhelming that for most common tasks, there's 3-4 major projects that all do nearly the same thing
13:14 <@AviMarcus> there's at least 3 ORMs for standard SQL. Tons of web frameworks.. although most are built on top of express. 
13:15 <@AviMarcus> wb owner
13:15 < Owner> hi
13:15 < recidive> hello guys, I'm having problem with connect-auth/facebook on IE, when I call request.authenticate() it hangs if inside Facebook canvas (iframe) but works as standalone. It looks something related to P3P, I tried setting some P3P headers before calling request.authenticate() with no luck
13:23 < broofa> Tips for discovering the "best" module for a certain task?  E.g. I'm trying to find a module for outputting (colorized) Common Log Format server logs and not having much luck with search.npmjs.org
13:24 < broofa> (oh, and "best" = "most depended on", for lack of a better definition I guess)
13:24 < recidive> got this to work :)
13:26 < astropirate> broofa, a fight to the death never fails
13:38 < Yanush> Hi, is it ok to ask a question here ? (albeit paradoxical sentence, but meh)
13:39 <@Niloc> Questions?! Are you mad?!
13:40 <@Niloc> Of course it's ok Yanush :)
13:41 < Yanush> I'm trying to deploy a node.js worker role to azure, on my machine using a normal node process everything works fine, but on the emulator or on a real azure vm I get this error about forking (which I do in my code):
13:41 < Yanush> pawn EBADF     at errnoException (child_process.js:837:11)     at ChildProcess.spawn (child_process.js:789:11)     at exports.spawn (child_process.js:614:9)     at exports.fork (child_process.js:443:10)     at new Worker (cluster.js:288:20)     at Cluster.cluster.fork (cluster.js:474:11) 
13:41 < Yanush> *spawn EBADF
13:41 < Yanush> anyone knows whats up ?
13:44 <@deoxxa> mmalecki: can i identify a process started with forever? i.e. `forever -uid xxxx script.js'?
13:44 <@jroes> anyone know why my npm install might be hanging?
13:45 < vascop> Hey #node.js is there an easy way to downgrade node?
13:45 < mmalecki> deoxxa: forever start --uid xxx script.js should work
13:45 <@jroes> ok, seems to be good now
13:45 <@deoxxa> oh
13:45 <@deoxxa> that's a thing?
13:45 <@deoxxa> because i totally just made that up
13:46 <@deoxxa> well there we go
13:46 <@deoxxa> it works
13:46  * deoxxa amazed
13:47 < mmalecki> deoxxa: :)
13:47 <@deoxxa> \o/
13:52 < Yanush> So.... anyone got a clue about that "spawn EBADF* error I mentioned above?
14:03 < EricBlade> hey guys .. say i'm writing something that is intended to communicate with something on the internet, via a persistent socket connection.  what do i need to know to actually keep this running, say until the socket disconnects, rather than just ending once the end of code is reached?
14:13 <@AviMarcus> EricBlade, some sort of listener
14:13 <@AviMarcus> for that persistent connection. or make sure it's actually open.
14:14 <@AviMarcus> usually I have to get my connection code to quit, not to stay open :)
14:26 <@qbit> always use "#!/usr/bin/env bash"!
14:28 < EricBlade> AviMarcus: so, if the connection is still open, it should just stay open?  i guess that means i'm getting hung up on somewhere.
14:33 < caasiHuang> trying nodejitsu, the cli says ok but the web console says error, any hints?
14:34 < felixge> is there a npm module that let's me listen for keydown / keyup events in the terminal?
14:34 < mmalecki> caasiHuang: hey, please join #nodejitsu, we'll help you out
14:35 < caasiHuang> okay
14:52 < zackiv31> is there a way to create a ReadStream http://nodejs.org/api/stream.html#stream_readable_stream from a variable, or do I have to write it to disk first?
14:55 < ding> Looking for advice about implementing a daemon that runs as root, but that is capable of invoking scripts as other UIDs and feeding data to them via STDIN. I believe if I drop privileges with setuid(), I can't regain them back right?
14:56 < ding> Should I fork, and then drop privileges?
14:56 <@AviMarcus> ding, you can do var exec = require('child_process').exec; which can execute any shell command , including one that changes the user
14:57 <@AviMarcus> I'd presume if it would do so, it would be in effect for just that thread
14:57 <@AviMarcus> start-stop-daemon or whatever, I think.
14:58 < coderarity> ops plz
14:58 < vicapow> stupid question. how to i see all possible versions of an npm module?
14:59 <@AviMarcus> stupid answer, but you can look it up on npm's site
14:59 <@AviMarcus> dunno if you can use "npm" to get that info
15:00 <@coderarity> vicapow, npm view <module> versions
15:00 < ding> AviMarcus, I've try invoking the script with "su", but then I can't write to it's STDIN anymore...
15:00 < vicapow> coderarity: thank you! for whatever reason, it was hard to google
15:01 <@AviMarcus> ding, tried start-stop-daemon ? that's what many init scripts use
15:01 < ding> AviMarcus, and doesn't exec() replace the current process?
15:01 <@jcrew> ding: how do you plan on writing to stdin for a daemon?
15:01 <@AviMarcus> I don't think so, I used it to run an ssh.. "tail | grep" and return the info
15:02 <@AviMarcus> it's so darn crude but it works :P
15:02 < ding> jcrew: I'd like for the daemon to write to the subprocess's stdin
15:03 < ding> AviMarcus, I think start-stop-daemon is used more to establish what user the daemon runs as, but in this case, the daemon needs to switch identities based on what's happening at runtime
15:03 <@AviMarcus> I'm not quite sure of your use case. You have a root node.js thread and you want it to .. what? launch new node.js threads as a different user?
15:04 < ding> AviMarcus, I think many email MTAs do this when they accept messages. They switch user identity to drop the message in the user's spool or inbox....
15:04 < ding> AviMarcus, yes. I think that describes it, but didn't think node supported threads...
15:06 <@AviMarcus> well. there's the new cluster mod with message passing but it's not so stable
15:07 <@AviMarcus> but anyway you can spawn stuff with those .exec things
15:08 < ding> AviMarcus, I'm going to try that. Thanks. I think if I exec, or maybe fork, then I can drop privileges in the child. THe parent could keep running as root...
15:09 < Owner> javascript scoping has stumped me
15:09 < Owner> i thought i knew what i was doing
15:09 < tuhoojabotti> Hehe, closures<3
15:11 < totallymike> Owner: look at Addy Osmani's book Learning JavaScript Design Patterns
15:11 < totallymike> http://addyosmani.com/resources/essentialjsdesignpatterns/book/
15:11 < bradgignac> totallymike: +1000
15:11 < totallymike> It's doesn't necessarily have a basic explanation of scope, but it has a lot of excellent use cases for you to examine.
15:12 < Owner> thanks http://www.printfriendly.com/print/v2?url=http%3A%2F%2Faddyosmani.com%2Fresources%2Fessentialjsdesignpatterns%2Fbook%2F#
15:12 < Hounddog> var spawn = require('child_process').spawn, browser = spawn('iceweasel'), this should allready spawn a browser isntance or?
15:14 < totallymike> Owner: I didn't know about that web page.  That's nice.
15:14 < totallymike> However if you want a print copy, it might be nice to actually buy it.
15:14 < totallymike> O'Reilly publishes it.
15:14 < Owner> i dont buy books :p
15:15 < totallymike> I try to buy things when I want to support a product.
15:17 < mino1> hi guys :). i'm new to coffeescript/javascript/node.js and want to iterate over a list with dicts in it, how does the for loop have to look? http://paste.ofcode.org/gepKuXamacgE9muKufbz6V
15:17 <@jcrew> mino1: for log in logs
15:18 < mino1> jcrew: thanks ... i read somewhere for x of xs
15:25 < jmorris> i'm using nodemon and mocha --watch, when a file changes mocha detects it super fast, but nodemon takesa  min, is there a way to have nodemon run tests after, or to delay mocha?
15:38 < jayke> hey
15:39 < jayke> anyone online?
15:39 < totallymike> jayke: We're all offline at the moment.  But if you have a question you may simply ask it and if someone returns they will answer it to the best of their knowledge.
15:40 < jayke> oh ok
15:40 < jayke> its about javascript
15:40 < jayke> i have an object
15:40 < jayke> shows perfectly if i console.log it
15:40 < jayke> but there is just one value i want to get
15:40 < jayke> ".user"
15:40 < jayke> returns undefinet
15:40 < jayke> while all the others return their value
15:41 < jetienne> try in a single line, it make it easier to read. and answer
15:41 <@AviMarcus> and, pastebin some code. or fiddle it.
15:41 < jayke> k, one sec
15:42 < jayke> well is not about the "code", ill paste the object example
15:42 < jayke> there it is
15:42 < jayke> http://pastebin.com/j977Khe9
15:43 < jayke> how come if i call the object.user returns undefined
15:43 <@AviMarcus> you called myObject.user ?
15:43 < totallymike> jayke: paste your full code
15:43 < totallymike> please
15:44 < totallymike> All I see here is an anonymous declaration of an object and then an attempt to call something called "user"
15:46 < jayke> this is the function that works with the object, there is no other code affecting it http://pastebin.com/FHK2Nir6
15:49 <@AviMarcus> jayke, can you get any other data out of it?
15:49 < jayke> yep, all of it
15:49 < jayke> except the user field
15:49 < Shiva> Hello Room
15:49 <@AviMarcus> I can't paste it into the command line. I think it's chocking on the _id field.
15:49 < Shiva> i am new to node js and cucumber js
15:49 < prettyrobots> tjholowaychuk: I've been reading your code and I see you don't relgiously hasOwnProperty.
15:49 < Shiva> i need some help 
15:49 < totallymike> This probably doesn't make any sense, but have you tried console.log(doc['user']) ?
15:49 <@AviMarcus> choking*
15:50 < Shiva> please let me know if any one can help in this area
15:50 < prettyrobots> tjholowaychuk: I would like to hear your opinion on that matter. Not trolling.
15:50 < tjholowaychuk> prettyrobots i avoid it like the plague i think it's codesmell
15:50 < jayke> totallymike ill try it now
15:50 < tjholowaychuk> (in most cases)
15:50 < prettyrobots> tjholowaychuk: Good. I was hoping you'd have a strong opinion.
15:50 < Shiva> Any one to help me on nodejs and cucumber js installation
15:50 < totallymike> You don't meet many node devs without strong opinions.
15:51 < totallymike> Shiva nobody here can help you if you don't ask questions.
15:51 < jayke> nope, not working
15:51 < jayke> i dont get it
15:51 < totallymike> A shot in the dark, destined to fail.
15:51 < jayke> god, how? lol, the object returns just fine
15:51 <@AviMarcus> jayke, you can get _id out of it? it's supposed to be quoted in an object printing, i'd have thought.
15:51 < prettyrobots> tjholowaychuk: Crockford disagrees, though. Again, not trolling, but want to know why you don't think it is necesssary to:   It is wise to program defensively by using the hasOwnProperty method to distinguish the true members of the object:
15:52 < Shiva> which version of Node js has the npm with cucumber.. i am not able to find any version with cucumber. Even if i ad the dependency and do npm update i am seeing UNMET DEPENDENCY cucumber.. Please help me
15:52 < tjholowaychuk> who gives a shit about crock
15:52 < totallymike> prettyrobots: It makes sense if you slap a bunch of extra crap into the prototypes of objects, especially arrays
15:52 < tjholowaychuk> yeah
15:52 < totallymike> but if you do that YOU need to be slapped
15:52 < tjholowaychuk> dont mess with protos
15:52 < prettyrobots> tjholowaychuk: A lot of people. Beleive, I understand the sentiment, but I'm wonering if anyone.
15:52 < Shiva> which version of Node js has the npm with cucumber.. i am not able to find any version with cucumber. Even if i ad the dependency and do npm update i am seeing UNMET DEPENDENCY cucumber..
15:52 < tjholowaychuk> objects are not good hashes anyway
15:52 < prettyrobots> Don't mess with Prototos.
15:53 < jayke> AviMarcus about that, i also can get it
15:53 < jayke> the _id
15:53 < prettyrobots> tjholowaychuk: Use use them as such in Connect, don't you?
15:53 < totallymike> Shiva look at the package.json
15:53 < jayke> and also the socketid value that is in brackets
15:53 < tjholowaychuk> prettyrobots well we have no choice in js right now really
15:53 < prettyrobots> tjholowaychuk:  Oh, okay. I see what you're saying.
15:53 < tjholowaychuk> a hash should have no baggage like that, you can do Object.create(null) etc and get close but yeah
15:53 < totallymike> Crockford's useful parts is a good book, but he's burning his bridges pretty hard.
15:54 < tjholowaychuk> he should start writing js
15:54 < tjholowaychuk> instead of talking about it
15:54 < tjholowaychuk> then people might care
15:54 < totallymike> er good parts
15:54 < prettyrobots> Yeah. He has a lot of influence. 
15:54 < totallymike> He's on the ECMA board, if memory serves.
15:54 < jayke> :(, is there other ways to acces an object value
15:54 < Shiva> i did look in to package.jspn but it doesnt have cucumber in it. So i added myself cucumber under dependency.. now i can see that in the npm list but with UNMET Dependecy status.. So i updated my npm with npm update but no luck it still says the same
15:54 < Shiva> i did look in to package.jspn but it doesnt have cucumber in it. So i added myself cucumber under dependency.. now i can see that in the npm list but with UNMET Dependecy status.. So i updated my npm with npm update but no luck it still says the same
15:54 < totallymike> my goodness
15:55 < blazes816> that's a hell of a stutter
15:55 < jayke> wait wait wait, i see one thing
15:55 < prettyrobots> I'm glad he doens't have it here, though. The Java world was full of people following useless grammar rules for superficial reasons.
15:55 < totallymike> Shiva just pastebin where and how the error appears.
15:55 < timoxley> Shiva what version of node/npm are you running?
15:55 < Shiva> i am trying a new version i will post in a min
15:55 < jayke> YEAH!
15:55 < jayke> WOHO
15:55 < jayke> YEAH
15:55 < jayke> all good now, thanks anyways
15:55 < timoxley> Shiva you need to run npm install, not npm update
15:56 < jayke> the object was wrong in mongoose
15:56 < totallymike> jayke: what'd you do?
15:56 < totallymike> ah hah
15:56 < jayke> yeah, 2 different declarations of the object
15:56 < jayke> was mixing all stuff
15:56 < jayke> thanks anyways!
15:56 < totallymike> Apparently the semi-colon stuff will bite Opera users in the ass occasionally.
15:56 < Shiva> mike my node -v tells v0.8.0 and npm -v tells 1.1.32
15:56 < prettyrobots> tjholowaychuk: So, HOP is to defend against people patching Array prototypes, maybe Object prototype, which is a bad practice and you shoud just fix or get rid of the code that does than, instead of HOPping all over the place.
15:56 < Shiva> mike my node -v tells v0.8.0 and npm -v tells 1.1.32
15:57 < totallymike> goodness shiva we see it the first time
15:57 < tjholowaychuk> prettyrobots you dont need that for arrays if you're looping properly etc
15:57 < tjholowaychuk> objects yeah but just dont extend Object.prototype
15:57 < Shiva> any suggestion?
15:57 < totallymike> correct.  HOP is only really useful for for (x in y) structures
15:58 < timoxley> Shiva run: npm install --save cucumber
15:58 < Shiva> ok
15:58 < prettyrobots> tjholowaychuk: You're right about arrays. Really just trying to debung this, what is it, it's like a rain dance people do in their code.
15:58 < prettyrobots> debunk
15:58 < totallymike> prettyrobots: it's important if you mess with your prototypes, or are trying to iterate over an object which maybe you didn't create or came out of a constructor somewhere
15:58 < timoxley> prettyrobots i have never, ever had a single issue with looping over something I didn't want to.
15:59 < totallymike> But I don't believe you need to do it unless not doing it causes a problem.
15:59 < Shiva> mike here is the trace
15:59 < Shiva> $ npm install --save cucumber npm http GET https://registry.npmjs.org/cucumber npm ERR! Error: connect ENETUNREACH npm ERR!     at errnoException (net.js:781:11) npm ERR!     at Object.afterConnect [as oncomplete] (net.js:772:19) npm ERR!  { [Error: connect ENETUNREACH] code: 'ENETUNREACH', errno: 'ENETUNREACH', syscall: 'connect' } npm ERR! You may report this log at: npm ERR!     <http://github.com/isaacs/npm/issues> npm ERR! or em
15:59 < totallymike> pastebin my friend pastebin
15:59 < tjholowaychuk> it's easy to avoid if you avoid certain features
15:59 < tjholowaychuk> just sidestep your way around the bad things in js
15:59 < timoxley> Shiva sounds like you have some kind of network issue
16:00 < prettyrobots> FYI:  totallymike said It makes sense if you slap a bunch of extra crap into the prototypes of objects, especially arrays
16:00 < Shiva> i added my proxy to the environment
16:01 < prettyrobots> Which is why I mentioned arrays.I do know not ot for in over arrays. Just so you know.
16:01 < totallymike> Yeah I talk out of my ass.  I haven't actually programmed in JS in like two months.
16:02 < prettyrobots> totallymike: I'm not accusing anyone. I just want to let people know I'm not a newbie. It is hard to talk with people when they think you're a noob.
16:02 < totallymike> What would you be accusing people of?  I'm just letting you know not to take me seriously unless something I say happens to make sense ;)
16:03 < prettyrobots> tjholowaychuk: I belive the HOP advice comes from a corporate programming environment where everyone is in a cube defending themselves from the guy in the next cube.
16:03 < prettyrobots> You don't have control over the code.
16:03 <@arcatan> what's HOP?
16:03 < totallymike> If you're delving into HOP then you're either experienced or a studious newb.  Either way your opinion is valid and good and your questions matter.
16:03 < timoxley> that's probably pretty accurate
16:03 < tjholowaychuk> haha yeah
16:04 < totallymike> object.hasOwnProperty
16:04 < totallymike> arcatan: 
16:04 < tjholowaychuk> personally i try to avoid defensive programming within reason
16:04 < totallymike> k bye
16:04 < prettyrobots> totallymike: Cool. IRC can set the wrong tone.
16:04 < totallymike> no doubt
16:04 <@arcatan> ah
16:04 < prettyrobots> tjholowaychuk: I don't worry about it because when I do, my code is soooo ugly.
16:05 < prettyrobots> I'm glad it's nothing I'll get trolled about in the node community.
16:05 < yanush> Gonna try my luck again, since so far I haven't found a solution. Anyone here ran into an error from cluster.fork() spawn EBADF
16:05 < yanush> Code works well on local node process but fails in azure emulator or on azure real vm
16:05 < timoxley> prettyrobots decent set of tests more important than defensive programming imo
16:05 < totallymike> prettyrobots: on the one hand you've got isaacs stoutly defending semi-colons, and on the other you've got felix defenestrating them, so don't worry about it.
16:06 < prettyrobots> timoxley: Agreed.
16:06 < prettyrobots> And readability.
16:07 < prettyrobots> Thnaks everybody. I appreciate taking the time to cover what must be old ground.
16:07 < totallymike> only swap felix/isaacs
16:07 < totallymike> derp
16:07 < totallymike> I enjoyed the discussion.
16:09 < RLa> hey timoxley, i finally deployed our data sync code, works fine so far!
16:09 < timoxley> RLa nice
16:09 < prettyrobots> tjholowaychuk: Where's a good place to discuss your component management post?
16:09 < tjholowaychuk> prettyrobots i dont know
16:09 < prettyrobots> Oh, well: +1 GitHub.
16:09 < tjholowaychuk> i put a wiki up but i'll start hacking on some new stuff in a few days
16:10 < prettyrobots> GitHub has downloads that can be used for hosting, or you could create tags to create the zips.
16:10 < tjholowaychuk> yeah
16:10 < tjholowaychuk> the zips are slow though
16:10 < tjholowaychuk> i think i have an alternative
16:10 < tjholowaychuk> that is much faster
16:10 < timoxley> RLa where/how did you hook in the dirty marking code?
16:11 < prettyrobots> tjholowaychuk: An alternative to hosting on GitHub? Or an alternative within GitHub?
16:11 < RLa> timoxley, database triggers, it's sqlite on client and mysql on server
16:11 < tjholowaychuk> prettyrobots within github
16:11 < timoxley> ahh that's right
16:11 < prettyrobots> GitHub:Pages? Those are fast.
16:11 < RLa> timoxley, and rows are marked dirty using natural keys
16:12 < timoxley> RLa yep, good stuff.
16:12 < RLa> those keys are also used when writing incoming changes
16:12 < tjholowaychuk> prettyrobots timing it against volo right now
16:12 < tjholowaychuk> from starbucks
16:12 < tjholowaychuk> haha
16:13 < tjholowaychuk> volo is still truckin..
16:13 < prettyrobots> volo?
16:13 < RLa> using INSERT ... ON DUPLICATE KEY UPDATE on mysql and INSERT OR IGNORE following UPDATE on sqlite to write changes
16:13 < tjholowaychuk> prettyrobots volo uses github tarballs
16:14 < tjholowaychuk> it's still going
16:14 < prettyrobots> Oh, okay.
16:14 < tjholowaychuk> ok, volo from starbucks: real	1m30.789s
16:15 < tjholowaychuk> my thing real	0m11.371s
16:15 < prettyrobots> You're secret thing.
16:15 < prettyrobots> Oh, my. That is a typo!
16:15 < prettyrobots> Your.
16:15 < tjholowaychuk> english ftw
16:17 < prettyrobots> tjholowaychuk: As long as we get the GitHub namespacing.
16:17 < prettyrobots> tjholowaychuk: I really want sally/datepicker over steve/datepicker.
16:17 < tjholowaychuk> prettyrobots yeah of course
16:18 < prettyrobots> The flat namespace and the namespace gold rush always made me a sad panda.
16:18 < tjholowaychuk> haha yeah it's fun until your names make no sense
16:18 < tjholowaychuk> node-cheeseburger
16:18 < prettyrobots> And in client side dev, with even smaller components, it would get worse.
16:19 < adamramadhan> wow everyone is here this night :|
16:19 < adamramadhan> anyway i want to make a forever looping for a crawrler is it good to use event emiter to do the job? is there any links that i can read to start?
16:20 < prettyrobots> tjholowaychuk: An old blog, with a broken/unfinished template.
16:20 < adamramadhan> like run function grab() if done send event emitor done and run grab() again
16:20 < prettyrobots> tjholowaychuk: But, not bad writing on GitHub namespacing.
16:20 < prettyrobots> tjholowaychuk: http://kiloblog.com/post/sharing-code-for-what-its-worth/
16:20 < tjholowaychuk> i remember when you could install gems
16:20 < tjholowaychuk> like
16:21 < tjholowaychuk> github.com/net/ssh
16:21 < tjholowaychuk> and override stdlib's
16:21 < tjholowaychuk> but yeah it makes it very clear where a package came from which is really nice
16:22 <@flexd> Hm, I am doing something exceptionally stupid here I think.
16:22 -!- gkatsev changed the topic of #Node.js to: (node.js) O o . `^nn~
16:22 < prettyrobots> tjholowaychuk: It also makes it easier to just code, if you don't have to go thorugh a naming event.
16:23 <@flexd> Good I am the only one using this.. oh wait, I published this on npm :(
16:23 < tjholowaychuk> prettyrobots it is somewhat annoying to have for example
16:23 < tjholowaychuk> say visionmedia/node-foo-bar, requiring to explicitly use that same name as a require
16:24 < tjholowaychuk> when you want "foo-bar" or just "visionmedia/foo-bar" it kind of forces you to not namespace on github
16:24 < tjholowaychuk> per env but meh
16:24 < tjholowaychuk> small gripe
16:25 < prettyrobots> tjholowaychuk: It never occurred to me that this is a problem. I'm not coming from Ruby, so I'm not expecting one word include handles.
16:25 <@flexd> Uh random question: I am making something that interfaces with a JSONRPC2 compliant API, this stupid thing is returning a 200 OK but content-length of 0, does it make sense for me to generate an error for that? Or just return a empty result? :/
16:25 < tjholowaychuk> no i mean in ruby you used to be able to override stdlib modules
16:25 < tjholowaychuk> if you name your github user/repo right
16:26 <@flexd> Actually, screw it. I am going to handle every imagineable error first, and if it passes through all those I can return something
16:27 < prettyrobots> tjholowaychuk: Okay. I see what you're saying.
16:28 < prettyrobots> prettyrobots: I'm pretty excitied to have a package manager that let's me propigate my GitHub namespace.
16:28 <@scott_gonzalez> Should I be listening for error events when reading from stdin?
16:28 < yanush> guys, sorry for spamming this but does anyone have a clue as to why I can't fork on azure vm / azure emulator ?
16:28 < prettyrobots> Oops. Talking to myself.
16:28 < yanush> getting an error spawn EBADF
16:29 < prettyrobots> tjholowaychuk: You're talking about being able to override a system default. That is a feature of the mysterious package manager?
16:29 < tjholowaychuk> prettyrobots you can't now AFAIK but it was just how gem(1) worked back in the day
16:29 < tjholowaychuk> i cant remember exactly
16:30 < epic720> Anyone catch the article by Eran Hammer, formerly of OAuth, talking about how huge of a failure 2.0 is?
16:30 < blazes816> you mean ruby gems, yeah gems themselves can override core language features.
16:30 < blazes816> have to be careful
16:31 < Nasga> why json is unable to serialize my array ? => http://pastebin.com/KMd7G24g
16:31 < timoxley> Nasga  books['book1']
16:32 < timoxley> is all wrong
16:32 < timoxley> Nasga arrays = only numeric indices
16:32 <@flexd> wat.
16:32 <@flexd> Damnit, this is retarded. Why do I get a empty response if the method does not exist? I should at least get something :(
16:33 < Nasga> timoxley: :/ then i'm #@!ed to search a key into ?
16:33 < timoxley> Nasga, either create a map via {}
16:33 < epic720> anyone here using OAuth 2.0?
16:33 < epic720> or auth.js?
16:33 <@ljharb> Nasga: php is the only language where hashes are also called "arrays"
16:33 < timoxley> Nasga or embed the book name in the array
16:34 < Nasga> ljharb: i have to port a big part of php code to nodejs :p
16:35 < timoxley> ljharb interesting how php does that. it's a regular array until you start putting string keys in there, then it converts it to a kind of hybrid hash/array
16:35 < prettyrobots> tjholowaychuk: Let me know if you're open to collaboration. I liked what I read. I'd like to learn more about how to collaborate with other noders.
16:35 < tjholowaychuk> prettyrobots sounds good i'll let you know when i have a prototype
16:35 < epic720> prettyrobots: i am also looking to collab on my projects.
16:36 < epic720> and feedback at the very least
16:38 < Nasga> timoxley: thx for advises, i will try to use full object code
16:38 < timoxley> Nasga you should use an array
16:38 < timoxley> Nasga easier to deal with the collection
16:39 < timoxley> e.g. sorting, map/reduce, slice, etc
16:39 <@ljharb> Nasga: the important thing is that unlike PHP, arrays only have numeric integer keys. for any other kind of key, use an object {}
16:40 <@AviMarcus> you can use npm traverse for doing map,reduce, filter with objects.
16:40 < owen1> i have a website in rails thath should allow 30MB csv uploads. does it make sense to have a node service that listen to tmp folder and process the csv (inserting some stuff to db, etc)?
16:40 <@ljharb> or Object.keys(foo).map etc. no need for a whole module for that.
16:41 <@AviMarcus> it's native? hmph, how did I miss that.
16:41 <@AviMarcus> ljharb, can you link to docs on that? I had googled several times.
16:41 < timoxley> AviMarcus https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys
16:41 <@ljharb> https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys
16:42 <@ljharb> ha
16:42 < bluesmoon> where can I see the docs for older versions of node?
16:42 <@AviMarcus> :) thx
16:42 < timoxley> AviMarcus mdn is unofficial JS manual
16:42 < Nasga> really nice, i will try all this stuff tomorrow, thx all
16:43 <@AviMarcus> Object.keys(myObj) returns an array of the keys.. so can't use that for filter.  but can do a forEach on that
16:43 <@AviMarcus> oh map is the same as forEach?
16:43  * AviMarcus soo needs to finish reading coding books.
16:45 <@ljharb> AviMarcus: map, forEach, reduce, some, every, filter. there's lots of ES5 array functions.
16:45 <@AviMarcus> some, every? 
16:45  * AviMarcus looks those up
16:45 <@AviMarcus> oh. cool.
16:46 <@ljharb> some runs until the iterator returns false. every runs until it returns true.
16:46 <@ljharb> oh wait, other way around
16:47 < retrobaby> so they are basically all mapping functions with some added functionality
16:47 < mikeywaites> hey guys, anyone an everyauth wizard or know if they have an irc channel?
16:48 <@AviMarcus> well not really, because map returns an array. there others often return a string or bool
16:48 < retrobaby> reduce?
16:48 < Domenic> reduce is most general
16:48 < Domenic> Meaning, you can build all others from reduce
16:48 < retrobaby> yeah
16:48 < retrobaby> ^ 
16:48 <@ljharb> reduce passes a single value through each item. could be an object, array, string, bool, whatever.
16:49 < retrobaby> and returns an object of a different type.
16:49 < retrobaby> arent array, strings objects as well?
16:49 < retrobaby> bool is not boxed in JS by befault i think
16:51 < Domenic> arrays are objects; strings are not
16:51 < Domenic> typeof myArray === "object"; typeof myString === "string"
16:51 < yawnt> strings and arrays are objects too
16:51 < Domenic> (Although the real answer involves the spec)
16:51 < Domenic> Sigh time to break out the spec
16:52 < retrobaby> well strings are not, but u can box it as an instace of 'String'
16:52 < yawnt> so they are
16:52 < yawnt> D:
16:52 <+Niloc> typeof null === 'object', yet null isn't an object. Please don't cite typeof as a source for that ;)
16:52 < Domenic> http://es5.github.com/#x8
16:52 < bluesmoon> nevermind, found them
16:52 <+Niloc> typeof is just broken.
16:52 <@ljharb> Domenic: Array.isArray(myArray)
16:52 < Domenic> Yeah that's why I said the real answer involves the spec, instead of typeof. But it's a reasonable indicator.
16:53 <+Niloc> no it's not
16:53 <+Niloc> that's the pount
16:53 <+Niloc> point*
16:53 <@ljharb> actually the real answer involves Object.prototype.toString
16:53 < Domenic> No that only gives a ... thing's ... [[Class]]
16:53 <@ljharb> but you can rely on typeof as long as its not "object"
16:53 < retrobaby> typeof is a lame way to determine type, instead use the objecy's contructor property.
16:54 < Domenic> JavaScript has the following types: Undefined, Null, Boolean, String, Number, Object
16:54 <@ljharb> Domenic: Object.prototype.toString.call(function () {}) === '[object Function]'
16:54 < Domenic> Function is not a type
16:54 < Domenic> It's a [[Class]]
16:54 < Domenic> (Or [[NativeBrand]] in ES6 drafts)
16:54 < retrobaby> Domenic: i disagree with you there.
16:54 < Domenic> Read the spec guys
16:54 < retrobaby> objects are simple hashables
16:54 <@ljharb> functions are callable. objects aren't.
16:54 < retrobaby> instance of Object
16:54 < Domenic> Functions are callable objects
16:55 < Domenic> That is actually the definition of function
16:55 < Domenic> http://es5.github.com/#x4.3.24
16:55 < retrobaby> functions are an instance of Function
16:55 < Domenic> Yes functions have Function in their prototype chain
16:55 < Domenic> That doesn't say anything about their Type
16:55 < Domenic> "member of the Object type that is an instance of the standard built-in Function constructor and that may be invoked as a subroutine."
16:56 <+Niloc> ljharb: any object /could/ be made callable, it's not necessarily exclusive to Functions.
16:57 <@ljharb> Niloc: not without modifying the spec
16:57 < Domenic> Within the bounds of the languages current capabilities, only functions can be callable
16:57 <+Niloc> ljharb: naturally…
16:57 <@ljharb> then it couldn't be for the sake of any practical discussion.
16:57 <@ljharb> obviously you could make anything callable if you can change the language but thats a stupid thing to point out.
16:59 <+Niloc> The point is that [[Callable] is not a trait inherent to Functions. It's just that only Functions currently get it. But whatever :p
16:59 <@ljharb> that by definition makes it a trait only inherent to functions
16:59 < retrobaby> ok so you are saying that the built-in objects cannot be considered as a type?
16:59 <+Niloc> No.
16:59 < retrobaby> Domenic: ^
17:00 < Domenic> No, the only types are Undefined, Null, Boolean, String, Number, and Object. All the built-in objects in the spec are of type Object.
17:08 < epic720> anyone here using OAuth 2.0?
17:08 < Domenic> epic720: our team is
17:09 < epic720> Domenic: did you read the article by eran hammer? I had planned on using 2.0 for my project but now might reconsider.
17:09 < Domenic> No I just saw that on my twitter but didn't read it yet. I guess I should. We love it so far.
17:09 < epic720> Domenic: what is your teams needs for authentication? Are they simple?
17:09 < epic720> http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/
17:10 < epic720> I need something that is going to keep up with my current development pace. Not something that will bog me down with further implementations.
17:11 < Domenic> epic720: Hard to say. We are not a third-party service (so we are using resource owner password credentials flow) which is very nice and simple.
17:11 < Domenic> Each client application gets an API key/secret. They send that, along with the user's username/password, and get back a bearer token.
17:12 < epic720> Domenic: that is essentially exactly what I need to do.
17:12 < Domenic> They then send the bearer token along with each request which maps to a user.
17:12 < epic720> I like that flow a lot.
17:12 < Domenic> Well in that case OAuth 2 is pretty perfect. But let me read this article to see if I missed something.
17:12 < epic720> He mentions a wave of upcoming security risks. 
17:13 < epic720> Domenic: what is your team working on? 
17:13 < Domenic> epic720: A REST API
17:13 < epic720> Domenic: ha. me too.
17:14 <@flexd> Uh, do I just npm publish again to update my package? or is there a update one?
17:14 < epic720> https://github.com/Epic720
17:14 < Domenic> epic720: you may find my answer at http://stackoverflow.com/q/11499995/3191 helpful
17:14 < Domenic> flexd: yes, after incrementing the version in package.json.
17:14 < epic720> Domenic: I think we are building the same thing. :(
17:15 <@flexd> Domenic: Great! :)
17:15 < Domenic> epic720: unlikely, unless yours interfaces with a user's Barnes & Noble.com library :)
17:15 <@flexd> version 0.0.2 published, woo! :)
17:16 < epic720> Domenic: Well, no in that regard. I am trying to make one that anyone can just start using.
17:17 < epic720> I guess everyone is just building their own API services these days.
17:17 < Domenic> Damn I need a blog. First I could talk about Type vs. [[Class]] vs. instanceof, then I could rebut this OAuth 2 post.
17:17 < epic720> Domenic: I would read that post.
17:18 < epic720> I could certainly use a bit of encouragement for oauth 2 right now. It's disheartening to hear an author for 3 years back out and then trash the whole implementation.
17:18 < epic720> But I've known about OAuth's 2.0 debacle for a while now.
17:18 < epic720> so I guess it's not too much of a surprise.
17:18 < Domenic> In short (still only halfway through the post) he seems to be way too close to the mess to step back and see that it's actually pretty usable.
17:18 < epic720> still, happy to hear you are having a good experience with it.
17:19 < Domenic> Most of his complaints are very minor and seem like yes, it would suck if you had to be on the committee, but as an implementor, it's a great spec.
17:19 < epic720> Domenic: are you using auth.js? Or did you build your own?
17:19 < Domenic> epic720: we built our own because it was so simple. Link to auth.js?
17:20 < epic720> Domenic: sorry, I mean to say node-oauth https://github.com/ciaranj/node-oauth
17:21 < Domenic> epic720: here is basically most of our implementation. It has some extra stuff because we use the scopes feature; without that it would be even simpler.
17:21 < Domenic> https://gist.github.com/2856962
17:22 < epic720> Oh, you're using restify too
17:23 < epic720> cool
17:23 < Domenic> Yeah, we should really yank out this module into its own component and publish to npm.
17:25 < epic720> Domenic: I would love that. 
17:25 < Domenic> epic720: maybe this weekend.
17:26 < epic720> Domenic: I'm following you now, will definitely look forward to it.
17:26 <@Wes-> Domenic: hey, are you still using NobleJS?  If so, have you had a chance to play with server-side/client-side reuse much?  
17:27 < zenista> hey guys, please suggest a node js form validator
17:27 < retrobaby> <%= reason %>
17:27 < yanush> Hi, if anyone can take a look at my problem here: http://stackoverflow.com/questions/11674661/clustering-in-node-js-fails-in-azure-emulator-or-azure-vm-with-ebadf I would greatly appreciate it.
17:28 < Domenic> Wes-: Not really; we were using it entirely on the client side (well, the HTML5 desktop app side), and now are trying Browserify for our new project.
17:29 <@Wes-> Domenic: Bummer, I think I may be one of the few people play with that pattern.  (BTW, one of these days I wouldn't mind getting your unit tests)
17:29 < retrobaby> what is a use case for using streams? I understand the concept, I would assume to use it for for piping data, but a more concrete use case anyone?
17:32 < DTrejo> op plz
17:32 < Domenic> retrobaby: file uploads to your server then piping them directly to Amazon S3. Then when the user (or another user) wants to download that file, pipe directly from S3 to their browser. Never buffer in memory.
17:33 < Domenic> Wes-: https://github.com/NobleJS/Noble-Modules/tree/testing-bravojs
17:33 < retrobaby> Domenic: ahh
17:33 < retrobaby> thanks
17:33 <@DTrejo> Domenic: i like your naming
17:33 <@DTrejo> of your bn.com repos
17:34 < Domenic> DTrejo: heh, thanks.
17:34 <@Wes->  Domenic: Thanks!  My most recent death march is over, turning my attention back to this stuff over the next few weeks/months
17:35 < retrobaby> lol twitter reason template jokes are all over my feed
17:36 <@wookiehangover> Domenic: I've been working on something similar with uploads to s3
17:36 <@wookiehangover> Domenic: https://github.com/wookiehangover/streamr
17:37 < Domenic> wookiehangover: nice! Would you mind submitting a PR for that knox fix? https://github.com/LearnBoost/knox/issues/72
17:38 < Domenic> Knox is no longer dead BTW :)
17:38 < ccowan> Domenic: Good… because we are using the crap out of it now. :D
17:39 < thewanderer1> hi. how can I get formatted JSON strings? I'm using JSON.stringify(), but it produces one-liners. I need something readable.
17:39 < Domenic> thewanderer1: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/stringify see "space" parameter
17:39 <@wookiehangover> Domenic: good to know... happy to submit a pull req if you think the work is relevant
17:40 < thewanderer1> Domenic: aaa-ha! thanks!
17:40 < Domenic> wookiehangover: basically we've known for a long time that knox's putStream sucks. On our project we were using knox.put() instead but putStream should just work better ideally.
17:42 <@wookiehangover> ya, the one catch is that you have to provide Content-Length and Content-Type headers to S3... but I can clean up this implementation and submit it https://github.com/wookiehangover/knox/commit/828615e2861da50a871d06acb6bcff6938851d84
17:43 < Domenic> wookiehanger: IMO it should stay filename and you should just be forced to put 'Content-Length' and 'Content-Type' in the headers you pass in.
17:43 < Domenic> Maybe even callback immediately with error if they are not in the passed headers
17:43 <@wookiehangover> Domenic: yep, that's exactly what I was thinking
17:43 < Domenic> there's also req.on('error', fn)
17:44 < thewanderer1> Domenic: sorry to disturb, but I used the space parameter and it seems to have no effect
17:44 < Domenic> And stream.on('error', fn)
17:44 < thewanderer1> JSON.stringify(posts[p].m, null, true)
17:45 < Domenic> thewanderer1: it's not a boolean, it takes the string you want to use as a spacer. E.g. "    " or "\t"
17:45 <@wookiehangover> Domenic: thanks for taking a look... I can get it cleaned up and submitted this evening
17:45 < Domenic> w00t
17:45 < Owner> ooooh u give me an middoo ware prease ok
17:45 < Owner> is middle-ware really a 'thing' now?
17:46 < Domenic> Owner: I think it's been a thing since the CommonJS and JSCGI days?
17:46 <@wookiehangover> Domenic: also worth mentioning that I modified formidable to take custom streams as well... kind of a crazy experiment, but it totally works
17:47 < Owner> at which point does my one liner become a middleware
17:47 < Owner> i really want to put Node.js middleware developer on my resume cuz its so buzzwordy
17:47 < Domenic> wookiehangover: sounds fun :). We never used formidable though, just piped requests directly to S3. I guess it'd be more useful for multipart/form
17:48 < Owner> Asychronous Middleware Developer?? that sounds great!
17:48 < Owner> that alone is worth 10k pay bump
17:48 < RangerMauve> Hiya, is it possible to set the encoding on a form submission with curl?
17:49 < RangerMauve> Or is there a tool that I can use for submitting forms to my site with a specific encoding? (Like UTF-7)
17:51 < Owner> like by setting an http header?
17:52 < RangerMauve> I guess, yeah.
17:53 < RangerMauve> I'm not sure how it would be done. :<
17:53 < RangerMauve> I was hoping it might be a flag that I could call
17:55 < Owner> RangerMauve~# are you using curl for node.js or?
17:55 < RangerMauve> Command line curl for testing my Node.js app.
17:56 < Owner> oh
17:57 < Owner> RangerMauve~# you use -H and then set the http header
17:57 < RangerMauve> What do I set it to, though?
17:58 < RangerMauve> I can't seem to find it anywwhere.
17:58 < Owner> -H "AcceptEncoding: UTF-7"  ?
17:59 < Owner> read the docs
17:59 < bluesmoon> @RangerMauve you can set the content encoding of a form
17:59 < RangerMauve> I found that, but I don't see anything to do with curl encoding the data that it sends.
17:59 < bluesmoon> oops, sorry I didn't see the curl part
18:00 < Owner> have you tried google?
18:00 < RangerMauve> So, would it just be easier to make a local html file and let my browser deal with it?
18:00 < RangerMauve> Yes I have.
18:00 < bluesmoon> try iconv
18:00 < Owner> http://curl.haxx.se/docs/manual.html
18:00 < Owner> http://www.w3.org/Protocols/rfc2616/rfc2616.html
18:03 < RangerMauve> Bah
18:16 < Owner> how the hell does redis work if you never specify a redis server
18:16 < Owner> https://github.com/mranney/node_redis
18:18 < paul_irish> for any cmd line tooling written in Node, is there a convention for notifying the end user that they need to update the latest version? 
18:19 < TooTallNate> paul_irish: hmmm, i'm not sure of any app that does that. npm doesn't.
18:19 < paul_irish> like imagine browserify comes out with a new version that's much more usable and better output.. etc.. How do all the people that are using it find out they should update their global install?
18:19 < Owner> global install pfft
18:19 < TooTallNate> SubStack: ^
18:20 < TooTallNate> twitter?
18:20 < paul_irish> :/
18:20 < TooTallNate> honestly though, it would just take an HTTP request to the npm repo
18:20 < paul_irish> right. 
18:20 < TooTallNate> wouldn't be too hard
18:20 < paul_irish> yeah definitely.
18:20 < TooTallNate> i just don't think any command line app does that so far
18:20 < Owner> package.json has a requires node >= version thing....does that not do anything?
18:20 < TooTallNate> maybe if you modularize it, others will use it too!
18:20 < paul_irish> i'm somewhat tickled with the idea of automatically installing the new version for them
18:21 < paul_irish> good idea.
18:27 < milani> TooTallNate, how node-gyp decides which target to build?
18:27 < owen1> what tool is good for performance tests of file upload HTTP API (POST)?
18:27 < milani> I want to add a target to binding.gyp that should only selected by node-gyp build <targetname>
18:27 < milani> is it possible?
18:29 < wingy> is it ok to use less.js script in the browser directly in production or is it recommended to compile them to css on node.js before serving them to browser?
18:31 <@AAA_awright> wingy: You definitely your application to degrade gracefully without Javascript
18:31 < wingy> AAA_awright: negative .. my web app is depending on js
18:32 < wingy> AAA_awright: but would using less.js directly in browser be ok for production?
18:32 < wingy> the rendering time is around 25-40 ms
18:32 <@AAA_awright> If you can compile to CSS why not?
18:32 < wingy> quite ok?
18:32 < wingy> AAA_awright: i guess
18:33 < TooTallNate> milani: gyp builds all targets i believe
18:33 <@AAA_awright> wingy: You definitely don't want to rely on Javascript, you begin to exclude robot user-agents that want to work with the program, in addition to some people's user-agents, and some people period
18:33 < wingy> AAA_awright: yeah
18:33 < wingy> AAA_awright: but my whole app is depending on js anyway
18:33 <@AAA_awright> I mean, you *can* but know the costs of it
18:33 < wingy> AAA_awright: its a single page app
18:34 < wingy> on angularjs
18:34 < milani>  TooTallNate hmmm. I thought it starts with the first target and builds all dependencies of it. seems wrong.
18:34 < bradgignac> wingy: how much CSS are you at?
18:34 <@AAA_awright> Single page apps break a lot of semantics of HTTP
18:34 < wingy> bradgignac: 20 lines :)
18:34 < bradgignac> ahh
18:34 < bradgignac> i start to see failures once I get a lot of CSS
18:34 < wingy> i already see the failures in those 20 lines
18:35 < wingy> i am pretty amazed by the less.js script in the browser .. the watch mode is amazing
18:35 < wingy> i could just use this in development .. then compile it in production
18:45 < yawnt> has anyone used avatars.io?
18:47 < iwoj> anyone know of a good Web UI unit testing framework?
18:54 < kenperkins> anyone heard of a google cloud messaging module
18:56 < wingy> css preprocessors are so great :)
18:58 < wingy> is there an editor for .less files?
19:16 < superjoe> wingy, yep
19:16 < superjoe> it's called vim
19:17 < superjoe> do people typically roll their own models when using node.js and redis or is there a popular library for it?
19:18 < nodenewb> i have been looking into using Geddy for it
19:18 < nodenewb> until now though i have been using express so i just roll my own
19:19 < nodenewb> @superjoe - what have you been using for models?
19:20 < konobi> knockback?
19:20 < superjoe> nodenewb, mongodb + pure javascript objects
19:22 < superjoe> konobi, this is client-side
19:22 < superjoe> konobi, I mean, knockback is client-side
19:22 < superjoe> I'm talking about server-side
19:22 < konobi> superjoe: what's the difference?
19:23 < superjoe> I'm not going to answer that silly question
19:25 <@Nexxy> superjoe: he doesn't answer sillly questions.
19:25 <@konobi> how bout now?
19:26 <@Nexxy> konobi you are tempting fate! 
19:26 <@konobi> Nexxy: =0P
19:26 < nodenewb> lol
19:26 <@Nexxy> that is no ordinary joe you are dealig with!
19:28 < nodenewb> i had never looked into knockback.js before. it does look pretty interesting with mvvm
19:29 < nodenewb> idk though, databinding magic can become a major leaky abstraction in my experience from .net land
19:29 <@Nexxy> I only use the highest quality mvvxcvbnocrt frameworks.
19:30 < nodenewb> yeah, it gets a bit ridiculous at times. mvc is pretty simple though
19:35 < Nasga> nodenewb: take a look at meteorjs and derbyjs :)
19:35 < Owner> why was nodepcap abandoned
19:36 < alex4nder> Owner: because it grew up, got ugly, 
19:36 < alex4nder> wasn't cute anymore
19:41 < brainss_> enlighten me
19:41 < brainss_> node -e "var tty = require('tty'); (process.stdin.setRawMode || tty.setRawMode)(true)"
19:41 < cpsubrian> Out first production node.js app is up and in use!  Its a short-lived event app. http://live.freedomworks.org (dont blame us for the content :)
19:41 < brainss_> node -e "var tty = require('tty'); (process.stdin.setRawMode || tty.setRawMode).call(process.stdin, true)"
19:41 < brainss_> why is 'this' not bound the way i would expect in the first example
19:42 <@creationix> isaacs, have you looked at jamjs?
19:42 <@isaacs> creationix: no
19:42 <@creationix> it's like npm for the browser, even reuses package.json
19:42 <@isaacs> creationix: oh, neato
19:42 <@creationix> has it's own couch repo
19:42 <@isaacs> yeah, there's a lot of activity in this area now
19:42 <@creationix> so my "smith" repo is both a node module and a browser module
19:42 <@isaacs> nice
19:42 <@creationix> it depends on "msgpack-js" and "events"
19:42 <@creationix> for msgpack-js, I have a node version and a browser version
19:43 <@creationix> but "events" is a node built-in in node, but not in the browser
19:43 <@creationix> what would npm do if I depended on "events"?
19:43 <@isaacs> creationix: probably barf.
19:43 <@creationix> look for a 3rd party module by that name?
19:43 <@isaacs> creationix: yes.
19:43 <@context> i was just reading an article about problem with browser managers is they dont take into consideration other assets
19:43 <@creationix> context, tj just wrote an article on that
19:44 <@context> yeah thats prolly what i was reading
19:44 <@creationix> isaacs, what would be the same thing to do in that case
19:44 <@CIA-93> node: isaacs master * re549833 / (153 files in 33 dirs): Merge remote-tracking branch 'ry/v0.8' (+14 more commits...) - http://git.io/SgeThQ
19:44 <@creationix> I have a dependency that only matters on certain engines
19:44 <@creationix> s/same/sane/
19:45 < thewanderer1> how can I check if a variable contains valid JavaScript code? I want to eval() some input, but don't want to crash the program if it's malformed.
19:46 <@creationix> thewanderer1, new Function(code)
19:46 <@gkatsev> fork a new node process that will eval the code there :P
19:46 < thewanderer1> creationix: what will that do on error? throw an exception I'm supposed to catch?
19:46 <@creationix> thewanderer1, I believe so
19:47 <@creationix> but as long as you don't call the resulting function, the code is never executed
19:47 <@creationix> just compiled
19:48 < thewanderer1> creationix: that's ok, I only want to catch syntax errors - although I suppose I can catch everything?
19:48 < stagas> creationix: the issue is, you still can't share a module across environments without changing the code
19:48 <@creationix> stagas, some can, some can't
19:48 <@creationix> stagas, the "smith" module I'm talking about runs in both node and browser unmodified
19:49 < stagas> creationix: but with environment checks in the code, no?
19:49 <@creationix> stagas, just some minimal boilerplate
19:49 <@creationix> for the differences between commonjs, amd, and browser globals
19:49 <@creationix> the library code is identical
19:49 < stagas> creationix: that's the issue right there :)
19:49 <@creationix> stagas, I don't mind small boilerplate
19:50 <@creationix> the problem for me is EventEmtiter is 3rd party in the browser, but built-in in node
19:50 < thewanderer1> creationix: any idea how to pass some variables to a function thus created? ( new Function(code) )
19:51 <@creationix> thewanderer1, https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function
19:51 <@creationix> thewanderer1, but since the wiki is kinda broken, `new Function("arg1", "arg2", code)`
19:51 <@creationix> where your code gets wrapped in function (arg1, arg2) { /*code*/}
19:52 < brainss_> Why isn't 'this' bound the way I would expect?
19:52 < brainss_> node -e "var tty = require('tty'); (process.stdin.setRawMode || tty.setRawMode)(true)"
19:52 < thewanderer1> creationix: thanks... I'm not quite clear as to why it can't access variables that live outside, but I'll just pass them down the stack
19:52 < brainss_> node -e "var tty = require('tty'); (process.stdin.setRawMode || tty.setRawMode).call(process.stdin, true)"
19:52 <@creationix> thewanderer1, if you really want to mess with people's head, so new Function("scope", "with (scope) {" + code + "}")
19:53 <@creationix> thewanderer1, unlike eval, the function constructor doesn't have closures
19:53 < thewanderer1> oh.
19:54 < stagas> creationix: and how do you deal with dependencies in your packages when you have different require semantics
19:54 <@creationix> stagas, that's what I'm working on now
19:54 < TheHippo> is there a way to view older version of the node.js docs online?
19:55 <@creationix> TheHippo, yes if you can guess the url, google search for0.6.8 node api doc
19:56 < TheHippo> thanks... nodemanual.org covers this...
19:56 < ACK___> can we develop high quality web apps like pinerest / youtube/ scribd / slideshare with html / css / node.js and javascript?
19:56 <@creationix> TheHippo, found it http://nodejs.org/docs/
19:57 < CoverSlide> ACK___: yes
19:57 < blazes816> ACK___: yes!
19:57 <@creationix> or use nodemanual, that's by us (cloud9)
19:57 <@creationix> stagas, so to me there are three kinds of modules
19:58 < ACK___> use of express.js necessarey or node.js can do all work for mr
19:58 < ACK___> i mean ME
19:58 <@creationix> node libraries, browser libraries, and applications (that can use node and/or browser libraries)
19:58 < blazes816> ACK___: nothing will do all the work for you
19:58 < CoverSlide> express will make the work easier
19:58 <@creationix> programming by it's very nature means doing something that's never been done before
19:58 <@creationix> otherwise you'd just copy the bits
19:58 < ACK___> then why to use express?
19:58 < blazes816> it makes things easier
19:59 < blazes816> same reason to use node instead of ASM
19:59 < RLa> or asm instead of machine code
19:59 < blazes816> or machine code instead of building hardware
19:59 < blazes816> etc
19:59 <@creationix> ACK___, express makes web apps a lot easier over using raw node apis
19:59 <@creationix> but to build a real app like twitter is still a ton of code on top of express
20:00 <@creationix> modern software is incredibly complex
20:00 < CoverSlide> pfft no its not. its just hitting a bunch of buttons
20:00 < CoverSlide> monkeys can do that
20:00 < RLa> twitter doesn't look complex in functionality but it needs to scale
20:00 < CoverSlide> just get 1000 monkeys, sit them at a terminal. they'll type out twitter eventually
20:01 < RLa> it's just about sending 140 bytes messagess
20:01 <@creationix> even a single-node twitter clone would be thousands of lines of code (most frontend)
20:01 < blazes816> it happened once
20:01 < ACK___> i want to learn node.js? where should i start? => i m rails developer / basic javascript -> i know
20:01 <@creationix> ACK___, express is roughly equivalent to sinatra
20:01 <@creationix> node is closer to raw ruby
20:01 < CoverSlide> + eventmachine
20:02 <@creationix> try building a web app without rack, sinatra, or rails
20:02 < blazes816> burn
20:02 < ACK___> i know
20:02 < blazes816> connect is like rack, express is like sinatra
20:02 < ACK___> but where to start from i don't know node
20:02 < blazes816> afaik there is not "rails"
20:02 <@creationix> ACK___, there is also geddy
20:02 <@creationix> which is closer to rails, but less popular
20:02 < CoverSlide> blazes816: geddy is close
20:02 <@creationix> and a dozen other frameworks
20:03 < CoverSlide> there's locomotive, tower.js that try to do rails on top of express iirc
20:03 <@creationix> in maturity and market dominance, express is the closest to a winner, but it's still early to tell
20:03 < blazes816> i just meant a forerunner like rails is
20:03 < blazes816> looks like geddy's about closest
20:04 < bluesmoon> I'm seeing some pretty bad failures with node's crypto module.  See bug here: https://github.com/joyent/node/issues/3773
20:04 < ACK___> i want to learn node.js? where should i start?
20:04 < bluesmoon> ACK___: do you know JavaScript?
20:04 <@creationix> search for how to node ;)
20:04 < brainss_> nodejs.org
20:04 < RLa> there's also node beginner book
20:05 <@creationix> ACK___, unlike the cargo-cult ruby community, the node community is the wile-west
20:05 <@creationix> *wild-west
20:05 < RLa> http://www.nodebeginner.org/
20:05 <@creationix> everyone does their own thing going in another direction
20:05 < CoverSlide> I thought it was like feudal japan
20:05 < ACK___> i know basic javascript
20:06 < CoverSlide> ACK___: learn real javascript first: http://eloquentjavascript.net/
20:06 < RLa> go read the book
20:06 <@creationix> ACK___, what do you want to learn/do?
20:06 <@creationix> "learn node" is rather vague
20:06 <@creationix> just read the API on nodejs.org and make something
20:06 <@creationix> it gives you network, filesystem, and timer primitives
20:06 <@creationix> that's about it
20:07 < ACK___> both
20:08 < blazes816> both?
20:08 < blazes816> you get all three.... ;)
20:08 < CoverSlide> if you just want to started on express, here's some video tuts: http://expressjs.com/screencasts.html
20:09 < ccowan> OT: My dad just walked by my desk and saw me working… he said… "Hey! Is that vi? I used that back in the 80's"
20:09 < ccowan> I love it
20:09 < ACK___> timespan for learning javascript to express?
20:10 < blazes816> ACK___, I had a realtime pinterest-esque app done ~1hr with no node knowledge
20:11 < ACK___> how do you do that?
20:11 < CoverSlide> typing one key at a time
20:12 < blazes816> ACK___, I used express, socket.io, twit (to harvest pics), mongodb (to save pics), jquery, and handlebars
20:12 < blazes816> then shake them correctly
20:12 < ACK___> so thats the POWER OF EXPRESS
20:13 < blazes816> and socket.io, twit (to harvest pics), mongodb (to save pics), jquery, and handlebars
20:13 < blazes816> + their precursors
20:13 < blazes816> C, for example
20:14 <@nlf> c is for cookie
20:14 < ACK___> is node.js can be used for rapid development like as => Ruby on rails
20:15 < blazes816> ACK___: how fast can you type?
20:15 < upstream> Quick question, i'm interested in building a job queue from scratch with Node that simply checks Mongo for a document and processes it. However I'd like this node process to just keep checking Mongo for documents to process in a loop... should I make my node script and use something like `cron` or should I write the Node script inside a setInterval() ?
20:15 < upstream> or is there some other better option
20:15 <@nlf> a fast executing script that runs in a cron job would probably be more efficient
20:16 < ACK___> average speed
20:16 <@maxogden> upstream: check out github/iriscouch/txn for inspiration
20:16 < upstream> nlf: yeah I think so too, i'd need to mark the document as being "processed" so as to avoid the script processing a document twice if cron was called again before processing was complete...
20:17 < upstream> maxogden: Okay, cool thanks for the link i'll peek at it
20:17 < blazes816> ACK___, then about average speed
20:17 < ccowan> Check out kue
20:17 < CoverSlide> You know, cron is probably one of the most NIH'ed things I see most people try to make
20:17 < upstream> ccowan: I looked at Kue, it seemed like more than I needed maybe
20:18 < CoverSlide> I had a coworker write some 1000 lines of Java code until I told him to use cron and he was like "what's cron?"
20:18 < blazes816> ACK___, just follow some express tutorials.
20:18 < upstream> NIH'ed?
20:18 < blazes816> you'll get there as fast as your mind can take you
20:18 < ccowan> yeah… it feels like a lot when you are thinking about just one job… but then you start finding all sorts of problems that fit in it
20:18 < blazes816> Not In House
20:18 < CoverSlide> Not Invented here
20:18 < blazes816> or that
20:18 < blazes816> acronyms are fun
20:19 < ACK___> i don't know node.js
20:19 < CoverSlide> learn it
20:20 < lohkey> node.js is just a set of APIs
20:20 < upstream> ccowan: maybe i'll take another look at Kue, I sort of passed it off quickly as it seemed to fancy ;)
20:20 < upstream> Ok, great so my options are all there, now it's time to just figure out what works best for me. Thanks guys
20:21 < ccowan> upstream: If you have redis and node.js in your stack then it's not too much trouble to get going. 
20:23 <@creationix> if you look up NIH is the dictionary I'm pretty sure there is a picture of me and SubStack in there.
20:24 < mbrevoort> I seem to remember felixge at one point mentioning that you can build node and bundle your app with it. Anyone know anything about that?
20:24 <@maxogden> i dont use dictionaries i have my own word definition archive in markdown on my VPS
20:24 <@creationix> mbrevoort, nothing turn-key was ever built
20:24 <@creationix> mbrevoort, I still want it some-day
20:25 <@creationix> though you can just bundle the node binary is a folder and use a script to start your app
20:25 < felixge> mbrevoort: just build it on your build server from source
20:25 < felixge> --prefix='local folder inside your build dir'
20:25 < felixge> make install
20:25 < felixge> then tar.gz everything
20:25 < felixge> and in production make sure $PATH contains the path where the node binary was deployed
20:26 < mbrevoort> creationix, felixge ahhh that makes sense, yeah would be nice if it were tighter
20:26 <@creationix> mbrevoort, indeed, pquerna was working on something tighter but in the end v8 was too heavy for his use case
20:27 <@context> are their any frameworks (besides express) that center around creating api's
20:28 < mbrevoort> yeah, I can see that... nice to have the node dependency bundled with the app deploy, makes rollback, etc. easier. Thanks creationix, felixge
20:28 <@creationix> context, I think most web frameworks center around http routes
20:28 <@AviMarcus> Is there a DNS stack for a server for VoIP LRN lookups via DNS? I think its NAPTR. https://github.com/trevoro/node-named doesn't seem to have that listed.
20:28 < felixge> mbrevoort: indeed it does :)
20:28 < felixge> I hope to write about how we do it at transloadit soon
20:29 < felixge> as well as release some helper code
20:29 <@AviMarcus> Hi felixge 
20:30 < mbrevoort> felixge would be nice to hear your take on that :) we deploy to fresh instances each time and rollback is generally flipping back to those old instances but still nice to couple
20:30 <@AviMarcus> Can you re-open https://github.com/felixge/node-mysql/issues/251 ? I added a link to a gist for a unit test.
20:30 <@creationix> caolanm are you back yet?
20:31 < caolanm> creationix: hey
20:31 < caolanm> creationix: just got back
20:31 <@creationix> isaacs, you still around?
20:32 <@creationix> caolanm, what if I just manually depend on "events" in my boilerplate
20:32 <@CIA-93> node: Ben Noordhuis master * r59b584c / src/node.cc : node: remove PrepareTick() and CheckTick() - http://git.io/fIyVlA
20:32 <@creationix> jam doesn't seem to use nested folders like npm does
20:33 <@creationix> all modules are installed in the same public/jam/ folder?
20:33 < caolanm> creationix: yes, we don't want to ship multiple versions of deps to the browser
20:33 < caolanm> creationix: I think the correct solution would be extending package.json as you suggested
20:33 <@creationix> ok, so that's a design decision
20:33 < caolanm> yes
20:33 <@creationix> right, but till then, I can just manually "jam install events"
20:33 <@creationix> and the smith library will have access to it?
20:34 < caolanm> so we'd add jam.dependencies, or browser.dependencies to package.json
20:34 < caolanm> creationix: yes, until then you can just "jam install events" manually
20:34 <@creationix> right, that's what I wanted to discuss with isaacs 
20:34 < caolanm> good idea
20:34 <@creationix> and see how generic we want to make this, or stick to practical solutions
20:34 <@creationix> generic <-> practical is always a fun balance
20:35 <@ryah> hey, node people - can i get some +1 replies to my syntax suggestions here https://groups.google.com/a/dartlang.org/forum/#!msg/misc/ix_mnCcHBTQ/wYv3naExaAYJ
20:35 <@ryah> (community hacking)
20:35 < caolanm> creationix: you've successfully filled up the "latest updates" stream ;) http://jamjs.org/packages/#/
20:35 < caolanm> maybe I'll compress repeat publishes in that list
20:36 < caolanm> into a single event
20:36 <@AviMarcus> ryah, "your" bot has been running, btw.
20:36 <@creationix> I wouldn't bother, once it get's popular it will be impossible to find anything anyway
20:36 <@ryah> AviMarcus: yes ive tested it :) happy about it
20:36 < ryah> ops plz
20:36 < caolanm> creationix: I'm planning on adding a category view to the web interface
20:36 <@ryah> :)
20:36 <@creationix> caolanm, good idea
20:36 < mscdex> greetings noders
20:37 < Owner> hye
20:38 < mscdex> creationix: what gets popular?
20:39 <@creationix> mscdex, caolanm made a npm for the browser
20:39 <@creationix> with it's own repo
20:39 < caolanm> mscdex: http://jamjs.org
20:39 < mscdex> oh
20:39 < ACK___> good resources to learn node.js with minimal javascript knowlege
20:39 <@creationix> ACK___, howtonode.org has a mix of js teaching and node examples
20:39 <@creationix> each article notes what version of node it was written for
20:39 <@creationix> so watch out for outdated stuff
20:40 < mscdex> ACK___: for javascript in general: https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide
20:40 < timoxley> ACK___ go brush up on your JS first
20:40 <@creationix> ACK___, for JS, start with object-graphs 1, 2, and 3 as well as "what is this" 
20:40 <@creationix> mdn is also good
20:40 <@creationix> codecademy is mostly good
20:40 < timoxley> creationix seconded
20:42 < mscdex> caolanm: where do the "latest updates" come from? they seem to differ from the ones listed at search.npmjs.org
20:42 < caolanm> mscdex: jam has it's own repository
20:42 < mscdex> oh
20:43 < timoxley> I have function names + arguments I want to pass, but not yet the object I want to apply them to. Is there some kind of 'functional' term I should be looking for?
20:43 < timoxley> it's kind of like currying, but not.
20:44 <@creationix> timoxley, don't know of a term for that
20:44 < ACK___> any javascript book which will led foundation for node.js
20:44 < timoxley> ACK___ you probably want to get JS down before you dive into node
20:44 <@creationix> ACK___, my experience shows me that having a sound understanding of JS is required to write real node code
20:44 <@creationix> or the callbacks and closures kill you
20:45 <@creationix> the howtonode.org articles on JS focus on the pain points that most newcomers have
20:45 <@creationix> how objects really work, what is a closure, what is 'this'
20:45 <@creationix> functions are the core to everything
20:46 <@jcrew> is there something in fs.stat to get the user who modified the file?
20:46 <@creationix> jcrew, that's not stored on unix systems
20:46 <@jcrew> or who owns it, is fine
20:46 <@creationix> uid
20:46 <@jcrew> i should use stat.uid ?
20:47 <@creationix> yep
20:47 <@jcrew> thank you much
20:47 <@creationix> that's the owner of the file
20:47 < ACK___> ok then recommend me decent book that i can study cover to cover
20:47 <@creationix> you'll have to shell out to resolve the uid to a username though
20:47 < timoxley> ACK___ there's a few decent articles on wycats' blog as well, specifically http://yehudakatz.com/2011/08/12/understanding-prototypes-in-javascript/ & http://yehudakatz.com/2011/08/11/understanding-javascript-function-invocation-and-this/
20:47 <@creationix> ACK___, http://eloquentjavascript.net/
20:47 <@jcrew> shell out?
20:48 < chjj> creationix: depending on your unix, you could readFileSync('/etc/passwd') and parse it
20:48 <@creationix> or that
20:48 <@creationix> but there is no node API for resolving uids to usernames
20:48 <@jcrew> we're using kerberos 
20:49 <@jcrew> ahh getent - thanks guys
20:50 < timoxley> ACK___ also lots of good stuff in http://dmitrysoshnikov.com/ecmascript/
20:50 < mAritz> hm. i'm using node-canvas and need to have a 2000x4000 canvas. startup time is now about 10 seconds and it needs 600mb ram. is that normal?
20:51 < blazes816> dear lord I hope not
20:52 < upstream> Is it bad to require() some modules half-way through your script rather than at the top of the file? Is there like a performance hit or something?
20:52 <@creationix> dmitry's writings are awesome, but hard for beginners I think
20:52 < upstream> for example, using some logic to determine what libs to require()
20:53 < mAritz> well, i also have the imgData for the entire canvas in ram... guess that'll do it
20:53 < blazes816> ah, I thought you meant blank
20:54 <@creationix> images are 4 bytes per pixel, that does add up
20:54 < mAritz> yeah :/
20:55 <@creationix> though that's only 30.5Mb
20:55 < mAritz> creationix: so, it shouldn't be at  600mb, i take it?! :D
20:57 <@wycats> timoxley: thanks
20:57 < hughfdjackson> is there anyway to get access to *all* of the package.jsons for published npm modules?
20:58 < hackula_> hmmm, that would be interesting
20:58 < hughfdjackson> :3 so it would
20:59 <@creationix> mAritz, I wonder if there is a per-pixel object somewhere
20:59 <@creationix> I hope not
20:59 <@creationix> also, is that RSS or virtual
20:59 <@creationix> memory measurement is hard
21:01 < timoxley> wycats np
21:14 < ACK___> which web development framework is best for node.js?
21:15 < kennethkoontz> ACK___, that's a preference question really. Express is probably one of the more popular ones.
21:18 < mAritz> creationix: looking at htop. :/
21:19 < mAritz> says virt: 1264m, res: 738m
21:19 <@creationix> wow
21:19 <@creationix> mAritz, sorry, I don't know node-canvas
21:19 <@creationix> but that's legit, something is eating too much ram
21:20 < ACK___> did node provide rubygems like facility?
21:20 <@creationix> ACK___, yes, npm
21:20 <@creationix> it's installed along with node now
21:21 <@creationix> type `npm install node`
21:21 <@creationix> err `npm install express`
21:21 < ACK___> how can we do uploading / testing with this 
21:24 < milani> ACK___, u can test ur local repositories without uploading to npm
21:24 < milani> ACK___, just do npm install <folder>
21:25 < milani> of course if you have package.json there in <folder>
21:25 < ACK___> so you all guys are telling that we can build both front and back ends with node / express/ html / css and javascript only?
21:26 < hughfdjackson> ofc you could
21:26 < milani> ACK___, what else do u need?:)
21:26  * Niloc hands milani a 'y' and 'o'
21:26 < ACK___> i want answer YES or NO
21:27 < ktstowell> Yes
21:27 < Niloc> No, he wants YES
21:27 < Niloc> Didn't you see?
21:27 < ktstowell> My apologies, YES.
21:29 <@jcrew> fs.watch is giving ENOSPC - is this a no space in memory problem or something else?
21:32 < alex4nder> jcrew: you on linuix?
21:32 < alex4nder> -i
21:34 < ACK___> is flatironjs good
21:34 < kennethkoontz> Yes.
21:35 < kennethkoontz> But in the end they do the same thing. RailWayJS Batman.js Express... 
21:36 <@jcrew> alex4nder: yea
21:37 < alex4nder> jcrew: then you probably hit your watcher limit
21:37 < mscdex> brucewayne.js
21:37 <@jcrew> alex4nder: i've been looking for a way to increase the limit, i'm not finding much - do you know of a way?
21:38 < alex4nder> jcrew: /proc/sys/fs/inotify/max_user_watches
21:39 <@jcrew> alex4nder: thank you
21:39 < alex4nder> np
21:39 <@CIA-93> node: Adam Malcontenti-Wilson v0.8 * r90efdb3 / configure : build: improve armv7 / hard-float detection - http://git.io/yOgpbg
21:44 < dexter_e> Hi,  Anyone know where 'User'  comes from in this example ? https://gist.github.com/3184741
21:45 < dexter_e> I'm trying to use that cool new Authentication library  Passport.JS
21:45 < dexter_e> Same  with example right on their site: http://passportjs.org/guide/openid.html    
21:45 < dexter_e> they are calling 'User
21:45 < dexter_e> but where is 'User' coming from ?
21:49 <@maxogden> its psuedocode
21:49 < brainss_> dexter_e, i think that bit is up to you to write.
21:49 <@maxogden> also that library is kinda high level and railsy inspired
21:50 <@tbranyen> dexter_e: i had issues with passport, still haven't quite gotten it to work yet
21:50 <@tbranyen> using the local strat
21:52 <@CIA-93> node: Ben Noordhuis master * r2cfd3f4 / lib/dgram.js : dgram: make .bind() always asynchronous - http://git.io/d_7jgg
21:52 <@CIA-93> node: Ben Noordhuis master * r799d7f6 / test/simple/test-dgram-pingpong.js : test: suppress simple/test-dgram-pingpong chatter - http://git.io/sfr6og
21:52 <@CIA-93> node: Timothy J Fontaine master * r42734bb / (4 files): test: update dgram tests after API change - http://git.io/wRNbww
21:57 <@CIA-93> node: Ben Noordhuis master * r332fea5 / lib/dgram.js : dgram: make .bind() always asynchronous - http://git.io/DYju0w
21:57 <@CIA-93> node: Ben Noordhuis master * r105c6ec / test/simple/test-dgram-pingpong.js : test: suppress simple/test-dgram-pingpong chatter - http://git.io/J0oC8A
21:57 <@CIA-93> node: Timothy J Fontaine master * redd3de8 / (4 files): test: update dgram tests after API change - http://git.io/ePJ_hw
22:00 < Vbitz> how can http.get throw Error: connect EADDRNOTAVAIL
22:03 <@CIA-93> node: Ben Noordhuis master * r2a30d32 / (src/node_crypto.cc test/simple/test-crypto.js): crypto: add sync interface to crypto.pbkdf2() - http://git.io/nxxUYQ
22:03 <@creationix> isaacs, caolanm: https://github.com/creationix/redact
22:03 <@creationix> for now I just document how to manually install the jam modules in the readme
22:04 <@creationix> but it would be great if there was a way to declare this in the main package.json
22:04 < mAritz> creationix: i'm not sure what i did, but it now uses even more ram :D
22:05 < mAritz> any idea when/if tj will get in here? ^^
22:05 < dexter_e> I got it working with Twitter no problem, and Facebook, only problem is it won't initialize the Avatars and chat handles
22:05 <@isaacs> creationix: "scripts": { "install" : "cd public; jam install smith events" }
22:05 <@isaacs> creationix: and make jam a dep
22:06 <@isaacs> it might need to be a postinstall script so that jam is there already
22:06 <@isaacs> not sure when that actually fires
22:07 <@creationix> can you declare global node modules as deps
22:08 <@creationix> it would be `npm install -g jamjs` to get jam
22:08 <@creationix> but I guess I could use the local jam in ./node_modules/.bin/jam
22:10 < caolanm> creationix: I think I can get Jam to support most of that process using info in package.json fairly easily
22:10 < caolanm> creationix: but that would still be "npm install" followed by "jam install"
22:10 < caolanm> creationix: to get it down to a single command you'd need to use the post-install script as isaacs suggests
22:11 < caolanm> creationix: to be honest, I'd recommend bundling the installed jam packages
22:13 <@creationix> I actually like isaac's idea
22:13 <@creationix> that way I control what version of jam I have too
22:26 < m4tty> anyone have ideas on why sending udp (i.e. dgram.createSocket('udp').send) doesn't work from within process.on('uncaughtException') or any other process.on handler?
22:33 < DewiMorgan> Newbie Question: trying to get Brian Geffon's Socket.io proxy to run, but getting WSH error "Object expected" from line 1, "var util = require('util')," - I assume I've failed to install or do something obvious. Any ideas?
22:33 < m4tty> udp dgram.createSocket('udp').send doesn't work within process.on callback.  https://gist.github.com/3184975   .  any help is appreciated.
22:45 <@AviMarcus> hmm does the new node-mysql disconnect after a while while the 0.9x didn't? How do I do auto-reconnect?
22:46 < mAritz> creationix: (just fyi) it was a bug with my code. it cloned the image and appended it to the end, doubling the file size. every time i modified something. ended up with an image that had 256 milion pixels... :D
22:46 < felixge> AviMarcus: no, it does not. mysql does. the docs have a section on it
22:46 < felixge> AviMarcus: https://github.com/felixge/node-mysql#server-disconnects
22:46 < mAritz> (well, not doubling filesize due to compression obviously, but doubling pixel size, thus imgData array size)
22:46 <@AviMarcus> felixge, ah cool I see. I didn't notice this on the 0.9x code I was running for a few days.
22:47 < felixge> AviMarcus: 0.9 reconnected out of the box
22:47 < felixge> but that was bad
22:47 < felixge> given the abstraction level
22:47 <@AviMarcus> ah k. Will that be in your upgrade notes?
22:47 < felixge> an auto-reconnecting interface will be re-intrudced with buffers
22:47 < felixge> AviMarcus: yes
22:48 < VodkaDolphin> i've written a game on node.js
22:48 <@AviMarcus> felixge, great, thanks. And can you re-open https://github.com/felixge/node-mysql/issues/251 ?
22:51 < felixge> AviMarcus: sure, will take another look
22:51 <@AviMarcus> thanks
22:51 <@AviMarcus> btw, any ORM you recommend? tried sequelize but it didn't really work as I was expecting...
22:51 <@AviMarcus> docs for jugglingdb seemed kinda sparse
22:52 <@AviMarcus> didn't try node-persist
22:52 < felixge> not using any myself
22:52 < felixge> plain sql works for me
22:54 <@AviMarcus> :) MyTable.create({key:'myVal'}); for an insert is a bit tempting :P but most uses are a bit more complicated...
22:57 < owen1> so it's about time deploy my node api. i have a lot of console.logs in my code when error happens. sometimes i even throw an error. what's the best practise in terms of logging? 
22:58 < yarekt1> Is there any good tutorial on splitting your node app into modules? my server.js is getting kinda heavy
22:59 < DewiMorgan> Yarekt1: Try this one? http://jherdman.github.com/2010-04-05/understanding-nodejs-require.html
23:00 < DewiMorgan> I was just reading that one trying to figure out my problem... turned out I was doing everything fine in the code, but then being a moron and running the script directly through windows scripting host rather than through Node.js. Heh.
23:01 < yarekt1> DewiMorgan: Thanks, exactly what i was looking for =D
23:03 <@AviMarcus> owen1, if you throw then that kills the execution..
23:03 < DewiMorgan> yarekt1: Yay! I helped someone and I've only been using Node.js for an hour! *is happy*
23:04 < yarekt1> DewiMorgan: There is so much info floating about. I'm having difficulty sifting through all the outdated stuff, trying to find something for beginners
23:05 < DewiMorgan> True. Better that, though, than the alternative with some other languages: no docs at all! :)
23:05 <@AviMarcus> yarekt1, google has a date parameter...
23:06 < yarekt1> AviMarcus: Wha?
23:07 <@AviMarcus> when you search, pick a more recent time frame in the search tools
23:08 < kennethkoontz> yarekt1: Yeah, I agree. There is so much info that finding good/pertinent info is not as easy as you would think.
23:08 < yarekt1> but then these is stuff like, even if its old, its still the best thing/module, so you are never sure that its the best version
23:09 < yarekt1> but other than that. awesome project
23:09  * AviMarcus is liking the syntax much better than php
23:09 < yarekt1> Almost rewrote my PHP event based server in it
23:09 <@AviMarcus> still getting the hang of async/callbacks when it's one "thing" that needs to be done, though.
23:10 <@teadict> I've got a license question
23:10 <@teadict> I've built this app in node
23:11 <@teadict> Which was specified with both the client and me, as a team; normal requirements compilations, right?
23:12 <@teadict> I don't wanna sell them the rights of the app, which remain mine, so they can't resell it to someone else..
23:12 <@Lorentz> I suggest a lawyer
23:12 <@teadict> So I want to make it clear that the app's rights are mine..
23:12 <@teadict> I've written a specification agreement...
23:13 <@teadict> Detailing the whole app and price and at the end I state the rights are mine
23:13 <@teadict> Is that enough if they sign it?
23:13 <@teadict> Should I put a file in the bundle? Stating it too
23:14 < alex4nder> rtsz: what?
23:14 < alex4nder> er teadict 
23:14 <@teadict> What part didn't you understand?
23:14 < yarekt1> teadict: Have you got a question thats actually related to node ?
23:15 < alex4nder> teadict: you're asking about contract law on an IRC channel related to programming server-side javascript
23:15 <@teadict> yarekt1: Sorry, it's just that there's no "licenses" channel and I can't find anything that clarifies this
23:15 <@teadict> Yes, but you know...
23:15 <@teadict> If someone is bored and feels like talking
23:15 < yarekt1> teadict: Well, ill attempt to anser it anyway, but this probably isn't the best place
23:15 <@teadict> I can stop if OPs want
23:16 <@teadict> I know , sorry
23:16 <@teadict> And thanks in advance
23:16 < yarekt1> teadict: Its all source. So only thing you can do is put a copyright notice on every file
23:16 <@teadict> Wait...
23:16 <@teadict> Can the rights of the app be kept it being open source?
23:16 < alex4nder> teadict: you need to spell out the terms of the work products.
23:16 < alex4nder> if you don't have that, it defaults to your jurisdiction.
23:16 <@teadict> I don't mind it being open source, I just don't want the client to sell the app 
23:17 <@teadict> alex4nder: I see what you point out...
23:17 < owen1> AviMarcus: true about killing the execution. what about console.logs? i want to behave as a good unix citizen. should i write to 2 seperate files instead of console.log? error file and non-error file?
23:17 < alex4nder> teadict: and clients get confused.
23:17 < alex4nder> teadict: I would set their expectation based on what you want.
23:18 < kennethkoontz> teadict: Have you looked at the licenses? http://en.wikipedia.org/wiki/Comparison_of_free_software_licenses
23:18 < yarekt1> teadict: Node's license is MIT, that pretty much means you can do anything you want with it. including adding your own license restrictions on its resale
23:18 <@teadict> yarekt1: Can't I put a file in the app's root path stating all of this?
23:18 <@AviMarcus> yes and no, owen1, I'd say it's mostly up to you..
23:18 <@AviMarcus> unless your planning on distributing this?
23:18 <@teadict> kennethkoontz: Yes, thanks, I know that the app being MIT because of node the consequences are those
23:19 <@Lorentz> teadict: I really suggest you talk to a lawyer instead of trying to wing it
23:19 < yarekt1> teadict: not sure, generally, people just add copyright notices to the headers of every file. Its a bit of a pain, but everyones doing it =P
23:19 <@teadict> That seems too much...
23:19 <@teadict> Is that the only right way? ^.-
23:19 <@teadict> Then a file with a note stating it doesn't count? 
23:19 <@Lorentz> it might be the only right way as current industry standard practice
23:19 < yarekt1> teadict: its the only way i know
23:19 <@teadict> Dang
23:19 <@Lorentz> but, again, lawyer
23:20 <@teadict> Yes, I'll try to talk to one tomorrow
23:20 <@teadict> Or google the law side of it..
23:20 < yarekt1> teadict: node may be MIT, but technically you aren't including its source, you are just using it to run your source
23:20 <@Lorentz> I wouldn't google these things up
23:20 <@Lorentz> go talk to a lawyer
23:20 < owen1> AviMarcus: yes for 2 different files instead of console.log ? sorry but i didn't understand your last reply.
23:20 <@teadict> yarekt1: Yes, of course, i'm not selling them the node install, hehe, just the code aside it
23:21 <@teadict> Lorentz: Yes, thank you
23:21 < yarekt1> teadict: you can add any license you wish on it
23:21 <@teadict> yarekt1: That's understood
23:21 <@teadict> yarekt1: The issue is the process
23:21 < alex4nder> teadict: the license file isn't going to prevent them from selling it
23:21 <@teadict> Adding a header ugh
23:21 < alex4nder> teadict: if they can argue before a judge that they own it, your copyright header means nothing since it was a work product.
23:21 <@teadict> alex4nder: That's very true...
23:21 < yarekt1> teadict: whats wrong with it? its not that ugly
23:21 <@AviMarcus> owen1, console.error([data], [...])# Same as console.log but prints to stderr. -- http://nodejs.org/api/stdio.html
23:22 <@teadict> Well, I don't think they will sell it anyway, it's a prevention, they have no intentions
23:22 < owen1> AviMarcus: awesome!
23:22 <@teadict> yarekt1: By header you mean a comment at the beginning of the file? 
23:22 < yarekt1> teadict: yup
23:22 <@teadict> yarekt1: That's not that bad no; I thought of modyfing the file headers internally...
23:22 <@teadict> yarekt1: Oh... I could do that...
23:22 < yarekt1> teadict: huh?
23:22 <@teadict> yarekt1: I'm gonna look a sample, thanks
23:23 <@teadict> yarekt1: Nothing, I thought of something weird, nevermind
23:23 <@teadict> Misunderstood
23:24 <@teadict> This seems about right: http://stackoverflow.com/questions/1017613/code-header-for-proprietary-code
23:24 < coderarity> ops plz
23:24 <@teadict> coderarity: I'll stop now, sorry
23:25 < yarekt1> teadict: find . -type f -name '*.js' -exec cat ~/notice.txt {} > {} \;
23:25 <@teadict> But you've been all very helpful... I think a file header is a pretty good meassure
23:25 <@coderarity> ?
23:25 <@coderarity> i was just requesting +o
23:25 <@teadict> coderarity: Oh, I thought you were mad at me ): heh
23:25 < yarekt1> teadict: not tested though, don't blame me if it erases your sources =D
23:25 <@teadict> yarekt1: hehe, I'll tune it up, thank you
23:26 <@teadict> yarekt1: Thanks for your time, I think a file header will do more than good... Client doesn't really know about software like at all, this will scare them
23:26 <@teadict> P.S.: I've promoted Open Source all my life, but you know... Freelancer's gotta eat heh
23:27 < owen1> AviMarcus: i read about console.log and it say "prints to stdout". so on production i can set stdout to be a file, maybe by passing STDOUT=log_file to my node server?
23:27 <@coderarity> scaring clients is good business practice
23:27 < yarekt1> Well, its a pretty common thing. We add notices to everything at work. Its just how it works =/
23:27 <@AviMarcus> owen1, you don't pass STDOUT to node .. you do that on the CLI
23:28 < owen1> AviMarcus: STDOUT=log_file node server.js
23:28 <@thisandagain> ping felixge
23:28 < felixge> thisandagain: pong
23:29 <@thisandagain> you folks experiencing any issues with the transloadit API?
23:29 < felixge> seeing a few exceptions
23:29 < felixge> let me investigate
23:29 < felixge> what problems do you have?
23:29 <@AviMarcus> uh owen1 ok then. I only know 1> and the like.
23:29 <@teadict> yarekt1: I hear ya
23:29 <@AviMarcus> actually, I don't know, I've seen.
23:29 < felixge> demos are working
23:30 <@thisandagain> huh... status is hanging and I can't seem to view any assembly info (e.g. e6918422ce115e97338d1031622fbd66)
23:30 < felixge> seems like there were a few S3 write failures
23:31 < felixge> thisandagain: ok, seeing that as well
23:32 < felixge> thisandagain: that assembly ended up loading for me
23:32 < felixge> but took very long
23:33 < yarekt1> so with node+websockets, Getting couple of thousand rows and sending them to clients. Is it better the send the whole array in one go, and let websockets chunk it. Or send it in batches of say 100. Or send each row as an individual websocket message ?
23:33 < felixge> thisandagain: seems like our mysql read slave is swapping
23:33 <@thisandagain> felixge: hmm... i'm not seeing any notifications coming back to us.
23:34 < felixge> thisandagain: something may have broken with that assembly
23:34 <@thisandagain> felixge: gotcha. just wanted to double check to make sure I wasn't seeing something isolated to us.
23:34 < felixge> thisandagain: does it also happen for new ones?
23:34 <@thisandagain> felixge: yup.
23:35 < yanush> Hi, maybe someone can take a look: http://stackoverflow.com/questions/11674661/clustering-in-node-js-fails-in-azure-emulator-or-azure-vm-with-ebadf   been banging my head on this badly :(
23:38 < felixge> thisandagain: can you show me another id?
23:42 <@thisandagain> felixge: 8fc14ecf4a264cd477afd44a6faaa264
23:47 <@thisandagain> felixge: e4a68557b7e5262df5ebeb34c43a44e1
23:50 < felixge> thisandagain: no callbacks either?
23:50 < felixge> * notifications?
23:51 < yarekt1> Everytime i work with node, i need a little reminder for whenever i get stuck: "Callbacks"
23:51 <@thisandagain> felixge: yeah, i'm not seeing any notifications coming through
23:51 < felixge> hm
23:51 < felixge> thisandagain: did you change anything on your end?
23:52 < felixge> can you show me the assembly params?
23:52 <@thisandagain> no... we've been steady state for over a month in terms of assembly
23:52 < owen1> what's the recomended way to install redis and couch on a mac?
23:53 < lohkey> owen1, use homebrew
23:56 <@CIA-93> node: Ben Noordhuis master * rc3d4c35 / src/node.h : node: bump NODE_MODULE_VERSION - http://git.io/JNOwuw
23:56 <@CIA-93> node: Ben Noordhuis master * rf692347 / src/node.cc : node: don't scan add-on for "init" symbol - http://git.io/FVwO-Q
23:57 < owen1> lohkey: couchdb installation gave me: conftest.c:11:10: fatal error: 'ac_nonexistent.h' file not found
--- Log closed Fri Jul 27 00:00:30 2012
