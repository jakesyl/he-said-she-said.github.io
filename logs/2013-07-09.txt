--- Log opened Tue Jul 09 00:00:11 2013
00:01 < neeky> is npm install supposed to work with a dependency that has a github https:// url?  
00:01 < neeky> I ca only seem to get it to work with a git:// url
00:02 < neeky> I forked a project and want to install my copy, but it only seems to work with git://, but the docs seem to say that https:// is the proper url format
00:02 < garthk> neeky: I think npm assumes it's getting a tarball if the protocol is http or https.
00:02 < SomeoneWeird> correct
00:03 < neeky> ah, ok
00:03 < neeky> so npm install https://githuburl should be a tarball, not just a repo
00:05 < altusllc> building a web app with angular and right now i've got it split into two repos, one for angular and the web layer, the other for API, is that a good approach?
00:05 < garthk> neeky: example: https://codeload.github.com/Obvious/kew/tar.gz/master
00:05 < altusllc> i had started with them all in the same place but it didn't seem like a clean separation of concerns
00:05 < chiel> any of you have problems before with connect.bodyParser, combined with the connect-redis lib?
00:06 < garthk> Where you can replace Obvious with any user, kew with any repo name, and master with any branch or tag name.
00:06 < garthk> chiel: I had trouble with middleware ordering: however I tried, I couldn't ensure bodyParser ran before my custom middleware. 
00:15 <@MI6> joyent/node: Timothy J Fontaine master * 2fc34d7 : tls_wrap: return Error not throw for missing cert - http://git.io/tg7uog
00:15 < chiel> garthk: yeah, i have no idea what's going on
00:17 < astropirate> ʘ‿ʘ
00:26 < andrewaclt> Any idea why I would see [ReferenceError: process is not defined] * 50 when running a node debugger?
00:37 < alasi> I want to serve the socket.io.js client using express.static. But the socket.io folder isn't being served on my heroku app!
00:38 < ningu> by default it serves it on its own
00:45 < alasi> ningu: WHERE!?!?!?
00:45 < alasi> It's not serving..
00:48 <@isaacbw> did you ask it nicely?
00:48 < alasi> Where is it being served?
00:48 < alasi> :P
00:48 <@isaacbw> no, ask socket.io
00:48 <@isaacbw> "please serve me the file" or something like that
00:48 <@isaacbw> being nice pays off
00:49 < alasi> isaacbw: They're.. like.. tumbleweeds..
00:49 <@isaacbw> what
00:49 <@isaacbw> curl --data "Where is the damned file?" localhost:8080
00:50 < alasi> Could you give an example with the placeholders filled in, isaacbw Please?
00:50 < alasi> IK you wouldnt query a terminal where is the damned fule?
00:50 <@isaacbw> curl --data "Please tell me where the file is?" localhost:8080
00:50 < alasi> *file
00:51 < alasi> sure ok
00:51 < alasi> "Cannot POST /"
00:53 < alasi> isaacbw Cannot POST /
00:53 <@isaacbw> then I think you're out of luck
00:54 < alasi> ..
00:54 < alasi> hang on...
00:54 <@isaacbw> seriously though, we can't help at all without seeing some code
00:54 <@isaacbw> "it doesn't work" doesn't give anyone much to work with
00:54 <@isaacbw> have you been able to use it locally?
00:54 <@isaacbw> does it just break when you deploy to heroku?
00:55 < ozette> alasi, where is your socket.io listening on?
00:55 < alasi> 5000
00:55 -!- mode/#Node.js [+o TooTallNate] by ChanServ
00:55 < ozette> and your app?
00:56 < alasi> isaacbw, it doesnt work locally either now
00:56 <@isaacbw> now?
00:56 <@isaacbw> what changed
00:56 < alasi> ozette, my-heroku-app.herokuapp.com:5000
00:56 < alasi> isaacbw: IDK, I was trying to serve both files, now my client js is working but socket js is not.
00:56 < alasi> both jses
00:57 < ozette> alasi, are you sure that is a valid link?
00:57 <@isaacbw> still can't help much without you sharing code
00:57 < alasi> ozette: I'm just giving an example
00:57 < alasi> isaacbw: I'll get some
00:58 <@isaacbw> yea, you get some
00:59 <@isaacbw> alasi: I'm sorry, I feel like my dry responses are going over your head
00:59 < alasi> isaacbw: I'm so desperate right now.. I really want to get this thing f*cking deployed
01:00 <@isaacbw> if something stops working, revert
01:01 < ozette> alasi, i mean what did you configure your express application to listen on?
01:02 < alasi> ozette: ?
01:02 < alasi> isaacbw: https://gist.github.com/a9io/af3a7fc80455a55a1fc6
01:02 < alasi> isaacbw: Revert to what? Then neither of the js files will be served -.0
01:03 < ozette> you are trying to serve the socket.io client script correct? which actually as nin gu said is automatically served
01:04 < ningu> alasi: how are you loading it, do you have a script tag with a link to /socket.io/socket.io.js?
01:04 < alasi> ningu: yes
01:04 < ozette> alasi, fix a route
01:04 < alasi> The thing is that socket.io.js is 404'd
01:05 < alasi> it's not served if the html calls for it or not
01:05 < ningu> alasi: you said it works locally, but not on heroku?
01:05 < ozette> if you're looking for it on your "application" then yes
01:05 < alasi> ningu: both not working now..
01:05 < ningu> what did you change?
01:05 < ozette> are you using express?
01:05 < ningu> yes, he is
01:05 < ningu> it's in his code
01:06 < ozette> oh didn't take a look
01:06 < alasi> ningu: I tried adding some stuff/subtracting some stuff so that my client.js and socket.io.js is served on heroku
01:06 < xangelo> question: are there any libs for node that can properly parse out a pcap file and give me detailed information?
01:06 < ningu> alasi: what stuff?
01:06 < ningu> if you don't tell us what you're doing we can't help
01:06 < alasi> ningu: I'll show you my original server
01:07 < alasi> https://gist.github.com/anonymous/d533710219c914db1623
01:07 < neeky> anybody have any current backbone js REST client examples?  I'm trying to knoch together a web client for my REST interface using backbone
01:07 < alasi> ^ Worked locally, not herokually
01:08 < azbyin> hi all..
01:08 < neeky> all the examples im finding are months or even years old
01:08 < alasi> ningu^
01:08 < ningu> ok
01:08 < alasi> yeah
01:08 < azbyin> is there a way to check how memory is being used in a nodejs process?
01:08 < ChrisPartridge> neeky: backbone is pretty simple, have a specific issue?
01:09 < ChrisPartridge> azbyin: there's a lib.. node-usage iirc
01:09 < neeky> i've literally just opened the site and started looking
01:09 < azbyin> i'm running an nodejs process on linux and i;m pretty sure when i started it, it wasn;t taking up 30% memory
01:09 < ningu> alasi: ok, and are you sure your urls are correct for the heroku app? right server, right port, right path?
01:09 < neeky> but I find a lack of examples a-la jquery which has an example foe every functions
01:10 < neeky> azbyin, DTrace?
01:10 < ChrisPartridge> No Dtrace on linux
01:10 < alasi> ningu: I don't know what urls there are to declare if everything's relative... 
01:10 < neeky> really? i had no clue
01:10 < azbyin> i'm on linux, if someone can tell me how to use systemtap, i'm be happy
01:11 < ningu> alasi: is the app mounted at a path other than root?
01:11 < alasi> ningu: It's all in the app's folder..
01:11 < ningu> alasi: no, the public url to connect to the app
01:11 < ningu> what is it?
01:12 < fauntle> has anyone run into this issue? https://github.com/isaacs/npm/issues/3638
01:12 < alasi> ningu: You mean the herokuapp url?
01:12 < neeky> I'll do some more digging, it looks like backbone.sync is what I need to be focusing on
01:12 < ningu> yes
01:12 < ningu> I said public
01:12 < alasi> ningu: talking-circles.herokuapp.com
01:12 < fauntle> I'm getting "ERR! not a package" for one of my git dependencies... but it only occurs on one computer
01:12 < alasi> check teh console
01:13 < ChrisPartridge> neeky: yup, that sounds about right
01:14 < ningu> alasi: I dunno, it might be something to do with the config on the heroku server, do you just tell it what port the app is running on or what/
01:14 < alasi> ningu: you don't tell it.. the script listens on a port and that's that
01:14 < neeky> fauntle, is your version of git different?
01:15 < ningu> how does heroku know where to find the app?
01:15 < neeky> on atht one machine?
01:15 < alasi> ningu: It's a git repo
01:15 < alasi> ...
01:15 < alasi> I'm not sure what you mean
01:16 < ningu> alasi: ok, I've got it
01:16 < fauntle> neeky: yeah, his git version is newer
01:16 < ningu> https://gist.github.com/a9io/af3a7fc80455a55a1fc6
01:16 < ningu> swap lines 14 and 15
01:16 < alasi> ningu: A SO question told the opposite.. but ok.....
01:16 < ningu> well they were wrong
01:17 < alasi> hmm
01:17 < alasi> ok
01:17 < alasi> ningu: Locally, it was still 404'd bruh
01:18 < alasi> And I GTG :(
01:19 < ningu> ok, well I just figured it out I think
01:19 < alasi> ningu: OK OK TELL ME TELL ME
01:19 < alasi> and if you come up with more figure out's comment on the gist if you will because I gtg
01:19 < fauntle> neeky: updated my git... doesn't seem to have changed anything
01:19 < ozette> alasi just fix a route to your io port and when your app gets a /socket.io/socket.io.js request
01:19 < fauntle> neeky: failing while trying to run `npm install solidus`
01:20 < ningu> var express = require('express'); var app = express(); var server = express.createServer(app);
01:20 < alasi> ozette: ...I hate to be that guy, but how?
01:20 < ningu> or maybe I'm misremembering how that works in express
01:20 < alasi> ningu: What does that do?
01:20 < ozette> response.redirect(ip+":"+port+"/socket.io/socket.io.js");
01:20 < ozette> where port is the port your socket.io is listening on
01:20 < neeky> that's all I had, looking at the npm error - you might add a -v to increase verboseness of npm and add that to the github issue
01:20 < alasi> ozette: Where should it go, and ip is kept as ip?
01:21 < ningu> alasi: nm
01:21 < ozette> your application is asking for /socket.io/socket.io.js
01:21 < ningu> alasi: like this
01:21 < ozette> i mean your client is*
01:21 < alasi> ozette: and..
01:21 < ningu> var app = require('express')(); .... var server = app.listen(8080);
01:21 < ningu> then pass that server to the io.listen(server)
01:21 < ozette> it should be in a app.get("/socket.io/socket.io.js/", function(req, res)...
01:22 < ningu> ozette: it does that for you automatically if you do what I just said
01:22 < ozette> yes it should do it automatically, but if you want to do it manually this is your answer
01:22 < ozette> it should work, i've done it before..
01:22 < alasi> okay..
01:23 < ningu> https://gist.github.com/kamholz/df6a180f939d97596fab
01:23 < alasi> Will you be here tomorrow.. a little earlier?
01:23 < ningu> alasi: just use that gist
01:23 < ningu> and no, not earlier
01:23 < alasi> ok.. I was asking ozette
01:23 < alasi> GTG :(
01:23 < ozette> im always here
01:23 < ningu> hehe
01:23 < ozette> c ya
01:23 < fauntle> someone will surely be here
01:24 < ozette> lol right
01:27 < sinclair|net> yawn*
01:27 < sinclair|net> hi everybody!
01:27 < ningu> that matches zero or more yawns
01:29 < sinclair|net> ningu: im only yawning because my cat just yawned
01:30 < ningu> they do that
01:30 < sinclair|net> ningu: they sure do, they also lurk
01:31 < fauntle> neeky: it's a little bit unclear when git+http is necessary
01:37 < neeky> I JUST asked that: http:// assumes there is a .tgz on the other end
01:37 < neeky> git:// assumes a git source code repository
01:38 < neeky> so if you have a tgz of the package in git, use http://
01:38 < neeky> otherwise use git://
01:39 < ningu> if I was on a farm I would put my goat in git
01:39 < willwh> ningu: why do you have a goat
01:40 < ningu> farms have goats
01:40 < neeky> if he was on a farm, he'd have one
01:40 < sinclair|net> ningu: version control livestock ?
01:40 < willwh> I see, it sounded like you had a goat >.>
01:40 < mbalho> goat clone
01:40 < mbalho> goat push
01:40 < ningu> I just think it would be fun to say "I'm going to git your goat"
01:40 < mbalho> goat merge
01:40 < ningu> goat rebase
01:41 < mbalho> goat bisect
01:42 < ningu> goat branch... that one is actually realistic, they climb trees
01:42 < mbalho> goat cloning has happened already iirc
01:43 < ningu> http://19.media.tumblr.com/tumblr_ktjjaoozqv1qzvqipo1_500.jpg
01:43 < ningu> yep
01:46 < ChrisPartridge> ningu: lol
01:46  * sinclair|net is having a good day with node
01:56 <@isaacbw> moo
02:05 < azbyin> ChrisPartridge, node-usage simply spits out cpu and mem usage..
02:05 < azbyin> i want to introspect more on the current node process
02:07 < azbyin> the app i'm running uses socket-io, and mongo and i've had it running with a few thousand connections since i started it. I'm not sure if there is some bug somewhere
02:08 < azbyin> current mem usage is 600MB. it doesn;t really do anything other than provide a REST style interface to the data in the mongo db
02:14 < azbyin> ChrisPartridge, https://hacks.mozilla.org/2012/11/tracking-down-memory-leaks-in-node-js-a-node-js-holiday-season/  this looks very interesting
02:18 < neeky> do restify and connect play nice together?
02:18 < neeky> im looking at removing express, but still connect for now
02:19 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:19 < neeky> all I use express for is routing, but i use several connect middlewares
02:20 < neeky> and since they both wrap the node server with a middleware wrapper, I'm thinking i might blow something up
02:21 < owen1> for people that use browserify, on bigger site, when u want to have multiple files that were browesirfied, what do u use? enchilada?
02:21 < NotMyself> neeky it does indeed
02:21 < owen1> https://github.com/shtylman/node-enchilada
02:21 < neeky> NotMyself, I saw this: https://gist.github.com/jmibanez/2140974 and wasn't sure of the context, and if that was "it"
02:22 < neeky> if so, looks easy enough
02:23 < NotMyself> neeky: we use restify pretty heavily and lean on the connect api heavily...
02:23 < neeky> how do you 'hook' connect with restify, in order to do your routes?
02:23 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
02:23 < owen1> neeky: maybe you should use vanilla node? what middlewares do u need? 
02:24 < garthk> neeky: no, you'll need your own middleware. Different API.
02:24 < owen1> if it's auth, i might be able to help u (:
02:24 < neeky> owen1, routes, and session handling with a db backed store
02:24 < NotMyself> neeky have screenhero?
02:24 < neeky> nah, auth is done in-house
02:24 < garthk> Or, I'm completely mistaken. Huh. https://gist.github.com/jmibanez/2140974
02:25 < owen1> neeky: for routes use 'routes'. i use it here - https://github.com/oren/node-website-template
02:25 < neeky> NotMyself, I'm on Linux
02:26 < owen1> neeky: for session use https://github.com/jed/cookies and save the info about the user + id into a db
02:26 < NotMyself> neeky: here is what one of our simple restify servers looks like with middleware… https://gist.github.com/NotMyself/5954207
02:27 < neeky> I'm ok with connect, I just don;t need express, sicne my UI is all static/browserify REST client
02:27 < owen1> jesusabdullah: what's the use case for browserify-cdn
02:27 < owen1> ?
02:28 < sinclair|net> jesusabdullah: ?
02:28 < neeky> NotMyself, using your gist as an example, where would connect fit in there?
02:30 < neeky> owen1, I'm pretty wraapped up with connect until i get time to refactor, but i'm using express just for routing, so that'e the 'low hanging fruit' right no to trim
02:33 < NotMyself> neeky maybe i missunderstood your question… connect is a set of functionality that conforms to a specific api ala dosomething(req, res, next)
02:33 < NotMyself> and the connect lib is a set of libs that implement common functionality that consumes that api?
02:34 < owen1> neeky: https://github.com/aaronblohowiak/routes.js is "https://github.com/aaronblohowiak/routes.js"
02:34 < NotMyself> sorry not being to helpful at the moment trying to fix an issue
02:34 < ChrisPartridge> connect defines that interface, express builds on top of it afaik, restify has a similar interface (if not the same)
02:34 < owen1> neeky: "a minimalist url-style routing library, extracted from connect"
02:34 < neeky> NotMyself, no worries
02:36 < neeky> I looked at restify's dependencies, and didn't see connect, so i figured they might conflict. i might try owen1's routes suggestion
02:37 < neeky> NotMyself, I was specifically inquiring about whether connect and restify middleware could both work in an app
02:38 < azbyin> ChrisPartridge, this could be the bug i'm experiencing :)  http://jpallen.net/2013/03/08/tracking-down-a-memory-leak-in-node-js-and-socket-io/
02:38 < neeky> as in using connect's cookieParser, and sessions, and restify's router
02:40 < owen1> neeky: glad to see you're breaking free from frameworks!
02:40 < neeky> im always trying
02:40 < neeky> some things are just so low in the stack it doesnt really make sense, like connect, and underscore
02:41 < neeky> they are just utility belt tools, so i really dont see the need to re-write what im using them for
02:41 < owen1> i am preparing a talk about that - https://github.com/oren/node-guide-talk
02:41 < neeky> but express is somewhat bloated for what i'm using it for
02:41 < owen1> underscore? it's for the browser afak.
02:42 < neeky> and i like the sinatra style middleware pattern
02:42 < neeky> nah, i use underscore for several things
02:42 < NotMyself> underscore has some lovely functional capabilities that i cant do with out, but i use lodash serverside
02:43 < neeky> again, pure utility stuff, nothing i couldn't do myself, but I'm lazy
02:44 < owen1> for those that use browserify, do u create multiple outputs for different pages of your site?
02:45 < owen1> if you do, is it being done in the background during dev time or is it on the fly with something like enchilada?
03:01 < vrlogrs> hi guys
03:02 < vrlogrs> just wanted to showcase a games site primarily using node.js : http://www.funnode.com/home
03:02 <@nexxy> vrlogrs, neat!
03:03 < vrlogrs> nexxy: thanks :)
03:03 < owen1> +1
03:03 < vrlogrs> thanks owen1
03:03 < vrlogrs> if you google +1 or fb-like the site, will be great :D
03:05 < vrlogrs> will help spread the word :)
03:08 < vrlogrs> and any feedback/suggestions for improvements will also be appreciated :)
03:11 < vrlogrs> .. the crowd goes quiet .. :S
03:17 < cramrod> Does anyone have any experience with Transform streams in node?
03:17 <@tjfontaine> it's easier to ask than to ask to ask
03:18 <@nexxy> what if they really just want to know if anyone knows what they're doing?
03:18 <@tjfontaine> does anybody really know what time it is?
03:18 < cramrod> Thats a deep question..
03:19 < mbalho> cramrod: require('through') #protip
03:22 < snoj> interesting, this subway irc client could prove useful.
03:28 < neeky> is ther not a super simple to use hogan.js node wrapper that lets me define a layout.hjs that is my bootstrap template, then us partials to render individual pages in my app?
03:28 < neeky> it seems that's not how people use hogan.js in node
03:29 < neeky> because not one hogan.js wrapper does that
03:29 < a_meteorite> anyone have any experience with mongoose?
03:29 < neeky> i guess i could use hogan on the client side and just serve it staticaly
03:29 < neeky> a_meteorite, a bit
03:30 < a_meteorite> trying to do a two dimensional array of ObjectIds
03:30 < a_meteorite> seems mongoose is not very... fond of that
03:30 < gkatsev> array of array of objectids
03:30 < a_meteorite> yeah
03:31 < a_meteorite> http://pastebin.com/gj9QZrx4
03:31 < a_meteorite> players should be the array of array of objectids
03:31 < neeky> i don't see why it won't
03:31 < ChrisPartridge> neeky: given up on backbone already? :o
03:31 < a_meteorite> I get a nice little error with that
03:31 < neeky> ChrisPartridge, no, but even with backbone, i have the need for some server side templating to make individual page layout simpler
03:32 < gkatsev> a_meteorite: what error?
03:32 < a_meteorite> http://pastebin.com/jaBxGDxk
03:32 < neeky> ChrisPartridge, I'm probably over-thinking it
03:32 < a_meteorite> if I remove the players key, everything is well
03:33 < gkatsev> a_meteorite: what if you just try [[Schema.Types.ObjectId]] rather than [[{type:mongoose.Schema.Type.ObjectId, ref: 'User'}]]?
03:33 < gkatsev> I guess mongoose.Schema.Types.ObjectId
03:34 < a_meteorite> same problem
03:34 < gkatsev> but otherwise, I guess it's possible that mongoose just can't handle this case in the schema.
03:34 < a_meteorite> that's a bummer if so
03:34 < neeky> but on a page say http://myapp/user, I want to define the layout with a boostrap template, and define the model and backbone stuff in 'views/user.js'n and combine them into an html file that the clinet renders
03:34 < a_meteorite> already had to do mixed, looks like even more mixed is in store for me :)
03:34 < neeky> but that sort of breaks the 'single page app' pattern
03:34 < gkatsev> a_meteorite: there's #mongoosejs
03:35 < gkatsev> a_meteorite: also http://mongoosejs.com/#support
03:35 < neeky> mongoosejs is dead 99.9%
03:35 < gkatsev> which is why I also linked to the #support
03:36 < a_meteorite> ahh I missed that on the site and #mongoose was pretty empty
03:36 < neeky> a_meteorite, I do this in a schema and it works fine
03:36 < ChrisPartridge> neeky: https://github.com/airbnb/rendr - airbnb's attempt at what you're trying to do. Otherwise it might be worth looking at substacks https://github.com/substack/hyperspace/
03:36 < neeky> let me stare at  it for a sec
03:36 < a_meteorite> neeky: you did [[Schema.Types.ObjectId]]?
03:36 < gkatsev> rendr is backbone specific, though
03:36 < ChrisPartridge> gkatsev: yes, we were talking backbone
03:36 < gkatsev> ah, cool
03:37 < neeky> Im trying to be a 'purist' and use hogan.js, but that may be me being a tool
03:37 < gkatsev> I've been using LayoutManager, it can do serverside rendering, supposedly. But haven't tried it myself yet
03:37 < neeky> a_meteorite, yeah
03:38 < a_meteorite> neeky: hmmm, odd, because that doesn't work here :S (swap out my players key in the pastebin for players: [[mongoose.Schema.Types.ObjectId]])
03:38 < neeky> a_meteorite, wait, no, not [[]].
03:38 < neeky> hmmm
03:38 < a_meteorite> yeah it needs to be two dimensional
03:38 < a_meteorite> mongoose is fine with []
03:39 < neeky> may i ask what the pattern of the 2d array is?
03:39 < a_meteorite> it's to store what players are in the game across multiple rounds
03:40 < a_meteorite> so for example... players = [[ "RealUserID1", "RealUserID2", "RealUserID3", "RealUserID4" ], [ "RealUserID2", "RealUserID3" ]] where RealUserIDs are really ObjectIDs
03:40 < neeky> foir grins, have to tried players:{[{[]}]}?
03:40 < a_meteorite> heh
03:40 < a_meteorite> let me give that a shot
03:40 < neeky> since the array is an object, it wants to be in {}
03:41 < neeky> s, players:{[{[{type:bkab, ref:'User'}]}]}
03:42 < neeky> sorry, players:[{[{type:'objectId', ref:'User'}]}],
03:43 < a_meteorite> get a syntax error on the second opening [
03:43 < neeky> now, what I HAVE done is something like: players:[playerschema],
03:43 < a_meteorite> yeah I think sub-document would be a way around this
03:43 < neeky> the var playerschema = new Schema([{player:]}
03:44 < a_meteorite> but then it'd be players = [{players:[blah,blah]},{players:[blah]}] I think
03:44 < neeky> and players can be self referential
03:45 < neeky> so playserschema can also ref:'playerschema' if needed
03:45 < a_meteorite> eep, yeah
03:46 < neeky> I do version control on doicuments this way
03:46 < a_meteorite> I might just do mixed... I already have a lot of validation in the middleware needed
03:46 < a_meteorite> so this won't be a whole lot more anyways :)
03:47 < neeky> nah
03:47 < a_meteorite> I have to let my brain rest from this, maybe I'll think of something nicer
03:48 < neeky> you could store objectId's as strings and do the relations in middleware
03:49 < a_meteorite> that crossed my mind
03:51 < neeky> ChrisPartridge, rendr may work fine
03:52 < neeky> i probably need to look at the proper way to do a single page app with REST and backboneb because I still see the need for layout + pagelogic = client side html
03:52 < neeky> to keep layout consistent across the app
03:54 < neeky> yeah, render is exactly what my feeble brain is syaing I need
04:12 < jdelgado> isaacbw: So that phone place I recommended you to.. I just found out they have voice recognition built in - damnn
04:18 < bzitzow> http { [Error: read ECONNRESET] code: 'ECONNRESET', errno: 'ECONNRESET', syscall: 'read' }
04:18 < bzitzow> Trying to connect to https url
04:18 < ningu> and failing
04:18 < ningu> bzitzow: what happens if you do curl -v <url>?
04:18 < ningu> that might help
04:18 < owen1> for currying, is it better to return function or should i use bind?
04:19 < owen1> i read http://josephmoniz.github.io/blog/2011/12/26/bind-vs-curry/ but not sure if i agree
04:19 < owen1> they say to use bind only for contex binding and not currying
04:19 < mscdex> owen1: just return a function
04:20 < owen1> mscdex: ok. so when do u use bind?
04:20 < mscdex> owen1: never
04:20 < owen1> oh
04:20 < garthk> owen1: I used to use bind a lot. Then I got better at closing over values instead of binding to contexts.
04:20 < owen1> that's just your style?
04:21 < bzitzow> ningu, can i do basic auth with curl -v url?
04:21 < bzitzow> http auth
04:21 < owen1> garthk: thanks
04:21 < ningu> bzitzow: yes
04:21 < mscdex> owen1: i think .bind() incurs a performance penalty still
04:21 < ningu> there are username and password options, i think just --user=foo --password=bar but look it up
04:21 < owen1> mscdex: true
04:21 < owen1> the v8 doesn't like it
04:22 < pierre1> Hi. Apparently res.write scapes my html chracters (res.write("<button>hi</button>") doesn't work). Is that so? How can I go around it?
04:22 < mscdex> owen1: also, just returning a function is less magic
04:22 < mscdex> owen1: more readable
04:22 < mscdex> IMHO
04:22 < ningu> pierre1: I don't think it escapes them
04:22 < owen1> mscdex: agree
04:23 < pierre1> really? what's wrong then? the mime-type?
04:23 < garthk> mscdex: that was what encouraged me to get better at closing. 
04:24 < pierre1> oh, I see, Content-Type was set to "text/plain", instead of "text/html"
04:24 < pierre1> ningu, thanks
04:24 < garthk> Wondering how much pain I'm lining up contemplating using Shepherd through Browserify. https://github.com/obvious/shepherd
04:25 < mscdex> garthk: depends on the size of the flock
04:26 < garthk> I guess I could try to introduce Angular at the client end… http://docs.angularjs.org/guide/di
04:26 < AWinterman> wow shepherd loooks cool
04:26 < bzitzow> it works with an ssl connection
04:27 < garthk> mscdex: 94 functions in 12 files, calling each other in unpredictable directions. I'm finding it hard to navigate.
04:27 < bzitzow> It negotiates the ssl connection and then sends back a wsdl file
04:27 < ningu> bzitzow: ok
04:27 < ningu> are you doing something different in your node request?
04:28 < bzitzow> No
04:28 < bzitzow> I'm setting the Authorization header
04:28 < bzitzow> it works when I don't do ssl
04:28 < ningu> hrm
04:29 < bzitzow> the options for the request list 'protocol': 'https'
04:29 < ningu> and you are using the https module rather than http?
04:29 < ningu> oh
04:29 < garthk> Each of the 12 files sets a global and then fills a sub-member, e.g. appname-component.js: var APP = APP || {}; APP.Component = APP.Component || { functionName: function(…) { … }, functionName2: function(…) { … } … };
04:30 < ningu> bzitzow: is this mikeal's request module?
04:30 < garthk> And then the page pulls in each file in a <script> tag. I'm new to front-end development. Is that typical? I usually treat having to grep my way around  a code base as a code smell.
04:30 < bzitzow> ningu, yes
04:30 < bzitzow> ningu, wait ... 
04:31 < bzitzow> I'm using this library and tracking it ... https://github.com/milewise/node-soap
04:31 < bzitzow> ningu, yes: // Copyright 2010-2012 Mikeal Rogers
04:31 < ningu> huh?
04:32 < ningu> bzitzow: it might help if you gist the code, just remove the auth header part
04:32 < bzitzow> ningu, yes, it's mikeal's request module
04:32 < ningu> ok, but mikeal's request module doesn't take a protocol: option, it just detects the url scheme
04:35 < mrose17> anyone familiar with https.createServer(…) and .on('connect', …) ?
04:35 < AAA_awright> What about it?
04:35 < mrose17> thanks. take a look at https://gist.github.com/mrose17/5954723
04:36 < mrose17> in brief, i suspect that when an https server receives a CONNECT event, that the socket that gets passed is ciphertext not plaintext
04:37 < AAA_awright> Well first, I hope that certificate isn't protecting anything sensitive
04:37 < mrose17> no. it's a temporary cert i generates just for the gist
04:38 < mrose17> sorry, bad typing: it's a temporary cert that was generated just for use in the gist
04:39 < faern> 06:35:11       mrose17 │ in brief, i suspect that when an https    │ Adawerk
04:40 < faern> Oops. Failpaste
04:40 < ningu> mrose17: out of curiosity, why are you writing your own websocket server?
04:41 < ningu> mrose17: unfortunately, I don't (think I) know enough to help with your issue, but maybe someone else here does. the error is a bit odd.
04:42 < mrose17> ningu: https://github.com/mrose17/node-rendezvous — it lets a server sitting behind a NAT connect to a public server and wait for incoming connections. it's sort of like "zeroconf for proxy"
04:42 < ningu> also, http://blog.kaazing.com/2012/05/09/inspecting-websocket-traffic-with-chrome-developer-tools/
04:42 < mrose17> thanks. let me take a look at that.
04:45 < ningu> the response has, Sec-WebSocket-Accept:U6FvVSkisuDy3KmTLtgZHG77HB4=
04:45 < AAA_awright> I'm not sure what to say, except I know enabling compression on HTTPS is considered bad, that actually can leak information in some cases. I'm not sure if that error message is related to this fact.
04:46 < ningu> maybe that header is normal, I dunno.
04:46 < mrose17> i've read about that ('https compression considered harmful'). what i'm trying to figure out is that when i use an http path it all works brilliantly, but when i make the path https, it goes sideways.
04:47 < mrose17> well, i've got about 3 or 4 paths to check out… just wanted to see if anyone had actually done node code with https and connect… if this is a real bug(?) i guess i'm not deploying that package on a PAAS provider (sigh).
04:59 < garthk> Anyone else having trouble with 'npm install tap'?
05:11  * garthk switches to substack/tape.
05:59 < xangelo> can anyone point me at some information regarding reading pcap files in nodejs?
05:59 < xangelo> I've checked out pcap-parser but that seems to omitt a LOT of information
06:00 < xangelo> namely, ips + ports
06:00 < ChrisPartridge> xangelo: there is a pcap bindings lib, might have better luck with that
06:01 < mrose17> xangelo: probably the thing to do is to post an issue against @mranney's node_pcap asking if there is a facility to do what you want.
06:02 < azbyin> mrose17, i was just going to recommend that https://github.com/mranney/node_pcap
06:02 < azbyin> hes using pcap-parser
06:02 < azbyin> by 'he', i mean xangelo 
06:02 < ChrisPartridge> node_pcap should give you everything you need
06:03 < xangelo> cool, thanks all
06:03 < mrose17> ChrisPartridge: i think the issue is that he wants to read existing files not capture new streams… but i could be wrong
06:04 < xangelo> mrose17: that's right, I thought node-pcap didn't do that, but I may be wrong
06:05 < ChrisPartridge> mrose17: ah, well you could always take the decoding stuff out of node_pcap and publish it to a seperate module
06:05 < azbyin> there exists var packet = pcap.decode.packet(raw_packet); tcp_tracker.track_packet(packet);
06:05 < xangelo> so I could theoretically grab the raw packet out of the pcap file and run it through that....
06:05 < azbyin> just look at the readme.md first then decide to look at the code, then decide to not use the module
06:06 < ChrisPartridge> xangelo: possibly, not sure what the difference is between the file format though
06:07 < azbyin> if you have the raw packet, you just var pcap = require('pcap'); pcap.decode.packet(myraw_packet);  no?
06:07 < azbyin> raw_packet is a Buffer object with the raw bytes returned by libpcap
06:08 < azbyin> according to the..... drumroll.... readme.md
06:08 < azbyin> dude, read the file!
06:09 < owen1> anyone is using --prof to understand how much time is spent on what?
06:09 <@tjfontaine> I've done it, what's up?
06:09 < xangelo> azbyin: I'm trying to figure out the format of the .pcap file so that I can extract the packets
06:10 < oti8> I am having serious issue with a custom multi-player matchmaking module that I wrote. Anybody have experience with multiplayer game matching?
06:11 < azbyin> from my understanding (without reading any of node-pcap's code), you simply need to read the raw bytes into a buffer and ask pcap.decode to decode it
06:12 < azbyin> owen1, is the question forthcoming to which perhaps tjfontaine will provide an answer? i want to hear this discussion/conversation
06:13 < ChrisPartridge> owen1: if you have access to smartos (or dtrace anywhere) http://blog.nodejs.org/2012/04/25/profiling-node-js/
06:16 <@MI6> joyent/node: Trevor Norris master * b8ce1da : buffer: propagate originating parent - http://git.io/npIbnQ
06:32 < sinclair|net> oh wow, i just think i have found a bug in node
06:35 < owen1> azbyin: ChrisPartridge not using smartos. linux box. i heard that with --prof there is a way to understand the time spend on each part of my app.
06:36 < owen1> i know that --prof dump a file. and i can use that file to find that insights. not sure what i am suppose to do with that file.
06:36 <@tjfontaine> you need to postprocess the file
06:37 <@tjfontaine> with a tick processor
06:37 < owen1> that sounds easy! thanks
06:37  * owen1 rushing to google...
06:37 <@tjfontaine> there are some distributed with v8, and some available in npm
06:38 <@tjfontaine> https://npmjs.org/package/tick seems reasonable
06:40 < giskard_> Hello.
06:42 < giskard_> I don't know a lot on npm, but, well, I'm trying to install one package with npm install -g --prefix "$pkgdir/usr" $_npmname@$_npmver
06:43 < giskard_> but npm install stuff in my ~/.npm, and put things referencing to ~/.npm in /usr/local
06:43 < giskard_> How to avoid that ?
06:44 < ChrisPartridge> is --prefix even an option on npm install?
06:45 < owen1> tjfontaine: trying it. thanks
06:45 < giskard_> ChrisPartridge: well, I didn't find it, but one package in my distribution, npm2PKGBUILD use it
06:45 < giskard_> and I see no errors, so… But I can do without that.
06:46 < ChrisPartridge> well, passing -g is going to try install it globally
06:46 < giskard_> then why it downloads stuff in my home ?
06:50 < ChrisPartridge> giskard_: proably depends on how node/npm was installed/configured
06:51 < giskard_> ChrisPartridge: ok
06:51 < giskard_> ty.
06:59 < owen1> azbyin: tjfontaine OMG it works. i see the output from the tick processor! i don't know what all that means but it's cool!
06:59 <@trevnorris> owen1: about using --prof. it's going to be easiest to grab the v8 repo itself (github.com/v8/v8) then checkout the version of v8 that node is using
07:01 <@trevnorris> owen1: then make native. after that run ./tools/*-tick-processor /path/to/v8.log (there's linux, windows, mac and freebsd)
07:02 <@trevnorris> owen1: if you don't use the same version of v8 as node is running on then it's likely that ticks will be read as "unknown"
07:02 < owen1> trevnorris: i see about 10 lines at the top that looks like: line 4820: unknown code state: 0x7fff9037af98
07:02 < owen1> but that's all the 'unknown' i see in that file
07:03 <@trevnorris> owen1: are you talking about the v8.log file?
07:03 < owen1> no, the output of https://github.com/sidorares/node-tick
07:10 < owen1> here is the output of node-tick - http://pastebin.com/wmjYS8kL  can someone give me a quick overview of reading this file?
07:16 < Reventlov> Re
07:16 < Reventlov> So, how do you install npm package globally ? What is your configuration ?
07:17 < Reventlov> I mean, you keep downloading stuff in ~/.npm, then delet it ?
07:19 < owen1> Reventlov: i didn't realize it's in .npm. i got 258M there!
07:20 < Reventlov> yes, me too, and i'm trying to do an archlinux "clean" package
07:20 < Reventlov> i.e. not putting stuff in user's ~/
07:21 < khurram> hello everyone
07:22 <@trevnorris> owen1: at every n cycles --prof will take a peek at what's going on. this gives you an idea of what's going on under the hood.
07:22 <@trevnorris> owen1: though it's not an exact time measurement of how long things take
07:22 < khurram> i am very new to Node and have successfully installed it many times and express frame work etc , I am stuck how can i have req and response objects visible in all the other files i create ?
07:23 < khurram> for example i have app.js as my main file , then i want to have blog.js file and inside that file i want to use request and response objects ?
07:23 < khurram> can some please throw light on it
07:24 <@trevnorris> owen1: i'd pay most attention to [
07:24 <@trevnorris> [JavaScript] and [GC] if you're not writing native modules
07:25 <@trevnorris> the [Bottom up (heavy) profile] is useful to see what's calling the methods that are taking the most time, which you can see under [JavaScript]
07:28 < owen1> trevnorris: insighful
07:28 < ningu> kuuranne: in blog.js, module.exports = function(app) { app.get('/foo', ...) } and in app.js require('./blog')(app);
07:28 <@trevnorris> owen1: though I usually use that more when developing native modules
07:28 <@trevnorris> owen1: i'd try running the app with "--trace-opt --trace-deopt --trace-inlining --code-comments"
07:29 <@trevnorris> owen1: that will give you more specific js code related information
07:29 <@trevnorris> owen1: and if you really want to get down, visit http://web.irhydra.googlecode.com/git/hydra.html
07:30 <@trevnorris> owen1: you'll have to build node with GYP_DEFINES="v8_enable_disassembler=1 v8_object_print=1" ./configure; make -j8
07:31 <@trevnorris> owen1: then run your script like so: /path/to/node --trace-hydrogen --trace-deopt --code-comments --print-opt-code script.js > code.asm
07:31 <@trevnorris> owen1: when you're done load the hydrogen*.cfg and code.asm into the complication artifacts in IRHydra
07:33 <@trevnorris> owen1: this will help you see your deopts, and also help identify polymorphic code.
07:35 < owen1> TAKE THAT SMARTOS (:
07:35 <@trevnorris> heh
07:35 <@trevnorris> we're just scratching the surface :)
07:36 <@trevnorris> owen1: the last possibly useful one is --ll_prof
07:36 < owen1> i was very impressed with Max's session at nodeconf. first time looking at syscalls and going a bit lower in my node adventure
07:37 <@trevnorris> yeah. understanding that stuff can really help
07:37 < owen1> and loved the fact that u mentioned a few times during your buffers talk the fact that u'r new to c++
07:37 < [AD]Turbo> hola
07:38 < khurram> ningu: thanks but im bit confused if the request, and response both are available inside the blog.js  if i require blog.js in app.js ?
07:38 < owen1> make all the pod people like u seems a bit human
07:38 <@trevnorris> heh, thanks
07:39 <@trevnorris> and actually that was my first talk on node.
07:39 < owen1> oh. what do u usualy talk about?
07:40 <@trevnorris> um. let me rephrase. that was my first public talk on anything technical.
07:41 < owen1> kid, i see a great future ahead (:
07:41 <@trevnorris> hah. thanks
07:41 < ChrisPartridge> with the surname norris, you can't go wrong ;)
07:42 < owen1> you should write a blog post: poor man's new relic 
07:42 < owen1> or something similar
07:42 < owen1> profiling node for dummies
07:43 <@trevnorris> cool. i'll try to put some time into that. make it a series.
07:44 < jesusabdullah> Does anyone know of a terminal colors module that doesn't punch the string prototype?
07:45 <@trevnorris> owen1: last thing then have to hit the sack. not sure if you've used perf before
07:45 <@trevnorris> but start by: sudo sysctl kernel/kptr_restrict=0
07:46 <@trevnorris> then run the following: perf record -R -e cycles -c 100000 -f -i /path/to/node --ll-prof ./script 
07:46 < owen1> is this related to hydra?
07:47 <@trevnorris> no, it's a v8 built in
07:47 <@trevnorris> basically it combines the output of perf and --prof
07:47 <@trevnorris> so you get uber specific performance details
07:47 < owen1> ok. so perf is a different utility.
07:48 <@trevnorris> yeah
07:48 < khurram> trevnorris: can you please help me a bit 
07:49 <@trevnorris> probably can get it from your package manager. part of the linux-tools package
07:49 <@trevnorris> khurram: shoot
07:49 < khurram> i want to have request , response objects i receive in createServer function to be availble in the blog.js file as well 
07:49 < khurram> so basically i have server.js file and blog.js file only two files
07:49 < khurram> i want to have req, res objects passed to every module i am about to create 
07:49 <@trevnorris> owen1: last step. run: D8_PATH=/path/to/v8/out/native/ python /path/to/v8/tools/ll_prof.py
07:50 <@trevnorris> owen1: and that will process your data, it might take a while if your perf.data is large
07:50  * owen1 waiting for a blog post (:
07:50 < khurram> Can my server be setup such that it makes the request, response objects Globally available where ever i am and what ever module i am in ?
07:50 <@trevnorris> heh, ok
07:51 <@trevnorris> khurram: well. i'd recommend passing those as function arguments wherever you need them.
07:51 < owen1> not sure if i can follow everything u said, but i am saving our conversation for rainy days..
07:51 < raduu> is having these different versions for socket.io in my npm wrong? ├─┬ socket.io@0.9.14
07:51 < raduu> │ └─┬ socket.io-client@0.9.11
07:51 < raduu> because I m getting a lot of warn websocket connection invalid
07:51 < raduu> all of a sudden
07:52 <@trevnorris> khurram: but you could horribly hack it by creating a global object or array and storing them there.
07:52 <@trevnorris> though I wouldn't recommend that technique
07:53 < khurram> trevnorris: thanks for the reply, can you please help me understand how can that be achieved globally variables ? such that if i export.request = server_request_object  and export.response = server_responseObject
07:53 <@trevnorris> owen1: no worries. if I didn't get to work on this full-time probably wouldn't understand it myself. i'll make a more detailed guide about this on my blog.
07:53 < khurram> such that it is available every file like we do in php 
07:53 < khurram> when ever we do $_SERVER array print_r it gives you the server variables that object is global
07:53 < khurram> so in node.js how can i make request and response globally available ?
07:53 <@trevnorris> khurram: sorry, at this point i'll need to see some code. not completely sure what you're looking for
07:54 < khurram> trevnorris: ok i'll do pastebin 
07:54 <@trevnorris> coolio
07:54 < owen1> trevnorris: sweet. i hope it will not be to complex to understand this for someone without c/c++ experience. if u'll be able to pull this off, u'll be a living legend.
07:54 <@trevnorris> heh, thanks :)
07:56 < owen1> met 2 cools guys from mozilla at nodeconf. one of them is working on the sync feature on FF. thank god because u need a php in cryptography to use it (:
07:56 < khurram> trevnorris: http://jsfiddle.net/uZzpg/
07:56 <@trevnorris> lol
07:57 < FMJaggy> a php in cryptography sounds scary
07:57 < AAA_awright> Say cryptography and I'm running away
07:57 < AAA_awright> Don't design your own crypto, yo
07:57 < FMJaggy> on the bright side you can probably get it from zend for $500
07:59 <@trevnorris> khurram: updated w/ what should work http://jsfiddle.net/uZzpg/1/
07:59 < owen1> trevnorris: https://github.com/zaach
08:02  * sinclair|net looks forward to a night of documentation
08:02 < raduu> hey, isn t it strange that I get websocket connection invalid but it s not followed by a disconnect ?
08:02 <@trevnorris> owen1: cool. if i'm up in sf any time soon i'll have to actually go meet him.
08:03 < khurram> trevnorris: thanks a lot for helping me, so basically i will have to put all the files in a serial way one by one to receive the request, response objects or is there a way i can make them globally available to all of my files ?
08:03 < raduu> usually, I used to get it like: warn: websocket connection invalid
08:03 < raduu> info: transport end (undefined)
08:04 < Reventlov> How to move ~/.node-qyp in another place ?
08:04 < Reventlov> I already moved the cache directory of npm by using npm config set cache
08:04 < ozette> khurram, why do you want to do this?
08:07 <@trevnorris> khurram: i'd completely recommend you always try to pass what you need, where you need it. recovering from errors and doing asynchronous things in general is dangerous when you use a shared global state.
08:07 <@trevnorris> khurram: but in the case you decide to disregard the advise, you can attach stuff to global, which is reachable from all modules
08:08 <@trevnorris> can as in it's technically possible, not as in anyone would ever recommend it
08:08 < khurram> trevnorris: yes that is what i am looking for how to do that , 
08:08 < khurram> trevnorris: like in PHP we have $_REQUEST available on the whole server where ever php file is so the same i want to have with node.js 
08:09 < khurram> ozette: ^
08:09 <@trevnorris> khurram: duable, but dude I don't recommend it. node is async by nature and sharing constantly mutating objects in a global scope is just asking for trouble.
08:09 <@trevnorris> s/duable/doable
08:10 < khurram> trevnorris: then the whole code has to be on the server.js file  or else all the other modules which require REQUEST, RESPONSE have to be inside the createServer function 
08:11 < khurram> so basically createServer function is the only place i have put logic and then taxi the request every where else manually 
08:12 <@trevnorris> khurram: usually devs will write callbacks elsewhere then just pass those as arguments when they're needed. the function bodies don't have to be located in the createServer listener
08:13 <@trevnorris> check the link I gave you. I passed blog() as a function and passed req, res as function arguments
08:13 < khurram> yup that one works perfectly :) 
08:18 <@trevnorris> great. :)
08:22  * owen1 believe that trevnorris is the guy to bring complex topics to the masses
08:22 <@trevnorris> heh. only because I was only recently one of the masses
08:29 < sinclair|net> does anyone here use express as middleware on express?
08:30 < sinclair|net> it should be possible to have say....
08:30 < sinclair|net> var app = express();
08:30 < sinclair|net> var app2 = express();
08:30 < sinclair|net> app.use(app2)
08:30 < sinclair|net> i guess....
08:55 < Reventlov> Any idea on how to change the tmp directory for node-gyp ?
08:59 < ephigenia> is there a way to disable parallel download in "npm install"?
09:08 < Reventlov> I think I have to find how to change the tmp directory for node-gyp ? (i.e. not ~/.node-gyp)
09:09 < r04r> No clue sorry, but I'm curious as to why you want that?
09:11 < Reventlov> r04r: to package one package of nodejs
09:11 < Reventlov> with my distribution package manager
09:11 < Reventlov> I don't want npm to put files in user's home
09:19 < Guest65590> hi there guys. Is there somebody who can help me with nodeio scraper please?
09:28 < PeterNor> HAs anyone used Node-mysql ????
09:28 < PeterNor> How is the Performance ?
09:33 < sdogruyol> PeterNor: week depends on your needs
09:33 < sdogruyol> PeterNor: well*
09:34 < sdogruyol> PeterNor: but it's not so good also you need to handle the connection resets by yourself
09:35 < PeterNor> I mainly use for batch execution ,transactions fails miserably 
09:35 < Reventlov> Any idea on how to change the tmp directory for node-gyp ?
09:35 < PeterNor> sdogruyol should i go for different DB
09:35 < sdogruyol> PeterNor: nah db is not the problem here
09:35 < sdogruyol> PeterNor: it's the driver that fails
09:36 < PeterNor> sdogruyol, Yes ... I dont find the driver fit the needs
09:36 < sdogruyol> PeterNor: have you checked the pure c driver libmysql client for node?
09:36 < dagerik> i need to send email via SMTP server through a proxy. which modules does this? Nodemailer and email.js doesn't seem to support this
09:37 < PeterNor> no
09:37 < PeterNor> i want js based
09:37 < sdogruyol> PeterNor: have you tried Sequelize ? 
09:38 < PeterNor> It's an ORM right ?
09:38 < sdogruyol> PeterNor: yeah orm but has query support as i know also looks better than node-mysql as performance wise
09:40 < PeterNor> I thought of adding ORM as a later feature....errrrr
09:43 < noobee> can i write middleware for jade
09:43 < noobee> i want to convert style='margin:something px' to a class automatically
09:55 < raduu> what does warn websocket connection invalid actually reflects
09:56 < raduu> I used to get it followed by a transport end. but now it s just the warning
09:56 < Reventlov> Any idea on how to change the tmp directory for node-gyp ?
10:20 < wwwq> i need a hint: i m using node.js as a webclient/browser and i would like to store received cookies to a file and reload them on the next time... with request-jar i m able to see an in comming cookie but i have no idea how to handle it - and the strange documentation/stranger examples arent helpful 
10:28 < pirho> wwwq: you're using mikeal's "request" module?
10:28 < pirho> this one? npmjs.org/package/request
10:38 < dagerik> i need to send email via SMTP server through a proxy. which modules does this? Nodemailer and email.js doesn't seem to support this
10:38 < Industrial> Is there a channel for grunt?
10:39 < Industrial> n, #grunt
10:39 < pirho> Industrial: #grunt
10:39 < Industrial> nm*
10:40 < SimonSapin> Hi. https://github.com/andreyvit/json-diff says to just run 'npm test'. What directory should I run that from?
10:40 < SimonSapin> https://npmjs.org/doc/test.html doesn’t say much :/
10:43 < r04r> SimonSapin: same directory as your other npm commands
10:43 < Reventlov> Any idea on how to change the tmp directory for node-gyp ?
10:44 < SimonSapin> r04r: err, I just ran "npm install json-diff" from my home directory
10:44 < SimonSapin> I have no idea how json-diff is packaged
10:45 < r04r> SimonSapin: You should run npm test from the directory where the sources are located. Either grab a copy of them yourself, or attempt to muck around in node_modules
10:46 < r04r> i.e. git clone && cd json-diff && npm test
10:46 < dagerik> i need to send email via SMTP server through a proxy. which modules does this? Nodemailer and email.js doesn't seem to support this
10:46 < SimonSapin> ah, that works better. Thanks r04r
10:50 < wwwq> pirho: yes
10:50 < pirho> you just need {jar: true} then
10:55 < PeterNor> I didnt know multi threading exist in Node.js :P
10:55 < PeterNor> https://github.com/xk/node-threads-a-gogo
11:09 < PeterNor> Which DB to go for Nodejs ?:>?
11:10 < staar2> mongo
11:10 < staar2> mysql, postrge
11:10 < Reventlov>  Any idea on how to change the tmp directory for node-gyp ?
11:11 < staar2> is there any $.extend in node ?
11:12 < mmalecki> PeterNor: whatever works for your project
11:15 < r04r> staar2: http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor 
11:18 < RLa> PeterNor, sqlite works too :)
11:18 < daslicht> how do I access formidable directly in an express app?
11:18 < daslicht> if i do var formidable = require('formidable'); i gen an error that formidable is not found?
11:19 < RLa> daslicht, add formidable as your project dependency
11:19 < daslicht> formidable is already included in express?
11:19 < daslicht> why do i need to add it twice ?
11:19 < RLa> yes, but not in your project
11:20 < daslicht> hm
11:20 < daslicht> ok 
11:20 < RLa> that's how modules work
11:20 < daslicht> so require is not seraching in submodules?
11:20 < daslicht> ok
11:20 < RLa> if you both need it then it would install it as top in node_module hierarchy as needed
11:20 < RLa> and requested versions match
11:21 < daslicht> ok i try to install i t
11:21 < daslicht> it
11:21 < RLa> searching in submodules would give ambiguity
11:21 < daslicht> ok makes sense
11:22 < PeterNor> nosql ?
11:24 < daslicht> when i install fomidable with npm I get :
11:24 < daslicht> daslicht:swig daslicht$ sudo npm install formidable
11:24 < daslicht> npm WARN package.json SWIG-KISS@0.0.1 No repository field.
11:24 < daslicht> what does that error men?
11:24 < daslicht> mean
11:24 < RLa> PeterNor, there is package dirty if you want very simple nosql key-value store
11:25 < RLa> daslicht, that error is self-explaining
11:25 < daslicht> sorry not for me : No repository field. what is that field ?
11:25 < RLa> it shows where is project repo
11:26 < RLa> a git repo on github for example
11:26 < daslicht> http://stackoverflow.com/questions/16827858/npm-warn-package-json
11:26 < daslicht> :D
11:26 < RLa> i have submitted issues/pull requests for some packages and helped to get the warning fixed :)
11:26 < pirho> i've PR'd a bunch of those too
11:27 < RLa> another common issues is missing README
11:27 < pirho> it's just super low priority for people with dozens of packages
11:27 < pirho> unfortunately super annoying for most noders
11:27 < daslicht> heh
11:27 < pirho> just form npm and comment it lol
11:28 < RLa> and large hidden backup files > 10x size of code in package :)
11:28 < pirho> those are rootkits
11:28 < PeterNor> I'm really not sure how many ppl will use my app :P RLa 
11:28 < RLa> oh
11:29 < PeterNor> Although as per my clients requirement some want mysql , postgresql some other want nosql couchdb,mongo
11:32 < pirho> daslicht: BTW this is what you were looking for https://npmjs.org/doc/json.html#repository
11:32 < daslicht> cool formidable is now working
11:32 < pirho> it should have always been working, that's just a warning
11:32 < daslicht> uyeh i do 
11:32 < daslicht> yeah
11:32 < daslicht> thanks
11:39 < PeterNor> Node.js is like Hell ...I never knew it's getting popular as java
11:45 < serapath> hi
11:45 < daslicht> i love node
11:45 < serapath> me too
11:45 < serapath> :-)
11:46 < daslicht> it would be awesome tho if i could get codecompletion as it was working with as3
11:46 < serapath> what is as3?
11:46 < serapath> action script
11:46 < serapath> ah k
11:46 < daslicht> eq: you type valueObject. and hit ctrl space and any options are shown 
11:46 < daslicht> actionscript3
11:46 < sdogruyol> you need an ide for that
11:46 < daslicht> you vener have to remember any variable names
11:46 < daslicht> heh
11:46 < serapath> afaik thats something that depends on ur editor
11:47 < RLa> code completion for dynamic languages is mostly broken
11:47 < daslicht> an ide wont help therer much 
11:47 < daslicht> je
11:47 < daslicht> heh
11:47 < staar2> daslicht, use sublime
11:47 < daslicht> i do 
11:47 < staar2> better then some IDE
11:47 < daslicht> yeh 
11:47 < daslicht> but anyways code completion is missing 
11:47 < RLa> i use word-based completion in kate, also works in documention :)
11:48 < daslicht> kate?
11:48 < serapath> i could need some help with how to require something that does async stuff
11:48 < serapath> the required thing returns before the async processing has finished its work
11:48 < RLa> daslicht, if you want fancy stuff, try webstorm, i used it some time but grew to hate it
11:48 < daslicht> i also tried webstorm :)
11:48 < RLa> daslicht, kde's advanced text editor
11:49 < daslicht> i used phpstorm for php stuff
11:49 < daslicht> but anyways there is no good code completion for javascript
11:49 < RLa> lot's of people like sublime here :)
11:49 < daslicht> me too
11:49 < staar2> yeah
11:49 < daslicht> its simple and fast 
11:49 < daslicht> much better than slow phpstorm 
11:49 < serapath> var x = require('./myDB').init;      /*myDB.js
11:49 < serapath> */
11:50 < RLa> daslicht, try word-based completion
11:50 < staar2> but *storm IDE costs 
11:50 < staar2> well vim is also good
11:50 < RLa> it's simple and fast and does not pretend to be intelligent
11:50 < daslicht> RLa: word based wont help me with remembering variable names
11:51 < daslicht> anyways i can live without codecompletion after all
11:51 < RLa> then you have too long or too many variables
11:51 < daslicht> itr was just so conveinient
11:52 < daslicht> RLa: or to complex
11:52 < RLa> i rarely have more than 3 functions nested
11:52 < daslicht> especially when doing client side and serevr side stuff, its always devided developement 
11:52 < RLa> oh, that too
11:52 < daslicht> suxx :D
11:52 < daslicht> in Flex / AS3 it was all the same 
11:53 < daslicht> no css no html no js
11:53 < daslicht> hehe
11:53 < daslicht> but it needed the flash player which usxx
11:53 < daslicht> suxx
11:53 < serapath> var x = require('./myDB').init;      /*myDB.js*/ module.exports = (function(){ /* do async calls do db */ })(); //doenst work
11:53 < serapath> how to change it so that it does work?
11:53 < daslicht> anyone ever tried DartLang ?
11:53 < serapath> maybe put it all in the return statement of my module.exports?
11:54 < serapath> ah no, doesnt work, because its callback
11:54 < serapath> s
11:55 < serapath> they return to nowhere
11:55 < serapath> how do i do that?
11:56 < daslicht> i have it like thios:
11:56 < daslicht> require('./database/Database.js')("SWIG", function( _db){ ... }
11:56 < daslicht> module.exports = function(name, callback)
11:56 < daslicht> { callback(db)}
11:57 < daslicht> but i also use global variables so this might be not anyones taste :D
11:57 < serapath> but that would mean to pollute my require call with all the stuff that goes on in function(_db) { ... }
11:57 < serapath> right?
11:58 < daslicht> function(_db) is just the callback which is called after the db is ready 
11:58 < serapath> ah ok i see
11:58 < serapath> thx
11:58 < serapath> :-)
11:59 < daslicht> youre welcome
11:59 < daslicht> https://github.com/daslicht/swig
11:59 < daslicht> sometiung liek this
11:59 < staar2> lost connection to some region
11:59 < daslicht> thats my current playground
11:59 < daslicht> :D
12:02 < serapath> would i do it like so: var myDB; require('./myDB')(function(myDB){ myDB = myDB;});
12:02 < serapath> hey, that project sounds nice
12:02 < serapath> what's it doing exactly?
12:02 < serapath> :-)
12:04 < daslicht> i try to create a modular reuseable toolkit 
12:05 < daslicht> last thing I cteated was a formhelper
12:05 < daslicht> which lets you create forms with just some comamnds
12:05 < daslicht> it will automatically craete a cleintside jquery handler as well as a css stub for the form 
12:05 < daslicht> :)
12:06 < daslicht> currently it justs adds teh form to the app.locals so that you can easily add it anywhere like {{myForm}}
12:07 < daslicht> at the moment i try to create the same approach for an uploader
12:08 < daslicht> the mongoose stuff is no lomger used since i just use mongo-native now
12:19 < sinclair|net> any typescripters around?
12:19 < daslicht> not me
12:20 < daslicht> how is you experience with it ?
12:20 < sinclair|net> daslicht: you german?
12:20 < daslicht> do you like it?
12:20 < daslicht> yes 
12:20 < sinclair|net> daslicht: thought so :)
12:20 < alasi> ozette: I still get a 404 :(
12:20 < daslicht> and you?
12:20 < sinclair|net> daslicht: yeah, its awesome
12:20 < sinclair|net> daslicht: NZ
12:20 < daslicht> nice one
12:20 < sinclair|net> daslicht: yeah, typescript is a awesome language
12:20 < daslicht> I will hopefully play therer some day a gig :D
12:21 < alasi> ozette:  https://gist.github.com/anonymous/9719333ebbb041b8b38f
12:27 < daslicht> typescript looks interesting
12:31 < gdbz> Checkout GorillaScript
12:31 < gdbz> That one is also intereseting
12:32 < gdbz> http://ckknight.github.io/gorillascript/
12:41 < brettlangdon> gdbz, gorillascript looks decent
12:45 < Industrial> livescript was freeing
12:45 < raduu> is this still happening? https://github.com/LearnBoost/socket.io-client/issues/331
13:04 < serapath> in my router i do: app.get('/account/', function(req,res,next){ console.log(app.redis);next();}, require(path+'/account/index').init(app.redis));   and it logs to the console: { info: [Function] }, that means it does what its supposed to do
13:05 < serapath> but in my handler i do: module.exports.init = function(database) { 	console.log(database); } and it logs 'undefined'
13:05 < serapath> why?
13:05 < serapath> i mean i give it app.redis which i just have proofed to contain { info: [Function] }
13:08 < raduu> I cannot configure my socket io client: @socket = io.connect("/realtime",
13:08 < raduu>       port: 15000
13:08 < raduu>       query: "sid=12345"
13:08 < raduu>     );
13:09 < raduu> is this not allowed?
13:09 < brimstone> no comma after 15000?
13:09 < raduu> it s coffeescript
13:10 < raduu> nevermind that
13:10 < brimstone> ah
13:12 < raduu> nevermind :) had some nasty cache going on
13:15 < sinclair|net> is it ok to ask for some inputs into a project i have written
13:16 < sinclair|net> i don't want to come off as shamelessly promoting my own stuff, but i kinda want some opinions, particularly if it makes sense
13:19 < sinclair|net> ill interpret the silence as meaning no, its not ok
13:19  * sinclair|net wanders off
13:20 < shannonmoeller> sinclair|net: I think people were waiting for you to provide info.
13:21 < sinclair|net> the project is here, https://npmjs.org/package/appex 
13:21 < r04r> sinclair|net: yeah I think it would be fine, I would just go for it, and maybe you will get ignored, or maybe there'll be some insights ;)
13:21 < sinclair|net> r04r: after brutal honestly
13:21 < r04r> dat logo
13:24 < sinclair|net> r04r: im trying to write this thing as a web api solution for node
13:24 < sinclair|net> r04r: something that can be plugged into existing node application (presumably on the express stack) and write 'type full' service endpoints
13:28 < serapath> why does console.log(foo) // give me { info:[Function] } , but console.log('logging foo: ' + JSON.stringify(foo)); // gives me 'logging foo: { }' 
13:29 < daslicht> because you concat a string to an object 
13:29 < daslicht> try : console.log('foo: ',foo);
13:40 < bdiu> Anyone want a job?
13:40 < bdiu> :-)
13:41 < bdiu> I'm hiring for a full time position
13:41 < zomg> bdiu: if remote is ok I might be interested
13:41 < PeterNor> Node.js can replace flex :P
13:41 < bdiu> I'd really prefer on site, however... at this point I'd consider anything
13:42 < bdiu> PeterNor: Adobe/Apache Flex? 
13:42 < PeterNor> Adobe
13:43 < bdiu> haha, how can node replace flex? (ps, I'm a reformed flex dev)
13:45 < r04r> bdiu: if you prefer on site, you should at least mention where you are located ;)
13:45 < bdiu> Bloomington, Indiana (I'll pay for relocation)
13:45 < PeterNor> I'm more attracted to HTML5 then Flex
13:45 < bdiu> yeah, for sure
13:48 < PeterNor> I have opened 70 tabs :P
13:52 < olalonde> i need to send notification emails to a bunch of users after an action is executed. should I use a work queue for that or simply run the task asynchronously
13:54 < bdiu> PeterNor: I spent several years focusing on Flex and loved it and still do. Unfortunately, in today's climate, targeting the Flash Player for an application is just a bad plan for anything except enterprise development
13:54 < serapath> nuts nuts nuts :-)  why? why? why? http://jsbin.com/uvudiq/1/edit
13:54 < serapath> how do i get a stringified version of an object?
13:55 < bdiu> serapath: you seem to be getting one...
13:55 < serapath> with console.log(x)
13:55 < serapath> but how can i save that one?
13:55 < serapath> in a string?
13:55 < r04r> serapath: JSON.stringify does not do functions
13:55 < bdiu> just data
13:56 < r04r> serapath: I do not know of a way in the browser, if node is enough I believe there is utils.inspect
13:56 < serapath> its not a function, its an object with a function property
13:56 < r04r> Yes, sorry, that's what I mean. 
13:56 < serapath> ah ok, if the object wouldnt have a method, then it would work
13:58 < Reventlov> Any idea why even with npm install -g, I get absolute reference in my files to where I build ?
13:59 < r04r> serapath: If you absolutely need to JSON.stringify with functions as well I think you need to loop over all keys and convert the functions to strings with String(function(){...}) but thats probably a bad idea...
14:00 < serapath> thx @ r04r 
14:00 < r04r> np @ u
14:01 < bdiu> Anyone have any recommendations on where to post a job listing like this for the most applicants? 
14:05 < olalonde> bdiu: Node.js job?
14:07 < bdiu> olalonde: yep, among other things... senior level developer focusing on backend/apis w/ some client-side JS... but little to no markup/css 
14:08 < olalonde> maybe on the github / stackoverflow job boards or nodejs.org website
14:08 < r04r> there is also news.ycombinator.com which has a monthly "who's hiring" post -- https://news.ycombinator.com/submitted?id=whoishiring
14:09 < r04r> though since it's the 9th currently you'd have to wait for the 1st for decent exposure
14:10 < bdiu> cool
14:19 < PeterNor> I hate Netbeans . Please compare with Eclipse ssssssss
14:20 < honestemu> To install node.js, do I follow the instructions on this page for Debian Wheezy?: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
14:20 < honestemu> For #!?
14:24 < r04r> honestemu: no idea what you mean with #!? but yeah, those seem like a good idea. The instructions for debian let you compile it yourself and install through the package manager
14:24 < r04r> honestemu: There are also prebuilt binaries available at http://nodejs.org/download/
14:30 < GOMADWarrior> http://bpaste.net/show/DSzxCOvWK7LKWnJUeHpe/
14:30 < optiminimal> leave
14:30 < GOMADWarrior> it says 42M for a string of 1 million chars
14:31 < GOMADWarrior> oops, 420M for 10 million
14:33 < r04r> GOMADWarrior: iirc strings are immutable which means that a new one is created when you manipulate them. The garbage collector probably hasn't kicked in yet when you check process memory, so it's a bit much... You could get around the immuatability issue by using a buffer or an array or something
14:34 < GOMADWarrior> so its like the sum of strings?
14:35 < GOMADWarrior> that'd be 50 trillion
14:35 < honestemu> r04r: I downloaded the 32-bit version for my #! install and extracted the files. Where is the ./configure script that the readme talks about? It's not in the upper levels of the folder.
14:37 < r04r> honestemu: I have no idea what you mean with #! install, but if you downloaded the precompiled binaries there won't be a configure script. There will just be binaries.
14:37 < r04r> honestemu: If you want a no-brainer install just follow the instructions from that page you linked
14:37 < r04r> GOMADWarrior: http://bpaste.net/show/tqfO9L7gdu3WEdTFcEFj/ uses like half of the memory
14:37 < honestemu> #! is Crunchbang linux.
14:38 < r04r> honestemu: Gotcha, I suggest downloading the sources, then ./configure && make && sudo make install then
14:38 < r04r> honestemu: Or if the 32 bit binaries work just add them to your path one way or the other
14:39 < honestemu> r04r:Oh. I see. Those are the Binaries. The one on the bottom is the source code, which doesn't care about the OS. Right?
14:40 < r04r> honestemu: Right. The binaries don't really care about the OS either, but I personally prefer make && make install because less hassle, just a longer wait for the compilation to take place
14:41 < GOMADWarrior> but thats still 20 bytes per char
14:42 < r04r> GOMADWarrior: Considering this is a garbage collected language there will be cruft left taking memory when we take the snapshot. In the last example I converted the array to a string, which caused them both to exist in memory temporarily. When omitting the conversion to string the immediate memory usage halves again.
14:44 < r04r> GOMADWarrior: When leaving the values in an array (and thus not joining it), then forcing a garbage collection cycle, it uses 60 megabyte for the 10 million strings which results to 6 bytes/character. Still seems a tad much, but far less so than 20
14:44 < r04r> 10 million characters*
14:46 < GOMADWarrior> nope, it says 170M
14:46 < GOMADWarrior> oh, how do you force a cycle?
14:46 < r04r> GOMADWarrior: http://bpaste.net/show/qyJBW5kltRZ2c3GJDR6F/
14:46 < r04r> GOMADWarrior: Run with node --expose-gc
14:48 < GOMADWarrior> it says no method gc
14:48 < r04r> < r04r> GOMADWarrior: Run with node --expose-gc
14:48 < GOMADWarrior> with --expose-gc
14:49 < r04r> GOMADWarrior: idk man http://bpaste.net/show/PQTuAgkBzXdKJPC8HR8o/
14:50 < GOMADWarrior> 91M
14:51 < GOMADWarrior> I mean, rss is 104M
14:57 < GOMADWarrior> but why can't I make a string with 1 byte per char
14:58 < r04r> GOMADWarrior: for starters javascript strings are UTF16 so at the very least its 2 bytes per char
14:58 < GOMADWarrior> ok then, 2 bytes per char
14:59 < r04r> GOMADWarrior: My tests end up with 9 bytes per char, I am not sure why that is. Probably because pointers/references/othermagicshitwhichmakespeoplepreferhighlevellanguagesoverC
15:03 < staar2> hello
15:03 < staar2> how can create some worker on heroku which executes every 5 hours ?
15:06 < neeky> staar2, heroku scheduler
15:06 < neeky> search for it on the heroku site
15:08 < werle> isaacbw: if I include some source from node.cc in a book what kind of credit do I need to attribute? is it possible for me to do that? 
15:10 < olalonde> does anyone know if i can do that in Handlebars: {{#if mailme[Order Confirmed]}} ?
15:12 < olalonde> ahh I needed a dot between mailme and [
15:26 < asdfasd_> http://bpaste.net/show/9v6CU2Sp2wcjjNj9AHUJ/
15:27 < asdfasd_> it seems what matters is the number of strings, not the number of chars?
15:27 < leo_> s
15:28 < baniir> using socketio, when several clients try to connect at once, for each one it looks like the handshake authorizes then the transport ends quickly then the connection reestablishes itself. after the reconnects, the connections are stable (don't disconnect). what could be causing this?
15:32 < leo_> aa
15:33 < leo_> aa
15:34 < bingomanatee> good morning
15:34 < leo_> aa
15:34 < leo_> aa
15:34 < bingomanatee> has anyone ever gotten a "TypeError: Canvas expected" on node-canvas? just in response to ctx = canvas.getContext('2d');
15:35 < wcwrel> what is the point of getting node.js for lets say a php workstation ?
15:35 < wcwrel> or benefits
15:35 < pachet> what is a php workstation
15:35 < leo_> date
15:35 <@isaacbw> wait wait wait
15:35 <@isaacbw> is the linux kernel developed on github
15:35 < leo_> date
15:36 < wcwrel> a server with lampp
15:37 < bingomanatee> wcwrel: node and PHP have the same functionality from a black box point of view. 
15:38 < bingomanatee> You can call one from the other through unix processes, so if you want to do something with a node module you can't do with PHP (like performant streaming) you can use node. 
15:38 < wcwrel> performant streaming
15:38 <@isaacbw> but you would be a crazy bastard if you did
15:39 < wcwrel> so what in node.js would benefit a apache/php server?
15:39 < wcwrel> how can it help me, basically.
15:39 < bingomanatee> it would replace it. 
15:39 < pachet> ask that question the other way around
15:39 < bingomanatee> potentially. 
15:39 < pachet> what in an apache/php server would benefit node :[
15:39 < DTrejo> ask it upside down
15:39 <@isaacbw> ask it in a boat
15:40 < wcwrel> so node.js is a server side processor?
15:40 < wcwrel> using javascript as the syntax?
15:40 < bingomanatee> Its easier to start with a problem and evaluate a piece of software for viability then to start with a solution and ask what kind of problems its for. 
15:40 <@isaacbw> no
15:41 < bingomanatee> Node is a programming "frame" for javascript programming. It has libraries for HTTP/servers and loads of other things but like PHP, it is not designed to solve a single fixed purpose. 
15:41 < bingomanatee> Its mainly designed to make adolescent programmers feel smug. 
15:42 < bingomanatee> :D
15:44 < pachet> smug as a bug in a rug
15:44 <@isaacbw> chug chug chug
15:45 < merpnderp> bingomanatee: as a .Net web dev I can assure you we'd be 1 million times more productive if we were in a node env.
15:46 < bingomanatee> or with toothpicks and tiny marshmallows: D
15:48 < brimstone> "toothpicks and tiny marshmellows" lol
15:48 < bingomanatee> Let me put it this way -- it may be a coincidence, but when Ryan Dahl did his demo of Node at the SF PHP meet up it was one of the last PHP meet ups .. Node, and JS, are much less verbose than PHP. 
15:49 < bingomanatee> Though, in fairness, Ruby is also capable of making that claim. 
15:49 < nsno> it'd make its claim  a lot slower though :P
15:50 < merpnderp> hah
15:50 < bingomanatee> you're just pissed off because you can;t put :colons in front of your tokens. 
15:50 < nsno> bingomanatee: it pains me everyday ;_;
15:50 < Merminghi> what's a good linux-based node.js ide ?
15:50 < merpnderp> V8 is on average only 10x faster than PHP: http://benchmarksgame.alioth.debian.org/u64/benchmark.php?test=all&lang=v8&lang2=php&data=u64
15:51 < baudehlo> sublime text
15:51 < ansiiso> jbcima
15:51 < bingomanatee> I don't use Linux but I do like webStorm, and sublime is popular.
15:51 < merpnderp> Merminghi: is you don't think of VIM as an IDE, then Webstorm is super nice.
15:52 < Merminghi> merpnderp: I'm an old hand at vim and emacs, but I'm tired of its lack of indexing. I've moved to qt-creator for my c++11 -- its great. I'll check out the two ides you mention. thx
15:53 < nsno> sublime text is the perfect weight imo.
15:53 < Merminghi> merpnderp:s/two/one/
15:53 < nsno> don't think dynamic languages particularly lend themselves well to true IDE features
15:53 < nsno> (especially not Node/JS whose packaging is a lot saner than ruby/python so you don't even need that taken care of for you)
15:54 < merpnderp> nsno: you'll be shocked at Webstorm's magical dynamic language IDE'ing. It so nails the IDE'ing for JS it is crazy.
15:54 < nsno> oh I have used it
15:54 < nsno> I'm a paying IntelliJ user :)
15:54 < merpnderp> nsno: I sat their in shock at my broken require still not keeping webstorm from inferring which module I meant and offering me the correct autocompletes.
15:54  * ansiiso is coding with node.js
15:55 < nsno> It's great for dropping into when I need to quick edit a js file in a bigger project. but for pure node stuff i just prefer a blinged out ST2
15:55 < merpnderp> nsno: I probably won't ever use webstorm for real dev, but I gave them my money so they can keep making their magical products.
15:55 < nsno> jetbrains are great <3
15:58 < merpnderp> nsno: I'll have to try sublime text. For some reason it just struck me as a glorified notepad and I've never looked closely at it.
15:59 < nsno> it's a glorified notepad in the sense in the same sense that an operating system is just a glorified state machine :P
15:59 < nsno> s/in the sense//
15:59 < Merminghi> nsno: lol
16:00 < Merminghi> I polish my own silicon, too. 
16:03 < nathanbzz> hey i'm trying to connect to postgresql with a ssl connection but it doesn't seem to work, i'm following this: http://forrst.com/posts/Node_js_and_Postgresql_with_SSL-H6a
16:04 < nathanbzz> and looked at the source https://github.com/brianc/node-postgres/blob/master/lib/client.js
16:04 < nathanbzz> dunno why it's not working :9
16:04 < bingomanatee> With Webstorm ou can run node files with tests in the IDE and it has nice template system and good syntax highlighting. Honestly, thats all you should ask for from an IDE. 
16:04 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:05 < Merminghi> nsno: what's ST2 ?
16:06 < qard> Sublime Text 2?
16:06 < Merminghi> oh, duh. I'm just not familiar w/ these things yet. 
16:07 < merpnderp> nsno: hah!
16:07 < dagerik> how can i get stylus to traverse all subfolders and look for all *.styl? right now it only grabs style.styl
16:08 < merpnderp> bingomanatee: dont' forget the magical autocomplete that not only fully understands CJS, but understands javascript on the client.
16:08 < bingomanatee> autocomplete is nice. 
16:08 < merpnderp> I woudln't be surprised to see it understand AMD.
16:08 < bingomanatee> And they are working on an EJS interpreter which will be awesome. 
16:08 < merpnderp> nice
16:09 < merpnderp> that might make me a full time user.
16:09 < bingomanatee> yeah Its a request with a pretty big/growing audience on the tracking forum.
16:12 < serapath> could someone help me with how to correctly initialize my stuff? for i require mongoDB and my redisDB module. i put it in app.db and app.redis. immediately after i did the require, i do a console.log  and app.db exists instantly, but app.redis doesnt
16:12 < nathanbzz> https://github.com/brianc/node-postgres/blob/master/lib/connection-parameters.js
16:12 < nathanbzz> var ssl = result.query.ssl;
16:12 < nathanbzz>   if (ssl === 'true' || ssl === '1') {
16:12 < nathanbzz>     config.ssl = true;
16:12 < nathanbzz>   }
16:12 < nathanbzz> how would i set that ?
16:13 < nathanbzz> I added ?ssl=true on the end of the string
16:13 < nathanbzz> but doesn't seem to work :/
16:13 < daslicht> http://i.imgur.com/HeLekEs.png
16:13 < daslicht> code complete in typescript roxxxxxxx
16:14 < daslicht> now trying it in sublime
16:15 < daslicht> hm:
16:15 < daslicht> http://i.imgur.com/20vrNfv.png
16:16 < daslicht> how can i improve this ?
16:18 < grkblood13> is there a way to get node to launch a browser window of a specified size?
16:18 <@isaacbw> computers are hard
16:18 <@isaacbw> http://www.pixelstech.net/article/index.php?id=1373365267
16:20 <@isaacbw> "PHP is coming back"
16:20 < b3tamax> >> MFW
16:20 < purr> b3tamax: ReferenceError: MFW is not defined
16:22 < jameshowe> any EDD for 0.12 or 1.0 ?
16:23 < cramrod> Will someone explain to me which part of a transform stream does the actual data consumption? 
16:23 < jameshowe> cramrod: it doesn't consume data, it transforms it?
16:23 < durango> Does anyone know of a utility that lets me create a private tunnel from my locla machine to the world? I know there was a ruby gem out there.. was wondering if anyone knew of anything / for nodejs in particular
16:23 < grkblood13> is there a way to get node to launch a browser window of a specified size? I can launch the browser with https://github.com/jjrdn/node-open but setting the size is a head scratcher.
16:24 < cramrod> Jameshowe, does that mean what goes in must also come out?  Im trying to build a parser for multipart jpegs.  Should I be using something other than transformation streams?
16:25 < astropriate> I am using the handlebars from NPM and trying to log using {{log "dfsdfSD"}}  helper (the way it is on the home page of the project) and it is doing absolutely nothing
16:25 < astropriate> any ideas?
16:26 < jameshowe> cramrod: yeah, data comes in, it gets transformed, it goes out
16:26 < jameshowe> cramrod: like gzip (de)compression or base64 en/decoding
16:28 < pachet> grkblood13: you'd probably have to run chrome from the command line and pass a flag
16:28 < pachet> grkblood13: eg http://peter.sh/experiments/chromium-command-line-switches/#window-size
16:28 < jameshowe> cramrod: if you want to turn a stream of jpegs into a stream of something else, then you want a transform stream
16:28 < jameshowe> cramrod: otherwise you don't
16:32 < cramrod> jameshowe, I want to take a jpeg stream and emit "image" events whenever all parts of the image have been received and the third party padding has been stripped.  I do want to strip off and lose that extra padding forever.
16:32 < cramrod> Its an Mjpeg stream from a sony axis cam
16:33 < jameshowe> so yeah, use a transform stream, but I don't know what you mean by "actual data consumption"
16:36 < serapath> hey, could someone take a look at those 16 lines? http://pastebin.com/RYraVHWR
16:36 < serapath> it works, with my custom middleware function, but not with the regular require of my request handler
16:36 < owen1> what do people use to create css sprite?
16:36 < owen1> https://github.com/naltatis/node-sprite ?
16:36 < serapath> which has the exact same code in its module.exports as function account_index_init 
16:37 < cramrod> jameshowe, Im having trouble figuring out which method pushes my parsed data down the pipe, and which methods make the stripped padding disappear forever.  I think my problem is just not fundamentally understanding how node manages buffers in a stream.
16:37 < jameshowe> there's only one method
16:39 < jameshowe> http://nodejs.org/api/stream.html#stream_transform_transform_chunk_encoding_callback
16:39 < jameshowe> only what you pass to push() will come out the other end
16:39 < werle> trevnorris: do you know if it is safe to include some source from node.c in a publication? 
16:40 < jameshowe> but they won't be "image" events, they'll still be "data" events
16:40 <@trevnorris> werle: eh? sorry you'll have to be more specific.
16:41 < jwm> this is probably a newb javascript issue
16:41 < jwm> but I am trying to use underscore's _.each construct
16:41 < jwm> it won't manipulate the object I pass to it
16:41 < werle> trevnorris: https://github.com/joyent/node/blob/v0.10.12-release/src/node.cc#L2947
16:41 < werle> trevnorris: and https://github.com/joyent/node/blob/v0.10.12-release/src/node.cc#L3061
16:41 < jwm> when I come out of the each the elements aren't changed heh
16:41 < jwm> I passed it an array of objects
16:42 <@trevnorris> werle: and by publication do you mean a module you're creating?
16:43 < werle> trevnorris: no it is a section in a book I'm contributing to where I detail the startup of node 
16:43 < werle> trevnorris: I'm giving examples about using isolates and contexts and I wanted to reference node
16:44 < staar2> any simple mongo libraries (i dont want mogoose, too bloated), I like mongojs
16:44 <@trevnorris> werle: sure. feel free
16:44 < werle> trevnorris: thanks so much
16:44 <@trevnorris> :)
16:46 < cramrod> jameshowe, That makes sense.  That helps a lot.  Then how do I safely remove unwanted data from the buffer? 
16:46 < jameshowe> you make a new buffer that doesn't have it
16:46 < jameshowe> like for everything
16:48 < jwm> hmm
16:48 < jwm> mongoose docs must not be a real array
16:48 < jwm> heh
16:50 < serapath> how do i transform 'first approach' into 'second approach'? http://pastebin.com/vyvARiw2
16:50 < serapath> the first one works, but if i put the code into what i require in the second one, it doesnt, because database is not defined anymore
16:50 < cramrod> jameshowe, This makes sense to me now. Thanks for your help.
16:52 < Shayanjm> I have a function getLatest that I'd like to poll using socket.io
16:52 < Shayanjm> here's the function:
16:52 < Shayanjm> http://pastebin.com/iP2mCF40
16:52 < Shayanjm> I'm having an issue though, as when I try to port the return into socket.io - I get [Function]
16:52 < Shayanjm> here's the port:
16:53 < Shayanjm> http://pastebin.com/EgMLrMJ9
16:53 < Shayanjm> I feel like I'm missing something absolutely obvious but can't put my finger on it
16:57 < BSaboia> hello guys. inside an node.js interactive prompt, how do i exec a file?
17:01 < pachet> BSaboia a javascript file?
17:01 < BSaboia> pachet, yes
17:01 < BSaboia> i don't want to run it like $node myfile.js
17:01 < BSaboia> because i want to play with the objects on the interactive prompt
17:01 < pachet> BSaboia just require() it
17:09 < BSaboia> pachet, thanks. my code creates a simple http client, var client = ... when i run the script, i can't access the client after its execution. how do i keep my object for further usage inside the prompt?
17:22 < asdfasd_> Uint8Array
17:22 < asdfasd_> it forces things to occupy 1 byte
17:23 < asdfasd_> I tested here and it works
17:24 < asdfasd_> r04r: 
17:24 < opreaadrian> Hello guys ! I have a question: Has anybody used webdav-sync ?
17:26 < neeky> anyone know where THE simplest example of using backbone.js to build a single page client that connects to a REST api?
17:26 < neeky> I'm currently using: http://backbonetutorials.com/nodejs-restify-mongodb-mongoose/ 
17:26 < neeky> but it has for some reason gotten terribly out of sync with the example code on github
17:26 < neeky> making it pretty useless
17:27 < neeky> if I can see a complete working example, I'll get my brain wrapped around it
17:29 < opreaadrian> neeky: try addy osmani's book - Backbone Fundamentals.
17:29 < opreaadrian> addyosmani.github.com/backbone-fundamentals/#backbone.js
17:29 < opreaadrian> neeky: There's also a nice tutorial on dailyjs on backbone, connecting to the google api etc. But try to write the code yourself as it is as well a little bit out of sync with the github code.
17:30 < opreaadrian> I had some trouble with the code, when I decided to take that tutorial, but I managed to make it work .
17:30 < neeky> cool, thanks
17:30 < opreaadrian>  My question still remains... I still need to figure out how to work with webdav-sync .
17:30 < gkatsev> what's the best way to run a function on a timer? (besides setInteval)
17:31 < opreaadrian> gkatsev: setTimeout 
17:31 < neeky> cron?
17:31 < neeky> :)
17:31 < gkatsev> from within node, lol
17:31 < opreaadrian> the problem with setInterval is that it doesn't care if your function finished executing... so it will call it over and over again at the specified interval
17:32 < gkatsev> yeah, that's fine.
17:32 < opreaadrian> So if you have, an async call for example, you don't know how long will it take for it to return the data.
17:32 < opreaadrian> And setInterval will keep on calling, and calling .... until maybe the API will block you .
17:32 < neeky> you can always do the threaded model of setting a flag, and if flag is set, return
17:33 < gkatsev> for my thing, setInterval is ok.
17:34 < gkatsev> i.e. the functionality
17:34 < gkatsev> just not certain about robustness
17:35 < opreaadrian> neeky: yes, but that means that you introduce another operation .. 
17:35 < neeky> yep
17:35 < opreaadrian> that leads to increased complexity, and you don't know how will the code be extended in the future.
17:36 < neeky> for precise scheduling of stuff, I tend to break that out into a standalone node script and run it via cron
17:37 < neeky> its the only way to know - but my background is systems management, so I tend to lean on the OS for a lot
17:38 < neeky> even if it's just a curl of a hidden route in the app that does work 
17:40 < neeky> so make a cron job that does 'curl http://localhost/somehiddenroutethatdoeswork'
17:43 < owen1> neeky: i didn't follow you closely, but did u switch no no-frameworks or is it restify u ended up using?
17:44 < neeky> i ended up just adding a stand-alone router to connect.  Dont have time to completely remove connect
17:44 < neeky> and my UI is moving to just a static served backbone single page app
17:44 < neeky> if i can figure out backbone
17:45 < neeky> but I am removing express, since I'm not using its views or anything
17:46 < owen1> cool. 'st' is your friend, if u ever switch no non-frameworks approach. isaacs wrote it for static files.
17:46 < neeky> cool
17:53 < HeartOfAce> I use Sublime Text 2 for JavaScript, but RubyMine for Rails/Ruby
17:56 < statu> I am using Netbeans
17:56 < HeartOfAce> damn, why?
17:56 <@MI6> joyent/node: Timothy J Fontaine v0.10 * 91698f7 : tls: only wait for finish if we haven't seen it - http://git.io/OZ_eNA
17:58 < gkatsev> HeartOfAce: why not webstorm for js?
17:59 < HeartOfAce> because it's slow and laggy
17:59 < HeartOfAce> because I have a shitty computer 
17:59 < HeartOfAce> but ST2 runs perfectly 
18:00 < gkatsev> lol
18:00 < gkatsev> I still just use vim for everything
18:00 < HeartOfAce> I like ST2 because it looks pretty and I'm stupid
18:00 < HeartOfAce> too stupid for vim
18:01 < gkatsev> nah
18:01 < HeartOfAce> too lazy, maybe
18:01 < gkatsev> -g editor learning curves
18:01 < purr> gkatsev: Text Editor Learning Curves | Terminally Incoherent <http://www.terminally-incoherent.com/blog/2006/08/01/text-editor-learning-curves/>
18:01 < gkatsev> it's just that ^^
18:01 < HeartOfAce> haha
18:12 < harrisonm> Lately I've been using ST2 to write code and vim to make quick edits
18:12 < harrisonm> My preference actually depends on my mood
18:16 < asdfasd_> what's rss?
18:16 < brimstone> google reader hasn't been dead that long has it?
18:16 < asdfasd_> Resident set size
18:17 < werle> brimstone: http://rssimple.net/ seems good
18:17 < diminoten> okay so I'm incredibly lost... so to get high fives from my colleagues I should put all my stuff in divs and make it look good through css?
18:18 < ffog> renticulating spline sausage
18:18 < diminoten> possibly off-topic for the chan but like I said, I'm lost
18:18 < DallonF_> diminoten, use ANYTHING but tables
18:18 < diminoten> yeah
18:18 < DallonF_> Preferably use the HTML tag that most semantically describes what you're using it for
18:18 < DallonF_> When it defies description, use a div
18:19 < diminoten> ah okay
18:19 < diminoten> is there like... a book
18:19 < brimstone> werle: neat, but no demo :/
18:19 < diminoten> or a blog post that talks about this kind of thinking? 
18:19 < DallonF_> diminoten, Maybe... not sure. You kind of are in the wrong place; node.js is a sever-side technology
18:19 < diminoten> I'd like to be not-shitty at this stuff
18:19 < diminoten> yeah that's how I've always used it
18:20 < asdfasd_> what's the difference between rss, heapTotal and heapUsed?
18:20 < DallonF_> diminoten, well, this site is good if you want to learn about crazy CSS: http://css-tricks.com/
18:20 < werle> brimstone: yeah it needs one
18:20 < kinabalu> is it possible with grunt to copy non-dev dependencies into a distribution directory?
18:20 < kinabalu> the node_modules i have in here, has grunt modules, which I definitely don't want in the final build
18:21 < DallonF_> So.. I've got a question of my own. I'm looking for a well-supported Node module that's kind of like Factory Girl for Rails but not exactly...
18:21 < DallonF_> Basically, we're doing a front-end app for a client who has either failed or refused to give us the REST API for the app, so we need to stub out our own
18:21 < DallonF_> Preferably with a lot of test data
18:22 < DallonF_> So far I've found rosie, factory-lady, factory-worker, and Faker.js
18:23 < DallonF_> The latter seems best supported, but it seems like it would complement a factory framework rather than being what I'm actually looking for
18:24 < neeky> diminoten, for a real world example, check out Twitter Bootstrap - It is scaffolding for web apps that dont suck
18:25 < neeky> and has a bit of a howto vide to it
18:25 < diminoten> neeky I've heard a lot about it
18:25 < neeky> vibe
18:25 < diminoten> okay
18:25 < diminoten> I freaking hate building web interfaces, I'm so bad at it
18:25 < diminoten> UIs that is
18:25 < neeky> and there gobs of bootstrap howtos around
18:25 < ffog> hope <blink> is back in html6
18:26 < neeky> <marquee> is
18:26 < r04r> just use flash
18:26 < ffog> <marquee> never went away, thank god
18:29 < DallonF_> diminoten, best to let the people who actually like it do the front-end work...
18:29 <@MI6> joyent/node: Nathan Rajlich master * 48e159f : crypto: throw a helpful error message for "tls" and "crypto" (+1 more commits) - http://git.io/SvFDkg
18:29 < DallonF_> because usually the front-end people hate building super-performant servers :)
18:29 < diminoten> DallonF_: I agree, but I don't want to cower in ignorance forever
18:29 < diminoten> haha yeah I much prefer that
18:29 < tandoori> ive been reading the docs but there is something I do not understand about js files...so say I call a js file from a web browser, the node api will execute it similar to opening a .php page?
18:29 < tandoori> is that how it works?
18:29 < DallonF_> tandoori... not at all sorry
18:30  * tandoori frowns
18:30 < diminoten> tandoori: the browser has nothing to do with it
18:30 < tandoori> you mean to tell me I have to run all scripts from the command line?
18:30 < DallonF_> tandoori, yes
18:30 < DallonF_> But you should have a main script that launches all the others
18:30 < tandoori> wow...
18:31 < DallonF_> It's a different way of thinking about things that I personally think is more elegant
18:31 < DallonF_> I'm assuming that you're coming from a PHP background?
18:31 < tandoori> DallonF_: you are quite correct ;-)
18:31 < DallonF_> tandoori, ah, you've got a bit of unlearning to do to grok node :)
18:32 < DallonF_> Think about Node in terms of building a *server* rather than *pages*
18:32 < thomblake> tandoori: to be clearer, that magic with .php files is generally handled by a web server, such as Apache.  With node you're building a server.
18:32 < tandoori> lol i can't unlearn php, since every webpage will have at least one script in it :-P
18:32 < tandoori> I was hoping that somehow I can use php to work with node.js. I am sure there is a way
18:33 < qq99> Anyone with an interest in IRC / anonymous messaging ? I've got this project that's a bit like an enhanced IRC and looking to add federation/relay, could really appreciate some input on the planned relay scheme https://github.com/qq99/echoplexus/wiki/Federation
18:33 < DallonF_> tandoori, thomblake nailed it. You should have a single main script called "app.js", for example, when you run "node app" from the commandline, that's the equivalent of starting up Apache
18:33 < DallonF_> tandoori, what are you interested in using Node for? i.e. are you building web applications or web sites?
18:33 < DallonF_> Because if you're just doing web sites, Node might be overkill
18:34 < ForSpareParts> I'm working on an IRC client thing, and I'm trying to wrap my head around the options for realtime apps. I was considering something like meteor, perhaps with a frontend framework like angular or backbone, but the database assumption seems like it's baked into everything, and my app will have pretty substantial non-db data. Am I better off picking up socket.io and trying to roll something myself...?
18:34 < tandoori> DallonF_: ah, well that takes a bit explaining so please bare with me
18:34 < qq99> ForSpareParts, check out how echoplexus does it, socket.io is very nice
18:34 < ForSpareParts> qq99, Thanks! I'll look into that.
18:34 < qq99> what do you mean about non-db data?
18:34 < DallonF_> ForSpareParts, learn socket.io and use it with an MVVM front-end framework like Angular or Knockout
18:34 < qq99> ForSpareParts, I'm the lead dev of that project so I'll be around if you have any questions
18:35 < tandoori> im trying to convert code ive written in cpp to node to be the server side portion of a chat service I am offering to people who navigate my website
18:35 < _6a68> ForSpareParts: I'd definitely build one to throw away, if you're unfamiliar with doing real-time stuff in node.
18:35 < _6a68> ForSpareParts: depending on what browsers you care about, you could just use raw websockets: http://caniuse.com/websockets
18:35 < DallonF_> tandoori, Ah, I see - I actually haven't ever done any CGI work so I'm not sure how best to translate it
18:36 < tandoori> you see, working with the openssl lib in cpp is a right pita, and I needed something that will handle all the secure stuff so long as I just provide a valid key and certificate..node appears to offer easy set up
18:36 < thomblake> tandoori: If you do want to execute php scripts with also a node server, there are a few ways to do it, but I don't think there's a standard.  You can also run Apache and have something like Nginx route to Node or Apache, or you can exec the php script from node  through the shell interface and return the result.  But probably you should just write all your back-end stuff in JS.
18:36 < ForSpareParts> qq99, Non-db data as in lists of active channels, users in a room, properties of an active connection -- that stuff is so transient that I'm not sure it makes sense to persist it anywhere.
18:37 < DallonF_> ForSpareParts, you should look into redis
18:37 < qq99> ForSpareParts, ahh, gotcha, we're using Backbone models&collections to store a lot of stuff like that
18:37 < DallonF_> If I understand it correctly, it's basically designed for stuff like that
18:37 < tandoori> thomblake: I'd rather not scrap what I already have set up. 
18:37 < tandoori> I would rather they work alongside
18:37 < ForSpareParts> qq99, Are they actually persisted in a db server-side?
18:37 < tandoori> besides, the chat server is being operated on a separate port than the web server
18:38 < qq99> ForSpareParts, the only persisted things are chatlogs (redis storing a JSON toString() of the object socket.io receives) and some identity/privacy/room permissions stuff
18:38 < DallonF_> tandoori, bingo! If it's a seperate port, then there's no conflict
18:38 < DallonF_> Just run your node server alongside Apache
18:38 < tandoori> thomblake: trust me when I say, that I have worked VERY hard to get apache/mysql/php/openssl set up. 
18:38 < ForSpareParts> qq99, OK. So, I assume the rest are transient data that's exposed in a model/collection sort of way via Backbone?
18:38  * tandoori chuckles
18:39 < qq99> ForSpareParts, e.g., when the user connects and is authenticated, a client model is created for him and associated with him, and any transient data is set on that object
18:39 < qq99> so he does /nick whatever, socket.io receives it, and does client.set("nick", data.nickname) or whatnot
18:39 < tandoori> DallonF_: aye, now I need to find out how to use php/javascript to communicate with the node server. Can I do this via ajax or do I need to use a different method?
18:39 < qq99> sending the userlist is just channel.clients.toJSON()
18:40 < DallonF_> tandoori, your best bet is to use front-end JavaScript to communicate with your chat server via ajax or socket.io
18:40 < tandoori> AH HA! so I can use ajax
18:40  * tandoori dances with daleee 
18:40 < tandoori> whoops, Im dancing with the wrong person
18:40 < tandoori> excuse me
18:41  * tandoori dances with DallonF_ 
18:41 < ForSpareParts> qq99, Alrighty, I think I get it. I'll dig into this later, when I'm not working, and give it a shot! Will probably be back with more stupid noob questions.
18:41 < tandoori> that makes me feel much better
18:41 < ForSpareParts> qq99, Really appreciate the direction.
18:41 < DallonF_> tandoori, glad I could help!
18:41 < daleee> awwww *tear* i get no dancin' love
18:41 < qq99> ForSpareParts, np, I'm not sure if meteor would make life easier or more difficult in this case
18:43 < tandoori> okay now I have one or two back ended questions..if you don't mind. Is there a function built in that will auto execute .js files on server start up, or do I have to start it manually?
18:44 < ForSpareParts> qq99, Yeah, it looks really cool, but on slightly closer inspection it seems predicated around a (very common) use case that's not actually going to apply to my app. Maybe I'll do something else where it'll be a good fit though, I'd love to try it out.
18:45 < DallonF_> tandoori, do you mean the apache server or the node server?
18:46 < qq99> ForSpareParts, for a simple chat, I think you'll find socket.io really nice to get going with.  after you try a simple echo between server<->client the sky is the limit
18:46 < DallonF_> Or the physical server?
18:46 < DallonF_> ... OK I think I understand your question now
18:47 < DallonF_> You want to start up a Node file when your server starts; that really just depends on the OS and it's just like running any other application on start up
18:47 < DallonF_> And you'll probably want to run it via the "forever" node module instead of vanilla node, that way the server won't crash and stay down
18:49 < qq99> check out supervisor for "forever" node
18:50 < Shayanjm> I have a function getLatest that I'd like to poll using socket.io
18:50 < Shayanjm> here's the function: http://pastebin.com/iP2mCF40
18:50 < Shayanjm> I'm having an issue though, as when I try to port the return into socket.io - I get [Function]
18:50 < Shayanjm> here's the port: http://pastebin.com/EgMLrMJ9
18:50 < Shayanjm> I feel like I'm missing something absolutely obvious but can't put my finger on it
18:50 < Shayanjm> (CoffeeScript btw)
18:51 < tandoori> DallonF_: oops sorry for slow response, I got a call. I mean the node server. The apache server is already up and running and my server is live
18:51 < Shayanjm> oh shit, sorry guys, disregard those links. my links died
18:51 < Shayanjm> 2 secs
18:52 < Shayanjm> getLatest: https://gist.github.com/shayanjm/25fc838ec0e870f65e5d
18:53 < Shayanjm> and socket.io port: https://gist.github.com/shayanjm/f300ae175c63ff07eb15
18:53 < Shayanjm> any ideas?
18:54 < neeky> I hate the Internet sometimes
18:54 < neeky> right out of the gate, lesson 1 on this tutorial is broken, probably because of versions: http://dailyjs.com/2012/11/29/backbone-tutorial-1/
18:54 < tandoori> oh you answered my question :-P danke
19:24 < b3tamax> neeky: Check out backbone_bootstrap in npm if you're learning backbone.js
19:31 < Scrat> is appjs dead?
19:31 < Shayanjm> Anyone around familiar with socket.io that can answer a quick question?
19:32 < Shayanjm> (and coffeescript... but I mean it's fairly straightforward anyway)
19:32 < gkatsev> Scrat: kind of yes not really
19:32 < Scrat> gkatsev: got any more info?
19:33 < Scrat> also is there an alternative? (node based)
19:33 < gkatsev> Scrat: there's node-webkit which is similar but approaches it from another perspective
19:34 < gkatsev> looks like it's still being maintained
19:34 < astropriate> I am using the handlebars from NPM and trying to log using {{log "dfsdfSD"}}  helper (the way it is on the home page of the project) and it is doing absolutely nothing. any ideas?
19:34 < Scrat> gkatsev: perfect, thanks
19:35 < gkatsev> Scrat: np
19:35 < Shayanjm> anyone familiar with socket.io?
19:35 < gkatsev> astropriate: are you getting any errors?
19:36 < gkatsev> astropriate: also cross-posting? :)
19:36 < gkatsev> :(
19:36 < gkatsev> blah
19:36 < astropriate> gkatsev, no and yes
19:36 < astropriate> :)
19:37 < gkatsev> cross-posting is :(
19:37 < gkatsev> astropriate: are you sure it isn't being logged?
19:37 < gkatsev> what if you overwrite Handlebars.logger.log
19:40 < Shayanjm> Okay I think I've fucked up my function a bit. I'm trying to build a simple medium.com post scraper
19:40 < astropriate> gkatsev, yah, nothing in the JS console
19:40 < Shayanjm> so I've got a function getLatest: https://gist.github.com/shayanjm/25fc838ec0e870f65e5d
19:41 < astropriate> even overriding it with    Handlebars.logger.log = console.log  gives me nothing
19:41 < astropriate> I also can't seem to be able to use any helpers
19:41 < Shayanjm> and I'd like to be able to use socket.io so that on connection, it gets the latest blog posts using that function and displays them in the current view: https://gist.github.com/shayanjm/f300ae175c63ff07eb15
19:42 < astropriate> the registered helpers  are under Handlebars.helpers variable
19:42 < Shayanjm> first off I'd like to be able to see that it's even returning the right values. If I were to call getLatest by itself in a separate route, it works. But if I use it in conjunction with socket.IO - it doesn't work
19:42 < Shayanjm> any help would be much appreciated
19:43 < `3rdEden> why on earth would you scrape the whole damn page every time you get a connection =/
19:44 < Shayanjm> honestly, this is a POC. This wouldn't ever go into production
19:44 < Shayanjm> Playing around with an idea
19:44 < `3rdEden> also, it doesn't work because your code assumes a req/res and socket.io doesn't give that to you
19:45 < Shayanjm> my code doesn't require it though. app.get "/getlatest", scrape.getLatest works perfectly
19:45 < gkatsev> astropriate: Handlebars.logger.log = console.log.bind(console);
19:47 < Shayanjm> `3rdEden : any thoughts?
19:48 < durango> What do you guys use for templating?
19:48 < durango> jade seems a bit to slow for me :/
19:49 < `3rdEden> durango: I would love to have your problem
19:49 < durango> `3rdEden: ?
19:49 < `3rdEden> where your template language is the slowest part of your system and you need to optimise it
19:49 < durango> haha
19:49 < durango> I mean JS isnt that hard >.>
19:49 < `3rdEden> ;D
19:49 < gkatsev> durango: handlebars
19:49 < qq99> underscore
19:49 < durango> gkatsev: aye, thinking about that :D have u used dust?
19:50 < qq99> and handlebars
19:50 < gkatsev> not used dust but it's pretty similar
19:50 < durango> yeah i was wondering if u would be able to compare it
19:50 < durango> awesome, ill give it a shot thanks
20:04 < alasi> Why isn't socket.io.js loading? https://gist.github.com/anonymous/9719333ebbb041b8b38f
20:07 -!- ServerMode/#Node.js [+o isaacbw] by hobana.freenode.net
20:10 <@MI6> joyent/node: isaacs v0.10 * f5602bd : npm: Upgrade to 1.3.2 - http://git.io/ZkA8NA
20:10 < neeky> b3tamax, thanks, looking at it now
20:14 < olalonde> am i the only one who doesn't like coffeescript :*(?
20:15 < HeartOfAce> I don't like it, but I'm forced to switch between CS and JS in my job 
20:15 < HeartOfAce> since my coworker refuses to touch JS with a ten foot pole
20:15 < rossk> olalonde: you're not alone
20:15 < ozette> olalonde, no i feel you
20:15 < olalonde> HeartOfAce: same for me :(
20:15 < olalonde> Im trying to convince my co-worker to drop CS but he 
20:15 < olalonde> wont :*(
20:16 < mbalho> i dont understand the fixation on syntax but not semantics
20:16 < mbalho> so weird
20:16 < brettlangdon> olalonde: https://github.com/dropdownmenu/node-redeye
20:16 < HeartOfAce> also, I'm working in RubyMine, and whenver I open a CS file and it lags like crazy on my shitty computer
20:17 < ozette> to me cs does not make any sense
20:17 < olalonde> lol brettlangdon 
20:17 < olalonde> I just think CS's syntax is too ambiguous making hard to read
20:18 < HeartOfAce> http://js2coffee.org/ I just run his code through here 
20:18 < olalonde> haha
20:18 < HeartOfAce> well, it's not really that bad, it reminds me of working with Ruby, so it makes sense to me that a Rails pro would wanna use CS 
20:18 < ozette> i like python syntax however, but cs .. just no, hard to read indeed
20:18 < mscdex> ruby.js
20:18 < olalonde> yea, but i dont like Ruby syntax either haha 
20:18 < olalonde> but I'd rather use Ruby then CS lol
20:19 < ozette> lol same
20:19 < mscdex> ruby.cs
20:19 < HeartOfAce> lol
20:19 < olalonde> I don't think he's a Ruby coder though :(
20:19 < mscdex> cs.rb
20:19 < brettlangdon> CS aside, am I the only person who is against languages that compile to other languages? I dont know if I see the benefit
20:19 < mscdex> brettlangdon: you are not alone!
20:19 < ozette> lol javascript
20:19 < thomblake> Don't most languages compile to other languages?
20:19 < olalonde> troll detected :)
20:19 < gkatsev> all languages compile to other languages
20:19 < ozette> you troll
20:19 < HeartOfAce> brettlangdon: we should just write ASM the god way intended! 
20:20 < brettlangdon> HeartOfAce… YES!
20:20 < gkatsev> HeartOfAce: ASM? I go straight to machine code.
20:20 < HeartOfAce> way god*
20:20 < Shayanjm> 0's and 1's mang
20:20 <@MI6> joyent/libuv: isaacs created tag v0.10.12 - http://git.io/_8UErQ
20:20 <@MI6> joyent/libuv: isaacs v0.10 * 3b4e0a2 : Now working on v0.10.13 (+1 more commits) - http://git.io/W64f3w
20:20 < olalonde> or http://xkcd.com/378/ (obligatory xkcd)
20:20 < brimstone> i flip bits on the memory chip with a magnet and sewing needle
20:20 < Shayanjm> not even that. high or low.
20:20 < Shayanjm> yeah
20:20 < Shayanjm> lol
20:20 < ozette> hahaha
20:20 < brettlangdon> ha
20:20 < gkatsev> I have a vim plugin for that, actually.
20:20 < Shayanjm> #1337h4x0r
20:20 < mscdex> wait what, just now created v0.10.12?
20:21 < thomblake> C-x M-c M-butterfly
20:21 < mscdex> oh libuv
20:21 < gkatsev> and now that joke has run its course
20:21 < rendar> http://tech.slashdot.org/story/13/07/09/1455200/http-20-will-be-a-binary-protocol http2 will be binary! thoughts? :)
20:22 < mscdex> rendar: computers understand binary better
20:22 <@MI6> joyent/node: isaacs v0.10 * 8bac885 : uv: Upgrade to v0.10.12 - http://git.io/C_5pDg
20:22 < rendar> mscdex: yeah i agree with http binaryness
20:22 < gkatsev> would you rather it be a unary protocol?
20:22 < HeartOfAce> I feel like a lot of the tech we use was invented by people that think XML is a good idea.
20:22 < mscdex> XMLOL
20:25 < olalonde> you guys said the X word … look what you did
20:25 -!- ServerMode/#Node.js [+o isaacbw] by hobana.freenode.net
20:25 < olalonde> caused a netsplit :(
20:26 < mscdex> i wish there was a yearly membership you could purchase that would permit you access to knowledgeable people when it comes to customer service
20:26 < olalonde> dont use X word again please
20:26 < mscdex> XP?
20:26 < olalonde> some markup language that starts with X
20:26 < olalonde> :P
20:26 < mscdex> XHTML?
20:26 < mbalho> hmacosxml
20:26 < b3tamax> Stop it.
20:27 < mbalho> its an encrypted operating system config file format that uses xml
20:27 < _6a68> xslt
20:27 < olalonde> haha
20:30 < SomeKittens> Is there any good way to get a request object for testing Express apps in mocha?
20:30 < SomeKittens> I've found supertest, which works great for the response.
20:31 < SomeKittens> but I need to write some tests for functions that use the `req` object, and I'd like to avoid mocking them up myself.
20:36 <@MI6> joyent/node: tjfontaine created branch v0.10.13-release - http://git.io/mIStWg
20:40 < ThePrimeMedian> I have an express app built - and I know node compiles the app before running it.  Is there a way I can compile it and send to the client? I do not want to send him source code
20:41 < mbalho> any browser can view source code, sorry
20:43 -!- mode/#Node.js [+o isaacbw] by ChanServ
20:44 < ThePrimeMedian> mbalho: are you telling me that the browser can read my node.js server source code?
20:44 < ThePrimeMedian> i want to compile hte node server code into it's own compiled executable
20:44 < pachet> that'd be awesome
20:45 < pachet> the reading the server code i mean
20:50 < garthk> ThePrimeMedian: the best you can do is to uglify the code: https://github.com/mishoo/UglifyJS
20:51 < ThePrimeMedian> yeah, but the whole site is broken in modules/components
20:51 < garthk> It's not impossible to un-uglify, but it certainly raises the cost of third-party maintenance.
20:52 < daslicht> try to unobfusecate such kind of stuff:
20:52 < daslicht> http://codecanyon.net/item/php-javascript-obfuscator/full_screen_preview/411175
20:52 < garthk> ThePrimeMedian: just before shipping is a little too late to consider how you're going to protect your work from theft.
20:53 < ThePrimeMedian> im not about to ship.
20:53 < garthk> That helps. 
20:53 < garthk> Perhaps you could abuse browserify, which dumps everything into one file?
20:53 <@MI6> joyent/node: Timothy J Fontaine v0.10.13-release * e32660a : 2013.07.09, Version 0.10.13 (Stable) (+1 more commits) - http://git.io/P4-6mw
20:53 < ThePrimeMedian> cheers
20:54 < mbalho> ThePrimeMedian: oh by 'the client' you mean 'a paying client' and not 'the client side'
20:54 < ThePrimeMedian> right mbalho
20:54 < mbalho> ahhhh sorry i misunderstood
20:54 < ThePrimeMedian> all good]
20:58 < thomblake> You could always write most of your code in C.
21:03 < rossk> Anyone here make use of andbang? Do you and your team like it?
21:08 < FunnyLookinHat> Is there any reason I shouldn't be able to nest an async.forEach within an async.waterfall ?  I can't seem to get the waterfall callback to fire
21:09 < rossk> FunnyLookinHat: that should work fine
21:09 < rossk> double check which callback you are _actually_ calling
21:09 < rossk> it can get confusing if everything is 'callback'
21:09 < FunnyLookinHat> rossk, yeah...  ok I'll triple check  :)
21:10 < rossk> :D
21:10 < FunnyLookinHat> I try to use a relative callback... i.e. waterfall = waterfallCallback - just to keep it straight... clearly not good enough!
21:10 < rossk> fell free to pm with a gist if you need a second set of eyes
21:14 < FunnyLookinHat> rossk, Ah - was obvious once I read through it again.... heh.
21:15 < rossk> great! I know that feeling
21:15 < rossk> off for some nomnoms
21:16 < spobat> has anyone the log of this channel of the last two days?
21:17 < spobat> I search something but haven't logged it (yep, just enabled it in my client)
21:18 < mbalho> spobat: look at the channel topic
21:18 < spobat> thank you :)
21:18 < spobat> all channels should have that
21:19 < spobat> found it :>
21:22 < jrm2k6> Hi guys, I have this snippet https://gist.github.com/jrm2k6/5961395, and i dont know how to do to make the load wait
21:23 < jrm2k6> i want to wait to do the last return that the first return is done
21:23 < mbalho> jrm2k6: https://github.com/maxogden/art-of-node#callbacks
21:24 < FunnyLookinHat> I'm having trouble using eager loading with Sequelize and the find() command... keeps returning undefined but no error messages...
21:25 < FunnyLookinHat> Is this not a valid use ? http://hastebin.com/tihituhihe.coffee 
21:26 < FunnyLookinHat> Oh the syntax changed...  man the docs for Sequelize suck  :D
21:27 <@MI6> joyent/node: tjfontaine created tag v0.10.13 - http://git.io/4ArTzg
21:29 < jrm2k6> mbahlo i checked that but i m still having issue
21:30 <@MI6> joyent/node: Timothy J Fontaine v0.10 * f1bb5dc : blog: Post for v0.10.13 (+4 more commits) - http://git.io/hSPV0Q
21:34 < xangelo> so. not sure if anyone I was tlaking to last night is around - but I've loaded the entire packet..
21:34 < xangelo> turns out node-pcap's "decode" method is looking for a JS object...
21:34 < xangelo> and pcap-parser refuses to give me all the data I need
21:35 < xangelo> I'm going to go through some more code on node-pcap, see if I can find anything useful - if not, I'm going to have to write my own parser *sigh*
21:35 < jrm2k6> https://gist.github.com/jrm2k6/5961486 I need to return a function but for some reason, even with a callback it doesnt do that
21:41 < jrm2k6> any help?
21:44 <@nexxy> ericelliott, ping
21:44 < Zaxnyd> I'd like to get help setting up an ssh tunnel.  Is anyone able to help or point me in the direction of a better room to ask?
21:49 < timkuijsten> Zaxnyd: a channel for the os you're using?
21:50 < timkuijsten> although the os won't really matter..
21:50 < piklu_> Hi guys - is is 7 ms good for a redis base? 
21:50 < piklu_> 7 ms difference between redis and node
21:50 < timkuijsten> Zaxnyd: #openssh
21:50 < bingomanatee> does anyone have a good library until for smoothing a series of XY coordinates?
21:51 < Zaxnyd> ty timkuijsten 
21:51 < someprimetime_> hey i'm trying to use: https://github.com/madhums/node-imager
21:51 < timkuijsten> Zaxnyd: and try http://www.openssh.org/faq.html first
21:51 < someprimetime_> and i'm also using express, and it says you can just upload from req.files.image
21:51 < someprimetime_> but I need to save it to disk first right?
21:51 < Zaxnyd> timkuijsten, I tried this, but had no luck: http://serverfault.com/questions/321132/how-to-start-a-reverse-tunnel-with-putty
21:51 < someprimetime_> AFAIK i can't just use the stream to upload the image like that
21:52 < bingomanatee> If you use Canvas you can generate a PNG image stream with no disk hits
21:52 < bingomanatee> You will have to populate an Image with data from the source,ad you can use imageMagick for that task. 
22:00 -!- mode/#Node.js [+o TooTallNate] by ChanServ
22:02 < piklu_> Can anyone tell me a 7ms delay between node.js app and redis server is okay ???
22:03 <@tjfontaine> I guess that depends on where the delay is encountered
22:03 <@nexxy> piklu_, if you don't know whether or not it's a problem; it's probably not
22:03 < piklu_> nexxy : asking other people is better
22:03 < piklu_> I am starting a redis based hosting
22:03 < piklu_> so choosing a provider
22:03 <@tjfontaine> the question is if its ok for your use case
22:04 <@tjfontaine> and if that's a delay on query or on connection
22:04 <@tjfontaine> or a delay on set
22:04 <@nexxy> if the host isn't on the same physical host
22:04 <@nexxy> 7ms is pretty decent
22:04 < piklu_> basically it is from nodejitsu
22:04 < piklu_> their drone at us-east to our preferred provider
22:04 <@nexxy> it should be fine
22:05 < piklu_> Ok, so I can choose them and deploy our hosting over there
22:06 < Chiffon35> hi all
22:09 < astropriate> Hello friends
22:09 < piklu_> astropriate: Hi
22:15 < ForSpareParts> Is there any situation in which it's considered correct to use constructors rather than object literals? I get the impression it's frowned on, but rules like that often have exceptions...
22:17 < garthk> ForSpareParts: depends what you're doing. The V8 engine's optimiser works best when you have lots of small functions on yourobject.prototype accessing shared state via 'this'. It might feel more JavaScript-ey to have functions closing around functions closing around functions closing around functions, but it tends to defeat V8's optimiser and thrash the garbage collector.
22:19 < theGleep> Is there an extension or library that would allow me to use Node to interact with my OS like AutoHotKey? 
22:20 < ForSpareParts> garthk, I'm thinking about a situation where I need to create a bunch of objects with similar properties (a la "traditional" OOP). Sounds like it'd be reasonable to set non-function properties in a constructor, then use .prototype afterward to attach functions. Am I on the right track?
22:21 < garthk> ForSpareParts: you can do that, sure. 
22:22 < ForSpareParts> garthk, OK, cool. Perhaps the more important question: *should* I do that?
22:23 < garthk> ForSpareParts: if it works, why not? Sure, someone might argue it suits their style better if you do it differently, but shipping on time is a feature, too. 
22:23 < garthk> I try not to get too hung up on what you "should" do. Too much of that, and you end up as feared and despised as the Twisted Python guys.
22:24 < ForSpareParts> garthk, Fair enough. I make it a habit to learn everything I can about best practices in a language/platform/whatever before I start writing, which is why I ask. I really don't want to write code that makes other developers hate me, if I can help it.
22:28 < werle> Raynos: I love what you're doing with engine.io
22:39 < Raynos> werle: :)
22:43 < xangelo> so - another update, I've hacked on node-pcap-parser to give me the entire raw packet, frame and everything
22:44 < xangelo> that can now be fed through node-pcap (decode.ethernet) to give me most of the data that I need - there are some error cases that I'm solving for at the moment
22:49 < piklu_> xangelo: node-pcap???
22:49 < piklu_> sniffinf??
22:56 < theGleep> Is there an extension or library that would allow me to use Node to interact with my OS like AutoHotKey? 
23:00 < Raynos> werle: your nexus guide is awesome
23:01 < Raynos> werle: Would love to read more about all the v8 stuff
23:02 <@MI6> joyent/node: isaacs v0.10 * b3b8e74 : tools: Add next/prev version scripts - http://git.io/6j7d8A
23:16 < HeartOfAce> Java is to JavaScript what Car is to Carpet. Haha.
23:18 < liamkeily> i have a gameloop which im currently implementing with setInterval(){} it works fine but if i add like 100 npc's to my game then it loops through all of these and now my socket.io listeners are slow
23:18 < liamkeily> how can i stop the gameloop doing this?
23:18 < andrewaclt> Why do I see a bunch of [ReferenceError: process is not defined] in node debugger?
23:22 < xangelo> liamkeily: why is it looping through all your npcs? Shouldn't your gameloop be independent from your list of npcs?
23:23 < alasi> liamkeily: Make it not loop and contact the server at the sane time. Make it only contact the server when it needs to be contacted, not if there werent any changes.
23:24 < alasi> My Websocket game was extremely slow because other players would not receive the message until 20 seconds later because the buffer was so backed up.
23:24 < alasi> I switched the message call to only send when there's a key event (move left, right, up, down, chat message enter)
23:25 < liamkeily> yeah i have it like that
23:25 < alasi> AKA, no setinterval
23:25 < alasi> why setinterval? Just use listeners
23:25 < liamkeily> hmm ive recently switched maps to sending over socket.io rather than loading them locally
23:25 < alasi> huh
23:25 < liamkeily> 1 sec :p
23:25 < alasi> And thats affecting the buffer?
23:26 < liamkeily> yes it is
23:26 < alasi> Just use http requests for data as big as that :P
23:26 < liamkeily> its taking ages
23:26 < liamkeily> ok
23:26 < alasi> Use static files or mongodb
23:26 < liamkeily> can i do that through my socket.io server?
23:26 < liamkeily> like can i have a web server and socket.io running at the same time?
23:26 < alasi> yeah
23:26 < alasi> maybe use a diff port
23:26 < liamkeily> cool cause yeah
23:26 < alasi> Or..
23:26 < liamkeily> the maps are taking looong
23:27 < alasi> No need to send something > 120 characters over websockets
23:27 < alasi> Could I check out the game? :P
23:27 < liamkeily> http://pixelot.net/dev2013/view.html
23:27 < liamkeily> Tester
23:27 < liamkeily> test
23:27 < liamkeily> but erm
23:27 < liamkeily> it may take ages to load :)
23:27 < liamkeily> cos of the map issue
23:27 < liamkeily> which is only an issue since i added lots of npcs
23:27 < liamkeily> lol
23:28 < alasi> and it's multiplayer?
23:28 < liamkeily> it is
23:28 < alasi> Nice job btw, are you a kid?
23:28 < liamkeily> im 19 :)
23:28 < alasi> ah ok
23:28 < liamkeily> you managed to get it to load yet?
23:29 < alasi> Well... yeah i see music and trees and chests and stuff
23:29 < liamkeily> 1 sec
23:29 < liamkeily> oh
23:29 < liamkeily> login on the top right
23:29 < liamkeily> username: Tester
23:29 < liamkeily> password: test
23:29 < piklu_> Hi Guys
23:29 < piklu_> what offering would u like to see in a redis based hosting?
23:30 < alasi> ok
23:30 < liamkeily> you cant see nothing without loggin in:p
23:31 < jrm2k6> https://gist.github.com/jrm2k6/5962230 Hi guys, I have this issue with a beginning of what i thought was a solution
23:31 < jrm2k6> any idea how i can fix it? it is a callback issue
23:33 < alasi> Hey, why isn't my socket.io.js being served here? https://gist.github.com/anonymous/9719333ebbb041b8b38f
23:38 < alasi> liamkeily: ...
23:38 < liamkeily> so yeah
23:38 < liamkeily> thats where it gets a bit mental
23:38 < liamkeily> lol
23:39 < alasi> ...
23:39 < alasi> So yeah 
23:39 < liamkeily> im not sure tbf
23:39 < liamkeily> if its a client side error
23:39 < liamkeily> or serverside
23:39 < alasi> does this use sockets.io?
23:39 < liamkeily> if they are distibuted on the map it is't as mad
23:39 < liamkeily> yeah it does
23:39 < alasi> liamkeily: OMG!!
23:39 < alasi> can you help me w/ this?
23:39 < crabdude> Howdy howdy, just wanted to mention here that I'm starting work on a node.js addon for remote Chrome Devtools support if anyone's interested in contributiong: https://github.com/CrabDude/lookingglass =)
23:39 < alasi> https://gist.github.com/anonymous/9719333ebbb041b8b38f
23:40 < alasi> ^Socket.io.js is being 404'd
23:40 < liamkeily> why omg?
23:40 < liamkeily> haha
23:40 < alasi> I have some issues
23:40 < alasi> Maybe you could help me with a simple problem
23:40 < liamkeily> with socket.io?
23:40 < liamkeily> yeah i have a few
23:40 < liamkeily> haha
23:40 < alasi> socket.io.js isn't being served by the server
23:40 < alasi> https://gist.github.com/anonymous/9719333ebbb041b8b38f
23:40 < liamkeily> hmm
23:40 < alasi> How did your setup work with sendfiles?
23:41 < alasi> Because I'm deploying via heroku
23:41 < liamkeily> not sure what you mean
23:42 < liamkeily> mine just automatically serves socket.io.js
23:42 < liamkeily> when i start a socket.io server
23:42 < liamkeily> and i use 1 line of code to do that
23:43 < ozette> alasi, hi i saw the link u sent m
23:43 < alasi> What is that line of codde?
23:43 < ozette> me
23:43 < alasi> ozette: Yay you're here
23:43 < alasi> so...
23:43 < alasi> It's still not being served
23:43 < ozette> you did not define "ip"
23:43 < alasi> :P
23:43 < alasi> Oh
23:43 < alasi> IDK what heroku's ip is
23:43 < ozette> it should be your app url
23:43 < alasi> should I just do the herokuapp url?
23:43 < alasi> ok
23:43 < alasi> brb
23:44 < liamkeily> hmm so how to serve maps over http instead of socket.io?
23:44 < alasi> Well as long as the maps arent dynamic
23:44 < alasi> Read from a text file or db or something
23:44 < liamkeily> well
23:44 < liamkeily> i do want them to be dynamic
23:45 < liamkeily> maybe i send the bulk of the map via http
23:45 < liamkeily> and then updates via socket
23:46 < ozette> alasi, and port should be the port socket.io is listening on
23:46 < alasi> ozette: Yeah, the port variable is defined on ln 24
23:48 < ozette> ok
23:48 < alasi> ok
23:48 < alasi> Dammit heroku deploy is so slow
23:49 < alasi> ozette: Nerp. Didnt help
23:49 < ozette> what do you get a 404?
23:50 < alasi> ozette: Sockets.io.js GET http://talking-circles.herokuapp.com/socket.io/socket.io.js 404 (Not Found)  --.--
23:50 < alasi> If we go to the direct url it says cannot GET it
23:50 < alasi> == 404
23:50 < ozette> try this for a second; on line 3: io = require("socket.io").listen(1337);
23:51 < ozette> and set port on line 27 to 1337
23:51 < alasi> ...ok
23:51 < garthk> Anyone used shepherd with browserify? Strikes me I could do hook all my client-side components together with the same stack as my server-side components…
23:52 < ozette> alasi, and see if it works, or if you can acces the socket.io client script through the browser by going to $your_heroku_url_app:$socket.io_port/socket.io/socket.io.js
23:52 < alasi> I'll deploy, we'll see wut happuns
23:52 < liamkeily> is node.js performance linear to the specs of the server?
23:52 < ozette> sure
23:52 < liamkeily> so if i doubled my cpu and ram would performance of node double
23:53 < itsnotlupus> Node processes don't really like taking more than 1.6GB of ram, unless you use Buffers.
23:53 < liamkeily> ok
23:53 < liamkeily> what about cpu wise?
23:54 < liamkeily> im developing an mmorpg and want to know how it will scale in the future
23:54 < itsnotlupus> if you're cpu-bound, yes. your node process shouldn't be CPU bound, though.
23:54 < liamkeily> i just ran a test with 1000 NPC's which meant it was doing 1000 loops a second
23:54 < alasi> ozette: Nerp. Heroku doesnt offer the server on multiple ports apparently
23:54 < liamkeily> ran pretty smooth tpf
23:54 < alasi> thats normal
23:55 < liamkeily> ok alsoo
23:55 < alasi> yes?
23:55 < ozette> alasi, oh really.. hmm
23:55 < liamkeily> for each player in the game, im creating a new instance of User class. It seems that for each instance it has a duplicate of all the methods?
23:55 < alasi> yeah, try it urself, it's at http://talkingcircles.herokuapp.com :P
23:55 < itsnotlupus> liamkeily: chunk your server architecture into pieces that scale horizontally. Avoid having one big mega-server that does everything. that tends to be more expensive to scale.
23:55 < alasi> http://talking-circles.herokuapp.com:1337/socket.io/socket.io.js
23:56 < ozette> and if you run your application locally it works?
23:56 < itsnotlupus> liamkeily, use prototypical inheritance. your instances will share one single set of methods available on their prototype chains.
23:56 < ozette> lol i see
23:56 < liamkeily> itsnotlupus: do you mean handle chat, moving etc on seperate node servers?
23:56 < alasi> liamkeily: Remember, if you're using socket.io, you don't need to create new objs, you just need one var. Pretend it's clientside javascript, not php
23:57 < alasi> ozette: Me? Yeah
23:57 < itsnotlupus> liamkeily: possibly. generally you want each server component to be clearly bound by one thing. disk-bound, memory-bound, cpu-bound. 
23:57 < alasi> People enter the canvas room as a circle with their name on it. They can walk up to other circles and talk to them
23:57 < liamkeily> ah that sounds like quite  a good idea
23:57 < alasi> It's like a nonlinear irc
23:57 < itsnotlupus> you can still have them all live on one box to start with, but you can also spread them out and scale them horizontally as needed.
23:57 < liamkeily> also the way i have objects atm
23:57 < alasi> you just need one var thats an object
23:57 < _6a68> liamkeily: don't optimize until you have a load testing tool that can simulate user activity. run lots of load, break your server, profile your code for hot spots, then fix those. keep everything else simple. my two cents :-)
23:57 < alasi> no classes
23:58 < liamkeily> i use function User {} then var user = new User ... will the prototype thing really speed it up/
23:58 < ozette> alasi, yea you :-), well ok you can change it back to "server"
23:58 < alasi> ozette: Ok...
23:58 < _6a68> once you understand the bottleneck, you can plan for the future without surprises
23:58 < alasi> itll listen on 5k now
23:58 < itsnotlupus> liamkeily: what you're describing could be prototype-based. depends if you do something like User.prototype = { coolMethod1: function(){}, coolMethod2: function() } or if you're adding methods manually within your constructor (which would be bad.)
23:59 < itsnotlupus> liamkeily: and I shouldn't have used the word "inheritance" above. brain fart.
23:59 < alasi> now rollbacking..
23:59 < liamkeily> yeah i think im using a really bad method of OOP
--- Log closed Wed Jul 10 00:00:33 2013
