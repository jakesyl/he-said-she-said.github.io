--- Log opened Fri Feb 22 00:00:14 2013
00:02 <@isaacbw> cloudbender, carpii, it is a client setting. There's no IRC command for that
00:02 < carpii> ok, makes sense
00:02 < carpii> i need a new client :/
00:03 < cloudbender> xchat was great, but mine expired and I'm not insalling it on this machine
00:03 < cloudbender> ... for money.
00:04 < cloudbender> I'll use pidgin for awhile
00:04 < DarkArgon> its free for linux
00:04 < DarkArgon> and btw there is hexchat for windows
00:04 < cloudbender> hmmm
00:04 < cloudbender> lmme seeeee
00:06 < cloudbender> brb
00:08 < s5fs> Question about socket.io on the client. When I run the profiler in chrome, it seems that my memory footprint continues to increase if I have a socket connection, regardless if I actually am consuming data. Is this normal?
00:12 < carpii> s5fs, what transport is the browser ending up with?
00:12 < carpii> io.transports[socket.id].name
00:13 < s5fs> carpii: websockets
00:13 < s5fs> carpii: is there a way I can confirm from the browser or just from node?
00:14 < s5fs> carpii: I mean, I see a wss:\\ connection in chrome's Network tab, so I'm assuming websockets
00:14 < carpii> in network tab there should be a uri which represents the web socket, you should be able to tell from that
00:14 < s5fs> whopos,doodled my slashes
00:14 < s5fs> carpii: yes, confirmed its wss://
00:14 < carpii> how are you monitoring mem usgae?
00:15 < s5fs> carpii: Profiles tab in chrome, Take Heap Snapshot
00:16 < s5fs> carpii: it's very minor, but I'm troubleshooting another related issue and was wondering if this was normal, or if i just suck more than usual today
00:16 < fastest963> you can look at the messages in that socket by clicking on the socket in the Network tab
00:16 < carpii> i really dont know, im just developing socket.io here and wanted to check if im seeing the same
00:16 < carpii> have you narrowed it down to socket.io specifically? could it be jQuery events firing?
00:17 < s5fs> fastest963: i'm getting messages at an obscene rate, is there a way to see if it's queing up?
00:17 < fastest963> on the client side you mean?
00:17 < s5fs> carpii: yes, nothing else is going on except socket.io.
00:17 < carpii> no timers or anything else?
00:17 < s5fs> fastest963: yes, is there a way to see if socket.io is queing up on the client?
00:17 < s5fs> carpii: nope, i've gutted the code in question so i can debug more easily.
00:18 < carpii> oki
00:18 < fastest963> you might be able to look in: chrome://net-internals/#sockets
00:18 < s5fs> fastest963: cool, i'll take a look
00:18 < carpii> im seeing some minor increase in heap usage too, its minor but its not yet clear where the arms being allocated
00:19 < carpii> just 'object'
00:19 < s5fs> carpii: useful, right? i'm still learning the profile, so far it just makes me cuss a lot
00:19 < carpii> useful yea :) ive not used the heap dump tool before though
00:20 < fastest963> s5fs: you're saying memory usage is going up by using websockets?
00:20 < s5fs> carpii: the cpu profile is actually super useful, i just fixed a bunch of slow rendering issues with some canvas elements a few minutes ago.
00:20 < carpii> it may well be that chrome has a gc process of its own outside of v8
00:20 < carpii> ah ive used cpu profiler, yeah thats nice 
00:20 < s5fs> fastest963: yeah, here's an example: http://jsbin.com/amoqop/1/edit
00:20 < carpii> tho its only now im writing node that client side cpu is something that interests me much
00:21 < fastest963> s5fs: what update branch are you on for chrome? (stable, nightly, canary, beta)
00:21 < s5fs> carpii: i'm doing a boatload of client-side crap right now, but i'd rather be on the server. sad days.
00:21 < carpii> :(
00:21 < carpii> what sort of increase are you seeing?
00:21 < s5fs> fastest963: stable
00:21 < s5fs> carpii: very minute, maybe 1k every few minutes
00:21 < carpii> ivm seeing maybe 11k since we started discussing it, thats with jquery and idle socket.io
00:21 < carpii> hm
00:21 < cloudbender> HexChat has issues it seems
00:22 < cloudbender> Pidgin will have to do
00:22 < fastest963> s5fs: ah, if you try out beta (which you can side-by-side) I'm pretty sure you can see your usage quickly just like: http://cl.ly/image/0w0S1k0y3t2w
00:22 < fastest963> (i'm on canary but I think that made it to stable branch a few weeks ago looking at the buildbot)
00:22 < carpii> oh wow, just found the feature on the bottom bar
00:23 < carpii> itll filter to show objects created bteween snapshot x and y
00:23 < s5fs> fastest963: woah, that's awesome. i'll pull canary, i had it until i reinstalled
00:23 < s5fs> carpii: yes, the UI for chrome dev tools is crazy, you can even compare snapshots down at the bottom. i read the docs, not super useful, haha!
00:23 < carpii> hehe
00:24 < carpii> so most of my ram growth seems to be coming from (compiled code)
00:24 < fastest963> s5fs: look on the google-developers Google+ page, they post some videos on how to debug memory usage ;)
00:24 < MI6> joyent/node: bnoordhuis created branch issue4808 - http://git.io/PmtBAw
00:24 < carpii> which i guess is chromes mem mgr, rather then userland javascript
00:24 < carpii> but not sure
00:24 < s5fs> I'm certainly I have a leaky canvas element, but I wanted to be sure socket.io wasn't adding too much overhead as well. this stupid app is supposed to stay running for hours if not days at a time.
00:24 < cloudbender> Could someone test this on a fast machine and tell me the time it reports ?
00:24 < cloudbender> https://gist.github.com/cloudbender/5007444
00:24 < AdrienBrault> hey guys, what's the best way to handle forms binding,rendering,etc with express ?
00:24 < s5fs> cloudbender: sure, define 'fast'
00:25 < cloudbender> faster than an 8 year old vista laptop ?
00:25 < carpii> arrinpv, 100,000 cycles: 136ms
00:25 < cloudbender> shweet
00:25 < carpii> 8G vmx server, quad core i think 
00:25 < cloudbender> My best time was 400 ms
00:25 < MI6> joyent/node: Ben Noordhuis v0.8 * 22d3eff : doc: add note about child process line buffering  Fixes #4808. - http://git.io/bqfs4w
00:26 < carpii> thats inside a virtual linux machine too, so probably faster on raw metal equiv 
00:26 < cloudbender> am I still on ?
00:26 < cloudbender> ok in a vm good to know
00:26 < s5fs> cloudbender: 135.622, chrome on ubuntu, i5 + 8gig ram
00:26 < cloudbender> so maybe it will squeak down to around 100 ms
00:27 < cloudbender> 135 is good
00:27 < s5fs> cloudbender: my results are on real hardware, but i have stuffs running too
00:27 < thealphanerd> has anyone gotten node.js working on an android?   Specifically looking at the nexus 7 tablet
00:27 < cloudbender> np. Node is single-threaded, and that function does alot of shiznit.
00:28 < cloudbender> so 136ms per 100,000 is not to shabby
00:28 < s5fs> cloudbender: haha, crap, you want that thru node? sorry, i used a browser (head in clientside today)
00:28 < cloudbender> good to know it ran in a browser ok
00:29 < cloudbender> using the array goodies everyone told me to avoid for iteration
00:29 < s5fs> cloudbender: 157ms, ubuntu 12.10, node 0.8.18
00:29 < s5fs> cloudbender: ran faster in the browser, how about that haha
00:29 < cloudbender> ok.  as I say my node.exe did it in 410ms
00:30 < cloudbender> using for loops it ran at 1200ms
00:34 < cloudbender> thanks wonderful peeps
00:35 < DarkArgon> cloudbender, 7103ms @ raspberry pi
00:36 < cloudbender> Right on ! Pi rocks man
00:37 < DarkArgon> 6200 best run
00:37 < cloudbender> I used 100,000 cycles instead of testing arrays with 100,000 elements
00:38 < cloudbender> same difference me thinks
00:51 < asdf12> thealphanerd: probably obvious, on android idk, but on the hardware, it'll run fine
00:51 < thealphanerd> I think I found a way to sideload debian
00:51 < thealphanerd> which will allow me to compile / install / link via apt-get
00:51 < thealphanerd> fingers crossed
00:52 <@isaacbw> Segmentation fault (core dumped)
00:52 <@isaacbw> heh
00:52 < asdf12> thealphanerd: the biggest proof is actually in webos running on nexus 7
00:52 < asdf12> webos uses node.js
00:52 < thealphanerd> interesting
00:53 < asdf12> yea its actually a shame !
00:53 < asdf12> with webos i mean
00:54 < asdf12> an os that uses node.js extensively for building os services and apps :(
00:54 < thealphanerd> and this was done by palm all that time ago?
00:54 < asdf12> no i doubt it, it was hp
00:54 < thealphanerd> oh
00:54 < thealphanerd> ok
00:54 < thealphanerd> I'm confused
00:54 < thealphanerd> webos
00:54 < asdf12> i think it only came with webos 3.x~
00:54 < thealphanerd> was that not a palm thing?
00:55 < asdf12> yea but i'm saying the use of node.js probably came after hp bought plam
00:55 < thealphanerd> ahhhh
00:55 < thealphanerd> got it now
00:55 < halfhalo> node was on webos for quite a while before 3.x
00:55 < halfhalo> It either shipped with 1.4.5 or 2.0
00:56 < toad-br> someone has an example of unit tests, using mocha with socket.io-client?
00:57 < toad-br> ** with namespaces
00:57 < asdf12> the only other OS i can think of is maybe BB10 ? but it wouldn't be extensive use, more like a you have the option
01:08 < asdf12> does anyone use mocha for browser testing?
01:08 < substack> asdf12: why should that matter? you should ask specific questions
01:09 < acidjazz> how the hell do i concatenate a variable to.. anything in stylus??
01:10 < asdf12> substack: it's more curiosity, or does everyone just use jasmine
01:10 < substack> asdf12: I hate both of those
01:10 < substack> particularly jasmine
01:11 < chilts> tap for me ... though I have tried it in the browser
01:11  * chilts uses substack's tape
01:11 < substack> tape works in browsers and in node
01:11 < chilts> s/have/haven't/ :)
01:11 < substack> and it doesn't do much bullshit
01:11 < chilts> cool
01:11 < chilts> yeah, that's why I like it
01:12 < substack> tape is meant to work in every browser ever
01:12 < chilts> EVER! :)
01:12 < substack> (so long as you use browserify)
01:12 < substack> and you'll need to shim console.log() in <=ie8 unless you run it on testling-ci
01:28 < toad-br> i'm try to test socket.io, using mocha and socket.io-client... but it's not working on test, some one can help? http://jsfiddle.net/HtCdW/
01:33 < carpii> whats 'not working'
01:36 < acidjazz> fore hte love of god how the hell do you concatenate in stylus
01:36 < acidjazz> animation delay is
01:36 < acidjazz> i = variable
01:36 < acidjazz> i + 's' ?
01:36 < acidjazz> {i}s ?
01:37 <@isaacbw> does return callback() in v8 remove the function from the stack before calling callback()?
01:37 < acidjazz> on tuesdays
01:37 <@isaacbw> what day is today
01:37 < othiym23> isaacbw: nope
01:38 < othiym23> isaacbw: somebody just put out a new module that will do tail call elimination using trampolining, but it requires a precompile pass using esprima so is basically not JavaScript
01:38 <@isaacbw> there, tail calls. It was on the tip of my tongue and I was googling furiously
01:38 <@isaacbw> I'll just figure out something else
01:41 < othiym23> isaacbw: if you're trying to do something tricky with recursion, you can almost always replace it with an imperative loop
01:41 < othiym23> or promise chains!
01:42 <@isaacbw> no, I'm doing something weird
01:42 <@isaacbw> and probably stupid
01:43 <@isaacbw> I wish gmail offered an API closer to the actual gmail internal storage
01:45 < cTIDE> what, you don't like IMAP??
01:45 < acidjazz> how the hell do you concatenate in stylus
01:47 <@isaacbw> not when I have to pull two copies of every email because of how Gmail treats the All Mail folder, cTIDE 
01:49 < AAA_awright> Sounds like a problem with IMAP supporting only folders and not tags
01:49 < AAA_awright> Or maybe it does? And your client just doesn't recognise the messages are the same
01:51 <@isaacbw> AAA_awright: that's not the point at all of what I'm saying
01:51 <@isaacbw> you're very contradictory
01:51 < acidjazz> how do you concatenate in stylus?
01:52 < AAA_awright> isaacbw: ... Then what are you saying
01:52 <@isaacbw> AAA_awright: I'm saying what I'm saying
01:52 < AAA_awright> Me too
01:52 < AAA_awright> What's wrong with suggesting IMAP is broken?
01:57 < _pash> hello i am running my app on my server in a dirictory /login but when i go to domain.com/login i just get the files that are there... the app is listening on port 8080 when i go to domain.com:8080 the app works... how can i make it work on domain.com/login?
02:00 < carpii> thats kinda a vague question without seing your code
02:00 <@isaacbw> _pash: it has to be on port 80, which is the default http port
02:01 < _pash> here http://cl.ly/image/2T1h111I2s2n
02:04 < _pash> if i listen on port 80 i get http://paste.pound-python.org/show/30596/
02:05 < azylman> _pash: http://stackoverflow.com/questions/9164915/node-js-eacces-error-when-listening-on-most-ports
02:05 < Guest29163> j
02:08 < _pash> azylman: alright, but how do i make it work for the /login directory? 
02:10 <@isaacbw> _pash: I answered your question
02:10 <@isaacbw> you need to run it with sudo
02:10 <@isaacbw> port 80 is protected on most systems
02:11 < azylman> What's accepted practice for that, anyway? Presumably running via sudo isn't the best way to do it
02:11 <@isaacbw> though in production you should put more thought into your system settings
02:11 <@isaacbw> sudo is fine for local testing
02:11 < azylman> I'm talking about prod
02:11 < azylman> Would you do like port tunneling or something?
02:11 <@isaacbw> you usually create a user with fine-tuned permissions to run your server under
02:12 < bnoordhuis> azylman: authbind, iptables REDIRECT, CAP_NET_BIND_SERVICE
02:13 < azylman> bnoordhuis: I'm aware of most of the various options, I was asking if there's something that's considered best practice
02:14 < bnoordhuis> meh. pick whatever works best for you
02:15 < chjj> azylman: the cap_net_bind_service thing is what i find myself using a lot lately. i don't think there's anything widely considered best practice. if there were, i'd probably disregard it anyway.
02:26 < _pash> isaacbw: how can i make node listen on port 80 on my server not home machine?
02:27 <@isaacbw> you mean how do you run it on your server?
02:27 < _pash> yes, can it run alogside apache? i suppose not
02:28 <@isaacbw> if they are on different ports
02:28 < Lorentz> yep, as long as on different ports, should be ok
02:29 < redshadowhero> You can use apache to pass through to node, I believe, but as long as they are on different ports. So you can hit an apache frontend and reach a node backend. From what I understand, apache isn't super good at being a frontend in this matter, though.
02:30 < _pash> alright thanks
02:30 <@isaacbw> aka 'reverse proxy'
02:31 < redshadowhero> Yeah. You have to enable mod_proxy, though.
02:31 <@isaacbw> nginx is the popular choice for a reverse proxy
02:31 < redshadowhero> Yeah, it is.
02:31 <@isaacbw> or http-proxy if you need logic
02:31 < redshadowhero> I've used it, and it's not so bad.
02:32 < Lorentz> why not node as reverse proxy
02:32 < auser> hey all
02:32 <@isaacbw> Lorentz: that is what http-proxy is for
02:33 <@isaacbw> if you don't need logic though, nginx is more battle worn 
02:34 < acidjazz> Maximum call stack size exceeded
02:34 < acidjazz>     at samsungkeys() (_loader.styl:39)
02:35 < auser> we're seeing some really odd errors in production where client requests are queuing up and our server (express) isn't serving them up fast enough so the OS takes over and kills our process
02:35 <@isaacbw> auser: how many requests are you getting
02:35 < auser> in the short term, we're thinking of setting a timeout on the server socket for every new request until we can debug where the issue is
02:36 < auser> only slightly higher than normal, at most a few hundred, at most
02:37 < auser> isaacbw: I don't think it's related to load
02:37 <@isaacbw> do you have a database?
02:37 < auser> I've spent all day in strace and gdb, but can't seem to track down the location of the bug… that aside, with express, do we have access to the socket to set a timeout in the short term
02:38 < auser> yeah, I suspect it has to do with mongo/redis, but not sure yet
02:39 < auser> we do isaacbw 
02:41 <@isaacbw> reverse proxy?
02:42 < dp_> I get an error while npm packaging (http://pastebin.com/PHi39WQn), could someone be kind to help? I am trying to install my repo from here (https://github.com/dparpyani/TaskCmd).
02:43 < auser> I don't think we have one 
02:46 < _DomY-Dom> Hello, I'd like to run nodejs alongside apache, which of these two solutions is  better: 
02:46 < _DomY-Dom> http://stackoverflow.com/questions/14168996/avoid-the-conflict-on-port-80-between-nodejs-and-apache  or http://arguments.callee.info/2010/04/20/running-apache-and-node-js-together/ ?
02:48 <@isaacbw> auser: and it's not an error being thrown by node when your application exits?
02:49 < MiracleBlue> Ahoy :D
02:49 < auser> isaacbw: we have no stacktrace other than 'Error: socket hang up'
02:50 < auser> from the http module: createHangUpError
02:50 <@isaacbw> oohh, interesting
02:50 < auser> i.e. the OS killing the socket
02:51 < auser> and the memory grows
02:51 <@isaacbw> the memory grows?
02:51 < auser> sorry, the memory usage grows
02:51 < boytoy> im using execjs with node for my rails app. but after i reinstalled a new version of my os, a lot of my js has stopped working. how do i check if maybe my new node installation is the problem?
02:52 < auser> when our sockets all die, the process is restarted (via upstart)
02:52 <@isaacbw> auser: what version of node
02:52 < auser> v0.8.8
02:53 <@isaacbw> that's strange
02:53 < auser> I know
02:57 < _DomY-Dom> how do I change the port on which node app listents on ?
02:57 < importme> Anybody know what causes this npm error? - http://pastebin.com/PHi39WQn
03:00 < _DomY-Dom> how do I change the port on which node app listens on ?
03:05 < auser> any idea isaacbw 
03:05 < _DomY-Dom> how do I change the port on which node app listens on ?
03:06 < gluxon> _DomY-Dom: HTTP, TLS?
03:06 < gluxon> Or just TCP?
03:06 <@isaacbw> auser: if I were having the issue, I would try to replicate it on another system
03:08 < _DomY-Dom> gluxon: I'm trying to run nodejs alongside apache. I am planning on making a virtualhost for my node app and proxy over the requests. I wish hence node to listen on another port. What config do I need to do on the "node" side ?
03:10 < _DomY-Dom> gluxon: ?
03:11 < gluxon> _DomY-Dom: Reading.
03:12 < gluxon> _DomY-Dom: Yes, but what have you tried?
03:12 < SomeoneWeird> _DomY-Dom, .listen(80) < change that?
03:12 < _DomY-Dom> SomeoneWeird: in which config file though ?
03:12 < gluxon> And what net protocol is this?
03:12 <@isaacbw> it has nothing to do with config files
03:12 <@isaacbw> there are no config files
03:13 < SomeoneWeird> what are you talking about _DomY-Dom ?
03:13 < gluxon> _DomY-Dom: Yes this an application you downloaded off the internet that uses Node?
03:14 < _DomY-Dom> Guys, do I just have to make the virtualhost in apache (e.g. http://stackoverflow.com/questions/14168996/avoid-the-conflict-on-port-80-between-nodejs-and-apache) if I want node to listen on another port ?
03:14 < _DomY-Dom> Or do I also have to change something somewhere else
03:14 < _DomY-Dom> e.g. first step of http://arguments.callee.info/2010/04/20/running-apache-and-node-js-together/
03:14 <@isaacbw> lol
03:15 < _DomY-Dom> ?
03:15 < SomeoneWeird> wut
03:15 < _DomY-Dom> I want node to run alongside apache !
03:15 < SomeoneWeird> you've said that
03:15 < SomeoneWeird> you need to change the source code of your node program
03:15 < _DomY-Dom> ANd apache told me to make a virtual host and proxy over the requests
03:15 < _DomY-Dom> SomeoneWeird: Yes
03:15 < _DomY-Dom> that is what I meant by "config" files
03:16 < _DomY-Dom> which file do I have to change
03:16 < _DomY-Dom> http.js ?
03:16 < SomeoneWeird> have you created a node application?
03:16 < _DomY-Dom> yes
03:16 < _DomY-Dom> which is in the directory the virtualhost points to
03:16 < SomeoneWeird> so in what file are you telling it to listen on a port/
03:17 < SomeoneWeird> that's not how node works
03:17 < SomeoneWeird> you need to run the program and proxy the requests
03:17 < SomeoneWeird> apache won't invoke node
03:17 < _DomY-Dom> SomeoneWeird: so in the app I've made I need to set the listening port to the one apache proxies over the request too
03:17 < _DomY-Dom> to *
03:18 < SomeoneWeird> yes
03:18 < _DomY-Dom> SomeoneWeird: right, k that should be fairly straightforward then
03:18 < auser> isaacbw: we have
03:18 < auser> it exists everywhere, on all of our production boxes
03:19 <@isaacbw> wow http://www.scroogled.com/
03:19 <@isaacbw> what are you doing microsoft
03:22 < _DomY-Dom> SomeoneWeird: Alright does this look right for virtualhost http://pastebin.com/raw.php?i=AHGX0GYi ?
03:23 < SomeoneWeird> i don't know I don't use apache
03:24 < auser> btw isaacbw: v2.0.71 message: Error: socket hang up     at createHangUpError (http.js:1263:15)     at Socket.socketCloseListener (http.js:1314:23)     at Socket.EventEmitter.emit (events.js:115:20)     at Socket._destroy.destroyed (net.js:356:10)     at process.startup.processNextTick.process._tickCallback (node.js:244:9)
03:24 < iheartjs> isaacbw, why compete on features when you can compete on fud?
03:25 <@isaacbw> iheartjs: what
03:25 < iheartjs> isaacbw, what what
03:27 < AAA_awright> How do I just connect to a certain URI with http.request?
03:28 < AAA_awright> the API is confusing enough
03:28 < AAA_awright> E.g. if I wanted to send: GET http://example.com/ HTTP/1.1
03:29 < _pash> hello i am have linked a stylesheet on my default jade template, is it possible to unlink them on some teplates?
03:29 < AAA_awright> And then there's this jem in the docs:
03:29 < AAA_awright> host: A domain name or IP address of the server to issue the request to. Defaults to 'localhost'.
03:29 < AAA_awright> hostname: To support url.parse() hostname is preferred over host
03:29 < AAA_awright> So do I use host or hostname?
03:29 <@isaacbw> _pash: no, that's not how html works
03:29 < AAA_awright> And which one is the "authority"
03:29 < AAA_awright> *gem
03:29 < _pash> isaacbw: how can i achieve the same functionality?
03:30 <@isaacbw> you have to design your stylesheets better
03:30 < AAA_awright> _pash: What do you mean linked?
03:30 < _pash> isaacbw: indeed =) ill go try to fix that
03:31 < MiracleBlue> Sup dudes
03:31 <@isaacbw> you can combine selectors to have "selector inside selector" functionality
03:31 <@isaacbw> which may do something like what you want
03:31 <@isaacbw> _pash: http://css-tricks.com/child-and-sibling-selectors/
03:33 < _pash> isaacbw: thank you
03:35 < acidjazz> http://jsfiddle.net/Rrjz4/1/ jade+stylus
03:35 < acidjazz> coudlnt figure out how to mixin/function the keyframes
03:38 < _pash> isaacbw: if apache and node are running on two different ports, how can i make virtual hosts for node?
03:39 <@isaacbw> _pash: apache might have some way to do it
03:40 <@isaacbw> you mean put both on the same port with different hosts or something like that?
03:40 <@isaacbw> hostname
03:40 <@isaacbw> or path
03:40 < dhovakin> hola nerd `migos!
03:41 < _pash> isaacbw: i want apache running on port 80 and node on a different port, but so i could still access lest say domain.com/node and it would work
03:41 <@isaacbw> _pash: you need to set up a reverse proxy
03:41 <@isaacbw> apache might have some method for doing it
03:41 <@isaacbw> or if you're crazy, you could use nginx in front of your node app and apache
03:43 <@isaacbw> what are you doing with apache? serving static files?
03:44 < _pash> isaacbw: do you know how to do a reverse proxy with apache?
03:44 <@isaacbw> _pash: no. Just google it
03:44 < _pash> isaacbw: ok thanks for your help
04:09 < AAA_awright> Is there some way to get the list of current event listeners that Node.js is waiting on?
04:09 < AAA_awright> I'm trying to get this process to exit by itself but it won't die
04:09 < AAA_awright> There's a listener or something that still needs to be closed
04:10 < tjfontaine> AAA_awright: process._getActiveRequests() and process._getActiveHandles()
04:12 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:12 < AAA_awright> tjfontaine: Hmm so it's something in _GetActiveHandles() but it's very non-descriptive
04:13 < AAA_awright> Three things actually :-\
04:20 < asdf12> possible to capture console.log ?
04:27 <@Nexxy> mscdex, ? ;o
04:35 < MiracleBlue> Nexxy: :D
04:37 < niix> Hey everyon
04:37 < niix> e
04:37 < MiracleBlue> Heya!
04:38 < niix> I have an auth redirect that instead of going to index on login fail I'm trying to get it to popup the login modal again
04:38 < niix> right now it's like this
04:38 < niix> https://gist.github.com/niix/5010755
04:39 < niix> but I need to somehow add a css class to that redirect
04:39 < niix> Line 7 is what I'm referring to
04:50 <@Nexxy> MiracleBlue, hey :)
04:50 < MiracleBlue> :D
04:51 < asdf12> that isn't a css class
04:51 < asdf12> that's a uri hash
04:51 < rflcptr> that's no moon...
04:52 < asdf12> and i dont believe that will work
04:52 < asdf12> is that what you're having issues with niix?
04:53 < niix> asdf12: yeah I was going about it all wrong, figured it out
04:53 < mb> Hello. When I do "node server.js &"(for foreground) and logout from shell then node stops. Is it feature of my VPS or nodejs?
04:53 < niix> it's late and I was thinking crazy o_0
04:53 < asdf12> niix what solution did you come up with?
04:54 < niix> asdf12: doing it with templating
04:54 < asdf12> cause i was going to say use session or header :p
04:54 < asdf12> oh right
04:54 < niix> I did an if message and it shows it modal again
04:54 < asdf12> dang you got me stuck thinking server side!
04:54 < niix> and displays message inside modal
04:55 < niix> yeah that was my original though process :P
04:55 < niix> would be cool to make it server side though :D
04:55 < asdf12> you would have to to support no js users
04:55 < asdf12> but idk if anyone does that anymore
04:56 < asdf12> wait im so confused
04:56 < asdf12> you are doing it right
04:56 < asdf12> you're using session
04:58 < asdf12> ive been writing tests for a few days now o_o talk about burnt out
04:58 < Slade-> does node.js have a good openid lib? 
04:58  * Slade- is thinking openid is the way to go
05:00 < LouisT> Slade-: i use "openid"
05:00 < Slade-> is it good? 
05:00 < Slade-> who does it let you integrate with
05:00 < LouisT> i like it
05:01 < LouisT> i only have it set up with google, yahoo and stackexchange
05:01 < LouisT> i'm sure it supports more
05:01 < Slade-> thats good enough :)
05:01 < LouisT> you could try uhh
05:01 < LouisT> everyauth
05:01 < Slade-> whats that
05:01 < LouisT> i've not worked with that before, but it lists many that it supports
05:01 < LouisT> http://everyauth.com/
05:02 < Slade-> it take a ton of work to get openid up and running?
05:02 < mscdex> isaacbw: AAA_awright: imap does support keywords, but gmail does not use them
05:02 < LouisT> not really
05:03 < Slade-> cool i'll give it a try then :)
05:03 < AAA_awright> mscdex: So it's a conspiracy!
05:03 < LouisT> i don't use it with connect or anything like that, so it might be easier if you do -- i've not really looked into it
05:03 < Slade-> with connect?
05:03 < Slade-> i dunno connect
05:04 < mscdex> AAA_awright: probably performance-related
05:04 < LouisT> Slade-: then it's probably not a problem
05:04 < AAA_awright> I can't imagine why
05:04 < mscdex> Nexxy: what, i thought you were the meme image enthusiast?
05:04 < Slade-> LouisT: thanks. i'll dig into it
05:41 < vikash> hi Everyone, for few days I am trying to create a dynamic chat room app. The code is here https://gist.github.com/ivikash/4975309 What I want is, when a user joins the server and requests for any page, a chat room is created there. Which is happening, but I want to make him auto join it
05:42 < vikash> Now the problem is, auto joining is not happening, and in console.log() I am getting values and they soon get changed to undefined.
05:43 < sshaginyan> vikash: So adducer doesn't get triggered?
05:43 < sshaginyan> adduser*
05:44 < vikash> sshaginyan, adducer is getting triggered, because update chat and other functions do work
05:44 < vikash> but I am not able to make them auto join the channels
05:44 < vikash> sshaginyan, if you don't mind, can you run it once, it will give you the exact problems
05:44 < vikash> :)
05:45 < sshaginyan> vikash: Sure
05:45 < vikash> sshaginyan, Thanks, I will gist the package.json. so that you don't have issues with that too
05:45 < sshaginyan> k
05:46 < vikash> sshaginyan, its just nom install express socket.io
05:46 < sshaginyan> yeah
05:46 < vikash> *npm
05:46 < vikash> sshaginyan, Thanks :)
05:50 < vikash> sshaginyan, Did you see it?
05:50 < sshaginyan> one sec
05:50 < sshaginyan> give me time :)
05:50 < vikash> sshaginyan, Sure. np :)
05:55 < sshaginyan> vikash: Still looking
05:56 < vikash> sshaginyan, Still np :)
05:56 < sshaginyan> so It's all the undefined variables right?
05:56 < vikash> yup
05:56 < sshaginyan> k
05:56 < vikash> I get the query string then they become undefined
06:07 < sshaginyan> vikash: Were you trying to pass showid as a url parameter?
06:07 < sshaginyan> where do you think this value was going to come from req.query['showid']
06:07 < sshaginyan> ?
06:09 < sshaginyan> vikash: Also / happens before * there fore you need to set rooms within /
06:10 < sshaginyan> vikash: But your using a get therefore you need a query parameter
06:11 < sshaginyan> After you set it uncomment lines 14-20
06:11 < sshaginyan> and I wouldn't advise using globals
06:11 < sshaginyan> rooms/room
06:11 < sshaginyan> You there mate?
06:13 < vikash> sshaginyan, yup
06:13 < vikash> sshaginyan, was just afk.. but not now :)
06:14 < sshaginyan> Guys so I would use an async callback when I'm depended on an external source (system resource/api service) and a sync callback when I'm not (error checking etc..). Can someone give me an example of both?
06:14 < AAA_awright> I'm trying to exit my process by closing all my listeners, but there seem to be two that I can't stop
06:14 < AAA_awright> They register themsevles as [object Timer]
06:14 < vikash> sshaginyan, I am thinking, say some request comes to /?showid=123 or /chat/?showid=abc or anythings, it should create a channel and then get going
06:14 < sshaginyan> AAA_awright: Which two?
06:15 < AAA_awright> As far as I know I only ever registered one setInterval, and I clear it, and that one dissappears, but there's still two more...
06:15 < vikash> sshaginyan, if you don't mind, can you please suggest the changes. I think I dint get you clearly
06:15 < vikash> :)
06:15 < RLa> AAA_awright, process.exit() :)
06:16 < AAA_awright> RLa: I want to make sure existing requests are handled
06:16 < AAA_awright> That's really unclean
06:16 < sshaginyan> AAA_awright: make sure your not reattaching the listeners
06:16 < RLa> is that a web app?
06:16 < sshaginyan> vikash: Sure
06:17 < vikash> sshaginyan, Thanks :)
06:17 < AAA_awright> sshaginyan: Reattaching?
06:17 < RLa> if it's a web app it's probably waiting on keep-alive connections, not serving requests :)
06:18 < RLa> some modules/frameworks have close() method to stop accepting new requests but i have not seen they kill keep-alive connections
06:19 < RLa> so it might wait/hang some time
06:21 < AAA_awright> RLa: I haven't served any HTTP requests at all
06:21 < AAA_awright> This is even if I disable the HTTP server
06:21 < RLa> weird
06:23 < AAA_awright> If I open any connection, like HTTP, these two Timer objects populate and I can't get rid of them...
06:26 < sshaginyan> vikash: Why is this guy getting triggered twice? app.all('*', function(req, res){
06:27 < vikash> I guess to render the pages
06:27 < tuhoojabotti> sshaginyan: favicon?
06:31 < sshaginyan> vikash: http://hastebin.com/gucexogomi.vhdl
06:31 < sshaginyan> tuhoojabotti: yes thank you
06:31  * vikash is looking at hastebin
06:31 < sshaginyan> vikash: Tell me what your problem is exactly
06:32 < sshaginyan> vikash: There are no more undefines 
06:32 < vikash> ok.. one min
06:32 < sshaginyan> Guys so I would use an async callback when I'm depended on an external source (system resource/api service) and a sync callback when I'm not (error checking etc..). Can someone give me an example of both?
06:33 < vikash> sshaginyan, I want when a request comes for anything, it should create a chat room for that, so that there is no 404 ever and every request spawns a re new chat room, so there can practically any chat room, all separate and private. Also I wish to keep the logs, so I will push them to mongo
06:34 < vikash> sshaginyan, Did you get the problem,? or should I try explaining again?
06:34 < sshaginyan> got it
06:34 < vikash> sshaginyan, Thanks :)
06:34 < kenperkins> I fundamentally don't understand why poeple get all anti-callback
06:36 <@mbalho> kenperkins: laziness
06:36 < tuhoojabotti> sshaginyan: Gotta love favicon requests
06:36 < kenperkins> mbalho: I suppose. It's not that I don't see the value in things like streamline, but rather, they're a solution to a problem I don't see
06:37 <@mbalho> kenperkins: if im a really good programmer in some language and i decide to switch to a new community am i a) more likely to keep doing the same things in the new context or b) go with the grain of the new context
06:37 <@mbalho> kenperkins: for most people (empirically) ive seen a
06:37 < kenperkins> I'm a strong believer in the "when in rome" philosophu
06:37 <@mbalho> yea but if that means learning new things then it might be offputting for some
06:38 < kenperkins> I guess
06:38 < kenperkins> can't get better if you don't learn :P
06:38 <@mbalho> especially if theyre convinced the way they did it before is better but js people are ignorant and simple :)
06:39 < kenperkins> I find developers tend to have consistently one of two personality quirks: they either look at everything they write as "the best thing ever" or they look at their code and say "god this is awful"
06:39 < kenperkins> I'm strongly the latter :D
06:39 <@mbalho> heh
06:40 < kenperkins> it's a bit tongue and cheek about how you view growth and humility
06:40 < kenperkins> I'm terrified of others opinions of my code :D
06:40 < vikash> sshaginyan, So the undefined was due to favicon.ico request which is requested every time? So what should I do now? to make them auto-join to rooms?
06:42 < sshaginyan> vikash: You want to associate a userid with a room correct?
06:42 < kenperkins> keep on doing what you guys are doing
06:42 < kenperkins> mbalho: I'm hoping to start learning and growing more about node core in the near future as part of my next gig
06:42 < vikash> sshaginyan, yup!
06:42 <@mbalho> kenperkins: someone who wouldnt give you constructive criticism isnt worth concerning yourself with
06:43 < sshaginyan> vikash: So have an object {room_1: [userid_1, user_d_2, … etc], room_2: [userid_5, userid_7, … etc]}
06:43 < kenperkins> amen.
06:44 < sshaginyan> So vikash var chatState = {};
06:44 < vikash> sshaginyan, Yup! Exactly… and userid_1, user_d_2, … etc are auto joined to room_1 and  userid_5, userid_7, … etc are auto joined to room_2
06:44 < sshaginyan> yes
06:45 < vikash> hmm
06:45 < sshaginyan> vikash So send the data together send userid=13?room='room1'
06:45 < sshaginyan> then just map it in a structure
06:45 <@Nexxy> mbalho, I was thinking about the same thing earlier today
06:46 < sshaginyan> or do a ajax post
06:46 < vikash> ok...
06:46 < sshaginyan> ?
06:46 <@Nexxy> mbalho, RE: new/old context
06:46 < vikash> sshaginyan, Lemme try
06:46 < sshaginyan> vikash: What's there not to understand?
06:47 < kenperkins> did I miss a reply mbalho 
06:47 < vikash> sshaginyan, Nothing, Now I will try things and get that going.
06:47 <@mbalho> wat
06:47 < sshaginyan> k
06:47 <@mbalho> Nexxy: i was talking about it with dominictarr so it was also fresh in my mind
06:47 < vikash> and then from the chatState object, I will make them join the channel
06:47 < AAA_awright> So... how do I do byte-level locking?
06:47 < AAA_awright> How should I do byte-level locking
06:47 <@mbalho> Nexxy: we were trying to come up with a douchey marketing term to replace agile that describes modular software
06:47 < sshaginyan> AAA_awright: Semaphores / locks
06:48 < AAA_awright> That's... very helpul
06:48 < sshaginyan> lol
06:48 <@Nexxy> mbalho, lol
06:48 < AAA_awright> How about... 'Modular'
06:48 <@Nexxy> you can't replace agile with just a term
06:48 < AAA_awright> Except modularization isn't an ultimate good
06:48 <@Nexxy> you have to invent an entire mantra
06:49 < AAA_awright> That's just one tool to choose from
06:49 <@mbalho> yea exactly
06:49 < sshaginyan> Can someone please give me an example of sync callback?
06:49 <@Nexxy> wat
06:49 < AAA_awright> mbalho: I call it "Semantic"
06:49 <@Nexxy> sshaginyan, sync callback... looks like... `return someValue`
06:49 < AAA_awright> But there's a lot of requirements in order to call something that
06:49 <@mbalho> sshaginyan: [1,2,3].forEach(function(num) { return num + 100 })
06:50 <@mbalho> sshaginyan: [1,2,3].forEach(function thisFunctionGetsExecutedOnceForEachNumberInTheArray(num) { return num + 100 })
06:50 < dominictarr> Nexxy: Modular Modular Modular Modular Modular Modular 
06:50 <@mbalho> sshaginyan: functions look the same but they may execute later in time, forEach  executes immediately
06:50 < dominictarr> say it really slow
06:50 <@Nexxy> function sometimesImNotSureWhatImDoingWithMyLifeButIKeepTryingAnyway() { ...
06:50 <@Nexxy> that's all I could come up with
06:50 <@mbalho> sshaginyan: sorry *callbacks* look the same
06:50 <@mbalho> lol
06:51 <@mbalho> AAA_awright: ooh we could call it the 'semantic web', that'll take off
06:51 < kenperkins> oh god, not the semantic web
06:51  * kenperkins worked on that when in Live Labs at Microsoft
06:51 <@Nexxy> mbalho, you could invent a word
06:51 <@mbalho> qwijibo
06:51 < AAA_awright> I doubt you actually worked Semantic Web semantic web
06:51 < AAA_awright> Almost no one has done it right to date >_>
06:51 <@Nexxy> mbalho, burgelflickel driven development
06:51 < kenperkins> that's kind of the point
06:51 <@mbalho> haha
06:52 <@mbalho> guys i have an idea, it just involves getting the entire world to change their behavior first
06:52 < dominictarr> Nexxy: Mod Ular - Mod Ular-  Ular Mod - Rama Rama - Ula Ula
06:52 < AAA_awright> We'll call it: Facebook
06:52 < kenperkins> AAA_awright: I worked on this research project: http://www.ted.com/talks/gary_flake_is_pivot_a_turning_point_for_web_exploration.html
06:52 < AAA_awright> The Facebook
06:52 < kenperkins> alot of the underlying research was about the semantic web
06:52 < AAA_awright> Sounds catchy
06:53 <@Nexxy> dominictarr, rama lama ding dong?
06:53 <@Nexxy> weeeeooweeeeeoooooooo
06:53 <@mbalho> Waterfall -> Agile -> Llama
06:53 <@Nexxy> alpacas!
06:53 < kenperkins> Yay! I'm a Llama again!
06:53 <@mbalho> you get a llama, you get a llama, everyone gets a llama!
06:54 < kenperkins> anyone get the reference?
06:54 <@mbalho> that one disney movie about llamas
06:54 <@Nexxy> ^
06:54 <@mbalho> anthropomorphized llamas
06:54 < AAA_awright> kenperkins: That's just "Let's gather a bunch of statistics about Wikipedia and put it into a flashy Flash app"
06:54 < kenperkins> Well, that's what the demo was LOL
06:54 <@mbalho> AAA_awright: wow judgmental much
06:55 <@Nexxy> lol
06:55 < kenperkins> but seriously, we did a shit ton of work with the bing team about schematizing the web
06:55 < AAA_awright> mbalho: Burrrrnnn
06:55 < kenperkins> thanks tho
06:55 < AAA_awright> I've already seen that video
06:55 < kenperkins> Squeaky, uh, squeak, sqeaker, squeakin'. 
06:56 <@Nexxy> AAA_awright, http://i.imgur.com/QMOQOUU.png
06:56 <@mbalho> Nexxy: hahahahaha i was thinking that in my head
06:56 < kenperkins> AAA_awright: the point was, if you read my original comment was: "oh god, not the semantic web"
06:56 < AAA_awright> kenperkins: Search has some cool stuff, but really it's relegated to semantic markup and displaying search results based on the content being searched
06:56 <@Nexxy> lol
06:56 < kenperkins> implying it's like chasing the fountain of youth
06:56 < AAA_awright> I mean, Search can do some cool stuff with semantic web, but not really indexing it
06:56 < kenperkins> i.e. hard/not possible currently/etc
06:56 < AAA_awright> Which is what everyone seems to think of first
06:57 < kenperkins> and yet you doubted me
06:57 < kenperkins> <sigh>
06:57 < kenperkins> oh well
06:57 < kenperkins> back to work
06:57 < AAA_awright> Really I think semweb is good for *producing* markup and consuming data, not the other way around
06:57 <@mbalho> i have opinions
06:58 < sshaginyan> So guys this is a sync callback right? http://pastie.org/6314852
06:58 < AAA_awright> mbalho: Let's hear them
06:58 <@Nexxy> AAA_awright, are you using text to speech?!
06:58 < AAA_awright> What do you think?
06:58 < AAA_awright> Nexxy: No
06:58 < kenperkins> my opinion is I love node, can't remember what it was like writing c#
06:58 < AAA_awright> Why?
06:58 <@Nexxy> just curious
06:58 <@mbalho> sshaginyan: yes 
06:59 <@mbalho> sshaginyan: though the term 'callback' in node core generally means async
06:59 < sshaginyan> Sorry this http://pastie.org/6314860
06:59 < AAA_awright> That passes I think
06:59 < sshaginyan> How would I make this async?
06:59 <@mbalho> sshaginyan: do something that is asynchonous like read a file
06:59 < AAA_awright> A Node.js Callback is (1) called exactly once and (2) called in the next tick at minimum
06:59 <@mbalho> sshaginyan: or fetch google.com's html
06:59 < kenperkins> setTimeout? :D
07:00 < AAA_awright> There's other "callbacks" which are really function references
07:00 < sshaginyan> mbalho: Then the callback becomes async?
07:00 < AAA_awright> sshaginyan: process.nextTick
07:00 <@mbalho> sshaginyan: what are you trying to accomplish
07:00 < sshaginyan> mbalho: Understand is what I'm trying to accomplish
07:01 <@mbalho> sshaginyan: ok write a program that fetches the contents of google.com and wikipedia.org, just the home pages, and then adds both of their html together into one giant string and console logs it
07:01 <@mbalho> sshaginyan: heres a module that makes http really easy https://npmjs.org/package/request
07:01 < kenperkins> <3 request
07:01 < AAA_awright> because http.request isn't already dead simple
07:01 < AAA_awright> ... somehow
07:02 < kenperkins> can I reuse your URL Nexxy 
07:02 <@mbalho> AAA_awright: yea its weird how people use modules
07:02 < kenperkins> http://i.imgur.com/QMOQOUU.png
07:02 <@Nexxy> kenperkins, of course
07:02 <@Nexxy> I found it on the internet
07:02 < AAA_awright> mbalho: Hey look, an abstraction layer abstraction layer
07:02 < sshaginyan> So async is what it's system dependent (read file, use service api) etc and sync is for example error checking something more for your internal code (not dependent on external source)?
07:02 < AAA_awright> sshaginyan: You may be interested this article of mine http://magnode.org/nodejs-design-demantics
07:02 <@mbalho> AAA_awright: i personally write everything in haskell because its type safe but i help the unwashed masses out in here 
07:03 < MiracleBlue> Alrighty
07:03 < MiracleBlue> It's music making time :D
07:03 < kenperkins> Nexxy: what would I do without you scouring the internets for images for me to reuse
07:03 < AAA_awright> MiracleBlue: Yaaayyyyyyy
07:03 < MiracleBlue> Untz untz untz untz
07:04 < sshaginyan> So far you've told me to use a node dependent library (fs.readFile, http.get etc) to make an async call but how would I make my own async
07:04 < sshaginyan> function?
07:04 <@mbalho> sshaginyan: first you must ask yourself 'why would i want to make a function async'
07:04 <@mbalho> sshaginyan: this explains it pretty well http://howtonode.org/understanding-process-next-tick
07:04 < sshaginyan> ticks
07:05 < sshaginyan> I know
07:05 < AAA_awright> sshaginyan: You had it mostly right up here http://pastie.org/6314860
07:05 < sshaginyan> I know that part
07:05 < AAA_awright> THough "return" isn't a function so it shouldn't have ()
07:05 < sshaginyan> AAA_awright: yes this is sync now make it async
07:05 < sshaginyan> without using a node library
07:05 < AAA_awright> sshaginyan: That doesn't make any sense, why?
07:06 < AAA_awright> Async and sync is something used in the context of I/O
07:06 < AAA_awright> If you don't do any I/O then the function call is neither sync nor async
07:06 < kenperkins> thanks for sharing your thoughts with my mbalho, I'm off to bed
07:06 < kenperkins> err, with me
07:06 <@mbalho> sshaginyan: you arent gonna write that wikipedia + google thing, are you
07:06 < sshaginyan> Lets say I have some custom electronics that I need to communicate with in a weird way
07:06 <@mbalho> kenperkins: np
07:07 < sshaginyan> mbalho: I will
07:07 < AAA_awright> sshaginyan: Go on
07:13 < sshaginyan> AAA_awright: http://pastie.org/6314890
07:13 < sshaginyan> Here it is
07:14 < sshaginyan> If you want dependency embed them
07:14 < sshaginyan> I understand this
07:14 < sshaginyan> But this isn't true async… well it is but we're not creating the state. http.get is.
07:15 < sshaginyan> You understand what I'm saying?
07:15 < sshaginyan> http.get makes the callback async
07:15 < sshaginyan> but I want to make something I've created async
07:15 < AAA_awright> sshaginyan: Why
07:15 < sshaginyan> cause i'm cool like that
07:15 < sshaginyan> Is it possible?
07:16 < AAA_awright> You can't make something "asynchronous" until it does I/O
07:16 < AAA_awright> If it doesn't do I/O then it's neither async nor synchronous
07:16 < sshaginyan> lol
07:16 < sshaginyan> … isn't it sync then
07:16 < sshaginyan> All code by default is sync isn't it?
07:16 < sshaginyan> until you use callbacks
07:16 < AAA_awright> It's just code
07:17 < AAA_awright> Now if you really wanted to, you could hook into the event loop, a really basic I/O either with setTimeout or process.nextTick
07:17 < sshaginyan> AAA_awright: Are you telling me at a very basic level the internals of http.get and fs.readFile are the same?
07:18 < AAA_awright> That'll ensure that your callback is called after the function returns, and not before
07:18 < AAA_awright> sshaginyan: Uh... with respect to what? They both use the event loop
07:18 < AAA_awright> And... that's about it
07:18 < sshaginyan> AAA_awright: Everything is a read and write
07:18 < sshaginyan> k
07:19 < AAA_awright> Eh?
07:19 < sshaginyan> So If I'm doing io then it's async and if not then ist's a sync callback right?
07:19 < sshaginyan> it's*
07:20 < AAA_awright> Synchronous means that any I/O will wait until it has the results of the operation before returning
07:20 < sshaginyan> go tit
07:20 < sshaginyan> got it*
07:20 < AAA_awright> Asynchronous means that the I/O operation has been queued and the results will be made available in a callback
07:20 < AAA_awright> ... made available after that function returns
07:23 <@mbalho> sshaginyan: getGoogle takes a callback but the callback gets called back after hundreds of milliseconds
07:24 < sshaginyan> AAA_awright: and we would use events instead of callbacks if smalls bits of data is available? So we have other events besides get data?
07:24 <@mbalho> sshaginyan: also yes the internals of http.get and fs.readFile are similar in that they expose the same api which is a Stream
07:25 < AAA_awright> sshaginyan: Callbacks are called exactly once, if you need to process events like "chunk of incoming data" then you use EventEmitter
07:25 < sshaginyan> So why even use events?
07:25 < sshaginyan> kkkkkkk
07:25 < sshaginyan> AAA_awright: Now I feel that my life is complete
07:26 < AAA_awright> sshaginyan: http://magnode.org/nodejs-design-demantics should help with some stuff
07:27 < sshaginyan> thanks
07:30 < sshaginyan> AAA_awright: So what would be the difference between a function call and then returning from that function VS sync callback?
07:31 < AAA_awright> sync... callback?
07:31 < sshaginyan> exclus closures 
07:31 < sshaginyan> exclude
07:31 < AAA_awright> I should rename that header, callbacks and closures are two different things
07:32 < sshaginyan> Who said they were the same?
07:33 < sshaginyan> AAA_awright: What are the differences between these two http://pastie.org/6314979
07:34 < AAA_awright> I said they were the same, mistakenly
07:34 < sshaginyan> So you were wrong?
07:34 < sshaginyan> mistakenly?
07:34 < AAA_awright> sshaginyan: Exactly as they look, one accepts a callback, the latter has a return statement
07:35 < sshaginyan> AAA_awright: If I do no I/O in the callback one would they be the same
07:35 < sshaginyan> >
07:35 < AAA_awright> The former function, the way you have it setup, will actually return the value that the callback returns
07:35 < sshaginyan> ?
07:35 < AAA_awright> sshaginyan: Right, that's correct
07:35 < sshaginyan> thanks
07:35 < sshaginyan> :)
07:36 < AAA_awright> >> function x(callback) {  return callback(); } x(function() { return "value" });
07:36 < purr> AAA_awright: (string) 'value'
07:37 < sshaginyan> so I can do var y = x(function() {return "value";});
07:37 < sshaginyan> y is now "value"
07:39 < AAA_awright> >> function x(){}; x instanceof Object;
07:39 < purr> AAA_awright: (boolean) true
07:40 < AAA_awright> sshaginyan: Well you're not normally supposed to use "return callback()"
07:40 < sshaginyan> AAA_awright: But it's a special object cause it's a constructor also right?
07:40 < AAA_awright> That's a shortcut to make sure that callback() is the last statement to be executed in that function
07:40 < AAA_awright> Oh I was just testing something
07:41 < AAA_awright> >> function x(){}; typeof x
07:41 < purr> AAA_awright: (string) 'function'
07:41 < sshaginyan> AAA_awright: There is a difference between function x(){}; and var x = {}; right?
07:42 < SomeoneWeird> of course?
07:42 < AAA_awright> The former has a [[Call]] property, and will be given a `name` property of "x", and will have a `prototype` property of {}, and some other stuff
07:42 < sshaginyan> SomeoneWeird: How awkward......
07:43 < gildean> >> function x(v, cb) { cb(v); } x('value', function (v) { return v; });
07:43 < purr> gildean: undefined
07:43 < SomeoneWeird> lol
07:46 < gildean> >> function x(v, cb) { cb(v); } x('value', function (v) { console.log(v); });
07:46 < purr> gildean: undefined; Console: 'value'
08:09 < Ivru> Hi !
08:12 < Ivru> Using sqlite3 module, isn't it possible to activate the foreign keys ?
08:14 < Ivru> I tried a pragma but i doesn't seem to work (still get a false result when pragma foreign_keys). I was wondering if there is an option in de compilation of sqlite that disable it
08:14 < TheAceOfHearts> so, if you're putting your github link in your résumé, where would you put it? 
08:15 <@mbalho> TheAceOfHearts: your github link is your resume
08:16 < TheAceOfHearts> yeah, but I don't think I can just hand companies a paper with my github link and expect them to go in :P
08:16 < TheAceOfHearts> I'm thinking of putting it below my contact information
08:38 < [AD]Turbo> hi there
08:38 < TheAceOfHearts> hi
08:45 < asdf12> WHAT UPPPP
08:47 < finishingmove> hey homies
08:47 < asdf12> oh my goodness
08:47 < asdf12> party is about to get started now
08:47 < asdf12> errrrbody in the hizouse
08:48 < finishingmove> yep, just had my morning beer
08:49 < finishingmove> http://static.geeek.org/public/humour/coding-drunk.jpg
08:50 < finishingmove> https://github.com/falsecz/beer-script
08:52 < asdf12> the secret to getting work done is to...
08:53 < asdf12> randomly bump the version number of your project up 1
08:53 < asdf12> it helps, try it out
08:53 < asdf12> when there is a lull, just bump the version, it makes things feel like its moving along
08:55 < Maqs> finally an explanation for firefox version numbers... ;)
08:57 < bcave> hi
08:58 < bcave> i have a question about event emitters. I am reading the following article: http://nodejs.org/api/events.html#events_emitter_removelistener_event_listener
08:58 < bcave> in the example, the listener is created and removed straight away. if I wanted to create a listener and then remove it after i get the first emitted event, i would have to remove the listener in the callback?
08:59 < asdf12> bcave:just use .once
09:00 < tellnes> bcave: yes, or you could just use emitter.once as asdf12 sad; http://nodejs.org/api/events.html#events_emitter_once_event_listener
09:09 < sshaginyan> Guys what's the gut hub page for baa validate anything anywhere. I can't find it
09:10 < sshaginyan> lol they changed the name https://github.com/lovebear/quality
09:15 < finishingmove> always good when you find a comment in your code that says "this will be refactored like a boss..."
09:16 < asdf12> oh wow the carpenters just came on songza i havent heard the carpenters in forever
09:16 < asdf12> why is iwantmyname.com so expensive
09:17 < asdf12> they charge almost double for some of the domains -_-
09:18 < asdf12> sshaginyan: and yea, i changed it, i didn't like the acronym
09:19 < sshaginyan> asdf12: You changed it…. so your the culprit?
09:20 < asdf12> yea its still 'beta' :x
09:20 < Ivru> managing the promises, which module would you recommend ? node-promise or futures ?
09:21 < trodrigues> when.js
09:22 < substack> Ivru: domenic recommends Q
09:23 < Ivru> so much modules available. Gonna take a look on both. Thanks guys
09:25 < dmcaodha> Hi, I am using mikeal's request module to talk to couchDB's HTTP api. I am looking for help on how to upload an image as an attachment
09:25 < dmcaodha> Easy to do with curl, I'm just not sure how to structure the PUT request
09:26 < dmcaodha> Anyone?
09:28 < dmcaodha> The image is from a form in an Express web app.
09:36 < dmcaodha> Can anyone help? I am pretty desperate
09:37 < Ivru> dmcaodha, i think you must use a multipart 
09:40 < asdf12> what part are you stuck on?
09:41 < Ivru> yeah also, i didn't understan if you manage to do it using curl or not
09:41 < Ov3rTaf> hey, what's the most secure crypto for using with socket.io / node.js ? :)
09:42 < Ov3rTaf> php/ajax/js on app
09:42 < dmcaodha> I did it using curl, I am just not sure how to include the image data as the payload in my request
09:45 < cyberboy> hi - i cant npm install mongodb in node 0.9.6-pre - any ideas  ?
09:46 < SomeoneWeird> well whats the error?
09:46 < cyberboy> it looks like a problem with "pre" version 
09:47 < cyberboy> gyp ERR! stack Error: "pre" versions of node cannot be installed, use the --nodedir flag instead
09:54 < asdf12> dmcaodha http://wiki.apache.org/couchdb/HTTP_Document_API#Multiple_Attachments does that help
09:56 < asdf12> accepts mime or base64
09:59 < dmcaodha> @asdf12 Thanks, I see that I have to send the header "Content-Type: multipart/related"
09:59 < asdf12> no
10:00 < asdf12> i linked the wrong thing
10:00 < asdf12> scroll up a little
10:01 < dmcaodha> Here?
10:01 < dmcaodha> http://wiki.apache.org/couchdb/HTTP_Document_API#Standalone_Attachments
10:01 < asdf12> yea
10:02 < dmcaodha> So I only need the content length and mime type?
10:02 < dmcaodha> plus the URL?
10:03 < dmcaodha> I am just unclear on how to append the image data to the request
10:04 < asdf12> oh
10:04 < dmcaodha> Express saves it in  /tmp/{doc._id}.jpg
10:04 < asdf12> i think that module supports streams
10:04 < dmcaodha> so just stream it from the tmp folder directly to the couch url?
10:04 < asdf12> i dont remember the api, i'm -guessing- it'll be req().end() ? right?
10:07 < dmcaodha> req.body I would think
10:08 < asdf12> well i meant for that module
10:08 < asdf12> you can just write to the stream
10:09 < bcave> any handlebars users here? #handlebars is dead
10:09 < asdf12> honestly i'm just too lazy to look at the modules api
10:09 < dmcaodha> No bother, thanks
10:10 < asdf12> but you basically read the image, send it as the request boidy
10:19 < asdf12> does that make sense?
10:19 < asdf12> que?!
10:19 < finishingmove> que? queue?
10:19 < finishingmove> huehue?
10:20 < asdf12> fs.createReadStream('/i/m/a/g/e').pipe(reqqqqqqqq); ?!@?@!
10:28 < dmcaodha> Loud n clear. Thanks asdf12
10:30 < substack> https://gist.github.com/substack/5012401 browserify v2
10:37 < trodrigues> substack: great stuff :) I'm gonna try it out over the weekend
10:39 < MiracleBlue> bcave: I use handlebars :)
10:49 < mjsx> is there some way to create a mock http.ClientRequest object for testing?
10:49 < mjsx> (and http.ClientResponse, but i imagine it'll be the same answer)
10:51 < mjsx> or is there another way to test a handler for http.Server's "response" event without actually setting up an http server?
10:56 < ManaLord> what do everyone use as email clients? I would love to just have a multi-account plugin for firefox, but Simple Mail is buggy and displays all mails in a singular list...
10:57 < ManaLord> to have a separate bulky app like thunderbird is not necessary... why don't Mozilla just make a good plugin for email... or integrate it into FF...?
10:58 < finishingmove> Windows Live Mail.. bam
10:59 < ManaLord> hmmm... just hotmail? I want to run a website, where I will have to hande lots of mails..  so I need multi-account
10:59 < mjsx> j/quit
11:00 < ManaLord> or I could just switch to Opera... but I use FF extensively already, and use FF synch...
11:00 < finishingmove> ManaLord I mean the desktop app 'Windows Live Mail' for Windows
11:00 < finishingmove> I used Opera before as a mail client and it was good
11:00 < finishingmove> but I had the need to separate the mail from my browsing because I had multiple mail accounts and A LOT of tabs
11:01 < finishingmove> so it became slow
11:01 < finishingmove> i guess you're probably not on windows
11:01 < ManaLord> oh.. but I want one that works for Linux... sorry should have made it clear... so something on the web would also work, but there aren't any muli-account services that I know of
11:02 < ManaLord> Im both on win XP and Puppy Linux...
11:02 < finishingmove> really don't know about clients for linux, but opera's mail client is pretty solid
11:02 < finishingmove> so i can recommend that
11:02 < finishingmove> as a fallback solution
11:02 < ManaLord> yep.
11:03 < ManaLord> but then there is Seamonkey, which is not a solid browser in my book... but it too comes with an email client
11:09 < OliverJAsh> Looking for advice on a stack for a RESTful API, any advice appreciated: https://gist.github.com/OliverJAsh/5012659
11:13 < MiracleBlue> ManaLord: GMail is really good
11:14 < MiracleBlue> And I think you can still make it work with custom email addresses
11:16 < ManaLord> oh... but I thought you had to be logged in with your "google account" when using gmail? and can you then log into a bunch of other accounts?
11:16 < ManaLord> well, I will try it out... first logging in with my Gmail account.
11:33 < ManaLord> as an addon that is...
11:39 < substack> ug I hate the github notifications ui
11:39 < substack> I want to filter by pull requests and issues on my projects
11:51 < antoniopol> hello
11:51 < antoniopol> i need help for notifications person to person with nodejs
11:52 < antoniopol> what is the best way for real time, sockets or streamings?
11:54 < ManaLord> depends on your current experience... the best way might just be going what you are familiar with..
11:59 < antoniopol> or what the best way for doing "secure" sockets?
12:04 < ccoil> Anyone here using some alternative JS other than coffeescript? It seems like a good idea, but coffeescript is a little too ambiguous for my taste. What are you guys using? 
12:06 < MiracleBlue> ccoil: You could look into TypeScript
12:06 < jetienne> i use javascript
12:06 < MiracleBlue> Or compiling C# to JS
12:07 < jetienne> and if i compile i compile to assembly
12:07 < jetienne> not to a script language :)
12:07 < ccoil> I've looked at it. Typesript is kind of a good idea, but I want features like destructuring/pattern matching; not Just pseudo-typesafety
12:07 < MiracleBlue> :P
12:07 < jetienne> ccoil: focus on university work
12:07 < jetienne> they like words too
12:08 < ccoil> There was some mentioning of Scala -> Javascript a year(s) ago or so? Anyone heard any more on that? Did they give up?
12:09 < MiracleBlue> Not sure.
12:09 < MiracleBlue> I just use plain ol JS :)
12:10 < ccoil> well. JS is .. kindof a cool principle; ie it has all the necessary building blocks; but it's terribly inconsistent / lacky / quirky :[  why are we stuck with js? I wish they'd replace it in the future
12:11 < ccoil> {} + []   [] + {}   "hello" - 4  etc. try some of those. your mind will get blown
12:13 < ccoil> why is *still*  {} + {} = NaN  ;  [] + {} = 0 ; [] + [] = "" ; [] + {} = "[object Object"] ;   why don't they fix js. this is terrible! :P
12:15 < substack> ccoil: because fixing that would break everything
12:15 < substack> anyways who cares
12:16 < _ior> i think ccoil is referring to this great video: https://www.destroyallsoftware.com/talks/wat
12:16 < triptec1> antoniopol: have you tride sockets.io
12:16 < triptec1> tried*
12:16 < hipsterslapfight> also the majority of those 'wats' aren't actually broken
12:16 < hipsterslapfight> there's nothing to fix
12:17 < ccoil> I don't understand the rationale for allowing / producing such nonsensical results in the first place
12:17 < MiracleBlue> I love that video
12:17 < ccoil> _ior: i've seen it
12:18 < ccoil> ie that is correct
12:18 < hipsterslapfight> http://stackoverflow.com/a/9033306 ccoil
12:19 < tuhoojabotti> Is there an easy bootstrap helper module for node
12:19 < ccoil> I wonder how the web would be different if Ruby or Scala was used instead of javascript (*not* transcompiled, but that the web browsers actually made the switch away from JS to a good language)
12:19 < tuhoojabotti> for building and configuring
12:20 < tuhoojabotti> I'm already using angular-express-seed for the project
12:20 < hipsterslapfight> ccoil: it wouldn't be any different, most people would be using rQuery (extrapolating here from jQuery you see!) and copy and pasting other peoples code to get accordian effects or modals or whatever
12:21 < ManaLord> Interesting thought ccoil... I've wondered about that myself...
12:22 < hipsterslapfight> the only main difference is that it'd be based on a language written by a japanese dude rather than a homophobic bigot
12:24 < ccoil> hipsterslapfight: in the 90s maybe. but in the recent years, webapps with html5 and family are trying to fill the shoes of native apps. client side code must be big, and with nodejs ... One would think that the industry would want a proper language for such tasks; I don't understand how they can not care :/
12:24 < _ior> how is js not a "proper language"?
12:26 < substack> languages don't matter very much past a few important features
12:26 < asiekierka> hey
12:27 < asiekierka> does any of you know a nice node.js module for a command prompt such as "> command_goes_here parameters more_parameters"
12:27 < asiekierka> there's celeri but it has way more features than i need
12:27 < asiekierka> anything else?
12:27 < ccoil> _ior: it's pretty inconsistent; lots of goofy behaviour. no type safety + weird type conversion / weak typing , makes bugs pretty hard to find. if you've tried either Ruby or Scala, it's a world of a difference in programming comfort
12:27 < substack> once you have closures and dynamic types then you can build a node-style module system
12:27 < substack> module system is the most important part
12:28 < hipsterslapfight> ccoil: most of those things you mention there are design choices
12:28 < hipsterslapfight> and the rest are personal opinions
12:28 < substack> ccoil: ruby's type system is if anything more dynamic of "weak"
12:28 < substack> *or
12:29 < substack> method_missing, a culture of monkey patching globals, a require() that pukes over your namespace
12:29 < _ior> ccoil, i've not yet had a type-casting problem in node. i've had typing problems, but that's more because the radix of a buffer encoding was undocumented and i was trying to paste hex into base64...
12:29 < ccoil> substack: uh? what? have you used ruby? it's pretty strong. if you want to convert a number to a string, you have to be explicit (ie strong). Dynamic it is indeed
12:29 < _ior> which is a different problem entirely from typing
12:30 < finishingmove> dynamic / static and strong / weak are two different things
12:31 < gildean> asiekierka: commander.js is pretty good
12:32 < ccoil> after having used Scala, I no longer see any benefit of dynamic typing. static typing with inference is genius. why would one ever want a variable to be string in one moment, and an array in the next? the type is pretty much always fixed, only its value should ever be dynamic
12:33 < substack> after having used haskell, I no longer care about static types or type inference
12:34 < substack> types just make it really hard to switch around apis because the changes propagate a long distance
12:34 < ccoil> substack: uh what? :P  because you didn't like it?
12:34 < substack> I got tired of updating the code in 20 places after a minor change in a type signature
12:35 < _ior> why someone might care about having a variable be an array one moment and a string the next: have you ever tried to serialize java? :)
12:35 < hipsterslapfight> also weak typing is great when you're working with the DOM
12:36 < _ior> if you want to complain about anything, complain about JSON, which is totally misnamed
12:36  * mscdex shakes a fist at Ruby and Java
12:36 < _ior> as it most definitely is not javascript object notation.
12:37 < substack> and dynamic types are great for recursive structures
12:37 < substack> or just richly nested structures
12:38 < substack> because you don't need to define a bunch of wrapper bullshit enumerating all the possible types
12:38 < ccoil> hipsterslapfight, _ior: I agree. No type safety is better than java's extremely un-DRY standard. but try a language with type inference (read: Scala) it's amazing :'D
12:38 < hipsterslapfight> _ior: my favourite thing about JSON was when somebody tried to do JSON 2.0 
12:38 < finishingmove> LOL
12:38 < ManaLord> hmm... weak typing just causes troubles... but it's fine if you, in a scripting language, just define a variable like this: i=0; and it sets it as an int... would be fine, but then you should only be able to use it as a number.
12:39 < _ior> hipsterslapfight i must have missed that entirely. it's probably for the best :)
12:40 < hipsterslapfight> _ior: he was shot down almost immediately. iirc he wanted to add a whole bunch of 'features' to JSON
12:40 < _ior> oh noes
12:40 < _ior> json doesn't need more
12:40 < _ior> it needs less.
12:40 < substack> json's lack of features is its best feature
12:41 < hipsterslapfight> oooh, comments was his big headline feature too!
12:53 < alchimis_> hi people, i have to create a chat system between two users, (private)
12:53 < alchimis_> link to any example, is apreciated
12:57 < shanse> google.com
13:04 < alchimis_> shanse: thank you, then I have another question, what are you doing in this channel?
13:04 < Havvy> So, is there a good writeup of how to transfer from a PHP+Apache website to using Node, having pages Node can't handle passed to PHP?
13:05 < carpii> i dont know of a writeup, but typically youd have a reverse proxy deciding which uris to pass to node and which to pass to apache
13:11 < shanse> alchimis_: tell people like you to search before asking
13:12 < pav256_> I'm having problems with the http server and "Error: socket hang up"
13:13 < alchimis_> shanse: thanx, but i already searched in find different examples, what I want is from expert here, if someone can suggest me link to a valid example, thats all, thanks any way for telling me first search on google
13:13 < pav256_> I've brought it down to this http://pastebin.com/1jpYN3zg (8 sloc).
13:13 < Havvy> Reverse proxy looks like a nice set up.
13:17 < pav256_> I'm using v0.8.20, can anyone confirm the problem? ^
13:17 < carpii> Havvy, if youre using websockets, youd need to proxy those too, and its only nginx that I know of which supports this (and that was only added 2 days ago)
13:17 < carpii> but if its just http youre good
13:17 < Havvy> Just HTTP at this time.
13:19 < Havvy> PHP actually has everything the site needs...but PHP is too much of a kitchen sink.
13:19 < carpii> but why is that a problem?
13:20 < carpii> performance barely suffers because of it
13:20 < listochkin> substack, are you here?
13:20 < niggler> the language becomes unwieldy carpii
13:20 < niggler> perl is the logical extreme
13:20 < carpii> ok, personal pref i guess
13:20 < Havvy> carpii: It's not a huge problem.
13:21 < carpii> i think for a complex site I would much rather take advantage of fcgi and php, leaving node to handle the websocket stuff
13:21 < niggler> fastcgi has its own issues
13:23 < carpii> such as?
13:23 < Havvy> Also, I prefer the JS object model to PHP's object model.
13:32 < Andy12345> I am unable to set breakpoints in Eclipse in a file while debugging. Does anyone know why?
13:35 < Ivru> eclipse. 'nuff said
13:35 < Ivru> </troll>
13:35 < niggler> woah woah woah
13:43 < MI6> joyent/libuv: Ben Noordhuis master * da0b84d : unix: auto-unref spawn handle on process exit  Consistent, for better or  - http://git.io/xUpXGw
13:46 < bcave> MiracleBlue: do you use handlebars extensively... ? have a strange problem
13:46 < bcave> i mean, do you use precompiled templates?
13:57 < trodrigues> 3
13:57 < trodrigues> IGNORE THAT
13:58 < carpii> i cant 
13:58 < carpii> tell us about 3 :((
14:00 < HankHendrix> can anyone recommend good Node peeps to follow?
14:01 < trodrigues> carpii: it's a weird reflex of using irssi and remapping esc to caps lock
14:01 < trodrigues> sometimes it goes wrong
14:01 < carpii> ahh thanks, panic over :D
14:01 < niggler> HankHendrix are you a node stalker?
14:02 < HankHendrix> niggler??? no I'm a Node noob wanting to get into the Node industry
14:03 < trodrigues> HankHendrix: I think there was a list on the node guide
14:03 < HankHendrix> right
14:03 < trodrigues> http://nodeguide.com/community.html
14:03 < trodrigues> might be outdated
14:03 < HankHendrix> I've started listening to Node Up
14:03 < HankHendrix> thanks!
14:04 < trodrigues> the people listed here http://thenodefirm.com/ and here http://strongloop.com/ as well
14:05 < trodrigues> I guess you have enough people there to stay up to date :)
14:05 < HankHendrix> wicked
14:05 < HankHendrix> do you have any tips on becoming part of the community and effective learning?
14:05 < trodrigues> also, have a look at talks from past nodeconfs, nodedublins, jsconfs, etc
14:06 < HankHendrix> cool - I've watched a couple of Ryan Dahl's presentations
14:06 < trodrigues> I'm not as active as I'd like myself, but just try doing something with node
14:06 < trodrigues> and as you find problems and needs, contribute to projects or create your own
14:06 < trodrigues> look at stuff on github, code, issues, discussions
14:07 < HankHendrix> cool, I'd like to know what the standard is for a Node professional
14:07 < trodrigues> I would say, follow the mailing list but that can be a cesspool sometimes, so do it at your own risk :p
14:07 < HankHendrix> but that would be hard to gauge I imagine
14:07 < trodrigues> can't really say that myself as I'm more a frontend dev and more node curious than anything else
14:08 < HankHendrix> same, although I'd like to switch to f/t node eventually
14:08 < HankHendrix> partly because of the DOM!
14:24 < motaro> What do you guys think about having a web application framework using Nodejs for web serving, and having python for some data analysis services needed in the app. Do you see something wrong with this line of though?
14:25 < alchimis_> hi everyone, I have to implement a private chat system in my app, it should be among two person, I saw different example on internet but i wanna know if someone from you can provide me a link to a valid example, using socket io
14:26 < alchimis_> i am using expressjs, and I have to be able to save the conversation(msgs) to my mongoDB
14:27 < alchimis_> I appreciate any link to an example in this regard, thanx in advance
14:27 < icebox> motaro, usually I have been using nodejs and R framework... so generally speaking there is not anything wrong in your approach
14:28 < motaro> icebox: good thanks icebox.
14:29 < crabtree> !document.wrong
14:29 < crabtree> o
14:29 < icebox> motaro, https://github.com/albertosantini/node-rio just if you need to steel a few ideas :) for instance, passing json betweeb the layers (python and nodejs) :)
14:30 < niggler> lol document.wrong
14:45 < niix> Any advice on flashing a message in a modal?  I have my auth working with passport-local, but I have the login coming up with a modal.  On error it would result in just displaying the index page with the message.  I'd like to figure out a way to keep it in the modal w/o refresh
14:46 < alchimis_> no one read my question?
14:46 < alchimis_> any hint?
14:48 < carpii> alchimis_: whats the question? Just find a mongo library and start saving your logs to it
14:49 < alchimis_> the question is how should i emit to specific user, not to all
14:49 < carpii> youd use io.socket.clients to look up the relevant socket
14:49 < carpii> then emit to that
14:49 < alchimis_> but any example or link
14:51 < alchimis_> i find this https://github.com/rogchap/SampleProjects/tree/master/NodeChat but it is alittle bit old, but it has the private messaging
14:52 < alchimis_> do u advice me to follow as that link, or do u by any chance know  any updated link, thanx carpii:
14:52 < carpii> look at his sendMessage function in app.js
14:52 < carpii> var privateClient = userClients[atUsername[0].substring(1)];
14:52 < carpii> he is looking up the destination user socket, and then writes to that
14:53 < carpii> i wouldnt copy all his code, but thats the right technique at least
14:55 < alchimis_> thanx, i just wanted to know if it is valid enuogh, thanx
14:57 < tuhoojabotti> Anyone know an online jade compiler?
14:57 < tuhoojabotti> found it
14:59 < motaro> icebox: I was thinking more of separating the python and nodejs with the url addresses. So let's say mydomain.com/index.html -> nodejs, my domain.com/da/proc1 -> python. How do you see that o work.
15:00 < icebox> motaro, perfect! :) it depends on your app and the kind of analisys
15:01 < motaro> icebox, Yeah but because they both server http differently how can I set it up to share the same domain.
15:01 < motaro> ?
15:02 < carpii> reverse proxy 
15:02 < andrepadez_> Hi. I developed a new module to help string filter and sort, to work with Mongoose and MongoDB through node. I am new to Mongoose, i know there probably are better solutions, but i would like to know what you guys think. Thank you.  https://github.com/andrepadez/normalizer
15:08 < wsieroci> I am testing node.js (socket.io) on 1 GB Linode. Could you tell me how much concurrent connections and req/s this hosting could handle (on avarage)? 
15:08 < wsieroci> many*
15:08 < motaro> :| 
15:09 < carpii> wsi: how can anyone answer that?
15:12 < bnoordhuis> wsieroci: it all depends on what you do with each connection
15:12 < DarkArgon> test it wsieroci 
15:13 < bnoordhuis> there is no 'one size fits all' answer to your question
15:13 < bnoordhuis> well, maybe 'between 0 and infinity'
15:13 < andrepadez_> Hi, how to keep the npm package updated with git commits? 
15:13 < andrepadez_> I have commited and pushed to the github repo, and the npm is still the first i committed
15:16 < jrajav> andrepadez_: Updating your package in npm is a wholly separate process from updating your git repo
15:16 < jrajav> andrepadez_: If you want to update your npm package you need to manually tick the version and push it. That's an actual "release" rather than a continuous git update.
15:16 < carpii> you should probably consider keeping npm_modules out of your repo too
15:17 < PhanLord> what is the good node.js IDE on windows ? or are there plugins for VS10 or 12
15:21 < andrepadez_> carpii: was that for me? if so, what do you mean?
15:22 < SomeoneWeird> PhanLord, sublime text
15:23 < Sembiance> SublimeText is awesome :)
15:24 < rawGem> PhanLord: Are you looking for an IDE or an editor?
15:25 < PhanLord> IDE preferably
15:25 < DarkArgon> do sublime2 plugins run in sublime3?
15:25 < rawGem> You can pimp sublimeText up enough with packages such that it behaves like an IDE
15:26 < Sembiance> DarkArgon: I don't think so. 
15:26 < SomeoneWeird> there's no point in using an ide with javascript
15:26 < SomeoneWeird> you don't compile it
15:26 < SomeoneWeird> and ST is just as powerful
15:26 < pol06> i need help
15:26 < pol06> i want to implement notifications
15:26 < SomeoneWeird> socketio
15:26 < pol06> someoneweird
15:27 < Sembiance> The #1 SublimeText plugin for developing JavaScript: SublimeLinter. It has caught TONS of problems and saved me TONS of time.
15:27 < Sembiance> after you tweak it to be sane of course ;)
15:27 < Havvy> Just make sure to turn off the CSS linter. ;)
15:27 < SomeoneWeird> pol06, use socketio to push notifications to users, then use jquery on the clientside to show them
15:27 < carpii> sorry andre, i might have misunderstood the question
15:28 < Sembiance> Havvy: I code in Stylus ;)
15:28 < Havvy> I use ST.
15:28 < andrepadez_> jrajav: sorry, it's my first time. I just need to update my version in package.json and push to github?
15:28 < SomeoneWeird> andrehjr, and then run npm push
15:28  * pachet polishes his trusty vim
15:28  * SomeoneWeird glares at pachet
15:28  * rawGem glares at SomeoneWeird 
15:29 < andrepadez_> carpii: no prob :)
15:29  * pachet whistles a happy tune
15:29  * rawGem polishes vim, nice and shiny
15:29 < SomeoneWeird> er, npm publish* sorry, andrepadez_ 
15:29  * SomeoneWeird throws rawGems vim out the window
15:29 < Sembiance> Havvy: what I meant to say... I code my CSS in Stylus ;)
15:29 < andrepadez_> SomeoneWeird: oh, thanks
15:30 < Havvy> Ah. I code everything with ST.
15:30 < SomeoneWeird> so do i
15:30 < pol06> someoneWeird, but how to know the final user
15:30 < SomeoneWeird> i even code C in st
15:30 < SomeoneWeird> lmao
15:30 < SomeoneWeird> you have to make sure they're all listening on unique channels pol06 
15:30 < Havvy> No point getting out yet another tool for doing CSS modifications.
15:30 < Sembiance> Havvy: let me re-phrase... I don't write CSS code. I use Stylus (http://learnboost.github.com/stylus/) it's like SASS or LESS
15:30 < rawGem> I tried ST, had to go back to vim
15:30 < Sembiance> Havvy: I use SublimeText for everything :)
15:30 < Havvy> Oh, right. The compiles to CSS languages.
15:30 < pol06> any post for learning this?
15:31 < SomeoneWeird> <Havvy> Oh, right. The compiles to CSS languages. < so does sass and less and everything else :P
15:31 < Havvy> SomeoneWeird: Yes. That's what I was referring to.
15:32 < SomeoneWeird> anyway, flight in 6 hours so I guess im gunna get an hours sleep
15:32 < SomeoneWeird> laters.
15:33 < Sembiance> cya hehe
15:45 < bradleymeck> whats a template system that lets me drop streams into it?
15:46 < SomeoneWeird> bradleymeck, pretty sure deoxxa made one, look @ his repos
15:46 < SomeoneWeird> can't remember what he called it
15:47 < bradleymeck> SomeoneWeird: node-ginger? reading , but im more wondering if there is one that I can put a stream into a view's data, i cannot load all of this data into memory at once
15:49 < bradleymeck> substack: congrats on browserify v2, will be ripping out bits especially with the dependency checks
16:01 < Aartsie> sone one here experience with socket.io and sessions ? 
16:06 < Havvy> ....I've just sent 'ls' to my terminal 3 times in a row.
16:15 < MI6> joyent/libuv: Ben Noordhuis master * c98083e : unix: short-circuit on no-op io watcher changes  Don't add the io watcher - http://git.io/kiWqBw
16:18 < neurom> i'm writing an npm package, includes bin/foo and lib/bar. bin/foo require()s lib/bar.  i want it to work both locally and globally (npm install -g), what should the require look like?
16:21 < bradleymeck> neurom: in bin/foo require ../ and in your package.json make sure your main is pointing to lib/bar
16:21 < neurom> bradleymeck: what would happen w/o main?
16:22 < bradleymeck>  neurom it would try to resolve the ../ and check the directory for an index.js|json|node only
16:22 < bradleymeck> plus setting lib/bar as the main lets people know it is the programatic entry point to the library
16:22 < neurom> bradleymeck: ok, thanks!
16:23 < Sembiance> darn it. Github is having a small outage
16:23 < Sembiance> the repo I want to clone isn't available ;)
16:23  * bradleymeck wonders when github will get a mirror service
16:30 < pachet> bradleymeck: they're too busy getting ddos'd
16:31 < bradleymeck> patchet their day to day life looks like a ddos
16:31 < bradleymeck> even before ppl try
16:31 <@Nexxy> lol
16:32 < pachet> heh
16:42 < boytoy> just upgraded node.js for my execjs and now most of my js wont work - whats the best way to debug this?
16:43 < Havvy> boytoy: By reading the changelog.
16:44 < boytoy> Havvy: good call
16:44 < Havvy> And if you can't figure out what changed from that, pick a stand alone file that's breaking, and reduce it until you found out what it is.
16:44 < boytoy> thanks
16:44 < boytoy> cool
16:45 < Lefty4000> Hey guys, I know this question doesn't exactly make sense but I'm honestly lost and under a huge time limit.  I have to figure out how to get jQuery working alongside node.js.  I've never done any of this before and i'm just so lost.  Does anybody have a straight guide to do that from start to finish?  i'm using expressjs
16:54 <@Nexxy> Lefty4000, jquery is generally used client-side while node.js is exclusively server-side
16:54 <@Nexxy> Lefty4000, you shouldn't have any trouble with using them together
16:55 < Lefty4000> @Nexxy : Yea, thats what i've learned but I still don't get how to use it.  Last time I tried, express told me that the jQuery variable window isn't defined
16:55 < kenperkins> morning folks
16:55 < kenperkins> Do you sleep Nexxy 
16:55 <@Nexxy> kenperkins, no
16:55 <@Nexxy> Lefty4000, express shouldn't have anything to do with client-side variables
16:56 <@Nexxy> kenperkins, also; morning :)
16:56 < Havvy> Lefty4000: jQuery works on the client side. You shouldn't be using it on the server side.
16:56 < Lefty4000> @Nexxy: then I'm doing something wrong. where do I use it then? all the js files anre thrown up on the server
16:56 <@Nexxy> Lefty4000, also to clarify; `window` is the browser's "global" object
16:57 < ePirat> How would I destroy a http request while still active? my approach was https://gist.github.com/ePirat/3aa7f3403ab950340581
16:57 <@Nexxy> Lefty4000, juery belongs on the client-side (i.e. browser). with express; you define a public directory that will allow you to serve 'static' content (such as jquery) to the client
16:59 < Lefty4000> So everything in the public directory gets fed to the browser.  
16:59 < Lefty4000> @Nexxy: so I would put my jQuery lib in there, and then any related Jade templates that reference it?
16:59 < Lefty4000> or javascripts?
16:59 < Havvy> You keep your Jade templates in a different directory.
16:59 < Lefty4000> I have them in a routes directory
16:59 < Lefty4000> completely seperate from my public
17:00 < pachet> just throw em all in there
17:00 < pachet> make them fight to see which script is strongest
17:00 < pachet> battle for the mountain
17:00 < Lefty4000> pachet: lol
17:00 <@Nexxy> Lefty4000, views are separate from public 
17:01 < Havvy> Lefty4000: /public/javascripts/jquery.min.js  << put jQuery there.  /public/templates/templates << put templates there.
17:01 < Havvy> err..
17:01 <@Nexxy> why would you put your templates in public?
17:01 < Havvy> /templates/main.jade << put templates there
17:01 <@Nexxy> ;P
17:01 < Havvy> Nexxy: A terrible terrible typo.
17:01 <@Nexxy> oh good!
17:02 < Havvy> /routes/main.js << put route handlers here.
17:03 < Lefty4000> The thing is everytime I've tried to do things with jQuery, All the guides are like, yo you need to get the DOM!
17:03 < Lefty4000> my server.js pushes the requests to the handlers
17:03 < Havvy> Lefty4000: The jQuery function (either jQuery or $) queries the DOM.
17:03 < Lefty4000> and then all of my handlers are in the routes/{proper.js}
17:03 < Lefty4000> So how do I get it?  
17:03 < Lefty4000> I'm running server-side
17:04 < Lefty4000> T.T So confused
17:04 < Havvy> Lefty4000: The server side creates an HTML document.
17:04 < pachet> i think they have a mail order thing
17:04 < pachet> for new doms
17:04 < pachet> its like 4.99
17:04 < Havvy> If you are doing DOM operations on the server side to create the page, you aren't doing it right...
17:05 < Lefty4000> Yes, the server-side creates the html document that the browser loads, and the browser extracts the DOM.  But then how would I maniuplate that?
17:05 < Lefty4000> If all my js code is on the server, how do I be like "yo change dat stuff"
17:06 < Havvy> Lefty4000: All of your JS code is *not* on the server.
17:06 < hipsterslapfight>  /public/javascripts/yourmanipulatingscript.js
17:06 < Lefty4000> How do I activate that javascript? 
17:06 < Lefty4000> If the route handler is on the server, how do I be like, run dat script
17:07 < Havvy> Anything in /public/javascripts   (or anything in /public really) is served statically when requested.
17:07 < hipsterslapfight> Lefty4000: in your templates you would call it, same as you do jQuery
17:07 < hipsterslapfight> <script src=""></script>
17:07 < Havvy> Imagine you have this in your middleware:
17:07 < Havvy> app.use('/public',express.static(__dirname + '/public'));
17:08 < Lefty4000> Hmmm, I think I'm understanding this.  
17:08 < kenperkins> I love people being helpful
17:08 < Havvy> And you have jQuery at   /public/javascripts/jquery.min.js
17:08 < Havvy> Then, when you send an HTML page with <script src="/javascripts/jquery.min.js">, the static middleware will detect that file exists, and serve it, not going through any more middleware.
17:09 < Havvy> You can then have another script (either in its own file or embedded in the page -- up to you) that uses jQuery.
17:10 < Lefty4000> wait thats right, I can do app.get('request', middleware, and then function)
17:10 < Lefty4000> so in the middleware, I jsut send the activation to the javascript file that interacts with the jQuery?
17:13 < hipsterslapfight> https://gist.github.com/hakoneko/5014995 wondering if anybody could give me some feedback of the M & C of MVC i'm looking into here, just a stripped down example of how i go about creating and saving user objects.
17:16 < Lefty4000> @Nexxy: So here is what i've gathered.  I can put the jQuery.min.js file in the public js folder.  and then any associated javascript files in there as well that interact with jQuery and then to activate it, I'll just send the corresponding javascript file a command with the middleware dealio in the app.get/post (''request name", middleware, function) and then it just flies
17:16 < Havvy> https://github.com/Havvy/example-static-express-server
17:16 < Havvy> Lefty4000: ^^
17:17 < Havvy> I've created a minimized website. Note that it won't work cause I didn't actually put jquery in there. Just a poor mock of it.
17:17 < owen1> i have GET endpoint that streams output. i want to call this end point from a browser. will it be streamed or is there a sepcial library i should use to make it show the progress of the output?
17:18 < Havvy> Anyways, in app.js, the only thing I did was put a static middleware in there.
17:18 < owen1> by stream output i meant res.write(data) a few times and at the end repsonse.end()
17:18 < Havvy> If you go to index.html, it'll first check to see if it is there. It is, so it servers it. On most websites, this will be false, and passed to the next middleware.
17:18 < sx> Anyone have opinions on CommonJS vs AMD pattern? Is one doing better these days?
17:19 < jocafa> sx: i think it comes down to a matter of opinion and preference
17:19 < Havvy> Assume that the missing middleware would give the page in index.js
17:19 < Lefty4000> Alright thank you so much guys!!
17:19 < Lefty4000> i'm actually understanding this
17:19 < Havvy> The client's browser would load index.html, and eventually hit the jquery script, and request it.
17:19 < jocafa> personally, i like AMD and we use it here at work, but i know lots of people that absolutely hate it
17:20 < Havvy> So the client sends a request for /javascripts/jquery.min.js
17:20 < Havvy> The static server sees that it exists, and gives it to the client.
17:20 < sx> jocafa: what are the major differenes
17:20 < sx> i've used require before
17:20 < Havvy> And then finally, a script embedded in the page uses jQuery.
17:21 < jocafa> syntax and loading
17:21 < sx> RequireJS i mean
17:21 < Havvy> Neither jQuery nor that script are read by Node.js
17:21 < jocafa> my opinion is that commonjs works very well for server-side stuff, and amd works well for the browser
17:21 < jocafa> YMMV
17:21 < Havvy> Lefty4000: Any questions?
17:22 < kenperkins> +1 to Havvy for helper of the day
17:26 < tavist0> Is there a good source for RHEL 6  rpms for nodejs and npm? 
17:27 < owen1> i have HTTP GET endpoint that streams the output. I want to call this end point from a browser. will it be streamed or is there a sepcial library i should use to make it show the progress of the output?
17:27 < tavist0> I see there is a build in fedora, but it seems to be broken for el6
17:30 < Lefty4000> Havvy: nope I think I got it
17:31 < Havvy> Sweet!
17:50 < Midasx> I am taking a command line argument with process.argv.splice(2) and it works fine. However when I calculate its length with input.length it always equals 1 when infact the string is 32 digits long. Any ideas where I am going wrong? (This is my first program in nodejs!)
17:50 < Havvy> Midasx: splice returns an array.
17:50 < Havvy> You want process.argv[2]
17:50 < Havvy> Which returns a value.
17:51 < Midasx> Ah okay thanks :)
17:51 < Havvy> s/value/the value at the third index of argv/
17:53 < Midasx> I'm planning to make a program that identifies different hashes. THere is already one written in Python but I thought it would be good to make a nodejs version and then have a web interface for it :)
17:53 < gildean> Midasx: you can also do process.argv.splice(2)[0]
17:54 < gildean> or var args = process.argv.splice(2); var arg1 = args[0]; etc... if you want to reuse the array
17:55 < Midasx> Thanks :)
18:00 < Midasx> Are there any inbuilt functions to test whether or not a variable contains numbers? Or to check if it is just letters?
18:01 < Havvy> Midasx: typeof value
18:01 < Havvy> Return "string" if it is a String and "number" if it is a number.
18:01 < Havvy> Note that "38" will return String
18:02 < Midasx> I can't find documentation on that; where might it be? (I just googled nodejs typeof)
18:03 < context> javascript typeof
18:03 < context> https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/typeof
18:03 < context> first result :D
18:03 < Midasx> Thankyee
18:03 < Midasx> So are javascript and node js 100% interchangeable?
18:04 < context> uhhh
18:04 < context> nodejs IS javascript
18:04 < context> javascript is a language
18:04 < Havvy> Node.JS is a platform.
18:04 < context> nodejs is an implementation of that, with stuff on top of it for server side code
18:04 < context> what havvy said
18:06 < Aartsie> someone some experience with express sessions in socket.io ?
18:06 < Midasx> Cool just checking :)
18:06 < Midasx> How could I use typeof to determine if a string has numbers in it though?
18:07 < Midasx> Or is entirely alpha-characters
18:08 < icebox> Midasx, parseFloat
18:08 < wsieroci> if my clients of socket.io is reconnecting without reason many times during connection what could mean?
18:09 < context> midasx: fdshkj543fds".match(/[0-9]/)
18:10 < Midasx> Could work
18:10 < context> but that doesn't mean parseFloat is gonna work. that just tells you the string has a digit in it, somewhere
18:14 < Midasx> context: I tried input.match(/0-9/) in an if statemnt but I got an error "Missing /"
18:15 < context> midasx: i didn't say /0-9/
18:15 < Midasx> Ah yeah I missed a ]
18:16 < Midasx> Cool :D I can detect md5 hashes!
18:25 < brianc> anyone here use node-postgres?
18:26 < Midasx> Anyway I could go through a hashtable in an if statement? if(input.length == hashtable.length). Where hashtable is a table of md5 = longmd5hash, Sha1 = sha1hash etc...
18:26 < pselden4> i have used it.
18:28 < pselden4> using it for a half-completed heroku app
18:28 < brianc> pselden4: do you use the connection pool?
18:29 < pselden4> brianc: no, i'm opening a connection every time
18:30 < brianc> pselden4: for every request?
18:30 < brianc> pselden4: opening a connection is 10x as slow as running a query
18:30 < kenperkins> I'm a bit confused. you can't install npm without nodejs-dev
18:30 < kenperkins> who uses node without npm?
18:30 < brianc> also if you get more requests at once than your db can handle open connections you'll get some errors
18:31 < pselden4> yeah, i haven't put much thought into performance yet... i just added a wrapper around query
18:32 < pselden4> exports.query = function() { pg.connect(db, function(err, client) { client.query.apply(client, args); }); }
18:32 < pselden4> was thinking i could swap that to re-use connections in the future
18:33 < pselden4> i didn't like the idea of passing a client to all of my methods
18:34 < brianc> pselden4: you have a few options
18:34 < brianc> pselden4: one is to use any-db
18:34 < owen1> i have http GET request that runs my project's tests. what status code is approperiate for 'the tests failed'?
18:34 < brianc> one is to use the built in pool in node-postgres
18:34 < brianc> /pull/278
18:34 < brianc> whoops
18:34 < brianc> pselden4: /pull/278
18:34 < brianc> damn it
18:34 < brianc> pselden4: https://github.com/brianc/node-postgres/wiki/pg
18:36 < pselden4> brianc: so does pg.connect use a connection pool by default then?
18:38 < brianc> pselden4: yes
18:39 < pselden4> in that case i'm leaking connections everywhere since i didn't know about needing to call done()!
18:40 < pselden4> actually i'm still on 0.10.2 so maybe things have changed since then
18:41 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:48 < Midasx> How can I get the other value of a hash from a hash table?
18:49 < johnkpaul> Midasx: "the other value"?
18:49 < Midasx> so I have 'md5hashisalongstring' : 'MD5' I can get at the first part, but I want to then print out the second
18:49 < johnkpaul> Midasx: obj['md5hashisalongstring']
18:49 < Midasx> Thanks
18:50 < johnkpaul> Midasx: np
18:53 < Midasx> Hmm not working at the moment. if I use the variable hashtype I get the hash but if I use obj[hashtype] (to try and get its name from the hashtable) I get an error
18:53 < Midasx> obj is not defined
18:53 < Midasx> Oh wait I think I failed
18:54 < Midasx> Woo got it :)
18:54 < Midasx> Sorry I was being slow there
18:54 < johnkpaul> Midasx: :) I just used obj as a name for your object
18:54 < johnkpaul> Midasx: no problem, have fun! 
18:54 < Midasx> I'm having a ball :D
18:57 < Midasx> I have been way more efficient than the python version of this already
18:57 < draginx> Midasx: whats "this"? :)
18:57 < EPIK> what's the preferred tool chain for writing/debugging nodejs?
18:58 < gurjeet> I a starting off JS development, and chose Jake as the build tool. How can I integrate jshin/jslint with it easily.
18:58 < Midasx> http://code.google.com/p/hash-identifier/
18:58 < macgyn> hi send me information aboud node.js
18:58 < Midasx> EPIK: Its just a simple script to identify what hashes are. But the python version makes sa function for every sinlgle hash even though many of them are exactly the same process
18:59 < draginx> EPIK: u can use something like debugger
18:59 < draginx> but usually using eventemitters or console.log'ing is enough for most
18:59 < draginx> and debuggers are just fancy wrappers around console.log that adds colors etc.
18:59 < Midasx> draginx: That was aimed at you not EPIK sorry
18:59 < draginx> Midasx: very cool :)
18:59 < enigmuriatic> what's the cheapest way to get static server bandwidth?
18:59 < Midasx> draginx: Horrid bit is now copy/pasting a shed load of hashes 
19:00 < enigmuriatic> actually, it's probably AWS, right?
19:00 < demio> lol,
19:00 < demio> https://github.com/felixge/node-mysql/issues/274#issuecomment-13960461
19:01 <@Nexxy> EPIK, node-inspector is good
19:01 < Trindaz> Morning all! question for the channel: I'm looking for an ORM that's built on mongoose for django that has a few models out of the box such as User, with default functions for storing passwords etc. (so I'm basically asking for Django for node.js). Can you recommend anything?
19:01 <@Nexxy> EPIK, https://github.com/dannycoates/node-inspector
19:01 < s3shs> Is there a way to make an app-wide global?  I want to make a function available to all source files without require.
19:02 < EPIK> Nexxy: Much appreciated. I googled that and found a video on it.
19:02 < draginx> Always modulate, if you don't, your system is flawed :D
19:02 < demio> Prepared statements? who the fuck needs that
19:02 < demio> this is the state of one of the most used node.js mysql libs
19:02 <@Nexxy> demio, security? who needs it
19:03 < Trindaz> s3shs: Do you need to change it during the application? environment variables?
19:03 < demio> Nexxy: indeed
19:03 < demio> and they close the issue 
19:03 < demio> like it doesnt matter lulz
19:03 <@Nexxy> demio, did you submit a pull request with the issue?
19:03 < Trindaz> any word on the ORM question?
19:03 < demio> we were discussing the problem 
19:03 < demio> im not even the original reporter
19:04 < demio> the probablity of me contributing with code for the repo was much greater before this interlude with the developers
19:04 <@Nexxy> demio, what's the issue?
19:04 < demio> not supporting prepared statements
19:04 <@Nexxy> https://github.com/felixge/node-mysql/issues/274#issuecomment-7718792
19:05 < demio> and closing the issue without a providing an adequate solution 
19:05 < demio> if theyr're not going to implement a fix
19:05 < demio> at least leave the issue open
19:05 < demio> so other people can contribute
19:05 <@Nexxy> how does a closed issue preclude contributions?
19:05 < demio> it sends a message to any potential contributers
19:06 < demio> about the developers attitude
19:06 < demio> and it makes the issue less visible
19:06 < demio> a mysql library not supporting mysql prepared statements is a fucking big deal
19:06 < demio> not something you can dismiss lightly 
19:06 <@Nexxy> demio, and yet here you are
19:06 <@Nexxy> dismissing it
19:06 <@Nexxy> because you don't feel like you were given enough attention
19:06 < demio> huh
19:06 < bradleymeck> demio: the prepared statements serialization api is an entirely different parser than the non-prepared
19:06 < demio> i didnt dismiss it 
19:07 <@Nexxy> sorry, you're "less likely to contribute"
19:07 < bradleymeck> i looked at adding it and I would have to write an entirely new serialization module
19:07 < demio> im still considering contributing 
19:07 < demio> but maybe in a separate fork 
19:07 < brianc> I can see the point of leaving the issue open until a pull request comes in but an open issue itself unfortunately isn't going to fix anything
19:07 < demio> i dont think anyone in that thread was being demanding 
19:07 <@Nexxy> demio, you have a pretty spoiled attitude 
19:07 < demio> or asking FIX THIS SHIT NAUGH
19:07 < demio> what?
19:08 < demio> im just saying that closing the issue like this is a bad sign
19:08 < demio> its not a minor problem
19:08 <@Nexxy> you're doing this right now
19:08 <@Nexxy> http://i.qkme.me/3t2c8j.jpg
19:08 < demio> it should be visible to the community
19:08 < kenperkins> hm. clearly something went wrong with a test install of npm
19:08 < demio> but im offering a suggestion: dont close the fucking issue
19:08 <@Nexxy> you're complaining
19:08 < demio> and let people contribute / discuss
19:08 <@Nexxy> in IRC
19:08 < demio> yes i am
19:08 < kenperkins> getting cannot find module graceful-fs
19:08 <@Nexxy> felixge isn't even here
19:08 <@Nexxy> that isn't a solution
19:08 < demio> raising awareness
19:08 <@Nexxy> that's bitching
19:08 < kenperkins> node 8.20
19:09 <@Nexxy> lol
19:09 < bradleymeck> demio: its open source. open source means that people do w/e, contribute and PR, ask to reopen issues, fork it, etc. its all normal
19:09 < demio> true
19:09 < demio> but the discussion in the issue was being constructive 
19:09 < CoverSlide> the nuts and bolts of it is, the authors don't have the time to implement this feature, but welcoming patches. if you don't have the time to try writing a patch, then it's obviously not important enough to you either
19:10 < demio> no one was being bitchy / demanding i think
19:10 <@Nexxy> it certainly came across that way to me
19:10 <@Nexxy> but I'm open to the possibility that I was misinterpreting it
19:10 < CoverSlide> Why are you wasting time on IRC, write the patch now! go go go!
19:10 <@Nexxy> this is kind of my point
19:11 < demio> being unfamiliar with the codebase, i cant really write a patch for this during my lunch break
19:11 < brianc>  weekend project!
19:11 < demio> its something best done during a weekend
19:11 < brianc> might take longer than that even
19:11 < brianc> espesh w/ invariable bugs
19:12 < brianc> but would be good learning & good experience
19:12 < demio> aye
19:12 < demio> but closing the issue and sweeping it under the rug isnt a good attitude
19:12 <@Nexxy> neither is coming into IRC
19:12 <@Nexxy> and saying
19:12 <@Nexxy> 13:59 < demio> Prepared statements? who the fuck needs that
19:12 < brianc> i think different folks run their repos differently
19:12 <@Nexxy> then pretending you're "raising awareness"
19:13 < demio> what
19:13 < demio> im not pretending shit
19:13 <@Nexxy> [14.06.50] < demio> no one was being bitchy / demanding i think
19:13 < kenperkins> so why would I get the graceful-fs error on npm install via dpkg?
19:13 < demio> its called fucking sarcasm
19:13 < brianc> some people like to keep issues focused on bug reports and not feature requests, others tag each as a certain type, some leave them all open...I don't think it's meant to say it isn't important, just that it's marked as "wont fix" by the maintainers since it's not in their current set of concerns
19:13 <@Nexxy> hilarious.
19:13 < demio> Nexxy: ive contribtued to my fair share of oss projects
19:14 < demio> and do it whenever I can
19:14 <@Nexxy> demio, are we talking about other OSS projects?
19:14 <@Nexxy> no.
19:14 <@Nexxy> we're talking about the way you're acting about node-mysql
19:14 <@Nexxy> which is out of line
19:14 < demio> rofl
19:14 < demio> i dont think it is
19:14 < demio> but youre entitled to your opinion
19:14 <@Nexxy> fair enough
19:15 < CoverSlide> the reason there's no prepared statements for node-mysql: too much arguing on IRC, not enough hacking. it's all demio's fault
19:15 < demio> i the way they  closed the issue rubbed me on the wrong side 
19:15 < demio> haha 
19:15 < demio> i think the way*
19:15 <@Nexxy> I thnk you're taking it a bit too personally
19:15 < demio> im not takin it personally 
19:16 < demio> i dont know them and they dont know me
19:16 < brianc> the easiest answer, obviously, is to switch to postgres
19:16 < CoverSlide> in other news, WOO GALLON SMASHING! http://www.youtube.com/watch?v=glgblV7Un_g
19:17 < demio> afk
19:17 <@Nexxy> brianc, aside from bitching about it on IRC, of course
19:17 < brianc> haha, yes
19:17 <@Nexxy> I can feel the prepared statements just crafting themselves now
19:17 < demio> they are 
19:17  * Nexxy sixth sense
19:17 < demio> somewhere someone is writing a prepared statement
19:17 < demio> :P
19:17 <@Nexxy> :P
19:17 < brianc> that pic you linked makes me embarrased to like redbull
19:17 <@Nexxy> brianc, haha
19:17 < brianc> also my spelling is embarrassing
19:18 <@Nexxy> just don't code while wearing aviators 
19:18 < brianc> roger, wilco
19:18 <@Nexxy> *CHHHK*
19:18 < brianc> I don't own aviators (thankfully?)
19:18 < brianc> Nexxy: have all the nodeconf topics been decided already? 
19:20 <@Nexxy> brianc, I am not currently at liberty to divulge such pertinent information
19:21 < brianc> roger that
19:22 < brianc> welp in case they haven't, I could really use some info on profiling. the latest nodeup podcast isaacs was talkin' about profiling node for v0.9.x and me thinks it was facinating/useful
19:23 < brianc> that's obviously just my .02$
19:24 < brianc> that might be more a v8 thing though
19:26 < chapel> Nexxy: http://song-of-github.herokuapp.com/?username=nexxy
19:26 < kenperkins> so who's running node in production? do you manage your own deb repository? It's really annoying that chris lea's backports only ever has the latest version
19:26 < brianc> incredible
19:26 < brianc> kenperkins: I always build node from source
19:27 < kenperkins> even for production?
19:27 < brianc> kenperkins: definitely 
19:27 < kenperkins> ok
19:27 < janmower> kenperkins: i have a spec file that builds an rpm
19:27 < brianc> kenperkins: i also install it into version specific folders: /usr/local/node@0.8.20 for example
19:27 < naomi> nexxy has a nice github song
19:28 < kenperkins> sure
19:28 < janmower> kenperkins: compiling on production is a nono from my view
19:28 < naomi> not too overwhleming like some of the others
19:28 < chapel> the song of my people
19:28 < kenperkins> janmower: I agree
19:28 < chapel> naomi: like substacks
19:28 < chapel> naomi: http://song-of-github.herokuapp.com/?username=substack
19:28 < brianc> http://song-of-github.herokuapp.com/?username=visionmedia
19:28 < brianc> sounds like when i play piano
19:28 < janmower> kenperkins: i just have a simple 20 line spec file that pulls a branch/tag/reference from joyent's github and stamps my version
19:29 < kenperkins> i have been pointing puppet at chris lea's PPA, but he removes old versions so quickly that it's not robust
19:29 < janmower> yea then my rpm is in my repo
19:29 < chapel> its pretty easy to build from source
19:29 < kenperkins> building isn't the concern
19:29 < janmower> yea it's easy to make a spec file for rpm
19:29 < kenperkins> I don't want to be building apps for production
19:29 < janmower> making debian packages is reading half-completed old docs
19:30 < naomi> visionmedia's sounds just like substacks.
19:30 < kenperkins> I'm happy to build for dev
19:30 < brianc> janmower: just curious...why is it a nono?
19:30 < kenperkins> sadly, I need .debs :D
19:30 < chapel> kenperkins: you only have to build once
19:30 < janmower> brianc: because 2 prod servers *might* compile a different binary
19:30 < kenperkins> janmower++
19:31 < gurjeet> I a starting off JS development, and chose Jake as the build tool. How can I integrate jshin/jslint with it easily.
19:31 < janmower> brianc: so for reliability and repeatibility always ship one single built binary
19:31 < brianc> janmower: awesome - thanks
19:31 < janmower> brianc: perl from source was fun as well :)
19:32 < thestranger> hi
19:32 < brianc> thestranger: hi
19:33 < kenperkins> <sigh> can't get npm to install properly
19:33 < thestranger> how are u?
19:33 < kenperkins> from .debs
19:33 < samholmes> I didn't get anyone's opinions on this. http://samholmes.me/post/43660373981/node-js-routing-from-a-routes-file
19:33 < Midasx> Thanks for y'all help!
19:33 < samholmes> How does one gain an audience when blogging? Does it just happen?
19:34 < chapel> samholmes: takes time
19:34 < samholmes> so long as I make good content
19:34 < brianc> samholmes: blog about cool stuff & link me to it!
19:34 < CoverSlide> samholmes: http://www.youtube.com/watch?v=xlA9bNk3b5Q
19:34 < chapel> samholmes: or having people with influence/followers promoting you
19:34 < chapel> samholmes: also blog regularly
19:34 < CoverSlide> or blackhat
19:34 < brianc> basically: marketing
19:34 < chapel> samholmes: and promote promote promote
19:35 < chapel> samholmes: after a while people will start listening to you if they see you enough and like what you have to say
19:35 < CoverSlide> hacker news, reddit
19:35 < chapel> twitter
19:35 < CoverSlide> digg
19:35 < samholmes> I don't want to do anything dark like the black arts
19:35 < CoverSlide> :p
19:35 < samholmes> I see
19:35 < chapel> get mikeal/tj/ryah/isaacs/whoever to rt/link your stuff
19:35 < Havvy> samholmes: Put anything you want in npm. Just give it a unique enough name that you aren't taking up some generic name.
19:35 < samholmes> Can tumblr do ads?
19:35 < chapel> will get node people listening
19:36 < chapel> samholmes: ads aren't worthwhile unless you have a lot of traffic
19:36 < samholmes> Havvy: I was just starting the discussion as to whether it's worth it
19:36 < chapel> specially for tech related blogs
19:36 < samholmes> chapel: How else do you make money off a blog?
19:36 < chapel> samholmes: its a lot of work
19:36 < chapel> samholmes: easier to get a job
19:36 < samholmes> chapel: So I should just blog for free then?
19:36 < Havvy> samholmes: Put it there. If somebody uses it, great. If not, great.
19:37 < chapel> samholmes: do it because you enjoy it, otherwise you will be severely disappointed
19:37 < samholmes> Havvy: I see
19:37 < samholmes> chapel: I do enjoy it. :)
19:37 < chapel> it has other effects, increasing your network and exposure
19:37 < chapel> luck surface area if you will
19:37 < samholmes> I like tumblr, but I want to make my own theme, I wonder if this is easy
19:37 < chapel> samholmes: just html/css
19:38 < samholmes> chapel: But I guess I have to submit it before I can use it
19:39 < chapel> samholmes: no idea, you can customize
19:39 < chapel> I prefer static blog generators
19:39 < samholmes> what are those?
19:39 < MI6> joyent/node: isaacs v0.8 * f9a0140 : http: Handle hangup writes more gently - http://git.io/j6GDUg
19:39 < chapel> jekyll (octopress) is the most popular
19:39 < chapel> Im using wintersmith which is a node.js based one
19:40 < CoverSlide> there's now Jott which is node-based
19:40 < chapel> there are a ton
19:40 < chapel> though most in node are written in coffeescript :(
19:40 < chapel> need to just write my own in js so I can have a pure js one
19:41 < eighty4> chapel: jekyll + github is wondeful
19:42 < chapel> eighty4: yeah, though if you want to use anything custom you cant use their auto generator
19:42 < jrajav> chapel: You know that coffeescript just compiles to js, right?'
19:42 < jrajav> chapel: Fairly readable js, no less
19:42 < chapel> jrajav: yes, but I like to read real js
19:42 < chapel> not compiled js
19:42 < jrajav> chapel: Then just compile it and use that
19:42 < chapel> I know cs, so its more just a preference
19:43 < chapel> jrajav: if I want to contribute or make changes, I don't want to have to write cs
19:43 < CoverSlide> lots of people know coffeescript, not everyone actually likes it
19:43 < eighty4> chapel: I've always found ways around that.
19:43 < jrajav> CoverSlide: I'm one of them
19:43 < chapel> CoverSlide: exactly
19:44 < chapel> I used to like cs, but eh anymore
19:44 < jrajav> I know that the success of Coffeescript partly depends on it becoming parasitically "synonymous" with Javascript
19:44 < jrajav> But I really wish it were a part of community etiquette to always publish and maintain the compiled JS
19:44 < chapel> I have no problem using it, I just tend to shy away from modules/code that uses it
19:44 < chapel> jrajav: yeah, cs modules suck
19:45 < chapel> :P
19:46 < chapel> othiym23: hows the node.js client coming?
19:47 < kenperkins> is there a better introduction to domain than the docs>?
19:49 < CoverSlide> nope, noone uses domains or blogs about them ever either
19:49 < kenperkins> CoverSlide: thanks for the sarcastic response :P
19:50 < kenperkins> I'm not having a lot of luck via google
19:50  * CoverSlide speaks truth
19:50 <@Nexxy> chapel, naomi haha sweet
19:50 < naomi> <3
19:50 <@Nexxy> this is awesome
19:50 <@Nexxy> <3
19:50 < chapel> Nexxy: :)
19:51 < chapel> Nexxy: hows the little one?
19:51 <@Nexxy> chapel, awesome! he's working on walking and singing right now
19:51 < chapel> Nexxy: how old?
19:51 <@Nexxy> 7mo
19:51 < chapel> my neice is 10months now
19:52 < chapel> shes a power walker, but still needs watching cause she tries to go too fast or looks around and falls
19:52 < chapel> she doesn't sing, unless you call screaming at the highest pitch singing
19:52 < chapel> :P
19:52 <@Nexxy> haha yeah
19:52 <@Nexxy> he does a lot of that too but he's definitely trying to understand pitch
19:53 < chapel> nice
19:53 <@Nexxy> we got him one of those xylophones 
19:53 <@Nexxy> he plays it by eating the mallet
19:53 < chapel> awesome, thats a good idea
19:53 < chapel> those are fun
19:53 <@Nexxy> yeah!
19:53 < chapel> I've thought about setting up my makey makey for her
19:53 <@Nexxy> also if you don't have a "jolly jumper"
19:53 <@Nexxy> you are missing out on hilarity
19:54 <@Nexxy> https://twitter.com/nexxylove/status/302619437222207489
19:54 < kenperkins> CoverSlide: sorry if I misinterpreted that. Are you saying that domain is still so new that there's not a lot of commentary?
19:54 < chapel> Nexxy: that looks fun
19:54 < kenperkins> Nexxy: that your kid?
19:54 <@Nexxy> kenperkins, yus
19:54 < kenperkins> I have 2 little girls, 11mo and 2.5
19:54 < chapel> my brother has a jumper but not a door/frame based one
19:54 <@Nexxy> chapel, inorite? I wish there were adult sized ones!
19:54 < CoverSlide> it's not quite that new, but otherwise yes
19:54 <@Nexxy> kenperkins, awesome :D
19:55 < pachet> @Nexxy i want 4 jolly jumpers
19:55 < pachet> for each cat
19:55 < chapel> Nexxy: for sure
19:55 < kenperkins> my 11mo just started walking (yay)
19:55 <@Nexxy> pachet, haha
19:55 <@Nexxy> kenperkins, \o/
19:55 <@Nexxy> oh man it's awesome
19:55 < chapel> awesome kenperkins 
19:55 < kenperkins> CoverSlide: thanks
19:55 <@Nexxy> elliott is still bracing himself on things but it's so cool
19:55 < kenperkins> is he your first?
19:55 <@Nexxy> and only, yeah lol
19:55 < kenperkins> well enjoy it. The tough times are a-coming
19:56 < kenperkins> 2+ sucks balls
19:56 <@Nexxy> haha ._.
19:56 <@Nexxy> no no, you see
19:56 < eighty4> So. I asked this yesterday but never got an answer… I'm currently loading my config into "global.config = require('./config/config').config;" to be able to access it from all my requires. Is this considered bad practice?
19:56 < chapel> Nexxy: yeah Kaleigh (my neice) can walk by herself but she will fall eventually
19:56 <@Nexxy> *we're* going to do things *differently*
19:56 <@Nexxy> :P
19:56 < CoverSlide> i agree, mine's 2.5
19:56 <@Nexxy> chapel, it's so cute
19:56 < kenperkins> eighty4: i just include my config module in each requires
19:56 < chapel> eighty4: you want some config for your config in your config in config.js?
19:57 < kenperkins> Nexxy: good luck with that.
19:57 <@Nexxy> haha
19:57 <@Nexxy> that's the joke
19:57 < kenperkins> Just you wait until your kid is 2 and a half, and you're out in some public place, and they decide to turn into a limp spaghetti noodle in the middle of a huge walk way
19:57 < kenperkins> it's impossible to pick them up
19:57 < kenperkins> they just slink back to the ground
19:57 <@Nexxy> tickle their belly
19:58 <@Nexxy> then hoist them over your shoulder
19:58 < eighty4> chapel: :) In my app.js I do global.config to have it accessible from every other file.
19:58 <@Nexxy> !
19:58 < kenperkins> tickles do not make a cranky kid happy
19:58 <@Nexxy> but it's hilarious!
19:58 < eighty4> kenperkins: yeah I did that first but then I started to think about how I could clean things up. Repeating things just fells bad
19:58 < chapel> eighty4: its a joke, because you do global.config = require('./config/config').config
19:58 < kenperkins> yea, for all the other parents delighting in your misery
19:58 < chapel> thats a lot of config
19:58 <@Nexxy> lmao yeah
19:58 < kenperkins> I don't like polluting the global namespace
19:58 < kenperkins> so there's that
19:58 < eighty4> chapel: :) sorry, I'm to tired and stupid to get jokes
19:58 <@Nexxy> eighty4, that's not very nice
19:59 < CoverSlide> Object.freeze(global)
19:59 < eighty4> yeah no, I don't really like to keep it in global either but couldn't find any other way to do it...
19:59 < chapel> eighty4: you don't need to use a global, just attach to an object and require that
19:59 < eighty4> I guess I'll just do a config = in all files
19:59 < chapel> its like global, but not global
19:59 < eighty4> chapel: not sure I got that
19:59 < chapel> var app = {}; app.config = require('./config')
20:00 <@Nexxy> kenperkins, are you doing any programming learning yet?
20:00 < chapel> and then var app = require('./app')
20:00 < CoverSlide> usually there's only one single entry point to my app, so i have the config there, and it gets shared among my other modules when called
20:00 <@Nexxy> I'm curious what other people are doing
20:00 < eighty4> chapel: right, but that way it wouldn't be accessible inside another file.
20:00 < chapel> and you will have app.config available, and anything else you need
20:00 < chapel> eighty4: you require it in that file
20:01 < chapel> its not much than just requiring config directly, but you can use more than config with it
20:02 < eighty4> yeah… I guess I'll just have to clean up my code and do somthing like that.
20:02 < kenperkins> sigh
20:03 < chapel> eighty4: ultimately, the reason you don't use global is because its not always safe, but it also makes people lazy
20:03 < chapel> kenperkins: sigh?
20:03 < kenperkins> just trying to get my head around the 8.20 changes with req.on('error') and domain
20:03 < kenperkins> and what it means for me
20:04 < eighty4> chapel: I'm generaly against any global vars :)
20:04 < wwicks> heatxsink: just chill in here?
20:05 < chapel> eighty4: the reason you'd do something like app or an object you require in other files is because you control it
20:05 < chapel> so its safe to attach to
20:05 < Havvy> eighty4: Does that include module level globals?
20:07 < eighty4> Havvy: I can't say that I have anything against module globals. I'm coming from php… 
20:08 < Havvy> PHP globals just get confusing fast.
20:09 < eighty4> have at what wordpress does with globals :)
20:09 < eighty4> *have a look at what
20:09 < Havvy> No thanks.
20:09 < kenperkins> eighty4: realize that you can't control globals. Some npm module could pollute/corrupt your global var out from under you
20:09 < wwicks> mscdex: did you just ref the rfc(s) for your ipp stuff or did you find something that wasn't as painfully dry?
20:10 < eighty4> kenperkins: I'm not arguing against it. My question was based on me NOT wanting to use globals
20:10 < kenperkins> I understand, was just adding that for context
20:10 < chapel> kenperkins: yep, thats why I advocate making an object you require, its cleaner ultimately
20:10 < eighty4> kenperkins: I realize what could happen :)
20:10 < kenperkins> chapel: that's exactly what I do
20:11 < chapel> kenperkins: its really simple, and easier than passing it in through function contexts
20:11 < eighty4> I began by doing a little object called common and included some useful things in that and used common.config, and so on...
20:11 < mscdex> wwicks: i always use RFCs
20:12 < mscdex> wwicks: but occasionally will reference other projects for workarounds, etc
20:12 < wwicks> mscdex: need more folks like you then :)
20:13 < eighty4> kenperkins, chapel: thanks for all your input
20:14 < wwicks> mscdex: well, i'm finding yours to be a good reference. Thanks for posting what you could.
20:17 < mscdex> wwicks: there's not much there really
20:17 < wwicks> no- but the consts is a great aggregation of many of the rfcs
20:19 < chapel> mscdex: what rfcs?
20:20 < CoverSlide> who uses ipp?
20:20 < wwicks> I'm working on it
20:20 < wwicks> chapel: http://tools.ietf.org/html/rfc2911 is one
20:20 < CoverSlide> dead trees are for dinosaurs
20:21 < wwicks> tell that to the lawmakers that require me to print
20:21 < mscdex> CoverSlide: ipp servers don't have to be physical printers that print out on paper
20:21 < CoverSlide> i will
20:22 < wwicks> mscdex: indeed you've read the rfcs! lol
20:48 < foenix> hey all, just wondering how to properly make redis async calls: https://gist.github.com/octaflop/5016410
20:49 < foenix> I'm trying to take 3 objects and put them in a list
20:49 < kenperkins> foenix: check out (among others) the async module
20:50 < carpii> anyone know of a package that will provide admin interface to socket.io, maybe show number of connections, thruput etc 
20:50 < kenperkins> https://github.com/caolan/async
20:50 < foenix> kenperkins, I don't need an external module. I just need to get my callbacks right
20:51 < kenperkins> what's wrong with an external module? It mitigates complexity or the likelihood of making a mistake
20:51 < foenix> but it prevents me from my goal: learning javascript 
20:51 < foenix> when I do something heavier, I'll def use the async module, but I really want to know what's going on in the back
20:52 < kenperkins> fair enough
20:52 < foenix> I'm only writing this blogging app to teach myself js/node.js
20:52 < foenix> thanks for the tip, though
20:52 < kenperkins> yes, you'll have to keep track of the expected number of callbacks, decrement as appropriate, deal with propagating errors back to the final, etc
20:54 < foenix> kenperkins, yeah. it's a pain, but I just want to write it by hand once, you know?
20:54 < foenix> do you understand what this code is trying to do at least? It's taking 4 different redis refs and storing them into an object. that object gets pushed to a list
20:55 < foenix> but the problem is, the server is hanging…
20:55 < foenix> I'm not sure I wrote the cb correctly. I'm probably going to have to use an external module, but again, I'd rather learn from scratch.
20:56 < doomslice> foenix: your finalCallback doesn't have any callback in it
20:57 < doomslice> it adds it to the list and then... does nothing
20:57 < foenix> cb?
20:57 < doomslice> oh i'm sorry, i missed that
20:57 < foenix> no prob
20:57 < doomslice> does that ever get called?
20:58 < foenix> once
20:58 < foenix> but not 3 times like it's supposed to
20:58 < doomslice> how are you calling the outer function
20:59 < doomslice> sorry, i mean what values would you expect for bloglen
20:59 < foenix> 3
20:59 < foenix> it's a count of all the blog posts
21:00 < doomslice> so let's think about what happens in the call
21:00 < doomslice> len = 4, blogLen = 3
21:00 < doomslice> once all 4 callbacks complete
21:00 < doomslice> finalcallback will be called ONCE
21:00 < joocebocks> Hi all, a bit of a node.js/express noob but I'm trying to upload an image from a form and using the express.bodyParser.  I'm using a mobile API function to upload the image, and I'm getting a parser error.  I did an equivalent POST using the Chrome Advanced Rest Client (which worked) and wiresharked both to look at the difference.  
21:00 < doomslice> so it gets to this line: --bloglen || cb(ret)
21:00 < foenix> doomslice, sec. lemme wrap my head
21:01 < doomslice> 2 || cb(ret) -- so it will never get to callback
21:01 < doomslice> ** to cb
21:01 < joocebocks> The most important difference to me seemed to be that API had a boundary with no content, and then another boundary.  Any thoughts? I read up on the upload RFC and this seems to be not appropriate.
21:03 < doomslice> foenix, i think i get what your're trying to do now
21:03 < doomslice> i think you're missing a loop
21:03 < doomslice> iterating over the blog ids
21:03 < foenix> doomslice, yeah, I had a loop previously
21:04 < foenix> but I guess I thought that the calls themselves would loop (stupidly)
21:04 < mikolalysenko> hey, does anyone here know of a good library for dealing with n-dimensional typed arrays?
21:04 < mikolalysenko> like images, matrices, volume data, etc.
21:04 < foenix> doomslice, crap. I have to go for 15min. 
21:05 < doomslice> if you want it for that single id (the last one)
21:05 < CoverSlide> i don't know of any, although aren't images usually single-dimension arrays?
21:05 < doomslice> just remove that "--bloglen ||"
21:09 < ahungry> how crazy of an idea is it to use socket.io under node.js as a pass through basically from the web browser to a listening tcp socket with a non-js language backend?  In my sample test I have it working with lisp
21:11 < carpii> thats not really what socket.io is for i think
21:12 < draginx> http://clock.co.uk/tech-blogs/preventing-http-raise-hangup-error-on-destroyed-socket-write-from-crashing-your-nodejs-server thoughts on this?
21:14 < iain> Serby did a great blog post
21:15 < CoverSlide> bacon pancakes, makin bacon pancakes
21:15 < CoverSlide> take some bacon and put it in a pancake
21:15 < ahungry> so far it works pretty well, I can have my backend language of choice with asynchronous browser interaction and no dependency on finding a decent websocket server in said language of choice
21:16 < ahungry> since I dont think any compare to socket.io's graceful degradation and ease of use
21:16 < CoverSlide> i prefer engine.io
21:16 < CoverSlide> socket.io got too much baggage
21:16 <@isaacbw> really?
21:17 < carpii> ah ok, i got the impression you were trying to proxy http traffic rather than websockets
21:17 <@isaacbw> I've never heard that before
21:17 < gluxon> CoverSlide: Baggage?
21:17 < carpii> what does engine.io do better ?
21:18 < CoverSlide> less builtin stuff, less magic
21:18 < carpii> i only care about performance really
21:18 < carpii> anything else i can work around :p
21:19 < CoverSlide> engine.io is more performant than socket.io
21:19 < ericelliott> What are the best current tools for debugging node in prod? Can I grab a core dump from a running process, for example, without relying on Joyent's custom OS?
21:19 < gluxon> ericelliott: Have you looked at the debug section in the API docs?
21:20 < gluxon> http://nodejs.org/api/debugger.html
21:21 < ericelliott> gluxon: Don't I have to start the process with debugging enabled in order to connect with debugger?
21:21 < carpii> Coverslide, got a source for this claim please
21:22 < gluxon> ericelliott: Yes. "To use this, start Node with the debug argument"
21:22 < ericelliott> gluxon: What I'm wondering is if there's a way to diagnose a currently running production process, so that I can examine the state of an intermittent, very hard to reproduce problem..
21:22 < gluxon> ericelliott: Ah, you don't have the ability restart it?
21:22 < carpii> from what im reading engine.io starts off with a long polling connection, and then upgrades when it can, rather than just trying websocket to begin with
21:23 < gluxon> I don't think there's a way to do that without starting the application in debug mode.
21:24 < ericelliott> gluxon: if we restart it, we lose the state that got it into trouble, and as I mentioned, it's very hard to reproduce... so if we're going to find the cause, we need to be able to grab a core dump or something of the current state.. once we have that, we can restart the service and examine the core dump offline.
21:25 < ericelliott> in the meantime, we can route around the troubled hosts, but if we don't solve it, other hosts could get into the same broken state.
21:25 < groundwater> carpii: socket.io does that too
21:25 < gluxon> ericelliott: I've never done anything like that. I'm afraid I'm not the right person to ask. Post that on StackOverflow.
21:26 < carpii> hmm, yes. seems youre right
21:26 < groundwater> carpii: sorry, what socket.io does is first "negotiate" a protocol
21:26 < groundwater> carpii: it always makes two connections, one to negotiate, and one to connect
21:26 < carpii> yeah im seeing it in chome network tab
21:27 < groundwater> carpii: it seems to cause problems with load-balancing
21:27 < groundwater> carpii: we even backed our socket.io server with redis, but still get weird connection problems
21:28 < carpii> what is it youre load balancing? multiple node backends ?
21:28 < ericelliott> gluxon: I've been searching around, and found some great talks by a guy from Joyent who talks about tools that Joyent has created to do just what I'm describing, but it seems like those tools are built on top of Joyent's customized OS, and require a special build of Node. I'm wondering if anybody has built on that great work and created some tools that anybody can use -- for example, on our...
21:28 < ericelliott> ...Amazon EC2 instances.
21:28 < groundwater> carpii: amazon ELB in TCP mode
21:28 < groundwater> carpii: to a group of identical machines
21:28 < gluxon> ericelliott: Could you link me to this?
21:29 < carpii> but this sits infront of your socket server, as in clients connect to node first ?
21:29 < carpii> or behind, i guess
21:29 < groundwater> carpii: [client] -> [ELB] -> [Node + socketio]
21:29 < carpii> ah i see
21:30 -!- mode/#Node.js [+o TooTallNate] by ChanServ
21:32 < groundwater> carpii: the connections are not completely stateless, so if you reconnect to a different host it causes problems
21:32 < ericelliott> gluxon: http://www.youtube.com/watch?v=vQUq5rWWn-s
21:32 < carpii> yeah i can see why that would be a problem
21:32 < groundwater> carpii: which kind of fucks with CI… each time you update there is a wash of confusion 
21:32 < carpii> theres no way to control which orker its farmed off to ?
21:33 < substack> pow: http://browserify.org/announcing_browserify_v2
21:33 < groundwater> carpii: no. elbe will keep the same TCP connection open during the sockets lifetime
21:33 < substack> it's on HN now too
21:33 < groundwater> carpii: but other than that, nope. 
21:33 <@isaacbw> woo, browserify party
21:34 < groundwater> carpii: the redis store is supposed to keep the workers synced, but it doesn't always seem to work
21:34 < lz> substack, ever thought about a part time design gig..? :)
21:35 < ericelliott> substack: is this api-compatible with the previous version?
21:35 < ericelliott> substack: or do I need to change my browserify modules?
21:35 < carpii> have you encountered any problems with socket.io memory leaking?
21:35 < groundwater> carpii: yes, HUGE problems
21:35 < carpii> uh oh :(
21:36  * ericelliott cranks browserify party music
21:36 < groundwater> carpii: seems to be stray buffers, cuz v8 isn't reporting them
21:36 < carpii> grows to the point it crashes?
21:36 < draginx> http://clock.co.uk/tech-blogs/preventing-http-raise-hangup-error-on-destroyed-socket-write-from-crashing-your-nodejs-server thoughts on this? (sorry dont know if someone responded to this o rnot)
21:36 < groundwater> carpii: yes, but now we just restart periodically
21:36 < groundwater> carpii: until we remove socket.io
21:36 <@isaacbw> are you sure it's not your fault
21:36 <@isaacbw> and how you're using closures
21:36 < substack> ericelliott: the api is pretty different now but the command-line options are mostly similar, just less of them
21:37 < groundwater> isaacbw: yes
21:37 < substack> and the code that browserify bundles should be pretty much unaffected
21:37 < draginx> substack: nice work man, thanks for all of ur work :)
21:37 < azylman> We haven't had any issues with socket.io
21:37 < groundwater> isaacbw: https://github.com/LearnBoost/socket.io/issues/438
21:37 < draginx> do u have that eog script that you use on your github account in one of your presentations (that shows image lines/length as colors / a png file)
21:38 < ericelliott> substack: thanks for this. =)
21:38 < ericelliott> substack: I love the static module resolution on the client.
21:38 <@isaacbw> groundwater: that's too bad
21:38 < groundwater> isaacbw: the problem was exacerbated when we moved to a load-balanced setup
21:39 < groundwater> isaacbw: in truth, i can't be 100% sure, but i based on available evidence i am looking at socket.io first
21:39 < azylman> That thread is a shitshow
21:40 <@isaacbw> and it's not something as simple as the load balancers sending clients to different places instead of sticking them to a single host?
21:40 < substack> ericelliott: also multiple bundles work now, although there are some bugs at the moment
21:40 < substack> defunctzombie is looking into those
21:41 < groundwater> isaacbw: why should that excuse a memory leak?
21:41 <@isaacbw> I'm not saying it should ;)
21:42 < groundwater> isaacbw: that is the root cause though, near as i can tell
21:42 < doomslice> wjat
21:42 < doomslice> where does browserfy fit into a build process that involves minification?
21:43 < doomslice> browserfy, then minify?
21:47 < foenix> doomslice, not sure if you're still on. Got my network fixed
21:47 < doomslice> yeah
21:48 < foenix> so I think I need a loop of "bloglen" surrounding all but the "finalcallback"
21:55 < doomslice> foenix, yes, i think that's it
21:55 < doomslice> keep in mind that they could come in out of order though
21:55 < doomslice> if one callback finishes first
21:56 < foenix> doomslice, yeah. my brain hurts
21:56 < wedgeV> hi, i'm using restify, and have a route like "server.get({path: '/i/:id',….", this route doesn't get matched when the id has a ":" in it. any reason for that? i thought : is valid inside a url path
21:56  * pachet looks admiringly at his shiny promise aggregator library
21:57 < foenix> screw it. I think i'm just going to use the async lib this
22:00 < foenix> doomslice, darn. This close. I got the list outputted, but it's just the last entry repeated n times
22:00  * foenix wonders where the code went wrong
22:01 < foenix> https://gist.github.com/octaflop/5016410
22:01 <@isaacbw> does anyone know of an imap email hosting service that doesn't have any un-deletable folders (aside from inbox)
22:02 < carpii> gmail no good?
22:02 <@isaacbw> gmail is undeletable folders x 10000
22:02 < carpii> ah :p
22:03 < tjfontaine> you're doing it wrong.
22:03 <@isaacbw> tjfontaine: I'm sorry?
22:04 < tjfontaine> isaacbw: I'm not sure you're using so many folders, why not just make sure the mda implementation of imap supports good search
22:04 <@isaacbw> tjfontaine: you have no idea why I'm asking about this ;)
22:05 < tjfontaine> isaacbw: basically I hear "10000 folders" and am convinced someone has missed the boat
22:06 < azylman> I think that was hyperbole
22:06 < azylman> As in, gmail has a lot of folders that it doesn't allow you to delete
22:06 <@isaacbw> azylman got it :P
22:06 <@isaacbw> gmail does a lot of things internally such that gmail's imap interface behaves in a very unorthodox way
22:06 < azylman> You could try outlook :p
22:06 < tjfontaine> that's because the paradigm doesn't match
22:06 <@isaacbw> azylman: that's not it
22:07 < azylman> ?
22:07 < foenix> doomslice, what do you think is wrong with https://gist.github.com/octaflop/5016410
22:07 < pachet> wedgeV: i think : is reserved for the uri authority prefix
22:08 < pachet> wedgeV: https://github.com/mcavage/node-restify/blob/master/lib/router.js#L123 is your issue
22:08 <@isaacbw> you guys always assume you know why someone is asking a question. Sometimes someone asks a question because they really want to know the answer to *that* question ;)
22:08 < pachet> wedgeV: i recomment using a regex in your case, they're not parsed very aggressively at all
22:08 < pachet> or, at all :[
22:08 < doomslice> foenix: i think it's because you're relying on block scope for the len variable, and possibly the blogLen variable
22:08 < azylman> isaacbw: was that directed at me? I'm very confused
22:09 < wedgeV> pachet: thanks
22:09 < pachet> @isaacbw: but what they want to know isnt what they *really* want to know
22:09 < pachet> ya know? ;]
22:09 < pachet> cause i dont :[
22:09 < azylman> isaacbw: you asked for an email service that doesn't have undeletable folders and I suggested trying outlook...
22:10 <@isaacbw> azylman: oh, did you mean the new outlook.com thing?
22:10 < doomslice> hard to explain -- but in javascript the var statements are "hoisted" to the top of the function, so in this example you're actually just setting the same len variable to 4 over and over
22:10 < azylman> isaacbw: yes
22:10 <@isaacbw> oohh, okay. Sorry. 
22:10 < foenix> doomslice, hmm. I'm going to try a couple more things before resorting to async. Have you used async? Any tips on which functions would fit this case?
22:11 < doomslice> yes, i use async
22:11 < azylman> foenix: parallel?
22:11 < niix> Can anyone point in the right direction on reseting my localhost/test mongodb?  I want to reset the db and clear it out
22:11 < MI6> joyent/libuv: Timothy J Fontaine master * bfe269b : test: add tap output  Given UV_TAP_OUTPUT being set, test result output s - http://git.io/huqqCw
22:12 < foenix> azylman, doomslice : ok. new branch created. Let's see what happens.
22:13 < doomslice> foenix: put getting the blog per id in its own function, that will help
22:13 < foenix> doomslice, thanks
22:13 < doomslice> i _would_ recommend figuring this out
22:13 < doomslice> with no async
22:13 < othiym23> chapel: you mean the Node.js agent for New Relic?
22:13 < chapel> othiym23: yeah
22:13 < othiym23> chapel: you tell me ;)
22:14 < othiym23> it's in npm
22:14 < chapel> yeah I will have to check it out
22:14 < chapel> don't have my own app to run it atm, but I will soon
22:14 < othiym23> I'm in the midst of doing some fairly dramatic / traumatic work on the transaction tracer to make it work better across async boundaries
22:14 < othiym23> grinding myself into the work surface, as it were
22:15 < othiym23> it's pretty stable, at the very least
22:15 < chapel> thats awesome
22:16 < othiym23> it's good for basic performance metrics, and is getting better about external HTTP requests
22:16 < foenix> doomslice, I want to separate a lot of these functions, but I don't know how to pass the variables without putting it in the callback function
22:16 < othiym23> the transaction tracer and the instrumentation are works in progress
22:16 < doomslice> i'm coming up with an example
22:16 < foenix> ty
22:19 < wedgeV> pachet: this seems to be a bug it says "// Strictly adhere to RFC3986" RFC3986 allows : as path segements though unless i'm missreading it
22:19 < wedgeV> pachet: http://www.ietf.org/rfc/rfc3986.txt page 22
22:19 < doomslice> foenix: http://pastebin.com/4muQfyE5
22:20 < foenix> ty
22:21 < doomslice> basically put that function at the bottom and call it inside of that loop
22:21 < doomslice> for(var i = 0; i < blogLen; i++) { getBlog(i, finalCallback); }
22:28 < foenix> doomslice, https://gist.github.com/octaflop/5016410
22:28 < foenix> It's working, almost
22:28 < carpii> is there a way to profile my node server without having to run in 'smartOS' or whatever that is
22:29 < asdf12> node --prof ?
22:29 < asdf12> APM?
22:30 < owen1> I built an HTTP end-point that return chunked responses. I want to call it in the browser. do i need a special http library in order to display the chunks as they come or is it the default behaviour of any xml http request?
22:30 < foenix> doomslice, actually, the loop is working. My issue is the final cb it looks like…
22:31 < carpii> asd, whats APM? seems hard to google for
22:31 < asdf12> application performance monitoring like new relic
22:31 < asdf12> i was just throwing out suggestions
22:32 < othiym23> carpii: depends on what you're trying to do
22:32 < othiym23> (full disclosure: I'm the developer writing the Node agent for New Relic)
22:32 < carpii> well im fairly new to node, and still got lots of work to do on ym server. But id like some process which will help me just benchmark any bottlenecks as im developing, rather than have a finished product with lots of problems
22:33 < samholmes> How do I use a local for a markdown?
22:33 < carpii> oh nice
22:33 < samholmes> in jade*
22:33 < othiym23> for sure, feel free to give New Relic a shot -- the agent is beta, and you can sign up for a 30-day free trial
22:33 < othiym23> it's not finished yet, and some of the higher-level features, like transaction traces, are pretty ropey, but it'll at least tell you which routes are slowest
22:34 < carpii> thanks, its something ill def consider once its ready for production
22:34 < owen1> carpii: https://github.com/oren/oren.github.com/blob/master/posts/benchmark.md
22:34 < othiym23> also be aware that for a bunch of reasons it doesn't really help a bunch with event servers (like socket.io servers)
22:34 < carpii> new relic doesnt, or profiling in general?
22:35 < othiym23> carpii: the agent is ready for production -- its problems are generally that the data it generates are incomplete, not that it'll crash (or even alter that much) the behavior of the app
22:35 < othiym23> New Relic
22:35 < carpii> ah
22:35 < othiym23> node --prof might help you more there
22:35 < samholmes> In Jade, how do I embed some markdown that is in a local?
22:35 < carpii> do you know of any tools to process node --prof output ?
22:35 < othiym23> and SmartOS + DTrace is probably the best solution for ad hoc profiling -- it's a pain in the ass to learn, but it gives you a ton of control
22:36 < asdf12> carpii: the tick processor, comes with node
22:36 < othiym23> carpii: take a look at node-webkit-agent
22:36 < doomslice> foenix: now it's because you're looping from 1 to blogLen
22:36 < carpii> in order to use SmartOS, id need to get an online account with joyent etc? 
22:36 < doomslice> so it is never reaching 0
22:36 < carpii> rather than tools i can run locally
22:36 < othiym23> carpii: that's not true, I've got a SmartOS VM running inside vmware that I use all the time
22:36 < nicholas_> carpii: no, it's open source. 
22:36 < asdf12> carpii: i also recommend memwatch + the v8 profiler (node --prof) + a simple lib to gather timing
22:36 < othiym23> and you can get it up and running with VirtualBox as well
22:37 < carpii> oh sweet, i read it was a hypervisor but didnt know you could run it in vmware
22:37 < doomslice> if you change it to id <= blogLen it will end
22:37 < nicholas_> carpii: but you can run node on linux if you prefer linux
22:37 < carpii> im running node on a vmware esxi server so that works nicely :)
22:37 < othiym23> carpii: new versions of vmware Fusion will even let you virtualize the hypervisor, so you can use SmartOS's KVM inside vmware
22:37 < othiym23> which is sorta gratuitous, but it works
22:37 < othiym23> nicholas_: sure, but you can't use DTrace on Node
22:37 < carpii> thx othiym23, looks useful too
22:37 < othiym23> at least not and have it work
22:38 < othiym23> no problem
22:38 < doomslice> i've used https://github.com/c4milo/node-webkit-agent with some success
22:38 < doomslice> for profiling
22:38 < carpii> yeh the screenshots look very useful
22:39 < othiym23> it would be super nice if somebody figured out how to join node-inspector and node-webkit-agent together
22:39 < doomslice> the only problem is that the resources the agent uses are included in the profile, so i have ended up tracking down a hot spot that turns out to be the actual profiler
22:39 < othiym23> there was a way to use the V8 profiler with node-inspector under 0.4, but unfortunately the module I used to do it bitrotted
22:39 < nicholas_> othiym23: that's true. Just depends how much work or bother you want to go through for DTrace
22:40 < carpii> dtrace is hard to setup, even if i get smartos running in a vmware server?
22:40 < othiym23> carpii: no, it's dirt simple, and is part of every SmartMachine image
22:40 < carpii> oh ok
22:41 < othiym23> the hard part is learning enough D to write the queries that give you the information you need
22:41 < carpii> so nicholas's comment just refers to the 'work and bother' of setting up smartOS?
22:41 < carpii> ahh
22:41 < othiym23> I bought the Dtrace book, which is incredibly useful, but it's like a thousand pages long and doesn't really have a crash-course section
22:41 < bnoordhuis> carpii: also, npm install profiler, then node --prof --log script.js and nprof v8.log
22:41 < nicholas_> carpii: kind of. Like work out how valuable DTrace is for you then decide how much work it is to get a grip on SmartOS
22:42 < nicholas_> if you can get running with linux tomorrow and you don't really need dtrace
22:42 < nicholas_> it would make sense to do that
22:42 < carpii> im pretty technical, so I imagine dtrace is worth learning before i deploy my server
22:42 < bnoordhuis> someone also put up a nprof-only npm module but i'm not sure what version it's at
22:42 < doomslice> what's the preferred way to deal with socket write errors or econnreset since 0.8.20? just trap them in a domain?
22:42 < carpii> since its getting integrated into a fairly high traffic site too
22:42 < bnoordhuis> doomslice: catch them in your 'error' event listener
22:42 < carpii> ok thanks for all the advice guys, ive plenty of stuff to look into :)
22:43 < doomslice> is there any additional cleanup that needs to be done on them after it errors?
22:43 < owen1> I built an HTTP end-point that return chunked responses. I want to call it in the browser. do i need a special http library in order to display the chunks as they come or is it the default behaviour of any xml http request?
22:43 < bnoordhuis> doomslice: yes, destroy() the socket (assuming we're talking net.Socket objects here)
22:44 < bnoordhuis> doomslice: if you're already using domains, letting domains handle the cleanup for you should Just Work(TM) though
22:44 < carpii> owen, display them where?
22:45 < owen1> carpii: in the browser. i want to build an html page with a button. u hit the button and i'll make http call to this endpoint.
22:46 -!- mode/#Node.js [+o isaacbw] by ChanServ
22:46 < owen1> carpii: i am curious if i'll see the chunks slowly as they came or i'll get all the output at once.
22:46 < owen1> carpii: i can test it but curious if anyone have an idea
22:46 < carpii> Well if youre sending an XMLHttp request, you wouldnt be seeing anything at all by default
22:46 < owen1> carpii: at least in my console.log
22:46 < owen1> carpii: i'll take care of manipulating the DOM later
22:47 < carpii> I believe the request would be buffered internally by the XMLHttp code, until the repsonse is fully recieved
22:47 < owen1> carpii: i am curious if i'll get multiple responses or just one, at the response.end()
22:47 < owen1> carpii: that sucks. are there any http library for the browser that will let me see chunks as they come?
22:48 < carpii> just for debugging purposes, or you mean even in production?
22:48 < owen1> carpii: in prod. the http call is running the tests for some project. i want to see the progress. not just the end result.
22:50 < owen1> carpii: that's why i use child_process.spawn and not child_process.exec
22:50 < carpii> im just looking at jQuery, and also MS's XMLHttp interface, but I dont see anywhere which would allow you to hook response chunks. They both seem to just fire an event when the response has been fully recieved
22:50 < MI6> joyent/node: isaacs master * 27d1bab : streams: Pre-emptively buffer readables up to the highWaterMark  Also, th - http://git.io/YEzV1A
22:51 < owen1> carpii: ): so node chunked response is not relevant in the browser world??
22:51 < owen1> that sucks 
22:52 < carpii> ok i think it is possible after all. The XMLHttp spec contains some stuff for progressive response
22:53 < CoverSlide> xhr2 has an onprogress event
22:53 < carpii> owen: http://ajaxian.com/archives/progressive-xmlhttprequest   but Im not sure I understand how hes integrating that handler
22:53 < carpii> maybe it would be better to write a simple passthru proxy server which logs the chunks
22:54 < owen1> CoverSlide: i'll take a look at that. thanks
22:54 < carpii> but the chunked thing is just part of HTTP 1.1, its not specific to node or anything
22:54 < carpii> browsers are doing it all the time under the hood
22:55 < owen1> carpii: but you said they buffer everything and only fire the data when the connection is closed.
22:58 < carpii> that was my understanding of the xmlhttp software, but according to that article it is possible to hook chunks
22:59 < carpii> http://www.kylescholz.com/blog/2010/01/progressive_xmlhttprequest_1.html
23:05 < doomslice> how does "npm update" and "npm install" differ?
23:06 < briefcaseofguts> not sure but i think update just dls, or maybe update installs into your app dir instead just downloading packages to the global folder
23:12 < foenix> what's the equivalent of urllib2 for node.js? I'm trying to get an ftp json resource
23:13 < gkatsev> foenix: request?
23:15 < foenix> gkatsev, thanks. I'll have a look.
23:15 < azylman> I don't think request supports ftp...
23:15 < azylman> Pretty sure it's only http/https
23:18 < foenix> azylman, yeah
23:18 < foenix> just figured that one out :p
23:19 < robertjd_> is there anyone here who is running their own npm registry?
23:19 < foenix> gkatsev, azylman got it: https://github.com/mscdex/node-ftp
23:27 < gluxon> Hm.. I'm having a small issue. When I use "this" inside zlib.unzip in a function prototype, it refers to the wrong "this".
23:27 < foenix> how do I stream to a variable?
23:27 < gluxon> It refers to the "this" of zlib instead of the function prototype.
23:27 < gluxon> What is a good solution for this?
23:28 < ManneW> gluxon: Perhaps define your own variable "me" or "that" that points to the right "this" and then use that instead. Would that do it in this case?
23:28 < gluxon> ManneW: I used "self", but I feel like there is a better way, no?
23:29 < asdf12> gluxon: zlib.unzip.call(this)
23:29 < gluxon> ManneW: Is there another variable I can refer to? Like, the name of the class?
23:29 < gluxon> Sorry, the function prototype.
23:31 < gluxon> asdf12: I don't think I can do that. This is inside a "on data" event handler.
23:33 < asdf12> well
23:33 < ManneW> Are you using zlib.Unzip (which is the class) or the convenience method zlib.unzip(but, callback)?
23:33 < tiglionabbit> is there an example of how to use the http module in the documentation?
23:33 < asdf12> var fn = (function(data) { ... }).bind(this); zlib.on('data', fn);
23:34 < tiglionabbit> oh there's one on the front page...
23:35 < tiglionabbit> http://nodejs.org/api/http.html#http_http_createserver_requestlistener  this does not explain what the call signature of the function argument is
23:35 < asdf12> zlib.on('data', function(ctx) { // your this is ctx }(this))
23:35 < asdf12> err that should return your actual func
23:35 < Pavi> Hi Is anybody aware of this error "ot error: 715957744:error:10067066:elliptic curve routines:ec_GFp_simple_oct2point:invalid encoding:../deps/openssl/openssl/crypto/ec/ecp_smpl.c:939"
23:35 < asdf12> zlib.on('data', function(ctx) { return function() { // ctx  } }(this))
23:35 < Pavi> I am using the nodejs Openssl library
23:36 < gluxon> ManneW: Class.
23:36 < Pavi> followed by this error
23:36 < Pavi> SSL routines:SSL3_GET_KEY_EXCHANGE:bad ecpoint:../deps/openssl/openssl/ssl/s3_clnt.c:1566: 
23:37 < Pavi> Hi TooTallNate nobody responded back on the node forum
23:37 < Pavi> so thought if someone know what this issue is
23:37 < gluxon> ManneW: The problem is creating another instance inside an existing one, so the value of "this" changed in the context.
23:37 < asdf12> gluxon: whats wrong with my examples
23:38 < carpii> what methods are people using to handle potentially invalid data being sent from the client, in a two way protocol? Are you throwing an exception and closing the connection, or not responding to the packet etc?
23:39 < fusiongrokker> what's the favorite couchdb wrapper? seems like there are a lot to choose from...
23:41 < gluxon> asdf12: 1. How would I do that for stream? 2. Is that not dangerous inside the zlib prototype?
23:42 < asdf12> gluxon: you call the zlib function with the right this or you pass in as an arg
23:42 < asdf12> typically you don't want to do the first ;)
23:44 < foenix> I have a link that won't open with ftp-get, but will open with the browser: 	if (error) {
23:44 < foenix> 		console.error(error);
23:44 < foenix> 	} else {
23:44 < foenix> 		console.log('File downloaded at: ' + result);
23:44 < foenix> 	}
23:44 < foenix> });
23:44 < foenix> sorry! wrong paste!
23:44 < asdf12> gluxon: but i mean if you're already making your own zlib prototype function... then whos the say
23:44 < foenix> ftp://webftp.vancouver.ca/opendata/json/weekendplayfieldstatus.json
23:44 < AAA_awright> Argh why does Node.js have to check in the ENTIRE STUPID V8 TREE INTO GIT
23:44 < gluxon> asdf12: I think I didn't explain myself clearly. I'm not making my own zlib prototype function.
23:44 < AAA_awright> You can't do anything
23:45 < gluxon> I'm creating a stream event handler.
23:45 < asdf12> gluxon them my examples are fine
23:45 < asdf12> should work
23:47 < jtomasrl> i need to load JSON data to a smartphone app, that data is changed like once a day maybe, i want to store it inside the app to reduce server requests to my node app, what would be the best way to refresh that data on sever changes?
23:47 < ericelliott> of course nconf doesn't throw if you feed it a bogus filename.
23:50 < JeffWillden> jthomasrl, wouldn't you have it check the server daily, or is it more important for clients to have updates immediately?
23:51 < JeffWillden> iOS has notifications you can trigger from the server
23:51 < JeffWillden> Android too
23:51 < carpii> jtomasrl: is the JSON retrieved via normal a http request to node?
23:51 < carpii> via a normal
23:51 < ericelliott> I have nconf.file('./config.json').env().argv(); where config.json is in the same dir as config.js ('./config/' relative to my project root), but my settings from config.json are coming back 'undefined' when I call config.get('SOME_SETTING)
23:52 < jtomasrl> JeffWillden: immediately updates are important
23:52 < jtomasrl> carpii: via GET requests
23:52 < ericelliott> since you can pass anything to nconf.file() and it won't throw, I can't even tell if the file is loading without stepping into it.
23:52 < ericelliott> =P
23:53 < carpii> ok, why not take advantage of HTTP caching?   Emit a 'Last-Modified' header from node, which the client cache will record. Then next time it wants the JSON, it will pass an 'If-Modified-Since' header to node, which you can then check if its within 24 hours, and if it is, just reply with an HTTP "Not Modfiied". The client will then use its cached version, saving traffic
23:54 < jtomasrl> sounds legit
23:55 < carpii> this means if you do need to refresh the JSON for all clients urgently, you can force it easily by ignoring 'If-Modified' server side. 
23:55 < jtomasrl> carpii: got it, thanks
23:58 < AAA_awright> carpii: Uh, what? If it's not modified then why not emit Not Modified?
23:59 < carpii> on the server do you mean?
23:59 < AAA_awright> I believe that's a MUST NOT in RFC 2616
23:59 < AAA_awright> Yeah
23:59 < carpii> what do you mean, its an HTTP 304 
23:59 < foenix> does anyone know how to open an ftp url anonymously like a browser? If I open this with node, it will return an error — I think anonymous users are blocked, but there are no block on chrome: ftp://webftp.vancouver.ca/opendata/json/weekendplayfieldstatus.json
23:59 < carpii> which bit is a MUST NOT?
--- Log closed Sat Feb 23 00:00:00 2013
