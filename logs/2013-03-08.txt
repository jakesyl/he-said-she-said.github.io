--- Log opened Fri Mar 08 00:00:36 2013
00:03 < context> sendoushi: the less i have to touch my mouse the better. mouse slows you down
00:03 < faceleg> mscdex: is node --debug an alternative to gdb, or are they entirel ydiffernt?
00:03 < faceleg> context: 1000 times this
00:03 < faceleg> basically the terminal is like hotkeys in starcraft
00:03 < faceleg> without it, forever noob.
00:03 < OTBS4Life> That's why you need a nipple mouse... so your hands never leave the keyboard.
00:04 < context> nipple mouse is the slowest mouse there is
00:04 < OTBS4Life> Not true!
00:04 < faceleg> don't think my co-workers want to watch me fondle myself all day
00:04 < context> for me anyway. ill stick to trackpads for when i do have to use my mouse
00:04 < euoia> some people claim to be pretty quick with them
00:04 < faceleg> some people claim to like windows
00:04 < context> euoia: i want to see this! it either takes me forever to get somewhere, or im constantly going to far when i have to use one
00:06 < OTBS4Life> Nexxy informs me that calling it a "nipple mouse" isn't appropriate, and I should use the real name, "trackpoint".
00:06 < OTBS4Life> But yes, I'm quick with a TrackPoint, and also like Windows 7 (for some purposes anyway)
00:06 < spion> one thing that I like about windows is the font rendering
00:06 <@Nexxy> I was moreso hoping to avoid inappropriate conversation :P
00:06 <@Nexxy> but yes, they are trackpoints
00:06 <@Nexxy> lol
00:07 < spion> http://www.youtube.com/watch?v=bLpROhIg9eA
00:08 < spion> probably slightly nsfw
00:08 < spion> :D
00:08 < OTBS4Life> I've discovered Valhalla of Coding.
00:08 < mscdex> faceleg: --debug just enables the v8 debugger
00:09 < spion> OTBS4Life, share
00:09 < OTBS4Life> I'm sitting now at the top of the Hancock building in Chicago... awesome view.
00:09 < OTBS4Life> Very fast WiFi
00:09 < OTBS4Life> Not busy during the week, so I'm not a jerk for sitting here.
00:09 < OTBS4Life> I got some discount online for a pass to come up here as much as I want for a year for $20.
00:10 < OTBS4Life> http://tripgalleries.wordpress.com/2009/04/21/hancock-observatory-a-birds-eye-view-of-chicago/
00:10 < OTBS4Life> This beats my roof any day.
00:10 < OTBS4Life> Plus... my roof is cold right now.
00:11 < spion> is it *the* observatory or some kind of a coffeeshop / bar nearby?
00:11 < OTBS4Life> It's the observatory, and there's a coffee shop in it.
00:12 < spion> awesome
00:13 < OTBS4Life> If any of you find yourselves in Chicago, let me know.  The pass is good for me +1.
00:13 < OTBS4Life> I think the wife is on her way over now.
00:13 < azylman_> Nice, that's pretty awesome
00:21 < faceleg> mscdex: is --debug useful for debugging C++ segfaults, malloc etc, or shall I stick with gdb
00:23 < draginx> http://zef.me/4561/node-js-and-the-case-of-the-blocked-event-loop is there anyway to *not* have JSON.parse blocking like in this example?
00:34 < korilo> draginx, try with this-> https://github.com/dominictarr/JSONStream
00:34 < draginx> korilo: i literally just opened that page rightbefore :) cheers
00:38 < korilo> draginx, ;)
00:46 < DTrejo> TooTallNate: http://jsperf.com/rgb-to-ycbcr-integer-math-vs-floating-point-math hmmm
00:48 < MI6> joyent/node: Bert Belder msi-fixes * 77218d6 : win/msi: enable modify and repair (+13 more commits) - http://git.io/-LPTTA
01:02 < korilo> does anyway know how to add express js autocomplete to sublime text 2?
01:03 < mscdex> faceleg: --debug is strictly for v8, so you'll need gdb for debugging
01:03 < mscdex> s/debugging/debugging c++/
01:04 < gynna> http://www.reddit.com/r/AdultDating18/comments/19u89j/italian_amateurs/
01:07 < korilo> i'm italian
01:10 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:19 <@Nexxy> I'm a little teapot
01:22 < mscdex> Nexxy: HTTP/1.1 418
01:22 <@Nexxy> mscdex, :3
01:26 < substack> isaacs: I implemented your es6 module proposal https://github.com/substack/mmmify
01:26 < othiym23> don't piss off makeCallback, or else you get an endless stream of call stacks of depth 0
01:29 <@isaacs> substack: can you export multiple things?
01:29 <@isaacs> substack: or no?
01:30 < substack> isaacs: it's not yet a syntax error to do so but only the last one will show up
01:30 <@isaacs> substack: oh, i see, just desugars to module.exports=x
01:30 < substack> since it just desugars to `module.exports=`
01:30 < substack> yep
01:31 <@isaacs> substack: fwiw, in a serious negotiation, i would probably yield "single exports only"
01:31 < MI6> joyent/libuv: isaacs master * b68ee40 : win: Map ERROR_INVALID_FUNCTION to EISDIR  This error is raised when call - http://git.io/OsYE9A
01:33 < substack> isaacs: it's just vastly simpler if you only do single-export
01:34 < substack> crap index.js was missing
01:34 < substack> https://github.com/substack/mmmify/blob/master/index.js
01:34  * azylman_ sings "Where have all the indices gone..."
01:34 < substack> so minimal
01:43 <@Nexxy> substack++
01:43 < substack> take THAT, es6
01:43 < substack> everybody should roll their own es6 modules proposal
01:43 <@Nexxy> I imagine you replicating yourself and having your own tc39 meetings
01:43 < substack> https://github.com/substack/mmmify/blob/master/index.js
01:43 < substack> it's like so crazy easy now
01:44 < substack> since I hacked esprima to support custom keywords
01:44 < substack> new in falafel 0.2.0 :D
01:44 < substack> I don't even care about landing those commits upstream, esprima is such a mess to contribute to
01:45 <@Nexxy> I noticed
01:45 <@Nexxy> (the falafel)
01:50 < pooya> a node.js hanging with 100% and not responding to debug request (although calling SIGUSR1 on it printed out the messages and started listening on 5858)
01:50 < pooya> i attached gdb to it and the only thing i see is here: #0  0x0000000000776ecc in v8::internal::IncrementalMarkingMarkingVisitor::VisitPointers(v8::internal::Object**, v8::internal::Object**) ()
02:00 < tgriff3> hey everyone, is there a well-accepted design pattern for dealing with "Error: EMFILE, too many open files"? I've just started keeping track of how many I have open to avoid it, but was wondering if there are any best practices
02:01 < azylman_> What do you have so many files open in the first place?
02:01 < azylman_> why^
02:01 < tgriff3> rewriting a bunch of css and js for my cdn
02:01 < tgriff3> adjusting locations of static assets
02:02 < azylman_> So is it because you're doing a bunch of stuff at once, or you're keeping files open for a long time?
02:02 < tgriff3> the real problem is I fingerprint all my assets, so every static asset gets opened
02:02 < tgriff3> a bunch of stuff at once
02:02 < azylman_> Then you should probably be running it in batches and stuff instead
02:03 < tgriff3> there's no need really, so long as I keep track of how many are open at once and don't go over ~200 there's no problem
02:04 < tgriff3> it's just when you loop over doing a bunch of fs.readFile's it jumps up to like 300 open files in half a second
02:04 < azylman_> Yeah, so that's what I mean by doing it in batches
02:05 < tgriff3> yeah I've just been queuing them up, not quite batches but same idea
02:05 < azylman_> Using something like async.queue
02:05 < azylman_> Nod
02:05 < azylman_> YEah
02:07 < tgriff3> this is what I've been using: https://github.com/treygriffith/filequeue . Feedback appreciated
02:21 < MI6> joyent/node: isaacs master * 4b47bb4 : uv: Upgrade to b68ee40 - http://git.io/_5MiVg
02:37 < Rocky_> does anybody know wha't going on with http://www.nodemanual.org/
02:37 < Rocky_> its been down 4 yonks 
02:49 < mscdex> isaacs: any love for mac address support in os.networkInterfaces() for 0.10?
03:09 < abraxas> 0.10 is coming out on monday, right?
03:11 < havvy> abraxas: Yep
03:15 < zenodub> when's 1.0 coming out?
03:15 < zenodub> ;]
03:21 < thecodethinker> has anyone here got cloud9 server running on ubuntu?
03:23 < sitapati> thecodethinker: i've had it working
03:24 < sitapati> anyone familiar with streams and pipe?
03:25 < thecodethinker> sitapati: how? It keeps telling me it can't find connect-architect
03:26 < sitapati> you did the sm clone installation method?
03:26 < thecodethinker> sitapati: the git clone
03:27 < thecodethinker> also where is npm installed?
03:28 < sitapati> thecodethinker: what version of node?
03:28 < thecodethinker> sitapati: 8.12
03:29 < thecodethinker> sitapati: 8.21
03:29 < sitapati> thecodethinker: run "which npm"
03:29 < sitapati> to find out where it is
03:29 < thecodethinker> got it. thanks for that.
03:30 < sitapati> on my system it's /usr/bin/npm
03:30 < thecodethinker> same here :)
03:30 < thecodethinker> but this error -_-
03:30 < sitapati> try: git pull; sm install; sm update
03:30 < sitapati> in your cloud9 directory
03:31 < thecodethinker> i did :'(
03:31 < sitapati> what error do you get?
03:31 < thecodethinker> trying it again
03:31 < thecodethinker> but i don't think i got an error
03:32 < sitapati> i don't mean for that
03:32 < sitapati> what command do you run, and what error do you get?
03:32 < sitapati> something to do with connect-architect?
03:32 < thecodethinker> sm install yelled at me
03:33 < thecodethinker> ld returned 1 exit status
03:33 < thecodethinker> can't find build/release 03.node
03:34 < sitapati> i would delete the directory
03:34 < sitapati> then do sm clone
03:35 < thecodethinker> k
03:35 < sitapati> that sometimes works for me when the installer gets itself into a twist
03:36 < sitapati> no-one in the channel got any love for streams?
03:38 < thecodethinker> now it all set up right but when I run bin/cloud9.sh it says can't fin module "
03:38 < thecodethinker> ace/package.json"
03:38 < thecodethinker> npm install ace i guess?
03:39 < thecodethinker> :D it worked
03:39 < thecodethinker> ur amazing :D
03:40 < sitapati> getting cloud 9 to work (and stay working) is a bit of a black art
03:40 < thecodethinker> does it take a while to load on fist run?
03:40 < thecodethinker> cloud9 is the best js ide i've found so... i'll live with it
03:41 < faceleg> sublime text 2!
03:41 < thecodethinker> the workspace doesn't seem to want to load
03:41 < thecodethinker> faceleg: it never autocompletes for me. and it's not free
03:41 < faceleg> two valid points
03:41 < faceleg> does c9 save locally?
03:42 < thecodethinker> faceleg: if you download the server stuff from github
03:42 < faceleg> I do love ace actually
03:42 < faceleg> does it have multi pane support
03:42 < faceleg> I guess I could just go have a look but
03:42 < thecodethinker> then it just runs a nodejs webserver from your computer. just localhost into it and BAM all set... until i try it :'(
03:42 < thecodethinker> I am BRAND new to nodejs. I just heard about it today :D I use cloud 9 to teach myself some webgl
03:43 < sitapati> faceleg: multipane?
03:43 < thecodethinker> sitapati: why won't the workspace load?
03:43 < sitapati> thecodethinker: steps to reproduce + actual result
03:43 < sitapati> example:
03:43 < sitapati> i start cloud 9
03:44 < sitapati> it says it is running
03:44 < sitapati> i open localhost:3131 in my web browser
03:44 < thecodethinker> ^ preparing workspace
03:44 < thecodethinker> then nothing
03:44 < sitapati> i see a message saying "Cannot connect to host"
03:44 < thecodethinker> just stays on that screen
03:44 < faceleg> I tihnk if I switch to anything it's going to be vim
03:44 < sitapati> check the terminal
03:44 < thecodethinker> nothing
03:44 < sitapati> any output at the command line
03:44 < thecodethinker> path.exists is now called fs.exists
03:44 < sitapati> what is the last visible line of output on the terminal
03:44 < thecodethinker> then nothing
03:44 < sitapati> ok, hit refresh in your browswer
03:44 < thecodethinker> faceleg: EMACS :D
03:45 < thecodethinker> sitapati: i tried that :(
03:45 < thecodethinker> sitapati: those dots are moving
03:45 < thecodethinker> sitapati: after refreshing twice i got this
03:45 < thecodethinker> Error 'SyntaxError: Unexpected end of input' reading session: op0I9ZNCgiUXrYbgb3lAKy8I.ZO3O8qf7ZTZG+d9qrplLqVBZBqbL7ssnxxDqVVZAtU8 <Buffer >
03:47 < sitapati> yeah, you get that
03:47 < sitapati> i don't know why
03:47 < sitapati> there are a few errors that it throws
03:47 < thecodethinker> that's to be expected i guess
03:48 < thecodethinker> I am going to try a fresh clone
03:48 < sitapati> try starting it like this
03:48 < sitapati> bin/cloud9.sh -w <some working directory>
03:48 < sitapati> where you put a working directory in as an argument
03:50 < thecodethinker> still just sitting at that loading screen
03:50 < thecodethinker> after the -w thing and fresh clone
03:52 < thecodethinker> is there a cloud9 irc?
03:52 < thecodethinker> this is bothering me -_-
03:53 -!- mode/#Node.js [+o TooTallNate] by ChanServ
03:53 < sitapati> #cloud9ide
03:53 < thecodethinker> thanks
03:54 < thecodethinker> they don't talk much there huh?
03:56 < thecodethinker> sitapati: what do you make of this ?
03:57 < thecodethinker> copy.source.commonjs is deprecated, pass { project:... includes:...} directly as a source
03:57 < thecodethinker> @@@@ FATAL ERROR: DRYICE FAILED { '0': 'Failed to find module: ace/lib/fixoldbrowsers' }
03:57 < thecodethinker> make: *** [plugins-client/lib.ace/www/worker/worker-language.js] Error 1
03:58 < sitapati> thecodethinker: i think if you want to learn node.js, you are better off starting with a different editor ;-)
03:58 < thecodethinker> sitapati: -_- 
03:58 < thecodethinker> I can code in javascript. I use this editor because it's my favorite
03:59 < sitapati> why not just use c9.io
03:59 < sitapati> ?
03:59 < thecodethinker> It would just be nice to not be internet dependent
03:59 < thecodethinker> I travel a lot
03:59 < sitapati> right
03:59 < sitapati> in that case, look through the ajaxorg issue tracker
03:59 < sitapati> for example:
03:59 < sitapati> https://github.com/ajaxorg/ace/issues/634
04:01 < thecodethinker> i know the github issue tracker -_- and that bug seems to have been fixed :'(
04:07 <@Nexxy> so who's going to the 0.10 release party?
04:07 < havvy> There's a 0.10 release party?
04:08 <@Nexxy> oh yes
04:09 < lz> heeey everyone 0.10 release party at Nexxy's house!
04:10 <@Nexxy> I have no bar
04:10 < havvy> I don't drink anyways.
04:10 <@Nexxy> not even around colleagues?
04:11 < havvy> Well, I'm not actually 21 yet. But even then, I don't enjoy the taste of alcohol.
04:11 < havvy> Or the buzz.
04:11 <@Nexxy> oh.
04:11 < echo> My bank account wishes I had that problem.
04:18 < samholmes> Using Express, I've been throwing all errors with next(err) and on the development build I see the stack trace. However, on the production build I just see "Internal Server Error". What could I do to report, or log, these errors more effectively?
04:18 < samholmes> Is there a special "Error" route I can do in express?
04:19 < havvy> samholmes: I believe that the recommended solution is to have a final middleware for catching errors.
04:19 < samholmes> havvy: How is this done?
04:19 < havvy> app.use(function (err) { ... });  as the final middleware?
04:20 < havvy> Or maybe it is req, res, err
04:20 < ningu> it's req, res, next. express must set one of the req or res properties when you do next(err).
04:20 < ningu> I can't remember right now how it does it.
04:23 < ningu> I see. define middleware with four parameters -- app.use(function (err, req, res, next) { ... });
04:27 < hueniverse> Any domain experts? What's wrong with this code: https://gist.github.com/hueniverse/5114176 ?
04:31 < LuckyBurger> Q: I have a script that does a bunch of DB events. And after they are complete I want the process to end. How would I model that... ?
04:32 < ningu> LuckyBurger: it should happen automatically after the last callback. if not you can always do process.exit()
04:32 < ningu> or maybe if you explicitly close the db connection
04:32 < LuckyBurger> yeah it does not for some reason
04:32 < LuckyBurger> ahh
04:32 < LuckyBurger> hmm im using mongojs
04:36 < ningu> it's probably the db connection
04:39 < LuckyBurger> yeah it is
04:39 < LuckyBurger> i need to call db.close()
04:39 < LuckyBurger> but im not sure where since the scripts are in a variable loop
04:42 < ningu> you don't trigger a callback when all things are completed?
04:42 < ningu> see caolan's async, that might help
04:43 < LuckyBurger> ah
04:43 < LuckyBurger> interesting
05:16 < chromecide> hi all
05:17 < chromecide> wondering if someone could point me in the right direction.  I've tried searching, but not really sure what terms i should be searching for.  What i'm trying to achieve is a script that can launch other scripts and then close, leaving the other processes running.
05:19 < davidbanham> chromecide: Sounds like you want child process with the detached flag
05:19 < davidbanham> http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options
05:20 < chromecide> yes davidbanham , that is exactly what i was looking for.  thanks heaps
05:20 < davidbanham> chromecide: No probs.
05:27 < ohnoesitsraphy> Hey guys, any recommendations on setting up a VPS for only NodeJS? Just install Node and Mongo?
05:27 < ohnoesitsraphy> any other recommended settings, etc?
06:14 < sitapati> anyone know why I can't chain three streams together like this?
06:14 < sitapati> https://gist.github.com/jwulf/d414edfb4ff7e4a96857
06:44 < supersym> ohnoesitsraphy: i have it running with varnish on the front as reverse proxy
06:44 < supersym> it passes websockets right on, but static assets get hosted from nginx/cache
06:45 < supersym> and node http-proxy to decide which path to which port if you want to do something there, but varnish can do that too
06:46 < supersym> so all node.js sites are approached through port 80 which is cool
07:27 < juliangruber> wolfeidau: hey there
07:31 < nicholasf2> juliangruber: he's in #polyhack (australian func programming channel) if you want to try him there
07:35 < korilo> sitapati maybe -> stream1.pipe(stream2.pipe(stream3).pipe(process.stdout);
07:41 < juliangruber> nicholasf2: he should show up here, but thanks
07:45 < hueniverse> Any domains experts around?
07:55 < rvagg> bnoordhuis: are you a domains user? hueniverse is looking for a domains expert
07:57 < DTrejo> domain xpert in what? ;0
08:03 < anildigital_work> What is wrong with this gist https://gist.github.com/anildigital/609075722aa788a42ae9 ... why is event emitter not working?
08:05 < hueniverse> node domains: http://nodejs.org/api/domain.html
08:05 < hueniverse> I can't get this to work: https://gist.github.com/hueniverse/5114900
08:05 < hueniverse> and it looks pretty straight forward...
08:11 < hueniverse> @anildigital_work - looking...
08:13 < hueniverse> anildigital_work: see comment on your gits
08:13 < armetiz_> hi there. I'm trying Yahoo Mojito, and I have some troubles. Do you know if there is an IRC channel about this topic ?
08:35 < juliangruber> hueniverse: the code outputting handled by domain2 is correct
08:35 < juliangruber> hueniverse: what should it output? handled by domain1?
08:37 < juliangruber> hueniverse: in line 13 handler is executed which throws an error -> it continues inside domain1.on('error' where it calles `callback` which is a function that throws "handled by domain2"
08:38 < hueniverse> juliangruber: if it was working as expected, it would output 'success!' without throwing anything
08:39 < mac_nibblet> Random question, what would be the best way of storing two bytes in a single column in a database ?
08:39 < mac_nibblet> new Buffer([0x01, 0x02]).toString('hex') ?
08:40 < juliangruber> ah
08:40 < juliangruber> hueniverse: I think you have to add callback to the domain
08:40 < juliangruber> you see, domains don't do anything magic, they're just plain js
08:40 < hueniverse> juliangruber: well, if you throw, and there is an active domain, it should catch it
08:41 < hueniverse> juliangruber: the domain module listens on uncaught exceptions
08:41 < hueniverse> juliangruber: and if there it an active domain, emits to it
08:41 < hueniverse> juliangruber: if you add "console.log(process.domain);" right before the second throw, you can see a valid active domain that's not disposed
08:42 < juliangruber> ok I understand...the stacktrace also says that it's inside a domain
08:46 < juliangruber> before the "throw new Error" process.domain is null
08:48 < hueniverse> juliangruber: really? not for me. its printing a valid domain
08:48 < hueniverse> I can even do process.domain.emit('error', new Error()); and it prints 'success'
08:49 < [AD]Turbo> hi there
08:50 < juliangruber> hueniverse: ok this is weird: if you run it with "node debug" and type "cont" is prints success
08:51 < juliangruber> I'll update my node...]
08:52 < juliangruber> that definitely is a bug in node
08:52 < juliangruber> can confirm on 0.8.22
08:52 < juliangruber> hueniverse: I'll create an issue
08:52 < korilo> will npm be updated to 1.2.12 on Monday too?
08:53 < hueniverse> juliangruber: already did
08:53 < juliangruber> just saw that
08:53 < hueniverse> also updated my gist to show that the active domain is live and kicking
08:56 < hueniverse> juliangruber: thanks for your help. bedtime.
08:56 < juliangruber> have you tried running it with node debug?
08:57 < juliangruber> you're welcome
08:57 < hueniverse> juliangruber: not yet. spent the whole day getting to this tiny code from 1000+ lines that were doing crazy things :-)
08:57 < juliangruber> I hear you
09:22 < nodweber> hello ppl, I got a question. :)  I use express(and mvc like pattern) and I wonder where is good way to validate user input: In controller or in model or helper.. if helper from where to use from model or controller
09:30 < korilo> IMO input validation is done client-side or in model
09:31 < korilo> (with an helper too yes)
09:31 < korilo> s/or in model/and in model
09:33 < anildigital_work> hueniverse: Why do you need process.nextTick and util? Can't it be dones without 
09:35 < marcules> Hi there ^^
09:39 < marcules> I've got a problem with password - when the login is successfull, I'm getting a POST /login 404 --> any ideas? my app.js: http://pastebin.com/Duq7FQkg and the user-scheme: http://pastebin.com/jRFFk4SY
09:40 < marcules> *passport
09:41 < korilo> (you don't need Schema = mongoose.Schema in app.js)
09:41 < korilo> just in the user model
09:41 < sheldonh> korilo: if you're not sure where to put validation, consider putting it in a seprate object, (e.g. MonkeyValidation for the Monkey model) so that it's easy to change your mind about whether it belongs later (e.g. by simply moving the vall to new MonkeyValidation(properties).is_valid somewhere else)
09:42 < korilo> sheldonh, i'msure where to put validation :)
09:42 < korilo> i was replying to nodweber 
09:42 < sheldonh> scrollback fail. sorry :)
09:42 < korilo> and yes that's a good idea about where to put validation :)
09:43 < nodweber> kirilo: I was thinking about middleware..
09:43 < marcules> hmm
09:43 < korilo> middleware for valudation?
09:43 < korilo> i usually use middleware to play with request *rawly*
09:43 < nodweber> yes, before it comes to controller input is validated.. and controller will know.. 
09:43 < korilo> mmm
09:44 < korilo> but you have to parse the request in the middleware
09:44 < korilo> and get input data
09:44 < korilo> mmm
09:44 < korilo> yes could be
09:44 < nodweber> korilo: express does it for me
09:44 < korilo> iknow
09:45 < korilo> i think is better to put validation in model or a validation object btw
09:45 < korilo> if you want to play with middleware then go forit tough
09:45 < nodweber> korilo: okey :)) will test Passport too.. :)) 
09:46 < marcules> korilo, any ideas how I could debug this? I'm fairly new to debugging on server side
09:48 < korilo> i think is a passportjs issue maybe (soz i don't use it btw) i'm looking at your paste
09:48 < marcules> I'm not sure how to implement user authentification else
09:49 < korilo> passport is really ok :) i just don't use it, trying to browse passportjs.org but is not responding -_-
09:50 < damarusama> hey there, I loved codeschool introduction class on node.js any other recomendation on online classes ?
10:03 < marcules> https://github.com/trutty/SWE-ePass @korilo if you still have time :)
10:03 < sheldonh> i'm playing around with node.js. i have a little script that i would like to terminate when there is input on stdin or when stdin is EOF. is there a more elegant way to do it than this? (coffescript source) http://fpaste.org/9RtQ/
10:03 < marcules> argh - mergeconflict
10:05 < korilo> marcules, yes just configuring a test passport app on my local ll
10:05 < korilo> lol
10:05 < marcules> :D
10:05 < sheldonh> (the io function argument was not needed)  http://fpaste.org/vuyQ/
10:06 < shmoon> in my server.js i define app.locals.methodname = function() {} i want to access this methodname in another file that contains my route, how do i do it ?
10:07 < korilo> marcules, why in your deserialize function you call done(null, null)at the end?
10:07 < marcules> In case it is not found, I guess - but in this case there should be err send, right?
10:07 < korilo> of course
10:07 < marcules> Then I'll remove it
10:08 < korilo> done(err, user); i think
10:08 < korilo> you should clean up the app.js file btw :D
10:08 < marcules> :D
10:08 < marcules> You mean like - exporting it into seperate files and then calling the modules.export?
10:09 < korilo> yes
10:09 < korilo> routes.js (controllers.js),config.js etc etc
10:10 < marcules> and then calling this with require?
10:10 < marcules> Like I did with the User itself?
10:10 < korilo> yup, just define your stuff, call module.export and require them
10:10 < marcules> k
10:10 < marcules> I'll do that
10:10 < korilo> i made a gist for config yesterday wait
10:11 < korilo> https://gist.github.com/amurdaca/5111540
10:11 < korilo> (the first module.export should be removed)
10:11 < sheldonh> mocha is very cool for testing async stuff
10:13 < korilo> marcules what's that stuff inside <<<<<< HEAD?
10:13 < marcules> mergeconflict
10:13 < marcules> I've fixed that already
10:14 < marcules> The git-software did crash on sync ^^
10:14 < korilo> you don't have that part anymore right?
10:14 < souri> Hi, I'm trying to make a choice between cheerio and xpath to scrape information from websites (eg. amazon), can someone help?
10:14 < marcules> konobi, right
10:14 < marcules> korilo, 
10:14 < marcules> ^^
10:16 < marcules> korilo, but it is already fixed on github - another clone should work
10:16 < korilo> gotcha mmm
10:17 < bradleymeck> souri: i would just go full on and use WebDriver if it is not a realtime repsonse cycle
10:18 < souri> bradleymeck: thanks for the reply. some of the websites under consideration uses lazy loading, will it work?
10:19 < bradleymeck> souri: WebDriver runs a real browser so yes
10:20 < souri> bradleymeck: that sounds nice! i'll check this out! thanks a ton
10:21 < souri> bradleymeck: btw, i'm new to webdriver so could you please point out any reason to choose webdriver over cheerio or xpath?
10:22 < bradleymeck> souri: its a real browser, you can choose fancy new firefox, chrome, IE, w/e to run it on
10:22 < bradleymeck> it will survive as long as those browsers survive, but it will be slower
10:24 < souri> bradleymeck: I get your point, I'll see how much more time WebDriver takes compared to CheerIO, I'll need a fast implementation since the user base will be fairly large, and I'm expecting at-least 5-10 queries per second
10:28 < korilo> marcules, damn passportjs lol
10:30 < marcules> korilo, I'm just not seeing what the issue with my code is - I think I've written it as intended, but somehow there has to be an error
10:38 < freeall> Hey guys. Does anyone know a good module for creating UI apps? Preferably it's super thin and only uses a webview so that I can create the actual design in html
10:39 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
10:39 < jonaslundWORK> is there any non-us, non-eu person here ?
10:40 < aandy_> asian? that's racist
10:41 < aandy_> just come out and say it, man
10:41 < marcules> I think he seeks for a swiss guy :p
10:41 < sheldonh> i'm african. does that count?
10:41 < marcules> -for
10:41 < jonaslundWORK> aandy_: ofcourse, where in africa ?
10:41 < freeall> How about a Norwegian
10:41 < freeall> They count?
10:41 < jonaslundWORK> freeall: no :)
10:41 < sheldonh> south africa. it's at the bottom.
10:41 < aandy_> norway isn't part of eu. they're part of europe though
10:41 < jonaslundWORK> sheldonh: ah, what kinda salary levels do you have there?
10:42 < SomeoneWeird> jonaslundWORK, lots why
10:42 < jonaslundWORK> curious about salary levels
10:43 < jonaslundWORK> sheldonh: and how's the net situation? i heard from another southafrican guy that it was horrendeously expensive
10:43 < aandy_> freeall: what do you mean by ui apps? "mobile web thingies"? how about something like bootstrap with backend of backbones or something?
10:43 < aandy_> or the minimal version of bootstrap.. skeleton 
10:44 < aandy_> http://www.getskeleton.com/
10:44 < sheldonh> jonaslundWORK: international connectivity is horrendous. salaries are not great for people who incur living expenses in the first world -- 24000 to 84000 euros per year, before tax, for a software developer, at a thumb suck
10:44 < freeall> aandy_: I just found AppJS. So yeah, a "web thingy". The module would "just" be the layer between Node and osx/windows
10:44 < sheldonh> jonaslundWORK: people don't come here to work for money :)
10:45 < SargoDarya> I do ;P
10:45 < freeall> aandy_: The apps should run natively, and not in the browser. Just with a webview
10:45 < aandy_> tomato tompatoe
10:45 < aandy_> ;)
10:46 < jonaslundWORK> sheldonh: right, i was just reading a /. interview with mickos (ex-mysql) who was talking about remote working and got kinda curious about worldwide pay levels,etc
10:46 < freeall> :)
10:47 < freeall> aandy_: I want the ability to create native UI programs, but I want to create the design with HTML. It's simply just a LOT faster than having to use what ui tool to do it.
10:48 < SomeoneWeird> freeall, node-webkit
10:48 < SomeoneWeird> and b2g
10:49 < jonaslundWORK> If you're not restricted to node but to JS then there's a ton of environments
10:49 < jonaslundWORK> xul-runner would probably be the most famous one
10:49  * jonaslundWORK is actually using chatzilla right now
10:49 < freeall> SomeoneWeird: Thanks, will just check them out. AppJS looked promising, but they need a 32 bit version of node
10:50 < jonaslundWORK> built on just that
10:51 < SomeoneWeird> node-webkit > appjs
10:53 < Tox> SomeoneWeird: are there any up-to-date comparisions of these two?
10:54 < SomeoneWeird> dunno
10:54 < aandy_> (offtopic) speaking of ui, i've never really used css3. i have two elements, one of which should toggle when a button is clicked. of course i know how to do that using javascript, but can i do it in css3 (say, if a user will not allow js to run), or are the two connected somehow?
10:59 < Tox> aandy_: there are some hacks to achieve it, but I would do that in js.
11:00 < aandy_> okay, bah.
11:00  * aandy_ shakes angry fist at mob of NoScript'ers
11:00 < jonaslundWORK> mmmm noscript
11:01 < marcules> :D
11:01  * jonaslundWORK has used it since 2005ish
11:01 < Tox> aandy_: the noscripter are used to get non-functional websites.
11:02 < aandy_> true
11:02 < aandy_> it's more of an overall rant, as i think noscript slowly teachers people that shit aint working
11:02 < jonaslundWORK> seriously
11:02 < substack> aandy_: http://substack.net/images/substack.gif
11:02 < jonaslundWORK> using the web w/o noscript would be horrendeous
11:03 < jonaslundWORK> on a laptop
11:03 < aandy_> substack: hehe
11:03 < asdf12> for contributing to node, should a failing test be in the same commit as the fix? i don't think so? but i'm not sure if that's 
11:03 < asdf12> considered spamming the log
11:04 < jonaslundWORK> aandy_: i usually do most "regular" browsing with ff/noscript and open up some things in chrome if they seem useful enough and need noscript
11:04 < aandy_> jonaslundWORK: s/w\/o noscript/with java/ ?
11:04 < marcules> korilo, do you maybe have a good debugging-tool - or any hint how I could see what happens in this passport-function without going into the core-files?
11:05 < aandy_> see, while i follow your "i just enable it for the sites i always use, no problem", my point is that for every new site, your first impression is always going to be "ah, not working"
11:05 < jonaslundWORK> aandy_: flash was my pet peeve initially, swedens biggest online newspapers has so many flash ads on their page that the old single-core computer i used to use almost died
11:05 < aandy_> your next thought might be "this is due to js maybe?" you try to enable js and it may/may not work. i don't see that as positive :)
11:06 < aandy_> well, i differentiate plugins and scripts
11:06 < aandy_> i block flash+java, but not javascript
11:06 < jonaslundWORK> so you see a lot of broken sites!
11:06 < jonaslundWORK> :D
11:06 < aandy_> not at all
11:06 < jonaslundWORK> right 
11:06 < aandy_> i see a lot of sites with non working ads though
11:07 < jonaslundWORK> i don't either
11:07 < aandy_> and as for java, there's only *one* site i've ever encountered that i need that for
11:07 < aandy_> and even that's in the process of changing (thank god)
11:07 < marcules> Our intranet is full of java-applets >.>
11:07 < jonaslundWORK> last time i needed java was for some stupid course selection system that they discontinued at my uni like 10 years ago
11:07 < aandy_> chills
11:08 < jonaslundWORK> well
11:09 < jonaslundWORK> i'm off to lunch
11:09  * jonaslundWORK is inside a reactor hall right now
11:09 < freeall> SomeoneWeird: I really like how AppJS is setting it up. It's just a basic wrapper to the window, and then it uses basic HTTP for the communication. I like that. node-webkit was more a framework and you can't simply install it from npm.
11:10 < freeall> SomeoneWeird: however... AppJS crashes many times and was kinda difficult to get running
11:12  * jonaslundWORK is sitting at http://en.wikipedia.org/wiki/R1_%28nuclear_reactor%29  ( http://seenly.com/GZhgIAVo )
11:13 < jonaslundWORK> anyhow
11:13 < jonaslundWORK> lunch
11:13 < SomeoneWeird> WOW
11:13 < SomeoneWeird> lol
11:13 < SomeoneWeird> caps
11:13 < SomeoneWeird> thats neat
11:19 < damarusama> is there any sort of node bebugger in vim ? what workflow do you use to debug your code apart from linting
11:19 < damarusama> /s/bebug/debug/g
11:24 < yakubori> i think there's a debug call you can make in your source
11:24 < damarusama> but generally you write the code, run 'node mycode.js' and test it from there?
11:24 < sheldonh> i add shitloads of console.logs to my tests ;)
11:24 < yakubori> http://nodejs.org/api/debugger.html <- damarusama, looks like an argument to node itself
11:25 < yakubori> sheldonh: :D
11:25 < damarusama> I see
11:32 < yakubori> OT: I'm looking for a good book on web development best practices. Something that serves as a good language-agnostic reference. Any recommendations? 
11:36 < rvagg> wolfeidau meet juliangruber, juliangruber meet wolfeidau
11:36 < rvagg> now GO!
11:36 < juliangruber> wolfeidau: hey there!
11:36 < wolfeidau> juliangruber: heya will have a look at getting that gist running now :)
11:36 < juliangruber> sweet :)
11:37 < wolfeidau> juliangruber: Wanted to understand how it all hangs together
11:37 < juliangruber> I only needed to install gmake to get levelUp to build...
11:37 < juliangruber> :)
11:37 < wolfeidau> juliangruber: Yeah i was a solaris admin so i know the drill :)
11:38 < juliangruber> wolfeidau: aaah ok, I'll shut up now :D
11:38 < asdf12> im hungry
11:39 < wolfeidau> juliangruber: All good, smartos is a bit different but some of the conventions are similar, dtrace and node are awesome in that environment 
11:42 < Dededede4> this makes me mad: http://img15.hostingpics.net/pics/803843WTF.png
11:43 < thinkerweb> I installed nodejs on debian following these instructions: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager But it didn't work, just thought I'd let you guys know that that package is no good!
11:43 < Dededede4> I looked everywhere, I do not know where it comes from..
11:43 < thinkerweb> Anyway, the main file works fine, you don't need to install it, you can just run it portably.
11:47 < wolfeidau> juliangruber: FYI this is how got smartos ready to cross compile node stuff https://gist.github.com/wolfeidau/4321681 that is using the vmware image
11:47 < MI6> joyent/node: Bert Belder v0.8 * d5959c5 : Revert "build, windows: disable SEH"  This is no longer necessary - the u (+2 more commits) - http://git.io/XIqJPQ
11:49 < juliangruber> wolfeidau: nice, I'll try that
11:50 < quizme> hi, how do you assert the exact error message in nodeunit ?  
11:51 < quizme> test.throw( function() { fail_marvelousely(); }, Error, 'I want to asset the test of err.message');
11:51 < quizme> s/asset/assert/
12:02 < sheldonh> i need an anonymous forum in which i can whine about a vendor without consequences for my employer. like alt.sysadmin.recovery for 2013
12:03 < MI6> joyent/libuv: isaacs v0.8 * 1258d9e : win: map ERROR_INVALID_FUNCTION to EISDIR  This error is raised when call (+4 more commits) - http://git.io/LPDoEA
12:04 < marcules> korilo, I found the error - I used successfullRedirect, but it should be successRedirect... oh god I feel dumb now
12:07 < quizme> how do you asset more stuff about thrown errors ?
12:09 < korilo> marcules, lol
12:09 < marcules> Oh yeah
12:39 < Newbie507> Has anyone ever considered building a streaming server with node.js?
12:39 < BlackFate> hello! i have an array... ip[socket.id] = some.ip    p[socket.id2] = some.ip2 etc. How can i loop though the ip array and get the socket id for a specific IP
12:41 < Newbie507> @BlackFate   
12:41 < gildean> Newbie507: that depends on what you mean by streaming server, for example most static http-servers in node are streaming
12:43 < Newbie507> Capable of streaming audio content?
12:44 < gildean> BlackFate: for example something like var index = ip.indexOf(some.ip) if (index > -1) { console.log(ip[index]); }
12:44 < BlackFate> gildean, let me try that
12:45 < Newbie507> @BlackFate   for(i in arrayname)  {   if(arrayname[i].ip == requiredIp)console.log(arryname[i].socketId);  }  
12:45 < BlackFate> Newbie507, is that blocking?
12:46 < gildean> oh, i misread your code BlackFate, mine won't work 
12:46 < Newbie507> yes
12:47 < BlackFate> Newbie507, ill try that. Is there a non blocking way?
12:48 < asdf12> no there wouldn't be
12:48 < BlackFate> thanks all! Newbie507 asdf12 and gildean 
12:48 < asdf12> and you shouldn't use an array like that
12:48 < gildean> asdf12: how's so?
12:48 < asdf12> what you really want is to use an object
12:48 < BlackFate> oh
12:49 < gildean> asdf12: you could do a self-recursion using eventemitters, that would make it async
12:49 < asdf12> it'll be a lot faster too
12:49 < gildean> a huge hassle for such a thing, but still
12:49 < BlackFate> asdf12, actually im using socket io... i just need to emit something to an IP that used a POST to my express server
12:49 < BlackFate> so i was saving all my handshake ips... to an array
12:50 < asdf12> gildean, i don't think doing that makes it async (runs the code off the main stack)
12:51 < gildean> asdf12: as i understand, it would only block while executing the function, not through the whole iteration like a loop
12:52 < asdf12> well , i mean you could put it in a settimeout or process.nexttick
12:52 < asdf12> blackfate: it just makes sense to store it in an object, because that's what you're 'trying' to do with the array
12:53 < asdf12> so make it easier and just use an object
12:53 < asdf12> and it'll be faster
12:54 < Newbie507> @Blackfate probably function getSocketId(array,index,target,callback){  if(array[index] == undefined )return undefined; else { if(array[index].ip ==target)return array[index].ip; else return callback(array,++index,target,callback) }} 
12:55 < Newbie507> @BlackFate then var id = getSocketId(arrayname,0,targetIp,getSocketId);
12:57 < BlackFate> hm
12:59 < Newbie507> has anyone ever tried an audio streaming with node.js
13:00 < asiekierka> Hey
13:00 < asiekierka> Is it possible to check if an executable exists in Node?
13:00 < asiekierka> As in, in the PATH
13:04 < mscdex> asiekierka: using a child process ('which foo') ?
13:05 < mscdex> Newbie507: yeah
13:05 < mscdex> Newbie507: not over socket.io though
13:06 < Newbie507> @mscdex what module did you consider using?
13:06 < mscdex> Newbie507: well i've mostly only done simple rtp audio streaming
13:06 < mscdex> over udp
13:07 < mscdex> to a cisco phone :-)
13:07 < Newbie507> @mscdex any tips on where to focus?
13:08 < mscdex> what are you streaming? an audio file on disk?
13:08 < Newbie507> no, voice captured from a microphone
13:11 < mscdex> Newbie507: i would guess you could do that with 'rec' (which is part of sox)
13:12 < mscdex> wait, are you talking about capturing from the browser?
13:12 < Newbie507> ok, thank you for your help @mscdex. I'll have to go for awhile
13:28 < BretFisher> what happened to .9 ?
13:28 < BretFisher> 'corse I only pay attention to prod release
13:29 < asdf12> what it do?
13:36 < BlackFate> asdf12, something like that? http://www.emoticode.net/javascript/improved-timed-chunk-javascript-function.html#.UTnob1nCWZU
13:41 < asdf12> that code is wild
13:43 < andrew12> why concat() instead of slice()?
13:45 < asdf12> apparently its 4 years code
13:46 < asdf12> BlackFate,  much simpler than that
13:47 < asdf12> BlackFate: http://hastebin.com/hepitujuwa.coffee
13:48 < Dededede4> how to understand v8.log ?
13:48 < guor> there is a tool called linux-tick-processor in v8/tools
13:49 < BlackFate> asdf12, i see! so... it will give priority to the rest of the script?
13:49 < asdf12> yea
13:49 < Dededede4> I'm on debian, how to install linux-tick-processor ?
13:50 < asdf12> Dedede4: the simplest way is to check out node-prof by bnoordhius
13:51 < asdf12> BlackFate: you will pass it a callback to know when its done
13:52 < asdf12> (if you care to know)
14:03 < teadict> So... What can I expect to break if I NPM-update from 0.8.4 to last stable?
14:04 < teadict> If anything
14:04 < mscdex> node 0.8.4?
14:05 < teadict> yes
14:05 < teadict> or I shouldn't even do npm-update and re-compile?
14:05 < mscdex> you can't update node via npm?
14:05 < teadict> I can.. but maybe it's a big update and things could break?
14:06 < teadict> udnno
14:06 < mscdex> teadict: how do you update node using npm?
14:06 < mscdex> :S
14:06 < teadict> http://theholmesoffice.com/node-js-fundamentals-how-to-upgrade-the-node-js-version/
14:06 < mscdex> ok, so that's using _n_ not npm :-)
14:06 < teadict> I was looking for easy way to updat,e that came up
14:06 < teadict> oh
14:06 < teadict> right
14:07 < mscdex> teadict: anyway, as long as you stay within the same stable branch you should be fine
14:07 < teadict> mscdex: great
14:07 < mscdex> teadict: so going from 0.8.4 to 0.8.22 should be no problem
14:07 < teadict> mscdex: will do then, thank you
14:09 < teadict> mscdex: but...
14:09 < teadict> mscdex: if I compiled 0.8.4, will n update that compilation? 
14:10 < teadict> mscdex: should I fire up n from the node installation path for relativity? or it doesn't matter?
14:13 < mscdex> teadict: i've never used 'n' before, i always either compile and install from source myself or use the pre-built binary tarballs
14:13 < teadict> mscdex: then ''ll `sudo make uninstall`  current node and recompile last stable
14:13 < teadict> *I'll
14:14 < mscdex> you shouldn't need to uninstall node first
14:14 < mscdex> you can just install over top of it
14:14 < teadict> then remove previous folder?
14:14 < teadict> no conflicts nor nothing?
14:14 < teadict> sweet
14:14 < mscdex> i mean `sudo make uninstall`
14:15 < teadict> wait, cuz I'm a little rusty on compiling...
14:15 < teadict> I have 0.8.4 compiled... next step is?
14:15 < teadict> uninstall 0.8.4 or clone last stable on another path and install that?
14:16 < supersym> make install?
14:16 < teadict> supersym: on the new cloned last stable src?
14:16 < supersym> yeah if you did make, then make install if you didnt change the ./configure --prefix or anything
14:16 < supersym> it'll just overwrite it
14:16 < teadict> goodie
14:18 < mscdex> node.js rules!
14:24 < supersym> yeah its pretty sweet.. :)
14:27 < supersym> even better without the javascript :P
14:45 < BlackFate> asdf12, http://local.lostid.net:9876/ finished it :P kind of
14:45 < BlackFate> asdf12, thanks again
14:49 < knarr> hey, does anyone know where I can find a tutorial on how to drop databases using nodejs-mongodb-native, I have tried to impliment the dropDatabase function inside of db.open, but keep receiving invalid ns errors, and I don't understand what that means
14:50 < supersym> drop? you mean sql dump?
14:50 < knarr> yes, but using mongodb
14:51 < supersym> http://docs.mongodb.org/manual/administration/import-export/
14:51 < supersym> that?
14:51 < knarr> on more googling I may not mean dump, I would like to remove the database completely from the system
14:51 < supersym> ah ok
14:52 < supersym> http://stackoverflow.com/questions/8857276/how-do-i-drop-a-mongodb-database-from-the-command-line
14:52 < supersym> you can just spawn a process to do that I guess
14:52 < supersym> but there would be other means... I guess, depending on the wrapper.
14:53 < supersym> https://github.com/mongodb/node-mongodb-native/blob/master/examples/admin.js
14:53 < knarr> I'm using the node-mongo native one
14:53 < supersym> check the dropDatabase code parts there
14:53 < supersym> yeah
14:53 < supersym> :)
14:53 < knarr> yeah I was looking around in the examples :P but the ones that I tried to copy give me invalid ns errors, do you happen to know what that means?
14:54 < knarr> in the mean time I'll try the version you just linked, thanks
14:54 < supersym> I dont see what namespaces would interfere here and without a error message..
14:54 < supersym> that should just work, if the user is auth
14:56 < knarr> its set up on my local machine, so it should be fine, and I have connected to the database earlier in the code
14:56 < supersym> normally read rights are different from update, esp. drop database
14:57 < knarr> do you know the difference between the Db.connect function and creating a new Db() ?
14:57 < supersym> but i havent used mongo often, no sure how its user-group (if any) model inside is
14:58 < knarr> hmmm I will check out the permissions, but I haven't set up an authentication system yet, so I doubt that that is the problem
14:58 < supersym> connect ready does the Db() for you
14:59 < supersym> its the exported, public exposed, method you are supposed to use
14:59 < supersym> https://github.com/mongodb/node-mongodb-native/blob/master/lib/mongodb/index.js
14:59 < supersym> thats what it does in the back
15:00 < supersym> mongo probably is running under a priviledged user mongod
15:00 < knarr> ah but check the last line there "mondule.exports = connect" so db() and db.connect() should be synonymous
15:00 < knarr> hmm I guess I will go look at permissions
15:00 < supersym> it should be the only one allowed to start it up, etc. then you can also restrict system access to IP x.y.z only... and you could still read it from outside on the web
15:01 < supersym> there is quite some complexity and security considerations so I suggest reading the manual
15:01 < supersym> it all depends on how its setup but i guess you use default values anyway :P
15:02 < supersym> http://docs.mongodb.org/manual/reference/user-privileges/
15:02 < supersym> enjoy and gl ^^
15:05 < knarr> Yeah, thanks for pointing it out xD aah how I love privilages
15:06 < supersym> yup .. usually a pain lol
15:32 < djcoin> Hi all, is there some library that could provide synchronization between: 1/ already rendered templates (with some collection) on the client side and 2/ updated collections on the server side
15:32 < djcoin> Kind of meteor "sync" feature as a library
15:33 < djcoin> Or more precisely Racer in Derby
15:36 < euoia> djcoin: please keep me posted if you find anything
15:36 < djcoin> sure
15:37 < djcoin> euoia: did you make some research yourself ?
15:37 < euoia> I'm sure there's something out there, the concept sounds really familiar
15:37 < euoia> nope
15:37 < euoia> I have been doing syncing the old fashioned way
15:38 < djcoin> euoia: do you use any special lib ?
15:38 < euoia> djcoin: not really, except socket.io
15:38 < djcoin> I planned to use meteor, but it seems not so "modular"
15:38 < djcoin> k
15:38 < euoia> djcoin: this article might be relevent http://blog.andyet.com/2011/feb/15/re-using-backbonejs-models-on-the-server-with-node/
15:40 < euoia> djcoin: I remember reading something on hackernews about this topic though, IIRC essentially arguing that in general it's a bad idea because there's often not a good way to handle exceptions
15:40 < euoia> djcoin: I'll try to find it, because it was in response to a framework which did what you're looking for
15:41 < euoia> djcoin: this is another article on the topic (not the one I was looking for) : 
15:41 < euoia> http://news.ycombinator.com/item?id=5137859
15:41 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:42 < djcoin> thanks
15:43 < euoia> djcoin: I hadn't heard of it, but what's wrong with using racer?
15:44 < euoia> djcoin: I think the article I was thinking of on hackernews was about NowJS. This thread has tons of info: http://news.ycombinator.com/item?id=2316005
15:45 < euoia> djcoin: including a response by substack talking about dnode
15:45 < euoia> djcoin: and I think this is the comment that stuck with me, "Sure: dcom, corba, rpc, soap. The lesson I learned is that you can't abstract away the network barrier; to the contrary - that barrier must be the central point of the design of storage and communication components of the app."
15:48 < djcoin> euoia: i guess nothing is wrong with racer, but I didn't try
15:48 < djcoin> did you ?
15:49 < euoia> no, never
15:49 < euoia> I haven't tried any of these things, but I'm interested in other peoples' experience with them
15:59 < alex88> hello guys
15:59 < andrew12> is there a simple way to uninstall all npm modules I have installed globally?
16:00 < alex88> after a npm update the code http://pastie.org/pastes/6421788/text?key=l8hbry7wyzdqh6jbmgqkqq gives the exception you can see in the paste
16:00 < alex88> has anyone an idea on what's going on?
16:00 < euoia> andrew12: I would hope that just rm -rf ~/node_modules would do it
16:00 < euoia> andrew12: but I'm not sure
16:00 < andrew12> I said globally :P
16:01 < andrew12> and it doesn't remove anything that it linked to bin
16:01 < andrew12> etc
16:01 < euoia> on my box the global modules are in /usr/local/lib
16:01 < andrew12> yeah
16:01 < euoia> /usr/local/lib/node_modules
16:01 < andrew12> yeah, but that includes npm
16:01 < andrew12> and it links stuff to /usr/local/bin
16:01 < asdf12> anyone know a guide for writing native modules with c? ie: using the least amount of c++
16:02 < andrew12> extern "C" {}?
16:02 < euoia> andrew12: that it true, I give up
16:02 < andrew12> I guess I can just do npm -g ls and remove stuff that I see in there
16:03 < asdf12> the problem is, i have no idea what's going on when i see c++ code haha
16:03 < andrew12> me neither
16:03 < andrew12> I guess -> is like calling a method on an object
16:03 < MI6> joyent/node: isaacs master * 9036877 : stream: Emit error on stream object, not global  Apparently this function - http://git.io/77OCMA
16:04 < andrew12> or getting a property or whatevre
16:04 < andrew12> whatever*
16:04 < euoia> andrew12: yes that tree output is not the easiest thing in the world to parse
16:04 < andrew12> indeed
16:05 < andrew12> ah you can have it output json
16:05 < andrew12> or "parsable"
16:09 < euoia> andrew12: hmm hmm, -json and -long work for me but not -parseable
16:09 < andrew12> me neither
16:09 < euoia> npm ERR! TypeError: Arguments to path.resolve must be strings
16:15 < jeremy_c> How do you handle database operations that are required to be performed in a particular order? For example, when importing a medical claim, I have 8 database tables I am querying from and/or updating/inserting.
16:18 < jeremy_c> Here are the simplified steps I need to go through: https://gist.github.com/jcowgar/c2f0409e063db4302b80 ... easy in most languages, but I'm new to node and its non-blocking methodology.
16:20 < euoia> jeremy_c: you can either used nested callbacks or use a stepping library like async
16:21 < asdf12> hint: just use async :P
16:22 < jeremy_c> asdf12: euoia: I was thinking about that, but many things require information from previous queries, for example, to insert the claim, I need to know the provider id. which comes from either finding an existing provider, or by inserting a new one.
16:22 < euoia> both of the approaches I mentioned will allow you to propagate results from an earlier operation to a later one
16:23 < jeremy_c> asdf12: euoia: OK, I'll look for the async lib. Thanks for the help.
16:23 < euoia> the main problem you had was with the async nature of the operations, these approaches address that
16:24 < euoia> jeremy_c: yeah have a look at the examples on the async page, you'll get it when you see it :) Good luck
16:38 < andrew12> has anyone written anything to print an object as a valid json string, but formatted in npm's style?
16:40 < chakrit> not sure but how about https://npmjs.org/package/render ?
16:40 < andrew12> that's exactly what i want, thanks
16:45 < misster_lonely> w   w    w   .   Alba Chat . Al  Albanian Chat 
16:52 < chakrit> spam?
16:53 < asdf12> no, an invitation to a good time
17:00 < jitu> hi
17:01 < jitu> can anybody  help me ?
17:02 < asdf12> just ask
17:04 < MI6> joyent/node: Bert Belder msi-fixes * 3c22c42 : win/msi: enable modify and repair (+13 more commits) - http://git.io/EnwzVg
17:16 < kaoD> hi
17:17 < kaoD> is there any way to write binary data to stdout ?
17:17 < kaoD> process.stdout.write accepts only strings
17:17 < kaoD> and String.fromCharCode works with Unicode strings
17:17 < kaoD> while I'm trying to write bytes
17:32 < asdf12> kaoD what about string.charCodeAt ?
17:32 < kaoD> asdf12: I want it the other way around
17:33 < kaoD> I don't want a charCode from a string
17:33 < kaoD> but a String from a charCode
17:33 < kaoD> so I can feed the string to stdout
17:33 < kaoD> (which is annoying because I see stdout as a byte stream not a string stream)
17:34 < asdf12> i'm confused
17:34 < asdf12> so you have bytes and want to convert them to a string?
17:35 < kaoD> asdf12: yes
17:35 < kaoD> asdf12: yep, because process.stdout.write only accepts strings
17:35 < codingstream> process.stdout is a writable stream
17:35 < codingstream> and there is a write() that accepts buffers
17:36 < asdf12> yes, use buffer
17:36 < codingstream> you might have some luck using a buffer, and setting the encoding of that buffer to binary
17:37 < kaoD> but I don't want a buffer
17:37 < asdf12> no, it'll do the conversion for you
17:37 < kaoD> I would create a one-byte buffer but it looks a bit overkill to me, isn't it ?
17:37 < asdf12> put everything inside the buffer
17:38 < kaoD> there is no 'everything'
17:38 < asdf12> how are you getting the data?
17:38 < asdf12> (hint, it might already be a buffer)
17:40 < asdf12> pretty much any IO you do, gives you a buffer, so you probably already have a buffer
17:41 < kaoD> asdf12: I generate the data
17:41 < kaoD> it's just a mathematical function
17:45 < asdf12> well why can't you write more than one byte to the buffer?
17:45 < kaoD> I wanna keep this minimal
17:45 < kaoD> it's just a bunch of bytes that I want to be piped
17:46 < kaoD> not buffered or anything
17:46 < asdf12> well all the 'stream' , piping stuff is just streaming along buffers
17:50 < MI6> joyent/node: Bert Belder master * 3c22c42 : win/msi: enable modify and repair (+13 more commits) - http://git.io/G5Lf_A
17:51 < asdf12> (i dont understand why fromCharCode is no good though)
17:52 < kaoD> asdf12: 
17:52 < kaoD> String.fromCharCode(0)
17:52 < kaoD> '\u0000'
17:52 < kaoD> that is TWO bytes
17:53 < kaoD> ?
17:53 < kenperkins> last day at the current gig :D
17:53 < kaoD> in fact when I process.stdout.write it, I get two 0000 bytes (which breaks my code)
18:01 < codingstream> kaoD: var b = new Buffer(1, 'binary');
18:01 < kaoD> yep, a single byte buffer, but it seems a bit too much
18:02 < codingstream> you're only buffering 1 byte of data
18:06 < codingstream> stdout is really intended for human-readable info
18:09 < kaoD> codingstream: nope
18:09 < kaoD> it is not
18:09 < kaoD> specially in Linux
18:09 < kaoD> where piping is more than common
18:09 < kaoD> stdout is naturally a byte stream and nothing more
18:09 < kaoD> strings are an abstraction over byte streams which seem a bit unnecesary to me in this case
18:10 < chakrit> kaoD 1 bytes isn't really that slow. and you can re-use buffers.
18:10 < kaoD> I guess I'll give up and buffer but boy, is this a weird design decision
18:10 < kaoD> chakrit: yeah, I'll end up buffering > 1 byte if I'm going to use buffers anyway
18:10 < kaoD> buy I meant to keep the code minimal
18:12 < chakrit> also new Buffer('\0').length is 1
18:17 < MI6> joyent/node: isaacs created branch windows-test-fixing - http://git.io/tYdJmA
18:34 < flish> hello -- anybody familiar with jquery-imacros ? that's a node module that allows the user to use jquery in an imacros js script
18:43 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:44 < Deithrian> Hello everyone! Happy women's day to the ladies :)
18:44 < Deithrian> Can someone help me with advise on the best development configuration for node?
18:44 < Deithrian> Is it Eclipse? Visual Studio?
18:45 < kaoD> Deithrian: it's emacs
18:47 < funkbox> visual studio does very well with javascript. there's also webstorm if you like ides
18:47 < funkbox> i personally use sublime text when forced to
18:47 < funkbox> other times i use a very sharp needle and twiddle the bits myself, because i am way more hardcore than any of these emacs/vim users
18:48 < kenperkins> Deithrian: It's highly subjective
18:48 < Deithrian> funkbox, I tried VS, but it didn't seem to work well with node code, it highlighted errors in the simple server script.
18:48 < kaoD> actually the answer is "there is no good IDE for JS yet, but Tern looks promising"
18:48 < kenperkins> I quite like webstorm by JetBrains, as it is a very rich IDE, and is tightly integrated with node.js
18:49 < kenperkins> kaoD: try webstorm 
18:49 < Deithrian> Is there anything in which you can work on JavaScript and on Node?
18:49 < funkbox> Deithrian: notepad
18:49 < funkbox> any text editor ever
18:49 < kenperkins> Deithrian: webstorm does
18:49 < kaoD> kenperkins: already tried webstorm but full-fledged IDEs are not my taste
18:49 < kenperkins> kaoD: can't argue that
18:50 < kaoD> kenperkins: as I said I'm waiting for Tern integration with emacs
18:50 < kaoD> THAT would be awesome
18:50 < kenperkins> but when you say there's no good IDE for js yet, that seems rather hypocrticial :D
18:50 < kenperkins> if you like emacs, which I despise
18:50 < Deithrian> kenperkins, for 44 Euros I will give notepad a try ;)
18:50 < s5fs> I use vim
18:50 < Havvy> I use Sublime Text. Doesn't have intellisense, but it does have autocomplete, a rich search and replace functionality, and a somewhat working auto-indenter.
18:50 < kaoD> kenperkins: does WebStorm support this? http://ternjs.net/
18:51 < kaoD> that's what I meant with "there is no good IDE for JS yet"
18:51 < Deithrian> Well I saw there's node.js debugging in Eclipse? I have no clue what that is since I'm just starting to learn the stuff :)
18:51 < kenperkins> kaoD: yes it does
18:51 < Deithrian> Isn't that a + for Eclipse?
18:51 < kaoD> ooh kenperkins then I might try WebStorm again :)
18:51 < kaoD> Tern's type inference looks promising
18:51 < kenperkins> i don't think it's with tern proper
18:51 < kaoD> ooh if it's not Tern then it probably sucks like VS's intellisense
18:51 < kenperkins> but it has very advanced refactoring/definition following support built it
18:51 < kenperkins> no, it's fucking AWESMOE
18:52 < s5fs> that's the best kind of "moe"
18:52 < kenperkins> it also has built in support for using node.js sources for resolving node.js requires
18:52 < kenperkins> anyway, give it a try, worst that can happen is you don't like it
18:52 < kaoD> no type inference = no proper code completion
18:52 < kaoD> but I'll give it a try sure
18:53 < kaoD> it's been at least a year since the last time I tried WebStorm
18:53 < kenperkins> they also just added coffee and typescript support
18:53 < kenperkins> if you care about that (i dont)
18:53 < kaoD> though as I said earlier I don't really like the concept of IDEs
18:53 < kaoD> too Windows-y
18:53 < kaoD> does not mix well with Linux nor with my workflow (I spend most of my time in the console or over SSH)
18:53 < kenperkins> mostly, I love the refactor support, super awesome regex functions for search/replace, as well as jsdoc integration
18:54 < kenperkins> I do osx for dev, linux/ssh for deploy
18:54 < kenperkins> although, today is my last day at Clipboard :D
18:55 < kenperkins> so I have to figure out a new workflow for my new job :D
18:55 < Deithrian> I understand that professional coders need only Notepad, but for someone like me, a beginner, I would take all the help I can get :)
18:56 < kaoD> Deithrian: IMHO beginners are easily distracted by IDEs
18:56 < kaoD> in fact, probably professional coders will be the ones which benefit most from IDEs
18:57 < Deithrian> kaoD, but IDE tells me when it expects ; 
18:57 < kenperkins> Deithrian: I agree with both points from kaoD. Advanced IDE saves me so much time refactoring my code, or navigating around
18:57 < kenperkins> but it's also a huge time sync for new coders
18:57 < kaoD> Deithrian: shouldn't you learn when to put ; then ?
18:57 < kaoD> run -> see error -> fix
18:57 < Deithrian> ...
18:57 < kaoD> run -> see error -> fix -> rinse and repeat
18:57 < Deithrian> Sometimes you just forget to put it there?!
18:58 < Deithrian> well that's weird... I didn't expect people to tell me not to use IDEs
18:58 <@Nexxy> your OS is the IDE
18:59 < kaoD> Nexxy: +1
18:59 < kaoD> Deithrian: I believe not using IDEs is better because it will force you to think about your code
18:59 < kaoD> IDEs hide information from you
18:59 < kenperkins> Deithrian: part of growing from a beginner to something more is making your own decisions and following your own path
18:59 < Deithrian> kaoD, what information?
19:00 < kaoD> Deithrian: e.g. where to look for documentation
19:00 < kaoD> how to use npm from command line
19:00 < kaoD> etc.
19:01 < Deithrian> ok, so there is no IDE for node, and it's best not to use one for node.
19:01 < kenperkins> that's an opinion
19:01 < kaoD> Deithrian: no, as kenperkins said it's a very personal opinion
19:01 < kaoD> I don't like IDEs, he does
19:01 < kenperkins> both are perfectly valid
19:02 < Deithrian> Ok but, if your code doesn't work, JavaScript code for example, do you troubleshoot it in the web browser or something?
19:02 < kaoD> Deithrian: both Node and browsers have debugging capabilities
19:02 < asdf12> i was going to try out webstorm
19:02 < kaoD> IDEs are not very good at spotting semantical errors
19:03 < deadalus> personally i use sublime text 2 for javascript development and make a liberal use of console.log() for debugging. 
19:03 < kenperkins> asdf12: I swear by it
19:03 < kaoD> specially JS IDEs where variables are dynamic and not typed at all
19:03 < kaoD> Deithrian: just make sure that you have syntax highlighting in your favorite editor, an IDE is just another tool in the belt
19:03 < kaoD> get comfortable with BOTH and then decide which suits your needs better
19:03 < kenperkins> Deithrian: I make heavy use of node-inspector, as I'm sure many others do here as well
19:03 < kaoD> node-inspector <3
19:04 < Deithrian> node spector o-o
19:04 < Deithrian> you add that with npm or something?
19:04 < kaoD> yep
19:04 < kenperkins> yep
19:04 < kaoD> npm install -g node-inspector
19:04 < kaoD> (with administrative rights)
19:04 < kenperkins> we wire it up so that all of our apps are on different ports in stage and dev
19:05 < kenperkins> kaoD: what do you work on btw
19:05 < Deithrian> well guys the thing is I may not be using an IDE as an IDE because I'm an absolute beginner, and thus you don't like it because it has some functions which I probably don't even use...
19:05 < gluxon> I am a minute late... but.. node-inspector? O_o
19:05 < Deithrian> Would you call an IDE something that recognizes "var" and tells me when I forget to place a ";"?
19:05 < kenperkins> Deithrian: on this I'd agree with kaoD: start with notepad/vim/emacs or the like, and focus on figuring out patterns that you like for development
19:05 < kaoD> gluxon: https://github.com/dannycoates/node-inspector <- MIND-BLOWN
19:06 < kaoD> Deithrian: no, I won't call that an IDE
19:06 < gluxon> kaoD: I am mind blown O_o
19:06 < Deithrian> ok so I don't need IDE then lol
19:06 < kenperkins> so if you define IDE as inclusive of build/debugging, I don't use WebStorm in that capacity iether
19:06 < kaoD> I would call that JS-lint
19:06 < kenperkins> it's just a fancy editor
19:06 < Deithrian> What's the best no IDE that colors "var" and "function" and tells me when I forget to place ;?
19:07 < kaoD> Deithrian: Sublime Text + plugins + JSlint
19:07 < kaoD> probably great for beginners
19:07 < kenperkins> what he said
19:07 < euoia> Deithrian: I use syntastic in vim to highlight errors
19:07 < gluxon> No JSLint :'(
19:07 < Deithrian> excellent thanks kaoD :)
19:07 < euoia> I wrote a plugin to format JS for vim
19:07 < Deithrian> will try sublime
19:07 < kenperkins> Deithrian: I'll tell you this, chances are whatever tools you learn today wont matter, because in a year you'll be so much more informed
19:07 < kenperkins> Deithrian: that you can form your own opinions
19:07 < euoia> https://github.com/euoia/vim-jsbeautify-simple
19:08 < kenperkins> so don't get too worked up about it
19:08 < Havvy> Sublime Text with plugins (just google javascript plugins for sublime text) is a pretty good setup.
19:08 < euoia> And syntastic is easy to set up
19:08 < gluxon> I rejected JSLint when it said, "Use spaces, not tabs."
19:08 < kenperkins> +1 spaces
19:08 < kaoD> gluxon: tabs !?!?
19:08 < kaoD> TABS !?!?!?
19:08 < kenperkins> if only because github by default shows tabs at EIGHT CHARS
19:09 < Deithrian> kenperkins, I just need an aid right now to form good patterns :) When the editor tells me I forgot to place ";" a couple of times, I learn to pay more attention tot hat mistake I'm making. That's why I find such editors useful o-o
19:09 < gluxon> kenperkins: That is annoying.
19:09 < kaoD> try to checkin tabs in my codebase and I'll hate you for the rest of your life
19:09 < kenperkins> Deithrian: I think you're over-worrying about it. you'll get better at syntax, and then it'll take care of itself
19:09 < gluxon> kaoD: Check spaces into my codebase and I will personally come to your house with a hammer.
19:09 < kaoD> kenperkins: +1 about the "it won't matter in a year" line
19:09 < gluxon> :)
19:09 < kenperkins> kaoD: webstorm auto fixes tabs for me :D
19:09 < Havvy> kenperkins: Or you can be like me and make constant syntax errors...
19:09 < kenperkins> well I don't suck so ;)
19:09 < kenperkins> haha j/k
19:10 < kaoD> kenperkins: so does emacs (and trailing whitespace too) but I hate those diffs where almost each line is a change
19:10 < kenperkins> fuck I know it
19:10 < kenperkins> i hate whitespace diffs
19:10 < kaoD> sure, I can "ignore whitespace"
19:10 < kenperkins> i sent a PR to friends with 60 files of pure whitespace
19:10 < Havvy> kenperkins: I spend a lot of time refactoring code, and in the refactoring, I often miss a closing brace or something.
19:10 < kenperkins> (one of my devs loves: if(a==b){
19:10 < kaoD> AGHHH
19:10 < kaoD> kenperkins: been there
19:10 < euoia> not sure what's worse, the formatting or ==
19:11 < kenperkins> so I did autoformat to whole project, then sent a PR with only whitepsace
19:11 < euoia> probably the ==
19:11 < Havvy> if (a === b) {
19:11 < kenperkins> euoia: meaning you always do true equality
19:11 < kenperkins> !== or ===
19:11 < kaoD> ssshhhh, the C++ guys are coming
19:11 < kenperkins> yea me too
19:11 < Havvy> kenperkins: I'm suprised he even used an opening brace.
19:11 < kaoD> they say "braces on their own line"
19:11 < euoia> yeah
19:11 < kenperkins> ugh
19:11 < kaoD> hahaha
19:11 < Deithrian> It would be awesome to be as proficient and not need the help of editors, but for now I really value their help :) it's like having a tutor around.
19:11 < kenperkins> now, if any of you do comma first, you're on my list :D
19:11 < kenperkins> the shit list that is :D
19:11 < kaoD> I don't do commas at all
19:11 < kaoD> CoffeeScript here
19:12 < kaoD> (but when I do JS, I comma-first like craze!)
19:12 < Havvy> kaoD: Braces on their own line works if you aren't nesting anonymous functions in if statements surrounded by for loops in a method prototype. ;)
19:12 < kenperkins> ugh
19:12 < kenperkins> worst fucking thing ever is when someone gets some interesting js thing on HN
19:12 < kenperkins> and it's in fucking COFFEE
19:13 < kenperkins> it's like: here, let me tell you how to formally introduce yourself to the president, and oh by the way, the article is in ebonics
19:13 < kenperkins> seriously tho, I hve to learn coffee one of these days
19:13 < gluxon> kenperkins: Is it that hard to learn?
19:13 < gluxon> Only new thing for me was the -> syntax
19:14 < kenperkins> well, yea that's it
19:14 < kenperkins> but im so busy :D
19:14 < bradleymeck> Domenic_: nah, single frame yields mean that each coroutine fn must explicitly yield each stack frame (so you cannot save your whole stack, only the current function's)
19:14 < kenperkins> new job will require it though (if only from a knowledge standpoint)
19:15 < Domenic_> bradleymeck: hmmmm interesting, i think that might be the same thing?
19:15 < safani> hello all
19:15 < safani> i am working n sharing sessions between php and node
19:15 < bradleymeck> gluxon: commas… commas and grammar when debugging
19:15 < euoia> safani: sounds fun
19:15 < kaoD> <kenperkins> and it's in fucking COFFEE <- fucking coffee ?
19:16 < kaoD> awesome coffee !
19:16 < safani> i have a question, when i request a session id from redis in node and it exists will it have all php app info such as whether user is autheticated or not etc.
19:16 < bradleymeck> Domenic_: just inversion of syntax, plus im not sure with the yield fn() how many invocations it would allow to yield (only the first?) or if nested invocations could still yield
19:16 < euoia> I think coffeew would be fine if JavaScript didn't exist, but it does
19:17 < kaoD> euoia: what do you mean ?
19:17 < kenperkins> kaoD: when you write a blog in coffee, you're saying that everyone needs to be able to read coffee to digest these examples
19:17 < kaoD> kenperkins: well, who cares ?
19:17 < kenperkins> I find it a bit ridiculous to write an example for node.js that's not in plain ol javascript
19:17 < kaoD> kenperkins: then take the coffee code and generate its JS counterpar
19:17 < kaoD> *counterpart
19:17 < bradleymeck> still unsure on tracing and coroutines when throwing errors around...
19:18 < kaoD> www.coffeescript.org -> Try Coffeescript -> paste Coffee code -> read JS code at the right
19:18 < kaoD> and anyways, Coffee is just syntax-sugared JS
19:18 < kenperkins> I'm saying that if your intentions are to write a blog post to educate users on something, the burden should be on you, the author, to put the examples in the most consumable form for readers
19:18 < kenperkins> I assert that coffee is not the best choice, that's all
19:18 < korilo> that ternjs is awesome btw
19:18 < kaoD> kenperkins: it depends on who my readers are
19:18 < euoia> kaoD: I mean that coffee script might be better than JavaScript, but it doesn't matter because JavaScript is the more widely used
19:18 < korilo> hope it can be integrated in sublime text
19:19 < euoia> kaoD: and I might be wrong on this now, but ultimately you'll be debugging JavaScript even when you're running coffeescript
19:19 < kaoD> euoia: yes, you're wrong
19:19 < kaoD> see source maps
19:19 < kaoD> and who cares if it's more widely used ?
19:19 < kaoD> my code is meant for me not for "everyone else"
19:19 < euoia> kaoD: then I'm sure you'll do fine with coffee script
19:20 < kaoD> euoia: no, don't get me wrong, I want to understand your opinion
19:20 < euoia> kaoD: but you'll have a harder time finding a developer if you need one
19:20 < Ezku> coffee may very well be a medium for getting your ideas across more succinctly
19:20 < kaoD> I'm not attacking you or anything
19:20 < kaoD> euoia: if a developer has a hard time understanding Coffee I don't really want to work with him
19:20 < kaoD> Coffee is just plain JS
19:20 < kaoD> (a, b) -> instead of function(a, b) {}
19:21 < kaoD> but it's essentially the same
19:21 < kenperkins> I guess I'm off the island then :D
19:21 < euoia> kaoD: I get that - to be fair, my position is not very well informed since I haven't written any coffee script
19:21 < euoia> I am opposed to way it fragments the community
19:22 < kaoD> well, it remains code-compatible with JS
19:22 < bradleymeck> all i want is a fat arrow in v8 really
19:22 < euoia> and the associated tooling
19:22 < kenperkins> kaoD: that said as part of my new job I'm going to invest in learning coffee, typescript, etc
19:22 < kaoD> kenperkins: it sure pays, I'm much more productive in Coffee than I've ever been
19:22 < kenperkins> i hear that alot
19:23 < kenperkins> still though, my official packages are going to stay js
19:23 < euoia> kaoD: but you are also older than you've ever been
19:23 < Havvy> bradleymeck: I'd rather have the minimally maximal class syntax personally.
19:23 < kaoD> euoia: yeah but when I go back to JS I'm LESS productive
19:23 < kaoD> so it's not just going forward
19:23 < kenperkins> :)
19:23 < Ezku> kenperkins: do you have specific objections to writing coffee and publishing both the source and the compiled js?
19:23 < kaoD> Ezku: nice point there
19:24 < kenperkins> Ezku: I haven't digested the source map stuff enough yet, so tbh I'm not informed enough to answer your question
19:24 < kenperkins> Ezku: and it is a good question
19:24 < euoia> perhaps coffee script does funny things to your brain that makes you less productive in javascript
19:24 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:24 < kaoD> kenperkins: the big drawback of doing what Ezku suggest is that Coffee-generated JS is merely a "deliverable"
19:24 < kenperkins> but, until I'm informed enough, I'm going to stick with js :D
19:24 < euoia> I am being facetious
19:24 < Ezku> kaoD: personally, I love the aesthetics of function expressions in coffee. Stuff like (a) -> (b) -> just makes my heart melt.
19:24 < kaoD> you can't edit the JS code and merge it back in Coffee
19:25 < Ezku> kenperkins: fair enough
19:25 < euoia> it is just an aesthetic thing though isn't it?
19:25 < kaoD> euoia: it is
19:25 < kaoD> as I said, Coffee is just JS
19:25 < kenperkins> I also wonder if you're soliciting community involvement in your code, does coffee diminish your pool of potential contributors?
19:25 < kaoD> that's the main point in Coffee
19:25 < bradleymeck> Havvy: unsure on that until it can beat out util.inherits for now , i really like being explicit about `this.*` so thats a non-issue for me
19:25 < euoia> kenperkins: I would say definitely
19:26 < bradleymeck> kenperkins: some yes, i have skipped fixing issues because i saw coffee
19:26 < bradleymeck> in other ppls modules*
19:26 < kaoD> I have skipped fixing issues because I saw JS
19:26 < kaoD> so it's the other way around too
19:26 < Havvy> bradleymeck: The class syntax doesn't help the this.* repetition.
19:26 < kaoD> and, TBH, most people writing Coffee are very talented
19:26 < Havvy> It does put prototype methods in the class body though.
19:27 < kaoD> (you don't move away to Coffee if you don't really know WHY you're moving out of JS, and that requires talent)
19:27 < Ezku> euoia: well, yes, but from beautiful aesthetics follows function as well - you're more likely to use constructions that look good. It's easy to eschew something that makes you trip over with the amount of syntax required although there is a logical equivalence.
19:27 < bradleymeck> Havvy: i thought you were including @, in the things. would need to fix my terminology i guess
19:27 < Havvy> Coffeescript's @ syntax isn't part of ES6.
19:28 < kaoD> Ezku: did you try Coco or other Coffee forks ?
19:28 < bradleymeck> thought you were talking about coffee not es6 given context
19:28 < kaoD> I'm extremely disappointed by some decisions from Coffee devs
19:28 < Ezku> kaoD: I haven't, but I'm familiar with a few from having hanged around at #coffeescript
19:28 < kaoD> e.g. I hate how they got comprehensions totally wrong
19:28 < Ezku> kaoD: do tell
19:28 < kaoD> how they refuse to include object comprehensions
19:29 < Havvy> I thought the 'minimally maximal' prefix would have made it obvious it is ES6.
19:29 < kaoD> the "you can't shadow outer scopes" thing (lots of headaches tracking bugs)
19:29 < Ezku> and by devs you probably mean jashkenas, for he's the evil mastermind after all
19:29 < kaoD> yeah, I mean him
19:30 < kaoD> I TOTALLY mean him :P
19:30 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:30 < Ezku> the object comprehension thing is only somewhat unfortunate, you can't pull off some oneliners but otoh there's no additional syntax either
19:31 < kaoD> Ezku: but it's extremely unpleasant for me... if I use Coffee for succintness, why would I use explicit loops ?
19:31 < kaoD> I HATE explicit loops
19:31 < kaoD> they make me have a hard time reasoning about my code
19:32 < kaoD> it's not about "oneliners", it's about "expressing intentions"
19:32 < bradleymeck> i love explicit things, they let me see clearly whats going on
19:32 < kaoD> bradleymeck: that's cool if you're doing ASM
19:32 < kaoD> :P
19:32 < Havvy> bradleymeck: ASM is *very* explicit.
19:32 < Havvy> Certain expressions shouldn't need to be explicit.
19:32 < Ezku> kaoD: true enough
19:33 < kaoD> Ezku: and the nesting comprehensions thing is just unforgiveable
19:33 < bradleymeck> Havvy: kaoD: true, but magic that does not 100% match intentions makes me angry
19:33 < Ezku> the what?
19:33 -!- mode/#Node.js [+o piscisaureus__] by ChanServ
19:33 < bradleymeck> hard to reason about why the magic fails
19:33 < Havvy> var inced = map(increment, [1, 2, 3]) vs. var arr = [1, 2, 3], inced= []; for (var ix = 0; ix < arr.length; ix++) { inced[ix] = arr[ix] + 1; }
19:33 < kaoD> Ezku: [x, y] for y in [0..1] for x in [0..1]
19:34 < kaoD> that gives a two-dimensional array
19:34 < kaoD> (3d actually because elements are arrays too)
19:34 < kaoD> and there is NO way to loop over two variables but not nest
19:34 < kaoD> Python does it right
19:34 < kaoD> if you want the double dimension you just
19:34 < kaoD> [[x, y] for y in [0..1]] for x in [0..1]
19:35 < kaoD> so the Python comprehensions cover Coffee comprehensions
19:35 < kaoD> but Coffee comprehensions are unable to loop over two variables without creating the double dimension
19:35 < bradleymeck> Havvy: I am not arguing against functions, CS101, or any of that, but even for (x in y) {…} things can get annoying if enumerable was set to false on a part of the prototype that is shadowing a different prototypes default
19:35 < kaoD> that is, Coffee comprehensions are more limited than Python's
19:35 < kaoD> still, they won't change it (jashkenas asserted that he prefer's the Coffee way several times... for some reason)
19:36  * mscdex shakes a fist at coffeescript
19:36 < kaoD> it's not even about backwards compatibility, which will be a valid point
19:36 < Ezku> kaoD: should that not result in [[0, 0], [0, 1], ...]? I'm having a hard time seeing the point in this case.
19:36 < kaoD> Ezku: nope
19:36 < kaoD> in Coffe that results in
19:36 < kaoD> [[[0, 0], [0, 1]], [[1, 0], [1, 1]]]
19:37 < kaoD> which is crearly not what I intended
19:37 < Ezku> ah, sure
19:37 < kaoD> (and how you read it naturally is how I intended)
19:37 < kaoD> you can do [[[0, 0], [0, 1]], [[1, 0], [1, 1]]] in Python surrounding the inner loop in []
19:37 < kaoD> that is a comprehension of a comprehension
19:37 < Ezku> I'm used to wielding the powerful for-expressions in scala, hadn't even thought it would fail
19:37 < bradleymeck> intent is a hard thing to express when people differs
19:37 < bradleymeck> people's interpretation*
19:38 < kaoD> bradleymeck: that's what standards are for, right ?
19:38 < kaoD> and I'm quite aware of Coffee standards
19:38 < kaoD> I just don't like them
19:38 < bradleymeck> kaoD: indeed, but if the standard like Coffee's disagrees with people it makes it just a case of added complexity
19:38 < kaoD> bradleymeck: yep, you're completely right there
19:39 < kaoD> Ezku: so you can do comprehensions of comprehensions in Python to imitate Coffee behaviour, but you can't do single-level comprehensions in Coffee
19:39 < kaoD> (without resorting to .push()ing the array... UGHHHH)
19:39 < Ezku> kaoD: yeah, I got that
19:39 < kaoD> explicit looping again
19:39 < kaoD> apparently jashkenas loves loops :P
19:40 < kenperkins> im tired
19:40 < Ezku> I'm not so sure... I could see it as not wanting to distance the language too far from JS and having to draw the line somewhere
19:41 < kaoD> maybe that's their point, I don't know
19:41 < kaoD> but I might move to Coco because of it
19:41 < kaoD> if I wanted to do JS I'd do JS :P
19:41 < kaoD> and if I wanted to loop, I could still loop
19:42 < Ezku> because, frankly, for-expression transformation in scala is magic enough even when the types backing them up make sense
19:42 < kaoD> but Scala is a mess
19:42 < kaoD> I expect it :P
19:42 < kaoD> Scala for expressions appear less magick-y when you stop seeing for expressions
19:42 < kaoD> they're not for expressions, just generators
19:43 < Ezku> a valid opinion, although not one I share
19:43 < Ezku> I mean the part about the mess. :)
19:43 < kaoD> don't get me wrong, I've done my fair share of Scala
19:43 < kaoD> but oh god it can get contrived
19:43 < kaoD> it has TONS of features
19:43 < kaoD> both from FP and OOP
19:44 < kaoD> and some of them clash on each other IMHO
19:44 < kaoD> e.g. when dealing with Actors and message passing
19:44 < kaoD> Actors do have methods and messages
19:44 < kaoD> and it gets messy if you're not careful
19:44 < kaoD> OTOH, it's a VERY powerful language
19:45 < kaoD> I'd give an eye just to have (proper) pattern matching in Clojure :P
19:45 < Ezku> sure
19:45 < Ezku> oh, you find the pattern matching bad?
19:45 < Ezku> sorry, I read that wrong
19:45 < kaoD> hehe
19:46 < kaoD> yeah, Clojure lacks pattern matching for anything else than arity
19:46 < Ezku> probably should stop flaming proglang discussions after 9pm and go grab a beer instead...
19:46 < kaoD> or you could do both hehe
19:50 < Deithrian> sublime text sure is strange...
19:50 < Deithrian> Does it work like launchpad, when you want to add stuff?
19:51 < Deithrian> I Installed Package Control, so you add urls there for add-ons you want and it auto updates them?
19:52 < kenperkins> so most important question: rMBP 13 or MBa 13
19:52 < euoia> kenperkins: CBP
19:52 < daekano> none of the above
19:52 < euoia> jk
19:52 < kenperkins> CBP?
19:52 < daekano> macbooks are for poseurs
19:52 < Ezku> kenperkins: running the latter right now, and I was so jelly of the retina today...
19:52 < daekano> real men use an abacus
19:53 < euoia> kenperkins: chromebook pixel
19:53 < kenperkins> euoia: ha
19:53 < daekano> it's pretty sexy in person tbh
19:53 < euoia> kenperkins: Linus loves it apparently
19:53 < Ezku> depends on how you use the thing, really
19:53 < deadalus> Deithrian, ctrl+shift+p, then type install, and press enter
19:53 < deadalus> Deithrian, you'll get a list of packages to choose from
19:53 < kenperkins> well, I've already requested either of them, I just don't know which I'm going to get
19:53 < Ezku> if you're on the move a lot, the air can be pretty indisposable, but the pro with retina is pretty sweet and upgradeable too
19:54 < kenperkins> I'll be travelling ~20%
19:54 < euoia> the pro is still quite light
19:54 < Deithrian> deadalus, thank you!
19:54 < kenperkins> also debating buying a ipad mini before I fly
19:55 < kenperkins> since I'll have no lappy yet :S
19:55 < Ezku> euoia: it is, the air's pretty much a question of when do you consider the diminishing returns of decreasing size to be too much
19:55 < Ezku> fwiw I only got the air because I'm such a cheapass
19:55 < kenperkins> i really want the retina, but the weight of the air is appealing
19:55 < deadalus> Deithrian, just a tip, if you want information on a package, just go to github and do a search on it, or go to http://wbond.net/sublime_packages/community
19:55 < kenperkins> since I'll be flying 2-3x a month
19:56 < Deithrian> deadalus, thanks, there's tons of stuff there...
19:56 < euoia> if you're just watching movies on the plane then the air would be fine, but if you're doing actual work I'd take the one with the awesome display
19:57 < deadalus> Deithrian, do a google search for top 10 sublime text 2 plugins, you'll find the cream of the crop :)
19:57 < Gregor> If you're trying to do actual work on a laptop on a plane, you've made a bad decision.
19:58 < Deithrian> deadalus, ty ty :)
19:59 < euoia> Gregor: probably true
19:59 < asdf12> give it a few more months
19:59 < asdf12> air retina display
20:04 < asdf12> is it true dark text on light background is easier on the eyes?
20:05 < euoia> weird problem: ln does not allow you to create symbolic links to non-existent files on Mac OS X
20:05 < cloudbender> Are there alternatives to Adobe for publishing ? (windows)
20:05 < euoia> I had to create a temporary junk file to create the link
20:05 < cloudbender> Illustrator is pretty good.  Considering Corel also.
20:06 < cloudbender> My designer wants a copy for use after hours at home, but I can't fork out an extra g-note for her copy.
20:07 < cloudbender> I know it's not a node question
20:07 < Havvy> asdf12: It's more about the contrast.
20:09 < dwierenga> caon anyone recommend an ORM for mysql?  i looked on the wiki and did npm search.. there's a lot listed and none really stand out.  
20:09 < bradleymeck> clone1018: I use inkscape but about all that it wins on is bitmap tracing
20:09 < bradleymeck> cloudbender: *
20:09 < clone1018> I'm glad.
20:10 < cloudbender> ty brad
20:11 < cloudbender> They (adobe) have a pretty good cloud offering but it involves pre-authorised access to my accounts which will never hapen.
20:11 < cloudbender> never, ever, again
20:12 < cloudbender> If I can't pay for a year in advance they can shoe it.
20:12 < cloudbender> *shove
20:13 < Deithrian> zomg, that bracket highlighter hides the cursor :'(
20:15 < mscdex> dwierenga: a lot of people use sequelize
20:15 < dwierenga> mscdex: thanks. that's currently my leading candidate.  
20:16 < genazt> well sequelize has a leakage of support to many dbs
20:17 < dwierenga> genazt: meaning what, exactly?
20:17 < Deithrian> deadalus, is the typing of "if" + enter = if (true) {}; ,,, a default behavior or that's a package doing this?
20:17 < genazt> https://github.com/1602/jugglingdb
20:18 < mscdex> genazt: he's only interested in mysql though
20:18 < kenperkins> dwierenga: I'm using sequelize in a "productionish" database
20:18 < kenperkins> for infrastructure mgmt
20:18 < genazt> / - currently supported: 'mysql', 'sqlite', 'postgres'
20:18 < kenperkins> at least until I quit this afternoon :D
20:18 < genazt>  currently supported: 'mysql', 'sqlite', 'postgres'
20:19 < genazt> yes but if he wants to add a db (mongo for big documents or redis or something like that) you cant use it
20:19 < genazt> cause it doesnt have drivers / support for it
20:19 < mscdex> imho providing one abstraction for both sql and nosql can't be good
20:20 < genazt> and thats why ?
20:20 < dwierenga> i'm doing financial apps, so document DBs aren't really a concern.  maybe i'd need to query MS Sql Server, but i could forego ORM-y stuff for that.
20:21 < mscdex> because invariably what ends up happening is the abstraction favors one or the other. so you end up either having the sql databases acting like key/value or document store, or you end up having to shoehorn sql-like capabilities onto nosql stores
20:21 < genazt> well its only an orm
20:21 < genazt> not a dbal
20:22 < mscdex> but an sql orm worth using should handle joins and other sql-specific things
20:22 < genazt> well a orm can also handle joins in nosql on application level
20:22 < mscdex> because more often than not you're going to have models that depend on each other
20:23 < genazt> like mongoose-join does
20:23 < deadalus> Deithrian, yup thats one of sublime text 2's features, look into tools->snippets for more info.
20:24 < mscdex> genazt: i'm looking at the mysql adapter for jugglingdb and i do not see where it does any joins
20:25 < mscdex> it looks like it's just treating each table as a simple store
20:25 < mscdex> no inter-model relations
20:26 < genazt> well it doesnt
20:26 < genazt> since it completly uses application layerd joins
20:27 < genazt> which is bad i know
20:27 < mscdex> that's the understatement of the century
20:27 < mscdex> :-)
20:28 < mscdex> anyway, that's really why i recommend something like sequelize since it is designed only for relational databases
20:28 < genazt> why is there not stackexchange passport strat -_-
20:31 < dcbartlett> hello
20:31 < dcbartlett> so, i need to access NPM from within my app
20:31 < dcbartlett> anyone done that before?
20:31 < dcbartlett> specifically, i need to grab the output of npm view <module> as an object i can work with
20:35 < Deithrian> deadalus, ok ty.
20:37 < bradleymeck> dcbartlett: i would just invoke `npm view understudy --json 2>/dev/null` but be aware view will grab from cache first (unsure if you want this)
20:37 < dcbartlett> hum, no i'm actaully looking to have my app check npm for an updated version of itself
20:37 < dcbartlett> so
20:37 < cloudbender> mscdex do you recall me blabbing about couchbase ?  KDM ?  DB4O ?  Not sure if any of those would help.  Also, there is elevateDB.
20:37 < bradleymeck> otherwise http://registry.npmjs.org/$MODULE_NAME will spew out a json dump
20:38 < dcbartlett> i don't think cache would hlep
20:38 < dcbartlett> lol
20:38 < dcbartlett> thanks bradleymeck, i think i could curl that
20:41 < cloudbender> Is anyone here a closet developer on the AdobeWebPlatform ?
20:50 < mscdex> cloudbender: huh?
20:51 < mscdex> cloudbender: i was just making some observations
20:53 < wavded> running macosx, i've noticed that proxies i've written using request are much slower than on linux and i can't seem to figure out what is different (running max osx mountain.lion)
20:53 < wavded> anyone ran into this issue?
20:54 < CoverSlide> MONDAY MONDAY MONDAY
20:56 < asdf12> wavded: are you heavily testing it? probably os limitation
20:56 < asdf12> you need to do some tuning
20:56 < wavded> asdf12: where?
20:57 < wavded> asdf12: it seems like requests are almost running one after another than concurrently, part of me wondered if it was a dns lookup issue but not sure how to inspect it
20:57 < asdf12> this is with low traffic?
20:57 < asdf12> then never mind
20:58 < wavded> asdf12: yes very low traffic, i'm proxying map tiles and they are coming in very slow, do the same thing in a browser, very fast
20:58 < wavded> do it on linux, very fast
20:59 < wavded> i'm very new to osx, doesn't seem to be an strace facility
20:59 < asdf12> i don't know what map tiles are :x, but i don't notice anything, i was just testing some http proxy stuff yesterday
21:00 < wavded> asdf12: map tiles are just jpg image "tiles"
21:00 < wavded> hmm.. weird
21:00 < xPhase> wavded: Try dtruss
21:00 < xPhase> or dtrace
21:01 < wavded> agh truss reminds me of strace
21:01 < wavded> agh = ahh
21:01 < xPhase> yeah, dtruss is basically strace for os-x
21:02 < cloudbender> CoverSlide, in our time zone MONDAY is not for another few days yet.  Or was a few days ago.  I think your WInCLock is pooched.
21:08 < Industrial> Say I have inherited a bunch of mostly browser js and I want to begin the slow TAD process of getting near 80% coverage. Say there are no tests, and I need to test things like components that have draw functions that depend on the DOM being drawn and size of obects being present, to even function. What do I minimally need in terms of environment to test pieces of code like this? I plan to also write some
21:08 < Industrial> generic (environment) tests for code that is not dom dependent, so I could run those in a node.js environment I would guess.
21:09 < Industrial> Can I test these things headlessly?
21:09 < Industrial> Would that allow me to atttach/choose different browsers/versions (which I can host myself)??
21:09 < Industrial> -?
21:09 < bradleymeck> Industrial: webdriver or testling/browserling
21:10 < Industrial> testling is a paid service, no? I'd rather host everything myself.
21:10 < bradleymeck> Industrial: then webdriver it all
21:11 < squeakytoy> anyone can recommend a very easy websocket server module?
21:11 < rump> any node.js dev houses / startups which are doing fascinating and exciting stuff hiring? :)
21:13 < substack> Industrial: testling is completely free for open source repos on github
21:13 < Industrial> I was thinking, since I tried Buster.js and didn't find it production redy, and we are using jsTestDriver right now which is giving problems, to write something like buster myself, beginning with just the node.js environment tests but making a server that queues tests from multiple concurrent clients sequentially nicely, so slave browser sessions don't execute code of different tests etc..
21:13 < Industrial> substack: yes, but this isn't open source.
21:13 < Industrial> (though I love it & the tech.)
21:14 < Havvy> Anybody know a TDD module that allows running code with --harmony ?
21:23 < Industrial> bradleymeck: selenium.getEval, is it?
21:23 < bradleymeck> Industrial: webdriver uses http://code.google.com/p/selenium/wiki/JsonWireProtocol
21:23 < ddsss> So - in production environment - you don't just do: "node http.js" manually - right? Don't you need some m,anager that would restart the process if it crashed?
21:24 < extrawurst> hey guys, someone fancy to test my nodejs based multiplayer game? http://beachwars.de
21:25 < Industrial> bradleymeck: oh, fricken sweet. So I could spawn tabs in different browsers on demand and run tests of a suite/testrun in parallel? or is it a slow sequential process?
21:25 < bradleymeck> yes but a single session must be sequential, can have multiple sessions though
21:26 < Industrial> yeah it will run on a vm with some browsers in different versions.
21:33 < ddsss> how do u deploy on ubuntu? Upstart + monit? -> or are there  other ways?
21:34 < nlf> that's what we do, you can use just upstart if all you want is basic restarting of crashed processes and nothing complicated
21:35 < BlackFate> squeakytoy, socket.io?
21:35 < ddsss> nlf how about memory managament? I mean - is there a way to set  limit on Node process? or am I reading it wrong?
21:36 < squeakytoy> ive heard that socket.io is slow, since its built to support legacy browsers
21:36 < nlf> set a limit in what way?
21:36 < squeakytoy> or, there is a lot of overhead
21:36 < nlf> squeakytoy: use engine.io then
21:36 < nlf> it's basically just the pure websockets backend from socket.io
21:36 < ddsss> nlf, I mean - if I understantd correctly - node is a single process - right?
21:36 < nlf> ddsss: correct
21:36 < substack> squeakytoy: socket.io has a custom packing protocol to support its event system
21:36 < nlf> well, unless you write it differently, but typically yes
21:36 < squeakytoy> nlf, i will look at it, thanks
21:36 < substack> the event packing makes it slower than raw websockets which engine.io layers on top of
21:37 < substack> or if you like streams: https://github.com/substack/shoe
21:40 < jocafa> "He wants a shoehorn, the kind with teeth."
21:46 < ddsss> I hate it when my vpn craps out and I talk for 10 minutes to who knows where:)
21:51 < MI6> joyent/node: isaacs master * ea30ca9 : doc: Add wrk's license to LICENSE file - http://git.io/JAYrtg
22:05 < bradleymeck> ddsss use OS limits (unix rlimit or Jobs on windows) always when limiting resources
22:06 < djshotglass> https://github.com/thedjpetersen/subway
22:06 < djshotglass> anyone know of something like that for Google Talk?
22:08 < ddsss> djshotglass, zmpp browser client.
22:08 < ddsss> djshotglass, http://xmpp.org/xmpp-software/clients/
22:08 < ddsss> s/zmpp/xmpp/g
22:08 < ddsss> bradleymeck, how exactly does one use rlimit?
22:08 < lamarus> I am working on learning node.    I have a question about a post request.   my app.js file is here  http://pastebin.com/H0XbWcPu along with the request (at the bottom)  the request is being made to localhost:3000/users and I get a response with undefined.... what am I missing?
22:09 < djshotglass> i suppose i should explain what im trying to do. i run hotspots with force users to a login page and want users to be able to chat with me
22:09 < djshotglass> via my gmail preferably
22:09 < djshotglass> so i can do it on my cell
22:09 < djshotglass> maybe even a sms gateway would work
22:10 < bradleymeck> ddsss: http://linux.die.net/man/2/setrlimit or one of the posix modules off npm should do the trick
22:12 < ddsss> bradleymeck, sweet.
22:18 < MI6> joyent/node: hheennrryy@gmail.com master * 9f4c3b0 : http: check if incoming parser has already been freed  Fix #4948  This ad - http://git.io/i4EKVw
22:37 < blocky97> hi i'm new to node and http://socket.io/ …i have a dumb question….. we have a web app, and that web app has a paginated list….(thousands of records) … my boss wants to do the following…from a node server, make a request to our REST servers to get the JSON of the 1k of records.  Then using http://socket.io/ have a connection to the client and after n records have the client emit an event to get the next n records…. i.e. basically making t
22:38 < MI6> joyent/node: isaacs master * 632b7d8 : Revert "http: check if incoming parser has already been freed"  This reve - http://git.io/OFPXSA
22:49 < MI6> joyent/node: Ben Noordhuis master * e325ace : buffer: speed up ascii character scanning  Speed up ASCII character scann (+1 more commits) - http://git.io/undodw
22:50 < MI6> joyent/node: isaacs master * 29cd0f2 : domains: Handle errors thrown in nested error handlers  If a domain error - http://git.io/5elRzg
22:59 < MI6> joyent/node: isaacs windows-test-fixing * 7dfe074 : test: Kill zombies when debugger-client fails on windows (+7 more commits) - http://git.io/TDJudQ
23:07 < Industrial> By what metric should I decide that creating a new process (e.g. with the cluster module) is needed? when the CPU usage of the node pocess is 100%? Would it be a bad idea to poll for that and then launch another worker? and then figure out when and why to kill workers eventuallly after the load drops?
23:08 < genazt> if you have the power and you dont need it somewhere else you should spawn them on start
23:08 < genazt> cause it creates a start delay if you spawn up new forks (cluster childs)
23:08 < Industrial> So I can't make it only use the power it requires over time?
23:09 < Industrial> genazt: but they report when ready? if so then thats fine.
23:09 < genazt> yes cluster forks report when they are ready
23:10 < genazt> but why should you only spawn them up if you have a load ?
23:10 < genazt> why dont u spawn them up and let them be there 
23:10 < genazt> if you have no load they dont get used
23:11 < genazt> if you have the load they get used without the starting delay
23:12 < Industrial> well, if I make many services that are little nodes in a netowkr eg one cor accoutns one for transactions whatever .., I should spawn workers for every core for every service? wouldn't thaat get a bit crowded what if a node can deice on itself that it needs more capacity temporarily?
23:12 < Industrial> scuse my typos
23:13 < genazt> well if you have more than one app in one node process its okay
23:13 < genazt> it can run but it scales not very well
23:13 < necolas> is there somewhere i can read about how npm works? e.g., what it does when you try to publish a folder (does it store a copy in the registry?); what if I publish a folder (of compiled assets) and then someone uses a git url for the dep value instead and needs to build the dist assets?
23:14 < genazt> necolas, yes npm does make a tar.gz from the folder and stores it at npmjs
23:15 < azylman> Has anyone here ever worked with the v8 stack trace api? I'm wondering if there's an accepted method to override Error.prepareStackTrace to prevent conflicts if you're using more than one library that overrides it
23:15 < genazt> and if he needs to build the assets you should make a bin script for that in the package.json
23:16 < inspiron> anyone know an example where people are using package.json's "domains" section in the code?
23:16 < necolas> genazt: thanks. that script wont be run automatically though right?
23:18 < maxme> Is there a current guide of any sort to writing node modules idiomatically?
23:18 < maxme> Or best practices?
23:22 < genazt> necolas, no
23:24 < tester_testing> hi I got a curious problem with mongodb and nodejs, I use mongodb-native I can insert and query objects.I have a setup driven by events to ensure atomicity of operations, but I have a problem finding an element by _id, here is a roughdraft of the setup I have http://jsfiddle.net/pJYTj/1/
23:25 < tester_testing> the problem is: when I look in the data passed along with prettyprint(function is similar to print_r under php) everything is as expected, BUT mongo isn't finding the element identified by it, BUT as soon as I hardcode it into the query
23:25 < tester_testing> the element is found, what am i doing wrong here?
23:43 < sevenup> (trying to install jsdom)     my python exe is here:     J:\Programme\eigene\python              what value do I need for my   PATH env variable  ?
23:46 < distilledchaos> sevenup: you're...asking how to add python to your path?
23:48 < tester_testing> regarding my problem : neve rmind, edited the wrong operation in the wrong file utilizing the same method .... for far too long -.-
23:50 < tester_testing> sevenup, scnr here http://lmgtfy.com/?q=editing+PATH+variable+windows
23:52 < sevenup> @distilledchaos : right
23:53 < distilledchaos> sevenup: tester_testing has the right idea
23:54 < sevenup> tryed google 5hours ago
23:54 < distilledchaos> sevenup: win7, vista, xp?
23:54 < sevenup> xp
23:55 < tester_testing> sevenup, searching in english might help, not german only, or german if you can't find results( since one askes questions differently in other languages(don't know your approach))
23:55 < distilledchaos> start -> control panel -> system -> advanced
23:55 < sevenup> yes
23:55 < distilledchaos> environment variables -> system variables
23:55 < distilledchaos> find the PATH variable
23:55 < sevenup> ok
23:55 < distilledchaos> append ";J:\Programme\eigene\python" (without the quotes)
23:56 < distilledchaos> close the windows you've just opened
23:56 < distilledchaos> you may need to restart your computer
23:56 < distilledchaos> but you can do something similar in a single command problem
23:56 < distilledchaos> prompt*
23:56 < distilledchaos> with set PATH=%PATH%;J:\Programme\eigene\pytho
23:56 < distilledchaos> that'll work until you close the command prompt
23:57 < distilledchaos> source: http://java.com/en/download/help/path.xml
23:57 < sevenup> what name do i assign to the Path
23:58 < sevenup> python or PYTHON?
23:58 < sevenup> or PYTHONPATH
23:58 < tester_testing> sevenup, that are 2 different things
23:58 < sevenup> yes its a second question
23:58 < tester_testing> PATH is the defual texecutable searchpath for the shells and almost all executables
23:59 < tester_testing> some enviroment search for special paths like ANDROIDSDK or JAVA_HOME in that case create a new path using the set command as well
--- Log closed Sat Mar 09 00:00:00 2013
