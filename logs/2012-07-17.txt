--- Log opened Tue Jul 17 00:00:29 2012
00:08 < fent> any cli args parser recommendations?
00:08 < russfrank> fent: optimist
00:08 < russfrank> https://github.com/substack/node-optimist @fent
00:09 < tnorris> fent: commander or electron
00:10 < tnorris> http://visionmedia.github.com/commander.js/, http://alogicalparadox.com/electron/
00:11 < fent> russfrank and tnorris: thank you i'll take a look at them
00:13 < fent> how about a module for printing a progress bar in the terminal?
00:17 < pawn> memcache isn't persistent, so why go with it for a session store?
00:17 < SubStack> fent: I wrote one of those https://github.com/substack/node-multimeter
00:19 < fent> SubStack: cool. thanks
00:20 < pawn> Oh hey SubStack. :)
00:32 <@maxogden> SubStack: whoa multimeter rulez
00:38 < austinbv> so the sinon package, does it not have Faker server and fake xmlhttp
00:40 < rvagg1> austinbv: pop in to #buster.js, you'll find @cjno in there or at least someone else who knows Sinon quite well
00:42 < austinbv> cool thanks
00:44 < austinbv> not around atm
00:51 < z1y> Hello, how can I specify NODE_PATH, NODE_ENV as options of the command `node`? Is there something like "node -e production" ?
00:51 < SkareCrow> z1y, `NODE_ENV=production node app`
00:51 < livinded> NODE_ENV=production node app
00:52 < z1y> SkareCrow: I know that, but it's not good way on my system that allows only the command "node" via sudo
00:52 < livinded> just environment variables. Not sure how the windows world works but any sane platform should be the same
00:52 < livinded> SkareCrow: any system that requires you to use sudo to start node is broken
00:52 < z1y> I can only run "sudo node <options>"
00:52 < livinded> errr z1y
00:53 < livinded> regardless you should still be able to do sudo NODE_ENV=production node app
00:55 < z1y> livinded: thanks, I will try again
00:56 < z1y> livinded: it works :) Many thanks :)
01:05 < pawn> Are no.de and nodejitsu both the same now?
01:06 < pawn> What is a drone on nodejitsu?
01:25 < jcrew> it spies on citizens
01:28 < prettyrobots> Who does what now?
01:29 < austinbv> so when writing async code in objects you really cannot return a value
01:30 < austinbv> I wanted a Object level method to fetch and initialize an array of instances from an api but I cannot really do that can I 
01:33 < CIA-93> node: isaacs v0.8 * rd6b78d0 / (lib/domain.js test/simple/test-domain-stack.js): domain: Fix stack leak on error - http://git.io/9n4flA
01:33 < CIA-93> node: Pavel Lang master * rff14007 / (3 files in 3 dirs): Enable color customization of `util.inspect` - http://git.io/mS_LGA
01:35 < CIA-93> node: George Shank master * r8721667 / (doc/index.html doc/images/forkme.png): doc: update 'Fork me at Github' ribbon - http://git.io/3txOsA
01:35 < CIA-93> node: Bert Belder master * r23dc099 / benchmark/tls-connect.js : benchmark: add single process tls connection benchmark - http://git.io/_Eo99A
01:35 < CIA-93> node: Mike Morearty master * r19aa05f / doc/api/child_process.markdown : doc: fix bug in child_process.spawn() sample code - http://git.io/IvYvsQ
01:35 < CIA-93> node: isaacs master * rd6b78d0 / (lib/domain.js test/simple/test-domain-stack.js): domain: Fix stack leak on error - http://git.io/9n4flA
01:35 < CIA-93> node: isaacs master * r8973c3d / (4 files in 4 dirs): Merge remote-tracking branch 'ry/v0.8' - http://git.io/YioPvA
01:40 < Init--WithStyle-> Hey all, i have a nodejitsu question
01:40 < Init--WithStyle-> is there a nodejitsu IRC?
01:41 < tim_smart> Init--WithStyle-: /join #nodejitsu
01:41 < jesusabdullah> Init--WithStyle-: There sure is
01:51 < CIA-93> node: isaacs master * r0109a9f / (src/node.cc src/node.js): Move MakeCallback to JS - http://git.io/Y8ldFw
01:51 < wao> \o/
01:51 < Phuc> Hi all, can you help me how to scrape data from a website with one nodejs library?
01:51 < Phuc> lightweight
01:52 < rvagg> one library? that's a tall order
01:52 < rvagg> request + cheerio is a good combination
01:52 < Phuc> yeb
01:52 < Phuc> library
01:54 < Phuc> that site is realtime data, so I will send request each 30s 
02:05 < thlorenz> quit
02:12 < Raynos> Error: forbidden New packages must have all-lowercase names: routil-mediaTypes
02:12 < Raynos> npm when did you decide this?
02:12 < npmbro> Raynos: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20when%20did%20you%20decide%20this
02:20 < chilts> npm what is the meaning of life?
02:20 < npmbro> chilts: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20what%20is%20the%20meaning%20of%20life
02:20 < chilts> heh
02:39 < _Tristan> WHY DOES NPM HATE ME <_>
02:40 <@maxogden> you are probably doin it rong
02:41 < _Tristan> no, this time npm is doing it wrong.
02:41 < joshgillies> what's it doing wrong exactly?
02:43 < _Tristan> if I run npm install blahblah, it works. If I do child_process.spawn('npm', ['install', 'blahblah'], {stdio: 'inherit'}) then it installs every dependency except blahblah.
02:46 < benatkin> Raynos: https://github.com/isaacs/npmjs.org/commit/a4a9627c199fdebc73705bd28cf0d3869b131820
02:47 < Raynos> benatkin: so that was deployed last night
02:48 < benatkin> Raynos: yeah, it's pretty solid, there's no way getting around it when it happens at the database level
02:48 < benatkin> Raynos: so it must've been
02:56 <@isaacs> _Tristan: npm is incapable of hatred, haven't you read the faq?
02:56 < _Tristan> at this point, I am the faw
02:56 < _Tristan> er, FAQ
02:57 <@isaacs> _Tristan: gist the code, please.
02:57 < _Tristan> if the server hosting the FAQ went down right now, my brain would seamlessly take over, and nobody would even notice.
02:57 < _Tristan> I've already figured it out, though. In order to properly update the program, I need to npm update thing && npm install thing
02:58 <@isaacs> _Tristan: you can run `npm faq`
02:58 < _Tristan> fair point
02:59 < aroman> when socket.io is using the xhr-polling transport, when does "disconnect" fire?
03:00 < SubStack> aroman: I know socket.io has a pinging mechanism, maybe it uses that
03:02 < aroman> yeah, this 'heartbeat' system. That's what I'd expect it to use, but it looks like it's actually being fired whenever the xhr poll expires.
03:29 < alejandromg> Hey guys I saw a fix about "pure virtual method called" but it seems that's is not working in my case. https://gist.github.com/cf7962ed2120c99671ff anyone?
03:44 < fent> anyone know how to access the `ClientResponse` instance with the request module as soon as it becomes available? Instead of after buffering the entire body?
03:44 < fent> there was an option for it called `onResponse` which is now gone. wondering what it was replaced with
03:47 < fent> ok nevermind. found it in source that it emits a `response` event
03:47 < samholmes> Would it be best to develop a small team for a startup project if I don't know anyone personally (no "friendship" connections) with adaquate web development experience and knowledge, or would be best to just remain solo on a project until in gains enough traction to then hire out at a formal level?
03:48 < samholmes> I'm coming to #node.js with this quesiton because the technologies I'll be using will definitely center on node.js, and I feel like a lot of folks here are experienced in managing and working in a team.
03:51 < chilts> samholmes: in some ways it depends on your own experience too. Can you code node? What is the expected time from starting up to making money? When do you want to start being profitable?
03:51 < enmityxero> sam: depends on what you want
03:51 < chilts> lots of questions which you (and only you) probably have to figure out
03:53 < samholmes> chilts: me and my partner actually. Right now, I handle all of the development process and he handles the business/funding aspect. But what he needs for the business plan is to know what will be needed for this project to lunch with the intent to profite immediately (or the opportunity is immediate, actual results may take time, but the goal is a fast growth).
03:55 < samholmes> I've been programming for many years, ~6-8 years. Started with PHP, then JS (front-end). I've only recently started work with the node framework (february), but I have picked it up pretty rapidly and have been builting the project sense then. I suffer from the dunning-krugger effect, greatly, so I don't know how I compare with other programmers, because I've mainly kept to solo dev, never team work.
03:56 < sweb> heloo i'm newbie in node.js ... what's different between node.js and nginx ? can node.js be as primary web server for enterprise application or just can be uesed as some feature like socketing program like chats ...
03:57 < samholmes> So, how could I know how to build a team and how much it'll cost, how big should it be, what sort of environment should I keep for the team (office, studio, or remote), what sort of relationship should I have with the team, formal or hackeresque.
03:59 < samholmes> How much would a typical node.js back-end developer go for hourly?
04:00 < enmityxero> Unless you're really serious, I'd recommend not putting too much money into the project (ie, don't hire people, pay for relocation, lease an office space, etc) when remote is fine. I'd keep relationships strictly professional, as well. It depends on the developers and their experience how much it'll cost. I'd assume there are still freelance listings where you could research hourly wages for node developers
04:03 < rhl> Hi. I have a centos6 box. I am trying to use npm install on a project I found from github. It is having trouble installing 'canvas'
04:04 < rhl> it seems unable to find cairo, even the package is installed.
04:04 < rhl> note, I do not have root on this machine
04:08 < _ohm> Trying to create a TCP server that reads data. Can connect but for some reason can't read data. http://pastebin.com/MYxjw5q9 Can anyone point out my error?
04:12 < owen1> i use http.request and sometimes the 'end' and 'close' event never being called. any idea why and how to troubleshoot this?
04:14 < tim_smart> _ohm: https://gist.github.com/d2415fabf59feeec430d
04:24 < tnorris> tim_smart: just curious, won't that fail if there are multiple connections at the same time, or will a new buf array be created for each connection?
04:25 < tim_smart> tnorris: The function passed to net.createServer is attached to the 'connection' event
04:26 < tim_smart> tnorris: If I pushed the buf declaration up a scope, then you would run into problems.
04:27 < tnorris> tim_smart: mother effing... wish someone had mentioned that on this post: http://stackoverflow.com/questions/10489168/node-send-large-json-over-net-socket
04:28 < tnorris> would have been a lot easier than modifying the json string and always checking for a specific character at the end of each 'data' event.
04:31 < unomi> Anyone up for showing me the light re Mongoose?
04:39 < tim_smart> tnorris: https://gist.github.com/d2415fabf59feeec430d
04:39 < tim_smart> tnorris: Reasonably clean solution
04:40 < tuhoojabotti> tim_smart: The indentation seems funky
04:41 < luckysmack> is the preferred db backend with node to use mongodb? or something like couchdb?
04:42 < tnorris> tim_smart: would it be the same if I didn't run the '\r\n' check and just called gotBlob on the 'end' event?
04:42 < tnorris> tuhoojabotti: really? for instructional purposes I found it useful to have all the vars lined up like that.
04:43 < tim_smart> tnorris: Depends if you are expecting more than one blob of json per connection
04:43 < tim_smart> tuhoojabotti: Better now?
04:44 < tuhoojabotti> yeah, somewhat
04:44 < tuhoojabotti> tim_smart: Also burn in hell for not using semicolons. :)
04:44 < tim_smart> tuhoojabotti: At least my pinky won't be burning.
04:45 < tuhoojabotti> I'm sorry.
04:45 < tim_smart> tuhoojabotti: I'm a symbol first, non-semicolon hipster
04:45 < tuhoojabotti> tim_smart: Yes, I can see that.
04:46 < tuhoojabotti> tim_smart: So have you heard about coffee script?
04:46 < tuhoojabotti> It's pretty hip, I hear.
04:46 < tim_smart> tuhoojabotti: I don't like it
04:46 < tuhoojabotti> :P
04:46 < tnorris> tim_smart: ah (light pops on). on my SO question I was never expecting multiple JSON's. I just didn't realize that the createServer fn was for each connection.
04:47 < tnorris> so I thought that it would overwrite my variable storing the chunked data.
04:47 < tim_smart> tnorris: Right.
04:48 < tim_smart> tuhoojabotti: I find worrying about ASI less annoying than enforcing semicolon styleguides.
04:49 < tim_smart> And I didn't even come from rails :)
04:49 < tnorris> now this line from the docs has more significance: "The connectionListener argument is automatically set as a listener for the 'connection' event."
04:50 < tnorris> tim_smart: well, thanks for clarifying that. thanks to you there will be a little less stupid code in the wild.
04:50 < tim_smart> tnorris: Or a bit more good code.
04:50 < tnorris> heh, yeah. nice way to look at it.
04:51 < austinbv> when you use utils.inherets in a module do you still export the main constructor
04:51 < livinded> tim_smart: there's a few good ruby/rails devs out there
04:51 < austinbv> if that's what your exporting
04:51 < austinbv> or do you export the utils.inherets
04:53 < owen1> anyone have a guess why sometimes my request to a remote server never emit the 'end' or 'close' event? https://gist.github.com/3126249/ lines 167-197
04:53 < tim_smart> livinded: Definitely. Ruby programmers generally understand the role of easy to read code better than most.
04:53 < austinbv> what about rails :)
04:55 < tim_smart> owen1: You need to learn how to flatten out your code more ;)
04:55 < owen1> tim_smart: yeah. it's a friend. i have a better version..1 sec
04:55 < tim_smart> Especially when using tabs as the indent character :p
04:57 < owen1> https://gist.github.com/3127261
04:58 < ljharb> owen1: don't use "new Object()". use "{}"
04:59 < owen1> ljharb: good point. what's wrong with new, btw
04:59 < ljharb> owen1: also you should only wrap the JSON.parse in a try.catch
04:59 < ljharb> owen1: it's longer and gives you no benefits over the literal.
05:00 < ljharb> owen1: also don't be afraid of putting spaces after commas and around '+'
05:00 < tbranyen> yeah man, don't you wanna be coool
05:00 < tim_smart> Hmm I might try using 8 character tabs as my indent character. Will definitely make me more sensitive about whitespace
05:01 < tbranyen> tim_smart: that sounds like a bad idea
05:01 < ljharb> i'll ignore your trolling and say 4 char tabs are the best.
05:02 < tbranyen> i'll ignore your trolling and say 2 char soft tabs are even better.
05:02 < tim_smart> tbranyen: I use 2 character soft tabs now, I might give 8 char hard tabs a shot.
05:02 < ljharb> if by "soft tab" you mean spaces, ew. i recommend the character that means only one thing: "indentation"
05:03 < tnorris> ljharb: linus torvalds will say you're an idiot, and 8 spaces is "the only sane solution"
05:03 < tnorris> ;)
05:03 < Lorentz> 12
05:04 < tim_smart> Over 9000. Really wide monitor for the win.
05:05 < ljharb> thats the beauty of tabs. you can set it to an 8 space width if you like and nobody else can, like a fascist, impose their indentation width on you.
05:05 < tim_smart> 18000 spaces really makes you regret pressing tab twice
05:05 < owen1> ljharb: great feedback. any clue why a some request never emit 'end' and 'close' events?
05:05 < tnorris> wow, i'd need to implement horizontal folding in vim for tabs like that.
05:06 < tnorris> owen1: i'd guess that the server isn't emitting the end/close event.
05:06 < tnorris> your connection will only emit that event if it's received by the server
05:07 < owen1> tnorris: %80 of the time i get those events
05:07 < ljharb> you mean 80%?
05:07 < owen1> ljharb: yeah
05:08 < austinbv> how do you mix event emmiter on the object level rather than the prototype level
05:10 < tnorris> owen1: um, small thing, but httpCallback isn't declared. so it's going global.
05:11 < tnorris> doubt that is causing the problem, but just want to make sure.
05:11 < tim_smart> Not too bad: https://gist.github.com/d2415fabf59feeec430d#file_tcp_tab.js
05:11 < owen1> tnorris: good call!
05:11 < tim_smart> Definitely less straining on the eyes figuring out the columns.
05:13 < austinbv> noone?
05:13 < tim_smart> austinbv: my_object.__proto__ = EventEmitter.prototype
05:13 < tnorris> tim_smart: that's the way torvalds sees it (ch.1 http://www.kernel.org/doc/Documentation/CodingStyle)
05:14 < tim_smart> austinbv: Might have to call EventEmitter.call(my_object) also
05:14 < tbranyen> ljharb: recommendation noted
05:17 < austinbv> tim_smart: on the object level not the prototype level
05:17 < tim_smart> austinbv: That was the object level
05:17 < austinbv> on only exists on instance then
05:17 < TimeTurner> that's as close to the object level you can get
05:19 < TimeTurner> function something() { this.aproperty = {}; this.bproperty = {} }; var myobj = new something();
05:19 < TimeTurner> there
05:19 < ljharb> ew, new.
05:19 < TimeTurner> just don't add anything to something()'s prototype and it'll work the way you want
05:20 < TimeTurner> well there isn't any ES5 syntax for instance-level property assignment
05:20 < tim_smart> austinbv: https://gist.github.com/8c6ff79c23b6a1ef5825
05:20 < TimeTurner> so we're stuck with new for the specific purpose austinbv wants
05:21 < ljharb> TimeTurner: i was saying ew to all forms of inheritance. but instance-level property assignment is just foo.bar = true
05:21 < tnorris> owen1: so to make sure I understand the problem, you're receiving an 'end' event at times w/o receiving a 'close' or 'error' event?
05:22 < tnorris> i mean, you're not receiving any of the three events (end, error or close)?
05:22 < austinbv> maybe you can advise on a better method from what I want, I am have a "Class" method Word.getNouns that fetches from an API I want to then when the response finishes trigger an event that the response finished parse and retrun the treult
05:22 < TimeTurner> but how would you perform property assignment via a factory-style?
05:22 < TimeTurner> that would be through functions only right?
05:23 < austinbv> sorry sticky keyboard
05:23 < ljharb> austinbv: you shouldn't use the word "Class" because it will confuse people who think javascript has classical inheritance.
05:23 < ljharb> TimeTurner: i don't understand. to set the foo property on instance, you just do instance.foo = 'bar'
05:23 < austinbv> ljharb: I know I get that everytime
05:24 < ljharb> austinbv: that should be a good indicator to follow the advice :-)
05:24 < TimeTurner> ah wait yeah
05:24 < austinbv> it's just easier to explain and then you don't have the confusion of whats going on :/ but I do try not to
05:25 < owen1> tnorris: there is no 'error' event to response, btw. most of the times i get the end event. but sometimes i don't get 'end' or 'error'. nothing.
05:25 < TimeTurner> var myobj = {}; function assignProperties(obj) { obj.a = {}; obj.b = {} }; assignproperties(myobj);
05:25 < ljharb> austinbv: i just told you why it makes it harder to explain :-)
05:25 < TimeTurner> man...what is the whole point of constructor functions then
05:26 < TimeTurner> we need to get rid of them! :/
05:26 < austinbv> sorry :/
05:26 < ljharb> i agree.
05:26 < tim_smart> TimeTurner: That should only be done if you want the instance properties to be shared.
05:26 < tim_smart> *don't want
05:26 < ljharb> inheritance is an antipattern imo.
05:26 < TimeTurner> tim_smart: exactly, that was the intention
05:27 < aroman> any utilities for turning a URL into an HTML link?
05:27 < TimeTurner> I would literally pay to remove constructors from the spec and every JS engine to remove it from it's implementation
05:27 < tim_smart> The main plus for prototypes is the optimizations it provides, due to shared methods (less memory usage) and v8 hidden classes.
05:28 < ljharb> aroman: yes. 'click'.link(url)
05:28 < tim_smart> Meaning property lookup is faster on prototypes vs objects.
05:28 < TimeTurner> Object.create() is literally all you need
05:28 < TimeTurner> but the biggest problem is that v8 doesn't optimize it...I wonder why
05:28 < tnorris> owen1: do you know if the connection to the server has been severed when these events haven't fired?
05:29 < aroman> ljharb: whoa, that's great. I wonder why threads like this exist then? http://stackoverflow.com/questions/37684/how-to-replace-plain-urls-with-links
05:29 < tnorris> or if the connection just remains open after receiving data?
05:29 < austinbv> so no better way
05:29 < owen1> tnorris: how can i verify that?
05:30 < ljharb> aroman: my method just works on one url. thats good for lots of them
05:30 < tnorris> owen1: you on linux?
05:31 < owen1> tnorris: i got both. currently on mac but can use debian
05:32 < tnorris> owen1: i'd just suggest using `netstat -nat` (sure there's a mac equivalent) and greping for connections to your script.
05:33 < owen1> tnorris: i'll give that command a try!
05:33 < tnorris> owen1: if the connection has closed, but you haven't received an event, then there's some debugging that needs to occur in node.
05:33 < tnorris> else the server just isn't closing your connection
05:34 < owen1> tnorris: that command is working on mac. i am running it but don't know what to look at (:
05:36 < tnorris> owen1: try the following command: `lsof -Pnl +M -i4`
05:36 < tnorris> that will list all the files that have opened to a specific port
05:37 < tnorris> then just grep for the name of your script
05:38 < tnorris> owen1: if lsof doesn't work then try the following: `netstat -npt`
05:38 < tnorris> and again grep for the name of your script
05:40 < owen1> tnorris: lsof works. i don't see anything related
05:41 < owen1> tnorris: i see node a few times, but after my script is done, there are no more nodes there
05:43 < tnorris> owen1: but you aren't seeing any close/end/error events?
05:43 < tnorris> owen1: i'm sure you figured this one out, but don't grep for the name of your script. grep for the `node` process.
05:43 < tnorris> sorry, getting late.
05:44 < owen1> tnorris: for most requests i see 'end', but for a few i don't see close or end. error is not available for response object.
05:44 < owen1> tnorris: yeah. i am looking for 'node'. not the script name.
05:47 < tnorris> owen1: this command may make the process a little simpler: `watch -n 1 -d 'lsof -Pnl +M -i4 | grep node'`
05:47 < tnorris> it should highlight changes as they go in and out.
05:48 < tnorris> ok. so if you can confirm that there are connections coming in that are disconnecting but aren't closing, then
05:49 < tnorris> I might suggest creating a queue of all your connections as they come in.
05:49 < tnorris> then remove them from the queue as they close/end
05:51 < tnorris> have a reoccurring timer that logs all the connections that still exist in the queue along with their connection information.
05:51 < tnorris> (just thinking of ways to gather information on the problem)
05:52 < owen1> tnorris: great. thanks you for those insights
05:52 < tnorris> np. hope they help.
05:52 < tnorris> strange problem you're having.
05:52 < niallo> why does nave default to building a debug version of node?
05:53 < tnorris> owen1: if all else fails then add a 'last data received' entry to the queue and then every so often loop through and force close the connections that have timed out.
05:53 < tnorris> it's a really dirty way of solving your problem, but it's sure to work.
05:55 < tnorris> niallo: just curious, is there any output with the following:> echo $NAVE_DEBUG
05:55 < owen1> tnorris: cool
05:56 < niallo> tnorris: https://github.com/isaacs/nave/blob/master/nave.sh#L193
05:56 < tnorris> niallo: nm, typed faster than I processed your question
05:56 < niallo> i do not have NAVE_DEBUG set
05:57 < niallo> the reason i ask is because a debug node version tells node-gyp to build in debug mode, which confuses some modules (zmq, for example)
05:57 < tnorris> niallo: yeah. in the README isaacs has "since I'm usually using nave to test npm"
05:57 < tnorris> so it might just be a convince setting for him.
05:58 < niallo> fair enough.
06:00 < EhevuTov> BRB. According to Randal Schwartz of Perl fame, I need to go throw my keyboard away: https://plus.google.com/u/0/105487854388646525021/posts/icBfvrJgerQ
06:02 < tnorris> EhevuTov: that is hilarious.
06:03 < EhevuTov> tnorris, I know, right? *sigh* I remember back in 1998 in #perl, Randal pointing me to a tutorial on MySQL or something
06:04 < distracteddev> I currently have an npm package that installs my shell script into the users path. Everything works fine on Unix, but how do I make my script run on a Wndows box? (Since windows doesn't have sh)
06:04 < tnorris> distracteddev: that depends on the node version you require. if you're running 0.6.x then they are required to use cygwin or the like, so no worries.
06:04 < EhevuTov> I remember waking up to all the possibilities and getting so passionate and full of ideas because of Perl. I have that same feeling with JS and Node now
06:05 < TimeTurner> owen1: https://github.com/visionmedia/debug
06:05 <@maxogden> ahahahaha http://www.youtube.com/watch?v=8HzclYKz4yQ&feature=player_detailpage#t=1360s
06:05 < distracteddev> tnorris: what about 0.8?
06:05 < TimeTurner> express already works with NODE_DEBUG but it basically has visiomedia/debug as a dependency
06:05 -!- maxogden changed the topic of #Node.js to: node.js - hopefully we get crockforked soon http://www.youtube.com/watch?v=8HzclYKz4yQ&feature=player_detailpage#t=1360s
06:06 < TimeTurner> grr, forgot to scroll down
06:06 < TimeTurner> sorry about those lol ^
06:06 < tnorris> distracteddev: sorry, can't help you. maybe someone else can give you an idea.
06:06 < EhevuTov> maxogden, you just blew my mind. Never new you could send a link with a video pre queued to a certain point
06:07 < EhevuTov> distracteddev, what are you trying to do?
06:07 <@maxogden> yea since like 2008
06:07 <@maxogden> &t=1m05s
06:07 < distracteddev> EhevuTov: I am trying to get this: https://github.com/distracteddev/deps/blob/master/deps to work on windows
06:07 < EhevuTov> maxogden, dude, don't rub it in :-)
06:07 <@maxogden> hahah
06:07 < distracteddev> it works great on unix, but I am guessing the first line needs to be different for windows boxes
06:08 < owen1> TimeTurner: thanks
06:09 < EhevuTov> distracteddev, can you bundle your app with a simple .bat script?
06:10 < distracteddev> EhevuTov: Can i run my script within a node environment through a .bat? If so, then yes.
06:10 < EhevuTov> distracteddev, there are plenty of multi-platform modules and apps out there on github that you could study.
06:10 < distracteddev> I am looking for examples, but so far no luck. All of them just have this line at the top
06:10 < EhevuTov> distracteddev, I think at one time and maybe currently, node apps were actually ran through a batch script for aliasing
06:10 < distracteddev> apparenltly, it works fine for users who use Cygwin, but now that 0.8 is out a lot of people dont
06:11 < distracteddev> Have any modules in mind that install a executable to your path?
06:11 < distracteddev> I guess express does
06:11 < EhevuTov> yeah
06:11 < EhevuTov> express?skeleton...
06:12 < EhevuTov> I'd find a simple module that installs globally
06:12 < EhevuTov> global modules are usually really just executables that work from your PATH
06:13 < distracteddev> EhevuTov: So Express just has the same line, and I cant find skeleton
06:13 < distracteddev> npm docs skeleton
06:13 < npmbro> distracteddev: Please see http://github.com/EtienneLem/skeleton#readme
06:14 < EhevuTov> distracteddev, I wonder if 'skeleton' works on windows. Try to do an 'npm i skeleton -g' on windows and see if skeleton works. If so, study that project
06:14 < distracteddev> yay
06:15 < EhevuTov> distracteddev, npm docs nodemon
06:15 < distracteddev> EhevuTov: Bah, same line at the top nd nothing else.. maybe I'm just missing somethong
06:15 < EhevuTov> npm docs nodemon
06:15 < npmbro> EhevuTov: Please see http://github.com/remy/nodemon
06:16 < EhevuTov> distracteddev, are you referring to the /usr/bin/env line? That just runs the 'env' to find where our 'node' is to execute whatever is below.
06:17 < EhevuTov> It's a tactic to sometimes help with cross platform compat for scripts
06:17 < EhevuTov> distracteddev, you find similar lines in Perl scripts, etc
06:18 < distracteddev> Hmmm.. well I wonder why Windows complains about sh.exe not existing when that file runs
06:18 < EhevuTov> distracteddev, although, the script will fail to start if you don't have an 'env' bin or accessible from your PATH environment variable
06:18 < distracteddev> it should just be running my code within a node environment... no sh.exe should even come to play
06:19 < EhevuTov> the #! is a sh call maybe?
06:19 < distracteddev> EhevuTov: I think so, but then all of these scripts would be broken under vanilla windows..
06:19 < EhevuTov> I'm not sure about the dark details
06:19 < distracteddev> maybe they are just expected to use cygwin
06:20 < EhevuTov> distracteddev, hold on, I'm going to get on my winders box
06:20 < EhevuTov> distracteddev, I usually use 'minGW' for this stuff
06:20 < distracteddev> EhevuTov: Whats minGw?
06:21 < EhevuTov> it's a unix-like environment for windows, similar to Cygwin
06:21 < EhevuTov> but it's compiled natively
06:21 < EhevuTov> while I think cygwin is a shim
06:21 < distracteddev> interesting.
06:24 < EhevuTov> distracteddev, ok, if I open a command terminal in windows and run 'npm i nodemon -g' it installs just fine and runs just fine
06:24 < distracteddev> can you try that with deps
06:24 < EhevuTov> distracteddev, if that doesn't work for you, then Node and or npm isn't installed properly (probably a PATH issue)
06:25 < EhevuTov> sure
06:25 < distracteddev> (dont have a windows box on me )
06:25 < EhevuTov> I need to read your code first, though
06:26 < EhevuTov> dunno what it does
06:26 < distracteddev> If you dont have a package.json file in the dir you call deps, it should just tell yu it cant find that file
06:26 < distracteddev> Sure, it will take you no time, its all of 20 lines that just writes to your package.json whatever dependencies you want
06:28 < EhevuTov> distracteddev, it installed and ran, but you have bugs
06:28 < distracteddev> EhevuTov: Thanks :) I'm sure I do
06:28 < distracteddev> it was more of an exercise than anything else, but id love to hear what bugs you see
06:29 < EhevuTov> you don't properly return from not having arguments
06:29 < EhevuTov> I'd expect to see your output of '--help' or something
06:30 < EhevuTov> commanders has a nice interface that takes care of arguments nicely, if you're looking for something easy
06:30 < EhevuTov> npm doc commander
06:30 < npmbro> EhevuTov: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20doc%20commander
06:30 < EhevuTov> npm docs commander
06:30 < npmbro> EhevuTov: Please see https://github.com/visionmedia/commander.js#readme
06:31 < distracteddev> Doesn't not having arguments just print out your deps for you?
06:32 < EhevuTov> distracteddev, nope, I get an fs.js error where it's expecting arguments
06:35 < EhevuTov> distracteddev, I ran it outside a node project
06:49 < EhevuTov> distracteddev, do you see the problem in the code?
06:51 < distracteddev> EhevuTov: Not really... trying it now
06:51 < distracteddev> if (process.argv.length === 2) {
06:51 < distracteddev>   // If the binary is called without any arguments...
06:51 < distracteddev>   mode = 'show';
06:51 < distracteddev> EhevuTov: Seems to handle the case when the executable is called with 0 args
06:52 < EhevuTov> you're almost there. it's when you don't have 'package.json' in the current working directory
06:52 < EhevuTov> It's an edge case
06:52 < EhevuTov> cause you're explicitly using 'package.json' for the fs.open() call
06:53 < distracteddev> Hmm... I dont know why thats commented out.. It handles the error and spews an error but I guess I forgot to uncomment it
06:53 < EhevuTov> yeah, do that. Try not to use fs.exists
06:54 < EhevuTov> you had it right :-P
06:54 < distracteddev> Thanks for the catch and the help :)
06:54 < EhevuTov> no prob, glad I could help. It was fun
06:54 < EhevuTov> JIFASNIF!
06:55 < distracteddev> ./agreed JIFASNIF
06:55 < EhevuTov> npm docs jifasnif
06:55 < npmbro> EhevuTov: No results
07:01 < tco> Where would I ask a question about recess?
07:01 < tco> The bootstrap less/css compiler
07:02 < AlbireoX> tco: You can ask your teacher if you can have more recess
07:02 < tco> har har
07:02 < AlbireoX> :p
07:02 < AlbireoX> but I don't know what that is
07:02 < AlbireoX> I use connect-assets
07:02 < EhevuTov> thought the same thing, but couldn't think of something witty enough
07:03 < EhevuTov> tcp, never heard of it. Bootstrap is used with Derby for the UI a bit isn't it?
07:03 < EhevuTov> I wonder if the #derbyjs would know more
07:04 < AlbireoX> tco: consider connect-assets
07:05 < AlbireoX> and thanks EhevuTov, I was looking for an MVC framework
07:05  * AlbireoX wrote lots of boilerplate for Express
07:06 < EhevuTov> AlbireoX hehe cool. I've been wading through frameworks the past week. Derby is one of them fancy full-stack frameworks :-)
07:06 < AlbireoX> I was looking at Railway earlier
07:06 < AlbireoX> never saw this one
07:06 < EhevuTov> Is Railway more server-side?
07:06 < AlbireoX> It's meant to be like Rails
07:07 < AlbireoX> I didn't really like it though, the coffeescript support was weird
07:07 < EhevuTov> maxogden, what do you think of that vid you linked?
07:07 < EhevuTov> AlbireoX I'm still trying to find out the right stack for me
07:08 < EhevuTov> I'm currently looking at Express with Racer with DojoToolkit(or JqueryUI)
07:08 < AlbireoX> I'm still trying to find out if Node is for me or if I should learn Rails instead
07:08 < EhevuTov> AlbireoX are you hard up for a job?
07:08 <@maxogden> EhevuTov: it is hilarious
07:08 < AlbireoX> EhevuTov: No, not at all :p I'm still in high school
07:09 < EhevuTov> AlbireoX go javascript and Node all the way
07:09 < AlbireoX> I'm trying to predict if it will overtake Rails or not
07:09 < EhevuTov> yes
07:09 < AlbireoX> (well, technically it has on Github)
07:09 <@maxogden> they do different things
07:10 < EhevuTov> Rails is a web framework, Node is more of a system framework
07:10 < EhevuTov> so, they're different
07:10 < AlbireoX> I know
07:10 < AlbireoX> I mean, web development will primarily be in Node or in Rails?
07:10 < AlbireoX> i mean with node
07:10 < AlbireoX> or with Ruby (which is usually with Rails)
07:10 < SubStack> AlbireoX: javascript is a lot more fun than rails
07:10 < EhevuTov> ^
07:11 < EhevuTov> but, that's not quite comparing oranges to oranges
07:11 < SubStack> it's much easier and more fun because you can just write tiny services and modules that do one thing well
07:11 < AlbireoX> Yes, I like tiny modules only consisting of one file :)
07:11 < SubStack> rails is for building big applications that do all the things that people need them to do
07:12 < SubStack> but I'm much more a fan of breaking problems down into very tiny reusable units
07:12 < AlbireoX> I can see that from how many modules you've published :p
07:12 < icebox> node-binary rocks!
07:12 < SubStack> there are still railsy libs for node that try to do all the things
07:13 < AlbireoX> Just wondering... does anyone here actually like Javascript? I feel like I'm the only one who thinks it's not a bad language.
07:13 < SubStack> but I doubt there will ever be a singular web framework for node that takes over to the extent that rails has with ruby
07:14 < SubStack> AlbireoX: yeah javascript is my favorite language
07:14 < SubStack> especially with the module system and async goodness that node provides
07:14 < AlbireoX> I love require()
07:14 <@maxogden> SubStack: we need npm install bytebeat
07:15 < SubStack> maxogden: for digital synth tunes?
07:15 <@maxogden> yea
07:15 < SubStack> verily
07:15 < icebox> javascript + node.js is the ultimate tool
07:15 < AlbireoX> But without that singular web framework, will Node (or ___ framework) really have a chance of overcoming Rails?
07:16 < AlbireoX> in terms of usage
07:16 < AlbireoX> in web development of course
07:16 < SubStack> I don't think it matters what other people are using
07:17 < AlbireoX> It does if you want a job :p
07:17 < EhevuTov> AlbireoX, does rails couple with the client-side?
07:17 < AlbireoX> EhevuTov: Rails works well with JSON i believe (I haven't used rails much)
07:17 < AlbireoX> so it can be used with Backbone or something easily
07:17 < EhevuTov> a lot of Node full-stack frameworks, like Derby or Meteor, are tightly coupling to the client-side to bind objects and sync on state changes(as well as change the views/UI)
07:18 < EhevuTov> yeah, right, you'd use Emberjs
07:18 < EhevuTov> You should check out some of the concepts like Derby
07:18 < EhevuTov> particularly Racer
07:18 < EhevuTov> I'll be playing with Racer this weekend
07:18 < AlbireoX> Yeah, I'll look into Derby when I get a chance, it sounds awesome
07:19 < SubStack> derby is good for when you want to let multiple people collaboratively edit content
07:19 < SubStack> I like it when libs have a narrow niche like that
07:19 < ljharb> i haven't looked deeply at derby yet - if i disable javascript on the client, does it automatically fall back to rendering on the server?
07:19 < AlbireoX> I'm not exactly looking for something I'll start a business with, rather, I want to learn a technology that will be dominant in 4 years when I do random bits of consulting work to get money
07:21 < AlbireoX> Would derby be good for chat rooms?
07:21 < ashnur> hmm, do you know apps built on derbyjs? 
07:21 < EhevuTov> yes, if you want to create your own UI
07:24 < AlbireoX> Actually, that's a bad reason to want to learn Rails, now that I think about it
07:24 < AlbireoX> since I might as well become a PHP master and memorize the strange documentation
07:25 < SubStack> AlbireoX: you should just build interesting things!
07:25 < AlbireoX> Yup
07:25 < SubStack> instead of deciding to "learn about" different stuff
07:25 < SubStack> learning is boring, building is fun!
07:26 < AlbireoX> Very true
07:26 < AlbireoX> It's hard to think of a module to create that isn't already created, and the things I want to make are all pretty simple
07:26 < AlbireoX> I'll just go with the flow
07:26 < icebox> SubStack: can I quote that (learning is boring, building is fun!)?
07:27 < ljharb> EhevuTov: was that to me?
07:28 < icebox> AlbireoX: indeed you should start to develop apps (and maybe later modules)
07:29 < EhevuTov> ljharb, I'm sorry? that was for AlbireoX
07:32 < AlbireoX> Now... what to make... the possibilities are endless.
07:33 < ashnur> i have some ideas :P
07:34 < AlbireoX> ashnur: give me one :p
07:34 < AlbireoX> I have one idea, but I want to save it for when I'm less stupid
07:35 < yaymukund> O
07:35 < AlbireoX> I come from the land of Minecraft development, so all of my other ideas are of games
07:36 < ashnur> one of the thing i don't have time right now, but I desperately need it is a webbased service where I could upload all my rss subscriptions and bookmarks, it would keep them updated constantly, and maybe automatically organize them based on content
07:36 < ashnur> also, if done there could be fun things to do like share, and mash articles with others
07:38 < ashnur> there is feedly and others for rss, but none for bookmarks. it's annoying.
07:38 < [AD]Turbo> hola
07:43 < EhevuTov> AlbireoX, you could do HTML5 games
07:45 < AlbireoX> EhevuTov: That's not Node as much as client-side stuff
07:50 < EhevuTov> AlbireoX true, but you could do some fun stuff with express, shoe.js and some client-side javascript or webgl
07:51 < EhevuTov> AlbireoX, you know about socket.io and the like, right?
07:53 < AlbireoX> EhevuTov: Yep
07:53 < AlbireoX> What stuff is there to do with express in a game?
07:53 < EhevuTov> you'd use it more for routing
07:54 < AlbireoX> there's not much to route
07:54 < AlbireoX> other than login, game, home
07:54 < EhevuTov> true, but you were also enterested in frameworks
07:54 < EhevuTov> and lot of frameworks use Express below
07:55 < AlbireoX> Maybe i could make a non-realtime game
07:55 < AlbireoX> nah, that's something from the early 2000's
07:56 < AlbireoX> I've used Express in a project before, by the way
07:58 < EhevuTov> anyone here on diaspora?
07:58 < AlbireoX> Diaspora is a lost social network :p
08:00 < EhevuTov> AlbireoX what should I use
08:00 < EhevuTov> and why
08:01 < Guest_1448> what font and syntax highlighting is used here: https://speakerdeck.com/u/felixge/p/domains-in-node-08
08:01 < AlbireoX> EhevuTov: Google+ because it works and lots of people use it
08:01 < EhevuTov> AlbireoX, I like the idea of unhosted.org
08:02 < AlbireoX> EhevuTov: It's too early for a decentralized social network
08:03 < AlbireoX> Guest_1448: I would guess Lucidia Console
08:05 < Guest_1448> hm
08:06 < Guest_1448> does felix come here?
08:07 < EhevuTov> yes
08:07 < EhevuTov> he's probably asleep
08:07 < Guest_1448> and it's lucida console
08:08 < Guest_1448> the p, S, q etc are very different
08:09 < Guest_1448> and it's NOT* lucida console
08:16 < Guest_1448> wow, it's courier new
08:18 < thanpolas_> anyone sensed a hick-up in github?
08:19 < EhevuTov> thanpolas_, it was a little slow earlier, but no hiccup
08:20 < EhevuTov> still a little slow
08:20 < thanpolas_> cannot perform pull requests 
08:31 < eugeneware> What's doug crockford's beef with Joyent? 
08:40 < eugeneware> *cricket* :-)
08:40 < eugeneware> *crickets* even
08:41 < Guest_1448> nope, that's just me
08:57 < sfoster> has anyone got a good testing setup that can test AMD modules? 
08:57 < sfoster> I've been using Jasmine in the browser, but most of my code doesn't need a DOM and would like to run tests headless, continuous-integration style. 
08:57 < sfoster> hence, node.js
08:59 < sfoster> ah, just found https://github.com/geddesign/amd-testing/ 
09:09 < sgimeno> hello, is the nodejs mailing list working ok? I sent a mail 1 hour ago and it doesn't appear in the nodejs googlegroups web page. Is this normal?
09:12 < fent_> anyone remember that module that can edit json without changing its structure? ie the whitespace
09:18 < MerlinDMC> fent_, cjson maybe?
09:22 < monokrome> Anyone in here have experience with NodeJS/OpenGL development?
09:22 < fent_> MerlinDMC: that allows comments in json. that's not it :(
09:41 < fent_> found it :)
10:43 < yaymukund> has anyone gotten 'SyntaxError: invalid syntax' when running `nvm install v0.8.2`? full log: https://gist.github.com/2168f480472197fdcb75
10:51 < chilts> yaymukund: my v0.8.2 installed ok using nvm
10:53 < yaymukund> chilts: hm, thanks. I'll try it in a clean shell.
10:54 < chilts> :)
10:55 < yaymukund> looks like someone else had the same issue: https://gist.github.com/2992701
10:59 < yaymukund> it works if I change 0o666 to 0666 and run make -C out manually
11:05 < FireFly> Maybe the 0o syntax was introduced in C++11?
11:16 < acelent> hi
11:16 < yaymukund> looks like this: https://github.com/TooTallNate/node-gyp/issues/75
11:17 < acelent> in windows, when using node and node-inspector, the expressions I enter in the browser only return after I do something in the node console (e.g. pressing return)
11:17 < acelent> is the console i/o blocking?
11:19 < yaymukund> acelent: I can do `2+2<Enter>` and it prints 4
11:19 < yaymukund> (from the `node` console)
11:20 < acelent> yaymukund: that's fine, so can I
11:20 < yaymukund> ohh, I see what you mean. disregard
11:21 < acelent> yaymukund: thing is, I start "node --debug" in a console, "node-inspector" in another, go to "127.0.0.1:8080/debug?port=5858" in chromium and try to evaluate 2+2
11:21 < acelent> yaymukund: I get 4 (and any pending result) only after I enter a line in node's console window
11:32 < yaymukund> acelent: instant for me
11:32 < yaymukund> acelent: 2+2<Enter> in console and I get 4
11:32 < yaymukund> in node-inspector console from the browser
12:03 < yaymukund> !!!
12:03 < yaymukund> Now using node v0.8.2
12:03 < yaymukund> :D
12:12 < acelent> yaymukund: then I don't know... win xp sp3 32bit, node 0.8.2
12:18 < acelent> yaymukund: are you using a different windows version than me?
12:33 < stonestone> I need to do a or query on a in operation using mongoose js, like : query.where('field1').in([0,1]).or('field2').in([0,1]); Any tips?
12:35 < stonestone> :/
12:41 < acelent> stonestone: .or([{"field1": {$in:[0,1]}},{"field2":{$in:[0,1]}}]) ? i don't really know
12:43 < shanse> stonestone: try asking that in the mongoose channel?
12:52 < stonestone> shanse there is no mongoose channel that I could find?
12:52 < stonestone> I've tried the mongodb one.
12:58 < tobias2> lol @ topic :>
13:02 < shanse> stonestone: »Join #mongoosejs on freenode.«
13:03 < stonestone> Thanks
13:03 < stonestone> Only 10~ people in tho
13:10 < sgimeno> bnoordhuis: hi!, I've tried your suggestion about using the fd in the Socket constructor and it doesn't work either. It creates a new socket anyway. It ends up calling uv_pipe_connect where the new socket is created
13:17 < bnoordhuis> sgimeno: what version of node?
13:17 < sgimeno> bnoordhuis: 0.8.2
13:18 < bnoordhuis> sgimeno: it works - i just tried it :)
13:18 < sgimeno> bnoordhuis: good, then I must be doing something wrong :(
13:19 < bnoordhuis> sgimeno: code gist?
13:19 < sgimeno> bnoordhuis: one sec
13:23 < sgimeno> bnoordhuis: https://gist.github.com/3129376 , I'm not posting the c++ bindings as they're basically copied from the ones in unix-dgram
13:25 < bnoordhuis> sgimeno: looks okay. what does `strace -e bind,connect` print?
13:27 < sgimeno> 456 [pid  2591] socket(PF_FILE, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 7                                                                                                                                                                                            
13:27 < sgimeno> 457 [pid  2591] bind(7, {sa_family=AF_FILE, path="/tmp/sock_terminal_node"}, 110) = 0                                                                                                                                                                                     
13:27 < sgimeno> 458 [pid  2591] socket(PF_FILE, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 8                                                                                                                                                                                            
13:27 < sgimeno> 459 [pid  2591] connect(8, {sa_family=AF_FILE, path="/tmp/echo_socket"}, 110) = 0                                                                                                                                                                                         
13:27 < sgimeno> 460 [pid  2591] getsockopt(8, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
13:28 < sgimeno> bnoordhuis: I got this lines from the strace without filtering
13:28 < sgimeno> there're 2 sockets
13:28 < bnoordhuis> yep
13:30 < sgimeno> by looking at the code I see it calls handle_.connect --> that would call uv_pipe_connect right?
13:30 < yaymukund> acelent: I am on OSX Snow Leopard
13:30 < bnoordhuis> sgimeno: not necessarily, it's monkey-patched in
13:30 < yaymukund> acelent: 10.6.8
13:30 < bnoordhuis> sgimeno: sorry, i've got to go - won't be back for a couple of hours
13:31 < sgimeno> bnoordhuis: ok, no problem
13:31 < sgimeno> bnoordhuis: thx for the help
13:35 < simpan> Looking for a experienced nodejs developer for a real time voip application
13:50 < creationix> SubStack, where is SlowBuffer.byteLength defined in browserify?
13:51 < acelent> yaymukund: oh, ok. this seems to be a windows-specific problem
14:04 < dominictarr> houdy
14:05 < Qalqi> java sucks
14:06 < balboah> lucky we don't have to run it then
14:06 < bminer> quick question... any idea when V8 will be updated in Node?
14:06 < bminer> is the V8 version locked down for Node 0.8?
14:06 < dominictarr> mmalecki: hey, I arrive in Europe tomorrow!
14:07 < RLa> bminer, i think it is
14:07 < bminer> RLa, hmmm, okay
14:07 < RLa> bminer, see blog entries about early v8 releases
14:07 < bminer> any idea when Node 0.9 dev will start?
14:08 < RLa> do you need some specific features
14:08 < bminer> yeah.... V8 3.12.0 has a feature that I need
14:08 < bminer> http://code.google.com/p/v8/issues/detail?id=1914
14:09 < bminer> Unfortunate... Node 0.8 missed the version number by one...
14:09 < bminer> RLa: what do you think?
14:10 < RLa> hm, maybe you can find a stable branch there
14:10 < RLa> i'm pretty sure v8 will be upgraded once but no idea when
14:11 < RLa> duh
14:11 < bminer> cool
14:11 < RLa> just notices python 2.6 is required to build node
14:11 < bminer> ha, nice
14:12 < RLa> haha, using 2.5 here, saw no errors during build
14:13 < bminer> yeah, I don't even know what changed between 2.5 and 2.6
14:13 < bminer> 2.6 release was a while ago tho
14:13 < RLa> some guys yesterday said about unicode issues
14:14 < bminer> hmmm
14:14 < bminer> probably
14:14 < RLa> and for some other sw i had lots of errors about "with" keyword in python
14:15 < RLa> seems like the bad keyword :/
14:16 < bminer> yeah... that was new in 2.6, I think
14:16 < bminer> oh well...
14:17 < bminer> RLa: so are you building Node 0.8.2 with V8 3.12.0? or which version?
14:17 < RLa> hm, no
14:18 < bminer> kk
14:18 < RLa> to be honest i have not managed to upgrade past 0.7.9, even in production
14:18 < RLa> just haven't gotten time
14:18 < bminer> yeah i hear ya
14:19 < bminer> version numbers are changing literally every week
14:21 < dscape> SubStack: yt?
14:36 < dominictarr> mmalecki: hey!
14:49 < insin> anyone know if it's possble to use Express' view machinery outside of a request/response? E.g. rendering something in response to a Socket.IO connection, but making use of Express' cached templates
14:53 < cmr_> In this gist: https://gist.github.com/3129853 - is it possible to refactor the get method to not rely on a callback function, but simply return the data when the query is finished?
14:55 < Owner> cmr_~# database.query({}).on('row', function(row){return row;});
14:55 < Owner> ?
14:55 < Owner> javascript is super flexible...so yes its possible, in many different styles (afaik)
14:58 < cmr_> Owner: Thanks for the suggestion: Unfortunately, that yields "undefined". My suspicion is that the function is not really waiting for the IO to finish. Is this correct?
14:59 < Owner> cmr_~# i suppose it isnt....
15:00 < Owner> i can't really test...
15:01 < cmr_> That's alright, thanks anyway :)
15:02 < jcrew> cmr_: - the way to do that is to use something like step or find a sync db query function
15:03 < cmr_> jcrew: Thanks. What are the best practices here? Any examples?
15:28 < Almindor> hello
15:28 < Almindor> anyone here has experience with the Jade templating engine?
15:29 < lpin> Almindor just ask
15:30 < Almindor> I'm trying to output "some text <hyperlink> continuing text" but when I do "a(href='') hyperlink[newline]| continuing text" the extra space gets eaten. The only way around I found was to add the space to the hyperlink
15:31 < lpin> add an extra space after |
15:31 < lpin> i mean |doublespacehereTEXT
15:33 < Almindor> ah
15:34 < Almindor> I guess I just missed the obvious possibility :)
15:49 < zenista> hi guys i m unale to install node-sqlite3 or sqlit3 thru npm
15:50 < zenista> hi guys i m unale to install node-sqlite3 or sqlit3 thru npm
15:50 < zenista> it says not a package name
15:53 < radiodario> git clone git://github.com/developmentseed/node-sqlite3.git
15:53 < radiodario> cd node-sqlite3
15:53 < radiodario> do that inside your node_modules
16:00 < st_luke> zenista radiodario: the package name on npm is sqlite3, `npm install sqlite3`
16:00 < zenista> k thanks st_luke
16:00 < zenista> st_luke but sequelize says node-sqlite3.... will be it fine if i instlal sqlite3
16:01 < st_luke> `npm show sqlite3`
16:02 < st_luke> the package's github repo is titled node-sqlite3 but that's not the package name on npm
16:02 < st_luke> it's just sqlite3
16:03 < st_luke> a lot of people do node-[package name] on github to make it obvious it's a node module from a birds eye view
16:03 < st_luke> s/package/module 
16:06 < zenista> st_luke: i got sqlite3 compilation error
16:06 < kenperkins> what's the "right" way of detecting when the parent process terminated from a child_process.fork()
16:06 < kenperkins> (from the child process)
16:10 < st_luke> zenista: OS?
16:11 < zenista> st_luke: archilinux
16:13 < st_luke> you are probably missing a build dependency: https://github.com/developmentseed/node-sqlite3#building
16:13 < st_luke> try this first: http://www.archlinux.org/packages/multilib/x86_64/lib32-sqlite3/
16:13 < st_luke> I guess
16:13 < st_luke> oh wait
16:14 < st_luke> yeah
16:14 < st_luke> or http://www.archlinux.org/packages/extra/x86_64/sqlite/
16:45 < taterbase> Hey guys, I made an android app to search npm, it's called Pocket NPM https://play.google.com/apps/publish/Home?dev_acc=16458597253051257764#AppEditorPlace:p=com.taterbase.pocketnpm
16:46 < taterbase> It's honeycomb and up for now
16:46 < owen1> is there a helper function people use to find hash in an array based on specific key of this hash? i can use _find from underscore library, i am curious if there is any alternatives.
16:46 < SuperShabam> tite app yo
16:49 < FireFly> owen1, if by hash you mean object and "based on specific key" you mean filtering on a certain property of the objects having a certain value, then I'd use Array#filter
16:49 < FireFly> owen1, https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/filter that is
16:53 < owen1> FireFly: wow. where did this came from?!
16:53 < FireFly> Uh, Brendan & co
16:54 < owen1> FireFly: the only problem is it's ecma5. i guess that's why people use _find
16:54 < tnorris> owen1: get that connection close/end problem figured out?
16:55 < FireFly> owen1, that shouldn't matter at all in the context of node.js, should it?
16:55 < FireFly> it being specced only in ES5, I mean
16:55 < FireFly> owen1, also, I suggest reading through the page https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array -- there's lots of nicities there <3
16:56 < owen1> tnorris: hi! i already forgot about it.. it's my friend's code, i gave him some pointers based on your feedback!
16:56 < owen1> FireFly: true, in node it's fine, but this code is acutally in the browser ):
16:57 < owen1> FireFly: if i don't want to use all the underscrode lib, i can just copy paste the code for _filter
16:57 < owen1> FireFly: great link, thanks
16:57 < tnorris> owen1: good to hear. hope he gets that figured out. strange problem.
16:58 < FireFly> owen1, fair enough
16:58 < FireFly> (although personally I'd just use Array#filter and not care about the old browsers)
16:58 < Owner> FireFly~# go you!
17:07 < iksik> hello
17:07 < iksik> is there any oauth2 provider for restify?
17:12 < tnorris> iksik: I assume you've already read this: https://github.com/mcavage/node-restify/issues/150
17:17 < SpNg> when I do response.writeHead(200, {}) on a HTTP request the browser shows a response.  When i do response.writeHead(304,{}) the browser errors with "File Not Found".  Is there something additional that needs to be included with a 304 response (using node 6.10)
17:21 < kauschovar> SpNg: i'm a Node.js newbie myself, so i can't comment on the Node API, but have you tried adding a "Location" header to the response
17:22 < kauschovar> SpNg: generally, 304 redirects need a Location header to tell the browser where to direct to
17:26 < prettyrobots> I just asked this in ##javascript. Not trolling. What is your browser cutoff.
17:27 < prettyrobots> In ##javascript people were telling me about FF 3.x. So, I'm not sure I feel that much zeal.
17:28 < prettyrobots> If I create a library for noders that works on the brwoser as well as in node, do noders what a modern look and feel, or support for old browsers?
17:28 < iksik> tnorris: yeah, i've readed that already, but since i don't know oauth but it self very well, i'm not sure if it is secure and full featured (compatibile with existing oauth client libraries)
17:28 < SpNg> kauschovar: 304 is Not Modified
17:33 < gkatsev> prettyrobots: ignore all non-ecmascript 5 browsers. Then, if you feel like, add them in bit by bit by starting out with es5-shim and stuff.
17:34 < prettyrobots> gkatsev: Very different attitude from ##javascript. Thanks.
17:34 < tnorris> To build 0.6.x I needed to install libssl-dev, but do I still need that for 0.8.x?
17:36 < DTrejo> prettyrobots: non-modern browsers can go in the corner with a dunce hat. of course if I were building enterprise sites, i'd do differently
17:38 < tnorris> prettyrobots: I've worked at a lot of e-commerce businesses, and the answer always depended on the market share for the given country.
17:38 < tnorris> for example, we didn't support IE6 for the US, but we did for China.
17:38 < prettyrobots> I'm looking through the arguments for jQuery dropping IE 8. 
17:39 < prettyrobots> Also, I appreciate the shim argument.
17:40 < tnorris> so, the documentation says libssl-dev does need to be installed, but it then references 0.6.x (https://github.com/joyent/node/wiki/Installation)
17:40 < tnorris> so still not sure if I need libssl-dev installed to build 0.8.x
17:50 < DTrejo> try it out and see what happens
17:52 < tnorris> figured it out. the openssl lib is in the deps/ folder. and while the option still exists to link to external openssl libraries, it is included by default and built with node-gyp.
17:57 < taaz> anyone know how to force TLS 1.0 for an https connection?  there are issues in recent debian and ubuntu ssl libs that try to use 1.1 or 1.2 by default and servers just hang.
18:18 < niallo> anybody know good ways to parallelize test runs with node? 
18:19 < niallo> haven't yet found a test runner which does that for you
18:23 <@maxogden> async tests are harder to write but run faster
18:24 <@maxogden> but i would recommending going async rather than going parallel
18:25 < niallo> right but assuming i can't do that, say i have an existing suite of tests and rewriting isn't an option.
18:27 < niallo> has anybody seen/built a test runner which forks multiple processes and divides the test cases over those?
18:33 < taaz> niallo: https://github.com/cloudkick/whiskey has parallel options (though i haven't tried that yet)
18:34 < niallo> taaz: thanks! looks like exactly what i was thinking.
18:45 < dscape> maxogden: have you looked at specify?
18:45 < dscape> sync, async, doesnt matter :)
18:48 < acelent> curiously, in windows, you must have something kicking the event loop for node-inspector to actually answer to the browser
18:48 < wbw72> Hi
18:49 < acelent> win-xp-32bits+node-v0.8.0+node-inspector: if I eval "setInterval(function(){}, 5000);" in node's console, the expressions I eval in the browser's console return in (modulo) 5 seconds
18:50 < wbw72> I'm fighting with NPM/Package.json dependency references.. Is it possible to reference a local git file repository?
18:53 < ryan_stevens> is there anyone here that can help with running an internal NPM server?
18:54 < motiooon_> what would be a good ted framework for node? 
18:54 < motiooon_> I know should and vows so far, are there any other good ones ?
18:54 < motiooon_> TDD framework
18:54 < wbw72> I have several projects stored in local git repositories on a shared driver (i.e. //Volumes/share/GitRepositories/repoA). How would/can I create a dependency on such a repository?
18:56 < taaz> wow, so paypal payflow pro api only supports SSLv3 (from 1996), no TLS.  to talk to them via https module, you need var agent = new https.Agent({secureProtocol:'SSLv3_method'}); https.request({agent:agent, ...})
18:57 < taaz> at least if you are using modern debian ssl libs that default to modern protocols.  hard to figure that out!
18:58 < dscape> motiooon_: what are you looking for?
18:58 < motiooon_> I'm looking for a good module for making unit testes in node js
18:59 < motiooon_> unit tests
18:59 < dscape> you can use plain old assertions for that
18:59 < dscape> if you are looking for something more complex you have node-tap
18:59 < dscape> if you are looking into something that is less of a pain to write you have specify
18:59 < dscape> if you are looking for more than just unit tests
18:59 < motiooon_> do you use only assertions for your node js tests ?
19:00 < dscape> you have mocha, vows, and some others
19:00 < dscape> motiooon_: i wrote my own so i guess my answer is fairly insignificant
19:00 < dscape> :)
19:00 < jaha> are there any node.js cms solutions out yet?
19:00 < motiooon_> dscape: why don't you use mocha, vows , should ?
19:01 < dscape> cause like you i wanted to keep it simple
19:01 < dscape> and all of those introduce boilerplate and methodologies i do not care about
19:01 < dscape> i just cared about having tests that are super easy to read
19:02 < motiooon_> makes sense
19:03 < dscape> node-tap was of all the other alternatives the one i liked the most
19:03 < dscape> but was lacking some features i thought where essential
19:03 < CIA-93> node: isaacs v0.8.3-release * rc383bef / (182 files in 37 dirs): npm: Upgrade to 1.1.43 - http://git.io/ho0MYQ
19:03 < CIA-93> node: isaacs v0.8.3-release * r7397ab2 / (11 files in 5 dirs): uv: Upgrade to a9f6f06 - http://git.io/cD9JgQ
19:03 < CIA-93> node: isaacs v0.8.3-release * ra0a0062 / (7 files in 3 dirs): v8: upgrade to 3.11.10.15 - http://git.io/Zt26cg
19:03 < CIA-93> node: isaacs v0.8.3-release * r868ffed / deps/v8/build/common.gypi : v8: Reapply floating patches - http://git.io/DtsrXw
19:03 < CIA-93> node: isaacs v0.8.3-release * r799dda9 / (AUTHORS ChangeLog src/node_version.h): 2012.07.17, Version 0.8.3 (Stable) - http://git.io/Ce8WmA
19:03 < dscape> now with domains, node-tap + domains would be enough
19:03 < dscape> i think
19:03 < CIA-93> node: isaacs v0.8 * rc383bef / (182 files in 37 dirs): npm: Upgrade to 1.1.43 - http://git.io/ho0MYQ
19:03 < CIA-93> node: isaacs v0.8 * r7397ab2 / (11 files in 5 dirs): uv: Upgrade to a9f6f06 - http://git.io/cD9JgQ
19:03 < CIA-93> node: isaacs v0.8 * ra0a0062 / (7 files in 3 dirs): v8: upgrade to 3.11.10.15 - http://git.io/Zt26cg
19:03 < CIA-93> node: isaacs v0.8 * r868ffed / deps/v8/build/common.gypi : v8: Reapply floating patches - http://git.io/DtsrXw
19:12 < Guest_1448> felixge: 
19:14 < Guest_1448> felixge: ping.
19:14 < felixge> Guest_1448: pong
19:15 < Guest_1448> in this slide https://speakerdeck.com/u/felixge/p/domains-in-node-08 - what color scheme and font are you using?
19:16 < felixge> Guest_1448: the best :)
19:16 < felixge> Summerfruit256 in vim
19:17 < felixge> font is courrier actually :)
19:17 < Guest_1448> thanks
19:17 < Guest_1448> yeah, it looked like courier new 
19:17 < Guest_1448> but on windows, it's much lighter
19:17 < felixge> it's not Courier New
19:17 < felixge> it's just "Courier"
19:17 < Guest_1448> oh
19:18 < Guest_1448> well, courier looks really bad on windows
19:18 < Guest_1448> pixelated if zoomed
19:18 < felixge> get a mac :)
19:18 < Guest_1448> i wish
19:19 < Guest_1448> thanks for the reply, that theme and font combo looks really nice. I'm going to try and get that in my sublime :)
19:19 < felixge> :)
19:27 < jhsto> how can i parse json response which has multiple, unquoted, values inside []?
19:30 < gkatsev> is it valid json?
19:30 < taaz> jhsto: if it's not json, write a parser, or be sloppy and use split() and so on
19:30 < jhsto> phew, i thought if there would be a better way
19:30 < jhsto> since the response is from steam api
19:31 < jhsto> i would have thought that they can do their job properly, but no
19:31 < gkatsev> really? they dont return valid JSON?
19:31 < taaz> if they claim Content-Type of json, and don't return json, file a bug
19:32 < gkatsev> jhsto: have a snippet of this not-json json?
19:32 < jhsto> wait
19:32  * gkatsev waits
19:33 < jhsto> https://gist.github.com/3131470
19:34 < jhsto> wait
19:34 < jhsto> dafuq is this
19:34 < taaz> looks like json
19:34 < jhsto> i could promise i dont have quotes
19:34 < gkatsev> jhsto: well, problem solved. :)
19:35 < jhsto> i guess so
19:35 < jhsto> but
19:35  * gkatsev closes ticket 'works-for-me' 'non-issue'
19:35 < gkatsev> :P
19:35 < jhsto> when i use response.players the quotes disappear
19:35 < gkatsev> jhsto: once it's parsed?
19:35 < jhsto> yes
19:35 < gkatsev> that's fine
19:36 < jhsto> well i tried response.players.personaname but i got undefined
19:36 < jhsto> any idea whys that?
19:36 < gkatsev> jhsto: players is an array of objects
19:37 < gkatsev> jhsto: you'll want response.players[0].personanname
19:38 < jhsto> cool, thanks man
19:38 < gkatsev> np
19:56 < shadow_fox> can someone tell me what is i am doing wrong cause i m getting this error when i am trying to install npm in my ubuntu box... 
19:56 < shadow_fox> https://gist.github.com/3131596
19:57 < shadow_fox> please have a look at it.. .
19:58 < cconstantine_> shadow_fox, npm comes with node, there is no need to install it separately
20:00 < shadow_fox> cconstantine_: yeah i get that from the site but when i try to see the man or doc from the terminal i get an error saying The program 'npm' is currently not installed.  You can install it by typing:sudo apt-get install mricron so i try to install from the site instruction and i get here all the files are done copy perfectly but the last things that showing is some error 
20:01 < cconstantine_> shadow_fox, how did you install node?
20:01 < shadow_fox> from package only 
20:02 < cconstantine_> from apt?
20:02 < shadow_fox> yeah
20:02 < cconstantine_> what version did you get?
20:03 < shadow_fox> 0.8.2
20:03 < shadow_fox> after updating it 
20:03 < shadow_fox> started with 0.4.1
20:03 < shadow_fox> now i have 0.8.2 version
20:03 < context> npmjs.org
20:03 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
20:03 < context> install npm .
20:03 < niallo> shadow_fox: if you are on ubuntu using the 3rd party packages, you need to install npm package
20:04 < context> node does not install npm.
20:04 < niallo> vagrant@lucid64:/tmp/t$ apt-cache search npm
20:04 < niallo> npm - package manager for nodejs
20:04 < npmbro> niallo: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20-%20package%20manager%20for%20nodejs
20:04 < shadow_fox> ok niallo
20:04 < cconstantine_> oh wierd.. I thought npm was a part of node now
20:04 < niallo> cconstantine_: not in the ubuntu packages.
20:04 < cconstantine_> that seems broken
20:05 < context> even if npm is apart of node, debian/ubuntu split /everything/ into 500 packages anyway
20:06 < niallo> ya
20:06 < cconstantine_> *sigh*  another reason to just install node from source
20:07 < niallo> yeah i use nave a lot these days personally.
20:07 < cconstantine_> I'm always baffled when people expend energy just to break a working system
20:07 < niallo> although on older wimpier machines, it can take a while to build from source
20:07 < niallo> like an EC2 micro :)
20:07 < cconstantine_> meh
20:13 < tnorris> niallo: heh, just finished doing that exact thing.
20:13 < tnorris> took about 30 mins.
20:18 < niallo> tnorris: yeah
20:27 < shadow_fox> hello can someone help me 
20:27 < shadow_fox> https://gist.github.com/3131596
20:28 < Ellis> Out of interest, would it be possible to create a blog, or a 4chan-esque system with this, with security?
20:36 < samholmes> Could someone say, "/me loves"?
20:36 < riven> /me loves
20:36  * samholmes 's giant cock inside them.
20:36 < samholmes> damnit..
20:36 < samholmes> fail
20:36 < riven> FAIL
20:36 < samholmes> >.<
20:36 < riven> And also… weirdo.
20:37 < samholmes> haha
20:37 < samholmes> just a harmless prank
20:40 < TheEmpath> i find debugging javascript to be way more natural than any other language :(
20:40 < TheEmpath> i like the relative time aspect.  makes more sense to me
20:42 < jhsto> any easy tools to add twitter bootstrap to my node project?
20:50 < LowValueTarget> havin a hell of a time getting geoip module to build ... http://pastebin.com/raw.php?i=adR0TMrJ
20:50 < LowValueTarget> Anyone dealt with that before
20:50 < LowValueTarget> libgeoip-dev is installed
20:50 < LowValueTarget> nodejs-dev as well
21:19 < EhevuTov> LowValueTarget, I'd upgrade node and npm and if you still have that problem, report it as a github issue to the module github project
21:38 < Sounden> Hi!
21:39 < Sounden> I have some serious issues printing out a http response content, using it as a proxy
21:41 < Sounden> I only get <Buffer ff d8 ff e0 00 10 4 ... > when I try to making it to readable content
21:41 < tbranyen> Sounden: what kind of data do you want?
21:42 < Sounden> tbranyen: well in the end it needs to be utf-8 text I guess so I can parse it as JSON
21:44 < Sounden> So the thing is that I want it to work as a proxy and I want to be able to read the response data
21:44 < Sounden> from a client
21:44 < tbranyen> Sounden: toString() ?
21:45 < Sounden> yes but then it gets ��=o�0�g�W���0�)��&M
21:45 < tbranyen> thats hot
21:45 < Sounden> tbranyen: :)
21:51 < Sounden> tbranyen: I think I solved the delicate matter.. I think the server returns iso-8859-1 encoded stuff..
22:27 < CIA-93> libuv: Ben Noordhuis v0.8 * rb49d6f7 / src/unix/proctitle.c : unix: fix uv_set_process_title() - http://git.io/dLYpZA
22:33 < endra> Hey, can anyone recommend a blog link or something regarding good deployment practices?
22:35 < livinded> endra: just watch hackernews, read a bunch of code, write a bunch of code, and show your code to people
22:36 < livinded> reading about best practices really only gets you so far. Fucking up and trying to fix it will teach you much more
22:37 < myndzi> speaking of fucking up and trying to fix it
22:37 < myndzi> references for olap modules?
22:37 < endra> livinded: do you wake up every morning and crawl until you can't crawl anymore because it makes you better at walking?
22:38 < myndzi> endra: ever tried to tell a baby "just balance on your legs and put one foot in front of the other"? :)
22:38 < bwen> endra: now that you mention it... I actualy crawl before I could walk....
22:38 < livinded> endra: sort of
22:38 < endra> The only reasons baby don't walk before crawling is because they can't read blogs that tell them how to walk
22:38 < livinded> when I want to learn something I generally just start working on it until it works
22:38 < endra> :P
22:39 < jcrew> endra: that analogy doesn't work, you walk to get better at walking - you don't read about plyometrics and ergonomics to make you better at it
22:39 < livinded> reading best practices only does so much
22:40 < livinded> a lot of it you can just pick up faster and better by doing
22:40 < livinded> and having people tell you your code sucks
22:40 < jergason> jeeze, the guy asked for some reading and you all lecture him
22:40 < myndzi> i was just teasing, unfortunately i have no such reference
22:40 < jergason> endra: 12factor.net has some general stuff on deployment
22:41 < jergason> endra: are you talking about node specifically?
22:41 < endra> Look, let's all stop being silly. I'm not into trying every solution out there and trying everything out. I don't care much about node.js and I simply need best practices for deployments. I don't understand why you are telling me to not follow or read anything. this may surprise you but some people who ask for help like this actually have visitors to their websites and cannot handle downtime due to some stupid mistake they did
22:41 < myndzi> reading best practices WILL help you avoid simple mistakes and have a better understanding of what you need to understand :)
22:41 < jcrew> jergason: i just wanted to point out that reading is not a substitute for doing and came in a little late.  if all he is looking for is reading then this is a good start: http://fluidproject.org/blog/2008/07/21/about-this-and-that/
22:41 < endra> jergason: thank you, I will take a look. Yes, I have completed and tested node.js and I'm wondering how people handle deployment. I've read up on 'forever' and a few other systems that might come in handy
22:41 < livinded> endra: reading about best practices for deployment wont ensure no downtime
22:41 < endra> livinded: not reading will.
22:42 < livinded> especially since the author's use case isn't yours
22:42 < jcrew> i'm going to butt out, livinded give it up - he does need to read about best practices for deployment
22:42 < jcrew> if, for no other reason, to CYA
22:42 < endra> What is CYA?
22:42 < jcrew> cover your ass
22:42 < endra> Yup
22:43 < jergason> seems really arrogant to think no one has anything to teach you
22:43 < jergason> do and read, nothing wrong with both
22:43 < jcrew> jergason: i think arrogant is the wrong word, haha :)
22:43 < deoxxa> > i have completed and tested node.js
22:43 < deoxxa> what
22:43 < endra> Just to be clear, I've completed my node.js app and I'm just worried that opening screen and running node app.js isn't the best way to do things ;)
22:43 < livinded> jergason: I didn't say noone has anything to teach you. There isn't some bulletproof blog that's going to teach you how to deploy properly
22:43 < jesusabdullah> certainly arrogance.
22:44 < jcrew> ignorance might fit a little better
22:44 < jergason> livinded: there is stuff you can read to point you in the right direction though, if you have no idea where to start
22:44 < livinded> endra: ya, that's probably a bad idea. But it also sounds like you have no idea how to properly deploy an app
22:44 < endra> livinded: I should go and ask the community for blogs about how to properly deploy a node.js application
22:44 < endra> :P
22:44 < livinded> it's not even community stuff
22:45 < jcrew> it's stuff the community has experience with
22:45 < livinded> there's tons of non-node specific stuff
22:45 < jergason> endra: our cto did a talk about deploying node, lemme see if i can find it
22:45 < mmalecki> use a paas?
22:45 < endra> jergason: thanks. Where do you work, if you don't mind me asking?
22:45 < jergason> endra: itv
22:45 < jcrew> jergason: where do you work that has a CTO ?
22:45 < jergason> i.tv
22:46 < jergason> dunno, engineer man
22:46 < jcrew> ?
22:46 < endra> CTO probably means lead engineer (this is my position as well)
22:46 < jergason> chief nerd?
22:46 < jcrew> cto is chief technology officer
22:46 < jergason> basically head of engineering is what it means here
22:46 < jcrew> usually reports to CEO or CIO, and works in conjunction with a cio
22:46 < jergason> endra: http://www.slideshare.net/embwbam/how-to-deploy-node-to-production
22:47 < jergason> endra: also http://github.com/seanhess/ratinatorly
22:47 < jcrew> jergason: engineer man?
22:47 < jergason> i have no explanation for that :/
22:48 < endra> jergason: is i.tv a startup?
22:48 < jergason> endra: yeah
22:48 < endra> jergason: awesome, where are you guys based?
22:48 < jcrew> jergason: thanks for the slides
22:48 < jergason> endra: utah in the united states
22:49 < endra> cool, we're in Toronto, Canada
22:49 < jergason> neato
22:49 < jergason> where do you work?
22:49 < endra> coursemodo.com, notewagon.com
22:50 < jergason> LMS stuff? looks kindof like blackboard?
22:50 < endra> jergason: your cto seems to simply use 'screen' so I guess I was right with my guess earlier. I'll probably use something like 'forever' to manage node instances
22:50 < jergason> endra: he talks about upstart and forever later on
22:51 < endra> jergason: we're not really an LMS yet but we are simply offering tools for professors to better control their classroom and make it entertaining and fun. We're using node.js for real-time communication between students and professors with Django as the backend
22:52 < jergason> node for socket.io or something?
22:52 < endra> Yup, that's all we use node for :)
22:53 < endra> You can see why I was asking on proper node deployment. If this fails during class, we lose a lot of credibility and trust of our clients.
22:54 < tbranyen> tjholowaychuk: hey man, stylus can run in the browser right?
22:55 < tjholowaychuk> tbranyen yup, not easily right now but yeah
22:55 < tbranyen> tjholowaychuk: do i need more than this: http://learnboost.github.com/stylus/stylus.js ?
22:56 < tjholowaychuk> that's pretty old now but it should work fine
22:56 < tbranyen> i want to dick around and see if i can get dynamic compiling during development and use built files during my release builds
22:56 < CIA-93> node: Dave Pacheco v0.8 * r648fdc5 / tools/genv8constants.py : tools: speed up genv8constants - http://git.io/KT2V5Q
22:56 < tbranyen> f watch tasks
22:56 < tbranyen> tjholowaychuk: cool, i'll let you know if i get anywheres with it, it'd be nice to have the latest version run in the browser
22:59 < samholmes> When you think about it, isn't socket.io RPC?
22:59 < tbranyen> samholmes: when i think about it, yeah.
22:59 < tbranyen> what about you?
22:59 < samholmes> haha
22:59 < awhamblin> Is there a way to get node to drop me into a repl at a point I want to let me examine an object? (i.e. I read in and parse some XML, now I want to interactively poke at it and figure out what I've got)
22:59 < samholmes> aspergers much? :P
23:00 < SubStack> console.dir(obj)
23:00 < SubStack> why does that need to be interactive?
23:00 < samholmes> tbranyen: I just always thought that RPC was something magical, but it's really just events in a different syntax.
23:00 < tbranyen> samholmes: and you will know, i am the lord... of spergs
23:00 < SubStack> samholmes: somewhat
23:00 < SubStack> the way socket.io does it is actually pretty limited
23:00 < tbranyen> when i strike my pendants upon thee
23:01 < samholmes> SubStack: how so?
23:01 < SubStack> callbacks only work to one-level deep
23:01 < awhamblin> Mostly because it's huge and console.dir will be a pain to read though.
23:01 < SubStack> also socket.io is gigantic and gross and tries to solve like 4 separate problems
23:01 < SubStack> awhamblin: write it to a file then
23:01 < jamescarr> hey if I get this: "[1]    9733 segmentation fault (core dumped)"
23:02 < SubStack> fs.writeFileSync('output.json', JSON.stringify(obj))
23:02 < tbranyen> SubStack: i'm a huge fan of engine.io's philosophy
23:02 < jamescarr> where can I find the core dump to figure out wtf went wrong?"
23:02 < samholmes> SubStack: How are other RPC libraries not one-level deep?
23:02 < tbranyen> socket.io's is kinda gross in terms of starting with it's fallback nature
23:02 < awhamblin> Thanks
23:02 < SubStack> samholmes: you can't pass callbacks to stubbed functions as parameters
23:02 < styol> Any users of node-inspector around that might be able to explain how or if it is possible to inspect code that is require'd?
23:03 < samholmes> stubbed?
23:03 < SubStack> which makes stateful interactions really hard
23:03 < SubStack> which is what rpc is good for
23:03 < samholmes> styol: code that is required will be available in the scripts view in node-inspector. It will show up in the drop-down at the top.
23:03 < tjholowaychuk> events > rpc
23:03 < SubStack> samholmes: the functions that you define one one side of the connection are stubbed out on the other side of the connection
23:04 < samholmes> what does the word stubbed mean? :P
23:04 < tbranyen> pain
23:04 < tbranyen> like when you stub your toe
23:04 < samholmes> that's what I was thinking too
23:04 < SubStack> this terminology is rather common when talking about rpc
23:05 < SubStack> anyways
23:05 < samholmes> SubStack: What does it mean to stubb out a callback?
23:05 < SubStack> I just said!
23:05 < SubStack> read the words that I typed
23:05 < styol> samholmes: hrm I am seeing some other includes but not my simple script that is being exported (or other required modules)
23:06 < samholmes> SubStack: "<SubStack> samholmes: the functions that you define one one side of the connection are stubbed out on the other side of the connection" This part?
23:06 < SubStack> samholmes: the stubs are just generated functions that pass their arguments over the socket back to the original side where the function is actually defined
23:06 < samholmes> Ah, I get it.
23:06 < samholmes> See that definition makes sense to me. xP
23:06 < SubStack> anyways how socket.io does that is really limited and not very useful
23:06 < SubStack> most rpc systems do it the stupid way
23:07 < samholmes> What's the stupid way?
23:07 < ericelliott> I do that all the time, where the stub side is just an event emitter that relays the name and data payload to the server
23:07 < SubStack> not supporting passing functions as arguments to stubbed functions
23:07 < SubStack> that's completely unworkable with something like node where you've got callbacks everyplace
23:07 < styol> samholmes: might be due to core cluster?
23:08 < samholmes> styol: Maybe your app hasn't required the script yet?
23:09 < styol> samholmes: I did --debug-brk and it stepped through the main module plus some core js
23:09 < samholmes> And about socket.io, couldn't you do socket.on('event', function(cb){ cb('dosomething', function(cb){ cb('dosomethingagain', ...) }) }) ?
23:09 < styol> er and I stepped through
23:09 < jamescarr> heh
23:10 < jamescarr> someone... committed node_modules to github 
23:10 < jamescarr> it had native modules... compiled on OSX
23:10 < tbranyen> jamescarr: yea, npm rebuild
23:10 < jamescarr> yeah :)
23:10 < cconstantine_> jamescarr, any ssh keys?
23:10 < jamescarr> I know
23:10 < samholmes> SubStack: Would the code above work for more than one level deep of callbacks on socket.io?
23:10 < jamescarr> tbranyen, I accidentally just ran the app... thats why I had core dumps
23:10 < jamescarr> I mean, segfaults
23:10 < tbranyen> <3 segfaults
23:11 < SubStack> samholmes: correct as I understand it
23:11 < samholmes> Then socket.io can do more than one level? You mentioned it couldn't.
23:11 < SubStack> I thought that was an example of something that wouldn't work
23:12 < tim_smart> isaacs: SubStack: Do you know of a indent plugin for vim + comma first style?
23:12 < samholmes> Oh. Nah, I was asking if this sort of thing _did_ work in socket.io. :P
23:12 < tim_smart> Currently have ident plugin
23:12 < SubStack> not likely to work
23:12 < tim_smart> *plugins turned off and using plain autoident
23:12 < tim_smart> *autoindent
23:12 < tim_smart> >.>
23:13 < livinded> SubStack: has browserling put together a support matrix of javascript functions for various versions of the big browsers?
23:13 < styol> samholmes: did normal --debug and it's the same, has got to be cluster or needs to be inline with the node being inspected
23:13 < SubStack> livinded: no why would we?
23:13 < samholmes> SubStack: I see. It's because socket.io would need to stub the callbacks on both ends of the connection.
23:13 < SubStack> samholmes: no it has a callbacky thing but it's very limited
23:13 < livinded> just curious. Would be nice to have a single resource where I could type in a method and it gives me the support matrix for it
23:14 < SubStack> limited to being the last function in the call and limited in that it's not recursive in binding the function parameters
23:14 < samholmes> SubStack: I'm interested in alternatives. How do other, less limited, libraries do it?
23:14 < SubStack> I wrote one back when socket.io was just about websockets with fallbacks
23:14 < SubStack> using socket.io (giant mistake)
23:15 < jamescarr> stop banging on socket.io
23:15 < jamescarr> I like it
23:15 < SubStack> because socket.io grew out from under me into this giant mess
23:15 < SubStack> you can like it but I can also dislike it immensely
23:15 < SubStack> it's caused me nothing but trouble
23:15 < SubStack> due to out-of-control feature creep
23:15 < jamescarr> ah, there are some features I think would be better as additional modules
23:15 < SubStack> like all of them
23:16 < SubStack> all the features should be completely separate
23:16 < jamescarr> with core just being an abstraction in front of websockets
23:16 < SubStack> there is no abstraction in that project at all
23:16 <@isaacs> tim_smart: nope
23:16 < SubStack> I guess now it's slightly better with engine.io but that component hasn't been sufficiently broken out quite yet
23:16 < tim_smart> isaacs: *sadface*
23:17 < tim_smart> Should probably learn how the ident plugins work.
23:17 < SubStack> anyways there are better websockets with fallback transports that aren't nearly as bloated so we can just use those instead
23:17 < SubStack> no need to wait for socket.io to get its act together
23:17 < samholmes> Which do you recommend?
23:17 < DeathRayDragonLu> you guys tried out derby, socketstream, or meteor?
23:17 < DeathRayDragonLu> those all utilize sockets
23:17 < SubStack> engine.io wasn't even on npm until a month ago despite being around for almost a year
23:17 < DeathRayDragonLu> Right now I'm trying to build an app on SocketStream
23:18 < SubStack> samholmes: sockjs has a really restricted scope which is nice
23:18 < SubStack> I wrote this tiny wrapper so you can use sockjs with a streaming api that works in browserify http://github.com/substack/shoe
23:18 < samholmes> What about your dnode, or is that something else?
23:19 < SubStack> and then you can layer the transport with https://github.com/dominictarr/mux-demux to support multiple streams
23:19 < SubStack> and then on top of that you can put whichever streaming apis you like, including dnode which is now pipe-able or maxogden's domnode or others
23:19 < SubStack> that seems like a much more sensible way to layer the complexity
23:20 < SubStack> since it lets you switch out any piece of the architecture without affecting all the other parts
23:21 < SubStack> and all the components can just worry about doing their one tiny thing and doing it well
23:21 < SubStack> instead of doing all of the things, but poorly
23:22 < DeathRayDragonLu> what is "mutiplex-demultiplex"
23:22 < samholmes> So, sockjs is like socket.io without all the bells?
23:25 < SubStack> samholmes: sockjs is exactly the websocket api but with fallbacks
23:25 < samholmes> I see
23:25 < samholmes> I need to look into the websockets api
23:25 < samholmes> haha
23:27 < SubStack> it's not so great to use the websockets api directly though
23:27 < SubStack> streaming apis are much nicer
23:27 < samholmes> Well, because it hasn't saturated the market yet.
23:27 < DeathRayDragonLu> so that's what this mux-demux is then
23:27 < SubStack> DeathRayDragonLu: mux-demux lets you pack multiple streams into a single stream
23:28 < DeathRayDragonLu> gotcha
23:28 < SubStack> that is useful where the number of streams at your disposal are limited
23:28 < DeathRayDragonLu> like those conveyor belts for chicken eggs
23:28 < SubStack> pretty much
23:29 < DeathRayDragonLu> so what was the middleware you were talking about — the layer between sockjs and my code?
23:29 < DeathRayDragonLu> shoe?
23:30 < comster> I just upgraded from 0.6 to 0.8 and am getting weird child_process.spawn behavior.  Maybe it's always been this way, but I just discovered that my spawn.stdout.on data callback might not complete before the spawn.on exit callback finishes?
23:31 < Gateway69> anyone have experience with node inspector being able to jump into other modules called
23:31 < mmalecki> comster: use `close` callback
23:31 < mmalecki> it got changed recently
23:31 < mmalecki> close event, I mean
23:31 < comster> ok, good to know
23:32 < comster> I couldn't find anything about past versions on the nodejs site anymore.... Is there upgrade or API change info anywhere?
23:33 < ori-l> comster: http://nodejs.org/changelog.html
23:33 < bnoordhuis> comster: https://github.com/joyent/node/wiki/API-changes-between-v0.6-and-v0.8
23:34 < comster> Thanks guys.. I'll bookmark those
23:34 < comster> and remember to look on the github next time
23:34 < bnoordhuis> :)
23:35 < fat> tjholowaychuk: hey
23:36 < fat> tjholowaychuk: you said you wrote an irc bot called tjbot or something right?
23:36 < tjholowaychuk> fat haha yeah i had a really bad one
23:36 < tjholowaychuk> the irc clients were/are? really bad
23:36 < fat> what was it called?
23:36 < tjholowaychuk> it's just some private shitty script i wrote
23:37 < fat> i'm going to tell the story of haunt at oscon on thurs
23:37 < tjholowaychuk> nice! I keep forgetting to test drive it
23:37 < fat> i ran it in test mode against bootstrap
23:37 < fat> it's going to close 37 or 42 pull requests
23:37 < tjholowaychuk> even just closing really old issues is helpful
23:37 < fat> and like 60+ of 80 issues
23:37 < fat> really excited
23:37 < tjholowaychuk> nice! <#
23:37 < tjholowaychuk> <3
23:38 < fat> yeah
23:38 < fat> i'm super excited
23:38 < tjholowaychuk> that's great
23:38 < tjholowaychuk> at least 70% of mine are stale
23:38 < tjholowaychuk> i only ran it on jade and express i think
23:38 < fat> yeah for sure
23:38 < fat> i think in argentina you said it was called "tjbot" ?
23:39 < tjholowaychuk> yup
23:39 < tjholowaychuk> it was idle in here too to answer questions
23:39 < comster> bnoordhuis, thanks again for the help
23:39 < bnoordhuis> comster: my pleasure :)
23:39 < comster> any socal noders going to the startup weekend by chance?
23:41 < TooTallNate> oh hey, it's fat!
23:41 < fat> haha
23:41 < fat> hey!
23:41 < fat> how's it going TooTallNate?
23:42 < tim_smart> fat: Did you find a alternate name for nest?
23:42 < fat> yep
23:42 < fat> it's going to be bower
23:42 < fat> natures great seducer :P
23:42 < fat> its this boss bird which builds sexy nests
23:43 < TooTallNate> haha, great name
23:43 < fat> thanks :)
23:43 < rvagg1> australian bird no less
23:44 < tim_smart> http://upload.wikimedia.org/wikipedia/commons/4/41/Satin_bowerbird.jpg
23:44 < tim_smart> Crazy.
23:44 < fat> haha
23:44 < fat> http://www.youtube.com/watch?v=E1zmfTr2d4c
23:45 < tim_smart> That narrator voices gets me everytime.
23:45 < fat> haha
23:45 < fat> yes
23:45 < tim_smart> voice*
23:45 < fat> agreed
23:47 < rvagg1> fat you need to find an opportunity to name a lib 'crock' or 'crockford', just for the troll value
23:47 < fat> hah
23:47 < fat> nah
23:47 < fat> guy is such a hater
23:47 < fat> tho
23:47 < fat> but whatever
23:48 < mmalecki> well, let's fork node.js first
23:49 < tjholowaychuk> what's his gripe with node?
23:49 < fat> tjholowaychuk: 
23:49 < fat> http://www.youtube.com/watch?v=8HzclYKz4yQ&feature=player_detailpage#t=1360s
23:49 < mmalecki> he's not down with joyent handling it
23:49 < tjholowaychuk> ah
23:49 < tjholowaychuk> joyent is kinda meh
23:49 < tjholowaychuk> i guess
23:50 < tjholowaychuk> not that yahoo is less meh
23:50 < rvagg1> and paypal...
23:50 < Raynos> :D
23:53 < oojr> under his occupation on g+ crock puts "the boss of you"
23:56 < oojr> crock said something about twitter developers today https://plus.google.com/118095276221607585885/posts/74ZcpCQcio7
23:56 < oojr> kinda funny
23:56 < tjholowaychuk> oojr give the guy a break, he has like two javascript libraries
23:57 < fat> haha
23:58 < SubStack> rant posted
23:58 < SubStack> tjholowaychuk is not going to like it I expect
23:58 < tjholowaychuk> ?
23:59 < SubStack> the thread about test runners
23:59 < SubStack> on the mailing list
23:59 < tjholowaychuk> i see
23:59 < tjholowaychuk> sounds
23:59 < tjholowaychuk> boring
--- Log closed Wed Jul 18 00:00:13 2012
