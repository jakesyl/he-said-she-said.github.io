--- Log opened Sat Nov 24 00:00:03 2012
00:01 < medikoo> _Tristan: https://github.com/medikoo/event-emitter
00:10 < lrvick> http://pastebin.com/raw.php?i=fFMhPQtD anyone know what I am doing wrong here?
00:11 < lrvick> I must be staring at it too hard
00:11 < t4w> Yes. You're using CoffeeScript.
00:11 < lrvick> >.>
00:12 < lrvick> The project was pre-existing in coffeescript. Not my design decision.
00:12 < jrajav> Technically that's a different language
00:12 < MI6> joyent/libuv: Shigeki Ohtsu master * 0cca539 : unix, windows: disallow NULL worker in thread pool  See #629. - http://git.io/_uwnNg
00:12 < t4w> Well, then the project was shit.
00:12 < jrajav> So we could be mean and send you to their channel
00:12 <@mbalho> lrvick: thats quite a lot of framework you have going on there
00:13 < lrvick> mbalho: yes, and saldy I don't know a lot of what is going on still.
00:13 < lrvick> mbalho: had to take on someone elses dirty bathwater
00:13 < jrajav> lrvick: You could compile it to javascript and beautify it
00:13 <@mbalho> ahh that is a bummer
00:14 < jrajav> lrvick: Problem solved
00:14 < t4w> Rewrite the project in C++
00:14 < lrvick> >.>
00:14 < t4w> It's the only way.
00:14 < lrvick> So does anyone actually know what i am doing wrong with my sequelize call?
00:15 < t4w> >node.js people >knowing what they're doing
00:17 < MI6> joyent/node: Ben Noordhuis master * aa3441a : js2c: raise proper Exception, not a string  Fixes the following error mes - http://git.io/2KHiKQ
01:38 < ack006> bnoordhuis: thanks for your js2c patch, i discovered too late that the bug is also in v8's js2c
01:39 < ack006> hope they choose to use an Exception too, or we will have a 'merge conflict' when copying js2c.py to node.
01:39 < bnoordhuis> ack006: yeah. our version of js2c.py is quite old though and i don't think we're ever going to update it
01:39 < bnoordhuis> the output of the current v8 js2c.py isn't suited for our purposes
01:40 < ack006> why not?
01:40 < ack006> easier to keep in sync than to let rot me thinks ;-)
01:40 < bnoordhuis> no, it's because it generates code that depends on v8 internals
01:40 < ack006> aha i typed too early
01:41 < ack006> bad bad js2c. could be so useful but never wise to hardcode internals in what should be a preprocessor
01:41 < ack006> same thing with gcc's cpp, tries to be too smart sometimes ;-)
01:41 < ack006> gets weird when you try to preprocess brainf*ck for example
02:00 < bnoordhuis> ack006: i don't gcc ever made any claims to being a general purpose preprocessor :)
02:00 < ack006> sad, another backronym lost cause, i always thought it was the general character cruncher
02:01 < ack006> :)
02:01 < ettinger> .
02:02 < ack006> must have watched too much iccc hackers do crazy stuff with it
02:02 < ack006> i use it to preprocess systemtap scripts, dtrace uses (a preprocessor, dunno if they use cpp) to preprocess scripts, etc.
02:03 < ack006> input language shouldn't matter
02:04 < ack006> even used it once to preprocess a batch mailing (to be printed on dead tree stuff), really ;D
02:05 <@konobi> ack006: the dtrace stuff should be in gyp
02:06 < ack006> yep, but v8ustack uses #include <v8constants.h>, #include <v8abbr.h>
02:07 < ack006> that's what i'm relying on in my upcoming patch, a debug-support.h that can generate any of these formats: stap, dtrace, struct (for use in a c++ file)
02:07 <@konobi> huh, i wonder what the v8 mdb plugin uses
02:08 < ack006> konobi: don't worry, i like that feature of dtrace: to grok ordinary c defs, just want to have it in systemtap also
02:08 < ack006> 'cause i cannot use dtrace hihi ;)
02:08 <@konobi> ack006: oh?
02:09 < ack006> nope, i'm on linux (yes, there's a dtrace port out there i hear) but i like living on the edge
02:09 < ack006> was too lazy to setup a vm to test systemtap, so i run it on a live system ;-G
02:09 <@konobi> time to tempt you to the darkside... mwuahahaha
02:10 < ack006> must be black sun empire then, assuming you're talking helios / smartos :-D
02:11 <@konobi> well, there's smartos and omnios, which are the ones i've used
02:12 < ack006> konobi: i'd really like to (i'm not deterred by politics, nih stuff etc) but when i do, i want all the features
02:12 < ack006> and my cpu is to old for that stuff, no eps :((
02:12 <@konobi> ept, yeah
02:12 < ack006> ept i mean :-/
02:13 <@konobi> i built my smartos server for about $400
02:13 < ack006> i want to have smartos / kvm not just smartos
02:13 < ack006> konobi: i get is, but $ is what i don't have a lot of atm
02:14 <@konobi> =0)
02:14 <@konobi> which cpu?
02:14 < ack006> i'm a hacker, just not a wealthy one
02:14 < ack006> erm lemme look (searched for it a few days ago)
02:15 < ack006> problem is, it's not just the cpu, my mobo is too old for the new stuff
02:15 < ack006> i have a core2duo but on the old 775 socket
02:15 < ack006> even for a celeron with vmx / ept you need a newer socket
02:16 < sinclair> hey all, does anyone have an opinion on the webworker package for node?
02:17 < sinclair> and why it depends on the node-websocket-client module...
02:17 < mscdex> it's outdated
02:18 < mscdex> "0.8.4 last updated 2 years ago"
02:18 < mscdex> but it doesn't depend on node-websocket-client...
02:22 < sinclair> mscdex: do you have any recommendations for an alternitive?
02:23 < sinclair> mscdex: sorry, i have read "Note that this requires node-websocket-client v0.9.3 or later. This dependency will be handled automatically by npm, but must be dealt with manually if installing using another procedure."
02:23 < sinclair> mscdex: in either case, the module doesn't run
02:26 < sinclair> mscdex: also, do you have any thoughts on threading with node in general (via child processes i suppose)
02:27 < sinclair> mscdex: its kind of nice to have a host be able to keep track of multiple child processes, and, if a child process crashes, or runs heavy on memory, be able to terminate that process and restart it 
02:28 < sinclair> mscdex: so long as the host was bullet proof
02:28 < Aria> 'heavy on memory' is annoying to measure and decide. The rest not so hard.
02:28 < mscdex> sinclair: looking at the package on npmjs.org it doesn't show a dependency
02:28 < mscdex> sinclair: i'd just use the node cluster module or child_process
02:29 < sinclair> mscdex: i guess
02:29 < mscdex> depending on your needs
02:29 < sinclair> mscdex: if marshling data between processes, this would be achieved via streams right?
02:30 < sinclair> mscdex: is there any performance hit streaming data between processes ?
02:30 < mscdex> sinclair: depends on how it's done
02:30 < mscdex> if you stream to its stdin, very little overhead. but if you're using process.send() and such, it converts to json
02:31 < Spion> https://github.com/doxout/stractory - see some benchmarks at the bottom (TCP-based inter-process communication)
02:31 < sinclair> mscdex: i was intending on streaming to stdin/out
02:31 < mscdex> sinclair: i wouldn't worry about performance then
02:31 < Spion> my thought is to not rely on stdin/stdout.
02:32 < mscdex> they're all streams
02:32 < Spion> if you are sure you need more than one process you will soon need more than one server.
02:32 < mscdex> huh?
02:33 < sinclair> Spion: irrelevant 
02:34 < Spion> why would you use a different process? except for separation of concerns that is.
02:34 < sinclair> Spion: long running blocking processes
02:34 < Spion> like?
02:35 < sinclair> Spion: a raytracer
02:35 < Spion> you will need a second machine very soon. Now what? you have a solution that uses stdin/stdout to communicate with the worker instead of network
02:36 < sinclair> Spion: redirecting streams is incredibly trivial
02:36 <@konobi> .pipe
02:36 < Spion> yes, but you should not rely on local performance.
02:37 < sinclair> Spion: im not raytracing btw
02:37 < sinclair> Spion: however, there are instances where you might need concurrency 
02:38 < Spion> and for those instances, my gut tells me its not a good idea to rely on the local speed of inter-process communication
02:38 < mscdex> Spion: lots of reason to spawn processes.... load balancing, video encoding, etc
02:39 < jtm2> guys, I've been having a big dilemma and I think I might be using redis incorrectly with socket.io
02:40 < sinclair> jtm2: i've heard socket.io isn't the best option nowadays
02:40 < jtm2> I am implementing a IMing system, but I am NOT using redis' pub/sub, instead I am manually handling sessions with redis (by storing objects etc) and doing all my event handling on the sockets themselves.
02:40 < Spion> mscdex, ... image resizing etc, yeah. I guess its okay for task-like stuff.
02:41 < sinclair> tho, it may just be here-say
02:42 < jtm2> From all the IMing examples using redis, I see people using pub/sub with redis, but NEVER see people doing socket.on with emits inside them.
02:42 < xaka> is there any way to get fd of socket after net.connect suceed?
02:42 < jtm2> What this means though is that I am creating a new redis connection with each socket (of course I clean it up on disconnect)
02:44 < Spion> mscdex, but if all of your 16 load-balanced processes are currently processing a cpu-bound task at the same time, offloading it to a webworker doesn't seem like a long-term solution - this is what I mean.
02:47 <@konobi> Spion: well, depends on your core count
02:48 <@konobi> xaka: check the net docs
02:58 < u777> hi 
02:58 < u777> how are you
03:31 <@konobi> any docpad advocates about?
03:35 < jtm2> konobi If I was, I'd definitely help you out
03:36 <@konobi> heh
03:39 < jtm2> I think I am having huge scoping issues with socket.io and redis.
03:40 < jtm2> I create a redis client outside of my socket connection event. On connect (for redis), I initialize the socket.io's on connect event. When I try to refer to redis sometimes I have to use this. and sometimes I need to use redisvariablename., or sometimes neither work as expected.
03:41 < jtm2> It doesn't error either (unless I use this. in a 2nd deep event.
03:41 < jtm2> )
03:41 < jtm2> So it's quite weird, it actually will pretend it's running the code (no errors, no warnings, etc) but it does nothing.
03:41 < jtm2> but if I switch it to this.hgetall(...) it works fine.
03:42 < jtm2> It depends on how I reference to the variable for the redis client. But if I create a new redis client on each socket connection, it works 100% perfectly.
03:42 < jtm2> It is driving me crazy.
03:43 < jtm2> and I never see anyone use a redis client's hget or get or set inside a socket.io event.
03:43 <@konobi> jtm2: use of "this" needs to be careful
03:44 < jtm2> but if I did redis_client.hgetall(public_hash, function (err, obj) {, it does absolutely nothing.
03:44 < jtm2> It doesn't enter the function. It doesn't error, nothing.
03:44 < jtm2> But if I make it  this.hgetall, it works fine.
03:44 <@konobi> more code would be required
03:44 < jtm2> except the redis_client's used inside hgetall don't do anything.
03:45 <@konobi> pastebin ftw!
03:45 < jtm2> ok I'll use it ;)
03:45 < jtm2> I can only show samples, but I'll make it clear.
03:45 <@konobi> jtm2: http://ejohn.org/apps/learn/ is also a great resource
03:48 < jtm2> konobi http://pastebin.com/5AY71uDB
03:48 < rvagg> anyone know anything about irisnpm and how on earth I'm supposed to use it? setting it as default registry causes an ssl cert error and how is it supposed to be private?
03:49 < jtm2> konobi This is just down to the exact situation. If I move line 1 and 3 to line 5 (between 4 and 5). It works fine.
03:50 < jtm2> But in that case I am constantly creating new redis clients.
03:50 <@konobi> jtm2: if you change line 7 to "client" instead of redis_client, what to you get?
03:50 < jtm2> A non-working program?
03:51 < jtm2> client is a socket.
03:51 <@konobi> have you tried it though?
03:51 < jtm2> redis_client is a redis connection.
03:51 < jtm2> No, but I don't even think there is a get function for client.
03:51 <@konobi> STFUADWIS
03:51 < jtm2> I'll try it.
03:51 <@konobi> =0)
03:52 < jtm2> I'm confused, it might have worked
03:52 < jtm2> But I have no idea why.
03:52 <@konobi> client == this
03:53 < jtm2> Can you send me to some documentation regarding it?   I thought client is a socket?
03:53 < jtm2> I'm confused.
03:53 <@konobi> actually not... sorry
03:54 <@konobi> io.sockets, i assume is a socket.io thing?
03:54 < jtm2> I'm still incredibly confused of why this is.
03:54 < jtm2> Yes
03:54 < jtm2> client should be a socket (with emit etc)
03:55 < jtm2> So I don't know how redis_client can suddenly become client?
03:56 < jtm2> TypeError: Object #<Socket> has no method 'hgetall'
03:58 <@konobi> i don't see hgetail in that pastebin
03:58 < jtm2> It's later on, but it is inside that .get
03:59 < jtm2> I changed it from redis_client to client.
03:59 < jtm2> I just didn't include it in the pastebin, since the code is fairly large.
03:59 < jtm2> It did work when I made it client.get(...) which I find incredibly strange.
04:02 <@konobi> ha1957: i see redis_client.get and that's it
04:02 < jtm2> I didn't include it.
04:02 < jtm2> the hgetall
04:02 < jtm2> I can if you wish
04:03 <@konobi> jtm2: have a look at the resig thing
04:04 < jtm2> konobi http://pastebin.com/tym9PJr0
04:05 < jtm2> So if I switch redis_client.get to client.get somehow it works (no idea how it knows how to pass in that socket since that's something returned by redis, but if I switch redis_client.hgetall to client.hgetall it breaks.
04:15 < nicholasf> I'm getting this error - Error: error:0906D06C:PEM routines:PEM_read_bio:no start line - when trying to start up a https instance using a self signed cert
04:15 < nicholasf> does anyone know why this happens? Looking online and no one seems to have explained it well
04:19 < nicholasf> got it
04:20 < nicholasf> wrong key was being passed in
04:21 < Aria> Hehe, yeah. Mixed up public and private.
04:55 < hansin> Does anyone know if there are libraries of something like that to deal with floating point numbers in JS/Node? I had an idea of storing numbers a whole number in a database, then storing another signed integer that specified where the decimal place was. This seem like a good idea?
04:58 < Krinkle> Hi, I've been looking at a problem from all angles I can think of. I feel like I'm at their wits end.
04:58 < Krinkle> For some reason the request body is being cropped
04:58 < Krinkle> I'm importing issues from google code to github, all working fine (making lots of http requests).
04:59 < Krinkle> except for 1 particular issue will not import, everytime the same one
04:59 < Krinkle> api responds with "Body should be a JSON Hash", so I hacked the script to go to a dump.php script and dump all headers and body. Turns out the body is being trimmed by half a dozen characters.
05:00 < Krinkle> It isn't the length, because some of the other requests have longer bodies
05:00 < Krinkle> debug output: https://gist.github.com/4138481
05:00 < jrajav> hansin: https://github.com/iriscouch/bigdecimal.js
05:01 < Krinkle> Issue #9 is fine, Issue #10 fails.
05:02 < Krinkle> I'm using request = require('request'), but the issue is not in that module I believe. I injected some debugging code in it, and within there everything is still good. Somewhere between request calling native node modules and the server receiving it, a few characters are chopped off
05:02 < Krinkle> resulting in invalid json. anyone have any clue what it might be?
05:03 < Krinkle> The strange thing is, 100s of other requests are going fine. Some are longer and more complex than this one. Is there anything special about this one that I'm not seeing?
05:03 < hansin> jrajav: Thanks!
05:07 < hansin> ls
05:07 < hansin> ;)
05:09 < mscdex> dir
05:24 < ettinger>  howdy
06:54 < hell_lord> good day fellow node js users
06:55 <@mbalho> top o the mornin to ye!
07:15 < ettinger> howdy
07:22 < abhi__> i want to send  binary image data as http POST to an API .... what the best way to do it .... 
07:23 < abhi__> I tried req = http.request .... and req.write(IMAGE_BINARY, 'binary') 
07:23 < abhi__> but getting encoding issues 
07:24 < abhi__> ?
07:27 < gildean> abhi__: have you checked out the request-module?
07:27 < gildean> https://github.com/mikeal/request
07:28 < abhi__> ok does it have an implementation to send binary data ?
07:30 < gildean> well it just simplifies nodes normal http-functions
07:30 < gildean> but i don't see why you couldn't turn the files into a binary stream
07:30 < abhi__> I was wondering if its possible using core http functions .....if its just a wrapper ...
07:31 < gildean> tho i might suggest you look into websockets for streaming data over networks, for example: https://github.com/einaros/ws/blob/master/examples/fileapi/server.js
07:34 < abhi__> @gildean ok let me look into the example ......  I assumed simple request.write(IMAGE_binary, 'binary') shld work 
07:34 < abhi__> but ran into 
07:34 < abhi__> encoding issues
07:35 < RLa> wtf are "encoding issues"
07:35 <@mbalho> abhi__: most people use request, npm install request
07:36 < abhi__> @RLa ...... when read a image file using FS and then pass the bnary image 
07:36 < abhi__> to the API in http post 
07:37 < RLa> you get an error message or what
07:37 < abhi__> using req.write() the API logs show improper encoding ... when i call the same API using curl 
07:37 < abhi__> it works
07:38 <@mbalho> abhi__: see if this works: fs.createReadStream('file.jpg').pipe(request.post('http://api'))
07:41 < abhi__> @mbalho even using streams fails var stream = fs.createReadStream(filepath); stream.pipe(req, {end: false});                 stream.on('close', function() {                     req.end();                 });
07:41 < abhi__> I tried the avove
07:53 < hacker0> test
08:38 < Guest11485> is it possible to synchronously accept command line inputs like reading some five variable from command line ?, if so can some one let me know how ?
08:40 < jtm2> Wow the node-postgres library is horrible.
08:40 < yawnt> Guest11485: check out https://github.com/flatiron/prompt
08:40 < jtm2> Is there anything better?
08:41 < jtm2> The insert keeps putting in null for my primary key.
08:41 < jtm2> https://github.com/brianc/node-postgres
08:41 < freewil> you're doing it wrong
08:42 < freewil> that is a problem with your schema not the node library
08:42 < jtm2> db.query("INSERT INTO message (senderHash, receiverHash, sentAt, senderIp, message) values ($1, $2, $3, $4, $5)", [data.session_id_hash_sender, data.session_id_hash_receiver, new Date(), client.handshake.address.address, data.message]);
08:42 < jtm2> A primary key should no be null, should it?
08:42 < freewil> is it a sequence?
08:42 < jtm2> which in this case I don't include (it's id)
08:43 < freewil> your schema shouldn't allow a record to be created if the pk is null
08:43 < jtm2> Hmm
08:43 < jtm2> It should be a sequence
08:44 < jtm2> But it could be Doctrine trying to do the GeneratedValue and handling the sequencing itself
08:44 < jtm2> id integer NOT NULL
08:44 < freewil> doctrine?
08:44 < jtm2> I see nothing pertaining to sequences
08:44 < freewil> the php library?
08:44 < jtm2> Yes
08:45 < freewil> instead of using int, just create the table with the datatype serial
08:46 < freewil> it'll create an auto-incrementing sequence
08:47 < jtm2> freewil, I don't get too much control over this POS orm.
08:47 < jtm2> I could change it, sure
08:47 < jtm2> AUTO (default): Tells Doctrine to pick the strategy that is preferred by the used database platform. The preferred strategies are IDENTITY for MySQL, SQLite and MsSQL and SEQUENCE for Oracle and PostgreSQL. This strategy provides full portability.
08:47 < jtm2> Anyway this is off-topic now.
08:47 < jtm2> But it should be setup as a sequence regardless
08:48 < jtm2> "SEQUENCE for Oracle and PostgreSQL"
08:48 < RLaa> jtm2> A primary key should no be null, should it? <- if it's mysql then null cannot be value for primary key
08:48 < deoxxa> (it can be for the insert)
08:48 < RLaa> can it?
08:48 < deoxxa> yep
08:48 < deoxxa> insert into derp (id, a, b) values (null, 1, 2);
08:49 < RLaa> when id is auto_increment?
08:49 < deoxxa> ah, yes
08:49 < jtm2> ERROR: null value in column "id" violates not-null constraint SQL state: 23502
08:49 < jtm2> It's definitely a missing autoincrement
08:49 < RLaa> null as primary key makes actually no sense, how would you query the record by it?
08:50 < RLaa> hm, maybe "is null" would work
08:50 < jtm2> I just did insert into message(senderhash) values ('haha'), and it gave me that error, it's a table issue.
08:51 < deoxxa> RLaa: you use that thing in mysql where you get the last generated key
08:51 < jtm2> Why it is occuring, I have no idea.
08:51 < deoxxa> RLaa: LAST_INSERT_ID() lol
08:51 < deoxxa> mysql is so silly
08:52 < RLaa> how it knows my column name was id :)
08:52 < freewil> postgres is nice because you can do "insert into table users (email) values ($1) RETURNING id"
08:52 < RLaa> you can do lot of nice things there
11:34 < bitfed> var theBeginning = null; function letThereBeLight () { var light, darkness; }; letThereBeLight();
11:34 < bitfed> :-D
11:36 < ezekielnoob> hi guys! i'm trying to study node.js. is it good enough to setup a webinar server?
11:36 < SomeoneWeird> yep
11:37 < ezekielnoob> srry if i haven;t researched enough with nodejs but are have MySQL provided drivers with these?
11:37 < SomeoneWeird> yep
11:38 < ezekielnoob> ahm
11:38 < SomeoneWeird> https://github.com/felixge/node-mysql
11:39 < ezekielnoob> is there an example of developing a webinar system?
11:39 < ezekielnoob> i was trying to choose between java or node.js. i haven't tried either so i want to know where to start better
11:40 < nathan7> ezekielnoob: streams are gonna make your life awesome
11:40 < nathan7> bitfed: your light and darkness are garbage collected fairly quickly
11:40 < nathan7> bitfed: if not optimised away entirely
11:41 < nathan7> 9/m 5
11:41 < nathan7> ..goddamnit
11:41 < ezekielnoob> hmmmmm....? because i think nodejs is made for these kind of stuff
11:42 < nathan7> ezekielnoob: and generally people don't really use MySQL with node, various kinds of noSQL are more popular
11:42 < ezekielnoob> i'm a php developer btw. i'm trying to do a different project
11:42 < nathan7> a webinar is basically just video streaming, right?
11:42 < ezekielnoob> yes but 
11:42 < trankil> ezekielnoob: choose java, node is not good for you.
11:43 < ezekielnoob> the people attending should be able to stream their cameras too
11:43 < ezekielnoob> oh
11:43 < ezekielnoob> are there other choices instead of Java... like i said i'm a PHP developer so i have little idea on streaming/live
11:44 < trankil> ezekielnoob: just do java, and php of course. they are the best languages ever.
11:44 < nathan7> lol, trankil 
11:44 < nathan7> ezekielnoob: Java and PHP are kind of considered the devil here
11:44 < nathan7> ezekielnoob: so we're probably all biased
11:45 < ezekielnoob> well i just want to hear opinions.
11:45 < nathan7> Streams are a fairly common thing in node
11:45 < nathan7> You can quite easily sling data around
11:46 < ezekielnoob> so what codecs does nodejs support?
11:46 < ezekielnoob> because the way i saw nodejs, streaming would be "faster" to develop here
11:46 < ezekielnoob> and easier
11:50 < ezekielnoob> uh?
11:54 < nathan7> ezekielnoob: yeah
11:54 < nathan7> ezekielnoob: streams as in byte streams
11:54 < nathan7> ezekielnoob: or streams of various types of data
11:54 < nathan7> ezekielnoob: node.js itself is purely a platform
11:54 < nathan7> ezekielnoob: it provides no video stuff by itself
11:54 < nathan7> ezekielnoob: I have no idea about video really
11:55 < SoulRaven> is posibile to display what protyypes are avalibile for a method?
11:55 < ezekielnoob> so the protocol of LiveStreaming would be what? UDP?
11:58 < nathan7> ezekielnoob: Yeah, but of course you have to implement something smarter on top of that
12:05 < xat-> ezekielnoob: besides node i guess you will need some software todo the actual video decoding/encoding stuff
12:06 < xat-> maybe you want to take a look at ffmpeg
12:06 < xat-> or take a look at Red5
12:07 < xat-> but then you dont need node anymore :)
12:09 < ezekielnoob> red5?
12:09 < ezekielnoob> so it's java
12:10 < switz> how can I debug http.request? I keep getting Syntax Error: Unexpected token <
12:15 < xat-> ezekielnoob: yes, red5 is java. it's all about finding the right tool todo the job
12:15 < SomeoneWeird> switz, paste the whole error
12:16 < SomeoneWeird> use pastie
12:16 < switz> I'm getting a 503 from the server
12:16 < switz> Curl works fine though
12:16 < RLa> i think it's the whole error
12:16 < RLa> i remember getting same errors
12:16 < switz> Not sure how to check if I'm setting all of the headers and setting the data correclty
12:17 < RLa> it was something to do with json and error pages
12:17 < SomeoneWeird> it might be trying to auto parse the response
12:17 < SomeoneWeird> try setting the correct headers
12:17 < SomeoneWeird> lol,
12:17 < RLa> "Syntax Error: Unexpected token <" <- this could come from JSON.parse
12:17 < SoulRaven> plese help me with something
12:17 < SoulRaven> http://bin.cakephp.org/view/865647341
12:18 < RLa> switz, are you using request module?
12:18 < switz> yeah it's returning an HTML page, that's a 503 error.
12:18 < switz> no
12:18 < switz> I built my own request class
12:18 < SoulRaven> now is ok, but i don't know whay i can't access a protorype from inside the constructor
12:18 < switz> I'm not sure if I'm setting the headers or sending the data properly.
12:18 < SoulRaven> look on line 72, i have console.log(this.prototype);
12:18 < RLa> switz, are you checking the status code of response?
12:18 < switz> using cURL it works fine.
12:18 < SoulRaven> but i get undefined
12:19 < switz> not at the moment.
12:19 < SoulRaven> and if i do GeoPoint.protorype i get only 2 prototypes, from the rest of all
12:19 < switz> I realized the syntax error isn't my problem, it's probably a misformed request.
12:19 < RLa> you cannot access prototype in constructor, true
12:19 < switz> how do I pass headers, just as an object?
12:20 < SomeoneWeird> use restler
12:20 < SomeoneWeird> or something
12:20 < SoulRaven> sorry i get all the prototypes, but when i do GeoPoint.setLatitude(arguments[0]); i get erros, that says setLatitude is not present
12:20 < switz> {header:{AUTHORIZATION:'xxx'}}?
12:20 < SomeoneWeird> you need to create a new geopoint object SoulRaven 
12:21 < SomeoneWeird> var geo = new GeoPoint(); geo.setLatitude(arguments[0]);
12:22 < SoulRaven> the ideea is like this, look in row 903
12:23 < SoulRaven> the error apears when i uncommend row 903
12:23 < RLa> also one thing, maybe you can move 'use strict'; out of functions, into higher scope
12:23 < SoulRaven> global?
12:23 < SomeoneWeird> SoulRaven, in each of the prototype functions, when you need to access a geopoint function, use "this" instead of "GeoPoint"
12:24 < SoulRaven> exactly this is do,
12:24 < SoulRaven> using this.
12:24 < SomeoneWeird> so uh, what's the error?
12:25 < RLa> SomeoneWeird, sure this === GeoPoint in functions of GeoPoint prototype?
12:25 < SomeoneWeird> ye
12:25 < SomeoneWeird> s
12:25 < RLa> i do not think so
12:25 < switz> aha! I think I figured it out
12:26 < SoulRaven> some methods call and check if the arguments are from another instance of GeoPoint
12:26 < RLa> GeoPoint is constructor and distinct from the object it creates
12:26 < Gabriel403> switz: how? I was doing this response.writeHead(routingresponse.httpcode, routingresponse.headdata);
12:27 < switz> I had to pass in the content-length as Headers. I was just putting it in the object. was silly of me.
12:28 < SoulRaven> ok, but way i can't access the GeoPoint.some method from inside the sonctructor
12:28 < SoulRaven> or using this.someMethod
12:28 < SoulRaven> becuse this i think all readly contains all the prototypes of the constructor
12:30 < RLa> where can't you access GeoPoint.some in the constructor?
12:30 < RLa> or what exactly
12:34 < RLa> setLatitude is defined on prototype, so it's available on "this" in the constructor
12:35 < RLa> it's not defined on GeoPoint object (the constructor function)
12:41 < ezekielnoob> is there a good web framework for NodeJs?
12:43 < Kakera> express
12:45 < ezekielnoob> another thing: can i use nodeJS as a videostreaming component and use PHP as my webframework?
12:48 < SoulRaven> if i do GeoPoint.prototype in constructor all the protorypes methods are listed
12:49 < SoulRaven> but when i try to do GeoProint.someMethod i get error
12:54 < SoulRaven> apears if i do : GeoPoint.prototype.setLatitude(arguments[0]); is vorking right
12:54 < SomeoneWeird> because you have to create a new object
12:54 < SoulRaven> but i don't undestand way
13:03 < deoxxa> ezekielnoob: the answer to such a broad question can only be "yes"
13:04 < deoxxa> ezekielnoob: as it happens, javascript is a turing complete language (or as close as any other programming language), so technically you can perform any computable action with it
13:04 < deoxxa> ezekielnoob: so yes, you can use node to stream video
13:04 < guigui22> Hi! I'm knew in node.js. For a university project, I would like to realize a server in node that allow the user to know the fattest way to go from a point A to a point B. I was thinking about using the dijkstra algorithms. But my city provides the data using the GTFS format.. Does anyone already used it? I don't know how it's work..
13:04 < deoxxa> ezekielnoob: you can get more useful answers by asking more specific questions :D
13:07 < nodweber> Hey, I want to Connect NODE.JS with C Program, so what's the best way ? Pipe, Socket or Input/Output... ??
13:08 < RLa> bindings maybe?
13:08 < deoxxa> nodweber: sounds like you'd enjoy https://github.com/rvagg/CAPSLOCKSCRIPT
13:09 < nodweber> deoxxa: Will try..
13:09 < nodweber> RLa: what bindings ? 
13:09 < RLa> native bindings
13:10 < deoxxa> if only this was documented somewhere
13:10 < RLa> there is also node-ffi
13:10 < nodweber> RLa: no I don't want to compile C code into nodejs, I have one code in C that's computing some numbers, and I want to generate Graph Live on the WEB so I choose NODE JS as the mediator..
13:11 < RLa> hm, maybe stdin/out then?
13:11 < nodweber> RLa: yeap, that's one of my options.. 1st: I/O, 2nd: PIPE, 3d: sockets.
13:11 < deoxxa> i'm not sure if NODE JS supports WEB
13:12 < deoxxa> i think it has PIPE
13:12 < SomeoneWeird> use file sockets
13:12 < nodweber> deoxxa: I will run WebSocket Server on nodejs with SOCKET.IO :))
13:12 < deoxxa> oh cool SOCKET.IO is PRETTY good
13:13 < deoxxa> i THINK so anyWAY
13:13 < deoxxa> i've USED it for A FEW things
13:13 < nathan7> MOAR GLORIOUS CAPSLOCK
13:13 < nodweber> deoxxa: so the part I think about is how to communicate with C program :)).. 
13:13 < nodweber> so Thanks guys.. I'll test them all :)))
13:14 < deoxxa> (it should be fairly obvious by now that i'm making fun of your seemingly random ALL CAPS text)
13:14 < nodweber> file sockets/PIPE/ std{in,out}
13:14 < SomeoneWeird> deoxxa, go home you're drunk
13:14 < deoxxa> SomeoneWeird: i wish i was at home, europe sucks ass :<
13:14 < nodweber> :D :D 
13:14 < SomeoneWeird> see how he didn't object to being drunk
13:14 < SomeoneWeird> lmao
13:15 < deoxxa> i'm not drunk =3=
13:15 < nathan7> deoxxa: why does Europe suck?
13:15 < nathan7> okay we don't have kangaroos
13:15 < nathan7> but you don't need to do a lot of shopping anyway
13:17 < SomeoneWeird> hahaaa
13:17 < SomeoneWeird> kangaroos ftw
13:18 < deoxxa> nathan7: i'm just bitter about losing my bag :<
13:18 < SomeoneWeird> oooh
13:18 < SomeoneWeird> that sucks :(
13:18 < SomeoneWeird> anything important?
13:19 < deoxxa> all my clothes
13:19 < deoxxa> :(
13:19 < SomeoneWeird> oh :(
13:29 < nathan7> deoxxa: at least you got rid of the cough, right?
13:29 < deoxxa> mostly
13:29 < nathan7> fact: you managed to launch one of your hairs into my mouth while coughing
13:30 < nathan7> I should've kept it so I could clone an army of deoxxas
13:30 < deoxxa> rofl
13:30 < nathan7> and then freak you the fuck out with them in like 20 years
13:30 < SomeoneWeird> lmao 
13:30 < deoxxa> i want that to be a superpower
13:30 < nathan7> everyone has superpowers
13:30 < nathan7> most of them just really suck
13:31 < deoxxa> "can launch single hairs into the mouths of enemies while coughing"
13:31 < nathan7> I'm your enemy now?
13:31 < nathan7> I can trigger software bugs that were previously unknown and/or considered impossible
13:32 < nathan7> switched to big-ass screen because nobody's using it - glorious.
14:39 < mscdex> ircretary: tell TooTallNate the required number of bytes depends on the magic file entries
14:39 < ircretary> mscdex: I'll be sure to tell tootallnate
14:40 < Industrial> Is there a website that lists nodejs talks (besides 'just youtube/google')?
15:00 < MI6> joyent/node: Ben Noordhuis v0.8 * 4cb17cb : net: fix net.connect() resource leak  The 'connect' event listener was at - http://git.io/--UiJA
15:47 < jtomasrl> do i need a special library to implement API Keys?
15:47 < CoverSlide> API keys? for what?
15:48 < CoverSlide> oh generating API keys?
15:48 < CoverSlide> there's lots of things you can use
15:48 < CoverSlide> crypto.randomBytes is great for randomness
15:49 < CoverSlide> just check on your database if it exists so there's no overlap
15:49 < jtomasrl> i want to protect my api with an API key
15:49 < CoverSlide> pl
15:49 < CoverSlide> *ok
16:06 < ezekielnoob> has anyone tried a face recognition system here?
16:17 < ralphholzmann> anyone have any recommendations for a console colors module?
16:17 < ralphholzmann> there seem to be a handful
16:32 < Kakera> can someone explain the point of 'offset' and 'length' in dgram.send?
16:32 < Kakera> can't it just send the whole buffer like TCP does?
16:33 < astropirate> ralphholzmann, I have developed a technique for selecting modules on npm
16:33 < astropirate> although i haven't codified it yet
16:33 < astropirate> it goes like this:
16:33 < astropirate> Eni
16:33 < astropirate> Mini
16:33 < astropirate> Maini
16:33 < astropirate> Moe
16:33 < Alia> moo
16:33  * astropirate slaps Alia 
16:34 < Alia> fukkk u kuttay
16:34  * Alia slaps astropirate around a bit with a large trout
16:35  * Alia slaps astropirate around a bit with a large trout
16:47 < deoxxa> Kakera: var data = new Buffer(1024 * 1024); dgram.send(data, ...);
16:48 < deoxxa> Kakera: how would you want that to behave
16:48 < Kakera> how does net behave?
16:48 < deoxxa> well it's a stream, so it doesn't matter how it behaves
16:49 < deoxxa> it streams the data into the socket
16:49 < deoxxa> dgram though, is not a stream
16:49 < deoxxa> it's datagram-oriented
16:49 < Kakera> how does dgram.send(data, 0, data.length, ...) behave?
16:49 < deoxxa> i think it explodes if it's larger than what's acceptable
16:49 < deoxxa> (but don't quote me on that)
16:50 < Kakera> just use slice then
16:51 < deoxxa> you want it to silently send only part of what you asked it to?
16:51 < SoulRaven> >> var a = function () { return this.b('say something'); }; a.prototype.b = function (c) {return c; }; new a();
16:51 < purr> SoulRaven: (object) {}
16:51 < deoxxa> that's genuinely distressing
16:51 < SoulRaven> any ideea how i call a prototype from inside the constructor?
16:51 < Kakera> no, I want it to do whatever it currently does with 0 and data.length
16:52 < deoxxa> Kakera: http://nodejs.org/docs/latest/api/all.html#all_dgram_send_buf_offset_length_port_address_callback
16:53 < Kakera> what about it, deoxxa 
16:53 < deoxxa> check the "note about udp datagram size" part
16:54 < deoxxa> that's why it can't just send the whole buffer
16:55 < deoxxa> (if the whole buffer is larger than what's mentioned there)
16:55 < Kakera> I'd like to confirm something
16:56 < Kakera> is dgram.send(data, offset, length, ...) equivalent to dgram.send(data.slice(offset, offset+length), 0, length, ...)?
16:57 < deoxxa> yes
16:57 < Kakera> hence my question
16:57 < deoxxa> except that the latter involves instantiating an entire new buffer object
16:57 < deoxxa> which gets immediately thrown away
16:57 < Sly> deoxxa: <3
16:57 < Kakera> it's just a pointer
16:58 < deoxxa> Kakera: oh, you know how it works already? good! means i don't have to explain anything
16:58 < deoxxa> !next
16:58 < deoxxa> Sly: herro
16:58 < Kakera> what
17:19 < nathan7> isaacs: are there any docs on the tar writer?
17:58 < ralphholzmann> astropirate: loll
18:04 < trankil> ralphholzmann: please, don't laugh here, thank you.
18:12 < bronzebyte> # wget http://nodejs.org/dist/v0.8.14/node-v0.8.14.tar.gz
18:12 < bronzebyte> --2012-11-24 18:09:57--  http://nodejs.org/dist/v0.8.14/node-v0.8.14.tar.gz
18:12 < bronzebyte> Resolving nodejs.org... 165.225.133.150
18:12 < bronzebyte> Connecting to nodejs.org|165.225.133.150|:80... connected.
18:12 < bronzebyte> HTTP request sent, awaiting response... 200 OK
18:12 < bronzebyte> Length: 11861540 (11M) [application/octet-stream]
18:12 < bronzebyte> Saving to: `node-v0.8.14.tar.gz'
18:12 < bronzebyte> 21% [=======>                               ] 2,509,192   29.4K/s  eta 4m 24s
18:12 < bronzebyte> Node.js download needs a CDN :P
18:12 < bronzebyte> Sorry for spam btw, didnt know it would be so many lines
18:13 < bronzebyte> Cloudflare would be perfect as most of nodejs their website is static :o
18:14 < trankil> bronzebyte: please disconnect you from this chan yourself, thank you.
18:14 < bronzebyte> trankil, and should I do that?
18:14 < bronzebyte> *and why
18:15 < ralphholzmann> trankil: my apologies
18:15 < ralphholzmann> trankil: what emotions are allowed?
18:15 < deoxxa> trankil: dude
18:15 < deoxxa> trankil: don't be a jerk, please.
18:15 < trankil> ralphholzmann: We don't accept 'lol' here anymore. thats enough.
18:16 < bronzebyte> trankil, I don't see "lol" anywhere, do you?
18:17 < trankil> bronzebyte: I hope you just understand us, please without any reason, disconnect you.
18:18 < bronzebyte> trankil, having your period?
18:18 < deoxxa> apparently he thinks he's funny
18:19 < trankil> bronzebyte: When you write things like that "Node.js download needs a CDN", are you serious?
18:19 < trankil> Node needs nothing, dude.
18:19 < trankil> Go and do java.
18:19 < trankil> bronzebyte: Please leave now.
18:19 < bronzebyte> trankil, lol, I download at 30Kbyte on a VPS in Portugal...
18:19 < deoxxa> trankil: your english is bad and you should feel bad
18:21 -!- mode/#node.js [+o piscisaureus_] by ChanServ
18:22 < trankil> bronzebyte: You are just doing bad deductions
18:22 < ralphholzmann> trankil: what about "rofl", or a simple, "haha"
18:23 < trankil> Its the whole portugal vps that are shits, not node cdn.
18:23  * deoxxa taps konobi
18:24 -!- mode/#node.js [+o piscisaureus_] by ChanServ
18:24 < bronzebyte> 120Kbyte/s from home connection, trankil
18:24 < bronzebyte> And my home connection is certainly not "shit"
18:24 < bronzebyte> It's not that node is "shit", it's just so popular that I gets slow
18:24 < bronzebyte> *that it gets slow
18:25 < bronzebyte> You might want to stop bashing at other people, trankil, and take a look at your on behaviour, because you're acting the most immature of all
18:25 < bronzebyte> *your own behaviour
18:25 < trankil> bronzebyte: So please stop download node from portugal villages.
18:26 < bronzebyte> trankil, if you would like to point out some mirrors, sure, even though it's only 10MB
18:26 < bronzebyte> and I am situated in the Netherlands by the way
18:26 < bronzebyte> and getting same speed
18:26 < bronzebyte> Even from Rackspace and Linode I get 120KB/s so what are you claiming with "shit" portugal VPS?
18:27 < bronzebyte> Rackspace UK: 2012-11-24 17:13:12 (59.5 KB/s) - `node-v0.8.14.tar.gz' saved [11861540/11861540]
18:28 < trankil> bronzebyte: Don't try to justify anything
18:28 < deoxxa> bronzebyte: trankil is a failure as a person
18:28 < bronzebyte> and this is my "shit" portugal donwloading from Cachefly: 2012-11-24 18:27:15 (15.6 MB/s) - `100mb.test' saved [104857600/104857600]
18:28 < trankil> Omg, php and java guys doesnt understand simple things.
18:29 < bronzebyte> deoxxa, noticed that, sadly there are just people like that
18:29 < bronzebyte> trankil, or you are just being a prick?
18:29 < bronzebyte> Do you perhaps have an anger problem, trankil?
18:29 < eff> hi
18:30 < bronzebyte> Hi, eff :-)
18:30 < trankil> ralphholzmann: note that i used "Omg"
18:31 < trankil> ralphholzmann: so, we allow that here, for portugal java guys.
18:31 < bronzebyte> Are you trying to say that I'
18:31 < bronzebyte> m from portugal?
18:31 < bronzebyte> I'm from the freaking Netherlands like I said before -.-
18:32 < bronzebyte> What is your problem, trankil...
18:32 < eff> i've been searching on the internet but i quite didn't found a good answer, i'd like to know when does node schedule between my differents "threads of execution" i know it schedule basically on IO, but is it the only case ? does a function call trigger a schedule, what else can do ?
18:32 < bronzebyte> eff, are you refering to something like setTimeout?
18:33 < bronzebyte> Because as far as I understand your question: node has it's own thread pool and tries recycling threads for multiple operations.
18:33 < eff> my question is what trigger a context switch in node
18:33 < thinkerweb> I wanna make a website for discount price web design Services offering free hosting, templates, apps.  I was hoping you guy would help me brain storm branding; please recommend a domain name for me to purchase.
18:33 < eff> a blocking IO will trigger a context switch, but what else ?
18:34 < trankil> thinkerweb: is your site about design?
18:34 < trankil> thinkerweb: ok, i think this can be good www.notforportugalnornetherlandsjavaguys.com ?
18:35 < thinkerweb> trankil, if required, but I am offerring to use free templates that you can download off web
18:36 < trankil> thinkerweb: so, its templates for the web, that you can download off the web?
18:37 < bronzebyte> trankil, why do act like this?
18:37 < trankil> thinkerweb: We think thats a great concept, you will be quite rich.
18:37 < thinkerweb> bronzebyte, hehe, wierdo eh
18:38 < thinkerweb> trankil, no, well it not the focus, just plain old webdesign is the focus, but being cheap is a focus, and using free templates will help my customers save money, if they want me to design, it will cost more.  I will charge by the hour, like $20/hr, so if they use a free template, they will save the hours taken for me to code their custom design
18:39 < eff> bronzebyte: require('net').createServer(function(socket){while(1);}).listen(1234);  for example is this thing gonna schedule at some point or the application would stay frozen forever after the first client connect ?
18:39 < bronzebyte> eff, it would deadlock (freeze) as soon as someone connects
18:40 < bronzebyte> Not sure if it will be on it's on thread or it will hold up the rest
18:40 < bronzebyte> Would say: give it a try? :)
18:40 < trankil> thinkerweb: TLDR; but you will be more rich then.
18:41 < thinkerweb> trankil, what is this tldr?
18:41 < bronzebyte> Sort of summary
18:41 < eff> this is a minimalistic example, i can try for this one but i'd like to know exactly what action will generate a context switch except for IO, does an emmiting an event generate a context switch? does calling a function generate a context switch ?
18:41 < trankil> thinkerweb: And you should use node for your template and other designs
18:41 < trankil> thinkerweb: it will make the colors more accurate and flashy.
18:41 < eff> tldr: too long didnt read
18:42 < thinkerweb> trankil, hmm, I thought node was about making networked applications on the web
18:42 < thinkerweb> ok, I will go take  hike so since I am off topic, but quickly then, how about ninjawebdesign.com?
18:43 < trankil> thinkerweb: No, thats an understood idea php and java people have.
18:43 < trankil> *misunderstood
18:44 < bronzebyte> thinkerweb, started as HTTP framework, wasn't popular at all until TCP networking was introduced
18:45 < eff> bronzebyte: ok this thing as expected deadlock, how could i change this so it still accept other connection even if each single connection are heavy computing ?
18:45 < thinkerweb> bronzebyte, cool 
18:45 < thinkerweb> bronzebyte, it is the future
18:45 < bronzebyte> eff, while to stop a thread is not how node works, you use timers for that (as in setTimeout and setInterval)
18:45 < bronzebyte> thinkerweb, yes, it is, because learning node.js is way easier than where node.js is written in: C++
18:46 < eff> bronzebyte: i know i am just trying to learn about the mechanism of the vm 
18:46 < bronzebyte> thinkerweb, taking in mind that you can learn node.js in a year and C++ in like 5 years can be cheap for big companies looking for devs
18:46 < eff> replace the while(1); by a cpu heavy operation
18:46 < eff> pretend i need to calculate a fibonacci(21); for each connection, but i dont want the other client to wait for 8 secondes to be connected
18:47 < bronzebyte> eff, node.js is not made for CPU intensive tasks
18:47 < eff> ok i explained my case bad
18:47 < bronzebyte> eff, node.js is async networking, not asyng computing ;-)
18:47 < eff> i am not trying to advocate that
18:48 < bronzebyte> eff, I believe you can manually start threads, where you could do the calculation and then make a callback
18:48 < eff> my question is, what operation (such a .write() .read() ... ) trigger a context switch
18:48 < eff> does emiting event generate a context switch ?
18:48 < eff> does calling a function do ?
18:48 < eff> how can i find ressources on this subject other than reading the c++ code of the VM ?
18:49 < bronzebyte> eff, ask one of the node.js authors 
18:49 < bronzebyte> :-)
18:49 < Kakera> eff, you can't trigger a context switch
18:49 < bronzebyte> eff, or someone who has had the issue before
18:49 < Kakera> node will switch it when it's done with the current context
18:49 < eff> Kakera: when does node consider being done with the current context except IO ?
18:49 < eff> only IO ?
18:50 < bronzebyte> eff, it's all based on callback calls
18:50 < bronzebyte> eff, I/O is threaded in a pool on the back-end
18:50 < eff> i know
18:51 < Kakera> eff, when it gets to the end of the function that started the context
18:51 < bronzebyte> I am not sure but I don't think your application or module is able to access that pool
18:51 < bronzebyte> eff, interested in a cheaphax?
18:52 < eff> bronzebyte: i dont have a problem to solve, i dont need hax 
18:52 < eff> i just try to find some learning material on the comportment of node related to context switching, just to learn the engine better :)
18:53 < bronzebyte> eff, node.js is state-of-art, most of time you would be better off searching for an alternative solution rather than writing big chunks of codes to take over work from the engine
18:53 < Kakera> eff, http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/
18:54 < bronzebyte> eff, for example, you could spawn a process to do the hard calculating for you as node.js is not good at calculations/CPU intensive tasks
18:55 < eff> bronzebyte: forget about the heavy calculation it was just an example i dont do heavy cpu operations
18:55 < eff> Kakera: thanks for the link
18:55 < bronzebyte> eff, still, then the process API would do the async for you :-)
18:56 < bronzebyte> From Kakera's link: It really is a single thread running: you can’t do any parallel code execution; doing a “sleep” for example will block the server for one second. So while that code is running, node.js will not respond to any other requests from clients, since it only has one thread for executing your code. Or if you would have some CPU -intensive code, say, for resizing images, that would s
18:56 < bronzebyte> till block all other requests.
18:56 < bronzebyte> So if you do while (1); no events will be called
18:57 < bronzebyte> eff, So if you do while (1); no events will be emitted, the ENTIRE node process will be stuck
18:57 < eff> yes yes i understand this concept
19:04 < eff> Kakera: your blog post answered one of my questions, function call does not trigger a context switch, but the post didnt talk about the emission of an event
19:04 < thinkerweb> ok I have two ideas for my new domain for a discount webdesign company: frugalwebs.com vs thriftywebs.com
19:05 < Kakera> eff, I'm not entirely sure, but I suppose the event gets queued
19:06 < deoxxa> eff: anything in javascript-land is pretty much a function call
19:07 < thinkerweb> ok I am going with thrifty, now I need an icon
19:07 < deoxxa> eff: context switches will happen when you do i/o, or use anything that talks to an external thread (using the worker pool in libuv), or for various bookkeeping reasons
19:07 < deoxxa> eff: emitting an event isn't anything special, it's just another function call
19:10 < eff> deoxxa: thanks you you nailed my question :)
19:11 < eff> now that i know that, what is the common pattern used by the node library which have to make some cpu intense operation, for example a service to generate thumbnail, a fibonacci bullshit, ... to stay responsive ? spawn one process by request ?
19:14 < Fike_> wasn't aware node.js had a string format method similar to python
19:14 < Fike_> hm
19:15 < deoxxa> eff: thread pool, my ninja
19:15 < trankil> Fike_: Yeah of course, node hazzz regexp
19:15 < Fike_> trankil: I know
19:15 < trankil> eff: these modules uses node, and everthing work.
19:15 < Fike_> I was going to make my own module for things like format etc.
19:18 < trankil> Fike_: so i suppose you are very disappoint that formating strings already exist
19:18 < trankil> you can make another module to format your /home?
19:18 < Fike_> haha
19:18 < Fike_> good idea trankil 
19:18 < Fike_> xD
19:19 < Fike_> well, my module was going to bring some python string manipulation features in
19:19 < trankil> or to transfert in *realtime* /home to /dev/null using Express an SocketIO
19:19 < Fike_> I guess some things could be implemented
19:19 < trankil> and RabbitMQ
19:19 < Fike_> lul
19:19 < trankil> and MongoDB
19:20 < eff> dont forget redis
19:20 < Fike_> o mg
19:20 < Fike_> redis pls
19:20 < Fike_> !!
19:20 < trankil> no :|
19:20  * Fike_ doesn't use node.js for web shit
19:20 < eff> hey it's realtime you need some redis!
19:22 < Fike_> util.debug(string)#
19:22 < Fike_> A synchronous output function. Will block the process and output string immediately to stderr.
19:22 < Fike_> synchronous
19:22 < Fike_> o mg
19:22 < Fike_> not acceptibell
19:23 < eff> yes it is, if it was async it would mess debuging ! >_<
19:23 < Fike_> eff: everything in node should be vry async ! ! ! ! ! 1111 ! !11 !!
19:23 < bakadesu> what about util.log ?
19:24 < Fike_> including if statements
19:24 < Fike_> make if statements async pls
19:24 < eff> haha +1 for the if
19:24 < Guest77407> any ideas on this ? http://stackoverflow.com/questions/13544625/synchronous-flow-in-loops-in-nodejs
19:24 < Fike_> ew
19:25  * Fike_ hates looking at those ugly for loops :(
19:25  * Fike_ gets back to rewriting nodeirc
19:26 < Fike_> fukn regexs
19:26 < Kakera> Fike_, you're the author of node-irc?
19:26 < Fike_> Kakera: no, nodeirc
19:26 < Fike_> different :p
19:26 < Fike_> couldn't come up with any other name for it
19:26 < Fike_> what I have is a lot more advanced than node-irc though
19:27 < Kakera> link
19:27 < Fike_> let me spawn a client
19:27 < Fike_> Kakera: haven't pushed anything yet
19:27 < Fike_> it's 260 lines
19:27 < Fike_> doesn't use regex though, so rewriting the core
19:28 < Fike_> Kakera^
19:28 < Alphabetti> my repl loop brings boys to the yard
19:29 < Alphabetti> damn right, has global and more
19:29 < Alphabetti> damn right, has global and more
19:29 < Alphabetti> pls fix me
19:29 < Alphabetti> Kakera: I support custom CTCP responses too from the config object :3
19:30 < Alphabetti> /ctcp Alphabetti VERSION
19:30 < Alphabetti> /ctcp Alphabetti TIME
19:30 < Alphabetti> /ctcp Alphabetti SECRET
19:30 < Alphabetti> gimme something to add
19:31 < eff> dcc send / receive ?
19:32 < Fike_> eff: DCC is horrible and dumb imho. Not really a priority but I guess I'll implement it eventually
19:32 < eff> you asked for more ;p
19:33 < Fike_> eff: I meant another CTCP response to add :p
19:33 < Fike_> handy that I can add them on the fly
19:33 < Fike_> one of those little pointless things
19:35 < Fike_> eff, Kakera: think it should auto reconnect by default?
19:35 < Fike_> it's configurable at the moment
19:36 < Fike_> but I have an object for default config
19:36 < eff> reconnect by default is the behaviour most of the user except i guess
19:37 < eff> expect*
19:37 < Fike_> I guess
19:38 < Fike_> regexes will give this a speed boost anyway :p
19:45 < Aria> Only possibly, Fike_. Don't discount how fast V8 runs some loops that run character by character.
19:45 < Fike_> Aria: I might evaluate the difference now
19:46 < Fike_> regex vs manual splits
19:46 < Aria> Split, however, involves a lot of allocation. It won't be fast.
19:46  * eff is curious for the bench
19:46 < Aria> (Character by character access is fast.)
19:46 < Fike_> Aria: unsure what you mean by character by character
19:47 < Aria> string[0], string[1], string.at(0), etc.
19:47 < Fike_> ah I see what you mean
19:47  * Fike_ shuts down client
19:49 < Fike_> Aria: is there any limit to how long a single line of code can be in the ecmascript specs?
19:49 < Aria> No.
19:49 < Fike_> python is something like 89, I think
19:50 < Aria> 89? Characters?
19:50 < Aria> Insanity if true.
19:50 < Fike_> yep
19:50 < Fike_> not a limit as in it throws exceptions when run
19:50 < Fike_> but in PEP 8 I believe it says it recommends keeping lines under 89 chars
19:50  * Fike_ looks again
19:50 < Fike_> Limit all lines to a maximum of 79 characters.
19:51 < Fike_> "There are still many devices around that are limited to 80 character lines; plus, limiting windows to 80 characters makes it possible to have several windows side-by-side. The default wrapping on such devices disrupts the visual structure of the code, making it more difficult to understand. Therefore, please limit all lines to a maximum of 79 characters. For flowing long blocks of text (docstrings or comments), limiting the length to 72 characters is
19:51 < Fike_>  recommended."
20:06 < Murk> Hey, I'm pretty new to node, I'm buidling a small app, but I need to transfer files from a client to a server. Any ideas on how to go about this with node?
21:13 < ettinger> i made one small error in my data backup plan. I forgot to calculate how long it will take to transfer my data out over 1Mbps.
21:13 < ettinger> turns out i can only move about 7gb/day
21:17 < jamesd> incrementals are your friend... also don't forget the bandwidth of a stationwagon full of flashdrives 
21:20 < deoxxa> jamesd: i had an interesting argument about that with a friend of mine who lives a couple of states away from me a few years back
21:21 < jamesd> http://xkcd.com/949/  
21:23 < deoxxa> jamesd: turned out that if we used optical media (as was the trend at the time), there was a point at about 10tb where it was cheaper to get 2 high speed internet connections for a month than it was to mail cds
21:23 < deoxxa> dvds fared better
21:23 < jamesd> deoxxa, but what about if you used  blu-ray disk-r... 
21:24 < deoxxa> heh
21:24 < ettinger> jamesd: yeah, but i have to put the initial data on the server somehow
21:24 < ettinger> it will take me 2 months if i upload 24/7
21:25 < jamesd> off to curcuit city for 3TB sata drives and then time for a road trip. 
21:25 < deoxxa> ettinger: you have ~450gb of data?
21:26 < ettinger> deoxxa: yeah
21:26 < deoxxa> YAY MATH
21:26 < ettinger> heh
21:26 < deoxxa> some providers will hook up a usb drive if you send it to them
21:26 < deoxxa> probably no luck if it's in the cloud
21:26 < ettinger> i'm using ovh
21:26 < deoxxa> oh?
21:26 < deoxxa> they do it
21:26 < deoxxa> you can send them a usb drive and they'll go plug it in
21:28 < ettinger> hmm
21:28 < ettinger> have you done it?
21:28 < deoxxa> not personally, but i've heard of it being done
21:28 < deoxxa> granted, this was back in like 2007 when they were quite a bit less formal
21:29 < ettinger> i can ask them
21:29 < ettinger> i'm just wondering if they would even have room for an external drive
21:31 < ettinger> i think i might just use rsync w/ bandwidth throttle and let it go for months
21:44 < ettinger> how come my server i get 100Mbps, but at home I pay $50/mo for 6Mbps and am supposed to like it.
21:45 < theForce> hi
21:46 < nykac-> ettinger: because most ISPs are greedy, and don't care about you
21:47 < theForce> when i install a package via npm then also the dependencies of that package get installed in a node_modules/ subdir in said package. Is it possible to tell npm to skip downloading a dependency if it is already installed?
21:47 < monkeymon> my isp doesnt love me?
21:47 < nykac-> theForce: it should, if the dep is in the root node_modules
21:48 < deoxxa> actually nykac- that's a little inaccurate
21:48 < nykac-> deoxxa: which statment?
21:48 < deoxxa> it'll skip installing it if it's being installed automatically (i.e. via package.json)
21:48 < deoxxa> if it's being installed manually, like `npm install some-package', it'll assume you're doing some kind of development and it'll download all the dependencies
21:48 < theForce> nykac-: can i make npm to remove the dependency afterwards (from the packages' node_modules) if i install it in the root node_modules?
21:48 < deoxxa> regardless of whether they're available in the current location
21:49 < nykac-> theForce: of course, just remove it from the package.json
21:49 < nykac-> and do npm remove some-pkg
21:50 < theForce> but then i'd have to manually introduce changes in a third party module. obviously i dont want to do that
21:51 < deoxxa> theForce: the short version is "don't worry, npm will do the right thing when you install the dependencies from package.json"
21:52 < deoxxa> theForce: npm's behaviour when you're using it for development stuff is nearly always different (regarding things like devDependencies etc)
21:52 < theForce> lets say i install module A. A has dependency B, which gets installed in ROOT/node_modules/A/node_modules/B. now i install B in ROOT/node_modules/B. how can i get npm to automatically remove B from ROOT/node_modules/A/node_modules/B?
21:52 < deoxxa> it doesn't
21:52 < deoxxa> it doesn't automatically remove things
21:52 < deoxxa> that's just... silly
21:52 < deoxxa> HOWEVER
21:53 < deoxxa> if you install your dependencies by listing them in package.json, that's the end result you'll get
21:53 < theForce> how is that silly? if you have a certain switch to explicitely tell npm to do that
21:53 < deoxxa> well think about it
21:53 < deoxxa> when you're installing package A, it's saying "i want B@some.version.mask"
21:54 < deoxxa> then when you install B manually, you're probably just doing `npm install B'
21:54 < deoxxa> now what's meant to happen if A specifies version 1.0.x, but the latest is 2.5.3?
21:54 < theForce> ok that makes sense
21:56 < deoxxa> so, as long as you have package A and package B defined in your dependencies in package.json, and the version masks for package B in your package.json and package A's package.json are compatible, you will only end up with one copy of package B *when* you install your dependencies in one shot (i.e. npm install .)
22:11 < superjoe30> isaacs, can you reclaim the npm name `s3` for me?
22:11 < superjoe30> https://github.com/superjoe30/node-s3
22:11 < superjoe30> this is tested and working
22:11 < superjoe30> whereas the actual `s3` package in npm says that it is "planned" to do something
22:11 < superjoe30> he's clearly squatting
22:11 < Industrial> I wonder if you could have strict MVC like this: Have the Model and Controller on the server and the View on the client, just implementing the observer through an EventEmitter or eg shoe/sockjs
22:12 < superjoe30> I'll give it 10 minutes and then I'm just going to pick a different name
22:13 < superjoe30> tjholowaychuk, what was that about npm supporting namespaced packages? do you have a link to docs for that
22:13 < Industrial> would only need a (sockjs) connection for each user, not a controller and model too (in memory) if all the View -> Controller actions pass the user/session/sockjs-connection as an argument..
22:16 < deoxxa> superjoe30: https://npmjs.org/doc/disputes.html
22:16 < superjoe30> thanks
22:17 < deoxxa> sorry that's for the squatting thing
22:17 < deoxxa> not the namespace thing
22:17 < deoxxa> i have no idea abotu that
22:17 < deoxxa> *about
22:17 < AAA_awright> superjoe30: https://github.com/Acubed/git-node
22:18 < AAA_awright> Everyone should use that.
22:18 < AAA_awright> Once the bugs are worked out.
22:18 < superjoe30> yuck
22:18 < superjoe30> I'll go the dispute route
22:20 < AAA_awright> superjoe30: What do you mean yuck
22:20 < superjoe30> git submodules have a valid use case, but 1. they are a bit clunky and 2. npm is so nice to use
22:21 < AAA_awright> I should just remove all mention of submodules because that's not what you're doing
22:21 < nykac-> hmm, perhaps add the functionality to npm instead
22:21 < AAA_awright> npm by design can't support those features
22:22 < AAA_awright> Because, well, single namespace
22:22 < nykac-> AAA_awright: why wouldn't npm be able to add a submodule for each dep?
22:23 < AAA_awright> Well before that, there's many different meanings of 'npm' are we talking the online registry, or the software?
22:23 < AAA_awright> As for the software, it's massively bloated, it's more social network than package manager
22:23 < nykac-> the project looks cool
22:24 < AAA_awright> nykac-: The idea is you don't need npm for anything, it stands by itself. If you want to fork a module, you just fork it on GitHub or to your own URL, update the package clone URL, and checkout your fork
22:25 < AAA_awright> There's no global names at all, since it uses commit ids to identify packages.
22:25 < AAA_awright> So I don't really see how npm could fit in, they're such different beasts
22:27 < deepairusseenah> .
22:28 < AAA_awright> nykac-: If you could try it out and report what you want to see improved I'd appreciate it
22:29 < nykac-> AAA_awright: i'll test it out for my next node.js project
22:30 < AAA_awright> It's also primarially for applications...
23:08 < myndzi> anyone know if there's a browser implementation of streams, event emitters, and/or buffers from node?
23:10 < AAA_awright> I know there is... Maybe someone can link to the best implementation
23:10 < AAA_awright> myndzi: Browserify probably has some research in that area
23:17 < myndzi> i found eventemitter2 and browserify, but i was hoping for something i could just source and include
23:17 < myndzi> may not need it after all though, looks like it won't help me with certain bits
--- Log closed Sun Nov 25 00:00:09 2012
