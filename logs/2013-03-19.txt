--- Log opened Tue Mar 19 00:00:39 2013
00:02 < neppord_pine> Technodrome: Just to clarify, there is no syntax for it. But JavaScript is very nice to do things like that in any ways. 
00:04 < Technodrome> neppord_pine: so we can exploit the comments and write a parser for it 
00:04 < neppord_pine> Haha, no!
00:05 < Technodrome> neppord_pine:  how would you do it then?
00:05 < neppord_pine> We are talking about anotating the already defined app.get function?
00:05 < neppord_pine> Right?
00:06 < Technodrome> yes
00:06 < Technodrome> or you mean actually parse the function?
00:06 < Technodrome> neppord_pine: sorry I didn't catch your sarcasm there for a second :) 
00:08 < neppord_pine> app.get = (function (app, get) {return function(){console.log(arguments);get.apply(app,arguments);};})(app, app.get);
00:09 < tjholowaychuk> there's also app.routes, you dont have to wrap stuff
00:09 < neppord_pine> Technodrome: No sarcasem. But I still think we dont understand each other. 
00:09 < neppord_pine> tjholowaychuk: Thx. 
00:10 < Technodrome> neppord_pine: how would you make something that would return all the url's and where the function that defines them is located?
00:10 < neppord_pine> Technodrome: To find them I would use grep. 
00:11 < othiym23> the only way to get that information through reflection doesn't work under JavaScript's strict mode
00:11 < Technodrome> neppord_pine: even worse :) 
00:11 < tjholowaychuk> Technodrome why not just https://gist.github.com/visionmedia/d5c8912e66d81d597b07
00:12 < tjholowaychuk> do that and walk those keys, split on space, and require(./routes/firstPartHere)[secondPartHere]
00:12 < tjholowaychuk> or similar
00:13 < neppord_pine> tjholowaychuk: 1+. 
00:13 < kenperkins> othiym23: to your point about hardware being fun, doesn't really line up with my job desc :D
00:13 < othiym23> kenperkins: yeah, I saw that
00:13 < kenperkins> did I repeat? 
00:13 < othiym23> but the idea is to have regular sessions too
00:14 < kenperkins> oh crap, i did, must have hit up arrow and not realized
00:14 < kenperkins> srry
00:14 < othiym23> I didn't go last year, but Adron and Troy seem like solid organizers and some of the talk proposals look pretty interesting
00:14 < othiym23> kenperkins: yeah, but no bigs
00:14 < kenperkins> I presume if I can only do one conf, do node?
00:14 < kenperkins> (nodecofn)
00:14 < kenperkins> that said, I could drive down for one day of nodepdx
00:15 < Technodrome> tjholowaychuk: seems like django still has the express stuff beat 
00:15 < tjholowaychuk> Technodrome express has no stuff for that
00:15 < tjholowaychuk> so of course :p
00:16 < tjholowaychuk> I'm just saying it's trivial to write a little thing that maps some routes
00:16 < tjholowaychuk> however you want to
00:16 <@mbalho> all the pros use req.url.match since regex is implemented in C
00:16 < tjholowaychuk> https://docs.djangoproject.com/en/dev/topics/http/urls/
00:16 < tjholowaychuk> is that what it looks like?
00:16 < context> i think it'd be more appropriate to compare django against say... railway or tower
00:17 < othiym23> kenperkins: Nodeconf is going to be a ridiculously valuable brainfuck
00:17 < kenperkins> and party.
00:17 < othiym23> NodePDX will be a much more laid-back normal sort of conference, I think
00:17 < kenperkins> don't forget that
00:17 < kenperkins> maybe I can get rax to sponsor one of them tho
00:17 < tjholowaychuk> stuff like  url 'news.views.year_archive' 2012
00:18 < tjholowaychuk> is the stupid part IMO
00:20 < MI6> joyent/libuv: piscisaureus created tag node-v0.5.6 - http://git.io/4RW6tg
00:21 < neppord_pine> tjholowaychuk: seams easy enough to replicate, yes. 
00:46 < d48> hi everyone, is there any way to "require" a file and use an object and it's properties if it is not wrapped or returned via `module.exports`?
00:46 < d48> s/properties/methods/
00:46 < Criten> d48, don't think so
00:47 < Criten> d48, you can always turn it into a class
00:47 < Criten> and exports the class
00:47 < Criten> but granted I just started with node... so don't quote me on that
00:47 <@Nexxy> d48, you could use some AST magic
00:47 < d48> thanks Criten. what's a sample?  I have prebuilt js objects and functions and what to start integrating them in a test suite
00:48 < Criten> gotcha... well.. I'm probably not the best person to talk to :P
00:48 < d48> @Nexxy in what way?
00:49 < d48> Criten: lol, thanks
00:49 <@Nexxy> d48, https://github.com/substack/node-falafel
00:50 < Criten> I should probably get around to installing npm
00:50 <@Nexxy> you could wrap just wrap it with module.exports and then require it
00:50 < Criten> ^ probably what I would do
00:50 <@Nexxy> lol -wrap
00:50 < Criten> haha
00:50 <@Nexxy> ssh lag ;<
00:50 < Criten> :P
00:51 < d48> @Nexxy thanks for link to falafel
00:51 < Criten> Hey I posted a little mvc framework i'm making on here earlier today and i got some good tips. would you be willing to take a look at is Nexxy?
00:56 < samholmes> Isn't 1300 lines of stylesheet code a bit unmanagable?
01:01 < othiym23> it's great that rwaldron takes such detailed notes, but man, it's grueling making it through them
01:01 < othiym23> I can't even imagine paying close enough attention to write all this shit down
01:02 < niggler> ?
01:02 < othiym23> sorry, reading rwaldron's notes from the latest TC39 meetings on ES6
01:02 < othiym23> the newest stuff on the module system is looking way less shitty
01:02 < othiym23> not sure I'm ready to call it "good" yet
01:03 < othiym23> still not sold on the benefits of making the module syntax statically checked
01:03 < lovemuffin> why does the defult android pdf reader suckkkkkkk
01:03 < niggler> what do they use/?
01:07 < Virunga> niggler: you never sleep? xD
01:09 < niggler> i just took a nap Virunga 
01:09 < niggler> i couldn't make it -- trying to wean off of red bull and its hard :/
01:09 < jrajav> He must niggle
01:09 < jrajav> If he doesn't - who will?
01:09 < jrajav> Who will....
01:10 < Virunga> lol
01:11 < niggler> i am a niggler, not 'the' niggler
01:18 < samholmes> Is there a way to make all rules in a stylus declaration be !important?
01:18 < faceleg|work> stylus?
01:19 < context> samholmes: maybe you should learn css ? :-/ im not a css guru but using !important everywhere is just wrong
01:21 < samholmes> context: Whatcha talkin about?
01:22 < samholmes> I use !important when I need to have a rule override another rule in a declaration that has a select that takes precedence over another.
01:22 < samholmes> selector*
01:24 < samholmes> For example, I might have `input` nested within a few selectors (in stylus), then on a specific page I would like to set the width of all `inputs`, but the selector wouldn't be nested as deep, so I would need an !important clause.
01:26 < Criten> q
01:26 < Criten> ....that's like the 5th time i've done that today
01:27 < samholmes> Criten: Why do you keep doing that?
01:27 < matbee> Anyone here use mscdex's ssh2 module? How do I start a shell instance and execute commands?
01:27 < Oddman> what's a really good ORM for mysql?
01:28 < matbee> I have environment variables previously set and I need my ssh instance to use them :)
01:30 < bradleymeck> matbee: sshd can reject ppl trying to set env vars so i would just add it to your cmds
01:33 < matbee> bradleymeck, even from trying to read from them? I'm using NVM and ssh2 isn't reading my alias
01:33 < matbee> bradleymeck, would I just c.shell(function(){c.exec();});?
01:33 < bradleymeck> matbee: ssh2 once it is connected is w/e shell ssh provides, it does not propagate env directly
01:33 < bradleymeck> you could do that
01:35 < bradleymeck> sshd provides*
01:37 < mscdex_> matbee: i've used the ssh2 module!
01:37 < matbee> LOL
01:37 < matbee> orrrrly?
01:37 < dekuked> how do I fix this?: https://gist.github.com/dekuked/5192869
01:37 < mscdex_> :-D
01:38 < bradleymeck> mscdex_: it is soo close to having proxycommand
01:38 < dekuked> I have libpcap-dev installed as well
01:38 < mscdex_> bradleymeck: yeah, haven't had time to work on that feature
01:38 < bradleymeck> mscdex_: s'fine
01:38 < bradleymeck> we are slowly working on other things but coming back to it
01:38 < bradleymeck> got some fancy stuff by end of next week
01:39 < mscdex_> matbee: you don't need exec() within shell() like that
01:39 < matbee> mscdex_, oh? Do I use the stream somehow?
01:39 < mscdex_> matbee: what are you doing exactly?
01:40 < matbee> mscdex, well, launching a shell script remotely--- but we're not getting the environment variables that we are in our shell instances
01:40 < matbee> and by environment variables I mean aliases :)
01:41 < dekuked> so no one's screwed around with pcap recently?
01:41 < faceleg|work> damn thought you said pcp for  moment
01:42 < mscdex> dekuked: pcap is outdated
01:42 < mscdex> dekuked: fwiw: https://github.com/mscdex/cap
01:43 < dekuked> mscdex: thank you!
01:43 < dekuked> also a lib depending on waf is a bad sign, right?
01:44 < mscdex> dekuked: if the project does not have a binding.gyp, then it's out of date
01:44 < matbee> mscdex, so the problem is nvm aliasing isnt working ^_^
01:46 < matbee> Essentially this is what is happening: c.exec("alias penis='echo balls';penis", function(err, stream) {}); ... and I get: bash: penis: command not found
01:47 < matbee> mscdex, ^-- :)
01:48 < Nopik> is something wrong going with registry.npmjs.org ? I've started to receive http 304 instead of 200 in case of some packets, like coffee-script 1.6.2
01:49 < Nopik> ah, nvm, it is on my side
01:49 < bradleymeck> nopik 304 means unmodified cache matches so it does not do a full request
01:50 < Nopik> bradleymeck: yeah, 3xx is positive response, but for some reason npm was hanging on those packets, but the issue was apparently related to my network, not to the registry
01:52 < mscdex> matbee: does it work with shell() instead of exec() ?
01:55 < matbee> mscdex, can shell execute an arbitrary string command?
01:55 < matbee> mscdex, all I can see is the window options and a channelstream
01:56 < mscdex> matbee: it basically gives you an interactive shell session like you would see when logged in with PuTTY or plain ssh
01:57 < mscdex> you can set environment variables separately when using exec() if the server supports it
02:01 < mootzville> ehrmergerd! 0.10 is out!
02:02 < Astraea|Away> Good Morning.
02:04 < Astraea> I've run into trouble getting https working, and I'm hoping one of you can point me in the right direction.
02:04 < Astraea> Everything was running fine when I tested it locally, but when I uploaded the files to the remote server I can't connect.
02:05 < Astraea> No pop-up asking me if I want to trust the certificate, no activity in the firebug net panel (or the Chrome network panel). Just nothing.
02:05 < matbee> mscdex_, well, I just can't read/write any environment variables as it is :P.. I -just- need to read them..
02:05 < matbee> mscdex, I've no idea how to use .shell() to execute a command
02:06 < s3shs> Anybody here familiar with async?
02:06 < matbee> s3shs, yep, whats up?
02:07 < s3shs> So I'm having a weird issue.
02:07 < Astraea> Async is a big topic, what's the problem?
02:07 < s3shs> To simplify things I use $.proxy.
02:07 < s3shs> It's working well except for this one function.
02:08 < s3shs> It keeps failing on async.js:568 tasks[index].apply(null, arguments);
02:08 < s3shs> With: Cannot call method 'apply' of undefined
02:08 < s3shs> At the end of this one function I call next(null).  And it works fine.
02:09 < Astraea> I'm guessing this is jQuery. I'm don't use the library :/
02:09 < s3shs> :-(
02:09 < Astraea> Couldn't tell you what to do, except to go up the call stack and find where you're passing 'undefined'.
02:10 < s3shs> Unfortunately it's in waterfall and ends up back at nextTick.
02:12 < Criten> samholmes, :q is quite in vim... and I use irssi as my irc client... so just out of habbit...
02:12 < samholmes> I se
02:15 < owen1> do people using superagent instead of request? it looks so awesome
02:17 < s3shs> When an element of waterfall ends, I'm supposed to call 'next' and not return anything at all, right?
02:18 < Astraea> Okay, so I can use Curl to get the html data from my https server.
02:18 < faceleg|work> s3shs: you call the callback
02:18 < faceleg|work> if you name that "next" then yes
02:18 < Astraea> So I don't understand why firefox won't connect.
02:18 < s3shs> Right.  'next' or I think the accepted name is 'callback'.  :-)
02:18 < faceleg|work> I don't think it matters if you return anything
02:18 < s3shs> Thank you.
02:18 < faceleg|work> s3shs: yeah
02:18 < faceleg|work> np!
02:18 < faceleg|work> live long and node
02:18 < s3shs> Long debug session here.  I'm quite perplexed.
02:18 < faceleg|work> haha
02:19 < faceleg|work> name your anonymous functions
02:19 < faceleg|work> makes stack traces legible
02:19 < s3shs> I wish it would do that automatically.
02:19 < faceleg|work> yeah it does
02:19 < faceleg|work> with your fingers
02:19 < faceleg|work> ,agic
02:19 < s3shs> Because then you need two names.... one to hold the function and one to name it.
02:19 < s3shs> var x = function xF();
02:19 < faceleg|work> function xF()?
02:20 < s3shs> That names it, no?
02:20 < faceleg|work> when you pass them as function arguments I mean
02:20 < faceleg|work> func(function name() {});...
02:20 < s3shs> My functions are stored in objects or in object prototypes.
02:20 < s3shs> I don't normally declare them in-line.
02:21 < faceleg|work> oh yep
02:21 < faceleg|work> well I guess you have to suffer the pain :P
02:24 < matbee> mscdex, anything? ^_^
02:28 < Astraea> Anyone want to try and help me with an https problem?
02:34 < matbee> HEH, fine, I juts have to "source environment"
02:34 < matbee> ggs
02:36 < styol> Astraea: what is the issue? not sure I can help though
02:36 < Astraea> Well, I generated a self signed certificate to test https locally. That worked fine.
02:36 < Astraea> I uploaded the files to my server, and now connections just hang.
02:37 < Astraea> So I generated another self signed cert, now with the proper domain name.
02:37 < Astraea> Same thing, the connection just hangs.
02:37 < Astraea> I can use "curl -k example.com" to grab the html bypassing the certificate, so I know the server itself is working fine.
02:38 < Astraea> What confuses me is that normally when there's a certificate problem, Firefox (or IE, Chrome, etc.) tell you that the certificate isn't trusted and ask if you want to add an exception.
02:39 < Astraea> This just hangs. No diagnostic messages fire on the server console running node, and there's no activity in the FF network panel.
02:39 < Astraea> I don't know where I should investigate next.
02:39 < jrajav> Oh come on!
02:40 < jrajav> You broke the internet.
02:40 < jrajav> HEY GUYS! THIS JERK BROKE THE INTERNET
02:40 < Astraea> I'm sorry :(
02:42 < track7> anyone know the website to post code?
02:42 < track7> like an imgur
02:42 < faceleg|work>  hastebin.com
02:42 < track7> thanks!
02:42 < substack> http://gist.github.com
02:42 < Criten> pastebin
02:42 < Criten> there are... tons of them :P
02:43 < Astraea> https://gist.github.com/
02:43 < track7> anyone know how I can add lines of code to store the content of the div this creates into a flat file?
02:43 < track7> http://pastebin.com/ethm6Wpu
02:45 < track7> http://imgur.com/tBdqqgI
02:45 < track7> this is how to output looks in html
02:46 <@Nexxy> s5fs, https://github.com/Mikkeren/FizzBuzzEnterpriseEdition
02:48 < track7> any freelance javascript developers here?
02:50 < gkatsev> Nexxy: hahahaha
02:51 < Lorentz> import com.seriouscompany.business.java.fizzbuzz.packagenamingpackage.interfaces.strategies.IsEvenlyDivisibleStrategy;
02:51 < Lorentz> I like this library
02:56 < Logicgate> hey guys, I'm trying to do a real-time moderation section within my website
02:57 < Logicgate> What modules do I need to use? Socket.IO?
02:59 <@mbalho> what is a real time moderation section
03:00 < echo> I think you're asking your inquiry in a difficult to answer fashion. You don't -need- any modules. However, depending on your experience, stack and feature-needs, some modules may take ~9months+ out of your development.
03:00 < context> logicgate: socket.io, sockjs
03:01 < context> or
03:01 < Logicgate> mbalho, basically I have 2 moderators that approve posts
03:01 < Logicgate> and I don't want collision
03:02 < Logicgate> So when a moderator approved a post, it disappears from the other online moderator's screen
03:02 <@mbalho> Logicgate: ah gotcha, yea socket.io should do the trick
03:02 < Logicgate> okay
03:02 < Logicgate> thank you sir
03:06 < Logicgate> mbalho, I just need socket.io then?
03:06 < Logicgate> I don't need node itself
03:06 <@mbalho> Logicgate: socket.io uses node
03:07 <@mbalho> Logicgate: look at the hello world http://socket.io/ the server code is a node script
03:07 < Astraea> Logicgate: Socket.io is a two piece solution.
03:07 < Astraea> It's a library for the client, and a library for the server.
03:07 < Astraea> When a client requests sockeio.js from the server, a server running socket.io will send the needed file
03:08 < Astraea> And then they do their hand shakey thing.
03:10 < s3shs> Found the problem.  I was looking at the wrong waterfall.
03:10 < Logicgate> Astraea, "hand shakey thing" haha
03:10 < s3shs> Bah!
03:11 < Astraea> Well, I was going to go into the http handshake upgrade, but socket.io doesn't always use websockets.
03:11 < Astraea> ...which, incidentally, is why you can't just use socket.io as a library on the client.
03:12 < mscdex> matbee: i don't know. i do not use 'alias' when using ssh2
03:19 < rwaldron> othiym23.. you think reading them is grueling...
03:19 < rwaldron> ;)
03:20 < rwaldron> when I get home I have to alternate ice and heat on my shoulders and the backs of my arms
03:20 < Logicgate> Can I communcicate with a PHP script with a module to get data from my http server?
03:21 < Logicgate> Like an ajax request within node.js
03:21 < tjfontaine> require('http').get()
03:21 < xan_> Hello all.
03:22 < Astraea> Hi.
03:22 < xan_> Is there a central place where node.js add ons are available to search or submit?
03:22 < rwaldron> xan_ npmjs.org
03:22 < gkatsev> npm
03:23 < xan_> Sweet, thanks.
04:06 < Criten> Wellll. never using screen again :P
04:08 < Logicgate> hey guys, when creating a normal javascript object for a server side app do I need to bind anything to it to make it work? example: var app = {init: function () { var app = require('http')... }; app.init()
04:09 < Logicgate> var app1 = require('http')... I meant
04:09 < Logicgate> here I'll paste the error I get
04:20 < Logicgate> var io = this.io = require('/var/www/html/admin/assets/node/socket.io.js').listen(7547)
04:20 < Logicgate> I get TypeError: Object #<Object> has no method 'listen'
04:20 < lovemuffin> i think you're requiring the client socket.io
04:21 <@mbalho> Logicgate: write the code like in this hello world instead http://socket.io/
04:21 < Logicgate> I did though
04:21 < Logicgate> I get Error: Cannot find module 'socket.io'
04:21 < Logicgate> and it's within the same directory that the example.js is
04:22 < Logicgate> TypeError: Object #<Object> has no method 'listen'
04:23 <@mbalho> what you should do is make a new project folder. make a folder, cd into that folder, type npm init, hit enter a bunch of times, then do npm install socket.io
04:23 <@mbalho> and put your example.js in that folder
04:24 < Astraea> Ugh!
04:24 < Astraea> I can't even get the example https server working.
04:25 < Astraea> I can do anything I want locally, but nothing works on a remote machine.
04:25 <@mbalho> node -e "require('http').createServer(function(req, res){ res.end('hello world') }).listen(8080)"
04:25 < Astraea> Https
04:26 <@mbalho> oh
04:26 <@mbalho> yea certs are a pain sometimes
04:26 < Astraea> Using the example on this page: http://nodejs.org/api/https.html
04:26 < Astraea> And a self signed certificate (from openssl, and also tested with one generated on a website).
04:27 < Astraea> Works locally (asks me if I want to trust the certificate), but when testing on the remote machine, the connection times out.
04:27 < Astraea> The regular http server running on that same machine works fine.
04:27 < Astraea> And running it on a different port doesn't change anything.
04:28 < Astraea> I think I'm defeated. Time to go to bed.
04:28 < owen1>  request({ 'uri': feedUrl }).pipe(feedparser.stream); -> TypeError: Cannot call method 'on' of undefined  
04:28 < owen1> i copy pasted from feedparser readme. any ideas?
04:29 < owen1> the exact error comes from: stream.js:52 dest.on('drain', ondrain);
04:34 < arhart> I've read about the new streams API
04:34 < arhart> but it isn't clear to me how to use it
04:35 < arhart> process.stdin starts paused, so i need to call resume... but if I call resume, then I kick the stream into old mode
04:35 < arhart> Can someone show me how to write this simple program using the new API? http://pastie.org/6622371
04:43 < owen1> arhart: are those the relevant docs? http://nodejs.org/api/stream.html#stream_class_stream_writable
04:45 < arhart> owen1: yes; I'm specifically looking at #stream_class_stream_readable at the moment, but I expect I'll want to figure out #stream_class_stream_writable next
04:58 < Xymon> I've been working on a node.js chat system: http://chat.xymon-sinclair.com/ would like some people to come take a look, perhaps help me test it
04:58 < Xymon> In other news, how are we all tonight?
05:05 < owen1> not bad. me and arhart don't understand streams
05:05 < owen1> https://groups.google.com/forum/?fromgroups=#!topic/nodejs/DLgv5ZSLZY8
05:06 < sshaginyan> 474925
05:07 < sshaginyan> Hey guys I'm using express app.get('/api/*', function(request, response) { does request have the * part of the url?
05:09 < execut3> sshaginyan, look at req.params
05:14 < Xymon> I've been working on a node.js chat system: http://chat.xymon-sinclair.com/ would like some people to come take a look, perhaps help me test it. Thanks.
05:19 < Xymon> @rho: That shouldn't take more than an hour to do actually, but right now i need to take care of the more important features.
05:27 < Xymon> I've been working on a node.js chat system: http://chat.xymon-sinclair.com/ would like some people to come take a look, perhaps help me test it
05:30 < niggler> substack you awake?
05:30 < Oddman> stop the god damn spam, Xymon 
05:31 < Oddman> seeing 4 of your chat spam msgs in one screen is ridiculous
05:32 < Xymon> You can see them in one screen?
05:32 < Xymon> Lol.
05:32 < Xymon> Assuming you have your join/leave messages hidden,
05:32 < Xymon> But my apologies, i'll stop.
05:33 < kenperkins> it's not a join/leave message
05:34 < kenperkins> it's a regular message
06:00 < nedq> hello
06:20 < switz> I keep getting error:   The subdomain requested is already in use
06:20 < switz> wrong irc, ignore me
06:24 < Logicgate> Node.JS = OMFG IT'S AWESOME
06:24 < Logicgate> So easy to learn to when you know JS.
06:24 < Logicgate> I (L) Node.JS
06:25 < bitfed> This message was brought to you buy Logicgate.
06:25 <@mbalho> (L) is also expressed via <3
06:28 < Logicgate> Lol
06:28 < jlord> ❤
06:28 < Logicgate> in an hour I was able to do my real-time moderation lol
06:29 < Logicgate> Well most of the server side php was already coded.
06:29 < Logicgate> Node.js is brillant. About 20 lines of code and I was able to do what I wanted to.
06:29 < Logicgate> How does Node.js scale thought? i know it can process about 800r/sec
06:30 < Logicgate> but on a millions of user scale, does it eat a lot of server performance
06:30 < jlord> load balancer 
06:30 < kevireilly> multiple cores and leprechauns too
06:30 < Logicgate> Hahahha
06:31 < Logicgate> i wanna do everything in node now
06:31 < terinjokes> kevireilly: wrong holiday, we've moved on to easter bunnies
06:31 < kevireilly> terinjokes: snapzilla. I almost made it.
06:32 < terinjokes> Logicgate: as with anything, there are good use cases, and there are places where it makes sense to do things elsewhere… keep your mind open :)
06:32 < jlord> Logicgate: check out https://github.com/substack/stream-handbook
06:34 < terinjokes> jlord: still think there's should be a good streams demo/tutorial to go along with that… it's hard after just reading that to know where to use streams and where not too
06:36 < Xymon> I've been working on a node.js chat system: http://chat.xymon-sinclair.com/ would like some people to come take a look, perhaps help me test it.
06:43 < DadIsConfused> anyone getting this for node.js v0.10? http://paste.ee/p/dEeTT
06:43 < DadIsConfused> is node v0.10 unstable?
06:44 < DadIsConfused> isaacs: I get a events.js:72         throw er; // Unhandled 'error' event               ^ Error: connect ECONNREFUSED
06:47 < Garo_> DadIsConfused: it's impossible to say what's wrong if you don't provide the source which generates this error
06:48 < DadIsConfused> Garo_: Its when I run "node app.js"
06:48 < Garo_> DadIsConfused: and what's in the "app.js" then?
06:48 < AAA_awright> Xymon: When I submit my name, the new page doesn't show anything
06:49 < AAA_awright> Xymon: onclick="document.getElementById("loginform").submit()"
06:49 < AAA_awright> Apologies in advance, that is nthe most useless code I've ever sen
06:49 < DadIsConfused> Garo_: well, i don't think its app.js. I recently had to reinstall my VPS' OS, and i reinstalled node. I didn't upgrade to 0.10 till after the reinstallment. I even ran the "make test" for node, and it gave me that exact error
06:50 < AAA_awright> That's what input type="submit" is for
06:50 < AAA_awright> And then you have onsubmit="Chat.login(this.getElementsByTagName("input")[0].value); return false;" I don't understand what's going on here... I mean I do... but, like, why
06:50 < Xymon> AAA_awright: just hit enter, don't click any buttons.
06:56 < AAA_awright> Xymon: And why is absolutely everything a button?
06:56 < AAA_awright> Button = action is being done, form is being submitted, chat is being posted, content is being deleted, etc
06:56 < AAA_awright> Link = Content is being requested/viewport is being changed
07:02 < Garo_> DadIsConfused: at least I installed node 0.10.0 and ran it without problems.
07:21 < Sleepy_> hello. I get a http.js:708     throw new Error('Can\'t set headers after they are sent.');           ^ Error: Can't set headers after they are sent.
07:22 < Sleepy_> does anyone get this when running their app.js for node version 0.10?
07:51 < Xymon> Anyone working on any interesting node.js projects?
07:58 < penzur> hey xymon
08:04 < khurram> huh
08:08 < Xymon> Hello Penzur.
08:14 < Xymon> http://chat.xymon-sinclair.com/ node.js, html5, socket.io project i'm working on.
08:35 < [AD]Turbo> hi there
09:00 < duko> are there any recommended alternatives to using a mediator object that would allow for decoupling scripts?
09:16 <@Nexxy> duko, eventemitters
09:19 < Xymon> Anyone here using apple?
09:19 < faceleg> as in os x?
09:20 < andrew12> apples are yummy
09:20 < faceleg> they're ok
09:20 < faceleg> depends what kind
09:20 < Xymon> Any apple product at all.
09:20 < Jakey> if i were to use apple
09:20 < andrew12> how about dole apples?
09:21 < faceleg> Xymon: yes I have some apple stuff
09:21 < Jakey> i ratther use linux
09:21 < Jakey> or unix
09:21 < Jakey> so yeah
09:21 < andrew12> me too
09:21 < faceleg> Xymon: what's up
09:21 < Jakey> stupid
09:21 < faceleg> ?
09:21 < Xymon> could you come here on your apple device? http://chat.xymon-sinclair.com/
09:21 < Xymon> I had some trouble with apple on my old server, wanting to know if this one works.
09:21 < Xymon> And i have no apple products. lol.
09:22 < faceleg> yeh seems to work fine
09:24 < faceleg> I say we all move to Xymon's chat
09:24 < faceleg> it's got light blue
09:24 < faceleg> so guys
09:24 < faceleg> what is the magic wand I can wave over my C++ code to remove all the segfaulting that happens on machines other than my own?
09:24 < faceleg> more like segfault++ AMIRITE
09:28 < Xymon> lmfao
09:28 < Xymon> I have a lot of work to do on my chat.
09:28 < Jakey> lol
09:32 -!- mode/#Node.js [+o Nexxy] by ChanServ
10:15 < stagas> can anyone test this in their os? https://github.com/stagas/task-progress I'm curious how universal this hack is
10:17 < TheBrayn> won't work here, my wm does not support such things
10:22 < faceleg> how to get node-tar's unzipped folde rname?
10:24 < zot> is there an implicit 'Ev' function when using a node ObjectWrap?  "dyld: lazy symbol binding failed: Symbol not found: __ZN8ProducerC1Ev"
10:24 < Pynky> Lol get it?
10:24 < Pynky> UP TOP *holds hand up in air*
10:24 < Pynky> No? :(
10:24 < Pynky> Come on TheBrayn ...
10:24 < Pynky> *sighs*
10:25 < TheBrayn> A funny joke indeed.
10:25 < TheBrayn> *sheldon laugh*
10:27 < Xymon> bazinga. 
10:27 < Xymon> So what are we going to do today TheBrayn?
10:27 < Xymon> *giggles* SAY IT
10:28 < TheBrayn> The same thing we do every nigth Xymon 
10:28 < TheBrayn> Try to take over the world!
10:28 < Xymon> BAHAHAHAHA yes.
10:36 < faceleg> is there a way to make node-gyp check for the presence of cmake?
10:37 < zot> faceleg: are you only in unix-y world?  if so, you can always hack it via the 'which' command of [k]sh
10:38 < faceleg> zot: no
10:38 < faceleg> zot: I'm trying to avoid gyp-ifying libgit2
10:44 < zell> how can I make a sync request with http ?
10:44 < zell> (i working with an api and need to get the query result before redirecting my user)
10:44 < zell> i'm*
10:45 < RLa> you can't
10:45 < RLa> the api does not allow for async ops?
10:46 < zell> the api does
10:46 < zell> problem is i auth the user
10:46 < zell> and need api data
10:47 < zell> before redirecting user
10:47 < RLa> can't you redirect in callback?
10:47 < zell> nope
10:47 < RLa> what web stack are you using?
10:47 < zell> because callback is async
10:47 < zell> expressjs
10:47 < RLa> then you can
10:48 < zell> i'll paste you my code
10:51 < zell> RLa: http://pastebin.com/4iu7qzAP
10:52 < zell> BIG.api is simply a wrapper for http.request
10:52 < RLa> you put it after session middleware?
10:53 < zell> RLa: what is the problem ?
10:54 < RLa> it's what it says
10:54 < zell> do I put what after session middleware ?
10:54 < RLa> headers are sent and you cannot add Location header (or whatever redirect uses)
10:54 < RLa> hm, i'm not sure
10:54 < zell> I think express sends default headers
10:55 < RLa> are you using the standard session middleware?
10:55 < zell> i'm not
10:55 < zell> i'm using a simple array defined at begining of code
10:56 < zell> but i don't think it would change anything
10:57 < zot> anybody have a clue on my linking question above?  zookeeper seems to have similar unlinked symbols, but doesn't complain during loading.  I'm a bit lost on this one.
10:57 < RLa> can you paste your app initialization code
10:57 < zell> RLa: I can't ><
10:58 < RLa> well, something is causing headers being sent there
10:59 < zell> RLa: I will dig in that direction, thank you
10:59 < RLa> you could also ask in #express
11:00 < RLa> i'm pretty sure it should not be issue with async op there
11:00 < RLa> in most express apps there are async ops, like db or whatever
11:00 < RLa> so it cannot be issue
11:01 < zell> roger that :)
11:06 < DaMorpheuS> hey guys i've a question that about node.js and ember datastore (anyone have some experience with these 2?)
11:08 < Kakera> has anyone here succeeded in compiling node-serialport with an express version of visual studio?
11:08 < zell> RLa: yeah, I was sending header from another place in the application
11:08 < zell> RLa: thx for you accurate help :)
11:08 < zell> your*
11:13 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:14 < Kakera> has anyone here succeeded in compiling node-serialport with an express version of visual studio?
11:16 < RLa> Kakera, does it give compilation errors?
11:17 < Kakera> RLa, yes, missing atlstr.h
11:17 < Kakera> and I'm wondering why it used to work before
11:17 < RLa> is that some std unix header?
11:17 < RLa> hm, seems like not
11:18 < faceleg> anyone seen this error before? Error: Cannot find module '../deps/console.log'
11:18 < faceleg> if so; wtf?
11:18 < RLa> Kakera, isn't that Active Template Library?
11:19 < Kakera> RLa, yes
11:19 < Kakera> I think I've figured it out
11:19 < faceleg> Kakera: what was it?
11:19 < Kakera> this dependency was introduced 3 months ago, but the version on npm is 5 months old
11:20 < Kakera> ever since I did "npm install git://blahblah/serialport", npm cached the latest version which doesn't compile
11:20 < Kakera> after I removed npm-cache, it works again
11:20 < Kakera> using "npm install serialport"
11:21 < faceleg> anyone used Instruments with node?
11:21 < Kakera> I'm not sure using the cached version from git when the user types "npm install <module>" is a good idea
11:23 < Kakera> they're like, "okay the git version is too unstable, I'll revert to the npm version"
11:23 < Kakera> and then npm is like "nope, I'll install the git version for you because it's newer"
11:27 < DaMorpheuS> hey guys i've a question that about node.js and ember datastore (anyone have some experience with these 2?)
11:27 <@Nexxy> Kakera, clear your cache
11:27 <@Nexxy> DaMorpheuS, you should just ask your question instead of waiting for someone to respond
11:28 < DaMorpheuS> lol
11:28 < Kakera> Nexxy, <Kakera> after I removed npm-cache, it works again
11:28 <@Nexxy> Kakera, ah, there you go :)
11:28 < DaMorpheuS> when I try to let the datastore of ember do a get on my node.js api I got a invalid json message in my console log of node
11:28 < faceleg> nobody has seen Error: Cannot find module '../deps/console.log'?
11:28 < faceleg> what could it mean!
11:28 < DaMorpheuS> direct approach of the api does work
11:29 < DaMorpheuS> any ideas Nexxy ;)
11:29 < leichtgewicht_> Nexxy: Kakera: It is a bit user-unfriendly to use a newer version in cache if its newer than the newest version in the npm repository. 
11:30 < leichtgewicht_> (I think so at least)
11:30 < Kakera> leichtgewicht_, good to know that someone agrees
11:31 <@Nexxy> if you want a specific version, install it
11:31 <@Nexxy> `nom install <module>@<version>`
11:31 < leichtgewicht_> Nexxy: If I just want the newest version?
11:31 <@Nexxy> then you install it w/o the version
11:32 < leichtgewicht_> That refers to the newest version in the npm, right?
11:32 < leichtgewicht_> (the npm repository)
11:33 <@Nexxy> not necessarily
11:33 < leichtgewicht_> I think that is my point.
11:33 <@Nexxy> I'm not sure I follow
11:33 <@Nexxy> it's like you're asking npm to start having memory problems
11:34 <@Nexxy> just so you can leave off a few characters from a command
11:34 < leichtgewicht_> this "not necessarily" means that there is various behaviour hidden in that simple command.
11:34 <@Nexxy> but it's well documented "various" behaviour
11:34 < leichtgewicht_> Good documented unfriendly behaviour is still unfriendly
11:35 < Kakera> actually, using a newer version than the npm version isn't documented unless I'm missing something
11:36 < leichtgewicht_> (to clarify: with unfriendly I mean: potentially confusing)
11:39 <@Nexxy> I guess I don't agree with oyu in the sense that you find it unfriendly
11:39 <@Nexxy> it seems friendly to me to keep a cached version of something around
11:40 < leichtgewicht_> I agree: not downloading something from npm that is already downloaded makes sense.
11:40 < Kakera> sure, use it next time I do npm install git://blah/blah
11:40 < Kakera> but not when I do npm install blah
11:40 <@Nexxy> that doesn't make any sense
11:42 <@Nexxy> (and would also make things more confusing for more common use cases)
11:42 < Kakera> sure, I want it to use the cached version if it's the version I'm trying to install
11:43 <@Nexxy> wait, you gave it a version and it didn't install it?
11:43 < Kakera> no, I didn't give it a version
11:43 < leichtgewicht_> I try to summarise: I want the cached version but I want it cached by the md5 hash and not by the package.json id
11:43 < Kakera> "In most cases, this will install the latest version of the module published on npm."
11:44 < Kakera> the version cached from git is not the latest version published on npm
11:44 <@Nexxy> > in most cases
11:44 <@Nexxy> most cases being you simply issuing an install command via package name
11:44 < Kakera> which is what I did
11:45 <@Nexxy> after adding a git version to your cache
11:45 <@Nexxy> lol
11:45 <@Nexxy> which is also not "most cases"
11:45 < Kakera> the other cases aren't listed
11:46 <@Nexxy> what you're saying is, "I want my personal edge case to take precedence over what makes sense most of the time"
11:46 <@Nexxy> if it's throwing oyu off that bad turn down the max cache duration
11:46 <@Nexxy> cache nothing!
11:46 < Kakera> IT'S NOT DOCUMENTED
11:46 <@Nexxy> CAPS MEANS YOU'RE SERIOUS, RIGHT?!
11:46 < faceleg> 3stop yelling
11:47 < Kakera> no, it means you're not reading
11:47 < Kakera> <Kakera> the other cases aren't listed
11:47 <@Nexxy> lol
11:47 < faceleg> anyway, anyone able to help with this? 
11:47 < faceleg> http://stackoverflow.com/questions/15498340/error-cannot-find-module-deps-console-log
11:47 <@Nexxy> please don't conflate my disagreement with lack of understanding
11:47 < Kakera> I'll submit an issue
11:47 <@Nexxy> you do that ;3
11:49 < leichtgewicht_> Hmm, does npm cache by url? package id? 
11:49 < leichtgewicht_> package id+version?
11:50 <@Nexxy> name + version I believe
11:53 < leichtgewicht_> Wouldn't a hash-basis make more sense?
11:53 <@Nexxy> why?
11:54 < leichtgewicht_> Because developers change their code more often than their version number.
11:54 <@Nexxy> pretty sure if you think about that for a bit, you'll realize why it's bad ;x
11:55 < leichtgewicht_> It would be nice if you could tell me.
11:58 < leichtgewicht_> I understand that various zip/tar/etc. files have different hashes for the same content but I think that can be lived with, its a lot rarer I think to distribute and use the same version in different formats
12:00 <@Nexxy> it would also break the cache for offline use
12:01 <@Nexxy> it would require additional requests
12:01 <@Nexxy> would lead to 'sibling conflicts'
12:02 < leichtgewicht_> I do not understand how it could break the cache for offline use. You don't need to to look for just the hash you can look for it on priority. I am sure right now npm has different logic offline and online.
12:03 < leichtgewicht_> What additional requests? Now it has to do one request to the npm for latest version, afterwards it has the same request but a little more info in it (afaik that info is already in the protocol)
12:04 < leichtgewicht_> I am sorry for my ignorance but what are sibling conflicts?
12:04 < leichtgewicht_> (not sure what you mean by that)
12:21 < Criten> Good morning channel
12:22 < SargoDarya> morning Criten
12:24 < Kakera> https://github.com/isaacs/npm/issues/3265
12:30 < GJSmith3rd> Ok.How do you get started with for mobile hybrid apps
12:58 < Pickels> can npm update all the modules in my project to the latest version and save them to my package.json?
12:58 < alperkanat> anybody here using webdriverjs at https://github.com/Camme/webdriverjs ? i'm searching for a way to check if an element exists or not..
13:04 < rashthedude> hi
13:09 < Criten> rashthedude, hi
13:12 < zot> ok.  getting tricky now…  I have a C++ defined class that I want to become an EventEmitter.  Can I do this directly?  Or must I build a shim class in Node in order to connect the 2?
13:28 < leichtgewicht_> zot: https://github.com/astro/node-expat uses some event handling trick 
13:29 < zot> leichtgewicht_: tnx
13:39 < tiankui> hello
13:39 < JohnMcLear> hi.
13:39 < JohnMcLear> Anyone interested in NodeJS security?
13:40 < JohnMcLear> We're trying to find community members to help us deal w/ disclosure etc.
13:40 < JohnMcLear> http://blog.etherpad.org/2013/03/19/a-call-for-a-security-expert/
13:43 <@Nexxy> JohnMcLear, I'm quite interested, but not at all an expert
13:47 < JohnMcLear> Nexxy: Well drop through an email and we can chat from there :)
13:53 < Sawbones> Top of the mornin' to yall
13:57 < zot> retrying: is there an implicit 'Ev' function when using a node ObjectWrap?  "dyld: lazy symbol binding failed: Symbol not found: __ZN8ProducerC1Ev"; this is for an addon built via node-gyp, btw.
14:09 < bnoordhuis> zot: run that name through c++filt
14:10 < bnoordhuis> i bet it's a Producer() constructor
14:10 < bnoordhuis> which suggests you're not linking in the file that contains it
14:11 < shmoon> trying to understand eventemitter http://pastie.org/private/0zp62bpiheqrem56lehvg - but it gives me error object has no method 'on'
14:11 < shmoon> what am i doing wrong?
14:12 < zot> bnoordhuis: tnx
14:14 < Gottox> shmoon: use "new (require('events').EventEmitter)" instead of "new require('events').EventEmitter"
14:14 < FellowMD> after that first line, server still only contains the constructor
14:14 < FellowMD> split it into two lines
14:14 < FellowMD> yeah Gottox exactly
14:14 < shmoon> oh i see, Gottox , it works now. but strange without () should work
14:15 < Gottox> shmoon: js will use the new operator on the object returned by require('events')
14:15 < Gottox> not require('events').EventEmitter
14:16 < shmoon> o.O
14:16 < shmoon> i'm confused
14:16 < Gottox> js is sometimes as weird as bash :)
14:17 < shmoon> apparently as FellowMD said it does contains the constructor only without ()
14:18 < Gottox> shmoon: new something.blergh will create a new something-object and return the blergh property of the newly created object
14:21 < Gottox> as a rule of thumb: use the new operator only on simple variables, neither on functions nor on object-paths.
14:21 < Gottox> otherwise you WILL get weird results.
14:22 < shmoon> ok thanks
14:25 < Gottox> gosh, this is weird.
14:25 < cicoder> what is Gottox
14:26 < Gottox> cicoder: the new operator in js :)
14:26 < cicoder> lol
14:27 < Gottox> new a will create a new a
14:27 < Gottox> new a.b will create new b
14:28 < Gottox> new a().b will create new a and return property b.
14:31 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:38 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:45 < RLa> wtf trend it is to show "about x units of time ago" instead of actual dates in web apps?
14:46 < RLa> you have two events, both are "2 months ago", how you compare which one was earlier?
14:47 < adunkman> having a meetup in kansas city tonight; one of the topics is "security in node.js" -- anybody have something in particular you think would be worth mentioning?
14:47 < SargoDarya> adunkman: basically the same which applies to everything in web. Never trust input, sanitize everything.
14:49 < adunkman> i know in 0.10 https now does peer validation by default; that's certainly worth mentioning
14:53 < euoia> RLa: I saw this a while ago http://aaronparecki.com/articles/2012/08/23/1/you-should-not-be-displaying-relative-dates
14:59 < RLa> euoia, thanks, shared the article, hopefully the point reaches more devs
14:59 < euoia> RLa: YW :)
15:02 < deadalus> what are some good feeds to stay current on node news?
15:04 < RLa> deadalus, node blog?
15:06 < RLa> i also follow a bunch of node devs in twitter, so when something important happens, i will prolly hear about it
15:06 < deadalus> i already added that, i meant to ask if there were other noteworthy blogs dedicated to node news. :)
15:06 < deadalus> i'm starting a new feedly account so im in a middle of refreshing my daily reads.
15:08 < RLa> hm, i follow about 300 blog feeds but i don't have node ones separated
15:08 < RLa> and i'm using offline reader :)
15:10 < bmatusiak> rla thanks for the star on my project
15:14 < RLa> oh the editor with ace
15:14 < bmatusiak> yea
15:15 < shmoon> i am working on someone else's code it has arequire('through') an y idea what module that is, trying to find documnentation on google but failing :S
15:15 < RLa> try search on npmjs.org
15:15 < shmoon> ok
15:16 < bmatusiak> https://github.com/dominictarr/through
15:16 < bmatusiak> heres the github repo for "through"
15:18 < euoia> shmoon: you can also just type npm info through, or npm search through
15:21 < s3shs> What do y'all recommend for handling SQL transactions?  (e..g: begin, commit, rollback.)  It's possible another request could pop in in the middle of a transaction.
15:23 < gynna> http://binaalbina84.wix.com/femeseekingmanadult
15:23 < pachet> adult
15:23 < pachet> that's important
15:27 <@isaacs> ircretary tell DadIsConfused Please copy and paste the full program, and the full output, to http://gist.github.com, and then share the link.  You'll get more useful help that way.
15:27 < ircretary> isaacs: I'll be sure to tell dadisconfused
15:29 < Stephen> So, here I am realizing get the entire web worth of queryable data for something like "Give me a random link that pretains to 'keyword'" is way more difficult than it sounds
15:32 < s3shs> Is this the acceptable library for transactions? https://github.com/bminer/node-mysql-queues
15:34 < bradleymeck> Stephen: search engines are very hard
15:35 < Stephen> I'm going to use google-tools for now, and just query a random url out of the set
15:35 < Stephen> I was hoping to use Common Crawl or something similar
15:36 < Stephen> But querying that dataset turns out to be way too expensive, financially
15:37 < bradleymeck> Stephen: also look at YQL : http://developer.yahoo.com/yql/ , dunno finances on it though
15:54 < nabs> hello. why doesn't node 0.10 install development headers? and how can i install them?
15:55 < bradleymeck> nabs: node-gyp is how you should pull it down
15:56 < nabs> ... where are the docs?
15:56 < bradleymeck> for?
15:57 < nabs> this change... that they've been pulled from the makefile. i did update node-gyp with NPM and it seems to not have downloaded them. i'll check again
15:58 < nabs> no mention in the migration guide, the c++ modules guide, nothing in the install docs
15:59 < nabs> and node-gyp did not install them into the system's include directory
16:00 < bradleymeck> nabs: it wont do it to system, only to the node-gyp dir, unsure what you want them to be in sys dir for, unknown when it stopped going to the include dir, but with node-gyp being how you make addons i have not personally had issues
16:01 < bradleymeck> node-gyp automatically finds stuff so i havent seen problems when using node-gyp, i could imagine doing odd things would be bad though
16:02 < nabs> bradleymeck: well, i did the global install, and the headers still aren't being found. i guess i need to hunt them down and put that in the include path. but it's a bit annoying that there's no mention of those headers being moved, also no mention of the npm and nodejs-dev packages going away
16:03 < bradleymeck> i guess, just never had a problem here
16:04 < nabs> well, a lot of people use nodejs now, so it's got to made sure any/all changes are made clear... i dont think we should have to come in IRC just to find out this info. no mention in a changelog or anything either
16:04 < nabs> sorry, i'm just a bit frustrated, wasted too much time on this
16:06 < nabs> and makes me quite nervous about what else has been omitted from the migration guide
16:11 < ozette> i'm having troubles with nunjucks for-in loops. when I try this example: http://nunjucks.jlongster.com/templating#For I get a "Cannot read property 'length' of undefined" as if the array which i render the template with does not exist.
16:16 < preyalone> Can Stylus be configured to compile .css once, instead of on .styl change?
16:18 < SrPx> How do I load files from the working directory?
16:18 < SrPx> app.use(express.static(".")) seems not to work
16:19 < SomeoneWeird> SrPx, app.use(express.static(__dirname))
16:19 < SrPx> SomeoneWeird: thanks
16:22 < SrPx> SomeoneWeird: so can I make it not serve certain file?
16:22 < SomeoneWeird> nope
16:23 < SomeoneWeird> it serves the entire directory
16:23 < SomeoneWeird> so move a file..?
16:25 < SrPx> SomeoneWeird: okay :l
16:28 < euoia> SrPx: http://www.senchalabs.org/connect/static.html
16:28 < euoia> SrPx: that's the documentation for connect.static which is what you get when you call express.static
16:28 < euoia> SrPx: it says that by default hidden files are not transferred
16:29 < euoia> SrPx: so if you have the option of making the file hidden, that's one way to do it
16:29 < SrPx> euoia: interesting! Thanks
16:29 < SrPx> That's perfect
16:33 < AgirlFromAfar> Helllo
16:41 < hugomarisco> hello all
16:41 < hugomarisco> I'm trying to implement this: http://ultrx.net/doc/fish/
16:42 < hugomarisco> in my bot but I can't decrypt the messages
16:42 < hugomarisco> can anybody help me?
16:45 < ExxKA> hugomarisco, Why aren't you just using an SSL connection?
16:45 < ExxKA> Anyways, the doc you referred to looks like its a mIRC script done i TCL?
16:46 < hugomarisco> I'm connecting using SSL but all the messages in the channel are encrypted using blowfish
16:46 < hugomarisco> https://github.com/dieterve/blowfish/blob/master/Blowfish.pm
16:46 < hugomarisco> I need to write something like this in node.js
16:47 < hugomarisco> just the decrypt function
16:49 < fd_> hey, if I am facing (more or less) random uncaughtExceptions ('RangeError: Maximum call stack size exceeded') in a rather huge application - how do I detect best where I am doing something wrong since the stacktrace is not available (anymore) at that point ...
16:51 < euoia> hugomarisco: http://nodejs.org/api/crypto.html#crypto_crypto_createcipher_algorithm_password
16:51 < euoia> hugomarisco: https://github.com/dparlevliet/nodejs-blowfish-example/blob/master/encryption.js
16:51 < euoia> hugomarisco: looks like it uses openssl
16:53 < euoia> fd_: I think domains were invented to solve the problem of uncaught exceptions in aync code
16:53 < MI6> joyent/node: Scott Blomquist master * a05f973 : test: Misc Windows unit test fixes  Fixes #5071, #5073.  * Normalize capi - http://git.io/TuSBWQ
16:53 < euoia> fd_: but I am not really familiar with them, so I can't help much
16:53 < hugomarisco> hi euoia, I've tried that and this https://github.com/alonronin/Enc/blob/master/index.js
16:53 < hugomarisco> but neither decrypt it as it should
16:55 < euoia> hugomarisco: I'm not at all familiar with the domain but I notice that there appear to be at least 4 blowfish algorithms bc-cbc, bf-cfb, bc-ecb, bf-ofb
16:55 < euoia> hugomarisco: do you know which one is being used?
16:55 < euoia> hugomarisco: I guess that script attempts to decrypt using all of them
16:56 < fd_> euoia: well thank you, that is at least an ide for future development, but I need something in an existing application
16:57 < hugomarisco> yes, that's my confusion, I don't know which it is
16:57 < euoia> fd_: use breakpoints and node-inspector? are you saying you can't modify the code at all?
16:57 < hugomarisco> and I think that beside that, some pre-process is needed to IRC specific algorithm
16:58 < euoia> hugomarisco: do you know the ivec as well?
16:58 < hugomarisco> no euoia, what is it?
16:58 < euoia> hugomarisco: I don't suppose you have the Tcl script? that does this? I could have a look at that
16:59 < hugomarisco> I don't, but I can get it, I've done it in TCL and PHP
16:59 < hugomarisco> one second
16:59 < euoia> hugomarisco: the ivec is the initialization vector - it's supposed to be a random string that somehow initializes the algorithm. I think you need this when decrypting as well.
17:01 < hugomarisco> euoia: http://www.high-society.at/f-scripts/eggblowcrypt-v1.0.txt
17:01 < hugomarisco> it's like a salt?
17:02 < euoia> hugomarisco: I suppose so
17:02 < euoia> hugomarisco: okay I'm now looking for the source of the decrypt proc
17:04 < euoia> hugomarisco: that is, the dZSbot.tcl
17:05 < euoia> hugomarisco: ah right the eggdrop bot includes encrypt and decrypt
17:06 < hugomarisco> yes
17:06 < hugomarisco> but ssl as the lib built-in
17:06 < hugomarisco> http://tcllib.sourceforge.net/doc/blowfish.html
17:09 < vigmix> anyone know of a html parser for node.js ?
17:10 < vigmix> https://github.com/tautologistics/node-htmlparser/ fails at basic input
17:10 < vigmix> jsdom seems to use htmlparser unfortunately
17:12 < mscdex__> vigmix: https://npmjs.org/package/htmlparser2
17:13 < mscdex__> vigmix: there's also cheerio which uses htmlparser2, it provides some jquery syntax on top: https://npmjs.org/package/cheerio
17:13 < vigmix> mscdex: let me check. but htmlparser cannot handle tags inside strings inside <script>
17:14 < vigmix> so, var x = '<script>'; makes it go crazy
17:14 < vigmix> that's because it doesn't seem to have any sort state machine other than a stack for the tags
17:14 < vigmix> it's simple regexps it seems
17:21 < mscdex> vigmix: cheerio/htmlparser2 has no problem with that
17:23 < vigmix> mscdex: ah cheerio, sounds great
17:24 < vigmix> cheerio uses htmlparser2 :)
17:25 < deepy> I finally get node-spatialite all installed and finished up. Only to realize that it doesn't have X() or Y()
17:26 < deepy> To which I'll say 'bah'
17:29 < leichtge_> Say I have some javascript file somewhere that defines functions in the global scope, you know old-school-browser-stuff without dom, is there a way to load this with nodejs without rewriting it to module.exports stuff?
17:29 < leichtge_> eval?
17:31 < vigmix> mscdex: it suffers similar problems :(
17:31 < vigmix> var x = '<script></script>';
17:32 < vigmix> bombs
17:32 < vigmix> but cheerio is nice, i was using soupselect before
17:32 < vigmix> functionally, equivalent..
17:33 < vigmix> that's some really nice docs right here - https://github.com/FB55/node-htmlparser/wiki/DOMHandler
17:36 < leichtge_> Ah vm.runInThisContext ... nevermind
17:37  * vigmix running out of ideas
17:37 < vigmix> what's a good way to do some static analysis on javascript inside a html page?
17:38 < vigmix> cheerio will get me the script itself. esprima parses it fine
17:38 < vigmix> any suggestion how i can regernate the html?
17:39 < vigmix> think of something like: <div> This is great <script> var x = 'why am i here'; </script> </div> and random crap html like this
17:40 < vigmix> mm, minifiers should possibly handle this
17:40  * vigmix looks
17:43 < vigmix> ok, most tools don't minify js inside html
17:43 < vigmix> ?
17:51 < johnny_|_> hi, I am very new to node. How can I use https://npmjs.org/package/html-minifier from command line?
17:56 < FellowMD> @johnny_|_ that module wasn't designed to be used from the command line, and it might take a decent amount of work to make it do so
17:56 < FellowMD> Did you get it up and running at all?
17:56 < johnny_|_> yes lol :)
17:56 < johnny_|_> spent my 10 minutes
17:57 < johnny_|_> but thanks for clearly pointing that out before I waste another hour
17:57 < Swaagie> I do know the module is rather flawed
17:57 < Swaagie> hence I started my own minifier :P but it's far from finished
17:58 < Swaagie> most obvious flaw (which is also tested positively against) any flow of inline elements is destroyed
17:59 < Swaagie> foor bar <em>bla bla</em> bar foo --> foo bar<em>bla bla</em>bar foo
17:59 < mboro> hi! how do I pipe a JSON object to a file from a script? tried "node pipe.js > test.json" where I in pipe.js do: "console.log({ test: 1 });"
18:00 < vigmix> mboro: console.log(JSON.stringify({test: 1})
18:00 < tjfontaine> mboro: probably safer to be more explicit with json.stringify ^^
18:00 < mboro> vigmix: that will mess up my formatting. any way to prevent that?
18:01 < vigmix> mboro: JSON.stringify(obj, null, 4)
18:01 < vigmix> 4 is indentation
18:01 < tjfontaine> mboro: json isn't meant to really be too pretty, .stringify(<obj>, <fn>, <spaces>)
18:01 < mboro> awesome!
18:01 < mboro> thx :)
18:20 < deepy> I have made progress. my application works flawlessly except that SQLite segfaults after it's done
18:23 < HankHendrix> evening all, does anyone know what are "best practise" examples of modules on github?
18:23 < HankHendrix> I'm looking at Mikael's Request - is that a good example?
18:23 < steffkes> deepy: how does node.js and sqlite end up in one sentence?
18:24 < deepy> I'm using them together!
18:24 <@mbalho> HankHendrix: mikeal has a unique package management style that is very minimal
18:24 <@mbalho> HankHendrix: this is a pretty solid package, not too much, not too little https://github.com/substack/browser-pack
18:27 < HankHendrix> thanks mbalho
18:28 < HankHendrix> I'm new to writing modules and haven't found any decent articles online that go further than "module.exports"
18:28 < bradleymeck> the whole nodeup 40 was talking randomly about stuff like this
18:29 <@mbalho> HankHendrix: basically a good module should have a tidy package.json, meaning a `npm test` script, proper dependencies, http://semver-ftw.org/, a repository field linking to github, and other relevant metadata
18:30 < HankHendrix> bradleymeck: yeh I heard it, hence why I'm starting on modules!
18:30 <@mbalho> HankHendrix: and then a good readme that explains how to install, use and contribute. the key is to keep modules small IMO, e.g. dont spend half your time figuring out a testing framework
18:30 < niggler> "FATAL ERROR: JS Allocation failed - process out of memory" <-- what's the default limit?
18:31 < HankHendrix> mbalho: cool, it it necessary to create a node_module for a class in my app?
18:31 < HankHendrix> I read an article that suggested breaking classes into modules and placing them into "node_modules"...this has confused me tho
18:32 < HankHendrix> I thought node_modules was exclusively for third party
18:32 <@mbalho> HankHendrix: the entire 'small module philosophy' is that 90% of your own code becomes 'third party'
18:32 < SomeoneWeird> node_modules can be what ever you want it to be
18:33 < HankHendrix> hmm
18:33 < HankHendrix> food for thought!
18:34 < HankHendrix> so this "Quiz Master" class I'm writing would live in node_modules and should be written with distribution in mind?
18:35 < tdignan> quiz master?
18:35 <@mbalho> HankHendrix: well it depends, what doe sthe app do that you are writing?
18:35 < HankHendrix> it is a "fastest finger first" quiz
18:36 < tdignan> I would write a module if it was some reusable generic code that others will benefit from too
18:36 < tdignan> quiz master sounds like the goal of your project?
18:36 < tdignan> not a component
18:36 < HankHendrix> yeh
18:36 < HankHendrix> I can't see anyone using it in an abstract way
18:36 < tdignan> nah, it doesn't need to be a module. Just make your quiz master :)
18:36 < HankHendrix> hence I'm wondering if it should live in a "lib" folder
18:36 < tdignan> you'll know when you have modularizable code.
18:37 < HankHendrix> I think I need to study some reputable modules
18:37 < HankHendrix> and look at the node conventions etc
18:38 < HankHendrix> what is the purpose of the assigning a self invoking method to a variable??
18:39 < bradleymeck> return value?
18:40 < HankHendrix> why ofcourse!
18:40 < HankHendrix> what an idiot
18:40 < HankHendrix> you'd never tell I was a PHP dev would you?!
18:42 < jsdud3> Hi, all express apps I have seen have there route catcher eg app.get().. in app.js. Is it possible to move it elsewhere? how should I make a ref to app? with exports or should I don't do that with instances?
18:42 < jsdud3> their route..
18:43 < Sawbones> I have no idea what you just said
18:43 < euoia> jsdud3: I believe you can call app.get anywhere you like, you just need a reference to the app object
18:44 < jsdud3> euoia: how to reference it in another file then? with expoerts.app = app; ?
18:44 < jsdud3> or is there like a global function to get the instance?
18:45 < jsdud3> eg Express.getInstance().. something?
18:45 < euoia> jsdud3: I'm not sure if there's a global function - I don't think so. I tend to module.exports a single function which is used as a constructor.
18:46 < jsdud3> euoia: but app is not a function it's an object instance of express
18:46 < euoia> jsdud3: where I have needed to reference app from within the contructed object, I accept app as an argument to the constructor
18:46 < jsdud3> I see
18:46 < euoia> jsdud3: I am not sure if this is a great way of doing it :)
18:47 < jsdud3> euoia: ye I know. I thought of this today
18:47 < jsdud3> I have nothing really against the routes in app.js but I want to know my options
18:47 < jsdud3> new to node
18:48 < jsdud3> have to play with it I guess
18:48 < samholmes> Is there a way to force cookies to reload
18:48 < samholmes> ?
18:48 < CoverSlide> set their expire to some time in the past
18:49 < CoverSlide> that's the usual hack
18:49 < jsdud3> ye
18:49 < samholmes> I pushed some changes to the production server and now it doesn't work unless the cookies are cleared on the browser. But, all my users wont know to clear their cookies.
18:51 < euoia> samholmes: as CoverSlide says, if you send a set-cookie with an expiry in the past it will clear it
18:52 < jetienne> i got several 'error -1' out of jitsu deploy …. nothing more explicit than that. anybody experiencing the same ?
18:52 < samholmes> euoia: I actually want to "update" the cookie though.
18:53 < euoia> samholmes: you want to change the value of it? then you should just be able to do a set-cookie with a new value
18:54 < samholmes> euoia: It's the connect.sid cookie. I'm not sure why Express 3.x doesn't update it for me. (I migrated from Express 2.x)
18:55 < faceleg> anyone have any ideas about this? http://stackoverflow.com/questions/15498340/error-cannot-find-module-deps-console-log
18:55 < euoia> samholmes: so you're seeing invalid session errors for your users?
18:56 < samholmes> euoia: I'm seeing my chat system not working
18:56 < samholmes> until I clear the cookies
18:56 < samholmes> But now all my users must clear their cookies.
18:57 < samholmes> Though, inspector says that the connect.sid cookie expires on Session
18:57 < euoia> samholmes: then it should only last until the user closes their browser
19:03 < kenperkins> anyone point to a good blog post on domains yet?
19:03 < cjhanks> When a require file is deleted from require.cache, will this effect any running instances of the cached code?
19:04 < brianc1> Been working on this for a while...it's come in SUPER handy in some apps I've been building...would love feedback: https://github.com/brianc/node-okay
19:07 < euoia> brianc1: looks interesting
19:08 < brianc1> it has removed the "if(err) { /* 3 lines of boilerplate */ }" from most of my callbacks
19:08 < brianc1> obviously there are times you actually need to do something specific with the error and not just pass it off or log it or throw it
19:09 < brianc1> but most of the time I find myself just bubbling it up
19:11 < cjhanks> There are a million ways to pass exceptions up the stack and all of them are equally bad :)
19:11 < euoia> brianc1: so if you don't give it a callback, it will throw the error?>
19:11 < someone12375> hey anyone know why node-inspector would not work on a corporate network?
19:11 < someone12375> on localhost
19:11 < brianc1> euoia: or send the error object to the active domain
19:12 < MI6> joyent/node: Bert Belder v0.10 * 8019800 : Update .mailmap and AUTHORS - http://git.io/Fw_2wg
19:12 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:12 < someone12375> works fine from home, when i connect to corp network websockets fail and it falls back to xhr polling and acts liek it is working but a source file list never shows up
19:14 < euoia> brianc1: I was under the impression that simply using domains did away with having to bubble up errors
19:14 < euoia> brianc1: but I suppose that's demonstrates my ignorance on the matter
19:15 < euoia> s/that's/that
19:15 < brianc1> euoia: well let's say you're in a domain and you do `fs.readFile(function(err, contents) { });
19:15 < brianc1> you still have the error on your hands at that point
19:15 < brianc1> since you're in a domain you can just throw the error
19:15 < brianc1> but the point is you still have that error in the callback signature
19:16 < brianc1> the `okay` module removes it from the signature and gives you an error free callback
19:16 < euoia> brianc1: that seems to be a bit like what the intercept function does
19:16 < euoia> brianc1: http://nodejs.org/api/domain.html
19:17 < euoia> I am just looking at this for the first time
19:17 < brianc1> it is exactly like that
19:17 < brianc1> it actually uses it
19:17 < HankHendrix> how can I access socket.io used in my app.js from within a module?
19:17 < brianc1> but if you aren't using domains and you call 'process.domain.intercept' you get an error `undefined has no method "intercept"`
19:18 < euoia> HankHendrix: I have been using this, perhaps it can help you: https://github.com/functioncallback/session.socket.io
19:18 < euoia> brianc1: hmm true. I guess it's a nice abstraction over the top of it. Pretty neat!
19:19 < HankHendrix> euoia: cheers
19:32 < styol> If I've got a series of functions with callbacks within a wrapper function and the first inner function is optional based on an argument passed to the wrapper, is async.waterfall the appropriate approach for handling that optional scenario?
19:48 < mateodelnorte> Has anybody had a problem where browserify modules are only accessible by number and not relative path name?
19:49 < substack> mateodelnorte: use -r
19:49 < mateodelnorte> u r z expert
19:49 < mateodelnorte> thanks
19:53 < diffalot> anyone had trouble running two scripts of the same name with forever:  I can't seem to stop them individually--is there a way to stop a forever script by uid?
20:05 < mateodelnorte> substack: is there a way to do something like browserify -r ./client/*.js > ./js/bundle.js? I'm getting the same error. This worked before updating versions today, in case there was a change with require() syntax. :-/
20:06 < SpawnPro> http://www.youtube.com/watch?v=9amsg2rF5f0 this is the updated version m8
20:11 < substack> mateodelnorte: browserify $(for file in client/*.js; do echo -r $file; done) > js/bundle.js
20:11 < mateodelnorte> substack: sweet. thanks
20:15 < styol> diffalot: use the number [0]
20:17 < styol> diffalot: ie: forever stop 0
20:18 < ljharb> in node 0.10, an npm module i maintain's tests are broken. it looks like it's related to the http.IncomingMessage constructor now requiring a first argument.  can someone take a look? https://github.com/caolan/forms/blob/master/test/test-form.js#L274 https://gist.github.com/ljharb/3ffd2be12fdb2d03a8f8
20:22 < SpawnPro> http://www.youtube.com/watch?v=9amsg2rF5f0 this is the updated version m8
20:27 < perlitch> substack: in browserify is there a way to create a transform through-stream that acts on all require()'d files, not just the top-level file? basically i want to compile handlebar templates on the fly that I am requiring via require('my_template.handlebars'). Here's my build script with pseudo-code: https://gist.github.com/andyperlitch/5199751.
20:28 < substack> there is not
20:28 < substack> on purpose
20:28 < substack> because that would break your modules
20:29 < ljharb> substack: any chance you've got an idea on my q above? :-)
20:30 < perlitch> substack: appreciate the response. im still trying to embrace the unix stream principle. any suggestions on how i could get precompiled templates into my bundle gracefully?
20:31 < substack> perlitch: http://github.com/substack/brfs
20:31 < substack> in your code: handlebarsParser(fs.readFileSync(__dirname + '/my_template.handlebars'))
20:31 < superjoe> substack, what's the reasoning for not using agent?
20:31 < substack> bonus: it will work in node too
20:32 < substack> superjoe: see http://github.com/substack/hyperquest
20:32 < superjoe> according to the API docs, it looks like using the default agent config will be super efficient, especially if you make repeated calls to the same server
20:32 < superjoe> ok I'll read that
20:32 < substack> haha efficient
20:32 < perlitch> wouldnt handlebarsParser(fs.readFileSync(__dirname + '/my_template.handlebars')) still compile the template on the browser?
20:32 < substack> perlitch: and then you just `browserify -t brfs main.js > bundle.js` to make the fs.readFileSync() calls get inlined
20:33 < substack> perlitch: yes
20:33 < superjoe> substack, looks like this line needs to be updated: "I have it on good authority that these annoyances will be fixed in node 0.10."
20:33 < substack> perlitch: if you want to write an ast parser transform you can look at how brfs does it as a starting point
20:33 < substack> it's a very small amount of code
20:34 < perlitch> ok sweet i will
20:34 < substack> superjoe: yep, still broken until 0.12
20:34 < substack> superjoe: updated
20:34 < superjoe> ha
20:39 < robinson_k> heya
20:39 < robinson_k> hey hi substack :)
20:42 < michael-robinson> is nodeunit dead?
20:43 < substack> robinson_k: beep boop
20:43 < substack> michael-robinson: I like to use https://github.com/isaacs/node-tap
20:44 < substack> or if you want the same tap api for browser tests I wrote http://github.com/substack/tape
20:44 < substack> and you can still use the same `tap` command harness to run all the tests in your test directory
20:44 < substack> since all the `tap` command cares about is that valid TAP comes out of stdout
20:46 < AAA_awright> I'm getting Error: spawn ENOENT
20:46 < AAA_awright> Does anyone have any clue what this means?
20:46 < RLa> file does not exist?
20:48 < robinson_k> ah just one question that came into my mind this day after work on my way back home:
20:49 < robinson_k> i would love to listen some opinion to express vs hapi
20:49 < robinson_k> +s
20:49 < FellowMD> AAA_awright: file/directory does not exist
20:49 < FellowMD> AAA_awright: Bookmark this: http://www.barricane.com/c-error-codes-include-errno
20:50 < AAA_awright> I know that
20:50 < Raynos> mattp_: https://gist.github.com/mattpodwysocki/5199895#comment-801859
20:50 < AAA_awright> But my files DO exist
20:50 < substack> robinson_k: I just use core http and use tiny modules like ecstatic when I need particular things
20:50 < RLa> AAA_awright, are you sure
20:50 < AAA_awright> And I have no message saying which file it can't find
20:50 < robinson_k> substack: i know :)
20:50 < RLa> AAA_awright, no stacktrace?
20:50 < FellowMD> specifically it's a spawn ENOENT
20:50 < AAA_awright> None
20:50 < FellowMD> which means it can't find the executable you're trying to run
20:51 < AAA_awright> Well, it's two lines,     at errnoException (child_process.js:922:11) at Process.ChildProcess._handle.onexit (child_process.js:713:34)
20:51 < michael-robinson> substack: damn, I have an inherited test suite
20:51 < robinson_k> substack: we talked 2012 at reject js and i saw your talk at jsconf
20:51 < michael-robinson> doe I have to rewrite it to work with tap?
20:51 < substack> hah neat
20:51 < FellowMD> AAA_awright: That happened to me in OSX, because GUI apps have a different PATH than command line
20:51 < substack> michael-robinson: yes
20:52 < FellowMD> Whatever environment the executable's being spawned in cannot resolve the executable name
20:52 < context> fellowmd: depends how you open them
20:52 < FellowMD> context: true, I was just mentioning the first time I ran into the issue
20:53 < context> yeah, i have to open sublime via cli in project dir for hot-key test runs and stuff to work
20:53 < context> which kind of sucks but understandable
20:53 < FellowMD> AAA_awright: try spawn('which', ['node_or_whatever_your_thing_is_you're_trying_to_spawn'])
20:53 < MI6> joyent/libuv: Timothy J Fontaine master * 499c797 : unix, windows: nanosecond resolution for uv_fs_[fl]stat  Closes #739. - http://git.io/LEUp3w
20:53 < michael-robinson> substack: gawdammit
20:54 < michael-robinson> substack: so nodeunit is pretty much dead
20:54 < substack> michael-robinson: just use tap
20:54 < substack> they are trivially translatable
20:55 < michael-robinson> substack: understood
20:55 < michael-robinson> substack: thanks for the advice
20:56 < Raynos> michael-robinson, substack: just use tape ;)
20:56 < michael-robinson> substack: now can you please fix my C++ memory management fails
20:56 < substack> don't use c++
20:56 < substack> problem solved
20:56 < Raynos> +1
20:56 < Raynos> Use erlang instead
20:56 < michael-robinson> substack: Raynos not possible. Alternative: gain actual skill with C++
20:56 < substack> don't even bother
20:56 < Raynos> Seriously, rewrite it in node
20:56 < substack> so not worth it
20:56 < michael-robinson> (p.s. I wish)
20:57 < substack> so much pain for so little benefit
20:57 < bradleymeck> substack: sometimes we need those benefits sadly
20:57 < bradleymeck> and it makes me sad
20:57 < michael-robinson> Raynos: substack i'm new maintainer for libgit2 wrapper, libgit2 is in C, therefore C++ req. to bridge the ga
20:57 < michael-robinson> gap*
20:58 < michael-robinson> if Icould write a libgit2 wrapper in node I would, believe me :P
20:58 < bradleymeck> there are some FFI modules, dont know their maturity
20:58 < Raynos> michael_robinson: http://www.kickstarter.com/projects/creationix/js-git
20:58 < RLa> why libgit2, can't git be used through command line parms?
20:59 < tjfontaine> magic libgit2 ffi wrapping https://gist.github.com/tjfontaine/a10266f88d0a1f57b816
21:00 < tjfontaine> some macro methods are in that though, but have fun with rest :)
21:02 < faceleg|work> Raynos: that's useful but I need something NOW
21:02 < faceleg|work> RLa: because IMHO that approach is lame
21:02 < substack> RLa: indeed, for all my git modules I just shell out to the command-line
21:02 < faceleg|work> tjfontaine: is that async?
21:02 < substack> pushover, git-history, git-file
21:02 < RLa> hm
21:03 < faceleg|work> substack: diff between two commits?
21:03 < faceleg|work> substack: walk revision history?
21:03 < tjfontaine> faceleg|work: there are no ffi async methods including in that, but wouldn't be too difficult to add
21:03 < substack> faceleg|work: just figure out the commands for those then package them up in a handy module
21:04 < faceleg|work> substack: tjfontaine RLa I still think a proper wrapper for lg2 is worth it
21:04 < tjfontaine> faceleg|work: you mean a binary addin?
21:04 < tjfontaine> faceleg|work: https://github.com/tbranyen/nodegit
21:04 < faceleg|work> yes
21:04 < faceleg|work> a native module
21:04 < faceleg|work> duh that's what I'm talking about
21:04 < faceleg|work> if you read the readme you'll see "Michael Robinson" which is me
21:05 < tjfontaine> k, I'll jump out as fast as I jumped in
21:05 < faceleg|work> :P
21:05 < faceleg|work> i'm not reinventing the wheel, just trying to make it more round
21:05 < tjfontaine> I worked with tbrayen in the start, but he eventually went a different direction
21:05 < faceleg|work> oh yea
21:05 < faceleg|work> what direction?
21:05 < tjfontaine> I didn't have the cycles at the time to devote to it
21:06 < tjfontaine> faceleg|work: as far as how the api was looking, eventually he landed where I expected it to be
21:09 < ljharb> asking again, just in case: in node 0.10, an npm module i maintain's tests are broken. it looks like it's related to the http.IncomingMessage constructor now requiring a first argument.  can someone take a look? https://github.com/caolan/forms/blob/master/test/test-form.js#L274 https://gist.github.com/ljharb/3ffd2be12fdb2d03a8f8
21:09 < spion> perlitch, you could also try this approach with browserify v2: https://gist.github.com/spion/5200049
21:10 < spion> based on coffeeify
21:10 < spion> (and my old jade plugin for v1)
21:11 < perlitch> i thought the 'file' arg was the actual code, not the filename
21:11 < perlitch> or am i not reading your gist correctly
21:11 < substack> spion: it's probably not such a great idea to use require() for loading static assets like that
21:12 < substack> require() is for code
21:12 < substack> but whatevs, browserify won't stop you
21:12 < spion> jade is code.
21:12 < substack> jade is fancy markup
21:12 < spion> which supports arbitrary javascript expressions
21:12 < substack> jade.render(fs.readFileSync(__dirname + '/file.jade'))
21:13 < substack> this way you can re-use your client code in node too
21:14 < perlitch> i see the awesomeness of client/server interoperability, but my main concern is precompilation, and also i know that it is very unlikely (for the project I am working on now) that i'll be using it in node
21:15 < perlitch> also substack that is a good point that require is more for a code thing, but actually precompiled templates count as code right? they are functions anyway
21:15 < substack> not really
21:15 < substack> it's also about keeping a consistent mental model
21:16 < spion> substack, good point (about the reuse)
21:16 < substack> for what the scope of require() is versus other abstractions
21:16 < substack> something that behaves differently from require() should have a different name I think
21:16 < substack> to prevent confusion
21:17 < perlitch> for sure, so basically do what brfs does, only look for [insert custom compile method name here] calls and replace at those points 
21:17 < substack> yeah that sounds like a good approach
21:18 < perlitch> awesome. thanks both of you guys
21:18 < spion> but, are you really using javascript in that case.
21:18 < perlitch> what do you mean?
21:18 < MI6> joyent/libuv: indutny created branch feature-tcp-dualstack - http://git.io/GuxM2Q
21:19 < spion> whoops, sorry
21:19 < spion> took some time to process that.
21:19 < perlitch> haha for sure
21:20 < spion> I was thinking - if you're using a custom compile method, then the code will only work in browserify and only when the plugin is invoked.
21:20 < pyykkis> perlitch, substack: i have something related on the works
21:20 < spion> then I remembered that the "custom compile method" is actually the original method - e.g. jade.compile
21:20 < pyykkis> https://github.com/leonidas/james.js
21:20 < perlitch> ah i see what you mean
21:20 < spion> (so outside browserify the original function will simply be invoked)
21:21 < HighwayofLife> Hey all, I'm attempting to build node on a RedHat box, but not having much success. I'm getting a "SyntaxError: invalid syntax" on the configure file.
21:22 < HighwayofLife> My assumption is that it is requiring a different version of Python, but can't be sure… 
21:22 < ljharb> that's your problem alright
21:23 < ljharb> red hat has python 2.4 i think, and node's configure file requires 2.6 or later
21:23 < HighwayofLife> That's what I was afraid of, what's the suggested workaround?
21:23 < ljharb> i got around it by installing a separate python27, temporarily aliasing it to "python", installing node, and then reverting the alias back to the old one
21:23  * spion should try writing a transform that is a compile-time evaluator of a certain function.
21:23 < pyykkis> substack: what's your approach on css, html etc? do you bundle them with browserify, too?
21:24 < perlitch> pyykkis: no, with good reason imho
21:24 < HighwayofLife> Thank you ljharb, I'll give that a shot.
21:25 < perlitch> at least out-of-the-box
21:25 < perlitch> i still think its good reason even though im trying to do something like that lol
21:27 < perlitch> spion: can you elaborate on "should try writing a transform that is a compile-time evaluator of a certain function." do you mean like a generic transform that looks for a specific method call?
21:27 < spion> I mean like a transform that will precompile your templates if you put it in, but won't do anything if you don't.
21:27 < pyykkis> perlitch: ok, that's my position atm, too. browserify is great for js dependencies. other compilations, minifications etc should are different concerns
21:28 < pyykkis> ..should be..
21:28 < spion> but it will also need brfs
21:29 < spion> perlitch, my idea is that when jade.compile(fs.readFileSync("file")) is encountered, if you include both brfs and jade-precompile, it will precompile your templates. if you only include brfs, it won't :)
21:31 < perlitch> ah i getchya… man that took too long to comprehend
21:32 < ProblemEmitter> is app.js (node.js submerged in chromium) usable in the real world?
21:32 < jetienne> ProblemEmitter: only in the 4th dimension :)
21:33 < spion> oh wow, looks like brfs actually looks for require("fs") calls
21:33 < ProblemEmitter> jetienne: ? :(
21:33 < perlitch> yea i saw that
21:33 < spion> this could work
21:33 < jetienne> ProblemEmitter: just a joke on 'the real world' comment you made :)
21:33 < ProblemEmitter> okay :)
21:34 < jetienne> ProblemEmitter: I'm guessing you mean 'in practice'
21:34 < ProblemEmitter> yeah like does anybody have any real experience
21:35 < ProblemEmitter> seems like a powerful stack
21:35 < jetienne> ProblemEmitter: in practice, chromium is barely used, put on top of that installing an extension, you get virtually nobody
21:35 < ProblemEmitter> no extensions. http://appjs.org
21:36 < jetienne> ProblemEmitter: oh I'm confused. i was thinking about an old plugin who made node run in the browser
21:36 < jetienne> so i dunno :)
21:36 < ProblemEmitter> ok no problem
21:39 < perlitch> substack: is there a good primer for all this ast/esprima/falafel stuff? im completely new at it
21:40 < perlitch> spion: if you know of anything to that effect i'd appreciate any recommendation
21:41 < spion> I only know some general concepts about compilers and parsers, and just a tiny bit about using esprima or falafel - sorry.
21:42 < perlitch> no worries man
21:42 < spion> but I guess you would need to read about the way esprima represents the ast
21:43 < StephenS> how to drop out from socket.io if not supported to comet/ajax?
21:43 < spion> this should help, http://esprima.org/doc/index.html#ast
21:44 < perlitch> spion: http://www.youtube.com/watch?v=UsN0YANRZ1U
21:46 < StephenS> no one?
21:47 < spion> StephenS, doesn't socket.io do that automatically?
21:47 < StephenS> how?
21:48 < StephenS> it disables $.ajax() and if socket not supported fallback automatically?
21:48 < robinson_k> StephenS: socket.io degrades gracefully from websockets to flash, then later long polling
21:48 < jsmonkey> Anyone aware of Rails asset-pipeline? You just say like require jquery.js or require_tree inside a file and it concats, minifies, handles sass, coffe etc.
21:48 < robinson_k> StephenS: jut automatically, it does that for you
21:48 < jsmonkey> I want that for node
21:49 < jsmonkey> anyone aware of a similar package?
21:49 < robinson_k> StephenS: http://socket.io/#browser-support
21:49 < StephenS> robinson_k, but I dont get how it works
21:49 < StephenS> if ajax.() is on .js page it will auto killed if socket.io is supported?
21:49 < StephenS> or how?
21:49 < StephenS> $.ajax() *&
21:50 < robinson_k> it does internally some feature detection and provides the same API for you using other technologies.
21:51 < robinson_k> i can't image it would kill your jquery ajax request.
21:51 < pyykkis> jsmonkey: https://github.com/adunkman/connect-assets
21:51 < spion> it has nothing to do with $.ajax() - but when you do use socket.io, you could be using websockets, flash sockets, or comet (or iframes, or whatever method is available in the client)
21:51 < StephenS> so how would I code ajax with webscoekts then
21:52 < spion> you don't
21:52 < jsmonkey> pyykkis: thanks will look into it
21:53 < spion> you just use socket.io and socket.io decides what it should be using.
21:53 < StephenS> k
21:54 < HighwayofLife> So I'm trying to install node-v0.8.22 from source in RHEL, configured fine, on make I get the following...
21:54 < HighwayofLife>     import bz2
21:54 < HighwayofLife> ImportError: No module named bz2
21:55 < HighwayofLife> ljharb: Did you run into that issue?
21:57 < ljharb> HighwayofLife: no - how did you install python 2.6 or 2.7?
21:57 < ljharb> i'm on centos, and i used an alternate yum repo
21:58 < StephenS> isnt socket.io similar to comet?
21:58 < ljharb> comet is long-polling. socket.io is web sockets with a fallback to long-polling.
22:01 < StephenS> why would I use socket and not comet?
22:02 < StephenS> both will flood my server on the longer run
22:08 < robinson_k> let me wikipedia this for you
22:08 < robinson_k> "efore WebSocket, port 80 full-duplex communication was attainable using Comet channels; however, comet implementation is nontrivial, and due to the TCP handshake and HTTP header overhead, it is inefficient for small messages. WebSocket protocol aims to solve these problems without compromising security assumptions of the web."
22:10 < spion> perlitch, just a note that you might also want to implement your own brfs that does some caching (or take care to call readFileSync only once per file)
22:12 < HighwayofLife> ljharb: I *think* I got it to work. It was a trickery of switching back and forth between Python 2.4 and Python 2.7 to get node to configure and install.
22:12 < HighwayofLife> e.g.: Python 2.7 required to configure, 2.4 for make, 2.7 for make install.
22:12 < HighwayofLife> or no… 2.7 for the last half of make. 
22:12 < ljharb> hm, i thought it was just for configure
22:12 < ljharb> but interesting
22:12 < perlitch> yea good point. atm im trying to implement an interface for this function to be something like: var precomp = require('precomp'); var template = precomp.hbs('./tpl_path.html'); the first problem im running into is inside of precomp.hbs… how can i resolve the filename passed to the full path? im probably not understanding something
22:12 < HighwayofLife> The reason is because bz2 wasn't in 2.7?
22:12 < HighwayofLife> But was in 2.4
22:12 < dypsilon> Hi everyone, what is the most popular package for implementing oAuth (1) service right now?
22:13 < HighwayofLife> So it had to import the Python 2.4 bz2 module first.
22:14 < robinson_k> dypsilon: had to think of http://passportjs.org/ immediatly
22:14 < robinson_k> dypsilon: but even do not know if it supports plain oauth 1
22:15 < dypsilon> robinson_k, ok, looking at it right now, thanks. Apparently it does.
22:15 < robinson_k> dypsilon: but seems so: http://passportjs.org/guide/oauth-api/
22:15 < robinson_k> yeah :)
22:16 < robinson_k> i also have tha "authom" from jed schmidt in minf but i think passport is more popular.
22:18 < dypsilon> yeah, ill probably stick to passport, although the examples seem pretty complicated (https://github.com/jaredhanson/oauthorize/tree/master/examples/express2)
22:19 < robinson_k> dypsilon: just saw that https://github.com/bnoguchi/everyauth has even more stars.
22:21 < AviMarcus> http://eirikb.github.com/nipster/ for npm ratings!
22:22 < MI6> joyent/libuv: Brian Mazza v0.10 * 77cb29a : unix: make uv_timer_init() initialize repeat  uv_timer_get_repeat() shoul - http://git.io/90Wxjg
22:26 < bingomanatee> any advice for using three.js in node?
22:28 < ljharb> visual rendering, in node? O.o
22:28 < samholmes> Is there a schemasync tool written in Node.js? http://samholmes.me/post/45785362751/mysqldb-how-the-frick
22:31 < bingomanatee> I'm writing unit tests for a three.js project
22:33 < iapain_> @isaacs: ping PR #3696 :)
22:33 < ljharb> you shouldn't need to unit test three.js functionality. that's the library's job.
22:34 < ljharb> in fact, your unit tests should be stubbing out all of its functionality and just making sure *your* methods work properly.
22:34 < ljharb> if you don't think <%= library %> is tested enough, then by all means submit a pull request with tests to the library's repo :-)
22:36 < infrared> hi. it is possible to install node modules in cwd, right?
22:37 < drudge> infrared: npm install module_name will install to cwd/node_modules/module_name
22:38 < infrared> drudge: i thought so. it keeps installing them in ~/
22:38 < mscdex> samholmes: https://github.com/nearinfinity/node-db-migrate ?
22:38 < infrared> drudge:   npm config get global is false  (believe that's the flag i'm fighting)
22:39 < samholmes> what's a migration framework?
22:39 < mscdex> infrared: is there a node_modules in ~/ ?
22:39 < infrared> mscdex: yes
22:39 < mscdex> infrared: that's probably why
22:40 < infrared> mscdex: i'll ax it and see what happens, thanks
22:40 < markdaws> infrared if you have a node_modules folder higher up in the folder hierarchy, npm will install there and not in your cwd
22:40 < mscdex> infrared: npm searchs up parent paths for node_modules directories
22:40 < mscdex> infrared: i've been bitten by the same thing before
22:40 < samholmes> mscdex: This doesn't make sense to me.
22:40 < mscdex> samholmes: ?
22:40 < samholmes> mscdex: you sent me a link
22:40 < mscdex> samholmes: for schema migration no?
22:41 < samholmes> It says, "To create a migration" it hasn't explained what a migration is.
22:41 < infrared> mscdex: o/  :)
22:41 < ljharb> samholmes: it's a sql statement that can be run to make, and another to reverse, a change
22:41 < ljharb> it's used heavily in rails
22:41 < ljharb> so that you can store DB changes in version control
22:43 < samholmes> mscdex: Usually, I was on windows with mysql workbench and I had a WAMP. When I wanted to make changes to my production server using the local server, I just used workbench's sync feature. That's all I'm familiar with. Now I find this one thing, schemasync, which promises to generate some sql files that I could run to sync the schemas from my mysql server on my MBP, to my mysql server on my VPS. Tho, I couldn
22:43 < samholmes> 't get that working because I'm too dumb to figure out how to get some python thing installed (I'm no python dev). So, what's a migration? I don't create migrations, I know about the verb form of the word. I migrate things. What's a "migration"?
22:44 < samholmes> ljharb: why does it look like I write some node.js scripts using that module?
22:44 < ljharb> samholmes: a "migration" is a script file, that when you run it in "up" mode, will make a change in your database. when you run it in "down" mode, it will revert said change.
22:44 < samholmes> ljharb: shouldn't it be nodejsmigrationtool localhost remoteserver.com?
22:45 < ljharb> samholmes: no, it has nothing to do with changing remote servers
22:45 < ljharb> you should be using a deploy automation tool to do that for you
22:45 < ljharb> like git post-receive hooks on your server, or capistrano, etc.
22:45 < samholmes> never heard of capistrano
22:45 < ljharb> if you're doing deploys manually for some reason, then you should deploy your new code, ssh into the prod server, and run the migration script there.
22:46 < samholmes> How do I know what I changed in my local server in order to "deploy"?
22:46 < samholmes> I need a tool to compare the two scheams
22:46 < samholmes> schemas
22:46 < zeromodulus> I'm in callback hell again. :(
22:46 < ljharb> simple. don't ever make any changes unless it's in a migration file first.
22:46 < ljharb> samholmes: i.e. your "alter table" statements should never be made without them also being recorded in version control.
22:46 < samholmes> zeromodulus: npm install yarn or lace
22:46 < ljharb> zeromodulus: http://callbackhell.com
22:46 <@Nexxy> zeromodulus, name your functions
22:47 < samholmes> ljharb: I've already made changes, because I wasn't aware of this
22:47 < zeromodulus> eh, uh...
22:47 < ljharb> samholmes: you could use mysqldump to print out a schema-only file on both, and then just use "diff" to compare them.
22:47 < zeromodulus> maybe I'm not in callback hell, but callback purgatory.
22:47 < samholmes> ljharb: where's the youtube video on using diff?
22:47 < samholmes> :P
22:48 < ljharb> it's a command line tool.
22:48 < ljharb> diff a b
22:48 < samholmes> zeromodulus: never heard of that.
22:48 < zeromodulus> :P
22:48  * zeromodulus checks out yarn.
22:48 < samholmes> zeromodulus: yarn will be superseded by lace eventauly.
22:49 < samholmes> eventually*
22:49 < zeromodulus> ah, okay.
22:49 <@Nexxy> lace is probably the most confusing control flow lib I've seen
22:49 < samholmes> Nexxy: so what. You're dumb. Jk.
22:50 < drudge> async is pretty straight forward
22:51 < zeromodulus> In that case, I shall read my Async JavaScript book now.
22:51 < samholmes> drudge: yeah, with a lot of features if you want.
22:55 < mscdex> someone should create a control flow module called "javascript"
22:56 < mscdex> then if anyone asks you how to manage callbacks, just tell them to use javascript
22:56 <@Nexxy> mscdex, I do that already
22:56 <@Nexxy> w/o a library
22:56 < drudge> vanilla.js
22:56  * mscdex shakes a fist
22:56 < samholmes> named functions then?
22:56 < mscdex> 'javascript' is already taken on npm!
22:57 < mscdex> it's a module that outputs Hello World!
22:57 < samholmes> mscdex: wonderful example of js then
22:58 < samholmes> Lace is a way to put all your async callback stuff into this string of things called a lacing.
22:58 < samholmes> I don't see how hard that it is to understand..
22:58 < samholmes> you just use the frickin lace module to manage your flow through a lacing.
22:58 < samholmes> lace.next is the next function in the lacing.
22:59 < samholmes> lace.outer is the reference to the lace object that a lacing is nested in.
22:59 < samholmes> boom
22:59 < samholmes> I'm out.
22:59 < ljharb> thats a whole mess of extra concepts
23:00 < ljharb> either http://callbackhell.com or https://gist.github.com/3889970 should eliminate it as a problem.
23:04 < superjoe> has anyone else encountered this crypto assertion error? https://github.com/joyent/node/issues/5089
23:04 < superjoe> in v0.10
23:05 < perlitch> is there any way to get the __dirname of the file that called method A inside of method A (which would reside in another file)? so if it was called like A('./some/path/relative/to/curfile'), is there a way to determine the absolute path of the argument without having to directly pass the __dirname as another param?
23:08 < niggler> hey substack you sensate?
23:09 < stagas> perlitch: there's module.parent
23:10 < perlitch> oh epic
23:12 < perlitch> stagas: thank you
23:13 < farslan> hi all
23:13 < farslan> I'm listening two signals (SIGCONT and SIGSTOP)
23:14 < farslan> It seems my node app can't handle the signals coming via SIGSTOP
23:14 < farslan> I'm sending it trough the bash kill method too, like : kill -s STOP <pid>
23:14 < farslan> but it just don't catch it
23:15 < farslan> however if I say, kill -s CONT <pid>, then I can catch this signal
23:15 < farslan> is there any bug that doesn't let me catch sigstop for any reasons?
23:17 <@piscisaureus_> mscdex: hey, did you actually run the tests on windows with your signals patch?
23:18 < mscdex> piscisaureus_: i admit i have not tried it, i just happened to see an associated test and fixed it up a bit
23:18 <@piscisaureus_> mscdex: ah, that explains. I would have be surprised if it did, since it's not possible to send signals on windows.
23:19 <@piscisaureus_> (except for sigterm/sigkill which will just unconditionally kill your process, e.g. it's a binding to TerminateProcess)
23:19 < samholmes> ljharb: with promises, wouldn't this require that the lib returns a promise rather than invokes a callback?
23:19 < samholmes> require/depend
23:20 < ljharb> sure. but it could also return a promise that a callback's been .done'd onto
23:20 < ljharb> so you can easily add promises without breaking existing APIs.
23:21 < Sgeo> Um. How big a difference is there between 0.2.6 and 0.8?
23:21 < tjfontaine> night and day
23:21 < samholmes> ljharb: done'd?
23:22 < Sgeo> Is there a decent way to get node.js running on an obsolete Ubuntu system?
23:22 < Sgeo> modern node.js I mean
23:22 < bradleymeck> Sgeo: if gcc is somewhat recent and python2.7 is there i would presume it should work
23:22 < deepy> compile it and relevant libraries?
23:23 < tjfontaine> Sgeo: I would suggest you compile it yourself, `apt-get install build-essentials git-core && git clone git://github.com/joyent/node && cd node && git checkout v0.10 && make && sudo make install` 
23:23 < Sgeo> I downloaded it from the node homepage
23:24 < Sgeo> I don't even want to use node.js. This tutorial for AngularJS is telling me I need it to run unit tests
23:26 < dypsilon> Sgeo, I think it's going to be hard to get python2.7 on an old ubuntu installation.
23:26 < Sgeo> Oh crud Python 2.6 won't work?
23:27 < dypsilon> Sgeo, nope
23:27 < ljharb> you don't need to run unit tests on your server. just run them on your local machine.
23:27 < Sgeo> My local machine is the obsolete Ubuntu.
23:27 < ljharb> well, that's just ridiculous
23:27 < ljharb> :-p
23:27 < Sgeo> And I just want to do a tutorial for no
23:27 < Sgeo> now
23:27 < ljharb> time to upgrade
23:27 < Sgeo> I'm too far behind to be able to upgrade, I think
23:27 < ljharb> i meant buy a new machine
23:28 < Sgeo> I want to
23:29 < dypsilon> maybe use some free plan of some cloud plattform provider
23:29 < track7> Any freelance javascript developers here looking for a paid opportunity?
23:29 < dypsilon> also i don't really understand why you need to run angular.js unit tests
23:29 < astropirate__> lets talk :)
23:30 < Sgeo> dypsilon, I just want to follow this tutorial
23:30 < Sgeo> "You will need Node.js and Testacular to run unit tests, so please verify that you have Node.js v0.8 or better installed and that the node executable is on your PATH by running the following command in a terminal window:"
23:31 < dypsilon> that doesn't clarify why you need to run angular.js unit tests on a very obsolete machine, but its probably none of my business
23:32 < Sgeo> The angular.js tutorial probably involves doing those unit tests
23:32 < Sgeo> Some unit tests, to teach how to do that
23:32 < dypsilon> to teach how to run unit tests?
23:32 < dypsilon> Sgeo, https://github.com/joyent/node/wiki/Node-Hosting
23:32 < dypsilon> maybe try one of these
23:32 < MI6> joyent/node: Bert Belder v0.10 * bf83251 : windows: enable watching signals with process.on('SIGXYZ')  This reverts  - http://git.io/QeyYhg
23:36 < dypsilon_> Sgeo, sorry i gont disconnected, not sure what you received. Maybe try one of these: https://github.com/joyent/node/wiki/Node-Hosting
23:36 < Sgeo> Received that suggestion
23:37 < andrewaclt> Is there something like npm unlink? :)
23:37 < dypsilon_> but tbh, i don't think you need to run unit tests to learn how to develop angular.js apps, maybe you are going in wrong direction...
23:38 < kenperkins> writing unit tests is way more work than writing code
23:39 < MI6> joyent/node: Iskren Ivov Chernev v0.10 * 2f4a62c : doc: fix streams2 SimpleProtocol example  A non-existing variable `b` was - http://git.io/MtdFMg
23:43 < euoia> any recommendations for auto generating documentation?
23:46 < Sgeo> Huh, I got 0.10.0 working despite using Python 2.6
23:46 < Sgeo> I don't get it
23:46 < arhart> owen1: I figured out what I was missing with the new streams API and stdin
23:46 < arhart> stdin will fire the readable event and can have read() called on it w/o having to call resume() on it
--- Log closed Wed Mar 20 00:00:47 2013
