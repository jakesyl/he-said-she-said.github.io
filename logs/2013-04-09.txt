--- Log opened Tue Apr 09 00:00:46 2013
00:05 < thealphanerd> Nexxy: I ended up doing a 10 channel mix down for my set on sunday night
00:05 < thealphanerd> glitchy drums all over the place
00:08 < ningu> what ever happened to playing actual instruments? is that considered lame now?
00:12 <@mbalho> yes everywhere, just like coffeescript
00:14 < ningu> mbalho: huh?
00:15 <@Nexxy> thealphanerd, jealous
00:15 <@Nexxy> thealphanerd, I have a few questions for you
00:15 < ningu> Nexxy: are you based in the bay area or just here sometimes?
00:16 <@Nexxy> I was there once
00:16 < ningu> hehe
00:16 <@Nexxy> for Voxer Hard Hack
00:16 <@mbalho> it r00l'd
00:16 <@Nexxy> but I will be there again shortly before NodeConf
00:16 <@Nexxy> it really did
00:16 < ningu> I wish I could go to NodeConf
00:16 <@Nexxy> I had the very first cup of coffee I actually enjoyed, ever
00:16 < ningu> what was it?
00:16 <@mbalho> coffee
00:17 <@Nexxy> unfancy mbalho coffee
00:17 <@Nexxy> that I paid in reprap scraps for
00:17 <@mbalho> oh yea i roasted it
00:17 < jerrysv> mbalho coffee++
00:17 < ningu> ah I thought you meant you went to philz or something like that
00:17 <@mbalho> it was from the yirgacheffe region of ethiopia where the coffee tastes like fruit
00:17 <@Nexxy> no mbalho actually roasted it right there
00:17 <@Nexxy> and then did some french press magic
00:17 < ningu> ah yeah I've had some good ethiopian coffee before
00:17 <@Nexxy> and it was pretty good
00:17 < jerrysv> aeropress, i believe, nexxy
00:17 <@Nexxy> oh that
00:18 <@mbalho> it was roasted with node.js
00:18 <@Nexxy> jaah
00:18 < mscdex_> node.coffee
00:18 < ningu> mscdex: hey is there any chance you could implement replace methods for pcre?
00:18 < chilts> I was thinking of buying an aeropress, but I'd like to taste some coffee made with it first :)
00:18 <@mbalho> chilts: where do you live?
00:19 < jerrysv> chilts: similar to coffee made with a chemex, very clean compared to a french press
00:19 <@mbalho> ive been pronouncing chemex as 'shuh may' (like the chimay beers) to sound unnecessarily fancy lately
00:19 <@Nexxy> haha
00:20 < mscdex> ningu: https://github.com/mscdex/node-pcre/issues/1
00:20 < chilts> mbalho: New Zealand :)
00:20 <@mbalho> chilts: in welly world? did we hang out when i was there last month? there were like 3 places with aeropress that i saw there
00:20 < ningu> mscdex: hmm. ok.
00:20 < chilts> I don't think I saw you :(
00:20 < jerrysv> chilts: maybe we can send dominic tarr to him.
00:20 < jerrysv> er, to you
00:21 < chilts> heh, I did see him and MaxOgden a month or so ago when they were here
00:21 <@mbalho> chilts: flight coffee bar had one
00:21 < chilts> ooh, cool, thanks :)
00:21 <@mbalho> chilts: <- maxogden
00:21 < andrewaclt> Node in Action just got bumped to July 2nd D:
00:21 < chilts> heh, you know more than I do about Wellington coffee :)
00:21 < chilts> mbalho: ahh ... hmm, why the nick?
00:21 <@mbalho> chilts: so people dont PM me as much
00:21 < chilts> lol
00:21 < ningu> mscdex: also, is there anything special I need to know about sending unicode data to pcre so it works right?
00:21 <@mbalho> chilts: also this place on ghuznee had one
00:21 < chilts> you just said that in public :D
00:22 < chilts> cool, I'll go check them out :D
00:22 <@mbalho> chilts: yea but nobody backreads this channel so whatevs
00:22 < chilts> heh
00:22 < chilts> true
00:22 < jerrysv> yeah, but most of the people that are active at the moment already know that :)
00:22  * chilts hasn't realised
00:22 < chilts> hadn't
00:22 < ningu> mscdex: my main concern is properly handling unicode codepoints >0xFFF i.e. "astral" plane. chars that have two UTF-16 surrogates.
00:23 < chilts> mbalho: funny thing is, I was in SF this past weekend ... but hadn't seen you online recently (it all explains itself now)
00:23 < daneroo> To make a simple random digit stream with new Readable API, can I just push some chars from within _read(size) ? seems to causing out of memory error, Anyone have a really simple Readable example ?
00:23 <@mbalho> chilts: haha
00:23 < ningu> mscdex: it's going to get really messy if pcre returns an offset for a character that is actually two utf-16 chars... how will you know from js what to do?
00:24 < mscdex> ningu: i'm open to pull requests :-)
00:25 < mscdex> ningu: i just don't have the time to do it
00:26 < ningu> mscdex: well, fair enough. I'm just letting you know that I think a pure-js solution is ill-advised
00:28 < mscdex> ningu: i know it wouldn't be 100% javascript, because support for things like lastIndex would require some changes in the binding source
00:28 < mscdex> but most of it could be done in JS i think
00:31 < ningu> mscdex: do you know what encoding pcre uses internally? utf-8, utf-16 or what?
00:44 < MI6> joyent/node: isaacs created tag v0.8.23 - http://git.io/2rftqQ
00:45 < MI6> joyent/node: isaacs v0.8 * 49dcab9 : Now working on 0.8.24 (+3 more commits) - http://git.io/LEL9JQ
00:46 < MI6> joyent/node: isaacs v0.10 * 67096fd : blog: Post for v0.8.23 - http://git.io/cbzvzg
00:49 < jgornick> Hey guys, is it possible to rebuild a module?
00:50 < Havvy> You mean load it again and get a new object?
00:50 <@mbalho> cd module_dir && rm -rf node_modules && npm install ?
00:58 < lovek323> lol
00:58 <@mbalho> i do that all the time
01:18 < mscdex> ningu: depends on how it's compiled. there are 8/16/32-bit versions of the library
01:18 < ningu> mscdex: I am trying unsuccessfully to use the \p{Mn} property.
01:19 < ningu> mscdex: one sec will paste the code...
01:19 < ningu> http://hastebin.com/refuyemewa.coffee
01:19 < ningu> it should decompose the accents and then find a match for \p{Mn} as a non-spacing modifier.
01:19 < ningu> I checked and it's decomposing successfully.
01:20 < PY1NB> hey folks... how fine does node.js run on raspberry pi?
01:20 < ningu> I tried using iconv to convert to a utf-16 buffer 
01:24 < mscdex> ningu: yeah node-pcre currently just uses the 8-bit library functions with unicode properties and utf8 enabled
01:26 < ningu> mscdex: ok, but the nonspacing diacritic is still an 8bit character
01:26 < ningu> so I'm not sure why it shouldn't work
01:49 < substack> shopping for log rotation / storage / playback modules
01:49 < substack> something that just stores what it gets on stdin, *not* something that I'll be requiring in every server script
01:54 < ChrisPartridge> substack: smart-tee ?
02:07 < ningu> mscdex: any idea why pcre isn't able to handle the (8-bit) non-spacing diacritic characters I threw at it?
03:12 < TehShrike> I'd like to dedicate this song to all the modules I haven't written yet http://youtu.be/p9PiqCeLEmM
03:25 < substack> isaacs: why does node core comment out octal literals
03:25 < substack> that is some grade-A bullshit
03:26 < substack> like something a linter would make you do
03:26 < substack> for bullshit reasons
03:26 < substack> less readable in order to be "more readable"
03:28 < faceleg|work> 420
03:28 < faceleg|work> enhance your calm brah
03:29 < mscdex> octals all the way down
03:29 < hackedy> substack: where in node does that happen
03:30 < mscdex> fs module
03:30 < hackedy> ofc
03:30 < mscdex> it's silly octals are disallowed in strict mode
03:31 < hackedy> ugh that is weird
03:32 < substack> strict mode is for busy-bodies
03:33 < mscdex> real developers don't use strict mode!
03:34 < hackedy> real programmers don't use pascal. wait. where was I going with this
03:34 < SomeoneWeird> lol
03:35 < mscdex> or delphi!
03:35 < ioNull> haha
03:35 < ioNull> delphi's layout is dawn better thant android's!
03:35 < substack> pascal is great for writing museum-piece software
03:36 < substack> fabergé eggs and such
03:37 < mscdex> qb64 rules!
03:37 < mscdex> er wait... node.js rules!
03:38 < hackedy> Q: what do you get when a fabergé egg hatches
03:39 < TehShrike> Which NodeUp episode had the talks about arduinos and 3D printing?
03:40 < hackedy> A: nothing. fabergé eggs can't hatch.
03:41 < TehShrike> 27, I think?
03:41 < TehShrike> Also, hackedy: I giggled
03:50 < AAA_awright> Hmm, if I use the form "var a=b=c=0" will that create globals?
03:50 < AAA_awright> Actually let's see
03:50 < AAA_awright> Yeah.
03:50 < AAA_awright> >> "use strict"; var a=b=c=0; // Forgot about that
03:50 < purr> AAA_awright: ReferenceError: c is not defined
04:04 < bnoordhuis> >> +[]+[]
04:04 < purr> bnoordhuis: (string) '0'
04:05 < bnoordhuis> makes sense right?
04:05 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:08  * ningu has decided to reopen the eternal question: haproxy or nginx
04:08 < ningu> or *
04:09 < styol> ningu: what are you looking to do with it
04:09 < styol> rather, what goal are you trying to accomplish
04:10 < ningu> styol: proxy to several node apps based on vhost or path, and proxy to a legacy web server for cgi, ssi, and static pages
04:10 < faceleg|work> >> NaN == NaN
04:10 < purr> faceleg|work: (boolean) false
04:10 < faceleg|work> numbers that arent' numbers aren't numbers
04:10 < faceleg|work> (that arent numbers)
04:11 < elliottcable> >> isNaN(NaN)
04:11 < purr> elliottcable: (boolean) true
04:12 < julianduque> >> typeof NaN
04:12 < purr> julianduque: (string) 'number'
04:12 < julianduque> but...
04:12 < julianduque> well, ok, you win
04:12 < ningu> >> 'faceleg'.split('').map(function (x) { return x/0 }).join('')
04:12 < purr> ningu: (string) 'NaNNaNNaNNaNNaNNaNNaN'
04:13 < deoxxa1> WATMAN
04:13 < ningu> :)
04:13 < faceleg|work> hahaha
04:14 < styol> ningu: prolly HAProxy since it is purpose built for proxying requests
04:15 < ningu> >> 3/0
04:15 < purr> ningu: (number) Infinity
04:15 < ningu> >> isNaN(3/0)
04:15 < purr> ningu: (boolean) false
04:15 < ningu> >> isNaN(0/0)
04:15 < purr> ningu: (boolean) true
04:16 < passcod> >> +[]
04:16 < purr> passcod: (number) 0
04:16 < passcod> >> +{}
04:16 < purr> passcod: (number) NaN
04:16 < ningu> >> String(3/0).replace(/fin/, 'iqu')
04:16 < purr> ningu: (string) 'Iniquity'
04:16 < ningu> >> String(3/0) + String(3/0).replace(/fin/, 'san')
04:16 < purr> ningu: (string) 'InfinityInsanity'
04:19 < ningu> >> ~Infinity
04:19 < purr> ningu: (number) -1
04:20 < ningu> >> String(3/0).replace(/fi/,'a')
04:20 < purr> ningu: (string) 'Inanity'
04:20 < faceleg|work> lol
04:20 < ningu> too bad I can't make that look more mysterious
04:21 < passcod> oh, ~ is great
04:21 < passcod> >> -~+[]
04:21 < purr> passcod: (number) 1
04:23 < Cainus> anyone have some screencast experience?  got a software recommendation for macosx?
04:30 < jesusabdullah> anybody know of a good cross-platform module for measuring system cpu/memory/network usage?
04:30 < jesusabdullah> or modules
04:33 < faceleg|work> passcod: get back to work. The mines won't dig themselves
04:42 < ChrisPartridge> jesusabdullah: not sure about network, but for CPU/mem you could use the OS module
04:45 < jesusabdullah> ChrisPartridge: that's for node not the entire system
04:46 < jesusabdullah> ChrisPartridge: I could read files in /proc but that's not x-platform
04:46 < jesusabdullah> ChrisPartridge: I can use node-sigar but that depends on legacy node-waf support
04:46 < jesusabdullah> ChrisPartridge: but thanks for the suggestion
04:49 < emostar> Hello, I was wondering if anyone could give me some insights on garbage collection.
04:50 < emostar> I haven't upgraded to 0.10 yet, so I disabled the idle notifier that does the full GCs, but have noticed my servers CPU usage spikes up a lot
04:50 < emostar> I have a graph of the incremental GCs run per minute, and it is almost the exact same as my CPU usage graph
04:50 < emostar> Incremental GCs: http://cl.ly/image/210P1U112I19
04:50 < emostar> CPU Usage: http://cl.ly/image/1O0I3o0I3G3s
04:51 < Zak> do you know what else is happening during those times?
04:52 < emostar> Zak: not much else on the server, it was pretty idle today
04:52 < emostar> even the incremental GC is constantly running... even when I have just a few requests per minute
04:53 < Zak> what version of node are you running?
04:54 < emostar> 0.8.22.. going to upgrade to 0.10.3 soon
04:54 < Zak> if you're going to upgrade, i would probably just wait and see what happens
04:54 < Zak> i don't know if there have or haven't been changes specifically to the GC but there have been a fair amount of changes in general from 0.8->0.10
04:54 < emostar> I know the v8 version has been updated, but i don't expect much of a change
04:55 < Zak> its very likely that you'll get different behaviour
04:55 < Zak> yeah, i would just wait and see
04:55 < emostar> I guess I'll find out when I upgrade... just wanted to get a dependency improved
04:55 < emostar> But when the CPU gets high, it makes the site a bit slower
04:55 < Zak> yeah understandable
04:56 < emostar> I got alerts setup, so I can manually restart the process to "fix" it, but that gets old :)
04:56 < Zak> 2 things i would suggest
04:56 < tjfontaine> I think some of the early benchmark marks show more time in the gc on 0.10, as streams2 shifts more of that work in to the js land, I don't have any of that data available at present
04:56 < jesusabdullah> uuuugh sigar is it >_< totally lame
04:56 < Zak> performance testing (artifically load up a server)
04:56 < ningu> emostar: is memory usage high as well or just cpu usage?
04:56 < Zak> and also, re-architect your infrastructure so you have multiple servers
04:56 < Zak> load-balancing/failsafes
04:57 < emostar> ningu: i don't consider it high... http://cl.ly/image/3F3G0z1z2G3f
04:57 < emostar> Zak: i have 2 servers behind an ELB already
04:57 < Zak> right
04:58 < Zak> do you have a staging environment where you can potentially do performance testing?
04:58 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:58 < jesusabdullah> okay, so maybe someone can point me to docs on converting wscripts to gyp files?
04:58 < emostar> it'd be best for me to just spin up a new server to test it out with i think
04:58 < emostar> staging is a t1.micro ;)
04:58 < jesusabdullah> or I guess I can just stop worrying and build the thing I want
04:59 < Zak> yeah, if you can afford that upon your users! :P
04:59 < jesusabdullah> and then worry about derployment moar laters
04:59 < tjfontaine> jesusabdullah: it's pretty straight forward unless there's magic happening, just checkout other modules that have binding.gyp's
04:59 < jesusabdullah> uuugh YOU PEOPLE
04:59 < jesusabdullah> "*I* know how to WRITE build scripts"
04:59 < ningu> emostar: have you googled any of this? I'm sure someone has tried to tune these things before. but in my (somewhat limited) experience it's a bit hard to predict how to tune that sort of thing for the general case.
04:59 < ChrisPartridge> jesusabdullah: there's a GYP file in the node-sigar repo
04:59 < ryanaz> One thing I've noticed is that node.js seems to be very vulnerable to "dying" …. if you hit a strange use case, it doesn't recover very well...
04:59 < AvianFlu> jesusabdullah: what needs converting
04:59 < emostar> Zak: so performance testing with 0.10 is your suggestion?
04:59 < ryanaz> how do you guys overcome that as a server? 
04:59 < ningu> ryanaz: domains
05:00 < tjfontaine> jesusabdullah: sorry we won't do the work for you
05:00 < jesusabdullah> ChrisPartridge: !!! now you're talking
05:00 < ryanaz> domains? 
05:00 < ningu> ryanaz: look it up
05:00 < jesusabdullah> ChrisPartridge: I don't think they've published in a long time even though, thing
05:00 < jesusabdullah> tjfontaine: chill bro I just wanted a blog post that treated me like I'm 5
05:00 < emostar> ningu: I have spent a lot of time on the google. that's how i was able to get the full gc to stop running so often
05:00 < jesusabdullah> AvianFlu: npm published version of node-sigar
05:00 < ryanaz> nice.
05:00 < emostar> but now the incremental gc has ramped up (naturally, but didn't expect this much)
05:00 < ryanaz> ningu: thank you!
05:00 < ryanaz> it says it's "unstable" 
05:01 < ningu> emostar: ah cool. well anyway I, for one, would be really interested if you end up doing a write-up on what you've learned. I don't deploy anything large scale so I lean heavily on people who do to get advice.
05:01 < ningu> ryanaz: yeah, that just means it's new and the API could conceivably change. what you really want to be careful of is "experimental", unstable should be fine :)
05:01 < emostar> ningu: i had a zero downtime deploy / zero downtime crash writeup in the queue already ;)
05:01 < ChrisPartridge> jesusabdullah: there's already two other sigar "forks" in npm, another probably wouldn't hurt.. 
05:01 < ryanaz> hah
05:01 < ryanaz> nice
05:01  * ChrisPartridge hides
05:02 < jesusabdullah> whaaaaa
05:02 < jesusabdullah> this is totally broken
05:02 < ningu> forked sigars... sounds unpleasant to smoke
05:02 < ningu> ryanaz: also, you should of course check errors whenever possible and do something sensible
05:03 < ningu> but you're right that best practice error handling in node can take some getting used to
05:04 < jesusabdullah> oy vey, does anybody know how to do git submodules off-hand?
05:04 < jesusabdullah> git submodule init --update ?
05:04 < jesusabdullah> something like that?
05:05 < passcod> git submodule init
05:05 < passcod> git submodule update
05:05 < jesusabdullah> update --init --recursive
05:05 < jesusabdullah> ahh
05:06 < readableAuthor> Trying to write a new stream API Readble class, which just generates digits, by readable.push()'ing digits when _read(size) is called, but this seems to leak memory. Any examples of a simple Readble class ?
05:08 < ryanaz> ningu: thanks for the tips….   obviously I do my best error catching, and I have mostly just found errors while developing and flushing them out… but in going through that process of watching the entire server DIE COMPLETELY when I am testing something it made me think, "Uh, that could be bad if 1 user does something stupid that I didn't check for and it just dies.." 
05:08 < ChrisPartridge> readableAuthor: there's a couple in the API docs
05:11 < readableAuthor> ChrisPartridge: yes, read the docs and examples, but the simplest implementation I can figure out: leask memory..
05:12 < emostar> ryanseddon: i use naught to keep the server up
05:12 < emostar> oops, ryanaz  guess he left though
05:14 < ningu> emostar: I use jesus
05:24 < emostar> ningu: never heard of it actually
05:26 < emostar> ningu: doesn't look like it supports zero downtime reboots
05:28 < ningu> emostar: reboot of the app you mean?
05:29 < emostar> ningu: yeah
05:29 < emostar> restart i guess is the word :D
05:30 < ningu> how does naught manage the zero downtime thing?
05:31 < emostar> ningu: it uses the cluster module
05:31 < ningu> hmm, ok
05:31 < ningu> so I suppose it won't work if I have one core
05:31 < emostar> it does
05:31 < ningu> eh? that seems tricky
05:31 < emostar> it starts up one new instance (server in this case), and after it confirms it is up it tells the other one to shutdown
05:32 < ningu> but what if they are listening on the same port? the new one won't be able to bind to it
05:32 < emostar> cluster manages it for you :)
05:32 < ningu> hrm, ok
05:32 < wookiehangover> it will also make you dinner
05:32 < emostar> i wrote an express module that allows you to exit the http server gracefully as well
05:32 < ningu> cool, what's that one?
05:32 < emostar> express-graceful-exit
05:33 < emostar> and i have one that works with crashes too, using domains
05:33 < ningu> I don't really need zero downtime so it isn't that big of a deal
05:33 < emostar> so if an error happens, you can gracefully exit the server, so other users aren't affected
05:33 < emostar> and when it is exiting, it tells naught that it will exit, so it can spin up a new server
05:36 < ningu> emostar: what do you use as a reverse proxy?
05:36 < emostar> ningu: just nodejs behind elb
05:36 < ningu> hmm
05:36 < ningu> ok
05:36 < emostar> it would work on a standalone server as well
05:37 < ningu> how about static file serving, gzip, etag etc.?
05:37 < emostar> just with the crashes, you gotta make sure the new server comes up ASAP... so it is not 100% foolproof
05:37 < emostar> CDN
05:37 < ningu> what would you do if you couldn't afford a CDN? :)
05:37 < emostar> i guess nginx is the way to go then
05:38 < ningu> I'm pondering nginx vs. haproxy vs. http-proxy etc.
05:38 < ningu> nginx is a bit easier to set up than haproxy
05:38 < ningu> but neither is difficult
05:39 < emostar> i've used nginx and haproxy, but not in front of a node server
05:40 < emostar> i think nginx is a pretty common one to use for that situation
05:40 < ningu> I can't really tell why I'd choose one over the other, seems relatively minimal
05:40 < ningu> the difference I mean
05:40 < ningu> unless there are special needs
05:41 < emostar> i used haproxy in front of a riak cluster.. never used it for a website
05:41 < emostar> nginx is fine for you i bet
05:41 < ningu> it seems pretty lightweight
05:41 < ningu> I looked into riak but never really understood why I'd use it over mongo
05:42 < emostar> yeah, it is :)
05:42 < ningu> actually I'm tending towards deciding against mongo in favor of sql
05:42 < emostar> if you want higher availability, riak is good
05:42 < emostar> but it comes at a cost of higher latency
05:43 < ningu> whereas what I want is transactions, integrity 
05:43 < emostar> there are cases where normal SQL still triumphs... if you need the db to ACID complaint
05:43 < ningu> speed is important but with my data it will be so small compared to what people are doing that it won't matter
05:43 < emostar> but nothing stops you from using a combination of the two ;)
05:43 < ningu> my mongodb database is currently like 9mb or something
05:43 < ningu> but the data is heavily interconnected
05:44 < emostar> but for certain web apps, transactions is pretty important
05:45 < ningu> "A 2009 article by Google engineers Arvind Jain and Jason Glasgow states that more than 99 person-years are wasted[citation needed] daily due to page load time increases when users do not receive compressed content."
05:46 < emostar> how much per person though?
05:47 < emostar> and let me tell you how many years of my life i wasted poopin
05:47 < emostar> :P
05:47 < ningu> hehe
05:47 < Zak> sounds like Google engineers need to get a life
05:49 < Lorentz> too late, sold their soul to google
05:52 < someprimetime> anyone using node-validator with json?
05:52 < someprimetime> instead of validating the normal form posts?
05:52 < ningu> someprimetime: I think I used it for a one-off
05:53 < someprimetime> ningu: seems to work fine with a normal form post as it grabs the params from req.body but if i pass in req.body.data as some json then it'll output each error object with the key of the content that i'm passing in
05:54 < ningu> huh?
05:54 < someprimetime> e.g. I pass in data[comment] within req.body.data and then req.assert(req.body.data.comment, 'Please enter a longer comment').len(2, 1000);
05:54 < someprimetime> then it'll output like this:{ aa: { param: 'aa',
05:54 < someprimetime>      msg: 'Please enter a longer comment',
05:54 < someprimetime>      value: undefined } }
05:54 < someprimetime> Sorry for the triple post
05:54 < ningu> and do you deserialize the json?
05:54 < ningu> I see
05:54 < ningu> sounds like a bug but I dunno
05:54 < someprimetime> yeah it's kinda crap
05:55 < someprimetime> any other good validators out there?
05:55 < ningu> good question
05:55 < someprimetime> this one assumes too much that I'm using req.body
05:55 < someprimetime> and POSTing instead of sending json ajaxily
05:55 < ningu> let me find the one I actually used
05:55 < someprimetime> oh cool thanks
05:55 < someprimetime> this is for my node/express app if it matters.
05:55 < ningu> ah, right
05:55 < ningu> express-form2
05:55 < ningu> it's a wrapper for something, can't remember what :)
05:56 < ningu> validator
05:56 < ningu> not sure if validator === node-validator
05:56 < ningu> anyway, I suspect it might be too rigid for your needs
05:57 < ningu> it has some nice features like auto-setting things if they're empty
05:57 < someprimetime> ah hm yeah i was using this: https://github.com/chriso/node-validator
05:59 < ChrisPartridge> someprimetime: why not create your own middleware for node-validator that uses req.body.data instead of req.body, or your own middleware that translate req.body.data to req.body
05:59 < someprimetime> ChrisPartridge: yeah i'm about to do that actually
05:59 < someprimetime> just wondering if anything else existed before i reinvented the wheel
06:07 < ningu> so I'm doing an http request with mikeal's request library and I want to be able to ask for gzipped content encoding to reduce the size of the request. that seems to be working fine and the server returns a gzipped response body. but now I can't figure out how to decompress it.
06:07 < ningu> I'm sending it to zlib.gunzip but getting an error.
06:08 < ningu> it's also saying transfer-encoding: chunked
06:08 < MerlinDMC> ningu, tried zlib.inflate?
06:09 < ningu> MerlinDMC: I specifically asked for gzip, not deflate
06:10 < ningu> I need to de-chunk it apparently :)
06:12 < ChrisPartridge> i de-chunked after a *few* drinks once
06:13 <@mbalho> stomach.pipe(concrete)
06:13 <@mbalho> thats a pretty good visual metaphor actually
06:13 < ChrisPartridge> haha
06:14 < ningu> hrm... apparently node's http stuff automatically handles this
06:15 <@mbalho> ningu: code helps when asking questions like your current one
06:15 < ningu> ok one sec
06:15 < ningu> http://hastebin.com/xohopinima.coffee
06:16 < passcod> >> $[""+__+__]+$[_]+$[_+""+__]+$[""+_+_]+$[""+__+(__*__)]+$[""+_+_]+"g";
06:16 < purr> passcod: ReferenceError: $ is not defined
06:17 < ningu> in the zlib.unzip callback (I had it set to zlib.gunzip actually, that's what it should be) I get the error: [Error: incorrect header check] errno: -3, code: 'Z_DATA_ERROR'
06:17 <@mbalho> ningu: zlib.gunzip
06:17 < ningu> mbalho: yeah, I was just fooling around seeing what might work. gunzip is the same
06:17 <@mbalho> ah
06:17 < ChrisPartridge> ningu: you can pass json:true btw, instead of writing out that header
06:18 < ningu> ChrisPartridge: not for gzipped response data
06:18 < ningu> it will try to parse it as json before it's decompressed
06:20 < ChrisPartridge> continue :)
06:20 < ningu> I'm a bit at a loss how to debug this
06:20 < ningu> maybe I'll write the response to a file and look at the headers
06:22 < Voting> I'm really liking the async package that one of  you folks turned me onto! Thanks!!! Question: I'm getting too much socket.io debug output and I'm not succeeding in doing what is suggested here: 
06:22 < Voting> http://stackoverflow.com/questions/6807775/socket-io-remove-debug-mode
06:23 < Voting> What should I do? 
06:23 < Voting> (Back from the shower soon... Thanks!)
06:23 <@mbalho> Voting: ahh yea socket.io is notoriously loud
06:23 < Voting> mbalho: lol
06:23 < Voting> And I love socket.io
06:24 <@mbalho> Voting: you should open an issue and complain about them disrespecting the 'unix rule of silence'
06:24 <@mbalho> :D
06:24 < Voting> mbalho: lol
06:24 < Voting> unix is pretty quiet in lots of ways...
06:24 <@mbalho> http://www.linfo.org/rule_of_silence.html
06:24 < Voting> suggestions on less debug output for s.io?
06:25 < jastin> hello
06:25 < jastin> All
06:26 < jastin> i want help regarding node.js
06:28 < ningu> jastin: so aks
06:28 < ningu> ask, even
06:28 < ningu> or aks
06:29 < jastin> Its Possible node.js and communicate with hyperterminal ?
06:29 < jastin> ningu i search on web but no answer i found..
06:36 < ningu> jastin: I don't know what a hyperterminal is
06:42 < d_d_d> guys, how can i set a asset pipeline with grunt and express.js?
06:42 < jastin> ningu plz google about hyperterminal
06:42 < deoxxa> jastin: how do you want it to work?
06:42 < jastin> <ningu> google about hyperterminal
06:44 < deoxxa> jastin: yes, i know what hyperterminal does, but how do you want it to work?
06:44 < deoxxa> jastin: do you just mean a telnet server?
06:48 < ningu> btw I think I solved my gzip issue...
06:48 < ningu>     if (res.headers['content-encoding'] === 'gzip')
06:48 < ningu>       res = res.pipe(zlib.createGunzip());      
06:48 < ningu> that seems to work. then just listen on 'data'
06:56 < luminous> hello! trying ti ``npm install zmq`` fails miserably: http://dpaste.de/e7LGF/
06:56 < luminous> that am I missing?
06:57 < passcod> >> $=+{}+""+!+[]+{}+![];_=-~+[];__=_+_;$[""+__+__]+$[_]+$[_+""+__]+$[""+_+_]+$[""+__+(__*__)]+$[""+_+_]+"g|work";
06:57 < purr> passcod: (string) 'faceleg|work'
06:58 < ChrisPartridge> passcod: amazing work :p
06:59 < luminous> passcod: yea, that is impressive
06:59 < passcod> Nah, I couldn't get the 'g'. Really disappointed
06:59 < luminous> hah
07:00 < passcod> if I could just figure out a way to call functions… or even just to get to the global object without using alphanumerics…
07:01 < luminous> ...if I could just get zmq installed
07:01 < ChrisPartridge> luminous: it's using waf for a start.. perhaps get them to update the package to use gyp
07:01 < luminous> oh, so it's REALLY broken..
07:02 < luminous> ChrisPartridge: sorry, I know nearly nil about packaging in node/npm, is there a way to work around this as a user?
07:02 < ChrisPartridge> luminous: is that just `npm install zmq` - because when doing that here, it tries to use gyp
07:02 < luminous> ChrisPartridge: yep, on ubuntu 12.04
07:03 < booyaa> jesusabdullah: re: system resource monitoring - what you trying to do?
07:03 < ChrisPartridge> luminous: inside a project? possibly with a package.json specifying a specific version?
07:04 < luminous> ChrisPartridge: nope, I mkdir ~/node; npm install socket.io; npm install zmq; FAIL
07:04 < luminous> or, rather..
07:04 < luminous> mkdir then cd
07:05 < ChrisPartridge> i'll spin up a ubuntu 12.04 vm and take a look, definately shouldn't be using waf
07:05 < jesusabdullah> booyaa: benchmarking experiment
07:05 < luminous> ChrisPartridge: what are you running on that worked?
07:05 < ChrisPartridge> luminous: i don't have zmq installed, but i ran it initially on windows
07:06 < ChrisPartridge> and it just complained about zmq not being present
07:06 < luminous> interesting..
07:07 < SomeoneWeird> uses gyp for me
07:07 < SomeoneWeird> deb sid
07:07 < booyaa> jesusabdullah: did i see you wanted more than ops/sec? i think you mentioned /proc
07:07 < jesusabdullah> one sec booyaa 
07:08 < jesusabdullah> booyaa: https://gist.github.com/jesusabdullah/5343593
07:08 < jesusabdullah> booyaa: I just beat it in with a hammer (make)
07:08 < luminous> ChrisPartridge: thanks for taking a look
07:09 < ChrisPartridge> luminous: what version of node?
07:12 < booyaa> jesusabdullah: ah
07:13 < luminous> ChrisPartridge:  node -v v0.6.12 npm -v 1.1.4 System Linux 3.2.0-24-virtual libzmq.so.3 (libc6,x86-64) => /usr/local/lib/libzmq.so.3 libzmq.so.1 (libc6,x86-64) => /usr/lib/libzmq.so.1 libzmq.so (libc6,x86-64) => /usr/local/lib/libzmq.so libzmq.so (libc6,x86-64) => /usr/lib/libzmq.so
07:13 < luminous> installed through apt on ubuntu 12.04
07:13 < luminous> ChrisPartridge: ^^
07:15 < ChrisPartridge> luminous: get a later node version
07:15 < ChrisPartridge> luminous: https://gist.github.com/anonymous/5343624 < -- worked fine
07:15 < syskk> wheres a good place to find a telecommute node.js job? 
07:16 < ChrisPartridge> luminous: if you want to use apt, use the apt ppa provided by chris someone
07:16 < ChrisPartridge> ningu: who's the guy that has the node ppa?
07:17 < ChrisPartridge> nvm, found it
07:17 < ChrisPartridge> luminous: https://launchpad.net/~chris-lea/+archive/node.js/
07:26 < luminous> ChrisPartridge: thanks!
07:46 < ChrisPartridge> luminous: yw
08:04 < sth> Hi guys, has anyone managed to create a portable nodejs install?
08:05 < konobi> depends what you mean by portable
08:05 < sth> I want to be able to compile node on one linux box, tar it and then copy it to another machine
08:05 -!- mode/#Node.js [+o konobi] by ChanServ
08:06 <@konobi> should work
08:09 < monokrome> Does anyone know how I can override the "require" function?
08:10 <@Nexxy> monokrome, you don't
08:10 < monokrome> Nexxy: I need to
08:10 <@Nexxy> chances are; you don't
08:11 <@Nexxy> function require() { // ... }
08:11 <@konobi> deep magic lies within
08:11 < monokrome> Nexxy: I'm writing a test which I need to temporarily stub require() so that I can test that it's called from the function that I'm testing without really requiring anything
08:12 <@konobi> monokrome: mocked
08:12 < monokrome> konobi: Sorry, what do you mean?
08:12 <@konobi> name of a library
08:12 <@Nexxy> and the thing we're doing
08:12 < monokrome> Oh, I'm using SinonJS
08:12 <@Nexxy> quietly
08:13 < monokrome> mockery
08:13 < monokrome> ?
08:13 <@konobi> monokrome: and what you want to do is available uing that library
08:13 < monokrome> alright
08:13 < monokrome> Thanks :)
08:24 < AshyIsMe> nodemanual.org and nodebits.org seem to be down
08:24 < AshyIsMe> are they dead?
08:45 <@Nexxy> mbalho, http://cat-bounce.com/
08:48 < floby> hello
08:48 < floby> does anybody know what the equivalent of this.push(0) is when working in objectMode ?
08:50 < kanongil> floby: what do you use this.push(0) for?
08:50 < floby> You're right
08:50 < floby> I meant oush('')
08:50 < floby> push*
08:50 < kanongil> ah, then there is no equivalent
08:51 < floby> lol ok, how do i make streams work then ?
08:51 < floby> I need needMoreData to get called in readable streams
08:52 < floby> no wait
08:52 < kanongil> doesn't this.read(0) work?
08:52 < floby> nope
08:52 < floby> my streams never reaches its end
08:53 < floby> I have an empty readable stream in objectMode
08:53 < floby> when end is called  i call read(0)
08:53 < floby> but _read doesn't get called after that
08:53 < floby> unless I push('') in _read if there's nothing to read
08:54 < kanongil> if you wan't an object-mode stream equivalent to push(''), you can get it by doing: this._readableState.reading = false;
08:54 < floby> but then the stream is filled with empty strings because it's in objectMode
08:54 < floby> thanks
08:54 < floby> that's what I thought from reading the code
08:54 < floby> but wasn't sure
08:54 < kanongil> though its not really kosher
08:54 < floby> yeah
08:54 < floby> definitely not
08:54 < floby> but hey
08:54 < floby> let's see if it works
08:55 < floby> nope
08:56 < kanongil> really? i must have missed something then
08:57 < floby> well
08:57 < floby> I have my first test working now
08:57 < floby> I wasn't pushing null
08:57 < floby> at the right time
08:57 < floby> let's see my second test :D
09:55 < floby> alright
09:55 < floby> objectMode streams are working now
09:55 < floby> except
09:55 < floby> when calling stream.write(0) in objectMode
10:03 < meckanism> 
10:37 < Vill> Hello, could I ask for help, I'm using Socket.io and my sockets which are not connecting on LOCALHOST are disconnecting after approx 30 seconds, and the page needs to be reloaded to get new socket, it's really frustrating, because after page loads, it takes like 10 seconds to connect socket, so actually, the whole period of time when the connection is established is pretty short
10:43 < MI6> joyent/node: Felix Geisendörfer master * a2fd657 : docs: uncaughtException is here to stay  Brings docs in line with decisio - http://git.io/p5ZqPQ
10:45 < radiodario> Vill: you should make a jsfiddle / gist with your client and server code
10:46 < radiodario> a million things could be wrong
10:46 < Vill> radiodario, how about live version?
10:51 < radiodario> i can't see your server code on your live version
10:52 < radiodario> unless you give me ssh access which is always a bad idea on the internets
10:57 < Vill> true, true
11:36 < frankg> why no working:  /^.*?(?:good)/.exec("every good boy\ndoes fine")    # result: "every good"      I don't wan't good 
11:49 <@isaacbw> frankg: what do you think (?:x) does
11:50 <@isaacbw> you probably want (?!x)
11:50 <@isaacbw> https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Regular_Expressions
11:53 <@isaacbw> google finally got rid of a lot of the crap in the app store
11:55 < substack> can fs.read() take a relative positional offset?
11:56 < substack> it'd be nice if I didn't have to stat this file first
11:56 < substack> and there's no fs.seek()
12:27 <@isaacbw> does anyone have experience with apache shiro?
12:30 <@isaacbw> instead of sleepwalking I've started sleep internet-shopping
12:56 <@isaacbw> is anyone out there
12:57 <@isaacbw> echo...
12:59 < zaleb> ping?
13:03 <@isaacbw> pong :D
13:09 < roxlu> hi guys, what module is recommended for a http server when I also want to server static content ? 
13:09 < Vill> ExpressJS
13:09 < joshleaves> express.static
13:09 < roxlu> thanks :  
13:09 < NuZZ> i vote for lactate
13:09 < NuZZ> tis fast
13:09 < Vill> hello guys, do you maybe know why Socket.io manages to disconnect my sockets after exactly 30 seconds?
13:09 < radiodario> oh man lactate is nice
13:10 < NuZZ> vill, probably because you cant make websocket connections 
13:10 < NuZZ> or any for that matter
13:10 < NuZZ> check the console in firebug or something, in the net tab
13:10 < Vill> how to enable that?
13:10 < NuZZ> watch it try to change protocol then die
13:11 < NuZZ> i may be wrong. check in chrome/firefox firebug
13:13 < Vill> Nuzz, thank you for your advice, I'm using both, firebug and google inspector, but when I use STANDARD configuration, from SocketIO example, I track all events, connecting, disconnecting reconnecting and I send custom event every 5 seconds to the server from client
13:14 < Vill> in second 1, Client connects to server, server receives event and emits, that connecting was successful
13:14 < Vill> then client "pings" every 5 seconds
13:14 < NuZZ> enable log: true when you start socket.io on the server
13:14 < NuZZ> it should echo everything that happens
13:15 < Vill> yes, but it won't echo what client is receiving
13:15 < Vill> that's why I'm emitting those events
13:15 < Vill> I'm using two ways of logging: server side, and client side
13:16 < NuZZ> so. it just explodes after 30sec?
13:16 < Vill> yes, after 30 secs, it disconnects socket
13:16 < NuZZ> i suggest you backtrack your code
13:16 < radiodario> are you in some sort of weird network?
13:16 < NuZZ> till its as minimal as possible
13:17 < NuZZ> yeah, or that. things get super awkward when you try to serve socketio over a custom proxy
13:17 < NuZZ> i mean, if your app isnt root on the network and is being proxy rewritten blah blah
13:18 < Vill> Nuzz, radiodario, i will test this theory, please bare with me 15 seconds
13:18 < radiodario> it's way to cold outside to bare right now
13:18 < radiodario> plus my boss would fire me
13:18 < radiodario> hehehe
13:18 < NuZZ> yeah, backtrack, untill any code that could screw it up is out of the picture, then add stuff till it screws up again
13:18 < NuZZ> aw u
13:18 < radiodario> otherwise, post a jsfiddle and we can put a couple more pairs of eyes on it.
13:18 < roxlu> does express also have a template parser?
13:19 < NuZZ> yes rox it's called jade
13:19 < roxlu> ah thanks! 
13:19 < radiodario> roxlu: are you the openframeworks dude?
13:19 < roxlu> yep
13:19 < NuZZ> and i think express has something to use most templating engines if they conform to apis supported by some module
13:19 <@isaacbw> heh
13:19 <@isaacbw> jade
13:19 < roxlu> radiodario: also a node.js dude now : ) 
13:20 < radiodario> sweet
13:20 < NuZZ> i havent looked at express in ages, i may be wrong, lol
13:20 < djs> it's called consolidate,js
13:20 < roxlu> radiodario: have we met?
13:20 < NuZZ> ^ djs is right
13:20 <@isaacbw> no, it's the thing people use with express
13:20 <@isaacbw> but I still don't get why 
13:20 <@isaacbw> I like html :(
13:20 < NuZZ> i like ect
13:20 < radiodario> no, but i was like hey that username reminds me of something
13:20 < Vill> Nuzz, radiodario, oh, wow, You were both right, it's because I was using proxy, they break websockets after 30 seconds...
13:21 < NuZZ> yep
13:21 < roxlu> haha ok
13:21 < `3rdEden> Here are some decent proxies; https://github.com/observing/balancerbattle which i've hammering on Vill
13:21 < NuZZ> i literally spent 7 hours a few days ago managing a nginx proxy rewrite for a non-root socketio app
13:21 < NuZZ> all my wat
13:23 < Vill> thank you `3rdEden, but I'm afraid it won't work for me, I'm behind NAT, and the NAT guys don't know how to properly set port forwarding...
13:23 <@isaacbw> hah
13:23 < `3rdEden> ah
13:24 < NuZZ> sounds icky
13:25 < djs> wonder if someone could impart some advice...i have just written an Node IDE built on top of node/express/bootstrap/socket.io/backbone and the ACE editor....
13:25 < NuZZ> and ide eh
13:25 < waqas-> awesome djs can i see?
13:25 < NuZZ> an*
13:25 < NuZZ> yeah id like to see
13:25 < djs> i havezero open source experience though
13:26 < NuZZ> tbh, when i think about a sublime-text ish IDE instead in node, it makes me grin. imagine those modules/addons
13:27 < NuZZ> djs, throw it up on github?
13:27 < NuZZ> assuming windows, they have a babbys-first-github app that would make it easy to do so
13:27 < _DomY-Dom> You guyes may have no idea but -> http://sprunge.us/XSdV
13:28 < waqas-> yeah the windows github app is supereasy
13:28 < radiodario> roxlu: what do you think of plask?
13:28 < _DomY-Dom> This is the output of brew link node after installing node.js through brew (it usually works) just this time I seem to have a previous version of nodejs conflicting
13:29 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:39 < djs> http://37.153.96.162:2424/?path=/root/noide - as you can see it has standard left hand file explorere,console to the bottom, editor in the main content area. It has run/debugging options as well. If anyone is interested or wants any more info please let me know. Many thanks
13:40 < roxlu> radiodario: I haven't used it that much but it looks great for sketching things
13:40 < roxlu> personally I would't use it for real time installations which need high performance
13:42 < radiodario> yep C++ or bust
13:43 < NuZZ> interesting djs
13:43 < NuZZ> id imagine it would be massivly faster if it was hosted locally
13:44 < djs> yes it is much quick (the installation I linked to is on a 512 joyent smartmachine)
13:47 < NuZZ> only problem I would have is that it's confined to browsers, which is inheritly awkward
13:47 < standoo> djs: where's the demo?
13:48 < djs> agreed
13:49 < djs> standoo: http://37.153.96.162:2424/?path=/root/noide
13:51 < djs> the reason for writing it was two fold. firstly i wanted a little something to learn backbone with and also i find myself switching between console/text editor and browser a lot when working on node projects and I wanted something to bring some of thise element together
13:52 < ernm> Hello. Enyone got some time for a couple of noob questions?
13:52 < radiodario> you're better off just asking
13:52 < icebox> Don't ask to ask. :)
13:54 < djs> you may not have noticed from the link but the IDE supports debugging and and console tracing in a split pane style see screen shot: http://newsline.co/capture.png
13:54 < ernm> ok, noob at irc as well :). I wonder where and how I reference a third party library such as knockout.js that is installed through the package.json file in an express application?
13:55 < NuZZ> require('module_name_here') ?
13:55 < radiodario> ernm: read this http://nodejs.org/api/modules.html
13:56 < NuZZ> yeah. essentially if something has already been "required", you can require it again from then on anywhere else. then on that api page it will show you how it actually looks for modules if not already required
13:56 < mtsr> I think he probably means client libraries, right?
13:56 < ernm> NuZZ: That is for server side libraries right? 
13:56 < NuZZ> yeah, did u mean client?
13:56 < ernm> exactly. Client side.
13:57 < standoo> djs: it looks very interesting
13:57 < mtsr> package.json doesn't work very well for client libraries. Look at Bower
13:57 < standoo> djs: might be useful in my current project
13:57 < djs> thanks standoo
13:57 < mtsr> bower + express.static('/3p/', components) could work, for example
13:57 < standoo> djs: pm?
13:57 < djs> you are welcome to use it
13:58 < djs> what does that mean?
13:58 < standoo> djs: i look forward to you to continue developing it
13:58 < ernm> Ok. I'' take a look at Bower. Otherwise I'll dump the clientside stuff in public/javascripts or reference from the original soruces?
13:58 < standoo> djs: pm = private message
13:59 < djs> ah right, of course. how do we do that. sorry
13:59 < mtsr> you can do symbolic links as well, if you really want to, but meh
13:59 < mtsr> personally I use public/3p right now and am considering moving to bower
13:59 < ernm> mtsr: A quick look at bower. This look good. I have some options now. Thanks.
14:00 < radiodario> ernm: you might want to look at yeoman + bower + grunt
14:00 < marshall> hey node
14:00 < mtsr> radiodario, ernm: yeah if you're doing bower anyway, might as well look at yeoman and grunt
14:01 < mtsr> especially grunt
14:01 < radiodario> grunt its liek omg my life so easy now.
14:01 < mtsr> yeoman idk, depends on if you're just getting started and if they're offering any generators that match your needs
14:01 < ernm> I'll have a look. 
14:01 < radiodario> you could alway use ruby
14:01  * radiodario hides under a table
14:02 < marshall> I have a class that inherits from EventEmitter, and although I've only attached one listener to a particular event, there are two listeners for the event. Why might this happen? What's the correct way to subclass EE?
14:02 < ernm> yeoman is some kind of generator library a la ruby?
14:02 < radiodario> yep
14:03 < NuZZ> marshall, you mean when you emitter.on('event', fn), fn gets called twice?
14:03 < ernm> feels wierd, but I'll check it out. 
14:07 < ernm> Now I get it. scaffolding. I was thinking about generators as in "python generators"...
14:08 < marshall> NuZZ: yes
14:08 < drudge> Are there any front-end devs looking for some freelance work?
14:09 < radiodario> drudge: always
14:09 < NuZZ> what kinda work?
14:09 < drudge> some html/css and js integration
14:10 < radiodario> sounds easy enough
14:10 < drudge> radiodario: mind if i pm?
14:11 < NuZZ> marshall, you sure you're positive you're not listening twice, ie. not using cluster module or anything?
14:12 < marshall> NuZZ: i
14:12 < radiodario> sure thing
14:12 < marshall> NuZZ: I'm not using cluster, i'm subclassing event emitter for my base class, which gets subclassed a bunch of times before i get to the class that I'm actually attaching the listener too
14:13 < NuZZ> mm, I don't know...
14:15 < mtsr> marshall: Can you put the code on gists.github.com or pastebin or something?
14:15 < mtsr> The inheriting from event emitter that is
14:15 < marshall> mtsr: yeah, I'll paste something
14:15 < NuZZ> also, console.log emitter.__events
14:16 < NuZZ> is it one or 2 underscore :p?
14:16 < ElectricMaxxx> With subclassing you mean util.inherits()?
14:20 < marshall> ElectricMaxxx: no, plain old subclassing. I've been reading that util.inherits is the way node does it, but why is it different from the normal A.prototype = new B()?
14:20 < mtsr> depends on if you set up your constructor correctly etc
14:20 < mtsr> also new B() is not the right way to do it
14:20 < mtsr> I think you have some stuff with {} etc
14:21 < ElectricMaxxx> I know
14:21 < mtsr> look at backbone's extend, that's awesome for inheritance
14:21 < mtsr> personally I had issues with util.inherits though
14:21 < NuZZ> ^ ditto
14:21 < NuZZ> i personally just handle emitters like so
14:21 < ElectricMaxxx> Me too. ;-)
14:21 < NuZZ> web.emitter = new events.Emitter()
14:21 < NuZZ> web.on () ->
14:22 < NuZZ> web.emit () ->
14:22 < NuZZ> which just calleds web.emitter via this
14:22 < mtsr> I just have a file called Base like this https://gist.github.com/mtsr/5346013
14:22 < mtsr> and everything I want to subclass starts with Base.extend({})
14:22 < ElectricMaxxx> Is there a Chance to do this subclassing, when i load modules in my bootstrap?
14:23 < mtsr> NuZZ, that's actually a good idea
14:23 < ElectricMaxxx> Does node chaches this Things too? 
14:23 < marshall> mtsr: what's wrong with new B()?
14:23 < ElectricMaxxx> When i require it again?
14:23 < mtsr> node just caches the results of require() calls
14:24 < mtsr> so if you do the same require call you get the cached result
14:24 < mtsr> that also means that if you module.exports = new Object() in a module, every require call will get the same instance
14:25 < mtsr> marshall, I forgot the exact argument, but basically you're calling the constructor for B when making the prototype for A instead of when instantiating A
14:25 < ElectricMaxxx> So i have to Build a Container with references? Only if i want These prepared Objekts? 
14:25 < ningu> Object.create(B)
14:26 < NuZZ> to have every require call get the same you can just return what you want when the constructer gets called
14:26 < marshall> mtsr: yeah, it's silly, but that's the way javascript wants it, isn't it?
14:26 < mtsr> ningu, exactly
14:27 < mtsr> marshall, depends, but if you do stuff in your constructor that will act strange
14:27 < mtsr> marshall, you also lose the ability to add arguments to the constructor for B
14:28 < mtsr> although apparently the Backbone extend code does it as well
14:29 < mtsr> http://stackoverflow.com/questions/7533473/javascript-inheritance-when-constructor-has-arguments
14:29 < marshall> ningu: why use Object.create?
14:30 < mtsr> marshall, read that stackoverflow link for an explanation
14:30 < ningu> because it just copies from the prototype instead of calling the constructor
14:34 < NuZZ> i personally sitll havent found a use for needing to new() stuff. 
14:34 < NuZZ> but i suppose thats because I dont rely on context
14:35 <@isaacbw> new is so much prettier
14:35 < NuZZ> no nvm i know of use cases, im just crazy
14:36 < bermo> What does the nodejs crypto module pad keys with?
14:37 < bermo> When enciphering something with AES-256-CBC, crypto accepts keys less than 256 bits long.
14:40 < euoia> bermo: the docs aren't clear - the implication is that some form of PKCS is used. But it's possible to disable the auto padding.
14:41 < bermo> I stumbled across a stack overflow answer, that says node passes the password along to openssl's EVP_BytesToKey
14:41 < bermo> Which hashes it "a few times" with md5, to generated a key of the proper length.
14:41 < bermo> generate*. I'll see what I can find.
14:42 < marshall> ok, so so so what about inheriting from multiple things?
14:43 < marshall> is bad idea to try in javascript, yes?
14:43 < NuZZ> id say its a bad idea if it doesnt work or becomes too complicated
14:43 <@isaacbw> seems kinda silly
14:43 <@isaacbw> you might as well be using scala
14:45 < marshall> i feel u guys
14:45 < marshall> ok, so is there a mixin pattern that doesn't ruin memory?
14:46 < marshall> say I have an object class that inherits from another class, and I want to include a bunch of methods from another object
14:46 < marshall> should I just make a function that accepts the constructor and extends if with a bunch of methods?
14:47 <@isaacbw> then you're probably a crazy person
14:47 < marshall> no doubt about that
14:47 < NuZZ> i remember dabling with that stuff
14:47 < NuZZ> i ended up just abandoning ship
14:48 <@isaacbw> you could write a simple mixin function though
14:48 <@isaacbw> that would merge prototypes
14:49 < marshall> but that would be all messed up, ya?
14:49 < euoia> this.prototype = _.extend(this.prototype, that.prototype);
14:49 < euoia> ?
14:50 <@isaacbw> I would probably make it look more like extend(this, that)
14:50 < marshall> but wouldn't that mess up the this.constructor?
14:51 <@isaacbw> I was thinking this would be the constructor
14:53 <@isaacbw> but you'd have to be a crazy person to want to do that
14:58 < pachet> just do the little extra work of setting up the prototype chain correctly :[
14:59 < Giusuppe> if you extend the prototype, the constructor isn't changed, only the prototype
14:59 <@isaacbw> pachet: but where's the magic in that
15:00 < jerry66> http://xgermanamateur.blogspot.com/2013/04/taylor-rain-hottest-anal-slut-in-world.html
15:04 < mtsr> Ok, jerry66, thanks for your wonderful contribution...
15:06 < kam187-rMBP> hey guys
15:07 < kam187-rMBP> does anyone use node + cluster + socket.io?  I want to know, if a client connects to a socket, does that worker then handle all messages until disconnect?
15:08 < kam187-rMBP> or could a different worker try to do it?  I don't need to share data between sockets (I do that between workers myself with a redis channel).  so do i really need redistore?
15:22 < NuZZ> socket doesnt bode well with cluster
15:22 < NuZZ> i just, personally, send a message to the master (where sockio is initiated), and have it emit from there
15:22 < NuZZ> ya know, process.send()
15:23 < NuZZ> you dont HAVE to redis
15:24 < NuZZ> like, an object that has the originating worker id, the arguments you want to emit, stuff like that. then on the other end u listen for it, emit.
15:24 < NuZZ> a lot of if cluster.isMaster feckery, etc.
15:27 < kam187-rMBP> hey NuZZ : yeah i'm having real issues with it
15:27 < ugarit> I'm running this command: sudo /usr/local/bin/npm install -g express, but getting this error! npm ERR! Error: SSL Error: CERT_UNTRUSTED on ubuntu 11.10, what am I doing wrong?
15:28 < kam187-rMBP> but is that necesary?  Since the worker will be passed a connection and the socket id, can't it just send data back?
15:29 < kam187-rMBP> i wonder if i could initialise a seperate socket process in every worker 
15:56 < kalturian> hey there node ninjas :)
15:57 < kalturian> Anybody on the channel can refer or explain how to create constants in included js file?
15:59 < pachet> kalturian: what does 'included' mean
15:59 < pachet> are you using it like a php dev would use it :[
16:01 < pachet> https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/const @ kalturian
16:01 < kalturian> pachet - I want to use like you're supposed to... but am not familiar enough, so was looking to learn :)
16:01 < kalturian> So here's the use-case: I'm writing a code library that interacts with the Kaltura API.
16:02 < kalturian> https://github.com/kaltura/KalturaServerCore/pull/2
16:02 < kalturian> And I have a constants file KalturaTypes.js
16:02 < kalturian> in it, all the constants are defined as follow:
16:03 < kalturian> module.exports.KalturaSessionType = function(){
16:03 < kalturian>   KalturaSessionType.USER = 0;
16:03 < kalturian>   KalturaSessionType.ADMIN = 2;
16:03 < kalturian> };
16:03 < kalturian> then, I'm trying to use it by
16:03 < kalturian> var ktypes = require('./node/KalturaTypes');
16:03 < kalturian> ktypes.KalturaSessionType.ADMIN
16:04 < pachet> module.exports.KalturaSessionType = { USER : 0, ADMIN : 2 };
16:05 < kalturian> I thought it'd be something like that. Wondering why node didn't throw any errors..
16:05 < kalturian> Thanks!
16:08 < kalturian> pachet - many thanks dude, problem solved, api client works! :)
16:09 < dukedave> Is there a good source of tutorials, which go beyond, "and this is how you hello world with a server"?
16:10 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:12 < s5fs> dukedave: i'm not certain, i actually make a living writing nothing but 'hello world' servers in various technologies.  *shrug* it's a living.
16:12 < dukedave> s5fs, ah, CTO? :)
16:13 < s5fs> dukedave: in all seriousness, the documentation for most of the popular modules is really handy stuff
16:13 <@isaacbw> on that note, I'm in the market for short to long term freelance work at the moment
16:13 < s5fs> isaacbw: may I PM?
16:13 <@isaacbw> sure!
16:15 < dukedave> s5fs, well, I fear I'm in the void between, 'hello world' and diving straight in to module docs :/
16:16 < s5fs> dukedave: how's your base javascript? i'm trying to determine where you are so I can provide effective suggestions :)
16:17 < dukedave> Well, if I may segue into the specific problem I have, I'm guessing it's because I fundamentally don't understand something: https://gist.github.com/dukedave/5338014
16:18 < dukedave> So, my base JS level is: I think that 'subscriptions' should be an object, and that an object is truthy, so the if should be true
16:19 < dukedave> s5fs, thanks, btw :)
16:20 < s5fs> dukedave: np, lemme take a peek at your gist
16:21 < dukedave> s5fs, thanks, I hope I've put all the important details in there, I'm also at a level when I don't know if what I'm pasting is relevant :)
16:22  * dukedave should probably get it on GitHub, before this 'playground project' grows any more
16:26 < s5fs> dukedave: so on line 12, you see the userDoc object and it has a populated subscription member, but when you check for the member on line 14, it fails?
16:27 < dukedave> s5fs, yep, specifically I have two docs, one has a subscription member and one does not
16:27 < dukedave> Yet neither seem to satisfy the if
16:28 < s5fs> strange
16:28 < dukedave> s5fs, I'm lying XD
16:28 < dukedave> Damn!
16:29 < dukedave> Okay so it's the forEach which isn't working
16:29 < dukedave> So it writes the <ul>, but I'm guessing Firefox strips it from the dom because it isn
16:29 < dukedave> 't closed.
16:30 < lacrymology> I have a little issue I don't know how to solve. I've got a list of objects, and I need to create another list of objects from it. The calls that turn one into the other are async, and I need to return the list of final objects
16:30 < s5fs> dukedave: haha!! well it sounds like you've got a path forward, so that's good
16:31 < lacrymology> I tried _.map but that doesn't work because of the async'ness of the functions, I just get a bunch of undefineds
16:32 < dukedave> s5fs, thanks, first language steps are always so awkward aren't they :)
16:33 < s5fs> dukedave: I tend to learn only through repeated failure
16:33 < s5fs> (well, and embarassement)
16:36 < CoverSlide> lacrymology: use a counter
16:37 < lacrymology> CoverSlide: really? there's not a more elegant solution for that?
16:37 < CoverSlide> lacrymology: or use the async module
16:37 < CoverSlide> lacrymology: but it probably uses a counter internally
16:37 < lacrymology> what's the async module?
16:37 < CoverSlide> npm install async
16:39 < lacrymology> ah, I got it
16:39 < lacrymology> underscore has an _.after function as well (that uses a counter XD)
16:39 < CoverSlide> https://github.com/caolan/async#map
17:36 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:36 <@isaacbw> this bitcoin stuff is ridiculous
17:37 <@isaacbw> it's like betting on a bad hand in poker and winning on the river carc
17:37 <@isaacbw> *card
17:37 < tjfontaine> welcome to free markets
17:40 <@isaacbw> I'm also bitter at missing out on the free money
17:42 < webdesserts> Bets on what USD:BCD ratio it will cap at?
17:42 < webdesserts> BTC*
17:42 < totallymike> I keep telling myself there's no point in buying bitcoin because *surely* it's capped out by now and then it doubles
17:43 < totallymike> Of course by any respect buying bitcoin is the Wrong Thing To Do; it just turns out that the result defies that logic.
17:43 < pachet> the harder they come
17:43 < pachet> etc
17:43 < totallymike> It's obviously a bubble; the problem is that there's no predicting when it will burst.
17:44 < totallymike> And shoot, it may never.  It could just hold at $200 and prices will catch up.
17:44 < pachet> all bubbles burst
17:44 < bradleymeck> anyone know if this slnode private repos thing is being upstreamed to npm or do we need to recreate it
17:48 < totallymike> I expect the bubble will burst.  BTC is just an interesting phenomenon because as a speculative market it's a bit weirder than some others have been.
17:50 < totallymike> I don't know from economics, though.
17:50  * totallymike is no HN pundit.
17:53 < RLa> i wonder if parallel digital currencies will raise
17:58 < totallymike> RLa: there are a number that are trying.
17:58 < totallymike> LiteCoin, for example.
17:58 < squeakytoy> could everyone just tell me, in one sentence, how their day has been? so i can get a recap
17:58 < totallymike> My dog pooped on my cable modem.
17:58 < kam187-rMBP> sucky, because socket.io leaks like crazy with redisstore, and its the only way to run cluster :/
17:59 < MobCat> I have a bottle of coke with actual sugar in it day is great
18:11 < stream7> Hi there, I'm looking for a way to integrate requirejs (client side) with an express app and I'm having trouble finding a way to handle the assets' build process (injecting md5-hashed asset path to node etc). Anyone here has any pointers?
18:21 < totallymike> stream7: I suggest you look at the DailyJS BackboneJS tutorial
18:21 < stream7> totallymike: thanks, I'll check it out
18:22 < totallymike> The first part deals with setting up a build environment that sounds similar to yours.  While it may not map perfectly, I suspect it may be a good jumping-off point.
18:24 < totallymike> Specifically it gets you set up with grunt, requirejs and it uses Connect to serve up the development environment.
18:24 < totallymike> You should be able to adapt that readily to a full-fledged Express app.
18:31 -!- mode/#Node.js [+o sblom] by ChanServ
18:33 <@sblom> What's a good example of a non-trivial open source node.js app/service to help someone understand idiomatic architecture/style?
18:34 <@isaacbw> it's hard to go bad with connect
18:35 <@isaacbw> *wrong
18:35 < RLa> connect itself is a framework?
18:35 < RLa> maybe npm-www?
18:36 <@isaacbw> oh I didn't read very carefully. You want a working app
18:36 <@sblom> isaacbw: Ideally an app. It's funny that every time I try to brainstorm this I come up with several good frameworks, but I usually strike out on apps.
18:37 < RLa> sblom, https://github.com/isaacs/npm-www
18:37 <@sblom> RLa: npm-www's a good idea.
18:38 < RLa> if you look for then maybe you find more relatively large open-source nodejs apps
18:40 < RLa> sblom, https://github.com/joyent/node/wiki/Projects,-Applications,-and-Companies-Using-Node#projects-on-github
18:42 < RLa> sblom, did not find it listed there, but also: https://github.com/ajaxorg/cloud9
18:43 < RLa> that's one of the apps where i have taken ideas from how to organize my own code better
18:51 <@mbalho> sblom: i think this is generally useful https://gist.github.com/maxogden/5147486
19:04 < CorbinDallas> anyone ever use the Bliss Templating System?  https://github.com/cstivers78/bliss/wiki
19:15 < T-Co> CorbinDallas, Take a look at Transparency: https://github.com/leonidas/transparency
19:16 < T-Co> And finally get rid of that ugly JSP-like templating ;)
19:17 <@isaacbw> or be cool and use angular
19:17 < T-Co> pfft
19:17 < T-Co> :)
19:18 <@isaacbw> if it had two way data binding it would be really awesome to have a lightweight "just-binding" alternative to angular
19:21 < sambarino> hello, if anybody is in a helpful mood... i'm trying to run a nodejs app in iis as a virtual directory and it was working ok-ish until i got to socket.io "Cannot GET /myappdir/socket.io"
19:22 < sambarino> and don't ask why i would be trying to do that :P
19:30 < mscdex> sambarino: Step 1. Remove IIS
19:30 < mscdex> ;-)
19:31 < sambarino> yes, of course :) lol, but in a hypothetical universe where i would not want to do that... :P
19:35 < CorbinDallas> T-Co: thanks.  I'm just familar with (and like) razor so it looked cool.  But I can't get it to compile my template.  Maybe I'm doing something wrong.
19:37 < CorbinDallas> I'm putting my index.js.html file in the same directory that I'm executing the node JS file I'm using as the HTTP server, I'm not sure how Bliss finds its templates.  Where do you think I should put the template files so it finds them?  It's not obvious, I'm a node noob.
19:37 < ThePrimeMedian> CorbinDallas: seriously? 5th Element or is that your real name?
19:38 < CorbinDallas> ThePrimeMedian: no, 5th element, it was that or Ruby Rhod :)
19:39 < ThePrimeMedian> CorbinDallas: nice!
19:43 < Cheery> I try to do a helper function into my C-module, to make simpler methods, but I find it difficult
19:43 < Cheery>         Display* display = AsDisplay(args.This());
19:43 < Cheery>     static inline Display* AsDisplay(Handle<Object>& object) {
19:44 < Cheery>         Display* display = ObjectWrap::Unwrap<Display>(object);
20:08 < kaen> is there a tool that will traverse my require() tree and concatenate the files intelligently?
20:08 < deoxxa> kaen: browserify
20:09 <@isaacbw> why do you want that though kaen 
20:09 < kaen> to run it in the browser
20:09 <@isaacbw> ah, then browserify is exactly what you need
20:09 < kaen> browserify looks like exactly what I want
20:10 <@isaacbw> does anyone here happen to be a member of 3rd ward?
20:15 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:15 < ericelliott> what is 3rd ward?
20:16 < ericelliott> (in other words, not me)
20:16 <@isaacbw> a coworking space in new york
20:16 < ericelliott> cool. =)
20:17 < ericelliott> I'm on the wrong coast for that, but we have lots of coworking spaces in the bay.
20:17 < ericelliott> sf bay area
20:18 <@isaacbw> hah, I bet :P
20:19 <@isaacbw> new york is just starting to figure its shit out tech-wise
20:24 < fedrer> I have question.
20:25 < fedrer> I just want print the size of a file on the console.
20:25 < fedrer> is there an easiest way to do it?
20:26 < deoxxa> fedrer: `wc -c <file>'
20:26 < Ralt> fedrer: http://nodejs.org/api/fs.html#fs_class_fs_stats
20:26 < fedrer> deoxxa: using fs
20:26 < fedrer> i know linux command wc
20:26 < Ralt> a `stats` object has the `size` property
20:26 < Ralt> which is, guess what, the size of the file.
20:28 < fedrer> so we have to open file using fs.stat
20:28 < fedrer> and give callback with  only one argument called stat?
20:28 < fedrer> deoxxa: what is wrong with following chunk
20:29 < fedrer> It says that stat object is not defined.
20:29 < fedrer> fs.stat("googbody",function(error,stats) {             console.log("file size : " + stats.size); 	});
20:29 < fedrer> from where to get THE stats object?
20:29 < fedrer> there is no starightforward way?
20:29 < bingomanatee> question: if you want to get a computer with optimal computational capacity for running node scripts, what factors should you ramp up?
20:30 < madhu> Hi
20:30 < madhu> Your version of node seems to be too old. Please upgrade to a more recent version of node (>= v0.6.0)
20:30 < madhu> please help me with the above error
20:30 < fedrer> deoxxa: ok, I get i think
20:30 < euoia> madhu: upgrade to a more recent version of node
20:30 <@isaacbw> hehe
20:30 < Ralt> fedrer: did you log the error?
20:31 < Ralt> you know, it's not for nothing if the error is passed in the callback
20:31 < madhu> i followed the instructions as below 
20:31 < madhu> sudo apt-get install python-software-properties
20:31 < madhu> sudo add-apt-repository ppa:chris-lea/node.js
20:31 < madhu> sudo apt-get update
20:31 < madhu> sudo apt-get install nodejs
20:31 < Ralt> it usually has to be handled
20:31 < Ralt> like, `if (err) throw err` at minimum
20:31 < deoxxa> fedrer: you're not checking for the error
20:31 < fedrer> ralt: if we don't use error object
20:31 < fedrer> ralt: if we don't use error object
20:31 < fedrer> both objects are undefined?
20:31 < Ralt> what?
20:32 < madhu> i am wrking on opa application and beginner in it...so when i compile opa hello.js with --... i am getting the error
20:33 < euoia> madhu: did those commands run successfully? What do you get when you run node -v?
20:33 < madhu>  nodejs -- version v0.10.3
20:33 < fedrer> Ralt: If I print the error object also, my code works fine
20:33 < euoia> madhu: you may need to do the symlink thing
20:34 < euoia> madhu: if someone is trying to run node using node instead of nodejs
20:34 < Ralt> fedrer: you're not making sense. Can you post code + output somewhere?
20:34 < euoia> madhu: The page here explains the naming conflict issue https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
20:34 < euoia> madhu: in the Ubuntu section
20:34 <@isaacbw> what you should do is
20:34 <@isaacbw> install archlinux
20:34 < madhu> euoia: yes
20:34 < Ralt> isaacbw: if you want to waste time, sure
20:34 < dypsilon> Hi everyone, is there a good standalone package for request + response abstraction? Similar to what express does, but standalone.
20:35 < euoia> madhu: so "node -v" returns the same thing?
20:35 < Ralt> dypsilon: what do you mean?
20:35 < madhu> euoia : yes
20:35 < TechnoCat> dypsilon: for browsers?
20:36 < euoia> madhu: and what exactly are you trying to run and how are you trying to run it?
20:36 < dypsilon> Ralt, I want those nice features for response objects, but don't want to depend on express.
20:36 < Ralt> dypsilon: you might be interested in flatiron's components https://github.com/flatiron
20:36 <@isaacbw> dypsilon: connect
20:36 < dypsilon> TechnoCat, nope for node
20:36 < TechnoCat> oh, i thought this was #javascript, ignore me
20:37 < Ralt> dypsilon: but yeah otherwise, express uses connect http://www.senchalabs.org/connect/
20:37 < dypsilon> I mean literally something like this: https://github.com/visionmedia/express/blob/master/lib/response.js but standalone
20:37 < madhu> euoia: if i do sudo apt-get install npm
20:37 < madhu> Reading package lists... Done
20:37 < madhu> Building dependency tree       
20:37 < madhu> Reading state information... Done
20:37 < madhu> Some packages could not be installed. This may mean that you have
20:37 < madhu> requested an impossible situation or if you are using the unstable
20:37 < madhu> distribution that some required packages have not yet been created
20:37 < madhu> or been moved out of Incoming.
20:37 < madhu> The following information may help to resolve the situation:
20:37 < madhu> The following packages have unmet dependencies:
20:37 < madhu>  npm : Depends: nodejs (>= 0.6.19~dfsg1-3) but it is not going to be installed
20:37 < madhu>        Depends: nodejs-dev
20:37 <@isaacbw> please use a pastebin site
20:37 < madhu>        Depends: node-node-uuid but it is not going to be installed
20:37 < madhu>        Depends: node-request but it is not going to be installed
20:37 < madhu>        Depends: node-mkdirp but it is not going to be installed
20:37 < madhu>        Depends: node-minimatch but it is not going to be installed
20:38 <@isaacbw> madhu, stop pasting that here
20:38 < madhu>        Depends: node-semver but it is not going to be installed
20:38 < madhu>        Depends: node-ini but it is not going to be installed
20:38 < madhu>        Depends: node-graceful-fs but it is not going to be installed
20:38 < madhu>        Depends: node-abbrev but it is not going to be installed
20:38 < madhu>        Depends: node-nopt but it is not going to be installed
20:38 < madhu>        Depends: node-fstream but it is not going to be installed
20:38 < euoia> oh dear
20:38 < madhu>        Depends: node-rimraf but it is not going to be installed
20:38 < madhu>        Depends: node-tar but it is not going to be installed
20:38 <@isaacbw> madhu...
20:38 < madhu>        Depends: node-which but it is not going to be installed
20:38 < madhu> E: Unable to correct problems, you have held broken packages.
20:38 < madhu> isaacbw : sorry 
20:38 < Ralt> dypsilon: I think we gave you enough information
20:38 <@isaacbw> dypsilon: why not just use that file
20:38 <@isaacbw> it's open source after all ;)
20:38 < dypsilon> Ralt, sorry, not really, neither connec nor flatiron have what I want.
20:39 <@isaacbw> it sounds like you know what you want
20:39 <@isaacbw> just piece stuff together
20:39 < madhu> euoia: wat i can do for that
20:39 < dypsilon> isaacbw, you mean, like, ripping it out of express?
20:39 < dypsilon> that sounds nasty
20:39 <@isaacbw> sure
20:39 <@isaacbw> nah
20:39 < TechnoCat> dypsilon: connect is a package express itself even uses
20:40 < madhu> euoia : please check this http://pastebin.com/sAM3pr1Z
20:41 < dypsilon> isaacbw, ok, thanks, I probably will do that
20:41 < TechnoCat> dypsilon: i've seen people recommend this before https://npmjs.org/package/request
20:41 < dypsilon> TechnoCat, I know, connect is not what I'm looking for
20:41 < dypsilon> TechnoCat, thanks, already looked at it, no response abstraction, though
20:41 < TechnoCat> alright. :)
20:42 < sambarino> ok i'm heading out but if i opened a q on stack overflow cause nothing else on there seems to deal with this scenario :) http://stackoverflow.com/q/15911998/1330042
20:42 < TechnoCat> flatiron looks pretty nice
20:43 < dypsilon> TechnoCat, yeah, flatiron rocks
20:43 < dypsilon> oh wait a minute, i know it will sound crazy: is it somehow possible to fetch only one file from github per npm as a package? (don't think even git can do that)
20:44 < euoia> madhu: not sure, but there are a few references to that error on google. Did the add-apt-repository command definitely work? The wiki mentions that Quantal users may need to install software-properties-common first
20:45 < madhu> euoia : ya i tried it also
20:45 < deoxxa> dypsilon: yes! kind of.
20:45 < madhu> euoia: now i am looking at this help 
20:45 < madhu> https://groups.google.com/forum/?fromgroups=#!topic/nodejs/QgdfsVQR4uo
20:45 < deoxxa> dypsilon: you can shove your package.json data into the js file itself iirc, but you'd have to hunt around the npm docs or ask isaacs about that
20:45 < TechnoCat> sambarino: i fought a lot with express and socket.io in alternative directories
20:45 -!- mode/#Node.js [+o sblom] by ChanServ
20:46 < TechnoCat> sambarino: i think i eventually got it to work by getting a patch from the express github issues page
20:46 < dypsilon> deoxxa, ah ok, thanks, won't work for me.
20:48 < sambarino> oh cool, thanks TechnoCat i will see what i can find there, i did feel as if it would require a patch to either express or socket.io cause i have trial and error for quite a long time now with every other non-patch "solution"
20:51 < TechnoCat> sambarino: i have this line in my code http://hastebin.com/digajuceca.js
20:51 < geoous> http://pastebin.com/rePTkeEY
20:51 < TechnoCat> that whitespace in the string is from copy paste from vim. :P
20:51 < geoous> whats wrong with that code?
20:52 < madhu> euoia: i tried symlink but file already exists
20:55 < mscdex> geoous: for starters, you're using a deprecated core module, 'sys'
20:55 -!- mode/#Node.js [+o TooTallNate] by ChanServ
20:56 < geoous> mscdex: I'm receiving this error : http://pastebin.com/7Gsg7uUu
20:56 < geoous> mscdex:  and no, I don't have anything running on that port
20:56 < mscdex> geoous: i think we've been through this before :-)
20:57 < mscdex> what is calling exports.index?
20:57 < mscdex> geoous: get rid of line 6 and 19
20:57 < euoia> madhu: I am not sure :<
20:58 < mscdex> geoous: i'm convinced you are starting a server on the same port for every 'index' request, which makes no sense
20:58 < M28> what's the difference between the events 'end' and 'close' in net.Socket?
20:58 < M28> does end always fire? does close always fire?
20:58 < mscdex> M28: end is emitted when the TCP FIN flag is received
20:59 < M28> does that always happen? I assume not... right?
20:59 < mscdex> M28: close is emitted when the TCP RST flag is received and the connection is no longer
20:59 < fedrer> guys
20:59 < mscdex> M28: not necessarily, 'close' will always be emitted
20:59 < M28> alright then
21:00 < M28> thanks man!
21:05 < fedrer> guys here is my very convoluted and broken
21:05 < fedrer> http://pastebin.com/rYRzAanx
21:06 < fedrer> console.log(chunk) //prints the entire html file
21:06 < bingomanatee> Does anyone have a recommendation as to which aspects of a computer system are best enhanced to increase node processing capacity - memory? HD speed? CPU?
21:06 < mscdex> everything!
21:07 < fedrer> is this a buffer size issue? or all the data is just smeared on the file?
21:07 < mscdex> except the dvd-rom drive speed
21:07 < fedrer> but fs.writeFile has only some weird chunk of that html
21:07 < mscdex> unless you're using that too :-D
21:08 < fedrer> guys??
21:08 < fedrer> http://pastebin.com/rYRzAanx
21:08 < M28> I'm getting an ECONNRESET error coming from net.js
21:09 < M28> and no way to know what part of my code is causing that
21:09 < fedrer> it is basically copy of http.get example from node docs
21:11 < mscdex> fedrer: you cannot assume the 'data' event is only emitted once
21:11 < mscdex> for the whole contents
21:12 < fedrer> mscdex: what does it mean? 
21:13 < mscdex> fedrer: you need to do something like this: https://gist.github.com/mscdex/912362ae88d67326bd3f
21:15 < fedrer> will it create a new file called "googhead" or just an in memory object?
21:17 < mscdex> fedrer: new file
21:17 < fedrer> mscdex: if you don't mind can u just explain, what was happening in case of my code
21:17 <@mbalho> Nexxy: i am stalking you
21:18 < mscdex> fedrer: the 'data' event is emitted when any size chunk of the response is received. that could be 1 byte, 100 bytes, or the whole response for example.
21:18 <@Nexxy> mbalho, pretty sure I'm actually stalking you
21:18 <@mbalho> NOOoOOOooooOOoooooooooo
21:18 < mscdex> fedrer: and the 'end' event tells you no more chunks are expected
21:18 < euoia> kkkkkkkkkkkkkkkkkkk
21:18 < euoia> oops sorry
21:27 < asterick> Dang I want PeerConnection in node.js
21:41 < Foxhoundz> what is the proper way of including query strings for a GET request
21:42 < Foxhoundz> for example, http://example.com/?foo=bar&var2=val2...&varn=valn
21:42 < Foxhoundz> it doesn't seem to be working the way I'm trying it
21:42 < asterick> that would be the proper way.
21:42 < asterick> how are you trying to parse it on your handler?
21:43 < asterick> (node doesn't do that for you)
21:43 < asterick> *automatically
21:43 < Foxhoundz> asterick: breaking it up into the hostname and supplying the query string via the path property in the options JSON
21:43 < asterick> Foxhoundz: pastebin me?
21:46 < Foxhoundz> asterick: http://pastie.org/7393723
21:47 < asterick> Foxhoundz: you need to do some kind of merge in there, you're doing multiple query strings right now
21:47 < asterick> you probably want  path: '/?' + querystring.format(query)
21:48 < asterick> querystring = require('querystring')
21:48 < asterick> Foxhoundz: http://nodejs.org/api/querystring.html
21:49 < Foxhoundz> oh wow
22:02 < ashnur> morning
22:03 < BretFisher> so if you run forever stopall and shell just sits there? what next to stop node?
22:04 < dcholth> Hello
22:04 < dcholth> BretFisher you have a node app that won't quit?
22:05 < BretFisher> y, ran forever start bundle/main.js and site wasn't working, so wanted to stop it. i can see nodejs in top
22:05 < BretFisher> all forever commands just sit there
22:05 < BretFisher> i can reboot, but just wondered if there's a forever task
22:06 < BretFisher> er, daemon
22:12 < niggler> in nodejs crypto, what encoding is used for strings ?
22:14 < bingomanatee> there is a forever module in node that is quite popular
22:15 < BretFisher> bingomanatee are you referring to my question? if so yes, i'm using npm forever
22:15 < bingomanatee> are you doing any subprocesses in node? 
22:16 < BretFisher> hmm, it's a Meteorjs app
22:16 < BretFisher> not sure
22:16 < s5fs> BretFisher: can you not just use kill?
22:16 < s5fs> inelegant, but effective
22:17 < s5fs> beats rebooting anyways
22:17 < mscdex> niggler: huh?
22:18 < niggler> disregard mscdex i see that update takes an encoding argument
22:19 < BretFisher> s5fs I didn't see a forever service, and killing node just spawns another :)
22:19 < s5fs> BretFisher: haha! that's awesome, I tip my hat in your direction. I do enjoy a goofy problem.
22:20 < s5fs> BretFisher: another thought.. if you kill node and a new process is started, wouldn't the parent PID of that new process be the forever process?
22:23 < CorbinDallas> in the Bliss Templating System ( https://github.com/cstivers78/bliss/wiki ) examples.  How does it know where to look for the templates?  It doesn't seem to find my templates.  In the example it says to use: template = bliss.compile('orders'); where orders is orders.js.html.  I tried this but it just outputs "orders.js.html" as the output of the template.  I can't figure out what I'm doing 
22:23 < CorbinDallas> wrong.
23:10 < rcombs> anyone ever written a class that inherits from Buffer?
23:12 < ningu> rcombs: out of curiosity why do you want to do that?
23:13 < faceleg|work> because reason
23:13 < chilts> probably to have a play, learn something new, or because it really does need to inherit from Buffer :)
23:14 < ningu> chilts: hey I saw your prospective co. on hn today
23:14 < ningu> I should say, product
23:14 < chilts> my wut now?
23:14 < rcombs> ningu: I'd like to have a class representing an INSTEON command, which has 2 fields, and give it a couple convenience getter/setters to access the fields
23:14 < chilts> ah gotchyer
23:15 < ningu> rcombs: why not just use composition?
23:15 < rcombs> ningu: not sure what that refers to
23:16 < ningu> rcombs: make your own prototype, use the buffer as an attribute.
23:16 < faceleg|work> +1
23:16 < rcombs> ningu: I need to be able to call things like command.copy(otherBuf);, new Buffer(command), etc…
23:17 < ningu> passthrough
23:17 < ningu> it sounds like you aren't really dealing with a Buffer but with a different kind of object
23:18 < ningu> just ask yourself: does it shine your floor? if so you might need a buffer
23:22 < rcombs> ningu: how do I get new Buffer(stuff) to work?
23:22 < ningu> call it from the constructor
23:22 < rcombs> how's that work?
23:23 < ningu> you don't know how to make a constructor?
23:23 < ningu> it's just a function
23:23 < deoxxa> i made a constructor once
23:23 < ningu> function FooCommand(stuff) { this.buf = new Buffer(stuff) }
23:23 < deoxxa> never again
23:23 < rcombs> yeah, but I'm not sure of the more detailed bits
23:24 < ningu> why don't the brits call it a buffre?
23:24 < rcombs> ningu: yeah, I know that, but then if I did var x = new FooCommand([0x04]); new Buffer(x); it wouldn't work
23:24 < ningu> rcombs: right... but why do you need to be able to do that?
23:25 < rcombs> ningu: the commands are used with buffer manipulation functions
23:25 < rcombs> hmm
23:26 < ningu> using a buffer is an implementation issue, sounds to me like you want a real object/class
23:26 < rcombs> if I have the constructor do return new Buffer(stuff); and added to the prototype of the class, would those prototype additions be passed onto the Buffer?
23:26 < ningu> well yes but then you're just talking about inheritance again
23:26 < rcombs> that'd work for me
23:27  * rcombs tries this
23:28 < swaj> so Linode doubled RAM of all machines today.  10X bandwidth, 2X RAM, and 2X CPU's in the last few weeks.  If you aren't on Linode, you should be :)
23:28 < ningu> is linode a better deal than ec2 for the $?
23:28 < swaj> by a gigantic margin, now that they upgraded everything
23:29 < swaj> 1 GB RAM, 8 x CPU's, 24 GB hard drive, a 2TB transfer monthly  -- $20
23:29 < rcombs> 0.o
23:29 < ningu> indeed
23:29 < swaj> and inbound bandwidth does not count on transfer
23:31 < ningu> looks like you can't mix and match storage though... like, 2gb ram with >48gb storage
23:35 < niggler> mscdex does require('crypto') load node's crypto or https://npmjs.org/package/crypto
23:35 < ningu> node's crypto
23:35 < ningu> or you mean if you have both?
23:35 < niggler> i think i must have both
23:35 < niggler> because I'm getting different results (repl versus script)
23:36 < ningu> not sure, I assume it would go with the local package
23:36 < niggler> and the only difference between the two is that one requires crypto and the other uses the REPL crypt
23:38 < niggler> ok clobbering the global node_modules seemed to have resolved the issue
23:43 < MI6> joyent/node: Ben Noordhuis v0.10 * eeb4c32 : crypto: remove unused ClientHelloParser field - http://git.io/_0k_7A
23:50 < CorbinDallas> anyone familar with vash (https://github.com/kirbysayshi/vash)?  I want to know how to register a helper method.  No docs.
23:56  * rcombs figured out his issue
23:57 < rcombs> just did INSTEONMessageCommand.prototype = new Buffer(2); and then Object.defineProperties(INSTEONMessageCommand.prototype, {…stuff…});
23:57 < rcombs> and used this in the constructor
23:59 < rcombs> heh, Buffer.length isn't write-protected
23:59 < jschall> what's up with dust.js? the "dust" module in npm hasn't been updated in 2 years, but "dustjs-linkedin" has been. is it well supported? is there a better template engine?
23:59 < rcombs> but as expected, changing it doesn't end well
23:59 < rcombs> Buffer.inspect doesn't handle it well at all
--- Log closed Wed Apr 10 00:00:18 2013
