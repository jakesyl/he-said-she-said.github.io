--- Log opened Fri Oct 19 00:00:34 2012
00:04 < nezZario> ChrisPartridge: I believe so
00:04 < nezZario> I still find it weird using javascript as a server side language but somehow exciting ...
00:09 < garbagecollectio> when i try to load socket.io with now.js
00:09 < garbagecollectio> i mean now.js does it on its own
00:09 < garbagecollectio> b
00:09 < garbagecollectio> ut it says its aborted
00:10 < Chorvus> I'm building a web based game server thingy. I'd like to hear your opinion on whether I should load everything in memory (rdbs,docstores) and save occasionally OR use a memory store (redis,membase,whatever) and obtain persistence this way. (I'll be using a single server node architecture for now)
00:11 < Barracks> hi
00:11 < Barracks> what do you guys think about meteor now?
00:11 < Barracks> it has auth
00:12 < nezZario> Chorvus: I'm really new to node.js so I don't know the exact mechinisms / any performance information about rdbs or docstores .. But I'm assuming they will probably be faster than redis, etc
00:13 < nezZario> So it all depends on (1) if you're willing to make sure another daemon doesn't go down (2) if you're willing to sacrifice possible short term data loss for that, or a very marginal performance increase
00:13 < nezZario> just a guess there
00:22 < ChrisPartridge> Chorvus: depends on the type of game, probably want to keep the game state easily accessible inside the node app and only persist periodically/when needed
00:24 < JohnMcLear> Any express pros any ideas on this: https://github.com/Pita/etherpad-lite/issues/1075 ? please :)
00:25 < Chorvus> Thanks for the suggestion, ChrisPartrige. Do you know of any techniques, packages or project samples I can take a look at? (whatever database/application logic)
00:28 < ChrisPartridge> JohnMcLear: what actually happens when you hit /robots.txt ?
00:29 < ChrisPartridge> Chorvus: have a look on github, I'm sure there's something out there
00:30 < JohnMcLear> You get the original robots.txt
00:30 < JohnMcLear> I'm not sure if the express app.get is being served / before the plugin
00:30 < JohnMcLear> I guess I need to see what happens if I do a test case.
00:30 < mdedetrich> is there a tutorial for binding context into JS functions
00:31 < Net147> how come when I use node.js as a TCP client, it takes twice as long to connect + receive data than if I use Python (node.js - 304ms, python - 156ms)?
00:31 < mdedetrich> when you specify anonymous functions
00:32 < JohnMcLear> Is there anyway to tell express not to allow override?
00:32 < JohnMcLear> IE if I pass a method first that no function can override it
00:33 < timeturner> middleware functions ordering?
00:33 < ChrisPartridge> JohnMcLear: well yeah, it's hitting the static middleware first I'm assuming, so it doesnt get to your route
00:34 < JohnMcLear> hrm
00:34 < mdedetrich> eh nvm
00:34 < JohnMcLear> What are you assuming is the middleware?
00:34 < JohnMcLear> Cause this project using YAJSML as it's middlware between Express->App
00:35 < ChrisPartridge> Not sure what that is, but essentially if it's using express, you most likely have a static middleware that is point to a /public directory which is serving the robots.txt file.
00:35 < JohnMcLear> right
00:36 < JohnMcLear> but assuming I want to either a) override it or b) stop my settings being overriden, would that be possible?
00:37 < JohnMcLear> I guess a quick console.log would show me which is being assigned first
00:37 < JohnMcLear> I should do that.
00:40 < JohnMcLear> Okay so my new app.get is being sent second
00:40 < JohnMcLear> So the question would be to express people, can an app.get be rewritten?
00:54 < ExPixel> ...
00:54 < nezZario> ughhh
00:56 < nezZario> ps nodebeginner.org is awesome
00:57 < nezZario> is node.js actually scalable?
00:57 < nezZario> i mean, i assume so .. but is 300-600 hits/sec unreasonable?
00:58 < sly__> Hi. On windows. In the folder of one of my project 'npm install mocha' installs to the parent directory (../node_modules) instead of ./node_modules. In my other folders it does not do that.
00:58 < nezZario> i mean, i'm running a pretty intensive php app that gets about 500sec average with nginx and it still ocassionally backs up with requests and starts turning folks away
00:58 < nezZario> apache2 failed miserably for the job
00:59 < cliffano> nezZario: http://blog.caustik.com/2012/08/19/node-js-w1m-concurrent-connections/
00:59 < nezZario> beautiful.
01:03 < sly__> weird...I manually created ./node_modules and now it works
01:08 < SomeoneWeird> sly__, yeah, it's suppose todo that
01:11 < sly__> SomeoneWeird: I've never had to manually create node_modules before.
01:12 < SomeoneWeird> if theres a node_modules folder in any of the folders above cwd it will install it into that
01:12 < sly__> Ho
01:12 < sly__> I see
01:12 < sly__> I must have npm installed in the parent folder by error once
01:13 < sly__> thanks
01:50 < LouisT> hola
02:02 < mscdex> node.js rules!
02:09 < kenperkins> can you guys recommend a mysql client?
02:09 < LouisT> i could recommend mongodb, but i don't use mysql... =/
02:13 < SomeoneWeird> just 'mysql' kenperkins 
02:13 < rvagg> kenperkins: felixge's mysql is probably the best choice, `npm install mysql`
02:14 < SomeoneWeird> ^^
02:14 < kenperkins> what about any orms?
02:14 < kenperkins> thx btw
02:14 < rvagg> nicholasf, any orm suggestions for kenperkins, using mysql?
02:15 < kenperkins> (it could be postgres btw, just looking for something for prototyping)
02:15 < Chorvus> kenperkins, there's node-orm, sequelize and persistencejs
02:16 < Chorvus> I know that sequelize is multi-dialect if you need to switch to postgres later without much hassle
02:22 < kenperkins> cool
02:22 < samholmes> so, I'm playing around with knox
02:22 < samholmes> but, I need something closer to the filesystem module.
02:22 < kenperkins> knox is the s3 lib ya? We're using that`
02:22 < samholmes> kenperkins: for sure!
02:23 < samholmes> I mean, yes; it is.
02:23 < samholmes> kenperkins: That's cool you're using it. I'm going to be using it too, if there isn't a better module out there.
02:23 < samholmes> The only issue I'm having with it is actually getting at the data.
02:23 < samholmes> Well, no.
02:23 < samholmes> Eh. How do I check if a file exists using knox?
02:25 < samholmes> I have a photo previewing system that creates a cache of a resized photo when requested.
02:25 < timeturner> anything better than s3 or is s3 the best?
02:25 < samholmes> timeturner: anything better than knox, I meant.
02:25 < timeturner> ah
02:26 < therealkoopa> I'm using a mongoose stream, and if I do stream.on('data'), it works. But if I try to say s.pipe(res) it says, First argument must be a buffer or a string... Any ideas how i can figure out why it's complaining
02:29 < samholmes> So, I use graphicsmagick to resize my user uploaded photos. And I'm caching the resized images in order to improve performance of my application. However, I need a way to check if a file exists on S3 before I resize and store the resized image. How do I do this with knox?
02:29 < samholmes> kenperkins: ^ some experienced person would be helpful here ;)
02:29 < kenperkins> `i'll have to look
02:30 < ChrisPartridge> samholmes: head request to check for existance?
02:31 < kenperkins> https://gist.github.com/3915924
02:32 < samholmes> kenperkins: key is your way of saying file name?
02:32 < kenperkins> yea, it's the s3 key
02:32 < samholmes> kenperkins: do you use folders in your buckets?
02:32 < kenperkins> not for these resources no
02:32 < samholmes> kenperkins: I think callling it key confuses it with the S3 authentication keys, but maybe that's just me.
02:34 < samholmes> kenperkins: I see. So I could do a head or get request and check the status code.
02:34 < samholmes> Thanks buddy.
02:34 < kenperkins> s3 is just a key/value store
02:34 < samholmes> kenperkins: It is?
02:35 < samholmes> I thought it was more like a hard drive?
02:35 < kenperkins> yea, you can put whatever you want into it
02:35 < kenperkins> well sure, it's in file form, but it's still just key based
02:35 < samholmes> So, I'm storing my files in a database more like redis?
02:35 < kenperkins> I was speaking in the abstract :P
02:35 < samholmes> Oh I see.
02:36 < samholmes> So it's not like redis.
02:37 < timeturner> s3 is pulled off of hardisks right? is it cached in memory?
02:40 < samholmes> redistogo seems a bit pricey
02:40 < chilts> it's pulled off some storage system, most likely hard drives
02:40 < niggler> timeturner: its held in the brains of amazon employees
02:40 < chilts> but yes, it's essentially a key/value store as kenperkins says
02:41 < chilts> you puts some bytes in at a key, then get them back sometime later
02:41 < chilts> of course, you can also do things like setting content-type headers, signed URLs or distribute it all via CloudFront
02:41 < chilts> plus an index file and now redirects so it's a key/value store with some web functionality built in :D
02:42 < samholmes> chilts: But, this could be argued about any hard drive really?
02:42 < chilts> true
02:42 < samholmes> So, what's the point..
02:42 < chilts> but without inodes and with web stuff
02:42 < chilts> what's the point of what?
02:43 < nicholasf> rvagg sorry, I was afk
02:44 < samholmes> Well, all I mean is, it would be more useful to distinguish it as a hard drive or file storage instead of a key/value store. But, that's just my opinion.
02:44 < chilts> it's file storage
02:44 < nicholasf> we're using our own ORM - github.com/moneytribeaustralia/downstairs.js . It's not finished yet, but we're getting some leverage out of it already via postgres
02:44 < chilts> that's all you need to know really
02:44 < samholmes> right
02:45 < samholmes> Though, I can't really use it like a file system from within my app, because I can't use the path or fs modules on it.
02:45 < samholmes> For example, how could I use gm to resize an image hosted on S3?
02:46 < chilts> samholmes: like I said the other day - download it, resize it, re-upload the new size
02:48 < samholmes> chilts: Sorry, I must of missed what you said the other day (I had a lot of things going on that day). Anyway, so you're saying to download it in a temp directory somewhere in my app, then resize it, reupload it, then delete the temp file from my app?
02:48 < zivester> anyone know a quick way to turn an nconf into a normal JSON object (for reading)
02:49 < chilts> samholmes: yeah ... you might want to do stuff like that outside of your main app though, so you don't slow it down
02:50 < chilts> do it in an offline manner, ie. some background task
02:51 < samholmes> chilts: Where do you host your apps?
02:54 < samholmes> chilts: do you use a IaaS or do you use a VPS box(es)?
02:54 < chilts> samholmes: Heroku, Nodejitsu, AWS (in no particular order) - depends on the app
02:54 < chilts> both
02:54 < chilts> and PaaS
02:54 < fivesigma> evening folks!
02:54 < chilts> afternoon fivesigma :)
02:55 < fivesigma> chilts: what determins which of those you choose?
02:55 < samholmes> How do you determind what sort of infrastructure for your app? What sort of apps require what, from your experience?
02:55 < samholmes> fivesigma: we asked the same thing. xP
02:56 < chilts> lots of things, size, background processing, storage, scalability and how much money I want to put into it
02:56 < fivesigma> heh.  currently planning on using AWS for my project, but I have to admit the only other solutions for IaaS I've researched were Joyent and Softlayer.
02:56 < chilts> and/or time :)
02:56 < chilts> fivesigma: I wroe AwsSum if you want to use Node.js to talk to AWS :) (http://awssum.io/)
02:57 < chilts> s/wroe/wrote/
02:57 < chilts> fivesigma: there is also RackSpace for IaaS
02:57 < samholmes> chilts: let's say you were building a service like facebook, instagram, twitter, pinterest, etc. what sort of infrastructure would you choose?
02:58 < chilts> AWS ... but probably start with PaaS since I would presume I won't get as big as any of those (yet)
02:59 < chilts> and they have to solve shit you don't care about, until your app gets really large
02:59 < chilts> it would more depend on what the app was doing, rather than how large it would get
03:00 < nuba> samholmes: one of the cheap linode plans is probably more than enough for you to begin with.
03:01 < RLa> looking for hosting?
03:01 < nuba> or something like that. and only if you need custom services running. otherwise any PaaS is probably good too.
03:02 < samholmes> nuba: I'm using IntoVPS
03:02 < nuba> i'd focus on building something and finding traction first
03:03 < LouisT> samholmes: oh.. openvz? :(
03:04 < nuba> "i wanna be the next facebook, lemme start by using all their opensourced apps, and also use beefy instances on AWS" <= that sucks. go build something then solve these problems when it makes sense. these (growing pains) are good problems to have.
03:04 < samholmes> LousT: openvz?
03:07 < niggler> lol facebook
03:12 < samholmes> niggler: Ikr
03:12 < niggler> I'm trying not to say 'fuck'
03:12 < niggler> lest the nexxy nazi make a comment :P
03:12 < samholmes> Say what what?
03:13 < samholmes> I'm was just agreeing with you. ;P
03:14 < niggler> :)
03:14 < nezZario> anyway
03:14 < nezZario> ok
03:14 < niggler> "opiate of society" is another colorful phrase
03:15 < nezZario> what do I use for mvc?
03:15 < nezZario> or a simple template engine..
03:15 < niggler> mustache looks really clean
03:15 < nezZario> or .. so i don't put large chunks of html in js strings
03:15 < ChrisPartridge> i like the simplicity of underscore templates
03:15 < fivesigma> express?
03:16 < nezZario> wtf on underscore templates?
03:16 < nezZario> it seems express is popular but i don't like stuff that uses the term 'middleware'
03:16 < niggler> underscore templates elicit thoughts of ASP
03:17 < niggler> and that makes me shudder
03:17 < niggler> [insert obligatory fuck ASP here]
03:17 < nezZario> what the /hell/ is an underscore template
03:18 < RabidFire> underscore.js templates
03:18 < RabidFire> another library
03:19 < nezZario> that looks pretty flipping ugly to be honest
03:23 < SomeoneWeird>  <nezZario> it seems express is popular but i don't like stuff that uses the term 'middleware' < why not?
03:23 < niggler> the word middleware has a very negative connotation
03:29 < ChrisPartridge> niggler: not hard to change the tag style for underscore, literally one regex
03:29 < niggler> one regex is one regex too many
03:30 < samholmes> chilts: you were saying that I should move the resizing to a background process. This is what I'd like to do, however what way do you find it best to manage multiple process for a single app?
03:30 < SomeoneWeird> <niggler> one regex is one regex too many < pfft
03:31 < nezZario> samholmes: probably something like gearman
03:31 < nezZario> btw, where the heck is the redis client for node ?
03:31 < nezZario> i feel like a lost puppy
03:31 < niggler> oh SomeoneWeird you think that one regex is two regexes too many?
03:31 < nezZario> i learned lua pretty comprehensively in about 2 days
03:31 < ChrisPartridge> samholmes: what are you resizing the images with?
03:31 < nezZario> this looks like it's going to be a little more complex than lua overall
03:32 < niggler> tcl/tk is where its at
03:32 < SomeoneWeird> k
03:32 < niggler> i miss BLT
03:32 < nezZario> it would really help if my kids didn't loose my usb drive with my damn server keys on it
03:33 < nezZario> i'm developing / playing with node.js in a vim window :sp'd 5 times
03:33 < samholmes> ChrisPartridge: gm
03:34 < niggler> on the topic of regexes, is there a way to compile a replace operation?
03:35 < SomeoneWeird> var reg = "s/" + replace + "/" + replacewith; var regex = new RegExp(reg)
03:35 < SomeoneWeird> may work
03:35 < ChrisPartridge> samholmes: take a look at node-netpbm
03:36 < niggler> >>> new RegExp("s/foo//").exec("foobar")
03:36 < purr> niggler: (object) null
03:36 < SomeoneWeird> or not
03:36 < SomeoneWeird> :P
03:37 < niggler> fail
03:49 < exit2> Anyone have any advice on how to get ShareJS working with Django?
03:50 < exit2> or maybe my entire app should be in Node.js and then I don't have to worry about it
03:50  * exit2 has stroke of genius.
03:50 < SomeoneWeird> !
03:50 < SomeoneWeird> lol
03:52 < exit2> I need to stop talking to myself
03:52 < exit2> I think this would be a more suitable question
03:52 < fivesigma> poppycock, the best epiphanies come to people who talk to themselves.
03:53 < exit2> What is a good framework (using Node.js) to use that has built-in user auth, db api, etc..
03:53 < exit2> I could even do w/o the db api and do raw sql queries, if I had to... I guess
03:53 < SomeoneWeird> none
03:54 < exit2> What's alluring about Django is all the extra shit and the fact that basically everything has been done and there is documentation for it :\
03:55 < fivesigma> what kda db are you using?  sql?  mongodb?
03:55 < fivesigma> kinda*
03:56 < RabidFire> exit2: but you have npm, and you can install the best packages for the job
03:56 < RabidFire> exit2: middleware ftw!
03:56 < exit2> ah word
03:56 < exit2> and I imagine there is a shit ton of packages?
03:56 < SomeoneWeird> yeap
03:56 < RabidFire> yep
03:56 < SomeoneWeird> search.npmjs.org
03:57 < RabidFire> I like this page better: https://github.com/joyent/node/wiki/modules
03:57 < RabidFire> it's very organized, helps you get started
03:57 < SomeoneWeird> sure, but it only lists like <1% of all modules
03:57 < SomeoneWeird> :P
03:57 < kuja> exit2: I don't think there's anything that provides all of that out of the box. You just piece together tools that will help you accomplish those tasks. For example, express to handle building the web app, sequelize as an ORM library (since you compare to Django)... and I'm sure there's a package for anything else you need.
03:57 < kuja> npm also makes it real easy to manage dependencies for your project
03:58 < exit2> kuja: how to I track all them-there dependencies?
03:58 < kuja> In a nifty file called package.json
03:58 < kuja> https://npmjs.org/doc/json.html
03:59 < exit2> word
04:00 < kuja> werd yo
04:01 < SomeoneWeird> sentence yo
04:01 < exit2> you node dudes are cooler than I expected, must be all that freedom of semicolon usage
04:01 < SomeoneWeird> hah
04:01 < kuja> only some of us believe in freedom from semi colons..
04:01 < exit2> :D
04:01 < kuja> some are yet to convert.... but they will..
04:01 < exit2> What's this I hear about JS inserting them anyways when running?
04:02 < SomeoneWeird> you should always use semicolons
04:02 < kuja> It is called automatic semicolon insertion, and isaacs talks about it a lot
04:02 < SomeoneWeird> http://wtfjs.com/2012/08/11/Slashes!
04:02 < SomeoneWeird> just 1 example
04:03 < garbagecollectio> how can i prevent deeplinking easily with node.js?
04:04 < Guest99651> hello all. quick question about node on windows. it seems i can no longer run scripts when i upgrade node.exe to > 8.x. it will hang after the second run. i'm on a restricted laptop and think it might have something to do with no admin rights
04:04 < exit2> SomeoneWeird: I'll stick with using semicolons for now, my editor works best when I use them
04:04 < SomeoneWeird> Guest99651, weird, maybe you're trying to access resources you don't have perms to?
04:05 < Guest99651> even the repl hangs. not doing anything else
04:06 < exit2> Guest99651: was the name Guest99650 taken?
04:06 < Guest99651> no, but that name sounded really lame. so i picked this one instead!
04:07 < ChrisPartridge> the 1 adds character
04:07 < gluxon> Really?
04:07 < Guest99651> thanks. i try, you know!
04:07 < RLa> garbagecollectio, check referrer header?
04:07 < SomeoneWeird> Guest99651, tried reinstalling?
04:08 < RLa> garbagecollectio, i think it's nothing specific to node
04:08 < Guest99651> yep. i've installed a whole bunch of versions. i copy node.exe into a separate dir to test standalone/portable behavior and it stops working when i get to 8.x
04:12 < garbagecollectio> what if i cant do a referer check in this case?
04:13 < garbagecollectio> set a variable inside node and check it?
04:13 < exit2> what's the favorite auth system?
04:13 < exit2> package, if you will...
04:18 < exit2> when using templates, like ejs, do you guys use a base and then the other extend the base?
04:21 < brianc_> hai
04:22 < SomeoneWeird> i have partials for like from <html> to </head> then include them with <% include head %> then just put everything else, et.
04:22 < SomeoneWeird> etc.
04:23 < exit2> SomeoneWeird: so like a head.ejs
04:24 < exit2> is the top shit
04:24 < exit2> and then just include that guy
04:24 < SomeoneWeird> yep
04:24 < kenperkins> Prototypes suck
04:25 < SomeoneWeird> wot
04:25 < brianc_> i wrote a module for doing http testing w/ mocha.  kinda like 'rack-test' from ruby, but....different. https://github.com/brianc/node-omf
04:26 < exit2> SomeoneWeird: do the same for footer?
04:26 < SomeoneWeird> you can do othe same for anything
04:26 < SomeoneWeird> yep
04:26 < SomeoneWeird> s/othe/the/
04:26 < ChrisPartridge> brianc_: nice, will check it out
04:26 < brianc_> ChrisPartridge: still in baby stage, but definitely easy to extend
04:27 < ChrisPartridge> brianc_: haha love the gif
04:27 < brianc_> ChrisPartridge: me too. makes me so happy.
04:27 < ChrisPartridge> brianc_: while you're here, has the date parsing code in pg changed at all recently? 
04:28 < exit2> interesting, I wish there was a way to have a base.ejs which would basically be html - > /head.  The middle would be a content block and then footer stuff at the end.  In your other view would just just template content start and end
04:28 < brianc_> ChrisPartridge: not at all
04:28 < brianc_> ChrisPartridge: why?
04:29 < ChrisPartridge> brianc_: Had a tonne of issues with it, ended up changing our views to return timestamps - is it possible we can get an option to return strings?
04:29 < brianc_> yeah definitely
04:29 < brianc_> you can override type parsing for any internal type very easily
04:30 < brianc_> for example: postgres supports 64bit integers, but javascript does not. so if you have huge numbers in your database you can override the int parsing to return ints as a string so you can handle 64bit ints (sorta, can't do math with them or anything)
04:30 < ChrisPartridge> Ah sweet, just seen the FAQ item referring to the test
04:31 < brianc_> ChrisPartridge: if you have bugs on date parsing you can definitely open them as issues & I'll look at them & try to fix them asap
04:32 < ChrisPartridge> brianc_: Yeah, there was definately something iffy happening with the time zone portion, i'll track it down at some point and put an issue in. Time was of relevance in this case so changing the views was the easy solution :)
04:32 < bingbong> can i use event tracing on win xp to determine why my node repl is hanging?
04:33 < bingbong> if not, what can i do to dig into the guts of my problem? surely there must be a way to smoke it out. hit it with a stick maybe?
04:34 < bingbong> call chuck norris?
04:34 < ChrisPartridge> bingbong: you the guy with the locked down windows PC?
04:34 < bingbong> that would be me
04:34 < bingbong> got a flashy new name
04:35 < ChrisPartridge> bingbong: can't get your user added as a local administrator?
04:35 < bingbong> no :( bank laptop. booooo!
04:35 < ChrisPartridge> you will always be Guest99651 in my eyes
04:35 < ChrisPartridge> bingbong: Ah bank, that would explain it
04:36 < brianc_> bingbong: console.log
04:36 < bingbong> awww thanks chris! you know the really real me
04:36 < brianc_> bingbong: oh wait, you said repl.  got no idea. :/
04:36 < bingbong> i can't even get to console.log. hangs prior to that
04:36 < bingbong> yeah :/
04:36 < brianc_> bingbong: can you run putty?
04:36 < bingbong> i can run it, but can't ssh into anything
04:36 < brianc_> bingbong: jeeze. 
04:37 < bingbong> tell me about it!
04:37 < ChrisPartridge> bingbong: get a new job :P
04:37 < brianc_> bingbong: start applying at new companies or work on you own computer I guess? sounds like your work computer has some serious rootkit stuff on it
04:38 < bingbong> they have this banded win xp kernel... but i can get older version to run ok. something changed in 8.x that makes it no workie
04:38 < brianc_> bingbong: I know it sounds like half-assed advise but any company that's willing to so stifle innovation in the name of security is probably not a place for you?
04:38 < brianc_> s/advise/advice
04:38 < ChrisPartridge> bingbong: surprised they are still using XP ttyt
04:38 < bingbong> but they pay me ridiculous amounts of money
04:39 < bingbong> devil has my soul, i know
04:39 < brianc_> bingbong: hmmm
04:39 < bingbong> we're supposed to be upgrading to a banded win7 image. maybe that will happen soon and the newer versions of node will start working
04:40 < ChrisPartridge> bingbong: you could probably use sysinternals process mon tool to check what it's doing, might give some clues
04:40 < brianc_> install virtualbox
04:41 < bingbong> chris, i'll try that. thx! brian, i have virtual box installed, but i'm attempting to build a portable toolkit for frontend developers and need to make it as light as possible -- unzip, bam!
04:42 < bingbong> in any case, i'll give sysinternals process mon a go and see what turns up
04:42 < bingbong> thx
04:42 < ChrisPartridge> good luck
04:43 < brianc_> ChrisPartridge: seriously if you have date parsing issues those are probably a bug in node-postgres, the date parsing isn't incredible.  I do need reproducable fail tests though to fix...dates are hard.
04:44 < exit2> should I be converting my css to stylus?  Or is this just for the purpose to make css look cleaner?
04:45 < brianc_> exit2: it's to make css easier to write & maintain
04:45 < brianc_> exit2: you could write "new" css in stylus but you might not want to go through the effort of converting all your old css until you really know you like stylus
04:48 < Leeol> Question.. any idea how generic unit testing libraries catch asynchronous error events? (such as a setTimeout thrown error?)
04:49 < brianc_> Leeol: most of them don't
04:49 < brianc_> Leeol: they consider it a failure and terminate the test suite
04:50 < brianc_> Leeol: but it depends on the library you're using
04:51 < Leeol> brianc_: Well, for example i tried a basic setTimeout thrown error with Mocha, and it caught it. Which puzzles me
04:52 < Leeol> I have *no* idea how it'
04:52 < Leeol> it's managing to catch the error..
04:52 < Leeol> brianc_: Thoughts?
04:53 < brianc_> Leeol: mocha is very tricky. probably using process.on('uncaughtException')
04:54 < Leeol> Ah, good call. While digging for a solution i ran into a few nodejs specific examples but i threw them off, because i was looking for a browser compatible solution
04:54 < Leeol> However, i have no idea if Mocha is able to do this in browser too
04:59 < exit2> You guys recommend passport over any other lib for auth?
05:00 < chovy> anyone in mongoose know how to do User.find(list_of_ids)
05:06 < kenperkins> anyone running mongo in production?
05:08 < LouisT> kenperkins: i am, kinda.. it's not getting very many hits yet
05:08 < kenperkins> how many records? thousands? millions?
05:09 < LouisT> not currently
05:09 < RLa> chovy, isn't there $in operator?
05:09 < LouisT> i did some tests with converting text files into records, it handled a few thousand inserts within  a few seconds very well
05:11 < deoxxa> kenperkins: yeah what's up
05:11 < kenperkins> just trying to guage how you like it, how many models you're storing, etc
05:11 < deoxxa> well it's awesome to work with
05:11 < kenperkins> I'm doing some prototyping to make sure we're going to scale
05:12 < deoxxa> we've got collections with a few million records
05:12 < kenperkins> just want to evaluate my options
05:12 < kenperkins> how relational is it?
05:12 < deoxxa> it's... not... relational?
05:12 < deoxxa> i mean you have the DBRef thing, but it's silly
05:20 < kenperkins> well, i thought you could do relational crap in mongo just like in mysql
05:24 < deoxxa> kenperkins: nnnnope
05:25 < deoxxa> kenperkins: that's one of the defining characteristics of mongodb (and other "nosql" products)
05:25 < deoxxa> kenperkins: it's not that you can't do relational logic, but you have to do it in your application instead of the database
05:32 < dileep> hello syskk
05:32 < dileep> hello someweird
05:44 < kenperkins> deoxxa: thanks for clarifying that for me
05:44 < kenperkins> I had misunderstood part of the mongo docs
05:45 < deoxxa> no problem :3
06:18 < woopwoop> I've got app.get("/search", function(request, response) { console.log(request.search); and  $.post("/search", $(this).serialize(), function() {
06:18 < woopwoop> but when I do the post, it says POST http://localhost:3000/search 404 (Not Found) 
06:18 < woopwoop> why?
06:21 < nathan7> woopwoop: where's your app.post?
06:21 < ChrisPartridge> woopwoop: app.get expects a get request, not a post
06:21 < woopwoop> ah I see
06:21 < woopwoop> i'm just a noob learning it 
06:21 < woopwoop> thanks
06:24 < woopwoop> how's this look? app.post("/search", function(request, response) { console.log(request.test); }); 				  $.post("/search", { test: 'test'}, function() { console.log("good"); });
06:27 < chovy> howdy
06:28 < chovy> woopwoop: usually you just do req, res
06:28 < chovy> woopwoop: you probably want res.json({status: 'ok' });
06:29 < chovy> then you can do d.status in your jQuery cb
06:29 < woopwoop> what's mine doing?
06:30 < jwulf> anyone using meteor?
06:30 < RLa> a style question, new Error('You have error.') vs new Error('You have error')?
06:30 < woopwoop> why can't it print out request.test?
06:30 < chovy> RLa: i usually add the 
06:30 < chovy> .
06:31 < chovy> woopwoop: i was saying if you wanted to return data back to your jQuery layer
06:31 < chovy> RLa: probably shold say "You have AN error"
06:32 < woopwoop> i see, res.send("good"); works great, but on the node layer, when i tried to print out request.test how come that comes back as undefined?
06:32 < chovy> woopwoop: if you want to return json, do res.json( object )
06:32 < chovy> you need req.body.test
06:33 < RLa> chovy, correct grammar yes but the last . was the point
06:33 < RLa> hm
06:33 < chovy> RLa: yeah, i add the '.' usually
06:33 < woopwoop> got it
06:33 < chovy> I try to make it fun
06:33 < woopwoop> thanks!
06:33 < RLa> '.' sucks if last part is variable, like in new Error('Invalid value for x: ' + x)
06:34 < crazynodefarmer> exit
06:34 < RLa> with consistent '.' style you would need to add + '.' at the end
06:34 < chovy> RLa: just skip it then. it's not a big deal. usually you're not flashing sentences anyway.
06:34 < Guest_1448> I'm using request() to load some binary data
06:34 < chovy> I usually say something like "DOh!, one of our hamsters kicked the bucket"
06:35 < Guest_1448> how do I get node to interpret it as binary so that I can read some UInts?
06:35 < mdedetrich> anyone here use parallels by any chance
06:35 < chovy> mdedetrich: i used to
06:35 < mdedetrich> trying to figure out
06:35 < mdedetrich> when you run a web server on host
06:35 < mdedetrich> how to make that work on the guest virtual machine
06:36 < Guest_1448> I'm currently using new Buffer(xx, 'binary') and setEncoding('binary') on response.. but I keep hearing that binary encoding is deprecated?
06:36 < Guest_1448> how am I supposed to load/parse some binary data from the web?
06:36 < chovy> mdedetrich: you mean you have apache on your mac, and are trying to access the host from windows vm?
06:36 < mdedetrich> well not apache
06:36 < mdedetrich> I'm just running a node process
06:37 < mdedetrich> but yeah
06:37 < mdedetrich> thats the logic
06:37 < chovy> i don't know. bridge it maybe?
06:37 < chovy> localhost:3000 doesn't work?
06:37 < mdedetrich> nope
06:37 < airtanah> how is your vm network setup?
06:38 < airtanah> bridged, host-only, etc?
06:39 < Guest_1448> ???????
06:43 < mdedetrich> oh hey
06:44 < mdedetrich> figured it out
06:44 < mdedetrich> just put the IP of the host machine
06:44 < mdedetrich> into the url
06:44 < Tixz> What's the best partial templates/view syntax you ever used/seen?
06:44 < Tixz> Looking for inspiration for my own system
06:48 < ashnur> substack: do you maybe have a diagram about the tools you use in nodejs hosting, how they all come together, i have a really hard time getting this right :(
06:48 < spudly> Howdy all. Wondering if anyone has any experience getting npm to work in an ipv6 only environment?
06:55 < goku22> hello can anyone tell me if there is a good freehosting provider for nodejs applications
06:55 < jwulf> goku22, heroku, openshift
06:55 < jwulf> openshift hosts cloud 9
06:55 < airtanah> +1 heroku
06:56 < airtanah> openshift also works
06:56 < Guest_1448> +1 heroku
06:56 < Guest_1448> appfog looks nice too though
06:56 < goku22> thanks
06:57 < chovy> goku22: notejitsiu
06:58 < airtanah> i think only nodejitsiu supports websockets
07:00 < dileep> goku22,if u dont mind can u pleaase send me some working  applications code on my email id...dileep2008apex@gmail.com
07:01 < goku22> you are lookign for tutorials?
07:02 < dileep> goku22,both tutorials and also applications.like from thatt i am able to learn node.js
07:03 < chovy> dileep: http://dreamerslab.com/blog/en/write-a-todo-list-with-express-and-mongodb/
07:04 < chovy> dileep: i followed this tutorial and created my first app from it.
07:05 < dileep> chovy,i need some real aplicattions to run like blog,ajax im and lots .also learn more about node.js
07:06 < chovy> https://github.com/gildean/NodeBlog
07:06 < chovy> but i recommend you use express/mongoose
07:07 < dileep> chovy,i am new to node.js so i wanna to start learn in short time
07:10 < dileep> goku22,r u mailing me the projects
07:11 < dileep> chovy,help me sir to learn
07:12 < chovy> i just told you what i did to learn node. what else do you want?
07:12 < Guest_1448> hahah
07:15 < chovy> stick to java
07:15 < goku22> dude check the link chovy mentioned
07:16 < goku22> build your todo list
07:17 < goku22> dileep for nodejs IM check the chat application they have on their site
07:18 < goku22> if you are looking for inspiration you could check out javascript web applications by maccaw
07:18 < dileep> goku22,on node.js org
07:18 < goku22> it shows an example chat application but using backbone on the client side
07:18 < goku22> lemme look up the link for you
07:19 < goku22> opps looks like its gone now ... last saw it a few months ago chat.nodejs.org
07:20 < goku22> but hey heres a tutorial for chat client using nodejs http://martinsikora.com/nodejs-and-websocket-simple-chat-tutorial
07:20 < Guest_1448> .. now email it
07:21 < goku22> hehehe
07:21 < chovy> goku22: can you read it for him too and then build the app? thanks
07:21 < chovy> ...and he's gone.
07:27 < goku22> thanks chovy and Guest_1448 have a good weekend 
07:32 < [AD]Turbo> hi there
07:45 < chovy> later
07:48 < pixie79_> hi all, how do i open a stream to a fifo to write data to it?
07:52 < sppericat> fs.createWriteStream ?
07:53 < pixie79_> fs.createWriteStream created a file rather than a fifo, when used on a fifo it trys to open it wrongly which causes what is listenting to the other side to terminate
07:59 < goku22> could you paste the related error message
08:00 < goku22> you try setting the flags to r+
08:00 < pixie79_> goku22: there is not one, createWriteStream works, it is just the application on the other side the dies as soon as node connected to it
08:00 < goku22> you could* sorry
08:01 < goku22> the server is still listening ?
08:02 < pixie79_> the node end it - i will try the r+ i was opening with w
08:08 < pixie79_> well the recieving program is not crashing now, not sure it is getting the correct output either - will check now
08:11 < terinjokes> on an http.request() I assume that one can set the User-Agent header
08:11 < syntroPi> what happened to the old npm registry search? Is it just me or isnt there any search for packages anymore on npmjs.org?
08:11 < terinjokes> as part of the options?
08:12 < goku22> yeah u can 
08:12 < goku22> @terinjokes
08:12 < goku22> use setHeader
08:13 < goku22> express
08:14 < syntroPi> can someone enlighten me how i would search a package on npmjs.org? Is there a new version of this anywhere? npmjs.org just seems to redirect my search to google which is not what i want
08:14 < LouisT> syntroPi: probably easier to search with the npm command line client
08:15 < syntroPi> yeah, but why was the webinterface removed? I liked to browse the registry with the web interface 
08:15 < SoulRaven> hello
08:15 < ashnur> if i want to host nodejs without nginx or monit, what are my options to make it sure that it will "always" be online ?
08:15 < SoulRaven> please help me with something, i want to use require.cache for cheking when a module is allready loaded
08:16 < SoulRaven> to not load that module again
08:16 < SoulRaven> but i don't know how
08:19 < chovy> in express, how do i get the current url?
08:20 < goku22> getparam i think
08:20 < LouisT> SoulRaven: something like: if (require.cache[require.resolve(file)] == undefined) { require(file); }
08:21 < goku22> wait thats http
08:21 < goku22> chivy u answered it urself in stackoverflow
08:22 < goku22> http://stackoverflow.com/questions/7772605/get-url-contents-in-node-js-with-express
08:25 < SoulRaven> LouisT: thx, now so each time when i call the module, checks to see if the module is allready loaded or not
08:26 < chovy> goku22: no, i mean i want to get the full url of the page i'm on in my view. it's for a facebook like button
08:26 < LouisT> SoulRaven: depending on how you use it, yes
08:26 < chovy> req.url doesn't give full url
08:27 < goku22> interesting
08:27 < chovy> it only gives me path
08:27 < chovy> i can't believe there's no way to get it
08:38 < pixie79_> i have gone for a slightly different approach, I am not reading the data in from the tcp socket and pushing it on to an array, however when the data sent in is 'END' (being the whole line of text) then it should terminate adding to the array and output it to console, it seems to never match END though, any ideas ? -> https://gist.github.com/3916977
08:39 < goku22> pixie79_ i think it might be a file locking issue
08:39 < goku22> https://github.com/joyent/node/issues/1213
08:45 < naquad> JSON.parse doesn't use eval and has full state parser. right?
08:45 < pixie79_> hi goku22 um, at the moment i am just trying to write to an array - i have left the file output for later
08:46 < goku22> try c.on('data',function(){…}).on('end',function(){ …. });
08:48 < pixie79_> goku22: is on('end') and even if so i dont think my sending side will send that, it literally sends the text END to say that it has finished sending data and then waits for the response
08:49 < goku22> oh 
08:51 < yashodhan> Hello, Can any one provide me with sample code on node.js working with mongoosastic?
08:52 < yashodhan> which is mogoDB+elastical search. I have written code but it's not working, no idea if I am handling all dependancies.
08:52 < yashodhan> anyone?
08:52 < astropirate> no
08:52 < astropirate> we hate you
08:53 < yashodhan> did i do something wrong?
08:53 < ashnur> yes
08:53 < astropirate> yes
08:53  * SomeoneWeird slaps astropirate 
08:53 < SomeoneWeird> be nice
08:53 < astropirate> :(
08:53 < chilts> yashodhan: paste some code, someone might be able to help even if they don't use those things
08:53 < chilts> :)
08:54 < chilts> yashodhan: what's not working about it? errors or just not doing what you expected?
08:54 < dz0ny> yashodhan: https://travis-ci.org/#!/jamescarr/mongoosastic 
08:55 < yashodhan> Actually I am college student and asked to write code in node.js
08:55 < dz0ny> tests are failing, code is broken you might try previous commits
08:56 < yashodhan> I am totally new to this language, which is event driven so facing basic problems. Regarding mongoosastic I am not able make it run I tried but services are just not working.
08:56 < yashodhan> Isn
08:57 < yashodhan> Isn't there way I can get sample code?
08:59 < dz0ny> yashodhan: I don get it. you want more sample code? this https://github.com/jamescarr/mongoosastic/blob/master/example/blog/app.js isn't enough?
08:59 < yashodhan> @dz0ny what exactly you mean?
08:59 < goku22> what sample code are you looking for
09:01 < yashodhan> yeah that is the one problem is I am not able to run it. I just did run it using node <filename>
09:01 < yashodhan> sorry it's very basic question but I am totally new on how to get it to work.
09:02 < goku22> copy paste the error buddy
09:02 < yashodhan> ok give me a minute.
09:07 < opus_> hey guys, I wrote mongodb node.js Assert test that basically updates/fetches
09:07 < opus_> I have safe mode on, strict off, fsync on. but my asserts are randomly failing?
09:08 < opus_> do I have to call db.getLastError or something? 
09:08 < opus_> is there an example of that somewhere? do I just call it with a callback right after each call?
09:13 < yashodhan> @goku22 I am getting this error while executing example given on github by jamescarr on mongoosastical :
09:13 < yashodhan> module.js:340     throw err;           ^ Error: Cannot find module 'express'     at Function.Module._resolveFilename (module.js:338:15)     at Function.Module._load (module.js:280:25)     at Module.require (module.js:362:17)     at require (module.js:378:17)     at Object.<anonymous> (/home/hadoop/jamescarr-mongoosastic-01084fb/example/blog/app.js:1:77)     at Module._compile (module.js:449:26)     at Object.Module._extensions..js (
09:14 < goku22> you need to install express
09:14 < goku22> npm install express
09:14 < yashodhan> i did install it I was able to run test program I have written in express.
09:14 < goku22> global or local install ?
09:15 < goku22> is there a folder called node_modules in your working directory
09:15 < goku22> the error says the program cannot find express
09:15 < goku22> check your installation
09:15 < yashodhan> yeah it's there.
09:15 < goku22> in node_modules is there express
09:16 < yashodhan> yeah it's there
09:16 < goku22> i have no idea
09:16 < opus_> you might be running as a differnt user (root) ?
09:17 < yashodhan> Can you direct me how should I approach this error?
09:17 < yashodhan> I am running as normal user.
09:17 < yashodhan> but I am also able to run express_test.js as that user.
09:17 < opus_> try nuking your install and re-installing
09:18 < opus_> or 'strace -f node your_file.js' and seeing what its trying to fopen()
09:19 < opus_> so anyone have any idea how to call mongodb getLastError?
09:19 < opus_> properly?
09:20 < yashodhan> I ran that command and list is never ending...
09:21 < yashodhan> has anyone tried running example given by jamescarr and was able to run it successfully?
09:23 < symeog> i am very new in node and the only thing i have done is the beginners book. i would like to build a very simple web application with database access as my first app. is it good or bad for me to incorporate express from now ?
09:25 < symeog> what i am asking is if its a waste of time to start building a web app (even the simplest one) without using a mvc framework ?
09:27 < jakeskik> symeog: start with express.
09:28 < opus_> symeog, you'll probably be using express a lot
09:28 < symeog> thanks jake…any good tutorials on that ?
09:29 < jakeskik> it gives you sessions and bunch of middleware by default. It would be just cumbersome to build a (stateful) web app just with node http server.
09:29 < symeog> thats what i thought
09:30 < symeog> but i will need a good tutorial/video
09:30 < symeog> as i said i am a beginner
09:30 < jakeskik> it isn't mvc framework though. Just routing and sessions, like sinatra in the ruby world.
09:31 < symeog> simpler then
09:32 < jakeskik> i've been happy with the docs, i'm not sure if there's up-to-date video tutorials available
09:32 < jakeskik> http://expressjs.com/
09:33 < jakeskik> especially the guide was helpful at the beginning: http://expressjs.com/guide.html
09:33 < jakeskik> and of course, reading the source code at github ;)
09:33 < symeog> i see.....
09:37 < yashodhan> #goku22 I nuked installs and re-installed everything and tried to run again now error has changed but now got one in elastical though it's installed
09:37 < yashodhan> hadoop@aseem:~/jamescarr-mongoosastic-01084fb/example/blog$ sudo npm install elastical npm WARN package.json application-name@0.0.1 No README.md file found! npm http GET http://registry.npmjs.org/elastical npm http 304 http://registry.npmjs.org/elastical npm http GET http://registry.npmjs.org/request npm http 304 http://registry.npmjs.org/request elastical@0.0.9 node_modules/elastical └── request@2.9.200 hadoop@aseem:~/jamesca
09:46 < syskk> is there any way to simulate a sleep in Node.js?
09:48 < symeog> make a while loop and play with date and add milliseconds to it
09:48 < symeog> its very easy
09:48 < yawnt[uni]> don't do that
09:49 < yawnt[uni]> you'd block everything else
09:49 < yawnt[uni]> if you want a sleep you're probably doing it wrong.. why do you need that?
09:49 < symeog> yeah..sleeping is not a good thing in node at leaast
09:50 < symeog> node runs in one process one thread one cpu always
09:50 < SomeoneWeird> never sleep
09:50 < SomeoneWeird> if you sleep
09:50 < SomeoneWeird> i will wake you
09:50 < SomeoneWeird> and slap you
09:50 < yawnt[uni]> with a corn
09:50 < yawnt[uni]> :|
09:50 < yawnt[uni]> yes, i'm hungry
09:50 < yawnt[uni]> DON'T JUDGE ME
09:50  * yawnt[uni] runs away
09:51 < pixie79_> in one of my libs i call an external program via a spawn, i need the next process in the calling script to block until i confirm the spawned process is running and has not died straight away with an error, but i dont see how to check if it is running
09:51 < symeog> come on guys don't be absolute like that…i maybe newcomer to node but i have programming experience and yes there are many uses of timers in a dal application
09:51 < SomeoneWeird> just check that stderr = null
09:52 < goku22> node the server runs in one process
09:52 < symeog> node doesn't do it all...
09:52 < goku22> but u could spawn children
10:17 < jwulf> you could assign the child process to a var and pass it to a checkAlive function.  The checkAlive function takes the next process as its callback. In checkAlive you check that stderr is null and that it hasn't exited. You could use a global flag that you set before spawning the original process, and clear on exit....
10:17 < jwulf> don't know if that's the best way to do it, but it's what I would try first
10:18 < SamKrew> Hello guys ! I've got this error while cross compilation "arm-none-linux-gnueabi-ld: bad -rpath option" . Google could not help me
10:18 < SamKrew> v0.8.12
10:21 < jwulf> SamKrew, you're cross-compiling node to run on ARM?
10:21  * jwulf notes that's way above his pay grade
10:21 < SamKrew> yes
10:21 < jwulf> raspberry Pi, perhaps?
10:22 < SamKrew> nope, synology
10:25 < yashodhan> Thank you everyone for helping me solve my problem :)
10:26 < jwulf> go the #node.js
10:26 < jwulf> SamKrew, have you had it working with a previous version?
10:28 < SamKrew> This is my first introduction to nodejs
10:35 < SamKrew> jwulf, got some error for version 0.8.11 and 0.8.12.
10:36 < SamKrew> jwulf, only with 0.8.8 compilation was finished without errors.
10:37 < jwulf> SamKrew, how far into the compilation does it go before you hit the error?
10:37 < SamKrew> last step - linking
10:38 < SamKrew> i mean, i get error while last step
10:38 < jwulf> mmm... i tried compiling 0.8.11 on my system
10:41 < SamKrew> jwulf, may i use 0.8.8 version ? Is it not big deal, right ?
10:41 < jwulf> SamKrew, should be ok
10:41 < jwulf> I couldn't compile 0.8.11:
10:41 < jwulf> https://github.com/joyent/node/issues/4079
10:42 < SamKrew> jwulf,  thx for help.
10:48 < ashnur> why is nodejs hosting this frickin hard?
10:49 < pixie79_> what is the best way to check if a system processes is running, all i have is its pid
10:49 < ashnur> there is nothing useful for me in the few resource i can find on the internet
10:49 < ashnur> they are all very different from my use case
11:01 < jwulf> ashnur, what's your gig?
11:04 < Net147> were there any major changes in Windows TCP handling between node.js 0.5.7 and 0.5.8?
11:06 < rendar> Net147: dunno, why? you noticed something wrong?
11:06 < Net147> rendar: https://github.com/joyent/node/issues/4165
11:08 < Net147> rendar: TCP connect time went from 0 ms to 172 ms
11:08 < rendar> Net147: strange
11:09 < ashnur> jwulf: gig?
11:09 < jwulf> ashnur, what are you trying to do?
11:09 < symeog> anyone here who had a solid OOP experience in JAVA, C# etc. maybe can give me hints on how to understand javascript prototypes and inheritance and generaly ho to change my way of thinking ? don't laugh at me pls…i need some serious answer. thank you.
11:09 < ashnur> i have a small debian vps with sysvinit, and I want to host a couple of small apps on different domains from it
11:10 < ashnur> i have trouble setting it up so that it restarts everything
11:10 < ashnur> i've found this https://raw.github.com/gist/715255/6e2bf21365ff888d388d6fdacb9d86cadbe85e2e/node_debian_init.sh
11:10 < guor> it's rather easy: in OO, if you call a method that's not defined in the class itself, you search the parent class
11:10 < ashnur> so i am trying with it right now
11:10 < guor> and if you dont find it there, you go up again to the grandparent
11:10 < guor> in JS, you go to the prototype
11:11 < Net147> rendar: maybe I should git bisect the issue...
11:11 < rendar> Net147: yeah why not
11:11 < deoxxa> Net147: can i just say thanks for being someone who takes the time to investigate their bug reports
11:11 < symeog> i really don't follow you: in OOP u can't have a method outside of a class
11:11 < SomeoneWeird> why the hell would the connect time be 0ms in the first place Net147 ?
11:11 < Net147> it's to localhost
11:12 < Net147> it's between 0ms and 15/16ms so maybe it's the timer granularity
11:12 < symeog> ok can u give me a quick example of Customer->Orders relation in JS ?
11:13 < symeog> and after that lets also make Customer inherit from person
11:13 < Net147> deoxxa: no problem.
11:14 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:14 < deoxxa> symeog:
11:14 < deoxxa> function Person(name) { this.name = name || "joe"; } function Customer(name) { Person.call(this); this.orders = []; } Customer.prototype = new Person();
11:14 < deoxxa> var customer_a = new Customer(), customer_b = new Customer();
11:15 < deoxxa> pretty easy stuff - easier than a lot of other languages (i'm looking at you, c++)
11:15 < symeog> ty deoxxa let me copy it to an editor and study it for a while pls
11:16 < deoxxa> symeog: there are other ways to do that - you can, for example, copy all of the prototype properties from one "class" onto another, thus locking the implementation of the child class to that of the parent class at the time of inheritence
11:16 < deoxxa> symeog: since you can still freely modify the parent class there and have it affect all child classes
11:16 < deoxxa> i.e. Person.prototype.get_age = function get_age() { return this.age; };
11:16 < deoxxa> then you can do customer_a.get_age()
11:17 < deoxxa> it's quite powerful
11:17 < aandy> as opposed to do customer_a.age ?
11:17 < deoxxa> oh that was just an example of adding something later on
11:17 < deoxxa> could be anything
11:17 < deoxxa> calculate_cat_love() or whatever
11:18 < aandy> i mean, in javascript, what is the advantage of using getter/setters?
11:18 < guor> i'd say none
11:18 < deoxxa> usually none, yeah
11:18 < aandy> i haven't seen it much, but did find a library a couple of days ago that did. had like 50 lines of that, and i couldn't for the life of me see why
11:18 < aandy> ah okay, good :)
11:18 < deoxxa> if you want to be able to hook into accessing properties, they're an easy way to do it
11:18 < deoxxa> accessing/modifying
11:19 < deoxxa> but for the most part they're unnecessary
11:19 < guor> it makes things hard to read really: you don't immediately see whether foo.bar is a function call or a property access
11:19 < guor> better is foo.bar() to make it really clear
11:20 < deoxxa> yeah
11:20 < deoxxa> implicit function calls are the devil
11:21 < guor> javascript is full of those btw
11:21 < aandy> devils?
11:21 < aandy> ;)
11:21 < guor> like toString and toJson calls
11:21 < deoxxa> heh yeah
11:27 -!- mbalho changed the topic of #Node.js to: node.js - used by people named Igor so you know it is serious
11:27 < Soarez> awesome!
11:27 < kranius> :o
11:31 < dileep> hello node.js
11:31 < dileep> hey after installing all tthings how i open express command line tool  terminal
11:32 < dileep> so that i am able to write ma commands
11:33 < dileep> tell me plz
11:33 <@mbalho> dileep: what do you mean by 'express command line tool'
11:33 < aandy> dileep: do you mean node shell or expressjs.org ?
11:33 < dileep> http://dreamerslab.com/blog/en/write-a-todo-list-with-express-and-mongodb/
11:34 < jetienne> global.__defineSetter__ is there a way to remove a setter which has been set ?
11:34 <@mbalho> dileep: whoa i didnt know express had a command line tool
11:34 < dileep> in this after installing all that how i open express command line tool  terminal to write that
11:34 < Soarez> dileep: you probably have to npm install -g express
11:34 < Soarez> the -g makes the cmd available
11:34 < dileep> yeah done that
11:35 <@mbalho> dileep: now type 'express', what happens
11:35 < dileep> destination is not empty, continue? 
11:36 <@mbalho> dileep: hit CTRL+C
11:36 <@mbalho> dileep: you have express installed it sounds like
11:36 < case__> Hi there. I've a problem trying to profile one of my apps: linux-tick-processor quit silently whatever I'm throwing at it. It seems it can't find d8 , and effectively there is no d8 in node's source tree... what can I do about that ?
11:37 < aandy> dileep: which step are you at? because what i'm reading, doesn't use an express shell. you install express, then do # express todo -t ejs (to create the project)
11:37 < dileep> yeah i have installed
11:37 < deoxxa> case__: you have to build d8 inside the deps/v8 directory of node (iirc)
11:37 < dileep> Steps Using express command line tool to generate a project bootstrap The default template engine is jade, we are going to use ejs in this example. 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 $ express todo -t ejs   create : todo create : todo/package.json create : todo/app.js create : todo/public create : todo/public/javascripts create : todo/public/images create : todo/public/stylesheets create : todo/public/stylesheets/style.css 
11:37 < aandy> should create a todo dir, which is the files you'll modify/write, and then run with node todo/app.js
11:38 < case__> deoxxa, and how am I supposed to do that ?
11:38 < ashnur> jwulf: still no luck
11:38 < deoxxa> case__: i can't quite remember off the top of my head, let me see if it's in my terminal history
11:38 < dileep> how i run tha code
11:39 < case__> deoxxa, there's no d8 rule in v8's makefile...
11:39 < dileep> and where i have to write that code
11:39 < deoxxa> case__: `scons v8' should do it
11:39 < jwulf> ashnur, take a look at forever
11:39 < deoxxa> case__: at least it did, at one point
11:39 < dileep> because i am working in ubunttu virtual box
11:39 < deoxxa> erm
11:39 < deoxxa> case__: `scons d8'
11:39 < jwulf> works well with ubuntu apparently, so it might be easy to adapt for debian
11:39 < case__> ha, thanks, i try
11:39 < guor> case__, there is. the makefile creates the "actual" makefile using gyp
11:39 < ashnur> jwulf: it's not about forever, the init script doesn't start my node app. 
11:39 < aandy> dileep: those are all terminal commands. open a terminal and navigate to the dir you did the "npm install" in (where your todo dir also is)
11:39 < guor> and that one builds d8
11:40 < case__> deoxxa, yey, compiling :) thanks!
11:40 < deoxxa> \o/
11:40 < guor> case__, just be aware that scons is being deprecated
11:40 < ashnur> jwulf: one must have a connection between nodejs and the operating system
11:40 < aandy> $ / # is slang for "this is a shell command"
11:40 <@mbalho> dileep: you only type the lines that start with $
11:41 < ashnur> jwulf: in my case, this isn't working as expected. i can't start one of the scripts autmatically at start
11:41 < case__> thanks, seeing Makefiles I was assuming make was used, haven't though about scons...
11:41 < dileep> yeah i know that
11:41 < jwulf> ashnur, can you use upstart?
11:41 < jwulf> http://howtonode.org/deploying-node-upstart-monit
11:41 < guor> case__, if you are compiling the v8 sources, just do a
11:41 < dileep> where i have to write the code $ express todo -t ejs  and in which terminal
11:42 < guor> $ make native
11:42 < jwulf> ashnur, otherwise, to pursue the method you are using - can you get your init script to do anything?
11:42 < jwulf> or is it not being called at all?
11:42 < ashnur> jwulf: no, i have sysvinit
11:42 < aandy> same terminal. any terminal that's navigated to where you want to make your project
11:42 < ashnur> jwulf: and yes, there are other js script it can start
11:43 < dileep> okkk i am using the nano editor..
11:43 < aandy> e.g.: # cd ~/Desktop, # express todo -t ejs
11:43 < jwulf> ashnur: what happens when you try to start node with it?
11:43  * guybrush_ whishes there would be a video-stream of nodedublin :/
11:43  * jwulf +1
11:43 <@konobi> Nexxy: any idea where dshaw is sitting?
11:44 < ashnur> jwulf: it starts.
11:44 < ashnur> https://gist.github.com/3917785
11:44 < ashnur> this is it btw.
11:44 < Soarez> konobi: middle left side
11:45 < jwulf> ashnur: the init script starts the node app? and the issue is that you want to get the pid?
11:45 < ashnur> jwulf: no, the issue is that i can start it manually, but the same init script which start other, more complicated scripts, it wont start this one
11:45 < case__> hmmm it still doesn't work, but i've to go... I'll be back, thanks for the help so far :)
11:46 <@konobi> ta
11:46 < jwulf> ashnur, so node is not the issue - this *particular* script is?
11:46 < dileep> aandy, how i Add .gitignore file to project root 
11:47 < ashnur> if I knew the exact issue, I would've solved already, this is going on for ages now. it can be anything
11:47 < aandy> using your favorite editor. make a file, write the content, save as .gitignore
11:47 < jwulf> ashnur, no, it cannot be anything
11:47 < jwulf> ashnur: it is one specific thing - you just need to isolate it
11:47 < jwulf> ashnur, here is what i would try:
11:47 < ashnur> jwulf: well. not anything, but I don't know what, so from my point of view it could be the planets or something
11:47 < Net147> rendar: deoxxa: looks like https://github.com/joyent/node/commit/d1e6a1317958ac3bcc252609d799aee11c50ca85 . need to bisect libuv too I guess.
11:47  * ashnur listening
11:48 < deoxxa> Net147: aw, ouch
11:48 < jwulf> ashnur,  mv that script to *.bkup, then put another script there that does something observable. Write to a file in /tmp
11:48 < Net147> deoxxa: there are only 18 commits from libuv
11:48 < Soarez> @robconery gave a talk to the msft folks on node.js, _withouth_ talking and to the sound of daft punk! https://twitter.com/robconery/status/213726052160241664 
11:48 < deoxxa> Net147: that's not so bad, i guess
11:48 < ashnur> jwulf: ok, i will try it
11:49 < jwulf> ashnur, or even just sit there in a loop, and then grep ps auxww to see it is / is not running
11:49 < jwulf> you may have an issue with environment or pathing
11:49 < jwulf> ashnur, since it is in an init script you won't see error output
11:49 < jwulf> ashnur, if you can redirect console.log to a file using a pipe you may get more information
11:49 <@Nexxy> konobi sorry no. i saw him comig in right as i left though
11:52 <@Nexxy> yw
11:52 <@Nexxy> j
11:55 < yawnt> Nexxy: when's your talk?
12:00 < Net147> deoxxa: regression caused by https://github.com/joyent/libuv/commit/2e4eca3b5e200171c3b446b53992aaac3f4106e7
12:00 < SoulRaven> recomand me a good mysql module
12:01 <@mbalho> node-mysql
12:01 < Net147> deoxxa: maybe I should git bisect c-ares now...
12:02 < SoulRaven> https://github.com/felixge/node-mysql
12:02 < deoxxa> Net147: down the rabbit hole!
12:02 < SoulRaven> this?
12:02 <@mbalho> SoulRaven: yep
12:03 < adrianlang> http://www.youtube.com/watch?v=TgoxAPm06QAJop
12:03 < adrianlang> Wrong channel, dammit
12:03  * deoxxa nods
12:06 < tetbert> anyone using deployd?
12:07 < tetbert> i don't have a question, just wonder if anyone else is using it
12:08 < wires> I'm running out of memory on a 16G machine parsing a ~300MB JSON file using JSONStream… wtf? FATAL ERROR: CALL_AND_RETRY_2 Allocation failed - process out of memory
12:12 < wires> Any thoughts…? This also occurs when I'm not doing anything: https://gist.github.com/3917933
12:12 <@Nexxy> omg i have a giant fof machine
12:12 <@Nexxy> fog*
12:12 <@Nexxy> mbalho
12:13 <@konobi> wires: ulimit?
12:13 < wires> hm, maybe, but why is the file kept into memory? it's streaming parsing, right??
12:14 < wires> also, ulimit: unlimited
12:14 < wires> something memory leaking? how "production" is JSONStream?
12:17 < wires> any alternatives to parse newline delimited json streams?
12:18 < SomeoneWeird> readFileSync
12:18 < SomeoneWeird> jks
12:19 < wires> err.. maybe, split on \n and then pass to regular json parser or something?
12:19 < SomeoneWeird> yerp
12:19 < wires> hrmz
12:19 < SomeoneWeird> then just push it back to an array or something
12:19 < wires> k
12:20 < wires> actually.. crap. I realise my input is NOT newline delimited, I think i have a giant dictionary and need to stream parse the keys
12:20 < SomeoneWeird> that might be why jsonstream is shitting up
12:20 < wires> this is probably why JSONStream is failing…
12:20 < SomeoneWeird> :P
12:20 < wires> exactly :)
12:21 < wires> frak
12:21 < SomeoneWeird> read it
12:21 < wires> dammit. Ok, but there are not proper "SAX" style streaming json parsers?
12:21 < SomeoneWeird> dunno
12:21 < wires> ie. emit parse events?
12:21 < SomeoneWeird> search.npmjs.org
12:21 < wires> thnlkx
12:21 < wires> thanks
12:23 < wires> https://npmjs.org/package/JSONStream that should work… maybe I installed this: https://npmjs.org/package/json-stream
12:25 < deoxxa> wires: clarinet
12:25 < deoxxa> wires: https://github.com/dscape/clarinet
12:25 < wires> deoxxa thanks!
12:25 < deoxxa> no problem :)
12:26 < wires> hm, but JSONStream is def. broken then..? I can see it slow down while parsing… eventually failing with out of memory
12:26 < wires> https://github.com/dominictarr/JSONStream <-- this one I mean
12:27 < SoulRaven> anybody know that are the diference between 0.9 and mysql@2.0.0-alpha3 for node-mysql
12:27 < deoxxa> SoulRaven: as far as i know, felix completely rewrote the mysql protocol parser for 2.x
12:28 < deoxxa> SoulRaven: and it's not considered stable yet
12:28 < deoxxa> wires: hmm maybe
12:28 < wires> ben, I'll test it a bit more and file a bug maybe
12:28 < wires> s/ben/beh/g
12:29 < deoxxa> wires: JSONStream does quite a bit more than SAX style parsing though
12:29 < deoxxa> wires: maybe it's just not good at what you want to do with it
12:29 < wires> deoxxa: yes, the stuff it does is quite practical. But actually I'm just parsing couchdb dumps.. which is what the example on it's github page does as well?
12:30 < deoxxa> ah
12:30 < deoxxa> hm
12:30 < wires> but maybe I'm just retarded..
12:30 < deoxxa> heh
12:30 < deoxxa> that's usually the problem for me :P
12:30 < wires> :) exactly, know thy self
12:30 < wires> lol
12:34 < SoulRaven> deoxxa: so is better to use 0.9?
12:35 < deoxxa> SoulRaven: for production, yes
12:40 < SoulRaven> deoxxa: i am still in dev mode mow
12:41 < deoxxa> maybe 2.x will be alright then
12:41 < SoulRaven> deoxxa: the sintax and methods are still the same?
12:41 < SoulRaven> and only changes are backend
12:41 < deoxxa> i'm not sure, i'm still on 0.9
12:42 < SoulRaven> deoxxa: how do you manage to workarround for connection status and connection error?
12:42 < deoxxa> i keep a connection pool, using https://github.com/Mog-Inc/easy-mysql
12:43 < olalonde> re: deploying from github… just cooked my home made solution: https://github.com/olalonde/nodehook feel free to use and contribute
12:44 < SoulRaven> deoxxa:  i want to use the same module in multiple other modules
12:44 < SoulRaven> but to have in the same time  a single connection created
12:50 < greelgorke> hi! i have an npm question. i have a dependency to a tarball, but the server requires authorisation. is it possible to pass the credantials, so npm can use then in install command?
12:56 < pixie79_> i have a problem that i keep sending data to my fifo before the other end is ready to recieve it - any ideas how i can delay output
12:57 < ashnur> hate it
12:57 < ashnur> why an init script runs for one script, but not for another?
12:59 < wires> ok, this is bullshit. The JSONStream library I guess isn't tested with big files. I'm taking exactly the example from the homepage and it fails with a memory error...
12:59 < wires> argh
13:02 < ashnur> lol
13:02 < ashnur> i wish i had these problems
13:02 < wires> ashnur, dude feel free to take them over from
13:02 < wires> me
13:03 < ashnur> not what i meant :)
13:03 < wires> :P
13:03 < ashnur> i don't think you are going to solve me this initscript issue i have
13:03 < wires> hm,
13:03 < ashnur> also, with streams the filesize shouldn't matter
13:03 < wires> hm /etc/init.d script?
13:04 < ashnur> yes
13:04 < wires> did you run update-initdb or something?
13:04 < wires> update-rc.d
13:04 < wires> http://embraceubuntu.com/2005/09/07/adding-a-startup-script-to-be-run-at-bootup/ <-- there
13:05 < wires> ashnur: and exactly, with streams file size shouldn't matter, I have some huge couchdb dumps to process but somehow JSONStream is leaking memory or something
13:05 < ashnur> dunno if it matters, but it's not an ubuntu
13:05 < wires> ashnur it works like this with most linuxs
13:06 < ashnur> ok, i will take a look
13:06 < wires> which distribution?
13:07 < ashnur> some debian
13:07 < ashnur> i guess it's not the latest
13:07 < ashnur> i hope that it was this stupid mistake
13:07 < wires> update-rc.d comes from debian
13:08 < wires> well, it that fixes your initscript issues, then how about you debug my streaming memory leak issue? ;)
13:08 < ashnur> might happen, i know i had a lot of initscripts i changed over time, and every one of them worked but this one
13:08 < wires> s/it/if
13:08 < ashnur> :)
13:08 < ashnur> which example?
13:08 < wires> ashnur: new scripts need to be registered using update-rc.d
13:08 < wires> existing you can just change
13:09 < wires> ashnur, well this https://gist.github.com/3917933 or that https://github.com/dominictarr/JSONStream/issues/22
13:09 < ashnur> yeah i know, let's see if i fucked it up anyways :)
13:09 < ashnur> nice nick
13:09 < wires> hehe
13:10 < gavri> anybody know how I can get vows to be more verbose when things go wrong?
13:10 < ashnur> wires: have you seen this? https://github.com/substack/stream-handbook 
13:11 < ashnur> it does it somewhat differently
13:11 < wires> yes.. but haven't looked into detail.. why? am I missing something?
13:11 < wires> ah
13:12 < ashnur> i am not that sure, but i trust substack, dunno why
13:13 < ashnur> also, there is this https://github.com/joyent/node/issues/2175
13:13 < wires> shit
13:13 < wires> that all doesn't sound good
13:14 < ashnur> why not just load the dumps into couchdb?
13:14 < wires> cause I need to get it OUT of couchdb :)
13:15 < ashnur> yes, but not through json :)
13:15 < ashnur> i mean, it's easier to get it in couch and work with it to port it over something else
13:16 < wires> I'm not sure what you mean. I need to do I/O which I cannot do in couch. I can of course get the document id by id, but this will take ages
13:17 < wires> and preferably i'd like to use the _changes stream
13:17 < ashnur> ah
13:18 < ashnur> i understand
13:18 < nezZario> i don't get it
13:18 < nezZario> i truely do not get it 
13:18 < ashnur> :))
13:19 < nezZario> ok, so my app doesn't 'block' in node.js so it's fast
13:19 < nezZario> yadda yadda .. i get it, it's event driven
13:20 < nezZario> so, what happens when my 10-second long callback fires?  is it ran in a different thread?  i thought node.js was pretty much a straight path of execution as so many tutorials state which is why callbacks are used ?
13:21 < ashnur> wires: i might want to find out if it's really the JSONstream module or something else 
13:21 < wires> there is an event loop waiting for events to process
13:22 < wires> your callback fires an event and this is picked up by the "loop"
13:22 < wires> roughly
13:22 < spion> nezZario, 10 seconds of CPU time?
13:22 < wires> ashnur: yes i'm curious
13:22 < nezZario> spion: just quoting from nodebeginner.org where they put a theoretical sleep(10) 
13:23 < wires> nezZario, spion: ohh 10 seconds cpu .. that is not good
13:23 < wires> nezZario: sleep doesn't use cpu
13:23 < wires> oh
13:23 < wires> no it does.. sorry .. lalalala
13:23 < wires> (blocks thread)
13:23 < nezZario> i'll be back in 20 minutes at work
13:23  * wires shuts up right now
13:23 < spion> a theoretical sleep(10), need more information
13:24 < spion> For example if you're using fibers, that theoretical sleep would not block
13:24 < spion> If you're not using fibers (or streamline, or similar), there is no sleep. theoretical or real.
13:25 < spion> of course, there is busyWait.
13:28 < spion> the author of that book should really rename that function to busyWait.
13:30 < spion> semantics aside, there are ways to do CPU intensive tasks inside threads.
13:30 < spion> e.g. threads_a_gogo
13:31 < spion> alternatively you can spin up workers and assign them CPU intensive tasks via hook.io or dnode or whatever you may fancy.
13:32 < deoxxa> there's also https://github.com/ErikDubbelboer/node-sleep which is totally a good idea to use
13:32 < spion> generally I think its accepted that if you have a CPU-intensive task, and you're doing it in the web server process, you should off-load it somewhere else.
13:35 < spion> but V8 is very fast, and using multiple workers (e.g. 8 for quad-core) to serve requests means that even those few oddball requests that are sometimes CPU-bound will not reduce throughput 
13:36 < spion> and if *all* your workers are doing oddball requests at the same time, you probably have a performance problem that can't be solved with threads.
13:36 < spion> (instead you probably need either optimization/bugfixing or more servers)
13:38 < spion> finally, if managing multiple node worker processes sounds too complicated, check out https://github.com/doxout/stractory :)
13:38 < spion> or substack's fleet, zygote
13:39 < spion> ... seaport, airport
13:42 < deoxxa> seaport is cool
13:43 < wires> nice lib stractory
14:02 < zastaph> I installed nvm as says here on ubuntu: http://stackoverflow.com/questions/8108609/install-multiple-version-of-node-js-using-nvm-ubuntu yet I get "bash: [: too many arguments" when .bashrc runs nvm.sh
14:02 < zastaph> it can install a node version, but fails on other stuff like nvm ls
14:08 < hemanth> is there a way to get all the npm packages available in JSON format?
14:09 < spion> yes, https://registry.npmjs.org/-/all
14:12 < hemanth> spion, sweet!
14:15 < hemanth> npm install x; works fine, in REPL require('x') bombs 
14:16 < hemanth> what am i missing :(
14:16 < context> what is x
14:16 < context> nm
14:16 < hemanth> context, any package 
14:16 < context> hemanth: works here
14:16 < context> with the actual package x
14:17 < hemanth> context, ha ah, I think an install in npm init floder, will install the stuff in node
14:17 < hemanth> _modules 
14:19 < context> thats where its suppose to go...
14:20 < zastaph> it seems my custom .bashrc messes with nvm.sh somehow.. i suspect because i already set a local uname variable
14:20 < context> hemanth: npm install without a package.json still installs into node_modules
14:20 < context> hemanth: thats where they always get installed
14:21 < hemanth> context, is some folders i have this issue! strange
14:22 < context> hemanth: http://pastie.org/5084270
14:22 < Xeon06_> Hey guys
14:22 < Xeon06_> I need to write to a file when a user does something, and theres the possibility of many users doing it at the same time
14:22 < Xeon06_> How can I ensure I don't lose data?
14:23 < context> make backups frequently
14:23 < context> in multiple places
14:23 < hemanth> context, I have a node code in /usr/local/bin; it can't pick up x
14:24 < hemanth> even though i did npm install -g x
14:24 < context> heh
14:24 < hemanth> :|
14:24 < hemanth> Xeon06_, use streams 
14:25 < context> hemanth: you should setup your package.json properly so you can npm -g install whatever this is, and let npm handle symlinking your code properly and it will find what it depends on
14:26 < context> hemanth: -g install doesnt mean 'accessible anywhere'. it should only be used (mostly) for install packages that have cli tools with them
14:26 < Xeon06_> hemanth: That's what I was thinking, but will it flush the file automatically after a certain time?
14:26 < hemanth> Xeon06_, why will it?!
14:27 < hemanth> context, yes I do get -g thinge, but unable to understand why node is not picking up the packages 
14:27 < Xeon06_> hemanth: I don't know, I'm not familiar with they're workings. If I flush it after every request would that cause problems you think?
14:29 < hemanth> Xeon06_, flushing would....but are you trying to do  built a Real-time Collaborative Editor kina stuff?
14:30 < hemanth> context, hmm
14:30 < context> hemanth: cause you put your script in /usr/local/bin i imagine, thats not what npm does when you use it to properly install a package with a cli command
14:31 < context> hemanth: you need to put your script IN a package, THAT package needs to have an entry in package.json for said command script, THAT package needs to depend on x, you npm -g install THAT package, and npm will install x INSIDE that package as it depends on it
14:31 < hemanth> context, that matters?
14:32 < context> hemanth: this just goes to show you dont understand -g install
14:32 < Dofs> Hi experts, I am trying to learn node.js. I have setup a solution with express and phantomjs, but I have an issue in the controller action. I try to do require('webpage').create(), but I get a 500 exception (cannot find the module 'webpage'). Does anyone have an idea what might be wrong?
14:32 < context> -g install DOES NOT mean "accessible everywhere"
14:32 < purr> context: The Shift: Moving Towards App-Centric User Interface's ... <http://webdesign.tutsplus.com/articles/design-theory/the-shift-moving-towards-app-centric-user-interfaces/>
14:32 < hemanth> context, "Your installment procedure should place your CLI program in a location made accessible by the PATH variable. If users install your program with the NPM -g option, your program will be in the path.
14:32 < hemanth> "
14:32 < hemanth> is what I read :)
14:33 < SomeoneWeird> context, yes it does...
14:33 < Xeon06_> hemanth: No, its more of a vote thing. I need to write votes to a CSV file, but there could be many votes cast at the same time
14:33 < context> hemanth: If users install your program with the NPM -g option
14:33 < hemanth> context, I was asking about /usr/local stuff 
14:33 < context> hemanth: did the user install YOUR package using npm -g ?
14:33 < context> no you are putting the script in /usr/local/bin manually
14:33 < hemanth> Xeon06_, you can do that with a simple httpserver
14:34 < context> xeon06_: why not use a database of some sort?
14:34 < hemanth> :|
14:34 < Xeon06_> hemanth: The part I'm worried about is the file writing. If two votes come in at almost the same time, can't it possibly overwrite and lose a vote?
14:34 < hemanth> save the http request to a json.file 
14:34 < Xeon06_> context: To simplify things. But I'm now realizing it doesn't really seem to
14:35 < hemanth> Xeon06_, no that wont happen 
14:35 < hemanth> that's where the event loop wins!
14:35 < Xeon06_> I understand that it's not threaded for each client right
14:35 < Xeon06_> But if it's async
14:35 < Xeon06_> Can't one request finish faster than the other
14:35 < Xeon06_> And thus overwrite it?
14:36 < context> xeon06_: if you are running only 1 single node instance you should be fine.
14:36 < context> xeon06_: not if you only have the file open once.
14:36 < hemanth> :)
14:36 < context> since its single thread, only one request can write to the file at once unless you are writing a lot
14:37 < context> xeon06_: heh, mongoose is hard?
14:38 < hemanth> npm install <TAB_COMPLETION> ?
14:38 < hemanth> Edit
14:38 < hemanth> Xeon06_, no two things can happen at the same time ;)
14:39 < Xeon06_> This is so counter intuitive to me
14:39 < context> xeon06_: its not the request that matters
14:40 < context> who cares if one request is open for 2 seconds, and one is open for 5 minutes
14:40 < Xeon06_> I miswrote that
14:40 < generalissimo> if you give a shit about guaranteed order, transactions, and whatnot
14:40 < Xeon06_> I meant the callback for the file write
14:40 < generalissimo> use a damn relational database
14:41 < generalissimo> mongo is for playing fast and loose
14:41 < Xeon06_> I'd need to find something like SQLite that doesn't need another server running
14:41 < deoxxa> > use a damn relational database
14:41 < deoxxa> this
14:42 < Xeon06_> Haha okay okay
14:42 < Xeon06_> Still interesting to understand the way Node works for that though
14:42 < generalissimo> although i must admit, the ORM options for node aren't great at this point
14:43 < deoxxa> ORM's are pretty bad period
14:43 < hemanth> Xeon06_, use json.db
14:43 < spion> yeah ORMs suck. thats not what the oo founding fathers had in mind
14:43 < brianc> deoxxa: agreed
14:43 < hemanth> reddis is fun
14:43 < deoxxa> they have their place in CMS-ville, i guess
14:43 < generalissimo> know what sucks more than ORM?
14:43 < brianc> generalissimo: starvation
14:43 < deoxxa> broken orm?
14:43 < hemanth> http://redis.io/
14:44 < generalissimo> interspersing SQL with your code
14:44 < aandy> redis is a server, isn't it? not a sqlite alternative 
14:44 < spion> you know what sucks less? using sweet.js to build SQL :)
14:45 < mscdex> you know what sucks more? no coffee
14:45 < deoxxa> generalissimo: hrrmmm i guess if you're just littering it everywhere, sure
14:45 < generalissimo> ungh, sweet.js bothers me
14:45 < spion> generalissimo, why?
14:45 < Xeon06_> There's a couple of SQLite stuff on this page https://github.com/joyent/node/wiki/Modules
14:45 < generalissimo> "do you know javascript? NOT ANYMORE!" --dev whose code you'll have to maintain some day
14:46 < context> xeon06_: nStore
14:46 < deoxxa> Xeon06_: npmjs.org is a better module list
14:46 < spion> Ah, no. Macros should be few and far between and written by a person who documents everything and can write a syntax highlighter for his macros :)
14:46 < context> http://thechangelog.com/post/807837625/nstore-easy-database-written-for-node-js-in-node-js
14:46 < Xeon06_> Ohhh I'd forgotten about nStore!
14:47 < generalissimo> spion: yeah you know that's not what'll happen though
14:47 < mscdex> macros in javascript makes me cringe
14:47 < Xeon06_> Ah that's exactly what I'm looking for I think
14:47 < context> why not use an extremely simple db written in node. no extra server. no wondering if you are gonna overwrite parts of a file 
14:47 < mscdex> but then again so does coffeescript and anything else that requires a compile step :p
14:47  * deoxxa nods
14:47 < aandy> i like to use graph dbs in node, because then i have nodes in node #meta
14:47 < hemanth> context++
14:48 < spion> Macros are exciting because they allow you to remove boilerplate.
14:48 < pixie79_> i have written a basic tcp server which was working earlier but i have been tweaking it and now it does not start to listen, no errors given -> https://gist.github.com/3918592
14:49 < Xeon06_> context: Thanks for the link
14:49 < spion> e.g. in sweetjs you could write in about ~500 lines a macro that transforms regular style to CPS
14:49 < Xeon06_> Thanks everybody for the helpful tips
14:50 < spion> though, it would be ideal if it were a true part of the language and available at run-time
14:51 < context> pixie79_: un-tweak it
14:52 < brianc> pixie79_: your fifo.create callbacks aren't firing by the time your code on line 38 is being hit.  You need to use an async library to manage that (or just nest the callbacks)
14:52 < context> pixie79_: listen never gets called
14:52 < pixie79_> context - yep i really must start using git so i can roll back my tweaks
14:53 < context> you have server.listen() INSIDE the connection listener which will never get called if you are not listening
14:53 < brianc> fifoin_created & fifoout_created will always be 0 because process_fifoout.on('exit') will always fire AFTER the if check
14:53 < brianc> yeah definitely also what context said too. ha
14:53 < context> redundent requirement is redundent
14:53 < pixie79_> brianc: context thanks, 
14:57 < astropirate> All dressed up an nowhere to go :(
14:59 < brianc> astropirate: story of my life
14:59 < astropirate> brianc, we should be friends
14:59 < astropirate> virtual internet friends
14:59 < astropirate> :D
14:59 < brianc> astropirate: I'm totally down with that
14:59 < astropirate> But not kidding
14:59  * brianc gives astropirate virtual high five
14:59 < astropirate> i'm literally wearing a suit in my bed room on my computer
14:59 < astropirate> HAHA
15:00 < brianc> astropirate: that's cool. whenever I wear a suit I feel like I'm a big shot
15:00 < astropirate> hell yah
15:00 < astropirate> i get soo many business card
15:00 < astropirate> some guy was trying to sell my marceratti's
15:00 < astropirate> little did he know i'm dirt broke
15:00 < astropirate> lol
15:01 < technocrat> i'm coding in a suite sometimes too
15:02 < astropirate> I'm trying my hands at cold calling :)
15:02 < astropirate> thought whats the worst that can happen
15:02 < astropirate> the best that can happen is I have a new client and my referal network grows
15:02 < brianc> astropirate: cold calling for consulting gigs?
15:03 < astropirate> brianc, well I'm looking at small business that would greatly benifit from having an online presence
15:03 < astropirate> but yah
15:03 < astropirate> consulting
15:04 < EhevuTov> astropirate, make a night of it
15:04 < astropirate> :)
15:05 < astropirate> up up and away
15:06 < Dofs> Is it possible to run a command like "phantomjs mytest.js helloworld" from a expressjs controller action?
15:06 < brianc> mind blown. just found out my new virtual friend can fly.
15:06 < brianc> Dofs: yes. look at the `child_process` documentation in the node docs
15:07 < Dofs> thanks brianc
15:07 < brianc> :thumbsup:
15:08 < jhsto> Does anyone come up with a solution to share variables with server and client besides websockets?
15:09 < brianc> jhsto: ajax!
15:10 < xonev> jhsto: rpc!
15:10 < brianc> jhsto: quantum entanglement!
15:11 < pixie79_> brianc: context: i have think i have fixed the listener, but i am out of water on the async, i have attempeted it and get no errors but again i think the check to see if my fifos exist is happening before they do - https://gist.github.com/3918592
15:11 < pixie79_> can you give me some more advise there please ?
15:11 < jhsto> brianc: ajax really does not fit into my solution so i think ill see what RPC can do for me, as xonev suggested
15:11 < jhsto> thanks guys
15:11 < context> pixie79_: console.log is one of the best debugging tools that exists
15:12 < brianc> pixie79_: https://gist.github.com/3918741
15:12 < brianc> something like that
15:13 < brianc> i am sorry for the whitespace mucking - i edited it quickly in the browser so i didn't tab things 
15:13 < brianc> but see how one thing happens in the callback of the last thing? at that point you don't really need async
15:14 < brianc> i mean that code i sent is still not correct really
15:14 < brianc> it'll take me more time than i currently have to explain
15:14 < brianc> but try doing 1 thing at a time and putting a bunch of console.log's in like context said
15:16 < pixie79_> ok thanks
15:16 < Industrial> Anyone know of a nice way to do fixtures for mongodb databases? I've tried just sticking them into JSON files but when you need to reference to different collections through objectID's then you need those Id's generated, so you end up with a dependancy tree of fixtures in order of which needs to be inserted first (to fetch the id).
15:19 < Dofs> brianc would it be possible to spin up e.g. 100 child_processes on a laptop?
15:19 < brianc> Dofs: yea
15:20 < Dofs> excellent, thanks
15:25 < MI6> joyent/libuv: Fedor Indutny master * 209abba : unix: avoid iterating over all async handles - http://git.io/BS2zqw
15:48 < CoverSlide> Saw a werewolf with a Chinese menu in his hand, walking through the streets of Soho in the rain, he was looking for a place called Lee Ho Fook's, going to get a big dish of beef chow mein
15:49 < deoxxa> cool story bro
15:50 < SomeoneWeird> wat
15:51 < CoverSlide> 100% true
15:54 < n20> hi, does anybody used node.js with drupal here?
15:54 < deoxxa> wat
15:55 < case__> n20, you can't do that
15:55 < case__> (and, "wat" too)
15:55 < CoverSlide> case__: there's a node.js plugin for drupal
15:55 < generalissimo> lol
15:56 < generalissimo> lolololol
15:56 < deoxxa> n20: what do you mean, exactly? drupal is a php thing, node has its own runtime. how do you want them to work together?
15:56 < case__> CoverSlide, ok, makes more sense :)
15:57 < generalissimo> http://drupal.org/project/nodejs O_O
15:57 < generalissimo> whyyyyy
15:57 < deoxxa> wow
15:57 < case__> generalissimo, because they can :)
15:57 < deoxxa> that's... scary
15:58 < generalissimo> drupal is scary on its own
15:58 < shinaku_> drupal is like a remote shell, with the added feature that it is a cms
15:58 < n20> im using that plugin/module allready for some simple tasks... the developer of that module uses a mysq plugin.. i would like to do that also. just wondering how
15:59 < deoxxa> n20: well, there's a bunch of options for using mysql from node
15:59 < deoxxa> n20: it'll be easier if we ignore the whole drupal part, since it's doubtful many people will know how it operates
15:59 < CoverSlide> well there's only one vetted mysql module
15:59 < deoxxa> CoverSlide: sure, but there's a few wrappers around it as well
16:00 < case__> I'm still having trouble compiling d8 . i'm now up to this : when i type scons d8 in deps/v8 , compilation fails with a bunch of "/usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-linux-gnu/4.4.3/libstdc++.a when searching for -lstdc++" , any idea ?
16:00 < deoxxa> n20: https://npmjs.org/package/mysql << this is the main mysql module everyone uses - there are convenience wrappers for pooling and such as well, should you want any of that kind of stuff
16:00 < deoxxa> n20: keep in mind that programming in node is very, very, very different to programming in php
16:01 < deoxxa> n20: so you're not going to be able to reuse a lot of (or any) php code
16:01 < deoxxa> n20: and things are going to work very differently to what you're used to
16:02 < deoxxa> if that hasn't scared you off, though, good!
16:02 < n20> i have the mysql package installed allready. in a standalone test i got it working nice. for some reason i cant get it working in that drupal module... but i see that the developer of the module got a mysql package working...
16:02 < deoxxa> well, i personally have no idea how that drupal thing works (nor do i want to find out), so you might be on your own there
16:03 < deoxxa> unless someone else in here happens to know
16:03 < CoverSlide> n20: any chance people in #drupal know?
16:03 < astropirate> HAA
16:03 < broofa> Anyone know why a minimal node+express app running on my MBP, serving no traffic, would be consistently running at 10-15% CPU? 
16:03 < astropirate> that would be a nice change
16:03 < n20> they reffered me here :)
16:03 < CoverSlide> ic
16:03 < deoxxa> n20: well, we'll definitely be able to help you with node problems/questions
16:04 < deoxxa> n20: but anything to do with that plugin is probably better directed at the maintainers of it
16:04 < n20> ok... anyway.. thanks so far for your support...
16:07 < nicolaas_> what's the recommended way for making a deep copy of an object? Is it really JSON.parse(JSON.stringify(obj)); ?
16:08 < SomeoneWeird> https://npmjs.org/package/jsprim
16:10 < pixie79_> getting a new error now i dont understand - https://gist.github.com/3918592 error: throw new Error('addListener only takes instances of Function'); seems to be related to lines 16/17
16:12 < CoverSlide> nicolaas_: i wouldn't. there's the clone module, or you can roll your own
16:12 < SomeoneWeird> pixie79_, change line 16 to makefifo.on('exit', function (code) {
16:12 < nicolaas_> is this https://github.com/pvorb/node-clone ?
16:12 < SomeoneWeird> and line 25 to });
16:12 < deoxxa> pixie79_: ... typo, dude
16:12 < CoverSlide> yeah
16:13 < nicolaas_> thx CoverSlide
16:15 < pixie79_> dah i see it not - thanks
17:05 < Industrial> https://gist.github.com/52ccc0e98f659271a9ad How do I ensure the callback (that) on line 17 gets called only after all callbacks have fired? in my case I'm getting 0 1 3 2 from line 14
17:05 < Industrial> so it would fire on 3 when 2 is not yet done.
17:07 < niggler> go to #coffeescript or w/e
17:07 < context> whats 'that'
17:09 < Industrial> context: a callback with one error parameter
17:09 < Industrial> (DAT ERROR)
17:09 < Industrial> anyway, yeah ill move to #coffeescript
17:10 < jhsto> You guys know is it possible to add jade interpolation inside script tags?
17:14 < CoverSlide> jhsto: jade works on strings. you can get a script tag, give it an id, then pass to it the innerHTML of that script tag element
17:14 < zezikaro> hi does anyone know if it's possible to run nodejs on the osgi framework
17:16 < CoverSlide> zezikaro: isn't that java-only? 
17:16 < CoverSlide> i don't know what the internals are, but doesn't it comprise of a bunch of calls to java classes?
17:17 < zezikaro> CoverSlide yeah, but it can interact with the JNI
17:17  * CoverSlide shudders
17:17 < zezikaro> so i wondered how well that would work
17:18 < zezikaro> CoverSlide I actually have a good reason why I want to do that
17:19 < zezikaro> I was thinking of wrting an integration framework with nodejs
17:19 < CoverSlide> well you'd have to embed node as a library then
17:19 < zezikaro> which would be /very/ awesome
17:19 < CoverSlide> and i don't think that's ever been a goal ootb
17:19 < CoverSlide> so you'd have to figure that part out sourself
17:19 < CoverSlide> *yourself
17:20 < CoverSlide> honestly, probably would be better running node as its own app, then using your java server as a proxy
17:21 < zezikaro> ootb?
17:21 < CoverSlide> probably would be much easier to do that way instead of trying to embed it into the JNI
17:21 < CoverSlide> out of the box
17:22 < CoverSlide> you might try embedding v8
17:22 < CoverSlide> but there's always rhino if you want a js library
17:23 < zezikaro> CoverSlide I'll try the proxy idea
17:23 < zezikaro> thanks
17:27 < jhsto> CoverSlide, Sorry for the delay, but thank you again. It seems to work now :)
17:29 < TooTallNate> Benvie: is there a C API for windows to interact with COM interfaces?
17:31 < mateodelnorte> has anybody used mocha to test client-side code using browserify / dnode?
17:41 < kppullin> So i'm trying to come up with a non-kludgy solution for this problem:  i'm attempting to batch process millions of lines of a text file and insert them into posgres.
17:41 < kppullin> Reading the lines is much faster than inserts to the DB, so I ran into memory exhaustion.
17:41 < kppullin> Solved this by keeping a counting semaphore that is incremented/decremented upon the start/completion of each insert. When slots open up I read another single line.
17:42 < kppullin> This works, but I get the sense that a library like 'async' or 'fibers' could hide this away from me.  Am I heading down the wrong path?
18:43 < MiracleBlue> Ahoy!
18:45 < mscdex> yo!
18:45 < MiracleBlue> Sup?
18:46 < mscdex> nodin'
18:47 < CoverSlide> soup?
18:47 < MiracleBlue> Chicken soup.
18:49 < mscdex> actually, i do have soup here too
18:49 < MiracleBlue> :O
18:49 < MiracleBlue> I could totally go for some soup
18:49 < mscdex> who wouldn't?
19:01 < ksmth> hey guys, I'm currently looking at deployment tools … what are you using?
19:03 < resure> ksmth: you'll wonder, but I use capistrano
19:03 < ksmth> I don't wonder at all, because that's what I'm currently evaluating
19:09 < shikharraje> Doubt in using mongoosastic in Node.JS
19:09 < robinson_k> hi
19:09 < shikharraje> Hello
19:09 < shikharraje> So, I'm using this module called mongoosastic to implement elasticsearch on a MongoDB...
19:09 < shikharraje> But am running into a lot of errors...
19:10 < robinson_k> is anyone using geddy.js and can tell if there is a difference between the types string and text? looked into the models project and getty itself, looks like it is the same.
19:10 < chapel> shikharraje: what kind of errors?
19:10 < shikharraje> http://stackoverflow.com/questions/12275635/elastic-search-not-returning-desired-result
19:10 < shikharraje> Something along these lines...
19:10 < robinson_k> https://github.com/mde/model/blob/master/lib/datatypes.js#L74-L96
19:11 < shikharraje> I wanted to use filters from Elastic Search using Mongoosastic...
19:12 < shikharraje> @chapel: Also, here...
19:12 < shikharraje> https://github.com/jamescarr/mongoosastic/issues/39
19:12 < shikharraje> Even he has tried to use filters on mongoosastic, with no results...
19:13 < shikharraje> Anyone?
19:15 < chapel> shikharraje: sorry was looking at my implementation
19:16 < shikharraje> So, any help???
19:17 < chapel> shikharraje: here is my use of filters https://gist.github.com/e50150db04779a8cc166
19:18 < shikharraje> @chapel: And you have used mongoosastic for running this query???
19:18 < chapel> yep
19:18 < chapel> you can check it out at https://teelaunch.com the search is powered by mongoosastic
19:19 < shikharraje> @chapel: Could you please help me walk through the code for the query???
19:19 < chapel> well
19:20 < chapel> what I can tell, you have filtered/filter in query
19:20 < chapel> or whatever
19:20 < Topcat> http://expressjs.com/ down ?
19:20 < shikharraje> Okay...
19:21 < chapel> notice how I have query and filter as base properties?
19:21 < shikharraje> @chapel: Sorry, base properties?
19:21 < drudge> Topcat: yes
19:21 < chapel> { query: {}, filter: {} }
19:22 < chapel> obj.query obj.filter
19:22 < chapel> instead of obj.query.filter
19:22 < shikharraje> Right, okay..
19:22 < chapel> drudge: no bueno
19:23 < drudge> sup chapel
19:23 < chapel> not much
19:23 < chapel> anything new?
19:23 < langworthy> Topcat: GitHub pages is down at the moment https://status.github.com/
19:23 < resure> ddos again?
19:23 < drudge> chapel: nah, just noding
19:23 < chapel> :(
19:24 < chapel> drudge: same here
19:24 < Topcat> oh thanks  guys
19:33 < therealkoopa> I'm trying to take a mongo stream and pipe it to a response. If I do s.on('data'), it works. But if I pipe it, I get TypeError: first argument must be a string or Buffer. Any ideas how to figure out why?
19:35 < shikharraje> @chapel: Some more problems. Are you there?
19:35 < shikharraje> Same issue
19:35 < chapel> yeah
19:35 < shikharraje> Can you see this Gist? https://gist.github.com/3920183
19:35 < chapel> yeah
19:35 < timeturner> any socket.io guys in here
19:35 < shikharraje> That is where I tried to use the filter inour code
19:35 < shikharraje> *in our
19:35 < timeturner> I'm trying to figure out how I can have the client send a message to a specific room that they are subscribed to
19:35 < brianc> i know some socket.io
19:36 < shikharraje> The error is SyntaxError Unexpected Token
19:36 < timeturner> but it looks like the room functionality is only for broadcasting to a group of clients from the server
19:36 < chapel> in the application code?
19:36 < shikharraje> Yes
19:36 < shikharraje> app.js
19:36 < shikharraje> THe error comes when I run "node app.js" in the console...
19:36 < chapel> shikharraje: its because your object isn't complete
19:37 < chapel> you have {query: req.body.query, filter: {and: [{location: req.body.location}]}
19:37 < shikharraje> Right...
19:37 < chapel> the problem is you need another }
19:37 < chapel> should be {query: req.body.query, filter: {and: [{location: req.body.location}]}}
19:38 < chapel> to better show { query: req.body.query, filter: { and: [{location: req.body.location}] } }
19:38 < chapel> you're missing the last curly bracket
19:41 < shikharraje> @chapel: Thanks very much... The code compiles now, but am not getting the expected output...
19:41 < chapel> not sure what you expect there?
19:41 < chapel> did you make sure your data is being mapped right?
19:42 < shikharraje> Well, I was running the code without the filter before this, and that time, I could get the results that I needed...
19:42 < shikharraje> I wanted to filter by location, and was trying to write code for that...
19:43 < shikharraje> That doesn't seem to work...
19:43 < timeturner> brianc: any ideas?
19:44 < shikharraje> @chapel: https://gist.github.com/3920265
19:44 < shikharraje> The first few lines are our schema on MongoDB...
19:44 < shikharraje> The last few lines is the query that we are trying to run...
19:45 < chapel> shikharraje: do filter.and.term.location
19:45 < shikharraje> It is supposed to be a jade page with a search box, where a user enters a query... On the same page, he selects location from a drop-down menu
19:45 < chapel> instead of filter.and.location
19:48 < brianc> timeturner: not chure 
19:48 < shikharraje> MANY, MANY THANKS, @CHAPEL!!! The code works perfectly, now...
19:48 < shikharraje> :-)
19:49 < chapel> shikharraje: :)
19:49 < shikharraje> But, if you're not too busy, could you please explain what was wrong with the syntax? How does and.term function from and?
19:49 < chapel> well
19:49 < chapel> its an elasticsearch query thing
19:49 < chapel> term is for direct queries
19:49 < chapel> like this field should equal this value
19:50 < shikharraje> Oh, I see, so since we were using a drop down menu, what we REALLY needed was term...
19:50 < shikharraje> So, I guess a simple "and" (without .term) would just search for a partial match?
19:51 < James23> hey guys
19:51 < James23> what is the fastest templating engine that supports caching etc
19:51 < chapel> well
19:51 < chapel> and is for grouping
19:52 < chapel> like filter: {and: [{term: {location: 'location'}}, {term: {public: true}}]}
19:52 < chapel> so and will only return if both the location = location and public is true
19:53 < chapel> once elasticsearch documentation is back up you should read it
19:53 < shikharraje> Oh, I see... Grouping multiple OTHER conditions on the query...
19:53 < shikharraje> Wow...
19:53 < shikharraje> This clears things up very well..
19:53 < chapel> so for one thing
19:53 < chapel> you don't need and
19:53 < shikharraje> Right...
19:53 < chapel> could just do filter.term.location = 'location'
19:54 < shikharraje> Yes, of course, since we're not using multiple conditions...
19:54 < chapel> es query syntax can be difficult
19:54 < chapel> Ive thought about making a query builder
19:55 < shikharraje> That would be a MAJOR help... Or, even a blog where you explain differences like right now...
19:55 < James23> any templating engine built without regexes in node?
19:56 < chapel> shikharraje: I'm not an expert, just had experience getting it to work
19:56 < chapel> mongoosastic is really simple
19:57 < chapel> and makes it easy to bind your mongoose data to es
19:57 < chapel> the query stuff is all es
19:59 < shikharraje> Yes, we thought the same... We went through the ES documentation here: http://www.elasticsearch.org/guide/reference/query-dsl/and-filter.html but were not sure about the functionalities... Like right now, you explained how "terms" was supposed to work, that cleared it all right up...
20:00 < shikharraje> If I could bother you a little more...
20:00 < shikharraje> @chapel
20:00 < shikharraje> Could you please advise on getting partial word search into ES???
20:00 < chapel> umm, sure
20:00 < shikharraje> For example, if my query has "foobar", a search for "foo" returns no results...
20:00 < plato> i have a search form, is there a way to make the submit button put my arguments in the query string instead of the request body, without using javascript?
20:01 < shikharraje> What if I wanted to return "foobar" for "foo", as well??
20:01 < plato> i.e. i want clicking submit to take the user to /search?query=foo
20:01 < plato> instead of /search with req.body.query=foo
20:01 < shikharraje> We had an initial idea about using the "natural" module in NPM, it had some stuff about tagging and all, what would you say???
20:01 < chapel> plato: make it a standard form with input
20:02 < chapel> and <input type="text" name="query" />
20:02 < chapel> plato: when you submit or whatever, it will just append to the url
20:04 < chapel> plato: https://gist.github.com/3920357
20:04 < plato> chapel: ah I guess method='get' puts it in query string while method='post' puts it in body?
20:04 < chapel> shikharraje: es supports that
20:04 < chapel> plato: correct
20:04 < plato> rgr ty
20:05 < chapel> forms by default do get requests
20:05 < shikharraje> @chapel: It doesn't seem to be working for me... Is there something specific to mongoosastic that I would have to do to get that functionality??? Some command???
20:06 < CoverSlide> you can have query string params in a form if you do a POST request btw
20:06 < chapel> shikharraje: well
20:06 < chapel> you can do query.wildcard = 'foo*'
20:06 < Aartsie> hi all
20:06 < chapel> shikharraje: that will tell it to look for foo with a wildcard
20:07 < chapel> http://www.elasticsearch.org/guide/reference/query-dsl/wildcard-query.html
20:10 < Aartsie> how can i run a script on the server without having a terminal connection ?
20:14 < txdv> there is a detach option at least on libuv
20:14 < tjmehta> anyone know of any good webdav modules for node?
20:15 < txdv> node-webdav
20:15 < txdv> just kidding
20:15 < txdv> put node- in front everything and you have a 2 years old project
20:16 < CoverSlide> https://github.com/ajaxorg/jsDAV
20:17 < niggler> node-ice
20:19 < EhevuTov> is there a motivation (besides boredom/immaturity) to DoS'ing github?
20:19 < CoverSlide> EhevuTov: probably not
20:19 < plato> Aartsie: can you use screen?
20:19 < nogginBasher> could be a helpful reminder of the need for redundancy
20:20 < plato> screen stays running when you close your ssh connection
20:20 < plato> if that's too heavyweight google 'node forever' i'm sure ive seen several people showing various solutions
20:20 < plato> EhevuTov: iranian cyber attack?
20:21 < plato> THEY HATE US BECAUSE OF OUR FREE SOFTWARE
20:21 < MiracleBlue> Lol
20:21 < CoverSlide> haha
20:21 < EhevuTov> hehe, nah, they mostly love us
20:22 < EhevuTov> I'm betting it's what nogginBasher said about trying to show the a need for redundancy. Or maybe a competitor?
20:23 < James23> hey guys
20:23 < MiracleBlue> Hey there :)
20:23 < CoverSlide> hey monkeys
20:24 < nogginBasher> could be Torvalds himself.  YOU'RE USING IT WRONG!
20:24 < Aartsie> plato: i have a terminal but when i launch the nodejs script and close the terminal it wil shutdown the script
20:25 < CoverSlide> Aartsie: USE SCREEN
20:26 < CoverSlide> like we told you
20:26 < `3rdEden> listening is hard
20:26 < s00pcan> ah yeah I just forgot to open this in tmux
20:26 < shikharraje> @chapel: https://gist.github.com/3920265
20:26 < Aartsie> CoverSlide: i don't have a screen, its a server in a datacenter
20:26 < shikharraje> But the code doesn't seem to return any output..
20:26 < shikharraje> Some help, please???
20:26 < `3rdEden> screen a application Aartsie
20:26 < CoverSlide> Aartsie: the use nohup & 
20:27 < `3rdEden> just install it ._.
20:27 < CoverSlide> Aartsie: type `which screen`
20:27 < EhevuTov> shikharraje, is your res object in the righ scope?
20:28 < `3rdEden> Aartsie: alternatively, you can install `forever` to run your apps.. foreverrr https://github.com/nodejitsu/forever
20:29 < chapel> shikharraje: you probably don't need the preceding wildcard
20:29 < chapel> just after
20:29 < timeturner> I'm trying to figure out how I can have the client send a message to a specific room that they are subscribed to with socket.io
20:29 < chapel> shikharraje: having both is slow on large indexes
20:29 < timeturner> but it looks like the room functionality is only for broadcasting to a group of clients from the server
20:29 < timeturner> any ideas?
20:29 < nlf> be warned, forever will make your server cry for mercy if your process crashes on start
20:29 < chapel> timeturner: you need to take the message from the server and broadcast it out
20:29  * jesusabdullah uses sysv <_<
20:29 < chapel> clients can't directly talk to other clients
20:30 < nlf> i use upstart since we run ubuntu on our servers
20:30 < timeturner> but how do I tell the server from the client which room the message is meant for
20:30 < chapel> timeturner: would need to either have that on the client
20:30 < chapel> and send it as part of the message data
20:31 < chapel> like {room: 'roomname', message: 'message'}
20:31 < timeturner> I wonder why that functionality isn't present by default
20:31 < chapel> or store what room they are in on the server and use that to send
20:31 < chapel> timeturner: umm, because its a helper
20:31 < dreamdust> timeturner: https://github.com/LearnBoost/socket.io/wiki/Rooms
20:31 < chapel> for handling broadcasting to a subset of users
20:32 < timeturner> yeah I guess
20:32 < timeturner> thanks!
20:32 < timeturner> will try that
20:34 < dreamdust> IIRC, from the client: socket.in('641A').emit('this message is sent to room 641A');
20:34 < chapel> shikharraje: http://elasticsearch-users.115913.n3.nabble.com/help-needed-with-the-query-tt3177477.html#a3178856 << some info that might help
20:34 < niggler> or send switchroom commonds
20:35 < shikharraje> @chapel: But is the syntax okay??? Because it is not returning any output...
20:36 < chapel> oh
20:36 < chapel> I know the issue
20:36 < chapel> you need to look in a field usually with wildcards
20:36 < timeturner> socket.in('room'0 is done from the client?
20:36 < timeturner> socket.in('room') *
20:37 < timeturner> is there an API list of the server and client side commands?
20:37 < shikharraje> So, wouldn't this work??? query.wildcard, isn't that right???
20:37 < chapel> shikharraje: well, query.wildcard.field = 'query*'
20:38 < chapel> field being the field you want to search
20:38 < chapel> like location, or user or whatever
20:40 < shikharraje> Wow...
20:40 < shikharraje> You, sir, are amazing...
20:40 < shikharraje> :-)
20:40 < shikharraje> It's working now..
20:41 < shikharraje> We are looking inside the item description field...
20:41 < chapel> that will be $1,000
20:41 < chapel> :)
20:43 < arronhunt> Hello gents. Newbie here. 
20:44 < arronhunt> I have a small node script running on node.io
20:44 < arronhunt> I can run $node.io myfile.js
20:44 < arronhunt> which returns a JS object
20:44 < arronhunt> my question is...
20:44 < arronhunt> how do I run a server to display the object?
20:44 < arronhunt> localhost:8080 and it will show my json object in plain text
20:45 < arronhunt> If that makes sense. Sorry I am very nooby :(
20:48  * nathan7 blinks
20:50 < plato> is node.io some program you are running on your localhost? or is it a web service?
20:52 < arronhunt> plato node.io is a web scraping engine
20:52 < arronhunt> I'm sorry I don't know  the correct terms to use...
20:52 < plato> arronhunt: my first thought would be use stdout/in
20:52 < plato> so you would do $ node.io myfile.js | node myserver.js
20:53 < arronhunt> hm okay
20:53 < plato> and myserver would capture the input from stdin and host a server running on port 8080 that displays the object
20:53 < plato> but, why do you want a web server running on port 8080 that displays the object? so you can access it remotely?
20:54 < arronhunt> I'm building a small web scraping application for prices
20:54 < arronhunt> It will scrape a few websites and put prices and names into a json object
20:54 < exit2> anyone here use this http://www.windowsazure.com/en-us/develop/nodejs/ ?
20:54 < arronhunt> I want to be able to querry it
20:55 < plato> i dont have much experience with this - but it might make more sense to run node.io myfile.js from WITHIN myserver.js
20:55 < plato> http://nodejs.org/api/child_process.html
20:55 < plato> it might also make more sense to run node.io myfile.js as a cron job and have it output to a text file somewhere
20:55 < chapel> or
20:55 < plato> then myserver.js reads in the text file when you want to access that from the weab
20:55 < chapel> use node.io programmatically instead of separately
20:56 < arronhunt> chapel can you elaborate? I'm not much of a backend dev at all :(
20:56 < plato> https://github.com/chriso/node.io/wiki/Input---Output
20:56 < chapel> umm, well its just a module
20:56 < plato> nodeio = require('node.io')
20:56 < plato> see details in that link
20:56 < plato> i didn't realize it was a module -_-
20:57 < arronhunt> plato yeah lol. Ugh why do they write their documentation in coffee script
20:58 < chapel> well, I don't know if it needs the nodeio bin file
20:58 < chapel> not used nodeio
21:08 < under_my_shoes> ....
21:09 < jesusabdullah> where are the cloud niner niners?
21:09 < jesusabdullah> creationix: you around? ace.ajax.org is DOWN and it makes me BUMMED OUT
21:12 < arronhunt> plato what exactly is stdin/out?
21:13 < context> standard input, standard output
21:14 < arronhunt> context do you know of a good place to learn about it?
21:15 < chapel> bash
21:16 < context> learn about what? its the input/output stream to your app
21:16 < context> when you run a command on the console, input is what the user types into it, output is what your app prints out
21:16 < context> you just got learned
21:18 < mclenithan> I have been getting some decent apps up and running on node.  I have a client that wants to do an e-commerce site and I was thinking about trying to accomplish this all through node... great idea or will I end up with a drinking problem worse than I have already?
21:20 < chapel> mclenithan: not any more difficult than doing it from scratch in any other language
21:20 < timeturner> mclenithan: node is awesome, development time is fast and spent efficiently
21:20 < timeturner> or efficiently spent
21:21 < arronhunt> context :D
21:22 < mclenithan> thanks
21:37 < FunnyLookinHat> Anyone here used Socket.io ?  I'm wondering which .js file it means for me to include when it says to include socket.io/socket.io.js
21:43 < timeturner> include socket.io/socket.io.js from socket.io-client which serves at domain.com:port/socket.io/socket.io.js
21:43 < timeturner> automatically
21:46 < ybit> https://gist.github.com/01b3a2a7f328be18b734
21:46 < ybit> i think what's going is that i have the latest from the git repo
21:46 < ybit> ^failed node.io install
21:46 < TooTallNate> ybit: i swear people never seem to understand that error message…
21:47 < TooTallNate> i need something better there obviously...
21:47 < ybit>  Error: "pre" versions of node cannot be installed, use the --nodedir flag instead 
21:47 < TooTallNate> ybit: you have a -pre version of node, therefore you must pass `--nodedir=/path/to/node` when invoking npm install
21:47 < ybit> oh, i was thinking it was telling me i needed a previous version of node
21:48 < ybit> didn't realize it was a preview of node
21:48 < TooTallNate> ybit: well did you compile node manually?
21:48 < ybit> yeah
21:48 < ybit> ./configure && make && sudo make install
21:48 < ybit> figure it's the only way to install it
21:48 < TooTallNate> right, but from master branch probably
21:48 < TooTallNate> not a specific release tag
21:48 < ybit> yeah
21:48 < ybit> aaah
21:49 < ybit> it's from the v0.6.18 branch
21:49 < TooTallNate> git checkout v0.8.12 && ./configure && make && sudo make install
21:49 < TooTallNate> it what you probably want ;)
21:49 < ybit> i don't want master?
21:49 < niggler> does javascript allow you to write something like 3.toString()?
21:50 < ybit> yes
21:50 < niggler> why does node fail?
21:50 < TooTallNate> niggler: (3).toString()
21:50 < niggler> actually thats not true ybit it appears to fail in chrome as well
21:50 < ybit> because toString is a um, thing the browser does..
21:50 < niggler> boo parens make baby jesus cry
21:50 < TooTallNate> niggler: 3..toString() then
21:51 < niggler> ooh thats better
21:52 < TooTallNate> looks like a syntax error to me but whatevs
21:53 < ybit> hm, looking into niggler's question
21:53 < ybit> .toString is a method provided by the String object which is a built-in, so v8 should have support for it
21:54 < TooTallNate> ybit: it does :) niggler had invalid syntax before
21:54 < ybit> niggler: it does, TooTallNate yeah :)
21:54 < TooTallNate> ybit: either (3).toString() or 3..toString() works as expected, in node and Chrome
21:54 < ybit> a = 3; typeof a; a.toString()
21:54 < niggler> >> 3..toString()
21:54 < purr> niggler: (string) '3'
21:54 < ybit> it just does this weird thing where it goes to the next line if you do 3.toString()
21:55 < ybit> at the repl prompt
21:55 < niggler> it breaks the parser
21:57 < ybit> so, TooTallNate, is 0.8.12 the latest stable branch recommended for use? if so, is this declared on some page that you wouldn't mind linking me to? *googling for this*
21:57 < TooTallNate> ybit: see nodejs.org
21:57 < TooTallNate> "Current Version"
21:58 < ybit> https://github.com/joyent/node/wiki/FAQ :: "The next stable release will be v0.8. "
21:58 < ybit> "Last edited by raycohen, 11 months ago"
21:59 < TooTallNate> ybit: 3.toString() is ambiguous syntax, since the ".toString()" part could just as easily be ".14"
21:59 < ybit> TooTallNate: ah, good point
21:59 < ybit> thanks for pointing that out
22:00 < TooTallNate> ybit: updated wiki page. thanks for pointing that out :)
22:01 < niggler> TooTallNate: can function names start with numberes/
22:01 < niggler> if not, then its completely unambiguous
22:02 < TooTallNate> niggler: no, identifiers can't start with numbers
22:02 < niggler> so then its not ambiguous
22:02 < ybit> git checkout v0.8.12-release is what i want
22:02 < FunnyLookinHat> timeturner, sorry was afk - that worked though - thanks!
22:02 < niggler> with k=2 there should be no shift reduce conflicts
22:02 < TooTallNate> ybit: just "v0.8.12", the -release one might be old
22:02 < niggler> in fact k=1 should be fine here
22:03 < TooTallNate> niggler: it is still. the ambiguity has nothing to do with variable names. only Number literal syntax
22:03 < niggler> in the grammar
22:03 < TooTallNate> niggler: oh actually, i think I see what you mean
22:04 < niggler> there's no ambiguity here if identifiers cannot start with numbers
22:04 < niggler> 3 . toString -- the toString cannot match the parse that corresponds to a floating point number
22:04 < ybit> niggler: _ and $ are the only two non alphabetic characters that a variable name can start with
22:04 < TooTallNate> niggler: maybe bring it up on es-discuss :p
22:04 < niggler> wtf is es-discuss?
22:04 < TooTallNate> ybit: careful, there's a bunch of unicode chars allowed too ;)
22:04 < ybit> hah!
22:04 < niggler> woah woah unicode characters?
22:05 < niggler> there's no ascii restriction 
22:05 < TooTallNate> this is a good read: http://mathiasbynens.be/notes/javascript-identifiers
22:05 < niggler> >> ✓ = 3; ✓+1
22:05 < purr> niggler: SyntaxError: Unexpected token ILLEGAL
22:05 < TooTallNate> niggler: the rules are complicated
22:05 < TooTallNate> niggler: not just *any* unicode char is allowed
22:06 < TooTallNate> >> π = Math.PI;
22:06 < purr> TooTallNate: (number) 3.141592653589793
22:06 < rauchg> even more interesting: http://timelessrepo.com/json-isnt-a-javascript-subset
22:06 < ybit> soo yeah, the unicode escape sequence is also permitted
22:06 < ybit> \
22:07 < ybit> \uSTUFF
22:07 < niggler> >> இ = Math.PI
22:07 < purr> niggler: (number) 3.141592653589793
22:07 < niggler> ooh
22:08 < TooTallNate> rauchg: wow, hahaha very sneaky
22:08 < ybit> niggler: http://es5.github.com/#x7.6
22:08 < ybit> re: variable names
22:09 < context> hmmm, why not node use node for install instead of python
22:09 < niggler> this is hilarious
22:10 < TooTallNate> context: it was using a node install script for a while but that becomes a problem when you're cross-compiling
22:11 < context> well you shouldnt be running make install when cross compiling
22:12 < TooTallNate> context: i would agree, but :p
22:13 < context> well im trying to manually install node on a debian machine
22:13 < context> and i get 'failed to import json'
22:13 < TooTallNate> context: change that to simplejson
22:13 < TooTallNate> context: you're probably using an old Python version
22:14 < context> <3 thnx
22:14 < purr> Let it be known that context hearts thnx.
22:14 < context> yeah its an old ass machine
22:14 < context> getting it replaced monday
22:14 < niggler> lol
22:14 < context> just wanted to get something up now
22:14 < context> dont know why im wasting my time
22:14 < niggler> <3 
22:15 < niggler> <3 ☕ 
22:15 < purr> Let it be known that niggler hearts ☕.
22:15 < niggler> holy crap
22:32 < wookiehangover> gf3: is this gonna be like the node firm, but less cool
22:33 < gf3> wookiehangover: WAT
22:33 < gf3> Wrong chan?
22:34 < wookiehangover> I'm talking about the publicized -ot membership
22:34 < gf3> wookiehangover: Yeah but we're in #node.js
22:35 < wookiehangover> lolz
22:35 < wookiehangover> bwhahahahahaha
22:49 < jamescarr> when you deploy your node apps to your own server, where do you usually put the app at? I've been dropping them in /var/app
22:57 < vicapow> so for testing, can anyone think of a way to slow down a socket?
23:52 < onr> yo
23:54 < onr> heh channel is silent tonight
--- Log closed Sat Oct 20 00:00:39 2012
