--- Log opened Mon Dec 10 00:00:46 2012
00:32 < Sonuku> any obvious reason I would get "TypeError: path must be a string" in nom on ubuntu?
00:39 < mscdex> nom?
00:40 < mscdex> zomg: someone had a project like that a couple years back
00:40 < mscdex> zomg: i think it was mape's or something
00:41 < mscdex> or tmpvar
00:41 < mscdex> it was pretty neat
00:46 < garbagecollectio> is it hard to get a dev job in ny
00:47 < matbee_> hm
01:05 < timeturner> how much stuff should be in memory and how much stuff should be on disk?
01:05 < timeturner> for validation purposes specifically
01:05 < garbagecollectio> huh
01:05 < timeturner> in a client's session
01:05 < timeturner> redis vs mongodb
01:05 < niggler> that's a strange question timeturner
01:05 < timeturner> for validation properties
01:05 < timeturner> why is it strange
01:06 < timeturner> ok well for validation it should be in memory I guess
01:06 < timeturner> but in general
01:07 < timeturner> I should cache things that are queried for a lot in memory correct?
01:07 < timeturner> nm
01:08 < niggler> keep stuff in memory if you access it a lot
01:08 < niggler> or if you need a very quick response time when needed
01:11 < timeturner> I wish memory was a bit cheaper
01:12 < timeturner> eventually we'll get there I suppose
01:12 < timeturner> or we're getting there...
01:16 < woopwoop> hey, using mongoose following this example copy and patsed everything http://www.pixelhandler.com/blog/2012/02/09/develop-a-restful-api-using-node-js-with-express-and-mongoose/ it says created, but nothing shows up in the db. doing a count shows 0 how else can i debug it?
01:19 < garbagecollectio> woopwoop what is the name fo your model
01:19 < woopwoop> ProductModel
01:20 < garbagecollectio> is that being created in mongo
01:20 < garbagecollectio> ProductModels
01:20 < garbagecollectio> it should be caled
01:20 < woopwoop> how do I check that?
01:21 < garbagecollectio> look in mongo
01:21 < garbagecollectio> type mongo on your command line
01:21 < woopwoop> i'm in there
01:21 < garbagecollectio> then type show dbs;
01:21 < garbagecollectio> then use <ur db name>
01:21 < garbagecollectio> then show collections
01:21 < garbagecollectio> see if ProductModels is there
01:22 < woopwoop> nope
01:22 < woopwoop> > show collections
01:22 < woopwoop> products
01:22 < woopwoop> system.indexes
01:22 < garbagecollectio> yeah
01:22 < garbagecollectio> so you have a db connection problem
01:22 < garbagecollectio> or your not using the model correctly
01:22 < garbagecollectio> that is, new schema
01:23 < woopwoop> hm, could you please take a look and tell me what you think? http://pastebin.com/6FrSHyV1
01:24 < woopwoop> just using a simple app.post to get something simple inserted 
01:25 < garbagecollectio> test if the connection is happening
01:26 < woopwoop> it's not and I can't figure out why
01:26 < woopwoop> but it's def listening
01:26 < garbagecollectio> well
01:26 < garbagecollectio> ongoose.connect('mongodb://localhost/dbname', function(err) {
01:26 < garbagecollectio>     if (err) throw err;
01:26 < garbagecollectio> });
01:26 < garbagecollectio> make an err callback
01:27 < garbagecollectio> and console.log the err
01:27 < garbagecollectio> see what it says
01:27 < garbagecollectio> also something localhost doesnt work for me
01:27 < garbagecollectio> put the actual IP or 127.0.0.1
01:27 < garbagecollectio> try 127.0.0.1 first
01:27 < niggler> what's ongoose garbagecollectio
01:28 < niggler> lol onGoose
01:28 < garbagecollectio> its when a goose lays its egg
01:28 < woopwoop> would it matter if i didn't include the port?
01:28 < woopwoop> heh
01:28 < garbagecollectio> detected by an arudino
01:28 < garbagecollectio> woopwoop
01:28 < woopwoop> i'm seeing this now  name: 'MongoError',
01:28 < woopwoop>   err: 'E11000 duplicate key error index: florence.products.$style_1  dup key: { : "test" 
01:29 < woopwoop> but when I do a .count() it still says 0
01:29 < woopwoop> where's the dup then?
01:29 < garbagecollectio> woopwoop try this
01:29 < garbagecollectio> http://mongoosejs.com/docs/connections.html
01:29 < garbagecollectio> wait
01:29 < garbagecollectio> is that after console.logging the mongooose.conncet?
01:30 < woopwoop> it's part of the product.save's err
01:30 < woopwoop> didn't see it til now
01:30 < exit2> What are the DB models for node that have API for querying that is not using raw SQL
01:32 < woopwoop> so that should mean that the connection works?
01:33 < pancake> hi, im having some problems with nodejs as http server
01:33 < Hotroot> exit2: Are you talking about nosql?
01:34 < Hotroot> Check out redis, mongodb, and nosql in general
01:34 < s5fs> pancake: whats the issue?
01:34 < exit2> Hotroot: thanks :)
01:34 < Hotroot> pancake: Post code please (at pastebin.com or gist.github.com)
01:34 < niggler> dont use pastebin
01:35 < pancake> 1m
01:36 < pancake> ok, the thing is tht i get various uncaughtexceptions
01:36 < pancake> the app is just a web server that uses http-proxy to ocmmunicate with a backend http server
01:37 < pancake> the backend http server is sending http/1.0 data endlessly
01:37 < pancake> node shutdowns after the exception happens
01:37 < pancake> it's also shutting down even using process.on('uncaughtException'...
01:38 < pancake> http://stackoverflow.com/questions/8114977/recover-from-uncaught-exception-in-node-js
01:39 < Hotroot> pancake: Not sure it's related, but that's old express syntax
01:39 < pancake> only fix is to restart node?
01:48 < Riaku> trying to install the now module, any way i can fix this visual studio error? (i have VS2012, and python installed) http://pastebin.com/Fy7FKZbz
01:54 -!- mode/#node.js [+o piscisaureus_] by ChanServ
01:57 < TehShrike|Home> niggler: your anti-pastebin streak is annoyingly endearing ;-P
01:58 < niggler> pastebin is the CVS of pasting services
01:58 < SomeoneWeird> pastie ftw
01:58 < jalcine> really?
01:58  * jalcine TIL
01:59 < TehShrike|Home> hastebin is written in node :-P
01:59 < TehShrike|Home> If you wanna get all snooty about your pastebin providers
02:05 < john__> hi all. I am working on an assignment and I am getting 'error: socket hang up'. both client and server are on localhost. any idea why this is happening?
02:05 < garbagecollectio> socket hang up 
02:05 < garbagecollectio> usually means whatever your node app is trying to connect to
02:05 < garbagecollectio> it cant connect
02:05 < garbagecollectio> or that thing is erroring
02:06 < john__> i see. and to recover from it? 
02:07 < john__> i am trying to send http.request but i get same error. i guess i have to reconnect
02:08 < niggler> hastebin can be run locally
02:08 < Hotroot> I just use gist, nobody bitches about gist
02:08 < Hotroot> (yet)
02:09 < niggler> try saying that quickly hotroot
02:09 < john__> so, any idea how to restart the connection at socket level?
02:09 < gkatsev> Hotroot: yes, no one bitches about gist
02:10 < niggler> hotroot enjoys his gist
02:10 < Hotroot> niggler: How do you know how fast I said it in the first place? =P
02:11 < niggler> hotroot's gists are all warm and filled with life
02:11 < TehShrike|Home> niggler: yeah, I run hastebin on my work machine for pasting internal stuff
02:41 < davidbowieslefte> Hi.  Is node-validator/express-validator a good/canonical choice for a validation library for node?  If not, which would you recommend?
03:15 < mscdex> anyone here done any streaming boyer-moore searching?
03:28 < XBOCT> anyone here familiar with mongojs extension?
03:30 < XBOCT> also, will it block until the lock is free or throw an exception?
03:46 < myndzi> don't suppose anyone here is familiar with diff algorithms?
03:47 < myndzi> tryin to port some code that was written in C#, and it looks like it's close to working but i can't see what's wrong
03:58 < garbagecollectio> diff algorithms?
03:59 < myndzi> yes
03:59 < myndzi> the kind that compare text for differences
04:05 < mdedetrich> does anyone know how to delete all elements in an array without changing its reference
04:06 < garbagecollectio> is this in node.js or c++?
04:06 < garbagecollectio> you use the delete keyword
04:06 < garbagecollectio> its turns the elements into null
04:07 < garbagecollectio> i think splice will also do that
04:07 < garbagecollectio> one of them leaves them both in
04:08 < othiym23> mdedetrich: Array.splice(0)
04:22 < sneakyness> hey guys, I'm messing around with a TurntableAPI bot
04:22 < sneakyness> I want to set up some sort of database to save tracks played / upvotes per track, what should I use
04:26 < garbagecollectio> mysql
04:26 < garbagecollectio> i wrote one
04:38 < sneakyness> garbagecollectio: word
04:38 < sneakyness> i feel like that's overkill
04:38 < sneakyness> cant i do some nosql new school bs
04:39 < garbagecollectio> sneakyness
04:39 < garbagecollectio> i am developing a clientside database
04:40 < garbagecollectio> so you should use that
04:40 < garbagecollectio> but
04:40 < garbagecollectio> taffydb
04:40 < garbagecollectio> is another solution
04:43 < sneakyness> thanks
04:43 < sneakyness> trap party here: http://turntable.fm/urlparty
04:59 < MarkMSmith> Hi all
04:59 < MarkMSmith> I'm working on a C++ Addon, and I was hoping someone could help me figure out where I'm going wrong
05:01 < MarkMSmith> hello?
05:02 < gluxon> MarkMSmith: Doesn't seem like anyone's available. It's 11 or 12 in the US Coasts.
05:02 < MarkMSmith> I know, I'm up later than I should be :)
05:02 < gluxon> MarkMSmith: You can run it by me, but I'm probably not experienced enough to help.
05:02 < MarkMSmith> ok
05:03 < MarkMSmith> the code in question is here: https://github.com/markmsmith/LeapNode
05:03 < MarkMSmith> I'm trying to create an addon to support getting events from a LeapMotion
05:03 < _numbers> is it universally true or common to do (err, result) or (err, result, cb) rather than (result, err) which seems to make more sense to me personally?
05:03 < MarkMSmith> I think I've done most of the lib_uv stuff right for the async callbacks, but I'm far from a C++ or V8 expert, so I'm probably screwing up some of the memory handling
05:04 < gluxon> MarkMSmith: Oh, you're kidding!
05:04 < gluxon> LeapMotion! XD
05:04 < MarkMSmith> Yup, I'm rocking one of the developer prototype units just now :)
05:05 < MarkMSmith> I have a much more convoluted stack with Python and tornado working already here:https://github.com/markmsmith/LeapWebVisualizer
05:05 < SomeoneWeird> yes, _numbers 
05:05 < SomeoneWeird> err always comes first
05:06 < chilts> _numbers: (err, result) is the Node.js style of doing it, so yeah
05:06 < chilts> as SomeoneWeird said :)
05:07 < _numbers> it just seems like most of the time you want results, and only sometimes you get errors. only sometimes do you care about errors, but usually if you care about anything, its results first
05:07 < mdedetrich> bleh, im in instance hell
05:07 < _numbers> i guess i'm a results-oriented programmer :p
05:08 < MarkMSmith> _numbers: I think the logic is that you'll only ever have 1 error, but you could have a variable number of results being returned, so making error be the first avoids the position of it varying depending on the number of results
05:08 < _numbers> ah where i usually pass only one result and if i need more i just make it an object
05:09 < _numbers> good point MarkMSmith
05:09 < MarkMSmith> glad to help :)
05:12 < c4ptotc> having a problem installing npm install -g browserify
05:12 < SomeoneWeird> pastie the error
05:12 < c4ptotc> http://pastie.org/5505100
05:12 < MarkMSmith> gluxon: Did you see anything wrong with the code?
05:12 < MarkMSmith> SomoneWeird: are you talking to me?
05:12  * gluxon is looking
05:13 < SomeoneWeird> was talking to c4ptotc :)
05:13 < MarkMSmith> k :)
05:13 < SomeoneWeird> ltc-gambling
05:13 < SomeoneWeird> interesting hostname 
05:13 < SomeoneWeird> hehe
05:14 < SomeoneWeird> looks like the version of detective needed has been removed from npm
05:14 < SomeoneWeird> maybe try and pull it from git
05:14 < c4ptotc> ok
05:14 < c4ptotc> SomeoneWeird, detective         ?
05:14 < gluxon> MarkMSmith: I'm looking it over in general now. Is there anything specific that's not working?
05:15 < SomeoneWeird> "No compatible version found: detective@'>=0.2.0- <0.3.0-'"
05:15 < MarkMSmith> gluxon: The problem I'm having it that it usually either hangs or segfaults after processing a few seconds messages
05:15 < gluxon> segfault in Node.js?
05:15 < SomeoneWeird> 0_O
05:15 < gluxon> I don't think I've ever heard of that..
05:16 < mscdex> woohoo! streaming boyer-moore-horspool searches in node.js!
05:16 < MarkMSmith> yeah, I'm sure it's my C++ addon code to blame
05:16 < mscdex> :-D
05:16 < MarkMSmith> most of the action is in NodeListener.cc
05:16 < gluxon> MarkMSmith: I'm really interested in your project, since I'm eagerly waiting on a LeapMotion device myself.
05:17 < gluxon> MarkMSmith: Right now, it's bed time for me, but I do plan on looking over that project :)
05:18 < MarkMSmith> It's somewhat less necessary than when I started, since the most recent release of the SDK added streaming of events over a websocket from the program
05:18 < MarkMSmith> But the python one lets you record and playback data
05:18 < MarkMSmith> so you could fake having a device in the meantime
05:18 < gluxon> And that doesn't require the SDK, right?
05:19 < c4ptotc> SomeoneWeird, trying to update to Node 0.8.15
05:19 < gluxon> MarkMSmith: Is the plugin uploaded on that repo?
05:19 < MarkMSmith> what do you mean?
05:20 < gluxon> (12:14:19 AM) MarkMSmith: most of the action is in NodeListener.cc
05:20 < gluxon> where is NodeListener.cc located?
05:20 < MarkMSmith> The node addon is here: https://github.com/markmsmith/LeapNode while the python/tornado stack with playback (that works) is here:https://github.com/markmsmith/LeapWebVisualizer
05:21 < gluxon> Ok.
05:21 < gluxon> Didn't see LeapNode there.
05:21 < MarkMSmith> https://github.com/markmsmith/LeapNode/blob/master/NodeListener.cc
05:22 < MarkMSmith> I'll try and stop by here a bit earlier tomorrow night I guess
05:22 < MarkMSmith> but if you want to leave feedback via the github issues thing on the repo, that's good too
05:22 < MarkMSmith> I feel like it's pretty close, I'm just messing up something silly with the memory handling
05:24 < c4ptotc> SomeoneWeird, updating node works now 
05:24 < MarkMSmith> even when I switch back to the "hello world" return value (line 73) I manage to get segfault
05:24 < c4ptotc> SomeoneWeird, reinstalled socket.io
05:24 < c4ptotc> SomeoneWeird, and browserify
05:26 < othiym23> I went to Voxer Hard Hack this weekend, and all I got out of it was a module for remotely controlling toy helicopters: https://github.com/othiym23/node-wifli
05:29 < MarkMSmith> othiym23: Sweet!
05:32 < othiym23> I can't wait until dshaw puts up the videos, because I had the worst calibration run of the entire weekend when I was showing it off and sent the helicopter straight into the ceiling and then right down into the floor
05:33 < othiym23> these things are no AR drones, but that actually makes them more fun in some ways
05:33 < MarkMSmith> Anyone else interested in helping me figure out uv_async_send() for my C++ addon for the Leap Motion?
05:33 < othiym23> especially because they're so much cheaper
05:33 < othiym23> MarkMSmith: I would, but that's totally above my pay grade
05:34 < MarkMSmith> othiym23: I wonder if I could use a similar set of scripts running a normal $25 rc helicopter, with some help from an arduino
05:36 < othiym23> MarkMSmith: probably, assuming you have the correct bits for the radio
05:36 < othiym23> the Wi-Fli just makes it super easy by turning the commands into packets
05:45 < MarkMSmith> Well, I think I'll call it a night
05:45 < MarkMSmith> later guys
05:50 < sotsirch> timeturner because people like to work
05:51 < timeturner> people have to work
05:51 < sotsirch> it makes them feel like they are better than other people
05:51 < timeturner> this is in reference to the robot thing right ^ ?
05:51 < sotsirch> its thier internal excuse to justify greed or wantness
05:51 < sotsirch> timeturner yes
05:52 < timeturner> yeah well. at least the service class jobs can be done by robots
05:52 < timeturner> but I agree with you
05:53 < sotsirch> timeturner fast food is hard work
05:53 < sotsirch> it should be a higher level of pay
05:54 <@konobi> what what!? what's this talk of socialism!?
05:55 < niggler> woah screw labor
05:55 < niggler> technology by its very nature reduces labor demand
05:55 < niggler> so if you love technology, in a way you must hate labor
05:55 < mansoor-s> it just shifts labor
05:55 < sotsirch> i have to go pay attention to something else now
05:55 < niggler> it contracts labor demand
05:56 < niggler> if it increased labor demand there would be no economic advantage to technology
05:57 < misterhat> hi niggler!!
05:57 < niggler> hi misterhat!
05:57 < niggler> !!
05:57 < niggler> !!!
05:57 < niggler> !!!!!
05:58 < niggler> misterhat: http://www.youtube.com/watch?v=4TlPo0yCSa4
05:59 < misterhat> ANNNND it's gone
06:02 < niggler> hows life misterhat
06:02 < misterhat> not very swell niggler
06:02 < misterhat> how about you
06:03 < niggler> blargh LPSTRs are strange beasts
06:03 < mdedetrich> whats the idiomatic way in javascript to create factory for a class
06:03 < mdedetrich> to manage instances of a class
06:03 < mdedetrich> is there some library to do this?
06:04 < domo> http://pastebin.com/jHQiP196
06:05 < domo> can someone help me optimize this code
06:07 < mscdex> domo: make sure 'timeout', 'pool', and 'headers' are pre-defined on the json[key] object ?
06:07 < mscdex> domo: other than, if you really want to get into micro-optimizations..... use ++i instead of i++ ? :-)
06:07 < domo> well
06:07 < domo> I'm having an issue
06:07 < mscdex> s/than/than that
06:08 < mscdex> oh i see it now
06:08 < domo> line 14 - as you see, im adding "requests" (using the request lib by mike) to the tasks object
06:08 < mscdex> wrap your tasks[key] in a closure and pass key to it
06:09 < domo> so basically key is getting wiped out if there are more than one request
06:09 < mdedetrich> or is there some javascript factory library
06:10 < domo> "json[key]" points to an object containing uri and qs which in turn get passed on to the request() call
06:10 < mscdex> domo: something like this: https://gist.github.com/7373d7446abf14fe567f
06:10 < domo> for some reason if I have more than one object in the "json" object.. the second object never gets passed
06:10 < domo> er .. references?
06:10 < domo> im still learning
06:10 < domo> ah I see
06:10 < domo> maybe thats why
06:10 < TehShrike|Home> wat
06:11 < mscdex> you have to capture the current value of key
06:11 < mscdex> using a closure gives you a copy
06:12 < mscdex> that's one thing you have to watch out for when you have a loop and are referencing something by index inside a function in the loop
06:12 < domo> yes
06:12 < domo> thats the problem
06:12 < domo> so why does this happen
06:12 < domo> if you dont mind
06:14 < domo> worked perfectly
06:14 < mscdex> domo: basically each function you're creating (and assigned to tasks[key]) is getting bound to the same variable `key`
06:15 < mscdex> so by the time the loop finishes and you execute any of those callbacks you created, the value will be the same because they all point to the same variable
06:15 < c4ptotc> SomeoneWeird, 
06:15 < c4ptotc> SomeoneWeird, i am trying to run browserify
06:15 < c4ptotc> SomeoneWeird, and i installed npm install backbone
06:15 < c4ptotc> SomeoneWeird, then npm install underscore
06:15 < c4ptotc> SomeoneWeird, but when i try to run browserify it errors cant find underscore
06:15 < domo> ohh
06:15 < domo> so if the value of key changes (end of the loop)
06:16 < domo> its stuck using that value
06:16 < domo> ?
06:16 < mscdex> yes, unless you use a closure to capture the current value
06:16 < domo> sorry I failed miserably trying to explain it
06:16 < domo> I didn't know what was going on
06:16 < domo> so I couldn't explain it ha
06:16 < mscdex> np
06:17 < domo> ok great
06:17 < domo> thanks so much
06:17 < RahulRam> hey guys , is there any tool which can extend my C++ classes in nodejs 
06:17 < RahulRam> i am looking for something similar to SWIG in python
06:19 < c4ptotc> SomeoneWeird, nevermind i fixed it
06:19 < mscdex> RahulRam: well, there's node-ffi, but that's not really something for real production use
06:19 < RahulRam> mscindex , what do you suggest , is there any other alternative ?
06:20 < mscdex> RahulRam: not really, just have to learn how to write a real C++ addon :-)
06:20 < RahulRam> so how do i go about doing that ?
06:21 < mscdex> RahulRam: http://nodejs.org/api/addons.html http://nikhilm.github.com/uvbook/ https://github.com/kkaefer/node-cpp-modules
06:22 < mscdex> there's a few links to get you started
06:24 < RahulRam> so i have to build v8 from source for all these ?
06:24 < RahulRam> if i have nodejs already installed on my mac , can i directly use node.h and v8.h llibraries ?
06:25 < mscdex> RahulRam: you don't have to build v8 from source. you don't have to include v8.h, just node.h
06:25 < mscdex> and maybe node_buffer.h if you need to work with node Buffers in C++
06:26 < RahulRam> if i just compile a simple program using node.h
06:27 < RahulRam> its not able to find that library
06:27 < domo> mscdex: you said another good optimization is to make sure the properties already exist before setting them (json.pool and json.headers)
06:28 < domo> they can't be .. this json object comes from a place where I don't know what will be set, but these props need to be set
06:28 < domo> is there something else I should be doing?
06:28 < mscdex> domo: not really
06:29 < domo> ok
06:29 < mscdex> RahulRam: you have to use node-gyp to build your node addon.... node-gyp takes care of all the configuring and compiling for you
06:30 < mscdex> RahulRam: just read the links i sent you :-)
06:30 < mscdex> and you'll be good to go
06:31 < RahulRam> ohh sure
06:46 < Trindaz> hi all. a question:
06:46 < Trindaz> I'm trying to do npm start
06:46 < Trindaz> and i get this error:
06:46 < Trindaz> npm ERR! aries@0.0.2 prestart: `bundle exec rakep build` npm ERR! `sh "-c" "bundle exec rakep build"` failed with 127
06:46 < Trindaz> what is "bundle exec rakep build" 
06:46 < Trindaz> is bundle an app i should have on my system (i'm running Mac OS X Lion)
06:47 < Trindaz> lil help?
06:47 < Trindaz> hey there qos - any idea about my question?
06:48 < leichtgewicht> Trindaz: Looks like the bundle command isn't installed?
06:48 < GreenDog> we can give them mississippi
06:48 < Trindaz> ok cool - i thought as much but there were no obvious results when i googled. homebrew had no suggestions.
06:48 < Trindaz> what do you mean by "command" ?
06:48 < GreenDog> sorry, wrong window
06:49 < Trindaz> as in, a program that should be somewhere like /usr/bin/ ?
06:50 < leichtgewicht> I mean: the aries programm seems to try to "bundle" things on prestart. (disclaimer: first time i hear of aries)
06:51 < Trindaz> thanks leichtgewicht 
06:51 < Trindaz> so is bundle i should install on the system, or is a node.js or npm specific "command"?
06:52 < Trindaz> (sorry, woeful english after a long day)
06:54 < leichtgewicht> Trindaz: for reference: npm help scripts : yes any command.
06:54 < leichtgewicht> now we have to find "bundle" ;)
06:55 < leichtgewicht> gem install bundler
06:55 < leichtgewicht> should do the trick ...
06:59 < Trindaz> thanks for the help leichtgewicht 
07:08 < leichtgewicht> Trindaz: your welcome
07:31 < hoodoos> exit
07:45 < d4rklit3> hi
07:46 < d4rklit3> does anyone here know stylus
07:46 < d4rklit3> i am tryin to get this nib library to work
07:46 < d4rklit3> and this guy didn't seem to tell you how to use stuff like transform / transition in any way i can understand : /
07:47 < d4rklit3> http://visionmedia.github.com/nib/
07:47 < d4rklit3> hwo would I wrote a trasnform:rotate(180deg) with that?
07:58 < leichtgewicht> d4rklit3: Havn't worked with nib/stylus yet (on my list though): It does seem like a stylus question though, right?
08:00 < leichtgewicht> d4rklit3: How about writing it in plain stylus?
08:01 < d4rklit3> yeah i mean i can make my own mixin
08:01 < d4rklit3> at this rate
08:01 < d4rklit3> would have been better
08:01 < d4rklit3> or faster
08:02 < d4rklit3> nib just has all these mixins already there
08:02 < d4rklit3> and it doesn't tell you how to use it
08:02 < leichtgewicht> it doesn't seem to have a mixin for "transform" though ...
08:02 < leichtgewicht> at least not in the list.
08:02 < d4rklit3> its in the vendors
08:02 < d4rklit3> at the bottom
08:02 < d4rklit3> he's like just use it as normal
08:02 < d4rklit3> but that does not work
08:02 < d4rklit3> transform:rotate(180deg) just ends up being that
08:04 < leichtgewicht> did you import the matching module? "vendor.styl"?
08:05 < d4rklit3> yep
08:05 < MI6> joyent/node: Ryunosuke SATO master * 0397223 : events: use null assignment instead of deleting property - http://git.io/pfH2bA
08:05 < leichtgewicht> .oO( Does stylus tell you if you imported something that doesn't exist ?) 
08:06 < d4rklit3> bingo
08:06 < d4rklit3> my import wasn't on top
08:06 < leichtgewicht> ?
08:06 < d4rklit3> ;)
08:06 < leichtgewicht> oh ...
08:06 < leichtgewicht> ;)
08:06 < d4rklit3> i forgot about that
08:24 < c4ptotc> hello
08:29 < c4ptotc> SomeoneWeird, are you around?
08:29 < c4ptotc> trying to use node to to run "node bin/web.js"
08:29 < c4ptotc> http://pastie.org/5505552
08:36 < SomeoneWeird> depends on the module c4ptotc 
08:36 < SomeoneWeird> can't help you there
08:39 < gildean> c4ptotc: where is the local.js?
08:39 < [AD]Turbo> hola
08:40 < c4ptotc> gildean, one sec
08:40 < c4ptotc> gildean, there is no local.js
08:40 < c4ptotc> gildean, when i set this with export      process.env.NODE_ENV
08:40 < c4ptotc> gildean, to local
08:41 < c4ptotc> gildean, or development
08:41 < c4ptotc> gildean, i get a different response
08:41 < gildean> c4ptotc: you're requiring a module by that name, but there's none?
08:41 < gildean> well there's your problem
08:42 < c4ptotc> gildean, notice the "export lines"
08:42 < c4ptotc> gildean, http://pastie.org/5505568
08:43 < c4ptotc> gildean, this is index.js
08:43 < c4ptotc> http://pastie.org/5505571
08:43 < gildean> c4ptotc: it's the same problem? you're trying to require a nonexistent module
08:44 < freewil> NODE_ENV=development node bin/web.js
08:44 < freewil> run it like that
08:45 < c4ptotc> freewil, still doesnt run
08:45 < freewil> you need a local.js or development.js
08:45 < freewil> whatever the name of your environment is
08:45 < freewil> thats why its complaining about a not found module
08:46 < c4ptotc> freewil, i tried using "index"
08:46 < c4ptotc> http://pastie.org/5505582
08:52 < SomeoneWeird> did you write that c4ptotc ?
08:52 < c4ptotc> SomeoneWeird, no.
08:52 < SomeoneWeird> what is it then
09:28 < c4ptotc> SomeoneWeird, you still there?
09:28 < SomeoneWeird> mhm
09:28 < c4ptotc> SomeoneWeird, https://github.com/abrkn/joggy
09:28 < c4ptotc> SomeoneWeird, its not my code
09:29 < c4ptotc> SomeoneWeird, im trying to adopt the code and use it for something else
09:29 < SomeoneWeird> did you npm install?
09:29 < c4ptotc> adopt / adapt
09:29 < c4ptotc> SomeoneWeird, yeah ive npm installed a ton of stuff
09:29 < SomeoneWeird> no, did you run "npm install" in the directory?
09:29 < c4ptotc> SomeoneWeird, no :D
09:30 < c4ptotc> SomeoneWeird, i ran npm install in the dir
09:30 < c4ptotc> SomeoneWeird, it grabbed a bunch of stuff
09:31 < c4ptotc> SomeoneWeird, i also used browserify to make a scripts.js from entry.js
09:31 < c4ptotc> SomeoneWeird, but node web.js (it wont run)
09:32 < c4ptotc> SomeoneWeird, even with NODE_ENV=index node web.js
09:32 < c4ptotc> SomeoneWeird, if i use any other name than index it thinks its a module
09:33 < c4ptotc> SomeoneWeird, this is the web.js
09:33 < c4ptotc> SomeoneWeird, http://pastie.org/5505715
09:34 < SomeoneWeird> not sure
09:34 < SomeoneWeird> you'll have to ask the author
09:37 < mpfundstein> j
09:39 < sgrover> looking for help.  http://pastebin.com/bC25HjTc  The request is made, the file is created, but nothing is ever written into it.
09:40 < sgrover> my "writing" message never appears.  is 'data' the wrong event?
09:44 < c4ptotc> SomeoneWeird, how would i tell node to run web.js as "debug"
09:44 < c4ptotc> SomeoneWeird, ?
09:46 < SomeoneWeird> node --debug web.js
09:46 < c4ptotc> SomeoneWeird, thanx
09:47 < c4ptotc> root@ltc-gambling:/var/www/bin# NODE_ENV=index node --debug web.js 
09:47 < c4ptotc> debugger listening on port 5858
09:47 < c4ptotc> SomeoneWeird, but then it panics anyway
09:47 < c4ptotc> http://pastie.org/5505742
09:51 < nathan7> c4ptotc: debug-brk
09:51 < nathan7> c4ptotc: debug-brk will start it with the debugger and paused
09:53 < c4ptotc> nathan7, :D
09:53 < nathan7> c4ptotc: :D
09:53 < c4ptotc> nathan7, i try to go to the ip with the debugger paused but. its not listening
09:53 < SomeoneWeird> lol.
09:54 < nathan7> c4ptotc: It'll tell you what port it's on
09:54 < nathan7> c4ptotc: fire up node-inspector or something
09:54 < c4ptotc> nathan7, its on 5858
09:54 < nathan7> c4ptotc: Well, hook node-inspector to 5858.
09:54 < c4ptotc> nathan7, root@ltc-gambling:/var/www/bin# node --debug-brk web.js 
09:54 < c4ptotc> debugger listening on port 5858
09:55 < c4ptotc> nathan7, im trying to actual go to the ip:5858
09:55 < c4ptotc> nathan7, the ip is 212.1.213.51
09:56 < nathan7> c4ptotc: You made node-inspector connect there and it doesn't work?
09:56 < nathan7> oh wait
09:56 < nathan7> c4ptotc: are you trying to connect to that with a *browser*?
09:56 < nathan7> c4ptotc: that isn't serving HTTP, it's the V8 debugger protocol
09:56 < c4ptotc> nevermind i guess , i guess i just lost without a clue at this point
09:57 < c4ptotc> nathan7, trying to get NODE_ENV=index node web.js          to run
09:57 < c4ptotc> nathan7, its not my code
09:57 < nathan7> c4ptotc: Use the Source, Luke.
09:57 < c4ptotc> if i use anything other than NODE_ENV=index it wont run
09:57 < c4ptotc> nathan7, you want to see the source?
09:58 < nathan7> Read the source! Understand why
09:59 < c4ptotc> nathan7, :D ive been looking at the source for a few hours
09:59 < c4ptotc> nathan7, https://github.com/abrkn/joggy
09:59 < c4ptotc> nathan7, i usually use apache + mysql
09:59 < c4ptotc> nathan7, not used to using "node" to actually run a website
10:01 < nathan7> ..okay, this thing is weird
10:02 < nathan7> c4ptotc:  What does it fail with?
10:02 < c4ptotc> nathan7, one sec ill make a pastie
10:03 < c4ptotc> nathan7, http://pastie.org/5505779
10:04 < nathan7> c4ptotc: oh
10:04 < nathan7> c4ptotc: Try doing `node bin/web.js' from the upper dir
10:05 < nathan7> c4ptotc: or it expects a config
10:05 < c4ptotc> nathan7, same thing from the top level directory
10:05 < nathan7> c4ptotc: ah
10:05 < nathan7> c4ptotc: yeah
10:05 < nathan7> c4ptotc: it expects a $NODE_ENV.json in the config dir
10:06 < c4ptotc> nathan7, so index.json 
10:06 < nathan7> c4ptotc: no
10:06 < nathan7> c4ptotc: index.js loads the config
10:06 < nathan7> c4ptotc: Your NODE_ENV is usually either development or production
10:06 < c4ptotc> there is an index.js in the config dir
10:06 < nathan7> Yes.
10:07 < nathan7> That looks for a config.
10:07 < nathan7> You need to write a config file.
10:07 < nathan7> I'd file a github issue because the config is undocumented
10:08 < c4ptotc> nathan7, is there a simple way to write a config ?
10:13 < slaskis> substack: i'd like to try out your cool testling ci service. tried to follow the ci.testling.com guide but can't get it to test. do i need an account perhaps? (and maybe you have a special room for these questions but i couldn't find one)
10:19 < substack> slaskis: nope you don't need an account
10:19 < substack> slaskis: there's #stackvm
10:19 < sgrover> solved my problem - was getting a 302 response code.  The code I used didn't handle redirects.  Revised to use the request module and saving files now.
10:19 < substack> I'd love to help you get your tests running!
10:31 < neurosys1> posse cmmutatus is over
10:32 < neurosys1> time for an inner clensing of the military
10:32 < neurosys1> posse cmmutatus is over
10:32 < neurosys1> time for an inner clensing of the military
10:32 < neurosys1> namely satanist and atheist
10:32 < neurosys1> there are no more battle lines
10:32 < neurosys1> 2013
10:32 < neurosys1> resoluion
10:33 < neurosys1> no piss on earth
10:38 < neurosys1> NATIONAL CAPSLOCKS DAY IS TODAY
10:38 < neurosys1> SPREAD THE WORD
10:38 < neurosys1> HI amigojapan
10:38 < neurosys1> NATIONAL CAPSLOCKS DAY IS TODAY
10:38 < neurosys1> SPREAD THE WORD
10:41 < medice> again?
10:41 < medice> oh wait, is this national capslock day different from international caps lock day
10:42 < neurosys1> COULD BE
10:43 < medice> yarr, it be inner-towny talk like a pirate day, yarr
10:43 < neurosys1> THATS JUST ANNOYING
10:44 < neurosys1> CAPSLOCK HAS A PURPOSE
10:46 < Doikor> but isnt caps lock day on june 28th and october 22nd? :/
10:46 < Doikor> or did someone create another one again
10:47 < fatninja> caps lock day..
10:50 < sosnon> i shouldn't participate in this 'discussion', but i'm voting for national minuscule day (just for fairness) and for both, nationalCamelCaseDay and national_snake_case day (so people will start naming their variables correctly); end of my participation.
10:51 < sosnon> 'minuscule' - i bet you guys will google it ;)
10:51 < sosnon> international version would make sense, too
10:51 < sosnon> oh dear, now i cn'
10:51 < sosnon> sorry
10:52 < sosnon> oh dear, now i can't stop obsessing about it
10:52  * neurosys1 belches
10:52 < neurosys1> SMELLS LIKE ONIONS
10:53 < sosnon> serious questino: nowjs.com still seems down; why?
10:53 < neurosys1> WHY NOT
10:53 < sosnon> (and so does the flotype/bridge site)
10:53 < neurosys1> WHO CARES
10:53 < sosnon> they (still?) link there from their repo
10:54 < sosnon> well, they have now.js examples running there (jazzroom etc.)
10:56 < substack> sosnon: the company evaporated and the domains went with it
10:57 < neurosys1> ENRON
10:57 < substack> the code is still around on npm and github at least
10:57 < neurosys1> THE STATUS-QUE FOR STARTUPS
10:57 < neurosys1> NAME OF THE GAME
10:57 < neurosys1> PLAYERS ON THE FEILD
10:58 < JohnMcLear> So yea, let's kinda agree to say "no" to jade by default in express web apps, k tnx
10:58 < sosnon> isn't it just branded Bridge now?
10:58 < JohnMcLear> just my 2 pence
11:01 < vslinko> hi all, i have some trouble with express+passort login. there is pieces of my code https://gist.github.com/4249943 . sometime on '/query' page user is unauthenticated but after successRedirect
11:01 < vslinko> please help
11:26 < neurosys1> PRESS DELETE
11:27 < neurosys1> PRESS SPACEBAR
11:37 < jsilver> hey IRC, gc2 is better than u
11:39 < neurosys1> SAY IT AINT SO
11:47 < neurosys1> CIA FAGS IN WASH DC
11:48 < neurosys1> BUNCH OF 100 YEAR OLD FAGS WITH PLASTIC SURGERY
11:48 < neurosys1> LOOK LIKE FENMALES
11:48 < neurosys1> IN LATE 40'S
11:49 < neurosys1> https://www.cia.gov/careers/opportunities/support-professional/support-officer.html
11:49 < neurosys1> SELL YOUR SOUL FOR 40,000 NEGOTIABLE
11:50 < neurosys1> THE YEAR OF THE LORD
11:50 < neurosys1> TO PROCLAIM FREEDOM TO THE CAPTIVES
11:50 < neurosys1> 2013
11:50 < neurosys1> NO PEACE ON EARTH
11:50 < neurosys1> TILL ZION IS CLEANSED
11:50 < neurosys1> AND JERUSALEM IS FLOODED WITH BLOOD
11:51 -!- mode/#node.js [+o bnoordhuis] by ChanServ
11:51 -!- mode/#node.js [+b *!*neurosys@*.static.stls.mo.charter.com] by bnoordhuis
11:51 -!- neurosys1 was kicked from #Node.js by bnoordhuis [moron]
11:52 <@konobi> o.O
11:52 -!- mode/#node.js [-o bnoordhuis] by bnoordhuis
11:53  * emilsedgh feels offended by that guys caps lock ;)
11:55 < deoxxa> apparently we look like fenmales
11:56 < deoxxa> what's a fenmale
11:57 <@konobi> a swamp creature?
11:58 < deoxxa> neat!
11:58  * deoxxa swamps around
11:58 < zbzzn> its an email from a fen
11:59 < Doikor> its a male of the great lizard overload race called fen
11:59 < deoxxa> Doikor: does it live in a swamp? or can it?
12:00 < deoxxa> just trying to confirm konobi's theory here
12:00 < Doikor> they do rule us so living in a swamp should be easy for them.
12:00 < deoxxa> awesome
12:01 < nathan7> Oh jesus
12:01 < nathan7> Hey deoxxa 
12:02 < nathan7> deoxxa: How's life?
12:02 < deoxxa> herro
12:02 < deoxxa> great!
12:02 < deoxxa> i have chocolate and pepsi
12:02 < deoxxa> can't get much better
12:02 < deoxxa> though i guess it could be pepsi nex
12:03 < c4ptotc> neurosys1> PRESS DELETE      neurosys1> PRESS SPACEBAR            << thats how it started
12:03 < c4ptotc> probably starting to have a break down
12:04 <@konobi> no, just a moron
12:21 < MI6> joyent/node: Ryunosuke SATO master * 0506d29 : events: fix typos in code comment  - newListeners -> newListener (+2 more commits) - http://git.io/P5bb_Q
12:22 < LEDfan> Hi. Is thera a way to make a object (that's created by a callblack) public? So I have a connection to my sockets. (io.sockets.on('connection', sendToClient);) In that function I have an object called httpObject. I want to emit some other things to the io.sockets (aka the httpObject) but I can't acces it in an other callback. Can you help me? :P
12:22 < LEDfan> Do I need to post some code on pastebin?
12:23 < edmellum> substack: Can you run a pre-test build step on Testling CI?
12:23 < bnoordhuis> LEDfan: that would probably help
12:24 < LEDfan> http://pastebin.com/dXAQw8hM But the code is a mess.
12:32 < deoxxa> LEDfan: hey, question
12:33 < deoxxa> LEDfan: i've always wondered how code like that comes into being
12:33 < deoxxa> LEDfan: like, i see a lot of really hard to read code with seemingly random indentation and stuff on the internet, but i never know how it appears
12:34 < LEDfan> Euh. 
12:35 < LEDfan> Like as I said, the code is a mess. But don't worry, the code I normaly write is much more readable. The indentation is indeed not at its best, but I don't like anonymous functions. 
12:35 < Yellow> hi! there's a phrase in the Module doc that i find quite strange: "Multiple calls to require('foo') may not cause the module code to be executed multiple times."   how exactly would 'foo's code be executed multiple times? i've always assumed 1-code inside the module file is run once 2-only the module.exports get cached.   any pointers? thank you
12:36 < LEDfan> But this code is most of it written by you. 
12:36 < LEDfan> But I agree the code is not readable.
12:37 < LEDfan> That's my problem with javascript code. Therefore my question about the object. 
12:37 < deoxxa> well you've got some options
12:38 < deoxxa> for avoiding anonymous functions, you can always just create regular named functions
12:38 < deoxxa> see http://callbackhell.com/
12:38 < deoxxa> for making your object "public", that's a complicated request
12:38 < LEDfan> Yeay, that is what I want.
12:39 < deoxxa> basically that doesn't actually make much sense
12:39 < deoxxa> consider this:
12:40 < mansoor-s> Yellow, It only gets executed once.  The entire contents of the file is executed it just happens that you only get access to whatever the module exports, but those exported parts can have access to the other parts of the code that dont' get exported
12:40 < Yellow> nvm i got it. its quite strange btw. the original module ran by node does not get cached cuz its not "require()"ed
12:40 < deoxxa> function a(x) { return x + b(x); }; function b(x) { x = 1000000; return 5; }; console.log(a(2));
12:40 < deoxxa> LEDfan: what you're experiencing is the wonderful world of lexical scoping
12:41 < Yellow> mansoor-s: that was my problem :S it doesnt seem right at first glance
12:41 < deoxxa> LEDfan: it's actually pretty great once you understand how it works, but it's a bit daunting if you're coming from a language where things are commonly made "global"
12:41 < Yellow> mansoor-s: the one i wrote about the first executed module
12:42 < deoxxa> LEDfan: it's possible though that i'm entirely misunderstanding that code - it's not exactly easy to follow
12:42 < LEDfan> deoxxa: I write my web apps in PHP. I'm new trying to understand OOP, so yes its a little bit confusing.
12:42 < Yellow> mansoor-s: thank you anyway
12:42 < LEDfan> deoxxa: okay. Maybe I need to split up the code. I will try somethings.
12:43 < deoxxa> LEDfan: you have to remember that in node you're really writing the application, not just a "page"
12:43 < deoxxa> so basically that bit of code there isn't isolated to one request
12:43 < LEDfan> deoxxa: yeay indeed, that's a big problem. I'm thinking in pages....
12:43 < deoxxa> that's cool, everyone has to start somewhere :3
12:44 < LEDfan> deoxxa: I know, there can be 10 request with just one process. If there are in PHP 10 requests there need to be 10 process loaded, right?
12:45 < deoxxa> LEDfan: more importantly, if there are 10 requests there are 10 completely isolated contexts
12:45 < deoxxa> LEDfan: you might want to look at http://jsforcats.com/ and http://www.nodebeginner.org/
12:45 < LEDfan> Oh okay.
12:46 < LEDfan> Indeed if I make 3 connections. In my log there are also 3 connectins made, on just one process. Nice.
12:46 < mansoor-s> Yellow, you are welcome
12:46 <@konobi> substack: going to have a try at a web-version of the saucelabs native app?
12:47 < Yellow> :)
12:48 < LEDfan> deoxxa: tnx. I will read the websites.
13:52 < jedi4ever> hi list, I'm looking for some advise on how to do a callback from C++ to nodejs
13:52 < jedi4ever> I don't get my head around MakeCallback, what's the correct syntactic sugar ?
13:54 < bnoordhuis> jedi4ever: what exactly don't you get? it may help to post your code
13:55 < jedi4ever> sure - hangon
13:55 < bnoordhuis> jedi4ever: btw, what MakeCallback does is call some JS function in the context of an object, possibly the global object
13:55 < jedi4ever> a haha I was actually looking at your sample
13:55 < jedi4ever> https://github.com/bnoordhuis/node-event-emitter
13:55 < bnoordhuis> heh :)
13:56 < jedi4ever> so you use - MakeCallback(args.This(), "emit", 2, argv);
13:56 < jedi4ever> argv contains event name + argument that gets passed
13:56 < jedi4ever> 2 = size of that array
13:56 < bnoordhuis> yep
13:57 < jedi4ever> emit because we're using emitter
13:57 < jedi4ever> but what's the first part?
13:57 < bnoordhuis> it's the this object
13:57 < bnoordhuis> think Foo.prototype.f = function() { return this }
13:58 < bnoordhuis> js functions are always called in the context of some object
13:58 < jedi4ever> ok, how would I dummy create such a context? 
13:58 < bnoordhuis> if you have a function that shouldn't be called in any specific context, use the global context
13:59 < bnoordhuis> Context::Global()->GetContext() iirc
13:59 < jedi4ever> let me try that ..
14:00 < zot> I'm back!  last week's exciting episode included a solution of creating a Buffer from C-land.  which worked!  until our nefarious call to .concat() ruined the day...
14:01 < zot> uhm, so.  do I have to construct a "SlowBuffer" w/ v8 Arguments in order to use concat?  or is there an alternative that I haven't yet found?
14:02 < bnoordhuis> zot: .concat is a Buffer method, not SlowBuffer
14:02 < zot> err, do I have to makeFastBuffer(), not a SlowBuffer.  I already have a SlowBuffer.
14:02 < zot> beat me to it :)
14:02 < bnoordhuis> zot: there's a trick that avoids creating the SlowBuffer
14:02 < zot> do tell!
14:03 < bnoordhuis> zot: what you do is call Buffer::constructor_template with Local<Value> args = { Integer::New(size) }
14:03 < bnoordhuis> zot: that creates a regular (fast) buffer
14:04 < mpfundstein> BNoordhuis, can I ask you a question about the internals of node when it comes to passing references into a callback?
14:04 < zot> should i have inferred this from the code?  (admittedly, i'm completely wickedly naive about c++/boost)
14:04 < bnoordhuis> zot: only if you have psychic abilities
14:04 < zot> kkk
14:05 < zot> then thanks!
14:05 < bnoordhuis> my pleasure :)
14:05 < bnoordhuis> mpfundstein: sure
14:05 < mpfundstein> lets say i have an array of objects
14:05 < zot> well, it would be thanks either way.  but thanks for letting me in on the secret ;)
14:05 < mpfundstein> each object is a job description, looking a bit like this
14:05 < mpfundstein> { 'action' => 'sh /myjob.hs' , 'args' => 'hello' }
14:05 < mpfundstein> lets say i do this
14:06 < mpfundstein> exec(currentJob['action'] + " " + currentJob['args'], function(err) { } );
14:06 < mpfundstein> i discovered that currentJob is not retained into the callback when changed before the job before finished
14:06 < mpfundstein> so if i pop lets say 3 jobs
14:07 < mpfundstein> and they all run concurrently
14:07 < mpfundstein> the first one who finishes , has the last one which started in the callback
14:07 < bnoordhuis> it's a tossup what currentJob they refer to
14:07 < mpfundstein> currentJob = jobList.shift() actually
14:07 < bnoordhuis> yeah
14:07 < bnoordhuis> that's js scoping for you, it's not node specific
14:08 < mpfundstein> i thought
14:08 < mpfundstein> currentJOb gets a ref to the object inside the array
14:08 < mpfundstein> the array pops it ref count 1
14:08 < mpfundstein> than it scopes it into the callback
14:08 < bnoordhuis> i can't say for sure without seeing the full code
14:08 < mpfundstein> kkk
14:08 < mpfundstein> well i solved it by
14:08 < bnoordhuis> but in general you want to scope it in an anonymous function
14:09 < mpfundstein> returning the job id from the job script and finding the object
14:09 < bnoordhuis> i.e. (function(currentJob) { ... })(jobs.shift())
14:09 < mpfundstein> mom
14:09 < mpfundstein> would u mind to look at the code?
14:10 < bnoordhuis> sure, if you gist it
14:10 < jedi4ever> bnoordhuis: I got it to compile but the C++ barfs - https://gist.github.com/4250746
14:10 < mpfundstein> i have it on github, ill make it public mom
14:10 < mpfundstein> https://github.com/MarkusXite/Big-Mama---Distributed-Job-System
14:11 < bnoordhuis> jedi4ever: you're trying to invoke a function emit() on the global object
14:11 < bnoordhuis> jedi4ever: for that to work there's need to be a function emit() of course
14:11 < mpfundstein> ill gist it
14:11 < jedi4ever> bnoordhuis makes sense,  so that's why I need the context of my current object
14:11 < bnoordhuis> jedi4ever: yes
14:12 < mpfundstein> https://gist.github.com/4250758
14:12 < mpfundstein> here bnoordhuis
14:12 < mpfundstein> in jobManager.startJob = function(job, callback) {
14:13 < mpfundstein> i dont know ow to scop the current job into the callback
14:13 < bnoordhuis> mpfundstein: is that the exec or the execute callback?
14:13 < mpfundstein> yeah sorry i rerwrote it a bit to work
14:14 < mpfundstein> the exec callback
14:14 < mpfundstein> i moved it into the execute callbakc from the job class but before that it was at this place
14:14 < bnoordhuis> mpfundstein: i don't see anything immediately wrong. a complete example would probably be better
14:15 < mpfundstein> the thing is 
14:15 < mpfundstein> it works
14:15 < mpfundstein> perfecty
14:15 < mpfundstein> but it is not sexy
14:15 < mpfundstein> because a job has to return a json
14:15 < mpfundstein> with its ID attached so that i can remove it from runningJobs 
14:15 < mpfundstein> i need the reference retained into the callback and it shouldnt change if more than 1 job does start
14:15 < mpfundstein> sorry if its  abit confusing
14:15 < mpfundstein> :-)
14:16 < bnoordhuis> mpfundstein: who cares about sexy? your boss? if not, i wouldn't worry
14:16 < mpfundstein> haah, my proud
14:16 < mpfundstein> ^^
14:17 < mpfundstein> but thanks 
14:17 < mpfundstein> nice community ere
14:17 < mpfundstein> here
14:17 < bnoordhuis> we try to be :)
14:17 < mpfundstein> seriously, if you compare this to other places
14:18 < mpfundstein> i like.. i am following node for a long time already
14:18 < mpfundstein> was one of the first here in amsterdam who used it in production
14:18 < bnoordhuis> you're from 020?
14:18 < mpfundstein> yeah
14:18 < bnoordhuis> i'm from 0182, but i'm in 020 a lot
14:18 < mpfundstein> jij ook toch? -)
14:18 < mpfundstein> nice
14:18 < mpfundstein> but u work at joyent right?
14:19 < bnoordhuis> i used to, i work at cloud9 nowadays
14:19 < bnoordhuis> we have an office on the keizersgracht
14:19 < mpfundstein> ah seriously
14:19 < mpfundstein> thats cool
14:19 < mpfundstein> are you attending the node meetups
14:19 < mpfundstein> ?
14:19 < bnoordhuis> well... not as often as i probably should
14:20 < mpfundstein> we are located in nord. i use node here for our distruted transcoding platform
14:20 < mpfundstein> noord
14:20 < bnoordhuis> don't tell anyone but i've been to the first two or three and they were excruciatingly boring
14:20 < mpfundstein> YEAH i know
14:20 < mpfundstein> man
14:20 < mpfundstein> the problem is that most talks are not tech talks
14:20 < mpfundstein> but reclame for the companies
14:20 < mpfundstein> :-)
14:20 < bnoordhuis> no, sales talks for their hip web 2.0 startup idea
14:20 < bnoordhuis> i don't care for that
14:20 < mpfundstein> me neither
14:20 < mpfundstein>  i want to hear about the internals
14:20 < mpfundstein> cools tricks and stuff
14:21 < bnoordhuis> i gave a talk last month or the month before at amsterdamjs
14:21 < mpfundstein> aaah ok, wasnt there
14:21 < mpfundstein> was that better?
14:21 < deoxxa> we're a new startup and we're looking for a growth hacker to help disrupt people's dinners
14:21 < bnoordhuis> it was admittedly a really bad talk but people laughed a lot
14:21 < mpfundstein> hahahaa
14:21 < mpfundstein> thats also good
14:22 < mpfundstein> have you been to kingsofcode ?
14:22 < bnoordhuis> no
14:22 < mpfundstein> ah jammer
14:22 < bnoordhuis> i got asked to speak but...
14:22 < mpfundstein> it was pretty good. 
14:22 < mpfundstein> node was underrepresentad
14:22 < bnoordhuis> i'm afraid i'm to blame :(
14:22 < mpfundstein> which i think is quite a shame.. its the new thing and it has so much potential
14:22 < mpfundstein> meneer noordhuis :D
14:22 < mpfundstein> well Go had its moment there
14:22 < mpfundstein> a really good talk
14:23 < bnoordhuis> yeah? who was the speaker?
14:23 < mpfundstein> uuuuhm
14:23 < mpfundstein> wait a sec
14:23 < mpfundstein> Peter Bourgon
14:23 < mpfundstein> from soundcloud
14:23 < bnoordhuis> doesn't ring a bell
14:24 < mpfundstein> yeah doesnt matter
14:24 < mpfundstein> :D
14:24 < mpfundstein> but the talk was good
14:24 < bnoordhuis> indeed :)
14:24 < mpfundstein> it was for beginners
14:24 < mpfundstein> so kinda boring for me
14:24 < mpfundstein> but the fact that he introduced it very good
14:24 < mephju> was it in berlin?
14:24 < mpfundstein> was exciting,. missed s.th. like this for node. people are still a bit afraid of this real time callback mess
14:24 < bnoordhuis> mephju: amsterdam
14:25 < bnoordhuis> mpfundstein: well, you know, i kinda see that
14:25 < mephju> sorry I dind't catch the beginning since I've just just joined
14:25 < mephju> ah ok
14:25 < mpfundstein> no problem, we were just taling about a conference
14:25 < bnoordhuis> it's that most languages don't have a better facility for event-driven programming
14:25 < mephju> I think the soundcloud guys are in berlin tho
14:25 < bnoordhuis> including js
14:25 < mpfundstein> yeah they are
14:25 < mpfundstein> well even tdriven programming is a different midnset
14:25 < mpfundstein> its not a problem of the language per se
14:25 < mephju> amsterdams is nice too :) 
14:26 < mpfundstein> in C, we use events for everything.. kernel signals, interrupt
14:26 < mpfundstein> the word has just to spread
14:26 < mpfundstein> :-)
14:26 < bnoordhuis> well, one day js will get coroutines/generators
14:27 < mpfundstein> ok that would be cool
14:27 < mpfundstein> this channel pattern go provides
14:27 < mpfundstein> is really awesome
14:28 < bnoordhuis> so maybe sometime in the future we can do a similar thing in js
14:28 < mpfundstein> what are you guys using at cloud9
14:28 < mpfundstein> you wrote this online editor right?
14:28 < bnoordhuis> that'd be good if only for the fact that it'll shut up all the callback detractors
14:28 < bnoordhuis> yes, we did
14:28 < mpfundstein> awesome thing, 
14:28 < mpfundstein> haha
14:28 < mpfundstein> the callback detractors
14:29 < bnoordhuis> or rather, my coworkers - i only have a couple of patches in
14:29 < mpfundstein> i think a bigger problems are the js bashers
14:29 < mpfundstein> the java guys who cannot handle the freedom js gives
14:29 < mephju> hey I got a jade problem: when I have a loop and I want to open a div every 4th iteration and add content into that div every other iteration, jade won't let me. it closes the div after my if statement.   
14:29 < bnoordhuis> that too but they don't bother me
14:29 < bnoordhuis> neither do the ruby guys
14:29 < bnoordhuis> they can keep their webdev
14:29 < mpfundstein> :D even tho ruby is cool
14:30 < bnoordhuis> i should probably s/ruby/rails/
14:30 < mpfundstein> lol
14:30 < mpfundstein> true dont forget the /g
14:30 < bnoordhuis> heh
14:30 < mephju> here is the code: http://pastebin.com/JzZEDfak
14:30 < mpfundstein> hey ben, i am off smoking wit a collegeau . nice to talk to you
14:30 < mpfundstein> at mephju :-) good luck! 
14:30 < bnoordhuis> yeah, likewise :)
14:30 < mpfundstein> bye bye
14:31 < mephju> mpfundstein, ahha
14:35 < mephju> I can't imagine Jade isn't capable of what I am trying to achieve
14:35 < mephju> it must be a common use case
14:36 < Yellow> anyone ever tried nesting MuxDemux streams?
14:37 < Yellow> anyone ever tried nesting MuxDemux streams? coff substack coff
14:38 <@konobi> TIAS?
14:41 < vic_> so I'm just about to launch a commercial application, written in node
14:42 < vic_> i don't have any illusions of preventing piracy, so i'll not even try to
14:42 < deoxxa> vic_: that's awesome
14:42 < vic_> however, if my app should find its way onto npm, do you think the guys over at npmjs.org would respond to takedown notices?
14:43 < deoxxa> take a look at https://npmjs.org/doc/disputes.html for how that works
14:44 < vic_> deoxxa: that's exactly what I was looking for, thanks a lot!
14:44 < deoxxa> :D
14:53 -!- mode/#node.js [+o piscisaureus_] by ChanServ
15:03 < drudge> i recently changed the session cookie from domain.com to .domain.com - how do i clear out the old cookies properly?
15:04 < drudge> in Chrome at least, with the old cookie around it uses that, rather than the new cookie (which makes it appear that the user is not logged in, etc)
15:14 < rk8888> is there an easy way to use socket.io to broadcast to particular users (eg. only logged users, or private messages) without using too hard trickery? thanks in advance
15:17 < Mortchek> rk8888, https://github.com/LearnBoost/socket.io/wiki/Rooms
15:21 < rk8888> Mortchek, Imagine I have a public room (therefore the name is known by the client), could this be an issue?
15:21 < Mortchek> rk8888, not unless you make it one
15:21 < rk8888> What do you mean exactly?
15:23 < rk8888> Mortchek, what do you mean exactly? I am sorry I am not really bright at node, I'm a newbie. Plus I'm not native so forgive me misunderstanding
15:25 < Mortchek> rk8888, it depends on how you design your server. There is no inherent security problem with it, but there can easily be one if the part dealing with it is badly designed.
15:27 < rk8888> thank you Mortchek, apparently I still got a lot of reading to do, node.js is really complicated when coming from a php background (no callbacks, etc.)
15:30 < rk8888_> sorry Mortchek, got disconnected.
15:32 < zot> whoah.  if you processNexttick() multiple things, are they LIFO (in plaats van FIFO)?
15:33 < zot> process.nextTick() that should have been
15:39 < Mortchek> rk8888_, didn't say anything else. But if you also need help with the JS language itself, you can ask about that in ##javascript.
15:39 < Mortchek> rk8888_, though I suspect you'll get a fair amount of that here too. :)
15:40 < rk8888_> Mortchek, js is not that hard after all, it's jsut that using it in a different context (server side), makes it look different, in my opinion. the usage is different basically
15:41 < Mortchek> rk8888_, it's not so different - in browser and Node, you're still mostly responding to events.
15:43 < zbzzn> Anyone knows a good Git integration module for node?
15:48 < mansoor-s> zbzzn, what do you mean?
15:55 < zbzzn> I want to clone a repository, add files, commit, push from my JS code
15:55 < zbzzn> something like https://github.com/libgit2/node-gitteh
15:56 < zbzzn> but that actually works
16:00 < MI6> joyent/libuv: bnoordhuis created branch no-linger - http://git.io/Xyn0qg
16:09 < MI6> joyent/node: isaacs created branch streams2-stdin-wip - http://git.io/uswGtg
16:10 < louisck> in express I have made a module and stored it in /public/js/mymodule
16:10 < louisck> but this wont find it 
16:10 < louisck> var conf = require('/js/mymodule.js'); 
16:13 < ehershey> louisck uses node!?
16:13 < louisck> suck a bag of dicks
16:13 < aandy> you sound surprised
16:13 < ehershey> louisck: why are you using a leading slash?
16:13 < aandy> require('bags').dicks
16:14 < ehershey> can you do ./js/mymodule.js ?
16:14 < aandy> seems like louisck.com uses php though :(
16:14 < ehershey> or add the js dir to your NODE_PATH and just require 'mymodule'
16:15 < jalcine> lol
16:15 < jalcine> error: 'dicks' not found
16:15 < louisck> the leading slash did not work!
16:15 < louisck> *goes back to comedy
16:16 < aandy> jalcine: :P
16:16 < aandy> undefined doesn't have dicks? must be female
16:16 < aandy> or not a collector
16:23 < ehershey> leading slashes suck
16:25 < AviMarcus> Hello all. I'm using mranney/node_redis in a script to import a 480million row DB into redis. It seems node.js bottlenecks on CPU calling the redis setting (there's no callback, even.) Any ideas on that?
16:27 < timeturner> AviMarcus: you can use cludter perhaps
16:27 < timeturner> cluster*
16:28 < AviMarcus> timeturner, looking in to that now. Seems kinda odd, though - why is the bottleneck cpu in node.js? I was expecting the bottleneck to be in redis
16:28 < timeturner> yeah same
16:28 < timeturner> weird
16:28 < stagas> AviMarcus: the commands get queued up in js
16:29 < timeturner> but how would they get queued up when saving to redis?
16:29 < timeturner> he's not writing to any disk
16:30 < AviMarcus> redis is single thread (for memory stuff, it forks for saving to disk) so I do presume there is some sort of bottleneck there. The docs there for the module mention it... but why does that eat up cpu?
16:30 < AviMarcus> redis only hits 20%, node hangs at 100% for a bit.
16:31 < stagas> AviMarcus: because it doesn't have the time to flush the queue to redis, it queues up all messages in js memory, you need to wait for the callbacks
16:32 < stagas> use caolan/async or similar
16:32 < AviMarcus> stagas, why does that burn CPU?
16:32 < rk8888> Does anybody know if there is a module for node.js that handles image uploads PLUS resizing and other image manipulation tools, like this one for PHP: http://www.verot.net/php_class_upload_samples.htm
16:33 < stagas> AviMarcus: no idea, probably has to do with sending 480 million rows without waiting for the callbacks
16:33 < AviMarcus> well this happens in 350k rows, even.
16:34 < AviMarcus> hmm so if I pause, does that.. make it go faster. hmm.
16:35 < kfwkfwq> hi
16:35 < bnoordhuis> AviMarcus: i didn't follow the discussion but if you start queueing up stuff in memory you stress the garbage collector
16:35 < AviMarcus> hmm. OK.
16:35 < timkuijsten> i'm wondering why sha1 hashing is about 20% faster than Buffer.toString(hex). my test result: http://dpaste.com/843598/ i'm trying to create random tokens as fast as possible
16:37 < kfwkfwq> hi
16:37 < kfwkfwq> i was have an nodejs tool that was sending api requests as stable
16:37 < kfwkfwq> i just wanted to use  link shortener but it returns as undefined for node.js is 
16:38 < kfwkfwq> non-blocking style :/
16:38 < kfwkfwq> than i used callback
16:38 < kfwkfwq> it sometimes works sometimes not
16:38 < kfwkfwq> could find the error http://pastebin.com/7ixFnqyS
16:39 < kfwkfwq> :[{type:\"image\",src:\"[object Object]\",href:\"undefined\"}],href:\"undefined\"}"}
16:39 < kfwkfwq> :(
16:39 < kfwkfwq> but it works metimes when there are no many jobs
16:45 < AviMarcus> stagas, so I tried pausing the readstream every 10-100 chunks, then waiting for a redis "drain" even then resuming the read. Doesn't seem to matter.
16:48 < Anon_> Hello, is anyone familiar with node-mysql enough to help me figure out why the values of my query are coming out the same everytime, even though I know they've changed in the database?
16:49 < Anon_> The query is pulling multiple rows from the database, and the weird thing is that if I do a .length on the object I get the correct count.
16:49 < Anon_> ie: if I add a record .length gives me the new number, while the actual resultset array has old values....
16:49 < Anon_> It's very strange....
16:49 < Clex> Anon_: aren't you in a transaction?
16:50 < Anon_> Clex, I'm not sure what you mean.
16:50 < Anon_> http://pastebin.com/weethAHk
16:50 < Anon_> there's a small snippet for what I'm doing.
16:51 < Anon_> Everytime that is run I get a resultset back, but the values in rows never change from the first call....
16:51 < Anon_> The really weird thing is that if I add more records they do get pulled into subsequent calls...
16:51 < Clex> Anon_: check out what a "MySQL transaction" is. It looks like that's what you're doing.
16:51 < Anon_> But none of the record column values get updated for ones that were already called...
16:51 < jalcine> What's the best tool for billing?
16:53 < Anon_> Clex, thanks I'll check it out, but I'm skeptical that it will help me fix this issue. :x
16:54 < Anon_> I just don't understand how it can be getting the correct number of records for each new query call, while the resultset values get stuck to the very first time they were pulled...
16:54 < Anon_> Makes no damn sense...
16:54 < Anon_> If I run that query directly into mysql I get the correct results, but if I run it through node-mysql my array values never change.
16:55 < Anon_> Yet doing a count on the array indicates that it is indeed pulling new info from mysql (as evidenced by new records pulling into the resultset)
16:56 < Clex> Anon_: that what a transaction does.
16:56 < Anon_> connection.query('SELECT * FROM table WHERE user_id = '+connection.escape(user_id)+' ', function(err, rows, fields) {
16:56 < Anon_> that is not a transaction though?
16:56 < Clex> I don't think so. How do you connect?
16:57 < Anon_>         var mysql      = require('mysql');
16:57 < Anon_>         var connection = mysql.createConnection({
16:57 < Anon_>  connection.connect();
16:57 < Clex> What happens if you try to execute "COMMIT;"?
16:57 < Anon_> as a query?
16:58 < Clex> Yup.
16:58 < Clex> It looks like this is how you start a transaction with this module: client.query('BEGIN');
17:00 < Anon_> Clex, no error or anything...
17:00 < kfwkfwq> may i  turn off notifications
17:00 < Anon_> Authenticated as 7
17:00 < Anon_> committed!
17:00 < Anon_> 819
17:00 < Anon_> Seedbox Pager (2 total)
17:00 < Anon_> 2
17:00 < Anon_> Notification Pager 7
17:00 < Anon_> committed!
17:00 < Anon_> 819
17:00 < Clex> Anon_: do you get correct values after your commit?
17:00 < Anon_> the 819 is a resultset column value being output on each loop
17:00 < Anon_> nope
17:00 < Anon_> the 2 is the resultset count
17:01 < Anon_> on each loop, the resultset count updates just fine.... indicating that the new records ARE being pulled in by the query
17:01 < Anon_> however the column value on the resultset seems to get 'frozen' to the one of the initial query
17:01 < Anon_> which makes no damn sense....
17:01 < AAA_awright> Anon_: As a rule I wouldn't be putting literal values inside SQL, use prepared statements
17:01 < Anon_> why is it pulling in new records but not updating column values for ones I've already called and would like to call again (seeing as they update often)
17:02 < Clex> Anon_: this might come from you server then.
17:02 < Anon_> But the query works fine in mysql or phpmyadmin..... lol
17:02 < Anon_> It also works fine from PHP
17:02 < AviMarcus> Anon_, I don't see your entire code, but are you sure the insert finished before the new query?
17:02 < AAA_awright> Anon_: I'm not saying it won't work, I'm saying don't do it
17:02 < AviMarcus> 'cause this is async and stuff.
17:03 < kfwkfwq> Anon_: may you re-ask your question?
17:03 < Anon_> http://pastebin.com/MeZnGD7w
17:03 < Anon_> there's the snippet I'm working with
17:04 < Anon_> basically my question is this : why is rows[0].up_rate giving me the same result every time I call that seedbox_list method
17:04 < Anon_> rows[0].up_rate seems to be stuck on whatever it is at the FIRST time I call that method
17:04 < Anon_> any other times I call the method the value remains the same, however, the COUNT of the array rows does not
17:05 < Anon_> new rows in the resultset do in fact get pulled into the rows array, even though rows[0].up_rate never changes
17:05 < Anon_> but it has in fact changed in the database....
17:06 < Anon_> Very frustrating.... It appears that node-mysql is caching the resultset values or something....
17:07 < kfwkfwq> you use this https://github.com/felixge/node-mysql ?
17:07 < felixge> Anon_: node-mysql is not doing any caching
17:07 < Anon_> kfwkfwq, yeah, that's the one I'm trying.
17:07 < Anon_> felixge, I don't know what it could be then :c
17:08 < AAA_awright> MySQL has internal caches and such but that's not the problem
17:08 < Anon_> Well if it helps, when I restart the websocket connection the resultset comes out fine...
17:08 < felixge> Anon_: if you could break this down to a smaller test case (as in: a full thing I can run and execute locally) I can have a look
17:08 < AAA_awright> Anon_: If you're only using a single MySQL connection for everyone, using transactions will be dangerous, because you'll be running multiple page requests at the same time
17:09 < felixge> AAA_awright: correct
17:09 < Anon_> na AAA_awright, the way I set it up is so that mysql connects once for each websocket connection.
17:09 < Anon_> It initiates it nce up top and then keeps it open throughout.
17:09 < Anon_> once*
17:09 < Anon_> felixge, thanks, I really appreciate that. :)
17:09 < Anon_> I'll try to see what I can come up with.
17:09 < AviMarcus> Anon_, where does rows[0].up_rate get changed?
17:10 < AviMarcus> I don't see it in that code, even.
17:10 < Anon_> AviMarcus, well rows gets set by node-mysql.
17:10 < Anon_> up_rate is the column being pulled
17:11  * Anon_ feels like such a nub lol
17:11 < Anon_> I feel like I'm missing something really obvious here lol
17:11 < niggler> stupid question: what's the linux equivalent of pbcopy on the mac
17:11 < AAA_awright> Anon_: And there's other things that will make your code more predictable when reading, use prepared statements, and statements like "new Array();" are unnecessary, just use [] and {}
17:11 < AviMarcus> I *think* it's an async timing or context issue, but I don't really see from the code where the issue is
17:11 < Anon_> true. thanks for the advice :)
17:12 < Anon_> I'm still pretty new to this type of javascript programming.
17:12 < AviMarcus> btw, node-mysql defaults to autocommit afaik
17:12 < AAA_awright> Anon_: Also http://callbackhell.com/
17:13 < Anon_> Yeah AviMarcus, that makes sense.
17:13 < AviMarcus> are you declaring var torrents twice in the same context?
17:13 < AviMarcus> oh one plural.
17:13 < Anon_> haha yeah
17:14 < Anon_> there is torrent and then torrents
17:14 < Anon_> basically I'm trying to strip out columns from mysql before outputting to client
17:14 < AviMarcus> Dunno, good luck.
17:14 < Anon_> thanks. I'll keep trying and see what I can learn in the process :)
17:15 < kfwkfwq> console.log(rows[1].up_rate); gives same result
17:15 < kfwkfwq> everytime u call seedbox list
17:15 < kfwkfwq> ?
17:15 < Anon_> yep. it works great the first time, but the subsequent requests end up giving back the same value everytime
17:15 < Anon_> although rows.length does in fact show correctly
17:16 < Anon_> even though rows[1].up_rate is the same as the first call every single time
17:16 < AviMarcus> Anon_, you're inserting something new that should be showing up first..?
17:16 < AviMarcus> I don't see any updates/inserts in that code
17:17 < Anon_> Naa nothing is being updated by nodejs, I have that happening with php elsewhere.
17:17 < Anon_> I know for sure that the column values are being updated though.
17:17 < AviMarcus> row[1] is the second row, isn't it?
17:17 < Anon_> yeah it is
17:17 < BurpKing> Hello everyone
17:17 < Anon_> that was the only one with an active up_rate haha
17:17 < BurpKing> I have a syntax error issue
17:18 < JohnMcLear> paste your code on either a pastebin or a pad.. http://pastebin.com / http://beta.etherpad.org/
17:18 < AviMarcus> Anon_, to be silly, are you pulling the correct user? console.log(user_id)
17:19 < JohnMcLear> btw burpKing that was for you
17:19 < Anon_> Yeah, the user_id value works fine each time. I know that the query is working correctly because if I add a new record in DB then it shows up in all my subsequent calls to that query
17:19 < Anon_> but beyond getting pulled into "rows" var that first time the column values never change
17:20 < Anon_> even though the query is clearly pulling in new records from the db lol
17:20 < BurpKing> JohnMcLear check: http://pastebin.com/fmg8t6VF
17:20 < kfwkfwq> dont SELECT * FROM  just select required fields and throw to user rows not a new array
17:21 < JohnMcLear> burpKing ...
17:21 < JohnMcLear> you code error is before that line.
17:21 < JohnMcLear> so it's between lines 1 and 10.
17:21 < BurpKing> yeah I know that
17:21 < kfwkfwq> so paste the code
17:21 < Anon_> hmmm okay I'll try that, kfwkfwq, however, I'm not sure what you mean by throw to use rows and not new array.
17:21 < BurpKing> oh it's before line 11?
17:21 < BurpKing> I thought line 11 is the error itself
17:21 < kfwkfwq> ok let me show
17:22 < JohnMcLear> no what it's saying is that it can't parse line 11 because something is fubar'd before that
17:23 < BurpKing> urggh that was  stupid of me. I forgot a ); to close the function
17:23 < JohnMcLear> Yes you did
17:23 < Anon_> kfwkfwq, appears to be doing the same thing after explicitly selecting columns. :C
17:23 < JohnMcLear> And yes it was.
17:23 < JohnMcLear> In the future, indent your code properly, it will save you from such travesties
17:23 < JohnMcLear> And/or if yuo aren't capable yourself, use an IDE
17:23 < BurpKing> Sorry John, I've just been experimenting with Node and Mongo, so this stuff is a bit new to me
17:24 < JohnMcLear> It's okay, we're only trolling you anyway.
17:24 < kfwkfwq> http://pastebin.com/raw.php?i=XAzQ6HWB
17:24 < JohnMcLear> Glad you fixed it :)
17:24 < kfwkfwq> something like it
17:24 < JohnMcLear> btw I wish people would use pads instead of pastebins, pastebin is just so 80s
17:24 < JohnMcLear> kfwkfwq needs jesus and async
17:24 < BurpKing> Do you guys know any good editors that do auto-tagging? I'm using Scite and it ain't so great
17:25 < BurpKing> kfwkfwq something is wrong with your pastebin URL
17:25 < JohnMcLear> BurpKing personally I prefer to use an IDE free environment, it makes you more Nazi about doing indentation when you fuck up it's way more painful to fix.
17:26 < BurpKing> So sticking to the editor is your preference? John
17:27 < JohnMcLear> here ya go BurpKing: http://nodeguide.com/style.html
17:28 < Anon_> kfwkfwq, not quite. :c
17:28 < Anon_> http://pastebin.com/iKBXwrJL
17:28 < Anon_> if you look at the very last Seedbox Pger you see that the upload_rate changed
17:28 < Anon_> this was after I refreshed the page
17:28 < Anon_> all of the ones before it got stuck with the same values :c
17:30 < kfwkfwq> hmm
17:30 < kfwkfwq> may it be caching the queries_?
17:31 < Anon_> Well that's what I was thinking, but I don't see why node-mysql would do that... felixge said that it wouldn't.
17:31 < AviMarcus> I've been using sublime text2 for a while, code folding and syntax highlighting stuff, and you can set up a JS linter
17:31 < AviMarcus> it's nagware, though.
17:32 < misterhat> yeah
17:32 < misterhat> i just started using it
17:32 < misterhat> it's pretty nice
17:32 < AviMarcus> If it was like $20 instead of $59 they'd have nagged me into buying it, though..
17:32 < Anon_> At this point I can't see where I'm going wrong though.... "rows" gets set by node-mysql so idk :c
17:32 < misterhat> i agree AviMarcus :P
17:33 < AviMarcus> misterhat, if you use git, do you have a git plugin?
17:33 < misterhat> i just started using sublime
17:33 < AviMarcus> right click git -> add, commit, push -> fill in message -> boom.
17:33 < misterhat> i do use git though
17:33 < misterhat> and i don't use plugins
17:33 < misterhat> i can do that all in the terminal :P
17:33 < AviMarcus> yeah but that's a second window to have open.
17:33 < misterhat> git plugins never work out. git always needs me to do some stupid stuff
17:33 < AviMarcus> hehe
17:34 < misterhat> i think sublime has a terminal plugin doesn't it
17:34 < misterhat> i know gedit did
17:34 < AviMarcus> some sort of terminal thing
17:34 < misterhat> i mean like console
17:34 < misterhat> shell
17:34 < AviMarcus> I'm not a huge fan of the find/replace though.
17:34 < simb> misterhat: I've been looking for one. My searches have not turned up what I was looking for
17:35 < misterhat> lame
17:41 < AviMarcus> so.. i'm forking to 2 child processes to handle this cpu-bound redis querying. But.. when I send the data to the fork to handle (.send(data)) I only see ~10k rows of 360k rows. Am I sending too fast..?
17:41 < BurpKing> I have no idea what the need for Git is yet
17:41 < kfwkfwq> Anon_: try that http://pastebin.com/aNQJ9iPy
17:42 < Anon_> lmao
17:42 < Anon_> i was trying something similar
17:42 < Anon_>             connection.query('SELECT (1+'+Math.floor(Math.random()*999)+') as rand_num, hash,name,size_bytes,percent_complete,status_string,completed_bytes,up_rate,down_rate FROM web_seeds WHERE user_id = '+connection.escape(user_id)+' ', function(err, fuck, fields) {
17:42 < Anon_> XD
17:42 < Anon_> mine failed, i'll try yours though hehe
17:42 < AAA_awright> Anon_: Your first problem is you need to use prepared statements
17:43 < zomg> Anon_: I like your variable naming
17:43 < AAA_awright> Stop inserting values into SQL
17:43 < Anon_> AAA_awright, you mean user_id?
17:43 < AAA_awright> Yeah, all of the literal values
17:43 < misterhat> he doesn't need to
17:43 < misterhat> but yeah it makes it a lot easier 
17:44 < AAA_awright> As a security rule, you shouldn't be building strings of SQL
17:45 < AAA_awright> Anon_: Also I'm not sure what that lone 'commit' is doing at the beginning
17:45 < Anon_> lmao
17:45 < Anon_> yeah that was suggested in here earlier
17:45 < AAA_awright> You're not doing any error checking on it
17:45 < BurpKing> Anon the shit you're doing looks complex. Im checking MongoDB out and it 'seems' much easier
17:45 < AAA_awright> If it were useful
17:45 < nathan7> BurpKing: Nobody does at first.
17:46 < nathan7> BurpKing: You only realise you should've been using VCS when it's too late
17:46 < sgallagh> Just curious: is there an ETA for the 0.9.4 dev release?
17:46 < Anon_> O-o
17:46 < AAA_awright> BurpKing: Wait, you're asking why you should use Git?
17:46 < AviMarcus> BurpKing, everything gets complex.
17:47 < AviMarcus> ... unless you're not doing anything at all complicated. But that usually ends pretty quickly.
17:47 < BurpKing> Is it like a management tool of sorts?
17:47 < Anon_> kfwkfwq, that didn't work either :c
17:47 < nathan7> BurpKing: You check your files into git. When you make a change, you commit them.
17:47 < nathan7> BurpKing: You can access all previous commits, you can branch off
17:48 < kfwkfwq> http://paste.ie/view/24047f85
17:48 < kfwkfwq> whats     socket.on('seedbox_list', function () {          socket.get('user_id', function (err, user_id) {
17:49 < AAA_awright> BurpKing: You want to know how your code changes when you make changes. You want to be able to collaborate with other people, and keep track of the changes they make, and download their changes easily. If you both make changes to the same code, you want to be able to merge them together. You want a revision control system, Git is the best one there is by far.
17:49 < kfwkfwq> git push takes many time :p
17:49 < Anon_> kfwkfwq, that's how I'm calling the method on the client side via a setInterval() declaration
17:49 < Anon_> socket.emit("seedbox_list");
17:49 < AAA_awright> takes many time... what?
17:49 < kfwkfwq> making changes at git
17:50 < nathan7> BurpKing: You can easily share changes - if I make an improvement to something I see on github, I just fork it (which in essence is branching) and send a pull request
17:50 < AAA_awright> I don't follow
17:50 < AAA_awright> Git is really fast.
17:50 < nathan7> I was checking out an hg repo the other day
17:50 < nathan7> Christ, that took forever
17:50 < Anon_> kfwkfwq, same thing... :C
17:51 < kfwkfwq> phpmyadmin returns different something ?
17:51 < Anon_> the only way I can seem to get the values to change is by recreating the websocket
17:51 < Anon_> oh yeah
17:51 < Anon_> everytime i refresh the page it's different
17:51 < Anon_> only way it works is to recreate the socket :|
17:51 < AAA_awright> Anon_: What are you doing with transactions
17:51 < AAA_awright> That's going to get you into trouble
17:51 < AAA_awright> There's a lonely 'commit' there and that scares me
17:51 < Anon_> I'm doing nothing with it lol
17:51 < Anon_> someone was suggesting I try that earlier, so I did... lol
17:52 < AAA_awright> That's the only transaction-related code and you haven't looked at that as the source of your problem?
17:52 < AAA_awright> What other transaction code is there?
17:52 < Anon_> that wasn't there before I came here asking for help, and it's not there anymore. xD
17:52 < Anon_> there is none
17:52 < Anon_> just that query
17:52 < AAA_awright> how many query calls are there?
17:52 < AAA_awright> The entire application
17:52 < Anon_> http://pastebin.com/Y9CyhysL
17:52 < nathan7> AAA_awright: a full commitment's what I'm / thinking of
17:52 < Anon_> well firsrt they load the page and socket is created, i run a query to authenticate their session and get user_id
17:53 < Anon_> then I run the code in that pastebin, which is initiated by client through setinterval
17:53 < Anon_> with socket.emit("seedbox_list2");
17:53 < Anon_> it works beautifully on the first call, however, on the repeating intervals the values of rows don't change
17:53 < Anon_> and this is using console.log() immediately after rows is defined (with connection.query(function() {....)
17:54 < AAA_awright> Well then first problem
17:54 < Anon_> rows[0].up_rate remains the same as the initial column value on every interval O-o
17:54 < AAA_awright> Anon_: There's lots of problems and they all need fixing before we can move on to the SQL problems
17:54 < Anon_> okay. :c
17:54  * Anon_ is too nub
17:54 < Anon_> lol
17:54 < AAA_awright> First problem: socket.get('user_id', function(){ ... });
17:54 < AAA_awright> What is that doing
17:54 < kfwkfwq> yep really what its doing :D
17:54 < Anon_> Well from my understanding that was how I could retrieve values stored for an entire websocket session.
17:55 < Anon_> The idea was to authenticate at begning of session and then hold user_id throughout the session
17:55 < AAA_awright> Anon_: It's getting that value every time seedbox_list2 is triggered
17:55 < AAA_awright> Anon_: You realize that value is stored client-side?
17:55 < AAA_awright> And you're not doing any authentication on it
17:55 < Anon_> Oh wow....
17:55 < kfwkfwq> socket.on("seedbox_list", function(user_id){ }
17:55 < kfwkfwq> must be something like that
17:55 < Anon_> hmmm but then the value is coming from client every time?
17:56 < AAA_awright> Yeah
17:56 < AAA_awright> Store it alongside the socket connection object.
17:56 < kfwkfwq> i made
17:56 < AAA_awright> Then you're eliminating an unnecessary callback
17:56 < Anon_> hmmm but I def. don't want the client to be able to manipulate (or even see) that value
17:56 < kfwkfwq> room based chat service
17:56 < kfwkfwq> let me show you
17:57 < Anon_> hmmmm
17:57 < Anon_> maybe I should just store user_id as a variable instead of trying to use sockets.set()
17:57 < AAA_awright> Anon_: Then don't use socket.set/get
17:57 < Anon_> haha
17:57 < Anon_> yeah, thanks :)
17:57 < AAA_awright> Store it alongside the socket
17:57 < kfwkfwq> http://bit.ly/UsMEpy
17:57 < Anon_> i'll try that and see if that's what was causing my sql issue
17:57 < Anon_> :o
17:57 < kfwkfwq> download link : http://www.mediafire.com/?yst7xorshdrjx8g demo : http://bit.ly/UsMEpy
17:58 < Anon_> pretty cool kfwkfwq :D
17:58 < AAA_awright> Probably not, but it all has to get taken care of
17:58 < Anon_> hehe yeah
17:58 < Anon_> thanks for the help :)
18:00 < kfwkfwq> http://pastie.org/5507449
18:00 < Anon_> AAA_awright, you were right, that did not solve my sql problem. 
18:00 < Anon_> http://pastie.org/5507452 
18:01 < AAA_awright> Anon_: Paste the entire thing as a child of the old one
18:04 < Anon_> AAA_awright, this is the entire method right now: http://pastie.org/5507452
18:04 < Anon_> on the client side I'm doing a setinterval with socket.emit("seedbox_list2");
18:04 < AAA_awright> Anon_: And what's the exact problem with that code, again?
18:05 < Anon_> well, 
18:05 < Anon_> 148712
18:05 < Anon_> 148712
18:05 < Anon_> 148712
18:05 < Anon_> that is 3 intervals and the output of console.log()
18:05 < Anon_> console.log(fuck[0].up_rate);
18:05 < Anon_> the problem is that the value of up_rate has changed
18:05 < Anon_> many times over
18:05 < Anon_> but every single interval still gives the value 148712
18:05 < AAA_awright> You can verify that on a seperate query?
18:05 < Anon_> yep
18:05 < Anon_> I check php and phpmyadmin and it gives a different value
18:05 < Anon_> if i refresh the page console.log outputs a new value
18:05 < AAA_awright> And it changes?
18:06 < Anon_> but will keep that value for that entire session
18:06 < Anon_> yeah, it's very strange :x
18:06 < AAA_awright> Well I need to see more code then, you're not using any transactions?
18:06 < Anon_> not at all :c
18:07 < AAA_awright> Anon_: Is there a Git repo somewhere?
18:07 < Anon_> Unfortunately not yet for this.
18:07 < eb0la> Aren't you getting the value from the same index for the whole function?
18:07 < Anon_> http://pastie.org/5507481
18:08 < Anon_> eb0la, yeah, but presumably the value of that array should change for each connection.query() call
18:08 < Anon_> AAA_awright, that is the full app.js file I'm running
18:08 < Anon_> http://pastie.org/5507485
18:08 < AAA_awright> Anon_: Where are you defining 'connection'?
18:08 < Anon_> that's all on the client side
18:08 < AAA_awright> Where's the `var connection`
18:08 < Anon_> AAA_awright, in that mysql function
18:09 < Anon_> connection = MySQL_Connect();
18:09 < AAA_awright> Anon_: Deleting the variable won't stop the setInterval
18:09 < AAA_awright> Anon_: Yes, but where is the 'var'
18:09 < AAA_awright> You need a var somewhere
18:09 < Anon_> hmmm
18:10 < AAA_awright> Otherwise you're creating a global variable and that's Not Good
18:10 < AAA_awright> You'll get multiple connections using the same variable instance
18:10 < Anon_> ah okay, my mistake. I added it to line 14
18:10 < BurpKing> Well im not sure I want to tackle git as well. I have it installed, but it's commandline based
18:10 < Anon_> AAA_awright, well the connection is only called once (during authentication) and then used throughout for other queries
18:11 < AAA_awright> Anon_: I'd move the MySQL connection right below the 'var user_id'
18:11 < AAA_awright> (Also for the purposes of style, I'd call it `userId`)
18:11 < BurpKing> I'm just curious to know from you guys who are pro developers. I'm building a website that works like a tutorial where anybody can post a tutorial. Similar to a forum. Would I be wasting my time raw-coding it using Node + Mongo + Some Front-end JS framework?
18:12 < AAA_awright> BurpKing: There's whole systems for content management like that
18:12 < AAA_awright> That's not really Node.js material, which is for I/O bound applications
18:13 < BurpKing> I see. So I'd be better of with something like Joomla or Drupal instead
18:13 < AviMarcus> so, with HEAVY chatter to forked JS scripts, it seems you just loose information if you go too fast. pausing the input for 20ms at a time seems to help. Seems kinda messy...
18:14 < AviMarcus> is there some official thing for fork.send being full to wait for later?
18:15 < Anon_> AAA_awright, done, however, same issue persists. :(
18:15 < AAA_awright> That's alright
18:16 < Anon_> If it matters the query I'm calling right now is not using userId (I hardcoded my ID for testing)
18:17 < AAA_awright> Anon_: You should probably remove the other calls to socket.get
18:17 < Anon_> yeah, already did :)
18:17 < Anon_> omg
18:17 < Anon_> i think I figured it out
18:17 < AAA_awright> Alright, and avoid use of /* */ for comments
18:17 < Anon_> im such a fkin nub
18:17 < Anon_> okay, just /// ?
18:18 < AAA_awright> Yeah, // won't interfere with nested /* */ (I mean, they don't nest)
18:18 < AAA_awright> What do you suppose the problem is?
18:18 < Anon_> true. thanks for these tips, I appreciate it :)
18:18 < BurpKing> we're all noobs at some things
18:18 < BurpKing> Im a Java noob
18:18 < Anon_> Well, previously I was doing long-polling to update the stats in web_seeds, and now I have that turned off, so the only time the stats are being updated is when I initially load the page with php
18:19 < Anon_> hence giving the illusion that the query is only returning valid results when I intiially load the websocket
18:19 < Anon_> and I was verifying that the mysql stats had changed by loading my php script....
18:19 < Anon_> I'm sorry for wasting your time......
18:19 < AAA_awright> Hence why I asked if you ran the query by itself
18:19 < Anon_> I did earlier, but I didn't notice.
18:20 < Anon_> AAA_awright, do you use bitcoins?
18:20 < AAA_awright> If you're looking to send I'd need to find my address >_>
18:20 < AAA_awright> It's alright
18:20 < Anon_> hehehe
18:20 < AviMarcus> dwolla!
18:21 < Anon_> Well if it's not too much work then yeah, I wouldn't mind sending ya some for the trouble :)
18:21 < Anon_> I really appreciate you being so helpful and patient with a nub like me heh
18:22 < limeforce> hey guys! im trying to do a frame redirect with node/express. can't seem to find a way
18:23 < Burpify> what's a frame redirect? limeforce
18:23 < limeforce> what i'm trying to accomplish is:
18:24 < limeforce> say i have a html page with address example.com/foo/foo.html
18:24 < limeforce> i want to access it by typing example.com/foo WITHOUT the browser changing the URL in the addressbar to example.com/foo/foo.html
18:24 < Burpify> oh
18:25 < limeforce> i am able to http redirect, but that changes the address
18:25 < AAA_awright> Of course it does
18:25 < limeforce> i want it to look nice and i know its possible :)
18:25 < Burpify> So you want the redirect URL to remain instead of the redirected URL?
18:25 < Anon_> Yep, all is working well now AAA_awright. Thanks again :)
18:25 < AAA_awright> limeforce: Just serve the page at http://example.com/foo
18:25 < Anon_> If you find your BTC address just PM me or w.e. and I'll shoot ya a few :)
18:25 < AAA_awright> And don't redirect
18:25 < AAA_awright> :p
18:26 < AAA_awright> limeforce: Also look up the 'Content-Location' HTTP header, though that's mostly used for content-type negotiation
18:26 < Burpify> lol AAA. I was thinking that, but lime might get upset for that suggestion :p
18:26 < AAA_awright> Anon_: Sure
18:28 < limeforce> yep. thats actually true :D atm the page is served from a public folder. but ofc i can also serve the /foo separately and it'll DL the pages it needs separately
18:30 < LEDfan> I have read the 2 websites and made the upload app. Tnx! It's was verry nice to read. 
18:34 < searpro> hello, can somebody help me with the installation? stuck with   File "./configure", line 355     SyntaxError: invalid syntax error on CentOS
18:35 < AviMarcus> how can I figure out what open thing is holding node process open?
18:35 < Wes-> when Node emits events, are the listeners invoked immediately then the emitter emits, or are the emissions queued and served by the event loop?
18:35 < Wes-> s/then/when/
18:35 < AviMarcus> I have the spawns closing the connection..
18:37 < ppppaul> hey
18:37 < ppppaul> i'm running a bunch of nodejs programs, and i want to use --debug on more than one
18:37 < ppppaul> how would i do this?
18:37 < ppppaul> currently when i run --debug on 2 programs i get spam in my console about failing to open sockets
18:38 < AAA_awright> ppppaul: What's the exact error
18:38 < ppppaul> Failed to open socket on port 5858, waiting 1000 ms before retrying
18:38 < EyePulp> ppppaul:  can't you specify the port?
18:38 < AAA_awright> ppppaul: Because the other process is already listening on 5858?
18:38 < EyePulp> use a different port for one of them, and avoid the conflict
18:38 < ppppaul> yeah
18:38 < AAA_awright> ppppaul: Change the port if so
18:38 < ppppaul> so, how do i fix that?
18:39 < ppppaul> how do i change ports?
18:39 < ppppaul> can i configure the debug port in package.json?
18:39 < EyePulp> google for "node.js debugger change port"
18:39 < AAA_awright> ppppaul: or node --help
18:39 < EyePulp> =P
18:39 < searpro> stuck with   File "./configure", line 355     SyntaxError: invalid syntax error on CentOS
18:40 < ppppaul> http://nodejs.org/api/debugger.html is the first hit
18:40 < ppppaul> it's a bit confusing
18:41 < searpro> why it is showing syntax error while installing even if there's alread python 2.7 and make 3.81?
18:42 < ppppaul> --debug=5859 works
18:42 < EyePulp> ppppaul: good find
18:43 < ppppaul> node -help | grep debug doesn't help
18:44 < EyePulp> ppppaul: Solving problems is not always simple or obvious.  So gold star for you!
18:44 < EyePulp> =)
18:44 < ppppaul> wooo
18:44 < EyePulp> heh
18:45 < EyePulp> You're right though, it's not a well documented override
18:45 < ppppaul> i'm quite aware of problems not being easy to solve... with nodejs most of my problems are solved via reading someone elses source code
18:45 < ppppaul> ~_~
18:45 < ppppaul> http://www.jetbrains.com/webstorm/webhelp/running-and-debugging-node-js.html#procedure%0A____________to_debug_a_node.js_application_locallydebugging_a_node.js_application_locallyaswritten
18:45 < ppppaul> the above site helped me solve my issue
18:50 < pspeter3> Is there a node module that has a lot of common data structures and algorithms?
18:53 < AAA_awright> pspeter3: Generally it's one algorithm per module, what are you looking for specifcally?
18:54 < pspeter3> AAA_awright: Just wondering. Someone was arguing with me today that Python is better than node because you can do offline computations. I was looking for examples of modules that countered that point essentially
18:54 < AAA_awright> offline computations?
18:55 < AAA_awright> pspeter3: Python has significant whitespace, that should automatically destroy any argument about python vs. ECMAScript
18:55 < pspeter3> AAA_awright: Stuff like numpy and scipy. Just general data processing and analysis
18:55 < AAA_awright> But in any event, that's comparing apples and oranges, Node.js is a library, ECMAScript is the programming language
18:57 < AAA_awright> pspeter3: That's like saying this table saw is worse because it can't make sandwitches, what sort of argument is that
18:57 < AAA_awright> They have different comparative strengths
18:58 < AAA_awright> pspeter3: Any data analysis tools won't be for Node.js, Node.js is a library. The data tools will be written for ECMAScript, the same way Node.js is written for ECMAScript
18:59 < pspeter3> AAA_awright: I understand that node.js is a library and ECMAscript is the language but at this point, I feel like node is becoming the default name for server side javascript
18:59 < iksik2> scipy, and numpy are also libraries ;-)
18:59 < iksik2> it's a matter of time, when node will get something simillar
18:59 < AAA_awright> pspeter3: Don't let people do that, please
18:59 < AAA_awright> Node.js is one server-side library one can use
18:59 < AAA_awright> And the one of choice beacuse it does async I/O
19:00 < AAA_awright> There's better libraries for stream processing
19:00 < pspeter3> AAA_awright: Ahh
19:00 < AAA_awright> I don't think people realize, Node.js is a tiny project
19:00 < Anon_> with a huge community :D
19:00 < AAA_awright> The total compile time for the Node.js libraries itself is 30 seconds
19:01 < pspeter3> Yeah and that is it's strength. It's like the unix philosophy made into an ecosystem
19:01 < pspeter3> composition of lots of little modules and a small project for them to run on
19:01 < AAA_awright> I'd raise an issue with calling it like the unix philosophy
19:02 < AAA_awright> Node.js is massively bloated, otherwise compiling from scratch wouldn't take 10 minutes
19:02 < AAA_awright> There's the "ecosystem", that is nice, but unfortunately most people really mean "the centralized npm repository" which is hardly unix-like
19:03 < AAA_awright> Most of the modules aren't Node.js specific anyways, they're generic
19:03 < baudehlo> what unix system doesn't have a central software/library repository?
19:03 < AAA_awright> None of them?
19:03 < iksik2> AAA_awright: same thing with linux ;-)
19:03 < iksik2> or unix - whatever
19:04 < AAA_awright> There's package managers but that's just to manage an operating system, you don't use them to register your project like an App Store
19:05 < AAA_awright> Hmm, that's the problem, Node.js moving to the App Store model
19:05 < baudehlo> whut?
19:05 < iksik2> AAA_awright: PPA perhaps? ;>
19:05 < AAA_awright> PPA?
19:05 < baudehlo> all the package managers have a repository.
19:06 < iksik2> ubuntu PPAs for example, repository of packages, exactly the same thing
19:06 < iksik2> or repositories hum -_-
19:06 < AAA_awright> baudehlo: It's managed by the distribution team though, it's not a place for developers to register their project
19:07 < AAA_awright> It's not like I have to go to a central website and register my application before I'm able to start using it on multiple computers
19:07 < baudehlo> you don't have to do that with npm either.
19:07 < AAA_awright> I'm talking about the movement of the Node.js "ecosystem" moving in that direction though
19:08 < AAA_awright> baudehlo: Generally you have to register a name for your package+module
19:08 < AAA_awright> If other people are going to be using it
19:08 < baudehlo> All half decent languages have something like npm.
19:08 < baudehlo> Perl, Python, Ruby, Go, Haskell… They all have an npm equivalent.
19:08 < iksik2> even PHP is using pear/pecl repositories - or 'composer' these days
19:09 < iksik2> exactly the same thing
19:09 < AAA_awright> I have no issues with package managers
19:09 < iksik2> which is good imo [;
19:10 < baudehlo> To be fair, Node's horrendous compile time is because of all the C++. I've never met a fast C++ compiler.
19:10 < baudehlo> The C parts compile really quickly
19:10 < AAA_awright> But it's the bloat
19:11 < baudehlo> What bloat?
19:11 < AAA_awright> baudehlo: Node.js compiles in 30 seconds
19:11 < baudehlo> be specific.
19:11 < AAA_awright> Take a look at the Node.js repository
19:11 < AAA_awright> Only about 5% of it is the actual Node.js code and related support like documentation and tests
19:11 < baudehlo> Yes, so?
19:11 < baudehlo> What is bloat? What would you remove?
19:12 < AAA_awright> The rest is the Node.js website (wtf), npm (Anyone notice how that got merged in right as isaacs got lead developer? Can you say, conflict of interest?)
19:12 < iksik2> dependencies :P
19:12 < AAA_awright> V8
19:12 < AAA_awright> OpenSSL
19:12 < baudehlo> So you'd remove V8 from Node?
19:12 < baudehlo> I think you're confused.
19:13 < AAA_awright> baudehlo: You don't go about importing entire project trees into GIt
19:13 < AAA_awright> That's not the way to do dependencies
19:14 < baudehlo> OK I get it… So you're not actually saying Node is bloated. You're saying the repository is structured wrong?
19:29 < ins0mnia> Anyone knows if Browerify has an node API to watch for changes in entry.js? i.e. not do that through the console? (bowerify enter.js -o bundle.js) ?
19:39 < ericelliott> ins0mnia: That's not Browserify's job, but there are grunt tasks that can help you with that.
19:39 < ericelliott> ins0mnia: Yeoman can even crank out an example of live browser reload for you.
19:40 < ins0mnia> ericelliott: I'm not looking into live browser reload, more so to watch entry.js and re-generate the bundle; I was hoping browserify exposed this in an api to avoid manually watching the file and executing a command to regenerate the bundle..
19:41 < substack> ins0mnia: --watch
19:41 < ins0mnia> substack: That's what I'm trying to avoid
19:41 < substack> why?
19:41 < ins0mnia> substack: would like to watch the file through my code
19:41 < substack> there's an api for it too
19:41 < ins0mnia> substack: API is exactly what I'm looking for
19:41 < ins0mnia> substack: I might have missed it in the docs?
19:43 < substack> var b = browserify({ watch : true }); b.addEntry('enter.js'); b.on('bundle', function (src) { ... })
19:43 < ins0mnia> substack: I'm basically hoping to avoid to manually fs.watch or rely on chokidar
19:43 < ins0mnia> substack: That was easy
19:43 < ins0mnia> substack: awesome, thank you!
19:43 < substack> you could just shell out to the browserify command too
19:43 < ins0mnia> substack: Any advantages to that?
19:43 < ins0mnia> substack: (comparing to using the API)
19:45 < substack> slightly more future proof
19:45 < ins0mnia> substack: will shell the beast then
19:45 < substack> but that doesn't matter if you're strict about versioning
19:46 < ins0mnia> substack: I'm not (at least not right now)
19:46 < niggler> should one use or avoid vm.runInThisContext
19:57 < isaacbw> ping
19:57 < tnorris> isaacbw: the world pong's you back
19:57 < isaacbw> C:
19:58 < iksik2> with a bowling ball -_-
19:58 < niggler> tnorris pongs you back, not pong's
19:58 < tnorris> pong''''''''''''''''''''''''''''''''''''''''s
19:59 < niggler> omg tnorris please no
19:59 < niggler> lol microsoft's brilliance
19:59 < niggler> so to get a single quote to show up in a paste from excel, you need to put two quotes
19:59 < niggler> foo""foo
19:59 < tnorris> niggler: what? you have some problem's with misused apostrophe's?
20:00 < niggler> they are the bane of my existence
20:02 < tnorris> niggler: wait, does that mean the copied text need's to have a "" in it?
20:04 < niggler> tnorris you on a mac?
20:04 < tnorris> linux
20:06 < niggler> for example lets say you want to paste the contents "ab\"c\ndef" to a cell
20:07 < niggler> the actual string you need to pump is "\"ab\"\"c\ndef\"
20:07 < niggler> two double quotes
20:08 < tnorris> wtf? so there's no way to paste w/o formating or the like?
20:08 < niggler> you have to go back and forth
20:08 < tnorris> ugh.
20:08 < niggler> if you were on a mac id say try $ echo -e '"ab""c\ndef"' | pbcopy and then paste it in excel
20:09 < niggler> there's probably a linux equivalent of pbcopy using xsel -b
20:10 < tnorris> i wonder if anyone made the observation during development that that feature was a failure.
20:12 < niggler> it makes sense if your goal is to do everything in a different way from unix
20:17 < tnorris> lol
20:19 < piklu> I am trying to make a web application in node.js
20:19 < jhsto> Any idea why I cant emit data from cross-origin domain to websocket server, but instead, I'm able to emit data from the websocket server to cross-origin domain?
20:19 < piklu> I am looking for frontend UI
20:20 < piklu> I saw Kendo UI, Is something that good available as open source ? I will do heavy charting as well, lots of daya
20:20 < piklu> I saw Kendo UI, Is something that good available as open source ? I will do heavy charting as well, lots of data
20:20 < piklu> Please suggest me a good UI
20:20 < jhsto> There is Twitter Bootstrap, piklu
20:20 < piklu> jhsto : actually it lacks charting
20:21 < jhsto> Oh
20:21 < jhsto> Cant you use any javascript libary to make those charts?
20:21 < piklu> jhsto : I can do with it, but there is a lot lacking in it, I can do charts in high charts.
20:21 < piklu> Have u seen YUI ?
20:22 < jhsto> No.
20:22 < piklu> check this out and look for a moment and tell me if its worth
20:22 < st_luke> how did lt. barclay ever get through starfleet
20:22 < matbee> oh god, kill YUI
20:23 < matbee> kill it with fire
20:23 < matbee> I'm trying to pull this project as far away from YUI as possible
20:23 < piklu> matbee? why so
20:23 < eb0la> piklu, amCharts?
20:24 < piklu> eb0la: HighCharts too, but am looking for a full UI framework, I like Kendo UI and Wijmo. Something on that line
20:25 < piklu> matbee: Is there a problem with YUI ?
20:26 < skeletor_> Hi people, a rookie on nodejs need your help, quite simple
20:27 < fritzy> skeletor_: oh man, I got this... I've been waiting for an easy one
20:27 < fritzy> ;)
20:27 < skeletor_> hahaha
20:27 < skeletor_> far easy :)
20:27 < skeletor_> i installed on one of my server node, 
20:28 < jhsto> But for real, what is this? I can't emit events with data from my server to a websocket, but if the event does not take data in, I'm able to emit it?
20:28 < skeletor_> versions: node 0.9.4 pre
20:28 < skeletor_> and i tried with the typical helloworld.js
20:28 < skeletor_> but when i do node helloworld.js its throw me an error
20:28 < skeletor_> exports, require, module, __filename, __dirname) { var http = require(“http”);
20:28 < skeletor_>                                                                       ^
20:28 < skeletor_> SyntaxError: Unexpected token ILLEGAL
20:29 < skeletor_>     at Module._compile (module.js:437:25)
20:29 < skeletor_>     at Object.Module._extensions..js (module.js:472:10)
20:29 < skeletor_>     at Module.load (module.js:356:32)
20:29 < skeletor_>     at Function.Module._load (module.js:312:12)
20:29 < skeletor_>     at Module.runMain (module.js:497:10)
20:29 < skeletor_>     at process._tickCallback (node.js:335:13)
20:29 < skeletor_> it seems that he cant find the module http
20:29 < matbee> skeletor_
20:29 < matbee> skeletor_, you copy and pasted that from a website, didn't you?
20:29 < skeletor_> indeed
20:29 < mscdex> there's a Teach Yourself Node.js in 24 hours book out now :S
20:29 < matbee> skeletor_, replace the quotes around http with " 's
20:29 < matbee> manually
20:29 < fritzy> skeletor_: a) you're running an unstable version, b) replaces the quotes with real quotes
20:29 < matbee> lol
20:29 < skeletor_> really?
20:29 < skeletor_> omg..
20:29 < matbee> yes really
20:30 < fritzy> those aren't ascii quotes
20:30 < jhsto> lol
20:30 < matbee> websites replace "'s with those similar looking characters to stop sql injection
20:30 < matbee> now you have to watch out for that your entire life, now that you know.
20:30 < fritzy> matbee: hahaha -- seems like a bad ideas for examples
20:30 < skeletor_> such a nerd am i
20:30 < skeletor_> xD
20:30 < mscdex> i don't think that has anything to do with sql injection
20:30 < mscdex> it just looks fancier is all
20:31 < matbee> mscdex, it totally does
20:31 < fritzy> :|
20:31 < skeletor_> im going to try..
20:31 < fritzy> that seems like a terrible idea... examples should be copy-pastable
20:31 < EhevuTov> anyone know how to get node-gyp to explicitly use msbuild.exe (MS VS 2010)?
20:31 < TooTallNate> EhevuTov: pass --msvs_version=2010
20:31 < mscdex> EhevuTov: what version of node-gyp do you have?
20:31 < EhevuTov> it's currently trying to use 2008 VCBuild.exe
20:31 < mscdex> heh :-)
20:31 < matbee> instead of escaping the quotes, or using parameters, people just replace quotes
20:31 < matbee> :P
20:31 < EhevuTov> you guys rock
20:32 < skeletor_> thanks people, it works :)
20:32 < matbee> skeletor_, :)
20:32 < skeletor_> if you people dont mind, im going to take seat here elsewhere...:)
20:32 < matbee> skeletor_, use a jslint parser, it'll catch these things
20:33 < skeletor_> another question, any recommendation about a nodejs ide on osx?
20:33 < matbee> sublime text 2, ftw
20:33 < isaacbw> hoo hah
20:33 < skeletor_> comes it with code higligting and trarala?
20:34 < matbee> yep
20:34 < skeletor_> nice, thanks!
20:34 < jrajav> I want code trarala
20:35 < jrajav> Whatever that is
20:35 < skeletor_> hahah
20:35 < skeletor_> trarala its a german way to say "and so"
20:35 < skeletor_> xD
20:35 < jrajav> Oh, I thought you just massively mistyped "traversal"
20:35 < skeletor_> hahha, so massive i think..
20:35 < skeletor_> not even closer
20:36 < codingstream> skeletor_: vim
20:36 < skeletor_> ufff....vim dont like it
20:36 < jrajav> I would suggest vim too but it has a high learning curve and requires lots of setup
20:36 < matbee> LOL
20:36 < skeletor_> on univ use mostly nano
20:36 < codingstream> skeletor_: emacs then
20:36 < skeletor_> on unix sorry, 
20:36 < matbee> i can't do the vi thing
20:36 < matbee> it makes me upset
20:36 < isaacbw> emacs 4 lyfe
20:37 < matbee> some things a mouse wheel just does better
20:37 < matbee> :P
20:37 < jrajav> Vim is one of those high cost, high reward thingies
20:37 < skeletor_> vi & vim its really antinatural
20:37 < jrajav> If you have a low toleration for delay of gratification it's not for you
20:37 < misteroneill> i'm forcing myself to use vim for the next few weeks - surprised how quickly muscle memory is picking up the commands
20:37 < skeletor_> i mean, so different to remember it, the shorcuts and so
20:37 < matbee> how about classic-mode in sublime?
20:37 < matbee> :P
20:37 < jrajav> Yeah, it's like learning dvorak. You have to go cold turkey or it will just be frustrating
20:38 < isaacbw> if you have trouble remembering complex sequences, it's also not for you
20:38 < codingstream> skeletor_: you can, and should, rebind all the keyboard shortcuts to what you prefer
20:38 < skeletor_> codingstream: i know but, enter the edit mode
20:38 < skeletor_> than
20:38 < skeletor_> then, edit
20:38 < skeletor_> then enter save mode
20:38 < skeletor_> ufff....
20:38 < isaacbw> in emacs if you forget the keys to a command, you can always just type in its name
20:38 < jrajav> Learning vim gets easier with awesome cheatsheets
20:38 < jrajav> Like https://cdn.shopify.com/s/files/1/0165/4168/files/preview.png
20:38 < matbee> esc :s
20:38 < matbee> ins
20:38 < matbee> type
20:38 < matbee> gah!
20:38 < isaacbw> and modes don't work with my way of thinking
20:38 < zomg> When you stop thinking of normal mode as "save mode" it starts making more sense
20:39 < zomg> =)
20:39 < skeletor_> im gonna check this pgn out
20:39 < isaacbw> vim vs emacs is really a ymmv sort of thing
20:39 < matbee> how does emacs differ from vi
20:39 < jrajav> isaacbw: That's kind of funny.. I would have said the exact opposite. *Emacs* is about learning complex sequences (whether those sequences are names of commands or their shortcut), while vim is about learning distinct objects and actions and then combining them to do whatever you want
20:39 < tnorris> matbee: that's a question best left to google
20:39 < matbee> haha
20:40 < codingstream> vim and emacs usually cover everyone's bases though, your brain will map easier to one than the other
20:40 < zomg> Yep
20:40 < skeletor_> why people dont like nano? very simple and lightweight, of course just simple editing, but for linux admin, for my its quite enought
20:40 < zomg> skeletor_: same reason why people don't like notepad I guess =)
20:40 < zomg> although admittedly nano has some more advanced features than notepad
20:40 < skeletor_> indeed.
20:41 < skeletor_> the simplier, the better xD
20:41 < jrajav> Again, it's high cost, high reward. You have to expend nontrivial effort to learn vim, but when you do editing anything becomes much more efficient and fluid. It lowers the barrier to pretty much any text editing task you're doing.
20:42 < jrajav> That also goes for Emacs, and to some extent ST2
20:42 < jrajav> If you don't feel like you can justify that initial effort for yourself, that's just as valid
20:42 < jrajav> Nano is perfectly workable, as is Notepad
20:43 < skeletor_> i tried a few times to learn Vim, but
20:43 < justicefries> i find vim to be an extension of my thoughts when I want to transform a document
20:43 < jrajav> Though I do remember running into some nasty Unicode issues with Notepad a while back ... and it also doesn't handle Unix line endings
20:43 < skeletor_> with the hurries, feel like a duck
20:44 < codingstream> i recently gave a node talk to a college grad class and did a live demo in vim. these students had almost zero experience with anything other than the typical ide's and were as interested in my vimfu as they were about node
20:44 < matbee> lol
20:44 < matbee> i love when people are good with vi --- but it doesn't appeal to me until I awnt to modify configs in unix commandline
20:44 < skeletor_> ok, you convinced me, let give a try to vim
20:44 < jrajav> We should replace the standard, useless Java/OO class in academia with a text editing class
20:45 < WarheadsSE> ^
20:45 < WarheadsSE> maybe text editing + regex
20:45 < jrajav> That would be pretty amazing
20:45 < aslant> skeletor_: learning vim is easy. you just go to this site ---> http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html <---- print out the cheat sheets, and have them around your monitors for a few days
20:46 < jrajav> Why isn't https://cdn.shopify.com/s/files/1/0165/4168/files/preview.png on that list? Best one I've ever seen
20:46 < jrajav> Or is that really just one cheatsheet with a lot of translations
20:46 < jrajav> Cause I don't like that one. Too busy with very little indication of what the commands and objects actually are
20:46 < aslant> jrajav: because that's not useful to a newbie
20:46 < skeletor_>             jrajav i agree with you, after saw both, the one you posted, its better. At least for me
20:47 < codingstream> skeletor_: also try emacs
20:47 < EhevuTov> vim(same could be said of emacs probably) is the only editor that is ubiquitous and powerful between unix systems (that I've found at least)
20:48 < jrajav> There's also http://www.fprintf.net/vimCheatSheet.html http://www.worldtimzone.com/res/vi.html https://github.com/dahu/LearnVim
20:48 < aslant> skeletor_: what you mean after you saw both? Pn the site I sent there are 8 -- 7 lessons and 1 that shows all of the 7 lessons on one screen - i.e. you learn bit by bit
20:48 < jrajav> Also: http://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim/1220118#1220118
20:49 < isaacbw> the big thing is that vim (or vi) is usually preinstalled on linux systems, so if you know it, you can sit down and work on pretty much any linux box
20:49 < simb> So it seems I can write node applications in coffeescript no sweat, but if I want the app to be installed via npm it must be compiled to JS? Is that right?
20:50 < jrajav> If you want it installed *anywhere* it needs to be compiled at some point
20:50 < tnorris> niggler: been looking for a program like xsel for the last week. thanks.
20:50 < jrajav> But yes, for npm it's definitely convention (if not required) to compile it in an install or build hook
20:54 < context> i should start using vim again
20:54 < context> jrajav: and wow! thnx, i think that stackoverflow taught me more about vim in one page than anyone ever has
20:58 < zoned> i'm just getting started with node… var Client = require('mysql').Client; var sql = new Client();    ----> undefined is not a function
20:59 < zoned> can anyone tell me what i'm missing? i've got mysql installed under the node_modules folder
21:00 < jergason> Should it ever be possible for console.log to run after a function returns? I am seeing weird output that looks buffered somehow
21:01 < jergason> zoned: console.log(Client) and see what it prints out
21:01 < zomg> jergason: in chrome console you can sometimes get that but I don't think node has that sort of things
21:01 < zoned> jergason: what do you mean after it returns? like return true; console.log("foo"); ??
21:01 < zomg> in Chrome sometimes you can get the later state of an object because your log an object which is then later modified, and Chrome displays it live
21:02 < zoned> jergason: var Client = require('mysql').Client; console.log(Client); --> undefined
21:03 < jergason> zoned: what mysql lib are you using?
21:03 < zoned> npm install mysql is what i did
21:03 < jergason> because whatever it exports doesn't have a .client
21:03 < EhevuTov> mscdex, have you ever had problems with node-gyp where you have 2008 and 2010 installed at the same time? I'm explicitly specifying 2010 and it even says so in the verbose debug, but it still tries to use VCBuild.exe. I'll post my error msg in a few mintues
21:03 < jergason> zoned: https://github.com/felixge/node-mysql
21:03 < jergason> no .Client
21:03 < jergason> just use what require('mysql') returns
21:04 < mscdex> EhevuTov: i have both installed and it picks up 2010 for me. what version of node-gyp do you have?
21:05 < atula> nom ls and getting README.md not found. Where do I need to place this README.md file?
21:05 < EhevuTov> mscdex, v0.8.1
21:06 -!- mode/#node.js [+o piscisaureus_] by ChanServ
21:06 < mscdex> EhevuTov: well, you can try the master branch. a commit was merged right after 0.8.1 that does more searching for msbuild.exe
21:08 < EhevuTov> mscdex, ok thank you! Too bad I'm in a rush 0_o I wonder if it's my pathing. Although, I can call msbuild.exe just fine, but it is capitalized as MSBuild.exe
21:08 < isaacbw> hoo hah
21:09 < EhevuTov> mscdex, what environment do you use to run node-gyp?
21:10 < mscdex> xp64, vs2008 express + vs2010 express
21:10 < EhevuTov> mscdex, also, are you able to run/build the solution just fine from within VS?
21:10 < mscdex> i would assume so, but i never try because i don't want to mess with VS any more than i have to ;-)
21:10 < EhevuTov> i have a simple hello world program that isn't wanting to compile either
21:10 < EhevuTov> right, I feel the same
21:16 < isaacbw> hoo hah
21:17 < zoned> should i be calling mysqlConnection.connect(); // execute query, then mysqlConnection.end(); every time? or just one connect() and leave it? i keep getting error "Cannot enqueue Handshake after invoking quit"
21:17 < isaacbw> pingaling
21:17 < isaacbw> woo boy
21:18 < isaacbw> I'm typing this as post data in a wget call which goes through nodejs and to ii and the output is being streamed to a browser tab in a keep-alive connection
21:18 < EhevuTov> zoned, just keep one connect session open and do multiple queries
21:19 < isaacbw> node is cool
21:19 < EhevuTov> zoned, usually, that's what you want to do.
21:21 < isaacbw> node is cool
21:21 < isaacbw> hola
21:21 < zoned> ugh
21:22 < isaacbw> I
21:23 < isaacbw> I
21:27 < drudge> damn websphere
21:29 < ppppaul> hey guys
21:29 < ppppaul> i'm sending out http requests, but i don't really know what is sending out
21:29 < ppppaul> how can i log all outbound requests?
21:30 < isaacbw> why can't you keep track of them yourself
21:31 < isaacbw> every time you make a request, log it
21:31 < ppppaul> i have a bunch of wrappers that are doing them... i dono what is going on
21:31 < isaacbw> so you're not making the requests yourself?
21:32 < ppppaul> using promises
21:32 < ppppaul> using q-io and nano and crap
21:32 < atula> so I put my "controller" logic in routes?
21:33 < atula> sorry I installed express and just generated the project
21:33 < isaacbw> maybe you could pass them through a proxy
21:33 < isaacbw> express doesn't have a concept of controllers. You can do it however you want
21:34 < atula> isaacbw, perhaps I can create  a directry and import it
21:34 < atula> isaacbw, I'm comfortable with python "modules" is it the same concept?
21:35 < atula> just import whatever needed into the app.'s ?
21:35 < isaacbw> node does have modules which you require()
21:35 < atula> wait a sec.. what is routes/index.js ?
21:36 < atula> hah. I'm thinking this is the controller?
21:36 < atula> app.'s is the main router
21:36 < atula> and routes/ is where all the controller logic resides
21:36 < atula> make sense ?
21:37 < isaacbw> if you want to, yea
21:37 < isaacbw> https://github.com/visionmedia/express/tree/master/examples
21:37 < atula> isaacbw, heh, it was more a question as I'm not sure … oh good that's good
21:37 < atula> let me go look
21:38 < isaacbw> https://github.com/visionmedia/express/tree/master/examples/mvc
21:38 < isaacbw> express doesn't really provide much in terms of structure. You have to either create it yourself or find a solution to put on top of express
21:39 < isaacbw> also, look at connect. express will make a bit more sense
21:45 < Kakera> what's the difference between connect's session and cookieSession?
21:45 < Kakera> are they a replacement for each other?
21:47 < timeturner> cookie session is where you put the session in the cookie
21:47 < Kakera> session also puts the session in the cookie
21:47 < timeturner> session is where your cookie contains an encrypted version of the key which is used to access the session on the server
21:48 < Kakera> okay, so using cookieSession results in larger cookies?
21:48 < timeturner> yes
21:48 < Kakera> I see
21:48 < Kakera> thanks
21:48 < timeturner> and it's not recommended
21:48 < timeturner> np
21:49 < Kakera> but does it really matter if I'm using passport?
21:50 < Kakera> what gets put in session depends on serializeUser, correct?
21:51 < Kakera> it seems that using both would result in redundant double serialization
21:55 < Kakera> timeturner?
22:08 < Kakera> if I understand it correctly cookieParser turns the cookie header into a req.cookies object
22:09 < Kakera> and both session and cookieSession turn req.cookies[key] (where key defaults to 'sid') into another object
22:09 < Kakera> but I have a hard time figuring out what passport.session() does with the session objecct
22:11 <@mbalho> is there a node module for ffmpeg or something similar that can take in file streams and return new file streams of converted video
22:13 < Kakera> if anything, such a module would be a wrapper around ChildProcess
22:15 < Kakera> god the code for passport is terrible
22:16 <@mbalho> Kakera: it could be native bindings too
22:16 < Industrial> I wonder if there's an asynchronous flow library that lets you compose actions by defining their dependancy actions, such that the system finds out which one it can run in parralel ...
22:17 <@mbalho> Industrial: but you never know how long something takes to run, right?
22:17 < Industrial> mbalho: that's fine with callbacks, right? eventually form a HTTP response
22:18 < chrisjaure> Industrial: https://github.com/superjoe30/node-plan
22:18 < Industrial> but if say for sending a response I need 2 datrabase queries but also a template, the last action (being the response sending part) can just ask for a template and the result of the 2 queries by defining them as dependancies .. and they can run in parralel for all it cares.
22:19 < niggler> async.parallel?
22:20 < Kakera> alright, I think I've figured it out
22:20 < Industrial> chrisjaure: thanks I'll check it out
22:23 < Kakera> cookieParser parses the cookie header into an object and puts it in req.cookies; session and cookieSession look at a certain key in req.cookies (session uses 'connect.sid' by default, cookieSession uses 'connect.sess') and deserialize into req.session using some algorithm; passport.session() looks at req.session.passport
22:24 < Kakera> hopefully I got it right, correct me if I'm wrong
22:26 < Kakera> I'm kinda upset with passport not saying that they use 'passport' anywhere in the docs
22:53 < sayd> anyone using coffeebone? it may not be related, but the mocha stub it creates complains about a global leak with LiveReload
22:58 < Kakera> hmm, a question about v8's optimization
22:58 < Kakera> let's say I have a huge object (think a thousand keys)
22:59 < Kakera> I want to write a function that looks up a key in that object and returns the value
23:00 < Kakera> would [ /* the whole object literal */}[key] be slower in the long term than assigning the object to a variable somewhere else and then looking up from that variable?
23:03 < tim_smart> Anyone know of any modules that provide similar functionality to learnboost's old cluster module?
23:03 < tim_smart> pidfiles, logging etc. to node's built in cluster module.
23:12 < stagas> tim_smart: there was a fork recently, can't remember the name but it had learnboost's cluster api using the new built in stuff
23:12 < tim_smart> stagas: Right. Might have to track that down.
23:19 < stagas> tim_smart: I think this is it https://github.com/redventures/workforce
23:19 < misterhat> ahh that's so cool :DD
23:26 -!- mode/#node.js [+o piscisaureus_] by ChanServ
23:27 < acidjazz> anyone here good w/ mongoose virtuals?
23:29 < mdedetrich> hey peeps
23:42 < mclenithan> omgmfstfu  I made something... I actually made something that is "OK".  if you have to make a node.js site for a restaurant you can use my repo! https://github.com/mclenithan/restaurant
23:42 < mclenithan> please let me know whatchall think
23:45 < fent> what is a module for parsing uploaded files with multipart/form-data? looked at formidable but it requires a directory to save the file in, would like a streaming solution
23:45 < zomg> mclenithan: if you want to make it more reusable, I'd suggest moving more things into config files. Eg. database host, the twitter search phrases and such
23:47 < mclenithan> ok
23:47 < mclenithan> i can do that
23:47 < zomg> Looks alright otherwise
23:48 < zomg> Maybe add validation for the mailing list entries though
23:49 < mclenithan> very true, right now I only use browser validation, html5 stuff.  not the most reliable
23:49 < zomg> Yeah
23:49 < mclenithan> thanks!
23:49 < zomg> np
23:59 < Hotroot> I was thinking about writing a telnet/ssh to IRC proxy. Are proxies like that in a risky area legally?
23:59 < Hotroot> Like if someone DDoS's through me, am I boned?
--- Log closed Tue Dec 11 00:00:06 2012
