--- Log opened Fri Oct 26 00:00:12 2012
00:01 < Fodi69> othiym23: thanks for the tip
00:01 < Fodi69> and it is way better to debug, when I actually see any code :D
00:05 < jwulf> othiym23, does private browsing disable extensions?
00:06 < rauchg> jwulf you can opt-in to enable extensions during private browsing with a checkbox
00:06 <@konobi> i've found that webkit-devtools-agent is actually usable
00:06 < rauchg> about:extensions 
00:06 < Fodi69> jwulf: default yes, but you can enable them in private browsing too if you want
00:07 < Fodi69> thank you for all the help
00:08 < Fodi69> jwulf and othiym23 especially
00:08 < Fodi69> :)
00:09 <@Nexxy> \o/
00:09 < jwulf> am I the only one using TypeScript or something?
00:11 < jwulf> Nexxy is feeling the node.js love
00:50 < dylanvee> Is there a de facto web socket server implementation for Node these days?
00:50 < dylanvee> And more importantly, are there any that conform to the Stream API?
00:50 <@Nexxy> dylanvee, shoe
00:50 <@Nexxy> dylanvee, http://github.com/substack/shoe
00:51 < substack> beep boop
00:52 < dylanvee> Nexxy: interesting, thanks for the tip
00:52 <@Nexxy> indubitably
00:53 < dylanvee> SockJS is similar to Socket.IO, no?
00:54 <@Nexxy> dylanvee, in that they are both implementing something like websockets, yeah
01:20 < tt> a
01:22 < Guest46065> klkk
01:22 < Guest46065> lml
01:22 < Guest46065> jjjjjjjjjjjjjj
01:23 < Guest46065> 9
01:23 -!- mode/#Node.js [+b *!*78c232c2@*.120.194.50.194] by mbalho
01:23 -!- Guest46065 was kicked from #Node.js by mbalho [Guest46065]
01:30 < dylanvee> Nexxy: One last question, thanks: why shoe instead of vanilla Socket.IO?
01:30 < dylanvee> I'm afraid the shoe readme isn't quite clear
01:32 < othiym23> dylanvee: socket.io is far from vanilla ;)
01:32 < othiym23> it does a lot more than shoe; shoe is by far the simpler option
01:33 < othiym23> but it may be harder to get up and running with in the beginning, because it doesn't provide a lot of the helper stuff that socket.io does
01:33 < othiym23> read up on engine.io which is the transport mechanism that socket.io builds upon
01:37 <@mbalho> socket.io and sockjs are both pretty complex unfortunately
01:37 <@mbalho> shoe is an abstraction layer that removes abstraction
01:37  * mbalho facepalm
01:40 < Sueiali> can i ask a question?
01:43 <@Nexxy> Sueiali, it's generally considered bad form to ask if you can ask a question
01:43 <@Nexxy> just ask
01:43 < Sueiali> k sry
01:44 <@Nexxy> also, asking to ask... is also asking... so you're not *really* asking anything, are you?
01:44 < Sueiali> is there a way to dynamically increase the max number of open files in node?
01:44 < mscdex> Sueiali: ulimit -n ?
01:45 < Sueiali> is that cross platform?
01:45 < mscdex> no
01:45 < mscdex> you don't really care about Windows do you? ;-)
01:46 < Sueiali> i'm on windows lol
01:46  * mscdex shakes a fist at Windows
01:48 < rwaldron> Nexxy did you ever watch Lost?
01:49 <@Nexxy> nosir
01:49 < Sueiali> i never got into that show
01:49 < Sueiali> the walking dead is where its at though
01:49 < Sueiali> what do you guys think about revolution?
01:49 < rwaldron> you could make a drinking game out of how many times the writers used "______, can I ask you a question?" in scripts for the show
01:50 <@Nexxy> haha
01:51 < Sueiali> which writers
01:52 < Sueiali> lost or twd
02:25 < lohkey> playing with libuv, it seems unnecessarily complex to have separate request response objects when receiving HTTP requests from an implementation standpoint instead of just a single duplex stream
02:26 < lohkey> with the req/res approach you basically have to write a readable stream and a separate writable stream on what is naturally a single duplex stream
02:33 < other_guy> hey everybody, I'm having a hell of a problem with a JSON serialization issue.  Specifically a JSON.stringify replacer function issue
02:36 < other_guy> https://gist.github.com/3956592
02:36 < other_guy> that worksâ€¦ but the same process applied to my larger app does not.
02:37 < other_guy> Basically what's happening in my app is that I'm losing the custom constructor type/name once I'm in the objToId function
02:38 < other_guy> So mostly I'm looking for ideas as to why that might be happening
02:38 < other_guy> what would cause an object to lose its constructor ?
02:47 < min|dvir1us> Hi. Why is there async.series?
02:47 < SomeoneWeird> to run async functions in a series?
02:48 < min|dvir1us> How does async know which argument is the callback?
02:48 < SomeoneWeird> huh
02:49 < min|dvir1us> SomeoneWeird: in order for async to be able to run async functions in a series, it has to pass each function a callback to know when it's done, right?
02:49 < SomeoneWeird> yea
02:50 < min|dvir1us> So how does async know which argument is the callback?
02:50 < SomeoneWeird> the first one'
02:51 < min|dvir1us> SomeoneWeird: how do you know?
02:55 < deoxxa> newline-delimited json response streams over http: what mime-type should i be using?
02:56 < astropirate> text/json
02:56 < astropirate> guessing
02:56 < deoxxa> i see mention of `application/json', `application/jsonstream', `application/x-json-stream' and some variations like `application/json; layout=line-stream'
02:56 < min|dvir1us> deoxxa: go with what you think is right until it causes a problem.
02:57 < deoxxa> astropirate: that's incorrect in a couple of ways, i think. 1) text/json isn't standard, 2) it doesn't convey the "stuff delimited by newlines" thing
02:57 < deoxxa> min|dvir1us: that's my only real option right now, but i'd still like to know what other people have done/are doing
02:58 < min|dvir1us> deoxxa: sounds like you know already. :)
03:01 < deoxxa> i think i'm going to go with the layout=line-stream thing for now
03:01 < deoxxa> seems to be the most "correct" way to do it
03:09 < dylanvee> othiym23: Oops, I meant shoe vs. SockJS not shoe vs. Socket.IO
03:18 < majek> dylanvee: btw, if you have any sockjs related questions some folks are quite often hanging around on #sockjs
03:35 < dylanvee> majeck: ok thanks
03:44 < tunabananas> newb here trying out my first node.js project (an irc bot for our oakland hackerspace) - just installed node.js on my ubuntu server but its unable to find the irc module when i try to run the script (installed using nvm)
03:46 < jwulf> tunabananas, did you do npm install <name of irc module>
03:46 < jwulf> in your project directory?
03:48 < tunabananas> oh, so the module should be installed in the same directory as my script?
03:48 < jwulf> yes, it will install in a node_modules subdir
03:48 < jwulf> all your dependencies go in there
03:49 < jwulf> except for the core ones, of course
04:23 < tunabananas> jwulf: thanks! making headway now ;)
04:24 < jwulf> great
04:24 < jwulf> tunabananas, you'll be ready to start learning TypeScript soon
04:24 < jwulf> to take it to the next level
04:25 < zak> next level down
04:28 < jwulf> hahaha
04:28 < chovy> there is abstraction in the work place too. it's called technical managers. they don't want to actually write the real code.
04:29 < jwulf> although, i'll be laughing harder once ES6 comes out and it turns out to be.... TypeScript
04:29 < jwulf> lol
04:30 < jwulf> anyone using Jasmine for unit tests?
04:31 < jwulf>  expect( result.metadata.id ).toBe( TEST_SPEC_ID );
04:31 < jwulf> gives me an error:
04:31 < jwulf> Error: Expected '12339' to be 12339.
04:31 < thewinner> hello world
04:32 < jwulf> looks like a type error
04:32 < jwulf> probably something that TypeScript would fix....
04:33 < thewinner> what happen
04:34 < jwulf> anyone using Jasmine for unit tests?
04:34 < jwulf> <jwulf>  expect( result.metadata.id ).toBe( TEST_SPEC_ID );
04:34 < jwulf> <jwulf> gives me an error:
04:34 < jwulf> <jwulf> Error: Expected '12339' to be 12339.
04:36 < jwulf> fixed it with a cast
04:36 < zak> one's a number, one's a string
04:36 < jwulf>  expect( result.metadata.id ).toBe(  '' + TEST_SPEC_ID );
04:36 < jwulf> casts it to a string
04:37 < zak> why not change TEST_SPEC_ID
04:37 < jwulf> hmmm, it's used as  a numeric argument elsewhere
04:37 < jwulf> let me see if it works that way
04:38 < thewinner> oh
04:38 < zak> then create another constant/global
04:38 < zak> TEST_SPEC_ID_STRING
04:38 < jwulf> ah good idea
04:38 < jwulf> yeah, it blew up the other way
04:38 < jwulf> all my methods have defensive programming to protect against arguments of the wrong type
04:40 < jwulf> thanks zak, i went with that
04:46 < sshaginyan> Hey guys how do I know if a worker is busy using clusters?
04:46 < zak> np jwulf 
04:47 <@mbalho> tunabananas: hello from new york (its max)
04:47 <@mbalho> tunabananas: im back in oakland in mid november
04:47 < sshaginyan> From my Master I send a array via worker.send(array) I want to know in my Master when the worker is done processing the array
04:48 <@mbalho> capitalizing the m creeps me out
04:48 < tunabananas> mbalho: ahoy! what're you doing on the cold&bitter coast?
04:48 < tunabananas> lol
04:49 <@mbalho> tunabananas: goin to lots of conferences
04:49 <@mbalho> tunabananas: a bunch of my portland friends are in oakland right now, i am sad that i'm not there
04:51 < tunabananas> mbalho: there were some fliers circulating declaring war on "Anarchists & Vandals" - "BYOB (bring your own bat)"... wary of going downtown tonight
04:52 < sshaginyan> So no one has done clusters here?
04:52 <@mbalho> lol
04:53 < ChrisPartridge> sshaginyan: send a message back saying it's done?
04:53 <@mbalho> sshaginyan: process.send
04:54 <@mbalho> tunabananas: you should check out nodecopter.com
04:54 <@mbalho> tunabananas: i wanna do one in oakland
04:54 < sshaginyan> Guys lets cores = require('os').cpus().length return 8 but I make 9 workers will one of them be queued?
04:54 <@mbalho> tunabananas: i went to the first two in berlin and dublin, they wer super fun
04:56 < ChrisPartridge> sshaginyan: should still work, OS will just take care of the scheduling afaik
04:57 < sshaginyan> ChrisPartridge: I know but lets say something a 9th worker is suppose to do before a 5th worker 
04:57 < sshaginyan> How does that get handled?
04:57 < ChrisPartridge> then you have a problem in your code
05:09 < deoxxa> jwulf: you probably shouldn't be doing things defensively internally
05:09 < deoxxa> jwulf: it's not just that you shouldn't need it, but also that it can mask errors downstream
05:10 < deoxxa> jwulf: e.g. if you sanitise input at every stage of your application, you can end up hiding an error that you might want to know about
05:11 < jwulf> deoxxa, true dat
05:13 < jwulf> ...although
05:13 < jwulf> what worries me is that the behavior of my code will not be to throw an error
05:14 < jwulf> but rather to execute in an unpredictable way
05:16 < tunabananas> mbalho: nodecopter! this looks rad =)
05:32 < kusumahendra> hello, im newbie in node and socket.io. i want to create realtime apps with multiple node sharing one socket.io port. how can i do that?
05:34 < ChrisPartridge> kusumahendra: i've not done it, but you should be able to use cluster
05:34 < ChrisPartridge> probably need to ensure socket.io uses a redis store or something
05:35 < kusumahendra> is it possible, right?
05:36 < kusumahendra> cause i need to use it on my bachelor thesis
05:36 < kusumahendra> just want to ensure i can do that
05:36 < Zoney> is this different from regular socket.io apps some how?
05:38 < ChrisPartridge> kusumahendra: I can't think of any reason it wouldn't be possible, I'm sure someone has already done it, try google
05:40 < kusumahendra> i'd try, but i will try harder. thx 4  ur response bro
05:40 < sshaginyan> Hey guys quick question http://pastebin.com/8iwiDMtG
05:40 < sshaginyan> I want the replace function to complete before sending things
05:41 < sshaginyan> how would I do this?
05:42 < ChrisPartridge> kusumahendra: this might help http://stackoverflow.com/questions/10544350/socket-io-and-node-js-core-cluster
05:43 < sshaginyan> nm go it
05:43 < airtanah> kusumahendra: does it have to share one port? i think some proxies support websockets
05:43 < kusumahendra> thx
05:44 < ChrisPartridge> yeah http-proxy supports websockets afaik
05:45 < airtanah> ChrisPartridge: would you use http-proxy in production?
05:46 < sshaginyan> Guys how do I make sure .replace() is blocking before I do anything else?
05:46 < ChrisPartridge> airtanah: yeah, hasn't let me down yet
05:47 < ChrisPartridge> sshaginyan: .replace on a string?
05:47 < sshaginyan> yeah
05:47 < sshaginyan> ChrisPartridge: page.toString().replace(/href\s*?=\s*\"\s*.*?\"/g, function(match) { this is what I'm doing
05:47 < sshaginyan> and then on match on doing another operation
05:47 < ChrisPartridge> assign the value
05:47 < sshaginyan> ?
05:47 < airtanah> sshaginyan: i think you mean synchronous, not blocking
05:48 < sshaginyan> yes sorry
05:48 < ChrisPartridge> .replace returns a value, it does change initial variable
05:48 < airtanah> if the callback is synchronous, it will be executed immediately, otherwise it will be queued for later
05:48 < ChrisPartridge> does not*
05:49 < sshaginyan> ChrisPartridge: airtanah basically I have a html page and I'm parsing all urls but when I return all urls they all need to be in a array
05:49 < sshaginyan> in a single array
05:50 < sshaginyan> Guys my code
05:50 < sshaginyan> http://pastebin.com/pY2kC0Be
05:50 < sshaginyan> ChrisPartridge airtanah: check it out
05:52 < airtanah> sshaginyan: i haven't gone over the code in detail, but i see what youer asking
05:52 < aeu> I have multiple tcp connection objects which is good adding them to one domain object or create separate domain object for each connection ?
05:52 < airtanah> if cb(url) will contain the array of urls, or be empty
05:53 < sshaginyan> airtanah: I wan cb(url) to return all the urls
05:53 < sshaginyan> not just some
05:53 < sshaginyan> like cb(urls) gets called 10 times
05:53 < airtanah> the method in replace should execute before cb(urls) is called
05:53 < sshaginyan> just want it to get called once
05:53 < airtanah> yes
05:54 < sshaginyan> yes
05:54 < airtanah> it's a synchronous call, so you're good
05:54 < sshaginyan> no it's not
05:54 < sshaginyan> I'm getting this line ======testing===== over 50 time
05:54 < sshaginyan> times*
05:55 < stagas> sshaginyan: you need to get the response data all in one variable first then run it with clean url
05:55 < sshaginyan> yes lol just figured it out let me see if I can
05:56 < aeu> i mean nodejs error handling domain not ip domain :)
05:56 < sshaginyan> stagas: So I would do x += response?
05:56 < sshaginyan> stagas: or is there an event for that
05:57 < airtanah> stagas is right, you need to buffer the response data as you gave
05:57 < airtanah> then response.on('end', ... call clean_url
05:57 < sshaginyan> awsome
05:57 < sshaginyan> Guys but in general that will slow things down right?
05:58 < sshaginyan> I mean there must be a better design
05:59 < airtanah> i think you can use a buffer instead of a string concat
05:59 < sshaginyan> k
06:00 < sshaginyan> Actually I know what to do I don't need a buffer :)
06:54 < dileep> What is tthe main usage of node.jjs
06:55 < AAA_awright> Everything but operating your kitchen sink (and only because there's no known implementations of the coffeepot protocol)
06:55 < AAA_awright> dileep: But usually, asynchronous I/O
06:56 < dileep> yeah i know that but i mean   to be like what kind of applications we r  able to made.any live example u have...
06:58 < dileep> AAA_awright,yeah i know that but i mean   to be like what kind of applications we r  able to made.any live example u have...
07:00 < niggler> dileep: you are limited by your imagination
07:00 < deoxxa> which is apparently quite limited
07:00 < deoxxa> hoooooo
07:00 < PaulCapestany> lol
07:00 < dileep> niggler:wat do u mean
07:01 < niggler> "what kind of applications we r  able to made"
07:01 < deoxxa> dileep: https://github.com/joyent/node/wiki/Projects,-Applications,-and-Companies-Using-Node
07:01 < niggler> given that you can write C++ extensions, you can literally write anything you can imagine
07:02 < deoxxa> niggler: can i write love :<
07:02 < ujjwalt> Where is EventEmitter located?
07:02 < deoxxa> ujjwalt: events
07:02 < deoxxa> ujjwalt: i.e. require("events")
07:02 < niggler> indeed deoxxa for certain definitions of love
07:02 < niggler> var love = require("love")
07:02 < ujjwalt> I meant in the node source code
07:02 < deoxxa> > Error: Cannot find module 'love'
07:03 < deoxxa> ujjwalt: events.js
07:03 < niggler> npm install love?
07:03 < ujjwalt> and the c++ class?
07:03 < yawnt> Ã²/ deoxxa 
07:03 < niggler> https://npmjs.org/package/i_love_u
07:04 < niggler> https://npmjs.org/package/love
07:04 < niggler> ha
07:04 < deoxxa> ujjwalt: what c++ class
07:04 < ujjwalt> node::EventEmitter
07:05 < ujjwalt> sorry am new to this stuff so I might be talking crap
07:05 < deoxxa> is that... a thing?
07:05 < ujjwalt> I want to write a c++ add-on and have a class that inherits from EventEmitter
07:05 < niggler> deoxxa: boom headshot!
07:05 < ujjwalt> more importantly I want to register an event handler - so how do I go about it?
07:06 < deoxxa> ahh. that gets a bit complex and i'm not entirely up to date with node's c++ stuff. you might want to try asking the guys in #libuv - they're very knowledgable about the c++ side of node.
07:06 < clever> ujjwalt: from what ive seen, the c<->js api isnt very object oriented
07:06 < rendar> isn't there somewhere a guide on the c++ side of node?
07:06 < clever> ujjwalt: nearly all of the api's crossing that are just bare functions without an object
07:06 < niggler> what are you trying to do ujjwalt 
07:07 < deoxxa> rendar: there are a few - each of them different and covering a different era of node ;)
07:07 < ujjwalt> niggier: I am attempting a wrapper around libpcap - I know there is already one
07:07 < ujjwalt> but I want my own
07:07 < ujjwalt> so am writing a session class that emits a packet event
07:07 < ujjwalt> and I need to register a callback for it
07:07 < rendar> deoxxa: eheh cool, where? do you have some link?
07:07 < dileep> deoxaa,yyeah i aready know that but how many applicattions run on that.do u have check anybody code.
07:08 < niggler> so ujjwalt i assume you are familiar with pcap
07:08 < ujjwalt> yes
07:09 < deoxxa> rendar: i remember reading http://kkaefer.github.com/node-cpp-modules/ and http://nodejs.org/docs/latest/api/all.html#all_addons pretty thoroughly when i was writing c++ things
07:10 < deoxxa> dileep: that's a hard question to answer - there are probably thousands of applications written in node
07:10 < ujjwalt> http://marcorogers.com/nodeconf-2011/node_addons_presentation.html
07:11 < niggler> how are you doing the pcap loop?  are you using pcap_loop?
07:11 < ujjwalt> pcap_dispatch actually
07:11 < dileep> deoxaa,could  u provide me anyone of that,so i have the idea for node.js application.because recently i have my hands on php.
07:12 < ujjwalt> what i plan to do is to register function with pcap_dispatch which just
07:12 < ujjwalt> emits the packet event and passes on a js object with the decoded packet
07:12 < niggler> ujjwait: the callback should emit a javascript event
07:13 < rendar> deoxxa: thanks
07:13 < ujjwalt> I didn't get oyou
07:13 < clever> ujjwalt: from what ive seen, the c api cant do complex things like emiting an event easily, it generaly just calls a function reference and lets the js do that
07:13 < ujjwalt> aha
07:13 < dileep> deoxaa,could  u provide me anyone of that,so i have the idea for node.js application.because recently i have my hands on php.
07:13 < dileep> deoxaa,could  u provide me anyone of that,so i have the idea for node.js application.because recently i have my hands on php.
07:14 < clever> ujjwalt: you would likely want to pass a js function reference over to the c side, and have c call it for each packet
07:14 < ujjwalt> so i should probably have a session js object which does the events and call pcap functions with a c++ object
07:14 < niggler> mono the event can happen within C++ itself
07:14 < ujjwalt> yeah thats a possibility - sounds good
07:14 < niggler> you can use Call in the C++ api to generate the event directly
07:15 < ujjwalt> Emit(packet_symbol, ..)?
07:16 < clever> v8::Function::Cast(*data->callback)->Call(v8::Context::GetCurrent()->Global(), 2, argv);
07:16 < clever> a random example from a npm module i use
07:16 < ujjwalt> anyone knows anything bout that
07:17 < ujjwalt> how about I register a PacketReady() with pcap
07:17 < ujjwalt> and that function creates a js put object and passes it like this
07:17 < niggler> Emit->Call(handle, argc, argv)
07:17 < clever> ujjwalt: https://github.com/voodootikigod/node-serialport/blob/master/src/serialport.cpp#L68
07:17 < ujjwalt> Emit(packet_ready_symbol, 1, arg)
07:17 < ujjwalt> where arg[0] = pkt
07:18 < niggler> https://github.com/mscdex/node-ncurses/blob/master/src/binding.cc#L2304
07:21 < ujjwalt> the guys at libuv say its best if i do event handling in js
07:22 < ujjwalt> oh man am confused
07:22 < phrearch> hello
07:23 < phrearch> i want to implement some kind of event signalling within my application. What options are there for node.js, or is it best to create it myself? 
07:23 < phrearch> like event.trigger('client_connected', client, params) and event.listen('client_connected')
07:24 < phrearch> something like that
07:24 < ujjwalt> I'll try out your suggestions - thanks people
07:24 < chovy> can someone help me refactor into not using nested callbacks? I loose the previous 'users' list from the previous callback. https://gist.github.com/687c2260d3c23fb93bf0
07:28 < chovy> anyone?
07:30 < [AD]Turbo> hi there
07:50 < chovy> [AD]Turbo: howdy
07:51 < chovy> how should i handle cases where i add an attribute in my model, but existing data doesn't have that attribute in mongo?
07:51 < chovy> in my loop in the view, do I have to check for it always before using it?
07:55 < phrearch> hm with nodejs events, would it be easy to implement filter-based emitters?
07:55 < phrearch> like it takes regex matching for matching
07:56 < phrearch> err, for emitting
08:01 < nwillems> Hello there. I'm writing a logviewer for JSON based logs - and I would like someone to review what I'm doing. So far there is a server component written in node, so if you have the time I will be very gratefull for your thoughts: https://github.com/nwillems/napier-viewer thanks in advance.
08:03 < chovy> what's an acceptable level of nested callbacks?
08:03 < chovy> i find it rather cumbersome to refactor callbacks out 
08:04 < chovy> into separate functions wrapped by a closure to pass data down the chain
08:07 <@Nexxy> chovy, <80 characters
08:08 <@Nexxy> you shouldn't need more than about 3 nested callbacks at most
08:09 < chovy> Nexxy: that's about what i have
08:10 < chovy> someone told me not to nest callbacks
08:10 <@Nexxy> chovy, it's best not to
08:10 <@Nexxy> but <=3 is still fairly easy to make sense of usually
08:11 < chovy> Nexxy: https://gist.github.com/687c2260d3c23fb93bf0
08:11 < cr11sh> should node_modules package be place for every project ?
08:11 < chovy> does this make sense?
08:12 < chovy> i'm passing data from 1 call to the next
08:12 < cr11sh> can't it be placed in a place say where node is installed i.e /usr/bin/ ? :D
08:12 < chovy> cr11sh: npm install foo -g
08:12 < chovy> otherwise it isntall in ./node_modules
08:12 <@Nexxy> cr11sh, you should install most modules locally
08:14 <@Nexxy> cr11sh, some "utility" modules may prefer global installation (the -g flag) which should put them in /usr/local/bin/ I believe
08:14 <@Nexxy> not sure where they go on windows
08:14 < cr11sh> @chovy @nexxy thank you guys, i will try that out
08:14 <@Nexxy> cr11sh, :)
08:14 <@Nexxy> ;
08:15 < whiskers75> Is there a way to get data from a socket ONCE without going through socket.on()?
08:15 < cr11sh> so I can directly do a rm -rf for my exisiting modules right ?
08:15 < timeturner> the only apparent benefit to installing modules globally is space and PATH access right?
08:15 <@Nexxy> cr11sh, if you want to reinstall them, sure
08:16 < cr11sh> @nexxy: thanks man
08:16 <@Nexxy> cr11sh, you can also use `npm rm <module>`
08:16 < chovy> Nexxy: did you look at my gist?
08:16 <@Nexxy> cr11sh, I'm not a man, but you're welcome 
08:16 <@Nexxy> chovy, yes
08:17 < whiskers75> socket.on applies for the entire server callback, is there a way to get something that destroys itself after taking data?
08:18 < cr11sh> @nexxyy :D :)
08:19 < whiskers75> Is there a way to get data from a socket ONCE without going through socket.on()?
08:19 < daedeloth> hello javascript peoples
08:19 < whiskers75> hello
08:20 < daedeloth> I'm planning to write a real time space game thingy and I'm deciding what server language I should use. Is nodejs capable of handling a "couple" of websockets?
08:21 <@Nexxy> nodes js is capable of handling...
08:21 <@Nexxy> at least 5
08:21 < daedeloth> that sounds like I should look more in the direction of c++ or java :)
08:21 < whiskers75> Is there a way to get data from a socket ONCE?
08:21 < whiskers75> daedeloth: maybe you should :)
08:22 < daedeloth> but no, seriously, are you saying nodejs is not the best tool for the job then?
08:22 <@Nexxy> daedeloth, if you want easy websocket like stuff
08:23 <@Nexxy> yeah it's a pretty good choice
08:23 <@Nexxy> look at things like sockjs and shoe
08:25 < whiskers75> bump, anyone?
08:25 < daedeloth> you bump an aweful lot of times eh ;)
08:25 < deoxxa> whiskers75: socket.once("data", function(data) { /* read the damn docs */ })
08:25 <@Nexxy> so grumpy
08:26 <@Nexxy> lol
08:26 < whiskers75> deoxxa[grumpy]: socket.once? I WAS READING THE DOCS
08:26 < deoxxa[grumpy]> lol
08:27 <@Nexxy> let's all start yelling
08:27 < deoxxa[grumpy]> whiskers75: http://nodejs.org/docs/latest/api/all.html#all_emitter_once_event_listener
08:27 <@Nexxy> get all the frustration out at once
08:27 < whiskers75> there is nothing in the net.Socket docs saying socket.once
08:27 < SomeoneWeird> no u ;;; //
08:27 <@Nexxy> ;
08:27 < deoxxa[grumpy]> whiskers75: socket is an EventEmitter, so all the normal EventEmitter stuff applies
08:27 < deoxxa[grumpy]> including things like .once
08:27 < whiskers75> ooh k
08:27 <@Nexxy> someone should put a mumble server up
08:27 <@Nexxy> just so everyone can get on and yell
08:27 < whiskers75> oh no.
08:28 < whiskers75> you can get free 5 slot ones
08:28 < SomeoneWeird> anyone know if theres a package for parsing ssl certs?
08:28 <@Nexxy> you can get free many slot ones
08:28 < adrianlang> SomeoneWeird: TLS in core?
08:28 < daedeloth> do I understand right that nodejs is, by default, single threaded? So waiting for an sql command to return it's value will block all other requests?
08:28 < whiskers75> Nexxy: really?
08:28 < whiskers75> anyway, this isn't #mumble
08:29 < deoxxa[grumpy]> daedeloth: no
08:29 < whiskers75> deoxxa[grumpy]: remove the [grumpy] tag :)
08:29 < SomeoneWeird> adrianlang, eh maybe, I can't find anything though
08:29 < deoxxa[grumpy]> daedeloth: well, yes, node is "single threaded"
08:29 < adrianlang> SomeoneWeird: http://nodejs.org/api/tls.html
08:29 < deoxxa[grumpy]> daedeloth: but it doesn't, by default, block on things it doesn't need to block on
08:30 < whiskers75> Node.js is a plethora of callback hell and functions.
08:30 < cr11sh> @nexxy: I installed socket.io using npm install socket.io -g and the module installed in /usr/lib/ and my application is in apache doc directory /var/.../html/myapp/server.js and I still have the same error socket.io cannot be found 
08:30 < daedeloth> ah so, mysql commands for example are probably event driven?
08:30 < deoxxa[grumpy]> daedeloth: for example performing an sql query - most of that time is spent waiting for the database server to do work, so node goes and does other stuff while that's happening (like serving other requests or performing other tasks)
08:30 < SomeoneWeird> adrianlang, yeah but I wan't to actually read all the configuration of it, not just use it
08:30 < daedeloth> yep, I understand
08:30 < deoxxa[grumpy]> daedeloth: yep - you tell mysql "hey go do this query and tell me when you're done", then you forget about it
08:30 <@Nexxy> cr11sh, where are you getting the error?
08:31 < deoxxa[grumpy]> daedeloth: that does mean the flow of your application will be very different to one written in say, php or perl or something
08:31 < adrianlang> SomeoneWeird: http://nodejs.org/api/tls.html#tls_cleartextstream_getpeercertificate worked for me
08:31 < krajesh> Hi guys
08:31 < whiskers75> hello
08:31 < krajesh> I am using virtualenv python to install nodejs
08:31 < krajesh> sn1 -I../deps/openssl/openssl/crypto/evp -I../deps/openssl/openssl/crypto/md2 -I../deps/openssl/openssl/crypto/modes -I../deps/openssl/openssl/crypto/store -I../deps/openssl/openssl/include -I../deps/openssl/config/piii  -Wall -Wextra -Wno-unused-parameter -pthread -m32 -Wno-missing-field-initializers -Wno-old-style-declaration -O2 -fno-strict-aliasing -fno-tree-vrp -fno-tree-sink  -MMD -MF /krajesh/nodeexpirement/node-v0.8.12/virtualenv-1.8.2/node/out/
08:31 < krajesh> cc1: error: unrecognized command line option "-Wno-old-style-declaration"
08:31 < krajesh> make[1]: *** [/krajesh/nodeexpirement/node-v0.8.12/virtualenv-1.8.2/node/out/Release/obj.target/openssl/deps/openssl/openssl/ssl/bio_ssl.o] Error 1
08:31 < krajesh> make[1]: Leaving directory `/krajesh/nodeexpirement/node-v0.8.12/virtualenv-1.8.2/node/out'
08:31 < krajesh> make: *** [node] Error 2
08:31 < cr11sh> nexxy, when i try to run the node server with my server.js which has this  require('socket.io')
08:31 < deoxxa[grumpy]> daedeloth: but the good news is that it's not that difficult to get started, and once you're familiar with the conventions in node you'll get so used to it that you'll think "how do other languages even work"
08:31 <@Nexxy> krajesh, please use a paste service like gist
08:31 < krajesh> When I used make option I am getting the above error
08:31 < daedeloth> deoxxa[grumpy], yes, I'm trying to decide between a php server and nodejs server, and for that exact reason I should probably go for node
08:31 < SomeoneWeird> krajesh, wow, use pastebin or something
08:32 < SomeoneWeird> adrianlang, sweet thanks, I missed that
08:32 < daedeloth> I have experience in javascript, so events are not new ;)
08:32 < whiskers75> pastebin please
08:32 < krajesh> @Whisker75 sure
08:32 < SomeoneWeird> daedeloth, then you'll fit right in
08:32 < deoxxa[grumpy]> daedeloth: i'd say choose node over php every time, so long as you're not building a CRUD website. php still wins for that (with the right framework).
08:32 < adrianlang> SomeoneWeird: :)
08:33 < whiskers75> krajesh: i'm not an op.
08:33 < deoxxa[grumpy]> daedeloth: but i'm just one (apparently grumpy) guy, so take everything i say with a grain of salt. investigate your options in node, then make an informed decision on how to proceed. :)
08:33 < krajesh> sn1 -I../deps/openssl/openssl/crypto/evp -I../deps/openssl/openssl/crypto/md2 -I../deps/openssl/openssl/crypto/modes -I../deps/openssl/openssl/crypto/store -I../deps/openssl/openssl/include -I../deps/openssl/config/piii  -Wall -Wextra -Wno-unused-parameter -pthread -m32 -Wno-missing-field-initializers -Wno-old-style-declaration -O2 -fno-strict-aliasing -fno-tree-vrp -fno-tree-sink  -MMD -MF /krajesh/nodeexpirement/node-v0.8.12/virtualenv-1.8.2/node/out/
08:33 < krajesh> cc1: error: unrecognized command line option "-Wno-old-style-declaration"
08:33 < krajesh> make[1]: *** [/krajesh/nodeexpirement/node-v0.8.12/virtualenv-1.8.2/node/out/Release/obj.target/openssl/deps/openssl/openssl/ssl/bio_ssl.o] Error 1
08:33 < krajesh> make[1]: Leaving directory `/krajesh/nodeexpirement/node-v0.8.12/virtualenv-1.8.2/node/out'
08:33 < krajesh> make: *** [node] Error 2
08:34 < daedeloth> deoxxa[grumpy], well I have a rather big php framework that I'd like to reuse, so I'm thinking about using nodejs for the real time part and make nodejs request files from php for the "less real time" parts
08:34 < deoxxa[grumpy]> krajesh: PASTEBIN PLEASE
08:34 < chovy> Nexxy: thanks for the comment. I assume that was you.
08:34 < graeme_f> nave is really struggling to download 0.8.14 (binaries or source!)
08:34 < cr11sh> @nexxy, when i try to run the node server with my server.js which has this  require('socket.io')
08:35 < deoxxa[grumpy]> daedeloth: that might be a viable option - especially if you can cleanly separate the two parts. for example, at work, we had a PHP website with a bunch of node.js services talking to it and doing things that made more sense in node.
08:35 <@Nexxy> cr11sh, have you done `npm install socket.io` in the directory that your server.js file lives in?
08:38 < cr11sh> @nexxy, no I did not, because in future my server.js files will be residing on another server, which will make it harder for me to install node modules for each and every project. so I thought ill install node_modules only once and that too on the server
08:38 <@Nexxy> cr11sh, please see http://package.json.jit.su/
08:39 < SomeoneWeird> cr11sh, you have to, though
08:39 <@Nexxy> if you create a package.json file you will have a much easier time installing each of your apps dependencies
08:40 <@Nexxy> cr11sh, http://blog.nodejitsu.com/package-dependencies-done-right
08:43 < krajesh> http://pastebin.com/CHyJzzaa
08:45 < krajesh> guys I have pasted the error log in pastebin
08:45 <@Nexxy> krajesh, update your gcc
08:45 <@Nexxy> and try again
08:46 < krajesh> Nexxy: sure
08:47 < booyaa> any nodecopter dudes here?
08:48 <@Nexxy> I was at the berlin nodecopter
08:48 <@Nexxy> I wasn't an organizer tho if that's what oyu're asking
08:48 < deoxxa[grumpy]> i am the berlin nodecopter
08:48  * deoxxa[grumpy] copters around
08:48  * SomeoneWeird shoots deoxxa[grumpy] down
08:48 < deoxxa[grumpy]> nuuuuu
08:49  * booyaa is just curious how they work, specifically recharging
08:49 < booyaa> are they like roombas do they go back to the charging station?
08:50 < booyaa> or is that a manual process?
08:50 <@Nexxy> no
08:50 <@Nexxy> you land them and pull the battery out
08:50 <@Nexxy> it's best to have multiple batteries for your drone
08:50 < yawnt> WIR FEIERN DIE GANZE NACHT
08:50 < yawnt> DIE GANZE NACHT
08:50 < yawnt> hellow :)
08:50 < deoxxa[grumpy]> well hallo
08:50 < yawnt> why you so grumpy
08:51  * deoxxa[grumpy] points at Nexxy
08:51 < yawnt> Nexxy: what did you do to the berlin nodecopter?
08:51 <@Nexxy> he's not grumpy *because* of me, I just pointed it out!
08:51 < yawnt> sure.
08:51 < booyaa> cheers Nexxy 
08:52 <@Nexxy> booyaa, :)
08:52 < booyaa> someone needs to hack that battery ;) or better still go contactless
08:53 < deoxxa[grumpy]> hacking batteries often ends up in chemical burns
08:53 < SomeoneWeird> tru
08:53 <@Nexxy> you could program them to land on induction pads
08:53 < chovy> damn. i think i screwed the pooch
08:53 < deoxxa[grumpy]> chovy: that's illegal in most places
08:54 < chovy> i can't get my data because its not a sub-document
08:54 < chovy> list.user.username
08:54 < chovy> Item.find().populate('list.user') doesn't work
08:54 < deoxxa[grumpy]> lol orm
08:55 < deoxxa[grumpy]> this is why i'm so critical of using one
08:55 < chovy> yeah. 
08:55 < chovy> everything should be a sub-doc
08:55 < deoxxa[grumpy]> it's great until you hit something like that, where you think "if only i could just do a regular query"
08:55 < deoxxa[grumpy]> theeeen you're stuck
08:55 < chovy> is there any work around?
08:56 < deoxxa[grumpy]> yeah there's an awesome workaround
08:56 < deoxxa[grumpy]> it's called "programming"
08:56 < whiskers75> this code is driving me up the wall. https://gist.github.com/3957717
08:57 < chovy> deoxxa[grumpy]: can i just grab the list i'm interested in and do item.list = list
08:57 < deoxxa[grumpy]> whiskers75: you want a single line of data?
08:57 < whiskers75> deoxxa[grumpy]: where>
08:57 < whiskers75> ?*
08:57 < deoxxa[grumpy]> chovy: i have no idea, i don't know what orm you're using and even if i did, i wouldn't know how to use it. i don't use an orm, for exactly the reason that you're having trouble.
08:58 < whiskers75> unexpected end of input at line 262
08:58 < chovy> oh, what is orm?
08:58 < deoxxa[grumpy]> whiskers75: in the .once() thing, i'm guessing you want a single line, not a single data event
08:58 < deoxxa[grumpy]> chovy: "object relational mapper"
08:58 < whiskers75> yes, a single line string
08:59 < deoxxa[grumpy]> whiskers75: you probably want to find a split-a-stream-into-lines library to handle that for you then
08:59 < whiskers75> argh
08:59 < whiskers75> but, i did socket.setEncoding('utf-8')
09:00 < whiskers75> do i still need buf.toString()?
09:00 < deoxxa[grumpy]> whiskers75: yeah but you might end up getting half a line if the user takes a while to type
09:01 < whiskers75> yes, but the data is only transmitted on Enter, and so I only get 1 line of utf-8, right?
09:01 < whiskers75> so it should work
09:02 < deoxxa[grumpy]> it'll work most of the time, sure
09:02 < whiskers75> why do I get unexpected end of input at line 262, then?
09:02 < deoxxa[grumpy]> well that file doesn't have a line 262
09:02 < deoxxa[grumpy]> so... i'm not sure
09:03 < whiskers75> oh sorry ill gist the whole file
09:03 < whiskers75> gist updated
09:04 < deoxxa[grumpy]> ...still no 262
09:04 < deoxxa[grumpy]> closer though!
09:04 < whiskers75> meh. let me gist the error
09:05 < whiskers75> there is NO 262
09:05 < deoxxa[grumpy]> i'm guessing it's a missing } or )
09:05 < whiskers75> https://gist.github.com/3957751 - it is a missing }, but where do I put it?
09:05 < whiskers75> the net.Server is not closed with a }
09:06 < chrismatheson> is node still dependant on pyhon ? or has that dependancy long been removed?
09:06 < whiskers75> chrismatheson: what? PYTHON? NO WAY
09:07 < whiskers75> node - JAVASCRIPT, no python :)
09:07 < chrismatheson> i saw ayoutube vid the other day but i think it was quite old
09:07 < deoxxa[grumpy]> chrismatheson: for building node, yes. for running node, no.
09:07 < chrismatheson> ahhh i see
09:07 < whiskers75> there.
09:07 < whiskers75> we need 2 channels. #node-newbs and #node.js
09:07 < deoxxa[grumpy]> chrismatheson: there are binaries available for pretty much every major platform though, so effectively the answer is "no, unless you want to run bleeding edge"
09:08 < chrismatheson> i was tempted by a side project to build node and stick it right in the boot sector of an SD card for a raspi
09:08 < crowster> sounds cool
09:08 < whiskers75> yeah
09:08 < whiskers75> Nodepi
09:08 < whiskers75> deoxxa[grumpy]: so, any idea where that } goes?
09:09 < chrismatheson> yeah not sure where the stdin-stout would go though, to the RS232 output maybe :P
09:09  * whiskers75 stinks at Node
09:09 < chrismatheson> nodepi ?? its been done ?
09:09 < whiskers75> no
09:09 < whiskers75> i'm saying you could call it that :)
09:09 < whiskers75> well I don't think it's been done :)
09:10  * whiskers75 NEEDS cloud9 ide to do something useful with node
09:10 < deoxxa[grumpy]> whiskers75: i'm not sure... it's a bit hard to follow the indentation on that code. probably if you clean that up it'll be more obvious?
09:10 < chrismatheson> yeah ive been trying to get c9 to install on my pi for about 3 days now as well :P
09:10 < chrismatheson> i do love c9
09:11 < whiskers75> deoxxa[grumpy]: that's exactly my problem
09:11 < whiskers75> chrismatheson: it's online...
09:11 < chrismatheson> ***whiskers75 do you have this current problem in c9 ?
09:11 < chrismatheson> is it ??
09:11 < whiskers75> chrismatheson: well, c9 helps me identify that there is a problem :)
09:11 < whiskers75> it's not c9's fault
09:11 < whiskers75> c9 rocks
09:12 < chrismatheson> can you share the link to the c9 project ? (or did i miss that earlier )
09:12 < whiskers75> meh, it doesn't matter 
09:12 < whiskers75> use gist
09:12 < chrismatheson> 'whiskers75: chrismatheson: it's online... ' you mean someone has got c9 on pi running already ?
09:13 < whiskers75> no
09:13 < chrismatheson> ahhh bugger :P
09:13 < whiskers75> they might've
09:13 < whiskers75> you should be able to run c9 with firefox or something
09:13 < whiskers75> c9.io
09:13 < whiskers75> :)
09:15 < chrismatheson> i want to run c9 on the pi so i can do a rasbian distro with it all set as standard. I.E stick this file onto your SD card, goto pi:8080 in your browser and your in an IDE thats embedded on your pi so you can mess about with direct hardware controll
09:15 < chrismatheson> kind athing
09:15 < chrismatheson> *kinda
09:15 < whiskers75> oh
09:15 < deoxxa[grumpy]> that'd be neat
09:15 < chrismatheson> yeah kinda like what adafruit have done recently
09:15 < chrismatheson> but i think c9 blows adafruit version out the water
09:15 < whiskers75> there is c9 local
09:16 < whiskers75> but it doesn't work
09:16 < whiskers75> for me
09:16 < deoxxa[grumpy]> it works, it's just annoying to get running
09:16 < deoxxa[grumpy]> they use that weird sourcemint thing
09:16 < chrismatheson> esp as the 'full' version would allow you to run make etc for small c++ sections
09:16 < SomeoneWeird> no u
09:16 < chrismatheson> yeah im having issues with libxml having a arg '-sse2' that blows the whole thing
09:16 < whiskers75> ARGH WHY DOESN'T THIS THING WORK
09:17 < SomeoneWeird> because u
09:17 < deoxxa[grumpy]> no sse on arm, lol
09:17 < durre> when I run. "npm install x" I expect the module to end up in the current folder, but it's put somewhere else. not sure how to change this. I installed node with "brew install node"
09:18 < deoxxa[grumpy]> durre: it'll end up in ./node_modules/x
09:18 < deoxxa[grumpy]> durre: or at least, it should
09:18 < chrismatheson> durre are you installing node itself on OSX ?
09:18 < whiskers75> AAAA
09:18 < durre> deoxxa[grumpy]: yep, it should :)
09:19 < whiskers75> screw this
09:20 < durre> chrismatheson: with brew install node, yes
09:21 < durre> I must have made some config when I installed it, but I can't remember. was several months ago :)
09:22 < chrismatheson> durre: npm config list or something of that nature ?
09:22 < chrismatheson> should show you default install dirs maybe ?
09:26 < timeturner> why doesn't the child_process's stdout show up in node's stdout?
09:29 < deoxxa[grumpy]> timeturner: it is, if you create it with the right flags
09:30 < timeturner> like with make
09:30 < timeturner> I have all the recipes prefixed with @
09:30 < deoxxa[grumpy]> timeturner: see http://nodejs.org/docs/latest/api/all.html#all_child_process_spawn_command_args_options for the specific options
09:30 < deoxxa[grumpy]> what
09:30 < deoxxa[grumpy]> "@"?
09:31 < deoxxa[grumpy]> anyway, see the "stdio" option
09:31 < timeturner> sweetness
09:31 < timeturner> it works
09:32 < timeturner> deoxxa[grumpy]: thanks
09:32 < deoxxa[grumpy]> should hope so :x
09:36 < timeturner> ah man...I love components
09:37 < timeturner> client side development is much more relaxed now
09:39 < daedeloth> so, just out of interest, where does one deploy nodejs applications?
09:39 < timeturner> linode, rackspace, ec2
09:39 < timeturner> node app.js &
09:39 < timeturner> the simplest (and riskiest) deploy :)
09:40 < daedeloth> so there is no providers right now that let you simply "upload & we'll make sure it runs"?
09:40 < icebox> daedeloth: nodejitsu, nodester, etc.
09:40 < dileep> i have the question like how many projects are running form the link    https://github.com/joyent/node/wiki/Projects,-Applications,-and-Companies-Using-Node
09:42 < daedeloth> well I'm looking for some kind of "upload with ftp, restart service" solution (my current source  control framework has ftp deploy which I like very much)
09:43 < crowster> daedeloth: might have a look at heroku too, it works with git
09:43 < crowster> and afaik some ftp clients let you connect to git repos too?
09:44 < daedeloth> hm, ok, so a lot of options.
09:44 < daedeloth> I'll start with development then ;)
09:44 < zell> Hello, i got an issue with nvm, i'm trying to install node from the command "nvm install v0.4.8" but it does not install node and gives no error.
09:47 < zell> I mean no obvious error, from "nvm install v0.4.8", i got: 
09:47 < zell> ######################################################################## 100.0%
09:47 < zell> Checksums do not match.
09:47 < zell> Binary download failed, trying source.
09:47 < zell> Additional options while compiling: 
09:47 < zell> ######################################################################## 100.0%
09:47 < zell> v0.4.8 version is not installed yet
09:47 < zell> /usr/local/bin/npm
09:47 < timeturner> npm install -g n && n stable && node -v
09:48 < timeturner> installs the latest stable node
09:48 < zell> node -v                                                                                                                                                                                â”€=>[11:46]-0-[1837]
09:48 < zell> v0.8.14
09:48 < timeturner> that's the latest node
09:49 < zell> timeturner: so i already got it ^^, still nvm seem broken ..
09:49 < zell> only thing i could found on google was: https://github.com/creationix/nvm/issues/162
09:53 < zell> ok found it lol:
09:54 < zell> i commented the checksum check ... and now i got:
09:54 < zell> tar: Unrecognized archive format
09:54 < zell> tar: Error exit delayed from previous errors.
09:54 < Raydiation> hi guys, it seems that npm install -g coffee-script segfaults on nodejs-0.8.12-2-x86_64
09:54 < Raydiation> archlinux
09:54 < Raydiation> http://ideone.com/Wsxa5o
09:56 < zell> i will just install it manually then ...
10:19 < zell> ok nvm use is even not working ...
10:19 < zell> if nvm is not maintained anymore pls tell ... it will avoid a big waste of time.
10:22 < zell> Tim Caswell = bad boy
10:22 < thealphanerd> https://github.com/creationix/nvm
10:22 < thealphanerd> looks actively developed to me
10:23 < zell> thealphanerd: for a simple program like that, there are tons of issues.
10:23 < perki> Hi
10:24 < SomeoneWeird> zell, 'simple'
10:25 < thealphanerd> zell: nothing is simple :D
10:25 < thealphanerd> if it were so simple you should reimplement it yourself :P
10:25 < zell> SomeoneWeird: wget, tar -xvf, configure with --prefix, make, make install, then add some command nvm use that are changing symbolic links
10:26 < zell> SomeoneWeird: i forgot checksum checks ^^
10:26 < perki> Hi, in order to manipulate my config dynamicaly, and before writing it myself, is there a package that allow the manipulation of a javascript object from a rest API?
10:26 < SomeoneWeird> zell, then go make one yourself and stop criticizing other peoples work :)
10:27 < zell> No time to do it, and even less time to take the responsability of maintaining it I already have to bother on other projects
10:27 < SomeoneWeird> then don't complain
10:27 < zell> anyway, i'll stop raging, sorry.
10:27 < SomeoneWeird> and use what you can
10:27 < perki> So I could just reserver a path http://service/config/  and manipulate it with POST, GET, PUT, DELETE ?
10:27 < SomeoneWeird> pekim, ya
10:28 <@Nexxy> I think people should be allowed to complain
10:28 <@Nexxy> how else do we identify things that need to improve?
10:28 < SomeoneWeird> sure
10:28 < SomeoneWeird> but something like
10:28 < SomeoneWeird> <zell> thealphanerd: for a simple program like that, there are tons of issues.
10:28 < SomeoneWeird> doesn't go down well in my pools
10:28 < SomeoneWeird> s/pools/books/
10:29 < thealphanerd> node is such a simple app
10:29 < thealphanerd> but has so many probremos
10:29 < thealphanerd> 0o0o0o0
10:29 < zell> thealphanerd:  not node ...
10:29 <@Nexxy> at least nvm doesn't torch /usr/local
10:29 < thealphanerd> I know
10:29 < thealphanerd> I'm being a douche nozel
10:30 < thealphanerd> anyone play with snagging android accellerometer data via js client side before?
10:34 < EuroNerd> If my app's .htm and .js files are served by Apache on :80, while the app's internal comms are WebSockets to node.js (say, :3000), but on the same IP, does that make it cross-domain?
10:34 < zell> Nexxy: you know how to see the positive side ^.^
10:35 < thealphanerd> EuroNerd: I believe if you try serving the htm via apacheâ€¦ and then use node for sockets you might run in to some weird edge cases
10:36 <@Nexxy> zell, :)
10:36 < thealphanerd> I could be very mistaken, and often am
10:36 < EuroNerd> thealphanerd, what kind of edge cases?
10:36 <@Nexxy> #JIFASNIF
10:36 < thealphanerd> EuroNerd: in retorspect I am thinking about the problems I ran in to
10:36 < thealphanerd> and they were due to express
10:36 < thealphanerd> not sockets
10:37 < thealphanerd> was thinking about not finding resources
10:37 < EuroNerd> OK....  anyways, I guess I have to test and see for myself
10:37 < thealphanerd> but since socket io is just listening for a socket conenctionâ€¦ and if you have the socket.io js in the search path of your client side script
10:37 < thealphanerd> I guess it should be a probrem
10:41 < pixie79> hi - is there anyone around who can help guide me through making an npm package and submitting it, i would like it that when my package gets installed it also then also installs and deps
10:41 < pixie79> i know i need a package.js but i am not really sure of the required content as i have seen many variations
10:46 < nathan7> pixie79: npm init
10:46 < nathan7> pixie79: npm install --save dependency anotherdependency
10:46 < nathan7> pixie79: npm publish
10:47 < goku22> which is the best module to serve static files through node
10:47 < nathan7> pixie79: if you kick ass you of course github it too
10:47 < thealphanerd> pixie79: it is also worth looking at the package.json in other npm packages
10:47 < crowster> goku22: i use connect
10:48 < nathan7> goku22: there's express's static thingy, there's ecstatic
10:48 < nathan7> the former may be part of connect
10:48 < goku22> yeah 
10:48 < thealphanerd> express can be simple to just serve some routes quite easily
10:48 < nathan7> https://github.com/jesusabdullah/node-ecstatic
10:48 < goku22> connect is middleware
10:49 < goku22> i am looking to deploy bootstrap + backbone + nodejs on heroku
10:49 < pixie79> nathan7: i am githubb'ing it
10:49 < pixie79> thanks
10:50 < thealphanerd> goku22: npm install -g express
10:50 < thealphanerd> then run express in an empty folder
10:50 < thealphanerd> take a look at what it makes and hack around a bit
10:50 < thealphanerd> it is pretty simple to deploy static pages with it
10:50 < goku22> i already use express
10:50 < thealphanerd> https://github.com/TheAlphaNerd/node-osc-kontrol
10:51 < goku22> i just started with heroku and am building an interface for my nodejs app
10:51 < thealphanerd> if you look at that example
10:51 < thealphanerd> it is really simple (and kinda ugly)
10:51 < goku22> looks simple
10:51 < thealphanerd> but pretty quick to get express to serve the static content
10:51 < thealphanerd> app.get('/', function (req, res) {
10:51 < thealphanerd>   res.sendfile(__dirname + '/public/index.html');
10:51 < thealphanerd> });
10:53 < pixie79> what license should it put it under - i made it but have no issue with anyone else using it or modifying it
10:53 < nathan7> BSD is sensible
10:53 < pixie79> ok
10:53 < goku22> thanks
10:53 < christophsturm> in a node cluster: can i just close the http socket of a worker to get it out of the cluster (because its too busy) and then get it back in the cluster by starting the http server again?
11:11 < pixie79> nathan7: thanks first module published
11:17 < daedeloth> alright, hear my madness and label me mad. I'm going to make a nodejs websockset server that is going to contact a php driven nginx/lighttp server. That server is going to return html content and an array of events / triggers. These events and triggers will be used to command the other connections to reload the data / append data / do something else.
11:17 < daedeloth> complete madness?
11:18 < deoxxa[grumpy]> daedeloth: sounds unnecessarily complex
11:18 < daedeloth> well the alternative is "rewrite everything in javascript"
11:19 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:19 < Zac12> Hi
11:21 < bigkevmcd> daedeloth: why is that the only alternative?
11:22 < bigkevmcd> daedeloth: have you thought about driving your Socket.io events from a queue, and have the PHP app push to the queue?
11:22  * daedeloth goes reading what bigkevmcd said :)
11:23 < deoxxa[grumpy]> +1
11:24 < Zac12> do you know if there's a way to test a node.js site using opera mini locally?
11:24 < hitesh> no
11:25 < aandy> hi, i've recently begun using express.session() (with connect-redis, but that's not important). it works as it should with defining and expiring sessions after maxAge, but i'm wondering... aren't I suppose to update the session maxAge when the session is used? e.g. i have maxAge set to 10mins, so 10 mins later the session stops working, even if the user actively makes requests using this session up until 9-10 mins.  surely i'm not suppose to save user/pw i
11:26 < daedeloth> bigkevmcd, the thing is that I want to do the user / connection mapping in the nodejs server
11:26 < daedeloth> that way I don't have to care about the connections in my php app
11:28 < bigkevmcd> daedeloth: it's hard to give more advice, you're talking about your solution, not your problem
11:29 < daedeloth> true. well, the whole thing is a bit complicated since I'm going to work with existing code
11:29 < daedeloth> so never mind, I'll just play a bit and if it becomes horribly slow I'll redesign it later :)
11:30 < bigkevmcd> daedeloth: queues can be a really useful inter-service communication tool, don't underestimate them
11:31 < daedeloth> but then I'm using php as a service again, not as a one-time-use-throw-away-memory script
11:31 < daedeloth> in that case I can just write the whole server in php, which has been determined is not a good idea
11:34 < deoxxa[grumpy]> daedeloth: can you go into a bit more detail on what your thing is (going to be?) doing?
11:34 < daedeloth> well, let's say "eve online" :)
11:35 < daedeloth> basically, real time flying around in spaceships attacking people
11:35 < daedeloth> but also simple html dialogs (for markets, ship repair, quests, contracts, ...)
11:35 < deoxxa[grumpy]> go a little bit lower than that
11:36 < deoxxa[grumpy]> what do you want to use socket.io for?
11:36 < deoxxa[grumpy]> (or whatever it was)
11:36 < deoxxa[grumpy]> usually there's something that initiates the event you want to communicate to your connected clients
11:36 < daedeloth> real time multiplayer aspect, sending the ship commands to all the players within the same area so that the objects behave accordingly
11:37 < deoxxa[grumpy]> ah yep
11:37 < daedeloth> so player A says "ship go to x,y,z", all other players have to receive that
11:37 < bigkevmcd> So, a rough architecture would involve topic queues per session, have the browser use a socket.io connection for the session, so you know that you're receiving messages for the right user
11:37 < deoxxa[grumpy]> yep
11:37 < bigkevmcd> then, push messages to the topic queue for sessions that you've identified should be notified of something
11:37 < deoxxa[grumpy]> basically in the thing that handles the "ship go to x,y,z" message, you push the messages into the queue
11:37 < bigkevmcd> have the Node.js server pick those up, and ummm...push them to the Socket.io bus
11:37 < deoxxa[grumpy]> *queues
11:38 < bigkevmcd> I'm trying to think of books that cover this kinda thing well, but none spring to mind
11:38 < bigkevmcd> maybe a gap, if someone isn't already working on one :-)
11:38 < deoxxa[grumpy]> daedeloth: the point of this is that there's no reason you need to have the node stuff contact the php stuff at all - you can do it in the complete opposite direction and it can be just as (if not more) efficient and easy to manage
11:39 < daedeloth> yes, for the move commands / chat commands etc I agree, I'm just planning to contact php for the storage / logs
11:40 < daedeloth> so that when node goes down I still have the whole state in mysql
11:40 < daedeloth> but for the more complex things (like market etc) I'd like to just use nodejs as a proxy to server the content from php
11:40 < daedeloth> since a lot of these things I can reuse from a previous project
11:40 < deoxxa[grumpy]> why do you need to have node in front for that part?
11:40 < sshaginyan> hey I can't use http.get with ssl?
11:41 < sshaginyan> This is what I'm getting http.js:1617
11:41 < daedeloth> well, I figured, what's the use of having a websocket but then also use xmlHttpRequests? Why not push everything trough the same socket
11:41 < sshaginyan>     throw new Error('Protocol:' + options.protocol + ' not supported.');
11:41 < sshaginyan>           ^
11:41 < sshaginyan> Error: Protocol:https: not supported.
11:41 < deoxxa[grumpy]> sshaginyan: require("https")
11:42 < deoxxa[grumpy]> sshaginyan: https.request({host: "nodejs.org", path: "/docs/latest/api/all.html"})
11:42 < deoxxa[grumpy]> (there's a hidden message there)
11:42 < deoxxa[grumpy]> (you win a prize if you can figure it out)
11:43 < deoxxa[grumpy]> daedeloth: websockets can be much harder to scale if you're not careful from the start
11:44 < deoxxa[grumpy]> daedeloth: and regular old ajax works pretty much everywhere, where websocket-style stuff will be at least partially degraded in a bunch of older/crappier browsers
11:44 < daedeloth> yea, but the cool thing about this design is that for scaling I can just "raise" the amount of nodejs servers, as long as the php server can handle the load from all these requests I'm fine
11:45 < daedeloth> as I also think the websocket part is going to become the memory bottleneck
11:45 < bigkevmcd> socket.io should handle the "older/crappier browsers"
11:46 < deoxxa[grumpy]> what makes you think this?
11:46 < sshaginyan> deoxxa[grumpy]: So I have a list of urls http and https. I have to determine which library to use?
11:46 < deoxxa[grumpy]> sshaginyan: either that or use something like https://github.com/mikeal/request/
11:46 < deoxxa[grumpy]> i personally use that library, but there are plenty of options out there
11:47 < bigkevmcd> deoxxa[grumpy]: socket.io will select "the most capable transport at runtime"
11:47 < deoxxa[grumpy]> bigkevmcd: yep, which will often mean "ajax long polling"
11:48 < bigkevmcd> deoxxa[grumpy]: yeah, but you don't actually have to care about that, use the socket.io server to push messages, rather than maintaining state
11:48 < bigkevmcd> deoxxa[grumpy]: it's an area I'm interested in, but don't have "large scale" experience of
11:48 < deoxxa[grumpy]> i use socket.io pretty heavily at work, and i've experimented with using regular old ajax instead of socket.io in the places where it's not strictly necessary to have the stream-like abstraction. i found normal ajax pulling down json data to be quite a bit faster
11:49 < bigkevmcd> deoxxa[grumpy]: that's interesting to me
11:49 < daedeloth> well since I'm going to rely heavily on webgl, I have decided not to care about the old browsers anymore :)
11:49 < bigkevmcd> I was going to ask that :-)
11:50 < ipalaus> please, I don't want to do spam, but I'm testing a geolocated (nginx+geoip) stats in our page so if anyone can just join and leave this: http://marketyou.com/ipalaus thanks guys! :) 
11:50 < daedeloth> http://tests.bazillionaire.eu/threejs-1/ => just look at that beauty modern web technology :)
11:50 < ipalaus> thanks the one in the Paradise, CA, USA!!
11:50 < ipalaus> working :)
11:51 < deoxxa[grumpy]> bigkevmcd: long polling has the disadvantage of not being cache friendly, and just performing strangely in general. you don't get much control over how large the chunks are that get sent down the wire, and with socket.io they come with a bunch of framing and stuff as well that just adds to the payload.
11:51 < daedeloth> well, the deoxxa[grumpy] the nice thing about the spacegame I have in mind is that "real time" can be stretched a bit
11:51 < deoxxa[grumpy]> bigkevmcd: in cases where you don't need the bidirectional realtime stuff, or the stream abstraction, newline-delimited json can be much easier to produce and consume
11:52 < deoxxa[grumpy]> and by extension faster
11:52 < daedeloth> hm, I like faster though.
11:52 < daedeloth> but my php long polling for the chat for example, it works... but the design is... euh... yucky :)
11:52 < cr11sh> hello, i'm not sure, if this a genuine thing, but when the internet is down, node doesn't throw a callback until about 60 seconds 
11:53 < deoxxa[grumpy]> cr11sh: depends on your operating system and how long it takes to tell node "nope, can't connect to that"
11:53 < deoxxa[grumpy]> daedeloth: "it's faster" is usually a pretty bad reason to choose a specific technology
11:53 < deoxxa[grumpy]> daedeloth: "it's simpler" or "it involves less maintenance" are both great reasons though
11:53 < daedeloth> by the way, what does socket.io think about connecting to a different port?
11:54 < deoxxa[grumpy]> socket.io is perfectly fine with it
11:54 < deoxxa[grumpy]> your client's browser/firewall might not be so happy though
11:54 < daedeloth> yea, well, that's what I meant. I guess with flash it's perfectly fine, but the native implementation of websockets might not like it
11:55 < daedeloth> but that's my xmlHttpRequest experience talking
11:55 < deoxxa[grumpy]> i found that to get it to work reliably inside a big company with an SOE and a silly firewall, i had to keep it as https on port 443
11:55 < cr11sh> @deoxxa: is there a way to control this and tell node that "internet is down" right after say 1 or at least 5 seconds ?
11:55 < daedeloth> hm, I'm going to push everything trough node then.
11:55 < deoxxa[grumpy]> cr11sh: depends on your OS
11:56 < daedeloth> cr11sh, there must be a way to set a timeout somewhere, yes. Or you could just use the native javascript timeout
11:56 < daedeloth> and I'm sure whatever framework you use you can set a timeout in your framework as well
11:58 < cr11sh> @deoxxa,@daedeloth: as I inspect the services from firebug, they are services which die only after 60 seconds and no im not using any framework :( Can you please suggest if there is a framework that has a workaround to this
11:59 < daedeloth> cr11sh, var connection = false; setTimeout (6000) { if (!connection) { // kill the connection! } onsuccess (of your connection: connection = true;
11:59 < deoxxa[grumpy]> cr11sh: firebug?
12:00 < deoxxa[grumpy]> cr11sh: sounds like you want to change firefox's behaviour, not node's
12:00 < cr11sh> @deoxxa: what I mean is, that node can only trigger a callback after these services are either a success or a failure
12:01 < cr11sh> and node doesn't tell the user if the connection is still ON or OFF till 60 seconds
12:01 < bigkevmcd> deoxxa[grumpy]: I guess I'm thinking of bidirectional messages from browser <-> game 
12:02 < deoxxa[grumpy]> cr11sh: ...what? what has that got to do with firebug exactly?
12:02 < cr11sh> @deoxxa, Looking at firebug I understood that node doesn't trigger a callback until 60 seconds. Thats al
12:03 < deoxxa[grumpy]> oh
12:03 < deoxxa[grumpy]> well
12:03 < deoxxa[grumpy]> like i said, it depends on your OS
12:04 < fdsa> test
12:05 < deoxxa[grumpy]> cr11sh: see it could be caused by any number of things - slow dns, slow network stack, slow remote end, etc
12:07 < cr11sh> @deoxxa: I see. I'm just unable to handle that case and prompt to the user instantaneously, but I see your point and it makes sense
12:31 < masm> npm install from node 0.8.12 is ignoring "-g" argument. Did this argument change?
12:31 < masm> In 0.8.9 it was working.
12:32 < masm> In 0.8.12 it always install on /root when I use -g (with sudo).
12:34 < bigkevmcd> masch: works for me, Ubuntu 12.04, chris lea's node.js pacakge, 0.8.12-1chl1~precise1
12:34 < bigkevmcd> masch: sorry
12:34 < bigkevmcd> masm: works for me
12:35 < masm> Hum... must be some issue with Arch's nodejs package.
12:36 < masm> Thanks, bigkevmcd.
12:36 < deoxxa[grumpy]> masm: sudon't
12:39 < masm> deoxxa[grumpy]: If I don't use sudo it segfaults! I was expecting a write permission fail.
12:39 < deoxxa[grumpy]> that sounds very broken
12:39 < masm> Yeah.
12:39 < deoxxa[grumpy]> what you could do is set a new npm prefix
12:40 < masm> No, something fishy going on...
12:40 < masm> I had another node app failing (kanso) with a segfault.
12:40 < deoxxa[grumpy]> $ npm config set prefix ${HOME}/local; npm install -g derp;
12:40 < masm> It's nodejs package that is broken.
12:40 < deoxxa[grumpy]> ah
12:43 < masm> Yep, the old version works. Thanks for the comment, deoxxa[grumpy].
12:43 < deoxxa[grumpy]> \o/
13:06 < Diable> Is someone knows how to retrieve data from a form with method post in server file in Node.js ?
13:07 < Bonuspunkt> Diable which content-type?
13:07 < Diable> Text, I think
13:08 < SomeoneWeird> Diable, you using express or connect?
13:08 < Diable> express
13:08 < SomeoneWeird> app.use(express.bodyParser());
13:08 < SomeoneWeird> somewhere in the configuration
13:08 < Diable> I've done this
13:09 < Diable> I've tried app.post too but ...
13:09 < SomeoneWeird> then you can use app.post('/whatever', function(req, res) { console.log(JSON.stringify(req.body)); });
13:10 < Diable> It returns undefined
13:11 < syskk> is it possible to specify a commit in package.json dependencies?
13:12 < syskk> ok yea
13:12 < syskk> repo#commit
13:29 < phrearch> hm, does anyone know if google has a custom search api, in which you can index page content manually?
13:33 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:57 < Aikar> is there any docs on manual install instructions for when you cant use make install?
13:58 < Aikar> running node on an old lenny box that doesnt have a working python json module... :/
13:58 <@Nexxy> Aikar you still exist!
13:58 < Aikar> yep nex
13:58 <@Nexxy> hi :)
13:58 < Aikar> heya
13:58 < Aikar> updating my works node app to .8, but cant install :(
13:58 <@Nexxy> eek ;<
13:58 < Aikar> and ill be back on node stuff for my "new stuff" soon too =P
13:58 <@Nexxy> I wish I knew more about the build process
13:59 < Aikar> and you know ive always been in the channel :P
13:59 < Aikar> just havent kept it active as i use to...
13:59 < Aikar> I got too many IRC channels >_>
13:59 < Aikar> doing some Minecraft development in Java now :3
13:59 < Aikar> but i'm going to be developing some node systems to work with it, cross server communication stuff
13:59 < Azureus777> what is node.js?
14:02 < Aikar> is that a troll question?
14:02 < superjoe> does anyone else find apis like this annoying? http://nodejs.org/docs/latest/api/querystring.html#querystring_querystring_parse_str_sep_eq_options
14:02 < superjoe> the type of the result is different depending on user input
14:02 < superjoe> so I have to do isArray checks
14:02 < superjoe> that's silly
14:03 < superjoe> they should always be an array, instead of trying to do 2 things in 1 api
14:04 < superjoe> if you want to have another API that's easier to use, that's fine. then the value should be a flat object, and it should throw an error if the user supplied 2 params with the same name
14:04 < durre> I would like to do some testing of my nodes code. any recommendations? I'll be making integration tests, read write to databases etc
14:08 < Aikar> superjoe: what else can it return?
14:12 < Diable> Why I can't access req.body in app.post ?
14:13 < superjoe> Aikar, https://gist.github.com/3959036
14:13 < superjoe> I modified the API with an example 
14:30 < aandy> hi, i have a "working" login test http://pastebin.com/d8aRru8Q but with a cookie expire/maxAge problem which i can't specify. not sure if it's express.session, RedisStore or passport. req.session.cookie is updated correctly when the session is used (time reset), and also in RedisStore, however the browser (Chrome) still keeps the old expires/maxAge. any ideas how i can debug this?
14:36 < yorick> isaacs: why is my npm segfaulting?
14:39 < yorick> npm i dnode -> segfault.
14:39 <@mbalho> yorick: works for me
14:41 < yorick> 0x00007ffff791570b in ?? () from /usr/lib/libv8.so
14:43 < yorick> node v0.8.12, v8 v3.14.0, uv 0.8
14:43 < SomeoneWeird> works for me too
14:44 < johnhamelink> Hey there, I'm having a __weird__ problem with adding an element to an object - if I console.log the element, I get what I want, but if I console.log the object, the element is missing! https://gist.github.com/3959169
14:44 < yorick> it segfaults when it wants to install something :|
14:44 < yorick> using my standard OS (arch linux) node packages.
14:45 < yorick> oh, it's at 0.8.14 since yesterday
14:53 < johnhamelink> any ideas guys?
14:53 < deoxxa[grumpy]> johnhamelink: mongoose is probably using a getter or something
14:54 < johnhamelink> deoxxa[grumpy]: ok, so how can I load it into my object so that when I console.log it, I get everything? :)
14:54 < deoxxa[grumpy]> hrrrm, i'm not sure
14:54 < yorick> also it seems the build system expects 'python' to be python2
14:55 < deoxxa[grumpy]> that's kind of the whole point of getters - the values don't even exist until you explicitly fetch them
14:55 < johnhamelink> so if i fetched it into a temporary var, then set the element to the var that'd fix it?
14:55 < deoxxa[grumpy]> presumably...
14:55 < deoxxa[grumpy]> seems odd that mongoose would do that though
14:56 < johnhamelink> odd deoxxa[grumpy], doesn't seem to make a difference
14:56  * yorick makes a temp dir with a symlink to python2 and puts it in his path
14:56 < deoxxa[grumpy]> is "research" a relation or something?
14:57 < johnhamelink> research is a relation yeah, I'm looping through "company", then for each company looking for research to attach to company
14:57 < deoxxa[grumpy]> yeah that's almost definitely some kind of getter
14:57 < deoxxa[grumpy]> you'll probably want to check the mongoose documentation - they probably have a method available to fetch all the relations etc so you can JSON.stringify() the object whole
15:04 < Pete2> Has anyone any experience with secure pairs and upgrading http connections - I am running into issues trying to end the streams
15:08 < Pete2> Here's a gist that shows the problem https://gist.github.com/3959305
15:08 < Pete2> I can't get the upgraded socket to end on the client side
15:10 < yorick> actually having python as python3 breaks most of the module builds
15:18 < johnhamelink> odd deoxxa[grumpy], I managed to fix it with this ugly hack :( gist.github.com/3959360
15:30 < Yedain> hey guys
15:31 <@mbalho> (and girls)
15:32 < Yedain> you know a female programmer?
15:32 < Yedain> you are the 1% :P
15:33 <@mbalho> just being considerate
15:33 < Yedain> is anyone here working on anything "voip"ey
15:34 <@mbalho> @voxer is the largest node app in terms of users/deployment and is essentially voip
15:34 < ccowan> I think the term guys is as he used it had been determined to be unisex. When my wife comes into the house and says "Hey guys we need to get going or we will be late." I know she isn't talking to me but addressing my three daughters (and me).
15:34 < Aikar> superjoe: hmm, why? why dont you consider default implementation accurate? its not losing data
15:34 < ccowan> :D
15:35 < Venom_X> Yedain: there's vock
15:35 < Aikar> though, sadly diff http servers handle it diff. PHP expects bar[]=foo&bar[]=qux
15:36 < CoverSlide> PHP's handling of querystrings is stupid and promotes really stupid behavior
15:37 < Yedain> vock looks cool
15:37 < Venom_X> Yedain: it is cool. I've been wanting to play with it more, but have been to busy
15:37 < bradleymeck> vock + npat etc make it somewhat viable, still needs serious compat work for random places
15:38 < Aikar> CoverSlide: I dunno, [] is pretty clear the intended result
15:38 < Yedain> i want to make a voip app so bad
15:38 < Aikar> where as bar=foo&bar=qux is not
15:38 < CoverSlide> there's several things wrong with it
15:38 < aalex-sat> hello. Writing an addon. I wrote a function who returns a Local Array. That Local Array is null when my function returns in the javascript world. Any hint?
15:38 < aalex-sat> Actually, it looks like an empty object.
15:38 < Aikar> aalex-sat: did you return scope.Close(returnValue);
15:38 < Yedain> CoverSLide: who?
15:39 < Aikar> Yedain: hes talking to me
15:39 < Yedain> k
15:39 < CoverSlide> Yedain: Aikar 
15:39 < Aikar> about PHP's url parsing
15:39 < Yedain> ewe php
15:39 < Aikar> isaacs: you around?
15:39 < CoverSlide> the problem is bar[]= is php's syntatic sugar for array_push. it's not really supported in other languages, so it's meaningless coming from another language
15:40 < Aikar> CoverSlide: i agree its not as common, but I think its more clear that your intending it be an array of values
15:40 < aalex-sat> Aikar, yes
15:40 < Aikar> aalex-sat: can you paste the code?
15:41 < CoverSlide> except that forms and inputs don't really support arrays, so it's really meaningless in that context
15:41 < Aikar> though, I've been out of the loop on node dev for many months, but I wouldnt think the C++ level V8 code would of drastically changed.
15:42 < CoverSlide> a form is essentially a key/value store, as is a querystring
15:42 < Aikar> what does the spec say? :P
15:42 < CoverSlide> when you assign the same key to a store, one overrides the other
15:42 < CoverSlide> the spec doesn
15:42 < CoverSlide> 't specify arrays
15:42 < CoverSlide> last i checked
15:43 < clever> CoverSlide: what about a listbox that lets you select multiple items?
15:43 <@isaacs> Aikar: yo
15:43 < aalex-sat> Aikar, here it is: http://code.sat.qc.ca/redmine/projects/node-tempi/repository/entry/tempi_addon.cpp?rev=develop The function on line 877 with arg on line 1019 calls the function tempi_message_to_v8_array (line 47) which we return.
15:43 < aalex-sat> Sorry, it's1061 lines...
15:44 < Aikar> isaacs: I'm trying to upgrade from .6 to .8 on an old debian lenny box, it doesnt have python json, and apt-get install python-json still errors with a different error, how can i install node alternativelly?
15:44 < CoverSlide> the querystring syntax allows for having the same key repeated twice, but it doesn't say anything about how it should be handled, and nothing about bracket syntax
15:44 < CoverSlide> for example, with ruby's CGI::parse ?? iirc, if you have ?bar=1&bar=2, you get {"bar" => [1,2]}
15:45 < mp_l_a_y> yuuhuuuAhhyhb
15:45 < CoverSlide> but that's only because that's how they chose to parse it
15:45 < Aikar> aalex-sat: im not a V8 expert, but have you tried giving that function a scope then close it on return with atoms?
15:45 < CoverSlide> my problem is PHP setting its own standard for handling this, and everyone expects the same result
15:46 < aalex-sat> Aikar, that might be my problem. No haven't tried it.
15:46 <@isaacs> Aikar: um... i really don't know.
15:46 < Aikar> ive only done a little C++ dev for node, but I think I always gave my funcs scope
15:47 < Aikar> isaacs: well i know copying node binary works, what else do i need to manually copy in place?
15:47 < Aikar> and cant the make install step be simplified to not have python dependency? :(
15:47 < Aikar> or at least the json part
15:47 <@isaacs> probably not
15:47 <@isaacs> Aikar: you can just download the binary tarball.
15:47 <@isaacs> Aikar: and unpack it wherever you liek
15:47 < Aikar> it doesnt work on lenny
15:47 < Aikar> GLIBC error
15:47 <@isaacs> oh.
15:48 <@isaacs> upgrade to a not-several-year-old debian version, i guess?
15:48 <@isaacs> or investigate why python-json won't install?
15:48 < Aikar> copying node binary works, i did it on another server, what npm files need copying?
15:48 < Aikar> i got it installed, it gives an error, sec
15:48 < Aikar> AttributeError: 'module' object has no attribute 'loads'
15:48 < Aikar> in the json module
15:49 < Aikar> ah its python 2.5.2...
15:49 < framlin> is there a mailinglist or something like that for flatiron.plates?
15:50 < framlin> or does anybody know plates here?
15:53 < CoverSlide> framlin: you might ask in #nodejitsu
15:53 < niggler> !shoo 
15:54 < niggler> sorry that's in #javascript
15:55 < Aikar> isaacs: this is for work stuff... production team handles major updates like that, but this is like my lil side pet project here so they give me full control on managing it, 
15:56 < Aikar> it NEEDS to be updated though, as rest of our boxes were moved over to ubuntu
15:56 <@isaacs> Aikar: yeah, i think you need python 2.6 maybe
15:56 <@isaacs> or 2.7
15:56 < Aikar> but wed have to setup maint windows for the downtime
15:56 <@isaacs> downtime?
15:56 <@isaacs> to upgrade python?
15:57 <@isaacs> wait wait wait, you're doing this on production servers?
15:57 < Aikar> to rebuild entire system to ubuntu
15:57 <@isaacs> nono, just download the python source and build it
15:57 <@isaacs> like it's a software program or something :)
15:57 < Aikar> sort of, I got updated in dev, trying to push it to prod but our prod server is really old lenny
15:57 < Aikar> everythings running great in testing
15:58 < Aikar> well, testing is too, but i manually copied updated node binary into place
15:58 < Aikar> trying to avoid that in prod =P
15:58 < superjoe> Aikar, it's not losing data, but it requires type checking and branching logic to deal with.
15:58 < Aikar> if I dont use npm on the prod server, is copying the binary all I need?
15:58 < superjoe> smelly
15:59 < superjoe> Aikar, it could easily crash your server if you're not careful, whereas using my proposed API prevents accidental errors
16:00 < Aikar> superjoe: i guess =P but long as its documented behavior you can code accordingly with isArray
16:02 < framlin> CoverSlide: good idea! thanks
16:04 <@isaacs> Aikar: yes, you can just copy the binary, if it's built with the same gcc etc.
16:05 <@isaacs> Aikar: you can probably actually just unpack the binary tarball, then clobber the existing bin/node with your known good one
16:05 < Aikar> isaacs: yeah I compiled on the prod server (thats how I've been managing node)
16:05 <@isaacs> Aikar: that'd probably work
16:05 < Aikar> isaacs: the prebuilt one on node site gives glibc errors
16:05 <@isaacs> Aikar: if you need npm and gyp and whatnot
16:05 < Aikar> so i had to compile myself
16:05 <@isaacs> Aikar: yep.
16:05 < Diable> Why req.body is empty ?
16:05 < Aikar> so far test instance on prod server is running fine
16:06 < Aikar> which i expected :P
16:06 < CoverSlide> Diable: your request probably hasn't passed through express.bodyParser middleware
16:06 < Aikar> since really same deploy steps haha
16:06 < Raydiation1> how do i install npm packages manually?
16:06 < Diable> express.bodyParser is active but app.body is emptu
16:06 < CoverSlide> Diable: try tracing through your middleware stack
16:07 < CoverSlide> Raydiation1: define "manually"
16:07 < Raydiation1> CoverSlide: npm segfaults
16:07 < CoverSlide> hmm maybe a better solution would be to figure out what's wrong with npm
16:07 < superjoe> Aikar, I agree that the api works. I'm just saying, it could be better.
16:07 < Diable> CoverSlide: How to do that ?
16:08 < Raydiation1> CoverSlide: well, latest update broke it for me
16:08 < Raydiation1> also i dont really have the time nor do i want to valgrind node
16:08 < Raydiation1> s/valgrind/gdb
16:09 < CoverSlide> Diable: see where you have all our app.use( things. start from the top, check your routes. also, do you have app.use(app.router)? you should probably put that after bodyParser
16:09 < Diable> CoverSlide: It's already done
16:10 < CoverSlide> Diable: well that's what 99% of the people asking that question get wrong. if you're not one of those, then we'd have to see some code
16:10 < CoverSlide> Diable: also, #express might be a good channel to ask as well
16:12 < CoverSlide> Raydiation1: ok, well basically, it involves mkdir node_modules; cd node_modules;wget http://{tarball url here} ;tar -xzf {tarball filename here}; mv package {package name here}
16:12 < Diable> I did'nt know there was a channel # Express
16:13 < CoverSlide> although npm shouldn't be segfaulting, maybe something went wrong with your node build
16:13 < CoverSlide> or else it more people would be having this problem
16:13 < Raydiation1> CoverSlide: ty
16:14 < Diable> How to update node with cmd (if it's possible) ?
16:16 < aalex-sat> Aikar, it didn't work. Still returns an empty object.
16:16 < CoverSlide> Diable: you'd have to rebuild or redownload it. there are packages that can automate this for you, though. CHeck out nvm, nave, n, or give
16:17 < Slaytorson> Anyone ever use nodemon? I need a way to automatically restart node during development.
16:18 < dz0ny> Slaytorson: node-dev ftw
16:18 < airtanah> Slaytorson: also supervisor
16:18 < CoverSlide> Slaytorson: what's your question?
16:18 < Aikar> aalex-sat: sorry wont be able to help you :(
16:18 < Aikar> isaacs: success, prod running .8.14 now
16:19 < Aikar> I was surprised I had very minimal updates from .6 -> .8, only had to update express 2->3 and MongoDb adding safe flag default
16:19 < CoverSlide> \o/
16:20 < Slaytorson> dz0ny: node-dev has growl notifications? I think I just fell in love!
16:20 < dz0ny> Slaytorson: yes, growl inotify etc
16:21 < dz0ny> https://github.com/fgnass/node-dev
16:23 < Raydiation1> any idea why require("buster") gives me this: http://dpaste.org/GZtLF/
16:23 < airtanah> node-dev looks pretty badass
16:23 < Raydiation1> Error: Cannot find module 'buster-core'
16:24 < Raydiation1> i got the lib in a node_modules folder
16:24 <@isaacs> Aikar: i think the child_process exit/close event is the only thing that bit most people
16:24 <@isaacs> Aikar: we tried hard to make it pretty smooth
16:24 <@isaacs> Aikar: 0.4->0.6 was way too rough
16:24 < Aikar> isaacs: hmm, what changed there? I dont think our code uses much there, and everything seems to work fine
16:25 <@isaacs> Aikar: exit will emit before all the stdio data is emitted
16:25 <@isaacs> Aikar: sometimes
16:25 <@isaacs> Aikar: the 'close' event happens when the process has exited, and all stdio's have closed
16:25 < Aikar> ah k
16:25 <@isaacs> Aikar: but, for example, if you have shared stdio fd's, then close might never happen
16:26 < Aikar> and it def seems like our dashboard is alot faster now
16:26 <@isaacs> Aikar: and there was really no way to fix the edge cases without changing the event semantics a bit
16:26 < Aikar> those benchmarks on the initial .8 release are amazing
16:26 <@isaacs> yeah :)
16:26 < Aikar> i use to keep up with node so much if you remember my activity lol... but then i got into minecraft (and development, java) so been out of the loop ><
16:27 < Aikar> but now im looking to do some node projects for our minecraft stuff too D:
16:27 < Aikar> someone has a proxy layer for MC servers that is using like 3 threads per connection.... I wanna rewrite it to node
16:27 < Aikar> and in Java... so memory use is going to be insane lol
16:28 < Aikar> https://github.com/ElasticPortalSuite/BungeeCord
16:28 < Aikar> our goals is to def reach 1000+ concurrent connections, so under java/threads thats going to be a ton of memory
16:28 < Slaytorson> dz0ny: Thanks! I love this!
16:29 <@isaacs> Aikar: neat!
16:31 < CoverSlide> Aikar: that's why you use java nio
16:31  * CoverSlide hides
16:31 < Aikar> CoverSlide: lol
16:32 < Aikar> well i made my comments to them, maybe theyll fix it before i get to the need of using it :P
16:33 < Aikar> "@aikar With regards to using async connections, it is actually NOT better for this sort of application, once you start looking in depth at how the data is handled. If you want to help out coding this project get in touch with me. Also creating a system like this is not for the faint hearted, it takes a lot of time and effort."
16:33 < Aikar> ??? not better to use async io for a TCP socket proxy?
16:38 <@konobi> anyone know of any sgml editing tools for OSX?
16:40 < kold_> I have a project that has some local modules installed in node_modules.  I've installed grunt globally and it sees it fine.  I've also installed grunt-contrib-less globally (but want to keep it out of the local project as I'll use it for multiple) but grunt can never find it.
16:41 < kold_> running "npm ls" shows only my local node_modules.  any idea how to get around this?
16:43 < joehoyle> kold_: npm -g ls ?
16:45 < kold_> joehoyle: yeah, it's in there
16:46 < kold_> maybe this is grunt specific and I should ask in the gruntjs room?
16:47 < kold_> heh, there is no gruntjs room :)
16:47 < danheberden> kold_: #grunt
16:48 < danheberden> and yes, there is 
16:48 < kold_> danheberden: heh, I looked at #gruntjs *drinks more coffee*
17:05 < zdubdub> Anyone have experience working with passport-http-oauth and OAuthorize?
17:06 < SoulRaven> hello
17:07 < SoulRaven> help me with something, i try to emit and event, but i don't know if i am doing write
17:07 < SoulRaven> http://bin.cakephp.org/view/1354520091
17:07 < SoulRaven> i try this example, but i get: emitter.on('DBConnected', function (state) {
17:07 < SoulRaven> TypeError: Object function EventEmitter() {
17:08 < SoulRaven> emmiter has only one function, eventEmitter
17:08 < SoulRaven> not on
17:10 < CoverSlide> SoulRaven: EventEmitter does not contain `on`. new EventEmitter does
17:11 < gnarf> isaacs: BTW - I did a little testing with `npm ls` - it doesn't seem to do what we want it to without a bit of extra work, including us parsing package.json versions, and comparing to the json output.  What we really are looking for is a simple way to determine if any of the listed packages in package.json are a) out of date (old version), b) not installed and exit cleanly before breaking in weird ways
17:13 < CoverSlide> SoulRaven: although the usual pattern is this: https://gist.github.com/3960005
17:24 < onr> any alternative of uglify-js but for html and/or css?
17:26 < SoulRaven> CoverSlide: thx, i will look in to it
17:29 < CoverSlide> onr: stylus can minify css, but it might be overkill for what you need
17:30 < onr> CoverSlide: stylus just removes line breaks?
17:30 < SoulRaven> CoverSlide: but if i want a simple case of event emitter, not using constructor and prototype, is posibile?
17:30 < CoverSlide> well it does some kind of minification
17:31 < qmx> is there a handy npm package.json template generator?
17:31 < CoverSlide> I don't remember everything it does, but css isn't that complex anyway
17:31 < CoverSlide> qmx: npm init
17:31 < qmx> CoverSlide: thx
17:31 < CoverSlide> SoulRaven: EventEmitter has to be instantiated to use its methods
17:32 < CoverSlide> EventEmitter is a constructor, not an actual emitter
17:33 < SoulRaven> os if i do emitter = new EventEmittor; emitter.emit('some_event', state); emitter.on('some_event', function(state){});
17:33 < SoulRaven> will work? i undestand right?
17:33 < timeturner> anyone have issues with tmux not doing the aggressize resize sometimes
17:35 < jergason> timeturner: what do you mean agressive resize?
17:35 < CoverSlide> SoulRaven: yeah it should
17:36 < CoverSlide> SoulRaven: although you'd need to do .on before .emit
17:36 <@isaacs> gnarf: missing or invalid, ls will tell you
17:36 <@isaacs> gnarf: but ls does no network io
17:36 <@isaacs> gnarf: so it can't possibly find out if anythign is out of date
17:36 < timeturner> jergason: setw -g aggressive-resize on
17:36 <@isaacs> gnarf: for that, use `npm outdated`
17:36 < gnarf> isaacs: "out of date" meaning - not matching package.json
17:36 < gnarf> so no net needed
17:36 <@isaacs> gnarf: oh, ok
17:36 < gnarf> isaacs: I tested this
17:37 < timeturner> I have that in my tmux conf file but sometimes when I detach from the session and reattach to it it just shows a pattern where it should have resized
17:37 <@isaacs> gnarf: if you want to get the data in a more parseable output, you can use `npm ls --json` or `npm ls --pl`
17:37 < gnarf> npm ls did not error or anything when i had grunt 0.3.6 and my package.json wanted 0.3.11
17:37 <@isaacs> gnarf: that sounds wrong.
17:37 < nathan7> hi isaacs 
17:38 <@isaacs> nathan7: hi
17:38 <@isaacs> chjj: You seen this? http://www.codinghorror.com/blog/2012/10/the-future-of-markdown.html
17:38 < gnarf> isaacs: lemme see if i can repro
17:39 < AndreasMadsen> such delightful people in here
17:39 < gnarf> okay isaacs - I have 0.3.15 -- package.json wants "~0.3.17"
17:39 < gnarf> npm ls = no error
17:40 < gnarf> isaacs: would it matter that its "devDependencies" ?
17:40 <@isaacs> gnarf: https://gist.github.com/3960139
17:40 <@isaacs> gnarf: probably.
17:40 <@isaacs> one sec..
17:40 <@isaacs> yep, that's it
17:40 <@isaacs> gnarf: i'd call that a bug
17:41 <@isaacs> gnarf: https://github.com/isaacs/read-installed/issues
17:41 <@isaacs> gnarf: please post here^
17:42 < timeturner> nm tmux attach -d works
17:42 < gnarf> isaacs: https://gist.github.com/6cd7ee00d614f74876eb
17:42 < chjj> isaacs: yeah, i took a look at it. markdown could definitely use a spec. writing marked, i was testing against 5 different markdown implementations, and every single one of them is different in behavior (not just features).
17:42 < gnarf> isaacs: and yeah, switching it to regular old depend works fine
17:43 < chjj> isaacs: the closest thing to a spec is gruber's test suite
17:43 <@isaacs> chjj: just so you know, as far as i'm concerned, marked is *the* markdown implementation in node.
17:43 <@isaacs> chjj: it's the one that the npm website uses, and that node uses for the docs, etc.
17:43 < chjj> isaacs: :)
17:43 <@isaacs> but even in npm, there are like a dozen, of course.
17:44 < gnarf> isaacs: https://github.com/isaacs/read-installed/issues/4 good nuff?
17:47 < zdubdub> Anyone have experience working with passport-http-oauth and OAuthorize?
17:51 < AndreasMadsen> isaacs: have you looked at this domain bug (https://github.com/joyent/node/pull/4153) it is super frustrating.
17:52 < whiskers75> how does one remove all newlines from a string?
17:52 < chovy> http://www.quora.com/Programming-Languages/In-laymans-terms-what-are-the-major-programming-languages-and-what-are-they-used-for
17:52 < chovy> "C++ is Java's cousin. Similar to Java in many ways, the main difference being she grew up in a more innocent time and doesn't believe in using protection."
17:53 < AndreasMadsen> whiskers75: there are many ways, a simple one is : str.replace(/\n/g,'') 
17:54 < whiskers75> thanks.
17:54  * CoverSlide starts climbing up a ladder, then feels something splatter
17:56 < CoverSlide> haha
17:56 < CoverSlide> 'By "protection", I mean automatic memory management, of course. What did you think I meant?'
18:05 < owen1> TooTallNate: i heard you have ideas for blog engine using node (without express). i currently use (and love) poet - https://github.com/jsantell/poet
18:05 < owen1> TooTallNate: just wanted to hear your approach. is it npm-www style?
18:06 < TooTallNate> owen1: i just wrote a quick thing by hand using express and libgit2 via node-ffi
18:06 < TooTallNate> owen1: see n8.io
18:06 < TooTallNate> owen1: it's running on my Raspberry Pi at home :)
18:06 < TooTallNate> the repo is on github as well
18:06 < owen1> TooTallNate: n8.io
18:06 < owen1> sweet
18:07 < owen1> TooTallNate: i was thinking of writing a simple poet-like engine that is not using express
18:33 < Aikar> whoa, v8 added html helpers onto the string prototype?
18:33 < context> ew
18:33 < context> html helpers ?
18:34 < parallel> like, italics() or link() ?
18:34 < Aikar> "foo".link('http://google.com")
18:34 < Aikar> yes
18:34 < parallel> hahaha. i never thought to check if those were there.
18:34 < Aikar> i just randomly saw it on the REPL lol
18:35 < blazes816> hopefully it's at least em() instead of italics()
18:35 < Aikar> its italics
18:35 < context> thats scary.
18:36 < parallel> they're very old functions. how many JavaScript features like that just... never wound up being used.
18:37 < parallel> var layer = new Layer() in netscape 4
18:37 < aho> kinda like that Boolean wrapper etc
18:37 < aho> really silly stuff
18:38 < aho> > !!new Boolean(false)
18:38 < aho> true
18:38 < aho> fun, right? :>
18:38 < parallel> heheh. or I'd prefer Boolean(new Boolean(false))
18:39 < aho> haha
18:39 < aho> also nice
18:40 < CoverSlide> "eyes".blink() is a nice one
18:45 < aandy> "anything".marquee()
18:45 < aandy> no method :( rats
19:11 < CoverSlide> Fucking steam. I accidentally forgot to set the yeear for age verification. Won't let me refresh, so I gotta clear cookies. At least that's smarter than most sites. Also apparently I'm -27 days old.
19:14 < aalex-sat> How do I convert a v8::Local<v8::Object> to its number value?
19:15 < TooTallNate> aalex-sat: ideally you have the v8::Value that created the v8::Object, and from that you call val->Int32Value()
19:17 < aalex-sat> TooTallNate, it's from a v8::Array. CloneElementAt return a v8::Object
19:17 < aalex-sat> I just want the numbers stored in the array
19:18 < aalex-sat> Just to print the contents of the array, 
19:18 < Validatorian> What is the most complete blogging platform for node currently? Wheat?
19:19 < CoverSlide> Wheat's probably the oldest
19:19 < CoverSlide> It's great, but it requires your bloggers to use git.
19:20 < CoverSlide> If you want non-programming people to write to your blog, probably not the best option
19:20 < TooTallNate> aalex-sat: you should be able to do "array->Get(i)->Int32Value()"
19:21 < aalex-sat> TooTallNate, tahnks!
19:22 < TooTallNate> aalex-sat: i've never used/needed CloneElementAt so I don't think it's necessary
19:22 < therealkoopa> What's the best way to broadcast to a socket.io process from another process? I need a worker process to send a message to all clients
19:22 < Validatorian> CoverSlide: Is there a comparable option for node? The blog is extremely important for marketing and such, but I don't have a lot of time to spend building the engine there, need to focus on my product, so I want the best out-of-the-box solution I can find atm
19:23 < therealkoopa> My socket.io server is already using RedisStore, but I don't know how to tap into that redis store to publish a message from a worker process.
19:23 < CoverSlide> Validatorian: so basically you want wordpress on node?
19:23 < CoverSlide> Validatorian: why not just use wordpress?
19:23 < Validatorian> I might. I am going to be building my app in node, made some sense to keep them on the same platform, but I could have wordpress for the blog and node for the main app I suppose
19:27 < darach> Has anyone implemented a 'require' replacement that uses the npm API to install and require an 'optional' dependency? Would be nice for samples etc..
19:29 < CoverSlide> darach: so you want to require something and use the npm api if it isn't present?
19:29 < CoverSlide> there's one thing wrong with that: require is synchronous, npm is not
19:33 < darach> CoverSlide. Yup. You got me on both counts! :)
19:40 < Raydiation> so, if i install something with npm like busterjs
19:40 < Raydiation> why cant require find it?
19:41 < Raydiation> can i list modules and their import cmds?
19:41 < Raydiation> s/import/requrie
19:41 < thealphanerd> Raydiation: did you npm install in the root directory of your app?
19:41 < thealphanerd> you can use a package.json to specify which modules your app requires
19:42 < Raydiation> thealphanerd: i used: npm -g install buster (as root)
19:42 < Raydiation> then i type: node
19:42 < Raydiation> and: require("buster")
19:42 < Raydiation> and i get a module not found
19:43 < thealphanerd> -g is a global install
19:43 < purr> thealphanerd: npm 1.0: Global vs Local installation <http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/>
19:43 < Raydiation> thealphanerd: so it should work right?
19:43 < thealphanerd> that is to used to install command line applications that run on node
19:43 < CoverSlide> Raydiation: you need to use a module in your project, it needs to be local
19:43 < thealphanerd> you need to install locally
19:43 < CoverSlide> global install just exposes the bin executable
19:43 < CoverSlide> you can't require a global module
19:44 < Raydiation> well, im trying to get js tests running with jenkins
19:44 < Raydiation> and i got lots of little apps
19:44 < Raydiation> i cant link it into every app directory
19:45 < Raydiation> doesnt node know where the lib is?
19:45 < Raydiation> like in python where you do: import os
19:45 < Raydiation> standardpaths
19:45 < nathan7> node modules are self-contained
19:45 < Raydiation> or in ruby
19:45 < Raydiation> or in c
19:45 < context> raydiation: so have jenkins run npm install before running tests
19:46 < Raydiation> context: i also want my app devs to be able to run the tests
19:46 < context> so they need to run npm install before running them ....
19:46 < Raydiation> so youre suggesting that everyone has to install it for every app?
19:46 < Raydiation> isnt this nuts?
19:46 < context> no really
19:46 < context> or install globally then do npm link
19:46 < darach> CoverSlide. Looks like I could do this via a native. Thanks.
19:47 < context> either way.... you have to install the shit before running tests on jenkins ALL the time anyway.... otherwise are you going to manyally update the jenkins server every time you change package.json for a project?
19:47 < Raydiation> k, it works
19:47 < context> that hardly seems very.... automated testing
19:47 < Raydiation> but, i still think this is the work of a madman
19:47 < Raydiation> why cant we have nice things?
19:47 < xaka> are there any plans for node.js and TypeScript integration? i played with it today first time and it's just amazing
19:48 < Emroni> Hi all
19:49 < Emroni> got an error message I cant seem to get rid of, anyone here to answer a few questions?
19:50 < aandy> pastebin it and we'll have a look :)
19:50 < CoverSlide> Raydiation: there is a devDependencies field in package.json
19:50 < CoverSlide> usually that's where people put their test frameworks
19:50 < Emroni> Well, ive been trying to install it on my NAS (QNAP)
19:50 < Emroni> and its there
19:50 < CoverSlide> Raydiation: and you install them with npm install --dev
19:51 < Emroni> but i get this error every time i try to connect:
19:51 < Emroni> events.js:68         throw arguments[1]; // Unhandled 'error' event
19:51 < Emroni> Error: accept EFAULT
19:51 < Emroni> tried looking it up, but all i can find about the error, is that it cant write the address space
19:52 < CoverSlide> Raydiation: for testing frameworks, though, usually they expose an executable, so if you want to havve that as a global on your jenkins server, and just call the executable, that would work too
19:52 < thealphanerd> Raydiation: that npm install only needs ot be run once
19:52 < Emroni> am running make test right now, giving me the error as well
19:52 < thealphanerd> when you clone a repo you run npm install in the root directory
19:52 < thealphanerd> you make a package.json that outlines all dependencies and info about said app
19:52 < thealphanerd> think of it like a git submodule
19:52 < nathan7> npm init
19:52 < aandy> Emroni: on building node from source or?
19:53 < nathan7> npm install --save depthis depthat
19:53 < thealphanerd> even if you clone the repoâ€¦ you still need to run git submodule init
19:53 < Emroni> got it from git
19:53 < thealphanerd> Emroni: are you looking to run the latest upstream release, or latest stable
19:53 < Emroni> clone, checkout, you know
19:53 < Emroni> stable
19:54 < thealphanerd> you are going to want to checkout v0.8.14 branch
19:54 < thealphanerd> then ./configure
19:54 < thealphanerd> make
19:54 < thealphanerd> sudo make install
19:54 < Emroni> thats what i did
19:54 < CoverSlide> v0.8.14 tag you mean?
19:54 < thealphanerd> CoverSlide: I beleive there is a branch
19:54 < thealphanerd> https://github.com/joyent/node/tree/v0.8.14-release
19:54 < thealphanerd> I guess you could use the tag as well though
19:55 < CoverSlide> i think v0.8.14-release is the branch name v0.8.14 is the tag name
19:55 < gildean> easier to clone a branch
19:55 < gildean> with git clone -b branchname
19:56 < thealphanerd> I usualy git clone rep
19:56 < thealphanerd> then git checkout branch name
19:56 < thealphanerd> if you have git bash completion set up your money
19:56 < Emroni> what will installing the branch do for me? kinda new to this stuff
19:57 < thealphanerd> Emroni: if you clone the main repoâ€¦ you will have the latest code base
19:57 < thealphanerd> upstreamâ€¦ which is not stable
19:57 < Emroni> yea thats what i thought
19:57 < Emroni> oh
19:57 < gildean> thealphanerd: i use zsh, it has em all
19:57 < Raydiation> btw, why cant we make the module system like python does it?
19:57 < thealphanerd> the latest stable version is v0.8.14
19:57 < Raydiation> or every other language
19:57 < thealphanerd> Emroni: what platform are you on
19:57 < Emroni> i believe its an ARM?
19:57 < thealphanerd> ohhh
19:57 < thealphanerd> beagleboard?
19:57 < thealphanerd> raspi?
19:58 < Emroni> its a QNAP TS212 (NAS)
19:58 < gildean> thealphanerd: clearly not if it's a nas
19:58 < thealphanerd> I missed the nas part
19:58 < thealphanerd> Emroni: be prepared for the compile time to take a while
19:58 < thealphanerd> I recently compiled on the beagle which is also arm
19:58 < thealphanerd> it is a little more involved
19:58 < Emroni> yea ive done it a couple of times before, takes ages
19:58 < thealphanerd> let me pastebin you the install steps
19:59 < Emroni> cool, thanks
19:59 < Emroni> btw, if I remove the /node folder, does it remove node completely or does something stay behind to mess things up for the new version?
20:00 < thealphanerd> https://gist.github.com/3961104
20:00 < thealphanerd> now this may or may not work on your nas
20:01 < thealphanerd> but this got it working on my beaglboard arm board
20:01 < thealphanerd> if you nas does not have a package manager you may need to modify some steps as required
20:01 < Emroni> ill give it a shot :)
20:02 < Emroni> btw, if I remove the /node folder, does it remove node completely or does something stay behind to mess things up for the new version?
20:03 < thealphanerd> if you are git lconing
20:03 < thealphanerd> you want to keep the folder
20:03 < thealphanerd> as a general best practice you should always keep your hands on whatever source you build
20:03 < thealphanerd> make a src directory or something 
20:03 < thealphanerd> that way you know what you installed and where ( by looking at make install)
20:04 < cellvia> greetings friends, simple query here...   how do i duplicate an instance  of an object  ?
20:04 < cellvia> along with its state
20:04 < thealphanerd> y = {}
20:04 < thealphanerd> x = y
20:04 <@isaacs> cellvia: like, create another object, that's exactly the same?
20:04 < thealphanerd> ?
20:04 <@isaacs> cellvia: or another reference to the same object?
20:04 < Emroni> im off to see if your pastebin stuff works
20:04 < cellvia> create another object
20:04 < cellvia> thats exactly the same
20:04 < Emroni> thanks again
20:05 <@isaacs> cellvia: ok.  how "exactly" the same?
20:05 < thealphanerd> like do you want a constructor - > many objects
20:05 < cellvia> ....  i want to duplicate a stream object basically and maintain the listeners
20:05 < thealphanerd> or do you want a function that returns a closure
20:05 <@isaacs> cellvia: why not just pass the same object around?
20:05 <@isaacs> cellvia: you can do that if you are ok with touching internal "private" bits.
20:05 < cellvia> because im using pipeline and i want to create a unique stream from that pipeline
20:06 <@isaacs> cellvia: the feeling of dirtiness is because doing that is dirty.
20:06 < thealphanerd> cellvia: you might want to look into a function that returns an object
20:06 < cellvia> when i create a new pipeline out of previous streams, i dont want the original streams to get linked permanently
20:06 < thealphanerd> that way everytime you want an object of that type you call the function and it makes a new object
20:06 < cellvia> does that make sense?
20:06 <@isaacs> cellvia: var copy = Object.keys(orig).reduce(function(s,k) { s[k] = orig[k]; return s }, {})
20:07 <@isaacs> cellvia: or even: var copy = Object.keys(orig).reduce(function(s,k) { s[k] = orig[k]; return s }, Object.create(orig.__proto))
20:07 <@isaacs> cellvia: since you need the stuff it inherits as well.
20:07 < cellvia> ok let me give that a shot!
20:07 <@isaacs> er, s/__proto/__proto__/
20:08 <@isaacs> cellvia: you need the trailing wunderbar
20:09 < thealphanerd> cellvia: https://gist.github.com/3961164
20:09 < thealphanerd> an example
20:09 < cellvia> whoa whyt
20:10 < thealphanerd> of another approach
20:10 < thealphanerd> more crockfordy
20:10 < cellvia> s/__proto/__proto__/    ???
20:10 < cellvia> where does that fit in
20:10 < thealphanerd> cellvia: he was making a sed joke
20:10 < chesles> cellvia translation: "replace __proto with __proto__"
20:11 < thealphanerd> replace _proto with __proto__
20:11 < cellvia> oh lol
20:11 < cellvia> got it... thank you, i will try this!!
20:12 < zachwolfe> I'm implementing an OAuth2.0 provider using oauth2orize and I don't quite understand what the redirect_uri is supposed to do
20:12 < Fudgie> Dead-i WRONG CHANNEL!
20:12 < Dead-i> XD
20:12 < Fudgie> lol
20:12 < Dead-i> Hi Fudgie? XD
20:13 < Fudgie> My script just rendered every nick thats away as away
20:13 < Fudgie> about 200 away nicks whizzed past T_T
20:14 < cellvia> so do you imagine this would work , if i have an array of streams
20:14 < cellvia>   streams.map(function(stream){  return Object.keys(streams).reduce(function(s,k) { s[k] = streams[k]; return s }, Object.create(streams.__proto__));  });
20:14 < cellvia> @isaacs this would swap each stream in the array with a duplicate,  so the originals wouldnt be touched further on
20:15 < cellvia> ?
20:15 < thealphanerd> cellvia: it is always nice to keep in mind that js is a functional language
20:16 < thealphanerd> so functions or first class
20:16 < thealphanerd> depending on whjat you need your objects to do
20:16 < Dead-i> I'm having a few problems with Node.js - Is it possible to change the value of a variable from within a function that is outside a function?
20:16 < Dead-i> My sample code is http://pastebin.com/pgPFqeut -- it outputs "Hi" but I want it to output "Ho", any ideas?
20:16 < thealphanerd> they really could be {} with the functions tossed in there
20:16 < thealphanerd> using Object may not be neccessary
20:16 < Xeon06_> Does anyone have any links with an explanation of how views work in Express?
20:16 < cellvia> damn, didnt work
20:16 < thealphanerd> http://expressjs.com/guide.html
20:16 < thealphanerd> :P
20:16 < Xeon06_> I'm particularly confused with the layout, extend and block things
20:17 < thealphanerd> cellvia: pastebin your object 
20:17 < lpin> Dead-i call the function before console.log
20:19 < cellvia> https://gist.github.com/3961240
20:20 < cellvia> https://gist.github.com/3961240
20:20 < cellvia> oops
20:21 < cellvia> you guys are awesome btw
20:21 < thealphanerd> your code confuses me
20:21 < thealphanerd> on a really high level what are you trying to do
20:21 < cellvia> thats inside a function
20:21 < cellvia> the function has arguments
20:21 < cellvia> the arguments are all pipes / streams
20:21 < cellvia> this function links those pipes together into a new pipe
20:22 < cellvia> but in the process permanently attaches the original pipes to each other
20:22 < cellvia> i want it to duplicate the original pipes link those and then return the new pipeline as a new pipe
20:22 < Dead-i> Ooops, sorry
20:22 < Dead-i> Thanks
20:22 < thealphanerd> pipes of?'
20:23 < cellvia> event-stream through functions
20:23 < skybound> something has me seriously baffled: npm bails (cannot find npm-cli.js), but it claims to search it in the subdir where i build node; NODE_PATH seems to be ignored; however: when run as "strace -e trace=file npm ..." it a) works!? b) uses the correct dir (where node_modules is really installed)...
20:23 < skybound> what have i broken now :-)
20:24 < cellvia> some how even when i duplicate each of these pipes/streams   and then act upon them, its still affecting the originals
20:24 < cellvia> thats all that the problem is
20:25 < thealphanerd> becuase your new objects are pointer
20:26 < cellvia> werd... thats what i was hoping you guys might be able to help w/,  duplicating the objects to not be pointers
20:27 < bobsuncle> hey guys, I need some help understanding monkey patching in JS.. I want to override an instance attribute that is defined in an object's constructor.. I'm trying to use defineProperty on the prototype, but it's not working, nothing happens.. can this be accomplished?
20:27 < cellvia> it seems like it should be simple but im a novice
20:28 < cellvia> any ideas isaacs  how that code ended up creating pointers instead of duplicates?
20:28 < timeturner> any node code for pinging a udp port
20:28 < timeturner> or unix code
20:29 < timeturner> or checking it
20:29 < Dead-i> Could anyone spot why http://pastebin.com/rxfRKuqF outputs "One" instead of "Two"?
20:31 < ccowan> because line 17 is executed before lime 15
20:31 < aandy> +1
20:31 < aandy> your code is using non-blocking code via the callback
20:32 < aandy> e.g. put line 17-18 inside your callback
20:34 < EyePulp> anyone using Cube for event capture? https://github.com/square/cube/
20:34 < thealphanerd> timeturner: what kind of pingâ€¦. I worked on a lib for doing osc which is abstraction over udp
20:35 < thealphanerd> cellvia: sorry for vanishing
20:35 < thealphanerd> let me think about how to do this in js
20:35 < timeturner> just for checking if a udp port is open
20:35 < cellvia> sure thing, np at all
20:35 < cellvia> im still pondering on it
20:36 < thealphanerd> cellvia: got it
20:36 < thealphanerd> you want to use _.js
20:36 < thealphanerd> http://underscorejs.org/#clone
20:36 < thealphanerd> they have a bunch of functinal programming extensions
20:36 < thealphanerd> one of which is _.clone(object)
20:36 < Dead-i> ok thanks
20:36 < cellvia> thealphanerd, but it is a shallow copy
20:36 < cellvia> i have a feeling thats what isaacs had given me
20:36 < thealphanerd> perhaps
20:36 < thealphanerd> let me run a test
20:37 < thealphanerd> either way that is cleaner code :P
20:37 < cellvia> :)
20:38 < cellvia> it uses that same libraries "extend" function, which looks very shallow for sure
20:38 < cellvia> looks like it doesnt even get the prototype, which isaacs does at least
20:39 < thealphanerd> it is what you want
20:39 < cellvia> alright i will try it
20:40 < thealphanerd> http://cl.ly/3e2T1f3L0K0X
20:40 < thealphanerd> try that 
20:40 < cellvia> dude
20:40 < cellvia> this is just an obejct literal
20:41 < cellvia> im trying to clone a complex object w/ prototype and internal state
20:41 < thealphanerd> oh wait
20:41 < thealphanerd> oh yeah
20:41 < cellvia> it will need to be a functional stream upon duplication
20:41 < thealphanerd> because it is shallow
20:42 < thealphanerd> just ran another test
20:42 < thealphanerd> hmmmm
20:42 < thealphanerd> you could recursively clone a function
20:42 < thealphanerd> but that seems messy
20:42 < thealphanerd> cellvia: might I suggest popping in #fluid-work and seeing if anyone is in there that might be able to help
20:42 < thealphanerd> some realy js wizards
20:42 < thealphanerd> oh wait
20:42 < thealphanerd> ha
20:42 < thealphanerd> colinclark: hi
20:43 < thealphanerd> perfect timing
20:43 < colinclark> hey
20:43 < thealphanerd> I was just about to send someone to fluid-work for some help
20:43 < thealphanerd> cellvia: colinclark is one of the #fluid-work wizards
20:43 < thealphanerd> colinclark: cellvia has an object that needs to be clonesâ€¦ 
20:43 < cellvia> hi colinclark all im trying to do is deep duplicate an object, along w/ internal state and prototype
20:44 < thealphanerd> specifically a stream of pipes
20:44 < thealphanerd> cellvia: well put
20:44 < cellvia> https://gist.github.com/3961240
20:44 < cellvia> this doesnt work, it was what isaacs recommended
20:45 < cellvia> the original streams still get affected by my code later on
20:45 < cellvia> when i operate upon the duplicates
20:46 < colinclark> Sounds like you can't just clone a stream
20:47 < cellvia> sounds like a challenge to me
20:47 < thealphanerd> colinclark: I was suggesting the object might be able to be traversed and cloned via a recursive funtion
20:47 < thealphanerd> but it seems messy and resource intensive
20:48 < cellvia> so i guess heres a higher level question
20:48 < cellvia> is there a way to clone the private functions/vars of an already constructed object
20:48 < colinclark> Yeah, it doesn't really sound like it's a terribly sound idea
20:48 < thealphanerd> cellvia: now you are getting somewhere
20:48 < cellvia> or rather, is there a way to get to them
20:49 < thealphanerd> free floating functions
20:49 < thealphanerd> as I was mentioning beforeâ€¦ in js functions are first class
20:49 < thealphanerd> so if you have functions resting in an object that you might want to be used elsewhere with other objectâ€¦ why is it in that obejct to begin with
20:49 < cellvia> yes, but you can still make at least virtually private vars and functions
20:49 < thealphanerd> better to toss it in a name space
20:49 < thealphanerd> and give it the obejct to work on when you want to call it
20:49 < ngoldman> just got spammed in a PM by BustAToast for a facebook app
20:49 < thealphanerd> so rather than object.someFunction(foo, bar);
20:50 < thealphanerd> you get someFunction(object,foo,bar)
20:50 < cellvia> yeah, thats how it is now
20:50 < thealphanerd> ngoldman: me tooâ€¦ I told him I would see him die in a fire
20:50 < ngoldman> haha
20:50 < thealphanerd> and reported his ip to #freenode
20:50 < ngoldman> ah yes
20:50 < cellvia> anyways thank you i will look into it futher, let me know if you have any ideas
20:51 < darach> Ooh! options.bufferSize on next readablestream :)
20:53 < thealphanerd> cellvia: I might be able to help you better if you could work out the language of what you want to functionally accomplish 
20:53 < thealphanerd> in a very high level way
20:53 < cellvia> i would love to but im working with a module/library and i dont have time to rewrite all of it
20:53 < cellvia> i am hacking my way around it though
20:54 < cellvia> delaying construction of the object basically
20:54 < thealphanerd> well even with that lib
20:54 < thealphanerd> just the language
20:54 < thealphanerd> I'd be able to help more if I understood what you were trying to accomplish better
20:54 < cellvia> no worries
20:54 < cellvia> i think ive got it
20:55 < thealphanerd> cool sauce
20:57 < gluxon> Guys, there's a user here spaming people as they join.
20:57 < gluxon> !ops
20:57 < gluxon> .ops
20:57 < gluxon> Hm..
20:58 < Triskelios> gluxon: /msg chanserv access #node.js list
20:58 < gluxon> Triskelios: Are you suggesting I ping those people?
20:59 < Triskelios> gluxon: yes, they're the ops and it's perfectly fine to do so
20:59 < gluxon> isaacs, konobi, mbalho, Nexxy: There's a user in this channel spamming people through pm when they join.
20:59 < gluxon> (04:54:58 PM) BustAToast: Create a personalized song for free with Bust a Toast by choosing the lyrics and beat. Use the following V.I.P. code : B259A6D at https://apps.facebook.com/bustatoast/ and than share your customized song with your friends and family.
21:02 < thealphanerd> he spammed me too
21:02 < thealphanerd> didn't relize he was in here
21:03 < lmatteis> anybody looking to hire someone? <-- 
21:03 < lz> lmatteis what do you do?
21:04 < lmatteis> lz: all kinds of stuff. i know node pretty well. i also know browser-land quite well
21:04 < lmatteis> i can query you my resume if interested
21:07 < gluxon> lmatteis: This generally isn't the place to look for freelance work.
21:07 < lmatteis> yup i know. sorry just a shot in the dark
21:07 < thealphanerd> jobs.github.com :p
21:08 <@konobi> gun.io too
21:08 <@konobi> gluxon: can anyone else confirm?
21:09 < gluxon> konobi: Myself and thealphanerd have.
21:10 < thealphanerd> I can confirm
21:10 < thealphanerd> I told him I would see him burn in fire
21:10 < thealphanerd> and reported his ip to #freenode
21:10 < thealphanerd> konobi: any chance you can help to see him burn in fire?
21:13 -!- BustAToast was kicked from #Node.js by konobi [BustAToast]
21:53 < johnhamelink> /leave
21:59 < gkatsev> so, what is the go-to testing framework for a node module? That also works with travis?
22:00 < lohkey> gkatsev: mocha
22:01 < TheHippo> Quick not 100% node.js related question... does somebody now a way or a library to transform special letters like "Ã©" to their ascii variants... in my case "e"
22:01 < CoverSlide> lost of people are liking buster too
22:01 < CoverSlide> not sure if it works with travis
22:03 < gkatsev> I guess travis just executes npm test?
22:04 <@konobi> TheHippo: the term for that is Transliteration
22:04 < gkatsev> I may just stick with vows, since I already have some tests written in it for the module
22:04 < TheHippo> kk... i stumbled about that while searching...
22:07 < TheHippo> it looks like i should use iconv
22:07 <@konobi> TheHippo: it's also commonly used in full text searching for stemming
22:08 < TheHippo> it looks indeed interessting...
22:14 <@konobi> TheHippo: there's also normalization, iirc
22:17 < TheHippo> var iconv = require("iconv").Iconv
22:17 < TheHippo> i = new iconv('UTF-8', 'ASCII//TRANSLIT//IGNORE');
22:17 < TheHippo> i.convert("BÃ©slic").toString()
22:17 < TheHippo> >> 'B\'eslic'
22:18 < purr> TheHippo: (string) "B'eslic"
22:18 < TheHippo> how to get rid of the "'" before the e
22:18 < TheHippo> ?
22:19 < TheHippo> I need "Beslic" as result...
22:20 < bnoordhuis> TheHippo: don't use TRANSLIT
22:20 < bnoordhuis> TheHippo: or rather, don't use TRANSLIT + ASCII
22:21 < TheHippo> if i ommit translit the "e" got missing.. 
22:21 < bnoordhuis> TheHippo: yes, because the accented e cannot be represented in ascii
22:21 < TheHippo> what would you recommened as converting settings?
22:22 < bnoordhuis> TheHippo: maybe ascii+ignore?
22:22 < TheHippo> i know, thats why i try to convert it into an e
22:22 < bnoordhuis> why are you trying to convert it to ascii btw?
22:23 < TheHippo> i need to check if the matches to one of the many domains a client of mine holds... and the domains are all ascii only chars...
22:24 < bnoordhuis> TheHippo: maybe use a regex?
22:24 < bnoordhuis> that'll give you a lot more control over the conversion
22:24 < TheHippo> i don't now.. there are a many special chars out there...
22:25 < TheHippo> iconv is quite good for most of the things... the german "ÃŸ" will get converted to "ss", which is absolutly correct...
22:27 <@konobi> nfd normalization may be more appropriate then
22:31 < Dedyedy> hi
22:35 < EuroNerd> Is there someone knowledgeable about Express & Socket.io, who could hand-hold me for 5 minutes?  I'm trying to set up a basic server and have a few questions.
22:36 < timeturner> sure, go
22:36 < onr> tjholowaychuk: how to do "filter:alpha(opacity=10)" in stylus?
22:37 < tjholowaychuk> onr unquote('any random stuff you :!@#12#@!#!want here')
22:37 < tjholowaychuk> or like
22:37 < EuroNerd> timeturner, thanks... OK, so my app will be single page, all comms over socket.io over https...
22:37 < tjholowaychuk> 'filter:alpha(opacity=%s)' % n
22:37 < tjholowaychuk> 'rgba(%s,%s,%s)' % (a, b, c)
22:38 < tjholowaychuk> etc
22:39 < EuroNerd> timeturner, so basically I want the "normal" server to be as simple as possible. Just serve the handful of .js files and one .htm.  So I want to avoid every unnecessary feature, like routes etc. Ideally, I'd prefer to avoid Express at all, but all examples on the web with socket.io use Express.
22:39 < EuroNerd> ("normal", as opposed to where 99% of traffic will go, i.e.  websockets over SSL)
22:40 < onr> tjholowaychuk: great, thanks
22:40 < s5fs> so i wrote a little app to measure latency and jitter over websockets. was this a waste of time? is there a better way to check client health?
22:43 < EuroNerd> So for starters: do I need to set up two separate servers, each with its own app=express(), then each with its own require("socket.io").listen(srv) ?   (http has socket.io plugged to provide socket.io.js; https has socket.io to do the job)   Seems like overkill.
22:45 <@konobi> EuroNerd: connect with static middleware
22:47 < EuroNerd> konobi, right, so you suggest that node becomes file server (for my .htm & .js files)? But I've heard node shouldn't be directly exposed. So thru reverse-proxied nginx? But I've head nginx doesn't deal well with websockets over SSL. So I've got Apache as the safe choice.
22:47 < Ralt_> EuroNerd just serve your static files through nginx and don't proxy the websockets
22:47 < eph3meral> EuroNerd: well, apache sucks as a proxy, so, it's one of this or the other
22:48 <@konobi> EuroNerd: just use node
22:49 < EuroNerd> Well, I've already set up my server on Apache, so I think I'll stick with that. And why would I want to proxy Apache? Apache can serve .htm & .js, while running web app can connect directly to node thru websockets, right?
22:49 <@konobi> apache can't proxy web sockets
22:49 < niggler> wait wait wait EuroNerd there's a larger question
22:50 < niggler> what is the proper way to serve static assets?
22:50 < EuroNerd> konobi, I don't want to proxy sockets. Apache runs on :80 or whatever, while node (w/ sockets) will be directly exposed on :7000 or sth.
22:50 < niggler> should node be used or some other service
22:50 < EuroNerd> niggler, I think the most straightforward way is for Apache to do it, if they just lay on the disk (and not in db).
22:51 < niggler> but you pay the apache penalty :/
22:51 <@konobi> EuroNerd: just use node
22:51 < EuroNerd> so you're suggesting to serve static files with node?  and expose node directly - no nginx or apache?
22:51 <@konobi> just directly
22:52 < niggler> konobi: what is the performance of that compared to using nginx?
22:52 <@konobi> negligable these days iirc
22:52 < EuroNerd> Then why do some people advise against direct exposure of node and advise using reverse-proxied nginx?
22:52 <@konobi> EuroNerd: cargo-cult
22:52 < EuroNerd> lol
22:52 < jmoyers> well
22:53 < jmoyers> jailing the node process is usually a good idea
22:53 < jmoyers> 80 is priveleged
22:53 < jmoyers> so, setuid or some similar
22:53 < jmoyers> start as root etc
22:53 < niggler> privileged
22:53 <@konobi> that and privilege escalation, but that's solvable from node
22:53 < jmoyers> or use 8080 -> 80 with iptables
22:53 <@konobi> or use something with RBAC
22:53 < jmoyers> thanks for the spelling correction
22:53 < jmoyers> it was extra helpful
22:54 < EuroNerd> So maybe do everything from node, except on :8080 and use Apache just for one thing - redirecting visitors from :80 to :8080?
22:54 < jmoyers> ^ no, why?
22:54 < jmoyers> you don't need apache for that
22:54 < aandy> well, if it's just for static i'd suggest nginx for servering static files
22:54 <@konobi> you can use iptables to do port redirection
22:54 < jmoyers> btw bottom line is, ngnix is faster for serving static files btw. but i bet you seven thousand dollars it won't matter that node is slower.
22:54 < s5fs> EuroNerd: you can roll a static http/https server in node in about 50 lines
22:54 < s5fs> using connect too
22:54 < EuroNerd> you're expecting basic Linux knowledge form me, which I don't posses. :P   ;)
22:55 < jmoyers> look up "redirecting to port 80 with iptables"
22:55 < jmoyers> and you're set
22:55 <@konobi> EuroNerd: then why not use nodejitsu
22:55 <@konobi> =0P
22:55 < EuroNerd> ok, thank you
22:55 < jmoyers> OR, just start node as root and change permission, OR one of the million ways to attain a port
22:55 < TheHippo> just for your information... https://github.com/walling/unorm helped me with my normalization issues...
22:55 < s5fs> jmoyers: i'm using authbind right now, what other ways do you recommend for binding to low ports?
22:56 < jmoyers> authbind is fine
22:56 < CoverSlide> you can npm -g install broxy; sudo broxy --forward 8080
22:56 <@konobi> rbac on illumos based systems, ftw
22:56 < CoverSlide> (shameless plug)
22:56 < EuroNerd> ok, thanks
22:56 < niggler> is broxy supposed to be a portmanteau of bro and proxy?
22:56 < s5fs> jmoyers: thx!
22:56 < CoverSlide> boucy and proxy
22:56 < CoverSlide> *bouncy
22:57 < jmoyers> but wait wat
22:57 < jmoyers> why would you install node to forward to node
22:57 < CoverSlide> it's a simple command line thing,no configuration needed
22:57 < darach> Anyone know if node is supported on power architectures? ... or if there are any plans in that direction?
22:58 < jmoyers> waitâ€¦ does it stay as root?
22:58 < aandy> not if you drop privileges
22:58 < jmoyers> https://github.com/coverslide/broxy/blob/master/index.js how are you jailing it after it starts
22:58 < jmoyers> i dont see any drop privs...
22:58 < CoverSlide> yeah I'm not. personally, I'm not using it for anything in production
22:58 < Ralt_> darach what's "power architectures"?
22:58 < jmoyers> well fuck lol
22:58 < aandy> hehe
22:59 < jmoyers> then DONT use that ;-) thats the whole point
22:59 < jmoyers> is to make sure node isn't running as root
22:59 < EuroNerd> Ralt_, I guess PowerPC processors.
22:59 < darach> Rait_ http://en.wikipedia.org/wiki/POWER7 <- These puppies
22:59 <@konobi> CoverSlide: may as well just use netcat in that instance
22:59 < CoverSlide> it's just something for me to quickly forward ports to my node, ruby, python / whatever i'm working on at the time
22:59 < CoverSlide> does netcat do ssl?
23:00 < s5fs> CoverSlide: it should
23:00 < aandy> am i the only one around here who still uses haproxy?
23:00 < jmoyers> AM I THE ONLY ONE
23:00 < aandy> exactly
23:00 < jmoyers> the answer is no, and haproxy supports websockets
23:00 < jmoyers> last i looked
23:00 < aandy> *loading gun*
23:01 < jmoyers> but again, who cares
23:01 < jmoyers> use the node
23:01 < EuroNerd> i will
23:01 < aandy> right, just get your stack working, and don't be stupid with security. basic rule of web dev
23:01 < CoverSlide> haproxy is great. but i have coworkers who wanted something quick and simple that they could have access to. broxy was easier for them to set up than haproxy
23:01 < darach> Coverslide. Broxy looks handy for dev, le snarf.
23:02 < EuroNerd> aandy, that's easier said than done. It requires some knowledge, and right now I'm putting every spare minute into learning node and writing my little app.
23:02 < niggler> is there a guide to consult?
23:03 < niggler> with, at the very least, a list of the software?  I only found out about nginx recently :/
23:03 < EuroNerd> aandy, but if you had a link to some security basics (for a node server) to avoid stupid mistakes, let me know. ;)
23:03 < jmoyers> is there a guide to the internet?
23:03 < s5fs> jmoyers: should've come on your AOL cd
23:03 < jmoyers> get me a beer, internet, you are my slave
23:03 < niggler> i wouldn't mind that either
23:04 < aandy> EuroNerd: not an aggregated list, but that's what best practices are for. for encryption discussions (and explanations) stackoverflow.com is usually a really good find
23:05 < EuroNerd> aandy, encryption of what?  For now all I'm encrypting is socket traffic with SSL. ;)
23:06 < EuroNerd> jmoyers, I'm writing an app to control the web. One server to rule them all. It has a ring structure and if it heats up a lot, you can see the secret runes: The internets are belong to us.  ;)
23:06 < aandy> my point of "simple" was just that there's some intution to the fact that you shouldn't sudo node to port (whichever), being that, if you lose control, your app has access to everything. imagine a stackoverflow or bad stringconcat parsing, resulting in a shell "rm -r /usr". if your process is sudo'ed, then chances are you're not going to like the result :)
23:07 < EuroNerd> roger that
23:07 < aandy> i was more adressing your "easier said than done" part, not your app in question :)
23:08 < EuroNerd> ok
23:09 < aandy> and yes, it is easier said than done. sites get hacked and dbs get dumped almost every day. i just think in terms of "if it was my site, today, how would i want it to pan out". hopefully my strategy involved some good PR staff ;)
23:09 <@konobi> worry about this stuff when you're deploying to production
23:10 <@konobi> more important to get the code written
23:10 < EuroNerd> konobi, yeah, it'll take some time before I have something hack-worthy... ;)
23:10 < aandy> very true. premature optimization is evil
23:11 < aandy> it will eat you up if you start to go down that road. but WHAT WOULD TWITTER DO? yeah, they probably have infinately more tweets than you have rows, so no need to buy 6 cassandra clusters and burry yourself in ec2 bills :D
23:12 <@konobi> for all you know, you could demo it to someone who will give you lots of cash and then you can hand that over to an ops guy
23:12 <@konobi> =0)
23:13 <@konobi> rightio... time for more paperwork... bbl
23:14 < aandy> konobi: insert into grid layout, infinite scroll. fun level increases by 2+
23:14 < aandy> unless it's *actual* paperwork of course
23:17 < EuroNerd> BTW, where do non-privileged ports start?  'Cuz I was thinking of using :2501 as my most important (i.e. socket) port. If you catch the reference... ;)
23:17 < s5fs> 1025?
23:17 < EuroNerd> ok
23:17 < aandy> yup
23:18 < aandy> no, sorry 1024
23:18 < aandy> can never remember if it's included or not, but should be included
23:18 < niggler> 1024 is not privileged
23:19 < niggler> 0-1023 are privileged
23:19 < s5fs> typical off-by-one error
23:20 < niggler> port 0 is magic
23:20 < aandy> can you actually listen on :0 though?
23:20 < niggler> no thats why its magic
23:20 < aandy> :)
23:21 < niggler> you can do it with socket raw
23:21 < niggler> but most wrappers interpret port 0 as a specific behavior (usually choose a free port)
23:22 < aandy> right, or in case with js libraries using options as objects, "undefined" :p
23:22 < aandy> but cool, didn't know you could actually do that. would think it'd be an OS hack if you could for some
23:22 < yarco> how to set express     req.path ?
23:23 < yarco> seems it is readable
23:23 < aandy> yarco: req.url ?
23:23 < yarco> 			req.path = '/denied';
23:23 < yarco> 			console.log('use ' + req.path);
23:23 < niggler> if you have a node server and multiple requests, are variables shared between them or do i need to use something like redis for that
23:24 < yarco> anny: oh, let me try req.url
23:24 < tjholowaychuk> yarco it's a magical getter of doom
23:24 < aandy> yarco: what are you trying to do, redirect?
23:24 < tjholowaychuk> and that problem illustrates
23:24 < tjholowaychuk> why accessors
23:24 < tjholowaychuk> suck
23:25 < tjholowaychuk> but yes there is no setter for req.path, just do req.url = whatever
23:25 < tnorris> can anyone confirm if the following functionality is standard: https://gist.github.com/3962137
23:25 < yarco> aandy: yes, but normal res.redirect is a Location: when you view it in chrome dev tool
23:25 < EuroNerd> BTW, if you allow me to put a stick into a bees nest:  How do I know NodeJitsu (or any VPS provider, for that matter) won't steal my Brilliant Ideaâ„¢? How do you protect your code? Linux disk encryption?
23:25 < tnorris> think I was able to successfully connect to the running server from both ipv4 and ipv6.
23:26 < aandy> yarco: and that's how it's suppose to be. what's your case?
23:26 < yarco> aandy: i want to make it to go to /access_denied if someone don't have permission. And no need 2nd redirect
23:26 < tnorris> but I wan't able to find documentation on this in the api.
23:27 < aandy> EuroNerd: not to help you on the paranoia, but yeah, disk encryption would be an obvious precaution, but depending on how they shut down machines, how they move them around, whether they can access memory, you'll never be completely safe
23:27 < aandy> yarco: and you'd do this *without* a redirect? not sure i follow your thinking
23:27 < aandy> a redirect *is* a Location
23:27 < yarco> aandy: for example, when visiting /abc , but the user don't have permission, so the app change the path from /abc to /access_deniedâ€¦you view the result. 
23:28 < yarco> aandy: i think it can be done without redirect
23:28 < aandy> right, that's a 302 or 301 to Location https?://.../access_denied
23:28 < aandy> ok, so you want to proxy the response?
23:28 < aandy> as in, you don't change location, but you get the /access_denied response?
23:29 < tnorris> like, if I visit http://[::1]:8234 it logs "::1", but if I visit http://127.0.0.1 it logs "::ffff:127.0.0.1". any ideas what's happening?
23:30 < yarco> aandy: it is hardly to say. i can do it in php
23:30 < aandy> can you give a php example?
23:31 < deltab> tnorris: it's using IPv6 addresses (including IPv6-mapped IPv4) for everything
23:31 < aandy> EuroNerd: and remember, code theft might not be the biggest issue. the fact that you're live, however, is. you can see netflix.com, and think, hey that's a great idea, i'll make a better netflix and win all the moneys, or you can learn that facebook exists and think, hey, i can do that better
23:32 < niggler> but sometimes code theft is a real issu
23:32 < niggler> e
23:32 < yarco> aandy: i'm not sure. i did a half done framework include such feature: https://github.com/yarcowang/icore
23:32 < tnorris> deltab: ah, so if I ran this on a server and a user that only has ipv4 wouldn't be able to access it?
23:32 < yarco> aandy: but no simple example currently
23:32 < aandy> i would never be comfortable using some stolen code. not just for moral reasons, but the jungle of using/understanding code that isn't yours... leave it for the interns, yikes
23:33 < deltab> tnorris: they would, but the IPv4 address is recorded in IPv6 format
23:33 < aandy> yarco: could you point me in the right direction here - which file am i looking at?
23:34 < tnorris> deltab: hm, interesting. I think this should be documented in the api. binding to '::' was actually a typo, but it worked.
23:35 < yarco> aandy: oh, sorry. i did't finish it yet. see:
23:35 < yarco> https://github.com/yarcowang/icore/blob/master/core/icore/Application.cls.php
23:35 < yarco> comment part
23:35 < deltab> tnorris: I may well have gotten some of that wrong; see https://en.wikipedia.org/wiki/IPv6_address
23:36 < yarco> aandy: from default:
23:37 < tnorris> deltab: i'm not sure you were. check out the section "Dotted-quat notation"
23:38 < tnorris> but unfortunately I don't understand networking well enough to know for sure.
23:38 < yarco> aandy: but req.url works. thanks
23:39 < aandy> the default is commented out. however, are you sure the request you get from your icore framework isn't a Location redirect?
23:39 < deltab> tnorris: I don't know the difference between IPv4-mapped and IPv4-compatible addresses
23:40 < tnorris> deltab: yeah, neither do I. going to post it on the mailing list to see if someone can explain what's happening.
23:41 < yarco> aandy: noâ€¦   the whole flow is:    user visit some url,   framework check the url, if the user don't have enough rights, then framework set the url to some access denied page, so you dont have to do another redirect to tell the navigator to go to another page...
23:41 < yarco> aandy: that is totally wasting time
23:42 < aandy> ah okay, so you're talking in terms of authorization, not authentication, right?. you just want to tell the user "this place is denied", not redirect to login or similar
23:43 < yarco> aandy: you could certainly set it to '/login'
23:43 < yarco> aandy: so the result is, you see  '/user/1' to view some user profile, but the website show you login page force you to login
23:44 < aandy> right, but the way that you get there is because your server responds with a Location header telling you to go to the /login page
23:44 < yarco> aandy: when using direct, the url will be also changed to /user/login
23:44 < aandy> unless you're actually clicking a link to that url
23:45 < yarco> aandy: i'm not sure you get it â€¦ :( 
23:45 < aandy> sorry, to say in another way: when i GET /user/1, i will get a response from the server
23:45 < aandy> now, if the server wants me to auth, and refuses to show otherwise, it might tell me to go to /login
23:45 < yarco> aandy: the process happen in the server itself, not between request and response
23:46 < aandy> it'll do that by sending a Location: /login, so my browser goes there. if i'm logged in and have rights, it will instead respond with the actual content i was looking for at /user/1
23:47 < aandy> so you're trying to skip two redirects and do one instead, or?
23:48 < jmoyers> er...
23:48 < yarco> aandy: maybe...
23:48 < jmoyers> its very common, and in fact semantically correct
23:48 < jmoyers> to actually send the user to /login via Location header
23:48 < yarco> yes, i think you get it
23:49 < aandy> jmoyers: short of proxying, isn't it the *only* way? (if we consider js document.location = being the same behaviour as Location: induced)
23:49 < jmoyers> well, you could actually just send down the login template.
23:49 < jmoyers> or whatever
23:49 < jmoyers> make /user/1 look like a login screen
23:49 < aandy> yeah but that'd be proxying
23:50 < jmoyers> but like i said, url should map to specific content ;P
23:50 < deltab> it's not the same: it happens at a different level
23:50 < yarco> :) guys, english is not my mother language, i can't explain more 
23:51 < aandy> deltab: how so? both tell the browser to follow, doesn't force it to?
23:51 < aandy> yarco: it's okay. i think you want to avoid using Location headers, but that it might be the right thing to do?
23:51 < deltab> http redirects happen at the http level, and will be processed by pretty much any http client
23:52 < aandy> response or request?
23:52 < aandy> because if the browser chooses to, yeah. curl/wget for instance does not (necessarily) however
23:54 < aandy> if you do want to proxy it (as in, you want /user/1 to RENDER the login page) you would put the res.render and check in the /user route logic
23:54 < aandy> but like jmoyers said, it's suggested that you redirect to /login instead
23:55 < deltab> and a script setting window.location is, I think, a navigation event, with a history entry
23:55 < aandy> okay yeah, you're right about that
23:56 < jmoyers> using javascript for that
23:56 < jmoyers> is wrong
23:56 < jmoyers> just use the location header
23:56 < aandy> but my point was that a Location: header is also a naviagtion event, as in, the browser receives it and choses to go to the url
23:56 < deltab> yeah
23:56 < deltab> well, the location header and corresponding status code
23:56 < deltab> aandy: does it give it a separate entry in history?
23:57 < aandy> no
23:57 < janmower> hey any node luminaries know about sdt.h/usdt dtrace probes?  comments/suggestions welcomed https://github.com/joyent/node/pull/4164
23:58 < aandy> remember that 301 and location is also "this has moved", so it has two meanings
23:58 < janmower> i'm looking for a way to not have to macro guard all the different sdt/usdt macro definitions for dtrace probes
--- Log closed Sat Oct 27 00:00:18 2012
