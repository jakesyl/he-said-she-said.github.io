--- Log opened Sat Oct 06 00:00:06 2012
--- Day changed Sat Oct 06 2012
00:00 < addisonj> on response?
00:00 < superjoe> addisonj, wait, you're using mikeal/request?
00:00 < addisonj> yep
00:00 < superjoe> nvm
00:35 < Slade-> with express. whats the proper way to serve the /  (index.html)  with express.static?
00:36 < superjoe> Slade-, it does that automatically if I recall correctly
00:44 < zezikaro> in nodejs can you make a variable global
00:45 < zezikaro> hm
00:45 < TehShrike> zezikaro: not across modules
00:46 < zezikaro> TehShrike what sorry?
00:46 < zezikaro> ah okay
00:46 < zezikaro> I googled and found GLOBAL
00:46 < zezikaro> But i'll ignore it
00:54 < superjoe> TehShrike, that's not true
00:54 < superjoe> I mean, you shouldn't do it, but you can.
00:54 < TehShrike> Why would anyone do that >_<
00:54 < superjoe> TehShrike, agreed.
00:54 < TehShrike> Why would you put that in the language
00:55 < TehShrike> That makes me sad
00:55 < superjoe> don't forget your `var` declarations.
00:56 < TehShrike> Well, just forgetting var won't get your variable in a scope outside your module
00:56 < TehShrike> Otherwise why would you use module.exports?
01:01 < nicholasf> I have a constructor function that I want inheriting objects to use, e.g. Base = function(one, two){}; util.inherit(Child1, Base); foo = new Child1(one, two);
01:02 < nicholasf> what's the best way to achieve this? I thought util.inherits would copy the constructor onto the inheriting prototype
01:02 < TehShrike> nicholasf: you should read about prototypal inheritance
01:02 < nicholasf> TehShrike: yeh, I have quite a bit
01:02 < nicholasf> this bit hasn't become obvious yet
01:03 < nicholasf> note, I'm not talking about inheriting behaviours *on* the prototype
01:03 < nicholasf> I'm talking about inheriting the constructor function itself
01:04 < superjoe> TehShrike, yes it will.
01:04 < holzp> anyone know a good tutorial for the route synxax for express?
01:05 < holzp> oddly hard to find
01:05 < superjoe> TehShrike, https://gist.github.com/3843316
01:05 < nicholasf> holzp: have you read the API? It spells it out there pretty much
01:06 < nicholasf> ok, so I think I have to copy the constructor itself onto inheriting objects
01:07 < holzp> im talking more about the syntax for the params embedded in the route urls
01:07 < nicholasf> ah nm, got it
01:07 < holzp> express, for all its awesomeness, is fairly sparsely documented
01:08 < TehShrike> superjoe: that makes me sad :-(
01:09 < nicholasf> TehShrike: I think I need to understand the difference between using {} and function(){}
01:09 < superjoe> TehShrike, use  jshint with syntastic and you should be good to go
01:09 < nicholasf> that was what was tripping me up
01:09 < TehShrike> nicholasf: the first is an object literal, the second is a function definition
01:09 < nicholasf> sorry, the difference between {} and new function(){}
01:10 < TehShrike> Oh, right
01:10 < nicholasf> gah, Im not making sense, clocking a few hours here
01:10 < TehShrike> Sure, you're talking about making objects via new Constructor()
01:11 < nicholasf> https://gist.github.com/779d76424b9c594cbf64 TehShrike - see BelongsTo, HasOne, etc.? I initially had them referencing an object literal - {}
01:11 < TehShrike> Versus constructing them with var myObject = {} and then adding things to it
01:11 < nicholasf> once I moved them to constructor functions things began working as expected
01:12 < nicholasf> and, it isnt
01:30 < zezikaro> is it possible to have a build script like what you can do in maven ?
01:30 < zezikaro> Like automatically run tests etc
01:32 < Slade-> in express is there a good way to debug routes?
01:32 < zezikaro> add a debugger?
01:37 < Slade-> http://nopaste.me/paste/1333988102506f8b0e11908 <-- line 17 seems to not be taking..
01:39 < Slade-> i'm not doing something bad by binding the same directory to multiple places am i?
01:45 < timeturner> anyone have experience in greping something out of a webpage with regex?
01:45 < TehShrike> lol
01:45 < TehShrike> Yes, though I'm ashamed to admit it
01:45 < timeturner> not very grep/regex svayy yet :P
01:45 < timeturner> savvy*
01:46 < TehShrike> http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454
01:46 < timeturner> whoa
01:46 < timeturner> I hope I don't start typing like that near the bottom lol
01:59 < zezikaro> does aynone know how to get zombie.js to work on windows?
01:59 < zezikaro> i get all sorts of errors
01:59 < zezikaro> npm ERR! `cmd "/c" "node-gyp rebuild"` failed with 1
02:17 < JoeDoyle23> What errors are you getting?  I just installed it on node 0.8.11 on x64 Windows with no errors
02:18 < JoeDoyle23> If you haven't already, you'll want to do 'npm install -g node-gyp'
02:40 < timeturner> anyone know if a way to include a lookahead assertion in perl regex
02:40 < timeturner> so perform the lookahead and include the actual lookahead in the output match
02:40 < timeturner> or do I have to concat all the returned matched
02:40 < timeturner> matched* manually
02:42 < niggler> you can't get the lookahead in the regex
02:42 < timeturner> I think I'll just pipe it into cat then
02:42 < niggler> you can do a lookahead assertion timeturner but you cant get the match
02:42 < timeturner> yeah
02:49 < Slade-> hmm, i mighta found a flaw in express.static :/
02:50 < deoxxa> go on
02:51 < Slade-> so I'm doing this.. 	app.get("/disc", express.static(__dirname + "\\client"));	
02:51 < Slade-> and it adds the /disc to the name of the file its trying to get
02:52 < Slade-> so http://localhost/disc tries to pull c:\app\client\disc\index.html
02:52 < Slade-> that seems inappropriate..
02:54 < Slade-> not sure the appropriate fix tho.. 
02:59 < JoeDoyle23> Are EventEmitters overkill when you only have a single listener for multiple events? Are there benefits over a callback model?  Interested to hear if anyone has any guidance.
03:00 < JoeDoyle23> Basically, should I use an EventEmitter when its always going to be a 1 to 1 pub/sub?
03:04 < Slade-> hmm think its a flaw with static actually :/
03:04 < Slade-> err
03:04 < Slade-> send
03:06 < Slade-> are there any noteworthy alternatives to express?
03:07 < timeturner> express
03:08 < niggler> how's connect?
03:08 < timeturner> more low level
03:08 < timeturner> express is sugar on top of connect
03:09 < timeturner> anyone have expertise piping a url into curl
03:09 < timeturner> I've tried and failed with no URL specified
03:09 < timeturner> curl -d - doesn't seem to work
03:10 < timeturner> s/expertise/experience
03:12 < Raynos> slade: github.com/routil
03:31 < aMoniker> if I have a file that creates a socket.io server and sets it as exports.io, every file that requires it will generate a new server instead of using a single instance, right?
03:45 < aMoniker> ok, I'm sending an event from the client using socket.io
03:46 < aMoniker> socket.emi('my event', data);
03:46 < aMoniker> I can see this on the server when I listen for socket.on('my event')
03:46 < aMoniker> but not when I listen for socket.on('message')
03:46 < aMoniker> socket.io docs seem to indicate that 'message' is a generic handler for all messages
03:46 < aMoniker> is this not the case?
03:48  * Slade- checks it out
03:50 < aMoniker> okâ€¦ so emit() is for custom events and send() is for generic 'message' events it looks like
03:50 < aMoniker> so there's no generic handler that I can route from I guess..
03:51 < mscdex> gotta pick a convention!
03:51 < aMoniker> it seems like I'll have to require() everything inside the socket.on('connection') callback
03:51 < aMoniker> and then pass it the socket var
03:52 < aMoniker> I'd rather just require those files elsewhere and have them use the same io object
03:53 < mscdex> niggler: i tried node-ncurses on freebsd and it works just fine like on linux there, weird stuff
03:53 < niggler> i assume mscdex that there are issues with osx
03:53 < niggler> or possibly the lion default (not upgraded from snow leopard) terminfo
03:53 < mscdex> right, but i thought maybe being based on freebsd that they might share the problem
03:54 < mscdex> niggler: node-ncurses uses the bundled terminfo
03:54 < aMoniker> oh, wait
03:55 < aMoniker> require() automatically caches everything?
03:55 < mscdex> i even tried node-ncurses when it was bundling ncurses 5.8 yet and that had the same result on osx
03:55 < aMoniker> so if I require a file that opens a socket.io connection and exports it
03:55 < mscdex> aMoniker: yes, require caches
03:55 < aMoniker> ah ok, so exporting that connection won't open up more when I require more than once
03:55 < aMoniker> ok, that solves my problem :)
03:56 < mscdex> aMoniker: well, it depends on what your module is doing...
03:56 < aMoniker> mscdex: I'd just like to have one file open up a socket.io connection, then export it
03:56 < mscdex> aMoniker: it just "compiles" the module and saves it in memory
03:56 < aMoniker> so other files can listen on events
03:59 < jmoyers> substack for fleet, is a hub a one to one relationship to a github repository (meaning if you have 3 different service types, you'd have three hubs)?
04:05 < niggler> mscdex: i tried with a vanilla machine (osx 10.7) and still see the truncated version using xterm and using iterm2
04:05 < niggler> when you said you got it to work on osx did you have to replace terminfo?
04:06 < mscdex> no i didn't get it working on osx, it was working on freebsd
04:07 < niggler> ah freebsd != osx iirc
04:07 < niggler> sorry i thought you said osx
04:07 < mscdex> it's not, but it's based on freebsd
04:07 < mscdex> sometimes you'll see the problem in both places because of that
04:07 < niggler> is it based off of freebsd or a different BSD variant?
04:07 < mscdex> pretty sure it's freebsd
04:09 < mscdex> it's so weird.... it's almost like it's osx's core c library that's linking with that's causing the problem or something
04:09 < mscdex> *it's linking with
04:10 < mscdex> i'm almost out of ideas to try
04:10 < niggler> i dont think its uniformly freebsd
04:10 < niggler> "
04:10 < niggler> Darwin is made up of code from: FreeBSD, NetBSD and 4.4BSD Lite2."
04:11 < niggler> mscdex: im gonna fuck with the module and see if there are build issues
04:11 < niggler> but if i want to test a local version, how do i do it?
04:11 < niggler> assuming i clone your code, and its in a directory, how do i get node to use that local version as opposed to the global one
04:13 < mscdex> niggler: it should automatically use the local version if it's the closest (e.g. there isn't a node_modules with node-ncurses in an ancestor directory)
04:14 < mscdex> otherwise you can do what i've been doing, plop the test js file in the module dir itself and do a require('./index')
04:17 < mscdex> i even compared diffs of full ncurses' own internal trace logs
04:17 < mscdex> and i don't see what is the difference
04:26 < niggler> mscdex: is src/binding.cc or ncurses.cc used?
04:27 < mscdex> src/binding.cc
05:10 < Nuck> is comparing size & mtime a reasonable way to check if a file has been modified for purpose of caching?
05:11 < jmoyers> Nuck why not sha1?
05:11 < astropirate> or md5
05:11 < astropirate> :O
05:12 < jmoyers> i love when i need a piece of code i wrote a year ago, and i literally can't understand it, since i was hacking away and did not write any comments
05:12 < niggler> fuck md5
05:13 < niggler> one thing that pisses me off to no end is that the binary to do an md5 sum is called "md5sum" in linux and "md5" on macs
05:13 < jmoyers> symlink and never think about it again?
05:13 < astropirate> niggler, create an alias
05:13 < astropirate> :S
05:14 < niggler> then i have to do it whenever i set up a new machine etc etc
05:14 < astropirate> that is the price you must pay for being OCD
05:17 < Nuck> jmoyers: Hashing takes time, and I'm a lazy bastard :D
05:18 < Nuck> I'm not comparing the contents, just seeing if they've modified
05:18 < Nuck> And I can't think of a reason why mtime or size wouldn't change with an edit
05:18 < jmoyers> yeah, well
05:18 < jmoyers> hashing is foolproof imo
05:18 < jmoyers> mtime and size are not
05:19 < Nuck> Certainly
05:19 < jamesd> Nuck, rapid changes or someone changing the mtime back to a previous value. 
05:19 < Nuck> Is there some "standard" for file caching?
05:19 < Nuck> jamesd: size will change in both cases, generally
05:20 < Nuck> And jmoyers, hashing is never foolproof
05:20 < jmoyers> ?
05:20 < Nuck> Statistically speaking, there WILL be collisions
05:20 < jmoyers> one value, based on contents
05:20 < jmoyers> haha dude
05:20 < jmoyers> whats your dataset size?
05:20 < Nuck> :P
05:20 < Nuck> jmoyers: 3 files :D
05:20 < jamesd> Nuck, worse case senario,  someone changed a character, so no time change.   setting mtime to a previous value  file hasn't been edited, and its possible that mtime updates are turned off 
05:20 < jmoyers> oh yea, sure, collisions
05:20 < jmoyers> hahahaha
05:21 < Nuck> jmoyers: Still not foolproof technically
05:21 < Nuck> Talking about edgecases like mtime not updating, hash collisions
05:21 < jmoyers> far less error prone than meta data
05:21 < jmoyers> but hey, thats just my opinion
05:22 < Nuck> I'll probably switch to MD5 simply because
05:23 < jmoyers> Nuck is this for etags or are you storing stuff on disk?
05:23 < jmoyers> if its disk, guy who used to work for me wrote https://github.com/focusaurus/writers-digest
05:24 < Nuck> Not really either
05:24 < Nuck> I'm doing something similar to etags, though
05:25 < Nuck> I'm caching compiled templates in memory, but if the file's changed on disk I want to update it
05:25 < Nuck> But it's not for HTTP
05:25 < Nuck> It's email templates
05:25 < jmoyers> got it
05:25 < jmoyers> yeah, i'd like a general purpose template compiler
05:25 < jmoyers> the one i've seen are usually linked to a particular library
05:27 < Nuck> Wat?
05:27 < Nuck> No
05:27 < Nuck> I'm an email sending lib
05:27 < Nuck> IDGAF about template compiling
05:27 < Nuck> I let Express do it on the fly and cache in RAM
05:27 < jmoyers> ha
05:27 < jmoyers> what i said is slightly orthogonal
05:28 < jmoyers> but, if you're doing a client side app, express template caching is not what you want
05:28 < jmoyers> its something like templatizer
05:29 < Nuck> I'm building an email-sending lib which basically wraps an email sending system and a template engine and provides a way of storing email templates in an engine-agnostic fashion in a single file with subject, HTML, and Text
05:29 < Nuck> I'm still not sure what to name it, so if you have any ideas, please tell me ;)
05:30 < Nuck> Both email sending and template engine are replaceable (but default to Handlebars and Postmark)
05:31 < Slade-> express.static not clipping out the route is pretty disapointing :(
05:31 < jmoyers> ?
05:32 < Slade-> so this  app.get("/disc", express.static(__dirname + "\\client"));	   and i go to http://localhost/disc tries to pull c:\app\client\disc\index.html
05:32 < jmoyers> uh
05:32 < jmoyers> thats not how you do that in 3.0 anyway
05:33 < jmoyers> pretty sure its app.use(route, express.statc...
05:33 < jmoyers> then it works like you want.
05:33 < Slade-> hmm, is get legacy or something?
05:33 < jmoyers> no
05:34 < jmoyers> get has all manner of routing features
05:34 < jmoyers> but i haven't seen it used with the static module.
05:35 < jmoyers> its called 'mounted middleware'
05:35 < Slade-> hm interesting, that works :)
05:36 < Slade-> been trying for a few hours debugging that to figure out the problem :P
05:36 < _Tristan1> http://pastebin.com/vq4csTB1 This crashes: cannot find module 'jade'. Jade is installed, both express and jade are at their latest versions and work. Did I do something wrong?
05:37 < Slade-> someone had told me its bad just to do 'sendfiles' and to use static instead
05:37 < Slade-> maybe it was use
05:37 < Slade-> you
05:37 < jmoyers> middleware in a normal get/post/put/delete route doesn't strip out route itself
05:37 < jmoyers> well its not *bad*
05:37 < jmoyers> its just easier to use static.
05:37 < jmoyers> it also does basic '..' style path traversal protection and such
05:38 < Slade-> yea i was doing that in the regex
05:45 < jmoyers> _Tristan1 does app.engine('jade', require('jade').__express); work?
05:45 < _Tristan1> yes
05:46 < jmoyers> well there you go.
05:47 < ashnur> morning
05:47 < mscdex> night
05:47 < mscdex> :-D
05:54 < Slade-> jmoyers: hmm use isnt quite right either
05:55 < Slade-> hmm maybe it is..
05:56 < Slade-> nope its not quite right :/
05:56 < gildean> jmoyers: app.set('view engine', 'jade');
05:56 < gildean> and then add app.locals.pretty = true;
05:57 < gildean> if you want the html not to be in one string
05:57 < jmoyers> huh?
05:57 < gildean> the output
05:57 < jmoyers> i was answering someone else's question.
05:58 < gildean> jmoyers: sorry, i didn
05:58 < gildean> bother to read the scrollback :D
05:59 < fnc> hi...anyone using mongo on nodejitsu?
06:00 < gildean> fnc: iirc they had problems with some particular version, you might need to try a different version of the driver
06:01 < gildean> they just talked about it not two days ago on #nodejitsu
06:01 < fnc> well it's working fine
06:02 < fnc> i'm trying to sorta tail oplog but i'm afraid we have no fs access to mongohq from nodejitsu
06:24 < _Tristan1> anybody know how I can get express to only listen on the loopback interface? That is, not allow other computers to connect?
06:26 < Nuck> Does Node's HTTP server allow that?
06:26  * Nuck doesn't remember
06:26 < SomeoneWeird> _Tristan1, .listen(port, ip_of_loopback)
06:26 < _Tristan1> so, 126.0.0.1
06:26 < _Tristan1> ?
06:26 < Oddman> phwoar nice
06:26 < Nuck> 127
06:26 < _Tristan1> sorry, 127.0.0.1
06:27 < Nuck> Fuck it I'm sick I can't partake in logical conversations.
06:27 < wookiehangover> you can check req.connection.remoteAddress
06:27 < niggler> lol _Tristan1 
06:27  * Nuck scampers off
06:27 < niggler> 126.0.0.1 
06:28 < Nuck> Technically
06:28 < Nuck> 127.x.x.x IIRC
06:28 < _Tristan1> I actually tried to type 127 three times, then gave up
06:29 < wookiehangover> unless you have a das keyboard, that's unacceptable
06:30 < _Tristan1> I do have a das keyboard
06:30 < wookiehangover> but for reals just check req.connection.remoteAddress
06:30 < wookiehangover> pics or it didnt happen
06:30 < wookiehangover> also, me too
06:30 < _Tristan1> if I can't type 7, I definitely can't find my camera.
06:31 < Oddman> heh
06:31 < Nuck> das keyboard, not to be confused with DOS keyboard
06:31 < Nuck> _Tristan1: Is it under your 7 key?
06:32 < wookiehangover> "none more black" http://cl.ly/image/1s141h0t1n2N
06:32 < niggler> those keyboards suck
06:32 < Nuck> ^
06:33 < Nuck> my keyboard is gladly backlit
06:34 < wookiehangover> backlighting is for children and war-widows
06:34 < _Tristan1> and laptops
06:34 < pyrotechnick> generalising is for the ignorant.
06:35 < pyrotechnick> you can't argue taste
06:35 < Nuck> Ignorance is for the generals.
06:35 < pyrotechnick> true
06:36 < Nuck> I wish I could name this lib the next thing that popped into my head, but then it'd be "Dicktits"
06:36 < Nuck> And I don't think many people will want to require('dicktits')
06:37 < _Tristan1> I thought we agreed on... what was it... hedgepodge?
06:37 < wookiehangover> how about 'butthurt'
06:37 < Nuck> _Tristan1: It was HodgePodgeon, but it turns out pidgeon is actually pigeon and HodgePigeon looks weird
06:38 < Nuck> My sick brain do good smarts.
06:38 < _Tristan1> it was hodgepigeon all along, you just spelled it wrong
06:38 < Nuck> Shhhhh
06:39 < Nuck> _Tristan1: Plus it made me think of John Hodgman
06:39 < _Tristan1> what does the lib do again?
06:39 < Nuck> _Tristan1: Email templating, essentially
06:39 < niggler> Nuck: wtf are dicktits?
06:39 < Nuck> niggler: Fuck if I know, I'm sick both in mind and body.
06:39 < _Tristan1> I think they may be related to dick nipples
06:39 < _Tristan1> dicknipples.shitting()
06:40 < Nuck> Something like that
06:40 < niggler> ive adopted the phrase "mandingo'd
06:40 < niggler>  
06:40 < niggler> so for example, shareholders of ZNGA were mandingod yesterday
06:41 < niggler> because butthurt doesnt quite express the pain
06:41 < Nuck> Fandango?
06:41 < _Tristan1> I think you should call it eric.
06:42 < Nuck> _Tristan1: haha I should just name all my libs like children
06:42 < _Tristan1> exactly.
06:42 < Nuck> I already have Travis
06:42 < _Tristan1> I know a guy named eric, and he's responsible for something like 10% of all minor internet memes
06:42 < Nuck> DOING IT.
06:42 < niggler> what's this lib for/
06:42 < niggler> Nuck: im sure we can find a relevant name
06:42 < Nuck> niggler: Email templating that doesn't suck.
06:42 < Nuck> niggler: Fuck relevance, eric is an amazing name.
06:42 < _Tristan1> niggler: subject+html+text+mustaches in one file
06:43 < niggler> emplates
06:43 < Nuck> I should just buy a Big Book Of Baby Names
06:43 < Nuck> And start taking from that
06:43 < _Tristan1> eric isn't taken on npm
06:43 < niggler> then you need a backronym
06:43 < _Tristan1> Erotic Robust Intergalactic Cunts.
06:43 < Nuck> _Tristan1: THIS.
06:44 < niggler> what's an intergalactic cunt
06:44 < _Tristan1> npm install eric and find out.
06:44 < Nuck> I'm laughing so hard snot is flying out my asshole
06:44 < Nuck> don't question it, just accept it
06:45 < niggler> look
06:45 < niggler> lets say one day
06:45 < niggler> a real business wants to use your module
06:45 < niggler> how is that person going to explain this
06:45 < Nuck> niggler: I'm a real business and I'm using it.
06:45 < Nuck> niggler: How do they explain the name of Ruby?
06:45 < Nuck> Rails?
06:45 < _Tristan1> I own a real business and I'd consider it
06:45 < Nuck> Node?
06:46 < niggler> someone googles
06:46 < niggler> and doesnt see "Erotic Robust Intergalactic Cunts"
06:46 < Nuck> _Tristan1: Check your wallet, are you sure?  I think you might be working in monopoly money
06:46 < _Tristan1> Nuck: Bitch I could buy you.
06:46 < Nuck> _Tristan1: Yeah and Park Place.
06:47 < niggler> fuck park place
06:47 < niggler> marvin gardens 
06:47 < Nuck> Marvin The Martian
06:47 < _Tristan1> fuck nuck, he's a thimble.
06:47 < niggler> *marven gardens
06:47 < Nuck> I AM NOT A THIMBLE WHAT THE FACK
06:47 < Nuck> I am a plastic hotel, TYVM
06:47 < _Tristan1> you said I could buy you and park place
06:47 < _Tristan1> THEREFORE THIMBLE EOF
06:47 < Nuck> _Tristan1: Here, stick your finger in me if you think I'm a thimble
06:48  * Nuck bends over
06:48 < _Tristan1> k, I'm gonna go now.
06:48 < Nuck> That's what I thought
06:48 < niggler> this is going to make for some great reading in a court room one day
06:48 < Nuck> niggler: hahaha
06:48 < niggler> actually happened
06:49 < Nuck> What's the court case about?
06:49 < _Tristan1> no court case on my end, my shit is encrypted.
06:49 < Sven_vB> spoiler: "das" is an article, so pros rather not put an "a" before das Keyboard. and write it capitalized. ;P
06:49 < niggler> lemme see if its on google
06:49 < niggler> http://www.scribd.com/doc/63606232/Citadel-vs-Yihao-Ben-Pu
06:49 < Nuck> _Tristan1: Your feces are encrypted?
06:49 < niggler> page 8, paragraph 27
06:50 < niggler> it reproduces an SMS msesage
06:50 < Sven_vB> also, my npm cant find eric :<
06:50 < Nuck> Sven_vB: That will be fixed as soon as I finish this
06:50 < niggler> "Ben, y u gotsta go and hax0rz everyonez mainframes ..."
06:50 < niggler> i wish i were making this up
06:50 < _Tristan1> Nuck: See, it is a good name. The blackronym is a HOOK.
06:50 < niggler> Nuck: so the case involves a person stealing stuff from a firm
06:51 < _Tristan1> a firm what?
06:51 < niggler> oh firm = company
06:51 < _Tristan1> extra firm tofu? Firm buttocks?
06:51 < niggler> like law firm
06:51 < _Tristan1> the plaintiff was in very firm company, certainly
06:51 < Nuck> "hahahaha
06:51 < Nuck> "Ben, y u gotsta go and haxOrz [hackers] everyonez mainframes..."
06:51 < niggler> so its very well possible that your asinine name could show up
06:52 < Nuck> _Tristan1: blackronym?
06:52 < _Tristan1> the text is black, it's a blackronym
06:52 < niggler> blackronym is a portmanteau
06:52 < niggler> o
06:52 < niggler> f
06:52 < niggler>  
06:52 < niggler> black and backronym
06:52 < _Tristan1> add some blackface and it'll be better
06:52 < Nuck> _Tristan1: No, the text is white
06:52 < Nuck> niggler: Can you portmonteau portmontaeus?
06:52 < Nuck> Is that legal?
06:52 < niggler> portmanteau
06:53 < SomeoneWeird> wat is dis
06:53 < niggler> its french
06:53 < niggler> so the plural is portmanteaux
06:53 < niggler> damn french
06:53 < _Tristan1> well, if tugboats played rugby it would be tugby, which would be a sportmanteau.
06:54 < niggler> tugby sounds like a really strange sexual act
06:54 < Nuck> portmonDOUCHE
06:54 < niggler> synecdoche?
06:54 < Nuck> Symantec?
06:55 < niggler> fuck symantec
06:55 < Nuck> Salmontech
06:55 < niggler> at this stage im convinced they generate many of the viruses and malware
06:55 < Nuck> niggler: No, it's obviously Isreal
06:55 < Nuck> DUH.
06:55 < _Tristan1> wouldn't it be funny if gmail was responsible for a good deal of the spam
06:55 < _Tristan1> it'd explain why they're so good at filtering all of it
06:56 < Nuck> haha
06:56 < Nuck> I love my Gmail spam filters so much
06:56 < dragon> I think we need a moderator.
06:56 < Nuck> Hm?
06:56 < Nuck> dragon: What for and where?
06:56 < dragon> idk, thought something was off.
06:56 < _Tristan1> what, to prevent off-topic discussion? Remember that time when everybody was an operator for like a week?
06:56 < niggler> ladies, calm down
06:57 < Nuck> _Tristan1: Good times.
06:57 < dragon> maybe it's just vuja de.
06:57 < niggler> we arent talking about typescript
06:57 < niggler> nigglerbot isnt running
06:57 < Nuck> Dart.
06:57 < Nuck> Let's discuss Node.dart
06:57 < SomeoneWeird> lol.
06:57 < niggler> nodart
06:57 < Nuck> nude art?
06:57 < geNAZt> hi
06:57 < niggler> a portmanteau of node and dart
06:57 < Nuck> I can discuss that
06:57 < Nuck> niggler: PORTMONSHUTTHEFUCKUP
06:57 < niggler> nuck fode
06:57 < niggler> h
06:58 < niggler> o
06:58 < niggler> w 
06:58 < niggler> 
06:58 < niggler> 
06:58 < niggler> about that
06:58 < niggler> wow colloquy is gay
06:58 < Nuck> VERY
06:58 < niggler> every once in a while it sporadically sends every character i type as a separate message
06:58 < Nuck> Which is why I use weechat
06:58 < Nuck> So I can play with my wee
06:58 < _Tristan1> incoming intergalactic cunts
06:58 < niggler> incumming intergalactic cunts
06:58 < jesusabdullah> watch your language
06:58 < niggler> FTFY
06:58 < Nuck> jesusabdullah: Espanol?
06:59 < jesusabdullah> à² _à² 
06:59 < Sven_vB> would node.darf be on deviant.art ;D
06:59 < Nuck> jesusabdullah: Francais (we were just using that a while ago)
06:59 < niggler> jesusabdullah: francais?
06:59 < Sven_vB> *dart
06:59 < Nuck> :D
06:59 < _Tristan1> I was simply referring to the popular library, ERIC
06:59 < Nuck> jesusabdullah: Deutsch?
06:59 < jesusabdullah> à² _à² 
06:59 < niggler> deutsche
06:59 < niggler> s
06:59 < niggler> sprecken des deutsche
06:59 < Nuck> niggler: Yes, I would like sprinkles on my ice cream
06:59 < _Tristan1> viva la mutterkuchen.
06:59 < mscdex> matlab!
07:00 < niggler> fuck matlab
07:00 < Nuck> node.matlab
07:00 < Nuck> let's do this
07:00 < Nuck> Or better yet
07:00 < jesusabdullah> was playing with R earlier today
07:00 < niggler> both matlab and octave are broken languages
07:00 < Nuck> Node.Turtle
07:00 < Nuck> An implementation of Node.js for Turtle.
07:00 < mscdex> RT 90
07:00 < niggler> R makes baby jesus cry
07:00 < Sven_vB> we need maxima bindings
07:00 < Nuck> TypeScript killed baby jesus
07:00 < niggler> fuck typescript
07:01 < Sven_vB> also, MSIE6 emulation for faster domjs
07:01 < niggler> first, let me say that most bloggers who commented on typescript
07:01 < niggler> HAVENT ACTUALLY USED IT FOR ANYTHING
07:01 < Sven_vB> s/6/4/
07:01 < niggler> its all visceral reaction 
07:01 < Nuck> niggler: I haven't used it for anything
07:01 < Nuck> And I don't plan to
07:01 < niggler> now having tried it for something real, typescript has some severe problems
07:01 < niggler> certain ambiguities in the grammar
07:01 < Nuck> I might use it if I weren't so opposed to compilation
07:02 < mscdex> we need to port node to qb64
07:02 < niggler> other quirks which confuse the semantics of javascript
07:02 < Nuck> mscdex: Node.cobol
07:02 < _Tristan1> node.haskell
07:02 < mscdex> node.ada
07:02 < _Tristan1> haskelliarmus!
07:02 < Nuck> luajit
07:02 < Sven_vB> node.lisp
07:02 < niggler> node.fortran
07:02 < niggler> c
07:02 < niggler> o
07:02 < niggler> me o
07:02 < niggler> n kids
07:02 < niggler> we need an f2js
07:02 < Sven_vB> node.node.js
07:02 < Nuck> co me o n kids
07:03 < niggler> colloquy is gimp
07:03 < Nuck> node.asm
07:03 < mscdex> node.pas
07:03 < niggler> but adium slows my computer to a crawl
07:03 < niggler> node.bas
07:03 < Sven_vB> node.chef
07:03 < mscdex> node.bat
07:03 < niggler> node.bfuck
07:03 < Nuck> node.make
07:03 < _Tristan1> node.ice
07:03 < niggler> no dice
07:03 < Sven_vB> node.cpp
07:03 < mscdex> node.sh
07:03 < Nuck> node.canhazcheezburger
07:03 < Nuck> niggler: --> Weechat
07:03 < mscdex> node.com
07:04 < Nuck> node.pem
07:04 < niggler> weedchat?
07:04 < Sven_vB> node.minecraft
07:04 < Sven_vB> with pistons
07:04 < Nuck> niggler: Yes, where the IRC is stoned
07:04 < Nuck> Node.java
07:04 < Nuck> Now with 99% more classes
07:04 < _Tristan1> prepare to be afraid... node.net
07:04 < geNAZt> node.mono
07:04 < mscdex> node.java
07:04 < Nuck> -abstractsingletonproxyfactorybean
07:04 < purr> Nuck: AbstractSingletonProxyFactoryBean is BESTSINGLETONPROXYFACTORYBEAN <http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html>
07:04 < Nuck> :D
07:05 < mscdex> !
07:05 < Nuck> I love Java
07:05 < Nuck> ;D
07:05 < mscdex> you're in the wrong channel Nuck
07:05 < niggler> do a quick back of the envelope calculation
07:05 < Nuck> mscdex: This is the room for scripting in Java, right?>
07:05 < niggler> how many manhours were wasted typing "public static void main"
07:05 < mscdex> Nuck: a common misconception
07:06 < Nuck> mscdex: But I need Node.js to make my AsyncAbstractSingletonProxyFactoryBeanGenerator :C
07:06 < mscdex> how many manhours were wasted typing out package namespaces
07:06 < _Tristan1> how many man hours were wasted sitting in front of a computer that you can't take with you when you die.
07:06 < niggler> upwards of 2M
07:06 < _Tristan1> which will happen. Soon.
07:07 < Nuck> _Tristan1: I believe in the egyptian thing
07:07 < _Tristan1> slavery?
07:07 < mscdex> pyramids?
07:07 < niggler> hand in hand
07:07 < Nuck> If I get buried with my laptop, get my internal organs removed and stored in jars, and preserved freakily, then I'll keep my laptop after I'm dead
07:07 < niggler> without slavery there would be no pyramids
07:07 < mscdex> pictures on walls?
07:08 < niggler> without federal backdeals with the bush administration, there'd be no romneycare
07:08 < jmoyers> whoa @ brackets
07:08 < jmoyers> wild features, and from adobe no less.
07:08 < _Tristan1> fun fact: There's no evidence of slaves building the pyramids, unless you count *cough* the biblre
07:08 < _Tristan1> bible*
07:08 < Sven_vB> also, node.ps
07:08 < niggler> you see _Tristan1 the bible is an important historical document
07:08 < niggler> without it, i wouldn't know that adam was the first man
07:09 < mscdex> node.asp
07:09 < niggler> or that one should love thy neighbor
07:09 < mscdex> node.frm
07:09 < Nuck> The bible is all facts.
07:09 < mscdex> node.mod
07:09 < Sven_vB> unless your neighbor has same gender
07:10 < Nuck> Earthwas made in 7 days
07:10 < mscdex> node in vb6!
07:10 < geNAZt> node.lolcode
07:10 < Nuck> and I can enslave my neighbors
07:10 < geNAZt> http://en.wikipedia.org/wiki/LOLCODE
07:10 < niggler> Sven_vB: i didnt see anything in the bible precluding that
07:10 < Nuck> http://projects.haykranen.nl/java/ I love this thing.
07:11 < niggler> WrapperIteratorDispatcherOrderStatementInvocationContext
07:11 < Nuck> PropertyWorkerBroadcasterDecoratorDecorator
07:11 < niggler> what's a decoratordecorator?
07:11 < Nuck> niggler: It's for decorating decorators
07:11 < Nuck> In case your applet isn't pretty enough
07:11 < medice> should really use a factory for that
07:12 < niggler> decorating factories of decorators?
07:12 < niggler> o
07:12 < niggler> or factories of decorators of decorators
07:12 < niggler> lol we need a cdecl for java names
07:12 < Nuck> cdecl?
07:12 < Nuck> haha
07:12 < niggler> it takes a c declaration and gives you a human readable version
07:13 < niggler> http://www.cdecl.org/
07:13 < niggler> it should be on your linux box
07:14 < niggler> for example
07:14 < niggler> in C++
07:14 < medice> c gibberish sometimes makes my puny brain hurt
07:14 < niggler> const is fun
07:14 < niggler> so if you have a pointer
07:14 < niggler> i
07:14 < niggler> int *p
07:14 < niggler> there are actually 3 different types of constness
07:14 < niggler> int const * p
07:14 < niggler> int * const p
07:14 < niggler> int const * const p
07:15 < niggler> and they refer to different parts being const (either the pointer or the pointee)
07:15 < niggler> but that's C++ and not C
07:15 < Nuck> Motherfuck I keep snarting.
07:55 < fo10> hi all
07:55 < niggler> its 4 AM why are we up
07:56 < fo10> it's morning here :)
07:56 < geNAZt> cause its 10 am :D
07:56 < niggler> ah 
07:56 < geNAZt> and node keeps me awake
07:56 < geNAZt> cause i think a have a bug -_-
07:57 < fo10> sorry all i have run into problems in the install
07:57 < fo10> total newbie here
07:57 < geNAZt> what a install ?
07:57 < fo10> i installed the package from node.js initially
07:57 < fo10> and then homebrew etc
07:58 < fo10> so basically there is some confusion going on
07:58 < fo10> i wanted to ask 2 things
07:59 < fo10> 1 where are the installed files of node js ( for manual removal)
07:59 < fo10> and is that a good idea?
07:59 < niggler> 1) try running `which node` -- should be in /usr/local/bin and /usr/local/lib
08:00 < fo10> i tried that 
08:00 < fo10> i get node not found
08:00 < niggler> so node isnt on path
08:00 < niggler> did you set the path variables?
08:00 < geNAZt> Unexpected token a   JSON: {"type":"rpc","data":{"rpcID":"31876f90-0f86-11e2-ae61-9967f69f68ef","from":"websocket","rpcFunction":"sessions.getSession","args":"a830e2d0-0d5a-11e2-b656-8fcdfb9a58f7"}} 
08:00 < geNAZt> why oO
08:00 < niggler> the default location
08:00 < niggler> >>> JSON.parse('{"type":"rpc","data":{"rpcID":"31876f90-0f86-11e2-ae61-9967f69f68ef","from":"websocket","rpcFunction":"sessions.getSession","args":"a830e2d0-0d5a-11e2-b656-8fcdfb9a58f7"}}')
08:00 < purr> niggler: (object) {data: {args: 'a830e2d0-0d5a-11e2-b656-8fcdfb9a58f7', from: 'websocket', rpcFunction: 'sessions.getSession', rpcID: '31876f90-0f86-11e2-ae61-9967f69f68ef'}, type: 'rpc'}
08:00 < fo10> yes i did
08:01 < fo10> i think so at least
08:01 < niggler> geNAZt: i have no clue what you are doing
08:01 < geNAZt> i build a json from function arguments
08:01 < niggler> because if it is exactly as you said, JSON.parse works fine
08:01 < geNAZt> and nodejs says its invalid
08:01 < geNAZt> but the v8 ( chrome ) says its okay
08:01 < geNAZt> i have no idea why
08:01 < niggler> fo10:  so check /usr/local/bin for some files
08:02 < niggler> node node-waf node-gyp
08:02 < niggler> and then check /usr/local/include
08:02 < fo10> i did but would it be a good idea to remove them?
08:02 < niggler> and /usr/local/lib
08:02 < niggler> if it has node on it its fine
08:02 < niggler> dont nuke anything else though
08:03 < fo10> ok so only files which contain the word node?
08:03 < niggler> geNAZt: what version of node?
08:03 < geNAZt> 0.8.11
08:03 < fo10> thanks alot!
08:03 < niggler> > JSON.parse('{"type":"rpc","data":{"rpcID":"31876f90-0f86-11e2-ae61-9967f69f68ef","from":"websocket","rpcFunction":"sessions.getSession","args":"a830e2d0-0d5a-11e2-b656-8fcdfb9a58f7"}}')
08:03 < niggler> { type: 'rpc',
08:03 < niggler>   data: 
08:03 < niggler>    { rpcID: '31876f90-0f86-11e2-ae61-9967f69f68ef',
08:03 < niggler>      from: 'websocket',
08:03 < niggler>      rpcFunction: 'sessions.getSession',
08:03 < niggler>      args: 'a830e2d0-0d5a-11e2-b656-8fcdfb9a58f7' } }
08:03 < niggler> i should have pastebinned that
08:03 < niggler> b
08:03 < niggler> ut 
08:03 < niggler> a
08:03 < niggler> nyway
08:03 < niggler>  it works fine
08:03 < geNAZt> y i know
08:03 < niggler> are you sure that s the *exact* code
08:03 < geNAZt> but in node i get the exception
08:03 < niggler> that's from node
08:03 < niggler> i
08:04 < niggler>  
08:04 < niggler> j
08:04 < niggler> ust 
08:04 < niggler> ran node
08:04 < geNAZt> http://www10.pic-upload.de/06.10.12/oy353vbffv9.png
08:05 < fo10> sorry one more thing: is xcode 4.5 only available in osx mountain lion? or do you have to register in mac dev?
08:05 < ljharb> only in mountain lion. i don't think you have to be a mac dev
08:05 < geNAZt> http://pastebin.com/Psxtgyzw
08:05 < fo10> oh ok..
08:06 < fo10> this stuff is confusing
08:06 < fo10> thnks
08:06 < niggler> actually geNAZt are you sure that the segment is the thing tripping up the parser?
08:06 < niggler> or is it some other line that isnt displayed
08:06 < geNAZt> no
08:07 < geNAZt> in the catch i print the current temp segment
08:07 < geNAZt>  this._in.write( JSON.stringify( { 'type': 'rpc', 'data': { 'rpcID': rpcID, 'from': from, 'rpcFunction': rpcFunction, "args":args} } ) + "\n" );
08:07 < geNAZt> into
08:07 < geNAZt>  this._in.write( JSON.stringify( { 'type': 'rpc', 'data': { 'rpcID': rpcID, 'from': from, 'rpcFunction': rpcFunction, "args":JSON.stringify( args )} } ) + "\n" );
08:07 < geNAZt> works fine
08:07 < geNAZt> oO
08:08 < niggler> stringify should be recursive
08:09 < geNAZt> y it should
08:09 < geNAZt> but then i get an json like
08:09 < geNAZt> "args":"\"theargs\""
08:09 < geNAZt> and json.parse says its okay
08:10 < geNAZt> the json created by json.stringify is correct
08:10 < geNAZt> it can be parsed by json.parse in chrome
08:10 < geNAZt> but not in node.js
08:10 < geNAZt> which should be the same
08:10 < niggler> can you find a segment which doesnt run in node?
08:11 < niggler> because if what you sent is the segment, it works fine
08:11 < geNAZt> mom
08:11 < geNAZt> i get the buffer from the string
08:11 < geNAZt> maybe there is a byte that shouldnt be there
08:12 < niggler> http://imgur.com/82Cs2
08:12 < niggler> thats what i see
08:13 < ljharb> geNAZt: rpc? really?
08:13 < geNAZt> y
08:14 < ljharb> ugh
08:14 < ljharb> rest ftw.
08:15 < geNAZt> y for ipc rest is the best -_-
08:18 < fo10> just to get the bigger picture here: if i setup node with a db ( eg couchdb) could i start working on a web app on my mac?
08:19 < jmoyers> sure.
08:19 < niggler> you could do that with the builtin php server
08:20 < jmoyers> ..
08:20 < niggler> *php/apache setup
08:20 < niggler> " if i setup node with a db ( eg couchdb) could i start working on a web app on my mac?"
08:21 < jmoyers> why would you suggest php/apache?
08:21 < fo10> the thing is - i have very little knowledge of php - but kind of decent knowledge of js
08:21 < jmoyers> in a node channel ;-)
08:21 < fo10> front end dev here :P
08:21 < jmoyers> there's a built-in http library
08:21 < niggler> the phrase suggested that fo10 didnt decide on a language yet
08:21 < jmoyers> starting a server is 3 lines of code
08:22 < fo10> no i just wasnt sure if this could be the correct approach
08:22 < fo10> but id rather not invest time into learning php if there is a pure js solution
08:23 < jmoyers> yes, you don't need anything else frankly. a browser, node executable
08:23 < jmoyers> optionally a database
08:23 < fo10> ok cool
08:30 < jammsen> is there a sql database that features notifications for node.js?
08:31 < jammsen> obviously mysql does not support that =/
08:48 < fo10> sorry guys but this is really bugging me
08:48 < fo10> i have installed brew
08:48 < fo10> then i said install node
08:48 < fo10> there was some kind of process
08:49 < fo10> but when i go in terminal again and type 'node'
08:49 < fo10> i get zsh: command not found: node 
08:49 < fo10> do you have any idea what the problem could be?
08:50 < astropirate> fo10, why do you not isntall it via the mac installer?
08:50 < astropirate> its on the node website
08:50 < fo10> i tried that
08:50 < fo10> with the package
08:51 < ljharb> why not install node from source?
08:51 < fo10> how?
08:51 < astropirate> fo10, do you have the buidld tools installed?
08:51 < astropirate> (not a mac user so dont ask me how to do that :p)
08:51 < fo10> i dont have xcode 4.5 (no mountain lion)
08:52 < ljharb> git clone git://github.com/joyent/node.git; cd node; git checkout v0.8.11; ./configure; make; sudo make install
08:52 < ljharb> fo10 ^
08:52 < fo10> ok thanks
08:52 < fo10> but should i just run that in terminal?
08:52 < astropirate> yes
08:52 < ljharb> yes
08:55 < fo10> ok there is something installing..
08:55 < fo10> will that be all thats needed?
08:55 < ljharb> yes, when that's all done, you can run `node -v` and it should print 0.8.11
08:56 < fo10> great! thanks alot
08:56 < ljharb> if you ever need to upgrade node, cd into the git repo, type "git fetch", then "git checkout v0.8.x" where 0.8.x is the latest version, and do the configure/make/make install dance again
08:58 < fo10> ok thanks - i dont understand why there are so many different ways to do this
08:58 < fo10> and no guide on the site
09:00 < ljharb> the readme on the git repo has the instructions i gave
09:00 < ljharb> there's so many different ways to install everything
09:00 < fo10> hmm
09:00 < kuja> installed from brew, no trouble here.
09:00 < fo10> must have missed that one
09:01 < fo10> kuja do you have the latest xcode?
09:01 < fo10> because i think that was the problem i had
09:01 < kuja> Not sure. I am still running Lion if that makes a difference
09:01 < fo10> me too
09:02 < fo10> but when i typed brew doctor i got a warning that xcode was not up to date
09:03 < kuja> my xcode version is 4.2.1
09:03 < kuja> oh wait no it isnt
09:03 < kuja> 4.3.3
09:03 < fo10> so i guess it is a warning but it is not crucial
09:03 < kuja> I remember now. I recently upgraded to 4.3.3, but I am positive that I used 4.2 to install node and other stuff from brew.
09:04 < kuja> Well at least you got it working, but sucks brew doesn't work. Nice tool when it does ;)
09:05 < fo10> wait it is still installing, i dont know if it will work :P
10:05 < aMoniker> What's the difference between a file that's been require()'d and a node 'module' ?
10:05 < aMoniker> does every file that node processes count as a module?
10:05 < pyrotechnick> http://nodejs.org/api/modules.html
10:06 < aMoniker> ok cool
10:06 < aMoniker> I know variables are local to a module
10:07 < aMoniker> so if I delcare var foo = function()â€¦ it's local
10:07 < aMoniker> what if I declare 'function foo()...'
10:08 < pyrotechnick> same
10:08 < aMoniker> thanks, pyrotechnick :)
10:08 < pyrotechnick> you're most welcome
10:08 < pyrotechnick> what you referred to is called "hoisting" FYI
10:08 < aMoniker> that type of function declaration?
10:09 < pyrotechnick> yep
10:09 < aMoniker> cool, didn't know that
10:09 < aMoniker> specific to node, or javscript in general?
10:09 < pyrotechnick> JS
10:09 < pyrotechnick> let me find you this JS guide
10:10 < pyrotechnick> http://bonsaiden.github.com/JavaScript-Garden/
10:10 < pyrotechnick> very good IMO
10:11 < pyrotechnick> and yeah this of course https://developer.mozilla.org/en-US/docs/JavaScript/Guide
10:11 < pyrotechnick> it really does pay to just read the docs once you're comfortable with the basics
10:12 < pyrotechnick> it's a quirky language
10:12 < aMoniker> cool, thanks
10:12 < pyrotechnick> yw
10:12 < aMoniker> true, I use it quite a lot but still don't know every intricacy
10:12 < pyrotechnick> nobody does
10:13 < __pr0t0__> pyrotechnick: That first link is very nice... thanks
10:13 < pyrotechnick> if anyone ever tells you they're a javascript expert call their bluff
10:13 < pyrotechnick> __pr0t0__: nw, i only remember it because of the rad menu
10:14 < __pr0t0__> It is a rad menu  :D
10:15 < txdv_> nice page pyrotechnick 
10:18 < fo10> does anyone have exprerience with express?
10:30 < nathan7> fo10: Yes.
10:30 < nathan7> fo10: Maybe you could tell us your question about it.
10:30 < fo10> ok here goes:
10:31 < fo10> i followed the quickstart instructions and created the foo app
10:31 < nathan7> Yar.
10:31 < fo10> my question is, how do i access it later
10:31 < nathan7> You go to the directory..?
10:31 < fo10> wait i did that
10:32 < fo10> let me check again
10:32 < fo10> do i have to access express again or do i do it directly from the terminal
10:32 < fo10> like opening a normal file
10:33 < nathan7> fo10: It just makes a folder for you with a basic app set up
10:33 < nathan7> fo10: The next step is to edit it and make it do something useful.
10:33 < fo10> yeah that is what i dont know how to do
10:34 < fo10> i tried the simple steps like name changing etc
10:34 < nathan7> Open your text editor of choice (vim of course) and start working on it
10:59 < hasOwnProperty> btw, does anyone use a unstable JS implemented IRC client?
10:59 < yawnt> subway
10:59 < yawnt> https://github.com/thedjpetersen/subway
11:02 < Sven_vB> do you happen to have an instance of that at hand?
11:02 < yawnt> yep
11:02 < yawnt> hold on
11:02 < Sven_vB> could you try and join #hasOwnProperty please?
11:02 < sirwan> Anyone here live in Miserable Britain ?
11:03 < yawnt> wops
11:03 < zezikaro> does anyone use node on windows?
11:03 < yawnt> fail
11:03 < zezikaro> i'm havign problems getting zombie.js working on it
11:03 < yawnt> no moar instance available
11:03 < yawnt> sry Sven_vB 
11:03 < yawnt> i guess you'll have to run it yourself
11:03 < yawnt> :P
11:03 < Sven_vB> thanks anyway
11:04 < Sven_vB> i think hasOwnProperty is my new favourite nickname for some kinds of websites
11:28 < dina_> Hi, when I use "Content-Type: application/json" as my HTTP request header  field, server listening at port 3000 (created using node.js) doesn't recognize "Content-Type" as a valid header field.  "Content-type" in place of "Content-Type" as my HTTP request header  field makes things work fine. Is there a difference between "Content-Type" and "Content-type" with node.js?
11:42 < dina_> Hi, when I use "Content-Type: application/json" as my HTTP request header  field, server listening at port 3000 (created using node.js) doesn't recognize "Content-Type" as a valid header field.  "Content-type" in place of "Content-Type" as my HTTP request header  field makes things work fine. Is there a difference between "Content-Type" and "Content-type" with node.js?
11:50 < wxwxw> wxwx
12:33 < Sven_vB> dina_, could you show your code? you might be looking up that Header in a case-sensitive way.
12:40 < zezikaro> does anyone use zombie.js
12:40 < zezikaro> and have any idea how to make it install
12:40 < zezikaro> npm ERR! `cmd "/c" "node-gyp rebuild"` failed with 1
13:03 < jchannon> hi, anyone here?
13:04 < jchannon> guess not
13:21 < xicit> hello all, quick question: node.js or node?
13:21 < tuhoojabotti> Node.
13:21 < tuhoojabotti> or Node.js, if node can be confused with something else.
13:22 < xicit> im contributing to a module, and it's already nodejs in the name
13:22 < xicit> i think we should rename it
13:22 < tuhoojabotti> My module is called node-*
13:22 < xicit> yeap all modules follow that fashion
13:22 < tuhoojabotti> Well, the repo name.
13:23 < xicit> but i work for a large company we have our own conventions
13:23 < pyrotechnick> module names shouldnt have node in them
13:23 < tuhoojabotti> yeah
13:23 < xicit> I'm not sure if i can override them
13:23 < xicit> but will be using node
13:23 < pyrotechnick> the npm docs say no
13:23 < tuhoojabotti> Yeah, not the name, but the repo name, for example on github.
13:23 < xicit> yes, I'm talking about repo name, not package name
13:23 < xicit> package name doesn't have node
13:26 < SomeoneWeird> xicit, imo it doesn't really matter then
13:28 < tuhoojabotti> yeah
13:29 < xicit> I'm already not able to use the node-* pattern
14:00 < jchannon> anyone here
14:02 < mscdex> jchannon: always!
14:02 < jchannon> cool
14:02 < jchannon> I've started looking at node and trying to setup ST2 and SublimeLinter & JSHint
14:02 < jchannon> Think I finally have it working
14:03 < jchannon> Do you have any experience in this?
14:06 < jchannon> mscdex: you there?
14:24 < sinclairzx> http://www.bbc.co.uk/news/technology-19347122 <-- good read for anyone coding, especially those proclaiming JS as awesome
14:25 < geNAZt> hi again :D
14:25 < sinclairzx> me?
14:26 < pyrotechnick> this article is an ad for Topcoders
14:27 < pyrotechnick> nice try
14:27 < sinclairzx> pyrotechnick: it's naive to think you are a "good" programmer
14:27 < pyrotechnick> it's naive to try and tell anyone what to think
14:28 < sinclairzx> what am i telling you to think?
14:29 < sinclairzx> as a programmer, one should assume they are stupid. 
14:30 < pyrotechnick> nice self-defeatist attitude
14:30 < sinclairzx> or, one should assume oneself as being stupid
14:30 < sinclairzx> pyrotechnick: so, you write 100% perfect code i suppose
14:30 < pyrotechnick> false dichotomy
14:30 < sinclairzx> nothing like this would ever apply to you ?
14:31 < pyrotechnick> you like socrates?
14:31 < sinclairzx> pyrotechnick: no
14:31 < pyrotechnick> why not
14:31 < sinclairzx> does it matter?
14:32 < pyrotechnick> good talk.
14:32 < sinclairzx> its off topic, 
14:34 < sinclairzx> anyway, in a nodejs world, where people are professionally developing nodejs applications, and outside TDD, what other tools do nodejs developers employ to ensure their software is accurate and fault free.
14:35 < pyrotechnick> typescript
14:35 < sinclairzx> aside from typescript
14:36 < pyrotechnick> enjoy your monologue
14:36 < sinclairzx> pyrotechnick: stfu then
14:39 < xicit> writing perfect code is not good engineering
14:40 < sinclairzx> xicit: how so?
14:40 < xicit> engineering is about shipping good-enough code
14:41 < xicit> we're not paid to write beautiful code, we're paid to make business/technological meaning
14:42 < sinclairzx> xicit: no one said anything about beautiful code, code needs to be fault free
14:42 < xicit> what do u mean by fault free?
14:42 < sinclairzx> xicit: you code is secure, and doesn't break
14:42 < sinclairzx> *your
14:43 < xicit> if my code who is run by internal folks just for fun, why does it have to be fault free?
14:43 < sinclairzx> xicit: perhaps your code needs to be optimal too, but that's not always mandatory
14:43 < xicit> it's an engineering question how secure it should me
14:43 < xicit> how perfect it should me
14:43 < xicit> how abstract it should be
14:44 < sinclairzx> xicit:in business, it should be fault free
14:44 < xicit> if you're making money transactions, it should be more fault free
14:45 < xicit> if you're sending your code to mars, it should be more and more fault free
14:45 < xicit> but it doesn't mean that good code is always fault free code
14:45 < xicit> good code is good-enough to meet requirements code
14:45 < sinclairzx> xicit: the question wasn't "what should or shouldn't be fault free" it was "what do nodejs developers use to ensure their code is fault free?"
14:46 < xicit> i see, i can't answer that question. that's why I'm not using node anywhere mission critical myself :)
14:47 < sinclairzx> test driven development is a good start, but it doesn't help so much in node like situations where i imagine you could find yourself testing between disparate systems. 
14:48 < sinclairzx> integration is a great use case for node
14:51 < sinclairzx> is anyone here using node professionally?
15:10 < wumpwomp> Can anyone here answer questions about getting set up with swank-js/
15:16 < xicit> i used it professionally before, now I'm working for a company where our infrastructure can't run node
15:20 < sinclairzx> i see
15:29 < marcoasbreuk> Can onyone help me with this:
15:29 < marcoasbreuk> Can anyone help me with this:
15:29 < marcoasbreuk> npm update -g --> Cannot find module 'semver'
15:29 < sinclairzx> ..
15:29 < marcoasbreuk> I got node running well, but cannot update or install packages anymore
15:30 < marcoasbreuk> Installed in on CentOs through YUM
15:36 < wumpwomp> at this point, I'm having trouble connecting remotely
15:36 < wumpwomp> I'm getting to the point of having "Remote attached" show up
15:37 < wumpwomp> however I seem to not have the select-remote and related commands available
15:38 < wumpwomp> i'm guessing select-remote et al are located someplace where I can't see them and aren't loaded?
15:38 < kevin_> can someone help me with this? http://pastebin.com/xNhznZWx I'm iterating over a mongoose model set, and trying to set a variable, but when I output, the variable I set is not there
16:04 < dina_> is header names parsing in node.js case-insensitive?
16:04 < dina_> is Content-Type and Content-type the same?
16:04 < dina_> or not?
16:05 < BennyLava> My eyes tell me "no"
16:09 < dina_> @BennyLava: Do you mean it is not case-insensitive?
16:09 < dina_> or otherwise?
16:13 < zezikaro> does anyone know why i can't install zombie.js or phantomjs
16:13 < zezikaro> npm ERR! `cmd "/c" "
16:13 < zezikaro> on windows i get that
16:18 < dina_> @BennyLava: Do you mean the parsing is not case-insensitive?
16:31 < dina_>  is header names parsing in node.js case-insensitive? or not?
16:43 < jammsen> is there a sql database that can handle, notifications? im currently using mysql, but as far as i know mysql doesnt support that :(
16:45 < TehShrike> jammsen: what sort of notifications?
16:45 < jammsen> when i insert from any tool a row in the database i want it do show it live on the website
16:45 < jammsen> like facebook does
16:46 < jammsen> you know what i mean?
16:46 < mscdex> well you can kind of do that in a roundabout way with a mysql plugin
16:46 < TehShrike> You mean, on a web page that has already been loaded and is sitting in a client's browser?
16:47 < jammsen> TehShrike: thats right
16:47 < jammsen> live updates
16:47 < jammsen> kinda
16:47 < TehShrike> Well, if you're running node.js, I'm guessing you'll want a dnode/shoe connection with open web pages
16:48 < jammsen> im using sokcet.io just for communication
16:48 < harrisonm> jammsen: That's (usually?) not implemented on the database level, you'll either have a service that updates the database and notify any listeners when it does so
16:48 < jammsen> node as the server
16:48 < jammsen> and jquery to display
16:48 < TehShrike> Yes, what harrisonm said
16:48 < harrisonm> or the site will periodically poll the service to check for new updates, passing along the last update it got to determine if there's new ones
16:49 < wlaurance> npm package app and node.js doc viewer I just published for android https://play.google.com/store/apps/details?id=com.wlaurance.nodoroid
16:49 < TehShrike> But if you're using dnode/shoe, you wouldn't have to mess with polling
16:49 < jammsen> harrisonm: is there something like a howto for that?
16:49 < harrisonm> Or, as you're saying, socket.io
16:49 < harrisonm> hmm
16:49 < jammsen> so that i get the point?
16:49 < mscdex> there is a posix message queue plugin for mysql, set up a trigger to use that plugin on insert and then use a node posix mq module
16:49 < mscdex> if you really want to do it that way
16:50 < jammsen> mscdex: is there a howto or demo to view at?
16:50 < harrisonm> Not that I can specifically point to, but if anyone knows of a good article on CRUD design, that'd be useful
16:50 < harrisonm> (Create-Retrieve-Update-Delete)
16:50 < mscdex> jammsen: no, i've thought about doing that myself for a project i inherited, but i haven't done it yet -- but it's possible
16:50 < TehShrike> ah yes, CRUD applications, my money ticket for the last five years! :-)
16:52 < ThienNgo> hi all, can you help me. I want to scrap data live of a web page each 15s
16:53 < ThienNgo> I should be use library?
16:53 < TehShrike> Yes.
16:53 < ThienNgo> sample stock site
16:53 < ThienNgo> weather site....
16:54 < TehShrike> ThienNgo: consider https://github.com/MatthewMueller/cheerio
16:54 < harrisonm> wlaurance: Looks solid, I'll check it out later when my phone's not about to die
16:55 < ThienNgo> what's  library?
16:55 < ThienNgo> please help me
16:55 < TehShrike> :-|
16:56 < harrisonm> There's https://npmjs.org/package/scrape, too, which is based on cheerio
16:56 < TehShrike> Ah, nice, I hadn't seen that yet
16:57 < wlaurance> harrisonm, Thanks! any feedback would be appreciated
16:57 < harrisonm> TehShrike: I haven't used it yet, but it looks handy
16:58 < TehShrike> Aye
16:58 < TehShrike> I don't see it on Github! :-o
17:00 < dina_> could anyone please help me with how a server created with node js would parse the http request headers?
17:00 < dina_> There's been a glitch I'm trying to work on all day
17:01 < harrisonm> TehShrike: looks like it might be part of https://github.com/chriso/node.io
17:02 < harrisonm> Actually, ThienNgo, it looks like https://github.com/chriso/node.io this does everything you're wanting to do
17:03 < ThienNgo> thanks 
17:14 < ranyu> hello
17:15 < ranyu> why doesn't Step work with console.log; I'm trying to use it with two functions which each use console.log() and only the first function actually prints something
17:20 < TehShrike> oooh, node.io looks badass.  Thanks harrisonm
17:29 < harrisonm> Welcome.  Glad I stumbled on it myself, I have a project going on that this could turn out to be useful for
17:33 < mscdex> aw man the target for building node as a library is gone :(
17:44 < BraisonWu> test
17:45 < BraisonWu> @braisonwukong
17:45 < BraisonWu> my twitter!
17:46 < BraisonWu> test
17:47 < harrisonm> BraisonWu: we hear you loud and clear
17:48 < BraisonWu> hey harrisonm
17:55 <@konobi> bah... no nodejs folks in belfast it seems
18:09 < trypwire> hey all. does anybody know if there are any IRC channels or anything of the sort focused around HTML5? I'm having a weird bug with the web audio API and I'm wondering if there are any other resources for that besides SO
18:10 < BennyLava> ##javascript is fine for that
18:11 < trypwire> ah awesome. didn't know about #javascript. thanks!
18:11 < BennyLava> Two # :)
18:11 < trypwire> oh :P. what's the difference?
18:11 < trypwire> (<-- IRC newb)
18:13 < BennyLava> trypwire: http://www.freenode.net/policy.shtml#topicalchannels
18:13 < trypwire> ahh interesting. thanks!
18:39 <@konobi> isaacs: ping
18:55 < gavri> when I run jshint from the command line on one of my js files, it gives me a bunch of indentation errors, but when I run "grunt lint", I get no such errors. "grunt lint" does catch other problems, but seems to ignore indentation problems. any idea what might be wrong?
18:56 < medikoo> gavri: they both should use different options
18:56 < medikoo> gavri: do you have options set in .jshintrc file ? Maybe one of them it's not reading them
18:57 < gavri> oh yeah, I have a jshintrc file
18:57 < gavri> do I copy that into my grunt.js file?
18:58 < medikoo> gavri: I'm not that familiar with grunt.js.. I think you need to bind your jshint cli (not just jshint) to grunt to have same results
18:58 < medikoo> at least jshintrc is supported by node-jshint but not by plain jshint and probably grunt just refers to plain jshint
19:00 < Glenjamin> Hi guys, is there any way to run a child process with a specified uid/gid?
19:00 < Glenjamin> a non-node child process
19:05 < mscdex> Glenjamin: yeah, just set the uid and gid properties of the options object
19:06 < Glenjamin> oh, cool
19:06 < Glenjamin> that's not documented
19:06 < mscdex> yeah i don't know why
19:06 < mscdex> https://github.com/joyent/node/blob/v0.8/lib/child_process.js#L626
19:07 < Glenjamin> mm, just read that now
19:07 < Glenjamin> cheers!
19:07 < mscdex> maybe because it's a unix-ism
19:07 < mscdex> i dunno
19:07 < Glenjamin> i might raise a docs issue
19:12 < chrisbuchholz> Hey guys
19:13 < mscdex> yo
19:14 < chrisbuchholz> So, why do i cant i do foreach on a object in node?
19:14 < chrisbuchholz> It says object #<object> has no method foreach
19:14 < BennyLava> what?
19:14 < mscdex> because 'foreach' is a PHP-ism
19:15 < BennyLava> tyou can't just make shit up and expect it to work chrisbuchholz, that's why
19:15 < chrisbuchholz> BennyLava: yeah but in javascript i can use foreach on an object
19:15 < mscdex> chrisbuchholz: one way is to do a for (var k in foo) {}
19:15 < BennyLava> No, no you can't.
19:15 < BennyLava> Again, stop making shit up.
19:16 < BennyLava> > ({}).forEach
19:16 < BennyLava> >> ({}).forEach
19:16 < purr> BennyLava: undefined
19:16 < mscdex> >> var foo = { bar: 'baz' }; for (var k in foo) { console.log(k) }
19:16 < purr> mscdex: undefined; Console: 'bar'
19:16 < mscdex> ^
19:16 < BennyLava> or
19:17 < BennyLava> >> var o = {a:1,b:2}; Object.keys(o).forEach
19:17 < purr> BennyLava: (function) forEach
19:17 < kuja> chrisbuchholz: I think you might be getting confused with [].forEach
19:17 < mscdex> or
19:18 < mscdex> use a regular for loop over Object.keys()
19:18 < mscdex> :-D
19:18 < BennyLava> ..
19:18 < BennyLava> or
19:19 < chrisbuchholz> BennyLava: ah yes sorry, i thought wrongly!
19:19 < BennyLava> use a while loop over Object.keys()!
19:20 < chrisbuchholz> BennyLava: well, i think the easiest thing is to change my data-structure instead :D
19:20 < BennyLava> eh?
19:21 < BennyLava> You shouldn't decide on data structure based on what's easier to loop over, heh
19:21 < BennyLava> Use what's appropriate then use the tools available.
19:22 < chrisdotcode> what's the best way to keep a node server running? upstart, forever, etc..?
19:23 < BennyLava> eh.. try them, use what works for you?
19:23 < chrisbuchholz> BennyLava: yeah, and my current data-structure should just be a list, but it is a object, so.
19:23 < BennyLava> "what's the best X" questions are so silly
19:23 < chrisbuchholz> theres no reason it should be a list really
19:23 < BennyLava> mmhm
19:24 < chrisdotcode> er, okay.  which are the preferred (and current best) options to keep a node server up?
19:24 < BennyLava> lol
19:24 < chrisdotcode> forever, upstart job, anything else I should look into?
19:24  * BennyLava sighs
19:24 < BennyLava> try them, use what works for you?
19:24 < chrisdotcode> right, but I'm asking if there are others  I should try.
19:25 < BennyLava> chrisdotcode: https://github.com/joyent/node/wiki/Modules#wiki-restarting
19:25 < chrisdotcode> BennyLava: thank you (don't know why I didn't check there first...) :)
19:25 < BennyLava> Neither do I!
19:26 < mscdex> chrisdotcode: i use upstart for node scripts on ubuntu servers
19:28 < chrisdotcode> mscdex: does that work better for you than another node module?
19:28 < ts33kr> Hey guys. What would I use if I wanted a functionality similar to StringBuilder in other systems?
19:28 < ts33kr> Would that be a Buffer or something else?
19:30 < mscdex> chrisdotcode: depends on your needs. most things i have running as daemons simply just need to immediately restart on crash, logging output to a file
19:30 < mscdex> so my upstart scripts are pretty simple
19:30 < chrisdotcode> mscdex: yeah that sound about like what I'd need
20:00 < Leo_> does anyone know a good node.js cms? is calipso an on going project?
20:01 < gluxon> Leo_: Just a question, but why does the CMS have to be in Node.js?
20:01 < KiNgMaR> what do you expect from a node.js-based cms that well-establisched cmses can't deliver?
20:01 < AAA_awright_> Leo_: Why Node.js?
20:01 < KiNgMaR> heh
20:02 < gkatsev> calipso build is failing and last commit is from a month ago
20:02 < gkatsev> freenode is falling apart
20:02 < BennyLava> woot, anarachy!
20:02 < AAA_awright_> _I_ know what Node.js uniquely delivers, but I don't know if most people would, when looking around
20:02 < gluxon> Leo_: One of my friends is developing something called C4. Perhaps you could help him out. https://github.com/digitxp/c4-cms
20:03 < KiNgMaR> sounds it will blow your website
20:03 < etcetera> anyone using both Go and Node in production?
20:03 < gluxon> AAA_awright_: Right, don't get me wrong. Node.js is awesome, but there are some languages that are better at some stuff.
20:04 < nathan7> a CMS isn't really a node kind of task
20:04 < Leo_> Just to get more experience with node.js, so im gonna build the next clients websites in node rsrs. Kinda bored of php, wanna learn new stuff.
20:04 < AAA_awright_> Sure it can be, you just need to know what you want out of it
20:04 < etcetera> nathan7: what *is* node good at?
20:04 < AAA_awright_> Are you a developer maybe? I sure don't want to have to keep using the Drupal API longer than absolutely necessary, don't even get me started on Wordpress
20:04 < BennyLava> ' a CMS isn't really a node kind of task' wait, waht?
20:04 < gluxon> Leo_: Really? Bored of PHP?
20:05 < gkatsev> just because you can, doesn't mean you should. But just because you shouldn't doesn't mean you can't.
20:05 < nathan7> But if I were to write a CMS, yeah, I'd write it with node because it's what I'm good at
20:05 < nathan7> etcetera: Slinging lots of IO around
20:05 < BennyLava> How the fuck is node not suitable for writing a CMS in?
20:05 < etcetera> what does that mean?
20:05 < gkatsev> write all the things in node
20:05 < nathan7> It's suitable
20:06 < AAA_awright_> BennyLava: The same reasons it's _normally_ not suitable :p
20:06 < nathan7> etcetera: Lots of IO with a little processing
20:06 < gluxon> nathan7: Web hosts aren't going to allow Node.js CMS's anytime soon. It's too difficult to manage custom applications written in Node.js without abuse on the server. VPS's are an option, but how expensive is that?
20:06 < BennyLava> AAA_awright_: what?
20:06 < Leo_> Php is to abstracted.. IMO i learn lots more writing stuff in node.
20:06 < nathan7> gluxon: nodejitsu
20:06 < nathan7> and I haven't finished talking yet
20:06 < nathan7> If I were to write a CMS
20:06 < nathan7> I'd generate static content
20:06 < gkatsev> heroku also has node capabilities
20:06 < jesusabdullah> I mean
20:06 < jesusabdullah> if I wanted a cms I'd probably grab one off the shelf
20:07 < jesusabdullah> that's a "solved problem" so to speak
20:07 < BennyLava> wow jesusabdullah
20:07 < nathan7> jesusabdullah: I suffer from Not Invented Here syndrome q=
20:07 < jesusabdullah> get some sharepoint up in this bitch ;)
20:07 < etcetera> nathan7: perhaps a concrete use case would be more appropriate?
20:07 < jesusabdullah> nathan7: yeah, me too XD
20:07 < etcetera> or a few
20:07 < BennyLava> yeah no innovation needed, CMS's have been _perfected_
20:07 < BennyLava> thank you for your amazing insight
20:07 < nathan7> I love writing things too much to use off-the-shelf things
20:07  * BennyLava facepalms so hard
20:07 < jesusabdullah> I never said that writing a CMS in node would be a waste of time
20:08 < jesusabdullah> but I have more interesting projects to hack on
20:08 < BennyLava> some people really just say the stupidest shit
20:08 < nathan7> jesusabdullah: been playing with couchDB today
20:08 < jesusabdullah> word
20:08 < jesusabdullah> I'm just being practical BennyLava no reason to be a hater
20:08 < AAA_awright_> BennyLava: Stop acting like you've just seen the most rediculous thing in the world. Node.js is a very different beast. Just because you can write an game server in PHP, doesn't mean you should. (I have.)
20:09 < BennyLava> you're not being practical, you're saying stupud shit
20:09 < BennyLava> stupid*
20:09 < jesusabdullah> like what?
20:09 < BennyLava> "solved problem"
20:09 < BennyLava> wtf?
20:09 < BennyLava> dumb sumb sumb
20:09 < jesusabdullah> look
20:09 < BennyLava> dumb*
20:09 < nathan7> BennyLava: If I want a hammer, I buy one
20:09 < jesusabdullah> how many CMS's are out there right now?
20:09 < jesusabdullah> the answer is "a lot"
20:09 < BennyLava> And?
20:09 < nathan7> If I want a better hammer, I can do that. But if I need a hammer right now, then I'd probably buy one.
20:09 < jesusabdullah> how many of them are "production ready" ?
20:09 < jesusabdullah> the answer is "a lot"
20:09 < BennyLava> How the fuck is that EVEr a good argument?
20:10 < AAA_awright_> BennyLava: Have you ever heard of "not invented here syndrome"
20:10 < BennyLava> jesus fucking christ, stupid people
20:10 < AAA_awright_> BennyLava: The same reason it's normally ever a good argument
20:10 < BennyLava> and besides, how many *good* CMS's are there out there? Oh yeah, that's right.
20:10 < BennyLava> AAA_awright_: you're a dumb shit, you're going on ignore
20:10 < jesusabdullah> which is going to take me more time and effort, BennyLava: a) downloading and installing drupal, or b) writing my own CMS from scratch
20:10 < nathan7> CMSes aren't really ever going to not suck.
20:11 < nathan7> It's a task that sucks.
20:11 < BennyLava> jesusabdullah: that wasn't the question
20:11 < Leo_> Has anyone been using Appfog at a production level?
20:11 < AAA_awright_> Nexxy: A little help for excessive language please
20:11 < BennyLava> nathan7 said node isn't suitable for writing CMS's in
20:11 < nathan7> I didn't say that
20:11 < BennyLava> Yes you did
20:11 < jesusabdullah> naw, it's suitable, it's just not necessarily worth doing
20:11 < nathan7> It isn't the task node is best at
20:11 < jesusabdullah> for a given developer
20:11 < BennyLava> nathan7: how is that a relevant metric?
20:12 < jesusabdullah> how is that NOT a relevant metric?
20:12 < nathan7> BennyLava: If I didn't know node
20:12 < nathan7> BennyLava: and I needed to write a CMS right now
20:12 < nathan7> BennyLava: then learning node for it wouldn't be the best course of action
20:12 < BennyLava> nathan7: just because it's better at Y, doesn't necessarily mean it isn't good at X
20:12 < nathan7> BennyLava: I never said that
20:12 < gluxon> BennyLava: I'm having difficulty understanding your argument with your swearing and "stupid people" accusation..
20:12 < BennyLava> Please say more intelligent things
20:12 < nathan7> BennyLava: You're fighting a strawman
20:12 < BennyLava> gluxon: zzz
20:12 < BennyLava> nathan7: just because it's better at Y, doesn't necessarily mean it isn't good at X
20:12 < BennyLava> disagree?
20:12 < nathan7> BennyLava: I'm not saying node sucks for a CMS
20:12 < BennyLava> Np?
20:12 < BennyLava> no?
20:12 < nathan7> BennyLava: I DON'T FUCKING DISAGREE
20:12 < BennyLava> then think before yoy speak
20:13 < nathan7> Use your fucking eyes
20:13 < BennyLava> Thank you!
20:13 < jesusabdullah> BennyLava: quit being a dipshit. Just stop.
20:13 < AAA_awright> jesusabdullah nathan7: I have an idea, stop feeding the troll
20:13 < AAA_awright> 1 2 3 now
20:13 < gluxon> nathan7, BennyLava: stop.
20:13 < nathan7> I'm just saying it isn't better at it either
20:13 < BennyLava> my god some of you fail at the most basic logic
20:13 < AAA_awright> Let's talk about my awesome CMS and why I think Node.js is uniquely qualified as a CMS system
20:13 < nathan7> AAA_awright: cool
20:13 < AAA_awright> Because there's soemthing CMSes have been missing, 
20:14 < AAA_awright> A more event-oriented approach
20:14 < nathan7> CMSes don't need to be performant in I/O or anything, your caching frontend handles most stuff
20:14 < gluxon> Guys cool down. Someone just asked for a Node.js CMS, and this turned into a *very* heated argument. This is going somewhere it doesn't need to go.
20:14 < BennyLava> nathan7: bottom line is that node is more than well-suited for writing a CMS in, and therefore is *is* 'a node kind of task'.
20:14 < BennyLava> Thank you for playing!
20:14 < gluxon> BennyLava: In nathan7's defense, that's not what he said.
20:15 < BennyLava> gluxon: yes it is
20:15 < AAA_awright> Can I say "Here's a blog post" and provide a series of functions to take it from a database row, to an HTML blob, to a webpage, to an HTTP response
20:15 < nathan7> BennyLava: ...
20:15 < AAA_awright> gluxon: I'd suggest not responding to people so long as they badger you with insults
20:15 < nathan7> BennyLava: node is good at really fucking fast IO
20:15 < BennyLava> gluxon: "nathan7 â€¢ a CMS isn't really a node kind of task"
20:15 < gabrieluk> django rocks
20:15 < AAA_awright> Woaaaa there
20:15 < jesusabdullah> look, let me explain this in small, easy words so you can understand this BennyLava 
20:16 < BennyLava> jesusabdullah: "nathan7 â€¢ a CMS isn't really a node kind of task"
20:16 < jesusabdullah> for "ye olde MVC sort of tasks" damned near anything can do it.
20:16 < jesusabdullah> including node.
20:16 < AAA_awright> jesusabdullah: I'd suggest waiting until they want to stop badgering people with insults.
20:16 < jesusabdullah> BUT
20:16 < jesusabdullah> BUT
20:16 < BennyLava> jesusabdullah: "nathan7 â€¢ a CMS isn't really a node kind of task"
20:16 < nathan7> BennyLava: It is not the task where node is special
20:16 < BennyLava> nathan7: ?
20:16 < BennyLava> And?
20:16 < nathan7> BennyLava: If I have to sling a lot of data around
20:16 < jesusabdullah> when it comes to STREAMING data, custom route logic, etc., node beats the pants off most of the other frameworks
20:16 < BennyLava> that's not what you said now is it?
20:16 < BennyLava> nathan7: bottom line is that node is more than well-suited for writing a CMS in, and therefore is *is* 'a node kind of task'.
20:16 < nathan7> BennyLava: I choose node. Nothing else is gonna kick as much ass at it.
20:16 < jesusabdullah> these are "node kinds of tasks"
20:16 < BennyLava> Disagree?
20:17 < nathan7> BennyLava: "node kind of task" - a task node kicks more ass at than anything else
20:17 < jesusabdullah> boring things that Rails has already done 6 times aren't "node kind of tasks"
20:17 < jesusabdullah> despite node being capable.
20:17 < BennyLava> nathan7: wtf kind of fucked up definition is that?
20:17 < BennyLava> holy crap
20:17 < AAA_awright> BennyLava: Just because you CAN use Node.js doesn't mean it's the *best* or *most economical* solution.
20:17 < BennyLava> you people are morons
20:17 < nathan7> BennyLava: I'm not saying it's a bad idea to do it with node
20:17 < AAA_awright> Pick up an economics textbook
20:17 < BennyLava> 'suitable' equates to 'best in class', wow
20:17 < jesusabdullah> False. I'm fucking brilliant.
20:17 < nathan7> BennyLava: I'm saying it isn't a bad idea either to do it in, say, Python
20:17 < BennyLava> jesus christ
20:18 < nathan7> BennyLava: I never said suitable
20:18 < nathan7> BennyLava: Node is perfectly suitable
20:18 < BennyLava> get your heads examined please
20:18 < jesusabdullah> I already did.
20:18 < jesusabdullah> I know where my head is.
20:18 < nathan7> BennyLava: But it doesn't really kick more ass at CMS tasks than other options - it's pretty much equal
20:18 < BennyLava> jesusabdullah: beyond repair?
20:18 < BennyLava> got it
20:18 < myName_> [just a test post]
20:18 < BennyLava> nathan7: why?
20:18 < BennyLava> nathan7: plenty of IO, no?
20:18 < AAA_awright> jesusabdullah nathan7: Why are we entertaining someone who has no rational thought except to insult?
20:19 < nathan7> BennyLava: a CMS is a boring static thing
20:19 < BennyLava> nathan7: what?
20:19 < BennyLava> _what_
20:19 < BennyLava> now you're trolling me
20:19 < BennyLava> nathan7: plenty of IO, no?
20:19 < jesusabdullah> AAA_awright: can't kick, going for a ragequit
20:19 < BennyLava> Yes, no?
20:19 < BennyLava> Hello?
20:19 < nathan7> BennyLava: Yes, for your caching frontend.
20:19 < BennyLava> nathan7, hello?
20:19 < jesusabdullah> That supposes that IO is the limiting factor for CMS's.
20:19 < nathan7> BennyLava: Hi
20:20 < nathan7> BennyLava: IO is not the limiting factor for a CMS
20:20 < nathan7> BennyLava: I haven't ever seen "does IO really quickly" as a pro for a CMS
20:20 < BennyLava> ..
20:20 < jesusabdullah> when obviously all you need is map database information to views
20:20 < BennyLava> troll on, I'm out
20:20 < AAA_awright> nathan7: Woa, have you benchmarked wordpress recently?
20:20 < BennyLava> you fail
20:20 < nathan7> AAA_awright: No, I don't give a bloody fuck about wordpress
20:20 < gabrieluk> hey, what is a cms? a cms is a thingy with admin interface, that let's CLIENTS manage content(cms), thaat is it
20:20 < AAA_awright> nathan7: So specify which CMS we're talking about then
20:20 < jesusabdullah> I mean, wordpress is a pile of crap but that's neither here nor there
20:20 < AAA_awright> In general? The optimal CMS?
20:21 < jesusabdullah> AAA_awright: how about Radiant?
20:21 < AAA_awright> I'm not familiar with it
20:21 < mscdex> node.asm
20:21 < jesusabdullah> rails-based
20:21 < nathan7> AAA_awright: To me the optimal CMS does IO once
20:21 < nathan7> AAA_awright: When it generates my static pages
20:21 < AAA_awright> nathan7: Well it has to do DB, then network
20:21 < jesusabdullah> or Sharepoint ;)
20:21 < AAA_awright> nathan7: Even if the DB is the filesystem
20:21 < AAA_awright> Maybe cached in memory, but that's still "db"
20:21 < nathan7> AAA_awright: Yeah. Once. When I edit the stuff.
20:21 < gabrieluk> let clients manage static content, thats all
20:22 < nathan7> AAA_awright: Then everything is handled by my cache - the webserver's hard disk in this case
20:22 < AAA_awright> nathan7: How does it resolve a URL to an information resource? It has to read it off disk
20:22 < jesusabdullah> so like
20:22 < jesusabdullah> did I really get that guy to ragequit?
20:22 < jesusabdullah> cause if so, that's lulz
20:22 < nathan7> AAA_awright: Yes, but I'm fine with my CMS taking seconds to generate all my pages
20:22  * AAA_awright feeds jesusabdullah a cookie
20:22 < Sonderblade> what is the best/most popular/de facto standard (one can hope for one :)) date and time library for node.js?
20:23 < AAA_awright> Sonderblade: new Date
20:23 < AAA_awright> :p
20:23 < Sonderblade> funny :)
20:23 < jesusabdullah> Sonderblade: check out moment.js (not a de facto standard but reasonably nice)
20:23 < nathan7> !
20:23 < nathan7> I was looking for moment.js
20:23 < AAA_awright> nathan7: A system for managing static pages is going to be somewhat limited, it can only vary the response with the resource that's requested
20:23 < gkatsev> jesusabdullah: it's probably the most popular and perhaps also best date lib for js.
20:24 < nathan7> AAA_awright: hm
20:24 < jesusabdullah> fo' shizzle
20:24 < jesusabdullah> but I'd say "new Date" is the "de facto standard"
20:24 < jesusabdullah> perhaps even, "
20:24 < nathan7> AAA_awright: I might want minor dynamic things
20:24 < jesusabdullah> "the real actual standard"
20:24 < AAA_awright> nathan7: My system I'm working on caching now, you can optionally specify that, and it'll send the appropriate headers for Nginx to cache the entire response for a nice speedup using sendfile
20:24 < Sonderblade> jesusabdullah: looks nice thanks
20:24 < jesusabdullah> AAA_awright: yours is the one with semantic webstuffs?
20:24 < AAA_awright> jesusabdullah: Yes
20:25 < jesusabdullah> does/will it have clicky-click for managing the semantic webstuffs? XD
20:25 < jesusabdullah> cause, like
20:25 < jesusabdullah> gotta love clicky-click
20:25 < AAA_awright> It has an Edit link, I guess?
20:25 < gkatsev> jesusabdullah: yep, Date is the actual standard, lol
20:25 < jesusabdullah> word
20:25 < AAA_awright> jesusabdullah: Check it out again new website, http://magnode.org/
20:25 < AAA_awright> Is that better?
20:25 < jesusabdullah> gkatsev: can an "actual standard" also be a "de facto standard"? XD
20:26 < nathan7> AAA_awright: ah, I saw that
20:26 < gkatsev> jesusabdullah: it can. I think they're the same thing, unless something better comes along.
20:26 < jesusabdullah> AAA_awright: radio hyrule? XD
20:26 < nathan7> AAA_awright: the fuck is 'decicive' supposed to be?
20:26 < jesusabdullah> AAA_awright: decisive, homie ^^
20:26 < Xackery> Afternoon
20:26 < gabrieluk> i might add users login and an admin interface with a wyswyg to an express app  and call it:NODE CMS, :)
20:27 < harrisonm> nodepress
20:27 < gabrieluk> om...nodepress
20:27 < jesusabdullah> nodepressjs.io
20:27 < gkatsev> nodepr.es/s
20:28 < gluxon> ...
20:28 < harrisonm> nodepre.es/s.js
20:28 < gluxon> nodepre.es/s.js.io
20:28 < gabrieluk> lol
20:28 < jesusabdullah> .git
20:28 < mscdex> nodeprees?
20:29 < jesusabdullah> nodepr.es/s.io.js.git
20:29 < der|> I'm having some weird behavior with regexes, don't know if I should call it a bug...  https://gist.github.com/3846018
20:29 < harrisonm> Fork me at github.com/Harrison-M/nodepre.es-s.js.io
20:29 < nathan7> wordnode
20:29 < nathan7> q=
20:29 < gabrieluk> why not? should be fun brake the legs of drupal and wordpres...
20:29 < AAA_awright> nathan7: I needed a buzzword
20:29 < AAA_awright> I'll think of something better
20:29 < AAA_awright> But it makes sense.
20:29 < nathan7> something that doesn't freak my spelling sense out, perhaps
20:29 < AAA_awright> Your CMS should have some *notion* of what it's storing
20:30 < nathan7> To do what?
20:30 < AAA_awright> nathan7: Funny you say that since I misspelled it at first
20:30 < mscdex> der|: what were you expecting? that seems right to me...
20:30 < der|> mscdex: This line says the result of re.test is false, when it should be true:    [ /[\/]+/g, 'some//thing', false ]
20:31 < AAA_awright> nathan7: For instance, if you say "This is a model of car" it should also infer "This is a vehicle"
20:31 < nathan7> AAA_awright: Yes, relationships
20:31 < AAA_awright> It's intended to be used for advanced sorts of analysis and relationship-making like that
20:31 < nathan7> I think being able to make tag graphs would rock
20:31 < gluxon> Does ZLIB Node.js really provide no errors -.-
20:31 < gluxon> ?
20:31 < AAA_awright> I'd like to say "Plot this time-series" and it sees what the axes are, and plots them, and cool stuff
20:32 < nathan7> I need to look at graph libs
20:33 < AAA_awright> Take a look at http://magnode.org/doc/design
20:33 < der|> nathan7: I've actually thought aboud that (the wordnode thing...) is there something alike for node ?
20:33 < der|> mscdex: any ideas ? can't figure out why that happens...
20:34 < mscdex> der|: it's because you're reusing the same regex object and it's updating its lastIndex property
20:34 < mscdex> i'm prettty sure
20:34 < der|> mscdex: "updating its lastIndex property"... hmm, what...
20:34 < der|> the regex object is affected when testing ?
20:35 < nathan7> AAA_awright: but anyway
20:35 < nathan7> AAA_awright: what's the second c in decicive supposed to be?
20:35 < mscdex> der|: regex objects have a lastIndex property that allows the regex to be re-used on the same string to find more matches
20:35 < AAA_awright> What?
20:35 < jesusabdullah> nathan7: AAA_awright: an "s"
20:35 < AAA_awright> Where do you see that?
20:35 < jesusabdullah> AAA_awright: front page of magnode site, in a header
20:35 < mscdex> der|: you can test it by using the literal in place of data.regex
20:35 < der|> mscdex: ah, to optimize performance, so lastIndex should be reset on each iteration correct ?
20:36 < AAA_awright> The hell, I fixed that
20:36 < mscdex> der|: yeah to zero if you're going to reuse the regex
20:36 < AAA_awright> I must have un-fixed it
20:36 < nathan7> >=[
20:37 < AAA_awright> Anyways, you can see the edit page: http://magnode.org/?edit
20:37 < der|> mscdex: ah, that's why... thanks for the insight... I had no idea that happened
20:37 < nathan7> JQUERY D:
20:37 < AAA_awright> nathan7: No jquery at all
20:38 < AAA_awright> And it's all optional, it should still work if you disable Javascript
20:38 < jesusabdullah> lookin' reasonably good AAA_awright, you've been putting work into it recently?
20:38 < nathan7> AAA_awright: what's the $ today?
20:38 < nathan7> AAA_awright: I see jQuery being included
20:38 < nathan7> http://magnode.org/theme/foundation/javascripts/jquery.js
20:38 < AAA_awright> nathan7: Bah, you're right, that's a requirement of the Foundation CSS theme
20:39 < AAA_awright> nathan7: Magnode itself uses no Jquery
20:39 < nathan7>      $(window).load(function() {
20:39 < nathan7>          $('#slider').orbit();
20:39 < nathan7>      });
20:39 < AAA_awright> Yeah I see it now
20:39 < nathan7> if that isn't jQuery I am eating my socks
20:39 < AAA_awright> I haven't touched that all
20:39 < jesusabdullah> I HOPE YOU LIKE THE FLAVOR OF FOOTSWEAT
20:39 < AAA_awright> nathan7: But I assure you, there's no dependency on jQuery to run this
20:40 < nathan7> AAA_awright: mhm
20:40 < nathan7> I intend on playing with CouchDB
20:40 < nathan7> for CMSy things
20:40 < AAA_awright> There's no reason you couldn't, it'd require some minor changes
20:41 < AAA_awright> I'm actually trying to use an RDF statement database ultimately
20:41 < jesusabdullah> AAA_awright: is the mongo backend stuff factored out in such a way that you could easily swap out a different backend?
20:41 < jesusabdullah> AAA_awright: like an "engines" api of some kind?
20:41 < AAA_awright> All the database stuff is MongoDB specific, actually it's all Mongolian. But that's a small part of the codebase that deals with updating documents and querying them
20:41 < AAA_awright> You could swap it out
20:42 < AAA_awright> There's about 6 files you'd need to create to implement a different document store
20:42 < AAA_awright> I'd be happy to use an abstraction layer perhaps
20:43 < jesusabdullah> https://github.com/1602/jugglingdb this sounds kinda neat
20:48 < AAA_awright> jesusabdullah: I'd like to see IndexedDB
20:48 < AAA_awright> No one has written any implementation for that, of that I'm aware
20:48 < AAA_awright> It's rather limited for a lot of stuff but it works
20:50 < nathan7> hmm
20:53 < mscdex> ormg!
20:54 < terinjokes> ormg?
20:56 < niggler> fuck typescript gah
20:56 < BennyLava> fuck niggler
20:56 < niggler> i cant tell if microsoft is trolling
20:57 < niggler> fuck browserify
20:57 < BennyLava> i cant tell if niggler is trolling
20:57 < BennyLava> actually i can
20:57 < BennyLava> nvm
20:57  * BennyLava facepalms
20:57 < niggler> BennyLava *is* trolling for browserify
20:57 < BennyLava> Y U NO MAKE SENSE??
20:58 < niggler> EVEN THOUGH there are problems with it, you treat it as if its the nectar from the gods -> trolling
20:58 < BennyLava> When did I do that?
20:58 < niggler> last week lol
20:58 < BennyLava> Hint: never
20:59 < niggler> 9/28
20:59 < BennyLava> Oh well that explains it all then
20:59 < niggler> google for "fucking use browserify"
20:59 < BennyLava> Huh what
20:59 < niggler> :)
21:00 < BennyLava> Y U STILL NO MAKE SENSE??
21:16 <@Nexxy> hi
21:17 < nathan7> Hi Nexxy 
21:17 < niggler> what does parseInt do?
21:18 <@Nexxy> I got a few pings while I was out
21:18 <@Nexxy> what teh prollem is?
21:19 < niggler> typescript doesnt handle javascript properly :/
21:21 <@Nexxy> BennyLava, why are you verbally assaulting people?
21:21 < BennyLava> Stating facts is not verbally assaulting people, dear.
21:21 < Raynos> niggler: It should
21:22 < niggler> Raynos: so parseInt is broken
21:22 < Raynos> whos speaking badly of browserify >_>
21:22 < Raynos> lets get him
21:22 < niggler> typescript thinks it takes a string as the first argument
21:22 < niggler> there are a few other examples of this too
21:23 < ljharb> niggler: parseInt does take a string.
21:23 < niggler> !mdn parseInt
21:23 < niggler> err whats the syntax to get the thing to print from the docs
21:23 < Raynos> parseInt does take a string
21:24 < Raynos> someone should write an `mdn docs` cli
21:24 < niggler> https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/parseInt
21:24 < niggler> The parseInt function converts its first argument to a string, parses it, and returns an integer or NaN. 
21:25 < BennyLava> I o knew that PM from Nexxy was coming
21:25 < BennyLava> so*
21:25 < niggler> which is profoundly different from saying it takes a string
21:25 < ljharb> niggler: the fact that it can be converted to a string is irrelevant, it's not a good idea to pass the wrong type of thing around.
21:25 <@Nexxy> I'd appreciate it if you would keep my private messages private.
21:25 < BennyLava> Private to you, perhaps, but you didn't ask for permission.
21:25 <@Nexxy> ok.
21:25 -!- mode/#Node.js [+b *!*colin@pdpc/supporter/professional/riven] by Nexxy
21:25 -!- BennyLava was kicked from #Node.js by Nexxy [BennyLava]
21:25 < niggler> regardless of the sagacity of passing a number or other type
21:25 < ljharb> niggler: basically, especially if you're going to use a language with stricter types, why would you expect implicit type conversion?
21:26 < Raynos> pedants are pedant.
21:26 < niggler> the spec (unless i should be using something else) doesnt preclude you from doing it
21:26 < ljharb> niggler: typescript is not javascript.
21:26 < ljharb> niggler: and "the spec allows it" absolutely is NOT a justification for doing anything either.
21:27 < niggler> "The value to parse. If string is not a string, then it is converted to one. Leading whitespace in the string is ignored." in the link you sent
21:27 < ljharb> yes, i understand
21:27 < niggler> now, this is a simple question
21:27 < ljharb> the intent is that parseInt should take a string. typescript has stricter typing, so obviously it forces you to pass a string.
21:27 < niggler> what should be the type of the first argument?
21:27 < ljharb> string.
21:28 < niggler> so Math.round is preferable to parseInt to convert a float to an int?
21:28 < ljharb> absolutely. you're not parsing a float.
21:28 < ljharb> "parse" means "interpret from text"
21:29 < niggler> then why is it allowed in the first place?
21:29 < ljharb> niggler: keep in mind if you're using typescript, you automatically are saying you don't care about the JS spec :-)
21:30 < niggler> ljharb: typescript claims compatibility with javascript
21:30 < ljharb> niggler: probably because native JS is generally designed to be overly liberal in what it accepts. you can use eval too - doesn't mean you should.
21:30 < ljharb> niggler: passing a string into parseInt is compatible.
21:30 <@Nexxy> I got some sweet typescript stickers @ JSConf today
21:30 < niggler> and that's an example where typescript breaks javascript compatibility
21:30 < ljharb> Nexxy, picture?
21:30 <@Nexxy> my phone's dead
21:30 < ljharb> laptop?
21:30 <@Nexxy> lol no webcam
21:31 < ljharb> wow youre like in the dark ages right now
21:31 < niggler> Nexxy: not using a mac?
21:31 <@Nexxy> niggler, I prefer linux
21:31 < niggler> not mutually exclusive
21:31 < niggler> you can run linux on a mac
21:31 <@Nexxy> I suppose
21:32 <@Nexxy> I'm also not really in the fiscal position to opt for a mac
21:32 < niggler> i run debian on an older macbook pro
21:32 <@Nexxy> lol
21:32 < shanse> how was nodecopter?
21:32 <@Nexxy> redonkulosu
21:32 <@Nexxy> redonkulous*
21:32 < ljharb> Nexxy: is the dev job market in portland not as insanely good as it is in SF?
21:33 <@Nexxy> ljharb, everyone makes tradeoffs ;P
21:34 < ljharb> i didn't mean to suggest SF > portland (altho, yeah), i was more surprised that the tech job market there wasn't great
21:34 <@Nexxy> ljharb, I'm sure it is
21:34 <@Nexxy> I'm just not in the market for a traditional tech job
21:35 < ljharb> gotcha
21:35 < niggler> are you looking for work Nexxy ?
21:35 <@Nexxy> always
21:35 <@Nexxy> but I'm selective
21:58 < mscdex> Nexxy, \o/
21:59 <@Nexxy> mscdex, \o/
22:00 < gluxon> Is there a way to combine two buffers into one buffer?
22:00 < gluxon> Simple request, right? :D
22:00 < mscdex> gluxon: sure, make a buffer equal to the sum of the sizes of both and copy
22:01 <@Nexxy> there's also buffertools
22:01 <@Nexxy> if you're lazy
22:01 <@Nexxy> that adds a concat function
22:01 < mscdex> and if you're even lazier, there's a Buffer.concat in core
22:01 < mscdex> :p
22:01 < yawnt> oh Nexxy , why you ban perfectly reasonable people
22:01 < yawnt> >:(
22:01 <@Nexxy> oh
22:02 < ljharb> i've never heard bennylava described as perfectly reasonable
22:02 <@Nexxy> yawnt, berating people is never reasonable
22:02 <@Nexxy> everyone is expected to treat each other with respect while participating in #Node.js 
22:02 < yawnt> i was just joking :(
22:02 <@Nexxy> oh lol
22:02 <@Nexxy> well still! it's a good reminder
22:03 < niggler> fuck respect
22:03 <@Nexxy> lol
22:03 < yawnt> yeah who needs it anyway
22:03 < niggler> this is fight club
22:03 < yawnt> i mean.. who would want to be respected?
22:03 < mscdex> respect.js
22:04 < gkatsev> substack is probably working on that lib right as we speak
22:04 < gkatsev> or something
22:04 <@Nexxy> omg substack made the most awesome drone
22:04 <@Nexxy> it was ridiculously awesome
22:04 < yawnt> did he
22:04 < yawnt> or was it a dream you had?
22:05 < yawnt> *conspiration yawnt*
22:05 <@Nexxy> I'm not sure
22:05 < ljharb> did it destroy anything that's not a stream?
22:05 <@Nexxy> yes I think so
22:05 < niggler> sounds like a process priority and affinity module
22:05 < yawnt> i should go to bed
22:05 < yawnt> cause i'm like bored :|
22:16 < dk9999999> hello world dkdkdk
22:31 < Raynos> anyone know of a good recursive directy deleting module?
22:38 < LouisT> Raynos: i saw this a while back, but i haven't tested it https://gist.github.com/807712
22:38 < jrajav> Raynos: This worked for me https://github.com/isaacs/rimraf
22:38 < Raynos> rimraf!
22:38 < Raynos> Problems solved
22:39 < jrajav> That's probably one of the first modules I've remembered by name after more than a month and only using it once
22:39 < LouisT> oh nice
22:41 < dandv> I've just compiled v0.9.3-pre from GitHub and got a make test error: http://pastebin.com/mcbHdZXR
22:42 < Raynos> whom is familiar with domains?
22:43 < jrajav> Who -> Subject
22:43 < jrajav> Whom -> Object
22:43 < dandv> jrajav++
22:43 < jrajav> (Sorry, I'm not)
22:43 < FontPeg> what is the question?
22:44 < Raynos> feck!
22:44 < Raynos> dont test rimraf with rimraf(__dirname)
22:44 < Raynos> my codes ;_;
22:44 < jrajav> nice.
22:45 < jrajav> Hope you use version control like a good little coder
22:45 < LouisT> Raynos: seriously? O_o
22:45 < Raynos> LouisT: indirectly
22:45 < Raynos> jrajav: Nope :D
22:45 < jrajav> Sweet :D
22:46 < LouisT> i never use version control, i just backup stuff when ever i remember >.>
22:46 < jrajav> Maybe this is a good time to start
22:47 < dandv> any comments on the node `make test` error? http://pastebin.com/mcbHdZXR
22:47 < ljharb> LouisT: a good time to start using version control was years ago. now you best get on it :-)
22:47 < LouisT> meh, my laziness prevents that
22:47 < Raynos> But back to the meat. Who is familiar with domains?
22:48 < ljharb> LouisT: version control is for laziness. smart people do things the lazy way. manually backing up takes far more effort.
22:49 < jrajav> LouisT: What OS you on?
22:50 < LouisT> ljharb: my backup is just to tar everything and cp into cloud storage
22:50 < LouisT> all one command, works well
22:50 < ljharb> sigh. might as well use a typewriter.
22:51 < LouisT> ljharb: not sure how.. it's much easier to backup multiple projects at once that way
22:51 < LouisT> i have used git in the past, but not often
22:52 < ljharb> you don't need to backup multiple projects. only the ones you work on, which you do every time you commit and push.
22:52 < LouisT> sure if i ever remember to do that
22:53 < LouisT> also would require me to acquire hosting which i don't feel like paying for private repos
22:53 < SomeoneWeird> bitbucket has free priv repos
22:53 < ljharb> you have cloud storage. whats the difference
22:53 < SomeoneWeird> which pwn
22:53 < ljharb> you don't pay for a server somewhere already? what are you possibly developing?
22:53 < LouisT> ljharb: ubuntu one doesn't support it
22:53 < dandv> Raynos: how about you just ask your domains question?
22:54 < Raynos> that works too
22:54 < Raynos> When you require("domains") what domain do new event emitters get added to directly
22:54 < LouisT> ljharb: random stuff, but i do have servers, but it's not really useful to backup on the same server if it ever screws up
22:55 < ljharb> so back up to all of them. just have them all be remotes on a repo and push to them all with one git command
22:55 < LouisT> eh i could
22:56 < sirvon> anyone know if in nginx's sites-available folder i can serve vhost confs from other folders inside?
22:56 < sirvon> sites-available/STATES/va.example.com
22:56 < LouisT> the only things i really backup is mongodb, i'm not too worried about code as it's backed up multiple places as is
22:56 < ljharb> louist: it's easier to stick with what you know tho. thats why it's great to keep developing flash and using windows, cause those tools are totally good enough.
22:56 < ljharb> it's not just for backup. it's for tracking changes.
22:57 < LouisT> i don't really care about changes heh
22:57 < jrajav> You should
22:57 < ljharb> you should.
22:57 < LouisT> if i work on a project with multiple people then yea, i'll use a repo somewhere
22:57 < LouisT> or if i plan on sharing code with anyone
22:57 < ljharb> you always work on repos with mutiple people
22:58 < ljharb> "you" and "you six months from now" are definitely not the same person.
22:58 < ljharb> if they are you're not learning anything :-)
22:58 < dandv> ljharb: good point
22:58 < LouisT> i guess
22:58 < ljharb> nobody ever works alone.
22:59 < dandv> sirvon: that's an interesting question. I haven't used subfolders in nginx. Best to just try and see if the include directive catches those files.
23:00 < LouisT> ljharb: my main issue is cli git, annoying stuff
23:01 < LouisT> i tried using c9.io a while back, but had issues with git on there as well =/
23:01 < ljharb> cli git's not that bad, but there's GitX too. try http://gitimmersion.com
23:01 < sirvon> dandv: trying now..
23:01 < ljharb> LouisT: what OS are you on?
23:01 < LouisT> linux
23:02 < dandv> LouisT: see the git intro on GitHub.com
23:02 < dandv> git IS a bit confusing
23:02 < LouisT> dandv: i've used it
23:02 < ljharb> good
23:02 < LouisT> i have a project hosted there that i haven't done anything with in a while heh
23:16 < sirvon> dandv: nah gives me error ( is a directory)
23:24 < syskk> does anyone know how to do string comparison with handlebars.js?
23:25 < mscdex> syskk: very carefully? :-D
23:25 < syskk> I can
23:25 < syskk> t
23:25 < syskk> can't find out how to do it reading the docs :/
23:45 < dandv> syskk: == won't work? or eq? (I haven't used handlebard yet, but these are the two standard operators_
23:46 < syskk> dandv: nop. I think string comparison is actually not supported. probably a design decision
23:49 < dandv> syskk: wtf, really? it's way too basic to not be supported. Are IFs supported then?
23:50 < syskk> dandv: yep. ifs are fine. they just work on boolean values though
23:53 < ljharb> isn't the point to have logicless templates? string comparison is logic that belongs in the view
--- Log closed Sun Oct 07 00:00:13 2012
