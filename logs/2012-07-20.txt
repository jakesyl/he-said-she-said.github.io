--- Log opened Fri Jul 20 00:00:48 2012
00:01 <@DTrejo> cbobo: I use jerk
00:01 <@DTrejo> npm docs jerk
00:01 <@npmbro> DTrejo: Please see http://github.com/gf3/Jerk
00:02 <@DTrejo> (that is what npmbro uses)
00:05 < cbobo> npm search irc 
00:05 <@npmbro> cbobo: Please see http://eirikb.github.com/nipster/#irc
00:06 < cbobo> how do you do that by date
00:06 <@DTrejo> hmm?
00:06 <@DTrejo> of last change to the lib?
00:06 < cbobo> yes, most recent
00:06 <@DTrejo> send a pull request to the nipster repo ;)
00:06 < cbobo> so i don't try old shit, since no one has any idea what is best i have to ry all of them
00:07 <@DTrejo> cbobo: jerk worked well for me
00:07 <@DTrejo> very simple to use
00:07 < cbobo> jerk                Stupidly simple IRC bots in Javascript.                       =gf3
00:07 < cbobo> ok
00:07 < rvagg1> DTrejo: I note that your 'die' command for npmbro isn't protected at all.. perhaps you should do a check of the requester username
00:07 <@DTrejo> hehe
00:08 <@DTrejo> i mean, doesn't it get restarted?
00:08 < rvagg1> man I'm so tempted to try it out...
00:08 <@DTrejo> I just added that to fix a wierd thing that nodejitsu's zero time restarter was doing
00:08 <@DTrejo> try it!
00:08 < rvagg1> npm dtrejosaysyoushouldreallydie
00:08 < rvagg1> boom!
00:08 < cbobo> https://github.com/thedjpetersen/subway
00:08 <@DTrejo> oops its gone!
00:08 < cbobo> wow look at that one
00:08 <@DTrejo> nope not ocming back
00:08 <@DTrejo> well let me restart it haha
00:09 <@DTrejo> cool, back
00:09 <@DTrejo> just don't use that too often hah
00:10  * Nexxy does it to spite DTrejo 
00:10  * DTrejo bans nexxy ;)
00:10 <@DTrejo> would have to look it up on google though, dunno how to do that yet
00:12 <@diverdude> would it make sense to open 1 socket.io connection for chat and another for various update events from the server, for each client or would it make more sense to share one websocket for those 2 things?
00:13 <@Nexxy> everyone's @ OSCON but me! qq
00:14 <@DTrejo> diverdude: I think sharing is probably better
00:15 <@DTrejo> meant to have lotsa different stuff going over one connection
00:15 <@Nexxy> I hear a lot of good things about mux/demux
00:15 <@Nexxy> haven't used it myself though
00:15 <@Nexxy> https://github.com/dominictarr/mux-demux
00:18 < joeandaverde_> screen
00:21 <@DTrejo> holy shit I just drank like 2 shots of heavy cream
00:21 <@DTrejo> *heavy whipping cream
00:21 <@DTrejo> and now I'm feeling strange
00:35 < ShyZa> sup 
00:36 <@_Tristan> npm's bnf module isn't up to date, and I can't find any bnf parsers for node. Does anybody know of one?
00:36 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
00:36 <@_Tristan> npmbro: WHAT IS WRONG WITH YOU? SO WHAT IF I SAY NPM, WHAT DO YOU CARE?
00:36 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
00:36 <@_Tristan> >|
00:36 <@Nexxy> lol wait so you can't say npm at all without the bot piping up?
00:36 <@_Tristan> dafuq.
00:36 <@Nexxy> npm
00:36 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
00:37 <@Nexxy> oh
00:37 <@Nexxy> only if it's the first word?
00:37 <@_Tristan> I guess
00:37 <@_Tristan> though it's apparently case insensitive
00:37 <@_Tristan> the point is, I NEED BNF PLZ.
00:39 < ShyZa> a lot of ops in this joint
00:39 <@Nexxy> ShyZa, soviet #node.js 
00:40 <@maxogden> NPM
00:40 <@maxogden> npm credits
00:40 < npmbro> maxogden: npmbro was written by http://twitter.com/ddtrejo, and named by http://twitter.com/maxogden. The original npm was written by http://twitter.com/izs. Contribute to npmbro at https://github.com/DTrejo/npmbro.
00:40 <@maxogden> WOOT
00:40 <@Nexxy> EL OH EL OH EL
00:40 <@Nexxy> maxogden, you never answered me ._.
00:40 <@Nexxy> it's been killing me
00:41 <@maxogden> Nexxy: what was the question? i dont check my irc away messages all the time
00:41 <@maxogden> (i try but some fall through the cracks)
00:41 <@Nexxy> oh it was twitter
00:41 <@maxogden> o rly?
00:41 <@Nexxy> YA rly
00:42 <@maxogden> Nexxy: oh i didnt know that was a serious question
00:42 <@Nexxy> I'm always serious. :|
00:42 <@Nexxy> can't you tell?
00:42 <@maxogden> Nexxy: an ogden is measured by beard lengths
00:42 <@maxogden> so i am the maximum
00:42 <@Nexxy> I KNEW IT!
00:42  * Nexxy totally just won $20
00:43 < ShyZa> java is dead
00:44 <@maxogden> not its not haha
00:44 < ShyZa> no?
00:45 <@Nexxy> I wish that were the case
00:45 < ShyZa> how so nail__
00:45 < ShyZa> java is deader than Dead
00:45 <@Nexxy> verbose static typed OO will never completely die
00:46 <@alex4nder> there are still paid cobol programmers
00:47 < lyaunzbe> Anyone have any experience using redis w/ expressjs?
00:47 < ShyZa> sure ..java is going to be abolished as they abolished drunk driving
00:47 <@SubStack> software nietzche declares java dead
00:47 <@_Tristan> I got banned from a chatroom the other day for saying "java" when somebody asked why their java program was using so much memory
00:47 < ShyZa> SubStack: sorry u feel that way
00:49 < ShyZa> i sense a shitload of germans in here
00:50 <@_lleo> JVM isn't that bad 
00:51 < ShyZa> jvm is dead...for chumps only.
00:51 < ShyZa> welcome htlm5
00:51 < ShyZa> move on people
00:51 <@Nexxy> lol
00:51 <@Nexxy> where have i heard that before
00:51 < ShyZa> reason
00:52 <@Nexxy> yes, that's the one!
00:53 <@_lleo> html5 is GUI stuff, JVM isn't about the GUI. I'm confused
00:53 <@Nexxy> _lleo, I don't think you're the one that's confused :P
00:55 < ShyZa> java is dead folks.
00:55 < ShyZa> im sorry im the one bringing the bad news
00:55 <@EyePulp> either JVM is *that* bad that a browser side tech can kill it… or html5 is so amazing it eliminates the need for a backend.
00:55 <@maxogden> html6 will have jvm2 everyone knows that
00:56 <@SubStack> java is such a great fit for corporate backends
00:56 <@maxogden> jvm2 is like html5 for java
00:56 <@maxogden> but its in html6
00:56 <@alex4nder> SubStack: you mean enterprise, staffed with assholes?
00:56 < ShyZa> java's cup of coffee just got cold ..
00:56 <@SubStack> just imagine if node were inundated with java drones
00:56 <@maxogden> havent you all been reading hackerbros.com?
00:56 <@maxogden> news.ycombinator.org
00:56 <@SubStack> html6 pfft I'm on html9
00:57 <@_lleo> back in the day I hated Java cuz it didn't have trylock, NBIO, and unsigned integers. Still doesn't have unsigned integers.
00:57 <@alex4nder> SubStack: node is already inundated with javascript programmers.
00:57 <@_lleo> JS is right, go double for everything, or give me my primitive types back.
00:59 <@SubStack> Math.abs() is my unsigned integer
00:59 <@_Tristan> but then how will really high numbers become negative?
00:59 <@_Tristan> there ought to be a built-in
00:59 <@AAA_awright> Pfft, html9? Everyone knows xhtml3HD is where it's at
01:00 <@Nexxy> xhttpML3QL5OS
01:00 <@Nexxy> actually
01:01 <@AAA_awright> But that only works on Google Touch&Feel Glass devices, and remember when it bit off someone's finger? Not good
01:04 <@Nexxy> AAA_awright, it was just the tip
01:04 <@wookiehangover> just the pro tip?
01:05 <@_Tristan> tip counts, tip always counts.
01:05 <@Nexxy> wookiehangover, monster
01:07 < wookiehangover> Nexxy: I'M A MONSTER
01:07 <@Nexxy> wookiehangover, THAT'S WHAT THEY TELL ME
01:07 <@Nexxy> IT'S OKAY THOUGH BECAUSE SO AM I
01:08  * ShyZa thinks Nexxy is full
01:08 <@Nexxy> #winning
01:09 <@Nexxy> ShyZa, I am in fact. just had TACOS
01:09 <@maxogden> EFF YEA
01:09 <@Nexxy> VEGAN TACOS
01:09 < ShyZa> how do u set SSL connect in mirc
01:09 -!- ShyZa was kicked from #Node.js by Nexxy [ShyZa]
01:09 <@Nexxy> trololol
01:09 <@SubStack> considering burritos
01:10 <@SubStack> although I am in a hammock
01:10 <@Nexxy> SubStack, tacocopter it
01:10 < AvianFlu> lol N
01:10 < AvianFlu> lol Nexxy 
01:10 <@Nexxy> AvianFlu, ;P
01:10 <@Nexxy> what?!
01:11 < AvianFlu> I just read the scrollback from like
01:11 < AvianFlu> the last conversation
01:11 < AvianFlu> the ban and all that
01:11 <@Nexxy> oh
01:11 <@Nexxy> well they were in here trolling about java
01:11 <@Nexxy> and trolling me in PM
01:13 < cpetzold> anyone here a mongo/mongoose expert?
01:14 <@wookiehangover> axe away, cpetzold
01:15 < sirwan> anyone know if theres is a user registration system for NodeJS 
01:15 < sirwan> the whole encrypt passwords and that business
01:15 < cpetzold> wookiehangover: with read_secondary for replica sets in mongoose, is there a way to force a read from primary?
01:15 < cpetzold> slaveOk in the query just throws an error
01:16 < cpetzold> because it's still trying to access the secondary
01:19 < saml> hey,  some npm packages have bin/somescript.js,   do I have teo add that to my PATH every time I install such packages?
01:19 <@wookiehangover> no
01:19 < saml> I don't want to do:    npm install -g foobar
01:20 < cpetzold> wookiehangover: no to sam1 or me? :P
01:20 < saml> is there a way to instruct npm  to isntall to ~/.npm/bin ?
01:20 <@wookiehangover> cpetzold: to saml
01:20 < saml> then i can add ~/.npm/bin to PATH once
01:20 < saml> wookiehangover, how should install properly?
01:20 <@wookiehangover> what do you have against -g
01:20 <@wookiehangover> with -g
01:21 < saml> i am not root
01:21 <@wookiehangover> then install node in a path you can write to
01:21 < saml> node is intalled systemwide 
01:22 <@wookiehangover> are you like on a computer at the library or something?
01:22 <@Nexxy> hahaha
01:22 < saml> yes in the cloud
01:22 <@wookiehangover> cloud-brary
01:22 < saml> npm install foobar   creates  ./node_modules
01:22 < npmbro> saml: Please see http://search.npmjs.org/#/foobar
01:22 <@Nexxy> bibliocloudica
01:23 < saml> can i make npm install it to ~/.npm/ instead?
01:24 <@wookiehangover> saml: `npm help folders`
01:24 <@benatkin> scrolled back and saw that _Tristan said dafuq :)
01:24 <@wookiehangover> npm has oodles of documentation
01:24 < npmbro> wookiehangover: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20has%20oodles%20of%20documentation
01:25 <@_Tristan> dafuq.
01:25 <@_Tristan> what of it?
01:25 <@wookiehangover> npmbro: this is your last warning...
01:25 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
01:25 -!- npmbro was kicked from #Node.js by wookiehangover [npmbro]
01:25 <@benatkin> _Tristan: could be a good module name
01:26 <@_Tristan> could indeed
01:26 <@wookiehangover> benatkin: are you at boulder.js?
01:26 <@_Tristan> dafuq.is(this)
01:26 <@benatkin> wookiehangover: I'm here by myself, had a few people the first couple of times
01:26 <@wookiehangover> benatkin: I wanted to come tonight but I'm home sick
01:27 < saml> `npm help folders`  just lists search results
01:27 < saml> such a confusing command
01:27 <@wookiehangover> false
01:28 <@wookiehangover> npm help folders displays the man page for npm-folders
01:28 < saml> maybe my installation is bad
01:28 <@wookiehangover> http://cl.ly/image/1m2n0r0u1q3u
01:28 < saml> npm help folders   is same as  npm help-search folders
01:29 <@wookiehangover> https://github.com/isaacs/npm/blob/master/doc/cli/folders.md
01:29 <@wookiehangover> its all on github anyway
01:29 <@wookiehangover> so there's no excuse for not r-ing the f-ing m
01:31 < cocacola> does anyone here do database stuff?
01:31 <@alex4nder> cocacola: yes
01:31 <@benatkin> wookiehangover: well austinbv just got here
01:31 < cocacola> alex4nder: ok what databases have you worked with in the past?
01:32 <@alex4nder> cocacola: many, what do you want to know?
01:33 < cocacola> i'm writing a database driver, and had a question. when writing a random script that isn't run by a webserver or anything, i pass the get function a callback, but usually the node.js event loop ends before the callback completes. is this fine?
01:33 < cocacola> if you add a setTimeout at the end, or have a webserver or something running, it works fine
01:33 <@_Tristan> I'm really struggling here
01:34 <@_Tristan> I'm trying to think of a use case for "dafuq.is(this)"
01:34 <@_Tristan> I mean, I could return the typeof but that's very useful
01:34 <@alex4nder> cocacola: isn't it an issue of the developer writing code to handle those cases?
01:35 < saml> hrm i think this node.js  os package is bad.. globalconfig = "/usr/etc/npmrc"   
01:35 <@alex4nder> cocacola: I guess on the flipside as the writer of the database interface: should node be able to exit before your query is done.
01:36 <@alex4nder> I've not looked into that issue yet.
01:36 < cocacola> alex4nder: see i'm not sure, because the one module that i use a lot is dscape's nano, and that adds the callback to the node event loop
01:36 <@alex4nder> cocacola: it should be in the event loop
01:36 <@alex4nder> (I think)
01:37 <@alex4nder> bbl.
01:37 < cocacola> alex4nder: the problem is that the database's only way of really interfacing with anything is its native c-api. there's nothing like a tcp protocol like mongo
01:42 <@owen1> browserify watch doesn't work for me. that's how i run it: ./node_modules/browserify/bin/cmd.js public/js/controllers.js -o public/js/bundle.js -w
01:42 <@owen1> (from some reason it's not recognized when i just type browerify)
01:44 <@SubStack> owen1: yeah it's broken
01:44 <@SubStack> it's quite tricky
01:44 <@SubStack> to do it right
01:46 <@owen1> WAT
01:46 <@owen1> SubStack: no worries. it's still awesome
01:54 < kmax__> is str.match(regex) considered blocking?
01:54 <@maxogden> all js code is blocking
01:56 < kmax__> maxogden: kk thx
01:57 < kmax__> maxogden: all functions must callback then?
02:00 <@TooTallNate> kmax__: only stuff that does I/O needs to be async
02:01 <@TooTallNate> there's really no way to make string matching async, so you just do it
02:02 < enmityxero> There are good articles that explain how node is 'non blocking' - to keep my answer short, ALL code is blocking; a processor can only handle one task at a time. Since string.match isn't waiting for anything (the processor is given definite steps), it's blocking from that perspective as well.
02:03 < enmityxero> What makes node nice is that other sections of code can be executed while, say waiting for a query to return. That instruction will not block the process to wait for a return
02:04 <@benatkin> I think the crypto module might be a good example of what needs to be async. hmac isn't async, but pbkdf2 is async
02:04 <@benatkin> hmac is probably more expensive than most regexes
02:08 < kmax__> TooTallNate: sorry got dc'd. is it appropriate and/or necessary to use a callback for cpu intense stuff?
02:13 < eO_Ae> hi
02:17 < enmityxero> kmax: not sure what you're doing, but don't use node because of the hype. It's really not great for cpu intensive tasks. If you must, be sure to use process.nextTick so the intensive task doesn't block the cpu too much...
02:19 < cocacola> does anyone here have a good mongodb driver?
02:19  * EyePulp checks his left pocket… then his right…. 
02:20 <+riven> Yeah I'm not carrying one on me at the moment either… sorry!
02:20 < cocacola> know of*
02:23 <@EyePulp> cocacola:  ah - I use mongoose
02:24 < cocacola> EyePulp: i was looking at that too. do you ever feel it is too high level?
02:24 <@EyePulp> cocacola: no - I just don't use all of it's features all the time.
02:24 < cocacola> EyePulp: thanks! i'll try it
02:25 <@EyePulp> cocacola: I came from django, so I liked having some model-type declartions
02:25 <@EyePulp> er, declarations.  
02:26 < cocacola> EyePulp: yeah i have some experience with django as well. i think i like minimalism though
02:26 < kmax__> enmityxero: Just trying to write good code. I see a lot of modules that do not use callbacks. Seems like pattern matching could be cpu intensive. I am not clear if I/O is disk access or any memory location.
02:29 < deedubs> cocacola: there is https://github.com/LearnBoost/monk as well
02:31 < cocacola> deedubs: woah that looks perfect. thanks!
02:31 <@owen1> what packages people use for end-to-end testing?
02:32 < rvagg1> owen1: buster
02:32 <@owen1> rvagg1: i'll take a look thanks.
02:32 < deedubs> owen1: mocha + zombie.sj
02:32 < deedubs> *.js
02:33 <@owen1> deedubs: thanks!
02:34 <@owen1> rvagg1: deedubs did u try mocha+zombie.js and buster?
02:34 < deedubs> i have no used buster no
02:36 < kmax__> Is I/O only disk access or any memory location?
02:37 <@owen1> i/o is memory as well. even L1 (cpu cache)
02:37 <@owen1> kmax__: node.js does disk, db and external services in an async way.
02:43 < dthompso99> anyone know of any pre-built packages for parsing /proc files?
02:45 <@DTrejo> npm search proc
02:45 < npmbro> DTrejo: Please see http://eirikb.github.com/nipster/#proc
02:45 <@DTrejo> ew
02:45 <@DTrejo> bad resujlts
02:45 < kmax__> owen1: thanks
02:45 <@DTrejo> npm search /proc
02:45 < npmbro> DTrejo: Please see http://eirikb.github.com/nipster/#
02:45 <@DTrejo> there we go
02:45 <@DTrejo> hmm
02:46 <@DTrejo> something is broke
02:46 <@DTrejo> the regex doesnt handle "/"
02:46 <@DTrejo> damn
02:46 <@DTrejo> https://github.com/dshaw/proc
02:46 <@DTrejo> https://github.com/mmalecki/meminfo
02:47 < dthompso99> nice search tool there
02:48 < kmax__> DTrejo: use the escape char
02:50 < dthompso99> escaping works, thanks!
02:56 <@_Tristan> isaacs: does npmignore do exceptions?
02:56 <@_Tristan> 'cause I'd really really like it if it did
03:00 < qubit[01]> is there a way to determine if node is running under an x64 or x86 ?
03:00 <@_Tristan> yes
03:02 < rvagg1> qubit[01]: process.arch
03:02 < epic720> Does anyone know of a promise library that works like the examples I keep seeing? var promise = Futures.Promise(); Futures doesn't seem to work, keeps returning an exception at this line.
03:02 < qubit[01]> rvagg  perfect thx
03:05 < epic720> can someone help me with synchronous returning of data through a restful API?
03:06 < rvagg1> you can't do that sync in Node, you'll have to use callbacks, or wrap in promises, or use an async library
03:06 < rvagg1> npm docs async
03:06 < npmbro> rvagg1: Please see http://github.com/caolan/async#readme
03:06 < rvagg1> npm docs q
03:06 < npmbro> rvagg1: Please see http://github.com/kriskowal/q/
03:06 < epic720> rvagg1 I'm trying to wrap it in promises but can't get any of the promise libraries I find to work.
03:07 < rvagg1> try q
03:07 < epic720> I've tried promise and futures
03:07 < rvagg1> perhaps you're passing or wrapping the wrong thing
03:07 < qubit[01]> how long has Q been around, that looks nice
03:07 < rvagg1> you probably need to be passing functions rather than called functions
03:08 < rvagg1> not sure how long it's been around, I'm not a promises user myself
03:08 < qubit[01]> rvagg1 what do you use ?
03:08 < epic720> http://pastebin.com/SM42qjVN
03:08 < rvagg1> async
03:08 < rvagg1> npm docs async
03:08 < npmbro> rvagg1: Please see http://github.com/caolan/async#readme
03:08 < qubit[01]> ahh, me too - in the long run it seems easier to adjust your thinking then to try force blocking calls onto node
03:08 < epic720> hmm, maybe I need to create a promise and then use that as the callback?
03:09 < epic720> I'd much rather have a blocking call to mongo
03:09 < epic720> but all the mongo drivers I have tried use async calls as well
03:09 < rvagg1> can't do blocking in the JS layer unless you're calling something that'll block underneath, most natives don't block, so you need to go async
03:09 < epic720> so I am trying to properly return the data at some point
03:10 < rvagg1> function getDataFromDb(collection, id, callback) { db.collection(collection).find().toArray(callback) } - then call with getDataFromDb(myCollection, anID, function (err, results) { console.log('BAM!') })
03:11 < epic720> outputting to the console is one thing, but returning the data from the callback through my restful api request is another.
03:12 < epic720> If I can't block my response, and I can't block my data request from mongo, how can I respond to the GET event properly?
03:12 < rvagg1> no blocking, if you need to block then node may not be for you, but I'd recommend trying to get your head around async because once you have it working for you it'll all make sense
03:13 < epic720> I'm trying
03:13 < epic720> I have to respond to the request immediately right? I can't hold onto it until I return from the callback can I?
03:14 < rvagg1> if you're just at the beginning of your Node journey then it may be best to avoid async/promises helper libs completely, cause they'll slow your learning process down I suspect
03:14 < epic720> if getDataFromDb took a parameter (res) that I can use in the callback would that work?
03:14 < epic720> ok, yeah I am kind of jumping all around 
03:14 < epic720> there are so many libs :)
03:14 < rvagg1> you return immediately -- usually you don't "return" at all, you pass in a function as a parameter, by convention the last parameter, and it handles the result
03:15 < epic720> I am using restify and trying to return data from my GET request
03:16 < rvagg1> try not to think in terms of 'returns' but rather callback functions that just float around someplace until they get invoked in response to a result
03:16 < epic720> and that works in a request event?
03:16 < epic720> I will try that.
03:17 < epic720> thanks for the pointers.
03:17 < rvagg1> epic720: consider this, simple idiomatic node: http://nodejs.org/docs/latest/api/fs.html#fs_fs_stat_path_callback
03:18 < rvagg1> arguments with 'callback' function last which takes 2 arguments itself, first is always "err" which is null if there was no error, second is the data you are 'returning'
03:18 < rvagg1> fs.readFile doesn't actually return anything interesting, the return comes through that callback
03:18 < rvagg1> it's the same with *most* node libs out there
03:18 < epic720> yeah I get that part.
03:21 < epic720> oh yes!
03:22 < epic720> I got it now, thanks for the suggestions rvagg1.
03:22 < epic720> I guess I thought that the res object in the first callback would go out of scope but it doesn't. It sticks around and is available to send after the callback.
03:22 < epic720> Fun.
03:31 <@russfrank> hi.
03:43 < cocacola> does anyone here actually use the monk driver?
03:47 < cbobo> can we make socket.io ssl ?
03:47 <@wao> partially
03:47 <@wao> browser must support it
03:52 < xaroth_> Greetings.
03:53 < epic720> greetings.
03:53 <@russfrank> greetings!
03:54 < xaroth_> I'm new to node.js, and have hit a snag in translating from my traditional synchronous world over to the asynchronous world of node.  I have what feels like a common use pattern around database access that I was hoping maybe someone here could help de-mystify for me.
03:54 < legind> hey, what's the best way to do modular exponentiation in node, similar to python's pow(1,2,3) syntax
03:55 < xaroth_> I figure it's worth asking if anyone's able/interested to help out before I go spamming the channel with the example scenario.  ;)
03:55 < epic720> xaroth, I'm new as well. What's your question?
03:56 < epic720> currently I am writing a node to wrap restify and mongodb together to provide a transparent restful api to mongodb collections.
03:57 < xaroth_> Here's the general scenario: I've got a function where I want to make a query into the DB and operate on that data, but I specifically don't want other potential asynchronous events to come inbetween and muck up the state machine while I wait for the query to come back.
03:57 < prettyrobots> xaroth_: Queue them.
03:57 < xaroth_> In other environments, this wouldn't be an issue, since DB access tends to be synchronous.
03:57 < dthompso99> epic720: not sure if its of use to you, but mongo has said api built in
03:58 < prettyrobots> Any other call is going to have a callback. Put the callback in a list.
03:58 < epic720> mongo has a restful API built in? Where?
03:58 < xaroth_> Queue them?  I'm not sure I follow.
03:58 < prettyrobots> WHen you are done, pop the next callback off the list and perform the operation again for it.
03:58 < prettyrobots> You have a function that async puts a person in a database?
03:58 < dthompso99> http://www.mongodb.org/display/DOCS/Http+Interface
03:59 < prettyrobots> Well, then you're giong to get a person object and callback. Put then in a list and work through the list.
03:59 < epic720> oh yeah I tried mongodb-rest but it didn't work
04:00 < dthompso99> k.. its pretty generic, but figured it could save you days of work =)
04:00 < xaroth_> Consider this simple example (pseudocode, obviously):  function getData( query ) { var row = myDBInterface.query( query ).fetch();  return row['someValue']; }.
04:01 < epic720> wow, dthompso99, I don't know how I missed this.
04:01 < prettyrobots> getData( query, calback ) { db.query( query, function ( data ) { callback (data )} )
04:01 < dthompso99> as prettyrobots mentioned... create a stack, and only execute one at a time
04:01 < epic720> I had planned to work in a set of other things, including oath2, 
04:01 < xaroth_> Yeah, I get that.  But, that doesn't prevent other things from happening to my state machine while I wait for the callback to come back.
04:02 < prettyrobots> xaroth_: Only one thread of execution in JavaScript.
04:02 < prettyrobots> If someone calls the function, it doesn't continue until thier callback is called. So put the callback in in a queue. The others will *have* to wait.
04:04 < prettyrobots> Here's a read/write lock for Node.js.
04:04 < prettyrobots> https://github.com/bigeasy/strata/blob/972aaf80c3acbef57384ef0b857b28a8645ee895/index.js#L1710
04:04 < prettyrobots> It is *not* reentrant, but you don't need that.
04:06 < dthompso99> there's no generic way to call ioctl from node, is there?  i'll have to write a c extension?
04:06 < xaroth_> Ok, bear with me for a moment while I chew through this.  Let's set up what is causing a problem in my mind, and then see how what you're saying prevents the scenario I'm fearing.
04:08 < dthompso99> xaroth_: race conditions are sometimes the bane of JS.... in some cases you may need to safeguard for them
04:10 < prettyrobots> I open a file. I read file. I put file contents in cache.
04:10 < prettyrobots> I want everyone to see the same cache object.
04:10 < xaroth_> setTimeout( someFunctionThatWillBreakMyStateMachineIfCalledAtTheWrongTime, 100 ); result = getData( query, notSureWhatGoesHere ); someFunctionThatMakesMyStateMachineSafeToModifyAgain( result );
04:10 < prettyrobots> I have a function called hereYouGoIfYouWantTheObjectComeAndGetIt(objectid, callback)
04:11 < prettyrobots> Everyone comes to get my object. I go to the file system on the first call. Another call comes in for the same object with the same object id.
04:12 < prettyrobots> So, I put that callback in a list, because I'm already going to get it.
04:12 < prettyrobots> When I come back, I give the object to every callback in the list. 
04:13 < prettyrobots> There after any request for the object of the id, already cached, so I just give it to the callback.
04:13 < xaroth_> I suppose the last function I wrote would be the callback passed to getData().
04:13 < prettyrobots> Yes.
04:14 < prettyrobots> The callback to get data would be called after the data is got.
04:14 < xaroth_> Let's see... is there something about the way the callback is constructed that prevents the timer from firing at an inopportune moment...
04:14 < prettyrobots> No.
04:15 < prettyrobots> That is your other problem.
04:15 < prettyrobots> someFunctionThatWillBreakMyStateMachineIfCalledAtTheWrongTime needs to check and see if the data is ready.
04:15 < xaroth_> I think that's the main problem.  ;)
04:15 < prettyrobots> Hmm...
04:15 < prettyrobots> Like domready in the browser?
04:15 < prettyrobots> A blig list of things to do when the data is ready?
04:15 < prettyrobots> Like jQuery's $(function () { alert('loaded!') })
04:16 < xaroth_> In my specific case, it's socket.io receiving a message from one of the clients that tells the application's state to change in a way that would be invalid if I'm still waiting on the previous operation to complete.
04:16 < prettyrobots> someFunctionThatWillBreakMyStateMachineIfCalledAtTheWrongTime, when it is called, inside, it has to see if ...
04:16 < prettyrobots> the state is untable, if so, it can say whenTheDataIsRead(reallyDoSomeFunction)
04:17 < xaroth_> I think I see what you're saying about the queue now.  Every single possible interruption would need to go to some master queue object instead of actually being run.
04:19 < prettyrobots> Well, only if you're going to do stuff that messes with the state.
04:19 < xaroth_> For my app, that basically means everything.  ;)
04:19 < prettyrobots> Keep in mind, you don't have parallel threads executing.
04:19 < prettyrobots> Right?
04:19 < xaroth_> Yep.
04:19 < prettyrobots> You're only synchronizing I/O.
04:19 < prettyrobots> Well, create a data bus.
04:19 < prettyrobots> It's not that difficult.
04:20 < xaroth_> I'm not worried about semaphores, thread race conditions, or anything like that.  Just that my async response doesn't get queued in the right order.
04:20 < prettyrobots> Make your state machine an array of things to do.
04:20 < timeturner> use async then
04:20 < blakmatrix_> op plz
04:20 < prettyrobots> op?
04:21 < prettyrobots> blakmatrix_: What does "op plz" mean?
04:21  * prettyrobots Reachs for Internet for Dummies.
04:21 < blakmatrix_> haha
04:21 < blakmatrix_> earlier thread today
04:22 < prettyrobots> timeturner: Does async have a queue?
04:22 < prettyrobots> This sounds like an interesting library to write.
04:23 < xaroth_> Well, I suppose this project isn't enormous yet, so there's only maybe 10 or 15 socket messages I've got to care about right now.  I'll try writing a quick-and-dirty job queue and see if that meets my needs.
04:23 < dthompso99> async would work if you were only concerned with one client
04:23 < prettyrobots> As far as I know, async only does chaining.
04:24 < prettyrobots> No real semaphore.
04:24 < dthompso99> right, but you couldnt get things out of order that way
04:25 < eugeneware> prettyrobots: async has the queue() method which allows you to limit the amount of concurrency.
04:25 < prettyrobots> I believe xaroth_ is writing a server, so he's going to have to queue the requests. 
04:26 < dthompso99> agreed... dont think async will work for what he's described
04:26 < xaroth_> Yep.  It's a game server for a webgame.  :)
04:26 < prettyrobots> eugeneware: He's have to limit it to 1. It would work.
04:27 < prettyrobots> xaroth_: I need to finish that project I showed you. It would allow some concurrent I/O if you're reading ordered data.
04:28 < prettyrobots> Actuallly, what about PostgreSQL? Have a transactional database do your atomicity.
04:28 < prettyrobots> Evented I/O b-tree: https://github.com/bigeasy/strata
04:29 < livinded> async trees sound like a bad idea
04:29 < livinded> unless you're only doing reads
04:30 < prettyrobots> livinded: Why?
04:30 < livinded> but I guess if you use self balancing it'll fix itself
04:30 < prettyrobots> livinded: I don't understand.
04:31 < livinded> prettyrobots: if two node attempt to get added and the second one traverses before the first for whatever reason and inserts it could screw up the ordering
04:31 < prettyrobots> livinded: Yeah. That's why I brought it up in context of xaroth_ questions about concurrency.
04:32 < prettyrobots> livinded: It is concurrent, balancing, and implements a read/write lock on each page.
04:32 < livinded> ah
04:33 < livinded> well reads you don't need to lock
04:33 < livinded> only writes
04:33 < prettyrobots> livinded: Was using the lock code to illustrate how to protect async I/O.
04:33 < livinded> took me so long to wrap my head around that concept in terms of async
04:33 < prettyrobots> livinded: Shared read lock. Shared/exclusive lock.
04:36 < xaroth_> Ok, I think I've got enough to play with.  If you'd like to see what it is I'm building, I've got a playable prototype of the game using more traditional PHP and AJAX polling up at http://www.yousaidwhatgame.com .  I'm hoping to have the node.js+socket.io powered version up in the next couple of days.
04:36 < livinded> is it just me or is it just ridiculously hard to find well paying jobs writing node.js applications without moving to SF?
04:36 < xaroth_> Thanks for the help!
04:37 < prettyrobots> livinded: Right?! And if you move to SF they hire people to rub money one.
04:37 < prettyrobots> And if you move to SF they hire people to rub money on you.
04:38 < prettyrobots> It's like Node.js does't exist outside Oakland.
04:39 < livinded> trying to get out of rails after 5 years and EVERYONE has rails work that they want to throw insane amounts of money at you to do, but nobody here is doing cool real-time stuff that wants to pay well
04:42 < livinded> just wish social/advertising platforms would die already so we can move onto something interesting
04:44 < enmityxero> lol, invent the something interesting than
04:49 < livinded> enmityxero: need money first
04:55 < enmityxero> I suppose. That and time. But if you have a good idea, neither of those *should* be a major factor.
04:55 <@jcrew> why do you need money to invent something interesting?
04:56 < livinded> jcrew: I need money to live
04:56 < livinded> working on cool stuff in my free time
04:57 <@jcrew> yea but you're awake around 70 hours a week that you're not working unless you have a strange schedule or sleep a lot
04:57 <@jcrew> if you have some ideas i can find some money : - )
04:57 < livinded> I quit my job two weeks ago and have been working 14 hours days to finish this project I'm launching next week
04:59 < livinded> unfortunately it's not going to directly make me any money and I've sunk reasonable amount into it
05:00 <@jcrew> is it an online project?
05:00 < livinded> the code will be once it's over
05:00 < livinded> it's a security wargame I'm running at DEFCON next weekend
05:01 < livinded> whole thing only lasts about 30 hours
05:01 < enmityxero> Javascript game?
05:01 <@EvilPacket> livinded: sounds interesting….I will be at DEFCON
05:01 < livinded> EvilPacket: come stop by the BroCTF table in the contest area
05:01 <@jcrew> it does sound interesting - anything about it?
05:01 <@EvilPacket> livinded: cool plan on it.
05:02 < livinded> I'll be the short guy who is probably drunk and looks half dead
05:02 < wingy> do you feel that a developer should be either a frontender of a backender?
05:02 < wingy> specializing in one field and work with that at the job rather than being both
05:02 < livinded> jcrew: anything about it?
05:02 < wingy> perhaps that would make him/her better since now he can focus on just that field?
05:03 <@jcrew> yea to read or some hype or something
05:03 < rvagg1> wingy: I suspect that you'll lean one way or the other even if you're in a job that does both
05:03 <@jcrew> wingy: define frontender
05:03 < livinded> oh, http://www.broctf.org
05:03 < enmityxero> wingy: depends on the scope of the project, but in most cases keep backend and frontend separate
05:04 < wingy> jcrew: javascript/html/css. mostly doing logic. the css design would be done by a real designer
05:04 < livinded> working on the scoring system right now. It's a HTML5 web app powered by node/postres. Never deployed node into production and no idea how this is going to stand up to probably 200+ hackers hammering it but I'm excited to find out
05:04 < wingy> enmityxero: yeah that was what i suspected .. keep them separate i think is good for everyone and the project itself than all doing all
05:05 <@jcrew> wingy: then i agree with what the other folks said 
05:05 < livinded> EvilPacket: do you work in security?
05:05 <@EvilPacket> livinded: yes
05:05 < livinded> app pen testing?
05:06 <@EvilPacket> I'm the cso at andyet.net (&yet) and also the team lead for our app pen testing brand ^Lift Security
05:06 < livinded> ah
05:07 <@EvilPacket> livinded: you?
05:07 < livinded> planning to transition into pen testing. Been heavily in hacker scene since I was a kid but with school obligations pen testing wasn't an option
05:08 < livinded> couldn't do the traveling or hours
05:08 < adambrault> livinded: EvilPacket is really amazing at testing pens. He once got root on a Ticonderoga No. 2.
05:08 < adambrault> dammit. that's a pencil.
05:08 <@EvilPacket> lol.
05:08 < livinded> adambrault: aren't those pencils?
05:09 < adambrault> livinded: hey, I just tell the jokes. I don't write them.
05:09 < livinded> also, hipster app development just pays so well
05:09 < livinded> it's like people are literally throwing money at you
05:09 <@EvilPacket> ha.
05:10 < enmityxero> I find it crazy how profitable the internet has become
05:10 < livinded> and they have no expectations in terms of maintainable well designed software
05:10 < livinded> I had to fight tooth and nail to refactor and fix bugs at my old job
05:13 < perezd> is dominic tarr in here?
05:17  * Determinist grrrrrrrrs
05:17 < enmityxero> ?
05:18 < Determinist> trying to figure out how to sign a bunch of xml using PKCS7
05:18 < Determinist> in ruby this takes 2 minutes to figure out
05:18 < Determinist> in node... good luck
05:18 < Determinist> any of you guys managed to use pkcs7 under node?
05:19 < Zoney> sometimes i wish i knew ruby 
05:19 < mxweas_> learn it!
05:19 < mxweas_> <3 ruby
05:19 <@purr> Let it be known that mxweas_ hearts ruby.
05:19 < Zoney> sadly, life gets in the way
05:19 < mxweas_> just the syntax alone makes ruby run
05:19 < mxweas_> fun*
05:20 < mxweas_> like, I dread coding most of the time. I love it cause I'm building something fun. But I don't look at the code typing part as fun
05:20 < mxweas_> the engineering side is fun
05:20 < mxweas_> anyway
05:20 < mxweas_> ruby makes the typing part fun even lol
05:20 <@jcrew> you like the syntax of ruby?
05:20 < Determinist> i like it
05:20 < Zoney> unlike node? :)
05:20 <@jcrew> what did you initially begin writing code in?
05:21 <@alex4nder> qbasic
05:21 < Determinist> C/C++
05:21 < Zoney> punch cards
05:21 < Determinist> or rather pascal, if you go back enough
05:21 <@jcrew> Zoney: haha
05:21 < Determinist> ruby > JS
05:21 < Determinist> that's just the way it is
05:22 < mxweas_> jcrew: do you dislike it?
05:22 <@jcrew> i wrote in pascal after i learned c, i loved c and cpp i just don't like the syntax for ruby
05:22 < enmityxero> I like JS more, but I haven't used ruby much
05:22 < mxweas_> I hate cpp
05:22 < Determinist> C# > Java > C/C++
05:22 <@jcrew> i think coding should be unreadable except by robots, i liked perl too until nodejs
05:22 < Determinist> Ruby > lua > JS > Python > PHP > Perl
05:22 < mxweas_> agree to disagree I guess
05:22 < Zoney> perl can produce some nice unreadable code
05:23 < enmityxero> assembly ftw
05:23 < Determinist> assembly owns you
05:23 < Determinist> there's no need to even mention that
05:23 < Zoney> i've played with lua, it's kinda cool
05:23 < mxweas_> I actually like arm asm
05:23 < mxweas_> at least the registers make sense
05:23 < Zoney> i haven't used asm in a long time
05:23 < mxweas_> vs x86 with eax, ebx crap
05:23 < Determinist> some on guys... PKCS7, give a brother a hand here.
05:23 < mxweas_> although those make sense if you know the language history
05:24 <@alex4nder> you know what's funny?
05:24 < mxweas_> ?
05:24 <@alex4nder> a bunch of javascript programmers comparing programming language ewangs in #node.js
05:24 < mxweas_> lol
05:24 <@jcrew> last time i wrote asm was using dos debugger when i worked counter sales before i enlisted
05:24 <@alex4nder> it's like rachael ray's audience comparing cooking skill.
05:25 <@jcrew> except, who is rachael ray
05:25  * Determinist shrugs
05:25 <@alex4nder> do you at least eat food?
05:25 < mxweas_> nodejs attracts a lot of idiots, but that doesn't mean there aren't some exceptional people in here
05:25 <@alex4nder> or is it all ramen all the time.
05:25 <@jcrew> i eat real food all of the time, i just don't watch tv
05:26 <@alex4nder> but you leave your house
05:26 <@alex4nder> right?
05:26 <@jcrew> i also exercise about 25 hours a week to cycle, so yea :)
05:26 <@alex4nder> do you know who Nigella Lawson is?
05:26 < mxweas_> alex4nder is a hipster
05:26 <@jcrew> yea, no i don't know nigella lawson
05:26 <@alex4nder> what?
05:26 < Zoney> my company is trying to hire a PHP and JS developer, wow, does that bring out the idiots
05:26 < enmityxero> I don't know either of them
05:26 < Emmanuel`> alex4nder: you do realize not everyone lives in your country with your culture ?
05:27 <@alex4nder> Emmanuel`: one of those names is european
05:27 < Zoney> neither do our applicants!
05:27 <@alex4nder> UK
05:27 <@alex4nder> a brit.
05:28 < Zoney> i hope most you know how to write a for loop
05:28 < Emmanuel`> Europe is big, no one in Germany would know the name of French cooking show hosts
05:28 <@alex4nder> Zoney: using lambdas.
05:28 <@alex4nder> Emmanuel`: that's because german food sucks ass.  the only good food there was brought in by the Turks.
05:29 <@jcrew> what's wrong with rouladen?
05:29 <@alex4nder> nothing, I just want to see what his response is.
05:29 < Emmanuel`> yeah, and UK food is the best in the world
05:29 <@alex4nder> I'm a fan of eisbein myself.
05:29 < Determinist> Zoney: most of the candidates i've ever interviewed for PHP/JS positions couldn't even solve fizbuz questions. Example: write a function that gets an integer value and returns the number of digits in it. Solution: ceil(log(num)) or a recursive one, or a loop or anything. those guys couldn't figure it out.
05:31 <@jcrew> Determinist: what are you guys paying?
05:31 < Determinist> jcrew: depends on the person, their experience and skills. usually >80 tho.
05:31 <@jcrew> that's quite a bit, i'd think.  surprised you can't find someone decent
05:31 <@alex4nder> they should be able to write fizzbuzz.
05:32 < Determinist> jcrew: didn't say I can't... it's just the signal to noise ratio
05:32 <@alex4nder> Determinist: what area are you in?
05:32 < Determinist> alex4nder: NY/CA
05:33 <@alex4nder> Determinist: big spread, NYC, and where in CA?
05:33 < Determinist> SJ
05:33 <@alex4nder> ah
05:33 <@alex4nder> I know 25 year veteran 'software engineers' that don't understand malloc..  it sucks.
05:33 < Determinist> haha, yeah, i've seen that
05:34 < livinded> how do you not understand malloc?
05:34 <@jcrew> did you ask them to explain the origins of javascript and how it solves the problems of embedding java applets?
05:34 < livinded> you say, "Hey, give me x bytes on the heap!". Then it says, "Sure, here you go." or "Oh fuck, not enough"
05:35 <@alex4nder> livinded: what is a heap?
05:35 < livinded> alex4nder: in terms of the data structure or in relation to address space layout?
05:36 <@alex4nder> livinded: you tell me; you just used the word
05:36 <@jcrew> serious?
05:36 <@alex4nder> (job interview)
05:36 <@jcrew> haha
05:36 < livinded> heap is generally above the stack and used for dynamically allocated memory/globals/initialized variables
05:36 <@alex4nder> above the stack, eh?
05:36 < livinded> grows downward toward lower memory addresses
05:37 < livinded> toward the stack
05:37 <@gkatsev> a heap is a pile, no? :>
05:37 < Zoney> Does node.js now use C as its base language?
05:37 <@alex4nder> Zoney: Fortran
05:37 < livinded> errr higher memory addresses
05:38 < livinded> heap and stack meet in the middle and make operating systems unhappy when they touch
05:38 <@gkatsev> haha
05:38 <@gkatsev> "now, stack, show me on this doll where the heap touched you"
05:39 < livinded> gkatsev: lol, wish I could draw. that would be an awesome comic strip to make stickers of for defcon
05:39 <@gkatsev> haha
05:40 <@benatkin> Determinist: seen this? https://github.com/gwjjeff/cryptojs
05:40 < livinded> alex4nder: that a sufficient answer?
05:40 <@alex4nder> livinded: is it?
05:40 < Determinist> benatkin: looking at it, thanks
05:41 < livinded> it would be for me
05:41 < enmityxero> I like to start interviews by showing a basic function and asking what it does. I can't tell you how many software engineers can't either reverse engineer code or explain what it does.
05:41 < livinded> but then, I gave it
05:41 <@benatkin> the coffee-script in the readme is pretty silly
05:41 <@benatkin> when the library's written in js. usually it's the other way around
05:41 <@alex4nder> livinded: yah, if this were an interview, I'd continue with questions like; who defines the structure of memory?  Where does the allocation of this memory come from?  who manages it? etc.
05:42 <@timoxley> benatkin I wouldn't use it specifically because they didn't use syntax highlighting in the readme
05:42 < Zoney> i start with" code me a for loop"
05:42 < livinded> alex4nder: usually the rtld
05:42 < Zoney> so far not a single applicant has done it correctly.
05:42 <@alex4nder> livinded: and then?
05:42 < enmityxero> O.o
05:43 <@alex4nder> livinded: where usable memory comes from and how its managed changes from OS to OS and malloc implementation to malloc implementation.
05:43 <@alex4nder> and version to version
05:43 < livinded> alex4nder: right, but overall the answer I gave is pretty standard
05:44 <@alex4nder> plenty of senior engineers don't understand any of this
05:44 <@alex4nder> livinded: it's a good junior engineer answer
05:44 <@jcrew> are you guys gonna meet up and arm wrestle next?
05:44 <@alex4nder> jcrew: touching dicks is next
05:44 <@jcrew> haha
05:44 < livinded> alex4nder: where do you work that you ask applicants that kind of stuff?
05:45 <@alex4nder> livinded: embedded development shop
05:45 < Zoney> ahhh
05:45 <@benatkin> timoxley: lol, that used to bother me more than it does now https://github.com/fence/fence.github.com
05:45 < livinded> ah, makes sense
05:45 < livinded> and ya, I'm sure there is a lot more variance in embedded systems
05:45 <@alex4nder> even UNIX boxes
05:45 <@alex4nder> e.g. OpenBSD vs. Linux vs. FreebSD
05:46 <@alex4nder> anyway, JavaScript fuck yah
05:48 < livinded> but ya, I seriously doubt 1% of the classmates in the CS program I was in, before dropping out, would have been able to give an answer to that. CS at my school was so disapointing
05:48 <@timoxley> benatkin  that article is rather longwinded
05:48 <@jcrew> livinded: i think most school programs are that way
05:50 <@benatkin> timoxley: yeah, I didn't think so at the time, but it's a rant
05:51 <@timoxley> benatkin oh, that's yours. sorry man.
05:52 < Zoney> is there an index of NPMs somewhere?
05:52 <@benatkin> timoxley: no problem, I like raw feedback better anyway :)
05:52 < livinded> npmjs.org
05:52 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
05:52 < Zoney> thank you
05:52 <@timoxley> Zoney just use `npm search`
05:52 < Zoney> google was being less than helpful
05:52 < livinded> timoxley: that works too
05:53 <@benatkin> npmbro search markdown
05:53 < npmbro> benatkin: Please see http://eirikb.github.com/nipster/#markdown
05:54 < livinded> npmbro should replace all results with brocrabulary
05:54 < npmbro> livinded: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20should%20replace%20all%20results%20with%20brocrabulary
05:54 < livinded> brocabulary*
05:55 <@benatkin> bro stands for browse I think
05:55 < livinded> would still be funny
05:57 <@benatkin> speaking of funny, I found this from my last npmbro search https://github.com/benmills/robotskirt
05:58 < livinded> oh that reminds me. I need to get back to work on my markdown to ascii/ansi art lib
05:59 < livinded> I want nice colored rendering of markdown in my terminal. No reason browsers should get all the fun
06:00 <@benatkin> livinded++
06:01 <@benatkin> no karma bot here :/
06:10 < DTrejo> makes me sad
06:10 < DTrejo> livinded: pull requests accepted :)
06:11 < DTrejo> benatkin: you'd have to ask maxogden what he meant when he named it
06:11 < rvagg1> accept mine then DTrejo
06:11 < DTrejo> hey man i only saw you req after I left work!
06:11 < rvagg1> it'll be awesome, I promise
06:12 < DTrejo> tomorrow!
06:12 < DTrejo> also, thank you
06:12 < rvagg1> no probs, super fun!
06:12 < livinded> DTrejo: pull request?
06:13 < DTrejo> yes, to
06:13 < rvagg1> & I already did a bunch of the stats code for the microjs.com deploy script so it didn't take long
06:13 < DTrejo> npmbro credits
06:13 < npmbro> DTrejo: npmbro was written by http://twitter.com/ddtrejo, and named by http://twitter.com/maxogden. The original npm was written by http://twitter.com/izs. Contribute to npmbro at https://github.com/DTrejo/npmbro.
06:13 < DTrejo> ooh cool
06:14  * livinded is so confused
06:15 < DTrejo> ^ thats where you should send pull reqs, if you want
06:15 < livinded> oh
06:16 < livinded> guess I gotta brocalularize npmbro when I get some time
06:18 < DTrejo> you could even just read through it and post an issue with bro-ized vocab
06:19 < DTrejo> so then you dont actually have to pull down code
06:20 < livinded> I've got this really awesome regex that does it all for me: /[bgpt]r[ola]/bro/g
06:23 < dthompso99> i guess you have to give regex some credit when 18 chars of code qualifies as 'really awsome'
06:41 <@jcrew> haha
06:42 <@jcrew> run it wide open
06:43 < StartUps> hey
06:43 < StartUps> anyone here...
06:43 < rvagg1> 739 of us
06:44 < StartUps> yeah. not very talkative 
06:44 < rvagg1> typical nerds
06:44 < StartUps> true
06:44 < prettyrobots> Nerds. Pfft.
06:44 < prettyrobots> Silly nerds.
06:44 < recidive> hello, is it the appropriate place to ask questions related to connection?
06:45 < prettyrobots> Love connection?
06:45 < livinded> :( writing christmas tree code
06:45 < recidive> connection session
06:46 < recidive> I'd like to know if I should invalidate session in my Store plugin or connect will handle that, I've implemented the destroy method
06:48 < StartUps> Is available for contracted site building
06:50 < StartUps> anyone...
06:54 < StartUps> no takers
06:54 < epic720> has anyone used restify.js?
06:55 < epic720> specifically the client side js?
06:55 <@jcrew> prettyrobots: do you love me?
06:55 < prettyrobots> @jcrew: Sssh! I'm busy watching this: http://www.youtube.com/watch?v=OUnRIzwbgkA
06:56 <@jcrew> oh i thought it was a reference to old gregg
06:56 < epic720> I totally thought it was old gregg too.
06:56 < epic720> lol
06:58 <@jcrew> prettyrobots: i don't believe mark is 24
06:58 < prettyrobots> Me either. I do believe he's from Royal Oak.
06:58 < prettyrobots> neither
06:59 <@jcrew> he said from michigan, i do believe that part - having grown up there i have seen my share of mullets
06:59 < StartUps> hey
07:00 <@jcrew> silly girl, socks don't match your shirt
07:00 < StartUps> how hard would it be to create this site.. http://www.realdirect.com
07:01 < prettyrobots> I love that she's a "Word Processor"
07:01 <@jcrew> i only word process when people talk to me
07:02 <@krishna> how do you know people are talking to you before you process their words?
07:02 < livinded> epic720: I've used the server side
07:02 <@jcrew> oh coronado is down in san diego
07:02 < epic720> livinded: would you be able to help me figure out the client?
07:02 <@jcrew> krishna: i put the cart before the horse
07:02 < livinded> what do you need help figuring out?
07:03 < epic720> I tried including json_client.js in an html page but it has modules like require and assert
07:03 < StartUps> why isn't anyone talking to me :(
07:03 < epic720> StartUps > right click > save as...
07:03 <@jcrew> prettyrobots: thank you very much for this link, this is gold
07:04 < StartUps> ok..
07:04 <@jcrew> StartUps: because you're not asking about a scope, do you want every element from that site?  there are easier platforms to start from than nodejs - that may be why
07:04 < StartUps> epic720 i don't get it 
07:05 < StartUps> if you guys log in i just one main element 
07:05 <@jcrew> prettyrobots: "at least i didn't try to pick up the waiter"
07:05 < StartUps> but you need to log in to see
07:05 < StartUps> if you click search listings.. that is what i would like..
07:06 < StartUps> and if not node.. what do you suggest i build it in?
07:06 <@jcrew> if you want to just search listings it sounds like craigslist with a set of fields instead of a 'body' field 
07:06 < eddyb> whoever said try{...} slows down code was right
07:06 <@jcrew> eddyb: ?
07:06 < StartUps> but its need to pull data
07:07 < StartUps> and its a little more complicated the cl
07:07 < prettyrobots> @jcrew: The fork!
07:07 <@jcrew> what does that mean
07:07 < StartUps> did you log in?
07:08 <@jcrew> no, i can view listings though
07:08 < guy> Looking at http://nodejs.org/docs/v0.5.2/api/http.html#http.request
07:08 < guy> I don't understand how to set custom User-Agent
07:10 < StartUps> how how would it be to create something like that
07:10 < StartUps> if you click on a house see the data that also comes up?
07:10 <@jcrew> that's just like craigslist with more fields
07:11 < StartUps> ahh ok
07:11 <@jcrew> joomla is designed for it, drupal is too, etc.  look for a content management system with a product catalog
07:11 < StartUps> ok cool
07:11 < StartUps> do you know of any devs that could help me with this?
07:13 <@jcrew> prettyrobots: he's kind of harsh comparing her to a wet noodle you found on the floor
07:13 < jayarjo> hello guys, quick question here - is it possible to make child processes to continue to run after parent exits, the way I observe it her is that they quit as soon as parent quits
07:13 < prettyrobots> I can't wait to wake up in the morning and see the damage I've done by coding this late.
07:14 < prettyrobots> jayarjo: Good question.
07:15 < jayarjo> prettyrobots, glad you like it :) but any solution?
07:15 <@jcrew> jayarjo: child_process.exec ?
07:15 < prettyrobots> @jcrew: I don't think that will work. It's not like Bash exec.
07:15 < jayarjo> jcrew, yes I initiate child process with child_process.exec
07:16 <@sechrist> Epelii: is there anything with NPM that tells me what packages in a given package.json are outdated?
07:17 <@sechrist> Epelii: whoops mistake
07:17 < prettyrobots> I'm not seeing it in Child Process. If it's possible it'sa TIL.
07:19 < jayarjo> TIL?
07:19 < prettyrobots> Today I learned...
07:19 < prettyrobots> I'm sorry. I'm tired. I'll leave the IRC alone now.
07:21 < jayarjo> actually sometimes, do not know when and why, script leaves orphaned children behind, in fact initially I thought that was a default behavior and that I need to clean children myself, but now as I repeat my tests I can't repeat that anymore, children die as soon as parent dies
07:22 <@jcrew> what version of node?
07:23 < jayarjo> jcrew, v0.6.18
07:26 < guy> Looking at http://nodejs.org/docs/v0.5.2/api/http.html#http.request
07:26 < guy> I don't understand how to set custom User-Agent
07:26 < guy> Anyone care to explain?
07:30 <@jcrew> jayarjo: mine are staying alive, even if i force the main process to end
07:30 < epic720> Has anyone seen anything like this: http://restify.io/ in Node.js? I'd love to test my restful api locally.
07:30 < jayarjo> jcrew, now this is wierd :|
07:31 <@jcrew> jayarjo: i'm on 0.6.5
07:31 <@jcrew> guy: set a header?
07:31 < [AD]Turbo> hi there
07:32 < guy> jayarjo: I don't get the format. I tires {agent: 'TEST'}
07:32 < guy> though it looks like it expects object
07:32 < jayarjo> jcrew, hm… I did an upgrade recently… but that should not have been a reson
07:32  * Determinist grrrrs again
07:33 <@jcrew> guy: make the key look just like the header, and the value look just like the header value
07:34 < guy> jayarjo: {'User-Agent': 'TEST'}
07:34 < guy> didn't work either
07:34 <@jcrew> {"User-Agent":"Custom"}
07:34 < Determinist> seems like i'm going to have to go with Ruby for this project. Simply can't find a way to sign a piece of xml using nodejs
07:34 < Determinist> or at least I couldn't find any
07:34 <@jcrew> Determinist: the module mentioned earlier didn't work?
07:35 < jayarjo> guy: I prefer using this module: https://github.com/mikeal/request/ instead, kinda more intuitive
07:35 < Determinist> jcrew: that module requires RSA together with PKCS7. can't just use PKCS7 and I don't feel like ripping out just the PCKS7 part, as interesting an experiement as that may be.
07:35 < guy> https://gist.github.com/246b5a62f218af388e11
07:35 < guy> this is the code.
07:35 < guy> jayarjo: I need to keep it lightweight as much as possible.
07:36 <@krishna> user-agent isn't a option. it should be part of the headers option
07:36 <@jcrew> krishna: i think we assumed he would put that in the headers option
07:36 <@MerlinDMC> jcrew, but he didn't ;)
07:36 < guy> uh. silly.
07:37 <@jcrew> guy: your options should look like {headers:{"User-Agent":"custom"}}
07:37 <@jcrew> MerlinDMC: i know now, it was a good catch
07:40 <@simpan> where to post a bug in the sample scripts from source?
07:40 <@simpan> ops wrong channel :)
07:43 < guy> Does nodejs have any means to traverse DOM?
07:44 < guy> (I know it is possible to get jQuery, but are there any lightweight alternatives?)
07:44 <@jcrew> guy: there are jquery like modules
07:45 < epic720> why not use jQuery itself?
07:45 < epic720> are you not already in the browser?
07:45 <@jcrew> he's using http.request
07:45 < epic720> ahh
07:45 < epic720> sorry I missed that part, just wondering. :)
07:50 < guy> http://nodejs.org/api/https.html
07:50 < guy> so.. how do I pass cookies?
07:50 < guy> with a request (and save)
07:51 < guy> Never mind
07:51 < guy> Stupid question
08:02 < vincent___> hi. got an error "sslv3 alert handshake failure" when connecting with github.com/jdub/node-twitter, works on other machine. an idea why ?
08:09 <@MerlinDMC> vincent___, maybe your openssl lib bugged up?
08:15 < vincent___> upgraded all installed *ssl *tls pkgs, seems to work now
08:16 < nroot> I am trying to use LIKE operator in node-sqlite3 with % symbol and I am getting a SQLITE_ERROR error
08:17 < nroot> The same query works fine in sqlite3 shell, Has anyone seen this before ?
08:19 <@jcrew> http://www.youtube.com/watch?v=LXO-jKksQkM
08:19 <@jcrew> oops, sorry 
08:19 <@MerlinDMC> nroot, do you have a code example? ... i will use node-sqlite3 this weekend ... would be helpful before i stumble ppon the same problem
08:20 < nroot> db.each("SELECT title, source, attrkey, attrvalue FROM Facts WHERE title LIKE \%?\%;"
08:21 <@jcrew> nroot: does putting the % in the value work better?
08:22 < nroot> jcrew: I have tried that too, was just trying if escaping helps
08:31 < nroot> Got it. Instead of putting % in the query string, appending it in parameters works fine.
08:31 < nroot> "SELECT * from Y WHERE Z = ?", "%search%"
08:31 < nroot> thanks
08:32 < josemota> hi guys, I'm having a weird behavior using jasmine-node. `require` is acting weird when running a jasmine test suite. I have a gist that explains the problem: https://gist.github.com/3144960
08:32 < josemota> I'll put the logs in just a second
08:41 <@flexd> .
08:42 <@flexd> I've broken node and it does not like me (
08:42 <@flexd> :(
08:42 < epic720> has anyone used restify.js that can help me with something?
08:44 <@flexd> Hah, fixed it!
08:46 <@flexd> epic720: restify.js looks cool, thanks for mentioning it.. I haven't used it before so not much help :(
08:47 < epic720> I am currently working on a mongodb > restify node that transparently serves your mongodb collections
08:48 <@flexd> Cool.
08:48 < epic720> I've got GET working, need to figure out how to do PUT and DELETE
08:48 < epic720> but need to find out how to get data back from the PUT
08:49 < livinded> why would you want to transparently serve a database?
08:49 < livinded> but ya, restify is cool
08:50 < epic720> that way anything that is powered by a mongodb instance has a restful api
08:51 < epic720> security comes later when I make a way to add permissions at the stored javascript, collection, and field level.
08:51 < epic720> livinded: have you worked with restify?
08:52 < livinded> epic720: ya
08:53 < epic720> do you know how I get information passed with the request? specifically the data field.
08:53 < livinded> it should just be there
08:53 <@Industrial> console.log(request) ?
08:53 < epic720> where?
08:54 < livinded> in the request object
08:54 < epic720> in req.data? tried that
08:54 <@flexd> epic720: client.put('/foo', { hello: 'world' }, function(err, req, res, obj) { ?
08:54 <@flexd> err, thats the json client nevermind
08:54 < epic720> yeah
08:54 <@flexd> Just looking at the restify docs P
08:54 <@flexd> :p
08:54 < epic720> haha, I looked at the same thing moments ago.
08:55 <@flexd> but yeah
08:55 <@flexd> server.post('/hello', function create(req, res, next) {
08:55 <@flexd> post and put are the same time
08:55 <@flexd> s/time/thing
08:56 <@flexd> a PUT request is just a fancy name for ap ost
08:57 < epic720> when I send the PUT from ajax I am passing data
08:57 < epic720> data I want to insert into a collection
08:57 < epic720>  $.ajax({         url:host + ':' + port + request,         type: type,         data: data,...
08:57 < epic720> I am trying to find it on the server side.
08:57 < epic720> can't find it.
08:58 <@Industrial> req.body ? dunno :( not much help on a phone
08:58 <@Industrial> did you try printing the request object or debuggi.ng it to look inside?
08:59 < epic720> I am debugging
08:59 < epic720> and looking through all of the objects from the callback
08:59 < epic720> still don't see it
08:59 < epic720> in a post, doesn't the data from the ajax call get inserted into the query string?
09:00 <@Industrial> no its request body data
09:00 < epic720> not in there either.
09:01 < epic720> hmm
09:01 < epic720> well I have other means of getting it. Just thought through data on the client side was the best way to go...
09:08 < ramsin> Hello, I am using expressjs and swig. While rendring a template i,e html it throws me a error 500 Error: Cannot find module 'swig' --- could some help me with this 
09:08 < epic720> is swig in your node_modules?
09:09 < epic720> 'npm install swig' in your working directory?
09:10 < ramsin> ya it is there 
09:10 < epic720> hmm
09:10 < ramsin> how do i go about thjis ?
09:11 <@flexd> ramsin: did you require swig in your application?
09:11 <@flexd> I assume you have to do this, I do not know :p
09:23 < epic720> alright, I'm going to get some sleep now. 
09:23 < epic720> Thanks for help everyone, happy 720.
09:27 <@flexd> For someone who produces such great content, the daring fireball website (markdown syntax documentation) has a horrible unreadable design :(
09:28 <@ljharb> it's perfectly readable to me
09:28 <@ljharb> white on dark blue/gray? good contrast
09:34 <@flexd> My eyes just felt horrible reading it
09:34 <@flexd> maybe it's the  text size
09:35 <@flexd> I am at about 150% zoom now, a bit better
09:35 <@flexd> Might be the monitor too, stupid flickering vga cable :p
09:35 <@ljharb> vga? well yeah thats your problem
09:35 <@ljharb> DVI or go home
09:35 <@flexd> Yeah I know, old laptop at work
09:35 <@flexd> The dock only has one DVI and one vga
09:36 <@ljharb> and youre reading on not the digital screen?
09:36 <@flexd> the monitor supports dvi, vga and displayport, we usually use either dp or dvi
09:36 < ramsin> @flexd  i have required it 
09:36 <@flexd> Two monitors :)
09:36 < ramsin> but still it says module not found 
09:36 <@flexd> Identical HP 24" ones, they are quite nice
09:36 <@flexd> ramsin: Then I do not know, sorry :/
09:36 <@flexd> Check if your NODE_PATH is screwed up or something
09:49 <@flexd> Hm, so this is odd.. running my code works fine, running the same code in a mocha test... not so much
09:50 <@arcatan> that's always lovely
09:51 <@flexd> Failing on parsing some JSON i think, or html
09:51 <@flexd> Stupid
09:51 <@flexd>             console.log("Unauthenticated API version request, and the version is: " + result.result)
09:51 <@flexd> err
09:51 <@flexd> sorry
09:52 <@flexd> JSON.parse is the culprit hm :/
09:53 <@ljharb> in that case, JSON.parse isn't the culprit, the bad JSON you're parsing is.
09:53 <@ljharb> check it in http://jsonlint.com
09:53 < ramsin> @flexd right it was a mess up with the path i belive  ..... not this one is popped out events.js:48         throw arguments[1]; // Unhandled 'error' event          how do i get across ?
09:55 <@flexd> ramsin: Honestly, I have no idea. Do you have a something.on('error') handler somewhere?
09:56 <@flexd> Or are you lacking one? 
09:56 <@flexd> ljharb: Yeah... but it's the same JSON I am getting calling the code on my own
09:56 <@ljharb> flexd: check it. if it's invalid, some JSON parsers might allow it while others might reject it.
09:56 <@flexd> I am testing a library/module I am writing, which does a call to an API. Running a example file myself it works fine, running a test that has the exact same code fails :s
09:57 < ramsin> I think i have missed out one on erros let me get around
09:57 <@ljharb> if the JSON is invalid, they probably have different JSON.parse implementations, and one is stricter than the other. is the JSON valid?
09:57 <@flexd> It should be hm.
09:57 <@ljharb> check it so i can stop asking :-p
09:58 <@flexd> oh
09:58 <@flexd> NEVERMIND
09:58 <@flexd> :P
09:58 <@flexd> I feel stupid now.
09:58 <@flexd> 'http://boop/api_jsonrpc.php'
09:58 <@flexd> and
09:58 <@flexd> 'http://boop'
09:58 <@flexd> GUess which one worked :p
09:59 <@ljharb> there you go
10:01 <@flexd> I should probably add a check for that.
10:04 < ramsin> at last it works :) it was a wrong version of node probaby 
10:22 < chapel> op me
10:57 < adrianF> hey everybody im looking for a databse solution for a shop-system with a social character build up on nodejs. rdbms might be to slow, with document oriented nosql i might have to store redunant data. so i had a look at various graph databases (neo4j, orientdb, arangodb). i would like to store pure json values like in couchdb. because its a shop-system ACID and rollback functionality would be great. Does Anyone have some experiences in this field
11:09 < rvagg1> don't rule out an rdbms, even if for just a key-value store, they are battle hardened and not that slow, plus there's plenty of experience out there on scaling; consider facebook & tumblr with MySQL for starters
11:14 < adrianF> i though scaling is a lot harder with a rdbms than with nosql databases
11:15 < adrianF> and for sth like a shop-system (and social graph) i need a lot of joins
11:15 < rvagg1> adrianF: this is fascinating: https://github.com/tumblr/jetpants/blob/master/doc/VelocityEurope2011Presentation.pdf -- also checkout that github repo, has the tools they use to do what they describe
11:16 < rvagg1> adrianF: not that I'm advocating you do that, but it's interesting none the less
11:16 <@MerlinDMC> i like the scalability of riak ... for social links you could use riaks link feature
11:16 < adrianF> thx for the link i will have a look
11:17 < rvagg1> tumblr manage to maintain full relational sql even at massive scale, very impressive
11:17 < rvagg1> would give me nightmares if I had to manage that tho
11:17 < adrianF> riak sounds interesting to, but its not a graph databse?
11:17 <@flexd> Doesn't tumbler crash a lot and has performance problems? :p
11:18 <@flexd> I like MongoDB, that's the only nosql database I have really used
11:18 <@flexd> But not for anything big.
11:18 < adrianF> until now i used couchdb a lot
11:19 <@MerlinDMC> adrianF, key value ... mostly like mongodb or couchdb ... but scaling to new servers is easy (execute 1 command on the shell)
11:19 <@MerlinDMC> there is also a large comparsion riak vs couch, riak vs mongo on the basho wiki
11:21 < adrianF> when i outlined a scheme for a nosql databse like couch i ended up with a lot of redunant data
11:21 < adrianF> because i tried to avoid relations between documents
11:21 < rvagg1> hard to avoid tho isn't it?
11:22 < rvagg1> you have to manage all that redundancy (and everything else) in your software
11:22 < adrianF> yep
11:22 < adrianF> thats why i had a look at graph databases
11:22 < adrianF> seems to be the perfect solution for this
11:23 < adrianF> but in pure key value stores best practise is to avoid relations
11:23 < adrianF> to minimize the amount of queries
11:24 <@SubStack> graph databases are a neat idea but I've been less impressed with the implementations I've seen
11:24 <@flexd> You can do a ridiculous amount of queries per second on databases such as Redis though
11:25 <@SubStack> something like couch-style javascript map/reduces for graph traversals would rock
11:25 < adrianF> but disk space is cheaper than bandwich i think
11:25 < adrianF> or cpu-time
11:26 < adrianF> so its ok to make a copy of a product into an order (maybe an reduced product only with informations relevant for the order)
11:26 < adrianF> and not linking to the product itself
11:26 <@SubStack> just need a good approach for updating the previous cached weight values
11:26 < adrianF> substack: yes!
11:27 <@SubStack> and a way to do iterative updates for stuff like pagerank
11:29 <@SubStack> building a distributed influence network is way harder than it needs to be right now
11:29 < adrianF> SubStack: what graph dbs you had a look at?
11:30 <@SubStack> I looked at neo4j a little
11:31 < ebright> Hi. I'm trying to use cookie auth (using CouchDB and nano). I can login and set the cookie. Now I want to reuse it like so: var nano = require('nano')({ url : 'http://localhost:5984/alice', cookie: 'AuthSession=' + auth }). This works but leads to require('nano') all over the place..
11:31 < ebright> Isn't there a way to require nano once and then just set the Auth cookie per request?
11:31 <@SubStack> adrianF: and it was waaaaaay too tied to java
11:32 <@SubStack> s/was/is/ even
11:32 < ebright> or is there no overhead in require('nano') and is the above method the way to go..?
11:32 < adrianF> but its ultrafast anyway (even with rest-api over http)
11:32 <@SubStack> graph traversals are so much less clumsy as higher-order functions
11:32 <@SubStack> having written a traversal library or 2
11:33 < adrianF> for neo4j?
11:33 <@SubStack> no just traversal libs in javascript
11:33 < adrianF> ah ok
11:33 <@SubStack> and using stuff like traversable in haskell
11:36 <@flexd> I think I just published my first module o
11:36 <@flexd> :o
11:37 <@SubStack> congrats!
11:37 < adrianF> link
11:37 < RLa> rvagg1, any idea why they did not choose hash or modulus sharding? too hard to split and add more shards?
11:37 <@flexd> http://search.npmjs.org/#/zabbix :)
11:38 < adrianF> dont know whats this for but nice :D
11:38 <@SubStack> flexd: anything about the process that you think could be improved upon?
11:38 < rvagg1> RLa: I had the same question, probably just easier to do range sharding and rebalance with the tools they've developed... perhaps they had trouble coming up with a useful hash
11:38 <@flexd> SubStack: I just googeled npm publish or how to publish, found this https://gist.github.com/1318304 and it was very easy
11:38 <@SubStack> the process of publishing a module I mean
11:39 < RLa> also, i wonder how they avoid cross-shard queries
11:39 <@flexd> SubStack: I guess perhaps giving me a link to my module on npmjs or something like that at the end of the command could be nice?
11:39 < rvagg1> RLa: actually, I suspect that it may have more to do with having the ability to rebalance as they grow
11:39 < rvagg1> cause range sharding certainly gives you total flexibility to shard just the sections that are getting too big
11:40 < RLa> with hash sharding the hash function could be changed too
11:40 < RLa> hm, i think now it ends up quite same
11:40 <@flexd> adrianF: It's a very basic wrapper around/client using request.js to fetch stuff from Zabbix's API (a system like Nagios if you have heard of it, system monitoring). 
11:40 < adrianF> yes i know nagios
11:40 < adrianF> sounds interesting!
11:40 <@SubStack> flexd: right, I suppose urls are something in flux until the new npm site lands though
11:41 < adrianF> its only for the browser?
11:42 <@flexd> adrianF: What do you mean?
11:43 <@flexd> http://www.zabbix.com/documentation/1.8/api/host/get You can get all sorts of data out of it.. I plan on/am in the process of creating a new status board because the current one is no fun.
11:44 <@flexd> Wanted to make it a bit dynamic so instead of fetching data from zabbix directly on the client (there is a jquery plugin) I figured it would be nicer to fetch it once every minute serverside and push out the updates to connected clients with sockets.io or something similar :) That way I can have nodes dynamically appearing/disappearing using d3.js :D
11:47 < adrianF> ah ok that was my question if its a client or server side solution
11:49 < adrianF> but never heard of zabbix before, how does it perform against nagios?
11:50 < ebright> Anyone with experience with nano (couchdb diver) able to help me out?
11:51 < ebright> (in relation to reusing/setting Auth cookie)
11:52 < adrianF> nano is a session store??
11:53 < adrianF> ah ok couchdb driver :)
11:53 < ebright> it is (also) a module to help connect node with couchdb
11:53 < ebright> :)
11:54 < ebright> This works:
11:54 < ebright> var nano = require('nano')({ url : 'http://localhost:5984/alice', cookie: 'AuthSession=' + auth })
11:56 < ebright> But I would expect something like var nano = require('nano')('http://localhost:5984/alice') nano.request({cookie: 'AuthSession=' + auth } to also work, but I'm not having any luck
11:56 < ebright> + ')'
11:58 < adrianF> hm
11:59 < adrianF> alice is your db?
11:59 < ebright> yes
12:01 < adrianF> sorry no idea
12:01 < ebright> :)
12:01 < adrianF> but the require('nano') will be only performed the first time you call it
12:01 < adrianF> than its an object reference
12:01 < ebright> oh! that's interesting to know
12:02 < adrianF> even if you call require from two different files you will get back the same object
12:03 < caoglish> hello
12:03 < ebright> does that mean when I require('nano') at start of my "app.js" and then call it require('nano') at the start of some of my routes I don't suffer additional overhead..?
12:03 <@deoxxa> well that's not entirely accurate
12:04 <@deoxxa> you won't incur any additional overhead if they're both referencing the same "nano" module
12:04 <@deoxxa> but if you have a node_modules directory in both places, and they both contain a "nano" module, you will indeed require two separate modules
12:05 < ebright> I see
12:06 < ebright> That is not the case for me
12:08 <@deoxxa> i'm not really familiar with how nano works, so i'm not sure what parameters it takes
12:08 < ebright> still feels a bit weird though. Kinda get the idea I'm instantiating nano for every api call I make to my app by including a require('nano')({url:.. cookie:..}) call
12:09 < ebright> guess I'm just gonna role with it for now
12:09 < ebright> roll*
12:09 <@deoxxa> well i generally wouldn't do that
12:09 < ebright> me neither..
12:09 <@deoxxa> mainly because it looks like what you're saying
12:09 <@deoxxa> it makes it look like a separate instance each time
12:09 < ebright> :)
12:09 <@deoxxa> code clarity, man!
12:09  * deoxxa shakes fist
12:10 < ebright> yeah I totally agree - that's why I'm here asking about it :)
12:12 < ebright> but at the same time feel kinda stupid.. I'm rather new to node + server side programming. So I don't fully understand a number of things (such as how require works.. for example)
12:15 < adrianF> but there are some great articles about require in nodejs
12:15 < adrianF> and the module system itself
12:16 < ebright> yeah I just googled up on require - looking at 2 articles now
12:51 < sgimeno> Hi, Is it normal that installing a native module with node-gyp uses the debug build as default? 
12:54 < belezke> is it possible to get callback on http's res.write? it is possible to do it on socket's write
13:09 < drudge> isaacs: plans to sign the node installer for mac?
13:28 < eddyb> o_O
13:28 < eddyb> http://developer.chrome.com/trunk/apps/about_apps.html
13:30 < eddyb> OMG http://developer.chrome.com/trunk/apps/experimental.html
13:33 < circlicious> why ius everyone @?
13:33 < circlicious> i took a look at forever, can it reload server when there is a file change too?
13:33 < eddyb> circlicious: you could probably have a FileWatcher
13:35 <@emilsedgh> my application is working fine, except that the logger is slow at writing logs. it has been running for less tha 48 hours and at this moment, logs events of two hours ago. im using a writable stream and simply stream.write() log information. the amount of data i write into it is really small (a few lines per second at most)
13:36 < eddyb> circlicious: now I'm curious too
13:36 <@emilsedgh> is there anything im doing wrong? do you want me to paste the code? maybe i should use another way of writing to a file?
13:36 < eddyb> ofc I'm not OP :(
13:40 < Viehzeug> hi.. i could use a little help with express, anybody got time?
13:40 <@Bonuspunkt> op plz
13:40 <@Bonuspunkt> oh wait :D
13:41 <@emilsedgh> Viehzeug: the rule of thumb is...dont ask to ask, just ask.
13:41 <@asherkin> an admin party is all fun and games until someone bans *!*@*
13:41 < Viehzeug> emilsedgh: ok ;) thanks
13:43 < Viehzeug> i have problems getting express to catch errors. my ap.use(function(err,req,res,next)....) never gets called (running 3.0.0beta7)
13:43 < Viehzeug> app.use*
13:44 <@emilsedgh> Viehzeug: also there's #express (and i dont know about your case)
13:44 < Viehzeug> emilsedgh: thanks, once again, i'm gonna check it out
13:48 < ramsin> hi 
13:48 < ramsin> 500 TypeError: Object false has no method 'indexOf' 
13:49 < ramsin> stuck with this 
13:49 < ramsin> what could be the reason ?
13:50 <@Bonuspunkt> > false.indexOf('!')
13:50 <@Bonuspunkt> TypeError: Object false has no method 'indexOf'
13:58 < circlicious> can you tell me a quick way to crash my program? i wanna check whether supervisor works fine or not
13:59 < circlicious> syntax error is not enough
13:59 <@hillerstorm> throw "awd"?
13:59 <@hillerstorm> :)
13:59 <@hillerstorm> unless you catch it
13:59 < circlicious> finek
13:59 < circlicious> thx
14:02 < circlicious> wow forever is a big one
14:06 < circlicious> forever is a bit more easy to use though, but it cant pick up changes?
14:07 < wink_> forever will pick up changes fwiw
14:07 <@slickplaid> moo
14:08 < circlicious> doesnt seems to
14:08 < circlicious> forever start index.js - do i need to do more to make it pick up code changes?
14:10 < circlicious> ah the -w flag, pretty cool
14:10 < circlicious> supervisor is quite lightweight though
14:13 < circlicious> now what if forever crashes? :P what are the proper measures to take for that
14:17 < wbw72> any1 using Restify with node 0.8 on MacOSX?
14:20 < drudge> what is newline slurping
14:31 <@deoxxa> drudge: you mean aside from an awesome dance?
14:31 < drudge> yeah
14:31 < drudge> ejs refers to 'newline slurping', not sure what this actually means
14:32 <@deoxxa> basically a newline after a closing tag will be "slurped", i.e. eaten by the parser
14:32 <@deoxxa> it's so that it behaves the same way as, ugh, php
14:33 < wbw72> I just installed node 0.8.x and now my restify app gives an DNode error where it before did not, it keeps running though. Just wondering if this is 'normal' behavior on macos?
14:54 <@masch> is there already a good noise-generating package for nodejs?
15:13 < timkuijsten> wbw72: when i upgraded from 0.6 to 0.8 i had to reinstall my node_modules, since some of them get compiled i gues..
15:13 < timkuijsten> not sure if there was a problem with restify itself or some other npm in my app
15:18 < deximer> Question regarding node-jasmine-dom: I'm running "jasmine-dom --runner examples/runner-pass.html --format junit --output javascript_results.xml" and getting no results, just a warning about "sys" module becoming "util"
15:18 < Comadrin> hey guys, is there a way to remove new lines more efficiently. Here is how i am doing it: http://codepad.org/1f9OkhLz 
15:19 < Comadrin> some strings can be very long
15:20 < deximer> Comadrin: Does string.replace() not work for you?
15:21 < Comadrin> i need to keep at least 3 new lines
15:21 < deximer> Ah, looking again...
15:23 < Comadrin> i am trying to figure out how to do it via .replaceAll(regex, String)  but so far i have not come up with anything useful 
15:25 < Comadrin> the problem with my code is that if the string is like 1 mill characters long that loop will work "forever"
15:27 < deximer> Comadrin: Maybe split the string on newline and then recombine the array? You know the number of newlines by the elements in the array
15:28 < dominictarr> Comadrin, are you tring to replace many elements of a string?
15:28 < dominictarr> you may want to do this with streaming.
15:29 < dominictarr> the simple way to replace all is
15:29 < dominictarr> string.split(regexp).join(string)
15:29 < Comadrin> the code is reading text file, cleans the text, recombines it, and then removes extra new lines
15:29 < dominictarr> and the file may me very large?
15:29 < Comadrin> hmm, let me check this out
15:30 < Comadrin> yea
15:30 < deximer> He needs to leave three newlines
15:30 < dominictarr> at the end?
15:30 < Almindor> is there a way to have node.js emit longer backtraces on uncought exceptions?
15:30 < dominictarr> Almindor, yes there is a commandline option
15:30 < dominictarr> man node
15:30 < Almindor> thanks
15:30 <@qbit> manman node
15:31 < dominictarr> think you can set a properly on Error too
15:31 < deximer> I think his best bet is string.split and then recombine as he sees fit
15:32 < Comadrin> i am doing a book parser - read text with multiple new lines or no new lines at all, clean the text but at the end i want to check if the  string does not have too many new line (max is 3) 
15:32 < Comadrin> books vary in size
15:33 < Comadrin> i have not coded in ages, thus what i came up with is not really all that fast but it does the job
15:33 < Comadrin> i am trying to figure out if i can speed it up
15:33 < dominictarr> ah okay. I have some code that might help
15:33 < Comadrin> i tried using StringBuilder
15:33 < Comadrin> ok
15:34 < deximer> Comadrin: myArray = string.split('\n'); myArray.length
15:35 < dominictarr> Comadrin,  https://github.com/dominictarr/event-stream#split-matcher
15:35 < dominictarr> with this you can split the book up perline as you read it.
15:36 < Comadrin> let me look at it. thank you for the info. deximer = your way would cut the work in a half since i would split the next into lines thus i would not have to iterate through each character
15:36 < dominictarr> fs.createReadStream(bookfile).pipe(es.split()).pipe(es.mapSync(filterTooManyLines)).pipe(fs.createWriteStream(newBookFile))
15:37 <@mmalecki[out]> dominictarr: !!!
15:37 < Comadrin> thanks guys
15:37 < dominictarr> although if there are no newlines it will give you massive chunks. though, surely, it should have newlines for chapters or paragraphs.
15:37 < dominictarr> mmalecki, hey whats up?
15:38 <@mmalecki> dominictarr: did you decide if you want to go to Switzerland?
15:38 < Comadrin> for pointing me in the right direction
15:38 < Comadrin> dominictarr: the funny part is that some of text files got all damn next in one line
15:38 < Comadrin> hehe
15:38 < Comadrin> i do a subjective parsing in that case ;-)
15:39 < Comadrin> *text
15:39 < dominictarr> with a fancy regexp you can probably match on white space after 100 words or something.
15:40 < dominictarr> how efficient that will be I don't know.
15:41 < Comadrin> lol, that is what i did. I use regex to look for open and close brackets, count number of periods, look for numbers that might represent chapters, you know the usual stuff
15:41 < dominictarr> oh, cool.
15:42 < dominictarr> I know there are algorithms for optimal line breaking.
15:42 < dominictarr> would be cool to have a reformat text stream.
15:42 < Comadrin> fancy! i got a few books in text format and it would take hours to go through them line by line
15:42 < dominictarr> so you could say, fit this book into 60 chars wide
15:43 <@deoxxa> ok, node-gyp. what the hell is up?
15:43 < Comadrin> so i decided to pull up my faithful notepad++, brush up on my java coding, and make it work
15:44 < dominictarr> http://www.bramstein.com/projects/typeset/
15:44 < dominictarr> mmalecki, 
15:44 < dominictarr> okay, okay. 
15:44 < dominictarr> I just decided.
15:45 < dominictarr> switzerland can wait.
15:45 < Comadrin> dominictarr: that is cool. I will definitely read it
15:45 < dominictarr> cool, let me know how it goes.
15:45 <@mmalecki> dominictarr: that's great since I have ~4 l of vodka and over 40 beers in my fridge.
15:45 < Comadrin> ;-)
15:46 <@mmalecki> dominictarr: when are you flying in then?
15:47 < dominictarr> I'm gonna hang out in tubingen a few more days, 
15:47 < dominictarr> I think I'll come by train, so I can see the sights a long the way.
15:47 <@mmalecki> all right. so, basically, you need to get off at Poznan Central station, tell me when and I'll pick you up
15:48 < dominictarr> Comadrin, my ex-girlfriend was trained in editing, so I know all about how anal typesetting (shuffeling about letters) gets.
15:49 < dominictarr> like, they try and avoid "rivers" -- having gaps between letters line up on multiple lines, which is distracting.
15:50 < Comadrin> yes, it is tedious. Especially if the original text comes in a totally un-formatted and chaos like state 
15:50 < Comadrin> a lot of if, else if statements
15:50 < Comadrin> ;-)
15:50 <@mmalecki> can anyone recommend any airbnb in Prague?
15:50 < dominictarr> is it english text, or programming?
15:51 < dominictarr> code i mean.
15:51 < Comadrin> example of text: something something something/n          .. something something something
15:51 < dominictarr> or legal text?
15:51 < Comadrin> it is english/russian
15:51 < Comadrin> technical writing 
15:51 < dominictarr> aha
15:51 < deximer> Comadrin: For that kind of processing I like Python
15:52 < Comadrin> well, i pulled out a book on lisp and python ;-) (actively looking at the books)
15:53 < Comadrin> thinking i should lean it to get the stuff done
15:53 < circlicious> i am going mad :/
15:54 < Comadrin> than, i though: since i coded a bit five years ago in java it would be easier getting back into coding using something familiar 
15:54 < Comadrin> it might have been a mistake ;-) my code keeps growing and growing but the task is still not accomplished 
15:57 < Comadrin> i do not remember regex when i learned java. so, it is easier with regex. however it is still pain. 
15:57 <@deoxxa> so uh, node-gyp is really annoying
16:01 <@jcrew> dominictarr: is that your article?
16:06 < dominictarr> jcrew, no, I just googled it.
16:07 <@owen1> how do u guys change your db in your test to be test db?
16:07 <@owen1> do you use any package for that?
16:07 <@hatch> owen1, I use an environment variable to indicate a test
16:08 <@hatch> the script then supplies different db information
16:08 <@owen1> hatch: nice. do u have any sample project on github?
16:08 <@owen1> NODE_ENV=test +
16:09 <@owen1> ?
16:09 < wbw72> timkuijsten: I have reinstalled the packages, before I did that the app crashed, now it just spits out a dnode error on startup
16:09 <@hatch> owen1, sorry no I don't but yeah that's it basically 
16:10 < TheEmpath> YOU DONT OWN ME
16:10 < TheEmpath> oops
16:14 < pspeter3> I'm trying to install node.js on my redhat box. By default it works and installs in /usr/local/bin/ which means that when I try to install express globally it fails and then when I do sudo npm install -g express, I get that there is no command called npm. Help?
16:15 <@owen1> hatch: actually, why do i need env variables? let's say my tests are in test/end-2-end/ and i run them with node test/end-2-end/*   is it ok to hardcode my db to be the test db?
16:15 <@jcrew> pspeter3: the -g flag is for binaries, it doesn't install the module (in this case) globally
16:15 <@jcrew> owen1: just use a config file
16:15 < pspeter3> jcrew: Oh I thought npm -g meant that it installed globally. At least that's the behavior I got for a while. I would still like express to be a global binary
16:16 <@hatch> owen1, well it's just one way of doing it :) sure you could do that too
16:16 <@jcrew> pspeter3: afaik express isn't a binary, it comes across so that you can 'require' it.  by binary i mean something like node supervisor
16:16 <@owen1> hatch: got it. thanks
16:17 < pspeter3> jcrew: what about grunt?
16:17 <@jcrew> hatch: if you're using source control it makes it kind of a pain to put that directly into your script, if you use a config file then it should just work when you push
16:18 <@hatch> jcrew, the env variable tells the script which starts the server which database config file to load
16:18 <@jcrew> pspeter3: also looks like a binary that you'd use -g for
16:18 < pspeter3> jcrew: so then I get back to the issue of needing sudo npm install to work
16:19 <@jcrew> hatch: i'm aware, it's a better way to do it than to hardcode in the script.  if he puts the info directly in the script then he has to change it everytime he pushes to source control
16:20 <@jcrew> pspeter3: do an npm install express in the directory where you require it
16:20 <@hatch> jcrew, I'm not sure I follow?.there are two database configuration files
16:20 <@jcrew> by require it i mean where your script calls 'require ("express");'
16:20 <@hatch> so both are checked into source control
16:20 < pspeter3> jcrew: Ok but I want grunt too. I want -g to work. Is there a flag I can use when installing node so it is installed globally instead of locally?
16:20 < mars__> I use LDAP in my server,  Error: /home/mars/node_modules/LDAP/build/Release/LDAP.node: undefined symbol: ev_default_loop_ptr, node was compiled --static, if dynamic LDAP works well
16:21 < sigwhite> I've heard inflamatory remarks about connect and express. Are there superior alternatives I'm unaware of or is this a religious thing?
16:22 <@jcrew> hatch: if you have a dev/prod environment and you code in dev, push to prod.  when you push from dev to prod you're going to have to go to prod to change the connection, and you'll have to do that everytime you push to prod.  if you put it in a config file then you just manually create the config files and once it works you don't ever have to worry about changing your script after you push to prod
16:23 <@hatch> jcrew, sorry I think you're misunderstanding 
16:24 <@jcrew> why do you think that?  i think owen's statement of: 'is it ok to hardcode my db to be the test db?
16:24 <@jcrew> is indicative that he wants to put it directly in the script
16:26 < pspeter3> is it possible to install node to /usr/bin instead of /usr/local/bin?
16:27 <@Owner> https://github.com/joyent/node/wiki/Installation
16:45 <@isaacs> drudge: yes, that's on the todo list.
16:45 <@isaacs> drudge: i just haven't gotten to it
16:49 <@CIA-93> node: Fedor Indutny master * r0cf2354 / (lib/tls.js test/simple/test-tls-check-server-identity.js): tls: localhost is valid against identity-check - http://git.io/6MH0qQ
16:50 <@owen1> sigwhite: use node.js without frameworks. it's great building websites. https://github.com/oren/node-website-template this template is based on the new npm website that is written by isaacs. 
16:51 <@owen1> sigwhite: i know that connect is an attempt to immitate the concept of rack from the ruby world. i heard that in js you don't need that. i am not sure why but maybe someone here can enlight me.
16:53 <@owen1> maybe connect/rack is not needed since it's in js it's easy to 'decorate' the request by adding whatever keys to the request object?
16:53 <@CIA-93> node: isaacs v0.9.0-release * r1b9f78e / (AUTHORS ChangeLog src/node_version.h): 2012.07.20, Version 0.9.0 (Unstable) - http://git.io/ZHr85A
16:58 < pspeter3> Is it better practice to do module.exports = function(variables...) {}; or var foo = function(variables...) {}; module.exports = foo;
16:58 <@tbranyen> pspeter3: var foo = module.exports = function() { }; best of both worlds :)
16:58 <@owen1> pspeter3: i think it's the same
16:59 < pspeter3> tbranyen: thanks
16:59 <@jcrew> lol
17:01 < hillerstorm> the bot still working?
17:01 < hillerstorm> op pls
17:01 < hillerstorm> op plz
17:01 < hillerstorm> :<
17:01 < hillerstorm> nope
17:02 <@mmalecki> there ya go
17:08 <@CIA-93> node: Fedor Indutny v0.8 * re43fe5c / (lib/http.js lib/https.js): Revert "http/https: pass request to .createConnection()" - http://git.io/TaIqlg
17:08 <@CIA-93> node: Fedor Indutny v0.8 * r4aa09d1 / (lib/tls.js test/simple/test-tls-check-server-identity.js): tls: localhost is valid against identity-check - http://git.io/2GFQOw
17:09 < sigwhite> owen1: I was wondering because I thought socket.io and http-proxy for example seem to assume you're using express/connect
17:13 <@CIA-93> node: Fedor Indutny v0.8 * r5950db1 / (lib/tls.js test/simple/test-tls-sni-server-client.js): tls: revert accidental API change - http://git.io/v6u23A
17:14 <@CIA-93> node: Fedor Indutny master * r93d496a / (lib/tls.js test/simple/test-tls-sni-server-client.js): tls: revert accidental API change - http://git.io/iW6Qzg
17:20 < gilligan_> evening
17:21 <@Owner> high
17:22 < gilligan_> is anyone here perhaps using jasmine-node ? I'm a total newbie to node/js in general and i can't figure out how I can use this with existing projects because it won't load the various libs that i am using in my tests . There is the requirejs option but i'm a bit at loss
17:22 < Wes-> aw. Why do all these people get ops, but not me? :sadface:
17:23 -!- tbranyen changed the topic of #Node.js to: spotify:track:7Ls435HHHD1dXnBedB4qyV
17:23 <@owen1> sigwhite: that's a good question
17:24 < sigwhite> owen1: turns out socket.io supports http too.
17:24 <@Owner> Wes-~# no earthly idea
17:24 <@Owner> gilligan_~# have you made a packages.json ?
17:24 -!- Gregor changed the topic of #Node.js to: Why are we all operators? Because Node.js is communism. Do not question the Node. Just enjoy its ECMAliciousness.
17:25 < sigwhite> More power to the proletariat!
17:25 < clarle> Node.js is literally OP.
17:25 < gilligan_> Owner, no.. if you could point me in the right direction that would be great ;)
17:26 <@Owner> ill show you a basic one, hopefully it helps you.  once you make it in your project directory you can do npm install .  and it will install your dependencies locally
17:27 <@Owner> if that is the issue
17:27 < timeturn> clarle: op?
17:27 <@owen1> sigwhite: are u sure socketi.io rely on express?
17:27 < sigwhite> tbranyen: chilly.
17:27 <@Owner> socket.io doesnt require express
17:27 < sigwhite> owen1: As I said. Turns out it can deal with naked http too
17:27 <@tbranyen> sigwhite: it owsn
17:28 < gilligan_> Owner, alright
17:28 < DTrejo> naked
17:28 <@Owner> gilligan_~# http://pastebin.com/RqAgW0yH
17:29 < sigwhite> tbranyen: Different mood. spotify:track:6Ji50pW7Df7g19KF23m59m
17:29 <@masch> is there already a good noise-generating package for nodejs?
17:30 <@Owner> masch~# http://search.npmjs.org/
17:30 < sigwhite> tbranyen: Also, derezzed: spotify:track:5NSYcuEqEMpy2TMR4q05kK
17:31 < gilligan_> Owner, i think this does not really relate to my problem though.. the project setup in itself is just fine and i can run the jasmine tests through maven using the jasmine maven pugin just fine - in that plugin i can specify the libs that need to be included. I would like to be able to run the tests without maven using jasmine-node though.. but that doesn't work because it doesn't load/include backbone, underscore, the other stuff i use ..
17:32 <@Owner> gilligan_~# wow, yeha i havent tried any of that
17:32 < gilligan_> ok
17:32 <@tbranyen> sigwhite: yea the tron soundtrack is p good
17:33 < sigwhite> tbranyen: The remix is better tho
17:33 < brainss> masch: crypto has a randomBytes function. If that's noisy enough
17:33 < brainss> masch: http://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback
17:33 <@masch> brainss: need something like libnoise for generate a heightmap. 
17:34 <@masch> there seems to be a libnoise implementation in js thats not on npm :/
17:34 <@Owner> gilligan_~# you should ask again though...someone else may have a clue?  try in #nodejitsu too maybe?
17:35 < affirmed> anyone here?
17:35 < fritzy> nope
17:35 < fritzy> just 300 lurkers
17:36 < affirmed> Ha. Asked that before the sidebar loaded. 
17:36 <@Owner> groink!
17:36 < timeturn> op!
17:36 < timeturn> :)
17:37 <@PigDude> that's more like it Owner ;^)
17:37 <@Owner> i like coding and shit but my user interfaces always remain trash and its really holding me back
17:37 < epic720> does anyone have experience with restify?
17:37 < DTrejo> do you lose op when you disconnect and then reconnect?
17:37 < affirmed> So quick question to anyone who might be able to help... i'm trying to install node on a unix shared host, and I get a syntax error when i run ./configuration
17:37 <@PigDude> Owner, LANGUAGE
17:37 -!- Owner was kicked from #Node.js by PigDude [Owner]
17:37 < epic720> I'm trying to figure out how to get data from the request.
17:38 <@PigDude> i know i'm gonna regret that
17:38 <@PigDude> timeturn, 
17:38 <@timeturn> :D
17:38 <@timeturn> yahoo!
17:38 < addisonj> affirmed: pastebin it
17:38 < Owner> affirmed~# what error
17:38 <@PigDude> Owner, all fixed ;)
17:39 < affirmed> "http://pastebin.com/VjRxygRM
17:39 < addisonj> instead of ./configure do "bash configure"
17:39 < addisonj> maybe using dash?
17:40 <@Owner> the prompt says bash-3.2
17:41 <@Owner> addisonj~# hey you can always o['default_configuration'] = 'Release'   on that line instead
17:41 -!- PigDude changed the topic of #Node.js to: Rhino project official channel: JavaScript on the JVM | Website: http://www.mozilla.org/rhino/ | Source: https://github.com/mozilla/rhino
17:41 <@Owner> see if that lets it move along, otherwise it will give another error for sure
17:42 <@Gregor> pig: Oh you.
17:42 <@Gregor> Erm.
17:42 <@PigDude> hehe
17:42 <@Gregor> PigDude: Oh, nick completion.
17:44 <@Owner> Gregor~# thanks
17:45 <+addisonj> thanks :)
17:45 <+addisonj> I like my voice to be heard
17:45 <@Gregor> timeturn: Y'see, this is why the USSR fell.
17:45 <@Gregor> Because of people like you.
17:45 <@Owner> im reporting him to freenode
17:46 <@PigDude> hehe
17:46 <@Gregor> *whew*
17:46 <@Owner> tomaw~# please k-line timeturn and PigDude
17:47 <@Owner> thanks
17:47 < DTrejo> who are these people...
17:47 <@Gregor> I would like to know who decided that opping the entire channel was a good idea, but until then, I'm not going to go against their wishes X-D
17:48 <@CIA-93> node: Fedor Indutny v0.8 * r50122fe / (lib/tls.js test/simple/test-tls-client-verify.js): tls: fix 'hostless' tls connection verification - http://git.io/YOzb7A
17:48 < PigDude> apparently i'm no longer a channel operator
17:48 < PigDude> DTrejo, I was drawn by the sight-seeing
17:48 < DTrejo> decent number of the ops are legit ppl
17:48 < PigDude> DTrejo, but i'm happy to answer your node.js questions
17:48 < PigDude> hehe
17:48 < PigDude> Gregor, well i was trying to de-op everyone but i seem to have hit some glitch
17:48 < PigDude> Gregor, i'm the trotsky to your stalin
17:48 < epic720_> anyone have any experience with restify?
17:49 <@Owner> Gregor~# fix topic sir :)
17:49 -!- Gregor changed the topic of #Node.js to: http://nodejs.org Node.js is a JavaScript platform for fast, scalable network applications. It is scripting beyond your wildest dreams of avarice.
17:50 <@Gregor> Owner: It's not REALLY my topic to fix >_>
17:50 < PigDude> Gregor, the old topic was more accurate
17:50 <@Owner> Gregor~# thanks
17:51 -!- Gregor changed the topic of #Node.js to: http://nodejs.org Node.js is a JavaScript platform for fast, scalable network applications. Node.js is kosher and halal, made of 100% pure rainbows; t is scripting beyond your wildest dreams of avarice.
17:51 -!- Gregor changed the topic of #Node.js to: http://nodejs.org Node.js is a JavaScript platform for fast, scalable network applications. Node.js is kosher and halal, made of 100% pure rainbows; it is scripting beyond your wildest dreams of avarice.
17:52 < timeturn> wow
17:53 <@CIA-93> node: Fedor Indutny master * r92e7433 / (lib/tls.js test/simple/test-tls-client-verify.js): tls: fix 'hostless' tls connection verification - http://git.io/8-EoRw
17:53 <@CIA-93> node: Fedor Indutny master * r1ccdde9 / (lib/http.js lib/https.js): Revert "http/https: pass request to .createConnection()" - http://git.io/ztTKxg
17:54 -!- Gregor changed the topic of #Node.js to: http://nodejs.org | Node.js is a JavaScript platform for fast, scalable network applications. | Node.js is kosher and halal, made of 100% pure rainbows; it is scripting beyond your wildest dreams of avarice.
18:01 <@Guest34911> holy fuck
18:01 <@Guest34911> in node 0.4 and 0.6 I inherited from EventEmitter
18:02 <@Guest34911> and used a field `domain'
18:02 <@Guest34911> apparently, that's now breaking with 0.8
18:02 <@tuhoojabotti> hehe
18:02 <@tuhoojabotti> Astro: 0.8.0 introduced domains.
18:02 <@Astro> yeah :(
18:02 <@Guest86510> but they didn't encapsulate/hide that stuff
18:02 <@Owner> search and replace?
18:03 <@tuhoojabotti> Add a ticket on Github?
18:03 <@Guest86510> in all the projects that depend on my library? :(
18:03 <@tuhoojabotti> Also we have ops again \o/
18:04 <@Gregor> Guest86510: If it's desperate you could build something that “inherits” EventEmitter with a has-a interface instead of an is-a interface and proxies all the relevant members.
18:05 <@Guest86510> Gregor: true, composition instead of inheritance
18:05 < alex4nder> i don't always embed functionality, but when I do, I composite.
18:07 <@CIA-93> node: Fedor Indutny master * r85185bb / lib/tls.js : tls: pass linting - http://git.io/d_EUoQ
18:07 <@CIA-93> node: Fedor Indutny v0.8 * r42c6952 / lib/tls.js : tls: pass linting - http://git.io/eyclsg
18:08 <@Owner> Gregor saves the day once again!
18:08 <@CIA-93> node: isaacs master * re16d506 / (59 files in 7 dirs): uv: Upgrade to ad382bca - http://git.io/9Dv2Ww
18:09 <@CIA-93> node: isaacs v0.9.0-release * rf9b237f / (AUTHORS ChangeLog src/node_version.h): 2012.07.20, Version 0.9.0 (Unstable) - http://git.io/fup8hg
18:09 <@Guest86510> for the record, it's https://github.com/astro/node-xmpp/issues/78
18:19 < DTrejo> Astro: i see the problem now :(
18:24 <@konobi> SubStack: did you mention a deployment tool for node recently?
18:24 < lohkey> fleet
18:26 < DTrejo> npm docs fleet
18:26 < npmbro> DTrejo: Please see http://github.com/substack/fleet#readme
18:26 < DTrejo> npm docs pushover
18:26 < npmbro> DTrejo: Please see http://github.com/substack/pushover#readme
18:26 < DTrejo> npm docs marx
18:26 < npmbro> DTrejo: Please see http://github.com/substack/node-marx#readme
18:26 < DTrejo> ^ konobi
18:29 <@konobi> DTrejo: seems somewhat disparate
18:29 < vrlogrs> hey guys ..
18:30 < vrlogrs> had a question about websockets ..
18:30 < DTrejo> seaport also
18:30 < vrlogrs> is there a way i can explicitly close a websocket from server-side?
18:30 < vrlogrs> right now i have connection.on('close', ..) but that's client-side
18:31 <@konobi> DTrejo: nothing to roll that all up?
18:31 < vrlogrs> i want to have the server be able to close the connection
18:31 < DTrejo> I don't think so
18:31 < DTrejo> maybe seaport deos
18:31 < DTrejo> npm docs seaport
18:31 < npmbro> DTrejo: Please see http://github.com/substack/seaport#readme
18:32 < DTrejo> no i dunno
18:37 < vrlogrs> anybody have any ideas?
18:46 < Nopik> btw. i've just published small ruby script to enhance node.js stack traces when using coffeescript.. https://github.com/Nopik/stacktrace-enhancer
18:49 <@Gregor> Nopik: Good lord, that sentence was a linguistic nightmare, from a software perspective.
18:49 < legind> how do I perform arithmetic operations on large (>32bit) integers represented in a buffer?
18:49 < Nopik> Gregor: programming is not an easy task ;)
18:50 < EhevuTov_> maxogden and mikeal have a quick cameo in this CfA video: http://vimeo.com/44537196 (1:11)
18:50 < Nopik> still, i've found it quite useful when trying to figure out which js line number corresponds to my coffeescript input
18:51 < burgalon> what's the best way to figure out the most current/up-to-date library "for the job"? There seems to be a lot of libraries which are popular on npm + lots of watchers on github, but using old APIs and lots of pending open issues on Github. Any advice? 
18:51 <@ljharb> the best way to get line numbers to match is to write javascript in the first place
18:51 < burgalon> More specifically I'm looking for a HTTP library ... maybe restler
18:51 <@CIA-93> node: isaacs master * rf9b237f / (AUTHORS ChangeLog src/node_version.h): 2012.07.20, Version 0.9.0 (Unstable) - http://git.io/fup8hg
18:51 <@CIA-93> node: isaacs master * r839dfe7 / (AUTHORS ChangeLog src/node_version.h): Merge branch 'v0.9.0-release' - http://git.io/_gqjjw
18:51 <@CIA-93> node: isaacs master * rec299a1 / src/node_version.h : Now working on 0.9.0 - http://git.io/xakUsQ
18:51 < Nopik> ljharb: yeah, but then you'll end with too many line numbers..
18:52 <@ljharb> i don't know what kind of JS you write, but mine's pretty succinct
18:52 < revnoah> Can anyone recommend the best practices for loading content into a specific div using node.js, express and jade? I have a basic test working well with jquery ajax but I'm wondering if there is a better way that respects routes.  The page will have an ongoing activity stream via socket.io so I would like to keep page refreshes to an absolute minimum. I'm already using inheritance with jade, btw, to keep my templ
18:52 < revnoah> ate fragments separate, easy to load and manage.
18:56 <@CIA-93> node: isaacs master * r5bb2fe6 / doc/blog/release/v0.9.0.md : Blog post about 0.9.0 - http://git.io/2dh4sA
19:10 < legind> omg yes! <3 SubStack thanks for implementing bigint
19:10 < legind> will help with implementing my little project of implementing OTR natively in node
19:24 < ddod> Is anyone else having problems with socket.io 404ing?
19:24 < ddod> It seems to have just started for me yesterday
19:24 < ddod> "GET http://co-optimal.com/socket.io/socket.io.js 404 (Not Found)"
19:25 < chimeracoder> Is there an npm equivalent to Python's pip freeze? I'd rather not have to type out every version number for each of my packages, since they're all installed in a local project directory…
19:28 < chimeracoder> (in other words, running "pip freeze > requirements.txt" is a one-liner to specify all dependencies of a project)
19:28 < chimeracoder> does anything like this exist with npm?
19:30 <@masch> chimeracoder: i dont think so
19:31 < chimeracoder> :-(
19:32 < martin__> hi
19:32 < martin__> looking for some assistance in setting up a private npm registry
19:34 <@owen1> what's the most used mysql client for node?
19:35 < legind> owen1: I'm a fan of just "mysql" - I was using "node-mysql" previously and I switched over
19:42 < blueadept> anyone know a good ascsii generator that takes a picture as an input?
19:42 < blueadept> something written in node would be cool
19:42 < blueadept> but any language works
19:43 < tiglionabbit> I'm trying to use npm search, but it breaks: https://gist.github.com/3152807
19:44 < benatkin> with color customization of util.inspect, I think it will finally be the Year of Node on the Desktop
19:44 < benatkin> http://blog.nodejs.org/2012/07/20/version-0-9-0-unstable/
19:46 < jrajav> I like colors
19:46 < stephenw> node on the desktop? sounds interesting?!
19:46 < benatkin> jrajav: yeah, me too. also great to see the performance improvements for tls
19:47 < jrajav> Almost makes me want to start running unstable
19:48 < hydrozen> I know its not super complicated, but is there an existing lib to compare one json document against a 'template' json document and remove from it all the keys that are not present in the template document?
19:48 < stephenw> whats the new stuff around the desktop?
19:48 < benatkin> stephenw: I was just making a joke, that node had finally reached some arbitrary milestone
19:48 < benatkin> stephenw: http://en.wikipedia.org/wiki/Desktop_Linux#Year_of_Desktop_Linux
19:50 < chimeracoder> stephenw: 'X on the desktop' ~= 'Chinese Democracy' ~= 'Duke Nukem Forever'
19:50 < chimeracoder> (though I guess we have to stop using that last one, after last summer...)
19:51 < stephenw> oh! i see sorry! thought it might be an evolution of node rendering into the desktop! - wundows 8 metro??
19:52 < benatkin> stephenw: no need to apoligize, you were trying to be constructive/productive. I was goofing off
19:53 < jrajav> chimeracoder: We can keep using it
19:53 < jrajav> After all, that game was never released
19:54 < chimeracoder> jrajav: what do you mean? http://en.wikipedia.org/wiki/Duke_Nukem_Forever#Development
19:55 < jrajav> Shut *up*
19:55 < jrajav> It was *never released*
19:56 < jrajav> I refuse to acknowledge it :(
19:56 < benatkin> Duke Nukem Y U NO RELEASE?!!!
19:56 < chimeracoder> (actually, for that matter, Chinese Democracy was also released a couple of years ago....)
19:56 < tiglionabbit> well it was never released by 3d realms
19:56 < jrajav> ^
19:56 < chimeracoder> what is the world coming to?
19:56 < jrajav> Guns and roses rule
19:57 < jrajav> For real though DNF was one of the biggest gaming disappointments of 2011
19:57 < chimeracoder> Well, with 15 years of buildup, it almost *had* to be
20:04 <@zomg> deoxxa: heh, you're doing mineserver stuff? I just found out the person who started that project was my friend's brother.. :D
20:04 <@zomg> Oh hey I'm still opped, neat
20:04 <@zomg> =)
20:04 < prettyrobots> Trying to register at the new NPM. It is hanging.
20:05 < prettyrobots> And I'm in. Nevermind.
20:13 < martin__> anyone able to publish to a private npm registry?!
20:18 <@chilts> niftylettuce: I've pretty much finished doing FPS for AwsSum ... it's in master now ... will hopefully release by the end of the weekend
20:18 <@chilts> want to put CloudWatch in there too :)
20:21 < dopa> anybody here know how to get an exception log working with Winston?
20:22 < dopa> I've tried every which way to get it set up. Maybe I'm just not throwing a test exception the right way, but no matter what I do, my exception.log is always 0 bytes.
20:27 < ddod> Ok, this is driving me nuts. Suddently in the past day or so, socket has stopped GETing socket.io.js on the clientside. It's doing this on my VPS and local and I haven't changed any code! Could someone help me out?
20:27 < dopa> Another question: what is another foolproof way to purposely throw an exception that winston will recognize?
20:41 < blakmatrix> I'm having an issue with npm on my new mac... every time i go to install dependencies for a project it tries to install it in ~/.npm/npm, rather than into node_modules in the cwd, any ideas?
20:42 < TooTallNate> blakmatrix: what version of npm?
20:42 < blakmatrix> 1.1.37
20:42 < blakmatrix> should be the one packaged with node 6.20
20:51 < TooTallNate> blakmatrix: what does `npm prefix` print out?
20:57 < blakmatrix> TooTallNate: well it prints out the cwd... but I just blasted away ~/.npm since there were alot of folders belonging to root in there
20:57 < TooTallNate> blakmatrix: does that fix it?
20:58 < blakmatrix> TooTallNate: appears so
20:59 < __Sh4DoW__> Hi to everyone... I have an easy question. I would like to connect for communication different node server running in machines all over the world. Are there some de facto standard library or package or way to do that??
21:00 < TooTallNate> __Sh4DoW__: probably dnode or hook.io
21:02 < __Sh4DoW__> Thank you... hook.io seems to be what I was searching for.
21:08 <@Raynos> is console.error blocking?
21:10 <@qbit> isaacs: https://github.com/qbit/npm_proxy now i don't have to replicate every package to my private repo! 
21:12 <@jcrew> qbit: doesn't npm work if the http_proxy environment variable is set?
21:12 < Biatch> why wouldn't it?
21:12 <@qbit> jcrew: i kinda named it poorly .. this proxies any requests that 404 to an private repo
21:13 <@qbit> so i can just push my private stuff to an internal npm repo that isn't in-sync with npmjs.org
21:13 <@jcrew> got ya
21:14 <@qbit> so now "npm install omglolawesome" will work.. omglolawesome will download from http://localhost .. and it's dependencies will come in from npmjs.org
21:29 < legind> what's wrong with this line: console.log(new Buffer(4).writeUInt32BE(192,0)); // I keep getting just 'undefined' for this
21:29 < legind> shouldn't it be a buffer with 00 00 00 c0 ?
21:31 <+Bonuspunkt> legind buffer.writeUInt32BE return nothing, check the buffer
21:31 <@chilts> legind: .writeUInt32BE() returns nothing, therefore you're logging nothing
21:32 < legind> ohhhh /me facepalm
21:32 < legind> :) thanks Bonuspunkt chilts 
21:33 <@chilts> var a = new Buffer(4); a.writeUInt32BE(192, 0); console.log(a);
21:33 <@chilts> (in steps)
21:34 < legind> got it, thanks again
21:34 <@chilts> :)
21:35 < EhevuTov> anyone here use protobuf with node? Curious on what module you're using
21:49 < DTrejo> npm search protobuf
21:49 < npmbro> DTrejo: Please see http://eirikb.github.com/nipster/#protobuf
22:00 < benatkin> npmbro search npm
22:00 < npmbro> benatkin: Please see http://eirikb.github.com/nipster/#npm
22:05 <@Raynos> isaacs: https://gist.github.com/3153582
22:05 <@Raynos> I think I locked myself out of npm
22:13 < shanebo> hey guys a few months ago I remember seeing a service that provided custom apis for your app to offload that to them but I can't find it for the life of me. Anyone know what I'm talking about?
22:13 < shanebo> (a RESTful API service)
22:14 < EhevuTov> DTrejo, yeah, there's one protobuf module I found, but it doesn't compile. That's usually not  good sign
22:17 < epic720> hello
22:17 < epic720> you beautiful people, you
22:17 < crabdude> kriskowal: Any particular reason QQ is "out of service"?
22:18 < shanebo> found it: http://www.spire.io/
22:18 < epic720> Does anyone have any experience with restify? I can't figure out how to get data from the request.
22:24 < EhevuTov> anyone use or compared thrift versus protobuf with node? I'd like to know your thoughts
22:25 <@chilts> there is also msgpack which I'm using : https://github.com/creationix/msgpack-js
22:25 <@chilts> though I haven't used protobuf or thrift I'm afraid
22:25 < EhevuTov> chilts, yeah, I need it for cross-language intercommunication. So, I don't think msgpack will work easily at this point(sorry I didn't mention that)
22:26 < EhevuTov> but I do really like msgpack
22:26 < EhevuTov> they just don't have IDL support for c or node right now
22:26 < moon1> hi
22:26 <@chilts> so the service you're talking to requires protobuf or thrift?
22:26 <@chilts> EhevuTov: ^^
22:27 <@chilts> might be worth just trying them both out, shouldn't be too hard to give them a test drive :)
22:27 < EhevuTov> chilts, well, I'm trying to send a byte array over the nets from a C# app to a node app and a C app
22:28 < EhevuTov> chilts, and the node protobuf module doesn't want to compile
22:28 <@chilts> I think it might be worth trying them both and maybe with your data one of them is faster/smaller than the other :)
22:28 <@qbit> is there a way to make npm's scripts.postinstall not drop from uid/gid 0 ? 
22:29 < EhevuTov> chilts, I agree, I just don't have the time to debug and fix the node protobuff. I think I'll have to use thrifty for the time being(I hope it works with C#)
22:30 <@chilts> yep, fair enough
22:30 < EhevuTov> trying to run node prototypes quickly when your manager doesn't understand/approve node is so stressful. I get to work in C though, so it rounds out for the time being :-)
22:31 < EhevuTov> What's with all the ops in the #node.js channel
22:31 <@chilts> for funsies
22:31 < EhevuTov> I'm not an op :-(
22:31 <@chilts> if the bot is still around, you can go 'op plz' and you're be given it
22:31 <@chilts> you'll
22:31 < EhevuTov> neither is bnoordhuis, so I'm in good company
22:32 < EhevuTov> op plz
22:32 <@chilts> heh, the bot is no longer here
22:32 <@chilts> not to worry :)
22:32 < EhevuTov> I didn't want op anyways :-P
22:36 <@qbit> unsafe-perm 
22:36 <@qbit> wew
22:36 < EhevuTov> chilts, have you exchanged data from a node program to another language program?
22:36 < EhevuTov> I wouldn't think it would work(like sending a string, for instance)
22:38 < kenperkins> what goes into the decision to make a minor version bump? looking at 0.9 nothing jumps out at me as a significant change.
22:38 < epic720> I feel like a broken record here, sorry for that. But does anyone have any experience with restify?
22:41 < EhevuTov> epic720, I don't, but I'd think a lot of people do that all the time. Have you google'ed it?
22:41 < EhevuTov> kenperkins, what is the significant change you see
22:42 < kenperkins> nothing, that's my confusion
22:42 < kenperkins> it seems like a lot of deps updates, and a few optimizations
22:42 < kenperkins> just trying to digest why this is 0.9
22:43 < epic720> Ehevutov, google?
22:44 < epic720> Ehevutov, /s yeah I have googled it. Tried several different ways and I can't find a way to get the data I am passing. I thought I found the solution (loading the body parser, but req.body is still undefined)
22:44 < EhevuTov> epic720, http://backbonetutorials.com/nodejs-restify-mongodb-mongoose/
22:44 < EhevuTov> ok
22:45 < EhevuTov> kenperkins, usually, bigger features come in increments throughout the dev branch
22:45 < EhevuTov> kenperkins, so like in 0.9.1, something cool might come out
22:45 <@kriskowal> crabdude, most of its functionality is in Q
22:45 < kenperkins> EhevuTov: so in a way 0.9 is laying the foundation for newer cool shit
22:45 < kenperkins> ;)
22:46 < EhevuTov> kenperkins, the entire odd number in the minor version just means it's all experimental
22:46 <@kriskowal> crabdude, if you have apps that depend on it, i could run the idea of passing maintainership to you by the Q-continuum mailing list
22:46 < crabdude> kriskowal: ah, I guess I didn't notice cuz step isn't, and that was the first one
22:47 < crabdude> that's alright, I'm building something different
22:47 <@kriskowal> yeah, i wrote step to bridge a gap between Q and creationix’s lib, but I’ve found that it isn’t idiomatically useful.
22:47 < crabdude> we're using Q, but I'm throwing a Proxy layer on top
22:47 < crabdude> Q(fs).readFile('foo.js').then(….)
22:48 <@kriskowal> yeah, it makes sense
22:48 < crabdude> kriskowal: lol, I had the same idea and the same conclusion
22:48 < crabdude> which is why I was curious when I saw it in QQ
22:48 < crabdude> but I guess you're confirming my suspicions 
22:49 <@kriskowal> i always billed QQ as a playground for things i wasn’t confident were compelling enough for Q
22:50 < crabdude> make sense. are you aware of any proxy+promises implementations. Haven't seen anything legit.
22:50 <@kriskowal> but with a couple years of fiddling behind, i am much more confident about what is and isn't useful
22:50 <@kriskowal> gozala has experimented with proxy+promises for firefox extensions. i do not recall which lib.
22:52 < crabdude> cool, thx
22:53 < EhevuTov> chilts, screw it, i just might use asn.1 and BER
23:02 < context> anyone here happen to have a linux-arm cross compile toolchain could compile something super quick for me (idle3-tools) ?
23:07 < bwr> I'm new to nodejs and I'm trying to get started with flatiron. I'm using the http plugin and I read that it requires union. I've installed union both in the local directory and globally using -g but when I start my application it still says 'flatiron.plugins.http requires the `union` module from npm'. Any ideas? It is probably something stupid I'm doing but I have no idea
23:07 < alex4nder> context: you still need it?
23:10 < alex4nder> context: check msgs,.. static link
23:10 < context> <3
23:11 < context> alex4nder: any chance i could get this also :x srry http://sourceforge.net/apps/trac/smartmontools/wiki
23:11 < context> i assumed an embedded RAID product (Drobo FS) would care about something like this
23:12 < bwr> Ok, i figured it out; I guess i have to install union underneath flatiron?
23:12 < context> i might not even need that
23:13 < context> this is what i get for using green drives in a raid
23:13 < alex4nder> what OS are you running on it?
23:13 < alex4nder> s/OS/distribution/
23:16 < context> actualy wtf !@#
23:16 < context> alex4nder: its linux
23:16 < context> not sure of the total toolchain
23:16 < context> that idle3ctl works though
23:16 < alex4nder> hmm
23:16 < alex4nder> cool
23:16 < context> though of course i cant get to root :x
23:16 < context> wow im retarded
23:16 < context> thnx :D
23:17 < alex4nder> I just built smartmontools,.. let me know if you want it packaged up.
23:18 < context> yeah go ahead, thnx a lot
23:18 < alex4nder> np
23:21 < alex4nder> context: done
23:22 < context> alex4nder: got it. thnx again
23:22 < alex4nder> context: you're welcome; good luck with the setup
23:23 <@othiym23> darn, chimeracoder disappeared before I could tell yo about npm shrinkwrap
23:24 < comster> Need feedback - this weekend I'm going to be hacking together an open source turntable.fm http://news.ycombinator.com/item?id=4273320
23:24 < context> alex4nder: yeah turns out neither is working :( (not the binaries fault) drobo is doing something really funky with the drives. gonna have to pull them out one a time
23:25 < alex4nder> gotcha
--- Log closed Sat Jul 21 00:00:54 2012
