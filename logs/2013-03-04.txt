--- Log opened Mon Mar 04 00:00:13 2013
00:11 < xangelo> question: is there a module for accessing skydrive at the moment?
00:40 < samholmes> Is there a Jade channel or is this the place to talk about it?
00:40 < samholmes> Cause I want to know if there is a way to put space between elements?
00:41 < havvy> There's a config option for pretty whitespace, IIRC.
00:41 < havvy> Can't remember what it is called though.
00:41 < samholmes> In HTML I would have <strong>Something</strong>, then a newline, then <span>something else</span>. The newline would act as 1 space character and the elements would flow nicely. In Jade, strong= Something\nspan= somethingElse
00:42 < samholmes> That wont give me any space
00:42 < samholmes> havvy: is what youre talking about aligned with what I am talking about?
00:44 < samholmes> Right now the only way I know how to do this is sticking a `| ` line between the elements
00:44 < zivester> samholmes, with Node there is pretty : 1
00:45 < samholmes> It's like sticking a p***s between them
00:45 < zivester> why can't u put a space After Something?
00:45 < samholmes> zivester: It's a local
00:46 < samholmes> <strong><?- local ?></strong> <span><?- local ?></span>
00:46 < samholmes> THat's the final result I want
00:46 < samholmes> It makes more sense to have the space between the elements, not in them
00:47 < zivester> maybe so... but it really doesn't matter... its prettier than an extra '| ' imo
00:48 < zivester> i dont think jade has chomping options... its 'pretty' html or its not
00:50 < samholmes> zivester: How would I even put a space in:
00:50 < samholmes> strong= local
00:50 < samholmes> strong= local+' '
00:50 < samholmes> ?
00:50 < samholmes> That's not prettier IMO
00:52 < zivester> 'strong #{local} '
00:54 < zivester> i dont use the '=' syntax... not sure how its different
01:07 < darrenlooby> Hi guys, I'm looking for the ability to push require() on the client side, as in with components.
01:13 < rvagg> darrenlooby: ender, browserify, components, onejs, etc.
01:13 < darrenlooby> I'm trying to make components work... but, need a js file to get me going
01:14 < darrenlooby> I've looked through lots of cool components, but need to understand how to implement correctly
01:14 < darrenlooby> rvagg, where would I find the core js functions to have access to components > require()
01:15 < rvagg> darrenlooby: sorry, I don't use components, I'm an Ender person, probably https://github.com/component/component
01:16 < darrenlooby> Yea, looked there... talks a lot, great number of items to use... no raw template (that I can find)
01:17 < samholmes> zivester: That syntax is like #{}, but less.
01:18 < samholmes> How does one use JS in attributes?
01:18 < samholmes> I want to use a local AS and attribute in Jade
01:18 < samholmes> option(value=something, selected) Where selected is a local.
01:21 < zivester> samholmes, yah #{} is interpolation, which is exactly what you want so you can have normal html.. in that case a space
01:21 < zivester> selected=selected ?
01:22 < samholmes> zivester: That's just an example. What I'd liek to know is how I could generate attributes using JS
01:22 < samholmes> Is that out of the scope of Jade?
01:33 < MI6> joyent/node: isaacs master * e428bb7 : cluster: Rename destroy() to kill(signal=SIGTERM)  Fix #4133, bringing th (+1 more commits) - http://git.io/5rYi0w
01:45 < devnill> Hey, does node support generators/iterators yet?
01:46 < bnoordhuis> devnill: you mean does v8 support generators/iterators? no
01:47 < devnill> yes
01:48 < devnill> I've found a lot of answers from 2012, but I'm not sure if its still relevant
01:49 < bnoordhuis> devnill: to the best of my knowledge, nothing has landed yet, not even in v8's bleeding edge
01:50 < devnill> Thanks bnoordhuis 
01:50 < devnill> Thats crazy that v8 is so fast yet not compliant 2 versions back
01:52 < bnoordhuis> devnill: they don't add extensions to the language, only what's in the ecmascript spec and finalized harmony proposals
01:53 < bnoordhuis> i should mention they're at ES5 compliance right now
02:04 < MobileCuriosity> anyone here have experience setting up Eclipse and VJET for use with Node.js?
02:30 < MobileCuriosity> Hello?
02:30 < ningu> I have a readable stream from a file that I want to pipe to a net socket, after which both the stream and socket should be closed. should I always call destroy() on both of them on('error')?
02:31 < ningu> or maybe just on the other one that didn't have an error... anyway, I'm just wondering how to be sure to clean up.
02:36 < ningu> well, having an on('error') handler seems to at least work minimally.
02:42 < MobileCuriosity> anyone use Eclipe for Node.js developement and debugging?
02:43 < bradleymeck> i have heard of ppl using it, but not much else
02:44 < MobileCuriosity> Thanks.  I'm trying to find out if anyone is having success using VJET for node dev. with it but I'm not having great luck.
02:44 < MobileCuriosity> All the docs on the net I can find seem to be out of date.  Perhaps there is a clue in there. :)
02:46 < bradleymeck> MobileCuriosity: sublime and komodo have fairly decent support, but thats all i can say
02:46 < MobileCuriosity> thanks, I'll go check them out.
02:50 < echo> It really depends upon what you're wanting it for. I also recommend checking out: https://c9.io/ Cloud9. I use vim for anything on an actual server and c9 for anything local and to deploy.
03:09 < faceleg> Hi
03:10 < faceleg> anyone available to answer a quick question about nodejs C++ modules?
03:10 < tjfontaine> it's easier to ask than it is to ask to ask
03:10 < faceleg> I like to ask to ask
03:10 < faceleg> in case asking to ask is the convention 'round here
03:10 < SomeoneWeird> it's not
03:10 < SomeoneWeird> so ask
03:10 < SomeoneWeird> :P
03:10 < faceleg> :P
03:11 < faceleg> Is it proper to enforce asynchronous usage of a C lib bindings library?
03:11 < faceleg> I.e. instead of allowing dual-usage of a function (e.e. a.getResult() - sync, and a.getResult(callback) - async)
03:12 < faceleg> instead of the above
03:12 < faceleg> is it proper to do what fs does, i.e. a.getResult(callback), a.getResultSync()
03:12 < tjfontaine> I think it's more appropriate for the method name to announce the intent
03:13 < faceleg> a.getResultAsync()
03:13 < faceleg> I was under the assumption that everyone in node just assumes that the default behaviour will be async
03:13 < faceleg> as in "async all of the things"
03:13 < LuckyBurger> assumptions lead to bugs and anger
03:13 < LuckyBurger> its best to be upfront with everything
03:13 < faceleg> and they make asses of you and me
03:13 < faceleg> yeah
03:14 < LuckyBurger> ;)
03:14 < LuckyBurger> no1 will complain if its explicit
03:14 < faceleg> I agree, of course, I would also like to develop with the conventions of the community
03:14 < faceleg> pff I know people who would complain
03:14 < faceleg> htankfully they're obsessed with PHP so we won't be seeing them 
03:14 < faceleg> ok thanks
03:14 < faceleg> a.*Async it is
03:14 < LuckyBurger> yes. please do ignore php'ers
03:15 < faceleg> I work with PHP all day professionally so that will be hard
03:15 < faceleg> but I'll try
03:15 < LuckyBurger> I suggest switching. i'm much happier
03:15 < LuckyBurger> lol
03:15 < faceleg> OK, so my questions are related to nodegit, a libgit2 wrapper
03:15 < faceleg> I"M TRTYING 
03:15 < faceleg> TRYING*
03:15 < faceleg> it's not that easy, I have a mortgage and a family
03:15 < faceleg> anyway
03:15 < LuckyBurger> ah. thats a problem.
03:15 < SomeoneWeird> a.getResult() should be async
03:15 < SomeoneWeird> a.getResultSync() should be sync
03:15 < faceleg> so practically all functions will be touching the FS
03:16 < faceleg> Yes I do like that better
03:16 < faceleg> what I'm about to point out
03:16 < faceleg> is that almost all of my functions will touch the FS
03:16 < faceleg> (a bit like the FS core module)
03:16 < faceleg> so is it not redundant in this case 
03:16 < faceleg> to specify that they're Async
03:20 < faceleg_> did I miss anything in the last 2 minutes? Was installing a better client.
03:20 < LuckyBurger> so sir.
03:21 < faceleg_> so now we're 1-1 (undecided) on the matter of a.get() being async by default
03:21 < LuckyBurger> :D
03:21 < LuckyBurger> #firstworldproblems
03:21 < LuckyBurger> haha
03:21 < SomeoneWeird> just write proper documentatio
03:21 < SomeoneWeird> n
03:21 < SomeoneWeird> and it won't matter
03:21 < faceleg_> *emphasis* it matters to me
03:22 < faceleg_> as partly the point is to learn
03:22 < faceleg_> I am a faily seasoned and conscientious programmer, so I would like to think I know what is right
03:22 < LuckyBurger> no idea my friend. i tend not to write community code cuz i do things poorly and i like it like that :D
03:22 < faceleg_> I'm just very, very interested in moving to node
03:22 < faceleg_> lol :P
03:22 < LuckyBurger> <3 node
03:22 < faceleg_> I know, so bad
03:22 < SomeoneWeird> yep
03:22 < faceleg_> It's like programmer crack
03:23 < LuckyBurger> took awhile to find a good editor
03:23 < faceleg_> ST2?
03:23 < SomeoneWeird> ST2
03:23 < SomeoneWeird> lol
03:23 < faceleg_> boom.
03:23 < LuckyBurger> yeah took me awhile to find it
03:23 < LuckyBurger> :P
03:23 < SomeoneWeird> lmao
03:23 < SomeoneWeird> it's awesome
03:23 < LuckyBurger> yar agreed
03:24 < LuckyBurger> saved me much time and cost for my game project
03:24 < gaf> game?
03:24 < gaf> open source?
03:24 < LuckyBurger> no why
03:25 < LuckyBurger> who open sources games :x maybe in 20 yrs
03:25 < gaf> curious...looking for games code base
03:25 < LuckyBurger> o the quake3 source is open source now
03:25 < faceleg_> doom
03:25 < LuckyBurger> its very beautiful looking too
03:25 < LuckyBurger> was it doom3?
03:25 < faceleg_> yeah
03:25 < LuckyBurger> i dunno was one of them
03:25 < faceleg_> latest doom
03:25 < faceleg_> just not some assets I think
03:26 < faceleg_> but core engine
03:26 < LuckyBurger> uh no
03:26 < LuckyBurger> it was quake3
03:26 < LuckyBurger> https://github.com/id-Software/Quake-III-Arena
03:26 < LuckyBurger> there u go
03:26 < gaf> i want to use https://github.com/NetEase/pomelo
03:27 < gaf> but not sure if is a good idea
03:27 < LuckyBurger> meh i just rolled my own
03:27 < LuckyBurger> it doesnt require real-time so just easier this way
03:27 < gaf> oh,ok
03:27 < faceleg_> https://github.com/id-Software/DOOM-3
03:28 < LuckyBurger> well appears that both were released :P
03:29 < sshaginyan> Is anyone familiar with the propex-validation library? There is 0 documentation on it.
03:30 < sshaginyan> Can anyone recommend any validation libraries?
03:30 < sshaginyan> Honestly there aren't any good ones out there.
03:30 < faceleg_> http://stackoverflow.com/questions/4088723/validation-library-for-node-js
03:31 < faceleg_> https://github.com/chriso/node-validator
03:31 < faceleg_> Google tells me that this is what you need
03:31 < sshaginyan> faceleg_: I wan't something with optional parameters 
03:31 < sshaginyan> as well
03:31 < LuckyBurger> faceleg_ that pomelo thing looks interesting, but havent a clue how to integrate it into a client side application
03:31 < sshaginyan> faceleg_: Which one is the best one. I also want to do regex. By best I mean mature
03:31 < gaf> i mentioned pomelo
03:31 < LuckyBurger> o sry :P
03:31 < LuckyBurger> it looks like its fully node-based
03:32 < LuckyBurger> so its not for client side apps
03:32 < LuckyBurger> unless its a website
03:32 < gaf> yup, i read the docs already
03:32 < LuckyBurger> using websockets
03:32 < LuckyBurger> blh
03:32 < LuckyBurger> lame
03:32 < gaf> my only doubt is, if thecode is solid
03:32 < faceleg_> sshaginyan, I have no idea sorry :(
03:32 < sshaginyan> np
03:32 < LuckyBurger> i dunno, you would have to intentionally make it bad in node
03:32 < LuckyBurger> lol
03:33 < LuckyBurger> app.rpc.chat.chatRemote.add(session, uid, app.get('serverId'), function(data){}); seems excessive imo.
03:33 < faceleg_> lol
03:33 < LuckyBurger> why do i need to get a server instance if im calling it from the server object
03:33 < LuckyBurger> :x
03:33 < faceleg_> after node, a lot of things I have to do in other langs seem hacky
03:33 < faceleg_> not that JS is beatiful or anything
03:33 < gaf> reeber that the game is built to scale
03:34 < faceleg_> but aslo, after node, I had to learn C++ to get anything done
03:34 < LuckyBurger> faceleg_ ?? really
03:34 < LuckyBurger> the only thing im looking at doing is a crypto module
03:34 < LuckyBurger> since the interface isnt stable :P
03:34 < gaf> https://github.com/NetEase/pomelo/wiki/Architecture-overview-of-pomelo
03:34 < LuckyBurger> and i dont want to wake up 1 day being like WTFBBQ
03:34 < faceleg_> LuckyBurger: no, just my edge case (lack of good node<->git modules)
03:34 < LuckyBurger> ah
03:34 < LuckyBurger> o git...
03:35 < faceleg_> well lack as in they exist, in multitudes, only they're all lacking in some way (or are terrible so terrible)
03:35 < faceleg_> so I picked the best and applied to become the maintainer
03:35 < faceleg_> ...
03:35 < LuckyBurger> haha :)
03:40 < sshaginyan> Guys what about a good json query language for node. I've googled but which one is the most mature / non-blocking etc......
03:40 < SomeoneWeird> huh
03:41 < SomeoneWeird> http://www.jsoniq.org/
03:42 < sshaginyan> SomeoneWeird: That's not for node
03:42 < faceleg_> unrelated to anything, but the best thing about tmux is how inscrutable it is to non-linux people
03:43 < SomeoneWeird> sshaginyan, no it's not, but most things aren't
03:43 < ohnoesitsraphy> Anyone know if Express is still being developed?
03:43 < sshaginyan> I'm creating an api server and I'm getting these huge json objects 
03:43 < sshaginyan> I want to use a query like language to get information from them
03:44 < faceleg_> why can't you just access the properties directly?
03:44 < SomeoneWeird> yeah.
03:44 < sshaginyan> Is there such a library in node.js
03:44 < sshaginyan> faceleg_: It's going to get really really ugly
03:44 < faceleg_> yeah
03:44 < sshaginyan> faceleg_: This is Macys catalog
03:44 < faceleg_> i hate it already
03:45 < LuckyBurger> jsoniq... interesting
03:45 < sshaginyan> faceleg_: It's sooooo messed up I don't want to access them directly 
03:45 < gaf> i like catalogs...
03:45 < sshaginyan> So anyone know of a library to do this?
03:45 < LuckyBurger> i use mongojs and mongodb :x
03:46 < Eigen> hey faceleg
03:46 < faceleg> yes
03:46 < Eigen> how does it feel to have a leg
03:46 < Eigen> on your face
03:46 < faceleg> tell me how you imagine it feels
03:46 < faceleg> and I'll tell you if you're right
03:46 < gaf> should hurt, all the time
03:46 < faceleg> myabe it should, but it doesn't
03:46 < faceleg> just like ugly doesn't hurt the wearer
03:47 < faceleg> even though it maybe should
03:47 < ohnoesitsraphy> hahahaha
03:47 < gaf> faceleg, tomorrow will vome the facearm..than after facefoot..than...
03:48 < ohnoesitsraphy> Any way to fix NPM requiring sudo?
03:48 < Eigen> i have the same problme actually
03:48 < Eigen> right now
03:48 < gaf> yes
03:48 < Eigen> w/ npm
03:48 < sshaginyan> LuckyBurger: So mongojs?
03:48 < faceleg> chown the installation directory?
03:48 < LuckyBurger> its what i use. i love it
03:49 < gaf> sudo chown -R $USER /usr/local
03:49 < faceleg> yeah sshaginyan dump your stuff into mongo then use mongo to query it, sorry if I missed LuckyBurger's suggestion of doing this
03:49 < gaf> <ohnoesitsraphy>
03:49 < faceleg> mongo is far from horrible
03:49 < sshaginyan> faceleg: Not mongo, mongojs
03:49 < sshaginyan> right?
03:49 < faceleg> oh is that a thing?
03:49 < gaf> <ohnoesitsraphy>http://howtonode.org/introduction-to-npm
03:49 < sshaginyan> I don't need to store the information just manipulate it
03:49 < LuckyBurger> mongojs is a package to connect to a mongodb data store :p
03:50 < sshaginyan> poop
03:50 < sshaginyan> sorry sorry
03:51 < ohnoesitsraphy> Thank you!
03:51  * gaf jointent time
03:51 < gaf> np
03:52 < sshaginyan> wow can't believe such a thing doesn't exist already. A node.js json query language
03:53 < faceleg> I know right
03:53 < faceleg> you should build one
03:53 < Eigen> omfg
03:53 < sshaginyan> Simpsons didn't do it?
03:53 < sshaginyan> yes
03:53 < Eigen> you gotta use the abbreviations faceleg comon
03:53 < faceleg> exit
03:53 < Eigen> its da internetz
03:53 < faceleg> lol noob
03:53 < sshaginyan> like omg
03:53 < havvy> sshaginyan: Isn't Javascript already a JSON query language?
03:53 < Eigen> no
03:53 < sshaginyan> havvy: nope
03:53 < Eigen> javascript is not dependant on JSON
03:54 < LuckyBurger> you can access stuff, but i dont think you can query it via JSON object
03:54 < Eigen> JSON is platform indepenant
03:54 < faceleg> http://jsonselect.org/#overview
03:55 < faceleg> have a look @ that
03:55 < faceleg> if you will indulge a peasant
03:55 < sshaginyan> faceleg: No Simpsons did do it. Although I looked at this before and it's very minimal 
03:55 < faceleg> holycrap
03:55 < faceleg> it's amazing
03:55 < Eigen> Simpson's did that?
03:55 < Eigen> really?
03:56 < faceleg> I think if you're going to do more complex queries on your json then you might look @ mongo
03:56 < Zak> hi guys... is there a node project which allows me to connect to a proxy and re-host it?
03:57 < faceleg> My secretary has been unable to find anything else for you on Google
03:57 < Zak> i looked a few node proxy projects but they're usually about hosting one
03:57 < Eigen> i love the broken 'fork me on github' image on the top right corner
03:57 < Zak> maybe i'll just knock something myself
03:57 < ChrisPartridge> Zak: for http?
03:58 < Eigen> faceleg: you have a secretary?
03:58 < Zak> ChrisPartridge: yeah, i'm connecting to an http proxy. rehosting in http would be fine
03:58 < faceleg> yeah
03:58 < faceleg> myself
03:58 < Eigen> faceleg: oh
03:58 < faceleg> I like to make myself feel important
03:58 < Eigen> I want a PA
03:58 < ChrisPartridge> Zak: node-http-proxy should do everything you need
03:58 < Zak> i know that http has the inbuilt capability to use a proxy
03:58 < Eigen> like
03:58 < faceleg> Eigen: you need one
03:58 < Eigen> in Iron Man
03:58 < Zak> ChrisPartridge: ok. i'll take another look
03:59 < faceleg> Eigen: yeah I wish I was iron man sometimes. 
03:59 < Eigen> faceleg: I'm not sure what to make of that...
03:59 < faceleg> hey I'm not the one pining after an imaginary PA
03:59 < faceleg> Eigen: at least my fantasy is realistic
03:59 < Eigen> ok
03:59 < ChrisPartridge> Zak: https://github.com/nodejitsu/node-http-proxy
03:59 < Eigen> Mine is
03:59 < Eigen> someday...
04:00 < Eigen> I'll have her go on #nodejs for me
04:00 < Zak> ChrisPartridge: just be aware that i want to connect to a proxy.. not create my own one
04:00 < faceleg> her? how sexists
04:00 < faceleg> you could have a male PA
04:00 < Eigen> hey
04:00 < Eigen> yea
04:00 < Eigen> but i can *chose* not to can't I?
04:00 < Eigen> *choose
04:00 < faceleg> not without a potential lawsuuit
04:00 < asdf12> no i don't you can
04:00 < faceleg> I mean what if I have my heart set on it
04:01 < Eigen> and?
04:01 < faceleg> and you don't hire me
04:01 < Eigen> I'll just 
04:01 < Eigen> you aren't suitable
04:01 < faceleg> there would be trouble
04:01 < Eigen> nitpicking
04:01 < Eigen> no there wouldn't
04:01 < faceleg> nah it's because I'm black
04:01 < faceleg> and a man
04:01 < faceleg> and illiterate
04:01 < faceleg> (ignore that I'm typing)
04:01 < Eigen> lol
04:01 < Eigen> ok
04:01 < faceleg> it's my secretary typing
04:01 < Eigen> well the last one
04:01 < Eigen> I think that would be legitimate
04:01 < asdf12> i like how illiterate came last
04:02 < ohnoesitsraphy> I love Node
04:02 < faceleg> I know right
04:02 < Zak> ohnoesitsraphy: i love it more than you do
04:03 < faceleg> impossible
04:03 < ohnoesitsraphy> You probably do, because I suck at it right now
04:03 < faceleg> I love it with all my soul
04:03 < ohnoesitsraphy> I love jumping into new stuff like this
04:03 < Zak> i print out the source code every night and i cuddle with it every night
04:03 < faceleg> how can you suck at node?
04:03 < Eigen> its not new
04:03 < Eigen> its like
04:03 < SomeoneWeird> Zak, lol
04:03 < faceleg> protip: node makes you good at node
04:03 < Eigen> more than a year old
04:03 < Eigen> thats old
04:03 < faceleg> yeah is old
04:03 < ohnoesitsraphy> ;p;
04:03 < ohnoesitsraphy> lol**
04:03 < Eigen> comon
04:04 < Eigen> you guys haven't been following the trends?
04:04 < Eigen> jeez
04:04 < faceleg> I love node so much I'm actually writing C++ again
04:04 < faceleg> Beat that (you can't)
04:04 < Eigen> I'm writing machine language because of it
04:04 < SomeoneWeird> i'm writing skynet because of it
04:04 < faceleg> here we go...
04:04 < Eigen> woah
04:04 < SomeoneWeird> and I lol @ you if you think i'm joking
04:05 < Eigen> SomeoneWeird: is it on github?
04:05 < faceleg> it's all around us
04:05 < Eigen> no
04:05 < SomeoneWeird> Eigen, lol no
04:05 < Eigen> comon
04:05 < Eigen> everyone goes open source nowdays
04:05 < Eigen> even DARPA
04:06 < Eigen> why do you think wikileaks was created
04:06 < Eigen> not by Julian Assange
04:06 < Eigen> but by the FBI
04:06 < faceleg> so it was all a plot to catch Julian?
04:06 < Eigen> no
04:06 < SomeoneWeird> it'd actually be dangerous to open source it
04:06 < Eigen> its about them going opensource
04:07 < SomeoneWeird> you seen raytheons social network miner?
04:07 < Eigen> no
04:07 < Eigen> its not opensource
04:07 < Eigen> and I don't work at
04:07 < SomeoneWeird> http://www.guardian.co.uk/world/2013/feb/10/software-tracks-social-media-defence
04:07 < Eigen> raytheon so no. I haven't seen it.
04:07 < SomeoneWeird> no i just mean have you heard of it
04:07 < Eigen> like the codebase
04:07 < Eigen> now i have
04:07 < faceleg> same
04:08 < tds5016> hey. question... how do I http://ideone.com/k5HZr9
04:08 < faceleg> I've got my secretary googling it
04:08 < tds5016> correction to that...
04:08 < tds5016> http://ideone.com/k5HZr9
04:08 < SomeoneWeird> basically the stuff we're coding does about 100 times the things that does, + machine learning, intelligent matching
04:08 < Eigen> its probably shit though. knowing how well these contractors are at recruiting talent
04:08 < SomeoneWeird> oh yeah, no doubt about that
04:08 < SomeoneWeird> tds5016, npm install socket.io
04:08 < tds5016> I already did :-/.
04:09 < SomeoneWeird> ls node_modules
04:09 < Eigen> I heard that working for the NSA is super sketchy
04:09 < tds5016> oh wow.... now it worked....
04:09 < Eigen> once they don't like you anymore they dispose of you
04:09 < tds5016> I thoguht itw as installed before.
04:09 < tds5016> haha.
04:09 < Eigen> in court
04:09 < faceleg> tds5016: what is actual line node.js:201
04:09 < SomeoneWeird> Eigen, nsa can do whatever the fuck they want
04:10 < faceleg> lol!
04:10 < tds5016> faceleg: turns out it didn't install and the original output was a lie.
04:10 < tds5016> haha.
04:10 < LuckyBurger> i find it humourous that DHS thinks they can come into my country and grab our peoples things, if they think it threatens the US
04:10 < Eigen> well
04:10 < faceleg> who is DHS
04:10 < SomeoneWeird> LuckyBurger, which country would that be?
04:10 < Eigen> its 'Homeland Security'
04:10 < Eigen> duh
04:10 < LuckyBurger> ^
04:10 < Eigen> i mean
04:10 < SomeoneWeird> faceleg, homeland
04:10 < faceleg> oh
04:10 < Eigen> Homeland = Invasion
04:10 < Eigen> lol
04:11 < LuckyBurger> pretty much.
04:11 < faceleg> They tried to snatch our favourite German
04:11 < faceleg> (I'm a NZer)
04:11 < tds5016> can someone tell me how I'd get socket.io to do wss instead of ws?
04:11 < Eigen> faceleg: oh yea
04:11 < Eigen> I am too well
04:11 < Eigen> half
04:11 < Eigen> NZer
04:11 < faceleg> FIST PUMP
04:11 < Eigen> lol
04:11 < SomeoneWeird> im aussie MATE
04:11 < Eigen> oh
04:11 < LuckyBurger> im canadian :D
04:11 < faceleg> tds5016: Use a secure URL for your initial connection, i.e. instead of "http://" use "https://". 
04:11 < faceleg> tds5016: http://stackoverflow.com/a/6601067/187954
04:12 < tds5016> awesome! thanks!
04:12 < faceleg> np
04:12 < tds5016> it does it automatically?
04:12 < Eigen> I heard it is cool if you are related to a convict down under
04:12 < faceleg> according to the one sentance I just read about it
04:12 < faceleg> All Aussies are related to convicts
04:12 < Eigen> fuck this guardian vid won't play
04:12 < Eigen> faceleg: not all
04:12 < SomeoneWeird> faceleg, lol
04:12 < faceleg> unless they arrived < 50 years ago
04:12 < Eigen> but
04:12 < Eigen> idk
04:13 < faceleg> more like < 100 
04:13 < Eigen> you know there is a difference between NZ and acroos the pond. Maybe the convict blood is it........
04:13 < tds5016> next issue... how to create a self-signed cert. haha.
04:13 < faceleg> tds5016: no, I was wrong, use: var socket = io.connect('https://localhost', {secure: true});
04:13 < faceleg> what server
04:13 < faceleg> tds5016: apache?
04:13 < Eigen> apache is so bloated
04:14 < LuckyBurger> it is?
04:14 < faceleg> I know it is
04:14 < faceleg> like our favourite german
04:14 < SomeoneWeird> lmao
04:14 < Eigen> lol
04:14 < LuckyBurger> your german prolly just likes his beer. nbd
04:14 < Eigen> too much fat
04:14 < tds5016> faceleg: I do have apache installed on the server. not what I'd planned on using though :-)
04:14 < faceleg> so much fat
04:14 < LuckyBurger> beer
04:14 < SomeoneWeird> nginxxxxxxxxxxxx
04:14 < faceleg> http://www.akadia.com/services/ssh_test_certificate.html
04:14 < faceleg> tds5016: http://www.akadia.com/services/ssh_test_certificate.html
04:14 < Eigen> i liked his party
04:14 < SomeoneWeird> tds5016, startssl
04:14 < Eigen> *kickoff party
04:14 < LuckyBurger> well you have to setup apache to respond on 443
04:14 < Eigen> for his new lie
04:14 < Eigen> *site
04:15 < faceleg> hahahaahahhaha
04:15 < tds5016> thanks!
04:17 < mt_> Hey guys, Node+Redis related question
04:17 < gaf> about to buy...http://www.amazon.com/The-Nature-Computation-Cristopher-Moore/dp/0199233217/ref=pd_sim_b_60
04:17 < mt_> So I am trying to run TJ's code: https://github.com/visionmedia/screenshot-app/blob/master/lib/batch.js
04:18 < mt_> here is how he uses it: https://github.com/visionmedia/screenshot-app/blob/master/routes/main.js#L45
04:18 < Eigen> man
04:18 < Eigen> Kim.com
04:18 < Eigen> does'nt work anymore
04:18 < Eigen> wtf
04:18 < mt_> When I run this, I am getting the last element 6 times. 6 because I have 6 ids in redis and I have no idea why it's only returning the last one. (6 times)
04:18 < Eigen> his name is invalid
04:19 < faceleg> Eigen: huh? horrible site loads for me
04:19 < tds5016> faceleg: how do I use the self-signed cert with node?
04:19 < Eigen> only loaded for cached version
04:20 < SomeoneWeird> tds5016, same way you use a normal one
04:20 < faceleg> Eigen: bad luck for you, I"m watching maoris dancing right now
04:21 < Eigen> damn
04:21 < mt_> Anyone?
04:21 < tds5016> SomeoneWeird: I guess what I was asking is... how do I use a cert with node :-)
04:21 < tds5016> not just self-signed :-)
04:21 < mt_> help please 
04:22 < SomeoneWeird> nodejs.org/docs/latest/api/https.html
04:22 < LuckyBurger> tds5016 is your cert installed. and is apache configured to use it
04:22 < SomeoneWeird> http://www.exratione.com/2012/12/websockets-over-ssl-haproxy-nodejs-nginx/
04:22 < SomeoneWeird> fuck apache
04:22 < SomeoneWeird> dont use it
04:22 < tds5016> LuckyBurger: nope.
04:22 < LuckyBurger> well w/e ur webserver app is
04:22 < tds5016> I was hoping to use it withiout apache.
04:22 < LuckyBurger> jeez
04:22 < LuckyBurger> idc
04:22 < tds5016> or nginx or any other server than node.js :-)
04:23  * LuckyBurger throws his hand up. F* it
04:23 < SomeoneWeird> http://silas.sewell.org/blog/2010/06/03/node-js-https-ssl-server-example/
04:23 < tds5016> I'm sorry. is theresomething I missed? :-(
04:25 < tds5016> sorry, last question... how do I create the pem file?
04:25 < ChrisPartridge> Just use node-http-proxy in front of your apps, and nginx for any static assets, or CDN static assets
04:25 < tds5016> oh, yeah, that's definintely listed.
04:25 < tds5016> sorry.
04:28 < mt_> Guys, what's the right way to retrieve values from redis using node?
04:28 < faceleg> omfg the Mega opening was so lame 
04:29 < SomeoneWeird> mt_, client.get('key', function(err, value) { }); ?
04:30 < tds5016> http://ideone.com/ZWMRtE
04:30 < mt_> So my data structure is somewhat like this: [{key: val}, {key: val}, {key: val}]
04:30 < tds5016> SomeoneWeird: looks like 'm screwing this up :-(.
04:31 < mt_> SomeoneWeird: and I am storing the ids to those objects in a redis list
04:31 < SomeoneWeird> tds5016, nah it's probably outdated code
04:31 < mt_> and then, trying to get the respective hashes from each of the ids retrieved from that list
04:31 < tds5016> oh okay. anywhere I can get updated code? haha.
04:31 < SomeoneWeird> looking
04:32 < SomeoneWeird> oh you shouldu use express, too
04:32 < mt_> when I try to do that, I am ending with the hash of the last value from the list being repeated (length of list) times
04:32 < SomeoneWeird> tds5016, http://stackoverflow.com/a/14272874/1982847
04:35 < tds5016> still no dice :-(
04:36 < tds5016> I'm willling to bet I just sucka t this. haha.
04:38 < kevrom> Anyone mind taking a look at this http://pastebin.com/H76Y36JG  ..  I am using Express and Sequelize and trying to add a related model to my API output (Drawing has a one-to-many with Program).  I cannot for the life of me get the programs listed.
04:40 < simonx> hi all
04:40 < simonx> does anyone have a moment of their time they can spare with me?
04:40 < simonx> i have some questions please and than you
04:40 < simonx> thank you*
04:40 < havvy> "Just ask"
04:41 < simonx> ok
04:42 < simonx> i want to make an irc client with your language and want to add a feature where i can do commands like !give/!take amount username
04:42 < simonx> using sql db
04:42 < simonx> any thoughts on how i can go about that?
04:42 < hyper> Hello
04:43 < Guest21564> I need some help getting the server running on Ubuntu 12.10
04:43 < simonx> hyper, use the src and compile it if the prebuilt bins don't work
04:44 < SomeoneWeird> node-orc
04:44 < SomeoneWeird> node-irc*
04:44 < simonx> you will need to ensure python 2.6+ and 1.0.6+ bzip2 is installed
04:44 < Guest21564> I am pretty sure everything is installed correctly
04:44 < simonx> havvy, any thoughts?
04:44 < simonx> on my question
04:44 < SomeoneWeird> simonx, use redis and node-irc
04:44 < SomeoneWeird> not hard
04:44 < Guest21564> but when I cd to main directory and input node --version
04:45 < havvy> simonx: Entirely possible with Node.
04:45 < simonx> SomeoneWeird, huh? I'm not trying to run node-irc
04:45 < simonx> I want to make a !give/!take amount username type command line 
04:45 < SomeoneWeird> yeah...
04:45 < simonx> where it will send the info to the bot and db
04:45 < SomeoneWeird> oh, an existing client?
04:45 < SomeoneWeird> just use redis then
04:45 < simonx> ya
04:45 < SomeoneWeird> pub/sub
04:46 < simonx> sorry what do you mean?
04:46 < havvy> Are you trying to create an IRC bot?
04:46 < Guest21564> After installing node do I need to restart the server ?
04:46 < simonx> havvy, ya i have one but want to add features to it
04:46 < simonx> like a give/take function
04:46 < SomeoneWeird> Guest21564, on ubuntu try nodejs --version
04:46 < havvy> What language is the bot in?
04:46 < simonx> node
04:46 < simonx> node.js
04:46 < Guest21564> ahh it worked thanks
04:47 < Guest21564> says 0.6.19
04:47 < LuckyBurger> :(
04:47 < Guest21564> Isnt there a newer one? if so how do I update it?
04:47 < SomeoneWeird> yeah, the repo's in ubuntu are really outdated
04:47 < LuckyBurger> you will have to compile it yourself probably
04:47 < simonx>  sql += 'SET cash = cash + '
04:47 < zivester> Guest21564, try https://github.com/isaacs/nave
04:47 < simonx> something like that in it
04:48 < SomeoneWeird> use redis
04:48 < havvy> simonx: Does the DB already exist?
04:48 < simonx> ya
04:48 < Guest21564> Checking
04:48 < simonx> everything exists but i want to just add a new cmd with the ability to give/take cash basically 
04:48 < simonx> from any username
04:48 < zivester> `sudo nave.sh usemain latest`
04:48 < havvy> simonx: Then do so?
04:48 < SomeoneWeird> what db?
04:49 < SomeoneWeird> yeah, I don't get the problem
04:49 < simonx> but i need help on how to code it right sorry that is what i mean
04:49 < simonx> how would i make it work right?
04:49 < SomeoneWeird> what db is it?
04:49 < euoia> how do people manage their client side dependencies when building a node app? I found this, https://github.com/HenrikJoreteg/clientmodules, but are there other solutions?
04:49 < havvy> simonx: What library is your IRC bot using?  node-irc or nrc or something else?
04:49 < SomeoneWeird> euoia, package.json?
04:50 < Guest21564> Right now I can just use this out dated node version for now just to test and understand, Correct?
04:50 < havvy> Client side. I think euoia means on the browser.
04:50 < SomeoneWeird> ofc
04:50 < havvy> You /could/ build the latest Node.
04:50 < euoia> SomeoneWeird: yes, I can add a client side library as a dependency, but what's the typical way to them make it available to client? In my case, with express, all client-side stuff lives in public/
04:50 < simonx> SomeoneWeird, its a priv src
04:51 < zivester> Guest21564, or, update it with the script/command i gave
04:51 < SomeoneWeird> simonx, so it's not mysql/pg etc.....?
04:51 < simonx> it uses mysql ya
04:51 < simonx> sorry 
04:51 < simonx> mysql db
04:51 < SomeoneWeird> >.<
04:51 < SomeoneWeird> then just use node-mysql
04:51 < Guest21564> Ill try zivester
04:52 < simonx> but how will that allow me to type cmds to the irc client to make it update the sql entry?
04:53 < SomeoneWeird> it's more complicated than that
04:53 < SomeoneWeird> you have to setup hooks and stuff
04:53 < SomeoneWeird> it's not that hard
04:54 < simonx> as if i was to do update table set column = column +5
04:54 < simonx> etc
04:54 < simonx> can i paste you something in a pm?
04:56 < ningu> simonx: best to use a paste site
04:57 < Guest21564> man this is frustrating
04:57 < Guest21564> so i have a old version installed, i just want to play with getting the web server up and learn how to write a simple alert("hello");
04:58 < ningu> Guest21564: huh?
04:58 < ningu> alert() only works in a browser
04:59 < Guest21564> I have an older version of nodejs installed on my ubuntu server
04:59 < ningu> and what are you trying to do?
04:59 < simonx> anyone who can help me make it possible, i will pay you for your time
04:59 < simonx> just pm me if interested please and thank you
04:59 < Guest21564> I just want to run javascript on the server not the browser so users cannot see the source code
04:59 < yarco> have you guys deal with mongodb?
05:00 < ningu> Guest21564: ummm, you can't do that if you want it to run on the user's browser
05:00 < ningu> yarco: sure
05:00 < simonx>  ningu, are you really good at node?
05:00 < yarco> i'm stuck when deal with db.close()
05:00 < ningu> simonx: I'm ok at it, but I have a job :P
05:01 < Guest21564> What?! Really? I thought node allowed you to execute code on the server?
05:01 < ningu> Guest21564: yes. the server is not the browser.
05:01 < euoia> Okay... so if no one has any other ideas, I will just install the client library as a dependency with package.json and then symlink it into public
05:01 < yarco> ningu: it was said if you dont execute `db.close()` , it will hang on there
05:01 < Lorentz> doesn't mean there's no code needed on the browser to do browser things
05:01 < Guest21564> So the user can only see the code that is executed or pushed to the browser?
05:02 < Lorentz> pretty much; what's on the server stays on the server
05:02 < yarco> i'm reading data from a stream, and check it on fly
05:02 < Guest21564> Like database connections are not seen by the user right?
05:02 < Lorentz> no, it's not
05:02 < yarco> that means the length is unsure
05:02 < ningu> Guest21564: you can think of node as analogous to perl to python or ruby
05:02 < ningu> it just happens to be javascript, which has various pros and cons
05:02 < Guest21564> But if I push an alert to the users browser they will see it in the code?
05:03 < Lorentz> of course
05:03 < ningu> you can't "push an alert to the user's browser" unless the user downloads the js code in the html or as a separate file, just like usual
05:03 < Lorentz> they'll at least see you pushed "alert()" at them
05:03 < Lorentz> that's if you already have some code to listen to the server to push js code to browser to run with
05:04 < yarco> **** i'm reading data from a stream, and check it on fly. that means the length is unsure. and i need to check each section of the data whether it is valid according to mongodb's data. **** , so i can not do db.close() 
05:04 < Guest21564> Got it, and thats fine.
05:05 < Guest21564> So heres a simple one. How can I make a simple "hello world" html page using node? I already have node installed on a ubuntu server right now with ssh access.
05:05 < yarco> Guest21564: use expressjs
05:05 < Guest21564> expressjs is a framework? 
05:05 < yarco> yes, just like that
05:05 < Lorentz> or, the first half-dozen lines on nodejs website will also do
05:06 < ningu> Guest21564: yes, http://expressjs.com/guide.html
05:06 < ningu> Guest21564: expressjs runs a web server and you wrote code responding to requests etc.
05:06 < ningu> write*
05:06 < Guest21564> So if I wanted to copy those "half dozen lines" from nodejs's website how do I get it to execute on the server when someone visits the site?
05:07 < Lorentz> same as any webserver
05:07 < Lorentz> ip:port or addr:port etc
05:07 < Guest21564> Oh so expressjs is already doing what nodejs says to get server requests
05:07 < SomeoneWeird> yes
05:07 < Lorentz> expressjs just makes building bigger sites better/easier/etc
05:07 < Guest21564> so I would upload the ,js files to the servers directory via ftp for example?
05:08 < Lorentz> yes, and then you'll need to run nodejs on the server as a process to listen in on as a server
05:08 < Guest21564> wow, okay .. in my head i was making this a much bigger task than what it is..
05:08 < Lorentz> this is slightly unlike, say, how most hosts already have apache running with php module, and you upload php files, and it runs given in certain directories
05:08 < Guest21564> quick question.. how do I change my dang username on here?
05:09 < Lorentz> /nick newname
05:09 < HyperComps> Thanks =)
05:09 < HyperComps> Oh okay, I was hoping it was set up like apache
05:09 < ningu> nah
05:09 < ningu> you can run it behind apache if you want
05:10 < HyperComps> really? so php and node can work together if need be?
05:10 < Lorentz> you'll still need to have the nodejs process run
05:10 < Lorentz> no, don't think so, although someone probably wrote some parser somewhere
05:10 < Lorentz> don't even think about it
05:10 < HyperComps> ha alright
05:10 < echo> Node.js is a much more capable PHP, or atleast that's what I tell myself.
05:11 < Lorentz> I'm just saying, you can't upload a .js file and expect it to somehow be "executed" from the browser
05:11 < HyperComps> Yeah its "real-time" ability is my attraction here.. 
05:11 < havvy> echo: It's not a huge complected together mess.
05:11 < HyperComps> from SSH what is the best way to start running node?
05:12 < Lorentz> literally type in "node app.js" or whatever code you want to run
05:12 < echo> If it's installed, and installed globally, and in your path, you would run "node filename.js".
05:12 < HyperComps> How can I figure what directory to upload that "app.js" file into?
05:12 < Lorentz> if you want persistence, you'll have to look at various alternatives like screen, dtach, forever, and other daemonisers
05:13 < echo> Cool thing about node, it gives 0 shits about where your files are, as long as the user executing the node binary has access to those files.
05:13 < HyperComps> How does it locate it then?
05:14 < tds5016> okay, I'm reading this, and I'm trying to figure out how to get all three files. http://nodejs.org/api/tls.html
05:14 < Lorentz> HyperComps: you just say where it is, as it is on the machine
05:14 < HyperComps> Also right now there isnt any ftp access, how do you personally upload your files? Just edit them through ssh?
05:14 < tds5016> I see that it'll let you get 2 pem files. I'm not sure where to get the third, and which one is which :-(.
05:14 < echo> You would give it a relative or absolute path in ssh.
05:14 < Lorentz> if it's in the same directory, "node filename.js"
05:15 < echo> You can ftp, scp, rsync, git clone, the bash prompt is your oyster.
05:15 < Lorentz> if there's no ftp but there's ssh, I'd use sshfs or something similar
05:15 < HyperComps> Oh okay
05:15 < Lorentz> but yeah, if server inside can see the world, then you can do all sorts
05:15 < tds5016> anyone able to help me with my cert issues? haha.
05:16 < HyperComps> so I do something simple like "console.log("test");" and it returns -bash: syntax error near unexpected token `"test"'
05:17 < Lorentz> you're clearly running it as a bash script, not node
05:17 < echo> echo 'console.log("test");' >> test.js && node test.js
05:17 < kevrom> Anyone mind taking a look at this http://pastebin.com/H76Y36JG  ..  I am using Express and Sequelize and trying to add a related model to my API output (Drawing has a one-to-many with Program).  I cannot for the life of me get the programs listed.
05:17 < tds5016> HyperComps: run it with node yourFile.js
05:18 < tds5016> can someone help me figure out where to get the three cert files for http://nodejs.org/api/tls.html?
05:18 < tds5016> I see it'll create the self-signed certs, but I'm not sure which is which, and it looks like only 2 of the tree files get created?
05:18 < echo> Are you referring to the Cert, Key and CABundle?
05:19 < tds5016> echo: I do blieve I may be :-)
05:19 < tds5016> believe*
05:20 < tds5016> echo any help you can provide would be awesome :-)
05:21 < echo> Those aren't node or TLS specific, it depends on your platform and what you prefer to generate them with. For them to be trusted, you'd want to purchase one from a provider, otherwise you can generate one with openssl, here's how to on Linux, you may be able to find a better link, this was the first that came up on a google search: http://www.freebsdmadeeasy.com/tutorials/freebsd/create-a-ca-with-openssl.php
05:21 < tds5016> echo: I am good with self-signed.
05:21 < tds5016> I'm just not sure which one is which :-)
05:34 < shmoon> mongo module suggestion?
05:36 < ningu> shmoon: you want an ORM? or just straight access to mongodb?
05:36 < ningu> the standard module is called mongo or mongodb
05:36 < ningu> can't remember
05:36 < ningu> the most popular ORM is mongoose but there are others
05:40 < tds5016> sorry. last question....
05:40 < tds5016> can someone point me in the direction of a websockets example with tls?
05:41 < euoia> okay so further reading seems like I can use something called Bower for my client-side deps
05:42 < echo> Also check out jam
05:42 < tds5016> and by websocket, I'm tlaking about socket.io
05:42 < echo> euoia: http://jamjs.org/
05:43 < euoia> echo: interesting, haven't seen that... will make a note of it
05:46 < shmoon> ningu: ok, i'll try mongoose
05:47 < tds5016> anyone able to point me to a decent socket.io + node.js + wss example?
05:48 < ChrisPartridge> tds5016: try setting {secure:true} in the client when connecting
05:49 < tds5016> ChrisPartridge: where do I set that option with socket.io?
05:49 < tds5016> where do I set the cert locations etc?
05:49 < tds5016> sorry...I am trying to track down an example of websockets as a whole.
05:50 < ChrisPartridge> tds5016: the web server should be looking after the cert
05:50 < Zak> is there a way to run an entire node application through a proxy?
05:50 < tds5016> ChrisPartridge: oh. is there a qucik server example of tls + ws?
05:50 < tds5016> haha.
05:51 < echo> Zak: A reverse proxy? or a transparent proxy? Both are possible, but differ wildly in application.
05:51 < Zak> umm... i'm not sure. It's the same type of proxy address that goes into a browser.
05:51 < Zak> that's a SOCKS proxy right?
05:52 < ChrisPartridge> transparent in that instance, afaik
05:52 < Zak> in an ideal world, i would want to append some proxy information on the end of the node cmd line
05:53 < Zak> and bingo.. all of my http/https requests would go through a proxy
05:53 < ChrisPartridge> tds5016: there should be an example out, there, let me have a look
05:53 < tds5016> ChrisPartridge: thanks for the help!
05:53 < tds5016> it'll help me out a lot!
05:53 < echo> Could be an http proxy or a SOCKS proxy, either way, it's not a reverse proxy (i.e. a load balancer), it would be transparent, so any internet-requiring requests would need to be properly parameterized: i.e. for the request - var r = request.defaults({'proxy':'http://localproxy.com'})
05:54 < Zak> echo: it looks like you're using mikeal/request
05:54 < echo> That example is referencing mikeal's request module. 
05:55 < Zak> lol yeah
05:55 < Zak> the problem with that is, i'm also using a proxy module
05:55 < Zak> and... i don't think that the proxy module allows you to operate through a SOCKS proxy
05:56 < ChrisPartridge> tds5016: take a look here http://stackoverflow.com/questions/6599470/node-js-socket-io-with-ssl
05:57 < ChrisPartridge> the OP contains the code to start express with SSL, plus socket IO with SSL - also the accepted answer shows how to configure the client correctly
05:57 < gildean> Zak: if you're talking about the node-http-proxy, then that one is more for being used as a reverse proxy server and not forwarding proxy cache
05:57 < tds5016> thanks!
05:57 < ChrisPartridge> tds5016: things may have changed on the latter versions, however, give it a shot
05:57 < Zak> gildean: yeah, i just want to be able to specify a SOCKS proxy in that
05:57 < Zak> but yeah, i don't think it has that capability
05:58 < tds5016> ChrisPartridge: can you show me how I'd do a simple echo i nthat file?
05:58 < tds5016> last request of the night :-)
05:58 < echo> Zak: I'm having a hard time finding one that advertises as supporting SOCKS. You may have to wrap the node process with something like privoxy or proxychains.
05:59 < Zak> ok thanks echo. I'll google those things up
05:59 < ChrisPartridge> tds5016: just look at the main socket.io examples on github
05:59 < MobileCuriosity> Hello, Anyone have expereince setting up VJET for node.js in Eclipse?
06:07 < echo> Zak: Looks like code for SOCKS support is lying within: https://github.com/Ayms/node-Tor Worst case, you might be able to yank out just the socks part. It has support for socks5.
06:16 < MI6> joyent/node: Rod Vagg v0.8 * a6a1659 : link to LevelUP modules wiki page, not level-hooks - http://git.io/8ut8eg
06:21 < tds5016> ChrisPartridge: It still looks like it doesn't work :-(
06:23 < tds5016> how should I be using self signed certs with node? should they be configured? or is it something I should be coding in?
06:23 < echo> The most predominate configuration I've seen is using nginx for the SSL and reverse proxying to node.js.
06:24 < echo> I've also not seen many websocket over SSL applications though.
06:29 < gildean> tds5016: if you're using the core https-module, the api docs have an example on how to load the cert
06:30 < tds5016> gildean: using https with socket.io is more my issue.
06:30 < gildean> fyi the stable version of nginx doesn't support http 1.1 and thus no websockets, but the dev-branch has got support iirc
06:30 < gildean> tds5016: that's simple, just create a server and listen on that server?
06:30 < echo> It claims to, however there was someone here the other day with the dev branch with websocket issues. gildean ^
06:31 < echo> using the dev branch*
06:31 < tds5016> gildean: can you make a simple example for me? I might be a bit dense.
06:31 < tds5016> I just don't get it :-(
06:31 < tds5016> a simple echo server would be wonderful.
06:43 < gildean> tds5016: yeah, i guess i can copy/paste something together
06:43 < gildean> it'll take me a few minutes
06:44 < tds5016> gildean: take your time.
06:44 < tds5016> thanks so much!!!
06:52 < tds5016> gildean: I really appreciate it btw!
06:58 < abrkn> what's the simplest, secure way to expose an api? (each users has one or more api key/secret/whatever)
06:59 < tds5016> hmm, I think I actually have this in a way that it SHOULD work....
06:59 < tds5016> but it doesn't seem too... it keeps giving me a back response.
07:02 < kevireilly> abrkn: services is one way
07:02 < kevireilly> services?
07:02 < kevireilly> abrkn: i 'tarded. wrong room :)
07:09 < Zak> okay... why the hell haven;'t I been using mikeal's request library sooner
07:14 < gildean> tds5016: https://gist.github.com/gildean/5080568
07:15 < gildean> tested and works
07:15 < tds5016> gildean: thanks!
07:16 < simonx> thanks again. cya!
07:18 < tds5016> does io.connect use secure in that case?
07:18 < tds5016> or does it auto go to secure when on https?
07:18 < gildean> tds5016: you can see that it's listening on the server, the socket.io doesn't create its own http-server
07:20 < tds5016> https://tseth-lnx:8082/index.html that should take me to the page right?
07:20 < gildean> tds5016: so yes, it's using wss
07:20 < tds5016> eawesome! that's so awesome! thatnks for the help!
07:20 < tds5016> it means the world.
07:20 < gildean> tds5016: notice in my code the index.html should be under the /public directory
07:21 < gildean> so you have the dir with the server.js and under it a '/public' with the index
07:22 < tds5016> hmm, it looks like the server hasn't started :-/.
07:22 < tds5016> it's just returning 4040
07:22 < tds5016> 404*
07:22 < tds5016> https://tseth-lnx:8082/public/index.html I'm not biffing that up, right?
07:22 < tds5016> (I moved index.html to public/index.html)
07:24 < balgarath> slightly off topic, if there are any chef users here...would anyone have a clue why an 'npm install' in a chef recipe would fail(odd permissions error I can't figure out), but logging in and running 'npm install' manually(with the same user as in the chef recipe) works just fine?
07:24 < tds5016> I'm sorry for being so needy.
07:25 < gildean> tds5016: the file is under the public dir, but that dir is then served as the root, because there's no dir specified for the static-middleware
07:25 < gildean> so it should be just https://yourhost.tld:8082/
07:25 < tds5016> still the same thing :-(
07:26 < tds5016> https://tseth-lnx:8082/
07:26 < tds5016> I'm getting connection refused.
07:27 < gildean> that url doesn't really help me, it's a local domain
07:28 < tds5016> do you need to have a valid ca cert to get wss to work?
07:28 < tds5016> or self-signed should be okay too, right?
07:28 < gildean> yes
07:28 < tjfontaine> tds5016: so long as your clients accept the cert it will work
07:30 < tds5016> this is really weird.
07:30 < tds5016> I have no idea why the connection is being refused. especailly if you've tested this gildean  :-(
07:31 < gildean> tds5016: my example uses connect, so you did install connect as well?
07:31 < tds5016> npm install connect, yup :-)
07:34 < tds5016> var key = 'certs/private-key.pem'; that's valid for a relative path, right?
07:34 < gildean> tds5016: i'm not sure if you can use relative paths straight off there
07:35 < tds5016> I changed to absolute.
07:35 < tds5016> still no love.
07:35 < gildean> tds5016: the static file-server should just work even without the socket.io parts, are you sure your files are in the right place?
07:36 < tds5016> should be.... they should be in the same directory + public
07:36 < gildean> tds5016: you should have like /project/server.js and /project/public/index.html
07:36 < tds5016> right?
07:36 < tds5016> yup.
07:37 < gildean> then that code should just work, can you test it on your localhost?
07:37 < gildean> there might be a firewall on the server or something like that to block it
07:37 < tds5016> gildean:this is as local as I can get for now :-(
07:37 < tds5016> what is the writeHead?
07:37 < tds5016> oh, right, nevermind on that.
07:37 < tds5016> haha.
07:38 < tds5016> the server starts and it runs but my browser is having none fo it.
07:39 < tds5016> if I just do app.use(connect.static(__dirname + '/public'));
07:39 < tds5016> excuse me...
07:39 < tds5016> app.use(connect.static('public'));
07:39 < tds5016> would the world end?
07:40 < tds5016> is what I meant ot ask :-)
07:40 < gildean> tds5016: try connecting to the servers ip instead of the domain-name, as the code is completely working it's surely something else
07:41 < tds5016> same thing.
07:42 < tds5016> what else could it possibly be?
07:43 < tds5016> okay, all of a sudden it decided to work.
07:43 < tds5016> haha.
07:44 < tds5016> thanks gildean  you rock!!!!
07:44 < tds5016> did you test that the index.html would output correctly? haha.
07:51 < ningu> any suggestions for testing why my node script is dying mysteriously?
07:51 < ningu> I have a feeling it's related to incorrect async callback handling, but not really sure.
07:52 < ningu> as far as I can tell, there is no obvious issue relating to the last callback being triggered too soon.
07:53 < ningu> and it still happens when I make the relevant callbacks never get called, whereas I'd expect it to hang... it's odd.
07:54 < tds5016> last question for the day gildean 
07:54 < tds5016> how would I include a .js file?
07:55 < tds5016> just put it in public and point to it?
07:59 < gildean> tds5016: yeah
08:01 < tds5016> gildean: okay, this is really the last one I'll ask about...
08:01 < tds5016> it looks like everything is connecting based on teh debug output....
08:01 < tds5016> but nothing is showing up when I type something and click....
08:01 < tds5016> so I put in console messages both client and server side....
08:01 < tds5016> I'm not seeing any output.
08:03 < gildean> tds5016: i don't know how to help, my example works here as is
08:04 < tds5016> okay :-( something probably screwed up on my end. I'm sorry. thanks for all the help!
08:04 < ningu> anyone here good with sockets and/or streams? there's an issue with this code that I can't figure out: http://pastebin.com/Kf9mnbQH
08:04 < ningu> this function is called several times in a row. node is quitting without any error message when I include it and I can't figure out why.
08:09 < asdf12> hey!
08:09 < asdf12> that link is nsfw
08:10 < standoo> nsfw?
08:10 < asdf12> not safe for work
08:10 < standoo> ah
08:10 < asdf12> theres a link for porn :o
08:11 < asdf12> ningu: the thing that pops out to me
08:11 < faceleg> what is it
08:11 < asdf12> is you are probably trying to write to the socket when it isnt ready yet
08:11 < faceleg> someone describe it to me
08:12 < faceleg> oh so iti isn't porn
08:12 < dfgsdfasdf> cls
08:12 < dfgsdfasdf> what is this?
08:22 < SargoDarya_> Hey guys, is anyone in here using compoundjs with jugglingdb-mongodb?
08:22 < faceleg> anyone here have experience working with V8?
08:35 < s0urce> hi
08:36 < Ov3rTaf> hey:)
08:36 < s0urce> has anyone a hint for me, how to set a favicon manuel?
08:38 < SargoDarya_> s0urce: Are you using express?
08:39 < s0urce> nope
08:39 < s0urce> just http lib
08:39 < SargoDarya_> Ok, so barebones http. Basically you'll want to listen for favicon.ico
08:41 < deoxxa> hello fellow noder coders
08:41 < s0urce> I have no problem with favicon requests, i wrote something about, but i have written a small request handling class wich is only event based, my problem is to set the favicon, for some strange behaiver it takes my favicon.ico file in my static directory but i never told him to do ;)
08:41 < s0urce> wrote=saw*
08:42 < deoxxa> i made a thing that some people might be interested in: https://github.com/deoxxa/pillion
08:42 < s0urce> ohh... i get some idea ^^
08:42 < SargoDarya_> Probably because it's checking if the file is existant in the static directory BEFORE serving any other specific resource
08:42 < s0urce> talking about often helps ;)
08:42 < ningu> will something go wrong if I call a callback more than once?
08:43 < SargoDarya_> nope
08:43 < s0urce> i have a request handling route for images
08:43 < SargoDarya_> @ningu
08:43 < SargoDarya_> brb, daily standup
08:43 < ningu> well, I guess what I really mean is
08:43 < s0urce> ningu: yes, it explodes ;)
08:43 < ningu> hmm... nevermind, I think I know how to fix this
08:44 < ningu> I have a socket that usually receives 'end' but not always, sometimes something goes wrong
08:44 < ningu> I think I just need to listen for 'close' and check had_error
08:45 < s0urce> ah ok, found it, silly me... the favicon abuse my static route, nasty favicon ;)
08:46 < s0urce> and this without setting one in html head...
08:46 < faceleg> any v8 literates here?
08:46 < guor> what do you want to know?
08:47 < s0urce> looks like google chrome checks for default "favicon.ico" itsself
08:47 < faceleg> if I use NODE_SET_PROTOTYPE_METHOD
08:47 < [AD]Turbo> hola
08:47 < faceleg> to "bind"(?) a native C++ mmethod to my target JS object
08:47 < guor> hm... not familiar with node :)
08:47 < faceleg> must said method return Handle<Value>?
08:47 < faceleg> hmpf
08:47 < darrenlooby> s0urce, most browsers make a favicon request without it being directly referrer to by your HTML
08:47 < darrenlooby> So, so I believe
08:48 < faceleg> I'm trying to convert some sync methods to async
08:48 < s0urce> ah, good to know, thx ;)
08:48 < faceleg> so obv. the old sync methods need to return void
08:48 < faceleg> but the compiler squaks
08:48 < guor> void? why not empty handle
08:48 < guor> or the undefined value
08:48 < faceleg> hmmm
08:48 < faceleg> scope.close(undef)
08:49 < faceleg> return scope.Close(Undefined());
08:49 < guor> if the function returns it's value to javascript, the correct thing would be to return V8::Undefined() imo
08:49 < guor> I don't think you need to escape it from the handlescope
08:49 < guor> hm. brb
08:49 < faceleg> ok I'll try that
08:50 < faceleg> return v8::undf..()
08:50 < faceleg> works (compiles)
08:50 < darrenlooby> faceleg, congrats :D
08:51 < faceleg> if I open a scope, *must* it be closed? assuming HandleScope scope; actually 'opens' a scope?
08:51 < faceleg> darrenlooby: thanks :)
08:51 < faceleg> or to put my question more honestly, could you describe in a few sentances what handlescope scope actually does?
08:55 < faceleg> holy crap I love V8. It's like I'M MAKING JAVASCRIPT
08:56 < ningu> not drinking tomato juice?
08:56 < faceleg> forget juice
08:57 < SargoDarya_> s0urce: A browser automatically fetches a favicon.ico regardless if you specify one or not
08:57 < SargoDarya_> if you specify none it defaults to favicon.ico
09:01 < ningu> SargoDarya_: so it turned out that, instead of calling the callback twice, I was actually *not* calling it since, unbeknownst to me, listening to 'end' and 'error' on a socket was not enough -- I had to listen to 'close' instead of 'end'.
09:01 < ningu> so I guess the lack of that listener on the socket somehow made node thing it was time to terminate the process..
09:02 < deoxxa> well what would it do otherwise?
09:02 < ningu> but what I don't understand is, this was in an async.each(...) with an array of 15000 items. and it was dying after a couple thousand or so, on the item whose handler created the socket without a close handler.
09:02 < faceleg> rage! args[2] when I had removed an argument. facepalm
09:03 < ningu> deoxxa: I would think it would not quite since there were other listeners, but I think it was a race condition actually -- those listeners for the future items probably hadn't been created yet
09:03 < ningu> quit*
09:04 < ningu> any tips on how to debug a situation like this?
09:04 < ningu> it took me a long time to solve this one.
09:08 < faceleg> do I need to ->Ref() objects that are being used as arguments to JS callbacks in V8?
09:10 < faceleg> then ->Unref() after passing it to callback ?
09:11 < faceleg> or rather wth is my object 'undefined' in JS
09:11 < ningu> faceleg: you could try #v8 if people here don't know
09:13 < faceleg> omg there is a #v8 channel?
09:13 < SargoDarya_> ningu: Any hint on why it died?
09:13 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
09:15 < dested> i have a node instance that closes silently when i really slam it with requests, how can i cpture exactly what caused it to fail?
09:16 < SargoDarya_> dested: more logging?
09:16 < dested> i have decent logging throughou the app, and the whole thing is wrapped in a try catch
09:16 < ningu> faceleg: well, it exists, dunno who's there
09:16 < dested> it seems to ignore all of it
09:17 < ningu> SargoDarya_: no. it just died. that's what happens generally it seems when you don't call callbacks.
09:17 < ningu> or don't listen to the relevant events.
09:17 < SargoDarya_> that doesn't sound like an exception then
09:17 < ningu> right, it wasn't.
09:17 < faceleg> it exists, thanks ningu 
09:17 < ningu> faceleg: how many people?
09:18 < dested> right, it feels like i just pissed off the node instance bad enough for it to disappear... 
09:18 < dested> is there any place tat would log to or any event i can monitor.... somethinglike that
09:18 < dested> any extra logging ican enable
09:18 < faceleg> uh about 10 people ningu 
09:18 < ningu> SargoDarya_: what I really want is some sort of event emitter logging. sounds like dested could benefit from it too :)
09:19 < dested> lol
09:19 < tuhoojabotti> http://tuhoojabotti.com/:D/ to brighten your day, some offtopic.
09:19 < SargoDarya_> You could always just write a logger or do node server.js > log/application.log  or something like that
09:20 < dested> yeah, i guess i can see if it will give more valuable input hooking into it that way
09:20 < ningu> is there a way to log all events that are emitted?
09:20 < SargoDarya_> tuhoojabotti: trust me when I say my day is bright enough ;) https://fbcdn-sphotos-c-a.akamaihd.net/hphotos-ak-prn1/482451_4915907049959_79878904_n.jpg
09:21 < tuhoojabotti> SargoDarya_: You win.
09:21 < dested> is the mouth really big enough to see out of or is he asleep
09:21 < SargoDarya_> None that I know of. That's why I meant to write a logger.
09:22 < SargoDarya_> dested: well you can see through it but it
09:22 < SargoDarya_> 's too small to work with it
09:22 < dested> lol sounds right
09:22 < SargoDarya_> I was also buying lasagna with it on saturday. Was kind of fun.
09:22 < faceleg> ningu: room is dead
09:22 < ningu> SargoDarya_: not really sure what you mean. how would I log something that way?
09:23 < ningu> can I listen to all events?
09:23 < shoerain> so uh, res.body is empty when I use $.ajax, what's the deal? :( Curl works fine. I'm pretty sure I'm following the right instructions. https://gist.github.com/shurane/2173d59daf0ae92258dd
09:23 < ningu> I'm not sure I'd even really know how to find all the event emitters.
09:24 < ningu> you also have to specify the event you listen to -- can't listen to all events on an emitter, let alone find all the emitters.
09:25 < SargoDarya_> ningu: Write yourself a logger and log everything to a file. Or look for a logging library with loglevels and use it.
09:26 < ningu> SargoDarya_: I know how to write a logger. the question is, how do I get access to the data that I want to log?
09:27 < SargoDarya_> Hm... unless you find a way to hook into the core you probably can't. Just put it into your own events.
09:27 < shoerain> I'm also using express.js. Grr, I'd like for it to work.
09:28 < ningu> SargoDarya_: well, the point was that events were being emitted or not being emitted in a way I didn't expect, for "someone else"'s events :)
09:28 < ningu> but I think I can see a way to do this in the future. just put a logging listener on all events documented for an emitter I'm concerned about.
09:29 < ningu> shoerain: do you see the post in the express logger?
09:29 < faceleg> shoerain: on line #26 of app.js you're initializing data to {}
09:29 < ningu> nah that isn't the issue
09:29 < alchimista> hi everyone, I am using pkgClould and I managed to create an ec2 amazon instance, but when from browser i go and right click on the instance i recieve this message https://gist.github.com/anonymous/2b32c64c1b944bf42827
09:29 < SargoDarya_> hm... I really have no clue then.
09:30 < ningu> shoerain: are you sure data is correctly initialized in your client js?
09:31 < alchimista> from pkgcloud how can I add associate key pairs in instance
09:31 < ningu> shoerain: as in, var data = {}; or whatever
09:33 < SargoDarya_> bbl, gotta do some work now
09:40 < ningu> btw is there an approximate release date for 0.10?
09:46 < LFP> hi all
09:46 < LFP> what's the best channel for general chat?
09:52 < TheAceOfHearts1> what do you mean general chat?
09:56 < rk88> I do not understand how to "broadcast" messages to a particular client of group of clients with socket.io. I'm just starting out: can anyone point me to a tutorial on such topic? thanks in advance.
10:00 < hx10> is anybody find "/bin/sh: ./tools/gyp_node: No such file or directory" 
10:00 < hx10> what's the problem?
10:00 < hx10> Is anybody catch the error with ""/bin/sh: ./tools/gyp_node: No such file or directory" at configure step
10:01 < ningu> rk88: if you just google socket.io tutorial there should be plenty of results.
10:03 < hx10> Is anybody catch the error with ""/bin/sh: ./tools/gyp_node: No such file or directory" at configure step
10:03 < SargoDarya_> rk88: if you have a group of sockets in rooms then it's io.sockets.in('roomName').emit('messageType', object);
10:04 < SargoDarya_> else it's socket.broadcast('messageType', object);
10:04 < SargoDarya_> the last one will broadcast a message to every socket EXCEPT itself
10:10 < ningu> is it bad form to do: var foo = bar in baz;
10:11 < ningu> to set it to a boolean value?
10:12 < SargoDarya_> ningu: is that even supposed to work?
10:12 < mac_nibblet> What to people here think of TypeScript and Node.js ?
10:13 < ningu> SargoDarya_: it does seem to work.
10:13 < ningu> you can do if (foo in bar)
10:15 < SargoDarya_> ningu: Never heard of it. I think you can do it that way.
10:20 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
10:27 < Doriath> hey, I'm getting an error ETIMEDOUT when trying to connect to my database with mysql 
10:28 < Doriath> does anyone know how to fix it?
10:28 < SargoDarya_> Doriath is the server running?
10:28 < Doriath> yes
10:28 < alchimis_> in pkgCloud if i want to terminate an instance, I have to use client.destroyServer
10:28 < alchimis_> but as input i have to give serverId or what?
10:30 < Kakera> http://i.snag.gy/8SIRG.jpg best gift
10:31 < grahamsavage> hey
10:32 < grahamsavage> we're about to build an exceptionally large app.  Currently the bulk of the code is going to be in client side js
10:37 < grahamsavage> sorry lost internet conneciton
10:37 < grahamsavage> we're about to build an exceptionally large app.  Currently the bulk of the code is going to be in client side js
10:37 < grahamsavage> which will be a complete offline application with about 6 largish modules
10:38 < grahamsavage> the server side will need to manage live communications (large volumes) between the clients
10:38 < grahamsavage> and large data syncing (mp3 files / video files / json data etc)
10:38 < grahamsavage> our team knows javascript very well but we also have  a deep understanding of ruby on rails
10:38 < grahamsavage> we will also have to split up the server side application into several modules and be able to abritarely pull in additional modules
10:38 < grahamsavage> so my question.. is node.js mature enough
10:38 < grahamsavage> to worth risking a very large project on, how's it going to perform and are their enough libraries to do everything
10:39 < grahamsavage>  including processing images / tcp / udp connections etc
10:39 < deoxxa> grahamsavage: is anecdotal advice okay?
10:39 < grahamsavage> yeah 
10:39 < grahamsavage> very
10:40 < deoxxa> grahamsavage: i've built a system at work on node, over the course of about 2 years now. my experience so far has been great. node as a piece of software has been rock-solid, and the backwards compatibility on stable releases has been great. there are libraries for a lot of the common things you'd think of, and a lot of uncommon things as well.
10:41 < grahamsavage> what do you use for connecting to dbs?
10:41 < deoxxa> depends on the database
10:41 < grahamsavage> do you use any kind of MVC architecture? what do you use for unit tests?
10:41 < deoxxa> there are top-notch drivers for mongodb, mysql and postgres that i've used a lot
10:42 < deoxxa> the system i work on isn't a web application, so i can't help you on the MVC tip
10:42 < deoxxa> but for unit tests i've used vows (vowsjs.org) and mocha (visionmedia.github.com/mocha)
10:42 < grahamsavage> ahhh interesting
10:43 < grahamsavage> what's the performance like?
10:43 < deoxxa> spectacular, for the most part
10:43 < deoxxa> the performance issues i've hit have all been my fault
10:43 < deoxxa> and they've been easy enough to fix, thanks to v8's profiling dealies
10:43 < deoxxa> actually, no, i should correct that
10:43 < deoxxa> the performance issues i've hit have all been non-core
10:44 < ningu> there are quite a few MVC-style frameworks, expressjs is the most well known
10:44 < deoxxa> some libraries i've used have had terrible performance, and i've had to replace them or rewrite them
10:44 < alchimis_> pkgCloud , rebootServer out put error "amazon Error (400): Bad Request"
10:46 < deoxxa> grahamsavage: node is still at an "i hope you're prepared to get your hands dirty sometimes" stage, but it's getting more and more polished as the releases go by
10:46 < ningu> in my experience the toughest hurdle for getting up to speed with node is the async callback idiom
10:46 < ningu> even if you are used to client-side js it isn't really the same
10:46 < alchimis_> and this is my code https://gist.github.com/anonymous/259669ebeca19f4d29e4
10:47 < deoxxa> completely agree, ningu
10:47 < ningu> but it's also one of the reasons node is so powerful
10:47 < alchimis_> i take the error Error: amazon Error (400): Bad Request
10:47 < hipsterslapfight> i wouldn't call expressjs a mvc framework, but it does allow for easy creation of mvc
10:47 < alchimis_> any idea?
10:47 < hipsterslapfight> *an mvc
10:47 < grahamsavage> how's the async stuff go with debugging
10:47 < ningu> hipsterslapfight: fair enough
10:48 < deoxxa> grahamsavage: that's tricky sometimes! there are tools out there to help you though
10:48 < ningu> deoxxa: tools such as?
10:48 < ningu> I mostly know tools for helping to write async code, not debug it
10:48 < deoxxa> there's a module called "trycatch" that i've used to some success
10:49 < deoxxa> once i managed to get node-inspector working
10:49 < deoxxa> (lol)
10:49 < grahamsavage> are there any advantages to async code?
10:49 < deoxxa> once you get used to it, it maps so much more easily to your brain
10:50 < deoxxa> "do x, then when it's done, do y, then when it's done, do z"
10:50 < hipsterslapfight> grahamsavage: vs sync in node or vs syn in other languages?
10:50 < grahamsavage> vs sync
10:50 < grahamsavage> our server side language at the moment is ruby sooo
10:51 < SargoDarya_> A big plus is: the node community is big and active.
10:51 < SargoDarya_> and totally helpful
10:51 < grahamsavage> yeah i think that's essential
10:51 < deoxxa> yep!
10:51 < deoxxa> there are very few jerks in node-land
10:51 < deoxxa> there's a strict "no jerks" policy
10:52 < SargoDarya_> Never had a problem where someone couldn't help me. Google, StackOverflow, IRC. Top resources
10:52 < asdf12> but whats the pay like?
10:52 < SargoDarya_> Way more than enough.
10:52 < deoxxa> pay for..?
10:52 < grahamsavage> ok.. so how do you manage models / controllers / routing in node.js
10:52 < grahamsavage> i'd want to use a full MVC framework?
10:53 < deoxxa> grahamsavage: or not - it's your choice
10:53 < SargoDarya_> I'm using jugglingdb for models and databases which makes it somewhat rails like with User.find(1);
10:53 < deoxxa> grahamsavage: there's a pretty strong theme of "don't do more than you need to" in node
10:53 < asdf12> build your own mvc!
10:53 < asdf12> mix and match libs
10:53 < ningu> grahamsavage: the async model is basically the whole reason node was created. I saw an interview with ryan where he said he made a async-style interface in js cause there wasn't already an implementation so the landscape was wide open
10:53 < SargoDarya_> If you want something to quickly get up and running I suggest compoundjs
10:54 < grahamsavage> asdf12: i already have.. and it's a long and difficult process
10:54 < grahamsavage> not something i'm eager to commit too
10:54 < ningu> ryan = ryan dahl btw, creator of node.
10:54 < asdf12> thats weird, i find that way much better
10:54 < deoxxa> and he's right here! *points at the top of the nick list*
10:54 < grahamsavage> are there any major advantages of async? i
10:54 < SargoDarya_> It's actually quite easy if you built up on expressjs
10:55 < grahamsavage> i.e. is it faster... is it easier to spread across multiple cpus?
10:55 < deoxxa> grahamsavage: there's the obvious performance gains, if most of your time is spent waiting for databases
10:55 < ningu> anyway, the basic advantage is you don't end up blocking needlessly, and you also don't have to worry about threads, mutexes etc.
10:55 < grahamsavage> deoxxa: nearly all the time is spent waiting for db queries
10:55 < deoxxa> grahamsavage: perfect :>
10:55 < SargoDarya_> async basically allows you to do other stuff while your normal stuff is waiting.
10:56 < deoxxa> grahamsavage: node is perfectly suited to pushing bytes between different services and doing transformations in between (the definition of a common web app)
10:56 < asdf12> to be honest, i like node because i like javascript, thats the main attraction, idk about this async business
10:56 < ningu> as for spreading between multiple cpus, that's an interesting question and I have no idea since it isn't what i do
10:56 < SargoDarya_> Your wife is shopping for shoes and you're needlessly waiting? Screw that and do some awesome stuff instead.
10:56 < alchimis_> anyone read my question?
10:56 < alchimis_> any idea or help
10:56 < asdf12> no i didnt
10:57 < SargoDarya_> repeat please alchimis_ 
10:57 < deoxxa> grahamsavage: node is almost exclusively single-core - if you want to take advantage of multiple cpus, you run multiple copies of your application and balance between them with a reverse proxy (nginx, haproxy, varnish, http-proxy, etc)
10:57 < alchimis_> I am using pkgCloud 
10:57 < ningu> another thing node lets you do is control quite precisely how many things you want to do at once -- say you have 10,000 things to do, you can decide if you want to do 100 at once or 5
10:57 < deoxxa> grahamsavage: or there's the "cluster" functionality in core... which is kind of frightening
10:57 < alchimis_> I can manage to create an Instance on ec2, but when i wanna reboot as this code https://gist.github.com/anonymous/259669ebeca19f4d29e4
10:58 < alchimis_> I get Error "Error: amazon Error (400): Bad Request"
10:58 < alchimis_> or when i wanna client.destroyServer
10:58 < alchimis_> the same error
10:58 < asdf12> create an issue
10:58 < asdf12> no idea about that module
10:58 < alchimis_> or even when i wanna do getServer
10:59 < alchimis_> SargoDarya_: did u read my qstion? any idea?
10:59 < SargoDarya_> Well it looks like a failure on amazon EC2 side. Maybe you want to open a ticket there
10:59 < simenbrekken> Can someone recommend a nice, cheap SSL CA? Haven't bought in a while but I used RapidSSL the last time
11:00 < SargoDarya_> RapidSSL is still the cheapest afaik
11:00 < alchimis_> but what I  pass as argument is correct?
11:01 < alchimis_> this is the file https://github.com/nodejitsu/pkgcloud/blob/master/lib/pkgcloud/amazon/compute/client/servers.js
11:01 < deoxxa> alchimis_: try in #nodejitsu maybe
11:02 < alchimis_> thanx
11:02 < asdf12> i think focusing on async isn't so much what's so important, you say you're using ruby right? well there's jruby, there's event machine etc. so
11:02 < deoxxa> alchimis_: a lot of those guys will still be asleep though, you might want to wait a few hours until it's monday morning
11:02 < asdf12> thats why i said i dont care about this async business, its javascript that's cool
11:02 < deoxxa> alchimis_: (most of them are in the US, i mean)
11:03 < alchimis_> yeah , thanx for suggesting me this group
11:03 < alchimis_> i mean channel
11:04 < [jasper]> hej guys, I'm looking into rewriting a node module to a module which can run in browser
11:04 < [jasper]> what would be the way to replce module.exports?
11:05 < asdf12> [jasper]: you can look at browserfy, or wrap your module in an anonymous function
11:06 < asdf12> or, write your module entirely as a single object
11:10 < grahamsavage> SargoDarya_: use StartSSL
11:10 < grahamsavage> they are free
11:10 < grahamsavage> word of advice though, don't lose your certs
11:10 < grahamsavage> make sure you back them up because its $22 to cancel them
11:15 < [jasper]> asdf12 looked into that
11:16 < [jasper]> is there also a way to replce: self.addListener ?
11:17 < ningu> event emitters are about as nodey as you can get
11:19 < [jasper]> yeah that's what I figured
11:19 < [jasper]> so I'll just rewrite it all into functions
11:21 < asdf12> event emitter can be easily ported to the brower
11:21 < asdf12> some people already did it if you look around
11:33 < SargoDarya_> Btw. I really can recommend compoundjs. The project is so active it took 5 minutes until my last pull request was merged
11:54 < faceleg> any v8 experts hiding in here?
11:57 < Vill> Hello folks, Could you please answer my question: when using JADE templating engine why contents of <HEAD> tag are being rendered inside my <BODY> tag, while leaving <head></head> empty? and why "!!!" declaration at the top is being appended to <BODY> tag as well? I'm so surprised because 3 days ago, everything worked fine =S
12:03 < SargoDarya_> Vill: Without code in a pastebin I can only look into my magical glass orb.
12:04 < Doriath> hey, I'm getting an error ETIMEDOUT when trying to connect to my database with mysql, 
12:04 < Doriath>  does anyone know how to fix it?
12:05 < SargoDarya_> Doriath: Check the database logs if they say something
12:08 < Vill> SargoDarya_ http://jsfiddle.net/58MGf/ Thank you very much my friend
12:09 < SargoDarya_> Vill: That looks like you try to render a view into a layout
12:10 < SargoDarya_> Are you using some Framework?
12:10 < Vill> ExpressJS
12:10 < SargoDarya_> Are you sure that this is exactly and only what jade returns?
12:13 < Vill> SargoDarya_ you were right, I was trying to render sub-layout index.jade, which was extending layout, by redirecting res.render('layout', { title: 'Precision - Home' })  everything started to work! That's great advice from an experienced user!
12:13 < SargoDarya_> Vill you're very welcome ;)
12:15 < Vill> Sargo, I would really thank you, I need some advice, because I'm struggling with different things
12:15 < SargoDarya_> Here to help ;)
12:19 < Vill> Sargo, may I ask the follow-up question? How to properly extend layout.jade with index.jade? 
12:21 < Vill> I included "block content" in the layout.jade and then in "index.jade" Stated: 
12:21 < Vill> extends layout
12:21 < Vill> block content
12:21 < Vill> <indent here>...contents
12:21 < Vill> But the same error as above occurs (head is empty, head properties are appended to body)
12:22 < SargoDarya_> hm.. how do you include the block?
12:24 < Vill> http://pastebin.com/W61yib7T
12:27 < Vill> if you need more parts of my code, just let me know#
12:29 < asdf12> '9 tests pending' testsssssssssssssssssssssssssss@#F#@F!aSD!
12:29 < asdf12> always seems like there's tests pending
12:33 < SargoDarya_> Vill, have you read through this? https://github.com/visionmedia/jade#template-inheritance
12:35 < Vill>  SargoDarya_ i was reading throu all different kinds of stuff, but at the end everything blends together... what I conclude in this second right now is: when I use BLOCKS I should disable LAYOUTS?
12:35 < SargoDarya_> No
12:35 < SargoDarya_> You have one basic layout which defines blocks.
12:35 < Vill> snap =/ Can I have 50/50?
12:36 < SargoDarya_> You can now extend this layout and input content into the defined blocks
12:36 < simenbrekken> SargoDarya_: Thanks for the reply, I'll run with RapidSSL again
12:37 < SargoDarya_> simenbrekken: Good choice.
12:54 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:55 < Vill> SargoDarya_ sorry to bother You, I've done a COPY-PASTE from https://github.com/visionmedia/express/tree/master/examples/jade but it again appends head to body thing =/
12:56 < SargoDarya_> No worries, maybe it's the same thing again as before?
12:59 < Vill> it definetly is, because I'm trying to render the sub-layout by calling res.render('<mySubLayout>', ... truth is, It used to be working last Friday, and when I modified something today, it stopped to work)
13:01 < simenbrekken> Anyone played around with node.js on AWS OpsWorks? I'm trying to figure out how to set custom environment variables for stuff like NODE_ENV, database etc.
13:03 < SargoDarya_> what's the thing you modified?
13:06 < Vill> I have "app.use(app.router);" in my main app.js then "res.render('main', { title: 'Precision - Home' })" pointing to the  template. Template contains "extends ../layout" and defines blocks. The only this i modified, my dear SargoDarya_ is "layout" --> "main" in res.render(
13:15 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:19 < SargoDarya_> that should still work actually 
13:22 < sam_> hey guys just want to ask how to develop a node web app without using a framework at all by just using different module such as npmjs.org site
13:23 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:26 < jeturcotte> Herro; does anyone here know off the top of their heads if it is mongoose itself that is 'pluralizing' my newly spawned collection names (and if so, how to stop it)
13:29 < Vill> jeturcotte, when i was using mongoose in my project, i just called the collection "user" and in MongoDB there was "user" collection, is that what you want?
13:34 < faceleg> if anyone would be able to help with this, I'd appreciate it with every fibre of my being
13:34 < [jasper]> hej guys. can anyone tell me what once does ?
13:34 < faceleg> http://stackoverflow.com/questions/15202676/instantiate-pass-c-object-to-node-js-function-v8
13:34 < [jasper]> as a function?
13:34 < [jasper]> can't find it on google...once gets quite a lot of result s:(
13:37 < [jasper]> hmm probably part of the eventemitter :/
13:40 < nm_> hi
13:40 < nm_> has anyone used acl module ?
13:41 < nm_> https://npmjs.org/package/acl
13:41 < nm_> this one
13:41 < nm_> i am having problems using it with mongodb
14:04 < Vill> SargoDarya_ 2 hours later... removng "extends layout" in the sub-layout solved the problem, so using "include" is actually better than using blocks, also, when a layout has "include" and we are trying to render a sub-layout the "include" in the layout won't be rendered, probably because the async methods
14:06 < Vill> nm_ is this what are you looking for: "var sessionStore = new MongoStore({db: 'mySessionDB'});;" ?
14:06 < SargoDarya_> sounds totally weird
14:07 < Vill> Sargo, don't ask me, I'm the newb here!
14:09 < Vill> SargoDarya_ many users said, that partials are missing in the new Express 3.0
14:10 < Vill> and this is probably what applies in my situation as well, I want to have "nice" sub-layout, not trashed by all includes, but the layout which i depend on, cannot declare this includes
14:42 < JohnMcLear> Got bored and made a real-time collaborative slideshow http://beta.etherpad.org/p/slideshow?slideshow=true
14:53 < Scrat> will fs.watch() be removed in the future?
15:13 < saml> is nodejs good?
15:13 < C0deMaver1ck> define good
15:14 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:14 < pachet> pure of heart
15:17 < rcaskey> hey all, aneyone here know why attempting to connect to a local socket that isn't open times out immediately on OSX but not in linux?
15:17 < bnoordhuis> saml: it's chaotic neutral
15:18 < AAA_awright> ^
15:18 < rcaskey> on linux i've got a good few seconds before it gives up
15:18 < bnoordhuis> rcaskey: local socket == tcp or unix socket?
15:18 < rcaskey> tcp
15:18 < funkbox> saml: used as a mid-range 4-seater vehicle it's terrible 
15:18 < funkbox> saml: if you use it for building web apps it's not bad
15:19 < bnoordhuis> rcaskey: it should fail almost immediately with ECONNREFUSED
15:19 < bnoordhuis> strace should tell you if it does
15:19 < rcaskey> bnoordhuis, on my server it tries for like 5-10 seconds before giving up
15:20 < rcaskey> and i had a 300 ms timer to restart the connection process over and over again until it did connect, only OS X its practically instant
15:20 < Scrat> is there a reason fs.watch() is still unstable other than it's unavailability on some platforms?
15:20 < bnoordhuis> rcaskey: well, try strace and see what comes up
15:20 < bnoordhuis> Scrat: because we might still change it when something better comes along
15:21 < bnoordhuis> Scrat: for example, v0.10 will use fsevents instead of kqueue on os x
15:21 < Scrat> bnoordhuis: ok
15:28 < MI6> joyent/node: Xidorn Quan master * 009ba02 : dns: fix ReferenceError in resolve() error path  A typo in the variable n - http://git.io/z3WbFQ
15:28 < saml> how do I get hubot running with xmpp?
15:38 < Nopik> i'd like to use promises/futures in my node.js programs, they havent been standarized yet, right? which library seems to be the best candidate for further standarization? i.e. which choice will bear least risk for later migration to standard (once the standard will be defined by commonjs)? 
15:39 < asdf12> it is standardized for commonjs i believe
15:40 < asdf12> oh never mind it isn't yet
15:40 < Nopik> yeah, i expected the same, but when i started to dig deeper, it seems it is still a proposal
15:40 < asdf12> but usually i hear people say 'q'
15:40 < asdf12> https://github.com/kriskowal/q
15:41 < Nopik> i got the same conclusion, 'q' seems to be the best, just wanted to check what people are using
15:41 < Nopik> or, the most widespread approach is to not use promises at all? :)
15:42 < asdf12> some people do, some people don't
15:44 < pachet> i wouldn't build around them
15:49 < lbdremy> hi
15:53 < jhsto> hi
15:59 < MI6> joyent/node: isaacs master * 119cbf4 : stream: Don't require read(0) to emit 'readable' event  When a readable l - http://git.io/s1XiFA
16:06 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:09 < doomslice> does anyone know how i might take a substring of a string while preserving html?
16:11 < doomslice> like: 'This is my <a href="#">link. It is a good link.</a> I hope I can take a substring".substring_html(0, 18) -> "This is my <a href="#">link.</a>"
16:12 < gildean> doomslice: easiest is to use something like cheerio to parse the dom and then manipulate it
16:13 < gildean> so it would be something like: cheerio.load('<a id="mylink" href="#">this is a link</a>'); 
16:14 < gildean> and then $('#mylink').text($('#mylink').text().substring(9, 4));
16:15 < gildean> or something along those lines
16:16 < doomslice> gildean: thanks, i'll have to think about how to generalize it
16:16 < skope> there is nothing like [3:] in nodejs?
16:16 < skope> like python has
16:16 < skope> i'd need to split a string after fourth match
16:17 < skope> str.split(' ')[3:] doesn't work
16:17 < wwicks> skope: I think that is one of the things you get with coffee script
16:17 < skope> i don't want to use it
16:18 < wwicks> skope: I don't use it either. That answer is no: Javascript (nodejs) doesn not have that natively
16:18 <@Nexxy> skope, node is just javascript
16:19 < skope> Nexxy: yeah, but i didn't know how to achieve that in js either
16:19 < skope> is there anything with what i can achieve that?
16:19 < substack> >> 'abcdefg'.split('').slice(3)
16:19 < purr> substack: (object) ['d', 'e', 'f', 'g']
16:19 < substack> is what you want I think
16:19 < skope> substack: yes. thank you
16:20 < substack> >> 'abcdefg'.split('').slice(-2)
16:20 < purr> substack: (object) ['f', 'g']
16:20 < substack> etc
16:20 < substack> >> 'abcdefg'.split('').slice(2,4)
16:20 < purr> substack: (object) ['c', 'd']
16:20 < skope> got it, thanks
16:20 < skope> slice was new to me
16:20 < asdf12> you dont have to use split fyi
16:21 < skope> asdf12: enlighten me
16:21 < asdf12> str.substr(3)
16:22 < asdf12> >> 'abcefg'.substr(3)
16:22 < purr> asdf12: (string) 'efg'
16:22 < asdf12> oh forgot d
16:22 < skope> >> 'first second third.substr(3)
16:22 < purr> skope: SyntaxError: Unexpected token ILLEGAL
16:22 < skope> >> 'first second third'.substr(3)
16:22 < purr> skope: (string) 'st second third'
16:23 < asdf12> oh you wanted it to be an array?
16:23 < skope> asdf12: just wanted to get everything after third space
16:23 < skope> fourth*
16:24 < draginx> does 0.8.21 fix that hTTP problem in which you had to use domains to fix?
16:24 < draginx> I see HTTP hang up related errors
16:24 < draginx> but idk if they're talking about the same thing..?
16:24 < asdf12> then yes use split
16:25 < asdf12> unless you were just going to join it again?
16:28 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:39 < asdf12> netflix... silverlight's single user
16:51 < kenperkins> who uses netflix in the browser?
16:52 < dhci> I don't know if there are other irc channels to also ask this in but when I use the pg module and get a response in query.on('end') function, how do I wait until that data has come in to formulate a res.end() response of the http server? Is it ok to chain the res.end() call inside query.on('end') 
16:53 < dhci> so I would have res.end calls in the query failure section, the query end section, etc. to catch all the cases
16:55 < wwicks> dhci: yes- res.end() inside the pg end callback is fine
16:56 < wwicks> dhci: presuming you would respond differently depending on the result, yes- you need to put an appropriate res.end() in all code paths
16:58 < dhci> ok thanks. the db call seems to be coming back ok I just have to formulate the res.end poperly for jQuery to get it
17:13 < wieshka> has anyone managed to extend Deployd.com with support of request from dashboard or injected shellJs
17:14 < wieshka> basically i am trying to extend Deployd with shell exec functionality with no any luck
17:39 < wwicks> This will do it: https://github.com/williamwicks/propex#lets-be-picky ..Otherwise, I haven't seen anything else like it.
17:41 < rickibalboa> Say I have an object, which kind of extends a normal socket, it has events, timeouts and other such stuff. Should I be cleaning all this up when I want to destroy it, can I just delete it or set it to null. I'm having some bizarre problems which looks like the socket may be still alive even though the object has been deleted/nulled
17:49 < jhsto> rickibalboa: I read from somewhere that on a long run you dont want to have nulls floating around. Makes debugging a hell.
17:51 < rickibalboa> Well. I just = null it so the garbage collector can pick it up, cause it's quite a large object and I want to make sure it definitely gets cleaned. Then I just delete the object from my key store. But for some reason, the contents of that object are, well still alive. Sockets / event listeners what not.
17:51 < rickibalboa> Not sure if I'm doing the right thing though.
17:59 < stagas> rickibalboa: as long as something keeps a reference to the object it won't get garbage collected. so you have to clean up listeners etc
17:59 < rickibalboa> Ok thanks.
18:04 < shoerain> so uh, res.body is empty when I use $.ajax, what's the deal? :( Curl works fine. I'm pretty sure I'm following the right instructions. https://gist.github.com/shurane/2173d59daf0ae92258dd
18:08 < wwicks> shoerain: do you need to JSON.stringify(data) before handing it to $.ajax?
18:14 < genazt> does someone in here use passport ?
18:20 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:21 < shoerain> wwicks: oh right, no. But I tried it with and without.
18:24 < wwicks> shoerain: have you looked in your browsers inspector at what the ajax call is sending? It sounds like nothing is getting sent.
18:25 < unsafe> I'm not seeing this in the docs, but I thought I'd check -- can domains (http://nodejs.org/api/domain.html) be used for non-error events?
18:25 < shoerain> Hm.. so in chrome, I'm guessing it's in the Network panel of the debugger, then in the "Request Payload"?
18:25 < shoerain> which is empty for me
18:27 < genazt> does someone know a passport strategy for stackexchange (oauth2) ?
18:27 < diogogmt> which async JSON parser is recommended to use? Here is a list with a few of them: https://github.com/joyent/node/wiki/Modules#wiki-parsers-json
18:27 < diogogmt> I'm having to parse a json object uploaded from the client and I don't want to make a blocking call to JSON.parse
18:28 < deoxxa> diogogmt: i've used clarinet before
18:29 < deoxxa> diogogmt: keep in mind that if you parse a single block of data though, it'll be pretty much the same as calling JSON.parse
18:29 < base698> diogogmt: JSON.parse is cpu bound, not io bound, why would you not want it blocking?
18:30 < diogogmt> base698: what do you mean? can you explain it further?
18:30 < genazt> diogogmt, https://github.com/dominictarr/JSONStream
18:31 < genazt> json.parse doesnt do anything with i/os since it doesnt read or write to anything like files or sockets
18:31 < diogogmt> deoxxa: the file could be large sometimes, what is the threshold to make it worth it using clarinet?
18:31 < genazt> the only thing it blocks is in the cpu (for calc of the json parsing)
18:31 < deoxxa> diogogmt: well it's not the size that makes it important
18:32 < deoxxa> diogogmt: if you can parse it as it comes in, that's a win, but if you're buffering the whole thing up, it'll be much faster just to use JSON.parse
18:33 < diogogmt> deoxxa: genazt makes sense, thanks.
18:35 < windsurf_> any recommendations for hosting a node/express/mysql site?
18:35 < windsurf_> this is for a mom & pop shop business, low traffic.
18:39 < EyePulp> windsurf_: digital ocean is cheap and novel
18:40 < windsurf_> EyePulp: thanks 
18:40 < EyePulp> windsurf_: I haven't used them yet myself.  I'm pretty happy on linode, but it's more expensive.
18:41 < windsurf_> thx
18:44 < s5fs> yeah, i'd like to hear if anyone has a digital ocean vm. i'm currently on linode and am happy, but all i use it for is my screen session for irssi and hosting some static files (mostly personal notes)
18:45 < s5fs> $5/mo vs $20/mo is quite attractive
18:45 < EyePulp> s5fs: for that little of purpose, I'd say it might be worth taking the plunge
18:45 < windsurf_> i can't tell if DO has node and mysql or is one supposed to set up their own server from scratch?
18:46 < s5fs> EyePulp: worst case, i can buy four VMs for the same price as one linode ;-)
18:46 < bitfed> Can someone tell me what's wrong with these few lines of code?: http://jsfiddle.net/sUd3u/
18:46 < EyePulp> windsurf_: I believe they're bare vps instances you install whatever you want on
18:47 < shoerain> wwicks: is there a difference where I do the $.ajax() call? I'm doing it between <script> tags on the html page. my $.ajax(..).done() method says the http request went successfully, but yeah, my request payload is empty.
18:47 < windsurf_> EyePulp: I see.
18:47 < EyePulp> s5fs: set up a load balanced cluster
18:48 < s5fs> windsurf_: linode is a bare VPS, you have to install and manage the system yourself. if you're looking for a 'set it and forget it' hosting solution for a customer, an unmanaged VPS isn't the way to go
18:48 < EyePulp> windsurf_: https://www.digitalocean.com/community/articles/how-to-install-an-upstream-version-of-node-js-on-ubuntu-12-04
18:48 < s5fs> windsurf_: if you're looking for managed VPSes, I can recommend opusinteractive.com. i've used them for a few managed windows vpses in the past and have always appreciated their support
18:48 < wwicks> shoerain: it shouldn't matter where- as long as you have the ref to $. The problem has to do with how you're giving the info to jQuery- I'm sure you're just missing an optoin or somthing that is making it ignore your data.
18:49 < windsurf_> EyePulp: thanks that is pretty easy.. i guess there might be an apt-get for mysql also
18:50 < windsurf_> s5fs: thanks
18:50 < EyePulp> windsurf_: that link, btw, is essentially what you would do on any VPS anywhere - DO isn't providing anything more than giving you an empty vps to play with
18:50 < windsurf_> Understood.
18:50 < windsurf_> EyePulp: I wonder how hard it is to set up a domain name compared with cpanel on a LAMP stack
18:50 < MI6> joyent/node: Bert Belder master * 890dc2e : win/msi: make msi build work when spaces are present in the path - http://git.io/JHhpsQ
18:52 < EyePulp> windsurf_: That's a subjective question - but I'd say it's a one-time learning process, and worth the effort to learn w/o using cpanel.   It's fairly easy once you learn the process, and it's also much easier to diagnose problems, as you know what settings to look at.
18:52 < wwicks> shoerain: jQuery can be strange- if you're certain that 'data' is a string, then try to give it a 'complete' callback (even if you don't want it)
18:53 < EyePulp> I'm guessing both DO and Linode provide some DNS routing, which would point to the static IP you get with your instance.  
18:53 < windsurf_> EyePulp: fair enough
18:53 < wwicks> shoerain: when I had that problem, It was because data wasn't a string if I remember correctly
18:56 < RodrigO23> Ola pessoal
18:56 < RodrigO23> Whats up?
19:02 < MI6> joyent/node: piscisaureus created branch reviewme2 - http://git.io/WOnaAA
19:10 < asdf12> i can't leave linode
19:11 < asdf12> i've been wanting to
19:11 < asdf12> i made the mistake of using the free dns hosting they provide, and now if i want to leave, it'll be a nightmare updating all those NS records
19:11 < deoxxa> linode gets crazy and burns all your shirts if you say you're leaving
19:12 < asdf12> i offered to pay them just for the dns hosting, they won't let me heh
19:12 < deoxxa> ha
19:14 < dreamdust> Why is that a mistake? I mean, whoever you use for DNS you would have to update the NS records either way.
19:15 < asdf12> yea but i'm effectively paying 20$ for it
19:15 < asdf12> or you can manage your own dns
19:15 < asdf12> err name servers
19:15 < deoxxa> damn, now you won't be able to afford the payments on that yacht
19:15 < dreamdust> lol
19:16 < asdf12> well 20$ for dns hosting is pricey
19:16 < dreamdust> It's not $20 from linode.
19:16 < dreamdust> It's part of a package.
19:16 < asdf12> besides, it's like whoever mentioned, i could have 4 vps instead of 1, but i can't switch
19:16 < dreamdust> Well, maybe it is. I only have like 20 zones.
19:17 < asdf12> it's 20$ because i have to keep my vps, even though i want to switch/get off linode
19:17 < dreamdust> Why do you want to leave linode?
19:17 < faceleg|work> Anyone in here with V8 experience?
19:17 < shoerain> wwicks: curses, $.ajax() works on the console.
19:17 < asdf12> because i could have 4 vps instead of 1?
19:17 < shihan> personally, linodes dns bits are one of the reasons i stay with them
19:19 < dreamdust> asdf12: Sure, with a much crappier provider.
19:20 < dreamdust> If one VPS box isn't enough for you, you're probably doing something wrong.
19:20 < asdf12> oh, i guess i don't like redudancy
19:21 < EyePulp> "dreamdust: If one VPS box isn't enough for you, you're probably doing something wrong."   Come again?
19:21 < asdf12> and yea maybe i won't get as much cpu bursts, and it's some junk bandwidth, but hey 2GB memory vs 512mb
19:21 < shihan> heh, i was just thinking that myself... if i could, i'd have about 20 vps's :D
19:21 < ohnoesitsraphy> Is Heroku the best recommended platform for a node app?
19:22 < icodeforlove_> https://www.digitalocean.com/
19:22 < EyePulp> If you can get by with only one, then I wonder just how serious your job/business/system is to begin with… 
19:22 < deoxxa> cutting costs at the infrastructure level is almost never a good idea
19:22 < EyePulp> deoxxa: amen
19:22 < asdf12> no the idea is, you rather have tons of cheap hardware
19:22 < shihan> deoxxa, couldnt agree more
19:22 < asdf12> than a few good ones
19:23 < shihan> though i do also agree with asfd12 on that too... assuming you have the abilities to load balance effectively... hell, it works for google quite well
19:24 < MI6> joyent/libuv: Bert Belder master * 1ba5926 : windows: link with advapi32 and shell32 libraries  Older versions of GYP  - http://git.io/LpVGWw
19:26 < MI6> joyent/libuv: Bert Belder master * ea0796f : windows: link with advapi32 and shell32 libraries  Older versions of GYP  - http://git.io/LP-V1g
19:28 < faceleg|work> test
19:28 < faceleg|work> it does depend on sysadmin abilities
19:28 < faceleg|work> cluster can be tough to manage compared to a single beast
19:42 < faceleg|work> Aw
19:45 < azylman> How do I updated packages that are installed globally with npm?
19:50 < JorgeP> @azylman you can either do "npm update -g [appname]" or you can try to re-install it "npm install -g [appname]"
19:51 < azylman> JorgeP: Thanks!
19:55 < baranaby> Hey all, anyone have trouble using XHR requests from Zombiejs? I can't tell if I'm doing something wrong or if it's Zombiejs.
19:57 < baranaby> My code is running fine in the browser, but when I point Zombiejs to visit the same page it loads the html, loads the js, and then complains about the first XHR response. :(
19:59 < MI6> joyent/node: Ben Noordhuis v0.8 * ecf9f60 : doc: add url.resolve() usage examples  Fixes #4913. - http://git.io/pmkP6A
20:01 < Couto> which package are you guys using for the logging bot? =P
20:02 < nonotza> how does one echo a blob in twig?
20:05 < nonotza> ok, in the view, I used raw escaping to show the text. however in the form, it the blob field shows up as Resource ID #5
20:07 < bnoordhuis> Couto: https://github.com/piscisaureus/slurp
20:07 < Couto> bnoordhuis thanks =)
20:10 < deoxxa> nonotza: twig? the php template thing?
20:11 < deoxxa> nonotza: you do realise this is #node.js, right?
20:11 < nonotza> haha - thanks deoxxa - I did not realize that :)
20:12 < deoxxa> lol
20:12 < deoxxa> happens to the best of us
20:15 < eighty4> whenever I'm doing anything with npm I'm getting this: http://paste.is/1145/ I've googled it but all I can find about it is that it should be fixed 1 year ago. Any ideas?
20:17 < MI6> joyent/node: Trevor Norris master * d09ab61 : events: code consistency  v8 likes when smaller functions have a single r (+1 more commits) - http://git.io/VaXNUg
20:18 < context> eighty4: weld 0.2.2 fixed it. you have 0.2.1
20:18 < context> i cant seem to find whatever eventemitter package you are running
20:19 < eighty4> context: missed saying that I don't have it installed. At least I've done sudo npm uninstall -g weld
20:19 < context> eighty4: again. 0.4.3 eventemitter2 fixes it as well. you are running 0.4.1
20:19 < eighty4> context: not sure how to update a package I don't have installed :|. Suggestions?
20:19 < context> eighty4: im assuming its a package required by a package you are installing.
20:22 < eighty4> ok… not sure how this work. I should probably read up on it instead of trying to debug it.
20:22 < eighty4> context: thanks for thei nput
20:22 < eighty4> *input
20:22 < aroman> so now that source map support is out in coffee script, how can we get that goodness working with node?
20:22 < aroman> i.e for debugging
20:23 < superjoe> aroman, the same way that you could a year ago
20:23 < superjoe> aroman, compile your code before you run it
20:23 < aroman> er, I mean like using the V8+Chrome debugger
20:24 < aroman> i've been writing my node.js code in CS for a long time now
20:24 < eighty4> context: there we go, blacksmith depended on it. Apperantly something having it depending on it isn't the same as having it installed by itself. Removing blacksmith solved it all
20:24 < eighty4> thanks for the help!
20:26 < context> eighty4: npm list should show you a tree of whats all installed, and you can see whats depending on something
20:27 < eighty4> context: yeah, found that :)
20:33 < cpsubrian> Adding a repl to my app.  How do you handle async calls properly (IE dont show the '>' prompt untill the previous async call finishes)
20:40 < Sven_vB> i think you'd have to map that async call into a new execution contest, for else you can't know whether all the other async calls it started have finished yet. in simple cases where you can assure it will transport a callback that's called really only when everything it has spawned as completed, you can build the repl with that callback as the thing that makes it repeat itself.
20:40 < Sven_vB> *context
20:41 < Sven_vB> however, execution contests could be an idea for military entertainment.
20:42 < eighty4> deoxxa: hey! You tend to be opinionated. Coffeescript or not? 
20:42 < Sven_vB> oh, and in the general case, make that repetition callback the "on finish" handler for the new execution context.
20:42 < deoxxa> FUCK COFFEESCRIPT
20:42 < deoxxa> is my official position
20:42 < killing-joke> because?
20:42 < eighty4> deoxxa: cool
20:42 < deoxxa> because in the process of trying to wallpaper over the silliness of javascript, they've introduced their own brand of silliness
20:43 < killing-joke> hehheheh :)
20:43 < Industrial> I wish filter, map etc were as fast as for(){}. Can't use them at work because 'slow'.
20:43 < Sven_vB> do we already have a D-to-JS compiler?
20:43 < deoxxa> except that their silliness is a byproduct of bad implementation, not one of rushed design
20:43 < azylman> deoxxa: example?
20:44 < Industrial> Is there a node version manager a la rvm for ruby?
20:44 < azylman> nvm
20:44 < azylman> :p
20:44 < Industrial> lmao
20:44 < deoxxa> azylman: there's a bunch of examples on a page i saw the other day, one moment
20:46 < eighty4> deoxxa: read a bit about debugging coffee and it seem as you need to first find what's wrong with the "compiled" js code, given it's not code you've written it might be hard. Then try to figure out how to fix it in coffee. I.e. a couple of more layers of complexity. But I've always wanted to learn coffee :/
20:46 < deoxxa> azylman: https://github.com/satyr/coco/wiki/wtfcs
20:46 < azylman> eighty4: I've been using coffeescript for a long time and you rarely need to dive into the compiled code first
20:46 < superjoe> deoxxa, I was just about to link there
20:46 < superjoe> also https://github.com/satyr/coco#why
20:46 < deoxxa> superjoe: +1
20:47 < superjoe> the worst offender IMO is the variable scoping
20:47 < deoxxa> eighty4: to its merit, the compiled js that it outputs is pretty easy to sort through and it's usually not too hard to figure out what came from where
20:47 < deoxxa> eighty4: but... there is a cognitive disconnect there, regardless
20:48 < eighty4> azylman: how do you debug?
20:48 < azylman> Like I said, you very rarely need to dig into the compiled javascript
20:48 < azylman> I've actually only had to do it once
20:48 < superjoe> azylman, this is what I hear when you say that: "I have only worked on a real project once."
20:48 < azylman> lol
20:48 < azylman> Given that you don't know anything about my background, that's a pretty tall statement :)
20:48 < deoxxa> eighty4: i would personally never use coffeescript (again, that is; i used it for one project and decided it wasn't for me), but there's no reason you shouldn't give it a go
20:48 < azylman> I work on a real project every single day
20:49 < eighty4> azylman: again, how do you debug something? From what I understand you'd get a line number from the compiled js? Or can you get what line in coffee is causing the problem?
20:49 < deoxxa> azylman: 12 steps to victory
20:49 < eighty4> deoxxa: I already am :)
20:50 < azylman> eighty4: The new release of coffeescript introduces source maps, which give you errors in terms of coffeescript line numbers instead
20:50 < eighty4> azylman: as of 1.6.o?
20:50 < azylman> Yeah
20:50 < azylman> eighty4: Before that, it's still USUALLY pretty obvious. When you see something like "cannot access property 'dog' of undefined" and you're like "Oh, I only access a property 'dog' once in this file...
20:51 < eighty4> azylman: true :)
20:51 < superjoe> I'd use coffee-script except for the few language features that destroy it for me such as implicit return
20:51 < superjoe> and the fact that if a project uses coffee-script, it's an immediate warning flag that it might have been written by an amateur
20:51 < azylman> lol
20:51 < azylman> really?
20:51 < superjoe> I dunno why but amateurs always choose coffee-script over javascript
20:52 < superjoe> I'm not saying it works the other way,
20:52 < superjoe> but because of statistics, it becomes a warning flag
20:52 < finishingmove> superjoe coffee-script = javascript for people coming from ruby
20:52 < azylman> If I had to guess that's probably a confirmation bias thing :p
20:52 < finishingmove> draw the conclusion
20:52 < finishingmove> :D
20:52 < azylman> I've seen some very awful javascript
20:52 < superjoe> finishingmove, haha
20:53 < superjoe> azylman, I'll give you that it may be influenced by confirmation bias
20:53 < superjoe> I am human after all
21:08 < icodeforlove_> I'm trying to setup a local npm registry and I'm running into a wall when creating users, anyone have a private registry?
21:10 < faceleg|work> holy god I hate coffeescript
21:12 < bradleymeck> icodeforlove: sup, _users database is used for the npm registry
21:12 < bradleymeck> so permissions need to be set appropriately … /me digs around
21:13 < eighty4> faceleg|work: any specific reason?
21:15 < Industrial> dnode lets me do rpc right? and shoe carries it from websockets all the way down to ie 7 (and probably below) compatabilitywise? How do i call a dnode function on the server that lives on the client?
21:19 < Industrial> Can I make a selection of clients easily?
21:19 < bradleymeck> Industrial: just keep an array of them is what I would do
21:19 < bradleymeck> when you get a new dnode connection hold onto it somewhere
21:22 < deoxxa> Industrial: you might also be interested in https://github.com/deoxxa/pillion - i wrote it just recently
21:22 < faceleg|work> eighty4: I can't read it as well as JS, so it's a personal preference
21:22 < deoxxa> Industrial: i personally feel it's a lot neater than dnode in its implementation, but that's subject to opinion
21:24 < deoxxa> Industrial: it's worth noting that it only uses streams2 so it should work in a browser so long as there's a stream2 implementation that runs there
21:25 < Industrial> deoxxa: I'm specifically looking for ie7 support, since I'm writing a test server that takes browser sessions as slaves for DOM tests.
21:26 < Industrial> .. and my client needs it :P
21:46 < jan> hi
21:46 < jan> i have a bit of trouble with cloud9
21:47 < jan> so are some experts present here who can help
21:47 < jan> probably something simple
21:50 < HankHendrix> has anyone had trouble adding a new prop to an object inside a forEach??
21:50 < bnoordhuis> jan: there's a #cloud9 channel
21:50 < bnoordhuis> but shoot anyway
21:51 < HankHendrix> has anyone had trouble adding a new prop to an object inside a forEach??
21:52 < deoxxa> HankHendrix: yes, you should fix line 19 of your app.js
21:52 < deoxxa> HankHendrix: the point i'm making is that you've not given us even nearly enough information
21:52 < deoxxa> HankHendrix: 1) paste code 2) ??? 3) profit!
21:53 < dhzr> step 2 and 3 sound a lot like php
21:53  * dhzr goats.
21:53 < deoxxa> ha
21:54 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
21:54 < faceleg|work> give me pasties or give me death
21:57 < HankHendrix> deoxxa: it'a quite specific and didn't want to waste time
21:57 < deoxxa> oh ok
21:57 < deoxxa> so what you're saying is
21:58 < deoxxa> "i have a problem that probably relies heavily on context"
21:58 < deoxxa> "but i thought i'd ask about it without providing any context"
21:58 < deoxxa> cool logic!
22:02 < daleharvey> rvagg: looks like the levelup update broke pouchdb
22:09 < faceleg|work> deoxxa: careful they bite sometimes
22:29 < pspeter3> Does anyone know of a good script that setting a variable in a config json file with the latest git commit/
22:34 < faceleg|work> ?
22:35 < joliss> npm (1.2.13) isn't creating a node_modules/.bin directory when I run "rm -r node_modules; npm install". Has this been changed?
22:36 < pspeter3> faceleg|work: I have a config.json file an I want to set the key "commit" with the latest git commit
22:36 < pspeter3> faceleg|work: The plan is to mount the static middleware under the latest commit version for cdn purposes
22:38 < joliss> hm, ignore me... i think i just got the dependencies wrong o_o
22:52 < mscdex> muahahaha! a very fast multipart parser!
23:00 -!- mode/#Node.js [+o sblom] by ChanServ
23:00 < faceleg|work> you could use nodegit, https://github.com/tbranyen/nodegit to get the latest commit of a given repo
23:00 < faceleg|work> and add it to config json somehow 
23:06 < faceleg|work> pspeter3: if you have trouble with nodegit please either ask me in here or open an issue on GH
23:07 < guybrush_> isaacs: with npm is it possible to tell it which node version i want to use for plugins when i run `npm i` ?
23:09 < guybrush_> my problem is, i have some old apps running (which i dont want to upgrade to new node) which depend on plugins - now when i run "node06 `which npm` install" i will get errors since the latest npm-version might not fully work with node0.6
23:09 < dobedobedoh> I'm trying to find a way of installing specific versions of a set of node.js modules (using npm). Is there some way I can have a .npm config file in my project directory, or am I best creating a npm package for my project and publishing it for all devs, specifying a version for each of the packages we use?
23:09 < davidbanham> dobedobedoh: Sounds like you want package.json
23:09 < cicoder> You know when you worked soo much, your head cannot accomplish the simplest of math equations?  Someone help me out please? I have 630 activities, all with a scoring of 1-10; now I want to give the user a overall score out of 10, so I need to come up with the equation for the base 10.... anyone?
23:10 < faceleg|work> ?
23:10 < faceleg|work> add them all up (the scores)
23:10 < faceleg|work> then uh
23:10 < faceleg|work> screw it I'm in teh same boat
23:10 < cicoder> lol.
23:10 < dobedobedoh> davidbanham: So I can just put a package.json in my project directory (a php project using YUI modules so we want shifter, and yuidocjs) and npm will do the right thing?
23:10 < cicoder> add them all up and then divide by the number of activities?
23:11 < cicoder> sound about right faceleg|work
23:11 < davidbanham> dobedobedoh: If you're installing the packages via npm install, then yeah, package.json.
23:11 < faceleg|work> yeah what cicoder said
23:11 < davidbanham> dobedobedoh: Protip, use npm init to generate the skeleton, then npm install --save PACKAGENAME to install the package and peg it at whatever the latest version is.
23:12 < dobedobedoh> And it has to be package.json in the root directory?
23:12 < dobedobedoh> Thanks :)
23:15 < pspeter3> faceleg|work I didn't nodegit was a thing. I'll check it out
23:17 < pspeter3> faceleg|work: Does the nodegit package support commit hooks?
23:21 < AAA_awright> pspeter3: Usually you use a Makefile for that...
23:21 < pspeter3> AAA_awright makes sense
23:21 < davidbanham> dobedobedoh: Yep, in the root dir, and no probs :)
23:22 < AAA_awright> version.js: .git/HEAD
23:22 < AAA_awright>     git describe > version.js (or whatever)
23:23 < dobedobedoh> davidbanham: And how does that handle where you have deps providing bins and preferring global :\
23:23 < davidbanham> dobedobedoh: You've lost me there.
23:24 < dobedobedoh> So I'm trying to use shifter (part of the YUI project), and it has prefersGlobal: true in it's config (https://raw.github.com/yui/shifter/master/package.json)
23:24 < davidbanham> dobedobedoh: If there's a node_modules directory present, npm will install things to there. Otherwise (I might be subtly wrong here but I think I'm okay) it traverses up the dir tree until it either finds node_modules or hits $HOME and installs it there.
23:24 < davidbanham> dobedobedoh: Ahhh, I see what you mean, and I'm not certain.
23:25 < dobedobedoh> thanks. I'll have a play and see what I can see
23:25 < icodeforlove__> I'm trying to setup a local npm registry and I'm running into a wall when creating users, anyone have a private registry? am i doing this wrong "npm --verbose --registry http://localhost:5984/registry/_design/scratch/_rewrite add-user"
23:26 < davidbanham> dobedobedoh: I would expect it to still install locally, but maybe throw a warning to the user. YMMV
23:28 < icodeforlove__> when i do adduser i get the email and auth token in the .npmrc, but when i try to publish the login fails "Error: login error"
23:30 < devtop> script load autorun/nickcolors.pl
23:32 < fourlincoln10> An app I'm building sends names to node using ajax. When I send the name O'Keefe, my node app escapes the single quote. I'm using Express. Is there a way to disable escaping temporarily for certain requests?
23:38 < faceleg|work> fourlincoln10: can't you just unescape it?
23:41 < fourlincoln10> I can, but O'Keefe is actually kind of buried in a data structure passed in by Kendo UI so it's a little involved. I was hoping I could just turn off escaping for that request.
23:42 < ccowan> When writing tests for my app (which is mostly a CRUD app) I find myself writing a lot of stubs for interactions with the database. Is this pretty common?
23:48 < faceleg|work> fourlincoln10: so it comes as data.name = "O\'keefe"?
23:56 < fourlincoln10> It comes in as an object property in an array of objects. Here's an example: https://gist.github.com/fourlincoln10/5086747
23:56 < icodeforlove__> I'm trying to setup a local npm registry and I'm running into a wall when creating users, anyone have a private registry? am i doing this wrong "npm --verbose --registry http://localhost:5984/registry/_design/scratch/_rewrite add-user"
23:57 < faceleg|work> fourlincoln10: your object uses single quotes to encapsulate its strings
23:57 < faceleg|work> so of course it has to escape single quotes contained within
23:57 < faceleg|work> ignore my last
23:58 < fourlincoln10> I'm looking through the express code and I think the escaping is happening in node-querystring
23:58 < fourlincoln10> I outputted req.query using console.log() to get that
23:58 < faceleg|work> yeah I realised after I wrote my stupidity out
--- Log closed Tue Mar 05 00:00:07 2013
