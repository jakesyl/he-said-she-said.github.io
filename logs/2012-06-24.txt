--- Log opened Sun Jun 24 00:00:15 2012
--- Day changed Sun Jun 24 2012
00:00 < SubStack> dnode has 99 meanwhile
00:08 < mattrobenolt> 0 tests complete (0ms)
00:09 < mattrobenolt> Woo!
00:31 < austinbv> is there a way to clean up creation of objects in require so it doesn't look like this https://gist.github.com/2980715
00:31 < austinbv> where you do new Person.Person();
00:33 <@Nexxy> austinbv, just take .Person out of your export
00:33 <@Nexxy> var Person = function() { ... } // prototypes; module.exports = Person;
00:34 < austinbv> nice thanks Nexxy 
00:34 <@Nexxy> :)
00:34 < Daegalus> Hmm, I am writing a websocket based app, what limitations do i need to be aware of? Im asking mostly because I know sockets use file descriptors and there is a maximum number of sockets i can have open at a time. SO I just want to check if there is anything else
00:34 < austinbv> sorry have been scowering around the node docs for about 2 days
00:34 < Daegalus> also anyone have suggestions on how to handle clustering/sockets so that i can properly workaround socket limits
00:34 < austinbv> a lot differnt than from my world :)
00:35 <@Nexxy> austinbv, you should never apologize for learning :P
00:36 < austinbv> Nexxy: are require paths relative, so if I have project_root/models/person.js and project_root/tests/person_spec.js the require in the spec has to be ../models/person
00:36 < austinbv> I think I remember you from the geekli.st opening :)
00:36 <@Nexxy> :P
00:36 <@Nexxy> ya, the paths are relatives
00:37 <@Nexxy> austinbv, I think I remember you as well 
00:39 < austinbv> is there a variable for the project root that is exported so you dont have to modify files if you move them
00:40 < austinbv> oh nice there is a require path
00:40 <@Nexxy> austinbv, process.env.PWD
00:40 <@Nexxy> austinbv, also see path.resolve to aide in assembling valid paths
00:40 <@Nexxy> http://nodejs.org/docs/latest/api/path.html#path_path_resolve_from_to
00:41 < austinbv> so you could put everything in node_modules
00:41 <@Nexxy> unless you npm installed them I'd discourage it
00:41 < austinbv> ok
00:47 < AlbireoX`Laptop> Hi, how can I retrieve models in Mongoose from the database as Models, not just plain objects? I want to have methods on the returned objects.
00:54 < zomg> AlbireoX`Laptop: mongoose returns models by default
00:55 < zomg> If you're not getting your methods in the returned objects, then you're either querying them weirdly or defining your methods wrong =)
00:55 < AlbireoX`Laptop> Interesting. o_0
00:56 < zomg> Maybe you should pastebin your model definition and some example of how you're querying it if you're not having any luck
00:57 < AlbireoX`Laptop> zomg: Weird, i just got it to work by just reloading. I don't know what happened but thanks.
00:57 < zomg> heh
00:57 < zomg> np
00:59 < Trindaz> Hi all, hoping someone can help me with this phantomjs / phantomjs-node issue. I'm getting "phantom stderr: execvp(): No such file or directory" when I try using phantomjs-node and phantomjs is definitely already installed!
00:59 < Trindaz> I followed up with a comment https://github.com/sgentle/phantomjs-node/issues/24 but besides that I haven't found anywhere else online that would be experiencing a similar issue
01:00 <@Nexxy> Trindaz, try installing it with -g
01:00 < Trindaz> installing phantomjs with -g?
01:00 <@Nexxy> just a shot in the dark, I don't use phantomjs
01:00 < Trindaz> I installed phantomjs once manually, then once again using brew. Is -g a switch for brew?
01:01 <@Nexxy> oh, npm
01:01 < Daegalus> -g is for npm
01:01 < Trindaz> ok so use npm to install phantomjs (*not* phantomjs-node) with the -g option?
01:01 < Trindaz> but all the source code for phantomjs-node is already in the repo that I'm pulling from with git so I assumed I wouldn't need to use npm at all
01:02 < Trindaz> what does npm do besides get the source files for the project?
01:02 < Daegalus> it installs or compiles binaries if needed too
01:02 < Daegalus> its not just sources, its packages
01:02 < Daegalus> with dependency management
01:02 < Daegalus> its like using APT or YUM or PACMAN on the linux distros
01:03 < Daegalus> its more like pacman if i think about it
01:05 < Trindaz> Daegalus, much appreciated - I am new to linux/mac from Windows though. Is your point that tools like APT/YUM/PACMAN do downloading of resources and compiling for you, or is there yet more that npm will do for me besides downloading resources and compiling where needed locally? This is probably all the npm website right? I could just read there
01:05 < austinbv> Nexxy: are there any good resources you could recomend to writting full scale node web apps
01:05 < austinbv> besides the node docs
01:10 < Daegalus> Trindaz: yes and no, it will keep your dependencies organized and allow you to get everything you need usually for things to work. Like you can get the Phantomjs bindings from it, but phantomjs itself has to be installed seperately, BUT tehre are also chances that phantomjs bindings come with a self-contained phantomjs in it. I haven't tried. Sometimes packages come with pre-made binaries, or at least
01:10 < Daegalus> compile for you. Just depends on the package and how the maintainer decides to do it
01:13 < Trindaz> thanks Daegalus - i've experienced both those scenarios
01:20 < joefiorini> hey there
01:20 < natasha_> hello
01:20 < joefiorini> is there a "what's new" or release notes for 0.8?
01:24 < joefiorini> ah, found it https://github.com/joyent/node/wiki/API-changes-between-v0.6-and-v0.8
01:37 < ding> Is there a way to reset the cluster.on('death') handler? I've had to resort to using a global flag for whether to fork workers or not...
01:43 < popoi> help plz. how to migrate seesion from apache/php-site and NODE-chat ?
01:46 < ACCA> could somebody help to understand the syntax like (function(args){....}(this));   ? what does it do?
01:48 < joefiorini> ACCA: are you sure it's not (function(args){...})(this); ?
01:48 < ACCA> absolutely. This is why I am stunned.
01:48 < ACCA> https://github.com/addyosmani/memoize.js/blob/master/memoize.js
01:48 < joefiorini> ACCA: nm, they both work
01:49 < ACCA> they both valid, but do different things. The latter is an anonymous function call
01:49 < ACCA> while I have no clue WTF is the first one.
01:49 < joefiorini> I think they do the same thing, don't they?
01:50 < joefiorini> I tried running it each way in the node repl
01:50 < joefiorini> did the same thing
01:50 < joefiorini> interestingly, function(args){...}(this); doesn't work
01:53 < ACCA> right - that will be a syntax error. (function(..){...}) is a funciton object
01:54 < ACCA> while function(..){...} is an anonymous declaration
01:54 < dnnsmanace> hey, how do i get a callback for a stream pipe when it end?
01:54 < joefiorini> Javascript is a weird beast
01:54 < dnnsmanace> example:  attachment.stream.pipe(output);
01:55 < dnnsmanace> i am trying to convert the file after it is written and need a callback when its done
01:55 < ACCA> dnnsmanace: pipes do not end. They may be closed from the other side
01:55 < ACCA> try to catch the event, I guess
01:56 < dnnsmanace> i see, how do i see wwhen the file is done being written?
01:56 < dnnsmanace> or will fs.createWriteStream( tell me?
01:56 < ACCA> do you mean if it reached the disk?
01:57 < dnnsmanace> my app is parsing image attachments, writing them to disk, and if it recognizes a png it needs to be converted to jpg
01:57 < popoi> NODE can work(read/write) with mySql and user-sessions ?
01:57 < dnnsmanace> i am not sure how to get a callback when its done writing to disk
01:58 < dnnsmanace> so i can then convert the file.
01:58 < WarheadsSE> http://nodejs.org/api/stream.html#stream_event_drain ?
01:58 < WarheadsSE> or just catch the close event
02:00 < ACCA> dnnsmanace: that's a PHP approach. Won't work, you should re-think the problem statement.
02:01 < ACCA> dnnsmanace: a simple example. Your writer closed a PNG in NFS volume. Your reader in a different cluster node will see it in couple of seconds only.
02:03 < dnnsmanace> i am confused :)
02:03 < ACCA> welcome to the club
02:03 < dnnsmanace> i think close event worked, but please elaborate
02:03 < WarheadsSE> Event driving model is definitively different, yes
02:03 < dnnsmanace> this is the code: 
02:04 < WarheadsSE> If you have more than 1 thread of execution: you'll want to just watch the directory for files
02:04 < dnnsmanace> var output = fs.createWriteStream('./images/'+attachment.generatedFileName);
02:04 < WarheadsSE> ** that better be a pastebin **
02:04 < dnnsmanace> attachment.stream.pipe(output);
02:04 < dnnsmanace> sorry
02:04 < dnnsmanace> two lines
02:04 < dnnsmanace> i am confused abuot how the above works
02:04 < dnnsmanace> which line actually writes to hd?
02:04 < dnnsmanace> and how does stream pipe actually work
02:05 < WarheadsSE> ok, then if you are going to process in that way, you will want to tack an "fs.on('close',function(){})
02:05 < WarheadsSE> before the attachment.stream.pipe
02:05 < WarheadsSE> ** sorry, little bleary from meds
02:05 < dnnsmanace> attachment.stream.on("close", function() {
02:05 < WarheadsSE> output.on(~~~
02:05 < dnnsmanace> i did that and i think it worked
02:06 < WarheadsSE> sadly, i must disapear before my back gets worse again :/
02:06 < dnnsmanace> thanks for your help
02:06 < dnnsmanace> feel better
02:15 < gchristensen> hi, when I run ack within execFile or exec, it hangs "forever" as if it is waiting for input, I've scoured the docs looking for a way to disable it but I can't figure out what's going on. https://gist.github.com/7591af9406e8436c0f4c is a test script. As you can see I've enabled just about every option I can. Any ideas on ways to debug the issue or force it to return, etc.?
02:16 < natasha_> looking for a lead node.js developer to fill CTO role for a startup to develop the beta version, position is remote. please PM me if interested
02:20 <@Nexxy> natasha_, are the vegan bacon cheeseburgers still on the table?
02:21 < AvianFlu> there are vegan bacon cheeseburgers? on a TABLE!?!?!?
02:21  * AvianFlu is impressed
02:22 < SubStack> drop table cheeseburgers
02:23 < SubStack> alter table cheeseburgers add lettuce int
02:23 < WarheadsSE> So by dropping it, you admit to having touched this mythical table SubStack ?
02:25 < natasha_> @nexxy: but of course ;)
02:25 <@Nexxy> oh wow
02:26 < TehShrike> SubStack: how do you handle security/authentication with dnode, especially between the browser and the server?  Do you pass in a parameter with an authentication key into every function or something?
02:28 < kuki> hi all
02:28 < ouairz_> this talk of vegan cheeseburgers is making me want to switch to Node.js
02:28 < ouairz_> *continues lurking*
02:28 < kuki> can anyone help me with a problem about partials?
02:29 < kuki> I'm getting this error message: failed to locate view "views/room_list_view"
02:29 <@Nexxy> ouairz_, \o/
02:29 < kuki> this is the way i render the partial in my view: !=partial('views/room_list_view', {room:room})
02:29 < SubStack> TehShrike: dnode is not rest, you can do something much more elegant
02:30 < TehShrike> whew!  What's that?
02:30 < SubStack> https://github.com/substack/dnode/blob/master/example/auth/server.js
02:30 < SubStack> just use callbacks to protect yir sekretz
02:31 < SubStack> dnode would be pretty useless if every function had to be at the root level
02:31 < kuki> I have also set the views variable in the app: app.set('views', __dirname + '/views');
02:34 < kuki> anyone? :(
02:34 <@Nexxy> kuki, did you set a template engine?
02:34 < CIA-75> node: George Shank master * rbc73abe / (doc/index.html doc/images/forkme.png): doc: update 'Fork me at Github' ribbon - http://git.io/ZabP0w
02:34 < kuki> Nexxy: yes
02:35 < kuki> Nexxy: I'm using Jade, in combination with Express
02:35 <@Nexxy> kuki, gist?
02:36 < kuki> Nexxy: what's gist? I'm quite new to Nodejs
02:36 <@Nexxy> gist.github.com
02:36 <@Nexxy> just a paste service
02:36 < kuki> Nexxy: okay, gimme a sec
02:36 <@Nexxy> :)
02:36 < popoi> Whether installed on Debian NODE.js?
02:37 < WarheadsSE> ?
02:38 < kuki> Nexxy: https://gist.github.com/2981137
02:38 < popoi> Can I create a chat on NODE for 20'000'000 online users ?
02:39 < TehShrike> SubStack: the lightbulb is starting to come on.  If you had multiple restricted functions that could only be called by certain authenticated users, would you have the auth function pass an object back to the callback that had all of those functions as properties?
02:39 < WarheadsSE> popoi: the underlying OS is not going to be the issues
02:39 < WarheadsSE> 20M is a scale issue that you will need to resolve.
02:40 <@Nexxy> kuki, try just !=partial('room_list_view', {room:room})
02:40 < SubStack> TehShrike: yep
02:41 < SubStack> TehShrike: and you can do that recursively as much as you like
02:41 <@Nexxy> kuki, also shouldn't your partial be unescaped?
02:41 < SubStack> returning nested functions in objects via callbacks
02:41 < kuki> Nexxy: that seems to work :)
02:41 <@Nexxy> kuki, \o/ yay!
02:41 < WarheadsSE> popoi: does that make sense?
02:41 < kuki> Nexxy: what is there to escape? :p
02:41 <@Nexxy> like the markup inside?
02:41 <@Nexxy> I'm not familiar with jade
02:42 <@Nexxy> so I could be way off
02:42 < popoi> I have bad inglish
02:42 < SubStack> TehShrike: it's callbacks all the way down
02:43 <@Nexxy> kuki, like with EJS if you use <%= partial('some_partial') %> any HTML in that partial will be escaped
02:43 <@Nexxy> kuki, whereas if you use <%- partial( ... %> it won't
02:43 < popoi> Really I can install NODE on Debian/Linux ?
02:43 < WarheadsSE> popoi: Ok.  You can use node.js on Debain, yes
02:43 < TehShrike> SubStack: :-D
02:43 < popoi> thx
02:43 < WarheadsSE> It will work on almost all linuxes
02:44 < TehShrike> Well now I want a robot suit that plays CAKE music
02:44 < WarheadsSE> thats a lie TehShrike ;)
02:44 < popoi> I have Debian test OS and I want to install and setting up NODE. show me the best way to going to my goal?
02:45 < kuki> Nexxy: I'm not following. 
02:45 < WarheadsSE> There is a Debian PPA, but you should not have problems compiling from source
02:45 <@Nexxy> kuki, don't worry about it then :)
02:45 < kuki> Nexxy: should i add <%= ... %> to escape the html?
02:45 <@Nexxy> nope!
02:45 < kuki> Nexxy: I would like to escape it though :)
02:46 < popoi> may be there is a handbook or userguide for NODE/Debian ?
02:46 <@Nexxy> kuki, then the = is correct I believe
02:47 <@Nexxy> kuki, I'm reading the jade docs, apparently taking the ! off will escape it
02:47 <@Nexxy> if I'm reading it right
02:47 < WarheadsSE> popoi: indeed, manuals & beginner websites
02:47 < kuki> Nexxy: perfect!
02:47 < kuki> Nexxy: thanks for the help :)
02:47 <@Nexxy> kuki, any time :D
02:48 < WarheadsSE> nodemanual nodebits howtonode
02:48 < WarheadsSE> plus the official docs
02:49  * WarheadsSE disappears
02:50  * Nexxy looks on in amazement
02:51 < popoi> How to combine (use the same) session at the PHP in a session NODE?
02:52 < TehShrike> >_<
02:53  * WarheadsSE collapses
02:55 < Mortdeus> does anybody no which package depends on libxml 0.3 for building cloud 9 on linux? 
02:55 < Mortdeus> know* 
02:57 < WarheadsSE> node-o3-xml
02:59 < Mortdeus> is that contained in packager/node_modules or in cloud9/node_modules? 
03:00 < WarheadsSE> its buried pretty deep in the dependancies last I looked
03:01 < Mortdeus> how did you fix it? The npm registry version of libxml doesnt have the patch that fixes the o3 headers. 
03:02 < WarheadsSE> It's been a while since I tried to fix it on ARM.
03:02 < gchristensen> what is the best way to run a number of methods in serial?
03:02 < WarheadsSE> and that was the last time I messed with it
03:03 < gchristensen> its running over a for loop of elements, otherwise I'd simply pass callback
03:03 < gchristensen> s
03:49 < dnnsmanace> Question, i am trying to check if a value variable is in an array. how do i parse and return true or false?
03:49 < dnnsmanace> i guess this is a javascript question
03:54 < TehShrike> dnnsmanace: http://underscorejs.org/#find
03:55 < TehShrike> Or actually http://underscorejs.org/#any
03:55 < bahamas10> does node.js have a method to exec*(2) ?
03:55 < bahamas10> not a child process, but to actually exec
03:57 < dnnsmanace> thanks will look at it
04:09 -!- Topic for #Node.js: node v0.8.0 ships Monday, 15:00 UTC (9:00 US/Pacific). RC's available: http://nodejs.org/dist/v0.8.0/
04:09 -!- Topic set by isaacs [~isaacs@173-203-97-118.static.cloud-ips.com] [Fri Jun 22 14:49:09 2012]
04:09 [Users #node.js]
04:09 [@konobi          ] [ crodas         ] [ gyaresu         ] [ leeight_       ] [ pekim          ] [ swaj           ] 
04:09 [@maxogden        ] [ Crowb4r        ] [ hakunin         ] [ Leemp          ] [ perezd         ] [ Swizec         ] 
04:09 [@Nexxy           ] [ cyphase        ] [ halfhalo        ] [ LeftWing       ] [ persson        ] [ tahu           ] 
04:09 [ [[zz]]          ] [ cypres         ] [ hatboyzero      ] [ leonardo       ] [ petschm        ] [ tanepiper      ] 
04:09 [ \ask            ] [ Daegalus       ] [ heatxsink       ] [ Leonidas       ] [ pfox__         ] [ tankpilo`      ] 
04:09 [ \mSg            ] [ daleharvey     ] [ heavysixer      ] [ levi501d       ] [ phawk          ] [ taquter        ] 
04:09 [ _Blorb          ] [ dan64          ] [ Hebo            ] [ lhb            ] [ philips        ] [ tbranyen       ] 
04:09 [ _elek           ] [ Danielss89     ] [ Henkru          ] [ ljharb         ] [ PhilK          ] [ teadict        ] 
04:09 [ _janne          ] [ darkc0met      ] [ heroux          ] [ llrcombs       ] [ phillyDesignr  ] [ tec27          ] 
04:09 [ _lleo           ] [ Daroth         ] [ hichaelmart     ] [ lmatteis       ] [ php14          ] [ TehShrike      ] 
04:09 [ _mdp            ] [ davv3_         ] [ hide            ] [ lmjabreu       ] [ piezo          ] [ teixeira_      ] 
04:09 [ _Renegade       ] [ dawolf         ] [ hipsterslapfight] [ loffe          ] [ pig            ] [ tek            ] 
04:09 [ _root_          ] [ dazoe          ] [ hlindset        ] [ Lorentz        ] [ piklu          ] [ tekky          ] 
04:09 [ _sri            ] [ dec            ] [ hojberg         ] [ loucal         ] [ Pilate         ] [ telemachus     ] 
04:09 [ _th_n           ] [ deedubs        ] [ Hosh            ] [ lrvick         ] [ plato          ] [ tellnes        ] 
04:09 [ AAA_awright     ] [ dekz           ] [ iaincarsberg    ] [ lukegb         ] [ point9repeating] [ tg             ] 
04:09 [ aakour          ] [ Delapouite     ] [ ianl`           ] [ lukhnos        ] [ polyrhythmic   ] [ thedaywillcome ] 
04:09 [ abraxas         ] [ delimax        ] [ idle-boy        ] [ lumgwada       ] [ popoi          ] [ thedjinn_      ] 
04:09 [ ace             ] [ denysonique    ] [ idoru           ] [ m0             ] [ possibilities  ] [ TheDudeKnows   ] 
04:09 [ ag4ve           ] [ deoxxa         ] [ iksik           ] [ maedi          ] [ posteverything ] [ TheEmpath      ] 
04:09 [ agnat           ] [ Derander_      ] [ illourr         ] [ magn3ts        ] [ pquerna        ] [ TheFuzzball    ] 
04:09 [ Aikar           ] [ dested         ] [ im0b            ] [ majek          ] [ prasm          ] [ thejefflarson  ] 
04:09 [ ajpiano         ] [ devdazed       ] [ imarcusthis     ] [ malcolmva      ] [ Provito        ] [ TheMoonMaster  ] 
04:09 [ AlbireoX        ] [ Devilskies     ] [ inarru          ] [ mape           ] [ Prudhvi_       ] [ TheNumb        ] 
04:09 [ AlbireoX`Laptop ] [ devnill        ] [ Industrial      ] [ marienz        ] [ przemoc        ] [ thisandagain   ] 
04:09 [ alexgordon      ] [ devongovett    ] [ indutny         ] [ marlun         ] [ psino          ] [ thorsteinsson  ] 
04:09 [ alindeman       ] [ Dieterbe       ] [ infynyxx        ] [ Martz          ] [ ptrlv          ] [ tim            ] 
04:09 [ allanm          ] [ ding           ] [ inimino         ] [ maru_cc__      ] [ pvankouteren_  ] [ tim_smart      ] 
04:09 [ AllStruck       ] [ distracteddev  ] [ innociv         ] [ masch          ] [ pvilchez       ] [ timkeller      ] 
04:09 [ alta            ] [ djao           ] [ Internet13      ] [ Masyl          ] [ pyykkis_       ] [ timoxley       ] 
04:09 [ ANASLEX         ] [ djbell         ] [ intripoon_      ] [ matjas         ] [ qbit_          ] [ tk             ] 
04:09 [ andihit         ] [ dkords         ] [ irclogger_com   ] [ matt_c         ] [ qos            ] [ tmzt_          ] 
04:09 [ andreyvit       ] [ dmilith        ] [ ircretary       ] [ mattgifford    ] [ quinnirill     ] [ Tobbe          ] 
04:09 [ andyross        ] [ dmwuw_         ] [ irqq            ] [ mattikus       ] [ radiodario     ] [ tobmaster      ] 
04:09 [ apa-_           ] [ dnnsmanace     ] [ isaacs          ] [ mattp_         ] [ radiofree      ] [ Tobsn          ] 
04:09 [ apejens         ] [ doffm          ] [ ivaldi          ] [ mattrobenolt   ] [ radmiraal      ] [ tomaw          ] 
04:09 [ appr            ] [ doki_pen_      ] [ ivan\           ] [ mc             ] [ ralphholzmann  ] [ tomilaine      ] 
04:09 [ apraxas         ] [ dominictarr    ] [ ivan`           ] [ McMAGIC--Copy  ] [ Rantanen       ] [ tommyvyo       ] 
04:09 [ arcatan         ] [ don_jones      ] [ JackNorris      ] [ meandi17       ] [ raydeo         ] [ TomRone        ] 
04:09 [ ashb            ] [ Draggor        ] [ jackyyll        ] [ med_           ] [ Raynos         ] [ TomWij         ] 
04:09 [ Astro-          ] [ dragon         ] [ jacobolus       ] [ medice         ] [ rcs            ] [ tomystein      ] 
04:09 [ augustl         ] [ drey           ] [ jacobrask       ] [ mekwall        ] [ recursive      ] [ topaxi         ] 
04:09 [ austinbv        ] [ DrPizza        ] [ jaequery        ] [ mephux         ] [ recycl3        ] [ totallymike    ] 
04:09 [ aut0mata        ] [ drudge         ] [ jalcine         ] [ MerlinDMC      ] [ redir          ] [ traph          ] 
04:09 [ AvianFlu        ] [ drudge2        ] [ jamesd_         ] [ mertimor       ] [ regality       ] [ trb            ] 
04:09 [ axisys          ] [ Druide__       ] [ jamiep          ] [ meso           ] [ reid           ] [ trepan         ] 
04:09 [ Axsuul          ] [ dscape         ] [ janelwang       ] [ metellus       ] [ rektide        ] [ Trindaz        ] 
04:09 [ azend           ] [ dsii           ] [ jareiko         ] [ methoddk       ] [ relix          ] [ trodrigues     ] 
04:09 [ baer            ] [ duckspeaker    ] [ jasabella       ] [ mgc            ] [ remysharp      ] [ TroyMG         ] 
04:09 [ bahamas10       ] [ duncanbeevers  ] [ JasonSmith      ] [ mikeal1        ] [ retornam       ] [ tsche          ] 
04:09 [ Balthek         ] [ dz0ny_         ] [ jayk            ] [ mikegerw1tz    ] [ rgmarcha_      ] [ ttwj           ] 
04:09 [ beasty          ] [ ebarch         ] [ jayne           ] [ mikekelly      ] [ rhutchison     ] [ tuhoojabotti   ] 
04:09 [ beawesomeinstead] [ ed2093         ] [ jbpros          ] [ MikeMayer      ] [ RichardBronosky] [ txxt           ] 
04:09 [ beeeviz         ] [ edr            ] [ jcap            ] [ MikeW          ] [ richardshaw    ] [ Typo           ] 
04:09 [ ben_alman       ] [ edsu           ] [ Jckf            ] [ mikey_p        ] [ riven          ] [ tzmartin       ] 
04:09 [ benatkin        ] [ einaros        ] [ jcoglan         ] [ MitchW         ] [ rking          ] [ ugisozols      ] 
04:09 [ Bennit          ] [ elijah-mbp     ] [ jcrew           ] [ monokrome      ] [ rmill          ] [ unchi_         ] 
04:09 [ bentruyman      ] [ elnn           ] [ jdparker        ] [ moonlite       ] [ roger_raymond  ] [ upb            ] 
04:09 [ benvie          ] [ else-          ] [ jeedey          ] [ Mortchek       ] [ Rolken         ] [ upgrayeddd     ] 
04:09 [ benyarb         ] [ emilepetrone   ] [ jefferai        ] [ Mortdeus       ] [ romainhuet     ] [ usabrad86      ] 
04:09 [ bindi           ] [ emilsedgh_     ] [ jegade          ] [ moshen         ] [ rook2paw1      ] [ Vennril        ] 
04:09 [ bkahl           ] [ Emmanuel`      ] [ jesusabdullah   ] [ Motest003      ] [ rphillips      ] [ vervain        ] 
04:09 [ blakmatrix      ] [ eocampos       ] [ jet_yp3ke       ] [ mp             ] [ rtgibbons      ] [ VesQ           ] 
04:09 [ blueadept       ] [ epa_           ] [ jimbot          ] [ mrb_bk         ] [ rudolfrck      ] [ veturi         ] 
04:09 [ blueadept`      ] [ er1c_          ] [ jimrhosk1ns     ] [ mridgway       ] [ rurufufuss     ] [ vexii          ] 
04:09 [ bnoordhuis      ] [ eric_f         ] [ jimt_           ] [ MrMaksimize    ] [ RushPL_        ] [ vinc_          ] 
04:09 [ bobslaed1       ] [ EricJS         ] [ jkarsrud        ] [ mrmoneyc       ] [ russell_h      ] [ visnup         ] 
04:09 [ BombStrike      ] [ Evanlec        ] [ jlank           ] [ MrNibbles      ] [ russfrank      ] [ VladGh         ] 
04:09 [ Bonuspunkt      ] [ eventualbuddha ] [ jmcantrell      ] [ MrNko          ] [ rworth         ] [ voodootikigod  ] 
04:09 [ booyaa          ] [ eviltwin_      ] [ jmmills         ] [ MrTiggr        ] [ ryan_stevens   ] [ Wa             ] 
04:09 [ bosphorus       ] [ exchgr         ] [ jmoney          ] [ msaffitz       ] [ s5fs           ] [ wadey|away     ] 
04:09 [ brainproxy      ] [ existee        ] [ JmZ_            ] [ msekimur_      ] [ saapas         ] [ waerloga       ] 
04:09 [ brooss          ] [ Ezku           ] [ jn              ] [ msteinert      ] [ salsamontes    ] [ wang           ] 
04:09 [ bruciass`       ] [ Fabryz         ] [ joefiorini      ] [ munro          ] [ Sam4242        ] [ wankdanker     ] 
04:09 [ bvenkat_        ] [ fairwinds      ] [ joeytwiddle     ] [ mxweas         ] [ samcday        ] [ wao            ] 
04:09 [ Bwild           ] [ faulkner       ] [ john3909        ] [ myndzi         ] [ sawjig         ] [ WarheadsSE     ] 
04:09 [ ByteCrunch      ] [ fbartho        ] [ jolo2           ] [ nail_          ] [ scott_gonzalez ] [ wavded         ] 
04:09 [ c3l             ] [ fearphage      ] [ jonaslund       ] [ naquad         ] [ sdboyer        ] [ Weems          ] 
04:09 [ caasiHuang      ] [ ferlores       ] [ joschi          ] [ Nasrudin       ] [ sechrist       ] [ wereHamster    ] 
04:09 [ caffine         ] [ fevermind      ] [ joshfinnie      ] [ nathanielk     ] [ Sembiance      ] [ widox          ] 
04:09 [ cainus          ] [ FFForever      ] [ joshthecoder    ] [ neersight[d]   ] [ SethG          ] [ willwhite      ] 
04:09 [ callumacrae     ] [ fhd            ] [ joukokar        ] [ neme           ] [ sevcsik        ] [ Will|          ] 
04:09 [ candybar        ] [ filleokus      ] [ JSONB           ] [ Nepherius      ] [ sh1mmer        ] [ wingy          ] 
04:09 [ caolanm         ] [ FIQ            ] [ jsoverson       ] [ neumino        ] [ shajith        ] [ wink_          ] 
04:09 [ cbrake          ] [ FireFly        ] [ jspiros         ] [ niallo         ] [ shaker         ] [ Wise           ] 
04:09 [ cburyta         ] [ flashingpumpkin] [ jstout24        ] [ nickfargo      ] [ ShaneHudson    ] [ wiz            ] 
04:09 [ cce             ] [ FNTom          ] [ JuanCri         ] [ niclone        ] [ shanse         ] [ wizonesolutions] 
04:09 [ cha0s           ] [ forzan         ] [ justicefries    ] [ niftylettuce   ] [ sheenobu       ] [ wookiehangover ] 
04:09 [ chadi           ] [ framlin        ] [ justinfr        ] [ niko           ] [ Shrink         ] [ wycats         ] 
04:09 [ chadskidmore    ] [ FredC          ] [ jvolkman        ] [ NimeshNeema    ] [ simewn_        ] [ xat-           ] 
04:09 [ chapel          ] [ freeformz      ] [ jxie            ] [ NodeX          ] [ SirFunk        ] [ xerox          ] 
04:09 [ Cheery          ] [ frewsxcv       ] [ Jygga           ] [ Nomon__        ] [ skunkwerks     ] [ xocel          ] 
04:09 [ Chepra          ] [ Frippe         ] [ jzacsh          ] [ nrltd          ] [ slajax         ] [ xSmurf         ] 
04:09 [ chilts          ] [ frogstarr78    ] [ k1ttty          ] [ nsm            ] [ Slashbunny     ] [ xxxss          ] 
04:09 [ chjj            ] [ Fuu            ] [ kab3wm          ] [ nuba           ] [ SlexAxton      ] [ ybit           ] 
04:09 [ ChoiZ           ] [ gabriel        ] [ kaen            ] [ Nuck_          ] [ slickplaid     ] [ ybit2          ] 
04:09 [ choo            ] [ garann         ] [ Kami_           ] [ nuclearsandwich] [ slurp          ] [ yenz_          ] 
04:09 [ chrisbuchholz   ] [ garrensmith    ] [ kanzure         ] [ nucleocide     ] [ SomeoneWeird   ] [ yhpark         ] 
04:09 [ chrisdickinson  ] [ Garrick        ] [ Karmaon         ] [ nwillems       ] [ Sorella        ] [ yorick         ] 
04:09 [ chrisinajar     ] [ gartenstuhl    ] [ kborchers       ] [ nyuszika7h     ] [ sorensen       ] [ your_name      ] 
04:09 [ CIA-75          ] [ gaYak          ] [ keeto           ] [ oal            ] [ Spion          ] [ YoY            ] 
04:09 [ cianclarke      ] [ gchristensen   ] [ keks__          ] [ Octane         ] [ sriley         ] [ Ytserman       ] 
04:09 [ cjackson        ] [ gekko_         ] [ kennethd        ] [ odyniec_       ] [ st_luke        ] [ yuwang         ] 
04:09 [ cjm             ] [ gerard0        ] [ Kester          ] [ ohcibi         ] [ stafamus       ] [ zackattack     ] 
04:09 [ Clex            ] [ ggreenhaw      ] [ keyvan          ] [ olegp          ] [ stalled        ] [ zaheera_       ] 
04:09 [ clone1018       ] [ ggreer         ] [ killfill        ] [ omni5cience    ] [ stbuehler      ] [ zaphod1984     ] 
04:09 [ Codedninja      ] [ githogori      ] [ kimico          ] [ onre           ] [ stef           ] [ Zauberfisch    ] 
04:09 [ codelahoma      ] [ gkatsev        ] [ Kingdutch       ] [ ootje          ] [ stephank       ] [ zchr           ] 
04:09 [ codepal         ] [ gmci           ] [ KiNgMaR         ] [ optixx         ] [ strax          ] [ zedas          ] 
04:09 [ Cody            ] [ goraxe         ] [ kkaefer         ] [ orospakr       ] [ stride         ] [ zemm           ] 
04:09 [ coffeecup       ] [ gorillatron    ] [ knkumar         ] [ othiym23       ] [ stutter_       ] [ zenocon        ] 
04:09 [ ColKurtz        ] [ Gottox         ] [ kraft           ] [ ovaillancourt  ] [ stylus         ] [ zentooo        ] 
04:09 [ Connorhd        ] [ gregmoreno     ] [ kranius         ] [ owen1          ] [ styol          ] [ zivester       ] 
04:09 [ context         ] [ Gregor         ] [ krishna         ] [ owenb          ] [ SubStack       ] [ ziyadb         ] 
04:09 [ Corey           ] [ Gruni|NA       ] [ kuki            ] [ pandark_       ] [ sugyan         ] [ zomg           ] 
04:09 [ CoverSlide      ] [ Guest63964     ] [ kuwabarahiroshi ] [ ParadoxQuine   ] [ sumpygump      ] [ zorzar         ] 
04:09 [ creationix      ] [ guybrush       ] [ kylemathews     ] [ patcito        ] [ sveisvei       ] [ zutto          ] 
04:09 [ crescendo|work  ] [ gwillen        ] [ L_star          ] [ paulbaumgart   ] [ SvenDowideit   ] [ zz_lazyshot    ] 
04:09 [ criswell        ] [ gwoo           ] [ lambda_x        ] [ pct            ] [ svnlto         ] [ zz_shykes      ] 
04:09 -!- Irssi: #node.js: Total of 714 nicks [3 ops, 0 halfops, 0 voices, 711 normal]
04:09 !kornbluth.freenode.net [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
04:09 -!- Channel #Node.js created Sat Jan 30 07:48:24 2010
04:09 -!- Home page for #node.js: http://nodejs.org/
04:09 -!- Irssi: Join to #node.js was synced in 6 secs
04:10 < CIA-75> libuv: Ben Noordhuis master * r0fde108 / src/unix/core.c : linux: set close-on-exec flag with ioctl(FIOCLEX) - http://git.io/GbDRgA
04:18 < Trindaz> does anyone in here use webstorm?
04:26 < mattrobenolt> isaacs: wtf is "Error: conflict Document update conflict." when I try to `npm adduser`
04:26 < mattrobenolt> I already have an account, I'm just readding it on a new computer.
04:26 <@isaacs> mattrobenolt: yep, known issue.  what's the account name, i'll fix it.
04:26 <@isaacs> sorry
04:26 < mattrobenolt> mattrobenolt
04:27 < mattrobenolt> I thought I was going crazy and forgot my password.
04:28 <@isaacs> worked now?
04:28 < mattrobenolt> isaacs: Yes sir.
04:28 < mattrobenolt> Thank you.
04:28 <@isaacs> np
04:36 < mattrobenolt> isaacs: Was this Travis fucking up? Or something wrong with npm? http://travis-ci.org/#!/mattrobenolt/node-mock-udp/jobs/1692480
04:36 <@isaacs> mattrobenolt: it's a bug in 1.1.26
04:37 <@isaacs> mattrobenolt: you have devDependencies, but no dependencie
04:37 <@isaacs> s
04:37 < mattrobenolt> Right. Should I at least have "dependencies": {}?
04:37 <@isaacs> mattrobenolt: well, that'd work around it until travis updates to node 0.7.12 or higher
04:37  * isaacs away for a bit.
04:38 < mattrobenolt> Ok, that's fine. Let's see if that works.
04:39 < mattrobenolt> Cool, that fixed it.
04:41 < mattrobenolt> Awesome, mocking UDP servers in Node.js: https://github.com/mattrobenolt/node-mock-udp
04:52 <@Nexxy> is anyone aware of a tool that automates the compiling/uploading of arduino images?
05:30 < tokyodan> I'm running Snow Leopard and I installed Node v0.6.19 along with npm from the Mac Installer (package Manager). It installs in /usr/local/bin and that is in my $PATH but when I execute 'npm' I get '-bash: npm: command not found'. Why?
05:30 < tokyodan> I can execute 'node -v' and it returns 'v0.6.19'.
06:28 < dr0id> node is all about callbacks, ya know
06:42 < guy> Hello peeps, I have an issue with starting Node.js/Socket.io. `var io		= require('socket.io').listen(82);`
06:43 < guy> This starts server on port 82 and works Okay if accessed through http://, but fails (because of insecure connection) if accessed through https://
06:43 < guy> what to do?
06:47 < guy> That's the error I would get
06:47 < guy> https://dev.anuary.com:82/socket.io/socket.io.js
06:48 < guy> "Unable to make a secure connection to the server. This may be a problem with the server, or it may be requiring a client authentication certificate that you don't have."
06:53 < Tobsn> anyone from poland here?
06:53 < dr0id> nope
06:55 <@maxogden> im from portland
07:01 < Tobsn> maxogden, where from?
07:01 < Tobsn> im looking for internet providers in krakow and upc tells me their internet is not avail in my new apartment...
07:04 < guy> Tobsn: seriously?
07:04 < Tobsn> yep seriously
07:05  * guy sighs
07:05 < Tobsn> its not like you would find anything useful on the internet
07:07 < guy> https://gist.github.com/bd68e3329bffa18f2eb4
07:07 < guy> very straightforward code, but results in an error http://dev.anuary.com:8000/
07:08 < Tobsn> dont do https over node.js
07:08 < guy> Well, I have to.
07:08 < Tobsn> why?
07:08 < guy> 14:42 guy: Hello peeps, I have an issue with starting Node.js/Socket.io. `var io	 = require('socket.io').listen(82);`
07:08 < guy> 14:43 guy: This starts server on port 82 and works Okay if accessed through http://, but fails (because of insecure connection) if accessed through https://
07:09 < Tobsn> ssl must be 443 afaik
07:09 < guy> People accessing page from https:// are not able co communicate with Node/Socket otherwise
07:09 < guy> Tobsn: you don't seem to know difference between Poland and Portland.
07:09 < Tobsn> what?
07:10 < Tobsn> well i dont know but when i tried https over node.js it worked ;)
07:11  * guy used /ignore for the first time in 10 years of using IRC
07:11 < Tobsn> okay
07:11 < Tobsn> well first i would suggest that your https cant run on the same port as http, thats just not doable, you have to run two https for that.
07:12 < Tobsn> second i would check if port 82/etc. is even accessable from the outside
07:12 < Tobsn> run http on the https port and see if it works
07:12 < Tobsn> because if its not accessable at all, that means its not running
07:12 < Tobsn> and i hope you have already ignored me
07:14 < Tobsn> `3rdEden, tell "guy" that he has to run two createserver one for http one for https - and because his https is not accessable he has to first check with normal http if the port he wants to run https on is even accessable by running normal http and see if it works
07:15 < guy> Uh. It worked.
07:15 < Tobsn> ...
07:16 < `3rdEden> Tobsn, i just woke up + am missing context here
07:16 < Tobsn> idk
07:16 < Tobsn> seems like he fixed it
08:16 < pawn> How does node work?
08:20 < nonuby> with magic fuel
08:21 < pawn> How can I get familiar with the source code to node.js? I'm not exactly familiar with C, but I've glanced over the language once. But I would like to get down in the gritty details of node.js
09:12 < thanpolas> When standalone libs sprang out of your project, do you create a separate github repo for them and submodule them, or dist them from the main project's repo?
09:54 < sumitngupta> Aloha.  Node newbie here.  Trying to get my app setup to use stylus and nib libraries but keep coming up against:  "failed to locate @import file nib.styl" error :(   looked at https://github.com/visionmedia/nib/issues/11 but didnt get much out of it
09:55 < sumitngupta> tried running the command line "stylus --use node_modules/nib/lib" like it mentions but i feel like im still missing something obvious
10:06 < magge> i'm trying to recurse through a quite big tree of images, but my code causes a node segfault after a random amount of images. have i done something very stupid here somewhere? http://pastie.org/4142039
10:34 < cianclarke> magge: Thought about using walker?
10:34 < cianclarke> I've done similar with no issues, however it's not a very big directory I must admit
10:35 < magge> cianclarke: i saw there were some libs to do the recursive walk, but i wanted an implementation where files are processed first, directories last...
10:36 < magge> cianclarke: i think my problem is i'm opening too many files at once
10:36 < cianclarke> Ah, ok..
10:36 < cianclarke> Yeah, possibly - afraid I haven't had any experience with large quantities.. Here's my implementation, solving a different use case:
10:36 < cianclarke> https://github.com/cianclarke/node-gallery/blob/master/gallery.js#L49-201
10:37 < cianclarke> So I'm curious now - how many files does it take?!
10:48 < Dieterbe> is http://learnboost.github.com/cluster/ the same as http://nodejs.org/docs/latest/api/cluster.html ? the api's seem so different
10:48 < Dieterbe> btw what i was actually looking for, is a way to kill all children when the parent receives sigterm.
10:50 < deoxxa> Dieterbe: they're not the same
10:50 < Dieterbe> ah that explains
10:51 < Dieterbe> i'm using http://nodejs.org/docs/latest/api/cluster.html
10:51 < deoxxa> good choice - that's the one that will prevail, being in core and all
10:51 < Dieterbe> but my child processes don't die when the parent dies
10:52 < einaros> mmalecki: I never really had a need for a stream api I suppose
10:52 < einaros> mmalecki: but I can easily implement it
10:59 < Dieterbe> aha! https://github.com/joyent/node/pull/2908
11:28 < huamma> Anyone using Express?
11:35 < guybrush> huamma: #express
11:35 < huamma> Oh! Thaks :)
11:35 < guybrush> huamma: but you can ask here too of course :D just wanted to mention
11:37 < huamma> Ok. I'm having a 404 on the import of socket.io.js 
11:37 < huamma> I'm not really know where is that file, but, in examples, people only put script(src='/socket.io/socket.io.js') on their views
11:38 < guybrush> huamma: do you serve the socket-io client yourself or via socketio-server?
11:39 < guybrush> http://socket.io/  you can require('socket.io').listen(80) and it will serve the client on *:80/socket.io/socket.io.js
11:39 < huamma> I don't understand the question ._. (Feeling soooo n00b right now)
11:39 < huamma> Oh!
11:39 < huamma> Ok. Now I understood
11:39 < guybrush> that way the socket.io -modules (the server one) will serve the file for you
11:40 < guybrush> though you can just grab the socket.io-client from github and serve it yourself
11:40 < huamma> Let me try
11:40 < huamma> Yeah, I know. But I just wondering where that file comes
11:40 < huamma> :P
11:41 < guybrush> :D socketio-server depends on socketio-client
11:41 < guybrush> thats where it comes from
11:41 < huamma> I've been working with Node.js and Express for nearly a month and I'm really enjoying it ^^
11:42 < guybrush> welcome in the club :)
11:42 < huamma> Nice community, lots of projects...
11:42 < huamma> Thanks
11:42 < huamma> :D
12:22 < huamma> Alright… I was getting random 404 errors and, after a little research, I found I was serving Socket.io on a different port than the node.js server ^^U
12:29 < triple_des> can someone help me creating a dynamic timer in node.js
12:29 < triple_des> by dynamic I mean a timer for every client connecting.
12:37 < lpin> alredy postest in express, but i giving a try here aswell
12:37 < lpin> in my app i use a session variable that specifies a return point for a given operation
12:37 < lpin> Once the operation is compleated i delete the session variable
12:37 < lpin> and evrything is good
12:38 < lpin> but, if the user decide to not complete the operation
12:38 < lpin> the variable will stay indefinitely
12:38 < lpin> so i'm wondering if is worthy to define a global middleware
12:38 < lpin> that check this variable and delete it in the routes where it is not needed
12:42 < lpin> app.get('/operation', function(req,res) {//session variable with followup url here});
12:45 < lpin> app.post('/operation', function(req, res) {//destroy session variable});
12:49 < nwillems> Hello noders. Can i somehow "normalize" a URL? Hopefully without alot of regexing. By "normalize" I mean, http://example.org/some/../other/ should convert to http://example.org/other/
12:51 < lpin> http://nodejs.org/api/url.html
12:53 < lpin> parse it, get the host and the pathname
12:53 < lpin> apply some regex to the pathname
12:53 < lpin> and covert it to your needed form
12:55 < nwillems> lpin: I have been looking at the url module - sadly when parsing a URL, it doesn't resolve it. When resolving it(with url.resole) nothing really happens. So I'm looking for some module that can do such a thing, I beleive Java, python and the likes have some resolver-ish. Maybee I'm just using the url.resolve function wrong, the doc is a bit vague, can anybody chip in on this?
12:57 < deoxxa> nwillems: yes, you are using it wrong
12:57 < deoxxa> nwillems: either that or you're not. i don't know. you haven't actually told us how you're using it.
13:02 < nwillems> deoxxa: I have a url looking like the example one above. Then I have tried url.resolve("http://example.org", "/some/../other"), I have also tried with the full url as second parameter, and without domain in first and a lot of combinations of these. I beleive, it would be nice to first know which parameter is the base?
13:05 < deoxxa> the first is the base
13:06 < deoxxa> and it seems to do exactly what you're asking
13:06 < deoxxa> > require("url").resolve("http://i.should/", "not/../read/the/docs")
13:06 < deoxxa> 'http://i.should/read/the/docs'
13:10 < deoxxa> those docs, by the way, can be found at: http://nodejs.org/docs/latest/api/all.html#all_url_resolve_from_to
13:10 < milani> hey. how can I disable logging when using forever?
13:10 < milani> it eats up disk space. 
13:16 < nwillems> deoxxa: AAAAAH - I got it. When receiving a full url(from a user ex) you get: "http://i.should/not/../read/the/docs", then I would var foo = url.parse(url); var result = url.resolve(foo.protocol+"//"+foo.hostname, foo.path), unfortunately the url module parses the path, but it contains a / as first character and is therefore not resolved correctly :(
13:29 < ferval> hello, is there are any windows user?
14:05 < Tobsn> can i spawn non node processes with cluster?
14:40 < stermi> Hi all, I've just started using nodejs + mongodb. This is my really first time and I need to understand where to use correctly the next() function. Is it correct the usage of next() in my code? (just a few lines) https://gist.github.com/73d96d11c64c112e7143
14:41 < stermi> Because actually I'm "waiting" the db response to call next() but I'm afraid to make a mistake "waiting" for DB because nodejs is build on the I/O Event idea
14:42 < triple_des> where can I find a list of the architecture of socket.io. I mean ther are things like socket.handshake and socket.room objects in the socket but I cant find a list of them
14:51 < natasha> looking for a node developer for a CTO position for a new startup. position is remote. please PM me if interested.
15:18 < SomeoneWeird> http://pastebin.com/AyZk8s4c
15:18 < SomeoneWeird> did i break node?
15:19 < zomg> SomeoneWeird: huh?
15:19 < milani> I think it is just timezone change
15:19 < zomg> I would guess the default output for Dates is the UTC output
15:19 < zomg> the second is obviously the timezone based output
15:21 < SomeoneWeird> heh, weird.
15:21 < SomeoneWeird> i figured as much though :P
15:22 < SomeoneWeird> wouldntve thought .toString would enable timezones though
15:22 < SomeoneWeird> or however ya wanna say it lmao
15:24 < milani> SomeoneWeird, It should be on ECMAScript spec.
15:25 < milani> if it is not there, its a fault. I'm not sure it is a standard.
15:25 < SomeoneWeird> yer
15:31 < SomeoneWeird> hm, doesn't happen when i try it in the chrome console
15:31 < SomeoneWeird> so could be a bug?
15:35 < milani> SomeoneWeird, but both node and chrome use v8
15:35 < milani> SomeoneWeird, so they should work the same.
15:46 < bingomanatee> is there a module that just takes a bunch of different js files and tacks them together into one big js file?
15:46 < mmalecki> bingomanatee: codesurgeon
15:46 < bingomanatee> thanks
16:01 < skimmas> hi. Does anyone as any experience with node-xmpp? I'm trying to install it from npm but it is failing.
16:02 < silver_star_iri> How I can handle half dead Socket.io conection ?
16:03 < silver_star_iri> I have exactly the same problem as him  https://github.com/LearnBoost/socket.io-client/issues/124
16:03 < japj> skimmas: did you get an error related to node-expat?
16:04 < skimmas> I think it as to do with browserify
16:04 < Astro-> skimmas: I've got some experience
16:04 < skimmas> paste of the error: http://pastebin.com/eWCU5V4v
16:05 < skimmas> I also tried install the lib by hand but couldn't run the examples it just stood there doesn't connect nor gives any error
16:05 < Astro-> skimmas: browserify support has not landed in a node-xmpp release yet
16:05 < Astro-> why would that be?
16:07 < skimmas> so how can I use it without browserify?
16:08 <@maxogden> node-xmpp depends on tls and you cant make tls connections from a browser
16:11 < skimmas> but you can use node-xmpp to make a simple chat bot, can't you? no browsers involved
16:11 <@maxogden> browserify means you are running things entirely in a browser, without node
16:11 <@maxogden> browsers can use things like websockets or XHR to talk to node and node can make tls connections
16:13 < skimmas> hmm just tried to install a previous version (0.3.1) I think it worked... let me try
16:14 < tbranyen> is there a way to just permanently stop caching in express
16:14 < tbranyen> for middleware
16:14 < tbranyen> and everything
16:15 < tbranyen> this boy don't want no cache
16:15 < silver_star_iri> How I can handle half dead Socket.io conection ? I have exactly the same problem as him  https://github.com/LearnBoost/socket.io-client/issues/124
16:31 < silver_star_iri> :(
17:11 < austinbv> do most people use the express generator to start a project?
17:11 < AAA_awright> austinbv: I haven't even heard of it, if that means anything
17:12 < austinbv> if you npm install express, you get a bin that will getnerate some basic project files for you
17:13 < austinbv> it is not well documented at all
17:14 < AAA_awright> I only care about the git repos, that could be part of it
17:15 < austinbv> huh?
17:22 < AAA_awright> austinbv: Some of us don't use npm :p
17:23 < Octane> in an evented IO framework like node, how can i wrap my API requests in a general authorization function that waits for the authorization function to return before firing the actual API request?
17:23 < mmalecki> AAA_awright: out of curiosity, why?
17:24 < mmalecki> Octane: you could use a middleware framework or simple function wrapper
17:25 < Octane> mmalecki im struggling in what to google to find my answer and im sure it's dead simple
17:26 < mmalecki> Octane: https://github.com/flatiron/union or connect
17:26 < mmalecki> put an auth middleware in .before
17:26 < Octane> mmalecki w/ connect, right?
17:27 < mmalecki> Octane: I haven't used connect directly, I guess it should have something like before
17:27 < mmalecki> it could be called .use tho
17:27 < mmalecki> I don't know, had too much vodka
17:29 < AAA_awright> mmalecki: Because it started out as a load of crap and I haven't bothered with it ever since, I prefer Git anyways, since submodules preserve revision history not only for your project but the links between what you use and their histories. Listing dependencies in a package.json necessarily can't do that.
17:29 < Octane> thanks mmalecki
17:30 < mmalecki> AAA_awright: fair enough
17:32 < AAA_awright> Not to make it sound like I'm taking it out on npm, I don't like centralized public databases and I've never seen a package manager I've liked, except portage to some degree
17:50 <@maxogden> git submodules are so horrible in practice
17:50 < thanpolas> why?
17:51 <@maxogden> inception
17:52 < thanpolas> Root Project --> Submodules Project D --> Submodules Project F --> Submodules Root Project
17:52 < thanpolas> %)
17:59 < AAA_awright> maxogden: Do you have a better idea? Submodules preserve all the information about projects dependencies and revision information on each other
18:02 <@maxogden> dunno what information you mean by 'all the information' but i find package.json to be more than adequate for dependencies in all the apps i've built
18:06 < TheRedMood> hey
18:06 < TheRedMood> What is node.js best used for?
18:06 < TheRedMood> I understand what makes it special
18:06 < TheRedMood> But what is the area where it is usfull?
18:07 <@maxogden> node helps write javascript programs that can manage many slow I/O sources
18:10 < triple_des> node.js sucks for scalabililty
18:10 < TheRedMood> I just want to know what people make with node.js
18:10 < TheRedMood> since im new to the whole area of web development
18:10 < TheRedMood> And i want to check out a lot of things
18:10 < triple_des> TheRedMood I use it to experiement stuff, nothing serious,
18:11 < TheRedMood> okey, because the other thing im learning is django
18:11 < tbranyen> TheRedMood: made an api for the olympics to do sentiment calculates on twitter firehose tweets
18:11 < tbranyen> used node/couch for that
18:11 < TheRedMood> So im wondering if there are gains from doing stuff with them together
18:11 < TheRedMood> um
18:11 < tbranyen> calculations*
18:11 < TheRedMood> That's chines to me x3
18:12 < TheRedMood> Explain it without the fancy words
18:12 < TheRedMood> I'm just wondering what people would use node for
18:12 < tbranyen> its an api that returns positive and negative energy from tweets about the olympcis
18:12 < tbranyen> thats what i used node for
18:12 < TheRedMood> Because I'm hearing its totaly insane and all
18:12 < TheRedMood> ohh
18:12 < TheRedMood> okey
18:12 < TheRedMood> Did you write the analyzer your self or?
18:13 < TheRedMood> Because that sounds really intresting
18:13 < TheRedMood> To analyze the tweets and suck
18:13 < tbranyen> its using an algorithm server in java bought by the client
18:13 < TheRedMood> such*
18:13 < tbranyen> we were gonna implement it in javascript
18:13 < tbranyen> but realized there really wasn't a point to that
18:13 < tbranyen> the algorithm whitepaper is posted someplace
18:13 < AAA_awright> triple_des: "sucks for scalability" implies there's a bottleneck somewhere, Node.js doesn't have any bottlenecks by itself
18:14 < triple_des> well socket.io has
18:14 < AAA_awright> Well then say that
18:14 < triple_des> I cant scale over multiple processor cores
18:14 < tbranyen> why not?
18:14 < TheRedMood> is it possible to join django and node in some way?
18:14 < AAA_awright> Yeah you can?
18:14 < triple_des> need to maintain session
18:15 < triple_des> adding redisstore causes performance degradation
18:15 < AAA_awright> triple_des: It's the same complaint for any system that needs to scale over multiple computers, though
18:17 < austinbv> triple_des: so far you are just describing how adding dependecies out side of node slow down an app
18:17 < austinbv> and what is the complaint with socket.io and scaling
18:17 < triple_des> yeah, fine u guys are right. node.js is the best thing since sliced bread.
18:18 < AAA_awright> We never claimed that either...
18:18 < austinbv> TheRedMood: I have done about 3 apps now that use rails for 99% of the app and node for things like customer service chats, realtime web stuff or heavy IO
18:18 < AAA_awright> maxogden: It might be enough for most of your needs, that's fine, but without the additional information that submodules provide, you lose a lot of use cases for other people with different or broader needs
18:18 < austinbv> I didn't say that
18:19 < TheRedMood> okey
18:20 < austinbv> you either share a session or do something else
18:20 < austinbv> TheRedMood: I have never made a full scale node app it seems rather... hard
18:26 < wingy> since MemoryStore for sessions doesn't work for multiple processes (production) does that mean that node.js devs always have to use a database like Redis when using Node.js?
18:26 < wingy> if it's for creating web apps
18:41 < milani> There will be a hangout on AppJS future plans and how to contribute 
18:41 < tanepiper> wingy: yes, redis tends to popular, mongodb too
18:41 < milani> in an hour. I will post the link here, if anyone is interested.
18:42 < mburst> Hey I just started diving in to nodejs. I'm coming over from the python/django community. What are some resources/tutorials you'd guys would recommend for learning?
18:43 < milani> mburst, howtonode.org
18:45 < mburst> milani, thanks!
18:56 < saschagehlich> hey, what is the best way to prepare a string for using it as a parameter in a process.exec call?
18:56 < milani> https://plus.google.com/103715793254450161039/posts/1knLy4brpN5
18:56 < milani> join the hangout on AppJS development plans and how to contribute, if you are interested to do desktop apps in node
18:57 < Luis_> Hi
19:11 < Daegalus> benvie: hey, I wanted to ask, how useable and stable is your chrome-nodium?
19:17 < milani> Daegalus, AppJS is chrome-nodium but more usable
19:17 < milani> Daegalus, https://github.com/milani/appjs
19:18 < milani> benvie told me about CEF and I started to complete his chrome
19:18 < milani> ;)
19:18 < navaru> I have a basic js question, would this be the same:     A: Model.prototype.action = function () { ... }      as     B: function action () { ... }; Model.prototype.action = action ?      When using new Model() ... would A create new functions or point to the anonymous ones?
19:20 < milani> navaru, A is anonymous but B is not
19:20 < milani> navaru, using B, you get better stack traces. you can also use: Model.prototype.action = function action() {...}
19:23 < navaru> milani: thanks, someone pointed to use B instead of A, and didn't see why, for stack traces makes sense
19:24 < milani> yeah C that I suggested is even better for readability;)
19:25 < Fabryz> Watching tonight's match? Support your team on twitter with #euro2012 #yourteam ! http://tweet-a-table.nodejitsu.com/
19:26 < AAA_awright> Or if you like seeing the world burn: var func = function(){/*...*/}; func.name = "Fancy Name"; exports.someFunction= func;
19:26 < jesusabdullah> Fabryz: I see England vs. Italy on the teevee
19:27 < adamramadhan> same here
20:05 < Daegalus> milani: reason I am asking was because I am currently planning to work on the TideSDK-Node package once we get development started, and want to make an enclosed Node run Tide.
20:06 < Daegalus> and I saw your project, I was thinking of messaging you later on once i had stuff figured out
20:06 < milani> Daegalus, Are you of TideSDK core?
20:06 < milani> Daegalus, I wanted to speak with tidesdk guys also.
20:08 < Daegalus> milani: well i kinda randomly got joined in, so ya. I guess I am kinda. We are just getting stuff working and compiling and figured out. Also talking about languages and stuff, and I saw they had interest in a node based tide branch, so I thought I would take it on
20:09 < milani> Daegalus, I just say my opinion. Titanium is a heavy loaded SDK.
20:09 < milani> Daegalus, There is no need to have that giant thing.
20:10 < Daegalus> milani: oh no, Node based Titanium will be jsut Node with the Titanium APIs
20:10 < Daegalus> it will be small
20:10 < Daegalus> just Node, CEF, and the Titanium JS apis
20:11 < bradleymeck> what are people using these days for dealing with int64s
20:11 < Daegalus> I think thre will be 3 builds. Node TideSDK, Full TideSDK, and TideSDK-light which will be the current core but only supporting HTML/JS/CSS and the Tide API, no backend/other languages.
20:12 < Daegalus> Maybe TideNode will become Tide-Light 
20:12 < Daegalus> in a sense, it will become what you are trying to accomplish with AppJS
20:12 < Daegalus> but with Titanium API ontop of it
20:13 < chakrit> Is there some kind of unique id available for each http/express request?
20:13 < milani> Daegalus, Hmmm.
20:14 < milani> Daegalus, It is good that you decided to use CEF.
20:14 < Daegalus> I think most of Tide will transition to CEF, even in the other builds
20:14 < Daegalus> just at a later time
20:14 < Daegalus> sicne there is more baggage to get working
20:15 < Daegalus> while the Node one I can build from scratch the way i think it should be
20:15 < Daegalus> or at least I will try to
20:15 < milani> Daegalus, but then it wont be TideSDK
20:16 < milani> Daegalus, I think you need to develop tide core, then patch it to support languages, a wrapper around tide API.
20:16 < milani> Daegalus, I really wanted more contributors on AppJS.
20:16 < milani> Daegalus, and what you do with tidesdk and node is really much like AppJS if I don't say exact thing.
20:18 < Daegalus> milani: TideSDK is just APIs. it will allow people to easily port things using the TIdeSDK as an API endpoint. 
20:21 < tenumm> hello All - I was wondering how one can use v8::Object->delete function?
20:21 < milani> what?! 
20:22 < milani> tenumm, There is no delete I think.
20:22 < tenumm> http://izs.me/v8-docs/classv8_1_1Object.html v8::Object has delete as member function
20:22 < milani> tenumm, you can Object.Dispose()
20:22 < tenumm> <milani> - Dispose() is just for persistant object, right?
20:23 < milani> tenumm, yeah. it is.
20:23 < tenumm> milani: - Dispose() is just for persistant object, right?
20:23 < milani> oh this object is the ancestor in prototype chain.
20:24 < tenumm> milani:- Actually in my code I am seeing some memory leak. I am wondering if when I call a callback do I have to delete this object or HandleScope should take care of it?
20:25 < milani> I think GC does the job.
20:26 < tenumm> milani: I see
20:26 < milani> tenumm, I'm searching for a blog post. I saw it last week
20:26 < milani> tenumm, It was from one of v8 team members
20:27 < tenumm> milani: can you paste the link here please?
20:27 < milani> tenumm, if I find it!
20:28 < tenumm> milani: In my case I have to call callback and I am not getting change to call scope_local.Close. Is that ok?
20:28 < tenumm> milani: getting chance*
20:31 < milani> tenumm, I don't know exactly to be honest.
20:31 < milani> tenumm, but I think it is ok.
20:31 < tenumm> milani: Ohk, thanks. 
20:32 < milani> tenumm, try this: http://blog.mrale.ph/post/14403172501/simple-optimization-checklist
20:33 < tenumm> milani: Thanks, let me look into that
22:03 < NotMyself> anyone around who is familiar with getting mocha working with growl?
22:06 < triple_des> fucking taly
22:06 < bradleymeck> anyone know a good int64 and bigint implementation
22:06 < bradleymeck> in pure js pref
22:07 < NotMyself> I have growl running on my machine and am using the --growl flag for mocha but i get nothing.. sadly not even an error message...
22:09 < wingy> do you prefer this kind of alignment: https://gist.github.com/2985186
22:15 < gblock> NotMyself: Did you see this? https://github.com/visionmedia/mocha/issues/303
22:18 < NotMyself> gblock: yeah was just looking at it thanks
22:20 < NotMyself> gblock: that bug was supposed to have been fixed 3 months ago..
22:21 < rageous> Can anyone tell me how to install node-sqlite with npm? It keeps giving me this error regarding node-waf?
22:21 < NotMyself> trying to see if I can get it to work outside of mocha with just the growl lib
22:22 < gblock> rageous: are you on Windows?
22:22 < rageous> gblock: I tried on Windows, but found that node-waf isn't available, so I switched over to my Macbook.
22:24 < NotMyself> ahh hah there is a CLI tool i need to install
22:25 < gblock> rageous: What error?
22:25 < rageous> ERR! message `sh "-c" "node-waf configure build"` failed with 1
22:26 < NotMyself> got it working gblock thanks for the help
22:27 < gblock> NotMyself: sure, did the links help you at all?
22:28 < gblock> rageous: Not sure, but you could also head to the nodejs google list.
22:28 < NotMyself> gblock: no but it made me think to try getting growl working in isolation
22:28 < gblock> NotMyself: Gotcha
22:29 < rageous> gblock: One thing that might help me resolve this... under checking for node path, it says not found. Not sure if this might make or break it.
22:33 < gblock> rageous: try it....
22:46 < rageous> gblock: I can't seem to get it to report anything but "not found" when searching for node path.
22:47 < gblock> regeous: try setting it manually in the shell
22:47 < gblock> rageous: sorry that was meant for you
22:54 < austinbv> I cannot seem to figure out why this export is not working for my routes https://gist.github.com/2985366  The index exports just find but if you look at the output there is no calendar exported
22:54 < rageous> gblock: What are your other suggestions to resolve this?
22:56 < gblock> rageous: you said it's not finding node_path right?
22:56 < gblock> rageous: meaning it is not finding node in your path?
22:59 < austinbv> can you not require a directory and all the exports in the dir create the required object
23:06 < rageous> gblock: Sorry, stepped away for a moment. Yeah, it cannot find my path, and of course, the earlier issue of node-sqlite not installing under npm due to an issue in makinging node-waf
23:08 < gblock> rageous: can you make a gist of the entire output from npm?
23:08 < gblock> rageous: to be above board, I am hardly the expert. I'd ping isaacs
23:11 < rageous> gblock: http://ideone.com/Jj4ZN
23:15 < gblock> rageous: I got the same error on my mbp
23:16 < rageous> gblock: Well, damn it all.
23:16 < gblock> rageous: the module on npm is very old
23:16 < rageous> I see two alternatives, but I thought using npm to install would be the safest route.
23:16 < gblock> ragous: node has changed dramatically
23:16 < gblock> rageous: this is very stale…..I wouldn't use it.
23:17 < rageous> gblock: Manual installation of modules is done by simply placing them in the node_modules dir?
23:17 < rageous> Or accessed locally for a particular project?
23:17 < gblock> rageous: node has changed significantly in the last year. I don't think it will work.
23:17 < gblock> rageous: if you look in your errors there are functions missing and such
23:17 < rageous> gblock: Ok. But, there are two more up to date alternatives.
23:18 < rageous> Or, up to date as far as I know.
23:18 < gblock> rageous: try more recent alternatives yes
23:19 < austinbv> can you require a directory with mutiple files
23:19 < austinbv> and mutiple exports?
23:20 < gblock> austinbv AFAIK the common pattern is to have a single file in the directory which requires all the local files and exports their exports.
23:20 < gblock> austinbv meaning you have an additional js which is basically a bridge to the others in the dir.
23:21 < austinbv> yeah that makes sense
23:21 < austinbv> it looks like you have to do that
23:21 < gblock> austinbv: finding you an example
23:22 < gblock> austinbv: you can do it an automated fashion though
23:22 < gblock> austinbv: https://github.com/flatiron/winston/blob/master/lib/winston/transports.js
23:23 < gblock> austinbv: this pulls in all the transports in the transports folder and exposes a getter for them on exports
23:23 < gblock> austinb: in winston, nodejitsu's logger.
23:24 < gblock> austinbv: sorry, i keep forgetting to press the stupid tab so I get autocompletion on names!
23:24 < austinbv> ha
23:24 < austinbv> its all good
23:24 < austinbv> thats awesome thansk gblock 
23:24 < gblock> austinbv: thank Nodejitsu :-)
23:24 < austinbv> that too
23:25 < gblock> austinbv: would be cool to have a simple module to do this
23:25 < gblock> austinbv: since it would be useful as you often want to do something like this
23:26 < CIA-75> libuv: Ben Noordhuis master * r0005b52 / include/uv.h : Update uv_getaddrinfo_cb prototype. - http://git.io/6SApkQ
23:37 < joo_p23> question on node.js and being single threaded.....does that mean it's doing massive context switching or multitasking to process requests?
23:41 < sx2020> I need help. Whenever I want to work on a new app, I create a new ubuntu server on rackspace cloud. this is a bad, expensive habit. any suggestions for using one machine better or using free servers somewhere or something?
23:55 < bnoordhuis> joo_p23: no. read up on asynchronous network i/o
23:56 < joo_p23> ok thx
--- Log closed Mon Jun 25 00:00:23 2012
