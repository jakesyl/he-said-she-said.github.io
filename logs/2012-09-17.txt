--- Log opened Mon Sep 17 00:00:30 2012
00:00 <@Nexxy> konobi, long and annoying
00:04 < owen1> i have 2 website on the same phisical server. one on port 80 the other on 3000. i have 2 domains. i forward one damain to port 80. is it possible to forward the other domain to port 3000?
00:05 < owen1> when i try doing in ot NameCheap it gives me an error, since <my ip>:3000 is not a valid A record.
00:05 <@Nexxy> owen1, no
00:06 < owen1> NOOOOOOOOOO
00:06 < owen1> )x;
00:06 < owen1> Nexxy: any workarounds?
00:07 <@Nexxy> add the port to the url when you link it to someone
00:08 < RLa> use some frontend that does virtualhosts and proxying
00:08 < owen1> RLa: can u give me an example to such frontend?
00:08 < RLa> then you can use both domain names without port numbers
00:08 < owen1> nginx?
00:08 < RLa> nginx or apache
00:08 <@konobi> depends what you want to do with it
00:08 <@konobi> websockets?
00:09 < owen1> konobi: got 2 sites, i want to run them on 3000 and 4000 but access them via my domains without :3000 and :4000
00:09 < RLa> websockets could be run on separate ports and not through proxy
00:09 <@konobi> sure... need to do anything special with those?
00:09 < RLa> then it would not use proxy resources for that
00:10 < owen1> RLa: in my case it's just 2 node http servers.
00:11 < owen1> RLa: what ips should i enter in my domain registar?
00:12 <@konobi> owen1: just one
00:12 <@konobi> an domain points to an IP
00:12 <@konobi> the application (browser) decides the port... however things like nginx allow you to route traffic from one port to another
00:12 < owen1> konobi: ok. so both domain will point to one ip.
00:13 <@konobi> bingo
00:13 < owen1> konobi: so nginx will look at the coming request, and will route it to the correct port. nice
00:15 < owen1> thank you internet friends
00:18 < bid> can i do this: var foo = {test:function(){alert(1);}};exports.foo = foo; and then use foo.test(); ? in my case test is a dynamic string
00:19 <@konobi> owen1: np
00:20 < spion_> bid, you mean, can you export objects that contain dynamic properties? yes.
00:22 < bid> umm nope, i mean can i execute a function (i have only the name it's a string) foo.myStringFuncName(); 
00:23 < spion_> var name = "myStringFuncName"; foo[name](); ?
00:23 < bid> yes
00:23 < spion_> should work just fine
00:23 < bid> keep getting not a propery or not a function 
00:30 < timeturner> anyone tried implementing full text search in mongo?
00:31 <@konobi> just use something different
00:31 <@konobi> solr/sphinx tend to be good...
00:33 < timeturner> I was thinking about stuffing all the meta data related to text search in redis and then updating redis whenever mongo got updated with new metadata
00:34 < timeturner> this is kind of a ifferent topic but I have a big concern with exceeding the max document size limit in mongo and the key/value string limit in redis
00:34 < timeturner> how do you deal with the point where a document exceed 16MB because of an embedded array full of objectids?
00:35 < timeturner> or a redis key bigger than 2GiB?
00:35 < timeturner> do you split that document or key and query both?
00:35 < timeturner> this is mainly a question fo future preparation but I'm unsure about how to think about this
00:35 < timeturner> for*
00:35 <@konobi> timeturner: how would you do it with plain text files on disk?
00:37 < timeturner> well if it was a PDF book then I may say that's it's ok but if it were just text files then I would try to figure out a way to separate the files into multiple ones based on different topics and then if I needed to search a wider topic which would cover both of those sub topics then I would look in the first text file and then the second one
00:39 < timeturner> is it safe to just not keep the limit in mind (when embedding objectids in an array in a document) and periodically check the sizes via a script and if it is coming to the limit then just branch it off into another document?
00:40 < timeturner> what would be the best way to deal with it in the beginning so that it is simple to deal with when the size starts reaching the limit
00:40 < timeturner> I guess that's the main question
00:40 < deoxxa> full text search in mongo will be bad
00:40 < deoxxa> it's a hack at best
00:40 < deoxxa> have you seen elasticsearch?
00:40 < deoxxa> it's pretty much the mongodb of search engines
00:40 < chovy> nodemon doens't pick up view changes in express.
00:41 < deoxxa> free-form schema, zero-config, easy to get started with
00:42 <@konobi> timeturner: "<word/phrase>:<objectid>,<objectid>,<objectid>"
00:42 <@konobi> that's how it really works
00:43 <@konobi> along with things like lexiconization, transliteration, etc.
00:43 <@konobi> (yes, i've written these things before... not _that_ hard)
00:44 <@konobi> similar to CAP, there's a balancing point
00:44 < deoxxa> konobi: how did you handle stemming? relevance? sorting? phrases? etc
00:44 <@konobi> yup
00:44 <@konobi> in 9 languages
00:45 < deoxxa> a search engine is something you use, not something you make
00:45 <@konobi> relavance is basically set theory... stemming, had libraries... sorting easy enough when you can cross-ref, phrases are tricky, but doable
00:46 <@konobi> the big thing is, if you make a big change, assume your indexes are meaningless, so therefore you have a big reindexing task ahead
00:46 <@konobi> thankfully that's something you can farm out
00:48 <@konobi> anyways... solr is a reasonable option up front, especially with incremental indexing
01:04 < terinjokes> so, what's the best way to watch for changes to a directory and it's files that works on Linux, OSX and Windows?
01:05 <@konobi> nothing right now really... the technologies are too different overall
01:06 < beara> nodemon doesn't work on windows?
01:06 < terinjokes> konobi: why isn't there something like fssm then?
01:06 <@konobi> terinjokes: sounds like an interesting npm package
01:07 < terinjokes> konobi: i mean, it seems like it's doing the same thing as node (inotify on linux, FSEvents on MacOS, and polling on Windows), but the API is consistant
01:08 <@konobi> terinjokes: which versions?
01:08 <@konobi> etc, etc.
01:08 < terinjokes> konobi: hrm?
01:10 <@konobi> of windows, osx, linux... they all have the same ability?
01:11 < terinjokes> konobi: i don't know the individual versions off the top of my head
01:11 < terinjokes> but they've all supported something for a while
01:12 <@konobi> terinjokes: so... lets leave it to an npm package
01:12 < terinjokes> konobi: but fs.write() already exists, just the API is inconsistant depending on platform
01:13 <@konobi> actually fs.write is a standard... FS events are not
01:13 < terinjokes> on Linux and Windows and tells you what happened to what directory/file, but on OSX it just says that something, somewhere, happened
01:13 < terinjokes> konobi: fs.write uses kqueue, which is darn near the same thing
01:13 < terinjokes> (fsevents uses kqueue internally, but provides the same moronic data)
01:14 <@konobi> fs.write is also a syscall
01:14 < toothrot> for the record, the filesystem events don't use polling on windows
01:14 < terinjokes> s/write/watch/ it's been a long day
01:15 <@konobi> node is a slim posix wrapper
01:15 <@konobi> libraries atop go on npm
01:15 < terinjokes> then why was fs.watch added to the core if it's not going to be made consistant?
01:16 < kuja> I wouldn't be opposed to removing it
01:16 < kuja> One less thing to maintain that Node shouldn't be maintaining anyway
01:16 < terinjokes> (not withstanding that, at least according to GitHub issues, it's horribly broken on both OSX and Windows)
01:16 <@konobi> terinjokes: patches are wlecome
01:18 < terinjokes> konobi: i'm happy to take a look at the nodejs source, but i might be more comfortable on the npm front
01:21 <@konobi> terinjokes: yeah, which is why i suggested the npm front... it's easier to clarify something in JS than it is down in C/C++
01:21 <@konobi> then again... i'm just here as eyecandy =0P
01:21 < terinjokes> konobi: my old job was in C/C++ land, so I'm not scared of it, i just don't know any of the source
01:22 <@konobi> terinjokes: it's pretty fun actually
01:22 <@konobi> other than the weird v8-isms
01:23 < terinjokes> for a MVP, i'll keep filesystem events and loop around to that afterwards then
01:23 < terinjokes> s/keep/skip/
01:24 <@konobi> minimal viable product?
01:24 < terinjokes> i use that losely, as it's not a product
01:24 < terinjokes> more of a itch
01:24 <@konobi> heh... sounds familiar
01:25 < terinjokes> i wait to get this thing to the point where I can use it
01:26 < terinjokes> since writing this server is not the problem I wanted to solve
01:27 <@konobi> terinjokes: well, KISS/JFDI, etc.
01:28 < brownBananas> Hello, has anyone here used 'request' npm ?
01:28 <@konobi> brownBananas: ask the question, not the prelim
01:28 < brownBananas> Okay
01:29 < terinjokes> konobi: hehe, the node stuff i used at work is enough of not simple that those two are obvious
01:30 <@konobi> well you said "used"...
01:30 < terinjokes> s/used/use/
01:30 <@konobi> =0)
01:30 < terinjokes> we're rewriting most of it, so soon enough
01:31 <@konobi> bah... apparently i need to pimp myself more in these kinda channels... *le sigh*
01:31 < brownBananas> Question block coming ahead
01:32 < terinjokes> server.on('question', function(req, res) {res.end()});
01:32 < brownBananas> I am trying to request a web page that serves some JSON using the request npm. It seems to take forever and all my tests (written in mocha) timeout. Apprantly for others it's never been an issue. The time it takes to execute the request call should be same time approximately as you would see in your browser wouldn't it? It takes my request more than two minutes. Would you guys like me to put this question/code up on stackover
01:32 < brownBananas> flow / How do I make this question better
01:32 <@konobi> brownBananas: if you're pasting, pastebin or gist please
01:33 < brownBananas> (Also, I should probably revise what I type here before submitting. Apologies for the ypos).
01:33 < brownBananas> typos* wow lol
01:33 < terinjokes> hrm, interesting… can you show the code?
01:33 < brownBananas> via pastebin?
01:34 < MitchW> yes via pastebin :P  never paste code into an irc channel :P
01:34 < MitchW> unless it's a 1 liner
01:34 < brownBananas> Haha, yea. I meant pastebin vs S.O. or some other tool
01:34 < brownBananas> 1 sec.
01:34 < gnarf> gist
01:34 < gnarf> pastebin has mad adverts
01:35  * MitchW has never noticed... adblock and all
01:35 <@konobi> ditto
01:36 < brownBananas> http://pastebin.com/YCREAzuX
01:36 < gnarf> http://cl.ly/image/1n0r0B1I160F :)
01:37 < gnarf> all 3 of those are animated
01:37 <@konobi> adblock++
01:37 <@konobi> there's very few websites that tweak on it, and you can always allow them individually
01:38 <@konobi> i also have flashblock and sorta jsblock... but i'm just paranoid
01:38 < gnarf> i don't bother - i'd rather let most of the services that have advertising get a little bit of revenue from my page view -- and its not that terrible
01:38 < terinjokes> gnarf: i'd rather blacklist and whitelist
01:39 <@konobi> bbc... yeah, i'd like no ads, thankyou
01:39 < gnarf>  konobi torrents :)
01:39 < gnarf> or did u mean their website
01:41 < terinjokes> that said, anyone know an extension for chrome to block ads only on certain sites?
01:42 < tonymilne> terinjokes adblock plus ---> https://chrome.google.com/webstore/detail/cfhdojbkjhnklbpkdaibdccddilifddb
01:42 < mscdex> yeah
01:42 < mscdex> ABP
01:43 < mscdex> er wait
01:43 < mscdex> Adblock works too
01:43 < mscdex> https://code.google.com/p/adblockforchrome/
01:48 < terinjokes> mscdex: i installed ABP first, found it didn't, then switched to AB which does
01:53 < brownBananas> I tested request on it's own and it works.. surprisingly fast too
01:53 < brownBananas> Has anyone ever encountered this kind of problem before?
01:54 < brownBananas> Everything else is fast, except the request call :s
01:55 < MitchW> gnarf: honestly, I'd rather they have a subscription service if they need the money
01:56 < MitchW> I'm 200% happy to pay $5/year or something to use pastebin without ads... same goes for alot of other sites I use that use ads for funding
01:56 < gnarf> MitchW: hence my suggestion to prefer gist to pastebin - subscription supported - no advertising :)
01:56 < MitchW> oh is it?  I've never used/heard of gist - I must take a look when I get home :D
01:57 < gnarf> heh
01:58 < timeturner> ads are not going to last forever
01:58 < timeturner> internet ads ^
01:59 < timeturner> adblocking is becoming more and more prevalent
02:00 < taky> lol
02:00 < taky> timeturner, don't be naive
02:01 < taky> as crafty as people are to circumvent ads there are 10 people paid to make sure ads still get shown to users
02:01 < taky> in any vertical, porn, dating, mobile, theres always going to be ads until there are regulations
02:01 < gnarf> timeturner: also - you overestimate the number of people with adblock
02:01 < gnarf> :)
02:02 < taky> 90% of people on the internet are dumber than you think they are
02:02 < taky> and the numbers for advertising are interestingly stable 
02:02 < MitchW> indeed, so many naive internet users like your grandmother, computer illiterate friends/siblings, etc - who don't even know what adblock is
02:02 < MitchW> or worse, find ads that are interesting, click on them, and actually buy stuff :S
02:02 < taky> not even that, they can't even tell the difference between what is an ad
02:02 < taky> and what isnt
02:02 < taky> like serp results
02:02 < gnarf> MitchW: i get a few of those per day :)
02:02 < gnarf> yay affiliate based ads
02:03 < MitchW> :D
02:03 < taky> i get a few hundred thousand affiliate clicks a day, i know what im talkin bout
02:03 < taky> :)
02:03 < MitchW> 99% sure advertising isn't going away, and the internet medium is growing, not shrinking
02:03 < taky> damn straight!
02:04 < taky> it will get harder to enter, eventually, but i dont think it will ever die
02:05 < MitchW> just so long as they don't broadcast ads into my dreams like in futurama xD
02:05 < taky> they would if they could
02:05 <@Nexxy> they will.
02:05 <@Nexxy> just give them time.
02:05 < taky> the thing is you have 2 parties involved, you have the advertiser and then you have affiliates, the advertiser is doing numbers and making sure the traffic converts and the affiliates are looking for new overly aggressive ways to push the offers to the internet masses
02:05  * gnarf beams cialis ads to MitchW in his sleep
02:06 < taky> ppc, display, etc
02:06 < taky> as long as there are still affiliates the ads will always be aggressive
02:06 < MitchW> lol
02:08 <@Nexxy> taky, are you saying you're aggressive?
02:08 < taky> only idiots fall for blatantly aggressive ads anyway, and the ftc steps in where needed to make regulations
02:08 < taky> yes
02:08 < taky> well, i was, when i was an affiliate
02:08 < taky> i started advertising in social, but not paying for it, so
02:09 < taky> social spam, programming curl bots to automate account creation and message spam on myspace
02:09 < taky> "spamming"
02:09 < MitchW> classy
02:09 < taky> making $10k/d when i was 16 wasn't so bad
02:09 < taky> :)
02:09 < MitchW> jealous :\
02:10 < taky> seems like a small amount now but being younger it was huge
02:10 < MitchW> I can't imagine what you make now
02:10 < taky> lol
02:10 < samholmes> "Error: parser error, 40 of 44 bytes parsed"
02:10 < samholmes> Wha?
02:10 < taky> i run a software company now so i mostly think in yearly amounts instead of daily
02:10 < taky> thinking of money per day is just easy to get demoralized
02:10 < samholmes> at IncomingForm.write (C:\Users\Holmes\Programming\Poopoo\node_modules\express\node_modules\connect\node_modules\formidable\lib\incoming_form.js:141:17)
02:10 < MitchW> indeed, I'm guessing in excess of 10mil though
02:10 < taky> almost
02:10 < taky> not quite though, you overestimate me
02:10 < taky> hehe
02:11 < MitchW> my business model simulation for the business I'm slowly trying to get off the ground - I should be getting about 300k/year w/ 50k users I think
02:11 < taky> i'm only 24 though so not doing terrible
02:11 < MitchW> still a long way off though, doing it in my spare time takes... time
02:11  * MitchW is also 24
02:11 < taky> yeah but start thinking about how your going to distribute, can you access that many members realistically? if you build it on the internet, they won't come
02:12 < MitchW> niche dating app, I know how to market it - 50k is only 2% of my customers (poor quality app, not hard to compete w/) userbase
02:12 < MitchW> that and users tend to use all the options available, not exclusively use one
02:12 < taky> MitchW: once i built a mailer, it was really far beyond the competitor products (multi-million dollar software niche), it's here: http://nbu5.com/?products/lobe
02:12 < MitchW> s/customers/competitions/
02:12 < etcetera> MitchW: what's the niche?
02:12 < taky> it failed very badly
02:12 < MitchW> eckoit: gay guys
02:13 < taky> i think i've made 30k off of it, in total
02:13 < taky> compared to the time i put into it, i lost alot of money
02:13 < MitchW> time shall soon tell I guess
02:13 < etcetera> taky: *exactly*
02:13 < taky> best of luck, i'd never discourage you from trying anything :)
02:14 < MitchW> :)
02:14 < etcetera> I don't see the fascination in learning technologies that are inherently hard if the actual value of the output is less than the input.
02:14 < taky> yeah, important to see that sort of stuff
02:14 < etcetera> case in point....learning haskell to write a simple rest api/
02:14 < taky> that's also the kind of logic that gets you thinking more like a cto and less like a grunt programmer
02:14 <@Nexxy> etcetera, define "value"
02:14 <@Nexxy> learning a hard language has value in and of itself
02:14 <@Nexxy> or technology
02:15 <@Nexxy> or anything
02:15 < etcetera> Nexxy: fair. but that skill is not guaranteed to have a market value (either in terms of contract or full-time work).
02:15 <@Nexxy> oh, you're only talking about monetary value?
02:15 <@Nexxy> my bad
02:16 < taky> i program about 16 hours a day, always to make money never for fun, i miss working on romantic projects
02:16 <@Nexxy> rofl
02:16 < etcetera> yes, are you exchanging sexual favors in return for the new iPhone?
02:16 <@Nexxy> uh huh
02:16 < etcetera> I find it's much easier to just use money to purchase things.
02:16 < taky> i'm white, i get $ and don't spend it usually
02:18 <@Nexxy> rwaldron, 
02:18 < MitchW> taky: wow that's intense, I try to do an equal balance.  but that's why you're running your own company, and I'm still a shit kicker doing stuff in his spare time :)
02:18 < rwaldron> Nexxy <3
02:18 < taky> gotta jump into it man
02:18 < rwaldron> I'm only sort of here
02:18 <@Nexxy> rwaldron, firmata, pulseIn... doesn't exist. how do you do it with johnny-five?
02:18 <@Nexxy> rwaldron, <3
02:18 < taky> i quit a job in nyc making 120k when i was 21 to do my own thing, my parents hated me
02:19 < taky> (i dropped out of highschool so it seemed like the pinnacle of what i was going to do i suppose)
02:19 <@Nexxy> I excommunicated myself from the country I used to rule so I could come to the US and become a software developer
02:19 < taky> :D
02:19 < MitchW> yeah I'm making about 120k/year atm too, not sure I'm ready to take the risk and jump just yet - especially being so close to being able to launch this app/service and see what I can make of it
02:19 <@Nexxy> that was after I won the Olympics in every event
02:19 <@Nexxy> at the age of 12
02:19 < taky> there will always be developer jobs dude
02:19 < taky> don't worry about it, save up like 20k and then go do something elite
02:20 <@Nexxy> like taking over the cable TV station
02:20 <@Nexxy> and playing reruns of the twilight zone
02:20 < MitchW> lol
02:20 < taky> grow out a giant beard
02:20 <@Nexxy> never could grow a good beard
02:20 < taky> me either
02:21 < taky> i'm 120lbs
02:21 < taky> i barely grow facial hair
02:21 < taky> real advice would be to get a giant tin, fill it full of adderall
02:21 < taky> then take the adderall, watch your business grow while you come along for the ride
02:21 < rwaldron> Nexxy oh, julian gaultier has a branch of node-firmata and a branch of standardfirmata that I use
02:21 < rwaldron> one sec, I'll give you the instructions
02:21 <@Nexxy> rwaldron, oooh
02:22 <@Nexxy> rwaldron, I should have asked you earlier before I tried to do it myself with microtime
02:22 <@Nexxy> el oh el.
02:22 <@Nexxy> rwaldron, I just ended up writing it in C++
02:22 <@Nexxy> ._.
02:22 < rwaldron> Nexxy https://github.com/rwldrn/johnny-five/issues/18
02:23 <@Nexxy> rwaldron, sweet! thank you! <3
02:29 < rwaldron> Nexxy no problemo!
02:29 < rwaldron> ttyl <3
02:55 < amagee> Hey does it make sense to use sinon.js to stub a method that isn't just defined in a module but *is* the module (ie., the module has "module.exports = function() { ... }")?  I'd like to stub calls to the "request" function here: https://github.com/mikeal/request/blob/master/main.js
02:55 < amagee> Or is there a way to have test code stub that function without modifying the library or the code that uses it?
03:17 < uclinux> i have a bizarre question thats way over my head that pertains to npm/windows config
03:17 < uclinux> i can't reach the internet from a cmd prompt so npm cannot install modules or reach out to the web in really any way
03:18 < uclinux> besides manually downloading modules and using offline npm installations does anyone have any adivice?
03:18 < amagee> you can reach the web, but not from a command prompt?
03:18 < uclinux> nope i imagine is some sort of internal domain policy
03:19 < uclinux> i cant ping outside out intranet
03:19 < uclinux> however the webbrowser works fine
03:19 < cconstantine_> I need to add a search path for views when rendering in express... how can I do that?
03:19 < amagee> uclinux: i really don't know, but maybe see if you can tell npm to use the same proxy that your web browser is using?
03:20 < uclinux> the proxy isn't local. I've drawn a real blank. I don't really want to go to the network team though
03:20 < amagee> what do you mean the proxy "isn't local"?
03:21 < cconstantine_> I want to export a npm package that does some rendering of files, and I need to have it search for the template in the installed package's directory
03:21 < uclinux> the settings are not on my computer for me to see *no local authentication
03:22 < amagee> uclinux: oh, right.. yeah, sorry i don't know.
03:22 < MitchW> check your browsers proxy settings, set your HTTP_PROXY/HTTPS_PROXY environment variables appropriately
03:22 < MitchW> https://npmjs.org/doc/config.html
03:22 < MitchW> if your proxy requires authentication, I'm not sure how to pass that to NPM :\
03:22 < amagee> MitchW: i think he's saying his browser is refusing to tell him what the proxy settings even are
03:23 < uclinux> :amagee thats exactly it
03:23 < uclinux> amage:
03:23 < MitchW> ah...
03:23 < amagee> it would seem there would have to be some way of figuring that out though..
03:23 < uclinux> i mean im sure i could go to our network team but then they will ask questions why i need node
03:24 < MitchW> what browser?
03:24 < uclinux> i have a full kit ie/chrome/firefox
03:24 < MitchW> IE stores it in registry keys, prob not so easy to get - firefox you can look at them in about:config
03:25 < MitchW> firefox, about:config, network.proxy.* :)
03:25 < MitchW> should have an ip/address, and port - maaaybe authentication details somewhere in there (here we don't have to authenticate w/ the proxy, so it's just address/port)
03:25 < uclinux> MitchW: no proxy details
03:25 < Danielss89> Hi
03:25 < MitchW> uclinux: that's very bizzare :\
03:26 < uclinux> yep enterprize ftw
03:26 < Danielss89> i'm having trouble converting a charset from utf-8 in a request call to my http..
03:26 < MitchW> enterprise here too (government in face), just standard proxies though
03:26 < MitchW> I has no idea how your magical internets work :P
03:26 < uclinux> i'm thinking i might try to set up a little local proxy  
03:26 < MitchW> I guess your gateway provider (or dns provider) have an internal filter/firewall - instead of yo uguys locally using a proxy
03:27 < Danielss89> http://ds.gl/0419ef.png <-- on my server i dump the encoding of $_GET['message'] and it returns ASCII if i don't have my language's special chars(æ, ø and å) but if i have either of them in my param, it returns utf 8..
03:27 < Danielss89> and i want it to return ASCII(or iso-8859-1)
03:39 < ryanw> Hi. Is NVM broken on OSX? I can't get it to install any version of node.
03:41 < ryanw> my huge log showing it failing: http://wigg.ly/junk/big.txt
03:50 < SomeoneWeird> how come when I try and echo an object using ejs its urlescaped?
04:00 < mscdex> SomeoneWeird: are you using <%= or <%- ?
04:04 < samfalkner> Anyone up for a jade question? I want to use include to include a layout, and "yield" within the layout to place the content. But yield isn't correctly placing the content.
04:04 < samfalkner> Here is the layout: http://pastebin.com/gRuk6bUp
04:04 < samfalkner> Here is a page using the layout: http://pastebin.com/72znF2qL
04:04 < samfalkner> Here is the result: http://pastebin.com/7Gfh7s9K
04:05 < kevBook> Hey guys I have a question - is there a way i can update a "Line" in a file using node.js
04:06 < samfalkner> As you can see, the content is embedded in the footer, rather than in the div#content block.
04:06 < SomeoneWeird> mscdex, <%=
04:07 < kevBook> Hey guys I have a question - is there a way i can update a "Line" in a file using node.js
04:08 < SomeoneWeird> ah cool, <%- works, thanks mscdex 
04:53 < trumpetmic> Is there such a thing as a free and open-source video-uploading, and video sharing web app that you can run on your own site or maybe host on a cloud?  Or of course, on Google Drive or YouTube?
05:04 < todd_> do we have already generated man pages some where for node's built in module?
05:04 < todd_> seems the release doesn't contain the man page format file.
05:05 < chilts> todd_: don't think there are man pages for the modules, but you could look here : http://nodejs.org/docs/latest/api/all.html
05:06 < todd_> yeah, i know that. but if we have something like perldoc, it'll be perfect :) 
05:06 < chilts> yeah, I've thought about something like nodedoc
05:06 < todd_> you know, unix guy, just like type command line to see.
05:06 < chilts> but ... you can use npm to show docs I think ... lemme go check what I'm thinking
05:07 < chilts> todd_: npm docs awssum
05:07 < todd_> npm not able to show anything about built in document
05:07 < chilts> opens a page in your browser
05:07 < chilts> not quite the same though :)
05:07 < todd_> built in module like fs
05:07 < todd_> yeah, also the case like
05:08 < todd_> if i login remotely using ssh, i'll not able to lunch a web brower
05:08 < chilts> true
05:08 < chilts> todd_: npm show nodedoc
05:08 < chilts> might be good :)
05:09 < todd_> cool, let me install that.
05:10 < todd_> very cool. it works :)
05:11 < chilts> heh, nice
05:11 < chilts> it has some limitations (or so it says), but I guess it gets 90% of the way there
05:15 < todd_> <npm config get viewer ==> man
05:16 < todd_> why npm docs async still show browser?
05:18 < todd_> got it. the reason is viewer only impact the `npm view` command, not `npm docs` command. my guess :)
05:20 < Tobsn> in a http handler, the res.close() - should it be returned to terminate the handler callback?
05:29 < CIA-118> node: Ben Noordhuis v0.8 * r96ca59f / src/node.cc : process: fix setuid() and setgid() error reporting - http://git.io/tuvBEg
05:30 < mansoor-s> Tobsn, nope
05:32 < axefrog> I'm really stuck. My app works fine on my local machine, but when I deploy to my Heroku production site, the app crashes and uncaughtException shows that an 'unterminated string literal' event has been thrown, but the error is a string, not an error object, so there's no stack trace...
05:32 < axefrog> it's shitting me off because I have no idea where to look for the problem
05:34 < Tobsn> mansoor-s, what if i want to do the writeHeader and res.end() in a seperate function?
05:34 < Tobsn> function( res ); and then inside function just res.close?
05:34 < Tobsn> erm end()
05:35 < mansoor-s> you can do that
05:35 < Tobsn> what if i do return function(); and return res.end() inside the function
05:35 < Tobsn> just so that the handler func doesnt keep on running
05:35 < mansoor-s> if the returned function gets executed its fine
05:36 < Tobsn> you know what i mean? if i do return res.end() in a handler the function will return and end vs. keep on running
05:36 < Tobsn> i wonder if theres a downside to that
05:36 < mansoor-s> Tobsn, lol 
05:36 < mansoor-s> can you show me what you mean
05:37 < mansoor-s> a quick pastie or something
05:37 < mansoor-s> axefrog, try running your code through  jshint
05:37 < Tobsn> httpserver(handler) var handler = function( res, req ) { res.writeheader(...); res.end(); console.log('blah'); }
05:37 < Tobsn> would print the blah
05:37 < Tobsn> if you do return res.end() it obviously ends there
05:38 < mansoor-s> there is no downside to this
05:38 < mansoor-s> if that is what you are asking
05:38 < Tobsn> yep
05:38 < Tobsn> k
05:38 < Tobsn> thanks
05:38 < mansoor-s> np
05:38 < mansoor-s> BUT
05:38 < mansoor-s> if there is an error
05:38 < Tobsn> lol
05:38 < Tobsn> then?
05:38 < Tobsn> where?
05:38 < mansoor-s> during that end part :)  you probably want to show a 505 to the user
05:38 < Tobsn> hmm
05:38 < axefrog> mansoor - will try, thanks, got a couple other ideas first
05:38 < mansoor-s> if you dont, then there is no down part
05:38 < Tobsn> nah, its either 404 or a redirect
05:39 < mansoor-s> well, eitherway
05:39 < Tobsn> if the redirect throws an error 505 doesnt matter anymore anyway hehe
05:39 < Tobsn> or any error
05:39 < mansoor-s> it might matter to search engine
05:39 < Tobsn> nope
05:39 < Tobsn> they wont see that
05:39 < Tobsn> its not public
05:39 < mansoor-s> AHH
05:39 < mansoor-s> ok
05:39 < Tobsn> ;)
05:39 < mansoor-s> in that case go to town
05:39 < mansoor-s> :D
05:39 < Tobsn> and fuck search engines hehe
05:43 < mansoor-s> LOL
05:46 < Tobsn> is there a way to console.log into a string to output it over http?
05:47 < Tobsn> ah nevermind, im an idiot... stringify ;)
05:47 < owen1> according to github flavored markdown, if i have 2 lines in my .md file, they will be rendered as 2 lines and not one. did i get it right? http://github.github.com/github-flavored-markdown/
05:50 < mansoor-s> what happens to a doctor that eats an apple a day? :S
05:57 < timeturner> what's the appropriate http status code for "user error"
05:57 < timeturner> like incorrect email etc.
05:58 < mansoor-s> teach a man how to fish:
05:58 < mansoor-s> http://en.wikipedia.org/wiki/List_of_HTTP_status_codes
06:15 < chovy> are there any linux distros that keep up w/ development of node?
06:15 < chovy> i mean, where if i use their package manager, I still get a reasonably recent version of node?
06:15 <@Nexxy> chovy, not that I'm aware of
06:16 <@Nexxy> although there is a PPA by chris lea that seems to be pretty up to date
06:16 < boberton> chovy: best bet is probably to either compile the releases when you're ready, or use a separate repo
06:16 < boberton> https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
06:16 < boberton> ^^ that too
06:18 < chovy> ok
06:19 < chovy> i'm using debian. great pkg manager, but things are out of date.
06:19 < boberton> yeah, it's great to have that stability of solid software, but missing out on the "new shiny" can be lame
06:20 < chovy> yea
06:20 < chovy> mongodb at least provides a pkg src
06:20 < chovy> that was nice
06:29 < AAA_awright> chovy: It's not difficult to use Git
06:30 < boberton> AAA_awright: right, but it's also nice to be able to pull down pre-packaged binaries, etc
06:31 < chovy> yes.
06:31 < AAA_awright> What does that give you that Git doesn't?
06:31 < AAA_awright> My entire script (reduced onto a single line) is:
06:31 < AAA_awright> # Full reset: git clean -xd -e up.sh -n
06:31 < AAA_awright> git pull && ./configure --openssl-use-sys --shared-zlib --shared-v8 --without-npm && make -j2 && ./node -v && sudo make install
06:31 < chovy> apt-get install whatever is handy.
06:31 < chovy> plus you have to setup start scripts and configs all yourself if you're building yourself.
06:31 < AAA_awright> Node.js isn't a daemon
06:31 < AAA_awright> It's just a single binary
06:31 < AAA_awright> (well, two or so)
06:32 < chovy> yeah, but for other things besides node.
06:32 < AAA_awright> Well then yeah, your package manager helps, I use packaged Nginx, V8, etc
06:36 < chovy> can someone explain this line to me?
06:36 < chovy> var RedisStore = require('connect-redis')(express);
06:36 < chovy> specifically passing express?
06:36 < chovy> none of my other require statements use that
06:50 < timeturner> chovy: it is a function which takes in express and attaches to the req object
06:50 < timeturner> it's pretty trivial
06:51 < chovy> k
06:54 < amagee> chovy: it's technically nothing to do with the require statement itself, it's just that that module's `exports` variable must be a function rather than a dict
06:56 < chovy> a dict?
06:57 < amagee> Sorry, probably more commonly called "object" in javascript .. ie. something that looks like { key1: "val1", key2: "val2", ... }
07:01 < chovy> gotcha
07:04 < timeturner> it does not have to be a function
07:04 < timeturner> it can be anything
07:05 < timeturner> it can be a string or a function or a object or any other valid JS entity
07:07 < prishabh> hi :)
07:17 < thealphanerd> shana tova
07:28 < SomeoneWeird> anyone know anywhere that has free glyph type icons?
07:39 < [AD]Turbo> hola
07:39 < chovy> SomeoneWeird: http://twitter.github.com/bootstrap/base-css.html#icons
07:39 < chovy> http://glyphicons.com/
07:48 < nohu> https://github.com/dropdownmenu/node-redeye lol
08:03 < elsifaka> nohu: did yo try it :)
08:51 < phrearch> hi
08:51 < phrearch> i wonder if express is async or whether it uses threads to handle requests
08:51 < phrearch> anyone knows an article or where to find more info about this?
08:53 < eldios> phrearch, never actually read thcode but I'd expect it definitely using async and not threads
08:54 < phrearch> eldios: ok thanks
08:54 < eldios> maybe you should read the code by yourself or try asking in #express 
08:55 < phrearch> ok will do
08:56 < wltsmrz> Things threaded are kind of unusual in node. 
08:56 < wltsmrz> One might expect that if Express did use threads, that it would be advertised.
08:57 < wltsmrz> Though you're right to investigate :)
09:06 < fent> is there something like https://github.com/bevry/query-engine but to test it on only one object instead of a collection?
09:34 < waf> quick question, is https://npmjs.org/ down?
09:35 < waf> anyone? :)
09:36 < SebastianT1> yes
09:36 < waf> any idea when it will resurface? are there any announcements anywhere? :)
09:36 < mickhansen> waf: http://www.downforeveryoneorjustme.com/npmgjs.org
09:36 < waf> mickhansen: it only checks http, not https :)
09:37 < mickhansen> ah
09:37 < waf> http responds, btw.
09:37 < mickhansen> not for me, and not for the checker :ÆD
09:37 < waf> ;
09:37 < waf> computers!
09:38 < Tox> aliens.
09:38 < waf> :]
09:39 < turbobug> hi guys! if i use client.join('someroom'); client.join('someotherroom'); on disconnect, they will automatic leave those 2 rooms or i need to execute client.leave(room1 ... room2)
09:53 < turbobug> hi guys! in socket.io if i use client.join('someroom'); client.join('someotherroom'); on disconnect, they will automatic leave those 2 rooms or i need to execute client.leave(room1 ... room2)
09:54 < `3rdEden> it's not like I already answered your question in the socket.io room..
09:54 < `3rdEden> ._.'
09:54 < turbobug> i know, but you tole me you are not sure
09:54 < turbobug> :|
09:55 < Wizek> Hello! In Webstorm, how is this ( http://screencast.com/t/50lphkPp ) called and how can I disable it?
09:55 < turbobug> okok :) i will make a test and see if it does like this or not :(
09:55 < turbobug> thanks and sorry :p
10:24 < turbobug> i have 10 routes like: app.post('/controller1') .. etc i want to make some security and implement a POST KEY foreach one of those routes. Is there any way to catch all and make this in one function? i don;t want to implement if(req.body.key == '1234'){ok}
10:25 < turbobug> by the way is in express
10:25 < Glenjamin> turbobug: that's the job of middleware
10:25 < Glenjamin> http://www.senchalabs.org/connect/middleware-csrf.html
10:26 < turbobug> ok, thanks
10:27 < turbobug> Glenjamin "This token is validated against the visitor's req.session._csrf property which is re-generated per request."
10:27 < turbobug> the problems is that i have the client side in php, 
10:27 < Glenjamin> ah, i see
10:27 < turbobug> i mean i make a request from php to this nodejs app
10:27 < Glenjamin> you'll need a shared storage layer of some sort
10:28 < turbobug> there is no way in express to have a base controller or something that stays before /route/ ?
10:28 < Glenjamin> a custom implementation should look similar to that middleware
10:28 < Glenjamin> turbobug: that's exactly what middleware is
10:28 < turbobug> ok
10:29 < turbobug> i can define it like ... app.use(function...etc
10:29 < turbobug> ok?
10:29 < Glenjamin> yep
10:29 < FMJaggi> research first, especially for something like csrf
10:29 < Glenjamin> mm ^^
10:30 < turbobug> ok, need to make it fast, research after
10:30 < turbobug> they can;t hack
10:30 < turbobug> becaus ethe key will change 
10:30 < turbobug> and is admina rea in php
10:30 < Glenjamin> you'll need the PHP side to store the key somewhere you can read
10:30 < turbobug> is not like public thing
10:30 < turbobug> is not public
10:30 < Glenjamin> then why do you need CSRF protection?
10:30 < turbobug> nobody will see it, jut want to be sure node app will not be abused, thos controllers are not public
10:31 < turbobug> i don;t
10:31 < turbobug> i just needed something to check a post param
10:31 < turbobug> for all controllers
10:31 < Glenjamin> oh, i see
10:31 < turbobug> thanks
10:31 < Glenjamin> right, authentication
10:31 < turbobug> is like a key check ... :) nwm, thanks a lot
10:37 < steve_> .
10:40 < kuja> Is it okay to rely on object property insertion order when iterating over an object?
10:46 < xico> Hi everyone. I'm trying to see the difference between static files served by Express with and without using "compress" or "gzippo"
10:46 < xico> I can't see any difference
10:46 < xico> They still have the same content
10:46 < xico> the same size
10:46 < xico> when they get to the browser
10:46 < xico> What are the differences?
11:03 < wltsmrz> pyrotechnick, hey!
11:03 < wltsmrz> Are you competing in Node Knockout?
11:03 < pyrotechnick> not sure
11:45 < `3rdEden> Anyone know how you can publish an alpha/beta version of a new major release to NPM and still have people install the "latest" version by default? I tried publishing a 0.1.0-alpha but doing an `npm install <module>` would then install the 0.1.0-alpha version instead of my current stable `0.0.9` version.
11:46 < sinclair> what is npm?
11:47 < tuhoojabotti> node package manager
11:47 < tuhoojabotti> see npmjs.org
11:48 < sinclair> what does it do?
11:48 < tuhoojabotti> Manages modules.
11:48 < sinclair> i understand its possible to install packages 
11:48 < sinclair> but, what else does it do?
11:48 < tuhoojabotti> Read the documentation.
11:48 < foxbunny> sinclair: package manager, install modules, manage dependencies for your project, package modules for online package repository, etc
11:49 < tuhoojabotti> sinclair: https://npmjs.org/doc/
11:49 < tuhoojabotti> it does a lot.
11:50 < sinclair> tuhoojabotti: can you narrow that down to anything? like. its good for installing modules (from the web), as well as managing its dependencies, (also from the web), but what else?
11:51 < BennyLava> lolreadingishard
11:51 < tuhoojabotti> What else do you want?
11:51 < tuhoojabotti> :D
11:51 < foxbunny> lol
11:51 < BennyLava> dear lord, some people really need to be sppon-fed EVERYTHING
11:51 < sinclair> i am reading it
11:51 < BennyLava> spoon*
11:51 < sinclair> shh
11:51 < tuhoojabotti> lol
11:51 < sinclair> im reading
11:51 < foxbunny> :))
11:51 < BennyLava> no, YOU shh while reading, twat
11:51 < sinclair> wtf?
11:51 < tuhoojabotti> "Contrary to the belief of many, "npm" is not in fact an abbreviation for "Node Package Manager". It is a recursive bacronymic abbreviation for "npm is not an acronym". (If it was "ninaa", then it would be an acronym, and thus incorrectly named.)"
11:52 < royh> haha... i LOVE freenode. the highest density of trolls on any social network ever...
11:53 < royh> if you can call irc a social network. (here i am assuming you can)
11:53 < BennyLava> you can call it whatever you want, bay
11:53 < BennyLava> baby*
11:53 < foxbunny> royh: IRC is like being out on a busy street and talking to everyone you see :)
11:53 < sinclair> why the hell would i publish to npm over using github, or svn?
11:54 < tuhoojabotti> royh: I'd call it an antisocial network.
11:54 < tuhoojabotti> :u
11:54 < royh> tuhoojabotti: haha! :D
11:54 < tuhoojabotti> Also don't forget that IRC is Finnish.
11:54 < BennyLava> sinclair: troll on bro!
11:55 < sinclair> BennyLava: will you stfu please?
11:55 < BennyLava> sinclair: not a chance
11:55 < sinclair> BennyLava: why not?
11:55 < tuhoojabotti> And, like in Finland, in IRC smalltalk is prohibited.
11:55 < foxbunny> tuhoojabotti: yet everyone does it?
11:56 < schlitzer|freihe> hey there, can someone recommend a good introduction to javascript?
11:56 < timoxley> `3rdEden not sure but express/mongoose had alpha versions, they were listed as x.x.xalpha as opposed to x.x.x-alpha
11:56 < foxbunny> schlitzer|freihe: Crockford's talks on JS
11:56 < BennyLava> schlitzer|freihe: http://eloquentjavascript.net/
11:56 < timoxley> not sure if that makes a difference
11:56 < tuhoojabotti> foxbunny: Well, you're probably not on many Finnish channels.
11:56 < foxbunny> schlitzer|freihe: Also documentation at MDN
11:56 < timoxley> schlitzer|freihe and MDN
11:56 < timoxley> yes
11:57 < schlitzer|freihe> mdn?
11:57 < `3rdEden> timoxley me neither, but it doesn't hurt testing it
11:57 < foxbunny> tuhoojabotti: I guess that's fortunate :)
11:57 < timoxley> schlitzer|freihe https://developer.mozilla.org/en-US/docs/JavaScript
11:57 < schlitzer|freihe> thx
11:58 < royh> schlitzer|freihe: do you know any other programming languages?
11:59 < `3rdEden> timoxley still the same issues
11:59 < schlitzer|freihe> royh, i´m used to python & bash
12:01 < royh> schlitzer|freihe: JavaScript: The Good Parts is a nice introduction if you have prior programming experience (imo)
12:01 < foxbunny> schlitzer|freihe: brace your self for some curly braces then :)
12:01 < sinclair> the only reason i can think of using npm is installing packages and publishing them. its just like NuGet
12:01 < schlitzer|freihe> *whoop*
12:01 < royh> schlitzer|freihe: http://shop.oreilly.com/product/9780596517748.do
12:02 < schlitzer|freihe> thx, will take look at all these suggestions
12:02 < foxbunny> schlitzer|freihe: There's a series of videos with Crockford's talks which summarizes the good parts. I also got the book, but it was more or less the same thing.
12:03 < royh> schlitzer|freihe: also there's Javascript: The Definite Guide ( http://shop.oreilly.com/product/9780596805531.do ), but I wouldn't start with that. And it's probably not something you would want to read cover to cover.
12:03 < schlitzer|freihe> foxbunny, you mean these -> http://yuiblog.com/crockford/ ?
12:03 < foxbunny> schlitzer|freihe: yes, those
12:03 < schlitzer|freihe> ok
12:03 < foxbunny> it pretty much covers most things in the book
12:03 < schlitzer|freihe> thx folks
12:03 < foxbunny> happy hacking :)
12:04 < royh> foxbunny: nice. i didn't know about those. thanks! :)
12:04 < foxbunny> royh: no problem
12:05 < foxbunny> schlitzer|freihe: one more thing, get JSLint for your editor. it highlights common mistakes
12:05 < schlitzer|freihe> ohhh
12:05 < schlitzer|freihe> good point...
12:05 < sinclair> http://static3.fjcdn.com/comments/BITCH+PLEASE+_bda3a869420053a69c3ef355b5786e75.jpg
12:05 < schlitzer|freihe> what ide would you suggest?
12:06 < schlitzer|freihe> for python i use eclipse with pydev extension
12:06 < foxbunny> schlitzer|freihe: I think there's an extension for Eclipse that deals with JS (two actually)
12:06 < foxbunny> one of them is from ebay
12:06 < foxbunny> another one is called JSDev I think
12:07 < schlitzer|freihe> jey, i already found the ebay thing...
12:07 < foxbunny> There's also Aptana
12:07 < schlitzer|freihe> it is good at throwing nullpointrexceptions :)
12:07 < foxbunny> schlitzer|freihe: I use Vim, and it's good at what it does
12:08 < schlitzer|freihe> i also like vim :)
12:11 < foxbunny> schlitzer|freihe: Well, given that intellisense type features generally don't work very well for JS, I think Vim would do just fine for you
12:11 < nohu> throwing nullpointerexceptions?
12:12 < nohu> thats just ... wrong
12:12 < foxbunny> nohu: bugs are usually.... wrong :)
12:13 < nohu> Well, bug i understand. But nullpointerexception as such should always be caught (prevented really)
12:42 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:01 < testingb0t> How can I easily find out what the problem is when I have a node process spinning at 100% CPU? I attached gdb and did a "bt" but it did not show anything interesting, neither does strace
14:02 < gen_iroh> hi, I'm having a very very strange issue with node.
14:02 < gen_iroh> *err, didn't mean to hit enter
14:05 < gen_iroh> hi, I'm having a very very strange issue with node. In *two* of my node apps, running on different servers (Heroku and NodeJitsu) using mostly different codebases doing two different things, I'm experiencing unexpected redirects when trying to "log in". Ordinarily, I'd just assume there was some coding bug. But the problem only affects Chrome 21 (stable -- not 22 or canary), or Safari 6 on MY own laptop. Firefox is unaffected. I can not 
14:05 < gen_iroh> reproduce the bug on anyone else's computer. I have reset my browser settings a thousand times but I can't seem to get it to go away. Anyone have any ideas for further troubleshooting, or should I just call it a freak bug and ignore it?
14:07 < CIA-118> node: Robin Lee v0.8 * ra08271c / (3 files): doc: fix three typos - http://git.io/PfwX5g
14:07 < cainus> look at the http headers
14:08 < cainus> especially for Location and Content-Location headers
14:08 < bnoordhuis> testingb0t: what did strace print?
14:08 < bnoordhuis> btw, what version of node is it?
14:08 < cainus> there are probably 14 ways to redirect on the client
14:09 < testingb0t> bnoordhuis: node v0.8.9
14:09 < testingb0t> futex(0xdb4ca4, FUTEX_WAKE_OP_PRIVATE, 1, 1, 0xdb4ca0, {FUTEX_OP_SET, 0, FUTEX_OP_CMP_GT, 1}) = 1
14:09 < testingb0t> futex(0xdb4b80, FUTEX_WAKE_PRIVATE, 1)  = 1
14:09 < testingb0t> write(6, "x", 1)                        = 1
14:09 < bnoordhuis> testingb0t: does it keep printing that or?
14:09 < testingb0t> I'm going to try and use https://github.com/ddopson/node-segfault-handler 
14:10 < gen_iroh> cainus: with wireshark or something?
14:10 < cainus> firebug or chrome dev tools
14:13 < testingb0t> bnoordhuis: yes it keeps printing that. might very well be a bug in my code somewhere :\
14:14 < bnoordhuis> testingb0t: do you have a small test case, no external dependencies, i could look at?
14:14 < cainus> like a while(true){ ..} ?
14:16 < testingb0t> bnoordhuis: I'll try to come up with one, if I can reproduce it. Do you have any suggestions as to how I can easily find the cause?
14:16 < phrearch> hi
14:16 < testingb0t> How can I get a coredump of the process?
14:16 < phrearch> does anyone know how to get code completion working for the nodejs module in sublime text?
14:17 < bnoordhuis> testingb0t: set ulimit -c unlimited and send the process a SIGABRT
14:17 < gen_iroh> cainus: no Location or Content-Location headers to be had
14:17 < bnoordhuis> testingb0t: but if gdb doesn't show anything interesting, a core dump probably won't either
14:17 < gen_iroh> cainus: just getting back example.com/?whence=/app
14:17 < bnoordhuis> testingb0t: try the built-in debugger or run it with --prof and examine the profile log
14:17 < testingb0t> ok, thanks
14:18 < cainus> gen_iroh, could be a client-side redirect... there are many ways to do that
14:18 < cainus> flash, javascript, meta tag
14:18 < gen_iroh> cainus: the thing is i've even booted to the OS X install disk and tried it. doesn't work on MY laptop, but it does on someone else's with my EXACT same laptop
14:18 < gen_iroh> so it can't be the OS
14:19 < cainus> well it's most likely your app
14:19 < gen_iroh> that's what I assume as well
14:19 < cainus> I wouldn't jump to investigating the os
14:20 < gen_iroh> it seems to be that what's causing the redirect is a session object not being present when trying to log in from chrome 22/safari 6
14:20 < cainus> it's probably not reproducible elsewgere because of something like cache problems, cookies, user-specific data, etc
14:21 < gen_iroh> surely reinstalling my OS would resolve all of that, no?
14:22 < frankblizzard> gen_iroh: with another computer in the same network it works?
14:22 < cainus> bugs in your app?  no.  ;)
14:23 < gen_iroh> frankblizzard: yep. same exact network. same exact computer model, even -- 2012 MacBook air 13''. I rebooted both my laptop and my friend's to the recovery partition, opened safari (6), and tried it. Worked on his, not mine.
14:23 < gen_iroh> at that point my mind was blown.
14:24 < frankblizzard> gen_iroh: how much of that app is client side code? did you clear all browser caches? did you modify your hosts file?
14:25 < gen_iroh> frankblizzard: it's pretty heavily client-side code, but not until after the login process. This is pretty much your basic form POST, server-side authentication/session generation, and redirect.
14:26 < gen_iroh> i just checked /etc/hosts, and there's nothing in there to affect this. also, surely running from a recovery partition would eliminate any OS/user-level client config issues, right?
14:28 < frankblizzard> gen_iroh: don't know. maybe it is just some in-app configuration. difficult to say without knowing the app. i would also recommend checking the http calls in depth. i can recommend postman for this: https://chrome.google.com/webstore/detail/fdmmgilgnpjigdojojpjoooidkmcomcm
14:28 < gen_iroh> frankblizzard: i'll have a look at postman, thanks. also, what'd you mean by "in-app configuration"?
14:29 < frankblizzard> gen_iroh: i mean not OS related, but something inside your code
14:30 < gen_iroh> ah, right. i'm about to go over the code again and see if there's anything peculiar going on
14:31 < cainus> shouldn't be that complicated... browsers don't redirect on their own
14:31 < frankblizzard> gen_iroh: do that. postman also lets you define your own headers if you need to send some Authorization or something for testing
14:31 < frankblizzard> did you try different browsers?
14:31 < cainus> there's a 0.0005% chance you have bad browser build, but that would show up on other websites
14:31 < gen_iroh> frankblizzard: wow postman is very cool.
14:32 < gen_iroh> cainus: but there's an 0.00000000000005% chance I'd have *two* browser builds. unless they're both sharing some common webkit build
14:32 < gen_iroh> frankblizzard: yes. It works on chrome 22/23, but not 21. Also on Firefox, but not Safari.
14:33 < jedahan_> Are there books on how to profile applications to help speed them up / lower memory usage?
14:33 < gen_iroh> again, this is just on *my* computer. I can't reproduce it anywhere else.
14:37 < gen_iroh> frankblizzard: okay, so I just tried postman. Doing the request by hand myself, just POSTing some form data, it works on chrome 21 but not chrome 23. weird. 
14:37  * gen_iroh stares at his code frustratedly
14:38 < frankblizzard> gen_iroh: well just remove step by step complexity from your server side login and see what is causing the problem
14:48 < schaefer> Hello all. I would like to know if someone managed to devise an OpenEmbedded recipe to build nodejs v0.8?
14:48 < gen_iroh> alright so ignoring the strange reproducibility characteristics of the bug, the issue seems to be that after redirecting to the actual app ("/app") from the login page ("/"), the authenticated session data doesn't seem to save. So when the "/app" handler checks if the authentication token exists in the session data, it sees that it doesn't, and kicks the user out.
14:52 < TehShrike|Work> isaacs: you bastard
14:52 < TehShrike|Work> Your blog post made me sad
15:00 < bradleymeck> isaacs: the absolute urls thing means you want to add multiple-cache support?
15:05 < cpsubrian> Has there every been any talk about npm supporting git urls WITH a version range? (implementation-wise I imagine it would need to look at tags?)
15:07 < bradleymeck> cpsubrian: im not even sure what you would want with a version range
15:08 < cpsubrian> bradleymeck: The same reason you use version ranges with public modules … support a tree of dependencies with some fuzziness ie. assuming patch versions are compatible with eachother
15:08 < cpsubrian> right now you have to hardcode git URLs to one version (else risky api breakage)
15:09 < bradleymeck> cpsubrian: yep, shouldnt you just use a branch instead of ranges?
15:09 < cpsubrian> bradleymeck: thats one possible way .. but requires changing your git workflow to get around a weakness of a package manager.
15:10 < rounce> e?
15:10 < cpsubrian> bradleymeck: have to either not use master, or merge master into a version branch constantly
15:10 < bradleymeck> commit ids are dynamically generated, and tags are arbitrary and unique so you would have to add npm logic to do something git never intended to do
15:10 < bradleymeck> cpsubrian: you could add that to npm but it is outside of how people generally use git urls
15:10 < cpsubrian> bradleymeck: Yes, but given that 'npm version *' makes tags with 'v#.#.#' already, its safe to assume that is npm's inteded tag naming scheme
15:10 < bradleymeck> just make a private registry
15:11 < bradleymeck> private registry
15:11 < cpsubrian> bradleymeck: Not disagreeing that that are ways to do things, just asking if the aforementioned feature had come up
15:11 < bradleymeck> cpsubrian: dont think so
15:14 < strk> how did you do fs.exists with node0.4 ?
15:14 < bradleymeck> strk fs.stat
15:16 < strk> bradleymeck: can I do something like if ( ! fs.exists ) fs.exists = function(f) { f.stat.. } ?
15:17 < bradleymeck> strk	i would just move to fs.stat in general but thats just me, there are some known hilarities of fs.exists
15:18 < bnoordhuis> strk: why do you want to know if the file exists or not?
15:19 <@isaacs> bradleymeck: yessir.
15:19 < qbit> bnoordhuis: is ares going away in future versions of libuv? 
15:19 < bnoordhuis> strk: there's almost never a reason not to simply open the file
15:19 <@isaacs> cpsubrian: you can set git urls to a branch, or tag, or commit
15:19 < bnoordhuis> qbit: yes, it already is in master. it's easy to integrate with libuv though
15:19 <@isaacs> cpsubrian: git://github.com/foo/bar.git#branch-name
15:20 < strk> bnoordhuis: to avoid errors from unlink (it's a cleanup function)
15:20 < qbit> bnoordhuis: right on.. one less patch to maintain for openbsd :) 
15:20 < strk> uhm, maybe not, I forgot why I needed to know.. lemme check
15:20 < shlevy> Is there any estimate of when the streaming part of https://github.com/joyent/node/issues/3278 might hit master?
15:20 < bradleymeck> bnoordhuis: unix domain sockets are about the only thing i can think of
15:20 < strk> ah, it's a directory, if it exists I readDir and drop all files in it, otherwise I don't
15:20 < qbit> bnoordhuis: looks like 0.9.0 will be the last to have it?  Can i submit a pullreq for the 0.9.0 tag? 
15:20 < bradleymeck> maybe lock files
15:20 < EyePulp> is there a sensible approach to doing a synchronous file copy under basic node
15:20 < EyePulp> ?
15:21 < bnoordhuis> strk: unlink and handle the error, if (fs.exists(file)) fs.unlink(file) is an anti-pattern
15:21 < qbit> just need to uncoment #undef HAVE_ARPA_NAMESER_COMPAT_H in src/ares/config_openbsd/ares_config.h 
15:22 < strk> yeah, I was wrong bnoordhuis ... I only check for _directory_ existance before invoking readDir -- no problem switching to fs.stat indeed
15:22 < superjoe> strk, I think you missed the point
15:23 < superjoe> checking for existance before doing something introduces a race condition
15:23 < superjoe> just try it and then handle the error if it fails
15:27 < strk> ah, good point
15:36 < gen_iroh> how are folks storing their express sessions in Mongo these days?
15:43 < strk> what about path.relative in node0.4 ? any other way ?
15:44 < strk> does nodejs.org has versioned api documents to look at ?
15:44 < owen1> can i have multiple entries under 'scripts' in package.json? i already have start and want to add something else, but get an error when adding it.
15:45 < mscdex> strk: http://nodejs.org/docs/
15:46 < bnoordhuis> strk: http://nodejs.org/docs/v0.4.12/api/ <- replace with whatever version you want
15:46 < mscdex> owen1: yes, what is the error?
15:46 < strk> found: http://nodejs.org/docs/v0.4.0/api/
15:46 < strk> thanks!
15:48 < xico> Can anyone help me with a question about Sessions and Express? 
15:48 < xico> Do sessions work as well if I use an http server, and pass it the express app?
15:48 < owen1> mscdex: so i added 'run' and i type 'npm run' -> Error: ENOENT, open '/Users/ogolan/projects/engineering-website/node_modules/package.json'
15:48 < xico> I'm having some trouble with this
15:48 < context> xico: the web server doesnt care about sessions.
15:49 < owen1> mscdex: my scripts key is a hash with 2 keys - start and run
15:50 < owen1> "scripts": { "start": "node_modules/docpad/bin/docpad-server", "run": "node_modules/docpad/bin/docpad run" }
15:50 < mscdex> owen1: are your paths set up correctly? it shouldn't be looking for a package.json in node_modules/
15:50 < xico> context: I have a lot of configurations on my express app, and I'm using a lot of middleware. Depending on the order I ".use" the middleware, I get different results. This is probably normal, right?
15:50 < context> xico: i imagine so yes. considering they get added to the chain that order
15:52 < owen1> mscdex: i don't know. what kind of setup are we talking about?
15:52 < xico> context: I just got it. I was declaring the app routes before configuring. The ultimate newbie :) Thanks anyway ;)
15:53 < owen1> mscdex: i use mac os and installed node 0.8.8 with nvm
15:54 < killtheliterate> what is the best practice for getting node.js installed on osx 10.8?
15:54 < killtheliterate> looks like brew is out
15:54 < rounce> na
15:54 < rounce> nay the homebrew
15:54 < rounce> build from sauce
15:54 < rounce> then install n
15:55 < rounce> then pat yourself on the back
15:55 < bnoordhuis> killtheliterate: there's an installer as well
15:55 < EyePulp> killtheliterate: I started using nave to install and manage versions
15:55 < mscdex> owen1: does the `start` script execute properly?
15:55 < killtheliterate> bnoordhuis: do you have a link to the installer or a doc?
15:55 < bnoordhuis> killtheliterate: check the channel's topic :)
15:56 < killtheliterate> ...my client is truncating the MOTD :P
15:56 < bnoordhuis> killtheliterate: hah, use irrsi. but here it is: http://nodejs.org/dist/v0.8.9/
15:57 < killtheliterate> i AM using irssi... it's in a tmux pane that is cutting off the MOTD
15:57 < killtheliterate> ha
15:57 < killtheliterate> thank
15:57 < owen1> mscdex: yes. if the only key in 'scripts' is start
15:57 < owen1> mscdex: correction - 
15:58 < owen1> mscdex: 'npm start' is fine even when i add the 'run' key
15:58 < owen1> npm run is not working. even if it's the only key
15:59 < owen1> mscdex: maybe 'npm run' is not the correct way to run it?
15:59 < owen1> i tried replacing run with bla and got similar error
15:59 < mscdex> owen1: https://github.com/isaacs/npm/issues/2757
16:02 < owen1> mscdex: so i had to do 'npm run <key>' cool!
16:04 < laggyluke> qazwsx
16:04 < laggyluke> ouch, sry
16:06 < micheil> Hi all, anyone know of a good way to slow down node.js and it's rate of network data consumption (ie, slow down file uploads)
16:07 < BennyLava> its*
16:08 < mscdex> micheil: https://npmjs.org/browse/keyword/rate ?
16:08 < micheil> yep, because grammar here helps solve the issue :)
16:09 < micheil> mscdex: so far I've found node is still accepting it very fast into it's kernel buffer
16:09 < micheil> or whatever, but I basically need to simulate it as if I'm uploading to a remote server, not a local one.
16:10 < BennyLava> its*
16:11 < micheil> BennyLava: I don't suppose you have any actual ideas or constructive thoughts to add other than grammar corrections?
16:11 < CIA-117> libuv: Saúl Ibarra Corretgé master * rc8514b0 / (include/uv.h src/unix/pipe.c src/win/pipe.c): unix, windows: return error if uv_pipe_open fails - http://git.io/z3IDNQ
16:11 < CIA-117> libuv: Saúl Ibarra Corretgé master * rcc1c191 / (9 files in 5 dirs): unix, windows: add uv_tcp_open and uv_udp_open - http://git.io/uZ-b5Q
16:11 < BennyLava> micheil: that's constructive too, you know.
16:11 < BennyLava> Pretending grammar and spelling aren't important just because it's on the interwebs, good one.
16:12 < BennyLava> il jst tlk l1k3 a rtrd th3n, c h0w lng ppl tke me srsly
16:12 < micheil> yes, grammar and spelling are important, however, for a simple question such as this, I'm pretty sure everyone gets the point.
16:12 < BennyLava> The point is not that people wouldn't otherwise get the point.
16:13 < BennyLava> The point is that I'm trying to make you aware of a (common) mistake so that you might learn to not make that mistake again :)
16:13 < micheil> mscdex: any other ideas? I would try the network rate limiter thing in Lion, but, alas, I'm not on it.
16:13 < micheil> BennyLava: whilst not actually adding anything to the conversation.
16:13 < BennyLava> Your point being?
16:14 < mscdex> micheil: no idea. if none of those modules don't work/help, i'm not sure if there's anything you can do on the node-side of things. might have to look into some OS-level settings
16:14 < micheil> hmm, okay.
16:15  * BennyLava hugs micheil
16:15 < BennyLava> I think you needed one ^_^
16:17 < strk> do node.js paths always use slash as dir separator ? 
16:18 < micheil> strk:  for require(), yes, as far as I know.
16:22 < xico> If I change the value of req.session in a given route in Express 3.0
16:22 < xico> and then call res.render('page')
16:22 < xico> shouldn't the client cookie be updated as well?
16:22 < bnoordhuis> strk: node understands backslashes on windows but you can use forward slashes if you want to
16:23 < xico> Or is the session local to the server?
16:23 < bnoordhuis> xico: maybe try #express?
16:23 < xico> I usually ask in here. It is more active.
16:30 < stagas> xico: why would the cookie need to be updated? isn't it the same session? req.session.regenerate(cb) iirc to do that
16:30 < xico> Got it. I am new to web programming
16:31 < xico> I got that the cookie is only the "key" for the stored value :)
16:31 < xico> even thought, after I perform req.session.something = somethingelse;
16:31 < xico> if I then reload the page
16:31 < xico> req.session.something comes back null stagas
16:43 < strk> bnoordhuis: I'm basically re-implementing path.relative for node-0.4, any way to know if path separators should be forward or backward slashes ?
16:44 < bnoordhuis> strk: forward always
16:44 < bnoordhuis> strk: to wit, the c runtime on windows accepts forward slashes everywhere
16:44 < bnoordhuis> so you should too :)
16:45 < strk> I do accept forward only, the question is if I should accept backwards too
16:45 < strk> would path.relative accept backwards ?
16:45 < strk> uhm, now that I think about it.. I could jus tuse first character of the argument(s)
16:46 < strk> they args are expected to be absolute, right ?
16:46 < strk> but then again, they could be c: on windows :/
16:46 < xico> I hate tunnel vision
16:56 < Bonuspunk> new Array(10).every(function(e){ return e;}); my personal wtf of today
16:57 < medice> new Array(arrayLength)
16:58 < Bonuspunk> yeah i know, the wtf is in the every ;)
16:58 < bradleymeck> Bonuspunk: new Array(10).length is 10 but not pupulated (yay for random parts of ecmascript spec)
16:59 < medice> hmm,, where do the return values go btw
16:59 < bradleymeck> Bonuspunk: set arr[arr.length-1]=arr[arr.length-1] and it would work
16:59 < bradleymeck> but lols
17:00 < Benvie> >> Array.apply(null, Array(50))
17:00 < purr> Benvie: (object) [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, …
17:02 < Benvie> >> Array.apply(null, Array(32)).map(Function.call.bind(Number)).map(Math.pow.bind(null, 2))
17:02 < purr> Benvie: (object) [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648]
17:02 < TooTallNate> Benvie: reminds me of https://github.com/TooTallNate/array-index#examples
17:03 < Benvie> oh cool, I've done a couple experiments with array stuff lately too
17:04 < Bonuspunk> >> new Array(10).every(function(e){ return e;});
17:04 < purr> Bonuspunk: (boolean) true
17:04 < Benvie> one is
17:04 < Bonuspunk> >> [undefined,undefined].every(function(e){ return e;});
17:04 < purr> Bonuspunk: (boolean) false
17:04 < Benvie> subarray for any kind of indexed thing
17:04 < Bonuspunk> >> new Array(2).map(function(e){return undefined;}).every(function(e){ return e;});
17:04 < purr> Bonuspunk: (boolean) true
17:05 < luite> what's the best library for sorting a large array of integers in place?
17:05 < Benvie> like Buffer subarray/slice where it refers to the same data and is automatically up to date
17:05 < nlf> frickin protocol buffer encoding
17:05 < jocafa> nlf:  still playing with protobuf?
17:06 < stagas> Bonuspunk: it doesn't even iterate, try a console.log in there, it just skips all empty elements
17:06 < nlf> messing with parsing it manually right now
17:06 < Benvie> another idea was a live ArrayView where you specify a transform callback that automaically maps an input array through it whenever accessed
17:06 < nlf> but i'm getting random spots where there are 5 extra bytes and i'm not sure why
17:07 < Bonuspunk> stagas i know, i have already red the explanation at MDN
17:10 < jocafa> nlf: are you still getting the rest of the message decoded though?
17:11 < nlf> i've got all the data, i'm just not able to parse it correctly since each message has a length embedded in it and that's what i'm splitting based on
17:11 < jocafa> ah
17:11 < nlf> so i split on length and pass on the next bit, but since those 5 bytes are in there it throws off the next iteration
17:12 < jocafa> are you just using an array or are you using a typed array?
17:12 < nlf> neither?
17:12 < nlf> it's a buffer
17:12 < nlf> i'm just parsing through it manually
17:14 < nlf> 0x00 0x00 0x00 0x58 0x12 are the extras, then there's like 5 loops that are fine, then 0x00 0x00 0x00 0x57 0x12, then a third later that ends in 0x1e 0x12
17:15 < nlf> always three null bytes then one that changes, then a 0x12
17:24 < nlf> if i just drop those 5 bytes, it works fine
17:24 < nlf> it would be nice to know why they're there though
17:26 < samfalkner> Anyone up for a jade question? I want to use include to include a layout, and "yield" within the layout to place the content. But yield isn't correctly placing the content.
17:26 < TooTallNate> Benvie: that sounds like some nice use-cases for array-index as a base ;)
17:26 < samfalkner> Here is the layout:http://pastebin.com/gRuk6bUp
17:26 < samfalkner> Here is a page using the layout:http://pastebin.com/72znF2qL
17:27 < CIA-117> node: isaacs v0.9.2-release * r9b6e7e0 / (AUTHORS ChangeLog src/node_version.h): wip - http://git.io/Nb-BsA
17:27 < samfalkner> Here is the result: http://pastebin.com/7Gfh7s9K
17:27 < jocafa> nlf: are you going to be doing anything with protobuf services?
17:27 < nlf> with riak, specifically
17:27 < samfalkner>  As you can see, the content is embedded in the footer, rather than in the div#content block.
17:27 < nlf> holy crap, i'm an idiot
17:27 < nlf> that's where the extra 5 bytes come from
17:28 < jocafa> damn it all. i wish i had time to divert to working with you on it right now, since i need it for work, but i'm neck deep in other code right now :(
17:28 < jocafa> hehe what did you do?
17:28 < nlf> riak wraps the protobuf encoded stream in their own header
17:28 < jocafa> DOH
17:29 < nlf> apparently the data event is sometimes catching two packets from riak in one trigger
17:29 < jocafa> i haven't worked with riak myself :T
17:29 < nlf> i made a fairly nice library for the http interface
17:29 < nlf> but now that i'm already neck deep in it, i'm trying to work out the protocol buffers interface
17:30 < nlf> mostly out of curiousity
17:30 < jocafa> cool
17:30 < jocafa> we use protobuf *extensively* here at work
17:30 < nlf> it seems fairly useful
17:30 < jocafa> it's how all of our services communicate with each other
17:31 < jocafa> it's mostly ruby… i want to do some node stuff, but i can't yet because of node's protobuf support
17:31 < nlf> well this may eventually turn in to a pure javascript implementation
17:33 < CIA-117> node: isaacs v0.9.2-release * r64b7dc3 / (AUTHORS ChangeLog src/node_version.h): wip - http://git.io/Zg0LRQ
17:35 < ag4ve> is that the *actual* release? ie, if i update master and compile, it'll say 9.2 and not 9.2-pre anymore?
17:36 < CIA-117> node: isaacs v0.9.2-release * r4cb7aa5 / (AUTHORS ChangeLog src/node_version.h): wip - http://git.io/QcAVuw
17:36 < CIA-117> node: isaacs v0.9.2-release * r949135f / (AUTHORS ChangeLog src/node_version.h): wip - http://git.io/4WAk1Q
17:59 < SoulRaven> hello
17:59 < SoulRaven> is posibile to kill a worker when a socket is close?
17:59 < SoulRaven> and how i identify what worker to kill when a socket is close?
18:06 < timeturn> any suggestions for full text search mainly for searching through mongodb docs' "titles" and storing a corresponding ObjectId
18:06 < timeturn> I was looking at elasticsearch but not sure if it would be the easiest/best to implement in
18:19 < SoulRaven> is a good ideea to put in production the Cluster ?
18:19 < SoulRaven> for a avl parser equipments?
18:20 < russfrank> SoulRaven: why would you want to kill a worker when some socket is closed
18:20 < SoulRaven> because i want to init a new worker when a socket is open
18:23 < timeturn> cluster is still experimental
18:23 < timeturn> so use at your own risk in production
18:24 < SoulRaven> i undestand, i just installed today node.js and try to discover the framework
18:24 < SoulRaven> i will be here for long time
18:25 < SoulRaven> the ideea is to build a AVL parser
18:27 < SoulRaven> is posibile to have autocomplete in phpstorm?
18:27 < SoulRaven> i have installed the plugins, but i don't think there are updated
18:28 < SoulRaven> so what is the best IDE for developing node.js avalibile in windows and linux, and both have the autoupload feature when save localy
18:29 < gildean> i just use sublime text 2 and edit the files straight off the server, or use git when appropriate
18:30 < BennyLava> autoupload, lolwat
18:30 < jcrugzz> is that a real thing?
18:30 < BennyLava> is someone stuck in the ftp era or something?
18:30 < Glenjamin> when is git no appropriate?
18:30 < gildean> yeah, there are sftp-clients for example with automatic sync
18:31 < jcrugzz> Yea I either use a deploy tool on nodejitsu or a git based deploy
18:32 < CIA-117> node: isaacs v0.9.2-release * r7144be7 / (lib/url.js test/simple/test-url.js): url: Go much faster by using Url class - http://git.io/fXONyA
18:32 < CIA-117> node: isaacs v0.9.2-release * r786241c / (AUTHORS ChangeLog src/node_version.h): wip - http://git.io/BzzkoQ
18:32 < gildean> Glenjamin: bad wording, i meant more like "when i'm not lazy and the code might matter somehow"
18:36 < Glenjamin> heh
18:37 < nkuttler> autoupload on save sounds like live editing production files..
18:37 < gildean> nkuttler: like a boss!
18:37 < mscdex> !
18:45 < SoulRaven> yes, but everytime when you want to modify something on the source, even a column, you have to deploy, is not more easy only to us SAVE from the IDE, and the file is updated on the server?
18:46 < Glenjamin> you dev locally against a similar environment that it doesnt matter if it breaks
18:47 < Glenjamin> and then when stuff is good enough to put in front of customers, you commit and deploy
18:47 < bradleymeck> SoulRaven: it is easier… but can lead to problems where production gets code thats not ready for it
18:47 < Glenjamin> preferrably running a test suite first
18:47 < SoulRaven> the job i done is only for backfront
18:47 < Glenjamin> and of course, if you're directly on the server then no-one else can be changing stuff
18:48 < SoulRaven> what is the best option for that, but still use some sort of auto upload
18:52 < nkuttler> SoulRaven: I just ssh into the server and use my favorite IDE vim when I absolutely have to..
18:52 < nkuttler> other than that the code goes through dev, stage, automated testing + deployment scripts..
18:53 < SoulRaven> and autocomplete for the code? what is best?
18:53 < gildean> i just type ssh://servername on nautilus and open the directory as a project on sublime, imo it works nicely
18:53 < samholmes> Anyone know much about getting paid for programming work through paypal? I'm wondering if it's cheaper for my employer to use paypal instead of a money order/check. Also, are there any other cons to paypal; fees or anything?
18:53 < gildean> sublime does autocomplete etc. nicely too
18:53 < nkuttler> samholmes: ew, paypal fees are absurdly high
18:54 < SoulRaven> even for nodejs ? or i must do some modification?
18:54 < samholmes> nkuttler: Right. Then that would you suggest that's easier, more instant than a money order?
18:54 < pppaul> samholmes, i have my boss pay me via interac
18:55 < nkuttler> samholmes: i don't really care about speed. regular transfers are fine for me
18:55 < samholmes> bank transfers?
18:55 < nkuttler> wire transfers for americans i guess
18:57 < samholmes> I wonder if dowlla would suit
18:57 < nkuttler> reminds me.. i have to send out a few invoices..
18:58 < nicolaas> is there a way to declare a dependency in package.json so that it will be installed globally when running npm install -d ?
18:59 < milani> -d or -g?!
18:59 < nicolaas> if they run -g, will everything be installed globally ?
19:00 < Glenjamin> nicolaas: no, global installs are always separate from packaged installs
19:00 < milani> I think dependencies of a global module won't be global.
19:01 < nicolaas> so how do I make mocha a dependency without asking people to run more than 1 command ?
19:01 < bradleymeck> nicolaas: node_modules/.bin/mocha ?
19:03 < milani> if it is your module dependency users won't want to install it! :D ha?
19:07 < nicolaas> thx bradleymeck: that'll probably fix it
19:09 < TooTallNate> nicolaas: you can just add it as a "devDependency", and in your "npm test" command, "mocha" will be in the PATH
19:09 < TooTallNate> npm is nice like that :)
19:11 < kuja> yeah any dependency bin scripts will be automatically available in all your $PATH for all your npm "scripts
19:12 < nicolaas> cool, awesome
19:13 < kuja> so basically, to run tests you would go into your package directory and type "npm test" which will fire the appropriate command as defined in package.json. I have my `npm test` hooked up to `mocha -u qunit --recursive` for example
19:24 < gerconfused> Hello everybody. Quick question, I've put my functions into an object and I want that to tell async.forEachSeries when it's done. How do I do that?
19:25 < superjoe> gerconfused, sounds like you need to read the documentation for async
19:25 < bradleymeck> gerconfused: code example? not sure what you are saying
19:26 < gerconfused> superjoe: is there more documentation than the stuff on github?
19:26 < gerconfused> bradleymeck: my async fail: http://pastebin.com/dcAdJ9ju
19:26 < superjoe> gerconfused, not that I know of. the docs on github should be sufficient.
19:28 < gerconfused> superjoe: It's entirely possible, that I'm too much of an idiot to understand it, but I'll take another look
19:29 < bradleymeck> gerconfused: seems ok on glance
19:30 < gerconfused> bradleymeck: does not process the second picture, I guess my object doesn't say: hey, I'm done.
19:30 < bradleymeck> gerconfused: you will want to use the next() argument async gives though
19:30 < gerconfused> bradleymeck: I'll look that up
19:31 < bradleymeck> gerconfused: read the iterator argument stuff in https://github.com/caolan/async#forEach
19:32 < gerconfused> bradleymeck: thanks, I will! I feel a little lost on the node stuff once in a while, two years ago mvc on php was fancy for me
19:33 < TehShrike|Work> brian: are you brianc?
19:33 < TehShrike|Work> err
19:33 < TehShrike|Work> stupid autocomplete
19:33 < TehShrike|Work> Hello there brianc
19:34 < brianc> TehShrike|Work: howdy
19:34 < brianc> yes I am me
19:34 < TehShrike|Work> I've been enjoying The Southern Front
19:34 < brianc> hey thanks!
19:53 < turbobug> yes
19:55 < gerconfused> turbobug: was that a success heureka yes?
19:55 < TehShrike|Work> Is there a good Heroku-like framework that uses node.js?
19:58 < superjoe> TehShrike, like this? http://nodejitsu.com/
19:59 < cmdrtaco> TehShrike|Work~# openshift works
20:00 < cmdrtaco> TehShrike|Work: openshift.com
20:00 < cmdrtaco> it works great
20:01 < gildean> openshift uses node.js?
20:01 < TehShrike|Work> Fuck me, I said the wrong thing >_< I typed Heroku, but I really meant Hadoop.  They're a bit different...
20:01 < gildean> i know it runs node apps, but are they run on node too?
20:01 < TehShrike|Work> Is there a good Hadoop-like framework that uses node.js?
20:01 < jesusabdullah> TehShrike|Work: I'd just use haderp and haderp-streaming and write a node wrapper or wrappers for that
20:02 < cmdrtaco> haderp lol
20:03 < cmdrtaco> gildean: uhhhh, yeah it runs node
20:03 < TehShrike|Work> I mostly want a framework that I can write jobs for, and have it manage receiving new data, and starting all the job nodes and making sure they complete correctly
20:03 < jesusabdullah> I see you are impersonating slushdot's founder
20:03 < cmdrtaco> and you can use the DIY cartridge and use it like a shell server and do anything you want also...like use NVM :)
20:03 < jesusabdullah> unless of course you ARE slushdot's founder!
20:03 < TehShrike|Work> I want me a map/reduce server, the file system is something I'm paying less attention to at the moment
20:03 < jesusabdullah> in which case: nice to meet you, sorry I called it slushdot
20:05 < gildean> cmdrtaco: yeah, i said it runs node, i asked if it runs on node
20:05 < gildean> cmdrtaco: as i understood that was the question
20:05 < cmdrtaco> not many production things run ON node
20:05 < cmdrtaco> that would be stupid
20:06 < cmdrtaco> i guess i misread the question
20:06 < hextor> hey, is there a way of updating /etc/resolv.conf node.js' caches without a restart?
20:06 < TehShrike|Work> I want something like Hadoop's map/reduce framework, except that I want to write the jobs in JavaScript, preferably with node.js's libraries
20:06 < gildean> cmdrtaco: now how is that stupid exactly?
20:06 < cmdrtaco> gildean: because...its javascript
20:07 < TehShrike|Work> lol
20:07 < TehShrike|Work> dftt
20:08 < cmdrtaco> TehShrike|Work: i have no idea what 'haderp's map/reduce framework' is
20:08 < bradleymeck> logical argument.
20:08 < gildean> cmdrtaco: ah, so you don't actually view javascript as a programming language
20:08 < gildean> cmdrtaco: are you an old php coder maybe?
20:08 < cmdrtaco> no, c++
20:08 < TehShrike|Work> cmdrtaco: Hadoop, not Haderp
20:08  * jocafa pets javascript
20:08 < KiNgMaR> herp derp
20:08 < TehShrike|Work> herpdoop!
20:08 < cmdrtaco> C++ and Java for servers
20:09 < jocafa> java for nothin! ¬¬
20:09 < cmdrtaco> TehShrike|Work: are you sure it isnt Haderp lol
20:09 < TehShrike|Work> ...am I sure *what* isn't Haderp?
20:09 < bradleymeck> C++ for servers makes me sad
20:09 < TehShrike|Work> Are you not familiar with Hadoop?
20:09 < cmdrtaco> not at all...why would anyone need hadoop
20:10 < cmdrtaco> really idont know
20:10 < TehShrike|Work> If anyone knows of some such thing, I'd be interested to hear it
20:10 < cmdrtaco> TehShrike|Work: its all built on opensource right?
20:10 < TehShrike|Work> cmdrtaco: http://hadoop.apache.org/
20:10 < cmdrtaco> doesnt load
20:11 < TehShrike|Work> It didn't load for me a couple minutes ago, it loads fast for me now.  I wonder if they're having DNS issues or something
20:11 < cmdrtaco> so this is a server and not some service
20:12 < TehShrike|Work> It is a service that you could install on a server, as I understand it.
20:12 < TehShrike|Work> I haven't used it myself, but I like the idea
20:12 < TehShrike|Work> I just don't want to have to write jobs in Java
20:12 < cmdrtaco> ooh i think its going to load
20:12 < jocafa> cmdrtaco:  if you're here… who's watching slashdot? i'm… i'm scared now...
20:14 < cmdrtaco> TehShrike|Work: ok well sure you can re-program  hadoop in javascript
20:14 < TehShrike|Work> >_<
20:14 < cmdrtaco> but you should use glusterfs or something for the filesystem part
20:15 < TehShrike|Work> Looks like an interesting thing
20:15 < TehShrike|Work> What have you used it for?
20:15 < cmdrtaco> nothing
20:16 < jasonpincin> is that cmdrtaco from #e back in '98-ish ?
20:19 < plato> or slashdot perhaps?
20:20 < gluxon> So it would appear that there is no way to build and parse a binary plist in Node.js?
20:20 < jasonpincin> i dug the obsidian e theme
20:20 < cmdrtaco> is binary plist a documented format?
20:21 < cmdrtaco> find the spec
20:21 < gluxon> cmdrtaco: It's Apple proprietary.
20:21 < cmdrtaco> boycott it then
20:22 < gluxon> cmdrtaco: Heh. I agree!
20:22 < gluxon> But I do need to use the format regardless. :'(
20:22 < cmdrtaco> and get sued?  not worth it
20:22 < cmdrtaco> all apple does is sue people these days, so...i wouldnt push my luck
20:23 < gluxon> cmdrtaco: No, there's already a way to build and parse it on Ruby and Python.
20:23 < jerrysv> gluxon: http://explanatorygap.net/2009/10/30/apple-have-documented-the-binary-plist-format/
20:23 < jerrysv> gluxon: the documentation looks pretty complete, and should be somewhat easy to implement
20:24 < gluxon> jerrysv: So I guess I have to create my own implementation..
20:24 < gluxon> Oh well. Thanks! :)
20:24 < cmdrtaco> wow yeah thats good
20:24 < cmdrtaco> no need to boycott them for 'that' reason anymore
20:24 < cmdrtaco> damn, pick one of the other 20
20:24 <@Nexxy> only 20?
20:24 <@Nexxy> you're being gracious
20:24 < cmdrtaco> i like you
20:24 <@Nexxy> I think I like you too
20:25 <@Nexxy> if you are who I think you are
20:25 < jerrysv> gluxon: or add support to the existing plist library, i'd bet TooTallNate would love the addition
20:25 < gluxon> jerrysv: I checked his repo out. That's what I was going to do :P
20:25 < jerrysv> gluxon: problem solved soon then, awesome!
20:26 < gluxon> Wow, there's even a PHP implementation already O_o
20:27 < cmdrtaco> gluxon: PHP? did you mean Go? ha ha ha
20:27 < TehShrike|Work> wat
20:27 <@Nexxy> am I the only one that pronounces PHP in their head as "Fffffp"?
20:28 < TehShrike|Work> Nah, I spell it out in my head
20:28 <@Nexxy> PEE EICH PEE
20:28 < TehShrike|Work> Yup.
20:28 < cmdrtaco> AYCH
20:28 <@Nexxy> FOW-ER
20:28 <@Nexxy> NIN-ER
20:28 < superjoe> Nexxy, I try to prevent PHP from entering my head in the first place
20:29 < cmdrtaco> my god, the boilerplate on that PHP class
20:29 <@Nexxy> superjoe, good call
20:29 < cmdrtaco> comments completely obfuscate the program
20:29 < TehShrike|Work> PHP 5.4 has anonymous functions :-o
20:29 <@Nexxy> oh joy
20:30 <@Nexxy> now if only it were consistent 
20:30 < cmdrtaco> TehShrike|Work: i really thing anonymous should stop hacking everyone
20:30 < BennyLava> it's consistently shitty
20:30 <@Nexxy> hooo-gaa
20:30 < TehShrike|Work> PHP 5.4 also supports functionThatReturnsAnArray()[$index] :-P
20:30 < cmdrtaco> focus on apple
20:31 < cmdrtaco> php is getting better *
20:31 < cmdrtaco> * better meaning better than older versions of php
20:31 < TehShrike|Work> I still don't want to write PHP any more, but it really is getting better
20:31 < BennyLava> at this rate, it'll be a good environment in about 25 years
20:31 < BennyLava> yay!
20:32 < TehShrike|Work> It's better than most things that were around a decade ago
20:32 < BennyLava> oh wait no, the entire php ecosystem is already completely fucked up and that's never gonna change
20:32 < gerconfused> I'm still stuck on the async modules iterator. would anyone be tempted to take a look at how I should use the callback with async.forEachSeries?
20:32 <@Nexxy> gerconfused, snippets would help
20:33 < gerconfused> Nexxy:  http://pastebin.com/phrYm2sj
20:33 < TehShrike|Work> Have any node.js-users here used Hadoop?
20:33 < TehShrike|Work> Specifically Hadoop MapReduce?
20:34 < cmdrtaco> is MapReduce a buzzword
20:35 < TehShrike|Work> Use Wikipedia plz
20:35 <@Nexxy> gerconfused, what is the problem?
20:35 < cmdrtaco> ok sec
20:35 < version2beta2> yup
20:35 < lrvick> join #python
20:35 < cmdrtaco> ok yep buzzword, thx
20:35 < lrvick> woops
20:35 < gerconfused> Nexxy: It stops after processing the first image
20:35 <@Nexxy> cmdrtaco, COLLECT/INJECT
20:35 < MicronXD> howdy
20:36 < version2beta2> I guess I'll be indiscriminately positive here, since I typed into the wrong window. But anyone who needs affirmation can take it personally.
20:36 < gerconfused> Nexxy: I think I lack understanding of callbacks, but I'm just very confused by this right now
20:36 < cmdrtaco> !8ball does npmjs.org work today
20:36 <@Nexxy> version2beta2, YES~!1
20:36 < cmdrtaco> damn we need an 8ball bot for checking npmjs.org status
20:36 <@Nexxy> gerconfused, oki! I will try to help when I return
20:36 <@Nexxy> I'm cooking taters.
20:37 < MicronXD> I'd like to write a node module in C++. Anyone know of a good starting point?
20:37 < gerconfused> Nexxy: that's amazing, I'll dig through documentations and stackoverflow again
20:37 < TehShrike|Work> MicronXD: I haven't done so yet, but I remember the documentation looked really straightforward when I looked over it
20:38 < TehShrike|Work> http://nodejs.org/api/addons.html
20:39 < MicronXD> Thank you, sir.
20:39 < MicronXD> wait....
20:39 < MicronXD> TehShrike|Work: Are you TehShrike from StackOverflow?
20:39 < TehShrike|Work> ...yes
20:40 < TehShrike|Work> lol
20:40 < gluxon> Nexxy: How do you pronounce SQL?
20:40 < TehShrike|Work> How's it going MicronXD :-P
20:40 < chilts> gluxon: s-q-l
20:40 < timeturner> gluxon: sequel
20:40 < MicronXD> dude!!! You've helped me out in the MySQL chat more times than I can count. I owe you like 30 beers lol
20:40 < chilts> squeal?
20:40 < gluxon> timeturner: At least someone has it right :)
20:40 < TehShrike|Work> MicronXD: lol
20:40 < TehShrike|Work> I like being helpful on the internet :-)
20:41 < timeturner> everyone has their own way of saying it
20:41 < timeturner> but most either say s-q-l or sequel
20:42 < gluxon> timeturner: Ok, now let's talk about how to say Ubuntu. :)
20:43 < timeturner> haha
20:43 < TehShrike|Work> Oh come on, that one's obvious :-)
20:43 < timeturner> that could go a while
20:43 <@Nexxy> gluxon, SEEKWUHL
20:43 < timeturner> best pronunciation ^
20:43 < timeturner> see-kwuhl
20:44 < TehShrike|Work> "postgres"
20:44 < TehShrike|Work> ;-P
20:44 < timeturner> Ubuntu -> ʊˈbuːntʊ
20:44 < timeturner> there's the pronunciation key
20:44 < gluxon> http://patorjk.com/blog/2012/01/26/pronouncing-sql-s-q-l-or-sequel/
20:45 < gluxon> Oh! S-Q-L is the more official pronunciation....
20:45 < timeturner> yeah
20:45 < TehShrike|Work> Yeah, but sometimes "sequel" rolls off the tongue better
20:45 < timeturner> of course, it's an acronym in reality
20:45 < TehShrike|Work> I alternate between them! ;-D
20:46 < albertosh> Hello all, i'm trying to completely remove node to be able to install it from brew, cause im getting millions of errors when trying to link it, is there an easy way to completely remove all node files? I would greatly appreciate some help
20:46 < gluxon> Okay.. I can go back to saying S-Q-L after reading that :P
20:46 < cmdrtaco> i pronounce ubuntu with a c
20:46 < cmdrtaco> and you instead of ew
20:47 < timeturner> I pronounce it like ʊˈbuːntʊ
20:47 < yosalemyo> d
20:48 < cmdrtaco> timeturner: thats super interesting, but i always get looked at funny when i say "did you upgrade to the latest You-Cunt-You"
20:48 < gildean> i pronounce as it's read in finnish: u-bun-tu
20:49 < TehShrike|Work> oo-bun-too
20:49 < gerconfused> Nexxy: will be right back, just have to get cigarettes, hope your taters are doing ok
20:50 < cmdrtaco> same
20:55 < mscdex> seek wool!
20:55 < cmdrtaco> sea qwell
20:57 < cmdrtaco> https://github.com/pksunkara/inflect
20:57 < superjoe> let's talk about node.js
20:58 < superjoe> ubuntu conversation continues in #ubuntu
20:58 < cmdrtaco> hello im trying to use node.js on ubuntu but IT DOSENT WORKS PLZ HALP
20:58 < jocafa> how i mine for fish?
20:58 < tnorris> cmdrtaco: you building from source, using apt-get, what version of Ubuntu?
20:59 < gluxon> cmdrtaco: That question was a joke, right?
20:59 < superjoe> cmdrtaco, way to go, asshole, you just trolled tnorris who is legitimately trying to help a newbie
21:00 < CIA-117> node: Alex Xu master * r68abec5 / configure : configure: always use shlex instead of split - http://git.io/9U7Pvg
21:00 < tnorris> just got back from lunch and glanced at the last few posts. had no idea what was going on.
21:00 < cmdrtaco> jocafa: i teach you to mine for fish
21:00 < CIA-117> node: Alex Xu master * rfb6c314 / configure : configure: always use shlex instead of split - http://git.io/ZubSVg
21:00 < cmdrtaco> first you need bait
21:01 < cmdrtaco> then you need a fish
21:03 < jocafa> and then you get the women?
21:03 < cmdrtaco> to cook the fish
21:19 < yosalemyo> hi
21:27 < diversario> mikeal, nodecamp was awesome, btw. Thanks for that!
21:28 < mikeal> np
21:31 < tnorris> for Buffers, is there a better way to emulate `indexOf()` than using a `for` loop?
21:32 < mscdex> tnorris: not really
21:32 < tnorris> mscdex: ok, thanks.
21:32 < gluxon> tnorris: What about slice?
21:33 < gluxon> bufferVar.slice(index, 1);
21:33 < tnorris> gluxon: that will help me create a new Buffer, but I want to split my buffer when a new line occurs (e.g. buf[n] === 10)
21:34 < gluxon> Right, so doesn't limited the length to 1 character do the trick?
21:34 < gluxon> *limiting
21:34 < gluxon> Say you want index 5
21:34 < gerconfused> I'm back
21:34 < gluxon> buffer.slice(5, 6);
21:34 < mscdex> tnorris: you might also compare indexOf in javascript vs doing it in C++ (https://github.com/bnoordhuis/node-buffertools)
21:35 < tnorris> mscdex: awesome! thanks.
21:35 < gluxon> Oh wait, I've got it backward -.-
21:35 < gluxon> Uh.. convert it to a string first? XD
21:35 < tnorris> gluxon: heh, yeah. =)
21:37 < ryanw> Is it possible to gzip websockets? If I do it manually I imagine unzipping in the browser using JS will be too slow.
21:38 < euoia> what's the opinion on mongodb versus couchdb? How do they differ in terms of nodejs libraries?
21:42 < othiym23> euoia: MongoDB and CouchCB have pretty different philosophies
21:42 < othiym23> they both have too many drivers and ORMs
21:42 < othiym23> people who like ORMs seem to like Mongoose for MongoDB
21:42 < diversario> Mongoose can be too helpful
21:42 < diversario> as in, gets in your way
21:43 < othiym23> yeah, I generally just don't bother with ORMs
21:43 < othiym23> and with Mongo, since its native representation is JSON, not really sure what creating first-class models really gets you
21:43 < tnorris> mscdex: bugger. doesn't have lastIndexOf(), and i don't write cpp.
21:44 < othiym23> this weekend I played around with creating a data access layer using architect + mongodb-native and found it to be tight
21:45 < othiym23> euoia: for Couch (which, incidentlly, is what npm is built on), I just use REST calls, but I've heard that cradle isn't terrible
21:45 <@Nexxy> gerconfused, hi
21:45 < othiym23> and there's also nano, which tries to be lighter-weight than nano
21:45 < othiym23> but, y'know, CouchDB is built on REST principles, so HTTP should do most of what you want to do
21:45 < othiym23> oops, nano tries to be lighter-weight than cradle
21:45 < othiym23> it's too Monday today
21:46 < gerconfused> hey Nexxy, I'm afraid I haven't gotten smarter on my issue yet
21:46 < diversario> Cradle is like Mongoose, too much sugar.
21:46 < euoia> ok that's all good info. My limited experience with mongoose was a bit frustrating.
21:47 < othiym23> diversario: I'm with you, but people REALLY LIKE ORMs and who am I to tell them not to
21:47 < othiym23> except for with Redis
21:47 < othiym23> using an ORM with Redis is just sick and wrong
21:47 < spion_> leave data alone
21:48 < euoia> Is it possible to use redis instead of mongodb/couchdb or are they really different things?
21:48 < diversario> othiym23, I'm not saying not to use them ever, just not for large project when you can't have your dependency break unexpectedly :)
21:48 < spion_> redis is not really meant to be... persistent
21:49 < insin> sometimes an ORM is just what you get when you extracted all the common stuff out of something you did multiple times</trying not to write a redis ORM>
21:49 <@Nexxy> gerconfused, so I'm guessing what's happening is that you're not returning anything from your get_dimensions function
21:49 < diversario> euoia, redis is not for storing things, that's for sure
21:49 <@Nexxy> gerconfused, async.forEachSeries is waiting for that call to return before it executes any more
21:50 < gerconfused> Nexxy: yeah, that's kinda right, but how do I do that, when get_dimensions is just moving on to another function?
21:50 < version2beta2> euoia, I've been playing a little with RedCouch, http://www.github.com/mikeal/redcouch
21:50 < gerconfused> Nexxy: and how would I do that anyways? just add the callback parameter and add callback() at the end?
21:50 < spion_> gerconfused, do you have a gist/pastie?
21:51 < euoia> version2beta2: looking at it now, thanks
21:51 < euoia> version2beta2: what's your experience so far?
21:51 < gerconfused> spion: http://pastebin.com/phrYm2sj
21:51 <@Nexxy> gerconfused, see how your get_dimensions function definition only accepts one parameter, file?
21:52 <@Nexxy> gerconfused, you need to also accept the callback, usually called 'cb'
21:53 <@Nexxy> gerconfused, once that function is done with whatever it's doing, it should execute `cb(null)`
21:53 < gerconfused> Nexxy: and at the end I write cb(); right? but what if I want it to run through all the functions first? I just have no idea what would be a best practise here really
21:53 <@Nexxy> gerconfused, or if there was an error, `cb(<error>)`
21:53 < gerconfused> oh.. cb(null) for no error, right?
21:53 <@Nexxy> yes
21:53 <@Nexxy> if forEachSeries gets a value from one of the callbacks
21:53 < version2beta2> euoia, I picked it up 8 weeks ago, couldn't get it to pass tests, proved to myself it was my fault, went into the hospital for a week, and haven't gotten back to it. But I'm sure it's good, because Mikeal wrote it.
21:53 <@Nexxy> it skips the rest and goes to the "end"
21:53 < diversario> gerconfused, callback signature in node is (error, result)
21:53 < diversario> as a convention
21:53 <@Nexxy> which is its own callback
21:54 < spion_> gerconfused, but why do you set_dimensions in get_dimensions?
21:54 < mikeal> redcouch may have bugs
21:55 < version2beta2> mikeal, all software has bugs. are you maintaining redcouch? i love the idea of it.
21:55 < gerconfused> spion_: I have rewritten and split this up a lot, I guess it's not very transparent anymore
21:55 < mikeal> actually
21:56 < mikeal> dammit, there is a bug i fixed that i haven't pushed
21:56 < mikeal> give me a minute
21:56  * Nexxy stopwatch
21:56 < gerconfused> Nexxy: so if I'd put everything in one function and call the callback on null, it would step to the next item, but how would I write the line in the async.forEachSeries, do I need to add the callback parameter there?
21:56 <@Nexxy> nope
21:57 <@Nexxy> it will be called with the two params
21:57 <@Nexxy> you just need to add it to your function definition 
21:57 <@Nexxy> gerconfused, also you can call multiple functions, just don't cb() until you are finished 
21:58 < gerconfused> Nexxy: ok, would async still get the cb from the object if it isn't in the called function?
21:59 <@Nexxy> gerconfused, if it's called from within get_dimensions yes
21:59 <@Nexxy> you has a closure
21:59 < mikeal> ok
21:59 < mikeal> fixed
21:59 <@Nexxy> mikeal, 6 seconds over time
21:59 < yosalemyo> date
21:59 < gerconfused> Nexxy: ok, will try that
21:59 <@Nexxy> http://sadtrombone.com/?play=true
22:00 < spion_> async.mapSeries(files, function(f, cb) { im.identify(source_dir + f, cb); }, function(err, featuresArray) { /* do stuff with array of file features */ });
22:01 < yosalemyo> date
22:01 <@Nexxy> yosalemyo, Mon Sep 17 15:00:38 PDT 2012
22:01 < version2beta2> mikeal, thank you
22:01 < TehShrike|Work> Nexxybot?
22:01 < spion_> >> new Date()
22:01 < purr> spion_: (object) Mon Sep 17 2012 22:01:07 GMT+0000 (UTC)
22:01 < yosalemyo> tx
22:01 < yosalemyo> :)
22:03 <@Nexxy> TehShrike|Work, you can't prove anything
22:03  * othiym23 misses npmbro
22:03 < yosalemyo> apple
22:04 <@Nexxy> yosalemyo, 699.78 +8.50‎ (1.23%‎) 
22:04 < TehShrike|Work> lol
22:04 < gerconfused> spion_: testing, thanks a bunch you guys
22:04  * TehShrike|Work goes into Turing test mode
22:04 < TehShrike|Work> Nexxy: Has anyone really been far even as decided to use even go want to do look more like?
22:05 <@Nexxy> TehShrike|Work, You've got to be kidding me. I've been further even more decided to use even go need to do look more as anyone can. Can you really be far even as decided half as much to use go wish for that? My guess is that when one really been far even as decided once to use even go want, it is then that he has really been far even as decided to use even go want to do look more like. It's just common sense.
22:05 < spion_> gerconfused, so basically, an example get_dimensions function should look like this, function(f, cb) { im.identify(self.source_dir + f, function(err, features) if (err) cb(err); else cb(null, {w: features.width, h: features.height});  }
22:05 < TehShrike|Work> Hah!  That's the top answer to the Yahoo question, isn't it...
22:05 < mscdex> tnorris: simple lastIndexOf implemented: https://github.com/mscdex/node-buffertools
22:06  * TehShrike|Work is getting inspired to find more Launchy plugins
22:06 < spion_> gerconfused, or to make it simpler you could just return the whole features object, function(f, cb) { im.identify(self.source_dir + f, cb); } // this way, its only about self.source_dir
22:06 < yosalemyo> apple
22:07 < yosalemyo> orange apple
22:08 < spion_> gerconfused, whenever you use an async, callback-style function inside your own function, you also need to make your function use callback style. the custom is to make it the last parameter to your function the callback, and to call that callback with the first parameter being the error, and the second (and possibly more) being the return value(s)
22:08 <@Nexxy> yosalemyo, http://www.example.com/image.jpg
22:08 < gerconfused> spion_: saving your lines in a comment, it's really hard to find this kind of specific explanations if you're not a total programming guru already
22:08 <@Nexxy> lol woops
22:09 < spion_> gerconfused, so for example, in a normal language/framework you would write function foo(bar) { return bar * bar; }
22:09 < yosalemyo> thanks a million apples
22:09 < spion_> gerconfused, in crazy node.js you write function foo(bar, cb) { cb(null, bar * bar); }
22:11 < yosalemyo> apple
22:11 <@Nexxy> spion_, math isn't IO bound
22:11 < spion_> Nexxy, a minimal example
22:11 <@Nexxy> oh oki
22:11  * mscdex shakes a fist at I/O
22:11 < gerconfused> Nexxy: so blocking doesn't apply to math stuff?
22:12 < spion_> gerconfused, but you only really need this if you're calling an async style function. 
22:12 < gerconfused> spion_: like network and drive access, right?
22:12 < yosalemyo> apple
22:12 < spion_> If inside your function you have somecall(params, params, function(err, cb) { ... });
22:12 < yosalemyo> apples
22:12 <@Nexxy> gerconfused, generally, no
22:12  * gerconfused gives yosalemyo apeach
22:12 < yosalemyo> thanks!
22:12 < spion_> then you probably also need to make your function receive async callback.
22:13 < spion_> as a parameter
22:13 < gerconfused> okay, yeah, I think I understood the cb stuff tonight
22:13 <@Nexxy> \o/
22:13 < spion_> admitedly, it was confusing at the beginning
22:14 < spion_> admittedly*
22:14 < gerconfused> I was here like, 4-5 weeks ago and I got it wrong, because I wrote callback stuff on a parent function, which didn't really help the im.inspect not being done, was helped by a very nice member here though
22:14 < spion_> its a different style with its own quirks, but one gets used to it, I think. (I did)
22:14 < yosalemyo> it's all peaches and apples
22:16 < gerconfused> spion_: I think I just had to bash in the mental barrier, that refused to let me move on, I'll dig around with this for some more hours and you guys are going in the credits of the gist I'll create with this, if it ever gets done :P
22:16 < othiym23> gerconfused: the way I got it set in my head was that I went through a while where I didn't write any code with any helper libraries, and forced myself to figure out how to do all my flow control with raw callbacks and the core Node distro
22:16 < othiym23> it was brutal for about a month, but now I have a *much* better understanding of NOde
22:16 < tnorris> mscdex: heh, nice.
22:16 < othiym23> (it helped that my project can't actually use any dependencies)
22:17 < spion_> gerconfused, i used this pattern to help me write my async functions: function myasync_get(id, _return) { db.find({id: id}, function(err, result) { if (err) log.err(err); _return(result); }); }
22:18 < spion_> gerconfused, the logic was something like: Oh I'm passing a different function here, so my function doesn't know its "return" anymore. so I need a new async-y _return as an argument that I can use from anywhere
22:18 < mscdex> tnorris: yeah, just `npm install https://github.com/mscdex/node-buffertools/tarball/master` if you want it right now, otherwise i sent a PR
22:19 < tnorris> mscdex: nice. had no idea you could do an npm install like that.
22:19 < gerconfused> spion_: that sounds like it makes sense, but I will really understand at a later point I think *I don't know what I'm doing*
22:20 < spion_> gerconfused, (just one more thing i forgot to add :D) the point being, return will "return" stuff in that other inner function - but you really want it for the other :D
22:20 < yosalemyo> apple
22:20 < mscdex> tnorris: yeah any tarball, or even a directory
22:22 < gerconfused> spion_: ah okay, I get it, so for my case I could return stuff to the async.forEachSeries, instead of the function that was called by another, right?
22:24 < spion_> you can't return because you have this.get_dimensions = function(file) { /* cool, I can return here normal */ im.identify(self.source_dir + file, function(err, features) { /* oops, i need to return from here, but can't because this is a different, nameless function function */ }); ...
22:24 < spion_> heh, i wrote function twice
22:24 < gerconfused> I finish sentences with ; after coding a lot ^^
22:25 < TehShrike|Work> I recently stopped using semicolons in JS :-x
22:25 < spion_> So thats why you add a "callback" function, to simulate a return.
22:25 < spion_> this.get_dimensions = function(file, return_callback) { im.identify(self.source_dir + file, function(err, features) { /* do stuff with features, and then... */ return_callback(err, features); }); }
22:26 < spion_> Then it becomes an async style function. this.get_dimensions(file, function(err, f) { /* use f.width, f.height */ });
22:27 < spion_> a contributor to the glorious pyramid of doom
22:27 < tnorris> mscdex: you think an optimization case could be made for when there's only one character?:vsp
22:28 < gerconfused> okay, I need a cigarette. no offense, I'm just in need of distraction to process this
22:28 < tnorris> mscdex: heh, was thinking about what i'd typed you, and entered a vim command on accident. nm it.
22:29 < spion_> gerconfused, no problem. just hope I helped (I remember how it was when I got started)
22:30 < mscdex> tnorris: doubtful there'd be a signficant difference
22:32 < tnorris> mscdex: ok. just curious since both indexOf and lastIndexOf are about 40% slower than a for() loop in my test: http://pastie.org/4743018
22:33 < mscdex> tnorris: i'd stick to js then :-)
22:33 < tnorris> heh, ok.
22:36 < gerconfused> spion_: you've helped a great deal!
22:37 < mscdex> tnorris: i think in that for-loop you want i >= 0
22:38 < tnorris> heh, good call.
22:39 < mscdex> but yeah there might be a more efficient way to do lastIndexOf there, quite easily if it's just a single byte
22:39 < LouisT> Hello, I'm having issues with massive memory 'leaks', I'm using reading a file line by line and converting them into objects and using 'node-mongodb-native' to store them in a collection. My issue seems to be when I run 'collection.update', as it stores a ton of objects with each update. Anyone know how to prevent or clear the objects when this happens?
22:39 < tnorris> LouisT: code snippets needed.
22:40 < tnorris> mscdex: you mean for the cpp, or the js code?
22:43 < LouisT> tnorris: I'm aware of how horrible this code is at the moment, I do plan on cleaning it up greatly.. http://thepb.in/private/5057a75488b085410b000008
22:46 < blueadept> mother of god
22:50 < gerconfused> spion_: could I write async.forEachSeries(files, resizer.get_dimensions, function(err, features){ ? because this still gives me undefined on the features part
22:50 < gerconfused> okay, stupid question, could I write it similar, if I want to keep my code packed up in my tiny, cute functions
22:50 < tnorris> LouisT: if I understand correctly, your creating an object for each column returned from mongodb?
22:51 < LouisT> tnorris: no, it's reading a single line from a .txt file, creates an object, then uses update with upsert to upload that object to mongodb
22:52 < spion_> gerconfused, mapSeries
22:52 < gerconfused> spion_: oh, right!
22:52 < spion_> forEach only executes the callbacks... the results are not collected :D 
22:52 < tnorris> LouisT: ok, it's possible that your app is reading lines in faster than can be written to mongo. the safest would be to not read the next line until mongo is updated (line 31)
22:53 < gerconfused> spion_: %-) I really only smoked nicotin, it's amazing how confused I still am. I think I have a wisely chosen nickname
22:53 < gerconfused> works ^^
22:54 < spion_> I used to smoke cigs... they can give your head a spin or two :P
22:54 < tnorris> LouisT: use fs.createReadStream to open the file and read in parts until you have a full line, then pause reading until mongo is updated.
22:54 < LouisT> tnorris: yes i do that
22:54 < LouisT> well, not the pause part, but i read line by line with that method
22:54 < spion_> (of course, they usually don't if blood nicotine levels are kept high at all times)
22:54 < spion_> gerconfused, did it work? :P
22:55 < spion_> (mapSeries)
22:55 < tnorris> LouisT: I should see a 'continueReadingFile()' function after line 30 that triggers continue reading the file.
22:55 < gerconfused> spion_: yes
22:55 < spion_> wooo
22:55 < gerconfused> \o/ spion_ \o/
22:55 < tnorris> if you're reading in the entire file at once, that can cause memory issues.
22:56 < LouisT> tnorris: ok, i'll give it a go, thanks
22:56 < tnorris> anyone correct me if I'm wrong, but Buffers live outside the node js vm heap space, and can grow until your system crashes.
22:56 < tnorris> LouisT: np, let me know if it doesn't work.
22:57 < gerconfused> spion_: should I also pass the filename through the callback so I can call the next function inside the mapseries?
22:58 < spion_> i'm not sure how your code looks like at the moment
22:59 < spion_> but if you want to do two things to the file... just make a function that does both things, then calls the callback :) Its easier than going .mapSeries twice
23:00 < samholmes> So the connect logger middleware is for logging requests or what? I'm looking to roll my own statcounter-like site traffic logging.
23:00 < gerconfused> spion_: okay, will try to just combine, seems the best
23:01 < mscdex> tnorris: for cpp, it'd work pretty much the same way as JS... the benefit being it has direct access to the memory and doesn't have to make that js->c++ bridge
23:06 < wlaurance> Anyone want to try a new Android app I am working on? It is a node.js documentation viewer and npm package searcher
23:08 < tnorris> mscdex: sounds good. love to have a faster implementation. I'm working on parsing 1 GB of data per second, so every millisecond counts.
23:14 < raphie> question about modules: I've written a module and am using it in my main app.js. however, the module will need to get some variables from app.js. what's the best way to do this?
23:15 < tnorris> raphie: I assume you're just using require to include your module?
23:15 < raphie> yessir
23:15 < raphie> tnorris: basically, I need (very limited) two-way communication
23:16 < raphie> well, communication is the wrong word -- accessing variables
23:16 < spion_> module.exports = function(params) { ... return module_result }
23:16 < spion_> require("module.js")(params)
23:17 < raphie> and does that pass the value or reference? this variable will only be defined later
23:17 < othiym23> what spion_ said, or if you can provide some sensible defaults, put those in the module and export some kind of initializer function from your module the main module can call to set / override any variables
23:17 < LouisT> tnorris: well, it _seemed_ like it was working, then my server stopped responding.. so i'll get back to you when ever i get it back up.. =/
23:17 < tnorris> LouisT: oooh. ok.
23:18 < raphie> othiym23: never thought about using a setter instead, that's perfect. thanks :)
23:18 < spion_> raphie, you can try it out. but basically, afaik, if params is an { } object, you can modify it
23:18 < gerconfused> spion_: it seems to work pretty well right now, but it crashes (how ironic)
23:19 < gerconfused> spion_: my bad, still spawns too many processes
23:21 < spion_> gerconfused, pastie?
23:21 < tnorris> LouisT: oh, and I was wrong. Buffers don't live outside of the js vm space. Streams do. so your app will crash if you try to read in files larger than the js vm space can handle (x64 max is 1.7 GB).
23:21 < gerconfused> spion_: in a sec, was calling the callback within the for loop, no great idea
23:22 < LouisT> tnorris: the biggest file will never go past 20MB
23:22 < tnorris> oh, heh. not even close then.
23:23 < LouisT> also i forgot i switched to fs.openSync
23:26 < gerconfused> spion_: it generates the images perfectly, but it throws an error, here the pastebins: http://pastebin.com/1F8S8nXT http://pastebin.com/8uRs4exZ
23:26 < LouisT> hm, it came back up, but now for some reason the callback isn't being triggered... i have no idea what happened now
23:27 < spion_> gerconfused, thats not quite what I had in mind
23:27 < spion_> what I meant was something like identifyAndResize for a single imag.e
23:27 < gerconfused> oh
23:28 < gerconfused> ah
23:28 < spion_> oh wait
23:28 < spion_> you want multiple resizes per image
23:28 < gerconfused> yeah
23:28 < gerconfused> so I should stick that into another loop with these if statements and iterator variables?
23:29 < gerconfused> my machine can handle 4 imagemagick processes at once, but the first time I ran it without regulations was funny, 84 processes on 18.8M pictures :D
23:29 < spion_> yep, build another iteration for the widths.
23:30 < spion_> do you want fine grained control of resize parallelism, or a simpler solution? :)
23:30 < gerconfused> I don't need to know which size comes first, I just don't want to crash my machine every time
23:31 < gerconfused> I found an article on that I think, where you just abuse an if statement as a for loop, by calling the function again
23:37 < spion_> actually, I'd do var parallelResizes = 5; async.mapSeries(files, function(item, cb) { im.identify(source_dir + file, cb); }, function(err, identifies) { var queue = async.queue(function(options, callback) { im.resize(options, callback); }, parallelResizes); identifiers.forEach(function(id) { create options object, queue.push(options); }); queue.drain = function() { console.log("resizing complete"); } });
23:37 < spion_> ok, thats beyond the size of a normal message
23:37 < gerconfused> that looks fancy
23:39 < gerconfused> spion_: I'll copy that in the document where I've saved the rest of your appreciated wisdom so far
23:39 < spion_> gerconfused, https://gist.github.com/3740438
23:41 < spion_> basically, you map "identify" for every image to get info, then create a resizing queue ( https://github.com/caolan/async#queueworker-concurrency ) and push a couple of resizing tasks to it for each image.
23:41 < gerconfused> spion_: wow new fancy functions again
23:42 < spion_> its fancy in the sense that you get to control how many resizes will be executed in parallel :)
23:43 < spion_> but there is also forEachLimit, and I think that would be easier. let me try a new variation
23:43 < gerconfused> okay, I will try to get that working in a couple of hours, when I've had some sleep. Thank you so much, I really appreaciate, stop stop
23:44 < spion_> no, scratch that. queue is actually easier.
23:44 < spion_> :)
23:44 < gerconfused> ok ^^
23:44 < gerconfused> well, I'll let you know when it's working or I'm completely overwhelmed again, thank you, really. Just have to head up to my university in a couple of hours, where they want to force us onto c#
23:45 < gerconfused> (I refused :>)
23:47 < gerconfused> good night spion_ and Nexxy
23:47 < ang3lfir3> c# aint bad ... .and you get paid 
23:47 < spion_> gerconfused, okay. on a side note i find C# is okay as a language :P
23:48 < ang3lfir3> getting paid is a good thing
23:48 < mmalecki> node.js indeed *does* get you paid
23:48 < mmalecki> and isn't painful to write
23:48 < spion_> mmalecki, its slightly painful at the beginning
23:49 < ang3lfir3> easier to get paid as a C# dev .... at least at a meaningful rate for a meaningful amount of time ... (thats not a language issue)
23:49 < spion_> (even with previous JS experience: i don't think any other js library has pushed callbacks to this level before :)
23:49 < ang3lfir3> still rather write js half the time.... gets monotonous  after awhile
23:50 < Lorentz> I rather solve problems than sticking with just one language
23:50 < ang3lfir3> ^^ +1
23:50 < tnorris> Lorentz: i can respect that, but sometimes it about seeing how far you can push the language.
23:51 < ang3lfir3> tnorris, thats just in cases for fun
23:51 < spion_> ah, it wasn't a level, it was a distance
23:51 < ang3lfir3> pushing a language is not a business concern
23:51 < spion_> i knew i got that part wrong.
23:51 < Lorentz> There's nothing wrong about knowing the limits of your tools
23:52 < Lorentz> in fact it should be encouraged
23:52 < Lorentz> but it shouldn't be all there is to it
23:52 < tnorris> ang3lfir3: initially, yeah. but as a language is proven out by using it for fun it can become a business concern.
23:52 < LouisT> hm.. according to the mongodb docs "coll.findAndModify({id:id}, [['_id','asc']], obj, options, function (err, res) {});" should work fine, which it does in a way -- it does insert the object -- but for some reason the callback never gets triggered.. any ideas?
23:52 < ang3lfir3> i don't think anyone is debating that ... or anything for that matter :p 
23:53 < tnorris> heh, me neither. just needed a break from my javascript. =P
23:53 < spion_> C# has a pragmatic vibe
23:54 < ang3lfir3> spion_, it has a "my paycheck" vibe :p 
23:54 < spion_> ang3lfir3, Java too, but it lacks that vibe
23:55 < spion_> (the pragmatic one that is)
23:55 < ang3lfir3> its a great language for doing things where type safety is important ..... and its not Java .... 
23:55 < ang3lfir3> spion_, java has a "ugly shiver" vide :p 
23:56 < tnorris> I don't know java, but my only exposer was as a jr sys admin who had to debug their failing java system from overloaded memory.
23:56 < tnorris> so for me java has a "i want to kill myself" vibe.
23:57 < ang3lfir3> tnorris, LOL 
23:57 < spion_> I know Java, and the main problem of the language is that it lacks first class functions. Which caused all other problems :P
23:57 < tnorris> we were told that all java processes had to be restarted every 24 hours. wtf?
23:58 < tnorris> we were running point-of-sales systems. just lucky we didn't have any customers that had stores open for 24 hours.
23:59 < tnorris> spion_: would that also contribute to java's use of memory?
--- Log closed Tue Sep 18 00:00:35 2012
