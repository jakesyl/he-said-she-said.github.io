--- Log opened Wed May 01 00:00:00 2013
--- Day changed Wed May 01 2013
00:00 <@TooTallNate> thealphanerd: to add MP3 playback support to Firefox
00:00 <@TooTallNate> but that's a WIP
00:00 < thealphanerd> ahhh cool
00:00 < thealphanerd> I'm doing audio stuff too!
00:00 <@TooTallNate> seems the popular choice :)
00:01 < thealphanerd> yeah working with the domain specific language called Fuast
00:01 < thealphanerd> which is used for signal processing
00:01 < thealphanerd> and lets you compile to various architectures
00:01 < thealphanerd> so trying to get it to compile to browser / web audio
00:01 < thealphanerd> for doing synthesis in the browser
00:02 <@TooTallNate> nice
00:02 <@TooTallNate> i've also found that gyp works well with emscipten's compiler
00:02 < qard> Hey, I'm trying to pipe a stream into a net socket and pipe the response to another stream. If the server disappears, I have it set up to reconnect. But the stream doesn't continue. Ideas?
00:03 < qard> I just get a write EPIPE error. :(
00:21 < djazz> mbalho, TooTallNate: this is awesome! i think it works :D
00:21 < djazz> it takes some time to render a song though
00:21 < djazz> first analyze the whole song, html5 fft is live-data only
00:21 < djazz> and then use that to render on a canvas
00:21 <@mbalho> live-data?
00:21 < djazz> and write frames
00:22 < djazz> mbalho: you cant pre-analyse
00:22 < djazz> it must be done in realtime
00:22 < djazz> sure there are others like fft.js but im using web audio
00:22 <@mbalho> ah through the web auio
00:22 <@mbalho> audio*, got it
00:22 < djazz> anyone know a quick way to add audio to a webm file with ffmpeg?
00:22 <@mbalho> i doubt fft.js is streaming
00:23 < djazz> mbalho: you give it a waveform buffer, it gives you fft data
00:23 < djazz> it is streaming, smoothing
00:23 <@mbalho> ah so you can split up your buffer
00:23 < djazz> yea
00:23 < djazz> I have done that before
00:23 <@mbalho> djazz: do you know how slow it is compared to the web audio api one?
00:23 < djazz> mbalho: It's faster
00:23 < djazz> mbalho: http://djazz.mine.nu/apps/analyzer/
00:24 < djazz> well
00:24 < djazz> it depends on the quality ofc
00:24 < djazz> wait for it to download the mp3 and see fft.js + a web worker draw the spectrum
00:24 < djazz> aka histogram
00:26 <@mbalho> djazz: if its faster then why use the web audio one? 
00:26 <@mbalho> uhoh laptop battery dying
00:27 < djazz> mbalho: I like it's output better
00:27 < djazz> I already had some realtime spectrum code (not the ony you see here)
00:35 < inspiron> how do you guys handle versioning within your team while in development? Say your in development and you are creating a lot of npm modules. Do you follow semver and bump up the major version, minor version, bug fix, each time you make that type of change? Seems like we would hit 5.0.0 or higher before production if we did that. Whats the standard?
00:35 < djazz> mbalho: I will upload the .webm file now
00:35 < djazz> :D
00:35 < djazz> i used ffmpeg to add audio
00:36 < djazz> TooTallNate: ^
00:37 < howdynihao> inspiron: @ semver.org there's a faq about that
00:37 < howdynihao> generally if you're still developing you shouldn't be at 1.0.0
00:38 < djazz> mbalho, TooTallNate: http://djazz.mine.nu/apps/spectrum/render/crystal_empire_visualized.webm
00:38 < djazz> :D
00:38 < draginx> mscdex: is there anyway to get node-mariasql to return numbers as numbers rather than strings?
00:38 <@TooTallNate> djazz: pretty cool!
00:39 < djazz> yeaa
00:39 < djazz> now I just need a serverside encoder and the app can run in a webbrowser
00:39 < djazz> i mean, serverside ffmpeg
00:39  * djazz is tired
00:39 < djazz> its soon 3 AM, but this is too awesome for bed
00:40 < djazz> TooTallNate: is the audio in sync?
00:40 < djazz> my soundcard is wrong sometimes
00:41 <@TooTallNate> djazz: i mean it seemed ok to me but it's hard to tell
00:42 < djazz> rendering the video this big is slow xD
00:44 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
00:49 < inspiron> thanks
00:50 < mscdex> draginx: parseInt()
00:50 < uptownhr> tjfontaine: hello!
00:50 < inspiron> so looks like minor version for future releases in development. It didn't talk about patch version but I assume its still when there's a bug fix only/
00:50 < inspiron> ?
00:50 <@tjfontaine> uptownhr: heya
00:50 < jdab> hello
00:50 < inspiron> or is that kind of up to the team/
00:51 < uptownhr> tjfontaine: just got your message about using streaming library
00:51 < jdab> can anyone please help me with an issue installing Node... I am having trouble running node-dev
00:51 < uptownhr> tjfontaine: i was actually using a node_module called node-xml
00:51 < draginx> mscdex: I guess I could do that but it's for sequelizeJS really
00:51 < uptownhr> from https://github.com/robrighter/node-xml
00:51 <@tjfontaine> uptownhr: then you should submit a bug with them :) they shouldn't be trying to do that
00:52 < uptownhr> ah lol
00:52 < draginx> i wouldnt want to override '-1' if its *suppose* to be a string :p
00:52 <@tjfontaine> uptownhr: I presume you were doing parseFile?
00:52 < mscdex> draginx: doesn't sequelize have type information in its models anyway?
00:52 < uptownhr> tjfontaine: yup
00:52 < draginx> mscdex: yeah need to redo that
00:52 < draginx> basically. im trying to see how node-mysql does it
00:52 < uptownhr> tjfontaine: i would have assumed this would have taken care of it since it's a saxparser
00:53 <@tjfontaine> uptownhr: ya this is broken for your use case https://github.com/robrighter/node-xml/blob/master/lib/node-xml.js#L798-804
00:53 < uptownhr> tjfontaine: thought that was the whole point of it
00:53 < mscdex> draginx: mysql/mariadb sends rows as strings
00:53 <@tjfontaine> uptownhr: it is the point, but the library doesn't actually implement it like that
00:53 < uptownhr> bleh
00:53 < mscdex> draginx: it's up to the driver or somewhere else down the line to interpret that string based on column metadata
00:53 < draginx> right
00:53 <@tjfontaine> uptownhr: if you really have no choice but a 40gb xml file you probably want something more well tested, i.e. something using libxml
00:54 < uptownhr> thanks
00:54 < uptownhr> i will try that
00:54 <@tjfontaine> uptownhr: in other news, I'm so sorry you have to deal with xml, let alone a 40gb file
00:54 < uptownhr> thought i get lukcy
00:54 < mscdex> draginx: the reason i decided not to include column data parsing is for two reasons: performance and the fact that people will want to typecast their data in different ways anyway
00:54 < uptownhr> haha, i know, worst project ever
00:54 < draginx> mscdex: true, valid point :)
00:54 < mscdex> draginx: plus it also means you don't have to worry about 64-bit integers and the like
00:55 < uptownhr> jdab: what's your problem again?
00:55 < jdab> I installed node from ubuntu repositories, then ran into trouble with something, so i switched to Chris Lea's repository
00:55 < jdab> and node is installed
00:55 < jdab> but node-dev gives an error
00:56 < jdab> node.js:762
00:56 < jdab>           throw errnoException(process._errno, 'uv_signal_start');
00:56 < uptownhr> that doesn't seem like a problme
00:56 < mscdex> draginx: and lastly it's how PHP does it, so having that kind of familiarity for developers switching over to node helps some too
00:56 < jdab> uptownhr: ...
00:56 < uptownhr> you should post the error on a site like pastbin
00:56 < draginx> sounds more like a reason to not do it that way :P jk
00:56 < mscdex> heh
00:59  * mscdex shakes a fist at malformed github links on npmjs.org
01:00 < jergason> oh man, i know
01:00 < jergason> I wonder what the justification is for those?
01:00 < mscdex> i dunno, it only happens for certain users
01:09 < arnorhs> mscdex: what's wrong with them?
01:10 < mscdex> arnorhs: the href is erroneously prefixed with "https://github.com". Example: https://npmjs.org/~superjoe
01:11 < mscdex> the page is being rendered that way, it's not added by the browser
01:12 < mscdex> but other github links for other users will render just fine
01:12 < mscdex> relevant GH issue: https://github.com/isaacs/npm-www/issues/225
01:20 <@isaacbw> does anyone remember that blog site that you can only post to by emailing?
01:20 < draginx> mscdex: is there a way to get the last inserted row's attributes/values?
01:20 <@isaacbw> and you set up an account by emailing?
01:20 < _6a68> isaacbw: posterous?
01:21 < chilts> isaacbw: posterous ... but didn't it cease today or yesterday?
01:21 < _6a68> isaacbw: which is shutting down
01:21 < _6a68> o hai, chilts :-)
01:21 < chilts> _6a68: ohai! :)
01:21 < chilts> I meant to respond to your email earlier to say thanks ... but got busy in currentWork
01:21 <@isaacbw> _6a68, chilts: thanks and damn :(
01:21 < chilts> so ... thanks :)
01:22 < _6a68> haha, no worries. the public list has been crazy busy this week, and I'm prepping for work week—super super busy :-)
01:22 < _6a68> yvw :-)
01:22 < arnorhs> all the devs from posterous started "posthaven" fwiw
01:22 < chilts> _6a68: cool ... work week next week is it?
01:22 < arnorhs> it has most of the same features afaik
01:23 < arnorhs> https://posthaven.com/
01:23  * chilts contributed to Ghost on Kickstarter earlier this week
01:23 < _6a68> isaacbw: there's some new blog service where you uplaod markdown to dropbox, can't remember the name.
01:23 < _6a68> chilts: yeah, vancouver next week.
01:24 < _6a68> isaacbw: ah, scriptogram I think
01:24 <@isaacbw> hmm, posthaven isn't accepting invites
01:25 <@isaacbw> oh well
01:25 < jdab> http://stackoverflow.com/questions/16311347/why-is-node-dev-not-working
01:26 <@mbalho> installing from source is pretty easy
01:26 <@mbalho> #protip
01:27 < ChrisPartridge> ^ +1
01:29 < arnorhs> isaacbw: i think they let everybody who was a posterous user have an account or something like that
01:29 < arnorhs> maybe i can invite you
01:29 < arnorhs> though, honestly i have no idea if it's any good.. it could suck
01:30 < mbroadst> is there a reason that the nodejs native modules weren't implemented as v8::Extension's? (interested if there was a compelling reason, so maybe I should avoid it in my project..)
01:42 < mbroadst> or could someone point me towards someone who might know?
01:44 <@mbalho> #libuv is a good channel to ask
01:45 <@mbalho> this channel is mostly people arguing about semicolons and whitespace, that channel is where the interesting technical discussions happen
01:45 < beg> Hey guys
01:45 < ljharb> haha
01:46 < beg> jokes on you!
01:47 < mbroadst> mbalho: oh interesting, I figured libuv, although used by node, was meant to sort of stand apart
01:56 < maybach> What's up everyone
02:05 < beg> hmm, is it worth trying to use nodejs as a html/js game server? 
02:09 <@mbalho> yes
02:15 < beg> mbalho even if it's only used to compute json objects, and minimal i/o ?
02:16 < jdab> http://stackoverflow.com/questions/16311347/why-is-node-dev-not-working
02:16 < jdab> can anyone help me with that issue thanks
02:17 < beg> uninstall ubuntu, get arch <3
02:17 < jdab> ha!
02:17 < beg> ha!
02:18 < beg> even tough i took a course in linux, i didn't understand linux until i started using arch
02:19 < jdab> yeah i heard good things about it
02:21 < mscdex> draginx: i'm not sure what you mean. an object is passed to the 'end' event for a result that contains the lastInsertId and affectedRows
02:21 < beg>  but jdab i am sorry i am not able to help you :/
02:21 < draginx> mscdex: oh, I did not see that in the readme @_@ ok sorry its been a long day
02:22 < jdab> thanks beg
02:22 < jdab> i just compiled from source and its ok
02:22 < jdab> not as convenient as repositories though
02:36 < ChrisPartridge> mscdex: found the bug with npmjs.org btw
02:46 < ChrisPartridge> mscdex: but appears to be more of a misconfiguration for a user, e.g. they should be entering their github username, not the entire URL
02:47 < ljharb> i made a pull request to fix that for twitter
02:47 < ljharb> but i couldn't find the code to do it for github
02:48 < ChrisPartridge> appears to be in the same spot, from what i just looked at - or perhaps it sanitizes on input which would probably be the smarter thing in the end
02:48 < ljharb> https://github.com/isaacs/npm-www/pull/296
02:48 < ljharb> maybe i'm looking at the wrong repo
02:49 < ljharb> if you can point me to the github line i'll do that too
02:49 < ChrisPartridge> could just add if(d.github) d.github.replace()
02:49 < mscdex> ChrisPartridge: glad you found it
02:53 < ChrisPartridge> ljharb: yep, if you just do the same for github, in the same location - all will be well
02:53 < ljharb> right - there's no github in that file.
02:53 < ljharb> oh, i see what you mean
02:53 < ChrisPartridge> :P
02:57 < ljharb> there, https://github.com/isaacs/npm-www/pull/304 also
02:58 < ChrisPartridge> ljharb: you da man
03:31 < ayuforever> Hello
03:32 < ChrisPartridge> hi
03:33 < ayuforever> Can anyone help me out?
03:33 < ayuforever> I'm having some issues with npm.
03:36 <@mbalho> ask and ye may receive
03:36 < niggler> dafuq beg
03:36 < niggler> "even tough i took a course in linux, i didn't understand linux until i started using arch" lol
03:37  * chilts needs chocolate
03:37 < niggler> ayuforever the 'm' in npm stands for mbalho 
03:37 < niggler> chilts mint chocolate chip ice cream
03:39 < ayuforever> lol
03:39 < ayuforever> Here's a pastebin of the error I'm getting:  http://pastebin.com/XkgVAyFt
03:40 < ayuforever> The gist of it is that when I run npm pack on my module, it dies with what looks like file permission problems.
03:40 < niggler> ayuforever who owns that path
03:41 < niggler> wonder if that's a home-brew issue
03:41 < ayuforever> I own that path.
03:42 < niggler> ayuforever remove it from brew and install it directly from the dmg
03:42 < ayuforever> I'll try that.
03:42 < niggler> http://nodejs.org/dist/v0.10.5/node-v0.10.5.pkg
03:42 < niggler> try that sequence and see if you get the same problem
03:42 < niggler> if not, then I suspect its a brew issue
03:47 < ayuforever> Nope, that didn't do it.
03:47 < niggler> same problem?
03:47 < ayuforever> Yup.
03:47 < ayuforever> The same problem.
03:49 < niggler> hmm are you an admin on the computer?
03:49 < ayuforever> Yes
03:50 < niggler> (obv can't reproduce) did you try running as root (sudo npm pack .)?
03:51 < ayuforever> That gives me this problem:
03:51 < ayuforever> pm WARN cannot run in wd cb-brunch-config@1.0.0 rm -rf lib && coffee --bare --output lib/ src/ (wd=.)
03:51 < niggler> what module are you trying to pack?
03:52 < ayuforever> cb-brunch-config
03:53 < niggler> um you have a repo link?
03:53 < sinclair-work> geez,
03:53 < sinclair-work> i don't know about you lot, but nodejs is a utter disaster to code in
03:53 < ayuforever> No, I don't have a public repo.
03:53 < niggler> your mother is an utter disaster to code in
03:53 < ayuforever> lol
03:53 < niggler> ayuforever can you put up the package.json?
03:54 < niggler> actually before that
03:54 < sinclair-work> niggler: callbacks and closures, and trying to keep a context alive
03:54 < niggler> ayuforever try it with https://github.com/Niggler/js-xlsx.git
03:54 < sinclair-work> passing crap around like crazy, it just winds up mental
03:54 < niggler> so clone that, go into the directory, and npm pack .
03:55 < ayuforever> Same problem.
03:57 < niggler> ayuforever was an npm-debug.log created?  if so can you paste bin it?
03:59 < ayuforever> http://pastebin.com/nxqaY66z
04:03 < niggler> and when you run it as root?
04:04 < ayuforever> Seems to work.
04:05 < niggler> so using your module doesn't work as yourself or as root
04:05 < niggler> but using js-xlsx works as root
04:05 < ayuforever> Yes.
04:05 < niggler> can you run pack from your repo dir and paste bin the debug
04:11 < ayuforever> http://pastebin.com/fjmLgjR9
04:13 < sinclair-work> niggler: seriously tho, coding in node is like banging your head against a wall repeatedly 
04:13 < niggler> ayuforever where's the error?
04:13 < ayuforever> npm WARN cannot run in wd cb-brunch-config@1.0.0 rm -rf lib && coffee --bare --output lib/ src/ (wd=.)
04:17 < niggler> dumb thought: can you just suppress the prepublish part?
04:17 < ayuforever> Kinda need it since my source is in coffeescript.
04:18 < niggler> manually do it once
04:18 < niggler> make the JS
04:18 < niggler> suppress the pre-publish
04:18 < niggler> and see if the tar ball is generate
04:18 < ayuforever> And it generates the tarball.
04:19 < niggler> ok so something is going on with the post commit hook
04:20 < niggler> is it possible to pastebin your package.json
04:21 < ayuforever> http://pastebin.com/yaVt1jxC
04:24 < niggler> hmm you have a .npmignore or .gitignore? 
04:24 < ayuforever> Yes.
04:24 < niggler> yes meaning which one
04:24 < ayuforever> Both.
04:25 < niggler> can you clobber the gitignore and try it
04:26 < ayuforever> Still getting: npm WARN cannot run in wd cb-brunch-config@1.0.0 rm -rf lib && coffee --bare --output lib/ src/ (wd=.)
04:26 < niggler> is coffee installed globally?
04:26 < ayuforever> Nope.
04:27 < niggler> then how would it run?
04:27 < ChrisPartridge> magic
04:27 < niggler> sudo npm install -g coffee-script
04:27 < ayuforever> It's a dev dependency
04:27 < niggler> ayuforever then you should do ./node_modules/.bin/coffee
04:27 < niggler> or something like that
04:27 <@mbalho> niggler: you are wrong
04:27 <@mbalho> npm resolves that
04:28 < niggler> npm resolves that in the republish?
04:28 < niggler> *prepublish
04:28 <@mbalho> it works in start and test, i dunno why it wouldnt work in prepublish
04:29 < ayuforever> Even with coffee globally installed, it still chokes at that one part.
04:29 < niggler> it may be due to a confluence of factors (devDependencies, pre-publish)
04:30 < niggler> ayuforever did you try clobbering gitignore?
04:30 < ayuforever> Yes, that didn't do it.
04:31 < niggler> hmm i tried your exact package.json with no source files and npm pack didn't give me any issues (well, it warned about no README.md, but not the warning you are seeing)
04:32 < ayuforever> Okay, well, thanks for helping out.  I'm gonna take a break from this and try again later.
04:33 < niggler> hmm i can't seem to reproduce the issue with the information given
04:56 < RobW_> What would be the recommended way to grab some info from the command line? Specifically git config author.name.
04:56 < RobW_> It's in the context of a build script, not a server app, if that matters.
05:02 < uptownhr_> anyone know why i canot chat in #mysql?
05:04 < niggler> are you registered uptownhr_ ?
05:06 < ChrisPartridge> RobW_: there might be a package in npm that does that
05:06 < uptownhr_> yup that was the problem
05:07 < RobW_> ChrisPartridge: child_process exec is working for me.
05:07 < RobW_> just took a little googling.
05:08 < ChrisPartridge> RobW_: cool
05:20 < JamesMGreene> There! Finally 1.0.0: https://npmjs.org/package/dos2unix
05:21 < JamesMGreene> stupid thing took up way too much time
05:22 < Omid> why nvm gives this error: /usr/bin/which: no shasum in ...
05:22 < Omid> ?
05:26 < mscdex> JamesMGreene: how are you ensuring that the files you're transforming are actually text files and not binary or something?
05:26 < JamesMGreene> The same way that the real dos2unix utility does
05:26 < JamesMGreene> byte checking
05:27 < JamesMGreene> (i.e. you must read every byte of the file)
05:27 < JamesMGreene> welll
05:27 < JamesMGreene> you must read every byte of the file to ensure it is NOT binary
05:27 < mscdex> yikes
05:27 < JamesMGreene> yeah, it's nasty
05:27 < JamesMGreene> I way underestimated that utility
05:33 < mscdex> ha, i just noticed libmagic has a node.js magic file
05:39 < Omid> NVM in nodejs returns “no shasum” error
05:39 < Omid> anyone can help?!
05:42 < ChrisPartridge> Omid: that's the full error?
05:47 < Omid> ChrisPartridge: nop
05:47 < Omid> ChrisPartridge: I put the full error here: http://stackoverflow.com/questions/16313270/nvm-in-nodejs-returns-no-shasum-error
05:51 < ChrisPartridge> Omid: OS?
05:53 < Omid> ChrisPartridge: centos
05:57 < ChrisPartridge> Omid: do you have a shasum command?
05:57 < ChrisPartridge> command/bin
05:58 < Omid> ChrisPartridge: nope, I have sha1sum
05:58 < Omid> ChrisPartridge: sorry, the OS is fedora 4 and not centos
06:01 < ChrisPartridge> Omid: perhaps try alias sha1sum to shasum
06:02 < ChrisPartridge> swear i seen an issue for this somewhere, at some point
06:06 < mashlol> nvm checks for sha1sum if there is no shasum afaik
06:06 < Omid> ChrisPartridge: again -bash: shasum: command not found
06:07 < Omid> mashlol: it seems that the problem is caused by paths, is it true?
06:09 < mashlol> make sure shasum or sha1sum are in your $PATH
06:10 < ChrisPartridge> mashlol, you are right - if [ -z "`which shasum`" ]; then shasum='sha1sum' fi
06:17 < Omid> mashlol: it isn't, how can I add it?
06:25 < FortuneDays> What directory does NPM install to by default?
06:28 < Omid> FortuneDays: with -g option it installs in yoru global node installation directory
06:28 < FortuneDays> Thanks :>
06:28 < Omid> FortuneDays: without -g option, it installs in the current directory/node_modules/modulename
06:28 < FortuneDays> Wait, is -g default?
06:29 < Omid> FortuneDays: no, and for -g option you must have super user power
06:30 < ChrisPartridge> Omid: export PATH=$PATH:/some/new/path
06:31 < FortuneDays> And when I'm working with installed node modules, is it 'better practice' to leave them in the node_modules folder and then call that from whatever code I'm working on?
06:31 < FortuneDays> Or does node recognize the modules and handle it for me?
06:31 < geNAZt> npm != node
06:31 < geNAZt> and npm global installed modules cant get required in node
06:32 < ChrisPartridge> FortuneDays: have a read of http://nodejs.org/api/modules.html
06:33 < FortuneDays> ChrisPartridge, awesome, that says exactly what I needed to know
06:33 < FortuneDays> Now we'll see how long until I've broken something and need more help :P
06:33 < FortuneDays> Thanks, guys :D
06:33 < Omid> ChrisPartridge: /usr/bin/sha1sum is available and /usr/bin is still in my $PATH
06:33 < Omid> ?!
06:35 < ChrisPartridge> Omid: what happens when you run `which shasum` in a terminal?
06:35 < geNAZt> have you enough rights to execute it
06:35 < geNAZt> if not it wouldnt appear
06:36 < Omid> ChrisPartridge: as I said, I have sha1sum and it is located in /usr/bin/sha1sum
06:36 < Omid> ChrisPartridge: there is no shasum, except the alias that I created
06:37 < ChrisPartridge> Omid: how did you create the alias?
06:38 < ChrisPartridge> strange though, the nvm source says it should default to sha1sum if shasum isn't found
06:38 < Omid> added it into my .bashrc, and pressed alias shasum='sha1sum'
06:38 < Omid> ChrisPartridge: I'm not sure if installing shasum helps
06:40 < Omid> ChrisPartridge: the permission is ok
06:41 < ChrisPartridge> Omid: just create a symlink then
06:42 < Omid> ChrisPartridge: tested, doesn't help
06:45 < geNAZt> Omid what happens if you: /usr/bin/sha1sum /usr/bin/sha1sum
06:45 < geNAZt> ?
06:46 < Omid> geNAZt: it's a big string which indicates the sha1sum of sha1sum I think
06:46 < Omid> geNAZt: shall I paste it?!
06:47 < g0z> why does node.js keep asking for my creditcard number?
06:48 < ChrisPartridge> g0z: it's not
06:48 < g0z> oh maybe it's npm
06:50 < standoo> g0z: you sure nodejs ask your creditcard number?
06:50 < Omid> ChrisPartridge: the symlink change the error, I didn't noticed at first
06:50 < Omid> ChrisPartridge: now the error is: Checksums do not match.
06:52 < ChrisPartridge> Omid: that's good, i guess
06:53 < Omid> ChrisPartridge: really? still I don't have the new nodejs :D
06:53 < ChrisPartridge> Omid: i'd suggest upgrading fedora, what version were you on? 4?
06:56 < Omid> ChrisPartridge: yes it's 4
06:56 < ChrisPartridge> that was released 2005-05-30
06:57 < Omid> ChrisPartridge: I'm not in that position to change the OS of that computer! If I were I would have done that ;)
06:57 < geNAZt> do you have admin rights ?
06:58 < ChrisPartridge> Omid: throw it out the window, and then see what they think about changing OS ;)
06:58 < MoniqueL> goog morning
07:00 < Omid> ChrisPartridge: in fact, then I would end up with another fedora 4 installed computer ( and the cut from my salary for the damage )
07:01 < booyaa> g0z: url?
07:01 < ChrisPartridge> Omid: throw the person who keeps installing fedora 4 out the windo... maybe not
07:04 < Omid> it's like throwing kim song yung fung pung ping ping 64 bytes from kim song... out of the window
07:04 < Omid> ChrisPartridge: there's no way to change it!
07:04 < jesusabdullah> fedora 4?
07:05 < jesusabdullah> wat
07:05 < booyaa> heh yeah even my ancient vps isn't that old
07:05 < booyaa> got fc10
07:05 < jesusabdullah> that has to be like, what
07:05 < jesusabdullah> 5, 10 years old?
07:05 < jesusabdullah> dude booyaa they're up to like fedora 15 by now
07:05 < geNAZt> its 8 years old
07:05 < geNAZt> an currently its 18 i think
07:06 < jesusabdullah> yeah, they move pretty fast nowadays
07:06 < booyaa> yeah i was ditching that vps and jumped ships to ubuntu lts
07:08 < Omid> ChrisPartridge: jesusabdullah booyaa geNAZt but it's very light weight and perfect for embedded systems
07:09 < Omid> ChrisPartridge: jesusabdullah booyaa geNAZt we are not talking about desktop use in here!
07:10 < Omid> ChrisPartridge: jesusabdullah booyaa geNAZt if you have doubt, ask richard stallman about his linux version :D
07:10 < geNAZt> linux image v0.2.3b1 ?
07:10 < geNAZt> oO
07:13 < booyaa> node?
07:16 < jesusabdullah> Omid: Servers have a need for recent software too you know
07:26 < MoniqueL> I'm sorry had some troublw with my connection
07:26 < MoniqueL> but my question was is the tutorial on tutsplus a goog one..
07:27 < MoniqueL> a good one (I ment)
07:28 < MoniqueL> ideas for a good tutorial voor node.js
07:30 < booyaa> MoniqueL: google nodetuts
07:30 < booyaa> pedro's done some nice screencasts
07:31 < arnorhs> MoniqueL: if it's helpful for you, why wouldn't it be good?
07:32 < MoniqueL> ok I'm going to look. now I have code examples and they dont work!!
07:32 < booyaa> ljharb: re: modules and breaking out functions into their own mod. just started retrofitting code with tests. totally see why i want to start separating my funcs into sep modules now. will have to do likewise with test!
07:32 < booyaa> i wonder if they doing stuff with pre v0.4?
07:33 < MoniqueL> I'm going to look arnorhs
07:34 < arnorhs> MoniqueL: ok, sounds good
07:34 < booyaa> gah man this retrofitting is gonna be a pain in the arse
07:49 < Qalqi> nvm vs n vs nave vs nodeenv ?
07:51 < Qalqi> nodeenv is pretty cool 
07:52 < Qalqi> someone?
07:52 < ChrisPartridge> Qalqi: i've always used nvm, seems to work well for me
08:31 < Ritzton> hello
08:32 < Ritzton> I am calling php scripts with runner = require('child_process') but I don't know how to parse the string for arguments ?
08:32 < geNAZt> hi
08:33 < geNAZt> which string for what arguments ?
08:33 < Ritzton> it could be something the user is writing in a form
08:33 < Ritzton> it could be anything, so I have to parse it to avoid injection
08:34 < geNAZt> but why php ?
08:35 < geNAZt> there are some validator modules for nodejs
08:35 < Ritzton> because I am porting a game to node js which has already been made with php
08:36 < geNAZt> so you want to add a layer over the php game
08:36 < geNAZt> to add some nodejs ?
08:36 < Ritzton> yes mainly for the communication part
08:36 < Ritzton> but the data layer will still be in PHP and the logic of the game
08:37 < geNAZt> well then i dont understand why you want to use node oO
08:37 < geNAZt> if everything is written in php why not extend php ?
08:37 < Ritzton> because in final I would like the data layer in node
08:37 < Ritzton> but not in a first step, it is too much work
08:38 < geNAZt> so you call the php script directly
08:38 < Ritzton> and it works pretty well calling php scripts and getting the stdout parsing with json...
08:39 < Ritzton> but my problem is when I execute : php script.php arg1 arg2 .... how to parse arg1 ?
08:39 < geNAZt> well you have to pass the CGI Standard
08:39 < geNAZt> because php base on it - the -cgi of it which you call or ?
08:40 < Ritzton> "php script.php arg1 arg2 ...."  ? how to parse ? this is my problem, I dont understand your answer sorry
08:40 < geNAZt> well you call the cli
08:41 < Ritzton> I am using runner.exec('php ./php/script.php '+params .....
08:41 < geNAZt> first it is wrong
08:41 < Ritzton> what is wrong ?
08:42 < geNAZt> runner.exec('php', ['./php/script.php', params[1], params[2]]);
08:42 < geNAZt> arguments must be given as the second argument in array form
08:42 < Ritzton> and it avoid injection ?
08:42 < geNAZt> and also its better to call spawn
08:43 < Ritzton> why spawn is better ?
08:43 < geNAZt> spawn streams it stdout
08:44 < geNAZt> exec summs the stdout and gives it to you
08:44 < geNAZt> which can be a memory problem
08:44 < arnorhs> this thing https://github.com/aconbere/node-file-utils / https://npmjs.org/package/file <-- 
08:44 < arnorhs> wtf
08:45 < Ritzton> hummm
08:45 < arnorhs> i found a bug and thought i'd fork to see if can just fix it and do a pull request
08:45 < Ritzton> I have to study that, thank you jeNAZt
08:46 < arnorhs> i have no idea how to run the tests.. so i figured, node test/file_spec.js ..
08:46 < arnorhs> turns out it's requiring a file: var minitest = require("../vendor/minitest.js/minitest");
08:46 < arnorhs> but there's no vendor folder to be seen
08:46 < arnorhs> what am I missing?
08:47 < arnorhs> or is that lib totally messed up?
08:55 < Marsup> arnorhs: it's clearly missing files in the repo
09:00 < arnorhs> that's a really borked a) library b) its test suite.. minitest is also really disturbing
09:01 < arnorhs> Marsup: yeah, it seems it's even using either a custom version of this minitest thing or maybe a really old version
09:01 < arnorhs> and minitest already hasn't been updated for 2 years
09:01 < arnorhs> 2 years.. did node even exist back then?
09:01 < Marsup> this lib is not any fresher than minitest anyway ;)
09:02 < arnorhs> yeah, it's disturbing how many projects rely on it and how often it gets downloaded
09:02 < Marsup> I'm sure you'll find equivalent modules on npm, what are you looking for ?
09:02 < arnorhs> i'm not really looking for a module.. i'm contributing to a project that uses that lib
09:02 < arnorhs> i think it could just as well be using the built in fs stuff
09:02 < Marsup> might be a good idea to replace unmaintained modules
09:03 < arnorhs> +1 on that
09:03 < arnorhs> yeah, i think i'll do that.. this thing is f-ed
09:03 < arnorhs> too bad they'll own the module name 'file' forever
09:03 < arnorhs> (on npm that is)
09:04 < arnorhs> maybe isaacs should accidentally press the delete button on that one
09:04 < arnorhs> though they probably haven't changed their password.. maybe somebody should brute force it and take ownership
09:04 < geNAZt> well it should give a automatism which sends the module maintinaer a email
09:05 < geNAZt> "You havent updated your module the past 3 months. Is it still active ?"
09:05 < Marsup> file is not even a good name since it works on folders and paths :)
09:05 < arnorhs> exactly
09:06 < arnorhs> that's only the first part of this thing really
09:09 < arnorhs> or i coudl go on a personal vendetta and make a new lib, make better tests, make it suck less and do a pull request on the 31 dependents of the library
09:10 < geNAZt> arnorhs: but who closes the pull request ?
09:10 < geNAZt> :D
09:10 < arnorhs> whoever maintains each of those 31 libs
09:11 < arnorhs> i'm sure i'd get at least a few accepts
09:11 < geNAZt> yes but when there is no maintainer active, you never get your pull request closed
09:12 < arnorhs> i'm talking about the 31 dependents
09:13 < geNAZt> ah okay you want to pull request on them
09:13 < geNAZt> i thought you would make a pull in the old file module
09:13 < arnorhs> 1) make new lib 2) publish it as "better-than-that-fugly-file-lib" 3) clone the 31 dependents 4) replace the lib in all of them 5) do a pull request on all of them
09:14 < arnorhs> it just gives you a false sense of that library being really good when there are 31 projs that depend on it
09:14 < geNAZt> :D
09:14 < arnorhs> :)
09:14 < Marsup> or you could code a bot to make pull requests for you and get banned from github like it happened before :)
09:14 < arnorhs> i'm never going to do it though.. it's just momentary coder-rage
09:17 < geNAZt> the old lib fu :D
09:18 < arnorhs> i opened 3 issues.. maybe the guy's not dead
09:19 < arnorhs> looks like he's doing a lot of scala according to https://github.com/aconbere?tab=activity
09:19 < Marsup> ouch, he lost it :p
09:22 < ningu> something wrong with scala?
09:32 < Marsup> it seems to make people write stuff only them will understand, at least at the time, I've seen scala devs not understand themselves a few weeks after
10:05 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
10:17 < r1chard> Can I, in the middle of a function call some Node.JS API and pass control back the loop for a while
10:18 < ningu> r1chard: eh? not really sure what you mean
10:18 < ningu> what loop? the main event loop?
10:19 < r1chard> ningu, yes
10:20 < ningu> maybe you want setImmediate
10:20 < geNAZt> r1chard: https://github.com/laverdet/node-fibers
10:20 < r1chard> ninegrid, geNAZt, checking, thanks
10:20 < ningu> setImmediate is useful if you are doing something cpu-intensive
10:21 < ningu> and you want to break it up into small pieces
10:21 < ExxKA> Hey guys. Yesterday I was in here asking about how best to extract the date from an _id field for using aggregation/mapReduce. I wrote a short article about it, and also about how to create _ids with a custom time and date. Enjoy! http://bit.ly/14TJsyz
10:21 < r1chard> ningu, doesn't this, in a way, allow us to convert any blocking code to non-blocking
10:21 < ningu> r1chard: pretty much, yes
10:22 < ningu> I guess it depends on why/how it's blocking
10:22 < r1chard> ninegrid, how's Node.JS handling deep stack ;)
10:22 < r1chard> Really deep ;)
10:22 < Marsup> setImmediate is now advised over nextTick ?
10:22 < ningu> Marsup: yes, for 0.10
10:22 < geNAZt> well even immediate does block
10:23 < ningu> geNAZt: how so? I don't fully understand this, so...
10:24 < geNAZt> you have cpu intensive tasks and node is a single loop process
10:24 < ningu> r1chard: I know that you don't want to recurse too deeply on a single process tick. but beyond that, I don're ally know the answer.
10:24 < ningu> yeah, I guess ultimately you'd want to spawn a separate process
10:24 < geNAZt> well you can pause functions and give control back to the main loop
10:25 < r1chard> geNAZt, this is interesting.
10:25 < r1chard> geNAZt, how does it work?
10:25 < geNAZt> thats what fibers do
10:25 < r1chard> geNAZt, so fibers make use of a deep stack
10:26 < r1chard> geNAZt, is there some guard/protection against things going too deep?
10:26 < geNAZt> what is "too deep" ?
10:26 < geNAZt> :D
10:26 < r1chard> geNAZt, beats me.
10:26 < r1chard> Does v8 have some limit except memory
10:26 < ningu> r1chard: there might be a guide to this online somewhere. if not, you should write one :) but I know that you can configure v8's stack size. there's a command line option.
10:27 < geNAZt> yes a max callstack
10:27 < ningu> r1chard: node --v8-options
10:27 < ningu> oh, nevermind
10:27 < ningu> it's node --max-stack-size=val
10:27 < r1chard> geNAZt, have you run into this issue using fibers?
10:27 < r1chard> ningu thanks :)
10:27 < geNAZt> well i dont run into this case
10:28 < geNAZt> since you need a very high callstack which can only be reached if you have a bug in your code
10:28 < geNAZt> normally you dont reach it
10:28 < Marsup> ExxKA: mongoose only forwards mongodb-native driver's ObjectId, also wondering why is createFromTime not enough for the injection part ?
10:28 < ningu> geNAZt: that is true for normal use cases but for some cases you may not be able to avoid it
10:28 < geNAZt> also for information fibers keeps using threads to handle the processing
10:28 < ExxKA> Marsup, because when you only have "second" precision you will end up creating multiple ID's which are the same, and that doesn't fly :) 
10:29 < ExxKA> Marsup, What do you mean it only forwards the ObjectID? Did I write something misleading? (I can still correct it)
10:29 < Marsup> ObjectId ensures they won't be the same, I've checked the algorithm a few months ago
10:29 < Marsup> mongoose.Types.ObjectId === require('mongodb').ObjectID
10:30 < yalambersubba> Hello nodejs :)
10:30 < Marsup> some people won't want the whole ORM just for the ObjectID implementation :)
10:30 < r1chard> If we have fibers/nextTick/setImmediate why don't all APIs use this style and produce patterns that *look like* blocking code without it being blocking?
10:30 < r1chard> Won't this significantly improve readability
10:31 < geNAZt> well nextTick and setImmediate doesnt make "blocking" code async
10:31 < geNAZt> you can only control where in the loop they get processed
10:31 < r1chard> geNAZt, no but let's say we have an async API
10:32 < geNAZt> yes
10:32 < r1chard> geNAZt, you can certainly make a facade that looks blocking.
10:32 < r1chard> But uses nextTick inside
10:32 < r1chard> Right?
10:32 < remysharp> Is there an alternative to node-inspector (since it was last changed 11 months ago, and doesn't always work nowadays)?
10:32 < geNAZt> no
10:32 < r1chard> geNAZt, why?
10:32 < geNAZt> because this function would break its scope
10:32 < geNAZt> and you cant return out of it
10:33 < ExxKA> Marsup, thanks for the feedback, I will change the reference. I am pretty sure the ObjectId class does not ensure that they are unique, as I had several problems with this yesterday when I made the implementation
10:34 < ExxKA> It may be because the saving procedure is asynchronous so I can create ID's quicker than the driver can make sure they are unique?
10:34 < Marsup> ExxKA: pretty sure it does
10:34 < geNAZt> r1chard: little example - http://hastebin.com/vecisuforu.js / It calls test blocking create a nextTick, leaves the function and never returns 2
10:34 < r1chard> geNAZt, here's what I mean:  /* pseudo blocking */   var results = sql.query('SELECT ...');       ...... function query() { var future = async.query(); asyncTasksGlobal.push(promise); while (!future.done()) nextTick()) return future.results; } 
10:35 < r1chard> geNAZt, of course I immediately spot we'll be having lpenty of mini even loopt
10:35 < geNAZt> well in blocking functions you can skip loop
10:35 < geNAZt> like so
10:35 < r1chard> Not sure if it's a good thing
10:35 < geNAZt> cant*
10:35 < ExxKA> Marsup, I have changed the article now :) 
10:35 < r1chard> geNAZt, it's not blocking, it's pseudo blocking.
10:36 < r1chard> geNAZt, async code mascarading as blocking code
10:36 < geNAZt> yes but you cant skip main loop iterations
10:36 < r1chard> geNAZt, nextTick does that no
10:36 < geNAZt> and for cascading async code into blocking one you can use fibers or promises
10:36 < geNAZt> nextTick doesnt skip event loop iterations
10:36 < Marsup> ExxKA: I've explained the internals of ObjectID computation on square/cube#87 for another matter, unless they dramatically changed since, I don't see it happening
10:36 < r1chard> I don't want to skip it.
10:36 < geNAZt> it takes your function and executes it to another time
10:36 < r1chard> Exactly the opposite
10:37 < r1chard> I want to return control to the loop
10:37 < geNAZt> you want to hold the loop ?
10:37 < ExxKA> Marsup, quare/cube#87?
10:37 < r1chard> which loop do I want to hold?
10:37 < ExxKA> square*
10:37 < geNAZt> the event loop
10:37 < geNAZt> why do you use a while in there ?
10:37 < Marsup> on github
10:37 < r1chard> No I don't.
10:37 < r1chard> geNAZt, because my results might not be ready
10:37 < ExxKA> Thanks
10:38 < foobar321> Hi. Is there any1 using some i18n module for ejs that recognizes properly accept-language ?
10:38 < geNAZt> so you want the function to wait till everything is there and return the results ?
10:38 < Marsup> ExxKA: if you're not used to github I'll provide link in pm
10:38 < r1chard> geNAZt, not wait, but keep returning control to main loop until everything is there
10:38 < geNAZt> yes use fibers
10:38 < r1chard> geNAZt, wait, but microfiber like
10:38 < geNAZt> its "wait"
10:38 < r1chard> geNAZt, well what do microfibers do internally, same thing no?
10:38 < ExxKA> Marsup, I found it :) I just didn't realize you were refering to github
10:38 < geNAZt> the function holds on, the event loop iterates
10:39 < r1chard> geNAZt, I mean how does it work low level
10:39 < geNAZt> they spawn a thread and switch the scope over to the thread and run it
10:39 < ExxKA> Marsup, well I have found your project but not the explaination?
10:39 < r1chard> geNAZt, they spawn a thread? Oh :P
10:39 < geNAZt> yes 
10:39 < Marsup> issue 87, 3rd post
10:39 < geNAZt> and they keep a pool of it
10:39 < r1chard> geNAZt, that's not fibers, is it. It's full blown threads :/
10:40 < geNAZt> well you have no other control of the event loop
10:40 < Marsup> out of curiosity, why is everyone against the web workers api for this kind of things ? I like the "share-nothing" philosophy, avoids thread-safe issues
10:40 < geNAZt> you cant say "here node execute the function pause it and return into event loop iteration"
10:41 < ExxKA> Marsup, can I PM you about this?
10:41 < Marsup> sure
10:41 < r1chard> geNAZt, well I could say :P but it'll produce a deep stack
10:42 < geNAZt> yes and you cant pseudo block the function
10:42 < geNAZt> since you loose the return scope of this function
10:42 < Marsup> geNAZt: any opinion on my previous statement ?
10:43 < geNAZt> well i like web workers and how they work
10:43 < geNAZt> r1chard: http://bjouhier.wordpress.com/2012/03/11/fibers-and-threads-in-node-js-what-for/
10:43 < geNAZt> second code block example looks like you want it
10:43 < Marsup> so why advise on fibers ?
10:44 < geNAZt> because node doesnt have web workers
10:44 < Marsup> there's a module for that I believe
10:44 < r1chard> geNAZt, I can probably do it with a code transform.
10:44 < r1chard> geNAZt, but that'll be more involved.
10:45 < r1chard> Example:
10:45 < geNAZt> Marsup: there is TAGG - synced up threads for heavy cpu calculations, Fibers for pseudo blocking functions, Promises which are shit :D
10:46 < r1chard> From:    async.query(function (results) { ... });    to --->      results = sync.query(); ...
10:46 < geNAZt> w8 let me get a demo ready
10:46 < r1chard> geNAZt, I don't want to involve a pool of threads for this.
10:46 < r1chard> I want to solve it in one thread.
10:46 < r1chard> Then use threads for better things.
10:48 < r1chard> I think there HAS to be a continuation-style source code transform.
10:48 < r1chard> That can do this.
10:48 < Stephen> continuation-style code transform...
10:49 < Stephen> You want an anonymous function which can be modified in transit?
10:49 < r1chard> var results; results = query();  print(results);   ----->     var results; part1();  function part1() { query(part2); }  function part2() { print(results); }
10:49 < r1chard> Stephen, I want pseudo blocking (but non blocking) code.
10:50 < r1chard> Stephen, say I write first thing above, I get second.
10:50 < r1chard> Wait let me correct that a bit.
10:51 < Stephen> You want the first version to overwrite itself as the second, yes?
10:51 < r1chard> var results; results = query();  print(results);   ----->   var results; function part1() { query(part2); }  function part2(in) { results = in; print(results); } part1(); 
10:51 < r1chard> Stephen, compile itself basically.
10:51 < r1chard> Stephen, no need to do this at runtime
10:51 < r1chard> Can be done at dev time with a command line compiler.
10:52 < Stephen> Yeah, you can do this
10:52 < Stephen> But you'll need to override the Function prototype
10:52 < Stephen> Or possibly replace it
10:52 < r1chard> Yes but can someone recommend a language/compiler which specifically does this transform
10:53 < Stephen> Any framework which uses "mixins" does this
10:53 < r1chard> I'm talking about a very specific idea though, not mixins.
10:53 < Stephen> jQuery's Deferreds use the same pattern
10:54 < Stephen> Ok, question
10:54 < Stephen> Regarding part2()
10:55 < Stephen> In your last example, it query(part2) basically just a call to part2(), is it an attempt at a reference, or is it a recursive overwrite?
10:56 < Stephen> Oh, wait...
10:57 < r1chard> Stephen, it's a callback, so every time you'd have a callback, instead you have those parts.
10:57 < r1chard> Taken care of for you.
10:57 < Stephen> Your trying to programatically abstract a section of part1()
10:57 < r1chard> Looks like Streamline.js does this.
10:58 < r1chard> They need an explicit underscore
10:58 < r1chard> But they work with existing APIs.
10:58 < r1chard> Say:   var results = query(_);
11:05 < geNAZt> r1chard: found this
11:05 < geNAZt> http://alexeypetrushin.github.io/synchronize/docs/index.html
11:13 < geNAZt> https://gist.github.com/geNAZt/5494774
11:13 < geNAZt> but it uses fibers
11:14 < Stephen> If you're compiling before, then what you need is a function to check for all function calls in scope, and compare the function text against that
11:16 < Stephen> Hah! There it is:
11:16 < Stephen> https://developer.mozilla.org/en-US/docs/JavaScript/New_in_JavaScript/1.7
11:16 < Stephen> You're trying to emulate generators
11:16 < foobar321> why not use promises?
11:16 < geNAZt> because promises are shit :D
11:17 < foobar321> that's great explenation
11:17 < geNAZt> Stephen: true
11:17 < Stephen> He's trying to have a compiler of some sort auto-abstract functionality to a callback
11:17 < geNAZt> but node doesnt support it -_-
11:17 < geNAZt> :D
11:19 < Stephen> Here's the biggest probem:
11:19 < Stephen> For runtime execution you'd need callee to function
11:19 < foobar321> you have a compiler - use eval :>
11:19 < Stephen> For pre-compilation your definition is too broad
11:21 < Stephen> Well, maybe not
11:21 < geNAZt> well eval does run in in normal behavior
11:21 < Stephen> You're looking first for any Function which returns a function.
11:21 < geNAZt> the goal is to "sync" async calls
11:21 < Stephen> With a list of those, you parse the entire script for instances of them being called
11:24 < Stephen> If called, the function it's in gets split after the call, the 2nd part of which is placed into a new function. That new function is added as an argument to the original matched function's call.
11:24 < Stephen> The last part you added about part1() is irrelevant
11:24 < foobar321> omg/. it's just .pipe
11:25 < Stephen> Yeah, but you're assuming he wants to write all that
11:25 < Stephen> He does't
11:25 < Stephen> doesn't
11:25 < foobar321> promises and streams solved this problem already so you can just take a look and grab the parts that you need
11:26 < Stephen> He wants a preparser to abstract the pipes out simply by looking for the use of functions which require callbacks
11:26 < foobar321> what? give me an example
11:27 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:29 < Stephen> He doesn't need the code to do all this runtime, per his own words
11:30 < chmac> Having a bit of a scoping issue. http://pastie.org/7747558
11:30 < geNAZt> why coffee ?
11:30 < geNAZt> is js so ugly ?
11:30 < chmac> Not sure why `for s in ss` produces the same value for s.id called multiple times...
11:30 < geNAZt> -_-
11:30 < purr> geNAZt: ಠ_ಠ is an IRC client/IRC client framework.
11:30 < Stephen> He just needs something to identify a function taking a callback parameter, and when found abstract the remaining code after that function call into a separate function which is supplied as found function's callback param
11:31 < chmac> geNAZt: lol
11:31 < geNAZt> and yes its a scope issue
11:31 < chmac> geNAZt: I do like the appearance of coffee script, and all the cool kids are doing it yo...
11:31 < geNAZt> and yes it is intended to be so
11:31 < geNAZt> so coffee is a hipster thing ?
11:32 < Stephen> chmac: The for loop is the problem
11:32 < chmac> geNAZt: Exactly, you understand me! :-D
11:32 < geNAZt> "I dont need to write good code, i wirte my code in coffee #yolo #swag" or what ?
11:32 < chmac> Stephen: OK, so I need to read up on scoping, it's not something I really understand at all...
11:33 < chmac> geNAZt: Who cares about good when we are talking about *pretty* ? I just bought a mac, I mean, it's all form baby, never mind function, that's so last millennium!
11:33 < Stephen> bah
11:33 < Stephen> asm.js
11:33 < geNAZt> code doesnt need to be pretty, and coffe is fugly as hell
11:33 < Stephen> Abd call me in the morning
11:35 < chmac> Any pointers as to my solution?
11:35 < chmac> I want to use some sort of callback? Or somehow pass the variable into the query result function?
11:36 < chmac> Or do the 3 functions created by the for loop get instantiated immediately, and therefore they are invoked with the first value of the for loop?
11:36 < geNAZt> chmac: closures
11:37 < chmac> http://howtonode.org/why-use-closure
11:39 < geNAZt> http://hastebin.com/katowupihu.js
11:39 < r1chard> How I learned to stop worrying and love async code.
11:40 < r1chard> Folks, what's the most popular tool for "linearizing" callbacks.
11:40 < geNAZt> Q
11:41 < r1chard> Like this   chain(function () { async(chain.next()); } ,  function () { async(chain.next()); } , .... );
11:41 < r1chard> Q?
11:41 < geNAZt> https://github.com/caolan/async
11:41 < r1chard> Damn they have a googlable name don't they
11:41 < geNAZt> Q has deffered objects
11:41 < geNAZt> https://github.com/kriskowal/q
11:42 < chmac> geNAZt: Thanks a lot, I understand the example code much easier than the article! :-)
11:43 < r1chard> geNAZt, so which is more popular Q or Async.js :)
11:44 < geNAZt> r1chard: i personaly love async
11:44 < geNAZt> but some people love Q
11:44 < ningu> damn dutch fooling me again... kruit = gunpowder, kruid = herb
11:46 < r1chard> geNAZt, I just settled with TypeScript to avoid ugly hacks to do basic OOP code and now I'm back to ugly hacks due to async code.
11:46 < r1chard> geNAZt, no getting away
11:46 < zaleb> @ningu buskruid :P
11:47 < geNAZt> r1chard: if you dont like the async working of js you may look into go
11:47 < r1chard> geNAZt, Go is implicitly async?
11:47 < geNAZt> no but the syntax is the same
11:47 < r1chard> geNAZt, problem is I don't trust anything Google does, they change their mind a lot.
11:48 < r1chard> geNAZt, GWT is all but abandoned and I almost adopted it some time ago.
11:48 < geNAZt> well why do you use node which bulds upon of v8 ?
11:48 < r1chard> geNAZt, it all depends, v8 is a good engine, and very replaceable, should something happen. But JavaScript is one thing that won't go away on the web.
11:48 < r1chard> geNAZt, while go might... go.
11:49 < r1chard> geNAZt, say TypeScript is Microsoft, and I avoid many Microsoft technologies as well.
11:49 < r1chard> geNAZt, but there are some horses that are safe to bet on.
11:49 < r1chard> Well I like promise libraries, it's not a big deal.
11:49 < r1chard> I just wonder if there's no better way.
11:50 < geNAZt> well i dont think so
11:51 < geNAZt> you can write code async without getting into "calbackhell"
11:51 < geNAZt> callbackhell*
11:51 < r1chard> I can.
11:51 < r1chard> Wait, I can?
11:51 < geNAZt> http://callbackhell.com/
11:51 < r1chard> geNAZt, I kinda want to do away with callbacks entirely for basic continuation
11:52 < geNAZt> well that doesnt work in javascript
11:53 < r1chard> geNAZt, well it doesn't work in Node.JS
11:53 < r1chard> geNAZt, JS isn't itself sync or async. It just is.
11:53 < geNAZt> well ecmascript is async
11:53 < r1chard> I'm not sure what's async about it.
11:54 < r1chard> APIs are sync or async.
11:54 < r1chard> JS is just a language using the APIs.
11:54 < geNAZt> no
11:54 < geNAZt> :D
11:54 < geNAZt> in JS they can be both
11:54 < r1chard> geNAZt, can you give an example where EcmaScript is inherently async
11:54 < geNAZt> Array.forEach(callback);
11:54 < r1chard> I don't think there's a single async thing i the core APIs.
11:55 < r1chard> That's not async. :P 
11:55 < geNAZt> it is :D
11:56 < r1chard> geNAZt, async means it takes the callback and may execute it at some later point.
11:56 < r1chard> geNAZt, this one blocks until the callback has been called for all items.
11:57 < r1chard> The presense of a callback doesn't mean blocking or not as you know.
11:57 < r1chard> Even PHP is full of callbacks but they all block.
11:58 < geNAZt> w8cat is blocking my keyboard
11:58 < geNAZt> so
11:58 < geNAZt> since when cann php handle functions as parameters ?
11:59 < hallas> 5.3
12:00 < geNAZt> o nice
12:00 < hallas> yeah it's not bad :)
12:01 < r1chard> geNAZt, well PHP had lambdas and callable references before that as well, but it was ugly.
12:01 < r1chard> Say the there was always a function called usort() taking a comparator callback.
12:01 < r1chard> Even as back as PHP 4
12:01 < r1chard> But never mind PHP hehe
12:02 < r1chard> hallas, if you know PHP you may feel my pain. I'm porting blocking PHP code to Node.JS async APIs.
12:02 < r1chard> hallas, my mind is stretched and twirled.
12:02 < geNAZt> well i also come from php land but before 5.3 :D
12:03 < r1chard> PHP is so horrible in some ways. But it's such a nice simple blocking run-once-and-die code.
12:03 < r1chard> Gotta love the simplicity
12:03 < geNAZt> absolutly true
12:03 < geNAZt> but it has its pros and cons :D and the cons of this language keep growing
12:05 < s_e> would make sense to have a bridge from node to php, start a php worker thread via node io that has a callback
12:05 < r1chard> s_e, it's doable very likely.
12:05 < r1chard> s_e, though one worker won't do for PHP
12:05 < hallas> r1chard use a step function
12:05 < geNAZt> but the goal should be to translate php to nodejs
12:05 < geNAZt> and never write php again :D
12:06 < s_e> i'm just thinking use of existing stuff
12:06 < s_e> node seems like a great tool for delegating remote requests to other things
12:06 < r1chard> hallas, step function?
12:06 < geNAZt> r1chard: like promises or async
12:06 < r1chard> Ah yeah.
12:07 < r1chard> hallas, I'm researching those as we speak :)
12:07 < hallas> https://github.com/caolan/async#series
12:07 < geNAZt> step takes a list of functions and executes them and gives you one callback of all results
12:07 < hallas> or https://github.com/gett/common which is what I use
12:08 < hallas> geNAZt not entirely true
12:08 < r1chard> hallas, thanks :)
12:08 < hallas> a step function will let you control the flow of your async callbacks
12:08 < geNAZt> async also does that :D
12:08 < r1chard> Isn't it funny by the way.
12:08 < r1chard> If you can jump from step to step
12:08 < r1chard> It's basically GOTO:
12:09 < r1chard> Back to 1980
12:09 < hallas> using the common.step function which I do will even let you parallelize whenever you need, instead of async where you have to interveave .series and .parallel
12:09 < r1chard> AppleSoft Basic.
12:09 < r1chard> 10 HOME
12:09 < r1chard> 20 PRINT "HI"
12:09 < hallas> r1chard it's still like that anyway once it's interpreted or compiled
12:09 < r1chard> 30 GOTO 20
12:09 < r1chard> hallas, of course.
12:09 < r1chard> hallas, but I have the feeling it won't stay this way for long.
12:10 < r1chard> hallas I mean constructs will emerge for async programming into the languages themselves
12:10 < hallas> yeah but ultimately it will always depend on what our architectures can understand
12:10 < r1chard> Right.
12:11 < hallas> Golang has constructs for parallelism
12:11 < hallas> very nicely done tbh
12:11 < r1chard> hallas, do you know what's the irony.
12:11 < hallas> tell me :)
12:12 < r1chard> hallas, if we *did* still have goto: in JavaScript, we'd be able to jump to the event loop from any point in the program and this entire promise/step/etc pattern wouldn't be needed
12:12 < r1chard> I mean we do have goto but I mean fullblown one.
12:12 < r1chard> But we don't. So instead we emulate goto with steps in our own code.
12:12 < hallas> r1chard there are benefits to the current model, stuff like reference scopes, that is doing a great job of handling our memory
12:13 < r1chard> hallas, none of this should go away.
12:13 < r1chard> hallas, here's my idea: 
12:14 < r1chard> hallas,     results = query();  ... function query() { var jumpMarker = new JumpMarker(); asyncTasks.push(queryDefinition, ); goto: eventloop;  jump: jumpMarker(results);   return results; }
12:14 < r1chard> hallas rough pseudo code.
12:15 < r1chard> hallas, but point is, add the async tasks, relinguish control and give back a point to jump to
12:15 < hallas> I guess that could work :)
12:15 < geNAZt> r1chard: deffered objects do that 
12:15 < r1chard> hallas, imagine how much simpler it'd be :/
12:15 < r1chard> geNAZt, how.
12:16 < r1chard> geNAZt, they don't do it because they're objects, not code.
12:16 < geNAZt> well you create a empty object and return it
12:16 < r1chard> geNAZt, so you still have a problem them.
12:16 < geNAZt> if all data is given the object emits a callback with all data
12:16 < r1chard> In here when you return from query() you can immediately consume the results.
12:16 < r1chard> No magical patterns.
12:17 < geNAZt> yes but it doesnt work
12:18 < s_e> I have to say, more control over the event loop stack would be lovely
12:18 < r1chard> geNAZt, we basically need dynamic labels.
12:18 < deoxxa> we?
12:18 < r1chard> I.
12:18 < deoxxa> also, need?
12:18 < geNAZt> well i dont need them
12:18 < r1chard> I personally need them.
12:19 < r1chard> I crave them.
12:19 < deoxxa> heh
12:21 < r1chard> What about yield.
12:21 < r1chard> Can we abuse it for the purpose.
12:21 < r1chard> It's sort of similar as a concept. 
12:22 < r1chard> Reqliquish control, caller decides when to invoke and "unpause" the function from where it froze.
12:23 < geNAZt> well fibers can
12:23 < r1chard> Well fibers use threads. As I said, I think involving threads it cheating.
12:23 < deoxxa> if only javascript was more like <language that isn't javascript>
12:23 < r1chard> It should be optional.
12:24 < geNAZt> r1chard: that are the solutions that can be made in nodejs
12:24 < r1chard> deoxxa, I come from PHP and I certainly don't want it to be more like PHP.
12:24 < r1chard> deoxxa, it's a practical need.
12:24 < deoxxa> optional to use, maybe. it wouldn't be optional to implement.
12:24 < geNAZt> you never would see more js patterns in the core as needed :D
12:26 < r1chard> JS.call('10', function () { HOME(); })
12:27 < r1chard> .then('20', function () { PRINT('HI WORLD'); })
12:27 < geNAZt> promises
12:27 < r1chard> .then('30', function () { JS.goto(10); })
12:27 < r1chard> This si the state of the art.
12:27 < r1chard> Apple II basic.
12:44 < merpnderp> Every time I click to a new page in this presentation my mind gets more and more blown. http://tjanczuk.github.io/edge
12:46 < merpnderp> I can never remember which use cases would be better served with promises vs callbacks.
12:53 < chiel> hi all. i'm developing an app using express.js, making it listen on a unix socket. however, when the process exits it doesn't seem to remove the socket file (it's running through nodemon at the moment), has anyone had any similar issues?
12:53 < geNAZt> well remove it when the process exists
12:54 < chiel> is that a matter of doing something like process.on('exit', function() { /* remove the file */ })
12:54 < geNAZt> right
12:54 < chiel> ok cool, gonna give that a shot, ty
12:55 < geNAZt> but remember on('exit') doesnt execute async things
12:59 < chiel> geNAZt: yeah, that's fine. i tried doing fs.unlinkSync(socketFile); but that doesn't seem to work.
13:02 < Omid> I updated node to v0.8.23 and it gives a horrible error: node: /lib/libc.so.6: version `GLIBC_2.9' not found (required by node)
13:02 < Omid> why is that?!
13:02 < ExxKA> Omid, do you have the build-essentials package installed?
13:02 < geNAZt> do you run the binary package ?
13:03 < Omid> ExxKA: I don't know but I am checking
13:03 < Omid> geNAZt: I installed it using nvm
13:04 < geNAZt> so i assume its the binary package
13:04 < geNAZt> which is compiled to a libc version above 2.9
13:04 < geNAZt> which you dont have installed
13:10 < merpnderp> Anyone get nodemon and broswerify working together?
13:12 < Omid> ExxKA sry I was disconnected
13:12 < Omid> ExxKA how can I solve this?
13:12 < ExxKA> I am afraid I don't know what the exact problem is
13:12 < jamescarr> is there any performance overhead of writing an app written in coffee script through the coffee binary vs. compiling it to js and running it from node?
13:13 < ExxKA> If you are using a linux system I would get build-essentials
13:13 < ExxKA> and then rebuild node
13:13 < ExxKA> Otherwise I do not know.
13:13 < Marsup> nvm usually attempts binary before compiling
13:13 < Marsup> was there any error during the install ?
13:13 < ningu> jamescarr: that should do the same thing
13:13 < Marsup> maybe remove and reinstall
13:14 < ningu> besides why are you worried about performance overhead? you do it once before you run the app, not while it runs
13:14 < Omid> Marsup: no error
13:15 < Omid> ExxKA: where can I get the source code of build-essentials? (I don't have a proper yum)
13:15 < Marsup> just installed it, works fine here
13:15 < Omid> Marsup: the interesting part is that, I have installed it by hand and that version works
13:15 < ExxKA> Omid, build essentials is a package usually shipped on debian distros.
13:15 < ExxKA> It is not a single project.
13:15 < Omid> ExxKA: I am using centos
13:16 < ExxKA> I am sure Centos has something similar :)
13:16 < Marsup> on a specific architecture ?
13:16 < Omid> Marsup: the one that I have installed by hand works fine, but the one that is installed by nvm doesn't work
13:16 < jamescarr> ningu: just wanted verification. That's what I thought
13:16 < Omid> Marsup: the binary problem I think
13:17 < Omid> Marsup: this is working fine on my centos, but not on my fedora
13:17 < Marsup> maybe it failed to detect your OS
13:18 < s_e> you can use yum groupinstall "Development Tools" but will grab a lot of stuff
13:18 < Marsup> maybe it download x86 while you're on x64, something like that
13:18 < Omid> Marsup: ExxKA do you suggest me to install node by hand? (I mean from source code)
13:18 < Marsup> never had to do it since binaries exist
13:19 < ExxKA> Omid, just get the package of the nodeJs website :)
13:19 < Omid> Marsup: I don't think of nvm as such a stupid script
13:19 < Omid> Marsup: on the other hand, my centos which is 64 works fine with nvm
13:19 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:19 < Omid> ExxKA: ok worth to try
13:20 < Omid> where can I find older versions? like node-v0.8.23?
13:20 < Marsup> I'm not telling it's stupid, I actually did the 1st pull request for binaries so maybe I have been :p
13:21 < ExxKA> Omid, it's on the website aswell
13:21 < Marsup> there has been a few more pull requests for OS quirks since then so that's a possiblity
13:21 < mscdex> you can install node binaries for 64-bit linux like this: curl http://nodejs.org/dist/latest/node-v0.10.5-linux-x64.tar.gz | tar zx --strip=1 -C /usr/local
13:21 < Omid> mscdex: binaries seem to have problem on my system
13:21 < mscdex> outdated glibc?
13:22 < mscdex> i'm guessing you're using centos 5
13:22 < geNAZt> yep
13:22 < Marsup> I find nvm to be a better way to switch versions
13:22 < ningu> don't be glib about your glib
13:22 < s_e> hoho
13:22 < mscdex> Marsup: how often do you switch between versions on a single machine?
13:22 < Marsup> quite often
13:23 < mscdex> why is that?
13:23 < Marsup> different projects, different versions, testing, etc...
13:24 < chiel> hmm, process.on('exit') doesn't seem to fire for me.. if i do a console.log() in there it should just work, right
13:24 < chiel> ?
13:25 < geNAZt> i dont know
13:25 < geNAZt> use process.stdout.write()
13:25 < mscdex> chiel: anything that's synchronous
13:26 < chiel> mscdex: console.log() is synchronous afaik?
13:26 < geNAZt> use process.stdout.write
13:26 < mscdex> chiel: yes
13:27 < mscdex> chiel: unless there's a pipe
13:27 < mscdex> chiel: console.log works for me on 'exit'
13:28 < chiel> mscdex: hmm, weird, it feels like the exit event is not being fired... it should still fire when i ctrl-C the process, no?
13:28 < geNAZt> chiel: which signalcode ? which os ? which node version ?
13:29 < geNAZt> not on every node version and os
13:29 < Omid> Marsup: ExxKA mscdex I got error while compiling the source code!!!!
13:29 < Omid> make -C out BUILDTYPE=Release V=1 make[1]: Entering directory `/opt/node-v0.8.23/out' make[1]: *** No rule to make target `/opt/node-v0.8.23/out/Release/obj.target/v8_base/gen/debug-support.o', needed by `/opt/node-v0.8.23/out/Release/obj.target/deps/v8/tools/gyp/libv8_base.a'.  Stop. make[1]: Leaving directory `/opt/node-v0.8.23/out' make: *** [node] Error 2
13:29 < chiel> geNAZt: whatever code ctrl-c sends, os x, v0.8.1 apparently
13:29 < Hounddog> Hy, i need to run multiple instances of the same app and want to implement some ci/cd for it also... anyone got a recomendation about any software which can help me achieve this?
13:29 < chiel> Omid: less caps please :)
13:30 < geNAZt> ctrl-c sends a signal 9
13:30 < geNAZt> or 15
13:30 < Omid> chiel: why?
13:30 < geNAZt> its 15
13:30 < geNAZt> chiel: can you try node version 0.10.2 ?
13:31 < chiel> Omid: because it makes it look like you're shouting, it's pretty normal irc etiquette
13:31 < GOMADWarrior> im getting "cannot call method 'noise' of undefined"
13:31 < Marsup> Omid: you shouldn't have to go through the compilation process, try the curl command mscdex suggested, if it works then it's nvm's fault
13:31 < Marsup> and maybe don't unpack it in /usr/local if you don't want to
13:31 < mscdex> chiel: it won't be fired since SIGINT isn't handled by default
13:31 < chiel> geNAZt: i could, but it's still curious that it does not work here
13:31 < Omid> chiel: sry about that ;)
13:31 < mscdex> chiel: which is what you get when you press CTRL-C
13:31 < GOMADWarrior> http://bpaste.net/show/1QnDhi6ifjKELfIcxYnL/
13:32 < chiel> mscdex: ah okay, that makes sense then.. is there anything i can to to work around this?
13:32 < chiel> out of curiosity, do you know what nodemon does when it restarts a process?
13:32 < mscdex> chiel: process.on('SIGINT', function() { process.exit(1); });
13:33 < Omid> mscdex: is it ok to use /opt instead of /usr ?
13:33 < Omid> mscdex: in curl I mean
13:33 < mscdex> Omid: as long as your PATH is set up correctly and all IIRC
13:33 < chiel> mscdex: ah okay, thanks. i wonder if express just has an event which fires when it stops listening or something.
13:33 < Omid> mscdex: mscdex what is the url for version 0.8.23?
13:34 < Marsup> same as the one he gave, just replace the digits
13:34 < mscdex> Omid: http://nodejs.org/dist/v0.8.23/node-v0.8.23-linux-x64.tar.gz
13:34 < mscdex> Omid: but i suspect you'll run into the same glibc issue
13:34 < GOMADWarrior> lol nvm
13:34 < Marsup> oops maybe not :p
13:34 < GOMADWarrior> but now my noise is always giving 0
13:35 < Omid> mscdex: so why version 0.8.11 is installed?!
13:35 < mscdex> Omid: huh?
13:35 < mscdex> because you installed it? :-)
13:36 < Marsup> Omid: tried 0.8.22 ?
13:36 < Omid> Marsup: no
13:37 < Omid> guys, the fact is, I have v0.8.11 installed and working fine on my computer but
13:37 < mscdex> Omid: what is holding you back from 0.10?
13:38 < Omid> when I try to install v0.8.11 and v.0.8.23 using nvm they pass errors
13:38 < Omid> mscdex: there is a big project on the system and I'm afraid to break it
13:38 < chiel> goddamn, nodemon apparently does not send a SIGINT
13:38 < Omid> mscdex: this is sombody else's code and in future i have to develop it
13:39 < mscdex> heh fun times
13:39 < Omid> mscdex: yeah u think it's fun? :D it's horrible... no structure... no clue... just a bunch of code
13:40 < chiel> ah, it sends a SIGUSR2
13:40 < mscdex> Omid: how did you try to compile 0.8.23? just `./configure --prefix=/opt && make && make install` ?
13:40 < Omid> mscdex: no just './configure'
13:40 < Omid> mscdex: then make
13:42 < mscdex> Omid: what centos version?
13:42 < Omid> mscdex: with option --prefix it didn't work as well
13:42 < Omid> mscdex: fedora 4
13:42 < mscdex> oh
13:42 < Omid> mscdex: on centos it works fine
13:42 < bnoordhuis> fedora 4?
13:43 < Omid> mscdex: yead hard time dude, hard time
13:43 < mscdex> ha, i'd say so
13:43 < bnoordhuis> that's so very, very ancient
13:43 < pachet> aw, i missed whatever it was
13:43  * pachet likes ancient things
13:43 < chiel> fuck, why is listening on a socket so much harder than listening on a port? :/
13:44 < chiel> or maybe i am doing something retarded, idk
13:44 < bnoordhuis> chiel: net.createServer(cb).listen({ fd: fd })?
13:45 < mscdex> bnoordhuis: i think he's using a unix socket
13:46 < bnoordhuis> that should work as well
13:46 < Omid> mscdex: about curl: my system is not 64bit. its:  i686 i686 i386 GNU/Linux
13:46 < Omid> mscdex: so should I replace 64 with 86?
13:46 < bnoordhuis> Omid: what does uname -a print?
13:46 < mscdex> Omid: you can try, but that system is pretty old...
13:47 < Omid> bnoordhuis:  i686 i686 i386 GNU/Linux
13:47 < Omid> mscdex: what may be mission about the OS version?
13:47 < bnoordhuis> Omid: that's not everything uname -a prints
13:48 < remysharp> chiel: nodemon does try to send a sigint - but it's tricky when things are shutting down
13:50 < remysharp> chiel: if you want to catch when your script is going to shutdown, but you can hook the SIGUSR2 signal that it sends through too: https://github.com/remy/nodemon#controlling-shutdown-of-your-script
13:51 < Omid> bnoordhuis: yes I just made it short, the other is my host name and...
13:51 < Omid> bnoordhuis: 2.6.11-1.1369_FC4 is the kernel
13:51 < bnoordhuis> Omid: right, that's pretty old
13:52 < bnoordhuis> it should however work - node/libuv works with everything from 2.6.9 and up
13:52 < bnoordhuis> you'll need gcc 4.2 or newer though
13:52 < Omid> mscdex: I did the curl command, now it should work?
13:52 < bnoordhuis> which you probably don't have on a system that old
13:53 < Omid> mscdex: the same error!
13:53 < barnes> Omid: why not give up and install centos 6 and be done with it?
13:54 < Omid> bnoordhuis: gcc version 4.3.2 (GCC)
13:54 < Omid> barnes: if it was really nice if i could do that, but i shouldn;t change the os
13:55 < Omid> barnes: i don't see any problem with the os here ( except the build-essentials that i don't know the solution yet )
13:55 < bnoordhuis> Omid: okay, that should work. what kind of errors do you get?
13:56 < Omid> bnoordhuis: node: /lib/libc.so.6: version `GLIBC_2.9' not found (required by node)
13:57 < bnoordhuis> Omid: okay, and when do you get that?
13:57 < Omid> bnoordhuis: when I press node
13:57 < bnoordhuis> press node?
13:57 < Omid> bnoordhuis: or everthing related to node
13:57 < bnoordhuis> don't press it, it doesn't react well to stress
13:57 < Omid> bnoordhuis: yes, i mean the command node
13:57 < bnoordhuis> ah
13:57 < bnoordhuis> how did you compile it?
13:58 < barnes> Omid: well running that old os without any os support with patches would not be something i would do
13:58 < bnoordhuis> also, what version of glibc do you have installed?
13:58 < Omid> bnoordhuis: i used nvm install v0.8.23
13:58 < bnoordhuis> what happens when you build from source?
13:58 < bnoordhuis> barnes makes a good point btw
13:58 < bnoordhuis> we're at fedora 18 now
13:58 < bnoordhuis> you shouldn't be running production systems on fedora anyway
13:58 < Omid> bnoordhuis: how can i get the version of glibc?
13:59 < barnes> fedora 4 is 2005 ish
13:59 < Omid> bnoordhuis: believe me, it's not my decision
14:00 < bnoordhuis> Omid: yum info should tell you
14:02 < Omid> bnoordhuis: isn't there any other way? yum is not working
14:02 < barnes> rpm -qa |grep glibc
14:04 < bmatusiak_> windows keyStroke events, if anybody needs https://github.com/bmatusiak/node-kbstroke
14:06 < chiel> bnoordhuis: yeah, i am working on an express app that i want to run on a unix socket since i'm proxying behind nginx, would that automatically get rid of the socket file again as well, if i use net.createServer(cb).listen({ fd: fd }) ?
14:06 < Omid> bnoordhuis: ldd (GNU libc) 2.3.5
14:09 < chiel> remysharp: ah right, so i *have* to send it back through again, fair enough
14:10 < Omid> bnoordhuis: is this version proper for node?
14:10 < remysharp> chiel: it's more if you want to control how your script shutsdown
14:12 < Omid> so nobody is able to help?
14:12 < Topcat> hey, i'm using grunt-contrib-copy and I can't see how I can put the contents of public/ into dist/ i end up with dist/public/*
14:12 < barnes> Omid: you have the answer in you error 
14:12 < barnes> node: /lib/libc.so.6: version `GLIBC_2.9' not found (required by node)
14:13 < Omid> barnes: thanks alot ;)
14:15 < chiel> remysharp: yeah, the problem is that i made an express app, which i want to have listening on a socket. however, when the process gets shutdown (in whatever way), the socket file is not being removed, so i figured i have to handle that manually.
14:17 < remysharp> chiel: yeah, so you're trying to clean up on exit, right? If it were me, I'd look at a few approaches: 1. can I catch the process.exit (though it's doubtful you have time to complete a cleanup), 2. clean up on start up.  3. if you're testing with nodemon, then definitely catch the SIGUSR2 signal, cleanup, then kill your child.
14:18 < chiel> remysharp: kill my child, that could so easily be misinterpreted. :D
14:18 < remysharp> chiel: technically I was wrong, you'd want to kill yourself.
14:19 < remysharp> chiel: unless your process had children, then you'd go a nuke the children, then yourself.
14:19 < remysharp> All available for misinterpretation :)
14:19 < chiel> :D
14:19 < bnoordhuis> Omid: re libc, that's about the oldest version that could possibly work
14:19 < bnoordhuis> Omid: try compiling node from source
14:20 < Omid> bnoordhuis: when I compile I get another error
14:23 < Omid> bnoordhuis: make -C out BUILDTYPE=Release V=1 make[1]: Entering directory `/opt/node-v0.8.23/out' make[1]: *** No rule to make target `/opt/node-v0.8.23/out/Release/obj.target/v8_base/gen/debug-support.o', needed by `/opt/node-v0.8.23/out/Release/obj.target/deps/v8/tools/gyp/libv8_base.a'.  Stop. make[1]: Leaving directory `/opt/node-v0.8.23/out' make: *** [node] Error 2
14:26 < Omid> ok i give up for today and continue tomorrow
14:26 < Omid> bnoordhuis: ExxKA barnes mscdex chiel thank you ;)
14:27 < ExxKA> Np :)
14:28 < Omid> oh my god, now my previous installation is down :((
14:29 < bnoordhuis> Omid: you'll need gnu make 3.81
14:29 < bnoordhuis> you probably have 3.80
14:29 < bnoordhuis> and python 2.6 or 2.7
14:30 < bnoordhuis> the prerequisites are listed in the README :)
14:30 < Omid> bnoordhuis: yes thats 3.80
14:31 < bnoordhuis> time to upgrade
14:31 < Omid> bnoordhuis: python 2.7.3
14:34 < Omid> bnoordhuis: node is down and the situation is horrible tomorrow
14:43 < saschagehlich> hey, it seems that mocha is running all my test files at the same time, since I start a server in every test file, i run into an EADDRINUSE error. did anyone experience this as well?
14:47 < shesek> substack, I think something is off with your queuing at browserling
14:47 <@MI6> joyent/node: Ben Noordhuis v0.10 * 2cf7e5d : Revert "deps: downgrade openssl to v1.0.0f" - http://git.io/KAUS1A
14:47 < shesek> I've been waiting in the queue for ~18 hours o_O
14:48 < pachet> shesek: no soup for you
14:50 < pepijndevos> Can I do on("data" ...) on a tcp server?
14:50 < pepijndevos> I'm not getting anything
14:51 < pepijndevos> https://gist.github.com/pepijndevos/5495692
14:54 < pepijndevos> Other commets on my code also welcome :/
14:55 < bnoordhuis> pepijndevos: i'm getting all kinds of syntax errors
14:56 < pepijndevos> bnoordhuis, wat, it does compile for me.
14:56 < bnoordhuis> pepijndevos: i'm goading you
14:56 < hatch> perfect example of why you should use javascript :P
14:56 < pepijndevos> bnoordhuis, goading?
14:57 < bnoordhuis> pepijndevos: plagen
14:57 < pepijndevos> hatch, Can;t use JS with hubot I think
14:57 < hatch> oops wrong channel :)
14:57 < pepijndevos> oh
14:57 < bnoordhuis> pepijndevos: but what would you expect server.on('data') to do?
14:57 < hatch> sorry heh wrong channel
14:57 < hatch> :D
14:58 < bnoordhuis> pepijndevos: pass a callback to net.createServer that accepts a conn object
14:58 < pepijndevos> bnoordhuis, well, to get called when the client sends data to the server
14:58 < pepijndevos> aaah, d'oh
14:59 < bnoordhuis> pepijndevos: in the language we all know and love: net.createServer(function(conn) { conn.on('data', function(data) { .. } }).listen(port)
14:59 < kessler> anyone have an idea how to debug a situation in an http server cluster where one process gets all the requests?
14:59 < pepijndevos> I have no idea how to do that in coffee, but I'll find out :/
14:59 < pepijndevos> Thanks :)
14:59 < bnoordhuis> no problem :)
14:59 < geNAZt> throw coffee away
14:59 < geNAZt> and write js :D
14:59 < bnoordhuis> kessler: cluster?
14:59 < pepijndevos> geNAZt, I'm writing a hubot plugin, so i can't.
15:00 < kessler> yea i got a simple cluster scenario
15:00 < kessler> 2 workers one master
15:00 < kessler> they receive requests from the web
15:00 < bnoordhuis> kessler: what os? linux?
15:00 < kessler> yep, amazon classic ami
15:00 < bnoordhuis> right. known issue
15:00 < kessler> workaround ? :)
15:00 < bnoordhuis> node currently leaves balancing of incoming connections to the operating system
15:00 < pedropoc> has anyone used http://learnboost.github.io/kue/ in production?
15:01 < kessler> was it like that in previous versions?
15:01 < bnoordhuis> linux has a tendency to disproportionally favor one process
15:01 < bnoordhuis> yeah, it's been like that since the cluster module was introduced
15:01 < bnoordhuis> we'll use a different approach in v0.12
15:01 < bnoordhuis> i already wrote the code :)
15:01 < kessler> anything that can be done right now ?
15:02 < kessler> I mean that I can do 
15:02 < bnoordhuis> kessler: well... `env UV_TCP_SINGLE_ACCEPT=1 node script.js` will alleviate the load balancing issue
15:03 < bnoordhuis> but it also hurts raw accept performance quite a bit
15:03 < bnoordhuis> so ymmv
15:03 < pepijndevos> bnoordhuis, Should I listen for error on the server or on the connection?
15:03 < bnoordhuis> pepijndevos: the connection
15:03 < pepijndevos> ok
15:03 < bnoordhuis> and now office hours are over. gotta go :)
15:03 < kessler> thanks man :)
15:08 < pepijndevos> How can I check if a filename is safe in Node? Like, preventing ../../../important_file
15:09 < pepijndevos> Is it enough to strip slashes?
15:10 < devoidfury> path.resolve(some_path).indexOf(safe_directory) !== -1 is the safest
15:13 < pepijndevos> yay
15:16 < bingomanatee> what is the best node module for implementing a promise framework?
15:20 < nathan7> bingomanatee: A promise.. framework?
15:20 < bingomanatee> module 
15:23 < geNAZt> Q ?
15:25 < bingomanatee> thx
15:25 < r1chard> Ok I thought about it.
15:25 < r1chard> I think my idea isn't that bad about calling a tick()
15:25 < r1chard> Can someone please poke a hole in it.
15:25 < r1chard> I can explain again
15:26 < r1chard> basically it's cooperative multitasking. When something needs to check in a loop for a socket, it calls a main loop tick.
15:26 < r1chard> No callbacks.
15:26 < r1chard> Why is this bad
15:26 < nathan7> bingomanatee: There's https://github.com/then/promise
15:26 < nathan7> r1chard: That's an event loop
15:26 < r1chard> nathan7, yes but no callbacks
15:27 < nathan7> How does it not have callbacks?
15:27 < nathan7> tick() is doing *something*
15:27 < r1chard> nathan7, well that's the thing. tick() is the main event loop tick and that's the ONLY callback in the entire system
15:27 < owen1> is connect using continuation passing style? what does it actually mean and why so many core node guys say connect's style is different than the rest of the node style?
15:29 < r1chard> nathan7, so you don't need to pass any, see?
15:31 < nathan7> r1chard: I'm not really seeing how this'd work
15:31 < nathan7> r1chard: I'd love to see an example
15:31 < r1chard> nathan7, I'll pastebin pseudo code.
15:31 < r1chard> nathan7, do you have 3 hours ;)
15:31 < LoppEar> r1chard: is the suggestion that you write your app code in the main event loop?
15:31 < r1chard> nathan7, nah do you have 5 minutes :P
15:31 < geNAZt> look at the go syntax in golang 
15:31 < nathan7> r1chard: I have plenty of time, dear.
15:31 < r1chard> LoppEar, no
15:32 < r1chard> LoppEar, wait I'll pseudo code an example
15:40 < r1chard> LoppEar, geNAZt, nathan7, http://pastebin.com/raw.php?i=8r102cmj
15:41 < geNAZt> write c / c++
15:41 < r1chard> geNAZt?
15:41 < geNAZt> you want to control the loop
15:41 < geNAZt> you dont have access to the loop via js
15:41 < nathan7> r1chard: If you have more than one request going that kind of breaks down
15:41 < r1chard> nathan7, how.
15:42 < nathan7> r1chard: or is this just going to recurse
15:42 < geNAZt> because it block and creates a deep stack trace
15:42 < r1chard> nathan7, it will, it's re-entrant
15:42 < geNAZt> so the first request will take the longest time
15:42 < nathan7> r1chard: V8 stack is 255
15:42 < r1chard> geNAZt, it will create a deep stack trace but I thought about it and callback closures keep the same exact data
15:42 < geNAZt> because he is the first in the stack
15:42 < nathan7> r1chard: You can up it to 8192
15:43 < nathan7> I'll easily have things going 8 functions deep
15:43 < nathan7> Meaning I can handle a mere 1024 reqs
15:43 < r1chard> nathan7, I'm not sure.
15:43 < nathan7> You can't interleave things either
15:43 < r1chard> nathan7, I'll have to test it.
15:44 < r1chard> nathan7, yes you can, every place an async operation takes place it should call tick()
15:44 < r1chard> nathan7, also places of slow ops
15:44 < r1chard> same like .nextTick(cb)
15:44 < r1chard> Except no callback
15:45 < geNAZt> nathan7. what he wants to do is to have something like var result = query(); where query can have async function calls in it
15:45 < r1chard> yes
15:45 < r1chard> basically it's the same thing like not but organized differently.
15:45 < r1chard> like now*
15:46 < geNAZt> some function like pauseTill(data == []);
15:46 < geNAZt> or so
15:50 <@mbalho> djazz: nice job with the visualizer!
15:55 < r1chard> nathan7, why can't you have more than 8192
15:56 < nathan7> r1chard: *afaik*
16:01 < owen1> is there a way to run multiple files with tape or do i have to write a 'runner' file?
16:01 < r1chard> nathan7, it seems the browser is handling ~13700 levels, of course no idea if it's level of recursion limit or stack size
16:02 < r1chard> nathan7, so the problem is stack size.
16:02 < r1chard> nathan7, but otherwise it seems like it'd work or not?
16:09 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:10 < nathan7> r1chard: hmm
16:15 < r1chard> nathan7, stack size is dependent on number of arguments and so on it seems and not affected by --stack-size options :(
16:17 < r1chard> I think will will be implementable with generators maybe.
16:17 < r1chard> instead of tick()
16:17 < nathan7> r1chard: check out task.js
16:17 < r1chard> you do yield()
16:18 < r1chard> nathan7, funny, they use yield and I just said it :P
16:18 < r1chard> nathan7, mind reader you
16:18 < zdzedez> sss
16:18 < zdzedez> ssss
16:19 < r1chard> nathan7, this is *exactly* what I want. so basically we have to wait for Node to have a solid yield support
16:20 < nathan7> r1chard: [=
16:21 < nathan7> r1chard: task.js just combines the flexibility of promises with the magic of generators
16:21 < r1chard> nathan7, yes but that's all I want :)
16:21 < r1chard> nathan7, and no deep stack issues.
16:21 < beg> Hey guys, i need your opinion, I want to make a game where you program bots to do the playing, but I can't imagine what theme it should be, should it be knights, or tanks, or shooter, or spaceships.
16:24 < leichtgewicht> Hey guys: do you know a library that offers all the currency symbols for currency codes? £ for GBP and so on?
16:26 < r1chard> nathan7, only issue is it seems shallow.
16:26 < Bubo> hi
16:26 < r1chard> nathan7, so if my generator runs another generator, what happens.
16:26 < nathan7> r1chard: you can yield another generator
16:27 < nathan7> r1chard: and you can pass on control to another generator
16:27 < nathan7> r1chard: (tail call optimised presumably)
16:29 < r1chard> nathan7, you mean manually tail optimized? 
16:29 < r1chard> Because the compiler doesn't :P
16:29 < r1chard> nathan7, not sure how would that work tbh
16:30 < r1chard> nathan7, especially not sure how it'd mix with OOP.
16:30 < r1chard> can't yield a constructor, can I
16:31 < lejonet> I am using node-orm2 (the dresende repo) and trying to use SSL to connect to a postgresql database, I've verified it works with non-ssl, but it doesn't seem to manage to connect or anything. It seemingly never calls the cb I give it, I think the problem is due to me using self-signed certs, anyone that could shed some light on this or is this the wrong chan and I should try and find a node-orm specific chan?
16:32 < nathan7> r1chard: you can pass on control to another generator
16:34 < chiel> does anyone here use express with mustache templates? i'm having some issues getting partials to work
16:35 < tjholowaychuk> chiel you have to pass partials as locals, that's the annoyance of using mustache
16:35 < tjholowaychuk> or if you use consolidate i think someone wrote something
16:35 < tjholowaychuk> so you can pass paths or sth
16:38 < chiel> tjholowaychuk: yeah, using consolidate. i'm not deadset on mustache though, if you have suggestions for a lib i could better use instead
16:38 < tjholowaychuk> chiel there's one called swig that is similar but more useful on the server
16:38 < tjholowaychuk> I'd probably only use mustache on the client without partials personally
16:38 < beg> is it possible to revert changes made to cluster.setupMaster? 
16:38 < tjholowaychuk> except static templates on the client
16:38 < tjholowaychuk> suck
16:39 < beg> after making changes, because i don't want to run into a issue where i forget i have used cluster.setupMaster only to spend hours of debugging the isse :P
16:39 < RLa> beg, is that node's own cluster module or something else?
16:39 < chiel> tjholowaychuk: fair enough, i'll give that a swing then, since i'm only worried about server-side rendering at the moment, ta.
16:41 < owen1> for anyone using tape for testing, is there a way to run the entire test folder?
16:41 < beg> RLa, it's nodes own cluster module, but I want to setup custom settings, and then i don't want them anymore
16:42 < Slaytorson> isaacbw: coverslide: I think this is my problem from yesterday. https://github.com/substack/stream-handbook#backpressure
16:42 < beg> RLa, I'll just write a function myself for it
16:42 < r1chard> nathan7, if I have to pass control from one generator to another it's basically callbacks all over again.
16:43 < Slaytorson> I think my readable stream is too fast and the requests for mongo are getting backed up.
16:45 < RLa> beg, as i see, built-in cluster support is still bit low-level?
16:47 < JohnMcLear> Sounds like good news..  Etherpad might be partnering with Joyent to provide a commercial hosted Etherpad service
16:59 <@isaacbw> Slaytorson: a quick fix would be to offload the mongo persistence to another process
17:02 < therealkoopa> I'm in the process of upgrading to browserify 2. However, after my bundle is created and the page is loaded, it's telling me it. Cannot find module 'backbone' I clearly see in the bundle that backbone has been included.
17:03 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:05 < newguy_> Is someone familiar with EJS + expressjs and can tell me whether and how it is possible to change ".ejs" file extension to ".html"?
17:05 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:06 <@isaacbw> newguy_: why
17:11 < newguy_> @isaacbw: because I'm coding with Visual Studio and if I change the extension from .html to .ejs, then VS doesn't have syntax highlighting etc.
17:11 < ryanrolds> newguy_, You should be able to change the extension.
17:11 <@isaacbw> 1) I'm sure you can configure visual studio to recognize .ejs as html and 2) why are you developing with node.js in visual studio
17:11 < ryanrolds> ^
17:11 < newguy_> @isaacbw: because I'm using TypeScript and I love it to have everything in one place (VS-project)
17:11 < newguy_> @ryanrolds: I know I can change the behaviour of VS, but it would be much easier if I just could change EJS to recognize .html files as views
17:11 < s3shs> So for fun I turned on "--use_strict" for node.  It appears lots of modules are not yet compatible with this. Thoughts?
17:11 < levi501d> submit bug reports
17:11 < s3shs> Even node-mysql is failing.
17:12 < bmatusiak_> newguy_ i use "https://github.com/brads-tools/node-webkit-ace-editor" or cloud9ide
17:12 < ryanrolds> newguy_, http://expressjs.com/api.html#app-settings
17:12 < buntyI> Guys, i am creating a simple nodejs program in which want to reterive some data first and then want to proceed for rest of operation but it is not executing as per sequence in programs :( please help
17:12 < buntyI> http://pastie.org/7748964
17:12 < buntyI> Guys, i am creating a simple nodejs program in which want to reterive some data first and then want to proceed for rest of operation but it is not executing as per sequence in programs :( please help
17:12 < buntyI> http://pastie.org/7748964
17:12 < ryanrolds> newguy_, See the render, you should be able to bind "html" to ejs.
17:12 < ryanrolds> er, the app.engine section.
17:12 < ryanrolds> also, #express is a better place for Express.js questions.
17:13 < buntyI> Guys, i am creating a simple nodejs program in which want to reterive some data first and then want to proceed for rest of operation but it is not executing as per sequence in programs :( please help
17:13 < buntyI> http://pastie.org/7748964
17:13 < newguy_> @ryanrolds: thanks, works like a charm!
17:13 <@isaacbw> newguy_: does visual studio get you anything but syntax highlighing?
17:13 <@isaacbw> and a directory tree
17:13 < levi501d> VS has a lot of nifty stuff
17:13 < levi501d> almost as good as webstorm imo
17:13 < ryanrolds> Like bloat
17:14 < levi501d> only if you have a slow computer ;)
17:14 <@isaacbw> really? for javascript?
17:14 < newguy_> @isaacbw: it is wonderful if you are using TypeScript
17:14 <@isaacbw> interesting
17:14 < newguy_> TypeScript is a superset javascript
17:14 < newguy_> http://42.holz.nu/3c059.png
17:14 < newguy_> see there
17:14 <@isaacbw> is that just raw visual studio?
17:15 <@isaacbw> or do you have a javascript extensions
17:15 < newguy_> VS + typescript from www.typescriptlang.org
17:15 < newguy_> That isn't javascript, it's typescript
17:15 <@isaacbw> oh, they provide their own vs plugin
17:15 < newguy_> yes
17:15 < ljharb> typescript, gross
17:16 < ryanrolds> Isn't typescript that language by that company that funds V8, but doesn't like Node.js?
17:16 <@isaacbw> "that company that funds v8" is google
17:16 < ryanrolds> Doh, sorry
17:16 < ljharb> microsoft makes typescript
17:16 < ryanrolds> I'm confusing typescript and dart.
17:16 < ljharb> google makes lots of other "please please please don't make me learn javascript" languages.
17:16 < uptownhr> does express have their own channel?
17:16 < ryanrolds> Yes
17:16 < ryanrolds> #express
17:17 < niggler> not #express.js?
17:17 <@isaacbw> google keeps trying to get rid of javascript without much luck
17:17 < newguy_> javascript isn't that bad, but I prefer typescript (or coffeescript, but this is a personal decision) 
17:17 < uptownhr> yes they do
17:17 < niggler> rumors of javascript's death have been greatly exaggerated
17:17 < ljharb> isaacbw: to be more precise, google keeps trying to turn everything into java, without much luck.
17:18 < s5fs> I always get the impression that google is just a bunch of sharp engineers poking at languages
17:18 < bmatusiak_> yay i got cloud9 working in windows :P
17:19 < s5fs> bmatusiak_: haha, they should have a VS achievement for that
17:19 < ljharb> s5fs: while that's true, there's an overwhelming java bias that inhibits their success
17:19 < buntyI> Guys, i am creating a simple nodejs program in which want to reterive some data first and then want to proceed for rest of operation but it is not executing as per sequence in programs :( please help
17:19 < buntyI> http://pastie.org/7748964
17:19 < s5fs> ljharb: true, but the sad truth is that enterprises don't trust anything but java
17:20 < s5fs> ljharb: at least those that are not tech-focused
17:20 < bmatusiak_> s5fs i know it took me 2 days of searching for 1 bug that was holding me back.. 
17:20 < ljharb> those same enterprises hired lots of flash engineers and spent millions on things in flash. most of them have gone :-)
17:20 < s5fs> bmatusiak_: you on Win7 or the ocho?
17:21 < bmatusiak_> s5fs windows7
17:21 < s5fs> bmatusiak_: good deal!
17:22 < peterschmidler> I am using mongo as a session store with connect-mongo and noticed that with chrome each page view generates another mongodb entry, whereas with safari there's only generated one mongodb entry on the first view, as expected. Here's the code: https://c9.io/peterschmidler/node_express_mongo_sessions
17:22 < bmatusiak_> s5fs when they merged the pr for removal of sourcement... the install is "npm normal"
17:23 < devoidfury> peterschmidler: chrome does a request for the favicon every request if it doesn't find one; does your app account for that?
17:23 < bmatusiak_> s5fs main problem i had was filepermissions and fileLocations
17:23 < s3shs> Is it possible to get the name of the caller with "use strict"?
17:23 < qard> The only "not Javascript" language that seems really interesting to me right now is Rust.
17:23 < ljharb> peterschmidler: perhaps you're using chrome in private browsing mode?
17:24 < peterschmidler> devoidfury: Ah, that could be it...
17:24 < s5fs> bmatusiak_: perms are almost always an issue with windows. auditing is incredibly useful in those situations
17:24 < s3shs> Ideas I'm getting require throwing an exception and parsing the stack... which is weird.
17:24 < peterschmidler> ljharb: No
17:25 < peterschmidler> devoidfury: How can I take care of that?
17:25 < qard> There's  surprising overlap between the Rust contributors and the Emscripten contributors. And both are Mozilla projects…not sure if there's any yet-to-be-revealed secrets there.
17:25 < M2Ys4U> s3shs: Why doyou need to get the nae of the caller?
17:25 < devoidfury> peterschmidler: for a quick fix, drop in the favicon middleware
17:25 < devoidfury> it'll show the connect icon
17:26 < Domenic_> isaacs: 
17:26 < Domenic_> er
17:26 < Domenic_> isaacs: wrap is pretty busted, e.g. https://github.com/joyent/node/pull/5384 Is this a known issue?
17:27 <@isaacs> Domenic_: well, it's busted for object streams, yeah
17:27 < buntyI> Guys, i am creating a simple nodejs program in which want to reterive some data first and then want to proceed for rest of operation but it is not executing as per sequence in programs :( please help
17:27 < buntyI> http://pastie.org/7748964
17:27 < ryanrolds> Berry Lyndonscript
17:27 < s3shs> M2Us4U, so I can reduce redundancy in my code.
17:28 < Slaytorson> isaacbw: I am trying to figure out a way to pause my stream and when mongo is finished, resume the stream.
17:28 < Slaytorson> I would prefer not to offload it.
17:30 <@isaacs> Domenic_: that pull req looks good.  just need cla sign-off
17:31 < Domenic_> isaacs: excellent thank you :)
17:31 < Domenic_> we think there's also an issue where it doesn't wrap end events for object streams; will investigate and report back
17:33 <@isaacs> Domenic_: that'd be weird.
17:36 < s3shs> this.constructor has the subclass name in it.  I could grab it from there.  Blech.
17:37 <@MI6> joyent/libuv: Ben Noordhuis v0.10 * 794d8e0 : unix: fix EMFILE error handling - http://git.io/utWF4Q
17:37 < Madwill> trying to run a node.js demo on windows, its very simple but somehow the page never loads
17:38 <@MI6> joyent/libuv: Ben Noordhuis v0.10 * b3ab332 : unix: fix EMFILE error handling - http://git.io/gOHDIQ
17:39 < drudge> are there any flash developers in here?
17:39 < Madwill> i am
17:39 < Madwill> but not a node.js flash developper yet
17:39 < Madwill> trying to launch my first node.js app, comming from a red5 background
17:41 <@isaacbw> what would a node.js flash developer be
17:41 < Madwill> node backend flash frontend
17:41 < Madwill> socket.io for data pushes or plain rest request
17:41 <@isaacbw> interesting
17:43 < Madwill> i get info - socket.io started.... but going on the page its waiting forever
17:44 < Madwill> firewall unblocked socket io in fact firewall's down right now
17:44 < rphillips> /win/win 9
17:44 < rphillips> woops
17:45 < mscdex> windows 9? :-)
17:46 < Madwill> GET HIM
17:48 < adamquadmon> hola todos! que tal?
17:54 -!- Topic for #Node.js: Node.js - A place to escape your day job via whitespace bikeshedding - http://nodejs.org - http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
17:54 -!- Topic set by mbalho [~max@ve.5bpbxlsy.vesrv.com] [Mon Apr 29 19:35:57 2013]
17:54 [Users #Node.js]
17:54 [@isaacbw         ] [ CoverSlide    ] [ gwoo            ] [ levi501d      ] [ petschm         ] [ sr71-blackbird  ] 
17:54 [@konobi          ] [ cpsubrian     ] [ gyaresu         ] [ lifeline      ] [ ph8             ] [ sriley          ] 
17:54 [@mbalho          ] [ creationix    ] [ gyre007         ] [ Lifkug        ] [ ph^             ] [ st_luke         ] 
17:54 [@MI6             ] [ crescendo     ] [ hackygolucky    ] [ lihnuz_       ] [ philipd         ] [ stagas          ] 
17:54 [@Nexxy           ] [ crewmoss      ] [ Hadaka          ] [ Lions         ] [ philippkueng    ] [ stalled         ] 
17:54 [@piscisaureus_   ] [ crodas        ] [ hakunin         ] [ listochk_     ] [ PhilK           ] [ standoo1        ] 
17:54 [@tjfontaine      ] [ cronopio      ] [ halfhalo        ] [ liwen         ] [ philo23         ] [ stbuehler       ] 
17:54 [@TooTallNate     ] [ cTIDE_        ] [ hallas          ] [ ljharb        ] [ phI||Ip         ] [ stef__          ] 
17:54 [ 92AAAHVS7       ] [ CTPAX__       ] [ happyface       ] [ lmjabreu      ] [ phrearch        ] [ stephank        ] 
17:54 [ [[zz]]          ] [ Cultofmetatron] [ harrisonm       ] [ LocalPCGuy    ] [ pickels         ] [ StephenS        ] 
17:54 [ [Fudge]         ] [ cxreg         ] [ harth           ] [ looper        ] [ pickpuck        ] [ Steve|4D        ] 
17:54 [ [null]          ] [ cyberalien    ] [ harthur         ] [ LoppEar       ] [ pifantastic     ] [ stolsma         ] 
17:54 [ \mSg            ] [ d-snp         ] [ hartley         ] [ Lorentz       ] [ pig             ] [ stonebranch     ] 
17:54 [ ^esc            ] [ d_d_d         ] [ hatch           ] [ lrvick        ] [ Pilate          ] [ strax           ] 
17:54 [ __main__        ] [ dabarnes      ] [ Havvy           ] [ LuckyBurger   ] [ pinja           ] [ stride          ] 
17:54 [ _janne          ] [ daleharvey    ] [ hdoshi          ] [ luigy         ] [ Piotras         ] [ Stuk            ] 
17:54 [ _marvin1        ] [ DaMorpheuS    ] [ heath           ] [ Lunar_Lamp    ] [ plato           ] [ stutter         ] 
17:54 [ _marvin_        ] [ dan_johnsin   ] [ hellopat        ] [ luruke        ] [ poeticninja     ] [ stylus          ] 
17:54 [ _pid1           ] [ danheberden   ] [ HeN             ] [ lushious      ] [ polyrhythmic    ] [ styol           ] 
17:54 [ _sri            ] [ danmactough   ] [ herbnerder      ] [ m0            ] [ poorman         ] [ substack        ] 
17:54 [ AAA_awright     ] [ DarkArgon|away] [ herki1          ] [ M2Ys4U        ] [ postwait        ] [ sugyan          ] 
17:54 [ aaronj1335      ] [ darkc0met     ] [ heroux          ] [ m3pow         ] [ pquerna         ] [ supersym        ] 
17:54 [ AaronMT         ] [ daurnimator   ] [ herzi           ] [ M_F_B         ] [ prawnsalad      ] [ surf2me         ] 
17:54 [ abec0           ] [ davidsklar    ] [ hhuuggoo        ] [ macgregor     ] [ prema           ] [ sveisvei        ] 
17:54 [ aboudreault     ] [ dawolf        ] [ hij1nx          ] [ Mack          ] [ pretty_function ] [ Sven_vB         ] 
17:54 [ abstractj       ] [ dazoe         ] [ hipsterslapfight] [ madscientist  ] [ PrgmrBill       ] [ SvenDowideit    ] 
17:54 [ abumirqaan      ] [ dcamp         ] [ Hochmeister     ] [ Madwill       ] [ pringlescan     ] [ svnlto          ] 
17:54 [ adamquadmon     ] [ dch           ] [ howdynihao      ] [ majek         ] [ Proditor        ] [ swaagie[food]   ] 
17:54 [ admc            ] [ de_henne_     ] [ hueniverse      ] [ manacit       ] [ prosquare       ] [ swaj            ] 
17:54 [ adrianF         ] [ deadalus      ] [ Huevos          ] [ mandric       ] [ prtcl           ] [ switz           ] 
17:54 [ adrianlang1     ] [ dec           ] [ hunter_1_       ] [ mange         ] [ przemoc         ] [ syntax          ] 
17:54 [ AdrienBrault    ] [ deepy         ] [ iain__          ] [ ManneW        ] [ psino           ] [ syskk           ] 
17:54 [ Aidanie         ] [ deetb         ] [ iaincarsberg_   ] [ manuelbieh    ] [ purr            ] [ T-Co            ] 
17:54 [ Aikar           ] [ defunctzombie ] [ iam5o1|work     ] [ manutter      ] [ pyykkis         ] [ tahu            ] 
17:54 [ ajpiano         ] [ deimos        ] [ ianjm           ] [ mape          ] [ qard            ] [ tambaqui        ] 
17:54 [ aknewhope       ] [ dekz__        ] [ ickyb0d         ] [ mappum        ] [ qbit            ] [ tanepiper       ] 
17:54 [ akshayms        ] [ denysonique   ] [ igl             ] [ maqr          ] [ Qbix1           ] [ tassmjau        ] 
17:54 [ al3xnull        ] [ deoxxa        ] [ iksik           ] [ marcooliveira ] [ qmx             ] [ taterbase       ] 
17:54 [ alekibango      ] [ Derander_     ] [ il_padrino      ] [ marienz       ] [ qos|away        ] [ tboyt           ] 
17:54 [ alex88          ] [ derchiller    ] [ illunatic       ] [ markwubben    ] [ quillo          ] [ TDJACR          ] 
17:54 [ alexhancock     ] [ devdazed      ] [ ilteris         ] [ marlun        ] [ qwerty|wrok     ] [ teadict         ] 
17:54 [ alexwhitman     ] [ devoidfury    ] [ im0b            ] [ Marsup        ] [ r04r|away       ] [ tec27           ] 
17:54 [ AllStruck       ] [ devsharpen    ] [ ImBcmDth        ] [ martialcoder  ] [ r0tha           ] [ techkid6        ] 
17:54 [ andredublin     ] [ dguttman      ] [ inarru          ] [ maru_cc____   ] [ r1chard         ] [ TechnoCat       ] 
17:54 [ andrew12        ] [ dhpe          ] [ Incip           ] [ mary5030_     ] [ radiodario      ] [ teggi           ] 
17:54 [ Andy-           ] [ didiergm      ] [ infynyxx        ] [ masch         ] [ rads            ] [ TehShrike       ] 
17:54 [ AntelopeSalad_  ] [ digiwano      ] [ innociv         ] [ mashlol       ] [ raj             ] [ tellnes         ] 
17:54 [ appelgriebsch   ] [ diminoten     ] [ Internet13      ] [ matjas        ] [ raja            ] [ terietor        ] 
17:54 [ arduix          ] [ diogogmt      ] [ intripoon       ] [ matt_c        ] [ ralphholzmann   ] [ tg              ] 
17:54 [ arian           ] [ djazz         ] [ irclogger_com   ] [ mattdawson    ] [ ralphtheninja   ] [ tgriesser       ] 
17:54 [ armin           ] [ DjMadness_    ] [ ircretary       ] [ mattmueller   ] [ Ralt            ] [ thanpolas       ] 
17:54 [ asherkin        ] [ djoot         ] [ ironfroggy      ] [ maveonair_    ] [ ramitos         ] [ thealanwattsriot] 
17:54 [ ashnur          ] [ dKc           ] [ isaacs          ] [ mawuli_ypa    ] [ randalla1ordon  ] [ thedaywi1lcome  ] 
17:54 [ aslant          ] [ dleonardi     ] [ Iuz             ] [ max_well1r    ] [ rangle          ] [ TheFuzzball     ] 
17:54 [ asterick        ] [ dmogle        ] [ ivan\           ] [ mbor          ] [ Rantanen        ] [ theHansyG       ] 
17:54 [ aszeszo         ] [ dnyy          ] [ ivan`           ] [ mbroadst      ] [ Rapiere         ] [ thejefflarson_  ] 
17:54 [ atatsu          ] [ doffm         ] [ j0ni_           ] [ mcavage       ] [ rawtaz          ] [ TheJH           ] 
17:54 [ atomless        ] [ Domenic_      ] [ jackcviers      ] [ Mchl          ] [ rax0            ] [ TheLink         ] 
17:54 [ augustl         ] [ don_jones_    ] [ jagoda          ] [ mdevolving    ] [ Raynos          ] [ TheMoonMaster   ] 
17:54 [ aus             ] [ donghee_      ] [ jamescarr       ] [ meckanism     ] [ rcombs          ] [ therealkoopa    ] 
17:54 [ AustinMatherne  ] [ DoniRS        ] [ jammsen         ] [ med_          ] [ ree             ] [ thomblake       ] 
17:54 [ aut0mata        ] [ DonRichie     ] [ Jamy            ] [ medice        ] [ reid            ] [ thrcka          ] 
17:54 [ average         ] [ dook          ] [ jan____         ] [ mekwall       ] [ remysharp       ] [ thread          ] 
17:54 [ avital          ] [ doowb         ] [ janmower_       ] [ melter        ] [ rendar          ] [ threesome       ] 
17:54 [ avo_            ] [ dpemmons      ] [ jaredrhine      ] [ mephux        ] [ retornam        ] [ thyb            ] 
17:54 [ AWinterman      ] [ Draggor       ] [ jareiko         ] [ MerlinDMC     ] [ retrostyle|away ] [ tim_smart|away  ] 
17:54 [ awkorama1       ] [ draginx       ] [ jasonrm         ] [ merrihew      ] [ rgmarcha        ] [ timmywil        ] 
17:54 [ azbarcea        ] [ dreamdust     ] [ JasonSmith      ] [ mertimor      ] [ RichardBronosky ] [ tjholowaychuk   ] 
17:54 [ azend           ] [ drewp         ] [ jayk            ] [ meso_         ] [ rickibalboa     ] [ tjmehta         ] 
17:54 [ azhwkd|away     ] [ drey          ] [ Jaylee__        ] [ metadaddy     ] [ rideh           ] [ tklun           ] 
17:54 [ b1eedr          ] [ DriverDan     ] [ jayne           ] [ metellus      ] [ riku            ] [ tmpvar          ] 
17:54 [ Baastrup        ] [ drodger       ] [ jb_             ] [ mferranti     ] [ rioter          ] [ tomaw           ] 
17:54 [ bagro           ] [ DrPizza       ] [ jbueza          ] [ mfrauenh1ltz  ] [ Ritzton         ] [ tomb_           ] 
17:54 [ balgarath       ] [ drudge        ] [ jcrugzz         ] [ micahflee     ] [ RLa             ] [ TomRone         ] 
17:54 [ balupton        ] [ dscape_       ] [ jdelgado        ] [ michaeldeol   ] [ rmill           ] [ tomtomaso       ] 
17:54 [ baranaby        ] [ dshaw_        ] [ jden            ] [ mickhansen    ] [ robertj         ] [ tonist          ] 
17:54 [ barnes          ] [ dumbianca     ] [ jdunck          ] [ mikegerwitz   ] [ robinson_k      ] [ toonketels      ] 
17:54 [ barneybook      ] [ duncanbeevers ] [ jeffean         ] [ mikey_p       ] [ RobW_           ] [ toothrot        ] 
17:54 [ bartt           ] [ durnik        ] [ jefferai        ] [ mikl          ] [ roger_rabbit    ] [ topaxi          ] 
17:54 [ basiliothecat   ] [ ebright       ] [ jergason_       ] [ miosx         ] [ roger_raymond   ] [ topi`           ] 
17:54 [ Bass10_         ] [ echo|         ] [ jesseproulx     ] [ MiracleBlue   ] [ Rolken          ] [ torgeir         ] 
17:54 [ bastinat0r      ] [ ed209         ] [ jesster7        ] [ mirkok        ] [ rolleiflex      ] [ Torsten         ] 
17:54 [ bbttxu          ] [ edude03       ] [ Jester01        ] [ MitchW        ] [ rom1504_        ] [ tpatja          ] 
17:54 [ bear            ] [ efoster       ] [ jesusabdullah   ] [ mjr84         ] [ romainhuet      ] [ tphummel        ] 
17:54 [ beatpanic       ] [ eighty4       ] [ jeturcotte      ] [ mkm_          ] [ romainneutron   ] [ trepatudo       ] 
17:54 [ beawesomeinstead] [ einaros       ] [ jez0990_        ] [ mkozjak       ] [ RORgasm         ] [ trevnorris      ] 
17:54 [ beg             ] [ eins78        ] [ jibay           ] [ mlocher       ] [ rossk           ] [ trodrigues      ] 
17:54 [ ben_alman       ] [ ejnahc        ] [ jiboumans       ] [ mmalecki      ] [ rounce1         ] [ tttt_           ] 
17:54 [ benatkin_       ] [ ejnahc_       ] [ jimbot          ] [ mnaser        ] [ roxlu           ] [ tuhoojabotti    ] 
17:54 [ bencevans       ] [ Ekku          ] [ jimmyff         ] [ monokrome     ] [ rphillips       ] [ Tux             ] 
17:54 [ bengl           ] [ El_Angelo     ] [ jimt            ] [ morficus      ] [ rtgibbons       ] [ txdv            ] 
17:54 [ benjaminbenben  ] [ elijah-mbp    ] [ JJMalina        ] [ MoRn          ] [ Rubennn         ] [ tylersmith      ] 
17:54 [ Benvie          ] [ elliottcable  ] [ jjore           ] [ Mortchek      ] [ rudolfrck       ] [ Typo            ] 
17:54 [ Benvie_         ] [ emilsedgh     ] [ jkarsrud        ] [ mp_           ] [ RUI             ] [ Umren           ] 
17:54 [ Bergle_2        ] [ empee         ] [ jlord_          ] [ mpajor_o15    ] [ runningskull_   ] [ Urbanizator     ] 
17:54 [ beuk            ] [ emptynine     ] [ jmaugue         ] [ MrDHat        ] [ RushPL          ] [ Urbanizator__   ] 
17:54 [ bic2k           ] [ enaqx         ] [ jmoney          ] [ mrkurt        ] [ russell_h       ] [ Validatorian    ] 
17:54 [ Bilge           ] [ epa_          ] [ JmZ_            ] [ mrmoneyc      ] [ russfrank       ] [ Venemo          ] 
17:54 [ billy           ] [ Epeli         ] [ jn              ] [ MrNibbles     ] [ rvagg           ] [ Venom_X         ] 
17:54 [ billybob_han    ] [ epiloque      ] [ joaojero1imo    ] [ mrpibb        ] [ rwaldron        ] [ vervain         ] 
17:54 [ bingomanatee    ] [ ePirat        ] [ jocafa          ] [ mrrobbot      ] [ rworth          ] [ VesQ            ] 
17:54 [ bitfed__        ] [ er1c_         ] [ Joefish]off     ] [ mrvisser      ] [ ryanrolds       ] [ voodootikigod   ] 
17:54 [ bitZero__       ] [ Erakso        ] [ joeytwid1le_    ] [ mscdex        ] [ ryanseddon      ] [ vsayer_         ] 
17:54 [ BlackMag1k      ] [ ereslibre     ] [ JohnMcLear      ] [ munichlinux   ] [ rybnik          ] [ Wa              ] 
17:54 [ blobaum         ] [ Erriond__     ] [ JohnONolan      ] [ munro         ] [ s00pcan         ] [ wagtag          ] 
17:54 [ Blorb           ] [ EToS          ] [ jolo2           ] [ Musk          ] [ s3shs           ] [ wang            ] 
17:54 [ blup            ] [ euphoria      ] [ Jonathan1cClare ] [ myhrlin       ] [ s4muel          ] [ wangbus         ] 
17:54 [ bmac            ] [ eventualbuddha] [ JonathanMcClare ] [ myndzi        ] [ s5fs            ] [ wao             ] 
17:54 [ bmatusiak       ] [ EvilJStoker   ] [ Jonghwan        ] [ n0c           ] [ s_e             ] [ weal            ] 
17:54 [ bmatusiak_      ] [ EvilPacket    ] [ jonno11         ] [ nail_         ] [ sahlhoff        ] [ wedgeV_         ] 
17:54 [ bnoordhuis      ] [ EvilTownCat   ] [ JorgeRuiz       ] [ nanashiRei    ] [ Sam-T           ] [ wereHamster     ] 
17:54 [ bodisiw         ] [ execut3       ] [ joschi          ] [ naquad        ] [ sam_w           ] [ werle           ] 
17:54 [ BombStrike      ] [ exos_         ] [ joshfinnie      ] [ nathan7       ] [ samfalkner      ] [ wesbos          ] 
17:54 [ Bonuspunkt      ] [ EyePulp       ] [ joshie          ] [ ndngvr        ] [ sander_         ] [ whaley          ] 
17:54 [ booo            ] [ Ezku          ] [ joshthecoder    ] [ netj          ] [ sandfox         ] [ whyhankee       ] 
17:54 [ booyaa          ] [ fastman       ] [ jpiche          ] [ neverendingo  ] [ SargoDarya_     ] [ Willox          ] 
17:54 [ bradgignac      ] [ faulkner      ] [ JPT             ] [ Nexen         ] [ sashman         ] [ willwh          ] 
17:54 [ braincrash      ] [ felixge       ] [ jrdn            ] [ nicholas_     ] [ satyr           ] [ willwhite       ] 
17:54 [ brainproxy      ] [ fermion       ] [ jslatts         ] [ nicholasf     ] [ sawrubh         ] [ Will|-          ] 
17:54 [ breck7          ] [ fikst         ] [ jso             ] [ niclone       ] [ sayd            ] [ wivlaro         ] 
17:54 [ brettfrable     ] [ filleokus     ] [ jtwalters       ] [ nielsbusch    ] [ schredder       ] [ wizonesolutions ] 
17:54 [ brettlangdon    ] [ flagg0204     ] [ julianduque     ] [ niftylettuce  ] [ scott_gonzalez  ] [ wolfeidau       ] 
17:54 [ brianloveswords ] [ Fli-c         ] [ juliangruber    ] [ niggler       ] [ sdboyer_        ] [ wolfspraul      ] 
17:54 [ brocken         ] [ flyth         ] [ jvolkman        ] [ nikkimccavee  ] [ SebastianFlyte  ] [ wookiehangover  ] 
17:54 [ brutalhonesty   ] [ FMJaggy       ] [ jwulf           ] [ nikola        ] [ sebmck          ] [ WorkingClassDev ] 
17:54 [ brycebaril      ] [ FortuneDays   ] [ jxson_          ] [ NimeshNeema   ] [ SecretAgent     ] [ wraithgar       ] 
17:54 [ Bubo            ] [ FPSJosh01     ] [ k1ng            ] [ ninegrid      ] [ Secutor         ] [ wramthun        ] 
17:54 [ buritica        ] [ fpuc          ] [ ka2n_           ] [ nkohari       ] [ segomos         ] [ wwicks          ] 
17:54 [ bwall           ] [ franc         ] [ Kai`            ] [ nlf           ] [ Segrel          ] [ wyan            ] 
17:54 [ Bwild           ] [ frdmn         ] [ kaichanvong     ] [ NoFaTe        ] [ seich           ] [ wycats__        ] 
17:54 [ bytemask        ] [ FredC         ] [ Kaimei          ] [ npmbro        ] [ Sembiance       ] [ xat-            ] 
17:54 [ c4milo          ] [ fredsted      ] [ Kakera          ] [ nsm           ] [ sente           ] [ xdissent        ] 
17:54 [ Cainus          ] [ freeside      ] [ Kaltiz          ] [ nuba          ] [ ser             ] [ xissy           ] 
17:54 [ calvinfo        ] [ freethenation ] [ kanzure         ] [ Nuck          ] [ seric           ] [ xk_id           ] 
17:54 [ candlejackson   ] [ freewil       ] [ karupanerura    ] [ nutcase       ] [ Seventoes       ] [ xorspark        ] 
17:54 [ caolanm         ] [ Frippe        ] [ kborchers       ] [ NuZZ_         ] [ sg              ] [ xSmurf          ] 
17:54 [ CaptainBlaze    ] [ funkbox       ] [ kc8qvp          ] [ nzjames       ] [ Sgeo            ] [ xue             ] 
17:54 [ carif           ] [ FunnyLookinHat] [ keeto           ] [ o^_^o         ] [ Shadda          ] [ xxblakefailxx_  ] 
17:54 [ cbizzzzzl3      ] [ Furai         ] [ kessler         ] [ observ3r      ] [ Shadowized      ] [ yacks           ] 
17:54 [ cce             ] [ Fuu           ] [ Kester          ] [ occamshatchet ] [ shama           ] [ yankhates       ] 
17:54 [ ccohn_          ] [ fwg           ] [ kevinfagan      ] [ octetcloud    ] [ shanse          ] [ yano            ] 
17:54 [ cdepauw         ] [ FX80          ] [ kevino80        ] [ odyniec       ] [ shiftins        ] [ yawnt           ] 
17:54 [ celogeek`       ] [ g0z           ] [ KevinT          ] [ ofan          ] [ shihan          ] [ yhpark_talk     ] 
17:54 [ CestSebastian   ] [ gabriel       ] [ kevireillyy     ] [ ohcibi        ] [ shmoon          ] [ yields          ] 
17:54 [ cha0s           ] [ Gabriel403    ] [ kevwil          ] [ okt           ] [ shoerain        ] [ yinkei          ] 
17:54 [ cha0ticz        ] [ gabriev82     ] [ kfr2            ] [ omni5cience_  ] [ Shrink          ] [ yorick          ] 
17:54 [ ChaoticJ_       ] [ garann        ] [ kinabalu        ] [ oon_          ] [ shuaib          ] [ yorn            ] 
17:54 [ chapel          ] [ garren        ] [ Kingdutch       ] [ ootje         ] [ silvers_        ] [ YoY             ] 
17:54 [ chayin          ] [ Garrick       ] [ kingkarl85      ] [ optixx        ] [ simius_         ] [ yuya__          ] 
17:54 [ Cheery          ] [ garthk        ] [ KiNgMaR         ] [ oreth         ] [ sinclair-work   ] [ yzap            ] 
17:54 [ cheese1756      ] [ gavinr        ] [ Kjerski         ] [ orospakr      ] [ sir_tyrion      ] [ zadark          ] 
17:54 [ chiehwen        ] [ gbit86        ] [ klobucar        ] [ othiym23      ] [ sirecote        ] [ zaheera         ] 
17:54 [ chiel           ] [ gdbz          ] [ korilo          ] [ Outsider_     ] [ SirFunk         ] [ Zak             ] 
17:54 [ chilts          ] [ gde33         ] [ kornnflake      ] [ over_         ] [ sirkitree       ] [ zakora          ] 
17:54 [ chjj            ] [ geb           ] [ kppullin        ] [ owen1         ] [ sivoais         ] [ zaleb           ] 
17:54 [ chmac           ] [ generalissimo ] [ kraft           ] [ owenb         ] [ skebcio         ] [ Zamarok         ] 
17:54 [ chomwitt        ] [ gf3           ] [ krill           ] [ oxy_          ] [ sKeiths         ] [ zamnuts         ] 
17:54 [ chridal         ] [ ghoti         ] [ krishna         ] [ oz            ] [ slajax          ] [ zanea           ] 
17:54 [ chrisbuchholz   ] [ gildean       ] [ kristofers      ] [ pachet        ] [ Slashbunny      ] [ zapo            ] 
17:54 [ chrisdickinson  ] [ gkatsev       ] [ Kruppe          ] [ Pagan         ] [ slavsan         ] [ zapu            ] 
17:54 [ chuckpreslar    ] [ GlitchMr      ] [ Kudos           ] [ pandark_      ] [ slicky          ] [ Zauberfisch|idle] 
17:54 [ chunhao         ] [ gm0t          ] [ kuja            ] [ papachan      ] [ Slipo           ] [ zavier          ] 
17:54 [ ckknight        ] [ gnarf         ] [ kuuranne        ] [ par           ] [ slipstream      ] [ zdwolfe_        ] 
17:54 [ clarkk          ] [ GOMADWarrior  ] [ kzrl_           ] [ parasight     ] [ slurp           ] [ zedas           ] 
17:54 [ ClaudioAlbertin ] [ gorillatron   ] [ L_star          ] [ passcod       ] [ smlgbl          ] [ zeekay          ] 
17:54 [ clone1018       ] [ Gottox        ] [ LaMakina        ] [ patrickod     ] [ smtudor         ] [ zemm_           ] 
17:54 [ codepal         ] [ gozala        ] [ lanceball       ] [ Paul__        ] [ sneakyness      ] [ zenazn          ] 
17:54 [ codingkevin     ] [ grantbow      ] [ langdon         ] [ PaulCapestany ] [ snearch         ] [ zeromodulus     ] 
17:54 [ Codynyx         ] [ Gregor        ] [ LanyonM         ] [ PayPaul       ] [ snuggl          ] [ zeroz           ] 
17:54 [ conne           ] [ Grephix       ] [ latkinso42      ] [ pcarrier_     ] [ so              ] [ zerphian        ] 
17:54 [ Connorhd        ] [ groundwater   ] [ Lee-            ] [ pedropoc      ] [ solidoodlesuppor] [ zivester        ] 
17:54 [ conphile        ] [ Grun1         ] [ LeftWing        ] [ Pent          ] [ SomeoneWeird    ] [ zmanfx          ] 
17:54 [ conradev        ] [ gsf           ] [ legind          ] [ pepijndevos   ] [ Sonderblade     ] [ zomg            ] 
17:54 [ context         ] [ gshipley      ] [ leichtgewicht   ] [ percival      ] [ sordina3        ] [ zorzar          ] 
17:54 [ CookieNinja     ] [ Guest         ] [ lejonet         ] [ perlitch      ] [ sorensen        ] [ zz_angrysock    ] 
17:54 [ CookieNomster   ] [ Guest14712    ] [ LeoAtWork       ] [ PeterBooker   ] [ sproates        ] [ zz_Inoperable   ] 
17:54 [ copongcopong    ] [ guilleiguaran_] [ leonardo        ] [ peterbra1en1  ] [ Spudly          ] [ |Gobo|          ] 
17:54 [ CornishPasty    ] [ gulian_       ] [ leoncamel       ] [ peterfile     ] [ SpX             ] 
17:54 [ Couto           ] [ guybrush      ] [ leptonix        ] [ peterschmidler] [ squeakytoy      ] 
17:54 -!- Irssi: #Node.js: Total of 1072 nicks [8 ops, 0 halfops, 0 voices, 1064 normal]
17:54 -!- Home page for #node.js: http://nodejs.org/
17:54 -!- Channel #Node.js created Sat Jan 30 07:48:24 2010
17:54 -!- Irssi: Join to #Node.js was synced in 22 secs
17:55 < adamquadmon> I mean this https://npmjs.org/~
17:55 <@isaacbw> no, what is a selfmade npm
17:55 <@isaacbw> you mean you published a package?
17:55 < adamquadmon> sorry : https://npmjs.org/package/generator-angular-silex
17:55 < adamquadmon> yes
17:55 <@isaacbw> it won't automatically update with git. You have to 'npm publish' when you want a new version in npm
17:56 -!- mode/#Node.js [+o isaacs] by ChanServ
17:56 < peterschmidler> devoidfury: Thanks for your hint to the favicon middleware. If I use a custom favicon from a static folder it still puts two entries into the mongo sessions. How can this be solved?
17:57 < Madwill> deoxxa the code is this : http://pastebin.com/QPE6EtgA
17:57 < Madwill> but i don't think my problem is at code level right now
17:57 < Ekku> Please help me on my simple program in which I want to reterive some  data first and then want to proceed on that data basis for rest process    -- http://pastie.org/7748964
17:58 < devoidfury> peterschmidler: are you only running the one app locally? nothing else served on localhost?
17:58 < deoxxa> Madwill: you're not telling the socket.io server to listen at all
17:58 < adamquadmon> It says: cannot publish over existing version... this mean I should upgrade version each time a change occour on my github repo? I don't think this is a good workflow
17:58 <@isaacbw> no, but you have to upgrade version each time you publish to npm
17:58 < Madwill> let me google that answer
17:59 < Voting> confused... I'm editing the client.js file that my express app is supposed to be serving into the browser...
17:59 <@isaacbw> you shouldn't be publishing a new version to npm with every single commit
17:59 < Voting> and I'm not seeing those changes in the browser! 
17:59 <@isaacbw> adamquadmon: read this http://semver.org/
18:00 < peterschmidler> devoidfury: Not that I knew...
18:01 < devoidfury> peterschmidler: can we move this to the #express channel?
18:01 < peterschmidler> devoidfury: of course
18:03 < adamquadmon> So, which is the right workflow for developing a package? I'm developing a generator module for yeoman
18:03 < Madwill> also curous about that
18:05 <@isaacbw> adamquadmon: when you've done a certain amount of work on git, increment the version number in package.json and 'npm publish'
18:06 <@isaacbw> I like to set the version number to 'n.n.n-pre' between publishing
18:07 < ChrisMatheson> hey, anyone got any suggestions for module that can make safe changes to a package.json ?
18:07 < adamquadmon> Thanks a lot... I'm printing your link, now is time to leave... thanks again
18:08 < Madwill> damnit on linux i get the same error
18:08 < Madwill> loads forever
18:10 < Madwill> deoxxa what did you mean by not listening to "all" ?
18:13 < mscdex> ChrisMatheson: what do you mean? it's just json
18:17 < tpayne> how can i prevent my error pages from caching?
18:17 < tpayne> when node crashes and i restart it, it takes like 10 minutes before it actually comes up
18:18 < leichtgewicht> jQuery doesn't work with nodeJS 0.10.5 what else can i use for fast html get & find
18:18 < leichtgewicht> ?
18:20 < innociv> leichtgewicht, sizzle?
18:21 < leichtgewicht> and what do I use for dom ?
18:26 <@isaacbw> leichtgewicht: "jquery doesn't work with node.js" what
18:26 < jocafa> what are you trying to do, leichtgewicht?
18:27 < leichtgewicht> I am trying to require("jQuery"); the jQuery library from https://github.com/coolaj86/node-jquery
18:28 < jocafa> for what purpose?
18:28 < thomblake> I do not understand what that module is supposed to do.
18:29 < leichtgewicht> Anyway: it breaks with node-jquery.js:10 saying that prototype doesn't exist. Persumably because some related dependency changed.
18:30 < leichtgewicht> I installed it locally on a 0.8.9 and it works fine.
18:30 <@isaacbw> leichtgewicht: that package hasn't been touched in 5 months. Use jsdom: https://github.com/tmpvar/jsdom
18:31 < leichtgewicht> isaacbw: Can we have a blacklist of libraries/versions that are verified not working together?
18:31 < leichtgewicht> :D
18:32 < thomblake> leichtgewicht: I cannot imagine how someone would maintain that sort of graph.
18:33 < leichtgewicht> thomblake: anyone that stumbles over an error writes npm foundproblem jQuery
18:33 < jocafa> i'm sure voodoo would be involved
18:33 < jocafa> leichtgewicht:  what do you need jquery for?
18:33 <@isaacbw> you can check the github's issues
18:33 < leichtgewicht> For comfort.
18:33 < leichtgewicht> Does it really matter: I need to rewrite my code now.
18:33 < leichtgewicht> ?
18:34 < jocafa> what sort of dom stuff are you trying to do in node?
18:34 < leichtgewicht> I try to read some data from an not-api-page
18:34 <@isaacbw> scraping?
18:35 < leichtgewicht> yep
18:35 <@isaacbw> there's another package that's better if you're only reading data, but I forget what it's called
18:35 < nathan7> cheerio
18:35 <@isaacbw> ah, yea :)
18:35 < jocafa> that jquery module needs jsdom
18:35 < leichtgewicht> also build on jsdom.
18:35 < Madwill> ok so it was a problem with the code afterall...
18:36 < Madwill> damnit
18:36 < Madwill> the example i need to get working from the web is not working :(
18:36 < Madwill> maybe it was tied to a version of socket.io or something
18:36 <@isaacbw> jocafa: what?
18:37 <@isaacbw> ohh
18:37 <@isaacbw> wait what
18:37 < jocafa> see examples on https://github.com/coolaj86/node-jquery   … you need to attach jquery to a dom basically
18:37 < jocafa> (as far as i understand)
18:40 <@isaacbw> yea, don't use that package (right now at least) https://github.com/coolaj86/node-jquery/issues/52
18:45 <@isaacbw> npm is full of a lot of vaporware. Always check the github page before adding any dependencies
18:49 < leichtgewicht> As far as I can tell https://github.com/coolaj86/node-jquery/blob/master/lib/node-jquery.js#L8
18:49 < leichtgewicht> window.XMLHttpRequest can not be set.
18:49 < leichtgewicht> probably because the new jsdom window doesn't allow that.
18:49 < leichtgewicht> New VM feature ? 
18:49 < leichtgewicht> Not sure why this should work in 0.8 but not 0.10
18:50 < leichtgewicht> Anyways: I ported it to be used without jQuery.
18:51 < s3shs-> I'd like to move node_modules in to another folder on my system.  Any particular reason why this is a bad idea?
18:53 < st_luke> s3shs-: your global node_modules?
18:53 <@isaacbw> I love that mdn even includes the webkit variations of css properties
18:53 < s3shs-> st_luke, yeah.
18:53 < s_e> the global node_modules?
18:53 < s3shs-> s_e, yeah.
18:54 < s_e> you could move it and link it
18:54 < st_luke> s3shs-: that's fine, just make sure you tell npm where to install
18:54 < st_luke> `npm help config` and read the part about prefix
18:54 <@isaacbw> s3shs-: you aren't installing dependencies globally are you?
18:54 < s3shs-> I saw this an it scared me: https://github.com/isaacs/npm/issues/775
18:55 < s3shs-> Not totally globally.  I want all my client/server source in one tree.  And all vendor libs (dependencies) in another.
18:55 < st_luke> s3shs-: what is scaring you about that issue?
18:55 < s3shs-> Easier for searching, refactoring, check-ins, and even Doxygen.
18:55 < s3shs-> Search for wontfix.
18:56 < s3shs-> So npm looks in the cwd for "node_modules", I guess?
18:56 < s3shs-> cwd->pwd.
18:56 < st_luke> s3shs-: I know, I've read the whole issue multiple times before, I'm wondering what's so concerning about it for you?
18:57 < s3shs-> Just that maybe I'm missing something because it appears more complicated than I thought at first.
19:00 < st_luke> s3shs-: do you have a use case that's not covered there?
19:03 < leichtgewicht> forever.js:419
19:03 < leichtgewicht>   monitor.send(JSON.stringify(options));
19:03 < leichtgewicht>           ^
19:03 < s3shs-> I do not.
19:03 < leichtgewicht> TypeError: Object #<ChildProcess> has no method 'send'
19:03 < leichtgewicht> Today is not my lucky day. Now forever seems to be broken too: 
19:03 < SrPx> Is there a jQuery or similar lib that works with browserify and node.js at once?
19:05 < leichtgewicht> SrPx: I literally just found out that the node.js wrapper for jQuery is broken ;)
19:05 < SrPx> leichtgewicht: yea, when you browserify it it doesn't work, right?
19:05 < leichtgewicht> no: in general.
19:05 < SrPx> leichtgewicht: you mean the "jquery" module on npm?
19:06 < leichtgewicht> yes
19:06 < SrPx> leichtgewicht: how has nobody noticed that yet?
19:06 < leichtgewicht> ? people have noticed that, nobody fixed it.
19:06 < leichtgewicht> maintainerless project ...
19:06 < SrPx> leichtgewicht: :| they can't replace it?
19:07 < SrPx> as far as I know it's very simple to port
19:08 < SrPx> If I'm not mistaken, substack recommends using javascript dom libs... but that's just unfeasible for some things
19:08 < substack> what?
19:09 < SrPx> substack: sorry, wasn't it you who said that for me other day? When I first knew about browserify?
19:11 < substack> SrPx: I'm not sure what you mean by "dom libs"
19:13 < SrPx> substack: document.querySelector()
19:15 < SrPx> substack: that's what you said, but jQuery has a lot more than that, like element.html("..."), element.css({...}), element.on(fn), chaining and so on
19:23 < leichtgewicht> Any idea why http.get would return a ECONNREFUSED on node 0.10.5 on a ec2 ?
19:24 < Venemo> hey guys
19:24 < Venemo> what kind of resource (book, training, etc) do you suggest for someone who wants to start to take Node seriously?
19:35 < mkozjak> [net] is there a way to 'chain' events like when 'error' automatically goes to 'close'? i want to do timeout -> close..
19:52 < s3shs-> st_luke, nope.  I think I can use npm link
19:52 < s3shs-> :-)
19:53 < st_luke> cool :)
19:58 < s3shs-> st_luke, nmp link seems to fix both problems: (1) Moving my node_modules elsewhere and (2) referencing those modules with no changes to my code.  Sound right?
20:02 < st_luke> s3shs-: sounds good!
20:02 < s3shs-> It appears npm link is for individual modules.  Can I use it for the whole node_modules folder?  Or would I just create a standard symbolic link for that?
20:03 < phrearch> hi
20:04 < phrearch> im getting these socket hang up errors all the time
20:04 < phrearch> http://paste.kde.org/735908/
20:04 -!- mode/#Node.js [+o TooTallNate] by ChanServ
20:05 < tlrobinson> is there an easy way to get a log of when certain objects are instantiated (like Buffers, for example)
20:06 < mscdex> tlrobinson: well, you could easily for at least for Buffers that are instantiated in JS land by overriding the constructor
20:07 < pepijndevos> How can I transform a number to a 4-byte buffer for transmission?
20:07 <@TooTallNate> pedropoc: buffer.writeUInt32()
20:07 < mscdex> tlrobinson: otherwise you probably have to write some C++ and overwrite the Buffer implementation there, and then that would mean recompiling node
20:07 < JohnMcLear> I used Node For a NASA project: http://youtu.be/sSjPaAnw5Q4 is a video about it :)
20:08 < dspriggs> Is there a way to tell node to accept all invalid certs (when doing requests out)?
20:08 < JohnMcLear> what type of requests?
20:08 < mscdex> dspriggs: yes, set rejectUnauthorized to false
20:09 < pedropoc> pepijndevos: I think TooTallNate was talking to you -->>  buffer.writeUInt32()
20:10 <@TooTallNate> pedropoc: oh whooops, sorry!
20:10 <@TooTallNate> pepijndevos: indeed, as intended for you
20:10 < dspriggs> trouble is I dont have access to http.request as im using a module called request
20:10 < pepijndevos> TooTallNate: yay, thanks :)
20:11 < dspriggs> Can it be set globally?
20:11 < pedropoc> anyone using http://learnboost.github.io/kue/ in production?
20:13 < MoniqueL> nodetuts.com is a fine tutorial. 
20:13 < MoniqueL> Thanks;)
20:14 < pepijndevos> TooTallNate: that would be buf.readUInt32BE right? At least, I think network is always big endian
20:15 <@TooTallNate> pepijndevos: ya i mean, idk what you're interacting with, but whatever it is be sure you use the correct endianness
20:15 < pepijndevos> ok
20:15 < merpnderp> I'm wanting to use browserify to load my knockout viewmodels, but I want to include each viewmodel's html file template in the build. Anyone know of a good solution?
20:16 < dspriggs> mscdex: Is there a way to set rejectUnauthorized globally?
20:16 < kessler> Hey, I asked earlier about unfair load distribution within a node process cluster and  bnoordhuis replied thats its a known issue on linux, I'm running into this problem in windows as well .... any thoughts?
20:16 < werle> I just asked if anyone used substack's pattern in my company chat and received a handful of scowls 
20:16 < s3shs-> Bah.  I'll just set my NODE_PATH.  :-)
20:17 < kessler> (problem is that one process is favored much over others in the cluster)
20:19 < slicky> well that's awesome. Underscore's _.sortBy function returns different results from v1.3.3 to 1.4.4. Items with the same ordinality get placed differently. lesigh
20:20 < mscdex> dspriggs: no, not that i'm aware of
20:20 < mscdex> dspriggs: actually, i take that back
20:21 < pepijndevos> Is socket a subclass of buffer, or does it just happen to have a write?
20:21 < mscdex> dspriggs: you can set an environment variable: NODE_TLS_REJECT_UNAUTHORIZED="0"
20:21 < pepijndevos> In other words, does it support writeUint32BE directly
20:21 < slicky> lodash > underscore :X
20:23 < todor> hi all, I am a node noob and I need some advice
20:23 < slicky> todor, wear underwear with jeans.
20:23 < todor> i have this bit of code http://pastebin.com/um0LDbNC which tails a log file and writes the new lines to a socket
20:24 < todor> how come console.log outputs every line from tail, but socket.write outputs 1 in every few
20:27 < mkozjak> how come database.all (sqlite3) runs the callback function even though there's no results from that query?
20:29 < MoniqueL> I'm going to sleep
20:30 < mkozjak> nvm, should've just used database#each instead :)
20:30 < MoniqueL> bye!
20:30 < mkozjak> MoniqueL: bye!
20:52 < fejes> hello - I have a strange question, which is more of a nodejs/mongoAPI question.
20:53 < fejes> is it possible to only push values to the api where the field has a non-blank value?
20:53 < fejes> if so, where do I start with that, as so far, I've not found a way to drop the fields that are empty.
20:55 < pedropoc> fejes: have you taken a look at http://mongoosejs.com/ yet?
20:56 < fejes> nope... in that case, that sounds like a great place to start!
20:56 < fejes> thanks!
21:04 < cxreg> is it sane to put extra properties on an Error instance?
21:05 < leichtgewicht> What alternative do i have to "forever" ?
21:06 < owen1> is it safe to write to a file from multiple processes? (fs.appendFile)
21:07 < qard> Yep, lots of people add stuff to an Error instance.
21:09 < qard> The string output won't contain any extra stuff, but it's fairly common to add to Errors. Especially validation libraries.
21:09 < dspriggs> mscdex: Thanks!
21:09 < qard> They tend to have a generic error with an errors array that contains descriptive errors of each of the validation failures.
21:14 < wsx> yawnt, stfuu
21:15 < yawnt> stfu u
21:15 < yawnt> D:
21:16 < ustunozgur> Hi there, I'm reading a bunch of files, but I'm running into "too many open files" limit, I have changed the ulimit, but it didn't help. I have reverted to using readfilesync so that files are closed after each is processed, but I still get the error. Is there a way to force closing the file descriptor of a file read by readFile
21:16 < ustunozgur> ?
21:19 < Ted_> Hello all
21:19 < Ted_> Anyone have experience with node -msyl from Felixge?
21:19 < Ted_> err mysql
21:24 < pedropoc> leichtgewicht: windows or linux?
21:25 < leichtgewicht> linux
21:25 < leichtgewicht> But I kind a solved it otherwise already ... some portfowarding.
21:25 < leichtgewicht> good night!
21:26 < JohnMcLear> Ted_ I do
21:26 < JohnMcLear> But we'd rather you didn't do a survey
21:28 < Ted_> I'm pretty new to all this, my main question is, what is a good way to run a msql db on node and whats performance like?
21:29 < Bretzky> would anyone now why my mysql query callback isn't being called?
21:30 < Bretzky> this is the code
21:30 < Bretzky> http://pastie.org/7750105
21:31 < Ted_> seems good
21:32 < Ted_> hrmm.. I may not know enough to ask what Im trying to figure out
21:32 < Ted_> Im trying to find a list of things to study for a potential project. I know I want nodejs, because its JS and its fast
21:33 < Ted_> I need a db, I'm used to MySQL, I know a little about NoSQL, but looking at my db schema looks like I should stick with mySQL
21:33 < howdynihao> Bretzky: i'm going to guess createConnection is async
21:33 < timoxley> Ted_ unlikely
21:34 < Bretzky> howdynihao: how can I fix that?
21:34 < timoxley> the schema is just a model of relationships, doesn't encapsulate usage
21:34 < timoxley> Ted_
21:35 < Ted_> fair. I want to create a retail management system. I can visualize the schema for a traditional relational db but i don't know how Id do NoSQL
21:35 < Ted_> Speed and breadth of data are both important
21:35 < howdynihao> Bretzky: well actually take away process.exit
21:36 < Ted_> Spent the day reading up on Mongo...don't really know what to dive into
21:37 < Bretzky> howdynihao: that did it. thanks!
21:37 < timoxley> Ted_ just start building your app
21:38 < timoxley> Ted_ and fill in the db as you go
21:38 < timoxley> Ted_ over engineering tends to be a more common and horrifying problem than underengineering
21:39 < Ted_> Seems like a good idea. My default is to just go node-mysql. Any other personal suggestions?
21:39  * nathan7 complains about Mongo's consistency model
21:39 < Ted_> yeah I probably need to just dive in 
21:39 < timoxley> Ted_ redis is a good start
21:40 < nathan7> 'sup, timoxley 
21:40 < timoxley> Ted_ i'm starting to try out leveldb though, seems to be more aligned with node's modular philosophy
21:40 < jcrugzz> Ted_: im personally a fan of couch, but that is my subjective opinion ;).
21:40 < timoxley> sup nathan7
21:41 < nathan7> Ethanol.
21:41 < nathan7> That's what's up.
21:41 < jcrugzz> leveldb is also pretty cool but not ready for primetime over a network yet
21:41 < nathan7> leveldb is pretty rockin'
21:42 < nathan7> multilevel is cool stuff
21:42 < nathan7> I wanted to build a graph DB on levelDB
21:42 < nathan7> someone did a graph DB on it I believe
21:42 < nathan7> still a fun thing I wanted to try building
21:43 < timoxley> nathan7 yep https://github.com/mcollina/node-levelgraph
21:43 < nathan7> mhm
21:43 < Ted_> redis has a cool interactive tutorial 
21:44 < Ted_> ill have to go through this
21:44 < nathan7> timoxley: still, fun thing to build
21:44 < nathan7> I want to do graph-DBy stuff to more efficiently keep my data on people
21:45 < mscdex> stalker.js
21:46 < Domenic_> So profiling reveals that npmlog is taking up a lot of our CPU (12%)
21:46 < Domenic_> is stdout.write a blocking call or something?
21:46 < mscdex> when stdout is not being piped, yes
21:47 < Ted_> ZOMG so many database choices...
21:47 < nathan7> mscdex: absolutely
21:47 < nathan7> every time I see someone's address come by, someone's phone number, some piece of information
21:47 < nathan7> I store it
21:47 < mscdex> Ted_: time to make your own!
21:47 < zomg> Ted_: choice is easy... do you want to get work done? choose one you know. do you want to learn new things? choose whatever seems fun
21:47 < nathan7> and it always turns out to be useful
21:48 < ericelliott> I'm trying to set up LightTable to use a Node connection, but it can't find node in the path. How do I set a path that GUI applications can access on Mountain Lion?
21:49 < ericelliott> I've found a bunch of suggestions with Google, but they don't seem to be up-to-date with Mountain Lion.
21:49 < Ted_> Maybe Ill try to setup a test doc and put and get from a few and see whats good. Thanks for the tips
21:50 < deoxxa> sup nathan7
21:51 < Ted_> Thanks ya'll. sure ill be back
21:51 < timoxley> ericelliott setting the path for node should be no different to setting it up for any other executable
21:52 < s3shs-> What documentation generators work well with node JS?  Doxygen?  Anything else?
21:52 < nathan7> deoxxa: ETHANOL
21:52 < nathan7> ALSO BEING FORCED TO GUITARHERO
21:52 < deoxxa> ha
21:52 < ericelliott> tomoxley: setting the path for terminal use is different from setting the path for GUI applications, unfortunately. =P
21:52 < timoxley> s3shs- fox is pretty straightforward github.com/visionmedia/dox
21:52 < deoxxa> do me proud, little buddy
21:53 < timoxley> dox*
21:53 < s3shs-> thanks timfoxley.
21:53 < EyePulp> nathan7: You might be in an episode of the Twilight Zone.
21:53 < timoxley> ericelliott as in, that's not a node question.
21:53 < nathan7> i am a guitarhero failure
21:53 < nathan7> EyePulp: I'm not even sure what that is
21:55 < Domenic_> mscdex: thanks
21:55 < ericelliott> timoxley: I'll bet those helpful answers are a big hit with the ladies, eh? ;)
21:55 <@isaacbw> cut it out
21:57 < nathan7> deoxxa: what's up in deoxxaland?
21:58 < Domenic_> also: sounds like jacking up the ulimit -n everywhere is the way to go, any comments? any reason not to?
21:58 < deoxxa> nathan7: the usual - work, fun stuff
21:58 < nathan7> ulimits, damn things
21:59 < nathan7> I really wish I could go to conferences
21:59 < nathan7> Damned things are always outside my school holidays
21:59 < deoxxa> get older!
21:59 < deoxxa> haha
21:59 < s5fs> deoxxa: c'mon, give 'em time
21:59 < nathan7> deoxxa: That doesn't help
21:59 < deoxxa> well that's the only thing that will fix it
22:00 < nathan7> every second I get older q=
22:00 < s5fs> deep.
22:00 < s3shs-> timoxley, what do you use to convert the dox output to markdown
22:00 < s3shs-> ?
22:00 < nathan7> deoxxa: even when I could technically stop attending school I'd rather still finish it
22:00 < nathan7> deoxxa: In october I'm 18 and technically free to tell school to go fuck itself
22:01 < timoxley> s3shs --api
22:01 < timoxley> s3shs- --api
22:01 < s3shs-> thank you.
22:01 < s3shs-> (That's not in the docs.)
22:01 < timoxley> s3shs- dox --help
22:02 < nathan7> deoxxa: but I'd rather not my chances to do uni
22:04 < deoxxa> nathan7: worked for me!
22:04 < deoxxa> lol
22:04 < deoxxa> nathan7: but no, if you like the idea of uni, go do it
22:05 < nathan7> deoxxa: hm
22:05 < nathan7> deoxxa: My family on one side is all professors and shit
22:06 < nathan7> deoxxa: they have high expectations of me and stuff
22:06 < s5fs> nathan7: could be worse
22:06 < nathan7> Sure, sure
22:06 < deoxxa> they could be MURDER PROFESSORS
22:06 < deoxxa> actually that would be awesome
22:06 < s5fs> or just have plain ol' low expectations
22:07 < deoxxa> "dr chestpuncher"
22:07 < deoxxa> "sir necksnapper"
22:07 < s5fs> "homer, you're dumb as a mule and twice as ugly. you'll never amount to nuthin'"
22:07 < deoxxa> lol
22:08 < nathan7> deoxxa: heh
22:08 < deoxxa> https://github.com/deoxxa/xml-c14n this was surprisingly not annoying
22:09 < nathan7> biologists, actually
22:09 < nathan7> I have fuckall with biology
22:09 < nathan7> chemistry, bitches
22:09 < nathan7> though Computer Science is damned tempting too
22:10 < niggler> isaacbw: http://www.slant.co/topics/102/~what-is-the-best-variant-of-coffeescript
22:10 < deoxxa> niggler: i like that really minimal version
22:10 < deoxxa> niggler: i think they call it javascript
22:11 < niggler> 4/8 votes for javascript
22:11 < niggler> 2/8 for livescript
22:11 < nathan7> coco is cool
22:11 < nathan7> but I'd never write any serious code in it
22:12 < niggler> is anyone writing serious code in coffee script or any of the compile-to-js languages?
22:12 < s5fs> I am not.
22:12 < niggler> from what I've seen, the people that are using coffee script wrote code in JS first and then js2coffee'd it
22:12 < s5fs> seriously?
22:12 < urthen> niggler: that's, like, the worst of both worlds.
22:13 < ljharb> haha JS compiles to CS
22:13 < ljharb> hilarious
22:13 < niggler> heh agreed urthen 
22:13 < nathan7> they're interesting toys
22:13 < cTIDE_> i have written some in the past
22:13 < urthen> i have nothing so much against coffee script other than whenever I see it I go "wtf language is this?"
22:13 < nathan7> and a good source of interesting syntactic constructs
22:14 < nathan7> syntax needs to be iterated on
22:14 < niggler> the problem is that javascript (at least in its current incarnation) is good enough for most cases
22:14 < ljharb> i don't think that's a "problem"
22:14 < Havvy> I'm liking how TypeScript is going.
22:14 < niggler> so alternative languages have an incredibly high bar 
22:15 < cTIDE_> yeah, javascript is fine
22:15 < cTIDE_> after doing a 6ish month contract writing coffeescript
22:15 < cTIDE_> i was just as happy to go back to JS
22:15 < cTIDE_> i think it's slightly better, but the downsides are worse than the upsides imo
22:16 < niggler> isaacs wrote a nice blog post on the matter
22:16 < Havvy> niggler: Link?
22:16 < niggler> http://blog.izs.me/post/10213512387/javascript-is-not-web-assembly
22:16 < cTIDE_> downsides are more cultural / coworker related
22:16 < s5fs> Havvy: my only concern with typescript is microsoft, they have not traditionally been friends of open source
22:16 < cTIDE_> than due to nature of the language itself
22:16 <@isaacs> niggler: i think you're the biggest fan of that post :)
22:16 <@isaacs> niggler: i can tell when you link someone to it, because i get a bunch of angry tweets in the days that follow.
22:17 < Havvy> s5fs: TypeScript is open source.
22:17 <@isaacs> niggler: which basically boil down to ehteir YUH HUH!! or HOW COME YOU HATE COFEESCRITP!!
22:17 < Havvy> "Compiler as a Service"
22:17 < niggler> lol isaacs the thing is people give credence to your opinion
22:17 < Havvy> niggler: Ah, that one.
22:17 <@isaacs> niggler: fwiw, i think typescript is pretty rad.
22:17 <@isaacs> niggler: at least, i think it's a good language.
22:17 < niggler> so citing you is far better than me saying essentially the same thing
22:17 <@isaacs> niggler: yah, then i catch the flack for it ;P
22:18 < niggler> twitter condom
22:18 < s5fs> Havvy: I understand that typescript is open source, I was just expressing my concern with anything microsoft, justified or not. i followed hanselman and the .net team for a while with .net mvc and think they have some sharp folks with good intentions, no question.
22:18 < niggler> typescript isn't really taking advantage of the type information
22:20 < niggler> is IE11 going to have native support for TS?
22:20 < Havvy> I don't think it is.
22:21 < ljharb> isaacs: that's an awesome post tho :-)
22:21 <@isaacbw> I feel like ie9 just came out
22:21 <@isaacs> thanks.
22:22 < urthen> At least we can still count IE versions..... chrome's up to what, 20 now? 30?
22:22 < muloka> 26 i believe
22:22 < niggler>  26.0.1410.65 on osx
22:22 < slicky> Version 28.0.1487.0 canary
22:23 <@isaacbw> niggler: really? arch only has 26.0.1410.63 :(
22:23 < niggler> screw arch isaacbw 
22:23 < niggler> join the debian devolution
22:23 <@isaacbw> I want to be the very best
22:23 <@isaacbw> Like no one ever was
22:23 < slicky> gotta catch em all is your goal?
22:24 <@isaacbw> all the versions
22:24 < Havvy> Firefox is at 20
22:24 < urthen> slackers.
22:24 < niggler> safari is at 6.0.4
22:24 < urthen> whatever happened to semantic versioning.... it just became a race to put the biggest number next to your browser
22:25 < urthen> Browsers! Where the standards are all made up and the versions don't matter
22:25 < niggler> html question: do people still use strike tags?
22:25 <@isaacbw> that's what css is fo
22:25 <@isaacbw> *r
22:25 < Havvy> urthen: Actually, I think they just stopped caring about semantics.
22:25 < slicky> <strike>nope</strike> Yeah
22:25 < niggler> how about double strike?
22:26 < urthen> niggler: it's obsoleted in HTML5, at least.
22:26 < slicky> strike is content, hence why it's not suppose to be style
22:26 < slicky> even though you can do it :D
22:26 < urthen> you can _do_ a lot of things, doesn't mean you should!
22:26 < slicky> nm it is obsolute
22:26 < slicky> ...obsolete
22:26 < niggler> can you double-strike in css?
22:27 < slicky> As all purely styling element, <strike> has been deprecated in HTML 4 and XHTML 1, and obsoleted in HTML5. If semantically appropriated, i.e. if it represents deleted content, use the <del> instead; in all other cases use a <span> element and style it with the CSS text-decoration property, with the line-through value.
22:27 < slicky> so, <del>
22:27 < slicky> fwiw
22:27 <@isaacbw> woo for a strong separation of semantics and style
22:28 <@isaacbw> css 4 lyfe
22:28 <@isaacbw> damn, I just god some sandwich in my keyboard
22:28 <@isaacbw> *got
22:28 < urthen> what have you learned?
22:28 < urthen> niggler: No doublestrike AFAIK
22:29 < slicky> http://stackoverflow.com/questions/6395890/how-to-double-strikeout-a-text-in-html
22:29 < niggler> well fortunately excel doesn't support double strike
22:31 < niggler> here's where I'm convinced microsoft just pulled xml tags out of thin air
22:31 < niggler> http://hastebin.com/woweroliri.xml
22:32 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:32 < niggler> that is how http://imgur.com/U4UyURw is represented
22:32 < cxreg> o/` just because you throw doesn't mean you're gonna die, you gotta try {} try {} try {} o/`
22:36 < deoxxa> niggler: does that thing have a default namespace or something?
22:36 < niggler> so this is where ECMA and ISO meet bullshit
22:37 < urthen> niggler: now you know why all microsoft office files are multi-megabyte files
22:37 < niggler> the ECMA and ISO specs both cite the MS RTF spec
22:37 < niggler> I strongly suspect that both specs were written by microsoft 
22:38 < niggler> because if anyone with half a brain tried to go through a section, they'd immediately see that they are incomplete
22:39 < niggler> heh urthen this isn't the worst
22:39 < niggler> so in an effort to "compress" formulas
22:39 < niggler> instead of storing a plaintext version, older versions of excel store a "parsed" version
22:40 < niggler> but the problem is that, in pretty much every case I've tested, it would take fewer bytes to store the text in-verbatim than to store the parsed version
22:41 < niggler> oh speaking of file size, anyone know of a good JS zip implementation?  jszip and zip.js both choke on large (100MB) zip files
22:43 < ericelliott> niggler: sounds like you need one that supports streams. =)
22:44 < deoxxa> streaaaammmmzzzzzzzzz
22:44 < niggler> ericelliott recommendations?
22:44 < urthen> niggler: run it through a node server with gzip enabled! :-P
22:45 < ericelliott> streams are the answer to everything.
22:45 < niggler> streams: the jquery of nodejs?
22:45 < ericelliott> ;)
22:47 < davesque> simple question: what does node use to freeze dependencies?  like python's virtualenv?
22:47 < urthen> davesque: you write them in package.json
22:47 < davesque> it should be idiomatic for grunt
22:48 < davesque> yes, but is there something you can do to determine current package versions and update package.json?
22:48 < ericelliott> niggler: I don't know if this is helpful - https://github.com/wellawaretech/node-zipstream
22:48 < davesque> like python's "pip freeze > requirements.txt" ?
22:49 < urthen> i don't know about automatically updating package.json, but you can list installed packages with npm list
22:49 < niggler> the mechanism is different
22:50 < niggler> the dependencies are generally local for nodejs
22:50 < niggler> they are stored in a node_modules subdirectory of the project
22:50 < davesque> right
22:50 < ericelliott> davesque: three interesting options: 1) npm shrinkwrap - 2) let your revision control handle it, 3) build a zipped package with node_modules locked down.
22:50 < niggler> while with pip you usually install a version globally
22:50 < niggler> the easiest way is to specify versions in package.json
22:51 < davesque> pip installs into your virtualenv if you have one activated
22:51 < niggler> "dependencies": { "foobar": "1.1.0" }
22:51 < urthen> davesque: correct. with npm, you get this "free" without having to muck with virtualenvs
22:51 < davesque> i'll look into shrinkwrap...it seems there's also "npm install <package> --save"?
22:53 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:54 < davesque> thanks folks
23:11 < thealphanerd> hey al
23:11 < thealphanerd> l
23:30 < nebben> I am looking for a good way to find help writing a Duplex Stream subclass using the new stream2 interface. I am wrapping dnode and mux-demux logic in my library and want to present a stream interface. Does anyone have any good tutorial recommendations? I have gone through the API docs a lot, I just can't grok how to do _write and _read calls that work with the dnode and mux-demux instances
23:34 < AWinterman> you might be on a later version of stream than this document covers, but I found it useful for 0.8 style streams: https://github.com/substack/stream-handbook
23:35 < nebben> @AWinterman - yes thanks - I am familiar. I suppose I have specific questions about how to hook up the streams dnode and mux-demux present, inside a stream class. Unfortunately stream-handbook is more of a users guide then a how-to
23:37 < AWinterman> oh, well good luck :)
23:40 < timoxley> ericelliott just had same issue. this fixed it http://serverfault.com/questions/16355/how-to-set-global-path-on-os-x/277034#277034
23:41 < AWinterman> nebben: what problem are you running into specifically?
23:44 < nebben> I have a module that ports an API over a stream using mux-demux and dnode. Right now a user passes in a stream, I hook them up to mux-demux and dnode and do the rest. What I want to do is write a Duplex stream using the new streams2 API so that the user can do mymodule.pipe(stream).pipe(mymodule). What I am having troubles understanding is how to implement the _read and _write calls
23:45 < nebben> the _read(n) call is not aware of a source, and the module isn't aware of the source until the user pipes to it
23:46 < nebben> so when implementing a Duplex that will setup protocols to run across the stream, what should _read() read?
23:52 < mscdex> nebben: if you're simply transforming data, why not use a Transform stream?
23:54 < nebben> I replicated the LevelUP API remotely with dnode and mux-demux. Its not really transforming data.
23:54 < nebben> Any calls on the remote API trigger the the calls on a remote LevelDB database
23:56 < rvagg> nebben: levelnet?
23:56 < nebben> ha yes
23:57 < nebben> I could have pointed that out
23:57 < davesque> hello, i'm running a test suite using grunt-contrib-jasmine and i'm looking for a simple way to get a debugging console in the test code
23:57 < rvagg> nebben: you should join us in ##leveldb btw
23:57 < davesque> any easy way to do this?
23:57 < nebben> cool ok
23:58 < beg> Hey how can I cancel a shutdown? :s
23:58 < beg> i.e when i press ctrl+c in linux
--- Log closed Thu May 02 00:00:26 2013
