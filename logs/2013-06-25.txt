--- Log opened Tue Jun 25 00:00:18 2013
--- Day changed Tue Jun 25 2013
00:00 < ccowan> isaacs: I'm at my buddies beach house in Capitola right now and he has this Stainless Steel pan that is just amazing. He also has a gas stove (we have electric at home) and I think I made the best set of eggs this morning. Only the yoke was runny but the white stuff was totally cooked. 
00:00 < ccowan> I should have taken a photo
00:01 <@isaacs> ccowan: yeah, the key is coconut oil, more than you think you need, super hot.
00:02 <@isaacs> ccowan: and, ideally, a timer.
00:02 <@isaacs> 30s is the magic number.
00:02 <@isaacs> the coconut oil should be watery, but not smoking
00:03 < krnflake> my gf uses coconut oil to bright her teeths :) just saying^^
00:03 < ccowan> isaacs: Do you top your eggs with anything or just eat them plain? I smother them with Sirachia and when that mixes with the yoke it makes this yummy sauce.
00:03 < jdelgado__> lol what
00:03 < jdelgado__> does that work
00:04 <@isaacs> ccowan: srircha and toast, usually
00:05 < krnflake> jdelgado__ http://www.reddit.com/r/TheGirlSurvivalGuide/comments/1cbnfh/oil_pulling_to_whiten_teeth_does_it_work/
00:05 < ccowan> isaacs: YEAH BUDDY! That's the best! Have you tried eggs in a basket? 
00:05 < jdelgado__> htop
00:05 < jdelgado__> oops sorry wrong window lol
00:05 < jdelgado__> krnflake: lol nice!
00:05 <@isaacs> ccowan: yep.  but it's a lot more work
00:06 <@isaacs> i can crank out two perfect over-easys in 45 seconds or so
00:06 <@isaacs> more like a minute, i guess, to heat the pan
00:07 < krnflake> https://vine.co/v/bxUZTmXElTA :)
00:07 < ccowan> isaacs: Another good thing is to make Ramen noodles (without the seasoning packet). Cook two eggs over easy then put them on top the noodles and cover with Sriracha.
00:08 < ccowan> when you break the yokes it makes a yummy noodlely spicy mess
00:10 < ckknight> ccowan: ooh, I should try sriracha
00:13 < ccowan> ckknight: It's the best… We get these eggs near our house from a kid who selling then to raise money for his mission. The yokes are bright orange. When that mixes with the sriracha sauce it makes this amazing cholesterolly mixture of goodness. I'm usually licking the plate at the end of my breakfast.
00:14 < ccowan> I want to get my own chickens just for my morning eggs.
00:18 < Seventoes> so i'm trying to build an app that's going to just be a server for a notification app
00:18 < Seventoes> the entire thing is going to be based on a cron job that runs once per minute
00:19 < Seventoes> the problem is when i run the script, it just exits :P how can i tell node "don't exit this script until I tell you to"?
00:19 < Seventoes> it doesn't give the cron job a chance to run
00:22 < jdelgado__> Just got my das keyboard, I don't know how I ever coded without it.
00:25 < ccowan> jdelgado__: which switches?
00:25 < jdelgado__> ccowan: Browns
00:25 < paulkon> $140 keyboard?
00:26 < paulkon> it's nice but...
00:26 < Seventoes> paulkon: how much time to you spend at your keyboard?
00:26 < jdelgado__> Yeah
00:26 < jdelgado__> It feels like it
00:26 < jdelgado__> Worth every penny, honestly.
00:26 < ccowan> jdelgado__: Nice… I have a keyboard with Blues… It's freaking loud but I love it
00:26 < paulkon> a lot
00:26 < paulkon> all day
00:26 < Seventoes> paulkon: so why not invest in a great keyboard? :D
00:26 < jdelgado__> Hah, I used the blues once and got a headache
00:26 < paulkon> true
00:26 < Seventoes> that's where your hands are going to be all day
00:26 < ccowan> This is my next keyboard
00:26 < ccowan> http://mechanicalkeyboards.com/shop/index.php?l=product_detail&p=322
00:26 < jdelgado__> Yeah ^ thats how I took it
00:26 < jdelgado__> And i bought the one without lables, so I feel really cooL!
00:27 < Seventoes> lol
00:27 < paulkon> I've gotten tired of this http://www.logitech.com/en-us/product/illuminated-keyboard-k740?crid=26
00:28 < paulkon> bought it before I started coding and now it's.... well, not sure how to explain it
00:28 < paulkon> too low profile I guess
00:28 < paulkon> I used to like the mac style, touch type, backlit keyboard
00:28 < Seventoes> i still use apple keyboards everywhere
00:29 < Seventoes> love em
00:29 < paulkon> and I still like the backlit feature but I don't even look at the keyboard anymore
00:29 < paulkon> backlit looks nice though
00:29 < jdelgado__> paulkon: That looks like carpol tunnel waiting to happen
00:29 < Seventoes> i'm not worried about the backlight, i just like the feel
00:29 < Stephen> Has anyone here had experience with StrongLoop?
00:29 < ccowan> There is something satisfying about a mechanical keyboard. I don't think I have the vocabulary to quantify it. It just feels good.
00:29 < Stephen> I just came upon them, and I'd like to get some opinions on their efforts
00:29 < jdelgado__> Stephen: I dont understand why on earth anyone would use it over plain node.js
00:30 < Seventoes> just checked out StrongLoop, first impression is "RedHat Vs CentOS"
00:30 < jdelgado__> Stephen: It's honestly just a way for the authors to get money because companies want a "commercial" product
00:31 < paulkon> jdelgado__: is there any store that carries das keybaord that I can try it at?
00:31 < paulkon> like frys or something
00:31 < Stephen> ccowan: The click is satisfying. Quiet keyboards be damned. Phones added haptic feedback for a reason.
00:31 < Seventoes> oooo they do have "1.x" version numbers
00:31 < Seventoes> node.js can't come close! have all of my money!
00:32 < ccowan> paulkon: They had them at Frys last time I was there
00:32 < Stephen> jdelgado__: Which I don't disagree with. I've had plenty of experience with dev managers who implement pay libraries over F/OSS strictly for the support aspect
00:32 < paulkon> yeah, i just want to try it out and see first
00:33 < Stephen> jdelgado__: It's all in how well they support it. I'm curious if their release of nodejs is any different from the vanilla v0.10.11, save the libraries they include
00:34 < Stephen> oops
00:34 < Stephen> left, back now. if any of you responded, please repeat
00:35 <@isaacbw> no one responded
00:35 <@isaacbw> :(
00:35 < Stephen> also: I'm looking for node integration with the libkvm api. However, it looks like node has some development around BSD's implementation, so I keep running into bug reports instead of libraries
00:35 <@isaacbw> paulkon: have you used a model m?
00:35 < Stephen> isaacbw: Hola sir.
00:35 < paulkon> isaacbw: nope
00:35 <@isaacbw> well I don't know of anyone being unhappy with a das keyboard
00:36 < paulkon> but the reviews for this model s really make me want to buy it http://www.amazon.com/computers-accessories/dp/B003M4XGI4
00:36 <@isaacbw> the blank keys seem a bit silly to me
00:36 < paulkon> what's the diff between the model m/s?
00:36 <@isaacbw> model m is an old ibm keyboard
00:37 <@isaacbw> compared to the model m, das keyboards take less pressure and feel a little muddy
00:37 < paulkon> ah, the classic ibm
00:37 <@isaacbw> but compared to regular keyboards with rubber domes, das keyboards are heaven
00:37 < ccowan> I'm lot 1337 enough to use blank keys
00:37 < ccowan> *not
00:37 <@isaacbw> I don't have muscle memory for most of the non-character keys
00:38 < paulkon> yeah I'm using a keyboard on the opposite end and I lose focus when typing sometimes because the domes are so wobbly
00:38 < Stephen> Here you go:
00:38 < Stephen> http://www.pckeyboard.com/
00:38 < Stephen> They still make spring-loaded keyboards
00:38 <@isaacbw> that's the one I had
00:38 <@isaacbw> they bought ibm's patent
00:39 <@isaacbw> so it's the exact same thing, plus usb
00:39 < paulkon> isaacbw; what keyboard do you use atm?
00:42 <@isaacbw> das
00:43 < paulkon> which type? model s tactile?
00:43 <@isaacbw> um
00:43 <@isaacbw> the clickiest one
00:43 <@isaacbw> with letters on the keys
00:44 < paulkon> this one then http://www.daskeyboard.com/model-s-professional/
00:44 <@isaacbw> blue
00:44 <@isaacbw> cherry mx blue keys
00:44 <@isaacbw> yea that one
00:44 <@isaacbw> I've got one dud key that doesn't click properly though
00:44 <@isaacbw> it feels like an mx brown or something
00:48 < Stephen> Perhaps stupid question: What is Joyent's interest in illumos?
00:51 < Technodrome> any send mail clients in node.js?
00:51 <@isaacbw> so I'm installing a windows VM on my linux box. I feel like I'm selling my soul
00:52 < Technodrome> never mind got it 
00:52 < Stephen> isaacbw: Does imagining something mean you are doing it?
00:53 <@isaacbw> when it comes to microsoft products, yes
00:53 < ChrisPartridge> Stephen: perhaps checkout smartos
00:53 <@isaacbw> this is probably going to be very unpleasant to use
00:53 <@isaacbw> cad software on a windows 7 vm
00:53 < ChrisPartridge> ew
00:54 < Stephen> Ouch
00:54 < Stephen> One would think that software would be high on WINE's list
00:54 <@isaacbw> I don't know, maybe
00:54 <@isaacbw> wine feels way too dirty for me to taint my system with though
00:55 <@isaacbw> you'd think cad software would be at least ported to *nix since a lot of workstations are running it
00:55 <@isaacbw> autocad cad software, that is
00:56 < squeeks> "workstations" ha, i haven't heard that in years.
00:56 <@isaacbw> lol
00:56 <@isaacbw> there are still a few companies selling "workstations"
00:57 < squeeks> my "workstation" is two clunky boxes I found in the office, plus 3 monitors, a burnt disc of umbongo linux and synergy.
00:57 < s5fs> isaacbw: sparcstation ftw
00:58 < gaf> oh, I'm about to buy a workstation :)! http://gravitonus.com/lang/en-us/index/iclubby/
00:58 < niggler> isaacbw are you still using arch?
00:59 <@isaacbw> lol yea
01:01 < niggler> you need to upgrade to windows 8
01:01 <@isaacbw> yea? I'll put it on my todo list
01:02 < niggler> gaf i don't see a cupholder
01:09 < gaf> niggler, optional
01:10 < garthk> Anyone using Riak? Is there some way to persuade it to issue a redirect when someone tries to GET a particular object? 
01:11 <@isaacbw> oh my god I haven't used internet explorer in so long
01:12 < ChrisPartridge> isaacbw: you're missing out.. *cough*
01:13 <@isaacbw> this is p cray
01:14 < garthk> TIL 'npm version'.
01:14 < Stephen> Note: People asking "Anyway I can just do that in PHP?" in a Javascript related channel should be shot.
01:16 < bulkan> Does github.com/visionmedia visit this channel ?
01:16 < bulkan> TJ Holowaychuk ?
01:16 < ChrisPartridge> that's him
01:17 < paulkon> bulkan: yes, and #express/#components
01:17 < bulkan> paulkon:  thanks. There are too many old issues open at https://github.com/LearnBoost/kue/issues/
01:18 < bulkan> that should be closed so that people don't assume the project is dead
01:18 < paulkon> I think he's open to new maintainers
01:19 < paulkon> he and the team he works with uses something else now I think
01:19 < paulkon> queuing without the front end I assume
01:19 < bulkan> paulkon: do you know the name of the "something else" that they use ?
01:19 < bulkan> :)
01:20 <@isaacbw> twitter has a pretty cool queue system written in scala
01:20 <@isaacbw> kestrel I think
01:23 < bulkan> awesome
01:25 < paulkon> bulkan: https://github.com/solid/queue
01:25 < paulkon> I think
01:28 < bulkan> paulkon: that is a very lean queue. Having a UI helps alot
01:30 < paulkon> yeah
01:36 < bulkan> like this issue is 4 months old  ! https://github.com/LearnBoost/kue/issues/181
01:36 < niggler> github site is changing too much
01:41 <@xyxne> says the one in the HFT business
01:47 < niggler> you think it hasn't changed?
01:47 < Stephen> It has to keep up with FB updates
01:47 < Stephen> or the developer's developers will feel left out
01:48 <@isaacbw> github is fugly now
01:48 <@xyxne> what about the developers developers developers?
01:48 < niggler> how about the developers' developers' developers?
01:48 <@xyxne> muahaha
01:48 < niggler> jinx @ xyxne 
01:49 <@xyxne> only cuz I'm reading your screen
01:49 < niggler> the framework for writing frameworks
01:49 < niggler> and the framework for writing frameworks for writing frameworks 
01:49 <@xyxne> slightly related
01:49 <@xyxne> I found a frog on my frog
01:50 < niggler> I'm glad you didn't find a frog in your frog
01:50 < niggler> in which case id ask why you were looking in your frog in the first place
01:50 <@xyxne> http://instagram.com/p/a7zCyVE7uP/
01:50 < substack> durnik: dnode can send circular refs. You should read the docs instead of guessing.
01:51 < niggler> substack how do you handle "debug mode" flags?
01:55 < substack> niggler: don't do that
01:56 < niggler> maybe verbosity is the better word
02:12 < owen1> i want to adopet the 'wallmart approach' for migrating to node - put a proxy infront of the legacy system and slowly convert small parts to node. can anyone give some tips on how exactly it's being done? 
02:12 < ccowan> We are doing this for http://plus3network.com
02:12 < niggler> how does that differ from the walmart approach owen1?
02:13 < owen1> do i add some logic to my proxy and route some requests to node? or do i always routes to my legacy, and calls node from my legacy?
02:13 < owen1> (by extracting small parts of the legacy into node)
02:13 < ccowan> owen1: The way we did it was this. All our requests go through node.js and any urls that the node app can't handle get proxied to our legacy stack (which is PHP)
02:14 < ccowan> owen1:  We share all our session information via Redis
02:14 < owen1> so u got some routing in the proxy app. 
02:15 < ccowan> owen1: We are using express and we have a catch all route that does the proxying
02:16 < bulkan> This is funny, three fixes for this issue and it's still open https://github.com/LearnBoost/kue/issues/33
02:16 < owen1> ccowan: nice! can u elaborate about redis? if u use encripted cookies-based session, do u still need redis?
02:18 < ccowan> Since our legacy system is PHP we can't really use cookie based sessions because of the way PHP serialized/deserializes the cookies and starts the session. 
02:18 < owen1> ccowan: so what information do u store in redis?
02:18 < ccowan> owen1:  Session details (like the current logged in user, etc)
02:19 < ccowan> owen1:  I just wrote a PHP custom session handler that was compatible with connect-redis
02:20 < ccowan> what's your legacy system written in?
02:20 < owen1> ccowan: so on every request, how do u if this request belong to user x? don't u need to store some key on each incoming http request and match that key with your redis?
02:20 < owen1> rails
02:20 < Stephen> Node for Android
02:20 < Stephen> https://github.com/joyent/node/commit/5e4e8ec429381a8d1eebe31647e9daaaae42c54b
02:20 < RCCCC> http://itc.conversationsnetwork.org/series/stackoverflow.html
02:20 < Stephen> Anyone know where I can find instructions on how to do this?
02:20 < ccowan> owen1: yeah… there is a session cookie. 
02:20 < ccowan> But for Rails… you can just use cookie sessions
02:21 < ccowan> but make sure you uses signed cookies
02:21 < Stephen> I've built on Debian for Android, but if there's a way to build pure android binaries, I'm hoping there is full instructions
02:22 < ccowan> You might need to write a custom cookie session thing for rails that will create the signatures the same way the connect cookie parser signes them. The algo is pretty easy
02:22 < ccowan> if you are using connect/express
02:23 < ccowan> basically in either Node.js or Rails you will need to create a compatibility library for the session so you can share the data across each.
02:23 < owen1> ccowan: yeah. personaly i would like to use vanilla.js, so i'll try to figure out how to extract node-client-sessions (https://hacks.mozilla.org/2012/12/using-secure-client-side-sessions-to-build-simple-and-scalable-node-js-applications-a-node-js-holiday-season-part-3/) into non-connect function.
02:23 < plops> titanium use V8 for the apps
02:24 < owen1> ccowan: so i need to make sure that both rails and node create the same cookie
02:25 < owen1> ccowan: but since i'll have proxy in front of each request, do i care about rails in terms of generating cookies?
02:25 < owen1> isn't my proxy will be the one generating cookies now?
02:27 < garthk> owen1: is this a regular reverse proxy? If so, it's passing everything in the HTTP result through pretty much unmodified, including the cookies. 
02:27 < owen1> garthk: oh.
02:27 < garthk> owen1: if you wrote it and it's decoding the results before re-encoding and sending them, then it has the opportunity to add or strip cookies if you code that… but you have to code that.
02:28 < owen1> i will be writing a proxy to help in migrating from rails to node
02:28 < garthk> Meanwhile: why would the connect/express query parser middleware decide to not work under test?
02:29 < owen1> not sure if the proxy should be 'stupid' and just pass each request to a destination or do more.
02:30 < ccowan> owen1: I would make the proxy just pass through
02:31 < owen1> ccowan: ok. it should be like 5 lines of code, right? req.pipe(legacy-system host)
02:31 < owen1> (at least the first version)
02:31 < ccowan> yeah… if you are not using Express
02:31 < owen1> cool!
02:32 < owen1> so the first version doesn't even care about generating cookies since node is not involved. it's just a simple proxy.
02:32 < ccowan> owen1: how many endpoints are you going to have? Eventually you will want to come up with a way to handle the routing
02:34 < owen1> ccowan: good question. i don't know yet. my guess is that the main site, the one that serves the html will be hard to switch.
02:35 < ccowan> owen1:  are they mostly going to be API's
02:35 < owen1> ccowan: so i start to think that maybe i'll have to find ways to extract logic outside of the big ball of rails mudd into node serices.
02:35 < owen1> so the proxy will not have any routing.
02:36 < owen1> it's a site similar to yelp. a lot of business listings.
02:36 < owen1> and users can comment etc
02:37 < owen1> not sure how can i route a request to a different endpoint, other than the rails
02:37 < owen1> the current app is doing a lot of server side
02:37 < owen1> including the rendering
02:38 < owen1> and the goal is to switch to node + more client side
02:38 < owen1> (first hit render on the server, the rest on the client with requests for json)
02:39 < ccowan> I'm looking to move all our frontend stuff to a SPA. Serve everything via Cloudfront and Elastic Beanstalk (for our API)
02:40 < owen1> what's spa
02:40 < ccowan> Amazon will let you route your dymanic stuff (api) through could ront
02:40 < ccowan> owen1: Single Page App
02:40 < owen1> yeah. similar for my plan
02:41 < owen1> why do u need cloudfront?
02:41 < owen1> it's a hosting like ec2 or is it for db
02:41 < ccowan> cloudfront is for all your static HTML and Images
02:41 < ccowan> it's a CDN
02:42 < OODavo> npm (1.3.0) has suddenly stopped being able to install various packages, failing with a "TypeError: Cannot call method 'trim' of undefined". I'm currently trying to install chai but the same error is produced for many packages.
02:42 < owen1> nice. btw, are u coming to nodeconf
02:43 < ccowan> So basically you can host all the static parts HTML, Images, CSS and JS on Cloudfront and proxy the api requests to Elastic Beanstalk and let Amazon do all the scaling
02:43 < ccowan> Yup
02:43 < ccowan> I will be there.
02:44 < imorris> hello everyone
02:45 < imorris> how can i use the webchat?
02:46 < ChrisPartridge> er, you're using it?
02:46 < owen1> imorris: try weechat. it's the best
02:47 < imorris> I'm
02:48 < OODavo> It looks like the TypeError is related to semvers, since it's arising from the semver module (specifically from a replaceStars function).
02:49 < imorris> I am looking at <node.js in action> this book and find this webchat!
02:50 < imorris> I'm new to node.js 
02:50 < niggler> !hello @ imorris 
02:51 < imorris> hello !
02:51 < niggler> wrong channel sorry
02:51 < niggler> ##javascript has a bot
02:51 < imorris> er
02:51 < niggler> the !hello command makes the bot say hello
02:52 < imorris> !hello
02:55 < JNedved> Is anyone available to work a 6-12 month Node.js in Sydney, Australia?  
02:55 < Zolmeister> JNedved: starting when?
02:56 < JNedved> ideally next week but they will wait a few weeks for the right person. Are you based in Australia? 
02:57 < OODavo> I uninstalled and reinstalled the Debian nodejs package and now npm works fine. I'm not sure why, but at least my problem's solved. :P
02:57 < niggler> OODavo you are better off compiling from source
02:58 < OODavo> Almost certainly. I also am extremely lazy, however.
02:59 < niggler> time spent typing the extra command < time spent fighting debian
03:00 < DefSek> JNedved: can this be a remote job ?
03:00 < owen1> i want to build i simple proxy that pipe each request to a different host. i would like to use createServer and the built-in http lib. any tips for doing that? i think i need to do req.pipe(?) where ? should be a writable stream.
03:00 < JNedved> Sorry can't be remote. Has to be on client site in Sydney
03:01 < owen1> not sure how to create this writable stream
03:02 < bulkan> drudge: thanks for closing those issues :)
03:02 < Kareem> hi
03:02 < bulkan> on LearnBoost/kue
03:02 < owen1> i know that http.get(options, callback) create writable stream, but not sure how to constract that with req.pipe
03:02 < Kareem> NodeJS newb. I have a quick question
03:02 < niggler> just ask the question Kareem 
03:03 < Kareem> I have already ran npm install with a package.json. But I realized I forgot a dependency. How do I add it?
03:05 < ccowan> owen1: Look at bouncy (by Substack)
03:05 < owen1> ccowan: i want to write my own, it should be 5 lines (:
03:06 < owen1> ccowan: i use http-proxy for some stuff btw.
03:06 < ccowan> the problem with using http.get is that it will only support get requests
03:06 < owen1> ccowan: i didn't think about it. can't i do get or post depends on the request?
03:07 < ccowan> you will want to support GET,POST,PUT,DELETE,PATCH,HEAD
03:07 < ccowan> I use http-proxy
03:08 < owen1> oh, damn
03:09 < owen1> i guess u'r right. i just did simple get proxy. using newReq.httpServer and req.pipe(newReq)
03:10 < ccowan> you could something simple using mikeal/request too
03:10 < owen1> ccowan: oh. and it will take care of get/post etc?
03:12 < ccowan> mostly… you would need to do req.pipe(request({method: req.method, url: "url-goes-here"}).pipe(resp)
03:12 < ccowan> I think that would work… would have to test it to make sure
03:14 < owen1> yeah. i'll give it a try
03:16 < ccowan> owen1: here is the docs
03:16 < ccowan> https://github.com/mikeal/request
03:17 < owen1> sweet
03:18 < jdelgado> Anyone ever think about making a databse out of node..?
03:18 < ccowan> jdelgado: check out tacodb
03:19 < owen1> ccowan: maybe CouchUp ?
03:19 < ccowan> http://www.tacodb.org/
03:19 < ccowan> yup
03:19 < jdelgado> How does the performance stack up against the traditional db?
03:21 < M28> I doubt it's any good
03:21 < ccowan> jdelgado: depends on your use case
03:21 < jdelgado> Shit, nedb is doing 41k ops/s on finds, almost 6k ops/s for writes
03:22 <@xyxne> M28, any particular reason?
03:22 < jdelgado> Not planning on doing anything with it, the thought just crossed my mind.
03:22 < ccowan> ah
03:22 < jesusabdullah> guys, leveldb is quite fast
03:22 < jesusabdullah> so I bet the perf is at least resonable
03:23 < M28> it's simply not mature enough
03:23 < M28> if you want something that you can really trust, I wouldn't use bleeding edge stuff
03:24 <@xyxne> so just speculation then?
03:24 < jesusabdullah> yes and no
03:24 < jesusabdullah> on one hand
03:24 < jesusabdullah> I dislike the idea of distrusting anything new
03:24 < M28> there are a few benchmarks in the leveldb page
03:24 < jesusabdullah> I know enough about the technology behind tacodb to know that it probably works fine
03:24 < jesusabdullah> and is reasonably fast
03:24 < jesusabdullah> and fun
03:24 < M28> they don't compare it with any other technology, so I wouldn't trust them that much
03:24 < jesusabdullah> all that said though, it's likely going to be change it a lot
03:24 < jdelgado> Yeah, I don't think i'd ever use it in a HA production, but it would be pretty intresting to run on a side project.. another level of control.
03:25 <@xyxne> yeah but this one person on IRC doubts it's any good
03:25 <@xyxne> I have my apprehensions
03:25 < jesusabdullah> I wouldn't use tacodb on a "production grade application," no, but it *could* be ready with more time, and it's always fun to play with new things
03:26 < jesusabdullah> and leveldb is known to be fast. levelup is prod ready imo
03:26 < M28> of course it can
03:26 < jesusabdullah> by the way
03:26 <@xyxne> I tend to prefer technologies that have had plenty of bikeshed arguments to really prove their worth
03:26 < jesusabdullah> "they" is dominic tarr
03:26 < owen1> can someone look at my 10 lines proxy and tell me what's wrong with it? the browser spins forever
03:26 < jesusabdullah> by the way
03:26 < ssafejava> owen1: do it
03:26 < jesusabdullah> hmmm
03:26 < jesusabdullah> so what to do tonight
03:26 < jdelgado> owen1: Jdfiddle it brah
03:27 < owen1> http://pastebin.com/ac5nFz2u
03:27 < jesusabdullah> I can blow off coding and chill out
03:27 < ssafejava> I think we learned quite a bit about bleeding edge disasters with mongo
03:27 < jdelgado> jesusabdullah: youtube
03:27 < owen1> sorry, forgot the link
03:27 < owen1> ssafejava: ^
03:27 < jdelgado> ssafejava: Ay oh!
03:27 < jesusabdullah> I can polish grabthar
03:27 < jesusabdullah> I can write a cli ftp client wrapping mscdex's thing
03:27 < jesusabdullah> I can try to write this economy simulator and fail miserably
03:27 < jesusabdullah> not sure I have any "real work" on deck
03:28 < jesusabdullah> I forgot to call the storage unit
03:28 < jesusabdullah> waiting on everyone else
03:28 < jesusabdullah> hmmmm
03:28 < jdelgado> owen1: What on earth are you trying to do with this
03:28 < ssafejava> owen1: you want to pipe the newRes into the res, not the newReq into the req
03:28 < jesusabdullah> lololol
03:28 < owen1> jdelgado: simple proxy
03:28 < owen1> ssafejava: ^^
03:28 < ssafejava> owen1: so line 15 should be newRes.pipe(res)
03:28 < niggler> @xyxne i tend to prefer badass rock star techs
03:28 < ssafejava> owen1: and line 24 should die
03:28 <@isaacbw> niggler: I just had to downgrade a package because it was broken upstream and made it into arch
03:29 < niggler> haha isaacbw you need to upgrade to windows 9
03:29 <@xyxne> niggler, good call
03:29 < jesusabdullah> lol
03:29 < jesusabdullah> brb windows 9
03:29 < jesusabdullah> maybe I should do dishes for now
03:29 < ssafejava> owen1: You also then want to pass on the req.url into options.path, and req.headers into options.headers in order for this to be a real proxy
03:29 < jesusabdullah> fucking dishes, I hate dishes
03:29 < niggler> jesusabdullah are you just in a mental block or do you find yourself with idle time?
03:29 < owen1> ssafejava: nice. let me see
03:30 < jdelgado> Ok thats like the third of fourth time IRC has shit out on my today, anyone know anything about a no such device error?
03:30 < jesusabdullah> niggler: more the latter
03:30 < jesusabdullah> niggler: I'm in between jobs, I'm trying to keep myself busy in between job hunting and the odd freelance gig
03:30 < jesusabdullah> niggler: (looking for moar freelance btw :v :v)
03:31 < jdelgado> jesusabdullah: I used to do freelance, but I cant stand clients.. lol
03:32 < jdelgado> I think I need a new irc client, any good one for windows?
03:32 < jesusabdullah> jdelgado: hahaha, yeeah, but I need to eat
03:32 < niggler> jdelgado what happened to mirc?
03:33 < owen1> ssafejava: http://pastebin.com/4fpJ5MwY still not working ):
03:33 < jesusabdullah> jdelgado: irssi over putty >:)
03:33 < jdelgado> jesusabdullah: Hah, this guy!
03:33 < ssafejava> owen1: still hanging?
03:33 < jesusabdullah> okay everyone stand back
03:33 < jesusabdullah> opening this pastebin
03:34 < MitchW_> jdelgado: I use irssi windows/linux/mac. used to use mirc before I knew better though
03:34 < owen1> ssafejava: oh wait
03:34 < owen1> don't look!
03:34 < jdelgado> MitchW_: ;)
03:35 < jdelgado> Gosh, I feel like I need to switch to linux for my main machine
03:35 < niggler> jdelgado just get a mac
03:35 < niggler> embrace the goodness
03:36 < jdelgado> niggler: I can't OSX or I would
03:36 < jdelgado> lol it's so frustrating doing anything
03:36 < ssafejava> owen1: you also want to do something like `res.status(newRes.statusCode).set(newRes.headers)` around l13 so you pass on the correct stuff
03:36 < jesusabdullah> owen1: bro http://pastebin.com/a3SRsqu8
03:36 < jdelgado> like where the fuck do things download to
03:36 < jesusabdullah> owen1: or just use a real proxy
03:36 < niggler> i get that feeling every time i switch into windows or linux
03:36 < jdelgado> lol
03:36 < jdelgado> fair enough ;)
03:37 < owen1> jdelgado: i will, but first i want to try it myself
03:37 < jdelgado> I'd rather do OSX then windows 8 for sure
03:37  * MitchW_ unfortunately agrees w/ jdelgado - OSX window manager & command key f-up destroys my productivity.  sadly my rMBP now days is used more for ssh and VNC'ing into VMs or my workstation, than anything osx related
03:37 < MitchW_> command line everything, especially when doing node dev though :\
03:37 < ssafejava> sizeup saves osx's window manager
03:38 < jdelgado> I also have five monitors, and I don't think OSX supports that - does it?
03:38 < zeekay> actually finally has decent multiple monitor support in mavericks
03:38 < jdelgado> I know they announced something about monitors at their new WWDC
03:38 < jdelgado> oh ok good
03:39 < jdelgado> Not being able to full screen a window really bothered me too, did they fix that?
03:39 < ssafejava> yeah
03:40 < MitchW_> you can full screen things in OSX.  my main gripe w/ the WM is window navigation (you either have to go into expose weirdness, and find the needle in the haystack using a ... mouse, or use a weird combination of 'switch between main window of process' and 'switch between window in current process' using kb :S
03:41 < ssafejava> MitchW_: that's actually my favorite part of osx's window managers, the cmd+tab and cmd+` weirdness. once you get used to it, it's great
03:41 < ssafejava> e.g. for switching between chrome & its inspector
03:41 < jdelgado> MitchW_: Yeah, i'm not sure how that is exactly intuituve
03:41 < ssafejava> it makes sense. cmd+tab switches apps, cmd+` switches windows within an app. obv. weird at first coming from linux/windows though
03:42 < Stephen> Aww yeah, node-libvirt
03:42 < ssafejava> but it makes cmd+tab much faster when you don't have to tab through 5 browser windows or 8 open text files
03:42 < jdelgado> ssafejava: Just seems funky
03:42 < ssafejava> just different is all. they like to think different in cupertino
03:43 < DefSek> #SearchIRC derivatives
03:44 < MitchW_> ssafejava: I agree it 'can' be faster, and you're probably right - it's just a 'not used to it' issue.
03:45 < MitchW_> ignoring WM nav issues, command key + text editors still freaks me out. and indentation (cmd + [/] ... :(), home/end/page keys too :\
03:46 < MitchW_> becomes mighty annoying when you're doing xplatform dev switching between 3-4 platforms/editors in a matter of minutes and start getting mixed up very quickly
03:46 < Stephen> Does c4milo ever hang around here?
03:47 -!- mode/#Node.js [+o TooTallNate] by ChanServ
03:52 < jdelgado> Anyone tried using two different DNS providers together? IE ns1/ns2 -> Route 53 while ns3/ns4 -> Dyn... would that work? It works in my head.
03:54 < Zolmeister> Aren't those just fallbacks? Seems like they should just work
03:56 < jdelgado> Zolmeister: Yeah, Just wondering if anyone had tried it.
03:57 < Stephen> Yeah, it will work, but remember it's not Route 53 that has to fail, it's ns1/ns2
03:58 < jdelgado> Stephen: As in you mean it goes to route 53 until the IP fails?
03:59 < Stephen> basically, if client reaches ns1/ns2, they respond with Route 53
03:59 < Stephen> if client reaches ns3/ns4, they respond with Dyn
03:59 < Stephen> It usually takes ns1/ns2 failing before client will attempt using ns3/ns4
03:59 < jdelgado> Stephen: Right, and if ns1/2 is down, they have to go to dyn, right?
04:00 < jdelgado> Stephen: That's exactly how I would like it. :)
04:00 < Stephen> Mostly. Don't forget clients cache dns
04:00 < Stephen> So set your TTL low
04:00 < jdelgado> Stephen: I have a 60 TTL
04:00 < Stephen> That works
04:00 <@tjfontaine> user spae clients should not cache, system resolvers may, and recursive servers should
04:01 < Stephen> Anyone here understand the concept of fixtures, or know where I can learn more?
04:01 < jdelgado> Stephen: Since it's like 0.01/million queries, idgaf
04:07 < Stephen> Hmmm
04:08 < Stephen> Are fixtures a testing concept?
04:18 < ningu> so does mongodb allow you to store your data in third abnormal form?
04:19 < Havvy> abnormal forms?
04:19 < Havvy> Are these like imaginary numbers?
04:20 < ningu> Havvy: it's what people use on their databases that are running on their continuous disintegration server
04:21 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:22 < MitchW_> Havvy: NF are a part of relational database theory that determien storage semantics based on degrees of immutability, and are used for identifying inconsistencies/bad practices, among other things
04:23 < ningu> MitchW_: you may need to practice your reading comprehension
04:23 < Havvy> MitchW_: Yes, I know.
04:24 < Havvy> Notice the 'Ab' before 'normal'
04:26 < MitchW_> Havvy: yes, abnormal would imply it's not normalized ;)
04:26 < MitchW_> (not to be confused with denormalized forms)
04:27 < MitchW_> that said ive never heard or was taught about Nth abnormal forms, so there's probably more to it than I'm familiar with
04:30 < Havvy> MitchW_: It's a pun.
04:30 < Havvy> Just like Continuous Disintegration
04:32 < ningu> wow this is awesome (not a joke this time): http://www.hurl.it/
04:32 < ningu> good for api demos.
04:34 < sinclair|net> ningu: why would anyone need this?
04:34 < ningu> sinclair|net: what if they don't have curl?
04:34 < sinclair|net> they have a browser
04:35 < sinclair|net> otherwise they couldn't see the page
04:35 < ningu> sinclair|net: can you do an http post request in a browser with a json body?
04:35 < niggler> ningu this is proof that we are in an API bubble
04:35 < sinclair|net> yes
04:35 < sinclair|net> ningu: you can see all that information,
04:35 < ningu> niggler: who is we?
04:35 < niggler> we = the javascript world
04:35 < niggler> the computing world
04:35 < sinclair|net> niggler: good term for it mate, i like that
04:36 < niggler> sinclair|net someone was looking for an aussie earlier
04:36 < niggler> and for some reason i thought you were from australia
04:36 < ningu> sinclair|net: how can make an http post request in a browser to foo.bar.com with a JSON body that I specify?
04:37 < ningu> s/how can/how can I/
04:37 < ningu> niggler: I don't quite see your point about the bubble, maybe I'm just hungry
04:37 < sinclair|net> ningu: go to the site, open the console, do your post
04:38 < niggler> ningu there are quite a few startups built around the idea of organizing APIs
04:38 < ningu> niggler: oh, right. I don't think this is a startup though, just a site someone made
04:38 < ningu> sinclair|net: eh? you can do that in what browser, exactly?
04:38 < sinclair|net> ningu: yes
04:38 < niggler> mashape for example
04:39 < ningu> sinclair|net: that was not a yes/no question :P
04:39 < niggler> ningu https://www.mashape.com/
04:39 < ningu> the chrome console is a js console
04:39 < sinclair|net> ningu: most modern browsers, chrome/ firefox, IE
04:39 < sinclair|net> ningu: yes, and?
04:39 < ningu> sinclair|net: you can see the contents of post requests sent from forms, sure.
04:40 < sinclair|net> and from the network tab
04:40 < timoxley> ningu you can do it in from the browser console but it's a bit ugly without a lib/tool
04:40 < rudiX> 0.10.12 ... significant performance upgrade
04:40 < sinclair|net> ningu: wait, did you write hurl?
04:40 < ningu> no.
04:41 < sinclair|net> lucky for you, i was about to hurl abuse then
04:41 < ningu> timoxley: you mean like writing an xmlhttprequest?
04:41 < ningu> the point is, afaik there is no normal, in-chrome equivalent of curl http://foo.bar/baz -d '{ "some": "JSON" }'
04:41 < ningu> normal = straightforward one-liner
04:42 < ningu> and not everyone has curl, namely, windows users who have not previously been instructed to install it
04:42 < timoxley> ningu yep
04:42 < sinclair|net> ningu: most pages have jquery on them
04:43 < sinclair|net> there for you can do a one line post 
04:43 < ningu> sinclair|net: apis do not have jquery, or any client-side js
04:43 < sinclair|net> ningu: no, you don't say?
04:43 < ningu> sinclair|net: anyway, I think you are just being obtuse on this point so I will stop
04:44 < ningu> if you are in a room full of 20 people with different software on each laptop it's good to have a web site
04:44 < sinclair|net> ningu: no, i am not being obtuse, hurl is utterly pointless, and the rational of a nodejs developer with no idea
04:45 < isomorphismes> I'm new to node.js and have a question that is probably really simple and/or somewhere in the documentation. Anyone here willing to take a stab at it or pointing me to the right thing to read?
04:45 < niggler> just ask isomorphismes 
04:48 < ningu> sinclair|net: what makes you think it was created by a node.js developer?
04:48 < isomorphismes> Using https://github.com/mynetx/codebird-js/ I do require('./codebird.js'); var cb = new Codebird; and get ReferenceError: Codebird is not defined. I can see on line 62 of the github that it is defined. So did I require it wrong? I also tried var test = require('./codebird.js'); var cb = new test; with the same kind of object error. I'm sure that require(...) is loading the module (because it wasn't before and I made that 
04:49 < isomorphismes> (this is the example code from the same github page I'm running)
04:49 < sinclair|net> ningu: it strikes me as something a nodejs developer would write
04:51 < ningu> isomorphismes: you have to store the result of the require() in something
04:51 < ningu> ok, you tried that
04:52 < ningu> isomorphismes: codebird.js does not export anything so require() won't return it
04:52 < ningu> you need to add a line to it at the bottom like, module.exports = Codebird;
04:54 < isomorphismes> ningu: That is I should modify the codebird.js file I am importing? Or can I add that line to my main.js after I require('./codebird.js'); ?
04:54 < ningu> isomorphismes: no, it is not written to be require()'d so it has to be modified
04:58 < isomorphismes> ningu: thanks. I modified the file but now on module.exports it finds TypeError: Property 'exports' of object #<Module> is not a function.
05:01 < ningu> isomorphismes: at the bottom of codebird.js you put:  module.exports = Codebird;   ?
05:02 < isomorphismes> ningu: Oops, no! I put module.exports(Codebird);. Let me try it that way. By the way I am editing this on c9.io if that makes it easier to see what I'm talking about.
05:02 < Sly> >
05:02 < Sly> xyxne: :3
05:05 < isomorphismes> ningu: Same error.
05:06 < ningu> isomorphismes: can you send the link?
05:08 < isomorphismes> http://c9.io/isomorphisms/shut_the_front_door
05:11 < ningu> isomorphismes: var Codebird = require('./codebird.js'); var cb = new Codebird;
05:11 < ningu> sorry, new Codebird();
05:13 < isomorphismes> ningu: oh, thanks! I have a new error now, but that means you totally solved my last one! Thank you.
05:13 < ningu> hehe
05:19 < isomorphismes> ...And my new error is one that's someone else's issue that was posted on mynetx's github page for the library. s/he seems to have posted a fix. Thanks all.
05:21 < timoxley> isaacbw I remember reading something about github user/repo urls for dependencies, and they seem to work, but I see not docs for them
05:22 < timoxley> e.g. dependencies": {"my-lib":"my-user/my-repo"}
05:27 < JNedved> anyone looking for a 6-12 month Node.js contract in Sydney, Australia please give me a shout at jamie@it-matters.com.au 
05:28 < Lorentz> all these peeps in sydney
05:28 < ningu> mmm marshmellows
05:29 < MitchW_> node.js contract could be fun. hard to beat my gov contracting rates though :(
05:31 < Lorentz> yep
05:32 < niggler> marshmallows ningu 
05:41 < ningu> niggler: oh, good point :P
05:41 < ningu> you live up to your name
05:53 < owen1> can someone explain '10.2.3 Writing a simple HTTP proxy' - http://book.mixu.net/ch10.html  i see cres.pipe(sres); // pipe client to server response and sreq.pipe(creq); // pipe server to client request      and i just don't understand what's going on there. is it just me?
05:56 < owen1> after staring at the code for 10 minutes i think i have some clues. here is what i think is going on there:
05:57 < owen1> var creq = http.request(opts, function(cres) {   
05:57 < owen1> this line doesn't actualy do anything at first.
05:57 < owen1> it returns a writable stream.
05:58 < paulkon> http.request returns something?
05:58 < paulkon> didn't know that...
05:58 < owen1> sreq.pipe(creq);    this line start to pumphttp.request() returns an instance of the http.ClientRequest class. The ClientRequest instance is a writable stream.
05:58 < owen1> sorry
05:58 < owen1> paulkon: http.request() returns an instance of the http.ClientRequest class. The ClientRequest instance is a writable stream.
05:59 < owen1> now sreq.pipe(creq) starts to 'pump' the chunks of the external http request into the writable stream
06:00 < owen1> now i am getting confused
06:00 < owen1> when is the http.request actually being called?
06:01 < owen1> i guess the creq (the writable stream) emit 'data' event as soon as he get's chunk of data
06:03 < owen1> now i am lost again
06:04 < owen1> i think it would be clearer without the pipes and instead write it the long way. with events and chunks
06:07 < timoxley> owen1 can you show more code
06:13 < owen1> timoxley: yes. 1 sec. trying to make the longer version (with events)
06:14 < timoxley> owen1 that is the bad way.
06:17 < owen1> timoxley: maybe, but pipes confuses me. i rather see the chunks coming by doing console.log
06:17 < yenic> I'm new to programming. I recently completed LPTHW, and I'm completing the Node Beginners Book now.. I'm going to pick 1 to dive into after I'm done with this book.. any reason why I should pick JS over Python?
06:18 < timoxley> owen1 req.pipe(process.stdout)
06:18 < yenic> i should add, I like both JS and Python, and don't mind the callback functions in Node itself (seems to be a thorny point for many), at least not so far
06:18 < timoxley> owen1 or req.pipe(through(function(data) { console.log(data); this.push(data)}))
06:19 < owen1> http://pastebin.com/LuWjn1w2
06:19 < owen1> timoxley: ^
06:19 < owen1> i don't even see any chunk
06:21 < paulkon> owen1: wait, what is the question?
06:21 < owen1> paulkon: why the non pipe version not working
06:21 < owen1> (simple proxy)
06:21 < owen1> req.on('data', function (chunk) {newReq.write(chunk);  });
06:22 < owen1> i assumed it's the same as req.pipe(newReq);
06:22 < ssafejava> owen1: you don't write to reqs
06:23 < owen1> oh
06:23 < owen1> but it's the return value of http.request, which is a writable stream
06:23 < timoxley> owen1 just add newReq.end() 
06:24 < owen1> where?
06:25 < ssafejava> hey timoxley, you run campjs?
06:25 < timoxley> ssafejava yep
06:25 < ssafejava> been thinking about it. gotta convince the sig. other to go to a nerd retreat. sounds great though, congrats on getting tj to come out
06:26 < timoxley> ssafejava thanks, just bring the SO with you
06:27 < ssafejava> might but idk what she'd do. but we've been talking about hitting australia while we're here in hk
06:27 < ssafejava> good opportunity to go.
06:27 < owen1> timoxley: it works now. is it the old way of streaming and i should always use pipe?
06:28 < timoxley> owen1 go read what pipe does in node source
06:28 < timoxley> owen1 it's basically what you wrote but 'more better'
06:28 < owen1> OMG node source (: sound good.. let me see
06:29 < timoxley> owen1 plus pipe allows you to easily chain streams together. once streams start to 'click' node starts to make a whole lot more sense
06:30 < timoxley> ssafejava it's like a romantic retreat away in a rainforest
06:30 < timoxley> ssafejava except there's a bunch of javascript going on
06:30 < ssafejava> timoxley: clearly, the most romantic part right there.
06:30 < ssafejava> hah
06:31 < owen1> right, but in the my proxy example, what helped me understand was the explicit .write() since in the documentation of http.request they use // write data to request body
06:31 < owen1> req.write('data\n'); in the example code
06:31 < timoxley> ssafejava last time it was a bit rainy but there's lots of awesome rainforest to explore, she could do that or just sit around and drink our beer
06:31 < ssafejava> yeah that would be great. i'll see. we always travel together anyhow so it would make sense
06:32 < owen1> timoxley: when i saw .write() i realized that chunks are coming slowly from the original, into the writable stream.
06:32 < timoxley> ssafejava I'm in singapore, if you make it over here come say hi
06:33 < ssafejava> timoxley: Will do, actually will be out there sometime in the next 6mo but not exactly sure when. Decent JS community there? I haven't found much here.
06:33 < owen1> timoxley: i heard it's a bit expensive. do u work for a us company or got your own business there?
06:33 < timoxley> ssafejava I've started a meet up, that seems to go ok, not a lot of high level devs, or not a lot that make it to the meet up anyway
06:35 < timoxley> ssafejava there's jscamp.asia coming up too: http://jscamp.asia
06:35 < owen1> my dream is to work remotly on node and live a few months in taiwan, singapore, vietnam
06:35 < timoxley> oh, site not updated with new dates yet
06:35 < ssafejava> timoxley: Yeah. We have some general web dev guys who are apparently somewhat active, not much node though. But I enjoy talking js, no matter
06:37 < timoxley> owen1 it's doable
06:38 < ssafejava> oh yeah it's absolutely doable. getting clients is the harder part but it's all about building a local network
06:38 < timoxley> owen1 singapore accommodation is expensive, otherwise reasonably cheap.
06:38 < paulkon> owen1: TJ is a good example of this scenario
06:38 < owen1> paulkon: i didn't know he works remotely. awesome
06:38 < paulkon> he lives and works from Vancouver remotely
06:38 < paulkon> Victoria*
06:38 < ssafejava> timoxley: Yeah I think singapore compares to HK in that regard? Most apts here about $3k for 750sqft, then it goes way up from there
06:39 < owen1> that's why i think taiwan is nicer since it's modern but cheaper
06:39 < ssafejava> and the people are a lot friendlier than they are here
06:39 < ssafejava> taiwan is quite nice
06:39 < timoxley> ssafejava yep, $3.5-4k a month just gets you out of hovel standard living
06:40 < ssafejava> yeah. I did some basic research on taipei prices when I was there for computex. Less than half HK, more like DC or even Chicago prices
06:41 < ssafejava> np as a freelancer.
06:41 < ssafejava> I would be nervous freelancing here. You have to really rake it in to survive
06:42 < timoxley> owen1 was freelancing here, but since I'd just moved here with no local contacts the contracts dried up. I do remote work for ninjablocks now
06:44 < owen1> timoxley: sweet. how are the conditions for your own startup or even a consulting shop?
06:44 < garthk> FFS. connect.query() isn't working.
06:44 < garthk> req doesn't get req.query after handling /?code=1c2490b1-5980-4fce-aa0e-4b1b039ca71d
06:44 < timoxley> owen1 government is really supportive of startups if you meet the right conditions
06:45 < owen1> have u been to other countries? why singapore?
06:45 < timoxley> owen1 and tax is really low… ~3%
06:46 < MitchW_> :o
06:46 < paulkon> why not move to the us?
06:46 < timoxley> owen1 only AU prior. an awesome girl lives here.
06:47 < timoxley> paulkon it's on the TODO list
06:47 < paulkon> timoxley: where are you from originally?
06:47 < paulkon> just curious
06:47 < timoxley> Australia
06:47 < paulkon> ah, cool
06:52 < owen1> timoxley: i am curious if it's doable to live in vietnam or cambodia and work remotly. i guess if the internet is good there is no reason why not
06:52 < timoxley> owen1 internet will be your biggest challenge
06:52 < owen1> but you really need to be the best at what u do. that's why i try to live and breathe node (:
06:53 < Lorentz> I'm gonna stick living in australia
06:53 < Lorentz> it's nice here
06:53 < ssafejava> oh you really don't need to be the best. you just need to be competent and able to communicate & finish projects
06:53 < Lorentz> even if it's expensive
06:53 < paulkon> live, breath, eat, sleep, shower
06:53 < Lorentz> event-based showering
06:53 < paulkon> competition is fierce and self education is the key
06:54 < zaleb> <paulkon> live, breath, eat, sleep, shower  <-- remove one, we can only learn 4 moves
06:54 < paulkon> keep learning, practicing, innovating
06:54 < MitchW_> Lorentz: agreed, ignoring politics :\
06:54 < Lorentz> well, politics will always follow you
06:54 < ssafejava> i guess it depends where you are. when I was freelancing in the US, being able to breathe and speak tech jargon was enough to impress anyone. I'm exaggerating of course but contracts were very easy to come back, very high demand and low supply
06:54 < garthk> Aha! Some bastard has populated req.query already.
06:55 < garthk> … except it's false. Damn.
06:55 < garthk> Oh, or is it?
06:55 < sinclair|net> Lorentz: hey mate
06:55 < sinclair|net> Lorentz: do you know a good graph layout algo?
06:55 < Lorentz> sup
06:55 < ssafejava> garthk: if you want to just grab the reins you could feed the section of URL starting with '?' into node's querystring methods
06:55 < Lorentz> graph layout algo?
06:56 < sinclair|net> Lorentz: yeah, given a cyclic graph, i want to automatically arrange nodes in that graph visually
06:56 < paulkon> ssafejava: the problem is that supply of competent engineers is going to shoot up in the upcoming years due to all the ceos of companies lobbying for foreign software engineers, etc.
06:56 < paulkon> I'm not saying that's a good or bad thing
06:56 < paulkon> it's just fac
06:56 < paulkon> fact*
06:56 < ssafejava> paulkon: yes. it's not great for people who are enjoying an easy ride
06:56 < Lorentz> sinclair|net: hmmmmmmm
06:56 < ssafejava> but it's good for business
06:56 < Lorentz> not from top of my head
06:56 < paulkon> right
06:57 < paulkon> if you work hard and stay on top of the curve then you have nothing to worry about
06:57 < paulkon> but that requires effort ;)
06:57 < garthk> FFS. Ok, got it. Someone has replaced req.query with a property, so it's truthy even if there's nothing there.
06:57 < ssafejava> those who are american-born enjoy a communications advantage which counts for a lot. but it's no excuse to get lazy 
06:57 < timoxley> Lorentz coming to campjs?
06:57 < paulkon> lazy people are eradicated from this sector
06:57 < paulkon> that's how it is
06:58 < paulkon> too many people want in
06:58 < owen1> paulkon: effort and lack of life
06:58 < paulkon> and the pay scale is very high right now
06:58 < ssafejava> paulkon: yeah it's great right now, no doubt about that. but the sector is very intimidating for most
06:58 < paulkon> I'm scared to say it but it's like a bubble basically
06:58 < ssafejava> but it's getting easier as the software gets better
06:58 < owen1> ssafejava: what brought u to HK?
06:58 < paulkon> yeah
06:58 < ssafejava> yeah it sure looks like one in SV
06:58 < paulkon> for sure
06:59 < ssafejava> owen1: work. just for a little while. something different
07:00 < Lorentz> timoxley: what is campjs
07:00 < garthk> Eh? When I request against the server running normally under 'npm start', req.query is an empty object. When I run it under test and use request to hit it, req.query is that function. Yet, the express app construction is the same.
07:00 < ssafejava> strategic graph-based realtime camping app
07:00 < timoxley> Lorentz http://campjs.com/
07:00 < timoxley> hah
07:01 < ssafejava> garthk: post some code
07:01 < ssafejava> pastebin or whathaveyou
07:01 < paulkon> whoaa
07:01 < paulkon> tj attended this?
07:01 < ssafejava> paulkon: is attending
07:01 < garthk> ssafejava: there's waaay too much that I can't share in here, I'm afraid. Having to narrow it down the hard way. 
07:01 < garthk> Better get pizza first. Seeya.
07:01 < paulkon> I'll fly out to AU if I have to...
07:01 < paulkon> this is huge
07:02 < paulkon> i like the giant get tickets! button lol
07:02 < Lorentz> timoxley: haven't heard of this before
07:02 < Lorentz> usually I'm occupied on most days of the week though, can't hang around anymore...
07:02 < Lorentz> such is married life
07:02 < ssafejava> Lorentz: well, it is a weekend :)
07:03 < paulkon> you get to hang around your spouse though!
07:03 < paulkon> :)
07:03 < paulkon> ...
07:04 < Lorentz> sinclair|net: If I were to venture a guess, I'd probably start with first node, whichever, and start drawing by some rule on that
07:04 < Lorentz> or perhaps walk through them all and figure constraints before starting to draw them
07:04 < sinclair|net> Lorentz: there is no starting node
07:04 < sinclair|net> i could pick one i suppose
07:05 < Lorentz> yes
07:05 < Lorentz> you did say cyclic
07:05 < paulkon> do the speakers get paid to fly over?
07:05 < sinclair|net> Lorentz: ideally, id want the graph to look the same regardless of which node i select
07:05 < paulkon> how does it work?
07:05 < dileep> serve a file to a client for download from your node.js server???
07:07 < dileep> i think you misss my question
07:07 < ChrisPartridge> sinclair|net: graphviz is a good reference point
07:08 < sinclair|net> ChrisPartridge: i think i stumbled across that at some point
07:10 < Lorentz> oh boy, computational graph theory and rendering planar graphs
07:12 < sinclair|net> Lorentz: not exactly trivial
07:13 < Lorentz> your question of drawing the same graph even if you pick a different node or even possibly changing the data is a good one though
07:15 < Lorentz> what was the word, isomorphic graphs?
07:15 < sinclair|net> Lorentz: i don't really know if its possible, given a cyclic graph A -> B -> C -> A, picking arbitrary nodes would have to yield a different graph unless you have some heuristic that selected one node over another.
07:16 < sinclair|net> Lorentz: and in A -> B -> C -> A, all nodes are weighted equally 
07:16 < Lorentz> you'll probably indeed have to pick heuristically which one to start off with
07:16 < owen1> any idea why line 25 never being called? - req.on('data', function (chunk) { ...
07:16 < owen1> http://pastebin.com/dNLM7juW
07:17 < sinclair|net> Lorentz: heh, i guess :)
07:19 < sinclair|net> Lorentz: take a look at http://jsplumbtoolkit.com/jquery/demo.html
07:19  * Hans  
07:19 < sinclair|net> Lorentz: love this library, the only problem is it doesn't arrange the graph for you
07:19 < Lorentz> well, that's the whole problem isn't it
07:20 < sinclair|net> yes, yes it is
07:20 < Lorentz> that lib seems to just draw lines accordingly between two objects
07:20 < Lorentz> that much is trivial
07:20 < sinclair|net> Lorentz: yeah, and it does such a nice job of it
07:21 < sinclair|net> Lorentz: its also nice it offers the interaction stuff on the graph too
07:21 < sinclair|net> Lorentz: pity it doesnt suppose auto arrange 
07:21 < sinclair|net> *support
07:21 < epta> How can I create array from 1 to 100?
07:24 < paulkon> sinclair|net: do you need to print a dep graph?
07:25 < sinclair|net> paulkon: how would you know that?
07:25 < paulkon> I just hopped into the convo...
07:25 < ChrisPartridge> epta: var arr = []; for(var i=1;i<=100;i++) arr.push(i);
07:26 < paulkon> if so: https://github.com/visionmedia/node-dep-graph
07:26 < paulkon> works well for me
07:26 < sinclair|net> paulkon: i don't use TJ's stuff
07:27 < paulkon> why not
07:27 < sinclair|net> paulkon: also, it has a native dependency on graphvis
07:27 < Tom___> Hi, could someone tell me what's the library compiler flags for openssl and realtime under smartOS? -lcryto and -lrt don't work.
07:27 < AAA_awright> It generates dot files which should be good enough
07:27 < paulkon> but why don't you use his stuff, I'm curious
07:27 < sinclair|net> AAA_awright: dot files, as in coordinates?
07:28 < AAA_awright> sinclair|net: The graphviz file format is fairly straightforward
07:29 < sinclair|net> AAA_awright: mmm, i kinda don't want the native dependency 
07:29 < AAA_awright> sinclair|net: And again, why? I've had a fair share of problems, but I don't outright refuse to use TJ's stuff
07:30 < ChrisPartridge> Tom___: I think they are the right flags, are you specifying the path with -L ?
07:30 < Tom___> Wanna compile wanna install this module https://github.com/barrysteyn/node-scrypt. And cannot do it because the flags generate an error.
07:30 < sinclair|net> AAA_awright: what problems?
07:31 < Tom___> I get node-gyp error: Need either CONFIG_H_FILE or HAVE_CONFIG_H
07:32 < Tom___> Package author says this is because the flags are wrong..
07:32 < AAA_awright> Well, um, handling of certain bugs, API design issues, dependencies on WAY too much unnecessary stuff
07:32 < sinclair|net> AAA_awright: i kinda reject a a lot of modules based on native dependencies, i just can't use native modules where i need to deploy
07:33 < sinclair|net> AAA_awright: which is a restrictive thing that mostly makes me unhappy
07:33 < AAA_awright> sinclair|net: You said you don't use TJ's stuff though, I'm specifically asking about that
07:33 < sinclair|net> why is it such a big deal?
07:33 < AAA_awright> Because it might be relevant to my interests?
07:34 < Lorentz> don't like his haircut
07:34 < AAA_awright> sinclair|net: There is a dot/graphviz implementation in ES though, via a recompiler
07:34 < sinclair|net> AAA_awright: i don't want to go into it, i have nothing against TJ, i just prefer to use more targeted stuff for what i need
07:34 < AAA_awright> That's probably not what you want, but it is possible
07:35 < sinclair|net> AAA_awright: oooo
07:35 < [AD]Turbo> hola
07:35 < sinclair|net> recompilation via...(that project i can't remember)
07:36 < AAA_awright> I forget too, but I found https://code.google.com/p/canviz/
07:37 < sinclair|net> AAA_awright: hey, you do a bit of .net right?
07:38 < AAA_awright> sinclair|net: Not really, some MSVC but not very many Microsoft-specific technologies
07:41 < geek2k3> any of you know any Polish node.js group/forum etc ?
07:41 < Tom___> Is there a irc channel for this fantastic SmartOS?
07:42 < sinclair|net> AAA_awright: have been looking at this owin / katana stuff recently
07:42 < sinclair|net> AAA_awright: http://weblogs.asp.net/pglavich/archive/2013/04/05/owin-katana-and-getting-started.aspx
07:42 < DORNER> ive bene comparing the same requests/responses between a server running node and another running php/apache.. php/apache is winning regarding how fast it takes to load all of the content.. most of it seems to have to do with the 'receiving' portion ofeach response
07:42 < DORNER> im using express, any ideas?
07:43 < paulkon> conclusion: node/express is slower than php/apache
07:43 < paulkon> done
07:43 < DORNER> heh
07:43 < paulkon> nah, jk
07:44 < dorner> it shouldn't be... i just don't understand why it's 'losing the race'
07:44 < dorner> i have compression going on, on both.. express.compress(), minimal middleware etc
07:46 < yenic> if you post all the details of your config and your code somewhere im sure someone can figure it out
07:46 < dorner> ya
07:46 < dorner> it's just odd though because
07:47 < dorner> right now im running atest where.. i use a middleware which returns 'hi', for every request..
07:47 < dorner> this takes precedence over everything
07:47 < dorner> node, 200-300 ms.. apache/php 100ms
07:47 < dorner> every time
07:48 < yenic> got me. apache/php is battle tested for sure, thats all i can say
07:49 < paulkon> 200-300ms??
07:49 < paulkon> holy crap something else is going on
07:49 < dorner> im going to play around with a raw connect code, im thinking this has to be express.. or something i'm doing with it
07:49 < dorner> ya
07:49 < dorner> i dont get it
07:49 < paulkon> that should be a <5ms reply
07:50 < paulkon> seriously
07:50 < paulkon> no joke
07:50 < dorner> well, im going over to some aws micro.. so def not 5ms from my connection
07:50 < dorner> hm
07:50 < dorner> well
07:50 < paulkon> oh
07:50 < zaleb> even 100 for apache/php is slow for a 'hi'
07:50 < paulkon> well
07:50 < dorner> the 'breakdown', is like this, 1sec
07:50 < paulkon> then maybe a little more
07:50 < paulkon> but not 200ms
07:50 < paulkon> 200ms is waayy too much
07:51 < paulkon> for 'hi'
07:51 < dorner> php is 'waiting 104ms, receiving 1ms'
07:51 < paulkon> yeah so it's not network latency
07:51 < dorner> node is 'waiting 107ms, receiving 99ms'
07:51 < dorner> for example
07:51 < paulkon> something else is going on
07:51 < dorner> it's this 'receiving portion' every time, which seems to be the difference maker
07:51 < paulkon> you're going to have to play around with it and dig through to see what's going on
07:52 < dorner> ya
07:52 < MitchW_> over a lan, on debian 7 (3.2.0.x), standard express app takes ~20-30ms to respond (just tested then) - relatively idle quad core w/ 8gigs ram
07:52 < dorner> im going to do a raw express/connect code
07:52 < imorris> How can i get the command list!
07:52 < dorner> MitchW_: thanks
07:52 < MitchW_> (w/ node 0.10.5)
07:52 < Lorentz> 100ms is way too long for anything simple
07:52 < paulkon> imorris: http://nodejs.org/api/index.html
07:52 < Lorentz> especially just over LAN
07:52 < Lorentz> or worse if on same machine
07:53 < paulkon> it should be a 1ms reply on the same machine
07:53 < dorner> it's a shitty aws micro tho.. might that be it?
07:53 < paulkon> 2-3ms over the network
07:53 < paulkon> for 'hi'
07:53 < ssafejava> even on a micro that should be < 5ms
07:53 < dorner> well.. i guess the only thing that stands out, is, it's always the same 'waiting'
07:53 < ssafejava> locally, that is
07:53 < dorner> for both php and node
07:53 < dorner> but the 'receiving' portion of the request
07:53 < ssafejava> dorner: post a pastebin of your node code?
07:53 < dorner> is what's a major difference
07:53 < MitchW_> Lorentz: over localhost I get GET / 200 32ms - 4.68kb
07:54 < paulkon> whole websites load in less than 200ms
07:54 < dorner> ssafejava: let me do a raw express, connect, code etc.. and see if it does the same thing
07:54 < dorner> im talking like some 5 liner
07:54 < ssafejava> dorner: Yeah. I would expect something in your middleware chain is taking a dump or doing some io where it shouldn't
07:54 < dorner> ya that's why im going to try and rule this out, thanks let me test, brb
07:55 < MitchW_> if i disable all the middleware that was enabled by default and just get a static resource, GET / 200 4ms - 2.55kb
07:56 < dorner> ok so
07:56 < dorner> it has to be something i'm doing in my middleware, thanks everyone... i just did this.. 5 line app, using 'middleware' to res.send('hi',200)
07:56 < ssafejava> maybe it's posting to twitter - "handing an http request... #nodejsproblems"
07:56 < MitchW_> (machine is load average: 0.08, 0.07, 0.06 - for reference)
07:56 < dorner> same waiting, 104 ms.... receiving is 1ms
07:56 < dorner> so
07:57 < AAA_awright> IT'S BECOME SELF-AWARE
07:57 < ssafejava> "#truebelieber"
07:57 < dorner> now im just wondering what could be causing it to slow down when 'responding'
07:57 < ssafejava> dorner: what middleware are you running? 100ms sounds like IO to me
07:57 < dorner> i mean, 'waiting' is thesame, between the test app and my app
07:57 < ssafejava> dorner: yeah waiting is just latency. 
07:58 < dorner> ya ssafejava but, im getting same waiting with an app that is using 0 middleware
07:58 < dorner> im using cookieparser,bodyparser,session,compress
07:58 < dorner> logger
07:58 < imorris> Thanks, i find the command list for the webchat yet now!
07:59 < gildean> imorris: you mean irc commands? like /whois and /ping etc?
07:59 < imorris> yes
08:00 < ssafejava> dorner: do you have some crazy cookies being sent to it? check your inspector. other than that, the stock middleware shouldn't be causing those kinds of delays
08:00 < MitchW_> dorner: 'hi' over both lan and localhost I get 1-3ms without compress/session
08:00 < dorner> cool thanks
08:01 < dorner> ssafejava: ya i'm confused hehe.. ;f
08:01 < gildean> imorris: http://en.wikipedia.org/wiki/List_of_Internet_Relay_Chat_commands but that doesn't include commands your client or the scripts loaded in your client might provide
08:02 < dorner> hm..
08:02 < dorner> in my test node app.. im getting the latency for 'receiving' now
08:02 < dorner> i added app.use(express.compress())
08:02 < dorner> 490 ms receiving, for 'hi'
08:02 < dorner> wtf
08:03 < dorner> it's mostly '98' though
08:03 < dorner> 98 ms
08:04 < dorner> http://hastebin.com/soruvosuhi.js
08:04 < dorner> uncommenting the express.compress line causes lots of latency for the 'receiving' portion
08:04 < dorner> of the response, in inspector
08:06 < gildean> dorner: you're using res.send in the wrong order, idk if that matters tho'
08:07 < gildean> iirc the docs say to use res.send(statuscode, string);
08:07 < gildean> if you're using it to send the statuscode as well
08:08 < gildean> also the console.log before the response is a blocking operation
08:08 < dorner> sorry typo'dthat
08:08 < dorner> ya
08:09 < dorner> thing is, with that compress line... significant latency.. without, none
08:09 < dorner> if i change that app.use(express.compress()) to app.use(express.logger()).. it's back to 0 latency
08:10 < tasslehoff> I have done a child_process.exec("tar <options> | gpg"). How do I kill this? kill('SIGKILL') does not do it.
08:13 < ssafejava> dorner: what version of express
08:13 < dorner> 3.2.6
08:13 < dorner> same thing happens with connect
08:13 < dorner> when i use .compress()
08:14 < dorner> tasslehoff: you did var bleh = child_process.spawn('...') ; bleh.kill() ?
08:15 < gildean> dorner: does the same thing happen if you send a slightly longer string in response and not just two characters?
08:16 < dorner> gildean: ya
08:17 < dorner> anywhere i use .compress(), it causes the ~98ms latency in 'receiving'
08:17 < dorner> in my test app, and my 'actual' app
08:19 < gildean> dorner: what version of node?
08:20 < dorner> 0.10.11
08:21 < dorner> i mean, i can pre-gzip, that's not a problem.. this little tool i wrote can uglify when a flag is set, i can just add gzip
08:21 < dorner> that'd solve that i imagine
08:22 < dorner> but ya im still experiencing weirdness regardless of .compress()
08:22 < jesusabdullah> I mean, duh? Of course compression takes a non-negligible amount of time
08:22 < ssafejava> well, it shouldn't take 100ms, esp. on text that small
08:22 < dorner> right
08:25 < dorner> that's why php/apache is winning basically.. php/apache is compressing via gzip.. and giving us the expected ~1ms latency on small files.
08:26 < dorner> my node libraries are giving those same files +98ms instead of 1ms, when gzip'n
08:26 < dorner> so that's pretty much what it narrows down too
08:26 < dorner> weird
08:27 < dorner> my connect version is 2.7.11
08:27 < dorner> express is using connect's .compress()
08:27 < substack> apache is probably aggressively pre-caching
08:28 < dorner> ya but even i am pre-cache'n
08:28 < dorner> i have my entire assets etc in a small hash
08:28 < dorner> which it can load from, very fast
08:28 < dorner> if i set a flag
08:28 < dorner> so no disk access etc
08:29 < dorner> i mean it looks like ill need to pre-gzip those files when i cache them, and just set gzip myself.. which is not a problem
08:29 < dorner> but im looking at connect source now
08:29 < dorner> to see if i see anything
08:31 < dorner> express/node_modules/connect/lib/middleware/compress.js, pretty small file
08:31 < dorner> sets up an io stream etc
08:32 < ssafejava> dorner: Yeah, tons of people use it. I use it myself and I don't see that kind of long response time 
08:32 < dorner> could you possibly try that small test code I pasted?
08:32 < dorner> and see if you see any latency?
08:33 < ssafejava> yeah just did.
08:33 < ssafejava> 3ms waiting 2ms receiving
08:33 < dorner> with compress uncommented?
08:33 < ssafejava> yep
08:33 < ssafejava> localhost though.
08:33 < ssafejava> what do you get on localhost?
08:33 < dorner> maybe it's something like, my gzip library or something? libz? heh
08:34 < dorner> sec
08:36 < dorner> hum, worked on my mac osx
08:36 < dorner> this server im coding on is ubuntu server 12.04.. it can't be the gzip libs (libz) though because of apache/php
08:36 < dorner> bleh i guess i'll just figure it out tomorrow or work around it.. i have no problem working around it
08:38 < dorner> thanks for the help everyone
08:38 < ssafejava> have a good night
08:38 < dorner> you too, pc
08:38 < dorner> back to sleep :F
08:48 < medoix> orry if this is a noob question but how can i get the value of each result in an array. If i have servers, { 'server1': 8080, 'server2': 8081, 'server3': 8082 } when i do a for in servers i seem to only get the server not the ports..
08:50 < AAA_awright> medoix: Access the object by value...
08:50 < AAA_awright> >> var map = { 'server1': 8080, 'server2': 8081, 'server3': 8082 }; for(var k in map){ console.log(k+' => '+map[k]); } // @medoix
08:50 < purr> AAA_awright: undefined; Console: 'server1 => 8080', 'server2 => 8081', 'server3 => 8082'
08:59 < medoix> AAA_awright: thanks heaps :)
10:04 < kevinsimper> hi
10:04 < kevinsimper> Is it possible to listen on all ports with node.js?
10:05 < kevinsimper> like 1 to 10000
10:05 < timoxley> kevinsimper sounds like a bad idea
10:07 < timoxley> kevinsimper: for (var i = 1; i < 10000; i++) { require('net').createServer().listen(i) } 
10:10 < xanm> Hello! Help! Can i build node for arm?
10:10 < timoxley> kevinsimper `npm search port scan`
10:10 < timoxley> xanm you can
10:13 < xanm> One more question. How can i put node Buffer in node-dbus( dbus-native) function call?
10:52 <@MI6> joyent/node: Ben Noordhuis v0.10 * a0b6df0 : Revert "configure: fix cross-compilation host_arch_cc()" - http://git.io/KNG10Q
11:22 < sinclair|net> isaacs: you around?
11:27 < bnoordhuis> sinclair|net: not for at least another three or four hours
11:27 < sinclair|net> i see
11:27 < sinclair|net> bnoordhuis: i have a question for you
11:28 < sinclair|net> bnoordhuis: can you do a npm search for me?
11:28 < bnoordhuis> sinclair|net: ... - can't you?
11:29 < sinclair|net> bnoordhuis: i mean, i want you to see something
11:29 < bnoordhuis> sinclair|net: okay, shoot
11:29 < sinclair|net> bnoordhuis: can you do a search for "typescript"
11:29 < sinclair|net> then, navigate to the second page
11:30 < sinclair|net> and see the third entry down
11:30 < bnoordhuis> yes. and?
11:31 < sinclair|net> bnoordhuis: why is that project ranked so low?
11:31 < nathan7> sinclair|net: that's not bnoordhuis's stuff at all
11:31 < bnoordhuis> ^ what nathan7 said
11:31 < nathan7> sinclair|net: npm is isaacs'
11:31 < sinclair|net> nathan7: yeah i know
11:32 < sinclair|net> but why is it ranked so low?
11:32 < bnoordhuis> okay, gotta run
11:32 < sinclair|net> it doesn't make sense 
11:32 < sinclair|net> somehow people are finding it
11:33 < sinclair|net> i just dont get why there are 3 grunt projects all doing the same thing ranked higher than that
11:33 < nathan7> think of a better ranking algorithm then
11:34 < sinclair|net> meh
11:35 < nathan7> sinclair|net: I mean, what are the distinguishing characteristics of the module that should be rated higher?
11:35 < sinclair|net> downloads, update regularity, version number, keywords and title
11:35 < nathan7> Mkay
11:36 < sinclair|net> call me crazy
11:36 < nathan7> I'm working on adding more stats, maybe we can work with that to improve search
11:36 < sinclair|net> nathan7: what's it currently based on?
11:36 < nathan7> sinclair|net: No idea
11:36 < nathan7> sinclair|net: I haven't looked at the search stuff
11:37 < sinclair|net> nathan7: i keep that project up to date religiously, and i refine it all the time, i keep dropping down the list
11:37 < sinclair|net> it doesn't really bother me all that much, but it is curious why i would
11:53 < statu> Hi!
11:54 < statu> I want to develop a RESTful API with Node.JS and MongoDB. I was looking for information and I found two interesting packages: Express and Locomotive
11:55 < statu> Locomotive seems a bigger project than Express, but I found much more information about express
11:56 < statu> Anyone has worked with Locomotive?
11:57 < shanse> how about restify
11:58 < rhalff> :q
12:00 < statu> yes, I forgot it
12:02 < statu> Do you suggest me to use restify? Is my first app with Node, so I am very undecided choosing the framework
12:08 < Vermicelli> why not just create your own api with express
12:08 < Vermicelli> ?
12:15 < statu> Vermicelli, because I think that it is to reinvent the road, doesn't it?
12:18 < Vermicelli> nopei
12:19 < Vermicelli> according to my experience it is more fine grained control
12:19 < Vermicelli> you can't expect a framework to satisfy all your needs
12:20 < serapath> hi
12:20 < Vermicelli> and the places where it doesn't fit your needs you bypass that via some hack 
12:20 < serapath> could someone please help me with module pattern? think thats what i have trouble with
12:20 < serapath> http://pastebin.com/2uexdC6F
12:20 < Vermicelli> that might create problem in future
12:20 < serapath> i want to use passport for authentification
12:21 < serapath> but doesnt work
12:21 < statu> Vermicelli, yes, you are right
12:22 < statu> Vermicelli, but it's my first development and I'm afraid :P
12:22 < Vermicelli> don't be. Follow TDD when you are writing API's. Mocha works nicely with express
12:23 < Vermicelli> that what we use to do BDD and functional unit testing.
12:23 < zbzzn> anyone knows if hasOwnProperty still relevant for for..in loops?
12:23 < Vermicelli> Also, you can use dox to generate API documentation
12:23 < OODavo> zbzzn: The behaviour of for..in loops isn't likely to change, I suspect.
12:23 < Vermicelli> that would help you keep things tidy.
12:23 < statu> Vermicelli, thanks you!
12:24 < Vermicelli> Sure, not a problem.
12:24 < Vermicelli> :)
12:24 < statu> I think that I'm going to follow your suggest
12:24 < Vermicelli> You on github?
12:25 < Vermicelli> serapath, post the code please.
12:25 < Vermicelli> statu. you on github?
12:26 < serapath> i have
12:26 < serapath> http://pastebin.com/2uexdC6F
12:26 < serapath> Vermicelli: what do u mean?
12:28 < Vermicelli> the code looks really ugly btw.
12:28 < Vermicelli> why do write it like that?
12:28 < Vermicelli> *you
12:28 < serapath> i dont know, so how should i improve it?
12:29 < serapath> Vermicelli: btw. it doesnt work
12:29 < Vermicelli> yeah, i can see that , Just the way  you wrote code makes it even harder to debug. 
12:29 < statu> Vermicelli, yes, carlosreig
12:30 < serapath> Vermicelli: i would be happy to improve it if u have any suggestions on that
12:30 < Vermicelli> yeah, the commenting is real bad. 
12:31 < Vermicelli> Why would you use comments to divide code? /*----------------------------------------------------------------------------*/
12:31 < Vermicelli> something like this. 
12:31 < Vermicelli> plus when u are requiring modules, require all of them on top
12:31 < Vermicelli> why would you split it in two parts
12:31 < serapath> Vermicelli: i devide not code, but multiple files
12:32 < serapath> Vermicelli: first is console output, second is router.js, third is app.js
12:32 < sinclair|net> serapath: i dont do that
12:32 < serapath> Vermicelli: how would i do it? post 3 pastebin adresses for each file?
12:32 < Vermicelli> yeah, why not
12:32 < Vermicelli> isn't it less confusing
12:32 < serapath> Vermicelli: so one for console output, one for router and one for app
12:32 < serapath> ok i do
12:33 < Vermicelli> or better post the link of your github project
12:33 < Vermicelli> it will be better for anyone to just see and debug. People want to help you, but this naturally repel them away.
12:34 < xanm> In which IDE better write js code for node.js?
12:34 < Vermicelli> You don't need an IDE to code node, 
12:34 < serapath> Console Output: http://pastebin.com/zaJSL8Zv app.js: http://pastebin.com/3qZyNyz9 router.js: http://pastebin.com/Ag8R4hiV
12:34 < sinclair|net> xanm: visual studio or web matrix
12:34 < Vermicelli> But i would suggest using sublime text2
12:34 < serapath> could u tell me what the error is all about_
12:35 < Vermicelli> with good plugins for express, jade
12:35 < serapath> ?
12:35 < toothrot> how about sublime text 3
12:35 < eperez_> Sublimet text 2 is the best
12:35 < Vermicelli> it is on python3 and not all the plugin
12:35 < Vermicelli> yet work
12:35 < Vermicelli> with it so you are safe with ST2
12:36 < Vermicelli> @serapath: yeah sure, like i said. It is confusing to debug in that format. And from the code, i guess you must have a github repo for it , why not just show it?
12:37 < Vermicelli> @statu: Just followed you on github
12:37 < Vermicelli> you could check some of my repos on git project. Might help you with project structure and stuff.
12:38 < statu> Vermicelli, yes, sure. Thanks you again!
12:38 < Vermicelli> :)
12:38 < sinclair|net> Vermicelli: what project structure?
12:38 < booyaa> xanm: vim with these plugins https://github.com/mmalecki/dotfiles
12:38 < sinclair|net> Vermicelli: are you saying there is a accepted project structure for nodejs applications ?
12:38 < FunnyLookinHat> I'm looking for good examples of Node projects that organize large amounts of code well ( i.e. some semblance of directory structure to mirror code use cases ) - Anyone know of anything they're seen on github that's particularly good?  :)
12:38 < booyaa> xanm: learn you some vim using vimcasts.org
12:39 < Vermicelli> we mostly follow rails like thin controllers, heavy models 
12:39 < Vermicelli> approach.
12:39 < Vermicelli> @sinclair : nothing like that
12:39 < booyaa> vim + grunt = ftw
12:39 < Vermicelli> but we have been using it for 3 of sites in production and it is easy to maintain.
12:39 < Vermicelli> so why not suggest that to someone who is starting out, mate?
12:39 < sinclair|net> Vermicelli: i just structure module code however it suits that project, and use the TS compiler to compiler it up into a single index.js file
12:40 < Vermicelli> a) I don't use TS yet, haven't felt the need till date. 
12:40 < sinclair|net> Vermicelli: thats how i do it, im not forced into structuring things all weird that way, 
12:40 < Vermicelli> it's not weird, if things makes sense to a dev
12:41 < Vermicelli> it is perfectly natural for our approach.
12:41 < sinclair|net> Vermicelli: well, managing dependencies for example, its all a bit flimsy 
12:41 < Vermicelli> Also, rails have been doing that for quite some years. So it is quite tried and tested.
12:41 < sinclair|net> Vermicelli: i like being able to define the dependancies between modules, and optionally bundle all dependent code into one output.
12:42 < sinclair|net> Vermicelli: sadly, i had to invent that approach... can i show you something?
12:42 < Vermicelli> a) It is not .NET based stack, so why force going that approach if you could do it that way,
12:43 < sinclair|net> Vermicelli: its not forced...
12:43 < Vermicelli> btw, sinclair if you don't remember me, we already had a pretty long chat about TS and stuff.
12:43 < sinclair|net> Vermicelli: this is currently how i am handling my builds https://github.com/sinclairzx81/calcium/blob/master/build.js
12:44 < sinclair|net> Vermicelli: where each "module" is just some directory under node_modules
12:45 < sinclair|net> Vermicelli: this way, i have a fairly clean dependance graph i ca use to compile modules as sibling modules, or as a single unit
12:45 < Vermicelli> Well, that thing is you have a good experience with the .NET stack and the approach you follow there are quite different. (many good things there), But over here in node they are different. 
12:45 < Vermicelli> https://github.com/vinitcool76/node-modular-demo
12:45 < Vermicelli> Check this
12:45 < Vermicelli> it is clean as well and very reusable at the same time. 
12:45 < Vermicelli> It is just a small demo but quite enough to show the point.
12:46 < sinclair|net> Vermicelli: i don't get it
12:46 < Vermicelli> which part?
12:46 < sinclair|net> what i should take away from this?
12:47 < sinclair|net> Vermicelli: you have a seperate module loading express routes?
12:47 < Vermicelli> yeah so?
12:47 < sinclair|net> well, how is it good tho?
12:48 < sinclair|net> Vermicelli: that works for express, but how is that going to work for other things, like dnode?
12:48 < sinclair|net> or some other thing?
12:48 < Vermicelli> why would i use dnode?
12:49 < sinclair|net> i don't know, its quite useful
12:50 < Vermicelli> well, look depends upon use case? Our approach is to create RESTFUL API's and consume it in your app, test with mocha or whatever. 
12:51 < sinclair|net> Vermicelli: i see
12:51 < Vermicelli> For that purpose rails like heavy models and thin controller and express is based on sinatara
12:51 < Vermicelli> so it just fits perfectly
12:51 < Vermicelli> why reinvent wheel when you are already borrow lots of good thing from other stack.
12:51 < sinclair|net> Vermicelli: oh, that project is in reference to a video cast TJ did on making express modular?
12:51 < Vermicelli> That's that i think.
12:51 < Vermicelli> yeah, this one. But not the one i use. 
12:51 < Vermicelli> https://github.com/vinitcool76/node-twitter
12:52 < Vermicelli> we use similar approach to this project on your sites.
12:52 < Vermicelli> *our
12:52 < sinclair|net> Vermicelli: someone else said it in here before, that the ecosystem is polluted with too much junk, and there is a API bubble thing going on thats ready to burst
12:53 < Vermicelli> people say a lot of things.
12:53 < gildean> you shouldn't listen to sinclair|net about anything regarding to express, he has something personal against tj and all tj's projects
12:53 < sinclair|net> Vermicelli: there are 33 375 packages on npm right now
12:53 < Vermicelli> i think it has merit. And it serves it's purpose.
12:53 < Vermicelli> That is good thing right?
12:53 < sinclair|net> Vermicelli: depends on your definition of good i suppose
12:54 < Vermicelli> What do you think ? That everything coded in .NET ecosystem is pure gold?
12:54 < Vermicelli> there are good and bad things everywhere
12:55 < Vermicelli> rather that criticising the lower entry barrier of npm eco-system, why not just contribute something to improve quality?
12:55 < sinclair|net> Vermicelli: i did contribute
12:56 < sinclair|net> Vermicelli: you mad bro?
12:57 < Vermicelli> Do people use your module? Is someone using it in production?
12:57 < sinclair|net> Vermicelli: i know places using it
12:58 < sinclair|net> Vermicelli: 3 places as far as i know
12:59 < Vermicelli> care to share your  module? are all of them .NET converts coming to node? 
13:00 < sinclair|net> https://npmjs.org/package/typescript.api
13:00 < zbzzn> we have seen the light
13:01 < Vermicelli> Oh, the TypeScipt thingy? I have seen this before.
13:02 < Vermicelli> Most of the time , i don't even understand its need. 
13:02 < sinclair|net> Vermicelli: a couple of places are using it for automated builds
13:02 < Vermicelli> just because google made DART, MS had to make TS 
13:02 < Vermicelli> :P
13:02 < sinclair|net> Dart and TS have completely different goals
13:02 < Vermicelli> sinclair: heard about grunt?
13:03 < sinclair|net> Vermicelli: yes
13:03 < Vermicelli> Waht is the goal of TS?
13:03 < Vermicelli> Yet another lang compilable to JS .. *YAWN*
13:04 < Vermicelli> *what
13:05 < sinclair|net> Vermicelli: yeah, what is all typescript is, just another javascript trans compiler, nothing more, and offer zero benefit
13:05 < sinclair|net> Vermicelli: i suggest you don't use it
13:05 < Vermicelli> who uses it btw?
13:06 < sinclair|net> i do
13:06 < Vermicelli> good for you. You see that is the liberty you can have in JS ecosystem, you write YAC and work perfectly.
13:07 < sinclair|net> YAC?
13:07 < Vermicelli> what i don't get is you useless bashing express and mocha, Yet Another Compiler for JS.
13:07 < sinclair|net> wait, when did i bash express?
13:07 < Vermicelli> and anything that TJ does.
13:08 < sinclair|net> or mocha?
13:08 < Vermicelli> don't you always? 
13:08 < sinclair|net> when did i bash tj?
13:08 < sinclair|net> no?
13:08 < sinclair|net> all i said was i don't use express because it doesn't do what i need it to
13:08 < Vermicelli> gildean	you shouldn't listen to sinclair|net about anything regarding to express, he has something personal against tj and all tj's projects
13:08 < Vermicelli> that's what
13:09 < sinclair|net> what's what?
13:09 < Vermicelli> you don't use express because you dont need it.
13:09 < Vermicelli> many people do. 
13:09 < sinclair|net> that me not using express is somehow a negative on TJ?
13:09 < Vermicelli> it spreading FUD
13:09 < sinclair|net> Vermicelli: good for them, i don't use it, i don't need to
13:10 < Vermicelli> if you think there is something better you can contribute why not create something better,
13:10 < sinclair|net> already have
13:11 < Vermicelli> just one module  > all of work TJ has done ?  or that one module does everything you require in project?
13:11 < sinclair|net> Vermicelli: you mad bro?
13:12 < Vermicelli> look, why not have a positive approach and see good in this imperfect world.
13:12 < sinclair|net> Vermicelli: you keep going on inferring all this crap because i don't agree with you. 
13:12 < jdelgado> Hey guys - not the place to have an argument
13:13 < Vermicelli> I am not inferring anything. It's you who keep bashing express, jade, mocha even npm for no reason.
13:13 < neeky_> Does anyone have trouble getting Eclipse to save a debug perspective the way they want it?
13:13 < Vermicelli> Cool, if you don't use it. Why bash someone if he is asking something about them, Also, i don't want to argue anymore.
13:14 < sinclair|net> Vermicelli: when did i?
13:14 < jdelgado> Guys - Stop.
13:14 < neeky_> I get all my debug windows arranged just like I like them, abd eclipse resets them every time i debug
13:14 < Vermicelli> chuck it man. I dont want to argue anymore.
13:14 < sinclair|net> Vermicelli: then kindly stop
13:14 < Vermicelli> i already did. Thanks for noticing. 
13:14 < sinclair|net> ...
13:15 < neeky_> I like my debug code window larger than a sliver across the middle of the screen
13:15 < macbn> hello
13:15 < Vermicelli> hello
13:15 < macbn> i have a question about node cluster
13:16 < Vermicelli> sure go ahead
13:16 < macbn> when i setup a cluster, do I define something like RedisStore in each of the fork?
13:16 < jdelgado> neeky_: Is eclipse any good? I always use sublime and debug with nodemon in a seperate window
13:17 < Vermicelli> jdelgado: I use the same setup. 
13:17 < neeky_> I't pretty good, for some reason it resets all the positions of my debug windows
13:18 < Vermicelli>  neeky_ : does it have live linting as well?
13:18 < Vermicelli> haven't used it for JS
13:18 < neeky_> I don't code with it because it sucks
13:18 < sinclair|net> macbn: each fork (in a cluster sense) should be considered a "copy" of your application, so yes, any in memory objects you need should be created in each fork
13:18 < neeky_> I just use it to debug
13:19 < macbn> how about socket io?
13:19 < neeky_> Vim * syntactic + vim-javascript + youcompleteme
13:19 < jdelgado> neeky_: Ahh my brother uses it to code, but he does ColdFusion... lmfao
13:19 < neeky_> I just use it to debug node apps
13:19 < neeky_> and its starting to suck at that
13:19 < sinclair|net> macbn: that is a copy also, although cluster does some fancy stuff to allow http handlers share the same port
13:20 < jdelgado> nice
13:20 < Vermicelli> neeky_ : tried using nodemon ?
13:20 < sinclair|net> macbn: try it and see
13:20 < macbn> i tried and it emits 4 times
13:20 < macbn> (my cluster is 4 forks)
13:20 < neeky_> you mean just starting my app with nodemon vs node?
13:20 < sinclair|net> macbn: it should only be hitting one of them
13:20 < Vermicelli> yeah?
13:20 < neeky_> I do that all the time
13:20 < macbn> oh
13:21 < macbn> ok thank you
13:21 < sinclair|net> macbn: i would assume so
13:21 < Vermicelli> oh
13:21 < macbn> i understand now
13:21 < neeky_> but use eclipse to visually step
13:21 < neeky_> and watch variables, etc
13:21 < macbn> now i use redis as socket io store, it only hit once
13:22 < macbn> when i didnt use redis, it hits 4 times
13:22 < sinclair|net> macbn: so all good?
13:22 < macbn> ya all good
13:22 < sinclair|net> macbn: you're welcome
13:24 < macbn> one more question
13:24 < macbn> this is kind of specific
13:25 < macbn> when i use connect-redis and socket-io redis
13:25 < macbn> shoud i separate the RedisStore?
13:25 < macbn> and the redis
13:25 < macbn> if i dont separate, it doesnt work
13:26 < sinclair|net> macbn: each fork should be considered entirely separate from the other, they should not share objects
13:27 < macbn> sorry, this one is not the cluster question
13:28 < sinclair|net> macbn: tbh, i haven't done a lot of work with socket.io with a redis backend, so can't help, have a go asking Vermicelli 
13:28 < macbn> ok
13:28 < macbn> thanks
13:39 < Zopieux> hi
13:39 < Zopieux> i'm using felixge mysql module
13:40 < Zopieux> I would like to catch integrity errors when doing a query
13:40 < Zopieux> maybe i should use function(err) callback?
13:44 < Katafalkas> Hey, whats the difference between nodejs branched: v0.10-merge and v0.10.12-release ?
13:45 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:46 < neeky_> I'm trying to make a default route that checks the session object to see if the current session is authorized . This code: https://gist.github.com/nikmartin/bda0990db7aeb4a7c44a at line 4 goes into a black hole and never returns. Any ideas?  am i missing something obvious?
13:47 < jdelgado> neeky_: First, replace res.json with res.send(401, {});
13:47 < jdelgado> and you can remove res.end
13:48 < jdelgado> Secondly,, is session.user an async function?
13:48 < neeky_> since all my routes are below this one, I have the top check that says "if you are actually trying to authenticate, then skip the check"
13:48 < nathan7> neeky_: app.all('*', fn) *adds a route*
13:48 < jdelgado> indeed
13:48 < nathan7> neeky_: you're adding an extra catchall route on every request
13:48 < jdelgado> don't use a route for that, do middleware
13:49 < neeky_> so attach a function to each route?
13:49 < jdelgado> No, just do app.use(myfunction());
13:49 < jdelgado> before the routes
13:49 < jdelgado> and they will automatically use it
13:49 < neeky_> what is the protoype for myFunction?
13:50 < neeky_> myfunction(req,res, next){}?
13:50 < jdelgado> yessir
13:50 < neeky_> ahh
13:50 < neeky_> just like the built ins in express
13:50 < jdelgado> Yeah, and you forgot to pass the param next in your gist
13:51 < neeky_> the problem is i cant just redirect the response since the end user is a mobile app, not a browser
13:51 < neeky_> Ok cool, I'll re-write this as a middleware function and see what happens
13:51 < neeky_> thanks
13:52 < jdelgado> I actually just had to deal with something similar
13:52 < jdelgado> I just ended up writing individual clients for broweser, app, etc and did an API
13:52 < neeky_> I'
13:52 < neeky_> I'm trying hard not to do that
13:52 < jdelgado> Other than the initial load, everyone is using the API for requests
13:52 < jdelgado> lol you'll get there
13:52 < neeky_> by using backbone on the client browser side and consuming the same api my mobile app does
13:53 < neeky_> right now / route is pure browser, and the app only ever connects to /api/*
13:53 < jdelgado> yeah, good move
13:53 < neeky_> so browser can also use /api/*
13:53 < neeky_> using jquery * backbone
13:53 < jdelgado> I kept my API / web on a different node instance to keep them seperated
13:54 < jdelgado> so someone that goes to the site and gets a 404 doesn't get JSON
13:54 < neeky_> are you the airbnb guy?
13:54 < jdelgado> Nope
13:54 < jdelgado> I'm the fool writing a POS
13:54 < neeky_> ah
13:54 < neeky_> sweet idea thiugh
13:54 < neeky_> Ive thought about cloud POS for a long time
13:55 < jdelgado> :)
13:55 < jdelgado> It's gonna be off the chain
13:55 < neeky_> Ive always thought expensive POS hardware was a scam by the POS industry
13:56 < jdelgado> Actually, recently, the prices for POS's have come down a lot.. you can get a full all-in-one for 1k, use to be like 3k
13:56 < neeky_> my app is the same thing - the industry Im in just crushes its customers with huge up front costs, per user licensing, and huge support fees
13:56 < jdelgado> neeky_: What you doin?
13:56 < neeky_> my app will turn it on its head - just pay for each report you submit
13:56 < neeky_> it's a medical reporting app
13:56 < serapath> could someone help me with how to setup passport in a proper way?
13:56 < jdelgado> neeky_: Yeah, medical needs a lot of help
13:56 < serapath> i tried, but im stuck
13:57 < neeky_> its 8 years behind
13:57 < serapath> https://github.com/serapath/test_epmjs
13:57 < jdelgado> serapath: What you need brah?
13:57 < serapath> it works without passport
13:57 < serapath> now i tried to integrate passport
13:57 < serapath> but somehow something goes wrong and i dont know what or why
13:57 < neeky_> serapath, 1: get rid of those tabs
13:57 < jdelgado> serapath: Would you like to add passport and commit, i'll take a look?
13:58 < neeky_> :
13:58 < serapath> its added
13:58 < serapath> which tabs?
13:58 < jdelgado> gotcha
13:58 < jdelgado> neeky_: I USE TABS!
13:58 < neeky_> I'm just kidding - nl.js is full of tabs
13:58 < neeky_> BOOOOOO
13:58 < serapath> whats wrong with tabs?
13:58 < jdelgado> It's a long time developer debate
13:59 < jdelgado> Just spaces vs tabs - don't worry about it
13:59 < neeky_> lines 4-9 in nl.js would look just like that in my editor and drive me crazy
13:59 < serapath> oh ok, always used tabs, dont have a special reason why
13:59 < neeky_> serapath, it's a religion
13:59 < jdelgado> you're right, tabs > spaces :)
14:00 < serapath> sometimes when i use other peoples code and it uses tabs, my editor automatically can put it to 2indent where others often use 4indent
14:00 < serapath> i like that, but beside that... dont really care
14:00 < neeky_> my one and only rant on tabs: they look different ov every system - on lines 4-9 of nl.js, that's what that file woul look like on my system as well
14:00 < neeky_> but with spaces, they look the same on every system
14:00 < ozette> ew tabs
14:00 < jdelgado> neeky_: I just set the size in sublime
14:00 < serapath> me2
14:00 < jdelgado> serapath: What exactly is erroring so I know where to look
14:00 < neeky_> but github cant understand that, and neither can my vim or eclipse :)
14:01 < serapath> the important file is router.js
14:01 < jdelgado> Since i'm PCI compliant, I can't use GitHub :(
14:01 < serapath> i think currently i commented passport out
14:01 < neeky_> ok, back to re-factoring my auth code 
14:01 < serapath> its line 50 to 64
14:01 < jdelgado> k
14:01 < serapath> in router.js
14:01 < jdelgado> neeky_: Have fun!
14:02 < serapath> it currently works, but doesnt use passport
14:02 < serapath> if u have any refactoring suggestions (maybe i shouldnt put passport stuff into router.js
14:02 < jdelgado> serapath: So you're asking how to do it?
14:02 < serapath> i would be happy
14:02 < serapath> somehow, yes...
14:02 < jdelgado> Oh lol, I thought there was an error
14:02 < jdelgado> Passport is just middleware
14:03 < serapath> sure, there is, because currently it doesnt work ;-)
14:03 < jdelgado> You can do app.post('/login', passport.authenticate('local', { successRedirect: '/',
14:03 < jdelgado>  failureRedirect: '/login' }));
14:03 < serapath> doesnt that need flash?
14:03 < jdelgado> serapath: Lol you're confusing me, is there an error or no?
14:03 < jdelgado> flash?
14:04 < serapath> the error is, that when i uncomment line 50 to 63 and comment 37 to 49
14:04 < serapath> thus, switch current code for passport
14:04 < serapath> the login doesnt work anymore
14:04 < serapath> i'm stuck at the login screen
14:05 < serapath> and i have no clue why
14:05 < serapath> so the error is, that authentification doesnt work
14:05 < jdelgado> auth isnt defined
14:05 < serapath> jdelgado it is
14:05 < serapath> its an argument of the exports function
14:06 < jdelgado> ah
14:06 < serapath> i dont know if thats the proper way to do it
14:06 < serapath> i pass passport to it in nl.js
14:07 < jdelgado> Well I can tell you one thing that is really funky, you are executing it in line - which means it wont run every time someone requests something
14:07 < jdelgado> I would remove it from that
14:07 < meggesje> clear
14:07 < serapath> remove what from what?
14:07 < jdelgado> and I would make a new file called auth.js or whatever, so your same export method, then do app.use(require('./auth')());
14:08 < serapath> (btw. if u have any suggestions on how to better organize my code, that would be nice too)
14:08 < jdelgado> That function, your auth that is commented out, will never work
14:08 < jdelgado> I would comepletely remove routes, have individual files for each route, instead of cramming them all into one file
14:09 < serapath> i'm pretty confused what i should do exactly. 
14:10 < jdelgado> lol
14:10 < jdelgado> remove the auth struff that is commented out in router.js
14:10 < jdelgado> That will never work
14:10 < serapath> so i take everything which is passport related to auth.js which i create
14:10 < jdelgado> yes
14:10 < serapath> then i require that one and use it in app.use
14:11 < serapath> right?
14:11 < jdelgado> yes
14:11 < serapath> what about local strategy?
14:11 < serapath> how would i require that?
14:11 < jdelgado> What is that?
14:11 < serapath> and do i have to pass the passport object i use in app.use(auth) to my router, so that it could use the same one?
14:11 < serapath> like nl.js
14:12 < jdelgado> Check out http://passportjs.org/guide/authenticate/
14:12 < serapath> line 35
14:12 < serapath> ah i dont have to, because would only be used in auth.js
14:14 < jdelgado> Good?
14:16 < serapath> jdelgado: https://github.com/serapath/test_epmjs
14:17 < serapath> like so? still the same, nl.js starts, shows login screen, but does not log in
14:24 < aandy> ugh, i have to set passwords on a non-linux system over ssh. impossibru as oneliner. interactive shell is seriously the killer of automatization
14:31 <@isaacs> sinclair|net: I don't know why your package is ranking low on search for "typescript"
14:31 <@isaacs> sinclair|net: it's all elasticsearch's magic
14:32 <@isaacs> sinclair|net: maybe it doesn't read . as a delimiter?
14:32 <@isaacs> i don't really know
14:32 < jdelgado> isaacs: A sort by downloads would be great :)
14:33 < sinclair|net> isaacs: i did change the package description earlier today, but i actually dropped one by doing that
14:34 < sinclair|net> isaacs: so yeah, i dont know
14:34 <@isaacs> sinclair|net: i woulnd't worry too much about it
14:34 <@isaacs> create a good module, fix bugs and do something that's useful for you
14:34 <@isaacs> fame may or may not come.  who cares?
14:34 < sinclair|net> isaacs: its fine, i don't personally mind
14:34 <@isaacs> sure
14:35 < sinclair|net> isaacs: its not about being big, rather i thought it was curious
14:35 <@isaacs> yeah, i hear ya
14:35 <@isaacs> i mean, the others on that list ARE pretty typescript related also
14:35 < sinclair|net> isaacs: what is the ranking tho?
14:35 < sinclair|net> is there any?
14:35 < nathan7> isaacs: but some of them haven't been updated in a long time
14:35 <@isaacs> sinclair|net: it's elasticsearch's "relevance" algorith
14:35 <@isaacs> m
14:36 < nathan7> and some of them are simply duplicates
14:36 < nathan7> Though I think last update time is a shit metric
14:36 < nathan7> a module might just be complete
14:37 < sinclair|net> isaacs: what seems to happen a lot tho is the same old projects perk to the top, where there are other distinct packages there are hard to find. 
14:37 < nathan7> also seeing the nth grunt plugin is kind of annoying
14:37 <@isaacs> sinclair|net: i hear ya.  patch welcome
14:38 <@isaacs> sinclair|net: sometimes it's not that ay
14:38 <@isaacs> sinclair|net: and it's a pretty hard thing to test for
14:38 <@isaacs> since it's so subjective
14:38 < sinclair|net> isaacs: yeah, i guess it would be
14:38 < jas-> aandy: Here you go https://gist.github.com/jas-/5858980
14:42 < aandy> jas-: ah, sorry, i meant the tty in the remote box. the ssh cmd itself is no problem (public key). there are variations i can get to "work", e.g. (sleep 1 && echo "pass" && sleep 1 && echo "pass" ) | ssh ... sudo passwd <user>
14:43 < aandy> but it's extremely hackish, and gives me nightmares just considering doing that. even if i did, the problem would still be that i'm using the CURRENT os tty rather than the remote box tty. blah
14:45 < jas-> aandy: I believe SSH allows you to specify the TTY The -T will disable while the -t will force remote tty allocation as well as the $SSH_TTY var
14:45 < jas-> aandy: http://linux.die.net/man/1/ssh
14:54 < aandy> jas-: yeah, and -t -t should do what i want, but i've still to make it work as a ssh ... echo pw | passwd ish cmd. thanks though
14:55 < mrvisser> Hmm, is anyone using npm 1.3 yet? I'm finding that if I do: npm install optimist@0.1.x, I get 0.1.0, not 0.1.9 which is the latest
14:55 < mrvisser> this was not the case in npm ~1.2
14:57 < nathan7> mrvisser: Oi, that's interesting
14:59 < mrvisser> yea. Just opened an npm bug for it
14:59  * nathan7 checks github notifications
14:59 < nathan7> I'll bisect that in a bit then
15:00 < nathan7> mrvisser: I can in fact not reproduce this
15:01 < nathan7> mrvisser: npm cache clean and try again?
15:01 < mrvisser> sure. There was a semver upgrade between 1.3.0 and 1.3.1 of NPM, maybe that's the ticket?
15:01 < mrvisser> nathan7: what version of npm are you using?
15:01 < nathan7> mrvisser: quite possibly
15:01 < nathan7> mrvisser: master (1.3.1)
15:01 < mrvisser> ok, I'll try the cache clean
15:02 < nathan7> I just have master npm linked in because I work on npm stuff
15:02 < mrvisser> nah, no help. 1.3.1 must be it.
15:03 < nathan7> let's see
15:03 < nathan7> Yeah
15:03 < nathan7> I see it happening with 1.3.0
15:03 < mrvisser> thanks nathan7, I've closed the ticket. that's an ouchy
15:04 < nathan7> Yar, I saw
15:04 < nathan7> and fixed your comment q=
15:04 < mrvisser> thank you sir
15:07 < chewed-on> Yo, Node.js comes with Socket but default right ?
15:07 < chewed-on> because there's socket.write() ….
15:07 < chewed-on> What's the difference between the socket that comes with Node.js and Socket.io ?
15:08 < nathan7> chewed-on: that's an actual socket
15:08 < nathan7> chewed-on: as in a TCP socket
15:08 < chewed-on> right
15:08 < chewed-on> Isn't Socket.io just built ontop of it ?
15:08 < nathan7> chewed-on: socket.io is basically an EventEmitter-y interface to WebSockets with fallbacks and stuff
15:08 < chewed-on> Rightio.
15:09 < nathan7> It's for having browser code communicate with your server with an EventEmitter-y interface
15:09 < nathan7> (you can use it for server-server too)
15:09 < chewed-on> Just did a 30 minute tutorial on chat server with Socket.io, very cool :)
15:10 < chewed-on> nathan7: do yo know if Socket.io works with iPhone apps (native Objective C apps)
15:10 < chewed-on> I heard it doesn't work well on 3G and resorts to something called long polling (client keeps sending a request to server every interval to request new data).
15:11 < nathan7> chewed-on: Long polling isn't that slow.
15:11 < nathan7> chewed-on: and you should be using SSL anyway
15:11 < chewed-on> TLS ? :D
15:12 < nathan7> use HTTPS and all will be fine
15:13 < mscdex> aandy: there's always node!
15:16 < chewed-on> nathan7: so I read this page here:  http://nodejs.org/api/https.html  do we not need a SSL certificate to create a HTTPS server ?
15:17 < Sirisian|Work> wth
15:17 < nathan7> chewed-on: Yeah
15:17 < nathan7> chewed-on: You do
15:17 < Sirisian|Work> same question. I'm looking at http://nodejs.org/api/https.html#https_https_request_options_callback and I have a key, cert and intermediate.crt what do I use for the intermediate.crt? pfx isn't valid apparently?
15:18 < nathan7> chewed-on: If you want to do realtime on mobile networks, you're gonna need SSL
15:18 < chewed-on> nathan7: how do you request for the certificate in the Node.js source ?
15:19 < chewed-on> cert: fs.readFileSync('test/fixtures/keys/agent2-cert.pem')
15:19 < chewed-on>  ?
15:19 < nathan7> Yeah, pretty much.
15:19 < chewed-on> Rightio.
15:19 < nathan7> This is a startup thingy so sync IO is fine
15:19 < nathan7> (it'll never happen when you're actually serving requests)
15:21 < FunnyLookinHat> I'm looking for good examples of Node projects that organize large amounts of code well ( i.e. some semblance of directory structure to mirror code use cases ) - Anyone know of anything they're seen on github that's particularly good?  :)
15:22 < Trangar> I don't, but I have to say it's a good idea
15:24 < Sirisian|Work> ah ca: was it!
15:24 < chewed-on> FunnyLookinHat: Geddy web framework ?
15:24 < FunnyLookinHat> chewed-on, I'll check it out - thx
15:24 < Sirisian|Work> I have ssl working. They should really make it so node.js works with unsigned certs though sometime. Had to use a signed cert or it would fail. Apparently there's bug reports for that.
15:25 < chewed-on> FunnyLookinHat: http://geddyjs.org/documentation#architecture
15:25 < FunnyLookinHat> chewed-on, ha just found the same link...  thanks!
15:26 < chewed-on> FunnyLookinHat: Geddy has tools to generate MVC stuff for you too, so your controllers, views and models can be generated using command line tools.
15:27 < Jar8576874984984> Can't find socket.io.js
15:28 < chewed-on> Jar8576874984984: is that your browser's error output ? GET error socket ?
15:29 < Jar8576874984984> chewed-on I'm getting Cannot GET /socket.io/socket.io.js
15:29 < chewed-on> Jar8576874984984: I just did a tutorial earlier, turns out I was using localhost but on my iPhone, I needed to connect to my iMac using the IP address of my iMac.
15:29 < chewed-on> Jar8576874984984: did you go npm install socket.io earlier ?
15:29 < Jar8576874984984> yes
15:30 < SomeoneWeird> Jar8576874984984, https://github.com/visionmedia/express/wiki/Migrating-from-2.x-to-3.x
15:30 < SomeoneWeird> you're using an old tutorial
15:31 < Jar8576874984984> I'm not using Express
15:31 < SomeoneWeird> so...?
15:32 < chewed-on> Jar8576874984984: do you have a line in your source code like:   var socketio = io.connect("localhost:4000"); ?
15:33 < Jar8576874984984> YES! Instead of localhost it's Ip of the server
15:33 < chewed-on> Jar8576874984984: yeah, can you try putting a "http://" before "localhost" or the IP of your computer ?
15:34 < chewed-on> so something like:  var socketio = io.connect("http://localhost:4000"); or var socketio = io.connect("http://192.168.1.10:4000");
15:34 < Jar8576874984984> I have worked with Socket.io before chewed-on 
15:34 < chewed-on> ok..
15:34 < Jar8576874984984> I understand you lost in basic :P
15:34 < chewed-on> yes sir yes I am
15:34 < chewed-on> :)
15:34 < chewed-on> *shuts up*
15:35 < gildean> rather do: io.connect(window.location.href); if you're just loading it from the front page
15:35 < gildean> then you don't need to change the address if you move the server
15:37 < nathan7> gildean: You can just do io.connect()
15:37 < nathan7> gildean: No need to put a URL in.
15:38 < gildean> ah, you're right
15:38 < gildean> i always forget that one
15:40  * Jar9869458293812 I'm BACK
15:48 < tasslehoff> is the author of node-archiver on #Node.js?
15:50 < aandy> mscdex_: :p
15:50 < serapath> hi
15:52 < Jar9869458293812> I guess He is not there
15:52 < Jar9869458293812> ?
15:53 < simong> The docs for setTimeout state that node makes no guarantue about an exact timing of firing the callback. Is it possible that a callback can get fired *before* the delay has passed?
15:53 < simong> ie: Is it possible that setTimeout(callback, 2000) could get called after 1800 ms (for example) ?
15:54 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:55 < nathan7> simong: No.
15:56 < nathan7> simong: It may be fired later because the event loop may be blocked.
15:56 < simong> ok, cool
15:57 < simong> Yea, that much seems logical, we're seeing an intermittent test failure during high io which seems to originate at a setTimeout, so just eliminating possibilities :)
16:04 < serapath> hi, have a problem with my passport authentification. in router.js line 38-42 i successfully retrieve username and password from the client, but when i call passport.authenticate, the local strategy does not get invoked. whats the problem?
16:04 < serapath> https://github.com/serapath/test_epmjs
16:16 < owen1> any idea why line 25 never being called? - req.on('data', function (chunk) { ...
16:16 < owen1> http://pastebin.com/dNLM7juW
16:17 < neeky> owen1, doesnt end closes the connection?
16:18 < neeky> @ line 22
16:18 < sxpert2> neeky: IIRC, it half-closes
16:19 < owen1> neeky: surprisingly no. without the end() the http request is never being called
16:19 < owen1> (line 14)
16:28 < ivicv> hi
16:29 < fdc> hi
16:30 < ivicv> Any advice which book to start with javascript and nodejs? I'm a php programmer
16:30 < fdc> there's one exactly for your needs
16:30 < fdc> gimme a minute to find it
16:31 < fdc> http://shop.oreilly.com/product/0636920026013.do
16:31 < fdc> but i haven't read it
16:31 < ivicv> thanks a lot
16:31 < ivicv> do you develop apps for mobile devices?
16:31 < ivicv> with js
16:32 < fdc> not yet, no
16:32 < fu9ar> icicv: The mozilla developer network has tutorials
16:32 < fu9ar> https://developer.mozilla.org/en-US/
16:33 < ivicv> do you recommend start learning nodejs using express, or without it
16:33 < ivicv> ?
16:34 < fdc> i would use it. otherwise you need to develop your own web server from scratch
16:34 < fu9ar> I don't even know what that means. I'm new at nodejs, just learned about it last week.
16:34 < Jar9869458293812> ivicv: Is this really a question ?
16:35 < fdc> it's very popular also
16:35 < fdc> and there are books about it :>
16:35 < fu9ar> I'm spending my two javascript hours a week learning basic stuff right now, like how matrix addressing works, flow control nomenclature, etc.
16:36 < ivicv> thanks a lot
16:36 < Rolken> ivicv: I did; express is quite useful
16:37 < tasslehoff> When I use Archiver and specify level:0 to zlib, it still compresses my files.
16:49 < Almindor> hello
16:49 < Almindor> is there a way to call a mono/.NET dll from node? note: not edje.js (that's windblows only)
16:49 < Almindor> *edge
16:57 < EhevuTov> so, is Isaac going to get deported for that little naked stint he did in the BART? I notice that curly hair anywhere
17:01 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:11 < neeky> Wat
17:15 < neeky> Almindor, could you wrap the c# dll in a c# lib that exposes COM interface?
17:15 < neeky> if so, i think node-ffi would then work
17:16 < neeky> https://github.com/rbranson/node-ffi
17:16 < neeky> I played with it early on when i started with node to wrap PAM libs
17:17 < neeky> I wanted a pure PAM auth lib in node to let me interact with the OS
17:17 < neeky> safely
17:18 < kenperkins> anyone flying into nodeconf via SFO?
17:18 < kenperkins> http://www.sfexaminer.com/sanfrancisco/sfo-runway-closures-could-cause-delays-depending-on-the-weather/Content?oid=2474710
17:19 < tasslehoff> I have an embedded system with limited memory resources, and want to pack/zip entire directories and serve them from my webserver. What can I use for this?
17:20 < Jar9869458293812> "NetworkError: 404 Not Found - http://<ip>:8080/socket.io/socket.io.js"
17:23 < Xymon> hello
17:23 < EhevuTov> tasslehoff, use the 'zlib' and 'http' node modules?
17:24 < tasslehoff> EhevuTov: yeah, I can do that, can't I? been using node archiver until now, but I should be able to use zlib directly.
17:24 < tasslehoff> huh
17:25 < EhevuTov> yeah, I don't know your resource contraints, but you could stream the zlib into your http stream. Also Isaac has an example of something of your interest here: http://nodejs.org/api/zlib.html#zlib_examples
17:25 < EhevuTov> tasslehoff, ^
17:26 < EhevuTov> this would most likely be CPU-bound rather than having to constantly write/delete zip files
17:27 < EhevuTov> that's an awesome example, btw
17:28 < tasslehoff> EhevuTov: was just looking at that. thanks :)
17:29 < tasslehoff> the best thing to do would likely be to have the zip-files ready, instead of creating them on the fly...
17:29 < EhevuTov> tasslehoff, glad I could help. Well, if you notice, you can cache the zip "file"
17:30 < EhevuTov> dunno if cacheing would help in your case; might not be beneficial
17:30 < EhevuTov> in other words, gzip once, cache and reuse the cache instead of constantly gzipping on demand
17:30 < drano> hello. i've got a problem where my express.js middleware isn't being called. does anyone know what could cause that?
17:30 < itsnotlupus> would there be any benefit in spawn/piping a secondary process to zip/tar the folder into stdout vs zlibing from the node process?
17:32 < drano> figured it out. nevermind!
17:32 < tasslehoff> EhevuTov: I see. Will have to think about it. 
17:33 < werle> I'm writing a guide on writing c++ modules for node. does anyone have any good resources to share? I'd like to link back to the original author too
17:33 < EhevuTov> werle, have you already created a simple hello world module in C++? 
17:33 < RLa> werle, such guide is badly needed
17:34 < werle> EhevuTov: yeah I have
17:34 < werle> RLa: it really is
17:34 < werle> RLa: it will be published in a book, but I'd like to provide it as a blog post too
17:35 < werle> RLa: I'm more interested in showing the api defined by node.h 
17:35 < EhevuTov> ^
17:35 < RLa> there is http://nodejs.org/api/addons.html but it does not cover many things
17:35 < werle> RLa:  v8 documentation is great, but bringing the two together would be nice
17:35 < werle> RLa: I saw that. good, but basic
17:35 < EhevuTov> I learned a lot about Javascript and how V8 does closures by studying that stuff
17:36 < EhevuTov> one of my love/hate issues with high-level languages are things like that
17:36 < werle> RLa: I want to elaborate on how TooTallNate wrote this article as well http://n8.io/converting-a-c-library-to-gyp/
17:36 < werle> EhevuTov: I agree!
17:37 < EhevuTov> werle, I feel like I've talked with you about this before. I think I used some of your input to create my own simple c++ test: https://github.com/EhevuTov/nodeAddonTest
17:37 <@TooTallNate> werle: that'd be awesome :)
17:38 < werle> EhevuTov: I think we have, I'll check it out
17:38 < EhevuTov> yeah, TTN's comments and docs came in handy when I was using c++ and gyp. I also stalked his emails in the node email list
17:38 < werle> EhevuTov: I wrote https://github.com/jwerle/flogger as part of a simple example I want to show as well, it has a lot of do's and don'ts in it
17:38 < EhevuTov> awesome, I think I studied that
17:38 < werle> EhevuTov: sometimes email stalking is what you have to do
17:41 < Almindor> sorry got a sleep
17:41 < Almindor> is there a logger here?
17:41 < Almindor> I am thinking about using mono embedding c/c++ code and then making a nodejs addon using that
17:41 < Almindor> not sure how it's going to handle dll dependencies etc. tho
17:42 < Almindor> also I only need basic one-way function calls, no classes/objects or anything complicated
17:43 < SamOliver> hey, im trying to implement a readable Stream and it is complaining _read is not defined. is there something special which it is supposed to implement?
17:43 < EhevuTov> werle, I'd like to read an article on why it's hard to take Javascript datatypes and convert/mask them to C++/V8 datatypes. and maybe talk about performance issues there?
17:43 < Kakera_> isn't it possible to just add a custom build step that would just call "./configure && make" or whatever the library need to build?
17:47 < sdrulea> Hi Guys
17:47 < sdrulea> Does anyone use the node thrift client?
17:48 < sdrulea> I filed this bug yesterday: https://issues.apache.org/jira/browse/THRIFT-2064
17:48 < sdrulea> The error is "Object * has no method 'copy' "
17:48 < sdrulea> I see references to copy() all over the place in transport.js
17:49 < werle> EhevuTov: interesting.. what issues were you facing that made it hard?
17:50 < werle> EhevuTov: https://github.com/jwerle/node-addon-guide
17:50 < EhevuTov> no issues, but just a brief understanding of say, why you don't want to make a bunch of small calls to the V8 libs. Doesn't it have to do data type checking which is costly? Maybe some numbers why? I don't know, just an idea
17:50 < werle> EhevuTov: feel free to fork and add to the wishlist for topics
17:50 < EhevuTov> hehe awesome
17:50 < werle> EhevuTov: ah I see what you mean! yeah will have to do some experimentation 
17:51 < sdrulea> Is copy() a standard node or js function?
17:51 < Zogot> Ahoy all
17:51 < sdrulea> Ahoy hoy
17:52 < EhevuTov> like, I'd think it'd be better to pass a memory location and run a C++ lib on that memory struct, rather than actually passing the values which would have to be checked. I'm just assuming in ignorance, but that's the kind of things I'd like to know to be an issue or not
17:57 < shoky> sdrulea: http://nodejs.org/api/buffer.html#buffer_buf_copy_targetbuffer_targetstart_sourcestart_sourceend
17:59 < jaya> All of sudden i'm getting 404 as response for /socket.io/socket.io.js ???
18:10 < neeky> why does connect re-create my session on EVERY request?  Is it because the remote session cookie is wrong/missing?
18:10 < neeky> sessions arent working at ALL how they should in my app
18:10 < neeky> using mong as a session store, the session is saved fine, but the very next request I get a new session
18:11 < neeky> the only thing I can think of is the REST client I'm testing with is not storing cookies
18:11 < neeky> i guess i can step into the bowels of connect
18:12 < neeky> to see whats up
18:21 < RLa> anyone sending errors to their issue tracker?
18:23 < bnoordhuis> RLa: come again?
18:23 < neeky> one day maybe
18:23 < neeky> but today that would collapse my issue tracker on itself :)
18:24 < RLa> i see many loggers send to mail
18:24 < RLa> looking at bitbucket api and thinking how to do it
18:25 < RLa> there has to be some sort of cooldown period to avoid creating too many issues
18:29 < jesusabdullah> RLa: bitbucket?
18:29 < jesusabdullah> ಠ_ಠ
18:30 < jesusabdullah> RLa: i haven't done that, but generating github issues and the like is kind of a cool idea
18:30 < jesusabdullah> RLa: Presumably BB's api would also let you POST a new issue?
18:30 < RLa> i also thought about sending user feedback there
18:30 < RLa> yes, it does
18:43 < Sirisian|Work> Any developers here? https://github.com/joyent/node/issues/5557 <-- what version was this fixed in?
18:43 < Sirisian|Work> oh 0.10.10 I guess. what was I asking...
18:44 < Sirisian|Work> oh that's why! the ubuntu desktop was running 0.6.12 but my server is on 0.10.12
18:45 < merpnderp1> How do I use a lib like three.js with browserify? I've tried creating the same type of shim as I did for jquery and I just get an empty object.
18:45 < alessioalex> hello there
18:46 < alessioalex> anybody knows why read streams area leaking?: https://groups.google.com/forum/?fromgroups=#!topic/nodejs/uETidz1BUHk
18:48 -!- mode/#Node.js [+o MI6] by ChanServ
18:49 < bnoordhuis> alessioalex: rss is a pretty poor indicator of memory leaks
18:49 < alessioalex> bnoordhuis: so how should I detect them?
18:49 < bnoordhuis> alessioalex: try running your app for a while with --max_old_space_size=32
18:49 < alessioalex> ok
18:50 < bnoordhuis> alessioalex: the default is something like 1400, meaning v8 will keep growing the heap whenever it feels like it
18:51 < alessioalex> bnoordhuis: the behaviour is still similar :(
18:51 < alessioalex> 105~109 Mb 
18:51 < alessioalex> after everything is finished (readstreams are done)
18:51 < alessioalex> I'm testing on both Node 0.8.x and 0.10.x
18:52 < neeky> aha! connect is not setting session cookies, that's why cookies arent working - :(
18:52 < neeky> verified with curl
18:54 < chiel> is there any template engine that supports partials well in node?
18:57 < neeky> hbs(handlebars) does 
18:58 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:58 < neeky> but you need express in there too
18:59 < alessioalex> so is there any way I can make Node to release that unused memory? thanks https://groups.google.com/forum/?fromgroups=#!topic/nodejs/uETidz1BUHk
18:59 < Tobsn> hey there! anyone here working with neo4j? I want to create nodes for "likes" as in X likes Comment or X likes Y, different types of properties. I wonder how i can query by X likes type Y to get all likes of a type and how to query for X likes Y with ID Z
18:59 < jaya> bnoordhuis I'm getting 404 for Socket connection
18:59 < pinvok3> Evening guys. I'm switching from PHP and Apache to node.js with express and mongoose. All I can say is, I think I'll never regret that. But I have a question related to the require function. Can I construct a class which returns just an array, so I could use var Foo = require('bar') and directly get an array? 
19:00 < chiel> neeky: hmm yea, i am using director/union atm
19:00 < tellnes> pinvok3: module.exports = []
19:01 < nathan7> pinvok3: That's a module, dear. Not a class.
19:01 < pinvok3> tellnes: Ah I see, Ive thought module.exports and exports are the same. Learned new stuff again. Thanks :)
19:02 < neeky> chiel, I dont see why you couldn't make it work directly with node
19:02 < tellnes> pinvok3: yes, but overrideing `exports` will just change your local reference to it
19:03 < chiel> neeky: i was using mustache, but partials were being kinda annoying cause you have to pass them as a third argument to the render call, which is a pain
19:03 < jaya> Help!!!!
19:04 < pinvok3> tellnes: That would explain why I always got an empty array.. :P
19:04 < nathan7> pinvok3: var exports = module.exports = {}
19:04 < nathan7> pinvok3: if you change exports, nothing happens because you just gave a new value to a local var
19:04 < neeky> chiel, with Handlebars.js you use .registerPartial(name, code)
19:04 < neeky> the just use {{> name}}
19:04 < neeky> in your template
19:05 < jaya> isaacbw: HELP
19:05 < neeky> chiel, https://github.com/wycats/handlebars.js/ <- 2/3 down the Readme
19:05 < pinvok3> nathan7: Yeah, I know about local vars, that's why I wondered why this "could" work in the first place. Ive thought node has some kind of hook which checks for this variable even if its local .. Thanks for clearing that up (:
19:06 < neeky> jaya, ?
19:06 < nathan7> pinvok3: [=
19:06 < jaya> neeky Hey ...I'm getting 404 Exception on Connecting Socket.IO
19:07 < neeky> sorry, I know nothing about Socket.IO
19:07 < jaya> neeky: It shouts "NetworkError: 404 Not Found - http://192.168.1.2:1337/socket.io/socket.io.js"
19:07 < neeky> i was just asking you to ask your question instead of yelling fire in a crowded theater
19:07 < merpnderp> This is my common-shim.js file which I browserify into a common.js file. The jquery shim works, but the three.js returns an empty object. Anyone know why? http://pastebin.com/vqeZ9T1s
19:07 < _6a68> neeky +1
19:08 < jaya> i mentioned some Ip :P
19:09 < jaya> I'm testing i locally :'(
19:10 < _6a68> jaya: there's a pretty straightforward list of things to investigate.
19:10 < _6a68> jaya: is your local web server actually running?
19:10 < _6a68> jaya: if you list processes, do you see it?
19:10 < jaya> _6a68: Yes
19:10 < _6a68> jaya: is your network setup properly?
19:10 < jaya> _6a68: Yes
19:10 < _6a68> jaya: a 404 is a pretty straightforward thing to debug
19:10 < _6a68> I don't understand why "Help!!!!" etc
19:10 <@xyxne> are you sure the issue is just that you haven't yelled at enough people in IRC yet?
19:10 < _6a68> lol
19:11 < merpnderp> Speaking of yelling, no one here is a browserify buff?
19:11 < neeky> are you serving socket.io.js from a static path in node?
19:11 < jaya> _6a68: Only my socket.io is not connecting other pages are working fine (aka post request)
19:12 <@xyxne> jaya, did you gist your code?
19:12 < Seb-> jaya: if you have a 404 on the socket.io client, your socket.io server either isn't running or you've set it to not serve that file.
19:12 < eddiemonge> what exactly is getting the 404, the client connection or the socket.io.js file?
19:12 < jaya> Seb- You might be correct
19:12 < Seb-> eddiemonge: the file
19:12 < Seb-> [21:06:33] <jaya> neeky: It shouts "NetworkError: 404 Not Found - http://192.168.1.2:1337/socket.io/socket.io.js"
19:13 < Seb-> jaya: 404 means missing resource. it even gave you the link to the missing resource. it's not extremely hard to figure out.
19:13 < eddiemonge> jaya: how are you serving the site? is it from a socket.io server or some other server?
19:14 < jaya> 404 is missing resource but i could n't understand in this context
19:14 < eddiemonge> its always the same context. the server can't find that file to serve
19:26 < merpnderp> is there a difference between module.exports and just exports?
19:29 < niggler> merpnderp you can assign to module.exports
19:30 < niggler> for example merpnderp "exports = function(x) { … }" won't do what you think, but "module.exports = function(x) { … }" does what you expect
19:31 < nathan7> merpnderp: one of them is a local variable, the other is a property on an object
19:32 < nathan7> merpnderp: they happen to have the same initial value
19:32 < nathan7> merpnderp: changes to a local variable aren't externally visible
19:32 < nathan7> merpnderp: var exports = module.exports = {} // imagine this being at the top of your file, pretty much
19:34 < werle> EhevuTov: thanks for topics
19:35 < EhevuTov> you're welcome; I'm not the best .md formatter. I'm interested in seeing your final project
19:36 < merpnderp> nathan7: thank you that just cleared up a lot.
19:42 < merpnderp> Okay, I see my problem. browserify wraps files in a closure and passes in the require, module, and exports objects/functions. So I'll need to edit libraries that don't use module.exports to use them.
19:46 < werle> EhevuTov: I'll keep you posted
19:48 < neeky> please tell if im just an idiot - a session in connect that uses a session store STILL sets a client side cookie, correct?
19:49 < paulkon> yes
19:49 < neeky> and that cookie sets a path of "/" - is that path significant to me?
19:50 < neeky> because im getting terrible results from sessions and am pretty lost
19:50 < paulkon> pastebin your code
19:50 < niggler> !pastebin
19:50 < neeky> when I turn on my session store, connect stops setting clinet cookies
19:50 < niggler> use hastebin
19:50 < neeky> gist ok?
19:51 < paulkon> there needs to be a !code command
19:51 < paulkon> or something
19:51 < paulkon> basic stuff
19:51 < niggler> hastebin > gist > pastebin
19:51 < niggler> paste bin shows ads
19:51 < neeky> ok hang on a sec
19:51 < niggler> gist has too many other things on the page
19:52 < paulkon> why github isn't responsive yet is beyond me
19:52 < niggler> death by a thousand VCs
19:52 < paulkon> it should have been made responsive a while back
19:52 < niggler> or just one, in this case
19:52 < paulkon> it's so damn inconvenient
19:52 < paulkon> to view other devices
19:52 < eddiemonge> why? do you normally browse code and do other things on your phone? i find i rarely do
19:53 < paulkon> well, it would be nice to
19:53 < niggler> issues
19:53 < niggler> are a pain in the arse to deal with
19:53 < paulkon> at least remove all the other stuff on the page and make it single column
19:53 < eddiemonge> they have apps for issues
19:53 < paulkon> for the code
19:53 < niggler> really?
19:53 < eddiemonge> android at least. not sure about ios since i dont use that
19:53 < paulkon> there needs to be a github viewer app
19:53 < niggler> a proper github iPad app would be killer
19:54 < paulkon> I'm sure a chunk of people wouldn't mind looking at some small code on there ipads or mobile devices
19:54 < eddiemonge> https://play.google.com/store/apps/details?id=com.github.mobile&feature=search_result
19:54 < EhevuTov> I'd like to be able to browse patches/diffs on my phone
19:54 < neeky> paulkon, https://gist.github.com/nikmartin/08e81a1e952e2b23608f
19:54 < paulkon> why isn't this out for iphone
19:54 < eddiemonge> because real developers use android?
19:54 < paulkon> agh.... maybe I need to just buy a galaxy
19:54 < paulkon> yeah
19:55 < neeky> the first file is my mongo based session store, the second is my actual app
19:55 < neeky> when I do things like POST, cookies are neither read nore created, and every GET request creates a new session in my DB, but sets no cookie
19:55 < eddiemonge> paulkon: get a nexus 7
19:56 < neeky> so i get a db full of sessions from the same client, and 0 cookies on client
19:56 < context> im considering getting a transformer
19:56 < neeky> at line 22, I actually pass in my express object, not connect
19:56 < paulkon> eddiemonge: what about for mobile?
19:57 < paulkon> i already have an ipad 3...
19:57 < paulkon> unfortunately I guess
19:57 < eddiemonge> ill trade you my touchpad running android for your ipad. even comes with a keyboard and dock
19:58 < paulkon> does it suck?
19:59 < pinvok3> Can someone tell me what is a better way: Just doing a REST Api with express and create the views externally, or implementing the views directly into express. Are there big differences?
20:00 < neeky> and express.session.Store *should* be connect.session.Store
20:00 < paulkon> pinvok3: option 1. unless you're running a static site.
20:00 < neeky> pinvok3 it just depnds on how your app will be used now and in the fufture
20:01 < eddiemonge> paulkon: no, i jsut dont use it because i have a billion tablets and computers
20:01 < polyrhythm> pinvok3: i prefer using a front-end library like backbone and using express as an API, it's an approach that works well if your app is heavy on UI stuff
20:01 < eddiemonge> paulkon: ok maybe just a touchpad, 2 chromebooks, nexus 7, a few ipods and some macbook airs
20:02 < paulkon> eddiemonge: wow
20:02 < paulkon> lots of productivity huh
20:02 < paulkon> think of the # of code windows you could have open
20:03 < pinvok3> Well I wanted to write a tiny social network for learning purposes. My intention was to use PHP with laravel, but a friend told me to fuck off and said I should use node instead which is a good idea in my opinion.. But now I'm totally at 0 again and learn by doing it. I don't think this "network" will ever have much functionality. You can post stuff, people can be your friend, like your stuff. 
20:03 < pinvok3> "Simple" Social Network stuff
20:03 < paulkon> pinvok3: definitely option 1 for dynamic stuff.
20:04 < polyrhythm> yeah do a single-page application with a js framework and node as a backend
20:05 < neeky> paulkon, did you check the gist I posted?
20:05 < paulkon> where is it?
20:05 < neeky> https://gist.github.com/nikmartin/08e81a1e952e2b23608f
20:05 < neeky> the first file is my mogoose backed store, the second part is my app
20:06 < pinvok3> Thanks guys. I already like this channel here :)
20:06 < paulkon> pinvok3: welcome to #node.js
20:06 < neeky> and the problem is sessions are created ok, but it never sets a cookie
20:06 < paulkon> :)
20:06 < neeky> so the session gets recreated every call
20:07 < neeky> but I get veery sproradic client session cookies
20:08 < neeky> the session is in the session db table, but the sid never gets set as a cookie
20:08 < paulkon> neeky: there is no cookie.secure prop
20:08 < pinvok3> paulkon: Thanks :)
20:09 < neeky> paulkon, are you referring to line 22 in gistfile1?
20:09 < paulkon> yeah
20:09 < neeky> paulkon, according to: http://www.senchalabs.org/connect/session.html there is
20:11 < neeky> and: http://en.wikipedia.org/wiki/HTTP_cookie#Secure_cookie
20:11 < neeky> now I'm NOT using https during testing, coud that be the issue?
20:11 < paulkon> yeah, I see it. if you;re not using https that would be an issue
20:11 < neeky> it only gets set if the connection is encrypted
20:11 < neeky> let me unset that
20:11 < neeky> and see what changes
20:12 < Trudko> Guys i made simple authetication using passport js and mongo db , how should access it in my app should I make nodejs module out of it?
20:12 < neeky> that fixed that :)
20:13 < neeky> butthe second issue is my session is being recreated EVERY post or get
20:13 < neeky> which makes the cookie useless as tits on a boar
20:15 < neeky> the server never seems to request the cookie
20:17 < neeky> let me look at the request object in one of my routes in a breakpoint to see if req.cookie has pcrserver.sid as a cookie
20:18 < neeky> paulkon, i think I have it working - 
20:18 < neeky> looks like is was the secure:true after all - 
20:19 < neeky> i restarted node and it now checks for the cookie with pcrserver.sid:...
20:19 < neeky> on every request
20:25 < neeky> This bring up a 3rd issue - i use nginx as a proxy for ssl, so I think I have to set some x-forwarded header
20:25 < neeky> to be able to set secure cookies from http
20:26 < neeky> since my app is just http between it and nginx
20:33 < aandy> you can set headers to tell what the "real" ip is, if that's what you mean, yes. it's actually built into some node frameworks like connect/express, where it's just a boolean to trust those headers (set by proxies, e.g. nginx, haproxy)
20:34 < aandy> not sure you need it for secure cookies though. cookies have been working fine for me in haproxy with frontend https, backend http
20:34 < aandy> the browsers cookies are not set for the non-ssl (your app instances) version, so i'd figure they'd work in nginx aswel
20:41 < neeky> paulkon, thanks for the help. or at least making me think - thats what i need sometimes
20:41 < aandy> okay then
20:41 < neeky> ok off to swim meet
20:42 < neeky> aandy, i think the issue is im trying to set a secure cookies on a server object that's not secure, so I thing the server silently ignores
20:42 < aandy> Trudko: part of it would be a good idea, to make it more manageble. personally i have an init function exported, which sets up the strategy
20:42 < neeky> it  - i thinkt theres a x-forwarded-proto header or something 
20:43 < neeky> i'll look at it later - working for now at least
20:43 < aandy> what the ip is shouldn't affect the Cookie header (unless you explicitly remove/modify it)
20:49 < hidden> hello
20:57 < kenperkins> anyone implementing custom inspect functions on objects?
21:06 < serapath> hi, could someone give me a hint why mongoose possibly wont save my entries?
21:07 < Draggor> Anyone here ever use nexe?  When I run it, it just seems to hang on building node.
21:07 < serapath> after trying many things on my current project, i found a simple example https://github.com/mmukhin/psitsmike_mongodb_tutorial and added mongoose.set('debug', true);
21:08 < serapath> it executes save, but nothing is added to my collection and i dont understand the reason for it
21:08 < serapath> it just logs "Mongoose: people.find({}) { fields: undefined, safe: undefined }" to the console
21:11 < chadams42> serapath: are you using the save callback
21:11 < chadams42> if you just call model.save() and exit, nothing will be recorded in the database
21:11 < serapath> yes
21:12 < serapath> i use the save callback
21:12 < chadams42> model.save(function(err){// exit here})
21:12 < serapath> the example uses it
21:12 < chadams42> was there an error? are you inspecting the error
21:13 < jaCen915> serapath: and your schema is set up?
21:13 < jaCen915> serapath: with correct types? like string, number, boolean?
21:14 < chadams42> serapath: can you send your code?
21:16 < jaCen915> chadams42: I did have a save issue with a date object once using set(), had to adjust it to model.someProp = date, not sure if you've ever seen that
21:17 < chadams42> jaCen915: nope
21:21 < serapath> chadams42: https://github.com/mmukhin/psitsmike_mongodb_tutorial
21:22 < serapath> with 2 changes: added: "mongoose.set('debug', true);" and "console.log("listening on port %d", '3001');"
21:23 < chadams42> how are you checking to see if the data is in the DB?
21:24 < jaCen915> serapath: did you log out the params before you saved them? I saw your error message above where the info you inserted was coming up undefined
21:24 < jaCen915> to check if they really are undefined…or if the req.params object is undefined
21:25 < serapath> aaahh, have restarted the whole thing and now works.
21:25 < serapath> hah :-) yay
21:25 < jaCen915> serapath: i will gladly take full credit
21:25 < jaCen915> jk
21:25 < serapath> yes
21:25 < serapath> thx
21:25 < serapath> :-)
21:26 < jaCen915> chadams42: stop coding :P
21:30 < serapath> jaCen915: is there an easy way with mongoose to drop the whole collection?
21:30 < chadams42> db.collection.remove()
21:30 < serapath> oh, sounds good
21:30 < serapath> :-)
21:30 < jaCen915> hmmm
21:30 < jaCen915> i use drop
21:30 < jaCen915> but that may be mongo
21:31 < chadams42> jaCen915: .remove() is for mongo shell
21:32 < jaCen915> chadams42: i think we are both right…what sera is asking is dropping an entire collection
21:32 < chadams42> ah
21:32 < jaCen915> the whole collection is drop
21:32 < jaCen915> the items in the collection is remove
21:33 < chadams42> I bet drop is more efficient
21:33 < jaCen915> I never use them though, i keep all my info, i want to work at the NSA some day :P
21:33 < serapath> chadams42: mongoose.collection.remove() says "TypeError: Cannot call method 'remove' of undefined"
21:33 < chadams42> serapath: .remove is for shell
21:33 < chadams42> serapath: listen to jaCen915, not me ;)
21:33 < AviMarcus> jaCen915, they just added you to their job application list, automatically.
21:34 < jaCen915> AviMarcus: as long as they have a free candy room I will accept
21:35 < jaCen915> serapath: try drop instead
21:36 < chadams42> mongoose.db['collectionName'].drop(...)
21:37 < serapath> jaCen915: cannot call drop/remove of undefined
21:37 < serapath> there is no db.collection
21:39 < chadams42> mongoose.connection.collections['collectionName'].drop(…) might work too, but is easier to use remove
21:39 < chadams42> Model.remove({}, fun)
21:41 < s5fs> I'm having trouble creating a private npm repo, I keep running into couchdb errors. Does anyone have experience creating a private repo, kind words would be welcomed :)
21:43 < chadams42> s5fs: why would a private repo give couched errors?
21:43 < s5fs> chadams42: I'm trying to clone the entire npm repo, the documentation states that I should kick off a couchdb replication job.
21:44 < s5fs> I'm not very familiar with couch so I could be borking something simple :/
21:44 < s5fs> chadams42: I'm working from this doc:  https://github.com/isaacs/npmjs.org
21:45 < s5fs> Under the "Installing" header, I'm failing on the 4th step
21:46 < chadams42> do you have couch app installed?
21:46 < kenperkins> so is nodeconf mostly inside? mostly outside? flip flops and shorts for the pool/lake/river/etc?
21:46 < s5fs> chadams42: yes
21:47 < s5fs> kenperkins: I'm not sure, I'm bringing a sun hat, shorts and sunscreen. i am also bringing swim trunks just in case :D
21:47 < chadams42> s5fs: have you verified that the couch app is in your local couchDB ?
21:47 < kenperkins> s5fs: that's what I was thinking :D
21:47 < kenperkins> s5fs where you coming from 
21:48 < s5fs> kenperkins: portland oregon, yourself?
21:48 < kenperkins> up the road in seattle
21:48 < kenperkins> go sounders
21:48 < s5fs> yay pnw!
21:48 < s5fs> chadams42: no, I think that's the step that is failing
21:48 < kenperkins> you flying on a jet or turboprop?
21:49 < chadams42> ah, go to the couch app website, it will help you walk through setting that up
21:49 < s5fs> kenperkins: heading down, by jet. coming back up, either by jet or private plane (not sure yet)
21:49 < chadams42> I think it's couchapp init
21:49 < kenperkins> oO
21:50 < chadams42> then throw your files in it and edit the config to point to your local db
21:50 < chadams42> then couchapp push
21:50 < s5fs> kenperkins: my boss has a single prop plane, he's always looking for reasons to fly distances
21:50 < chadams42> it's not too hard, I use it to store my map/reduce views in my repo
21:50 < kenperkins> heh
21:50 < s5fs> chadams42: do I need to run as root for this?
21:51 < chadams42> no
21:54 < s5fs> chadams42: okay so what's couchdb init supposed to do?
21:55 < s5fs> chadams42: I could use a high-level overview of what these steps are supposed to accomplish :) couchdb is installed and I believe I've created the db with a curl request, so now I think I just need to shove the apps into the db, correct?
21:55 < tlrobinson> anyone familiar with Mongoose and Promises? Model.find(…).exec() returns a promise, but new Model(…).save doesn't seem to, right?
21:55 < chadams42> s5fs: it's couchapp init
21:56 < chadams42> this creates a local dir with a couch app
21:56 < chadams42> it's kind of like a git repo
21:56 < s5fs> chadams42: ah okay, gotcha
21:56 < chadams42> inside is a config, you can read about it here http://couchapp.org/page/couchapp-config
21:59 < s5fs> chadams42: i can't seem to run 'couchapp init' bare, it seems to want an arg. suggestions?
22:00 < chadams42> s5fs: pass it a directory
22:00 < chadams42> couchapp init myApp
22:01 < s5fs> chadams42: fails
22:01 < s5fs> 'cannot find module'
22:01 < chadams42> http://couchapp.org/page/couchapp-usage
22:01 < s5fs> chadams42: i'm following the docs but the outcome isn't what i expect, haha
22:01 < chadams42> tlrobinson: no it doesn;t
22:02 < tlrobinson> chadams42: is there any reason it couldn't be changed to return a promimse?
22:02 < s5fs> chadams42: crap, i think my couchdb version is too old. i'll upgrade and try again.
22:03 < chadams42> s5fs: just use an online couch
22:04 < s5fs> chadams42: I'm sorry, I don't know what that means.
22:04 < s5fs> chadams42: I'm trying to clone npm so I can carry it with me
22:04 < s5fs> i want all the modules
22:04 < chadams42> ah
22:05 < chadams42> try updating
22:17 < Industrial> I wonder if it's possible to automatically create a REST interface for a Dnode RPC interface
22:17 < Industrial> I guess you need more infor and the dnode interface needs to be rest complete (get, post, put, head, delete, etc)
22:18 < Industrial> prolly DRY it out amirite?
22:18 < Industrial> (just rely on the interface function name structure)
22:20 < Industrial> OR make a dnode-restifier server
22:20 < Industrial> It's like lego man!
22:21 < Industrial> i guess why because websockets
22:26 < s5fs> crap, it was totally my couchdb version, these docs lie: http://wiki.apache.org/couchdb/Installing_on_Ubuntu
22:27 < Zaxnyd> $.cookie('foo', "bar", {domain: 'localhost:3000'}) can't be read by my service running on :3000.  any idea why?
22:28 < Zaxnyd> it can be read by the service setting the cookie on :80
22:28 < Zaxnyd> I've got app.use(express.cookieParser());
22:31 < Zaxnyd> this answers why it doesn't work: http://stackoverflow.com/questions/6761415/how-to-set-a-cookie-for-another-domain
22:31 < s5fs> Okay still getting errors creating a private npm repo. When I try to replicate the db, it gives this error: vagrant@precise64:~/npmjs.org$ curl -X POST -H "Content-Type:application/json" \
22:31 < s5fs> crap, sorry gang
22:31 < s5fs> >     http://localhost:5984/_replicate -d \
22:31 < s5fs> >     '{"source":"http://isaacs.iriscouch.com/registry/", "target":"registry"}'
22:31 < s5fs> {"error":"case_clause","reason":"{error,\n    {{badarg,\n         [{erlang,list_to_existing_atom,[\"data_size\"]},\n          {couch_rep,'-dbinfo/1-lc$^0/1-0-',1},\n          {couch_rep,'-dbinfo/1-lc$^0/1-0-',1},\n          {couch_rep,do_init,1},\n          {couch_rep,init,1},\n          {gen_server,init_it,6},\n          {proc_lib,init_p_do_apply,3}]},\n     {child,undefined,\"f05e576b6f7858f6dc4b8b81bb65dbea\",\n         {gen_serve
22:32 < s5fs> here's the gist:  https://gist.github.com/aulvi/5863044
22:33 < Zaxnyd> is there a way to save something in a cookie such that ajax requests to another domain will include it?
22:45 < gabrielstuff> you are looking for CORS, are you Zaxnyd ?
22:45 < Zaxnyd> I have it, but it doesn't seem to work for the cookies
22:45 < Zaxnyd> but looking at the requests, it's not actually even sending the cookie data
22:45 < Zaxnyd> so it seems to be in the way I'm setting the cookie
22:46 < Zaxnyd> gabrielstuff
22:46 < Zaxnyd> I'm using the jquery cookie plugin
22:47 < Zaxnyd> I tried using this, to no avail: https://github.com/carhartl/jquery-cookie#domain
22:47 < gabrielstuff> http://quickleft.com/blog/cookies-with-my-cors
22:48 < Zaxnyd> $.support.cors = true
22:49 < Zaxnyd> what is this voodoo?
22:50 < gabrielstuff> no
22:50 < gabrielstuff> use
22:50 < gabrielstuff> withCredentials
22:51 < gabrielstuff> http://stackoverflow.com/questions/2054316/jquery-sending-credentials-with-cross-domain-posts and http://api.jquery.com/jQuery.ajax/ --> xhrFields
22:52 < gabrielstuff> and do not forget to add this on server side : https://gist.github.com/gabrielstuff/5863179
22:54 < Zaxnyd> awesome
22:54 < Zaxnyd> that seems to do it
22:54 < Zaxnyd> very good sir!
23:05 <@MI6> joyent/libuv: Ben Noordhuis master * 30a8b44 : windows: use WSAGetLastError(), not errno - http://git.io/FkpWwg
23:10 <@MI6> joyent/libuv: Ben Noordhuis v0.10 * c8c775b : windows: use WSAGetLastError(), not errno - http://git.io/GJqZbg
23:10 <@MI6> joyent/libuv: Ben Noordhuis v0.8 * 0865a6f : windows: use WSAGetLastError(), not errno - http://git.io/jKmFHA
23:16 < quuxman> Hey all, I'm trying to install node and npm on Ubuntu 12.04. Apparently the one in the standard package lists is terribly out of date, and it completely fails to install the package I want. I downloaded and compiled the current node, now how do I get npm?
23:17 < quuxman> is there simply a more up-to-date ppa I can use?
23:22 < s5fs> quuxman: I recommend installing from source, or using something like nave to manage versions for you.
23:22 < s5fs> quuxman: I'm also on ubuntu 12.04 and compiling is super easy.
23:22 < addisonj> quuxman: https://launchpad.net/~chris-lea/+archive/node.js/
23:22 < addisonj> has both 0.8 and 0.10 packages
23:23 < addisonj> and is good about maintaining em, I use em in production
23:23 < quuxman> s5fs: I can't even use nave because my version of node is so old
23:23 < quuxman> s5fs: I already compiled and installed it, I just can run it because permissions got F*ed due to my umask
23:23 < quuxman> *can't
23:24 < s5fs> quuxman: well, addisonj identified a ppa up above, could be worth a try.
23:27 < quuxman> s5fs, addisonj: that ppa fails
23:27 < quuxman> with 404s when I try to run apt-get update
23:27 < addisonj> what does it fail with?
23:28 < addisonj> how did you add it?
23:28 < addisonj> apt-add-repository is the tool to use
23:28 < addisonj> then sudo apt-get update && sudo apt-get install nodejs
23:28 < quuxman> addisonj: I did that of course
23:29 < addisonj> hrm, no idea, working for me
23:29 < quuxman> W: Failed to fetch https://launchpad.net/~chris-lea/+archive/node.js/dists/precise/main/source/Sources  The requested URL returned error: 404 ... etc
23:30 < gaf> i use chris lea ppa also
23:31 < quuxman> blaaaaaaaaaaaaarg :-P
23:31 < quuxman> things always break for me
23:31 < s5fs> quuxman: haha! personally, I'd figure out how to build node, not being able to compile software sucks
23:31 < quuxman> s5fs: I already built and installed it, but the permissions of all the installed files aren't right
23:33 < s5fs> quuxman: fix the permissions?
23:33 < quuxman> How can I easily get a list of every file it installed?
23:33 < quuxman> there are a lot, spread over several dirs
23:33 < s5fs> '
23:33 < quuxman> I already fixed the node binary, but even print() doesn't work
23:33 < owen1> is it still the case that npm shrinkwrap only lock the top level dependency?
23:34 < s5fs> quuxman: 'make install' should've been run with sudo, was that not the case?
23:34 < quuxman> I ran it as sudo
23:34 < quuxman> I even unistalled it, fixed my umask, and reinstalled it
23:34 < quuxman> all the files are root:root
23:35 < quuxman> -rw-r-----
23:35 < quuxman> pretty useless
23:35 < s5fs> haha that stinks
23:35 < s5fs> "and thats how i learned you should always be root"
23:36 < Zaxnyd> lol
23:37 < bnoordhuis> quuxman: fix your umask and run `make install` again
23:38 < bnoordhuis> it'll install over the old files
23:38 < quuxman> bnoordhuis: already did so
23:38 < quuxman> bnoordhuis: umask isn't the problem apparently. It's a standard 0002
23:38 < s5fs> quuxman: check umask on root as well, should be 0022 iirc
23:39 < quuxman> oh
23:39 < quuxman> shouldn't print be defined?
23:40 < quuxman> yeah, permissions are still "-rwxr-x--- 1 root root"
23:40 < bnoordhuis> quuxman: you're probably thinking of console.log
23:40 < bnoordhuis> btw, try uninstall, then install again
23:41 < quuxman> bnoordhuis: did that of course
23:44 < bnoordhuis> quuxman: then either your umask is still wrong or the file permissions in the source dir are wrong
23:45 < quuxman> I'm guessing the latter
23:45 < quuxman> they're 640 me:me
23:45 < bnoordhuis> right
23:46 < bnoordhuis> just chmod -R g+rw o+r everything
23:46 < bnoordhuis> or whatever perms you want
23:47 < quuxman> chmod -R o+rX .
--- Log closed Wed Jun 26 00:00:31 2013
