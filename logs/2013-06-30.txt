--- Log opened Sun Jun 30 00:00:08 2013
--- Day changed Sun Jun 30 2013
00:00 < Beg> isaacbw-> why crazy?
00:00 < Kessler> jdelgado: you can go have a look at the code of forever / daemonize2 if you want to satisfy your curiousity, I'm just gonna go hunt the web for some useful example :) another time I would love to chat about this more
00:00 <@isaacbw> Beg: why not
00:01 < jdelgado> Kessler: lol I just wanted one example, I know both well, and I have no idea what "issues" you are speaking of
00:01 < jdelgado> but no worries
00:01 < Kessler> jdelgado: saving pid files, handling stdio, respawning dead process etc etc, dont want to code all that from scratch
00:01 <@isaacbw> damn I want some pickles
00:02 -!- mode/#Node.js [+o MI6] by ChanServ
00:02 < jdelgado> Kessler: Heh, alright, forget I asked.
00:02 < Beg> isaacbw-> yeah it is crazy 
00:03 <@MI6> joyent/libuv: Navaneeth Kedaram Nambiathan master * 624be53 : build: add install target to the makefile - http://git.io/FCMPQw
00:06 <@isaacbw> the idea of defining your data once and having models generated on client and server side though is a good idea
00:06 <@isaacbw> and an old idea
00:06 <@isaacbw> that everyone forgot about
00:06 <@isaacbw> with all the single-page app stuff
00:07 <@isaacbw> but I personally think that meteor is the wrong way to do it
00:07 <@isaacbw> meteor is a "do everything" framework
00:09 < adpreese> It's pretty bold to say everyone forgot
00:09 < adpreese> There's literally like 100 different js frameworks
00:10 < adpreese> That said, I like organizing things into services on the server side and then putting angular or some other framework on top in the client
00:38 <@isaacbw> fdsfdsa
00:38 < Beg> flsfsld
00:39 < noocx> hgjhggz
00:40 < adpreese> wargle bargle?
00:57 < Skullclown> socket.io; debug - websocket received data packet 3:::dashboardChanged
00:57 < Skullclown> but the event never triggers?
00:59 <@isaacbw> did you ask it nicely?
00:59 < Skullclown> isaacbw: I tried. ):
00:59 <@isaacbw> offer it candy
00:59 < Skullclown> isaacbw: what port?
01:00 <@isaacbw> usually 80
01:00 <@isaacbw> if it isn't being a stupid brat
01:00 < Skullclown> 80 is taken by someone else :/
01:00 <@isaacbw> bastards
01:00 < jpeas> i'm having an odd issue with a client JS app not being able to resolve the socketio.js served out by my Node app… anyone run into this before? dev tools tells me the GET fails… but I can navigate to the js file just fine.
01:00 <@isaacbw> let's start a petition
01:01 <@isaacbw> jpeas: are you pulling it in dynamically? That's weird
01:01 <@isaacbw> but it might be a cors issue
01:02 < jpeas> i'm attempting to load via dojo's amd loader
01:02 <@isaacbw> why not just have it statically in the html?
01:03 < jpeas> @isaacbw: -_-
01:03 < jpeas> that works of course
01:03 < jpeas> still curious why
01:04 < Skullclown> isaacbw: http://pastebin.com/qSV8Pbne
01:04 < Skullclown> maybe you can ask it nicely? ):
01:04 <@isaacbw> maybe because dojo is for turds
01:04 < jpeas> thanks for at least rattling my head :)
01:04 < jpeas> haha agreed… im sort of forced into it
01:05 <@isaacbw> Skullclown: I thinks send() does something different. Try it with emit
01:05 <@isaacbw> jpeas: is everything on the same domain?
01:05 < jpeas> nope
01:05 < Skullclown> isaacbw: right. crap. 
01:05 < jpeas> client app is separate from node
01:05 <@isaacbw> jpeas: could be a cors issue
01:06 <@isaacbw> did you look in the chrome console? it shows cors error shit
01:06 < jpeas> yeah i looked… no cors specific errors
01:06 < Skullclown> isaacbw: of course it works now ): jebus.. I should go to bed.
01:06 <@isaacbw> woo boy
01:06 < jpeas> just a regular ole 404
01:06 <@isaacbw> jpeas: I dunno that sounds strange
01:06 < Skullclown> 404 = server response
01:06 <@isaacbw> maybe dojo does something stupid to the url
01:08 <@isaacbw> or maybe socket.io does its own cors protection and spits out a 404
01:09 < jpeas> also may be a limitation of localtunnel
01:09 < jpeas> which i'm using at the moment
01:09 <@isaacbw> oh maybe
01:10 < jpeas> i need to just man up and figure out heroku
01:23 < Skullclown> isaacbw: thanks for the last-second candy saving my app. +D cu, g'night
01:43 < jdelgado> If anyone wants a good laugh: http://www.youtube.com/watch?v=1e1zzna-dNw
01:44 < adpreese> jdelgado: I actually saw this before
01:44 < jdelgado> adpreese: I always watch it when I need a good laugh
01:44 < jdelgado> The best part is the guy is still defending himself in the comments
01:44 < adpreese> Really?
01:45 < jdelgado> Yeah, last one was 19 hours ago
01:45 < adpreese> Weird
01:45 < adpreese> I have comments turned off
01:45 < adpreese> And well everything actually
01:45 < adpreese> Lightweight youtube is pretty awesome
01:45 < adpreese> "You will know that I am right and the person that told you to use Node JS is an idiot
01:46 < jdelgado> lol
01:46 < jdelgado> He took six minutes to just pick apart the main page
01:46 < adpreese> Enh, I mean most of his complaints were technical in nature
01:46 < adpreese> They weren't well founded
01:46 < jdelgado> indeed
01:46 < adpreese> But they were technical
01:47 < adpreese> He reliably gets a lot of views it looks like
01:47 < adpreese> Weird
01:49 < jdelgado> Just listening to it, I don't think he understands the concept of non-blocking
01:56 < Blacthorn> I'm kind of learning MVC. Would anyone have a best practice suggestion on where I should define an SQL connection pool? Would this be done in a model or should it be done in the init? 
01:57 < jpeas> has anyone here deployed a Node/Socketio application on heroku? I noticed that they don't support websockets, and added the Socketio config to fall back to long polling… but i'm still getting the websocket error
02:35 < adpreese> Blacthorn: A lot of frameworks use a config convention where some things aren't defined in the model view or controller
02:36 < adpreese> For example, dependencies on other modules.
02:36 < adpreese> Database connections are another good thing to go in this class
02:46 < Blacthorn> adpreese: I'm working from the express MVC example. 
02:49 < Blacthorn> I'm hoping to use MVC to make sure my code doesn't balloon into an unreadable monstrosity as it usually does. I'm kinda staring at what I have so far and I can't figure out where this should go. 
02:51 < mscdex> hrmmm i think node's zlib binding might be kinda borked
03:02 < adpreese> Are you using one of the seed projects Blacthorn 
03:11 < Blacthorn> adpreese: I started my project from this: https://github.com/visionmedia/express/tree/master/examples/mvc
03:12 < Blacthorn> I guess I should replace db.js with functions that interact with my sql database.
03:12 < adpreese> That would be good
03:13 < Blacthorn> But is that where I should define the pool? I'm afraid if I do it would be created each time a page is loaded... 
03:15 < Blacthorn> I should probably just put it somewhere and test what is happening. Then tweak as needed. 
04:22 < yosyp> I've got a mongoose scheme with a document that contains an array inside an array. I perform a find() and feed the result to jade. Jade complains about not being able to read property 'length' of undefined.
04:23 < yosyp> Has anybody encountered this? I've been breaking my head for a few hours now. StackOverflow is filled with specific cases none of which work.
05:17 < Beg> meteor so cool
05:17 < Beg> :
05:25 < Blacthorn> yosyp: Can you paste the line where you pass the array into jade? 
05:26 < yosyp> Blacthorn: I have solved it. Turns out that mongoose pluralizes mongodb collection names. I was looking for a variable that truly was undefined. 
05:28 < Blacthorn> Ah okay. I haven't used mongoose yet. 
05:36 < staticsteven> anyone around to help with a fairly noob question?
05:36 < dylenbrivera> Can node send prebuilt webpages to clients?
05:37 < dylenbrivera> I found what I was looking for. Thanks anyway.
05:40 < locy> how to use htmlparser2 dom handler callback, is it .on('end', function.... ?
05:42 < mscdex> staticsteven: just ask
05:43 < staticsteven> okay i have a search box on one page, and on the results page, i want the value of the search box/input to be the previously searched term
05:43 < staticsteven> i have a variable passed locally into the view
05:43 < staticsteven> but am unsure how to call it in the view
05:43 < mscdex> are you using express?
05:43 < staticsteven> i am using a partial for the search so it needs to be blank on the index page where there is no value
05:44 < staticsteven> yes
05:45 < mscdex> staticsteven: you can pass variables to your views when you call res.render()
05:46 < staticsteven> i did that
05:46 < staticsteven> can i call a variable passed to the view from an external script?
05:48 < mordof> upon googling - i'm getting the idea that this might not be possible: monitoring the keyboard for specific keyboard combinations to trigger actions with node?
05:51 < Blacthorn> staticsteven: you want to fill a text box on the page with the value of the last search; so wouldn't it just be textarea value= #{object.whatever}
05:51 < Blacthorn> Asuming that you are using jade.
05:53 < staticsteven> ok i figured it out thanks
05:54 < Blacthorn> Good to hear; was that what you were looking for?
05:54 < staticsteven> more or less, thanks
05:54 < Blacthorn> No problem.
05:54 < staticsteven> another quick question: can i have something appear so that the units convert? ex: if < 1000, display in metres, otherwise divide by 1000 and display with string KM
05:55 < Blacthorn> Yup, you can do that using javascript in jade or on the client.
05:55 < staticsteven> can i do it right in the jade view Blacthorn 
05:55 < staticsteven> I get an attrs token error
05:55 < Blacthorn> You should be able to do it in the jade view. 
05:56 < Blacthorn> I'm going to try now. 
05:57 < staticsteven> if plan.length < 1000
05:57 < staticsteven> 							#{plan.length} melse
05:57 < staticsteven> (plan.length/1000) km
05:57 < staticsteven> is what i have
05:57 < staticsteven> (m and else on separate lines)
05:58 < Blacthorn> staticsteven: http://cssdeck.com/labs/full/msoldezp
05:58 < Blacthorn> er, I fail
05:59 < mscdex> mordof: sure you can, there's readline
05:59 < Blacthorn> http://cssdeck.com/labs/fodhb5yq
05:59 < Blacthorn> staticsteven: that link should work. 
05:59 < mscdex> mordof: if it's just ctrl+c you're looking for, you can watch for the 'sigint' event on process
06:00 < mordof> mscdex: not ctrl+c - it could be any key combination.. i want it configurable to trigger events
06:00 < mordof> mscdex: and i'm on windows
06:01 < staticsteven> testing now thanks Blacthorn 
06:01 < staticsteven> beautiful, thanks a bunch
06:01 < Blacthorn> No problem! Jade is amazing =D
06:01 < staticsteven> did not realize the /1000 went in the squiggly brackets
06:02 < Blacthorn> You can do any kind of javascript if you start a line with -
06:02 < staticsteven> ah okay
06:02 < mscdex> mordof: you might try this: https://npmjs.org/package/keypress
06:03 < mordof> mscdex: that looks like it requires some form of focus to be given to that process though does it not?
06:04 < staticsteven> Blacthorn: more on that javascript by starting with -
06:04 < mscdex> mordof: well yeah, the console would need focus....
06:04 < mordof> mscdex: then that won't work for me :/ hmmm
06:04 < staticsteven> Blacthorn: can i create an inline javascript to replace a value using a variable from the view, like #{}
06:04 < mordof> mscdex: i want global catch keystrkoes
06:04 < mordof> entire computer
06:04 < Blacthorn> Yup!
06:05 < mscdex> mordof: can't help you there
06:05 < mordof> mscdex: kk - thanks for the assistance :)
06:05 < staticsteven> Blacthorn: how would i phrase a (#identifier).text(#{value}) in jade?
06:05 < Blacthorn> When you use the - you don't need to use #{}
06:06 < Blacthorn> That whole line becomes javascript, #{} is for getting the return from javascript inline with others html stuff
06:06 < staticsteven> can i just write javascript normally? or what is the jade formAT
06:07 < Blacthorn> So it would be something like:  - object.whatever.replace('a','b')
06:07 < Blacthorn> wait
06:07 < Blacthorn> - object.whatever = object.whatever.replace('a','b');
06:08 < Blacthorn> Or you might be able to do it inline if you don't want to change the var for the rest
06:08 < Blacthorn> #{object.whatever.replace('a','b')} <== I don't know if that works but it probably does. 
06:09 < staticsteven> so the object is the css identifier?
06:09 < staticsteven> i will give you an example
06:09 < staticsteven> ( "label#amount-texts" ).text( "Testing" );
06:10 < Blacthorn> What is it that you want to happen? Check out my example here: http://cssdeck.com/labs/fodhb5yq
06:11 < Blacthorn> I changed abc to bbc using the inline #{} dealie 
06:11 < staticsteven> ah ok, lemme give that a try
06:11 < staticsteven> one thing
06:11 < staticsteven> does that line have to appear right after?
06:11 < staticsteven> or can i put it at the end of the document and it will know what to replace
06:12 < Blacthorn> When you use #{} you put it exactly where you want it. 
06:12 < Blacthorn> If you are changing it in more than one place this wouldn't be what your looking for. 
06:13 < staticsteven> could that variable "text" have been passed into the view through res.render?
06:13 < iber> hi guys, i've just started building a new app using nodejs, and kind of got stuck. I need to open a mysql database connection, which will be shared throughout a couple of modules, but it seems like that's not really possible. Opening a connection in each module seems like an overhead. How do you handle it?
06:15 < Blacthorn> staticsteven: Yep
06:15 < staticsteven> ok thank
06:15 < staticsteven> s
06:15 < Blacthorn> iber: I'm just doing something like that in my app. 
06:16 < Blacthorn> You can use a sql connection pool 
06:16 < Blacthorn> I spent most of the last few hours trying to decide where I wanted to put it and just got it figured out. 
06:17 < Blacthorn> That's actually what brought me here. 
06:17 < iber> good timing haha
06:18 < Blacthorn> It would depend on the way you are laying out your application. For me I'm trying to follow the "MVC" framework. 
06:18 < iber> i'm starting off with a CLI app, therefore It's quite simple
06:19 < iber> it'll be doing some background work
06:19 < Blacthorn> Do you have an account at icloud? 
06:19 < iber> yes
06:19 < mscdex> iber: you can create a config module that all of the other modules require() and access the same mysql client instance
06:20 < mscdex> or you can pass in the client object to each module
06:28 < Blacthorn> iber: I left a few notes on what I'm doing. The way it will work is that when I launch the app it will keep a pool of ten sockets(default val). Each time I have a call to the db it grabs one of them. once I'm done I close it with connection.end()
08:48 < sinclair|net> here is something i coded in nodejs
08:48 < sinclair|net> http://ultra.azurewebsites.net/
08:52 < jesusabdullah> ULTRA
08:53 < jesusabdullah> sinclair|net: whatever that is, it pwned my memories pretty hard. GoL in 3d?
10:08 < standoo> gehello
10:18 < alchimista> hi everyone, I am trying to create reset password feature in my web app, but I am not able to update the password field of the user,
10:18 < alchimista> this is my code https://gist.github.com/anonymous/20aa5fd30bd174b75dc8
10:19 < alchimista> where u can see the user model, where the password field is a virtual type
10:19 < alchimista> so any hint/guid, why my code is not working
10:23 < alchimis_> anyone here read my question?
10:27 < VesQ> alchimis_: so your webapp sends the "unable to update password" message?
10:27 < alchimis_> actually it output  console.log('new password has been set');
10:27 < alchimis_> because it comes to the else part
10:28 < alchimis_> but the hash remain the same and also the new password is not set
10:29 < VesQ> so this is mongoose?
10:29 < alchimis_> yes
10:29 < alchimis_> actualy this part of the code User.update(query, {$set:{password:newPass}},{ multi: false },function(e, o){   ... if I do console.log(o) it out put 0 which mean 0 document affected
10:32 < VesQ> shouldn't the second parameter be just {password: newPass} +
10:32 < VesQ> ?*
10:32 < VesQ> what do you need $set for?
10:33 < alchimis_> actually I know what(and where) is the problem, but I dont know how to solve it, if I change {$set:{username:newPass}} , it update and change the username to the new password, so the problem is updating a virtual type 
10:33 < VesQ> ah well then. I'm not that familiar with MongoDB, lucky that I can get something out of it
10:36 < alchimis_> VesQ: actually it is not mongoDB, it is mongoose http://mongoosejs.com/docs/api.html#schema_Schema-virtual
10:36 < VesQ> yes, just read that :P
10:36 < VesQ> reading the description from http://mongoosejs.com/docs/guide.html
10:37 < VesQ> I suspect that the "o" parameter in the update-query doesn't represent the number of virtuals changed
10:43 < alchimis_> VesQ: example from the documentaion https://gist.github.com/anonymous/948952fc745aed4bf492
10:43 < alchimis_> see here function (err, numberAffected, raw)
10:44 < alchimis_> i think in my code i wrote o but here it is numberAffected
10:44 < VesQ> yes, but that doesn't mix virtual variables with database values, does it?
10:44 < alchimis_> as I said the my problem is to update a virtual type field
10:45 < alchimis_> thats exactly what I dont know
10:45 < VesQ> my point was that the numberAffected probably doesn't tell you how many virtual variables were updated
10:45 < VesQ> and I'm suspecting that you can't update virtual variables with a $set query, but using some other method. Investigating further
10:46 < alchimis_> ok, yeah I have to investigate furture, thank you anyway
10:46 < VesQ> I'm not done yet :P
10:46 < alchimis_> :)
10:59 < Blkt> morning everyone
11:01 < alchimis_> VesQ: the same problem as mine https://groups.google.com/forum/#!topic/mongoose-orm/-FxXZ_ID6Po  but I can't understand the solution
11:02 < VesQ> well you just find the user you're looking for and then set the password with a pure "variable = value" way
11:04 < VesQ> in your updatePassword, just do "User.findOne(query, function (err, user) { ..." and inside the function, do "user.password = thePasswordIWanted"
11:05 < VesQ> then setting the user.password value will call the virtual fields' "set" method, which does the actual setting
11:05 < alchimis_> i did it, but i recieve this error: TypeError: Object { _id: 51cdaad46b118e3d27000003 } has no method 'save'
11:05 < VesQ> can you show me the updated gist?
11:05 < VesQ> or just update the old one
11:07 < alchimis_> https://gist.github.com/anonymous/55ff249b14d5324c8c34
11:08 < alchimis_> VesQ: did u saw the gist?
11:10 < VesQ> just checking now
11:11 < VesQ> the "find" method returns a series of documents for you
11:11 < VesQ> you need to use "findOne" to return just one
11:11 < VesQ> http://mongoosejs.com/docs/api.html#model_Model.findOne
11:14 < alchimis_> thank you VesQ
11:14 < alchimis_> it works ;)
11:14 < alchimis_> really thanx
11:16 < VesQ> nice to be of help, and at the same time learn something new :)
12:07 < sinclair|net> jesusabdullah: http://ultra.azurewebsites.net/
12:08 < sinclair|net> jesusabdullah: just something fun i was working on
12:09 < sinclair|net> jesusabdullah: its also written in TypeScript :P
12:10 < saschagehlich> hey, I'm currently diving into browserify. in one of my modules I do something like "window.myModule = myModule" to make it globally available. but in the end, when using the file in the browser, myModule is not globally available. what do I have to do to make that happen?
13:01 < xuan> hehe
13:01 < xuan> Cannot read property 'prototype' of undefined jquery 
13:02 < xuan> some one resolve this question in window
13:02 < xuan> ？
13:04 < veri> xuan jquery is not defined
13:07 < locy> how can i easily change existing ajax functions to use socketio if available?
13:10 < xuan> veri  i use require("jQuery")  ; in window 7 . require throw a exception  Cannot read property 'prototype' of undefined
13:11 < xuan> seem 。 window.XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest; don‘st work 
13:12 < veri> xuan, require("xmlhttprequest") throws an exception?
13:12 < xuan> no
13:13 < xuan> very strange
13:13 < veri> what is window even?
13:13 < xuan> require("xmlhttprequest").XMLHttpRequest  ; is not undefined
13:14 < veri> is window defined?
13:14 < xuan> window come from   window = require('jsdom').jsdom().createWindow();
13:14 < xuan> undefined
13:14 < xuan> set a value to window object  do not work 
13:15 < xuan> require("xmlhttprequest").XMLHttpRequest is a object 
13:15 < xuan> but window.XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
13:15 < veri> setting a value to window object works for me
13:15 < xuan> window.XMLHttpRequest is undefined
13:16 < veri> but window.XMLHttpRequest is already defined for me
13:16 < veri> so there's no need to require it.
13:17 < locy> how cani send a string of html/xml straight to FeedParser?
13:19 < xuan> veri thank you . There is no problem in the Ubuntu. but in window exception 
13:20 < xuan> i
13:20 < xuan> google  some one say it is a problem from contextify
13:20 < veri> when you run it in Windows there is an exception?
13:21 < xuan> jsdom use the moudule contextify
13:21 < xuan> yes 
13:22 < xuan> iI do not want to manage this problem
13:23 < SomeoneWeird> xuan, you need visual studio installed
13:23 < SomeoneWeird> https://github.com/TooTallNate/node-gyp/wiki/Visual-Studio-2010-Setup
13:58 < locy> how cani send a string of html/xml straight to FeedParser?
14:53 < mQstn> hello irc. i've a question regarding nested javascript objects
14:55 < mQstn> if I'm retrieving from a database an object with 2 fields, an identifier and an array of objects, how can i access the objects inside the array? 
14:55 < mQstn> snippet: http://pastebin.com/hvt7kUWq
15:11 < rom1504> someList is an array or an object ?
15:33 < locy> how can i send a string of html/xml straight to FeedParser? or do i have to use a url?
15:37 < veri> locy, FeedParser is a transform stream
15:38 < locy> so i cant send the body of a page to it as string?
15:38 < veri> how do you use it with a url?
15:54 < locy> veri:  request('http://somefeedurl.xml')
15:54 < locy>   .pipe(new FeedParser([options]))
15:54 < locy>   .pipe([some other stream])
15:54 < veri> request is not part of the FeedParser
15:55 < veri> you actually download the url yourself and then pipe it through feedparser.
15:55 < veri> so i don't see a problem with using a string as source.
15:59 < locy> so i can just pipe though an object or string with the page data?
15:59 < locy> from another source?
15:59 < locy> sorry im too php, not withit on callbacks etc
16:00 < veri> yes. just create a stream with the string instead of using request.
16:02 < veri> i'm not sure how streams work myself. maybe you can simply call `.write(aString)` on the FeedParser
16:02 < locy> thanks
16:13 < Bubo> Hey guys, would you use only MongoDB for making an RSS reader? How would you design the schemas?\
16:13 < upshoot> I have a basic node question -- once you are outside of the event loop (in a callback function), is there any advantage to continuing the asych approach, or can you use synchronous logic and functions as long as you are not blocking the main event loop?
16:14 < upshoot> Bubo, just use the RSS DTD as a guide, depending on which rss style you are going to use..
16:16 < Bubo> upshoot: How is that relevant? You can do it in both NoSQL and SQL databases. I am curious how people would design the schemas for MongoDB for an RSS reader
16:16 < Bubo> because you would need each user to have his own subscriptions and those subscriptions would need to have the feeds which feeds need to be tracked if the user has read them or not
16:16 < upshoot> Bubo, check out the first 20 or so lines of this to see the relevant elements.  RSS is a structured data type, so if you are designing a schema, you want to map to  it.  http://emacspeak.googlecode.com/svn/trunk/html/rss-0.91.dtd
16:16 < Blacthorn> upshoot: It's my understanding that nodejs is a single thread so you don't want to block anywhere. 
16:17 < Bubo> upshoot: also for your question, it will block anywhere if you run synchronous code
16:17 < Bubo> what Blacthorn said
16:20 < upshoot> Blacthorn, hm... I thought that if you do something like fetching a database result, or reading a file, node continues to loop while the function runs, assuming you make that activity a callback.  the point of the callbacks is to clear the event loop..but once you are not in the event loop, I thought you might be able to do synchronus stuff.  I guess I'll have to look at that more.
16:21 < upshoot> Blacthorn, Bubo, thanks for your thoughts.
16:21 < Blacthorn> If your using a callback then your not blocking. 
16:22 < Blacthorn> It runs after the current stack clears so other code can be run.
16:22 < Bubo> Blacthorn: if the callback is running synchronous code, it will still block afaik.. right?
16:22 < Bubo> for example if a callback is called which needs 1min to finish executing, it will block the event for 1min
16:22 < Bubo> ?
16:23 < Blacthorn> the callback should be triggered by an event. So if you say "select * from sometable" and then callback, if it takes the database a minute to respond you could be doing a ton of other stuff in that time. 
16:24 < Blacthorn> In another language you might say variable = sqlquery(select * from sometable) and your code stops until the query is over. 
16:27 < Blacthorn> Thats my understanding anyway; I'm still relatively new to node myself. 
16:29 < Bubo> Blacthorn: yes
16:29 < Bubo> but
16:30 < Bubo> <Blacthorn> the callback should be triggered by an event. So if you say "select * from sometable" and then callback, if it takes the database a minute to respond you could be doing a ton of other stuff in that time. 
16:30 < Bubo> see, here you are already running async code
16:30 < Bubo> for example if that callback gets the data from the database but needs 5min to process it and the processing isn't done async
16:31 < Bubo> it will block the event loop
16:31 < Bubo> the callback will be called when the data is available from the database (1min) but if you take 5min to process that data, it will block it. You will need to process it asynchronously
16:31 < Blacthorn> Right; but do you call that blocking code if it's actually doing something? 
16:32 < Bubo> What do you mean?
16:33 < Bubo> for example: you want to query 10 million rows from a database and iterate through all of them. The querying of the data from the database can be done asynchronously, but iterating over it (if done synchronosly) will block it
16:33 < Blacthorn> I was only really thinking of blocking when you are just waiting for something to happen. 
16:33 < Bubo> Blocking is when some code is executing synchronously so you can't do anything else before that code finishes to execute
16:33 < Blacthorn> So would the solution be to only process a maximum portion of the data at a time? 
16:34 < Bubo> The solution would be to make it asynchronously
16:34 < Bubo> Since node.js is single-threaded, any sync code will block
16:34 < Blacthorn> How do you iterate over ten million rows of data asynchronously? 
16:35 < Blacthorn> Do x number of rows and then do a callback to do the next ten after the stack clears? 
16:35 < Bubo> Blacthorn: I don't think you would ever need to do that, but I guess it can be done with the async module
16:35 < Bubo> since it has an async forEach function
16:36 < Bubo> so I guess after every loop it will check for events in the event loop and if there are none, it will continue in the next loop
16:36 < absoftinc> help with response
16:36 < Blacthorn> I think it is possible to spawn another thread in nodejs too. 
16:36 < Bubo> I guess that's how it works. But I am not experienced in node a lot either
16:36 < Bubo> Blacthorn: I don't know. Haven't gone there yet
16:37 < absoftinc> http://pastebin.com/iZNXgV7P
16:37 < absoftinc> I mhttp://pastebin.com/839GYUfD
16:38 < absoftinc> in createserver I am calling a function which is querying cassandra dnd displaying output.
16:38 < absoftinc> I can put text in response.write but not from a cassandra call ?
16:38 < Blacthorn> It looks like your ending your response before your done. 
16:39 < Blacthorn> There is a callback happening. 
16:39 < absoftinc> how to make it wait
16:40 < Blacthorn> One way would be to call response.end(); in the callback after it does the write. 
16:41 < Blacthorn> try putting it where you have     console.log(name,value,ts,ttl);
16:42 < absoftinc> tried no good.
16:42 < absoftinc> it writes to console fine
16:44 < Blacthorn> Is it throwing any errors? 
16:44 < gildean> absoftinc: the respone.end is called before the function you call gets to return
16:45 < Blacthorn> He said that he moved response.end() into the callback. 
16:45 < absoftinc> gildean, is it implicit 
16:46 < gildean> absoftinc: it's obviously async, you're providing it an anon function as the second argument, which is the callback to the async operation
16:48 < absoftinc> Removed async still same issue. 
16:48 < gildean> absoftinc: removed async? that makes little sense
16:49 < absoftinc> full code
16:49 < absoftinc> http://pastebin.com/LPRBWLSM
16:49 < absoftinc> gildean, failry new to node.js -- Thanks for helping.
16:49 < Blacthorn> Your not executing end
16:49 < absoftinc> gildean, also it is straight forward http server, making a db call.
16:49 < absoftinc> Blacthorn, thanks for helping so far
16:51 < Blacthorn> The only problem I see is that you have resp.end instead of resp.end()
16:51 < Blacthorn> It looks like it should work otherwise. 
16:53 < Blacthorn> Can you try adding a console.log(!!response) after response.end()? It will log true if response is defined.
16:54 < absoftinc> true
16:54 < absoftinc> still not writing
16:54 < absoftinc> i have response.end() now
16:55 < Blacthorn> Is it getting an error? What happens if you try to open it in a browser? 
16:56 < Blacthorn> If you hit f12 in chrome and click "network" you can see what is happening in detail. 
16:56 < absoftinc> No error just ignores.
16:56 < absoftinc> I believe it has something to do with anonymous call
16:56 < absoftinc> results.forEach(function(results){
16:57 < absoftinc> anything inside is not getting written 
16:57 < absoftinc> is it because it is anonymous if so how to overcome 
16:57 < gildean> absoftinc: see this example for help: http://pasted.herokuapp.com/guest/7dc9bbd6e5.js
17:00 < Blacthorn> absoftinc: is your console log working inside of the foreach? 
17:00 < absoftinc> Blacthorn, Yes
17:00 < Blacthorn> Try moving console.log(!!response) into the foreach to ensure that it is still defined? 
17:01 < serapath> hi, anyone any idea what could go wrong with my stylus initialization? 
17:01 < serapath> My 'style.styl' is in C:\Users\serapath\Desktop\workspace\drivn_interface\app\client\views\stylus\style.styl
17:02 < serapath> i use this   app.use(require('stylus').middleware({ src: __dirname + '/app/client/views/stylus'}));
17:02 < serapath> console.log(__dirname) gives me C:\Users\serapath\Desktop\workspace\drivn_interface\
17:02 < serapath> i dont get it :/
17:05 < Blacthorn> If your using windows maybe you need to change to backslashes? 
17:06 < serapath> thx, i'll try that
17:07 < Blacthorn> A lot of the examples and material online are assuming that your using linux (or mac). Paths on those systems have a / instead of a \
17:07 < Blacthorn> Hope it helps. 
17:08 < Blacthorn> If you are interested, you can get a free linux vm preloaded with node from cloud9 for developing a nodejs app.
17:08 < serapath> no didnt
17:09 < serapath> i had it working a while back. not sure what changed
17:09 < serapath> i saw stylus comes with a debug option
17:09 < serapath> what does it do? if i set it to true, nothing happens
17:09 < Blacthorn> Not sure; I haven't used stylus... anything in the documentation? 
17:12 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:16 < serapath> no nothing
17:16 < serapath> damn
17:17 < serapath> i had stylus working
17:17 < serapath> now it doesnt, but no clue whats wrong with it
17:19 < jasonkuhrt> in streams2 should data be avoided if possible
17:19 < jasonkuhrt> the 'data' event I mean
17:19 < jasonkuhrt> or is it fine if your usecase does not need the guarantees supplied by the 'readable' + read() combo?
17:20 < ningu> jasonkuhrt: use the old or new mode as you prefer
17:20 < jasonkuhrt> and what the common use-cases that the sterams2 'readable' + read() combo solve what would have been a problem with the 'data' event?
17:20 < ningu> isaacs had a long post about that
17:20 < jasonkuhrt> ningu: okay, so the new "mode" is there as an alternative for certain use-cases
17:20 < jasonkuhrt> ningu: link?
17:21 < jasonkuhrt> ningu: I imagine the docs would say very clearly if 'data' was depricated but I guess my concern is that it changes the 'behaviour' to be like 'old streams' which from a new users perspective is rather confusing
17:21 < ningu> http://blog.nodejs.org/2012/12/20/streams2/
17:21 < jasonkuhrt> ningu: thanks, I read that point #2 was helpful but I'd love an article on just that
17:21 < ningu> jasonkuhrt: yes, the issue is that there has to be a little bit of magic to make the api work both ways and preserve backwards compat
17:22 < jasonkuhrt> ningu: should that magic be ignored in userland or if, say, you're making a stream via inheriting from Duplex do you need to account for whether 'data' or 'readable' is used?
17:23 < noocx> re
17:23 < jasonkuhrt> I'm currently reading this http://www.flo.by/node.js/2013/04/02/using-new-streams2-in-node.js-0.10/
17:23 < ningu> no, you don't worry about it as a stream implementer, just as a stream user
17:23 < jasonkuhrt> ningu: ok..
17:23 < jasonkuhrt> ningu: thanks, I mean, this will all get clearer as I go but its a little edgy right now
17:23 < ningu> yeah, a lot of people are confused by it
17:25 <@isaacbw> edgy mofo
17:25 < jasonkuhrt> ningu: I wonder where the confusion stems from... I guess its the api is fairly dependent on patterns and use-conventions (which is fair enough, its abstracting a lot)
17:25 < jasonkuhrt> ningu: for instance I just discovered that if I don't push(null) then an end event is never fired for users
17:26 < jasonkuhrt> ningu: at the same time, if a user does not bind on 'readable', 'data', or invoke resume(), they won't get an 'end' event either!
17:26 < jasonkuhrt> so...
17:26 < jasonkuhrt> its a lot of patterns under the hood to produce different patterns
17:26 < ningu> yep
17:26 < jasonkuhrt> and unless you know the different "flows" data can take and why
17:26 < jasonkuhrt> errors are really hard to debug
17:26 < jasonkuhrt> ningu: seems like a guide would be in order
17:26 < jasonkuhrt> ningu: on top of the api
17:27 < ningu> but otherwise you are stuck with just one pattern, and I've found them both to be useful
17:27 < ningu> substack has a streams guide
17:27 < jasonkuhrt> ningu: for streams 1
17:27 < jasonkuhrt> ningu: last I checked anyway
17:27 <@isaacbw> substack loves streams
17:27 < ningu> oh, really? I haven't looked, so
17:27 < jasonkuhrt> streams seem great, and I'm trying to architect a service I'm working around on them
17:28 < jasonkuhrt> but its definetely like peeling an onion
17:28 < jasonkuhrt> confused, think I get it, nope, think I get it, nope
17:28 < jasonkuhrt> so on
17:28 < jasonkuhrt> anywys
17:28 < jasonkuhrt> ningu: thanks
17:31 < ningu> jasonkuhrt: yeah, there is a bit of a learning curve but it's worth it, lets you have much more control over how you handle requests than your typical web framework
17:32 < jasonkuhrt> ningu: cool, if the experts say so then I'm down, I'm interested in the path of most reward
17:32 < ningu> I don't know if I'm an expert but I believe substack :)
17:32 < jasonkuhrt> ningu: heh
17:32 < jasonkuhrt> isaacbw: what say you?
17:32 < ningu> and I have done enough with streams to find them pretty useful
17:32 < serapath> HAH :-) Ok, found the solution. Stylus REQUIRES stylus stylesheets to be under /stylesheets/filename.styl relative to the given 'src' path
17:33 < serapath> i didnt know, so my stylus files were in /stylus/filename.styl
17:33 < ningu> serapath: that sounds unlikely to me, hrm
17:33 < serapath> but it works
17:34 < serapath> tried many different ways, but if i use "src: __dirname + '/app/client/views'"  and put my stylus files under " __dirname + '/app/client/views/stylesheets"
17:34 < serapath> it works
17:34 < Bubo> With Mongodb would it be possible to design a schema for an RSS reader? Users have subscriptions, subscription has feeds
17:34 <@isaacbw> jasonkuhrt: don't listen to me, I'm not isaac/s
17:34 < serapath> if i put them under " __dirname + '/app/client/views/stylus" it doesnt and if i put them under " __dirname + '/app/client/views" it doesnt
17:34 <@isaacbw> I've been playing around with a language design that revolves around streams
17:35 < jasonkuhrt> issacbw: ah ; )
17:35 <@isaacbw> basically shell scripting on steroids
17:35 < jasonkuhrt> isaacbw: intersting, repo link or private?
17:35 <@isaacbw> nothing, just a notebook
17:35 < jasonkuhrt> ah
17:35 < jasonkuhrt> cool
17:35 <@isaacbw> streams are cool beans
17:43 < mikolalysenko> anyone know how to get v8 to spit out its generated x86 assembly?
17:43 < mikolalysenko> I think there is some flag or another you can pass to it
17:46 < guybrush> mikolalysenko: http://mrale.ph/blog/2013/04/29/performance-tuning-as-weather-forecast.html#disassembly_is_compiler_engineers_best_friend not sure if this helps though
17:47 < guybrush> and `node --v8-options`
17:47 <@isaacbw> what the turd
17:53 < mikolalysenko> guybrush: thanks!
17:55 < mikolalysenko> guybrush: hmm... doesn't seem to work in node.js directly
17:56 < guybrush> i never actually tried something in that direction
17:56 < guybrush> maybe v8 has to be compiled with some special option
17:57 < mscdex> "disassembly can be obtained from V8 with `--print-opt-code --code-comments` if V8 was built with `disassembler=on`"
17:57 < mscdex> ^ from that link
17:57 <@isaacbw> why are you trying to do this
17:57 < guybrush> so you can understand what the hell js is doing
17:57 < guybrush> if you care
17:58 < guybrush> so you can optimize better
17:58 < mscdex> guybrush: FWIW you can also enable tracing to see where and when optimizations and deoptimizations happen
17:58 < mscdex> without recompiling
17:59 <@isaacbw> guybrush: I don't think intercepting the machine code is the way to do that
17:59 <@isaacbw> but whateves
17:59 <@isaacbw> -e
17:59 < guybrush> right i saw mraleph do it at some conference :D
17:59 < guybrush> isaacbw: why not?
18:01 < mscdex> node --trace_opt --trace_deopt foo.js
18:01 < mscdex> i think there might have been another argument that was worth considering, can't recall what it was though
18:01 < mscdex> oh --trace_inlining
18:02 < mscdex> i use those 3
18:02 < Bubo> With Mongodb would it be possible to design a schema for an RSS reader? Users have subscriptions, subscription has feeds
18:02 < mikolalysenko> isaacbw: I am trying to figure out why v8 is deoptimizing a blob of code
18:02 < mscdex> mikolalysenko: node --trace_opt --trace_deopt --trace_inlining foo.js should get you what you want
18:03 < mikolalysenko> mscdex: I've tried that, but it doesn't give me what I want to know
18:03 <@isaacbw> mikolalysenko: would you mind sharing the blob of code? To satisfy some curiosity?
18:03 < mikolalysenko> isaacbw: it is complicated, not easy to paste right now
18:03 <@isaacbw> haha, alright
18:03 <@isaacbw> so a bit more than a blob
18:03 < mikolalysenko> but it is related to this:  https://github.com/mikolalysenko/ndarray-stencil
18:03 < mikolalysenko> it is a generated blob of code
18:04 <@isaacbw> ah
18:04 < mikolalysenko> I am trying to figure out why v8 sometimes optimizes the code it generates, and other times it does not
18:04 <@isaacbw> because v8 is a stupid bastard
18:04 < mscdex> mikolalysenko: are you using eval() or Function() or vm.* ?
18:04 < mikolalysenko> or more likely I am not feeding it the right thing
18:04 < mikolalysenko> Function() obviously
18:04 < mikolalysenko> I want it to run in a browser so vm is off limits
18:05 <@isaacbw> mikolalysenko: I suspect you'd get more out of the v8 source than machine code output
18:06 <@isaacbw> but it would be really awesome if you *did* get something useful from the output and then blogged about it
18:06 < mscdex> the disassembly won't tell you *why* it deoptimized though
18:06 < mscdex> that's what the 3 flags i mentioned are for
18:07 < mikolalysenko> well, it will at least let me see what it is doing
18:07 < mikolalysenko> I want to figure out why it is running so much slower than it should
18:07 < mscdex> mikolalysenko: have you tried comparing the generated code by itself vs compiling it on the fly?
18:08 < mikolalysenko> mscdex: no, but I am going to try that next
18:08 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:08 < mikolalysenko> it is difficult to pull out just the generated code for this example though since it interacts with a number of other systems
18:09 < mikolalysenko> and in isolation the performance problems are not there
18:10 < zenetik> hi, i'm looking for some codes using stream2 and sockets (in particular network sockets)
18:11 < zenetik> need to dive in it
18:11 < mscdex> zenetik: what in particular are you having trouble with?
18:12 < zenetik> mscdex: well, i don't have any trouble, i'm just learning. Looking for inspiration.
18:13 < mscdex> zenetik: ah. well the api docs have some examples
18:13 < zenetik> mscdex: it does not inspire me very well :)
18:14 < zenetik> mscdex: look. I'm opening a tcp socket on port X. The port is open so socket fire event 'connect'
18:14 < mscdex> zenetik: but it's mostly you do socket.read() to get the current buffer or socket.read(123) to read at least that many bytes. if read() returns null, wait for the 'readable' event to try again
18:15 < zenetik> mscdex: after that, 2 possibilities: first one: the over side send something, second one, i need to send something to the over side and wait for data
18:15 < zenetik> mscdex: the challenge for me is to handle both cases in the same socket
18:16 < mscdex> zenetik: both? isn't there a protocol that says what should happen ?
18:16 < zenetik> mscdex: example, detect is a port is a socks proxy or a telnet server
18:16 < zenetik> mscdex: i don't know yet, perhaps i have to handle case 1 with a socket, and case 2 with another one
18:16 < mscdex> zenetik: well you can employ some heuristics i guess, but that's not going to be easy
18:17 < mscdex> zenetik: for example, what if you connect and the other side is just slow to respond ?
18:18 < zenetik> mscdex: excellent question, my answer is: i don't know yet. I'd like to understand nmap code for that :)
18:18 < mscdex> heh
18:18 < ningu> nmap probably has a lot of black magic type stuff
18:18 < mscdex> ^
18:19 < zenetik> i already have a case of socks proxy having different responses each time i'm trying to connect
18:19 < zenetik> 1. connection refused
18:19 < zenetik> 2. txt message like telnet saying too many connections
18:19 < zenetik> 3. socks4 over socks5 or something like that
18:20 < zenetik> all that with timeouts between 1000 and 10000 ms .....
18:21 < zenetik> in python you can sock.recv(numberOfBytes)
18:21 < mscdex> you can do that in node too, except it gives you *at least* that number of bytes
18:21 < mscdex> if they're available
18:22 < mscdex> if you get too much, you can just push the extra bytes back onto the socket
18:22 < zenetik> okey
18:22 < mscdex> s/push/unshift
18:23 < mscdex> if the bytes aren't available (null is returned), wait for the 'readable' event
18:23 < fx> Hey everyone
18:23 < mscdex> that's probably when you'll start your timer, and clear it when the 'readable' event fires
18:23 < nathan7> mscdex: wait, what
18:23 < zenetik> agree with that
18:24 < mscdex> nathan7: ?
18:24 < ningu> I thought read(num) would give you up to num
18:24 < mscdex> no, it's *at least*
18:24 < nathan7> Hrm :|
18:24 < nathan7> That's confusing
18:24 < mscdex> i ran into that the other day and it is documented, i just overlooked it
18:24 < nathan7> Documentation about it could be clearer
18:25 < ningu> I frequently underlook things in docs
18:25 < mscdex> nathan7: http://nodejs.org/docs/latest/api/stream.html#stream_readable_read_size_1
18:25 < mscdex> nathan7: "The size argument will set a minimum number of bytes that you are interested in."
18:25 < nathan7> mscdex: I read that, dear.
18:25 < mscdex> ok then :-)
18:26 < nathan7> It could use a "WARNING: big-ass foot-bazooka"
18:26 < zenetik> mscdex: that's why i was thinking "stream2" so i can control exactly what append: If at least 2 bytes received in 1000ms -> firevent, data = 2 bytes. if timeout -> firevent, data = null
18:26 < mscdex> i think it's pretty clear
18:26 < ningu> would it be even clearer if the docs had ducks?
18:27 < mscdex> and a dog
18:27  * zenetik is a cat
18:27 < mscdex> and some old-school 8-bit music
18:28 < ningu> anyone ever notice how different kinds of ducks will hang out together in a pond? it's like they think, whatever, you're a duck, close enough
18:28 < zenetik> last question, but probably offtopic: if i sen
18:28 < zenetik> oups
18:28 < fx> How should I handle closing of the database connection when I have a bunch of async calls and can't tell which call would be the last one?
18:28 < nathan7> ningu: are they less racist than humans, though?
18:29 < zenetik> last question, but probably offtopic: if i send socks header on a socket finaly opened on a telnet server, will the telnet server will close the socket ?
18:29 < mscdex> fx: huh?
18:29  * zenetik seem's not but ...
18:29 < zenetik> fx: do you know the max number of async calls ?
18:29 < mscdex> zenetik: it's entirely dependent on the implementation. telnet is just a lower-level protocol, not application-level
18:30 < fx> mscdex, I have a nodeJS script. I'd like it to close the db and let node finish when its done all its work. but there could still be some db writes outstanding
18:30 < mscdex> fx: usually the database driver should handle that for you, it should know what's in the queue (if the implementation has such)
18:30 < fx> zenetik, its dynamic, it will do queries until its satisfied that it doesn't have to do any more queries
18:30 < ningu> mscdex: usually the db driver will leave the connection open until you call close()
18:30 < fx> mscdex, this is mongodb's native driver, the good one
18:31 < mscdex> fx: ah ok, can't really help you there, i've never used mongodb
18:31 < zenetik> mscdex: ok. So it's preferable to use 2 sockets, first one send extra buffers after connect, second one don't send anything on connect and wait for data, and i have to deal with results of both cases
18:32 < fx> I'm trying out something akin to reference counting. I'm adding to a number whenver i'm creating an async query, and subtracting whenever callback is finished. Closing the dababase on 0 refcount would be wrong though, because the first query could finish before the next one is steup
18:32 < mscdex> zenetik: you could do it that way, or use some other heuristics like just waiting x ms after connection to see if you get any automatic response. if not, then send some data and see if you get a response ?
18:33 < nathan7> or you could just have callbacks for things and use async..
18:33 < zenetik> mscdex: agree with you, but sound complicated to deal with timeouts for me
18:33 < zenetik> nathan7: hi, are you speaking to fx or me ?
18:33 < mscdex> ningu: right, but some will also empty the query queue on close()/whatever()
18:33 < ningu> mscdex: oh right, hmm
18:33 < mscdex> ningu: like finish the queue up before closing
18:33 < ningu> that's a good point
18:34 < mscdex> zenetik: you can always go back to the old streams format if you want, that stills works with streams2
18:34 < nathan7> zenetik: fx.
18:35  * mscdex shakes a fist at Google Groups
18:35 < mscdex> Y U NO LET ME SIGN IN
18:35 < fx> nathan7, In that case, what do you mean callbacks? All async code is in a callback anyway
18:35 < zenetik> mscdex: my project is only for node > 0.10, i can stall with stream2 so
18:36  * zenetik reading nmap black magic papers
18:36 < nathan7> fx: You can use stuff like async.map / async.each / async.parallel to aggregrate callbacks
18:36 < nathan7> fx: So you'll have a final callback
18:36 < nathan7> fx: that is called when everything is done
18:37 < fx> Thats possible, but i'm creating callbacks and nesting db queries. Is that still possible?
18:37 < nathan7> Yes, certainly.
18:38 < nathan7> fx: https://github.com/caolan/async#readme
18:39 < zenetik> js question: fastest way to make something like myArray.sortRandom() ?
18:39 < nathan7> an array shuffle?
18:39  * zenetik googling
18:39 < nathan7> JS doesn't really have array shuffles builtin
18:39 < nathan7> They're tricky to get right
18:40 < mikolalysenko> they aren't tricky to get right.  just use knuth's algorithm
18:40 < mikolalysenko> there are also a million modules on npm that do it
18:40 < zenetik> good to know
18:40 < zenetik> thanks
18:40 < zenetik> mscdex: nathan7: mikolalysenko: thanks
18:41 < mikolalysenko> here is an example:  https://github.com/substack/node-deck
18:42 < fx> nathan7, Hmm, i think it should be possible, but i'll have to rewrite how I iterate over query results. Thanks for advice
18:43 < mscdex> zenetik: if you want a good array shuffle, use something like Fisher-Yates: http://bost.ocks.org/mike/shuffle/
18:43 < mikolalysenko> also this wiki page:  http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle
18:43 < mscdex> :-)
18:46 < zenetik> mscdex: i'll add fisher-yates stuff, sound's good thx a lot (it's for qjobs)
18:50 <@isaacbw> cool people use promises
18:50 <@isaacbw> oh hey, old
18:50 < mscdex> isaacbw: i promise nobody is using them
18:51 <@isaacbw> lol
18:51 < vrlogrs> hey guys
18:51 <@isaacbw> I've spent a fair amount of time trying to get server side promises to work well with node, but ultimately they just aren't so useful
18:51 < vrlogrs> is node-inspector the best option for watching/restarting a process when it crashes?
18:51 <@isaacbw> but clientside development is awesome with promises
18:52 < juho> vrlogrs: i use nodemon myself. i think it's mostly a taste issue
18:52 < mscdex> vrlogrs: 'PM2' seems to be the "new thing": https://github.com/Unitech/pm2
18:53 < vrlogrs> i just need a simple thing that isnt buggy
18:53 < vrlogrs> watch/restart a process
18:54 < vrlogrs> restart with arguments would be nice though .. like outputting to log file
18:56 < mikolalysenko> ok, so I've figured out that v8 is actually optimizing the routine.  it is just doing a shitty job at it
19:03 < jalcine> so promises aren't really useful, just broken?
19:06 < nathan7> jalcine: Far from broken
19:07 < nathan7> jalcine: and imho quite useful, but you're free to disagree on that point
19:18 < jalcine> nathan7: I wouldn't know, haven't used them
19:18 < jalcine> just making a pun on the backlog of the chan haha
19:21 < mordof> is there a way for me to add a left click handle event on the status icon?
19:23 < harbhub> is there a way to use http.delete?
19:23 < harbhub> i need to send http.put, delete, post, and get
19:23 < harbhub> so far http.get works
19:23 < harbhub> how do i send a delete request from my nodejs http server
19:24 < harbhub> (no express)
19:29 < jalcine> mordof: is that in the HTML/JavaScript?
19:29 < mordof> jalcine: well, it could be in the window initialize js file (not connected to the HTML)
19:30 < mordof> jalcine: all i want is for window.frame.fade();  to occur when i left click on the status icon. preferably making an icon with no menu (though i don't think that's possible right now)
19:31 < mordof> jalcine: in the native_status_icon_win.cpp file i'm seeing a nativeStatusIcon->Emit("click");  under WM_LBUTTONUP.... but i don't know if that correlates down through to the actual app.js file for me to attach a listener on to
19:32 < mordof> every time i try the app won't initialize. crashes after creating the status icon (which is where i put the event listener)
19:32 <@isaacbw> mikolalysenko: was it worth it?
19:33 < gildean> harbhub: http://nodejs.org/api/http.html#http_http_request_options_callback check the method option
19:34 < harbhub> testing it now gildean, thanks
19:34 < harbhub> will update you
19:35 < mordof> interesting - the statusIcon has a .hide() and a .show() available
19:39 < mordof> tried to pass the statusIcon through on the window - and add an event listener in my javascript file.. but that didn't work either. didn't crash - but not throwing anything
19:52 < neeky> anyone use ssh to tunnel debug port 5858 from a remote server?
19:53 < mscdex> neeky: you can tunnel within node with the ssh2 module :-)
19:54 < neeky> hmm, I'm having trouble figuring out where to run node-inspector, and which ports to tunnel (8080, 5858. etc)
19:54 < neeky> if i start node --debug on my remote server, it's now listening to localhost:5858
19:55 < neeky> so I'm assuming I'd then build an ssh tunnel from my dev machine to remote machine like 5858:remote:5858
19:55 < neeky> and then run node-inpector locally
19:55 < neeky> but I'm getting EADDRESSINUSE
19:56 < mscdex> neeky: are you starting the tunnel before `node --debug` ?
19:56 < neeky> yes
19:57 < mscdex> neeky: i think it should be the other way around...
19:57 < harbhub> got it working gildean
19:57 < harbhub> thanks  :)
19:57 < neeky> i think i see the problem, I have three ssh tunnels in the background
19:57 < harbhub> now i need to learn how to tunnel using net and http modules  :)
19:57 < neeky> there's no graceful way to end a tunne;l
19:57 < mordof> anyone have experience with setting callbacks on the left click for the status icon?
19:59 < mscdex> neeky: also, you might look into using strongloop's updated node-inspector fork if you haven't already: https://github.com/strongloop/node-inspector
20:00 < neeky> mscdex, yeah, that's the one
20:08 < harbhub> gildean got my proxy server working
20:08 < harbhub> nodejs manuals = ohhhhhhhhhhhhhhhhhhhhhhhhhhhh yeah
20:22 < mikolalysenko> isaacbw: so far it has sped up quite a bit
20:22 < mikolalysenko> isaacbw: I managed to get a 10x speed up by changing a >>>0 to a |0
20:22 <@isaacbw> awesome
20:22 <@isaacbw> you should blog about it
20:22 < mikolalysenko> not sure why it made a difference though which bothers me
20:23 <@isaacbw> and do some proper benchmarks
20:23 < mikolalysenko> not yet, I still don't understand what is going on
20:23 < mikolalysenko> also I have a backlog of more interesting things to blog about than tweaking js code
20:24 < mikolalysenko> I'm still not happy with the performance though...
20:24 < mikolalysenko> I may have to implement the run length encoding optimizations in order to get this running as fast I'd like
20:39 < emilsedgh_> i have a test case that rises up mmemory usage on my machine and the memory is never free'd. this code free's up the memory on some other machines (same node version,s different OS). is this a bug in node?
20:40 < emilsedgh_> ab -n 1000 -c 1000 raises memory usage (rss) to ~350M. when ab is finished, 350 never comes down on my machine. the other day someone tested the same thing on a windows machine at it worked fine there
20:42 < nathan7> emilsedgh_: have you tried forcing GC?
20:42 < nathan7> emilsedgh_: run node with --expose_gc, do gc(), see if memory use remains
20:44 < emilsedgh_> (manual gc() calls does not help)
20:45 < emilsedgh_> nathan7: yes, i call gc() on many different ocasions
20:45 < nathan7> emilsedgh_: can I see the test case?
20:45 < emilsedgh_> sure, just a second, pasting it
20:45 < emilsedgh_> https://gist.github.com/emilsedgh/5883067
20:45 < emilsedgh_> actually i have it here
20:46 < emilsedgh_> nathan7: its about issue 5345
20:46 < emilsedgh_> that gist includes heapdumps from my machine as well
20:46 < emilsedgh_> here's the pasted code:
20:47 < emilsedgh_> http://paste.kde.org/786008/
20:47 < emilsedgh_> nathan7: i execute the test with: `ab -n 1000 -c 500 http://127.0.0.1:1337/`
20:48 < mscdex> emilsedgh_: what if you add the --always-compact flag to node?
20:48 < emilsedgh_> let me try mscdex. i didnt know about that flag.
20:50 < emilsedgh_> mscdex: before testing with --always-compact, node stood at ~350M. now its on 318M.
20:51 < emilsedgh_> mscdex: i think the resident memory has not yet been free'd properly
20:51 < Apathetic> hi, what's the difference between fs.link and fs.symlink
20:51 < emilsedgh_> { rss: 339324928, heapTotal: 39673088, heapUsed: 3090736 }
20:52 < Apathetic> hi, what's the difference between fs.link and fs.symlink
20:52 < mscdex> Apathetic: link() creates a hard link
20:54 < mscdex> emilsedgh_: this is unrelated, but the `res.end();` is unnecessary if you're already pipe()ing it
20:55 < emilsedgh_> mscdex: thanks, thats primarily there to make the gc() call. can you try to reproduce the issue?
20:55 < mscdex> emilsedgh_: what size is the file?
20:55 < emilsedgh_> mscdex: what happens when you put it under pressure with ab? will the memory get free'd?
20:56 < emilsedgh_> mscdex: 8.5M
21:05 < neeky> FYI: ssh -f user@remoteserver 5858:localhost:5858, then run node-inspector on your localmachine, and node --debug app on remote
21:05 < neeky> BOOM, remote debugging
21:05 < neeky> node-inspector on localmachine is tunneled to node.js on remote machine
21:05 < hueniverse> you are all beautiful
21:08 < TonkaTruck> I'm looking for a npm package that complements PassportJS with strategies to share and "poach" users.  Repeating a lot of code in my passport strategies and thought this might be useful to others.
21:09 < TonkaTruck> I've looked on npmjs.org and can't seem to find anything.
21:20 < neeky> I'm having a bitch of a time.  I have a REST api that uses sessions, and Am having a hello of a time debugging 
21:21 < neeky> it seems that node/express doesn't send a new session cookie if the first transaction that starts a session is an http POST request
21:22 < neeky> is that an HTTP requirement or a bug on my side?
21:23 < neeky> so, if client has 0 session cookie, and sends HTTP POST to /login with a login json body, I create a session, but DON'T send the session cookie to the client
21:23 < neeky> and I should
21:24 < neeky> BUT if a do an http GET on a protected resource, it fails, because a asssion doesnt exist, and then SENDS a session cookie for the newly created session
21:25 < pinvok3> Hey Guys, I'm a bit stuck right now. How can I iterate through this json array (http://pastebin.com/Gb8DWYDb)  So I get "/" and "/Foo" as a Key and then its values?
21:27 < neeky> well, we're talking two slightly different semantics here
21:27 < neeky> which have keys and values
21:28 < neeky> so /.Controller = "FooControler"
21:28 < pinvok3> Well I come from the PHP fraction who tries to switch to node.js. We used such structure to generete routes. Then we could simple use foreach(Routes as Key => Var)
21:28 < neeky> and /Foo.Controller = FooController
21:29 < neeky> its object dot notation in javascript
21:29 < drudge> pinvok3: is there a reason you are using separate objects for each route?
21:30 < neeky> so in the parent object, you can do a for each, looping throgh each object in the array
21:30 < neeky> from an "OO" POV, that's a bit hoky in the way you are using the structures
21:30 < pinvok3> drudge: No not really. I just wrote it how Id understand such structure :P
21:31 < pinvok3> neeky: What would you suggest to create such structure how I intend it to do?
21:31 < neeky> how about [ {route:"/", controller:"foocontroller",action:"DisplayFoo"},...]
21:31 < pinvok3> I just want to store all routes in one big array
21:32 < neeky> so an array of routes
21:32 < neeky> is a flat object with three k/v\
21:32 < neeky> k/v
21:32 < drudge> pinvok3: i was thinking like http://pastebin.com/i1u3j6i2
21:33 < neeky> drudge, I think an array is proper\
21:33 < neeky> since the routes are not 'fixed'
21:34 < neeky> Like: http://pastebin.com/D0L3qVag
21:34 < neeky> now a for each is a simple affair across each "route object"
21:35 < neeky> so the parent looks like:
21:35 < neeky> routes: {[{route:...},{route:...}]}
21:35 < neeky> so "for each route in routes" makes sense
21:35 < pinvok3> Yeah. That's good ways to do it. Thanks guys :)
21:37 < neeky> so now, the routes object has a length property, and you can easily iterate it
21:46 < TonkaTruck> neeky: My favorite login endpoint is POST /users/sessions - points your brain in the right path, too.
21:47 < TonkaTruck> github user madhums has a nice example using passport with the Local user strategy, too.
22:04 < Kakera> https://github.com/dcodeIO/ProtoBuf.js
22:04 < Kakera> project started on March 1
22:04 < Kakera> me likes
22:23 < lrparker81_> testing
22:28 < pinvok3> Wow It's amazing how awesome node.js is. How could I even use this PHP shit
22:28 <@isaacbw> good question
22:33 < mbaxa> can anyone help me with a hubot npm problem?
22:39 < mbaxa> lot of idling people in here
22:40 <@isaacbw> just ask your question
22:40 < Kakera> I think I just beat my record for the time it took from installing the module for the first time to submitting an issue
22:40 <@isaacbw> irc 101: don't ask to ask
22:40 < jesusabdullah> mbaxa: what'sthe promblem?
22:40 < mbaxa> installed with npm install -g redis
22:40 < mbaxa> script in hubot requires redis
22:40 < mbaxa> still fails
22:40 < mbaxa> Error: Cannot find module 'redis'
22:40 < jesusabdullah> mbaxa: rule 2: only -g if you want a cli tool
22:40 <@isaacbw> don't install modules globally
22:41 <@isaacbw> this ain't ruby
22:41 < jesusabdullah> mbaxa: changes are what you want to do is, cd ./my-hubot and then run npm install to install all hubot's deps, then if you're modifying your hubot run npm install --save redis
22:41 < jesusabdullah> mbaxa: the --save adds the dep to the package.json it is handy
22:41 < mbaxa> I already tried modiying the dependency in package.json, and still got the error
22:41 < jesusabdullah> because you're -g-ing
22:41 < jesusabdullah> no -g
22:41 < jesusabdullah> pretend the g on your keyboard is broken
22:41 < mbaxa> no, before I did the -g, it didn't work
22:42 < jesusabdullah> https://gist.github.com
22:42 <@isaacbw> then share your package.json
22:42 < jesusabdullah> get to showing us
22:42 < jesusabdullah> mbaxa: show us the package.json, the output from npm install and the runtime error
22:42 <@isaacbw> or, if you close your eyes and open your mind I might be able to read your thoughts from here. Are you on the east coast?
22:45 < Kakera> and the module's author beat the response time record
22:48 < AAA_awright> It'd be really nice if V8 could print the last x elements in the stack if the call stack is exceeded...
22:56 < timoxley> hrm, so all that yield/generators niceness seems to have disappeared between node 0.11.2 and 0.11.3 
22:57 < threecreepio> nah, just isn't activated with --harmony anymore.. needs --harmony-generators
22:59 < timoxley> threecreepio sure? I've tried that
23:00 < threecreepio> hm, just tried here without a problem anyway..
23:00 < timoxley> threecreepio ahh yes, thanks, there's some other change that made things break
23:00 < threecreepio> kew :)
23:01 < timoxley> threecreepio apparently "TypeError: Object #<GeneratorFunctionPrototype> has no method 'send'"
23:01 < threecreepio> mm send is removed, use next instead
23:01 < timoxley> threecreepio is there a good place to monitor these changes?
23:02 <@konobi> any i18n minded folks around?
23:02 <@konobi> or just plain old good api nerds?
23:02 < threecreepio> timoxley: i don't know really.. i'm particularly interested in generators, so i've just kept up on the v8 issue for them
23:02 < nathan7> threecreepio: o.o
23:02 < timoxley> ahh
23:02 < timoxley> threecreepio link plz
23:02 < nathan7> I wish the ES6 wiki would be somewhat up to date
23:03 < threecreepio> https://code.google.com/p/v8/issues/detail?id=2355
23:03 < nathan7> It still has StopIteration and such in there
23:04 < threecreepio> aye
23:31 <@konobi> anyone up for a node-ification challenge?
23:34 < taternuts> first timer question here - I'm trying to deploy an app on my server, and I have a ~/public_html/ folder that is the parent publicly available folder. Does this mean that I can run the app in any folder, and assume the my 'app.get('/test', function(){});' would correspond to /public_html/test ? Do I have to do 'app.get('../test');' or make it correspond to the folder structure?
23:35 < taternuts> my irc has been acting up so if I already asked this my bad
23:35 <@konobi> taternuts: depends on how you're running the server
23:36 < taternuts> konobi: It's my seedbox, so I don't really have elevated privs - but they do allow node to run
23:37 < taternuts> konobi: and provide the www/public_html/ folder to serve it up
23:37 <@konobi> well node apps won't run unless you can run the node process
23:37 < taternuts> they allow that, I'm really more hung up on the folder structure and where to listen
23:37 <@konobi> if it's specific to their service, you'll need to ask them... as it would be some custom software they're using
23:38 < taternuts> "Once you have done this, you are ready to start writing and running your node.js apps from anywhere in your account. I personally put all my apps in ~/private/node/apps/ to keep things tidy though :-)"
23:38 <@konobi> taternuts: it runs from wherever your application runs from
23:38 < taternuts> so it _should_ default to w/e app node is running and default to the /public_html/ dir?
23:40 <@konobi> taternuts: also depends on how you run the app
23:40 < taternuts> damn brb need to take the dog out
23:40 <@konobi> node foo.js is different from (cd public/foo/bar/; node thing.js)
23:41 <@konobi> best dump the __dirname or cwd from within node to work out where it thinks it is
23:42  * mscdex does the new module dance
23:44 <@konobi> mscdex: new challenge!
23:44 <@konobi> =0P
23:44 < mscdex> eh?
23:44 <@konobi> mscdex: https://code.google.com/p/maketext-js/
23:45 < mscdex> i don't care much about localization ;-)
23:45 <@konobi> heh... it's kind of interesting in terms of node vs browser and things like generating code
23:48 < mscdex> base91 for everyone!
23:49 <@konobi> heh
23:49 < Beg> Javascript is so nice.
23:50 < Beg> Does anyone know what text format solution github is using for the readme files?
23:51 < taternuts> konobi: good point I'll see where it thinks the cwd is
23:54 < Beg> and thanks isaacbw for recommending meteor, I love it!
23:54 < mscdex> Beg: markdown
23:54 < Beg> mscdex-> thanks
23:54 < mscdex> Beg: i think they support other formats too though
23:54 <@konobi> github-flavoured-markdown
23:55 < mscdex> ^
23:59 < AAA_awright> What flag do I use to install the Node.js headers?
--- Log closed Mon Jul 01 00:00:01 2013
