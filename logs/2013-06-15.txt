--- Log opened Sat Jun 15 00:00:29 2013
00:17 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
00:24 < ericelliott_> I'm getting this when I run my test suite on Node v0.11.2 - npm ERR! weird error 143
00:24 < ericelliott_> using $ npm test
00:25 < ericelliott_> Any idea what that means?
00:25 < ericelliott_> using tape (substack)
00:47 < vemacs> gj freenode
00:48 < Kessler> does an implementor of a Transform stream need to concern himself with propagation of back-pressure?
00:51 <@mbalho> generally, but it depends on the use case
00:53 -!- mode/#Node.js [+o TooTallNate] by ChanServ
00:55 <@mbalho> Kessler: oh i get your question, specifically with Transform i'm not sure if you're allowed to control when .write returns false
00:55 < Kessler> so Transform breaks back-pressure ?
00:56 < Kessler> or I simply have no control over it?
00:56 <@tjfontaine> I wouldn't say it breaks back pressure, just that it's controlled by a writable
00:56 <@mbalho> Kessler: my guess is if you have a use case where back pressure is important you can just roll your own through stream
00:57 < Kessler> lets say I want a throttler - do you think a Transform stream would be a good choice?
00:57 < Kessler> I mean implementing one
00:57 < Kessler> based on what you said I'm not sure its possible
00:57 < Kessler> though theoretically I can override the _read and _write 
00:57 <@tjfontaine> you could do it, you just don't push until you hit your water mark
00:58 < Kessler> ah
00:58 <@tjfontaine> or some timer
00:58 < Kessler> thanks! :)
00:58 <@TooTallNate> Kessler: there's also https://github.com/TooTallNate/node-throttle
00:58 <@TooTallNate> which happens to be implemented on top of a Transform stream ;)
00:59 <@tjfontaine> heh
00:59 < Kessler> nice! guess I can use it as a base for throttling something other than bytes too :)
01:00 < piklu> Hi guys
01:00 < Kessler> basically I have this slicer thing: https://github.com/yanush/stream-slicer and I want to pipe it to a throttler
01:00 < piklu> why zeromq is needed when node can do most of things
01:00 < Kessler> so I'll get a line stream with throttling for example
01:01 < Kessler> piklu: it makes an easy life creating complex graphs of processes talking to each other
01:01 < piklu> Kessler : I need some advice, can i talk in private?
01:02 < Kessler> of course but: 1. maybe someone else could enjoy this advice and 2. I'm not sure I'm the right person to give you advice :) other than that you are welcome to continue this conversation here or in private
01:33 < Kessler> any hints on how to debug: Error: write ENOTSUP - cannot write to IPC channel. when the stacktrace is purely child process code?
01:35 < piklu> is 6 ms a good latency for hosting a redis server from a node application
01:36 < Aria> What do you mean by 'for hosting'?
01:36 < Aria> That's a little high for local network access over gigabit ethernet.
01:38 < piklu> It is for providing a service like redis2go
01:38 < piklu> that is from nodejitsu
01:41 < kondi> What'd be the optimal pool size for mongodb? The app receives monthly 50-60k visits (and 100-500 at any given time)
01:42 < piklu> kondi : where are u hosting it ?
01:42 < kondi> piklu: Amazon ec2, (micro instance :\ )
01:43 < piklu> okay
01:43 < kondi> help anyone?
01:53 < piklu> How many people are using level db as their choice of data storage?
02:04 < bthesorceror> I have a quick question about socket.io if anyone has a second, if it falls back to polling is state kept between polls? for example does it keep track of the rooms joined?
02:17 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:49 < Sly> xyxne: PING BIZATCH
02:50 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:52 < niggler> anyone here familiar with the REPL?
02:52 <@xyxne> Sly, ahem
02:53 < Sly> <3
02:53 <@xyxne> <3
02:53 < Sly> I knew you would come back for me!
02:53 < Sly> :3
02:53 <@xyxne> lol
02:54 <@xyxne> USE LARGE MODULES AND A HORSE WILL BITE YOUR ARM
02:55 < niggler> >> JSON.parse("{3:4}")
02:55 < purr> niggler: SyntaxError: Unexpected number
02:55 < plops> hello??
02:55 < niggler> >>> JSON.parse("{3:4}")
02:55 < purr> niggler: SyntaxError: Unexpected number
02:55 < niggler> ok hmm
02:56 < plops> yeah is a error, becose de key is a string
02:56 < niggler> no thats not the issue plops
02:56 < niggler> try that in the REPL
02:56 < plops> >>> JSON.parse("{'3':4}") 
02:56 < purr> plops: SyntaxError: Unexpected token '
02:56 < niggler> in node plops 
02:57 < plops> mmm its a bug
02:59 < niggler> my favorite is
02:59 < niggler> JSON.parse("{\"3:4}")
03:00 < niggler> >> JSON.parse("{\"3:4}")
03:00 < purr> niggler: SyntaxError: Unexpected number
03:00 < niggler> node: SyntaxError: Unexpected end of input
03:00 < plops> > JSON.parse("{\"3\":4}"); // is run!!
03:01 < niggler> that's valid JSON plops
03:01 < niggler> actually its probably evaluating and failing
03:04 < plops> nigger Array(16).join("lol" - 2) + " Batman!";
03:06 < niggler> lol plops 
03:07 < echo|> Someone forgot an l
03:07 < niggler> lesson is to use tab completion echo| 
03:07 < niggler> most IRC clients have it
03:25  * sinclair|net is back to complain some more about nodejs
03:25 < sinclair|net> rah rah rah
03:27 < sinclair|net> well, nodes actually been kinder than usual of late
03:27 < sinclair|net> i think im adjusting to nodes level of insanity
03:29 < olalonde> anyone understands mocha?
03:29 < olalonde> im getting some weird side effects when executing all the files all at once
03:30 < substack> nobody understands mocha
03:31 < sinclair|net> substack: get hassled by microsoft much?
03:31 < sinclair|net> substack: i see some of the azure developers are up and rolling with your tech mate
03:32 < sinclair|net> specifically dnode
03:33 < substack> that module is pretty much done
03:33 < substack> it just does its one thing and doesn't do other things
03:34 < sinclair|net> substack: was watching a channel 9 thing on the Azure Service Bus, they are using dnode for stuff there
03:47 < randomlurker> hey there, is there anything wrong with this snippet ? https://dpaste.de/jvgE4/
03:47 < randomlurker> !help
03:48 < jesusabdullah> randomlurker: you tell me. Does it run? Does it do what you want it to do?
03:49 <@tjfontaine> is this a trick question?
03:49 < jesusabdullah> randomlurker: https://dpaste.de/jvgE4/#L8,10 You're not handling any of these errors homes
03:49 < jesusabdullah> randomlurker: rather, lines 8 and 9
03:50  * randomlurker looks
03:50 <@tjfontaine> I can be picky too, Db is not defined, and you never call postIt :P
03:50 < jesusabdullah> randomlurker: https://dpaste.de/xmxV9/#L9,11
03:50 < randomlurker> I forgot to include that require part in the paste
03:50 < jesusabdullah> tjfontaine: I assumed Db was defined outside the snippet but in the "real" document
03:51 < jesusabdullah> tjfontaine: and that postIt was called elsewhere
03:51 <@tjfontaine> jesusabdullah: I've stopped making assumptions for people, that's how things go wrong
03:51 < randomlurker> jesusabdullah: ah, okay apart that err handling. Thanks :)
03:51 < randomlurker> err
03:52 < randomlurker> I meant, apart from that err handling thing is there anything else that I should look into?
03:52 <@tjfontaine> the point randomlurker is we dont' have enough context to understand what you're asking
03:53 < jesusabdullah> randomlurker: until something explodes or demonstratably doesn't do what you want, we can't help you
03:53 <@tjfontaine> if this happens on every post of a webpage it frustrates me that you're constantly re-connecting to the db
03:53 < jesusabdullah> tjfontaine: whateva I do wha I wan!
03:53 < jesusabdullah> tjfontaine: I'm so outta control I re-connect to the db on every request! Whatever!
03:53 <@tjfontaine> jesusabdullah: the db uses connect pooling, what can go wrong
03:54 < randomlurker> jesusabdullah, tjfontaine I guess I will come back after some more work and more specific context.
03:54 < jesusabdullah> tjfontaine: nothing important I'm sure ;)
03:54 < randomlurker> Thanks for the help though :)
03:55 < jesusabdullah> WE DO WHAT WE CAN
03:57 < jesusabdullah> uugh I'm coded out for the night I think
03:57 < jesusabdullah> any suggestions for fun things I can do for a Friday night? :) :)
03:58 < jesusabdullah> (yes I know, OT)
03:58 < jesusabdullah> (but you guys know what's good, you use node after all)
03:58 < jesusabdullah> (don't answer booze, I'm poor and need to save up money until I get a payday
03:58 <@tjfontaine> hook on the corner then you'll have money for booze
03:59 < jesusabdullah> meh
04:01 <@mbalho> O_O
04:05 < jesusabdullah> maybe mbalho has better ideas
04:05 < jesusabdullah> I'd read this research paper but, again, frazzled brain
04:14 <@mbalho> jesusabdullah: help me work on the voxel.js multiplayer server
04:16 < jesusabdullah> mbalho: the problem is I'm too fried to code :(
04:16 < jesusabdullah> mbalho: I still have browserify-cdn to whip into shape, and some godot-related stuff I wanna hack on
04:17 <@mbalho> word
04:17 < jesusabdullah> I'd play voxel.js MP though
04:18 < jesusabdullah> bet it's both cheaper and less prone to breakage (at least, in the ways that matter) than minecraft
04:18 < jesusabdullah> (when it's done)
04:25 < jesusabdullah> jlord: twitter now tells you if someone retweets your retweet
04:50 < s5fs> jesusabdullah: take a long bath or something, that's not pathetic on a friday night or anything
04:50 < s5fs> neither is replying to someone on irc 30+min after they write something
04:58 < jesusabdullah> s5fs: haha
04:58 < jesusabdullah> I actually got sucked into trying to get engine.io and nginx to play nice
04:58 < jesusabdullah> has anyone tried doing this? The newer versions supposedly support websockets
04:59 < s5fs> jesusabdullah: no, but it sounds like a fun project, you should make a little blog post about it
05:00 < s5fs> i read your case for a node framework post and while i think big is interesting, i'm still not a framework guy. i want to like it though, haha!
05:01 < s5fs> but then again i am in portland, we churn our own butter and roast our own coffee and shit, so maybe i just have an advanced case of 'not invented here' disease
05:03 < josephg> Eh - I just use node-browserchannel
05:03 < josephg> which only does short & long polling, but it works great through varnish (I've got a cluster working with sticky sessions)
05:03 < josephg> (although I guess I did write it, so ... :) )
05:05 <@mbalho> josephg: does browserchannel do binary?
05:06 < jesusabdullah> Yeah, but I have an app that uses engine.io and I don't want to refactor it to use something else
05:06 <@mbalho> josephg: also can you use browserchannel as a websocket polyfill?
05:11 < jesusabdullah> POLL TIME: Is 0.10 prod-ready yet?
05:12 < jesusabdullah> two months ago signs pointed to, "if you like bleeding edge and don't mind minor breakage, sure"
05:12 < piklu> jesusabdullah: how are you ?
05:12 < jesusabdullah> I'm like 90% sure that the substackstack generally runs on 0.10 but that the nodejitsu stack still has promblems
05:12 <@tjfontaine> lets hope everyone isn't waiting on such polls to sway them
05:12 < jesusabdullah> piklu: alright!
05:13 < s5fs> piklu: we're all 13yrs old
05:13 < s5fs> piklu: a/s/l
05:13 < s5fs> ????
05:13 < piklu> what the fuck
05:13 < s5fs> hahaha!
05:13 < piklu> lol
05:13 < jesusabdullah> y'know
05:13 <@tjfontaine> 17/f/brazil tyvm
05:13 < piklu> metasploit
05:13 < piklu> :)
05:13 < jesusabdullah> I should just start upgrading my shit and roll back if it breaks
05:13 < jesusabdullah> I started nave-ing 0.10 not too long ago, seemed reasonable enough
05:14 < ningu> nave-ing?
05:14 < jesusabdullah> tjfontaine: I think the only thing making me hesitant is that nodejitsu still doesn't offer 0.10
05:14 < piklu> btw - those using NGINX - beware, exploits are running wild
05:14 < jesusabdullah> ningu: yeah, it's one of those version manager things
05:14 < jesusabdullah> piklu: tell me more? I'm using nginx
05:14 < ningu> piklu: ?
05:14 < Havvy> piklu: Links or quit spreading FUD
05:14 < jesusabdullah> piklu: IN FACT I was just asking about using socket.io with it, since newer versions claim to have websocket support
05:14 < ningu> jesusabdullah: IN FACT newer versions DO!
05:14 < jesusabdullah> piklu: secretly I'm with Havvy, I expect you to have backup
05:14 < piklu> just a moment
05:15 < jesusabdullah> ningu: yes! but I'm still having promblems getting my engine.io app working
05:15 < jesusabdullah> ningu: looking for someone who has gotten either working successfully
05:15 < Havvy> ningu: The websocket support is in the latest stable of nginx now.
05:16 < ningu> jesusabdullah: ah, I haven't tried yet
05:16 < ningu> Havvy: I know
05:16 < Havvy> So less 'newer versions do' and more 'yes'
05:16 < piklu> Also a php my admin was found 2 weeks ago
05:17 < ningu> Havvy: it's still a newer version :) but yeah, 1.4.x
05:17 < piklu> http://packetstormsecurity.com/files/121712/Nginx-HTTP-Server-1.3.9-1.4.0-Chunked-Encoding-Stack-Buffer-Overflow.html
05:17 < jesusabdullah> Havvy: except all my googling turns up old-ass tcp hacks and my config is still being a hater
05:18 <@tjfontaine> oh may 23
05:18 <@tjfontaine> man
05:18 < Havvy> http://nginx.org/en/docs/http/websocket.html
05:20 < piklu> Yeah, but thats just one, thats public and may 23 was 20 days back
05:21 <@tjfontaine> piklu: you're sayign there's an unreleased on?
05:21 <@tjfontaine> *one
05:21 < piklu> yup
05:21 < ningu> an nginx-ploit?
05:21 < piklu> well, are u familiar with that one 
05:21 < piklu> ?
05:21 <@tjfontaine> I'm familiar with that one
05:22 < piklu> since, I expect a lot of servers still arent updated
05:22 < ningu> piklu: it says 1.3.9-1.4.0 though
05:22 < ningu> doesn't say whether 1.2.x
05:22 < piklu> yes. 
05:22 < piklu> and you guys familiar with the phpMyAdmin one as well ?
05:22 < ningu> I heard of that one I think
05:23 <@tjfontaine> people who use phpmyadmin get what they deserve
05:23 < s5fs> tjfontaine: whatever, it's still the best ad-hoc reporting tool for drupal available today
05:24 < piklu> I said it because its very common to have LAMP setups for websites
05:24 < piklu> s5fs : lol
05:24 <@tjfontaine> s5fs: the people who will be hit by this are people running it on public ips without any security, but everything else you said is meh
05:25 <@tjfontaine> the history of phpmyadmin and security is not one that instills much confidence
05:25 < s5fs> i don't use it, can't really comment.
05:25 < piklu> everything is on public IP…..nginx is pretty hitable
05:25 <@tjfontaine> piklu: I'm still waiting on this unreleased one, so far you're just coming up with known or duh ones
05:25 < piklu> If u see there have been 4 exploits for nginx in past 2 months :)
05:26 < piklu> tjfontaine: no thanks. I am not doing it
05:31 < ningu> piklu: because the team is working on a fix, or what?
05:31 < piklu> No idea abt that.
05:31 < ningu> well at the least you should tell them
05:32 < piklu> tell abt 0 days ?????
05:32 < piklu> who does it
05:32 < ningu> what?
05:32 <@tjfontaine> logs or it didn't happen.
05:32 < piklu> leave
05:32 < piklu> any one using level db ?
05:32 < ningu> I don't care how new or old it is, if it's an unknown exploit that you know about, the responsible thing to do is tell the core team.
05:33 < piklu> ningu - I appreciate it. That is the right thing to do
05:33 -!- mode/#Node.js [+o TooTallNate] by ChanServ
05:37 < piklu> Any one likes or uses level DB ?
05:37 < ningu> I'm sure someone both likes it and uses it
05:38 < piklu> What is the latest trend in no sql?
05:38 < ningu> piklu: can't publicize that, sorry :P
05:38 < piklu> :)
05:38 < piklu> its ok
05:39 < ningu> there was a leveldb podcast
05:39 < ningu> nodeup.com
05:46 < paulkon> 918 people idling on a friday night @ 12:45AM
05:46 < Zolmeister> anyone got a pastebin for js handy?
05:46 < paulkon> #node.js
05:48 < s5fs> Zolmeister: like jsbin.com or jsfiddle.net?
05:51 < Zolmeister> s5fs: yeah, I went with hastebin
05:52 < piklu> 921 now
05:52 < s5fs> our ranks swell
05:56 < jesusabdullah> Yo dudes, I'm looking for a basic websockets demo I can show off, now that guillermo helped me get nginx + engine.io working
05:57 < jesusabdullah> I wanna use nodejitsu's ws-ping but it's not open source (even though imo it totally should be)
05:57 < jesusabdullah> anyways: Any ideas? You guys know of some good single-page demos?
05:57 < s5fs> jesusabdullah: sorry i only have socket.io examples
05:58 < jesusabdullah> s5fs: works for me, demos the same thing
05:58 < jesusabdullah> s5fs: it's new-ish socket.io? uses engine.io underneath?
05:58 < Havvy> jesusabdullah: etherpad uses websockets.
05:58 < Zolmeister> http://zoggle.zolmeister.com/
05:58 < jesusabdullah> Havvy: hostable on my own server?
05:58 < h22> Guys, I shouldn't be require( )-ing inside event callbacks.. Right? 
05:58 < jesusabdullah> Zolmeister: is that open source?
05:58 < Havvy> I'm hosting an etherpad on an ec2 instance.
05:58 < Zolmeister> real time massive multiplayer boggle game
05:59 < ningu> jesusabdullah: could use https://github.com/substack/lxjs-stream-examples
05:59 < h22> because I'm guessing require() isn't async call
05:59 < Zolmeister> jesusabdullah: I think so
05:59 < jesusabdullah> ningu: naw, I wanna use socket.io, I'm pretty sure that all uses shoe
05:59 < ningu> h22: it's totally fine to do that
05:59 < Havvy> h22: require() is cached if its given the same string multiple times.
05:59 < jesusabdullah> Zolmeister: isn't that your app? XD
05:59 < Havvy> But yeah, it is a synchronous function.
05:59 < Zolmeister> jesusabdullah: yeah, it actually isn't
05:59 < ningu> h22: require() is sync but you can make sync calls from within callbacks
06:00 < Zolmeister> jesusabdullah: if you want to use it, ill go a head and post it though
06:01 < jesusabdullah> Zolmeister: does it use socket.io > 0.9 ?
06:02 < jesusabdullah> Zolmeister: one sec, checking out this etherpad thing, it might be just the thing
06:04 < jesusabdullah> hmmm
06:04 < jesusabdullah> wish I knew what kind of db this guy was using but
06:04 < jesusabdullah> all good I guess
06:06 < h22> ningu: Is it better to require() all the files at the top? as they'll all be require()'d anyway...?
06:06 < ningu> h22: usually yes
06:06 < ningu> h22: it's cleaner and easier to read that way
06:06 < ningu> but it will work fine regardless
06:08 < jesusabdullah> hmmm
06:09 < jesusabdullah> etherpad should, uhh
06:09 < jesusabdullah> should use leveldb instead of dirtydb by default
06:09 < jesusabdullah> then it would be okay to use stock settings in prod (probably)
06:09 < ningu> or crookeddb or cleandb
06:10 < Havvy> I'm just using mysql personally.
06:16 < jesusabdullah> http://etherpad.jesusabdullah.net/ aww yeah
06:16 < jesusabdullah> Havvy: Yeah, I don't have mysql set up (yet)
06:17 < Havvy> Any pads you are in?
06:17 < jesusabdullah> http://etherpad.jesusabdullah.net/p/this-is-the-remix
06:17 < jesusabdullah> gonna link to this one
06:20 < piklu> http://www.youtube.com/watch?feature=player_embedded&v=RQuc8vnpI9Y
06:20 < piklu> check this out !!!
06:22 < piklu> If thats true…….??? Facebook vuln
06:25 < piklu> jesusabdullah: see that
06:26 < jesusabdullah> WHY DOES THIS SAY POOP
06:26 < jesusabdullah> pikluuuuuuuu
06:30 < sinclair|net> does anyone want to see what i have been working on
06:37 < jesusabdullah> sinclair|net: just link it
06:37 < sinclair|net> jesusabdullah: no, i don't think i will
06:38 < jesusabdullah> do it
06:38 < jesusabdullah> wooowowoooooo
06:38 < jesusabdullah> DO IT
06:39 < jesusabdullah> https://www.youtube.com/watch?v=wj23_nDFSfE
06:39 < jesusabdullah> wooowowoooooo
06:39 < jesusabdullah> DO IT
06:40 < sinclair|net> jesusabdullah: sure those chicks look ace in that video, but the reality of things is that they would all be in their 60's now
06:40 < jesusabdullah> sinclair|net: but I want to see what you've been working on :(
06:41 < sinclair|net> jesusabdullah: maybe i will when its a bit more done, im at about 5%
06:41 < jesusabdullah> so why did you ask if I wanted to see it :(
06:41 < jesusabdullah> I show people my broken shit all the time
06:42 < sinclair|net> jesusabdullah: my work isn't broken
06:42 < jesusabdullah> sinclair|net: all the better to show us then!
06:43 < ningu> sinclair|net: put up a giant progress bar on your site so we can all anticipate it
06:43 < jesusabdullah> and an "under construction" gif
06:43 < sinclair|net> ningu: i have something better
06:43 < jesusabdullah> https://www.youtube.com/watch?NR=1&feature=endscreen&v=yG0oBPtyNb0 this guy's sideburns are bigger than my head
06:44 < sinclair|net> ningu: http://sinclair.azurewebsites.net/lasercat
06:44 < ningu> why are they called side *burns* anyway?
06:44 < jesusabdullah> because the guy that invented them was named general burnsides
06:44 < jesusabdullah> I should grow mine like that
06:44 < ningu> cat                = new panda.Texture("images/cat.png");
06:45 < sinclair|net> ningu: ?
06:45 < ningu> sinclair|net: part of the code
06:45 < sinclair|net> ningu: well, i wrote the thing in ts, you are just looking at the js bits
06:45  * sinclair|net notes, this isn't what he was working on
06:46 < ningu> somehow I doubt that line is very different
06:46 < sinclair|net> ningu: which line
06:46 < sinclair|net> ?
06:46 < ningu> the one I pasted
06:46 < sinclair|net> ningu: this isn't written in TS http://sinclair-zx81.appspot.com/
06:48 < ningu> cool
06:48 < ningu> I've never done any graphics stuff to speak of
06:48 < sinclair|net> ningu: you are welcome to the source
06:49 < sinclair|net> ningu: that isn't what i am working on either
06:49 < sinclair|net> in fact, what i am working on has nothing to do with graphics, and more to do with compilers
06:50 < sinclair|net> ningu: you know, maybe i should put that panda think under version control
06:50 < sinclair|net> ningu: i think i have lost the original source, but it was a pretty good 2d retained mode canvas renderer
06:53 < ningu> it isn't much code, should be easy to recreate
06:55 < sinclair|net> ningu: its a matter if being bothered to do that
06:56 < sinclair|net> ningu: tho, i am likely going to need a pretty good 2d vector graphics library eventually
06:56 < ningu> when I was 14 I wrote a clone of QuickDraw on the mac that I called QuackDraw
06:57 < jesusabdullah> haha nice name ningu 
07:28 < randomlurker> I need a little bit of help with https://dpaste.de/9bE9D/
07:28 < ningu> om nom nom http://bit.ly/12w3kpT
07:29 < ningu> randomlurker: ignore my link, it will only distract you :) what's not working?
07:29 < randomlurker> When I run it via shell everything works fine except that after everything is run I have to press return one time to get to new line
07:29 < randomlurker> this seems weird to me
07:30 < ningu> huh? press return to do what?
07:30 < randomlurker> to well enter the next code
07:31 < randomlurker> ningu: am I closing the connection correctly ?
07:31 < ningu> you mean to get a shell prompt?
07:31 < randomlurker> yes
07:31 < randomlurker> exactly
07:32 < ningu> looks ok to me
07:33 < ningu> oh, wait
07:33 < ningu> you have two db variables
07:33 < ningu> you might have to db.close() on the outer one, but it's being shadowed
07:34  * randomlurker looks
07:34 < ningu> change   db.open(function(err, db) { to   db.open(function(err, conn) { or something and then still do db.close()
07:35 < randomlurker> ningu: trying (err, conn) now
07:36 < bitRippe1X> what's the best way to monitor a FIFO pipe in linux? I want my node app to monitor the pipe and do something anything it's updated. 
07:37 < randomlurker> ningu: I tried what you suggested, same result
07:40  * randomlurker is totally confused right now
07:40 < randomlurker> I have db.close() in the db.collection('that', function(err, collection) {...  block. Shouldn't it work?
07:43 < ningu> randomlurker: yes, it looks to me like it should
07:44 < ningu> randomlurker: just a crazy idea, try var db instead of db in line 10
07:44  * randomlurker tries
07:45 < ningu> but if that fixes it I will eat my hat... still it's the one anomalous thing I could find
07:46 < randomlurker> I guess you won't have to eat that hat
07:47 < ningu> ok well I think you definitely want to do close() on the object passed to the callback of .open()
07:47 < ningu> i.e. your original innermost db
07:47 < ningu> but I still don't see why it isn't working
07:48 < randomlurker> ningu: trying
07:48 < ningu> oh, actually it looks like it's the same object
07:48 < ningu> I mean internally
07:49 < ningu> randomlurker: that will just be the same as your original code so it won't hel
07:49 < ningu> p
07:49 < ningu> I'm just saying, my original suggestion was wrong
07:49 < randomlurker> yeah I got that
07:50 < randomlurker> ningu: one more thing. I'm expecting 200 concurrent users, do I need anything special for that?
07:50 < ningu> I don't think so
07:51 < ningu> you can always replicate servers or use cluster if you have multiple cores
07:51 < ningu> but it would be the same app
07:51 < ningu> try it first though, obviously
07:51 < randomlurker> ningu: yes. Thanks for the help :)
07:52 < ningu> I don't know what mongo's limits are for concurrency
07:52 < ningu> adjust the pool size if necessary, etc.
07:52 < randomlurker> Ah okay. I think I'll have to come back for the connection closing thingy. Get others' opinion 
07:52 < ningu> yeah I dunno what's going on there
07:53 < ningu> randomlurker: however, you can reuse the db object and just call open again and it will close the previous one
07:53 < ningu> oh, wait
07:53 < ningu> nevermind
07:54 < ningu> randomlurker: close() takes a callback as its second argument, perhaps there is an error being returned
07:59 < randomlurker> ningu: ah okay. i'll ses
08:02 < ningu> randomlurker: first argument appears to be ignored
08:02 < ningu> oddly
08:03 < ningu> you may need to do *both* db.close() and conn.close()
08:05 < bitRippe1X> what's the best way to read a fifo in nodejs and not have it close after I read from the fifo?
08:07 < Industrial> Anyone got mocha tests working with node-inspector? if I start debugging I start out with the mocha commandline program but can't seem to find my test file being loaded
08:11 < randomlurker> ningu: be right back in 15 minutes
08:23 < randomlurker> ningu: db.close(true, function(err, result) { if (err) { console.log(result); } });
08:23 < randomlurker> how does this look?
08:23 < ningu> console.log(err)
08:24 < ningu> else console.log('it worked') or whatever
08:24 < ningu> there is no result, afaik
08:28 < randomlurker> ah yes,  I read it but 
08:37 < randomlurker> ningu: https://dpaste.de/2MBGV/
08:37 < randomlurker> please have a look
08:38 < ningu> ok
08:38 < ningu> and what happens?
08:39 < randomlurker>  I get the 'done it done it done it' part
08:39 < randomlurker> oops
08:40 < randomlurker> I get 'Success, exiting now'
08:40 < ningu> dunno
08:40 < ningu> my only remaining suggestion is to close both the connector and the connection objects
08:41 < randomlurker> ningu: okay :D Thanks for all the help. 
08:52 < brainproxy> getting a lot of mileage out of http-server module, but is there someway or some similar cli "quick server" utility that will watch the fs and cause the browser to refresh automaticall?
09:23 < ezkl> substack: This is awesome -> https://github.com/substack/seqsolve
09:31 < standoo> hello world
09:34 < Lone_Rifle_> I have a friend who is tired of Wordpress as a CMS and is seeking alternatives. In proposing an alternative I'm trying to favour solutions based on node.js, but the best amongst them appears to be Calipso, whose founder has moved on to other things and whose maintenance seems occasional, at best
09:36 < Lone_Rifle_> how much interest has there been in node.js-based CMSes? are they known deployments of such things of significant scale, and known products with significant active communities?
09:37 < brainproxy> Lone_Rifle_: may want to also post in the nodejs google group
09:37 < brainproxy> I know some SailsJS enthusiasts who are hopeful it will be the stepping stone to a CMS
09:38 < brainproxy> but we'll see
09:41 < ezkl> Lone_Rifle_: What about WordPress is he tired of?
09:43 < standoo> Lone_Rifle_: your friend is you?
09:43 < Lone_Rifle_> ezkl: he didn't go into specifics, but given his intellect and general aversion to rigidity, I would assume he is sane and has his reasons
09:44 < Lone_Rifle_> standoo: no, he is a former secondary school teacher of mine.
09:46 < substack> ezkl: there are much better algorithms I could be using though
09:46 < substack> the stuff in the A=B link has all of them
09:51 < ezkl> substack: Right on. I missed the link to that paper the first time.
09:54 < substack> the forward is by knuth, which I only noticed after I had read it
09:56 < ezkl> "Science is what we understand well enough to explain to a computer. Art is everything else we do."
09:57 < Lone_Rifle_> i've just picked up on Apostrophe 2 from your google groups. Thanks!
09:59 < jesusabdullah> justicefries: Why are you up at 3:00am? XD
09:59 < jesusabdullah> justicefries: also yes I know there's more to pancake mix than flour XD
10:03 < nathan7> Hey jesusabdullah 
10:06 < jesusabdullah> sup nathan7 
10:07 < nathan7> jesusabdullah: Trying to plot things in Julia
10:07 < jesusabdullah> I bet that's a clusterfuck
10:07 < nathan7> jesusabdullah: Yep :(
10:07 < jesusabdullah> I love the concept but was really unimpressed with userspace
10:08 < jesusabdullah> their "module system" is terrible
10:08 < jesusabdullah> like, straight up
10:08 < nathan7> jesusabdullah: Yeah
10:08 < jesusabdullah> like, stake-through-heart terrible
10:08 < jesusabdullah> julia had promise for days, too
10:08 < jesusabdullah> makes me :(
10:08 < nathan7> Rust's packaging worries me too
10:08 < jesusabdullah> but at least R has a pretty good ecosystem, and we're getting numerical javascript now
10:08 < nathan7> and it's such a goddamn promising language
10:08 < gabrielstuff> hello there, I have a mongodb with a bunch of data, and i need to make one of my schema collection to evaluate (need to more fields) what is the common procedure for this, how to make sure previous record, will get the new field with a default value ?
10:08 < nathan7> numerical javascript? what do you mean?
10:08 < jesusabdullah> man I even told them, "make it like npm" but did they listen? noooooooo
10:08 < gabrielstuff> Thanks !
10:09 < nathan7> I really love the mapreduce example on the homepage
10:09 < jesusabdullah> nathan7: https://github.com/mikolalysenko/ndarray
10:09 < jesusabdullah> I believe
10:09 < jesusabdullah> yes
10:09 < jesusabdullah> nathan7: mikola's writing all sorts of crazy modules for doing math in javascript, and they're reasonably performant considering
10:10 < nathan7> mhm
10:10 < jesusabdullah> nathan7: http://0fps.wordpress.com/2012/11/28/conways-game-of-life-for-curved-surfaces-part-2/
10:10 < nathan7> but parallelism
10:10 < jesusabdullah> nathan7: finite element method in the browser
10:10 < jesusabdullah> yeah, nobody has good parallelism yet (maybe rust does, but most numerical envs don't)
10:11 < nathan7> jesusabdullah: Julia's is cool
10:12 < jesusabdullah> the other thing that bums me out about julia is, it's built on libuv but afaik they haven't leveraged that for baked in networking io
10:12 < jesusabdullah> they only did it for the windows port
10:12 < nathan7> wtf
10:12 < jesusabdullah> inorite
10:12 < jesusabdullah> http is a third party module
10:12 < nathan7> haha, I type julia in my address bar and I get juliangruber 
10:12 < jesusabdullah> I guess they have sockets? but still, they should've bitten the bullet
10:12 < jesusabdullah> haha, niiice
10:13 < nathan7> I wish Gadfly didn't die with a fucking compile error
10:13 < nathan7> YOUR PACKAGE MIGHT BE NICE
10:13 < nathan7> IF IT COMPILED
10:13 < jesusabdullah> oho!
10:13 < jesusabdullah> I hope I get a chance to hack on browserify-cdn tomorrow
10:14 < nathan7> http://dcjones.github.io/Gadfly.jl/doc/ all this is really awesome
10:14 < jesusabdullah> I always wanted to give ggplot2 a spin
10:14 < jesusabdullah> or port it to javascript
10:15 < jesusabdullah> is it just me, or is github slow as balls tonight?
10:16 < nathan7> https://www.google.com/fonts/specimen/Raleway sweeet
10:16 < nathan7> jesusabdullah: their package manager thing
10:16 < nathan7> jesusabdullah: it asks me for my name and email to put in my git settings
10:16 < nathan7> jesusabdullah: I have those set, but through a config include
10:17 < jesusabdullah> nathan7: that's because the "central registry" is a github repo
10:17 < nathan7> jesusabdullah: they're doing their own git config parser and it's fucking broken
10:17 < jesusabdullah> nathan7: https://github.com/JuliaLang/METADATA.jl
10:17 < jesusabdullah> nathan7: I bet >_<
10:19 < nathan7> https://github.com/lampepfl/scala-js this
10:19 < jesusabdullah> oh yeah, and nathan7 if you want to submit a package it HAS to be on github and the repo HAS to be named CamelCase.jl
10:19 < jesusabdullah> Yeah, I heard about that
10:20 < jesusabdullah> never had much interest in scala
10:20 < nathan7> so.. everyone gets commit access to that repo if they publish a pacakge
10:20 < nathan7> *package
10:20 < nathan7> (check out a closed pullreq on it)
10:21 < jesusabdullah> nathan7: link?
10:23 < nathan7> jesusabdullah: https://github.com/JuliaLang/METADATA.jl/pulls?state=closed
10:23 < nathan7> jesusabdullah: https://github.com/JuliaLang/METADATA.jl/pull/285
10:23 < jesusabdullah> lolwat
10:23 < jesusabdullah> they just hand it to anyone that ever makes a PR?
10:24 < jesusabdullah> ugh why do people not understand that this ain't no svn?
10:24 < jesusabdullah> Like I'm cool with adding contributors but there's a limit to that shit
10:24 < jesusabdullah> ugh that's even more broken than I thought
10:26 < jesusabdullah> nathan7: waiting for someone to force-push to METADATA.jl
10:28 < nathan7> jesusabdullah: haha
10:29 < jesusabdullah> oh man, part of me wants to do that
10:29 < jesusabdullah> make an account that's all "I'm being NICE!" and then
10:29 < jesusabdullah> BAM
10:30 < Kessler> gotten morgen :)
10:30 < Kessler> guten
10:41 < aandy_> got morning?
11:12 < AAA_awright> I saw a simple library for generating universally unique ids, starting with a "c" anyone remember the name?
11:12 < AAA_awright> Collision-resistant identifiers, and not a UUID
11:15 < AAA_awright> hmm, cuid... uuid is probably better if ordering isn't significant
11:15 < aandy_> i would like to see that aswel. short of while (true) { if (!exists) { return lol; } else { lol = NewTry(); } }, i don't see how collision free is done (if speed is a factor)
11:20 < aandy_> maybe just an incr counter, provably_secure_hash_function(i++), but it'd still need to check, and could find dupes :p
11:31 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:38 <@MI6> joyent/libuv: piscisaureus created branch fix-pointer-truncation - http://git.io/LkSltA
12:10 < faceleg> anyone here used Gaikan?
12:10 <@MI6> joyent/libuv: Bert Belder master * 7d8504c : queue: fix pointer truncation on LLP64 platforms - http://git.io/99IfUQ
12:22 < faceleg> does anyone know of a nodejs templating engine that allows one to post-process a template?
12:24 < mrvisser_> faceleg: methinks you have a specific use-case in mind here.. ?
12:25 < faceleg> yeah
12:25 < faceleg> or is there a way I could do this with say, express?
12:25 < mrvisser_> get the text of the rendered template that it is about to dish out to the client?
12:26 < faceleg> yep and mess with it
12:26 < mrvisser_> not that I'm aware of. what's your templating engine?
12:26 < faceleg> don't care
12:26 < faceleg> as in, whatever one allows me to do this
12:26 < mrvisser_> well, a templating engine could very well let you do all your processing in the normal processing stage.. right?
12:27 < faceleg> yeah
12:27 < faceleg>  I have a non-standard requirement
12:27 < mrvisser_> so "post-processing" isn't really a "thing" in that sense..
12:27 < faceleg> I want to be able to specify a cstom tag with attributes
12:27 < faceleg> tag encloses some default ocntnet
12:27 < faceleg> then in the "post processing" (whatever) step
12:28 < faceleg> the tags' attribetus are used to look for modified content and if found, said mod content is used to replace the default
12:28 < faceleg> for a cms
12:28 < nathan7> plates might interest you
12:28 < faceleg> yeah
12:28 < faceleg> I'm not sure how active tha tis though?
12:29 < faceleg> oh, quite active, was thining of something else
12:30 < faceleg> mmm
12:30 < faceleg> I really need something like EJS' custom functions
12:30 < faceleg> but ... not that
12:31 < nathan7> marak/html is cool too
12:31 < faceleg> looks like it's the BEST EVER
12:32 < faceleg> lol
12:32 < faceleg> " I challenge you to find a use cse that isn't covered by html"
12:35 < sinclair|net> faceleg: use razorjs
12:35 < sinclair|net> faceleg: https://github.com/andyedinborough/RazorJS
12:39 < faceleg> is github.io broken for anyone else?
12:43 < aandy_> faceleg: works here
12:45 < faceleg> dammit
12:55 < faceleg> so
12:56 < faceleg> anyone used lloyd/connect-postprocess?
13:06 < faceleg> there must be more templating engines for Node than for all other web languages combined
13:13 < mrvisser> what's a web language? :)
13:14 < faceleg> sticky ones
13:18 < pellis> anyone doing node.js and postgres and keeping his sanity?
13:18 < barinovmaxim> Hi, is somebody worked with ACE editor?
13:40 < sinclair|net> barinovmaxim: yes
13:40 < sinclair|net> barinovmaxim: tonight actually
13:40 < barinovmaxim> My problem is sync code between clients via ws
13:41 < barinovmaxim> Change event fired always
13:41 < sinclair|net> barinovmaxim: i don't understand, you getValue() -> send to server
13:41 < barinovmaxim> When I type text and when I insert text 
13:41 < sinclair|net> barinovmaxim: are you sending to the server all the time
13:41 < barinovmaxim> And race between clients begin (
13:42 < barinovmaxim> Yes, I'm
13:42 < sinclair|net> barinovmaxim: are they sharing the same documents between clients?
13:42 < barinovmaxim> Actually no
13:42 < barinovmaxim> just diffs
13:42 < sinclair|net> just save the entire document
13:43 < barinovmaxim> It's heavy, I think diffs much better
13:43 < sinclair|net> barinovmaxim: then send the diff, but not all the time
13:44 < sinclair|net> barinovmaxim: this is hardly a ACE related issue now is it
13:45 < barinovmaxim> My problem will be solve if just emit msg to server just on keyup event
13:45 < sinclair|net> barinovmaxim: personally, i would not bother with diffs, i would submit the document back to the server in its entirety, and have a "last in wins" policy
13:45 < barinovmaxim> But ACE api is not great ((
13:45 < sinclair|net> barinovmaxim: see, what you just described is stupid
13:45 < sinclair|net> stupid, dumb, and pointles
13:45 < sinclair|net> s
13:45 < sinclair|net> why the hell would you do that?
13:45 < sinclair|net> i don't get your reasoning at all
13:46 < sinclair|net> keyup -> send to server 
13:46 < sinclair|net> crazy
13:46 < sinclair|net> barinovmaxim: don't do that, its stupid
13:46 < sinclair|net> barinovmaxim: you only really have two options
13:47 < sinclair|net> 1) submit the entire file "when a user saves" and have a last in wins policy
13:47 < sinclair|net>                 perhaps implement file locking if you are worried about people overwriting changes
13:48 < sinclair|net> 2) implement operational transformations + socket.io and let your users collaboratively edit the document at the same time.
13:48 < sinclair|net> barinovmaxim: lucky for you, someone has already done that, its called ShareJS, google it
13:48 < xk_id> b0rke: http://registry.npmjs.org
13:49 < barinovmaxim> Ok, thanks
13:49 < sinclair|net> barinovmaxim: what you shouldn't be doing is what you described, and sending diffs does not mean sending keystrokes
13:50 < sinclair|net> barinovmaxim: if you want to do "actual" diffs, google "diff-match-patch"
13:50 < barinovmaxim> I'm choose second option)
13:50 < barinovmaxim> It's nice
13:50 < sinclair|net> yes, yes it is, but don't implement it wrong
13:52 < barinovmaxim> Operational transform is hard, but intresting)
13:52 < sinclair|net> barinovmaxim: ShareJS takes care of the details
13:53 < barinovmaxim> But I need integration with ACE...
13:53 < sinclair|net> barinovmaxim: use diff-match-patch if you want to build it for yourself
13:53 < sinclair|net> barinovmaxim: you need integration with ACE?
13:53 < sinclair|net> barinovmaxim: what for?
13:53 < barinovmaxim> collaborative editor
13:54 < sinclair|net> textarea not good enough?
13:54 < sinclair|net> perhaps you should read the documentation on the site, there is a ACE demo on the damn site
13:55 < barinovmaxim> I'm need a nice editor
13:56 < sinclair|net> yeah, im done with helping for tonight
13:56 < barinovmaxim> Big thanks
14:00  * sinclair|net notes github.io does appear to be down
14:15 < megablue> hey guys... i am new to sass, i seen two different ways of writing sass, one with braces and one without... is there any differences between them? which one should i use?
14:15 < megablue> opps... wrong channel
14:15 < megablue> sorry
14:16 < squeeks> You hear that?
14:16 < squeeks> That's the sound of people who are upset, distraught and offended by what you've done. All of them. All at once.
14:16 < squeeks> Think about that.
14:16 < megablue> :( sorry 
14:16 < squeeks> Please check your sarcasm detector.
14:27 < martin__1> PHP Web Server?
14:28 < mscdex> martin__1: no thanks
14:29 < martin__1> Could anybody recommend a good php server module?
14:30 < mscdex> we recommend only node!
14:30 < martin__1> ?
14:37 < sambarino> pretty weird, if i try to do an npm install on a github tarball url it fails "fetch failed" but if i download the tarball myself and do an npm on it locally it succeeds including downloading its dependencies
14:38 < gistya> After I run an npm update, is there a command to update the versions for everything in my package.json file?
14:39 < gistya> I mean I know there is I just can't remember it
14:49 < Mongey> Possibly stupid question. But is node a good choice for a web api that makes lots of external calls to another web api ?
14:52 < Chiffon35> hi all
14:53 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:38 < xk_id> if I use a cheerio selector, and there are multiple elements that fit the selector criteria, does the selector return an array with all of them, or just the first one?
15:40 < xk_id> oh nvm, it seems to return the array
15:42 <@isaacbw> documentation is overrated
16:08 < gishmel> how widespread is the use of es5 in current up to date browsers?
16:10 < gishmel> es6 i mean 
16:11 < nathan7> gishmel: ES6 is not enabled by default in any browser
16:12 < gishmel> so i assume this is accurate? kangax.github.io/es5-compat-table/es6/
16:27 < eere> how can i make a values list for mysql IN() in a for loop? or is there something that will do IN for me?
16:28 <@tjfontaine> in (select id from something where ...)
16:29 <@isaacbw> gishmel: some features may be in browsers, but nothing you should rely on
16:29 <@isaacbw> the spec isn't even close to stable
16:31 < martinrue> does npm fallback to some other way of contacting the registry? I'm trying to emulate it failing by changing 'registry.npmjs.org' in /etc/hosts to point to some fake IP, and it still seems to find the registry and install dependencies
16:32 <@isaacbw> remove your npm cache and try again
16:32 < nathan7> it still checks for 304s, isaacbw 
16:35 < martinrue> isaacbw: aha, thanks… that did it
16:35 < eere> the arguments in in are coming from json somewhere else
16:42 < rgb_chris> beginner here - what is the best way to install additional dependencies for a node app?
16:42 < rgb_chris> using express btw
16:43 < tsunamie> watching the following tutorial http://nodetuts.com/02-callback-pattern.html. Was wondering why he was trying to get at? I am assuming this is how nod.js is structured?
16:44 < tsunamie> whats the significants of the last call back function?
16:46 <@tjfontaine> tsunamie: I'm not sure what you're asking about
16:48 < tsunamie> sorry I think I just got it. @tjfontaine - I believe the call back function is the standard way of using a modaul you ahve created to perform an action like a call to a call to retrivee and object in java.
16:48 < tsunamie> I could be wrong, I am still learning
16:49 <@isaacbw> you're bonkers
16:49 <@isaacbw> have some tea
16:49 < tsunamie> k guessI am bonkers then
16:50 <@isaacbw> whether a module uses callbacks or not in its api depends on the module
16:50 <@isaacbw> it's a useful pattern, but not universal
16:50 < tsunamie> k
16:50 <@tjfontaine> but understanding callback usage is indeed a critical piece of knowledge for successfully using node
16:50 < tsunamie> so he tutorials are just going throught the different pattern usages avaiable?
16:50 < tsunamie> k ty
16:51 <@isaacbw> *lots* of modules are designed with callbacks
16:51 <@isaacbw> as is almost the entire node core api
16:51 < tsunamie> on the 3rd tutorials now. learning about event emitter patterns
16:51 <@isaacbw> be careful with those tutorial sites
16:51 <@isaacbw> they tend to be out of date
16:52 < tsunamie> k
16:52 < tsunamie> I am just learning so not sure what else to do but press on and keep doing examples
16:52 < tsunamie> unless you have a better method isaacbw, which could help me learn quicker?
16:53 <@tjfontaine> tsunamie: for someone from the java world, callbacks are similar to delegate pattern, and event emitters are kinda sorta observer pattern
16:53 < tsunamie> tjfontaine - ty that actaully helps me out alot
16:54 <@isaacbw> have you looked at java 8? It has a lot more in common with javascript than previous versions
16:54 <@isaacbw> java 8 actually looks pretty okay
16:54 < tsunamie> no I am still using java 6
16:54 <@isaacbw> oh lol okay
16:54 < tsunamie> developing is not my dayjob, I am in infrastructure. linux backbone
16:55 <@tjfontaine> I wonder if there's already a GoF cheatsheet for node
16:55 <@isaacbw> what's GoF
16:55 <@tjfontaine> isaacbw: http://en.wikipedia.org/wiki/Design_Patterns
16:55 < tsunamie> gaaa beat me to it
16:56 <@isaacbw> oohh
16:56 < tsunamie> http://overapi.com/nodejs/
16:56 < tsunamie> :)
16:56 <@tjfontaine> if you're talking to statically typed oop people it's good to know what they understand :)
16:57 < tsunamie> ?? statically typed?
16:57 <@isaacbw> java
16:58 < tsunamie> ahh
16:58 <@isaacbw> and many others
16:59 <@isaacbw> but since you're coming from javaa
16:59 <@isaacbw> *a
16:59 <@isaacbw> -a
16:59 <@isaacbw> -a
16:59 <@tjfontaine> well, things with a real type system anyway, java and .net have adopted some dynamic portions as of late
16:59 < tsunamie> tjfontaine - I am assuming because nodejs is ayscronous by nature they never wanted  the eqivalent singelton to exist?
16:59 <@tjfontaine> tsunamie: you can do singletons
16:59 <@isaacbw> segfault
17:00 <@tjfontaine> tsunamie: you abuse the module loader system to do it, it's pretty straight forward
17:00 <@isaacbw> javascaript doesn't have classes, so traditional singletons don't mean a whole lot
17:00 < tsunamie> how would I do that?
17:00 <@isaacbw> yay require abuse
17:01 <@tjfontaine> tsunamie: http://stackoverflow.com/questions/13179109/singleton-pattern-in-nodejs-is-it-needed
17:01 < tsunamie> ty I should have googled it myself :P
17:02 < tsunamie> anway back to tutorials I go
17:02 <@tjfontaine> the question is if you need it, you're probably using singleton pattern for your config or database connector mechanism, there's probably a better fit for you in node
17:02 <@isaacbw> tsunamie: you'll have to really understand javascript to be able to use node properly
17:03 <@isaacbw> or else things will just look like black magic
17:03 <@tjfontaine> coming from a statically typed language, dynamic languages pretty much are black magic :P
17:03 <@isaacbw> capturing semantics (closures) are the most significant deviation from java I think
17:03 <@tjfontaine> unless the person spent a bunch of time doing reflection and dynamic class emitting
17:05 <@isaacbw> why do kids always have stuffy noses
17:05 <@tjfontaine> because you wouldn't get the appropriate amount of snot wiped on you otherwise
17:06 <@isaacbw> oh, that makes sense
17:06 < vampi-the-frog> at some point I learned to blow from the lungs instead of the nose
17:06 <@isaacbw> it seems so obvious now
17:06 < vampi-the-frog> so there was more snot coming out, therefore clearing better
17:06 < vampi-the-frog> it's basically blowing without tensing the nose muscles
17:07 < vampi-the-frog> snot comes from deeper down and clears the passages better
17:07 <@isaacbw> I love blowing huge amounts of snot out of my nose, but I havn't had a properly clogged nose in so long
17:07 <@tjfontaine> and on that note
17:07 <@isaacbw> damn kids having all the fun
17:11 < mmalecki> are we talking about amphetamine?
17:13 < espringe> I'm trying to find a template engine, that has absolutely no client-side dependency (i.e. it should work if they don't have js enabled). I'm using express if there's something with nice integration with that
17:14 < mmalecki> jade?
17:14 <@isaacbw> pretty much every server-side template engine won't require clientside js
17:15 <@isaacbw> --
17:15 <@isaacbw> -\-
17:15 < espringe> Hm, all the ones I've seen have had client-side js -- but I guess it might not be required? 
17:15 < espringe> I wanted to avoid jade, as it looks a little invasive. I just want to insert snippets into my existing HTML
17:16 < MerlinDMC> isaacbw, my coworker would tell me that if it's written in javascript and he disables js in his browser it will not work :P
17:16 < mmalecki> mustache maybe?
17:17 < vampi-the-frog> espringe: ejs
17:18 < espringe> vampi-the-frog: The section they have on 'client-side-support' that's strictly optional, I assume?
17:18 <@isaacbw> MerlinDMC: does your coworker have a habit of making shit up?
17:18 < vampi-the-frog> you can use it on the server side, it's similar to PHP
17:19 < vampi-the-frog> in the way the code tags are open and closed
17:19 < vampi-the-frog> client side is optional of course
17:20 < MerlinDMC> isaacbw,yeah ... he's a little out of present tech ... but he makes a nice mascot
17:20 <@isaacbw> hah
17:20 < espringe> vampi-the-frog: That looks like it fits the bill. Thanks
17:20 <@isaacbw> I love that the answer was yes
17:21 <@isaacbw> people should use getters and setters in js more often
17:23 <@isaacbw> defineProperty 4 lyfe
17:27 < eere> how to return mysql requery result in json?
17:27 < eere> query
17:28 < vampi-the-frog> eere: JSON.stringify(rows);
17:28 < vampi-the-frog> i assume you are already using some mysql module
17:28 < eere> yes
17:29 < eere> in the mysql query response callback is the actual result in response or response.?
17:29 < eere> node-mysql
17:36 < tsunamie> tjfontaine - I am seriously confused on how nodejs templates or uses view
17:36 < tsunamie> tjfontaine - because I did'nt want to leanr another laungague ontop of the stuff I am learning now. I removed jade and using efs
17:37 <@tjfontaine> tsunamie: ah, that's a bit more domain specific I don't have much experience with that side of it
17:37 < tsunamie> tjfontaine - hwoever I am use to "tiles"/ views in my MVC model within a spring project. I can't see how to do the same
17:37 < vampi-the-frog> eere: the callback gets 3 arguments, error, rows and columns iirc
17:37 < vampi-the-frog> eere: and rows is an array of row data
17:37 < vampi-the-frog> eere: just console.log all three arguments
17:37 < tsunamie> tjfontaine - np thanks anyway
17:38 < tsunamie> does anyone know of a good way someone with springframworks background using "tiles" to control view layouts can apply the same methodology in nodejs? I am looking at bootstrap but all the examples assumes your pages are setup like in html
17:39 < tsunamie> I want to chop up my main pages and re use them in templates
17:39 < tsunamie> but I can't see how I can doe that with the ejs templates
17:40 < tsunamie> like how I ahve a view for listing and then calling the layout homepage with only list in the body
17:42 < tsunamie> anyeone familare with ejs?
17:43 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:43 < nathan7> I thought Spring was a dependency injection framework?
17:43 < tsunamie> it is
17:43 < nathan7> ..how the fuck is view layouts part of dependency injection
17:44 < tsunamie> lol
17:44 < tsunamie> I am just giving a background of the kind of flow I am use to
17:44 < tsunamie> if there is an eqvilant in nodejs
17:45 < tsunamie> which is why I realized it was better for me to just ask if anyone knew/familair with ejs
17:56 < evanmoran> Coding on node stuff. Hope everyone is having a great day.
18:05 < s5fs> evanmoran: so far so good, thanks!
18:06 < evanmoran> Glad to hear it =)
18:07 < s5fs> yeah, jqcon just wrapped up so i'm hanging with folks until they fly home today/tomm
18:08 < s5fs> so many late nights hacking!
18:12 < algesten> nathan7 the dependency injection is a fraction of that monstrosity of a framework. spring does *everything*
18:13 < nathan7> algesten: I see
18:13 < nathan7> algesten: Does it do my laundry too?
18:13 < nathan7> That's what we all *really* want, a framework that does our laundry
18:13 <@isaacbw> why don't we have laundry folding robots yet
18:14 < algesten> nathan7 only if you happen to know the correct class. probably something like WashingMachineCyclePatternFactoryBean which you need to inject with exactly correct AbstractLaundryPowderHandler
18:14 < nathan7> algesten: the heck's a Bean?
18:15 < algesten> nathan7 it's better to now know these things. that way lies java development, a dark place we push to the back of our minds and focus on the next function() {}
18:16 < algesten> happy thoughts.
18:16 < nathan7> algesten: b-b-b-but
18:17 < niggler> I'm waiting for the robotic fridge
18:17 < niggler> you know, grepping for certain types of food, running a cron job that purges junk
18:18 < algesten> nathan7 here, here… have a nice Object.prototype instead. Look. All the members are public, a happy happy place.
18:18 <@isaacbw> I knew a lab directory at carnegie mellon who was working on robotic arms that would recognize and fetch the food you want
18:18 <@isaacbw> *director
18:19 <@isaacbw> FRIDGE
18:19 <@isaacbw> GET ME MILK
18:19 < niggler> that's a million dollar idea
18:19 < niggler> the billion dollar idea is the fridge that can figure out what's rotten
18:20 <@isaacbw> or even better, near rotten so it tells you to eat it soon
18:20 < niggler> and what you don't have in stock
18:20 < niggler> LOL texting the fridge
18:21 <@isaacbw> I think there are a few systems like that, but they all require you to put in data manually
18:21 < nathan7> 'ayo fridge cn u chk 4 milk'
18:21 < niggler> "what am I missing?" -> "milk, eggs"
18:21 < niggler> get some learning algorithms in there and have it slowly adjust your diet
18:22 < niggler> some grocery stores actually deliver
18:22 < algesten> curl http://myfridge.local/_contents | grep "expired" | fridge purge
18:22 <@isaacbw> that would be cool
18:22 <@isaacbw> to have it automatically order groceries you need
18:22 < niggler> algesten why wouldn't it be fridge ls | grep "expired" | fridge purge ?
18:23 < nathan7> I'm trying to think of a case where 'expired' is part of a food nam
18:23 < nathan7> e
18:23 < algesten> could be. i'm all up for a ~/.fridgerc
18:23 <@isaacbw> more things need http apis
18:23 < niggler> fridge find -status expired
18:24 < niggler> how about that nathan7 ?
18:24 < algesten> fridge diff < cookie-recipe.txt | grep "missing" | fridge order
18:24 < niggler> algesten why wouldn't you use comm -23
18:25 < nathan7> algesten: egrep '^-'
18:25 < nathan7> or grep -E '^-'
18:26 < niggler> now we need an xkcd comic about this
18:28 < nathan7> RANDAALLL
18:29 < niggler> lol going for the butter, the fridge says "sorry, i can't let you do that"
18:29 < niggler> *i'm afraid i can't do that
18:34 < Fodi69> how should I run cron tasks that are written in node? with crontab or with node.js library 'node-cron'? I'm asking because my software will probably run in multiple processes on multiple servers, so unsure what will happen with cron
18:36 < algesten> Fodi69 define "unsure", what do you imagine could happen?
18:37 <@MI6> joyent/node: Ben Noordhuis v0.10 * 10133aa : test: add https tls session reuse test - http://git.io/5POreA
18:37 < Fodi69> algesten: cron tasks run more frequent then I want, so I specify 1 hour, but they run multiple times because there are multiple processes
18:39 < algesten> Fodi69 which isn't necessarily a problem. but it depends on how the task is written. if all processes do not share any files or sockets etc, then it doesn't matter?
18:40 < Fodi69> algesten: okay but the job itself manipulates the database, for example on every hour I want to add points to specific users
18:40 < Fodi69> and for this reason I want to use my models, config stuff, etc in my cron too.
18:43 < algesten> Fodi69 which is perfectly doable with plain cron. you could for instance use arguments to the node job to point out relevant config files. another option is environment variables. a third is wrapper scripts that encapsulates the configs.
18:45 < guybrush> Fodi69: use the database to communicate the state
18:45 < Fodi69> guybrush: I store, when the last cron is run and then check if enough time is passed?
18:46 < guybrush> like if a process did the job already, set some flag or key in the db - the other processes can then check if the job has been done already
18:47 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:47 < guybrush> also why use cron at all
18:47 < guybrush> just do a setTimeout/Interval :p
18:49 < Fodi69> guybrush: I want to run it for example at 8:00, not 1 hour after the server is started
18:49 < guybrush> ok
18:50 < guybrush> setInterval(checkIfIts0800,2000)
18:50 < guybrush> but whatever, your solution is just fine i guess
18:51 < guybrush> i just dont like cron :)
18:51 < Fodi69> guybrush: how do you do cron-like tasks?
18:52 < guybrush> setInterval/Timeout
18:53 < zomg> I know, not CSS, but can anyone think of why document.querySelectorAll('div.foo') would return two results, where using 'div.foo:first-of-type' returns no results at all?
18:53 < zomg> This doesn't make any sense..
18:53 < guybrush> but i use cron too for apt-get updates for example and such things
18:54 < guybrush> just for a specific app i dont want to use cron, i use cron for the system not for apps
18:54 < Fodi69> guybrush: well, that doesn't solve my cron needs
18:54 < Fodi69> :D
18:54 < guybrush> but really its opinionated and depends on who maintins the things :)
18:58 < drx__> Data in a POST request should be  in   req.body   right ?
18:58 < jjawn> for some reason no matter where or how i install jsdom i get the following error "Cannot find module 'jsdom'"
18:59 < jjawn> and im using nodemon
19:01 < Fodi69> drx__: yes
19:01 < drx__> @fody:   its undefined , despite POSTING with like  Restler, Request, and HTTP
19:02 < drx__> i tried Restler.POST,  Request.POST all of them   body is always 'undefined' 
19:02 < drx__> using express
19:03 < Fodi69> drx__: http://expressjs.com/api.html#req.body
19:04 < drx__> @Fodi69: Thanks, For some reason body is always "undefined"
19:05 < Fodi69> drx__: well, you must specify the parameters in the callback like: app.get('/', function(req, res){
19:05 < Fodi69> drx__: then it's not a post request
19:06 < drx__> I've got   app.post('/',function( req, res){    
19:06 < drx__> and  req.body  is undefined,  but its hitting the callback for POST
19:08 < overra> drx__: are you using app.use(express.bodyParser())?
19:08 < drx__> holy shit I don't think so
19:09 < overra> yeah i forgot about it recently too
19:10 < drx__> @overra:   That was it. I spaced the body parser!!!  Thanks!
19:10 < overra> np :)
19:10 < drx__> The other question I had was:   How to properly encode XML into a post request? 
19:10 < drx__> Do I have to urlEncode it somehow ?
19:10 < drx__> I'm forced to use XML in a POST request 
19:11 < jjawn> im using nodemon and for some reason no matter where or how i install jsdom i get the following error "Cannot find module 'jsdom'"???
19:12 < overra> drx__: encodeURI?
19:17 < drx__> @overra:  Double Thanks !   :)
19:20 < drx__> Good Module to get around CrossDomain restrictions by forwarding requests / headers'n'all ?
19:20 < drx__> anyone know of a good HTTP proxy type module which just forwards complete HTTP requests and forwards the responses back to the client? 
19:21 < drx__> I'm trying to use this:  https://github.com/nodejitsu/node-http-proxy   just wondering if there is something better 
19:40 <@isaacbw> agh, I've been writing too much javascript
19:41 <@isaacbw> I just wrote var i; in a c program
19:45 < robertkowalski> hey
19:45 < evanmoran> I'm writing too much coffee-script. Just wrote # in objective-c =)
20:24 < noway_> Should i add .git directory to .npmignore?
20:24 < noway_> Or npm ignore it by default?
20:25 < noway_> I mean while i publising module.
20:26 < nathan7> noway_: ignored by default.
20:26 < noway_> thanks!
20:27 < rhalff> ehmz
20:28 < rhalff> i wanna plea for npm++
20:33 < rhalff> Is there allready an art of function analysis that recognizes what a function is doing as a starter are static functions which do not refer to `this`, I wanna be notified that I maybe should use that function.
20:33  * rhalff *is being philosophical*
20:35 < faceleg> exit
20:35 < rhalff> recognize the patterns in the billions of sourcecode, without us having to know what the pattern is named.
20:39 < noway_> when.js is so awesome
20:41 < gishmel> what additional functionality does using mongoose give me as opposed to the native mongodb wrapper?
20:41 < noway_> ORM is pretty handy
20:42 < noway_> i about Object-relational mapping in mongoose
20:45 < gishmel> can you point me in the direction of any tutorials, articles, projects that are specific to mongoose that demonstrate proper use of ORM
20:46 <@isaacbw> gishmel: mostly schema validation
20:46 <@isaacbw> using orm with mongo is so silly
20:47 <@isaacbw> the whole point of mongo is to avoid the need for orm
20:57 < gishmel> so it makes sense to get mongodb populated with documents and then write mongoose or do you need to be considering mongoose all along?
21:06 < jlord> jesusabdullah: i retweeted your retweet! 
21:19 < evanmoran> @gishmel generally you should insert with mongoose if you are using it. It does some validation which may catch some errors
21:21 < evanmoran> @gishmel though @isaacbw 's point is true. Mongo is already good at storing json. The orm doesn't help you other then simplify CRUD support, which is trivial to implement directly in mongo
21:23 < evanmoran> @gishmel bulk queries are the hard part of any backend. So if all you need are hundreds of restful gets than it is easy either way, and if you need something more complex you might as well use mongo directly
21:29 < Kessler_> anyone heard of an sql server implemented in javascript ? :-)
21:29 < adarq> one of my friend's biggest issues with node is how you have to restart the node process if you make core code changes.. he's used to php coding so,.. ive basically explained that php coding is similar to the server side templates.. so you wouldn't have to restart node if oyu modify templates/assets etc.. but for true core code modifications, do you guys use anything special to reload those modifed modules? i see that the grunt monitor notice
21:30 < adarq> i apologize for that huge q ^^ hehehe
21:31 <@mbalho> adarq: is this a question about development workflow or production deployments?
21:31 < adarq> both kind of, but ya you're right.. mostly development workflow
21:31 <@mbalho> adarq: there are lots of tools on npm that watch your code and restart your server automatically, e.g. nodemon
21:32 < adarq> i told him that we shouldn't be live editing the production code like that...
21:32 < adarq> ya
21:32 < adarq> ive used forever/supervisor.. ill look into nodemon
21:32 < adarq> ok so, the convention though, is that you shouldn't be doing hot/live edits to production code right.. i mean, you're basically going to have to 're deploy' at that point
21:32 <@mbalho> adarq: for seamless deploys there are also techniques, e.g. have a pool of server processes and wait for active connections to close before terminating the process and restarting
21:33 < adarq> cool
21:33 < adarq> i've been writing a few apps with sailsjs recently.. really enjoying it
21:34 < adarq> need to tackle all of those other issues though
21:34 < evanmoran> @adarq node-dev is great for development. https://github.com/fgnass/node-dev
21:34 < adarq> one of the biggest issues with sails's ORM db is that it doesn't do associations etc..
21:34 < adarq> thanks evanmoran , checking it
21:35 < evanmoran> @adarq I tried a few different ones but that one hooks into require and makes it so it automatically restarts if any code changes
21:35 < adarq> nice
21:35 < adarq> evanmoran: what about though, not actually full restarting, but simply 'reloading' the modified modules? im going to check nodemon and see if it does that
21:37 < adarq> i did some custom stuff like that before
21:37 < evanmoran> @adarq nodemon is one of the ones I tried. I think it always does a full restart, but worse it doesn't always detect changes. Restarts are pretty fast, so it isn't a big deal
21:37 < adarq> but i manually -HUP'd it
21:37 < adarq> ah
21:37 < adarq> ya see im def looking for something that can 1) try to reload only the specified modules 2) if that fails, restart
21:38 < adarq> but ya thanks for the help everyone
21:42 < adarq> any of you use node-orm2? seems like it supports associations, i need that.
21:52 < gishmel> so say I needed something such as creating an object on the server from multiple documents and passing it to the client your recommendation would be to use mongodb alone?
22:05 < neRo_> [postgres] how to queue queries with node-postgres?
22:05 < neRo_> https://github.com/brianc/node-postgres
22:05 < neRo_> https://github.com/brianc/node-postgres/wiki/Queryqueue
22:07 < neRo_> how to do it when I want to use res.json(result.rows) for both?
22:21 < neRo_> anyone here? :\
22:21 < mmalecki> yes
22:22 < neRo_> what i'm trying to achieve is make several queries and the result should be send as a res.json
22:22 < mmalecki> I have no idea how to answer your question tho, neRo_ 
22:23 < neRo_> ok sorry :)
22:37 <@isaacbw> Kessler_: SQL isn't cool enough for javascript developers
22:38 < robertkowalski> any recommendations for a download progress module? i want to implement download progress into npm
22:39 < robertkowalski> mmalecki?
22:42 < Havvy> isaacbw: Sure it is.
22:43 < mmalecki> robertkowalski: not sure, I remember we use something in jitsu tho
22:43 < mmalecki> robertkowalski: `progress` module
22:43 <@isaacbw> Havvy: I was being facetious. I think it's unfortunate that developers are avoiding SQL more and more
22:44 < mmalecki> isaacbw: both SQL and NoSQL have its usecases
22:44 < Havvy> Though, tbh, I've been wondering what kind of database should be used for a Nomic.
22:45 < mmalecki> but my feeling is that if you want to iterate faster, you should probably go with NoSQL of some kind
22:45 <@mbalho> if you want big data web scale and china market capabilities go with mongo
22:47 < st_luke> its unfortunate that the lie of sql being the best well rounded option for app development ever happened to begin with
22:47 < standoo> st_luke: it's a lie OMG
22:48 < st_luke> standoo: the lie is that there is a "best option" between relational and non
22:48 < st_luke> thanks to well funded product marketing
22:48 < standoo> st_luke: what's that?
22:48 <@isaacbw> BUT I DON'T LIKE CHOICES WHICH IS BEST PLZ
22:49 < standoo> there are "perfect" choices but no absolute best
22:50 < st_luke> you should try all types for a bit and use whichever you think is the most enjoyable
22:50 < st_luke> that is your 'perfect' choice for whatever you're making 
22:50 < mmalecki> well, there are other factors too
22:50 < mmalecki> like performance
22:51 < mmalecki> and not losing data (or: why I'd never use MongoDB)
22:51 < AAA_awright> mmalecki: NoSQL isn't a query language
22:51 < st_luke> mmalecki: "mongodb loses data" is a troll argument
22:51 < AAA_awright> It's not anything, really
22:51 < mmalecki> st_luke: it is :-)
22:51 < AAA_awright> And yeah, what are you talking about? MongoDB doesn't lose data (unless you want it to, perhaps)
22:52 < nathan7> AAA_awright: Err..
22:52 < Chiffon35> hi all
22:52 < nathan7> AAA_awright: It just has a rather lacking definition of 'saved'
22:53 < AAA_awright> nathan7: How do you mean
22:56 < nathan7> I'm trying to find it in my history
23:01 < nathan7> AAA_awright: http://hackingdistributed.com/2013/01/29/mongo-ft/
23:02 < AAA_awright> nathan7: Besides being FUD, that article is entirely false
23:02 < AAA_awright> My application certainly doesn't consider something written before it's on the hard disk
23:04 < nathan7> AAA_awright: MongoDB does, that's the issue at hand.
23:05 < AAA_awright> nathan7: Uh, how so. Like I said, my driver doesn't consider something written before it's on the HDD
23:05 < AAA_awright> If you want that behavior, go use Redis
23:08 < nathan7> AAA_awright: Have you *read* the article?
23:08 < AAA_awright> Yes, multiple times
23:08 < nathan7> AAA_awright: Then your driver is not doing concurrent writes
23:08 < nathan7> AAA_awright: incurring network roundtrip for every store
23:09 < nathan7> AAA_awright: (and an extra package because Nagle's algo is disabled)
23:09 < AAA_awright> It's critiquing developers who don't check for a response before continuing. Um, isn't that true of EVERY database?
23:09 < AAA_awright> If I'm running an SQL INSERT, and I don't check the updated record count, it's kind of obvious I might lose the data
23:12 < nathan7> AAA_awright: MongoDB's getLastError won't work in the presence of pipelining
23:12 < AAA_awright> Do you have a non-generic argument to levy at MongoBD?
23:13 <@isaacbw> AAA_awright and mongo, sitting in a tree
23:13 < AAA_awright> isaacbw: Only on Sundays
23:14 < nathan7> I'm just curious which driver you're using, AAA_awright 
23:14 <@isaacbw> :P
23:15 < AAA_awright> https://github.com/marcello3d/node-mongolian though the driver really shouldn't matter, if the discussion is about mongod
23:29 < Kessler_> isaacbw: seriously ?  :)
23:30 < Kessler_> isaacbw: http://aws.amazon.com/redshift/ is one of the nicest things landed around lately imo
23:32 < AAA_awright> Also what does it mean to DELETE a resource, both a representation generated from the RDF store, and the RDF resource itself
23:33 < AAA_awright> The triples that are affected by a PUT may be dependant on the Content-Type of the enclosed entity
23:33 < AAA_awright> You don't have such a Content-Type in a DELETE method
23:34 < AAA_awright> (I should say, s/triples/statements/ since that's a better term)
23:39 < soldair> can anyone point me to the benchmark doc for node core. i have a patch but i don't want to submit it without proper stuff. 
23:40 < mscdex> soldair: i don't think there is a "benchmark doc"
23:40 < mscdex> soldair: is it just adding a benchmark?
23:46 <@isaacbw> Kessler_: scroll down. I was being facetious
23:47 < Kessler_> isaacbw: too late at night for me :) 
23:47 <@isaacbw> :P
23:48 < Kessler_> isaacbw: but at least I learned a new english word in the process 
23:48 <@isaacbw> yay!
23:48 <@isaacbw> it's a great word
23:49 <@isaacbw> one of my favorites
23:49 < Kessler_> one sec ill go ask google to pronounce it for me
23:50 < brainproxy> when using superagent in the browser, is it possible to achieve the same effect as setting responseType to "document" w/ XHR?
23:59 < pringlescan> Hello all, is anyone using 1602/jugglingdb in production?
--- Log closed Sun Jun 16 00:00:34 2013
