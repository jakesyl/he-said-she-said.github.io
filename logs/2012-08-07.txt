--- Log opened Tue Aug 07 00:00:36 2012
00:08 < CIA-93> node: Bert Belder master * r658cf43 / (102 files in 15 dirs): uv: upgrade to 41b1265 (+5 more commits...) - https://github.com/joyent/node/commit/658cf43b7c631dfffe87fc5fd0dbad4599117993
00:12 < kolektiv> evening all - does anyone know if there's a way of using npm programatically to get the current processes dependencies?
00:13 < kolektiv> npm.commands.ls(...) sort of does it, but relies on CWD, which then doesn't work if you're running node <some path>/app.js for example
00:13 < kolektiv> as it expects node_modules to sit under the CWD - and it sometimes doesn't
00:13 < kolektiv> anyone come across a reliable approach?
00:22 < sshaginyan> Hey I got post to work with Jquery and node.js but I'm getting this error XML Parsing Error: no element found Location: moz-nullprincipal:{3706d096-a9f6-514d-8d99-d169c6b78a70} Line Number 1, Column 1:
00:23 < sshaginyan> It has to do with something not being on the same domain or something
00:25 < jrajav> Anyone know any good localStorage frameworks?
00:25 < jrajav> Off topic, I know, but it's javascript :P
00:58 < cainus> hey... anyone know any nice tools for documenting libraries/packages?
00:58 < cainus> maybe something more powerful than just a wiki
01:01 < lessThan> @cainus have you tried Dox?
01:01 < cainus> no sir
01:01  * cainus googles
01:01 < lessThan> @cainus check it out. https://github.com/visionmedia/dox/
01:02 < TooTallNate> fox is great
01:02 < TooTallNate> err, dox
01:03 < lessThan> @TooTallNate It is indeed. It's flexibility is what - imho - is great about it.
01:03 < cainus> yeah looks nice
01:03 < cainus> looks like a more-powerful javadoc
01:04 < cainus> anyone know what the literate programming one is called?
01:05 < cainus> ahh docco
01:05 < cainus> that's more for internals though I think
01:06 < nlf> https://github.com/nathan-lafreniere/ape
01:06 < mscdex> real developers write docs manually using markdown!
01:06  * nlf coughs
01:06 < nlf> that's totally not mine
01:07 < cainus> nlf: you need some sample output on there
01:07 < nlf> there's some in the repo
01:07 < nlf> but yeah, i agree
01:08 < cainus> I think I'm the only one in the world that can't stand markdown too
01:11 < mscdex> markdown 4 lyfe
01:12 < jrajav> markdown's hood, yo
01:12 < cainus> I actually find mediawiki markup simpler
01:13 < chilts> cainus: yeah, it's not great, but it's an almost defacto standard now
01:14 < cainus> can't figure out how to do <br/> in markdown for the life of me
01:14 < chilts> just plop <br/> in there, should work
01:14 < chilts> which is nasty :)
01:14 < pringlescan> I've encountered a really weird behavior in .indexOf, could anyone take a look at this? http://jsfiddle.net/yNmPt/27/
01:14 < cainus> haha\
01:14 < cainus> yeah or just start with html
01:14 < chilts> :)
01:14 < gicode> mscdex: That recursion fix had a bad side effect :-(
01:16 < tomb_> cainus: depending on the markdown lib, double space at the end of the line should break it
01:16 < gicode> Yay for magic whitespace
01:16 < cainus> tomb_: thought I tried that with github and it didn't work
01:16 < cainus> I could be wrong though
01:17 < cainus> pringlescan: that's a lot of code just to look at indexOf()
01:17 < tomb_> https://gist.github.com/3280368
01:17 < stagas> pringlescan: you're doing .indexOf(word) > 0 instead of > -1
01:17 < pringlescan> I know, but i'm assuming there's an error somewhere else… but the code worked for all but a few names, so it's VERY bizzare given their are thousands of names that worked fine.
01:18 < pringlescan> shouldn't !== −1 work too?
01:18 < stagas> pringlescan: the first is right, the last one where you check the length of the word in the index is > 0 not !== -1
01:19 < pringlescan> stagas, but when you change it to !== −1 it still doesn't work :-(
01:19 < pringlescan> (refresh, I changed it)
01:19 < tomb_> cainus: http://github.github.com/github-flavored-markdown/ 'newlines' section as well
01:20 < cainus> pringlescan:  just to really mess you up:   if ( ~str.indexOf(‘match’) ) { /* found */ } else { /*not found */ }
01:20 < tomb_> although
01:20 < tomb_> the new line stuff seems to be broken
01:20 < nlf> i use cainus' approach
01:20 < nlf> less typing
01:20 < pringlescan> huh? it's an array
01:20 < cainus> same
01:21 < pringlescan> but I think I just saw the error, I'm missing [starts_with] but I wasn't in the code that was buggy I think
01:21 < pringlescan> … damn, sorry guys, I must have been looking at it way too long. I couldn't figure out why only a few names didn't match haha
01:22 < dazld> A BUG
01:22 < stagas> pringlescan: yeah you're missing starts_with when you check for the property
01:22 < dazld> IN MY CODE!?
01:22 < dazld> surely you jest?
01:22 < cainus> tomb_: so what's this saying?  you can't easily <br /> ?
01:22 < dazld> that ~ technique is great
01:22 < tomb_> cainus: with github markdown a newline is suppose to turn into a <br />, it's broken at the minute
01:23 < tomb_> cainus: you can add your own <br /> tho
01:23 < cainus> ahh okay
01:23 < cainus> yeah but markdown is supposed to be readable as plain text... that's half the point of it
01:24 < tomb_> then use the double space at the end of the line
01:24 < cainus> just \n\n ?
01:24 < tomb_> nono
01:25 < cainus> "  "?
01:25 < tomb_> foo[space][space]
01:25 < tomb_> bar
01:25 < cainus> ahh okay
01:25 < tomb_> that'll add the break
01:25 < tomb_> that's the original spec way
01:25 < cainus> totally doable
01:25 < cainus> cool
01:25 < cainus> thanks man... nice to know
01:27 < cainus> anyone have an example of dox output?
01:28 < cainus> ahh I make my own template
01:30 < tomb_> cainus: http://www.senchalabs.org/connect/
01:31 < tomb_> looking at the gh-pages branch, looks like that uses it
01:31 < cainus> nice
01:32 < zak_> does anybody know if dojo overloads the debug name easily?
01:32 < zak_> something like this: http://stackoverflow.com/questions/6307514/is-it-possible-to-overload-javascripts-tostring-function-to-provide-meaningfu
01:36 < mscdex> gicode: what's that?
01:36 < zak_> ah my bad, wrong channel
01:38 < cainus> you can do javascript in the browser too?
01:38 < mscdex> no, that's a myth!
01:44 < cletus> Does anyone know if the version of js/ecmascript that nodejs uses supports Iterators?
01:46 < mscdex> cletus: nope, not yet
01:47 < mscdex> cletus: some stuff is hidden behind the --harmony flag though
01:47 < mscdex> but v8 is normally es5
01:49 < Benvie> v8 doesn't support iterators yet
01:49 < Benvie> hopefully they do soon =( and other stuff too
01:57 < cletus> Man
01:58 < cletus> Do you think i could use wu.js to write a sort of iterator class?
01:58 < Benvie> well that's what most of wu does no?
01:59 < Benvie> you can get most of the mechanics of iterators into existing js
01:59 < Benvie> you just can't make for...of work due to it being a syntax thing
02:10 < CIA-93> node: isaacs v0.8.6-release * rf11a3df / (101 files in 8 dirs): npm: Upgrade to 1.1.48 - https://github.com/joyent/node/commit/f11a3dfcd63f80a6435dbf126faec77a01256326
02:10 < CIA-93> node: isaacs v0.8.6-release * r6c9c5c2 / (AUTHORS ChangeLog src/node_version.h): 2012.08.07, Version 0.8.6 (Stable) - https://github.com/joyent/node/commit/6c9c5c29e33cc473fcc90c14170367e59c2e9c41
02:10 < jeffstieler> not sure if this is specifically a node question.. but can i prioritize socket messages?  i'm using socket.io on client and server, with a ton of messages from the server, and if i send one from the client in the middle of the torrent of messages being received.. it seems to "wait" to be sent
02:11 < cletus> Benvie: So I can essentially just write my own iterator class and then call next until it throws an err?
02:41 < Benvie> yeah well I mean that exists already
02:42 < Benvie> something that shims the iterator spec
02:42 < Benvie> then you just write a iterator to spec
02:48 < samholmes> Is Marak here? I have a quick question about the depreciated node_mailer module.
02:49 < Benvie> but yeah an iterator in es6 is just an object that has a "next" property that is a function that returns the next value
02:50 < samholmes> Anyone know what the 'domain' property was, for the mailer.send method?
03:06 < catilac> Hey is there any sort of performance monitoring tool people can recommend for node on heroku?
03:16 < therealfakemoot> https://gist.github.com/3280909 So I'm trying to put a simple border around some ul elements; the LESS is compiling to CSS properly and the style sheet exists, but the elemtns show no styles in Firebug whatsoever.
03:37 < samholmes> If I'm developing on localhost and deploying to a VPS, how can I maintain the proper domain in absolute URLs? When my application sends emails from localhost, the absolute URLs should be http://localhost/route/, while in production it should be http://mydomain.com/route. How can I make my app flexible enough to know where it's being hosted without me needing to change the source code everytime I switch domains?
03:38 < etcetera> what's the best way to trouble shoot a cannot find module error...
03:38 < etcetera> when the path is correct.
03:43 < etcetera> hmm, must be a path error.
03:43 < etcetera> requiring it explicitly works.
03:46 < utu> is there an easy way to generate secret token/serial-key that both sender and receiver could understand and that a server would use to authenticate some action?
03:47 < utu> e.g. client would generate some token/hash and server would need to check if that
03:47 < utu> 's something that is valid
03:47 < etcetera> is there a better way of passing a node-redis connection to submodules?
03:47 < therealfakemoot> etcetera: Better than what?
03:48 < etcetera> than simply providing it during the module export?
03:50 < etcetera> or providing a separate db module?
03:55 < chilts> samholmes: I would usually put that kind of stuff into a config file, e.g. your domain name, localhost, example.com, testing.example.com etc
03:55 < samholmes> chilts: how would you access this info from the config?
03:55 < chilts> sometimes I make it configurable and dependent on the environment too, such as development, testing, staging, preprod, production etc
03:56 < chilts> samholmes: that's for you to determine what kind of config you want, file, redis, whatever
03:56 < chilts> samholmes: try something like https://github.com/ 
03:56 < chilts> oopse
03:56 < chilts> https://github.com/flatiron/nconf
04:02 < etcetera> http://forrst.com/posts/How_I_make_models_in_Node_js_using_Redis_as_dat-90W
04:04 < styol> I'm not entirely sure how to ask this question properly, but can anyone think of a way to deal with registering callbacks? The main problem is that a single "handler" or callback is set and receives all the responses for requests. I'm basically trying to create an abstraction layer for a module/driver that allows inline callbacks to be used. IE: get('key', function(err, value){});
04:05 < styol> so my first thought was to temporarily store the request details to an object, by key, and then route the received response to the original callback. In theory though this presents a problem with multiple requests for the same key
04:06 < styol> as the last registered callback would likely take precedence
04:06 <@Nexxy> styol, what is the question?
04:07 < styol> Nexxy: how can I deal with a design pattern free from inline callbacks?
04:07 <@Nexxy> could you be a little more vague?
04:08 < gkatsev> he could, probably. :P
04:08 < styol> haha yes i probably could, perhaps i should start with a simpler question
04:09 <@Nexxy> it helps to show a PoC of what you're trying to do
04:09 <@Nexxy> even if it's pseudocode
04:09 < styol> even if its non-glorious as well?
04:09 <@Nexxy> oh
04:09 <@Nexxy> wait
04:09 <@Nexxy> no, sorry
04:09 <@Nexxy> glorious is a requisite
04:12 < prettyrobots> Can I use http.on('connection') to drop a request like a hot potato?
04:13 <@Nexxy> prettyrobots, yus
04:14 < prettyrobots> Nexxy: Thank you.
04:15 <@Nexxy> prettyrobots, anytiem.
04:15 < styol> Is it common that a function / callback is provided at the end of an asynchronous request? such as the second argument of an event emitter - foo.on('error', function() { /* callback */ });
04:15 <@Nexxy> styol, yes
04:16 <@Nexxy> styol, the last argument should be the callback
04:16 <@Nexxy> the callback usually takes an error argument first (which is null if there are no errors)
04:16 < zak_> there's a nice node module which handles that for you
04:16 <@Nexxy> or falsy I should say
04:16 <@Nexxy> zak_, there are a lot of nice modules that handle that ;P
04:16 < styol> Nexxy: excellent, so I'm essentially trying to create the same scenario for asynchronous requests that do not provide a way to directly relate callbacks to an asynchronous request, instead it is all routed to a single callback basically
04:17 < styol> it is in regards to Couchbase / libcouchbase / couchnode https://github.com/trondn/couchnode
04:17 <@Nexxy> styol, just name your callback and give it to every request
04:17 <@Nexxy> var globalCallback = function(err, dat) { // do stuff };
04:17 <@Nexxy> then you can just stick globalCallback in as your callback for everything
04:18 < etcetera> is there a canonical way of creating models and persisting them to data store?
04:18 <@Nexxy> etcetera, no
04:19 < etcetera> saw this: http://forrst.com/posts/How_I_make_models_in_Node_js_using_Redis_as_dat-90W
04:19 < etcetera> made me sad.
04:20 < etcetera> a proper node-redis sample is definitely in order.
04:23 < styol> Nexxy: I believe I understand what you are saying but the problem is I'm not capable of doing that presently and more specifically is what I'm working my way up towards. The present implementation doesn't have inline callbacks and I would like them to. IE get('key'); /* no callback, response is sent to ambigous single handler */ versus get('key', function(err, value) { /* this capability needs to be added */ });
04:23 <@Nexxy> styol, this is where some code would be handy :)
04:24  * etcetera also has a hard time believing this is good practice: https://github.com/iloire/cachirulovalleydirectory
04:24 < styol> Nexxy: this is what I'm trying to do presently http://pastie.org/4403790
04:25 < styol> Nexxy: though worth noting only this.get and this.prepend are setup to use the temporary object storing approach that in theory could result in a race condition
04:26 < styol> also the keys aren't being removed after responses and they should be
04:27 < styol> and the others that use the other approach are subject to the callbacks being mixed up as well with multiple requests due to race conditions, even more common than the temp approach
04:32 < AAA_awright> Anyone know of a simple script to convert colored console output to HTML?
04:33 < therealfakemoot> AAA_awright: Nope. That depends on the terminal.
04:34 < jgornick> hey guys, is there a recommended package to use which allows me to parse configs and also set configuration programatically?
04:34 < AAA_awright> therealfakemoot: Of course it depends on the terminal, that doesn't preclude the existance of a function to do so
04:35 < AAA_awright> And in any event 95% of the time you're talking about ANSI escape sequences
04:41 < ryanseddon> how can I kill a child process on windows? What signal do I send to a win32 box? kill('SIGHUP') works fine on osx is there an equivalent? 
04:42 < etcetera> anyone on best practices?
04:42 < etcetera> should a model object instance create a database connection? should there be connection pooling?
04:54 < ThyneNukeltonium> HAHA!!!!!
04:55 < ThyneNukeltonium> * Users on #Node.js: maleknet ThyneNukeltonium mattgifford niloy halfhalo Sam4242 pretty_function caffine blueadept idefine1 jscheel saikat Bwild __class__ Lee- gavin_huang lulzilla standoo khrome RichardBronosky orlandovftw \mSg langworthy timoxley yoklov firedfox_ willwhite thatguydan automata petschm Spion WillMarshall utu michaeldeol wereHamster ImBcmDth etcetera zdk _lleo rampr techthumb j
04:55 < ThyneNukeltonium> amesd__ localhost timeturner wingy_ joshthecoder wizonesolutions DTrejo
04:55 < ThyneNukeltonium> * Users on #Node.js: catilac igl jacobolus nat3 apraxas1 pneftali thealphanerd iwoj brainss x_ FIQ fivetanley boltR tlync jspiros schredder \ask abraxas AllStruck shanebo dgathright devaholic TimTim` bulatshakirzyano tomtomaso paulwe broofa jgornick McMAGIC--Copy wavded choo Sri19 davidbanham tn intripoon_ TheHippo1 ryanRT jergason nadirvardar Hamms eugeneware prettyrobots nonnikcam neoesque In
04:55 < ThyneNukeltonium> operable Hebo a_suenami cjm caasiHuang chayin_ bakadesu jocafa brooss
04:55 < ThyneNukeltonium> * Users on #Node.js: kolektiv heavysixer cliffano cletus joshfinnie tchopper Randomachiever crabdude YoY slide gregmoreno npmbro maqr hichaelmart tgriesser subbyyy joshgillies innociv nol2ter_work beeviz_ TomWij Delapouite nicholas_ Gaunt xocel forzan Flam9 eventualbuddha matej__ matejv jsemar arvidkahldev dazoe spectre256 billy jacobrask pieterv Hosh dpemmons Wa TomRone No9 _Renegade Benvie sa
04:55 < ThyneNukeltonium> mholmes darkreign bren2010 serapath Draggor wendall911 Axsuul tomb_ strax
04:55 < ThyneNukeltonium> * Users on #Node.js: jerrysv nicholasf jkridner elijah-mbp Leeol2 vu avalanche123 combataircraft Gryllida Yuffster_fun piezo_ ryanrolds_w_ KiNgMaR sinful_ ^rcaskey SvenDowideit salazr_ rhutchison_ [[zz]] dogmatic69 jkarsrud tuhis alitrix cce rgmarcha_ treph filleokus jmonay stbuehler rektide_ substans_ jackyyll flagg0205 vinc nail__ jzacsh_ chiel shajith_ teoh_ baer MrMaksimize augustl taquter_
04:55 < jacobolus> ThyneNukeltonium: erm...?
04:55 < ThyneNukeltonium>  jaequery stkrzysiak squeakytoy sawjig shama templaedhel blakmatrix ku
04:55 < ThyneNukeltonium> * Users on #Node.js: patcito dubenste1n georgy_ AvianusAsleepus shanlar gyaresu nlf kmiyashiro elbeardmorez supershabam stephank imarcusthis gmci FredC blevs NimeshNeema tat
04:55 < DTrejo> bancannon
04:55 < ThyneNukeltonium>  taterbase pokoli zemm rmill jayk marlun_ Proditor faulkner paveq truedat101 daleharvey Bennit Cr8 jolo2 stef einaros dazld chilts TheNumb barneybook Taar779 naquad mattly fly-away kassyvora amccloud jw___ polyrhythmic zk ghoti kraft don_jones zenazn jxie reid Fuu majek janmower mihamina tobmaster
04:55 < davidbanham> Maybe stop doing that.
04:56 < ThyneNukeltonium> * Users on #Node.js: digitalcakestudi felipecvo briancray gorbiz EvRide dmilith edr gila garrensmith dz0ny jonaslund jimt freewil andrewffff_ dubenstein githogori unchi_ ysael zodiak theBrettman ssvss balupton dominictarrsleep zivester niftylettuce magn3ts jrm2k6 oal Garrick sawrubh dscape dmrz guybrush creationix satyr SirFunk teixeira_ leonardo wao booo Guest94749 JackNorris saapas pyykkis od
04:56 < pretty_function> :\
04:56 < zak_> op me
04:56 < ThyneNukeltonium> yniec teadict_ tanepiper trb_ MerlinDMC Ted` mekwall paulbaumgart prasm lhb
04:56 < ThyneNukeltonium> * Users on #Node.js: onre cmr__ Tobbe_ bicranial_ zomg tomilaine simewn nsm tassmjau richardshaw ugisozols pig joeytwiddle philips_ tahu mscdex xSmurf criswell zak_ Swizec MitchW pwever tmpvar jimbot opus_ brainproxy dawolf Will| neumino NodeX roger_raymond jimrhosk1ns milky bentruyman aromasca dommy__ TehShrike chjj azend Slashbunny moonlite euphoria dan64 Shrink skunkwerks dested gildean drag
04:56 < zak_> op me plz
04:56 < ThyneNukeltonium> on _graham_ hlindset BennyLava Weasel-Soup ryanseddon ircretary olegp
04:56 < prettyrobots> Nexxy: Help!
04:56 < ThyneNukeltonium> * Users on #Node.js: codepal cmwelsh sir_tyrion AAA_awright @konobi rvagg foldedcat possibilities alek_b ajpiano wycats WarheadsSE pekim_ _br_ hakunin garann munro llrcombs distracteddev clee cryptix Fli-c omni5cience shaker MaxGaudronBNC EnosFeedler Robdgreat Pilate Validatorian SlexAxton optixx Mortchek SecretAgent Jygga nivardus russfrank przemoc ohcibi Epeli VesQ freeformz happosade purr ed
04:56 < jergason> Welp
04:56 < catilac> namshub
04:56 < zak_> Nexxy: ban
04:56 < ThyneNukeltonium> wardly alta samstefan kranius ed2093 mephux zentooo chrisdickinson xerox
04:56 < jergason> now alt least I know ignore works
04:56 < ThyneNukeltonium> * Users on #Node.js: chrisinajar yenz_ jn jcap SubStack dec slickplaid else- mattikus orospakr krishna rook2pawn @maxogden flexd Drager herzogharker quinnirill Guest ktrask cpg Daegalus @jayne iksik med_ veturi xat- PhilK chadi russell_h Martz visnup_ ivaldi cainus patspam keeto othiym23 qbit gshipley vhost- legind Ytserman antti_s gsf i
04:56 < Delapouite> ThyneNukeltonium: you ruined my nap! damn you
04:56 < ThyneNukeltonium> * Users on #Node.js: skeptic plato TheFuzzball rtgibbons[away] brianloveswords rj-code ptrlv bburhans SomeoneWeird bmatusiak akshayms yuwang Typo kaen metellus ljharb callumacrae thedjinn Nuck cbobo superjoe radiodario doki_pen Derander txxt matt_c retornam pontius Garo_ stride gf3 MrNibbles sj26 trodrigues hide- appr nuba jeedey tec27 @ryah joschi @marienz chnops ShaneHudson jvolkman duckspeak
04:56 < thealphanerd> ahhhhhh
04:56 < ThyneNukeltonium> er zedas ybit2 niallo hipsterslapfight tellnes kanzure sugyan yorick CIA-93
04:56 < ThyneNukeltonium> * Users on #Node.js: epa_ doffm gaYak zorzar mikegerw1tz pvilchez er1c_ apa-_ coffeecup Rantanen @tomaw Ls_Away Industrial wankdanker psino Connorhd zz_lazyshot ephesius topaxi leptonix Kester frewsxcv pandark_ Gottox ybit stylus ootje RushPL kennethd sh1ftpgdn zaheera_ deltab trepan elliottcable Cheery radmiraal
04:56 < AAA_awright> ops plz
04:56 < freewil> motherfucker
04:56 < chnops> what the
04:56 < thealphanerd> loud noises
04:56 < ThyneNukeltonium> jacobolus, a test.
04:56 < jacobolus> ThyneNukeltonium: yo jackass, shut the fuck up
04:56 < FredC> wtf
04:56 < firedfox_> what's this?
04:56 < ThyneNukeltonium> And it worked!
04:56 < ThyneNukeltonium> I PINGED ALL 737 OF YOU DIDN'T I? WHY ISN'T THERE A SUDDEN UPTICK OF CHAT ACTIVITY?
04:56 < ThyneNukeltonium> There KINDA is BUT IT'S NOT FAST ENOUGH!
04:56 < digitalcakestudi> where is the op?
04:56 < gkatsev> damn, just when we put opbots on timeout :/
04:56 < theBrettman> lol
04:56 < jergason> but this is also pretty funny
04:56 < ThyneNukeltonium> gkatsev, like idoru?
04:56 < prettyrobots> LOL.
04:56 < thatguydan> i'm laughing
04:57 < bren2010> Hello
04:57 < bren2010> Does that help?
04:57 < wycats> ThyneNukeltonium: good thing this chat room is using IRC and not node
04:57 < chnops> what is going on
04:57 < zak_> ThyneNukeltonium: silence is golden
04:57 < wycats> unsure if node could handle the uptick in traffic
04:57 < kaen> made me look at my computer
04:57 < jacobolus> ThyneNukeltonium: oh, you're not just a bot!
04:57 < kaen> YOU DICK
04:57 < wycats> jacobolus: he's a troll!
04:57 < shama> it's probably written in node... we can only blame ourselves :|
04:57 < wycats> a wild troll appears
04:57 < kaen> lol
04:58 < jergason> wycats is indistinguishable from a parody of himself when talking about node
04:58 < AllStruck> wycats: really why not? (node handling traffic)
04:58 < jergason> :)
04:58 < thealphanerd> so since everyone is here…
04:58 < thealphanerd> anyone know any good solutions for doing multi-touch client side?
04:58 < AllStruck> jergason: that might explain it
04:58 < jergason> hammer.js i think?
04:58 < jergason> thealphanerd: ^
04:58 < thealphanerd> multiple fingers
04:58 < thealphanerd> like three at a time
04:58 < thealphanerd> for dom elements
04:59 < jergason> thealphanerd: http://eightmedia.github.com/hammer.js/
04:59 < jergason> mebbey
05:01 < wycats> jergason: cooooonfirm
05:01 < wycats> jergason: Poe's Law!
05:01 < wycats> thealphanerd: you can do multitouch on the server?
05:02 < thealphanerd> well maybe specifying client side was superfluous
05:02 < wycats> thealphanerd: #jquery confirm/deny
05:02 < wycats> :P
05:02 < wycats> jergason: I am watching to see whether the node community embraces generators
05:02 < thealphanerd> probably a better place to ask
05:02 < wycats> once they land in v8
05:02 < thealphanerd> but I like you guys :D
05:02 < wycats> http://taskjs.org/ should be a game changer for node
05:04  * wycats is not trolling
05:04 < AAA_awright> I... wat happen... is this I don't even
05:04 < jergason> or just really subtly
05:04 < wookiehangover> dave herman was talking about that at jsconf... is it still being worked on?
05:04 < prettyrobots> How do I get the socket/port of a request.get ?
05:04 < wycats> wookiehangover: generators will be in ES6
05:05 < wycats> http://wiki.ecmascript.org/doku.php?id=harmony:generators
05:05 < gkatsev> already in mozilla
05:05 < gkatsev> s/mozilla/spidermonkey/
05:05 < wycats> wookiehangover: task.js is really just a tiny shim on top of generators that uses Promises/A as a point of standardization
05:05 < wycats> it will be in V8 soon
05:05 < gkatsev> idk whether current implementation is spec complient
05:06 < gkatsev> let for example, isn't
05:06 < timoxley> prettyrobots you mean from the req object?
05:06 < prettyrobots> Yes.
05:06 < prettyrobots> I've tired the socket event.
05:06 < Benvie> been wondering when generators/iterators would land in v8
05:07 < prettyrobots> OOh GOT IT!
05:07 < AAA_awright> req.socket.connection.someFunctionHere()
05:07 < AAA_awright> For some function for someFunctionHere
05:08 < timoxley> prettyrobots you should be able to just parse it out of the req.headers.host
05:09 < timoxley> not sure if it's available somewhere more elegantly
05:09 < wycats> gkatsev: what's wrong with let?
05:09 < prettyrobots> In the client?
05:09 < wycats> let is in ES6
05:09 < prettyrobots> Client port.
05:09 < wycats> http://wiki.ecmascript.org/doku.php?id=harmony:let
05:10 < thatguydan> Does anybody know if socket.io respects cookies from a load balancer when doing xhr-polling? i.e. sticky sessions?
05:10 < thatguydan> google isn't being clear
05:11 < gkatsev> wycats: oh, I mean current implementations aren't spec complient. nothing wrong with it, can't wait for it.
05:12 < prettyrobots> Okay. Anyone have any thoughts on NAT traversal?
05:12 < prettyrobots> For TCP?
05:13 < Benvie> er
05:14 < Benvie> the generators in firefox don't require * next to the function name still?
05:14 < gkatsev> probably
05:15 < Benvie> looks like it
05:15 < gkatsev> so, yep, not spec complient
05:15 < gkatsev> how would yield work with fat arrow? or would it not?
05:15 < Benvie> it does you just need the star
05:16 < gkatsev> actually, the start is optional
05:16 < gkatsev> hm...
05:16 < gkatsev> ah, never mind, it is required for generator functions
05:17 < Benvie> yeah it's infectious
05:17 < gkatsev> Benvie: where would you put the star in the fat arrow syntax?
05:17 < Benvie> yeah it changes the semantics
05:17 < Benvie> uh I dunno
05:17 < gkatsev> just read this: "The function syntax is extended to add an optional * token" and jumped to conclusions on my "jump to conclusions mat"
05:18 < Benvie> there's no mention of how they compose with arrow functions
05:18 < Benvie> maybe they don't or it's just not fleshed out yet
05:19 < gkatsev> most likely the latter
05:19 < gkatsev> anyway, sleep time
05:19 < gkatsev> night
05:24 < shama> prettyrobots: nanananana natman! https://github.com/marak/natman havent used it but heard about it today 
05:27 < prettyrobots> shama: That is a wrapper around this: https://github.com/TooTallNate/node-nat-pmp
05:28 < prettyrobots> So, thanks.
05:29 < _Tristan> I've extended net.Socket but I don't know how to get net.createServer to use my new class. Any ideas?
05:44 < caasiHuang> wut?
05:45 <@Nexxy> okay!
05:45 < astropirate> Hello
06:19 < jhsto> Hello, could someone write me a snippet to connect to my MongoHQ database? I really cant get it working.
06:20 < jhsto> I would just like to find and add documents to one collection, but I can't work it out with the native module.
06:20 < jhsto> Also, can I use mongoose to connect to it?
06:32 <@Nexxy> jhsto, http://lmgtfy.com/?q=connect+node+mongohq+mongodb+native
06:32 < jhsto> i actually got to this point now
06:32 < jhsto> lol
06:32 <@Nexxy> celebrate! \o/
06:33 < jhsto> looks like it was because i had not installed some parser
06:33 < jhsto> getting a different error now lol
06:34 < jhsto> Nexxy, looks fine now, I guess I need to say thank you
06:35 <@Nexxy> jhsto, thank yourself! you did it :D
06:35 < jhsto> haha
06:35 <@Nexxy> ^-^
07:18 < spolu> j nodejitsu
07:18 < deoxxa> WRONG
07:22 < jhsto> Meh, I'm still seeing question marks on my string... Any idea how to convert these to real characters?
07:22 < anu_free> hello, i am new to node.js  i want to know the difference between socket.io and clone and which context they are used
07:22 < jhsto> This come even when inserting them into a database.
07:22 < jetienne>  /join #socket.io
07:24 < deoxxa> i think tonight i'm going to play with filepicker.io, it's pretty neat from what i've seen
07:24 < deoxxa> anyone got any tips?
07:31 < spolu> deoxxa: WRONG? :)
07:32 < Raynos> building streaming apps: https://github.com/Raynos/stream-chat#the-interesting-bits
07:32 < deoxxa> spolu: completely
07:33 < spolu> deoxxa: well just a typo!
07:33  * deoxxa typos spolu's head off
07:33 < deoxxa> gone!
07:33 < deoxxa> typos kill, people!
07:36 < nonuby> i would like to send multiple discrete JSON payloads to a socket, what the best practice for detecting when i have a full JSON object, given the data might not be pushed atomically due to exceeding 4kb
07:39 < [AD]Turbo> hi there
07:41 < spolu> deoxxa: where did you hear of filepicker.io?
07:47 < garthk> SubStack alive? Trying to nut out bouncy's undocumented error handling behaviour.
08:00 < slaskis> hey SubStack, didn't you have a bunch of repos for metrics? like stddev and stuff?
08:00 < chakrit> is it just me or npm is very slow today?
08:04 < SubStack> slaskis: I started hacking on some metrics experiments
08:05 < SubStack> garthk: req and the stream you get back from bounce() could emit errors
08:06 < slaskis> SubStack: are they gone now? i remember them but couldn't find them now when i might have use for them :P 
08:07 < tassmjau> slaskis: hey, you from publicclass? :)
08:08 < slaskis> tassmjau: haha, yeah
08:12 < tassmjau> slaskis: :) recognized you handle, I used some of your guys haxe-stuff couple of years ago, if I'm not mistaken..
08:14 < slaskis> tassmjau: oh really? did it work out for you?
08:17 < SubStack> slaskis: https://github.com/substack/gtest.js and unfinished https://github.com/substack/metri
08:21 < slaskis> SubStack: oh great, thanks!
08:22 < tassmjau> slaskis: it did, I recall a port of minimalcomps, and a state machine for puremvc :)
08:24 < sx> i'm having trouble sharing my socket.io connection across multiple apps. any idea what is wrong with this setup: in index.js, module.exports.io = io;    in app1.js:  var io = require('/opt/index.js').io;
08:24 < sx> it resolves as undefined
08:38 < SomeoneWeird> sx; try just exports.io = io;
08:38 < jmls> got a really strange problem - node quits after getting this error : "TypeError: Object #<Object> has no method 'resetMaxAge'"
08:38 < jmls>  (see full error at http://pastebin.com/9PnRSpfL)
08:39 < jmls> any idea on what causes this ?
08:39 < SomeoneWeird> we need code too
08:39 < sx> SomeoneWeird: trying that now.
08:40 < freewil> jmls, you're calling resetMaxAge() on the wrong object
08:40 < freewil> or it's not defined for the object you're calling
08:40 < sx> SomeoneWeird: same problem
08:40 < jmls> freewil: that's my problem - I have no idea where resetMaxAge is coming from. It's not in my code.
08:41 < freewil> oh - looks like it's something within mongoose
08:41 < freewil> you're probably using mongoose wrong somehow
08:41 < jmls> I _do_ have the following : 
08:41 < jmls> app.use(express.session({
08:41 < jmls> 		cookie	: {maxAge: 60000 * 20}, // 20 minutes
08:42 < freewil> what version of connect/express are you using
08:43 < jmls> express --version == 3.0.0rc2
08:45 < freewil> jmls, the cookie middleware changed recently - i think it has something to do with that
08:46 < freewil> could you try with express 2.x
08:47 < jmls> ok, (my newbieness showing now), how do i downgrade from 3.0 to 2.x ?
08:48 < freewil> npm install express@2.x
08:48 < jmls> thanks. does this need reporting ?
08:49 < freewil> maybe
08:50 < freewil> if it's a bug i think it's probably within the mongoose middleware you're using
08:50 < freewil> or you could just be calling the cookie/session middleware in the wrong/old way
08:51 < freewil> if you search on express/connect's github issues you will probably find a similar issue
09:03 < jmls> freewil: found the problem
09:03 < slaskis> tassmjau: ah yes, those old projects :) still using haxe?
09:03 < jmls> I had req.session = {somefield:'test'};
09:03 < tassmjau> sometimes in my spare time... not at work.. 
09:04 < tassmjau> slaskis: ^^
09:04 < freewil> jmls, ah - yeah you can't redefine the session object can you?
09:04 < jmls> I needed req.session.somefield = 'test';
09:04 < freewil> yeah ok cool
09:05 < freewil> i just set the session var to null if i want to "unset" it
09:05 < freewil> then i also do req.session.regenerate() for logouts
09:06 < freewil> or actually i do destroy() for logouts
09:11 < garthk> SubStack: thanks. Just trying to decode it now. Something's wrong in my logger, which isn't helping.,
09:13 < garthk> I think something's not quite right with the pausing, but it might be in mux-demux. Bouncy is getting a request with a method of "[\"A23E011E1CB84B06\",\"PAUSE\"]".
09:13 < nonuby> is it possible to server.listen on an existing unix domain socket? (i.e. one not shutdown cleanly)
09:13 < garthk> Parsley then, as you'd expect, throws an error because it doesn't have the foggiest idea how to deal with an "[\"A23E011E1CB84B06\",\"PAUSE\"]".
09:14 < garthk> So, I'm trying to figure out why calling .pause on the other end of mux-demux so I can open a connection before piping…
09:14 < garthk> … is causing bouncy to call the bounce callback.
09:24 < xico> Hello everyone
09:26 < garthk> Ok, good: no new connections to the bouncy() server. That'd be weird. So, I've just got to figure out how I'm causing bouncy to fall over with a parsley error when it's already supposed to have finished handling the headers.
09:27 < garthk> Maybe I should just ditch mux-demux and use dnode on the main connection to request new, subservient connections for the brokering.
09:29 < SubStack> garthk: parsley has bugs I think
09:41 < garthk> SubStack: might well do. I hope they don't bite me if I reorganise.
09:49 < garthk> Maybe it's just mux-demux not liking pausing, somehow. Or, parsley. Need more prodding.
09:49 < garthk> afk
09:59 < mobilegamelabs> hi
10:04 < cebor> i it possible to run an app via node.js, only in the local network ??
10:05 <@Nexxy> cebor, yes
10:06 < cebor> i have setup a proxy_pass to localhost:3000,  but idont't want the access via my_isp_ip:3000
10:06 <@Nexxy> cebor, then... don't... proxy it?
10:07 < SomeoneWeird> if you don't forward port 3000 on your router then people won't be able to connect to it cebor 
10:07 < cebor> this bundle runs on a server
10:07 <@Nexxy> sounds like cebor is using nginx
10:07 < cebor> yes
10:07 < deoxxa> #nginx is over there ->
10:07 <@Nexxy> so if you want node to only listen locally
10:07 <@Nexxy> *don't* set up a proxy_pass to the app
10:08 < cebor> no thats not my problem
10:08 < cebor> i want that node runs localy
10:08 < cebor> i dont know how
10:08 < deoxxa> cebor: the likely answer is "listen on localhost"
10:09 < deoxxa> cebor: when your "app" (whatever it may be) calls .listen on whatever service it's creating, instead of just doing .listen(3000), do .listen(3000, "127.0.0.1")
10:09 < deoxxa> (there's a lot of guessing there)
10:09 < deoxxa> (you haven't given us a lot of information to go on)
10:09 < cebor> ah ok, 
10:09 < cebor> sry im new @ node
10:09 < deoxxa> no problem, everyone starts somewhere :)
10:10 <@Nexxy> did I just see deoxxa use a smiley face in a non-sarcastic manner?!
10:10 <@Nexxy> O_O
10:10 < deoxxa> also, you'll probably want to be using environment variables or something to control what port/host to listen on. i use nconf personally (you can find it on npm).
10:10 < deoxxa> Nexxy: drink bleach :)
10:10 < cebor> i want to run a meteor-application, is there any startup parameter ??
10:11 < deoxxa> OH GOD NOT METEOR
10:11 < cebor> :D
10:11 < deoxxa> i'll be taking that smiley face back now
10:11 <@Nexxy> rofl
10:11 <@Nexxy> cebor, you're on your own when it comes to metor
10:11 <@Nexxy> meteor*
10:11 < cebor> i see
10:11 <@Nexxy> I have no clue how it works
10:12 < deoxxa> meteor uses its own build system and stuff, it's horrible
10:12 < SomeoneWeird> +1
10:12 < deoxxa> "we don't quite understand npm, so we'll make our own"
10:12 < cebor> ok, thx anyway :)
10:12 < deoxxa> "also what do you mean by 'upstream'?"
10:13 < deoxxa> cebor: what is it that you want to do with meteor? you can often achieve similar results with other packages
10:13 < flexd> KILL THE HIGHLIGHTER WITH FIRE :(
10:13 < deoxxa> if it's just the cool "when something happens on the server, i see it in my browser! awesome!" part, you can do that with socket.io or any of the other websocket abstraction libraries
10:14 < cebor> i want to run a site: with server/client  javascript
10:14 < deoxxa> yeah, you don't need meteor for that
10:14 < cebor> opa ?
10:14 < deoxxa> nor that :P
10:15 < SomeoneWeird> you need node, for that
10:15 < SomeoneWeird> lol
10:15 < deoxxa> it sounds like what you really want is realtime communication between the client and the server
10:15 < cebor> yeah
10:15 < deoxxa> you should take a look at socket.io - it's a great place to get started
10:15 < flexd> socket.io !
10:15 < flexd> Is awesome :)
10:16 < cebor> i try
10:16 < deoxxa> now socket.io isn't your only option, and it might not even be your best option, but it's definitely got the most examples and support resources
10:17 < deoxxa> but yeah, you'll get a lot more control over how your application works if you put it together on your own (instead of using meteor)
10:17 < deoxxa> also you'll understand more of it, instead of it being a magical black box of realtime "stuff"
10:18 < pringlescan1> Is there a way to set a socket timeout on an http.get() request, or do I have to use an http.request()?
10:19 < cebor> looks nice
10:19 < deoxxa> isn't http.get pretty much just http.request with the method set to "GET", pringlescan1?
10:19 < pringlescan1> I'm not one hundred percent sure I'm having a ton of trouble running out of available http agents.
10:19 < SomeoneWeird> "but it's definitely got the most examples" < wouldn't count on it
10:20 < flexd> The docs are horrible
10:20 < SomeoneWeird> they are
10:20 < flexd> But its still pretty easy to get going with
10:20 < deoxxa> SomeoneWeird: i might be out of date there, but when i was getting started with it about a year back it definitely had more examples than anything else i could find
10:21 < SomeoneWeird> its documentation sucks now
10:21 < deoxxa> SomeoneWeird: feel free to suggest alternatives, i know there are a lot now!
10:21 < SomeoneWeird> nah socketio is still the best imo
10:21 < deoxxa> mmm
10:22 < standoo> anyone here use solaris?
10:23 < standoo> or open indiana environment for their node server?
10:23 < pringlescan1> Why not smart.os? or whatever the joyent sauce is?
10:25 < mmalecki> standoo: nodejitsu is running few thousands of smartos servers, if that counts as solaris
10:25 < mmalecki> dtrace helped us solve few real problems already, would recommend
10:25 < mmalecki> compiled addons can be quite of a pain tho
10:26 < lucadc> hi there
10:26 < lucadc> I'm trying to send gzipped data over a HTTP POST request (using python)
10:26  * deoxxa points to ##python
10:27 < lucadc> at the server side i have a node.js HTTP server which receives the POST
10:27  * deoxxa points to #node.js
10:27 < deoxxa> oh wait
10:27 < lucadc> and it should gunzip the data received in the POST :)
10:27 < lucadc> I'm using gzip-buffer for the purpose
10:27 < deoxxa> http://nodejs.org/docs/latest/api/all.html#all_zlib
10:27 < deoxxa> it's in core now \o/
10:28 < deoxxa> what version of node are you using?
10:28 < lucadc> wait
10:28 < lucadc> 0.6.12
10:28 < lucadc> old stuff?
10:28 < deoxxa> ah, that's a bit old now
10:29 < lucadc> ok, I trusted Ubuntu (naive mistake)
10:29 < deoxxa> not sure if it had zlib
10:29 < deoxxa> checking now
10:29 < lucadc> I'm gonna compile the code
10:29 < deoxxa> that usually works better :)
10:30 < lucadc> yep
10:30 < deoxxa> oh, 0.6.12 has zlib
10:30 < deoxxa> http://nodejs.org/docs/v0.6.12/api/all.html#all_zlib
10:30 < deoxxa> still a good idea to upgrade though
10:30 < deoxxa> there've been a lot of enhancements and bug fixes since then
10:31 < lucadc> yep, I'm compiling the code
10:31 < lucadc> so there's no point in using gzip-buffer (third party)
10:31 < deoxxa> nope
10:31 < deoxxa> not anymore
10:32 < lucadc> ok, thanks
10:40 < deoxxa> damn, smartos looks cool
10:41 < sechrist> anybody here used streamline enough to look at an issue I'm hitting with me? I will buy you a beer in SF
10:42 < SomeoneWeird> may as well ask anyway, somebody else may be able to help sechrist 
10:48 < lucadc> deoxxa, when I inflate the received buffer it returns an empty buffer (but no error occurs)
10:52 < lucadc> http://pastebin.com/4qq3cxsJ
10:57 < technovangelist> ##javascript
10:57 < whiskers75> technovangelist: what about it?
10:57 < technovangelist> sorry, wrong screen
10:58 < whiskers75> ok
11:06 < lucadc> deoxxa,  I think the problem is that i have to url decode the received POST data
11:07 < deoxxa> you're sending gzip compressed data as urlencoded?
11:07 < lucadc> yep
11:07 < deoxxa> you might want to consider a straight post (or maybe put) body
11:08 < deoxxa> i.e. `content-type: application/octet-stream' or so
11:08 < lucadc> ok
11:09 < deoxxa> in curl, it'd be like `curl -X POST -H 'Content-Type: application/octet-stream' -d @file.gz http://some.url/you/know/about'
11:10 < deoxxa> is the data something you have to deserialise like JSON or is it some kind of other data that you're writing to disk or something?
11:16 < flexd> app.get('/', routes.index);
11:16 < flexd> app.get('/about', routes.about);
11:16 < flexd> Could someone tell me why the first one works, but the second one does not? I basically just copied the line (and the index.js in my routes folder), and it still says 404 :/
11:17 < flexd> Thats express by the way, I just can't figure out why its being like this
11:17 < lpin> flexd you exported routes.about in your routes moduel?
11:18 < flexd> routes is a folder. In that folder I have index.js and about.js, which looks like this
11:18 < flexd> exports.index = function(req, res){
11:18 < flexd> ... }
11:18 < flexd> about.js is just a copied index.js, with exports.index renamed to exports.about
11:18 < flexd> and the index works... but about returns a 404 :s
11:18 <@Nexxy> flexd, where do you require about?
11:19 < flexd> var express = require('express')
11:19 < flexd>   , routes = require('./routes')
11:19 <@Nexxy> so you're not
11:19 < wltsmrz> He just said that about is exported along with index in that file.
11:19 < flexd> I am not requiring index either..? I am requiring routes
11:19 <@Nexxy> unless you're requiring about inside of index.js
11:19 <@Nexxy> you are, it's just that index.js is implied 
11:19 < flexd> Hm
11:19 < flexd> damnit
11:19 <@Nexxy> if it exists and your require is a directory
11:19 < flexd> Nobody said anything about that :p
11:19 <@Nexxy> it will grab it
11:19 < flexd> So I need to require about inside the index?
11:19 <@Nexxy> flexd, either 1) require about in index
11:19 <@Nexxy> and export it as exports.about
11:20 <@Nexxy> well, yeah just that
11:20 < flexd> Odd that the express framework says nothing about that.. it just a generated skeleton
11:20 <@Nexxy> express doesn't document anything
11:20 <@Nexxy> ever
11:20 <@Nexxy> so don't be surprised :)
11:20 < flexd> Hehe
11:20 < theblackbox> hello all, sorry this is such a vague one: I'm getting 'incomplete startup packet' in my postgres logs when doing pg.connect(conString, function(err, client) { console.log('\n connected....') }); and I can't figure out for the life of me what has gone wrong… I don't think I've changed anything that should be effecting this (haven't touched conString) and as you can see it's a very simple query…. just wanted to rule out anything obvious
11:20 < theblackbox> might not be looking into? anyone got any hints? Expecting it to be a psql issue tbh
11:21 < patrick_> hi, how can I run multiple processes for node.js for load-balancing? should I put them on different ports and punt in front of them haproxy or is there another way?
11:21 < flexd> Nexxy: right, i just need to do var aboutpage = exports.about = require ('about'); then ? since its in the same folder as index
11:21 <@Nexxy> patrick_, child_process
11:22 < flexd> This kind of defeats the purpose of having multiple files :/
11:22 <@Nexxy> flexd, sure
11:22 < wltsmrz> There's cluster, patrick_ http://nodejs.org/docs/latest/api/cluster.html
11:22 <@Nexxy> flexd, your index should be the "glue" for the rest of your routes
11:22 < patrick_> Nexxy: wltsmrz , reading, thanks!
11:23 < flexd> Nexxy: right :)
11:23 < flexd> Got a 500 TypeError thing now heh
11:23 < flexd> I think I need to change how about.js looks
11:24 < flexd> Don't I? Its the same as index.js now, just exports.about, which I guess makes it twice?
11:24 < patrick_> one more thing, I've a small node.js app which uses redis, in order to insert the initial data i need to contact various external servers, but after a while some node.js servers died... how can I debug this? any log or something like that that shows the error (or if it's the system killing them for any reason)?
11:24 < lpin> anyone familiar with V8 GC? trying to debug an issue on node-canvas
11:25 < lpin> https://gist.github.com/3284497
11:25 < flexd> Nexxy: I mean, I am doing var about = exports.about = require('./about').about; now (which works), but if I change about.js to something I could do var about = exports.about = require('./about'); ?
11:26 < flexd> Just unsure if I can just do exports.this = or something like that
11:26 < lpin> basically closure_destroy call V8::AdjustAmountOfExternalAllocatedMemory(-closure->max_len);
11:26 <@Nexxy> flexd, you should just be doing module.exports = function about(req, res, next) { // ... render or w/e };
11:26 < flexd> ah
11:26 <@Nexxy> then in index you can just do exports.about = require('about')
11:26 < lpin> but that call derefence the Buffer
11:28 <@Nexxy> well, './about'
11:28 <@Nexxy> **
11:28 < flexd> Yeah, I was about to say that :) but that was what I was looking for, thanks!
11:28 < flexd> I did not know I could do module.exports = function name();, thought I had to do exports.namehere = function()
11:30 <@Nexxy> flexd, ideally you should only be exporting one thing from each module
11:30 <@Nexxy> it makes sense in the case of index to export all of your routes together
11:31 <@Nexxy> but usually module.exports is the best way to go
11:31 <@Nexxy> it cuts down on redundancy too
11:31 < flexd> Yeah
11:31 <@Nexxy> instead of having to do require('mymodule').mymodule
11:31 <@Nexxy> MYMODULE = REQUIRE('MYMODULE').MYMODULE
11:31 <@Nexxy> what I'm trying to say is... IT'S MY MODULE
11:31 < flexd> I have a module ( an api client ) I have been writing at work, which is kind of stupid at the moment
11:31 < flexd> Where you have to go var zabbix = new z.Client('http://zabbix.server.com/api_jsonrpc.php','username', 'password');
11:32 < flexd> the Client bit is entirely pointless, there is no server part :p
11:32 < flexd> Maybe I can clean that up now hm
11:32 < deoxxa> APP.GET("/", REQUIRE("./INDEX.CS"))
11:32 <@Nexxy> "if it ain't broke don't fix it"
11:32 < flexd> It's because I am doing https://github.com/flexd/zabbix.js/blob/master/lib/zabbix.js 
11:32 < flexd> True, it works
11:33 < flexd> But I still feel I could just remove the Client bit 
11:33 < flexd> or at least should :
11:33 < flexd> looks a bit claner
11:33 < flexd> cleaner*
11:33 <@Nexxy> people don't look at code
11:33 < flexd> anyway, my first module, I guess its okay with being a bit of a mess :)
11:33 <@Nexxy> yeah for sure
11:33 <@Nexxy> you should see some of my early projects
11:34 < flexd> I need to stop it from throwing exceptions and rather return error codes though
11:34 < theblackbox> =S don't get it
11:34 < flexd> Kind of silly for an API request to bring down the whole server :D
11:34 <@Nexxy> lol yes
11:34 < flexd> But couldn't I just replace var Client = 
11:35 < flexd> or rather hum, just replace exports.Client = Client with module.exports = Client? :p
11:35 < flexd> Problem solved!
11:35 <@Nexxy> flexd, yup
11:36 <@Nexxy> thatguydan, I love your blocks
11:36 < thatguydan> Cheers!
11:37 <@Nexxy> thatguydan, may I query you for a moment?
11:37 < thatguydan> sure, no worries
11:39 < flexd> Hm, can you pass parameters to a require?
11:39 < ert> while trying out libuv. #include <uv.h> gives error. I got the source from git and gave -I/path/to/libuv/include . that didn't work too. 
11:39 < ert> undefined reference to `ev_default_loop_ptr' and many such 
11:39 < ert> errors
11:40 < deoxxa> ert: you have to link with uv.a
11:40 < SomeoneWeird> flexd, yep
11:40 < deoxxa> i.e. `gcc -o hello hello.c /path/to/libuv/uv.a'
11:40 < ert> deoxxa: can you please tell me how to do it? -ld -luv.a something like that
11:40 < ert> oh
11:40 < ert> okk
11:40 < SomeoneWeird> var a = require('a')(params, here); < flexd 
11:41 < deoxxa> ert: also, #libuv is great for when you get into it more - the guys in there are really helpful
11:43 < ert> thanks!
11:49 < flexd> SomeoneWeird: excellent :)
11:49 < flexd> Not sure if it looks neater
11:49 < flexd> Perhaps I should just enable the passing of an options hash
11:49 < flexd> var zabbix = require ('../lib/zabbix')('http://zabbix.server.com/api_jsonrpc.php','username', 'password'); does not look much better than var zabbix = new z.Client('http://zabbix.server.com/api_jsonrpc.php','username', 'password');
11:53 < whiskers75> how do I create a JSON file so that properties of it can be read and written to?
11:57 < flexd> whiskers75: can't you just have a object you save whenever you do changes?
11:58 < whiskers75> flexd: I'm building a MUD, and want to have different files for everyone
11:58 < whiskers75> flexd: could you give me some advice on how to do that?
11:58 < flexd> a MUD?
11:58 < flexd> I've heard the term, I just can't remember what it is.
11:58 < whiskers75> Multi User Dungeon
11:59 < whiskers75> via telnet
11:59 < whiskers75> using a REPL
11:59 < flexd> Ah
11:59 < cletus> Multiple Urethra Discossa, a serious southasian malady.
11:59 < flexd> I think I would probably just an actual database
12:00 < whiskers75> ok, how?
12:00 < flexd> mysql? pgsql?
12:00 < flexd> It kind of depends what you want to do.
12:00 < flexd> What do you want to store? Their every move? Their progress?
12:01 < whiskers75> I just need something simple :) To store current location, items (an array), creatures (an array), and more arrays and values
12:02 < flexd> well, perhaps something like redis? I'm not really that good with databases
12:02 < flexd> But I have tried out redis a bit, its nice if you do not need relations
12:02 < whiskers75> ill look into redis. thanks!
12:02 < flexd> Maybe someone else here have some tips :p
12:03 < flexd> redis is nice for incrementing counters, and you could easily store items and such too with sets and hashes 
12:03 < whiskers75> looks excellent. thanks a lot!
12:04 < flexd> You could have a set of items (like an array), a hash for the user with stuff, or several sets named/keyed like inventory:<userid>
12:04 < flexd> anyway, let me know how it turns out.. sounds fun :p
12:05 < flexd> also, why do I feel like I've talked to you before? Your nick looks so familiar :o
12:05 < whiskers75> flexd: i think you have :)
12:05 < whiskers75> flexd: you can follow the repo at github.com/whiskers75/creativemud
12:06 <@Nexxy> flexd, you were complaining @ him about the opper bots ;P
12:07 < whiskers75> flexd: and they're back :) ##node-irc-bots
12:07 < flexd> looks cool
12:07 < flexd> OH
12:08 < flexd> Nexxy: haha, I knew it :p
12:08 < flexd> whiskers75: I have my own bot testing channel of doom, makes it so easy to be noisy and not get complaints :p
12:08 < whiskers75> flexd: yeah - no complaints
12:10 < flexd> anyhow.. 14:10
12:11 < flexd> I better eat breakfast soon, or I am going to miss lunch!
12:11 < whiskers75> flexd: ok
12:11 < whiskers75> wait... what?
12:13 < flexd> :D?
12:21 < flexd> Everyone eats breakfast around 14:20 right, it's not just me being lazy and getting up really late? :p
12:21 < whiskers75> flexd: I eat breakfast at 9.
12:21 < whiskers75> flexd: you eat at 2 pm?!
12:22 < slickplaid> that's called late lunch
12:23 < pringlescan> Howdy, I have an unhandled 'error' event that keeps ocurring randomly when using http.get() : Error: Parse Error
12:23 < pringlescan>     at Socket.socketOnData (http.js:1356:20) … I have an error handler on it and even tried putting it in a try {} catch {} block and I still get the error.
12:24 < flexd> whiskers75: I am not working this week, and I woke up at like 11
12:24 < flexd> Just been coding stuff, easy to forget to eat :)
12:27 < theblackbox> damn, that's rather infuriating….
12:27 < theblackbox> one module stalls on the db insert query, the other rolls straight through it like a hot knife through butter....
12:29 < whiskers75> flexd: ok
12:29 < standoo> if i launch a child process and the parent process terminates unexpectedly, will the child process be still available?
12:30 < jrajav> Does anyone know what childprocess.exec needs in terms of system api's, libs, etc.?
12:31 < jrajav> I'm trying to run node in a minimal chroot and I have all the libs it's dynamically linked to, along with its own /usr/lib and /usr/include
12:31 < jrajav> However, when I call exec it gives "execvp(): file not found"
12:31 < pringlescan> What should I do if there's an unhandled error in Node's code, not mine? Should I file a bug report? 
12:32 < flexd> pringlescan: You should probably start by posting the entire error and some code :)
12:32 < flexd> here
12:32 < whiskers75> pringlescan: yeah, you probably should - but not without checking
12:32 < whiskers75> here
12:32 < flexd> Might just be something you are doing
12:33 < pringlescan> I'll add one more check because there's only one entry in google for "at Socket.socketOnData (http.js:1356:20)" but I guess the line numbers end up being version dependent. 
12:33 < RLa> jrajav, isn't that the executable does not exist or has no executable bit set?
12:33 < jrajav> RLa: Yes, very likely
12:33 < jrajav> RLa: But *what* executable?
12:34 < RLa> the one you want to excute through exec?
12:34 < jrajav> Oh
12:34 < jrajav> Hm.
12:34 <@Nexxy> standoo, if you specify { detached : true } in the options when you spawn the process, yes
12:34 < jrajav> Didn't think of that; let me try it
12:36 < standoo> Nexxy: form which version of nodejs is this available?
12:38 < whiskers75> jrajav: i dont think any command in unix ends in ()
12:38 < jrajav> It's not a command
12:38 < jrajav> It's a C or C++ API call
12:38 <@Nexxy> standoo, it might be 0.8.x
12:38 < whiskers75> oh
12:39 < flexd> By the way (again), does anyone know of either a module or just a snippet with a regex that will match all URLs in a string?
12:39 < flexd> I want to capture URLs, but what I've found on the net so far is cutting stuff off on certain urls hm
12:41 < whiskers75> flexd: google can be irritating when it doesn't catch on to what you want
12:42 < flexd> Yeah :
12:42 < whiskers75> flexd: poor smiley! give it a mouth
12:42 < flexd> Does not help that english is not my first language, so I am probably searching for something odd.
12:43 < flexd> Woo, my new external hdd is at the post office.
12:43 < jrajav> flexd: http://mathiasbynens.be/demo/url-regex
12:44 < flexd> and it has stopped rainng :)
12:44 < jrajav> flexd: (Hint: Look at @diegoperini's column)
12:44 < yarekt2> Hey, Is there any way to get access to the audio input in node.js ?
12:45 < flexd> jrajav: nice
12:45 < whiskers75> ARGH! Cloud9: "The project you are editing is owned by whiskers75_1 (Read Only Mode)" Me: "But I'm whiskers75_1!"
12:45 < flexd> I need to capture them though, maybe I can just add () around it :p
12:45 < yarekt2> (like for example, listen to line in on the machine thats running node) 
12:45 < standoo> is node js production stable yet, or should it reach version 1.x.x first?
12:45 < jrajav> flexd: Well, it's pretty easy to use a regex to capture all occurrences of matching patterns in a string
12:45 < jrajav> That's left as an exercise for the reader
12:45 < jrajav> ;D
12:46 < flexd> () !
12:46 < jrajav> One note: If it uses negative look-behind, the regex won't be supported by JS
12:46 < flexd> whats that?
12:46 < jrajav> In that case you'll probably have to use a regex lib
12:47 < jrajav> ?<=
12:47 < jrajav> And ?<!
12:47 < jrajav> ? I think both. Maybe just one
12:47 < jrajav> They assert a pattern *behind* the given one
12:47 < jrajav> Without actually matching the lookbehind pattern
12:47 < jrajav> Same with lookahead, which *is* supported in JS
12:49 < flexd> meh, its breaking :(
12:49 < flexd> because of a extra )
12:50 < jonandersson> exit
12:50 < flexd> Im gonna go to the post office anyway, will look at it later :p
12:50 < flexd> I was googling for javascript specific ones, so I do not have to try to modify perl stuff into js
12:51 < flexd> ooh
12:51 < flexd> JS version actually posted in a gist :)
12:51 < jrajav> :O
12:51 < jrajav> link?
12:51 < flexd> https://gist.github.com/729294
12:51 < flexd> well, compressed one line
12:52 < flexd> I did not see the big one until now :p
12:57 < pringlescan> Node keeps crashing when I use http.get() because it has an unhandled error int he socket code. Now, to try to save time, it keeps failing 10-15 minutes into my process, I'd like to resume where it left off. But when I use node-msql with a LIMIT query or a LIMITING query it just executes a SELECT without the rest of the query… if I execute a query from the command line client I get the right results, when I do it from node, I get
12:57 < pringlescan> *node-mysql
12:57 < mikeywaites> Hey can anyone tell what teh equiv of dynamicHelpers is in express 3.0 ?
12:58 < mickhansen> app.locals
12:58 < mickhansen> mikeywaites, https://github.com/visionmedia/express/wiki/Migrating-from-2.x-to-3.x
12:58 < mikeywaites> mickhansen: briiliant !
12:58 < mikeywaites> thanks
12:59 < mickhansen> res.locals rather, it seems :)
12:59 < mickhansen> ok, there's actually both
13:00 < mikeywaites> :D ok so i can set helper functions using app.locals and create helper functions on a per view basis using res.locals?
13:00 < theblackbox> http://pastebin.ca/2178262 <---- don't understand why I'm getting two different responses to this function when for all I can tell I am passing them the exact same data…. anyone?
13:00 < mickhansen> mikeywaites, not sure - i don't use them personally, but they were replaces with "locals"
13:00 < mickhansen> theblackbox,  you need a closure
13:01 < mikeywaites> mickhansen: right, is there another way to set helper funtioncs that can be used in jade templates?
13:01 < mickhansen> in your 2nd example you have no way to know what obj is at that point
13:01 < mickhansen> I dont use the view part of express - maybe you'll have more luck in #express
13:02 < mikeywaites> mickhansen: cheers!
13:02 < theblackbox> mickhansen: don't get you - what point? I'm getting the object from an array of objects that is already built
13:02 < lucadc> I need to decompress a gzip file into a buffer possibly without writing on a file
13:03 < lucadc> should I use a bufferstream (node-bufferstream) ?
13:04 < mickhansen> theblackbox, not totally sure when your var statement placement - but usually, in that situation where you have callbacks in a native loop, you have no way to guarantee what your var is when the callback returns
13:05 < pringlescan> flexd: I added some more sanity checks and debugging and still can't narrow down my problem. I have 1k+ lines of code though, I can post just the http.get() block that's throwing the error?
13:05 < mickhansen> theblackbox, http://pastebin.ca/2178271 - however if you use Array's forEach you automatically get a closure
13:06 < pringlescan> https://gist.github.com/3285155 here is the code, the error node throws is in the comments
13:06 < mickhansen> theblackbox, as such: http://pastebin.com/Y0vv3fGK
13:09 < theblackbox> mickhansen: I get the same behaviour either way - the "console.log('\n connecting…');" fires but "connected…" doesn't
13:10 < theblackbox> (looking into closures, however)
13:10 < mickhansen> ah sry, didn't even look at your insert code - assumed that the loop with async would be your issue.
13:11 < mickhansen> If you're not getting the connected console log that would indicate a problem with connecting to postgres wouldn't it?
13:11 < theblackbox> that's what I thought, but the other insert query works fine
13:13 < mickhansen> hm
13:14 < theblackbox> http://pastebin.ca/2178274
13:14 < theblackbox> psql log
13:14 < lucadc> is there a way to pipe to a buffer?
13:14 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:15 < theblackbox> I don't get that "incomplete startup packet" at all, but it might make sense in light of closures? i.e. the insert has no data?? But then it couldn't even get to that "connecting…." as there is a test on the obj before that that is passing
13:15 < theblackbox> =/
13:18 < theblackbox> doesn't even work if I drop the loop and pass it an arbitrary element of the array
13:18 < theblackbox> humbug
13:24 < theblackbox> BALLS!
13:24  * theblackbox facepalms
13:24 < theblackbox> …. callback was in the wrong place
13:37 < Zelfje> Awesome stuff, thanks :)
13:39 < serdem> is it possible to store response object into database  ?
13:39 < serdem> instead of pushing respınse object into array
13:40 < dmilith> everything is possible
13:40 < serdem> *instead of pushing response object into an array
13:40 < serdem> dmilith, how exactly?
13:40 < RLa> what response objects?
13:41 < dmilith> have no idea
13:42 < deoxxa> i like it how people expect everyone else to know what they're thinking
13:42 < dmilith> deoxxa: it's fun, isn't it?
13:42 < dmilith> ;]
13:42 < serdem> RLa, the request that comes from client. it is about long polling. whe you do long polling you store request into an array. than you use it later.
13:43 < serdem> <deoxxa> i like it when you are having fun
13:43 < RLa> hm
13:43 < deoxxa> serdem: it sounds like you need to have a good, long think about how your application works
13:43 < serdem> deoxxa, shut up
13:43 < RLa> wont they leak if you do not remove them from array?
13:43 < deoxxa> :/
13:43 < deoxxa> well that's not very nice
13:44 < RLa> i would use some module for websockets that fallbacks to long polling
13:45 < serdem> <deoxxa>  the only thing it's not nicein here is your ignorance. so shut up.
13:45 < SomeoneWeird> Anyone been having problems with npm installing?
13:45 < deoxxa> serdem: it is with great sadness that i inform you that you appear to be fundamentally retarded. perhaps due to a nasty fall as a child, perhaps due to some kind of incident where you were deprived of oxygen for an extended period of time. i'm not sure, and i'm not here to judge. but i do think that your disability is going to make it hard to grasp the abstract concepts related to computer programming.
13:45 < SomeoneWeird> http://pastie.org/private/x5ko8pmuqcgh7jawyi7myw
13:46 < SomeoneWeird> isaacs, ?
13:47 < RLa> could you clean /root/tmp dir?
13:47 < RLa> maybe it is broken download
13:48 < RLa> and run npm cache clean
13:48 < SomeoneWeird> thanks! :)
13:48 < SomeoneWeird> silly error messages >..
13:48 < SomeoneWeird> >.>
13:49 < serdem> deoxxa, omg. you are retarted.you are just making a scene for nothing. go find a girlfriend or some pillow to fuck. just get out and shut up.
13:49 < deoxxa> lol
13:49 < SomeoneWeird> serdem, stfu or gtfo
13:49 < shanse> serdem: I have put you on a permanent ignore, public and private. I have found you disturbing, rude and generally not worth talking to. According to the channels you hang on, it strengtens the effect of wanting to put you on ignore because of my lack of interest in you as a person. This message is not meant to be rude to you, just to inform you that i won't see anything of what you type from now on. 
13:49 < serdem> shanse, why??
13:51 < serdem> SomeoneWeird, both. not has to be in an order
13:52 < SomeoneWeird> what did deoxxa do to you to make you say that to him?
13:55 < serdem> SomeoneWeird,  what have i said that rude he hasn't alreadY?
13:55 < serdem> i was about to ask a question. and RLa was answering. he just showed up and talked like an ideot
13:56 < deoxxa> clearly i'm a "retarted" "ideot"
13:56 < mmalecki> deoxxa, serdem: nowkiss.jpg
13:56 < deoxxa> nokiss!
13:56 < deoxxa> kissless
13:57 < mmalecki> lol
13:57 < serdem> deoxxa, http://www.urbandictionary.com/define.php?term=ideot
13:58 < deoxxa> oh, this will shut me up
13:58 < deoxxa> they're... all typos.
13:58 < deoxxa> showed me!
13:58 < mmalecki> lol
13:58 < mmalecki> deoxxa++
13:59 < serdem> deoxxa, yes that does change reality
13:59 < Erwyn> hello
13:59 < deoxxa> serdem: i wish you success in your future endeavours.
13:59 < SomeoneWeird> lmao
13:59 < onto> Hi! I am trying to create a simple application to learn integration between socket.io, Redis pub/sub and PHP. The application is a simple counter (user clicks button, counter increments and updates everyone) but it is not working as expected: https://gist.github.com/3285514
13:59 < onto> Currently, when I publish a message directly from redis, "PUBLISH count {"count": 1}"; it updates all clients but when I click the button "Increment", it does not update any of the clients
13:59 < coderarity> wow what has happened to #node.js
14:00 < SomeoneWeird> just some piss battle between two guys
14:00 < deoxxa> we've degenerated to a lawless society of rapscallions
14:00 < coderarity> wtb ops kick
14:01 < serdem> <deoxxa>  ohh shut up!
14:01 < deoxxa> +1 vote for /kick deoxxa
14:01 < deoxxa> that guy's a jerk
14:01 < Dermiste_> Hello there
14:01 < Dermiste_> I have a basic socket question for the ones who know about node.js
14:01 < serdem>  /kick deoxxa
14:02 < Dermiste_> Anyone around ?
14:02 < deoxxa> Dermiste_: sure, what's up buddy?
14:02 < serdem> <deoxxa> you have ruined my question. 
14:03 < deoxxa> serdem: my sincerest apologies! i thought it was the horrible wording, lack of structure and complete absense of point that ruined it!
14:03 < Dermiste_> Hello :) Yeh so basically, I have an array, with 3 objects in it, at in dex 0 1 2. Using a flash socket, I send through the socket either 0 1 or 2, and based on that, I want to work on one of my three objects on the node.js side. BUT, even if my console log for example "2" there is no way I can get my object at index 2 in my array
14:03 < SomeoneWeird> oh stfu you two
14:04 < bnoordhuis> behave guys
14:04 < Dermiste_> I think, even if my console log something right (2, for example), the type is not the right one ! Because (is data is what I get) data == 2 -> FALSE, data == "2" -> FALSE
14:04 < deoxxa> Dermiste_: hmm, how do you mean "send"? are you sending just the literal number 2?
14:05 < Dermiste_> Yep
14:05 < Dermiste_> My buffer looks like this
14:05 < Dermiste_> <Buffer 00 01 32> '\u0000\u00012'
14:05 < Dermiste_> and my console gives me the value of what I sent
14:05 < Dermiste_> So everything looks fine on that side
14:05 < Dermiste_> But, besides displaying this data, I cannot work on it ...
14:06 < deoxxa> well, all object keys are strings, so your number will be implicitly converted when you go to use it as a key name (like object[key])
14:06 < deoxxa> can you paste some code in a gist?
14:07 < Dermiste_> 	sock.on('data', function(data) { 		var anArray = ["a","b","c"]; 		 		var value = data.toString();	 		console.log(anArray[2]); // goes "c" 		console.log(anArray[value]); // goes undefined 		  	});
14:07 < Dermiste_> here it is
14:07 < Dermiste_> I simplified the stuff
14:08 < deoxxa> and if you console.log(value), it's "2"?
14:08 < Dermiste_> Yep
14:08 < Dermiste_> Without the quotes
14:08 < Dermiste_> of course
14:08 < deoxxa> yep
14:08 < deoxxa> try `console.log(value == "2")'
14:08 < Quark> How do you keep a Node.js program running as a server?
14:09 < Dermiste_> deoxxa, it goes FALSE
14:09 < Dermiste_> as well as == 2
14:09 < Dermiste_> I'm running this on osx
14:09 < deoxxa> Dermiste_: interesting! try `console.log(JSON.stringify(value))'
14:09 < Dermiste_> straight in the terminal
14:10 < deoxxa> Quark: there's a few different process management packages out there - a popular choice that i've had success with is "forever", but there's plenty of options if you poke around npm
14:11 < Dermiste_> stringify goes "\u0000\u00012"
14:11 < deoxxa> ah, you have a couple of extra bytes there
14:11 < deoxxa> you'll want to find out where they're coming from and nerf them
14:11 < Dermiste_> All right, maybe it comes from flash ?
14:11 < deoxxa> looks like maybe a length prefix
14:11 < Dermiste_> I use "writeUTF"
14:11 < Quark> deoxxa: Thanks! Another one (last, I promise), a Node.js application is normally access by either proxying Apache or through an Apache configuration, correct? 
14:12 < deoxxa> Quark: it can be, or you can use any other http reverse proxy (nginx, varnish, pound, hproxy, bouncy, etc), or you can just throw node on an external interface
14:13 < Quark> deoxxa: Got it. Thanks!
14:13 < deoxxa> Dermiste_: looks a lot like a length prefix - [0x00, 0x01] is 1 in big-endian format
14:14 < Dermiste_> All right
14:14 < Dermiste_> I'm going to try something else then
14:14 < deoxxa> Dermiste_: $20 says if you send "22" through the socket it'll be [0x00, 0x02, 0x32, 0x32] :P
14:15 < deoxxa> you could also just use that prefix - `var len = buffer.readUInt16BE(0), data = buffer.slice(2, len).toString();'
14:15 < deoxxa> (that may or may not be the correct capitalisation on readUInt16BE)
14:17 < Dermiste_> All right, got some new stuff
14:17 < Dermiste_> Trying to send "hello"
14:17 < Dermiste_> "Hello"
14:17 < Dermiste_> deoxxa, your code gave me "Hel"
14:18 < Dermiste_> Which, If I compare with "Hel", gives TRUE
14:18 < deoxxa> what's the content of the whole buffer?
14:19 < Dermiste_> "Hello"
14:19 < deoxxa> i mean the actual bytes
14:19 < Dermiste_> Sorry
14:19 < Dermiste_> <Buffer 00 05 48 65 6c 6c 6f> 
14:19 < Dermiste_> Looks like I always have 00, then some "type" octet, then the data
14:20 < deoxxa> [0x00, 0x05] is 5 as an unsigned 16 bit integer in big endian representation, [0x48, 0x65, 0x6c, 0x6c, 0x6f] is "hello"
14:21 < Dermiste_> So, this is the size of the message ?
14:21 < deoxxa> yep
14:21 < deoxxa> first two bytes are the length of the following string
14:21 < Dermiste_> All right, yeh I tried with "Hello!"
14:21 < Dermiste_> and got
14:21 < Dermiste_> <Buffer 00 06 48 65 6c 6c 6f 21> 
14:22 < deoxxa> oops, my code before was wrong for the slice thing
14:22 < deoxxa> b.slice(2, 2 + b.readUInt16BE(0)).toString(); // `b' being your buffer
14:23 < deoxxa> Buffer.slice(start, end), not Buffer.slice(start, length)
14:24 < Dermiste_> yaaaaaaaayyyyyyyyy
14:24 < Dermiste_> Works !
14:24 < deoxxa> \o/
14:24 < Dermiste_> Can read through another object now, with that :)
14:24 < deoxxa> yeah that's how a lot of serialisation formats work, they specify the length of the data following
14:24 < Dermiste_> So, to resume, we can say flash writes one 0 byte
14:24 < Dermiste_> one byte which is the size of the message
14:24 < deoxxa> nah
14:25 < deoxxa> it writes two bytes that comprise the size of the message
14:25 < deoxxa> 16 bit integer = two bytes
14:25 < Dermiste_> ok
14:25 < Dermiste_> Aaaaaaaallll rrrriiight
14:25 < deoxxa> welp, it's nearly 12:30am
14:26 < deoxxa> bed tiem
14:27 < flexd> hm, would it be much of a problem redirecting for example /whatever of my express app to another node application on another host? :o
14:27 < flexd> I guess I could just do a request and pipe it hm
14:27 < SomeoneWeird> deoxxa, weak!
14:27 < SomeoneWeird> :P
14:28 <@isaacs> SomeoneWeird: yes, tat error message isn't great.  post an issue, with the steps to repro, please.
14:29 < deoxxa> SomeoneWeird: i have a job =3=
14:30 < Dermiste_> Well thanks a lot guyys !!! :)
14:30 < SomeoneWeird> deoxxa, i goto tafe
14:30 < SomeoneWeird> lol
14:37 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:49 < hotch> guys if you know me (haven't been in much recently) I switched coasts, any node.js guys out in LA?
15:01 < mscdex> gahhhh why does crypto not use Buffers in so many places?
15:02 < Jonghwan> When I emit an event, the order is same with that I added event listener?
15:02 < Jonghwan> i mean, the order to call event listener
15:03 < tomb|afk> Jonghwan: you'd have to check the docs
15:03 < Jonghwan> you mean http://nodejs.org/api/events.html ?
15:03 < mscdex> Jonghwan: yeah, event listeners are added in order
15:04 < Jonghwan> thanks :)
15:17 < arcanis> I'm sending a request using Http.request, how can I get the response message with a proper encoding ?
15:17 < arcanis> can I just concat the buffers ?
15:18 < tomb|> http://nodejs.org/api/http.html#http_response_setencoding_encoding
15:19 < joshie> Is there any way I can make node's http listen listen on all ipv6 addresses the system has?
15:19 < joshie> I can't seem to find this info online
15:20 < coderarity> *spoiler* the answer is release
15:20 < drudge> joshie: how about 0:0:0:0:0:0:0:0
15:21 < arcanis> tomb|: thanks
15:21 < drudge> joshie: or just :: for short
15:21 < joshie> thank you much
15:21 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:26 < chiel> is there any good package available on node for minifying css, that anyone knows of?
15:32 < RLa> chiel, uglifyjs?
15:35 < chiel> RLa: ah, does that do css as well?
15:36 < RLa> oh, i misread that
15:37 < chiel> ah ^^
15:37 < chiel> i am using uglifyjs for my javascript, it's nice
15:40 < RLa> chiel, npm search minify css
15:41 < symeog_> hi all
15:41 < RLa> i'm myself not using minification but compression instead
15:42 < symeog_> can u give me a good starting point please ? i am totally new to this framework
15:42 < chiel> RLa: I intend to use both :)
15:43 < chiel> I imagine the minification won't really offer the largest gain, but it will get rid of comments and such :)
15:43 < RLa> hm, that's actually good idea why to use minification
15:44 < chiel> RLa: yeah, that's the only reason I want to use it really. I am not to fussed about putting everything on one line or anything. just want to remove comments
15:45 < chiel> and since I already have a build script in node, it makes sense for it to go in there.
15:45 < chiel> RLa: https://github.com/chielkunkels/tinker-ui/blob/master/bin/build that's what I have at the moment. it's a bit messy, but it works a charm.
15:45 < symeog_> anybody with at least some experience in node.js can pm me please ?
15:47 < context> symeog_: people are usually willing to help if you actually ask a question
15:47 < symeog_> ok thanks context
15:47 < symeog_> i got one or two actually
15:48 < RLa> chiel, looks good
15:49 < chiel> RLa: yeah, it's just so i only have to serve 2 files, hehe. at some point i want to add data uris into the css as well
15:49 < symeog_> is it possible to build data centric applications in node ? 
15:49 < chiel> and perhaps pngcrush before doing thqat.
15:49 < chiel> that*
15:51 < symeog_> actually i would like to start building a customers application..can i do that in node ?
15:53 < EyePulp> symeog_: yes it's possible.  Are you just learning node?
15:53 < symeog_> actually i want to get started
15:53 < symeog_> thats why i am asking
15:53 < symeog_> and of course i don't want where to start
15:53 < EyePulp> symeog_: is your customer willing to pay for your education?
15:53 < symeog_> *know
15:54 < EyePulp> (and wait for the additional time it takes)
15:54 < symeog_> although i am a professonal developer i won't do this for money…just a pilot
15:55 < symeog_> i have a pilot customer atm
16:01 < pyrotechnick> tjholowaychuk: *Components in practice* Traditional most applications (that I’ve experienced) are built in more of a “vertical” approach, spreading a single concept into multiple sections of an application.
16:01 < pyrotechnick> typo
16:01 < pyrotechnick> traditional -> traditionally
16:01 < tjholowaychuk> thx
16:02 < pyrotechnick> yw
16:02 < pyrotechnick> i'm digging components
16:04 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:05 < symeog_> can anybody tell me (for free) how can i get started with node ?
16:05 <@maxogden> nodejs.org there are lots of links
16:06 < whiskers75> symeog_: check out nodemanual.org
16:06 < RLa> symeog_, also http://www.nodebeginner.org/
16:07 < symeog_> thanks a lot for the link guys
16:07 < symeog_> i guess thats what i wanted for starters
16:10 < pyrotechnick> tjholowaychuk: https://github.com/component/bus has no component.js
16:10 < pyrotechnick> path and stuff too
16:11 < pyrotechnick> just a heads up, you probs know
16:11 < pyrotechnick> but might confuse someone
16:11 < tjholowaychuk> pyrotechnick yeah that's fine I need to change a few things in all of them
16:11 < pyrotechnick> sick
16:19 < motiooon_> what is the best library to manage environments configs
16:29 < bradleymeck> motiooon_: look at nconf
16:29 < motiooon_> bradleymeck: thanks
16:32 < vrlogrs> hey guys
16:32 < dexter_e> Anyone happen to implement Balloons.IO  ? 
16:33 < dexter_e> Just wondering how to put it on HTTPS
16:33 < RLa> what is that
16:33 < dexter_e> Chat app
16:33 < vrlogrs> just wanted to show off my node.js server: http://www.funnode.com/chess
16:34 < vrlogrs> fully functioning :)
16:34 < vrlogrs> as of now, no bugs :)
16:34 < vrlogrs> im sure ill come across some as i get more people online though
16:35 < vrlogrs> if you guys have a minute to help me test it out .. please do 
16:35 < vrlogrs> will appreciate it
16:38 < RLa> only one online player
16:38 < RLa> and Error connecting to Server :S
16:39 < cromeno> Hi starting up to test node.js, any noob tutorial for simple thing like sending data to node.js from a pure javascript and jquery to a Node.js server?
16:39 < wavded> tjholowaychuk: haproxy works without 'trust proxy' in express, what does that option do exactly?
16:40 < wavded> tjholowaychuk: i'm being lazy webish, i'll look at the code ;)
16:41 < tjholowaychuk> wavded: things like req.secure when behind a proxy doing TLS, req.ip, req.ips, res.redirect support etc
16:41 < whiskers75> yeah, Error connecting to server :S
16:41 < Domenic> Wait is something new going on with components this morning tjholowaychuk?
16:41 < Almindor> hey
16:42 < tjholowaychuk> Domenic nope
16:42 < whiskers75> btw, why does redis.get(cmd + ':pin') return 'true' and not the value of that key?
16:42 < cxreg> cool node + freeswitch talk at cluecon just now
16:42 < Almindor> is there a way to see what render(page) does? mine (using jade) stopped working after a minor dependencies update (not sure if jade itself or something else)
16:42 < Almindor> it doesn't report any errors it just doesn't reply
16:42 < whiskers75> Almindor: use the REPL
16:43 < Domenic> tjholowaychuk ok cool. btw did you ever figure out how you wanted to do components without AMD but without a build system either?
16:43 < whiskers75> ump
16:43 < whiskers75> bump*
16:43 < tjholowaychuk> Domenic I think im going to just say commonjs without the AMD translation step. It's too much of a PITA
16:43 < tjholowaychuk> I can see how some people wouldn't like that
16:43 < tjholowaychuk> but if you're using a  tool to install the things
16:44 < tjholowaychuk> that tool can just translate it if you really need anyway
16:44 < tjholowaychuk> so meh
16:44 < whiskers75> can someone help me?
16:44 < tjholowaychuk> it's a tough call I guess but I sure as hell don't want to write AMD
16:44 < Domenic> yeah i mean i much prefer commonjs without amd it's just then you do need a tool or build or something
16:44 < Almindor> hmm
16:44 < Domenic> or you can try something like montage or wreq where they do XHR + eval in development but build in prod
16:45 < tjholowaychuk> for those people it mgiht be nice to have
16:45 < whiskers75> why does redis.get(cmd + ':pin') return 'true' and not the value of that key? (commands from the module 'redis')
16:45 < tjholowaychuk> the installation step and then some optional compile-to-AMD thing
16:45 < tjholowaychuk> but
16:45 < tjholowaychuk> nah that doesn't make sense, I dont think AMD really makes a ton of sense
16:45 < tjholowaychuk> catering to the person who just wants to try something out quickly
16:45 < tjholowaychuk> is a little lame
16:46 < Sri19> which is the nicest open source license? 
16:46 < Sri19> i need one for BrowserDb - https://github.com/Srirangan/browserdb
16:46 < Domenic> i am more sympathetic to it after having a build step. it's annoying 'cuz you want to F5 but you have to build first. so you end up editing the wrapped-in-browserify files, then having to backport those changes to the un-built CJS files
16:46 < whiskers75> Sri19: I use the GPLv2 - but you can also use an UNLICENCE
16:46 < Domenic> AMD would solve that, but I don't like to pay the price
16:46 < Domenic> So we stick with build step
16:47 < whiskers75> bump
16:47 < Domenic> whiskers75: if IRC doesn't work, try stackoverflow
16:47 < tjholowaychuk> Domenic yeah same here
16:47 < tjholowaychuk> I'll take our ~600ms build step
16:47 < tjholowaychuk> over AMD any day
16:47 < whiskers75> ok
16:47 < Domenic> tjholowaychuk it's not the time that bugs me just the fact that there's two files
16:47 < Sri19> whiskers75, what's an unlicense?
16:47 < Domenic> (built and unbuilt)
16:48 < tjholowaychuk> yeah that's a little annoying
16:48 < dexter_e> tjholowaychuk:  Is there a preferable way to enable https / SSL in an express app?  
16:48 < Domenic> If we were not developing for Windows 8 we could use the XHR+eval trick in dev. But Windows 8/IE10 has no @sourceURL support so, sadness.
16:48 < tjholowaychuk> im going with that for templates so there's no magical .html support or anything, it just turns into something you require(), but like you say
16:48 < tjholowaychuk> you end up with additional build files
16:49 < dexter_e> I'm trying to modify this Express App ( Balloons.IO )  to work over https/SSL with an SSL certificate
16:49 < Domenic> tjholowaychuk speaking of templates did you see https://github.com/domenic/simple-jadeify
16:50 < wavded> tjholowaychuk: danka
16:52 < whiskers75> Sri19: it basically says - 'you can do anything you like with this code'.
16:53 < whiskers75> here's the SO question: http://stackoverflow.com/questions/11850587/node-js-redis-get
16:54 < vrlogrs> hey RLa .. sry, had to restart the server
16:54 < vrlogrs> you can try now
16:54 < whiskers75> ok
16:54 < vrlogrs> whiskers75: had to restart the server - u can try now
16:55 < whiskers75> could not find a match...waiting for others... could not connect to server :S
16:55 < RLa> vrlogrs, troubles?
16:55 < RLa> crashy?
16:55 < vrlogrs> RLa -- no .. making some changes to the chat .. give me a few minutes
16:55 < whiskers75> gotta go
16:56 < vrlogrs> next time whiskers75
16:56 < vrlogrs> thanks anyways
17:02 < Sri19> whiskers75, http://unlicense.org/ looks good
17:02 < Sri19> :D
17:04 < etcetera> /join #appcellerator
17:04 < etcetera> whoops
17:04 < etcetera> if I could spell that would also be useful.
17:06 < tassmjau> lulz
17:06 < vrlogrs> ok RLa
17:06 < vrlogrs> i got it up again .. 
17:06 < vrlogrs> do you mind checking it out now? http://www.funnode.com/chess
17:09 < vrlogrs> anyone have a few minutes to help me test out?
17:10 < lizk> Hi there - where is the best online help for developers at a gaming company just getting into node.js?  I need to refer someone to a site but not a developer myself…thx for any feedback!
17:10 < pyrotechnick> hi lizk
17:10 < lizk> hey! what's up
17:11 < RLa> aww, it crashed
17:11 < pyrotechnick> not much, making games ^w^
17:11 < Domenic> vrlogrs: error connecting to server
17:11 < pyrotechnick> voxels and what-not
17:11 < lizk> :) sounds fun
17:11 < vrlogrs> darn it
17:11 < pyrotechnick> best online help for game companies getting into node
17:11 < pyrotechnick> well
17:11 < vrlogrs> ok, had to fix a bug ..
17:11 < vrlogrs> up and running again
17:11 < vrlogrs> sorry about that
17:11 < vrlogrs> Domenic: it'll work now
17:11 < Almindor> hey
17:11 < pyrotechnick> there's a reallly badass talk from zynga around, it's a lil old now but brilliant
17:12 < Almindor> does anyone know if mongoose session store can be configured for a timeout?
17:12 < pyrotechnick> shows their success with node
17:12 < lizk> what about technical help? 
17:12 < hillct> isaacs: you around? I'm running into that same DNS issue (or so it seems) as we saw a few months back where name.com seems to be filtering DNS queries originating from voxel.net such that npm can't connect and retrieve modules in it's normal fashion
17:12 < pyrotechnick> well you can always come here
17:12 < Domenic> vrlogrs: connected to server, but nothing is interactive, there are ?s everywhere, global chat does nothing...
17:13 <@isaacs> hillct: email please
17:13 <@isaacs> i@izs.me
17:13 < vrlogrs> try again Domenic -- server takes a few seconds to get the leaderboard/chat up
17:13 < vrlogrs> refresh the page
17:13 < pyrotechnick> hillct: voxel.net :O
17:13 < pyrotechnick> cool
17:13 < Domenic> refreshed, nothing
17:14 < hillct> pyrotechnick: is that te same issue you're seeing?
17:14 < pyrotechnick> no it's just a cool domain
17:14 < vrlogrs> http://www.funnode.com/chess
17:14 < vrlogrs> are you on that page Domenic?
17:14 < Domenic> vrlogrs: yup.
17:15 < vrlogrs> what's the error message?
17:15 < Domenic> vrlogrs: no error, just nothing interactive. oh wait after about 20 seconds it goes to "unable to communicate with server. try refreshing the page"
17:16 < vrlogrs> that's weird .. seems to work fine on firefox/chrome on windows/linux when i tried
17:16 < vrlogrs> can you please try refreshing the page?
17:16 < Domenic> I've done that a few times. Firefox and Chrome, Windows.
17:16 < Domenic> Giving up and going back to work now, sorry.
17:17 < vrlogrs> hmm, ok, thanks anyways Domenic
17:17 < vrlogrs> not sure why you werent able to connect though :S
17:18 < TehShrike1> isaacs: I'm on npm, getting that 404 at /forgot pretty reproducably at the moment.  Want me to do anything in particular to help with debugging?
17:19 < Domenic> Gaaaah this new GitHub is so empty. Where did my news feed go.
17:19 <@isaacs> TehShrike1: click the "post issue" link
17:19 <@isaacs> TehShrike1: enter the issue
17:19 < TehShrike1> Yarp, did that first. https://github.com/isaacs/npm-www/issues/97
17:19 <@isaacs> great
17:20 < hillct> isaacs: see email. thanks.
17:20 <@isaacs> TehShrike|Work: this is on the POST, or just the first GET?
17:21 < TehShrike|Work> The POST.
17:21 <@isaacs> TehShrike|Work: are you entering a username that exists?
17:21 < TehShrike|Work> Yup, mine https://npmjs.org/profile/tehshrike
17:21 < TehShrike|Work> I even stuck to all lowercase, just in case
17:22 < hillct> Has anyone used Mashery IODocs for api documentation generation? Any thoughts, comments?
17:22 <@isaacs> TehShrike|Work: don't click that :)
17:23 <@isaacs> TehShrike|Work: trying to debug this, still
17:23 <@isaacs> other workers can find you but this one can't.  trying to figure out why
17:23 < TehShrike|Work> :-x
17:24 <@isaacs> TehShrike|Work: ok, i think i figured it out.  teh adminCouch login is losing its token validity, but not re-logging in
17:24 < TehShrike|Work> I tried again with the case I would have originally used (TehShrike) and got a 500 error after 1.6 minutes.  I'll stop pushing buttons now.
17:24 <@isaacs> TehShrike|Work: short term, i'll restart this worker. go ahead and click the link in the email you got
17:25 < TehShrike|Work> All righty, thanks
17:25 <@isaacs> TehShrike|Work: yeah, caps not allowed.
17:25 <@isaacs> usernames and packages are lowercase moving forward.  existing ones are grandfathered in.
17:25 <@isaacs> but if you delete it, you can't get it back :)
17:26 < TehShrike|Work> mm, that's a nice secure-looking password
17:27 < TehShrike|Work> yay, a filled-out npm profile!
17:27 < TehShrike|Work> I'm going to go eat pizza now.
17:27 < wavded> tjholowaychuk: have a moment to look at this pull?  - https://github.com/JustinTulloss/zeromq.node/pull/131
17:28 < tjholowaychuk> wavded we should probably nextTick there instead
17:28 < tjholowaychuk> unless node is aliasing that now im not sure
17:28 < wavded> nextTick doesn't allow you to pass extra args as far as I know
17:28 < tjholowaychuk> node GC weirdness ftw
17:29 < tjholowaychuk> well
17:29 < wavded> yeah weird huh
17:29 < tjholowaychuk> you can closure it
17:29 < wavded> yep
17:31 < chimney> ircretary: ok I'm here :)
17:31 < ircretary> chimney: I'm not sure what to do with that command.  Ask for help in PM.
17:32 < wink_> dtrejo: ping
17:32 < DTrejo> hey wink_
17:32 < wink_> whats up :>
17:33 < DTrejo> thanks for taking the time to look over this problem
17:33 < DTrejo> I appreciate it
17:33 < wink_> no need, do you wanna go over what i know in pms?
17:34 < DTrejo> sure
17:40 < augustl> anyone know about libraries that can emulate WebSocket with XMLHttpRequests, but doesn't try to do cross domain stuff?
17:41 < wavded> tjholowaychuk: nextTick doesn't seem to do the job, it exists too soon
17:41 < wavded> my use cases fail when switching to it
17:41 < tjholowaychuk> hm :s
17:41 < tjholowaychuk> sketchy
17:42 < tjholowaychuk> I guess it's fine anyway, not like you're binding / connecting all the time
17:42 < tjholowaychuk> we need to find out why zmq is so damn slow with node
17:42 < wavded> yeah, that's what i thought
17:42 < tjholowaychuk> it's like batching is completely disabled or something
17:43 < wavded> i would love to work more on it, i want to it be really excellent in node, i started some refactoring working on it in a seperate branch
17:43 < tjholowaychuk> yeah it's too bad, node is a pretty good fit for it otherwise
17:43 < wavded> yeah exactly
17:44 < wavded> do you know where the slow down its occuring?
17:44 < tjholowaychuk> not positive, nothing in the profiles really stood out to me
17:44 < pyrotechnick> check the flux capacitor
17:44 < tjholowaychuk> 99% sure the batching is just failing
17:45 < tjholowaychuk> because if you just blindly write to the socket you get around ~50k ops/s
17:45 < tjholowaychuk> which was similar to what I had with axon out of the box
17:45 < tjholowaychuk> without batching
17:45 < tjholowaychuk> so that's my guess
17:46 < wavded> ahh ok, yeah do you know any really good bindings for other langs?  seemed like python was decent
17:46 < ctult> In theory, would it be possible to rewrite HTTP with TCP?
17:47 < augustl> ctult: rewrite HTTP _with_ TCP, what do you mean?
17:47 <@maxogden> http is already on top of tcp
17:47 < tjholowaychuk> wavded they're all faster AFAIK, I haven't really looked though
17:47 < ctult> Rewrite the http protocol
17:47 < creationix> tjholowaychuk, have you ever wished that instead of an "upgrade" event, we had an upgrade flag on "request" events?
17:47 < augustl> ctult: it already uses TCP
17:47 < ctult> I want more control than Node gives me atm.
17:47 < augustl> ctult: you can just open a TCP socket and write HTTP stuff to it, yeah
17:48 < ctult> Would it be a hard thing to do?
17:48 < augustl> yup :)
17:48 < augustl> at least if you want to be spec compliant
17:48 < kuja> ctult: In theory? It's already in practice :/
17:48 < ctult> Where?
17:48 < augustl> ctult: there are probably a bunch of C/C++ libs you can reuse though
17:48  * ctult wants it to be native JS.
17:48 < creationix> I can get ~120k reqs/second using raw luvit tcp
17:48 < creationix> but luvit's http library is ~15% slower than node's
17:49 < augustl> ctult: I'm not aware of any JS implementations of HTTP
17:49 <@maxogden> mranneys node-pcap is pretty cool, tcp js
17:50 < creationix> augustl, i started a js port of http_parser (the C library used by node)
17:50 < creationix> I believe substack also wrote a js parser
17:50 <@maxogden> substack also wrote one
17:50 <@maxogden> yea
17:50 < ctult> Would flatiron be a good choice to build a web application?
17:50 < creationix> but in node you can just use process.binding('http_parser')
17:50 <@maxogden> ctult: what does the web application do?
17:51 < ctult> It will be an IRC client for me.
17:51 < ctult> So I don't have to keep this laptop on all the time
17:51 <@maxogden> the first ever node app written was one of those
17:52 < ctult> ik
17:52 <@maxogden> so you can pretty much use any of the web frameworks, it all depends on your taste
17:56 < jerrysv> pong?
18:01 < jcrew> ctult: why not just use screen and irssi?
18:03 < ctult> jcrew, I am trying to learn.
18:04 <@maxogden> if you wanna learn node try doing it with the http module and the fs module and an irc module, if you wanna learn node web frameworks there are lots of those
18:10 < whiskers75> wanna learn node? try writing IRC bots :)
18:12 < Poniest> whiskers75: … that op people when they say “op plz” :)
18:13 < creationix> heh, just noticed I'm not op anymore
18:13 < creationix> probably for the better
18:16 < jrajav> whiskers75: Or just use jerk and be happy
18:17 < whiskers75> jerk?
18:18 < whiskers75> creationix: you can be op: ##node-irc-bots :)
18:19 < EdwardIII> i'm interesting in making my backbone.js models persistent - i've checked out mongoose which looks like a good start, but is there something for automatically mapping my backbone objects to, say, mongodb?
18:19 < EdwardIII> interesting/interested
18:22 < jrajav> whiskers75: The simplest IRC framework ever, by a guy who knows JS IRC frameworks pretty damn well
18:26 < ctult> What is the best node general irc library out there?
18:26 < jrajav> whiskers75: *IRC bot framework actually
18:27 < jrajav> The specificity is a good thing if what you're writing is indeed a bot
18:27 < jrajav> :P
18:29 < whiskers75> great
18:29 < whiskers75> i dont mind my current module
18:29 < DTrejo> npmbro docs jerk
18:29 < npmbro> DTrejo: Please see http://github.com/gf3/Jerk
18:29 < DTrejo> woo npmbro is back! :)
18:34 < whiskers75> i prefer hard-core coding with the IRC module :)
18:34 < whiskers75> instead of using Jerk
18:35 < whiskers75> npmbro help
18:35 < npmbro> whiskers75: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20
18:37 < whiskers75> npmbro 
18:37 < whiskers75> npmbro docs
18:37 < npmbro> whiskers75: Usage is: npm docs <packagename>
18:37 < whiskers75> npmbro help usage
18:37 < npmbro> whiskers75: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20usage
18:37 < whiskers75> that bot should have usage help
18:40 < pyrotechnick> tjholowaychuk: FUUUUUUUUUU
18:40 < tjholowaychuk> hahahahahaha
18:41 < pyrotechnick> not cool man
18:41 < tjholowaychuk> they got me
18:41 < tjholowaychuk> 3 times today
18:41 < tjholowaychuk> with that damn thing
18:41 < pyrotechnick> i'll cut them
18:41 < pyrotechnick> i think i weed a little bit
18:42 < tjholowaychuk> last night i had my speakers on full and they sent me that thing
18:42 < tjholowaychuk> and today at starbucks
18:42 < pyrotechnick> i'm in pitch black playing zombie games
18:42 < pyrotechnick> last thing i need
18:42 < pyrotechnick> is some sick node link
18:42 < pyrotechnick> turning out to be a screamer
18:42 < pyrotechnick> i guess
18:42 < pyrotechnick> it serves us right, for having flash
18:43 < pyrotechnick> anyone doing anything rad with WebRTC?
18:43 < pyrotechnick> https://twitter.com/JamesCPetershttps://twitter.com/JamesCPetershttps://twitter.com/JamesCPeters I'm hiring! Senior Software Development Engineer - WebRTC at Skype - London, United Kingdom https://twitter.com/#!/search/%23jobs 
18:43 < pyrotechnick> skype is apparently
18:44 < plato> make a backdoor
18:44 < plato> ???
18:44 < plato> profit
18:45 < pyrotechnick> i want it in game, so your avatar's face is like
18:45 < pyrotechnick> your face
18:45 < pyrotechnick> and stuff...
18:45 < pyrotechnick> but i can see it being abused like chatroulette and friends
18:45 < jrajav> Is there an easier way to exec a command as a different user than child_process.exec('sudo -u username ….')?
18:45 < pyrotechnick> too much anatomy
18:46 < jrajav> Actually I shouldn't say easier, I should say WORKING
18:46 < jrajav> When I execute the sudo line in shell it works great. When I try it with exec I get execvp(): file not found
18:46 < therealkoopa> What's the best way to go about turning a readable stream into a buffer? Or loading it into a buffer?
18:48 < pyrotechnick> therealkoopa: write into the buffer until http://nodejs.org/api/stream.html#stream_event_end
18:50 < livinded> pyrotechnick: I'm trying. The support isn't there yet for good use yet
18:51 < pyrotechnick> yeah i'm doing WebGL so
18:51 < pyrotechnick> i've accepted that already
18:52 < livinded> webgl is much more usable from what I've seen
18:52 < livinded> you can't properly stream any of the webrtc stuff yet
18:53 < pyrotechnick> why not
18:54 < therealkoopa> pyrotechnick: I'm not sure how to create the buffer so it's initially empty.  
18:54 < KiNgMaR> new Buffer([])
18:55 < pyrotechnick> i believe buffers needs to be preallocated
18:55 < pyrotechnick> correct me if i'm wrong
18:56 < pyrotechnick> buf.length http://nodejs.org/api/buffer.html#buffer_buf_lengthNumber The size of the buffer in bytes. Note that this is not necessarily the size of the contents. length refers to the amount of memory allocated for the buffer object. It does not change when the contents of the buffer are changed.
18:57 < CIA-93> node: isaacs v0.8.6-release * r0544a58 / (AUTHORS ChangeLog src/node_version.h): 2012.08.07, Version 0.8.6 (Stable) - https://github.com/joyent/node/commit/0544a586ca6b6b900a42e164033dbf350765700a
18:57 < pyrotechnick> DAMMIT
18:57 < pyrotechnick> i just installed 0.8.5
18:58 < therealkoopa> pyrotechnick: So you need to preallocate a buffer with what value?  
18:58 < pyrotechnick> just pass a length
18:58 < pyrotechnick> the biggest you expect it to be
18:59 < pyrotechnick>  If buffer did not contain enough space to fit the entire string, it will write a partial amount of the string.
18:59 < pyrotechnick> there you go
18:59 < pyrotechnick> it has to be preallocated
19:00 < therealkoopa> I see this guy is doing something similar, taking the result of a child process and putting it into a buffer: https://gist.github.com/2576559  He's using SubStack's buffers module
19:03 < CIA-93> node: isaacs v0.8 * r0544a58 / (AUTHORS ChangeLog src/node_version.h): 2012.08.07, Version 0.8.6 (Stable) - https://github.com/joyent/node/commit/0544a586ca6b6b900a42e164033dbf350765700a
19:03 < CIA-93> node: isaacs v0.8 * rf11a3df / (101 files in 8 dirs): npm: Upgrade to 1.1.48 - https://github.com/joyent/node/commit/f11a3dfcd63f80a6435dbf126faec77a01256326
19:03 < CIA-93> node: isaacs v0.8 * re8bc2ed / src/node_version.h : Now working on 0.8.7 - https://github.com/joyent/node/commit/e8bc2edabf3698e468ff510be477326fe296a9b6
19:03 < CIA-93> node: isaacs v0.8 * re8834dc / (104 files in 10 dirs): Merge branch 'v0.8.6-release' into v0.8 - https://github.com/joyent/node/commit/e8834dc1a15050482a4c5380817819d7f499e980
19:05 < CIA-93> node: isaacs v0.8 * rc82e288 / doc/blog/release/v0.8.6.md : blog post for 0.8.6 - https://github.com/joyent/node/commit/c82e2889e8259ebd750c3b8f14fefcef74cb1caa
19:09 < djMax> Upgraded to latest express/consolidate/etc but now it can't find layouts. Did something change?
19:15 < blazes816> djMax: yes, layouts were removed
19:15 < blazes816> in 3.x
19:15 < djMax> in favor of?
19:15 < blazes816> also checkout the #express channel
19:15 < blazes816> not using them
19:15 < djMax> ok
19:15 < blazes816> I still use them
19:15 < blazes816> but each template engine must implement it themselves
19:16 < blazes816> I use eco, for example, so I just rigged up a render_with_layout method that renders a file called layout.eco and passes a value called body in
19:16 < blazes816> which is obviously a rendered version of the template to show
19:19 < prettyrobots> Convert dotted decimal to integer?
19:23 < blazes816> prettyrobots: round it?
19:23 < blazes816> not sure what you mean exactly
19:23 < prettyrobots> f('127.0.0.1') ==  16777343
19:26 < blazes816> prettyrobots: didn't realize that had a name
19:26 < ryanrolds_w_> Whats the correct term to use when talking about exposing a REPL over tcp/unix sockets for debugging purposes?
19:28 < prettyrobots> Got it.
19:28 < prettyrobots> Thank you all.
19:31 < jkevinburton> does req.param('somevar'); return null or undefined if not present (didn't say in the docs)
19:32 < wltsmrz> Is this express?
19:33 < tjholowaychuk> jkevinburton undefined but you should generally treat them as the same
19:34 < jkevinburton> thanks tjholowaychuk
19:34 < wltsmrz> I assume that req.params['somevar'] still works. Is this the case, tjholowaychuk?
19:34 < tjholowaychuk> yeah using the  req.{body,params,query} objects is preferred
19:34 < wltsmrz> I see. Just curious.
19:59 < Benvie> v8> var d = function(a,b,c){ function d(){ return [a,b,c] } d.args = arguments; return d; }(1,2,3); print(d()); d.args[1] = 100; print(d());
19:59 < purr> Benvie: undefined; Console: [1, 2, 3], [1, 100, 3]
20:00 < Benvie> ^ holy shit
20:47 < gicode> mscdex: https://github.com/LearnBoost/socket.io/commit/8ca8990a0cd1a892a8ff7da0c179623556a4b6b5
20:49 < timeturner> anyone think that it is a good/ok idea to insert the objectid (for mongo) into a url resource?
20:49 < timeturner> that way you can query directly by it I guess
20:49 < timeturner> for example https://trello.com/board/trello-development/4d5ea62fd76aa1136000000c
20:50 < cpetzold> timeturner: i think it's perfectly fine
20:51 < timeturner> I think that's a great idea since the scope of the ObjectId is pretty useless if you don't have full access to the db already
20:51 < dnnsmanace> hello, i am trying to write a buffer to a file with fs and having some trouble...
20:51 < timeturner> I wonder why more web apps don't do it though...
20:51 < Deathspike> Is there a html-scraper library with support for xpath? I've been playing with cheerio, but no xpath is really a huge bummer.
20:51 < dnnsmanace> fs.write('test.jpg', mail_object.attachments[0].content, null, null, null, function(err){
20:51 < dnnsmanace> does the file test.jpg have to exist before i write to it?
20:57 < AAA_awright> dnnsmanace: Try it and see :p
20:57 < dnnsmanace> looks like a i need a writestream to make file?
20:57 < dnnsmanace> is a writestream what creates a new file that i will write to?
20:57 < dnnsmanace> docs are confusing :)
20:58 < AAA_awright> dnnsmanace: Yeah you almost certainly want to use createWriteStream
20:59 < AAA_awright> dnnsmanace: dnnsmanace: In unix philosophy it depends on the file mode you open the file with. Most file modes will either append to the file or truncate it to nothing when you open it, but either way it's created if it doensn't exist
20:59 < other_guy> anyone know of any good function arguments handler libraries that might clean up my dynamic arguments list implementations
20:59 < other_guy> so I don't have as much shit like this...
20:59 < other_guy> var resolver_fn = typeof(arguments[arguments.length - 1]) == 'function' && typeof(arguments[arguments.length - 2]) == 'function' ? arguments[arguments.length - 2] : Bucket.siblingLastWriteWins;
20:59 < ccowan> timeturner: The only guess I could make is for SEO reasons or they are worried about people trying different ids.
20:59 < dnnsmanace> AAA_awright: thanks for your help, now i know my buffer length but what do i  put for offset and position? null?
21:00 < other_guy> when i want to allow the last function to be a callback and the argument right before it to be an optional function for a different purpose?
21:00 < ccowan> timeturner: but since the ID is not sequential what's the risk?
21:00 < AAA_awright> dnnsmanace: Uh, those aren't options for createWriteStream
21:00 < timeturner> but then again tif they try different ids they would need to know the board name as well
21:00 < timeturner> if*
21:00 < timeturner> yeah
21:00 < dnnsmanace> AAA_awright: after i open the stream, i pass it to fs.write
21:00 < timeturner> other_guy: perhaps augment Function.prototype
21:00 < timeturner> ?
21:01 < other_guy> timeturner?  how do you mean?
21:01 < AAA_awright> dnnsmanace: fs.createWriteStream() creates a new WritableStream, the same as the res argument of an HTTP request event
21:01 < ccowan> timeturner: are you quering the name of the board or is that just there for SEO?
21:02 < other_guy> I was thinking of something more like a DSL inside my functions that could be used to say (this one is required, this one is required, this one is optional, this one depends on the one before it) etc.
21:02 < dnnsmanace> AAA_awright: i am confused :) then how do i write my buffer to it?
21:02 < AAA_awright> It just ensures data gets written to the file in the same order that you call stream.write();
21:04 < timeturner> ccowan: well I'm not sure exactly how the resource is getting resolved
21:04 < AAA_awright> dnnsmanace: var stream = fs.createWriteStream('filename'); stream.write('blah'); stream.end();
21:04 < dnnsmanace> got it :)
21:04 < dnnsmanace> thank you
21:05 < timeturner> whoa wait
21:05 < ccowan> timeturner: I'm willing to guess it's just there for SEO
21:05 < timeturner> if you delete a chunk of the board name it still resolves to the correct board name as long as the ID is intact
21:06 < ccowan> yup
21:06 < ccowan> timeturner: it's just there for seo
21:06 < timeturner> yeah
21:09 < EnosFeedler> can a parent and child node.js 'share' a network socket or can a parent only pass it to a child (and lose control of it)?
21:10 < ccowan> timeturner: I wonder if you can run through different id's to find private boards?
21:11 < timeturner> probably not since it mostly likely checks the session and the users of the board in the document
21:11 < ccowan> probably
21:12 < timeturner> it's really strange how other apps don't do something similar to this though
21:12 < timeturner> it seems so simple
21:12 < myndzi> why should they?
21:13 < myndzi> i mean, what's the use case for being able to mangle urls?
21:13 < timeturner> because they can query directly by the object id
21:13 < myndzi> i know what it means for programming, i'm talking about users :P
21:13 < timeturner> well for users yeah, the only option that remains is copying and pasting links
21:14 < timeturner> which is kind of an inconvenience I suppose
21:14 < myndzi> maybe i misunderstand, but i just mean that when you copy links you copy the whole link, complete
21:14 < myndzi> when you click links you follow them, complete
21:15 < myndzi> sure some people don't know how to paste, but i don't really think it's so common as to require extra code :P
21:15 < myndzi> just be careful that search engines don't index the multiple "valid" links
21:15 < timeturner> facebook's urls are pretty mangled too
21:15 < myndzi> or you'll have a huge duplicate content problem
21:15 < timeturner> yeah that could be an issue
21:15 < timeturner> seo wise
21:16 < timeturner> actually no, it wouldn't matter
21:16 < timeturner> since it's an app
21:16 < timeturner> link stays the same anyways
21:16 < timeturner> or simply dies
21:16 < mscdex> node.js rules!
21:19 < myndzi> sure, but since it IS valid if somebody DOES mangle a link, then you have that link pointing to your site incorrectly
21:19 < myndzi> and they won't notice because it works anyway
21:19 < myndzi> if you use relative urls this can expand some
21:22 < other_guy> has anyone here used this https://github.com/cwolves/argtypes
21:22 < other_guy> it looks pretty interesting.
21:22 < other_guy> for handling function argument signatures
21:31 < CIA-93> libuv: Ben Noordhuis master * rf97c80f / src/unix/fs.c : unix: fix const correctness compiler warning - https://github.com/joyent/libuv/commit/f97c80fa98924f21ee12061023862b397bc2cf35
21:31 < CIA-93> libuv: Ben Noordhuis master * rf372024 / include/uv.h : include: link to Nikhil Marathe's libuv ebook - https://github.com/joyent/libuv/commit/f3720243421ea1ee925dd629e6dffef8b37bd9eb
21:38 < myndzi> i can't seem to come up with a decent way to plan out my projects
21:39 < myndzi> the relations between everything are there in my head, some more vague than others
21:39 < myndzi> but i want to find some middle ground between "code everything" and "solve all the problem points conceptually"
21:40 < myndzi> diagrams aren't doing it for me, i'm kind of at a loss for a structured way to approach this. thoughts?
21:42 < ccowan> myndzi: Do you have a whiteboard handy?
21:42 < myndzi> yeah, it's more a problem of translation
21:42 < ccowan> Just draw a few high level diagrams
21:42 < myndzi> i'm not entirely sure how the data is represented in my head :P
21:42 < EyePulp> whiteboards & graph paper help.  or post-its on whiteboard with lines & such between
21:43 <@konobi> TDD
21:43 < chilts> love it how TDD got taken over : Top Down Design -> Test Driven Design :)
21:43 < ccowan> myndzi: when I'm in that place I create a folder called research and start doign small proof of concpets to prove things out a bit
21:43 < chilts> it was the former when I was in school anyway
21:43 <@konobi> BDD too
21:44 < myndzi> B = ?
21:44 < chilts> what was it before Behaviour Driven Design?
21:44 < ccowan> bullshit driven design
21:44 < chilts> heh
21:44 < myndzi> lol
21:45 < myndzi> i've been using ADDDD
21:45 < myndzi> ADD-driven design :P
21:45 < chilts> hehe
21:45 < myndzi> anyway, thanks for the suggestions
21:45 < chilts> BDD = MDD
21:45 < chilts> Management Driven Design :D
21:45 <@konobi> or DDD
21:45 <@konobi> domain driven design
21:45 < DrShoggoth> my boss: jfdbiss
21:45 < chilts> heh
21:46 < entitydigital> I thought you were gonna say douche driver design
21:46 < chilts> just f*cking do .... ?
21:46 < DrShoggoth> yeah... i forgot the i
21:46 < DrShoggoth> jfdibiss
21:46 < tprice> im looking for an xml to json module that works with node 0.8.x
21:46 < tprice> anyone?
21:46 < chilts> just f*cking do <something> I say stupid?
21:46 < chilts> DrShoggoth: that right?
21:46 < ccowan> I have a friend who has to plan everything thing out in detail... I'm more of a hack away kind of guy. We often reviewed each other's code. He always said "I have no idea how you get to complete with your approach but you're solutions are just as solid as mine"
21:47 < chilts> ccowan: yeah, I find that's the case too
21:47 <@konobi> just fucking do it because i said so
21:47 < ccowan> The take away was that there is no RIGHT way to do things.
21:47 < chilts> hard to know what to design until you actually do it :D
21:47 < myndzi> sure
21:47 < chilts> yeah, agree :)
21:47 < DrShoggoth> just f*ing do it because I said so
21:47 <@konobi> chilts: KISS/JFDI
21:47 < myndzi> the problem i encounter most is that once i've written the code it's not structured well
21:47 < ccowan> TDD works really well for some people
21:47 < ccowan> Hacking works really well for others
21:47 < DrShoggoth> he had a website... i guess its down
21:47 < DrShoggoth> http://topsy.com/jfdibiss.com/
21:47 < myndzi> i am able to write very clean code when i have done enough code that i can encompass the whole thing in my head
21:48 < myndzi> so i'd like to find a way to solve the problems that i don't know about before actually writing code
21:48 < richtera> Is this a good place to ask an npm question?
21:48 < chilts> I find I write code, it gets bigger, and then somewhere near the end refactor into something nice
21:48 < chilts> works well for me :)
21:48 < myndzi> i generally just wind up staring at a whiteboard or drawing something obvious
21:48 <@konobi> myndzi: that's why TDD works well, because you're splitting things into manageable chunks
21:48 < ccowan> chilts: that works for me too
21:48 < chilts> richtera: just ask away, someone might answer if they know it
21:48 < richtera> Trying to figure out how to allow other committers to publish or update an npm module.
21:49 < ccowan> The most important part of my process is the refactor phase
21:49 < myndzi> i've yet to try it; i like the idea, but i had a hard time coming up with simple tests for database stuff and then got sucked on in from there :P
21:49 < chilts> ccowan: yeah, I generally stick to that line too, esp. with managers who spend all the budget talking
21:49 < RLa> konobi, what if different small parts start to interrelate
21:49 <@konobi> myndzi: that's what I use npm:mocked for
21:49 <@konobi> RLa: that's what system tests are for
21:49 < chilts> ccowan: I'm of the opinion that if you're not coding, then you're not doing anything :)
21:49 < RLa> oh
21:50 < chilts> richtera: you can add extra owners to your module
21:50 < chilts> lemme check
21:50 < chilts> richtera: npm owner add <user>
21:50 < chilts> wait
21:50 < chilts> richtera: npm owner add <username> <pkg>
21:50 < chilts> try npm owner help :)
21:50 < ccowan> chilts: For my managers I would spend one day writing up a wiki that basically amounted to bullshit. I would put all sorts of crap in there like "Make chicken cross road"... Color Logo Pink and orange... along with some assemblence of a rough plan
21:50 < richtera> thanks
21:50 < ccowan> Not one manager every called me out on it
21:51 < chilts> ccowan: lovely :)
21:51 < ccowan> It's because nobody reads that crap
21:51 < chilts> it's fun when that happens
21:51 < chilts> yeah, and they expect the programmers to read the crap they produce too
21:51 < chilts> all I want in a project is a fake screenshot with notes on it describing "what happens when"
21:51 < chilts> and then I ask lots of questions like "If someone clicks on this, what happens?"
21:52 < dubcanada> Hello, does anyone have any opinions of geddy or railsway or another framework in a production environment?
21:52 < ccowan> chilts: There are some cool online wireframing programs you can use to rough things out a bit
21:52 < ccowan> you can click on stuff and make it look like something happened
21:53 < chilts> ccowan: yeah, but I find that gets out of date quickly and it never really represents what they want
21:53 < chilts> I've been given wireframes which are mostly useless
21:53 < chilts> takes ages to changes it too ;)
21:54 < ccowan> plans are always outdated once you start typing
21:54 < chilts> yeah :)
21:55 < ccowan> http://speckyboy.com/2010/01/11/10-completely-free-wireframe-and-mockup-applications/
21:56 < RLa> nice, we use pencil here
21:56 <@konobi> ccowan: don't forget http://www.uistencils.com/
21:57 < tprice> im looking for an xml to json module that works with node 0.8.x
21:58 < chilts> tprice: I use xml2js which gives me a JavaScript data structure
21:58 < chilts> you can then just use JSON.stringify() on the result
21:59 < tprice> kk thanks i will try xml2js
21:59 < chilts> worth trying a few of them though
21:59 < chilts> some are better than others, sometimes it's just whatever you like and/or opinion
22:00 < ccowan> chilts: Plan things out till you get frustrated... then start coding :D
22:00 < chilts> :)
22:00 < ccowan> konobi: That's cool!
22:01 < chilts> so about 20 mins then :)
22:01 < ccowan> yup
22:03 < ccowan> I usually last about a day before I get frustrated... When I worked on a bigger team I would just bring my laptop to the meeting and code while everyone would be drawing on the whiteboard.
22:03 < chilts> nice
22:05 < timeturner> I wish I could do that
22:05 < timeturner> just code
22:06 < timeturner> I like making lists with "->" and "=>" hierarchies
22:06 < ccowan> yeah... sometimes I wish I could just plan.
22:06 < timeturner> then at the end I just fill in the blanks with code
22:06 < timeturner> but the problem is that lists don't work when it comes to design
22:07 < timeturner> like the actual "how it should look" part
22:07 < timeturner> well maybe it does a little bit
22:07 < timeturner> but that's when I have to draw it out on a whiteboard
22:07 < timeturner> and basically "wireframe" stuff
22:08 < timeturner> the cool thing is that when I'm done with all that, the actual writing the code part takes like 1/4 the time
22:08 <@konobi> http://www.pivotaltracker.com/
22:09 < timeturner> BDD html-style
22:09 < ccowan> konobi: we use that for capturing the features
22:10 <@konobi> oh, it's paid now... when did that happen
22:11 < timeturner> someone should make an agile PMT in node
22:13 <@konobi> timeturner: i have one... it's called JFDI... and zero lines of code! =0P
22:14 < timeturner> lol
22:22 < samholmes> how do I publish a npm module without going through github?
22:23 < jergason> samholmes: npm publish .
22:23 < jergason> from within the directory of the module
22:23 < jergason> github has nothign to do with it
22:24 < freewil> you'll probably need to do npm init too first to generate a package.json
22:28 < samholmes> I need a module that extends the setTimeout API. This is what I need to do: var ID = setTimeout(fun, delay);  ...later, but before the timeout invokes... var delay = getTimeoutDelay(ID); changeTimeoutDelay(formula(delay, newDelay));
22:29 < zastern> Anybody know where the default $NODE_PATH is set when you install node via the ubuntu PPA? e.g. I can echo $NODE_PATH and it gives me some paths, but it's not set in /etc/environment
22:29 < samholmes> I need to update the delay of a specific timeout using a formula that takes the current delay and a new delay.
22:33 < gicode> Is there any way to limit the receive buffer size on a socket?  Is there any limit by default?
22:34 < samholmes> Does anyone know much about this https://github.com/amccollum/timeout ?
22:35 < DTrejo> fetching nave 0.3.0 is failing for me :|
22:36 < context> dtrejo: fails here to, yell at the author
22:36 < DTrejo> npmbro docs nave
22:37 < context> dtrejo: its probably the bad ssl certificate
22:37 < DTrejo> isaacs: nave 0.3.0 fetch seems to be failing, just fyi
22:37 < context> dtrejo: you can manually doownload it though
22:37 < DTrejo> mm, yes ssl
22:37 <@isaacs> DTrejo: `npm install nave -g` fails?
22:37 < context> isaacs: https://isaacs.iriscouch.com has bad ssl certificate
22:38 <@isaacs> context: it has the same one the registry has
22:39 < context> :/
22:39 < context> the url to the package works, npm fails to fetch it though
22:41 < context> dtrejo: fetch the file manually then npm install nave-0.3.0.tgz
22:41 < context> err -g
22:41 < DTrejo> cool
22:41 < DTrejo> ty
22:41 < AvianFlu> you guys should try an 'npm cache clean'
22:42 < context> avianflu: still fails
22:42 < context> this is npm 1.1.48
22:43 < samholmes> Rather than publishing to npm, is it a good idea to just create a module in my project node_modules folder?
22:44 < mmalecki> samholmes: no
22:44 < samholmes> mmalecki: Why not?
22:44 < mmalecki> samholmes: well, publishing to npm is good. and if you want to develop locally, `npm link` is your friend
22:45 < samholmes> mmalecki: what's a symlink? :S
22:46 < samholmes> What's a link? I don't understand.
22:47 < samholmes> What's a "a globally-installed symbolic link" ?
22:47 < mmalecki> well, a symlink is just a "reference" to another directory
22:47 < gicode> samholmes: You are on windows right?  Windows doesn't support symlinks.
22:48 < samholmes> gicode: Yes I am. So is npm link irrelavent for me?
22:48 <@konobi> depends on which version of windows
22:48 < samholmes> vista
22:48 < Benvie> node does symlinks in windows now
22:49 < Benvie> junctions and whatnot
22:49 <@konobi> it's supported assuming you're using NTFS
22:49 < AAA_awright> samholmes: symlink is a reference to another file, a hardlink is a reference to a physical location on-disk (so multiple files can point to the same data)
22:49 < AAA_awright> * reference to another filename
22:49 < samholmes> AAA_awright: How should I use this if I want to develop modules?
22:50 < AAA_awright> For instance, I have index.js symlinked to my primary module in lib/
22:50 < Lorentz> ls
22:50 < Lorentz> oops
22:50 < AAA_awright> Mostly because I don't use npm (and you should too!)
22:50 < AAA_awright> :p
22:50 < samholmes> AAA_awright: I shouldn't use npm? :S
22:51 < AAA_awright> samholmes: Git is your friend, but publish on npm too. Just for the sake of people who don't rely on it, don't depend on it
22:51 < samholmes> Well, how else do you manage deps without npm?
22:55 < mscdex> oh no, not this discussion again
22:58 < AAA_awright> samholmes: You can, but make sure you know where to download dependencies from. Git submodules work great, for instance. You can use .npmignore to exclude those at npm-package-time
22:58 < AAA_awright> mscdex: Discussion again?
22:59 <@konobi> submodules FTFL
23:03 < AAA_awright> Can I get some reasoning besides the knee-jerk OMG SUBMODULES
23:05 < AAA_awright> mscdex konobi: http://magnode.org/nodejs-design-demantics
23:33 < razfar> can anyone here point me in the right direction about how to prevent client side hacking when using socket.io?
23:34 < gicode> razfar: Hacking, in what way?
23:34 < DTrejo> AAA_awright: they act wierd
23:34 < AAA_awright> I'd like to reason with people but it's stuff like this which makes me afraid to post to node-dev
23:38 <@Nexxy> OMG, SUBMODULES?!
23:38 < razfar> gicode - when emitting an event from the client side, preventing a user from injecting JS into your server with malicious intent
23:38 < timeturner> escaping
23:39 < gicode> razfar: It would be pretty bad if that was possible.
23:39 < timeturner> and if you are executing code that is passed in from socket.io there are some serious issues with your setup
23:39 < gicode> razfar: Unless you eval() messages, you don't have to worry about that.
23:39 < timeturner> yeah
23:40 < gicode> razfar: If you do eval() messages, yikes ;-)
23:40 < timeturner> but you still want to escape everything
23:40 < razfar> I don't do eval()
23:40 < timeturner> anything that comes from the client, escape it
23:40 < gicode> timeturner: What do you mean "escape everything"?
23:40 < razfar> but if I escape on the serverside, can't someone who knows how I escape just unescape everything?
23:41 < gicode> timeturner: Socket.io passes everything through JSON, why "escape everything"?
23:41 < gicode> In general "escape everything" isn't a security measure.
23:41 < timeturner> because if that script tag in the json is simply appended to another client somewhere then they're be a problem
23:41 < timeturner> there will*
23:42 < gicode> timeturner: Sure, proper escaping for specific contexts is appropriate
23:42 < gicode> timeturner: But that escaping should be at display time
23:42 < timeturner> ah yes, my mistake
23:42 < timeturner> escape before displaying it
23:43 < gicode> OK, cool
23:43 < timeturner> razfar: but yeah json isn't going to do anything on the server
23:51 < Domenic> tmpvar: any reason why jsdom doesn't have a level1/html?
23:51 < gicode> Is there any way to limit the receive buffer size on a socket?  Is there any limit by default?
23:54 < razfar> I see, thanks
23:54 < luchenbill> any tuts for beginning to use node
--- Log closed Wed Aug 08 00:00:42 2012
