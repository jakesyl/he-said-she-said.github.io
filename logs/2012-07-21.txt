--- Log opened Sat Jul 21 00:00:54 2012
00:04 < samholmes> how can I debug a script that runs then exists our really quick with node-inspector?
00:12 <@othiym23> samholmes: node --debug-brk and / or mocha --debug-brk (I think)
00:12 <@othiym23> been a little while since I did that
00:13 < samholmes> what does this do?
00:13 <@othiym23> but you want whatever the equivalent of --debug-brk for mocha is, so it stops in the debugger before the tests start running
00:14 <@othiym23> use that + the debugger statement in your test code so you can continue the test case, reload the inspector view, and then browse all the source scripts (which node-inspector doesn't know about until they've been required) so you can interactively set breakpoints
00:15 <@othiym23> some of which will be remembered across test runs, some not
00:15 <@othiym23> I've never really figured out which ones do and which ones don't
00:25 < nroot> I am using sqlite3 package from npm and its just kills the node process when I execute select statement for some data rows. But the same database/query works fine in sqlite shell
00:26 < nroot> I attached the debugger to see the point to crash and it seems like a memory access violation in Local<Object> Statement::RowToJS(Row* row) function (statement.cc line 743)
00:28 < nroot> Anyone else seeing similar error
00:29 < TooTallNate> nroot: you should open a github issue on their project
01:14 < diegoviola> rails is too bloated, i hate working with it
01:15 <@SubStack> late the hate flow through you
01:15 <@SubStack> s/late/let/ >_<
01:16 < TooTallNate> give in to your suffering
01:17 < diegoviola> why do people like rails is beyond me
01:17 < diegoviola> why do people like activerecord is beyond me
01:17 < diegoviola> AR hides too much, it's slow
01:18 < diegoviola> etc
01:18  * diegoviola sighs
01:18 < blazes816> people like simple, even at the expense of speed
01:18 < blazes816> in general
01:18 < tjholowaychuk> i feel your pain
01:18 < tjholowaychuk> magical crap was the reason i left ruby-land
01:18 < tjholowaychuk> datamapper pushed me over the edge
01:19 < diegoviola> AR is not simple
01:19 < blazes816> diegoviola: User.where(:id => 1) is much simpler to most people than SELECT * from Users WHERE id = 1
01:19 < tjholowaychuk> complex frameworks make ~80% simple and the other ~20% a nightmare
01:19 < diegoviola> ruby world has too much "magic" it hurts
01:19 < tjholowaychuk> drupal was like that too
01:20 < diegoviola> blazes816: sure it's fine for basic shit
01:21 < diegoviola> blazes816: but try doing complex queries with lots of joins, and try using the rdbms features, etc
01:21 < diegoviola> it gets dirty
01:21 < blazes816> yeah, i know as things tend toward any kind of complexity things get rough.  but the majority of developers (that i've come across) don't care
01:21 < blazes816> but I completely agree with you
01:22 < diegoviola> you have to rely to Model.select_all() and/or bypass the ORM, and then you'll get bitched it for not doing things the rails way, etc
01:23 < diegoviola> tjholowaychuk: what are you using now? node, express?
01:24 < diegoviola> tjholowaychuk: i mean after you left ruby
01:24 < tjholowaychuk> i never used rails i skipped and used to use sinatra, thus why express is very sinatra-like
01:24 < tjholowaychuk> skipped it*
01:24 < tjholowaychuk> i didnt want to read big books just to figure out how to make some simple things
01:25 < blazes816> express completely out sinatras sinatra
01:49 < taterbase> Is there a way to "alert" or notify the console/terminal with a node.js console app?
01:49 < taterbase> Like how some apps put the star there, or make the computer beep
01:50 <@tbranyen> console.log("\b") ?
01:51 < taterbase> tbranyen: that doesn't seem to work
02:22 < kuryaki> Heya i like how locomotive use the routes, is there any plugin that does just that? http://locomotivejs.org/guide/routing.html
02:22 < kuryaki> for express
02:35 <@konobi> kuryaki: tried the express/connect channel?
02:42 < kuryaki> konobi: yup ty, got an answer there already
02:47 < kinginky> suggestions for a very simple lightweight DB choice in Node.JS? i was going to use sqlite, but when i try to npm install it, i get errors
02:48 < kinginky> i did notice this: Checking for node path                   : not found 
02:48 < TooTallNate> kinginky: i'd say try sqlite3 instead
02:51 < kinginky> TooTallNate: i was, using npm install sqlite. now i'm trying the other package i found, node-sqlite, which isn't available through npm. it still gives similar errors during build
02:51 < TooTallNate> you need to gist your errors
02:51 < TooTallNate> but still, you should try "sqlite3"
02:52 < TooTallNate> https://github.com/developmentseed/node-sqlite3
02:52 < TooTallNate> it at least uses node-gyp to build ;)
02:53 < kinginky> TooTallNate: i see now, i apologize. let me see if this one built
02:53 < kinginky> still getting some warnings, but that doesn't mean it's going to fail.
02:54 < kinginky> it worked. thanks Nate
02:54 < benvie> I use node-gyp 800 times a day
02:55 < TooTallNate> np
03:54 < benvie> check this out https://github.com/appjs/appjs/raw/master/examples/chrome-in-node-repl.jpg
03:55 < runvnc> nice
03:57 < kinginky> when you write your own module, and you set module.exports at the end of your file, how do you set it so you can do:
03:57 < kinginky> var mod = require('mymodule');
03:57 < kinginky> m = new mod();
03:57 < benvie> module.exports = function Mod(){}
03:58 < kinginky> benvie: cool, what if your function is already declared?
03:58 < kinginky> function Mod() {
03:58 < kinginky> };
03:58 < kinginky> module.exports = Mod;
03:58 < kinginky> that's what you'd think
03:58 < benvie> function Mod(){}; module.exports = Mod;
03:58 < benvie> or the other way around
03:58 < benvie> since function decls are hoisted
03:58 < kinginky> odd...
03:58 < benvie> I ususally put the export right before the function
03:59 < benvie> module.exports = Mod; function Mod(){}
03:59 < kinginky> https://gist.github.com/3154528
03:59 < kinginky> i can go that route, it's not a big deal
03:59 < kinginky> but here's my code -- this doesn't work
03:59 < kinginky> i get 'object is not a function'
03:59 < benvie> yeah so the problem is
04:00 < benvie> the function will export no problem but the prototype won't be set until where it actually does in the code. So somewhere you're invoking that before the prototype is actually set
04:00 < ET_> hello everyone. i have problem if anyone can help. can't install nothing using npm
04:00 < benvie> or functions on the prototype
04:00 < ET_> removing / install again node js and npm doesn't help
04:00 < benvie> only function decls will be hoisted in that manner
04:00 < kinginky> benvie: here's the file calling it
04:00 < kinginky> https://gist.github.com/3154529
04:00 < benvie> but it's probably not an external thing
04:01 < benvie> since by the time it actually gets out to whatever is requiring it then it will have run through the whole fikle
04:01 < kinginky> you'd think
04:02 < benvie> it's probably something to do with
04:02 < benvie> this.toWorker({
04:02 < benvie> that looks fragile and timing sensitive
04:02 < rvagg1> ET_: what error?
04:02 < benvie> or this.worker
04:03 < benvie> er yeah not toWorker, worker
04:03 < kinginky> hmm
04:03 < rvagg1> got a line number for the error kinginky?
04:03 < beachdog> are you sure it is actually resolving and loading your module?  If you log the 'scout' variable is it undefined or something?
04:03 < kinginky> so how would i go about fixing?
04:03 < benvie> also
04:03 < ET_> Error: Cannot find module 'block-stream'
04:03 < kinginky> rvagg1: one sec
04:03 < ET_> thank you 
04:03 < benvie> er nm
04:04 < kinginky> rvagg1: at Object.<anonymous> (/home/kinginky/code/cltools/nodeifier/index.js:5:13
04:04 < benvie> yeah you should have a more specific pointer from errors as to where the fail is
04:04 < rvagg1> ET_: that's from an: npm install block-stream ?
04:04 < ET_> i've install nodejs and npm first using the rpm an it worked. then i removed and installed using repo
04:04 < ET_> after it removing and installing again each way doesn't helop
04:04 < kinginky> beachdog: it's just telling me "object is not a function"
04:04 < ET_> i can't install anything using npm
04:04 < rvagg1> oh, benvie, it's your require
04:04 < rvagg1> sorry, kinginky
04:04 < kinginky> let me try and log it
04:04 < rvagg1> require('./scout')
04:04 < kinginky> rvagg1: is it? how so?
04:04 < benvie> ah yes
04:04 < kinginky> hm
04:04 < kinginky> u sure?
04:04 < benvie> yeah
04:04 < kinginky> k
04:04 < ET_> even npm update
04:05 < kinginky> because it's in a folder called node_modules
04:05 < rvagg1> 'scout' is global or node_modules, './scout' is local 
04:05 < kinginky> it's in node_modules :[
04:05 < kinginky> ./node_modules/scout.js
04:05 < rvagg1> ah, no good
04:05 < benvie> if you're referencing something that is relatively located to your file, then you use filesystem terminology basically
04:05 < kinginky> ./index.js calling
04:05 < rvagg1> node_modules/scout/ - also needs a package.json
04:05 < kinginky> benvie: ok
04:05 < kinginky> ill try it
04:05 < benvie> yeah
04:05 < rvagg1> don't develop in your node_modules, bad idea
04:06 < kinginky> rvagg1: i have my own node_modules folder
04:06 < kinginky> in the root of my app
04:06 < kinginky> node looks from the root of your app up the file tree for a node_modules folder, using the first it finds
04:06 < benvie> how are these things relatively positioned?
04:06 < benvie> two things in the same node_modules folder, for example, can't skip the './'
04:06 < kinginky> let's say my app is in a folder ~/app
04:06 < benvie> two files I mean
04:06 < kinginky> i have ~/app/index.js calling the scout and messenger modules
04:07 < kinginky> which are located in ~/app/node_modules/scout and messenger respectively
04:07 < rvagg1> ET_: that's a strange issue you have, try rm -rf ~/.npm
04:07 < rvagg1> and start again
04:07 < benvie> also try this
04:07 < benvie> require.resolve('scout')
04:07 < ET_> i know :(
04:07 < benvie> in that same spot
04:07 < ET_> sec
04:07 < benvie> it will tell you where it thinks it is
04:07 < ET_> thank you rvagg1
04:07 < kinginky> benvie: sweet
04:08 < benvie> it should just return a path or fail
04:08 < rvagg1> ET_: by start again, I mean npm install
04:08 < kinginky> benvie: the resolve addition didn't do much, changed my error from 'object is not a function' to 'string is not a function'
04:08 < Borate_> has anybody faced problem while building bcrypt
04:08 < kinginky> means it must be finding it, right?
04:09 < benvie> well it's more of a debugging thing. Just to make sure it finds it correctly
04:09 < benvie> it returns a string
04:09 < kinginky> you know what i just realized though
04:09 < benvie> it returns the path of the found module
04:09 < benvie> so log that
04:09 < ET_> npm install express gives same error
04:09 < kinginky> in each of these modules, 'scout' and 'messenger', i have lib folders
04:09 < npmbro> ET_: Please see http://github.com/visionmedia/express#readme http://github.com/Raynos/error#readme
04:09 < Borate_> > node-gyp rebuild gyp ERR! rebuild error Error: Command failed: Unknown option: --
04:09 < kinginky> and in those lib folders are files named scout.js and messenger.js
04:09 < kinginky> i dont know if this should cause problems
04:09 < ET_> tried now to remove everything and install again... same issue
04:09 < benvie> I dunno, by that description no but it sounds pretty convoluted already =D
04:10 < ET_> npmbro: looking now
04:10 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
04:10 < rvagg1> ET_: you don't have any strange network setup that might prevent it from connecting to the npm registry
04:10 < rvagg1> ET_: ignore npmbro, it's a bot
04:10 < kinginky> ok, it's logging the correct path..
04:10 < rvagg1> npmbro shutup
04:10 < npmbro> rvagg1: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20shutup
04:10 < ET_> npm install -g express not working for me
04:10 < npmbro> ET_: Please see http://github.com/visionmedia/express#readme http://search.npmjs.org/#/me
04:10 < ET_> Error: Cannot find module 'block-stream'
04:10 < benvie> ok so that rules out that problem
04:10 -!- npmbro was kicked from #Node.js by wookiehangover [npmbro]
04:10 < kinginky> yeah -- definitely the right path
04:11 < benvie> (I swear by the repl by the way)
04:11 < benvie> I'd be in the repl including things one by one to see what i actually get
04:11 < kinginky> benvie: hold on... i think i may have been working on thew rong file
04:11 < kinginky> god damnit
04:11 < benvie> or logging it
04:11 < ET_> rvagg1: no. first installation worked. everything messed up after i tried the repo 
04:11 < rvagg1> ET_: what OS? Linux?
04:11 < ET_> Centos minimal 6.3
04:12 < kinginky> benvie: fixed
04:12 < rvagg1> ET_: perhaps you have something stale in your global node_modules directory, wouldn't be surprised if you installed a distro rpm, they can be a bit old
04:12 < kinginky> everyone: thak you
04:12 < rvagg1> ET_: /usr/local/lib/node_modules i think, you could remove it and install from scratch
04:13 < ET_> i found that /usr/lib/nodejs/npm/npmrc is having . globalconfig = /etc/npmrc but i don't have this file
04:13 < Borate_> has anybody tried building crypt
04:13 < benvie> excellent
04:13 < et_> sorry .lost connection
04:14 < rvagg1> Borate_: no, but it sounds like perhaps the bindings.gyp isn't set up properly for your platform, have a poke around and see
04:14 < et_> i have globalconfig = /etc/npmrc in     /usr/lib/nodejs/npm/npmrc
04:14 < et_> but no /etc/npmrc exists
04:14 < et_> could it be the problem?
04:15 < rvagg1> doesn't need an npmrc to operate
04:15 < et_> ok. good to know. i am one day old in js world :)
04:15 < et_> so what could be the problem?
04:15 < rvagg1> I think perhaps you should be checking to see if you don't still have the distro version, rpm, and the downloaded install
04:16 < rvagg1> et_: 'whereis node'
04:16 < et_> there is a distro version? i didn't found one. i used wget http://nodejs.tchol.org/repocfg/el/nodejs-stable-release.noarch.rpm for installation
04:16 < rvagg1> if you have a /usr/lib/nodejs/ then that looks like something that comes from an rpm
04:16 < rvagg1> oh, ok... I have no idea about that one..
04:17 < rvagg1> perhaps just uninstall it and grab it from nodejs.org and build, or even check it out from github, it's super simple to build and install
04:17 < et_> rvagg1: node: /usr/bin/node /usr/include/node
04:18 < et_> i am going to install from git anyway, but i am writing for my tech blog about installing and working inside centos. and it's important to me to get it to work in stable rpm too
04:18 < marcosnils> Hi there, i'm using nodejs to perform multiple async writes to different redis servers trying to achieve strong consistency and i'm getting really low response times (almost lineal) in comparison to writing to a single node. Maybe someone has a hint about this?
04:19 < et_> does 'yum remove nodejs nodejs-stable-release.noarch nodejs-compat-symlinks npm not removing' everything?
04:19 < rvagg1> been a long time since I used a non-Debian based Linux so I'm not sure
04:20 < et_> nodejs btw works fine and run .js file 
04:20 < et_> just the npm is broken.
04:21 < rvagg1> ah, I see that the rpm is the one recommended on the node wiki
04:21 < et_> yep.
04:21 < et_> i am writing on how to rpm/repo/git/make on centos
04:22 < et_> so i am (and will) install / remove it several times.
04:23 < et_> but after the first removal the npm was broken 
04:23 < rvagg1> what does 'sudo npm update -g' do?
04:23 < et_> same error
04:24 < et_> i managed to install Express and Derby in the first rpm installation
04:24 < rvagg1> there's also an ~/.npmrc too btw but I can't imagine it having anything that would mess up resolution
04:24 < et_> no ~/.npmrc file at my /root
04:25 < rvagg1> ok... so, do an npm install with --verbose and see where it falls down
04:25 < rvagg1> make sure it's connecting to https://registry.npmjs.org/ and not somewhere else
04:26 < et_>  npm ERR! Error: Cannot find module 'block-stream' npm ERR!     at Function._resolveFilename (module.js:337:11)
04:26 < rvagg1> and also make sure you have the version of node and npm that you expect, it'll tell you in --verbose, node v0.8.x and npm 1.1.3x
04:27 < et_> npm info using npm@1.1.19 npm info using node@v0.6.18
04:27 < rvagg1> ok, not new but should still work
04:27 < et_> yeah, that the stable rpm
04:28 < marcosnils> et_, have you tried downloading the module manually and put it in your npm directory?
04:28 < rvagg1> well, 0.8 is the latest stable node
04:29 < et_> marcosnils: no. i didn't. it may work manualy but something made npm stop working for me and it's interesting what
04:29 < et_> complete remove of npm/nodejs doesn't help either
04:30 < et_> node.js is working fine
04:30 < marcosnils> do you see the block-stream dir in your npm folder?
04:30 < rvagg1> do a search on your system for all directories named node_modules, it's possible that you multiple, broken installations of npm
04:31 < marcosnils> sudo updatedb && locate block-stream
04:31 < marcosnils> check if the block-stream folder is corrupted or does not have sufficient permissions 
04:31 < marcosnils> maybe npm installation could not re-install the module or something
04:32 < rvagg1> marcosnils: he says it's more than just block-stream
04:32 < et_> npm update also gives same error. trying to search for node_modules
04:34 < marcosnils> can you see the missing modules in /usr/lib/nodejs/npm/node_modules?
04:35 < et_> no node_modules nowhere.  
04:35 < octane--> can anyone tell me why is it that my errors come out like this? http://pastebin.com/neVJt719
04:35 < octane--> it used to come out nicely on separate lines
04:36 < marcosnils> so, what's in your npm main folder?
04:36 < et_> no /usr/lib/nodejs/npm/node_modules
04:36 < et_> only /usr/lib/nodejs/npm folder
04:36 < marcosnils> nothing inside of it?
04:37 < et_> bin  lib   man   cli.js   npmrc    package.json
04:38 < et_> package.json
04:38 < marcosnils> nice..
04:39 < marcosnils> try sudo ./bin/install.sh
04:39 < marcosnils> that should download and re-install npm modules
04:39 < et_> did 'yum remove npm' and 'yum install npm' now, nothing changed.
04:40 < et_> only 2 .js files
04:40 < marcosnils> don't you have the install.sh binary in the /bin folder?
04:40 < et_> install.sh not exist
04:41 < et_> usr/lib/nodejs/npm/bin
04:41 < marcosnils> does yum remove npm removes the npm folder enitrely?
04:41 < rvagg1> do that yum remove again but this time do a manual clear out of /usr/lob/nodejs/npm
04:41 < et_> yep
04:41 < rvagg1> erk
04:41 < et_> yum removed now
04:41 < et_> no npm folder
04:41 < et_> installed again , same condition
04:42 < et_> npm update: ERR! Error: Cannot find module 'block-stream'
04:43 < et_> it's the same error for every npm command
04:43 < rvagg1> so the thing about block-stream is that it's a dependency of npm, which node will try to load from npm's node_modules subfolder... which doesn't exist
04:43 < rvagg1> for some reason, yum, or the package, isn't installing npm properly
04:44 < et_> ok, good to know where is the problem, i've guessed it's in the package (or yum) but i didn't knew what files missing
04:45 < et_> you say i need to have /usr/lib/nodejs/npm/node_modules
04:45 < rvagg1> yes, and there should be a whole heap of subdirectories there, npm has a lot of dependencies
04:46 < et_> and not as a symbolic link?
04:46 < rvagg1> no
04:46 < et_> ok
04:46 < marcosnils> no, the binaries are there
04:46 < marcosnils> et, try this
04:47 < marcosnils> curl -s http://npmjs.org/install.sh > npm-install-$$.sh
04:47 < marcosnils> sh npm-install-$$.sh
04:48 < rvagg1> that's installing from scratch btw
04:48 < dthompso99> is there a specific irc for express?
04:49 < et_> npm cannot be installed without nodejs.
04:49 < et_> Install node first, and then try again. 
04:49 < et_> Maybe node is installed, but not in the PATH? 
04:49 < et_> Note that running as sudo can change envs. 
04:49 < marcosnils> sudo -u
04:49 < et_> PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin 
04:49 < et_> i am root
04:51 < marcosnils> go to your normal user
04:51 < marcosnils> and run it as sudo -u sh npm install
04:51 < et_> don't have sudo in centos minimal
04:51 < marcosnils> what about su?
04:51 < et_> i don't have normal user
04:51 < et_> i login as root
04:51 < marcosnils> where's your node binary then?
04:52 < et_> i have installed it using the .rpm
04:52 < marcosnils> run "which node"
04:52 < et_> don't have which, and yum install which doesn't work. but
04:53 < et_> whereis node 
04:53 < et_> node: /usr/bin/node /usr/include/node
04:53 < marcosnils> nice.. the install script uses "which" to find your node binaries
04:53 < marcosnils> edit your install.sh file
04:53 < marcosnils> go to this line
04:54 < marcosnils> # make sure that node exists
04:54 < marcosnils> node=`which node 2>&1`
04:54 < marcosnils> and change which for whereis
04:56 < et_> changed 4 times, same error in script
04:56 < dthompso99> not looking at the install script.. but whereis probably wont work, since it does not give a nice clean path to execute
04:56 < dthompso99> change it to 
04:57 < marcosnils> it doesn't matter. The script only looks for the return code
04:57 < dthompso99> node='/usr/bin/node'
04:57 < marcosnils> not the path
04:57 < dthompso99> ah, ok... its just a check
04:57 < dthompso99> this is fedora?
04:58 < et_> centos minimal
04:58 < dthompso99> ahh, ok
04:58 < marcosnils> et_, do you mind sharing your screen?
04:58 < dthompso99> 'which' is still pretty minimal, i cant belive they dont include that, lol
04:58 < marcosnils> join.me
04:59 < et_> no , don't mind at all
04:59 < et_> jcan be done in irc?
04:59 < marcosnils> http://join.me
04:59 < et_> yeahh.. and i've epel also
04:59 < marcosnils> grrr
05:00 < marcosnils> join.me is flash based
05:00 < dthompso99> try logmein
05:01 < dthompso99> actually have to make an acct there tho
05:01 < et_> i found a .repo file in yum
05:01 < et_> removed it
05:01 < et_> removed everything
05:01 < et_> and i'm trying again
05:01 < marcosnils> ok
05:02 < et_> same error.
05:03 < et_> i have ammyy
05:04 < et_> and now join.me
05:04 < marcosnils> join.me is flash based
05:04 < marcosnils> I don't think you may run it
05:05 < et_> sorry. disconnected
05:05 < et_> install join.me
05:05 < et_> installed*
05:05 < marcosnils> ok.. send the link then
05:05 < et_> https://join.me/647-859-196
05:06 < marcosnils> i'm watching
05:06 < et_> ok
05:07 < marcosnils> yup
05:07 < marcosnils> hold a sec
05:07 < et_> ok
05:07 < marcosnils> remove nodejs and npm through yum
05:08 < marcosnils> remove nodejs and npm through yum
05:08 < marcosnils> ok
05:09 < marcosnils> now run this git clone git://github.com/creationix/nvm.git ~/nvm
05:09 < marcosnils> now . ~/nvm/nvm.sh
05:10 < marcosnils> and finally nvm install v0.6.19
05:10 <@chilts> v0.6.20 is also available :)
05:10 <@chilts> as is v0.8.3
05:10 < et_> which problem again :)
05:10 < marcosnils> hold it :D
05:10 < et_> and i have curl
05:11 < marcosnils> cancel the download
05:11 < marcosnils> ctrl +c
05:11 < marcosnils> make an alias
05:11 < marcosnils> called which to whereis
05:11 < et_> too long :)
05:12 < marcosnils> alias which=whereis
05:13 < et_> yeah, i don't have open-ssl
05:13 < marcosnils> nice..
05:13 < marcosnils> ok
05:13 < marcosnils> install npm and node from yum again
05:14 < marcosnils> you have the original nodejs repos right?
05:14 < et_> i made a script. it's good?
05:14 < marcosnils> yep
05:14 < marcosnils> nice
05:14 < marcosnils> go 4 it
05:14 < marcosnils> go to the npm folder after finish
05:15 < et_> thanks god it's not a windows update
05:15 < marcosnils> :D
05:15 < marcosnils> go to bin and try running the installer again
05:15 < et_> no installer :(
05:16 < marcosnils> curl -s http://npmjs.org/install.sh > npm-install-$$.sh
05:16 < et_> strange system i have
05:17  * coderarity is away: brb
05:17 < et_> i am sure building everything up from git will work.. but something made my packages broken
05:18 < marcosnils> waith
05:18 < et_> so i can't install it from yum with the package or repo
05:18 < marcosnils> don't run the installer with bash
05:18 < marcosnils> make a sh instal...
05:18 < marcosnils> run which node again plz
05:19 < AustinYun> http://www.austinyun.com/node-js-install <--- documented how I installed nvm here, dunno if it helps
05:20 < marcosnils> does that work for CentOS AustinYun ?
05:20 < et_> it's for apt-get
05:20 < et_> using git
05:21 < AustinYun> except for the part about using apt to remove the version that you get through your package manager, it should
05:21 < et_> yeah, i going to install openssl anyway
05:22 < AustinYun> ah, right, i found that part out the hard way
05:22 < et_> and i've guess i am running out of options but to install from git
05:22 < et_> but something is broken with the packages
05:22 < et_> and other from the community (using centos only maybe) will have this problem
05:22 < AustinYun> check for an "openssl-dev" or similar package from centos
05:23 < AustinYun> yum openssl-devel maybe
05:23 < marcosnils> hold a sec et_ 
05:23 < et_> yeahh.. no prob
05:23 < et_> i can find the openssl
05:24 < et_> and it can be installed to run the nvm.sh
05:24 < et_> if nothing else will work, that's the route i will walk 
05:24 < et_> but it's interesting to me what made the package broken even with 'yum remove'  'yum install'
05:25 < AustinYun> you don't actually need git -- just the nvm.sh in a folder called nvm, for the record
05:25 < et_> i already download it .. 
05:27 < marcosnils> et_, 
05:27 < marcosnils> run this plz
05:27 < marcosnils> alias which=whereis node | cut -d " " -f2
05:27 < marcosnils> remove the node word
05:28 < marcosnils> now run the install script again
05:28 < et_> run quietly :)
05:28 < marcosnils> not the nvm..
05:28 < marcosnils> the npm install script
05:28 < et_> ohh.. sorry..
05:28 < et_> so?
05:29 < marcosnils> run it with sh plz
05:29 < marcosnils> run which node
05:30 < marcosnils> create the alias again
05:30 < marcosnils> like this
05:30 < marcosnils> alias which=whereis | cut -d " " -f2
05:31 < marcosnils> typ whereis node
05:31 < marcosnils> whereis node | cut -d " " -f2
05:31 < et_> i can't find a way to install which on centos
05:32 < marcosnils> 1 sec
05:32 < marcosnils> unalias which
05:33 < marcosnils> type which now
05:33 < marcosnils> ok
05:33 < marcosnils> now create the alias again like this: 
05:33 < marcosnils> alias which=whereis | cut -d " " -f2
05:34 < marcosnils> wtf
05:34 < et_> i don't know what the | cut stuff is so i don't understand what you trying to do
05:34 < et_> so i can't help :(
05:34 < marcosnils> i'm requesting control for a sec
05:34 < marcosnils> do you mind ?
05:35 < et_> onpe
05:37 < marcosnils> hmm
05:37 < marcosnils> too slow 
05:37 < marcosnils> for me to control
05:37 < marcosnils> hold a sec
05:37 < marcosnils> create the alias again
05:37 < marcosnils> but make sure
05:37 < marcosnils> not to leave a space
05:37 < marcosnils> in the beginning
05:38 < et_> that's ok?
05:38 < marcosnils> run which node again plz
05:38 < marcosnils> try
05:39 < marcosnils> alias which='whereis | cut -d " " -f2"
05:39 < marcosnils> alias which='whereis | cut -d " " -f2; 
05:39 < marcosnils> alias which='whereis | cut -d " " -f2'
05:40 < marcosnils> nice
05:40 < marcosnils> run the script again plz
05:40 < et_> ;)
05:40 < marcosnils> the npm install
05:40 < et_> you're too good
05:40 < marcosnils> change the whereis
05:41 < marcosnils> try which node plz
05:41 < marcosnils> lol
05:41 < et_> ok.. that's 
05:41 < et_> :)
05:41 < marcosnils> yep
05:41 < marcosnils> unalias which
05:42 < marcosnils> alias which=`whereis | cut -d " " -f2`
05:43 < marcosnils> 1 sec
05:43 < Zoney> oh, i can learn linux admin here too
05:43 < et_> ;)
05:44 < marcosnils> 1 sec
05:49 < marcosnils> K
05:49 < marcosnils> lets do this
05:49 < marcosnils> unalias
05:50 < marcosnils> unalias which
05:50 < marcosnils> ok
05:50 < marcosnils> echo $PATH
05:50 < marcosnils> go to /bin
05:50 < marcosnils> create a new file called which
05:51 < et_> and what to put inside?
05:51 < marcosnils> open it
05:51 < marcosnils> #!/bin/bash first line
05:52 < marcosnils> remove the first line
05:52 < marcosnils> then
05:52 < marcosnils> whereis $1 | cut -d " " -f2
05:52 < marcosnils> save it and close it
05:52 < marcosnils> chmod +x which
05:53 < Zoney> man which *giggle*
05:53 < marcosnils> save it and close it
05:53 < marcosnils> go to bin
05:53 < marcosnils> ls -la | grep which
05:54 < marcosnils> ./which node
05:54 < marcosnils> try which node only now
05:54 < marcosnils> k
05:54 < marcosnils> now try running the install script
05:55 < et_> sweet
05:55 < et_> almost.. :)
05:55 < marcosnils> try now
05:55 < marcosnils> npm update
05:55 < et_> ;)
05:56 < marcosnils> :D
05:56 < et_> man.. you're great.. and more important.. i have which in centos :)
05:56 < marcosnils> lol
05:56 < marcosnils> :)
05:56 < marcosnils> have fun!
05:56 < marcosnils> :)
05:56 < marcosnils> try installing something
05:56 < et_> thank you very very much!
05:56 < marcosnils> npm install -g mocha
05:56 < dthompso99> shweet, you got it up and running! =)
05:56 < marcosnils> nice
05:56 < et_> yeahh,, nice
05:57 < et_> i guess there is a bug in the npm package 
05:57 < marcosnils> probably.. let someone fix it :D
05:57 < et_> the install script fixed it
05:57 < et_> BTW - because i am new.. i am going to ask a node.js question now :)
05:57 < et_> where the -g installing?
05:57 < marcosnils> globally in your home dir
05:58 < marcosnils> under npm dir
05:58 < et_> ok.
05:58 < et_> and if i am deleting this dir
05:58 < marcosnils> ~/.npm
05:58 < et_> i get a clean install again?
05:58 < marcosnils> which one ?
05:58 < et_> all modules under ./npm
05:58 < marcosnils> yep
05:59 < et_> basicly this folder wasn't here until the recent npm install
05:59 < et_> so i can delete it 
05:59 < et_> ?
05:59 < et_> and npm install will create it again?
06:00 < marcosnils> the ~./npm folder is where all your global modules go
06:00 < et_> cool
06:00 < et_> thank you very very much!!!!!!
06:00 < et_> and thank you again... 
06:01 < marcosnils> sure.. 
06:01 < marcosnils> :)
06:01 < et_> and for all the great guys before you also.!
06:01 < et_> :)
06:15 < sqwishy> How do I get streams and buffers to write data to each other :/
06:16 <@deoxxa> sqwishy: be more specific
06:17 < sqwishy> deoxxa: Well, at the moment, I'm trying to take all of stdin, run it through deflateRaw, and take what comes out and pipe it to stdout.
06:18 < sqwishy> And I could use createDeflateRaw but I don't want to in this case
06:18 <@deoxxa> well, you can use something like buffoon to do that
06:19 <@deoxxa> but that's counterproductive in the long run
06:19 <@deoxxa> you're not always going to be able to count on stdin fitting in memory
06:19 <@deoxxa> or, for that matter, ever ending
06:19 < sqwishy> Yes, I know it's bad, but I'm just doing it to see what deflateRaw is doing
06:20 <@deoxxa> well i've used https://github.com/mafintosh/buffoon for that
06:33 < dthompso99> think a kinda generic node wrapper around ioctl is feasable?
06:35 < dthompso99> looks like it will be a monster of a c++ extension, unless im looking at things all wrong
06:49 < rvagg1> dthompso99: what do you need to do with ioctl?
07:08 < dthompso99> a number of things in the long run... currently collect ip addresses from the attached devices
07:09 < dthompso99> i could parse out ifconfig.. but there's a few other hardware related issues down the road
07:10 < rvagg1> start simple and an extension would be pretty straightforward... and fun!
07:12 < rvagg1> the approach I take is to put most of the complexity into the JS abstraction layer, so your C++ can be straightforward and not have to do too much error checking, makes it much simpler
07:13 < dthompso99> nod... my C isnt all that great, but good enough to do the job slowly but surely
07:13 < dthompso99> should be an interesting project... a router configuration portal done in node
07:15 < benvie> that is a good strategy
07:16 < benvie> many times it also ends up faster as well, than doing back and forth transit between js and C++
07:16 < benvie> you want to keep things in one side or the other for as long as possible and minimize transitions
07:17 < dthompso99> right... grab all the data possible from one c++ function, and keep it in JS for later use?
07:17 < benvie> whatever functions make sense at the binding level
07:17 < benvie> at most basically it might boild down to say like
07:17 < benvie> get value, set value, value exists, list possible names
07:18 < benvie> as a generic binding level
07:18 < benvie> if it's possible to dump all the relevent data in one go that's better
07:18 < dthompso99> usefull functionality im supprised no one has written yet
07:18 < benvie> but usually people are looking to do something with more dynamic interaction b
07:19 < benvie> I think this thing I made is a relatively good template project
07:19 < benvie> https://github.com/Benvie/environment
07:19 < benvie> it's an implementation of node's very own bindings for process.env
07:20 < benvie> but it puts all the js semantics in js
07:20 < benvie> and reduces the C++ end of it down to a few basic functions
07:20 < dthompso99> oh, awsome... thats pefect!
07:20 < benvie> and includes basic example of binding.gyp as well for actually getting it compiled
07:21 < dthompso99> hah, i spent most of my day yesterday looking for a good example like this
07:21 < benvie> I made this on inspiration from a thread of discussion on the mailing list
07:22 < benvie> process.env was an offender of the rules of bindings (still is until recent chsnges in master for 0.9)
07:22 < benvie> where it has an object interface kind of but doesn't uphold all the semantics
07:22 < benvie> so I wanted to see what it would look like to do it mostly complete
07:23 < benvie> the C++ part of it is almost unmodified directly from node.cc
07:23 < dthompso99> i think ioctl would probably fit in that same category
07:25 < benvie> es6 provides the tools to actually implement objects that do this kind of stuff
07:25 < dthompso99> es6?
07:25 < benvie> next version of js, some features which are in v8 (and node) but need to be enabled by runtime flag
07:26 < benvie> if you run `node --harmony`
07:26 < benvie> you'll find some new things available on global objects
07:26 < dthompso99> ahh, havent tried that one yet
07:26 < benvie> Map, WeakMap, Set, Proxy, and some other semantics
07:26 < benvie> it doesn't normally affect existing code, mostly adds new things
07:27 < dthompso99> all this map functionaly is soon to exist?
07:27 < benvie> already exists
07:27 < benvie> it's just a matter of when it becomes enabled by default
07:27 < benvie> try it now, run `node --harmony`
07:27 < benvie> which the node you have
07:27 < benvie> it'll work
07:28 < dthompso99> oooh.... im not opposed to running something beta for now, i need to research those goodies
07:28 < benvie> Map and WeakMap can use objects as keys
07:28 < benvie> like
07:28 < benvie> var x = new Map; x.set(process, { secrets: [] })
07:28 < benvie> console.log(x.get(process))
07:29 < dthompso99> where process is simply a c binding?
07:29 < benvie> node's normal process object I mean =D
07:29 < benvie> it's any object
07:30 < benvie> x.set(Array, ['my name is Array'])
07:30 < benvie> x.get(Array)
07:31 < benvie> it allows you to associate metadata with any object, essentially properties, that aren't visible to anyone else
07:31 < benvie> or is only visible to people who you give x (the Map) to
07:32 < dthompso99> ahh, ok... nothing that will help get around writing a new extension... I got excited for a moment!
07:32 < benvie> oh
07:32 < benvie> well Proxy is what you want for that
07:32 < benvie> I joined node context with chromium context via a proxy object bridge
07:32 < benvie> https://github.com/appjs/appjs/raw/master/examples/chrome-in-node-repl.jpg
07:33 < benvie> also available with --harmony
07:34 < dthompso99> ok... so proxy is an api proxy?
07:34 < benvie> yeah not a net proxy
07:34 < benvie> a js semantic proxy
07:34 < benvie> basically it does that
07:34 < dthompso99> very very cool... full api support to anything that will support it
07:34 < benvie> almost all normal actions in js are reflected as callbacks when conducted on a proxy
07:35 < benvie> get, set, keys, has, hasOwn, getOwnPropeertyNames, getOwnPropertyDescriptor, keys, enumerate, delete, call, construct
07:35 < benvie> so, for example, if you do
07:36 < benvie> obj.prop
07:36 < benvie> it invokes `handlerForObj.get('prop')`
07:38 < dthompso99> sounds like i've got some reading to do to get back on top of things!
07:38 < benvie> anyway that's how I reflect the entire js context outside of its heap into another one
07:38 < benvie> allowing live bindings between browser and node
07:39 < benvie> well, part of it
07:39 < dthompso99> yea.. that could give you allot of data directly readable by the browser
07:39 < benvie> not a lot
07:39 < benvie> all of it
07:40 < benvie> and vice versa
07:40 < benvie> if you run appjs and go into the chromium debugger
07:40 < benvie> there's a node object on window
07:41 < benvie> node.process reflects process
07:41 < benvie> node.Object() creates a new object originating in the node context
07:42 < dthompso99> oh wow... now that his handy
07:42 < benvie> conversely, if I were to do this
07:42 < dthompso99> it using a socket to keep that object up to date?
07:43 < benvie> app.windows[0].addEventListener('mousemove', function(e) { console.log(e.clientX, e.clientY) })
07:43 < benvie> that would spam the node console with x/y when the mouse moved over the browser
07:43 < benvie> basically, although its closer
07:43 < dthompso99> oh thats pimp
07:43 < benvie> they run in the same process, but different js heaps
07:44 < benvie> so the fulfillment is sync
07:44 < benvie> you can run any function in the opposite context and have it work
07:44 < benvie> like
07:44 < benvie> window.node.process.mainModule.require('fs')
07:45 < benvie> will return the fs module to browser context
07:45 < dthompso99> and actions on the fs module would actually happen on the server?
07:45 < benvie> yeah
07:45 < dthompso99> omg
07:45 < dthompso99> thats awsome
07:45 < benvie> I've actually been doing that, playing with a thing I made
07:46 < benvie> a proxy for the file system that exposes files and directories as objects
07:46 < benvie> so if I load this up in the chrome debugger
07:46 < dthompso99> yea... thank goodness im not far on my little project, you've just rethought my approach
07:46 < benvie> I expand the "object" but it's basically a file browser
07:46 < benvie> it expands the direcotry
07:47 < dthompso99> and if you fs[object].delete(), it deletes on the server side?
07:47 < benvie> yeah
07:47 < benvie> er well no it doesn't 
07:47 < benvie> I didn't hook that up on purpose =D
07:47 < dthompso99> thats far too easy... i dont belive you!
07:47 < benvie> but it could if you wanred it to
07:48 < benvie> sec
07:48 < benvie> screenshots and it did happen
07:48 < dthompso99> lol, well i do believe you.. but wow
07:48 < benvie> yeah but pictures are always fun
07:50 < dthompso99> not that im opposed to the idea, because im kinda hateing jade atm... but the idea of using template engines is pretty much out using appjs
07:52 < benvie> http://bbenvie.com/img/fs.jpg
07:53 < benvie> oh well this is just my own thing
07:53 < benvie> appjs has simialr goals as js
07:53 < benvie> do its specific goal and do it well
07:53 < benvie> not everything under the sun
07:53 < benvie> this is just my own musings =D
07:53 < dthompso99> thats sweet
07:53 < dthompso99> very sweet for my plan
07:54 < benvie> appjs simply mirrors objects from one context into the other
07:54 < benvie> unmodified
07:54 < milani> benvie, you should write somewhere about how u did that bridge;)
07:54 < dthompso99> perfect for what i want to do
07:54 < benvie> so you can count on the objects to work as expected
07:54 < benvie> I plan to! It's just...so much
07:55 < benvie> it's 500 linues of code that looks way simpler than it is =D
07:57 < dthompso99> so what gets called on the 'server' side object when you change something... just simply onchange?
07:57 < dthompso99> say you rename a file
07:57 < dthompso99> these actions just trigger an event?
07:58 < benvie> I didn't hook up the fs part to mutators yet simply because I didn't want to blow up my computer. But yeah it's just a matter of mapping traps to the appropriste actions
07:58 < benvie> sec
07:58 < benvie> I will put the handler code up
07:59 < dthompso99> cool.. this is all new to me, but i like the idea
07:59 < benvie> https://gist.github.com/3155038
07:59 < benvie> so right now you'll see it's all accessor stuff
08:00 < benvie> but you will also see where mutators would go like delete
08:00 < benvie> where there's `get` event
08:00 < benvie> than can be set and delete and defineProperty
08:01 < dthompso99> ok, so just event handlers
08:01 < benvie> in appjs, to map between contexts, there's full implementation
08:01 < benvie> https://github.com/appjs/appjs/blob/master/lib/bridge.js
08:01 < benvie> well mostly full
08:02 < benvie> it's not quite as full as this https://github.com/Benvie/meta-objects/blob/master/lib/proxy.js
08:02 < benvie> but that has like 5o lines for set event alone
08:02 < benvie> oh I guess only 20, the impl was simplified
08:03 < benvie> with proxies there's two main situations
08:03 < benvie> one is where you are reflecting an actual js object, which is simple
08:03 < benvie> and one where you need to implement a meta object. Like a directory doesn't have built into js semantics, so you need to map how filesystem works to js semantics
08:03 < benvie> delete is obvious as are most of them
08:04 < benvie> but then say something like, which objects return enumerable: false? is a bit more interesting
08:04 < benvie> or which return writable: false
08:05 < dthompso99> yea, that gets complicated in a hurry...
08:05 < epic720> hi all
08:06 < fent> anyone remember that one module for picking a urinal in a men's restroom?
08:06 < epic720> anyone have any experience with restify.js and getting data from the request?
08:06 < benvie> cool thing though is
08:07 < dthompso99> thats some incredibly good info benvie.... based off that, i think i'll sleep on that and reformulate my whole plan tommarow
08:07 < benvie> you can do crazy stuff like implement multiple inheritance
08:07 < benvie> =D
08:07 < benvie> https://github.com/Benvie/meta-objects/blob/master/examples/multiple-inheritance.js
08:07 < benvie> good night =D
08:08 < EyePulp> fent - do tell
08:08 < dthompso99> perfect example of what i need to do there =)
08:09 < fent> EyePulp: there was a module that ran some algorithm given a list of urinals that were taken/non-taken and would decide which one you should take
08:10 < EyePulp> I always choose the one that's taken.  It ensures lively conversation with a new potential friend.
08:10 < fent> i might visit a public restroom this weekend. i need that module
08:11 < benvie> is module what they call it these days
09:55 < SomeoneWeird> anyone used cansecurity?
10:03 < samholmes> Can an npm package.json version just be "alpha"?
10:11 < samholmes> ?
10:12 < foobar2> Hi. I'm writing kind of diagnostic console (via telnet) to inspect my variables. How to print a "local" variable based on it's name without "eval"? I don't mean "global" and I don't have them in "this" as well. Is it possible ?
10:13 <@ljharb> you can't get to the local scope without a debugger.
10:14 < foobar2> So I'll have to use eval? :/
10:19 < ashnur> can't see how eval would help
10:21 < foobar2> with eval I can get access to local variable
10:22 < ashnur> if you say so
10:27 < FireFly> foobar2, you'll have to use eval (or related friends) unless your variable is a property of some object
10:28 < FireFly> I wonder how much of local scopes the V8 C++ API exposes, and whether someone has written an introspection library that exposes this to JS
10:30 < FireFly> ashnur, I think they mean e.g.  eval("x")  to grab the local variable `x` defined in the same scope as where the eval was evaluated
10:34 < execut3> are question regarding nodejs's libraries considered off-topic here?
10:34 < execut3> s/question/questions
10:34 < rvagg1> at this hour you're not highly likely to get the answers you want but ask away!
10:37 <@chilts> rvagg1: I think he's gone ... I hate it when that happens
10:38 < rvagg1> I have joins/leaves turned off so I'm completely oblivious to comings and goings!
10:39 < samholmes> npm ERR! Failed PUT response undefined
10:39 < samholmes> npm ERR! Error: Cannot insert data into the registry without authorization
10:39 < samholmes> npm ERR! See: npm-adduser(1)
10:39 < samholmes> is what I get when I try npm publish
10:40 < shesek> I was just wondering if someone wrote something for connect to allow running multiple middlewares simultaneously, rather than in a sequence
10:40 <@chilts> samholmes: have you set up a user on npm and authenticated against it?
10:41 < samholmes> chilts: I have published another project before, so yes.
10:41 < samholmes> How do I authenticate myself to it?
10:41 <@chilts> shesek: shouldn't be too hard, just write you own middleware which runs two (or more) things and just call next() when they're all done :)
10:41 < shesek> chilts, yeah, I know how to write it
10:42 <@chilts> samholmes: type 'npm whoami' first and make sure it's you :)
10:42 < shesek> just wondering if its worth publishing it or it already exists somewhere and my google-fu failed me
10:42 < samholmes> Not authed
10:42 < foobar2> FireFly: what is other "related friends" than eval ?
10:43 <@chilts> samholmes: npm login
10:44 < samholmes> npm ERR! Error: conflict Document update conflict.: -/user/org.couchdb.user:samholmes/-rev/1-c7f75beca5021fc6c9a42224db0
10:44 < samholmes> 41cc4
10:44 < samholmes> npm ERR!     at Request._callback (C:\Program Files (x86)\nodejs\node_modules\npm\lib\utils\npm-registry-client\request.
10:44 < FireFly> foobar2, e.g. Function (as a constructor / function)
10:44 <@chilts> samholmes: sounds crazy, might be a question for isaacs
10:47 < samholmes> got it. Had to delete the account through admin.npmjs.org
10:47 < samholmes> yay http://search.npmjs.org/#/lace
10:49 <@chilts> sweet
10:50 <@chilts> whilst we're pasting packages, my best one is : http://search.npmjs.org/#/awssum :)
10:50 <@chilts> to be updated to v0.7.0 tomorrow
10:51 < samholmes> seems awssum clits! ;)
10:54 < samholmes> Could someone help me with one issue on my code https://github.com/samholmes/lace/blob/master/lace.js#L38 ? I need to figure out how to make helper.next always use the correct index when invoked in a lacing function.
10:55 <@chilts> samholmes: there are many other flow control libraries out there ... might be worth looking at those (or even using one) :)
10:56 < samholmes> chilts: sure. But I'm experimenting with a slightly different one.
10:58 < samholmes> chilts: This one is less verbose and is more sugary
11:00 < samholmes> What I need help figuring out is how to prevent index from being > lacing.length in the helper.next function
11:01 <@chilts> I presume you're looking through something and therefore the index is always 1 greater than lacing.length when all the callbacks come back?
11:01 <@chilts> that right?
11:01 < samholmes> I might need to redefined helper.next for every helper.next invocation.
11:01 < samholmes> looking through something?
11:02 <@chilts> sorry, looping through something
11:02 < samholmes> chilts: actually, the code works (see tests/unit.js)
11:02 <@chilts> so if it works, why do you need help with the index in helper.next?
11:03 < samholmes> It only doesn't work when you have lace(function(){ lace.next(); lace.next() })(function...); in other words, multiple calls of next within a lacing function.
11:04 < samholmes> The reason that it doesn't work, is because when you call lace.next the first time, the index gets incremented. Then next lace.next call would not be correct.
11:04 < samholmes> The second lace.next call*
11:04 < samholmes> will not execute the right function*
11:06 < samholmes> Somehow, I need to keep state for every invocation of a lacing function:   lace(function(){ /* within this invocation, lace.next has the right index state */ lace.next(); })(function(){ /* this invocation also has the right state */ })
11:13 < samholmes> js> var foo = function(){ return 23; }; var bar = foo; foo = function(){ return 11; }; bar();
11:13 <@purr> samholmes: (number) 23
11:14 < samholmes> js> var foo = {}; var foo.foo = function(){ return 23; }; var bar = foo.foo; foo.foo = function(){ return 11; }; bar();
11:14 <@purr> samholmes: SyntaxError: Unexpected token .
11:14 < samholmes> js> var foo = {}; foo.foo = function(){ return 23; }; var bar = foo.foo; foo.foo = function(){ return 11; }; bar();
11:14 <@purr> samholmes: (number) 23
11:14 <@chilts> js> 1+1
11:14 <@purr> chilts: (number) 2
11:14 <@chilts> sweet
11:24 < samholmes> chilts: heh :D
11:24 < samholmes> tired
11:24 < samholmes> going to bed
11:24 < samholmes> night all you smf
11:24 < Jakey> wait
11:24 < samholmes> ?
11:24 < Jakey> waait
11:24 < samholmes> Jakey: ?
11:24 < Jakey> just a sec
11:25  * samholmes sighs
11:25 < Jakey> why r u so in a hurry
11:25 < samholmes> I'm tired. I don't need trolling
11:25 < samholmes> hah
11:26 < samholmes> Jakey: why you holding me up?
11:26 < Jakey> oh..
11:26 < Jakey> um...
11:27 < Jakey> okay..never mind bro
11:28 < samholmes> Jakey: x__x
11:28 < samholmes> Jakey: https://github.com/samholmes/lace/blob/master/lace.js#L38 If you can figure it out lemme know
11:28 < samholmes> nite
13:46 < darkyen> How do i implement a neural network in libUV
13:46 < darkyen> when i have to explicitely run
13:46 < darkyen> a function which requires to be in JS thread.
13:46 < darkyen> or 
13:47 < darkyen> How can i run a function in the JavaScript thread , calling it from the thread which is asynchronously working into the thread pool ?
14:00 < kmax> darkyen: artificially
14:00 < darkyen> @kmax any code examples ?
15:06 < darkyen> Anybody knows
15:06 < darkyen> how to call a function in main v8 thread
15:06 < darkyen> by a different thead.
15:08 < coderarity> darkyen, if you have a libuv question ask in #libuv
15:47 <@cainus> anyone know what this error is about?  "Error: Unable to load shared library /home/cainus/dnodetest/node_modules/weak/build/default/weakref.node"
15:48 <@cainus> basically can't use node-weak, so I can't use the latest dnode
15:48 < Jakey> lol i thought you're the op
15:49 <@cainus> Jakey: who me? say what?
15:49 < Jakey> you're the op you should know?
15:49 < Jakey> :P
15:50 <@cainus> naw I'm a lurker ;)
15:50 < be5invis> Are there any markdown alternatives with marcos, expect my Eido?
15:51 < dominictarr> cainus, try `npm rebuild`
15:52 <@cainus> dominictarr: same error... I'm just doing a require('weak'); at the repl
15:55 <@cainus> works like a charm on my macbook, but not on ubuntu
15:57 <@cainus> aaaaaaaaand it works on an older ubuntu box...damn
16:01 < dominictarr> cainus, you could probably do a pull request to make weak optional in browserify
16:02 < Ralt> cainus : looks like this error is ancient, try using a recent node's version (maybe your module isn't compatible with node 0.8 while you're using node 0.6)
16:02 < Ralt> isµ
16:02 < Ralt> is*
16:02 <@cainus> Ralt: node 0.70-pre ... I'll try an upgrade though
16:03 <@cainus> dominictarr, seems like weak should work on my system regardless though
16:03 <@cainus> independently of dnode
16:03 <@cainus> must be something I'm doing wrong, because google only gives me back my own gists of the problem :)
16:09 < dominictarr> yeah, I would expect 0.7pre to be broken.
16:18 <@cainus> alright... v0.8.3 :  new error :  Error: /home/cainus/dnodetest/node_modules/weak/build/default/weakref.node: undefined symbol: ev_rt_now
16:20 <@cainus> weak passes on travis with 0.6, 0.7, and 0.8 too
16:32 < zeus> So what are most people doing these days to keep their node processes running on a VPS? I know of forever, but is that my best bet?
16:36 <@cainus> zeus: probably
16:40 <@cainus> foreman / upstart are probably workable too
16:40 <@nlf> i use upstart
16:40 < RLa> using cluster here with simple init script
16:41 < RLa> the whole app is installed as .deb package
16:46 <@Nexxy> upstart is the answer
17:03 < aslant> has parseCookie gone missing from Connect?
17:03 < aslant> parseCookie() should say
17:04 < aslant> exports.parseCookie() not in utils.js
17:07 < aslant> ahh is using cookie module for parsing
17:10 < ^robertj> k, potato potato on recurring events - should I store start and end time (leaning towards it) or start time + duration?
17:21 < stagas> aslant: .cookieParser()
17:22 < fosstux> Hi! 2 questions: is it possible to run a node.js app as a desktop app?
17:22 <@Nexxy> yes
17:23 < serdem> how?
17:23 <@Nexxy> very carefully
17:23 < fosstux> Nexxy: cool... then the 2nd question is obsolete
17:23 < serdem> :)
17:23 < fosstux> why very carefully
17:23 < serdem> Nexxy, he doesn't know why
17:24 <@Nexxy> because anything worth doing is worth doing well
17:24 < thebadger> I am doing the node.js beginner book webserver tutorial... however when I try to import the server code in my index.js it just says "does not include method" so it appears I am not importing it correctly.. can anyone help me please?
17:24 < fosstux> I'm sorry, I'm new to node.js....
17:24 <@Nexxy> me too, it's ok :)
17:25 < serdem> well i'm not
17:25 < serdem> throw the second one
17:25 < coderarity> fosstux, if you want to do a desktop app it's gonna be pretty tricky
17:26 <@Nexxy> I made a desktop app with node, it was fairly easy
17:26 < blazes816> fosstux: http://blog.csainty.com/2012/01/creating-desktop-apps-with-nodejs.html, http://www.readwriteweb.com/hack/2011/04/build-desktop-apps-with-nodejs.php, http://stackoverflow.com/questions/8794140/is-it-possible-to-create-desktop-applications-with-node-js
17:26 < blazes816> First 3 links in google
17:26 < fosstux> how would you buid a javascript based twitter client?
17:26 < blazes816> fosstux: search npm for a twitter client, then use it
17:26 < coderarity> fosstux, from google, http://appjs.org/
17:26 < blazes816> I think I use one called Twit that works well
17:27 <@Nexxy> ntwitter?
17:27 < fosstux> well... my ideas go a lot further - see https://trello.com/board/ideal-twitter-client/5008bf0943889e536a028be4 for my ideas
17:27 < blazes816> cadearity: thanks for that, looks interesting
17:27 < aslant> stagas: in here? https://github.com/senchalabs/connect/blob/master/lib/utils.js  The cookieParser middleware is using 'cookie'. I'm can do the same, or use 1.x connect, or do it myself, fine with any of those
17:28 < fosstux> coderarity: thx
17:29 < coderarity> if it has a nice website it must be good
17:29 <@Nexxy> lol
17:30 < jrajav> coderarity: That's pretty much the 1st commandment of .js libraries
17:30 < jrajav> :P
17:35 < serdem> anybody use node.js with neo4j?
17:46 <@CIA-93> node: koichik v0.8 * rbc30c90 / doc/api/cluster.markdown : doc: remove duplicate section - http://git.io/Ou4ToA
17:51 < legind> any good node crypto folks out there? I'm wondering if there's a good way to do aes with ctr mode in node
17:58 < justspamjustin_> Using expressjs, how can I limit the upload types to only images?
18:01 < devaholic> justspamjustin_: it hasnt much to do with express, look at the content-type header and in some way end upload requests that dont match image/* 
18:02 <@Nexxy> which does not guarantee fha
18:02 < tjholowaychuk> justspamjustin_ if (req.is('image/*')){
18:02 < tjholowaychuk> yeah like Nexxy says that doesn't mean much
18:02 <@Nexxy> that the file will actually be an image*
18:02 < tjholowaychuk> it's just a string
18:03 <@Nexxy> sorry, android keyboard lol
18:03 < justspamjustin_> @devaholic  thanks for your quick response.  But it seems like the image has already been uploaded once the controller gets called.  Where can I prevent it from being called?
18:03 < justspamjustin_> *Where can I prevent the image from being uploaded if it is not an image?
18:03 <@Nexxy> you could analyse the data as its coming in and check it against known image header formats
18:04 <@Nexxy> then reset the connection if it doesnt match
18:04 < tjholowaychuk> justspamjustin_ you can put a middleware before .bodyParser() to apply that sort of logic
18:04 < tjholowaychuk> or remove .bodyParser() and do all the manual stuff
18:05 < tjholowaychuk> to verify it's a valid image though you pretty much have to read the whole thing
18:06 < justspamjustin_> @tjholowaychuk  Do you know of any example of putting a middleware before .bodyParser()?  I'm really new to expressjs and somewhat of a node noob as well.  Thanks.
18:06 < tjholowaychuk> there are magic #s you can sniff
18:06 < tjholowaychuk> but that only tells you so much as well
18:07 < tjholowaychuk> justspamjustin_ https://gist.github.com/3156613
18:07 < tjholowaychuk> something along those lines
18:07 < justspamjustin_> @tjholowaychuk  Awesome I'll check that out.  Thanks.
18:07 < justspamjustin_> Thanks everyone for your help.
18:07 < tjholowaychuk> well actually if you're doing multipart
18:07 <@owen1> I read Hughes-Croucher slides from his talk at velocity conference - "Using Node.js to improve the performance of Mobile apps and Mobile web".
18:07 <@Nexxy> \o/
18:07 <@owen1> can someone explain slide 50 - "Node.js allows you to tune rendering between client and server based on the network - http://www.slideshare.net/sh1mmer/using-nodejs-to-improve-the-performance-of-mobile-apps-and-mobile-web
18:07 < tjholowaychuk> that wont work
18:08 < tjholowaychuk> you could either use formidable directly and do all your own logic and listen to 'part' events
18:08 < tjholowaychuk> or
18:08 < tjholowaychuk> check req.files.myUploadStuff.type
18:08 < tjholowaychuk> though it's already fully uploaded at that point
18:09 < tjholowaychuk> obviously you can remove the file
18:10 < justspamjustin_> @tjholowaychuk  Yeah.  I would like a way to prevent it from being uploaded if possible.  How can I do all of my formidable stuff manually?  Would this also allow me to keep track of the upload progress etc.?
18:10 < tjholowaychuk> justspamjustin_ you can do progress stuff without using formidable directly but yeah if you want to bail earlier on you'll have to listen to those events
18:11 < tjholowaychuk> you can track upload progress from the client as wel lthough in modern browsers
18:11 < tjholowaychuk> no need for SS hacks
18:11 < tjholowaychuk> unless you need to verify disk writes etc
18:11 < justspamjustin_> @tjholowaychuk  That's right.  I will just trag progress on the client rather than the server.
18:12 < justspamjustin_> *track
18:12 < tjholowaychuk> yeah unless you really need it the client makes more sense
18:13 < justspamjustin_> @tjholowaychuk So do I need to subscribe to some events that formidable will trigger at the point when the file is about to be uploaded?  How do I do this?
18:13 < tjholowaychuk> yeah you'll have to look at the docs for the "part" event i believe
18:13 < tjholowaychuk> check the header field
18:13 < tjholowaychuk> and then do whatever
18:13 < Ancien> hello
18:13 < tjholowaychuk> though all you can do is kill the connection anyway
18:13 < justspamjustin_> @tjholowaychuk  That makes sense.  I think I can go from there.  Thanks!
18:13 < tjholowaychuk> so you might as well let it upload IMO
18:14 < Ancien> someone can help me ?
18:14 < justspamjustin_> @tjholowaychuk really, so I wouldn't be able to send back a custom response with some json saying that it is a filetype that is not allow?
18:14 < coderarity> Ancien, just ask
18:14 < justspamjustin_> *allowed.
18:14 < tjholowaychuk> justspamjustin_ nope
18:14 < tjholowaychuk> http sucks
18:14 < justspamjustin_> lol
18:15 < justspamjustin_> @tjholowaychuk alright.  Thanks again.
18:16 < Ancien> i have a problem i try to load socket.io.js in a <script> but not load i have an error : not allowed to load... (sorry for my english i'm french)
18:20 < Ancien> <coderarity> can you help me ?
18:20 < coderarity> Ancien, not allowed to load? maybe it's a cross-domain thing
18:22 < Ancien> my file is in /opt/lampp/htdocs/.../my file
18:23 < coderarity> i know next to nothing about lamp
18:26 < Ancien> the file i load is in /home/Ancien/Downloads/node../.../my file.js
18:26 < Ancien> how can i load this file ?
18:27 < coderarity> Ancien, you're making folders named '...'?
18:28 < Ancien> no it's for make more short
18:28 < coderarity> Ancien, node doesn't do everything for you, you have to start a static server yourself, check out http://github.com/jesusabdullah/node-ecstatic
18:29 < Ancien> i don't understand i just want to load this file, is it impossible ?
18:30 < coderarity> Ancien, your file is on your server, not on the client
18:30 < coderarity> Ancien, your client has to download that file from the server
18:30 < coderarity> Ancien, for your client to download that file, the server has to host that file
18:30 < coderarity> Ancien, if you're not hosting that file, you're not going to be able to download it
18:31 < coderarity> Ancien, therefore, to host your static files, you need to get your node server to offer that file to the client, probably over http
18:31 < coderarity> Ancien, that's what node-ecstatic helps you do
18:31 < coderarity> Ancien, node does most of the http stuff for you
18:31 < devaholic> Ancien: you cant do xhr loading from file://
18:31 < legind> the cryptography library hasn't been updated much recently.  is there anyone actively working on node crypto lib?
18:32 < Ancien> ok thanks i will try
18:34 < devaholic> tjholowaychuk: glob in my json files?
18:34 < devaholic> i might actually use this
18:34 < tjholowaychuk> devaholic that PR?
18:34 < tjholowaychuk> ive gotta look at it still
18:34 < devaholic> uh?
18:34 < devaholic> no, eson
18:34 < tjholowaychuk> ah
18:34 < tjholowaychuk> haha
18:34 < devaholic> no, PR bad
18:34 < devaholic> heh
18:34 < tjholowaychuk> there's a PR for include globbing
18:35 < devaholic> oh!
18:35 < devaholic> https://github.com/visionmedia/eson#esonglob
18:35 < devaholic> i was looking at that
18:35 < tjholowaychuk> ah
18:44 < legind> anyone know of a lib that's like the opposite of browserify - taking a client-side js and wrapping all the global vars of a file in module.exports
18:45 <@tbranyen> volo is kind of like that
18:45 < legind> tbranyen: thanks I'll check it out
19:51 <@owen1> is node-formidable the fastest way to upload muliple files?
19:52 <@Industrial> if formidable implements then there has to be a "raw" way that could potentially be faster
19:52 <@Industrial> implements it
19:53 < milani> Cheery, Do u remember appjs?
19:53 < milani> Cheery, it improved a lot:) you may want to try it again!
19:54 <@Cheery> milani: i remember it
19:55 <@Cheery> heh.. how am I an op on this channel? :)
19:55 <@Industrial> If I divide my nodejs program into different services e.g. one for payment and into multiple processes or ips how do i ensure that all of the processes are alive and healthy
19:55 < AviMarcus> ryan went into an opping spree
19:55 <@Industrial> if one falls away ill lose events/data
19:55 < AviMarcus> ops plz
19:55 < AviMarcus> heh bot not here.
19:55 <@Industrial> ;)
19:55 <@AviMarcus> Industrial, forever?
19:55 <@Industrial> and ever
19:55 <@AviMarcus> or use the new cluster mod I'm not sure if it has autostart
19:55 <@Cheery> milani: how does it look like now?
19:56 < milani> Cheery, much better! 
19:56 < milani> Cheery, supports mac/windows/linux with a lot of cool stuff
19:56 <@Industrial> how do i keep messages from being lost e.g. fire and forget?
19:56 < milani> like alpha compositing to create custom shaped windows
19:56 <@AviMarcus> oooh appjs cool
19:56 < milani> AviMarcus, thx;)
19:57 <@AviMarcus> for?
19:57 <@Cheery> milani: does it let me test out .js webgl/canvas code, which I will eventually publish on the website?
19:57 <@Cheery> or provide standalone package from an editor (I should still sort of.. write some day)
19:57 < milani> Cheery, and we have browser <-> node bridge which allows u to have access to browser context in node and the opposite
19:58 < tmpvar> isaacs, ping
19:58 <@Cheery> milani: did I get it right? the stuff works on both win and lin?
19:58 < milani> Cheery, yeah. ecen Mac.
19:58 < milani> * even
19:59 < milani> actually Mac port is not good at the moment but I hope tmpvar can improve it;)
19:59 < milani> Cheery, https://github.com/appjs/appjs
19:59 <@Cheery> I'll likely get some sleep soon.. but I'll take a look on it tomorrow
19:59 <@Nexxy> that tmpvar can do just about anything
20:00 <@Cheery> I've had trouble with testing apps local.
20:00 < milani> Nexxy, right;)
20:00 < milani> Nexxy, I mean I hope he help us to improve it. 
20:01 < tmpvar> you two are too kind
20:01 <@Nexxy> buy him beer!
20:02 <@AviMarcus> ideas? Error: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.14' not found (required by /home/avi/code/node_modules/appjs/node_modules/appjs-linux/build/Release/appjs.node)
20:02 <@AviMarcus> on ubuntu 12.04 iirc
20:02 <@AviMarcus> for launching app.js
20:03 < milani> AviMarcus, hmm It seems I should build with older libraries.
20:03 < milani> but I'm 12.04 too.
20:04 <@AviMarcus> oh well. I don't have a need for it right now anyway. working on api with restify
20:04 < milani> AviMarcus, did u use npm?
20:06 < tmpvar> so it looks like when you supply a `preinstall` in package.json `npm install` won't run the default `install` command??
20:06 <@AviMarcus> milani, yes
20:06 < milani> AviMarcus, its too old. we don't maintain it anymore. it should comeback in the future. sorry.
20:07 < milani> tmpvar, hmmm. its weird. then it is install script not preinstall!
20:07 < tmpvar> heh, yeah it runs the preinstall then exits
20:08 < tmpvar> oh well :)
20:08 < epic720> hi all
20:10 <@owen1> legind: thanks (regarding the mysql)
20:10 <@AviMarcus> ooh mysql? question!
20:10 <@AviMarcus> { affectedRows: 1,....message: '(Rows matched: 1  Changed: 1  Warnings: 0',
20:10 <@AviMarcus> when changed is 0, affecterRows is still 1!
20:11 <@AviMarcus> affectedRows: 1,... message: '(Rows matched: 1  Changed: 0  Warnings: 0',
20:11 <@AviMarcus> do I have to manually parse message for this!?
20:30 < inLoveWithNode> hello, hackers, i have a question about node.js and mysql: is there a point in holding more than 1 open connection to the mysql server per process, and balance the (heavy) load between them somehow? will that be any good? e.g. it would allow to *send* more than 1 query simulatiously
20:35 <@AviMarcus> inLoveWithNode, yes, you could do connection pooling or something like that. It's not yet supported natively within mysql module
20:35 < inLoveWithNode> AviMarcus, so i would actually benefit from this? :)
20:36 < inLoveWithNode> if i really have a high load
20:36 <@AviMarcus> you could, yes. You'd have to manually manage the connection count and balancing manually, though, it seems.
20:36 <@AviMarcus> I wonder if any of the higher level sql mods have connection pooling natively..
20:37 <@AviMarcus> http://sequelizejs.com/ seems to, actually.
20:38 <@AviMarcus> sweet. that's just built in top of mysql module.
20:38 < inLoveWithNode> the easiest approach seems to be creating a pool of leys say 4 connections and choosing the one randomly (per query) from the 'pool'. That would be better than nothing, i expect
20:38 < inLoveWithNode> not advanced high-level load balancing but still something
20:39 <@AviMarcus> yep, you could. maybe just use sequalize.
20:40 < inLoveWithNode> i'll look into it
20:44 < coderarity> inLoveWithNode, i would at least look at sequelize's code before you write it again yourself, you could probably use something from it :P
20:49 < inLoveWithNode> thanks i will look at it
20:58 <@Nexxy> JIFASNIF?
21:01 <@AviMarcus> so... is there a reason node-mysql returns affectedRows for Rows matched rather than Changed ?
21:04 <@ljharb> probably a bug in node-mysql
21:05 < BRampersad> Hey guys
21:05 < BRampersad> What is in store for node 1.0?
21:05 < BRampersad> Ie what is node .9 tackling?
21:10 <@AviMarcus> ljharb, weird, i can't even find it in the code
21:17 <@trb> BRampersad: I think it's early days yet to ask such questions
21:17 <@trb> i.e. they don't know
21:17 < BRampersad> ok
21:17 < BRampersad> Why are there so many admins?
21:17 <@trb> in this channel?
21:17 < BRampersad> Yeah
21:18 <@trb> god knows
21:18 < BRampersad> Almost everyone has an @ by their name :P
21:18 <@trb> I don't even know why I have @
21:18 <@trb> probably a netsplit
21:18 <@trb> or someone felt kindly towards me
21:18 < BRampersad> heh
21:18 < BRampersad> Maybe it's just a glitch
21:18 <@trb> possibly
21:18 < BRampersad> can you ban/change notice etc?
21:19 <@trb> I'm not going there
21:19 <@trb> I could, but I'm not going to change a thing until I know why I have ops
21:20 <@AviMarcus> trb, ryan gave everyone ops on thursday
21:20 <@trb> AviMarcus: ok, why?
21:21 < BRampersad> why?
21:21 <@AviMarcus> lol. no reason.
21:21 <@trb> and who is ryan?
21:21 <@trb> heh
21:21 <@AviMarcus> the ryan that created node.js
21:21 <@trb> with ops brings great responsibility :p
21:21 < BRampersad> Anyone getting the new macbook?
21:21 <@trb> i.e. to guard the channel against idiots that spam and that lot
21:22 <@trb> BRampersad: no way
21:22 < BRampersad> Why not?
21:22 < BRampersad> Retina display :P
21:22 <@trb> BRampersad: no point, plus the lack of gigabit
21:22 <@trb> retina isn't all its hyped to be
21:22 < BRampersad> What's that?
21:22 <@trb> ...
21:23 < BRampersad> I need a laptop for college though
21:23 < BRampersad> which one do you recommend?
21:23 <@trb> I rely on gigabit ethernet
21:23 < BRampersad> oh
21:23 <@trb> I have my flat wired for it
21:23 < ViswaD1> I hope it is node js chat
21:23 <@trb> ViswaD1: no such luck, but yous you are right, we should take this elsewhere
21:23 < BRampersad> sorry
21:24 <@trb> so much for giving me ops :(
21:24 < BRampersad> I read that the new socket.io (the one that uses engine.io) was supposed to be released already
21:24 < BRampersad> Anyone know what is holding it up?
21:40 < sqwishy> When node prints a funny character, such as \x92, I see a box (is this because of my font) where I'd expect to see '\x92'. Is there a way I can get node to print \x whatever for non-printable characters?
21:41 <@AviMarcus> inLoveWithNode, hey - there's a pull request for adding pooling to node-mysql -- maybe check if the code works for you: https://github.com/felixge/node-mysql/pull/203/files
21:42 < inLoveWithNode> AviMarcus, thanks
21:43 <@jcrew> sqwishy: it'd be complicated, how does node know what font you're using?
21:48 < sqwishy> jcrew: I don't mean to say it has to. By printable I mostly refer to ascii characters between codes 20 (in base 16) to 7E inclusively.
22:02 < digitxp> quick question: I know node's strong suit isn't "normal" web apps, but what web framework has the best documentation/support?
22:03 < Guest33383> node framework?
22:03 < Guest33383> or web framework...
22:04 <@TehShrike> digitxp: I hear people talking about express, but I haven't used it myself
22:04 < jrajav> Strong suit? Node.js is a client-side application. You're just talking about web frameworks...
22:04 < digitxp> *web framework
22:04 < Guest33383> what does that include?
22:06 <@TehShrike> So uh... how long does npm adduser usually take? :-P
22:06 < xocel> i'd recommend using express. can save you a lot of trouble. I use express for the web interface for this server app im writing.
22:06 <@jcrew> express is pretty nice
22:06 < Guest33383> i need to learn express
22:06 < Guest33383> with socket.io
22:06 < Guest33383> and https..
22:06 <@jcrew> https is for java applets
22:06 <@AviMarcus> digitxp, it depends on what you want. Most web-ish frameworks are built on express, which is built on connect
22:07 <@AviMarcus> I'm currently working on using node.js with npm restify to create an api, then build up my own gui using angularjs
22:07 <@AviMarcus> that's then a client side MVC, and then I also have a publicly accessible API
22:08 < digitxp> @Avi mostly I need to build a small CMS
22:09 <@jcrew> digitxp: like drupal, wordpress, or ??
22:09 < digitxp> yeah
22:10 < epic720> AviMarcus, what Db are you using?
22:10 <@AviMarcus> mysql as of now
22:10 <@jcrew> digitxp: any reason to not use either one of those, or a making one for node?
22:10 < epic720> I just created a restful api for mongodb
22:10 <@AviMarcus> although with sequalize that seems to support PG, so that's cool...
22:10 < epic720> I am working on a project to provide transparent manipulation of data in a MongoDb through a restful api.
22:11 <@AviMarcus> sorry for asking, but that doesn't exist yet?
22:11 < AAA_awright> Not really, because MongoDB doesn't use URIs to identify resources
22:11 < epic720> mongodb comes with a rest mode, but I believe it's all readonly.
22:11 <@AviMarcus> ah OK.
22:11 < xocel> my webinterface was using express, passport and mySQL. Jade for templating. Gonna rewrite it i using mongodb tho. Interafce pertty much only handles user registration/configuration. 
22:11 < AAA_awright> MongoDB has an "HTTP REST API" for managing high-level server features
22:11 < epic720> this is just one module of several involved in my project.
22:12 < AAA_awright> epic720: This is HTTP I assume
22:12 < epic720> yes
22:12 < epic720> mongo-trapi
22:12 <@AviMarcus> currently using SQL 'cause there's several ways to read/write from it in FreeSWITCH (the voip switch my business runs on)
22:12 < AAA_awright> REST doesn't imply HTTP
22:12 < digitxp> jcrew: it's going to be used on my robotics team's site. Having a custom-written CMS helps the site score better, as well as lets me do something during team meetings besides writing blog posts :-/
22:12 < AAA_awright> digitxp: FIRST?
22:12 <@jcrew> digitxp: ahh, cool.  if you have a theme i have something i'm using that uses node's back end
22:13 < digitxp> oh?
22:13 <@jcrew> and i can write content, preview it and commit it - it uses jade back end tho
22:13 < digitxp> @AAA_awright: yep
22:13 <@jcrew> digitxp: pm'd you the site
22:13 < digitxp> @jcrew I don't see much
22:14 < digitxp> oh I see it
22:14 < AAA_awright> digitxp: Cool... A custom CMS really won't help you much. We used Drupal and built our own theme around it. Thrifty use of COTS software, eh? Much better UI too.
22:14 <@jcrew> it's still being developed, but everything on the site is driven from backend and i just add content to the db using a custom page
22:15 <@jcrew> i agree with AAA_awright though, drupal is great
22:15 < AAA_awright> I wouldn't call it "great" but it's better than a lot of stuff
22:15 < AAA_awright> Don't try and look at the internal code
22:15 < AAA_awright> O_O
22:15 <@jcrew> AAA_awright: it's great in that you don't have to do much except put some files in a folder and it starts working :)
22:15 < AAA_awright> I use Drupal for some pretty major stuff though, I'd use that before anything custom
22:18 <@TehShrike> isaacs: is it normal for npm adduser to never exit back to the command prompt, whether or not it succeeds?
22:18 < AAA_awright> epic720: You have the full MongoDB build committed to your repository? O_O
22:18 < epic720> I know, I need to remove it.
22:18 < epic720> im noobing it up with github right now.
22:18 <@TehShrike> I suppose I should just check the issues on github
22:18 < epic720> these are my first set of projects with github.
22:18 < other_guy> Hey everyone, I'm having some trouble getting binary files do download properly via http.request
22:18 < epic720> I added that folder to the .gitignore so next push I make should be good.
22:19 < other_guy> I'm trying to download and save a bunch of images, but they're often corrupted with artifacts or simply corrupted to the point they can't be opened
22:19 < epic720> AAA_awright but I welcome any and all feedback to my process.
22:19 < AAA_awright> epic720: .gitignore only prevents "git add" and "git rm" from staging changes, it won't remove the file
22:19 <@jcrew> digitxp: go to the same site /skeditor/ for the content editor
22:20 < AAA_awright> epic720: Are you very familiar with what creates a RESTful protocol?
22:20 <@jcrew> one note, though, is that it's all using jade
22:20 < other_guy> Is there something special I need to be doing to deal with the http response "chunks" as they come in to make sure my data stays intact?
22:20 < epic720> AAA_awright, not sure what you mean.
22:21 <@owen1> i am testing formidable and it takes about 13 seconds to upload 800 mb of 1500 images. in the readme it say 500 mb/s. anyone is using this packages and can tell me what performance is he getting?
22:21 < AAA_awright> epic720: Well you keep calling it "restful" but what exactly makes a protocol restful, versus not-restful?
22:21 <@TehShrike> yesssss, my first library pushed to npm.
22:22 < AAA_awright> TehShrike: Make sure it's also available by download or on Github or something :)
22:22 <@TehShrike> AAA_awright: yup, it was on github first
22:23 < epic720> AAA_awright, maybe I am using my own interpretation but I always thought a restful api was one that used the http headers to perform different actions at a given uri.
22:23 <@Industrial> in a multi process multi ip setup separating out your nodejs app into different services, how does one ensure that messages in the network arent lost somewhere due to exceptions or service failure?
22:24 < epic720> AAA_awright, where a single uri can be used to perform actions of GET, PUT, HEAD, DELETE, to perform CRUD operations
22:24 < dominictarr> Industrial, you don't, basically, you just make sure the opperations are idempotent
22:24 < dominictarr> and you retry them if necessary.
22:24 <@ljharb> REST implies HTTP.
22:25 <@ljharb> you can have a representational stateless API without HTTP, but the term "REST" definitely implies HTTP.
22:25 < AAA_awright> Actually it's the other way around, HTTP is a RESTful protocol by design
22:25 <@ljharb> hm
22:25 <@AviMarcus> do people usually use PUT?
22:25 <@Industrial> dominictarr ok :)
22:25 <@AviMarcus> you seem to need to use POST to send in data
22:25 < epic720> POST and PUT are the same.
22:25 <@ljharb> AviMarcus: you use PUT for creating a resource at that URL, POST for modifying something
22:25 <@ljharb> they are not the same
22:25 < riven> lol
22:25 < AAA_awright> Roy T. Fielding, the first author of the HTTP specification along with Tim Berners-lee, defined REST in his dissertation http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm
22:25 < AAA_awright> epic720: PUT is idempotent, POST is not
22:25 <@AviMarcus> I know but I mean yo ucan't just tag in the data in the query string
22:25 <@AviMarcus> or well, I suppose you could.
22:26 <@AviMarcus> depends on how the API is being designed.
22:26 < samholmes> Can anyone take a look at my issue on my project; I need to solve this problem. https://github.com/samholmes/lace/issues/1
22:26 < AAA_awright> Meaning, the same operation done twice in a row should have the same effect as just once
22:26 <@AviMarcus> So -- for PUT should I allow both BODY data or querystring data?
22:26 <@ljharb> AviMarcus: querystring data should only come in on a GET.
22:26 < epic720> @AviMarcus: I do.
22:26 <@ljharb> or maybe a DELETE
22:26 <@AviMarcus> I just need to tell restify whether it should squash it all into req.params or not
22:26 <@ljharb> but PUT and POST are all body data
22:27 < AAA_awright> Only PUT and POST can contain a request body iirc
22:27 <@AviMarcus> I just know testing via curl in the command line isn't as easy for post
22:27 < tjholowaychuk> AAA_awright GET / DELETE etc can have bodies too
22:27 <@jcrew> AviMarcus: how so?
22:28 < AAA_awright> Definitely not GET
22:28 < AAA_awright> Let's see
22:28 < tjholowaychuk> sure it can
22:28 <@AviMarcus> jcrew, you have to add in -d  I guess is all
22:28 < tjholowaychuk> people just dont typically use it that way
22:28 <@AviMarcus> and seperate it from the url
22:28 <@AviMarcus> what do people use for API keys with REST? where do they pass it in?
22:28 <@AviMarcus> as part of the query string for GET and as part of the body for POST/PUT?
22:29 <@trb> a quick node request... can listen() listen on everything please? not just ipv4
22:29 <@trb> making it listen on v6 is a pita
22:30 <@trb> ok, this is connect / express
22:30 <@trb> but its a right pain
22:30 <@trb> I expect listen() to listen on everything if told to, not just ipv4
22:30 < epic720> AAA_awright: thanks for looking at my project. I removed the mongo executables. I'm still trying to get into the rythm with everything new that I am learning, so thanks for the feedback.
22:31 <@trb> and with RIPE now expected to run out of ipv4 in the next week or so, its rather more important than ever
22:31 <@AviMarcus> epic720, it's probably still part of the repo though :/
22:31 < AAA_awright> epic720 ljharb: REST is a type of protocol design that transfers a session state between a client and server using a URI to identify the resource being acted on, in a hypertext enviornment. It's defined by Roy T. Fielding in his dissertation http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm, and HTTP is one example of a RESTful protocol (Roy is one of the authors of the HTTP specification)
22:31 < epic720> if you go look at it again I believe it's gone.
22:31 <@ljharb> ok fair enough
22:31 < Hail_Spacecake> is there a way to get the current date as a string in node.js?
22:32 <@ljharb> String(new Date())
22:32 < AAA_awright> I spent the last week a week ago reading the dissertation through, it should be mandantory reading for anyone who wants to implement HTTP :)
22:32 <@AviMarcus> trb, did you get it working with ipv6?
22:32 < epic720> AAA_awright: thanks, I will be sure to read it going further.
22:33 <@trb> AviMarcus: it can work, but its not ideal, if you say listen on everything it only listens on v4
22:33 <@trb> but thats just plain wrong
22:33 <@trb> everything means all interfaces and IPs
22:33 <@trb> limiting to v4 is crap
22:34 < AAA_awright> digitxp: btw, if you do want to work on a CMS, I've got one I'm working on myself, http://magnode.org/
22:34 <@trb> we're using nginx to do the ipv4&6 to our company website because express/connect won't
22:34 <@trb> which is a pita
22:34 <@AviMarcus> trb, do you need just one ipv6 or a whole bunch?
22:34 < tjholowaychuk> trb express has nothing to do with the http server...
22:34 < tjholowaychuk> that's all node
22:34 < digitxp> trb: cool, I'll check it out
22:34 <@AviMarcus> you can apparently specify one IP, e.g. listen(80,"2001:db8:1111:2222:3333::51");
22:35 <@trb> AviMarcus: I don't want to specify anything, just listen()
22:35 <@trb> maybe a port
22:35 <@trb> but the default is all ipv4
22:35 <@trb> the default should be every IP on all interfaces
22:35 <@trb> v4 or v6
22:36 <@trb> tjholowaychuk: ok, well whatever the cause it needs fixing
22:36 < tjholowaychuk> so fix it?
22:36 <@trb> heh
22:36 <@trb> :p
22:36 <@trb> I'm a sysadmin
22:36 <@trb> not really a node coder
22:36 < tjholowaychuk> people will usually give zero fucks if you're just complaining
22:36 < tmpvar> yes.
22:36 <@trb> I'm complaining anyway, screw them :p
22:37 <@trb> I'd fix it if I was that good
22:37 <@trb> but I'm not
22:37 <@AviMarcus> trb, yeah complaining sux. I can't find an issue on github, post it: https://github.com/joyent/node/issues/
22:37 <@trb> if it takes that, then I'll go and submit an issue
22:37 <@AviMarcus> and only complain technically! :P
22:37 <@trb> joyent, they don't do ipv6 yet
22:37 <@trb> again, issue
22:38 <@trb> :(
22:38 <@AviMarcus> meaning show what should work with ip4 and what you had to do as a workaround to do ip6
22:38 <@trb> arin may be a long way from running out, ripe is near to running out
22:38 <@trb> apnic has run out
22:38 <@trb> AviMarcus: we gave up trying to make v6 work
22:38 <@trb> just stuck nginx infront
22:38 <@trb> simpler
22:39 <@AviMarcus> You said. So write that. "I was unable to bind to multiple arbitrary ipv6 with node and was forced to reverse-proxy with nginx"
22:40 <@trb> I need to check that it hasn't improved in v8, but in v6 that is the case
22:40 <@AviMarcus> oh. lol.
22:40 <@owen1> i need to build file upload that can handle multiple users at the same time. my files should be stored stored on a remote server via an api. is it possible to do that without saving temporary files on the node server filesystem, to save some cpu?
22:41 <@AviMarcus> eek at v0.8.3 already.
22:41 <@AviMarcus> that's not CPU, that's disk IO
22:41 <@owen1> AviMarcus: true
22:41 <@AviMarcus> I don't think it saves to disk automatically, owen1 ...
22:42 <@AviMarcus> you can pipe the stream directly to the other API
22:42 <@AviMarcus> I think
22:42 <@owen1> AviMarcus: that's what i want! i tried https://github.com/felixge/node-formidable but it does save to disk.
22:42 <@owen1> unless there is some option to tell it not to.
22:43 < alejandromg> owen1: they add it pipe support
22:43 <@AviMarcus> alejandromg, I don't see it in their docs, can you be more specific?
22:43 <@owen1> i see file event - Emitted whenever a field / file pair has been received. file is an instance of File.
22:44 <@owen1> what does field/file pair means?
22:44 < alejandromg> AviMarcus:  https://github.com/felixge/node-formidable/issues/56#issuecomment-7049874
22:45 < tmpvar> strange idea: put binary builds of node (node-{i386,x86_64}) into npm for modules (mainly addons) that require a different arch than the globally installed node 
22:45 < tmpvar> thoughts?
22:46 <@AviMarcus> alejandromg, looks like it doesn't disable saving to disk, though..
22:46 < pppaul> debugging nodejs is a pain
22:46 < pppaul> even using node-inspector
22:46 < sqwishy> Hi, it looks like createDeflateRaw and deflateRaw are not behaving the same when I'd expect them to. Can anyone point out a stupid mistake I made, or provide a reason for why they should be doing what they appear to be doing? http://pastebin.com/qVKvPWwH
22:46 < pppaul> anyone else use something better?
22:46 <@owen1> alejandromg: AviMarcus should i just try using node's http instead of formidable, to avoid saving to disk?
22:47 <@AviMarcus> owen1, maybe, dunno how much you need to do for that, though.
22:47 <@owen1> AviMarcus: is file upload require a lot of code? why is it different than regular post?
22:48 <@AviMarcus> I dunno, encoding maybe? could be not.
22:48 <@owen1> can't i just pipe stuff that i get in the 'data' event?
22:48 <@AviMarcus> or maybe just grab that out of the formidable codebase
22:48 < tjholowaychuk> owen1 http://en.wikipedia.org/wiki/MIME
22:48 < tjholowaychuk> multipart is kinda like nested http chunks
22:48 < tjholowaychuk> so something needs to parse it
22:49 <@owen1> oh
22:49 <@owen1> i have no idea what u just said (;
22:49 <@owen1> nested http chunks
22:49 < tjholowaychuk> if you scroll down you'll see an example
22:50 <@owen1> ok
22:50 < DeathRayDragonL1> so is process.env native to node?
22:51 < DeathRayDragonL1> and is something like NODE_ENV=production really the recommended way of setting environment variables?
22:52 < tjholowaychuk> that's what environment variables are
22:52 < tjholowaychuk> process.env.foo= is just setenv(foo etc
22:52 <@AviMarcus> oh right -- what do people use for API keys with REST? where do they pass it in?
22:52 < tjholowaychuk> magical getter/setter
22:52 < DeathRayDragonL1> sure
22:53 < tjholowaychuk> you can export them in your session or profile instead of in the command line
22:53 < other_guy> AviMarcus, we generate a UUID for API keys
22:53 < other_guy> we send them in as HTTP Basic Auth
22:53 < other_guy> API key as the username "*" as the password
22:53 < other_guy> but all our connections are SSL
22:54 < DeathRayDragonL1> NODE_ENV=$RANDOM :p
22:54 <@AviMarcus> I think mine will be too, seems silly not to
22:54 < DeathRayDragonL1> I like to keep people on their toes.
22:54 < other_guy> We're basically mimicking the Campaign Monitor API
22:54 < other_guy> it's clean and simple
22:54 <@AviMarcus> Oh. curl --user name:password that's easy.
22:55 < other_guy> and the only reason we're using API keys at all is that it gives us a way to invalidate a user's access without mucking with their user credentials
22:55 <@AviMarcus> and you can potentially create multiple API keys per user
22:55 < other_guy> yep
22:55 <@AviMarcus> and then rate limit, or delete them individually
22:55 < other_guy> yep
22:55 <@AviMarcus> (or even different permissions. Like sub-accounts.)
22:56 < other_guy> да
22:56 <@AviMarcus> ?
22:56 < other_guy> da :-)
22:58 < other_guy> Okay, so can anyone tell me why this doesn't work?
22:58 < other_guy> http://pastebin.com/cT1T1UfM
22:58 < other_guy> it doesn't produce a valid PNG file from the data returned on the response
23:00 <@AviMarcus> Uh ok. So how do I share a sql connection with 3-10 module files?
23:00 <@AviMarcus> or how to make them just an "include" for readability purposes rather than real modules?
23:09 < other_guy> AviMarcus, just require the file directly
23:09 < other_guy> you're still going to have to export something
23:11 <@AviMarcus> other_guy, I cheated and did GLOBAL.client
23:12 <@AviMarcus> dunno.
23:12 < other_guy> well… just be careful with globals… they're not always a bad idea.
23:12 < other_guy> not always a good one either ;-)
23:13 <@AviMarcus> the only other option I can think of is: pass client in to each module upon calling functions --which looks messy
23:13 < Ramone> hey all... any dnode users in here?  I'm wondering how to keep a *client* connected (ie auto-reconnect)... it seems pretty painful to make it just connect again on error/fail/end
23:13 < ferlores> other_guy, did you solve your problem with the pmg? 
23:13 <@AviMarcus> or having each module create a connection, which also seems silly.
23:13 < ferlores> png*
23:13 < other_guy> ferlores, no
23:13 < ferlores> other_guy, did you try with setEncoding('binary')
23:14 < other_guy> I did
23:14 < other_guy> same result
23:14 < ferlores> :?
23:14 < ferlores> :/
23:14 <@Nexxy> globals are a sin
23:14 <@Nexxy> don't listen to other_guy !
23:14 < other_guy> though the data is a buffer so the encoding should be ignored anyway
23:14 <@Nexxy> he speaks of wicked wicked ways
23:14 < other_guy> quiet you :-p
23:14 <@Nexxy> I refuse
23:15 < other_guy> Motherhood has made you even more opinionated perhaps? :-p
23:15 < other_guy> :-)
23:15 <@Nexxy> definitely
23:15 < other_guy> lol
23:15 <@Nexxy> :D
23:15 <@AviMarcus> Nexxy, do you have a non-messy suggestion for sharing a mysql connection amongst my own 3-10 modules?
23:16 <@AviMarcus> I'm using restify atm
23:16 <@Nexxy> event emitters
23:16 <@AviMarcus> I've never touched those. that's message passing within node.js?
23:16 <@Nexxy> I suppose
23:17 < other_guy> AviMarcus
23:17 < other_guy> why not create a sort of dumb client for your modules
23:17 < other_guy> It wraps a SQL connection
23:17 < other_guy> then your other modules include it and pass their data to it to execute?
23:18 < other_guy> Should be a pretty simple interface to build
23:18 < other_guy> ferlores, do you get the same result when you try to run it?
23:18 < ferlores> yep
23:19 <@AviMarcus> including it would work? the mysql module needs.. var client = mysql.createClient({ after calling
23:19 < ferlores> other_guy, I get a file thats quite bigger than the original
23:19 < ferlores> 22kb instead of 13kb
23:19 < other_guy> AviMarcus, yes.
23:20 < other_guy> ferlores, I don't even get the same sized file every time
23:20 < other_guy> sometimes it's 12k
23:20 < other_guy> others its 24
23:20 <@AviMarcus> other_guy, it will only get executed once? hmm maybe I can test.
23:20 < ferlores> other_guy, the png is changing or is always the same?
23:21 < other_guy> AviMarcus, you don't have to export it as an instance, you can make the sql connection a direct member on your client 'class'
23:21 < other_guy> I think it's always the same
23:21 <@AviMarcus> other_guy, I have no clue what that means
23:21 < other_guy> AviMarcus… instead of MyClient.prototype.sqlConnection
23:21 < other_guy> do MyClient.sqlConnection
23:22 < ferlores> other_guy, did you tried with request module? looks pretty simple
23:22 < other_guy> they're not really "static" or "class" members, but they're close
23:22 < other_guy> ferlores, what do you mean?
23:22 < ferlores> require('request') :)
23:23 < ferlores> https://github.com/mikeal/request
23:23 <@Nexxy> Ramone, https://github.com/substack/dnode#events
23:24 < Ramone> Nexxy: yeah those are the end/fail/error I was talking about
23:24 < other_guy> ferlores, I haven't, but I would still like to know why this is failing :-)
23:25 < Ramone> Nexxy: somehow event listeners stay connected in subsequent calls to connect(), so I have to clear all listeners
23:25 < ferlores> other_guy, actually I've just tried with this lib and got the same result, using node 0.8 and 0.6, strange...
23:26 < other_guy> hrm
23:26 < Ramone> otherwise I get ~9 reconnections on the 3rd reconnect attempt
23:26 < other_guy> well let's try a different binary file perhaps… 
23:27 < other_guy> ferlores… replace the options argument with this...
23:27 < other_guy> {method: 'get', host: 'images.google.com', port: 80, path: '/intl/en_ALL/images/logos/images_logo_lg.gif'}
23:28 < ferlores> other_guy, I've just tried with the doodle form google and same result
23:28 < other_guy> LOL, priceless that we went for almost the same thing
23:29 <@Nexxy> other_guy, are you still involved w/ riak client stuff?
23:29 < other_guy> Nexxy, I am
23:29 <@Nexxy> ping me about it when you get a chance?
23:29 < other_guy> Mathias is supposed to be working on it, but I haven't been able to get ahold of him
23:29 < other_guy> I'm fixing the pure-js version
23:29 < other_guy> it fails very, very simple tests currently
23:30 <@Nexxy> whole lot of supposed to's going on!
23:30 < other_guy> I actually think a BUNCH of stuff should be stripped out of it completely
23:30 <@Nexxy> meanwhile riakstar passes all 10 of its tests!
23:30 <@Nexxy> \o/
23:30 <@Nexxy> lol
23:30 < other_guy> half of it's functionality is there to make it easier to do shit that Riak realy really hates
23:31 < ferlores> other_guy, samething
23:32 < other_guy> Nice work Nexxy :-)
23:42 < ferlores> other_guy, I think that the problem is how you are storing the chunks of data. Seems that a string is not a good option
23:42 < other_guy> yeah, I think I've got a solution
23:43 < other_guy> ferlores, according to TJ the issue is that an implicit toString() is happening which is converting the Buffer to UTF-8
23:43 < other_guy> so what I've done is save the UTF-8 version of that PNG to disk :-)
23:43 < other_guy> So I'm working on a buffer only version now using the new Buffer.concat functionality in node v0.8
23:44 < ferlores> i see...
23:44 < other_guy> I'm not used to Javascript actually attempting to coerce types for me :-)
23:45 < ferlores> :D, anyway, now that we know what the problem was, I would use the request lib :D
23:50 <@AviMarcus> other_guy, so I made a module that included and connected to mysql then included that in the modules
23:50 < ferlores> other_guy, this worked for me https://gist.github.com/3157580
23:50 <@AviMarcus> the only thing is now I have mymodule.somename.$originalFunctions
23:51 <@AviMarcus> is there a way to expose all functions in the 'root' of the module?
23:51 < ferlores> other_guy, sorry, thats not true :C
23:52 < other_guy> ferlores, yeah because you've created a string buffer :-)
23:52 < Almindor> hey
23:52 < other_guy> you need to pull the length of the content out of the headers
23:52 <@jcrew> hey is for horses
23:52 < ferlores> other_guy, will try again 
23:52 < other_guy> create the buffer at a fixed size, and then keep writing to it
23:53 < other_guy> AviMarcus, module.exports = mymodule;
23:53 < Almindor> I'm trying to fix compatibility issues with our node.js app (currently works on 0.6.x). What's the best way to get two versions of node.js running on the same machine? (Mac OS X) Can I just get the tar.gz, unpack locally and call it directly?
23:54 < ferlores> other_guy, ok, now yes, it works https://gist.github.com/3157606
23:55 < other_guy> ferlores, yeah that's close to what I've got here… one sec :-)
23:55 < Bretto> can you use the node-inspector these day to debug a node project, the github of node inspector look old...
23:56 <@AviMarcus> w00t other_guy that seems to work
23:56 < other_guy> AviMarcus :-)
23:57 < other_guy> good work
23:57 <@AviMarcus> so now my modules can include: var client = require('./db.js');
23:57 <@AviMarcus> and that's the same as one file doing mysql and the connect.. and I only see one connect line in the console
23:57 <@AviMarcus> rather than one for each
23:57 < other_guy> ferlores… hmmm… I'm trying to avoid creating a new Buffer from chunk
23:58 < other_guy> your method works… but it seems like chunk should be able to be in the list of buffers to concat
23:58 < other_guy> but it fails for me...
23:58 < other_guy> one sec
--- Log closed Sun Jul 22 00:00:00 2012
