--- Log opened Fri Aug 31 00:00:00 2012
--- Day changed Fri Aug 31 2012
00:00 < etcetera> is there a package format for npm packages?
00:00 < etcetera> package format spec*
00:01 < ChrisPartridge> etcetera: check out the developers page on npm
00:02 < freewil> also: npm help json
00:02 < ChrisPartridge> etcetera: howtonode.org/introduction-to-npm && howtonode.org/how-to-module might be helpful also
00:03 < etcetera> yea I saw this.
00:03 < etcetera> https://npmjs.org/doc/json.html
00:03 < etcetera> Trying to figure out if it's viable to use npm outside of node.
00:04 < etcetera> as a general purpose package manager to replace NuGet or something.
00:12 < samholmes> The monetary system is a framework we're all attached to and haven't seriously questioned in its efficiency. :)
00:13 < freewil> #bitcoin
00:15 < samholmes> freewil: no, cause BTC is still a currency and apart of a monetary scheme
00:16 < _Tristan> op plz
00:16 < _Tristan> ops plz
00:16 < _Tristan> NU
00:16 < astropirate> apart from "a scheme"
00:17 < astropirate> bazinga
00:48 < meme> hi, i have installed npm install express -g, but it installed v3. I need v2. how do i unistall the v3 and install the v2?
00:54 < matehat> meme: npm install -g express@2
00:55 < matehat> meme: further explanations https://npmjs.org/doc/install.html
00:55 < meme> ok, thanks
00:56 < meme> i was having issues with unistalling express npm WARN uninstall not installed in /usr/local/lib/node_modules: "express"
00:56 < meme> npm unistall express -g
01:00 < meme>  i cannot unistall express v3, any ideas why?
01:03 < ChrisPartridge> meme: is there a force flag?
01:05 < meme> what do you mean?
01:05 < meme> i'm not linux expert
01:06 < meme> i'm using: npm unistall express -g
01:08 < meme> can i manually remove a darn package that refuses to go away with npm rm?
01:10 < meme> i keep getting this error npm WARN uninstall not installed in /usr/local/lib/node_modules: "express"
01:10 < meme> how do i remove npm and all modules installed with it at will?
01:16 < matehat> meme: are you sure express is installed?
01:16 < qubit[01]> meme: you probably have to do that as root
01:17 < meme> yes, express is installed globally
01:17 < matehat> meme: do you see it when you type -> ls /usr/local/lib/node_modules
01:17 < meme> i have set usr/local for my local user
01:17 < meme> 1 sec
01:18 < meme> matehat, nothing is there
01:19 < meme> it is installed elsewhere, as if i o express --version, i get v.3 as an answer
01:19 < meme> do*
01:19 < qubit[01]> type 'which express'
01:19 < qubit[01]> where is it ?
01:20 < matehat> meme: and try this -> echo $NODE_PATH
01:20 < meme> i have an error with wich express, wich coomand not found
01:21 < matehat> "which" with an h
01:21 < meme> ah
01:21 < meme> /usr/bin/express
01:22 < meme> /usr/lib/nodejs:/usr/share/javascript
01:22 < matehat> and what does "echo $NODE_PATH" outputs?
01:22 < matehat> ok
01:24 < matehat> strange that npm doesn't look in the right place for global modules
01:24 < meme> matehat, i have an after this: npm unistall express -g #npm WARN uninstall not installed in /usr/local/lib/node_modules: "express"
01:24 < qubit[01]> meme: type, file `which express` , with the quotes
01:24 < meme> an error*
01:24 < qubit[01]> im guessing its a symlink somewhere
01:24 < meme> destination is not empty, continue? n
01:26 < meme> i had some problems with npm to be honest,i had to unistall it and install it again
01:27 < meme> npm has created an "npm" folder and a "tmp" in my home folder. not /.npm 
01:27 < meme> i deleted those folder and reinstalled npm but now this x.x
01:28 < qubit[01]> npm should be bundled with node now, what version of node is this ?
01:28 < qubit[01]> you shouldnt have to manually install it
01:28 < meme> i had it, the chris lea ppa, have node and npm separate
01:28 < meme> ed*
01:29 < jkevinburton> Im testing locally with my new api and using node to send requests with it using tj's superagent library, anyone use it? i need to supress the ssl cert error...
01:29 < meme> https://launchpad.net/~chris-lea/+archive/node.js/
01:29 < jkevinburton> couldn't find anyting in the docs
01:34 < samholmes> <samholmes> how can I tell if headers were already sent?
01:34 < samholmes> <samholmes> Or if next() was already called?
01:34 < samholmes> <samholmes> from within a route function of course..
01:41 < meme> if i install a package with npm, using -g, what is the absolute path for the package?
01:49 < pringlescan> When making a module in node (for NPM)… a lot of times I'm thinking "this code is very general, there isn't a module for it… but it shouldn't be included in the module I'm working on"
01:50 < pringlescan> I don't always have time to make a full blown module, but I plan to for many of these instances, is it better to release everything at once or break code into multiple modules than release updates that require the new modules that broke off from the original
01:51 < substack> multiple modules
01:51 < substack> just release more modules and you'll get faster at it
01:51 < substack> takes me like 15 minutes
01:51 < pringlescan> so break them up as I go?
01:51 < substack> that's a good strategy
01:51 < substack> it's much harder to break things up after-the-fact
01:51 < pringlescan> I want to make a fuzzy geo module but I'm checking to make sure nothing else offers it
01:52 < substack> crazy hard infact
01:52 < pringlescan> I have all these phone numbers modules, but I want something that works with neighboring states and/or counties and area codes rather than something truly geospatial (which is of no use for my purposes, it wouldn't raise accuracy)
01:54 < flockonus> any company hiring for Node.js in Vancouver or remote?
01:55 < pringlescan> substack have you done any native extensions with Node?
01:57 < substack> pringlescan: a few, they're really hard
01:57 < substack> and they break every time there's a new stable
01:57  * substack heading to berkeley &
01:58 < pringlescan> substack, I'll continue to write wrappers for terminal apps even if they have C++/C bindings then until it's worth my time
02:01 < samholmes> to send an error message down through HTTP you do res.send(err.toString())?
02:01 < samholmes> Or is there a better method than toString?
02:18 < maxogden> you should set the correct http response header also. i like to send json error messages
02:21 < meme> hi, i'm having problems with npm. how do i manually remove a package that was installed with npm and it is located at /usr/bin/express?
02:23 < maxogden> in the node repl you can type 'require.resolve("foo")' to see where foo is installed. then you can just go delete the module folder
02:30 < meme> maxogden, i got errors https://gist.github.com/3547951
02:31 < meme> it seems express is not there, although i do express --version, it says v3 
02:32 < meme> maxogden, can i safely rm  /usr/bin/express ?
02:32 < jtomasrl> how can i create HMAC  url safe?
02:33 < jtomasrl> without * @ - _ + . / characters
02:37 < maxogden> meme: sounds like you did npm install express -g at some point
02:38 < maxogden> meme: the -g means global which means it installs CLI binaries
02:38 < maxogden> meme: so just do npm uninstall express -g
02:38 < meme> maxogden, you are right i did -g. but i have problems doing  npm uninstall express -g
02:39 < meme> i ahve this error npm WARN uninstall not installed in /node_modules: "express"
02:40 < maxogden> meme: you typed 'remove' instead of 'uninstall'
02:41 < meme> no, i idi unistall,acutally now i have this error npm WARN uninstall not installed in /usr/local/lib/node_modules: "express"
02:41 < maxogden> weird, i dunno about that
02:41 < maxogden> in the gist you linked it said remove so i was confused
02:41 < meme> yes, i tried all of them
02:41 < meme> rm, remove and unistall
02:42 < ChrisPartridge> meme: Sounds like the express package was removed from your global modules, but perhaps the symlink was not? is /usr/bin/express a symlink?
02:42 < meme> chris, you are right, i do have a /usr/bin/express
02:43 < meme> should i just rm /usr/bin/express?
02:43 < ChrisPartridge> ls -s /usr/bin/express
02:43 < ChrisPartridge> is it a sym link?
02:43 < meme> 0 /usr/bin/express
02:44 < meme> i think no
02:45 < meme> this is very boring
02:56 < meme> how can i remove npm and all modules installed by it?
03:51 < mscdex> hooray for awesome refactors!
03:55 < jtomasrl> when doing http.get(options, function(res) {}); how can i display the result on the body?
03:58 < mscdex> jtomasrl: the body comes in as chunks, which you get by listening on res.on('data', function(chunk){})
03:58 < mscdex> jtomasrl: when there's no more chunks: res.on('end', function() { /* ohai i'm done */ })
04:00 < jtomasrl> mscdex i got that too but im just able to do console.log(...) and not displaying them on the browser
04:33 < jtomasrl> is there a way i can improve this without so many "else" doing the same? https://gist.github.com/8c9199db9d3af35bb1af
04:49 < ChrisPartridge> jtomasrl: something like this https://gist.github.com/5634014d9cd667c1eae8 maybe?
04:51 < jamescarr> mikeal you around?
04:51 < jtomasrl> ChrisPartridge, let me check it
04:54 < jtomasrl> ChrisPartridge, wow that worked fine
04:54 < ChrisPartridge> cool :)
04:57 < jtomasrl> ChrisPartridge, i just notice you chance almost all expressions, so just if it fails send the return value, otherwise it will continue is that correct?
04:59 < ChrisPartridge> jtomasrl: My thought process is generally, find anything that fails, and exit the current context immediately, the bottom of the function should be the "positive" so to speak, result
05:00 < jtomasrl> ChrisPartridge, i will start doing this, look good. thanks
05:00 < ChrisPartridge> yw
05:04 < matehat> jtomasrl: hey, did you get that encrypt/decrypt thing to work?
05:05 < jtomasrl> matehat, yup i change to hex instead of base64 and get some more friendly hashes to place in my url
05:06 < matehat> jtomasrl: ok, but the output must be quite bigger no?
05:07 < jtomasrl> tbh i didnt compare the sizes i just need it to work
05:08 < jtomasrl> matehat, but yes... it looks quite bigger
05:24 < jokeyrhyme> howdie, anyone here consider themselves a child-process guru?
05:28 < jokeyrhyme> i'm trying write a module that can be executed directly as well as be forked from another module as a child process. how can i tell if the code is running in a child process or not?
05:28 < jokeyrhyme> module.parent is undefined in both cases, i am not using require to load it
05:33 < mscdex> jokeyrhyme: why not use child_process.fork ?
05:33 < jokeyrhyme> i am
05:33 < jokeyrhyme> but i want to have the option of using fork('module') and node module
05:34 < jokeyrhyme> and i need slightly different behaviour in the code
05:34 < jokeyrhyme> in my case, if i use fork, i want my child script to wait for further signals
05:34 < jokeyrhyme> but if i just node it directly, i want my child script to immediately start doing work
05:35 < jokeyrhyme> this is actually really easy to do in a single process, because if you require a module, that module knows it was required (module.parent !== undefined)
05:36 < jokeyrhyme> but i had to change to a child_process layout in order to address other issues
05:43 < mscdex> jokeyrhyme: an easy hack would be to check for something like `process.send`
05:43 <@konobi> what's the recursive directory reader library of choice?
05:43 < mscdex> konobi: the one that you write yourself ;-)
05:46 <@konobi> mscdex: meh... i'm lazy
05:47 < cainus> hey all... anyone use flatiron union?  
05:47 < jokeyrhyme> hmmm, i'll check process.send
05:47 < cainus> just wondering if the middleware are all still executed synchronously
05:48 < jokeyrhyme> oh wow, thanks @mscdex, that works brilliantly
05:50 < cainus> jokeyrhyme, https://npmjs.org/package/walk is alright
05:51 < ChrisPartridge> Are there logs for this channel floating around somewhere?
05:52 < mscdex> ChrisPartridge: http://piscisaureus.no.de/node.js/
05:54 < ChrisPartridge> thanks dude
06:44 < jaseemabid> What is the type of "const Arguments& args"? I want to convert it to a string. 
06:45 < jaseemabid> What does args[0]->ToString() do? Convert to an ascii string or the v8::String ?
06:51 < milani> jaseemabid, Arguments is like an array.
06:51 < milani> jaseemabid, and ToString() returns v8 string
06:52 < jaseemabid> milani, How do i convert v8::string to normal string? Or can i print a  v8::String ?
06:52 < milani> https://github.com/appjs/appjs/blob/master/src/includes/util.cpp#L7
06:53 < jaseemabid> Thanks :)
06:53 < milani> this function helps you to convert your string to utf8
06:53 < milani> :)
06:55 < jaseemabid> That worked! Sweet :) But You need an extra function for that? 
07:02 < huzijin>   File "./configure", line 325     o['default_configuration'] = 'Debug' if options.debug else 'Release'                                           ^ SyntaxError: invalid syntax
07:02 < huzijin> what's the problem ??? 
07:02 < huzijin>  can anybody help me ? 
07:04 <@konobi> huzijin: make sure you're using python 2.7
07:04 < milani> jaseemabid, hmm not a function you can pass writeUtf8 a buffer and it fills it.
07:04 < milani> easy enough:)
07:04 < huzijin> sorry , I am using python 2.4.3 
07:05 < huzijin> Thank you very much!!!
07:06 < jaseemabid> milani, You should really code a lot of c++ to understand the beauty of js or python :P he he. Anyways it works
07:08 < milani> beauty of js not pythong:D
07:08 < milani> because python is not beautiful
07:08 < milani> lol
07:09 < huzijin> The #Node.js is really amazing .  It's a chat room ...
07:09 < huzijin> The first time .
07:11 <@konobi> chrisjaure about?
07:12 < tasslehoff> "echo test | md5sum" in bash gives another hash then crypto.createHash('md5').update('test').digest('hex'). What am I not understanding?
07:12 <@konobi> huzijin: np
07:16 < ChrisPartridge> tasslehoff: just fyi, echo "<?php echo md5('test'); ?>" | php = 098f6bcd4621d373cade4e832627b4f6
07:16 < ChrisPartridge> tasslehoff: so most likely something with md5sum
07:16 < tasslehoff> ChrisPartridge: ya, in python as well :)
07:16 < tasslehoff> thanks
07:17 < lulzilla> is there a good straightforward node lib for thrift?
07:17 < ChrisPartridge> lulzilla: isn't there one maintained by the thrift project now?
07:19 < lulzilla> that one is confusing to the point of being unuseable
07:19 < tasslehoff> ChrisPartridge: "echo -n", else I get an extra newline in there
07:20 < ChrisPartridge> tasslehoff: Yeah, I was curious too and just read about it
07:21 <@konobi> ChrisPartridge: you could maybe do a thrift to restify compiler
07:21 < ChrisPartridge> me? I'll leave that to whoever wants to use thrift :)
07:22 < lulzilla> Chris, do it for karma :)
07:24 < ChrisPartridge> r/karma/beer ?
07:24 <@konobi> beer comes later
07:24 <@konobi> =0)
07:25 < ChrisPartridge> I still haven't even finished my postgre orm, I just hacked in what I needed to complete my current project :-(
07:26 < LambdaDusk> uh, hello... does anyone have an example derby application that does user authentication?
07:40 < fatshotty> hello there
07:52 < joelsbeard> anyone have a recommendation for a good router? I don't need many features
07:54 < jamescarr> hey, anyone got some pointers on submitting form data within node.js?
07:54 < jamescarr> I want to submit a multipart form to another site
07:54 < jamescarr> trying to use request but failing
07:54 <@konobi> is it just me or is inflection in frameworks evil?
07:55 <@konobi> joelsbeard: amped wireless stuff is pretty decent
07:55 < jamescarr> konobi, inflection? 
07:55 <@konobi> though i use mine purely as an AP
07:55 < jamescarr> or reflection?
07:55 <@konobi> jamescarr: singular to plural, etc.
07:56 < jamescarr> konobi, i'
07:56 < jamescarr> I've never heard inflection, always reflection
07:56 <@konobi> jamescarr: users -> user and reverse
07:57 <@konobi> for example, rails uses it quite heavily... *shudder*
07:57 < jamescarr> I find it is something people commonly bitch about in computer science
07:57 < joelsbeard> konobi: I mean a software router, I should have specified :P
07:57 < jamescarr> it's not as bad as they make it out to be
07:57 <@konobi> joelsbeard: which type... ip or app?
07:57 < jamescarr> I dealt with an old guy on a previous team who would whine all day long about frameworks using reflection
07:58 < joelsbeard> konobi: app, basically just a blog type of app
07:58 <@konobi> reflection is fine... but the translation for reflections can be weird
07:58 <@konobi> joelsbeard: there's lots
07:58 <@konobi> isaacs one is fairly dandy
07:59 < [AD]Turbo> hi there
08:03 < joelsbeard> yeah, I am looking at 'router' now. Seems like a good one
08:04 <@konobi> joelsbeard: if you want something basic it's good
08:07 < Init--WithStyle-> Does anyone know how to get live code editing working? Eg. pipe the node.js app that is currently running directly to a V8 browser and edit the code/continuously run it in real time?
08:07 < Init--WithStyle-> I don't want to keep restarting my server to have code changes take effect...
08:07 < Init--WithStyle-> Instead if I could edit in on the fly...
08:07 < Init--WithStyle-> and I've seen it work...
08:07 < Init--WithStyle-> Anyone know what i'm talking about?
08:08 < fatshotty> did anyone try to install nodejs on raspberry? I'm trying with TooTallNate's pi branch
08:09 < Init--WithStyle-> If you have ever edited client-side code with chrome you know what I mean..
08:12 < jamescarr> Init--WithStyle-, try nodemon
08:13 < jamescarr> Init--WithStyle-, it's the closest I could get. Still restarts the server, but does it on code change so you dont have to
08:13 < Init--WithStyle-> jamescarr: I know there is a way without restarting the server
08:13 < trodrigues> Init--WithStyle-: wait a sec, I had something around which could help you
08:14 < Init--WithStyle-> and also, on code change restarting = what i'm doing now... it's really annoying especially when you are trying to make small modifications on a server state that happens after a few minutes of user interaction
08:14 < Init--WithStyle-> I remember there was some way to pipe directly into chrome because node.js uses a V8 interpreter
08:14 < trodrigues> https://github.com/dannycoates/node-inspector
08:14 < Init--WithStyle-> yes, that's it.
08:15 < trodrigues> :)
08:15 < trodrigues> i thought i had that on my pinboard but apparently i don't
08:15 < Init--WithStyle-> It's a bit old though..
08:15 < Init--WithStyle-> does everything work alright?
08:15 < radiodario> morning
08:15 < trodrigues> i tried it not too long ago
08:15 < trodrigues> no idea if it has any problems with node 0.8
08:15 < trodrigues> but with 0.6 it worked very well
08:22 < jamescarr> when someone submits a form with fields like foo[bar][baz] what does the raw message usually look like?
08:22 <@konobi> trodrigues: that requires that node be started with debug options
08:22 < jamescarr> I'm guessing the [ and ] gets converted to another char
08:22 <@konobi> jamescarr: uriencoded
08:26 <@konobi> isaacs: when can we jsut ban coffee libs on npm?
08:34 < trodrigues> well yes. but it's the only solution i know that allows you to do what Init--WithStyle- was describing
08:34 < trodrigues> there might be others but I haven't seen them
09:25 <@konobi> for a jekyll-ish program, how would folks expect a content file to map to template/layout files?
09:43 < the_fappery> = (
10:53 < mape_> substack: around?
10:55 < jp-js> hi guys... how can I test a defined property on the Date object using Mocha? I can't seem to be able to get Mocha to see this property function
10:55 < jp-js> I defined Date.prototype.yyyymmdd = function() {}
10:55 < jp-js> but I cannot access to it from Mocha
10:56 < jp-js> from Mocha `Date.prototype.hasOwnProperty("yyyymmdd")` returns false
12:06 < bobosomfan> Hi! Any idea how I can write a JSON-object using response.write()?
12:07 < jmar777> bobosomfan: response.write(JSON.stringify({foo: 'bar'}))
12:08 < bobosomfan> jmar777: I'll try that! Thanks!
12:08 < jmar777> bobosomfan: np
12:10 < jim_> Giving up coffeescript is like giving up coffee.  God damn it all.
12:14 < aandy_> Hush, you just need another fix.
12:15 < aandy_> Why are you giving up coffee?
12:41 < mape_> Hmm is there any proper way to "tail" a file on Windows?
12:42 < nkuttler> mape_: install tail?
12:42 < mape_> Ah, neat
12:43 < mape_> thanks
12:43 < nkuttler> like http://gnuwin32.sourceforge.net/packages/coreutils.htm
12:43 < nkuttler> or just get a real os :P
12:43 < mape_> nkuttler: Running osx, but hard to be hipster when it is a production server :)
12:44 < nkuttler> osx doesn't come with tail !??
12:44 < nkuttler> tail sounds so POSIX
12:44 < mape_> It does, but the production server isn't running OSX...
12:44 < nkuttler> oh, ouch
12:44  * nkuttler shudders
13:06 < trodrigues> hey guys. say that I have a package in a private git repo and I install that package with npm install. that package has some checked in dependencies. should npm pull the newest version of those dependencies, even if the package already has them?
13:07 < trodrigues> according to what I understand from the npm install info page, it shouldn't
13:09 < jacobrask> Are there any libraries that would let me write code like [].filter(callback).mapAsync(callback[, errback]).map(callback) or something similar?
13:09 < trodrigues> mmm...i probably need to shrinkwrap that package
13:10 < jacobrask> I've used async a bit and seen some promise libraries, but nothing with that kind of chaining
13:10 < AAA_awright> trodrigues: Checked in dependencies? Adding other packages to your git repository is considered bad form... it makes git cry, kittens die, etc. Use Git submodules or package.json.
13:11 < AvianFlu> don't use git submodules
13:11 < AAA_awright> Though maybe that varies with your specifics
13:11 < AvianFlu> if anything makes kittens cry, it's those
13:11 < AAA_awright> Yes, use git submodules
13:11 < AvianFlu> trodrigues: look into shrinkwrap or into using bundleDependencies
13:11 < AvianFlu> it's what you want there
13:11 < AAA_awright> There's nothing particularly special about submodules, except instead of having a tree in your tree, you have a commit in your tree
13:11 < trodrigues> AAA_awright: this is for an internal project, not something that gets published on npm
13:12 < trodrigues> which afaik is the proper use case for checked in dependencies
13:12 < AAA_awright> trodrigues: I'd think npm handles private projects, I know it does
13:12 < trodrigues> AAA_awright: it does, and that's what i'm doing, but i want to have close control of those private dependencies
13:12 < trodrigues> i don't want a bad dependency to just update itself by accident and break everything
13:12 < trodrigues> which is what just happened
13:12 < AAA_awright> Checked-in dependencies, even if that's what you want, loses the commit history of those files.
13:13 < trodrigues> because I hadn't shrinkwrapped that package
13:13 < trodrigues> AAA_awright: i know, and i don't care. those are dependencies. when we update them we do it in one commit specifically for that
13:14 < aldus> hi. Anybody experienced problems with nodejs mysql modules where queries seem "cached" (returning rows from an empty table) even with mysql cache disabled? 
13:15 < trodrigues> well shrinkwrapping seems to solve my problems. i had just completely forgotten about it
13:19 < meme> after unistalling express, if i do whereis express, i still have a file /usr/bin/express. what is that, cn i manually delete it?
13:26 < chrisjaure> meme: did you uninstall -g?
13:27 < mape_> Anyone had issues when usign spawn on windows, the stdout is only "flushed" after exactly 4096 bytes each time?
13:29 < meme> yes, i did it. chrisjaure, i'm a beginner with linux and node. i think  /usr/bin/express is a simlink
13:30 < meme> can i just delete  /usr/bin/express ?
14:07 < bingomanatee_> hi there
14:07 < bingomanatee_> anyone have a form generation library they like?
14:10 < RLa> bingomanatee, on server side?
14:10 < bingomanatee_> either way.
14:17 < zonetti> is it possible to redirect/transport multidata without storage it?
14:19 < slick> Can someone help me figure out why formidable doesn't callback in this code? https://gist.github.com/3553281
14:21 < slick> Basically, I'm passing the Express 2.x req object to Formidable and the callback never gets called. I've attached events to formidable and the 'progress' event gets called once (0 bytes of x bytes in the event) but nothing else gets called.
14:21 < slick> no error, no end, nothing
14:22 < slick> and the file does get saved in /tmp
14:22 < slick> the first example /admin/uploads calls just fine, saves the file to /tmp like expected
14:24 < bradleymeck> is there a way for npm pack to dump to stdout?
14:39 < meme> after unistalling node and reinstalling. after doing node -v, i got ----> axconfig: port 1 not active axconfig: port 2 not active
14:40 < meme> ideas?
14:42 < meme> i installed node, not node.js, ugh
14:47 < dominictarr> meme, better to compile from source, it's not that hard
14:47 < dominictarr> and the os repos are always out of date.
14:47 < meme> it is fine, i have a good ppa, chris lea lts 10.04
14:48 < meme> i knw how to compile from source, but it goes against my concept of automation, if you know what i mean
14:49 < meme> dominictarr, the problem i had, was that i installed "node" not "nodejs". node is another package
14:50 < meme> my ppa is up to date https://launchpad.net/~chris-lea/+archive/node.js/
14:51 < bnoordhuis> meme: ham radio is awesome too, though
14:51 < armetiz> Hi there.
14:52 < armetiz> I want to use init module inside a /etc/init.d/script.js
14:52 < armetiz> So, I have install 'init' globally, and this is a success.
14:52 < armetiz> But, inside my script.js, I get an error because It can't find "init" module.
14:52 < armetiz> I think this is a path problem ?
14:53 < armetiz> I have a shebang : #!/usr/bin/env node
14:53 < armetiz> But, the problem still appear If I run the script using node.
14:53 < armetiz> do you have any clue ?
14:56 < armetiz> ok. The global option is only for CLI ?
14:56 < milani> bnoordhuis, do u think we can connect two node instances over NAT using sockets?
14:56 < milani> bnoordhuis, I guess we need protocols like ICE on top of node right?
14:57 < jroes> is there any way to make the request library log some debug output?
14:57 < jroes> I need to see what the full request is that it's sending
14:57 < bnoordhuis> milani: i don't understand the question. are you talking about port forwarding? that's not specific to node
14:58 < milani> bnoordhuis, no I need p2p connections and it happens that people are behind firewalls and NATs
14:59 < bnoordhuis> milani: ah... that's still not specific to node :)
14:59 < milani> yeah I know.
14:59 < milani> I want to know if there is any effort to create a module for node to make it possible?
15:00 < milani> because I'm starting to create one.
15:00 < bnoordhuis> milani: there are modules that add upnp support, if that is what you mean
15:03 < milani> bnoordhuis, if they implement NAT traversal then it is a good start but won't be complete
15:03 < milani> thx.
15:03 < tkomos> hi
15:04 < tkomos> is there some actual memory profiling tool for nodejs? tried half the day node-inspector and nodetime.
15:05 < tkomos> node-inspector seems not to work anymore with node 0.8 (empty heap profiles) and nodetime displays a ton of useless information without showing the real memory leak
15:07 < mephju> Hi! I use bodyparser() put req.files keeps being undefined. Aside from this bodyparser works fine. Does anyone have a guess what's going on?
15:41 < wink_> anyone know of a little project that'll just launch a webserver out of whatever directory im in?
15:41 < wink_> and serve it :p
15:41 < bradleymeck> wink_ havent seen you in forever npm install http-server
15:41 < wink_> bradley: yeah ltns, hows it going ? :>
15:42 < bradleymeck> fine :), let me know if theres anything you need help with / are doing mad science on
15:42 < cjblomqvist> Anyone know of any good examples of how to create a stream which can pipe it's content to a readable stream?
15:42 < wink_> i usually come screaming! ;>
15:44 < bradleymeck> cjblomqvist: https://github.com/mikeal/morestreams/blob/master/main.js#L6 , its crazy complete, you probably dont need all of that
15:45 < cpsubrian> Me 5 mins ago: "How am I gonna check if this security group rule works?  I know:"
15:45 < cpsubrian> "$ node"
15:45 < cpsubrian> > var http = require('http');
15:45 < cpsubrian> > http.createServer(function(req, res) { res.end('Hi'); }).listen(8080);
15:45 < cpsubrian> Boom! :)  I love node
15:45 < cjblomqvist> Will check it out, thx!
15:45 < bradleymeck> cjblomqvist: basically make .pipe emit 'pipe' to a readable stream and then emit 'pause' 'resume' 'data' and 'end' if its only one way if you need to consume stuff, listen for on('pipe',parentStream) and hook up appropriately
15:49 < cjblomqvist> bradleymeck: Shouldn't something like this be enough? http://docs.nodejitsu.com/articles/advanced/streams/what-are-streams
15:49 < bradleymeck> cjblomqvist: for simple implementations sure
15:49 < bradleymeck> cjblomqvist: but if you want to add all the pause and resume stuff it gets more comple
15:49 < bradleymeck> x
15:52 < cjblomqvist> bradleymeck: Ah, okay, guess I have to dig a little bit deeper
16:01 < Almindor> is there a way to tell npm install where to look for libraries?
16:01 < Almindor> I have unix ODBC installed (on mac os X) in /usr/local/lib, but npm install odbc doesn't find it
16:02 < wankdanker> Almindor: you may need to clone it from the git rep and then modify the wscript file
16:02 < wankdanker> Almindor: https://github.com/w1nk/node-odbc
16:03 < wankdanker> Almindor: if you are using node v0.8.x, you will probably need the node-odbc v0.4 branch from my repo https://github.com/wankdanker/node-odbc/tree/v0.4
16:03 < Almindor> wankdanker thanks
16:04 < wankdanker> Almindor: you are welcome. Just reviewing the wscript file and it looks like it includes /usr/local/lib as a lib path. So, not quite sure where to go from there.
16:04 < Almindor> yea noticed that too
16:04 < Almindor> how does it actually check?
16:04 < Almindor> I have libodbc.dylib there
16:05 < Almindor> python works fine with it too
16:05 < meme> why do i have a tmp folder in my ~folder, after installing npm?
16:05 < wankdanker> I'm not sure, wscript is magic to me. You could try installing using node-gyp configure build or whatever too.
16:07  * mscdex shakes a fist at IMAP
16:09 < Almindor> wankdanker: I tried just removing the check, it fails on this now: error: cannot convert ?uv_loop_t*? to ?uv_handle_t*? for argument ?1? to ?void uv_ref(uv_handle_t*)?
16:09 < Almindor> note: it's probably using llvm-gcc not gcc itself
16:12 < Almindor> it's from this line:   uv_ref(uv_default_loop());
16:12 < Almindor> same for uv_unref
16:13 < Almindor> wankdanker: build succeeds if I just cast it uv_handle_t*
16:15  * milani is away: Away
16:17 < Almindor> wankdanker: also you might wish to setup some architecture switches, it built a 32bit binary (system is 64bit)
16:27 < thomasthomas> Can anyone take a look at this https://gist.github.com/3555359
16:28 < RLa> thomasthomas, so what
16:29 < thomasthomas> RLa that doesn't work limit is undefined
16:29 < thomasthomas> RLa is there a way to do it?
16:29 < RLa> maybe you want object instead of function
16:30 < thomasthomas> RLa I know I can return an object =\ 
16:30 < thomasthomas> RLa thanks
16:31 < meme> why do i have a tmp folder created by npm in my ~user folder? i have installed npm other times, but i can't remember that. is it a new feature?
16:36 < Antaranian> hi ladies
16:37 < Antaranian> need an advice of ordering server for my nodejs app, to server up to 100k parallel connections 
16:38 < Antaranian> is 2Gb RAM enough on a debian server, for a mainly read type of app ? 
16:39 < RLa> lots of websocket connections?
16:41 < Antaranian> yes, + REST JSON server
16:41 < wankdanker> Almindor: thanks. not sure if you checked out the v0.4 branch of node-odbc, that might fix any of the uv_handle_t stuff.
17:09 < etcetera> what's a good node host?
17:09 < etcetera> I don't want to mess with sysadmin stuff right now. Otherwise I'd just purchase a Linode instance.
17:09 < billy> heroku
17:10 < chrisjaure> etcetera: nodejitsu is pretty nice as well
17:10 < etcetera> Might just use Azure...
17:12 < etcetera> but then again I want to run redis.
17:12 < baudehlo> just use redistogo
17:13 < etcetera> baudehlo: at that point I might as well just use linode.
17:13 < etcetera> in lieu of two separate storage and server hsots.
17:13 < baudehlo> well heroku uses redistogo
17:13 < baudehlo> so I don't see how it's different.
17:14 < etcetera> http://www.heroku.com/addons/redistogo
17:14 < etcetera> that's exactly what I wanted to see -> Linode.
17:15 < etcetera> I guess I could do a free microinstance as well.
17:26 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:27  * milani is back (gone 01:11:42)
17:51 < ekryski> mscdex: tried just using bash vars instead of changing the gyp files for Panadboard. Couldn't get it to work
17:55 < pringlescan> I'm making a nanp-utils module that gives all sorts of helpful functions for working with north american numbering plan phone numbers… I'm wondering if I should make a constructor that takes a phone number so you can use it like phone.toCoords() (returns lat/lng for the phone number passed to the constructor) or if I should just expose those methods and take a phone number each time. Is one considered more right than the other?
17:56 < mscdex> ekryski: what was the error?
17:57 < ekryski> same deal it throws that it's trying to execute the full instruction set instead for a thumb enabled device
17:58 < mscdex> what are you using for your exported vars?
17:58 < ekryski> mscdex: the same ones you told me.
17:58 < ekryski> FYI I have uploaded some benchmarks for NodeJS on Panda http://erickryski.com/2012/08/29/nodejs-on-pandaboard/
17:59 < mscdex> oh, i used mcpu instead of march i think
17:59 < mscdex> i'd have to look and see what else was different
18:00 < ekryski> aww. I see. I set my CFLAGS to -march=armv7
18:00 < ekryski> I think that was still the issue. When I change it manually in the gyp file it's all good
18:01 < mscdex> i'll look later and see what settings i ended up using
18:01 < ekryski> I'm not gonna mess around with it too much more. I know that this way works and it's not that much of a pain to change the files
18:01 < ekryski> ok cool
18:02 < nathan7> pringlescan: I think ##javascript would have an opinion on this
18:03 < lsegal> is there any opinion on using requirejs instead of node's exports to define/load modules? is this seen as an acceptable practice, or is it heresy?
18:05 < gkatsev> pringlescan: they are both perfectly valid ways of doing it. One is the Object Oriented Way, the other the Functional Way.
18:15 < lsegal> nobody wants to comment? :)
18:17 < astropirate> lsegal, there are no opinions we are hive mind
18:17 < lsegal> so what is the hive response
18:17 < mscdex> lsegal: if in doubt, do it the node way! :-D
18:18 < astropirate> looks up requirejs
18:19 < astropirate> lsegal, why use that on node?
18:19 < mscdex> lsegal: are you talking about the browser or strictly node?
18:19 < bradleymeck> substack: is there some unknown to me way to have --x.\\.y true become {x:{'.y':true}} with optimist?
18:19 < lsegal> i guess my question is: how prevalent is requirejs in node apps?
18:19 < lsegal> mscdex: strictly node
18:19 < astropirate> besides, its syntax is compatible (mostly) with node.js
18:19 < astropirate> lsegal, i haven't seen any
18:19 < bradleymeck> Isegal its pretty much just cloud9 to my knowledge
18:19 < mscdex> lsegal: imho in that case just do it the node way
18:20 < astropirate> i did have to work with some share code that was for the browser but i used it on the server. the syntax is very compatible
18:20 < bradleymeck> and thats amd not exactly the same but close enough
18:20 < lsegal> astropirate: well it's not "drop in" compatible
18:20 < astropirate> lsegal, mostly is.. there was one detail... that i cant remember.... but over all it is
18:21 < astropirate> not requier js.. just the code that uses require js
18:22 < lsegal> oh i know. i'm more concerned about what the conventions are around node apps and using requirejs-- ie., if people use it at all, or they just do it the node way. in other words: if you saw requirejs used in a node codebase, would you freak out and then try to rip it out?
18:23 < exit2> I'm a Python programmer who has found himself using more and more JS than I anticipated when creating web apps.  So my interest has been peaking with JS and from what I understand I can use Node.js as my back end and I can basically create a full app (front and back) in JS
18:23 < lsegal> trying to build up internal conventions on a new node project
18:26 < bradleymeck> exit2 yep
18:29  * milani is away: Away
18:31 < exit2> Which databases are supported by Node?
18:31 <@Nexxy> all of them
18:31 <@Nexxy> every. fucking. one.
18:31 < exit2> Nexxy: sweeeeeeet
18:31 <@Nexxy> inorite!?
18:31 <@Nexxy> \o/
18:31 < jmar777>  whoot
18:31 < exit2> Haha
18:32 < vicapow> hello all! I just moved to Berkeley. anyone know of any good cowork spaces near by? or cool coffee shops?
18:32 < exit2> JS is pulling me in, although I have only used it when needed too, being able to create a full webapp with one language is appealing
18:32 < billy> I could recommend a few in SF, don't know berkeley though
18:32 < nathan7> exit2: It's fuckin' sexy.
18:32 < billy> cole's coffee in Rockridge is nice
18:33 < exit2> nathan7: I'm coming from Python, so we will see - that's pretty sexy. :-X
18:33 < nathan7> exit2: I come from Python too, dear
18:33 < exit2> nathan7: still using Python?
18:33 < nathan7> All the magic things I can do with functions make me happy
18:33 < nathan7> I've been trying to write as much JS as possible
18:34 <@Nexxy> always try to write as *little* as possible
18:34 < bradleymeck> < C# & GAE Python (lets be honest its not the same)
18:34 < nathan7> Nexxy: ?
18:34 < nathan7> I used to write Python for small tasks
18:34 < nathan7> I'm good at Python.
18:34 <@Nexxy> Python is good at you.
18:34 < vicapow> billy: thanks for the suggestion
18:34 < nathan7> I'm still discovering a lot of JavaScript.
18:35 < nathan7> And I don't think I'll stop discovering anytime soon
18:35 < nathan7> Because it's very a flexible language
18:36 < bradleymeck> Nexxy: are you going to summercamp?
18:36 < bingomanatee> how do you add a directory to the view parietal search path in express /ejs?
18:36 <@Nexxy> bradleymeck, no sir ._.
18:36 < exit2> nathan7: tbh, the "example.js" webserver is very similar to Flask or Django
18:36 <@Nexxy> I am going to JSConfEU though
18:36 < nathan7> exit2: Yeah
18:36 < nathan7> exit2: well, Express is very close to Flask to me
18:36 <@Nexxy> does flask have its own 24/7 support line?
18:37 < nathan7> exit2: but the way I can do middleware in JS... powerful shit
18:37 < exit2> nathan7: I would imagine that deploying would be easier if it's all JS versus having a Django (or whatever Python backend)
18:37 < nathan7> Nexxy: I don't give a flying fuck if it does
18:37 <@Nexxy> nathan7, the point is; express does!
18:37 < exit2> Nexxy: that's weird haha
18:37 <@Nexxy> run by its very own author, tjholowaychuk
18:37 <@Nexxy> you can call him any time with questions
18:38 < exit2> Nexxy: very strange haha, I imagine that would get annoying and he would say things like 'Go read the docs..'
18:38 < nathan7> I don't really care about Express having it either
18:38 < vicapow> co read the code
18:38 < nathan7> I don't like interacting with people as a basic thing - phone calls are one of the most awful things in the world
18:38 < exit2> So Express is similar to Django or Flask? Web app framework
18:38 < nathan7> exit2: It's very close to Flask
18:38 < nathan7> exit2: It's a microframework. A fucking powerful one.
18:39 <@Nexxy> nathan7, but people are awesome!
18:39 < nathan7> Nexxy: Indeed!
18:39 < vicapow> Nexxy: +!
18:39 < vicapow> +1
18:39 < nathan7> Like >10% of people are awesome
18:39 < vicapow> agreed
18:39 < nathan7> And I actively seek those
18:39 < exit2> nathan7: wow, well my current project at work is all Django based and I don't foresee myself rewriting it at this point.  But I will be looking into node.js for future stuff
18:39 <@Nexxy> you don't necessarily have to rewrite an app just to use node
18:40 <@Nexxy> you could always break out functionality that node is good with
18:40 < nathan7> I've done that quite a few times
18:40 < nathan7> as a learning exercise, though
18:40 < maxogden> js is good at cat face recognition for instance
18:40 <@Nexxy> indubitably
18:41 < nathan7> but that kind of stuff is of course a different matter when it's your job
18:43 <@Nexxy> it's everyone's job to learn!
18:44 < exit2> Express's website is sexy, I know that much is true :)
18:44 < exit2> nathan7, Nexxy: should I learn more about Node.js before jumping into Express?
18:45 <@Nexxy> exit2, honestly express makes it pretty easy to get up and running with node
18:45 <@Nexxy> it does have its own conventions
18:45 <@Nexxy> but most of it is just improving on node core functionality
18:45 < nathan7> I've been playing with the middleware stuff
18:45 <@Nexxy> yeah
18:46 <@Nexxy> connect middleware is great
18:46 < nathan7> my code for this one project is all sexy now
18:46 < nathan7> I just have to make the web API less ugly and it'll be awesome
18:47 < hortinstein> I am using node-redis in my node.js server. I keep getting "Redis connection gone from end event" error. I host my redis database on redis to go, and am guessing it is due to losing the connection, anyone know how to gracefully catch this and reconnect
18:48 < nathan7> interesting
18:48 < nathan7> I haven't had this issue yet
18:51 < sente> is it easy to have express use both jade and mu-mustache templating? 
18:51 < sente> jade for certain routes and mustache for others? 
18:51 < nathan7> sente: Yes, you can do that.
18:51 < nathan7> sente: I think you have to pass it to render
18:52 < s5fs> Nexxy: hi!
18:53 < sente> hrm, currently we have http://c.sente.cc/qSPH/app_rn.js as our configuration
18:53 <@Nexxy> s5fs, ahoy hoy
18:54 < sente> pass 'what' to render?
18:54 < sente> sorry i'm new to node.js
18:58 < nathan7> sente: You can set it per template extension
18:58 < nathan7> app.engine('html', require('ejs').renderFile);
18:58 < nathan7> app.engine('jade', require('jade').__express);
18:58 < nathan7> .jade is rendered by Jade, .html is rendered by EJS
18:59 < nathan7> sente: you'll want to use consolidate.js
18:59 < pringlescan> Is anyone here a math ninja?
19:00 < sente> yeah
19:00 < sente> just found consolidate :)
19:00 < sente> super happy
19:01 < sente> thank you
19:01 < nathan7> sente: app.engine('html', require('consolidate').mustache);
19:03 < mscdex> what is the javascript graphing library du jour?
19:04 < bradleymeck> TooTallNate: any idea why tab completion fails on remote repl https://gist.github.com/2209310?
19:04 < wltsmrz> Protovis is pretty nice, mscdex http://mbostock.github.com/protovis/ex/
19:04 < TooTallNate> bradleymeck: it should work
19:04 < TooTallNate> bradleymeck: what node version?
19:05 < bradleymeck> TooTallNate: 0.8.8
19:05 < pringlescan> How would you determine the population-weighted center point of multiple latitude and longitude coordinates?
19:05 < TooTallNate> bradleymeck: and define "not work"
19:05 < TooTallNate> "fails" rather :p
19:06 < bradleymeck> TooTallNate: socket.\t just throws blank lines back
19:06 < TooTallNate> bradleymeck: oh actually, i think I know
19:07 < TooTallNate> bradleymeck: inside the repl, set "socket.columns = 80"
19:07 < bradleymeck> … thats odd
19:08 < TooTallNate> bradleymeck: the problem is that this little repl-client.js script has no way to relay its window size to the server
19:08 < TooTallNate> which is why telnet(1) is a better "client" for this
19:08 < TooTallNate> i have a mostly-working implementation of that
19:08 < TooTallNate> just haven't published it yet
19:09 < bradleymeck> TooTallNate: had worse issues with telnet on that example
19:09 < TooTallNate> bradleymeck: no, you need a telnet server implementation on top of it
19:09 < bradleymeck> ah
19:09 < TooTallNate> i'll OS it if you feel like playing around
19:09 < bradleymeck> nah
19:09 < TooTallNate> there's a few problems
19:10 < taky> anyone know of any good modules for data aggregation, maybe specifically for time hierarchies? 
19:12 < TooTallNate> bradleymeck: i did it anyway :p https://github.com/TooTallNate/node-telnet
19:12 < bradleymeck> taky https://github.com/etsy/statsd ?
19:13 < TooTallNate> bradleymeck: i think this is what you want: https://github.com/TooTallNate/node-telnet/blob/master/repl.js
19:16 < taky> bradleymeck: i'll check it out
19:17 < exit2> do I need to install redis to the project diretory?
19:19 < cleos_frey> hey, for the callback of net.connect().on('data', function() {}) is there a way to know how much data has yet to come through?
19:19 < cleos_frey> for example, right now I'm getting my responses halved, when I'd like them to be whole...
19:19 < mscdex> hmmm flot looks nice and easy
19:19 < mscdex> cleos_frey: no, that's an application-level thing
19:20 < cleos_frey> well, how could I tell when there's nothing else coming through?
19:20 < mscdex> cleos_frey: the 'end' event
19:20 < cleos_frey> ah!
19:20 < mscdex> oh wait
19:20 < cleos_frey> oh?
19:21 < sente> nathan7: http://c.sente.cc/LqVK/error
19:21 < mscdex> nevermind, that won't work for tcp unless the other side disconnects afterwards
19:21 < sente> app has no 'engine'
19:22 < sente> oh, might have made a stupid error
19:22 < mscdex> cleos_frey: you're SOL if the application-level protocol does not support "packet" lengths
19:22 < chrisdickinson> is there any support in node.js for htons?
19:23 < cleos_frey> I'm using TCP to communicate with a Growl server
19:23 < bradleymeck> Growl should have some way to tell you that the message is done, it should send something like message length or w/e, packets are not guaranteed to send as whole chunks
19:23 < cjblomqvist> Consider a writable stream #1, how does any other stream #2 writing to #1 know when to pause?
19:24 < bradleymeck> #1 tells it to pause after hooking up during the "pipe" event
19:24 < sente> var app = module.exports = express.createServer();
19:24 < cleos_frey> okay, Growl does put a CRLF at the end of response
19:24 < sente> that's what we have, opposed to just express()
19:24 < cleos_frey> okay, I think I know what to do now, thanks guys
19:25 < cjblomqvist> In case there ain't no piping? (and thus no pipe event) Or maybe there always is, or at least should be, in these cases
19:25 < bradleymeck> cjblomqvist: should be if you want to do pause and resume
19:25 < cjblomqvist> k, thx
19:28 < dominictarr> hey mmalecki you there?
19:29 < drudge_> done
19:29 < thomasfr> hi everyone
19:30 < imsky> hey 
19:30 < mmalecki> dominictarr: yeah
19:30 < thomasfr> i just saw on a slide the "who is who" on node adopters. Besides the well known Microsoft, LinkedIn, eBay, Walmart were also SKYPE
19:30 < dominictarr> checkout my latest work on peers http://github.com/dominictarr/peers
19:30 < thomasfr> does anyone know what Skype is doing with node.js?
19:31 < nathan7> thomasfr: didn't MS buy Skype?
19:31 < nathan7> or did that whole deal get shelved
19:32 <@Nexxy> thomasfr, hopefully making it suck less
19:32 < mmalecki> omni5cience: sweet
19:32 < mmalecki> er
19:32 < mmalecki> dominictarr: sweet!
19:33 < thomasfr> @nathan7 yes indeed. they bought it
19:33 < thomasfr> these are the slides i am talking about: http://de.slideshare.net/gblock/node-js-enterprise-class
19:33 < thomasfr> Slide 5
19:33 < dominictarr> on tests running on my laptop it replicates an update to a node though 80 nodes in 1 - 3 rounds.
19:33 < mmalecki> thomasfr: gblock is from MS
19:34 < dominictarr> plus it has a pluggable api.
19:34 < thomasfr> There is also Yammer on it. Does anyone know what exactly Yammer is doing with node.js? I once heard the whole backend is node? Right?
19:34 < wltsmrz> Thought it was Scala
19:34 < dominictarr> you can open more mux-demux channels on each connection and gossip other stuff too if you want.
19:34 < nathan7> I gblock?
19:34 < nathan7> *gblock
19:35 < dominictarr> thomasfr, no I thought it was RoR, with some node.
19:35 < milani> dominictarr, hey
19:35 < thomasfr> @mmalecki ah okay. So you mean gblock should know what skype is doing with it?
19:35 < milani> I was going to implement a module for p2p connection today!
19:35 < dominictarr> milani, hi
19:35 < milani> does it have NAT traversal?
19:35 < thomasfr> @dominictarr ah okay.
19:36 < dominictarr> I'm focusing on gossip protocols.
19:36 < dominictarr> what is NAT traversal?
19:36 < thomasfr> @dominictarr do you know? Did they move from RoR to node or the other way back to RoR? 
19:36 < milani> dominictarr, if users are behind NAT
19:36 < milani> it is hard to establish p2p connection
19:37 < dominictarr> no one goes node -> RoR, ever.
19:37 < dominictarr> milani, no it doesn't do anything like that.
19:38 < nathan7> dominictarr: That's what NAT traversal is
19:38 < nathan7> oh
19:38 < dominictarr> NAT traversal should be a separate module.
19:38 < milani> no NAT traversal means you should use some protocols to find a way to reach the peer
19:39 < meme> hi, i'm trying to have a simple express application. i cannot make an express app with jshtml, even that input:  $ express --sessions --css stylus --jshtml app . i have express v.2.5.11
19:39 < milani> some protocols like TURN and STUN
19:39 < jeremycw> Didn't WordSquared go node to Rails
19:39 < meme> it always default tojade
19:39 < milani> and the complete one for media streaming is ICE
19:39 < milani> which is implemented by webRTC
19:39 < milani> and google voice etc.
19:40 < milani> it's just huge to implement one but it's not too much hard.
19:40 < dominictarr> milani, I'm focusing on behind-the-firewall p2p initially, because that way I can defer worrying about security.
19:41 < sente> how do I use consolidate with express 2.5?
19:41 < dominictarr> (although, I think we're figuring that out: https://github.com/dominictarr/scuttlebutt/issues/6 )
19:42 < milani> dominictarr, ICE has security considerations too
19:42 < milani> anyway you can't do anything related to firewalls you can just use open ports.
19:42 < dominictarr> the approach I'm considering right now is to sign the messages, 
19:43 < dominictarr> rather than authenticate the connections,
19:43 < milani> aha.
19:43 < milani> you should make it an option. because signing messages take time
19:43 < dominictarr> then the messages can get to peers via any route and it's still secure.
19:43 < milani> and it's not good for media streaming
19:44 < dominictarr> milani, what I'm working on at the moment is just one piece of the puzzel.
19:44 < milani> yeah it is.
19:44 < dominictarr> it's basically gonna be good for replicating the list of current peers
19:44 < dominictarr> you can build off that with whatever you want.
19:44 < milani> do u want to create a torrent like protocol?:D
19:45 < dominictarr> this is what I have currently
19:45 < dominictarr> https://github.com/dominictarr/scuttlebutt
19:45 < nathan7> milani: You mean P2P in general?
19:45 < milani> yeah I'm reading 
19:45 < milani> nathan7, yeah.
19:46 < milani> I know node is used on servers now
19:46 < nathan7> dominictarr: I love the name
19:46 < milani> but potentially we can do more 
19:46 < milani> use it on games means we usually need p2p connections
19:46 < dominictarr> it's not my name. I got that from a paper on it.
19:46 < nvoyager> What is the .bin folder in node.js do? Mine seems have been created by something and points to the wrong location for express
19:47 < dominictarr> nvoyager, it links to commands from your projects deps, so they can be used during `npm test` etc.
19:48 < milani> nathan7, you have any thought?
19:49  * milani is back (gone 01:20:19)
19:50 < dominictarr> milani, what sort of p2p stuff do you want to build?
19:50 < milani> dominictarr, general purpose that can send packets to each peer we want. specially for media/file streaming
19:51 < dominictarr> milani, there is no such thing as "general purpose".
19:52 < dominictarr> but the stuff for streaming arbitary files should be fairly easy after you know where all the nodes are
19:52 < dominictarr> which is more what I am focusing on.
19:52 < milani> dominictarr, by general purpose I mean the part focusing on finding nodes 
19:53 < milani> but you should implement those protocols if you want to locate all nodes 
19:53 < milani> even with that protocols you can't support 20% users behind NAT
19:53 < milani> and proxy/VPNs
19:54 < dominictarr> right, you could use repeater nodes though
19:54 < milani> even that won't help.
19:55 < dominictarr> but if the end user can open a connection, it just can't bind.
19:55 < dominictarr> so it can bind to a middle node, a server, and then tunnel the desired connection through it.
19:55 < dominictarr> that is my impression of how ICE works, so far
19:56 < dominictarr> (it's not ideal, of course)
19:56 < dominictarr> milani, is that right?
19:57 < milani> yeah kind of.
19:57 < milani> but I say even implementing that you can not guarantee the successful connection
19:58 < milani> so you should implement it to at least get more chance.
19:59 < dominictarr> implement ICE?
20:00 < dominictarr> still trying to figure out exactly what ICE is
20:01 < addisonj> hrm... playing around with monitoring solutions for node, anyone have anything they really like?
20:02 < baer> addisonj: i started using nodetime last week. i like it and it has potential
20:02 < milani> dominictarr, http://tools.ietf.org/html/rfc5245
20:02 < milani> I'm reading this to get the full idea.
20:03 < milani> dominictarr, and this : http://tools.ietf.org/html/rfc5245
20:03 -!- mode/#Node.js [+o ryah] by ChanServ
20:05 < addisonj> baer: interesting stuff... wonder how much it will be once it goes out of beta...
20:09 < dominictarr> so milani Raynos was just telling me that webrtc has ICE
20:09 < milani> yeah it has.
20:09 < milani> dominictarr, https://developers.google.com/talk/libjingle/
20:09 < Raynos> oh hi
20:09 < milani> using this library.
20:09 < milani> hi
20:09 < etcetera> heh the morning where I decide to purchase linode...it goes down.
20:10 < milani> linode is down?
20:10 < milani> kidding?
20:10 < Owner> not for me
20:10 < milani> it's up man.
20:10 < milani> I have three servers there.
20:11 < etcetera> NJ dc is down.
20:11 < Owner> single point of failure?
20:11 < Raynos> milani: webrtc should allow you to open p2p connections
20:11 < milani> yeah.
20:11 < milani> but we want it for node:)
20:11 < Raynos> write a webrtc client in node
20:12 < Raynos> unless you dont carea bout being able to talk to browser nodes
20:12 < milani> hmm it's more about nodejs <-> nodejs
20:12 < etcetera> Owner: you joke...
20:12 < etcetera> but building fault tolerance in is....hard.
20:13 < Owner> building fault tolerance
20:13 < Owner> exactly
20:13 < Owner> two buildings for every dc :p
20:14 < Owner> witha load balancer building in front
20:14 < etcetera> Owner: I don't know how to build out fault tolerant distribute node infrastructure, do you?
20:14 < etcetera> not exactly covered anywhere in the docs.
20:14 < Raynos> milani: personally I would assume that the webrtc have done all the hard thinking
20:14 < Raynos> and re-implement that.
20:15 < Raynos> The webrtc hired the guys behind the peer to peer skype network
20:15 < Raynos> milani: Alternatively think hard and build an alternative that's better and more tailored to node
20:15 < lwicks> Hi all, I'm new to node, but trying to create an app that will listen for udp packets and for a test display the data. I have cribbed from the online documentation and created two files: https://gist.github.com/3558245 And it works fine. I see the message when I send. However, messages from the "real" app I want to listen to does not appear. I have confirmed it is reaching my machine with wireshark. Anyone able to point me in the righ
20:16 < milani> Raynos, I grabbed libjingle source
20:16 < milani> and played with it.
20:16 < milani> we can have bindings to it but you know, we loose nodejs awesomeness
20:16 < Raynos> i dont know enough of the internal details. I build a discovery network that can connect to webrtc nodes together though ( https://github.com/Raynos/discovery-network )
20:16 < Raynos> milani: there is no reason why you can't implement the datachannel in webrtc as a WS like interface and then build a stream on top of it
20:16 < milani> you don't wanna know, trust me:D it's huge
20:17 < Raynos> that's what I'll be doing with the webrtc data channels
20:19 < milani> Raynos, so u suggest we shouldn't go that way and reimplement it ha?
20:19 < dominictarr> milani, if you are doing a relay server style, that is really easy.
20:19 < aandy_> lwicks: What do you mean exactly? When I run your snippits, I receive the 4001 message as expected
20:19 < Raynos> milani: Yeah relay server style is trivial. I can build that in an hour
20:20 < Raynos> milani: I would love a webrtc node version
20:20 < Raynos> Basically the PeerConnection and datachannel
20:20 < jaseemabid> Any place to learn about c++ addons properly other than sample codes and http://nodejs.org/api/addons.html? 
20:20 < lwicks> aandy: yes that works fine but I actually want to receive udp data from a real app and I don't see it in the server app. But the packets are reaching me as I can see them on wireshark.
20:20 < dominictarr> maybe the most profitable route is to use direct connections where possible, and fallback to relays.
20:21 < milani> dominictarr, that won't be a real p2p connection right?
20:21 < dominictarr> depends on how you are looking at it.
20:21 < aandy_> lwicks: Are you sending to the right port? You only listen on 4001.
20:21 < milani> actually it should be a three layer one. direct, with hole punching techniques, at last relays.
20:22 < fatgeekuk> evening all.
20:22 < dominictarr> you could make the relay servers GPL and let anyone deploy them.
20:22 < dominictarr> the direct connections, where possible WOULD be, you'd just have a mostly p2p app.
20:23 < fatgeekuk> I am trying to use a bit of a pattern shown in the peep code nodejs screencast. where you assign a function to module.exports and execute it in the requiring file by require('filename')(app);
20:23 < wltsmrz> What goes wrong?
20:24 < lwicks> aandy: That is the port I "think" the app is supposed to be sending to. (at least what I configured it to).
20:24 < Raynos> milani: depends on your definition of real p2p connections
20:24 < lwicks> aandy: Of course... now I change a couple of setting it seems it's 4004!!
20:24 < Raynos> milani: real p2p connections fall back to relay connections when behind aggressive proxies / firewalls / NAT shit
20:25 < fatgeekuk> looking at the contents of module.exports it just does not have a key for the things I think I put in there.
20:25 < Raynos> dominictarr: discovery-network is a relay server 
20:25 < fatgeekuk> lemme clean up the example and I will post it on a clipping site.
20:25 < dominictarr> Raynos, yup
20:25 < lwicks> aandy: Thanks! External perspective is a wonderful thing. Silly to assume the cofig setting does what it says it does.
20:26 < milani> Raynos, dominictarr we can solve some of those shits :D but not always so we switch to relay connections then.
20:27 < slick> has anyone built a p2p torrent server/client in node.js yet?
20:27 < aandy_> lwicks: No problem, glad you resolved it
20:27 < milani> it makes a huge difference in near networks.
20:27 < slick> if not, i might take that on this holiday weekend... might be fun to play with
20:27 < milani> slick, u want to implement torrent server in the weekend?
20:28 < dominictarr> okay, so basicially it looks like ICE tries 3 things
20:28 < dominictarr> first two nodes try to communicate directly
20:28 < slick> depends on how much free time I actually get, but yeah... might be fun to play with tcp on node
20:28 < dominictarr> then through a translated address
20:29 < milani> yeah and after that a relay server
20:29 < fatgeekuk> http://pastebin.com/Q3UnrVJR  http://pastebin.com/AxuLrSLd
20:29 < milani> actually it uses two different protocols for translated addresses.
20:29 < dominictarr> yeah, kinda like socket.io / sockjs except for udp.
20:30 < dominictarr> I guess (depending on the sort of application) there is even a chance that they are on the same local network.
20:30 < slick> for udp, there is no accounting for lost packets, right? they're just blasted away and you hope you receive most of them?
20:30 < dominictarr> slick, correct
20:31 < dominictarr> use udp when latency is more important than reliabitily
20:31 < milani> dominictarr, then it connects them directly because associative local addresses would be the same
20:31 < dominictarr> although, you can build more reliable protocols on top of it.
20:32 < dominictarr> like tcp is reliable, but built over unreliable messages.
20:33 < dominictarr> milani, yes, but the only way to be sure you are on the same network if you can communicate directly like that.
20:33 < bradleymeck> dominictarr: building tcp on udp makes me a sad panda
20:33 < dominictarr> bradleymeck, indeed. 
20:33 < dominictarr> but there are many types of "reliable"
20:34 < dominictarr> it doesn't need to be just like tcp
20:34 < milani> dominictarr, yeah it creates a list of all candidates, and local addresses get higher ranking in the list
20:34 < milani> so they are used to communicate, if ICE can find a faster route, it switches to that but what is faster than a direct in network communication
20:34 < milani> ;)
20:35 < dominictarr> this stuff is quite interesting. 
20:35 < dominictarr> I don't understand how the translated way works yet though.
20:35 < bradleymeck> anyone know how to make netcat not buffer data?
20:36 < slick> i bet youtube uses a bit of packet ordering to adjust the time position over a unreliable udp connection
20:36 < dominictarr> bradleymeck, just implement your one netcat in node
20:36 < milani> dominictarr, me neither I just have a foggy idea.
20:36 < dominictarr> it would probably be easier than mining man netcat
20:36 < bradleymeck> dominictarr: got a machine without node that is trying to access repl over net
20:36 < dominictarr> bradleymeck, bummer
20:37 < dominictarr> bradleymeck, just use telnet
20:38 < dominictarr> slick, I think youtube is using tcp. because you never see weird artifacts
20:38 < dominictarr> & sometimes it just pauses.
20:38 < milani> the flash version uses RTP I guess.
20:38 < slick> dominictarr: probably
20:38 < dominictarr> if they used udp sometimes the video would fuck up like skype.
20:39 < milani> which uses this ICE stuff.
20:39 < slick> youtube: quality > speed
20:39 < milani> RTC implements an inner buffer.
20:39 < dominictarr> udp is best for when the latest message communicates all the important state information
20:40 < milani> * RTP I mean.
20:40 < dominictarr> yeah, it's better to wait and see the video. it's not important that it isn't realtime.
20:40 < aandy_> dominictarr: You can't be sure the latest is the latest though (if that's important)
20:41 < dominictarr> aandy_, if you need to you just put a counter in the message.
20:41 < dominictarr> you have to build the reliablity into your application.
20:41 < aandy_> Yes. I merely meant to point out that the order is not fixed. And then you're left with either glitches or having to buffer anyway
20:42 < dominictarr> tcp makes you lazy, because it puts the reliability in the transport.
20:42 < dominictarr> although, there is one reliability weakness to tcp.
20:42 < aandy_> Usually, if you use video, the container will take care of decode and presentation timestamps for you. I only mean in terms of "fluid playback"
20:42 < slick> holy god
20:43 < dominictarr> when a connection breaks, you never know exactly what the other side received
20:43 < slick> does connect use formidable out of the box? or something formidable-esque with bodyParser() middleware?
20:43 < dominictarr> so you either need acks in your application, or something like that, or to start the stream over again.
20:43 < slick> if it does I'm going to just check out of my office today and call it an early weekend start
20:43 < slick> http://tjholowaychuk.com/post/12943975936/connect-1-8-0-multipart-support
20:44 < slick> i've been working on making formidable work in express for the past two hours with absolutely no success.
20:44 < slick> this would explain why
20:44 < dominictarr> if there are no dropped packets, then tcp can be as fast as udp
20:44 < aandy_> dominictarr: If it matters that you receive it all. Which is usually the criteria I use when choosing between TCP and UDP. Surely both can be used, it's just a general rule of thumb
20:44 < wltsmrz> Yep, slick
20:44 < wltsmrz> https://github.com/senchalabs/connect/blob/master/lib/middleware/multipart.js
20:44 < dominictarr> aandy_, true
20:44 < tjholowaychuk> slick ?
20:44 < tjholowaychuk> you can use
20:45 < tjholowaychuk> .json() instead of .bodyParser()
20:45 < tjholowaychuk> if you want to do your own formidable stuff
20:45 < dominictarr> another problem with UDP is that there is no flow control.
20:45 < dominictarr> so the application has to take care of congestion.
20:46 < dominictarr> (although, there is also no flow control for the initial tcp packets either, so if loads of connections are trying to open that can be a problem)
20:46 < milani> dominictarr, https://github.com/enobufs/stun
20:47 < substack> aandy_: you can use bodyParser only for the parts that you need it and not globally
20:48 < substack> app.post('/foo', express.bodyParser, fn)
20:48 < substack> then it should be easier to use formidable in the other parts
20:48 < aandy_> I assume you mean slick 
20:48 < dominictarr> milani, sweet!
20:48 < slick> :D
20:48 < milani> dominictarr, I couldn't get it working
20:48 < slick> i'm badmouthing tj in the #express channel right now and laughing at myself
20:48 < slick> you just made my weekend
20:48 < aandy_> I've only used formidable as is, not in express.
20:48 < milani> dominictarr, I get address not available error
20:48 < dominictarr> milani, then how come there isn't an issue that you posted
20:49 < milani> dominictarr, because it is for a year ago
20:49 < milani> node v0.4
20:49 < dominictarr> oh, right.
20:49 < dominictarr> it's probably not that hard to migrate to 0.4
20:50 < slick> thanks substack
20:50 < dominictarr> s/0.4/0.8
20:50 < milani> no I think the library has no problem I just should set IPs etc.
20:50 < milani> but still getting address not available
20:51 < milani> dominictarr, woops. worked:)
20:51 < dominictarr> haha, awesome!
20:51 < aandy_> slick: Thanks for sharing the 1.8 link. I'm working on a small upload part of a project where I deliberately had to not use restify (express'ish)
20:52 < milani> one less protocol to implement :D
20:52 < milani> we need TURN and ICE.
20:52 < milani> assuming this module has no bug.
20:54 < Owner> Features: Very high test coverage   - https://secure.travis-ci.org/felixge/node-formidable.png?branch=master  lollllll
20:55 < milani> https://github.com/indutny/vock/blob/master/lib/vock/peer.js
20:55 < milani> https://github.com/indutny/vock 
20:55 < milani> VoIP for node.
20:55 < Owner> OLD
20:55 < milani> ok now the party begins. 
20:55 < Owner> #vock
20:55 < milani> it has the same problem
20:56 < milani> with NATs:D
20:56 < Owner> OLD
20:56 < Owner> https://github.com/jouz/node-upd-hole-punching
20:56 < fatgeekuk> now, thats just incredibly annoying.
20:56 < Owner> just kidding i dont think that works but i just looked it up
20:56 < Owner> an hour ago
20:56 < fatgeekuk> you can't examine the contents of exports.
20:57 < milani> Owner, thx it helps. 
20:57 < fatgeekuk> you can't require something then do console.log(JSON.stringify(something));
20:57 < astropirate> fatgeekuk, why not...?
20:57 < Owner> milani~# yeah need to solve udp punching
20:57 < fatgeekuk> cos it just reports {}
20:57 < astropirate> :S
20:57 < milani> Owner, u too?
20:57 < milani> :D
20:58 < fatgeekuk> I just went to http://nodejs.org/api/modules.html#modules_modules
20:58 < Owner> yeah to do anything interesting
20:58 < fatgeekuk> and typed in the example with foo.js and circle.js
20:58 < wltsmrz> Just console.log(); it, fatgeekuk 
20:58 < aandy_> fatgeekuk: wrong
20:58 < milani> ok tonight is udp party 
20:58 < fatgeekuk> now, in foo.js, after I do the var circle = require....
20:58 < milani> someone set the topic
20:58 < milani> :D
20:58 < wltsmrz> No need to stringify
20:58 < fatgeekuk> when I then do console.log it just returns {}
20:58 < wltsmrz> Without your stringification?
20:59 < Owner> whos great idea was it to use google for npm search page
20:59 < aandy_> Depends how (what) you've exported, but just do a console.log (or .dir) of require('http') for instance
20:59 < fatgeekuk> without stringification it give me the highly detailed and informative [object Object]
20:59 < wltsmrz> Then it has already been stringified somehow?
20:59 < wltsmrz> (Not JSON stringified)
21:00 < fatgeekuk> I use JSON.stringify to show the full tree of an object. but in this case, it does not work
21:00 < aandy_> fatgeekuk: And that's a problem?
21:00 < fatgeekuk> well it is because I am trying to work out why my test is not passing.
21:01 < Owner> ok this looks bad ass https://npmjs.org/package/fusker
21:01 < aandy_> Open a node shell, type > console.log(JSON.stringify(require('http')), does exactly what you said it couldn't do
21:01 < fatgeekuk> hmmm, now that works as I would expect it to. thanks for the hint.
21:02 < wltsmrz> Also do console.log(require('http').toString()); to see what happens when you stringify your object
21:02 < wltsmrz> I mean log a stringified object * 
21:02 < wltsmrz> I will hereafter use the expression "toStringed()"
21:02 < aandy_> fatgeekuk: I think what you're might getting is a specially specified export. Maybe you should check the module's export = , part
21:03 < fatgeekuk> yeah, its one of those things that until it clicks in my incredibly dense head, I will fail, but once it does, I will just KNOW it and it will seem to magically work from that point forwards.
21:06 < aandy_> The export part? Check out a few minor libraries for node to get a sense of how it works
21:08 < milani> dominictarr, I start implementing the module here https://github.com/milani/nodeRTC
21:08 < milani> dominictarr, if you'd like to contribute :) it's not small to do alone
21:08 < aandy_> Basically, the variable "export" is what's returned, so if you require a .js file where export = function(input) { console.log(input); }, then you'd be using it like require('something')('test') -> console.log('test'). Or the more common way: var log_something = require('something'); log_something('test');
21:08 < dominictarr> milani, cool. I am now watching your repo
21:09 < milani> Raynos, ^
21:09 < milani> ;)
21:09 < Raynos> oh hi
21:09 < Raynos> milani: so nodeRTC is a webRTC implementation for node? :D
21:09 < joaojeronimo> Anyone here using socket.io-client and able to spare some tips ? I can't get it to connect... and the same code works just fine on the browser
21:10 < aandy_> fatgeekuk: exports* of course
21:10 < milani> Raynos, yeah you don't see how beautiful it is? complete! try it:D
21:10 < Raynos> awesome
21:10 < Raynos> I'll patch discovery-network to support nodeRTC
21:11 < milani> that would be awesome. I'm struggling with webRTC source and these specs 
21:11 < milani> I think I will be able to start implementing something tomorrow.
21:12 < aandy_> fatgeekuk: Treat it like any object. exports.say = function(text) { return '"'+text+'"'; }, exports.bye = function() { return 'Thank you, come again!'; }, would make those two functions available to your "import". var test_lib = require(...); test_lib.say('something'); test_lib.quit()
21:12 < fatgeekuk> YAY
21:13 < aandy_> http://nodejs.org/api/modules.html#modules_the_module_object
21:13 < fatgeekuk> you can't call SHOULD on a function 
21:13 < fatgeekuk> YAY
21:13 < fatgeekuk> I have a passing test. I can move ON. :-) thanks all. for showing me the error of my ways. 
21:13 < lwicks> Hi again... another newbie one. In this code https://gist.github.com/3558245 I expected to only see console.log fire when the client app had a new score. Looks right to me, but I'm new to node.js any ideas why this keeps displaying the score over and over?
21:14 < aandy_> lwicks: Could you share an example message that you pass to it?
21:17 < lwicks> aandy: Adding console.log(msg); console.log(""+msg); produces: <Buffer 02 30 34 30 73 63 6f 72 65 62 6f 61 72 64 5f 74 65 73 74 65 76 65 6e 74 77 2d 34 38 20 53 31 30 30 30 30 34 35 31 20 20 20 30 30 30 30 30 30 30 30 30 30 ...>
21:17 < lwicks> 040scoreboard_testeventw-48 S10000451   000000000000000      1                              0000000   000000000000000      2                              00000000000000000000000000000000000000000000000000000016    
21:18 < lwicks> aandy: I'm guessing this is something around the format the data comes in as?
21:18 < dominictarr> lwicks, looks like a binary format
21:19 < lwicks> aandy: adding msg = ""+msg; solved the problem. But seems "wrong" to do it that way.
21:20 < meme> express --sessions --css stylus -jshtm <-------------------- any ideas why the command generates the app with JADE?!?!?
21:20 < wltsmrz> msg.toString()
21:20 < aandy_> lwicks: I was just about to suggest something similar. Your check should be on the string value
21:20 < aandy_> As wltsmrz just said, yes
21:20 < lwicks> cool. Thx
21:20 < tjholowaychuk> meme hmm a bug perhaps
21:20 < tjholowaychuk> --jshtml
21:20 < tjholowaychuk> not -jshtm
21:21 < meme> hey tj, yes, that was a typo
21:21 < meme> i use --jshtl and also -J, as described in the manuals
21:21 < meme> ugh --jshtml
21:22 < meme> i have the latest v of express 2. v.2.5.11
21:22 < tjholowaychuk> i dont know if we had that for 2.x
21:22 < tjholowaychuk> use --help
21:23 < lwicks> aandy & wltsmrz: perfect! Thanks!
21:23 < joaojeronimo> Is socket.io the only library that has events on top of websockets ? Is sockjs only useful for the fallbacks ? 
21:23 < meme> tj, you are right, there's no support for jshtml 
21:23 < wltsmrz> Not at all, joaojeronimo 
21:24 < joaojeronimo> wltsmrz, so which are the alternatives for events over websockets ? I don't even care about the fallbacks...
21:24 < wltsmrz> 'ws' is probably the simplest and fastest but it lacks automatic JSONification even, you would have to JSON string / parse manually
21:24 < meme> tj, does that mean i cannot manually add it, right?
21:25 < tjholowaychuk> you can add it manually still
21:25 < tjholowaychuk> those are just helpers to get you started
21:25 < meme> k, i'm doing it already
21:25 < wltsmrz> I wrote a module on top of ws to make life easier for that, joaojeronimo https://github.com/Weltschmerz/Transmit
21:25 < joaojeronimo> wltsmrz, and I would need to implement an eventemitter on top of it.. which I don't have a clue on how to do
21:26 < wltsmrz> No sir you don't need to do that
21:26 < livinded> does the nodeRTC implementation still do the hacky method of pulling stills off a canvas for video?
21:26 < joaojeronimo> wltsmrz, not with your module but with the ws module I would have to right ?
21:26 < wltsmrz> No
21:26 < wltsmrz> You would not
21:27 < wltsmrz> https://github.com/einaros/ws#usage
21:27 < wltsmrz> You would just listen for ws.on('message', function(){})
21:27 < meme> i installed jshtml with npm, than i inserted in my package.json, than i went to my app.js, and "required" and changed the line   app.set('view engine', 'jshtml'); .now i think is missing only the views index.jshtml files, am i right?
21:27 < wltsmrz> But remember that that message is not JSON parsed or anything
21:27 < joaojeronimo> wltsmrz, awesome... but I can't use it with the native websocket implementations in web browsers right ?
21:27 < milani> dominictarr, this is you in "boat adventure" ?
21:27 < wltsmrz> You can actually, 'ws' module does not require any scripts for the browser
21:28 < milani> "Adventure Boat Building"
21:28 < dominictarr> yup
21:28 < dominictarr> milani, photos are here http://www.flickr.com/photos/dominictarr/sets/72157594180332221/with/383173354/
21:29 < milani> yeah I'm watching flickr page in the video
21:29 < milani> yeah that boat looks right really lol =))
21:29 < meme> tjholowaychuk, do you think i'm missing something?
21:29 < tjholowaychuk> meme not sure I haven't used jshtml myself
21:29 < joaojeronimo> wltsmrz, but I can't find any reference to an "emit" method in the readme... how do you emit stuff like in socket.io and your own library ?
21:30 < wltsmrz> .send()
21:30 < meme> ok
21:30 < wltsmrz> Optional second argument is an options object
21:30 < wltsmrz> To send binary, .send(<buffer>, {binary:true}), e.g.
21:30 < wltsmrz> It emulates the WebSocket API that you have in the browser
21:31 < joaojeronimo> wltsmrz, but that's only for sending messages... not quite emitting stuff... I'd have to send messages with a prefix and on the server have a switch block to filter the prefixes just so I can know which message goes where
21:31 < wltsmrz> (Oh, if you were asking about my library, you would use .send and .sendBinary)
21:33 < wltsmrz> Right, custom events would require JSON parsing / stringifying :)
21:33 < wltsmrz> That's why I did my small library on top of ws (chiefly)
21:33 < joaojeronimo> wltsmrz, what I'm saying is that you cannot quite "socket.emit('hello', 'world');" on the client and "socket.on('hello', function (w) { assert.equals(w, 'world') } );" on the server
21:33 < wltsmrz> Yes. Not with ws module. With ws you have only the 'message' event.
21:34 < meme> http://geekple.com/nodejs/jshtml , i found some good docs tj, it will be easy as 1,2,3
21:34 < wltsmrz> For custom events with automatic JSON handling you might want to try Transmit library
21:34 < joaojeronimo> wltsmrz, and with your library I can have special events ?
21:34 < wltsmrz> Yes, you can
21:34 < wltsmrz> Even callback behavior
21:34 < joaojeronimo> wltsmrz, cool, then that's where I'm headed :)
21:35 < joaojeronimo> wltsmrz, one more thing, with minor changes, your library would work with nodejs (in client mode) as well would it ?
21:36 < [Eddyf]> Hi
21:36 < wltsmrz> Yes, I adapted my module for client mode in the tests (which aren't so great you might notice :D)
21:36 < [Eddyf]> Where/which directory should i add my hello world.js file to ?
21:36 < wltsmrz> This is definitely one case where being able to code browser & server side in the same langauge was advantageous
21:36 < wltsmrz> This could be something to "point at" for that argument
21:37 < wltsmrz> The Emitter is custom (not using node's eventemitter class). So it was mostly copy/paste for the client script.
21:37 < wltsmrz> Any directory you desire, [Eddyf]
21:38 < [Eddyf]> wltsmrz i create a node directory
21:38 < [Eddyf]> and ran the hello world.js
21:38 < [Eddyf]> but doesn't seem to be working
21:38 < wltsmrz> Do you have node installed?
21:38 < wltsmrz> 'node --version'
21:39 < joaojeronimo> wltsmrz, awesome... I'm going to have to use your module for both browsers and nodejs, so seeing that you don't have a Transmit-client repository, I might create one if you will allow me, or you could do it yourself if you have the time...
21:40 < [Eddyf]> yes v0.8.8 - wltsmrz
21:40 < wltsmrz> I will keep that in mind, joaojeronimo. Now that you've reminded me I will probably spend more time with that module. :)
21:40 < wltsmrz> And I will do that within a few days if you haven't already. What's your github?
21:40 < [Eddyf]> I see what I am doing wrong
21:41 < [Eddyf]> it says something like this on console
21:41 < [Eddyf]> http://localhost:8080/socket.io/1/?t=1346449094845
21:41 < [Eddyf]> but I am running it from the server
21:41 < [Eddyf]> not localhost
21:41 < [Eddyf]> Where should i set this?
21:42 < joaojeronimo> wltsmrz, my github username is joaojeronimo. If you will do it then I won't, after all, it's your library and you deserver 100% the credit for it... if I were to start a repo people would think I developed the module...
21:42 < wltsmrz> Haha. I'm not sure about that. :) 
21:42 < wltsmrz> But alright, I'll follow you.
21:42 < joaojeronimo> wltsmrz, it's a great module, it's exactly what I was looking for (don't care about fall backs, just about events over web sockets) and I don't see much more alternatives.. or any other alternative..
21:42 < wltsmrz> I think Firefox has supported unprefixed websockets since 9.0?
21:43 < Raynos> milani: come hang in #stackvm
22:20 < geroninode> Good evening kind sirs and ladies.
22:23 < snez> Goodevening geroninode
22:24 < geroninode> I'm right now learning about flow and the async module. I'd like to run for loops inside an async.series, is there any example how I should restructure this? Example of what works, but where I have to define all the file names: http://pastebin.com/uu98sdD1
22:29 < CIA-115> libuv: Ben Noordhuis master * rff0a93a / (src/unix/async.c src/unix/internal.h): unix: fix clang -Wlanguage-extension-token warnings - http://git.io/G0PWyA
22:38 < pringlescan> what do you guys use to generate markdown documentation from your in-line comments and or further define argument types?
23:22 < mscdex> anyone know if github's markdown for pages is supposed to support html in markdown?
23:54 < vrlogrs> hi guys
23:54 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
23:56 < vrlogrs> for anyone interested, i have a site that i programmed in node.js -- a gaming site .. and now, anyone who wants to have their javascript game hosted, i can do it :)
23:56 < aandy_> mscdex: I don't know, but I would not expect it to, and I can't see why it should. It would defy the purpose of using markdown
23:56 < vrlogrs> http://www.funnode.com is the site if interested - let me know :)
23:59 < mscdex> aandy_: markdown itself _does_ support raw html, but it seems GFM does not, at least JavaScript tags anyway
--- Log closed Sat Sep 01 00:00:00 2012
