--- Log opened Mon Jul 30 00:00:47 2012
00:11 < KiNgMaR> someone should go through the bug tracker and close some (probably more than some) expired and long-fixed issues :P
00:14 < cletus> anyone know of some examples that show off proper app structure for expressjs?
00:19 <@Raynos> When handling a high level api that uses files from HTTP uploads
00:19 <@Raynos> what kind of file object do you want
00:23 < tomshreds> Is there anybody else having trouble with npm web registry?
00:28 < mscdex> KiNgMaR: someone was doing that just the other day
00:35 < jgornick> Hey guys, any recommendations on a testing framework that will allow me to test my RESTful API? The only one I know of right now is frisby.js.
00:41 < prettyrobots> jgornick: Just use https://github.com/mikeal/request and any unit test framework.
00:41 < mmalecki> jgornick: I like api-easy
00:42 < prettyrobots> vows. :(
00:43 < mmalecki> well, api-easy's API doesn't look much like vows
00:44 < prettyrobots> The `README.md` looks a lot like vows.
00:45 < prettyrobots> Oh.
00:45 < prettyrobots> I see. It.is().one().of().these(text, frameworks)
00:46 < catilac> haha
00:47 < prettyrobots> Yeah, the Vows example on the `README.md` is scary.
00:47 < prettyrobots> The alternative is better. I see the point.
00:48 < jgornick> Cool, I'll check it out.
00:48 < jgornick> Thanks prettyrobots and mmalecki 
00:48 < catilac> jgornick: +1 mikeal/request.
00:48 < prettyrobots> jgornick: Check out just using request and any junit test framework.
00:49 < prettyrobots> It will give you a feel of what it is like to program against your API, since most Noders will just hit you directly using mikeal/request.
00:52 < jgornick> prettyrobots: I will look at that too. I use buster.js for my framework.
00:52 < jgornick> Looks like it'll work just fine.
00:53 < tomshreds> Is there anybody else having trouble with npm web registry?
00:54 < prettyrobots> Yup.
00:54 < prettyrobots> It's been flakey today.
00:55 < prettyrobots> http://search.npmjs.org/#/_author/Alan%20Gutierrez
00:55 < prettyrobots> Not actually representative of my contribution to NPM.
00:55 < tomshreds> hehe NOTHING
00:55 < tomshreds> I just tweeted isaac about it
01:08 < mscdex> tomshreds: i think he restarted the registry several hours ago
01:20 < tomshreds> mscdex he may have restarted it, but it still doesn't work...
01:41 < KorvinSzanto> hi
01:41 < KorvinSzanto> I am writing pattern detection in images
01:41 < KorvinSzanto> works client side using canvas
01:41 < KorvinSzanto> what would be the best way to implement server side
01:42 < mscdex> you might try node-canvas
01:42 < mscdex> but i don't know if it's the same API
01:42 < KorvinSzanto> Theres really no reason to use canvas
01:42 < KorvinSzanto> I don't need a 1-1 copy over
01:43 < KorvinSzanto> I'm glad to rewrite, what are things that would be helpful for that
01:43 < KorvinSzanto> wouldn't using a canvas implementation be inneficient
01:43 < mscdex> erm, wouldn't you rather not have to rewrite much? :-)
01:43 < KorvinSzanto> It's super short
01:43 < KorvinSzanto> and It's a personal project, so all the fun is in writing it
01:44 < mscdex> KorvinSzanto: well, you still need something to give you a 2d pixel array of any particular image format
01:44 < mscdex> may as well use something that does that can keeps the same API
01:44 < mscdex> KorvinSzanto: fwiw: https://github.com/learnboost/node-canvas/
01:44 < KorvinSzanto> thank you
01:46 < RangerMauve> Hey, is there a tut for making an http server use https?
01:47 < mscdex> RangerMauve: just pull out your request handler callback and use it in both http and https servers: var reqHandler = function(req, res) {}; http.createServer(reqHandler).listen(80); https.createServer(reqHandler).listen(443);
01:47 < mscdex> is that what you mean?
01:47 < ryanrolds> RangerMauve: Check out http://silas.sewell.org/blog/2010/06/03/node-js-https-ssl-server-example/
01:48 < mscdex> that blog article is outdated
01:48 < mscdex> setSecure isn't around anymore :-)
01:48 < ryanrolds> Ugh, lame
01:49 < RangerMauve> mscdex, so I have to run an http AND an https server?
01:49 < mscdex> RangerMauve: what are you trying to do then?
01:49 < RangerMauve> I want an https only server
01:50 < mscdex> so then just start an https server: https.createServer(handler).listen(443);
01:50 < mscdex> ?
01:50 < RangerMauve> So when people neter my website name "example.com" would it automatically choose to use https?
01:51 < RangerMauve> But I get it otherwise.
01:51 < ryanrolds> You will need to also listen on http and redirect to https
01:51 < mscdex> well, if you do that then you still need an http server of some kind to redirect them
01:51 < RangerMauve> Mkay, thanks for the help guys!
01:51 < mscdex> so that's 2 servers :-)
01:51 < RangerMauve> Fair enough then.
01:52 < ryanrolds> You will need to listeners or put a web server like nginx or lighttpd in front and have it redirect.
01:52 < ryanrolds> *two
01:52 < RangerMauve> Sounds like a plan, then. Thanks again
01:57 < darrenlooby> I'm building a phone number database. I need to assess their value, by looking for patterns in them. repeated numbers. sequences... etc any tips?
01:58 <@deltab> like, how memorable they are, whether they spell words, that kind of thing?
01:59 < blazes816> or are you checking for validity?  like, it's not 555-5555
02:00 < darrenlooby> deltab, yea... how memorable they are is the important one
02:00 < darrenlooby> Words, not so much
02:00 < darrenlooby> validity isn't important - as I can control that
02:00 <@deltab> you could assign points to various features, then add them up to get a score
02:01 < darrenlooby> deltab, yea. That's what I'd like to do. My struggle, is capturing the features...
02:02 < darrenlooby> I've been trying to get some regex to work - and looping through them to pick things up. But, it's not going well.
02:05 <@deltab> >> '0122333'.match(/(\d)\1/g)
02:05 < purr> deltab: (object) ['22', '33']
02:05 <@deltab> >> '0122333'.match(/(\d)\1\1/g)
02:05 < purr> deltab: (object) ['333']
02:07 <@deltab> for some things you'll want a loop instead though
02:08 <@deltab> you could count the unique digits; look for repeats; look for rising and falling sequences (difference between each digit and the last +1 or -1)
02:09 <@deltab> a dictionary of particular patterns: you might want to weight '69' specially, for instance
02:10 < darrenlooby> Yea
02:11 <@deltab> (or 123, 999, 90210, 443, etc.)
02:12 <@Nexxy> OR 8675309
02:12 < darrenlooby> For some reason, deltab - your regex isn't working for me. .. var test = new RegExp('/(\d)\1\1/g')
02:12 <@Nexxy> no quotes?
02:12 <@deltab> darrenlooby: that's because you changed it
02:13 <@deltab> you have it matching slashes and g
02:13 < darrenlooby> I'm starting to get frustrated enough to do it entirely via a dictionary
02:13 <@deltab> >> /(\d)\1/g
02:13 < purr> deltab: (object) /(\d)\1/g
02:13 <@deltab> >> '/(\d)\1/g'
02:13 < purr> deltab: (string) '/(d)\u0001/g'
02:14 < darrenlooby> Cool, got it
02:15 <@deltab> >> new RegExp('/(\d)\1/g')
02:15 < purr> deltab: (object) //(d)/g/
02:15 < darrenlooby> >> '01162553360'.match(/(\d)\1\1/g)
02:15 < purr> darrenlooby: (object) null
02:15 < darrenlooby> >> '01162553360'.match(/(\d)\1/g)
02:15 < purr> darrenlooby: (object) ['11', '55', '33']
02:18 < darrenlooby> on /(\d)\1\1/g I'm just getting 11 returned. Groups don't see to be working.
02:18 < darrenlooby> Man, I suck at regex
02:20 <@deltab> on what input?
02:21 <@deltab> anyway, you don't have to use regexes, and you won't be able to for most things
02:22 < darrenlooby> I think I'm just going to do a big dictionary
02:22 < darrenlooby> And then loop through
02:23 <@deltab> so if you want, check for  s[i] == s[i+1] && s[i+1] == s[i+2]
02:23 <@deltab> yep, that can work
02:23 <@deltab> it'll just be a bigger dictionary :-)
02:24 < darrenlooby> Cheers for your help deltab, at least for every hour I put into the dictionary, it'll be a productive hour lol
02:42 <@deoxxa> hrrrrrm
02:42 <@deoxxa> can't publish to npm
02:42  * deoxxa taps isaacs
02:44 < vikstrous> Hey guys, I need help with building a native module. Is anyone here willing to look into my issue?
02:44 < vikstrous> The problem is, more specifically, probably related to linking
02:48 < vikstrous> I guess I'll just leave this here: I can build my module successfully, but when I try to run the javascript test file and require it I get an undefined symbol error from the .node file and it's a symbol which was defined in a library which is supposed to be statically linked. Since there were no errors while linking, I don't understand why the symbol is undefined.
02:54 < beachdog> vikstrous: can you post your binding.gyp as a gist or something
02:55 < vikstrous> @beachdog https://gist.github.com/3203792
02:56 < vikstrous> I'm requiring the file in the build/Release folder... maybe that's why
02:56 < vikstrous> Maybe I need to use the build/Release/obj.target file?
02:57 < beachdog> vikstrous: I posted an example of mine that worked with a 3rd party lib, not sure if this will help..
02:57 < vikstrous> I'm a bit confused why there are two .node files
02:58 < vikstrous> Hmm... include_dirs might be the problem
02:58 < beachdog> I used 'libraries' element, looks like you tried to include the library in ldflags, not sure if that matters
03:02 < vikstrous> it works!
03:03 < vikstrous> @beachdog I think it was because I was using the wrong .node file!
03:05 < beachdog> vikstrous: you mean in your require statement?
03:08 < vikstrous> @beachdog I had done ln -s ln -s build/Release/ node_modules but what I really needed was ln -s build/Release/obj.target/ node_modules
03:08 < vikstrous> By the way, is there a better way to "install" the module for testing?
03:10 < mscdex> vikstrous: you can install node-gyp globally and rebuilt manually via `node-gyp rebuild` in your module root
03:10 < mscdex> `npm install node-gyp -g`
03:12 < vikstrous> @mscdex Yep, I did that. I was just thinking there must be a better way to set it up so I can "require" my module without doing __dirname + 'build/Release/obj.target/modulename.node' and without making a hacky symlink
03:19 < mscdex> vikstrous: well, there is the node-bindings module which is supposed to abstract the path to your compiled addon
03:20 < mscdex> https://github.com/TooTallNate/node-bindings
03:20 < mscdex> is that what you're looking for or ?
03:24 < vikstrous> @mscdex That looks really useful. I think that'll fix the awkwardness of my current setup.
03:24 < vikstrous> Are there any other resources for native module development that I should be aware of?
03:39 <@wavded> anyone know a way to make the result of a v8 constructor function not give up its reference when its gc'd in JavaScript land?  basically i don't want to object to be collected until its ready, Persistent<Value> seems like it would do the trick but how to do that on a new call?
03:41 <@wavded> basically don't want the object to be gc'd at all until its explicitly closed (its for a long running socket connection) but in js, if the object has no more references it is calling the destructor in c++ land, anyone come across this?
03:44 < benvie> so you mean you want a new persistant per construction?
03:44 <@wavded> i think so
03:44 < benvie> can't you just cast it to persistant and that will do it?
03:44 < benvie> that keeps it alive until the context dies basically no?
03:48 < rvagg> wavded: just keep Persistent<Function> reference around, wrap your Local<Function> constructor Persistent<Function>::New(fn) to get the reference
03:48 <@wavded> i have it like this currently: https://gist.github.com/3204153
03:49 <@wavded> what am I doing wrong
03:53 <@wavded> rvagg: sadly, you are talking to a total pretty new to c++/v8 addons guy :), can you give sample snippet that illustrates, that would help me get it better?
04:04 < rvagg> wavded: sorry, was running benchmarks
04:05 <@wavded> rvagg: no prob
04:05 < rvagg> so, if you go to http://nodejs.org/docs/latest/api/addons.html and search for Persistent<Function>, most of the examples apply
04:06 < rvagg> keep a static or instance reference, wrap your function with ::New() and while you keep it around v8 won't GC it
04:07 < rvagg> like the example that has "static v8::Persistent<v8::Function> constructor;" in the header, and instantiates it in "void MyObject::Init()" with "constructor = Persistent<Function>::New(tpl->GetFunction());"
04:07 <@wavded> ok yeah that's how i have it setup now
04:08 < rvagg> they're a key part of keeping a reference to a callback when you go async via libuv, so you don't lose the reference and it doesn't get GCed after your initial call returns
04:08 < rvagg> but I'm sure you already know that!
04:09 <@wavded> actually I'm learning that!  so this is good, its still being collected after 5 seconds, I am using libuv
04:09 <@wavded> i can show you the specific module binding if that would help
04:09 <@wavded> basically the destructor is called after 5 seconds about every time (believe its the first Idle Notification that node is firing)
04:18 < rvagg> hm, perhaps you're not actually keeping a reference to it
04:18 < rvagg> being cleaned up by C++
04:18 <@wavded> yeah i'm guess that's the case too, i just don't know where
04:19 < rvagg> are you sure the C++ object that's holding it is still alive? put some debug stuff into the destructor there to see if it's being being destroyed too
04:19 <@wavded> the destructor tears down the uv polling as part of it
04:19 <@wavded> that bad?
04:20 < rvagg> why are you polling?
04:20 <@wavded> its watching a file descriptor (to put it in context i'm talking about the zmq module)
04:20 < rvagg> ah, ok, and you're using uv_send to get back into the event loop?
04:21 <@wavded> not using uv_send anywhere, (note I'm actually trying to fix a bug in this project but I'm learning during the process :)
04:21 <@wavded> so all that to say, i'm learning :)
04:22 <@wavded> uv_os_sock_t socket;                          
04:22 <@wavded>     uv_poll_init_socket(uv_default_loop(), poll_handle_, socket);
04:22 <@wavded>     uv_poll_start(poll_handle_, UV_READABLE, Socket::UV_PollCallback);
04:22 <@wavded> oops... was going to comment that, anyway, that's how its getting setup
04:22 < rvagg> ummm.. it's not uv_send that i'm thinking of anyway, that doesn't even exist!
04:22 <@wavded> just showing the uv parts
04:23 <@wavded> poll_handle is a uv_poll_t type
04:23 <@wavded> is that enough for libuv not to allow it to be GC'd?  (this is in the constructor function)
04:25 < rvagg> this is https://github.com/JustinTulloss/zeromq.node/blob/master/binding.cc ?
04:25 <@wavded> yes
04:25 < rvagg> and it's callback_symbol that's the problem?
04:26 < rvagg> no, it wouldn't be that, that's just a string
04:26 <@wavded> i don't know, not sure, here is the issue that i'm trying to solve: https://github.com/JustinTulloss/zeromq.node/issues/124
04:27 <@TehShrike> Oh man this is a cool talk http://youtu.be/X3Se49aJb2c
04:27 <@wavded> basically given those examples, the destructor for ~Socket is being called prematurely
04:27 <@wavded> and it shouldn't be
04:27 <@wavded> it sounds like a reference issue but I can't find it
04:30 < timeturner> ops plz
04:34 <@wavded> rvagg: Socket::Bind, Socket::Connect, Socket::BindSync basically all should cause the Socket not to be destructed, should I use uv_ref in those?
04:38 <@timeturner> jsdoc.info has got to be the cleanest document generator
04:39 <@timeturner> for markdown -> html
04:40 < rvagg> wavded: I've never used uv polling before, I'm scanning the zmq code but nothing stands out at me
04:40 < rvagg> I'm certainly not an expert in this either
04:42 <@wavded> rvagg: thanks for checking, yeah i'm not sure but will keep looking
04:43 <@wavded> rvagg: appreciate your help!
04:48 <@deoxxa> has anyone published a package to npm in the last few hours?
04:48 <@deoxxa> i think my account is in some kind of weird state
04:49 < mscdex> which one? iowa?
04:49 < rvagg> so wavded, Socket::UV_BindAsyncAfter deletes 'state' which is where your persistent reference is stored
04:49 < rvagg> but I don't think that's what you want, because you need that reference for when zmq gives you stuff
04:50 <@deoxxa> mscdex: the... only... npm?
04:50 < mscdex> heh
04:50 < mscdex> i was being punny
04:50 <@deoxxa> ohhh
04:50 <@deoxxa> that state
04:50 <@deoxxa> ZING
04:51 <@wavded> rvagg: ahh, good catch
04:51 < rvagg>     uv_queue_work(uv_default_loop(), req, UV_BindAsync, UV_BindAsyncAfter);
04:51 < rvagg> that's going to just call UV_BindAsync to set up the zmq_bind and then calls  UV_BindAsyncAfter straight after which deletes the callback ref
04:51 < rvagg> so, you need to either not delete state or keep the persistent reference around somewhere else
04:52 <@wavded> rvagg: ahh.. that was it!  good catch!
04:52 < rvagg> personally I'd be happy deleting the state object, I like the pattern of creating an object to pass to uv_queue_work and deleting it in the 'after', you just need to store that persistent callback reference in your main object
04:55 < rvagg> just be sure not to mess with v8 objects outside of the event loop, so don't touch it in UV_BindAsync
04:55 <@wavded> ahh ok
04:55 <@deoxxa> ok, i can't log into npm :<
04:55 <@deoxxa> isaacs: haaaalp
04:56 <@deoxxa> > Document update conflict.: -/user/org.couchdb.user:deoxxa/-rev/5-cfb089dfab78924d9fc953fdbe3c49e3
04:56 <@isaacs> deoxxa: what's up?
04:56 <@isaacs> oh, that.  one sec
04:56 <@deoxxa> yay
04:57 <@isaacs> deoxxa: try now
04:57 <@deoxxa> yay, fixed
04:57 <@deoxxa> <3
04:58 <@isaacs> this problem affects a pretty small number of people, and making a bunch of changes to your user account at http://new.npmjs.org/profile-edit fixes it anyway
04:58 <@deoxxa> oh ok
04:58  * isaacs just added a field then deleted it
04:58 <@deoxxa> i'll keep that in mind, should it happen again
04:58 <@isaacs> the problem is that a few users have a higher _rev value in public_users than they do in _users
04:58 <@wavded> rvagg: so just the Persistent<Function> cb needs to be yanked out of the struct?
04:58 <@isaacs> so the replication doesn't clobber it properly
04:58 <@deoxxa> interesting
04:58 <@isaacs> deoxxa: your acct is fixed forever
04:59 <@deoxxa> oh, neat
04:59  * deoxxa forgets "how to fix npm account" to make room for new moves
04:59  * deoxxa learnt "npm publish"!
04:59 <@wavded> rvagg: so this is c++ noob question, probably obvious, but when you delete a struct, you delete everything in that struct correct?
05:01 < rioter> wavded: it will delete the struct and its members. However if you have pointers it will not delete the memory just the pointers.
05:01 < rvagg> yes, that
05:02 < rioter> So just make sure you implement a destructor if you assign any memory inside the struct
05:02 <@wavded> rioter: thanks!
05:03 < rvagg> wavded: it looks like perhaps you need to be passing in a persistent callback and an temporary one just for the bind call--if you really need to know that you've done the bind
05:03 <@wavded> rvagg: is this a bad pattern then? -> http://kkaefer.github.com/node-cpp-modules/#persistent-handles (cause of the callback, or just in my case)
05:03 < rvagg> wavded: no, that's good, but it's only persistent for the period that you need it
05:04 < rvagg> v8 -> uv -> v8 (discard)
05:04 <@wavded> ok
05:04 < rvagg> but in your case you need to keep a persistent handle around longer than that
05:04 <@wavded> ahh because of the zmq bind that happens
05:04 < owen1> how to set STDOUT to be a file instead of the console?
05:05 <@niallo> is there an equivalent to tee(1) for node streams?
05:06 <@deoxxa> stream.pipe(process.stdout); stream.pipe(some_other_thing);
05:07 <@niallo> as so a stream can be piped to multiple other streams - that was my question
05:07 <@deoxxa> as far as i know, yep
05:07 <@niallo> thanks. i'll give it a shot.
05:07 < rvagg> wavded: ya, you need it because you end up doing this: v8 -> uv (-> zmq) -> v8 and then zmq -> uv -> v8, zmq -> uv -> v8, zmq -> uv -> v8, zmq -> uv -> v8... etc.
05:07 < rvagg> if you need to know when the initial bind has finished then I'd have a separate callback for that cause it's a separate event to what you're getting from the poll
05:08 < owen1> deoxxa: was it a reply to my question?
05:08 < rvagg> 2 persistent callback references, keep one around in your parent object and the other can go into the struct you're giving to uv and then deleting
05:08 <@deoxxa> owen1: no - but if you want to do that you can just do `node script.js > file'
05:09 < owen1> deoxxa: interesting. isn't it something EVERYONE want in production? 1 log file for stdout and another for errors
05:10 <@deoxxa> owen1: yes, so most people use a logging library
05:10 <@deoxxa> or they redirect stdout to a file
05:10 <@deoxxa> i.e. `herp derp > file'
05:10 <@deoxxa> what exactly do you want? :/
05:11 < owen1> deoxxa: why do u need a lib when u got console.log console.error ?
05:11 < owen1> etc
05:11 <@deoxxa> because those log to the CONSOLE
05:11 <@deoxxa> you're irritating.
05:11 < owen1> deoxxa: not when u'r sending it to file with > file
05:12 < owen1> sorry, i guess i didn't understand u
05:12 <@deoxxa> i answered this for you on like saturday
05:12 <@deoxxa> you wanted to be able to do something like `STDOUT=/some/file node app.js'
05:12 <@deoxxa> which is patently stupid
05:12 < owen1> yets!
05:12 < owen1> oh
05:12 <@deoxxa> it's dumb.
05:12 < owen1> i thought that's the unix way of doing it
05:13 <@deoxxa> no, it's not
05:13 <@deoxxa> the "unix way" of doing it is to redirect it to a file
05:13 <@wavded> rvagg: thanks, i'll process that those last couple statements tomorrow when my mind is alive again, going to bed, thanks again!
05:13 < rvagg> cool, hope it goes well! let me know cause it looks like an interesting binding
05:15 <@wavded> rvagg: <3 zmq and node.js
05:15 < owen1> deoxxa: right. and i thought that 'STDOUT=node.log STDERR=node.err node server.js' is what the docs are talking about. "console.log - Prints to stdout with newline"
05:15 <@deoxxa> stdout is "standard out"
05:16 <@deoxxa> i.e. one of the three filehandles most processes in unix get
05:16 <@deoxxa> stdin, stdout and stderr
05:17 <@Lorentz> <, >, 2>
05:17 < owen1> deoxxa: right. so far i got it. but i thougth that in order to change the standard out you can pass arguments to the node process.
05:17 < owen1> don't get mad. i might be wrong but that's what i assumed.
05:18 < owen1> i used to do similar stuff in ruby. RAILS_ENV=qa
05:18 < owen1> even in node i do that - NODE_EVN=qa PORT=3000
05:19 <@deltab> sure, but those are values
05:20 <@deltab> changing where output goes is often done by redirection, i.e. changing file descriptors before starting a program
05:21 <@deltab> so when you do  ls > foo  the shell opens the file and replaces the existing stdout with it when running ls
05:22 < owen1> deltab: yeah. i'll do that. 2> for my err
05:22 < owen1> thanks!
05:46 < kolektiv> hi all - has anyone else had odd issues where npm looks in the npmjs repository for a dependency which has a git url in the package.json?
05:46 < kolektiv> this is killing me right now
05:47 <@wookiehangover> kolektiv: what version of node / npm
05:47 < kolektiv> node: 0.8.4, npm 1.1.45
05:48 <@wookiehangover> huh, that should work
05:48 <@wookiehangover> are you sure your git url is correct?
05:49 <@niallo> hmm, if you create an abstract stream, and then you pipe a real stream to it, no events seem to fire
05:49 <@niallo> is that how it is supposed to work?
05:49 <@niallo> abstract streams can't be used in this way?
05:49 <@wookiehangover> niallo: what do you mean by 'abstract stream'
05:50 <@niallo> var stream = require('stream'); var s = new stream()
05:50 < kolektiv> wookiehangover: pretty sure! it seems to work intermittently
05:51 <@wookiehangover> you need to set stream.writable = true
05:51 < mscdex> niallo: Stream from require('stream') does not give you much out of the box, mostly just pipe()
05:51 <@niallo> wookiehangover: ahhh
05:51 <@niallo> mscdex: i see that now
05:52 <@niallo> what i want is a 'proxy' stream object if that makes sense
05:52 <@niallo> which a caller can set events on, and then later will be piped to
05:52 <@niallo> by real streams with actual data
05:52 <@wookiehangover> niallo: read this http://maxogden.com/node-streams
05:53 <@wookiehangover> not for the part about stuff on the client
05:53 < mscdex> hmm, i don't think i understand what you're trying to do or the usefulness of it
05:54 <@wookiehangover> but the examples at the end are a good explanation of streams
05:54 <@niallo> mscdex: so i have an api, where extensions want to be able to add handlers to child process streams
05:54 <@niallo> but the child processes don't exist at the time that the extension is registered
05:54 <@niallo> child processes will be created much later
05:54 < cryptopsy> node.js can't find the modules that npm installed with and without -g
05:55 < medice> cryptopsy: did you install in the directory where your app lies in
05:55 < mscdex> cryptopsy: what node version are you using? something ancient?
05:55 <@niallo> so, the extension gets a "proxy" stream object immediately on registration, and later the real child process streams will be piped to it
05:56 < mscdex> niallo: another way to go about it might be to keep an array of callbacks around and set them all at once when you do start the child proc
05:56 <@niallo> yeah, i could do that too
05:56 <@niallo> but i figured streams should be able to do this proxy thing, and it is a little neater ?
05:57 < cryptopsy> v0.7.10-pre
05:57 < cryptopsy> medice: -g makes so you don't have to do that
05:57 <@wookiehangover> niallo: you could probably just use an EventEmitter
05:57 < medice> i recommend to install locally
05:57 < mscdex> niallo: you can, but as mentioned you'll have to implement stuff
05:57 < cryptopsy> medice: u talking to me?
05:58 < medice> to my hand puppet, sorry
05:58 <@niallo> wookiehangover: how would an event emitter change things?
05:58 < medice> no, yes, you
05:58 < mscdex> cryptopsy: if you `npm install foo` from some directory, you should be able to `require('foo');` from that same directory
05:58 < owen1> is console.log async? https://github.com/joyent/node/blob/master/src/node.js#L428  i believe the answer is in this function, but i am afraid i don't understand all the things there.
05:59 <@wookiehangover> niallo: it would probably simplify things...
05:59 <@niallo> wookiehangover: how would it simplify things? aren't eventemitters subsets of streams?
05:59 <@wookiehangover> niallo: the other way around
05:59 < mscdex> streams inherit from eventemitter
05:59 <@niallo> right, so streams do more than eventemitters
05:59 < mscdex> owen1: not anymore, unless it's in the context of a pipe
06:00 <@wookiehangover> niallo: streams are really just EventEmitters with predicable events...
06:00 <@wookiehangover> and built in mechanisms for backpressure
06:00 < mscdex> niallo: not much, it adds a pipe() method
06:00 <@niallo> eventemitters don't have pipe() which seems really nice
06:00 <@niallo> for my particular use case
06:00 <@niallo> where i am actually handling a stream of data
06:01 <@wookiehangover> niallo: but if all you need to do is emit an event and bind a callback to it later
06:01 <@wookiehangover> using an EventEmitter is more straightforward
06:01 <@niallo> wookiehangover: what i want to do is have a late-binding stream
06:02 <@niallo> hmm, i guess i could make an eventemitter work too, but i'd have to implement pipe myself basically
06:02 <@niallo> well i will play around some more and see what makes sense
06:02 < mscdex> it's unfortunate that ChildProcess isn't exported by child_process.js, even if it's undocumented
06:02 <@wookiehangover> sure, so have your "proxy" stream be a readable stream that your child process has access to
06:02 <@wookiehangover> and then pipe() that to a writable stream
06:03 <@wookiehangover> or just emit an event ;)
06:03 <@niallo> wookiehangover: i think i see what you mean now
06:03 < owen1> mscdex: so i need to be careful not to use too many console.log and console.error since the request will be blocked?
06:04 <@wookiehangover> owen1: well, everything ultimately has a cost
06:04 < owen1> mscdex: i send stdout and stderr to a file, btw
06:04 <@niallo> i guess i thought there was a lot of magic in pipe() but it seems like not
06:05 <@wookiehangover> niallo: streams are good for things that have a very definite lifetime of events, like http requests or reading from files
06:05 <@wookiehangover> and all pipe() does is tie together those pre-determined events
06:07 <@niallo> wookiehangover: yeah, i'm starting to grok that. i don't think i actually need streams. i just need eventemitters, and i can do the pipe() myself
06:08 <@wookiehangover> niallo: word
06:08 < mscdex> owen1: right, it is blocking, but it may not block as long as say accessing the disk or network? it's your call
06:08 < jetienne> im inside a module and would like to know which directory contain the source. (not the current direct at system level PWD)
06:08 < mscdex> jetienne: __dirname ?
06:09 < jetienne> mscdex: thx
06:11 < owen1> mscdex: so if i run my app with 'node server.js > node.log'  it's not blocking since it's writing to the disk?
06:12 < mscdex> owen1: i believe so, but you'd have to test. i'm not sure if node core tests for a tty in addition to piping or not
06:13 <@wookiehangover> owen1: is writing to stdout a bottleneck in your application?
06:13 <@wookiehangover> and piping it wouldn't affect the performance of you doing it
06:14 <@wookiehangover> since, its like already happened in node when its pipe'ed
06:15 <@niallo> heh, yeah i just redid this api using eventemitters, and its actually way simpler than my "proxy" stream idea. cheers.
06:16 <@wookiehangover> niallo: \:D/
06:25 < jetienne> i would like to 'include' code from a file.js. im using: var jscodeStr = require('fs').readFileSync(jscodeFname, 'utf8'); eval(jscodeStr);  <- is there a shorter/clearer code to include
06:27 < owen1> wookiehangover: no. i just want to make sure i know when is my code blocking. async is such an important idea in node.
06:32 <@Nexxy> too bad all has been for naught!
06:57 <@deoxxa> damn it, i've got this code in this application
06:57 <@deoxxa> argv._.reverse()
06:57 <@deoxxa> i can't unsee the ._.
06:57 <@chapel> :P
06:57 <@deoxxa> it's like it's staring at me, disapproving of my typing
06:57 <@chapel> o_o
06:57 <@deoxxa> "just... just stop. stop writing code."
06:57 <@deoxxa> :<
06:57 <@chapel> ._. :(
07:39 < caryyang> ops
07:53 < [AD]Turbo> hi there
08:16 < prettyrobots> ops plz
08:17 < `3rdEden> ops plz
08:20 < tuhoojabotti> ops plz
08:20 <@tuhoojabotti> wee
08:21 <@tuhoojabotti> deoxxa: argvs['_'].reverse() // I don't know if it's any better, though...
08:21 <@tuhoojabotti> hmm typo
08:26 <@prettyrobots> Did someone ask for a tpyo?
08:28 <@tuhoojabotti> Well not exactly.
08:28 <@tuhoojabotti> I know that guy, though.
08:44 <@SomeoneWeird> opsplz
08:44 <@Nexxy> SomeoneWeird, wonder who set that topic!
08:44 <@Nexxy> OH WAIT
08:44 <@Nexxy> it was you.
08:45 <@SomeoneWeird> no
08:45 <@SomeoneWeird> people just love mi
08:45 <@Nexxy> yeah uh huh
08:46 <@Nexxy> people like...
08:47 <@Nexxy> yawnt, 
08:47 <@Nexxy> for example
08:47 < yawnt> Nexxy: ?
08:47 <@Nexxy> :)
08:47 <@SomeoneWeird> lol
08:48 <@SomeoneWeird> hes like wtf
08:48 <@Nexxy> shhhh!
08:48 <@Nexxy> ;P
08:48 < yawnt> nono
08:48 < yawnt> it's my tactic
08:48 < yawnt> i'm confusing Nexxy 
08:48 <@SomeoneWeird> yawnt used confuse
08:48 <@SomeoneWeird> its super effective
08:48 <@SomeoneWeird> Nexxy fled
08:49 < yawnt> i was about to throw a mega ball
08:49 < yawnt> :(
08:49  * SomeoneWeird throws a masterball att yawnt 
08:49 <@Nexxy> ATT MASTERBALL?!
08:49  * SomeoneWeird caught yawnt!
08:50 <@Nexxy> damned corporatism
08:50 <@Nexxy> ruins everything
08:50 <@SomeoneWeird> yawnt is now mute!
08:50  * SomeoneWeird releases yawnt 
08:50 < yawnt> pf
08:50 <@Nexxy> :|
08:50 <@SomeoneWeird> lol
08:50 < yawnt> now gimme op if you dare, let's play fair
08:50 < yawnt> >:(
08:50 <@Nexxy> it's a bot
08:50 <@yawnt> just kidding.. lol
08:50 <@Nexxy> but please don't start a mode war
08:51 <@yawnt> not that lame, come on
08:51 <@yawnt> i need to go wash my dishes ;_; ..
08:51 <@Nexxy> yeah you do
08:51 <@SomeoneWeird> lol
08:51 <@Nexxy> I wasn't going to say anything, but...
08:51 <@Nexxy> damn
08:51 <@Nexxy> get on it
08:51 <@SomeoneWeird> whyd you get on irc then
08:51 <@yawnt> SomeoneWeird: i need to think
08:51 <@yawnt> irc helps
08:51  * SomeoneWeird thinks for yawnt 
08:51 <@yawnt> how would you organize documents without folders?
08:51 <@yawnt> basically that's my problem
08:51 < txm> Hi,  I've "installed" node from source on a Centos box, and npm fibers, but now I get an ELF error :( http://pastebin.com/pAFWjPuW
08:52 <@yawnt> i'm trying to re-think the way people share informations between them
08:52 <@yawnt> which comes from the way people organize their knowledge of course
08:52 <@Nexxy> yawnt, meta data
08:52 <@Nexxy> "tags"
08:53 <@konobi> did ryah go crazy again?
08:53 <@Nexxy> konobi, perpetually
08:53  * Nexxy points to topic
08:54 <@yawnt> lol
08:54 <@yawnt> Nexxy: what do you mean with meta-tags
08:54 <@yawnt> like tagging informations?
08:56 < mscdex> txm: i'd post an issue on their issue tracker: https://github.com/laverdet/node-fibers/issues
09:00 <@konobi> Nexxy: who set that up?
09:00 <@CIA-93> libuv: Bert Belder v0.8 * r1d5eb91 / test/test-tcp-unexpected-read.c : Avoid compiler warning - http://git.io/ZX5coA
09:04 < txm> Thanks mscdex - but I don't know it is a problem with fibers > require('fibers'); { [Function: Fiber]  yield: [Function],  current: undefined,  poolSize: 120,  fibersCreated: 1 }
09:04 < txm> oh, I see :) fibers.js:4:1)
09:09 < bcave> hi
09:10 <@ryah> konobi: i asked for it :)
09:10 < ryah> ops plz
09:11 <@ryah> :)
09:11 < bcave> i am trying to build an https client in node.
09:11 <@konobi> ryah: you insane man =0)
09:11 <@konobi> ryah: how's sabbatical treating ya?
09:11 < mscdex> bcave: reinventing the wheel? there's one in node core
09:11 < mscdex> :-)
09:12 <@ryah> konobi: im very relaxed :)
09:12 <@ryah> bed time!
09:12  * ryah waves
09:12 < mscdex> it's only 5:15
09:12 < mscdex> the morning is young
09:13 <@yawnt> lol
09:13 <@yawnt> that's the first time i see ryah online
09:13 <@yawnt> so it exists (cit.)
09:14 <@yawnt> *he
09:14 <@yawnt> also brb washing dishes >:(
09:15 < royh> hi
09:15 < Bux> ohai
09:15 < Bux> ops plz
09:15 <@Bux> tyvm
09:15 < royh> i was wondering if there's any good intro to the event loop. basically i want to know the limits and what the overhead is.
09:16 <@Bux> The event loop?
09:16 <@Bux> what do you mean exactly?
09:16 < royh> i suppose the source is a good reference, but apart from getting my hands that dirty :P
09:17 <@Bux> hmm?
09:17 < royh> Bux: basically what happens when you do something asynchronously
09:17 <@Nexxy> konobi, lol
09:17 <@Nexxy> I'm just waiting for some trolls to come in and pwn the entire channel
09:19 < mmalecki> dominictarr: hey, you're up already? I'd go to your room but I'm lazy as fuck
09:19 < IRCBot_Master> Welcome, rampr to the Node.JS IRC
09:20 < IRCBot_Master> Welcome, ecthiender__ to the Node.JS IRC
09:20 <@IRCBot_Master> Welcome, nielsbusch to the Node.JS IRC
09:20 <@Bux> sweet :)
09:21 < dominictarr> mmalecki, whats up?
09:22 <@IRCBot_Master> Welcome, dannyamey to the Node.JS IRC
09:22 < mmalecki> dominictarr: nothing, just wondering :)
09:22 <@Nexxy> umm
09:22 <@Nexxy> lol
09:22 <@zomg> wtf is this ircbot thing?
09:22 <@zomg> :P
09:22 <@Bux> haha
09:22 <@Bux> its pretty cool uh :P
09:22 <@Nexxy> no
09:22 -!- IRCBot_Master was kicked from #Node.js by zomg [Go away]
09:22 <@Nexxy> it's annoying lol
09:22 -!- IRCBot_Master was kicked from #Node.js by zomg [Really, go away]
09:22 <@Bux> dont!
09:22 <@Bux> please
09:22 <@Nexxy> well there you go
09:22 <@zomg> Bux: is it yours?
09:23 < mmalecki> I mean, it is annoying
09:23 <@Nexxy> Bux, please don't bring annoying bots into the channel
09:23 <@zomg> Yeah
09:23 <@zomg> You can bring it back but turn off the automatic message
09:23 <@Nexxy> for sure
09:24  * ecthiender wonders why there are so many ops in this channel
09:24 <@zomg> eldios: ryah ops everyone sometimes :P
09:24 <@zomg> err
09:24 <@zomg> that was for ecthiender 
09:24 < ecthiender> zomg, heh :D
09:25 < dominictarr> NODE JS IS ANARCHY
09:25 < dominictarr> THAT IS WHY
09:25 <@zomg> Stick it to the man!
09:25 <@Nexxy> dshaw_, just heard your recap of my talk on nodeup!
09:25 < ecthiender> good point dominictarr :P
09:25 < eldios> =)
09:27 < Bux> woah
09:28 < Bux> PC just bluescreene
09:28 < Bux> -
09:28 < Bux> -d
09:28 <@Nexxy> /con/con.wav
09:28 < Hounddog> hi there... is npm package search down or something?
09:28 < Hounddog> am not finding any results
09:29 <@Nexxy> Hounddog, it looks like it
09:29 <@zomg> Yeah I think someone else mentioned having probs with npm
09:29 < Bux> yeah
09:29 < Bux> its been down since yesterday
09:29 < Bux> ops plz
09:29 <@Bux> tyvm
09:29 <@zomg> ..ryan_opper?
09:29 <@Bux> yeah
09:30 < Hounddog> darn ok... just wanted to quickly gather some versions :)
09:30 <@Bux> another IRC bot
09:30 <@Bux> dont ban IRC bots
09:30 <@Bux> _-_
09:30 <@Nexxy> Bux, no guarantees :)
09:30 <@zomg> Does that bot give ops to anyone who asks for them? >_>
09:30 <@Bux> haha, I'll make a master/slave coop
09:30 <@Nexxy> zomg, yes
09:30 <@Bux> yes
09:30 <@zomg> Nexxy: how reasonable... :P
09:30 <@Nexxy> lol
09:30 <@Bux> haha ikr
09:30 <@Nexxy> yeah it wasn't my idea ;P
09:31 <@Bux> mode #Node.js -b IRCBot_Master
09:31 <@Bux> fail
09:31 <@zomg> I unbanned it already
09:31 <@dmilith> ;]
09:31 <@Bux> ok thanks
09:31 <@zomg> oh someone else banned it too?
09:31 <@Bux> brb breakfast
09:31 <@Nexxy> no
09:31 <@dmilith> who cares.. it's freenode
09:31 <@Nexxy> freenode just lets you unban things that don't exist
09:31 <@zomg> Right :D
09:31 <@dmilith> on ircnet ops are meaningful
09:31 <@dmilith> not here
09:31 <@Nexxy> existent*
09:32 <@zomg> dmilith: as long as no actual ops are present, then they do have quite much meaning
09:32 < Hounddog> but the search from npm commandline works without probs... so i guess it is not really connected to the site :)
09:32 <@Nexxy> everyone is actually an op
09:32 <@dmilith> there should be chanserv op, and no more
09:32 <@zomg> For example I could now set +m and nobody could talk except ops and voices... who knows how long it would take to someone to remove it
09:32 <@Nexxy> it would be such a tragedy!
09:32 <@dmilith> ;]]
09:33 <@zomg> Yeah just saying it's quite meaningful to have ops when nobody is present to fix your mess..
09:33 <@zomg> =)
09:33 <@Nexxy> well good thing we all do now
09:33 <@zomg> But it seems to work here so far
09:33 <@Nexxy> we're all here to fix the mess
09:33 <@zomg> Op everyone on ##javascript
09:33 <@zomg> and I bet everyone would rush to ban everyone else
09:33 <@dmilith> yea, but you can always log onto chanserv/nickserv and undo ;] try that on ircnet ;]
09:33 <@dmilith> ;D
09:33 <@dmilith> like a stupid animals.. yea
09:34 <@dmilith> ops pls
09:34 <@dmilith> ?
09:34 <@dmilith> ;]
09:34 <@Nexxy> you have to say plz
09:34 <@dmilith> aah. I tried to set +m ;]
09:34 <@Nexxy> pls no count
09:34 <@SomeoneWeird> haha
09:35 <@Nexxy> oh
09:35 <@Nexxy> you're already opped
09:35 <@Nexxy> freenode is weird
09:35 <@Nexxy> "ircd seven"
09:36 <@SomeoneWeird> huh
09:37 <@SomeoneWeird> lol
09:37 <@Nexxy> pretty sure ops override +q
09:37 <@SomeoneWeird> yer
09:37 <@SomeoneWeird> does
09:37 < mmalecki> yeah. +v and +o override +q
09:37 <+SomeoneWeird> hi
09:37 <+SomeoneWeird> derp
09:37 <+SomeoneWeird> someone +q me
09:38 <@Nexxy> go play in ##someoneweird ;P
09:38 <+SomeoneWeird> :(
09:39 <@dmilith> that's actually weird what happens here :(
09:39 <@dmilith> 100% offtopic
09:39 <+SomeoneWeird> true
09:39 <@Nexxy> it tends to be off topic when most people are asleep
09:39 <@dmilith> ops plz
09:39 <+SomeoneWeird> but actually
09:39 <+SomeoneWeird> i AM on topic
09:39 <+SomeoneWeird> >.>
09:39 <+SomeoneWeird> <.<
09:39 <@Nexxy> har har
09:40 <+SomeoneWeird> ;)
09:40 <@Nexxy> rofl
09:40 < zomg> Yeah.
09:40 <@Nexxy> tard
09:40 <+SomeoneWeird> lol
09:40 < zomg> ops plz
09:40 -!- ryan_opper was kicked from #Node.js by zomg [Let's fix this]
09:41 <@Nexxy> zomg, I'm prettty sure the opper is ryan's idea
09:41 <@Nexxy> rofl
09:41 <+SomeoneWeird> lol
09:41 <+SomeoneWeird> der
09:41 <@zomg> Then it's a bad idea
09:41 <@zomg> :D
09:41 <@Nexxy> although I agree I'm not sure it's our call lol
09:41 <@zomg> I find it highly unlikely its his though
09:41 <@Nexxy> it is
09:41 <@Nexxy> I spoke with him about it
09:42 <@Nexxy> so far it hasn't really caused any problems
09:42 <@zomg> Well the domain it's on is weird to say the least
09:42 <@zomg> :P
09:42 <@Nexxy> dmilith, smooth.
09:42 < mmalecki> zomg: it is his idea :)
09:42 <@zomg> Fine!
09:42 <@zomg> lol
09:42 <@Nexxy> it's all good
09:42 <@zomg> This only ends badly I tell you
09:42 <@zomg> :D
09:42 <@Nexxy> you're just trying to look out for the channel
09:42 <@Nexxy> yeah I know
09:42 <+SomeoneWeird> as long as someone has +F its all good
09:42 <@Nexxy> but this way we get to wait and watch it happen
09:43 <@Nexxy> if everyone gets kicked out of the channel for a few hours
09:43 <@einaros> this channel has become 100% meta since that mass op thing
09:43 <@Nexxy> oh well
09:43 <+SomeoneWeird> im sure the chan will immediately go back to being on topic once someone asks a node question :)
09:43 <@Nexxy> what's the status of dtrace on linux?
09:44 <@einaros> herp derp op op op
09:44 <@Nexxy> I don't want to figure it out on my own
09:44 <+SomeoneWeird> thats not node
09:44  * SomeoneWeird continues to be offtopic
09:44 <@Nexxy> it's solaris
09:44 <+SomeoneWeird> dtrace is that solaris thing yer
09:44 <@Nexxy> which is pretty node
09:44 < royh> dtrace is somewhat related to node though :P
09:44 <+SomeoneWeird> ssshh
09:45 < royh> it's more ontopic than the rest of the chatter i've seen since i joined :P
09:46 < Bux> back
09:55 < rvagg> Nexxy: that's a good question about dtrace; though I'm a little skeptical the Linux version will see the light of day in a hurry, Joyent has a pretty strong incentive for it to be a SmartOS goodie--and good on them!
09:56 <@Nexxy> rvagg, I think I just followed you on twitter
09:57 <@Nexxy> also I thought I read something about a kernel module for linux dtrace
10:17 < milani> ops plz
10:18 <@NodeX> *yawn*
10:18 < milani> ops plz
10:19 <@Nexxy> milani, the bot is gone
10:19 < milani> Nexxy, yeah I was testing;)
10:19 <@Nexxy> lol ok ;P
10:19 <@Nexxy> blame zomg !
10:20 < milani> blame him by kicking him out! :D kidding! don't ban me ops!!
10:21 <@Nexxy> we've already had enough kicks for the day!
10:21 <@Nexxy> so much e-violence makes me a sad panda
10:22 < milani> Nexxy, panda is beautiful as u;) :D
10:22 < milani> now u feel better;)
10:22 < milani> so we should blame ryah :D
10:23 <@Nexxy> lol milani 
10:24 < rvagg> oh, well there you go: https://github.com/dtrace4linux/linux
10:24 <@Nexxy> #lazyweb
10:25 < rvagg> and apparently you can get ZFS running relatively painlessly, that's something I've wanted to tinker with for a while... I just wish I had the time http://liberumvir.com/2012/06/01/zfs-and-dtrace-running-on-ubuntu.html
10:31 < milani> "@morteza_milani Although I am strongly opposed JS as a language, and Web based application compared to Native, I am excited to see what happ"
10:32 < milani> I can't believe someone is there that does not think JS is a language!
10:32 < milani> :D
10:32 <+SomeoneWeird> who killed the bot
10:36 < milani> SomeoneWeird, rumors say zomg :D
10:37 <+SomeoneWeird> ZOMG!
10:45 < timoxley> Nexxy is it just me or did ryah explicitly ask you to make sure the bot wasn't kicked? hahah
10:48 <@Nexxy> timoxley, how exactly am I to do that?
10:48 <@Nexxy> when he gives ops out to everyone, any one of them can kick it and there's nothing anyone can do about it
10:48 <+SomeoneWeird> lol yer
10:48 <+SomeoneWeird> do you have access to it?
10:48 <@Nexxy> no
10:49 <+SomeoneWeird> tell him to add .join or something to it
10:49 <@Nexxy> yah it doesn't even have auto rejoinh
10:49 <@Nexxy> so IDK, the whole thing is just a pain in the ass all the way around
10:49 <@Nexxy> lol
10:50 < timoxley> I like it. Good experiment
10:51 <@Nexxy> in what? lol
10:51 <@Nexxy> all-ops channels have been around since the dawn of IRC, and have never ended well ;P
10:51 <@Nexxy> it ends up degrading into a sea of modes and ops begging
10:52 < FireFly> an experiment in the douchebagginess of the node community?
10:52 <@Nexxy> (and random attempts at takeovers/mass kick-bans/etc)
10:52 <+SomeoneWeird> lmao
10:53 < timoxley> Nexxy just revealing of the nature of people I guess
10:53 <@Nexxy> timoxley, there's definitely that
10:54  * SomeoneWeird is the best
10:54 <@Nexxy> lol
10:54 < timoxley> for example.
10:54 <@Nexxy> yeah
10:54 <+SomeoneWeird> :P
10:54 < timoxley> :P
10:55 <@deoxxa> my housemate needs to get out of the damn bathroom
10:55  * deoxxa D:<
10:55  * SomeoneWeird nukes deoxxas housemate
10:55 <@deoxxa> noooo she pays half the rent
10:56 <@deoxxa> i just want her out of the bathroom is all
10:56 <+SomeoneWeird> will a nuke affect >70kms?
10:56 <@deoxxa> probably
10:56 <+SomeoneWeird> fuck
10:56  * SomeoneWeird dead too
10:57 <+SomeoneWeird> owell
10:57 <+SomeoneWeird> any cool node modules i should play with
10:57 <@deoxxa> https://github.com/deoxxa/dotty << this!
10:57 <@deoxxa> i named it after my cat
10:58 <+SomeoneWeird> i dun get it
10:58 <+SomeoneWeird> cant you do that normally
10:59 <@deoxxa> not programmatically
10:59 <@deoxxa> or with wildcards
10:59 <+SomeoneWeird> ah ic
10:59 <+SomeoneWeird> nice
10:59 <@deoxxa> i'm using it in my process management thing
11:00 <@deoxxa> application.revision.task.instance
11:00 <@deoxxa> i.e. blog.123456.web.0
11:00 <@Nexxy> SomeoneWeird, may 
11:00 <@Nexxy> grr keyboard
11:00 <@Nexxy> SomeoneWeird, may I recommend: https://github.com/nexxy/rickrollio
11:01 <+SomeoneWeird> hahaha
11:01 < timoxley> is twilio in australia yet?
11:01  * timoxley googles
11:02 < timoxley> apparently not
11:02 < timoxley> ugh. I feel like we are living in a cow shed
11:02 <+SomeoneWeird> yer its not
11:02 <+SomeoneWeird> truedat
11:02  * rvagg nods
11:02 < rvagg> we got Pandora though!
11:02 <+SomeoneWeird> theres so many things we done have ugh
11:03 < timoxley> rvagg and spotify just landed
11:03 < timoxley> that was good
11:03 <+SomeoneWeird> fux u netflix
11:03 <+SomeoneWeird> come
11:03 <+SomeoneWeird> oh and good internet plans
11:03 <+SomeoneWeird> x.X
11:04 < timoxley> yeah trying to explain capped internet to an american is difficult
11:04 <@deoxxa> canadians not so much though!
11:04 < dominictarr> timoxley, have you seen google fiber?
11:04 < timoxley> oh man
11:04 < timoxley> dominictarr it looks awesome
11:05 < dominictarr> still, you can sleep soundly at night knowing that at least you have way better internet than new zealand.
11:05 <+SomeoneWeird> hahah
11:06 <+SomeoneWeird> wtf
11:06 <+SomeoneWeird> free internet through google fiber
11:06 <+SomeoneWeird> !?!
11:06 <+SomeoneWeird> ofc its not gunna be in aus though
11:06 < dominictarr> they are gonna fuck shit up
11:06 < timoxley> dominictarr perhaps it will also wake au government up to the impact of tech companies
11:07 < timoxley> government been carrying on about this national broadband thing
11:07 <@deoxxa> NBN
11:07 < dominictarr> I've heard there are quite some plans to roll out fiber in australia, though
11:07 <@deoxxa> i work with some of the architecture guys
11:07 <@deoxxa> that's a lonnnnng way off
11:07 < timoxley> if google comes in and just outdoes the lot of them
11:07 <+SomeoneWeird> nbn is gunna be shit
11:07 < timoxley> it would make me rather happy
11:07 <+SomeoneWeird> the tech is already outdated
11:07 < timoxley> the tech we have already is outdated
11:08 < dominictarr> if you don't keep on making it better, you fall behind
11:08 < timoxley> better than new zealand though
11:08 < timoxley> :/
11:08 < mmalecki> hm, I can get a 1 gbps fiber at my place already
11:08 <@deoxxa> man, gigabit for $70
11:08 <+SomeoneWeird> well shhh you mmalecki 
11:08 <@deoxxa> that's insane
11:08 <+SomeoneWeird> deoxxa, i fkin reckon
11:08 < dominictarr> new zealand is working on fiber too though, so don't sit on your laurels.
11:08 < timoxley> haha
11:08 <+SomeoneWeird> deoxxa, lol i get 8mbps down for $60 a month
11:08 <+SomeoneWeird> fu 
11:09 <@deoxxa> i had gigabit when i lived in osaka
11:09 < dominictarr> + there is another transpacific cable coming through
11:09 < mmalecki> I had that flyer from my ISP somewhere
11:09 <@deoxxa> that was pretty rockin'
11:09 < dominictarr> even like Fiji will have decent internet after that.
11:09 < rvagg> I'm not even going to talk about my connection cause it's too shameful
11:10 < dominictarr> although, for coding, speed requirement not very high.
11:10 <+SomeoneWeird> mines probably worse
11:10 <+SomeoneWeird> true
11:10 < milani> Nexxy, rickrollio great!!
11:10 <@deoxxa> dominictarr: i'd just like it if shit didn't get crazy congested at about 8pm every night
11:10 < dominictarr> I spent several months crusing around australia last year with just 3G
11:11 < rvagg> latency frustrates me the most, managing servers in north america is a pain in the backside
11:11 < timoxley> dominictarr my 3g is often faster than my cable
11:11 < dominictarr> JUST HOOK IT UP TO MY VIENS
11:11 <@deoxxa> "what's that you usually get 20mbit? yeah enjoy your 512kbit now, idiots are on facebook"
11:11 < dominictarr> I never measured it. 
11:12 <@deoxxa> the 3g here is actually pretty amazing
11:12 < dominictarr> subjectively fast enough
11:12 <@deoxxa> like, much better than most countries
11:12 <+SomeoneWeird> lol suddenly everyone talking is aussie
11:12 < timoxley> dominictarr I do a lot of pairing and screensharing work
11:12 < dominictarr> helps being totally flat
11:12 < timoxley> bandwidth is a problem then
11:12 <+SomeoneWeird> bandwidth is the biggest problem
11:13 < dominictarr> put the transmitter on top of ares rock and you've got all of australia.
11:13 <@deoxxa> yeah dominictarr, but also telstra are way ahead of every other telco with their software and hardware revisions on the cellular network
11:13 < timoxley> dominictarr if everyone just used vim + tmux we'd all be set
11:13 <@SubStack> au seems more concerned with censoring the net than with making it go fast
11:13 <+SomeoneWeird> lmao dominictarr 
11:13 <+SomeoneWeird> SubStack, +1
11:13 <+SomeoneWeird> sadl
11:13 <+SomeoneWeird> y
11:13 <@deoxxa> often when ericsson have a new patch out for their shit, telstra are the first to apply it
11:14 <@deoxxa> SubStack: only a small, noisy part of our government
11:14 < rvagg> not AU, just one politician, a single politician
11:14 < timoxley> deoxxa *apply their branding to it
11:14 <+SomeoneWeird> ^lol
11:14 <@deoxxa> timoxley: sometimes, but even with minor revisions every couple of months
11:14 <@SubStack> I love how politically costly dicking around with internet policy is getting
11:15 < dominictarr> the coverage is really pretty impressive, even in places like this: http://dominictarr.com/post/11548654150/the-hack-mobile-in-the-early-moring-light
11:16 < dominictarr> basically, every slightly green part of Australia probably has 3G.
11:17 < timoxley> dominictarr been considering a trip like that for a while
11:17 < timoxley> where was that?
11:17 <@deoxxa> except if you're near a beach
11:17 <@deoxxa> in which case lol you're screwed
11:17 <@jacobw> vim+tmux is awesone
11:18 < timoxley> jacobw wemux = double awesome
11:18 < dominictarr> by the murry river
11:18 < dominictarr> I think, maybe just into NSW?
11:18 < timoxley> nice
11:19 < dominictarr> some where around here https://maps.google.com/?ll=-35.406961,143.695679&spn=2.095292,3.532104&t=h&z=8
11:21  * graeme_f waits for node dublin tickets to go on sale...
11:21  * SomeoneWeird waits for node melbourne
11:21 < timoxley> SomeoneWeird just come to campjs fool
11:22 < dominictarr> nsw was pretty good for camp sites, sa kinda sucked.
11:22 <+SomeoneWeird> eeeeh
11:22 <+SomeoneWeird> i have no money and parent would be like noooo
11:23 < timoxley> SomeoneWeird get me on the phone to your parents
11:23 < dominictarr> lol
11:23 <+SomeoneWeird> somehow i doubt that'd go down well
11:24 <@jacobw> wemux?
11:24 < timoxley> jacobw https://github.com/zolrath/wemux/
11:24 < mmalecki> SomeoneWeird: just get a plane ticket and be like 'brb'
11:25 < timoxley> jacobw makes tmux more functional for pairing
11:25 < timoxley> SomeoneWeird just say you're staying at a friends place
11:25 <+SomeoneWeird> .____.
11:25 <+SomeoneWeird> lol
11:27 < timoxley> oh well. I want to take the camp to melbourne next year anyway
11:27 <@jacobw> that's cool
11:28 < rvagg> anyone know what's up with jsconf.au? I saw rioter say that there was news coming soon, something about hiccups
11:28 < graeme_f> timoxley - are you talking about the nodeconf summer camp?
11:29 < rioter> rvagg, news coming soon :P
11:29 < rioter> lets blame hiccups :)
11:29 < rvagg> .... right
11:29 < timoxley> graeme_f AU javascript camp http://campjs.com/
11:29 < rvagg> or should we blame sleep issues? how's that going rioter?
11:29 < rioter> Not well
11:29 < rioter> three doctors appointments this week.
11:29 < rvagg> did they tell you what's wrong? apnea perhaps?
11:29 < rioter> ruled out apnea in the sleep lab
11:30 < timoxley> rioter we should collab
11:30 < graeme_f> timoxley: sounds great, i'd be there if the plane ticket was included (same problem with nodeconf, $$$) :(
11:31 <+SomeoneWeird> ^^
11:31 < timoxley> graeme_f where are you?
11:31 <+SomeoneWeird> >.<
11:31 < graeme_f> timoxley: UK
11:31 < timoxley> oh
11:31 < timoxley> yeah
11:31 < timoxley> that's different. SomeoneWeird is only a $50 plane ticket away
11:31 < rioter> timoxley: oh that hits up against ruxcon.
11:31 < graeme_f> maybe we could hold one in the olympic village after the games ;)
11:32 <+SomeoneWeird> hehe
11:32 < timoxley> rioter oo i didn't know about ruxcon
11:32 <+SomeoneWeird> fark it does too
11:49 <@tuhoojabotti> Express redirect "home" doesn't work anymore :(
11:50 <+SomeoneWeird> whats 'home'?
11:51 <@tuhoojabotti> just redirects me to /home
11:52 <@tuhoojabotti> so much lag on freenode
11:52 <@tuhoojabotti> used to be shorthand for /
11:52 <@tuhoojabotti> or longhand
11:52 < timoxley> tuhoojabotti probably makes sense
11:52 <@tuhoojabotti> Yeah.
11:53 <@tuhoojabotti> but how do I close express
11:53 < timoxley> tuhoojabotti var home = '/'
11:53 < timoxley> tuhoojabotti close?
11:53 <@tuhoojabotti> timoxley: ye ye.
11:53 <@tuhoojabotti> timoxley: Yes, like stop listening etc.
11:53 <@tuhoojabotti> I found app.close(); but it doesn't work
11:53 <@tuhoojabotti> TypeError: Object function app(req, res){ app.handle(req, res); } has no method 'close'
11:54 <+SomeoneWeird> like stop listening?
11:55 <+SomeoneWeird> also for redirects do res.redirect("url")
11:55 < cryptopsy> 05:55:30 < mscdex> cryptopsy: if you `npm install foo` from some directory, you should be able to `require('foo');` from that same directory
11:55 < timoxley> tuhoojabotti you need to call .close on the value returned from the listen command
11:55 < cryptopsy> this doesn't work
11:55 <@tuhoojabotti> huh
11:55 <@tuhoojabotti> But yeah I can't do redirect('/')
11:56 <@tuhoojabotti> I need it to obey basepath
11:56 <@tuhoojabotti> app.set('basepath', config.base);
11:56 <@tuhoojabotti> I don't want to write redirect(config.base) everywhere
11:56 <+SomeoneWeird> res.end()
11:56 < timoxley> tuhoojabotti can you show some code
11:56 < pecke01> cryptopsy: What do you mean? You can't install or can't require?
11:56 <@tuhoojabotti> timoxley: I warn you, it's not pretty.
11:57  * timoxley braces himself
11:57 <+SomeoneWeird> rioter, any idea how much ruxcon might cost?
11:58 <@tuhoojabotti> timoxley: https://gist.github.com/3206426
11:59 < timoxley> tuhoojabotti line 96
11:59 <+SomeoneWeird> res.redirect(config.base)
11:59 <+SomeoneWeird> no?
11:59 < timoxley> you need to call .close() on the value returned from .listen()
12:00 <@tuhoojabotti> oh
12:00 <@tuhoojabotti> timoxley: So self.close = app.listen(port).close;? :D
12:00 < rioter> SomeoneWeird: was 100$ or something last year
12:01 <@tuhoojabotti> I think you mean callback
12:01 <+SomeoneWeird> oh, awesome
12:01 < timoxley> tuhoojabotti nope
12:01 < timoxley> tuhoojabotti that should do it
12:01 <+SomeoneWeird> tuhoojabotti, var applisten = app.listen(port); applisten.close()
12:01 < rioter> may be cheaper because of breakpoint
12:01 <+SomeoneWeird> yeah saw that
12:01 <@tuhoojabotti> Yeah
12:01 < timoxley> tuhoojabotti I wouldn't necessarily  steal the function though
12:02 <@tuhoojabotti> timoxley: But where is that from the express guide?
12:02 <@tuhoojabotti> http://expressjs.com/guide.html
12:02 < timoxley> tuhoojabotti express 3 thing.
12:02 <@tuhoojabotti> SomeoneWeird: Yeah redirect(config.base) works, but it kind of defeats the purpose of app.set('basepath', config.base);
12:02 < timoxley> tuhoojabotti don't steal functions from objects you don't own without also binding the function to the original object
12:03 <@tuhoojabotti> timoxley: I'm not.
12:03 <@tuhoojabotti> I'm installing Vista service pack 2
12:03 < timoxley> tuhoojabotti self.close = app.listen(port).close;
12:03 < timoxley> you're changing the value of `this` inside the close call
12:04 <@tuhoojabotti> That was a joke.
12:04 < timoxley> might not have any effect
12:04 <@tuhoojabotti> It probably wouldn't work.
12:04 <+SomeoneWeird> lol
12:05 <@tuhoojabotti> I just do self = listener = app.listen and then this.listener.close();
12:05 < timoxley> tuhoojabotti it probably would. just safer to bind it
12:05 < timoxley> tuhoojabotti convention seems to be to call 'listener', 'server'
12:05 < timoxley> but whatever
12:05 <@tuhoojabotti> but yeah the problem
12:06 <@tuhoojabotti> The redirect doesn't work
12:06 <@tuhoojabotti> it used to redirect to basepath when "home" worked
12:07 <@tuhoojabotti> meh I'll just replace it with config.base
12:07 < timoxley> tuhoojabotti var home = config.base
12:07 <@tuhoojabotti> This project has to work by thursday \o/
12:07 <@tuhoojabotti> timoxley: Sure, that would work, until I move these routes away from this module.
12:09 < timoxley> tuhoojabotti then inject them. var home = module.exports.home; in this file
12:09 < timoxley> then something like var webUI = new WebUI(); webUI.home = routes.home;
12:11 <@tuhoojabotti> timoxley: I'm pretty use you can save stuff in app
12:11 < timoxley> tuhoojabotti yep you can do that too
12:12 < timoxley> I just don't like having to go through a getter function
12:12 <@tuhoojabotti> that's true
12:13 < cryptopsy> pecke01: it installs but then my scirpt still cant find the module
12:13 < cryptopsy> also i have this weird module 
12:13 < cryptopsy> âââ
12:14 < cryptopsy> indeed npm shows socket.io installed
12:14 < cryptopsy> â âââ¬ socket.io-client@0.9.8 
12:14 < cryptopsy> i have no idea where the other modules come from, but i dont remember installing them
12:14 < cryptopsy> â   âââ uglify-js@1.2.5 
12:14 < cryptopsy> â   â âââ tinycolor@0.0.1 
12:14 < cryptopsy> ^ for example
12:15 <@deoxxa> you know you're pasting garbage characters, right?
12:15 < cryptopsy> yea those 'a's
12:15 < cryptopsy> npm give me that output
12:15 < npmbro> cryptopsy: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20give%20me%20that%20output
12:15 < cryptopsy> npmbro: which part
12:15 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm install | npm stats | npm help | npm node | npm credits
12:15 <@deoxxa> lol
12:16 < cryptopsy> u want me to read npm doc, but then dont specify section and ur refernece isnt even the official url?
12:16 <@deoxxa> cryptopsy: it's a bot.
12:18 < cryptopsy> socket.io is in 'node-modules' folder int the dir i run node from
12:20 <@deoxxa> wrong
12:20 <@deoxxa> node_modules
12:22 <@Nexxy> milani, lol thanks ;3
12:29 <@Nexxy> what are people using to terminate SSL with node?
12:29 <@Nexxy> nginx/stunnel/stud/???
12:29 <@Nexxy> or just https
12:29 <@Nexxy> module
12:31 -!- Nexxy changed the topic of #Node.js to: http://nodejs.org| Node.js is a JavaScript platform for fast, scalable network applications. | Node.js is kosher and halal, made of 100% pure rainbows; it is scripting beyond your wildest dreams of avarice.
12:31 -!- Nexxy changed the topic of #Node.js to: http://nodejs.org | Node.js is a JavaScript platform for fast, scalable network applications. | Node.js is kosher and halal, made of 100% pure rainbows; it is scripting beyond your wildest dreams of avarice.
12:33 < rvagg> Nexxy: have you listened to the latest NodeUp? lots about SSL in there
12:33 < bnoordhuis> Nexxy: nginx/apache or simply require('https')
12:34 <@Nexxy> rvagg, no; just listened to 23 earlier though
12:34 < bnoordhuis> Nexxy: why do you ask?
12:34 < rvagg> listen to 24, good stuff
12:34 <@Nexxy> bnoordhuis, well right now I'm just using bouncy 
12:34 <@Nexxy> but I'm just wondering what people are doing in production
12:34 < rvagg> mikeal says he's using stud and is pretty happy with it
12:34 <@Nexxy> https bouncy -> http internal
12:35 < bnoordhuis> Nexxy: come to think of it, at c9 ssl terminates at the (hardware) load balancer
12:35 <@Nexxy> hm
12:36 < rvagg> sounds like voxer may be using node native but it's a pain point for them
12:36 <@Nexxy> bnoordhuis, hardware as in crypto cards?
12:37 < AviMarcus> google claims that ssl takes negligible cpu power
12:37 <@Nexxy> AviMarcus, right; I was about to mention that
12:37 <@Nexxy> "SSL is no longer computationally expensive"
12:37 < bnoordhuis> Nexxy: hardware as in one of this dull grey boxes that sits in a data center
12:37 <@Nexxy> bnoordhuis, do you know how it works? or is it just an ssl black box?
12:38 <@Nexxy> I guess I'm mostly just curious, what I'm doing now seems to work just fine for this scale
12:38 < bnoordhuis> Nexxy: i think it's one of those f5 bigip load balancers that are part asic, part linux server
12:38 < mmalecki> we have no problems with terminating SSL on our node load balancers
12:38 < bnoordhuis> Nexxy: it's probably overkill if you serve only a moderate amount of traffic
12:39 <@Nexxy> bnoordhuis, oki right, asic
12:39 <@Nexxy> yeah. definitely not there yet
12:39 <@Nexxy> bnoordhuis, thanks :)
12:39 < bnoordhuis> my pleasure :)
12:40 <@Nexxy> mmalecki, https://gist.github.com/2070387
12:40 <@Nexxy> lol
12:40 < bnoordhuis> Nexxy: one last thing, if you're hosting at aws, i think elastic load balancing lets you do ssl offloading as well
12:40 < mmalecki> Nexxy: lol
12:40 <@Nexxy> bnoordhuis, ooooh
12:40 <@Nexxy> I'm not but I might look into that now
12:41 <@Nexxy> stickied, ty!
12:41 < mmalecki> Nexxy: host on nodejitsu, we do it for you :)
12:42 < rvagg> no spdy on aws yet sadly
12:44 < Viehzeug> someone here, who is really into zip, zlib, arm-zip? (or knows a place on freenode where to find such people?)
12:45 < Viehzeug> adm-zip*
12:47 < Gizmodesbois> Is there someone here who can help me about fs.watch? My script is returning datas multiple times when using fs.watch with fs.readFile on an XML update .
12:48 <@Nexxy> Gizmodesbois, happens to me too
12:48 <@Nexxy> just put a setTimeout on it and wait for a few 100 ms
12:48 <@Nexxy> lol
12:52 < abraxas> is it me or is npm.org not really working?
12:52 <+SomeoneWeird> its really not
12:53 < circlicious> anyonje using stylus+nib
12:53 < slide> http://downforeveryoneorjustme.com
12:53 < slide> :D
12:53 < abraxas> :) but it's not completely down
12:53 < abraxas> just, search not really responsive
13:25 < milani> Nexxy, Node.js is kosher and *halal*?!! :D
13:26 <@Nexxy> milani, that's what they say
13:27 < milani> Nexxy, I'm muslim;)
13:27 <@Hodapp> milani: where are you?
13:27 < milani> at home!:D
13:27 < milani> Tehran.
13:28 < milani> Nexxy, shared your interesting topic in twitter, didn't know ur account to mention.
13:29 <@Nexxy> lol milani it's not my topic I just set it back to what it was previously
13:29 < milani> oh!
13:29 < milani> so I feel good that I didn't mentioned u:))
13:29 <@Nexxy> I am @nexxylove though, at any rate
13:29 <@Nexxy> yes lol I wouldn't want to take credit for it
13:32 < jetienne> any deuglifier of stacktrace ? exception trace arent too readable :)
13:36 < milani> Hodapp, why did u ask?!
13:56 < merpnderp> How much faster is it to develop a site using a framework like Express than to use a frontend framework like Backbone?
13:57 <@tuhoojabotti> merpnderp: For ultimate speed use BOTH
13:57 <@tuhoojabotti> ":D"
13:58 < merpnderp> Bah, bad connectivity. If anyone responded I lost my connection for a second. Can you please repeat?
13:59 < simpan>  <@tuhoojabotti> merpnderp: For ultimate speed use BOTH
13:59 < simpan> ;)
13:59 <@tuhoojabotti> :P
14:01 < NuZZy> I want to give you some chicken sandwiches.
14:02 <@kranius> please do
14:02 <@tuhoojabotti> Where can I get the socket.io client side script
14:03 < merpnderp> simpan: hah. But I mean speed of development, not of serving pages. Which would allow someone who knows what they are doing to complete more projects faster?
14:03 < merpnderp> tuhoojabotti: I guess I meant you :P
14:04 <@tuhoojabotti> oh
14:04 <@tuhoojabotti> it's automagic
14:05 < shanse> it's going to be hard to develop a site with backbone alone
14:05 < NuZZy> Anyone else here cant stand web frameworks and are way too obsessive like me and have to make their own?
14:05 < merpnderp> shanse: Well I know you need something like Express or Connect to handle your webservice calls. But with backbone you won't be using much templating or fancy routing.
14:06 <@Nexxy> NuZZy, I believe that's called NIH syndrome :)
14:07 < NuZZy> I have been diagnosed :D
14:07 <@Hodapp> NuZZy: I can't stand web frameworks!
14:07 < NuZZy> The whole needing to learn the framework seems like it's just as much effort as recreating it yourself (But less fun)
14:08 <@Hodapp> NuZZy: sadly, with a lot of frameworks this seems to be the case.
14:08 <@Hodapp> effort saved by abstraction < effort to learn abstraction
14:09 <@Nexxy> you're using the wrong frameworks then
14:09 < NuZZy> perchance
14:10 < NuZZy> and lol @ our names' similarities.
14:10 <@Nexxy> ^5!
14:10 <@yawnt> ^6!
14:10 <@yawnt> im back
14:11 <@yawnt> but i'm not done with the dishes yet
14:11 <@yawnt> :(
14:11 <+SomeoneWeird> lol
14:11 <+SomeoneWeird> took a while, aye
14:11 < qballer> I plane on writing a distributed system which will use node.js and the browser. I wonder which data structure (generic) as possible can I use. I have ideas based on Java land where I come from but they might be wrong. Any suggestions?
14:11 < qballer> the () have no sense 
14:12 < NuZZy> data structures?
14:12 < NuZZy> like JSON?
14:12 < qballer> Something in the lines of a generic buffer.
14:12 < qballer> bytebuffer from NIO is all I can think of. 
14:13 < NuZZy> I'm a relative newb, maybe someone else in here has an idea.
14:13 < qballer> I'm hoping someone will, thats why I'm here.
14:14 <+SomeoneWeird> json will be the easiest
14:14 < NuZZy> What do you mean exactly by distributed system?
14:19 < qballer> NuZZy: A platform which divides the work load to several devices. 
14:19 < NuZZy> Ooh, notincing there are some node.js irc bots... I have a botnet of TCL eggdrops flopping around all over the place. Wonder if node would make it less bloaty
14:20 < NuZZy> qballer, yeah I figured as much
14:20 <+SomeoneWeird> qballer, so a loadbalancer?
14:21 < NuZZy> Well I am assuming it's to allow the application to scale with high load from massive user activity
14:21 < qballer> Not exactly, it's more generic than that. Something in the lines of seti@home project.
14:21 < NuZZy> So yeah, JSON would work perfectly
14:21 < deedubs> qballer: json, http://msgpack.org/
14:21 < NuZZy> pretty sure I have heard this is how these setups work
14:22 < deedubs> higher level something like http://binaryjs.com/
14:22 < qballer> JSON is a key value text based data structure. Uses a hash map or hash tables.  
14:22 < NuZZy> deedubs knows whats up.
14:22 < qballer> That looks cool 
14:22 < qballer> Thanks deedubs 
14:24 < qballer> This node.js stuff is exciting 
14:24 <@yawnt> the almighty dish mountain has been defeated
14:24 <@yawnt> hurray
14:24 < qballer> Does anyone know a better tutorial than this: http://www.nodebeginner.org/
14:25 < qballer> something that incorporates express maybe? 
14:25 < NuZZy> the youtube video on the nodejs.org website was pretty amusing
14:25 < NuZZy> as far as beginnings go..
14:25 < deedubs> qballer: #express is pretty active
14:25 < NuZZy> well, the express website has somewhat of a tutorial
14:26 < qballer> Yea, I saw that as a teaser to the technology, I'm going to do my final year CS project using node.js technologies.
14:26 < qballer> Got to keep coding. 
14:26 < ansolas> I am currently trying to get socket.io running
14:26 < NuZZy> Yes you do
14:26 < qballer> ttyl
14:26 < NuZZy> bye
14:27 < ansolas> but i looks like that the node_module path is not properly set 
14:27 < deedubs> qballer: http://nodetuts.com/
14:27 < NuZZy> you're failing to require() the socket module ansolas ?
14:27 < ansolas> ther server is running 
14:27 < ansolas> what fails here is the script import on the client side
14:28 < strk> is it possible to access the list of timers known by the VM ?
14:28 < strk> I'm facing an Express-based server application that degrades in performance as more requests arrive, and wondering if it has to do with leaked timeouts
14:28 < ansolas> i m trying this tutorial right now: http://psitsmike.com/2011/09/node-js-and-socket-io-chat-tutorial/
14:28 < ansolas> i converted the server call to 3.0 and its working 
14:29 < ansolas> but the import of socket.io.js on the cleint side fails
14:29 < merpnderp> Does node offer a way to use delegation and interfaces in JS?
14:29 < ansolas> teh script src points to : src="/socket.io/socket.io.js"
14:30 < NuZZy> that src should be absolute
14:30 < ansolas> that why i assume that the path of node_modules are not set properly here
14:31 < ansolas> so the path should be something like this: http://localhost:3000/node_modules/socket.io/socket.io.js ?
14:31 < NuZZy> yeah
14:31 < shwaiil> hi
14:31 < ansolas> ok i try that 
14:32 < NuZZy> I'm assuming socket.io.js is the correct file; haven't delt with it so wouldnt know
14:33 < shwaiil> I'm testing node.js for my first time. Im following youtubes "Introduction to Node.js with Ryan Dahl". After trying curl http://localhost:800/ it stopped working, I'm getting curl (7) couldn't connect to host. I don't have a firewall. Any tip ? Can I restart node.js ?!
14:33 < shwaiil> Tks
14:33 < NuZZy> port 800? did you mean 8000?
14:33 < shwaiil> NuZZy: tks for looking, yes 8000, sorry
14:34 < ansolas> "NetworkError: 404 Not Found - http://localhost:3000/node_modules/socket.io/lib/socket.io.js"
14:34 < ansolas> same 
14:34 < mickhansen> ansolas, path should be without node_modules
14:34 < NuZZy> and if that fails
14:34 < NuZZy> try the directory path from the os
14:35 < cryptopsy> deoxxa: totally irelevant
14:35 < NuZZy> C:/herp/derp/node_modules etc. etc.
14:35 < ansolas> "NetworkError: 404 Not Found - http://localhost:3000/socket.io/lib/socket.io.js"
14:35 < ansolas> socket.io.js
14:35 < bcave> hello. i want to build a client-side asynchronous module to use for logging to my node server
14:35 < ansolas> ok 
14:35 < ansolas> i try
14:35 < mickhansen> or lib, iirc socket.io serves the static file on its own if you set it up with express
14:35 < mickhansen> so its just /socket.io/scoket.io.js
14:36 < bcave> i am using expresss, and have created a service endpoint, wondering if there are any client frameworks that I could use to log errors to the servcie?
14:36 < ansolas> i tried that but it fails
14:36 < shwaiil> How to restart node ? Tks
14:36 < ansolas> so there must be something wrong ? I am on windows so maybe something with path setup?
14:37 < NuZZy> shwaiil, in windows terminate the process and start it up again
14:37 < bcave> e.g. i am using jquery on the client, and would like to do expose $.log.info("{'message':'foo'}") 
14:37 <@MerlinDMC> ansolas, express2 or express3? ... the routing went wrong some time ago in express3 ...
14:37 < mickhansen> ansolas, well, its not a static path really - socket.io sets up a GET request on the http listener and serves the file when you hit that path
14:37 < ansolas> express3
14:37 < bcave> any suggestions?
14:37 < shwaiil> NuZZy: on MacOsx it should be identical, terminating the process as well ?
14:37 < mickhansen> oh yea, i dont know about express3 sorry
14:38 < ansolas> ok what do i need to configure that i can use /socket.io/socket.io.js
14:38 < NuZZy> yeah terminate and start it up again. If there is a way to make node restart I dont know it
14:38 < ansolas> ?
14:38 < NuZZy> beyond writing a script to do it
14:38 < shwaiil> NuZZy: very strange why it suddenly stopped working, I just did that same command with curl -i http://localhost:8000 from here stopped working :X
14:38 <@MerlinDMC> ansolas, if you don't need express3 just rty once with express2 or ask some express3 + socket.io dev :P
14:38 < ansolas> thank you for the answer
14:40 < cryptopsy> why won't this fucking shit load it's modules
14:40 < cryptopsy> actually, i just got it to work 
14:40 < cryptopsy> reinstalled npm
14:40 < NuZZy> cryptopsy, doesn't like being yelled at.
14:41 < NuZZy> hah
14:41 < cryptopsy> i like how it says the modules are started
14:41 < cryptopsy> that's good for the user
14:41 <@MerlinDMC> ansolas, https://github.com/LearnBoost/socket.io/issues/843
14:42 < ansolas> puh thats happy to hear that the error is not between my ears
14:43 <@timeturner> var app = express(); var server = http.createServer(app).listen(3000); io.listen(server);
14:43 <@timeturner> very simple
14:43 < ansolas> running the server isnt the issue
14:43 <@timeturner> what's the issue
14:43 < ansolas> its getting the server.io.js on the client
14:44 < NuZZy> hes trying to include the script 
14:44 <@timeturner> last time I had problems with 404s on requesting the client-side js file was due to how I set socket.io to listen for requests
14:44 < ansolas> whcih resides in: - node_modules/socket.io/lib/socket.io.js"
14:44 < ansolas> exactly as this: 
14:45 < ansolas> https://github.com/LearnBoost/socket.io/issues/843
14:45 < dereknelson> Hello all, I'm looking for a build process for removing CommonJS calls and putting things in one file for use in browser.  Similar to what Ember does, anyone have some advice?  Thanks in advance.
14:45 < ansolas> bbl , refueling with coffee now
14:45 < mickhansen> ansolas, what timeturner said is the same as the solution that issue offers
14:46 < mvta> morning mates
14:46 < mvta> I'm completely new with Node.js
14:47 < mvta> I'm looking for frameworks. What about that?
14:48 < mvta> weeee
14:50 < guest87155> ciao
14:50 < guest87155> !lista
14:55 <@slickplaid> this is just odd... I have a module in one file returning a function, and the same module being required in another file under the same app returning {} (blank object)
14:56 < jgordon> really simple question for folks.  I'm having issues using Connect.session in my express app.  I think I have it configured correctly, but request.session is undefined in my routers.  Someone take a quick look?
14:56 < jgordon> here's my app config:  https://bitbucket.org/jgordon/expresstest/src/030237445a54/app.js
14:56 < jgordon> and here's where i'm using it: https://bitbucket.org/jgordon/expresstest/src/030237445a54/routes/main.js
14:57 < jgordon> i'll give the first person to answer this a puppy. i swear to god.
15:01 < dominictarr> jgordon, looks right, are you sure it's meant to create request.session?
15:01 < jgordon> dominictarr: I think so.  Per the docs on the express guide
15:01 < jgordon> obviously i'm wrong, of course
15:02 < jamygolden> Hey guys, do any of you know what the 'curl' equivalent in nodejs is? I'm trying to do an external http post request but I'm not finding anything on google. I'm probably searching for the wrong thing though
15:02 < jgordon> dominictarr: http://expressjs.com/guide.html#session-support indicates it should work.
15:02 < bnoordhuis> jamygolden: request (module)?
15:02 < dominictarr> jamygolden, mikeal/request pretty much
15:02 < jgordon> mind you, i'm doing a little trickery with modularizing my routes code
15:02 < jamygolden> thanks guys :D
15:03 < dominictarr> yeah, agreed.
15:03 < dominictarr> what about setting maxAge ?
15:03 < dominictarr> does it set set-cookie if you hit the app with curl?
15:04 < dominictarr> oh yeah, the routes looks a bit weird... does it fix it if you define them in the same file?
15:05 < jgordon> dominictarr: curl only returns html
15:05 < jgordon> no header cookie setting action
15:05 < dominictarr> curl -v
15:05 < jgordon> ahh
15:06 < dominictarr> jgordon, you are not setting exports in routes
15:06 < jgordon> do i need to?
15:06 < jgordon> the routes work because i've globalized the app variable
15:06 < jgordon> so i set the routes within the main.js file itself
15:06 < dominictarr> ah.... so you have
15:06 < jgordon> no need to export
15:07 < jgordon> i'm verrrry new to node/express, so i could be getting ahead of myself
15:08 < dominictarr> well, there is no need to go routes = require('./routes')
15:08 < jgordon> dominictarr: this is the output from my curl call
15:08 < jgordon> http://pastebin.com/GXr4xT1b
15:08 < ansolas-coffee>  re
15:08 < ansolas> ok i have looked at the https://github.com/LearnBoost/socket.io/issues/843 now
15:08 < jgordon> true, i could have just said require(), i guess
15:08 < ansolas> its not related to my issue since my socket.io server is just running fine
15:09 < ansolas> I just dont the the socket.io.js loaded on the cleint
15:11 < dominictarr> jgordon, here is a crazy idea: try putting require('./routes') after configure
15:12 < jgordon> dominictarr: i created a test route within app.js -- still no love
15:12 < jgordon> okay, i'll give it a go
15:13 < strk> can I pass a switch to control when to start the GC ?
15:13 < strk> or, any other way to control it ?
15:13 < mvta> hey hey
15:13 < jgordon> dominictarr: ains a puppy!
15:13 < mvta> mates
15:13 < jgordon> wins, that is
15:13 < mvta> what is the most used Node Framework?=
15:13 < dominictarr> just what I need.
15:13 < jgordon> yes, placing the require('./routes) after my config worked
15:14 < jgordon> why the hell would that be, i don't know
15:14 < dominictarr> must be magic
15:14 < jgordon> thanks
15:14 < dominictarr> my guess that calling get before routes added it to the front of the app.
15:15 < dominictarr> before session
15:17 < jgordon> interesting.  and it seems like any subsequent app.[verb] call was borked for session too
15:19 < mvta> jgordon, dominictarr
15:19 < mvta> are you ther?
15:19 < mvta> there*
15:19 < jgordon> yah
15:19 < ansolas> solution to my issue: http://stackoverflow.com/questions/10191048/socket-io-js-not-found
15:20 < Owner> why cannot i not return any values or get any data out of this function  http://pastebin.com/GNrERkpn
15:21 < Owner> the values print out correctly in the innermost, but they cannot be returned or even set to a variable thats returned
15:21 < Owner> it is a simple Integer
15:22 < jgordon> i think its an async error, Owner 
15:22 < jgordon> there's nothing listening to your inner function, so nothing is returned
15:22 < jgordon> or, there's nothing to listen to the result
15:22 < Owner> can you show me what you mean
15:23 < Owner> i just need to return a number
15:23 < jgordon> could you pass in a callback function to getData()
15:23 < jgordon> e.g:  getData(field,callback);
15:23 < Owner> i could try
15:23 < jgordon> then, in your inner function, you can exec the callback with your return int
15:24 < dominictarr> mvta I'm here
15:24 < Owner> jgordon~# i see...
15:25 <+SomeoneWeird> Owner, http://pastebin.com/pY6U1u66
15:25 < Owner> :D
15:25 < mvta> dominictarr: I'm looking for info about frameworks
15:25 < NuZZy> why cant ecmascript and python have a baby
15:25 < jgordon> SomeoneWeird: being 1 day into nodejs, don't most database api's already have callback functionality?
15:25 <+SomeoneWeird> also i dont see why you need a transaction just for a select statement
15:25 < mvta> could anybody help me with that?
15:25 <@wavded> any reason why you'd want to return scope.Close(Undefined()); instead of just not returning? (isn't undefined assumed)
15:26 <+SomeoneWeird> jgordon, yerp
15:26 < Owner> SomeoneWeird~# my first time testing localstorage
15:26 <+SomeoneWeird> allgood
15:26 < Owner> this is a table vs just a .get('field');  is that what you were talking about?
15:29 < Owner> SomeoneWeird~# thanks...i feel so dumb
15:29 < dominictarr> mvta I disapprove of frameworks, favor modules.
15:30 < mvta> dominictarr: ahmmm... why?
15:30 < dominictarr> more freedom
15:30 <@CIA-93> node: isaacs v0.8 * rb3cf3f3 / (6 files in 3 dirs): Report errors properly from --eval and stdin - http://git.io/JFvDtw
15:31 < dominictarr> each framework has a bag of opinions about how things should be done, 
15:31 < cryptopsy> what's wrong with this line 		res.end(fs.readfileSync('./index.html', 'utf8'))
15:31 <@isaacs> dominictarr: re eschewing 'end' for .ended - I'd rather get the "MUST" interface away from boolean flags, and towards purely using methods and events.
15:31 < cryptopsy> ReferenceError: res is not defined
15:31 < dominictarr> I prefer modules that just do their thing well
15:31 <@wavded> dominictarr: agreed
15:31 <@isaacs> cryptopsy: assuming that res is in an http server connection handler function?
15:31 < mvta> uhm... ok
15:32 < dominictarr> mvta don't listen to me. just use express.
15:32 < dominictarr> express is fine.
15:32 < mvta> XDDD
15:32 < cryptopsy> isaacs: yes
15:32 <@isaacs> mvta: i think the issue is that "framework" is kind of a code-word for "a really big module that does tons of stuff"
15:32 <@isaacs> mvta: which is not a good module, usually.
15:32 < mvta> I saw much frameworks...
15:32 <+SomeoneWeird> cryptopsy, you sure it exists in that context?
15:33 <@isaacs> mvta: express is pretty small for a framework.  but it DOES do way more than one thing.
15:33 <@wavded> express is getting more modular and is quite small compared to other frameworks imo
15:33 < cryptopsy> var server = http.createServer(
15:33 < cryptopsy> 	function(request,response){
15:33 < cryptopsy> 		response.writeHead(200,{'Content-Type':'text/html'});
15:33 < cryptopsy> 		res.end(fs.readfileSync('./index.html', 'utf8'))
15:33 <@isaacs> cryptopsy: do not use synchronous fs io in an http server.
15:33 <@isaacs> cryptopsy: that's a bad idea.
15:33 < mvta> uhm Now.js is a module?
15:33 < dominictarr> express, or rather connect, is actually pretty small, and has it's internal consistencies that make sense.
15:33 < mvta> right?
15:33 <+SomeoneWeird> cryptopsy, -> http://pastie.org/
15:33 <+SomeoneWeird> yes mvta 
15:33 <@isaacs> cryptopsy: while the fs is reading the file from disk, it's not serving new connections.
15:33 < mvta> dominictarr: and... what about canvas + node.js 
15:34 <+SomeoneWeird> canvas as in..?
15:34 < mvta> I did a chat with 12 lines...
15:34 <@isaacs> cryptopsy: also, you'er reading the same buffer over and over again, why?  why not just read it up front at the start, and then serve it from memory?  it'll be way faster.
15:34 < mvta> xDDD
15:34 < dominictarr> canvas, as in drawing in the browser?
15:34 < mvta> node.js is crazy
15:34 < mvta> yes
15:34 < mvta> videogames with node.js
15:34 <+SomeoneWeird> if you use node-canvas
15:34 <+SomeoneWeird> then yes
15:34 <+SomeoneWeird> otherwise no
15:34 < mvta> node-canvas is a module?
15:34 < dominictarr> mvta, NO! node.js is the only sane thing in a crazy world.
15:34 <@isaacs> cryptopsy: var i = fs.readFileSync('./index.html'); http.createServer(function(q,s){s.statusCode=200;s.setHeader('content-length',i.length);s.end(i)}).listen(PORT)
15:34 <+SomeoneWeird> mvanek, https://github.com/learnboost/node-canvas/
15:35 < dominictarr> mvta, the canvas stuff is gonna be in the browser, pretty much.
15:35 < mvta> dominictarr: maybe you are right but I'm crazy right now...
15:35 <@isaacs> cryptopsy: also, the 'utf8' arg is super wrong there.  you're reading it as a buffer, converting to a string, then converting BACK to a buffer to send it down the wire, but you never take advantage of its string-ness, so there's no benefit.
15:35 < dominictarr> mvta, don't worry you'll get the hang of it.
15:35 < strk> is --expose-gc switch of node-0.8 supposed to prevent calls to GC unless explicitly invoked ?
15:35 < mvta> SomeoneWeird: thank you mate
15:35 <+SomeoneWeird> either what isaacs said cryptopsy or goto http://expressjs.com/guide.html and "find" "static", express can automatically serve static files like that
15:35 < strk> (beacuse I still see GC stats in --prof output)
15:36 <@isaacs> strk: it still runs GC, it just *also* runs it when you call gc()
15:36 < dominictarr> isaacs, re: 'end'/ended indeed. I just wanted to make the crazy suggestions while it's still worth considering them.
15:36 <@isaacs> dominictarr: that's good :)
15:36 < strk> any way to control how often it is run ? 
15:36 <@isaacs> dominictarr: now's the best time to do that :)
15:36 < dominictarr> indeed.
15:37 <+SomeoneWeird> NO
15:37 <+SomeoneWeird> WHO CHANGED THE TOPIC
15:37 <+SomeoneWeird> :(
15:37 <@isaacs> there's still a few more months while we're messing around with it
15:37 -!- isaacs changed the topic of #Node.js to: node.js WHO CHANGED THE TOPIC!?!?!
15:37 <+SomeoneWeird> it was YOU
15:37 < strk> I'm on my 2nd week of profiling for an application being ported from node-0.4 to node-0.8 where the GC seems to be taking 10x of CPU time
15:37 < mvta> SomeoneWeird: but... do you think that I should use node-canvas for a videogame with sockets ?
15:37 <@isaacs> SomeoneWeird: i just changedit just now.  i don't know who put the halal back
15:37 <+SomeoneWeird> ._.
15:37 -!- Topic for #node.js: node.js WHO CHANGED THE TOPIC!?!?!
15:37 -!- Topic set by isaacs [~isaacs@173-203-97-118.static.cloud-ips.com] [Mon Jul 30 15:37:13 2012]
15:38 <+SomeoneWeird> mvta, no, use something like socket.io to push data to the client and have them draw it with clientside js
15:38 < strk>     355    2.6%  void v8::internal::Code::CodeIterateBody<v8::internal::StaticMarkingVisitor>(v8::internal::Heap*)
15:38 < dominictarr> mvta no, node-canvas is for rendering canvas drawings to png/etc on the server side
15:38 < strk> with GC:    2198   16.3%
15:38 < dominictarr> to serve to browsers that don't have canvas, 
15:38 < mvta> okok
15:38 < dominictarr> that isn't gonna make sense in games.
15:38 < retrobaby> are there any good resources to start libuv? uvbook is still kinda under construction and ryan's screencast is about a year old.
15:39 < retrobaby> i can just reaad the source...
15:39 <@wavded> retrobaby: yeah checkout uv.h
15:39 < dominictarr> that makes more sense for graphs for business apps for boring people who don't want to upgrade their browsers
15:39 <@radmiraal> nice list of admins in here ;) and SomeoneWeird it was nexxy
15:39 <+SomeoneWeird> that dam Nexxy 
15:39 < retrobaby> wavded: yeah, thats what i thought, thanks
15:39 < dominictarr> you are making games, for fun people who have decent browsers!
15:40 < dominictarr> but, yes, you should use sockets.
15:40 < mvta> I did something, two years ago with canvas
15:41 < mvta> It was decent
15:41 < mvta> platform engine
15:41 < dominictarr> there are also some libs that wrap canvas and make it easier
15:41 < dominictarr> like easle.js
15:41 < dominictarr> easel.js i mean
15:42 < mvta> I would like to try box2d for platform game
15:45 <@isaacs> dominictarr: i don't know if you saw, but i added r.unpipe() in readable-stream
15:45 <@isaacs> dominictarr: i'm a bit worried that supporting multi-pipe automatically will degrade perf, but i'll have to check on that
15:55 < dominictarr> isaacs, I DID SEE THAT
15:55 < dominictarr> I don't really see how you could do multi piping elegantly with a read() function
15:55 < dominictarr> you'd have to know who is calling read, wouldn't you?
15:57 <@isaacs> dominictarr: isntead of this._dest=src, you do this._dest=[src,src2,src3]
15:57 <@isaacs> dominictarr: then instead of this._dest.write(..) you do this._dest.forEach(..)
15:57 <@isaacs> dominictarr: then listen to the drain event of each one that returned false...
15:58 <@isaacs> yeah, it's a lot of bs work for an edge case that is pretty rare.  should be in a dedicated tee-stream
15:58 < dominictarr> oh, right
15:58 < dominictarr> agreed.
15:58 <@isaacs> the nice thing about this is that i can call r.pipe(dest) and then some time later, r.pipe(otherDest) and it'll automatically unpipe
15:58 < dominictarr> since pipe is much simpler in this model, I'm much less worried about people rewriting it and breaking stuff.
15:58 <@isaacs> yeah
15:59 <@creationix> isaacs, so did we decide on a stream API yet?
15:59 <@creationix> I've been busy all weekend
15:59 <@isaacs> creationix: yeah, it's coming together
15:59 <@prettyrobots> isaacs: +1 tee stream
15:59 <@creationix> is it close to what you proposed before?
15:59 < strk> can I get a timer without creating a temporary Date object ? 
15:59 < strk> ala getTimer() available on Flash VMs ?
16:00 < strk> (millisecs since VM start...)
16:00 < strk> ms resolution would be fine
16:00 < dominictarr> strax, Date.now()
16:00 < dominictarr> just return milliseconds since unix time
16:00 < strk>      TypeError: Object Mon Jul 30 2012 18:00:47 GMT+0200 (CEST) has no method 'now'
16:00 < dominictarr> oh, you probably want process.hrtime()
16:01 < strk> oops, sorry
16:01 < strk> Date.now() was also good
16:01 <@isaacs> creationix: https://github.com/isaacs/readable-stream
16:01 < dominictarr> hrtime is nanoseconds, it's good for benchmarks, but not as a clock.
16:02 < be5invis> Creationix will attend "hu.js" in shanghai?!
16:02 < be5invis> http://conf.cnodejs.net/speakers
16:02 < be5invis> saw him here
16:03 <@creationix> be5invis, I'm trying to, working out vesa and travel stuff
16:04 < be5invis> wow
16:05 <@creationix> be5invis, do you live there?
16:05 < be5invis> creationix: I live in China, but in Anhui, not Shanghai
16:06 < Owner> ...chinese on the internet??
16:06 < be5invis> Maybe I will attend the conf :)
16:06 < be5invis> Is a Chinese being on the Internet strange?
16:06 < Owner> how did you get in here
16:06 <@creationix> be5invis, what language should I read up on? manderin or the shanghai local dialect?
16:07 < Owner> be5invis~# maybe not as strange as north koreans
16:07 < jcrew> creationix: people in other countries hate it when you try to learn their language
16:07 < be5invis> Mandarin. Shanghai dialect(上海话) is strange nowdays.
16:07 < context> creationix: whichever will help you take over the world
16:07 < Domenic> jcrew: I think they appreciate if you know the basic stuff like "please" "thank you" "i'm sorry" "hello" "nice to meet you".
16:08 < be5invis> instant teach:
16:08 < jcrew> Domenic: no they don't, they hate it 
16:08 < be5invis> "please" -- 请 (Qing)
16:08 <@creationix> context, really, my experience is people are thrilled you took time to learn their language
16:08 <@creationix> not that I can learn mandarin in a month
16:08 < Domenic> jcrew: I guess everyone in Japanese was just too polite to tell me how much they hated it :P
16:08 < Domenic> *Japan
16:08 <@creationix> but I did learn spanish fluently when I worked on socal (anaheim)
16:08 < jcrew> negative, how would you like it if someone came into your store and said "thank you" to you
16:08 < be5invis> Chinese are friendly to forigners who can speak in Chinese :>
16:08 < jcrew> absolutely pissed, you'd be
16:08 < context> i need to learn a new language already :/
16:09 < be5invis> Chinese is not easy to learn. Trust me.
16:09 < jcrew> you'd be so angry they'd say no gei jin
16:09 < jcrew> gai jin*
16:09 < be5invis> There are over 6000 different "letters"...
16:09 <@creationix> be5invis, I kow, I had friends who learned it
16:09 < Owner> how did you get outside the firewall
16:09 < be5invis> creationix: s/kow/know/
16:09 <@creationix> the closest was I learned a little vietnamese 
16:10 < be5invis> Outside?
16:10 < be5invis> IRC is not blocked at all.
16:10 < jcrew> Domenic: haha, i loved japan and they did appreciate the little bit i was able to say
16:10 < jcrew> creationix: ma diet
16:10 <@creationix> be5invis, heh, I guess I should learn how to spell english first ;)
16:10 <@creationix> jcrew, not too much
16:10 < be5invis> creationux: where are you come from?
16:11 <@creationix> I'm from Texas
16:11 <@creationix> so American
16:11 <+Niloc> creationix: English*
16:11 < AviMarcus> opplz
16:11 < AviMarcus> weird, it died.
16:11 <@creationix> AviMarcus, people were abusing it *suprize*
16:11 < zenista> hi, anything i define in main app.js like var abc = require('abc'); is not available in my routes which is included in main app.js and lies in /routes/index.js 
16:12 < AviMarcus> creationix, the process is still running. Weird.
16:12 <@creationix> ops plz
16:12 <@creationix> yeah, dunno
16:12 < be5invis> creationix: your native language might be Spainish :)
16:12 < Owner> ops plez
16:12 < zenista> hi, anything i define in main app.js like var abc = require('abc'); is not available in my routes which is included in main app.js and lies in /routes/index.js 
16:12 < Owner> hi, anything i define in main app.js like var abc = require('abc'); is not available in my routes which is included in main app.js and lies in /routes/index.js 
16:12 < Owner> hi, anything i define in main app.js like var abc = require('abc'); is not available in my routes which is included in main app.js and lies in /routes/index.js 
16:12 < Owner> hi, anything i define in main app.js like var abc = require('abc'); is not available in my routes which is included in main app.js and lies in /routes/index.js 
16:12 <@creationix> be5invis, actually here in north texas there aren't that many mexicans
16:12 < AviMarcus> creationix, it's back if you could op it ;)
16:12 < jcrew> Owner: cool
16:12 <+Niloc> uuuh
16:13 < Owner> jcrew~# indeed
16:13 < jcrew> it shouldn't be
16:14 <@creationix> be5invis, so how many people at the conference will know english?  Will I need a translator for my talk?  (I'm ignorant about china)
16:14 < be5invis> creationix: maybe 50%. Slow down your speech.
16:15 < be5invis> I'm going to talk about, hmmm, altjs languages. You know, I made moescript.
16:15 <@creationix> neat, I wrote the original coffeescript compiler in coffeescript 
16:15 <@creationix> about all that's left of my code is the dsl I made in grammer.coffee
16:16 < AviMarcus> creationix, is that a joke?
16:16 <+Niloc> grammar* >.>
16:16 <@creationix> AviMarcus, joke?
16:16 < be5invis> But attending as a speaker requires enough votes.
16:16 < AviMarcus> how can you write a compiler for a language in the same language?
16:16 < AviMarcus> or do you mean as opposed to a runtime
16:16  * Niloc facepalms
16:16 < Domenic> AviMarcus, that is typically how compilers are written -_-
16:17 <@creationix> AviMarcus, what is GCC written in (A C compiler)
16:17 <@creationix> AvianFlu, it was bootstrapped using the coffeescript compiler written in ruby
16:17 <@creationix> but once it was complete enough to compile itself, it was much easuer
16:17 <@creationix> *easier
16:17 <@CIA-93> libuv: Ben Noordhuis master * r4eccb2e / (include/uv-private/uv-win.h include/uv.h): include: move ssize_t workaround to uv-win.h - http://git.io/UlU5Vg
16:18 < be5invis> // The Moescript compiler is written in JS.
16:18 < AviMarcus> uhm OK. Clearly I skipped all my CS classes.
16:18 <@creationix> AviMarcus, yeah, bootstraping is tricky, but you have to start somewhere
16:18 <@creationix> in the beginning people wrote machine-code by hand
16:19 <@creationix> and it went from there
16:20 < Owner> does anyone program in Ada
16:20 < Owner> anyone *here
16:20 < be5invis> http://conf.cnodejs.net/survey
16:20 < be5invis> vote me please
16:21 <@creationix> be5invis, "死或新生：「altjs」语言的创造与发展" ?
16:21 < be5invis> creationix: Yes.
16:21 < be5invis> The term with "altjs"
16:21 < Owner> the mayge at conf.cnodejs.net says ASDJFI(PWQI#$()%I
16:21 < be5invis> "Belleve Invis（李任之）" is me.
16:21 < Owner> *page
16:21 < be5invis> 陈梓瀚 is my friend.
16:21 < Owner> argg i don thave a shithub account
16:22 < be5invis> He is in MSRA, currently working on a language looks like Haskell.
16:24 <@creationix> lol, the google translation is funny: "Shanghai JS is to invite domestic and foreign JavaScript cattle"
16:25 < Owner> dont get sars
16:25 < blazes816> steakandmilk.js
16:25 < be5invis> I saw English in the survey page.
16:25 < be5invis> "Hu.js is inviting the JavaScritp experts which come from China & International. Welcome to participate in our survey!"
16:27 < Owner> oh sars was developed to only target asians, never mind
16:27 < be5invis> sars has been terminated...
16:28 < be5invis> for 9 years.
16:28 <@creationix> be5invis, I voted for you.  Hopefully I get my travel stuff fixed in time
16:29 <@creationix> we'll see how jetlagged I get.  Shouldn't be any worse than flying from Amsterdam to San Francisco
16:31 < aguai> blah
16:31 < be5invis> It won't be bad. Trust me.
16:32 < be5invis> 阿怪你终于来了啊。
16:32 < ansolas> is there a ide which includes a command prompt and a "run" button for nodejs on windows?
16:33 < ansolas> at best a free version
16:33 < ansolas> i saw webstorm with its excellent plugin 
16:33 < ansolas> but free would be nice 
16:33 < TehShrike1> Most text editors let you assign shortcuts to external commands
16:33 < TehShrike1> I just have TextPad set up to run node on the current file when I hit F5
16:33 < be5invis> I and vczh (that friend I mentioned) are making an editor...
16:34 < Domenic> ansolas: I have heard good things about WebMatrix but couldn't get it working great for me.
16:34 < TehShrike1> It even displays output in a nice little window
16:34 < ansolas> does webmatix has a command prompt ?
16:34 < Domenic> Don't think so
16:34 < be5invis> Implementing IDE-embedded console is hard, especially on windows.
16:34 < tedsuo> Is there a node/express equivalent for jammit?
16:35 < ansolas> is there a alternative console for windows ? the cmd suxx
16:35 < jkevinburton> i need another pair of eyes, can someone look at this code snippet and tell me what I might be doing wrong?  the above code works, but when I comment it out and use the bottom one it doesnt, something to do with the return or done() methods?  http://pastebin.com/Kxcqxv0H
16:35 < be5invis> shell or console window?
16:35 < be5invis> shell => powershell, bash, zsh......
16:35 < be5invis> comsole window => no.
16:35 < ansolas> Command Prompt
16:35 < ansolas> I apologize for teh from term :)
16:36 < ansolas> i jsut waht to be a ble to copy paste , instead of rightclick paste
16:36 < be5invis> vczh is working on impelmenting an alternative console window
16:36 < ansolas> let me google vczh
16:37 < be5invis> Just google vczh. The first one is his blog...
16:37 < be5invis> ... in Chinese.
16:37 < ansolas> http://timboudreau.com/blog/read/NetBeans_Tools_for_Node_js
16:37 < ansolas> this sounds good , but when i install it via the repo i get anoether version not this one
16:41 < dob_> isn't it possible to check indexof with integer values?
16:42 < ansolas> using a text editiors keybaord command sounds like a good idea
16:42 < be5invis> 'map
16:42 < be5invis> of vim
16:43 <+Niloc> dob_: wut?
16:45 < be5invis> An interesting fact: in the conf, the speaker of "让服务器和客户端牵起手来" is only 15 years old.
16:46 < therealkoopa> Can someone explain why JSON.stringify(new Error("Foo"))  is {}?
16:46 < mmalecki> dominictarr: beach?
16:46 < be5invis> Error objects does not have eigenproperties?
16:47 < dominictarr> mmalecki, OKAY SURE!
16:47 < mmalecki> dominictarr: OKAY THEN
16:52 < aguai> blah
16:52 < be5invis> aguai: i saw you.
16:53 < jcrew> aguai: i see you right now
16:53 < aguai> be5invis: hahaha sorry for  the latency of my VPS
16:54 < strk> isaacs: what about --nouse_idle_notification ? shouldn't that prevent automatic run of the GC ?
16:57 < strk> (it doesn't)
16:58 < skiz> I'm having issues installing the zmq module, and I've looked at all of the issues (such as compiler, etc) any help would be appreciated. https://gist.github.com/3d04689ec2b8c0b4f42d
17:00 <@niallo> skiz: sudo port install zmq
17:01 <@niallo> looks like you are missing the native zmq libs
17:03 < Sangam> hi
17:03 < Sangam> hw rya?
17:03 < skiz> niallo: homebrew and 2.2 is already installed
17:05 < mvta> hey
17:06 < mvta> what about node.js and phonegap?
17:06 < mvta> what is the relation between node.js and websockets?
17:06 <@isaacs> strk: no, that just prevents node telling the GC that it's idle now
17:06 <@isaacs> strk: the GC still runs whenever it feels the need to.
17:08  * strk found -- node --v8-options | grep -A1 gc
17:08 < strk> a few ways to convince it it's not needed yet
17:08 < strk> like --gc_interval=10000000000
17:08 <@niallo> skiz: where are the headers and library files installed on your disk?
17:09 <@niallo> skiz: i had to patch 2.1.0 to look under /opt on OS X, maybe zmq's gyp file needs a tweak to find homebrew zmq too.
17:10 < skiz> I believe /usr/local/Cellar/zeromq/2.2.0/include/
17:10 <@niallo> skiz: yeah....gyp definitely isn't going to find that by default
17:10 < mscdex> ahhh coffee
17:11 <@niallo> skiz: i would start with tweaking this: https://github.com/JustinTulloss/zeromq.node/blob/master/binding.gyp 
17:12 < timoxley> mvta no relation. just happens that websockets work good with an evented architecture, such as is found in node
17:12 < mscdex> niallo: skiz: you can also use my fork which contains the header files for 2.2.0
17:12 < mscdex> and uses them
17:16 <@CIA-93> node: Shigeki Ohtsu v0.8 * r5b37da2 / doc/api/domain.markdown : doc: fix domains example - http://git.io/lHWeLQ
17:16 <@niallo> is there a way to have `npm install` read from a file other than package.json? i can't find anything in the docs
17:17 < mscdex> i doubt it
17:17 < mscdex> make a symlink?
17:17 <@niallo> yeah there are ways i could hack around it, could also just parse my file and run `npm install <pkg>` for each dep
17:18 <@niallo> wondering if i can get away without doing that :)
17:18 < mscdex> why don't you have a package.json?
17:18 <@niallo> my use case is an application extension system. extensions are simply NPM modules.
17:18 <@niallo> which are dynamically loaded at application startup
17:19 <@niallo> however i don't want the user to have to specify extensions in a package.json because that is overloading things a bit i think.
17:20 < mscdex> well, i'm not sure doing `npm install <deps>` every time at startup is a good idea
17:20 < mscdex> i think it's best to do it once when you install an extension
17:20 <@niallo> when i said loaded at application startup, i didn't mean you run `npm install` at each application startup
17:20 < mscdex> ah
17:20 <@niallo> i meant that the application will load the extension
17:21 < timoxley> niallo npm has a programmatic interface
17:21 < mscdex> coffee has yet to kick in :-)
17:21 < mscdex> yeah that too
17:21 < timoxley> niallo also you could simply generate a package.json
17:21 <@niallo> but the way you add an extension is by npm install`ing it
17:21 < timoxley> niallo you can npm install via require('npm')
17:21 < timoxley> niallo npm is just javascript
17:21 < timoxley> it's not magic
17:22 < mscdex> https://github.com/isaacs/npm/tree/master/doc/api
17:22 <@niallo> timoxley: doesn't feel right to overload package.json for this, but i will try the npm API
17:22 < timoxley> niallo another option would be to shrinkwrap your packages
17:23 < timoxley> niallo or even zip them up
17:23 < timoxley> niallo who is your audience?
17:23 < timoxley> non programmers?
17:24 <@niallo> timoxley: this is an extension system for an application. i want to make it reasonably easy for users of the application to install new extensions (which are simply NPM modules with some extra files)
17:24 < timoxley> who are your users
17:24 <@niallo> technical folks 
17:24 < timoxley> then why not just tell them to use npm
17:24 < timoxley> instead of building a package manager
17:25 <@niallo> i'm not building a package manager.
17:26 <@niallo> i want to make it possible to specify extensions in a file other than one named "package.json"
17:27 < strk>     5283 ms: Mark-sweep 8.4 (45.0) -> 8.4 (45.0) MB, 9 ms [external memory allocation limit reached] [GC in old space requested].
17:27 < strk> does [external memory allocation limit reached] means that a _full_ GC run is triggered ?
17:28 < mscdex> i think so
17:28 < strk> any idea how to get an heap snapshot from there ?
17:29 < strk> would like to figure what's allocating that much
17:30 < whiskers75> Can somebody please help me with this REPL problem: http://stackoverflow.com/questions/11719963/node-js-repl-eval
17:33 < mscdex> whiskers75: repl.start() takes an object with those options, not individual arguments
17:34 < mscdex> whiskers75: see the example at: http://nodejs.org/docs/v0.8.4/api/repl.html#repl_repl_start_options
17:37 <@prettyrobots> How does Buffer handle an incomplete multi-byte character in utf8?
17:37 <@prettyrobots> If the chunk sent to my `data` handler gets a chunk that ends with the first character of a multi-byte character?
17:38 <@prettyrobots> Or do the streams take care of this if I set an encoding?
17:38 <@prettyrobots> Probably what I just said.
17:40 < zenista> hi ... how to move and uploaded file in node... doing fs.rename(oldpath, newPath) gives out exdev error
17:40 < zenista> isn't there something like fs.copy(oldFile, newFile) kind of thing under node.js
17:42 < mscdex> zenista: fs.createWriteStream(newFile).pipe(fs.createReadStream(oldFile)); ?
17:42 < zenista> k thanks buddy
17:43 < zenista> mscdex is there a callback to it.. whch can be fired when it finishes off
17:43 < mscdex> zenista: although, you'll probably want to assign the write stream to a var first
17:43 < DTrejo> npm docs fs.extra
17:43 < zenista> k...and one more thing .. how to veryify that a file actually is an image.... any module ... or should we just trust req.files.image 
17:44 < DTrejo> npmbro docs fs.extra
17:44 < DTrejo> npmbro docs utile
17:44 < npmbro> DTrejo: Please see http://github.com/flatiron/utile#readme
17:44 < mscdex> zenista: var ws = fs.createWriteStream(newFile); fs.createReadStream(oldFile).pipe(ws); ws.on('end', function() {});
17:44 < DTrejo> zenista: ^ that has a copy function if you want it
17:44 < DTrejo> an fs.copy
17:45 < mscdex> ok, so maybe it's the 'close' event and not 'end'
17:45 < mscdex> for files
17:52 < whiskers75> Can somebody please help me with this REPL problem: http://stackoverflow.com/questions/11719963/node-js-repl-eval
17:54 < timoxley> whiskers75 repl.start() takes an object with those options, not individual arguments
17:54 < timoxley> whiskers75 see the example at: http://nodejs.org/docs/v0.8.4/api/repl.html#repl_repl_start_options
17:56 < kofno> biab
17:56 < kofno> pfft
17:57 < whiskers75> timoxley: like this? http://pastebin.com/XiAavDAT
17:57 < timoxley> whiskers75 like that
17:58 < whiskers75> timoxley: then why does Cloud9 IDE give me the warning: 'Expected an identifier and instead saw 'eval' (a reserved word)'
17:59 < mscdex> it's just being strict
17:59 < timoxley> whiskers75 wrap eval in quotes
17:59 < mscdex> IIRC ES5 allows reserved words to be used as literal keys
18:00 < timoxley> just the key
18:00 < whiskers75> timoxley: thank you.
18:01 < whiskers75> timoxley: marked your answer as accepted on stackoverflow.
18:01 < timoxley> whiskers75 thank mscdex, he actually answered your question earlier, i just plagiarised his answer
18:02 <@CIA-93> node: isaacs v0.8 * rf8dab6a / doc/api/child_process.markdown : doc: Remove timeout arg in child_process.fork - http://git.io/bS1U1Q
18:02 < whiskers75> mscdex: oh, then thank you!
18:10 < kenperkins> does argon ever pop in ?
18:15 <@prettyrobots> Asking again: stream.setEncoding will correctly handle multi-byte characters at chunk boundaries?
18:17 < TooTallNate> prettyrobots: yes
18:17 <@prettyrobots> TooTallNate: And if I use Buffer.toString I've got to beware.
18:18 <@prettyrobots> ?
18:18 < TooTallNate> prettyrobots: correct
18:18 <@prettyrobots> TooTallNate: Thank you.
18:18 < TooTallNate> prettyrobots: if you're dealing with buffers directly (without a stream or whatever) you can use string_decoder directly
18:18 < TooTallNate> but that's usually rare
18:18  * prettyrobots turns to docs
18:19 < brianc1> TooTallNate: is string_decoder in the docs?
18:19 < TooTallNate> brianc1: http://nodejs.org/api/string_decoder.html
18:19 < brianc1> TooTallNate: yes it is. i should read first.
18:19 <@prettyrobots> TooTallNate: Okay. Great.
18:20 < brianc1> I'm not sure I see the advantage over buffer.toString?
18:20 <@prettyrobots> TooTallNate: Actually, should StringDecoder have some sort of a remainder interface?
18:20 <@prettyrobots> brianc1: You might not have a buffer.
18:21 < brianc1> prettyrobots: socket.on('data') <-- doesn't that always emit a buffer?
18:21 <@prettyrobots> I guess. But you might be getting your data from a postcard in the mail.
18:22 < TooTallNate> prettyrobots: i think the assumption is that your data will always end on a valid boundary
18:22 <@prettyrobots> Carrier pigeons use arrays.
18:22 < TooTallNate> that is, the final write() is the "flush"
18:23 < TooTallNate> brianc1: the advantage is that a Buffer might end/begin in the middle of a multi-byte utf8 char
18:23 < TooTallNate> so this class handles that
18:23 < brianc1> TooTallNate: oh okay. 
18:23 <@prettyrobots> TooTallNate: So this class decodes an array of leftovers.
18:35 -!- jesusabdullah changed the topic of #Node.js to: this is the javascript remix
18:35 <@ben_alman> i think search.npmjs.org is dead, at least searches aren't working here for me
18:36 < freewil> ben_alman, +1
18:36 <@ben_alman> k
18:36 < freewil> been broken for about 10 hours ago
18:36 < freewil> isaacs, ping!
18:37 <@CIA-93> libuv: Bert Belder winfs * r33bdd1b / (include/uv-private/uv-win.h include/uv.h src/win/fs.c): Windows: fix memory leaks in fs - http://git.io/Z8HLaw
18:37 <@isaacs> freewil: yo
18:37 <@isaacs> freewil: yeah, search.npmjs.org is having some problems.
18:37 < freewil> k
18:37 <@isaacs> i'm looking at adding a better index page and just flipping the switch to new.npmjs.org instead.
18:37 <@isaacs> there's some work to be done still, though
18:38 <@isaacs> and i've been distracted by this readable stream stuff
18:38 < freewil> oh nice, it's ready (enough)
18:38 <@isaacs> -ish
18:38 < freewil> ha ok
18:38 <@isaacs> search doesn't work yet :)
18:38 < freewil> lol
18:38 <@isaacs> and we need to put something better on the index page.
18:38 < mscdex> the index page needs some original SubStack artwork
18:39 < freewil> npm search still works, apparently very slow
18:39 < npmbro> freewil: Please see http://eirikb.github.com/nipster/#still%20works
18:39 <@isaacs> freewil: yeah, it's super crazy slow
18:39 <@isaacs> and often 500's with an os_process_timeout error
18:39 < freewil> npmbro, nice
18:39 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm install | npm stats | npm help | npm node | npm credits
18:40 <@isaacs> view server is dying trying to load the search view
18:44 < scott_gonzalez> isaacs: Are you aware of any race conditions with child processes where exit events come in before data events on stdout?
18:45 <@isaacs> scott_gonzalez: yes, that's a known change in 0.8
18:45 <@isaacs> scott_gonzalez: 'exit' is when the process actually exits. 'close' is exit + output fd's closed
18:45 <@isaacs> scott_gonzalez: in some cases, 'close' will never happen, becasue you're sharing fd's for stdout, for example.
18:45 < whiskers75> How do I convert ('data\n') stored in variable 'cmd' to 'data'?
18:46 <@isaacs> scott_gonzalez: but you still need to know when the process has actually exited.
18:46 < scott_gonzalez> isaacs: Now that you say that, I remember reading this in the mailing list. Did close exist in 0.6?
18:46 <@isaacs> scott_gonzalez: no
18:46 < whiskers75> (string cmd)
18:46 <@isaacs> scott_gonzalez: but you could still listen to child.stdout.on('close')
18:46 <@isaacs> scott_gonzalez: or child.stdout.on('end')
18:46 < scott_gonzalez> isaacs: Ok, thanks. This bug was driving me crazy.
18:47 <@isaacs> yeah, it's unfortunate, but long-term, i think this was the right choice.
18:47 < mscdex> whiskers75: trim the string?
18:47 <@isaacs> scott_gonzalez: it's not pointless pain.  it actually is right, i think, for 'close' to mean 'close' and 'exit' to mean 'exit'
18:47 < whiskers75> mscdex: I'm a Node.js newbie, so how do I do that? :)
18:47 <@isaacs> whiskers75: cmd = cmd.trim()
18:47 < mscdex> whiskers75: it's a part of javascript: string.trim()
18:48 < scott_gonzalez> isaacs: Yeah, it makes sense. It just took me a while to even trace it down to this.
18:48 <@isaacs> whiskers75: cmd = 'data\n';  console.error([cmd, cmd.trim()]);
18:48 < whiskers75> mscdex: I'm also a Java newbie - and I am reading from a REPL here...
18:48 < whiskers75> from a socket
18:48 <@isaacs> $ node -pe "var cmd = 'data\n'; [cmd, cmd.trim()]"
18:48 <@isaacs> [ 'data\n', 'data' ]
18:49 < whiskers75> @isaccs: changing one to the other wont work, as I am running a command line
18:50 < whiskers75> I used .replace(/[\n\r]/g, '') and it didn't work
18:51 < whiskers75> and I want to compare this variable to others
18:51 <@isaacs> whiskers75: if you want more help, gist the actual code.  describing it in english is not productive.
18:51 < whiskers75> ok.
18:51 <@isaacs> whiskers75: var cmd = 'data\n'; var cmdTrimmed = cmd.trim(); var cmdReplaced = cmd.replace(/[\r\n]/g, '');
18:52 <@isaacs> whiskers75: [ 'data\n', 'data', 'data' ]
18:52 <@isaacs> works for me
18:53 < whiskers75> here is a gist
18:53 < whiskers75> https://gist.github.com/3209136
18:54 < whiskers75> @isaacs: but what if cmd becomes ('another bit of data\n') ?
18:54 <@isaacs> whiskers75: then trim it again :)
18:55 <@isaacs> whiskers75: just put cmd = cmd.trim() in that function
18:55 < gicode> Anyone have any thoughts as to why node would have 730MB RSS when the heap is only 54MB?
18:55 <@isaacs> whiskers75: also, gist the whole thing.  this bit on its own is not valid js, so i have very litle idea what you're actually doing :)
18:55 <@isaacs> whiskers75: ie, you need to do `cmd = cmd.trim()`.  not just `cmd.trim()`.
18:56 <@isaacs> whiskers75: assign it back to the var
18:56 < whiskers75> @isaacs: I don't really understand: here is a gist, https://gist.github.com/3209159, gist back with it fixed :)
19:00 < gicode> The node process keeps growing even though the heap is relatively constant and small. :-/
19:01 < whiskers75> @isaacs: I don't really understand: here is a gist, https://gist.github.com/3209159, gist back with it fixed :)
19:01 < gicode> eg. { rss: 1002950656, heapTotal: 56139264, heapUsed: 22604824 }
19:02 < whiskers75> oh wait, so @isaacs, i have to do cmd = cmd.replace(etc...)?
19:02 <@isaacs> whiskers75: yes.
19:02 <@isaacs> whiskers75: line 29.  add this:  cmd = cmd.trim();
19:05 < whiskers75> @isaacs: no different.
19:05 < gicode> Could this be a node bug, or is there some way my JS code could be retaining memory outside the JS heap?
19:05 < gicode> whiskers75: What are you trying to do?
19:06 < whiskers75> gicode: look at the gist
19:06 < whiskers75> https://gist.github.com/3209159
19:06 < gicode> whiskers75: I see the gist, what is wrong with it?
19:06 < whiskers75> gicode: the if block will never match up
19:07 <@isaacs> gicode: he's testing for 'login' but getting 'login\n'
19:07 <@isaacs> whiskers75: did you add `cmd = cmd.trim();` on line 29?
19:07 < whiskers75> @isaacs: yes
19:07 <@nlf> and move your console.log to after the .trim() line?
19:07 <@nlf> make sure it's still the same problem
19:08 <@isaacs> whiskers75: also, you have this:  if (cmd==='login') {...} if (cmd === 'register'){..} else {..}
19:08 < whiskers75> yes
19:08 <@isaacs> whiskers75: if it's login, it's going to execute the first block and the third block
19:08 <@isaacs> i think you should replace the if(cmd==='register') withthis: else if (cmd === 'register')
19:08 <@isaacs> so it's all one if/else if/else
19:09 <@isaacs> rather that if, if/else
19:09 <@isaacs> or return out of the first if block
19:09 <@nlf> yeah
19:09 < whiskers75> so return true?
19:10 <@isaacs> $ node -e 'cmd="login"; if(cmd==="login"){console.log(1)} if(cmd==="register"){console.log(2)} else {console.log(3)}'
19:10 <@isaacs> 1
19:10 <@isaacs> 3
19:10 <@isaacs> $ node -e 'cmd="login"; if(cmd==="login"){console.log(1)} else if(cmd==="register"){console.log(2)} else {console.log(3)}'
19:10 <@isaacs> 1
19:10 <@isaacs> unless that's the intent
19:11 <@isaacs> i could be misreading it of course :)
19:11 < whiskers75> Have a look at my repo :github.com/whiskers75/creativemud, the file in question is server1.js
19:12 < context> while (!waiting) {...} if (!waiting) {...} seems a little redundent
19:12 < context> err, while (waiting) ; if (!waiting)
19:12 < context> while (waiting) { if (!waiting) {}} makes even less sense.
19:13 < whiskers75> well, pull request :)
19:13 <@nlf> whiskers75: the console.log is still showing the cmd as 'login\n' ?
19:13 < whiskers75> nlf: ('login\n')
19:13 < gicode> Where should I start if I want to track down memory usage like this: { rss: 1071976448, heapTotal: 54075392, heapUsed: 26723280 } ?
19:14 < gicode> The process is almost 20x the heap total.
19:15 <@isaacs> dominictarr: hey, i was just about to write config-chain (complete with *exactly that name*) and found that you already had :D
19:15 <@isaacs> dominictarr: the git repo is wrong, though
19:15 <@isaacs> dominictarr: in the package.json file
19:15 < KiNgMaR> can anybody help me find the toString implementation of Buffer in node_buffer.cc?
19:15 < gicode> I am familiar with a number of JS heap debugging tools, but I am not sure how I can avoid memory usage outside the JS heap.
19:16 <@isaacs> dominictarr: got as far as writing the readme, with almost the exact same api
19:16 < mscdex> KiNgMaR: http://nodejs.org/docs/v0.8.4/api/buffer.html#buffer_buf_tostring_encoding_start_end
19:16 < whiskers75> isaacs: please pull request with your fixes, and I'll test them tomorrow ;)
19:16 < context> kingmar: its not defined in node_buffer.cc
19:17 < context> kingmar: so no one can help you find it
19:17 < context> kingmar: it IS defined here though: https://github.com/joyent/node/blob/master/lib/buffer.js
19:17 <@isaacs> whiskers75: no thanks.  you can do it.  it's a better learning experience that way :)
19:17 < KiNgMaR> context: thank you :)
19:17 <@nlf> whiskers75: the parentheses are part of the string
19:17 <@isaacs> whiskers75: also, it's not a repo, so there's no "pull request", since it's a gist
19:17 <@nlf> your string is '(login\n)'
19:18 <@nlf> so .trim() isn't removing the \n, since it's not at the end of the string
19:18 < gicode> BTW, I am running v0.8.4
19:19 < whiskers75> isaacs: i have a repo, and I am AFK right now(using an iPod) so cant type it in myself, so please do pull request (repo github.com/whiskers75/creativemud)
19:19 < gicode> I did some searching and found some old information on memory fragmentation, but that is supposedly fixed.
19:19 <@nlf> something like: cmd = cmd.replace(/[\n\(\)]/g, '')
19:19 <@nlf> should take care of that
19:19 <@nlf> assuming you don't want to ever have the ( or ) characters in your command
19:20 < whiskers75> nlf: excellent! plz pull request that as I am afk and cant type it in tonight.
19:20 < AviMarcus> whiskers75, last I checked it's a bit of a PITA to do pull requests on a repo you don't already have... and most people lack the inclination.
19:21 < AviMarcus> especially when they are helping you for free, already. I don't even know what it is you're working on.
19:21 <@nlf> just remember that you need to remove the parentheses
19:21 <@nlf> you'll figure it out
19:21 < stagas> AviMarcus: you can click Edit on github and have it fork and pull for you no sweat
19:22 < whiskers75> nlf: ohh...kay. I'll copy it to a note here on my iPod.
19:23 < AviMarcus> hmm edit does work. I wonder why I thought it was annoying. stagas can you pull changed back into your repo from upstream from inside github?
19:23 <@isaacs> whiskers75: added comments on the gist.  you'll get an email.  update whenever.
19:23 < stagas> AviMarcus: no idea
19:23 <@isaacs> whiskers75: enjoy the nodejs users mailing list: https://groups.google.com/group/nodejs
19:23 < whiskers75> just got the email- thanks a lot. mailing list?
19:23 < qballer> Hey do you guys know how to get omni-complete to nide? 
19:24 <@isaacs> whiskers75: https://groups.google.com/group/nodejs?pli=1
19:24 < Owner> im more interested in Ada Web Server now
19:24 < whiskers75> ok! thanks all
19:24 < Owner> a real language
19:24 <@Hodapp> Owner: NO
19:26 < qballer> Does anyone even use Nide to code?
19:26 < Owner> Nide?
19:27 < Owner> an IDE?
19:27 < cryptopsy> why don't this work? http://ompldr.org/vZXhieg
19:27 < Owner> most use a text editor
19:27 < cryptopsy> ReferenceError: res is not defined
19:27 < gicode> cryptopsy: s/res/response/
19:27 <@nlf> cryptopsy: probably because res isn't defined
19:28 < Owner> response.end
19:28 <@nlf> your callback is receiving response, not res
19:28 < Owner> capy posta
19:28 < cryptopsy> tnx
19:28 <@nlf> is that like a capybara?
19:30 < Owner> qballer~# you cant code with node
19:30 < Owner> qballer~# i hope that answers your question
19:31 < JonMarkGo> Anyone know if socket.io can handle websocket requests that aren't from the socket.io JS client?
19:31 < KiNgMaR> is there a way to call an overloaded toString with arguments from C++? e.g. Local<String> str = val->ToString(my_arg_here);
19:33 < stagas> JonMarkGo: no, you need a socket.io client to connect to a socket.io server
19:34 < JonMarkGo> Alright, thanks
19:34 < JonMarkGo> I'll just use node-websocket-server
19:34 < stagas> JonMarkGo: for raw websockets use the 'ws' module
19:34 < JonMarkGo> ws? I'll check it out
19:35 < stagas> JonMarkGo: https://github.com/einaros/ws
19:35 < JonMarkGo> thanks
19:38 < cryptopsy> install socket.io globally and my js script can't find it
19:40 < whiskers75> isaacs: how do I remove the parentheses from my cmd string?
19:42 <@isaacs> whiskers75: cmd = cmd.replace(/^\(|\n*\)\n*$/g, '')
19:42 <@isaacs> whiskers75: or, you could just test for '(login\n)' instead.
19:42 <@isaacs> i mean, that's fine.
19:42 <@isaacs> right?
19:42 < whiskers75> isaacs: can you include that in the gist? its great
19:43 < whiskers75> ill add and test it in the morning
19:43 <@isaacs> whiskers75: please come and ask questions when you can actually use the answers.
19:43 <@isaacs> whiskers75: if you're not going to do it now, go outside or something ;)
19:43 <@nlf> no kidding
19:43 <@isaacs> in the morning, someone will be in this room who is a regexp expert, i'm sure ;)
19:44 < whiskers75> ok i can do it now.. just a mite tricky, even on a jailbroken iPod :)
19:44 < whiskers75> or ill just note it down. thanks guys.
19:45 <@isaacs> whiskers75: your enthusiasm is delightful.
19:45 <@nlf> kind of odd that the repl sends eval a command in the form '(command\n)'
19:46 < Bux> ops plz
19:46 < whiskers75> nlf: yes.
19:46 < stagas> nlf: yeah, especially when it allows you to override the default eval function
19:46 < Bux> ops pls
19:47 < Bux> uhhm
19:47 < whiskers75> nlf: why the parentheses?
19:47 <@nlf> i don't know, that's why i said it was kind of odd
19:47 < IRCbot_Master> Welcome, jbueza to the Node.JS IRC
19:47 < Bux> ops plz
19:47 <@nlf> isaacs might know the reason for it
19:47 < Bux> hmm
19:48 < whiskers75> nlf: yeah, id like to know
19:48 < IRCbot_Master> Welcome, iwoj to the Node.JS IRC
19:48 < stagas> whiskers75: you need parentheses to eval stuff in js most of the time
19:48 < Bux> can someone OP me back please?
19:48 < whiskers75> stagas: good to know. 
19:49 < whiskers75> what does OP stand for?
19:49 < Bux> operator
19:49 < Bux> they have a @
19:49 < KiNgMaR> lulz
19:49 < Bux> they can kick, ban ect
19:49 < whiskers75> ah
19:49 < Bux> but the auto opper seems to be broken :/
19:49 < IRCbot_Master> Welcome, mirzu to the Node.JS IRC
19:49 < whiskers75> how do you get to be an OP?
19:50 < Bux> by typing something in chat
19:50 < Bux> but it doesnt work anymore :/
19:50 < whiskers75> what?
19:50 < Bux> ops plz
19:50 < Bux> that used to do it
19:50 < Bux> hmm :/
19:50 < Bux> anyone?
19:50 <@nlf> the bot lost its op
19:50 < IRCbot_Master> Welcome, hipsters_ to the Node.JS IRC
19:50 < whiskers75> ok, let me try... cough,
19:50 <@nlf> so it can't op people
19:50 < whiskers75> ops plz
19:50 < Bux> oh right
19:50 < Bux> can you op me please nlf :P
19:50 <@nlf> also, i'm going to choke that welcome bot
19:51 < Bux> nuuu
19:51 < Bux> please dont :O
19:51 < whiskers75> nlf: same! AAAARGHHHHH
19:51 < Bux> I'll turn it off already
19:51 <@nlf> there, we'll let the bot do its job
19:51 < whiskers75> ok. lets try
19:51 < whiskers75> ops plz
19:52 <@whiskers75> yay.
19:52 < Bux> ops plz
19:52 <@Bux> :D
19:52 <@whiskers75> so how does opping work?
19:52 <@Bux> ok I removed the welcome feature..
19:52 <@whiskers75> ah finally
19:52 < KiNgMaR> bnoordhuis: do you happen to be around?
19:53 <@Bux> ok
19:53 <@Bux> now guy
19:53 <@Bux> -s
19:53 <@Bux> if you want op
19:53 <@Bux> pm the Master IRC with "opme"
19:53 <@whiskers75> so, how do I use op?
19:53 <@Bux> and that'll do it :)
19:53 <@Bux> ./kick
19:54 <@whiskers75> ok. i wont though! :0
19:54 <@Bux> right, only on spammers :)
19:54 <@whiskers75> yeah
19:54 <@isaacs> nlf: { foo: 'bar' }
19:54 <@Bux> also, dont try to deop the IRC bot >:)
19:54 <@whiskers75> gotta go
19:54 <@Bux> it'l hurt you :P
19:54 <@isaacs> nlf: that should resolve to '{foo:"bar"}', not "bar"
19:54 <@Bux> its already op
19:55 <@whiskers75>  oh, false alarm
19:55 <@Bux> okthen, wb I guess :P
19:55 <@whiskers75> what'll hurt who?
19:55 <@Bux> the IRC bot
19:55 <@Bux> if you deop it
19:55 <@Bux> try >:)
19:55 <@whiskers75> how do i deop?
19:56 <@Bux> ./deop <player>
19:56 <@nlf> isaacs: so the parens just wrap the content to make sure nothing is lost when stringifying?
19:56 <@Bux> or /mode #Node.js -o [player]
19:56 <@whiskers75> i dont want to die!!!
19:56 <@Bux> hehe
19:56 <@Bux> dont worry
19:56 <@isaacs> nlf: no, it's to force it to be interpreted as an expression, rather than as a statement
19:56 < KiNgMaR> is this #node.js or #irc.playground?
19:56 <@whiskers75> what will it DO??
19:56 <@nlf> ah, ok
19:56 <@nlf> i see
19:56 <@Bux> try, and I'll show you
19:57 <@isaacs> nlf: {foo: 'bar'} ==> block, labelled line "foo:", string expression 'bar'
19:57 <@isaacs> nlf: ({foo:'bar'}) ==> object expression, key foo, value 'bar'
19:57 <@Bux> haha ^
19:57 <@nlf> that makes sense
19:57 <@nlf> thanks
19:57 <@isaacs> np
19:57 < whiskers75> sorry. you were saying?
19:57 <@nlf> now that i've learned something new today, i can stop working :D
19:57 <@Bux> nothing much
19:58 < whiskers75> ok. so what will the bot do?
19:58 <@Bux> try please
19:58 <@Bux> oh right
19:58 <@Bux> and... poof
19:58 <@whiskers75> er. i'm not so sure about this..
19:58 <@whiskers75> but oh well
19:59 <@Bux> dont worry, I'll revert it
19:59 <@whiskers75> wait - What?
19:59 < context> whats everyone here use to send mail from node
19:59 <@Bux> nothing..
19:59 <@whiskers75> come on...
19:59 < context> but i need to send mail :p
19:59 <@Bux> https://github.com/weaver/node-mail/
19:59 <@whiskers75> please tell me
20:00 < mscdex> i don't think that one is maintained anymore
20:00 < context> <3 thnx
20:00 < purr> Let it be known that context hearts thnx.
20:00 <@Bux> you'll have to find out :)
20:00 <@nlf> context: we use postageapp
20:00 <@whiskers75> ok. somebody deop the bot
20:00 <@Bux> haha
20:00 <@nlf> nice service, keeps me from having to maintain smtp servers
20:00 <@Bux> right :)
20:00 <@nlf> really simple API too
20:00 <@whiskers75> and tell me what happenes
20:01 <@whiskers75> will it kick or ban me?
20:01 <@Bux> it'll deop you
20:01 <@whiskers75> ok
20:01 < Domenic_> context: emailjs
20:01 < mscdex> context: there's nodemailer and emailjs
20:01 <@whiskers75> ./deop IRCbot_Master 
20:01 <@Bux> ..
20:01 <@Bux> without the .
20:02 <@whiskers75> it says unknown command deop
20:02 <@Bux> uhhm
20:02 <@Bux> should work fine..
20:02 <@whiskers75> im using an ipod
20:02 <@Bux> works :)
20:02 <@nlf> 'deop' isn't a valid command, it's just typically aliased in irc clients
20:03 <@Bux> ooh, im on the web interface
20:03 <@whiskers75> what is it aliased to
20:03 <@whiskers75> im on Mango IRC Lite
20:03 <@Bux> try /mode #Node.js -o [name]
20:03 <@Bux> ik long command :/
20:03 <@IRCbot_Slave> whiskers75, you have been given a warning for deopping IRC bots!
20:03 < whiskers75> Ha ha ha ha
20:03 <@Bux> ikr
20:04 <@Bux> I got 2 bots
20:04 <@Bux> a master and a slave
20:04 <@Bux> and they work together
20:04 <@Bux> so you cant kill it :)
20:04 < whiskers75> op me again
20:04 <@Bux> here, I'll make it op you
20:04 < whiskers75> and remove the warning
20:04 <@Bux> theres no warning
20:04 <@Bux> not yet
20:04 < mscdex> ops plz
20:04 <@whiskers75> what if i kill both?
20:04 < IRCbot_Slave> mscdex, you have been given a warning for deopping IRC bots!
20:04 < IRCbot_Master> mscdex, you have been given a warning for deopping IRC bots!
20:04 <@mscdex> :P
20:05 <@Bux> its too fast
20:05 <@nlf> yeah
20:05 <@mscdex> plan foiled!
20:05 <@Bux> O_o
20:05 <@AAA_awright> Looooooool
20:05 <@Bux> daim 
20:05 <@Bux> hate you, handy double deop command :/
20:05 <@Bux> :P
20:05 < IRCbot_Slave> whiskers75, you have been given a warning for deopping IRC bots!
20:06 <@whiskers75> ops plz
20:06 < tomshreds> Hi, how can I escape spaces in a filename? I need to fs.readFile a file but there's a space in it. And I don't have the rights to rename it.
20:06 <@IRCbot_Slave> mscdex, you have been given a warning for deopping IRC bots!
20:06 <@whiskers75> wait NO
20:06 < mscdex> fail
20:06 <@whiskers75> I was going to deop the other
20:06 <@Bux> haha
20:06 <@Bux> dont :P
20:06 < mscdex> it can't differentiate between voice and ops?
20:06 <@Bux> nope
20:06 <@mscdex> :S
20:06 <@Bux> it does banning and kicking tho
20:06 <@AAA_awright> I think Freenode limits you to 4 operations per command
20:07 < context> airbrake has gone down hill performance wise recently
20:07 <@whiskers75> ok mscdex on 3 i get master you slave
20:07 <@whiskers75> 3
20:07 <@AAA_awright> So you could have Master, Slave0, Slave1, Slave2, Slave3
20:07 <@whiskers75> 2 
20:07 <@Bux> haha
20:07 <@whiskers75> 1 
20:07 <@mscdex> whiskers75: unnecessary, you can do it in one step
20:07 < context> 0
20:07 <@Bux> I could make 7 bots :P
20:07 <@Bux> nuuu
20:07 <@whiskers75> it doesnt work
20:07 <@Bux> I'll make more bots :)
20:07 < context> why only 7 bots when you can have 70
20:07 <@Bux> or cryptic names :P
20:07 <@Bux> 70 would mean a  beast running on my machine
20:07 <@Bux> but takes tp long to program
20:07 <@whiskers75> context: WHY did you give hin that idea?
20:08 <@Bux> to*
20:08 <@whiskers75> him*
20:08 <@Bux> haha, hey! im just here for the fun
20:08 <@Bux> :)
20:08 <@AAA_awright> Let's make a bazillion, then we'll become bigger than #php!
20:08 < wink_> ops pls
20:08 <@Bux> anyone want the code?
20:08 <@AAA_awright> Wait
20:08 < context> whiskers75: :p
20:08 <@Bux> also, if you want op
20:08 <@whiskers75> Bux: ok whats it written in?
20:08 <@Bux> pm the master with "opme
20:08 < context> should i still use express 2.5.8 or 3.0 ? im new to it, so how much is the new non-layout/partials etc gonna mess with me
20:08 <@whiskers75> Node?
20:08 <@Bux> yeah
20:08 <@mscdex> wink_: it's: ops plz
20:09 < wink_> ops plz
20:09 <@whiskers75> oh yes
20:09 <@wink_> ah right
20:09 <@Bux> or PM the master IRC with "opme"
20:09 <@whiskers75> ok- give me the code!
20:09 <@Bux> or with "op [player"
20:09 <@wink_> (ease)z|x
20:09 <@Bux> or with "deop [player]"
20:09 <@Bux> ect
20:09 <@Bux> ok hold on
20:09 <@Bux> also, dont abuse please
20:10 < sumo_> so i have a variable var changes = { field1: 'value', field2: 'value'}, but i want to only set field2 if its not null, how can i do that?
20:10 <@whiskers75> a git repo would be nice - and I only want a look at the code really.
20:10 <@mscdex> sumo_: if (changes.field2 !== null) { /* do something &/ }
20:11 <@AAA_awright> Why ops and not voice?
20:11 < context> anyone? noone ?
20:11 <@AAA_awright> It'd be nice if there were a meta-game somewhere in here
20:11 <@mscdex> context: i haven't looked at 3.0 much
20:11 < sumo_> mscdex: thats not what i meant, i want 'changes' to not even have the property field2 if its null
20:12 <@mscdex> sumo_: why?
20:12 < sumo_> mscdex: long story, is that changes object the same as just creating a new object and setting field1 field2? 
20:14 <@mscdex> sumo_: pretty much, the difference is v8 can make some optimizations if you specify keys ahead of time
20:14 <@mscdex> IIRC
20:14 <@nlf> sumo_: if (changes.field2 === null) delete changes.field2;
20:14 < TonkaTruck> Hey yall.  I first read that one should *not* gitignore npm modules but instead rebuild in the production environment.  Now I'm reading about shrinkwrap.  Does shrinkwrap mean I should be ignoring the module files?  And building in production from shrinkwrap?  Just trying to get some 7/2012 advice, thanks.
20:15 <@nlf> but realistically you should be checking for the contents of your keys before you act on them anyway, so letting it go through while set to null should be fine
20:15 < sumo_> thnx guys
20:15 <@mscdex> yeah, delete is the way to do it, but that should be avoided as it can reduce performance when accessing that object afterwards
20:15 < TonkaTruck> It appears the only downside of shrinkwrap is semantic versioning...I can live with that I think.
20:17 <@Bux> cool uh :P
20:17 <@whiskers75> yeah
20:17 <@mscdex> TonkaTruck: when pushing to production it's best to bundle your dependency modules. that way you have a consistent environment and know that you have tested against particular versions and it's all known to work as you expect
20:18 <@nlf> TonkaTruck mscdex: agreed, however you need to be careful in the case of any modules that are compiled via gyp/waf
20:18 <@nlf> our developers all use macs, our servers are linux
20:18 <@Bux> wb cpg
20:18 <@nlf> binary modules break if we have them in the repo
20:18 < Owner> can someone explain to me what it is called when i cannot get any data out of a function via returning or anything, and only a callback function can work (i still dont know if i can get data out of that callback function....)
20:18 <@Bux> "Owner" _-_
20:19 <@Bux> can I see your code?
20:19 <@nlf> the ideal situation would involve CI or at least some manual QA, install on a separate, but very similar, server and verify functionality, then transfer to production
20:19 <@mscdex> yeah
20:19 < TonkaTruck> mscdex: Ok.  I don't know how to bundle modules.  I will read.
20:19 < Owner> Bux~# to fix it i have to do callback(returnvalue); instead of return returnvalue
20:20 <@mscdex> TonkaTruck: doing an `npm install foopackage` will install them in a subdirectory called 'node_modules'
20:20 <@mscdex> TonkaTruck: so it bundles by default
20:20 <@Bux> idk, can I see the code on pastebin on it?
20:20 <@Bux> off it*
20:20 < gkatsev> Owner: is the function an async function?
20:20 <@nlf> Owner: if you're trying to return a value from a callback, you can't
20:20 < TonkaTruck> I believe the only global module I have is mocha.
20:20 < tylerflint> wanting to run a node.js app on a raspberry pi, anybody know of any tricks to get the footprint down?
20:20 <@mscdex> TonkaTruck: after the dependencies are installed, just create an archive of your project directory containing your node_modules and you're good to go
20:21 < Owner> nlf~# can you explain why it was designed this way or...how to work around it
20:21 <@nlf> that's the nature of asynchronous execution
20:21 < gkatsev> do your work inside a callback
20:21 <@nlf> rather than saying: do this and give me a result now, i'll wait
20:21 <@Owner> nlf~# i see
20:21 <@nlf> async says do this, and when you're done let me know. and works on other stuff rather than waiting
20:22 <@Bux> to be honest, I hate async tasks
20:22 <@Bux> gets in the way of the flow of my code
20:22 <@Bux> :/
20:22 <@Owner> nlf~# thank you
20:22 <@nlf> np
20:22 <@mscdex> Bux: then you're doing it wrong
20:22 <@Bux> nah, it works fine
20:22 <@Owner> SomeoneWeird helped me earlier too...  nver done async code before :)
20:22 <@nlf> it's a weird hurdle to get past, but once you do and you figure out the appropriate techniques to use it effectively, it's actually pretty nice
20:23 <@nlf> then it confuses you when you have to write synchronous code for something
20:23 <@Bux> but the console (which I use for INFO and WARNING, ect) gets jumbled up with tasts at parts where it shouldnt
20:23 <@Bux> tasks*
20:23 <@nlf> i definitely recommend reading http://callbackhell.com/
20:23 <@Owner> lol
20:24 <@mscdex> when i switch between js and php, i keep wanting to use the js array literals in php
20:24 <@mscdex> :\
20:24 <@Owner> nlf~# ooh nice link
20:24 <@Bux> hehe, I used to php some time ago
20:24 <@nlf> thankfully i never use php
20:24 <@nlf> ever
20:24 <@mscdex> php pays the bills
20:24 <@Bux> got back to java and node now
20:24 <@nlf> we use node almost exclusively any more
20:25 <@nlf> there's still some python floating around, but not much
20:25 <@Bux> node is really flexible :)
20:25 < TonkaTruck> mscdex: I think your advice is similar to Issac Schlueter's advice here: https://groups.google.com/forum/?fromgroups#!topic/npm-/8SRXhD6uMmk
20:25 <@mscdex> Owner: the other option is to use a flow control module. caolan's 'async' npm module is highly recommended if you choose that path
20:25 <@Bux> eg: https://github.com/JeromSar/Web-NodeJS
20:26 < Brightstar> Can anybody point me to some good resources that explain what async js code looks like? I've done a fair bit of sync coding (browser side) but this async thing is twisting my brains. ...Specifically I'm having trouble understanding what makes the code execute asynchronously.
20:26 < nickhs> Hey there, I'm using express and connect to do basicAuth and protect specific routes. However I would like to disable the basicAuth if the user chooses to do so - how would I go about that?
20:26 < totallymike> Brightstar: The stuff that makes it happen asynchronously is in the back end.
20:27 < totallymike> Meaning you don't see it.
20:27 <@Owner> mscdex~# ok thanks, ill take a lookl
20:27 <@Bux> nickhs: prob a config or something
20:27 < nickhs> Bux: ?
20:27 < totallymike> You just give your async functions a callback, which gets run whenever the conditions are correct.
20:27 <@Bux> I use a config.ini which the user can modify to disable features
20:28  * Owner sends 20 copies of callbackhell.com to the printer
20:28 < nickhs> Bux: oh sorry if I didn
20:28 < nickhs> '
20:28 <@Bux> no matter
20:28 <@Bux> lemme type something in pastebin for you
20:28 <@Bux> wb whiskers
20:28 < nickhs> Bux: sorry if I didn't make it clear, I would like to disable the check during runtime
20:28 < TonkaTruck> Brightstar: Yeah I was going to say...I just googled nodejs callback hell yesterday and discovered the async module.
20:28 <@Bux> oh right
20:28 <@Bux> prob ask in console?
20:28 <@mscdex> Brightstar: async in node (core) is basically handled two ways: callbacks and events
20:29 < whiskers75> ops plz
20:29 < nickhs> Bux: console?
20:29 <@Bux> yeah, the black box
20:29 <@Bux> :P
20:29 < merpnderp> .
20:29 <@mscdex> Brightstar: callbacks are called at most once whereas events can happen more than once
20:30 <@Bux> brb, the toilet misses me
20:31 < Brightstar> ...Helping you to understand where I'm at a bit... I have no coding experience outside of javascript. I've started learning to code because of a specific project, did my research and found that node was the best option for this project. ...So I'm coming at this as something of a newbie, but I HAVE written enough browser side javascript code (especially recently) that I know how to make programs work. ...The problem is that I'm l
20:32 < Brightstar> mental reference points I need to see what makes something async as compared to synchronous syntactically and I really don't want to start experimenting with this until I have some grasp of that
20:32 < KiNgMaR> Brightstar: the problem is that you are not aware that IRC cuts messages after about 400-500 characters ;)
20:32 <@Bux> back
20:32 < blazes816> mscdex: what do you mean at most once?  something like [1,2,3].map(function(el){...}); has a callback getting called multiple times, correct?
20:32 <@Bux> super-fast-toilet-break
20:32 <@mscdex> blazes816: node core callbacks
20:32 < blazes816> oh, okay
20:32 < blazes816> cool
20:33 <@whiskers75> Bux: ha ha. If I get kicked, will it have any other affect on me than cutting my connection once?
20:33 <@Bux> nope
20:33 <@Bux> but you will get deopped
20:33 <@whiskers75> ok then ill kick myself, to see what happens
20:33 < RedLionSVM> Could someone please point me to a WORKING resource on seeing the profiler in the browser? 
20:33 <@Bux> ok sure :)
20:34 -!- whiskers75 was kicked from #Node.js by IRCbot_Master [Disconnected by admin]
20:34 <@Bux> :P
20:34 < RedLionSVM> Profile tab is missing in debugger (Chrome latest linux) when using these instructions.
20:34 < RedLionSVM> https://github.com/felixge/node-memory-leak-tutorial
20:34 <@Bux> wb
20:34 < whiskers75> ok that worked :)
20:34 < whiskers75> ops plz
20:34 < AviMarcus> ops plz
20:34 <@Bux> I prefer the IRCbot for Opping myself
20:34 <@AviMarcus> ah good someone opped him :P
20:35 <@Bux> guys: PM the IRCbot_master with "opme" to get op too :P
20:35 <@mscdex> Brightstar: here are some links worth reading up on that may help you: http://www.nodebeginner.org/ http://nodeguide.com/ http://nodetuts.com/ http://howtonode.org/
20:35 <@AviMarcus> oh cool
20:35 < context> mmm. why doesnt geddy produce a package.json ?
20:35 <@whiskers75> Bux: well it is a bit tedious, /msg IRCbot_Master op
20:35 <@whiskers75> -me
20:35 <@Bux> just use /query
20:35 <@Bux> then you get a chatbox
20:36 <@Bux> where you type commands in
20:36 <@whiskers75> unknown command query
20:36 <@AviMarcus> good to know
20:36 <@Bux> use /query IRCBot_master 
20:36 <@Owner> anyone use smartos?
20:36 <@whiskers75> ah
20:37 < Brightstar> mscdex: Thank you. I HAVE read all of those except nodeguide fairly exhaustively. ...As I said I just don't have the experience to make all the pieces fall in place. Plus i learn best by doing. I'm nearly at the point where I can start doing something and see what it does (to help me process) ...Just trying to connect the last few dots. ...I'll see what I can find in nodeguide.
20:37 <@Bux> my coding routine: 
20:38 <@whiskers75> It's funny. You deop the bot, it deops you, gives you a warning, then ops you again if you ask it nicely...
20:38 <@Bux> google, copy, paste, google, copy, paste
20:38 <@Bux> only if you know how to :)
20:38 <@Bux> dont tell :P
20:38 <@Bux> oh right
20:38 <@whiskers75> Bux: yeah, good for newbs like me
20:38 <@Bux> I already did :P
20:38 < TonkaTruck> Brightstar: Some general js books might be good too...like The Good Parts
20:38 <@whiskers75> and I wont tell
20:39 <@Bux> no matters anyways
20:39 <@whiskers75> althought they already know opme
20:39 <@Bux> just PM the bot with opme
20:39 <@Bux> yeah
20:39 < glesperance> hey guys. I'm currently trying to deploy my nodejs app via puppet and my puppet script fails at installign the npm deps of the app. I am sure npm is properly invoked since it is able to  spit out a npm-debug.log ; the weird thing is that if I log onto the machien and exec npm install myself, everything isntalls properly...
20:39 <@Bux> or /query IRCbot_master opme
20:39 <@Bux> Idk puppet
20:39 < Brightstar> TonkaTruck: Extremely limited budget. ...Buying books is right out.  Thanks much though.
20:40 <@mscdex> Brightstar: some info on nodeguide.com is outdated (like references to old node versions), but still mostly relevant
20:40 <@whiskers75> Bux: my coding routine:
20:40 < Brightstar> mscdex: yeah that seems to be fairly common. Par for the course really, considering how new the language is.
20:40 < glesperance> is there anythign special that needs to be speicfied in PATH or something for npm to use node-gyp proeprly?
20:40 <@whiskers75> type, check error field, attempt to fix error, type, etc (Cloud9 is a big help)
20:41 <@Bux> I debug by hand
20:41 <@nlf> my coding routine: guess, check
20:41 <@Bux> all you little skids with debug software
20:41 <@Bux> :P
20:41 <@whiskers75> nlf: hey, cut me some slack, Im a newb
20:41 <@Bux> btw, I dont find debugging hard at all
20:41 <@Bux> me too :P
20:41 <@nlf> if it doesn't work, log everything.
20:42 <@Bux> oh right, me too
20:42 <@mscdex> Brightstar: the MDN is also a good general javascript resource: https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide
20:42 <@Bux> big help to have an option in the config called "debug"
20:42 <@Bux> then you can do if(debug){ console.log(blabla); }
20:42 < Brightstar> mscdex: last time I tried to use that all the links were broken :P ...I"ll check to see if they've fixed it.
20:42 <@whiskers75> i find it easy. (Little red 'x' next to line with error with helpful tooltips - also '!' and 'i's)
20:43 <@Bux> ah right
20:44 < sx_> Hi guys, npm seems to not have the latest versions of modules.  any recommendations to set up a new node.js server with latest modules?
20:44 <@whiskers75> it confused me when it once said 'eval is evil' (????)
20:44 <@mscdex> Brightstar: but anyway the difference between a sync and async function is the function's implementation. it's possible to have say synchronous database calls, but that can kill performance for servers
20:44 <@Bux> depends what you want, I always go for the direct  gits
20:44 <@rektide> sx_: projects ought define what modules they need
20:44 <@whiskers75> gits?
20:44 <@AviMarcus> sx_, it's not IN npm or your current install has an old version and you want to tell npm to grab the latest version?
20:44 <@Bux> dnt use npm much except IRC
20:44 <@Bux> github.org
20:44 <@rektide> sx_: your problem doesn't seem eral to me
20:44 <@whiskers75> i use gothub
20:45 <@whiskers75> github
20:45 <@Fabryz> so uhm, i'll link also here
20:45 <@Bux> cool
20:45 <@Fabryz> Follow #london2012 twitter trends with Tweet-a-table! http://tweet-a-table.nodejitsu.com/
20:45 <@Bux> can I have yours?
20:45 <@AviMarcus> sx_, also, packages started specifying a specific package that they KNOW it works with, even if it's not the latest
20:45 <@whiskers75> my what?
20:45 <@Bux> your github place? 
20:45 < sx_> ok, thanks
20:45 <@Bux> mine: https://github.com/JeromSar
20:46 <@whiskers75> <<<< github username
20:46 <@Bux> try https://github.com/JeromSar/web-nodejs
20:46 <@Bux> :)
20:46 <@Bux> oh right
20:46 <@Owner> i have nyaned for 65043 seconds
20:46 -!- frewsxcv changed the topic of #Node.js to: Node.js: A graphing library written in scripts of Java
20:46 <@Bux> wtf? frew
20:46 <@frewsxcv> now what
20:46 < bodisjw> graphing library eh
20:46 <@Bux> a graphing libary?
20:47 < bodisjw> scripts of Java!
20:47 < bodisjw> even better :-)
20:47 <@frewsxcv> That's why it's called Node, right?
20:47 <@frewsxcv> ;)
20:47 <@mscdex> node.js is competing with my TI-83 now? ;-)
20:47 <@rektide> i believe you mean warlord?
20:47 -!- Bux changed the topic of #Node.js to: Node.js a Server side socket manager for javascript
20:47 <@whiskers75> Bux: will go check out your repo now
20:47 <@Bux> ok cool
20:47 < Brightstar> mscdex: Right, I understand the theoretical difference between the sync and async. I just don't really grasp on a gut level what exactly makes a piece of code sync and what makes it async.
20:47 <@mscdex> not just sockets Bux
20:47 <@Bux> oh right
20:47 <@Bux> hold on
20:48 <@ben_alman> isaacs: is there any code i can test where child_process spawn "exit" and "close" events are different? I can't get them to ever be different things
20:48 <@ben_alman> except in really bizarre cases that are impossible to test reliably
20:48 <@isaacs> ben_alman: child=spawn('git', ['clone', 'git://github.com/isaacs/npm'])
20:48 <@Owner> can Bux be the official channel pet
20:48 <@isaacs> ben_alman: 'close' will happen a few ticks after 'exit', about 99% of the time
20:49 -!- Bux changed the topic of #Node.js to: Node.js Server side sofware for creating web-apps for javascript; written in Google's V8
20:49 <@Bux> haha right :p
20:49 <@whiskers75> Bux, cool repo
20:49 <@whiskers75> wait let me try
20:49 <@mscdex> Brightstar: javascript code execution itself is synchronous, but performing I/O does not have to be
20:49 <@Bux> thanks :)
20:49 <@rektide> this "node is for webapps" meme needs to DIAF
20:49 <@ben_alman> isaacs: is there any way you know of the test this that doesn't require http?
20:49 <@rektide> fuck ryah what were you thinking
20:49 <@isaacs> ben_alman: or just child=clone(process.execPath, ['-e 1'], {stdio:[0,1,2]})
20:49 <@ben_alman> i'm trying to write a unit test for this in grunt
20:49 <@isaacs> ben_alman: exit will happen right away, 'close' will never happen
20:49 <@Owner> rektide~# WtF
20:49 <@Bux> whiskers, I followed you
20:50 <@ben_alman> ok let me try that one
20:50 <@whiskers75> Bux: great thanks
20:50 <@rektide> Owner: there's very little specificly tailored about web serving in node
20:50 <@mscdex> Brightstar: so the code itself is sync, but I/O happens outside of javascript
20:50 < Brightstar> mscdex: so in that case the only part of my code I really care about making asynchronous is the part that handles I/O, correct?
20:50 <@rektide> Owner: saying that node is for building web apps is fantastically over type-casting of what nodescripts are competent at
20:51 <@whiskers75> Bux, same
20:51 <@Owner> rektide~# i dont use it liek that
20:51 <@Owner> i dont drink express koolaid
20:51 <@Bux> ok cool :)
20:51 -!- whiskers75 changed the topic of #Node.js to: The Official Node.js Support Channel
20:51 <@mscdex> Brightstar: for the most part yes. the thing you have to remember is that you're single threaded, so any long running code you have blocks anything else from happening
20:51 <@rektide> expres is just the chain of command pattern. which is a gerat pattern.
20:52 <@whiskers75> ;)
20:52 <@rektide> it's just a pity all the red additive they put in their sugar water
20:52 <@mscdex> Brightstar: that's why having async I/O is important
20:52 <@mscdex> Brightstar: because network and filesystem I/O can be very slow
20:52 <@Brightstar> mscdex: Right. Got that.  (And I understand the bit about how many cycles it takes to do database/disk/network access also)
20:52 <@rektide> Owner: what do you do with node
20:53 <@whiskers75> Bux: you should use Cloud9 IDE, works great with github
20:53 <@mscdex> Brightstar: you just want to make sure you don't do something like calculate PI in node if you're also handling network requests and things like that
20:53 <@Owner> rektide~# realtime crApps
20:53 <@Bux> is it free? :P
20:53 <@Bux> sorry, Im a freeby guy
20:53 <@isaacs> ben_alman: oh, i guess close still happens, nvm.
20:53 <@Bux> freebie*
20:53 <@rektide> Owner: what kind of app? what kind of data?
20:53 <@ben_alman> hmmn
20:53 <@mscdex> Brightstar: unlesss you break up the calculation of PI into chunks
20:53 <@Owner> rektide~# whatever i can think up at the moment
20:54 <@Brightstar> mscdex: Yeah, and I understand the bit about using something like cluster (I think it's called) to handle processor-greedy processes.
20:54 <@whiskers75> same. It has a free version, which does just fine.
20:54 <@Owner> rektide~# i may do a tropo app next
20:54 <@whiskers75> Bux: c9.io
20:54 <@Bux> oh ok, lemme check it out :) (whisk)
20:54 <@mscdex> Brightstar: right
20:54 <@whiskers75> 'k
20:54 <@Owner> im thinking text to speech, then speech to text  just to see what is lost in translation
20:54 <@ben_alman> isaacs: i guess i need an example where i see more stdout coming from the child process, between exit and close
20:54 <@Owner> hell i don tneed tropo for that...i can just feed google into google
20:54 <@Bux> *sign in with github*
20:55 <@whiskers75> yeah
20:55 <@ben_alman> isaacs: i was fooling with this https://gist.github.com/3209657
20:55 <@whiskers75> you can clone your projects
20:55 <@ben_alman> is there something i can do in the child to make it exit before all the stdout is flushed?
20:55 <@whiskers75> and push etc
20:56 <@whiskers75> plus watch the video ;)
20:56 < _Tristan1> npm search isn't working and that makes sad.
20:56 < npmbro> _Tristan1: Please see http://eirikb.github.com/nipster/#isn
20:56 <@Owner> http://wiki.ada-dk.org/index.php/AWS_vs_node.js
20:56 < _Tristan1> clever bot
20:57 < context> so, anyone know what this error means
20:57 < context> WARN package.json seed-relabel@0.0.1 No README.md file found!
20:57 < context> npm ERR! TypeError: Object #<Object> has no method 'trim'
20:57 < npmbro> context: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20ERR
20:57 < sabermonk> hi all , i am getting "write EPIPE - cannot write to IPC channel"  -- when forking multiple node instances from one and doing some file op in them. What might be the cause of this error?
20:58 <@whiskers75> context: the install script for something isnt right
20:59 <@Owner> sabermonk~# what happens when you only fork 1?
21:00 <@context> whiskers75: thnx
21:00 <@context> whiskers75: had dependencies: [] instad of {}
21:00 <@Owner> -NickServ- npmbro is not registered.
21:00 <@Brightstar> mscdex: Honestly my problem is actually fairly simple. I have a good grasp on the theory of why it works and what it does. ...I'm having issues with syntax. When I write javascript code I understand function(variable) to pass "variable" (defined elsewhere) to the "function." Something like this:   fs.readdir(".", function (err, filenames) { ...filenames is not defined elsewhere and I don't understand how it's getting its value.
21:00 <@isaacs> ben_alman: not in node, i don't think.
21:01 <@whiskers75> Bux: done with Cloud9 yet?
21:01 <@Bux> whisk: yeah, it looks awesome :)
21:01 <@Brightstar> mscdex: I'm also new enough at coding that anonymous functions somehow confuse me. ...I was looking for more material to read to hopefully get the ideas through my head.
21:01 <@Bux> who wants OP? :P
21:01 < sabermonk> Owner : no error, fork 1 meaning - the main node forks only one more node instance, it seems the communication happens properly with i 1 to 1
21:01 <@Owner> Brightstar~# http://callbackhell.com/
21:02 <@Brightstar> Owner: K ill have a look
21:02 <@maxogden> :D
21:02 <@mscdex> Brightstar: that function you pass in is being called sometime in the future when node finds out that your request is finished. it calls that function with certain information dependent on the type of request you made
21:02 <@whiskers75> Bux: the video's funny :)
21:02 <@Owner> sabermonk~# do you need to....make the IPC shared or something?
21:02 <@Brightstar> mscdex: so because I'm calling it as a parameter of fs.readdir, it's getting its info directly from there?
21:02 <@Bux> vid?
21:02 <@Bux> did I miss something ::O
21:02 <@ben_alman> isaacs: damn.
21:02 <@ben_alman> really hard to ensure unit tests work
21:03 <@whiskers75> the Google docs for code icon on their homepage not dashboard
21:03 <@whiskers75> at c9.io
21:03 <@Bux> ok lemme see
21:04 < sabermonk> Owner : ya, the forked node instances uses the default main node;s stdout
21:04 < sabermonk> not sharing anything explicitly
21:04 <@Owner> sabermonk~# have you tried 'silent' with more than 1 fork?
21:04 < sabermonk> Owner : no
21:04 < sabermonk> how to?
21:04 <@mscdex> Brightstar: it goes like this: 1. fs.readdir('somedir', foo); 2. node goes out to the file system and puts in a request to read the contents of 'somedir' and returns immediately. 3. some time later the file system responds and node gets this response. 4. node executes your callback function, passing information to it provided by the file system
21:05 <@Owner> sabermonk~# http://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options
21:06 < sabermonk> Owner: but i want the stdout of children to be streamed to main node, or how else i wud see the result of their operation
21:06 <@Owner> sabermonk~# well, at elast test it?
21:06 <@Owner> its called troubleshooting
21:06 <@Owner> also google
21:07 <@Owner> http://nodejs.org/api/cluster.html#cluster_how_it_works
21:07 < sabermonk> Owner: ya sure, i'll have to pipe to a file the result tells me where an op was successfull or not
21:07 <@mscdex> Brightstar: also, anonymous functions are just a way of passing in a function inline instead of passing in a named function: function foo(err, contents) {} fs.readdir('somedir', foo); versus fs.readdir('somedir', function(err, contents) {});
21:10 <@Owner> netsplit!
21:10 <@whiskers75> ?
21:11 <@whiskers75> netsplit?
21:12 <@whiskers75> Bux: seen the vid?
21:15 <@whiskers75> what is a netsplit?
21:16 <@whiskers75> ah hello Bux. seen the vid?
21:16 <@Bux> yeah, its pretty funny :P
21:16 < gicode> Any list moderators here?  I posted a question about memory usage a few hours ago and it seems to be stuck waiting for approval.
21:16 <@whiskers75> yeah- nirvana ;)
21:17 <@whiskers75> btw, whats  a netsplit?
21:17 < gicode> whiskers75: http://en.wikipedia.org/wiki/Netsplit
21:17 < ngl> Howdy. I want to send a text message to my phone when alerts come into my node server. Does anybody know of any node modules out there already have this ability?
21:18 < Domenic_> ngl: twilio API?
21:18 <@AviMarcus> ngl, is that an email, or an SMS with something like twilio?
21:20 < gicode> ngl: A lot of phone providers have an email -> sms gateway you can use for personal stuff so you don't have to pay for an SMS API.
21:20 < ngl> Looks like I should look into Twilio.
21:20 < ngl> I want SMS
21:22 < whiskers75> ah so thats what a netsplit is - and thats why tons of people disconnected
21:22 < ngl> Thanks all. I guess I need to look into the logistics of SMS'ing.
21:22 <@Bux> all who want op: /msg IRCbot_Master opme
21:23 <@Bux> :D
21:23 <@Bux> :D
21:23 <@whiskers75> Bux: used it for a change
21:23 <@Bux> haha :)
21:23 <@Bux> I gotta deop ryan to destroy my competition
21:23 < sabermonk> Owner: didn't observe the error with  silent:true but that wont fix the issue
21:24 <@whiskers75> why dont you? >;)
21:24 <@whiskers75> HHOJ
21:24 <@Bux> good question :P
21:24 <@Bux> >:)
21:25 <@whiskers75> i said only joking...
21:25 <@Bux> haha
21:25 <@Bux> _-_
21:25 <@Bux> spam x4
21:25 <@mscdex> spammity calamity
21:25 <@whiskers75> ?
21:26 <@Bux> my bot's better!
21:26 <@Bux> :P
21:26 <@whiskers75> oh the opping
21:26 <@whiskers75> sorry Bux, but ryan is easier to use...
21:26 <@Bux> I'll make it easier!
21:26 <@Bux> :P
21:27 <@Owner> sabermonk~# so what is your next course of action
21:27 <@whiskers75> Make it so that typing !opme will op you
21:27 <@Bux> yeah
21:27 <@Bux> !opme is good :)
21:27 <@Bux> why the ! btw? ::P
21:28 < Brightstar> mscdex: Just realized that the chat errored out. Thanks for the help. I think I'm starting to get it. I'll try to hack something together and see where my brain gets stuck. (Thanks also to TonkaTruck and Owner.)
21:28 <@whiskers75> for now, im lucky I have autocomplete 
21:28 < sabermonk> Owner: how would clusters solve my problem, i dont have a shared port to listen to. The forked node are spawing there own server on diff ports.
21:28 <@whiskers75> and the ! for saying its a command
21:28 <@mscdex> Brightstar: no problem, if you have any other questions, don't hesitate to ask
21:29 <@whiskers75> on ubuntu irc typing !something would make the bot tell you about 'something'.
21:29 < Brightstar> Oh don't worry. I will. :P Probably frequently.
21:29 <@Owner> sabermonk~# i dont know, i have never forked anything
21:29 < sabermonk> Owner: well thanks, what according to you, shud me my next course of action?
21:31 <@Bux> ok coding, 5 min
21:31 <@Bux> ./afk
21:31 <@Owner> sabermonk~# ask SomeoneWeird 
21:31 <@whiskers75> ok - use cloud9
21:31 <@whiskers75> ;)
21:31 < sabermonk> Owner: thanks for ur time ..
21:32 <@whiskers75> What's your favourite IDE? Mine is Cloud9
21:33 < gkatsev> vim?
21:33 < dereknelson> Can anyone give me some advice for build tooling
21:33 < dereknelson> I like IntelliJ Idea
21:34 <@whiskers75> I find Vim a little hard
21:35 <@Owner> hmm he left instead of asking lol
21:35 <@whiskers75> cloud9 makes debug easy "Ah, there is a little red X next to a line of my code, and a handy tooltip. That's helpful!"
21:35 <@AviMarcus> I'm using sublime text 2 with jslint
21:35 <@mscdex> us hardcore developers use text editors with only syntax highlighting ;-)
21:36 < dereknelson> IntelliJ does that as well
21:36 <@AviMarcus> and waiting for light table from kickstarter to finish
21:36 <@whiskers75> mscdex: us newbies love Cloud9 - and hardcores should like it too, though ;)
21:36 < TonkaTruck> mscdex: I'm going this route (npm rebuild) http://eng.yammer.com/blog/2012/1/4/managing-nodejs-dependencies-and-deployments-at-yammer.html
21:37 < Nuck> AviMarcus: Sublime FTW.
21:37 < Nuck> mscdex: Real men use magnets.
21:37 < Brightstar> speaking of text editors, I'm using notepad++ in windows. Can anybody recommend something similar (in basic function--I don't care too much about extras) for linux?
21:37 <@AviMarcus> Nuck, you got any special stuff setup? I mostly only use the git sidebar plugin
21:37 < ngl> Magnets, how do they work?
21:37 < Brightstar> and lol magnets. >.<
21:37 <@whiskers75> Brightstar: I like gedit
21:37 <@mscdex> Brightstar: gedit
21:37 < brianc1> hola
21:37 < Nuck> Brightstar: There's always Kate or Gedit (the KDE and Gnome ones)
21:38 < Brightstar> Thanks.
21:38 <@whiskers75> yeah - general response gesit
21:38 <@mscdex> Brightstar: although, gedit is missing some nice features from notepad++
21:38 <@whiskers75> gedit*
21:38 <+Niloc> st2++
21:38 <@whiskers75> Or Emacs
21:38 < brianc1> question about domains: are domains intended to be used on a per-http-request basis or is their creation too expensive?
21:38 <@mscdex> like automatic highlighting of all tokens matching the currently highlighted token
21:38 <@mscdex> at least last i checked
21:39 < Brightstar> Personally what I miss most is the black text on white background and syntax highlighting. ...and yeah that. >.<
21:39 <@AviMarcus> sublime does that mass highlighting. it's pretty cool.
21:39 < Nuck> AviMarcus: I have the Git Plugin, and that's about all I use.  Some really shoddy plugins exist for Node.js (the autocomplete provider makes me wanna shoot myself)
21:39 <@AviMarcus> heh. console.l... hey, where did my autocomplete just go!
21:39 < Nuck> AviMarcus: Exactly!
21:40 < Domenic_> Anyone have a module to turn [x, y, z] into "x, y, and z"? I don't want to write that code again. SubStack?
21:40 < Nuck> I tpye "console.l", hit tab, and it gives me... fs.writeFileSync.  Great.
21:40 <@whiskers75> Cloud9 supports Git, hg and mercurial, does that, autocompletes(ish), syntax highlights, debugs...
21:40 < dereknelson> Hello all, I'm looking for a build process for removing CommonJS calls and putting things in one file for use in browser.  Similar to what Ember does, anyone have some advice?  Thanks in advance.
21:40 <@whiskers75> Nuck: WHAT?!
21:40  * AviMarcus can't wait for light table http://www.kickstarter.com/projects/ibdknox/light-table (beta is out and does closure)
21:40 < Domenic_> dereknelson: browserify https://github.com/substack/node-browserify
21:40 < Nuck> whiskers75: The Node.js autocomplete module for Sublime :P
21:41 < Nuck> Really sad algorithm
21:41 <@AviMarcus> mmm may 2013 estimated completion of light table.
21:41 < Nuck> Light Table will be awesome, but hard to add new languages to
21:42 < dereknelson> Domenic_ thanks I am going to try it out!
21:42 <@AviMarcus> hard? they said the original languages will be modules too
21:42 <@mscdex> Domenic_: var a = [x, y, z]; a[a.length-1] = 'and ' + a[a.length-1]; a = a.join(', ');
21:42 < Nuck> That shit's easy with Lisp.
21:42 <@mscdex> Domenic_: :-)
21:42 <@AviMarcus> so it sounds like it should be very possible
21:42 < Nuck> But it'll be tougher to implement with a language like JS, etc.
21:42 <@AviMarcus> they are releasing JS native
21:42 <@AviMarcus> not sure how much that will fit with node.js though
21:42 <@AviMarcus> oh
21:42 < Nuck> Wow, this should be interesting
21:42 <@AviMarcus> ok
21:43 <@rektide> dereknelson: i've had good success using Require http://github.com/marcuswestin/require
21:43 < whiskers75> useless irc client
21:43 < Domenic_> mcsdex: yeah you just mutated my array you meanie.
21:43 <@mscdex> :-D
21:43 <@mscdex> so make a copy
21:43 <@rektide> (such good success I have a fork that's turned into a full blown rewrite!)
21:43 < Domenic_> i know... just.... why do i keep writing this code.
21:43 <@mscdex> Domenic_: put it in a function and re-use it
21:43 < whiskers75> why did ChanServ do that?
21:43 <@rektide> dereknelson: i happen to like what require does better, but Browserify is exceedingly popular
21:44 < Domenic_> mscdex: yeah ofc, just, I make that function every project
21:44 <@mscdex> Domenic_: then put that function in a module and re-use the module ;-)
21:44 < Domenic_> I was inspired by TJ's domify (https://github.com/component/domify) which is another one of those functions I rewrite every project
21:44 < Domenic_> mscdex: yeah that's the plan. just assumed someone else would have done it first
21:45 < Domenic_> aaaand search.npmjs.org is borked
21:46 <@rektide> painful silence in the room as isaacs_home nudges the hampster wheel back into action
21:49 <@mscdex> Domenic_: https://gist.github.com/e0ecbeee612de9548a7c
21:50 < brianc1> anyone using domains in their app yet?
21:50 < Domenic_> brianc1: basically isaacs only from what I can tell. Someone really needs to teach the community about them.
21:51 < whiskers75> Goodbye
21:51 < Domenic_> I was hoping to learn about domains at NodeConf but I guess not. Hopefully summercamp
21:51 < brianc1> hmmm
21:51 < Domenic_> brianc1: apparently the npm-www project (i.e. the new npm site) is a good example of using them; might be worth checking out
21:51 <@Bux> ok I'm back
21:51 < brianc1> i'll put them in my app & see what happens
21:51 <@Bux> restarting the IRC bot
21:53 <@CIA-93> libuv: Bert Belder v0.8 * r73096da / (include/uv-private/uv-win.h include/uv.h src/win/fs.c): windows: fix memory leaks in fs - http://git.io/rxTndA
21:54 <@Bux> ok good
21:54 < Bux> test
21:54 < Bux> opme
21:54 <@Bux> :D
21:55 < brianc1> Domenic_: thanks for the info
21:55 < brianc1> Domenic_: checking out npm-www now
22:01 < brianc1> apparently you don't have to dispose of a domain unless there is an error, it will get GC'd as normal...i suppose when all of it's managed i/o components are gc'd
22:03 < vincentmac> does anyone have any experience using Amazon DynamoDB and have a recommendation for a node library for it?
22:03 <@CIA-93> libuv: Ben Noordhuis v0.8 * rc803c65 / (include/uv-private/uv-win.h include/uv.h): include: move ssize_t workaround to uv-win.h - http://git.io/3g4wqQ
22:03 <@CIA-93> libuv: Bert Belder v0.8 * r7e6b335 / src/win/fs.c : windwos: remove unreachable code from fs.c - http://git.io/VvVgwA
22:03 <@CIA-93> libuv: Bert Belder v0.8 * r81a9826 / include/uv.h : common: uv_fs_t.path should be constant - http://git.io/SNldnw
22:04 <@IRCbot_Slave> Bux, you have been given a warning for deopping IRC bots!
22:04 < Bux> cool :)
22:04 < Bux> opme
22:05 <@CIA-93> libuv: Bert Belder v0.8 * r514265e / (include/uv-private/uv-win.h include/uv.h src/win/fs.c): windows: fix memory leaks in fs - http://git.io/bZFFKQ
22:05 <@CIA-93> libuv: Ben Noordhuis v0.8 * r4168855 / (include/uv-private/uv-win.h include/uv.h): include: move ssize_t workaround to uv-win.h - http://git.io/it7ipQ
22:05 < dominictarr> Bux, what do your bots do?
22:05 <@Bux> they manage OP's
22:05 <@Nexxy> spam the channel with modes.
22:05 <@Bux> try "opme'
22:05 < dominictarr> opme
22:05 <@Bux> no nexxy, they're quiet :P
22:06 <@Nexxy> really?
22:06 < _Tristan1> they should op people when they join
22:06 <@Bux> only when you harras them with commands for testing (me) then yeah
22:06 <@Bux> sorry for that
22:06 <@isaacs> dominictarr: "ops plz" i think is the phrase
22:06 <@IRCbot_Slave> Nexxy, you have been given a warning for deopping IRC bots!
22:06 < Nexxy> so quiet
22:06 <@Bux> isaacs, I made a better bot for it :)
22:06 <@Bux> its opme now
22:06 <@dominictarr> isaacs bux's bot takes "opme"
22:06 <@isaacs> opme
22:06 <@isaacs> oh, o
22:06 <@isaacs> ok
22:06 <@dominictarr> only 4 chars
22:07 <@Bux> also, you cant deop it
22:07 < isaacs> opme
22:07 <@isaacs> boom
22:07 <@isaacs> love it
22:07 <@Bux> :D
22:07 < Nexxy> oh joy.
22:07 <@Bux> run on nodejitsu so its 24/7
22:07 <@IRCbot_Master> dominictarr, you have been given a warning for deopping IRC bots!
22:07 <@isaacs> deop
22:07 <@maxogden> lol
22:07 < Steisi_F> lol
22:07 <@Bux> right domi :P
22:07 < dominictarr> opme
22:07 <@IRCbot_Slave> dominictarr, you have been given a warning for deopping IRC bots!
22:08 <@mscdex> deopme
22:08 <@IRCbot_Master> isaacs, you have been given a warning for deopping IRC bots!
22:08 <@Bux> haha :P
22:08 < drudge> what if you deop them both in the same mode line
22:08 -!- #Node.js You're not a channel operator
22:08 <@mscdex> drudge: then he's SOL
22:08 <@Bux> slave + master = awesomeness
22:08 < drudge> :P
22:08 < _Tristan1> kinky
22:08 < Steisi_F> :D:D
22:08 -!- #Node.js You're not a channel operator
22:08 <@IRCbot_Slave> ChanServ, you have been given a warning for deopping IRC bots!
22:08 < _Tristan1> opme
22:08 < drudge> you need more bots! to meet the max # of modes on freenode
22:08 <@Bux> isaacs, you're from the node.js team right?
22:09 < dominictarr> right, so when one gets deoped, the other one ops it back, and deops the deopper?
22:09 <@isaacs> Bux: yes.
22:09 -!- IRCbot_Master was kicked from #Node.js by isaacs [IRCbot_Master]
22:09 <@IRCbot_Slave> isaacs, you have been given a warning for kicking IRC bots!
22:09 <@Bux> ok imma send you some commands for the bot
22:09 -!- #Node.js You're not a channel operator
22:09 <@Bux> cause theres more
22:09 -!- IRCbot_Slave was kicked from #Node.js by isaacs [IRCbot_Slave]
22:09 <@IRCbot_Master> isaacs, you have been given a warning for kicking IRC bots!
22:09 <@rektide> !files
22:09 < isaacs> opme
22:09 <@rektide> .... your bots suck
22:09 <@context> anyone here use bootstrap care to look at this quick, it just seems like a /lot/ of row/span* divs for something so simple: http://pastie.org/4361635
22:09 <@rektide> ;)
22:09 <@Bux> they own :)
22:09 < Steisi_F> I need someone to make a program for me, the budget is $500
22:10 <@Bux> cause you cant deop, kick or ban them
22:10 -!- IRCbot_Master was kicked from #Node.js by isaacs [IRCbot_Master]
22:10 -!- IRCbot_Slave was kicked from #Node.js by isaacs [IRCbot_Slave]
22:10 < IRCbot_Slave> isaacs, you have been given a warning for kicking IRC bots!
22:10 <@frewsxcv> context: ask #twitter-bootstrap
22:10 <@context> frewsxcv: yeah did, dead in there
22:10 <@isaacs> IRCbot_Slave: you're quick!
22:10 <@Bux> nuuu
22:10 -!- IRCbot_Slave was kicked from #Node.js by isaacs [IRCbot_Slave]
22:10 < IRCbot_Master> isaacs, you have been given a warning for kicking IRC bots!
22:10 <@Nexxy> lol
22:11 <@Bux> leave them please _-_
22:11 <@isaacs> hehe
22:11 <@Bux> or do I need to make 50 bots :P
22:11 < dominictarr> line1
22:11 < dominictarr> line2
22:11 <@isaacs> we abuse bots in here :)
22:11 <@isaacs> ircretary: isn't that right?
22:11 <@ircretary> isaacs: I'm not sure what to do with that command.  Ask for help in PM.
22:11 < dominictarr> opme
22:11 <@isaacs> ircretary: tell IRCbot_Master opme
22:11 <@ircretary> isaacs: I'll be sure to tell ircbot_master
22:11 <@Nexxy> I feel like I'm on irc.msn.com
22:11 -!- IRCbot_Master was kicked from #Node.js by isaacs [IRCbot_Master]
22:11 <@IRCbot_Slave> isaacs, you have been given a warning for kicking IRC bots!
22:11 -!- IRCbot_Master was kicked from #Node.js by frewsxcv [IRCbot_Master]
22:11 <@IRCbot_Slave> frewsxcv, you have been given a warning for kicking IRC bots!
22:11 <@Bux> okplease guys!
22:11 <@Bux> _-_
22:11 <@isaacs> hahahahah
22:12 < IRCbot_Slave> dominictarr, you have been given a warning for deopping IRC bots!
22:12 < IRCbot_Master> dominictarr, you have been given a warning for deopping IRC bots!
22:12 < frewsxcv>  /ban *
22:12  * sevvie giggles.
22:12 <@dominictarr> opme
22:12 <@Bux> dont!
22:12 < IRCbot_Slave> Nexxy, you have been given a warning for deopping IRC bots!
22:12 < IRCbot_Master> Nexxy, you have been given a warning for deopping IRC bots!
22:12 <@Nexxy> oh
22:12 <@Nexxy> such a warning
22:12 <@Bux> nexxy!
22:12 <@Bux> _-_
22:12 <@Nexxy> I need to figure out how to filter out all of these modes
22:13 <@isaacs> hmm.... i have an idea...
22:13 < IRCbot_Slave> dominictarr, you have been given a warning for deopping IRC bots!
22:13 < IRCbot_Master> dominictarr, you have been given a warning for deopping IRC bots!
22:14 <@dominictarr> hey bux ? are you still op?
22:14 <@dominictarr> where did he go?
22:14 -!- IRCbot_Master was kicked from #Node.js by isaacs [IRCbot_Master]
22:14 < IRCbot_Slave> isaacs, you have been given a warning for kicking IRC bots!
22:14 <@isaacs> hrm.. the /nick didn't work
22:14 <@isaacs> oh well
22:14 <@Nexxy> lol
22:15 -!- IRCbot_Master was kicked from #Node.js by dominictarr [IRCbot_Slave ]
22:15 < IRCbot_Slave> dominictarr, you have been given a warning for kicking IRC bots!
22:15 -!- IRCbot_Master was kicked from #Node.js by dominictarr [\n /kick IRCbot_Slave ]
22:15 < IRCbot_Slave> dominictarr, you have been given a warning for kicking IRC bots!
22:15 < Bux> back
22:15 < Bux> opme
22:15 < Bux> hey!
22:15 < Bux> domi stop!
22:15 < Bux> please
22:15 < Bux> ops plz
22:15 <@maxogden> think of the bots, dominic! think of the bots!
22:15 <@dominictarr> hey, it's nothing personal, 
22:15 <@dominictarr> I just wanted to see if I could break it.
22:16 <@Bux> no matter :P
22:16 <@Bux> dont tell
22:16 <@Bux> tomorrow, adding 50 more bots :P
22:16 <@Nexxy> yeahhhhh
22:16 < drudge> web scale
22:16 <@_Tristan1> There is no order in this room
22:16 <@isaacs> we have chanserv, you know.
22:16 <@dominictarr> Nexxy, scarcasm isn't enough.
22:16 < DTrejo> this is funny
22:16 < DTrejo> what's going on heh
22:16 <@dominictarr> you need to fight back with a BOT!
22:16 < Domenic_> ^ truth
22:16 <@Nexxy> DTrejo, people are reminiscing of circa 2002
22:17 <@IRCbot_Slave> ChanServ, you have been given a warning for deopping IRC bots!
22:17 <@isaacs> hahah
22:17 < Domenic_> Shit's getting real
22:17 < Domenic_> At least they're fighting each other and not us
22:17 <@Bux> chanserv? _-_
22:17 < DTrejo> op plz
22:17 <@isaacs> pretty sure chanserv's still an op
22:17  * isaacs has chanserv's number
22:18 <@Bux> haha :P
22:18  * DTrejo see isaac going on a date with chanserv
22:18 <@DTrejo> *sees
22:18 <@dominictarr> Nexxy, the trick is deoping both his bots before the message makes the round trip to whereever his bots are
22:18 <@Nexxy> dominictarr, it's easy with 1 command
22:18 <@isaacs> DTrejo: oh, we've got a private channel going ALL the time, if you know what i mean.
22:18 <@IRCbot_Slave> Nexxy, you have been given a warning for deopping IRC bots!
22:18 <@IRCbot_Slave> Nexxy, you have been given a warning for deopping IRC bots!
22:18  * isaacs means a private irc channel.  it's not very illicit.
22:18 < Nexxy> woops
22:18 <@DTrejo> naughtayy
22:19 <@_Tristan1> take the source of this bot and put two different usernames in
22:19 -!- mode/#node.js [+o Nexxy] by ChanServ
22:19 <@_Tristan1> then convince one to deop the other
22:19 -!- mode/#node.js [-oo IRCbot_Master IRCbot_Slave] by Nexxy
22:19 < IRCbot_Slave> Nexxy, you have been given a warning for deopping IRC bots!
22:19 < IRCbot_Master> Nexxy, you have been given a warning for deopping IRC bots!
22:19 <@Nexxy> LOLOLOL
22:19 <@DTrejo> haha
22:19 <@Nexxy> I win.
22:19 <@Bux> omg nexy
22:19 -!- mode/#node.js [+o IRCbot_Master] by Bux
22:19 < IRCbot_Slave> Nexxy, you have been given a warning for deopping IRC bots!
22:19 < IRCbot_Master> Nexxy, you have been given a warning for deopping IRC bots!
22:19 -!- Nexxy was kicked from #Node.js by _root_ [Mass deop.  Go sit in a corner.]
22:19 < IRCbot_Master> Nexxy, you have been given a warning for deopping IRC bots!
22:19 -!- mode/#node.js [-oo IRCbot_Master IRCbot_Slave] by Nexxy, Nexxy
22:19 -!- mode/#node.js [+o Nexxy] by ChanServ
22:19 <@Nexxy> rofl
22:19 <@Bux> stop please
22:20 <@_Tristan1> op plz
22:20 -!- mode/#node.js [+o _Tristan1] by ryan_opper
22:20 <@DTrejo> wtff
22:20 <@_Tristan1> ops plz
22:20 -!- mode/#node.js [+o _Tristan1] by ryan_opper
22:20 <@Nexxy> but that's what they're for
22:20 -!- mode/#node.js [-o ryan_opper] by _Tristan1
22:20 <@_Tristan1> this is a game I can win.
22:20 <@isaacs> ircretary: tell Bux hello
22:20 <@ircretary> isaacs: I'll be sure to tell bux
22:20 <@_Tristan1> no master slave kinky bullshit going on there.
22:20 <@isaacs> Bux: now do /msg ircretary notes
22:20 <@_Tristan1> ops plz
22:20 <@_Tristan1> teehee
22:21 -!- mode/#node.js [-o isaacs] by ChanServ
22:21 < isaacs> stops plz
22:21 < isaacs> stop plz
22:21 <@Bux> ircretary has no notes
22:21 <@ircretary> Bux: I don't have any notes for you.
22:21 < isaacs> ah, the regexp is smarter :)
22:21 < isaacs> op plz
22:21 < isaacs> ops plz
22:21 < isaacs> hm, did it die?
22:21 < Domenic_> ohhhhhh noooooo
22:21 <@DTrejo> someone deopped the opper
22:21 <@_Tristan1> didn't do shit
22:21 -!- mode/#node.js [+o isaacs] by ChanServ
22:21 <@DTrejo> need to give op back to ryan_opper
22:21 <@DTrejo> it
22:21 -!- mode/#node.js [+o ryan_opper] by ChanServ
22:21 <@DTrejo> it's _Tristan1's fault
22:22 <@isaacs> oh no, the IRCbot twins are gone /o\
22:22 <@isaacs> i was trying so hard to boot them and now we did, and i'm sad.
22:22 < Domenic_> I am... surprisingly ok with that
22:22 <@Bux> god, guys, you crashed the bot _-_
22:22 <@Bux> lemme restart it
22:22 <@_Tristan1> "/mode -o *" - didn't work :(
22:22 <@isaacs> hahaha
22:22 < drudge> k-lined!
22:22 < shanse> ops plz
22:22 -!- mode/#node.js [+o shanse] by ryan_opper
22:22 <@Bux> dont crash it again tho _-_
22:22 -!- mode/#node.js [+oooo atxryan jgornick aguai ph^] by shanse
22:22 -!- mode/#node.js [+oooo ralphholzmann wang r126f mickhansen] by shanse
22:22 -!- mode/#node.js [+oooo ryanrolds_w_ armetiz petschm distracteddev] by shanse
22:22 -!- mode/#node.js [+oooo alexgordon awhamblin shaker dpino] by shanse
22:22 <@isaacs> Bux: dude, we WILL crash it again, repeatedly
22:22 -!- mode/#node.js [+oooo elijah-mbp bicranial shurain orlandovftw] by shanse
22:22 -!- mode/#node.js [+oooo alek_b fivetanley jonaslund hotch] by shanse
22:22 -!- mode/#node.js [+oooo TomWij chjj thealphanerd redir_] by shanse
22:22 -!- mode/#node.js [+oooo Typo tdmackey joshthecoder trodrigues] by shanse
22:22 -!- mode/#node.js [+oooo cxreg mikey_p retornam callumacrae] by shanse
22:23 -!- mode/#node.js [+oooo goraxe mikl NimeshNeema trb] by shanse
22:23 -!- mode/#node.js [+oooo lbljeffmo skaslev skiz hatch] by shanse
22:23 -!- mode/#node.js [+oooo zaphod1994 mikeal msteinert dz0ny] by shanse
22:23 -!- mode/#node.js [+oooo jol02 piggybox Brightstar Internet13] by shanse
22:23 -!- mode/#node.js [+oooo lxnch AlbireoX epokmedia simpan] by shanse
22:23 -!- mode/#node.js [+oooo Weasel-Soup colinclark daffl Ytserman] by shanse
22:23 -!- mode/#node.js [+oooo joshfinnie raja bodisjw gorbiz_] by shanse
22:23 -!- mode/#node.js [+oooo kenperkins funktronic SuperShabam Aikar] by shanse
22:23 -!- mode/#node.js [+oooo Vbitz Twelve-60 saikat CStumph] by shanse
22:23 -!- mode/#node.js [+oooo zz_shykes raydeo Lartsa munro] by shanse
22:23 -!- mode/#node.js [+oooo aka Blorb adamholwerda inarru] by shanse
22:23 -!- mode/#node.js [+oooo dwierenga MikeW stutter templaedhel] by shanse
22:23 <@Bux> omg
22:23 -!- mode/#node.js [+oooo cryptix jrajav halfhalo fatjonny] by shanse
22:23 -!- mode/#node.js [+oooo hamms jxson_ xSmurf hipertracker] by shanse
22:23 -!- mode/#node.js [+oooo postwait foraks metellus hipsters_] by shanse
22:23 -!- mode/#node.js [+oooo broofa radiodario serapath devdazed] by shanse
22:23 -!- mode/#node.js [+oooo Senji bren2010 joeytwiddle iwoj] by shanse
22:23 -!- mode/#node.js [+oooo extrawurst TheHippo Inoperable __doc__] by shanse
22:23 -!- mode/#node.js [+oooo AaronMT mertimor jakehow Hebo] by shanse
22:23 -!- mode/#node.js [+oooo Vennril pontius githogori Axsuul] by shanse
22:23 -!- mode/#node.js [-o shanse] by ChanServ
22:23 -!- mode/#node.js [+oooo zorzar tvw _Renegade EnosFeedler] by shanse
22:23 <@_Tristan1> sweet baby jesus.
22:23 <@Bux> shanse?
22:23 -!- mode/#node.js [-o shanse] by ChanServ
22:23 <@isaacs> shanse: hi :P
22:23 <@dominictarr> CHAOS REIGNS
22:23 <@chilts> I'm sorry, but this channel is starting to get less and less interesting with all the ops, bots and stuff like that
22:24 <@DTrejo> can we kill all the bad bots and make only the important people be ops?
22:24 <@chilts> funny yes, useful no
22:24 <@DTrejo> important and socially responsible
22:24 < Domenic_> it's end of work day, this is exactly the kind of shenanigans i am in the mood for. personally.
22:24 <@chilts> Domenic_: it's the start of my day :)
22:24 <@DTrejo> its 330pm
22:24  * Nexxy senses the birth of #node.js-offtopic
22:25 <@isaacs> oh, can we please not have this "we need to talk about the irc channel" talk in the irc channel?
22:25 <@isaacs> Nexxy: that's what this room IS
22:25 <@Bux> omg _-_
22:25 <@AviMarcus> it does seem less useful when ops aren't actually experts/devs/etc.
22:25 <@_Tristan1> lets all get high
22:25 <@_Tristan1> </room>
22:25 <@isaacs> Nexxy: there's already #nodejitsu, #stackvm, #libuv, #expressjs, etc.
22:25 <@dominictarr> isaacs, that discussion belongs on the mailing list!
22:25 < Domenic_> ^ rofl
22:25 <@isaacs> dominictarr: you and i are enemies now.
22:25 <@isaacs> ok, back to working on search for npm-www.
22:26 <@DTrejo> dominictarr: where do you live?
22:26 <@dominictarr> no fixed abode.
22:26 <@dominictarr> I'm in poland, at mmalecki's place right now.
22:26 <@DTrejo> vagacoder
22:26 <@dominictarr> pretty much.
22:26 <@isaacs> dominictarr is the paradigm of the nomad coder.
22:27 <@dominictarr> but I'm gonna be settled in europe for a bit
22:27 <@isaacs> dominictarr: you learn any polish?
22:27 <@DTrejo> nomadicnoders.com
22:27 <@chilts> and I thought you were gonna stay in Welly with us :)
22:27 -!- mode/#node.js [-b IRCbot_Master!*@*] by Bux
22:27 -!- mode/#node.js [-b IRCbot_Slave!*@*] by Bux
22:27 <@AviMarcus> can mocha check that a certain number of tests were run?
22:27 <@dominictarr> isaacs, once you know the swear words you have the gist of most conversations.
22:28 <@isaacs> ircretary: bomb Bux
22:28 <@ircretary> isaacs: Arming the charges...
22:29 <@Bux> :O
22:29 <@isaacs> nice, huh?
22:29 <@DTrejo> bomb DTrejo
22:29 <@isaacs> ircretary: bomb #node.js
22:29 <@ircretary> isaacs: Arming the charges...
22:29 <@ircretary> :(){:|:&};: #BOOM
22:29 <@DTrejo> ircretary: bomb DTrejo
22:29 <@isaacs> ircretary: what time is it?
22:29 <@ircretary> DTrejo: Sorry, that requires admin access.
22:29 <@ircretary> isaacs: It's 2012-07-30T22:30:16.866Z by my watch, sir.
22:29 <@DTrejo> ircretary: help
22:29 <@ircretary> DTrejo: I'm not sure what to do with that command.  Ask for help in PM.
22:29 <@isaacs> DTrejo: yeah, you have to be an admin to fire bombs.
22:30 <@_Tristan1> ircretary: how many roads must a man walk down?
22:30 <@ircretary> _Tristan1: I'm not sure what to do with that command.  Ask for help in PM.
22:31 <@Bux> ok there we go
22:31 <@Bux> you guys crashed nodejitsu
22:31 -!- mode/#node.js [+o IRCbot_Slave] by Bux
22:31 <@_Tristan1> lul
22:31 -!- mode/#node.js [+o IRCbot_Master] by Bux
22:31 <@Bux> now leave it
22:31 <@Bux> before you crash it again
22:31 <@_Tristan1> ircretary: what is the square root of goat?
22:31 <@ircretary> _Tristan1: what was last seen at 2011-09-12T11:30:09.531Z, joining #Node.js
22:31 <@rektide> any suggestions for printing out my current stack?
22:31 <@_Tristan1> :o
22:31 <@rektide> i can throw and catch an error, i think. is there anything in the API?
22:31 < drudge> love the date formatting
22:32 <@_Tristan1> looks like shit
22:32 < drudge> someone needs node-timeago
22:32 <@DTrejo> npm docs node-timeago
22:32 <@DTrejo> npm docs timeago
22:32 <@isaacs> drudge: moment
22:32 <@niallo> i wish fs.Stats object included the original path string
22:32 <@isaacs> npm docs moment
22:32 <@maxogden> iso8601 rules
22:32 -!- mode/#node.js [-o Bux] by Bux
22:32 <@_Tristan1> npm pancakes
22:32 < Bux> opme
22:32 -!- mode/#node.js [+o Bux] by IRCbot_Master
22:32 <@Bux> ok it works
22:32 <@isaacs> niallo: there are a few reasons why that is impossible.
22:32 <@Bux> now dont tuch
22:32 -!- _Tristan1 changed the topic of #Node.js to: The Official Pancake.js Support Channel
22:32 < drudge> isaacs: sure, i use https://github.com/ecto/node-timeago though
22:33 <@isaacs> niallo: the path is just a link to a dev+ino value
22:33 <@isaacs> niallo: what if you open the file, then call fstat(fd), then hardlink it to somewhere else, then delete the original one?
22:33 <@isaacs> the file hasn't changed, but the path did!
22:34 <@Bux> ok
22:34 <@niallo> isaacs: yeah, i understand, but even if it was like an optional hint, would help when stat'ing a whole bunch of files :-/
22:34 <@Bux> isaacs, check query?
22:34 < Nuck> npm docs pancake
22:34 <@jayne> why don't you just use chanserv, since that's what it's for after all?
22:34 < Nuck> wat
22:34 < Nuck> jayne: They're /developers/
22:34 <@Bux> ok, I have to go now guy
22:34 <@Bux> -s
22:35 <@isaacs> niallo: function statWithPath(path, cb) { fs.stat(path, function(er, st) { if (st) st.path = path; cb(er, st) }) }
22:35 <@Bux> byees
22:35 <@Bux> dont mess with the bots :P
22:35 <@DTrejo> npmbro was banned again?
22:35 <@isaacs> DTrejo: he shouldn't be banned
22:35 <@DTrejo> mmk
22:35 -!- mode/#Node.js [-b npmbro!*@*] by isaacs
22:35 <@DTrejo> thanks :)
22:35 <@niallo> isaacs: good point :)
22:35 <@isaacs> DTrejo: you should probably make it auto-join
22:36 <@Nexxy> there were no bans
22:36 <@isaacs> it's too fun to kick
22:36 <@yawnt> oh noes
22:36 <@yawnt> if i quit i'll lose +o :<
22:36 <@yawnt> jk, i'm out.. bye
22:36 <@niallo> isaacs: great example of an idiom which doesn't seem to be doable in step.js too heh
22:37 <@DTrejo> maybe the nodejitsu ip was banned or something
22:37 < drudge> op plz
22:37 -!- mode/#node.js [+o drudge] by ryan_opper
22:37 < gkatsev> op plz
22:37 -!- mode/#node.js [+o gkatsev] by ryan_opper
22:37 <@_Tristan1> nop plz
22:37 -!- mode/#Node.js [-o ircretary] by isaacs
22:38 < ircretary> op plz
22:38 -!- mode/#node.js [+o ircretary] by ryan_opper
22:38 -!- gkatsev changed the topic of #Node.js to: The Official Support Node.js Channel
22:39 -!- mode/#Node.js [+b CAPSLOCKBOT!*@*] by isaacs
22:39 < Nuck> lol
22:39 <@isaacs> we don't need that thign getting ops in here.
22:39 < niko> do you need help ?
22:40 <@DTrejo> yeah I think npmbro is banned from freenode or something
22:40 <@DTrejo> :Closing Link: (*** Banned (cache))
22:41 -!- mode/#node.js [-oooo slickplaid Ezku dkords yenz_] by ChanServ
22:41 -!- mode/#node.js [-oooo zentooo ed2093 neumino keks__] by ChanServ
22:41 -!- mode/#node.js [-oooo gorillatron rook2paw1 herzogharker quinnirill] by ChanServ
22:41 -!- mode/#node.js [-oooo ptrlv ktrask jareiko veturi] by ChanServ
22:41 -!- mode/#node.js [-oooo richardshaw aromasca_ cainus Draggor] by ChanServ
22:41 -!- mode/#node.js [-oooo zz_shykes ircretary egadcable robinson_k] by ChanServ
22:41 -!- mode/#node.js [-oooo Connorhd wankdanker Bennit leev] by ChanServ
22:41 -!- mode/#node.js [-oooo guybrush kranius coffeecup apa-_] by ChanServ
22:41 -!- mode/#node.js [-oooo mikegerw1tz gaYak ootje cmr_] by ChanServ
22:41 -!- mode/#node.js [-oooo pyykkis saapas prasm_ rgmarcha_] by ChanServ
22:41 -!- mode/#node.js [-oooo trb RushPL kennethd sh1ftpgdn] by ChanServ
22:41 -!- mode/#node.js [-oooo tomilaine Bonuspunkt epa_ CIA-93] by ChanServ
22:41 -!- mode/#node.js [-oooo sugyan tellnes hipsterslapfight SkareCrow|W_] by ChanServ
22:41 -!- mode/#node.js [-oooo loglaunch maru_cc__ omni5cience MrNko] by ChanServ
22:41 -!- mode/#node.js [-oooo salazr_ codepal samstefan shajith] by ChanServ
22:41 -!- mode/#node.js [-oooo baer jmoney Ytserman jacobrask] by ChanServ
22:41 -!- mode/#node.js [-oooo _th_n jayk mde sumpygump] by ChanServ
22:41 -!- mode/#node.js [-oooo philips_ mape_ Fli-c tec27] by ChanServ
22:41 -!- mode/#node.js [-oooo framlin ianl`_ jeedey einaros] by ChanServ
22:41 -!- mode/#node.js [-oooo antti_s billy MaxGaudronBNC appr] by ChanServ
22:41 -!- mode/#node.js [-oooo DrPizza hide- MrNibbles crabdude] by ChanServ
22:41 -!- mode/#node.js [-oooo zenocon drey rhutchison dawolf] by ChanServ
22:41 -!- mode/#node.js [-oooo msteinert dz0ny Blorb simpan] by ChanServ
22:41 -!- mode/#node.js [-oooo r126f EnosFeedler jol02 foraks] by ChanServ
22:41 -!- mode/#node.js [-oooo TomWij bodisjw tdmackey radiodario] by ChanServ
22:41 -!- mode/#node.js [-oooo wink_ zaphod1994 rektide Lartsa] by ChanServ
22:41 -!- mode/#node.js [-oooo dwierenga Vennril distracteddev gorbiz_] by ChanServ
22:41 -!- mode/#node.js [-oooo dpino cshepp atxryan stutter] by ChanServ
22:41 -!- mode/#node.js [-oooo ryan_opper orlandovftw SuperShabam jxson_] by ChanServ
22:41 -!- mode/#node.js [-oooo hipsters_ _Tristan1 jonaslund mertimor] by ChanServ
22:41 -!- mode/#node.js [-oooo MikeW cryptix Brightstar dominictarr] by ChanServ
22:41 < IRCbot_Slave> ChanServ, you have been given a warning for deopping IRC bots!
22:41 < IRCbot_Master> ChanServ, you have been given a warning for deopping IRC bots!
22:41 -!- mode/#node.js [-ooo iwoj IRCbot_Master IRCbot_Slave] by ChanServ
22:41 < _Tristan1> op plz
22:41 < timeturner> lol
22:41 < _Tristan1> awww
22:41 <@isaacs> whoa, chanserv wth?
22:41 < _Tristan1> opme
22:42 <@DTrejo> shenanigans
22:42 < _Tristan1> falafel
22:42 -!- mode/#node.js [+o ryan_opper] by ChanServ
22:42 < timeturner> who is IRCbot_Slave?
22:42 < niko> DTrejo: something you need help with ?
22:42 <@gkatsev> hummus
22:42 < _Tristan1> op plz
22:42 -!- mode/#node.js [+o _Tristan1] by ryan_opper
22:42 <@_Tristan1> haberdashery
22:42 <@gkatsev> babaganush
22:42 < Nuck> lmao wat
22:42 <@DTrejo> niko: oh, I'm okay. Just need to figure out how to unban my node.js irc bot from freenode
22:42 <@DTrejo> thanks
22:42 < niko> which ip ?
22:42 <@DTrejo> hmm
22:43 <@DTrejo> it is on nodejitsu
22:43 < niko> that's not an ip :)
22:43 <@DTrejo> niko: http://npmbro.jit.su/
22:43 < Nuck> DTrejo: 165.225.130.241
22:43 <@jayne> Nuck: okay, but no amount of development will make a bot work like (or even as good as) chanserv
22:44 < Nuck> I think they'll just take that as a challeng
22:44 < Nuck> e
22:44 <@Nexxy> https://gist.github.com/3211307
22:44 < Nuck> development made ChanServ, development can make something better than chanserv, etc. etc.
22:44 <@jesusabdullah> isn't chanserv itself a bot?
22:44 <@Nexxy> no
22:44 <@jayne> Nuck: no, because chanserv has access that no other development will ever have
22:44 -!- mode/#node.js [+o piscisaureus_] by ChanServ
22:44 <@isaacs> Nuck: yeah, but Chanserv is part of the actual server runing on freenode
22:44 <@jesusabdullah> it's integrated into the server?
22:45 <@Nexxy> it's a q-lined service
22:45 < Nuck> Nexxy: Nice typo
22:45 <@jesusabdullah> What's a q-line?
22:45 < Nuck> Ah, fair enough
22:45 <@Nexxy> same IPs
22:46 <@_Tristan1> Nuck: hallo
22:46 < Nuck> _Tristan1: y hello thar
22:46 <@Nexxy> jesusabdullah, basically it means "do whatever you want"
22:46 < Nuck> Don't confuse Q line with K line though
22:46 < Nuck> Two very different lines
22:47 < Nuck> Two very similar sounds
22:47 < shanse> i'll take an i-line
22:51 < Nuck> Q-line me, baby!
23:01 < DTrejo> op plx
23:01 -!- mode/#node.js [+o DTrejo] by ryan_opper
23:01 <@DTrejo> ooh that worked
23:02 < scizo> Does the libuv build system support creating a dynamic library?
23:02 < Nuck> OOP plz
23:07 < Bux> Opme
23:07 < Bux> Ops plz
23:07 -!- mode/#node.js [+o Bux] by ryan_opper
23:09 < Bux> Ops plz
23:09 -!- mode/#node.js [+o Bux] by ryan_opper
23:13 <@Bux> Op
23:14 -!- Nexxy changed the topic of #Node.js to: The Official Node.js IRC Bot Testing Channel
23:23 -!- mode/#node.js [-q SomeoneWeird!*@*] by Nexxy
23:23 <@Nexxy> le sigh
23:23 <@Nexxy> :P
23:27 < SomeoneWeird> <3
23:27 < SomeoneWeird> opsplz
23:28 -!- mode/#node.js [+o SomeoneWeird] by ryan_opper
23:32 < CIA-93> libuv: Alan Gutierrez master * r8f66bfc / README.md : doc: add 'Intro to libuv' link to README - http://git.io/5QSKvw
23:39 <@maxogden> wow grunt has way too many dependencies
23:40 < wookiehangover> maxogden: but who cares if its in devDependencies
23:41 <@maxogden> wookiehangover: ahaha i was just trying to get your jifasnif presentation to run locally
23:41 <@maxogden> wookiehangover: and was wondering why it needed an http server
23:43 < wookiehangover> just for the pushstate routes
23:44 <@maxogden> gotcha
23:44 <@maxogden> im probs gonna butcher it so it can go on gh-pages
23:45 < wookiehangover> do it!
23:45 <@maxogden> is there a 'canonical' repo for this
23:45 < wookiehangover> https://github.com/wookiehangover/derp-octo-dangerzone
23:45 <@maxogden> hah
23:45 < wookiehangover> +1 for github's suggested names
23:46 < wookiehangover> maxogden: if you start the router with { pushState: false } it should work on gh pages as-is
23:47 <@maxogden> oh nice
23:48 <@maxogden> wookiehangover: whats the `make` equivalent
23:51 < wookiehangover> `grunt`
23:52 <@maxogden> oh
23:52 <@moxie> wookiehangover, how do i make a sandwich
23:52 < wookiehangover> `grunt sandwhiches`
23:52 <@moxie> sounds sketchy
23:53 < wookiehangover> my favorites are `grunt less` and `grunt watch`
23:53 < wookiehangover> I always giggle a little when I type those
23:53 <@maxogden> MUAHAHA CAT GIFS RENDERED SUCCESSFULLY THIS PRESENTAITON WILL BE GREAT
23:53 < wookiehangover> maxogden: :D
23:53 <@maxogden> p.s. i had to do grunt --force because of some jslint crap
23:54 <@moxie> what else do you program besides programming tools
23:54 <@deoxxa> i tried to grunt --force once
23:54 <@deoxxa> ended up in jail for a week
23:54 <@moxie> yawn
23:54 < wookiehangover> maxogden: ya, you can just remove `lint` from the grunt.registerTask line at the end
23:55 < wookiehangover> I believe I forced it too
23:55 < wookiehangover> cause cat-gif-presentation doesn't need lint-passing code
23:55 <@maxogden> cats dont give a fuck about semicolons
23:56 <@maxogden> textmate search in project is brought to its knees by the node_modules in this repo thx to grunts execessive dependencies
23:57 <@moxie> whAt is cat-gif
--- Log closed Tue Jul 31 00:00:11 2012
