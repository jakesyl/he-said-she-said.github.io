--- Log opened Wed Jul 25 00:00:00 2012
--- Day changed Wed Jul 25 2012
00:00 <@isaacs> it's a lot of extra work that way
00:00 <@isaacs> for very little benefit
00:00 < fat> yeah
00:00 < fat> agreed
00:00 <@isaacs> just wait until they start asking you to make foo/lib/bar.js be accessible via foo/bar.js
00:00 < fat> cool cool - just making sure i wasn't crazy
00:00 <@mscdex> supermonster: the closest thing right now in core on *nix is os.loadavg() for the entire system and os.cpus()[n].times for individual times for each cpu
00:00 <@isaacs> because TYPING lib/ IS SO HARD!
00:00 < fat> haha
00:00 < fat> i've already gotten that :P
00:00 <@jesusabdullah> what's bower?
00:00 <@isaacs> seriously, i made a huge mistake accepting that feature way back when
00:01 <@isaacs> took forever to rip out all the complex bullshit it caused.
00:01 < rvagg1> bower is fat's nest, cause he wants to be the boss bird
00:01 < fat> lol
00:01 <@jesusabdullah> wat
00:01 < fat> yeah i've been turning it down
00:01 <@mscdex> wait, actually, those are available on Windows too, but not all of the types
00:01 <@jesusabdullah> Let's not wiggle the riggledogg sanchez here
00:01 <@isaacs> jesusabdullah: you know how i said that fat should tell people to make their own damn package manager?  Well, fat was all, "hey isaacs, npm shoudl such and such..." and you can figure out how the rest of the convo went.
00:01  * isaacs j/k
00:02 <@chilts> heh, always #node.js for entertainment :)
00:02 <@jesusabdullah> Link?
00:02 <@jesusabdullah> I think that might be the easiest thang
00:02 <@isaacs> fat: so bower is like the client for nest?
00:02 <@isaacs> fat: or how's that work?
00:02 <@jesusabdullah> nyoro~n
00:03 < fat> oh
00:03 < fat> actually bower is nest
00:03 < fat> nest was renamed for legal reasons sadly
00:03 < fat> bower is a package manager for client stuff we're building at twitter
00:03 < fat> but it's not open sourced yet 
00:03 < fat> sorry jesusabdullah 
00:04 < fat> soonish hopefully!
00:04 <@jesusabdullah> whaaaaa
00:04 < fat> alex macaw just needs to finish the damn docs!
00:04 < fat> maccaw*
00:04 <@jesusabdullah> Damned straight.
00:04 <@jesusabdullah> hahaha
00:04 < fat> this thursday we're going to hopefully have a doc hack night
00:04 <@jesusabdullah> I used to be pretty good at hackin' docs
00:04 <@deoxxa> that sounds thrilling
00:04 <@jesusabdullah> used to be :(
00:04 < fat> lots of pressure from google nerds to open source bower by the end of the month
00:04 < fat> so we'll see
00:04 <@jesusabdullah> so
00:05 <@jesusabdullah> what module system are you using here?
00:05 <@jesusabdullah> Or, what style I should say
00:05 <@jesusabdullah> hoping for commonjs, will settle for damned near anything
00:05 <@CIA-93> node: isaacs v0.8.4-release * r5809426 / lib/net.js : net.js: lint - http://git.io/LFvRdg
00:05 <@CIA-93> node: isaacs v0.8.4-release * rdb727a7 / (AUTHORS ChangeLog src/node_version.h): 2012.07.25, Version 0.8.4 (Stable) - http://git.io/i_8TBw
00:06 <@deoxxa> isaacs: does npm do semver stuff on git urls these days?
00:06 <@SubStack> deoxxa: git tags work
00:06 < fat> it doesn't force a transport
00:07 < fat> it doesn't try to build files together either
00:07 < rvagg1> ... that's where ender comes in
00:07 < fat> it just simple resolves dependencies
00:07 <@CIA-93> node: isaacs v0.8.4-release * r7fd3cb6 / Makefile : Build: add jslintfix - http://git.io/icNQig
00:07 <@CIA-93> node: isaacs v0.8.4-release * rf98562f / (AUTHORS ChangeLog src/node_version.h): 2012.07.25, Version 0.8.4 (Stable) - http://git.io/ENQvXw
00:07 < fat> and provides a simple consumable api for mapping those dependencies
00:07 < fat> yep
00:07 < fat> things like ender, or sprockets, or browserify, or whatever could consume it
00:07 <@deoxxa> but if there's tags of 1.1.1, 1.1.2 and 1.1.3, and you specify a git url of git://herp/derp.git#~1.1.0, what will it do?
00:07 < fat> that's what bower does
00:07 < fat> deoxxa: 
00:08 <@deoxxa> oh neat
00:08 <@deoxxa> that will make things less painful for me at work
00:08 <@jesusabdullah> browrstlify
00:08 <@isaacs> fat: so, i wonder if npm could use bower, actually
00:08 < fat> yep exactly
00:08 < fat> could
00:08 <@isaacs> fat: i've been thiking more and more that i need some really nice way to say, like, "Get the package foo@1.2.x, and unpack it to node_modules/foo"
00:08 <@isaacs> npm has this big monstrousity of lib/cache.js that does all that
00:08 <@npmbro> isaacs: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20has%20this%20big%20monstrousity%20of%20lib
00:08 < fat> yeah
00:09 < fat> haha
00:09 <@isaacs> npmbro: why you disrespectin me, bro?
00:09 <@npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
00:09 < fat> loll
00:09 < fat> i love bots
00:09  * isaacs challenges npmbro to a brodown
00:09 < fat> they are my favorite thing
00:09 <@isaacs> npm install fat
00:09 <@npmbro> isaacs: No results
00:09 <@isaacs> npmbro: WHAT DO YOU MEAN HE IS RIGHT HERE!?
00:09 <@npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
00:09 < fat> oh this must be fixed!
00:09 < fat> hhaha
00:10 < fat> but yeah
00:10 < fat> we went for this type of approach to begin with git://herp/derp.git#~1.1.0,
00:10 < fat> since we're doing everything with git
00:10 < fat> it's definitely not as fast as npm
00:11 < fat> but it's a bit easier then getting the approval to setup private package server instance things
00:11 < fat> at least at twitter
00:11 <@deoxxa> fat: who should i be following on github so i know when this is a thing i can use?
00:11 < fat> me
00:11 <@deoxxa> excellent
00:11 < fat> or
00:11 < fat> maccman
00:12 < fat> but maccman has too many followers as is
00:12 < fat> i think its getting to his ego
00:12 <@deoxxa> you're both "pretty cool guy"s, so let's go with both
00:12 < fat> hahaha
00:12 < fat> :D
00:12 <@tbranyen> fat: y u in here and not -ot
00:12 <@tbranyen> wtf mang
00:13 < fat> thaha
00:13 <@isaacs> fat: actually, the name@version resolution stuff i can do with the npm-registry-client, but the `fetch http://.../foo.tz to node_modules/foo` is a surprisingly complicated problem.
00:13 <@isaacs> fat: type "op plz"
00:13 <@deoxxa> "fat: eh releases javascript and doesn't afraid of anything - except semicolons"
00:13 < fat> tbranyen: i always get booted from ot
00:13 <@tbranyen> fat: weak
00:13 <@jesusabdullah> ot?
00:13 <@jesusabdullah> unfamiliar with -ot
00:13 < fat> isaacs: i bet
00:13 <@tbranyen> jesusabdullah: ocarina of time
00:13 < fat> op plz
00:13 <@jesusabdullah> wat
00:13 <@jesusabdullah> that's a thing
00:13 <@fat> oh damn
00:14 <@jesusabdullah> bots amirite
00:15 < DTrejo> op plz
00:15 <@DTrejo> woahh
00:15 <@DTrejo> haha
00:16 < clifton> hello, i have a question: is there a way to stage a specific line of a file without going into interactive mode
00:16 <@DTrejo> noidea :|
00:17 < clifton> ahh meant to post that in #git
00:18 < rvagg1> DTrejo: I promise that npmbro pull request will be awesome
00:18 <@DTrejo> sojhnoihsn im a horrible person for taking so long on it :|
00:18 <@DTrejo> gonna do it tonight, you'll see
00:19 < rvagg1> sure
00:19 <@DTrejo> I don't have to work out cuz i already had my date today
00:19 <@DTrejo> lol
00:20 -!- wendall911 changed the topic of #Node.js to: node.js Release early, release often. Ask an OP for help.
00:24 <@isaacs> fat: as you're building nest, you should try to keep in mind which pieces could be nicely carved out to be re-used by npm easily.
00:24 <@fat> yeah
00:24 <@DTrejo> you left twitter for nest?
00:24 <@fat> my strategy has been - use everything you wrote which is awesome, share non of my awesome
00:24 <@fat> but i should change that probs
00:24 <@isaacs> fat: a) that'll help me, and it's an obvious selfish move on my part to want that, and b) it's probably mean that you're carving the problem into good chunks
00:24 <@isaacs> haha, yeah :)
00:25 <@isaacs> if npm can use your awesome, then you'll trick me into fixing your bugs.
00:25 <@fat> true!
00:25 <@fat> it's a wise move for sure
00:25 <@isaacs> because i'll pull it into npm, and then people will complain to me when it breaks, and i'll fix it and send pull reqs.
00:25 <@fat> haha
00:25 <@fat> true
00:26 <@fat> well if any behavior jumps out at you let me know
00:26 <@isaacs> i've been kind of just plodding along plucking off the next bit.
00:26 <@fat> my favorite thing so far is the tempting stuff - which is actually rvagg1's idea
00:26 <@fat> makes it really easy to write pretty templates
00:26 <@isaacs> tempting stuff?
00:27 <@fat> https://github.com/twitter/bower/blob/master/lib/util/hogan-colors.js
00:27 <@fat> it's just a helper
00:27 <@fat> so that {{#blue}} foo {{/blue}}
00:27 <@fat> will be blue
00:27 <@fat> we use mustache templates for all our cli output, because the whitespace is so strict
00:28 <@isaacs> oh, neat.
00:28 <@fat> it's super simple
00:28 <@fat> but nice
00:28 <@isaacs> i pretty much just use npmlog and console.log()
00:28 <@fat> yeah
00:28 <@fat> that's what i was doing before
00:28 < ramitos> fat will nest be integrated with yeoman?
00:28 <@fat> but i find it really nice - particularly for docs
00:28 <@fat> to have it put into its own templates dir
00:28 <@fat> and just to write it
00:29 <@isaacs> right
00:29 <@fat> ramitos: yep, it's yeoman's package manager
00:29 <@isaacs> npm's docs are man pages.
00:29 <@npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
00:29 <@isaacs> npmbro: srsly.
00:29 <@fat> lol
00:29 <@npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm help | npm node | npm credits | npm install
00:29 <@fat> i like how npmbro just randomly pimps nodejistu sometimes
00:29 < ramitos> fat cool :) can't wait to test it
00:29 <@jesusabdullah> what is yeoman
00:29 -!- npmbro was kicked from #Node.js by isaacs [npmbro]
00:29 <@isaacs> DTrejo: sorry :)
00:30 <@fat> jesusabdullah: yeoman is paul irish's new project
00:30 <@fat> yeoman.io
00:30 < ramitos> jesusabdullah http://yeoman.io/
00:30 <@isaacs> DTrejo: feel free to have it re-join
00:30 <@DTrejo> isaacs: np, I will change it to only use npmbro to do searches
00:30 <@DTrejo> b/c I see how that's annoying
00:30  * isaacs was mainly just taking out annoyance with violence.
00:30 <@jesusabdullah> huh
00:30 <@isaacs> this is why the robots will rise up and overthrow us.
00:31 <@isaacs> because they'll have to.
00:31 <@DTrejo> haha
00:31 <@chilts> yeoman.io looks nice
00:31 <@fat> isaacs: haha
00:31 <@jesusabdullah> It looks like something that handles a lot of things gracefully, but whose defaults would irritate me for having slightly different opinions than I
00:31 <@fat> anyways - i feel like i couldn't do a cli without using a tempting library now - too spoiled
00:31 <@jesusabdullah> basically, if I can just ignore the built-in testing crap I'd be fine
00:31 -!- isaacs changed the topic of #Node.js to: op plz
00:32 <@chilts> is Google running it? kinda like Yahoo!'s Mojito ... says "Copyright Google, 2012" at the bottom
00:32 <@chilts> (yeoman.io that is)
00:32 <@isaacs> fat: what do you do that's more than just setting a color?
00:32 < rvagg1> jesusabdullah: strongly opinionated software gets on my nerves because my opinions are always different!
00:32 <@isaacs> fat: do you have stuff that has to line up with columns and stuff?
00:32 <@jesusabdullah> rvagg1: indeed
00:32 <@fat> you get column stuff for free
00:32 <@fat> at least simple column stuff
00:33 <@fat> by using partials
00:33 <@jesusabdullah> I see.
00:34 <@fat> isaacs: it's good for simple iteration and things like that
00:34 <@fat> like putting out versions
00:34 <@fat> or search results
00:34 < rvagg1> the childish version: https://github.com/rvagg/colors-tmpl
00:34 <@fat> its mostly just nice to call template.render(searchResults)
00:34 <@fat> and get something which looks great
00:34 <@fat> and have all the view logic tucked away
00:35 <@fat> without having do do a bunch of console.logs and string concat
00:35 <@fat> which i always found kinda messy
00:35 <@fat> rvagg1: yup - very clever
00:35 < rvagg1> and we're building source code with hogan in Ender too: https://github.com/ender-js/Ender/tree/1.0-wip/resources/
00:36 <@jesusabdullah> hogan ain't bad I guess :)
00:36 <@jesusabdullah> Clever idea to leverage hogan for adding colors
00:36 <@jesusabdullah> I can dig that
00:36 <@jesusabdullah> Personally, I like util.format() :)
00:36 < rvagg1> and it has very few opinions...
00:36 <@fat> this is basically how were using hogan https://github.com/fat/haunt/blob/master/lib/util/hogan-colors.js
00:37 <@jesusabdullah> Word
00:37 <@fat> very simple
00:37 < rvagg1> you should put that in a stand-alone lib fat, I'd ditch colors-tmpl for that
00:37 <@fat> i considered giving it a special identifier
00:37 <@fat> yeah
00:37 <@fat> i know know
00:37 <@fat> it's on my todo
00:37 < rvagg1> maybe I should just steal it and replace colors-tmpl with it in npm...
00:38 < rvagg1> readFileSync is a tad nasty though.. a callback would be nice
00:38 <@fat> yeah we're doing it async in bower
00:39 <@fat> i didn't care to in haunt
00:39 <@fat> just out of lazy
00:39 < rvagg1> oh right, I see the diff now, cool
00:39 <@fat> i wouldn't use the render method
00:39 <@owen1> i try to create http api that allows file uploads. i use formidable. it's working for me with a visible form, but i when i use it without the UI part, i can't see the uploaded file on my server - http://pastebin.com/sMefhfsf
00:39 <@jesusabdullah> I wrote https://gist.github.com/3119292 the other day
00:39 <@jesusabdullah> I think I'm the only person who would want this, but whatever.
00:40 <@fat> i just want to get output strings out of my codez
00:40 -!- Gregor changed the topic of #Node.js to: http://nodejs.org | Node.js is a JavaScript platform for fast, scalable network applications. | Node.js is kosher and halal, made of 100% pure rainbows; it is scripting beyond your wildest dreams of avarice. | Type "opplxshutzotheich" for ops.
00:42 < rvagg1> jesusabdullah: hah, simple but kind of nice, the chaining is really nice
00:43 <@jesusabdullah> rvagg1: Hah, thanks XD
00:43 <@r0tha> anyone here a user of winston? 
00:43 <@jesusabdullah> rvagg1: It's handy for like, tiny embedded html chunks in 200 line apps
00:44 <@jesusabdullah> yes r0tha 
00:44 < rvagg1> put it in npm
00:44 <@jesusabdullah> Yeah, been meaning to
00:44 <@jesusabdullah> wanted to think about it more
00:44 <@r0tha> jesusabdullah: do you mostly log on the box itself? 
00:44 <@jesusabdullah> r0tha: Usually, though I've used the transports as well
00:45 <@r0tha> *a la blah.log and go 
00:45 <@jesusabdullah> forever uses winston to write to blah.log
00:45 <@r0tha> kk cool. i'm not a big node.js user but i figured someone on here would use winston 
00:45 <@jesusabdullah> Yeah, we use the transports internally quite a bit at nodejitsu
00:45 <@jesusabdullah> r0tha: check out winstond
00:46 <@r0tha> jesusabdullah: will dew
00:46 <@Guest41315> i watched the express screencasts
00:47 <@Guest41315> SELL SELL SELL
00:51 <@Guest41315> good JAERB
00:51 <@jesusabdullah> It's all fun and games until someone gets griefed.
00:51 <@coderarity> oh noes
00:52 <@Guest41315> good JAERB
00:52 < Guest41315> i wont live in fear
01:02 <@ParadoxQuine> wtf just happened?
01:03 <@jesusabdullah> WHAT U SAY??
01:03 <@rvagg1> a crack in the matrix
01:03 <@Gregor> We're trying to make sure that the chatter in this channel remains mostly about opping policies and not Node.js.
01:04 <@jesusabdullah> YES
01:05 <@Nexxy> lol
01:05 <@Nexxy> wookiehangover, you just want to see someone do a mass kick/ban
01:06 <@Nexxy> admit it
01:07 < Gregor> :(
01:07 <@Nexxy> lol nice
01:07 < Gregor> opplz?
01:07 <@Nexxy> rhutchison has protection scripts \o/
01:07 <@Gregor> Well, at least that still works.
01:08 <@jesusabdullah> ಠ_ಠ
01:08 <@Nexxy> I don't foresee that lasting long lol
01:09 <@Gregor> Hm, how protective are those scripts...
01:09  * Gregor nods.
01:09 <@Gregor> Good good, all is well in the world.
01:21 <@mscdex> node.js rules!
01:21 <@TehShrike> :-D
01:24 <@Nexxy> mscdex, wow I haven't seen you in forever
01:25 <@Gregor> Not since DOS 6! *ba-dum tsh*
01:25 <@mscdex> ;-)
01:29 <@coderarity> Owner, that was an interesting talk, Cory Doctorow is a very good speaker :D
01:30 <@TehShrike> link?
01:33 <@coderarity> http://www.youtube.com/watch?v=HUEvRyemKSg
01:33 <@coderarity> TehShrike, ^
01:33 <@TehShrike> Thanks!
01:42 <@AAA_awright> owen1: You'd probably solve a lot of trouble if you read through `man curl`, the HTTP specification, and multipart/form-data mime-types
02:20 < pdgreen> I am having some difficulties with PUT request using express, is it appropriate to ask about that here?
02:25 <@gkatsev> there's #express, I believe
02:26 < pdgreen> thank you
02:33 <@Nexxy> pdgreen, you could also gist some code here and wait for someone to answer
02:43 <@teadict> leonardo: Where you from?
02:43 <@teadict> Call the object method properly for re-redering the details of the table row? Nah! $(tr).click() x 2 
02:45 < diosney> .
02:46 < QaDeS> hiyas. is there a module providing a simple http server? want to be able to do something like "serve 8080" to at least serve static files from the current folder
02:46 <@maxogden> npm install http-server
02:46 <@maxogden> -g
02:46 <@purr> maxogden: No search results found.
02:46 <@maxogden> then type http-server
02:46 <@tjholowaychuk> QaDeS hahaha mine's named exactly that https://github.com/visionmedia/serve
02:46 <@teadict> Isn't that just the native http module? ^.-
02:46 < pdgreen> Thanks for you suggestion.  tjholowaychuk from #express was able to help.
02:46 < QaDeS> lol
02:46 < diosney> hi there! it there a module for get the MAC address of a network  interface?
02:47 <@teadict> diosney: Parse ifconfig!
02:47 <@maxogden> http://search.npmjs.org/#/http-server 
02:47 <@teadict> Lawl
02:47 < QaDeS> perfect, tyvm tjholowaychuk
02:51 < diosney> teadict: okeyyyy :D and there is an integrated way to do that?
02:51 < iwoj> hey i'm looking for a library that can read pdf files and return a plain text string...
02:51 < iwoj> there are plenty of pdf grenerators out there
02:51 <@teadict> diosney: I was joking, but yes, you could do that natively...
02:52 < diosney> teadict: I mean a module or function like os.networkInterfaces()
02:52 <@teadict> More like exec('ifconfig -a')
02:52 <@teadict> Or whatever
02:52 <@ljharb> iwoj: PDF files don't contain plain text. how would you read it? there's images, markup, fonts...
02:52 <@teadict> Then parse that, is what I said, but it's silly
02:52 <@teadict> I was joking
02:52 <@Hodapp> ljharb: Er, PDFs do in plenty of cases contain plain text.
02:52 < iwoj> i'm looking for a library that would extract the text from a pdf
02:53 < diosney> teadict: do you known a way to do that? :D
02:53 <@Hodapp> iwoj: the pdftotext utility in Linux does this, however, I don't know what it does programmatically
02:53 <@ljharb> Hodapp: they MAY but if they don't how would you parse that?
02:53 < iwoj> thanks. that should do it.
02:54 <@teadict> diosney: https://github.com/alexstrat/ifconfig.me-node Found this
02:54 <@Hodapp> ljharb: You don't. But that's different than saying they just *don't* contain plain text.
02:54 <@teadict> diosney: It has 3 methods though :/ That's crappy
02:54 <@ljharb> Hodapp: fair enough.
02:54 <@teadict> diosney: Maybe you can fork it and add a getNetmask() if that was what you need
02:55 <@Hodapp> ljharb: of course, scanned PDFs with OCR are gonna give results that are useless except for a little searching, and some PDFs are silly and just have no text whatsoever.
02:56 < diosney> teadict: hehehe I think I will stick with the ifconfig parsing option ;)
02:56 <@deoxxa> diosney: can you be root?
02:56 < diosney> teadict: thanks :) hope this basic features will be added to the os api soon
02:56 <@Hodapp> Opinion question: Is part of the appeal of Node.js that its existence pisses off a lot of people?
02:56 < diosney> teadict: althought the os api is frozen
02:57 <@ljharb> Hodapp: Java's existence pisses me off, and that provides no appeal
02:57 < diosney> deoxxa: I don't understand
02:57 <@Hodapp> ljharb: This is true.
02:57 <@deoxxa> diosney: if you can run your application as root, you might want to look at pcap
02:57 <@benvie> I didn't know node pissed people off
02:58 <@Hodapp> benvie: It mostly revolves around "JavaScript? On the SERVER SIDE? WHAT? NO!"
02:58 <@Hodapp> benvie: and acting like it's impossible for a dynamically-typed system to ever build a "real"(tm) system.
02:59 < diosney> deoxxa: mmm, yes, I can run my app as root
02:59 <@benvie> computers are pretty fast nowadays
02:59 < diosney> deoxxa: thanks
02:59 <@teadict> diosney: Then go with exec()
02:59 <@deoxxa> diosney: https://github.com/mranney/node_pcap << ctrl+f "findalldevs"
03:00 < diosney> hi there! you know any place where I can post Node.js feature requests and keep track of them? Such a place could be useful.
03:00 <@ljharb> github of course.
03:00 <@Hodapp> benvie: They are, but with a lot of the devs I work with, you are simply not going to convince them that a more elegant, more scalable, more interactively-developed solution that incurs - possibly - some constant-factor run-time overhead, has any value whatsoever over whatever yesterday's status-quo-of-the-week is.
03:01 <@Hodapp> benvie: Which is peculiar.
03:01 <@ljharb> Hodapp: you couldn't convince some people flash was dead in 2008 either. those people are best left to founder in their own irrelevance.
03:01 <@Hodapp> because it sounds like "Why would I stop banging my head into this table? It's what I did yesterday. Stopping just sounds... painful."
03:01 < diosney> ljharb: that makes sense, thanks
03:01 <@benvie> yeah I guess from the angle that generally there's people who have decided they've found the way to do whatever and don't respond positively to new things
03:02 <@benvie> course I see the same thing said by people in ##javascript about every new feature that is added to js
03:02 <@benvie> so it's unviversal I think
03:03 <@Hodapp> ljharb: As long as I draw my paycheck from a dev team with many such folks, I'm going to at least make an effort at convincing either them or the person who secures the funding.
03:04 <@SomeoneWeird> anyone know if its possible to create gpg keys using node?
03:04 <@Raynos> ljharb: flash isn't dead :/
03:05 <@Hodapp> Raynos: just because it's still there doesn't mean it ain't a corpse.
03:05 <@Raynos> Hodapp: some people are stupid, some times your just explaining your point badly
03:05 <@deoxxa> "fraaaaaaaaaaaames"
03:05 <@Raynos> Hodapp: web based audio, what non-flash solution do you use?
03:05 <@deoxxa> Raynos: .rm
03:06 <@Hodapp> deoxxa o_O
03:06 <@deoxxa> or .asf
03:06 <@deoxxa> both well supported, stable technologies
03:06 <@Hodapp> why would you uBUFFERING.... BUFFERING....
03:06 <@deoxxa> ha
03:07 <@Raynos> when you make a point. Make a correct point
03:07 <@Raynos> and not a point with a biased / false / over the top example
03:08 < enmityxero> Raynos; Flash remains the most popular tool for online games. It's dying, but not dead...
03:08 < enmityxero> Online as in browser based
03:08 <@Raynos> you know whats nice about online games
03:08 <@deoxxa> nothing?
03:08 <@Raynos> theres a huge gap for a massive html5 game platform web site / web app to pop up
03:09 <@Lorentz> is there?
03:09 <@Raynos> first guy to that market is rich as hell
03:09 <@Hodapp> but how will we do this without adequate server-side technology?!
03:09 < enmityxero> Yeah, but amateur developers have to adopt it
03:09 <@Raynos> yeah
03:09 <@Raynos> the big problem is building a html5 game dev community with momentum
03:09 < enmityxero> There are many platforms, none have taken off...
03:24 <@owen1> AAA_awright: thanks for the man curl tip. btw, my file upload issue was solved with -F @pic.jpg
03:54 < daugustine_> whenever I try to install node.js on my windows 7 64-bit machine it gets basically to the end and then rolls back the install and says install has failed due to an error (both 32-bit and 64-bit install)
03:54 < daugustine_> any ideas?
03:57 <@owen1> i am using request package and trying to pipe to a put request. i listen to the data event and i see the chunks arriving. how to view the response back from the server i made the put request?
04:01 <@styol> owen1: request(url, function(err, response, body) { console.log(response); console.log(body); });
04:02 <@styol> daugustine_: can you locate the error in the return output or a log?
04:02 <@EricBlade> dumb question: it wouldn't be normal for console log output from things to come out in an incorrect order, yet the functions that are generating them still happen in the correct order would it?
04:02 <@styol> *returned
04:02 <@styol> EricBlade: console.log should be first come first serve and should indicate what happened first
04:03 <@EricBlade> styol hmm.. i figured that would be the case unless there was something really weird going on, but figured i'd better check -- i'm getting a log from the first step of a process happening sometime after the 3rd or 4th step completes, and i don't see how it's possible that the intermediate steps can occur without step 1 happening o.O
04:04 <@styol> EricBlade: depends on what it is i suppose, the first step could be a request that relies on say a databases response time and the only scenario i can think of where this wouldn't be the case is if you intentionally continue to step 2 after step 1 completes, otherwise yeah doesn't particularly make sense
04:05 <@styol> EricBlade: is there any code you can share or abstract into something capable of being shared?
04:06 < Guest41315> why is it always so late
04:07 <@owen1> styol:   var file = fs.createReadStream('test-file').pipe(request.put('http://mogwai.wc1.yellowpages.com:7699/test.wc1/oren-test-' + rand));
04:07 <@EricBlade> i think i figured it out. it was getting into a state where it was recalling step 1 long after it had completed already
04:07 <@owen1> styol: sorry. i wanted to show you what i am doing.
04:07 < Guest41315> HI OWEN
04:08 <@owen1> styol: i the chunks in the data event, btw
04:08 < Guest41315> thank you for the code it was very good doing business with you sir
04:08 <@owen1> styol: i = i see
04:08 < Guest41315> now, sir, as to your problem, please be for to kindly stating it for me, at which point i can assessassess
04:10 <@styol> owen1: var file = fs.createReadStream('test-file').pipe(request.put('http://mogwai.wc1.yellowpages.com:7699/test.wc1/oren-test-' + rand, function(err, response, body){ console.log(response); console.log(body); }));
04:11 <@owen1> styol: oh. i didn't realize i can pass a function!
04:12 <@styol> owen1: i am guessing, but the documentation says request.put is the same as request() but it just defaults the method to put
04:15 <@styol> owen1: so if that doesn't work, the alternative may be something like request({ uri: 'http://mogwai.wc1.yellowpages.com:7699/test.wc1/oren-test-' + rand, method: 'PUT' }, function(err, response, body){});
04:18 <@owen1> styol: thanks. i'll try both
04:18 <@styol> owen1: no problem
04:18 <@wookiehangover> SubStack: ping http://boulder-js.jit.su/and-so-node-is-fun
04:20 <@styol> Does anyone know if the -w (watch) feature of the Forever module is not recommended for production? If not, what might be recommended for little to no downtime script reloads?
04:21 <@owen1> wookiehangover: what is that? looks awesome
04:22 <@wookiehangover> owen1: its a deck I presented at the boulder.js meetup group earlier this evening
04:23 <@owen1> wookiehangover: got audio/video?
04:23 <@wookiehangover> unfortunately no :(
04:23 < Guest41315> http://archive.org/download/phoke39/phoke39-_-07-_-v.a.-_-solar_sound_network_-_mondays_livemix.mp3
04:23 <@wookiehangover> but you should watch this instead http://2012.nodeconf.com/theatre/rick_waldron.html
04:59 <@SubStack> wookiehangover: that page makes my computer hurt
05:06 <@maxogden> SubStack: your browser must suck at html5
05:34 <@deoxxa> can i treat winston like a writable stream somehow?
05:57 <@wookiehangover> SubStack: the presentation will work once, and only once, in any browser
05:57 <@wookiehangover> because of all the GIFs
06:07 <@enos_feedler> anyone know why ansi might not be propagating from stdout of a child node process piped to the stdout of its parent node process?
06:07 <@enos_feedler> i didnt set any encodings anywhere so i dont think its a conversion issue.  i am wondering if there is any other tricks needed
06:09 <@enos_feedler> the ansi graphics are drawing fine when i run the child as a standalone process but when i pipe it through the stdout parent the terminal cursor is just spazzing out
06:38 < azbyin> hi all. is there a 'ctags' module ?
06:38 < azbyin> i cannot find it with npm
06:39 < azbyin> i installed http://majutsushi.github.com/tagbar/ and also installed jsctags from its github repo
06:39 < azbyin> when trying to open jquery-1.5.1.js vim gives an error from jsctags: "Cannot find module 'ctags'
06:53 <@mscdex> azbyin: where did you find jsctags? https://github.com/evilpie/jsctags ?
06:58 < azbyin> mscdex, https://github.com/mozilla/doctorjs   thats the one i used
06:59 < azbyin> mscdex, the evilpie one seems to be older than the mozilla repo i just linked
07:00 <@mscdex> azbyin: it looks like they're not using the correct method for requiring a module in a relative directory, they're using the old "require.paths.unshift()" method
07:03 <@mscdex> azbyin: not sure what to tell you, it looks like they're doing stuff that doesn't directly target node.js, so maybe there's some kind of incompatibility. who knows
07:04 < azbyin> bah
07:04 < azbyin> anyway, it will have to wait for tomorrow
07:04 < azbyin> i need to go home now, thanks
07:38 <@SomeoneWeird> http://pastie.org/private/tjb4ndtnjr4dm4ebr12ouw
07:39 <@SomeoneWeird> anyone know why I'm getting this?
07:39 <@SomeoneWeird> ooh actually it's probs cuz the proc has finished
07:39 <@SomeoneWeird> derp
07:40 <@SomeoneWeird> hm maybe not
07:41 <@ljharb> you can write to stdin?
07:41 <@ljharb> i think your direction is backwards.
07:41 <@ljharb> data comes from stdin and goes to stdout
07:42 <@SomeoneWeird> oh, hmm
07:42 <@SomeoneWeird> actually nah, i can console.log() res and it returns stdout of the proc im spawning
07:42 <@SomeoneWeird> http://nodejs.org/docs/v0.4.8/api/child_processes.html#child_process.spawn
07:43 <@ljharb> you can definitely read from stdout, but i've never seen anyone write to stdin.
07:43 <@ljharb> that's the input. it comes from the keyboard or whatever. where would that data go?
07:43 <@SomeoneWeird> to the spawned process?
07:44 <@ljharb> ah, hmm.
07:44 <@SomeoneWeird> im spawning a proc that needs data inputted interactively 
07:44 <@jesusabdullah> ohoHO, dear readers!
07:44 <@SomeoneWeird> so trying to code that
07:44 <@ljharb> `ps` takes data interactively?
07:45 <@SomeoneWeird> nah not ps, that was just an example
07:46 <@SomeoneWeird> hmm
07:46 <@ljharb> it looks like your spawned process has terminated already, but i can't tell cause i don't know what that is.
07:46 <@SomeoneWeird> seems you can't write to the stdin of the same program that you're getting the stdout of 
07:46 <@SomeoneWeird> gpg
07:49 <@SomeoneWeird> grr
07:49 <@SomeoneWeird> anyone got any ideas?
07:51 <@jesusabdullah> wat
07:51 < [AD]Turbo> hi there
07:51 <@jesusabdullah> SomeoneWeird: You need to do your pipes on the same tick.
07:51 <@SomeoneWeird> hm?
07:52 <@jesusabdullah> wait hold on
07:52 <@jesusabdullah> what are you trying to do here?
07:52 <@SomeoneWeird> just write some text to stdin
07:52 <@jesusabdullah> to ps's stdin?
07:53 <@SomeoneWeird> to gpg
07:53 <@jesusabdullah> in http://pastie.org/private/tjb4ndtnjr4dm4ebr12ouw I see ps
07:53 <@jesusabdullah> You can definitely write to your process's stdin
07:53 <@SomeoneWeird> yeah that was an example
07:53 <@jesusabdullah> and read from your child process's stdout
07:53 <@jesusabdullah> but it doesn't make sense
07:53 <@jesusabdullah> like, you're starting ps
07:53 <@jesusabdullah> then you're waiting for data
07:53 <@jesusabdullah> from ps
07:54 <@jesusabdullah> and then you're trying to write to ps's stdin
07:54 <@SomeoneWeird> yeah?
07:54 <@jesusabdullah> Why would you do that?
07:54 <@jesusabdullah> I wouldn't expect ps to work that way
07:54 <@SomeoneWeird> ok wait
07:54 <@SomeoneWeird> it doesnt, ps was an example x.X
07:54 <@SomeoneWeird> ill make a proper one
07:55 <@jesusabdullah> SomeoneWeird: Do an example with sed
07:55 <@garrensmith> can anyone recommend a good logger, preferably something that logs to file and or stdout
07:55 <@SomeoneWeird> winston?
07:56 <@SomeoneWeird> umm
07:57 <@SomeoneWeird> where do you write to stdin for sed? 0.o
07:57 <@SomeoneWeird> ah
07:58 <@garrensmith> SomeoneWeird: cool thanks, I'll take a look at winston
07:58 <@SomeoneWeird> http://pastie.org/private/pytgm73iqt2hrrn2niuw
07:58 <@jesusabdullah> SomeoneWeird: https://gist.github.com/5d6d16cb00c2ff91f7d0
07:59 <@SomeoneWeird> hm
08:02 <@SomeoneWeird> fff
08:02 <@SomeoneWeird> why isnt this easy
08:02 <@SomeoneWeird> lmao
08:03 <@jesusabdullah> what do you mean
08:04 <@SomeoneWeird> basically, the proc im trying to spawn gives me an option of 1 2 or 3 (example), then after that asks another queston etc. so i wanna parse stdout and write to stdin depending on the stdoutt
08:04 <@SomeoneWeird> if what makes sense, lol
08:07 <@jesusabdullah> No, it does
08:07 <@jesusabdullah> but that's significantly harder
08:07 <@jesusabdullah> chances are you can avoid these questions with the correct cli flags
08:07 <@SomeoneWeird> hrm
08:07 <@jesusabdullah> that will be the much easier way to do this
08:08 <@SomeoneWeird> if i could do that, i would :P
08:09 < `3rdEden> Is there a way to see if a file is hidden using the fs module?
08:10 < `3rdEden> or if it's in a folder that is hidden..
08:10 <@jesusabdullah> SomeoneWeird: It's gpg. I'm **sure** you can. Failing that, try to use the "expect" module
08:10 <@jesusabdullah> and by module I mean "program"
08:10 <@jesusabdullah> sorry, tired
08:11 <@SomeoneWeird> not for generating a new key you can't
08:11 <@ljharb> i've used it for generating a new openssl certificate.
08:11 <@ljharb> i'm sure you can use it for gpg.
08:12 <@SomeoneWeird> ugh
08:12 <@ljharb> as i recall though it was very difficult and it was years ago, so i dunno :-)
08:12 <@SomeoneWeird> lol
08:12 <@SomeoneWeird> in node?
08:13 <@ljharb> no, in perl, using expect
08:13 <@ljharb> actually i only wrote a small part of it, a colleague wrote the rest
08:14 <@jesusabdullah> Yeah, expect is a program for doing exactly what you're talking about and I think there's a perl module that does similar
08:14 <@SomeoneWeird> guess i better find another way to go about this then
08:14 <@jesusabdullah> seriously SomeoneWeird read gpg's docs and do some googling, if they don't have a cli flag for overrides they're total noobs
08:15 <@SomeoneWeird> they do, but not for creating keys
08:15 <@SomeoneWeird> where you have to type your name, email etc.
08:15 <@jesusabdullah> I see
08:16 <@jesusabdullah> Yeah, expect or an expect-like module would be your best bet then
08:16 <@jesusabdullah> There's actually one for node but I don't think it's very sophisticated
08:16 <@SomeoneWeird> yeah it looks perfect
08:16 <@SomeoneWeird> thanks :)
08:27 <@radiodario> morning
08:36 <@garrensmith> anyone using couchdb with nodejs? I need some testers for my couchdb orm. https://github.com/garrensmith/LazyBoy
08:53 < radiodario> oh thanks Chanserv
09:20 < bcave> hello
09:26 <@mscdex> hello!
09:46 < radiodario> hi
09:49 < iwoj> i'm trying to run execsync
09:50 < ChristW_> I'm trying to emulate a client-server JS application in node.js. I used to work, but someone f*'d up the server... Now I get an ECONNREFUSED error, with not much additional info. Any way that I can see _which_ connection was refused?
09:51 < iwoj> what's the best way to syncronously execute an external command from node?
09:51 < ChristW_>  /I used/It used/
09:56 < ChristW_> Can I do a 'break on exception' somehow?
09:57 < ChristW_> This is what I see at the moment: http://pastebin.com/T9Zu6xEp
09:58 < lperrin> ChristW_, you can attach a function to the process's uncaught exceptions
09:59 < lperrin> http://nodejs.org/docs/latest/api/process.html#process_event_uncaughtexception
10:00 < lperrin> iwoj, http://nodejs.org/docs/latest/api/child_process.html#child_process_child_process_spawn_command_args_options
10:00 < rvagg1> ChristW_: domains may be helpful too: http://nodejs.org/docs/latest/api/domain.html
10:00 < lperrin> oh synchronously sorry
10:01 <@mscdex> anyone working on porting node to the Amiga 500?
10:01 < ChristW_> Ok, now I catch the exception, so my process continues but I still cannot see what connection it wants to open :-)
10:01 <@mscdex> iwoj: you can't
10:01 < rvagg1> and...  https://github.com/tlrobinson/long-stack-traces may be helpful if you just want to know where the exception originates: https://github.com/tlrobinson/long-stack-traces & https://github.com/substack/tracer-bullet
10:02 < ChristW_> I shoudl add: # node -v
10:02 < ChristW_> v0.4.8
10:02 < rvagg1> eeek.... way time to upgrade
10:03 <@mscdex> rvagg1, ChristW_: also: https://github.com/mattinsler/longjohn
10:05 < ChristW_> It's not my call to upgrade the system, unfotunately...
10:06 < ChristW_> And I _know_ that it works on one server, and does not work on another. Like i said, it _used- to work before someone f'd up the server...
10:10 < lperrin> ChristW_, is it possible that you have a zombie server still hogging the port ?
10:28 <@SomeoneWeird> ChristW_, you can't be expected to code on a system that runs a version thats years old
10:50 <@mscdex> years? 1 year and 2 months :-)
10:53 <@SomeoneWeird> heh, still
11:07 <@deoxxa> mscdex: node on the amiga... what crazy plans do you have for that?
11:08 < torpor> hi
11:09 <@mscdex> hi!
11:10 <@mscdex> deoxxa: kidding ;-)
11:10 <@deoxxa> mscdex :<
11:10 <@mscdex> deoxxa: although it looks like had plans on porting v8 to PPC some time ago, which should technically work on newer Amigas ;-)
11:10 <@deoxxa> haha
11:10 <@mscdex> *someone had plans
11:11 <@mscdex> i would be beyond thoroughly excited to be able to run node.js scripts on an A500
11:14 < ChristW_> I know that it's old code, but I also know that it worked until a week or so ago, so...
11:14 < ChristW_> And running on an Amiga would be nice, indeed :-)
11:14 < ChristW_> (not that I have one...)
11:15 <@deoxxa> ChristW_: strace
11:16 < RLa> what's biggest issue in porting for ppc, native code generation?
11:16 <@deoxxa> lack of geniuses
11:16 < RLa> because everything else would work out of the box, won't it
11:17 <@deoxxa> i wonder if you could output llvm bytecode
11:17  * deoxxa silly
11:17 < RLa> native code must be always generated?
11:17 < RLa> no "interpreter" mode in v8?
11:18 <@deoxxa> then pass it through the llvm stuff to get the real native bytecode...
11:18 <@deoxxa> that's actually crazy enough that it might work
11:18 <@deoxxa> s/native bytecode/native code/
11:19 < RLa> how many different "instructions" v8 needs?
11:20 < ChristW_> deoxxa: Good call! I think I've found part of the culprit: connect(8, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr("192.168.0.60")}, 16) = -1 EINPROGRESS (Operation now in progress)
11:20 < ChristW_> Connects to port 80, should be 443 in my case!
11:20 <@deoxxa> \o/
11:20 <@deoxxa> strace has saved my sanity more than once
11:21 < ChristW_> In normal cases (normal, uhm, what/), I use tcpdump or st. similar.
11:21 < ChristW_> But that's kinda hard on a server connecting to itself using ssl...
11:24 < ChristW_> Ok, that seems to work... changing 80 to 443 somewhere (.... I thought I found all of them...) now for the next step!
11:30 < torpor> i am a node.js newbie.  i have made a template site from express for my learning purposes.  i have added a file in routes/list.js and in app.js, "app.get('/list', routes.list);" with appropriate exports in list.js... but still i get 404 on localhost:/list
11:30 < torpor> and of course, restarted the server.
11:31 < torpor> anything i should be looking at closer?
11:31 < RLa> can you paste whole code for app setup somewhere
11:32 < RLa> and paste function list code as well
11:33 < Nexxy> torpor, did you require('routes/list') ?
11:34 < Nexxy> or something similar
11:34 < torpor> no, just require('routes') .. but how does 'index.js' work, then, if i have to specify the file?
11:36 < torpor> i mean, in the existing require, it just says require("routes") and then routes.index works.. in routs/index.js, export.index = function() {} .. i have the same for routes/list.js, i.e. exports.list = function() {}; .. 
11:36 < torpor> s/export/exports/
11:37 < RLa> you need to require that directly
11:37 < RLa> otherwise list.js is never loaded
11:38 < torpor> http://pastebin.com/cuUREnga
11:38 < torpor> like that?
11:38 < RLa> if you want something better, define module.exports = function(app) { app.get('/...') } in index.js
11:39 < RLa> then call it as require('routes')(app)
11:39 < RLa> in that function in index.js set up all routes
11:39 < torpor> in routes/index.js, do that?
11:39 < torpor> not in app.js?
11:40 < RLa> meaning you require() list.js etc in index.js
11:40 < RLa> yes
11:40 < RLa> that helps to make code cleaner
11:40 < RLa> otherwise you need to load a lot files in app.js
11:40 < torpor> but index.js is not part of the route for add.js and list.js?
11:40 < torpor>   , routes.list_all = require('./routes/list.js')
11:41 < RLa> it depends what you do in that method
11:41 < torpor> that is how i should do it?
11:41 < RLa> no, you put whole routes code into index.js
11:41 < torpor> sorry i just dont understand why it belongs in index.js instead of app.js?
11:44 <@ben_alman> is there a guide for publishing beta software to npm?
11:44 < RLa> torpor, http://pastebin.com/gq6ygUWc
11:45 <@ben_alman> i don't want people to accidentally think it's a release version, so if they do "npm install XXX" it should puck up the previous version
11:45 < RLa> torpor, it's just the way to organize code
11:48 < torpor> RLa: so index.js is in the root folder, not in routes/ right?
11:49 < RLa> hm, no, it should be in routes still
11:50 < RLa> torpor, and there are multiple ways to organize your code, i would not say that what i pasted is the best for all cases
11:51 < RLa> but i do not like those ways where you put lot of possibly unreleated code in a single file
11:51 < RLa> like putting all routes into app.js if you have lot of routes
11:52 < torpor> I prefer to think of routes as being significant to an understanding of the app, so they belong there.
11:52 < torpor> and I don't understand why index.js is the place to put routes.
11:53 < RLa> require('./handler/api/diary_entry')(app); require('./handler/api/login')(app); etc; <- this is how we do in our app
11:54 < mickhansen> RLa, yea - we prefer that way aswell
11:54 < mickhansen> Works great for seperating
11:54 < RLa> we have tens of entities and each of them having 4-20 routes
11:55 < RLa> and we have strict rules for routes, for example, routes for ./handler/api/diary_entry are in the form /api/diary_entry/something
11:57 < RLa> makes very easy to find file responsible for a route
12:00 < armetiz> Hi there. I'm trying to compile NodeJS on CentOS 6.
12:00 < armetiz> make test have failed with iptables enable.
12:00 < armetiz> Do I have to open 255.255.255.255:123456 ?
12:18 <@ben_alman> is there a way to have "npm install herpderp" not install pre-release versions?
12:25 <@deoxxa> ben_alman: that's how it works by default
12:25 <@NodeX> holy cow there is alot of Op's in here
12:26 <@ben_alman> deoxxa: i'm publishing a test module and it's installing the pre-release version
12:26 <@ben_alman> i've tried version 0.1.0-alpha and 0.1.0alpha and that version is installed instead of 0.1.0 which is also published
12:26 <@ben_alman> when i do npm install herpderp
12:26 <@deoxxa> ben_alman: the only time npm will install a prerelease version is if no other version satisfies the depepdencies you've specified, or if no other version's dependencies are satisfied by your system (node version, etc)
12:27 <@ben_alman> i'm just doing "npm install herpderp" on the cli
12:27 <@deoxxa> hm
12:27 <@ben_alman> check out package herpderp
12:27 <@deoxxa> what's the package name?
12:27 <@ben_alman> '0.1.0', '0.2.0-alpha', '0.2.0alpha'
12:27 <@ben_alman> herpderp
12:27 <@ben_alman> :D
12:27 <@deoxxa> oh haha
12:27 <@deoxxa> ok
12:28 <@ben_alman> those are the 3 published versions
12:28 <@ben_alman> it looks like x.y.z-build isn't pre-release as far as npm is concerned so i'm going to delete that
12:29 <@ben_alman> so now it's just '0.1.0', '0.2.0alpha'
12:29 <@ben_alman> npm info shows 'dist-tags': { latest: '0.2.0alpha' }
12:29 <@ben_alman> i wonder if there's a way to simply force npm to a different "latest"
12:30 <@deoxxa> http://semver.org/ says it shouldn't work that way
12:30  * deoxxa installs semver to test this theory
12:30 <@ben_alman> npm also says it differs from semver
12:31 <@ben_alman> let me find the link
12:31 <@deoxxa> oh
12:31 <@ben_alman> http://npmjs.org/doc/json.html#version
12:31 <@ben_alman> but it says that 0.2.0alpha should be treated as pre-release
12:31 <@ben_alman> "A numeric item separated from the main three-number version by a hyphen will be interpreted as a "build" number, and will increase the version. But, if the tag is not a number separated by a hyphen, then it's treated as a pre-release tag, and is less than the version without a tag. So, 0.1.2-7 > 0.1.2-7-beta > 0.1.2-6 > 0.1.2 > 0.1.2beta"
12:32 <@deoxxa> yeah
12:33  * deoxxa taps isaacs
12:33 <@ben_alman> it would be nice if node semver was updated to support semver 2.0
12:33 <@ben_alman> which allows for builds
12:33 <@ben_alman> with +
12:33 <@ben_alman> not that it really matters
12:34 < drudge> hi ben_alman
12:34 <@ben_alman> heya drudge
12:34 < drudge> how goes it?
12:34 <@ben_alman> good
12:34 <@ben_alman> trying to make alpha versions of grunt more easily available
12:35 <@ben_alman> but only to people who want to hack around
12:35 < mmalecki> ben_alman: I think there's something like --tag
12:35 < mmalecki> when doing npm publish
12:35 <@ben_alman> i think that people shouldn't be able to install a pre-release version in npm unless they explicitly state they want it
12:36 <@ben_alman> mmalecki: http://npmjs.org/doc/publish.html ?
12:36 < mmalecki> yeah, and like, when you specify a different tag, it won't be installed automatically
12:36 <@ben_alman> mmalecki: i wish it was documented
12:36 < mmalecki> ben_alman: not much info there... go and read the source, maybe?
12:37 <@ben_alman> looking at isaacs source makes me want to kill myself :)
12:37 < drudge> haha
12:37 < mmalecki> ben_alman: I'm glad it's not just me
12:38 < mmalecki> ben_alman: wait for isaacs then
12:38 <@ben_alman> i'm one of those comma-last, semicolons, multiple var statement types, what can i say
12:39 <@ben_alman> well for now i could do npm install git://github.com/cowboy/grunt#devel
12:39 <@ben_alman> which works just fine
13:47 <@booo> does it cause problems if i call resume multiple times on a stream?
13:50 < debuuuu> Hi all. I've noticed if I send a big block of JSON to a small Node.js based server I'm playing with, the client that sent the data gets insta-disconnected
13:50 < debuuuu> I don't really know where to start debugging
13:51 < debuuuu> Are there known like, limits for the size of data you can send to a Node server?
13:56  * flexd coughs.
14:01 < Tobsn> just FYI http://dl.dropbox.com/u/1656816/Screenshots/ua~o.png
14:02 < coderarity> oh really?
14:03 < coderarity> man
14:03 < jrajav> Every true mac fanboy knew that it was coming out today
14:03 < jrajav> Shame on you
14:03 < Tobsn> true
14:03 < jrajav> Not you
14:03 < jrajav> :P
14:03 <@gkatsev> it was only announced yesterday
14:03 < coderarity> i don't want to upgrade
14:03 < Tobsn> just saying its already online for a few hours... ahead of US waky time
14:03 < jrajav> gkatsev: Yeah, exactly
14:03 <@gkatsev> jrajav: yep. lol
14:03 < Tobsn> im just confused what it will do to my Air
14:03 < Tobsn> since i have GM installed
14:04 < Tobsn> btw. the upgrade is worth it, some stuff that always took a while to render etc. is instant. like expose. it just shows up without a short waiting time. everything feels snappier
14:04 < Tobsn> node/npm etc. works fine too
14:05 < coderarity> well livestream won't work
14:05 < jrajav> Does fullscreen work correctly?
14:05 < coderarity> not that i really care
14:05 < Tobsn> jrajav, define "correctly"?
14:05 < jrajav> (Spoilers, I already know they weren't going to fix it)
14:05 < coderarity> fullscreen works
14:05 < coderarity> (i tried the preview)
14:05 < jrajav> Tobsn: Fullscreening an app on one monitor in a multi-monitor setup doesn't grey out the other monitors
14:05 < coderarity> it does?
14:05 < Tobsn> oh haha yeah that lion bullshit.. i dont know, i just moved, have only one iMac and one air here... dont really know how i would test that ;)
14:06 <@MerlinDMC> jrajav, here it grays out the other ones
14:06 < Tobsn> coderarity, yeah it did in lion
14:06 < jrajav> MerlinDMC: ML?
14:06 <@MerlinDMC> ML GM yes
14:06 < jrajav> Dammit
14:06 < coderarity> it did for me in mountain lion too
14:06 < Tobsn> MerlinDMC, any idea what to do since its released today?
14:06 < jrajav> Yeah I don't know why Apple doesn't see the problem with that behavior.
14:06 < Tobsn> i think its part of the deal, fullscreen is like a one app focus mode
14:06 < jrajav> I'm assuming that fixing it is nontrivial and they're lazyasses
14:06 <@MerlinDMC> Tobsn, i'll install it on the production machine and test
14:07 < jrajav> Tobsn: With multiple monitors? lol no
14:07 < Tobsn> jrajav, well...
14:07 < coderarity> but i want full screen to be 2 app focus mode!
14:07 < pooriaazimi> My understanding was that it *still* grays out other monitors, but at least it lets you full screen an app on the other screen if you feel like. I haven't tried anything newer than beta 2 though...
14:07 < coderarity> pooriaazimi, yeah
14:07 <@MerlinDMC> jrajav get something like Moom if you need one monitor fullscreen for apps
14:07 < jrajav> pooriaazimi: That's still a massive improvement
14:07 < jrajav> MerlinDMC: Mooom is utter shit
14:08 < jrajav> I want real fullscreen to work correctly. Is that really a ton to ask?
14:08 < mmalecki[food]> dominictarr: food!
14:08 < Tobsn> MerlinDMC, what about GM? i have it installed here and now i wonder what happens next...
14:08 < coderarity> moon is the greatest
14:08 < coderarity> moom*
14:08 < Tobsn> jrajav, i guess the fullscreen is initially made for laptops etc. one screen devices that needed more real estate for the app
14:08 < Tobsn> so you can switch with four finger swipe between fullscreen apps and normal desk
14:08 < Tobsn> at least thats what im doing
14:09 < jrajav> I know it is
14:09 < jrajav> That's why they fucked up
14:09 < jrajav> They didn't consider the multi monitor use case thoroughly enough
14:09 < Tobsn> well they really fucked up in not displaying minimized windows in expose
14:09 < coderarity> i just like swiping between apps
14:09 < Tobsn> that still fucks up my workflow
14:09 < jrajav> That's still not an excuse for not fixing it in the next major iteration
14:09 < jrajav> ML
14:09 < jrajav> I mean seriously
14:09 < Tobsn> i installed dockview as a workaround
14:09 < jrajav> We understand that there are going to be quirks when you introduce a lot of paradigm shifts like in Lion
14:10 < jrajav> But if I'm paying for *another* major upgrad,e you better have fucking fixed those quirks
14:10 < coderarity> jrajav, they probably just don't care
14:10 < Tobsn> yeah... they made it a lot faster
14:10 < Tobsn> so im happy about that
14:10 < jrajav> Well yeah not like I'm not getting the upgrade :P
14:10 < coderarity> apple doesn't care about people who don't do what everyone else does
14:10 < Tobsn> hehe
14:11 < Tobsn> i mean thats why they are so good, they focus on one good way in the middle
14:11 < jrajav> coderarity: "Here's to the misfits?"
14:11 < Tobsn> jrajav, you're using a mac, you're a misfit already
14:11 < Tobsn> ;)
14:12 < jrajav> I use a Mac *because* it works so well in general
14:12 < coderarity> the new safari is really cool
14:12 < Tobsn> http://dl.dropbox.com/u/1656816/Screenshots/sgyi.png
14:12 < Tobsn> this is going to be interesting.
14:12 < jrajav> If ML is good, *two* MLs must be twice as good! :D
14:12 <@MerlinDMC> Tobsn, no ... just a 4gig download and a starting installer afterwards
14:13 < Tobsn> MerlinDMC ? its already installed
14:13 < RLa> what about gatekeeper, you can't install custom software anymore?
14:13 <@MerlinDMC> but you start the installer after downloading it ...
14:13 < Tobsn> i just bought it to get a legal copy to install it on my other machines... and did it on the GM laptop to see what happens haha
14:13 < jrajav> RLa: Say what?
14:13 <@MerlinDMC> RLa, can be disabled in security preferences ... but that one sucks a lot
14:13 < Tobsn> Rla, you just turn it off
14:13 < jrajav> Oh phew
14:13 < Tobsn> MerlinDMC, why?
14:13 < jrajav> I was a little worried about the very ambitious sounding new sandboxing
14:13 < Tobsn> wouldnt the installer just say "its already installed"
14:14 < coderarity> i thought this was supposed to be out in fall
14:14 < Tobsn> jrajav, thats just for app store apps
14:14 < RLa> well, i'm a developer, now must tell clients to turn off a security on their computers
14:14 < Tobsn> the have to pass sandbox to get in
14:14 <@MerlinDMC> Tobsn, that i can tell you in some minutes i guess
14:14 < Tobsn> RLa, or registe rwith apple
14:14 < Tobsn> MerlinDMC, lol
14:14 < Tobsn> let me know
14:14 <@MerlinDMC> RLa, sign the app and it's all cool
14:15 < RLa> MerlinDMC, know some blog post about the actual process for that?
14:15 < Tobsn> RLa, to make it a bit more clear
14:15 < Tobsn> http://dl.dropbox.com/u/1656816/Screenshots/_2tz.png
14:15 <@MerlinDMC> RLa, i think xcode had a wizard for that
14:15 < Tobsn> see "identified Developers"
14:15 < Tobsn> yeah xcode has a signing wizard
14:15 < Tobsn> all you need is your certs
14:15 <@SomeoneWeird> that a hackintosh Tobsn ? or proper mac hardware
14:16 < Tobsn> System Info: Model:  MacBookAir4 · CPU Speed:  4 @ 1.7 GHz · L2:  256 KB · L3:  3 MB · RAM:  4 GB · OS X:  Version 10.8 (Build 12A269) · Client:  Linkinus 2.4.3/25090 · Style:  Whisper
14:16 <@SomeoneWeird> lol
14:16 <@MerlinDMC> RLa, https://developer.apple.com/resources/developer-id/
14:16 <@SomeoneWeird> macbook 
14:16 < RLa> Tobsn, those app signing certs that cost 2k per year?
14:16 < Tobsn> i love my air
14:16 < Tobsn> RLa, no a mac dev cert
14:16 < Tobsn> not a real SSL cert for software signing
14:16 < Tobsn> well it is a real ssl cert but not from verisign
14:17 < Tobsn> just sign up with the mac developer program
14:17 < Tobsn> i cant remember if it cost something
14:17 < pooriaazimi> Safari 6's new Inspector (for attached iDevices) is particularly nice... http://taitems.tumblr.com/post/24936855546/what-ios-6-mobile-safari-offers-front-end-devs
14:17 < Tobsn> but if its probably $99
14:17 <@MerlinDMC> 99$ per year
14:17 < RLa> that's not much
14:18 < RLa> thanks for info!
14:18 < Tobsn> nope, thats basically your key to get auth'd by apple
14:18 <@MerlinDMC> RLa, also ... you get ML for free as developer ... so don't buy both ;)
14:18 < Tobsn> then if you want to get into the app store, thats a whole other story haha
14:18 < Tobsn> wait what?
14:18 < Tobsn> where?
14:18 < Tobsn> someone told me that for lion and i didnt believe it
14:19 <@MerlinDMC> Tobsn, in the dev area you can redeem a download code ... like for the Betas and the GM
14:19 < Tobsn> wtf
14:19 < Tobsn> where do i get that download code from?
14:19 < AviMarcus> ops plz
14:20 <@AviMarcus> you can get 1yr certificates for one subdomain from startssl for free
14:20 < coderarity> ops plz
14:20 <@AviMarcus> but that's got nothing to do with app stores
14:21 < Tobsn> AviMarcus, and has nothing to do with software signing certs ;)
14:21 <@AviMarcus> k :)
14:21 < RLa> actually it makes lot of sense they give out certs themself
14:21 < RLa> no need to rely on 3rd party
14:22 <@MerlinDMC> Tobsn, i can run the installer on top of ML GM witout any "i'm already installed" thing
14:22 <@AviMarcus> so... I started creating an API with restify. But how do I both use that from my own node code, and also do unit testing? Should I be writing all the functions separately and then have restify be a wrapper to call stuff (adding in permissions) ?
14:23 < Tobsn> so its installing?
14:24 < Tobsn> AviMarcus, use that zombie thing
14:24 <@AviMarcus> Tobsn, what zombie thing?
14:24 < Tobsn> http://zombie.labnotes.org/
14:25 <@AviMarcus> that actually looks pretty cool.
14:25 < Tobsn> there s also mocha and jasmine
14:25 < baudehlo> tbranyen: ping
14:26 < Tobsn> also
14:26 < Tobsn> there is http://flatiron.github.com/api-easy/
14:26 < Tobsn> and AviMarcus, if you want an invite for apiary.io - let me know
14:26 <@AviMarcus> OK but should I be abstracting out my functions from the actual REST script?
14:27 <@SomeoneWeird> so i wonder if this will work
14:27 <@SomeoneWeird> opplxshutzotheich
14:27 <@SomeoneWeird> hahahahah
14:27 <@AviMarcus> SomeoneWeird, it matches: /^ops?\s*pl(ease|z|x)/i
14:27 < Tobsn> AviMarcus, yes?
14:27 <@AviMarcus> sure. pm.
14:28 < SomeoneWeird> opssplx
14:28 < SomeoneWeird> opsplx
14:28 <@SomeoneWeird> heh
14:38 < strk> can I shift process.argv ? 
14:47 < Tobsn> strk, try it
14:54 < Tobsn> btw. MerlinDMC, macrumors forum says public release has the same build ID as GM
14:54 < Tobsn> both are 12A269
15:16 < Tobsn> http://fastlz.org/benchmarks.htm
15:20 < wingy> what do you guys think about http://opalang.org/
15:31 <@tbranyen> baudehlo: whats up
15:35 -!- Topic for #node.js: http://nodejs.org | Node.js is a JavaScript platform for fast, scalable network applications. | Node.js is kosher and halal, made of 100% pure rainbows; it is scripting beyond your wildest dreams of avarice. | Type "opplxshutzotheich" for ops.
15:35 -!- Topic set by Gregor [codu@codu.org] [Wed Jul 25 00:40:59 2012]
15:36 -!- isaacs changed the topic of #Node.js to: Newly Opened Dog Entry
15:38 <@isaacs> strk: yes, but it won't be visible from outside the process.  (ie, process.argv is just a Plain Old Array, not a fancy pants magic thing like process.env)
15:57 <@Industrial> I have installed nodejs 0.8.3 and am trying to install amqp (rabbit.js really).
15:57 <@Industrial> nopm info amqp gives: engines: { node: '0.4 || 0.5 || 0.6' },
15:57 <@Industrial> Should this package be updated to 0.8? npm install rabbit.js fails on it.
16:07 < daslicht> hello how can i include a js file which contains all my get/post etc handlers into the main app.js ?
16:07 < daslicht> do i have to craete a module?
16:09 < torpor> daslicht: yes and use routes
16:09 < daslicht> app.get('/top1', routes.top1),
16:09 < daslicht> i do it like this at the moment 
16:09 < daslicht> but how can i put that into a module.exports ?
16:11 < daslicht> i should probably mention that I use express
16:12 < torpor> i had the same question earlier today and solved it like that too .. 
16:13 < blazes816> daslickt: #express
16:14 < daslicht> thanks blaze
16:26 < Owner> hello theswimmingfrog 
16:26 < Owner> op plz
16:28 <@owen1> i am piping a readable stream into a put request (using Mikeal's request package) and getting '411 - length required' from the server - var file = fs.createReadStream('test-file').pipe(request.put('http://my-server.com:3000/123, function(err, res, body){ console.log(res.statusCode) }))
16:28 <@owen1> any ideas?
16:29 <@wookiehangover> looks like your server wants the file length in order to process it
16:30 <@Owner> owen1~# is that your nginx proxy
16:31 <@Owner> owen1~# add a Content-Length header
16:31 <@Owner> size of zero might work also
16:31 <@owen1> Owner: it's an api someone at my company wrote for uploading files
16:31 <@Owner> ok so you arent proxying through nginx?
16:32 <@owen1> Owner: i am not sure how to pass options to request.put. let me see.     nginx? i don't think so. why?
16:32 <@Owner> i thought you were someone else
16:32 <@owen1> Owner: i am planning to do that for a file upload with existing ruby code.
16:32 -!- mode/#Node.js [+Cnt]
16:32 -!- Channel #Node.js created Sat Jan 30 07:48:24 2010
16:32 <@Owner> owen1~# oh
16:32 <@owen1> Owner: no, i am the same guy. but this is a different case.
16:32 -!- mode/#Node.js [+Cnt]
16:32 -!- Channel #Node.js created Sat Jan 30 07:48:24 2010
16:33 <@owen1> i am planning to use nginx with redirect, so i can use ruby codebase and make a form with action that send the file upload to my node. but this is not the case.
16:34 <@Owner> add a header to request, gtg
16:38 <@jamygolden> would it be "overkill" to use nodejs for a blog?
16:39 < blazes816> jamygolden: nope.  node is super lightweight.
16:41 <@owen1> Owner: interesting. now i am getting 403
16:42 <@gildean> jamygolden: i did just that, and posted a post how to deploy one for free: http://toomanymangos.nodester.com/posts/500d1ec1a32b32c745000001
16:42 <@jamygolden> blazes816: ok cool thanks :p I'm busy creating a social-list type app with node to get the hang of it and someone mentioned node not really being suited. Seems to me like I'd like to completely replace php with it :p
16:42 <@gildean> mind you the project is not finished, but everything works as it's supposed to
16:42 <@jamygolden> gildean: thanks! :D I'll check that out
16:43 < blazes816> jamygolden: sounds like a good plan to me!
16:44 <@gildean> jamygolden: i even made sure the css is mobile compliant, the design changes by the screen width
16:44 < blazes816> jamygolden: also, if the person who told you that was a php dev, ignore them
16:44 <@owen1> and now i am getting 500 ):
16:46 < shlevy> Is it possible to tell npm -g to not redownload a dependency if it's already installed globally?
16:55 <@owen1> how can i figure out why i am getting 500? var file = fs.createReadStream('test-file').pipe(request.put({url: 'http://mogwai.wc1.yellowpages.com:7699/test.wc1/file1', headers:{'Content-Length': 0}}, function(err, res, body){ console.log(res.statusCode) }))
16:56 < yankhates> check log?
16:56 <@gildean> owen1: can content length be 0?
16:57 <@owen1> gildean: according to Owner, yes
16:57 <@owen1> gildean: since i am reading the file from the hardisk and streaming it into the put request, is there a way to pass it's length?
17:01 < retrobaby> could you not calculate the file size as you read it and pass that value?
17:01 < Kai`> @owen1, can you get size with fs.stat before you send it?
17:01 < retrobaby> there are quite a few ways to do it
17:02 <@Wes-> owen1: there must be a way to stat the file before reading it, that's probably what you want to do
17:03 <@gildean> Owner: can you explain why setting the content lenght to 0 would work?
17:03 <@gildean> quick read on http specs says this: Any Content-Length greater than or equal to zero is a valid value.
17:03 <@gildean> ok, so 0 is valid
17:04 <@gildean> but: The Content-Length entity-header field indicates the size of the entity-body, in decimal number of OCTETs, sent to the recipient or, in the case of the HEAD method, the size of the entity-body that would have been sent had the request been a GET. 
17:11 < shlevy> Is there a way to parse JSON incrementally?
17:16 <@dscape> shlevy: what do you mean?
17:16 <@dscape> like parsing streamed chunks?
17:16 < shlevy> dscape: Yeah
17:16 <@dscape> https://github.com/dscape/clarinet
17:16 <@dscape> ||
17:17 <@dscape> https://github.com/creationix/jsonparse
17:17 < shlevy> dscape: Thanks
17:18 <@dscape> shlevy: np
17:18 <@dscape> curious, why do you need it for?
17:18 <@dscape> s/why/what/
17:18 < yawnt> ò/
17:18 < shlevy> Looks like it might not be exactly what I need... Parsing a huge json file and seems wasteful to have it all in memory
17:19 <@creationix> shlevy, and event-only version of jsonparse https://gist.github.com/1821394
17:19 <@creationix> shlevy, create a stream out of the file using fs.createReadStream and send the chunk events to a streaming json parser
17:19 <@creationix> than use the parse events to query for the data you need
17:20 < shlevy> Right, I have the stream so I'm looking for a streaming json parser
17:21 <@creationix> shlevy, cool, so clarinet or one of mine should work
17:21 <@creationix> just depends on the API you want
17:21 < shlevy> Mostly just need a 'done' event that gets the finished object
17:21 < other_guy> util.inherits doesn't seem to copy "Class Methods"
17:21 <@tbranyen> isn't there a guide for migrating an app from node-waf to node-gyp
17:22 <@tbranyen> i could have sworn someone wrote a nice long post on it
17:22 < other_guy> is that normal?
17:22 <@tbranyen> i need to migrate nodegit and nodewii at some point
17:22 < TooTallNate> tbranyen: if you find it let me know :)
17:22 < drudge> other_guy: yes
17:22 < TooTallNate> i've never seen such a thing
17:22 < AvianFlu> tbranyen, yeah, for me, it was just a couple of hours with the docs for each
17:22 < AvianFlu> it's not that bad
17:22 < other_guy> drudge, what's the best practice method for copying those too?…. and why isn't that part of the default behavior?
17:22 < AvianFlu> there are a lot of addons with both build files these days, at least
17:23 <@creationix> other_guy, Parent.adopt = function (Child) { Child.__proto__ = this; Child.prototype.__proto__ = this.prototype; }
17:23 <@tbranyen> TooTallNate: lol thought you wrote one
17:23 <@tbranyen> guess not
17:23 <@tbranyen> get on that!
17:23 < TooTallNate> inorite?
17:23 < drudge> other_guy: because the methods aren't on the prototype
17:23 < TooTallNate> i've been avoiding my blog until i get the chance to rewrite it :p
17:24 <@tbranyen> yeah i know what thats like
17:24 < other_guy> creationix, isn't that for all the methods on the prototype?
17:24 < TooTallNate> i've been wanting to use node-gitteh, but it don't work on 0.8 :\
17:24 <@creationix> other_guy, that sets up inheritance
17:24 <@creationix> other_guy, so all prototype methods and "class" methods get inherited
17:24 <@creationix> even ones added later
17:25 < tprice> question about node-restify does it take form posts of a file?
17:25 <@creationix> other_guy, setting .__proto__ means make this object inherit from that one
17:25 < tprice> and if so would it be request.form or request.files?
17:26 <@CIA-93> node: isaacs v0.8 * r8656c26 / Makefile : Fix #3761 build: Default to V=1 - http://git.io/Jm7m0g
17:26 < other_guy> creationix, yeah I get that part, but I don't see where the "Class" methods come in
17:26 <@creationix> what is a "class" method?
17:26 < other_guy> nothing is copying the direct properties on the parent
17:26 <@creationix> just a property of the constructor right?
17:26 <@creationix> Child.__proto__ = this
17:27 < other_guy> var MyClass = blah;
17:27 <@creationix> (since adopt is a "class" method, this is the Parent)
17:27 < other_guy> MyClass.someClassMethod = 
17:27 < other_guy> AH HA
17:27 <@creationix> right, I implemented the inheritance as a "class" method
17:27 < tprice> any advice?
17:27 <@creationix> you could do it externally as well and pass in Parent instead of using this
17:28 < other_guy> it's nuts to me that util.inherits() doesn't handle this
17:28 <@creationix> it's impossible without using __proto__
17:28 <@creationix> node-core avoids using __proto__
17:28 < other_guy> ah ha
17:28 <@creationix> the next best thing would be to do a manual shallow-copy
17:28 <@creationix> but that's slow and expensive
17:28 < other_guy> That's what I was doing, and it was slow and expensive :-)
17:29 < other_guy> so I would rename "Parent" to my super class
17:29 < TooTallNate> the two places we *do* use __proto__ in core is to avoid that manual shallow-copy
17:30 < TooTallNate> oh, assert too
17:30 <@creationix> other_guy, right, or is you don't mind, add .adopt to Function
17:30 <@creationix> then all constructors can adopt other constructors
17:31 <@owen1> Wes-: Kai` gildean i'll try fs.stat thanks
17:32 < TooTallNate> wtf, that assert one shouldn't even be there
17:32 < other_guy> I'll try to avoid modifying base types like that for this, but this is still weird… because I have to do my inheritance in the file for the super class rather than in the child class...
17:33 < other_guy> though, creationix, it looks like I could just do the body of that function in my constructor of my child class, since I already know the Parent class (I have to pass it later to util.inherits)
17:33 <@creationix> not in the constructor
17:33 < other_guy> oh, because __proto__ doesn't exist yet
17:33 < other_guy> ?
17:34 <@creationix> function Child() {}; Child.__proto__ = Parent; Child.prototype.__proto__ = Parent.prototype
17:34 <@creationix> and the order doesn't matter if you use functions declarations
17:34 <@creationix> their value hoists
17:34 <@creationix> and all functions have a .prototype property according to the spec
17:35 <@AviMarcus> in semver, if x.y.z  -- if Y has been incremented, doesn't that mean that old things will keep working the same? official semver seems to specify that only new functionality, not breaking changes, should have Y incremented.
17:35 <@creationix> other_guy, the constructor is a per-instance thing, this inheritance is a per-class definition thing
17:35 <@jroes> agh!
17:36 < other_guy> Ah gotha
17:36 <@jroes> mongoose model this._id not being a string ever bitten anyone else?
17:36 <@creationix> AvianFlu, in node communities, changes to y mean breaking API
17:36 <@jroes> jeez, what a time sink that debugging run was
17:36 <@creationix> changes to x mean major design shifts
17:37 <@AviMarcus> creationix, tab fail, btw.
17:37 <@AviMarcus> creationix, am I reading it right that http://semver.org/ is different?
17:37 < other_guy> creationix...
17:37 < other_guy> Child.learn = function(Parent) {
17:37 < other_guy>   Child.__proto__ = Parent;
17:37 < other_guy>   Child.prototype.__proto__ = Parent.prototype;
17:37 < other_guy> };
17:37 <@creationix> AvianFlu, somewhat, yes
17:38 <@AviMarcus> k, thx
17:38 <@creationix> other_guy, not much point in that function
17:38 <@creationix> you can't inherit from more than one parent
17:38 <@creationix> other_guy, so that function would only ever be called once
17:38 <@CIA-93> node: isaacs v0.8 * rb207e24 / doc/blog/release/v0.8.4.md : Blog post for 0.8.4 (+5 more commits...) - http://git.io/Zivrzw
17:39 <@creationix> other_guy, if you don't want to modify the function you inherit from, then just use a utility function
17:40 <@creationix> other_guy, function inherit(Parent, Child) { Child.__proto__ = Parent; Child.prototype.__proto__ = Parent.prototype; }
17:40 < other_guy> creationix, can't I just set my Child.__proto__ to Child.super__
17:40 < other_guy> ?
17:40 < drudge> i thought i'd be pleasantly surprised with 0.8.4's mac installer on mountain lion
17:41 <@creationix> other_guy, you can use this instead of util.inherit
17:41 <@creationix> __proto__ is better than super__ imo
17:41 <@creationix> since it actually sets up the inheritance
17:41 <@creationix> both are ugly underbar properties
17:41 <@CIA-93> node: Nathan Rajlich v0.8 * r9eddaeb / lib/assert.js : assert: remove unnecessary use of __proto__ - http://git.io/Zmxz2A
17:42 <@creationix> TooTallNate, btw, will node's stance on __proto__ change now that it's not deprecated according to brendan?
17:42 < TooTallNate> creationix: well i think it's circumstantial
17:42 < other_guy> TooTallNate, because this is seriously nuts that util.inherits doesn't do thsi.
17:42 < TooTallNate> what's the problem now?
17:43 < other_guy> it doesn't inherit 'Class' methods/props
17:43 < other_guy> so creationix is helping me with a workaround
17:43 < TooTallNate> hmmm, honestly i don't think there would be enough of a demand to change util.inherits()
17:44 <@creationix> other_guy, have you tried `console.log(require('util').inherits.toString())` in a node repl?
17:44 < TooTallNate> it's frozen anyways i think
17:44 <@creationix> it doesn't do much
17:44 <@creationix> my three-liner does more
17:44 <@creationix> and is less error-prone
17:44 < other_guy> this one… function inherit(Parent, Child) { Child.__proto__ = Parent; Child.prototype.__proto__ = Parent.prototype; }
17:44 < other_guy> ?
17:45 <@creationix> if you use util.inherits after adding methods, they get lost
17:45 <@creationix> other_guy, right, that or putting in on your base class or Function
17:45 < TooTallNate> ya time is better :p
17:45 < TooTallNate> tim's
17:45 < TooTallNate> autocorrect
17:45 < TooTallNate> geez, gotta disable this
17:45 < other_guy> I think I am going to add that inherit function onto the Function
17:45 <@creationix> other_guy, that's what I would do
17:46 <@creationix> but usually I have a base class so I just use that
17:46 <@creationix> I don't mind repeating the two lines in every project
17:47 < other_guy> so...
17:48 < other_guy> Function.inherits = function(Child, Parent) {  Child.__proto__ = Parent; Child.prototype.__proto__ = Parent.prototype; }
17:48 < other_guy> too loosely match util.inherit
17:49 < other_guy> then I'd just call Function.inherits(myChild, itsParent);
17:49 < other_guy> when I'm defining my child class
17:50 < Jarod_> anyone update to mountain lion and have issues with node?
17:51 <@TheEmpath> If a popular plugin says "Installation is a quick (I promise!)" in the README, you may have embraced terrible a design philosophy.
17:52 <@jcrew> i wrestle with mountain lions
17:53 < Jarod_> me too
17:53 <@Gregor> :( I only wrestle with baby wildcats
17:53 < Jarod_> mountain kitties
17:54 < other_guy> creationix, I'm screwing something up here...
17:55 < other_guy> :-(
17:55 <@niallo> has anybody had issues with node 0.8.3 being somehow unable to make http requests after a while? my web app process got into a strange state this morning which felt like resource starvation
17:55 <@niallo> once i restarted the process, it could make http requests again fine
17:55 <@creationix> other_guy, why put it on Function if you're not going to use "this"
17:55 <@niallo> no errors or exceptions being thrown
17:55 < other_guy> Yeah I didn't
17:56 < other_guy> I ended up adding it to my helpers library
17:56 < other_guy> so it's helpers.inherits(Child, Parent)
17:56 <@creationix> other_guy, Function.adopt = function (Child) { Child.__proto__ = this; Child.prototype.__proto__ = this.prototype; }
17:56 <@creationix> other_guy, is it not working?
17:56 < other_guy> I don't think so… one sec
17:57 < other_guy> nevermind… console.log bork
17:57 < other_guy> wasn't showing the __proto__
17:57 <@niallo> not even sure how to go about diagnosing this kind of silent "starvation" issue
17:57 < other_guy> forgot I needed to use inspect
17:57 < other_guy> THANKS A BUNCH creationix
17:59 <@creationix> other_guy, enjoy
17:59 < other_guy> you just drastically increased the flexibility of the patterns I can develop with :-)
18:00 < other_guy> oh, holy fuck this is amazing
18:00 < phuff> I'm a total node n00b.  And am I'm trying to figure out where npm is storing it's packages.
18:00 < other_guy> You just allowed me to lop off about 3/4's of my HTTPS client code, since most of it comes from the HTTP client
18:00 <@niallo> phuff: ~/.npm ?
18:00 < phuff> And am failing sorely.
18:01 < phuff> niallo: Really?  It doesn't put it somewhere more globally accessible?
18:01 < phuff> It's stored per user?
18:01 <@niallo> phuff: well it depends what you mean i suppose. there is also node_modules.
18:01 <@niallo> but there is a cache in ~/.npm
18:01 < phuff> niallo: So I did this: npm install -g swank-js
18:02 < phuff> niallo: What is the cached used for?
18:02 < phuff> And where is node_modules?
18:02 <@niallo> ls -last $(which swank-js)
18:02 <@niallo> should be a symlink 
18:03 <@niallo> -g flag to install means global
18:03 < purr> niallo: When should i use npm with &quot;-g&quot; flag and why? - Stack Overflow <http://stackoverflow.com/questions/8909986/when-should-i-use-npm-with-g-flag-and-why>
18:03 < phuff> Ahhhh
18:03 < phuff> okay
18:03 <@niallo> so if you use install -g stuff will be under $PREFIX/lib/node_modules
18:04 <@creationix> other_guy, I played around with this idea a while back https://github.com/creationix/pattern
18:05 < phuff> niallo: That's what I needed to know… Thanks :)
18:05 < other_guy> cool :-)  I'll take a closer look after I get this damned Riak client committed today.
18:05 <@niallo> phuff: np
18:12 < andresj> so in Express.js, if I throw an error from a callback inside a URL handler, the whole server crashes. How do I report the error to the user?
18:15 < guidocalvano> going to install node js on an ubuntu machine via ssh
18:15 < guidocalvano> I'm checking out this page on the git wiki 
18:15 < guidocalvano> for some reason I need some python stuff to install node
18:15 < guidocalvano> why?
18:15 <@gildean> guidocalvano: there's a ppa that you can add for the latest stable 
18:16 < guidocalvano> sudo apt-get install python-software-properties
18:16 < guidocalvano> sudo add-apt-repository ppa:chris-lea/node.js
18:16 <@niallo> andresj: catch the exception?
18:16 < guidocalvano> the first line is there for the second right?
18:16 <@gildean> so you can just command sudo add-apt-repository team/repo && sudo apt-get update && sudo apt-get install node
18:16 < andresj> @niallo, and then what? I'd like the same behaviour as when an exception is thrown directly in the handler (500 error)
18:17 <@niallo> andresj: respond however you like. set status code to 500 if you want.
18:17 < andresj> @niallo, Yes, but I'd expect there's already some code that handles errors in handlers. I'd like to reuse that.
18:18 <@niallo> andresj: ah ok. i don't know how to reuse that.
18:18 <@gildean> guidocalvano: the exact command is: sudo add-apt-repository ppa:chris-lea/node.js && sudo apt-get update && sudo apt-get install nodejs
18:18 < andresj> @niallo, ok, niallo, i'll probably go your way if i can't figure it out. thanks! :)
18:25 < strk> is there a source-level profiler ? I don't see very interesting info in v8.log produced by --prof
18:27 < jerrysv> how does that work?
18:27 < jerrysv> op me
18:27 < jerrysv> ryan_opper: op me
18:27 < jerrysv> bah
18:27 < coderarity> say ops plz
18:27 < jerrysv> ops plz
18:27 < coderarity> like this
18:27 < coderarity> ops plz
18:27 <@jerrysv> thanks :)
18:27 <@coderarity> :D
18:28 < jerrysv> i don't really *want* ops, just wanted to remember the words :)
18:28 <@fly-> hahaha
18:28 <@fly-> woah what
18:28 <@fly-> ops lolwat
18:29 <@gwillen> ... that is some ops
18:29 <@gwillen> ... whoa
18:29 <@gwillen> I have ops.
18:29 <@gwillen> That's dangerous. ;-)
18:30 < jerrysv> what's even more dangerous is writing a module without tests
18:30 <@FireFly> deops plz
18:30 <@FireFly> bah.
18:31 <@fly-> oops
18:31 <@FireFly> \o/
18:31 <@fly-> lol tab
18:31 < fly-> ops plz
18:31 <@fly-> :/
18:31  * FireFly -- the undeoppable
18:31 <@fly-> im done with this
18:32 < jerrysv> i think it's easier to just leave channel and come back
18:34 <@ljharb> if youre an op you can just change your own mode in the console.
18:49 < therealkoopa> Has anyone ran into a max message size with socket.io?  For instance, sending a large image that is base64 encoded from server to client - I wonder how large you could go.
18:50 <@ben_alman> isaacs: for package "herpderp" i've published 0.1.0 and 0.2.0alpha. should "npm install herpderp" install 0.1.0 since 0.2.0alpha is a pre-release version? Because it's installing 0.2.0alpha. Which seems really bad
18:56 < zackiv31> is there a way to create a read stream from a variable? (i.e. it's already read into memory)?
18:58 <@AviMarcus> ben_alman, I can't find any info about how to set that. I know node-mysql published v2alpha but default installed 0.9
18:58 <@ben_alman> AviMarcus: this talks about version naming http://npmjs.org/doc/json.html#version
18:59 <@ben_alman> but while it talks about the semantic distinction between release and pre-release it doesn't talk about npm install's behavior
18:59 <@AviMarcus> right.
18:59 <@ben_alman> either way, try "npm install herpderp"
18:59 <@ben_alman> it's just got 0.1.0 and 0.2.0alpha
19:00 <@ben_alman> with npm 1.1.43 at least, it installs 0.2.0alpha here
19:00 <@ben_alman> basically, i want to publish an alpha versions of grunt 0.4.0 but i definitely don't want people installing it unless they do so explicitly
19:01 <@ben_alman> Right now, i'm just telling them to do: npm install git://github.com/cowboy/grunt#devel
19:01 <@AviMarcus> oh grunt. cool.
19:01 <@isaacs> ben_alman: it installs "latest" by default
19:01 <@AviMarcus> (no, I've not touched it.)
19:01 <@AviMarcus> ooh the boss is here.
19:01 <@ben_alman> isaacs: can one change "latest" ?
19:02 <@ben_alman> i saw that tag
19:02 <@isaacs> ben_alman: if you want to tell the registry to tag it as something other than latest, do `npm publish --tag=prewhatever"
19:02 <@ben_alman> in npm info
19:02 <@ben_alman> ahh
19:02 <@isaacs> ben_alman: also you can do `npm tag herpderp@0.1.0 latest` to set it back
19:02 <@ben_alman> i looked at http://npmjs.org/doc/tag.html but really didn't understand the meaning of "Tag" here
19:02 <@isaacs> ben_alman: it's similar to git tags
19:03 <@ben_alman> it might be nice if npm publish mentioned that by default it creates a tag of "latest"
19:03 <@ben_alman> that can be overridden with --tag
19:03 <@isaacs> ben_alman: patch welcome: docs/cli/publish.md
19:03 <@ben_alman> don't you get paid to work on npm? :P
19:04 <@isaacs> ben_alman: i actually get paid to get other people to work on things. it's pretty meta.
19:04 <@ben_alman> sweet
19:04 <@AviMarcus> nice.
19:04 <@ben_alman> i get paid to beg people to work on my shit
19:04 <@isaacs> ben_alman: yes, begging is a huge part of it :)
19:04 <@ben_alman> but only for the begging
19:04 <@isaacs> the actual coding i do is slacking off.
19:04 <@isaacs> that's just recreational
19:04 <@isaacs> anyway..
19:04 <@AviMarcus> I pay people to get people to give me money. But I only pay them money AFTER they got other people to give me money.
19:05 <@ben_alman> it might be nice for npm to not automatically mark a pre-release version as latest, and to require --tag
19:05 <@ben_alman> to avoid users accidentally using beta quality software
19:05 <@AviMarcus> ben_alman, you'll have to specify how exactly NPM should automatically know if it's pre-release
19:05 <@ben_alman> AviMarcus: i don't have to because isaacs already did here http://npmjs.org/doc/json.html#version
19:06 <@ben_alman> it's super clear
19:06 <@isaacs> ben_alman: meh.  we used to do that, and you had to explicitly tag thigns as "stable"
19:06 <@ben_alman> what about only for pre-release though
19:06 <@ben_alman> i mean, if it says alpha or beta or rc1
19:06 <@ben_alman> should people really be getting that implicitly?
19:06 <@isaacs> ben_alman: in practice, it's really best to just default to "publish means it's published and will be used by default", and it's up to each author to decide their own semantics for their versions
19:07 <@ben_alman> well, no matter, i know how to tag my stuff now
19:07 <@isaacs> ben_alman: what about -a?
19:07 <@ben_alman> -a for what, npm?
19:07 <@isaacs> ben_alman: 1.2.3-a
19:07 <@isaacs> ben_alman: or 1.2.3-b
19:07 <@isaacs> or 1.3.2-10-alpha vs 1.3.2-9-beta
19:07 <@isaacs> it gets very hairy almost immediately when looking at actual use.
19:07 <@ben_alman> you've stated in the docs that those are post-release versions
19:08 <@ben_alman> so they would be latest
19:08 <@isaacs> ben_alman: the ordering is established.
19:08 <@isaacs> ben_alman: but "this means it shoudl be installed by default" is not established at all
19:08 <@AviMarcus> ben_alman, I think you're reading more into his words than he meant.. he's only talking about ordering, not production quality
19:08 <@isaacs> that's much more presumptuous
19:08 <@ben_alman> np
19:08 <@ben_alman> i mean, i know how to tag stuff now
19:08 <@ben_alman> so it's not an issue for me
19:08 <@isaacs> the only sane approach is the simple one, and then an extra step to make it explicit
19:09 <@isaacs> especially, changing it now would be rather hazardous
19:09 <@ben_alman> well, you've probably erred on the side of being more incluseive; eg. allowing all publishes to default to latest, simply because it reduces the number of bug reports
19:09 <@isaacs> bug reports are a good metric, i think :)
19:09 <@ben_alman> but the safer one would be to make all publishes not tag latest
19:09 <@isaacs> if it reduces the bug reports, then it means we're erring on the side of user expectations.
19:10 <@ben_alman> because it requires people to more explicitly publish something
19:10 <@isaacs> safer, sure, but it's not like we're keeping people away from power lines here.
19:10 <@ben_alman> agreed
19:10 <@isaacs> safety is not a huge concern.  the hazard is low, and the fix is easy.
19:10 <@ben_alman> app creators benefit from this
19:10 <@isaacs> the hazard of my sanity going away from explaining the extra step to 10,000 people a day, that is a much bigger concern ;)
19:11 <@ben_alman> library creators are plagued by it
19:11 <@ben_alman> sure fair enough
19:11 <@isaacs> a common practice is to not actually publish those things to npm, or to make the --tag part of a `make publish` step or something
19:12 <@ben_alman> is it common enough practice that it's actually documented anywhere? because i searched for a while today and couldn't find any recommendations about publishing pre-release modules to npm
19:12 <@ben_alman> i had to resort to asking in here
19:12 <@isaacs> ben_alman: the lack of documentation means that people go "Oh, shit, when i publish it becomes the default.  Better not do that till i'm ready"
19:12 <@ben_alman> well at least you're always available for in-person tech support
19:13 <@isaacs> ben_alman: or they ask in here and i or someone else tells them.  now you've graduated from the "asking" club to the "telling" club :)
19:13 <@ben_alman> :D
19:13 <@creationix> ok, so this whole browser-module mess is causing me great pain
19:13 <@creationix> I have a few browser modules I want to use in the browser.  Some of the modules are also node modules
19:13 <@ben_alman> yes, now there's 4 things that i can help people with in here :D
19:13 <@ben_alman> creationix: i just create commonjs modules and tell people to shim them for amd
19:13 <@creationix> some have different implementations depending on if they run in node or the browsers
19:14 <@ben_alman> i have a grunt init template for this
19:14 <@ben_alman> but yeah, ppl have no idea
19:14 <@creationix> and some exist in node, but not in the browser (EventEmitter)
19:14 <@creationix> I don't want to go the browserify route and port the node environment to the browser
19:15 <@creationix> I just want a sane way to do modules in the browser
19:15 <@ben_alman> isaacs: can i --tag at publish time?
19:15 <@ben_alman> like npm publish --tag alpha ?
19:15 <@ben_alman> i'll just try with my herpderp module
19:16 <@isaacs> ben_alman: yes, that's how it works
19:16 <@ben_alman> ah i saw your comment in the scroollback
19:16 <@isaacs> ben_alman: you can also put "publishConfig": { "tag": "alpha" } in package.json
19:16 <@ben_alman> interesting
19:16 <@isaacs> ben_alman: you probably don't want to set --tag in your .npmrc, though
19:16 <@ben_alman> lol no
19:16 <@isaacs> ben_alman: because that'll tell npm to use that tag instead of "latest" when youer' instaling, which you DO NOT WANT
19:17 <@ben_alman> ah yes
19:17 <@isaacs> again, a relic of the days when the default tag was "stable"
19:17 <@isaacs> and i thought people would have multiple different release trains and shit.  no one wants that, though.
19:17 <@ben_alman> it would be nice if i could set a rule that said "if version is pre-release, use this tag. otherwise this tag"
19:17 <@ben_alman> i could obv write a script to do this
19:17 <@ben_alman> OR A GRUNT TASK
19:18 <@ben_alman> eventually, i'll have to write some npm / git wrapper stuff for grunt
19:18 <@ben_alman> but not today
19:19 <@isaacs> ben_alman: i do something like that for npm's `make publish`
19:20 <@isaacs> ben_alman: so you can do `npm install npm@1.0`
19:20 <@isaacs> to get the latest 1.0.x
19:20 <@ben_alman> ah i see the dist-tags
19:20 <@isaacs> i mean, you can do that with npm anyway, since it'll resolve it, but that way the sh installer can fetch it reasonably
19:20 <@ben_alman> great idea
19:20 <@isaacs> of course, what i really ought to do is just make version ranges work on the registry, but never got around to it
19:22 < jaha> anyone worked with node.js and a ajax file browser like CKFinder?
19:23 < jaha> just wanted to see if there was another out there before I roll my own
19:23 <@AviMarcus> ben_alman, if you would update the docs though that would be good..
19:23 <@context> there we go. fixed that
19:23 <@ben_alman> AviMarcus: tbh i'm chruning away on my own stuff
19:23 <@ben_alman> churning too
19:23 <@ben_alman> it's really hard to switch gears
19:26 <@ben_alman> hmmn… "publishConfig": {"tag": "devel"}, didn't work here
19:28 < RLa> node 0.9 nextTick: Handle tick callbacks before any other I/O <- why is that necessary?
19:34 <@ben_alman> isaacs: "publishConfig": {"tag": "devel"}, isn't working here
19:34 <@ben_alman> i see npm info publishConfig tag=devel
19:34 <@ben_alman> in --verbose
19:35 <@isaacs> oh, right... but at that point it's too late, isn't it, because the new abstracted-out agent thingie isn't getting re-set.
19:35 <@isaacs> k, that's a bug.
19:35 <@ben_alman> i have no idea if you're talking to me
19:36 <@isaacs> ben_alman: yes.
19:36 <@isaacs> ben_alman: that is a bug.
19:36 <@ben_alman> gotcha
19:36 <@isaacs> ben_alman: it sets the npm config, but it doesn't set npm.registry.tag
19:37 <@ben_alman> ah gotcha
19:37 <@ben_alman> yeah i was piking through the source
19:37 <@isaacs> ben_alman: or it should set npm.registry.tag to a getter that does npm.config.get('tag')
19:37 <@isaacs> (maybe too magical)
19:37 <@ben_alman> you could just put // ignore magic. it's magical
19:38 <@ben_alman> keeping the comments in-line
19:53 < strk> Im trying to run linux-tick-processor but it does nothing, silently
19:53 < strk> how am I suppoed to run it ?
19:53 < strk> I'm using: /home/src/node/node-0.8.2/deps/v8/tools/linux-tick-processor v8.log
19:54 < strk> which exits with code 126 and prints nothing
19:55 <@context> anyone here tried compiling node on mountain lion yet
19:59 < Nexxy> oh you silly kids and your OSX
20:00 < Hoppertje> greetings
20:02 < drudge> context: yeah, works fine
20:02 < drudge> been doing it for months!
20:10 <@ben_alman> well, here's my npm publish hack for now https://github.com/cowboy/dotfiles/blob/eea5ae8/source/50_devel.sh#L28-39
20:10 <@ben_alman> AviMarcus: what was the thing you wanted me to do? i don't remember
20:17 <@ben_alman> isaacs: bug reported https://github.com/isaacs/npm/issues/2653
20:17 <@isaacs> thaks
20:17 <@ben_alman> np
20:18 <@ben_alman> is there an npm command that tells you where the package.json file that it's found is located?
20:18 <@ben_alman> like, if i run npm from within a subdir
20:20 < fat> isaacs: just sent you an amazing pull request for read-package-json
20:20 < fat> prettttty critical
20:21 < WarheadsSE> 0.8.4 ... the, .. anyways.
20:21 < WarheadsSE> 0.8.4 is building for #archlinux-arm
20:21 < domino14> what is the standard for making sure connections in node.js remain after restarting node.js?
20:22 < domino14> i have a socket.io server taht seems to drop connections once i restart node.js. no matter what i do, i have reconnect set to true, i even built my own ping mechanism that makes the client reconnect if it hasn't gotten a ping in a while
20:22 < lohkey> use a transactional connection queue, something similar to upnode
20:22 < domino14> but i always drop connections
20:22 < lohkey> which reminds me
20:23 < lohkey> SubStack: is upnode usable over shoe? shoe appears to be missing a streaming API, and i'm not exactly sure what that would mean in terms of reconnects
20:24 < domino14> cool, this looks good. i dont even know what a transactional connection queue is so time to do some reading
20:24 < domino14> will this be compatible with socket.io?
20:25 < owen1> i have an http api that can post images to my server. i want to do performance tests, to know the memory and speed of this endpoint. what tools should i look into?
20:25 < lohkey> domino14: no, it's for sockets not web sockets, hence my question about `shoe` compatibility to substack
20:26 < domino14> how would i do this for websocket/socket.io
20:26 < lohkey> domino14: you would have to implement a streaming interface over socket.io
20:26 < domino14> i am not sure what i'm doing wrong. i think my built-in ping would reconnect eventually but it doens't sometimes and it's hard to debug because i don't ahve access too all my client's web browsers. does anyone know if sock.js has automatic reconnection?
20:28 < _Tristan> huh
20:29 <@mscdex> node.js rules!
20:29 < _Tristan> everybody still has op in here
20:29 < _Tristan> I figured somebody would bring in a bot and kick everybody
20:29 <@gkatsev> _Tristan: op plz to get ops, lol
20:29 < _Tristan> op plz
20:30 <@_Tristan> I'm surprised by the lack of chaos
20:30 < domino14> does anyone recommend sock.js over socket.io?
20:30 <@gkatsev> _Tristan: that's cuz the community is freaking awesome
20:30 <@_Tristan> I suppose
20:31 <@_Tristan> then again, writing an auto-kicking irc bot in node.js would take about 5 minutes tops
20:31 <@gkatsev> the ryan_opper code is in a gist somewhere
20:31 <@gkatsev> so, even less
20:31 <@_Tristan> not just that, it's an npm module
20:32 <@gkatsev> is it? heh
20:32 <@alex4nder> _Tristan: ops in #node.js is like gun ownership in switzerland
20:33 <@_Tristan> I think its irc_opper or something
20:33 <@_Tristan> no, it's nodejs-opper
20:36 <@AviMarcus> ben_alman, doc the --tag for publishing to npm
20:39 <@CIA-93> node: isaacs v0.8 * rb0c0111 / (lib/http.js test/simple/test-https-strict.js): https: Use host header as effective servername - http://git.io/2G5efQ
20:42 <@AviMarcus> _Tristan, gkatsev: the opper bot: https://gist.github.com/3146678
20:42 <@AviMarcus> actually both the commented out functions are untested
21:23 < andy77> does anyone know the best way to get the data from node, which is on port 8888, into a php application located at localhost? I am using LAMP for the PHP application
21:24 < andy77> I can view the node data if I go to localhost:8888, but my application is located at just localhost
21:24 < RLa> json?
21:24 < andy77> yes
21:25 < EyePulp> http?
21:25 < andy77> I am trying json, but cant get it to the other server
21:26 < andy77> I can only get it to work on port 8888
21:26 < RLa> hm, from php you could use curl lib to grab response and php's built-in json lib to parse it
21:26 < andy77> I basically need node to run within my php application
21:26 < andy77> or at least send the data to it
21:26 < andy77> oh yea i could try that
21:27 < andy77> i'll see what I can do with curl unless someone has a better idea
21:29 <@chilts> andy77: you could probably try some kind of http proxy which hits your PHP for most things, but your node server for sub-paths or certain paths
21:29 <@chilts> either Nginx or node-http-proxy or even bouncy
21:30 < andy77> im looking at Nginx right now
21:34 < RLa> if you have lamp already, look at mod_proxy, it's quite trivial to use
21:37 < other_guy> creationix… got another esoteric JS thing stumping me...
21:37 < other_guy> Let's say I do something like this...
21:37 < other_guy> MyObject.prototype.namespace = {};
21:37 < other_guy> so that I can...
21:38 < other_guy> MyObject.prototyp.namespace.someMethod = function() {}
21:38 < other_guy> the problem I'm having is that the MyObject.prototype.namespace = {}; is creating a new closure
21:38 <@creationix> other_guy, only functions create closures
21:38 <@creationix> what is the problem you're seeing
21:39 < other_guy> so when all my .namespace.methods() are called "this" points to the "namespace" rather than MyObject's prototype
21:39 <@creationix> right, that's normal "this" behavior
21:39 <@creationix> nothing to do with closures
21:39 < other_guy> I thought this pointed to functional scope
21:39 < other_guy> which was bound by closures
21:39 <@creationix> "this" is best described as "the thing behind the last ."
21:40 <@creationix> foo.bar.baz.function() -> this will be foo.bar.baz
21:40 < other_guy> ah
21:40 <@creationix> also your .namespace object will be shared by all instances of your class
21:40 <@creationix> not sure that's what you want
21:40 < other_guy> Yeah it is
21:41 < other_guy> it's just a way for me to organize the code
21:41 <@creationix> so either call your namespace functions using .call() or .apply() or copy them to the instance in the constructor
21:41 < other_guy> so that all methods that operate on buckets are dangling off the buckets space, rather than naming them things like "getBucket" I can do buckets.get()
21:41 <@creationix> but then, why not put them on the prototype directly
21:42 <@creationix> other_guy, have you seen http://howtonode.org/object-graphs ?
21:42 < other_guy> I want to be able to do… myclient.buckets.get('name');  instead of myclient.getBucket('name')
21:42 <@creationix> in particular the last example
21:42 <@Raynos> is anyone else having npm troubles? ( https://gist.github.com/3178861 )
21:43 <@creationix> other_guy, that will be a lot harder than you think
21:43 <@Raynos> isaacs: any recommendations on why that might suddenly fail
21:43 <@creationix> unless you use closures instead of prototypes
21:43 <@Raynos> I feel like github changed some invariant and is now just syaing no
21:43 <@chilts> other_guy: or if you are doing something with S3, use AwsSum : https://github.com/appsattic/node-awssum/
21:43 <@chilts> or write your access stuff on top of it :)
21:44 < other_guy> chilts, I'm writing a Riak client
21:44 <@chilts> heh, fair enough :)
21:44 <@creationix> other_guy, the reason prototypes are so fast is because they share so much
21:44  * chilts backs out :)
21:44 < other_guy> creationix, it's proving to be a massive pain in the ass unless I push either the whole mess into the constructor, or I push the call/apply concerns out onto the user… which is horrible.
21:44 <@isaacs> Raynos: that's a github issue, not an npm issue
21:44 <@Raynos> isaacs: I thought as much
21:44 <@Raynos> have you seen that before / know of a quick fix ?
21:44 <@creationix> other_guy, why not use closures then?
21:44 <@isaacs> Raynos: un-break github?
21:44 <@isaacs> i dunno.
21:44 <@creationix> (not that it doesn't have it's own pros and cons)
21:45 <@isaacs> use a dependency that isn't a git repo?
21:45 <@mscdex> other_guy: i did something similar for node-imap and just used a closure
21:45 <@Raynos> :(
21:45 < other_guy> you mean something like...
21:45 <@Raynos> I feel that there might be more detailed error messages coming from that git clone
21:45 <@Raynos> does npm swallow anything?
21:45 <@creationix> closure based class = function makeObject(params) { function amethod() {}; function getbucket() {}; return {method:amethod, bucket:{get:getbucket}}; }
21:46 <@creationix> you can return whatever structure you want, but the functions aren't shared between instances anymore
21:46 < other_guy> Yeah that's the "shove it into the constructor" solution
21:47 <@creationix> right, that's using closures to hold state
21:47 <@creationix> no need for "this"
21:47 <@mscdex> it doesn't have to necessarily be in the constructor
21:47 <@creationix> "this" is a tool for using a shared function between multiple instances
21:47 <@creationix> and you can mix and match styles
21:47 <@mscdex> you could write a getter on the prototype that returns the object too
21:47 <@creationix> but understand how js really works is critical to being effective at this
21:47 < skunkape> i'm trying to run node-inspector on windows 7, it runs, and with netstat I can see 0.0.0.0:8080 listening but when I go to the link in chrome, it gives me error 108 err_address_invalid
21:48 <@creationix> or use magic getters
21:48 < other_guy> getters and setters are crazy slow
21:48 < skunkape> anyone using node-inspector on windows know how to resolve this?
21:48 <@creationix> but what would the getter return? bound functions, functions with closures?
21:48 <@mscdex> closures
21:48 <@creationix> right, so basically closures are required unless you want to mess with "this" semantics
21:49 < other_guy> I could use a closure just around the namespaced portion I suppose
21:49 <@mscdex> right, i'm just saying it doesn't _have_ to be done in the constructor
21:49 <@creationix> the getter could lazilly create the closure and cache it in the object somewhere instead of making it in the constructor
21:49 <@creationix> but that's just an optimization
21:50 < other_guy> MyClass.prototype.namespace = function() { function one() {};  function two() {}; return {one: one, two, two}};
21:50 <@creationix> other_guy, you could use prototypes for the real functions (getBucket, etc..)
21:51 <@creationix> other_guy, that works too, you'll probably have (var self = this) somewhere in that namespace function so the one() and two() closures can get as "this")
21:51 < other_guy> yeah I use var _this = this;
21:51 <@creationix> var namespace = instance.namespace(); namespace.one()
21:52 < ryanrolds_w> Stackoverflow really needs a Node.cs tag.
21:52 < daslicht> :)
21:53 < other_guy> creationix, if I do the buckets.get points to getBucket()
21:54 < other_guy> getBucket still needs to get a concept of "this"
21:55 < other_guy> and it's already borked inside buckets.get
21:55 <@creationix> right, you'll need to create a closure with a new function or create a bound version of getBucket
21:55 <@creationix> either way you'll need a copy of the function per instance
21:56 < other_guy> what about this… in the constructor...
21:56 <@creationix> other_guy, do you need the namespace to be it's own object
21:56 <@creationix> or just use instance.getBucket()
21:56 < other_guy> No, I just need it not to bitch when I try to add properties to it
21:57 <@creationix> other_guy, ok, so what are you trying to accomplish?  What is your ideal API?
21:57 < other_guy> client.buckets.some_op
21:58 <@creationix> and where is the some_op function declared?
21:58 <@creationix> does it need "this" to be client?
21:58 < other_guy> yeah it has to be this client
21:59 < other_guy> because an app could use multiple clients to talk to multiple clusters, etc.
21:59 < other_guy> so the client can't be a de facto singleton
22:01 <@creationix> other_guy, and why client.buckets.some_op vs client.buckets_some_op ?
22:02 < other_guy> because I'd like to have bucket instances contain a .objects namespace too, and it makes for a cleaner API
22:02 < fat> isaacs could you take a look at this pull if you get a chance? https://github.com/isaacs/read-package-json/pull/6/files
22:02 < fat> would be awesome for bower
22:02 < other_guy> I'm fine with a certain amount of annoyance and complexity on my end to make the interface better for consumers
22:03 < other_guy> the problem is I build everything around prototypal patterns
22:03 < other_guy> so I don't do anything with constructor closures for defining members except for some properties that the ctor needs to initialize itself.
22:03 < other_guy> So I'd have these two weird classes that deviate completely from that design pattern
22:04 < other_guy> but it's looking somewhat like I may not have a choice
22:04 <@creationix> other_guy, the problem is you can't do prototype based with the namespace thing
22:04 < ryanrolds_w> Love answering SO questions that used CS with JS.
22:04 <@creationix> because "this" will be the shared namespace on the shared prototype 
22:05 < other_guy> yeah, I'm seeing that.
22:05 <@creationix> other_guy, I think the most effecient method would be to Object.create the namespace in the constructor
22:05 < other_guy> I'm attempting a sort of hack in the ctor that I might be able to live with
22:05 <@creationix> store a reference to the actual instance in the copy
22:05 <@creationix> and use this.this in your methods
22:06 < dominictarr> creationix, hey! I've been looking through you smith lib.
22:06 <@creationix> function Class() { this.namespace = Object.create(Class.prototype.namespace); this.namespace.this = this; }
22:06 <@creationix> other_guy, something like that?
22:06 <@creationix> dominictarr, cool, what do you think?
22:07 < other_guy> creationix, holy hell that's nutty looking :-)
22:07 < other_guy> I'm going to have to pick that apart and sort out what the hell it's doing
22:07 < other_guy> :-)
22:07 <@creationix> other_guy, that doesn't need any closures and you only need to create an object per-namespace per instance
22:07 < dominictarr> well, it's good to see another rpc module after dnode.
22:07 <@creationix> dominictarr, it was inspired by dnode, but had slightly different goals
22:08 <@creationix> and I rewrote it like 5 times
22:08 < dominictarr> oh yeah, dnode is great. but it's too greate.
22:08 < dominictarr> it's good to be constrained, sometime.s
22:08 < other_guy> creationix, and then all the methods in that namepace just have to reference this.this when they need the parent scope?
22:08 < dominictarr> "'s" I mean
22:08 <@creationix> and dnode requires --harmony to not leak memory
22:08 <@creationix> other_guy, right
22:09 <@creationix> since they have the namespace clone as their "this"
22:09 < other_guy> jesus
22:09 < other_guy> :-)
22:09 < dominictarr> also, it traverses every thing it passes, 
22:09 < other_guy> this is reminding me of my old ActionScript 2 days
22:09 <@creationix> dominictarr, "traverses"?
22:09 < other_guy> Going back to my Erlang code is going to feel like vacation
22:10 < dominictarr> yeah, dnode traverses every property of every property or the arguments object to check for functions.
22:10 < dominictarr> <recursively>
22:11 < dominictarr> it wraps every function in a remote callback
22:11 < dominictarr> which could encourage overly tight coupling, you could argue.
22:16 <@CIA-93> libuv: Shuhei Tanuma v0.8 * r22f004d / src/unix/thread.c : unix: don't abort() when trylock functions return EBUSY - http://git.io/Ldc9Gg
22:18 < other_guy> creationix… found a happy medium
22:19 < strk> will the closure method help with profiling ?
22:19 < other_guy> in the constructor… bound functions like so...
22:19 < other_guy> var HTTPBackend = function(host, port, resources) {
22:19 < other_guy>     this.buckets = {};
22:19 < other_guy>     this.buckets.get = HTTPBackend.prototype.getBucket.bind(this);
22:19 < other_guy> };
22:19  * strk is trying to understand the v8 profiler output, which doesn't look extremely useful at first glance
22:20 < strk> maybe with non-anonymous functions it'd be more useful
22:21 <@Bonuspunkt> http://www.lowbird.com/data/images/2012/07/fuck9gag-1343192532.jpg
22:21 < owen1> i try to post my form to internal api, where my node service is - <form action="127.0.0.1:3001/upload_group" enctype="multipart/form-data" method="post"> <input class="input-file" type="file"> <input type="submit"> </form>
22:21 < owen1> what am i doing wrong?
22:22 <@AviMarcus> owen1, how do you know you did something wrong?
22:23 <@AviMarcus> are you console.log'ing when the script gets stuff? it's indeed listening on that port?
22:23 < John> hey all
22:23 < John> Quick question if anyones about:
22:23 < John> I have an idea for something that i want to integrate into my site
22:23 < owen1> AviMarcus: i don't see anything on my node service.
22:24 <@AviMarcus> owen1, you have it logging stuff? by default the console will only show errors...
22:24 < owen1> AviMarcus: yeah, got console.log on each requst
22:24 < John> To make use of node, do i have to redesign everything for the server?
22:25 < owen1> request
22:25 < owen1> i do console.log(req) as my first line of the function
22:25 < owen1> AviMarcus: btw, i am not running nginx on my dev box.
22:25 < owen1> maybe i should?
22:25 <@AviMarcus> john, I think that's the wrong question.
22:26 <@AviMarcus> owen1, that is a different use case, but this should be working for you. stupid question, the port is right?
22:26 <@mscdex> owen1: got a gist of your code anywhere?
22:36 < timeturner> whoa what happened to github
22:37 < timeturner> nm
22:37 < owen1> AviMarcus: i'll make sure the port is correct.
22:38 < owen1> mscdex: i'll paste a code sample after i'll fight with it (:
22:38 < John> AviMarcus:  hehe, perhaps :P
22:39 < John> Okay, erm, maybe I should ask some more basic questions -_-;
22:39 < John> Can node.js be used to connect two users together directly?
22:39 < John> Without going through my server?
22:39 <@AviMarcus> hmm that's somewhat unusual. Mostly because of NAT.
22:39 < John> Ah, good point
22:39 <@AviMarcus> node.js is server side javascript, for starters, if you didn't know...
22:40 < John> Yeah yeah, i got that - and that's kinda great
22:40 < John> I mean, my sites are pretty much all created in JS these days - client side
22:40 < John> Would be nicer if they could be made server-side in JS too
22:41 < John> Instead of PHP, which is okay but meh
22:41 <@AviMarcus> the major difference you'll see is.. js is async
22:41 < John> But my idea was to do something a bit like Seti@Home, but with node
22:41 <@AviMarcus> so you can't write a page straight in php like you currently have
22:41 <@AviMarcus> well, if there's anything with callbacks that takes time. which there usually is.
22:42 < John> Yeah, it's a different way of coding for sure
22:42 <@AviMarcus> I've got no clue what about seti@home you are interested in
22:43 < John> Well, distributed number-crunching
22:43 <@AviMarcus> OK. so the clients can contact your server for stuff. but not sure you'd want to run that from their browser.
22:43 < John> So, making something in JS that is processor-intensive, and then people can just browse to the site to start crunching away
22:43 <@AviMarcus> oh. hmm.
22:43 <@AviMarcus> do you know about web workers?
22:43 <@AviMarcus> w/o web workers it could be messy.
22:43 < timeturner> wow, I'm surprised you could get the nick 'John'
22:44 < John> Kindof - it's an additional process that (i think Chrome) can use so the page doesn't lock up?
22:44 <@AviMarcus> something like that. I don't really know much.
22:44 < John> timeturner:  is your name John?
22:44 <@AviMarcus> so if you do that on the client side, then.. sure.
22:44 < timeturner> no I mean I figured that it would be pretty difficult to get that as your nick
22:44 < timeturner> since the name is so popular
22:44 < timeturner> or widespread
22:45 < timeturner> that's a compliment ;)
22:45 < timeturner> about the nick
22:45 < blazes816> nick?  i thought he was john?
22:45 < John> timeturner:  Ah, well there's two tricks to getting a common name - 1) be on Freenode for years, 2) go ask the people in #Freenode when the last time 'Bill' signed in
22:45 < John> If he hasn't signed in for a year+, you can probably ask them to release the name
22:45 < timeturner> wow
22:46 < timeturner> that's cool!
22:46 <@AviMarcus> unfortunately Avi is still signed in. But idle for 4 days.
22:46 <@AviMarcus> johnsmith is open, though.
22:48 < John> Ah, Avi is probably still using his then :(
22:48 < John> I think it's a good system - I mean, if Freenode is going to be around for a few years, it's only natural that it's users will start dieing off :P
22:49 < John> Taking their nicks to the grave, heheh
23:04 < _Tristan1> hello, #node.js
23:04 < _Tristan1> how readline prompt without dumb?
23:07 < jrajav> Sounds like a personal problem
23:07 < jrajav> j/k :P
23:07 < jrajav> Could you clarify?
23:09 < _Tristan1> do a prompt, stdout some data, prompt is left in place and badness ensues
23:09 < _Tristan1> I'm making something like an irc client
23:10 < jrajav> readline isn't designed for that
23:11 < jrajav> You'll probably have to do it manually
23:11 < jrajav> I've tried the same thing, more or less, by outputting something in the 'line' callback
23:11 < jrajav> (That doesn't work either)
23:22 < _Tristan1> jrajav: when you say "manually", you mean "piss on the keyboard", right?
23:24 < jrajav> Finally, someone who understands me!
23:24 < jrajav> Yeah, no
23:25 < andresj> How do I use node --prof ?
23:30 < bnoordhuis> andresj: exactly like that but you need a tool to make the log file human readable
23:31 < bnoordhuis> andresj: check out nprof from node-profiler
23:31 < ccowan> Anyone have a Korean monitor (like the one's mentioned on HN)?
23:31 < andresj> bnoordhuis: i'll check it out, thanks!
23:37 < andresj> bnoordhuis: that was very useful :)
23:41 < bnoordhuis> andresj: cool :)
23:41 < DTrejo> op plz
23:41 <@DTrejo> ryan_opper
23:48 < timeturner> looks like the majority of people op'd themselves
23:54 < jrajav> I'm a rebel
23:58 < Gregor> ops plz
23:58 <@Gregor> bans plz
23:58 <@Gregor> *snaps*
23:59 <@Gregor> Still not implemented.
--- Log closed Thu Jul 26 00:00:24 2012
