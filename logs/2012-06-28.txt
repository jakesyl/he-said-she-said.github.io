--- Log opened Thu Jun 28 00:00:46 2012
00:13 < Murvin> bnoordhuis:  nail down to mongoose
00:13 < bnoordhuis> Murvin: okay. you should file a bug report
00:14 < Murvin> ya.. i will do more testing. and nail down even more which function causing that.  thanks. :)
00:15 < Murvin> mongoose...  last time when node have an upgrade, mongoose had problems for a week as well.  
00:20 < myndzi> feedback re: threads-a-gogo module?
00:21 < Murvin> bnoordhuis:  Oh.. it happen when setting replicaSet with Mongo...
00:22 < TehShrike> Anyone here write command-line node scripts that take in JSON arguments?
00:22 < TehShrike> ...does anyone think that would be a bad idea?
00:26 < myndzi> it wouldn't be familiar syntax in most cases
00:26 < myndzi> but other than that, how you process command line args is pretty much a matter of preference
00:26 < myndzi> there are modules for processing command line switches and stuff
00:26 < TehShrike> Perhaps that would be more sensible
00:26 < TehShrike> Can you recommend a good one?
00:27 < mattrobenolt> TehShrike: It depends on what the CLI ends up looking like.
00:27 < mattrobenolt> I've done stuff where I piped in JSON, but not actually passed through as "arguments".
00:27 < mattrobenolt> Like:  script {"debug": true}
00:27 < mattrobenolt> Never like that.
00:27 < TehShrike> I thought that it might seem reasonable to call an app like node myapp.js { optional: "some value", required: "better put something here! }
00:27 < mattrobenolt> I don't see the point of doing that, honestly.
00:28 < TehShrike> Yeah, there probably isn't a good point.
00:28 < mattrobenolt> What do you see as the benefit?
00:28 < TehShrike> I was thinking in JSON at the time :-P
00:28 < mattrobenolt> To me, it's just more I have to type, and it's less unixy.
00:28 < mattrobenolt> Your CLI should be as clean and simple as possible.
00:28 < mattrobenolt> Think.. flags, haha
00:29 < mattrobenolt> I'd much rather do:  myapp -o "some value" -r
00:29 < mattrobenolt> Or whatever.
00:29 < mattrobenolt> If you want json for some complex stuff, have it read in from a file instead.
00:30 < mattrobenolt> script -i config.json
00:30 < mattrobenolt> Or like:  cat config.json | script -i -
00:30 < mattrobenolt> Something familiar.
00:30 < bradleymeck> cat x.json | TehShrikeScript
00:31 < TehShrike> TehShrikeScript
00:31 < TehShrike> Now there's a syntax the world doesn't need
00:31 < mattrobenolt> TehShrike: If you're considering making my CLI arguments as JSON, I'd have to agree. ;)
00:31 < TehShrike> heehee
00:32 < mattrobenolt> I think you're more looking for configuration files instead.
00:32 < TehShrike> So any recommendations for parsers, or do I have to read through all the results for "arguments" on npm?
00:32 < mattrobenolt> A configuration file that can be loaded in at runtime.
00:32 < bradleymeck> nconf
00:32 < TehShrike> This app ain't going to have more than a few optional settings anyway
00:32 < bradleymeck> require('nconf').file('x.json').argv().env()
00:33 < mattrobenolt> bradleymeck: I like that.
00:34 < TehShrike> Huh.  That looks like quite the full-featured configuration thingy.
00:35 < brainss> how do i get the keypress info a on tty? the pre v0.8 'keypress' event doesn't seem to fire
00:35 < bradleymeck> brainss setRaw and listen to 'data' events
00:35 < bradleymeck> keypress was specific to the repl module and was leaking, it wasnt meant to be public
00:36 < brainss> bradleymeck: yeah, but is there an easier way to see if shift or control was pressed too
00:36 < CIA-75> node: Shigeki Ohtsu master * r6d98524 / (41 files in 4 dirs): tools: update closure_linter to the latest(2.3.5) - http://git.io/GtHolg
00:36 < CIA-75> node: Shigeki Ohtsu master * r60ff789 / LICENSE : LICENSE: update Closure Linter to Apache 2.0 - http://git.io/VzQTwg
00:37 < bradleymeck> brainss: not really
00:38 < brainss> :(((((
00:38 < coderarity> tjholowaychuk, how do you do pressure sensitivity in this screencast? http://www.screenr.com/sXCs
00:38 < pawn> node-mysql question: db.escape, does it wrap quotes around strings?
00:38 < brainss> thanks for your help bradleymeck 
00:38 < tjholowaychuk> coderarity with the wacom api
00:38 < pawn> s = "foo"; db.escape(s) == "'foo'"; ?
00:38 < tjholowaychuk> it gives you tilt and pressure
00:39 < coderarity> in the web browser
00:39 < coderarity> ?
00:39 < tjholowaychuk> yup
00:39 < TehShrike> Fair warning SubStack
00:39 < coderarity> oh with a web plugin
00:39 < coderarity> that's cool
00:39 < TehShrike> If I ever see you I'm going to hug you
00:40 < coderarity> i think i'm gonna actually use my wacom tablet for something now lol
00:41 < mtyson> anyone using tower.js?
00:42 < tjholowaychuk> coderarity hahaha
00:42 < tjholowaychuk> i love mine
00:47 < bradleymeck> anyone have any thoughts on a state-machine for consuming binary protocols? or know of an existing one that can accept partial content?
00:47 < bradleymeck> i cant really do straight DSL as a ton of the time i need to run functions
00:50 <@isaacs> bradleymeck: i use a state machine for node-tar
00:51 < bradleymeck> isaacs: do you use a module to generate it or just wrote it by hand?
00:51 <@isaacs> bradleymeck: well, actually, with node-tar i kinda cheated, since tar comes in these nice 256-byte blocks
00:51 <@isaacs> er, 512 byte
00:51 < TehShrike> mmmmmmmm and optimist even handles --option="stuff in quotes"
00:52 < tjholowaychuk> TehShrike quotes are stripped by the shell
00:52 < TehShrike> Not in Windows
00:52 < tjholowaychuk> ah
00:52 < tjholowaychuk> lame windows
00:52 <@isaacs> bradleymeck: i use an interruptible one-byte parser in sax-js
00:52 < TehShrike> tjholowaychuk: :-P
00:52 < bradleymeck> isaacs i guess its time for me to write a state-machine generator for this...
00:53 <@isaacs> bradleymeck: while(c=content.charAt(i++)) { switch(state) { ... }}
00:53 < bradleymeck> thanks for the info
00:53 < TehShrike> What's the *nix way to handle spaces in argument values?
00:53 < tjholowaychuk> quoting
00:53 < TehShrike> Single or double?
00:53 < tjholowaychuk> ./foo "bar baz" raz
00:53 < tjholowaychuk> whichever
00:53 < bradleymeck> --option 'x y' --or "$INTERPOLATION"
00:53 < TehShrike> tjholowaychuk: how is that different?
00:53 < bradleymeck> single if you want that to be exact(ish)
00:54 < TehShrike> You said quotes are stripped by the shell?
00:54 < tjholowaychuk> TehShrike if you pass "foo bar" on the command-line you wont get quotes in your program
00:54 < tjholowaychuk> argv will be void of those quotes
00:54 < TehShrike> Oh, right
00:54 < TehShrike> Yes, that's normal in Windows too
00:54 < TehShrike> I misunderstood you.
00:55 < TehShrike> I was just celebrating that the optimist module handle that as you would expect.
00:55 < tjholowaychuk> you can't not support that
00:55 < tjholowaychuk> haha
00:56 < bradleymeck> isaacs: you ever see 'ld: fatal: file /opt/local/lib/libgif.so: wrong ELF class: ELFCLASS64' on smartos when using --dest-cpu=x64 and node-waf
00:57 < keverw> Hey. Is it possible to set the terminal background color in Node.js on the Mac? I know how to color lines, but green on white dosn't look that good. So I want my app to change the termianl to black while my app runs.
00:58 < bradleymeck> its rude to change terminal background, but possible if you want to go into raw mode and just repaint it entirely
00:58 < keverw> Maybe rude if I gave the app away, but only going to be within the company. 
00:59 < MrV> when I console.log(req.params) using express for a route that is /getMaps/:map/:z:/:x/:y I am getting [ map: 'my_map', z: '5', x: '2', y: '4' ]
00:59 < MrV> but when I console.log(req.params[0]) I get undefined
00:59 < keverw> but hmm... I wonder if it would be possible to detect the current color and adjust...
00:59 < tjholowaychuk> MrV [n] is just for anonymous captures
00:59 < tjholowaychuk> "*" etc
01:00 < tjholowaychuk> or if you used a regexp
01:00 < timoxley> keverw changing terminal default colors not possible, but you could simply format all of your output to be colorised
01:00 < timoxley> keverw I mean, maybe it is using some commands or some applescript but it sounds like a bad idea
01:01 < MrV> I see, so what is the best option for accessing a single element from the params? req.params.map works fine, but I would like to have more generic access to elements
01:01 < keverw> yeah... Maybe theres a better shade of green... that shows up better on white and black.
01:01 < tjholowaychuk> MrV you could do a for (var key in ... i suppose
01:02 <@isaacs> bradleymeck: looks pretty gnarly
01:02 <@isaacs> bradleymeck: mailing list or issue, plz :)
01:02 < bradleymeck> ill try and fix it first, then post
01:03 < MrV> tjholowaychuk makes sense, you seem hesitant to suggest that, but I will give it a go
01:03 < tarikozket> hi guys
01:03 < tjholowaychuk> MrV I could easily add some other prop that contains them at all times if there's a compelling reason for having that
01:03 < tjholowaychuk> but I dont want to break backwards compat with req.params[n]
01:03 < tarikozket> i joined and asked to socket.io but nobody answered.
01:04 < tarikozket> i need this information
01:04 < tarikozket> if i use room feature with one socket connection
01:04 < tarikozket> can room2 people listen what is speaking on room1?
01:04 < MrV> tjholowaychuk gotcha, thanks for the help!
01:04 < tjholowaychuk> MrV np! jump in #express if you have any other questions
01:05 < MrV> tjholowaychuk will do
01:06 < tarikozket> i joined and asked to socket.io but nobody answered. i need this information. if i use room feature with one socket connection can room2 people listen what is speaking on room1?
01:06 < tarikozket>  i joined and asked to socket.io but nobody answered. i need this information. if i use room feature with one socket connection can room2 people listen what is speaking on room1?
01:06 < tarikozket>  i joined and asked to socket.io but nobody answered. i need this information. if i use room feature with one socket connection can room2 people listen what is speaking on room1?
01:06 < tarikozket>  i joined and asked to socket.io but nobody answered. i need this information. if i use room feature with one socket connection can room2 people listen what is speaking on room1?
01:06 < TehShrike> :-|
01:06 < TehShrike> To be perfectly honest, I've only eaten spam once in my life
01:06 < TehShrike> Didn't care much for it
01:06 < Lorentz> spam is love
01:06 < creationix> wow, freenode bot kicked 'em
01:06 < TehShrike> I've heard that it can make an enjoyable meal when fried, but I've never been motivated to try it
01:07 < creationix> fried spam is great in a sandwich
01:07 < creationix> probably not good for you though
01:07 < justinfr> oh d'pain switching from ev to uv :/
01:07 < bradleymeck> fried anything is not good for you?
01:07 < creationix> fried with mayo and big fat tomatoes, mmmm.
01:07 < justinfr> spam lite?
01:07 < TehShrike> Man, now I'm getting hungry
01:07 < creationix> bradleymeck: what about bacon?
01:08 < TehShrike> Diet spam!
01:08 < Lorentz> I like how spam comes in original, salt reduced, and fat reduced
01:08 < Lorentz> but not salt and fat reduced
01:08 < creationix> diet spam, now that nasty
01:08 < TehShrike> Spam: spam reduced
01:08 < Andrew__> i think its over guys
01:08 < TehShrike> Sugar-free spam?
01:08 < creationix> paren-free javascript
01:09 < TehShrike> 8-|
01:09 < bradleymeck> is there a way to force nodewaf to think it is on a 64bit machine and --dest-cpu=x64?
01:09 < creationix> I actually like the paren-free proposal
01:09 < justinfr> +1 paren-free
01:09 < creationix> though today I was testing the luvit repl on an android tablet
01:09 < creationix> I was grateful that lua doesn't use curly braces like JS does
01:10 < creationix> curly braces are on a 3rd level keyboard
01:11 < justinfr> creationix have you let node-leveldb go out to pasture?
01:12 < creationix> justinfr: that depends on what you mean
01:12 < creationix> I don't work on it anymore
01:12 < creationix> but others maintain pretty active forks
01:12 < justinfr> ah ok, i'll check the forks
01:18 < CIA-75> node: Shigeki Ohtsu master * re7e34dd / test/simple/test-dgram-broadcast-multi-process.js : test: fix test-dgram-broadcast-multi-process - http://git.io/xbXaHw
01:21 < mtyson> on ubuntu, after installing modules, they don't seem to be available
01:21 < mtyson> although the install succeeds
01:21 < mtyson> am I missing something?
01:24 < pawn> node-mysql: if an array is used for a parameter for a prepared statement, what does the node-mysql module do?
01:28 < myndzi> iirc it just regex replaces
01:28 < myndzi> but didn't node-mysql just release a 2.0 or something? dunno about that one
01:53 < CIA-75> node: Ben Noordhuis v0.8 * rbe3afd0 / doc/api/fs.markdown : doc: remove references to deprecated fs api - http://git.io/1n196w
01:53 < CIA-75> node: Ben Noordhuis v0.8 * r6531f18 / lib/util.js : util: speed up formatting of large arrays/objects - http://git.io/gjC2PQ
02:16 < CIA-75> node: Ben Noordhuis master * r2d0011f / (42 files in 5 dirs): Revert "tools: update closure_linter to the latest(2.3.5)" - http://git.io/wafhbA
02:28 < AAA_awright> Where's marcello3d when you need him
02:47 < CIA-75> libuv: Bert Belder reviewme * rd3230bc / (src/win/error.c src/win/fs.c): windows: don't inhibit reparse behavior when non-symlink is encountered - http://git.io/I0OIdA
02:48 < chrisdickinson> SUBSTACK: is ther a way to make a module dependency optional in browserify?
02:48 < chrisdickinson> like, "use jquery if it's available, but if not, just use native methods"?
03:16 < seanschade> o/
03:21 < celestial> bjb
03:21 < bradleymeck> anyone know of a way to force node-waf to think it is on a 64 bit machine (-m64 flag)
03:22 < celestial> someone from Latin America????
03:30 < celestial> alguien me puede decir como instalar node.js en mi servidor remoto...?
04:08 < myndzi> console.log(util.inspect(self.process.send));
04:08 < myndzi> self.process.send('message', { data: foo });
04:08 < myndzi> these two give me:
04:08 < myndzi> [Function]
04:08 < myndzi> TypeError: Cannot read property 'send' of undefined
04:08 < myndzi> how is this possible? ;]
04:08 < myndzi> err ;\
04:11 < myndzi> nm. weird error message but it wasn't talking about what it seemed to be talking about
05:41 < Weems> how do I tell node to load to my remote server address?
05:57 <@maxogden> wat
06:00 < Weems> run my nodejs setup on my domain
06:02 <@maxogden> point DNS to it and run your node thing on port 80
06:02 < Weems> which dns :s 
06:02  * Weems is lost :(
06:03 <@maxogden> say you have pizza.com
06:03 <@maxogden> login your pizza.com dns and point it to the ip address where your node point javascript codez are runnin
06:03 < Weems> oh
06:13 < bob_the_bob> using cluster, the only message that is ever exchanged between my master and workers is NODE_CLUSTER_/_queryEcho :-/
06:22 < Weems> maxogden: it wants a dns name server?
06:33 < CIA-93> node: isaacs v0.8 * r37bdd36 / tools/blog/generate.js : blog: Show 0.8.0 even after 0.8.1 ships - http://git.io/xk7hLQ
06:44 < medice> mm.. mind if someone explains to me what browsers use to determine how to interpret text/coffeescript files?
06:51 < cha0s> medice, you either preprocess it on the server-side, or http://coffeescript.org/#scripts
06:59 < medice> actually i was wondering how that coffeescript.js did it, but now that i pretty printed the source i notice it just iterates over the elements of the type from the javascript on load
07:10 < yawnt> mh
07:10 < yawnt> mocha -r should test/
07:10 < yawnt> "TypeError: cannot call method equal of undefined"
07:10 < yawnt> any ideas?
07:12 < ljharb> you're calling foo.equal() and foo is undefined.
07:13 < yawnt> ljharb: i know, i mean why.. i'm including should
07:13 < ljharb> i can't see your code so i don't know what you mean.
07:14 < gkatsev> ljharb: npm install psychic-mode :P
07:14 < gkatsev> that's what I use.
07:16 < yawnt> lololol
07:16 < yawnt> it was a damn typo
07:16 < yawnt> can't stop laughing
07:17 < yawnt> i think i lost like two hours on this
07:18 < ljharb> thats what jslint is for
07:23 < rageous> I need some help exporting some functions from a module... It's sort of working, but I can't seem to call functions that I thought I exported?
07:23 < rageous> http://ideone.com/L7TAe
07:24 < Glenjamin> rageous: can't see anything obvious there, what error do you get?
07:24 < Glenjamin> ooooh
07:24 < Glenjamin> i see it
07:25 < rageous> Glenjamin: The console log at the top of the dbinterface prints fine, but I can't actually call that function?
07:25 < rageous> Really?
07:25 < Glenjamin> when you call the function, you get a null return value?
07:25 < rageous> "users function" never finds its way to the console.
07:26 < rageous> Rather, "users function called"
07:26 < rageous> So, that leads me to believe that it isn't being called at all?
07:26 < Glenjamin> you're passing a function reference to locals
07:26 < Glenjamin> unless something in the render step calls it, it wont work
07:26 < ljharb> rageous: is module.exports already an object?
07:26 < Glenjamin> you also can't just return a value from an async function
07:26 < Glenjamin> gimme a min, i'll tidy it up
07:26 < ljharb> but yes, you're returning an object with a 'users' key that's a function, so you'd have to call it
07:27 < ljharb> rageous: also, don't use "new Array();". use "[]"
07:27 < rageous> I'm terrible at this.
07:27 < rageous> Thanks, fellas.
07:32 < poolshark> hi all.i made the mistake of installing npm while in my projects folder (running kubuntu). is there any way to safely move the node_modules folder?
07:32 < Glenjamin> rageous: not tested this, but try this: http://ideone.com/UNiaS
07:32 < Glenjamin> poolshark: the node_modules folder should be self-contained
07:33 < poolshark> Glenjamin: so if i move it node will still find the modules? cool
07:33 < poolshark> thanks
07:33 < rageous> Glenjamin: Wow. That's much cleaner. Let me see if this works.
07:33 < Glenjamin> node_modules are looked up locally, there isn't a global location that require() searches
07:33 < poolshark> gotcha
07:33 < poolshark> thanks
07:34 < [AD]Turbo> hi there
07:35 < rageous> Glenjamin: Your bit works. I need to fix something else to make it fully functional. Thanks very much!
07:35 < Glenjamin> no probs, it can be a bit fiddly to get your head around async at first
07:50 < Glenjamin> does anyone know if there's an IRC channel for mongoose?
07:52 < dz0ny> sure #mongoosejs
07:56 < rageous> How... wha... How does this magic know that 'user' is a single element and 'users' refers to the entire array?
07:56  * rageous dies
08:00 < rageous> Thanks again for your help Glenjamin. I'm well on my way now that this hurdle is gone.
08:00 < rageous> Good night.
08:03 < Naeblis> I'm having some trouble in this code: http://ideone.com/utSqc
08:03 < Naeblis> lines 108-111, most likely
08:05 < AAA_awright> Sometimes this Node.js mailing list... ugh... *headdesk*
08:05 < AAA_awright> Object.prototype.hasOwnProperty.call(process.env, "THE_VARIABLE_NAME")
08:05 < AAA_awright> It's not that hard
08:06 < Naeblis> I get a TypeError: Cannot read property 'length' of null exception
08:10 < strk> any npm way to install node.js itself ?
08:13 < firedfox> strk: npm is based on node.js, so i don't think there's any.
08:15 < strk> ok, thanks
08:40 < olegp> if there's anyone from Helsinki here, you should check this out tonight: http://lanyrd.com/2012/helsinkijs-june/
08:41 < medice> there's nothing similar to node's vm in browser javascript?
08:41 < SUBSTACK> https://github.com/substack/vm-browserify
08:42 < strk> and, how to install "npm" after upgrading node ? [ Error: npm doesn't work with node v0.8.0 - Required: node@0.4 || 0.5 || 0.6 ]
08:42 < medice> SUBSTACK: neat
08:42 < SUBSTACK> medice: if you require('vm') in browserify it will just work
08:42 < medice> well, i'm currently doing non-node thing
08:43 < SUBSTACK> browserify is for non node
08:43 < SUBSTACK> to make it more nodely
08:44 < strk> found: http://npmjs.org/install.sh
09:10 < strk> what are the deploy options for node modules beside "global" and under node_modules ?
09:10 < strk> can I have a custom "global" ?
09:10 < eldios> ?_?
09:10 < strk> for all the modules of a specific project, to avoid polluting the global but still share in-project modules
09:10 < eldios> how so?
09:11 < strk> example: A requires B and C, B requires C
09:11 < eldios> oooh
09:11 < eldios> I see
09:11 < strk> don't want to get C two times
09:11 < eldios> using symlinks could be a solution
09:11 < strk> but don't want it global
09:11 < RLa> nested node_modules!
09:11 < strk> yeah, I'm using symlinks now
09:11 < strk> but it's a bit painful, especially because 'npm install' overrides them
09:11 < eldios> lol
09:14 < sabermonk> hi, when using child.exec ( <executable>) how to pass a an arg if the <execuable> requires an option ( yes/no ) to continue?
09:14 < RLa> arg or stdin?
09:15 < strk> npm link seems to do something interesting, only need to set "nmp root" I guess
09:15 < sabermonk> ya an option through a stdin 
09:15 < sabermonk> not an arg
09:16 < RLa> then just write to its stdin
09:17 < RLa> but if you need more precise interfaction look for specific modules
09:17 < sabermonk> ya i did that .. such as st = child.exec(<exe>)
09:17 < sabermonk> then stmstdin.write(<option>)
09:17 < sabermonk> *st.stdin.write(<option>)
09:18 < RLa> also, some commands/executables might accept arg which overrides or answers to questions it might ask during execution
09:19 < sabermonk> yes, this exe requires an ans ( option in my case ) to continue execution
09:20 < sabermonk> i did smthing like this .. st = child.exe(<exe>,fn(err,stdout,stderr){ st.stdin.write(<opt>)  })
09:21 < sabermonk> *child.exec
09:25 < dr0id> do any of you know how the timeline feature of etherpad-lite works ? :)
09:29 < sabermonk> what is wrong in here....  st = child.exe(<exe>,fn(err,stdout,stderr){ st.stdin.write(<opt>)  })
09:29 < sabermonk> anyone? 
09:31 < NodeX> apart from the fact it's windows do you mean?
09:38 < poolshark> I'm sure this is a noob question but i can't figure it out so here goes. i used npm install -g zombie and i'm doing require("zombie") in my code, but it still can't find the module. Why is this happening? Shouldn't the zombie module have been installed globally?
09:39 < wereHamster> how do I build node when I have python 2.x as python2 installed (python is python 3.x)
09:51 < FireFly> wereHamster, you can create a directory somewhere, symlink "python" in that folder to point to python2, and then use "PATH=/path/to/your/folder:$PATH make"
09:57 < wereHamster> srsly? THere has to be a better way than that
10:00 < radiodario> well you should definetely have python2 for 2.x, python3 for 3.x
10:00 < bradleymeck> wereHamster: alias when you run stuff?
10:00 < radiodario> and then a symlink / alias for python that you can switch back and forth
10:40 < augustl> are there any synchronous network libraries for node out there? I make a lot of http calls in my API integration tests, and they don't run in parallell, so synchronous is fine
10:43 < wereHamster> radiodario: agree. But then also node should use python2 and not python
10:43 < wereHamster> .. if they require a specific version
10:46 < radiodario> so why do you have python 3?
10:47 < radiodario> i heard it's all witchcraft and smoke
11:18 < Deathspike> In Express, is there some way to run a function before render (i.e. checking if user is logged in to change navigation entries and show a welcome back message) without explicitly calling a function to prepare the variables in every single handler?
11:26 < sriley> Deathspike: middleware?
11:41 < radiodario> middleware.
11:46 < stride> middleware!
11:47 < Guest_1448> is it possible to use jade without any html engine?
11:47 < Guest_1448> i just want if/for blocks and variables basically
11:47 <@Nexxy> http://i.imgur.com/ooL1z.jpg
11:47 < Guest_1448> output is plain text
11:48 < Guest_1448> i'd be fine with modifying the jade source but I don't know where to start
11:48 < Guest_1448> i looked at jade filters but they are pretty raw.. no vars, loops or other shit
11:49 < sriley> Guest_1448: why jade? ejs maybe more suitable
11:49 < Guest_1448> i'll look at it
11:49 < Guest_1448> i've just been using jade so i'm already familiar with its syntax
11:52 < Guest_1448> ejs looks like it'll do. thanks sriley 
11:53 < dr0id> who is actually smart here?
11:54 < sriley> thats an odd question, im sure everyone is smart about something
11:55 <@Nexxy> dr0id, every last one of us
11:56 < dr0id> :)
11:57 < Deathspike> sriley: Is there any example on doing it?
12:00 < sriley> probably quite a few on the web. the way that express works is that it will go though the middleware layers, one of which is the route middleware. so if you add something before that it will call it before any page is routed
12:04 < Deathspike> sriley: So I could do a route capturing all except api-services and add some stuff to context.. sounds simple, why didn't I think of that? Thanks for the input!
12:05 < Deathspike> And locals is there to help, awesome. :]
12:07 < sriley> it wouldnt be a route, but yes you can use middleware to add something before the route is chosen
12:13 < Deathspike> sriley: So I would end up with something like this, http://pastebin.com/MAZkHTna, or is there a more elegant way of doing it?
12:13 < Deathspike> That's supposed to be a * btw 
12:14 < sriley> you dont need a route, should be similar to http://j-query.blogspot.co.uk/2012/02/expressjs-dynamic-helpers-vs-middleware.html
12:16 < Deathspike> Ah yeah in this instance that is more elegant. But my original intend was to run the function for anything *except* api calls so I would need to define a route to exclude requests starting with /api/
12:17 < tuhoojabotti> sriley: Why is it that he has 2 semicolons in that post?
12:18 < tuhoojabotti> Makes no sense, either use them or not
12:18 < sriley> really that last statement should have be just "use them"
12:20 < Deathspike> the connect/express static middleware support 304 not modified or, when setting a max age, does the browser not call at all?
12:22 < RLa> you need expires header for browser not making any requests for those resources
12:23 < RLa> var maxAge = 1000 * 60 * 60 * 24 * 365; app.use(express.static(config.public, { maxAge: maxAge }));
12:23 < RLa> just make sure you have cache buster when you need to update the files :)
12:26 < Deathspike> RLa: Cache buster?
12:28 < Deathspike> It indeed will not request the resource again, it supports 304 for html files and included files are just served from cache again. I could attach a query to each static file serve with a stamp or hash but that's messy and cpu intensive, is there a more elegant solution?
12:28 < RLa> i just attach app's package.version
12:30 < Deathspike> Eh? What is that?
12:30 < RLa> for stylus i created special mixins which add it automatically for things like background-image
12:31 < RLa> for jade i currently set it as param in render but used to use an helper for that in express 2
12:31 < RLa> Deathspike, it's in your package.json file
12:31 < Deathspike> I don't have a package.json
12:33 < Deathspike> So I should make a package.json (google'ing that) and create a html helper to set the version on each resource?
12:33 <@Nexxy> Deathspike, http://package.json.nodejitsu.com/
12:33 <@Nexxy> mouseover each element for descriptions
12:34 < Deathspike> This is, besides being able to have a version, not really relevant for a non published project with nothing to do with npm?
12:34 <@Nexxy> actually quite relevant
12:34 <@Nexxy> you can do things like `npm install` 
12:35 <@Nexxy> to install all of your dependencies 
12:35 <@Nexxy> I mean I assume you will be deploying it somewhere at some point
12:35 < yawnt> hai
12:35 <@Nexxy> hai yawnt 
12:36 < Deathspike> Yes, but every package I have installed, I install locally (not globally)
12:36 < Deathspike> and I can just use npm update then
12:36 <@Nexxy> suit yourself :P
12:37 < Deathspike> I am here to learn :) So if there's a good reason I'll definitely do it, but npm is easy as it is :)
12:38 < RLa> every node project should have package.json file
12:38 < RLa> "Yes, but every package I have installed, I install locally (not globally)" <- what if you need to install them again?
12:39 < RLa> package.json would contain them as dependencies so running npm install in the project dir would download them automatically
12:39 < RLa> that's something even non-published project needs
12:40 < Deathspike> Confused here, the modules I use are in node_modules and running npm update will trigger a nice update for every one. So the added value to do npm install is almost nothing, isn't it? It's not like I'll deploy the app w/o testing and w/o node_modules folder.
12:41 < HardFu> Hey guys, we are conducing a short market analysis, would you want to participate in a short online survey? https://www.surveymonkey.com/s/2FTRC55
12:42 < RLa> as you say, i do not keep node_modules in vcs at all
12:42 <@Nexxy> Deathspike, the advantage of package.json is beyond that of update vs install
12:42 < HardFu> Sorry for spamming, but it's all about online help/outsourcing :)
12:42 <@Nexxy> Deathspike, e.g. being able to use 'npm test' on your own app
12:42  * Deathspike goes to search what npm test is.
12:43 <@Nexxy> Deathspike, it just runs whatever you have defined for tests
12:43 < RLa> "Where do you seek help when it comes to web development?" <- asking team members is not even in the list!
12:44 < Deathspike> Oh and I can write, say, test.js and run a bunch of tests on the running server (using superagent or whatever)?
12:44 <@Nexxy> Deathspike, also as RLa mentions; keeping node_modules checked in isn't really all that great
12:44 <@Nexxy> Deathspike, usually something like test/*-test.js
12:44 <@Nexxy> but however you like
12:45 < Deathspike> Ah that is nice. I'll have to look into this. Thanks a bunch for the hints. :D
12:45 <@Nexxy> :)
12:48 < Deathspike> Do Express template engines (such as https://github.com/donpark/hbs handlebars for express) make use of compiling and cache in production modi?
12:49 <@Nexxy> they should
12:51 < Deathspike> I would use consolidate.js (which I expect it does, by default..) but that doens't seem to be up to date for 0.8 yet.
13:06 < ragingwind> hi
13:22 < qbit_> swootness - 0.8.0 is in openbsd now 
13:27 < lmattos> hello guy's... im very new in node.js ... i create an todo list application and i want to put online on my server.... any tutorial about "deploy node.js" online?
13:28 < WarheadsSE> isaacs et al, I forgot to mention the other day that nodejs 0.8.0 is up and packaged in Arch Linux ARM.. the joys of automatic build systems ;)
13:29 < lmattos> anyone could help me to deploy node.js online ???
13:44 < WarheadsSE> lmattos: shouldnt be too complicated. Need to get nodejs installed, and follow normal install/setup
14:11 < Sing> Started working on node recently. My connect version installed on the machine is 2.3.4. When i install packages like node-inspector, mongoose it says my connect version should be between 1.8 to 1.9. Should i uninstall my connect and install older version
14:12 < tuhoojabotti> Sing: Working on node or with node? :P
14:13 < Sing> tuhoojabotti :) working with
14:15 < CIA-93> libuv: Bert Belder v0.8 * r4a88b3b / (src/win/error.c src/win/fs.c): windows: don't inhibit reparse behavior when non-symlink is encountered - http://git.io/XJzkwQ
14:18 < CIA-93> node: Bert Belder v0.8 * r3ea2a61 / (3 files in 2 dirs): uv: upgrade to 4a88b3b - http://git.io/naNkdg
14:51 < Sing> My connect version installed on the machine is 2.3.4. When i install packages like node-inspector, mongoose it says my connect version should be between 1.8 to 1.9. Should i uninstall my connect and install older version
14:55 < SomeoneWeird> Sing, npm install connect@<version>
14:56 < jfroma> npm prepare coffee --latte-machiato
14:59 < Sing> @SomeoneWeird It says my node is not compatible when i try to install connect version 1.9.0
15:14 < STRML> Has anyone here successfully set up an HTML snapshot utility that lets Google crawl your page? I'm using ExtJS on my frontend and Node on the back and I'd like it to filter out the googlebot and serve static HTML
15:18 < WarheadsSE> Looks like we'll have node.js on a Gooseberry soon ;)
15:20 < wi11iam> william@kingmaker ~/apps $ jake test
15:20 < wi11iam> jake aborted.
15:20 < wi11iam> TypeError: Object [object Object] has no method 'task'
15:20 < wi11iam>     at Object.<anonymous> (/home/william/apps/Jakefile:3:6)
15:20 < wi11iam> (See full trace by running task with --trace)
15:20 < wi11iam> does anyone know why this happens?
15:20 < wi11iam> the test task just print's some stuff
15:20 < sriley> STRML: thats the kinda thing that'll get you on a blacklist ;)
15:21 < wi11iam> var JAKE = require("jake"); JAKE.task('test', .......
15:21 < STRML> sriley: I'm sorry? What's not kosher about that
15:21 < wi11iam> should work, right?
15:21 < jfroma> I am having problems with npm when using the "n" version manager... it says "Error: Cannot find module '../lib/utils/log.js'"... any idea?
15:21 < wi11iam> woops
15:22 < sriley> just the mere serving different content to the crawler will get you flagged up as suspicious
15:22 < STRML> Well, it's kind of required for AJAX apps, isn't it?
15:22 < STRML> And it's outlined in Google's guidelines: https://developers.google.com/webmasters/ajax-crawling/docs/getting-started
15:24 < wi11iam> ok i got it
15:24 < wi11iam> i guess this tutorial is old or smth
15:24 < wi11iam> if i just do task() w/o importing the jake namespace
15:24 < wi11iam> everything is kosher
15:25 < sriley> STRML: wheres its say about serving the crawler different content?
15:26 < STRML> Well, I guess the difference is that you're creating static HTML pages that you can reach via _escaped_fragment-style URLs
15:26 < STRML> But I'm using History.js so I don't use hash fragments in my app
15:27 < sriley> thats talking about how it converts the hash to a standard url that it hits your server with, its not quite the same as serving different content to the crawler
15:27 < sriley> if you have proper links since youre not using hashes then it should just work
15:28 < STRML> Well, I've been using the "Fetch as Google" tool in Webmaster tools and it unfortunately doesn't seem to be running any JS
15:29 < sriley> it wont, but then you should create the content server side and enhance it via js
15:30 < STRML> Well it's not really a conventional page. The only html is index.html, which loads ExtJS, which then reads the URL and fetches content from my API server
15:30 < sriley> why cant that be done server side?
15:30 < STRML> So it's really a client-side webapp that gets JSON data from the nodejs backend
15:31 < STRML> Well the whole app runs client-side more or less. I can serve static templates to a given user-agent but otherwise I need to be running javascript to know what items to fetch from the API
15:32 < STRML> I'm not the biggest fan of ExtJS but we're running Sencha Touch as well and this is the app I have... hah have to live with it
15:33 < sriley> but why would it need to run js to know what to fetch, if its an app that is dependant on some user context then perhaps it doesnt need to be indexed beyond the login/welcome page
15:33 < wi11iam> does anyone know how to execute a shell command w/in a jakefile?
15:33 < sriley> if you want it to be indexed then it has to work server side
15:37 < timoxley> wi11iam child_process.exec
15:37 < STRML> sriley: That's just the architecture. I'm reusing the same API server for my mobile site and my desktop site. It is only responsible for delivering AJAX from requests, it doesn't render any HTML whatsoever, ever.
15:38 < STRML> sorry, delivering JSON*
15:38 < sriley> STRML: in that case theres nothing that needs to be indexed
15:39 < STRML> Well, it would be nice if some of the more public content were indexed. 
15:39 < sriley> i assume your mobile and desktop apps are indexed due to being server side rendered ;)
15:40 < STRML> Sorry? Not sure if I'm misunderstanding your sarcasm but there's zero server-side rendering going on
15:40 < sriley> with zero server side rendering there will be zero content indexed, thats just how it works
15:42 < STRML> :) And that's why I'm looking for a way around it. Considering the tutorial I linked to earlier it seems that google encourages taking HTML snapshots with something like crawljax and delivering those instead from the server. But since I don't use #! I would have to be sniffing user-agent.
15:43 < kenperkins> does 0.6.19 get removed from the PPA ?
15:43 < wi11iam> thx timoxley <3
15:43 < sriley> not really what google is suggesting is that the hashes can be change to urls that can be hit - but that will imply proper server side rendering going on
15:44 < STRML> "Now that you have your original URL back and you know what content the crawler is requesting, you need to produce an HTML snapshot. How do you do that? There are various ways; here are some of them:"
15:48 < sriley> so you need to go to the appropriate apis and server side render the content, if you do that you might as well do it properly for the other users of the app too
15:48 < sriley> if you create it firstly so that it works without javascript then enhance it to do whatever you need then it will be indexed correctly
15:49 < SwiftAppdesign> hey
15:49 < WarheadsSE> o/
15:50 < SwiftAppdesign> can someone help me with a problem I'm having? I'm a complete noob to node.js
15:51 < STRML> sriley: Good idea. It's a login-based app though but I think I could index a small number of important public pages this way.
15:53 < sriley> well content behind a login probably shouldnt be indexed else theres no point in having the login
15:55 < SwiftAppdesign> can someone give me a hand with some code plz?
15:56 < Deathspike> SwiftAppdesign: I suggest asking concrete questions, and not generic 'can you help' or anything like that. That works for me.
15:57 < STRML> sriley: It's a login-optional page. Most things are public, few things are not. Anyway I'll see what I can do about it. Thanks for the help
15:57 < SwiftAppdesign> sure, I'm trying to create a server that will run a .sh when any request is sent to port 8000, how do i do that? i have tried several ideas, but none will work
15:57 < Deathspike> I think you can use a basic createServer and use exec to run external code from within its callback.
15:58 < Deathspike> With this function, actually, not exec: http://nodejs.org/api/child_process.html
15:58 < SwiftAppdesign> tried that, got a ton of errors regarding runtime
15:58 < STRML> exec("sh myscript.sh", function(err, stdout, stderr){sys.puts(stdout)});
15:58 < SwiftAppdesign> k
15:59 < STRML> actually use util, not sys :)
15:59 < SwiftAppdesign> k
15:59 < SwiftAppdesign> so now my code looks like this:
15:59 < SwiftAppdesign> var http = require("http");  function onRequest(request, response) { exec("sh myscript.sh", function(err, stdout, stderr){util.puts(stdout)});   response.end(); }  http.createServer(onRequest).listen(8888);
15:59 < Leemp> Is it possible to delete a package you uploaded to npm? Or do you have to upload a new version, to fix a problem? When i published, npm rewrote my .gitignore to be .npmignore, which in turn ignored a directory i didn't want it to ignore
16:00 < Leemp> Not a big deal if i have to upload a v2, but it seems a bit silly for a simple error like this. 
16:00 < STRML> SwiftAppdesign looks more or less okay to me
16:00 < SwiftAppdesign> im testing it now
16:00 < STRML> don't forget var util = require('util')
16:01 < STRML> and var exec = require('child_process').exec;
16:01 < SwiftAppdesign> k
16:01 < WarheadsSE> what was that hint of require-less in 0.8.0 I may have, of course missed something
16:01 < WarheadsSE> ( SwiftAppdesign not meant at you)
16:02 < SwiftAppdesign> k
16:02 < bmatusiak> when was nodejs 0.8.0 released?
16:02 < STRML> @Leemp npm unpublish?
16:02 < WarheadsSE> monday
16:02 < STRML> http://npmjs.org/doc/unpublish.html
16:02 < WarheadsSE> http://blog.nodejs.org/2012/06/25/node-v0-8-0/
16:03 < Leemp> STRML: ah ty, i missed that :/
16:03 < SwiftAppdesign> great that works, thanks SRTML
16:03 < STRML> np 
16:03 < bmatusiak> WarheadsSE: ty
16:03 < WarheadsSE> no problem
16:04 < SwiftAppdesign> just testing it now
16:06 < SwiftAppdesign> one question, can i use the osascript command in place of ("sh my script.sh") ?
16:06 < STRML> You can use anything that'll run in a terminal
16:07 < SwiftAppdesign> great, thanks
16:09 < SwiftAppdesign> er, not working
16:27 < Aquilas> Hey guys I'm having a bit of trouble grasping what Node.js is. I read the website. If I'm trying to make a website, why should I use node.js?
16:28 < xat-> it all depens on your needs
16:28 < Aquilas> What sort of needs would Node.js be useful for?
16:29 < xat-> for example realtime stuff
16:30 < Aquilas> Like dynamic stuff with js?
16:30 < xat-> like server pushing stuff to the clients
16:31 < xat-> however, since node is still new there are not much content management systems for example
16:32 < Deathspike> Aquilas: The way I see it, it is possible to deal with every use case and every type of networked system. Note that part, networked system, it's not a general purpose language.
16:34 < Deathspike> Aquilas: You get a beautiful asynchronous model beautiful of handling a LOT of concurrent requests, so sites where response times are more critical than heavy weight processing (such as information exchange websites, forums, chat, real-time statistics, etc) are great on node. 
16:34 < TheEmpath> oh man…. "object-relational mapping is the Vietnam of Computer Science."
16:34 < WarheadsSE> hahah, sadly true
16:34 < Aquilas> ah I see thanks.
16:35 < WarheadsSE> Aquilas: also to ensure you're aware, offloading heavy processing outside of node is a very good idea.
16:36 < Aquilas> What would be something that requires heavy processing
16:36 < xat-> image processing
16:36 < Aquilas> Ah
16:36 < xat-> video convertion
16:36 < WarheadsSE> PDF generation
16:37 < WarheadsSE> massive datbase reports
16:37 < Aquilas> I see
16:37 < Aquilas> Thanks guys
16:37 < WarheadsSE> larger, time consuming, normally single-threaded tasks
16:37 < WarheadsSE> those are "heavy"
16:37 < taterbase>  For Ryan Dahl so loved the world, that he gave his only begotten event loop, that whosoever performed async io could have eternal callbacks.
16:38 < xat-> lol
16:38 < WarheadsSE> node excels at expediently handling jobs based on an event framework at high speed
16:38 < WarheadsSE> however, when those jobs take forever, so does node
16:42 < bradleymeck> isaacs: sorry to pester but have you noticed odd spikes in memory usage from node-tar?
16:47 < zhodge> would anyone like to offer assistance with a web scraper?
16:47 < SwiftAppDesign> i know this is gonna sound really nooby, but i have a program that runs when any request is received on port 8000, how can i send a request from a javascript function? thanks
16:48 < bradleymeck> SwiftAppDesign, the easiest way would be the 'request' module
16:48 < Deathspike> SwiftAppDesign: You don't. Node will be the program that receives the request, not some other app.
16:48 < SwiftAppDesign> i mean i want to send a request when a javascript function is called in a separate program
16:49 < bradleymeck> you can't, the other program is not tied to node
16:49 < Deathspike> I don't understand what kind of use that would have either.
16:49 < Deathspike> What are you trying to accomplish?
16:50 < SwiftAppDesign> my server is triggered when a request is sent to port 8000, I'm trying to send a request to port 8000 using javascript
16:51 < Deathspike> SwiftAppDesign: Using JavaScript in your browser, or in Node.js?
16:51 < sriley> as in ajax?
16:51 < Deathspike> It sounds like ajax, unless he has a TCP server and not HTTP?
16:51 < SwiftAppDesign> javascript in the browser death, and sriley if it can be done with ajax, that would be great
16:52 < SwiftAppDesign> its a http server
16:52 < Deathspike> Well.. that's simple jQuery. :)
16:52 < Deathspike> http://api.jquery.com/jQuery.get/
16:52 < SwiftAppDesign> im a noob when it comes to query :)
16:52 < SwiftAppDesign> theres only so much you can learn when your 15 :)
16:53 < Deathspike> Oh I don't agree on that statement, but let's continue.
16:53 < SwiftAppDesign> lol
16:53 < Deathspike> Is your site hosted on the same domain?
16:53 < SwiftAppDesign> my site?
16:54 < Deathspike> You serve some HTML+JS from your HTTP server (on port 8080) to the browser and want to get some MORE information from the SAME SERVER after it has been served?
16:55 < SwiftAppDesign> no, its a very basic server, when it gets a request it runs a bash script
16:56 < bradleymeck> SwiftAppDesign: it sends something to the browser, just make whatever it sends to the browser a script that queries back to the server it came from
16:56 < Deathspike> I'm getting confused. Can you explain, IN DETAIL, what kind of configuration you are using (What serves HTML? What kind of server are you trying to call? What must it receive?). Be as explicit as possible, please, because I feel that some of your statements are contradicting due to miscommunication on either side.
16:56 < sriley> by domain you actually mean same domain/port/protocol? since it sounds like its not then youll be limited by cross domain policy, youll probably want to use jsonp or something
16:58 < SwiftAppDesign> ok, this server is designed to run a bash script that logs me out of my mac when it receives any request on port 8000, its being hosted on my pc, and i want a way to send a request to that server when a button is pressed on a webpage
16:58 < SwiftAppDesign> so i can log my mac out when I'm upstairs
16:59 < SwiftAppDesign> also its a nice project for me to work on
17:00 < Deathspike> Any request, being a HTTP request?
17:00 < SwiftAppDesign> yeah any http request going to port 8000
17:00 < SwiftAppDesign> i can host the code if you want
17:01 < sriley> in that case you dont really need to use js for this then?
17:01 < Deathspike> Well, I can write a Node example if you wish.
17:02 < Deathspike> sriley is correct, you can use whatever for this. :)
17:02 < sriley> if its any http request then just access http://youriphere:8000
17:02 < sriley> if you want another page around that then make a html form and post to that url
17:03 < SwiftAppDesign> i know that, i want to know how to do that when a button is pressed without redirecting to the page
17:03 < sriley> use a form with a target
17:03 < Deathspike> ^
17:04 < SwiftAppDesign> doesn't work
17:04 < SwiftAppDesign> also trying to curl to it in terminal won't work
17:04 < sriley> in that case the any http request aint quite right :)
17:04 < game16> Hey
17:04 < SwiftAppDesign> lol
17:04 < SwiftAppDesign> god, my port was wrong :)
17:05 < SwiftAppDesign> sheesh
17:05 < game16> I've got to check how many checkboxes have been checked but server side in Express, how could I do that?
17:05 < game16> is that done with the bodyParser?
17:05 < WarheadsSE> would port shifting be a problem to XSS blockers?
17:05 < Deathspike> game16: Yes, they have names and are available when checked, otherwise not.
17:05 < sriley> WarheadsSE: depends on if you were trying to use xmlhttprequest
17:06 < Deathspike> SwiftAppDesign: If you want a pure node approach, you could do http://pastebin.com/vaNYVGpZ. VERY VERY BASIC. :P
17:06 < SwiftAppDesign> i know, but i just realised my ports were wrong, thats all :)
17:12 < Weems> If I am running node.js locally but want to run it on a domain that I own, how might I set that up?
17:13 < coderarity> what extension do people use for handlebars files?
17:14 < CIA-93> node: isaacs reviewme * rf2a9ed4 / lib/sys.js : Fix #3577 Un-break require('sys') - http://git.io/uoJprg
17:14 < perezd> net.js:442 throw new Error("bad arg");
17:14 < perezd> not the most useful error message
17:15 < perezd> what would you make of that?
17:15 < perezd> something about getpeername() on a uv handle?
17:18 < rektide> what's a good way to detect if this script is the "main" script?
17:19 < rektide> lastIndexOf(process.argv[1]) == process.argv[1]-"thisScriptsName.js".length ?
17:20 < rektide> that seems fragile & not good enough, that the runtime ought help me with finding the answer here
17:22 < TooTallNate> rektide: usually it's bad practice to do that
17:24 < AAA_awright> rektide: "main" scripe?
17:28 < stagas> rektide: have a global flag at the top of your scripts, if it's not set yet then it's first
17:33 < AAA_awright> Oh I see
17:33 < rektide> AAA_awright: see my example if you don't understand, that's the main script.
17:33 < AAA_awright> A string minus a number is NaN so I'm afraid I don't follow
17:34 < rektide> stagas: no, because modules don't have globals. any time the script is in a module, it'll run once.
17:34 < rektide> that's string.length son
17:34 < rektide> AAA_awright: 
17:35 < rektide> errr
17:35 < rektide> there is indeed stuff missing
17:35 < rektide> TooTallNate: solutions?
17:35 < AAA_awright> Right, which is getting subtracted from a string
17:35 < AAA_awright> rektide: Your application/binary should only require() libraries, files that populate module.exports with Functions, and which Node.js will return right away if called directly.
17:36 < AAA_awright> application/*executable
17:36 < rektide> did you just tell me to go fuck myself?
17:36 < rektide> :p
17:36 < Deathspike> Windows, you and your BSOD, I hate you.
17:36 < rektide> i want to write things taht are both executable and also capable of being used as modules
17:36 < rektide> i need to detect what context i am being executed as
17:36 < TooTallNate> rektide: what's all this talk about globals and whatnot?
17:37 < TooTallNate> rektide: i mean, what's the problem you're trying to solve here?
17:37 < rektide> TooTallNate: I have no idea what ridiculous crap is going on above nor why we're arguing over an incredibly malformed non expression i brain dumped
17:37 < rektide> what i'm trying to do is write code taht can either be a module or executed
17:37 < Zam> How would I get a list of a directory's subdirectories? Kinda like fs.readfileSync, but it should return a list of directories only, no files
17:37 < rektide> and executes a block of code only if it's that file being executed directly by node
17:38 < AAA_awright> rektide: You should seperate it out. Any library logic SHOULD be in an external file and require()d from the application
17:38 < TooTallNate> rektide: why though? just make 1 file be your API and a bin file be the main one
17:38 < rektide> AAA_awright: fuck you no
17:38 < rektide> why not
17:38 < AAA_awright> npm has this problem. It sucks.
17:38 < rektide> why not run everything
17:38 < rektide> your "do it this way" arguments are invalid everyone
17:38 < TooTallNate> rektide: cause it's bad organization
17:38 < rektide> i can do this and i am doing this and it'd be great if node could indicate and flag that the current thing running is the entry point into the system
17:39 < rektide> you're arguing art
17:39 < rektide> not practice
17:39 < AAA_awright> rektide: You want the logic? Because it can be logically seperated, thereby reducing redundancy
17:39 < rektide> and you're not going to win
17:39 < rektide> and i'm not going to try and convince you
17:39 < rektide> and i'm not going to win
17:39 < TooTallNate> rektide: well there is a flag
17:39 < TooTallNate> there's just no good reason to use it
17:40 < AAA_awright> There is no additional functionality you'll get from what you're proposing, even if it was possible
17:40 < rektide> if(process.argv[1].lastIndexOf("thisismymodule.js") == process.argv[1] - "thisismymodule.js".length) is the check i'm using.
17:40 < rektide> it's ugly
17:40 < rektide> i want better
17:40 < rektide> i think node ought flag me
17:40 < rektide> what is the flag
17:40 < rektide> that node has that indicates the current thing being executed is the entry point
17:40 < rektide> that node is starting with
17:41 < Zam> Anyone? No one knows how to get a list of subdirectories? Like fs.readdirSync but without listing files, on dirs
17:41 < rektide> AAA_awright: shut up no one cares fuck
17:41 < AAA_awright> rektide: You can't guarentee that the module won't be renamed, and authors need to be able to call the binary, OR the library, without being detected "hmm what did the parent intend me to be, a library or an application"
17:41 < rektide> shut up shut up shut up
17:41 < rektide> soooo not anything i care about
17:41 < rektide> and not contributing
17:41 < AAA_awright> rektide: You're asking how to solve a problem, there's the answer: Move library code into a library file
17:42 < rektide> AAA_awright: that works but i want EVERY SINGLE library file to be executable
17:42 < rektide> there's no reason any file should deny doing stuff with stdio
17:42 < rektide> fuck off if you disagree you useless shit
17:42 < rektide> i don't fucking care
17:42 < AAA_awright> What functionality is that providing?
17:42 < rektide> WHO CARES
17:42 < rektide> FUCK
17:42 < TooTallNate> rektide: like, relax dude
17:42 < AAA_awright> Anyone trying to answer your question
17:43 < AAA_awright> ^^
17:43 < rektide> i can answer my own question, i showed how i do it.
17:43 < rektide> all i asked for is a better less hackish way of doing it
17:43 < rektide> not a fucking diatribe on how the fuck to organize my code and guidance to not handle stdio sanely everywhere
17:44 < TooTallNate> rektide: people were just trying to help educate; it's not our problem if you're not open to suggestions
17:44 < rektide> i'm open to on topic suggestions to make things better
17:44 < Deathspike> I quote a great thing someone told me; If it feels unnatural, you're probably not supposed to be doing it.
17:44 < AAA_awright> rektide: If that IS the correct way to go about it, then HOW you detect almost certainly does depend on the functionality you're trying to expose in the executable application, so what is it?
17:45 < rektide> I just want to know if this script being run is the entry point for node
17:45 < rektide> What is your question AAA_awright 
17:45 < AAA_awright> What functionality is the application providing when someone calls it
17:46 < rektide> WHO. THE. FUCK. CARES.
17:46 < rektide> that's an application question
17:46 < AAA_awright> CALM DOWN
17:47 < rektide> your question is so far past irrelevant and you're ceaselessly riding that bitch out
17:47 < bahamas> hello. how does node look for a library? I've installed the fibers module with npm but when running a script, I get an error saying Error: Unable to load shared library /vagrant/node_modules/fibers/bin/linux-ia32-v8-3.6/fibers.node. this is on CentOS 5.6
17:47 < rektide> you are the most capitol example of coming into IRC and being told "no you're real problem is this" after having zero to contribute or say that's helpful. i'm sorry you think i'm the inverse, the, let me tell you way over precise details, rather than explain the entire problem
17:48 < AAA_awright> rektide: I put metadata in my functions by attaching properties to them ( function DoSomething(){...} DoSomething.data = {...}; ), and have a single binary which can execute the functionality of any of them
17:48 < rektide> i happen to believe every single code ought be executable in some fashion
17:48 < AAA_awright> s/binary/executable/
17:48 < rektide> that there's no reason every module would not do something when handed stdio by node
17:48 < rektide> at all times without question for every library
17:48 < rektide> so my problem is truly in fact not relevant
17:49 < rektide> that's something i want to do, and i need to detect whether i, this script, am the entry point for node or not
17:49 < AAA_awright> The way you're talking suggests you don't understand what a Node.js module is. "node filename.js" is the same thing as "require('filename.js')"
17:49 < rektide> you are such a useless bag of dicks you cad
17:49 < alejandromg> rektide: http://nodejs.org/api/modules.html#modules_accessing_the_main_module
17:49 < AAA_awright> rektide: You necessarily need different files for executable functions and library code
17:50 < TooTallNate> alejandromg wins 100 internetz
17:50 < rektide> No you don't you don't, process.argv[1] tells you what is being run
17:50 < rektide> Hoorah
17:50 < alejandromg> TooTallNate: thank you sir \o/
17:50 < AAA_awright> rektide: process.argv[1] tells you the name of the first argument passed to node, which node passes to require()
17:51 < rektide> that's what happens, not how i detect if i am that entry point, so again, you are being useless to me
17:52 < rektide> please just do us all a huge favor and stop being a dumb contrarian useless fuck in this channel
17:52 < rektide> so i can stop responding to you
17:52 < rektide> I already have a useful answer from someoen who knows something
17:52 < rektide> I'm sorry my script
17:52 < rektide> process.argv[1].lastIndexOf("thisismymodule.js") == process.argv[1] - "thisismymodule.js".length
17:52 < rektide> bends your tiny little mind
17:52 < rektide> and you just don't get it
17:52 < TooTallNate> rektide: go write some code, you got your answer, stop belittling people when you're the one asking for help
17:53 < AAA_awright> rektide: It always returns false because process.argv[1] is a string and "thisismymodule.js".length is a number
17:53 < AAA_awright> What is it with people and their insistance on cursing on Freenode in the last day, I swear
17:53 < rektide> process.argv[1].lastIndexOf("thisismymodule.js") == process.argv[1].length - "thisismymodule.js".length
17:53 < rektide> sorry
17:53 < rektide> i did it again
17:53 < rektide> AAA_awright: they're incited by useless cunts
17:53 < AAA_awright> rektide: Don't call me names if you can't even provide working code
17:54 < bahamas> rektide: go and vent somewhere less. your swearing is pointless here
17:54 < rektide> i'm done with swearing
17:54 < muir_nb> hey, quick question: can crypto.randomBytes block?
17:54 < TooTallNate> muir_nb: everything synchronous blocks
17:54 < rektide> apologies Freenode, that abuse was just too easy to heap
17:55 < rektide> alejandromg: thank you so much for providing real help
17:55 < rektide> alejandromg: this might never ever have ended otherwise
17:55 < rektide> you are a true hero
17:55 < bahamas> so, can anyone give me some tips on how to find out why node doesn't find one of my modules?
17:55 < rektide> bahamas: yeah
17:55 < rektide> bahamas: strace -f -e trace=file node blah blah blah beep boop
17:56 < TooTallNate> rektide: are you that bored?
17:56 < rektide> assuming interactivity is not hugely important. it'll dump huge huge logs of all files being accessed. it'll show you what IS being looked for.
17:56 < AAA_awright> bahamas: That error looks like a problem with the kernel or otherwise, being unable to parse the shared library, I'm afraid I haven't seen that error before
17:56 < rektide> TooTallNate: no i just love AAA_awright that much, his opinion is that important.
17:56 < rektide> it's respect, really.
17:57 < Deathspike> What is currently the most popular choice in nosql database in nodejs?
17:58 < bahamas> AAA_awright: yeah, this blog post says that there can be 3 possible reasons for the module not being found http://www.wigwag.com/devblog/figuring-out-why-node-js-modules-wont-load/
17:58 < bahamas> I don't feel like recompiling node though
17:58 < bahamas> rektide: ok, I'll try that as well. thanks
17:58 < muir_nb> TooTallNate: I guess I mean: will the openssl interaction block waiting for entropy?
17:58 < TooTallNate> bahamas: well if you update to node v0.8.0 you'll get a better error message
17:59 < AAA_awright> bahamas: I don't think it would come down to recompiling node, but even if so, I compile master about every day
17:59 < TooTallNate> muir_nb: as long as you use the async version you should be fine
17:59 < mg__> hi
18:00 < bahamas> TooTallNate: ok, I'll look into that
18:01 < alejandromg> rektide: np!  
18:02 < rektide> your last name is Morales?
18:02 < rektide> O.M.F.G.
18:02 < alejandromg> haha yeah it is why?
18:02 < rektide> because you singlehandedly saved this channel from the pit of depravity i was driving it into
18:03 < rektide> and your act was a good citizened helping others practice
18:03 < rektide> it highlights what happened here all the better
18:03 < AAA_awright> ...It's like that guy who tries to re-implement Java classes and singletons in Javascript *shudders* http://kaijaeger.com/articles/the-singleton-design-pattern-in-javascript.html
18:03 < rektide> i know this was a learning lesson for me.
18:04 < alejandromg> rektide: haha np! Just be kind ;) Everybody here somehow just try to help..
18:05 < Raynos> is there a strategy for updating from 0.8.0 to 0.8.1 etc without having to spend 10 minutes rebuilding everything?
18:07 < rektide> hehe
18:07 < rektide> good q Raynos i think the website has downloadable binaries?
18:07 < Raynos> not for linux
18:07 < rektide> you have seven minutes left to break even
18:07 < rektide> oh. :(
18:07 < AAA_awright> Raynos: Cutting out v8 compiles Node.js in 30 seconds for me: ./configure --openssl-use-sys --shared-zlib --shared-v8 --without-npm
18:07 < rektide> if you download frmo git, it'll only recompile files that change?
18:08 < rektide> that'll save you some minutes every release cycle
18:08 < Raynos> rektide: maybe
18:08 < wi11iam> make should handle that
18:08 < AAA_awright> Raynos: This assumes you already have v8 installed as part of your package manager, I compile v8 for mongodb and Node.js and Mongodb share the library
18:08 < Raynos> I see
18:08 < Raynos> whats the v8 command to see whether its installed?
18:09 < AAA_awright> If you have chromium or chrome installed you might also have v8
18:09 < AAA_awright> Uh
18:09 < AAA_awright> Raynos: see if you have it in /usr/lib/libv8.so*
18:10 < AAA_awright> Raynos: Or just run --shared-v8 and see if it produces an error
18:10 < wi11iam> does anyone here know jake well? im having some issues and im not sure if im just doing something i should be doing or if im doing it wrong
18:12 < AAA_awright> wi11iam: I've never seen anything jake does that a Makefile doesn't, I use Makefiles myself. But maybe you can post the error?
18:12 < wi11iam> its not an error
18:12 < wi11iam> basically
18:12 < wi11iam> what id like to do is
18:12 < wi11iam> readdir on a directory, and then generate tasks for each sub directory
18:13 < wi11iam> and then make the default task depend on them
18:13 < wi11iam> but generating the tasks asynchronously doesn't seem to work
18:13 < wi11iam> trying to do this all synchronous atm
18:14 < wi11iam> works synchronously (:
18:15 < Leemp> Question.. how does a project put itself as a dependancy? Ie, say a testing framework 'dogfoods' and uses itself to test itself. The thing is, you don't want to simply `require('../lib')`, because you're likely *working* on ../lib. Thoughts?
18:22 < jriegs> hey can someone help me debug for a second
18:22 < jriegs> I'm getting an assertionError
18:22 < jriegs> and have no idea why
18:23 < jriegs> assert.js:104   throw new assert.AssertionError({         ^ <error: TypeError: Converting circular structure to JSON>     at Object.afterConnect [as oncomplete] (net.js:732:10) 
18:23 < jriegs> is there anyway to track where the error is originating from?
18:24 < jriegs> ello?
18:26 < jriegs> will someone say something?
18:26 < jriegs> \ask
18:35 < robinhoode> Anyone here have experience with zombie.js? Having trouble with something that seems pretty simple..
18:37 < jriegs> hey sorry never used it
18:37 < jriegs> Anyone have experience with sockets
18:37 < jriegs> getting some odd failures
18:38 < robinhoode> What proxy are you using?
18:39 <@isaacs> npm searches gonna be slow for a few minutes.
18:39 <@isaacs> sorry
18:39 <@isaacs> it's for the best, i promise :)
18:39 < Deathspike> What should I get into for simple data storage? Couch, Mongo, Redis..?
18:40 < mattrobenolt> Deathspike: Define "simple".
18:40 < jriegs> why would socket.write cause an assertion error?
18:41 < jriegs> buffer overflow?
18:41 < Deathspike> It needs to be fast and capable of storing key/value pairs, i.e. create a user array with names as key and adding some fields as data (db.users['deathspike'].age=13 or whatever). No need for a relational db, just fast, simple, and good for nodejs :)
18:42 < mattrobenolt> Deathspike: Redis can do all of that very simply.
18:43 < jriegs> does this look famillar to anyone: assert.js:104   throw new assert.AssertionError({         ^ <error: TypeError: Converting circular structure to JSON>     at Object.afterConnect [as oncomplete] (net.js:732:10)
18:43 < Deathspike> mattrobenolt: I read a little into Redis, won't I get into trouble later? Let's say my site grows rapidly, I can balance a few node servers but redis is single core, single instance kind of deal?
18:43 < mattrobenolt> Deathspike: Redis can handle A LOT.
18:44 < mattrobenolt> Millions of queries per second.
18:44 < mattrobenolt> And if you need more, you can shard data across instances.
18:45 < mattrobenolt> But I mean, really, if you're throwing too much at Redis for it to handle, you'd more than likely have an actual ops team behind you.
18:45 < jriegs> ryan?
18:45 < Rdahl> hey whats up guys
18:46 < mattrobenolt> So no, you won't get into trouble with Redis in the future. It's used in many large scale deployments.
18:46 < Deathspike> mattrobenolt: My main concern is that I don't invest into a technology that's going to bite in my .. behind. I know relational databases very well, but most of them I don't need everything it offers and want a simple, RAD solution for persistent data.
18:46 < mattrobenolt> Deathspike: You're in good hands with Redis.
18:47 < mattrobenolt> But also keep in mind that Redis isn't "as" persistent as you think. So it depends on what you're doing.
18:47 < muchzill4> Wth? How come forEach in 'async' node module applies the iterator in parallell? It's based on callbacks only and on blocking forEach function. Can someone explain this if I'm wrong? ;p
18:47 < Deathspike> mattrobenolt: What do you mean? I know it keeps in RAM and writes to disk, but when I write stuff, that stuff is persistent, isn't it?
18:47 < mattrobenolt> Deathspike: Redis is in-memory data store first, and syncs back to disk at intervals. So there's usually a period of time that CAN be lost. But the tradeoff is speed. It's fast as balls.
18:48 < Deathspike> Ah like that.
18:48 < mattrobenolt> Deathspike: It can be persistent if you want it to be, but there's a period of time between being in memory and on disk.
18:48 < mattrobenolt> Which, is a variable length of time depending on how you configure it.
18:48 < Rdahl> can anyone help me with an assertion error writing to a socket?
18:48 < mattrobenolt> You can tell Redis to sync to disk once every hour, once every minute, once a second, etc.
18:49 < mattrobenolt> Deathspike: http://redis.io/topics/quickstart
18:49 < Deathspike> mattrobenolt: Does it do a considerable slowdown when synching?
18:49 < mattrobenolt> Scroll down to "Redis persistence".
18:50 < mattrobenolt> It syncs in a background thread.
18:50 < mattrobenolt> But still, it does affect performance.
18:50 < Deathspike> Got it. Will read this document, thanks for the input. I'll do some more research before doing my final decision. It seems all 3 big nosql contestants are pretty nice.
18:50 < mattrobenolt> But honestly, if you synced every minute, you're not going to notice a performance drop until you're doing millions and million sof queries.
18:51 < mattrobenolt> I'd definitely recommend Redis over Mongo. Or anything over Mongo, really.
18:51 < mattrobenolt> isaacs would have a better opinion of Couch, since the entire npm registry runs on it.
18:52 <@isaacs> all db's are good when you're in their sweet spot.
18:52 < Deathspike> Might there be some kind of structured comparison between each engine to determine what it does best, well, and poorly? 
18:52 <@isaacs> i haven't used mongo enough to have an opinion.  but i like how couchdb is totally optimized for correctness and reliability, whereas redis is totally optimized for speed (at the expense of reliability)
18:53 <@isaacs> Deathspike: i dunno.  if you find a good breakdown, lemme know :)
18:53 <@isaacs> the couchdb API is kind of weird in some ways.  you sort of have to break your brain a little to use it.
18:53 < SUBSTACK> mongo seems like a better fit fit if you want lots of little updates
18:53 <@isaacs> redis is very simple, but it's also somewhat featureless (it's a k-v store in the sky, and that is basically it.)
18:53 < mattrobenolt> SUBSTACK: Hopefully not concurrently. :/ It has a global write lock.
18:54 < SUBSTACK> couch is better if you're more comfortable with a functional programming style where you have streams of data and mostly just do inserts
18:54 < jriegs> what causes an assertionError
18:54 <@isaacs> jriegs: assert(false, "Uh oh")
18:54 < mattrobenolt> jriegs: Well, when you run assert and it fails.
18:54 < Deathspike_> Damn, my connection broke. Did I miss relevant information regarding the databases?
18:54 <@isaacs> jriegs: it should have a stack attached.  start poking around
18:55 <@isaacs> jriegs: or: assert.equal(1, 2, "not unless math is broken")
18:55 <@isaacs> etc.
18:55 < jriegs> isaacs, is there a way to determine what in my code is causing it?
18:55 < mattrobenolt> Deathspike_: http://i.imgur.com/pSGj6.png
18:55 <@isaacs> jriegs: gisting the code and the output would be a good start :)
18:56 < Deathspike_> Thank you mattrobenolt 
18:56 <@isaacs> jriegs: or pastie or any of the others.
18:56 < jriegs> haha cheers
18:56 <@isaacs> jriegs: usually the stack that gets printed will give you some important clues
18:57 <@isaacs> Deathspike, mattrobenolt, SUBSTACK: couchdb is also good if your data maps well to documents with an ID, optionally with some attachments.
18:57 <@isaacs> like a registry of package metadata, for instance.
18:57 < SUBSTACK> true enough!
18:57 <@isaacs> i mean, it's basically designed to do exactly what npm needs from a db.
18:57 < Deathspike_> 'documents' being a loose term, not actual documents?
18:57 <@isaacs> Deathspike_: 'documents' being 'json blobs'
18:58 <@isaacs> Deathspike_: but the json can be just a few fields, then an attachment that has the actual "document"
18:58 <@isaacs> Deathspike_: you could build a blog engine on couchb pretty easily.  actaully i think mikeal's blog basically is couchdb with a CDN in front of it.
18:58 <@isaacs> or maybe a local couchdb that he pushes to a cd
18:58 <@isaacs> *cdn
18:59 <@isaacs> i don't know all the specifics
18:59 < jfroma> is there a "browserified" version of  mikeal/request ?
18:59 < Deathspike_> It seems that, unlike sql or mongo, couch and redis *DONT* need a schema? That's correct?
18:59 < jriegs> what does assert.js do
18:59 < jfroma> mongo is schemaless
19:00 < Deathspike_> isaacs: A blog engine, thus articles, tag cloud, comments, etc, simply on couch with minimal effort?
19:00 < Deathspike_> jfroma: Why do I recall seeing a lot of new Schema.. stuff for mongo? o_o
19:02 < ljharb> Deathspike_: probably that's mongoose, which provides schema abstractions on top of mongo
19:03 < tanepiper> tjholowaychuk: you've pushed expres 3.0 beta4 as default, but not updated the docs! :p
19:03 < Deathspike_> Oh right, I see. Thanks ljharb :)
19:06 < tjholowaychuk> tanepiper i never meant to make it the default, must have messed something up for npm to do that
19:06 < mattrobenolt> Deathspike_: I like to think of Redis less as a database, and it makes more sense to me.
19:06 < mattrobenolt> It's more of... memcache + a lot of extra features.
19:06 < mattrobenolt> If that makes sense.
19:06 < Raynos> Where do the node.js /lib files live ?
19:07 < Raynos> on my local machine
19:07 < Raynos> node lives in /usr/local/bin/node
19:07 < tjholowaychuk> Raynos in the binary
19:07 < tanepiper> tjholowaychuk: ahh, ok cos i'm getting the indexOf error that's raised in the issues too, i'll just force @ version it
19:07 < tjholowaychuk> unless that was changed (i dont think so)
19:07 < Raynos> so I can't edit /lib/child_process.js to add console.logs ?
19:07 < tjholowaychuk> tanepiper yeah you should lock versions in your app anyway
19:08 < adamramadhan> hello can anyone help me on what pattern should i use http://stackoverflow.com/questions/11249562/what-pattern-should-i-use-for-making-a-listen-bot-in-node-javascript ? anyone have a same problem?
19:09 < adamramadhan> is it good enough to use events? i mean is there another better way then using events? or thoughts?
19:11 < AvianFlu> Raynos, not without recompiling
19:12 < tanepiper> tjholowaychuk: new app :)
19:13 < tjholowaychuk> ah
19:13 < tjholowaychuk> you get an error too? that's weird it works fine for me
19:13 < tjholowaychuk> i'll try again in a bit
19:14 < phillyDe_> general js question: if i wanted to say have function(foo) { return {foo:"hi"} } how would I get foo in the statement to resolve to foo param?
19:15 < tjholowaychuk> phillyDe_ obj[foo] = 'hi'
19:15 < tjholowaychuk> return obj
19:15 < phillyDe_> sweet ty
19:17 < hustheman> Hi can somebody help me with getting the value of radio buttons using express.js?
19:18 < Weems> If I am running node.js locally but want to run it on a domain that I own, how might I set that up?
19:18 < tjholowaychuk> hustheman #express
19:18 < hustheman> ah ok thank you
19:19 < JoeyJoeJo> I have data that I want to display on a map in a browser, much like Google Maps. Can  use node.js to get data from my server and display it to the client as he moves around and zooms in on the map?
19:20 < upb> you could but that is normally done using WFS protocol
19:21 < JoeyJoeJo> upb: That answers my question. Thanks!
19:31 < Weems|nix> Experiencing undhandled error on the following app file: http://pastie.org/4167302
19:32 < Weems|nix> Eacces
19:34 < timoxley> Weems|nix you likely need admin permission to listen on port 80
19:34 < timoxley> try running with sudo or even picking a different port.
19:36 < Deathspike> tjholowaychuk: Not sure if you know, but, consolidate.js doesn't install via npm on 0.8 :)
19:36 < tjholowaychuk> oh i know
19:36 < tjholowaychuk> haha, i know too well
19:36 < tjholowaychuk> 0.3.1 should work though i removed "engines"
19:36 < phillyDe_> i just can't wrap my head around js function callbacks anyone know of any good tuts
19:37 < Deathspike> tjholowaychuk: I suppose that implicates that I should use github? :P
19:37 < timoxley> phillyDe_ important part is to understand the event loop
19:37 < jerrysv> tjholowaychuk: are you coming out for nodeconf?
19:37 < tjholowaychuk> jerrysv: nope
19:37 < Weems|nix> timoxley: now running as su I get eaddr in use error
19:37 < Deathspike> phillyDe_: I can recommend http://www.nodebeginner.org/ to get started with all of this "stuff" :D
19:37 < jerrysv> tjholowaychuk: bummer
19:37 < timoxley> Weems|nix something else is listening on port 80
19:38 < timoxley> Weems|nix try a different port
19:38 < phillyDe_> ty
19:38 < timoxley> phillyDe_ e.g. http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/
19:40 < phillyDesignr> ty timoxley
19:41 < Weems|nix> timoxley: thx
19:42 < Weems|nix> timoxley: I had a previous iis install on a pc and am trying to remove. it still has a hold on port 80
19:42 < timoxley> Weems|nix most people don't dev on port 80
19:43 < Weems|nix> oh
19:43 < timoxley> phillyDesignr also important is http://howtonode.org/understanding-process-next-tick
19:43 < Weems|nix> but when accessing I always have to use :8080
19:43 < Weems|nix> or whatever
19:44 < Weems|nix> and that's a bit non-intuitive
19:44 < timoxley> Weems|nix it's what most people do.
19:48 < wi11iam> hm is there anyway to include an abitrary js file w/in a jakefile?
19:48 < mattrobenolt> Anyone familiar with Winston?
19:49 < mattrobenolt> https://github.com/flatiron/winston
19:49 < vicapow> matjas: yeah, whats up?
19:50 < vicapow> i just put together my own little style guide. any feedback? https://gist.github.com/3012327
19:50 < timoxley> wi11iam "A Jakefile is just executable JavaScript. You can include whatever JavaScript you want in it." 
19:51 < timoxley> wi11iam e.g. require('./abitrary.js')
19:51 < wi11iam> thx <3
19:51 < wi11iam> i cant tell if this is clumsy or i just suck at it
19:51 < timoxley> probably both
19:51 < wi11iam> is there some accepted way to 'nest' jakefiles?
19:51 < wi11iam> i have a bunch of subdirs
19:51 < wi11iam> so i have my jakefile iterate over them
19:51 < wi11iam> and check them all for jakefiles
19:52 < wi11iam> then exec them if theyre there
19:52 < wi11iam> these all being added as tasks ofc
19:52 < wi11iam> so ill loop over the dirs, if theres a jakefile, insert a task name into an array and register a task to exec the jakefile
19:52 < wi11iam> then i use that list of tasks as the dependencies for my default task
19:53 < timoxley> wi11iam it might be simpler to kick that process off with a shell script
19:53 < timoxley> shell good for looping over directories
19:53 < wi11iam> i had thought about that
19:53 < wi11iam> i have the js written to do the looping done already tho
19:53 < wi11iam> no sense in reimplementing it w/ a shell script now
19:53 < mattrobenolt> tjholowaychuk: ping
19:53 < wi11iam> i also might implement some 'default' behavior
19:53 < wi11iam> in case theres no jakefile
19:54 < tjholowaychuk> mattrobenolt hey
19:54 < wi11iam> like just minify all the .js files if theres no jakefile present in the subdir
19:54 < timoxley> wi11iam sounds rather complicated
19:54 < mattrobenolt> With mocha, is there a way to tell it to run only a subset of tests?
19:54 < wi11iam> heh yeah..
19:54 < timoxley> mattrobenolt -g param
19:54 < mattrobenolt> Ahh, the --grep, right?
19:54 < tjholowaychuk> --grep yeah
19:55 < mattrobenolt> Is there an anti-grep? Say, all tests EXCEPT what was matched?
19:55 < tjholowaychuk> you can use a regexp
19:55 < mattrobenolt> True.
19:55 < tjholowaychuk> bit awkward maybe
19:55 < DTrejo> mattrobenolt: try grep -v "dontmatchme"
19:55 < tjholowaychuk> I'd accept a -v equivalent
19:55 < tjholowaychuk> but not -v
19:56 < tjholowaychuk> -i --invert or something
19:56 < mattrobenolt> Yeah, I think that'd be useful.
19:56 < timoxley> mattrobenolt I used this for exactly that the other day http://stackoverflow.com/questions/406230/regular-expression-to-match-string-not-containing-a-word
19:56 < mattrobenolt> mocha -i #slow
19:56 < timoxley> gross though
19:56 < tjholowaychuk> mattrobenolt: yeah im down
19:58 < mattrobenolt> Oh, I see, you literally just take the string and shove it into a RegExp object.
19:58 < tjholowaychuk> yup
19:58 < tjholowaychuk> could probably escape the CLI one like the browser ?grep
19:58 < tjholowaychuk> I dont think too many people actually use regexps from the cli
19:59 < mattrobenolt> Think it'd be easier to to use the normal grep, then literally invert the selected set of tests later? Or fuck around with the RegExp initially?
19:59 < tjholowaychuk> just a bool to invert it
19:59 < mattrobenolt> No, I'm talking in code to implement it.
20:00 < tjholowaychuk> yeah
20:00 < mattrobenolt> Would you want to muck the initial input RegExp to filter, or filter as normal, then invert?
20:00 < tjholowaychuk> --invert could just set a bool, we check that and invert the matches
20:00 < mattrobenolt> Gotcha.
20:02 < mattrobenolt> I guess it could just be toggled here: https://github.com/visionmedia/mocha/blob/master/lib/runner.js#L327
20:03 < mattrobenolt> Let me hobble together a patch and we'll go from there. I'm sure I'll miss some cases with the browser or something.
20:04 < tjholowaychuk> yeah dont worry about the browser portion for now
20:04 < tjholowaychuk> cant load that page haha
20:04 < tjholowaychuk> grr starbucks
20:05 < mattrobenolt> I like that you're using Mocha to test Mocha.
20:10 < Daegalus> tauday.com <-- enlighten yourself
20:32 < game16> anyone else try to use node query and get an error about  dnode not having a method 'use'?
20:33 < strax> Hello guys, is there a robust XML parser that supports 0.8?
20:33 < strax> a la nokogiri in the ruby world
20:40 < bradgignac> strax: have you looked at node-elementtree?
20:41 < strax> bradgignac: nope, i'll check it out now
20:42 < `3rdEden> isaacs, npm is acting ballsy again =/ it fails to install on 0.8.0: it's giving a ENOTEMPTY error: https://gist.github.com/3013799
20:46 < `3rdEden> hmz, removing /usr/local/lib/node_modules/npm and re-installing helped.. idk why npm didn't removed it
20:48 < benatkin> I think it would be cool if the npm README contained instructions for running it without installing it :)
20:53 < benatkin> something like git clone <npm-git-url>; cd npm; bin/npm --global-dir /usr/local/lib uninstall -g npm
20:54 <@isaacs> benatkin: um... that is in the readme, isn't it?
20:54 < benatkin> ...could uninstall npm when there's a working node but a borked npm installation
20:54 < mattrobenolt> tjholowaychuk: https://github.com/visionmedia/mocha/pull/481
20:54 <@isaacs> benatkin: node cli.js <npm cmd stuff here>
20:54 <@isaacs> benatkin: or just make uninstall, make install, make link
20:54 < benatkin> isaacs: yeah, just those
20:54 < benatkin> isaacs: but it should be runnable with bin/npm, right?
20:54 <@isaacs> benatkin: node cli.js
20:54 <@isaacs> benatkin: not bin/npm
20:54 <@isaacs> that's a diferent thign
20:55 <@isaacs> benatkin: the readme has the instructions
20:55 < Raynos> What are libraries like forever?
20:56 < Raynos> I want to try some alternatives
20:56 < benatkin> isaacs: ah, found it.
20:57 < tjholowaychuk> Raynos: https://github.com/visionmedia/mon + https://github.com/jgallen23/mongroup
20:57 < tjholowaychuk> nothing fancy but it works fine
20:57 < Raynos> tjholowaychuk: When you said mon(1) i thought it was a linux thing rather then a "i wrote this thing"
20:57 < benatkin> isaacs: I like the make link thing
20:58 < Daegalus> i have a question, i never figured it out myself. How do i go about just updating all my global packages? npm install -g isnt right, and npm update does nothing
20:59 < Daegalus> NVM
20:59 < Daegalus> i just qanswer my own question
20:59 < Daegalus> answered*
20:59 < Raynos> tjholowaychuk: What does "daemonize the program" mean?
21:00 < tjholowaychuk> Raynos disassociate from the terminal session
21:00 < timoxley> Raynos 'run in background'
21:00 < Raynos> ah ok
21:03 < jfroma> is there a way i can install 0.6.19 with apt-get now? something like apt-get install nodejs/0.6.19
21:03 < jfroma>  :(
21:03 < mc> use nave
21:03 < mc> or nvm
21:03 < mc> and you can install whatever version you want pretty easily
21:04 < trb> jfroma: there is a repo or use n
21:05 < jfroma> trb, i like n.... but what i am supposed to install first and how?... because i just did a moment ago and even if node was working nvm was failing with "can't find utils...." something like that
21:06 < jfroma> i meant, n is in node, so i have to have a version of node in the first place right? :S 
21:06 < trb> jfroma: basicly you have to install node first, then npm, then n and then get rid of the node you installed from apt
21:06 < trb> and hope it works
21:07 < jfroma> i will try 
21:08 < mc> or just use nvm
21:08 < mc> or nave
21:08 < mc> because they're bash scripts
21:08 < trb> jfroma: or try what mc says
21:08 < trb> :)
21:08 < mc> i prefer nvm for my personal workstation
21:09 < mc> spawning sub shells isn't my bag of tea for day to day usage
21:09 < mc> i also hacked in a remote ls command, and tweaked it so you don't have to put the 'v' in front of versions
21:11 < jfroma> i have some programs that depends on node and some global modules being on the path, the problem i have with nvm is that if i use it i can setup my bash profile to load nvm at the start of bash but i dont have a node version on the path..
21:11 < jfroma> i dont know if i can add to my path a version installed by nvm
21:11 < jfroma> i think i can do just that and skip the step of adding nvm to my profile... because right now i dont switch versions a lot
21:11 < mc> set a default and make sure whatever is running runs as your user and spawns a login shell
21:12 < mc> if you don't switch versions a lot just manually install it globally
21:12 < mc> wget nodejs.org/dist/v0.6.19/node-v0.6.19.tar.gz && tar xf node-v0.6.19.tar.gz && cd node-v0.6.19 && ./configure && make && sudo make install
21:13 < mc> after removing whatever you installed with apt
21:13 < trb> there are days when using gentoo for slotted packages makes sense
21:13 < trb> very few days, but this is one of those ideal cases
21:14 <@maxogden> what does uv stand for in libuv
21:15 < coderarity> what doesn't it stand for?
21:15 <@maxogden> ultra volcano
21:15 < mc> über velociraptor
21:28 < brianc> universal velcro
21:37 < mc> unicorn valor
21:43 < dangelov> so i have a small chat app using express, jade and socket.io. The app works properly on my localhost with the exact same packages installed (via npm install, for both installations), but when on the server, the app can't find the socket.io client file. Any ideas?
21:47 < dschn> Compiling node from source on mac osx lion - is there an easy fix for this? https://gist.github.com/48fb2cb96329bfa9ddef
21:47 < jkevinburton> dangelov: is it global or is your npm in your root.
21:47 < dangelov> not global, installed it locally (no -g switch)
21:48 < jkevinburton> hrm.  socket.io and app on the same listening port?
21:49 < dangelov> yeah
21:50 < dangelov> io = require('socket.io').listen(app);
21:50 < dangelov> (should I not paste here?)
21:52 < dangelov> as i already mentioned, the files were copied verbatim to the server, apart from the db connection details
21:52 < vj> will the node ./configure run on python 2.4
21:53 < dangelov> http://pastebin.com/3Z8ymSEv if anyone would like to have a look
21:55 < joelsbeard> anyone know the name of the lesscss package that auto-compiles on saving?
21:56 < tjholowaychuk> joelsbeard there's less-middleware
21:56 < tjholowaychuk> which will do it on-demand
21:56 < joelsbeard> I'm not using express, will it work?
21:56 < tjholowaychuk> depends how it's written, you could can use most middleware like regular callbacks still
21:57 < tjholowaychuk> but some patches from connect fix node issues
21:57 < tjholowaychuk> so it depends
21:57 < joelsbeard> cool, I'll check it out. thanks
22:23 < blueadept`> tj: quick style preference, do you still write your for loops with an i incremental, or do you use the ecmascript forEach function in its place?
22:24 < tjholowaychuk> blueadept` .forEach usually unless i need to break;
22:24 < blueadept`> interesting, ok
22:26 < ashb> isn't forEach from E4x?
22:27 < ashb> or did it get addedto some other spec too?
22:27 < ashb> oh forEach function. carry on
22:27 <@Nexxy> E5
22:27 < blueadept`> yeah ^
22:27 <@Nexxy> yeah!
22:27 < ashb> i was thinking of for in anyway
22:27 < ljharb> forEach is from ES5. for..in is from like ES1
22:28 <@Nexxy> and they shouldn't be confused with one another
22:28 <@Nexxy> ;<
22:28 < ljharb> tjholowaychuk: it'd be nice if there was a forEach that could return false to break out of the loop
22:28 < tbranyen> ljharb: jquery's each does that
22:28 < tjholowaychuk> ljharb yeah that would be nice
22:28 < tjholowaychuk> without gross hacks
22:29 < tjholowaychuk> tbranyen jquery doesn't use the throw thing prototype did does it?
22:29 <@Nexxy> what is javascript w/o gross hacks?
22:29 < ljharb> altho i suppose you could do [1,2,3].some(function (value) { /* do some stuff */ return i === 2; });
22:29 < tjholowaychuk> Nexxy haha
22:29 < tjholowaychuk> good call
22:29 < ljharb> actually i really like that - [].some and return true to break
22:29 < ashb> man. for each. (not for in). for each was an E4X thingy
22:29 < ljharb> what is e4x?
22:29 < ashb> https://developer.mozilla.org/En/E4X/Processing_XML_with_E4X
22:30 < ashb> EcmaScript for XML
22:30 < ljharb> it has xml in the link, i'm not clicking it
22:30 < ashb> was a spec that never got much trasction
22:30 < ashb> it had some nice things you could do with it
22:30 < ashb> like have xml literals in your JS
22:30 < ljharb> disGUSTING.
22:30 < ashb> and query/modifiy them quite nicely
22:30 < ljharb> xml shouldn't be anywhere, especially not in js
22:30 < ashb> but the main thing i liked was it gave you multi line literals and for each loops
22:31 < ashb> lhb: given that browsers basicaly normalize HMTL to well-formed XML it makes sense
22:31 < tbranyen> tjholowaychuk: i have no idea
22:31 < ashb> (or it would if it ever actually got integrated properly)
22:31 < Daegalus> do whats this proposal i hear about some "import" command?
22:31 < ljharb> ashb: no they certainly do not
22:31 <@Nexxy> ljharb, I hear XML has a fond place in .NET MVC devs hearts
22:32 <@Nexxy> according to s5fs that is (lewl)
22:32  * Nexxy runs
22:32 < ljharb> .net + xml = 99 problems
22:32 < ljharb> lol
22:32 < AAA_awright> There's nothing inherently wrong with XML
22:32 < AAA_awright> It's a fantastic markup language
22:32 < ljharb> shudder
22:32 <@Nexxy> other than how verbose it is
22:32 < ljharb> it's unreadable and verbose
22:32 < AAA_awright> It's a fantastic MARKUP language
22:32 < AAA_awright> It's plenty readable
22:32 < ljharb> to you perhaps
22:32 < tbranyen> people have been writing and reading xml for years
22:32 < ljharb> i find json far more readable
22:32 < Daegalus> xml is horrible, all hail JSON
22:33 < AAA_awright> JSON is a serialization format
22:33 < ljharb> people have been reading and writing lots of things for years - that doesn't make anything readable
22:33 < tbranyen> Daegalus: json configs suck
22:33 < tbranyen> yaml or ini ftw
22:33 < Daegalus> tbranyen: better than XML configs
22:33 < tbranyen> oh hell yeah
22:33 < AAA_awright> XML configurations shouldn't exist, fine
22:33 < Daegalus> i agree with yaml, yaml is nice
22:33 < AAA_awright> But don't hate on XML because people still use it for that
22:33 < ashb> simple YAML. full YAML is stupid
22:33 < ljharb> i'm hating on xml because xml is awful.
22:34 < Daegalus> AAA_awright: XML was intended to be used as a seialization/data transfer format, then people went full retard and started using it for more than it was meant to be used for
22:34 < tbranyen> soap owns
22:34 < ljharb> http://stopsoap.com/
22:34 < AAA_awright> Daegalus: XML is derived from SGML which is a markup language.
22:34 < tbranyen> lol
22:34 < tbranyen> that site is amazing
22:34 < AAA_awright> It even has markup in the name... "Extensible MARKUP language"
22:34 < ljharb> so javascript has java in it?
22:34 < Daegalus> doesnt make it's primary intended goal any less clear
22:35 < AAA_awright> ljharb: On the contrary, Java came from Javascript, hence the name
22:35 < ljharb> um, no youre entirely incorrect
22:35 < ljharb> the name "javascript" was added to Ecmascript to add marketability because Java was already so popular.
22:35 < AAA_awright> Javascript predates Java by about a year
22:35 < ljharb> hahaha
22:35 < insin> sweet, Derby switched from coffeescript to JavaScript
22:36 < Daegalus> Javascript came after Java, and was called Javascript intentionally for marketting reasons to make it compete with java
22:36 < ljharb> java began in 1990
22:36 < ljharb> before javascript.
22:36 < AAA_awright> http://en.wikipedia.org/wiki/Javascript#JavaScript_and_Java
22:36 < Daegalus> The influenced by section of Javascript:
22:36 < Daegalus> Influenced ByteCrunch C, Java, Perl, Python, Scheme, Self
22:36 < AAA_awright> Java is 1995 http://en.wikipedia.org/wiki/Java_(programming_language)
22:36 < Daegalus> it cant be influenced by it, if it came before
22:37 < AAA_awright> This is besides the point anyways
22:37 < AAA_awright> XML is for markup. Places where you need <i>inline</i> annotation of information.
22:37 < ljharb> the point is that the name of something doesn't have anything to do with the essence of it, since you pointed out that "markup" is in the name of XML
22:37 < AAA_awright> JSON is for serialization. Where you need to encode and collapse an object into a string.
22:37 < ljharb> JSON is for any kind of data. it can be an array, or a string, or a number, or whatever
22:38 < Daegalus> AAA_awright: teh stuff you linked specifically points out examples that it came out after Java
22:38 < AAA_awright> That doesn't mean it's the best choice for any kind of data
22:38 < ljharb> how is a document language the best choice for any kind of data?
22:38 < ljharb> data should be serialized.
22:39 < AAA_awright> XML is marking up information which is already serialized, the information it is marking up already has an inherent order.
22:40 < AAA_awright> Some things this isn't so, like tables, but the work around is simple enough: Specify each row independently
22:40 < AAA_awright> Hence, <tr> (row) </tr>
22:40 < ljharb> http://firstclassthoughts.co.uk/xml/why_xml_sucks.html
22:42 < shiftpgdn> Hello
22:43 < AAA_awright> ljharb: Character encoding isn't a problem, you can specify any encoding you want, including UTF-8 which is the *only* choice you get with Javascript. Because of UTF-8, you can't embed binary data in JSON either.
22:43 < AAA_awright> ljharb: Whitespace in XML has well-defined behavior. Variable typing isn't supposed to be applied to markup languages, only serialization formats, which JSON is, which XML is not.
22:44 < AAA_awright> ljharb: You can have multiple XML elements in succession, just stream multiple XML documents or fragments, most XML parsers can be setup to do that. You have the exact same problem with JSON.
22:44 < AAA_awright> Finally, SOAP isn't XML.
22:47 < benatkin> agree about XML being pretty solid
22:50 < benatkin> hmm, this doesn't reference the json spec http://wiki.commonjs.org/wiki/Packages/1.0
23:03 < shiftpgdn> hi all I've got a question
23:04 < shiftpgdn> I haven't done any sort of development out of LAMP in a few years
23:04 < shiftpgdn> Am I in way over my head?
23:04 < mc> not at all
23:05 < mc> i came in to node with nothing but a rudimentary understanding of javascript, and i do just fine
23:09 < eldios> shiftpgdn, don't ask to ask.. just ask =)
23:09 < eldios> someone will eventually answer your question 
23:11 < pancake> connect works with 0.8?
23:11 < pancake> npm install connect # fails with unsupported error
23:11 < eldios> Nexxy, how comes that you have the op in here?!?! you vicious being! you coerced our good OPs til the gave it you "the powa"(tm), didn't you?!?
23:12 < eldios> pancake, works here
23:12 < pancake> npm ERR! notsup Not compatible with your version of node/npm: connect@1.8.7
23:12 < eldios> node 0.8.0 -> npm install connect -> installs connect 2.3.5
23:12 < pancake> wtf
23:12 < eldios> 1.8.7 ?_?
23:12 < eldios> why?
23:12 < pancake> why is getting such an old version?
23:13 < pancake> npm 1.1.32
23:13 < eldios> lemme see
23:13 < mc> yeah connect 2 is fine in 0.8
23:13 < eldios> dame here
23:13 < eldios> same*
23:13 < eldios> (lol)
23:13 < mc> is a dependency trying to pull in connect 1?
23:13 < pancake> yes, in etherpad-lite
23:13 < eldios> oh
23:13 < eldios> that's why
23:13 < mc> yeah
23:13 < mc> it'll need to be updated
23:14 < pancake> oops
23:14 < Leemp> Question.. how does a project put itself as a dependancy? Ie, say a testing framework 'dogfoods' and uses itself to test itself. The thing is, you don't want to simply `require('../lib')`, because you're likely *working* on ../lib. Thoughts?
23:14 < eldios> etherpad is probably trying to pulla specific version
23:14 < mc> Leemp: self-testing test frameworks are fairly common from what i've seen
23:15 < mc> require('../lib') away
23:15 < pancake> npm ERR! notsup Not compatible with your version of node/npm: express@2.5.8
23:15 < pancake> npm ERR! notsup Required: {"node":">= 0.4.1 < 0.7.0"}
23:15 < eldios> XD
23:15 < tjholowaychuk> pancake ask them to update to 2.5.10
23:15 < mc> express 3 is for node 0.8
23:15 < Leemp> mc: yea, but requiring ../lib is flawed lol
23:15 < eldios> pancake, you're pretty doomed
23:15 < eldios> hey the tjholowaychuk 
23:15 < eldios> long time =)
23:15 < pancake> o m g o m g
23:16 < Leemp> mc: Ie, you may have bugs.. so the bugs would prevent testing the bugs.. lol
23:16 < mc> Leemp: they sure would
23:16 < eldios> the bugs will bug the bugs
23:16 < eldios> which won't test the test
23:16 < eldios> and won't work the work
23:16 < Leemp> mc: It would be nice if i could simply list the project on npm as a dependancy, but that's circular
23:17 < Leemp> the project will require itself.. and the sky will fall, etc.
23:17 < Leemp> I can't think of any good way to do it :/
23:17 < eldios> XD
23:17 < eldios> just avoid diving by zero or searching for google in google please
23:17 < Leemp> npm won't let you upload a package that sets itself as a dependancy anyway
23:18 < mattrobenolt> Leemp: If you can't use your test running to run the tests, I think that's a good indication of what's broken.
23:18 < mattrobenolt> runner*
23:19 < Leemp> mattrobenolt: It's an example, not a real case.. but either way, it's not any indication what is broken.. aside from "not working" as being broken. lol
23:19 < mattrobenolt> Leemp: Right, I know what you mean.
23:19 < Leemp> mattrobenolt: if that was a good indication was to what's broken, lets just forget tests all together :P
23:20 < mattrobenolt> I've never done it, so I don't really have any advice. tjholowaychuk would probably have a better idea.
23:20 < tjholowaychuk> ?
23:20 < tjholowaychuk> what's this
23:21 < Leemp> tjholowaychuk: Any idea how an npm package might set itself as a dependancy? For example, a testing framework that dogfoods, and uses itself (an older, 100% tested version) to test it's newer, in progress version?
23:21 < Leemp> dev dependancy, specifically
23:21 < tjholowaychuk> hmm, haven't tried
23:21 < Leemp> I tried uploading to npm, and it failed due to the circular nature of it
23:22 < eldios> Leemp, I think it's not useful to say that a package need itself...
23:22 < Leemp> eldios: Why is it not useful, in my example?
23:22 < eldios> it's pretty implicit that yuo will have it's dependency when installed..
23:22 < eldios> well it's not useful to say it is a dependency to the package manager
23:22 < Leemp> eldios: Should a testing framework *really* require a 2nd testing framework to test itself?
23:22 < eldios> no!
23:23 < eldios> but you will have your wanted dependency (the package itself) when you'll install the package
23:23 < Leemp> eldios: Why is it implicit to say you have the depednancy?
23:23 < Leemp> eldios: No you won't, because the package on disk is being worked on
23:24 < Leemp> it's say, v2, and you can't test an in progress app with an in progress app
23:24 < eldios> mmm..
23:24 < Leemp> it's a beta testing a beta
23:24 < Leemp> etc
23:24 < Leemp> Where as, if you used the one on npm, in theory, that one is fully compliant to all tests, and is not broke in any way
23:24 < eldios> oh I think I got it now.. you want to set a previous version as a dependency to a newer one
23:24 < eldios> right?
23:24 < Leemp> Exactly
23:25 < Leemp> Requiring ../lib is prone to things breaking
23:25 < mattrobenolt> Leemp: Ohh, that makes more sense.
23:25 < eldios> you did specify the needed version in the npm package file, right?
23:26 < Leemp> Yea, though i think i had a wildcard in there, so i am retrying with an exact version
23:26 < eldios> mmm mm ... just try with the simplest case first
23:26 < eldios> very specific different version
23:26 < Leemp> yea
23:27 < eldios> if that ain't working, I think it's the case for a pull request =)
23:30 < Daegalus> I heard there was discussion about an import command, can anyone fill me in?
23:40 < Leemp> eldios: Ah hah, i figured it out. It was an issue with my workflow. 
23:41 < Leemp> eldios: Usually i don't increment version numbers until release branches
23:41 < eldios> =)
23:42 < eldios> so it was indeed a circular depndency
23:42 < eldios> you were actually specifying the same version
23:42 < Leemp> So, lets say my npm package is at 1.0.0. Now, i go in and start working on my package for 1.0.1, but my package.json still says 1.0.0. The issue, is if you attempt to require that package, npm looks at *its* version, and sees that the version on npmjs.org is the same.. so it doesn't bother installing it
23:42 < Leemp> Exactly
23:43 < eldios> I see
23:43 < Leemp> Sort of screws with my workflow, but i guess setting the version ahead 1 makes sense
23:43 < eldios> happens ^_^
23:44 < Leemp> eldios, mattrobenolt: Thanks for the help guys, and being patient with the complicated (and poorly worded) question :)
23:44 < eldios> ahah no problem.. I'm kinda bored working at 2AM here
23:44 < eldios> so.. not a real effort for me :P
23:45 < Leemp> :P
23:45 < CIA-93> node: isaacs v0.8 * rf2a9ed4 / lib/sys.js : Fix #3577 Un-break require('sys') - http://git.io/uoJprg
23:47 < Daegalus> In honor of Tauday, I think Node.js should add a Math.TAU constant
23:55 < kenperkins> so nice to get back onto latest stable
23:55  * kenperkins had been stuck on 0.6.15 :S
23:57 < bradleymeck> anyone seen node-tar take up large chunks of memory?
23:59 < benatkin> just figured out what the hoarders project is. and the TPL is a nice touch, jesusabdullah https://github.com/jesusabdullah/hoarders
--- Log closed Fri Jun 29 00:00:54 2012
