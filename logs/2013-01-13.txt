--- Log opened Sun Jan 13 00:00:12 2013
00:02 < cxreg> works ok there too
00:22 < Sicp> doesn't a function in a file become a module when at the end of that file I do "module.exports.functionActualName = functionAccessableName;" ?
00:22 < Tixz> Sicp: No either exports.functionActualName or exports.module = functionAccessableName
00:22 < Sicp> this is all because of version number
00:23 < Sicp> before, it was like I mentioned 
00:23 < Tixz> Sicp: Might be :)
00:27 < Sicp> dude, actually what I was finding trouble with what the location of the file that had the function that I was making a module
00:28 < Sicp> not the "module.exports.functionActualName = functionAccessableName;" line
00:28 < Sicp> that line works fine, what you suggested doesn't, it doesn't end up referencing the function I intended
00:31 < MI6> joyent/libuv: Ben Noordhuis master * 8e3e60f : linux: only pack struct uv__epoll_event on x86_64  On i386, it does not n (+1 more commits) - http://git.io/_NZ-_g
00:32 < MI6> joyent/node: Ben Noordhuis master * e4f2a14 : deps: upgrade libuv to 8e3e60f - http://git.io/qukH9Q
00:34 < aandy> whoo, just got node compiled on freebsd :> weird that the git branches work, but the source code on nodejs.org doesn't (tried multiple including the version i checked out on git). are there destinct differences between joyent and the nodejs.org?
00:52 < guidocalvano> hey people
00:53 < guidocalvano> what are the most popular template libraries for node js?
00:55 < sahlhoff> guidocalvano: eus is pretty nice
00:55 < sahlhoff> ejs**
00:56 < guidocalvano> k
01:00 < dankohn> Hi, I'm trying to read URLs from a CSV file, check whether they're available, and write out bad URLs to another file. I get through about 400, and then stall out, presumably because I'm not applying backpressure correctly to the emitting stream. How do I do that? https://gist.github.com/d9f06376942a851f1e40
01:33 < bemson> I'm writing a test that ensures a function is scoped to the global object. That's easy to test in a browser, but how to do that in node.js?
01:34 < bemson> In browsers I do want to scope to the window object, but in nodejs I don't want to scope to the global object - just the local execution scope
01:54 < Benvie> eval('this')
01:54 < Benvie> ?
02:46 < Iszak> Is there RABL (https://github.com/nesquena/rabl) for node.js/express?
02:57 < mscdex> Iszak: no, because then it would have to be NABL :-P
02:57 < Iszak> mscdex well. no nabl then?
02:57 < mscdex> i dunno, i just use ejs
03:00 < superjoe> what's a good dictionary module to use
03:00 < mscdex> like merriam-webster kind of dictionary?
03:00 < superjoe> like this https://npmjs.org/package/dict
03:00 < superjoe> except not missing the isEmpty function
03:01 < mscdex> superjoe: i always use plain objects and avoid things like the "in" operator
03:02 < superjoe> mscdex, me too. this is a special case
03:18 <@mbalho> quick everyone unstar https://github.com/mikeal/request
03:18 <@mbalho> https://twitter.com/mikeal/status/290295781603287040
03:19 <@Nexxy> LOL
03:19 <@Nexxy> I just logged into IRC to say the opposite!
03:19 < mikeal> this is hilarious
03:19 <@Nexxy> omg, omg
03:19 <@Nexxy> *the* mikeal
03:19 <@mbalho> i dont endorse overly promotional software!
03:19 < mikeal> haha
03:19 <@mbalho> request is the AOL cd of NPM!
03:19 < mikeal> hahahahaha
03:19 <@Nexxy> dude
03:19 <@Nexxy> 10,000 hours per month!
03:19 <@mbalho> ahh dang you made it back to 2000
03:19 <@Nexxy> free!
03:20 <@mbalho> 10,000 free 304s
03:20 <@Nexxy> now we need a soud bite of mikeal saying, "You've got requests!"
03:21 <@mbalho> haha
03:23 < superjoe> mbalho, I unstarred that a long time ago
03:23 < mikeal> before it was cool
03:23 < mikeal> hipster
03:23 < superjoe> haha
03:24 < superjoe> I hated hipsters before it was cool to hate hipsters
03:24 < superjoe> what now
03:24 <@Nexxy> sounds like you have a storm brewing
03:24 <@Nexxy> inside your heart
03:25 < Omega_> What's the most popular hashtable module that people are using these days in nodejs?
03:25 < ljharb> hashtable module?
03:25 <@Nexxy> what's a hashtable?
03:25 < superjoe> Omega_, I'm trying to answer the same question right now
03:25 < Omega_> Well, anything to handle an ordered collection
03:25 < superjoe> oh ordered. nvm
03:25 < ljharb> use an array of keys, plus an object.
03:25 < ljharb> i suppose that could be a really tiny module
03:25 <@Nexxy> that's not a hash table. ಠ_ಠ
03:25 < Omega_> ljharb: Yeah, I was hoping just to have the addbefores and the last/firsts...conveniences like that
03:26 < Omega_> Nexxy: Whatever.
03:26 < Omega_> Nexxy: Now you know what I mean! :)
03:26 < ljharb> Nexxy: what definition of hash table doesn't work for {}?
03:26 < ljharb> i suppose there's __proto__ :-p
03:26 <@Nexxy> where is the lookup function?
03:26 <@Nexxy> hmm?
03:26 <@Nexxy> what are you hashing?
03:27 < ljharb> the lookup function is just property lookups
03:27 < superjoe> ljharb, I want isEmpty
03:27 < Omega_> Nexxy: I've got my own list of functions I'd like to execute middleware-style (just not for request handling)
03:27 < superjoe> and protection against __proto__
03:27 < ljharb> but yeah i suppose the keys would have to be a hash
03:27 < ljharb> superjoe: Object.keys(foo).length === 0
03:27 < superjoe> ljharb, that's slow
03:27 < superjoe> fundamentally broken way to get size
03:27 < Omega_> Nexxy: So I want to be able to build that list, maintain and work with the order, etc...
03:27 < ljharb> it's only slow if you've built something and measured it and it
03:27 < ljharb> it's slow
03:27 < Omega_> Nexxy: And then eventually iterate over them and call each in order.
03:27 < ljharb> "theoretically slow" isn't useful :-)
03:27 < superjoe> false. I can prove with math that it is slow
03:28 < ljharb> slow doesn't preclude "fast enough"
03:28 <@Nexxy> I love it when I hear things like 'fundamentally broken' on IRC
03:28 < superjoe> that's a silly way to think about modules
03:28 <@Nexxy> it's always a pretty good indication of a good story
03:28 < ljharb> Omega_: maybe https://npmjs.org/package/hashtable ?
03:28 <@Nexxy> a... cool story
03:28 <@Nexxy> bro
03:28  * mbalho puts on sunglasses
03:28 <@mbalho> dang too late
03:29 <@Nexxy> never too late for sunglasses
03:30 < Omega_> Do Connect and Express use any library to work with the order of middlewares?
03:30 < ljharb> the order of middleware in express is the order in which you define it, i believe
03:30 < Omega_> I guess what I'm looking for would be similar, I just want to avoid having to write all this collection management along with my actual implementation
03:31 < ljharb> what are you actually trying to achieve?
03:31 < ljharb> like, the concept, not the technical pieces
03:31 < Omega_> Nexxy: I've got my own list of functions I'd like to execute middleware-style (just not for request handling)
03:31 < Omega_> (sorry, repeated line from above :)  )
03:31 <@Nexxy> omg I was just about to ask if you were the help trolling robot
03:31 < Omega_> Nexxy: What?
03:32 <@Nexxy> *someone* (who shall remain nameless) wrote a bot that comes in and pretends to ask for help
03:32 <@Nexxy> but the questions just never stop
03:32 < ljharb> O.o i wonder if i've ever responded to it
03:32 < Omega_> Nexxy: Yikes, that sounds boring.
03:32 <@Nexxy> it's kind of pretty hilarious, actually
03:32 < Omega_> Nexxy: I hope asking questions doesn't get someone branded a troll here :'(
03:32 <@Nexxy> Omega_, all the time
03:33 < Omega_> Nexxy: Out of curiosity, does the node project oversee this chat room or is it just a community driven kinda thing?
03:33 <@Nexxy> yes and yes
03:34 < Omega_> Nexxy: #2 is obvious, I just meant as in unofficial.  Kk.
03:34 <@Nexxy> on freenode, unofficial channels have 2 hashes
03:34 <@Nexxy> like ##javascript
03:34 < Omega_> Nexxy: Ah, that's right.  I keep forgetting that.
03:34 <@Nexxy> :P
03:35 < Omega_> Nexxy: My IRC street smarts are low.
03:36 <@Nexxy> that's understandable
03:39 < aandy> have i been living on the wrong side of the javascript planet, or is there a more logical reason why i've never really noticed the .always() method as opposed/in conjunction to nested callbacks? o_O
03:40 < ljharb> the always method on a promise?
03:40 < aandy> yes
03:40 < ljharb> that method's not generally available otherwise
03:40 < Omega_> Nexxy: I wonder if Async.js might be useful for me here....
03:40 < ljharb> a promise also has .done and .fail - all help you avoid nested callbacks. that's one of the points of promises
03:41  * mbalho obligatory mention of http://callbackhell.com
03:41 < aandy> ljharb: right, and why i'm a bit surprised that i've never encountered it "in the wild"
03:41 < aandy> mbalho: yup, i'm a fan of that, pasted that link many times :)
03:41 <@Nexxy> probably because most people don't use promises
03:41 < ljharb> youre looking in the wrong wilds :-) also node is on the server, so i don't know why you'd encounter it
03:41 < ljharb> also https://gist.github.com/3889970
03:42 < aandy> ljharb: thanks. but why wouldn't that be as applicable for server side programming? it's still callback based no matter where you use your javascript
03:43 < ljharb> thats not what i meant - i meant, you can't browse the source of a server.
03:43 < ljharb> i use promises all the time
03:43 < aandy> oh okay. by node "wild" i meant modules, github and such. but i may just have missed it
03:43 < aandy> i'm feeling more embaressed than anything 
03:45 < ljharb> no need. there's hundreds of great patterns, nobody knows them all.
03:45 < aandy> i'm just glad to have stumbled upon it. thanks again for the link :)
03:50 < aandy> obviously i still need to read up on it further, but what took me by surprise was that all these parallel modules with queues did what i perceive to be one of the benefits of promise.
03:51 < aandy> i wonder what made node drop promise and go with callbacks  (node itself i mean)
03:52 < mikola> Has anyone got a moment to take a look at a library I am working on?
03:52 < mikola> https://github.com/mikolalysenko/rle-core
03:52 < mikola> basically it is a bunch of routines for dealing with large, sparse volumetric data
03:57 < bingomanatee> : is there an official way of documenting your version changes in nom / package.json
03:57 < tellnes> What would be a good way to detect that a stream has old interface to call `wrap` on it?
03:57 < Omega_> Is there a more popular equivalent to https://github.com/caolan/async ?
03:58 < SomeoneWeird> Omega_, MORE popular?
03:58 < SomeoneWeird> that's one of the most popular packages in npm
03:58 < bingomanatee> no
03:58 < Omega_> SomeoneWeird: Awesome :)
03:58 < Omega_> Just wanted to make sure I wasn't accidentally picking a fringe library
03:58 < SomeoneWeird> nop
03:59 < SomeoneWeird> it's awesome :)
03:59 < aandy> bingomanatee: semver
03:59 < Omega_> It looks great
03:59 < Omega_> Comprehensive
03:59 < bingomanatee> server - is that a command line directive or  a package.json property?
03:59 < aandy> bingomanatee: e.g. isaacs' https://github.com/isaacs/node-semver
04:03 < bingomanatee> thanks but I don't think you are following me.
04:03 < bingomanatee> What is the best way to document what changes prompted a particular version of your module?
04:04 < bingomanatee> i.e., in release a.b.cx,  I changed "a, b, and c"
04:04 < ljharb> good commit messages on github
04:04 < ljharb> and tag your releases.
04:04 < blazes816> changelog
04:04 < ljharb> good commit messages means that your git log is a changelog :-p
04:04 < ljharb> thats the point of git. change control.
04:05 < bingomanatee> change log sounds like what I am looking for; what are the standards for it, or is it just an other readme?
04:05 < blazes816> if your commits are 1-to-1 with your versioning
04:05 < blazes816> just like a readme
04:05 < aandy> ["testing", "still trying to resolve that bug..."].indexOf(GOOD_COMMIT_MSG) < 0 :(
04:05 < blazes816> no standard.  just what you said basically in a file
04:08 < ljharb> this is javascript. there aren't "doc" formats all over the place. just make it human readable.
04:08 < bingomanatee> Thankis. 
04:13 <@mbalho> ₀₁₁₀₁₁₁₁₀₁₁₀₀
04:15 < airandfingers> soooo... derby, meteor, flatiron, or SocketStream?
04:16 < ljharb> not meteor i hope. it doesn't work at all without JS
04:16 <@mbalho> frameworks are for weenies
04:16 <@mbalho> yea i said it
04:16 < airandfingers> isn't flatiron basically a DIY framework, similar to Express?
04:17 < woah> should the non-weenie developer re write everything every time?
04:21 <@mbalho> false dichotomy, use many modules instead of 1 module
04:21 < ckknight> people like all-in-one solutions because it takes away the mental pressure of having to figure out how to stitch them all together
04:22 < roger_rabbit>  |   26 root      RT   0     0    0    0 S    0  0.0   0:00.00 watchdog/7                                                
04:23 < roger_rabbit> woah sorry
04:23 < airandfingers> how is using flatiron different from just using many modules?
04:24 < boane> coming from a java background, moving towards a full JS stack - client side js + nodejs + mongo for a new web application.
04:24 < woah> mbalho: ah misunderstood
04:24 < woah> roger_rabbit: no worries
04:24 < boane> currently trying to zero down on a framework
04:24 < boane> expressjs is the way to go?
04:24 < ljharb> boane: make sure to forget all you know about java first, and you'll do fine :-)
04:24 < airandfingers> expressjs is a start.. flatiron builds on it.. i'm a few hours into the research, myself
04:25 < airandfingers> ljharb: lol
04:25 < airandfingers> boane: check out http://ocdevel.com/blog/nodejs-frameworks-comparison for a good starting point (as far as i know)
04:26 < boane> is there any equivalent of annotations in nodejs as we have in java... some thing which would inject stuff like caching, auditing, etc by just adding an annotation to a method call?
04:26 < boane> thanks airandfingers will check the link and flatiron
04:26 < ckknight> boane: you can pass functions as arguments, so I can make a memoize function and then do someFunc = memoize(function () { ... })
04:27 < thealphanerd> boane: http://martinfowler.com/articles/injection.html
04:28 < thealphanerd> stuff like that/
04:28 < thealphanerd> http://fluidproject.org/products/infusion/
04:28 < boane> ckknight, ah... didnt know about memoize... looks neat
04:28 < thealphanerd> this framework is designed to do IOC
04:28 < thealphanerd> they have an "in dev" node js framework
04:28 < ckknight> boane: memoize is just an example of a function one can write.
04:28 < ckknight> boane: you can do it with any function
04:51 < mscdex> node.js rules!
04:51 < AAA_awright> woo
04:52 <@Nexxy> mscdex, \o/
04:53 < mscdex> \o/
04:54 < ckknight> ~~~\o/~~~
04:54 < ckknight> help, I'm drowning!
04:56 < aandy> >->C,.__
05:05 < cyberrodent>  /window hide 3
05:06 < SomeoneWeird> NOPE
05:19 < Raynos> for those that have opinions about streams of objects ( https://github.com/joyent/node/pull/4581 ). Now's a good time to voice support for it in 0.10
05:30  * mbalho +1'd
05:31 < mscdex> what is this streams of objects stuff anyway?
05:32 < mscdex> foo.emit('data', {bar: 'baz'}); ?
05:32 < mscdex> :S
05:32 < Raynos> mscdex: yes
05:32 < Raynos> a classic example is https://github.com/dominictarr/JSONStream
05:34 < mscdex> can't that mess with most people's listeners that are expecting Buffers as usual?
05:35 <@mbalho> nope
05:36 < Raynos> mscdex: it's optin  and based on what's in the stream
05:36 < Raynos> a stream implementor let's you know whether it's a stream of Buffer's, strings in some encoding or a stream of arbitrary data
05:37 < Raynos> if the latter it may still confirm to some schema like scuttlebutt ( https://github.com/dominictarr/scuttlebutt ) where it's either a hash representing the vector clock or a triplet representing an update
06:23 < nonuby> is there a sane way to expose my own functions such as pad in a jade template without polluting global namespace?
06:26 < runvnc> its a dsl. everything is global
06:26 < runvnc> all of the concern about polluting the global namespace is really overdone to the point of being insane
06:28 < nonuby>  runvnc, I found in expressjs app.locals works, so more comfortable with tha
06:30 < Raynos> runvnc: he means extending global scope to expose functionality in a template which is silly
06:30 < Raynos> as for globals, there should be zero globals, always.
06:32 < nonuby> app.locals in merge with the viewData, so comfortable enough with that
06:32 < nonuby> i can namespace the viewdata to withs locals.name and then app.locals.utils yields utils.pad util.coerce etc..
06:34 < Raynos> Have you tried prepending your namespaces with com.nonuby ?
06:34 < nonuby> lol
06:34 < ljharb> trying to put the java back in javascript?
06:36 < nonuby> no, my point was that instead of { firstName: 'x', pad: function() { }, status: 'good' } the view data is { locals: { firstName, status}, helpers: { pad: fn () {}, coerce: {} }}  i think thats a fair use. like any rule or paraody (enterprise java)  there nothing set in stone
06:42 < Raynos> nonuby: what about not putting logic or helpers into your template in the first place
06:44 < nonuby> its not so much logic but formatting, e.g. pad(1,2) -> '01', coerce(130,100) --> 100, formatMoney(1200, '$1,200'). the one time a purist told me a view data should purely be strings it was quickly retracted after some real world experience
06:44 < Raynos> view data should purely be strings
06:54 < mscdex> i'd rather do the formatting and stuff in the view
06:54 < mscdex> different views might have different formatting
06:58 < Raynos> id rather have my ifs in javascript then in templates
06:58 < Raynos> but I get what you mean. I'm not sure whether I can write language agnostic templates
07:00 < jsonified> othiym23: you may want to check out komodo IDE it has a nice interface for debugging nodejs. I am not sure if the debugger is avail in the free komodo edit tho.
07:08 < aculich> is there anyone here with experience installing grunt on a system running Ubuntu 12.10?
07:11 < segomos> nonuby: in jade you can build those helpers in the template 
07:12 < nonuby> segomos, that would be a lot of repetition though right? unless am I missing something 
07:12 < segomos> it's less repetition than injecting the helper function every time you render the template
07:13 < nonuby> i dont have to do it everytime i just set app.locals.pad = function() { } once
07:14 < nonuby> if there several things on the page that need padding that would get repetitive if done purely in jade? 
07:14 < segomos> it wouldn't
07:14 < nonuby> *goes to read the manual*
07:14 < segomos> your way works, so does https://gist.github.com/4522776
07:15 < segomos> your way is easier for more complicated helpers
07:17 < Raynos> embedding functions directly into your template :D
07:17 < segomos> i like the separation, just mentioning another way to do what he was axing about
07:17 < segomos> :)
07:20 < nonuby> thanks everyone, i think ive settled on app.locals for global formatting functions and res.locals for one off, granted there a multitude of ways to do things these seem to work for them, admittedly only found out about these via express migration guide
07:41 < reuf> how do i include external script
07:42 < reuf> if im submitting a delete request over html form 
07:43 < reuf> in express.js
07:43 < reuf> can i use app.del to execute delete query?
07:45 < SomeoneWeird> yes
07:52 < yanivge> #socket.io
07:53 < v_y> which sqlite api do you recommend?
07:57 < yanivge>  hi guys i need a little help here [09:52] <yanivge> i use socket.io as a push service and Apache as my webserver [09:52] <yanivge> i am able to push notification to my browser but only to a single connection [09:52] <yanivge> here is my code: [09:53] <yanivge> http://pastie.org/5677410
08:07 < GreenDog> can someone point yanivge to something that can explain how node works based on the pastie he provided?
08:24 < mscdex> yanivge: you're in an infinite loop
08:37 < rootcoma> is there a method for waiting for asynchronous callbacks without nesting logic? I want to get 4-5 values from redis, then send a response based on that.
08:39 < substack> var pending = 5; function done () { if (--pending > 0) return; /* ... logic goes here ... */ }
08:39 < substack> rootcoma: then add `done` as the callback to your redis calls
08:39 < substack> alternatively you could use an async lib but it's usually less hassle to inline a counter yourself
08:41 < substack> oh neat it looks like gozala wrote a very narrowly-focused lib for handling pending calls https://npmjs.org/package/pending
08:43 < Raynos> rootcoma: https://github.com/colingo/execute
08:44 < Raynos> substack: pending is just an abstraction for a very minimal subset of promises
08:45 < substack> Raynos: minimal subsets are the best kind
08:45 < Raynos> substack: yes but I dont think he's looking for a promise.
08:46 < substack> promises are overbroad in their scope for my tastes
08:49 < rootcoma> Interesting Raynos.. at first sight it looks just as complicated.. but it does exactly what I asked
08:49 < Raynos> rootcoma: execute shines if you want to do 5 things in parallel or something, it's also a nice way to unpack all the data with names
08:50 < rootcoma> well, that is what I am doing, grabbing 5 user values from redis, then doing something.
08:56 < rootcoma> I'm just picking up node after a few months break... these callbacks are mind numbing
08:59 < Raynos> rootcoma: https://github.com/gozala/reducers callbacks be gone.
09:04 < rootcoma> thanks again Raynos, I'm at the end of the night here.. all of this looks so unpleasant.. it looks right though
09:04 < Raynos> EVERYTHING IS UNPLEASANT
09:04 < Raynos> There is no such thing as nice code
09:04 < Raynos> unless you write ruby
09:05 < rootcoma> hehehe
09:06 < Raynos> or literate coffeescript
09:06 < Raynos> I heard that's pleasant
09:34 < rootcoma> just curious if this is the right thinking http://pastebin.com/LTeNERFn
09:48 < andu> rootcoma, o_O
09:48 < SomeoneWeird> yea wot
09:51 < andu> rootcoma, two things... with that way your going to have ALOT of back and forth communication if your going to do that for everything that gets styled. better to have one object with all the properties and just send that all through at once. and... are you storing that inside the socket.io layer?
09:53 < rootcoma> for part 1, no comment, for part 2, yes I am making a chat. I store the color they want the back of their messages to be, and when they connect I grab them, and put that info in the socket
09:54 < andu> so is that working? i've never seen syntax like that
09:54 < rootcoma> yes, I can store values like that, the first example 'BEFORE' is working
09:54 < rootcoma> I have 4-5 nested redis calls like that, storing style information in the users socket
09:55 < andu> okay cool, link when your chat is ready :) 
09:55 < stagas> rootcoma: https://github.com/caolan/async
09:56 < rootcoma> test.rootcoma.net
09:56 < andu> I just built a local ip lookup system :)   takes ip and gives you location name with lat/long :D
09:56 < andu> no online api needed which is awesome
09:57 < SomeoneWeird> theres already lots of them >.
09:57 < SomeoneWeird> >.>
09:57 < andu> yeah I used one of their databases
09:58 < SomeoneWeird> https://github.com/kuno/GeoIP
09:58 < SomeoneWeird> still, nice
10:00 < andu> i prefer my way thanks
10:00 < andu> but did have a look, im using the same DB they are
10:00 < SomeoneWeird> :)
10:18 < Aartsie> Hello! 
10:18 < Raynos> rootcoma: that's not how you use callback-reduce
10:19 < Aartsie> Is there an option with node to develop whitout a restart of the application ?
10:19 < andu> Aartsie, best way so far is auto restart with nodemon
10:20 < Aartsie> andu: Ok thanks i will check that :) 
10:20 < andu> npm install nodemon
10:20 < andu> nodemon node index.js
10:20 < andu> nodemon index.js
10:20 < andu> sorry
10:20 < andu> :)
10:21 < Aartsie> andu: Thank you :) 
10:21 < andu> pleasure
10:21 < Aartsie> Other question when i made a module do i have to add it to the npm ? 
10:21 < rootcoma> Raynos, d'oh, I'll have to take a closer look.
10:22 < andu> Aartsie, nope do you want to see template?
10:22 < Aartsie> yes please 
10:22 < andu> Aartsie, https://github.com/fluentart/templates/tree/master/01_modules
10:23 < Aartsie> andu: thank you :) i'm new with Node.js before i have programming php
10:23 < andu> you will love it
10:25 < Aartsie> andu: haha i hope it, till now i have some big problems with it haha
10:26 < andu> yeah, its still new so not 100% smooth development, but it is worth it
10:28 < Aartsie> its not that it doesn't work more the way i have to think by node :) 
10:28 < andu> yes it will stretch your mind a bit, and make you smarter
10:29 < andu> :) php did damage
10:29 < Aartsie> andu: Hahaha !
10:29 < andu> the weirdest thing is the passing of functions into functions( ) then have them run when function( ) is done
11:25 < mdedetrich> anyone here use mongoskin?
11:29 < enaqx> why not using mongo-native?
11:31 < RLa> enaqx, too verbose?
11:38 < CoverSlide> yeah, most people dont like mongo-native
11:38 < CoverSlide> lots of people prefer mongolian because it's similar to mongoshell
11:39 < CoverSlide> i guess mongoskin has the same goal, except it's a wrapper around mongo-native, whereas mongolian has its own set of parsers
11:42 < beelzebobby> I've tried looking through the logs and I can't seem to find anything. Does anyone have any recommendations for a book on Node for someone who's familiar with what node is and does and how JS works client-side?
11:43 < CoverSlide> node beginner is a good guide on node
11:44 < CoverSlide> js on the client side ... mdn is a good resource 
11:46 < beelzebobby> I meant to say that I know JS on the client side and that I know what and why of Node.
11:46 < beelzebobby> I just don't know how to get started doing something tangible with Node.
11:47 < geNAZt> you would like to experiment with node ?
11:48 < CoverSlide> maybe try smashing node
11:49 < geNAZt> pure hate against youtube..... i cant watch a 720p without laggs wtf
11:51 < CoverSlide> geNAZt: maybe you should hate your internet provider
11:52 < geNAZt> erm no
11:53 < geNAZt> everything loads fine, i got a dl for debian around 8,4 MB/s so the internet should be fine
11:53 < geNAZt> since the new design of youtube i have lag
11:54 < Riko`Programmere> Hi there :)
11:54 < geNAZt> hi
11:54 < Riko`Programmere> Can someone help me with a clean install of node.js?
11:54 < geNAZt> os ?
11:54 < Riko`Programmere> I'm getting a weird error
11:54 < Riko`Programmere> centos 
11:55 < geNAZt> gcc version ?
11:55 < Riko`Programmere> gcc (GCC) 4.1.2 20080704 (Red Hat 4.1.2-46)
11:55 < CoverSlide> maybe html5 video on linux?
11:55 < geNAZt> no i have win7 with chrome and flash
11:56 < CoverSlide> oh i though you are saying you are on debian
11:56 < geNAZt> my dev server is
11:56 < Riko`Programmere> This is the error i get when configuring:
11:57 < Riko`Programmere> [****@**** node-v0.8.17]# ./configure
11:57 < Riko`Programmere>   File "./configure", line 360
11:57 < Riko`Programmere>     1 if options.unsafe_optimizations else 0)
11:57 < Riko`Programmere>        ^
11:57 < Riko`Programmere> SyntaxError: invalid syntax
11:57 < CoverSlide> Riko`Programmere: you need Python 2.7 to install
11:57 < CoverSlide> Riko`Programmere: what version of python do you have
11:57 < SomeoneWeird> you need to updatre python
11:58 < SomeoneWeird> update*
11:58 < SomeoneWeird> yeah ^^
11:58 < Riko`Programmere> Python 2.4.3 is what i have installed..
11:58 < Riko`Programmere> so 2.7 fixes it.. Gona try that :) Thx!
12:02 < geNAZt> i think the hd servers from youtube are overloaded
12:02 < SomeoneWeird> lol
12:03 < geNAZt> oh yes..... i forgot youtube cant overload :P
12:17 < geNAZt> found the fault :D
12:17 < geNAZt> it was the dns
12:22 < Sanctumed> Thanks geNAZt ;) It worked, I now have node installed & socket.io too :) 
12:22 < geNAZt> np and gz :D
12:23 < CoverSlide> free as in bugs?
12:23 < CoverSlide> bugs are always free
12:24 < SomeoneWeird> lol
12:40 < Sicp> this is so strange; I've done "npm install mongodb -g" and then in a file where I want to use it I've done "require('mongodb');" and wanted to open a DB connection
12:40 < SomeoneWeird> get rid of -g
12:40 < Sicp> I've also started mongo daemon and I am able to be dropped into the shell
12:41 < Sicp> why? I want it globally
12:41 < Sicp> right?
12:41 < SomeoneWeird> nope
12:41 < SomeoneWeird> doesn't work that way
12:41 < SomeoneWeird> do be require()'d in a file, it has to be installed locally
12:41 < SomeoneWeird> global installs are only for CLI apps
12:41 < Sicp> so for every project I want to use some module in, I have to either install it there or have it listed as a dep. in package.json?
12:42 < SomeoneWeird> yes
12:43 < geNAZt> no you dont must
12:43 < geNAZt> you can link a global into local space
12:43 < Sicp> not with require, as far as SomeoneWeird is saying
12:43 < geNAZt> https://npmjs.org/doc/link.html
12:43 < SomeoneWeird> that's bad practice, geNAZt 
12:43 < SomeoneWeird> you shouldn't do that
12:43 < geNAZt> it works
12:43 < SomeoneWeird> never said it didn't
12:43 < Sicp> I see a lot of tutorials that do what SomeoneWeird is saying, but 1 tutorial did the -g thing
12:44 < Sicp> I found it more handy
12:44 < Sicp> well, quicker
12:44 < Sicp> so where does mongodb sit now that I have done the -g?
12:44 < SomeoneWeird> probably something like /usr/local/node_modules
12:44 < Sicp> it created a tmp in my home directory, but where is it so that I can remove it maybe
12:44 < geNAZt> under node_modules/ in your local dir
12:45 < SomeoneWeird> find / -wholename "node_modules/mongodb"
12:45 < SomeoneWeird> or something
12:45 < Sicp> yep, already there
12:45 < Sicp> /usr/lib/node_modules
12:46 < SomeoneWeird> :)
12:46 < Sicp> isn't there an npm prune for this? or maybe that's just for when unlisting a dep from package.json
12:46 < SomeoneWeird> yeah
12:46 < SomeoneWeird> the latter
12:46 < Sicp> you then prune and it removes it from your directory
12:46 < Sicp> I just rm -rf this one
12:46 < SomeoneWeird> so basically just cd to the working dir and then npm install <package> and it'll end up in ./node_modules
12:46 < SomeoneWeird> yeah
12:47 < Sanctumed> How can I work with MySQL in NodeJS? 
12:48 < Sicp> shouldn't you be using non-blocking DB?
12:48 < geNAZt> https://github.com/felixge/node-mysql
12:48 < Sicp> you've got Redis, Mongo, Couch, etc..
12:48 < SomeoneWeird> I use redis and mongo in my app, but I still use mysql for some parts
12:48 < SomeoneWeird> sometimes there's a reason
12:48 < Sanctumed> Sorry Sicp :P Im a noob at nodejs :p
12:49 < Sicp> same 
12:49 < SomeoneWeird> so yes, what geNAZt linked too, or use sequelizejs.com if you want an ORM
12:49 < felixge> Sicp: non-blocking db? As in - telling you it saves your data, but really hasn't sync'ed to disc? Yeah, use mongo :)
12:49 < geNAZt> document based database systems arent the top of everything
12:49 < SomeoneWeird> lold felixge 
12:49 < Sicp> I would trust someone who has node-mysql to be correct :P 
12:50 < Sicp> it's just what I've heard in the past
12:50 < felixge> Sicp: try out things for yourself. nosql is overrated
12:50 < felixge> :)
12:50 < SomeoneWeird> I much rather redis over mongo too, but I suppose it's just preference
12:50 < SomeoneWeird> that it is
12:50 < felixge> it really depends on what you're doing
12:50 < felixge> most of these database are not interchangeable for most tasks
12:53 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:04 < vslinko> hello all, i'm try to use jade, and have question — how to change only string, not all block with inheritance?
13:05 < vslinko> for example i want change html class on every page
13:09 < `3rdEden> is buffer#byteLength a c++ call?
13:09 < rudiX> Hello
13:09 < rudiX> I am trying to npm install gd
13:09 < rudiX> http://pastebin.com/fz97wjxf
13:10 < geNAZt> gd is too old for the current nodejs
13:10 < geNAZt> node-waf was replace by node-gyp
13:13 < rudiX> thanks
13:23 < Sanctumed> I dont understand socket.io even one bit :/
13:24 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:24 < geNAZt> Sanctumed: where is the problem ?
13:24 < geNAZt> socket.io provides connection to a client via near realtime connections
13:25 < geNAZt> like websocket, flashsocket, forever iframe, xhr polling
13:25 < Sanctumed> Well, let's start by saying that I don't even understand nodejs that much haha
13:26 < Sanctumed> Let me tell you that I need to create a webgame with realtime connections. I first have looked into websockets, then nodejs & now socket.io 
13:26 < Sanctumed> And even now I don't know shit about it :P
13:26 < iksik> websockets == socket.io (sort of..)
13:26 < Sanctumed> :p
13:27 < geNAZt> nodejs at first is a server thing, it gives javascript the ability to run as server language
13:27 < Sanctumed> Currently I am googling all over the place, just to find some nice howto's and tutorials on nodejs and socket.io
13:27 < geNAZt> so you can write async javascript code with http servers or filesystem access
13:27 < iksik> Sanctumed: try here http://socket.io/ ;-D
13:28 < Sanctumed> I have been there, iksik :p but nope, I think I have to delve into the world of nodejs first
13:28 < Sanctumed> xd
13:28 < geNAZt> http://www.nodebeginner.org/
13:28 < Sanctumed> And geNAZt, I know :P serverside js is awesome :) at least for me, haha :p
13:28 < Sanctumed> Hmmm
13:29 < Sanctumed> I'm gonna read up on that website geNAZt ;)
13:29 < Sanctumed> Looks like a solid website 
13:29 < geNAZt> it is good for the beginning, understanding what node does, what it is for and what not
13:30 < Sanctumed> Thanks man :)
13:30 < Sanctumed> It's really gonna help me out :)
13:30 < Sanctumed> Well, I hope
13:30 < Sanctumed> haha
13:44 < squeakytoy> Hm, what is the stdout called util.puts?
13:44 < squeakytoy> why*
13:45 < SomeoneWeird> ?
13:46 < Sanctumed> geNAZt - the tutorial you gave me.. that tutorial focusses on a nodejs that has been installed locally. I have it installed on a webserver. And I want to create a socket server via nodejs.. 
13:46 < Sanctumed> Do you still think that tutorial is the right one to choose?
13:47 < SomeoneWeird> yes
13:47 < SomeoneWeird> just use your webserver instead of localhost
13:47 < Sanctumed> How should I do that? Just change the IP where it's listening to the IP of my webserver? 
13:48 < SomeoneWeird> what bit of code would that be?
13:49 < Sanctumed> Well, I aint that far that I define a IP address to listen to.. but I am coming across this bit of code:
13:49 < Sanctumed> var http = require("http");
13:49 < Sanctumed> http.createServer(function(request, response) {
13:49 < Sanctumed>   response.writeHead(200, {"Content-Type": "text/plain"});
13:49 < Sanctumed>   response.write("Hello World");
13:49 < Sanctumed>   response.end();
13:49 < Sanctumed> }).listen(8888);
13:49 < SomeoneWeird> right, and ?
13:50 < Sanctumed> I dont understand how this would work if I already would be able to use my webserver online :P I can go to my domain/index.html and index.html would show up.. how would that serverside code combine with the index.html
13:50 < Sanctumed> ?
13:50 < SomeoneWeird> it doesn't
13:51 < Sanctumed> Well.. what can I do with that code then haha
13:51 < SomeoneWeird> basically in this case, response.write("Hello World"); is your index.html
13:51 < SomeoneWeird> just follow the tut a little longer and see if you understand
13:51 < Sanctumed> Okay :P
13:55 < reuf> i have jslint installed
13:55 < reuf> how do i now
13:55 < reuf> check my code with it
13:56 < reuf> how doi execute it
13:57 < SomeoneWeird> how did you install it?
14:02 < Sanctumed> If my server-sided code would be this:
14:02 < Sanctumed> var http = require("http");
14:02 < Sanctumed> function onRequest(request, response) {
14:02 < Sanctumed>   console.log("Request received.");
14:02 < Sanctumed>   response.writeHead(200, {"Content-Type": "text/plain"});
14:02 < Sanctumed>   response.write("Hello World");
14:02 < Sanctumed>   response.end();
14:02 < Sanctumed> }
14:02 < Sanctumed> http.createServer(onRequest).listen(1337);
14:02 < Sanctumed> console.log("Server has started.");
14:03 < Sanctumed> And my domainname is mydomain.com
14:03 < Sanctumed> How would I reach this code via my browser?
14:03 < geNAZt> Sanctumed: please use a paste service like: http://hastebin.com/
14:03 < geNAZt> http://mydomain.com:1337/
14:03 < Sanctumed> srry :p
14:04 < Sanctumed> Okay, well, I tried connecting to that port & domainname.. the connection just times out and my console on my server doesn't put out anything
14:05 < geNAZt> then you have firewall between it
14:05 < Sanctumed> well
14:05 < Sanctumed> fuck
14:05 < Sanctumed> xd
14:05 < geNAZt> do you need the webserver on port 80 ?
14:05 < Sanctumed> Why would I need it on port 80?
14:06 < geNAZt> because it is the normal http port
14:06 < geNAZt> if u ran something like apache it normally binds to this port
14:07 < Sanctumed> Well, look. I can already go to like http://www.mydomain.com/index.html or something  like that.. I don't think I would need it on port 80
14:07 < geNAZt> then you have something on port 80
14:08 < geNAZt> shut it down and tell nodejs to listen to port 80
14:08 < Sanctumed> Already tried, and it even told me this:Forbidden
14:08 < Sanctumed> You don't have permission to access / on this server.
14:08 < Sanctumed> (in my browser)
14:09 < SomeoneWeird> 0.o
14:09 < SomeoneWeird> then you have something broke
14:09 < Sanctumed> My apologies if I'm making stupid mistakes here, I have not worked with this stuff yet :p
14:09 < SomeoneWeird> why not do development locally and then push remote ?
14:09 < SomeoneWeird> will make it much easier
14:09 < squeakytoy> im new to node.js, why would you want to use util.puts instead of console.log?
14:09 < Sanctumed> xD
14:10 < Sanctumed> I feel so dumb everytime I start learning new languages.. :P
14:11 < SomeoneWeird> squeakytoy, afaik they're the same
14:11 < Sanctumed> Anyway, SomeoneWeird - I dont think I need an http server. I already have something like Apache on my server running. Might that be a problem? That those two (Apache and nodejs HTTP server) are fighting with each other?
14:11 < SomeoneWeird> yes
14:11 < Sanctumed> well 
14:12 < Sanctumed> then that's my problem..
14:12 < Sanctumed> xd
14:12 < Sanctumed> And I aint shutting off Apache haha - I need Apache :P
14:12 < SomeoneWeird> heh
14:12 < Sanctumed> Anyway
14:12 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:12 < Sanctumed> Say I want to create a different kind of server
14:12 < Sanctumed> Like a socket server
14:13 < Sanctumed> How would I take on such a task?
14:13 < geNAZt> it is easier for to install nodejs on your local maschine
14:13 < geNAZt> and make the tutorial on your maschine
14:13 < geNAZt> so you dont conflict with any server instances
14:13 < Sanctumed> :'( 
14:13 < Sanctumed> xD
14:16 < rootcoma> stagas: async is awesome, thanks
14:22 < Industrial> does fs.watch work recursively on a directory?
14:22 < squeakytoy> omg, i love nodev
14:22 < Industrial> or should I recursively fs.stat each node, find the directories and watch those aswll?
14:23 < geNAZt> nodev is awesome :D
14:24 < Industrial> squeakytoy: was that in reply to my question?
14:24 < squeakytoy> no, it was more like an expression of happiness
14:25 < squeakytoy> sorry :|
14:25 < Industrial> \:D/
14:25 < Industrial> np
14:25 < geNAZt> squeakytoy: maybe you should look into https://github.com/arunoda/nariya
14:25 < geNAZt> its even more awesome :D
14:26 < squeakytoy> oh CIS, i dont that quite yet :P
14:26 < geNAZt> :D:D
14:27 < squeakytoy> i dont understand why everyone is using single quotes everywhere -.-
14:27 < squeakytoy> in all examples, in all modules
14:28 < Industrial> because it compiles and they like it like that
14:37 < Sanctumed> Looking at this code: http://pastebin.com/kNSer1Fs
14:37 < Sanctumed> What does the last line do?
14:37 < Sanctumed> exports.start = start; << this line
14:38 < Sanctumed> I know that it puts the start function inside that variable, but, where is "exports" coming from?
14:39 < Industrial> http://google.com/?q=nodejs+exports ?
15:01 < Industrial> Has anyone worked with promises? I don't get it yet :-\. tutorials explain it like 'well if you have a promise then you can .then(another thing) and it works magically' but the thing is; I don't have any promise yet. Where do I start out? I have an algorithm or rather a series of steps I want to do, but I don't see how to implement it using promises (for example, with Q)
15:03 < medikoo> Industrial, to have promise you need to have some async operation, do you do any?
15:04 < Industrial> yeah, say I want to fs.readdir, then for each node, fs.stat then for each node if node.isDirectory() do a fs.watch() and also recurse into that directory.
15:04 < Industrial> so potentially I could do each stat in parralel
15:05 < Industrial> and also each recursion :)
15:08 < Industrial> so I should start out with var readdirPromise = Q.fcall(fs.readdir, dir); ?
15:11 < Industrial> medikoo: e.g. https://gist.github.com/d3178e093ceed6b7f6ce/494a615d87822ed46183648aa1341afae28893d7
15:11 < medikoo> yes, you should first "promisify' each asynchronous fn, and then just play with promises
15:11 < stagas> Industrial: promises: you do some thing and get a variable back. you pass that around to other things that accept promises, or resolve it with a callback
15:12 < Sanctumed> Im getting the hang of HTTP servers in nodejs
15:12 < Sanctumed> yay
15:12 < medikoo> Industrial: check also this: https://github.com/medikoo/deferred#promisify---working-with-asynchronous-functions-as-we-know-them-from-nodejs
15:13 < Industrial> tangible examples! thanks
15:13 < stagas> Industrial: so in short, either all of your stack is promises or there's no point in using them and use some async lib
15:14 < Industrial> stagas: if it maps back to a callback with error, value then you can use 20 different async libs + promises all at once, right? :)
15:15 < stagas> Industrial: sure you can do whatever, I'm just saying they only work as a pattern efficiently when everything you use accepts promises as arguments
15:21 < reuf> hello - im trying to proof my code with jslint
15:22 < reuf> its complaining about named parameters - sais use named params - so i put them like this: var param1 = arguments[0],  param2 = arguments[0]; but still jslint complains about named parameters
15:22 < reuf> what am i doing wrong?
15:23 < squeakytoy> Hey all. If I would like to include another js-source file (and make everything in it global), what else can I use? I dont think require() is the right tool.
15:35 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:38 < niggler> reuf jslint is more about style than function
15:39 < Iszak> Do people decouple the express.js server and socket.io server for performance? If so, how do people are the sessions?
15:41 < geNAZt> i use expressjs and socket.io on the same http stack
15:41 < geNAZt> and i runs fast and fine
15:42 < reuf> niggler: i understand that - but the boss orders all code must pass it
15:42 < reuf> question
15:43 < reuf> im getting a warning from jshint
15:43 < reuf> about read only
15:43 < reuf> Read only - jshint error
15:45 < reuf> i found this post on http://stackoverflow.com/questions/3705035/javascript-jslint-throws-read-only
15:45 < reuf> but it doesnt do it for me
15:54 < mansoor-s> reuf, I ran into that problem
15:55 < mansoor-s> if i understand what you said,
15:55 < reuf> yes
15:55 < mansoor-s> what I did was pass the session cookie that was set by the web server
15:55 < mansoor-s> to the websockets server
15:55 < mansoor-s> the session is persisted on redis
15:56 < reuf> i dont get it
15:56 < mansoor-s> so webserver sets the session and gives the client a cookie, when the client connects to the websockets server, it gives it the cookie given to it by the webserver
15:56 < mansoor-s> in that cookie, you have the session ID, which you can then look up against redis
15:57 < mansoor-s> or some other persistence layer
15:57 < mansoor-s> that make sense?
15:58 < mansoor-s> ohh shiittt
15:58 < mansoor-s> haha
15:58 < mansoor-s> wrong person
15:58 < mansoor-s> :p
15:58 < mansoor-s> Iszak, ^^
15:59 < Iszak> mansoor-s yeah i figured as much but did you use any "middleware" for that? or did you simply do a look up upon connection?
16:00 < mansoor-s> hmm no idea
16:00 < mansoor-s> let me look at the code
16:00 < mansoor-s> this is from way back when i was just learning node
16:00 < geNAZt> socket.io uses auth methods to get the session
16:01 < Iszak> ah yes, I see.
16:01 < geNAZt> http://hastebin.com/tutoqomoqu.js
16:01 < mansoor-s> hmm yah
16:01 < geNAZt> what u need is a sessionStore and the utils from expressjs
16:01 < mansoor-s> i wasn't using socket.io directly
16:01 < mansoor-s> i was using now.js
16:02 < Iszak> geNAZt NEVER!
16:02 < Iszak> geNAZt it's okay I'm using the connect stuff, will just do that.
16:03 < snyp> Hi.. I have a little doubt about the usage of 'this' inside callback functions. Suppose I have an object(which inherits from event emitter) and I do myOb.addListener('signal', function(){this.gotSignal=true;}); --From the global scope, does 'this' here refer to myOb?
16:04 < snyp> I am asking because using 'this' here _seems_ to be working and refering to myOb somehow.. 
16:04 < geNAZt> snyp: no
16:04 < geNAZt> it refers to the event object
16:04 < Iszak> Is it considered good practice to separate socket.io/web server?
16:05 < snyp> geNAZt: why does it refer to the event object, can you explain plz?
16:05 < geNAZt> Iszak: depends on what u have. if you have a db server and a normal webserver and a third server i would seperate it
16:06 < geNAZt> http://stackoverflow.com/questions/183214/javascript-callback-scope
16:06 < Iszak> geNAZt well just for throughput, if both are running on the same process they're unable to throughput as much?
16:07 < geNAZt> i think the http module is well enough to troughput enough
16:08 < geNAZt> the next limit you will have is the iptable if you use long time connections
16:08 < squeakytoy> if anyone is bored: "Is there a way to include JavaScript source files in node - ignoring the module pattern" - http://stackoverflow.com/questions/14305198/is-there-a-way-to-include-javascript-source-files-in-node-ignoring-the-module
16:08 < geNAZt> and then of course the connection
16:09 < Virunga> geNAZt: did this refer to the global object if the function is a global function and a closure?
16:10 < Virunga> does*
16:12 < andrepadez> can anyone help me with an Express+ejs problem?
16:16 < Iszak> geNAZt it just feels like my app.js is becoming too big and unwieldily, I want to split it up into 2 processors which app.js would dispatch passing common variables. Sounds reasonable?
16:17 < Iszak> plus by having two processes, if anything is blocking it should in theory allow more throughput, no?
16:17 < geNAZt> yes it does
16:17 < geNAZt> but for that node has clusters
16:18 < reuf> if im requesting something and node brakes, how do i send 500 internal server error
16:18 < reuf> before it happens
16:18 < reuf> ?
16:18 < Iszak> geNAZt perfect, thanks.
16:19 < stagas> reuf: try catch it
16:21 < ralphholzmann> can anyone recommend a module for mocking http requests
16:21 < ralphholzmann> ?
16:24 < Sanctumed> Is there a way of not using HTTP servers in nodejs while still being able to use socket.io?
16:25 < geNAZt> no there is no way
16:26 < Sanctumed> (17:22:57) <geNAZt> no there is no way
16:26 < Sanctumed> :|
16:27 < Sanctumed> really?
16:27 < geNAZt> socket.io builds upon the http stack
16:27 < Sanctumed> Fuck.
16:27 < Sanctumed> xD
16:27 < Sanctumed> Is there any way of working with sockets in nodejs without using http servers?
16:28 < Sanctumed> Because I still want to use Apache
16:30 < Iszak> geNAZt I am not sure if clusters is what I want, because I want two different types of forked processors.
16:31 < geNAZt> you can run whatever you want in a cluster fork
16:31 < Sanctumed> geNAZt how about "ws"? Can that be used without the use of http servers?
16:32 < geNAZt> no
16:33 < Iszak> geNAZt this just creates another massive file which I want to avoid.
16:33 < geNAZt> why u dont use modules ?
16:33 < Iszak> that's what I am doing.
16:33 < snyp> http://ideone.com/migaEY <-- but here this.name is returning myobject's name.. :| 
16:34 < Iszak> geNAZt although it seems wasteful to not sure more than just the server, why not.. the session store?
16:34 < Iszak> s/sure/share/
16:35 < snyp> well i can see why it _shouldn't_ because there's no 'this' in the scope of the closure.. but then why's it still working? 
16:40 < Sanctumed> geNAZt what if I bind my HTTP server port to another port than the one used by Apache? (cause that is reason why I cannot use a HTTP server and socket server: http server will cause trouble with Apache)
16:45 < stagas> snyp: listeners are called in the emitter context
16:49 < snyp> stagas: um.. you mean the eventemitter that emits the event? so the callback gets called by  callback.apply(the_emitter) .. i am a noob in javascript actually.
16:50 < stagas> snyp: yes exactly :)
16:52 < snyp> stagas: ah.. i get it now.. thanks. 
17:15 < doughsay> does anyone know how forever terminates scripts?  I need to run cleanup code on exit, and it's not happening on the exit event nor sigint or sigkill
17:16 < Sanctumed> http://pastebin.com/Mp8T0mwZ
17:16 < Sanctumed> How come this code doesnt run on my webserver? 
17:17 < Sanctumed> However it does run locally
17:21 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:28 < squeakytoy> javascript both front-end back end has fantastic.. opportunities.. sharing JavaScript code och objects
17:28 < squeakytoy> you can define a list in a file, and use it both in front- and -backend..
17:30 < MI6> joyent/node: yangguo@chromium.org master * 926c90b : v8: Hardfloat does not imply VFPv3, only VFPv2.  Raspberry Pi is an examp - http://git.io/XxS8Rg
17:31 < andu_> Sanctumed, whats the error?
17:32 < Aartsie> how can i get the information from docs ? https://gist.github.com/9fdd914cbefda24b734f i have try to put it in an array, object and string but it looks that i have no acces to the find({}, function(err, docs){ }); scoop
17:33 < urbann> hi
17:34 < urbann> I never been able to find a good workflow with npm
17:34 < urbann> running on mac os x using a user account
17:35 < Gottox> urbann: I found a good one
17:35 < Gottox> when I start a new project npm init.
17:35 < Gottox> whenever I add a new depency vi package.json;npm install.
17:37 < urbann> I did not know about that! 
17:37 < urbann> will try it out, wait
17:58 < urbann> thanks for the tip about running npm init
17:58 < urbann> still it do not solve my problem with symlinks to executables
17:59 < urbann> I have a user account with no administration rights
18:00 < urbann> every time I want to install a package with an executable I have to create a symlink
18:01 < urbann> and sometimes it is difficult to know what files to link to
18:02 < urbann> it must be some way to solve this?
18:02 < urbann> (without having sudo rights)
18:13 < guidocalvano> is there some practical way to request content from a url from node?
18:13 < guidocalvano> http.request works, but you have to get the response by on data events
18:14 < guidocalvano> and http.get can make the request, but how do I access the data?
18:15 < Sanctumed> Whenever I look up a tutorial about socket.io, and I look at the client side code.. I see they use this: <script src="/socket.io/socket.io.js"></script>
18:16 < Sanctumed> Where did they get that file? Cause I do not have it
18:16 < Sanctumed> :/
18:18 < andu_> Sanctumed, you get it with socket.io on node server side
18:18 < andu_> automatically
18:18 < wao> sup
18:18 < Sanctumed> I need it on the client side 
18:19 < wao> any one having some experience with node-elasticsearch?
18:19 < andu_> Your not hearing me
18:19 < Sanctumed> xD
18:19 < andu_> like.. http://fluentart.com/socket.io/socket.io.js   i dont have a socket.io folder
18:19 < andu_> but it still works
18:19 < andu_> so you can source it
18:19 < Sanctumed> How does that work then? o.O
18:19 < andu_> its some socket.io voodoo
18:20 < geNAZt> it gets served out of the server code
18:20 < Sanctumed> So I am safe using just this? :
18:20 < Sanctumed>  <script src="/socket.io/socket.io.js"></script>
18:20 < andu_> well test if that loads
18:21 < Sanctumed> GET http://********.nl/socket.io/socket.io.js 404 (Not Found) ****.nl:3
18:21 < Sanctumed> Uncaught ReferenceError: io is not defined ****.nl:5
18:21 < Sanctumed> That's what I get when executing the code on client side
18:21 < geNAZt> wrong port i guess
18:22 < mansoor-s> Anyone know where I can find example usage of the AWS SDK? DynamoDB specifically, the docs are extremely cryptic
18:22 < andu_> or socket.io isnt linked with express
18:22 < geNAZt> andu_: no need for that
18:23 < andu_> rly?
18:23 < geNAZt> yes
18:23 < rootcoma> oh hey, they aren't lying it does work
18:24 < andu_> ?
18:24 < Sanctumed> Uncaught ReferenceError: io is not defined ****.nl:5
18:24 < Sanctumed> GET /socket.io/socket.io.js  ****.nl:3
18:25 < rootcoma> I had the same question as Sanctumed..
18:25 < andu_> 	var server 		= app.listen(config.httpport, config.domain);
18:25 < andu_> 	var io 			= require('socket.io').listen(server);	
18:28 < Sanctumed> Just doesn't work
18:28 < Sanctumed> dafuq
18:29 < mansoor-s> whoever wrote the docs for the node.js aws sdk should be tared and feathered
18:29 < Sanctumed> Im following this tutorial: http://howtonode.org/socket-io-auth
18:29 < andu_> Sanctumed,  pastebin your server and client side
18:30 < rootcoma> if it's port 3000, then you need to add :3000 to then end of your domain
18:30 < Sanctumed> kay hold on a second
18:30 < rootcoma> http://********.nl:3000/socket.io/socket.io.js
18:31 < andu_> and arent you working on 127.0.0.1?
18:31 < Sanctumed> i think not
18:31 < Sanctumed> http://pastebin.com/ULpZC3BF
18:31 < Sanctumed> thats my client
18:32 < geNAZt> and the server ?
18:32 < Sanctumed> http://pastebin.com/TiYjkaf4
18:32 < Sanctumed> thats my server
18:32 < Sanctumed> it is just the code from the tutorial
18:32 < Sanctumed> and not working
18:32 < Sanctumed> xd
18:32 < Sanctumed> My apologies if its a stupid mistake haha
18:33 < andu_> could perhaps be syntax tick = io.connect('localhost:3000/');
18:33 < andu_> oh and should be var tick = io.connect('localhost:3000/');
18:33 < rootcoma> could it be 127.0.0.1 vs localhost?
18:33 < andu_> always remember your var
18:34 < andu_> http://localhost:3000
18:34 < andu_> it might be finicky i duno
18:34 < Sanctumed> I am testing this stuff online by the way, on my server. Could it be that I have to link my domainname infront of everything? xD
18:35 < andu_> cant be different server imo
18:35 < andu_> your domain has to match throughout
18:36 < Sanctumed> so...|
18:36 < Sanctumed> ?
18:36 < Sanctumed> xD
18:37 < rootcoma> Sanctumed, if it's on your server dont use localhost..
18:37 < rootcoma> all of those localhosts should be your servers url
18:37 < Sanctumed> tried that, rootcoma ;p
18:38 < andu_> facepalm :/
18:38 < rootcoma> Well, keep trying that.
18:38 < rootcoma> make sure the port is there, add the http:// like andu said
18:40 < Sanctumed> When I try to connect to port 3000 via my browser it times out
18:41 < rootcoma> your server linux? do you have ssh access?
18:42 < rootcoma> you can make sure you server is running. 
18:42 < rootcoma> netstat -ap | grep node | grep LISTEN
18:43 < Sanctumed> (19:39:09) <rootcoma> your server linux? do you have ssh access? < yes & yes
18:43 < geNAZt> then pls post your output of "iptables -L"
18:44 < geNAZt> and the rootcoma command
18:44 < Sanctumed> [****@**** ****]$ iptables -L
18:44 < Sanctumed> -bash: iptables: command not found
18:45 < geNAZt> nice :D
18:45 < Sanctumed> xD
18:45 < Sanctumed> I am thinking of just abandoning nodejs.. lol.. just doesn't wanna work for me
18:45 < rootcoma> ok
18:45 < Sanctumed> Might wanna doe PHP websockets but those scale terribly
18:45 < Sanctumed> xD
18:46 < Sanctumed> do *
18:46 < geNAZt> hf with php and websockets 
18:46 < geNAZt> LOL
18:46 < Sanctumed> xD
18:46 < Sanctumed> nah I wanna give nodejs a try but it's giving me headaches
18:46 < Sanctumed> been at it for 3 days now
18:46 < geNAZt> only cause your server does not do what it should
18:47 < Sanctumed> I should stomp my server
18:47 < Sanctumed> :)
18:47 < Sanctumed> xD
18:47 < Sanctumed> Right in it's motherboard, beat the shit out of it
18:47 < Sanctumed> xD
18:48 < geNAZt> do you have the full access to the network and the server maschine ?
18:49 < geNAZt> ah i know the error
18:49 < geNAZt> -_-
18:49 < purr> geNAZt: ಠ_ಠ is an IRC client/IRC client framework.
18:49 < mscdex> hehe
18:49 < geNAZt> if you want to access the webserver away from the localhost you must give the server.listen the second argument
18:50 < geNAZt> it must be the ip adress of the server
18:50 < geNAZt> or 0.0.0.0
18:50 < Sanctumed> Just checking.. you still talking to me? right? xD 
18:50 < geNAZt> yes
18:50 < Sanctumed> How does that work then?
18:51 < geNAZt> ?
18:51 < Sanctumed> server = http.createServer(app)
18:51 < Sanctumed> server.listen(3000);
18:51 < geNAZt> you tell node not to bind to 127.0.0.1
18:51 < Sanctumed> what do I need to add to the listen function?
18:51 < Sanctumed> xD
18:51 < geNAZt> it should bind to whatever your servers ip adress is
18:51 < Sanctumed> First param or second param?
18:51 < geNAZt> server.listen(3000), "<ip of server here>" );
18:51 < Sanctumed> Ah, K :P
18:52 < geNAZt> ofc without the ) after 3000
18:52 < Sanctumed> rofl
18:56 < geNAZt> and ?
18:58 < Sanctumed> does not work
18:59 < Sanctumed> have been trying some stoff
18:59 < Sanctumed> stuff *
19:06 < cxreg> othiym23: solved the mystery with that "simple domain test" report.  the repl was catching the error with try/catch
19:12 < Sanctumed> what the fuck just happened
19:13 < boogyman> you cursed? and used the <enter> key as punctuation
19:15 < mansoor-s> Sanctumed, its an omen
19:15 < mansoor-s> a dark omen
19:15 < mansoor-s> a very dark omen
19:17 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:33 < absurdum_22_34> having trouble installing node.js.  The github page says ask questions if I have errors.  when trying to configure, I get an error.  i tried export PYTHON=`which python2` and tried again, but got the same error
19:33 < absurdum_22_34> it says to ask questions here **
19:34 < zomg> absurdum_22_34: it would be useful to actually also tell us what the error you get is
19:34 < absurdum_22_34> It says i might need to change my PYTHONHOME as well.  That doesn't tell me much
19:35 < absurdum_22_34> ok File "./configure", line 312 '''
19:35 < absurdum_22_34> and it points to the last single quote
19:35 < absurdum_22_34> invalid syntax
19:36 < nonotza> I'm using expressjs 3. I wrapped my route handler in module.exports = function (app) { } but the req.body is not defined for post requests now. Does anyone know why this is?
19:36 < absurdum_22_34> if it's any help, the site I'm reading this install guide on is https://github.com/joyent/node/wiki/installation
19:37 < absurdum_22_34>  Node.js - free as in hugs - http://logs.nodejs.org/node.js/                    
19:37 < absurdum_22_34> 14:32 < absurdum_22_34> and it points to the last single quote
19:37 < absurdum_22_34> 14:32 -!- brainbox1100 [~jleach@S0106001b63f4b990.vc.shawcable.net] has joined 
19:37 < absurdum_22_34>           #Node.js
19:37 < absurdum_22_34> 14:32 < absurdum_22_34> invalid syntax
19:37 < absurdum_22_34> 14:33 -!- jscheel [~jscheel@2601:5:1580:a:cabc:c8ff:feb9:1c7a] has joined 
19:37 < absurdum_22_34>           #Node.js
19:37 < absurdum_22_34> 14:33 -!- jscheel [~jscheel@2601:5:1580:a:cabc:c8ff:feb9:1c7a] has quit 
19:37 < absurdum_22_34>           [Changing host]
19:37 < absurdum_22_34> 14:33 -!- jscheel [~jscheel@drupal.org/user/116197/view] has joined #Node.js
19:37 < absurdum_22_34> 14:33 -!- liwen [~liwen@li387-224.members.linode.com] has quit [Ping timeout: 
19:37 < absurdum_22_34>           264 seconds]
19:37 < absurdum_22_34> 14:33 -!- aesptux_ [~aesptux@89.141.6.156.dyn.user.ono.com] has quit [Quit: 
19:37 < absurdum_22_34>           Leaving]
19:37 < absurdum_22_34> 14:33 -!- felixge [~the_undef@miranda/donor/theundefined] has joined #Node.js
19:38 < absurdum_22_34> 14:33 -!- jscheel [~jscheel@drupal.org/user/116197/view] has quit [Client Quit]
19:38 < absurdum_22_34> 14:34 < nonotza> I'm using expressjs 3. I wrapped my route handler in 
19:38 < absurdum_22_34>                  module.exports = function (app) { } but the req.body is not 
19:38 < absurdum_22_34>                  defined for post requests now. Does anyone know why this is?
19:38 < absurdum_22_34> 14:34 < absurdum_22_34> if it's any help, the site I'm reading this install 
19:38 < absurdum_22_34>                         guide on is 
19:38 < absurdum_22_34>                         https://github.com/joyent/node/wiki/installation
19:38 < absurdum_22_34>  [14:34] [absurdum_22_34(+i)] [2:freenode/#node.js(+Cnt)] [Act: 1]              
19:38 < absurdum_22_34> wow..sorry
19:43 < absurdum_22_34> nevermind..i figured out how to install node.js
19:44 < absurdum_22_34> easy peasy..just changed the name of python2 in /usr/bin/ to python, then ran ./configure, make, and make install
19:47 < JohnMcLear> please paste more.
19:53 < Machinarius> Hey guys, i've been wondering... is there a way to make node process and display html files? Maybe it can be turned into "Prism on Steroids"?
19:55 < mansoor-s> Machinarius, you mean like serverside rendering?
19:56 < Machinarius> mansoor-s, Not exactly, more like turning node into a full-fledged platform for desktop app programming
19:56 < mansoor-s> ahh
19:56 < mansoor-s> take a look at App.js
19:56 < mansoor-s> or is it Appjs
19:56 < mansoor-s> samethign
19:56 < Machinarius> Hey
19:56 < Machinarius> Thats exactly what i was hunting down after
19:56 < mansoor-s> great
19:56 < mansoor-s> that will be $50 USD
19:57 < mansoor-s> ACH or Paypal?
19:57 < Machinarius> Now i can write that multi-platform media synchronization app
19:57  * Machinarius runs
19:58 < mansoor-s> Machinarius, what do you mean
19:58 < mansoor-s> media synchronization?
20:00 < Machinarius> mansoor-s, id write applications for different mobile OS's that would interact with my appjs app via multicast, exchanging info about which media files both have and synchronizing them over the air
20:17 < mansoor-s> very cool Machinarius 
20:17 < mansoor-s> does it have a practical application
20:17 < mansoor-s> or is it just for kicks
20:21 < Machinarius> mansoor-s, id do it for my own personal use but happily release it into the wild
20:24 < azhwkd> could anyone give me a hint why my file which was gzip compressed with input.pipe(gzip).pipe(outputGzip) can't get decompressed by doing inputGzip.pipe(gunzip).pipe(output)?
20:33 < codypchristian> Hey guys, Need a little help. Im following this guide and while installing forever each item says 'node not found' however nodejs is installed.. ideas? https://github.com/w-A-L-L-e/printerface
20:34 < codypchristian> Example: http://paste.laravel.com/fyP
20:35 < codypchristian> I added the node path to my /etc/enviroment file http://paste.laravel.com/fyQ
20:41 < gluxon> codypchristian: What system are you on? Debian Linux?
20:41 < codypchristian> Yes on a raspberrypi
20:42 < gluxon> codypchristian: What do you get when you type in "whereis node" in bash?
20:43 < codypchristian> Nothing however
20:44 < codypchristian> whereis nodejs
20:44 < codypchristian> nodejs: /usr/bin/nodejs /usr/lib/nodejs /usr/bin/X11/nodejs /usr/include/nodejs /usr/share/nodejs /usr/share/man/man1/nodejs.1.gz
20:44 < gluxon> codypchristian: This is your own compiled copy?
20:44 < codypchristian> no installed via apt-get
20:44 < gluxon> codypchristian: Try doing this. Extract this file to /usr -> http://nodejs.org/dist/v0.8.17/node-v0.8.17-linux-arm-pi.tar.gz
20:46 < codypchristian> ok I did
20:46 < isaacbw> does anyone know of a source of information about scaling node servers vertically vs horizontally? i.e. handling more connections in a single process vs starting new processes?
20:46 < gluxon> codypchristian: In the terminal, type in "node" what happens?
20:47 < codypchristian> command not found
20:47 < gluxon> codypchristian: You extracted the file to /usr, right?
20:47 < mscdex> gluxon: that creates an extra subdirectory in /usr
20:47 < gluxon> So you should have /usr/bin/node
20:47 < mscdex> you have to --strip=1
20:48 < gluxon> mscdex, codypchristian: I apologize, I meant, extract the *contents* to /usr if that wasn't clear.
20:48 < codypchristian> yeah cause right now it is at:  /usr/node-v0.8.17-linux-arm-pi/
20:48 < gluxon> So the bin folder should merge.
20:48 < codypchristian> gotcha so copy the contents of the bin folder from that into /usr/bin
20:48 < gluxon> codypchristian: Well, everything.
20:49 < codypchristian> kk
20:50 < codypchristian> done I moved the files from each directory into their respected directory in /usr/
20:51 < gluxon> codypchristian: Now try "node" in the terminal.
20:51 < gluxon> You should get a interactive node console, press Ctrl + C twice to exit.
20:51 < codypchristian> still nothing
20:51 < codypchristian> is there a way I can just map node to nodejs? as nodejs does work
20:52 < gluxon> codypchristian: sudo ln -s /usr/bin/nodejs /usr/bin/node
20:52 < gluxon> That creates a symbolic link.
20:52 < codypchristian> that works
20:52 < codypchristian> yeah I knew about them but didn't know they would work for that
20:52 < gluxon> codypchristian: So that worked?
20:52 < codypchristian> node works now
20:52 < gluxon> :)
20:53 < codypchristian> re-running my script
20:53 < gluxon> codypchristian: While you're at it, can you run "node --version"?
20:53 < gluxon> I'm surprised you didn't have a copy of "/usr/bin/node".
20:53 < codypchristian> damn script not working.
20:53 < codypchristian> yeah I can
20:53 < codypchristian> v0.6.19
20:53 < gluxon> Yeah, you're still at the 0.6 branch.
20:54 < codypchristian> I still get this http://paste.laravel.com/fyP
20:54 < codypchristian> what would you recommend I do?
20:55 < gluxon> codypchristian: The link I gave to the tar.gz file has the latest version of node for ARM.
20:55 < codypchristian> Just configure/install it?
20:55 < gluxon> codypchristian: It's suppose to be copied to /usr
20:56 < codypchristian> Which I did
20:56 < gluxon> wget http://nodejs.org/dist/v0.8.17/node-v0.8.17-linux-arm-pi.tar.gz
20:56 < gluxon> tar -xzf node-v0.8.17-linux-arm-pi.tar.gz
20:56 < gluxon> mv node-v0.8.17-linux-arm-pi/* /usr
20:56 < gluxon> ^ Try those three commands.
20:56 < codypchristian> kk one min
20:57 < gluxon> Then run "node --version" to make sure you're at 0.8.17
20:58 < mscdex> or just: curl http://nodejs.org/dist/v0.8.17/node-v0.8.17-linux-arm-pi.tar.gz | tar zx --strip=1 -C /usr
20:58 < mscdex> :-D
20:58 < codypchristian> one min
21:00 < codypchristian> Got it
21:00 < codypchristian> v0.8.17
21:01 < gluxon> codypchristian: Awesome.
21:02 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
21:02 < nakp> hahaha i would place it at /opt
21:03 < nakp> and make sure you make links at /usr/bin :P
21:05 < gluxon> nakp: /opt was used for optional third-party packages from Unix venders in the old days.
21:06 < codypchristian> Got it installed and working with my script.
21:06 < nakp> where do they place it now?
21:06 < gluxon> nakp: There's a lot of places... /usr/local /usr/
21:06 < gluxon> nakp: Firefox on Ubuntu installs itself to /usr/lib, I don't know why :-/
21:07 < nakp> well all extra stuff i download i send it to /opt xD as they are not "bundled" with my system
21:07 < codypchristian> Thanks guys I have https://github.com/w-A-L-L-e/printerface running now.
21:07 < gluxon> codypchristian: :)
21:09 < nakp> D:
21:09 < nakp> gluxon, could you help me? :P
21:09 < nakp> im such a nab with nodejs xD i set it up yesterday hahaha
21:09 < gluxon> nakp: I wouldn't call myself a very advanced Node.js programmer. :-/
21:10 < gluxon> But, if I could help, sure.
21:10 < nakp> great
21:10 -!- mode/#Node.js [+o ryah] by ChanServ
21:11 < nakp> i want to add a filter to jade, I use compoundjs wich uses jade-ext (jade extension) and requires it at /config/autoload.js
21:11 < nakp> ive found this post
21:11 < nakp> http://marfalkov.blogspot.com/2012/06/adding-new-filter-to-jade.html
21:12 < nakp> my question is.. where should i add the filter? so it will be available across all my views
21:16 < gluxon> nakp: I need more knowledge of MVC to answer your question. :(
21:16 < nakp> ok ok :P
21:16 < nakp> one more
21:17 < nakp> i got an idea
21:17 < nakp> is there any way to require with an alias?
21:18 < gluxon> nakp: Can you clarify? use require() with symbolic links you mean?
21:19 < nakp> yeah... i want to require('textile-js') as textile but my app uses something like return( require(), require(), require());
21:20 < gluxon> I don't think I understand.
21:21 < nakp> ñ_ñ
21:21  * nakp suicides
21:22 < nakp> haahaha
21:22 < bingomanatee> How do you inspect the prototype of an instantiated class object in node?
21:23 < nakp> gluxon, gimme a sec :P ideas are flowing xD
21:23 < nakp> bingomanatee, are you asking to me? x_X
21:24 < bingomanatee> I am asking anyone who knows the answer
21:24 < nakp> ok then no haha
21:27 < nakp> ok i got it working
21:29 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
21:31 < nakp> gluxon, this is what i meant xD
21:31 < nakp> https://gist.github.com/4526294
21:36 < rknLA> does node have ORM that doesn't suck yet?
21:38 < nakp> sql or nosql?
21:38 < nakp> i like sequelize
21:40 < Sicp> hell yea, man
21:40 < Sicp> I've outrun the tutorial 
21:40 < Sicp> the guy includes huge block of code in main file, I include it as a module; win.
21:41 < rknLA> nosql is fine as long as it's not mongo.
21:41 < Sicp> I'm using mongo......
21:41 < Kakera> you don't really need proper ORM for a dynamic language such as JavaScript
21:41 < nakp> lol
21:41 < rknLA> Kakera: ... O_O
21:41 < mscdex> heh
21:42 < nakp> you do sometimes if you need sql :P
21:42 < rknLA> that quote should be on bash.org...
21:43 < nakp> Sicp, which tutorial?
21:43 < Sicp> from Tuts+ 
21:43 < Sicp> pretty cool shit 
21:43 < nakp> videotuts?
21:43 < Sicp> yea
21:43 < Kakera> don't sql modules for node return table entries as objects anyway?
21:43 < Sicp> more of a visual learner here
21:44 < Sicp> <--- refers to the video course of SICP, not the book :P 
21:44 < nakp> haha im like that but for maths only xD
21:47 < mscdex> Kakera: depends
21:49 < nakp> think about orm to give the availability to use different database types with the same definition
21:50 < mscdex> nakp: how often does that happen in reality
21:50 < mscdex> ?
21:51 < nakp> pretty often when you make generic apps (to be used more than once)
21:52 < mscdex> meh
21:54 < nakp> or with frameworks :P which are not intended to be used with only 1 database type
21:54 < nakp> most of times orm integrates validation stuff so you dont have to write it again
22:02 < nakp> great now i have a :textile filter in my jade templates >_>
22:06 < guidocalvano> in expressjs, how do I get the raw unprocessed body of post data?
22:09 < isaacbw> guidocalvano, listen for the 'data' event on the request
22:09 < isaacbw> and the 'end' event to know when it's done
22:23 < Virunga> And if one uses the multipart middleware and gets the body with req.body?
22:23 < Virunga> Should be ok, no?
22:23 < rknLA> how do you guys do integration testing?
22:24 < rknLA> nakp: also, different dbs for dev and prod.
22:24 < isaacbw> Virunga, I honestly don't know
22:24 < rknLA> (i.e. sqlite locally, postgres in prod)
22:25 < isaacbw> it might consume the data events
22:25 < nakp> rknLA, you are right :P
22:25 < isaacbw> it likely does
22:25 < isaacbw> but I don't know
22:25 < isaacbw> try it! :)
22:25 < rknLA> (and i guess that was really an answer to mscdex)
22:25 < Virunga> :)
22:26 < rknLA> maybe i should rephrase my question.. _do_ y'all do integration testing?
22:26 < rknLA> ;)
22:32 < JohnMcLear> rknLA
22:32 < rknLA> hai
22:32 < JohnMcLear> We (Etherpad) use Travis for CI, SauceLabs for our VMs and a custom test framework for running the tests..  Using such frameworks as sendKeys et al
22:32 < JohnMcLear> Specs are written in JS too :)
22:33 < JohnMcLear> https://travis-ci.org/ether/etherpad-lite is how the test runner looks (travis)
22:33 < JohnMcLear> saucelabs provides us videos of each test being run, which is useful if it fails
22:33 < JohnMcLear> and specs look like this: https://github.com/ether/etherpad-lite/tree/master/tests/frontend/specs
22:33 < rknLA> that.. is a thorough answer! thank you!
22:33 < JohnMcLear> I'm having a massive blonde moment..  Sorry guys but:
22:33 < JohnMcLear> var haystack = "foo foo foo";
22:33 < JohnMcLear> var needle = "foo";
22:33 < JohnMcLear> console.log(haystack.match(needle, 'g').length); // 1 <-- should be 3
22:33 < JohnMcLear> console.log(haystack.match(/foo/g).length); // 3
22:34 < JohnMcLear> rknla: It's not the only way of solving integration testing, but it's how we do it.  Other people probably have easier to adopt solutions :)  I think Mocka is another framework we use and you should look into.
22:34 < rknLA> sendkeys is for emulating keystrokes, i presume?
22:34  * JohnMcLear nods
22:34 < JohnMcLear> Obviously that is important to us :)
22:35 < JohnMcLear> Anyone can help with line 3 of my little puzzle?  It should be 3 but for some reason node doesn't like ,'g'
22:35 < rknLA> cool, never seen it before and immediate results from google seemed vague.
22:35 < JohnMcLear> hrm, well, mabye spin up etherpad lite, hit up /tests/frontend and see it in action :)
22:36 < JohnMcLear> Only takes a few minutes and shows you how powerful/obvious/user friendly integration testing can be
22:36 < JohnMcLear> Plus then you can copy/paste ;)
22:36 < rknLA> <3 integration testing.  we mostly do unit tests at work, but this is for a personal project.
22:36 < warz> is there something like Chef, but written using node?
22:36 < rknLA> also, it's not clear to me that match takes multiple arguments.
22:36 < rknLA> http://www.w3schools.com/jsref/jsref_match.asp
22:36 < rknLA> what does console.log(haystack.match(needle, needle).length) return?
22:37 < isaacbw> ping pong
22:38 < JohnMcLear> > console.log(haystack.match(needle, needle).length);
22:38 < JohnMcLear> 1
22:38 < rknLA> JohnMcLear: alternatively, `console.log(haystack.match(new RegExp(needle, 'g')).length);` might be what you're after
22:38 < rknLA> yeah, i think .match probably just ignores everything that's not the first argument.
22:39 < JohnMcLear> > console.log(haystack.match(new RegExp(needle, 'g')).length);
22:39 < JohnMcLear> 3
22:39 < JohnMcLear> undefined
22:39 < JohnMcLear> yay :)
22:39 < JohnMcLear> Thanks!
22:39 < rknLA> :)
22:39 < JohnMcLear> Added historical search to pads..  kinda neat feature!  https://github.com/JohnMcLear/etherpad-historical-search if you are interested
22:40 < isaacbw> ping pong
22:41 < rknLA> aside, i'm looking at integration tests for an API, so i'm a bit less concerned about browser behavior and quirks
22:42 < JohnMcLear> Ah, yea..  So my solution was wrong for you :)
22:42 < JohnMcLear> btw you got a mention in the source :)
22:42 < JohnMcLear> Thanks again
22:42 < JohnMcLear> https://github.com/JohnMcLear/etherpad-historical-search/blob/master/index.js#L31
22:44  * rknLA contemplates submitting a pull request for capitalization... ;)
22:44 < rknLA> also, w00t! :)
22:45 < isaacbw> ping pong
22:46 < Raynos> isaacsbw: pong ping
22:47 < rknLA> isaacbw: table tennis
22:48 < torvalamo> ping: unknown host pong
22:48 < rknLA> lol
22:49 < torvalamo> true story
22:49 < rknLA> same story, different translation:
22:49 < rknLA> ping: cannot resolve pong: Unknown host
22:50 < torvalamo> os?
22:50 < rknLA> mac os / zsh
22:50 < torvalamo> linux
22:50 < rknLA> ah, nice.
22:51 < torvalamo> lemme check win
22:51 < torvalamo> Ping request could not find the host pong. Please check the name and try again.
22:51 < torvalamo> gay...
22:52 < torvalamo> windows doesn't just tell you what's wrong, it tells you what you should do to fix it
22:53 < rknLA> What version of windows?
22:53 < torvalamo> 7
22:54 < Raynos> try DOS
22:54 < torvalamo> i don't have it lying around
22:54 < Raynos> :(
22:54 < torvalamo> i have an emulator but i don't think it has ping
22:54 < torvalamo> not even sure if dos had ping at all
22:54 < rknLA> i bet windows 8 fixes it for you.
22:54 < rknLA> instead of just telling you how to fix it.
22:55 < torvalamo> ping.exe was available from windows 95
22:55 < torvalamo> which is sort of DOS
22:56 < rknLA> dos in pants.
22:56 < nonotza> does someone know how to return the response from a callback in sismember?
22:56 < rknLA> hey does jasmine-node have a way to boot the node server under test from cli?
22:57 < rknLA> i know mocha has that feature...
23:11 < rknLA> also, delayed reaction, but torvalamo, check your homophobia at the door please.
23:20 < isaacbw_test> ahoy
23:20 < rknLA> howdy
23:23 < rknLA> sequ
23:23 < rknLA> erm... ignore that.
23:24 < Bravo> hi
23:24 < rknLA> so, it seems sequelize is mysql only.  jugglingdb doesn't seem to support migrations.  anything else work with postgres and support migrations / test databases?
23:30 < mscdex> rknLA: the readme says otherwise
23:30 < rknLA> mscdex: which one?
23:30 < mscdex> sequelize?
23:31 < rknLA> ah, i didn't get that far down because of their top-level description.
23:31 < mscdex> ? the first sentence is: "The Sequelize library provides easy access to MySQL, SQLite or PostgreSQL databases by mapping database entries to objects and vice versa."
23:32 < mscdex> :S
23:32 < Bravo> Hey mscdex you wrote the nntp plugin?
23:33 < mscdex> nntp module, yeah
23:33 < rknLA> mscdex: not at http://www.sequelizejs.com/ ... it just mentions MySQL
23:33 < rknLA> although, it does say multi-dialect
23:33 < mscdex> oh
23:33 < rknLA> so, derp.
23:33 < mscdex> rknLA: create a new issue on gh :-)
23:33 < Bravo> I'm the newbie that wrote the issue on the .next not working :(
23:33 < Bravo> Sorry about that, did that code help at all?
23:34 < mscdex> Bravo: oh yeah that. i haven't had time to look into it yet
23:34 < rknLA> has anyone else experienced intermittent --save-dev functionality with npm install?
23:34 < Bravo> mscdex: OK no problem, I'm using giganews, I'm not sure if that matters, but I know another friend of mine ran the code and it worked fine on his server
23:34 < Bravo> Not sure what the problem is
23:36 < Bravo> Anybody use jsdom?
23:36 < isaacbw> lots of people
23:37 < Bravo> Maybe I'm not using it correctly
23:38 < Bravo> I have multiple events that is being called at the same time
23:38 < Bravo> and it seems after 3-4 events it starts showing undefined for the response
23:38 < mscdex> Bravo: hmm yeah i dunno. if you can find a free usenet server or something that i can use as a test for this issue, that would help a lot
23:39 < Bravo> mscdex: thanks, I'll find one and try it on that
23:39 < amagee> Hey this question is a little vague, so I'm just looking for some general ideas if anyone has any to offer.  I'm stress testing a socket.io application and I've found that the server hangs after a certain number of simultaneous connections.  I've managed to isolate the problem to the adding of an event listener in socket.io's redis store.  So there's a section of code that says self.sub.on("subscribe", function() { ... }).  If I comment 
23:39 < amagee> out that section of code, everything is fine, but interestingly, if I comment out just the code in the handler, I still get performance degradation and an eventual hang, suggesting the problem is due to the event listener mechanism itself and not the handler.  Does anyone have any ideas?
23:43 < Bravo> Is there similar libraries to jsdom?
23:47 < groundup> On Win7, how do I get node to open example.js if example.js is in C:\node.js\ and node is in C:\Program Files\nodejs\?
23:47 < groundup> Without having to go type in the full path for both
23:51 < Bravo> is node in the PATH?
--- Log closed Mon Jan 14 00:00:18 2013
