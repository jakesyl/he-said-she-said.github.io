--- Log opened Thu Apr 25 00:00:41 2013
00:04 <@isaacbw> ljharb: I'm working on my own harness right now. It's not a drop in replacement for tap/tape, but the assertions are more or less the same
00:04 < ljharb> hm
00:04 < ljharb> could it be a drop-in replacement?
00:05 < ljharb> i'd use it in a bunch of projects immediately if it was
00:05 <@isaacbw> I could maybe make an adapter that allows it to be a sort-of dropin replacement
00:05 <@isaacbw> are you doing any fancy stuff with tape?
00:06 <@isaacbw> I've designed mine to be a bit more like perl
00:10 < ljharb> i don't think i am
00:10 < ljharb> if you're just creating a brand new tap-compatible test framework, cool, but a drop-in replacement for a currently broken and widely used library seems far more valuable
00:11 <@isaacbw> we'll see, I think I might be able to write an adapter that will allow you to use it as a drop-in replacement
00:11 < slkm_> I am looking for a partner in developing my cloud based operating system with Node.js . Anyone here interested?
00:12 <@isaacbw> even if I can't without a lot of work, the assertions are almost identical and you will be able to change test scripts with only a few lines
00:12 <@isaacbw> tape was made as a dropin replacement for node-tap, so I kind of want to break that chain
00:13 <@isaacbw> I'm sure substack will get around to fixing tape eventually and I don't want to have just another drop-in replacement when that happens
00:28 < Technodrome> how does javascript implementations implement properties, just an internal hash table? 
00:29 < CoverSlide> yes
00:29 < CoverSlide> Objects are basically hashes
00:29 < Technodrome> how are functions stored internally?
00:29 < CoverSlide> probably implementation-specific
00:29 < Technodrome> and how is function scope and properties kept separate for the same object ? 
00:30 < CoverSlide> um, magic?
00:30 < Technodrome> just curious CoverSlide 
00:30 < Technodrome> you know i thought for the last day that a var x = x and object.x = x were the same thing? 
00:30 < Technodrome> its actually a bit confusing noticing its the same object
00:31 < CoverSlide> they're not
00:32 < CoverSlide> var x is not a property
00:32 < CoverSlide> just like any time you instantiate a variable inside a function
00:33 < wwicks> Technodrome: it is implementation specific. For instance, Internet Explorer's JScript used a linked-list concept
00:33 < Technodrome> sure yes i know 
00:33 < Technodrome> CoverSlide:  i was just saying, it did confuse me 
00:34 < Technodrome> JS is not a walk in the park for the seasoned c# programmer
00:34 <@isaacbw> Technodrome: did you read the ecmascript spec yet
00:34 < Technodrome> no, just got to point of being able to write some JS now isaacbw 
00:34 < Technodrome> i'm only a few days in, but still 
00:34 < CoverSlide> you need to read it
00:34 < CoverSlide> all of it
00:34 < CoverSlide> before you write a single character
00:34 <@isaacbw> lol
00:35 < niggler> how do JS engines handle sparse arrays?
00:35 < niggler> for example,
00:35 < wwicks> Technodrome: You may also be interested that "x = 123" will be the same as "global.x = 123" (that is, if you leave of the "var" declaration)
00:35 < niggler> >>> var x = []; x[1<<31] = "foo"; x
00:35 < purr> niggler: (object) []
00:36 < CoverSlide> wwicks: unless you use strict mode, which most people should
00:36 < niggler> hmm that was unexpected
00:36 < wwicks> CoverSlide: :)
00:36 < niggler> >>> var x = []; x[1<<30] = "foo"; x
00:36 < purr> niggler: Timeout Error: Execution time exceeded 2 seconds
00:37 < niggler> >>> var x = []; x[1<<30] = "foo"; x.length
00:37 < purr> niggler: (number) 1073741825
00:37 < OliverJAsh> substack: can i require a json file with browserify?
00:37 < OliverJAsh> doesn't seem to workâ€¦
00:39 < doug_carmichael> Could Node.js do XML-RPC? (ie. as the middleware between a mobile app and backend PostgreSQL database.)
00:39 < doug_carmichael> (ie. an XMLRPC server as easily as HTTP)
00:41 < wwicks> doug_carmichael: I can't think of any reason why not
00:41 < doug_carmichael> I like the 'npm' for easily adding modules.
00:43 <@isaacbw> niggler: did you see that I finished the native hashmap module?
00:43 < niggler> i did not isaacbw how's the performance?
00:43 < niggler> and also link me
00:44 < niggler> isaacbw: https://npmjs.org/~isaacbw not_found
00:44 < doug_carmichael> wwicks>Would you use HTTPS or XMLRPC for the communication? (ie. iPhone app->Node)
00:44 <@isaacbw> a massive improvement for string keys. I haven't tried benchmarking sparse integer keys against normal objects 
00:44 <@isaacbw> https://github.com/isaacbwagner/node-hashtable
00:45 <@isaacbw> I sent an email to the maintainer of npm's 'hashtable' package which hasn't been touched in two years and am waiting to hear back
00:45 < niggler> isaacbw did you cc isaacs?
00:45 < AAA_awright> doug_carmichael: https?
00:45 <@isaacbw> yup
00:45 <@isaacbw> I'm currently on a tangent developing testing tools, and when I'm done I'll go back and write tests for node-hashtable
00:45 < doug_carmichael> ie.. taking a game operation from the app and letting Node talk to PostgreSQL on the backend.
00:46 <@isaacbw> but I did a bit of testing and it disposes of handles property for v8's gc
00:46 < niggler> isaacbw while you are developing testing tools, might i suggest a feature (for said tools)?
00:46 <@isaacbw> sure
00:46 < niggler> i want to include some test files, but they are milt-megabyte files
00:46 < niggler> *multi-MB
00:46 < niggler> so my thought would be to specify a place to get test files
00:46 < niggler> and have a test framework go and fetch them if they don't already exist
00:47 <@isaacbw> from the web?
00:47 < wwicks> doug_carmichael: I'd avoid XML at all costs. My experience with XML in nodejs is says AVOID :)
00:47 < niggler> yeah isaacbw from some fixed place
00:47 <@isaacbw> oh interesting
00:47 < niggler> i was thinking of doing a git submodule possibly, but i wasn't sure if that was the best approac
00:47 < niggler> i currently put files on dropbox but dropbox isn't curl-friendly
00:47 <@isaacbw> well, I'm developing two packages: a TAP producing test harness and a TAP consuming test runner, so I could easily add that to the test runner
00:48 <@isaacbw> it's an awesome idea!
00:49 <@isaacbw> niggler: do your tests produce TAP output or something else?
00:49 < AAA_awright> wwicks: On the contrary, XML, as opposed to JSON, is hypertext and therefore RESTful. If you're going to promote something other than XML I'd suggest JSON with a hyper-schema
00:49 < niggler> at one point they will; right now, I'm manually inspecting them 
00:50 < ljharb> niggler: a submodule for that sounds like a great idea.
00:50 < bitRipperX> can someone help me out. How do I sent a response to a client after handling a post request?
00:50 < bitRipperX> request.post('http://localhost:3000/handshake').form({amount:amount, resource:resource});
00:50 < ljharb> `git submodule update` is pretty simple.
00:50 < Technodrome> http://pastebin.com/4pAw4UsK line number 19, would it work without the "this" ? I don't see why the this is needed? 
00:51 < bitRipperX> I want the handshake handler to return something to the page that sent the post request
00:51 <@isaacbw> I've also got an idea that I've been mulling over and I wonder what all your thoughts are: a curated list of regularly updated and robust (i.e. tests and docs) npm modules
00:51 <@isaacbw> there's a whole lot of vaporware on npm
00:52 < AAA_awright> ljharb: Git submodules shouldn't be treated any differently than regular Git repositories except that they're allowed to have their own history, seperate from the root directory of the repository
00:52 < AAA_awright> So I wouldn't suggest that
00:52 < niggler> isaacbw: +1
00:53 < AAA_awright> isaacbw: I would fork it entirely, there ought to be a central project
00:55 < AAA_awright> niggler: Why do you have tests that are that large
00:56 < niggler> AAA_awright I'm testing https://npmjs.org/package/xlsjs and the largest single sheet https://www.dropbox.com/s/mjgrvhdmvxbkbwy/large.xls is 100M
00:56 < ljharb> AAA_awright: for big test files tho, it makes sense not to keep them in the repo, to keep repo size down
00:56 < AAA_awright> niggler: Can you make a program that generates xls files of arbritrary size?
00:57 < AAA_awright> ljharb: It is kept in the repository though
00:57 < niggler> AAA_awright i could make a program that opens excel and executes the relevant commands,
00:57 < mkozjak> can i somehow write these to be more compact, maybe? sig handlers: http://pastebin.com/raw.php?i=7gSybWed
00:57 < niggler> but then i wouldn't be able to test it on linux
00:58 < timoxley> mkozjak use named functions?
00:58 <@isaacbw> niggler: you could also download the files from within the test script
00:58 < ljharb> AAA_awright: ? no it's not. i meant a remote submodule, not a local one.
00:58 < AAA_awright> niggler: I'd just do that, publish a script that generates an xls of arbritrary size and host sample outputs from the program somewhere, over HTTP
00:59 < AAA_awright> ljharb: Right, what do you think happens when you clone it?
00:59 < timoxley> mkozjak process.on('SIGTERM', exitHandler)
00:59 < ljharb> AAA_awright: all you get of the submodule is a SHA.
00:59 < niggler> blargh then id need to find someone to host large files 
00:59 < ljharb> AAA_awright: you have to do `git submodule update` to clone the submodule.
00:59 < timoxley> mkozjak you can even use bind to pass in params
00:59 < AAA_awright> ljharb: The only difference between a submodule and a tree is... well, there isn't one, they both refer to an object by their SHA1 and populate a directory with files
00:59 < mkozjak> timoxley: nice, thanks!!
00:59 < timoxley> mkozjak process.on('SIGTERM', exitHandler.bind(null, 'SIGTERM')); 
00:59 < timoxley> mkozjak np
01:00 < ljharb> AAA_awright: that's not entirely correct. the parent repo contains nothing except the SHA of the submodule, and gitignores that subtree. the submodule itself contains all the history and .git objects that it holds, and they are not cloned when the parent repo is cloned.
01:00 < Technodrome> just when i think i have a concept of JS down, its like boom, doesn't work 
01:02 < AAA_awright> ljharb: That's how Git behaves by default, not what it means to create a submodule vs. create a tree
01:02 < AAA_awright> You're relying on Git's default behavior to not populate submodules, which doesn't help any if you need submodules for other things anyways
01:03 < Technodrome> when you call a function without defining it to a variable as a constructor, will this be available? 
01:03 < Technodrome> it seems not 
01:03 < ljharb> it helps in that the parent repo isn't such a pain to clone. obv if you need it all, you have to clone it all no matter what, but the idea is to help out the people that *dont* need everything.
01:06 < doug_carmichael> Which toolset seems to be more marketable as a skill? Node.js or RoR?
01:06 <@isaacbw> rails probably has more job openings right now
01:06 < deoxxa1> doug_carmichael: RoR
01:06 < Technodrome> you can't add properties directly to  the function statement itself right? only variables defined with function expressions?
01:06 < deoxxa1> doug_carmichael: depends on what you want to do though
01:07 < deoxxa1> Technodrome: code example plox
01:07 < niggler> doug_carmichael node.js
01:13 < Technodrome> deoxxa1: http://pastebin.com/7bk7Z5AQ i have a few questions in the comments 
01:14 < niggler> !this @ Technodrome 
01:14 < jayk> Technodrome: How's it going?
01:15 < deoxxa1> Technodrome: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/this
01:15 < niggler> Technodrome if you called anObject directly (not new) then it would change the global
01:15 < Technodrome> jayk: better 
01:16 < niggler> 'this' in the context of a function within a new construct refers to the object that's returned
01:16 < jayk> But... That's a somewhat unfortunate side effect... And in strict mode it would not
01:16 < jayk> What niggler said
01:16 < jayk> This refers to the object the method is attached to at method invocation.
01:17 < niggler> so in your example Technodrome newone.name is 'michael'
01:17 < Technodrome> i was just curious why name itself wasn't getting changed with the this.name, since i thought it would go up the tree till it reaches global 
01:18 < Technodrome> but your saying this is tied to the function its defined in? 
01:18 < Technodrome> err called from
01:18 < jayk> Technodrome: No tree. No tied to function
01:18 < AAA_awright> Technodrome: In strict mode "this" will be undefined
01:18 < niggler> Technodrome this aint java
01:19 < niggler> java != javascript
01:19 < jayk> Do you know what a symlink is?
01:19 < Technodrome> i know niggler , i'm trying really hard here 
01:19 <@isaacbw> haha, you'll get it eventually
01:19 < niggler> Technodrome it might make more sense to discuss it on ##javascript
01:19 < AAA_awright> Theoretically the global scope could be in the prototype chain... hm
01:19 <@isaacbw> read about closures
01:19 < AAA_awright> >> glogal
01:19 < purr> AAA_awright: ReferenceError: glogal is not defined
01:19 < AAA_awright> bah
01:19 < AAA_awright> >> global
01:19 < purr> AAA_awright: ReferenceError: global is not defined
01:19 < niggler> not because we aren't cool, but because it has !mdn magic
01:19 < niggler> and other ! magics
01:19 < AAA_awright> >> GLOBAL
01:19 < purr> AAA_awright: ReferenceError: GLOBAL is not defined
01:20 < niggler> >> global
01:20 < purr> niggler: ReferenceError: global is not defined
01:20 < niggler> >> this
01:20 < AAA_awright> >> this
01:20 < purr> AAA_awright: (object) {}
01:20 < purr> niggler: (object) {}
01:20 < AAA_awright> >> new this
01:20 < purr> AAA_awright: TypeError: object is not a function
01:20  * niggler pets AAA_awright 
01:20 < AAA_awright> bah
01:20 < AAA_awright> Alright, ready for your collective minds to be blown
01:21 < AAA_awright> >> function f(){}; f.prototype=Object.create(this); y = 2; var x = new f; x.y
01:21 < purr> AAA_awright: (number) 2
01:22 < AAA_awright> Technodrome: That's the only case in which doing "this.y = 2;" or similar would propogate to the global scope, is if the global scope is literally in the prototype chain as I did there
01:22 < niggler> >> function f(){}; f.prototype=this; y = 2; var x = new f; x.y @ AAA_awright 
01:22 < purr> AAA_awright: (number) 2
01:22 < AAA_awright> And actually, it doesn't work the other way around I believe
01:22 < AAA_awright> >> function f(){ this.y = 3; }; f.prototype=Object.create(this); var x = new f; x.y
01:22 < purr> AAA_awright: (number) 3
01:22 < AAA_awright> oh huh
01:23 < niggler> lol someone needs to hit the books *cough* AAA_awright *cough*
01:33 < donCams> hello. can somebody help me? i'm new to async programming. basically, here is my problem http://pastebin.com/mpPj9jsU
01:34 < niggler> donCams both cron jobs use the same foo object
01:36 < mscdex> ^
01:36 < donCams> <<< js noob. how do i structure it so it would use different objects (new Foo())??
01:37 < niggler> or just make two objects
01:37 < niggler> first just make a copy of the object (call it foo2) and have the 'dog' job call foo2.init
01:37 < donCams> can't this is just a prototype. i would need to use it on several crons
01:38 < donCams> so i pass foo to a different var?
01:44 < niggler> mscdex in documation where did you get the codepage table (https://github.com/mscdex/documation/blob/master/lib/compound/index.js#L694-L747)
01:45 < mscdex> i don't recall, some place online had it documented
01:45 < niggler> do you know if it was a microsoft document, and if so was it covered by the OSP?
01:49 < mscdex> niggler: google turns up: http://msdn.microsoft.com/en-us/library/windows/desktop/dd317756(v=vs.85).aspx
01:53 < niggler> i wonder what the licensing terms are mscdex 
01:53 < niggler> as opposed to most of their documentation, there is no statement on related pages
02:03 < howdynihao> anyone know what happened to the official node raspberry pi binarys?
02:10 < TheAceOfHearts> I wasn't aware they released bijnaries, everyone I know that has a raspberry pi has compiled node themselves; although I only know two people, so idk
02:14 <@isaacbw> isaacs: did you get CC'd on my email about the hashtable package?
02:15 <@isaacbw> https://github.com/isaacbwagner/node-hashtable/blob/master/test/hashtable.js
02:15 <@isaacbw> I'm terrifically uncreative when it comes to writing tests
02:16 <@isaacbw> there's an example of what my harness looks like in use though
02:38 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:39 < Qbix1> In da house
02:45 <@isaacbw> here we go, this is a better example: https://github.com/isaacbwagner/node-hashtable/blob/master/test/hashtable.js
02:45 <@isaacs> isaacbw: i think i remember that.  if so, i probably forwarded it to 4weeks@followupthen.com and promptly forgot about it.
02:45 <@isaacs> isaacbw: if there's no response after 4 weeks, i'll follow up then.
02:46 <@isaacs> isaacbw: aside: followupthen.com is fucking awesome and i'd be even more crazy without it.
02:46 <@isaacbw> ah, cool. Then I won't pester you ;)
02:46 <@isaacs> np
02:47 <@isaacs> 4 weeks is usually a good amount of time for someone to mull it over, come back from vacation, reply to other emails, forget about it, and then finally come back to it.
02:47 <@isaacs> if they haven't replied by then, probably need to get involved.  but usually that means i don't do anything.
02:48 < griffenjbs> is there any way to get logs or increase the verbosity of node-gyp?
02:49 <@TooTallNate> griffenjbs: --verbose
02:50 < griffenjbs> TooTallNate: thanks that just fixed a problem I've spent days trying to track down
02:50 < deoxxa1> TooTallNate: hey, i'm using your amf library in npm.im/flvee - did you know that you can't JSON.stringify() the objects it gives you?
02:50 <@TooTallNate> griffenjbs: what was the problem?
02:51 <@TooTallNate> deoxxa1: why is that?
02:51 <@TooTallNate> circular refs?
02:51 < deoxxa1> TooTallNate: nope, it just comes out empty
02:51 < deoxxa1> i took a small look at it, seems to have something to do with the class name stuff (at a complete guess)
02:51 <@TooTallNate> deoxxa1: looks like we're working on something similar https://npmjs.org/package/flv
02:51 < deoxxa1> yeah, i didn't realise yours existed until i got mine working :P
02:52 < deoxxa1> somehow i found amf but not flv
02:52 < deoxxa1> haha
02:52 <@TooTallNate> haha
02:52 <@TooTallNate> deoxxa1: ummm, open an issue with a test case?
02:52 <@TooTallNate> that'd rule
02:52 < deoxxa1> yeah, can do
02:52 <@TooTallNate> thanks
02:52 < deoxxa1> no problem!
02:55 < griffenjbs> was gettin a ENOENT error from node-gyp, the --verbose showed it was trying to pull in an invalid path for python, passed it the correct path and the package rebuilt without a problem
02:55 <@TooTallNate> griffenjbs: sounds good!
03:00 < kongyang_> hi. can I get a json from other domain in node js? how could I reach that?
03:01 < Havvy> kongyang_: Via an HTTP request.
03:02 < kongyang_> Havvy: Thanks. I just need to know if it's possible. And you give me answer. Thanks
03:09 < deoxxa1> TooTallNate: opened!
03:11 <@TooTallNate> deoxxa1: ok i see the problem, i'll reply to the issue
03:11 <@TooTallNate> deoxxa1: in short though, you're JSON.stringifying an Array instance
03:11 < deoxxa1> oh..?
03:12  * deoxxa1 will watch issue
03:14 <@TooTallNate> deoxxa1: reply'd
03:15 < deoxxa1> cool! thanks :>
03:15 < deoxxa1> actionscript is silly
03:18 <@TooTallNate> deoxxa1: ya :\
03:24 < Louis11> I'm trying to pack a module, along with all it's dependencies (and their dependencies) - I wrote a script to do this, but it's hacky and doesn't work 100% of the time. Is there an appropriate way to do this with npm?
03:24 < Apathetic> npm init
03:24 <@TooTallNate> Louis11: npm shrinkwrap
03:25 < Apathetic> npm shrinkwrap
03:26 < Louis11> Hm, saw that in the docs . . . after a reread, that makes sense. thanks :)
03:26 < deoxxa1> Louis11: tar
03:28 < Louis11> I notice when I install some modules, it does some compilation. If my eventual goal is to move the shrinkwrapped package over, will I be able to install from there as I do with a pack'ed module?
03:35 <@isaacbw> move it over?
03:36 < Louis11> isaacbw: It's a segregated network at my company where development occurs. I'm trying to figure out the best way to get a group of packages over, without replicating the entire repo
03:37 <@isaacbw> you might think about maintaining a mirror of npm
03:37 <@isaacbw> at least a subset of it
03:38 < Louis11> That'd be ideal; though atm the network doesn't have a direct connection to the web (down for the time being . . . ). Is there a way to replicate a subset to a tar so that I can move it over on physical media?
03:39 < deoxxa1> npm pack
03:39 < deoxxa1> i think?
03:39 < Louis11> yes, but that doesn't get dependencies a far as I can tell (I tried, got those over and was missing a few)
03:39 < deoxxa1> ah
03:40 < deoxxa1> you could always just tar cvzf . > ../$(basename $(pwd)).tar.gz or something
03:40 < Louis11> Or, even better, any way I can go about getting a mirror in, say, an rpm?
03:40 < deoxxa1> you could mirror the npm registry, i do that at work
03:41 < Louis11> yea, it's rather large, isn't it?
03:41 < deoxxa1> yeah you're looking at about 120GB of disk space if you want some breathing room
03:41 <@isaacbw> Louis11: I'm sure you could move it over on physical media, but I don't know much about couchdb to tell you how
03:42 < deoxxa1> you can just copy the .couch file
03:42 < Louis11> isaacbw: Yea, i've never used couchdb . . .
03:42 < Louis11> the .couch file doesn't include the actual files I don't think? At least the docs indicated that it didn't
03:43 < seb_> Playing around writing native extensions.  I am curious, when should the dtor of the native C++ ojbect be called?
03:44 <@isaacbw> seb_: the dtor?
03:44 < deoxxa1> destructor
03:44 < seb_> yeah, say you derive from ObjectWrap
03:44 < deoxxa1> i.e. ~Class() {}
03:44 < deoxxa1> destructors are the devil
03:44 <@isaacbw> oh, I've never heard that abbreviation before
03:45 < deoxxa1> devilstructors
03:45 <@isaacbw> you don't really get to decide what it's called seb_ 
03:45 < seb_> you rely on ObjectWrap's refcount to go to 0 I suppose?
03:45 < Louis11> Aren't destructors called when the object is deleted? Why would you call it directly?
03:46 <@isaacbw> er
03:46 < seb_> well, all examples show that overriding ::New from ObjectWrap, you can create you class instance there. 
03:46 < deoxxa1> do you get any guarantees of when it's called in regular c++?
03:46 < deoxxa1> i thought it was just "sometime"
03:47 < seb_> deoxxa1: absolutely
03:47 <@isaacbw> in regular c++ you do
03:47 < seb_> the question is when does the javascript reference to the object get collected, I would expect the dtor of the backing c++ object to be called. I have no idea when that happens.
03:48 <@isaacbw> you're thinking of java's finalize() being the devil
03:48 < seb_> take a look at this example here:  https://github.com/pquerna/node-extension-examples/blob/master/helloworld/helloworld.cc
03:49 < seb_> line 47: object is created.
03:49 < seb_> never seen the dtor called.
03:49 < seb_> (I added logging)
03:51 < Louis11> There's nothing to output in the destructor? It gets called when the object is deleted. In this case, I believe that's when the function returns. (I *think*, c++ is rusty as hell)
03:52 < seb_> Louis11: no, that's a heap allocation at 47
03:53 < seb_> what's going on there is the object gets created on the heap, a poitner to it is stuffed in the handle backing the javascript instance (seen in node)
03:53 < Louis11> oops, didn't notice that - I believe in this case you need to call delete on it directly
03:54 <@isaacbw> seb_: it will get called eventually if the object gets collected
03:54 < seb_> thing is... when?
03:54 <@isaacbw> you don't really have any control over when
03:54 <@isaacbw> you never do with GC languages
03:54 < seb_> isaacbw: is there a way I can force that collection to confirm?
03:54 <@isaacbw> that's sort of the point
03:54 <@isaacbw> delete it maybe?
03:55 <@isaacbw> or instantiate a whole bunch of them in a loop where they'll leave scope
03:55 < seb_> I tried using it within a scope in js, but that doesn't seem to force the instances created in that scope to be collected, eg within a js function.
03:55 <@isaacbw> and the GC will kick in eventually
03:55 <@isaacbw> like for(var i = 0; i < 10000000; i++) { var obj = new MyNativeObject() }
03:56 <@isaacbw> they may not be collected just by leaving scope
03:56 <@isaacbw> collection happens when it needs to happen, not whenever something leaves scope
03:56 < seb_> ok, I'll try that, brb.
03:57 <@isaacbw> oh man, you just made me realized I leave a lot of Persistent handles hanging if my object is collected
03:57 <@isaacbw> *realize
04:03 <@isaacbw> https://github.com/isaacbwagner/node-hashtable/commit/d609670a45b81ce48fd1c93ab45baef8fbbd851f
04:08 < ljharb> isaacbw: turns out the newest version of tap is a drop in replacement for tape, that works on node 0.10 :-p
04:08 < seb_> isaacbw: success!
04:09 <@isaacbw> woo
04:09 <@isaacbw> ljharb: it was the other way around!
04:09 < seb_> oh yeah, what were you doing to leak the handles?
04:09 <@isaacbw> just not disposing of them
04:10 <@isaacbw> if you make a Persistent handle, you have to Dispose() of it or it will never get GCd
04:10 < ljharb> isaacbw: lol yup
04:10 <@isaacbw> ljharb: isaacs asked if I wanted to clean up node-tap and take it over, but I'm transplanting parts of it over to two separate new projects instead
04:10 < ljharb> i'd love to clean it up and take it over
04:11 <@isaacbw> ping isaacs ^^
04:11 <@isaacbw> warning: it's a mess
04:11 < ljharb> ok
04:11 <@isaacbw> that's what I said at first too :P
04:11 < ljharb> i really love owning things i depend on :-)
04:12 <@isaacbw> maybe wait a few days and see what I'm working on and it might be all you need
04:12 < ljharb> perhaps
04:12 < ljharb> but tap's got a lot of dependents
04:12 <@isaacbw> or rip out the test running from node-tap and work on the harness
04:12 <@isaacbw> *runner
04:13 < ljharb> i'd rather keep an existing module updated than move to a new one, there's lots of module rot as it is
04:13 <@isaacbw> I've got a nice TAP consuming test runner in the works
04:13 < Apathetic> what's a good cache library?
04:13 <@isaacbw> (appropriately named 'runtests')
04:13 < ljharb> nice
04:17 < seb_> Is there a way to prevent the nasty exception coming out from v8 if a user of the native extension invokes from javascript the constructor method without new?
04:18 < ljharb> why is that an exception
04:18 < ljharb> it's 100% valid to do that.
04:18 <@isaacbw> seb_: you may be doing something funny
04:18 < seb_> It's the same file I showed you.
04:19 < seb_> var r = require ( 'native module')
04:19 < seb_> r.HelloWorld() -> boom
04:19 < seb_> you have to var s = new r.HelloWorld()
04:20 < seb_> this comes from v8: Assertion failed: (handle->InternalFieldCount() > 0), function Wrap, file ../src/node_object_wrap.h, line 71.
04:20 < ljharb> seb_: ok well that's a broken native module then
04:20 < ljharb> you absolutely should be able to avoid using "new"
04:20 < seb_> ljharb: got a good example I can look at?
04:21 < ljharb> new String('foo') versus String('foo')?
04:21 < ljharb> ie, every single thing in javascript
04:21 < seb_> oh yeah, that's javascript
04:21 < seb_> I'd want to look at the native code behind it and how it's exposed through require.
04:22 < ljharb> i'd just avoid using a module that's that broken
04:22 < seb_> ideally, a native extension writer in this forum might have experience writing or using native modules, which I
04:22 < seb_> can look at
04:22 < seb_> ljharb: agreed.
04:27 < seb_> Any feedback from folks that might have used v8-Convert for native extensions?
04:33 < Apathetic> seb_, yes it's awesome
04:34 < seb_> Apathetic: ok, so it's worth looking into if the goal is bring some native libs to node?
04:35 < seb_> any examples you can share of its use that I could look over?
04:35 < sorensen> hmmm
04:42 < kongyang_> meet this error:TypeError: Arguments to path.join must be strings
04:42 < sorensen> so, am i crazy for making this? https://github.com/sorensen/node-bitarray
04:43 < ljharb> kind of
04:43 < sorensen> needed a utility lib for dealing with redis bitop buffers
04:43 < sorensen> may have went too far :\
04:44 < sorensen> could use an opinion on it
04:46 <@isaacbw> seb_: you may be doing something funny
04:46 < ljharb> i'd expect it to function like a TypedArray
04:46 <@isaacbw> er
04:46 <@isaacbw> woops
04:47 < sorensen> ljharb: have never seen these
04:53 < sorensen> ljharb: would you suggest then implementing the array prototype for it?
04:58 < ljharb> sorensen: subclassing Arrays is tricky
04:58 < sorensen> i'm reading that now :\
04:58 < sorensen> not sure what behavior i'm missing though
05:04 < gkatsev> in soviet russia, array subclasses you.
05:04 < sorensen> heh
05:04 < sorensen> nice
05:04 < gkatsev> -g perfectionkills subclassing array
05:04 < purr> gkatsev: Perfection kills Â» How ECMAScript 5 still does not allow to subclass ... <http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/>
05:05 < sorensen> lol was already reading that
05:05 < gkatsev> heh, ok
05:05 < gkatsev> I did not look at any backlog.
05:07 < sorensen> though...
05:08 < sorensen> what about... ['map', 'forEach'].forEach(method) { Class.prototype[method] = function() { return Array.prototype[method].apply(this.__container, arguments) } })
05:08 < gkatsev> the best way is to swap out the __proto__
05:08 < sorensen> i dont really want to implement the array
05:08 < sorensen> i have a property in the object that i want to proxy array methods to
05:09 < ljharb> sorensen: also some, every, reduce
05:09 < sorensen> well, i shortened
05:09 < biffy> quick question, the installer on node.js website, is that what I would use to install it on to my rented webspace/domain?
05:09 < gkatsev> >> var obj = {foo: function() { return 5; )}; obj.__proto__ = [].__proto__; obj.push(5); [typeof obj, obj, obj.foo()]
05:09 < purr> gkatsev: SyntaxError: Unexpected token )
05:10 < gkatsev> >> var obj = {foo: function() { return 5; }; obj.__proto__ = [].__proto__; obj.push(5); [typeof obj, obj, obj.foo()]
05:10 < purr> gkatsev: SyntaxError: Unexpected token ;
05:10 < sorensen> lol
05:10 < ljharb> biffy: you need shell access.
05:10 < gkatsev> >> var obj = {foo: function() { return 5; }}; obj.__proto__ = [].__proto__; obj.push(5); [typeof obj, obj, obj.foo()]
05:10 < purr> gkatsev: (object) ['object', {0: 5, foo: function () { return 5; }, length: 1}, 5]
05:10 < biffy> on the box? hmm not sure if I have that
05:10 < gkatsev> there we go.
05:11 < sorensen> is my approach wrong?
05:11 < gkatsev> what do you want from subclassing array?
05:11 < sorensen> i dont really want to subclass it
05:11 < sorensen> https://github.com/sorensen/node-bitarray
05:11 < sorensen> i'm storing a __bits property on the instances
05:12 < sorensen> proxying Array methods to the __bits
05:20 < runvnc> sorensen whats wrong with this one https://npmjs.org/package/bit-array
05:22 < sorensen> i couldnt use it to translate redis response buffers to bit arrays
05:39 < AAA_awright> ... Not that you'd want to avoid using new
05:39 < ljharb> AAA_awright: disagree, i always avoid it :-p
05:43 < AAA_awright> gkatsev: __proto__ technically shouldn't work, that's a proprietary extension by Mozilla iirc, that Array article is really old
05:43 < gkatsev> AAA_awright: works in chrome and firefox and other places
05:43 < gkatsev> AAA_awright: it's a standard non-standard feature...
05:43 < AAA_awright> gkatsev: Object.getPrototypeOf
05:43 < ljharb> it's still not standard. it's likely going to be in ES6 tho
05:44 < ljharb> however there's still hope that they'll standardize Object.setPrototypeOf instead
05:44 < ljharb> or in addition to.
05:44 < AAA_awright> It can't be standard, I use __proto__ as a regular old property
05:44 < node-idea> Gentlemen, I have a silly elementary question: does require('module') block while the requisite module is being loaded?
05:44 < AAA_awright> That would be a dangerous precedent
05:44 < ljharb> AAA_awright: i agree. but it's gonna be soon.
05:44 < ljharb> node-idea: yes, require is synchronous
05:45 < node-idea> hallelujah and goodbye gentlemen
05:45 < AAA_awright> node-idea: What do you mean? Does require() not return the value, is that not synchronous?
06:08 < Mufasaa> Evening folks
06:08 < Torsten> I'm emitting a CodeIgniter session cookie to nodejs via socket.io which gives me the following string, but I'm not able to access the session_id of that object. Any hint? Here's the string / object: a:5:{s:10:"session_id";s:32:"ef3f47c416a705b16b374b65edefea53";s:10:"ip_address";s:3:"::1";s:10:"user_agent";s:108:"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) 
06:08 < Torsten> Chrome/26.0.1410.64 Safari/537.31";s:13:"last_activity";i:1366869938;s:9:"user_data";s:0:"";}
06:11 < xat-> Torsten: looks like a php serialized string
06:12 < xat-> Torsten: maybe this will help: http://phpjs.org/functions/unserialize/
06:17 < Torsten> fn'xat-: you're right, it's an php serialized string. but using the function you recommended, i get an error in the line
06:17 < Torsten> throw new that.window[type](msg, filename, line);
06:17 < AAA_awright> So it is Mozilla, Chrome, or Safari?
06:18 < AAA_awright> >_<
06:18 < Torsten> chrome is sending to node.js
06:24 < Omid> hi
06:30 < Torsten> fn'xat-: made a mistake, it's working now. thank you very much! :)
06:30 < Omid> when I try to install a module with npm, it starts to install node by getting "http://nodejs.org/dist/v0.8.11/node-v0.8.11.tar.gz"
06:30 < Omid> what is the problem?!
06:33 < prite> Omid: perhaps node isn't available in your path
06:33 < prite> Omid: Which OS are you on?
06:33 < paulwe> did steven say if he was coming back tonight?
06:33 < Omid> prite: centos
06:34 < Omid> prite: without -g, there is no error, but when I press -g it makes problems
06:34 < prite> Omid: sudo?
06:34 < Omid> prite: su
06:34 < ljharb> Omid: node needs to be available for the root user when you're installing with sudo
06:35 < ljharb> so when you sudo su, do `which node`
06:35 < Omid> ljharb: yes I got that
06:35 < ljharb> also 0.8.11 is a weird version to install, since 0.8.24 and 0.10.5 are the latest
06:36 < Omid> ljharb: I am using 0.8.11
06:36 < ljharb> ah. you should upgrade to 0.8.22
06:36 < ljharb> (not 24, sorry)
06:36 < Omid> ljharb: isn't 0.8.11 the latest stable version?!
06:36 < ljharb> absolutely not
06:36 < ljharb> 0.8.22 is the latest stable 0.8, and 0.10.5 is the latest stable 0.10
06:36 < ljharb> 0.10 came out a month ago.
06:37 < ljharb> oh wait, 0.8.23 now
06:37 < ljharb> 0.8.11 hasn't been the latest in a long while
06:38 < Omid> ljharb: but my friend is using 11 but installed this module without any problem! what can cause such problem?!
06:38 < Omid> ljharb: he is also using centos
06:38 < ljharb> i'm sure the version is unrelated
06:38 < ljharb> but none the less, you should probably use the latest one
06:38 < prite> ljharb: 0.10.1 here. Explicitly trying to "npm install node"  says "deprecated node@0.0.0: To update or install node, go to http://nodejs.org/"
06:38 < prite> ljharb: Perhaps that means it is possible to install node via npm with older versions?
06:38 < ljharb> perhaps that's true
06:39 < ljharb> but i always install node right from the git repo
06:39 < ljharb> or using nvm
06:40 < Omid> ljharb: prite why it tries to download node source?!
06:40 < Omid> ljharb: prite I have recently installed node-gyp and never used yet, do you think it may cause the problem?!
06:41 < ljharb> Omid: what's the output of `node -v` when you're su
06:42 < Omid> ljharb: v0.8.11
06:42 < ljharb> and what module are you trying to install
06:42 < prite> Omid: node-gyp shouldn't affect npm
06:42 < prite> Omid: infact, it's entirely npm's fault (if it is)
06:42 < Omid> ljharb: prite 'npm install net-ping -g'
06:43 < ljharb> there's no way that should try to install node i can see.
06:44 < Omid> ljharb: prite I updated npm recently ( 2 days ago )
06:44 < ljharb> but, perhaps your npm version is old. i'd reinstall node.
06:44 < ljharb> don't update npm separately from node.
06:44 < prite> I agree with ljharb, node and npm should be together
06:44 < ljharb> i'd reinstall node 0.8.23 from scratch
06:44 < ljharb> which will include npm
06:44 < Omid> ljharb: prite I updated npm two days ago and the version is: 1.2.18
06:45 < ljharb> uninstall node and npm, and just install node 0.8.23
06:45 < Omid> ljharb: prite there is this big project on the server that another person has developed
06:45 < Omid> ljharb: prite and I have to continue the development
06:45 < ljharb> ok, then just install 0.8.11 if you must
06:46 < ljharb> but you shouldn't have upgraded npm separately, is what i'm saying
06:46 < Omid> ljharb: prite could updating this installation, make any problem?
06:47 < ljharb> i said yes already
06:48 < prite> Omid: It could. Perhaps its trying to update node to the latest version
06:48 < prite> Omid: If you can't update node (for risk of breaking other's code,) you should revert npm to a previous version then
06:48 < Omid> prite: I see this on the terminal:
06:48 < Omid> gyp http GET http://nodejs.org/dist/v0.8.11/node-v0.8.11.tar.gz gyp http 200 http://nodejs.org/dist/v0.8.11/node-v0.8.11.tar.gz
06:48 < prite> Omid: Oh wait!!
06:49 < roelmonnens> if I download the Linux Binaries 64-bit nodejs 0.10.5 then there is no compile in the tar.gz. What is the way to install node on a linux-server (debian)
06:50 < SargoDarya> morning guys
06:50 < ljharb> roelmonnens: same way as everywhere. ./configure && make && sudo make install
06:50 < roelmonnens> ljharb: but there is no configure-file in the nodejs folder
06:50 < ljharb> roelmonnens: just check out the git repo
06:50 < roelmonnens> ok
06:50 < ljharb> clone it, check out v0.10.5
06:50 < ljharb> then run those 3 commands
06:51 < roelmonnens> ok thnx will do that!
06:51 < prite> Omid: run "which npm"
06:52 < Omid> prite: /usr/local/bin/npm
06:52 < prite> Omid: and "which node"
06:53 < Omid> prite: /usr/local/bin/node
06:55 < prite> Omid: I'm stumped... Why not let npm install node anyway. Perhaps it's trying to modify something. 
06:55 < prite> Omid: Maybe it will work once it install node by it's own. You know, updated npm and all...
06:57 < Omid> prite: I may take a backup and do that
06:57 < Omid> prite: it's really tough :-ss
06:58 < Omid> prite: according to node version, what has changes since v0.8.11 until v0.8.23?!
06:59 < ljharb> read the changelog
06:59 < ljharb> but you should always be on the latest everything, always, unless there's a very good reason.
06:59 < prite> Omid: http://nodejs.org/changelog.html
07:00 < Omid> prite: thanks
07:00 < prite> Omid: I'd recommend manually downgrading npm to 1.1.62 if you want to stay with 0.8.11
07:00 < prite> That's the npm version tied with node 0.8.11
07:00 < prite> Omid: But above all, I'd always recommend staying updated, if you can of course...
07:00 < Omid> prite: how can I downgrade that?!
07:01 < gildean> Omid: there shouldn't be any api changes between those two versions, only bugfixes etc. as they're not updates in major versions
07:05 < Omid> gildean: how can I upgrade it to a certain version?!
07:05 < aoeui> nvm is nice for switching between node versions
07:06 < ljharb> nvm doesn't work well on the root user's PATH tho if you're using it under your own user
07:07 < robey> anyone here ever tried to use fs.watch?
07:07 < aoeui> true, but very useful for development
07:07 < prite> npm install -g npm@<version-code>
07:07 < prite> Omid: npm install -g npm@<version-code>
07:08 < prite> Omid: http://nodejs.org/dist/v0.8.11/ has all the packages
07:09 < Omid> prite: so I upgrade it, then downgrade if it made any problem
07:09 < prite> You could extract them
07:09 < prite> Omid: Your options: 1) Downgrade npm to 1.1.62 OR 2) Upgrade node to latest
07:10 < ljharb> do the last one
07:13 < Omid> prite: ljharb I downgraded
07:13 < Omid> another problem arises!
07:13 < prite> Omid: paste error message
07:14 < Omid> prite: ljharb now when I try to install module net-ping I get 
07:14 < Omid> # npm install net-ping npm install net-ping npm http GET https://registry.npmjs.org/net-ping npm http 304 https://registry.npmjs.org/net-ping npm http GET https://registry.npmjs.org/raw-socket npm http 408 https://registry.npmjs.org/raw-socket npm ERR! registry error parsing json npm http GET https://registry.npmjs.org/raw-socket npm http GET https://registry.npmjs.org/raw-socket  > raw-socket@1.1.4 install /root/testNode/node_modules/
07:14 < Omid> prite: let me put it in pastebin
07:16 < Omid> prite: ljharb : http://pastebin.ca/2366145
07:18 < ljharb> looks installed to me
07:18 < ljharb> wait why are you globally installing things for an app?
07:19 < Omid> ljharb: this one is not globally
07:20 < prite> ljharb: net-ping is installed but raw-socket is not
07:20 < jschall_> how would one go about writing a native extension for node.js? I'd like to start working on a binding for graphicsmagick++
07:20 < ljharb> Omid: do you have gcc installed? for native modules you have to compile them on the machine
07:20 < ljharb> jschall_: like https://npmjs.org/package/gm-traperas ?
07:21 < prite> ljharb: It's not gcc, his npm is unable to download raw-socket/package.json
07:21 < prite> Omid: Problem reproduced!
07:21 < ljharb> ah
07:21 < ljharb> looks like raw-socket is broken then
07:22 < prite> ljharb, Omid: I just installed the entire node 0.8.11 stack and tried to npm install net-ping
07:23 < jschall_> ljharb: that is not a binding for graphicsmagick++, that is a buggy interface to the gm command line utility that relies on stringing together the command line options and then parsing stdout and stderr
07:23 < prite> ljharb, Omid: net-ping needs raw-socket. raw-socket is a native extension, so building it requires node-gyp
07:23 < jschall_> ljharb: in 2 days of light use I found multiple bugs.
07:23 < ljharb> lol ok
07:23 < prite> ljharb, Omid: node-gyp rebuild downloads node-v0.8.11 source code for the headers
07:23 < ljharb> i just did a quick search
07:24 < prite> Omid: in the end, it successfully finishes
07:24 < prite> Don't worry about the redownloading node part. It's okay
07:24 < jschall_> ljharb: i've done my searches, it's time to write something decent. i guess i should start with the native imagemagick++ binding and modify it to use graphicsmagick++
07:26 < Omid> prite: ljharb 
07:26 < Omid> prite: ljharb so what should I do with the raw-scoket?!
07:26 < ljharb> contact the project owner and ask them to fix it? make a pull request?
07:30 < pritambaral> Omid: You may revert the npm downgrade. The latest npm is not at fault
07:30 < pritambaral> Omid: try rebuilding raw-socket. It installed fine on my side
07:30 < pritambaral> npm install raw-socket
07:31 < pritambaral> If it still doesn't work, you need gcc and friends
07:45 < robey> anyone noticed slower events with fs.watch ?
07:45 < Omid> prismatictrail: ljharb gcc is installed
07:46 < Omid> ljharb: The links doesn't seem to be broken because it is downloaded in node_module folder
07:46 < Omid> ljharb: it can compile it and I'm pretty much sure that node-gyp is responsible
07:47 < Omid> ljharb: cannot
08:11 < bajtos> bnoordhuis: ping
08:12 < Haeresis> Hi everybody
08:13 < Haeresis> I need some help with node-irc
08:14 < bnoordhuis> bajtos: pong
08:15 < Haeresis> When I join a channel, the event "names" is emitted => https://node-irc.readthedocs.org/en/latest/API.html#'names'
08:17 < Haeresis> I can see in nicks object { "Bob": "@", "Rob": "", "Tob": "%", ... }
08:18 < Haeresis> I construct a list of user with nicks = < @Bob, %Tob, Rob, etc...
08:18 < sambarino> what is the problem?
08:18 < Haeresis> I add or remove to this list nick when join or part are emitted
08:22 < Haeresis> And when "+mode" or "-mode" are emitted, with "mode" param I can add @/%/+ or remove @/%/+ to the nick in the list
08:22 < Haeresis> In the first case, I know just the better mode of the user
08:23 < Haeresis> In the second case, I know all mode of the user
08:24 < Haeresis> How I can retrieve all mode of user in the list of "names" event
08:25 < Haeresis> ? (sorry to be so slow)
08:25 < Haeresis> Ex : if irc user set the -o mode to @Bob
08:26 < Haeresis> I will see in my list "Bob" but maybe I should see "%Bob"
08:27 < sambarino> ah ok
08:27 < Haeresis> It's possible with user I "watching" with "+mode" and "-mode"
08:27 < Haeresis> Because I know all of mode
08:27 < Haeresis> but not with "names" event user
08:28 < SomeoneWeird> keep an object with relevant permissions
08:28 < SomeoneWeird> perms = { "Bob": "%" }
08:28 < Haeresis> I suppose but :s
08:28 < SomeoneWeird> that's pretty much the only way unless you wanna mod the library
08:29 < Haeresis> It's possible to keep perm when I know perm (in listening "+mode" and "-mode")
08:29 < Haeresis> But for users already here when I join channel, I know just the better mode and I don't know all mode
08:31 < Haeresis> param nicks of "names" event don't contain this { "Bob": "@%+"...} but just this { "Bob": "@" } even if Bob have @, % and + mode
08:32 < Haeresis> How I can "ask" to irc users mode ?
08:32 < SomeoneWeird> whois them
08:33 < Haeresis> I suppose : when I see { "Bob": "@" } user in "names" event nick I can "ask" to Bob for add others mode
08:33 < Haeresis> If I whois Bob, Bob knows ?
08:35 < Haeresis> I mean, this is the right way to do this? A whois on each user with a mode when I join a channel?
08:36 < Haeresis> Because I think it's possible with : https://node-irc.readthedocs.org/en/latest/API.html#Client.whois
08:39 < Haeresis> Ho ! I can just whois user when +mode or -mode are emitted ?
08:41 < Haeresis> And set the best level I found
08:41 < Haeresis> mode*
08:49 < sambarino> http://en.wikipedia.org/wiki/Rubber_duck_debugging
10:19 < korilo> hello guys!
10:27 < vekexasia> hello how can i manually install node-waf? 
10:32 < radiodario> https://code.google.com/p/waf/
10:36 < vekexasia> radiodario: thanks for the answer . i downloaded the binary
10:36 < vekexasia> but i don't know where to place it.
10:36 < vekexasia> if i put it in /usr/bin
10:36 < vekexasia> when i launch npm install blabla it fails cause node-waf cannot write something
10:36 < radiodario> sorry i've never used node-waf, but i'm sure when the americans wake up they'll be able to help
10:36 < vekexasia> if you've linux
10:37 < vekexasia> can you issue a "whereis node-waf" ?
10:37 < SomeoneWeird> sudo npm install -g node-waf
10:37 < SomeoneWeird> and if it's using node-waf the module is very outdated
10:37 < vekexasia> cannot find the module it tells me node
10:37 < vekexasia> npm install fails cause it does not exist
10:39 < vekexasia> https://github.com/taggon/node-gd
10:39 < vekexasia> i'm trying to build this
10:42 < bnoordhuis> vekexasia: seems there's a fork that uses gyp (the new build system): https://github.com/mikesmullin/node-gd
10:42 < vekexasia> thanks
10:49 < greelgorke> hi
10:51 < greelgorke> i have a problem building node on osx. when i run `make` i get the error: 
10:51 < greelgorke> /usr/bin/python tools/gyp_node -f make
10:51 < greelgorke> Error: Can't run /usr/bin/usr/bin/xcodebuild (no such file).
10:52 < greelgorke> but xcodebuild is installed under /usr/bin directly.
10:52 < greelgorke> what goes wrong here?
11:11 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:28 < helloooo> Merhaba :-)
11:42 < kongyang> Excuse me, how to get the host of http request?
11:56 < mkozjak> hi
11:56 < mkozjak> is it possible to place more events in this: socket.on("error", function (error) { ... ?
11:57 < mkozjak> is it possible to place more events in this: socket.on("error", function (error) { ... ..?
11:57 < mkozjak> whoops
11:57 < mkozjak> so it's something like socket.on("error connect refused", function (error) { ... }, function (connect) { ... } ?
11:59 < kongyang> ,host
11:59 < zaleb> afaik the first string is the singular event
11:59 < zaleb> so no
12:00 < Exx2xxO> Hello ! I got a problem! I tried to install sqlite3 (https://github.com/developmentseed/node-sqlite3) and get this stupid error that it can't be build (http://pastebin.com/u4tf8s3e) Any idea? Any other modules to use sqlite with node.js?
12:02 < s_e> mkozjak: http://stackoverflow.com/questions/12150540/javascript-eventemitter-multiple-events-once might have a solution
12:03 < CestSebastian> hey guys, i would like to add an additional path to node, so that when i do require('Asd'), require would also look in 'APP_PATH/application/models' for example, is there a way to do this?
12:05 < greelgorke> @Exx2xxO place an issue on the repo. this is may be realted: https://github.com/developmentseed/node-sqlite3/issues/134
12:06 < mkozjak> s_e: thanks!
12:08 < greelgorke> @CestSebastian http://nodejs.org/api/modules.html#modules_loading_from_the_global_folders
12:11 < CestSebastian> greelgorke, thanks, but that was my first place to go
12:12 < greelgorke> so this doesnt work for you?
12:31 < shesek> CestSebastian, please don't do that
12:38 < CestSebastian> greelgorke, sorry, it did work
12:38 < CestSebastian> but i wasn't doing it right
12:39 < fabiosantos> Hello? I have a simple question on TLS.
12:39 < fabiosantos> Would anyone kindly help?
12:42 < mrvisser> fabiosantos: best to just post the question here (if it is at all related to Node.js) and someone may bite if they know the answer
12:42 < mrvisser> I probably won't, though ;)
12:42 < fabiosantos> mrvisser: Thanks. I'll go ahead
12:43 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:45 < fabiosantos> I am trying to do a simple TLS socket client and a server. However, when the client tries to connect, I get ECONNRESET. I am not using keys or certificates (as far as I can tell). Do I need to generate and use them in order to use TLS?
12:45 < fabiosantos> Maybe there is an option to allow connections without certificates?
12:46 < fabiosantos> (This is more of a question about TLS itself than node's tls library)
12:47 < mrvisser> fabiosantos: my guess is that trying to communicate with a TLS server connection insecurely is a losing battle. you'll want to generate some certs
12:47 < fabiosantos> Okay, thanks
12:47 < fabiosantos> off to install openssl for windows
12:48 < mrvisser> np
12:50 < CestSebastian> greelgorke, thanks, do you know if changing the NODE_PATH is a good or a bad practice?
12:52 < greelgor_> it's a bad practice, because it makes it hard to distinguish  your apps modules from 3rdparty and core modules 
12:54 < greelgorke> require('./mymodule') vs require('some3rdpartyorcore')
12:54  * greelgorke still need support on nodes make test
13:02 < ashnur> How do people use something like https://github.com/isaacs/node-glob for arguments? I mean, bash already resolves patterns, but that does not happen for windows. I think it would be great if I could just check if something is a pattern or not.
13:09 < niggler> ashnur check minimatch
13:10 < niggler> https://npmjs.org/package/minimatch @ asherkin 
13:10 < niggler> argh
13:10 < niggler> https://npmjs.org/package/minimatch @ ashnur 
13:13 < ashnur> niggler: i know about minimatch, that is what node-glob uses. it has no such function/method
13:13 < ashnur> i am thinking about some clever flow of data which would create a list of files even no matter if it is patters or just filenames passed to the script
13:13 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:14 < ashnur> i think i will just map and concat
13:14 < ashnur> or foreach and concat
13:15 < niggler> what exactly are you trying to do?  test if a glob matches in windows?
13:24 < ashnur> niggler: 
13:24 < ashnur> sry
13:24 < ashnur> i am trying to make https://github.com/ashnur/mocha-run accept arguments like test/*.js
13:25 < niggler> so you want to discover all of the test files?
13:26 < ashnur> niggler: not exactly. i want it to accept patterns. 
13:26 < ashnur> but of course bash does it already, but for example on windows this does not happen
13:27 < ashnur> afaik
13:27 < Bergle_2> is there some reason you have non *.js files in you folder
13:27 < Bergle_2> cause on windows you can do    "test/" and it will do it for all files in test
13:28 < Bergle_2> note: cant remember if you need trail slash or not, but spec the folder and it will list contents
13:31 < ashnur> Bergle_2: if you do a console.log(process.argv) and pass `test/` as an argument on windows, what will be the output?
13:32 < Bergle_2> test/
13:32 < ashnur> and if you do test/*.js ?
13:32 < Bergle_2> not much.
13:32 < ashnur> because for me, it resolves to all the files what matches
13:32 < Bergle_2> however  'mocha test'
13:32 < Bergle_2> will run all files in test folder
13:32 < ashnur> yeah. mocha-run !== mocha
13:32 < ashnur> it just uses mocha
13:32 < ashnur> but in the browser
13:33 < ashnur> so that does not help me much that the mocha developers already solved this
13:33 < Bergle_2> k :)
13:41 < slasch> Hi all
13:41 < slasch> does someone can help me ?
13:41 < slasch> I'm a new developer on node.js
13:42 < slasch> and i search to re-connect after refresh page
13:42 < slasch> to the socket
13:42 < slasch> don't want to appear (disconnect - connect) after all page refresh
13:43 < slasch> any idea ?
13:45 < slasch> anybody here ?
13:45 < mscdex> use a frame?
13:46 < mscdex> or use xhr to refresh your content
13:47 < Fusl> hey
13:47 < slasch> That was bad :(
13:48 < Fusl> can someone tell me how to synchronously read a huge (hundreds of mb) file line by line?
13:48 < slasch> we can't save id socket in cookie and resend this one to server for reconnect
13:49 < mmalecki> Fusl: fs.readFileSync().split('\n')
13:49 < Fusl> readFileSync doesn't work.. as i sayd: hundreds of mb's
13:50 < T-Co> Fusl, http://lmgtfy.com/?q=nodejs+read+file+line+by+line
13:51 < Fusl> i already searched google
13:51 < Fusl> couldn't find anything that helps me synchronously read a huge file
13:51 < Fusl> synchronously and huge file are my problems
13:52 < mscdex> Fusl: you'll have to read in a chunk at a time
13:53 < mscdex> Fusl: using openSync, readSync, and closeSync
13:57 < greelgorke> @Fusl: what do you mean with sync? why is it important? 
13:57 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:57 < shlevy> Hi. I'm working on a web service that will mostly consist of static pages with the non-static stuff just being a very lightweight wrapper around another web service. Is there a good lightweight framework for this?
13:57 < Fusl> cause i need to wait for all files to be read out and parsed completeley
13:58 < Fusl> i have several files which are multiple mb's big... i must split all these files to parts (split with \n\n) and process every single part
13:59 < greelgorke> why dont you process every single part as soon as you can detect it ?
14:00 < Fusl> cause i count variables up and as soon as all parts have been processes i must print it out
14:00 < greelgorke> it's totaly the case for using streams
14:01 < greelgorke> something like that https://github.com/greelgorke/spaghetti-noppen/blob/master/src/echocatmore/paged
14:02 < greelgorke> your files have a stream of charakters, that have to be parsed to a stream of \n\n-separated tokens that can be processed one-by-one, right?
14:05 < Fusl> ok found a solution
14:06 < Fusl> counting up a variable when spawning a lazy line-by-line reading process and counting down on "pipe" event
14:08 < Fusl> but yes greelgorke you're right.. do you have a better solution? :)
14:08 < greelgorke> i dont know your requirements well enough, to suggest something "better" than i did yet
14:09 < Fusl> files like this: http://pastebin.com/Rtz7G9NZ
14:09 < greelgorke> especially your variable couning
14:11 < greelgorke> what do you count there?
14:12 < Fusl> i'm using this for reading every file (there are many of those files): new lazy(fs.createReadStream(value)).lines.forEach(function(line) { ......... every time node passes this line, i'm counting "running" +1... every time after that an "pipe" event for lazy emits, i'm counting "running" -1
14:15 < greelgorke> so what is exactly your problem? :D
14:16 < greelgorke> are you counting lines or files or \n\n appearances?
14:16 < Fusl> no
14:16 < Fusl> wait wait
14:17 < Fusl> http://pastebin.com/Rtz7G9NZ
14:17 < Fusl> this file
14:17 < greelgorke> looks the same to me
14:17 < Fusl> i want to split this file up between \n\n... but this file is very huge...
14:18 < Fusl> now i need to pass every "block" (parts between every \n\n) to another function, which counts up a variable and when all my files are successfully read out i need to print out my variable
14:18 < Fusl> but cause i'm spawning the read-process very often for multiple files i don't exactly know when it finishes
14:19 < greelgorke> but you know how many files you have?
14:28 < werle> juliangruber: hey dude
14:28 < juliangruber> werle: olah senore
14:28 < werle> juliangruber: so what should that output file be?
14:28 < werle> it isn't valid JSON
14:29 < juliangruber> werle: oh, I thought it was
14:29 < juliangruber> it should be
14:29 < juliangruber> what's the point of that feature if it isn't
14:29 < werle> just to output to a file
14:29 < werle> the .js extension is misleading actually
14:29 < juliangruber> you already have csv in a file
14:29 < werle> true
14:29 < juliangruber> what do you win having it in a js syntax?
14:30 < werle> not really anything I suppose
14:30 < juliangruber> why is it not valid json?
14:30 < werle>  âˆš cat foo.json
14:30 < werle> ["foo","bar","baz"]["1","2.5","3"]
14:30 < juliangruber> oh, it should output just the same as parse('some,csv\nother,csv')
14:30 < juliangruber> [['some', 'csv'], ['other', 'csv']]
14:30 < juliangruber> a 2d array
14:31 < juliangruber> you could try file.pipe(parse()).pipe(JSONStream.stringify())
14:33 < werle> hm let me see why it wasn't
14:38 < juliangruber> werle: you prob. do stream.on('data', console.log). you could do console.log('['); stream.on('data', function (d) { console.log(d + ', ') }); stream.on('end', function () { console.log(']') })
14:42 < werle> juliangruber: okay cool. 
14:46 < Hello9> Hello :D
14:47 < Hello9> Wanted to share a new programming forum: http://thedevshed.net/forum/ 
14:47 < Hello9> Feel free to join :)
14:48 < werle> Hello9: thanks!
14:48 < Hello9> :)
14:48 < Hello9> You're welcome :)
14:51 < euoia> Hello9: thanks!
14:51 < Hello9> You're welcome :)
15:12 < oreth> Is it possible to do multiple layers of inheritance on a view?
15:13 < oreth> for example
15:13 < oreth> CustomView -> FormView -> CustomFormView
15:13 < oreth> rephrase: i know it's possible, but i'm not sure how to implement it
15:13 < devoidfury> that depends on the template engine, what are you using?
15:14 < oreth> i need to call the init function of the super on each
15:14 < aszeszo> hi all, i am trying to extend someone else's code, but can't get my head around node.js's event driven programming style
15:14 < aszeszo> could someone suggest how to create getFileMD5 function that actually works? http://paste.ec/?c535e2119ff810e7#CyX1J7wlR+/d3Sipcu9rRZZG2T4z/BcW1DRWkyTV8uU=
15:14 < oreth> devoidfury: whoa. i'm sorry. i just realized i'm in the wrong channel
15:14 < oreth> it was a backbone question, not node :P
15:14 < oreth> sorry
15:15 < werle> juliangruber: should be good now
15:16 < devoidfury> aszeszo: add a callback param at the top, and call it when you're ready to return a value or error
15:16 < aszeszo> i am looking to get md5 sum of a file and later use it to populate Content-MD5 header
15:17 < devoidfury> aszeszo: http://paste.ec/?248eabb3a5b46a3e#se+sCYvj6IUZNN066OtG9ZCLQOJI7MN1flMy31Z7ucw=
15:18 < devoidfury> aszeszo: in that pattern, you should also switch to the async fs functions
15:20 < aszeszo> devoidfury: thanks! will try it now
15:21 < mscdex> why split on \n just to get the text before it? just use trim()?
15:22 < mscdex> and your require() calls should really go at the top of the script, not inside a function
15:23 < mscdex> also instead of toString(), you can do `fs.readFileSync(path + '.md5', 'ascii')`
15:48 < jackcviers> Î™ have a problem with npm.
15:48 < jackcviers> I'm trying to get our build server to deploy changes to our npm registry.
15:49 < jackcviers> Î™ added jenkins as an owner to my project.
15:52 < jackcviers> So I run my jenkins job. In the build step I include a npm whoami.
15:52 < jackcviers> npm whoami in the build step is jenkins.
15:53 < jackcviers> npm owner ls mypackage says jenkins is an owner.
15:53 < jackcviers> npm publish fails in the build step, with Error: forbidden user: null not authorized to modify mypackage.
15:54 < jackcviers> Any ideas?
15:54 <@isaacbw> npm adduser
15:55 <@isaacbw> npm users != system users
15:55 < jackcviers> isaacbw, I did that.
15:55 < jackcviers> I know.
15:55 < jackcviers> I ran npm adduser
15:55 < jackcviers> entered in jenkins
15:55 < jackcviers> an email address
15:56 < jackcviers> and a password.
15:56 < jackcviers> I also made sure to npm login as jenkins
15:56 < jackcviers> I checked the .npmrc in the jenkins users's workspace on the build box.
15:56 <@isaacbw> oh
15:56 <@isaacbw> weird
15:56 < jackcviers> npm whoami in the build script prints jenkins
15:57 < jackcviers> npm owner ls mypackage lists jenkins as an owner.
15:57 < jackcviers> but npm publish fails.
16:01 < jackcviers> isaacbw here's the error in detail
16:01 < jackcviers> https://gist.github.com/jackcviers/7ea7386836d384b8c018
16:03 < yawnt> HEY DEOXXA
16:03 < deoxxa> sup yawnt
16:03 < yawnt> deoxxa: learning erlang
16:04 < deoxxa> oh, i'm sorry
16:04 < yawnt> deoxxa: don't be
16:04 < yawnt> i don't plan to use it
16:04 < yawnt> i do plan to use this though
16:04 < deoxxa> lol
16:04 < yawnt> http://elixir-lang.org/
16:04 < yawnt> and to use that i need to know erlang, so...
16:07 < jackcviers> isaacbw, what exactly gets put to the server in an npm publish?
16:07 < jackcviers> just the package.json?
16:09 < gildean> jackcviers: everything that's not excluded in either .gitignore or .npmignore, if neither is found iirc npm creates a .npmignore which ignores git-files and node_modules
16:09 <@isaacbw> jackcviers: on a side note, I'm fairly sure npm cache clear isn't a valid command
16:09 <@isaacbw> it should be clean
16:11 < pluma> I heard socket.io is not cool anymore. What's the current recommendation for realtime server events?
16:11 < jackcviers> LOL. That's a typo.
16:11 < jackcviers> But thank you.
16:11 < gildean> pluma: how's it not cool, it's pretty cool still
16:12 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:12 < EyePulp> pluma: I think it's not as heavily maintained, but it's still viable.  Sock.js is pretty active these days.
16:12 < pluma> gildean: I must have misheard.
16:12 < gildean> sock.js is coffee tho'
16:13 <@isaacbw> boo
16:13 < deoxxa> boooooo
16:13 < EyePulp> gildean: are you modding it or using it as a package?
16:13 < gildean> EyePulp: doesn't matter
16:14  * EyePulp rolls his pulpy self
16:14 < deoxxa> EyePulp: it's like buying nikes, dude
16:14 < werle> lol
16:14 < deoxxa> EyePulp: sure, they might be solid shoes, but you know there was some terrible stuff that went on during their manufacture
16:15 < EyePulp> I think CS is as dumb as anyone (more so, because I'm old an crotchety), but I pick my battles.  sock.js was tolerable for its cs-ness
16:16 < jackcviers> Meh. cs is a macro language for js.
16:17 < jackcviers> As is handlebars, typescript, etc. Don't get the vitriol over it, to be honest.
16:18 < deoxxa> jackcviers: in the same way that meth is a macro language for productivity - you might get things done a bit quicker, but your family will disown you, you'll become delinquent on all your bills, and you'll develop a habit of scratching your face
16:18 < EyePulp> jackcviers: They all annoy me, but then again, so does SMS and MTV.
16:19 < jackcviers> ;
16:20  * kenperkins gonna be in SF next week
16:20 < kenperkins> I need to beer it up with some Noders
16:23 < seb_> seb_:  hi
16:25 < jackcviers> isaacbw, in npm utils/lifecycle.js:     , user = unsafe ? null : npm.config.get("user")
16:25 < jackcviers>  
16:25 < jackcviers> Could that be what is causing the null user on publich?
16:25 < jackcviers> publish?
16:29 <@isaacbw> what happens in you log in as the jenkins user and publish by hand?
16:31 < jackcviers> jas
16:32 < pluma> Hm... I used to really like CS the first time I heard of it, but then I really learned JavaScript and suddenly CS seemed too much effort for too little gain. In any case I find it an odd choice to use a macro language for JS libraries.
16:33 < jackcviers> isaacs -- same error.
16:33 <@isaacbw> different isaac
16:33 < jackcviers> sorry
16:33 < jackcviers> isaacbw.
16:33 < deoxxa> isaacbw: you two need to fight to the death already
16:33 <@isaacbw> he would actually know what's going on ;) I'm just shooting in the dark
16:34 < CoverSlide> If CoffeeScript had a defined syntax specification driving the implementation, rather than the implementation driving the language, it might be somewhat worthwhile
16:37 < jackcviers> isaacbw -- what is weird is if I login as myself on that jenkins server and npm login as myself, I get the same error.
16:38 < jackcviers> From my laptop, no issues publishing.
16:38 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:38 < jackcviers> Perhaps a bug in the node installed on that machine?
16:39 <@isaacbw> what are the node and npm versions?
16:39 < sreeix> Anybody recommends a benchmarking module for node?
16:40 < jackcviers> node v0.8.9
16:40 < jackcviers> npm 1.1.61
16:43 < ashnur> if I have an array of strings, how can I easily pipe that into a writeable stream?
16:44 <@isaacbw> those are both pretty old
16:45 < deoxxa> ashnur: stream.write(strings.join("")) seems pretty obvious (?)
16:46 < ashnur> deoxxa: it might be obvious but thinking about streams is very new to me, i am unsure about everything
16:46 < ashnur> deoxxa: i will try it, thanks
16:47 < thetristan> can anyone explain why the descriptions of setTimeout/clearTimeout are different on the timers section of the docs (http://nodejs.org/api/timers.html) than they are in the globals section (http://nodejs.org/api/globals.html) ?
16:47 < CoverSlide> thetristan: because one was changed and not the other
16:48 < CoverSlide> thetristan: YOU can change it if you feel it warrants it
16:50 < CoverSlide> it might even be a good idea for the globals page to reference the timer page
16:50 < thetristan> CoverSlide: I'm all for that; trying to get a quick fix on which version represents the canonical implementation before I go digging
16:51 < CoverSlide> unless they truly are different ... which is kind of wtf
16:51 < thetristan> and the globals section does reference the timer section â€¦ so wtf indeed :)
16:51 < jackcviers> ok. looks like upgrading or changing the passwords to be alpha chars only fixes the issue, according to this:
16:51 < jackcviers> https://github.com/isaacs/npm/issues/3127
16:52 < CoverSlide> oh i see. at the bottom
16:52 < jackcviers> thanks for your help isaacbw.
16:53 <@isaacbw> :D
17:02 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:06 < diminoten> hm why? "Error: unrecognized flag -â€“max-old-space-size=8192"
17:06 < diminoten> isn't --max-old-space-size a flag ?
17:06 < diminoten> 0.8.22 
17:09 < Franz__> its possible install node in cpanel/whm
17:09 < Franz__> or for use in cpanel account in a dedicated server?
17:09 < diminoten> wat
17:10 < CoverSlide> not sure what cpanel runs on. either apache or cgi. probably won't have any relation to node at all
17:10 < mscdex> diminoten: works for me on v0.10.5
17:10 < CoverSlide> as for using cpanel to install node ... that would depend on cpanel
17:10 < diminoten> yeah it's weird, it works when I call node directly but in the shell script no dice
17:10 < mscdex> diminoten: can you post the code somewhere for the shell script?
17:11 < diminoten> yeah sure it's pretty simple, 1 sec
17:11 <@isaacbw> diminoten: one dash
17:11 < diminoten> why?
17:11 < diminoten> lol that worked
17:12 < diminoten> the hell?
17:13 < diminoten> wait no, hm
17:14 <@isaacbw> no
17:14 < diminoten> cannot find module
17:14 <@isaacbw> --max_old_space_size
17:15 < diminoten> same problem
17:15 < mscdex> it's with dashes not underscores
17:15 <@isaacbw> maybe they're both valid
17:16 < mscdex> possibly
17:16 < diminoten> single dash makes node think it's a module
17:17 <@isaacbw> yea I don't know why I said that
17:17 < diminoten> ${NODE} --max-old-space-size file.js $@"
17:17 < diminoten> er, "$@" is how it gets called
17:17 < diminoten> in the script
17:18 < mscdex> you have to specify a size
17:18 < diminoten> well I do
17:18 <@isaacbw> :P
17:18 < mscdex> heh
17:18 < diminoten> I just suck at typing 
17:18 < diminoten> heh
17:18 < diminoten> in the script it's got a size
17:18 < diminoten> ${NODE} --max-old-space-size=1900 file.js "$@"
17:19 <@isaacbw> what are you doing that takes up so much space anyway
17:19 < diminoten> crypto 
17:19 < diminoten> it's also not my app
17:19 < diminoten> I'm merely a consumer
17:19 <@isaacbw> ah
17:21 < diminoten> it's just damn weird that it won't work in just this script
17:24 <@isaacbw> if it's complaining about a module then it's not the flag
17:24 < diminoten> it's complaining that it can't find the flag as a module
17:24 < diminoten> which it can't
17:25 < diminoten> because it's a flag, not a module lol
17:25 <@isaacbw> this is in a shell script?
17:25 < diminoten> yes
17:25 < diminoten> works like a charm if I call it manually
17:25 <@isaacbw> and if in the script you get rid of the flag, there are no module complaints?
17:26 < diminoten> correct
17:28 <@isaacbw> can you paste the actual line in the script
17:30 < ashnur> i need a bit of help. i would like to find out if this bug appear only on my machine, or for others too? https://github.com/ashnur/dupbug
17:35 <@isaacbw> can regex groups be nested
17:36 <@isaacbw> man, someone should start a blog with a daily regex challenge
17:36 <@isaacbw> that would be fun
17:37 < ashnur> dunno
17:37 < ashnur> regex is easy
17:37 < ashnur> when regex gets too hard, then most probably there is something better to use instead
17:37 < CoverSlide> ashnur++
17:37 < CoverSlide> i hate when people try to use regex to solve every problem
17:38 < CoverSlide> and end up building massive regex objects that take forever to run
17:38 < ashnur> that said, i miss some features from the js version
17:38 <@isaacbw> smart use of regex can make systems tremendously tighter
17:39 < ashnur> sure, no one said that it is not very useful
17:41 <@isaacbw> regarding a daily puzzler, the trick is designing them correctly for edge cases the first
17:41 <@isaacbw> *time
17:41  * CoverSlide nominates isaacbw 
17:41 < mscdex> node has pcre regexps too!
17:41 < ashnur> not sure if there are enough things to asks
17:41 < ashnur> ask*
17:42 < CoverSlide> mscdex: ?? but not exposed to the js side, right?
17:42 <@isaacbw> okay, it would be fun for a week
17:42 < ashnur> mscdex: js in the browser does not, and I like to write code which runs on both
17:42 <@isaacbw> sshh
17:42 < mscdex> CoverSlide: via a node addon :-D
17:42 < CoverSlide> ah
17:42 <@isaacbw> stop poking holes in my idea :(
17:42 <@isaacbw> you're supposed to say "oh yea that would be neat"
17:43 < mscdex> ashnur: you could compile with emscripten if you are that desperate.... or use something like XRegExp which gives you some pcre features
17:43 < ashnur> isaacbw: :( sry. I can assure you, if you try to make it, I will help with whatever I can. and I love regex. :D
17:43 < ashnur> mscdex: :D now that is a bit too much, don't you think? :)
17:43 <@isaacbw> :P
17:43 < mscdex> ashnur: never!
17:44 < CoverSlide> of course, mscdex gets all crazy with bindings to node
17:44 < mscdex> https://github.com/mscdex/node-pcre
17:44 < CoverSlide> mscdex: have you benched it?
17:45 < mscdex> CoverSlide: yeah somewhat, the built-in regexp engine is faster in most cases, about equal in some others
17:45 < mscdex> but then again, the built-in regexp is simpler and does less
17:45 < CoverSlide> well i'm sure it would be. the concern is how much faster
17:46 < mscdex> i don't recall the numbers offhand
17:58 < sayd> i am trying to override where node modules get installed locally. i try NPM_CONFIG_PREFIX=./zip npm install rimraf but its still going into ./node_modules
18:00 < sayd> when i do npm config list it displays the right path
18:07 < mscdex> CoverSlide: i found one of the benchmarks i did (ascii input text here: http://people.unipmn.it/manzini/lightweight/corpus/howto.bz2). The benchmark searches for dates in mm/dd/yyyy format. pcre finishes in 82ms, js regexp finishes in 9ms
18:08 < mscdex> s/for dates/for all dates/
18:09 < mscdex> 39mb document, 673 occurrences
18:10 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:30 < airportyh> Hi all, on ubuntu linux I am having trouble sending a SIGINT from one node process to another node child process.
18:31 < airportyh> it turns out that the child process shows up as 2 processes, one is /bin/sh process, the other is node
18:31 < airportyh> and I can only send signals to the /bin/sh process, not the node one
18:32 < airportyh> any ideas on how I can workaround this would be appreciated
18:33 < bnoordhuis> airportyh: what does your code look like?
18:34 < airportyh> bnoordhuis: now that I think about it, it might have to do with the fact that I am using child_process.exec instead of spawn
18:34 < CoverSlide> airportyh: are you using exec or spawn? for other node processes usually you want spawn, or possibly fork
18:34 < airportyh> I think if spawn it would solve it
18:34 < airportyh> CoverSlide: yeah exactly
18:34 <@isaacbw> niggler: 
18:34 <@isaacbw> niggler: https://npmjs.org/package/hashtable
18:35 < CoverSlide> process.spawn(process.execPath, [arg1, arg2 ...]
18:35 < CoverSlide> *child_process
18:36 < airportyh> CoverSlide: there is a reason I use exec though - I am letting the user configure whatever command they want via a config file
18:37 < CoverSlide> right, as long as it's a single command though, there's no reason you can't turn it into a .spawn call.
18:38 < CoverSlide> if you need to enable pipes / etc then yeah you have to go through sh
18:38 < CoverSlide> although .. it would be possible to do that too, with some hackery
18:41 < airportyh> CoverSlide: confirmed that spawn fixes it
18:42 < airportyh> CoverSlide: are you thinking around the lines of parsing out the executable, and then using `which` to find its path?
18:49 < paulkon> anyone know what: [Error: Symbol kerberos_module not found.] means?
18:52 < bnoordhuis> paulkon: i'm guessing you're trying to load a native add-on
18:53 < paulkon> I wish I could trace the console logs
18:53 < paulkon> to find out what's causing it
18:53 < paulkon> I think it's mongoose
18:53 < paulkon> I just did updated all the modules
18:53 < bnoordhuis> paulkon: you can always monkey-patch console.log and console.error
18:53 < paulkon> yeah
18:56 < Franz__> where are located node_modules
18:56 < Franz__> on redhat?
18:58 < ljharb> `which npm`
18:58 < ljharb> oh nvm
18:58 < ljharb> no idea
18:58 < Franz__> npm
19:03 <@isaacbw> ljharb: are you still planning on digging into node-tap?
19:03 < ljharb> yes
19:03 < ljharb> but i prolly won't have much time til next week
19:04 <@isaacbw> it would be awesome if you would make it put the plan at the top rather than the end
19:04 <@isaacbw> it conforms better to tap
19:04 < mscdex> Franz__: node_modules is usually located in the current working directory, but npm will also look in parent paths for an existing node_modules directory
19:04 < ljharb> you can do that in tape - tap doesn't let you?
19:04 < ljharb> i'll have to fix that then :-)
19:04 < mscdex> Franz__: if it did not find one if the current working directory
19:05 <@isaacbw> ljharb: it probably lets you, but it should be the default
19:05 < ljharb> if it lets you, then all i'd really do is tweak the examples
19:06 < ljharb> it shouldn't really dictate where plan is called
19:06 < latkinso42> Since nodejs handles async events, how long is too long, or how short (timewise) should a function be before it hogs up critical time? 
19:06 < ljharb> latkinso42: if you have to ask, break up the task
19:06 <@isaacbw> TAP only allows it to be at the end for rare cases
19:06 <@isaacbw> it's supposed to be at the start
19:06 < sayd> i am trying to override where node modules get installed locally. i try NPM_CONFIG_PREFIX=./zip npm install rimraf but its still going into ./node_modules
19:07 < latkinso42> is there a rule of thumb for function duration?
19:07 < RLa> latkinso42, if you do not have concurrent needs to satisfy, your function could run blocking 24/7 :)
19:07 < gbit86> Do any of y'all see anything wrong with this digest authentication response?
19:07 < gbit86> { Authorization: 'Digest username=benr,realm=asterisk,nonce=b341d7ad30f,uri=json,qop=,nc=1,cnonce=,algorithm=MD5,response=6951a822f2a0543f0e240570f86b5a87' }
19:08 < RLa> gc would still run
19:09 < mscdex> gbit86: what's the actual problem?
19:09 < RLa> latkinso42, i'm sure there is some scheduling theory that covers it
19:10 < gbit86> mscdex: I am not sure, I keep getting a 401 error and I am either passing incorrect hashes/data or something is missing
19:11 < gbit86> my cnonce is blank.. I am not sure what goes there
19:11 < gbit86> or how I am supposed to generate it I suppose
19:12 < gbit86> reading cnonce is only required if qop is provided
19:12 < gbit86> which it is not by this server
19:12 < Franz__> its possible
19:12 < gbit86> so I guess I will remove it
19:12 < latkinso42> RLa: i'm used to developing embedded code where if another thread needs the time one's function is swapped out...so i dont have a feel for timing in a client-server environment...I need examples of typical use (instead of theory)..
19:12 < Franz__> to set only a account in cpanel access to ssh and for run only node?
19:12 < Franz__> to set only a account in cpanel access to ssh and for run only node.js?
19:15 < RLa> latkinso42, this will affect latency, if you want to have latency < 1s then none of your functions should block > 1s
19:16 < RLa> latkinso42, if you want that for 100 concurrent users then i guess none should block more than 10ms
19:16 < RLa> you can still do quite a lot in 10ms
19:16 < latkinso42> RLa: ok..that was easy enough...is there an easy way to time a function?
19:17 < RLa> you mean measure the time?
19:17 < RLa> you could profile
19:17 < howdynihao> anyone familiar with any kid friendly (6th graders) game framework for teaching programming? game because it'll get more interest from kids
19:17 < latkinso42> for a functions typical duration
19:17 < RLa> or use Date.now() difference
19:18 < latkinso42> ok..if thats how its done...
19:18 < RLa> that is ms resolution but not sure how coarse it is
19:19 < latkinso42> @RLa: thanks for putting up with the 101 question..that was what I needed..!
19:19 < RLa> i would first check latency from browser as that's how user perceives it
19:19 < RLa> if it's a web app
19:20 < RLa> then would run benchmark tools like ab or wrk
19:23 < latkinso42> Gotcha...any i get the methodology now, ..first decide on the number of users to support, then latency, then use Data.now(), various browsers and ab to test...
19:30 < Franz__> im trying to run node but:
19:30 < Franz__> terminate called after throwing an instance of 'St9bad_alloc'
19:30 < Franz__> how can i solve this problem?
19:31 <@isaacbw> are you running it on a rock?
19:31 <@isaacbw> by any chance
19:31 < Franz__> what?
19:32 <@isaacbw> like this: http://academic.emporia.edu/aberjame/garden/rock06.jpg
19:33 < Franz__> Â¬Â¬
19:33 < Franz__> so
19:33 < Franz__> i tried run with a normal user ssh access
19:33 < Franz__> with root ok...
19:34 < Franz__> but when tried to run with other user i receive this error
19:34 < Franz__> isaacbw any solution?
19:34 <@isaacbw> maybe don't use a rock
19:34 < Franz__> i dont using a rock
19:35 <@isaacbw> oh
19:35 < Franz__> top - 16:35:31 up 205 days,  3:30,  1 user,  load average: 0.03, 0.05, 0.07
19:35 < Franz__> Tasks: 292 total,   1 running, 290 sleeping,   0 stopped,   1 zombie
19:35 < Franz__> Cpu(s):  0.0%us,  0.1%sy,  0.8%ni, 98.6%id,  0.4%wa,  0.0%hi,  0.0%si,  0.0%st
19:35 <@isaacbw> sorry I only nkow about rocks
19:36 < Franz__> 4gbram and quadcore 3.4ghz
19:36 < Franz__> maybe not like as a rock
19:36 < Franz__> but if you dont help as operator
19:37 < Franz__> not disturb at least...
19:37 <@isaacbw> what's your node version
19:39 < Franz__> 0.10.5
19:40 < bnoordhuis> Franz__: when exactly do you get that error? immediately on startup or sometime later?
19:40 < Franz__> on startup
19:40 < Franz__> bnoordhuis as a root run normally
19:40 < Franz__> the problem is running with other user
19:40 < Franz__> as a cpanel user with ssh permission
19:41 < sayd> trying to use karma and seeing Fatal error: spawn ENOENT
19:41 < Franz__> the problem is because the user dont have permission
19:41 < Franz__> of course
19:42 < Franz__> its run only as root user 
19:42 <@isaacbw> the problem is that you're using cpanel
19:43 < Franz__> and i need one user run
19:43 < Franz__> isaacbw you're surprising me!
19:43 < Franz__> haha
19:45 < bnoordhuis> Franz__: do you also get it when you type just `node`? (i.e. start a REPL)
19:46 < jocafa> adorable/creepy video of the day: http://www.youtube.com/watch?feature=player_embedded&v=Xz3btMhdQ6Y#t=233s
19:47 < Franz__> bnoordhuis [~]# node
19:47 < Franz__> terminate called after throwing an instance of 'St9bad_alloc'
19:47 < Franz__>   what():  std::bad_alloc
19:47 < Franz__> Aborted (core dumped)
19:49 < TheEmpath> i have a custom directory i'm installing npm packages into, do I have to add export PATH to the root directory's .profile or can I pass in that path via CLI?
19:50 < RLa> Franz__, how you installed node?
19:50 < bnoordhuis> Franz__: how much memory is available for processes?
19:50 < bnoordhuis> i wager the answer is 'not much'
19:52 <@isaacbw> TheEmpath: what
19:52 <@isaacbw> install packages locally for each project
19:53 < timoxley> TheEmpath trying to get access to executables? perhaps you're looking for npm install -g
19:55 < TheEmpath> right, i am installing locally for each project.
19:55 < TheEmpath> but when I go to require() what I install, I have to set the PATH in the root .profile file, correct?
19:56 < TheEmpath> or i type the js files full path
19:56 < TheEmpath> i was curious if I could pass in that PATH information at runtime instead of specifying it in the .profile file.  like node PATH="whatever"
19:59 <@isaacbw> no
19:59 < timoxley> TheEmpath require doesn't use path at all afaik
19:59 < TheEmpath> it's been a while... last used node at 0.6 :X
20:00 <@isaacbw> http://nodejs.org/api/modules.html
20:17 -!- mode/#Node.js [+o TooTallNate] by ChanServ
20:28 < hildjj> Is there a way to report abuse for a given npm module?
20:28 <@TooTallNate> hildjj: what kind of abuse?
20:29 < hildjj> "abuse" may be strong.  let's say an odd pattern.  take this with a grain of salt, because it's a module name I want to use. :)
20:29 < hildjj> https://npmjs.org/package/ladder
20:30 <@isaacbw> https://npmjs.org/doc/disputes.html
20:30 < hildjj> thanks.
20:30 <@isaacbw> (email the maintainer and go from there)
20:30 <@TooTallNate> hildjj: oh, so you mean he's squatting the name?
20:31 <@TooTallNate> hildjj: in that case, you can probably claim the name easily if you have code ready to be published, but in any case, do what isaacbw said
20:31 < hildjj> i'll ping the owner first.
20:31 < hildjj> it's just odd that there are thousands of downloads of a single function that removes whitespace.
20:31 < MI6> joyent/node: Ben Noordhuis master * 45ed546 : test: cluster: unhide child errors in bind-twice (+2 more commits) - http://git.io/aY6b9g
20:31 <@isaacbw> ljharb: here we go! A test runner that's pretty usable already https://github.com/isaacbwagner/node-runtests'
20:32 < hildjj> which makes me wonder if it's being used as a communication channel for something unexplained.
20:32 <@isaacbw> not ready to publish it to npm yet though
20:32 <@TooTallNate> hildjj: well "jitsu" depends on it
20:32 <@TooTallNate> so that's probably where most of the downloads come from
20:32 < hildjj> oh, yeah.  didn't see that.
20:34 <@isaacbw> anyway, it's like twenty lines of code
20:35 <@isaacbw> holy shit expect.js has a horrific dependency tree
20:36 <@isaacbw> ljharb: anyhow, you can use runtests with all your existing tape/tap tests
20:37 <@isaacbw> it's nicer than printing the tap results directly to the console
20:37 <@TooTallNate> isaacbw: that's "dependants", not "dependencies"
20:37 <@TooTallNate> expect.js doesn't have any deps actually
20:39 < ashnur> anyone used browser-run before? or is not scared of streams? :-S
20:39 < ashnur> i have a bug and I don't have a clue where to start
20:39 < ashnur> I posted a test case here https://github.com/ashnur/dupbug
20:40 <@isaacbw> TooTallNate: I just know that I tried installing it and got a bunch of shit
20:40 <@isaacbw> hmm
20:40 <@isaacbw> weird
20:41 <@isaacbw> I was looking at the ladder package and did npm install --dev where expect.js was the only devDependency
20:41 <@isaacbw> so I figured everything being installed was from expect.js
20:44 -!- mode/#Node.js [+o TooTallNate] by ChanServ
20:44 < hildjj> ok, i sent what i hope was a polite request for information.
20:45 <@isaacbw> you shoul've said "give me that damn name squatter"
20:46 < hildjj> isaacbw: that was implied.
20:46 < hildjj> :)
20:49 <@isaacbw> https://npmjs.org/package/runtests
20:50 <@isaacbw> you should all replace tap in your "scripts" to runtests ;)
20:51 <@isaacbw> and give me some real usage feedback
20:54 <@isaacbw> for some reason firefox suddenly lost antialiasing
20:54 <@isaacbw> >.>
20:55 <@isaacbw> does anyone else see weird github fonts?
20:57 < ashnur> nope
20:57 < grep_awesome> nope
21:01 < FrankLampard> Hello! :D
21:01 < FrankLampard> Wanted to share a new programming forum: http://thedevshed.net/forum/ 
21:02 < qard> What are the current opinions on modifying node to be embeddable? I'm looking at forking node and possibly committing that back, if I can get something clean and functional put together.
21:07 < dypsilon> FrankLampard, please more bold
21:10 < grep_awesome> wow, that "new programming forum" is getting spammed in every channel
21:11 < Tuhis> hmm
21:11 < Tuhis> damn freenode ping timeout
21:12 < aszeszo> hi all, what would be the easiest way to go from md5 hash as a string to a base64 encoded binary representation of it?
21:13 < aszeszo> for example: "f2bc2db04a4f0803540f0eb80fdb9409" -> <Buffer f2 bc 2d b0 4a 4f 08 03 54 0f 0e b8 0f db 94 09> -> 8rwtsEpPCANUDw64D9uUCQ=="
21:15 < upstream> when using `node -p` can I have access to my global npm packages?
21:15 < upstream> or how can I get that to work
21:15 < upstream> `node -p "require('colors')" fails even though i've `npm install -g colors`
21:16 < upstream> put another way, when using the Node REPL how can I require global NPM modules?
21:16 <@TooTallNate> upstream: you don't -g modules that you want to require
21:16 <@TooTallNate> upstream: so drop the -g
21:17 < upstream> wat?
21:18 < upstream> TooTallNate: I understand that you can use package.json and or just npm install and get modules in a local node_modules folder, but you can also -g to have global modules, no?
21:19 <@TooTallNate> upstream: please read https://npmjs.org/doc/global.html
21:19 <@TooTallNate> upstream: and/or http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/
21:22 < upstream> OK so the TL;DR is that it's not recommended to require() globally installed modules, who cares I want to do it anway in my exmaple, but how can I get the node REPL to work with global modules while requiring?
21:22 < AAA_awright> What am I supposed to say to someone who says logic, I don't follow logic!
21:22 < AAA_awright> I give up. I just give up.
21:22 < AAA_awright> This is idiotic.
21:24 < conphile> hi - is anybody familiar with the 'phantom' node bridge to phantom.js? I'm having difficulty working out an equivalent of evaluate() when the code to be run in the simulated browser is async and can't return a result immediately
21:25 < upstream> "If you wish to require() a package, then install it locally." -- does that mean Node can't require global packages at all?
21:25 < conphile> upstream: to my knowledge, not without an `npm link` first
21:26 <@isaacbw> alright, what do I have to do so that my package's bin script is available to the dependent's scripts, if that makes sense
21:26 <@isaacbw> i.e. my package is a devDependency and has a bin
21:26 <@isaacbw> because right now that doesn't seem to be enough
21:27 < ashnur> install it globally :D
21:27 < AAA_awright> upstream: /usr/lib/node
21:27 <@isaacbw> ashnur: no
21:29 < ashnur> i was not serious :(
21:29 < sayd> i am trying to override where node modules get installed locally. i try NPM_CONFIG_PREFIX=./zip npm install rimraf but its still going into ./node_modules. is this a known bug?
21:30 <@isaacbw> :(
21:31 < thomblake> isaacbw: I do not think that does make sense.
21:40 <@isaacbw> oh wait, it does work as it is
21:40 <@isaacbw> woo
21:41 < mscdex> sayd: why not just create a symlink with the name you want, to ./node_modules
21:42 < sayd> mscdex something about how our architect thinks we should be modularizing these apps
21:43 < sayd> i can run that suggestion by him though, thanks
21:43 < sayd> weird that config directive doesn't work though, isn't it?
21:43 < deoxxa> sayd: why does the directory name matter? (just curious)
21:45 < sayd> deoxxa problem solved :) "I threw the towel, and used a symlink"
21:45 < deoxxa> lol
21:49 < mscdex> deoxxa: i don't think it's all that uncommon, i mean i regularly do `ln -s node_modules nodejsrules`
21:50 < deoxxa> i actually symlink to code_globdules
21:50 < mscdex> on an unrelated note, it seems like github email notifications have been arriving much later lately
21:50 < sayd> so the prefix doesn't work.. 
21:54 < kenperkins> anyone here that works on crypto?
21:54 < kenperkins> (in node corE)
21:55 < bnoordhuis> kenperkins: i do
21:55 < kenperkins> bnoordhuis: does this mean *anything* to ou?
21:55 < kenperkins> https://gist.github.com/kenperkins/5463531
21:56 < bnoordhuis> kenperkins: yes
21:56 < kenperkins> !
21:56 < kenperkins> was a shot in the dark
21:57 < bnoordhuis> looks like you're trying to read a corrupted private key
21:57 < bnoordhuis> or possible it's not a key at all, just looks like a PEM file
21:58 < kenperkins> ok, I'll dig a little more
22:00 < kenperkins> bnoordhuis: these are the 2 lines in the codepath that are using crypto, can you tell which of them would raise that?
22:00 < kenperkins> https://github.com/nodejitsu/pkgcloud/blob/master/lib/pkgcloud/common/http-signature.js#L112-L120
22:01 < mscdex> it's a trick question!
22:01 < mscdex> ;-)
22:02 < kenperkins> sorry, chasing down a heinous bug in the pkgcloud unit tests :S
22:03 < mscdex> kenperkins: can't you do process of elimination?
22:03 < kenperkins> trying to, but it's some kind of race condition
22:03 < kenperkins> it only happens 1/20 test runs
22:06 < mscdex> kenperkins: node version?
22:07 < kenperkins> 8.23
22:07 < starPause> i'm having trouble upgrading or uninstalling node on my OSX 10.7.5 machine. node -v gives me v0.4.10 even after running the latest installer from nodejs.org
22:07 < kenperkins> bnoordhuis: well I certainly seem to have the same key the whole time, doesn't appear to change
22:08 < mscdex> starPause: you can always install from source
22:08 < mscdex> which is what i always do
22:09 < nlf> <3 nvm
22:10 < bnoordhuis> kenperkins: a more likely culprit for that error is the tls or the https module
22:10 < kenperkins> ok
22:10 < bnoordhuis> though you could probably run into it with just the crypto module if you really try
22:10 < kenperkins> yay repro, brb
22:11 < kenperkins> hmm, whatever it's doing, it's not throwing
22:12 < deoxxa1> starPause: did you install node via homebrew or something at some point?
22:13 < starPause> deoxxa1: don't have homebrew or macports installed on this machine
22:13 < bnoordhuis> starPause: what does `which node` print?
22:14 < starPause> bnoordhuis: /usr/bin/node
22:14 < bnoordhuis> starPause: right. the installer installs to (i believe) /usr/local/bin
22:14 < starPause> bnoordhuis: ok, i just deleted that directory, retrying the installer now
22:15 < bnoordhuis> am i right that /usr/bin comes before /usr/local/bin in `echo $PATH`?
22:15 < starPause> bnoordhuis: yes 
22:15 < bnoordhuis> there you go :)
22:16 < bnoordhuis> either use the full path or remove the old binary in /usr/bin
22:20 < starPause> bnoordhuis: thanks, old node is gone but i'm still having trouble getting the new one installed
22:23 -!- mode/#Node.js [+o TooTallNate] by ChanServ
22:24 < bnoordhuis> starPause: define 'trouble'?
22:25 < deoxxa1> it doesn't work
22:25 < deoxxa1> the website is down
22:27 < dypsilon> is it possible to tell mocha: stop testing and exit if this test fails?
22:27 < dypsilon> but not --bail
22:27 < starPause> bnoordhuis: permissions got messed up on my /usr/local/bin directory, had to chmod it and then i could see node again and am up to date with the latest version. thanks for the help!
22:30 < bnoordhuis> starPause: glad you got it solved :)
22:38 -!- mode/#Node.js [+o TooTallNate] by ChanServ
22:42 <@isaacbw> dypsilon: don't use mocha
22:43 <@isaacbw> use TAP! everyone loves tap!
22:43 < dypsilon> meh
22:43 < dypsilon> why?
22:43 < dypsilon> i invested in moca already
22:44 < dypsilon> also, wasn't tap the thing, that isaacs wanted to rewrite or something?
22:44 <@isaacbw> tap is from perl
22:44 <@isaacbw> isaacs wrote the original tap module for node
22:44 <@isaacbw> substack wrote another
22:44 <@isaacbw> I just wrote a third
22:44 < dypsilon> ah
22:45 < dypsilon> but mocha can produce tap output?
22:45 <@isaacbw> I don't know, probably
22:46 < dypsilon> isaacbw, http://visionmedia.github.io/mocha/#tap-reporter
22:46 < dypsilon> so what do you mean by "use TAP", if it's the protocol, I'm "using" it already, with mocha
22:53 < chilts> isaacbw: where is your new tap module?
22:53  * chilts will check it out
22:54 <@isaacbw> chilts: :O https://github.com/isaacbwagner/node-test-more and https://github.com/isaacbwagner/node-runtests
22:55 <@isaacbw> they're both very raw
22:56 < chilts> so you've split up the testing bit and the running bit
22:56 < chilts> ccol
22:56 < chilts> cool even
22:57 <@isaacbw> so you can use runtests with any tap-producing test frameworks like substack's tape
22:57 < chilts> that's nice, I find tape's errors like nicer than tap's
22:58 < chilts> but yeah, there's no runner with tape, that right?
22:58 < chilts> which is why you did one
22:58 <@isaacbw> I think there's a tiny one that just prints all the tap output to console
22:58 < chilts> oh right, ok
22:59 <@isaacbw> but right, I think substack pulls in node-tap in his projects just for the runner
23:03 -!- mode/#Node.js [+o TooTallNate] by ChanServ
23:38 < LuckySMack> is there a known bug where chrome submits 2 requests to simple node server for each request? all other browsers and curl only request once. here is my code: http://pastie.org/7721378
23:39 < Bergle_2> if you dont have a favicon chrome will try to grab the favicon every request 
23:39 < Bergle_2> iots '
23:39 < Bergle_2> its not a bug :) 
23:39 < dypsilon> Bergle_2, but than again, every browser will
23:39 < aoeui> curl won't
23:39 < Bergle_2> not on every request.
23:40 < dypsilon> hm
23:40 < LuckySMack> when the node server is just one file, where do i put the favicon?
23:40 < Bergle_2> i think its kinda dumb, if it fails on a site dont ask again for 10minuts is not likely to hurt anyone
23:40 < LuckySMack> curl only made one request.
23:40 <@TooTallNate> LuckySMack: you check the req.url
23:40 < LuckySMack> only chrome made multiple requests
23:40 < Bergle_2> curl doesnt do favicon lol 
23:40 < Bergle_2> but at least its predictable 
23:41 < LuckySMack> TooTallNate: what do you mean?  i know theres the req object, how do i add the favicon to it.
23:41 < dypsilon> don't add, throw away the request
23:42 <@TooTallNate> LuckySMack: do `console.log(req.url)` in your request handler
23:42 <@TooTallNate> LuckySMack: you'll see that Chrome is requesting 2 different paths
23:42 <@TooTallNate> one of them being /favicon.ico
23:42 <@TooTallNate> for *that* specific request, the browser wants you to send back an image or .ico file
23:42 < LuckySMack> yea it shows the request is from favicon. is there a way i can make it not do that in a way that runs my script twice? im guessing some sort of if clause to test the url?
23:43 < dypsilon> Bergle_2, tbh i'd rather let chrome ask for the favicon every time that do the fubar ie does with it
23:43 < LuckySMack> basically, i had a counter in the main server block. and when browsing to it in chrome it was incrementing by 2 every time.
23:44 < LuckySMack> ooh i think i got it.
23:55 < howdynihao> hollaaaa
23:56 < dypsilon> howdynihao, hey, so what did you decided to do with your irc client?
23:56 < howdynihao> nothing
23:58 < conphile> what's the received wisdom on routers?
23:59 < conphile> I've been using director on this project so far but it seems like it doesn't properly handle POST data
23:59 < conphile> which strikes me as somewhat of an omission
23:59 < dypsilon> hapi looks nice
23:59 < dypsilon> but it's not only a router
--- Log closed Fri Apr 26 00:00:11 2013
