--- Log opened Mon Nov 19 00:00:34 2012
00:11 < jesusabdullah> yo dawgs, anyone in here good with the stat object? I wanna take that mode number and extract the human-readable rwx action
00:11 < jesusabdullah> BUT
00:11 < jesusabdullah> I'm confused because
00:11 < jesusabdullah> the numbers are bigger than I would expect
00:11 < jesusabdullah> am I missing something?
00:11 < Sly> O_o;
00:11 < Sly> What numbers are you seeing?
00:12 < jesusabdullah> > fs.statSync('./').mode
00:12 < jesusabdullah> 17407
00:12 < jesusabdullah> Those kinda numbers
00:12 < ericelliott> For deployable applications, does it make sense to use "*" version strings in package.json?
00:12 < jesusabdullah> ericelliott: no
00:12 < jesusabdullah> ericelliott: it makes sense to peg those down as far as you feel comfortable
00:12 < jesusabdullah> ericelliott: I usually either do, say, 0.1.x or 0.1.2
00:13 < jesusabdullah> ericelliott: sometimes you can let the patch version be loosy-goosy
00:13 < ericelliott> jesusabdullah: Don't they get "pegged" when you check them into a repo? =)
00:13 < jesusabdullah> ericelliott: no, node_modules isn't checked in usually
00:13 < Sly> http://stackoverflow.com/questions/11775884/nodejs-file-permissions @ jesusabdullah
00:13 < jesusabdullah> ericelliott: if you want to check them in, use bundledDeps
00:13 < jesusabdullah> Sly: fantastic
00:14 < jesusabdullah> Sly: still feelin' pretty noob but I think that will point me the right way
00:14 < ericelliott> jesusabdullah: That was true in the globally installed modules days, but since then, the recommendation has changed. I was speaking to isaacs about that just the other day.
00:15 < jesusabdullah> ericelliott: there's a lot of disagreement on this one, but for me it's like, how pissed would you be if your app broke because a newer version of your package is broken?
00:15 < ericelliott> jesusabdullah: You still should not check in node_modules for reusable library packages, but for deployable applications, it locks down your dependencies, and all of your package dependencies, reduces moving parts during deployment...
00:16 < jesusabdullah> ericelliott: if you check them in you should use bundledDependencies
00:16 < jesusabdullah> ericelliott: not dependencies
00:16 < jesusabdullah> ericelliott: I'm all about fewer moving parts
00:19 < ericelliott> jesusabdullah: bundledDependencies is only used for npm publish, isn't it? Some of the apps I work on are proprietary, and will never be published to npm.
00:20 < ericelliott> Or should it be used regardless?
00:21 < Sly> ericelliott: bundledDependencies are dependencies that are published with your application.
00:21 < Sly> For instance, if you were to deploy it to Nodejitsu..
00:21 < Sly> It should upload the dependencies you already have installed..
00:22 < ericelliott> Sly, jesusabdullah: Thanks for the clarification.
00:22 < ericelliott> Is there a good written guide on package.json dependency best practices somewhere?
00:22 < Sly> Go to http://npmjs.org and scroll to the bottom where it has "Documentation".
00:23 < Sly> Then click on "json" in the right hand side.
00:23 < Sly> And follow that link to the JSON page.
00:23 < Sly> That's the documentation for everything allowed in it.
00:24 < Sly> https://npmjs.org/doc/json.html
00:24 < ericelliott> Sly: Yeah, but it's more of an API guide than a best-practices guide, isn't it?
00:25 < Sly> There really isn't a "best practice", other than using semver versions.
00:25 < Sly> http://semver.org
00:29 < ericelliott> Well, there certainly is some knowledge that the community has gained using npm that isn't clearly documented there. =)
00:30 < ericelliott> for instance, the proper use of bundledDependencies - I thought it only applied to npm publish
00:30 < TehShrike> I was so pleased when I saw that there was an actual standard for version numbers
00:30 < ericelliott> TehShrike: Yeah, that's cool. =)
00:31 < warz> 2.35b2RC9-jibbity-unicorn-PRIVATE
00:31 < TehShrike> "In fact, you probably do something close to this already. The problem is that 'close' isn't good enough." - so true
00:37 < Hotroot> Wow, I just saw IE trainwrech
00:37 < Hotroot> *wreck
00:38 < Hotroot> Went to show my dad the page I'm working on. The display: none; element shows up right away, socket.io.js is grabbed, and then it just breaks and the websocket doesn't connect
00:40 < Hotroot> Oh, or I'm just an idiot
00:42 < aandy> "Wow, I just saw IE trainwrech", famous last words
00:46 < jesusabdullah> Sly: So these numbers are of the form 041777, and I know what the last 3 mean but what about the 4 and 1?
00:46 < Sly> 4 = directory
00:46 < Sly> I forgot what the 1 is
00:46 < Sly> It's whatever 't' is.
00:47 < jesusabdullah> so if it's not a dir it would be something else I guess?
00:48 < jesusabdullah> interesting
00:48  * jesusabdullah will just ignore those
00:56 < alystair> anyone here use mongoose at all?
01:30 < simple_> hello?
01:31 < emocakes> hai
01:38 < nrw> is there a functional SOCKS5 client for node? i found these two: https://github.com/vially/node-socksified https://github.com/substack/node-prox. They're both unmaintained and (as far as i can tell) non-functional.
01:38 < nrw> I just want to send http requests through a SOCKS5 proxy.
01:41 < ericelliott> Sly, jesusabdullah: When I tried moving my dependencies into bundledDependencies, npm spat at me: npm ERR! TypeError: Object #<Object> has no method 'indexOf'
01:42 < Sly> You don't use an object for bundledDependencies.
01:42 < Sly> Just use an array with the name. It doesn't care what version it is if it's bundled.
01:42 < Sly> I.E., bundledDependencies: [ "flatiron", "union" ]
01:43 < ericelliott> d'oh. =)
01:46 < ericelliott> Thanks Sly
01:46 < ericelliott> that makes perfect sense
01:51 <@konobi> nrw: tsocks
01:54 < nrw> konobi: would I just use tsocks with child_process.spawn or is there a better way?
01:54 < nrw> konobi: i want to make requests from a nodejs program
01:59 <@konobi> nrw: you just run your app using tsocks
02:00 <@konobi> Nexxy: any idea if this could be hackable enough... http://dx.com/p/iphone-ipad-control-wi-fi-spy-tank-w-300kp-camera-night-vision-microphone-black-6-x-aa-167301 ?
02:01 < nrw> konobi: reading the tsocks docs. i follow. thanks.
02:08 < Lorentz> knwhy wouldn't it be hackable
02:08 < Lorentz> konobi: why wouldn't it be hackable
02:14 < dnz-> WOUODNT IT BE HACKABLE
02:14 < dnz-> BRO
02:15 < dnz-> probably 
02:15 < dnz-> prob
02:15 < dnz-> ab
02:15 < dnz-> ly
02:16 < warz> preach it
02:26 < ruff> http://imgur.com/r/funny/Swtc9
02:26 < SomeoneWeird> lolol
02:47 < ericelliott> Does it make sense to use both bundledDependencies and devDependencies?
02:48 < Sly> ericelliott: there are a difference in the two, so yes. It makes sense. What you're putting in them, on the other hand.. lol.
02:48 < ericelliott> lol? =)
02:49 < Sly> devDependencies are optional dependencies that usually aren't installed, unless the person wants to do testing.
02:49 < ericelliott> I'm putting everything I require() into bundledDependencies. I'm putting build tools like grunt, qunit, etc in devDependencies
02:50 < Sly> Not sure what grunt is, but qunit sounds like a testing suite. Sounds like you have the right idea.
02:50 < Sly> You don't have to put *everything* in bundled dependencies though.
02:50 < Sly> It'll make your package file *huge*.
02:51 < ericelliott> this is a deployable app.. I don't want it installing anything at deploy time.
02:51 < Sly> Like, if you publish it to NPM.. Everything you have in bundledDependencies gets packaged up with it.
02:51 < ericelliott> this isn't going to NPM
02:51 < Sly> Where are you deploying to, if you don't mind me asking?
02:53 < ericelliott> doesn't really matter, but Heroku for dev, then Amazon for staging / qa / prod
02:54 < Sly> Was just wondering, because Nodejitsu has been known to timeout with default settings if you have a lot of bundledDependencies.
02:54 < ericelliott> that's awkward for them. =)
02:55 < Sly> It's usually avoidable with a configuration change.
02:55 < ericelliott> Good.
02:55 < piklu> Hi Guys
02:55 < piklu> how are you all ?
02:56 < ericelliott> good
02:56 < piklu> I am running a webserver and I want to make it a private app development environment, can I know what exactly I can install to make it a online environment like cloud9, do u have some stack for that ??
02:59 < syskk> is there any library to convert GPS coordinates to timezone offset?
03:00 < piklu> No one here???
03:00 < dnz-> no one
03:00 < piklu> great no one seriously ??
03:00 < piklu> lol
03:00 < jrajav> I'm certainly not
03:00 < piklu> I thought someone will have something that can do it
03:00 < ruff> ni hao ma
03:00 < piklu> I ll love to share the development server with you guys too :)
03:00 < dnz-> u are
03:00 < dnz-> yeah sure hit me up a shell account
03:01 < piklu> dnz, why not :)
03:01 < dnz-> just add me to sudoers
03:01 < dnz-> yeah pm me the log in info
03:01 < dnz-> thanks
03:01 < ericelliott> piklu: I already use c9...
03:01 < piklu> ericelliott : I am a little irritated by them
03:02 <@konobi> Nexxy: ping
03:03 < mscdex> node.js rules!
03:03 < dnz-> piklu: u hitting me up that shell account bro ?
03:03 < dnz-> i really needone to get community going on my code
03:04 < piklu> I can seriously host you if u stop kicking my ass 
03:04 < dnz-> thanks bro
03:04 < dnz-> that would be super
03:05 < piklu> dnz: show me a app u are developing ?
03:05 < piklu> please
03:05 < piklu> Also - can anyone suggest me some advance stuff / book / articles that are very concise on Node.Js Dev
03:06 < dnz-> https://github.com/deoxxa/this-is-shit
03:06 < dnz-> https://github.com/deoxxa/this-is-shit-chrome
03:06 < dnz-> you can see i have pushed to those repos
03:06 < dnz-> like a bawss
03:07 < MI6> joyent/libuv: Ben Noordhuis master * 190db15 : unix: set proper loop errno for udp write req cb  Harmonize with stream.c - http://git.io/Hq2-qg
03:12 < piklu> dnz: Yeah.
03:12 < piklu> dnz: Such a nice dev u are :)
03:13 < dnz-> kekek
03:13 < dnz-> i got mad at work one day
03:13 < dnz-> came up with 'downvote only turd toolbar button'
03:13 < piklu> so u made this ?
03:13 < dnz-> me and deoxxa dev'd in prob an hour
03:13 < dnz-> maybe 2
03:13 < dnz-> me + deoxxa
03:13 < piklu> your site doesnt works though
03:13 < dnz-> www.thisisshit.info
03:13 < dnz-> tell deoxxa
03:13 < dnz-> its his box
03:14 < dnz-> but
03:14 < dnz-> its down because it leaks urls in plain text
03:14 < dnz-> ;p
03:14 < piklu> Okay
03:14 < piklu> I am a kind of serious guy
03:14 < dnz-> what does that mean ?
03:16 < piklu> It only means that I felt it offensive on first
03:16 < TadekMocarzzzz> i hate php co,mpany niggers, why they made something that shi,tty like Bi,tch PHP nig,ger
03:16 < TadekMocarzzzz> why php company cant be holocausted just like the jews?
03:16 < TadekMocarzzzz> that would be great for world, just like holocaust of jews was
03:16 < piklu> but later in I felt its okay :) sometimes dev goes ----- CRAZY
03:16 < dnz-> wat TadekMocarzzzz 
03:16 < TadekMocarzzzz> yes
03:16 < TadekMocarzzzz> what i said
03:17 < piklu> That relates to coding?
03:17 < TadekMocarzzzz> what is difference between php com.pany and barrel of shit
03:17 < TadekMocarzzzz> its the barrel
03:17 < AAA_awright> You keep misplacing your periods and commas
03:17 < dnz-> yeah i write php for a living mate
03:17 < dnz-> not node
03:17 < TadekMocarzzzz> who made php ?
03:17 < dnz-> because i get paid sweet money
03:17 < TadekMocarzzzz> money for php ?
03:17 < TadekMocarzzzz> real money is for real programming
03:17 < dnz-> =\
03:17 < TadekMocarzzzz> not php scripts
03:18 < dnz-> 'sripts'
03:18 < dnz-> what about node scripts
03:18 < dnz-> is that real money ?
03:18 < TadekMocarzzzz> javascript is shit like php
03:18 < dnz-> do u write ruby programming bro ?
03:18 < dnz-> make rails n shit
03:18 < TadekMocarzzzz> no
03:18 < dnz-> do u write python bro
03:18 < dnz-> make django n shit
03:18 < TadekMocarzzzz> no
03:18 < dnz-> do u write lua bro, make macros n shit bro 
03:18 < TadekMocarzzzz> hate them
03:19 < TadekMocarzzzz> no
03:19 < TadekMocarzzzz> hate
03:19 < dnz-> do u write perl bro, make scripts n shit bro ?
03:19 < TadekMocarzzzz> no, scripts are for kids
03:19 < dnz-> do you write tcl, make eggdrop scripts n that bro ?
03:19 < TadekMocarzzzz> no
03:19 < dnz-> do you write c# bro, make windows guis n that bro ?
03:19 < TadekMocarzzzz> c# is java-styled shit
03:19 < TadekMocarzzzz> so no
03:20 < dnz-> do you write java and write mobile apps n that bro ?
03:20 < TadekMocarzzzz> no
03:20 < dnz-> do you write vb and make excel macros n that bro ?
03:20 < TadekMocarzzzz> no
03:20 < dnz-> do you write sql and make msql dbs with access n that bro ?
03:20 < TadekMocarzzzz> no
03:20 < dnz-> well there are no other programming languages
03:20 < dnz-> so you are a liar
03:21 < TadekMocarzzzz> oh really?
03:21 < dnz-> yes really
03:21 < TadekMocarzzzz> i cant velieve
03:21 < dnz-> i have named all the programming languages
03:21 < TadekMocarzzzz> i cant believe what you named and u call that 'programming'
03:21 < dnz-> yes, they are real programming
03:21 < TadekMocarzzzz> ever hear about C and C++ ?
03:21 < dnz-> you mean C# ?
03:21 < TadekMocarzzzz> no
03:21 < TadekMocarzzzz> i mean C and C++
03:21 < dnz-> do you mean like
03:21 < dnz-> ansi C99 and gcc mingw32 ?/
03:22 < TadekMocarzzzz> yes
03:22 < dnz-> LOL
03:22 < TadekMocarzzzz> thats for killers, not kids
03:22 < dnz-> do u like clang bro ?
03:22 < TadekMocarzzzz> whats that
03:22 < dnz-> ROFL
03:22 < dnz-> stfu noob
03:22 < dnz-> keep using gets()
03:22 < dnz-> and write you pro c
03:23 < TadekMocarzzzz> i checked clang
03:23 < TadekMocarzzzz> its for Lunix
03:23 < dnz-> ..........
03:23 < AAA_awright> LAWL
03:23 < TadekMocarzzzz> i dont use this garbage
03:23 < dnz-> woah
03:23 < dnz-> LOL
03:23 < TadekMocarzzzz> Linax 
03:23 < TadekMocarzzzz> or something, whatever you call that
03:23 < piklu> a C programmer having time enough to say such offensive words online on IRC ???
03:23 < tklun> this is pretty awesome
03:23 < TadekMocarzzzz> yes, its fault of php company
03:24 < Hotroot> I really hope that you guys know he's trolling =/
03:24 < Hotroot> Likely from behind a proxy, most Chinese aren't named John Black
03:24 < TadekMocarzzzz> they made such garbagge, whats irony they made it in C
03:24 < piklu> zzzz ??? lol
03:24 < dnz-> TadekMocarzzzz: what do you know about format strings bro
03:24 < TadekMocarzzzz> they banned my ip totally faking beaches
03:24 < dnz-> tell me about what happens when you dont check your buffer lengths
03:25 < TadekMocarzzzz> u get the buffer overflow men
03:25 -!- mode/#node.js [+b *!*JohnBlack@114.106.26.*] by konobi
03:25 -!- TadekMocarzzzz was kicked from #Node.js by konobi [buh-bye]
03:25 < dnz-> what a poorly informed man
03:25 < Hotroot> He's trolling..
03:25 < piklu> konobi : that wasnt needed :) it was fun
03:25 < AAA_awright> Nah, kick was warranted
03:25 <@konobi> piklu: not his earlier comments
03:25 < Hotroot> I feel bad for him, a Chinese proxy? Most are slow as shit
03:25 < AAA_awright> But you could have made it more awesome
03:25 < dnz-> hehehe
03:26 < dnz-> but i named every language!
03:26 < piklu> he ll come back, he is chinese:) he is bound to
03:27 < dnz-> piklu: id proabbly not give shells to randoms on irc btw
03:27 < dnz-> unless you feel like getting owned
03:27 < Hotroot> dnz-: Do you honestly own masturb8.in ? lol
03:27 < dnz-> yep
03:27 < piklu> dnz : Dnt worry :) You ll be virtualized in a KVM :)
03:27 < dnz-> i have a bunch of crazy domains i use for ptrs
03:27 < dnz-> piklu: i can probably bust it
03:27 < dnz-> i dont really want one ;p
03:28 < piklu> you can bust through KVM to the root server ??
03:28 < dnz-> i was going to fuck with you
03:28 < dnz-> piklu: dpeends
03:28 < dnz-> but maybe
03:28 < piklu> ahha, HIRED at LINUX
03:28 < piklu> either u dnt know what KVM is, or you are really a expert on assembly or something
03:28 <@konobi> you can break out of kvm
03:28 < dnz-> kkekeke
03:29 < piklu> I recently was trying to buy gamingg.com, somebody took it now
03:29 < dnz-> if you have the resources you dont need to code anything
03:29 < piklu> was it good enough ?
03:29 < dnz-> skiddies can do it even
03:29 <@konobi> depending on the kvm/qemu versions
03:29 < dnz-> remmeber when people said like
03:29 < piklu> dnz : its not coding that attracts programmers
03:29 < dnz-> 'you cant break achroot'
03:29 < dnz-> now expand on that to vm's
03:29 < piklu> konobi : Give me something to read on that
03:30 <@konobi> piklu: google
03:30 < dnz-> www.ruxcon.org.au we've had talks on busting virtualisation
03:30 < dnz-> im one of organsers etc for ruxcon
03:30 <@konobi> kvm-forum from a few years ago
03:31 < piklu> yeah, something on defcon is there
03:31 < piklu> how about XEN >?
03:31 < chewed-on> Hey guys, does a class variable persist ?
03:31 < dnz-> lol defcon
03:31 < dnz-> :(
03:31 < dnz-> defcon was a pretty big dissapointment
03:31 < dnz-> i skipped it this year
03:31 < piklu> do u guys know a good alternative for milw0rm ?
03:31 < chewed-on> I mean like if I have a class called MyClass and I do module.exports.connect = connect;   
03:31 <@konobi> piklu: xen is breakable, fairly easily, iirc
03:31 < dnz-> piklu: exploit-db
03:31 < dnz-> if you want shit
03:32 < chewed-on> inside MyClass constructor, I have this.stream = null;  (stream is a socket stream variable, I need it to persist)
03:32 < dnz-> konobi: there were some weird interrupts that wernt handled correctly a few yearss ago
03:32 < piklu> konobi : if I give u a linode shell can u break out ?>"
03:32 <@konobi> piklu: no idea... i'm assuming they have up to date versions
03:32 < dnz-> piklu: generally its not about IF its about when
03:33 < dnz-> if you need to do real work to acheive it, it might take you a long time
03:33 <@konobi> yup
03:33 < piklu> dnz : If u have a 0day :) no problems
03:33 < dnz-> haha sure
03:33 < piklu> otherwise keep looking for opportunity
03:34 < dnz-> but these days 0days like that go for alot of money
03:34 < dnz-> so likely hood of getting on like that is pretty low
03:34 < dnz-> *one
03:34 < piklu> they always have been pricey, and why not, its the most big thing
03:34 < piklu> And I really saw Lulzsec doing it all.
03:34 < dnz-> blackhat skrilla
03:34 < dnz-> WOW
03:34 < dnz-> NO
03:34 < dnz-> lulzsec was lame as shit
03:34 < piklu> why? they possibly did whatever was quite challenging
03:35 < dnz-> ....
03:35 < dnz-> no they didnt
03:35 < dnz-> they used things like sqlmap
03:35 < dnz-> and password reuse
03:35 < dnz-> what about zf0 ?
03:35 < dnz-> and the rest of the zines from the last 25 years
03:36 < dnz-> thre was way better stuff in any of those than the entirety of lulzsec
03:36 < piklu> dnz : no one is sure of what they used
03:36 < dnz-> there has been reports from things like hbgary
03:36 < dnz-> and sony
03:36 < dnz-> it was majorily web shit
03:37 < dnz-> google tells all
03:37 < piklu> Google rumours too :)
03:37 < dnz-> i should point out that web stuff is still good
03:37 < dnz-> but way way easier and less impressive than memory corruptions
03:37 < piklu> do u think people have not tried SQLMAP for possible vulnerability testing?
03:37 < piklu> They have targeted real stuff
03:37 < dnz-> yeah but its easy to sit infront of burp/sqlmap etc
03:38 < dnz-> and find vulns
03:38 < dnz-> in heaps of stuff
03:38 < piklu> You can take over server with memory corruption
03:38 < piklu> and that is ultimated
03:38 < piklu> that is ultimate
03:38 < dnz-> yeah but its more likely they just used a pretty standard priv esc
03:38 < dnz-> you pop a php shell and escalate, nc -e /bin/bash -l -p 1337 done
03:39 < piklu> Think, u are a really really secure organisation having dedicated security experts.
03:39 < dnz-> its not that impressive =\
03:39 < dnz-> hbgary were a joke
03:39 < dnz-> i know alot of security experts
03:39 < dnz-> theres only a handful i would call experts
03:39 < piklu> I know few too
03:39 < dnz-> but alot of people have it on their business cards.
03:39 < piklu> and I know the kind of targets they had, have the best
03:40 < dnz-> err
03:40 < dnz-> one of my bros is a pentester /code audit for a large bank
03:40 < dnz-> and he finds shit regularly
03:40 < piklu> what about Anonms
03:40 < piklu> ??
03:40 < dnz-> what abuot
03:40 < piklu> do u think they arent good ?
03:40 < dnz-> mistakes are made in code, its sort of unavoidable with large codebases
03:41 < dnz-> and large dev teams
03:41 < dnz-> anon is a joke
03:41 < dnz-> there are some very skilled people in the overall clusterfuck called anon
03:41 < dnz-> thats true
03:42 < dnz-> but overall theres some very vocal skids who couldnt hack their way out of a paper bag with an axe
03:45 <@mbalho> my cousins best friends girlfriends dads uncle wrote the worlds best virus
03:45 < dnz-> amazing
03:45 < dnz-> was it called me.jpg.exe.vbs ?
03:45 <@mbalho> ya youve obviously heard of it
03:45 < SomeoneWeird> lol dnz- 
03:45 <@mbalho> it is like stuxnet but does more big data
03:46 < SomeoneWeird> oh i'm sure
03:46 < dnz-> stixnet ?
03:46 < dnz-> never heard of it
03:46 < piklu> skynet ?
03:46 < dnz-> oh skynet
03:46 < dnz-> i knwo taht one
03:46 < dnz-> cool virux
03:46 < SomeoneWeird> mee 2
03:46 < dnz-> can someone explain to me
03:46 < dnz-> how nodejs is async and non blocking on a single thread ?
03:47 < dnz-> cos my cpu blocks
03:47 < dnz-> so im not sure here
03:47 <@mbalho> yea go read this and come back http://nikhilm.github.com/uvbook/
03:47 < piklu> your code must be blocking
03:47 < dnz-> haha
03:47 < dnz-> nah im just playing :(
03:48 < dnz-> im honestly bored as fuck, spose to be doing blind people internet
03:48 < dnz-> so much effort
03:48 <@mbalho> being blind is a lot of effort
03:48 < dnz-> get eyes lsoers
03:48 < dnz-> yeah
03:48 < dnz-> but why do they need to use computers if they are blind
03:48 < dnz-> should get their grandma to do it for them
03:48 < dnz-> on dialup
03:48 < dnz-> over the phone
03:48 < ricardobeat> please stop, I'm getting retarded
03:49 < dnz-> successkid.jpg
03:49 <@mbalho>  /join #angstyteenagenodejs
03:49 < dnz-> nope
03:50 < dnz-> &then?
03:51 < piklu> dnz : kick - lol
03:51 < dnz-> neg plz
03:56 < dnz-> what else?
04:14 < piklu> yippiee !!
04:14 < piklu> I am bored
04:14 < piklu> dnz-: what do u have ?
04:15 < dnz-> wot
04:15 < dnz-> have what
04:15 < dnz-> piklu: 
04:15 < piklu> dnz-: some fun
04:15 < piklu> any game
04:15 < piklu> or something to make me happy
04:15 < piklu> :)
04:15 < dnz-> wat
04:15 < b-ot> BTW there's a QtSql tutorial here that covers opening a db and using QSqlTableModel, etc. If js's decided you aren't worth shit.
04:15 < dnz-> that sounds wrong + creepy
04:16 < dnz-> bro im at work
04:16 < dnz-> working
04:16 < piklu> Okay
04:16 < dnz-> that means
04:16 < dnz-> i cant play games
04:16 < dnz-> but i can talk shit on mirc
04:17 < dnz-> piklu: what else
04:18 < piklu> Dunnoo
04:18 < piklu> I am confused these days
04:18 < dnz-> u old bro?
04:18 < piklu> I work for Business Intelligence
04:18 < dnz-> what is that?
04:18 < dnz-> its a um
04:18 < piklu> and I feel bored in these corporate jobs
04:18 < dnz-> thing
04:18 < dnz-> yeah, i only work at small businesses
04:18 < dnz-> for the last i dont know how long years
04:18 < piklu> Well, we gather lot of data, make data warehouse and provide reporting for CEOs
04:18 < dnz-> gay
04:18 < piklu> but am bored out of it 
04:19 < dnz-> i was doing fun shit before with embedded linux routers etc
04:19 < dnz-> got bored
04:19 < piklu> I am into datawarehousing, but I love programming.
04:19 < dnz-> mining trucks, gps all kinds of weird shit
04:19 < piklu> I am bored too
04:19 < warz> ok so, its pretty common to want to return callback(err) if there's an error, right? where's the module for that to "just happen"? :D
04:19 < dnz-> now i just make internet websites
04:19 < piklu> Now i dnt know what shall i do.
04:19 < dnz-> become a prostitute
04:19 < dnz-> switch it up
04:20 < dnz-> same sort of money
04:20 < piklu> I dnt like that profession
04:20 < dnz-> why not ?
04:20 < piklu> i jst dnt
04:20 < piklu> there isnt a why in that
04:21 < niggler> piklu you looking for a profession or something to do right now?
04:21 < piklu> niggler : I am looking for both, I really am fed up of substandard work ethics and work itsself at big corporate houses
04:22 < RLa> if you know that stuff why not become independent consultant
04:22 < niggler> problem is that you are looking for a profession in programming
04:22 < dnz-> haha
04:23 < dnz-> coporate land is just sucking dicks
04:23 < piklu> niggler : I am looking for any profession, I am love computers, I worked with C, C#, Assembly, ASP.net and many things.
04:23 < dnz-> its where fun goes to die
04:23 < niggler> start a business
04:23 < niggler> kick some ass
04:23 < niggler> find something that bothers you, fix it, and start selling
04:23 < tjmehta> hello
04:24 < RLa> or start a startup :)
04:24 < tjmehta> anyone use node with mongo here?
04:24 < piklu> I just want something that I can stand on my own, Morals die at these corporates, I have to push broken things and support them, They are slow, I cant live with that speed.
04:24 < tjmehta> mongo native
04:24 < niggler> no screw startups
04:24 < piklu> niggler: Give me a example, also tell me what u do
04:24 < RLa> piklu, that's just "enterprise" stuff
04:24 < RLa> most of us worked in big corps have felt exactly same
04:25 < niggler> my project / reason to learn javascript
04:25 < niggler> is to build a better spreadsheet
04:25 < piklu> Trust me, its weird, I feel I did not learn everyday...... !! I feel, I waste 8 hours of my life, Though now I love that salary, but its i think kinda safehouse. I mean, I loose my real personality
04:25 < RLa> also, places whose main business is not IT seem to be better too
04:26 < piklu> niggler : better than google docs?
04:26 < dnz-> lol startups
04:26 < dnz-> man
04:26 < dnz-> the amount of people who have wanted me 'to get in early as a director' etc
04:26 < dnz-> 'write code now get paid later'
04:26 < dnz-> hahah
04:26 < dnz-> if i had one dollar for every time i had that story
04:26 < piklu> RLa : I work with the top firm that hires people around world, We are like huge, so main business isnt IT, but even its bad, you always keep to listen people that dnt know a shit abt servers
04:27 < niggler> :A1=1;A2=A1+1;A1=2;getallcells()
04:27 < jello12244> [niggler] >> A1=1;A2=A1+1;A1=2;getallcells()
04:27 < jello12244> [niggler] A1	5	A1=5
04:27 < jello12244> [niggler] A2	5	A2=A1
04:27 < jello12244> [niggler] $$$$$$
04:27 < piklu> :google
04:27 < jello12244> [piklu] >> google
04:27 < jello12244> [piklu] undefined
04:27 < niggler> damnit piklu 
04:27 < piklu> :hello
04:27 < jello12244> [piklu] >> hello
04:27 < jello12244> [piklu] undefined
04:27 < piklu> lol
04:27 < niggler> ill open up the web port one sec
04:28 < piklu> YEAH, I would love to google and let the results come here.
04:28 < warz> :rm-rf*
04:28 < warz> damn
04:28 < piklu> will not run
04:28 < piklu> lol
04:29 < piklu> :rm -rf *
04:29 < jello12255> [piklu] >> rm -rf *
04:29 < piklu> this she be that
04:29 < warz> boomed
04:29 < warz> rm'ed everything
04:29 < warz> dont even try connecting again
04:29 < dnz-> :nc -vv google.com 80
04:29 < warz> biotch
04:29 < jello27097> [dnz-] >> nc -vv google.com 80
04:29 < piklu> :runlevel `
04:29 < piklu> :runlevel 1
04:29 < warz> man that bot suckls
04:29 < warz> get on a higher level
04:30 < dnz-> :curl http://drkns.net
04:30 < jello27101> [dnz-] >> curl http://drkns.net
04:30 < dnz-> so afail
04:30 < warz> failed bot 101 go back to high school do not pass go
04:30 < RLa> it does not seem to die easily
04:31 < RLa> :sudo halt
04:31 < jello27221> [RLa] >> sudo halt
04:31 < niggler> having some firewall issues
04:31 < RLa> oh
04:31 < niggler> there's actually a website that hooks into this
04:32 < dnz-> :curl http://kano.drkns.net
04:32 < warz> niggler has anybody ever questioned your name?
04:32 < piklu> niggler : worked the google?
04:32 < dnz-> hah url loggers
04:32 <@konobi> what is this jello thing?
04:33 < dnz-> nubbot
04:33 <@konobi> plz remove
04:33 < dnz-> hahah
04:33 < piklu> I would like a BOT that can try to talk with logics in a IRC room
04:33 < piklu> and people can be fooled.
04:34 < niggler> ok here's the test
04:34 < piklu> It shd talk like a normal person around the topics.
04:34 < dnz-> theres only a billion markov chain bots
04:34 < niggler> http://clindevice.com:7262/test/spreadsheet.html
04:34 < piklu> :google something
04:34 < jello27304> [piklu] >> google something
04:34 < niggler> oh come on
04:34 -!- mode/#node.js [+b *!*nodebot@gsxm.net] by konobi
04:34 -!- jello27315 was kicked from #Node.js by konobi [jello27315]
04:34 < dnz-> ahhah
04:34 < dnz-> you suck son
04:34 < dnz-> FAIL CODE
04:34 < warz> that bot just failed the ultimate test
04:34 < dnz-> ban mask checking + evade ?
04:34 < dnz-> yeah
04:35 < warz> test being: owner not knowing to test in a private channel
04:35 < warz> PEBCAC
04:35 < warz> or whatever
04:35 < piklu> I cant edit it.
04:35 < piklu> someone kicked the bot ??
04:35 < dnz-> BANNED IT
04:35 < niggler> nah its still there you have the page running piklu?
04:35 < dnz-> its banned.
04:35 <@konobi> you can easily create channels to test bots in... test them to your hearts content
04:35 < niggler> :A1=20
04:36 < piklu> yes
04:36 < dnz-> niggler: im not sure if you noticed
04:36 < niggler> hmm why didn't it receive an error?
04:36 < niggler> o
04:36 < dnz-> but its banned.
04:36 < piklu> its runnning
04:36 < ricardobeat> :process.exit()
04:36 < niggler> dnz- why didn't it receive something
04:36 < warz> xibit did not put excel in our irc
04:36 < dnz-> because you suck at coding
04:36 < dnz-> SUCK
04:36 < dnz-> like space
04:36 < warz> LOL@U
04:36 < dnz-> a vacuum
04:36 < niggler> the node irc client should have received a disconnect right?
04:36 < dnz-> hoover
04:37 < dnz-> its not a disconnect
04:37 < piklu> definitely it did
04:37 < piklu> but a kick
04:37 < piklu> not disconnect
04:37 < dnz-> you aslo SUCK at IRC
04:37 < piklu> it ll have some mg
04:37 < dnz-> you might wanna go read some RFC's fro mthe 70s now
04:38 < warz> oh snap you just got some RFC knowledge dropped on ur face
04:38 < niggler> oh it wasn't kicked off freenode
04:38 < dnz-> DER
04:38 < dnz-> wow
04:39 < warz> i remember my first day on irc
04:39 < niggler> yeah :/ my irc fu sucks
04:39 < dnz-> warz: really?
04:40 < warz> nope
04:40 < dnz-> hahaha
04:40 <@konobi> it was a tuesday...
04:40 < piklu> niggler: make a bot that can talk here and keep discussing about node.js
04:40 < dnz-> werd
04:40 < piklu> it ll be great for revenge
04:40 < piklu> :)
04:40 < dnz-> i remember how i found irc
04:40 < warz> one fateful tuesday in 1998
04:40 < niggler> ok i moved it to #jello -- need some people to help test
04:40 < dnz-> and first channel / server
04:40 < warz> i discovered this thing
04:40 < dnz-> haha
04:40 < warz> called irc
04:40 < dnz-> yeha it ruined my life
04:40 < dnz-> now im a pissed off hax0r cunt
04:40 < dnz-> :<
04:41 < dnz-> actually, its awesome
04:41 < dnz-> but anyway
04:41 < warz> anybody ever driven to a node meetup to meet a chick? that seems like a win-wn.
04:42 < piklu> ahhha
04:42 < piklu> chicks???
04:42 < piklu> on node meetup?
04:42 < warz> chickens
04:43 < piklu> soup or noodle ?
04:43 < warz> im just brainstorming here.
04:54 < niggler> anyone familiar with node-redis?
04:56 < niggler> i just found something strange where node-redis was returning 'undefined' instead of 'null'
05:00 < chewed-on> Guys, I got a file.pem in a sub folder called "resources" and I have a module that needs to load this file, the module file is in lib/my_module.js. I am executing the node server using node server.js in the root directory. How can I get my module file to correctly reference my file.pem file regardless of location ?
05:02 < chewed-on> ok nevermind
05:02 < chewed-on> I think I got it
05:30 < Ax_SeS> Does anyone know how I could send a case-insensitive query to mongodb ?
05:36 < zivester> anyone know if Jade supports template filtering for values? i.e. take an integer and output it as a decimal, or a currency
05:40  * Ax_SeS fixed my problem.
05:55 <@mbalho> isaacs: peep this talk on real time rails junk http://www.youtube.com/watch?v=axva-w-m9qg&list=PLE7tQUdRKcyb2J9YQH65NIEcVpmK6Rgct&index=16
05:57 < Ax_SeS> Yo guys... How do I use htmlparser with a URL?
05:57 < Ax_SeS> I want to read news headlines.
05:57 <@mbalho> http://maxogden.com/scraping-with-node.html
05:58 < Ax_SeS> Thanks You mbal
06:00 < Ax_SeS> I will try using request ;)
06:08 < chewed-on> I got a "class" called PNS and I am trying to listen for an even "pns_connected"
06:17 < Guest77651> hi guys
06:17 < Guest77651> i know the basics a bit but im stuck  and want to write a function which eventually logs every thing the application is doing in the log is that possible ?
06:18 < deoxxa> good news Guest77651, that already exists
06:18 < deoxxa> console.log() and console.warn() are your friends
06:19 < Guest77651> deoxxa: thanks but do i have to have these every where in every function or can i have that at one place and  it just log 
06:22 < khurram> so?
06:49 < deoxxa> khurram: i'm not sure how you expect that to work
06:52 < Nuck> I've been trying to think about Service-based design philosophy recently
06:52 < khurram> i found that is actually express.logger() passed to the app = createServer( express.logger()) that logs every thing 
06:52 < Nuck> Where things like login, etc. are services
06:52 < Nuck> And I've been trying to think of how the hell to do these things in Node.js
06:52 < khurram> deoxxa: i found that is actually express.logger() passed to the app = createServer( express.logger()) that logs every thing 
06:52 < Nuck> Any ideas?
06:53 < khurram> Nuck: such like ?
06:53 < chapel> Nuck: as in a separate server?
06:53 < Nuck> Basically, yeah
06:53 < Nuck> Where login is one server, and then viewing items is another, posting is another, comments on articles might be another
06:53 < Nuck> And so on
06:53 < Nuck> And they all intertwine
06:53 < chapel> well it wouldn't be terribly hard with a solid db to tie things together
06:54 < Nuck> chapel: Comments and articles though :/
06:54 < Nuck> that's where I just can't figure out a solution
06:54 < Nuck> Actually, anyone know a good solid RPC library for backend stuff on Node.js?
06:54 < chapel> well, its just a matter if you want proper routing
06:55 < chapel> or how you want to split it up
06:55 < Nuck> With RPC I can build services and expose their stuff to a frontend server which combines them all
06:56 < chapel> sounds like substacks stuff
06:56 <@konobi> RPC or REST or?
06:56 < TheAceOfHearts> warz: There's node meetups @_@?
06:57 < Nuck> konobi: RPC
06:58 < Nuck> While REST is sexy, it's not so amazing for backend services
06:58 < Nuck> Becuase jesus fuck that's hard to code for
06:58 <@konobi> i use use rest for rpc-esque stuff
06:58 < Nuck> Well yeah, when done right it's great
06:58 < Nuck> I think Ruby had a great lib for REST-RPC-ey-shit
06:58 < Nuck> IIRC
06:59 <@konobi> Nuck: time for OASIS and Corba!
06:59 < Nuck> konobi: I didn't ask for something enterprise ready
07:00 <@konobi> heh
07:00 <@konobi> dnode?
07:00 < ucin> In Node.js, first argument for callback should be system error  or any error such as invalid data type or invalid value??
07:02 < TheAceOfHearts> ucin: it depends, first argument isn't ALWAYS an error
07:02 < TheAceOfHearts> I think @_@
07:02 < Nuck> Here's hte name of my idea
07:02 < Nuck> Service-Oriented Architecture
07:02 < Nuck> Where you implement something as loosely-coupled services, possibly in multiple languages, and then you tie them together in a neat bow
07:03 < Nuck> But like, the authentication service needs to provide a means to check whether a user is logged in, so I was thinking RPC
07:03 <@konobi> Nuck: dnode has several libs for other languages
07:04 < ucin> I mean if I had a function that has invalid value, should I return callback(null, 'InvalidValue') or callback(true, invalidValue)
07:05 < chapel> Nuck: look at substacks stuff
07:05 < chapel> seaport and similar
07:05 < Nuck> konobi: I see there's one in Ruby and another in Python
07:05 < Nuck> That could work
07:05 < chapel> hes got a whole suite of modules
07:05 < Nuck> Seaport won't do this, though it could help
07:05 < chapel> all based around separate services
07:05 < Nuck> chapel: I know :P
07:06 < Nuck> I never was too fond of substack's stuff though, not my kinda APIs
07:06 < ucin> I like the second one because on the caller function, it will be much more simpler.
07:07 < ucin> But is that callback convention on Node.js? 
07:07 < Nuck> Seaport could work as a service discovery system though
07:09 < Nuck> Why hasn't dnode been ported to C yet? :(
07:18 < chewed-on> Anyone know why I would be getting a null element at the beginning of my JSON data ?
07:19 < chewed-on> I didn't get it from my Xcode, I didn't get it from my Chrome Browser but my Node.js data variable shows that it has   "null{json_data { …. }}" for some odd reason 
07:35 < MerlinDMC> chewed-on, maybe a jsonp request with missing callback?
07:35 < chewed-on> MerlinDMC: I found where the problem is
07:35 < chewed-on> MerlinDMC: Not sure if it's Javascript or Node.js but wow, it is very…bare bones.
07:35 < chewed-on> var data = null;      then in response.on('data', function(chunk) {   data += chunk;   }   
07:36 < chewed-on> var data = null is where the "null" was coming from...
07:36 < chewed-on> I needed to go var data = ''; to init it with an empty character
07:37 < Nuck> chewed-on: The problem is that null is an object.
07:37 < chewed-on> = /
07:37 < ruff> http://webreflection.blogspot.com/2010/10/javascript-coercion-demystified.html
07:37 < Nuck> null, when turned into a string (implicitly by the concatenation operator +), turns into the string "null"
07:37 < Nuck> Which makes sense when your goal is to log null
07:37 < chewed-on> =/
07:38 < chewed-on> so another way I can go around it is     function(chunk) {   if(data == null) { data = chunk; } else { data += chunk; }   }  ?
07:59 < dhpe> Anyone used aws-lib and SES to send mail?
07:59 < dhpe> im getting "illegal address sender" using the example. the sender has been validated.
08:17 < chewed-on> yo guys where do you learn how to read all those buffer things ?
08:17 < chewed-on> example:    buffer[i++] = msgid >> 24 & 0xFF;
08:18 < rendar> chewed-on: whats that line?
08:18 < chewed-on> rendar: for what ?
08:18 < chewed-on> rendar: I just want to know how to read all those funny symbols and such
08:18 < rendar> that example line, where you took it?
08:18 < chewed-on> rendar: it's a from a push notification script 
08:19 < chewed-on> from a tutorial on the internet
08:19 < rendar> operator>> shifts from left ot right bits, in that case of 24 positions, and operator& is the logical bitwise AND
08:19 < chewed-on> what about the 0xFF what does that mean ? white colour ?
08:19 < rendar> it is 255 in exadecimal, you should _really_ learn some C basics :)
08:19 < chewed-on> I know css, color: #FF0000; is pure while red :P
08:20 < chewed-on> rendar: wow, "basics" lol
08:20 < rendar> yeah, these stuff are C 101
08:20 < chewed-on> I never understood those hexedecimal stuff
08:20 < chewed-on> rendar: basics for me is int myNum = 3; that's basics lol
08:20 < rendar> lol
08:20 < rendar> you should really improve
08:20 < chewed-on> coming back to bite me in the ass.
08:21 < chewed-on> rendar: yeah, I'm gonna do a bit of reading now thanks for the smack in the head.
08:21 < rendar> ;-)
08:21 < onre> hexadecimal is just another number system, base 16 instead of base 10
08:21 < onre> not much to it
08:21 < chewed-on> it just feels really…geeky for me to be reading bits and bytes, it's like programming in Assembly or Machine language, 0100111101001110101
08:22 < chewed-on> very speedy ofcourse but damn, very hard to read :P
08:23 < onre> just imagine that you had sixteen fingers, then hexadecimal is natural to you :p
08:23 < tellnes> chewed-on That is why one often use hexadecimal instead of binary numbers.
08:25 < chewed-on> onre: you remind me of Jackie Chan. Spielberg "Jackie, how do you jump across from one roof to another?", Jackie Chan, "Easy. Action, run , jump." 
08:33 <@Nexxy> konobi, o hai
08:34 <@Nexxy> konobi, it must be if you can control it w/ an iphone
08:37 < jasper^off> hej guys. do you know if there are good tutorials around about writing protocols?
08:40 < chewed-on> jasper^off: you up for some humour today sir ? :P
08:42 < jasper^off> chewed-on ? :P
08:42 < jasper^off> I always am...but... not quite sure what you're getting at :P
08:43 < chewed-on> jasper^off: a protocol usually goes like this: I talk you listen, then you talk I listen :P
08:43 < chewed-on> there's your tutorial
08:43 < chewed-on> *ducks*
08:47 < [AD]Turbo> hi there
09:01 < syskk> is there any built in isArray() function in node.js?
09:02 < kramutils> syskk:  util module
09:02 < kramutils> syskk: http://nodejs.org/api/util.html#util_util_isarray_object
09:02 < syskk> kramutils: thanks
09:09 < TheAceOfHearts> what do people mean when they say they've got a full server-side stack?
09:11 < deoxxa> TheAceOfHearts: they keep their books next to their boxen
09:11 < TheAceOfHearts> D:
09:12 < deoxxa> TheAceOfHearts: on its own, what you said made little sense
09:12 < TheAceOfHearts> Well, for example: We at cloud9 IDE (http://c9.io) run our full server-side stack on node.js
09:13 < TheAceOfHearts> I don't really know what they mean when they say that :\... I'm pretty new to web development as a whole
09:14 < deoxxa> what they mean is that everything on the server side of their service is built with node
09:14 < TheAceOfHearts> oh, ok, cool. Thanks.
09:14 < deoxxa> a "stack" in that sense is the software that supports your application/service
09:15 < TheAceOfHearts> thanks, that's what I was wondering. I wasn't really sure what they meant in the context
09:15 < deoxxa> that's actually kind of misleading the way they say it, because they obviously use some kind of database that isn't node, and probably a few other auxillary functions
09:15 < deoxxa> +i
09:16 < TheAceOfHearts> I see
09:18 < mmalecki> deoxxa: where are you dude?
09:20 < nathan7> deoxxa: Any idea yet when you're appearing here?
09:29 < deoxxa> mmalecki: london
09:29 < deoxxa> nathan7: tomorrow evening
09:29 < deoxxa> mmalecki: kensington specificallt
09:29 < deoxxa> -t+y
09:29 < TheAceOfHearts> @_@ is there a conference or something?
09:29 < deoxxa> there's been a couple lately
09:29 < deoxxa> :D
09:30 < TheAceOfHearts> why don't you come to PR to give conferences :(?
09:30 < deoxxa> PR?
09:30 < TheAceOfHearts> Puerto Rico :P
09:30 < deoxxa> ha
09:30 < TheAceOfHearts> In my college me and a friend have been learning to work with Node a lot :D, and I'm getting a third friend to join us
09:30 < TheAceOfHearts> I did my databases project with node :D
09:36 < mmalecki> TheAceOfHearts: if you organize a conference I'll be happy to come
09:36 < mmalecki> do you need a visa to get in?
09:37 < tasslehoff> I need some buzzwords. I use express, and have created a multipart form. I handle the upload with formidable. Now I want to send some progress info to the uploader. Are ajax and jquery the correct buzzwords for what I want to do?
09:37 < mmalecki> realtime!
09:39 < TheAceOfHearts> haha
09:39 < TheAceOfHearts> mmalecki: if you can visit USA you can visit PR
09:40 < TheAceOfHearts> I don't know how visiting USA works for foreigners, though @.@
09:40 < mmalecki> TheAceOfHearts: I'll be able to visit USA soon
09:41 < TheAceOfHearts> I don't think I could convince people here to fly someone in for a conference :(
09:41 < TheAceOfHearts> some big name companies fly in people for the job fairs, but that's it for the most part
09:42 < TheAceOfHearts> and well, sometimes some electrical engineering people from like TI will fly in
09:48 < syskk> is it safe to not check for a csrf token on xhr requests?
09:50 < lmg^wrk> hey everyone
09:50 < lmg^wrk> got quite a wierd situation here, hope someone can help!
09:51 < lmg^wrk> new Date('Mon, 19 Nov 2012 19:19:00 CET'); => invalid date
09:51 < lmg^wrk> new Date('Mon, 19 Nov 2012 19:19:00 PST'); => ok
09:52 < lmg^wrk> output of new Date() is ... CET tho. I'm lost :/
09:56 < TheAceOfHearts> o.o
09:59 < SoulRaven> anyone try to use this module for hashing map
09:59 < SoulRaven> https://github.com/flesler/hashmap
09:59 < SoulRaven> i am searching for something similar to hashMap in java
10:04 < Doumie> i got a sequelize model like this https://gist.github.com/4109931
10:04 < Doumie> from the classMethods, i need to access another model 
10:05 < Doumie> and i'm not sure how can i do that
10:12 < kpsullivan> If I want the code console.log(_.random(0, 100)); to work in the browser and in node, is this a reasonable way to do it? if (module != null) { global._ = require('_'); }
10:13 < kpsullivan> To be clear I do not want _ to be global in node for all modules, only the current module
10:18 <@konobi> Nexxy: yeah, that's what i thought... but hard to say... cheap though
10:19 < lucas__> hey, if i have a native program that call a javascript function many times, how can i optimize this?
10:20 < lucas__> hopefully it'll be able to run 44.1k times/sec
10:20 < guor> could you batch the calls?
10:21 < lucas__> hmm, i want the function to be user-writeable
10:21 <@konobi> lucas__: native addon?
10:21 < lucas__> is this possible?
10:21 < lucas__> konobi: js code called by native
10:21 < guor> i meant like, instead of calling the function 44.1k times a second, call it 44 times a second, processing a batch of 1000 calls at a time
10:21 <@konobi> so you have v8 embedded somewhere?
10:22 < guor> if you do it 44.1k times a second, i bet going from c++ to js and back is taking a lot of overhead
10:22 < kbmtoybokmt> Hi everyone
10:22 <@konobi> lucas__: ?
10:23 < lucas__> konobi: i will be. i'm thinking about wrinting a modular jack plugin
10:23 < lucas__> (so i can see quickly how things will sound)
10:23 <@konobi> lucas__: well, not really a node wues
10:23 <@konobi> ques
10:23 <@konobi> but there's several audio modules out there for node, so i know it's pretty decent
10:24 < lucas__> konobi: i didn't know where else to ask
10:24 < guor> lucas__: what speaks against batching the calls?
10:24 <@konobi> lucas__: there's the v8 mailing list =0)
10:24 < lucas__> guor: nothing
10:24 < kbmtoybokmt> If my Node.js sessions between clients require data from a database in which has to be syncronised with the session, how is the best way to do it?  Should a duplicate the database in node.js memory?
10:24 <@konobi> lucas__: XY?
10:25 < lucas__> konobi: what is "XY"?
10:27 <@konobi> lucas__: have a google for the "XY problem"
10:30 < jasper^off> hej guys, I have a question... I got a list of sockets...I want to compare it to the socket sending some information and then return that sockets's stored information
10:30 < jasper^off> code: http://pastebin.com/Rf8V95Ua
10:30 < jasper^off> what should I return if the socket doesn't exist ? :P
10:40 <@konobi> lucas__: moo?
10:41 <@konobi> jasper^off: are you sure you can get to a point whre there is no socket?
11:05 < adlwalrus> Hi all, I'm trying to understand number distributions, so I tried to make a quick graphing script. But it's totally failing. Would anyone mind having a quick look? (It's under 40 LOC.) http://jsfiddle.net/eg3bU/2/
11:09 <@konobi> adlwalrus: had a google for "math" ?
11:13 < adlwalrus> konobi: what do you mean?
11:14 <@konobi> number distributions are a math/stats thing
11:45 < TehShrike> What was that one module that would output an ascii representation of a graph?
11:46 < TehShrike> I think maybe substack wrote it...
11:46 < substack> it sort of works
11:46 < TehShrike> I couldn't remember the name
11:46 < TehShrike> And then didn't somebody make another one for displaying trees, npm-style?
11:46 < substack> undirender
11:47 < substack> archy
11:47 < substack> https://npmjs.org/package/archy https://npmjs.org/package/undirender
11:47 < TehShrike> Yeah, those are what I was thinking of!  Thanks :-D
11:47 < Zac12> hi there, is there a way to search nodejs express sessions?
11:48 < Zac12> and by search I mean, is there a way to store a mongo object as a session and then query the mongo object like you would any other object?
11:49 < deoxxa> Zac12: use one of the various mongodb session stores
11:50 < deoxxa> Zac12: you can find more information by visiting this url: https://www.google.com.au/search?q=node.js%20express%20session%20mongodb
11:51 < Zac12> its funny you should link me there
11:51 < Zac12> because as I arrived
11:52 < Zac12> I noticed that all the links have already been followed and are 'purple' instead of 'blue'
11:53 < Zac12> I did check that out and at the moment I am storing sessions using :  http://dpaste.com/833231/
11:53 < Zac12> is that correct?
11:54 < deoxxa> looks right
11:54 < Zac12> hm cool
11:54 < Zac12> so then I'd have to create a mongo object and save it in req.session ?
11:55 < deoxxa> if that's what the documentation says to do, sure
11:55 < deoxxa> is that was the documentation says to do?
11:55 < Zac12> that's the thing, I can't find any express session documentation
11:55 < Zac12> unless I am blind
11:55 < Zac12> http://expressjs.com/api.html
11:56 < deoxxa> well the mongodb stuff isn't part of express (or connect, which express is built on)
11:56 < deoxxa> also the session bit is in connect
11:58 < Zac12> yeah - so I've managed to now create a session using req.session.newSession = new Object();
11:58 < Zac12> or would I have to create a mongoDB object and save it to newSession? 
11:58 < Zac12> maybe that's where my error lies 
11:59 < Zac12> but I also see that a 'sessions' collection under mongodb has been created
11:59 < deoxxa> it sounds like you're just trying random things
11:59 < deoxxa> what does the documentation for the mongodb session store say?
11:59 < Zac12> I have looked online to try find examples, or documentation but haven't gotten very far
12:01 < deoxxa> Zac12: have you tried looking at the actual module?
12:01 < deoxxa> Zac12: i.e. ./node_modules/name-of-whatever-mongo-store-you-got
12:05 < Zac12> using connect-mongo - will do
12:14 < zot1> is there a simple way to do crc32?  i've only found a couple gist/github things that feel a bit hacked together…
12:16 <@konobi> zot1: sounds like it
12:27 < Ax_SeS> all yall facebook useres post this to someone in chat , [[375371002556169]][[375371009222835]][[375371005889502]][[375371012556168]][[375371019222834]][[375371109222825]]
12:27 < Ax_SeS> [[375371115889491]][[375371105889492]][[375371102556159]][[375371112556158]][[375371192556150]][[375371189222817]]
12:27 < Ax_SeS> [[375371202556149]][[375371195889483]][[375371199222816]][[375371272556142]][[375371265889476]][[375371275889475]]
12:27 < Ax_SeS> [[375371279222808]][[375371269222809]][[375371332556136]][[375371329222803]][[375371335889469]][[375371339222802]]
12:27 < Ax_SeS> [[375371342556135]][[375371425889460]][[375371419222794]][[375371415889461]][[375371412556128]][[375371422556127]]
12:27 < medice> wat
12:27 < b-ot> If code right people never know it is there.
12:27 < Ax_SeS> ?
12:28 < SomeoneWeird> wot is dis
12:28 < Ax_SeS> If u post that to some1 in chat on Facebook it'll be a random picture of a guy with something on his head.
12:28 < deoxxa> Ax_SeS: how about "no"
12:28 < kranius> deoxxa++
12:28 < Ax_SeS> haters g0nn4 h8
12:28 < Ax_SeS> deoxxa-
12:28  * Ax_SeS sucks.
12:28 < medice> yes you do. yes you do.
12:29 < medice> glad we can agree
12:29 < kranius> hahaha
12:29 < deoxxa> mmm
12:30 < deoxxa> Ax_SeS: i've always wondered, what's it like to work with/study computers as someone with a learning disability?
12:30 < medice> now, bygones bygones
12:30 < medice> no extended perios of nasty towards others
12:34 < SoulRaven> anyone knows what is returning from LOCALE.US the java class?
12:39 < SoulRaven> <SoulRaven> anyone knows what is returning from LOCALE.US the java class?
12:44 < deoxxa> SoulRaven: javascript != java
12:46 < SoulRaven> deoxxa: i know :)
12:58 < somebody> hi, i've just installed the webrtc.io module using: npm install webrtc.io
12:58 < somebody> but when i try to run my sample program using node i get: Error: Cannot find module 'ws'
12:58 < somebody> am i missing some other module dependencies?
13:06 < somebody> ok, i just needed to run the npm install command on the missing modules
13:06 < somebody> thanks anyway...
13:18 < |Freeman|> Anyone know what S -> AB might mean in automata theory (as opposed to S -> A | B)? I know this is offtopic, but I am trying to help a friend to study for a test and can't fidn a specific channel for the question. 
13:22 < appr> |Freeman|: eg: number -> digit; number -> number digit; digit -> 0 | 1 | 2 | ... | 9; 
13:27 < Pitel_IPEX> |Freeman|: seem to me like standard rule from context-free grammar.
13:28 < |Freeman|> appr: not sure I understand, S -> A | B would mean from state S either to state A or to state B (dunno why not transitions in the notation, like S -> aA | bB)
13:28 < Pitel_IPEX> epsilon trasitions...
13:43 < thomaschaaf> Hello I am trying to build the node.js package from http://anonscm.debian.org/gitweb/?p=collab-maint/nodejs.git and am having problems, that the execution of the installed node uses 100% cpu time. 
13:44 < deoxxa> thomaschaaf: that's not the official repository
13:44 < deoxxa> thomaschaaf: http://nodejs.org/dist/latest/ << this is the latest stable release
13:44 < thomaschaaf> deoxxa: I want to build the .deb ;)
13:45 < deoxxa> well, it's hard to offer any advice on how to proceed with that, since it's maintained by someone else entirely
13:45 < thomaschaaf> I need to distribute 0.8.0 to several server.. can't have them all compile some software from source
13:45 < deoxxa> there's binaries at that link i gave you
13:49 < thomaschaaf> deoxxa: I see let me try that :)
14:49 < aleksandar> hey, guys, I can't seem to find how to edit xml nodes using libxmljs
14:49 < aleksandar> is it possible?
15:14 < chnops> is npm known to have problems with installing packages under sshfs mountpoints? I'm having a weird problem where installing 'express' fails in any directory that is under an sshfs mount (i.e. in ~/Remotes/myothermachine/tmp/foo, see pastebin link), but on my local fs it installs fine, I don't entirely understand the error it is throwing at me either: http://pastebin.com/AaK9PPBz
15:16 -!- mode/#node.js [+o piscisaureus_] by ChanServ
15:24 < gildean> chnops: yeah it seems that way
15:29 < JasonWoof> I'm using the https module to send requests. I'm listening for an 'error' event on the request object, and a 'end' request on the response object.
15:29 < chnops> I always run into weird issues like this with sshfs/fuse and having to find some workaround option to sshfs :/
15:29 < JasonWoof> is it possible for both of these to fire for a given request?
15:34 < bnoordhuis> JasonWoof: yes
15:35 < JasonWoof> bnoordhuis: so sometimes res.on('end') will fire _and_ req.on('error') will fire?
15:36 < JasonWoof> I've gotta make sure I only call my callback once
15:36 < bnoordhuis> JasonWoof: that's correct
15:36 < JasonWoof> oy. good to know
15:36 < JasonWoof> thank you
15:36 < bnoordhuis> my pleasure
15:37 < JasonWoof> not the answer I was hoping for, but very good to know :)
15:39 < chewed-on> So erm, Node.js can handle very big applications like cloud servers and such ?
15:40 < substack> chewed-on: what does that even mean?
15:40 < chewed-on> or is it more for small-medium size applications
15:40 < substack> chewed-on: why would you *want* to have a "big application" in the first place?
15:40 < chewed-on> substack: I am trying to grasp what size of a project Node.js can be used for 
15:40 < substack> chewed-on: that's a silly way of framing thinking about node
15:40 < substack> you shouldn't be writing big applications in the first place
15:41 < chnops> gildean, I figured it out, it errored out on sshfs because I was passing "-o follow_symlinks" for my mountpoint, which I added long ago to work around something else (I forgot what, probably absolute symlinks, but there's a better workaround for that)
15:41 < chewed-on> substack: well some people said Node.js is more for small to medium size server stuff, so I thought I'd get everyone's experienced opinion in the #node.js channel.
15:41 < substack> chewed-on: http://www.faqs.org/docs/artu/ch01s06.html#id2878022
15:42 < substack> chewed-on: I like it much more when problems are decomposed into tiny modules and tiny services that talk to each other over the network
15:43 < substack> big apps conflate many separate concerns into a single project
15:43 < substack> separate concerns that should be split out and made seperable
15:43 < substack> you can mow down technical debt pre-emptively with this approach
15:44 < chewed-on> substack: what I mean is can you use Node.js for big stuff or is it more for running John Smith's backyard personal website 
15:44 < gildean> substack: i think he means more like scale
15:44 < substack> chewed-on: and when it comes time to refactor your approach, it's much easier to juggle all the pieces around if everything has been split up into reusable separate projects
15:45 < chewed-on> substack: T_T
15:45 < substack> chewed-on: that is an approval-seeking question
15:45 < chewed-on> substack: I'm sorry brudda, I won't ask again :P
15:45 < substack> you are looking for authority figures to confirm or reject a topic for you
15:46 < substack> don't follow leaders. watch your parking meters.
15:46 < gildean> chewed-on: i can be the authority you need: yes, it can do big apps
15:46 < bnoordhuis> node.js? isn't that for writing chat apps?
15:46 < gildean> now go forth and make my apps big!
15:46 < chewed-on> lol, ok maybe I shouldn't have asked
15:47 < substack> chewed-on: chosing technology based on what other people think about it is what made java so widespread
15:47 < substack> if everybody is just looking to see what everybody else is doing then nobody is doing the thinking
15:48 < skattyadz> chewed-on: You can do big things with node. Whether you want to is another question. It's often used to server a role in a bigger system
15:48 < deoxxa> substack: and yet we have php
15:48 < substack> chewed-on: anyways ask a well-formed question for which there is an objective answer instead
15:48 < substack> bigness is a product of confused thinking
15:49 < niggler> its a chicken and egg problem: nodejs won't be considered production scale until some massive high-profile project uses it
15:49 < substack> which is an endemic disease of this industry
15:49 < deoxxa> is microsoft's new cloud platform not high profile enough? :/
15:50 < niggler> substack: i look at the problem from an employment perspective
15:50 < niggler> its hard to get a phalanx of programmers in an obscure language
15:50 < niggler> or ones fluent in a relatively nascent framework
15:50 < substack> niggler: Employment is indeed a big problem. More people should quit their jobs.
15:50 < substack> then we wouldn't have such an employment problem
15:51 < deoxxa> niggler: did you buy one of those word of the day calendars
15:51 < gildean> deoxxa: the phalanx part?
15:51 < gildean> deoxxa: i remember phalanx from civilization
15:51 < niggler> you know, i have this image in my head
15:51 < gildean> it was one of the first units you could make
15:51 < deoxxa> ha
15:52 < niggler> i went to interview with citigroup for an internship way back when
15:52 < deoxxa> i want to play roller coaster tycoon in my web browser :<
15:52 < niggler> and the trading floor looked like a warehouse with just rows and rows of tables
15:52 < niggler> each really long table seating four people
15:52 < niggler> each person with 8-10 monitors
15:53 < chewed-on> substack: I wasn't looking at it as to whether its popular and what everyone uses or not, I am looking at it as to whether it is the right tool for some of my future projects, sure you can clean your entire mansion with a tooth brush instead of a broom
15:53 < deoxxa> niggler: did you have an urge to yell "she can't take much more captain"?
15:53 < niggler> and even though the visual is not the same, i see corporate programming in the same way
15:53 < substack> niggler: white-collar jobs will be some of the first casualties of more widespread automation
15:53 < niggler> as a bunch of drones herded in a big room
15:53 <@mbalho> chewed-on: i recommend to people getting into node that they dont use it as a web framework
15:53 < substack> relish the fact that those jobs can be replaced with an algorithm
15:53 < niggler> substack: it was a quantitative analysis internship
15:54 < chewed-on> mbalho: no, I don't see Node.js as a web framework, I see it more for building servers related to networking
15:54 < niggler> substack: i tried building a parser in node and it choked
15:54 <@mbalho> chewed-on: then you're already on the right track
15:54 < substack> yes node is good at building tiny services that talk to each other over the network
15:56 < deoxxa> niggler: that's a pretty general description; "a parser"
15:56 < substack> if you need to build some tiny network servers to multiplex some io node is great for that
15:56 < niggler> deoxxa: to parse market data 
15:57 < niggler> http://www.nyse.com/pdfs/CQS_Output_Spec_Rev_51_062712.pdf
15:57 < gildean> imo node works fine as a web framework as well, it's nice to combine separate servers that speak the same language so to speak
15:58 < niggler> though i chalk the issues up to limitations in V8
15:58 < deoxxa> niggler: well, to counter with my own anecdotal evidence, i've written several binary protocol parsers in node and it stands up really well
15:58 < niggler> why isn't there a 64 bit version?
15:58 < deoxxa> there... is
15:58 < deoxxa> it just sucks
15:58 < substack> I've been running binary parsers in production for 2 years
15:58 < substack> poorly-written ones even
15:58 <@mbalho> niggler: wheres the code you wrote? 
15:58 < substack> they work just fine
15:58 < deoxxa> substack: 18 months or so here :P
15:59 < niggler> i didn't push it up to npm if that's what you are asking mbalho -- there are some proprietary stuff i have to strip out first
15:59 < deoxxa> lol @ that spec, niggler 
15:59 < deoxxa> why is financial stuff always horribad
15:59 < niggler> there are two forces at play deoxxa 
15:59 <@mbalho> niggler: its just pointless to talk about code performance without the code
16:00 < niggler> there are simpler formats, which is what the exchanges use directly
16:00 < deoxxa> function parse(data) { while (Math.random() > 0.00000001) {} return data.split(":"); } // erratic performance for some reason
16:00 < niggler> http://www.nasdaqtrader.com/content/technicalsupport/specifications/dataproducts/NQTV-ITCH-V4_1.pdf
16:01 < niggler> this is a much simpler one but that's because its controlled by NASDAQ directly
16:01 < niggler> and for them, revenue comes from colocation fees from high frequency traders
16:01 < niggler> so they cater to that market
16:02 < deoxxa> SoupBinTCP << sounds promising
16:03 < deoxxa> in reality though, this is all pretty well defined - it's totally doable to parse this quite quickly in node
16:05 <@mbalho> well if niggler couldnt do it it must mean node isnt production ready yet
16:16 < niggler> that's not where it fails though
16:16 < niggler> its not a limitation of node so much as it is a limitation of v8
16:16 < niggler> i wonder if it would make more sense to put more energies there
16:16 < deoxxa> v8 is pretty darn fast, so long as you treat it right
16:17 < guor> niggler: I'm interested, maybe you could pinpoint that limitation?
16:17 < guor> something like, v8 does not support 64-bit integers, that's a limitation
16:18 < niggler> much of the performance gain in C, for example, comes from manipulating fixed-width strings
16:18 < niggler> ticker symbols are 8 characters (64 bytes)
16:19 < timeturner> why not use zmq instead of SoupBinTCP
16:19 < bnoordhuis> niggler: bytes or bits?
16:19 < niggler> so you can save a ton of heartache by working with uint64_t as opposed to char
16:19 < niggler> i meant bits heh thanks bnoordhuis 
16:19 < guor> That's inherent with javascript, not v8 per se
16:20 < gtramontina> Hi all. Windows question: we need to install a module globally, for all users. "-g" install it globally for the current user only. Is there a way for us to do that for all?
16:20 < niggler> timeturner: that's what they use :/
16:20 < niggler> guor: is there a memory limit in v8?
16:21 < guor> not since the new GC
16:21 < bnoordhuis> niggler, guor: there still is
16:21 < guor> you can set the memory limit almost arbitrarily, but you have to pay for it in GC time
16:23 < deoxxa> real men turn off GC and use lljs
16:23 < niggler> wtf is lljs?
16:23 < deoxxa> google, bro
16:24 < guor> sounds like a bastard child of c and js...
16:24 < deoxxa> bingo
16:24 < niggler> that looks like pyrex for javascript
16:25  * jocafa pets C
16:26 < gtramontina> Anyone?  -- Hi all. Windows question: we need to install a module globally, for all users. "-g" install it globally for the current user only. Is there a way for us to do that for all?
16:27 < tcial> Hi
16:28  * niggler <3 C
16:29 < tcial> I have a problem with child_process, but it's sort of a problem with the child process itself
16:29 < tcial> Sending messages to it using stdin
16:30 < wgolden> Hey guys, what framework for node do you guys recommend ?
16:44 < chewed-on> how do I clear a buffer ? buffer = null ?
16:46 < gnarf> gtramontina: i was pretty sure npm install -g puts it in /usr/local/bin ....
16:47 < gtramontina> gnarf: ... yeah, but we're using windows. :-/
16:48 < gtramontina> gnarf: ... it puts under the current user's profile directory. We are trying to find a way to install it for all users.
16:48 < gnarf> gtramontina: oh, windows... there's your problem ;)
16:48 < gnarf> sorry, no clue there
16:48 < gtramontina> gnarf: lol! I know, right?
16:48 < gnarf> i haven't used windows as a dev OS since um... 94?
16:49 < gtramontina> thanks for making our day better... :-)
16:49 < gtramontina> gnarf: me too, but we have to stick with windows for our current client.
16:49 < gnarf> I would imagine you could put the .cmd file in some global PATH 
16:49 < gnarf> manually
16:50 < gtramontina> yeah.. that's what we thought. Were just wondering if there was another way...
16:51 < gtramontina> Thanks anyway.
17:05 < chewed-on> Having some problem with my code, it seems like my for loop is not executing all iterations
17:07 < chewed-on> I have a number of Notifications, I loop through each notifcation (each notification can have multiple tokens to send the notifciation to), for each notification, I call pushNotification(notification.message, arrTokens);, In my pushNotification() function, I loop through all the tokens in the array but as it is currently, it is only using the first token of my array everytime.
17:08 < chapel> chewed-on: got a gist?
17:08 < chewed-on> The for loop is meant to execute 3 times at least before it sends  
17:08 < hikari_> are u using events ? 
17:08 < chewed-on> hikari_: uh, not when I am pushing notifications,
17:09 < hikari_> need to see some code if possible
17:09 < deoxxa> chewed-on: gist or gtfo
17:10 < hikari_> lol
17:10 < chewed-on> what's gist ?
17:10 < chewed-on> oh wait
17:10 < chapel> gist.github.com
17:10 < deoxxa> I WROTE YOU THIS POEM
17:10 < deoxxa> JUST TO LET YOU KNOW
17:10 < deoxxa> PASTE SOME DAMN CODE
17:10 < deoxxa> GIST OR GTFO
17:10 < chapel> lol
17:11 < deoxxa> i'm a regular poet
17:13 < chewed-on> deoxxa, hikari_ http://pastie.org/5402032
17:13 < deoxxa> what's a class
17:14 < chewed-on> not very readable, pastie
17:14 < chewed-on> http://pastebin.com/Fp9fwaFX
17:14 < chewed-on> Try that one
17:15 < deoxxa> (for future reference, gist.github.com is good because it's well formatted and forkable)
17:15 < yawnt> listen to the old man
17:15 < yawnt> ^o^
17:15 < chewed-on> So from line 107 (pastebin link), it's where I start parsing my notification from the JSON data returned by my Symfony web server)
17:15 < deoxxa> now, there's near on 300 lines of code there
17:15 < deoxxa> ok
17:16 < chewed-on> at line 193, it's where I start calling my pushNotification() function to push a message to all the tokens attached to each notification
17:17 < chewed-on> I am expecting console.log('strToken = ' + strToken + '\n') to execute at least 3 times in that for loop on line 220
17:18 < chewed-on> It seems like some asynchronous feature is kicking in, my for loop on line 220 didn't get to execute finish before line 193 where I call pushNotification() function kicks in
17:19 < deoxxa> the way you say "kicking in" suggests you don't actually understand what's happening
17:19 < deoxxa> you're not going to be able to fix this until you do
17:19 < deoxxa> not properly anyway
17:19 < deoxxa> you might get it working, but it'll likely still be broken in a bunch of ways
17:20 < deoxxa> so you're saying you get "arrTokens.length = 3"?
17:20 < chewed-on> deoxxa: yes
17:21 < hikari_> can we get an example json response
17:21 < chewed-on> give me a sec
17:21 < deoxxa> chewed-on: do you have any output after the first "strToken = ..."?
17:21 < chewed-on> let me format the json and I'll make a paste with gist this time
17:27 < chewed-on> hikari_: sorry for the delay, 5 blocks of json
17:32 < othiym23> does anyone have a good example of an Express / Strata / Restify middleware that does postprocessing on a completed page?
17:32 < othiym23> I'm trying to figure out how to insert some tags after everything else is finished *without* breaking streaming, and it hard
17:33 < chewed-on> hikari_, deoxxa https://gist.github.com/f6766b83c9612eed62e3
17:35 < chewed-on> deoxxa: here is the console output: https://gist.github.com/a080d9863057e13e5413
17:37 < chewed-on> hikari_, deoxxa if you guys want to see the source code again using gist this time: https://gist.github.com/0f3c17f6fcc079090256
17:37 < danmh>  19zigBEE82
17:38 < danmh> wow, i fail
17:39 < brianc> tnorris: like you asked, I updated to include all repository activity, not just the commits: http://githubhub.com/
17:41 < gildean> danmh: what's that password for?
17:41 < danmh> :P
17:41 < danmh> gildean: nothing anymore
17:42 < Sly> rofl @ "anymore"
17:42 < Sly> Pasted and immediately changed.
17:43 < danmh> new chat window opened in the middle of typing to nickserv, oops
17:44 < danmh> probably should script that
17:47 < motin> hi
17:47 < tnorris> brianc: looking sick. it's been helping me clean up my started repos.
17:48 < brianc> tnorris: awesome!
17:49 < brianc> I could put an 'unstar' button on there....but it'd need higher access privs to your github profile so maybe not.  i like "public read-only access" only
17:55 < defunctzombie> isaacs: https://github.com/isaacs/sax-js/pull/87
17:58 < evelyette> hi, I'm trying to use RedisStore with socket.io in my app ... if I use multiple socket.io threads then, it just works: I can send the messages between two users connected to a different socket.io (different port), but using the same redis
17:58 < harrisonm> bahaha the topic
17:59 < evelyette> the only thing that I don't know is how the RedisStore actually works: is there any documentation anywhere? If I enter "keys *" in redis, there isn't actually any keys, but the communication works nevertheless, how is that possible ?
17:59 -!- mode/#node.js [+o piscisaureus_] by ChanServ
18:03 < exit2> any recommendations on something to build in Node to help strength my skillz?
18:04 < chapel> evelyette: it is because it uses redis pub/sub
18:04 < skattyadz> Something you can get excited about personally :P
18:05 < evelyette> chapel, so? Should there be keys/values nevertheless ?
18:06 < exit2> skattyadz: I'm having a hard time finding inspiration haha
18:06 < aettinger> anyone using ovh.co.uk dedicated server able to buy one from outside the UK?
18:06 <@mbalho> exit2: look at the node knockout entries from last week
18:06 < deoxxa> aettinger: yeah
18:06 < exit2> mbalho: ok cool idea thanks
18:07 < aettinger> deoxxa: when i go to order, it only gives me UK as an option for Country
18:07 < aettinger> where do you order it?
18:07 < deoxxa> correct
18:07 < aettinger> I'm in usa
18:07 < deoxxa> i use http://www.resellermarkets.com/
18:08 < aettinger> deoxxa: that is more expensive than ovh
18:08 < nicholas_> deoxxa: go to sleep, too early for you
18:09 < deoxxa> nicholas_: it's like 6pm
18:09 < deoxxa> :|
18:09 < nicholas_> haha, where are you?
18:09 < deoxxa> london
18:09 < deoxxa> heh
18:09 < nicholasf> ah cool
18:09 < deoxxa> aettinger: seems they've changed their plans since i last saw
18:10 < deoxxa> aettinger: i've got an i7-2T through them and it's about $100/month, which is only a touch above what ovh themselves charge
18:11 < aettinger> for their basic it's about twice the cost
18:11 < deoxxa> yeah i can't actually find mine on there anymore :/
18:12 < deoxxa> anyway, take a look through WHT's dedicated server section
18:12 < deoxxa> you'll find a bunch of resellers
18:12 < chapel> evelyette: no, pub/sub doesn't use keys
18:13 < evelyette> chapel, is there any way to view he messages in redis-cli ?
18:13 < chapel> possibly monitor, not sure about pub sub
18:13 < aettinger> WHT?
18:13 < deoxxa> aettinger: http://www.webhostingtalk.com/
18:13 < evelyette> chapel, yes you can use it with monitor, thanks
18:14 < deoxxa> aettinger: http://www.webhostingtalk.com/forumdisplay.php?f=36 specifically
18:16 < aettinger> deoxxa: thanks
18:17 < aettinger> bummed i can't get ovh, that was the best deal i've seen
18:17 < aettinger> 1tb of data
18:17 < aettinger> for $20/mo
18:17 < deoxxa> aettinger: there's tons of ovh resellers
18:17 < deoxxa> also, have you tried ordering through ovh.ie?
18:18 < deoxxa> aettinger: i remember, at one point, it was possible to order from the US there
18:19 < aettinger> deoxxa: thanks
18:19 < aettinger> deoxxa: have you used torrent on their servers?
18:19 < deoxxa> yep
18:20 < aettinger> i read a post on wht they will shut you down immediately.
18:20 < deoxxa> lol
18:20 < aettinger> just curious howh true that is
18:20 < deoxxa> maybe if you're hosting Some.New.TV.Show.S01E01[PUBLIC-TRACKER].avi
18:21 < deoxxa> but no, for general usage (especially on private trackers), there's really no problems
18:21 < deoxxa> at least, i've never had a problem
18:22 < aettinger> deoxxa: ok
18:22 < aettinger> i only use private trackers
18:23 < deoxxa> yeah i've pushed tens of tb through private trackers and nothing has ever happened
18:23 < strk> how am I suppoed to do on-the-fly compression ? This doesn't seem to be working: var ostream = zlib.createDeflate().pipe(res); myThing.toStream(ostream);
18:24 < strk> with `res` being a writeable stream and `myThing.toStream` accepting astream
18:24 < strk> the result of the above is I just get uncompressed data to `res`
18:28 < aettinger> deoxxa: they want fax of government ID -- so I guess i need to use my real name
18:29 < deoxxa> sounds about right
18:29 < deoxxa> strk: zlib.createDeflate().pipe(res) returns res
18:29 < deoxxa> strk: Stream.pipe() returns the target stream, so you can do a.pipe(b).pipe(c)
18:30 < deoxxa> aettinger: yeah, i just used a reseller because it was easier, heh
18:30 < jkominar> question for the room:  I have an express app and am trying to set a cookie value but it keeps writing the value to the browser in the url-escaped format, despite me providing it an unescaped value wrapped with unscape() as the cookie's value.  Any ideas as to how to just write the cookie value I tell it?
18:31 < strk> deoxxa: the library I'm using doesn't support .pipe, but has a toStream(x) method. How do I setup `x` to further pipe into `res` then ?
18:31 < jkominar> I'd deal with the escaping myself but there are other pre-existing systems that are expecting specific values that will break if I don't preserve the format.
18:31 < strk> ah, found 
18:31 < jkominar> e.g. a "|" is getting written as %7C instead of | in the cookie.
18:32 < strk> var ostream = zlib.createDeflate(); ostream.pipe(res); myThing.toStream(ostream); // works. thanks deoxxa
18:32 < deoxxa> bingo
18:32 < TheAceOfHearts> does anyone wanna try breaking my website? I'm looking for anything that might make it crash D:
18:33 < deoxxa> TheAceOfHearts: paste url \o/
18:33 < TheAceOfHearts> http://icom5016.ece.uprm.edu:3000/
18:33 < TheAceOfHearts> only prof in database is Cesar
18:33 < deoxxa> 404 :<
18:33 < deoxxa> ah
18:33 < drudge> http://tyrannically-asynchrono.us
18:33 < TheAceOfHearts> yeah, I wanna make it give you a notification instead of having to send you to a 404, but idk how
18:34 <@mbalho> drudge: haha
18:36 < tnorris> TheAceOfHearts: just give me a minute. ;-)
18:36 < jkominar> If there's a better Express-type channel to ask in, I'd love to hear that too.
18:37 < TheAceOfHearts> sure lol
18:37 < TheAceOfHearts> tnorris: Nothing too harsh, please @.@ ...
18:37 < TheAceOfHearts> it's just a college project xD
18:37 < tnorris> heh, ok.
18:38 < TheAceOfHearts> if you wanna try submitting evaluations I can generate em, I just need an email to send it to
18:39 < chapel> jkominar: not sure about this, but cookies probably need to be escaped for security reasons
18:42 < jkominar> Yeah .. looking at express' cookie/index.js file, it seems it's forcefully always encoded :(  That bites.
18:44 < chapel> jkominar: well you could replace that with your own cookie function that doesn't encode
18:45 < chapel> jkominar: it isn't required, but seems to be the defacto (re: encoding)
18:46 < jkominar> Yeah .. I know.  I would actually prefer it be encoded, but as I mentioned, I'm integrating with an existing system that writes values out unencrypted and I have to conform to the way the other system does it.
18:46 < TheAceOfHearts> skipfish is spamming me lol
18:47 < jkominar> The other end will break if I feed it values with encodings in it because it's not expecting it, and it's too monolithic to get that end changed to accept encoded values.
18:48 < othiym23> does anyone know of a good general-purpose debugging HTTP proxy like Fiddler that isn't dependent on Windows?
18:53 < ExxKA> Hi guys, if a method in an async.series modifies a variable outside of its local scope, will the changes be available outside async.series?
18:53 < strk> does anyone have an example of a .zip file creator using the core zlib ?
18:54 < strk> my naive attempt ( write to createDeflater() ) seemed to return a corrupted zip file
18:54 < niggler> strk zlib is for gzip 
18:55 < strk> ie: End-of-central-directory signature not found
18:55 < strk> niggler: only ? why does it have Gzip/Deflate/DeflateRaw then ?
18:58 < phrearch> hm, is there a convenient way to convert 50997c7715d9551412000002 to a unique int?
18:58 < niggler> hmm strk you have a code sample?
18:58 < phrearch> mongodb uses _id's, where i need a parsable int for my enduser app
18:59 < strk> niggler: var ostream = zlib.createDeflate(); ostream.pipe(res); csv().from(data).toStream(ostream);
18:59 < strk> with `res` being an express response
19:00 < othiym23> phrearch: MongoDB IDs are hex, so you could just parse the number using parseInt and a base of 16 (parseInt(variable, 16)) and then print it out normally (i.e. in base 10)
19:00 < niggler> hmm you should do it the other way around
19:01 < phrearch> othiym23: awesome, thanks for the tip :D
19:01 <@mbalho> strk: dont you want zlib.createGzip()
19:01 < niggler> mbalho: strk is trying to read zip files
19:01 < strk> mbalho, niggler I'm trying to _write_ zip files
19:02 < deoxxa> phrearch: that's not going to work
19:02 < deoxxa> phrearch: that number is way too big for javascript
19:02 < phrearch> yea, its still crashing 
19:02 < strk> the reader part I'm only using to test (and it complains it can't read it, confirmed by other non-node unzippers)
19:02 < phrearch> maybe i need autoincrement fields in my db
19:02 < deoxxa> strk: zlib != gzip !== zip
19:03 < phrearch> just for this
19:03 < niggler> deoxxa: zlib provides DEFLATE
19:03 < strk> right
19:03 < deoxxa> niggler: correct, but it's still not going to do your headers etc
19:03 < paradoxquine> hey, is there a way to prompt user for global install of package.js dependencies when running npm install?
19:04 < strk> ok, so core by itself is not going to help much, right ?
19:04 < deoxxa> paradoxquine: no, and why?
19:04 < deoxxa> strk: not if you specifically want .zip files
19:04 < niggler> so if that's the case, then theoretically saving and decompressing should give the original result
19:05 < phrearch> hm, removing parseInt from jinfinote's lib also did the trick
19:05 < paradoxquine> deoxxa. darn. trying to make it easy for coworkers to install all node dependencies, and its easier if they do grunt, etc globally
19:05 < deoxxa> paradoxquine: better option i think would be to provide npm scripts for running those things
19:05 < deoxxa> paradoxquine: see http://package.json.jit.su/ and the "scripts" section
19:05 < tnorris> TheAceOfHearts: here's a pastbin of a 505: http://pastebin.com/DTRuZYt8
19:06 < paradoxquine> deoxxa: thank you!
19:06 < tnorris>  /505/500
19:06 < TheAceOfHearts> cool @.@
19:06 < TheAceOfHearts> what's a 505 xD?
19:06 < tnorris> server error. (e.g. couldn't process the data correctly)
19:06 < TheAceOfHearts> ah
19:06 < TheAceOfHearts> I see
19:07 < deoxxa> paradoxquine: something to take note of is that npm will install any globally-accessible executables in ./node_modules/.bin -and- add that directory to $PATH when stuff is run from a "script" entry. so you don't need to put `./node_modules/grunt/bin/grunt' or whatever; you can just put `grunt'.
19:07 < othiym23> phrearch: another thing you could try is using one of the bigint libraries out there for Node
19:08 < phrearch> othiym23: thanks for the tip. may come in handy with some other stuff
19:08 < phrearch> can use the raw _id now gladly
19:08 < TheAceOfHearts> so, that's the only one so far?
19:08 < deoxxa> paradoxquine: on the other hand i have no idea how that behaves on windows, so if you're planning on doing that on windows... well... good luck?
19:09 < paradoxquine> deoxxa: definitly not planning on doing anything on windows…ever :P
19:10 < deoxxa> paradoxquine: oh yeah, one last thing - you can add any "script" entry you like, and it'll be accessible via `npm run-script name-of-entry'. some entries get special treatment like "test" and "prePublish" etc, but anything else is accessible via that npm command.
19:10 < tnorris> TheAceOfHearts: just visit this, and you'll see what I mean: http://icom5016.ece.uprm.edu:3000/s&[0]['a']%=crud.com
19:10 < paradoxquine> ok, nice, ty deoxxa 
19:10 < TheAceOfHearts> thanks
19:11 < tnorris> TheAceOfHearts: it seems to be from the parsing of the character "%" which causes it to fail every time.
19:12 < TheAceOfHearts> I think that might be an Express flaw
19:12 < deoxxa> darn it tnorris, i was just about to mention that
19:12 < tnorris> deoxxa: heh.
19:12 < context> % isnt allowed  thats why
19:13 < context> that entire url is illegal as all hell
19:13 < TheAceOfHearts> lol
19:13 < tnorris> context: yeah, but I don't want the simple insertion of a "%" to cause a 500 error. can't express parse those out?
19:13 < TheAceOfHearts> should I do something to handle thing type of thing?
19:13 < deoxxa> tnorris: is that a 500? should be a 406 or something
19:14 < deoxxa> 400
19:14 < deoxxa> yeah that's a 400, that's valid
19:14 < tnorris> deoxxa: yeah, your correct. but still, I don't want something like this showing up on my page: http://icom5016.ece.uprm.edu:3000/%
19:14 < deoxxa> yeah definitely
19:15 < deoxxa> if you set your error handler (or NODE_ENV) though, that won't happen
19:15 < context> so.. you are saying you want to allow the user to be stupid
19:15 < TheAceOfHearts> xD
19:15 < deoxxa> context: no, he's saying he doesn't want a stack trace
19:15 < RLa> tnorris, deoxxa any idea why browser is not encoding % entered from the address bar?
19:15 < tnorris> context: RLa doesn't matter. I can throw in any character from a wget or curl request. the server should handle it.
19:16 < deoxxa> RLa: probably because people are silly and use "%" in filenames
19:16 < motin> i'm having immense problems with setting up a private repo. "adduser" works fine, and it ends with "Authorized user foo", but any subsequent login attempts with that user fails (login, publish, etc). it always responds these login attmpts with "Name or password is incorrect". I've tried creating the most trivial users with simple passwords to no avail...
19:16 < context> so... "i dont care what the user gives me, parse it successfully"
19:16 < RLa> i think i have seen testing tools that send random garbage to servers and see what they do
19:17 < deoxxa> motin: wat? you mean setting up hosting for git repositories?
19:17 < tnorris> context: no. should be: 'for any unexpected request, redirect to given page'. not: 'dump my stack trace to the page'
19:17 < TheAceOfHearts> deoxxa: how to I set up an error handler? can you point me in the right direction?
19:17 < tnorris> RLa: yeah, skipfish is one really easy to use. provided by google for free.
19:17 < deoxxa> motin: check out https://github.com/deoxxa/instagit - i made it for exactly this reason (to make this easy)
19:18 < motin> deoxxa: no i'm setting up a registry for npm
19:18 < deoxxa> oh
19:18 < context> tnorris: so set the global exception handler?
19:18 < deoxxa> derp
19:18 < deoxxa> silly me
19:18 < deoxxa> i've done that too though, and i got that same problem! you need to install the couchapp
19:18 < context> or is it still showing stack trace then
19:18 < tnorris> context: nope. every request should fit an expected schema. if that schema is violated then return given page.
19:19 < tnorris> e.g. know every given field. and know what regex is allowed on every field.
19:19 < tnorris> know what fields are co-dependent, and must be submitted together. etc.
19:19 < deoxxa> motin: go through the instructions on https://github.com/isaacs/npmjs.org - make sure you've actually done all of them (i skipped a couple when i first set it up, caused me no end of confusion)
19:20 < deoxxa> tnorris: problem is `GET /% HTTP/1.1' is invalid http
19:20 < deoxxa> tnorris: just as invalid as `LOL WHAT/999999'
19:20 < tnorris> deoxxa: yeah, and a hacker will expoit that to p0wn you.
19:20 < TheAceOfHearts> tnorris: do you know how I should handle that?
19:20 < deoxxa> yeah but it's not a matter of recognising a bad url - in that case there is no url
19:21 < deoxxa> you need to set the error handler properly
19:21 < deoxxa> TheAceOfHearts: add a middleware with 4 arguments
19:21 < deoxxa> TheAceOfHearts: it's really that easy
19:21 < TheAceOfHearts> kk, thanks
19:21 < motin> deoxxa: yup i double-checked and triple-checked the instructions
19:21 < tnorris> deoxxa: every field of a request header should be parsed. when a simple wget request can return me a stack trace of your server, something is wrong.
19:21 < deoxxa> TheAceOfHearts: app.use(function(err, req, res, next) { res.send("lol there was an error: " + err.message); })
19:22 < deoxxa> tnorris: yes - that's the default error handler in express
19:22 < TheAceOfHearts> yeah, just found it, thanks
19:22 < tnorris> TheAceOfHearts: not sure. not too familiar with express. but the failure is happening here "express/node_modules/connect/node_modules/send/lib/send.js:142:16"
19:22 < deoxxa> tnorris: you'll also get that for 404s if you don't have a catch-all middleware like static
19:22 < tnorris> so I'm not sure if it's a bug in express, or if there is pre-validation you can pass which will prevent the error.
19:23 < deoxxa> lol dude it's not a bug
19:23 < deoxxa> that's valid behaviour
19:23 < deoxxa> it's an error, so it hits the error handler
19:23 < deoxxa> the default error handler dumps a stack trace to the screen
19:23 < tnorris> deoxxa: sorry, anytime a stack trace is passed to the client in a production environment, I say there is a bug somewhere.
19:24 < deoxxa> that's not a production environment
19:24 < deoxxa> it's still running in dev mode
19:24 < deoxxa> by default, it runs in dev mode
19:24 < motin> deoxxa: i find out what was wrong
19:24 < tnorris> but as we've seen TheAceOfHearts don't know how to handle that for prod, so I'm making sure he does.
19:24 < deoxxa> set your NODE_ENV or install a more appropriate error handler - problem solved
19:24 < deoxxa> this is all documented, btw
19:24 < motin> deoxxa: a nginx proxy screwed things up...
19:24 < TheAceOfHearts> thanks @.@
19:24 < deoxxa> motin: a-ha! that'll do it
19:25 < gildean> or just add a route at the end that catches all not handled reqs
19:25 < TheAceOfHearts> yeah, that's what I'm doing
19:27 < context> tnorris: i was gonna say the node_env is prolly whats doing it. generally you will get errors openly in development and not production
19:28 < deoxxa> gildean: that's the same as adding an error handler
19:28 < tnorris> TheAceOfHearts: did you bring down your server?
19:28 < TheAceOfHearts> yeah
19:29 < deoxxa> gildean: except that you won't get the errors anymore...
19:29 < TheAceOfHearts> I just brought it back up
19:29 < TheAceOfHearts> I added what you guys told me
19:29 < tnorris> TheAceOfHearts: the following produces a 500: curl -H "POST /contact HTTP/1.1" -d "name=S&[0]['e']=s@e.com&comments=s" http://icom5016.ece.uprm.edu:3000/
19:30 < gildean> deoxxa: true, but why are you sending erroneous requs
19:30 < gildean> stop it
19:30 < tnorris> TheAceOfHearts: add a "-v" to the params to see the entire header response.
19:30 < deoxxa> gildean: wat, an error can come from anywhere in your application. an error handler lets you take that error and do something useful with it (log it, send an email, or in the case of the default handler, dump it to the response)
19:31 < TheAceOfHearts> hmm
19:31 < gildean> deoxxa: yes of course, the catch-all route would just handle reqs that won't get handled otherwise
19:31 < gildean> like if someone is trying to hack around
19:31 < motin> i have set up a private npm registry and having an issue with logins failing when going through an nginx-proxy. anyone know how to configure nginx so that it works with npm registry logic?
19:31 < TheAceOfHearts> so, should I just redirect to a 404?
19:32 < deoxxa> gildean: but the specific situation we're seeing here is not a 404 - it's a 400
19:32 < deoxxa> gildean: i.e. "never actually hit any of the normal middleware"
19:33 < tnorris> deoxxa, context: correct me if I'm wrong, but returning a 500 anytime is always a bug.
19:33 < deoxxa> tnorris: it's not a 500
19:33 < tnorris> deoxxa: mother effing, use the curl request I posted above. it produces a 500.
19:33 < tnorris> here's the stack trace: http://pastebin.com/DTRuZYt8
19:34 < TheAceOfHearts> there, fixed :p
19:34 < deoxxa> oh, that's a different request, tnorris 
19:34 < deoxxa> that one looks more like a bug
19:35 < TheAceOfHearts> lemme try it
19:35 < tnorris> TheAceOfHearts: nice. that was quick. what'd you change?
19:35 < TheAceOfHearts> just set it to send a 400 at the end of my middleware if it wasn't caught by anything else
19:35 < TheAceOfHearts> does it fix the other one as well?
19:36 < gildean> that's just what i suggested
19:36 < TheAceOfHearts> yes, that's why I said thank you @.@
19:36 < TheAceOfHearts> deoxxa also suggested it
19:37 < tnorris> TheAceOfHearts: catching an error is a good fix for now, but still a bug in express/connect
19:39 < motin> deoxxa: i was wrong. nginx had nothing to do with it. whenever "password:" comes up during npm login, the login works fine, but when it is cached (i guess _auth in .npmrc), the login fails… meaning that publish never works
19:42 < TheAceOfHearts> so, for handling errors, is this still valid: http://stackoverflow.com/questions/7310521/node-js-best-practice-exception-handling ?
19:43 < MI6> joyent/node: piscisaureus created branch nosplit - http://git.io/Yf-lPg
19:44 < MI6> joyent/node: Bert Belder nosplit * 68f0a36 : http: protect against response splitting attacks - http://git.io/jHyrmQ
19:46 < tnorris> TheAceOfHearts: yeah, that looks good. Also, you will usually want to have your process auto-restart on failure. I use upstart.
19:46 < tnorris> here's a good post: http://blog.nodejitsu.com/keep-a-nodejs-server-up-with-forever
19:47 < TheAceOfHearts> thanks
19:47 < TheAceOfHearts> I'm pretty new to the whole scene @.@
19:52 < tnorris> TheAceOfHearts: I'd learn how to use skipfish (http://code.google.com/p/skipfish/) and apache benchmark (http://httpd.apache.org/docs/2.2/programs/ab.html)
19:52 < tnorris> have any questions, feel free to ask.
19:52 < TheAceOfHearts> thanks :D
19:52 < tnorris> or, in place of apache benchmark, you can use siege (http://www.joedog.org/siege-home/)
19:53 < niggler> does ab support javascript?
19:54 < tnorris> niggler: how do you mean?
19:54 < niggler> i mean ab is just for http load
19:54 < tnorris> niggler: yeah, think so. from man page: "Apache HTTP server benchmarking tool"
19:54 < niggler> so I want to test something which involves downloading stuff via ajax
19:55 < niggler> and afaict ab can't do that
19:55 <@mbalho> ajax is http
19:55 <@mbalho> and ab uses http also
19:56 <@mbalho> hence: compatibility
19:56 < tnorris> niggler: yeah, should be possible. have an address?
19:56 < deoxxa> http://www.acme.com/software/http_load/ << better than ab
19:56 < mikeputnam> i don't believe that ab will parse your js and execute subsequent XMLHttpRequests as a result
19:57 < niggler> right mikeputnam
19:57 < deoxxa> mikeputnam: ...of course it won't
19:57 < TheAceOfHearts> what can I use to test what happens if people POST trash to my server?
19:57 < TheAceOfHearts> I THINK I handled every case
19:57 < niggler> deoxxa: you could envision something that did do it, leveraging phantomjs
19:57 < TheAceOfHearts> but I'm not completely certain
19:57 < tnorris> TheAceOfHearts: the same as what I did earlier. probably just error. but you catch those now.
19:58 < mikeputnam> deoxxa: niggler was asking
19:58 < TheAceOfHearts> no but like, server crashing errors from expecting X or Y thing and not receiving it
19:59 < tnorris> TheAceOfHearts: run skipfish. very likely it will detect any server crashing problems
19:59 < TheAceOfHearts> kk
20:00 < tnorris> niggler: might have gotten behind, but since ajax is just an http request w/o reloading the page, those requests can still be performed in load testing.
20:00 < gildean> or you could write a simple nodejs app to test out your own app
20:01 < gildean> using something like request it's easy to handle longer chains of ajax-requs and responses
20:07 < tnorris> TheAceOfHearts: sorry, you might have received a few crap contact emails.
20:07 < TheAceOfHearts> it's fine lol
20:21 < motin> I have run into problems with authentication against a new private npm repository. if anyone has set this up themselves successfully, please check https://github.com/isaacs/npm/issues/2651 and comment. big thanks!
20:27 < Ax_SeS> Does anyone know how to setup a current running MongoDB Node App to appfrog or any other free node provider?
20:27 < gildean> Ax_SeS: just point the db to the full url instead of just a database name
20:28 < gildean> like mongodb://url.tld/database
20:28 < Ax_SeS> I want tho host the db on their site too!
20:28 < gildean> Ax_SeS: of course
20:28 < Ax_SeS> I dont know where the db is stored.
20:28 < gildean> but you need to point to the full url so the driver knows where to connect
20:29 < gildean> ah, you mean you need to migrate the data?
20:29 < gildean> iirc there are tools for that
20:31 < Ax_SeS> I dont mind not having the data migrated at this point.
20:41 < TheAceOfHearts> tnorris: do you want me to generate you some evaluations so you can test the other parts of the page too :P?
20:41 < tnorris> TheAceOfHearts: if you do, then I'll give them a test.
20:42 < TheAceOfHearts> do you have any email I can send em to? I just have a system when I input the email and it sends the eval link to that email
20:42 < TheAceOfHearts> any throwaway works
20:44 < tnorris> TheAceOfHearts: trev(dot)norris(at)gmail(dot)com
20:44 < TheAceOfHearts> kk, how many should I send @.@? Each email contains one link and it lets you submit one evaluation.
20:44 < tnorris> TheAceOfHearts: one should do for now.
20:44 < TheAceOfHearts> kk
20:45 < TheAceOfHearts> sent
20:47 < Ax_SeS> I got it running :)
20:56 < Ax_SeS> Does anyone know how I can view /console.log/ with AppFog ?
21:00 < Ax_SeS> Does anyone know how to view console.log()'s on AppFog?
21:05 < TheAceOfHearts> from what I can see in Google
21:05 < TheAceOfHearts> try looking at: af logs <appname>
21:22 <@Nexxy> \o/
21:22 < gkatsev> ~~\o/~~
21:24 <@Nexxy> gkatsev, are those... streamers?
21:24 < gkatsev> he's drowning.
21:27 <@Nexxy> gkatsev, ;<
21:31 < DukeofURL> can someone tell me how to send, like, a post request from node using express to a target ip?
21:33 <@Nexxy> DukeofURL, check out mikeal's request module
21:35 < DukeofURL> Nexxy: thanks! this looks cool
21:36 < Raynos> What's the easiest way to import a core dump as readable data into a node process so I can manipulate it (it's readable in mdb)
21:36 < Raynos> Ideally I just want the data returned by ::findjsobjects
21:38 < Raynos> Actually
21:38 < Raynos> Has someone written node bindings to mdb. That would be even better
21:38 < emocakes> mongo?
21:38 < emocakes> yah
21:39 < onr> ms access?
21:40 < Raynos> mdb
21:40 < Raynos> as in smartos's modular debugger
21:41 < Raynos> not ms access ._.
21:44 < emocakes> lol
21:49 < Warpten> Hi. Trying to build node-bignum on win7 atm, stuck with a node-gyp error ... opening bindings.gyp i see a reference to (nodedir) and then dependencies to openssl
21:49 < Warpten> is this supposed to be the path with the source / binaries ?
21:57 < Carlo5m> I have a question about node is anyone available to help?
21:57 < Carlo5m> node.js*
21:57 < gkatsev> node is valid.
21:58 < gkatsev> also, unfortunately, a giant zombie horde came through earlier and ate everyone.
21:58 < tnorris> TooTallNate: the biggest issue I'm having helping clear out old bugs it seeing if their even applicable anymore. but, really learning my node.js devel history.
21:58 < EyePulp> zombie.js?
21:58 <@Nexxy> Carlo5m, IRC is asynchronous -- just ask your question and if someone is available that knows how to help, they will answer :)
21:58 < Warpten> zombie.js :3
21:59 < Warpten> Anyone, anyone ever got bignum to build on windoes ?
21:59 < EyePulp> askQuestion(question,function(answer){ console.log(answer); });
21:59 < Warpten> anyway* dang
22:00 < Carlo5m> I am new at node.js. My first goal is find out how to use UPD and TCP in node.js. I made a small test to measure transmission delay but I am having a hard time porting my code from udp to TCP. 
22:01 < Carlo5m> I did a client/server example: I posted it on stackoverflow to see my code. 
22:01 < Carlo5m> http://stackoverflow.com/questions/13428702/node-js-port-from-udp-to-tcp
22:06 < mscdex> Carlo5m: there's many examples here: http://nodejs.org/api/net.html
22:08 < pixel4> Deployment readiness.   I'm looking to deploy a new Node.js application with an expected 1,500 req/s.  I'll be using nodes cluster module and will be spread over a few AWS instances.  I plan on using Forever to start/stop/monitor. httperf says I'm good for 18,000 req/s.   I'm looking for gotcha people have had to overcome in the past when deploying mayjor Node.js apps; lessons learned?.  I'm tentatively optimistic.
22:10 < pixel4> I should also say that the app will probably be fronted by Apache
22:10 < RLa> i think the built-in cluster module handles only processes on the same machine
22:11 < Carlo5m> Anyone available for hire. The node.js task should not take more than 30 min. PM me plz
22:12 < aho> "should not take more than 30 min" is so-called anchoring
22:13 < aho> if it should not take more than 30 minutes, do it yourself :P
22:13 < pixel4> RLa:  yup .. i got that.. it'll be a cluster of clusters  .. thanks
22:13 < Carlo5m> Ehh..just saying it's simple for an experienced persone. I have psedo code just not fluent in the laguage
22:14 < aho> http://en.wikipedia.org/wiki/Anchoring
22:15 < s5fs> Carlo5m: i looked over your post, porting this to tcp should be a breeze. why not post the tcp code you have so far? i can't imagine it's too far from working.
22:15 < Carlo5m> To be specific, I want to send a msg which is buffered to a server thats it. 
22:16 < evelyette> hi, I'm looking for a list of events that can be used for Redis ... like. pub.on('subscribe') ... what are other besides subscribe ?
22:16 < RLa> pixel4, what will be your major bottleneck
22:19 < shanebo> hey guys, I'm trying to request a jpg from s3 and write it locally. I've got things almost working but the files won't open. Which I assume is an encoding problem. Any ideas?
22:19 < superjoe> pixel4, here's a project which uses cluster and replaces forever: https://github.com/indabamusic/naught
22:20 < pixel4> RLa, it'll be serving cached aggregated JSON data .. that cache is refreshed by a "background" setTimeout .. http clients are just requesting cached data which is stored on FS and mem for popular files.   
22:22 < pixel4> RLa, all files are kept in JS mem for a short period of time.. and similar requests will join an existing FS read task
22:22 < pixel4> no common database
22:22 < pixel4> thanks, superjoe
22:31 < MI6> joyent/node: Bert Belder wip * 46141d2 : windows: fix normalization of UNC paths - http://git.io/dVrqdQ
22:32 < Carlo5m> in node.js what happens if you do not close a connection? Time-out eventually?
22:33 < motin> motin
22:54 < cly> hi guys, i have a question about cluster!
22:55 < cly> should we be using the learnboost/cluster or the node core cluster? and if so are there helpful tutorials? thanks
22:56 < substack> cly: depends on what you need to do
22:56 < substack> I like spawn()ing the processes myself much better
22:56 < substack> although it's less obvious how to share the fds
22:57 < substack> if you even need that
22:57 < cly> the learnboost version hasn't had much activity recently and so im hesitant to use it
22:57 < cly> we need something where we can monitor the health of workers.. in particular crashes, timeouts (infinite loops) etc and restart them
22:58 < cly> and learnboost/cluster only supports 0.4x?
23:03 < cly> well anyways thanks @substack
23:04 < lucas__> cly: i don't think learnboost cluster works with recent versions of node
23:04 < lucas__> (didn't for me)
23:04 < cly> yep it's not working for me
23:05 < cly> did you just roll your own cluster calls or is there a library that does some of that for u?
23:05 < substack> cluster in core is so magical >_<
23:07 < carlos5m> I am attempting to send 10 pkts form the client but I only receive 3 pkts to the server. Could it be that the data is being squished to 3 pkts to save bandwidth?
23:07 < carlos5m> I am using the client.write
23:07 < substack> carlos5m: something like that
23:07 < carlos5m> Can I force it not to do it?
23:08 < substack> carlos5m: no, it's something that the operating system does
23:08 < substack> carlos5m: but what are you trying to do?
23:08 < substack> you can use a parser to do framing for you
23:08 < substack> like JSONStream or split
23:09 < carlos5m> Measure the time to send 1000 pkts with the size of 500 bytes
23:09 < carlos5m> it takes*
23:09 < substack> carlos5m: you could just keep sending packets on the server side and count up to 500 on the client
23:10 < carlos5m> Thanks! let me try that
23:10 < mister_ms> quick survey, what is everybody's preferred db for use with node?
23:10 < substack> mister_ms: memory
23:10 < substack> or I use couch sometimes
23:11 < substack> but really all the database should be doing is saving objects I have in memory so I don't lose them when my process restarts
23:11 < substack> and for when not all the objects fit in memory
23:13 < tnorris> Can anyone give me insight to why issue-872 is a problem?
23:13 < mister_ms> substack: gotcha. Do you use the same typically for both keeping objects that you need as well as saving database-y data (like big lists of stuff) Or do you separate them
23:13 < Warpten> Ugh
23:13 < Warpten> bignum doesnt build with visual studio 2012 :(
23:13 < mister_ms> Im just not sure whats best practice
23:14 < carlos5m> substack: the problem is that is I keep count on the server the packet size would range. I want only 500 bytes
23:14 < Warpten> http://codepad.org/CkXue8MR :(
23:15 < mscdex> Warpten: what node version?
23:15 < duko> hi I'm trying to use an http object in a node.js environment to proxy requests
23:16 < Warpten> mscdex: just downloaded 0.8.14
23:16 < duko> sometimes the chunk i'm getting from the other server is incomplete, but response.write(chunk) returns true
23:16 < Warpten> (just, as in an hour ago)
23:17 < gildean> duko: the chunk might only be a part of the req and there might be more of them
23:17 < duko> http://pastebin.ca/2253271
23:18 < duko> http://nodejs.org/api/http.html#http_response_write_chunk_encoding
23:18 < duko> documentation shows that 'true' is returned in the entire data is flushed
23:19 < duko> how would the script identify a completed req?
23:19 < styol> if (foostring.length > 1e6) // How can I reproduce a string with a length that is assumedly greater than 1,000,000?
23:19 < Warpten> mscdex: i can get you a compile log if you wish
23:19 < mscdex> Warpten: you may need to update the version of node-gyp that npm is bundled with for node 0.8.14, manually
23:19 < Warpten> hmmm
23:19 < mscdex> Warpten: msvc 2012 support was added a little after 0.8.14's release
23:20 < gildean> duko: yes, the entire data of that chunk
23:20 < tnorris> styol: do you care characters are in the string?
23:20 < mscdex> at least for addon building
23:20 < Warpten> ok
23:20 < Warpten> ill try, thanks
23:20 < gildean> duko: doesn't mean there aren't more chunks
23:21 < Warpten> mscdex: npm install -g node-gyp, still fails :(
23:21 < Warpten> theyre linker errors actually
23:21 < Warpten> hold on
23:21 < styol> tnorris: that is a good question, but I do not believe so. I think it is part of a POST request handling method that I'm guessing is simulating some sort of normal hard limit? http://pastie.org/private/kacw9c9xmffz0uwwesjgq
23:22 < styol> tnorris: trying to write a unit test to replicate the scenario
23:22 < Warpten> mscdex: http://pastebin.com/w8v2hhuA
23:22 < duko> gildean thanks
23:22 < mscdex> Warpten: ok so it can't find symbols
23:23 < Warpten> yeah
23:23 < mscdex> Warpten: it probably is depending on some library
23:23 < mscdex> dynamically
23:23 < tnorris> styol: might be missing something, but you just want to generate a string with +1 million characters?
23:23 < Warpten> im trying to run it from vc++ itself
23:23 < Warpten> it relies on openssl, but i have it systemwide
23:23 < substack> mister_ms: the same what?
23:24 < styol> tnorris: I believe so. Does line 8 read that way to you also? I'd never seen 1e6 before and I'm not 100% sure that is correct
23:24 < Warpten> mscdex: haha!
23:24 < Warpten> mscdex: 'c:\Users\User\.node-gyp\0.8.14\Debug\node.lib' not found
23:24 < Warpten> err, thats in debug
23:24 < Warpten> still getting the linker on release
23:25 < Warpten> mscdex: warning MSB8012: TargetExt(.dll) does not match the Linker's OutputFile property value (.node). This may cause your project to build incorrectly. To correct this, please make sure that $(OutDir), $(TargetName) and $(TargetExt) property values match the value specified in %(Link.OutputFile).
23:25 < mscdex> Warpten: you can disregard that error
23:25 < Warpten> heh, okay
23:25 < Warpten> looks like it doesnt link against openssl
23:26 < mscdex> Warpten: from the looks of it the author is assuming you're using the openssl bundled with node
23:26 < mscdex> so that means you need to download the node source tarball
23:26 < Warpten> hah
23:26 < mscdex> or get the header files from somewhere
23:26 < Warpten> true
23:27 < mscdex> and you'll probably have to change the gyp to tell it how to link to openssl
23:27 < Warpten> running npm had it download it
23:27 < mscdex> since it doesn't appear they are testing against Windows
23:27 < Warpten> now that i think of it
23:27 < carlos5m> Does anyone know how to Disables the Nagle algorithm in tcp.
23:27 < tnorris> styol: so if this is listening for data events on a http request, then it's just appending all the data until 1 million characters have been collected.
23:27 < carlos5m> I tried socket.setNoDelay doesn't work
23:27 < mscdex> Warpten: npm/node-gyp only downloads node.lib and other files, not openssl headers
23:28 < styol> tnorris: right, except i think that case is to handle when the data reaches over a million to throw an error of sorts.. not sure what 413 is offhand but probably body size too large or something
23:28 < styol> tnorris: "Request entity too large"
23:28 < tnorris> yeah, that makes sense.
23:29 < tnorris> styol: so what did you need help with?
23:29 < duko> gildean: thank you
23:29 < Warpten> mscdex: i gotta run, thanks for your input.
23:30 < duko> that was just the guidance i needed!
23:30 < styol> tnorris: if 1e6 is indeed 1 million characters, i suppose the question is how do i generate a string with 1 million characters?
23:30 < duko> am able to send concatenated chunk data now
23:30 < gildean> duko: np, good to hear i was able to help
23:31 < styol> tnorris: i suppose that is the more specific question that I can probably find elsewhere :) does it seem like 1e6 and that if statement is indeed what I believe it to be?
23:33 < tnorris> styol: just to clarify, you just need to make requests until 1e6 is reached. (e.g. 1000 calls 1000 large) but here's a snippet to create what you want: `var buf = new Buffer(1e6+1); buf.fill(97); buf.toString()`
23:36 < styol> tnorris: wowsers, way more amazing than what I was finding. I'm going to study the what and why since I do not understand the solution you've come to, but I appreciate it very very much.
23:36 < styol> tnorris: it does seem to work indeed
23:37 < tnorris> styol: it's just creating a new Buffer 1e6 + 1 in length. The 97 is the ascii char code for 'a', which it fill the Buffer with.
23:37 < tnorris> then you just convert it to a string.
23:39 < styol> tnorris: interesting. I'm not very familiar with buffers but does the size in `new Buffer(size)` equate to single characters essentially?
23:39 < tnorris> styol: if you're using ascii. if it's in utf8 space, then anywhere from 1 to 4 characters.
23:41 < tnorris> from the node console check the output for the following two statements: `new Buffer('a')` and `new Buffer('\u2713')`
23:41 < tnorris> as you'll see, the values are displayed in hex. so the `fill` statement above is the same as `buf.fill(0x61)`
23:42 < aettinger> deoxxa: ok, i sent in all docs for ovh.ie
23:42 < styol> tnorris: \u2713 is the same as a?
23:43 < aettinger> we'll see what happens next
23:43 < WarheadsSE> Question with express + https + tls + client certs: I am upgrading an older bit of code that treats req.connection like it has the getPeerCertificate() although, it no longer does. Any hints on where to get the tls bits?
23:43 <@Nexxy> mbalho, 
23:43 <@mbalho> Nexxy,
23:44 < tnorris> styol: no `\u0061' is 'a', '\u2713' is a checkmark '✓'
23:44 -!- mode/#node.js [+o piscisaureus_] by ChanServ
23:48 < MI6> joyent/libuv: Ben Noordhuis master * d8a8379 : test: disable fs event test on dragonflybsd  Disable the fs_event_close_i (+4 more commits) - http://git.io/mRVN7Q
23:54 < styol> tnorris: ah. I need to learn more about buffers. The only other time I've touched them was when trying to convert one to a string that was a hex token, but I wouldn't particularly consider it exposure. May I ask, since you seem pretty comfy with them, some other common uses? I think I know that they are generally used/related to binary data but that is about it.
23:54 <@mbalho> buffers are binary data
23:54 <@mbalho> theyre pretty similar to typed arrays in the browser
23:55 < tnorris> styol: don't think you realize this, but all responses to http/net requests come in as buffers by default. in the test you showed me, the `+=` automatically converts it to a string.
23:55 < styol> ah, I did read a little bit about typed arrays but it was a bit beyond me. It is something one might use instead of normal arrays?
23:55 <@mbalho> you can use concat-stream to concat them intelligently
23:55 <@mbalho> #protip
23:56 < tnorris> styol: important note, buffers live outside the v8 memory heap. so if you have a buffer memory leak it could crash you system (done it before)
23:56 < styol> tnorris: gotcha, did not realize that at all
23:57 < styol> Is it feasible for one to create memory leaks while using basic javascript/V8?
23:57 < tnorris> mbalho: concat-stream?
23:57 < tnorris> styol: oh yeah. but it will crash the process, not your entire system.
23:57 <@mbalho> tnorris: yep
23:57 < tnorris> mbalho: is that a library or something?
23:57 < styol> oh! this is possibly why I shouldn't mess with them until I'm pretty familiar haha
23:58 <@mbalho> it is a node module available on npm
23:58 < JacksonAND> Is Node.JS + Events faster than Scala + Akka?
23:58 <@mbalho> depends on the benchmark authors bias
23:58 < styol> This is my favorite room because I always learn something completely new :)
23:58 < jesusabdullah> JacksonAND: asking "which is faster" is almost always a question so ridiculously ambiguous you can't even begin to answer
23:58 <@mbalho> styol: buffers are just RAM. you can write a program that crashes your system in any language that lets you use RAM
23:59 < jesusabdullah> JacksonAND: plus I've never heard of Akka
23:59 < JacksonAND> akka.io
23:59 <@mbalho> they are infringing on nodes exclusive use of the hexagon
23:59 < styol> mbalho: is that why one might opt for a typed array versus a common array when trying to squeeze performance? I believe that was the context that prompted me to read about them
23:59 < jesusabdullah> MY GUESS is that nobody's even done comparative benchmarks
--- Log closed Tue Nov 20 00:00:01 2012
