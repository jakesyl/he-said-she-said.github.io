--- Log opened Wed Jun 19 00:00:14 2013
--- Day changed Wed Jun 19 2013
00:00 < qard> Has the added bonus of supporting felixge
00:29 < ssafejava> someprimetime_: gm is faster than im by a good margin
00:48 < JohnMcLear_> so...
00:48 < JohnMcLear_> randomly hanging node threads
00:49 <@mbalho> JohnMcLear_: got a test case?
00:50 < JohnMcLear_> will try to find how to replicate
00:50 < JohnMcLear_> i realy need to use node-stacktrace or something
01:02 < caitp-> heeeeey, so does anyone have a suggestion for what would make a good web-service client to run on the raspberry pi? The 'restify' Json processing client might be a bit too much work for that thing
01:02 < caitp-> (yes I realize the webservice would need to output something other than json)
01:03 < caitp-> or, if possible, if there is any kind of profiling that I could do to see what exactly is taking so long
01:03 < caitp-> I think it's probably the json processing and http processing, but it's hard to be sure
01:18 < ThePrimeMedian> can someone answer this simple question. is there a callback for _.findWhere(array, filter) or is it syncronous?
01:21 <@mbalho> ThePrimeMedian: it is synchronous
01:21 < ThePrimeMedian> thanks mbalho
01:21 <@mbalho> ThePrimeMedian: async is only for i/o
01:21 <@mbalho> ThePrimeMedian: explanation: https://github.com/maxogden/art-of-node#callbacks
01:22 < ThePrimeMedian> thanks mbalho
01:44 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:28 < samholmes> Am I going about this all wrong by actually using MySQL instead of a NoSQL db?
02:28 < px> yes never use mysql
02:30 <@xyxne> samholmes, just do it
02:30 < samholmes> xyxne: what?
02:30 <@xyxne> mysql is fine
02:31 < caitp-> "no, use the MEAN stack or else you're doing it wrong"
02:31 < ckknight> samholmes: you are wrong for using MySQL, definitely, but not necessarily for using SQL over NoSQL
02:32 < ckknight> but I'm a bigot
02:32 < ckknight> and a postgres fan
02:43 < ejexin> anyone familiar with node-webkit?
02:57 < ejexin> so node-webkit doesn't support getUserMedia?
03:10 < ckknight> !doesntwork
03:35 < sirwan> does anyone like the Black Angels
03:35 < sirwan> The Black Angels .
03:35 < sirwan> they're a band
03:36 < Lorentz> at least use mariadb
03:36 < Lorentz> </an hour late to convo>
03:53 -!- ServerMode/#Node.js [+o xyxne] by hitchcock.freenode.net
03:53 -!- ServerMode/#Node.js [+o trevnorris] by hitchcock.freenode.net
03:56 < plops> Hi!!1
03:56 -!- ServerMode/#Node.js [+o xyxne] by hitchcock.freenode.net
03:56 -!- ServerMode/#Node.js [+o trevnorris] by hitchcock.freenode.net
04:07 < mamo> server went down with: "node: ../deps/uv/src/unix/stream.c:1319: uv_read_stop: Assertion `!uv__io_active(&stream->io_watcher, 4) || !(&stream->write_completed_queue == (&stream->write_completed_queue)->prev) || !(&stream->write_queue == (&stream->write_queue)->prev) || stream->shutdown_req != ((void *)0) || stream->connect_req != ((void *)0)' failed." message
04:08 < bmorriso> Putting node.js behind HAProxy. Is there any performance benefit to putting nginx in front of node.js ? So HAProxy -> Nginx -> Node.js? 
04:10 < ccowan> bmorriso: I would say putting nginx between HAProxy and Node is a bit redundant
04:10 < joshuawscott> bmorriso: depends on what you're trying to do.  In general I wouldn't see much benefit to putting nginx in front of node
04:11 < bmorriso> I wondered if serving static files from Nginx, caching/gzip/etc. could help page load times
04:13 < owen1> i am writing a little tutorial about publishing a package. if u hit npm publish, and it's your first package, will it ask you create a user?
04:14 < owen1> ('hey!, enter npm adduser to add yourself')
04:14 < owen1> i just don't remember 
04:14 < ChrisPartridge> owen1: i thinkso, check the source or just try it out under a clean user
04:15 < owen1> ChrisPartridge: how do i 'clean user'?
04:17 < ChrisPartridge> owen1: add a new user account to your machine, e.g. adduser
04:19 < owen1> ok
04:19 < owen1> ChrisPartridge: i noticed .npmrc file, i guess i can delete it
04:20 < joshuawscott> owen1: here's the results when I run nom publish
04:20 < joshuawscott> https://gist.github.com/joshuawscott/5811659
04:20 < joshuawscott> *npm
04:21 < joshuawscott> I've never published, and it does prompt me to 'nom adduser'
04:21 < joshuawscott> *npm adduser
04:23 < ccowan> bmorriso: I would think that Nginx + Node would be enought... Serve all the statics from Nginx and let Node handle the dynamic content.
04:23 < bmorriso> Using HAProxy to load balance multiple node servers though. Part of the architecture -- I can't get rid of HAProxy. 
04:23 < bmorriso> I just have to figure out how to make it faster
04:24 < owen1> joshuawscott: thanks!
04:24 < joshuawscott> owen1: np
04:24 < ChrisPartridge> bmorriso: make what faster?
04:24 < ccowan> bmorriso: why not load balance with Nginx. It does a great job with that.
04:25 < bmorriso> ChrisPartridge: Page load times. With HAProxy -> Node, page load is ~5s with ELB -> Node, it's 4.5s
04:26 < bmorriso> ccowan: can't use nginx as a load balancer, I wish I could
04:26 < ccowan> hum...
04:29 < ChrisPartridge> bmorriso: HAProxy doing RR?
04:29 < bmorriso> source
04:32 < ChrisPartridge> bmorriso: any particular reason it needs to be source? tried RR?
04:32 < bmorriso> RR is about 3x slower
04:35 < mamo> anyone have any ideas/leads as to why server went down with: "node: ../deps/uv/src/unix/stream.c:1319: uv_read_stop: Assertion `!uv__io_active(&stream->io_watcher, 4) || !(&stream->write_completed_queue == (&stream->write_completed_queue)->prev) || !(&stream->write_queue == (&stream->write_queue)->prev) || stream->shutdown_req != ((void *)0) || stream->connect_req != ((void *)0)' failed." message
04:35 < bmorriso> well, what happens is...I navigate to url, it'll load "pieces" from each node in the backend, rather than load everything from a single server. Setting it to source, everything loads from a single server
04:35 < mamo> ?
04:38 < ChrisPartridge> bmorriso: I would have thought 3 servers handling 1 request each, would be faster than 1 server handling 3 requests
04:39 < ccowan> ChrisPartridge: it should be
04:39 < bmorriso> nope. source = 5s, roundrobin = 17s, leastconn = 45s
04:40 < plops> hi!!
04:40 < ChrisPartridge> bmorriso: and how is the page getting the pieces? xhr?
04:43 < bmorriso> ChrisPartridge: I think so. I'm the ops guy. The app is node/express
04:45 < ChrisPartridge> bmorriso: ssl? 
04:45 < bmorriso> Yes
04:45 < bmorriso> That's one of the reasons for HAProxy over ELB
04:46 < bmorriso> ELB can't do an http -> https redirect
04:46 < bmorriso> HAProxy can
04:46 < ChrisPartridge> ah
04:46 < ChrisPartridge> so the node app, is doing the ssl?
04:46 < bmorriso> HAProxy is (support came in 1.5.12)
04:47 < ChrisPartridge> bmorriso: can you test without ssl?
04:47 < bmorriso> http://www.exratione.com/2012/12/websockets-over-ssl-haproxy-nodejs-nginx/
04:48 < bmorriso> ChrisPartridge: I can...standby
04:48 < plops> Hola, Hi!!
04:50 < ChrisPartridge> bmorriso: well, if the app is using websockets, that might explain why rr is slower than source
04:51 < bmorriso> same behavior w/ and w/o ssl
04:52 < ChrisPartridge> bmorriso: is the app using web sockets?
04:53 < bmorriso> ChrisPartridge: asking the developer (again, I'm the Ops guy). I'm not sure. Can you shed light on if it is/isn't? 
04:55 < ChrisPartridge> bmorriso: if its using web sockets, it could be initiating a handshake with each server in the pool, opposed to source locking it down to a single machine in the pool
04:56 < Ravik> Hi..I have a question regarding winston logger...does any open source projects use this currently?
04:56 < bmorriso> Well, I'm looking at the logs and in RR, it pulls pieces of the site from each server in the backend
04:56 < plops> ok!!!
04:56 < plops> oh!
04:59 < olalonde> i need inspiration
05:00 <@mbalho> npm search something-cool-sounding
05:00 < ChrisPartridge> bmorriso: perhaps confirm with the developer if its using web sockets first, btw, how much data is it pulling back? does it warrant taking 4.5-5 seconds?
05:00 <@mbalho> find an unmaintained module and fork it
05:00 < olalonde> what's a good example of a many-to-many relationship (cant use user,blog,comment example)
05:00 < ChrisPartridge> office, access, user?
05:01 < olalonde> right
05:01 < olalonde> was trying to avoid user but yes, guess i could name it employee
05:01 < olalonde> thanks!
05:04 < bmorriso> ChrisPartridge: 16 requests  ❘  434 KB transferred  ❘  6.39 s (onload: 6.39 s, DOMContentLoaded: 5.89 s)
05:04 < ChrisPartridge> and this is local to you at the moment?
05:04 < bmorriso> No
05:04 < bmorriso> EC2 instance
05:05 < bmorriso> 2CPU/8G RAM, Ubuntu 12.04.2
05:06 < ChrisPartridge> bmorriso: and thats set to source, or rr?
05:06 < bmorriso> source
05:09 < Ravik> Is winston logger used in any of the open source projects ?
05:10 < mmalecki> Ravik: a bunch of flatiron-based projects use it. quill, composer, jitsu, etc
05:10 < mmalecki> jitsu is probably the most popular
05:11 < Ravik> I want to look at the way they are logging logs...thanks for suggesting
05:13 < tim_smart> isaacs: I thought this was fixed https://github.com/joyent/node/issues/5715
05:14 < ChrisPartridge> bmorriso: i'd find out whether its using websockets/xhr etc, and ask the guys in #haproxy to take a look at the config
05:15 < ChrisPartridge> bmorriso: although, depending on where the app is getting its data, 6 seconds seems like a long time for 434k worth of data
05:15 < bmorriso> Thanks! 
05:15 < jfisk1987> newbie question, but how do i update the document by its id? i have:
05:15 < jfisk1987> db.users.update({_id:"51c138e67074c4420600000"},{fbID:"2"})
05:15 < jfisk1987> but it isnt working
05:46 < samholmes> exterminate is pretty awesome!
05:46 < samholmes> Are there any caveats to using exterminate over Terminal?
05:49 < olalonde> mmm i think my orm will soon be ready for alpha testing
05:49 < olalonde> yaya
06:14 < Zogot> Ahoy all
06:16 <@mbalho> avast! a newcomer approaches
06:18 < Zogot> ahoy mbalho, how goes it?
06:18 <@mbalho> lookin at gifs on the internet
06:18 < ckknight> don't answer, I suspect that he's a pirate.
06:18 < ckknight> he did say "Ahoy"
06:18 < ckknight> that at least means that us landlubbers had be skeptical
06:18 < ckknight> had better be*
06:19 <@mbalho> yer a landlubber!?!?
06:19  * Zogot suspects ckknight to be a ninja
06:19 < ckknight> no, I'm either a sophisticated AI or several monkeys clanging away on typewriters
06:19 < ckknight> it's yet to be decided
06:19 < ckknight> thus far, I have been able to complete most Turing tests, though
06:20 < Havvy> Hmm, did you create a programming language, or did you just transcribe your interpreter into a compiler?
06:23 < ckknight> Havvy: there's a 3-step process where the brunt of the work is macro-based, but all the macros are compiled to JS rather than being interpreted, so it still is a compiler.
06:24 < ckknight> although during the reduction step one could argue that there is some "interpretation", but that's more just type inference and constant reduction
06:24 < Chat7952> Hello
06:33 < samholmes> exterminator is actually really pretty cool concept!
06:34 < samholmes> HTML files rendered in my terminal!
06:34 < samholmes> Nice.
06:35 < samholmes> Someday, I could write code in my terminal, render and view the files, maybe even load up the page and test it out, browse the web, etc. all from my terminal.
06:35 < samholmes> Who needs a GUI
06:36 < samholmes> substack: what are you goals with exterminator?
06:36 < substack> samholmes: I use it for talks.
06:37 < substack> it's a gimmick
06:37 < samholmes> Do you use Terminal for you day-to-day?
06:37 < substack> no
06:37 < samholmes> your*
06:37 < substack> I use gnome-terminal
06:37 < samholmes> substack: Are you a linux guy?
06:38 < substack> what does that even mean?
06:38 < gildean> someone that uses linux i guess
06:38 < samholmes> substack: I mean, do you use linux instead of macs for dev?
06:38 < substack> "instead of macs" implies that is some sort of default
06:38 < gildean> as in knowingly uses linux, not like uses linux in their tv or phone
06:38 < RiverTam> Unrelated, but dear lord: /<\?js(((\?[^>])|[^\?])*)\??\?>/g
06:39 < samholmes> I always see you using a macbook in your presentations.
06:39 < substack> samholmes: ...
06:39 < samholmes> substack: Exactly..do you default to using linux?
06:39 < substack> I don't even know how to use a macbook.
06:39 < substack> how would I even use one? They're useless.
06:39 < substack> they don't even ship with a compiler or a package manager capable of installing a compiler
06:39 < samholmes> It's not too hard I hear
06:40 < substack> and I would just spend all my time figuring out how to disable all the ui
06:40 < GreenDog> i'm getting a macbook for work this week suposedly...great
06:41 < gildean> you can't even disable the ui, you use it like apple intended or not at all
06:41 < substack> refuse it
06:41 < substack> gildean: software paternalism
06:41 < substack> no thanks
06:42 < gildean> i'm also picking out a new laptop for work, just checking on some lenovos and hp's, not sure yet what to pick
06:42 < samholmes> substack: You don't like UI?
06:42 < samholmes> GUI*
06:42 < dch> its always a worry, I'd love to buy a lappie *knowing* that the fan/touchpad/wireless will just work. Ideally 
06:43 < substack> I like it when I type a command and the computer does exactly what I told it to do.
06:43 < samholmes> substack: I like that too, but that doesn't exactly answer my question.. meh nvm
06:43 < GreenDog> dir
06:43 < GreenDog> ls
06:43 < gildean> substack: what, are you saying you know what you want to do better than apple?
06:44 < substack> UI is all about "click this thing, find a menu somewhere, click another thing... hunt around in another menu"
06:44 < chewed-on> With OAuth, do we need some sort of server to handle the authenticating ?
06:44 < chewed-on> I'm trying to get my head around how it all works
06:44 < substack> I don't like it when tree structured decision trees are spatially organized in an ad-hoc way
06:45 < substack> be a web page or be a terminal
06:45 < chewed-on> I keep seeing tutorials mentioning you can sign in with your Facebook, Google+, Yahoo, Twitter etc account but what if I don't want to sign in with those, what if I have my own web application that I just want to have a secure way to protect the data and api request ?
06:46 < dch> chewed-on: try out mozilla persona, http://mircozeiss.com/mozilla-persona-example-app-with-express-and-couchdb/ for example.
06:46 < substack> chewed-on: https://github.com/substack/persona-id
06:46 < dch> \o/ even better
06:47 < chewed-on> what if my client is a native iPhone app, will this Mozilla Persona thing still work?
06:47 < substack> no
06:47 < substack> it's for web pages
06:48 < chewed-on> >.>
06:50 < nodenoob> hello, would you use a config file like this: http://hastebin.com/qelokivafi.json? or would you define a function which will return the correct types based on the scope and the level?
06:57 < nodenoob> is it crazy to write hierarchical configuration files like that one above?
07:01 < Havvy> nodenoob: Config files as json work.
07:02 < jfisk1987> why use mongoose as opposed to the native mongo driver?
07:02 < jfisk1987> im a newbie
07:04 < nodenoob> jfisk1987: it has a lot of useful things (Schemas, validatidons, methods, middlewares)
07:04 < jfisk1987> ah ok thank
07:04 < jfisk1987> s
07:05 < jfisk1987> also i have this update user method that never updates my user: http://pastebin.com/r0SCERDN
07:05 < jfisk1987> it receives the parameters, but wont update the record
07:06 < jfisk1987> i get 0 document(s) updated
07:06 < nodenoob> Havvy: thank you but i'writing a whole decision tree (even if it is simple) in a json configuration file
07:06 < nodenoob> and it looks messy :(
07:07 < nodenoob> config files schould be easy to edit, on the other side i have my decision tree always there ready when i need it
07:07 < Havvy> Then a function might be better.
07:07 < nodenoob> can't decide :(
07:07 < Havvy> If the function is also easy to modify.
07:08 < Havvy> If you can, write both.
07:13 < nodenoob> Havvy: i'll try ty
07:22 < jaya> In Socket.IO how to invoke a event on sending a message
07:22 < jaya> I mean to say 'message' event
07:26 < jfisk1987> i have a dictionary, but $addToSet wont work for that. Is there something similar?
07:32 < [AD]Turbo> ciao all
07:41 < SomeoneWeird> anyone got an example of a readable stream that pushes data when it gets it from an event or something?
07:44 < substack> SomeoneWeird: just use through:
07:44 < SomeoneWeird> hm?
07:45 < substack> var tr = through(); someobj.on('someevent', function (x) { tr.queue(x) })
07:45 < substack> handles backpressure etc
07:45 < substack> then tr.pipe(whatever)
07:45 < SomeoneWeird> gr i hate multimon setups i keep forgetting to click other windows
07:45 < SomeoneWeird> hmm, thanks, will check it out
07:46 < SomeoneWeird> i presume through is a package? heh
07:46 < SomeoneWeird> ah yep, nvm
07:47 < substack> var through = require('through')
07:47 < SomeoneWeird> L(
07:47 < SomeoneWeird> :)*
08:06 < ed8> hi, is there a command to sync cache with official repo ?
08:07 < saanplus> Hi, how to handle control flow in node-mysql fetching records from database and passing on to a jade template
08:07 < saanplus> ?
08:08 < saanplus> it goes passes null to template and fetches the rows later :(
08:09 < fkm> saanplus: Put the render inside the callback from your query.
08:10 < olalonde> or use async :)
08:10 < olalonde> depending on how nested your callbacks get
08:14 < saanplus> @fkm, i cant put it in the callback, as the db is being called from an other file, and it doesnt recognize res as an object there
08:16 < ed8> how can I find the list of installed yeoman generator on my machine?
08:16 < gildean> saanplus: then make the function in the other file return a callback instead, and add the callback function in the first file
08:16 < ed8> not sure if it's npm or yeoman issue
08:16 < gildean> saanplus: or if you're using express, make each part a middleware of its own
08:17 < saanplus> actually i am new to all this stuff, dont know much about that
08:17 < saanplus> but thanks for solution
08:17 < someprimetime_> what's the general practice for image resizing with gm or imagick?
08:18 < someprimetime_> like does gm need it saved to disk first in order to resize?
08:18 < someprimetime_> or can I just get the incoming req.file and pipe it to gm?
08:20 < alk_> hey I'm trying to find a way to garbage collect this: (one line)
08:20 < alk_> var cnt = 1; setInterval(function() { var somefunc = function() { cnt++; console.log(cnt); }; process.nextTick(somefunc); somefunc = null; }, 0);
08:21 < alk_> I would expect the closure to be deleted once it has been executed by nexttick, but if I look in top, I see the process memory go up and up and up
08:23 < olalonde> anyone wants to contribute to my project? :(
08:24 < ckknight> alk_: you're creating a string with console.log, thus the memory usage.
08:24 < ckknight> alk_: it will be GC'd eventually
08:27 < alk_> mmmh right after a long run I see it go back down...
08:28 < alk_> thanks. I guess that since I'm a bit new to node I'm just a bit afraid I'm going to mess things up. I'm very cautious and the real codebase for which I use this pattern (run a closure in process.nextTick) isn't that long
08:28 < ckknight> alk_: that's the GC at work
08:29 < ckknight> alk_: and so you know, your closure will be gotten rid of eventually anyway, no need for = null
08:29 < ckknight> alk_: once there are no references to it, the GC can pick it up in its next cycle
08:30 < alk_> I'm a bit confused still with JS because the references/pointers are not explicit like in other languages
08:30 < ckknight> alk_: if you want to play with the gc, pass in the --expose_gc option to node and you'll be able to call gc() manually
08:30 < alk_> awesome tip!!
08:30 < ckknight> alk_: some other languages, I'd say the majority nowadays do not have explicit pointers by default
08:31 < ckknight> alk_: in JS, I find it's best to assume that everything is a reference, only that some values are immutable, such as all the primitives
08:31 < alk_> in js it's if you assign an object, then it's a pointer, and if you assign a string/number it's a direct assignment, right?
08:31 < Havvy> alk_: Pretend it's a pointer to a string.
08:31 < ckknight> so even if a Number may actually be by-value as far as V8 is concerned, it's irrelevant whether it's a reference or a value since it's immutable
08:32 < Havvy> I'll let ckknight explain. G'night.
08:32 < Havvy> !reference
08:32 < alk_> good point. I guess my next step is to understand wtf this 'prototype' thing is because it makes no sense to me for now. I'll do some reading
08:32 < ckknight> if I make an object like Object.freeze({ name: "alk_" }), for all intents and purposes, you can treat it as if it were any other primitive value.
08:32 < alk_> good night Havvy. thanks!
08:32 < ckknight> !prototype
08:32 < Havvy> ckknight: Wanna create something for !reference ?
08:32 < Havvy> !proto
08:32 < Havvy> :s
08:32 < ckknight> ecmabot doesn't exist here
08:32 < Havvy> Oh, right
08:32 < ckknight> why :(
08:33 < ckknight> alk_: so everything is a reference, some values are immutable. doing `x += 1` doesn't change the value inside of `x`, it reassigns the `x` binding to a new value
08:34 < alk_> cool!
08:35 < ckknight> but if I were to do obj.mutateSomehow(), then obj internally changes and all references to the same object will also change, since they all only point to one value
08:35 < alk_> mmh
08:36 < alk_> oh and in, for example, perl, I can do something that's pretty cool. here is how it goes. sub somefunc { <code> }. then I can pass it by reference somewhere else by using my $var = \&somefunc, and execute it further on with &$var.
08:36 < alk_> is that possible in js?
08:36 < ckknight> there's only two ways that I can think of to do that in JS, both being hacks
08:37 < ckknight> one: var obj = { value: 5 }; func(obj); var value = obj.value; // since obj's internals are mutable, `func` can alter `.value`
08:37 < ckknight> two: var value = 5; func(function(x) { value = x; }); // func can call the callback to assign to the `value` binding
08:38 < alk_> seems a bit hacky indeed
08:38 < alk_> I guess that if I plan to pass a function around, I should just assign it with var somefunc = function somefunc(blabla) { code }
08:39 < ckknight> !nfe
08:39 < ckknight> gah, we need ecmabot
08:39 < ckknight> Named Function Expressions: http://kangax.github.com/nfe/
08:39 < ckknight> although if you're only running in node.js and not a browser, it's not an issue
08:39 < ckknight> I just never use NFEs myself
08:40 < alk_> the goal is to be able to see them in node inspector
08:40 < ckknight> alk_: oh, also, since functions close over their scope (i.e. they're 'closures'), they can alter variables in the outer scope.
08:40 < ckknight> var value = 5; function func() { value = 6; }; func(); assert(value === 6);
08:40 < alk_> well yeah that's the whole point of using a closure
08:41 < alk_> the real world scenario is that I have an http/https res
08:41 < ckknight> but it's another way to sorta do pass-by-reference, but in a different way. Cleaner, imo.
08:41 < ckknight> right.
08:42 < alk_> object that I'm passing around that on exception I res.end etc - but otherwise I pass around the 'end' function, that has a counter because I queue stuff around
08:43 < ckknight> okay
08:43 < alk_> var counter = 0 ; var endfunc = function endfunc() { counter--; if (counter <= 0 { res.end etc } } ; < some stuff counter++ where I pass endfunc, and that finishes with process.nextTick(endfunc) }
08:44 < alk_> this way my connection is only closed and acknowledged once that I have queued and finished all my processing - that varies depending on what input I get
08:45 < ckknight> alk_: all sounds good
08:46 < alk_> awesome! I'm still new to serious JS. I've been using node for a few daemons for a little over a year - but on and off, it's a thing I'm coding on the side
08:47 < alk_> it's a port of some monitoring daemon suite that I wrote in perl 7-8 years ago...
08:48 < ckknight> fun :)
08:48 < alk_> perl is cool and I write it cleanly, but the more time goes by, the less people can read it... and while it does have some async libs, it's overall 20-25 times slower for a lot of operations
08:48 < alk_> yeah it's on github. once I've stabilized it (95% for now) I'll actually release some presentation and screencast
08:49 < alk_> the perl version has been used in production in a couple major banks and web hosting providers since 2007-2008 so I'm pretty confident :)
08:52 < ckknight> perl may be ugly, but it is pretty good if you know how to use it properly, imo.
08:52 < ckknight> note that it is tough to get to the point of using it properly
08:52 < ckknight> but the same could be said of JS, arguably
08:53 < sinclair|net> ckknight: TS hit 0.9
08:54 < ckknight> I thought it did a few days ago
08:54 < alk_> I like that perl has an incredibly predictable and well designed behavior. It always makes sense. if you don't know it well, sure it may look a bit weird, particularly the syntax, but it's actually fantastically well designed
08:55 < ckknight> its standard library is far better than some others
08:55  * ckknight coughs in the direction of PHP
08:56 < alk_> yeah, there are only two things I like about php : it's very popular, and mod_php is fantastic from a server maintenance point of view
08:56 < Zogot> alk_: what, you dont like WordPress :P?
08:56 < alk_> you can just limit memory, cpu runtime...
08:57 < alk_> there's no daemon/process that will crash, etc. nothing like these tomcat instances you often see (or node - but node isn't as bad haha)
08:57 < alk_> wordpress is cool and uncool at the same time... the right word would be ambivalent
08:58 < alk_> my mom is now 60 and she has her own website/blog and I don't need to help her handling it
08:58 < sinclair|net> alk_: there is nothing cool about wordpress
08:58 < Zogot> sinclair|net: other than the chance to make you a lot of money, regardless of code quality :p
08:59 < alk_> I helped her for a couple hours for the initial setup, and that's it
08:59 < alk_> it's been over two years now. she even does her upgrades on her own
08:59 < sinclair|net> Zogot: i just got offered a job where i could be making $100k, i turned it down
08:59 < sinclair|net> Zogot: its "below" my expectations 
09:00 < sinclair|net> Zogot: i could however earn half of that mucking around with crappy old workpress
09:00 < sinclair|net> Zogot: i just turned it down today
09:00 < alk_> so in that way, I can argue wordpress is cool
09:00 < sinclair|net> they started offering 90k, i said "too low"
09:00 < alk_> do you get my point sinclair|net? :)
09:00 < sinclair|net> they then came back and offer 100k, i turned that down also
09:01 < sinclair|net> that was today
09:01 < alk_> where do you live?
09:01 < sinclair|net> it was a .net job of course
09:01 < sinclair|net> i do wonder what the chances are of earning that kind of money in nodejs
09:01 < alk_> 100K can be a lot, little, or average depending on the region in the world
09:01 < sinclair|net> alk_: that is adjusted to USD
09:02 < JT-EC> Anyone seeing compilation issues with 0.10.12?
09:02 < alk_> for example, right now I live in sydney, but I'm moving to san francisco next week
09:02 < sinclair|net> 125k New Zealand
09:03 < alk_> my paycheck is going up - but actually I'll be earning about the same amount in $ because the tax is a bit higher in CA
09:03 < sinclair|net> anyway, the point is, you cannot earn that kinda money in wordpress
09:03 < alk_> mmmh
09:03 < alk_> if you do some marketing stuff, and you need to do your site/whatever easy and fast
09:03 < alk_> wordpress is going to make your life easy and you can make millions if you provide something of value
09:03 < alk_> :
09:04 < alk_> as a developer (if that was my occupation), I wouldn't like to do wordpress or php ... :)
09:04 < sinclair|net> make millions, hardly
09:04 < sinclair|net> you could write a thousand wordpress sites, and even then, you wouldn't make a million
09:05 < alk_> not by selling the wordpress sites
09:05 < alk_> but if you produce some good content or sell some good product, then wordpress could be the platform you use to present it
09:05 < alk_> I hope you get my point
09:05 < sinclair|net> not really
09:06 < alk_> I'm saying that the 'developer' job - is not something that makes a lot of money anyway
09:07 < sinclair|net> alk_: depends on what you do, and how long you have been doing it
09:07 < sinclair|net> i hate being type cast into certain roles
09:07 < sinclair|net> ive been using .net for over 10 years now, and i cant seem to find work elsewhere, despite knowing dozens of languages
09:08 < sinclair|net> i actually take time off work (contracting) to stay fresh, at my expense
09:08 < alk_> any job where you are at the end of the food chain is limited
09:08 < sinclair|net> for example, everything i have done in node thus far has been my paying through my teeth spending hours on it when i could be spending hours doing paid work
09:08 < alk_> ie. sell your time directly against an amount of money
09:09 < alk_> if you want to make more, you need to leverage your way of producing value ;)
09:09 < sinclair|net> that was a decision on my part, but i wouldn't want to be in position where all my eggs are in one basket, and then to find one day that basket has been obsoleted 
09:10 < sinclair|net> alk_: besides, knowing more stuff makes me more valuable 
09:10 < sinclair|net> alk_: and in position to be turning down 125k a year jobs
09:10 < alk_> if it's software, be paid for stuff that the software does (repeatedly) rather than a one time fee for the time you spend writing the software and have someone else be paid for what the software  does
09:10 < alk_> that's called leverage ;)
09:11 < alk_> ( invest time/money in creating a business process, and then repeat it in a way that creates profit )
09:11 < alk_> but this is a node.js channel. we're very much off topic haha
09:11 < sinclair|net> alk_: im getting old, but coding computers for me has always been a lifestyle, i don't even care about the money anyway, im more interested in the bleeding edge
09:12 < alk_> fair enough - then I guess you're in a situation that's good for you if you are not at all interested in the business side of things
09:12 < sinclair|net> if you are not on the bleeding edge, is a position to predict up and coming technologies, and ways of doing things, you get old fast
09:13 < Zogot> i care about the money at the moment. Trying to determine what language to get into next
09:13 < dcbartlett> RES.SEND(DATA)
09:13 < dcbartlett> heh
09:13 < dcbartlett> Zogot, i definately suggest sinking some time into javascript/node.js
09:14 < bnoordhuis> Zogot: java!
09:14 < dcbartlett> i see it as being a definate player in the future of web technologies
09:14 < dcbartlett> O.o
09:14  * dcbartlett glares at bnoordhuis 
09:14 < bnoordhuis> there's a lot of money in cobol as well
09:14 < alk_> if you want ot make money, java is a great contender
09:15 < alk_> imo, it's an absolutely awful language, and it attracts a huge number of morons
09:15 < alk_> and it's 'enterprise' which means more morons
09:15 < dcbartlett> agreed
09:15 < dcbartlett> but for some reason, it's still a top pick for companies
09:15 < Zogot> dcbartlett: aye, getting JS down I think would prepare me for the next 5 years considering the rise in JS apps
09:15 < alk_> but there is definitely solid corporate cash behind it if that's the lifestyle you will accept LOL
09:16 < alk_> (for two million dollars, I wouldn't do java - but that's me)
09:16 < dcbartlett> more and more companies are going "mobile" too
09:16 < dcbartlett> which is harder to do with Java
09:16 < sinclair|net> to be honest, i really wanted to make an impression on the open source scene for a while, at least that way, i could say i took part
09:16 < alk_> sinclair|net then do so! :)
09:16 < sinclair|net> alk_: no one uses my node stuff, because its all in typescript
09:17 < sinclair|net> alk_: https://npmjs.org/package/typescript.api
09:17 < sinclair|net> and recently....
09:17 < sinclair|net> https://github.com/sinclairzx81/calcium
09:18 < alk_> that's called marketing my friend
09:18 < alk_> you must do what the market wants
09:18 < alk_> or more accurately, find the intersection between what the market wants and what you are able/willing to do
09:18 < Zogot> sinclair|net: pretty sure the ghost project is going to be open source once its down
09:18 < Zogot> keep an eye on that to be honest
09:19 < alk_> if your typescript stuff is precomplied and easy to use/run/whatever and it actually answers a need and is presented properly
09:19 < alk_> then it will be a success
09:19 < alk_> it's not the other way round haha
09:19 < sinclair|net> Zogot: ghost?
09:19 < Zogot> http://tryghost.org
09:20 < dcbartlett> i completely agree with alk_ on that, having it compiled to javascript is very helpful
09:20 < sinclair|net> what is it?
09:20 < alk_> for example. sinclair|net, your calcium thing
09:20 < sinclair|net> a blogging platform?
09:20 < alk_> doesn't have a readme
09:20 < alk_> I have absolutley no idea what it is
09:20 < Zogot> sinclair|net: aye, in nodejs
09:20 < sinclair|net> alk_: its a work in programm
09:20 < sinclair|net> *progress
09:21 < alk_> :)
09:21 < dcbartlett> say
09:21 < sinclair|net> alk_: and if you look at the source, you will see that code base is fairly vast
09:21 < alk_> I have no business looking at the code if I don't even have a vague idea of what it does
09:22 < Zogot> sinclair|net: http://www.kickstarter.com/projects/johnonolan/ghost-just-a-blogging-platform
09:22 < sinclair|net> alk_: it doesnt do anything atm
09:22 < alk_> and even for stuff that I know about - I mostly don't care about looking at the code either lol
09:22 < alk_> oh ok ... :))
09:22 < sinclair|net> alk_: that isn't entirely true, most of whats there is boilerplate
09:23 < alk_> what isn't true? that I don't care? I assure you, I don't, LOL :)
09:24 < sinclair|net> alk_: wait what?
09:24 < sinclair|net> anyway, ghost looks nice, 
09:24 < alk_> ahah alright
09:24 < sinclair|net> but its probably not exactly what i would want to use
09:28 < sinclair|net> love the ghost site design
09:29 < yalamber> hello, what is difference between process.nexttick and child_process?
09:30 < alk_> child process launches an external program
09:31 < alk_> process.nexttick says run this routine next time my node.js event loop happens
09:31 < alk_> ie. within the internal current nodejs process/loop
09:32 < yalamber> alk_: I am trying to allow users to export some data in cdv format. should i use child process?
09:32 < yalamber> csv *
09:33 < yalamber> those data can be huge so i will be just emailing them when csv processing is complete
09:34 < dcbartlett> yalamber, node.js is asynch, so why does it need to be run outside?
09:34 < alk_> probably run that in a child process yes
09:34 < alk_> unless you are able to cleanly split your csv within many subroutines that call themselves in a cumulative async way
09:34 < alk_> which can be nice too - just depends on how you are doing it
09:35 < alk_> but really, if you are asking this question it might be good to learn more about event based processing in general ;)
09:35 < alk_> ok time to go for me
09:36 < yalamber> alk_: thanks
09:40 < yalamber> dcbartlett: wont't it effect the process if i run huge csv exporting function?
10:00 < strk> what does node use to determine timezone ? process.env.TZ doesn't seem to be used by new Date('2000-01-01T00:00:00')
10:00 < strk> actualy, by new Date(year, month, day, hour, min, seconds, mili);
10:03 < chrisb124> Morning all, anyone care to take a stab at this question? http://programmers.stackexchange.com/questions/201996/how-can-nodejs-be-non-blocking
10:12 < ed8> is there any argument to 'npm list'?
10:13 < ckknight> chrisb124: sure, lemme take a crack at it
10:14 < tomb_> ed8: you can say -g to get the globally installed packages
10:15 < ed8> I found the docs: https://npmjs.org/doc/list.html but it's not clear that configuration are also argument (--json, --parseable)
10:24 < ckknight> chrisb124: answered
10:39 < randomlurker> What's the best way to access incoming cookie?
10:39 < randomlurker> I'm using restify.
10:41 < randomlurker> !help
10:45 < ckknight> randomlurker: well, I know how to do it with connect
10:49 < randomlurker> ckknight: yes, I don't have any idea. Link?
10:49 < ckknight> http://www.senchalabs.org/connect/cookieParser.html
10:50 < randomlurker> ckknight: thanks!
10:50  * randomlurker looks
10:52 < ckknight> randomlurker: and it's lovely and secure (in that it can't be altered, but can be viewed, so don't put a credit card number in there) with the secret key
10:53 < echoSMILE> any great tutorial about creating the certs to use SSL with node?
10:54 < JT-EC> bnoordhuis: This patch assumes that all systems have cc which is incorrect.  https://github.com/joyent/node/commit/acbdabb74b1b8484671fd3c44cd9eb9a7ea11f41
10:55 < JT-EC> When the system then can't find a C compiler it tells me to set the CC variable even though I did set it and because of this patch you ignore it.
10:57 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:06 < juliangruber> isaacs: i can publish new modules, but just can't get it to update, e.g. trying to publish a new version of multilevel-serve
11:09 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:10 < bnoordhuis> JT-EC: can you file an issue?
11:12 < JT-EC> bnoordhuis: Okay.
11:12 < JT-EC> bnoordhuis: I noticed this when compiling 0.10.12 but can't find the patch in master.  Have I missed something?
11:14 < fivethreeo> trying to develop a node.js module wrapping a c++ library, just wondering if this code seems somehow sane.. http://codepad.org/T7wUxwUR
11:53 < olalonde> node-waf is no longer used right?
11:58 < adg_> hi in calipso how can i give a mongodb path
12:26 < con3x> Just looking for some info on best practices here.
12:27 < con3x> What would be the best way to test a restful API using TDD
12:27 < con3x> ?
12:27 < con3x> Right now I'm just making requests using the request library and making sure the output is correct.
12:32 < Juul> can anyone tell me the correct way to write to a character device in node?
12:38 <@isaacbw> yo yo yo
12:38 <@isaacbw> wussssuuuuppppppp
12:38 <@isaacbw> pppp
12:39 <@isaacbw> you know who's beautiful? You are
12:44 < kad_> hello all :) I have a question regarding performance / flexibility of a multiplayer server using node.js
12:45 < kad_> the server basically receive a player position and send it back to players near the sender
12:46 < kad_> what option is better : keep everything in memory and calculate distances then send back the position ?
12:47 < kad_> or just request player position using geo distance from mangodb ? (I'm using mongodb to store coords ...etc btw) 
12:47 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:50 < jorisooms> Hello, I have a question regarding publishing and mainly unpublishing a package to the npm registery. I published something just now, and then I unpublished it because I had some info wrong in my package.json file.. But it's still showing up in the NPM registry. Does it take some time to update?
12:57 < kad_> jorisooms: just update your package and publish it again :)
12:57 < jorisooms> what if I want it gone? :')
13:00 < niggler> anyone check out typescript 0.9?  thoughts?
13:07 <@isaacbw> so many questions and so few answers
13:07 <@isaacbw> niggler: HN loves it
13:07 <@isaacbw> I want to see more ->asm.js compilers
13:07 < niggler> lol HN is probably one of the more useless opinions
13:07 <@isaacbw> it sure is :P
13:08 < niggler> asm.js lol
13:08 <@isaacbw> asm.js is neat
13:08 < niggler> meh more effort should be exerted in the area of making javascript faster, not creating a new language
13:08 < niggler> (which is effectively what's happening with asm.js
13:09 <@isaacbw> which
13:09 <@isaacbw> the former or the latter
13:09 < niggler> asm.js is a new language
13:09 < niggler> it looks like JS
13:09 <@isaacbw> not at all, it's just a subset of js that's easy to map to a finite set of native operations
13:09 < jas-> isaacbw: I have a question regarding the crypto encoding output when you have a minute or two
13:09 < niggler> go ahead jas- 
13:10 <@isaacbw> jas-: I'm not isaacs, I don't know things
13:11 < jas-> isaacbw: Oh, whoops
13:12 < spion> is it possible to use client certificates via node's tls module for identification? i.e. does node provide the API to get which client (certificate) was used by the client?
13:12 <@isaacbw> everyone things I'm isaacs :(
13:12 <@isaacbw> *thinks
13:13 < jas-> spion: http://nategood.com/nodejs-ssl-client-cert-auth-api-rest
13:14 < spion> jas-, what if two clients have different certificates - how to identify which one is making the request
13:15 < jas-> spion: That is the point of client certificate authentication... the CSR (certificate signing request) when generated contains information specific for that user based on the users private key
13:18 < spion> I still don't understand how can I implement authorization on top of that e.g. client C1 with a signed certificate can access resource A, but not B, while client C2 (with a different client certificate) can access B, but not A.
13:18 < jas-> spion: Have you searched the npm repo? https://npmjs.org/package/client-certificate-auth
13:19 < spion> my bad, i didn't search for auth :)
13:19 < spion> looking at it
13:19 < spion> looks excellent so far
13:22 < spion> ah, so its getPeerCertificate()
13:22 < spion> no idea how I missed it
13:22 < spion> jas-, thanks
13:23 < jas-> spion: No worries, the docs would have that too http://nodejs.org/api/tls.html#tls_cleartextstream_getpeercertificate
13:38 < ak5> hey guys, I am having issues with the require directive in the options of grunt-mocha-cli - is it just me?
13:39 < ak5> That means I can specify there what all my tests require, right? however, if I do not var should = require('should'); in my test, it fails
13:47 < nathan7> ak5: it does require('should')
13:47 < nathan7> ak5: but it won't end up in a var
13:47 < nathan7> ak5: so it'll set up Object.prototype.should
13:48 < ak5> nathan7: I see. My issue was, if I fallow the first example, it doesn't work, however, if instead of all:{} I just put files: [] in options: {} it works
13:48 < ak5> is that worth reporting?
13:48 < ak5> maybe I was just being dense
13:48 < ak5> for me, this is solved, thanks though
13:48 < nathan7> I don't have any grunt-skills
13:48 < nathan7> just mocha ones
13:49 < ak5> Ok! I am just getting started with tdd with mocha and grunt-contrib-watch
13:59 < ak5> hm actually it is still broken
14:05 < dubd> j #express
14:05 < dubd> ups
14:19 < jdelgado> isaacbw: You aren't? ;)
14:22 < con3x> How do you test your Rest API's?
14:22 < jdelgado> Mocha + request
14:22 < ThePrimeMedian> con3x: I used mocha + supertest
14:23 < jdelgado> I never got the difference between request and supertest - they seem the exat same to me other than the method chain
14:24 < ThePrimeMedian> I donna. I only use it because I have been accustom to using superagent
14:24 < jdelgado> ah
14:31 < con3x> ThePrimeMedian: Sounds quite similar to what I'm doing at the moment, I'm using mocha and request to query :) I'll have a look
14:33 < jdelgado> Anyone know the performance difference between redis and cassandra caches?
14:34 < con3x> jdelgado: I know that redis is extremely fast, but it depends how you use them.
14:34 < jdelgado> con3x: Yeah, absolutely.
14:35 < con3x> I unfortunately have no experience with cassandra :)
14:36 < jdelgado> It's amazing. Just moved an entire production cluster to it from MongoDB
14:38 < vieirar> what your main reasons for making the switch from mongo to cassandra?
14:39 < jdelgado> Increased HA by a long shot, little big of a performance gain, not much. Also, amazing for cross-region deployments.
14:40 < jdelgado> We have a payment system that needs to be up 100%, and when a MongoDB master fails, you're either bailing on connections or having a severe blockage for the failover time
14:40 < vieirar> cool.  We're actually looking into mongo or cassandra for our session store.  Any strong opinions there?
14:41 < jdelgado> I'm actually trying to determine if I should use cassandra cache or redis for the session store right now. I'd stray away from Mongo just based on my past.
14:42 < jdelgado> I'd hate to have another layer in my stack for redis, but i'm thinking it would be a big performance gain. I'll have to do some tests.
14:43 < vieirar> Good to know.  One of our constraints is windows (client constraint actually).  Are you aware of any limitations?
14:44 < jdelgado> Not aware of any, but I have no idea.
14:44 < vieirar> appreciate the input.
14:44 < vieirar> thanks.
14:44 < jdelgado> Good luck!
14:45 < Beg> guys, would you consider doing return Callbacks();? I just had my first incident where I ran two callbacks in a row and it took me a while to figure out the error
14:46 < jdelgado> Why would you return a callback?
14:46 < Beg> to kill the method
14:46 < Beg> from continuing
14:46 < pickels> Beg: it's a common pattern to do that
14:46 < jdelgado> oh, I just do callback() then return on the next line...
14:46 < Beg> thanks pickels, jdelgado  :)
14:47 < vieirar> i've done it my self.  a bit of cognitive overhead.  but it gets the job done.
14:48 < jdelgado> intresting stuff
14:48 < dhruvasagar> Hey guys, I am a node newbie, was creating an app and wanted to rename the 'routes' folder to something else, but it doesn't work. why?
14:48 < jdelgado> dhruvasagar: I'm guessing you didn't update your require() reference to it?
14:49 < dhruvasagar> jdelgado: I did...it says cannot find module
14:49 < DrowningInNodes> Good afternoon/morning/evening
14:49 < dhruvasagar> jdelgado: for the renamed one
14:49 < jdelgado> dhruvasagar: Do you have an index.js in this folder?
14:49 < DrowningInNodes> Could someone possibly help me with getting nodejs up and running on an android device?
14:49 < dhruvasagar> nope
14:50 < dhruvasagar> jdelgado: I think I understand
14:50 < dhruvasagar> jdelgado: thanks :)
14:50 < jdelgado> dhruvasagar: Throw in an index.js and do a module.exports
14:50 < IgorNym> Hello
14:50 < jdelgado> dhruvasagar: Sure, good luck!
14:50 < nathan7> Beg: return void callback()
14:50 < nathan7> Beg: void x === undefined
14:50 < IgorNym> Has anyone had to implement file locking with fs.writeFile before?
14:50 < nathan7> There's a lovely module for it
14:51 < DrowningInNodes> I've exhausted all efforts
14:51 < jdelgado> nathan7: Is that standard practice?
14:51 < nathan7> jdelgado: It's what I do.
14:51 < nathan7> jdelgado: most do return cb()
14:52 < jdelgado> nathan7: Really intresting stuff, I usually do return on the next line, but I think i'll switch, void sounds more gooder. :)
14:53 < DrowningInNodes> Is there anyone online with some experience in setting up nodejs on an android device?
14:53 < jdelgado> DrowningInNodes: I'm not by any means, but what are you trying to do?
14:55 < IgorNym> Hmm guess not
14:55 < DrowningInNodes> I'm trying to get nodejs running on an android device with the long-term goal of simply running a little socket.io server there which would send text to a tcp socket
14:55 < Beg> nathan7-> that seems logical, i'll use that
14:55 < jdelgado> IgorNym: nathan7 mentioned there was a good module for it.
14:55 < DrowningInNodes> I've got the application running on windows
14:56 < jdelgado> DrowningInNodes: Have you tried anode?
14:56 < DrowningInNodes> But I've been trying for the last 3 days to get the same thing on android, and I haven't even successfully installed it's dependency (nodejs) yet
14:56 < vieirar> is it that the app doesn't run on android or that node doesn't?
14:56 < DrowningInNodes> I've seen and read about "anode" a few times now
14:57 < DrowningInNodes> if I'm not mistaken
14:57 < DrowningInNodes> You use github to get it?
14:57 < jdelgado> It's an android port of node - I just saw it
14:57 < jdelgado> https://github.com/paddybyers/anode
14:57 < DrowningInNodes> Buyes
14:57 < DrowningInNodes> *Yes
14:57 < DrowningInNodes> And I have the zip, extracted on my android device
14:57 < DrowningInNodes> in data\local\bin
14:57 < jdelgado> Don't you have to build it first?
14:58 < DrowningInNodes> in data\local\bin\node-0.6-android
14:58 < DrowningInNodes> As one seems to edge closer and closer to success, another setback is readily awaiting
14:58 < DrowningInNodes> Yes, you have to build it
14:59 < DrowningInNodes> Which means I need GENU make?
14:59 < DrowningInNodes> *GNU
14:59 < DrowningInNodes> Which, if I'm not mistaken
14:59 < DrowningInNodes> Requires me to get an entire ubuntu server up and running on my device (I'm not sure why)
15:00 < jdelgado> That isn't right
15:00 < jdelgado> Try any of this? http://mitchtech.net/node-js-on-android-linux/
15:00 < RLa> can't you cross-compile with android native sdk?
15:00 < RLa> it should come with make and other tools
15:01 < RLa> including cross-compiler
15:01 < DrowningInNodes> To try that
15:01 < DrowningInNodes> I'd have to install debian?
15:02 < DrowningInNodes> or is debian the actual os I'm already running on?
15:03 < DrowningInNodes> I've attempted that but one command depends intricately on another which itself requires a third thing to be present all of which really make it difficult for me to understand what needs to happen
15:03 < DrowningInNodes> I'm not too familiar with linux
15:05 < DrowningInNodes> Like ./configure
15:05 < DrowningInNodes> I'm pretty sure it's the last step of what I need to do
15:05 < DrowningInNodes> But it doesn't seem to work as flawless as in all the xamples when you're on an android device
15:11 < darkPassenger> hi all
15:13 < con3x> Hello
15:13 < darkPassenger> i haver a question about callback 
15:13 < darkPassenger> have*
15:13 < con3x> Whats do you need to know?
15:15 < darkPassenger> I have this function i need to work with but i cannot seem to wrap my head around it,
15:15 < darkPassenger> http://pastebin.com/B9JCQZw2
15:16 < darkPassenger> like whats callback for in that code
15:16 < darkPassenger> im a noob btw....
15:17 < con3x> looks okay from what I can see, whats going wrong?
15:17 < darkPassenger> what function can i set as callback 
15:17 <@isaacs> juliangruber: gist of the output?
15:18 <@isaacs> juliangruber: i'm watching the registry changes feed, i see that people are publishing updates.
15:18 <@isaacs> juliangruber: also, what version of node/npm are you using?
15:18 < darkPassenger> can I put res.send() in there and then it will call the other function ? 
15:18 < con3x> darkPassenger: What are you trying to do?
15:19 < darkPassenger> im trying to get this code to return json 
15:19 < darkPassenger> which it does 
15:19 < darkPassenger> but I wonder whats the callback function in the parse function is for
15:20 < darkPassenger> its whats going on with the data once its parsed , right
15:20 < con3x> Yeah, it's to return it to a higher level
15:21 < Beg> *the epiphany when you realise you knew regexp all along.*
15:21 < con3x> So if you call parse(htmlFragment, function(err,value){console.log(value)})
15:21 < darkPassenger> ok but since i use it like var parsedHtml = htmlParser.parse(htmlToParse, function(){ //how can I use parsedHtml or at least get the result ? } );
15:22 < con3x> You won't get the result that way, node needs a new way of thinking where everything is events
15:22 < con3x> Two secs I'll write you a snippet
15:24 < con3x> darkPassenger: http://pastebin.com/xUMwTtzR
15:24 < con3x> thats roughly how you would use it.
15:24 < darkPassenger> oh 
15:24 < darkPassenger> you mean that
15:24 < darkPassenger> its 
15:24 < darkPassenger> oh ok let me try !
15:25 < con3x> Cool :)
15:25 < darkPassenger> i have to wrap my head around this one :P
15:25 < Beg> is there a way to append a string even if the variable is undefined?
15:25 < con3x> Yeah, its quite difficult at first, you'll get your head around it though
15:27 < con3x> Beg: sorry? do you have a snippet?
15:27 < pachet> Beg sure, `var foo; foo += 'bar'; foo;` => 'undefinedbar'
15:28 < pachet> works even though the variable's undefined :[
15:28 < Beg> yeah pachet, I know that I did not explain properly tough, I don't want the undefined part that's what I wanna avoid
15:29 < pachet> `var foo; foo = ( foo || '' ) + 'bar'; foo`
15:29 < darkPassenger> thanks con3x!!
15:29 < darkPassenger> it'll help me going foward
15:30 < Beg> thanks alot pachet
15:32 < Beg> pachet, with code like that, my code starts to look confusing and professional! 
15:32 < pachet> Beg lol
15:34 < con3x> lol, good code isn't supposed to look confusing... or really professional for that matter =P
15:36 < Beg> con3x-> I am kinda pointing at the programmer stereotype.
15:37 < Beg> con3x-> programming and the matrix are the same thing for people that don't know programming.
15:37 < innociv> Rofl, Beg
15:39 < innociv> What pachet showed doesn't look confusing to me. I do that sort of stuff a lot. :p
15:42 < juliangruber> isaacs: it was a permissions error. i tried publishing as the wrong user and it only told me `cb() never called`, even in newest npm. changed user and it worked
15:43 <@isaacs> juliangruber: can you gist the output that you got?
15:43 <@isaacs> juliangruber: with the wrong user?
15:43 -!- Topic for #Node.js: node.js - remember to give your fellow javascripters a hug - http://nodejs.org -  http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
15:43 -!- Topic set by mbalho [~max@ve.5bpbxlsy.vesrv.com] [Tue Jun 18 23:21:33 2013]
15:50 < juliangruber> isaacs: now it's a different error. https://gist.github.com/juliangruber/5815396 tried to --force publish with wrong user
15:55 < jas-> isaacs: If you have a minute can I talk to you about the crypto.DEFAULT_ENCODING option & how to properly account for it in lib/crypto.js?
15:57 < Beg> pachet-> alright, wanna one up your snippet? How would I do the same thing but for an array?
15:58 < Beg> .push() returns an integer, not the array
15:59 < Zaxnyd> does anyone have any good resources on REST API authentication?
15:59 < eere> hello
15:59 < pachet> Beg er, not sure i follow
15:59 < Beg> jsonResponse["msg"] = ( jsonResponse["msg"] || [] ).push('login');
16:00 < pachet> use .concat instead of .push
16:00 < Beg> Thanks
16:00 < eere> i need to send json messages between a few node processes on a tcp "net", how should i deal with buffering of a json msg?
16:01 < eere> it can have binary in it too
16:01 < jdelgado> Zaxnyd: Either passport or just write it yourself - not hard
16:02 < jdelgado> eere: dnode
16:02 < Zaxnyd> jdelgado, cool.   it seems like oath2 is the best way to go.
16:02 < eere> dnone? isnt that something to do with php?
16:02 < jdelgado> eere: It's a npm module
16:02 < jdelgado> Zaxnyd: I recently implimented OAuth - It's really fun.
16:03 < Zaxnyd> I've tried reading about it several times, are you able to give me a basic explanation of how it works?
16:04 < Zaxnyd> or a good resource
16:04 < jdelgado> Zaxnyd: Once you wrap your head around it - it is simple. The 3rd party has the end-user go to your website through /authorize, they give permissions, they get redirected to the 3rd party with a code, then they make a seperate request to you with their secret and that code for an access_token
16:05 < jdelgado> Assuming you are doing code rather than token for the grant_type
16:05 < jdelgado> eere: You find it?
16:05 < eere> yeah
16:05 < jdelgado> That work?
16:05 < eere> looks like
16:06 < eere> all i want is a ssl tcp connection that buffers json "messages"
16:06 < Zaxnyd> jdelgado: I see.  It's tough for me to wrap my head around it because there is no third party atm, but I want to treat my own software as if it's a third party.
16:06 < eere> looks like lots
16:06 < Zaxnyd> so the problem is solved the first time
16:06 < Zaxnyd> eat my own dogfood, as it were
16:06 < jdelgado> Zaxnyd: Wait, are you doing this to allow other developers, or just for yourself?
16:07 < Zaxnyd> both
16:07 < Zaxnyd> for right now, just me
16:07 < Zaxnyd> but very soon others will access it as awell
16:07 < jdelgado> Zaxnyd: Oh ok, then yeah, just think of yourself as a developer for now. I thought you were trying to implement OAuth just for yourself lol
16:07 < Zaxnyd> hehe
16:08 < eere> thanks
16:08 < jdelgado> eere: Idk if it does SSL, but it buffers json messages from one node to another
16:08 < eere> net does ssl yeah?
16:09 < Zaxnyd> so, jdelgado, there will be two use cases.  one will be a user authenticating themselves into the system.  which will have certain access restrictions based on account level.  another will be other machines connecting, which will inject data.  is there any difference in authorization method between the two?
16:09 < Zaxnyd> or are they just two 'accounts' with different access levels?
16:09 < jdelgado> eere: I don't think so?
16:10 < con3x> Zaxnyd: If this is oauth its just two different ways to get the token
16:10 < eere> tls
16:10 < jdelgado> Zaxnyd: Is this for end-users, or just developers?
16:10 < Zaxnyd> cool
16:11 < Zaxnyd> jdelgado: both.  the first case is users.  the second is developer.
16:11 < jdelgado> Zaxnyd: Ah, yeah that's standard practice. You will have to get the access_token for the end-users, but the developers can do whatever with just their client_id
16:12 < jdelgado> Assuming of course, you allow them to do so.
16:12 < Zaxnyd> that makes sense.  
16:12 < Zaxnyd> is there any major difference for the client_id handling?
16:12 < jdelgado> In what regard?
16:13 < Zaxnyd> I'm not sure.  I guess I assume that it's just like a private trusted key.  Or even like a permanent token that a user would have to gain via authorization.
16:13 < Zaxnyd> so the authorization will be different
16:13 < Zaxnyd> there's no need to provide credentials
16:14 < Zaxnyd> basically, a user provides credentials to gain a token, a developer would already have a token.
16:14 < squeeks> Please don't make the same mistake oauth made of confusing authorisation with authentication.
16:14 < Zaxnyd> squeeks: what do you mean?
16:14 < squeeks> Those two things are separate concepts.
16:15 < squeeks> oauth, by design, doesn't treat them as such.
16:15 < Zaxnyd> squeeks: aren't they pretty closely tied together, though?
16:15 < jdelgado> Zaxnyd: the client_id isn't private, they also have a private key for when they are grabbing the access_token. General rule when working with OAuth, everything is open if you can find someones client_id
16:15 < Zaxnyd> jdelgado, that's what I'm looking for; great.
16:16 < Zaxnyd> squeeks: once you've authenticated a user, you can authorize specific content based on their identity.
16:16 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:16 < jdelgado> He means there is a concept of Authorize and Authentication are different
16:16 < Zaxnyd> oh becuase I used the wrong word
16:17 < Zaxnyd> I see
16:17 < Zaxnyd> sorry, thanks for pointing that out
16:17 < jdelgado> No No, there is a common issue among OAuth providers, that people fix authorize and authentication
16:17 < jdelgado> mix* not fix*
16:18 < Zaxnyd> well, like I said, they're somewhat tied together, right?  you authenticate the user, then based on their identity, you can authorize content.
16:18 < jdelgado> authenticte will automatically redirect the user back to the 3rd party if they have already given permissions, while authorize will ask everytime.
16:18 < Zaxnyd> but I don't see how oath fits into the latter.
16:19 < jdelgado> It has to do with the oauth routes, not the words
16:19 < jdelgado> ie /authorize does something different than /authenticate
16:19 < Zaxnyd> now I'm confused
16:19 < Zaxnyd> lol
16:20 < jdelgado> Where are you lost
16:20 < Zaxnyd> authorize asks every time?  like, upon every request?
16:20 < Zaxnyd> to any endpoint?
16:20 < jdelgado> You know how I was talking about sending the user from third-party to you asking for permissions?
16:21 < Zaxnyd> yeah
16:21 < jdelgado> The directory that they send them to is either /authorize or /authenticate
16:21 < jdelgado> authenticte will automatically redirect the user back to the 3rd party if they have already given permissions, while authorize will ask everytime.
16:22 < Zaxnyd> seems like a pretty inconsequential difference, and one that has nothing to do with the true semantics of the words (as you said)
16:22 < jdelgado> OAuth is whack
16:22 < Zaxnyd> I mean, if the third party sends you there twice, it's kinda the third party's fault
16:22 < Zaxnyd> if it happens to prompt you the second time, so what?
16:22 < jdelgado> After i'm done with my current project, I'm going to do a side project making a OAuth alternative that actually makes sense.
16:23 < Zaxnyd> hehe
16:24 < Zaxnyd> anyway, authorize/authenticate differences aside... the basic principle of oauth is a third party redirects the user to your endpoint, at which point they trade their credentials for a token.  they then return to the third party with that token, which is now able to act on their behalf.  
16:25 < Zaxnyd> that token... I imagine it's a per-session token that expires after a time?
16:25 < Zaxnyd> so the server has to track the 'active'ness of those tokens
16:25 < jdelgado> You missed a step, they are given a code rather than a token, then they have to trade the code for the access_token afterwards
16:25 <@isaacs> juliangruber: well, this is odd: npm http 500 https://registry.npmjs.org/multilevel/-rev/39-5a9404ca785d28ad871cd849ff8126ee
16:25 <@isaacs> juliangruber: do you have the npm-debug.log file?
16:25 < jas-> Zaxnyd: If implemented properly the client (3rd-party) will verify the token on ever client request from the authentication provider
16:25 < jdelgado> It can expire if you want it to, but it doesn't have to. Mine don't
16:26 < Zaxnyd> what's the point of a 'code'?
16:26 < Zaxnyd> jas- how would the third party verify the token?
16:26 < juliangruber> isaacs: https://gist.github.com/juliangruber/751734bdc420d76f2cf2
16:27 < jdelgado> I read it, but it didn't make sense to me, it had something to do with making sure the third party was the one grabbing the token, but idk why it matters
16:27 < jas-> Zaxnyd: server (3rd-party) to server (oAuth provider) token passing
16:27 < juliangruber> isaacs: i remember publishing failing sometimes and then going to npmjs.org/multilevel and it said "invalid package"
16:27 < Stew-a> Zaxnyd: from what i understand trading in the code usually requires the client secret so that even if the user somehow gets redirected back to the wrong website (e.g. through dns hijacking or something) then without the client secret they can't get an access token, i.e. having the authenticating website prove their identity in order to get the token
16:28 < Zaxnyd> jas-, oh I see.  so the code is given to the third party, the third party trades it for an actually useful token.  so the user never touches the token?
16:28 < Stew-a> Zaxnyd: that too
16:28 < jdelgado> Stew-a: That makes more sense.
16:28 < Zaxnyd> ah, that makes sense, Stew-a
16:28 < jas-> Zaxnyd: The user will have a reference (usually) in the form of a cookie that resides on both the 3rd-party server as well as the oAuth provider server
16:29 < Zaxnyd> 3rd party secret + code = token
16:30 < Zaxnyd> jas- that makes sense
16:30 < Zaxnyd> to create a 3-way secure handshake
16:30 < pachet> 3way is so 2010, implement 5 way
16:31 < Zaxnyd> kinky
16:31 < jdelgado> pachet: That's honestly how I feel sometimes
16:31 < Zaxnyd> ok great, I think I have a better understanding of the basic process.  that should help a lot when I'm trying to understand how to implement it.  thanks :)
16:31 < pachet> actually, why stop there, 10 way
16:31 < pachet> handshake all the things
16:31 < Zaxnyd> lol
16:32 < jas-> Zaxnyd: The oAuth provider (if implemented correctly) should have the following security attributes: ACL (access control list) of allowed 3rd-party's that wish to use the oAuth provider. A correct oAuth implementation which as jdelgado pointed out requires a secret (specific to the 3rd-party) which is used to sign header specific authorization infromation passing from the 3rd-party to the...
16:32 < jas-> ...oAuth provider on subsequent re-authorizations when the client sends the cookie id that corresponds to the session id on the server at which point (if implemented correctly) should force the oAuth provider to re-authorize the current token (expiration, valididty etc)
16:32 < jdelgado> indeed
16:32 < jas-> pachet: At least buzzwords haven't gone out of fashion, I thought they were 90's only lol
16:33 < Zaxnyd> I'm reading that like 5 times, lol.
16:34 < jdelgado> I skipped the header stuff though - no OAuth clients actually use it... lol
16:34 < jdelgado> It was just one of those things where the drafters needed one more page... lol
16:34 < jas-> jdelgado: Most oAuth clients don't implement the HMAC validation portion
16:35 < jdelgado> Oh, I was talking about oAuth 2
16:36 < Zaxnyd> ok I think I got what you said, jas-
16:38 < Zaxnyd> oauth server has a list of trusted third parties (makes sense).  the third parties have a secret to prove their identity to the oauth server.  the combination of the user's code and 3rd party's secret make a successful request.
16:38 < jas-> Zaxnyd: The secret does that, but it also should be used to sign the header information to prevent tampering in the event of a MITM
16:39 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:39 < Zaxnyd> the secret does what?
16:42 < jas-> Zaxnyd: In cryptographic terms a 'signature' is a cryptographic hash (in this case based on the 3rd-party's registered "secret") that is used to create what is commonly known as a HMAC (hash message authentication code) which assists in prevention of tampering... here is the IETF draft section regarding the MAC portion of the oAuth 2 protocol http://tools.ietf.org/html/draft-ietf-oauth-v2-28#secti
16:42 < jas-> on-7.1
16:43 < jdelgado> just use bearer for the token type
16:44 < Zaxnyd> damn you smart, jas-
16:44 < Zaxnyd> lol.
16:45 < jas-> Zaxnyd: Thanks, but really it simply comes from research and picking apart protocols
16:45 < Zaxnyd> ok, I think I'm gonna have a go at a PoC with passport+oauth
16:46 < Zaxnyd> I may be back with questions later :)
16:46 < Zaxnyd> thanks a ton for all the info guys.
16:46 < jdelgado> Good luck
16:47 < jas-> Yeah good luck
16:47 < Zaxnyd> ty!
16:53 < david___> Hi, I'm a JavaScript coder... I keep wanting to contribute to node.js or maybe a module.  I've read the contribution page, but I'm not sure what issues to work on in particular that would be easy for a newcomer to handle
16:55 < david___> was wondering if there might be any guidance/suggestions
16:55 < cpc> Hey guys, Im trying to install sailsjs and I am running the latest node (0.10.11) and npm (1.2.30) and I just ran 'sudo npm -g install sails' on OSX (10.8.3) and now when I try to run the 'sails' command it says not found. Ideas?
16:57 < jden_> david___: here's an oldie but a goodie: http://howtonode.org/how-to-module
16:57 < gildean> david___: create some module you feel is useful and publish it to npm, check the docs on https://npmjs.org
16:57 < jdelgado> david___: Try to make some middleware for Express, it's simple but can be extremely useful
17:04 <@isaacs> juliangruber: still around?
17:04 < juliangruber> isaacs: jap
17:04 <@isaacs> juliangruber: can you vim ~/.npmrc and remove the [token] section?
17:04 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:04 <@isaacs> juliangruber: probably should move to .npmrc.bak first or somethig
17:04 <@isaacs> juliangruber: but then see if that works.
17:04 <@isaacs> juliangruber: it looks like when you switch users, it's not resetting the token
17:05 <@isaacs> juliangruber: i still don't know why i'ts throwing a TypeError in the validate_doc_updaet, though, that's just bizarre.
17:05 < juliangruber> ok, removed, trying to publish now
17:06 <@isaacs> juliangruber: also, make sure that `npm whoami` reports the user who actually owns that package.
17:06 < juliangruber> oh, with the user that's actually owning the package i don't get errors anymore
17:06 <@isaacs> juliangruber: do you have multiple user accounts on purpose?  would you like me to merge them togetherd?
17:06 <@isaacs> juliangruber: kewl, so i think that was the issue.
17:06 < juliangruber> they're on purpose...
17:06 <@isaacs> juliangruber: great.
17:06 <@isaacs> juliangruber: so, even though you're switching the _auth entry in npmrc, it's not deleting the token
17:07 < DeathIncarnate-M> Can anyone explain to me if there is a way to make a global new connection so you don't have not call the CreateConnection method after every disconnection?  I was getting the "cannot enqueue after invoking quit" after googling the issue I came to the conclusion that you need to establish a new connection by calling the CreateConnection method after every disconnection. Is there a way around that to make a global connection 
17:07 <@isaacs> juliangruber: seems like lib/adduser.js ought to just always delete the token so that you'll get a fresh one, so that's b ug.
17:07 < fb55> isaacs: is there a way to change my npm account name?
17:07 <@isaacs> fb55: yes.  create a new account, and then send i@izs.me an email from the email address on the old one, and i'll move your packages over to the new one
17:08 < fb55> isaacs: okay, thanks!
17:08 < juliangruber> isaacs: still get the same error when publishing an publish from the wrong account. shouldn't it say something like "wrong account"?
17:08 < DeathIncarnate-M> Can anyone help with my problem? 
17:08 < DeathIncarnate-M> Is this possible to do? 
17:10 < Technocrat-Mobil> Lost connection. But anyone know about the CreateConnection method? 
17:10 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:10 < cpc> Anyone?
17:15 <@isaacs> juliangruber: yes, you should get a 403, not a "cb() not called!"
17:15 <@isaacs> juliangruber: also a bug
17:15 < joshuawscott> cpc, what does the -g option do?
17:16 <@isaacs> juliangruber: gist the npm-debug.log file?  or at least the output?
17:16 <@isaacs> juliangruber: and did you remove the [token] after switching accounts?
17:16 < cpc> joshuawscott: installs it globally
17:16 < DeathIncarnate> Can anyone help with a problem regarding Node.JS and the CreateConnection method?
17:16 < juliangruber> isaacs: oh, should i have switched accounts?
17:16 < DeathIncarnate> Is there a way to enable a CreateConnection method to work globally?
17:16 < jdelgado> joshuawscott: Installs globally, rather than just the project.
17:17 < DeathIncarnate> I want to create a way that you don't have to invoke a CreateConnection after every disconnect but rather only once.
17:17 < jdelgado> DeathIncarnate: Spamming isn't really a good way to get your question answered. No one knows.
17:18 < DeathIncarnate> Not spamming to be honest. I was on mobile and got disconnected rather frequently so I installed the client on my computer and asked the question again. jdelgado
17:18 <@isaacs> juliangruber: oh, no, i thought you did
17:19 <@isaacs> juliangruber: you mean, yo'ure on account2, publishing to a package owned by account1?
17:19 < jdelgado> DeathIncarnate: You asked it seven times within ten minutes. That's spamming, bro.
17:19 < juliangruber> isaacs: yes
17:19 < DeathIncarnate> Ok.
17:19 < juliangruber> isaacs: and initially i didn't know that i was on the wrong account because npm didn't tell me so
17:20 <@isaacs> right
17:20 <@isaacs> juliangruber: i get this:
17:20 <@isaacs> npm ERR! publish Error uploading package
17:20 <@isaacs> npm ERR! Error: forbidden user: testuser not authorized to modify npm-test-blerg3
17:20 <@isaacs> $ npm owner ls npm-test-blerg3
17:20 <@isaacs> npm http GET https://registry.npmjs.org/npm-test-blerg3
17:20 <@isaacs> npm http 200 https://registry.npmjs.org/npm-test-blerg3
17:20 <@isaacs> isaacs <i@izs.me>
17:20 <@isaacs> juliangruber: what error are you seeing?
17:21 <@isaacs> ahhh.. the publish -f is what gets the 500
17:21 <@isaacs> i see
17:21 <@isaacs> juliangruber: reproducing, thanks
17:21 < juliangruber> yes
17:21 < juliangruber> :)
17:21 < juliangruber> thank _you_:)
17:22 < DeathIncarnate> Here's another question. Is there a way to create maybe a class of some sort so you don't have to cae a var connection every time with the host, user, and password every app.get?
17:22 < DeathIncarnate> create*
17:22 < DeathIncarnate> A way to make it a smoother process of doing it?
17:23 < innociv> prototype to make psuedo classes.
17:23 < innociv> Oh
17:23 < innociv> Well that's just a general answer. But yeah
17:29 <@MI6> joyent/node: piscisaureus created branch jenkins-please-test-this - http://git.io/FY4OOg
17:33 < eere> is it ok to put a image or a video in a json object, as binary?
17:36 < innociv> Interesting question. Anything that's a string, or any of them valid types, should be fine.
17:37 < ed8> is there a way to get package information from local sytem ?
17:40 < ed8> when I run 'npm info generator-karma', sometimes it try to fetch info online (not always)
17:41 < jdelgado> eere: Yes
17:41 < eere> .
17:41 < jdelgado> eere: Sky is the limit as long as it is a string
17:41 < bret> Can anyone give me the name of the font used for the NPM logo?
17:41 < eere> string of anything?
17:42 < eere> think will just use curl
17:42 < jdelgado> eere: JSON is just a wrapper for content, so if you can convert it into something that fits into { "info": "WHATEVER YOU WANT" } - it will work
17:42 < jdelgado> You might hit a limit depending on how long it is, but it should work.
17:43 < eere> what i use for parsing atom, rss rdf ?
17:43 <@isaacs> juliangruber: fixed the TypeError throw in the validate_doc_update function
17:43 <@isaacs> juliangruber: now it properly returns a 403
17:43 <@isaacs> juliangruber: the bug still remains that npm doesn't crash on that error when doing publish -f
17:44 <@isaacs> juliangruber: so you get "cannot publish over existing version" which is incorrect
17:44 < joshuawscott> bret: http://www.dafont.com/gubblebum.font
17:44 < joshuawscott> bret: gubblebum blocky
17:47 <@isaacs> juliangruber: so, now, the unpublish will give you an error like this: https://gist.github.com/isaacs/5816298
17:47 <@isaacs> juliangruber: which is kinda big and overly verbose, but i mean, whatever.  don't do that ;)
17:49 <@isaacs> juliangruber: man, sometimes i kill me.
17:49 <@isaacs>       return npm.commands.unpublish([data._id], function (er) {
17:49 <@isaacs>         // ignore errors.  Use the force.  Reach out with your feelings.
17:49 <@isaacs>         publish([arg], true, cb)
17:49 <@isaacs>       })
17:51 < bret> joshuawscott: thanks!
17:52 < jas-> isaacs: Do you have a min?
17:52 <@isaacs> jas-: what's up?
17:53 < medeski> node-mysql with Amazon MySQL RDS instance - anyone help?
17:53 < jas-> isaacs: I am looking for the proper way to conform to the exports.DEFAULT_ENCODING option within the crypto api... should I implement this in the lib/crypto.js?
17:54 <@isaacs> jas-: what are you trying to do?
17:54 < medeski> jas AWS question?
17:54 < jas-> isaacs: Ensure my pr doesn't get rejected
17:55 <@isaacs> jas-: what's the pr?
17:55 <@isaacs> jas-: or, what will it be?
17:56 < jas-> isaacs: Here is the code in question (line #597 - 606) in my fork... https://github.com/jas-/node/blob/openssl-spkac/lib/crypto.js 
17:57 < jas-> isaacs: Currently the contribution will simply output a buffer object which can be converted to whatever format the implementer wishes, but after reviewing some of the other functionality it seems that it should account for the exports.DEFAULT_ENCODING specified within lib/crypto.js
18:00 <@isaacs> jas-: why not just ret.toString('encoding')?
18:00 <@isaacs> jas-: you only need a _decoder if it's a stream
18:00 < jas-> isaacs: That is what I am currently doing
18:00 <@isaacs> jas-: for example, if you'er streaming utf8, you might get bytes split between code points
18:00 < jas-> isaacs: Ah ha... well never mind then
18:00 <@isaacs> jas-: exportPublicKey just outputs a single chunk
18:00 <@isaacs> jas-: it's not streaming the public key out
18:00 < jas-> isaacs: This is true
18:01 <@isaacs> jas-: but, maybe this should take a second outEncoding argument?
18:01 <@isaacs> jas-: which then defaults to exports.DEFAULT_ENCODING?
18:01 <@isaacs> jas-: the encoding argument in that function is the encoding of the *input*
18:02 <@isaacs> jas-: it'd be better to do the buffer/string conversions in C++, using node::StringBytes
18:03 < jas-> isaacs: Such as outString = Encode(pkey, strlen(pkey), BUFFER);
18:04 < jas-> isaacs: I thought this was conversion was done automatically based on the DEFAULT_ENCODING
18:04 < jas-> isaacs: https://github.com/jas-/node/blob/openssl-spkac/src/node_crypto.cc line #3824
18:06 <@isaacs> jas-: i'm saying, it's more efficient to do that conversion in C++
18:06 <@isaacs> jas-: rather than relying on tye toBuf()
18:06 <@isaacs> jas-: just pass the string, encoding, outEncodign to the binding, and do it all in C++
18:06 <@isaacs> jas-: (i realize that a lot of the code in there does it the "wrong" way.  patches welcome)
18:06 < jas-> isaacs: So I am already doing it correctly (minus the outEncoding)
18:07 < jas-> isaacs: I just wanted to ensure my (first) pr was going to conform is all
18:09 < ed8> how do I force npm to get package information from local package?
18:10 < ed8> 'npm view -n generator-karma' fetch info from npmjs.org, but I don't want to as it slow down my script
18:25 <@isaacs> jas-: ok
18:26 <@isaacs> jas-: i appreciate your interest in doing things correctly
18:26 <@isaacs> jas-: but, you can always submit a pull req with mistakes.  its our job to help you fix them :)
18:26 <@isaacs> jas-: we don't reject pulls outright if they're a littel wrong.  worst case, we'll ask you to change some stuff and force-push, and then accept it with the changes.
18:26 < stephenwvickers> evilprobe: hello
18:27 < stephenwvickers> evilprobe: ah, you're not here, I'll check back later
18:28 <@isaacs> juliangruber: fixed on master.
18:28 <@isaacs> juliangruber: thanks!
18:49 < jas-> isaacs: yeah I did already issue a pr and have been working with you and others regarding native spkac support. I closed the pr because I bored the branch I was working on and will re-open it in a few minutes
18:52  * neeky thinks node (or maybe express) needs a good standards based RBAC module
18:53 < Zogot> Ahoy all
18:54 < fllr> .j grunt
18:54 < peterlubiana> Anyone on Hyperboria here ? I'm curious to what the "!)#!"=)# it is!
18:56 < neeky> well its a network based on cjdns - which is some type of encrypted ipv6 dns protocol
18:56 < neeky> so maybe it can be compared to tor
18:58 < fllr> Hey guys. How come grunt is not finding one of its plugins even though I installed it with npm?
18:58 < peterlubiana> Are there any special social networks there or smth like that, that are.. I mean.. Why would I be there? What is it there that is'nt here on the ordinary internet ?
18:58 < neeky> looking at this real time map: https://thefinn93.com/cjdns/map/ it appears to be p2p/mesh
18:58 < peterlubiana> neeky: Checking out your link.
18:59 < neeky> my guess is the same reason one might use the tor network - anonymity
19:00 < neeky> they claim its fast but i can't imaging what a p2p/mesh route table must look like
19:00 < neeky> vs say, BGP
19:00 < peterlubiana> neeky: Truth. 
19:03 < peterlubiana> neeky: I do not know what a BGP or .. what exactly a route table is.. I presume its some kind of dns thing or smthn. But can I like be connected to it with wifi, like i'm connected to the ordinary internet like here and access a whole new set of http://domains.com :D ?  
19:05 < neeky> I think the endpoints are the same, just the method you use to get there is different
19:07 < neeky> so you can get to wikipedia.org over either the internet using TCP/IP via your ISP or, via Hyperboria by connecting to the nearest hyperboria network node, tunneled over ypur ISP
19:08 < neeky> a rout table is how your home router knows where its upstream router is, and its upstream/peer, etc
19:08 < neeky> thats a very simplified description
19:13 < peterlubiana> I cant access any website when connected to hyperboria right? thx for the explanations neeky
19:14 -!- mode/#Node.js [+o TooTallNate] by ChanServ
19:15 < neeky> I'm not sure exactly - my recollection was that you could get to the regular internet, but it may be more like .onion domains on Tor
19:15 < neeky> that are only valid inside the network
19:16 < peterlubiana> Aha. Tor is something like the same thing =
19:16 < Zogot> Hey All. Completely starting out. Is this method of writting ok?  Apologies for beginner question. http://pastie.org/8060448  Looking to start and start on the right foot.  Looking at Felix's Node Guide and a few other resources Ive been collecting
19:16 < peterlubiana> ? *
19:16 < neeky> I think so
19:17 < innociv> Holy shit. How did I not know "eval()" was a thing for years? =[
19:17 < peterlubiana> neeky: Checking it out! thx for the infos neeky. I dont know where to turn to . I feel like the node.js people were the right bunch. Good people :D
19:17 < neeky> innociv, now forget that you ever knew it
19:17 < innociv> Hahaaaa.
19:17 < innociv> I understand the risks
19:18 < peterlubiana> The main prob with eval() is that you can get malicious code right ?
19:18 < innociv> Yes
19:18 < neeky> it's like me handing you a pill and saying "here, take thi"
19:18 < neeky> s
19:18 < jdelgado> make sure you run all your requests through eval() incase you miss something
19:18 < peterlubiana> Right. But its so usefull! Damn thee evil people of the world!
19:19 < jas-> lol @ jdelgado
19:19 < innociv> Nothing is stoping you from using it if you have a closed enviroment
19:19 < Sawny> When would you like to use eval?
19:19 < neeky> as long as you are dang sure where the data you stick in eval comes from
19:19 < peterlubiana> STOP JDELGADO!
19:19 < peterlubiana> XD
19:20 < peterlubiana> I dont know it seems like a sweet thing. You can get code to run just by accepting a string.
19:20 < jdelgado> eval = bad code :/
19:20 < neeky> yeah, THAT sounds GREAT /s
19:20 < jas-> Sad, I think I need to move away from the jade template engine... ./node_modules/mocha/node_modules/jade/bin/jade:if (program.obj) options = eval('(' + program.obj + ')');
19:20 < peterlubiana> Request some data in a httprequest and just run it at that right there.
19:21 < eviltik> jdelgado: eval = bot prototype, empty, so you can upload evilcode
19:21 < peterlubiana> XD.. yea.. I guess you guys are right.
19:21 < jas-> stylus too ... ./node_modules/stylus/bin/stylus:        options = eval('(' + options + ')');
19:21 < jdelgado> p much
19:21 < Sawny> eval(<userinput>) === hacked_and_rooted
19:22 < Sawny> -> true
19:22 < peterlubiana> XD
19:22 < eviltik> Sawny: i like it
19:22 < eviltik> +1000
19:22 < peterlubiana> Scary sht.
19:22 < neeky> oh god, i just grepped for "eval(" in my project node_modules dir.
19:22 < neeky> i should never have dont that
19:22 < jdelgado> When i used to code PHP, I saw a poject that literally did eval($_GET['cmd']), guess who rebooted the machine?
19:23 < Sawny> lol
19:23 < peterlubiana> hahaha thats sweet..
19:23 < peterlubiana> Even i who dont understand php / js that well understand that that is very very stupid.
19:23 < peterlubiana> ( i ALMOST FEEL SMART NOW :D )
19:23 < jdelgado> indeed
19:23 < peterlubiana> *almost*
19:23 < jdelgado> anyone in here have a das keyboard? Looking at them right now
19:24 < Sawny> no, but I was looking at them before
19:24 < jdelgado> I've heard mechanical keyboards are godly for programming
19:24 < Sawny> but I bought a Truly Ergonomic Keyboard instead
19:24 < peterlubiana> Does Node.js totally replace php?
19:24 < Sawny> Yeah, I really like the brown switches
19:24 < Sawny> peterlubiana: Yes
19:25 < peterlubiana> In your opinions? I'm not sure if i should spend time on learning php now or just focus deelpy on node.js
19:25 < jdelgado> I wish I could use the ergonomic ones, but I cant type on them
19:25 < eviltik> peterlubiana: FOCUS DEELPY ON NODE
19:25 < Sawny> peterlubiana: Well, I have been using PHP for ~4 years, now I just stared learning node.js. And I really like node.js
19:25 < jdelgado> In PHP you have to connect to the database on every request.. lol
19:26 < peterlubiana> Do you ever feel limited when working with node.js vs php ?
19:26 < eviltik> peterlubiana: think "event based": node.js, python+twisted, erland, + some java stuff. The rest will be a shit in few months
19:26 < eviltik> %s/erland/erlang
19:26 < peterlubiana> jdelgado: ah i didnt know that! .. 
19:26 < Zogot> jdelgado: Mechanicals are one of your best investments if you are a programmer
19:26 < Zogot> no doubt. I love mine
19:26 < jdelgado> Zogot: What you got bro
19:26 < jas-> Zogot: mechanical?
19:27 < Sawny> peterlubiana: I did a twitter clone in node.js and it felt amazing. I really love npm
19:27 < Sawny> peterlubiana: and mongoDB
19:27 < eviltik> Sawny: how many times you did it ?
19:27 < peterlubiana> Sweet have it up an running ?
19:27 < Zogot> jdelgado: Ducky
19:27 < peterlubiana> Sawny: *wanna see it*
19:27 < Sawny> no, maybe I have it on github
19:27 < Zogot> jdelgado: http://i.imgur.com/Bdmfe89.jpg
19:27 < peterlubiana> sw33t. 
19:28 < Sawny> nope, I dont but I can upload a ZIP file.
19:28 < Zogot> http://i.imgur.com/cWJHXrX.jpg
19:28 < jasonkuhrt> I have a tls server that is accepting a tls client, the tlsServer 'secureConnection' emits, but the tlsClient 'secureConnect' does not
19:28 < jasonkuhrt> should this even be possible? why might this be?
19:28 < Zogot> blue switch (clak clack clack)
19:28 < neeky> Zogot, I have a MS sidewinder w/backlit keys
19:28 < neeky> it's mechanical, but I don;t think it's cherry switcher
19:28 < jdelgado> Zogot: Very nice - i'm between that, a das or those ultimate ones
19:29 < Zogot> das ultimates are awesome too. They didn't ship here
19:29 < neeky> checkout the sidewinder 4 - < $40 USD
19:29 < jasonkuhrt> nm... seems that I am getting a DEPTH_ZERO_SELF_SIGNED_CERT
19:29 < Zogot> I got the 10keyless variant also
19:29 < jdelgado> Which switch is the best for programming? Blue?
19:29 < neeky> it's a gamer KB, but that makes it excellent for programming
19:29 < Zogot> jdelgado: http://i.imgur.com/6AuoN0W.jpg
19:29 < Sawny> jdelgado: Brown
19:29 < Zogot> jdelgado: If you love the sound, and no-one is around you, blue all the way I say
19:29 < Sawny> Brown are like blue but more silent
19:29 < neeky> jdelgado, that's subjective
19:30 < jdelgado> Ah
19:30 < Zogot> but if you are around others, especially in an office, brown or one of the silent ones anyway is real nice
19:30 < jdelgado> Zogot: Looks good bro
19:30 < mikeerickson> New node junkie, any must use packages I should know about 
19:30 < neeky> some folks like blue + orings under the keys
19:30 < Sawny> Even brown has a higher sound then normal keyboards, blue is just to much for me
19:30 < Zogot> Sawny: Too much?! Not enough!!!
19:30 < Sawny> xD
19:30 < neeky> mikeerickson, express, connect,and underscore
19:30 < jdelgado> The das slient line are red, what about those? lol
19:31 < Sawny> http://www.trulyergonomic.com/store/image/cache/data/Truly_Ergonomic_Computer_Keyboard-207-BL-750x600.jpg
19:31 < Sawny> That is my keyboard
19:31 < Sawny> :D
19:31 < Sawny> blank <3
19:31 < Zogot> jdelgado: I think brown also had the tactice response, which is nice
19:31 < mikeerickson> Awesome, already using all those (been an _ user for long time). 
19:31 < Zogot> I cant remember them all now, theres silents with and without the little spring ( that spring causes you to feel it click )
19:31 < jdelgado> Sawny: Blank = awesome, but how do you handle that wierd key layout?
19:31 < neeky> the  MS Sidewinder x4 has 3 banks of 6 macro keys that are sweet for programming
19:31 < Sawny> jdelgado: It isn't wierd at all. It's super awesome if you touch-type
19:32 < peterlubiana> I love this channel.
19:32 < neeky> but sadly 0 support on linux for the macros- they dont send regular scan-codes
19:32 < Sawny> +1
19:32  * eviltik waiting for stephenwvickers
19:32 < jdelgado> @neeky looking now
19:32 < Zogot> OT is greatly frowned upon here? Only just joined the channel today :p
19:33 < Sawny> my TEK (truly ergonomic keyboard) forced me to learn touch typing, that was my primary reason why I choosed it over the das keyboards.
19:33 < Zogot> Sawny: das ultimate will teach It too I rekon
19:33 < Zaxnyd> Sawny, I'm chuckling thinking of someone less capable trying to use your computer
19:33 < jdelgado> Sawny: Now they have the das ultimate :)
19:33 < eviltik> shall i make an ads for my node stuff ?
19:34 < Sawny> Zaxnyd: They cant ;)
19:34 < neeky> x4 has 26 anti-ghosting keypress capability, but that's mainly a gaming thing
19:34 < Sawny> Yes, I know about das ultimate. But I have really hard to reach B and N at these "normal" keyboards.
19:34 < jdelgado> There used to be a blank keyboard in my college computer lab, whenever old people went to it they asked why the keyboard was broken.. lol
19:34 < Sawny> the TE layout makes touch-typing much easier
19:34 < eviltik> angels ? shall i make my ad for my node stuff ? 
19:35 < eddyb> has anyone seen a gdb client/scripting interface written in node.js?
19:35 < Sawny> and I really love the 3 spaces. I have mapped them to space, enter and alt+gr
19:35 < Sawny> jdelgado: xD
19:35 < Sawny> *I start to like IRC (new to IRC thing)*
19:36 < Sawny> (just read http://net.tutsplus.com/tutorials/tools-and-tips/irc-is-back-heres-your-starter-guide/ and thought I should give it a shot)
19:36 < jdelgado> IRC sucks when you are trying to get stuff done, but otherwise it is great
19:36 < eviltik> you all are little evils, i know that, you all are curious
19:36 < eviltik> so SCAN the WORLD !!
19:36 < eviltik> https://github.com/eviltik/evilscan
19:36 < neeky> irc is back?  It never went anywhere
19:37 < Sawny> I thought just hackerzzzz used it :p
19:37 < Sawny> H4XX0rzzz*
19:37 < eviltik> i'll implement syn scan when i'll have 100 stars
19:37 < jdelgado> I wonder how many hacking programs have been made with node
19:37 < tuhoojabotti> I've been ircing since I was 12 or so. 
19:37 < Sawny> hm, when I was 12 I used MSN
19:37 < neeky> the #vim room has 893 people in it - programmers use irc a lot
19:37 < tuhoojabotti> Now I'm 13. ":D"
19:38 < eviltik> omg
19:38 < jdelgado> lmao
19:38 < Sawny> Nice with young programmers :)
19:38 < tuhoojabotti> Okay 19, I didn't use msn for long.
19:38 < neeky> eviltik, now you are spamming
19:39 < eviltik> neeky: just 3 lines, in the same seconds i'm sorry
19:39 < neeky> but asking for stars on GitHub is a bit :/
19:40 < neeky> now Usenet - there's a weird place
19:40 < Sawny> Where can I found, like, more general IRC channels? Does anything like #programmers exists?
19:40 < tuhoojabotti> I never used bbs. 
19:41 < neeky> irc tends to be pretty topical
19:41 < tuhoojabotti> Sawny: javascript at leats
19:41 < squeeks> #web is a generic thing.
19:41 < neeky> ask your irc client to give you a list of rooms and go get a coke
19:41 < tuhoojabotti> neeky: channels yeah, but there's always off topic. 
19:41 < Sawny> ok, thx
19:42 < eviltik> a bit what ? will you continu something if you know nobody have interest for that ? No. Github have no stats, npm just begun to have some poor stats, i'll have more energy (i mean spend lot's of times) on a project if i know some people will use it. That's wrong with that ?
19:42 < tuhoojabotti> Like our minecraft channel is about programming and doctor who. 
19:42 < neeky> also, some rooms have a double hash room for more off-topic bs - like ##Node.js
19:42 < neeky> yeah, you all clicked it
19:43 < Sawny> ok, thx
19:43 < tuhoojabotti> eviltik: I usually create things if I want to use them myself. 
19:49 < neeky> eviltik, there's nothing wrong with wanting to get people to know about your project, and I'm sure you are proud of it
19:50 < neeky> but asking for karma(stars) is a bit hokey.  Like android apps that ask for ratings to unlock features 
19:50 < squeeks> have you not ever looked at code you wrote 12 months ago?
19:50 < neeky> squeeks, Yeah, it's like reading greek
19:51 < squeeks> or hundreds of lines of shame
19:51 < squeeks> "hahaha that's not my code… git blame…. oh. :[ "
19:51 < neeky> heh
19:52 < neeky> I stated in reply to a reddit thread that Lazy programmers are usually very efficient, and that thread went south quickly
19:52 < neeky> I'm a very laz yprogrammer
19:52 < Havvy> Link?
19:52 < squeeks> hubris, laziness and something else is what Larry Wall said...
19:53 < neeky> and they thought lazy="let me combine this 200 line function into one line"
19:53 < Sawny> Laziness can be a good thing, it often make you look for librarys that does what you want instead of re-inventing them
19:53 < neeky> As a lazy programmer, I would never spend any effort shortening a function down into this perl-esque monstrosity just for the sake of doing it
19:54 < neeky> the point of lazy programming is you find the best way to do something with the least amount of code
19:55 < eviltik> tuhoojabotti: me too. and after ? don't tell me you will not be happy if you know that somes peoples are using what you have done, and perhaps in bonus, people will contribute for it. I can imagine a guy which coded something cool (i didn't say magic/famous/fabulous), he want to share, post his code on an ftp server without more than a poor readme, and disapointed because nobody have a look at his work. Yes i'm proud of that, 
19:55 < neeky> Havvy, it wasn't a programming thread, it was a video of the world's laziest airplane loader
19:55 < Havvy> Aj/
19:55 < Havvy> Ah. **
19:56 < eviltik> neeky: so if nodejs team was like you they should make as for erlang, because it's already existing
19:56 < eviltik> %s/as/ads
19:57 < neeky> not really, node exists because javascript already existed and is heavily used on the web
19:57 < neeky> were node was meant to serve
19:57 < Havvy> Programs in Erlang and programs in Node are quite different.
19:58 < eviltik> before node, no js server side, and it's cool because it event's based. people needs erlang or python/twisted because it's event's based.
19:58 < neeky> the point i was making is your project will get popular if it's good, and won;t if it's not - just by being in npm and github with a well crafted readme, good test coverage, and not sucking
20:01 < Havvy> neeky: I'd say that's false. Some advertising is necessary.
20:03 < eviltik> i know that, evidence, and i'll add more: your module must feel a particular need. Really few projects are related to security and "not web related", you can make a funny stuff, but it will stay on your repository if you don't make little ads. I'll not stay here all the day speaking about my fucking module, it's the first time and it will be the last. This channel is logged and archives are on google. I just make "evilscan" ap
20:04 <@MI6> joyent/node: Fedor Indutny master * bf8dc07 : crypto: change assertion to condition in bio - http://git.io/Ym9Zhw
20:05 < eviltik> this has been said, now returning in my evil bed with my evil pizza, i'm evaling(TCPBuffers). Long life to nodejs
20:07 < neeky> :-|
20:07 < tphummel> hello. is it an acceptable practice to store arbitrary data in package.json? for example, "app_port":"3000"
20:08 < context> no.
20:08 < jdelgado> You can, but that isn't really a good practice.
20:08 < jdelgado> Make a config.json and require it.
20:09 < jdelgado> tphummel: ^
20:09 < tphummel> roger that. thank you context, jdelgado
20:09 < jdelgado> Good luck
20:09 < Sawny> Why would you like to require users to use port 3000?
20:10 < jdelgado> Sawny: If it is behind a load balancer
20:10 < jdelgado> Sawny: Or if it is for something other than http
20:10 < Sawny> But why _require_ it? Let the user choose by him self
20:10 < Sawny> or atleast have an option to choose
20:10 < neeky> Havvy, I guess if I'm trying to be recognized for something that's true, but most of what i release is crap that was a byproduct of some otehr development project
20:11 < jdelgado> Sawny: That is why he is putting it in a config?
20:11 < neeky> node packages I release from my perspective are a means to an end
20:12 < neeky> that's where most of the good stuff comes from imo
20:14 < gildean> Sawny: the require just reads the json file in sync, automagically parses and caches it
20:14 < neeky> mongoose is a good example. Tip O' the hat to LearnBoost
20:15 < neeky> require - var config = require('config.json'); not YOU MUST USE PORT 3000!
20:16 < tphummel> Sawny:  port can be overridden by env var. but i'm trying to remove app specifics from my Vagrantfile. i want it to read the default project port and forward it for me when i'm doing dev
20:16 < Stew-a> does anybody know of a node module to detect how much load a particular node instance is under, for use in monitoring or if you're trying to do your own load balancing
20:17 < neeky> Stew-a, that is usually done by a third party app like monit
20:17 < neeky> or AWS Elastic Beanstalk :)
20:18 < stephen_vickers> eviltik: hello
20:20 < Stew-a> neeky: I'm thinking more of how much 'free time' a particular node instance has, i figured node itself might be the best source of this information, and i want to use it in node to try and keep loads balanced by alocating work across multiple instances evenly
20:20 < neeky> i see
20:21 < neeky> what's your metric, CPU% of the node process?
20:21 < Havvy> Are there any IRCds in Node?
20:22 < squeeks> yes.
20:22 < Stew-a> neeky: good question, i'm just trying to design something and figure out if it's possible at this point, but that sounds like a reasonable metric to be going on with
20:22 <@MI6> joyent/node: Trevor Norris master * f5e13ae : buffer: write strings directly from call - http://git.io/KvHCeQ
20:22 < neeky> I cant imagine there's not hundreds :)
20:22 < neeky> there's many, that's why I asked
20:23 < neeky> network IO, HD IO, RAM, etc
20:23 < neeky> all can be bottlenecks
20:23 < Stew-a> neeky: you're right of course, it's likely to be CPU that'll be the bottleneck i suspect
20:24 < neeky> probably, but disk io is pretty expensinve if it's a data intensive app
20:25 < runvnc> My boss is insisting that we put all of our private packages in one repo.  I can't make that work
20:25 < runvnc> how can I convince them that we need a separate repo for each module
20:26 < squeeks> with facts, reason and alternatively, threatening to resign over excessive micro management.
20:26 < pachet> the last one usually works the best
20:26 < pachet> even if it 'backfires' you still win
20:26 < runvnc> the problem is he isn't used to having so many repos so he thinks its crazy
20:27 < runvnc> thanks guys
20:27 < Stew-a> neeky: i don't think that'll be a problem in my situation, anyway - do you have any suggestions about how i could go about this?
20:27 < neeky> what OS is node running on?
20:28 < neeky> runvnc, you could always have a nested repo, and not tell him :)
20:28 < jasonkuhrt> in node 0.10 what does it take a minimum to get a tls client working with a tls server?
20:28 < runvnc> whats a nested repo
20:28 < Stew-a> neeky: probably ubuntu, but some linux variant one way or another, the details haven't been nailed down yet, as i said i'm just plotting
20:28 < jasonkuhrt> there's a whole bunch of issues related to this topic that are confusing me
20:28 < jasonkuhrt> i.e. https://github.com/LearnBoost/socket.io-client/issues/550
20:28 < jasonkuhrt> etc
20:29 < jasonkuhrt> or rather https://github.com/joyent/node/issues/3949
20:29 < samholmes> Is the core hard to understand as a non-c or any other language other than JS coder
20:29 < samholmes> ?
20:29 < runvnc> oh you mean submodules. well I would still have to put them in separate repos and I have to put them in the organizations github
20:29 < runvnc> so can't hide that
20:30 < jasonkuhrt> further http://nodejs.org/api/tls.html#tls_tls_connect_options_callback would make you think that false is still the default, which is not true?
20:31 < neeky> Stew-a, well linux is much easier, since you have the /proc filesystem
20:32 < neeky> /proc/<NODES PID>/stat has gobs of info about your process
20:32 < neeky> youll have to read up on how to interpret that file
20:32 < Stew-a> neeky: good point, monitoring that should give me the information i need, thanks
20:33 < effractur> hi, does someone know about a implementation for powerpc ?
20:33 < squeeks> well… when v8 supports it...
20:34 < effractur> i know that, but is there a way to swap v8 or compile it for ppc?
20:35 < nathan7> effractur: What the heck are you trying to do now?
20:35 < squeeks> run it on his SGI Indy, clearly.
20:35 < effractur> nathan7: i want to run etherpad pro :P
20:35 < effractur> on powerpccc
20:36 < nathan7> effractur: What still usable device still has PowerPC?
20:36 < effractur> nathan7: well a lot of old hardware is quite alright for a low volume server
20:36 < effractur> and it is activly supported by debian
20:37 < nathan7> effractur: given the noise and power use of old hardware and the cost of a cheap ARM server.. meh
20:37 < effractur> nathan7: well the powerarch is quite nice 
20:37 < effractur> but y i could just run a raspi
20:38 < nathan7> PowerPC as arch is cool
20:38 < nathan7> But.. as real-life processors, meh
20:38 < effractur> well the G4-G5 still perform quite well
20:38 <@tjfontaine> turns out people still like risc
20:38 < effractur> width optimized code
20:38 < nathan7> tjfontaine: of course we do
20:38 < nathan7> x86 clearly needs to die
20:38 <@tjfontaine> :)
20:39 < effractur> and i think arm+neon also quite cool
20:39 < neeky> Stew-a, pidstat -c node
20:39 < effractur> but y the desing of the FPU+SSE is terabad @x86
20:40 < effractur> also now the are stacking AVX on top
20:40 <@tjfontaine> stupid internet, getting sloowww clones from github at home, but work and all the dcs I use are fine
20:45 < samholmes> Where there really only 6 things changed in .10?
20:46 <@tjfontaine> samholmes: between 0.8 and 0.10?
20:46 < samholmes> yeah
20:46 < samholmes> oh I was just reading .10.12
20:47 < samholmes> A lot of this stuff I don't remember/understand
20:47 < samholmes> what was uv again?
20:47 < samholmes> libuv*
21:05 < tim_smart> samholmes: libuv is the io library node uses
21:05 < samholmes> Oh, I wonder how that works
21:05 < samholmes> does uv stand for ultraviolet?
21:06 < tim_smart> samholmes: It abstracts cross-platform differences in async io
21:06 < tim_smart> So on *nix uses epoll etc, and on win32 uses iocp
21:07 < jdelgado> okay, just bought the das
21:20 < Kneta> If I have "opened up" stdin with process.stdin.resume() and then read some data from it and later uses process.stdin.pause(); shouldnt my program be able to exit then?
21:21 < Kneta> no it seems to never finish I have to kill the process
21:21 < Kneta> now*
21:22 < tim_smart> Kneta: You have to call process.stdin.end()
21:22 < Kneta> tim_smart: ok thanks =)
21:22 < tim_smart> Actually no that is wrong
21:23 < Kneta> hmm ok
21:23 < tim_smart> You have to end the stdin stream from the other side (Ctrl + D) in the terminal etc
21:24 < Kneta> Isnt that a bit weird? I mean there most be a lot of occasions where one wants to enter a value in the terminal and the program should take that input and present some data and then exit
21:25 < Kneta> It seems "bad" that you have to "kill" it explicitly from the terminal?
21:26 < jdelgado> Devorak or Querty?
21:26 < jasonkuhrt> Can anyone help debug why a simple node 0.10.x tls server/client setup would be ending with client error: ECONNRESET: socket hang up
21:26 <@tjfontaine> querty would be a really odd one off design
21:26 < jdelgado> lmao
21:26 < jdelgado> qwerty*
21:26 <@tjfontaine> you made me look at my keyboard, I though I was going crazy
21:26 <@tjfontaine> jasonkuhrt: did you gist the code somewhere?
21:26 < tim_smart> Kneta: You could always process.stdin.destroy() - 
21:27 < jdelgado> no, I just was typing with devorak and failed
21:27 < tim_smart> That will force close it
21:27 < jasonkuhrt> tjfontaine: I will, sec
21:27 < Kneta> tim_smart: ok thanks
21:31 < jasonkuhrt> tjfontaine: https://gist.github.com/jasonkuhrt/28a278d59bbcfddaefd6
21:32 <@tjfontaine> jasonkuhrt: can you verify that `openssl s_client -connect host:port` works?
21:33 < jasonkuhrt> tjfontaine: verifying
21:33 < jasonkuhrt> tjfontaine: hm, no
21:33 < jasonkuhrt> openssl s_client -connect localhost:9898 -crlf                     CONNECTED(00000003)
21:33 < jasonkuhrt> depth=0 /C=US/ST=New York/L=New York City/O=Little Bits/CN=hlvh.me
21:33 < jasonkuhrt> verify error:num=18:self signed certificate
21:33 < jasonkuhrt> verify return:1
21:33 < jasonkuhrt> depth=0 /C=US/ST=New York/L=New York City/O=Little Bits/CN=hlvh.me
21:33 < jasonkuhrt> verify return:1
21:34 < jasonkuhrt> 41370:error:140790E5:SSL routines:SSL23_WRITE:ssl handshake failure:/SourceCache/OpenSSL098/OpenSSL098-47.1/src/ssl/s23_lib.c:182:
21:34 <@tjfontaine> jasonkuhrt: ok, so you're probably not loading the keys appropriately
21:34 <@tjfontaine> jasonkuhrt: also, next time gist that :)
21:34 < jasonkuhrt> tjfontaine: okay, gist everything!
21:35 < jasonkuhrt> tjfontaine: got it
21:35 <@tjfontaine> jasonkuhrt: it's the polite thing :P
21:35 < jasonkuhrt> tjfontaine: roger
21:35 <@tjfontaine> jasonkuhrt: I have an issue filed currently that we can(and should) do a better job of informing the user that we never properly setup the context right in the case of bad keys
21:36 < jasonkuhrt> tjfontaine: I'm not sure that's the problem in my case though
21:37 < jasonkuhrt> i.e. the command: openssl s_client -connect localhost:9898 -crlf
21:37 < jasonkuhrt> does not include the key/cert
21:37 < jasonkuhrt> seems wrong to me, maybe I screwed up the openssl test therefore?
21:37 <@tjfontaine> you mean it doesn't report any certs when you're connecting?
21:38 < jasonkuhrt> tjfontaine: sec, I'm going to try openssl s_client using -cert and -key
21:38 < jasonkuhrt> http://www.openssl.org/docs/apps/s_client.html#
21:39 <@tjfontaine> jasonkuhrt: -cert and -key should only be necessary if you're testing client certificate submission
21:39 < jasonkuhrt> tjfontaine: which I am? https://gist.github.com/jasonkuhrt/28a278d59bbcfddaefd6#file-server-js-L12
21:40 <@tjfontaine> right well
21:40 < jasonkuhrt> tjfontain: if I remove those lines it openssl s_client works
21:41 < jasonkuhrt> tjfontain: and then the client error becomes: "This socket is closed."
21:41 <@tjfontaine> btw I have an e on the end of my name :)
21:42 <@isaacbw> but pressing tab is too hard
21:42 <@isaacbw> *easy
21:43 <@tjfontaine> jasonkuhrt: ok, and so with s_client with submission are still failing?
21:43 < jasonkuhrt> tjfontain: see shell output https://gist.github.com/jasonkuhrt/28a278d59bbcfddaefd6#file-shell-output
21:44 < jasonkuhrt> tjfontaine: it appears that with the tls server {requestCert: true} s_client fails even when including the -cert and -key
21:44 <@tjfontaine> well int hat case it needs the ca
21:44 < jasonkuhrt> tjfontaine: ah, yes true, let me try that
21:46 < jasonkuhrt> tjfontaine: failed with -CAfile https://gist.github.com/jasonkuhrt/28a278d59bbcfddaefd6#file-shell-output
21:47 <@tjfontaine> jasonkuhrt: ok, but verify was still 1, which means something disagreed about who was valid
21:47 < jasonkuhrt> tjfontaine: that's like an exit code right? 0 is okay anything else uh-oh?
21:47 <@tjfontaine> ya
21:48 <@tjfontaine> jasonkuhrt: if you set rejectUnauthorized to false does it work? I notice you don't use the CA in the server
21:49 < jasonkuhrt> tjfontaine: so I am doing something wrong in my openssl 1. key / 2. csr / 3. cert steps?
21:49 < jasonkuhrt> tjfontaine: checking
21:49 < jasonkuhrt> tjfontaine: yes that works
21:50 <@tjfontaine> jasonkuhrt: ok so your server isn't verifying the remote certificate
21:51 < jasonkuhrt> tjfontaine: "remote" certificate === client certificate?
21:51 < jasonkuhrt> tjfontaine: the server needs {ca: [<client-cert.pem>]} in other words?
21:52 <@tjfontaine> jasonkuhrt: it needs the same ca that the cert is signed with
21:52 < jasonkuhrt> tjfontaine: so if the client is self-signed the server needs the client's private key??
21:52 < jasonkuhrt> tjfontaine: isn't that counter?
21:54 -!- mode/#Node.js [+o ryah] by ChanServ
21:54 <@tjfontaine> jasonkuhrt: well if its self signed you need to decide what makes sense, a pkey could be used or you may just know the fingerprint, it's up to you
21:55 < jasonkuhrt> tjfontaine: the client cert AKA public key works
21:55 < jasonkuhrt> ca: [readFileSync('./test/client-cert.pem')],
21:55 < jasonkuhrt> tjfontaine: then I can make the server once again: rejectUnauthorized: true
21:55 < jasonkuhrt> and openssl is able to connect
21:56 < jasonkuhrt> tjfontaine: have to go but thanks for your help so far, I'll probably have to come back and ask more questions because the node tls client is still not working even though openssl is
21:56 <@tjfontaine> people here should be able to help
21:57 < jasonkuhrt> tjfontaine: also it seems correct to me to pass the client cert to server since that is a public key and okay to share, unless I am mistaken this is perfectly fine?
21:58 <@tjfontaine> jasonkuhrt: it's ok to share, just means that for each person you want to validate you need to know them in advance, which doesn't necessarily map to a delegated mechanism like x509 stuff
22:12 < neeky> care to share an opinion on "search" as a REST-ful 1st class resource?
22:12 < neeky> as in /user/search?address=123%20main%20st
22:14 < neeky> so /user/123 fetches user with id 123, but /user/search?lname=martin searches for a user with last name  = martin
22:15 < tim_smart> neeky: I prefer /user?q=xyz
22:15 < neeky> I'm looking for issues that may occur down the road as the app grows and evolves
22:15 < tim_smart> or /user?lname=martin
22:16 < neeky> so my logic would be if the resource is /user AND there is a query string, assume a search
22:16 < tim_smart> Yes
22:16 < neeky> i like it - that lets me add a search to every 1st class resource
22:16 < neeky> with out more routes
22:16 < tim_smart> Could do /user.json?lname=martin for api etc
22:17 < alchimista_> I need help doing this query: https://gist.github.com/anonymous/c4e8567a40125ece7d31
22:17 < alchimista_> this is the sql version of what i am going to do: select * from pins where id in (select id from msgs where username='bob')
22:18 < neeky> nosql aint rdbms :)
22:18 < neeky> alchimista_, before you can query, you need a properly designed schema - do you have that?
22:18 < tim_smart> alchimista_: pins have the same id as msgs?
22:19 < alchimista_> in msgs I have pin_id saved
22:19 < neeky> I'm still not over it, but thinking like mongoose is hard when you've done RDBMSs for a while
22:20 < neeky> alchimista_, could you add your schemas to that gist?
22:20 < tim_smart> alchimista_: You need to build an array of pin id's then :)
22:20 < alchimista_> "You need to build an array of pin id's then :)" , how?
22:20 < tim_smart> for (var i = 0, il = msgs.length; i < il; i++) { pinIds.push(msg.pin_id) }
22:20 < alchimista_> wow
22:21 < alchimista_> thank you, I try now
22:21 < neeky> :)
22:21 < tim_smart> Then pin.find({ id : { $in : pinIds } })
22:22 < alchimista_> great, I am trying it now
22:26 < alchimista_> tim_smart: I recieve this error: [TypeError: Cannot read property '_id' of undefined]
22:26 < alchimista_> maybe because of that for loop
22:26 < alchimista_> ?
22:31 < neeky> don't you need a populate or two in there?
22:31 < Technodrome> good day
22:32 < alchimista_> neeky: i didnt understand
22:32 < Technodrome> async the best way to do sql queries where you wait until finished? 
22:33 < neeky> alchimista_, this is mongoose ORM, correct?
22:33 < alchimista_> yes
22:33 < jdelgado> The MongoDB synatx makes my eyes bleed
22:35 < neeky> subdocuments don;t get added to a parent document until you call populate()
22:36 < neeky> the undefined usually means the parent model does not have a reference to the child model you are trying to fetch
22:37 < neeky> if you look in the mongoose git project under /examples/population it may make more sense
22:37 < neeky> there's examples that cover the exact query you are trying to do
22:37 < alchimista_> ok, thank you for the info, I am gonna check that
22:38 < neeky> https://github.com/LearnBoost/mongoose/blob/master/examples/population/population-across-three-collections.js
22:38 < neeky> that one will get you 90% of the way
22:39 < alchimista_> neeky: I just change my code to this: https://gist.github.com/anonymous/df75b9cb3b05e9b2eeee  but still the same error
22:39 < alchimista_> meanwhile I check the example on mongoose git
22:41 < s5fs> Is node_mdns the best module for mdns? I'm getting some errors and before I go down the rabbit hole I want to ensure I'm using the right stuff.
22:42 < alchimista_> neeky: did u see my updated code, so u still think i have to use populate, or it is okay like https://gist.github.com/anonymous/df75b9cb3b05e9b2eeee this
22:43 < neeky> I'm not an expert by any means - I just happened to be doing almost the exact thing today - I can't tell without seeing the schema for each of these models
22:44 < neeky> tim_smart may be able to use his apparent x-ray vision to advise better
22:45 < neeky> is members.user_id a reference to another schema?
22:46 < alchimista_> no, it is just a member array that has id of user, it is not a problem
22:46 < alchimista_> the first query retun result
22:46 < neeky> i see
22:46 < alchimista_> definiation of the member members: [{username:String, user_id:Schema.Types.ObjectId}],
22:47 < neeky> so you join them at runtime
22:47 < neeky> what does msgs look like?
22:47 < alchimista_> in the new version, Instead of msgs i am using conversation
22:47 < alchimista_> did u check the new gist that i paste it?
22:48 < alchimista_> https://gist.github.com/anonymous/df75b9cb3b05e9b2eeee
22:49 < alchimista_> I understood what was the problem neeky:
22:49 < neeky> is err empty on the Conversation.find?
22:50 < neeky> so it's working?
22:50 < alchimista_> neeky: check this https://gist.github.com/anonymous/fc6e809cf87b5e7958fd
22:51 < alchimista_> the problem is that forloop for creating the array of pinIds
22:51 < alchimista_> so can u please help me in writing that for loop for creating the array of pinIds from the results
22:53 < neeky> hang ona sec
22:53 < alchimista_> neeky: thanx
22:53 < neeky> gonna build you a jsfiddle
22:54 < alchimista_> ;)
22:54 < neeky> conv is already an array of pin_ids
22:55 < neeky> so you dont need the pinIds.push
22:56 < alchimista_> actually i change now to _id: {$in :conv ..
22:56 < alchimista_> i get this error: https://gist.github.com/anonymous/8c261c0e05ac74cd7549
22:56 < Zaxnyd> I can't seem to get my strategy to run with https://github.com/jaredhanson/oauth2orize.  Anyone used this before?
22:59 < neeky> it looks like it's already an you need to do $in conv.pin_id
22:59 < neeky> you passed the entire object as the _id
23:00 < neeky> "{ pin_id: 51a495f7f1c2a8d820000004 }" is not an ObjectId
23:00 < alchimista_> i did it as follow:  Pin.find({_id: { $in: conv}}).
23:00 < neeky> but conv.pin_id is
23:01 < alchimista_> but if i do _id: {$in : conv.pin_id ...
23:01 < alchimista_> I have this [TypeError: Cannot call method 'map' of undefined]
23:02 < neeky> yeah, you do need to add conv.pin_id to an array 
23:02 < neeky> and pass the array
23:02 < neeky> as the argument to $in
23:02 < alchimista_> so can u help me in creating that array from the 1st result
23:02 < alchimista_> i mean what is the for loop
23:02 < neeky> yeah hang on
23:02 < alchimista_> thank you
23:21 < alchimista_> neeky: r u there?
23:23 < alchimista_> I managed to do it ;) neeky:
23:24 < alchimista_> by changin the for loop as follow: for (var i = 0; i< conv.length; i++) { pinIds.push(conv[i].pin_id) }
23:24 < alchimista_> thank you anyway for the help
23:24 < hs2> anyone familiar with node-xmpp here?
23:24 < hs2> i think i found a bug in digest-md5 auth
23:29 < Beg> is it possible to get a the model in mongoose based on the string you supply?
23:29 < Beg> var Tank = mongoose.model('Tank', schema); 
23:43 < jdelgado> Zaxnyd: Played that game - you're better off coding it yourself.
23:43 < Zaxnyd> I actually made progress
23:43 < Zaxnyd> but
23:44 < Zaxnyd> do you have an example of doing it otherwise?
23:44 < Zaxnyd> jdelgado?
23:46 < jdelgado> Sorry, I don't usually actively look at IRC
23:47 < Zaxnyd> np
23:47 < jdelgado> I just did it with express, built it into my API
23:47 < jdelgado> At base value, everything is relatively simple, create a token and store it in a database for later
23:48 < Zaxnyd> how do you handle the token transfer from the server to the client?
23:48 < jdelgado> you dont give the client a token?
23:49 < Zaxnyd> correct me if I'm way off base, but the way I'm imagining this is a webserver (client), an API (server), and the browser (user)
23:50 < jdelgado> oh, usually client means the end-user
23:50 < Zaxnyd> perhaps my terminology is off.
23:50 < Zaxnyd> correct me if it is
23:50 < jdelgado> they request it using their client_id and client_secret in addition to the code from the previous handshake
23:51 < jdelgado> and then the server responds with a simple JSON object { "access_token": "HERE" }
23:53 < Zaxnyd> right, so I'm imagining the user goes to the client.  the client notices they're not authorized and sends the user to the server to become authorized.  they provide their credentials.
23:53 < Zaxnyd> the server generates a token, which we now need to get to the client.
23:53 < jdelgado> Hold up.
23:54 < jdelgado> You have the API then the 3rd party, and then the end user.
23:54 < Zaxnyd> shall we call it 'app' for short?
23:54 < jdelgado> The end user is talking with the 3rd party, then they redirect them to your /authorize or /authenticate
23:54 < Zaxnyd> located on the API server, yes?
23:54 < jdelgado> Which you will make a route for and provide a nice screen asking if they are sure if they want to give permissions
23:55 < jdelgado> correct
23:55 < Zaxnyd> gotcha, okay
23:55 < Zaxnyd> with you so far.
23:55 < jdelgado> Then you (the API) redirects them back to the 3rd party with a code in the HTTP parameters
23:55 < jdelgado> as a GET request
23:55 < Zaxnyd> I see
23:56 < jdelgado> then the 3rd party then takes that code, and behind the scenes, not through the end-user, sends your API a second request to /token with their client_id and client_secret
23:56 < jdelgado> then they get the final access_token
23:56 < Zaxnyd> GET was just too obvious for me to think of.
23:56 < jdelgado> Three shakes
23:56 < jdelgado> lol
23:56 < Zaxnyd> I'm thinking header, post, etc.  then started worrying about x-domain.
23:57 < jdelgado> Have you read the OAuth 2 docs?
23:57 < Zaxnyd> no
23:57 < jdelgado> Would kindof be useful... :P
23:57 < Zaxnyd> http://tools.ietf.org/html/rfc6749 ?
23:58 < jdelgado> Yes
23:58 < jdelgado> we use rev 10
23:58 < Zaxnyd> that's one hell of a document
23:58 < jdelgado> http://tools.ietf.org/html/draft-ietf-oauth-v2-10
23:58 < Zaxnyd> but I suppose I should do my research
23:58 < jdelgado> welcome to programming bro!
23:58 < Zaxnyd> lol
23:58 < jdelgado> that's most technical documents
23:59 < Zaxnyd> okay I'll have a read through it
23:59 < Zaxnyd> thanks you've been extremely helpful :)
23:59 < jdelgado> Just for you to wrap your head around more - look at facebook, instagram, foursquare and github's documentation surrounding OAuth - that might help too.
--- Log closed Thu Jun 20 00:00:02 2013
