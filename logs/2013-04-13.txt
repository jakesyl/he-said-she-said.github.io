--- Log opened Sat Apr 13 00:00:13 2013
00:00 < richweskus> yip
00:01 < richweskus> http-agent@0.1.2 /home/pi/opt/node-0.8.7/lib/node_modules/http-agent
00:01 < richweskus> âââ request@1.9.9
00:03 < richweskus> brb
00:03 < ningu> there should be http-double-agent
00:13 < GOMADWarrior> i hate it when it doesn't work but there's no error
00:26 < Purefan> anybody using engine.io ?
00:26 < asterick> I have used it, but I prefer socket.io
00:27 < Purefan> why is that asterick?
00:27 < asterick> Usually I want sockets first rather than instant on support.
00:29 < Purefan> fair enough. Im having problems getting the JS client to connect to the NodeJS app, the nodeJS app listens on port 9448 but this line doesnt make engine.io use that port myVar = eio('ws://192.168.0.111/', {path:'/', port: '9448'});
00:29 < GOMADWarrior> http://189.34.44.144:8080/
00:29 < Purefan> when I check the object from Google Chrome it says port 80
00:30 < Purefan> got any advise for me asterick?
00:30 < asterick> do eio("ws://192.168.0.111:9448/"
00:30 < asterick> see if that helps
00:31 < Purefan> Yes sir! that did the trick, I tried it before but passing the path and I think that confused it
00:31 < Purefan> Thanks a lot! :)
00:49 < Purefan> Almost 3am here and Im afraid of that hour so gonna hit the sack lol! all the best guys!
00:52 < dypsilon_> Is there a way to bind an event listener which will be executed only after several events were fired?
00:52 < dypsilon_> Kinda like promises "when" feature.
00:53 < jhgaylor> Hi.  i just finished reading javascript allonge which did a good job of covering the language and gave some examples of how to build common function like extend, splat, and how to do things like context agnostic mixins.  I was hoping that someone might suggest a good book to read covering building a javascript web application.  I was hoping things like managing state, routing, templating, etc would be covered.
00:55 < dypsilon_> jhgaylor, clientside or serverside?
00:56 < jhgaylor> dypsilon_: both ideally
00:56 < dypsilon_> http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/
00:56 < dypsilon_> http://singlepageappbook.com/index.html
00:56 < dypsilon_> those cover it partially
00:57 < jhgaylor> dypsilon_: thanks. would you suggest reading them in the order you linked them?
00:57 < dypsilon_> doesn't matter
00:59 < dypsilon_> jhgaylor, for serverside I would suggest to look at most popular full stack frameworks. Those are express.js and flatiron in my opinion. Popular templating engines are ejs, handlebars (and I like dust-linkedin).
01:00 < dypsilon_> also looking at how you approach learnin, you probably will like flatiron more as express.js, because it has rather classical composition (clearly defined router, config management etc)
01:00 < shesek> dypsilon_, nothing built-in, but you could build an higher-order function to do that quite easily
01:02 < jhgaylor> I've toyed with backbone, ember, and meteor.  I like the reactivity of meteor, but my applications grow out of hand as they get larger.  i'm hoping that learning it agnostic of a framework will help me figure out how to structure my apps to grow larger than 500 lines and still be legible
01:02 < shesek> dypsilon_, http://coffeescript.org/#try:aftern%20%3D%20(n%2C%20fn)%20-%3E%20(a...)%20-%3E%20fn%20a...%20unless%20--a%0A%0A%0Afoo.on%20'bar'%2C%20aftern%205%2C%20-%3E%20alert%20'called%20only%20on%20the%205th%20time'%0A
01:02 < shesek> (see the right side for the javascript version)
01:03 < shesek> oh, blah, I meant `unless --n`, not `a`
01:04 < dypsilon_> shesek, oh thank you
01:05 < dypsilon_> jhgaylor, yeah, look at flatiron, it suggests some structure out of the box
01:05 < myndzi> i'm trying to build from source and getting a 'virtual memory exhausted: cannot allocate memory' error
01:05 < myndzi> i have plenty of free ram and swap
01:05 < myndzi> any ideas?
01:07 < dypsilon_> jhgaylor, also meteor, while actually awesome, uses forked node and "avoids" npm, which is, in my opinion bad for learning (and bad for meteor, but i'm not the right person to judge)
01:07 < jhgaylor> dypsilon_: i'm really just excited about minimongo and ddp
01:09 < jhgaylor> I think they make for a good bridge between client and server.  The rest of meteor I could probably live without. I'm not sure how I feel about smart packages
01:17 < dypsilon_> exactly, that is my point, you would use only couple of meteor features if you could, but you can't because they invented their own packaging
01:17 < niggler> derbyjs > meteor
01:21 < dypsilon_> niggler, in the long run meteor will probably "outmoney" any framework
01:21 < niggler> i disagree dypsilon_ 
01:21 < niggler> frankly, the framework that will "out money" will be the one that's used in the next big thing
01:22 < niggler> and its still too early to call it
01:23 < dypsilon_> true, and meteor was dealt a pretty good hand
01:24 < niggler> i honestly don't know why they raised money
01:24 < jhgaylor> imo, who cares who wins.  The end goal is the tech at the middle of them right?
01:24 < jhgaylor> even meteor will say ddp isn't original.  it's just something everyone is doing and needs standardizing. 
01:25 < dypsilon_> jhgaylor, true. still they could release their awesome tech as npm modules.
01:25 < dypsilon_> but than again, first class problems here, it's still opensource
01:26 < Lucas_> how do you run multiple node.js websites in the same computer without them interfering with each other?
01:26 < Lucas_> don't you make a sever.js for the whole server?
01:26 < Lucas_> how does this wrok? thanks
01:26 < dypsilon_> Lucas_, use different ports
01:27 < dypsilon_> or use vhosts infront of your servers (nginx or apache)
01:27 < dypsilon_> or = and
01:28 < Lucas_> dypsilon_, doesn't that defeat the purpose of node.js ?
01:28 < asterick> No?
01:28 < Lucas_> idk you tell me
01:28 < jhgaylor> that will happen soon enough. like you said, its open source, and people have already reverse engineered it. plus meteor wants to release the protocol. they only haven't because there are so many other things they also want to do.  you should check out the 2012 djangocon keynote by a meteor author if you haven't.  it was basically a conversation starter to server side folks to start implementing apis so that there could be modules 
01:28 < jhgaylor> to attach to ddp, ddp rival 1, other ddp implementation, etc.
01:28 < asterick> nginx makes a reasonable proxy pqss for that sorta thing
01:28 < dypsilon_> Lucas_, what is the purpose of node.js in your opinion?
01:28 < asterick> You can also use Haproxy if you want to load balance.
01:29 < Lucas_> making a lightweight server, so you don't need to run apache or nginx?
01:29 < Lucas_> else why not make it a CGI javascript interpreter?
01:30  * jhgaylor is in before the shitstorm
01:31 < dypsilon_> jhgaylor, meteor is awesome, could be more awesome, but wth :)
01:32 < niggler> nodejs is awesome
01:32 < dypsilon_> jhgaylor, just wanted to say it's not very good for learning. good, but not very good
01:32 < jhgaylor> dypsilon_: i think the fairer statement is meteor's mission is awesome
01:32 < jhgaylor> I'm not trying to push it as awesome.  I'm just excited by everything going on right now
01:33  * niggler pets jhgaylor 
01:33 < niggler> its ok to admit you drank the kool-aid
01:33 < jhgaylor> hahaha
01:34 < dypsilon_> Lucas_, theoretically you are right. Practically, right now people put nginx before node, because it's, well not 1.0 yet. Also you could expose nakes node and build your own vhost implementation. Or use some package...
01:35 < dypsilon_> jhgaylor, what's meteor's mission?
01:35 < jhgaylor> mission might not be the right word
01:35 < jhgaylor> goals, ambitions,
01:35 < Lucas_> dypsilon_, ok, i see. I would use nodemon and make a server.js that will load vhosts... that's probably the best to do
01:35 < Lucas_> maybe running one node.js on port 80 that will route other ports to different domains
01:36 < niggler> the real question jhgaylor is what are you working on
01:36 < Lucas_> then run other node.js instances for other ports and domains
01:36 < dypsilon_> Lucas_, but than again, you could just use nginx ;)
01:37 < Lucas_> dypsilon_, i'm not familiar with it. does it do just that?
01:37 < Lucas_> right now i'm using apache to direct my domain to the node.js port
01:37 < dypsilon_> ew
01:37 < dypsilon_> sorry
01:37 < dypsilon_> Lucas_, if you can kick apache do it, and put nginx instead
01:38 < Lucas_> dypsilon_, yes, i'll try that. but is nginx like apache or simpler?
01:38 < Lucas_> idk how lightweight it is, and how many options it has
01:38 < jhgaylor> niggler: traditionally i have done web development on via python/django. it's great for lots of things.  but for a highly interactive, collaborative application that needs to be synced across multiple devices and platforms, it lacks
01:38 < Lucas_> does nginx only route domains to different ports?
01:38 < niggler> "but for a highly interactive, collaborative application that needs to be synced across multiple devices and platforms, it lacks" buzzword overload
01:39 < dypsilon_> Lucas_, nginx is an apache alternative but much better, i won't go into much details, just look into it, there is plenty of info on the internet
01:39 < Lucas_> okay thanks very much
01:39 < drudge> synergy cloud social
01:39 < niggler> my brain is about to segfault drudge
01:40 < jhgaylor> niggler: sure is, but i they are also decently descriptive
01:40 < dypsilon_> Lucas_, nginx is very lightweight, probably lighter than node.
01:40 < dypsilon_> Lucas_, welcome
01:41 < niggler> jhgaylor what does the highly collaborative google docs use?
01:41 < Lucas_> ok
01:41 < jhgaylor> niggler: lets say i own a jewelry store and i want to have a web store. Django to the rescue.  I just need to list of my stock and draw up some templates and put in a shopping cart.  dash some js on the top and you're good. 
01:43 < jhgaylor> niggler: lets say I own that same store and now i want to computerize my work tickets.  I have 4 retail shops and 30 employees.  i want to use tablets to record sales and new repairs.  i want my employees to be able to see jobs to be done and notes about the jobs, etc all in real time.  django isn't going to cut it.
01:43 < dypsilon_> jhgaylor, what about tornado?
01:44 < jhgaylor> dypsilon_: the point is to learn js. my situation is contrived and i'm intensionally avoiding python.  
01:45 < niggler> ah appeal to intellectual masturbation
01:45 < dypsilon_> jhgaylor, i see
01:45 < jhgaylor> dypsilon_: i i hadn't heard of tornado.  it might be interesting to use it for the server side if i need to use postgres
01:46 < dypsilon_> but yet you've heard of meteor. oh the hype :D
01:46 < jhgaylor> dypsilon_: i heard of meteor by coming in here weeks ago and asking for some frameworks to look into
01:47 < jhgaylor> i found todomvc which lists its of implemntations
01:47 < niggler> dypsilon_ i can appreciate your out money argument, but the real question is what are productive people using
01:47 < niggler> and i think the jury is still out on that
01:47 < jhgaylor> wow, my irc client takes way too many liberties with auto correcting me. >.<
01:51 < mscdex> you can do postgres in node too!
01:51 < dypsilon_> niggler, tbh i want to believe they'll "fix" meteor and everyone will unite and develop only one awesome framework, not 5 mediocre ones. so the big moneyz will flow into community, not into meteor alone
01:51 < niggler> mscdex nodegres
01:51 < jhgaylor> sure enough. bbye tornado :P
01:53 < dypsilon_> jhgaylor, still don't understand the python hate
01:54 < jhgaylor> dypsilon_: there is none.  I love python.  it's my go to language.  which is the reason for learning a different one. javascript still lets me stay in the realm of something i know, web programming, and still be exposed to something entirely new
01:55 < dypsilon_> jhgaylor, i see
01:57 < niggler> dypsilon_ I'm waiting for the billion dollar node project
01:57 < niggler> we're looking at you mscdex 
01:57 < mscdex> eh?
01:58 < niggler> you happened to be the only node demigod on the channel at the moment
01:59 < niggler> we bask in your glory
02:00 < mscdex> eh???
02:01 < mscdex> C++ is my goto language because it supports gotos
02:02 < niggler> no C love?
02:03 < mscdex> i use C++ for node addons!
02:20 < rhussmann> I'm looking for a generic templating engine for Node.js (read: not necessarily HTML). I need to go from template to text document. Anyone aware of an NPM module that can do this?
02:23 <@mbalho> markdown is kewl
02:27 < rhussmann> Yeah, I like Markdown. I didn't do a great job of asking the question, I think. I need variable/text substitution (like Jade offers, in the form of variables), and conditionals (also like Jade offers), but I don't want the output to be HTML. The input will be a text file with template fields, and the output will be a text file with the fields substituted.
02:28 < Havvy> rhussmann: EJS?
02:29 < rhussmann> I'm not sure what that is, but I'll check it out. Thanks, Havvy
02:30 < Havvy> rhussmann: It does templating features like PHP does.
02:32 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:41 < rhussmann> Havvy: thanks
02:41 < niggler> Havvy isn't enterprise javascript called "java"
02:41 < Havvy> niggler: Heh.
02:45 < GOMADWarrior> http://189.34.44.144:8080/
02:45 < GOMADWarrior> now you can move with arrows
02:46 < GOMADWarrior> damn, looks like teleporting
02:46 < niggler> update is really slow GOMADWarrior 
02:48 < ningu> what do people actually mean when they say enterprise anyway? I always assumed it just meant "expensive support contract included"
02:48 < GOMADWarrior> its every 1 second
02:49 < GOMADWarrior> should I make it every 0.2 seconds?
02:49 < niggler> ningu usually it involves stuff that are relevant to businesses, as opposed to commercial software that's relevant for individuals
02:49 < niggler> crap like LDAP
02:49 < ningu> niggler: right I know it means that in theory but...
02:49 < ningu> in practice this is often really vague
02:50 < niggler> ningu when you are on your own or with a small group, access control can be simple
02:50 < niggler> when you have phalanxes of people, you need more fine-grained control
02:51 < niggler> so my understanding in general is that enterprise software focuses on those aspects that are relevant at large scales
02:51 < niggler> take oracle.  you could use mysql or postgres or even mongodb
02:51 < niggler> lol don't use mongodb
02:52 < ningu> hehe
02:52 < ningu> yeah but I've seriously never understood why oracle is more enterprise than postgres
02:52 < ningu> it has that graphic admin thingy
02:52 < ningu> graphical*
02:52 < ningu> but in terms of features...
02:54 < GOMADWarrior> now you cant teleport anymore :D
03:49 < AnthonyCat> How can I create a node js process, which I have the ability to kill. Right now require('./myscript') works, but I can't stop it. What's the easiest way to do this.
03:50 < ningu> AnthonyCat: child_process.spawn
03:50 < AnthonyCat> awesome
03:50 < AnthonyCat> thanks 
03:51 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
03:55 < EricKatherman> Can someone shed some light on what might be causing my stack size exceeded error?  When I run my query on my local node installation, the query returns all the data.  Against my live node server, it doesn't.  My query includes a "rows_per_page" attribute that when set to 1080 or less, the live API does return them, but higher than that and it dies with a stack size exceeded error... I tried starting node with the --max-stack-
03:57 < gluxon> EricKatherman: Are you looping with "while, for"?
03:58 < EricKatherman> I think while... confirming
04:01 < EricKatherman> actually, I'm told that we're using underscore for loops
04:02 < gluxon> EricKatherman: What usually causes a stack size exceeded error is a lack of understanding of asynchronous IO.
04:03 < gluxon> If you place a function call inside a while loop, that function will be called as fast as possible.
04:03 < gluxon> But that function in 99.99% of cases, will not finish at the same speed a loop may be calling it.
04:03 < gluxon> EricKatherman: Without seeing more of your code, I can not say the exact issue.
04:04 < EricKatherman> any thoughts on why it was working okay on nodejitsu and my local node, just not the node installation on my aws instance?
04:05 < EricKatherman> node seems so simple to install, unlike so much else that has endless config options and runtime arguments
04:05 < gluxon> EricKatherman: This is the same version of Node?
04:05 < gluxon> Again, I would have no idea without more information. Node runs the same on one machine as the next.
04:05 < EricKatherman> ok, we'll keep looking here, thanks!
04:06 < gluxon> EricKatherman: Could you get a copy of the exact error outputted?
04:07 < EricKatherman> the first line here is repeated a bunch before the error https://gist.github.com/anonymous/5376870/raw/b78c4dd9c73d16197abfd6f6fef09a1a8c4f01a2/gistfile1.txt
04:10 < gluxon> EricKatherman: When you and your team is debugging, look for areas you're using loops. If you're not using traditional ones (you shouldn't be in Node), look for recursive ones. The issue is probably somewhere in there.
04:11 < EricKatherman> ok, thanks for taking a look
04:12 < h22> hey guys.. Do we have a function analogous to Rails' parameterize method that does this http://apidock.com/rails/ActiveSupport/Inflector/parameterize
04:13 < gluxon> h22: Not in Node.js core.
04:13 < gluxon> h22: You can probably fine something similar on GitHub or npm :)
04:13 < h22> I mean, in something like jquery or backbone.. 
04:13 < ningu> so I'm setting a GUC parameter with set_config() immediately followed by an UPDATE which has a trigger that references the config value. but there seems to be a race condition whereby sometimes the config value is available and sometimes it's not.
04:14 < ningu> any idea why that is and how I can resolve it?
04:14 < ningu> I'm using a transaction but it doesn't seem to matter.
04:16 < ningu> oh, I think I just realized what the issue is...
04:17 < ningu> yep. I was incorrectly using transactions from the place I was generating the sql. oops.
04:38 < owen1> does anyone use redis as queue? i am debating between redis and rabbitMQ.
05:08 < Glacialheart> any fans of levedb out there? I have a nub question
05:08 < Glacialheart> *levelup nodejs module
05:09 < rvagg> Glacialheart: fire away
05:09 < Glacialheart> hey, rvagg I've reading your code on github!
05:09 < rvagg> cheers
05:09 < Glacialheart> i'm trying to get my first put to work
05:09 < Glacialheart> getting an error:
05:09 < Glacialheart> TypeError: Cannot read property 'put' of null
05:10 < Glacialheart> i'm on nodejs v.0.10.3
05:10 < rvagg> Glacialheart:  can you provide a gist of your code? there's a known timing issue if you close() before your callbacks have all returned
05:11 < Glacialheart> ah, I do have a db.close() at the bottom
05:11 < Glacialheart> i bet that is it.  i'll try removing it.
05:11 < rvagg> Glacialheart: ok, you're closing before the operation has a chance to run then, you need to make sure you're properly finished before doing a .close()
05:11 < rvagg> has to come after all callbacks have completed
05:12 < rvagg> Glacialheart: tho, when this is fixed (https://github.com/rvagg/node-levelup/issues/114) it should remove that problem; but still, it's good hygene to do things in the right order and make sure you don't close resources until after they have finished being used
05:12 < rvagg> and if you do that, then you shouldn't see that kind of problem
05:13 < Glacialheart> that worked!  thanks rvagg
05:13 < rvagg> cool
05:15 < Glacialheart> I need to understand callbacks better as well as how nodejs is asynchronus.  I'm not used to getting to the end of my code before everything above it has run
05:15 < rvagg> Glacialheart: yeah, it can take a little while to get your head around it but when you do it'll just <click> and make total sense
05:16 < rvagg> Glacialheart: and then you'll probably hate going back to a non-async language
05:16 < Glacialheart> heh
05:20 < hackedy> what do people use to debug node c++? gdb?
05:21 < rvagg> hackedy: yeah, gdb can work
05:21 < rvagg> hackedy: or lots of std::cerr<<"WHOA!!\n";
05:22 < belak> Where is a good place to start learning node.js?
05:23 < hackedy> rvagg: ooh yeah that's good too
05:28 < tmpvar> connection reset by beer
05:31 < rvagg> belak: look at code
05:31 < rvagg> belak: and write code!
05:44 < rads> if I want to play some mp3s with node-webkit and I don't want to make my code GPL, what are my options?
05:44 < rads> my app is going to be mac only for now, so I was thinking about writing a wrapper for core audio
05:44 < rads> I don't really understand how the MP3 licensing works and what libraries are appropriate to call
05:45 < tjfontaine> why do you need to play mp3s with webkit, surely there are other options out there
05:45 < rads> I'm making a music player app
05:45 < tjfontaine> I have some unfinished vlc bindings that would work
05:45 < rads> isn't VLC GPL too?
05:45 < rads> won't that make my code GPL if I distribute VLC with it?
05:46 < tjfontaine> rads: with mine you don't distribute vlc, they just need it installed
05:46 < rads> in my case I would like the user to be able to just download the app and start playing MP3s without installing anything else
05:47 < tjfontaine> you could probably also bind quicktime stuff
05:47 < rads> what do you mean by bind? node-ffi?
05:47 < tjfontaine> yes
05:48 < rads> ah ok. sorry, haven't done anything like this before
05:50 < rads> I guess the simplest thing would be to learn some Obj-C and use core audio
05:51 < tjfontaine> rads: spawn/exec of afplay(1) seems the best "distribution free" way https://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/afplay.1.html 
05:52 < rads> I took a look at that, but I also need to seek within a sound file
05:54 < rads> also need to be able to change volume
06:02 < urlwolf_> is node on windows sorta stable|
06:02 < urlwolf_> ?
06:02 < rvagg> urlwolf_: very'
06:03 < urlwolf_> I just followed the intructions for docpad here: http://docpad.org/docs/install
06:03 < urlwolf_> and while it installs, it doesn't get added to PATH
06:04 < urlwolf_> when reading the scripts, they all use unix paths
06:04 < urlwolf_> I cannot get a hold of the author, nor anyone using it on windows; thought here people might know
06:05 < urlwolf_> If things coming out of npm have unix paths, then no chance they'll wor on win
06:09 < owen1> do i need a queue for this scenario? 200 json objects are sent to my system. each object is about 500 bytes. my node.js app, depends on the destination key of that json, will make post request to some external api or ftp request, etc.
06:09 < owen1> by queue i mean rabbitMQ etc
06:10 < owen1> on failure, i plan to send the json to mongo and have some retry policy depends on the type of message.
06:22 < rvagg> owen1: queues are helpful if you have multiple processes/workers and you need the jobs to be durable
06:22 < rvagg> but if all you want is a simple queue with durability, then since you're using leveldb already then: https://github.com/dominictarr/level-trigger or https://github.com/juliangruber/level-schedule
06:22 < rvagg> jobs get stored and are durable across restarts/crashes
06:35 < owen1> rvagg: not using leveldb for this specific project, but it might not be a crazy idea. i want to make sure a message never get lost. and if the load gets higher, i can add more workers. is that still duable with level?
06:36 < rvagg> owen1: sure, if you have a master process
06:36 < rvagg> owen1: perhaps you can couple with this: https://github.com/rvagg/node-worker-farm
06:41 < Lucas_> nodemon is STILL failing when i have my .git folder with my files
06:42 < pats_Toms> I have random problems with nodemon too
06:43 < owen1> rvagg: wow. a lot of crazy stuff. i am not sure i understand the usage of all those. not yet (:   are u saying i can use level-trigger, level-schedule and node-worker-farm and this combo is durable (never lose a message), and scalable?
06:44 < owen1> basicaly replace RabbitMQ/redis?
06:46 < rvagg> owen1: you'd choose either level-schedule or level-trigger, they're probably an either/or thing
06:46 < rvagg> but, you still have a central manager process
06:46 < rvagg> but then again, you have that with redis
06:47 < rvagg> leveldb gives you durability across master process crashes/restarts, worker-farm would give you a way to spawn child processes to handle the load on a single host and those child workers are durable too (plus the API is so SUPER simple that it's simply awesome)
06:48 < rvagg> when you're wanting to scale up to having multiple hosts handle the load then you'd need a different method (tho I have been toying with the idea of a distributed worker-farm that can work off many hosts with a similarly simple API)
07:05 < owen1> rvagg: my head hurts.. if u'r busy feel free to ignore me. let's say i expose my system via an http endpoint. POST with some json in it's body. i assume that the first thing i do is store it on leveldb - incoming!<id>. now i need to send this json over ftp or http and if it fail i'll have to add it to level as fail!<id>. is this very far from what u were talking about? i still don't know how to use the
07:05 < owen1> modules u mentioned.
07:17 < Ritzton> hello
07:17 < Ritzton> I am using child_process exec to run php scripts with node js but I am wondering what is the right way to encode param ?
07:22 < jjore> In http://pastie.org/7471414 I don't see why there is automatic semicolon insertion but it seems to happen even when the ecmascript spec says it shouldn't.
07:24 < jjore> There are three ASI rules in http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf and that snippet doesn't pass any that I can see so it /looks/ like node is doing ASI incorrectly.
07:25 < jjore> I'm actually just trying to understand when, if ever, to trust node to do ASI.
07:32 < Lee-> so I've been reading about node.js for a while, but I've never had an interesting app to actually use it for, so I've not actually done anything except follow basic tutorials. Now I have an interest in writing a web socket client and thought node.js might be useful for this due to its event driven nature, but I'm having trouble getting even a basic client going. Some sites I've read imply that socket.io does not handle client side code and there are a numbe
07:32 < Lee-> r of other projects that handle "browserless websockets". What do you recommend for handling a websocket client or is this not a good fit for node.js?
07:32 < Ritzton> how to encore string for shell command using node js please ?
07:32 < Ritzton> how to encode ?
07:37 < rvagg> owen1: sorry, had to disappear for a while
07:38 < rvagg> owen1: https://github.com/dominictarr/level-trigger you put 'jobs' into it and the callback you provide is called for each job with a 'value' being whatever you're storing
07:38 < rvagg> owen1: then, that callback gets a callback of its own to call when the job is finished (in your case, the ftp transfer), triggering that callback indicates that the job completed successfully and the record is removed from the leveldb store
07:39 < rvagg> owen1: but if the callback isn't triggered and your process or server crashes 1/2 way through a job then the next time you restart your service, it'll run the worker function again for each job it still has a record of
07:39 < rvagg> owen1: so you don't have to do the hard work yourself of recording incoming & completed jobs, that's done for you by level-trigger
07:39 < djensen47> Is there a channel for express or is this a good spot for express questions?
07:50 < Ritzton> any idea how to encode string for shell command using node js please ?
07:52 < ningu> Ritzton: what do you mean "encode string for shell command"?
07:54 < Lee-> I've been reading about node.js for a while, but I've not used it for anything aside from following tutorials. Now I have a use for a websocket client and am thinking node.js's socket.io and event driven nature would be a good fit for this app, but I'm having trouble getting even a basic client going. Some sites I've read imply that socket.io does not handle client side code and there are a number of other projects that handle "browserless websockets". What
07:54 < Lee->  do you recommend for handling a websocket client or is this not a good fit for node.js?
07:55 < mark_oz> hi guys, I'm getting a weird error trying to pass variables to my jade template http://pastie.org/private/eneclzakgwokwmxioykzua
07:55 < ningu> Lee-: it should work fine... you might want to look at sockjs as well
07:56 < Lee-> ningu, sockjs does include a client library? I reac on stackoverflow that it does not include a client
07:56 < ningu> eh? both socket.io and sockjs have clients
07:57 < ningu> mark_oz: not sure you can do that, try | #{affirmations}
07:58 < mark_oz> it doesn't look like a jade error.. I'm getting a "undefined variable" error
07:58 < mark_oz> am i passing them through correctly (I'm writing my first express app)
07:59 < ningu> mark_oz: yes, I can read, but I still think you should try what I said :P
07:59 < mark_oz> ok, so | #{affirmations} in my jade template?
08:00 < ningu> yes
08:00 < ningu> in the same place
08:00 < Lee-> ningu, I'm noob to this of coruse, but what I've been reading is that socketio and sockjs have clients, but not clients that can be run via node. they are for execution within browser only
08:01 < ningu> Lee-: I'm almost positive that's not the case with sockjs but I don't know for sure
08:01 < mark_oz> ningu, same thing... and even if I try to put it inline (	p Welcome to #{title} #{affirmations}) I still get the same error: affirmations is not defined
08:02 < ningu> ok
08:02 < Lee-> idk either. I try to get clients to work using the examples, but tehy're obviously written for a browser. I get errors when I try to run them via node. I don't know if it's a problem with me or that these libraries I have tried simply are not for node clients, just browser clients. It's very frustrating not knowing where the problem lies :\
08:02 < Lee-> I have tried 5 different libraries now without success
08:02 < ningu> Lee-: well you'll have to share some of the code or the errors or whatever
08:03 < ningu> mark_oz: I don't know, based on what you pasted it looks fine
08:04 < ningu> there must be something else going on that isn't in what you pasted
08:04 < mark_oz> uhm. ok, I might keep hacking away.. 
08:05 < ningu> have you tried passing other variables and seeing what happens?
08:05 < ningu> what version of node do you have?
08:06 < Lee-> this is my latest test: http://pastebin.com/A5fUZYzh
08:06 < Lee-> I have node v0.10.4
08:09 < ningu> Lee-: yeah, you're right, it looks like it's meant to be loaded from the browser. hmm
08:12 < ningu> Lee-: anyway there are all kinds of node websocket client modules it seems
08:12 < ningu> for example https://github.com/Worlize/WebSocket-Node
08:12 < Lee-> yes, that was another one that I tried. I also read on stackexchange that it too requires a browser for the client
08:12 < ningu> also https://github.com/faye/faye-websocket-node
08:12 < Lee-> I have not tried faye-websocket-node
08:12 < ningu> but it doesn't, you can tell from the examples
08:12 < ningu> var WebSocketClient = require('websocket').client;
08:13 < ningu> there is a whole client example in the readme
08:52 < danjenkins> hi, does anyone have any experience replicating npm? 
08:53 < danjenkins> I've set up the replication and my couched server doesn't have an admin account right now, but in my logs all I'm getting is Replicator: couldn't write document `worm`, revision `4-e6680146f2f22b3f9490afeb38fd2a0c`, to target database `registry`. Error: `unauthorized`, reason: `Please log in before writing to the db`.
08:53 < danjenkins> I'm a little confused as i don't have a password!
08:53 < nathan7> danjenkins: Ah
08:54 < nathan7> danjenkins: You need to make sure that the replication user context has the admin role
08:54 < nathan7> danjenkins: a moment, lemme check my couch
08:54 < danjenkins> thanks!
08:55 < nathan7> danjenkins: Your _replicator document has a user_ctx property
08:55 < nathan7> danjenkins: I have it set to { name: "isaacs", "roles": ["_admin"] }
08:56 < nathan7> also, shit, my couch is out of sync
08:57 < danjenkins> ah ok, ill try that and see if that works - it seems like it was working (or it was partially at least) but then i applied the registry ui etc and it seemed to stop working… i can see i have some documents in registry!
08:57 < nathan7> danjenkins: Yeah, many things require admin context to modify
08:58 < danjenkins> thanks nathan7:)
09:12 < zenetik> hi, does anybody can explain what is missing at this code to be async ? the usage of this module is alway sync 
09:12 < zenetik> https://github.com/wearefractal/pinger/blob/master/src/pinger.cc
09:12 < zenetik> if somebody can give me some hints it should be great
09:21 < elliottcable> Why *can't* Node be more like pie?
09:21 < elliottcable> The /topic confounds me.
09:46 < jhsto> Does anyone know some good CSS optimization tools?
10:50 < geNAZt> does someone here work with sails ?
11:14 < faceleg> if one were to become a lead dev @ a php shop
11:14 < faceleg> should one battle to convert everything to node?
11:15 < geNAZt> no
11:43 < chmac> Is there a javascript equivalent of PHP's `$v = 'foo'; $$v = 'bar';` ?
11:44 < geNAZt> chmac no
11:44 < chmac> geNAZt: Thanks.
11:44 < prawnsalad> v = foo; z = v; similar.. but not *exactly* the same thing
11:44 < prawnsalad> same end result though.
11:45 < chmac> How about a call_user_func('function_name'); equivalent?
11:45 < prawnsalad> oh no, sorry i misread.
11:45 < geNAZt> function.apply('scope', 'parameter');
11:45 < chmac> geNAZt: Thanks again
11:46  * chmac heads off to research function.apply()
11:46 < gildean> passing in the scope is pretty expensive tho'
11:46 < geNAZt> https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/apply
11:46 < prawnsalad> parameters are apssed as an array when using apply()
11:46 < prawnsalad> .call(scope, 'parameter') would work using those args
11:46 < gildean> you should try and write your js so you don't have to pass the context around
11:47 < geNAZt> well sometimes you cant make it without call or apply
11:48 < gildean> geNAZt: true, but call and apply shouldn't be the cornerstone of your desing
11:48 < gildean> is what i mean
11:49 < geNAZt> well bind shouldnt either
11:49 < geNAZt> well i think of a bug
11:49 < chmac> Not sure that .call() is quite what I'm after
11:49 < gildean> at least i've understood they are pretty expensive
11:49 < gildean> geNAZt: yeah, bind too
11:49 < chmac> Essentially, I have a variable that contains the name of a function I want to call.
11:49 < geNAZt> what happens if i change the scope of the http module to another scope
11:49 < geNAZt> oO
11:49 < prawnsalad> bind is very heavy weight
11:49 < geNAZt> :D
11:49 < chmac> So I retrieve from a database, $foo = 'bar'; and I want to use that to run bar()
11:49 < prawnsalad> in some cases its shown as a memory leak, also
11:50 < chmac> Ideally, without using eval() :-)
11:50 < prawnsalad> is bar part of an object?
11:50 < gildean> chmac: put the functions inside an object, use the value to call out a value on the object?
11:50 < geNAZt> chmac: var funcObj = {}; funcObj.bar = function() { console.log("bar"); }; funcObj.bar.call();
11:51 < geNAZt> or funcObj[variablehere].call();
11:51 < chmac> Aha, gotcha.
11:51 < chmac> I think I can use the same thing with the global scope thingy (I forget the name).
11:51 < chmac> document in the browser, something else in node.js I think.
11:51 < geNAZt> not document in browser:D
11:52 < geNAZt> in browser => window
11:52 < geNAZt> in nodejs => global
11:52 < chmac> Thanks
11:52 < DanielDJ> Is it possible to catch "node: ../deps/uv/src/unix/core.c:196: uv__finish_close: Assertion `0' failed." style errors? Or is node 'dead' so to speak by that point?
11:52 < pol06> hi guys, i need help with queries indented with mongoose 
11:52 < geNAZt> DanielDJ: node is dead
11:52 < chmac> So something like `var foo = 'bar'; global[foo].call()
11:52 < DanielDJ> Darn. 
11:52 < geNAZt> chmac: yes that can work
11:53 < geNAZt> but globals are a bad idea
11:53 < geNAZt> since everyone can change it
11:53 < chmac> Hmm...
11:54 < pol06> hi i need help anybody know well mongoose?
11:54 < chmac> The bigger goal is to follow a set of instructions from a database. Each instruction consists of a transport method (email, sms, phone call, etc) and some additional info like phone number, email address, whatever.
11:54 < chmac> So when I retrieve the list of steps, I'm not sure how to best invoke the various modules for each function.
11:54 < chmac> One for SMTP, one for SMS API, etc.
11:54 < geNAZt> so you have a result { service: 'sms', phoneNumber: '46879', 'text': "dsda" } ?
11:54 < geNAZt> and want to call the function "sms"
11:54 < chmac> geNAZt: Exactly
11:55 < geNAZt> with the argy phoneNUmber and text
11:55 < pol06> i usually do like that
11:55 < pol06> require(./file.js)(params);
11:55 < geNAZt> well serviceproviders :D
11:55 < chmac> geNAZt: Well, my goal is to send the SMS, but I figured calling a function called sms() would be the simplest way to achieve that, but I might be wrong...
11:55 < pol06> and for retrieve
11:55 < geNAZt> no its good
11:55 < geNAZt> you need a storage for that kind of functions
11:56 < pol06> and in my file.js module.exports = function(params) {
11:56 < chmac> geNAZt: Something like var deliveryMethods = {}; deliveryMethods.sms = function () {}
11:57 < chmac> Then I call deliveryMethods[service].call() ?
11:59 < geNAZt> http://hastebin.com/bexiweyoha.js
12:00 < geNAZt> yes its the same schema
12:00 < geNAZt> but i build classes for every shit :D
12:01 < chmac> geNAZt: Wonderful, thanks a lot. I had been using a switch() because I didn't know how to do this. :-)
12:01 < geNAZt> well the difference between php and js functions is that a function in js is a normal type
12:01 < geNAZt> so you can store it in variables
12:02 < chmac> Yes, I a self taught (lazy) programmer, so there are bits of the whole CS space that I don't quite understand? :-)
12:02 < chmac> s/I/I'm
12:02 < geNAZt> :D well thats ok
12:02 < johnnny22> how can I contact the webmaster of https://npmjs.org/ ?
12:03 < geNAZt> pm @isaacs
12:03 < geNAZt> or write him an email (whois tells you)
12:13 < chmac> rodyhaddad: Having connection problems? Your join / part messages are generating most of the traffic on the channel!
12:14 < chmac> rodyhaddad: PS> I recommend znc, greatly enhanced my IRC experience :-)
12:31 < DanielDJ> What would be the best way to trace what is causing: "node: ../deps/uv/src/unix/core.c:196: uv__finish_close: Assertion `0' failed." ?
12:32 < geNAZt> dtrace
12:32 < geNAZt> or gdb
12:58 < Cheery> I'd like to mmap a file, and access it as ArrayBuffer
12:59 < Cheery> I wonder if it's possible
13:11 < rudiX> hi devvers ... is anyoune providing restful api for service ?
13:13 < rudiX> i really cannot undertand the logic of secret_key ... etc. :)
13:14 < geNAZt> which secret_key ?
13:16 < rudiX> geNAZt: other providers like facebook using it ... in my case i need to create something similar to facebook's api
13:17 < geNAZt> well the secret_key only provides access to other api functions
13:17 < geNAZt> with a secret_key you can lift up the connection counts
13:17 < geNAZt> or the request limits
13:17 < geNAZt> and facebook can track your api calls through your secret_key
13:18 < rudiX> i see ... so the user should not directly access url with secret_key
13:18 < geNAZt> well that depends
13:19 < geNAZt> the most apis use a client_id and a token
13:19 < geNAZt> the token should normally not be opened
13:21 < rudiX> in my case the api generating images ... so the output would be <img src="apicall here
13:21 < rudiX> and it's not secured and anyone can use it 
13:21 < geNAZt> well in that case the token or a secret is not secure
13:21 < geNAZt> since you have to print out the token or the secret to the browser
13:21 < rudiX> and not even necessary :/
13:21 < geNAZt> or you generate access token
13:21 < geNAZt> s
13:22 < rudiX> limit by domain ... not solution either
13:22 < geNAZt> but why you build an api for images ?
13:23 < rudiX> just random idea .. never tried to provide/sell service
13:24 < rudiX> geNAZt: wanna help ... I am looking for co-founder :P
13:24 < geNAZt> looool
13:24 < geNAZt> :D
13:24 < geNAZt> i have my own company :D
13:24 < geNAZt> sry
13:26 < rudiX> very successful guys here ... one member of this channel even provided a free hosting for me :)
13:26 < geNAZt> :D
13:26 < geNAZt> was it for nodejitsu ?
13:27 < rudiX> geNAZt: nope xen vps 
13:27 < geNAZt> xen vps :D:D
13:28 < rudiX> in what niche your company working
13:28 < rudiX> (sorry for my bad english btw) :)
13:28 < geNAZt> we create webapps for small buisness
13:28 < geNAZt> and provide service like installation or management for servers
13:29 < rudiX> http://arpecop.net/ ... i tried to organize something like this here ... previously it was my cv
13:29 < geNAZt> bootstrap :D
13:29 < geNAZt> hello :P
13:29 < rudiX> f*** yeah
13:29 < rudiX> :)
13:30 < geNAZt> single page app
13:30 < geNAZt> with node ?
13:30 < rudiX> static .. arpecop.net is my webapp server ... I am hosting facebook apps there
13:32 < rudiX> which are node+nginx+forever and SSL
13:33 < rudiX> geNAZt: show something of your cool stuff
13:34 < geNAZt> http://homerj.de/
13:34 < geNAZt> we builded that
13:34 < geNAZt> but the service is running out
13:36 < rudiX> geNAZt:  http://monosnap.com/image/lnFyVC0XXzE6xad0DPCSdYvSB
13:36 < rudiX> got an vertical scroll here
13:36 < geNAZt> http://alsahray-shishabar.de/
13:36 < geNAZt> is the newest project
13:37 < geNAZt> well yes i know
13:37 < geNAZt> but the service is running out and they have their own devs fixing it
13:37 < geNAZt> :D
13:38 < geNAZt> the current thing we are buildin is a test framework for browser uis
13:38 < rudiX> .de is perfect for something-no.de project :) 
13:38 < geNAZt> which the user can access
13:38 < rudiX> germans are cewlest devs arround ... I am from Bulgaria :) 
13:39 < geNAZt> thx :D
13:39 < geNAZt> well the testing framework would be the first production software based on node
13:39 < geNAZt> the others are php and pure static html
13:40 < rudiX> php is not bad at all ... most of our background ... no.de is pretty new
13:41 < geNAZt> well i love php, if i need a solid backend i use it
13:41 < geNAZt> most of the time i use node to add a "luxus" layer for realtime communication
13:41 < rudiX> even you code js ... the PHP way ... it's faster
13:42 < rudiX> switching entirely is a good option
13:42 < geNAZt> well php vs js is not a good comparision
13:42 < geNAZt> since php in the most cases is a one runtime interpreter
13:42 < geNAZt> and nodejs has a normal runtime
13:43 < rudiX> you mean nonblocking
13:43 < geNAZt> so its easier to build up pools / caches to speed up your app
13:43 < geNAZt> no
13:43 < geNAZt> for example: php needs one connection to the per request, it needs to read all files from disk, and all templates from disk
13:44 < rudiX> I see
13:44 < geNAZt> nodejs can cache that in memory, hold connection pools to databases, to other things like session clearing in the background
13:44 < geNAZt> and so on
13:44 < geNAZt> and nodejs is the easiest system to setup websockets with
13:45 < rudiX> both platforms are resource hungry if you don't know what you doing/don't have time for it
13:45 < geNAZt> well the framework doesnt do the job for you, the code is as good as the developer things about it
13:46 < rudiX> word!
13:47 < geNAZt> in my early days i wrote vb.net with asp.net on windows
13:47 < geNAZt> -_- :P
13:48 < rudiX> I was designer ... very bad background if you're deciding to code one day
13:48 < geNAZt> well it depends
13:48 < rudiX> I switched to node because of the rich plugins npm provides
13:48 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:48 < geNAZt> the most projects die cause the programmer cant find anyone who can design a app for you
13:49 < rudiX> for example the question I asked before - http://mcavage.github.io/node-restify/
13:49 < rudiX> pretty much there is a little answer i need to understand there
13:51 < geNAZt> ok
13:52 < rudiX> since bootstrap ... every programmer can be good layout designer :)
13:52 < geNAZt> well i hate bootstrap
13:52 < geNAZt> :D
13:52 < rudiX> https://enterprise.github.com/ site of the day!
13:54 < geNAZt> http://www.guidetotheappgalaxy.com/
13:54 < geNAZt> site of the week :D
13:56 < geNAZt> with the spaceship you can fly and hit the button via shooting at them
13:56 < geNAZt> :D
13:56 < rudiX> my 32mb video card is like - dafaq
13:56 < geNAZt> :D:D:D
13:58 < mscdex> http://nodejs.org/
13:58 < mscdex> site of the decade!
13:58 < geNAZt> well no
13:58 < geNAZt> :X
13:58 < mscdex> ah who am I kidding.... site of your life!
14:00 < rudiX> heroku looks better than this
14:00 < rudiX> and what even we node.js devs are suppose to do in nodejs.org :)
14:00 < mscdex> download and install node.js and view documentation of course!
14:00 < geNAZt> click on download
14:00 < geNAZt> :D
14:01 < mscdex> on as many machines as possible!
14:01 < rudiX> yum install
14:01 < rudiX> job done
14:01 < geNAZt> nodejs.org is like the ie :D
14:01 < rudiX> :)
14:01 < mscdex> until node.js is merged in with the Linux kernel!
14:01 < geNAZt> the only job is to download something 
14:01 < geNAZt> :D
14:01 < rudiX> true story
14:02 < mscdex> omnomnom install
14:02 < geNAZt> Bambambam new Language achived: Sarkasm++
14:03 < rudiX> wubwubwub ... the drop! 
14:03 < rudiX> :D
14:04 < geNAZt> ehj i love wubwubwub :D
14:05 < rudiX> le datsik producing s***ts from my speakers now :)
14:05 < geNAZt> :D
14:05 < rudiX> that reminds me I need another subwoofer :)
14:05 < geNAZt> well i got a big one
14:05 < geNAZt> so its okay :D
14:06 < rudiX> you productive lil betch! :D
14:07 < rudiX> hokay ... i need to work now so I could buy bigger woofer than geNAZt :D
14:09 < geNAZt> :D
14:32 < Voting> http://hastebin.com/jukaciseqe.vhdl <- I'm trying to get async to run in my browser and I'm getting the error GET http://localhost:8888/async.js 404 (Not Found)  - How do I get node to server up the .js file to my browser?
14:32 < Voting> God, I LOVE async! WHAT a cool package!
14:35 < Voting> Check out https://github.com/caolan/async#compose - Compose is SO COOL! 
14:35 < Voting> Can someone help me get it installed in my browser?
14:35 < Voting> help!! 
14:36 < gildean> Voting: you need to package the module for browser, check out for example browserify
14:36 < Voting> gildean: it IS already supposed to work in a browser, according to the docs...
14:37 < gildean> Voting: then just put the file in one of the static dirs?
14:37 < Voting> gildean: Says I'm supposed to be able to do <script type="text/javascript" src="async.js"></script> 
14:37 < Voting> It is looking for it in localhost...
14:38 < Voting> gildean: If it is looking in local host, it will only work on this machine, right?
14:38 < gildean> btw. in your code you're setting the bottom dir of your project as public, it's usually not the best idea
14:38 < Voting> Oh, gildean, thanks... what SHOULD it say?
14:39 < Voting> "button directory" means what, gildean? 
14:39 < gildean> the usual convention is to create a 'public' dir under your project, put all the static assets there and only use that in the static middleware
14:40 < gildean> Voting: bottom, as in: app.use("/", express.static(__dirname));
14:40 < Voting> gildean: isn't that the root directory? 
14:40 < Voting> So, what would my app.use statements look like in that case, gildean? 
14:41 < gildean> usually it's better to just create a public dir, and put the static middleware after all the other routes and use the form: app.use(express.static(__dirname + '/public');
14:41 < gildean> that way all the reqs that aren't handled by the other middlewares are handled by the static middleware
14:41 < Voting> gildean: thanks!
14:42 < Faraaz> why is nodejs called a server? isn't it a server side script like PHP, ASP.NET?
14:42 < gildean> Faraaz: node itself isn't called a server, but a platform
14:42 < gildean> but you can create servers with it
14:43 < Voting> Do I need to run some RPM command, gildean? Would that help?
14:43 < gildean> and not only http-servers, but all kinds of tcp and udp severs
14:43 < gildean> Voting: for what?
14:43 < Voting> gildean: to make the async package get served up.
14:43 < Voting> isaacs: u around?
14:43 < gildean> Voting: for the async? no, just copy the async.js file to whereever you have all the other static files
14:44 < Faraaz> ok, so a web app created with node can host itself and does not a web server??
14:44 < gildean> Faraaz: you can also create http(s)-servers with node yes
14:44 < nikkubhai> In facebook or twitter or google+ : whenever a user posts a link, it shows summary if the link is an article, an image if its image link and video if its youtube url, etc.  Which node module should be used to implement this functionality?
14:45 < Voting> gildean: then I also need to change my <script type="text/javascript" src="async.js"></script> to say <script type="jslib/javascript" src="async.js"></script> ? 
14:45 < Faraaz> Thx Gildean. "Also" is the word here. makes sense.
14:47 < nikkubhai> Which amongst these module would be the best :  request,  superagent , node.io , cheerio ?
14:47 < gildean> nikkubhai: only request and superagent are even comparable
14:48 < gildean> cheerio is used for dom-parsing and manipulation, socket.io is a websocket/server-client module with fallbacks
14:48 < nikkubhai> gildean: For the functionality which I mentioned above.
14:48 < gildean> nikkubhai: for opengraph tags and such?
14:48 < nikkubhai> gildean: node.io * , yes
14:48 < gildean> nikkubhai: that depends on how you're creating them
14:49 < nikkubhai> gildean: I just want that if users post a link it should get converted into video , image or text summary
14:49 < nikkubhai> gildean: In facebook or twitter or google+ : whenever a user posts a link, it shows summary if the link is an article, an image if its image link and video if its youtube url, etc.
14:50 < nikkubhai> Which nodejs module will be the best to get the data from link
14:55 < gildean> nikkubhai: afaik facebook just gets the page, checks for the og-tags and displays the image set in the tag
14:56 < genazt_laptop> or if no og tag is set the first image of the html file
14:56 < Voting> gildean: Now I'm getting Uncaught ReferenceError: async is not defined RE the line that says "var add1mul3 = async.compose(mul3, add1);" 
14:57 < Voting> I'm not using require on the client side.
14:57 < gildean> Voting: are you loading async before your script?
14:58 < Voting> yes but I'm not defining the var "async"
14:58 < nikkubhai> gildean: genazt_laptop: so then which one should I use? 
14:58 < Voting> gildean: I THINK I am loading it before, rather...
14:58 < Sivli> nikkubhai: I would be interested in seeing a package that managed the functionality your asking about. Having a drop in package that just does that would be very snazzy.
14:58 < Voting> How would I make sure that async is defined, gildean?
14:58 < gildean> Voting: idk about async and browser-usage, but libs in the browser are usually set as globals
14:59 < genazt_laptop> if a og tag is set use this and on the other hand grab all images and let the user decide what image he would take
14:59 < Voting> gildean: how do I do that?
14:59 < gildean> Voting: you don't, the script should do it
14:59 < nikkubhai> Sivli: Yes. I thought it already existed. Quite a number of sites implement it
14:59 < Voting> gildean: that script?
15:00 < gildean> Voting: the async.js script file should set 'async' as global so you can just access it from your script, as long as async.js is loaded before your script
15:12 < Tomas> Want to build a new node app with mongoDB/express - any recommendations for authentication?
15:14 < lpin> Tomas http://passportjs.org/
15:15 < Tomas> lpin, thanks, I'll give it a shot
15:18 < Sivli> nikkubhai: have you looked at this https://github.com/Ekito/bootstrap-linkpreview
15:51 < benjaminbenben> are there any node modules that allow you to initiate and communicate with a browser using webrtc?
16:01 < alant> i'm trying to compile nodejs on deb sid, and i get the following error: http://dpaste.org/A6Z4Y/
16:01 < alant> what am i missing?
16:05 < Ralt> hi people
16:05 < Ralt> is there a browserify watcher that doesn't suck? i.e. that doesn't crash after 3 rebuilds
16:13 <@mbalho> npm install beefy, it builds on request
16:22 < npx> So, guys, I want to use ArrayBuffers to read from a C struct but there isn't an a array buffer view for 64 bit integers. Is there some workaround? https://developer.mozilla.org/en-US/docs/JavaScript/Typed_arrays/ArrayBufferView
16:24 < nathan7> npx: There are no 64 bit integers in JavaScript.
16:25 < npx> i feel silly :(
16:27 < AAA_awright> Don't you ever wish the RFCs were formatted somewhat nicely
16:30 < AAA_awright> No? hmm, because I just did that http://tesla.bzfx.net/rfc/rfc2616.html
16:30 < npx> AAA_awright: awesome work!
16:31 < AAA_awright> npx: Thanks ^_^
16:31 < AAA_awright> See also http://tesla.bzfx.net/rfc/rfc3986.html
16:38 < npx> I really hate this concept of pulling a signed int from a buffer and then multiplying it by 1000 to get a javascript timestamp
16:43 < JamesMGreene> Does the Node.js license allow it to be compiled into another application?
16:43 < JamesMGreene> ^ isaacs konobi mbalho Nexxy piscisaureus_ et al
16:43 <@piscisaureus_> JamesMGreene: disclaimer: I'm not a lawyer
16:43 < JamesMGreene> Duly noted.
16:44 < JamesMGreene> Buuuuuuuuuuuuut
16:44 <@piscisaureus_> JamesMGreene: but, yes, you can, as long as you don't strip the license
16:44 < JamesMGreene> OK, thought so
16:44 < JamesMGreene> Interesting, interesting, interesting....
16:45 < AAA_awright> JamesMGreene: It's Open Source, that's kind of in the definition of FOSS
16:45 < JamesMGreene> AAA_awright: Not really, it's very particular to licensing
16:45 < nathan7> Hey piscisaureus_ 
16:45 < AAA_awright> JamesMGreene: What do you mean? If the license didn't allow it, then it couldn't be Open Source, by definition
16:46 < nathan7> piscisaureus_: Odd question of the day - how would multiple instances of node in one process fare?
16:46 < nathan7> piscisaureus_: each with a main thread of its own
16:46 < npx> that's a neat question, Would they all share an i/o thread pool?
16:47 < nathan7> Don't think so
16:47 < nathan7> I'm trying to see if I can share a LevelDB across node instances
16:47 < nathan7> IPC is slow
16:47 <@piscisaureus_> nathan7: not great, probably. Node uses a lot of static variables that would have to be tied to a particular "instance"
16:47 < nathan7> LevelDB is threadsafe so I could do some magic
16:47 < nathan7> piscisaureus_: mhm
16:48 < JamesMGreene> AAA_awright: Still believe that's not the case. Just like how if you use something that GPL, everything downstream but be GPL (copyleft)
16:48 < JamesMGreene> Not OSS is as open as other
16:48 < JamesMGreene> Not all OSS*
16:48 < AAA_awright> JamesMGreene: And still embedable inside other applications
16:48 < AAA_awright> *Open Source applications, I should say
16:50 < JamesMGreene> AAA_awright: you're probably right
16:51 < Maff^> quick question: are stream.Transform & stream.PassThrough supposed to emit end/finish/close events? In can't seem to get that working (neighter when using .pipe(writer, { end: false });)
16:51 < Maff^> or should I use stream.Duplex for those events?
17:12 <@Nexxy> JamesMGreene, mentioning a bunch of people with an arrow does nothing but make them have to scroll up through endless buffer to see what it is you're talking about lol
17:13 < Sly> Nexxy: <3
17:13 <@Nexxy> Sly, <3
17:17 < gnarf> <3 <3
17:18 < gnarf> --'--,--<@
17:18 < gnarf> ^ for rose Nexxy ;)
17:19 < gnarf> anyone in here going to TXJS monday?
17:19 < gnarf> and/or already in austin, cuz i landed last night
17:21 < JamesMGreene> Nexxy: Not sure I follow. What would you prefer instead? That I PM a bunch of people the same question? Or just not mention anyway?
17:22 < JamesMGreene> I know personally, in the rooms that I provide support in, I prefer to be mentioned so that my IRC client plays a noise and highlights text for me to find
17:22 < gnarf> mention in the same line as the question? :)
17:22 < JamesMGreene> gnarf: oh sure that makes sense
17:22 < JamesMGreene> like their client shows mentions in some separate window?
17:22 < gnarf> basically the arrow is annoying when you get the message and then have to look
17:22 < gnarf> yeah
17:23 < JamesMGreene> WIsh mine did :-P
17:23 < gnarf> mine buffers em up in my growl
17:23 < gnarf> so if there is a "gnarf: ^^^^" then i gotta go dig it up ;)
17:23 < JamesMGreene> Growl never works consistently for me on Windows :(
17:23 < gnarf> JamesMGreene: there's your problem... ;)
17:23 < gnarf> windows...
17:23 < gnarf> what IRC client do you use on win anyway
17:24 < gnarf> i still haven't found one I like
17:24 < JamesMGreene> good ole mIRC, lol
17:24 < JamesMGreene> Agreed on that, gnarf
17:24 < gnarf> meh, that interface is terribad
17:24 < JamesMGreene> crappy crappy
17:24 < gnarf> and nagware
17:24 < JamesMGreene> yup
17:24 < JamesMGreene> Just has more stable scripting support than other clients I've tried on Windows
17:24 < gnarf> yes
17:25 < JamesMGreene> So... blah....
17:25 < JamesMGreene> Time for a Mca
17:25 < JamesMGreene> Mac
17:25 < gnarf> JamesMGreene: i actually just started using SSH to irssi on windows
17:25 < gnarf> or my virtual box 
17:26 < geoous> anyone that understand json?
17:26 < gnarf> um
17:26 < gnarf> you should just ask the question, not ask for someone who might help with a question geoous ;)
17:26 <@Nexxy> JamesMGreene, it's not a big deal either way, but if you put the mentions in the same message, I will actually be able to see what you were saying
17:27 < geoous> I got a url like http://site/facebookOauth.php/" and when I open it I do the login proccess then in the url has something like json=1&mcToken=... I want to know how can I do to capture when the login is successfully and show my app. I'm using javascript..
17:28 < gnarf> geoous: i'm pretty sure you're in the wrong channel to be asking that question - this is about node.js, that seems like it's about browser based JS and/or php
17:44 < gnarf> isaacs: you're talking @txjs yeah? must remember to shake your hand at least once ;)
18:03 < JamesMGreene> Nexxy: Duly noted, will try to do that from now on
18:41 < GOMADWarrior> my file gives error on a line that doesnt exist
18:43 < JamesMGreene> Any core committers care to spitball an idea with me?
18:44 < JamesMGreene> I need someone who knows the architecture of Node.js core
18:44 < JamesMGreene> [fairly well]
18:44 < gmg85> hi
18:45 < gmg85> am using expressjs  global install to autogenerate  a project shell....problem is that app.js generated there in is minified and in error
18:45 < gmg85> any suggestions?
18:47 < vrlogrs> hey guys..
18:47 < vrlogrs> need some help ..
18:47 < gmg85> anyone?
18:48 < vrlogrs> so i have a site that uses several node.js servers for websockets on several different ports ..
18:48 < vrlogrs> i was hoping for all of them to be just available on one port, 80 -- is that possible?
18:49 < gildean> vrlogrs: yes
18:49 < vrlogrs> nice .. how gildean? :S
18:49 < gildean> you need a reverse proxy or a loadbalancer of type
18:50 < gildean> the easiest would be just to use the node-http-proxy from nodejitsu
18:50 < gildean> works great with websockets
18:50 < vrlogrs> oh, i also use nginx for serving the static files -- would that be a problem?
18:50 < gildean> vrlogrs: https://github.com/nodejitsu/node-http-proxy
18:51 < gmg85> is there anyone that can help me out....express js auto-generating erroneous code
18:51 < gildean> you could also use nginx to proxy the connections, if you're sporting a recent version that supports http 1.1
19:13 < bryanv> anyone around?
19:13 < AviMarcus> maybe bryanv. Ask your Q! Maybe some will respond.
19:14 < bryanv> okey
19:14 < bryanv> I'm doing a little experiment and I'm trying to use Box2DWeb as a module with nodejs
19:15 < bryanv> I modified the box2dweb.js file and added "module.exports = Box2D" which I think should export the Box2D object
19:15 < bryanv> the one created within box2dweb
19:16 < bryanv> then in my app js I put "var Box2D = require('./lib/box2dweb.js');"
19:16 < bryanv> now whenever I do "console.log" I get a stack trace error when I run the server
19:16 < bryanv> TypeError: Cannot call method 'write' of undefined
19:17 < bryanv> am I doing something wrong or does anyone have any pointers
19:17 < bryanv> it's pretty easy to reproduce
19:17 < Bubo> Hello guys. I have a few questions about node. What kind of web apps would need node? For example if you want to make a simple blog for yourself, would you use nodejs or would you go for Django/Rails (which would be faster I think (?) )
19:18 < Bubo> faster in terms of creating the web app
19:53 <@mbalho> Bubo: https://github.com/maxogden/art-of-node
19:54 < AviMarcus> random Q: does anyone have XRP to help fund a new ripple account?
20:03 < Bubo> mbalho: thanks, I'll read it
20:44 < Bubo> mbalho: woah, this is awesome.
21:05 < Bubo> Why is this chat dead? nobody needs help or wants to talk?
21:06 < Seventoes> anyone know what would case jitsu to want to set my app's version to null in package.json?
21:07 < Seventoes> all i could find was a tip to set my first/last name on nodejitsu's website, but i've already done that
21:07 < Seventoes> :-/
21:07 < Kakera> is there a license that says "do whatever you want as long as you link to the original repo"?
21:08 < mscdex> creative commons?
21:08 < mscdex> heh
21:08 < Kakera> it's not recommended for software
21:08 < mscdex> i know
21:10 <@mbalho> Bubo: it gets slow on the weekends
21:10 < mscdex> everyone is out partying!
21:11 < mscdex> just kidding, they're busy coding in node
21:13 < Bubo> mbalho: I see
21:17 < Bubo> mbalho: is Node.js still in a "beta phase" where they can change stuff. I saw people saying this about Node.js.. I am trying to make up my mind if I should learn it
21:18 <@mbalho> Bubo: it wont change enough that you wont understand that changes
21:18 <@mbalho> what changes*
21:18 < Mufasaa> Howdy folks
21:21 < Bubo> mbalho: I see, so I should learn Node.js. I am planning on making a web-text-based game with web sockets. I was going to use Django + Tornado for it but I think Node.js for the websockets would be better? What do you think?
21:21 <@mbalho> Bubo: web based games are a really good use of node IMO
21:21 <@mbalho> Bubo: since you have to use JS already anyway
21:22 <@mbalho> Bubo: you could also use django if you are already familiar with it for the web app part (login, logout, etc) and just use node for the actual game part
21:22 < Bubo> mbalho: yeah. but what about all of the game logic, database stuff, serving the webpages. I would've done that with Django
21:23 <@mbalho> i think node is best used as a scalpel, to do things that need it
21:23 <@mbalho> i havent heard great things about tornado
21:24 < Bubo> mbalho: yeah me neither, but it was the only thing I found in python and I could connect it to Django
21:26 < Bubo> mbalho: so what do you suggest? Node.js for the websockets (notification when you are attacked in the game, attacking other players, stuff like that) and Django for serving the websites, login, logout, all the data that needs to be saved to a database
21:26 < Bubo> what do you think?
21:27 < Kakera> use Node.js for all the things
21:27 < mscdex> node.js rules!
21:28 < substack> fact
21:29 < Bubo> Kakera: what do you mean? I thought node.js isn't a "web framework" so I can use it for database, game logic, serving websites, login, logout, registering, etc..
21:29 < Kakera> you can use node.js for everything
21:30 < Bubo> Kakera: how?
21:30 < Kakera> Bubo: by using libraries
21:31 < Mufasaa> Bubo: That's the beauty of today's ecosystems, there's some answer for everything.
21:31 < Kakera> there is a library for pretty much every database out there, you can use pure js for game logic, passport for authentication
21:32 < Bubo> So what should I use for all of that? Websockets + serving the webpages + all the logic
21:33 < Mufasaa> Bubo: websockets => socket.io, webpages => express/flatiron, all the logic => javascript/coffeescipt
21:33 < Mufasaa> simple, no :)
21:34 < Mufasaa> Bubo: socket.io is a really nice library, and the cool thing is that your client will grab the client.js from your server once they connect successfully
21:34 < Bubo> Mufasaa: what do you mean by "grab your client.js" ?
21:35 < Bubo> So, I have a lot to learn, it seems
21:36 < Mufasaa> Bubo: well, once your client navigates to the server that is hosting the server parts of socket.io, the server then automatically downloads, well pushes actually, the client js file to the browser as part of the page(s).  So you don't need to explicitly host it somewhere
21:37 < Mufasaa> Bubo: Life is a learning experience, but don't worry, at one point not that far back I was like that, still floundering about with Node.  But once you get a hang of the essentials, its actually quite fast to produce code.  Good code always takes a bit more time and planning :)
21:37 < Bubo> Mufasaa: yeah. But I need to learn more js before learning node, then express, then socket.io
21:37 < Bubo> my javascript knowledge isn't "big"
21:40 < Mufasaa> Bubo: Well, you can always check out the Mozilla Developer's network for javascript.  Frankly, I don't see a reason why you can't learn JS through learning node.  That said, once you've got the basics, the rest are libraries that you use.  Express and the rest you learn like you do everything else, by writing code, again and again until you get sufficient experience to produce something wor
21:40 < Mufasaa> *wow
21:40 < Bubo> Mufasaa: I can already understand a lot while reading js code, but writing it myself without always googling stuff; still not that confortable
21:41 < mscdex> Bubo: https://developer.mozilla.org/en-US/docs/JavaScript/Guide and http://nodejs.org/docs/latest/api/
21:41 < Bubo> mscdex: thanks, but I am already going through Professional javascript for web developers
21:41 < Mufasaa> Bubo: Haha, I have nearly 13 years of experience under my belt and I still google on occasion the syntax for this and that.  The last was last night when reading Addy Osmani's JS patterns.  Don't fret, its the same with all
21:42 < Bubo> Mufasaa: yes, I understand, but I still don't know how to write js code enough. I will go through Professional javascript for web developers first and then I will move on to learning node
21:42 < Bubo> i think i would learn node faster 
21:42 < Bubo> thsi way
21:43 < Mufasaa> Bub: if that's how you would feel comfortable then by all means.  Everyone learns in a different manner
21:45 < Mufasaa> Bubo: Here's an idea for you, github everything that you're doing whilst learning, then you can always pull someone in to help you out when you're stumped at something
21:46 < Bubo> Mufasaa: that's a good idea, thanks
21:46 < Bubo> Mufasaa: what would be a simple project to do in node.js ?
21:47 < Mufasaa> Bubo: My only other suggestion is that you make the effort to get into the habit of writing your apps in the context of a full ecosystem.  So you're using (these are the ones I'm comfortable with) Grunt, Yoman (includes Yo, Grunt and Bower) and a testing framework (mine being Jasmine)
21:47 < Mufasaa> Bubo: by that I mean my preferred one is Jasmine
21:47 < Mufasaa> Bubo: well, since you have something in mind, take baby steps in tackling your ultimate goal
21:48 < Mufasaa> Bubo: You mentioned a game earlier on, right?
21:51 < Bubo> Mufasaa: yes, a game
21:52 < Bubo> Mufasaa: I want to re-create a game that I used to play a LONG time ago and there are players that I am still in contact with them that they want to continue playing it (the game dev stopped developing the game 5-6 years ago)
21:52 < Mufasaa> Bubo: Funny, I've been considering reviving "Rags to Riches" myself
21:52 < GOMADWarrior> If reality is a simulation, are we players or NPCs
21:53 < Mufasaa> Bubo: I'd start with with simple echo server then upgrade that to involve websockets where you rebroadcast the echo to all the connected clients
21:53 < Bubo> Mufasaa: but first I need to serve webpages to the users
21:53 < Mufasaa> Bubo: then depending on the game, you _might_ want to go the canvas route
21:53 < Bubo> Mufasaa: the canvas route?
21:53 < Mufasaa> Bubo: Not so, this can all be on the console
21:54 < Bubo> Ah, yes
21:54 < Mufasaa> Bubo: yep for drawing some cool stuff. But you'd have to speak to someone else about that, I am anything but artistic.  I'll mess up stick figers
21:55 < Bubo> Mufasaa: No I wouldn't need that at all
21:55 < Mufasaa> Bubo: then I'd go the Express/Flatiron route
21:56 < Bubo> Mufasaa: it will all be done through buttons, menus. It's a text-based game
21:57 < Bubo> Mufasaa: I will go with Express since I saw many people recommend it and say it's the most popular framework so I guess there will be more tutorials on it
21:57 < Mufasaa> Bubo: Yep, then I'd probably go with Express or FlatIron (I personally use Express but not that there's anything wrong with FlatIron).  A matter of combining the two, websockets and Express, is trivial
21:57 < Bubo> Mufasaa: does Express include database handling? Like a MVC framework?
21:57 < Mufasaa> Bubo: there are TONS, but beware, some are better than others. I'm more the read the API and mess around school
21:58 < Mufasaa> Bubo: No, but it is MVC-ish.  You can use any of a billion DB connectors out there, each being better suited for a purpose
21:59 < Bubo> Mufasaa: so Express it is. What db connector should I use? Is there a standrand one that everyone uses? What do you mean each being better suited for a purpose? Don't you handle your own queries and such and the connector just handles the connection to the database?
22:00 < ningu> Bubo: I use any-db and gesundheit
22:00 < ningu> if you mean an SQL database
22:01 < Mufasaa> Bubo: I wasn't clear. I meant on the DB you are using.  I primarily work in the NoSQL world these days, but any-db was pretty good.
22:01 < Bubo> Ah
22:02 < Bubo> Mufasaa: I would probably use PostgreSQL since I am already running it for my Django websites
22:02 < ningu> any-db will use the driver, the pg one is called node-postgres
22:02 < Bubo> thanks
22:02 < ningu> gesundheit is an SQL query generator
22:02 < Mufasaa> Bubo: There you go, Ningu just answered
22:02 < Bubo> Yes, I see
22:02 < Mufasaa> Ningu: bless you, that's the second time, you might want to check that cold ;)
22:03 < ningu> hehe
22:03 < Bubo> haha
22:03 < Bubo> Mufasaa: so Express + any-db and node-postgres + socket.io. I need to start learning
22:04 < Mufasaa> Bubo: "What we need to learn to do, we learn to do by doing" - Socrates and mothers everywhere
22:05 < Mufasaa> Bubo: get coding :)
22:08 < Bubo> Mufasaa: thanks for your help but now I might bug you with questions :P
22:08 < Mufasaa> Bubo: Haha, I can always use a new alias... 
22:09 < Mufasaa> Bubo: You're more than welcome to, by teaching I learn
22:10 < Bubo> Mufasaa: haha, thanks. 
22:11 < Mufasaa> Bubo: My pleasure
22:58 < motaro> hello everyone
22:59 < motaro> People I need to get work through the internet how do you guys find freelance work?
23:07 < niftylettuce> Released it!  Generate easy API docs with Github and Node/Express middleware @ https://twitter.com/niftylettuce/status/323208084212297728
23:12 < qq99> is setInterval not recommended in a node server app?  I'm using nodemon too, seems like the interval isn't exactly the time period I declared
23:13 < fayimora> Hey guys, any idea what's wrong with this template? https://gist.github.com/fayimora/5380509#file-new-jade The error I get is in the comments, a SyntaxError :(
23:13 < fayimora> probably not the best place to ask but I'm desperate
23:20 < GOMADWarrior> wuts a heartbeat
23:21 < rudiX> GOMADWarrior: its my favorite song http://www.youtube.com/watch?v=opkq-ynqJoE
23:21 < rudiX> :)
23:21 < tdecs> fayimora: add commas between attributes
23:23 < fayimora> tdecs: wow thanks a lot. That error message is definitely not useful!
23:23 < fayimora> will go back to handlebars after this tutorial 
23:27 < owen1> was there any change with node-waf? it's not being created anymore when installing node?
23:33 < caasiHuang> is there any developer near Monterey Park?
23:33 < caasiHuang> come here to visit my grand parents
23:33 < caasiHuang> nothing to do today :/
23:39 < rudiX> forever alone bro fist
23:41 < Aartsie> hi all i have some problems with wit nodejs net function please can someone help me with this ? https://plus.google.com/u/0/115881467032164225032/posts/FkH1KDN7KdQ
23:47 < richweskus> Hey guys, im busy working on an applicatin, i have a function which scrapes a website to work out home many pages there are. how to i do that operation in a non blocking way?
23:50 < richweskus> is there a way to magically onComplete callback
23:53 -!- mode/#Node.js [+o TooTallNate] by ChanServ
23:59 < andreleite77> teste
--- Log closed Sun Apr 14 00:00:04 2013
