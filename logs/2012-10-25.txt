--- Log opened Thu Oct 25 00:00:07 2012
00:12 <@konobi> moo!
00:13 < zot> konobi: tnx
00:17 < drudge> wow, finally got my free chunkhost vps
00:25 < Leeol> Are there any tools/anything to help me figure out why a nodejs process is staying open? It's as if a server is not closed properly, but i have no idea what is wrong.
00:25 <@konobi> Leeol: anything that has event listeners
00:26 < Leeol> Unfortunately that is quite a few things :/. I've got a server, a request, and etc. 
00:26 < Leeol> It only hangs if my unit test http-request throws an error in the callback, but i don't know why that should cause a hang 
00:27 < Leeol> I assume it's the http-request, but i can't reproduce it outside of the scenario. oy.
00:27 < ChrisPartridge> Leeol: gist your unit test, someone might be able to help further based off that
00:30 < MI6> joyent/node: Ben Noordhuis v0.8 * 4b8629d : v8: remove optimization switches  Remove compiler switches from $(TOPLEVE (+2 more commits) - http://git.io/5_Y-bA
00:31 <@konobi> ircretary: when was mde last here?
00:31 < ircretary> konobi: mde was last seen at 2012-10-04T21:00:01.064Z, joining #Node.js
00:32 < Leeol> ChrisPartridge: Well i wasn't so much asking for help with this, but more for debugging tools to see what is not closed. I can't reproduce the error at all so i'm having trouble pinning it down.. i was hoping Nodejs had some advanced debugging options that would list out how many different event branches it has, and which one hasn't returned.. or something
00:33 < Leeol> As far as the test, it's nothing but a damn http.request :(
00:39 < novochar> i want to log data that is sent to the server...
00:39 < novochar> i'm not sure how to do that
00:39 < airtanah> novochar: what kind of data?
00:39 < novochar> specifically it's a put request
00:39 < novochar> from a jquery call
00:40 < novochar> i want to console.log the data to verify it's the data i think it is
00:41 < airtanah> req.on('data',function(data){console.log(data)}) would that work?
00:41 <@konobi> Leeol: there's ways to tell node to spit out debug statements for eventemitters, that might help
00:41 < Leeol> konobi: What is the library/etc for something like that?
00:41 <@konobi> just the src
00:42 < Leeol> Ah, a custom build?
00:42 <@konobi> nope... the details are in the src
00:44 < novochar> airtanah: was afk, no, that's the first thig i tried :|
00:45 < airtanah> novochar: is that missing the data?
00:45 < novochar> https://gist.github.com/1846e8af9ff709197396
00:45 < novochar> ignore line 5
00:46 < novochar> i took this from a stackoverflow post somewhere
00:46 < novochar> and modified it very little
00:47 < airtanah> novochar: two tools that might help 'curl --data 'hello world' http://localhost:8124/
00:47 < airtanah> and 'nc -l 8124' 
00:47 < airtanah> to check what the server/client are sending in the rawest of forms
00:48 <@konobi> novochar: you're writing out to the client before you may have received data
00:48 < novochar> res.writeHead should go?... 
00:49 < novochar> where exactly?
00:49 <@konobi> once you've gotten all the data
00:49 < airtanah> res.on('end'
00:49 < novochar> on 
00:49 < novochar> oh*
00:49 < novochar> yeah
00:49 < novochar> thank you so, so much
00:49 < novochar> i'll try
00:50 < novochar> https://gist.github.com/e7da98667ceb6dfe44e4
00:52 < novochar> console.log('data:'); console.log(data) never happens
00:53 < novochar> what's the best way to check if there's data?
00:55 <@konobi> check the content-length
00:56 <@konobi> novochar: console.dir(req) may also help
00:56 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
00:57 < airtanah> novochar: isolate and test - does your server recieve data from a curl? forget jquery for the moment
00:57 < airtanah> what does the jquery call send? you can use 'nc -l' to capture the data raw
01:01 < novochar> airtanah: how do you verify?
01:01 < novochar> the req.on('data', function(d) {console.log(d...?
01:02 <@konobi> novochar: try console.dir(req) at the top of the opening function
01:02 < novochar> oh yeah
01:02 < novochar> it's definitely getting that
01:02 < novochar> a bunch of stuff
01:02 <@konobi> k... so you can hunt through and see if you have a content-length header
01:02 < novochar> i want to verify it's a put request and what type of data it's passing along
01:02 < novochar> k
01:04 < airtanah> curl -X PUT --data "hello world" http://localhost:8124/
01:04 < novochar> content-length: 0
01:04 < novochar> :\
01:04 < airtanah> if that works, then there's a good chance your jquery is messing up
01:05 < novochar> how would you pass along some data via a curl?
01:05 < airtanah> --data "blabla bla"
01:05 < novochar> curl -d 'hey' <someaddress>
01:05 < novochar> k
01:06 < airtanah> make sure you use -X PUT otherwise it will GET
01:07 < novochar> so content-length is 3
01:07 < airtanah> does it spit out the data?
01:07 <@konobi> h e y
01:08 < airtanah> novochar: i gotta take off, good luck
01:09 < novochar> thanks airtanah 
01:10 < novochar> that's great
01:10 < novochar> wow, so many people using irccloud?...
01:11 <@konobi> yar, kinda odd
01:49 < torvalde> do anyone know if it is planned a 0.8.13 release tomorrow?
02:00 < jwulf> anyone rocking typescript?
02:00 < jwulf> having trouble importing the node.js modules
02:19 < jjjjohnnny> how does one unpipe a stream?
02:30 < deltab> jjjjohnnny: do what?
02:30 < mscdex> jjjjohnnny: https://groups.google.com/group/nodejs/browse_thread/thread/ef947474e655d542
02:30 < jjjjohnnny> deltab: reverse stream.pipe(stream2)
02:33 < jjjjohnnny> mmhmm
02:33 < jjjjohnnny> thx
02:36 <@konobi> jjjjohnnny: depends what you mean by that
02:37 <@mbalho> jjjjohnnny: .end() the pipe
02:37 < jjjjohnnny> Ceci n'est pas unpipe
02:37 < jwulf> should i do this:
02:37 <@konobi> jjjjohnnny: again... what do you mean?
02:37 < jwulf> return cb (err, result);
02:37 < jjjjohnnny> i dont want to close the stream off
02:38 < jwulf> or should I do cb(err,result); return;
02:38 < jjjjohnnny> removeAllListeners seems to the way
02:38 < mscdex> jwulf: it shouldn't matter, the former saves a line
02:38 <@mbalho> jjjjohnnny: ahh yea
02:38 < jwulf> and if i have no return statement, will it return automatically when it hits the end of the code block?
02:39 <@mbalho> jjjjohnnny: pipe basically on('data') and on('end') listeners
02:39 < jjjjohnnny> but instead i chose to use pause-stream to buffer, and pause()/resume()
02:39 < mscdex> jwulf: yes
02:39 < jwulf> k, got it
02:39 < jwulf> thanks mscdex 
02:39 < jjjjohnnny> mbalho: yeah I dont like the end-ness of that
02:40 < jjjjohnnny> shouldnt listen for end, IMHOHOHO
02:41 <@mbalho> jjjjohnnny: has to so that it knows to propagate
02:42 <@mbalho> a.pipe(b).pipe(c) if a ends so should b so should c
02:42 <@mbalho> since your water source has been cut off
02:42 < jjjjohnnny> mbalho: what if you are also piping b to d
02:42 < jjjjohnnny> and e to b
02:42 < jjjjohnnny> and e didnt end()
02:43 <@mbalho> i dunno this shit gets complicated :D
02:46 < MI6> joyent/libuv: Ben Noordhuis v0.8 * f43ad85 : include: fix ngx_queue_foreach() macro  Guard against the possibility tha - http://git.io/kOoquw
02:46 < MI6> joyent/libuv: Ben Noordhuis master * 5cb4197 : Merge branch 'v0.8' (+13 more commits) - http://git.io/2oC3aA
02:46 < marshall> hi node
02:51 < mdedetrich> whats a good abstract logging library in node that also logs to loggly/
03:05 <@konobi> mdedetrich: bunyan or winston?
03:05 < mdedetrich> aah winston
03:05 < mdedetrich> that was the one
03:05 < mdedetrich> cheers
03:16 < mscdex> the two should merge: winyan or bunston
03:26 < jesusabdullah> lolnope
03:26 < jesusabdullah> minilog 4 lyfe
03:26 < jesusabdullah> actually I use winston sometimes but I *really* wish the "transports" were just streams
03:27 < jesusabdullah> does bunyan do that? I think bunyan only gives you the logger -> JSON stream
03:27 < jesusabdullah> I think
03:27 < jesusabdullah> idk dude
03:30 < mscdex> matlab.js!
03:31 < exit2> I need some help wrapping my head around closures
03:41 < drojas> what's the best way to isolate different apps in a node development environment, is there any virtualenv-like node cli tool?
03:44 < creationix> drojas: what do you need to isolate?
03:45 < creationix> node apps keep their dependencies local inside their tree
03:45 < creationix> if you want multiple node versions installed at once, you can use a tool like nvm, n, or nave
03:59 < drojas> thanks.. managing dependencies locally sounds great
04:05 < davidbanham> So I'm creating a fs.createReadStream which I then .pipe to zlib.createGzip which I then .pipe to res. How in heck do I calculate the content-length header to send?
04:07 < gkatsev> lol @ topic
04:17 <@konobi> davidbanham: write it to a file
04:17 < airtanah> any idea how require() searches for modules when given a local path?
04:17 < davidbanham> konobi: But I don't waaaannnnaaaa. It's so nice when it's all just streams.
04:17 <@konobi> airtanah: look at the docs
04:17 < airtanah> i am doing some vm.runInNewContext() work
04:18 <@konobi> davidbanham: you can specify it in other ways
04:18 < airtanah> konobi: i have been googling for a while now
04:18 < davidbanham> How can I calculate what the byte length of the gzipped content will be, though?
04:19 < airtanah> i need to re-adjust where require is looking
04:19 <@konobi> skip the "node" search and look at "http gzip content-length"
04:20 < regDude> where is ./node_modules
04:20 < airtanah> i tried adjusting require.paths but it gave me a "require.paths is removed. Use node_modules folders" error
04:21 < davidbanham> konobi: Chunked transfer?
04:22 < zak> fyi, chunked transfer is HTTP 1.1
04:22 < davidbanham> I'm cool with that. My client target supports 1.1
04:22 < zak> ok awesome
04:24 <@konobi> yup
04:29 < davidbanham> Would I be correct in saying that node http will do chunked transfer by default when I pipe a readable stream from fs into the res writeable stream?
04:31 < ChrisPartridge> davidbanham: should do
04:31 <@konobi> davidbanham: TIAS?
04:32 < davidbanham> Bleh. In that case my client target claims it supports HTTP 1.1 but doesn't actually accept a chunked transfer.
04:32 < davidbanham> konobi: Sorry, you've lost me there.
04:32 <@konobi> (try it and see)
04:33 < davidbanham> Konobi. I will, just being lazy about busting out Wireshark again. Spent way too much time in it over the last 48 hours.
04:34 <@konobi> k... too jetlagged meself... so ttfn!
04:35 < airtanah> https://gist.github.com/4ee02392aecac42593cd
04:35 < airtanah> my require woes
04:36 < davidbanham> konobi: Thanks!
04:42 < mscdex> airtanah: what are you trying to accomplish?
04:44 < airtanah> mscdex: i solved it! 
04:44 < mscdex> heh
04:44 < airtanah> you have to fix module.filename
04:45 < airtanah> to the 'faked' file
04:45 < airtanah> mscdex i am injecting some server analytics 'out of band' so to speak
05:02 < davidbanham> For anyone playing at home, yes piping a readable stream into a writeable res stream from http does to chunked encoding by default.
05:02 < davidbanham> Or at least it does if you set that header. It also seems to not do it if you set a content-length header.
05:02 < davidbanham> Science!
05:20  * elliottcable rubs purr's neck
05:20  * elliottcable snuggles up close to purr
05:20 < elliottcable> (=
05:22 < elliottcable> -me test
05:22  * purr test
05:22 < elliottcable> hm. odd.
05:22 < elliottcable> -start
05:22 < elliottcable> lol
05:27 < zak> -me is an idiot
05:27  * purr is an idiot
05:37 < maplesoft> hemanth_:  can webrtc communicate between browsers of different locations without the need of a third server?
05:43 < SomeoneWeird> maplesoft, doubtful
05:47 < deoxxa> maplesoft: sure - so long as both browsers can somehow find each other. that could be by users calling each other on the phone and giving out their ip/port or something.
05:47 < deoxxa> maplesoft: practically though, no. it's not really going to work.
05:55 < maplesoft> deoxxa:  so its just a matter of browser support. which is then a matter of time?
05:56 < deoxxa> wat
05:56 < maplesoft> http://stackoverflow.com/questions/1032006/will-html5-allow-web-apps-to-make-peer-to-peer-http-connections 
05:56 < maplesoft> UPDATE 10/17/2012: This functionality now exists in Chrome Stable v22. In order to use this functionality in Chrome, one must enable two flags in chrome://flags:
05:56 < maplesoft> Enable MediaStream Enable PeerConnection
05:56 < maplesoft> deoxxa:  if the browser supports that connectivity. then its possible
05:56 < maplesoft> isnt it
05:57 < deoxxa> yes, but you somehow need to get the browsers to talk to each other
05:57 < deoxxa> you need something to coordinate them, i mean
05:57 < AAA_awright> NO IT WON'T
05:57 < deoxxa> ಠ_ಠ
05:57 < AAA_awright> HTML5 != ECMAScript APIs
05:57 < maplesoft> deoxxa:  ya. a browser is a desktop software. if it is programmed to convey machine requiest to browser tab. it is possible
05:57 < deoxxa> ah, good point AAA_awright
05:58 < maplesoft> AAA_awright:  html5 isnt javascript .  but they can  work in integration
05:58 < AAA_awright> It's not even an an ECMAScript API, it's a generic API modeled in something called WebIDL, that you can implement with ECMAScript, Java, and a host of other languages
05:59 < AAA_awright> deoxxa: Yeah, see how I spun it around? :p
06:00 < maplesoft> what about the chrome link i pasted?
06:00 < AAA_awright> I just cringe every time I see someone use HTML5 as a buzzword for something it doesn't actually do, and I cringe even more when they add a feature that shouldn't be HTML into the specification (why the hell do they need SVG and MathML as a subset of HTML?! Bring on the bloat!)
06:00 < AAA_awright> </rant>
06:03 < maplesoft> what about the chrome link i pasted?
06:06 < AAA_awright> maplesoft: What about it?
06:11 < maplesoft> AAA_awright:  chrom can doe it
06:11 < AAA_awright> http://www.w3.org/TR/webrtc/#peer-to-peer-data-api is the specification for p2p data
06:12 < AAA_awright> As of a month ago it hasn't been implemented
06:12 < AAA_awright> But it's coming along
06:12 < AAA_awright> And better yet, hixie has nothing to do with it
06:12 < maplesoft> AAA_awright:  so what iam asking , will be implemented in future for sue
06:12 < maplesoft> sure
06:13 < AAA_awright> maplesoft: It's Highly Likely we'll see some sort of p2p API soon. In the meantime, try browserver
06:13 < AAA_awright> Or work up some sort of websocket proxy
06:14 < maplesoft> AAA_awright:  browserver?
06:14 < AAA_awright> It's a module someone wrote that puts an HTTP server in your web browser, google for it
06:15 < maplesoft> so that is possible even now with broserver
06:15 < maplesoft> every browser is a server. 
06:15 < maplesoft> as wel as being a client
06:16 < maplesoft> AAA_awright: am i right?
06:17 < AAA_awright> Yeah, sorta
06:17 < AAA_awright> I'm not sure what it's useful for
06:17 < maplesoft> k
06:17 < AAA_awright> It's not often you need a stateless protocol to make requests of the web browser
06:18 < maplesoft> AAA_awright:  what do you think how much time it will take for all the browsers to support p2p communication and what technology will it base on
06:19 < AAA_awright> idk
06:19 < mdedetrich> I feel like dancing
06:20 < ChrisPartridge> mdedetrich: break it down
06:21 < mdedetrich> I don't want to pay for the damage though....
06:34 < SoulRaven> hello
06:34 < SoulRaven> felixge are you here?
06:35 < SoulRaven> anyone use node-mysql with fields that has unsigned zerofill attributes?
07:02 < SoulRaven> anyone use node-mysql with fields that has unsigned zerofill attributes?
07:12 < sshaginyan> Hey guys I need to continuously check if an array is empty and if it's not do something
07:12 < sshaginyan> how would I do this?
07:12 < yawnt> set an interval?
07:13 < sshaginyan> settimeout?
07:13 < sshaginyan> k
07:13 < jwulf> or,if you can
07:13 < jwulf> put a setter / getter around it
07:13 < davidbanham> sshaginyan: How continuous is continuously? The naeive way would be to just run a loop, but that will eat your CPU. A slightly better method would be to set an interval. A potentially better or maybe way worse method would be to monkey patch the array.push method or something.
07:13 < yawnt> setInterval, not timeout
07:13 < jwulf> and use event emitter
07:14 < yawnt> jwulf: then it wouldn't be an array anymore :D, but that'd work too yes
07:14 < sshaginyan> jwulf: Would you happen to have an example?
07:15 < jwulf> sshaginyan, got your code on github or pastebin?
07:15 < sshaginyan> Here is my situation I have a web crawler and a url frontier (array) that gets filled very fast
07:15 < sshaginyan> jwulf: one sec
07:15 < sshaginyan> http://pastie.org/5113271
07:16 < sshaginyan> jwulf: on line 11 worker.send(frontier.pop()); this might be empty
07:17 < sshaginyan> I want to make sure it's not before I do a pop
07:19 < jwulf> if (frontier.length > 0) worker.send(frontier.pop()); 
07:19 < jwulf> ?
07:19 < sshaginyan> lol
07:19 < sshaginyan> thanks you
07:19 < sshaginyan> thanks yous
07:20 < jwulf> or am i missing something?
07:20 < sshaginyan> no
07:20 < sshaginyan> Let me try it out
07:22 < sshaginyan> it's good
07:22 < jwulf> cool
07:25 < syskk> does the debugger statement work with node-inspector?
07:29 < syskk> yep works
07:39 < [AD]Turbo> hola
08:50 < prateekp> hello
08:51 < prateekp> has anyone encountered with this problem --  Origin null is not allowed by Access-Control-Allow-Origin.
08:52 < SomeoneWeird> prateekp, https://en.wikipedia.org/wiki/Same_origin_policy
08:53 < prateekp> how to overcome it SomeoneWeird
08:53 < prateekp> should i run a server 
08:55 < prateekp> SomeoneWeird : any suggestions
08:55 < prateekp> ?
08:59 < RLa> prateekp, maybe the service offers jsonp too?
09:00 < prateekp> RLa : what did u mean ??
09:00 < prateekp> i dint understand
09:00 < RLa> http://www.codeproject.com/Articles/42641/JSON-to-JSONP-Bypass-Same-Origin-Policy
09:06 < gng__> hi - can anyone help - trying to apply basic authentication (username/password) to a node server ?
09:40 < prateekp> RLa : what did u mean ??
09:40 < prateekp> i dint understand
09:41 < RLa> did you read the link i posted
09:42 < prateekp> yes i read it now .... and i found somewhere on the net as well that hosting the webpage over server using rails or node.js would also be helpful
09:43 < prateekp> RLa : is that correct
09:44 < RLa> yes, you can make a proxy
09:44 < RLa> but i would not bother when the service you want to use supports jsonp
09:45 < prateekp> i do not have any knowledge of jsonp
09:45 < prateekp> RLa :^
09:46 < SomeoneWeird> heh
09:46 < RLa> did you read the link
09:47 < RLa> sometimes the web service you want to use supports the jsonp directly so you do not have to proxy
09:48 < RLa> for newer browsers using the cross origin policy manifest might also help
09:49 < RLa> http://en.wikipedia.org/wiki/Cross-origin_resource_sharing
10:04 < dileep> hello
10:04 < dileep> node.js developer
10:04 < dileep> hey how could i include css into my form submission code
10:05 < SomeoneWeird> that's not a node question
10:05 < SomeoneWeird> go ask in #css
10:06 < dileep> ma mean how could i make he page dynamic with good colours
10:06 < SomeoneWeird> <SomeoneWeird> go ask in #css
10:06 < jwulf> what's the best way to declare a Typescript module?
10:07 < jwulf> i've written my library as a class
10:07 < dileep> is it like we are no able to put colours in page for node.js
10:07 < pixie79> hi all - i am getting a node build error on debian, i think it is missing a python dep but i am not sure what can anyone advise please - http://pastebin.com/m8MLpTHu
10:07 < SomeoneWeird> dileep, dude, go ask in #css
10:08 < jwulf> dileep in the html you need to put a reference to a .css file
10:08 < dileep> SomeoneWeird,ok
10:08 < SomeoneWeird> pixie79, what v. of python?
10:08 < SomeoneWeird> i think you need 2.6
10:09 < jwulf> dileep: <link href="/route/css/mycssfile.css" rel="stylesheet" type="text/css">
10:09 < jwulf> and put your css in that file
10:10 < dileep> jwulf,Ok let me try
10:11 < pixie79> SomeoneWeird: ok looks like the problem - this is 2.5
10:11 < jwulf> it goes into the head of the html that you serve to the client in the response
10:14 < dileep> jwulf,please tell me where i have to include   	git://gist.github.com/3951807.git
10:16 < jwulf> dileep: you have two options
10:16 < SomeoneWeird> dileep, we've all told you like 20 times to use express
10:16 < SomeoneWeird> it will make it SO much easier
10:16 < jwulf> (1) you can put the css directly into the html
10:17 < jwulf> (2) you can create another route to serve the css file, and put a link to the css file
10:17 < jwulf> if you are learning node and getting a feel for things from the ground up, then this is a good way to do it
10:17 < jwulf> you'll want to use express or something similar to do any significant later on, of course
10:18 < jwulf> dileep, this is what embedded css looks like: 
10:18 < jwulf> http://www.blooberry.com/indexdot/css/examples/cssembedded.htm
10:18 < dileep> But i wont be able to get proper knowledge about express
10:18 < SomeoneWeird> why not..?
10:19 < SomeoneWeird> http://expressjs.com/guide.html
10:19 < jwulf> here's a basic tutorial on css:
10:19 < jwulf> http://www.w3.org/Style/Examples/011/firstcss.en.html
10:21 < dileep> jwulf,the thing is how do ii   include css code into ma node.js code.
10:21 < jwulf> dileep, let me spell that out again for you
10:21 < SomeoneWeird> use a static file server
10:21 < jwulf> hang on - dileep, did you write that code in the gist?
10:21 < dileep> even in the same or else make a differ file.please have a looook at gist that i make itt...and tell me
10:22 < jwulf> is that your code? https://gist.github.com/3951807
10:22 < jwulf> or did you copy it from somewhere?
10:22 < SomeoneWeird> its his
10:22 < dileep> yeah mine
10:22 < jwulf> so dileep, you are writing the html to the client using res.write
10:22 < jwulf> so in the html you have two choices
10:22 < jwulf> (1) embed the css
10:22 < jwulf> no, you have one choice
10:23 < jwulf> ==EMBED THE CSS==
10:23 < jwulf> dileep, have a look at this link
10:23 < jwulf> http://www.blooberry.com/indexdot/css/examples/cssembedded.htm
10:23 < jwulf> it shows you what css embedded in html looks like
10:23 < jwulf> you embed the css into the <head>Part of the response</head>
10:24 < jwulf> inside a <style> tag</style>
10:24 < jwulf> just like it is in the example
10:24 < jwulf> you could even..... copy the example into your code
10:24 < dileep> jwulf,
10:24 < dileep> okk
10:24 < jwulf> although it's a lot of css
10:25 < jwulf> so you have your node.js code, which is writing html code. Inside the html you put the css code
10:25 < jwulf> in the <head> element of the html
10:25 < jwulf> inside a <style> tag
10:25 < jwulf> just like the example
10:28 < SomeoneWeird> dileep, https://gist.github.com/3951841
10:28 < SomeoneWeird> there, I converted it to express
10:29 < jwulf> SomeoneWeird, but where's the css????
10:30 < dileep> Someone,there are two files
10:31 < jwulf> yes dileep, it's called "separation of concerns"
10:31 < jwulf> one file is code
10:31 < jwulf> the other file is content
10:31 < jwulf> instead of mixing the two together
10:31 < jwulf> it's a more flexible design
10:31 < dileep> how could i run that code,
10:32 < SomeoneWeird> https://gist.github.com/3951841
10:32 < SomeoneWeird> there
10:32 < SomeoneWeird> css
10:32 < pickels> If I post base64 data to a http server and then stream it to a write stream. How do I tell it to store the data as binary?
10:32 < jwulf> legendary
10:32 < jwulf> now, about *my* homework....
10:33 < dileep> Cool man!!!
10:33 < SomeoneWeird> pickels, new Buffer(urstring, 'base64').toString('binary')
10:33 < SomeoneWeird> ?
10:34 < pickels> SomeoneWeird, does that mean I had to watch the data event and cannot pipe it?
10:34 < SomeoneWeird> ah
10:34 < SomeoneWeird> not sure, I don't really use streams, deoxxa ? :P
10:37 < dileep> Someone,u have given me the code ,then please help me how could i run that code..should have to make directory and put that files into thatt
10:38 < SomeoneWeird> put the first file into your index.js or whatever you run
10:38 < SomeoneWeird> then create a new folder called files
10:38 < SomeoneWeird> create a file in that called "index.ejs" and put the html in that
10:38 < SomeoneWeird> then create another folder in the folder where index.js is called public, then inside that make another folder called css
10:38 < symeog> what exactly is --sessions in express framework ?
10:39 < SomeoneWeird> then in the css folder create a file called "index.css" and put your css in that
10:42 < symeog> can anybody give me some hints on express framework pls ? i am a beginner to node/express/javascript 
10:43 < symeog> i do have programming experience though and i know what a MVC framework is
10:43 < sinclair> express sucks
10:43 < SomeoneWeird> you suck sinclair 
10:44 < sinclair> meh
10:44 < symeog> sinclair: what is ur suggestion ?
10:45 < SomeoneWeird> ignore him, express is the best you can use
10:46 < symeog> SomeoneWeird: thenks
10:46 < sinclair> SomeoneWeird: no, your right. there has, or will ever be another alternative to express. EVER
10:51 < symeog> if someone here writes web applications with form data in express i would like to ask him a couple of questions
10:51 < SomeoneWeird> symeog, sup?
10:51 < SomeoneWeird> lol
10:52 < symeog> yeah i would like to know the recommended way of persisting form/page field values across postbacks
10:54 < sinclair> symeog: who would you need to do that?
10:55 < sinclair_> symeog: why would you need to do that?
10:56 < symeog> ok i ll give u an example
10:56 < symeog> ok i have 2 god damn fields…a fucking name and a fucking password…..and a login button…the user submits with the wrong password…..i need the password field cleared BUT the username field with the value the user typed before the submit…..god!!!! i miss asp.net !!!
10:56 < sinclair_> symeog: watch your language
10:57 < SomeoneWeird> ... really sinclair_ ?
10:57 < sinclair_> keep it civil
10:57 < pickels> Hes saying the exact same thing in express. Seems hes a bit annoyed about something.
10:57 < dileep> Ahhh civil war!!!!
10:57 < dileep> huaaah
10:58 < SomeoneWeird> symeog, just use ejs or something and pass the value back to the renderer symeog 
10:58 < MI6> joyent/libuv: Ben Noordhuis master * 6150fed : unix: fix ‘fd’ undeclared build error  Reapplies commit b5028c5b, failed  - http://git.io/aSWL8Q
10:58 < sinclair_> pickels: sorry, let me be clear. express sucks...hard
10:58 < symeog> i am in two rooms trying to get one (in my opinion) very simple answer
10:58 < pickels> No you are in two rooms asking questions about things that you think is the answer. 
10:58 < symeog> sinclair_: u keep saying that but u don't give us some alternatives to argue !!!
10:59 < jkarsrud> symeog: pass the username value back to the view in the response
10:59 < SomeoneWeird> exactly ^, easy
10:59 < sinclair_> symeog: im not interested in arguing... and what jkarsrud said
10:59 < jkarsrud> the reason it works in asp.net is because of the ViewState object
10:59 < SomeoneWeird> (i said it first, if you noticed while you weren't arguing)
10:59 < symeog> jkarsrud: YES!!!!
10:59 < sinclair_> SomeoneWeird: shhh
10:59 < symeog> do we have a similar here /?
10:59 < jkarsrud> no
11:00 < jkarsrud> the viewstate is a horrible, horrible thing
11:00 < jonpacker> ^
11:00 < SomeoneWeird> agreed
11:00 < symeog> ok can u please give me the recommend it way 
11:00 < pickels> nutting wrong with a little text in your html man.
11:00 < sinclair_> symeog: no, but doing it without ViewState is the better way
11:00 < symeog> agreed on that too!!!
11:00 < sinclair_> symeog: ViewState is like Express, they suck
11:00 < symeog> sinclair_: hahahahahahah
11:00 < symeog> man!!
11:01 < jwulf> i'm liking meteor
11:01 < jkarsrud> the reason it works is because the postbacks are triggered with JS, and the whole encoded viewstate object is posted to the server, then decoded there
11:01 < jkarsrud> and then the viewstate is pushed back to the client on the response, and it does all kinds of magic to put the values back in the form fiels
11:01 < jkarsrud> fields, even
11:01 < jonpacker> sinclair_: what's your beef with express?
11:02 < sinclair_> jonpacker: this guy https://twitter.com/tjholowaychuk
11:02 < jonpacker> you don't like a library because of the author? nice.
11:02 < pickels> You hate technology cause of the author? 
11:02 < pickels> lol
11:02 < symeog> lol
11:03 < jkarsrud> symeog: so what I'd do in the response if the user types the wrong password, is to put the req.form.username into the viewmodel that you post back to the view on that type of error
11:03 < jkarsrud> since you're using express I bet you're using some form of view engine
11:03 < symeog> jkarsrud: i haven't started yet…i am too newbie
11:03 < pickels> jkarsrud, he  needs to put the form values into his locals. 
11:03 < symeog> but thats the answer i wanted i guess
11:04 < jkarsrud> pickels: yes, that's what I'm saying
11:04 < pickels> jkarsrud, and rerender his form.
11:04 < jkarsrud> locals = viewmodel :)
11:04 < pickels> yup
11:04 < jkarsrud> and do a res.render(sometemplate, {username: req.form.username}) basically
11:04 < symeog> ok can we take it step by step pls ?
11:04 < symeog> what view engine should i use ?
11:05 < SomeoneWeird> ejs
11:05 < jkarsrud> now this became more of an #express discussion, we can continue in there? 
11:05 < jkarsrud> or we can continue here :P
11:05 < symeog> sure
11:05 < symeog> whatever
11:05 < symeog> u pick
11:05 < symeog> here or there ?
11:06 < dileep> someone his error comes tto me       console.log(JSON.stringify(req.body);                                         ^ SyntaxError: Unexpected token ;     at Module._compile (module.js:437:25)     at Object.Module._extensions..js (module.js:467:10)     at Module.load (module.js:356:32)     at Function.Module._load (module.js:312:12)     at Module.runMain (module.js:492:10)     at process.startup.processNextTick.process._tickCallback (
11:07 < bigkevmcd> dileep: SyntaxError is fairly unambiguous ?
11:07 < krajesh> hi guys
11:08 < dileep> bigkevmcd,check thiis https://gist.github.com/3951841
11:08 < SomeoneWeird> dileep, sorry, console.log(JSON.stringify(req.body));
11:08 < dileep> sommeone,check the code once again plz
11:09 < krajesh> I am new to node.js  and I have cloned the node.js from https://github.com/joyent/node.git
11:09 < krajesh> but When i try to Install it I am getting error 
11:09 < krajesh> Track back
11:09 < SomeoneWeird> krajesh, just use a binary
11:09 < krajesh> 04:29:06 {master} /krajesh/mongoDB/node$ ./configure 
11:10 < krajesh>   File "./configure", line 343
11:10 < krajesh>     o['variables']['v8_enable_gdbjit'] = 1 if options.gdb 1 else 0
11:10 < krajesh>                                             ^
11:10 < krajesh> SyntaxError: invalid syntax
11:10 < jkarsrud> krajesh: use the binary installers from nodejs.com
11:10 < jkarsrud> .org I mean
11:10 < jkarsrud> really no need to build nodejs from source if you want a stable version
11:10 < krajesh>  @Jkarsrud sure 
11:11 < jkarsrud> ok thenm
11:11 < dileep> Someone,after running code i got this in browser but i need only the values not like handler//         Cannot GET /formhandler?username=hello&amp;userage=67
11:12 < SomeoneWeird> wth
11:12 < SomeoneWeird> dont use GET for forms, use POST
11:12 < dileep> yyeah that could be
11:22 < Dimatter> what's the correct way to pass socketio variable (declared in index) to another module ? im using express.js framework
11:22 < dileep> someone,css wont work in that
11:22 < Dimatter> i start listening in my index : "io = io.listen server" ... and in my module i try to io.on('connect') ... but io is undefined
11:25 < dileep> SomeoneWeird,css is not working in index.css file
11:40 < pixie79> is there a stream.sync or stream.flush option when writing to a fifo? currently i am doing stream.end but that causes the application on the other side to close its handle to the fifo instead of knowing that the data being sent in this session is complete
11:48 < fantomas> Hi all!
11:49 < fantomas> I plan to start development of a syncronization servervice on node.js. What framework/library do you recommend?
11:49 < fantomas> s/of//
11:50 < fantomas> It will have webUI but only for monitoring its status and it operates
11:50 < fantomas> and how it operates*
11:52 < fantomas> The server will  be listening to incomming connections, then it gets some data from a client, make some database queries, then send result back. 
11:53 < fantomas> I don't think starting from scratch on pure js is good idea. I'm not of that kind who likes to invent a wheel
11:53 < fantomas> I want a good start :)
11:57 < dileep> fantomas,express
11:58 < SomeoneWeird> lol
11:58 < fantomas> ?
11:59 < fantomas> SomeoneWeird: why you said that?
11:59 < fantomas> How to get MySQL supprot in NodeJS?
11:59 < Mike_B> does there exist, for node.js, some sort of inline server-side javascript parser that one can put in HTML documents, like with the <? ... ?> tag in PHP or the <% ... %> tag in ASP?
11:59 < fantomas> node.js
11:59 < Mike_B> i would assume that this'd be some kind of library for node.js and not part of the node.js core itself.
11:59 < SomeoneWeird> just spent a whie helping setup express for dileep 
11:59 < SomeoneWeird> fantomas, use the mysql library?
11:59 < fantomas> SomeoneWeird: ah :)
12:00 < Mike_B> if it doesn't exist, then hey, that might be a fun project for me to tackle next :)
12:00 < SomeoneWeird> Mike_B, ejs
12:00 < fantomas> SomeoneWeird: ok, is it included or how it is installed?
12:00 < SomeoneWeird> npm install mysql
12:00 < crowster> Mike_B: node.js is server-side scripting
12:00 < fantomas> wow :)
12:00 < Mike_B> aha, beautiful
12:00 < fantomas> Like that!
12:00 < Mike_B> someoneweird, thanks for the reference
12:00 < crowster> Mike_B: why would you want to put html code in your server app?
12:00 < SomeoneWeird> :)
12:01 < fantomas> I feel only one worry about node.js
12:01 < SomeoneWeird> crowster, because.. thats how you render views?
12:01 < dileep> someoneWeird ,i aready install that and stard work on  that..
12:01 < fantomas> it is: JavaScript lang lol 
12:01 < Mike_B> crowster, say you want to write an HTTP server
12:01 < crowster> well then you still dont need the html echo-ed directly inside of the script like with <?..?> tags
12:01 < crowster> *confused
12:02 < Mike_B> er, what do you mean by the html echo-ed directly inside of the script? i'm talking about a very simple HTTP server that allows you to first parse pages serverside and execute embedded javascript before sending the page, which it looks like node.js is
12:02 < Mike_B> er sorry, which it looks like ejs* is, not node.js itself
12:03 < ProblemEmitter> Hello. Im using socket.io for a realtime game. The problem is that socket.io seems to lack acknowledgments? In case of packet loss due to bad network connection, the server has no way of knowing for sure if the event was delivered or not? An answer would be appreciated.
12:03 < crowster> Mikah ok, i just misunderstood your question
12:03 < crowster> ProblemEmitter: there are callbacks
12:04 < crowster> ProblemEmitter: http://socket.io/#how-to-use ctrl-f callback
12:04 < symeog> i managed to set up a skeleton application in express and then i also managed to include the twitter bootstrap. i still have my 'master page' inside the content page though…how can i separate them ?
12:04 < crowster> Mike_B: ok, i just misunderstood your question
12:05 < dileep> SomeoneWeird,do you have working code for express.as i have got to gihub butt most are not working...if u please
12:06 < symeog> all i need is to have the menus etc in their own file and then just include that file in subsequent pages..how can i do that ? why the express documentation index sucks so much ?
12:07 < symeog> is there any other good documentation on express ?
12:07 < symeog> do i have any other good options with good documentation besides express ?
12:08 < jonpacker> symeog: you should consider just going and reading the express source code. it's not that big, and it may help you to understand
12:08 < ProblemEmitter> crowster: does that work both ways? im not intrested in client->server emitting callbacks, i need the other way around
12:09 < Mike_B> so i'm totally new to node.js, but i was hoping to figure out how to dive in. i love javascript and the thought of embedded inline serverside javascript is something I find very intriguing. but am I correct that node.js is actually a platform for writing webservers itself, e.g. something competing with apache? in other words, it's not something competing with, say, PHP or what have you?
12:09 < jonpacker> symeog: also, the stuff you just described has more to do whatever templating engine you're using than express
12:09 < Mike_B> i'm trying to figure out if the node.js + express + ejs stack is something that basically competes with apache + php
12:10 < aandy> if apache and php is still in the race, sure
12:10 < ProblemEmitter> Mike_B: it can compete with the lamp stack, yes, node is not limited to web servers - its for all kind of i/o applications
12:10 < symeog> jonpacker: i think u right on the last one…i ll check els site
12:10 < symeog> ejs*
12:10 < ProblemEmitter> sry jonpacker, wrong ac
12:11 < jonpacker> huh?
12:11 < crowster> ProblemEmitter:  just looked in my code, i only used it the one way. you could simply try, why not ^^
12:11 < ProblemEmitter> last time i tried that, i failed miserably, gonna try again now
12:12 < crowster> ProblemEmitter: http://d.pr/i/HmOa lines 63 and 50
12:13 < crowster> ProblemEmitter: might be useful. i cant paste right now since i am kind of busy
12:13 < ProblemEmitter> sublime text is useful aswell as i see :P
12:20 < crowster> ProblemEmitter: best editor i know
12:21 < ProblemEmitter> crowster: nope, it's a no go. im unable to do this: client.emit('whatever', 'some argument', function(){process.exit()}); // server side ; and this: socket.on('whatever', function(a, cb) { cb(); }); // undefined is not a function
12:22 < crowster> ProblemEmitter: i am pretty sure it has to be "fn()" on the server side
12:45 < ProblemEmitter> im gonna rephrase my problem: im emitting a event from the server, with the last argument being a function. however, i cant call that function in the related event handler in the client, because the last argument that should be the callback function, is always undefined
12:45 < trodrigues> of course. you can't emit code from server to client like that
12:45 < trodrigues> you can only send json
12:45 < trodrigues> if you want to send code around you need to serialize it
12:46 < ProblemEmitter> i dont need my server-side code to be executed in the client, i just need an acknowledge of packet delivery
12:46 < ProblemEmitter> i need to be sure that the SERVER has DELIVERED an event to the CLIENT
12:46 < ProblemEmitter> :(
12:46 < trodrigues> well make the client emit an event to server in order to acknowledge that
12:46 < ProblemEmitter> i did this as a workaround
12:47 < ProblemEmitter> but looking at the socket.io source code i see that there should be builtin support for that
12:47 < ProblemEmitter> i just cant get it to work
12:48 < ProblemEmitter> trodrigues: please see https://github.com/LearnBoost/socket.io/blob/master/lib/socket.js#L359
12:51 < ProblemEmitter> any help on the topic is appreciated
13:01 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:04 < shesek> Hey all. Does anyone know of an ORM that properly handles fetching data with relations? For example, one that can create JOINs to BelongsTo/HasOne relations, and expose that data as objects of the correct type?
13:08 < evelyette> hi
13:09 < evelyette> I want to setup clustering with nodejs, but I'm not entirely sure whether the following works as expected: I want to have 4 nodejs (distributed over 4 separate systems over WAN) and I want to use socket.io with my game ... the problem is that I need to connect two players together, but i'm not sure whether I can do that if one player is connected to node1 and the other to node3 ?
13:09 < evelyette> any ideas ?
13:10 < pgte> evelyette: use socket.io with redis backend store
13:11 < pgte> evelyette: you need a redis server for that to centralize pubsub
13:11 < mscdex> evelyette: what pgte said or use rabbitmq/zeromq or something
13:11 < evelyette> pgte, aha, so there should be only one redis server ... but with one redis server manage all that ?
13:12 < MI6> joyent/libuv: Bert Belder master * 149b16f : windows: closing handles should always keep the loop alive  This makes th - http://git.io/4DLx1A
13:14 < ProblemEmitter> ok guys never mind i got the acknowledges to work: the callback must have atleast one argument for it to work
13:14 < krajesh> Hi guys I am trying to install nodejs from binary "node-v0.8.12" I am using centos 5 linux box
13:15 < krajesh> When i used ./configure I am getting error 
13:15 < mscdex> krajesh: wrong python version
13:15 < krajesh>  File "./configure", line 331
13:15 < krajesh>     o['default_configuration'] = 'Debug' if options.debug else 'Release'
13:15 < krajesh>                                           ^
13:15 < krajesh> SyntaxError: invalid syntax
13:15 < krajesh> @mscdex let me try
13:15 < mscdex> krajesh: you need python 2.6 or 2.7
13:16 < krajesh> @mscdex Let me try with correct version of python ty 
13:16 < exit2> hey noderz, I'm trying to understand closure before I dive into Node http://paste.kde.org/580982/
13:16 < mscdex> krajesh: the other option is to use one of the pre-built tarballs on nodejs.org if you don't want to compile
13:16 < exit2> so is the parentFunction executed first and then because it's calling the childFunction it then runs that 2nd?
13:17 < krajesh> @mscdex
13:17 < krajesh> @mscdex Ok sure
13:17 < mscdex> exit2: yep
13:18 < exit2> mscdex: well that isn't so difficult
13:19 < krajesh> hi mscdex
13:20 < krajesh> ./configure --with-python=/krajesh/acl_user_refact/jiva_buildout/usr/bin/python2.6/
13:20 < krajesh> Still I am getting same Issues
13:20 < krajesh> File "./configure", line 331
13:20 < krajesh>     o['default_configuration'] = 'Debug' if options.debug else 'Release'
13:20 < krajesh>                                           ^
13:20 < krajesh> SyntaxError: invalid syntax
13:20 < mscdex> i'm not sure "--with-python" is supported
13:20 < aandy> after beating myself up over a design issue an app of mine has on wp7 (but not on desktop, including mobile), i see this and go, ah ok, fuck it: http://i.imgur.com/RJvsy.png
13:20 < aandy> if google can't even get it right in Chrome, then whatever :>
13:22 < mscdex> krajesh: what i do on centos 5 is `yum install python2.6` after installing the epel repo and then add ~/bin to my $PATH and symlink ~/bin/python to /usr/bin/python26
13:22 < mscdex> and make sure ~/bin comes before anything else in $PATH
13:23 < krajesh> mscdex:ok let me try that
13:32 < abrkn> with browserify, assert requires buffer which requires browserify-buffer which is not bundled automatically. how do i solve this?
13:44 < timoxley_> abrkn I've got a browser port of assert over here, perhaps try that https://github.com/timoxley/assert
13:53 < abrkn> neat
14:10 < graeme_f> gaah, got a globar var leak in sockjs that looks like it's a coffeescript compiler bug :/
14:10  * mscdex shakes a fist at coffeescript
14:14 < wereHamster> how can I find out which timers or listeners are active (blocking the app from exiting)
14:15 < hemanth_> trying to find a clean way to read data b/w two delimiters.
14:16 < hemanth_> something like sed -n '/FOO/,/BAR/p' test.txt
14:19 < AforAvi> Hello :)
14:28 < MI6> joyent/node: Ben Noordhuis master * 9b61f57 : Merge remote-tracking branch 'origin/v0.8'  Conflicts: 	configure 	deps/v (+6 more commits) - http://git.io/-pffyg
14:28 < Cheery> I've got question to node.js devs.
14:29 < Cheery> would it be possible to turn node.js into a different language, that'd be improved variation of javascript?
14:29 < Cheery> with iterators and maybe coroutines
14:29 < Cheery> and better object system
14:30 < gildean> Cheery: if you get v8 to run it, why not
14:30 < Cheery> okay.
14:31 < Cheery> I'm just wondering this because I'm thinking node.js is quite good stuff.
14:31 < Cheery> but I've missed such things from javascript
14:31 < Cheery> overall. javascript isn't really my favorite at all.
14:31 < gildean> it grows on you
14:32 < Cheery> coffeescript goes little way. but I'm still looking behind to python
14:34 < graeme_f> ah, yep my leak is due to a coffeescript issue :(  https://github.com/jashkenas/coffee-script/issues/2422
14:34 < graeme_f> not that i'm using coffeescript, but sockjs is
14:34 < hemanth_> Cheery, node.js has coffee too! :)
14:35 < Cheery> hemanth_: sure it has. but I'm looking behind and see how cool stuf REAL iterators were.
14:35 < drey_> Cheery: just use tornado?
14:35 < Cheery> drey_: what's that?
14:35 < hemanth_> Cheery, kool
14:35 < hemanth_> tornado the py stuff?
14:35 < drey_> yes
14:36 < drey_> http://www.tornadoweb.org/
14:37 < Cheery> drey_: it's just a non-blocking web server stuff. I'm bored to cpython
14:37 < hemanth_> well, if one is used to ease of js, torando might seem heavy, with more syntax sugars it's more tasty! drey_ 
14:38 < drey_> then I've no idea what Cheery is after.
14:40 < Cheery> drey_: I'm after something like a different language built on v8, that'd be as fast as javascript is
14:41 < Cheery> with iterators and coroutines, and awesome packaging system, such as what npm is.
14:41 < Cheery> and better syntax. :D
14:42 < Cheery> and just wondering whether forking node.js would be easier than doing it all again.
14:43 < drey_> oh
14:43 < drey_> I would just use node.js tbh
14:44 < Cheery> drey_: many would perhaps. but are we seriously going to stick to javascript?
14:45 < Cheery> or expect migration to dart?
14:46 < bradleymeck> Cheery multiple libuv bindings exist for other languages the only one in a prod system i know of is luvit for lua
14:46 < bradleymeck> luvit is quite fast, but not as mature (particularly with http ironically)
14:46 < Cheery> libuv looks cool.
14:47 < creationix> bradleymeck, with the new "web" module, it's much faster
14:47 < creationix> the node-clone http module is all that's slow
14:47 < bradleymeck> sweet
14:47 < creationix> though that module is even less mature
14:47 < bradleymeck> creationix so the web module is workable though?
14:47 < creationix> I use it for luvit.io
14:47 < creationix> it's been pretty stable
14:48 < Cheery> seriously when I'm on #node.js I tend to see awesome projects that actually look fine.
14:48 < DaMorpheuS> guys is there someone who has expirience with node.js and riak?
14:48 < creationix> bradleymeck, https://github.com/luvit/luvit.io/tree/master/modules
14:48 < creationix> we don't have anything as awesome as npm yet, so I just use submodules
14:49 < bradleymeck> creationix, any reason not to just copypasta npm?
14:49 < creationix> code has to be ported by hand, but if you mean feature set, that's fine
14:49 < creationix> I don't have much beef with npm
14:49 < Cheery> I'd like to try write some bindings for node.js
14:49 < bradleymeck> less than my other package managers
14:50 < creationix> luvit does have a node-style require
14:50 < bradleymeck> Cheery #libuv if you want to bind to the actual innards
14:50 < MI6> joyent/node: isaacs created branch events-monomorphic - http://git.io/NYVaJA
14:50 < Cheery> mostly I'm going to try whether I could turn node.js into experimental desktop system in raspberry pi
14:50 < creationix> including relative requires and ./modules, ../modules, ../../modules search path
14:50 < creationix> Cheery, luvit is probably better for that
14:50 < bradleymeck> luvit takes way less memory
14:50 < creationix> it's much smaller on memory usage and has one awesome ffi built-in
14:51 < creationix> so you can make opengl calls without writing C++ bindings
14:51 < Cheery> creationix: heh.. well lua isn't that much nicer than javascript.
14:51 < creationix> Cheery, someone has already started such a project
14:51 < creationix> no, I like both languages about the same, but for different reasons
14:51 < Cheery> creationix: can you link me to it?
14:52 < creationix> Cheery, the latest post about moonpie https://groups.google.com/d/msg/luvit/zhdx8ee0wsk/EmNYbof5JD4J
14:53 < Cheery> creationix: aha.
14:53 < MI6> joyent/node: isaacs v0.8 * c7b2e29 : events: Make the EventEmitter class monomorphic  Always add domain, _even - http://git.io/QVrIpA
14:56 < Cheery> creationix: I've got process compositing code. I guess I could share it with moonpie author, but I don't know yet whether I'll join that effort.
14:57 < Cheery> creationix: if he has done something cool, I'll certainly look how we can both use same and improve on.
14:58 < Cheery> overall I don't like everything-in-one -solutions.
14:58 < Cheery> they are unreliable (look at gnome)
14:58 < Cheery> (or kde)
15:00 < Cheery> creationix: http://boxbase.org/entries/2012/oct/23/redesign-the-linux-desktop/
15:00 < krajesh> Hi guys 
15:00 < Cheery> creationix: there's my ideas, but what if someone figures out something better still?
15:00 < krajesh> nodejs Configure by default taking my system python2.4 version
15:01 < Cheery> I want him to be able to continue from where I left and kick some monolith's ass.
15:01 < creationix> Cheery, neat
15:01 < creationix> I just want to built a solid platform
15:01 < creationix> the UX is up to someone else
15:01 < creationix> but the platform needs to be fast and simple
15:01 < creationix> using JS or lua so that it's easily scriptable
15:01 < krajesh> I want enforce to  point to specific python
15:02 < krajesh> is it any way?? I have tried option --with in configure
15:03 < bradleymeck> krajesh: set the PYTHON env variable?
15:04 < krajesh> bradleymeck:No I did set it
15:04 < bradleymeck> and export it if not set in same cmd?
15:05 < Cheery> creationix: node.js looks at first that it'd be awesomely more easy to extend than cpython is
15:05 < Cheery> it might be I'll make some huge progress because of that.
15:05 < creationix> yeah, python is a mess
15:05 < creationix> go with node or something lua based
15:05 < Cheery> (I've got everything in python, but it's all feeling really farty)
15:06 < creationix> js if you want a large community, lua if you want an awesome and easy to embed vm
15:06 < creationix> the languages are about equivalent
15:07 < Cheery> creationix: I think I'd like popularity because my things have usually fell short because of that.
15:09 < creationix> also lua can be embedded in ios apps
15:09 < creationix> V8 not so much
15:09 < creationix> so if you ever want to have a native ios version, that matters
15:09 < creationix> (not to mention v8 is just too heavy for mobile)
15:09 < Cheery> for how long?
15:09 < Cheery> :)
15:10 < creationix> well, I worked on node on the hp touchpad
15:10 < creationix> and at 12mb per node process, it killed the 1gb ram tablet
15:10 < creationix> because we needed lots of processes
15:10 < Cheery> I sort of see how this may fold out. but what I'm going to do isn't probably hard to port.
15:10 < creationix> also startup time was terrible
15:10 < SomeoneWeird> creationix, if you need that many processes you're doing it wrong
15:10 < guor> why is v8 too heavy for mobile if it works for chrome on android and the android stock browser o.o
15:10 < creationix> on the phones node took over 1000ms to just start
15:10 < creationix> the tablet was better, but still hundreds
15:11 < creationix> guor, because in those cases they share v8 between apps/webpages
15:11 < creationix> but for third-party stuff and node stuff, you really need a process per app/process
15:11 < creationix> for security
15:11 < creationix> node is not a sandbox like a browser dom
15:11 < guor> afaik each domain has its own instance of v8, for security
15:11 < creationix> also mobile browsers are slow
15:11 < creationix> they take seconds to launch
15:11 < SomeoneWeird> "slow"
15:11 < SomeoneWeird> -> "mobile"
15:12 < creationix> and eat a ton of ram
15:12 < creationix> I can start a native process using lua in under 100ms and it will use less than 1mb of ram
15:12 < guor> well. i guess if you just want to script something, lua is perfectly fine
15:12 < creationix> node is 10x slower and 20x more ram
15:12 < creationix> (10x slower for startup)
15:12 < bradleymeck> Js vm is just beast in size due to various things around closures
15:12 < SomeoneWeird> creationix, then don't use it, simple
15:12 < Cheery> if they use same base, why is it so?
15:13 < creationix> bradleymeck, right, js is just a more complicated language
15:13 < creationix> lua, for example doesn't have constructors or "this"
15:13 < creationix> it doesn't even have prototypes
15:13 < SomeoneWeird> heh wow
15:13 < Cheery> does that make it faster too?
15:13 < bradleymeck> Cheery, JS closures require some beastly runtime code
15:13 < creationix> but it does have metatables (which are like harmony proxies) which make is trivial to implement prototypes
15:14 < bradleymeck> Cheery, in general yes, but not always
15:14 < Cheery> it's interesting that there's lua port that uses v8
15:14 < creationix> luajit vs v8 is apples to oranges
15:14 < bradleymeck> libuv not v8
15:14 < creationix> but they are both very fast jit angines
15:14 < Cheery> creationix: oh.
15:14 < guor> not like you can jit anything on ios
15:15 < creationix> no, but unlike v8, luajit can run without the jit
15:15 < guor> that's true
15:15 < creationix> and luajit with jit off is still way faster than stock lua's interpreter
15:15 < SomeoneWeird> creationix, v8 can run without jit too
15:15 < creationix> SomeoneWeird, not last time I checked
15:15 < creationix> it doesn't have an interpreter
15:15 < SomeoneWeird> look up snapshotting
15:15 < guor> no, SomeoneWeird 
15:15 < guor> it can't
15:16 < guor> every piece of code v8 gets is compiled first
15:16 < creationix> I guess if maybe your snapshot has the entire program and nothing ever needs to be re-compiled, it might work
15:16 < creationix> but I don't think that's a supported way to use v8
15:17 < SomeoneWeird> guor, sure, but if you snapshot it once, then it wont have to JIT it everytime you run it
15:17 < guor> well. i guess if you also disable ICs and optimized compiler
15:17 < ernad> Did anyone here go through process of implementing this stack: everyauth, mongoose auth with express 3?
15:17 < guor> *optimizing compiler
15:18 < Cheery> creationix: I think I'll try mah hands on this very soon. first I'll read entirely through couple slides and manuals.
15:18 < Cheery> maybe few weeks and I'll have it all up.
15:19 < creationix> Cheery, good luck
15:20 < creationix> SomeoneWeird, all I know is that getting v8 inside an ios app-store app is going to be either impossible or very hard, whereas luajit and lua are put in ios apps all the time and the luajit author supports it
15:21 < Cheery> creationix: I'm probably going to never support ios, because it's an attack against my freedoms.
15:21 < creationix> Cheery, I hear that
15:21 < creationix> there's a reason I don't own an iphone
15:21 < Cheery> sure it hurts if you need to do it for business. but...
15:21 < creationix> and it's not because I don't collect gadgets
15:22 < creationix> (4 android phones, 5 webos phones, 1 meego phone, 3 android tablets, 2 webos tablets, ...)
15:22 < Cheery> I'd be sort of happy if I'd do something here that would bring node.js to next level and turn everything upside down.
15:22 < creationix> oh, and raspberry pi and tplink router, and soon $200 worth of miniduino parts
15:22 < creationix> Cheery, that would be cool
15:23 < creationix> btw, I did webgl bindings for node at last-year's node knockout
15:23 < Cheery> they might help me a lot
15:23 < creationix> it's window system agnostic, just assumes the gl context is already setup
15:23 < Cheery> raspberry pi uses opengles2
15:23 < creationix> I had a native app running on my webos tablet using node-sdl and node-webgl
15:23 < creationix> yep, so do my bindings
15:23 < Cheery> but if you've got something webgl-like. that might be super.
15:24 < ernad> Once more: Did anyone here go through process of implementing this stack: everyauth, mongoose auth with express 3?
15:24 < crowster> ernad: only mongoose, can you specify your question further?
15:24 < Cheery> creationix: it's node-webgl?
15:25 < Cheery> if you've really done that, it might shave a week from my todo.
15:25 < brianc> ernad: everyauth is terrible in my opinion
15:25 < ernad> crowster: I built a pretty robust multiplayer texas hold em game in node.js half a year ago using that stack. Now it's completely obsolete with express 3, like I can't upgrade the app properly
15:26 < ernad> crowster, brianc: so I'm thinking about either hacking on it or just rewrite the auth system
15:26 < tjholowaychuk> ernad you don't *have* to upgrade
15:26 < creationix> Cheery, yeah, on my github creationix/node-webgl
15:26 < creationix> it's not all of webgl though
15:26 < creationix> I only had 24 hours to work on it
15:26 < creationix> it was enough to get me demo running
15:26 < creationix> but adding more bindings is pretty strightforward
15:27 < creationix> opengl is all int in and int out
15:27 < Cheery> creationix: okay. it may still help. have you tried whether it works on raspberry pi?
15:27 < creationix> the best kind of library to bind to
15:27 < ernad> tjholowaychuk: I know I don't *have* to upgrade but I wanted to upgrade so I was looking for advice on what to do regarding these old packages
15:27 < creationix> I think it works on the pi
15:27 < Cheery> that makes things just all the merrier
15:27 < creationix> you'll need vc bindings to get a gl context up
15:27 < context> http://s3.amazonaws.com/dk-production/images/8869/large/gop_rape_advisory.gif?1351094205
15:28 < creationix> video core apis are super ugly
15:28 < Cheery> creationix: sure. but that's lot less work than the actual webgl bindings.
15:28 < context> i need a hair cut
15:28 < creationix> feel free to fork and add stuff
15:28 < creationix> Cheery, just make sure to keep the node-webgl module system agnostic
15:28 < brianc> ernad: I would suggest, if you're really dying to upgrade it, to move away from everyauth.  if you're doing oAuth there are other libraries with a saner API.  If you're doing custom auth, it's really not that hard to roll your own
15:28 < creationix> it shouldn't be messing with creating contexts or anything so that it's portable between systems
15:28 < Cheery> creationix: that's a good requirement.
15:28 < brianc> context: you and me both
15:30 < Cheery> creationix: though it might be good to implement something like: surface.getContext('webgl')
15:30 < ernad> brianc: alright, thanks
15:30 < Cheery> to stay within webgl spec entirely. :)
15:30 < brianc> Sometimes, I use too, many, commas.
15:30 < creationix> Cheery, there is no canvas surface
15:31 < creationix> I wouldn't bother emulating the dom half
15:31 < creationix> but maybe the vc bindings can do that part
15:31 < creationix> and just depend on the node-webgl library
15:31 < Cheery> creationix: that'd be interesting choice.
15:31 < Cheery> and probably good one.
15:34 < eNvented> Hello. Will this code leak memory if the related socket.io socket gets disconnected between retries? http://pastebin.com/F8CtUWCa
15:42 < Cheery> creationix: have you made event emitters in node.js?
15:43 < Cheery> thing is
15:43 < Cheery> I think once I'll bind to libudev and maybe libev (if not done)
15:43 < Cheery> I'll need to make some event emitters.
15:44 < creationix> Cheery, ? node has event emitters built in (so does luvit)
15:44 < Cheery> well maybe I'll wait until I'll get there and see how it goes.
15:45 < Cheery> https://github.com/hanshuebner/node-hid
15:45 < Cheery> he doesn't have register and unregister -events though. :/
16:01 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:06 < jacquestardie> All of sudden, node is starting segfault on me. Running a fairly basic simple Express site on v8.12. Anyone know of someone else that this has happened to? Moreover, how can I figure out what's causing the segfault to happen?
16:08 < bnoordhuis> jacquestardie: gdb to the rescue?
16:10 < ccowan> I need some expert advice… I have a web service which makes a request to itself. Imagine you have a web service for a user (/user) and you want to create a new web service for a user that returns just a subset of the data (let's call it /user/minimal) and that makes a request to /group/minimal which then in trun makes a request to /group. If I hit the the /user/minimal in the browser everything works fine. If I hit it with siege it hangs.
16:13 < wankdanker> Any ever successfully interface with ActiveX from node?
16:15 < CoverSlide> wankdanker: i really doubt anyone's gone to the trouble
16:16 < jcrew> wankdanker: what are you trying to get through activex?
16:16 < CoverSlide> hell, I don't even know anyone who does ActiveX anymore
16:16 < jacquestardie> bnoordhuis: would node debug catch the error?
16:17 < bnoordhuis> jacquestardie: with a segfault? no
16:17 < jcrew> jacquestardie: redo your npm install of express
16:17 < wankdanker> jcrew:  Well, there is this accounting application that our company uses and I can launch different parts of the application via ActiveX, have a working solution with python.
16:18 < wankdanker> if somebody had done the legwork to make it easy, I'd consider switching things over to node.
16:18 < jacquestardie> jcrew: tried that, got 5841 segmentation fault  npm install express
16:21 < chandlerp> Are there any "best practices" for daemonizing a node app? A google search shows everyone has a different opinion
16:22 <@mbalho> node doesnt have daemonization built in so you can do it with whatever tool you are comfortable with, e.g. upstart on ubuntu etc
16:22 < yummo> when i create a new buffer in node, where do its initial contents come from?
16:22 < yummo> i see that it is not just 0s or so
16:22 < doki_pen> chandlerp: I use monit+upstart in production
16:23 < bnoordhuis> yummo: from the c/c++ heap
16:23 < bnoordhuis> yummo: consider its contents to be undefined
16:23 < yummo> hrm, tell me more about that -- the contents are not random are they
16:23 < chandlerp> thanks mbalho & doki_pen
16:25 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:25 < bnoordhuis> yummo: depends on your definition of 'random'. it's not cryptographically strong, no.
16:25 < bnoordhuis> yummo: but otherwise it's just whatever that part of the heap contains
16:26 < yummo> ok, i'm a c/c++ noob but maybe you can tell me if this scenario is likely
16:26 < yummo> i'm debugging an issue where there's a lot of rapid creation and use of buffers, and i have a suspicion that new buffers are starting with data from other buffers that have been discarded
16:26 < yummo> does this seem likely?
16:27 < wankdanker> yummo: sounds likely to me
16:28 < yummo> ok good, .fill(0) seems to be fixing the issue i just wanted to make sure there's some reason for my suspicion : )
16:28 < wankdanker> yup, that's what I was going to suggest. :)
16:29 < CoverSlide> yummo: new Buffer() is basically like C's malloc(). it just makes the memory available, but doesn't set it to any default. That's one of those things that you could spend the CPU cycles on, but there's no reason to, since you'll most likely be overwriting the data anyway when you need it
16:30 < yummo> CoverSlide: yep, i have a case where i am copying to specific portions of the new buffer but not all
16:32 < MI6> joyent/node: isaacs v0.8 * 822e13d : npm: Upgrade to 1.1.65 - http://git.io/3NclRw
16:32 < brianc> chandlerp: +1 for monit + upstart
16:35 <@mbalho> anyone have a good blog post on monit + upstart + node?
16:35 <@mbalho> (if not one of you should write one :)
16:36 < doki_pen> mbalho: I usually make a bin in package.json
16:36 < doki_pen> mbalho: maybe I should just blog
16:36 < doki_pen> lol
16:36 <@mbalho> doki_pen: not asking for me... asking for the greater node world hehe
16:39 < yummo> bnoordhuis: wankdanker: CoverSlide: thx for the explanation re buffers
16:40 < wankdanker> mbalho: http://howtonode.org/deploying-node-upstart-monit
16:40 < EuroNerd> I've got a silly question, pls don't laugh. Why would you use cookies for user sessions & authentication?  Since the only point of a cookie in this scenario is to keep some identifying Key, why not just store it in a js var on client? (Apart from keeping user logged in after browser closes.)
16:41 < CoverSlide> last time I checked out forever, it came with its own init scripts
16:43 <@mbalho> EuroNerd: cookies have a setting called http only
16:43 <@mbalho> EuroNerd: which means the client cant tamper or access the data in the cookie
16:43 < CoverSlide> I'd love to learn monit, but the syntax seems very verbose and me no likey
16:43 < vekexasia> hello all searching for a developer using nodejs+redis willing to test a strange behaviour with multi
16:43 < EuroNerd> mbalho, c'mon, a user can do whatever he likes with data on his computer
16:44 <@mbalho> EuroNerd: there are no absolutes when it comes to security, everything is on a spectrum :)
16:44 < EuroNerd> mbalho, or maybe you meant, other js scripts (other pages) can't tamper with you web app's data?
16:45 <@mbalho> 'the client' = javascript running in a web browser
16:45 < CoverSlide> other pages, or malicious stuff that may have been injected onto your page
16:46 < EuroNerd> and do cookies make a big difference in this?
16:46 < CoverSlide> if anyone remembers what a buggy security mess myspace used to be
16:46 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:46 <@mbalho> EuroNerd: read about 'http only' cookies, theres lotsa info online about them
16:47 < CoverSlide> but that's why you sanitize your inputs
16:47 < EuroNerd> mbalho, I will. I just hope "httpS only" also exists... ;)
16:48 < EuroNerd> Well, I'm trying to add user auth to my node.js app that comms thru socket.io. And it seems to be a huge pain in the arse to do sessions over https over socket.io. And it's even harder if I want to avoid tools that I don't understand (yet) and that might complicate things in the future (connect & express). Steep learning curve for a newbie.
16:50 < brianc> EuroNerd: I got auth working with engine.io pretty straightforward.  You have lower level access to the web socket request so you can mess w/ the cookies & so on as it comes in before it starts being "websockety"
16:50 < CoverSlide> your heart beats to the beat of a drum. oh what a shame you came here with someone
16:52 < jocafa> "I've lost my drum! I've lost my indian drum!"
16:54  * CoverSlide is now playing Hide The Sausage With Your Mom.mp3
17:05 < prateekp> hello
17:05 < prateekp> has anybody used d3js
17:05 < prateekp> ???
17:07 < Tixz> Is there a general purpose formatter for Node/browser Javascript? One that can format dates, numbers and strings? I can't seem to find one on google or NPM, but maybe I'm not trying the right terms
17:11 < prateekp> in d3 i am not able to access the external resource
17:14 < analphabet> Please tell me, why one shouldn't use fibers/asyncblock! (I got to convince some folk... ;) )
17:15 < brianc> because fibers/asyncblock are not node
17:15 < brianc> there is a shit ton of stuff written online about it already
17:16 < chapel> the biggest issue is because it isn't popular, and restricts your code
17:16 < analphabet> chapel: in which way?
17:16 < chapel> most people won't touch it, and any code that uses it is essentially tainted
17:16 < CoverSlide> there is a fork of node using fibers but it's not well-supported
17:16 < chapel> there is a reason ryah went with javascript in the first place
17:16 < chapel> for async
17:16 < analphabet> CoverSlide: it's a module
17:17 < CoverSlide> plus any modules made for it would have to be rewritten to support the fiber way instead of the native way
17:17 < chapel> and because there wasn't any existing libraries to pollute the ecosystem
17:17 < chapel> CoverSlide: yep
17:17 < brianc> because if you use fibers in node you look like this: http://www.openingceremony.us/products.asp?menuid=1&designerid=1627&productid=71055
17:17 < chapel> its more than just a pain, it is like using a hammer to screw a screw into the wall
17:18 <@mbalho> the right terms
17:18 <@mbalho> OOPS IGNORE THAT
17:18 < chapel> analphabet: tell them that if they want synchronous code, they should not use node
17:18 < chapel> simple as that
17:19 <@mbalho> "go with the grain"
17:19 < brianc> yeah, "go" is good for coroutines 
17:21 < analphabet> ok, thank you guys!! :)
17:22 < analphabet> "using a hammer to screw a screw into the wall" tss ;)
17:24 < CoverSlide> I've done that before
17:34 < doki_pen> mbalho: http://tumblr.doki-pen.org/post/34303806691/deploying-nodejs-with-varnish-upstart-and-monit
17:34 < doki_pen> let me know if anything looks stupid
17:37 < jaha> has anyone gotten the latest connect-mongodb to work with the latest mongoose?
17:50 < Aikar> um
17:50 < Aikar> 1.1.64 latest npm right?
17:51 < Aikar> when i issue npm update <module> I get some warnings about no README.md then nothing
17:51 < Aikar> ... please dont tell me npm is trying to enforce readme.md on me?
17:53 < othiym23> Aikar: nope, that's just a warning
17:54 < Aikar> i got npm info outdated updating []
17:54 < Aikar> theres no way none of my modules are out of date
17:54 < Aikar> i havent updated in months
17:54 < Aikar> trying to get up to .8 now
17:55 < Aikar> oh right forgot update never seems to work and i need install
17:56 < Aikar> ... socket.io has C code now? thats not required is it?
17:56 < EhevuTov> Aikar, I think it always had a C build in it's dependencies
17:56 < EhevuTov> as long as I can remember anyways
17:57 < CoverSlide> recently they added the ws module as their websocket component
17:57 < CoverSlide> ws is currently the fastest websocket module running node
17:57 < CoverSlide> but it has native binding
17:58 < DaMorpheuS> are there people here that have knowledge of node + riak?
17:58 < CoverSlide> DaMorpheuS: what's your question?
17:58 < CoverSlide> just ask your question in the chat
17:58 < DaMorpheuS> i'm trying to link one record to another I can do that in riak but not in node
17:58 < DaMorpheuS> the links are created differently
17:59 < DaMorpheuS> for some reason
17:59 < CoverSlide> what riak module are you using?
17:59 < DaMorpheuS> riakjs
17:59 < DaMorpheuS> are there more then?
17:59 < CoverSlide> there's 3
17:59 < DaMorpheuS> if so is riak js the best
17:59 < CoverSlide> You might try nodiak
18:01 < DaMorpheuS> but the issue us that if I create a link with riak js I can't use the db.walk()
18:01 < DaMorpheuS> only if I create the link in the browser
18:02 < DaMorpheuS> or with curl but thats'the same of course
18:02 < DaMorpheuS> the thing is if I have only a good example how to use it  then I'll be fine
18:03 < DaMorpheuS> the only example I found was about planes
18:04 < DaMorpheuS> CoverSlide do you have an example for me?
18:04 < CoverSlide> yeah I don't know much about riak at all, but I have discussed with the author about how riak-js and node-riak are missing tons of features 
18:05 < DaMorpheuS> yes it is not a total package ;)
18:05 < DaMorpheuS> but well I can write stuff myself ofcourse
18:06 < DaMorpheuS> the thing is before I'm off writing it myself there must be a reason that this is not working correctly
18:06 < sh1mmer> Has anyone with some pcap experience noticed that it exits when it should be listening in 0.8?
18:07 < sh1mmer> I'm trying to write a script and I have a pcap session and and a tcp tracker but I still get a status 0 exit
18:07 < jcrew> sh1mmer: is it failing to listen?
18:08 < DaMorpheuS> CoverSlide do you know someone who used it before in a project?
18:08 < sh1mmer> It could be, but I'm not getting any throws
18:08 < CoverSlide> DaMorpheuS: no, I'm just saying, if the library you're working with doesn't have the feature you want, maybe it's a good idea to try a different library
18:09 < sh1mmer> jcrew: I notice in some of the sample scripts matt has setIntervals and such
18:14 < sh1mmer> jcrew: if I throw something else in that keeps the event loop running it works but for some reason it seems like pcap itself having a listener doesn't.
18:14 < sh1mmer> which is weird/annoying
18:15 < joaojeronimo> anybody knows anybody writing a module to stream file uploads directly to Google Cloud Storage ? https://developers.google.com/storage/docs/developer-guide#streaming
18:16 < joaojeronimo> a single require('request') pipe would not cut it, but a wrapper around it would work just fine I think
18:20 < milani> rvagg, hey
18:34 < MI6> joyent/node: isaacs created branch v0.8.13-release - http://git.io/ZHeP0Q
18:37 < MI6> joyent/node: isaacs v0.8.13-release * 932de3c : 2012.10.25, Version 0.8.13 (Stable)  * V8: Upgrade to 3.11.10.25  * npm:  - http://git.io/doXuQw
18:41 < draginx> superjoe: if I did naught deploy when theres nothing starting.. could naught automatically run start? :D
18:42 < superjoe> draginx, hmm interesting idea
18:42 < superjoe> draginx, well there's no harm in always running start before deploying
18:42 < draginx> superjoe: just makes deployment a little easier :)
18:42 < draginx> oh
18:43 < draginx> so doing naught start && naught deploy is fine?
18:43 < draginx> and if naught is already started itll just skip start?
18:43 < superjoe> yeah, except start will return a failure code if it's already started. so you'd want something like this:
18:43 < superjoe> naught start; naught deploy
18:45 < aandy> remember to ln -s `which naught` /usr/bin/naughty
18:47 < MI6> joyent/node: isaacs v0.8.13-release * ff4c974 : 2012.10.25, Version 0.8.13 (Stable)  * V8: Upgrade to 3.11.10.25  * npm:  (+1 more commits) - http://git.io/r6IZdQ
19:12 < pspeter3> has anyone tried nodejitsu with heroku's postgres?
19:30 < mmalecki> pspeter3: yawnt did I think
19:31 < pspeter3> mmalecki: Do you know it turned out? I definitely want to use nodejitsu but I'm debating between heroku postgres and mongohq (I know they're different databases)
19:33 < yawnt> pspeter3: i did
19:33 < yawnt> pspeter3: it worked out pretty good, no problems of every sort once i got it running
19:33 < joehoyle> Anyone used a Gertboard with teh raspberry pi with node.js?
19:34 < yawnt> but i had to use the node-postgres native version because that library didn't support ssl yet (which is a requirement when you connect from outside heroku's infrastructure)
19:34 < yawnt> *didn't support ssl yet in the pure js version
19:34 < pspeter3> yawnt: A makes sense. Does heroku postgres have a cap of the database size or just the cache?
19:34 < yawnt> 1 terabyte
19:35 < yawnt> if i'm remembering correctly
19:35 < brianc> it should support ssl in the pure javascript version now as well
19:36 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:36 < yawnt> brianc: yeah i was talking back at the time :P
19:36 < brianc> ah coo!
19:37 < pspeter3> yawnt: Wow, that's pretty big. brianc Good to know
19:37 < yawnt> pspeter3: :) just double check.. it's something i remember but i don't wanna tell you something that turns out to be false :P
19:37 < yawnt> pspeter3: also note that development version is limited to 7K rows :)
19:38 < pspeter3> yawnt: All good information. Their website doesn't have a lot of information on it but I'll keep digging
19:39 < yawnt> https://postgres.heroku.com/pricing <- pspeter3 
19:39 < yawnt> they mention the 1 tb here.. i wasn't wrong :D
19:39 < jjjl> does anyone know where there's a recent debfile for node? the version in the sid repos is ancient and i can't seem to build hiredis-node with it
19:40 < yawnt> pspeter3: also if you have any other questions there's #nodejitsu too.. i'll be happy to answer to any doubts you might have :)
19:40 < pspeter3> yawnt: yeah, I'll move over there
19:49 < shipamogli_cl> hi all
19:51 < shipamogli_cl> i want to use an node.js app with symfony, but when I declarate socket.io, firebug trows this error
19:51 < shipamogli_cl> NetworkError: 404 Not Found - http://symfonyproyect/js/socket.io/socket.io.js"
19:52 < nkuttler> shipamogli_cl: spell it properly?
19:52 < shipamogli_cl> i have my node app in /js/ folder and called with <script type="text/javascript" src="/js/node.comet/socket.io/socket.io.js"></script>
19:53 < MI6> joyent/node: isaacs created tag v0.8.13 - http://git.io/RdgJUw
19:53 < nkuttler> shipamogli_cl: so why is firefox trying to access the symfonyproyect host?
19:54 < MI6> joyent/node: isaacs v0.8 * 3ec3086 : blog: Post for v0.8.14 (+4 more commits) - http://git.io/55NoWg
19:55 < MI6> joyent/node: isaacs v0.8 * d130bb0 : blog: Post for v0.8.13 - http://git.io/IXSh4g
19:55 < shipamogli_cl> nkuttler: because im want to use node for real-time updates in my symfony project. that's the reason to use sf to access node
19:55 < nkuttler> wut?
19:56 < shipamogli_cl> and i have this problem in all browsers
19:56 < nkuttler> you can't just make up random hostnames, hope they resolve, and resolve to hosts that actually host the file...
19:56 < daugustine> i'm trying to install node on windows 7 (x64) using the .msi and it always gets to "Creating Shortcuts" and then rolls back the install and says Setup Wizzard ended prematurely
19:56 < daugustine> any ideas on how I can get it installed?
20:01 < shipamogli_cl> don't work :(
20:03 < shipamogli_cl> I try with: <script type="text/javascript" src="http://127.0.0.1:8080/socket.io/socket.io.js"></script> but still fails with NetworkError: 404 Not Found
20:05 < daugustine> can anybody help me get node.js installed on windows 7 x64
20:05 < daugustine> it keeps ending prematurely
20:10 < Aikar> why is nodes make install so complicated :( what python module do i need to install just to be able to run make install?
20:10 < iaingrant> Aikar: you need python?
20:11 < Aikar> node uses python to compile :/
20:14 < chovy> Aikar: it was pretty easy for me.
20:14 < chovy> make && make install
20:15 < Aikar> says it cant find json module
20:16 < Aikar> and great this box is on strict repositories and i cant install python-json and the one guy id go to just went home
20:20 < Cheery> I just compiled an introductory nodejs module
20:20 < Cheery> in raspberry pi
20:21 < Cheery> it's good milestone, but I need to score.
20:21 < Cheery> happen to know about node.h cheatsheet or such?
20:21 < Cheery> I barely remember it all yet
20:22 < yawnt> npm dead with node v0.8.13
20:22 < yawnt> am i the only one?
20:26 < chovy> did you install npm?
20:26 < chovy> that isn't part of node
20:27 < yawnt> it is
20:27 < yawnt> since version 0.6
20:27 < yawnt> lol
20:27 < dreamdust> yup
20:27 < chovy> pretty sure i had to install it
20:27 < chovy> with latest node
20:28 < draginx> no its built with the latest node
20:28 < chovy>   apt-get install curl
20:28 < chovy>   curl http://npmjs.org/install.sh | sudo sh
20:28 < chovy> don't think so
20:28 < draginx> npm can still be installed spearately
20:28 < draginx> doesnt mean it isnt packaged with the latest node
20:28 < daugustine> so I've got the log file for my windows 7 install attempt, I have no idea what's going wrong though. Any one care to take a look and try to help me out?
20:29 < ujjwalt> I'm writing a C++ add-on
20:30 < nathan7> chovy: https://github.com/joyent/node/tree/v0.6/deps/npm
20:30 < vicapow> is if(typeof(document)!=='undefined') the best way to detect if a module is in the browser?
20:30 < ujjwalt> I have a class whose objects I want to export, so within a instance method how do I identify the object on which it is called
20:30 < ujjwalt> since the method is static
20:31 < nathan7> vicapow: window.
20:32 < nathan7> vicapow: and typeof is not a function
20:32 < nathan7> vicapow: it is a unary operator
20:32 < vicapow> nathan7: awesome. thanks!
20:32 < nathan7> vicapow: if(typeof window!='undefined')
20:32 < nathan7> vicapow: //typeof always returns a string
20:33 < ujjwalt> or am I wrong that all methods have to be static?
20:34 < nathan7> ujjwalt: https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods
20:34 < nathan7> ujjwalt: "Static methods neither require an instance of the class nor can they implicitly access the data (or this, self, Me, etc.) of such an instance."
20:38 < ujjwalt> sorry i got disconnected - any responses in the meanwhile?
20:40 < context> 15:33    nathan7| ujjwalt: https://en.wikipedia.org/wiki/Method_(computer_programming)#Static_methods
20:40 < hunterloftis> isaacs: I just used nave to install 0.8.13, and now "npm install" gives me "npm ERR! cb() never called!" post rm -rf node_modules && npm cache clean
20:40 < ujjwalt> context: Sorry I got disconnected
20:41 < ujjwalt> no idea if you replied about anything else
20:41 < hunterloftis> isaacs: any ideas what I should try next? No other error info is available so I'm not sure where to head.
20:41 < airtanah> i have updated Node Foreman to include a load-balancer
20:41 < ujjwalt> I know what static methods are, what am asking is that can you only declare static methods around c++ classes that you want to wrap
20:42 <@isaacs> hunterloftis: gist the output
20:42 < airtanah> to help test scaling your application
20:42 <@isaacs> hunterloftis: top to bottom
20:42 < hunterloftis> isaacs: https://gist.github.com/3955259
20:42 < airtanah> 'nf start -x 8888 web=5' starts 5 parallel processes behind port 8888
20:43 <@isaacs> hunterloftis: nvm, found it
20:43 <@isaacs> yeah, that sucks.
20:43 < ujjwalt> context: you there?
20:44 <@isaacs> have to release 0.8.14 to fix.
20:44 <@isaacs> that sucks a lot
20:45 < hunterloftis> Nah it's cool. Recommendations for now? Maybe roll back to 0.8.11 or something?
20:45 < MI6> joyent/node: isaacs created branch v0.8.13-fix - http://git.io/fDffpg
20:45 <@isaacs> hunterloftis: build from that ^
20:45 <@isaacs> hunterloftis: 0.8.14 coming very soon
20:46 < hunterloftis> isaacs: cool, thanks
20:47 < Xeon06_> Hey guys
20:48 < Xeon06_> Is there any etiquette in including other npm modules in your own?
20:48 < Xeon06_> Should I ask the author's permission, etc?
20:48 < Cheery> if I have to deallocate something when closing the C++ addon, how to do it?
20:48 < airtanah> Xeon06_: do you mean other than requriring it via package.json?
20:48 < Xeon06_> airtanah: Yes
20:49 < Xeon06_> airtanah: Or do people just use each other's module all the time without incident if its publicly available
20:49 < airtanah> Xeon06_: most people use npm to inject their dependencies
20:49 < airtanah> why do you want to include it manually?
20:49 < Xeon06_> airtanah: I'm sorry I did not phrase this properly
20:49 < MI6> joyent/node: isaacs v0.8 * 45a13d9 : events: Don't clobber pre-existing _events obj in EE ctor - http://git.io/v5uM1g
20:49 < Xeon06_> I'm making a module, and I want to use someone else's module
20:50 < Xeon06_> I'll be publishing that module
20:50 < Xeon06_> Is there anything in particular I should do in regards to the other person's code?
20:50 < airtanah> Xeon06_: i'm still unclear, are you including their source code, or just including it as a dependency in package.json?
20:51 < doki_pen> Xeon06_: I'd say just make sure you adhere to the licence
20:51 < Xeon06_> airtanah: As a dependency
20:51 < doki_pen> Xeon06_: if it's BSD or MIT, there isn't much to worry about
20:51 < MI6> joyent/node: isaacs created branch v0.8.14-release - http://git.io/WExVZA
20:51 < airtanah> Xeon06_: probably just go for it
20:51 < Xeon06_> doki_pen: Ahh okay, thanks, that answers my concerns 
20:51 < Xeon06_> Thanks for the help guys
20:52 < airtanah> Xeon06_: what is your module?
20:52 < Xeon06_> airtanah: Just a simple logger
20:53 < airtanah> Xeon06_: feel free to share it when it's ready
20:53 < Xeon06_> airtanah: Sure thing, but it's nothing big really, just fixing a small pet peeves of mine
20:53 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:55 < tnorris> was reading through the blog, and came across this for v0.9: "ought to move to TypedArrays in favor of Buffer". can anyone expound on this?
20:56 < tnorris> like, would I receive a TypedArray from a net callback, instead of a Buffer?
20:56 <@mbalho> yea
20:56 <@mbalho> buffer is basically a int8array
20:56 <@mbalho> typed arrays landed after node came out
20:57 <@mbalho> so its just a backport kinda thing
20:57 < tnorris> mbalho: oh really? had no idea. so  by like v0.14 or whatever Buffer could become deprecated?
20:58 <@mbalho> i dunno, maybe
20:59 < tnorris> interesting. man, when v1.0 is finally released it's going to be a lot different than when I started using it in early 2010.
21:01 <@mbalho> if you want node code to run in browser that depends on buffer you can just find and replace all Buffer with Int8Array and it pretty much already works
21:01 < tnorris> mbalho: though right now Buffers live outside the v8 memory space, which is convenient at times. But if the implementation goes with TypedArrays, wouldn't thos live in the v8 memory space?
21:02 <@mbalho> nope
21:02 <@mbalho> it would just be an api change
21:02 < exit2> any recommended Node.js books?
21:04 < tnorris> mbalho: awesome, thanks for the insights.
21:06 < tnorris> exit2: honestly, i'd suggest picking up any good javascript book, then looking at the node.js api.
21:06 < airtanah> question/poll is it better to use one event emitter, and have the registered handlers filter by message type, or use an array of event emitters separated by type?
21:06 < exit2> tnorris: crockford stuff?
21:07 < tnorris> exit2: yeah, that's good. also like http://jsninja.com/
21:07 < tnorris> can preorder and view the pdf.
21:08 < tnorris> exit2: just ignore anytime they talk about DOM specific API. don't have to use that in node.
21:08 < nsm> exit2: eloquent javascript http://eloquentjavascript.net/
21:08 < exit2> nsm: yeah I've been through that
21:08 < tnorris> ooh, yeah. that's a good one too.
21:08 < nsm> exit2: cool
21:08 < gkatsev> eloquent is nice because of the interactive excercises
21:08 < exit2> and yes, it is good
21:09 < tnorris> exit2: honestly I'd start at the top of nodejs.org/api/ and work your way down.
21:09 < exit2> tnorris: ok haha, I'll do that
21:09 < tnorris> test out code and ask questions here. i've gotten huge help from the node community.
21:10 < s5fs> exit2: yeah, read the api docs, they're pretty good. crockford book is great too.
21:11 < gkatsev> I would not advise crockford book as first intro to js.
21:11 < gkatsev> There's also JS: The definitive guide by david flanagan, if you want a deep dive into js
21:12 < nsm> exit2: start with implementing something simple in node and follow the API docs, there is nothing to learn in node other than the API if you know JS
21:12 < hunterloftis> isaacs: didn't you have some commands to completely erase npm from a system? gonna drop that into a script if you remember.
21:12 <@isaacs> hunterloftis: i usually just write it out by memory
21:13 < hunterloftis> isaacs: what was it again? My memory isn't as good as yours ;)
21:13 <@isaacs> oh, i guess i do have it written down here..
21:13 <@isaacs> rmnpm () { rm -rf /usr/local/{lib/,}{node_modules,node,bin,share/man}/{.npm/,}npm* ~/.npm
21:13 <@isaacs> }
21:13 < hunterloftis> baller, thanks
21:15 < tnorris> along the lines of exit2's question, is there a guide explaining the node internals?
21:15 < tnorris>  i've been doing a lot of source perusing lately to understand how it communicates with v8/libuv and such, but can be confusing at times.
21:16 < MI6> joyent/node: isaacs created tag v0.8.14 - http://git.io/kfXSxA
21:17 < nsm> tnorris: none that I'm aware of. But its not so difficult actually, I think you can just ask me or node devs. I may write something down at some point
21:17 < nsm> would be a good appendix to the uvbook
21:20 < tnorris> nsm: awesome, thanks. unfortunately i'm not so good at c++, but really want to try helping out on the js side.
21:22 < MI6> joyent/node: isaacs v0.8 * 7fe1671 : blog: Post for v0.8.14 (+3 more commits) - http://git.io/qh3Vbg
21:22 <@isaacs> well, that was exciting.
21:22 <@isaacs> :)
21:23 < tnorris> isaacs: lol, just got done building/installing v0.8.13. what happened?
21:23 <@isaacs> tnorris: bug in EventEmitter class
21:23 < tnorris> nm, see the blog post
21:27 < Cheery> http://bpaste.net/show/53666/
21:27 < Cheery> I just got that running. but I wonder what next.
21:28 < Cheery> dispmanx clearly has concept of displays
21:28 < Cheery> so it might make sense to make a class which lets you open a display.
21:29 < Cheery> but I'm just little bit clueless about the REST of that stuff.
21:29 < Cheery> like.. look at those close -functions
21:29 < Cheery> what should I do with them?
21:39 < Xeon06_> If I'm making a node module, do I need to commit my own node_modules directory?
21:40 < nsm> Xeon06_: no
21:40 < Xeon06_> nsm: Thanks
21:40 < nsm> also be careful to clean out your working dir before you npm publish
21:40 < Xeon06_> nsm: You mean of files that aren't related like logs and such?
21:40 < Xeon06_> Oh
21:40 < Xeon06_> the node_modules directory itself?
21:41 < Xeon06_> I should delete before doing the npm publish?
21:41 < nsm> yea, everything that is not something you'd want shipped with your module
21:41 < Xeon06_> nsm: Ahh I see, thanks
21:41 < nsm> any node_modules/, random test files, build files etc
21:43 < CoverSlide> Xeon06_: or you can just have node_modules in your .npmignore file
21:43 < tnorris> nsm: doesn't it also work if you exclude those in your .gitignore?
21:43 < CoverSlide> i think if you have it in .gitignore as well
21:43 < Xeon06_> It is in my .gitignore
21:43 < nsm> i don't remember, i usually just purge
21:43 < CoverSlide> Xeon06_: you can run `npm package` and check the file that comes out
21:44 < Xeon06_> Okay I'll try it
21:44 < MI6> joyent/node: isaacs v0.8 * 5f0a10a : blog: Correct shasums for v0.8.14 - http://git.io/5l_uxw
21:44 < Xeon06_> CoverSlide: Just literally `npm package`? That doesn't seem to be a thing
21:45 < tnorris> mbalho: holy crap. TypedArrays have changed my life. using those with complex data views is genius.
21:45 < CoverSlide> sorry i mean `npm pack`
21:47 < nsm> tnorris: you'll love http://wiki.ecmascript.org/doku.php?id=harmony:binary_data_semantics then
21:47 < CoverSlide> Xeon06_: although be sure to delete the tarball that comes out  before you publish or it will publish that one too
21:47 < Xeon06_> Okay sure enough, tnorris, nsm, CoverSlide it ignores the files that are in .gitignore
21:48 < Xeon06_> I have a last question. In my package.json, my dependencies use the "xtend": "~1.0.3" format. I suppose thats not the best way of doing it?
21:48 < cbarrett1> hello all, I am trying to install coffeescript via npm but I am getting 
21:48 < cbarrett1> npm ERR! cb() never called!
21:48 < cbarrett1> npm ERR! not ok code 0
21:48 < cbarrett1> any ideas?
21:49 < yawnt> cbarrett1: update to .14
21:49 < yawnt> .13 is bugged
21:49 < cbarrett1> yawnt:  is the installer on the website .13?
21:49 < yawnt> it's .14
21:49 < Cheery> can I reliably expect that the destructor of a c++ object will be called?
21:49 < yawnt> it was .13 about an hour ago
21:50 < cbarrett1> yawnt:  Ok I'll try it out again
21:51 < tnorris> nsm: ah! js is getting so complicated, but so much more awesome. 
21:51 < tnorris> like, I thought I understood how prototypal inheritance worked, but with all the engine optimizations now I'm not sure.
21:51 < Xeon06_> Wow, did GitHub really just automatically fork a repo because I linked to it in my readme?
21:51 < nsm> tnorris: well prototypal inheritance still works, just optimized under the hood
21:52 < nsm> as in semantics havne't changed
21:54 < tnorris> nsm: yeah, it's the under the hood stuff that's getting me. for example, in https://gist.github.com/3955671, line 6, gained 20% perf for converting to int before doing comparison.
21:55 < cbarrett1> yawnt:  yep that fixed it, thanks!
21:56 < yawnt> cbarrett1: welcome
21:56 < rgb247> how can I use node js and socket.io to create a "channel" and emit only in this channel
21:56 < rgb247> for example if I want to make a user-to-user chat
21:57 < rgb247> each user have an unique ID
21:57 < CoverSlide> why is everyone making chats with socket.io?
21:58 < jwulf> you mean why socket.io
21:58 < jwulf> or why chats?
21:58 < nsm> rgb247: have references to both the sockets, then write on one side when you read from the other
21:58 < CoverSlide> why chats?
21:58 < aho> hello world
21:58 < aho> ish
21:58 < nsm> aho++
21:58 < jwulf> ++
21:58 < jmoyers> rgb247 that is literally the canonical implementation
21:58 < jmoyers> named channels
21:59 < WarheadsSE> stable 0.8.14 is in the Arch Linux ARM repos.
21:59 < jmoyers> its right on socket.io -- emit('channel_name', event)
22:00 < rgb247> nsm: can you be more explicitely please?
22:00 < opus_> Hello, can anyone explain to me what the did in Jade in regards to removing layouts?
22:00 < opus_> what did the replace layouts with in jade?
22:00 < rgb247> jmoyers: any documentation about channels?
22:01 < tsingi> Can I render SVG in node.js, can anyone point me at an example?
22:01 < jmoyers> website -- read through 'how to use'
22:01 < jmoyers> its not even 5 pages
22:01 < jmoyers> and its going to give you all you need
22:01 < nsm> rgb247: what jmoyers said
22:02 < jmoyers> yes, yes you can use svg in node tsingi 
22:02 < receptor> i'm running node 0.8.13 with npm 1.1.65 on ubuntu 12.04.1 x64 aws micro instance. i'm getting npm ERR! cb() never called! when trying to npm install mongodb. cleaning npm cache and even deleting .npm dir doesn't help. any ideas what to do next?
22:02 < jmoyers> typing nodejs svg into google yields https://github.com/dodo/node-raphael
22:02 < jmoyers> and as i recall, tj wrote something with cairo
22:03 < tsingi> jmoyers: I came across raphael, is it part of or sister to nodejs?
22:03 < jmoyers> raphael is a javascript library
22:03 < jmoyers> it does vector graphics and such
22:04 < jmoyers> there are actually a bunch such libraries that abstract canvas or svg with some nice drawing dsl, or scene graph
22:04 < jmoyers> and someone seems to have ported it to node
22:04 < tsingi> jmoyers:  A cursory look it appeared to use a turtle type semantics. 
22:04 < jmoyers> i have no idea what that is
22:04 < jmoyers> but, its just some api
22:04 < tsingi> np, thanks.
22:05 < tsingi> jmoyers: fyi turtle graphics use a position and movements as opposed to declaring objects.
22:06 < tsingi> I'll look into it.
22:08 < draginx> Any idea why im getting this eror https://gist.github.com/43ad4dc00380fb8c4ee2 even when ive done brew install libmagic
22:10 < cellvia> Streams ahoy, any one who has encountered this?   "Unexpected "\u001f" at position 0 in state START"  is the error,  https://gist.github.com/3955771   for more detail....
22:12 < vicapow> draginx: what module are you trying to install?
22:12 < rgb247> I have some missconcepts about web sockets - maybe anyone can help me to understand this
22:13 < rgb247> If I want to use node js with socket io, for a web chat for example, in a web programming language such as PHP or Python. How the things should be?
22:13 < rgb247> I analysed that the node js server application will read from the hdd the client file and send it as a response to the client 
22:13 < rgb247>   res.sendfile(__dirname + '/index.html');
22:14 < jmoyers> you… don't
22:14 < jmoyers> combine php, python, and node
22:14 < jmoyers> node is full stack -- it encapsulates the server, http, etc
22:15 < jmoyers> php and python in this case is redundant
22:15 < vicapow> rgb247: but you could use it to do what you want
22:15 < vicapow> rgb247: you'd need something like nginx in front of both php and node
22:16 < vicapow> rgb247: but that gets messy
22:16 < rgb247> vicapow: yes, I have something like nginx as server-side to put my web page written in php/python over http
22:16 < vicapow> rgb247: awesome
22:17 < nsm> rgb247: how much experience do you have with web dev, i.e. are you familiar with configuring nginx/haproxy etc. because vicapow's approach while it does the trick is a bit involved
22:17 < nsm> so i wouldn't recommend it if this is your first node/web application
22:17 < vicapow> nsm: +1
22:17 < rgb247> nsm: I don't have experience with those daemons
22:17 < opus_> Is there any reason why the HTML rendered in jade WON't be indented even if I force pretty?
22:17 < nsm> rgb247: then for now stick to a pure node, as simple as possible, implementation
22:17 < rgb247> I know python and PHP and I can play with them to make web pages
22:17 < opus_> It seems to totally ignore my pretty=true
22:18 < draginx> vicapow: im trying to install imagick
22:18 < rgb247> nsm: yes, this is what I want, but I need a start to play with this more in deepth
22:18 < draginx> > npm http 304 https://registry.npmjs.org/imagick/0.1.0 this one
22:19 < rgb247> nsm: please tell me how hard will be to implement this application:
22:19 < nsm> are you just implementing a normal chat?
22:20 < nsm> it isn't hard, just wrap your mind around how (web)sockets work
22:20 < rgb247> nsm: a server written in node js and a client which connect to this node js server. I want to this node js server, to tell to everyone which are connected to it when someone new has connected
22:20 < vicapow> draginx: there's no module there
22:20 < draginx> vicapow: uhh
22:20 < nsm> rgb247: read the socket.io documentation, there is a broadcast feature you are looking for
22:20 < draginx> so may be its broken?
22:20 < vicapow> draginx: oh, here it is https://npmjs.org/package/imagick
22:21 < draginx> yeah
22:21 < vicapow> draginx: i wouldn't use that module. it's two years old
22:21 < rgb247> nsm: I've played with examples from socket.io/#how-to-use - I've successfuly created a chat from this example
22:21 < draginx> python cant find the magic++ i guess
22:21 < draginx> even though its isntalle
22:21 < rgb247> nsm: but I want the client to be written in my language, on the server (apache/ngix/other
22:21 < nsm> rgb247: any particular reason why?
22:22 < nsm> rgb247: especially if it will only serve a static web page
22:22 < vicapow> draginx: python?
22:22 < willwhite> substack: have you had a chance to look at this pull? https://github.com/substack/node-optimist/pull/73
22:22 < rgb247> nsm: for example I want to display something from the database using PHP or python
22:22 < rgb247> nsm: how can I do that?
22:24 < draginx> vicapow: it uses python to try to find the build
22:24 < draginx> what would u suggest for imagick? :/
22:24 < vicapow> draginx: what is the module you're having problems installing?
22:24 < draginx> u found it..
22:24 < draginx> but let me see if i even need it :)
22:25 < nsm> rgb247: in that case, i'd use nginx/haproxy to act as an intermediary so that the cross origin security limitations wouldn't stop your app from working
22:25 < draginx> vicapow: im = require('imagemagick')
22:25 < nsm> so your server runs haproxy/nginx, based on what sort of requests the client makes
22:25 < draginx> yeah I use it :/ fuck
22:25 < nsm> it redirects to either php/python or node
22:26 < vicapow> draginx: this seems like a much better module. https://npmjs.org/package/imagemagick
22:26 < vicapow> draginx: just use that one
22:26 < rgb247> nsm: tell me a thing. I watched examples from socket.io. I see that the client side file have this line: <script src="/socket.io/socket.io.js"></script>
22:27 < rgb247> nsm: if I create a client.php and paste this line, of course, I've receiver an error - 404 socket.io.js has not found 
22:27 < rgb247> nsm: what socket.io.js supposed to be?
22:27 < nsm> https://github.com/nikhilm/tictactoe has haproxy.conf and nginx.rules as basic examples, but also read up on uides like http://lheurt.blogspot.com/2011/12/reverse-proxy-nodejs-websockets-with.html
22:27 < rgb247> nsm: http://socket.io/#home - this example
22:28 < nsm> rgb247: socket.io.js is the socket.io code
22:29 < rgb247> nsm: and how can I get the socket.io code in a .js file to put this on my web page 
22:29 < rgb247> nsm: I've installed socket.io with npm install socket.io
22:29 < draginx> vicapow: i am using that one :/
22:29 < nsm> yes so the npm_modules/socket.io folder will have it somewhere
22:30 < vicapow> draginx: but a minute ago you said you where using https://npmjs.org/package/imagick
22:30 < draginx> o wait a minute
22:30 < vicapow> draginx: which is it?
22:30 < draginx> i didnt update my package.json :/
22:30 < draginx> it was trying ot install both xD
22:31 < lifeinchords> hi there
22:31 < draginx> yaya all fixed! thanks vicapow :)
22:31 < lifeinchords> is this up to date : http://stackoverflow.com/questions/9044788/how-do-i-uninstall-nodejs-installed-from-pkg-mac-os-x
22:31 < othiym23> draginx: I've had better luck with the graphicsmagic package than imagemagick, but that's largely because graphicsmagick itself is slightly easier
22:31 < vicapow> draginx: awesome
22:31 < lifeinchords> to uninstall from a pkg install?
22:32 < draginx> othiym23: ive had problems with both on separate machines and OSes :/ that whole thing is a cluster lol
22:32 < othiym23> agreed
22:33 < vicapow> any suggestions on the best library to use for manipulating graphics?
22:34 < CoverSlide> imagemagick is tried and true.
22:35 < rgb247> nsm: yes, the folder node_modules is in the root - same as client.php
22:35 < CoverSlide> for drawing graphics, however, i like canvas
22:35 < rgb247> nsm: this folder have this structure: node_modules/socket.io/...
22:35 < rgb247> nsm: the client.php still can't find it
22:41 < nsm> rgb247: a lot of this is dependent on your local setup, especially paths and what services are running, so please read the links i posted, explaining it over IRC is not easy
22:42 < Fodi69> I want to use node inspector to debug my code, but the code just doesn't show up, when I open the provided link just a blank  inspector shows up
22:42 < rvagg> milani: whazzup?
22:43 < Fodi69> it says "you should now see the javascript source from node. If you don't, click the scripts tab."
22:43 < Fodi69> no I don't see anything
22:49 < Aikar> whats the best way to 'replace' "make install" w/o python code?
22:49 < Aikar> why does make install need a json lib to copy binaries into place?
22:49 < Leeol> Quick poll. If you're going over code docs (api/etc), which style would you prefer: API Docs (eg: http://9elements.github.com/haml-coffee/), or Docco style docs (eg: http://jashkenas.github.com/docco/)
22:49 < Leeol> I'm torn.. heh
22:49 < Aikar> trying to install newest ver on a debian lenny box and its missing json...
22:49 < Aikar> but installing python-json doesnt work
22:50 < tmpvar> Leeol, docco
22:50 < Leeol> tmpvar: Thanks for your input. Docco for complex projects as well?
22:51 < tmpvar> Leeol, complex libraries or applications?
22:51 < nsm> Leeol: node.js style, simple markdown
22:51 < Leeol> tmpvar: Libraries/etc. Something with an api you need to interact with
22:52 < tmpvar> i think you should isolate complexity by creating more - less complex modules
22:52 < Leeol> tmpvar: I too prefer Docco, but i feel like i'll just end up writing API docs in Docco style.. if that makes sense. I need to tell the user what arguments are acceptable/expected
22:53 < Leeol> tmpvar: Well it's not even that though.. for example, look at http://jashkenas.github.com/docco/, under the `generateHtml()` function (half way down the page or so)
22:54 < Leeol> tmpvar: I personally prefer reading documentation on the function, and knowing what the arguments are.. in this case, what exactly is a section? A list of already compiled/htmlified source?
22:55 < Leeol> I like that the concept of Docco style docs is that the code itself aids in explaining what everything does, but i feel like it would often lead to confused api-consumers
23:27 < jwulf> who's rocking the TypeScript?
23:27 < othiym23> can TypeScript, in fact, be rocked?
23:27 < othiym23> is it rockular?
23:28 < othiym23> it seems more... jazzy
23:28 < rauchg> jwulf i'm rocking it in spirit 
23:28 < Fodi69> hi, I want to use node inspector to debug my code, but the code just doesn't show up, when I open the provided link just a blank  inspector shows up.Has anyone used this tool before?       
23:28 < rauchg> i think source maps need to be commonplace first 
23:28 < jwulf> Fodi69, make sure to start your running code with --debug
23:29 < Fodi69> jwulf: i'm running 'node --debug-brk server.js'
23:30 < othiym23> Fodi69: I've used node-inspector a bunch
23:30 < Fodi69> jwulf: the same with --debug
23:30 < jwulf> fodi69, if you're using the chrome inspector, you may need to reveal the sources tab and select a source
23:30 < othiym23> if you have node-inspector running, and are invoking things with node --debug-brk, things *should* be working
23:30 < jwulf> also, it breaks immediately with --debug-brk
23:30 < jwulf> try it with --debug
23:30 < othiym23> Fodi69: what version of Node / node-inspector?
23:30 < jwulf> see if that makes it different
23:31 < othiym23> jwulf: if you're trying to set breakpoints or debug a test case, --debug-brk is often the only way to get it working
23:31 < cpsubrian> tjholowaychuk:  If you care to see my jog PRs in practice (per project formatters and stdstore) I'd be happy to do a little screen share.
23:32 < tjholowaychuk> cpsubrian haven't had a chance to look at them yet
23:32 < Fodi69> i use node v0.8.12 and node-inspector@0.2.0beta3
23:32 < tjholowaychuk> might not until tomorrow
23:32 < Fodi69> installed via npm
23:32 < cpsubrian> tjholowaychuk, yeah no biggie .. using my fork for now .. its been a good testbed anyhow
23:33 < jwulf> othiym23, sure; but he's debugging his debugging at this point, not his code
23:33 < Fodi69> i dont see any code, thats the problem! :D
23:33 < jwulf> tjholowaychuk, what's the best way to wrap my class in a module declaration i TypeScript?
23:34  * tjholowaychuk knows no typescript
23:34 < jwulf> oh, I heard you were porting express to TS.....
23:34 < tjholowaychuk> hahaha
23:34 < tjholowaychuk> no
23:35 < tjholowaychuk> I'd never touch a microsoft product let-alone their code
23:35 < jwulf> my aggregator must be mixing up tweets
23:36 < othiym23> Fodi69: have you tried reloading the window?
23:36 < Fodi69> hi, I want to use node-inspector to debug my code, but the code just doesn't show up, I run node --debug-brk server.js, then node-inspector, but when I open the provided link just a blank inspector shows up without any code. I installed node v0.8.12 and node-inspector@0.2.0beta3
23:37 < Fodi69> othiym23: hundred times
23:37 < othiym23> OK
23:37 < othiym23> weird
23:37 < othiym23> you're using the same setup I am
23:37 < othiym23> what OS?
23:37 < Fodi69> Ubuntu 12.04
23:37 < jwulf> Fodi69, what's the inspector? 
23:37 < jwulf> Chrome?
23:38 < Fodi69> Chromium 22.0.1229.79 Ubuntu 12.04 (158531)
23:39 < jwulf> and what's the link?
23:40 < jwulf> if it's http://0.0.0.0 try it with 127.0.0.1 instead
23:40 < othiym23> hmmm I'm on OS X
23:40 < Fodi69> http://0.0.0.0:8080/debug?port=5858
23:40 < jwulf> try it with 127.0.0.1
23:40 < othiym23> yeah, try localhost
23:40 < jwulf> is the debugging node process sitting in a loop?
23:40 < jwulf> it doesn't exit with an error or something else?
23:41 < jwulf> the node server that you want to debug i mean
23:41 < Fodi69> I have some files on the left side, but nothing happens when I click them
23:42 < othiym23> and the node-inspector process isn't crashing out?
23:42 < jwulf> Fodi69, that's not a blank screen... 
23:42 < Fodi69> no, the 2 process runs without any error or message
23:43 < Fodi69> jwulf: blank inspector
23:43 < jwulf> if you start the inspector when the node server has crashed, *that's* a blank screen
23:43 < jwulf> Fodi69, any chance you can upload a screenshot?
23:45 < Fodi69> jwulf: https://ge.tt/5ytFEGQ/v/0
23:48 < Fodi69> I hoped, that I will see the code, and I can put some debug points into it
23:48 < Fodi69> oooooooooooooooooooooooooooooo fuck
23:48 < jwulf> fodi69, have you tried clicking that little arrow underneath "Scripts"
23:49 < Fodi69> an extension blocks it
23:49 < jwulf> that pops them out
23:49 < granjef3> how come the node.js site displays the current version as 0.8.11, but using the chris-lea ppa it gives me 0.8.12? is there major bugs in 0.12 or something?
23:49 < Fodi69> maybe adblock
23:49 < Fodi69> it works without extensions
23:49 < Fodi69> fuck
23:49  * jwulf makes a note to recommend disabling extensions when inspector is not working
23:49 < Fodi69> jwulf: thank you
23:49 < Fodi69> :D
23:49 < Fodi69> :)
23:50 < Fodi69> now i have code
23:50 < Fodi69> let the fun begin
23:50 < jwulf> Fodi69, cool!
23:50 < Fodi69> :D
23:57 < othiym23> Fodi69: I've found that using private browsing with node-inspector is generally a good idea
23:57 < othiym23> it remembers weird stuff in your session, like breakpoints, that you don't always want remembered
--- Log closed Fri Oct 26 00:00:12 2012
