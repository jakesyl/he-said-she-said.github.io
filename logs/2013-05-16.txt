--- Log opened Thu May 16 00:00:03 2013
00:00 < myndzi> and to clean up, i'd call .end or something on both response events
00:11 <@konobi> myndzi: i can't remember, but i think once, a long time ago, there was a way to have a wildcard handler... not sure if that's still true though
00:11 < myndzi> don't really want or need a wildcard handler, i'd rather understand what exactly is going on :|
00:11 < myndzi> i'm almost familiar with the net and http & friends source code by now lol
00:11 < myndzi> but not enough that i can make a definitive statement
00:12 < myndzi> so hopefully somebody familiar enough with it will see this and can answer
00:15 < Radu> Hello
00:15 < Radu> Is there anybody here ?
00:16 <@konobi> myndzi: mocks ftw
00:24 < myndzi> konobi: i don't trust self-testing in the presence of things i may not know about :P
00:24 < myndzi> i can probably cover all the bases here though, i should just do that
00:30 < myndzi> doesn't appear to be any sort of wildcard listener in the code currently
00:31 <@konobi> myndzi: k
00:32 <@konobi> i'm probably thinking back to 0.1/0.2 era
00:50 -!- mode/#Node.js [+o TooTallNate] by ChanServ
01:00 < myndzi> heh
01:00 < myndzi> may have found a bug
01:00 < myndzi> apparently if you use req.on('timeout') the event triggers twice
01:04 < acuster> Hey all, I'm confused from conflicting docs. Does fs.createReadStream( filename ).on('end'...  potentially imply content so that rs.read() is required? So far that is always null here.
01:13 < canal> Hi guys, any tips on deployment tools for node.js apps ?
01:14 < canal> Hi guys, any tips on deployment tools for node.js apps ? Preferably not requiring you to build your own paas or write ruby ?
01:15 -!- mode/#Node.js [+o TooTallNate] by ChanServ
01:20 < myndzi> conclusions: seems my interpretation was pretty much correct
01:20 < myndzi> server side will emit three events
01:20 < myndzi> 'end' when a request ends, 'close' when a socket closes, 'clientError' when there's some kind of network error involved on the socket
01:21 < myndzi> should be more specific
01:21 < myndzi> the server instance emits clientError
01:21 < myndzi> the request instance emits end or close
01:21 < myndzi> or both
01:21 < myndzi> if the full request is not made and the socket closes, there is no error
01:22 < pachet> acuster can you give a little more explanation? maybe a bit of code?
01:23 < myndzi> no notification of the socket closing either it seems
01:24 < myndzi> ah, i don't have 'connection' bound
01:26 < myndzi> on the client side, the timeout does not affect the connection, socket and close describe when the socket opens or gets unexpectedly terminated
01:27 < myndzi> response emits close, i mean; request emits socket
01:27 < myndzi> if there's a network error you get the error event and not the close event
01:27 < myndzi> there is no 'end of request' event
01:28 < myndzi> it's assumed all there in the callback / request event
01:57 < javahead123> hey guys-- I've got an npm question
01:57 < corytheboyd> there is a fundraiser open right now for request https://www.bountysource.com/#fundraisers/251-request
01:57 < javahead123> it seems my system always defaults to installing a package globally
01:57 < javahead123> or… into my ~ directory
01:58 < javahead123> I've found that if I npm init in a new folder then I can install packages locally
01:58 < javahead123> is this the right behavior for npm?
01:58 <@isaacbw> you probably have a node_modules folder in ~
01:58 < javahead123> I do, yes
01:58 < pachet> javahead123: yeah that's expected
01:58 < javahead123> … so it looks in ~ first?
01:58 < pachet> afaik npm will traverse up the cwd until it finds one with a node_modules
01:58 < pachet> ^
01:59 <@isaacbw> and if it doesn't find one, it will use the cwd
01:59 < javahead123> ohhh
01:59 < javahead123> so it will create a folder called node_modules in the cwd if it doesn't find one?
01:59 <@isaacbw> right
01:59 < javahead123> lemme try deleting that and trying again
02:00 < javahead123> eyyy
02:00 < javahead123> :-)
02:00 < pachet> :]
02:00 < javahead123> so having it there made sub folder reluctant to create a new node_modules/ … awesome
02:00 < javahead123> thanks!
02:01 < ChrisPartridge> corytheboyd: shame, the only way to "pledge" is via paypal
02:01 < corytheboyd> I know :(
02:03 < corytheboyd> ChrisPartridge: I actually work with Bountysource, we're working on getting Google Checkout and Bitcoin support added soon
02:04 < corytheboyd> we want to see request thrive :D
02:06 < ChrisPartridge> corytheboyd: Cool, yeah it's a handy module
02:31 <@isaacbw> 
03:00 < gluxon> Anyone know of good project management software?
03:00 < gluxon> Open Source preferably, and it doesn't need more features than GitHub Issues has.
03:01 <@isaacbw> why not use github issues then
03:01 < leichtgewicht> I assume you don't want trac? http://trac.edgewall.org/
03:01 < gluxon> isaacbw: Because telling a bunch of non techy people to go and use GitHub is like.. no.
03:01 < gluxon> :(
03:01 < gluxon> I wish though.
03:02 < gluxon> And I'm sure GitHub doesn't like people using only the issues component.
03:04 <@isaacbw> if it's not for software, basecamp is a good choice
03:04 < Kennythehitman> :/ Does anyone know why I'm losing data when doing fs.renameSync('./'+filename, './public/'+filename);
03:05 < gluxon> It's not.
03:05 < gluxon> Basecamp scares me though :(
03:05 <@isaacbw> lol
03:05 < gluxon> Kennythehitman: Losing data?
03:05 < gluxon> isaacbw: Open Source? :D
03:05 < Kennythehitman> I'm generating .csv on the server with meteor.js and apparently it does just fine when saving in everything BUT the current working directory (meteor root)
03:05 < Kennythehitman> with node-csv-parser on meteor.js*
03:05 <@isaacbw> how about an org-mode file in dropbox
03:06 < Kennythehitman> fuck, sorry. I meant it can save in the current working directory but nothing else
03:06 < gluxon> Kennythehitman: Write permissions?
03:07 < Kennythehitman> http://pastebin.com/AR4GTfSG any help would be greatly appreciated
03:07 < Kennythehitman> gluxon: hmm, that may very well be the problem. let me see
03:07 < gluxon> Kennythehitman: With software, losing everything is an easier problem to solve than losing some stuff.
03:08 < gluxon> Nothing is being saved, right?
03:08 < Kennythehitman> Eh
03:08 < Kennythehitman> Sometimes one row is saved
03:13 < Kennythehitman> Damn, it's not the permissions
03:13 < Kennythehitman> just did a test with fs.writeFile
03:13 < Kennythehitman> perhaps I should just use that and pass the buffer that node-csv generates instead of relying on node-csv to do it correctly
03:13 < gluxon> Kennythehitman: Standard fs.writeFile doesn't work?
03:14 < Kennythehitman> Yes, it worked
03:27 <@isaacbw> hello beautiful
03:28 < ChrisPartridge> isaacbw: hi handsome ;-)
03:28 <@isaacbw> :O
03:28 <@isaacbw> :,D
03:40 < circ-user-1EhvC> hey guys anyone knows where to get  a programming job?
03:42 < Zolmeister> http://indeed.com
03:42 < mscdex> circ-user-1EhvC: create a startup
03:44 < ChrisPartridge> jobs are overrated
03:58 < Kennythehitman> haha, fuck.
03:58 < Kennythehitman> solved my problem by just piping the output….thanks a lot standard read/writeStream??? WTF lol
03:59 < Kennythehitman> As a perfectionist I will need to learn why the two solutions work the way they do though
03:59 < Kennythehitman> Does anyone have any good resources on Buffers and Streams?
04:00 < shreds00> Hi
04:01 < shreds00> I'm trying to use express for a login form. The route is /admin/login and it's a post route (receive the form request). I'd like to know how to catch my form fields once in the request code? I tried with req.param('username') for example and it's undefined
04:01 < shreds00> I used to use express for that kind of stuff about a year ago but now it doesn'T work like that anymore I guess
04:03 < s5fs> shreds00: req.body should have what you're looking for
04:03 < shreds00> No it doesn't and that's what I'm wondering
04:03 < shreds00> Pretty simple form
04:04 < ChrisPartridge> shreds00: got a body parser?
04:04 < s5fs> shreds00: oh weird. any code to share?
04:05 < shreds00> ChrisPartridge: no i thought it was part of express
04:05 < ChrisPartridge> shreds00: there is a body parser in express, you can use
04:05 < ChrisPartridge> but you have to app.use it
04:06 < ChrisPartridge> Kennythehitman: https://dl.dropboxusercontent.com/u/3685/presentations/streams2/streams2-jsconfau.pdf, https://github.com/substack/stream-handbook, http://maxogden.com/node-streams, http://blog.evanoxfeld.com/novanode-streams-0.10-presentation/
04:06 < shreds00> That's a very simple code https://gist.github.com/tbergeron/5589320
04:06 < shreds00> ohhh that must be why
04:06 < shreds00> i must miss the app.use
04:06 < ChrisPartridge> most likely
04:06 < ChrisPartridge> then req.param will work
04:06 < Kennythehitman> ChrisPartridge: many thanks
04:06 < ChrisPartridge> Kennythehitman: yw
04:07 < shreds00> that did the trick!
04:07 < shreds00> thanks! :D
04:07 < s5fs> ChrisPartridge: thanks for those links, although they're for kenny :)
04:08 < ChrisPartridge> shreds00: awesome
04:08 < ChrisPartridge> s5fs: no worries
04:09 < s5fs> npm install friendship? haha
04:52 < cellvia> i know this may not be the ideal place for this question but it came up from a node related issue when i was trying to run grunt.  for some reason when i run grunt now from windows commandline, if the folder im in has a grunt.js file, instead of following my PATH var to run the node grunt command, it is instead using my default windows file association to open the local grunt.js file in my text editor
04:53 < cellvia> any ideas off the top of your head how to stop windows from doing this besides completely disassociating the js filetype
04:54 < niggler> anyone having problems with installing jshint from npm?
04:54 < niggler> lemme take that back -- it appears to be an npm issue
04:54 < niggler> TypeError: Object.keys called on non-object
05:36 < bleathem> I seem to have two npm installs on my (linux) system.
05:36 < bleathem> 1) "
05:36 < bleathem> 1) "npm" installed in <home>/lib/node_modules
05:37 < bleathem> 2) "npm-cli.js" installed in <home>/js/node-v0.8.15-linux-x64/lib/node_modules/
05:37 < bleathem> ^^ which one is the "correct" one?
05:37 < bleathem> can I remove one of them?
05:43 < cococo> do you need to have a github project to get heroku free account work?
05:44 < ljharb> no, you just git push to heroku
05:44 < cococo> anyone here have try deploy from cloud9 to heroku?
05:45 < cococo> I have a dude...
05:46 < cococo> this code is the base to send a data to all clients
05:46 < cococo> socket.broadcast.emit('moving', data);
05:47 < cococo> but happens that in a game, is like a chat, where you have several room, with users in a #room and other users in #other_room...
05:47 < r1card> Folks, what do we have for sorting Unicode data more intelligently than .sort() does
05:48 < cococo> so how can I make socket.io code to users from one #room to send data only to thouse users in that #room
05:49 < cococo> so how can I make socket.io code to *COMUNICATE with users....
05:58 < s-p-n> cococo: You have to write browser-side javascript using the socket.io library
05:59 < s-p-n> see http://socket.io for examples
05:59 < s5fs> cococo: https://github.com/LearnBoost/socket.io/wiki/Rooms
06:02 < cococo> I just find that link on google, gonna take a look
06:10 < sinclair|node> anyone here doing anything with asmjs?
06:12 < r1card> Folks, what do we have for sorting Unicode data more intelligently than .sort() does?
06:12 < ljharb> r1card: pass a function into sort.
06:13 < ningu> r1card: I think .sort() depends on your locale. not sure though.
06:13 < ljharb> r1card: function (a, b) { return UnicodeForChar(b) - UnicodeForChar(a); }, UnicodeForChar is left as an exercise for the reader :-p
06:14 < ljharb> yeah, i think by default it uses function (a, b) { return a.localeCompare(b); }
06:14 < r1card> ljharb, well that excercise is my question :(
06:15 < r1card> ljharb, interesting that I can't set the locale on localeCompare ..
06:15 < ljharb> no, it's a system setting.
06:15 < r1card> Right, but that's not good.
06:15 < r1card> Cause my users have their own systems.
06:15 < ljharb> r1card: http://stackoverflow.com/questions/3630645/how-to-compare-utf-8-strings-in-javascript
06:16 < r1card> I guess it's suitable for the browser.
06:17 < ljharb> if you're in the browser, use localeCompare
06:17 < ljharb> if it's on the server, that code looks good to me
06:18 < ljharb> http://stackoverflow.com/questions/3630645/how-to-compare-utf-8-strings-in-javascript/3633725#3633725 also
06:18 < r1card> ljharb, thanks.
06:18 < ljharb> np
06:18 < r1card> sorting. It's complicated.
06:27 < r1card> Oh sweet I think ICU is available for Node.JS!
06:28 < leichtgewicht> I recently started on working on some search code ... really basic stuff really for japanese text. And the first thing I did was normalize it:
06:28 < leichtgewicht> For example: toLowercase() in order that B is always after a
06:30 < ningu> you should look at unorm too
06:30 < leichtgewicht> Japanese is a little more complicated because it has characters where one character can be transformer to latin using two characters.
06:30 < leichtgewicht> And 2 characters can sometimes become 3 and so on.
06:31 < r1card> leichtgewicht, it's a big mess, Unicode. :(
06:31 < leichtgewicht> Well: languages really.
06:31 < ningu> unicode != languages
06:31 < leichtgewicht> Is 1 before A ? is 0 before one? is 01 before 1 ?
06:31 < ningu> and writing systems != languages :)
06:31 < r1card> I propose we nuke all nations where English is not the official language.
06:31 < r1card> That'd include my country, but I'll do it.
06:31 < ningu> that would put me out of business
06:31 < ningu> so I will make contigency plans to nuke you first
06:31 < r1card> ningu, it'll put me out of life.
06:32 < ningu> haha
06:32 < r1card> But it has to be done.
06:32 < ningu> where are you?
06:32 < r1card> Europe, Bulgaria.
06:32 < r1card> We use cyrillic, like Russia.
06:32 < ningu> da ja znaju
06:32 < ningu> ja govorju nemnogo po-russki
06:32 < r1card> Cyrillic:Latin = Galaxy:iPhone.
06:32 < ningu> hehe
06:32 < ljharb> r1card: wait, in what country can't i speak english?
06:32 < r1card> ningu :D
06:32 < ningu> I like Cyrillic
06:32 < ningu> ljharb: you can speak english anywhere. you won't be understood everywhere.
06:33 < leichtgewicht> Or misunderstood ...
06:33 < ljharb> ok in which countries do you think i can't be understood?
06:33 < ningu> r1card: can you understand that? I assume so cause I read some bulgarian once and it wasn't too bad
06:33 < r1card> Nah Cyrillic is just a Latin ripoff where they shuffled the alphabet and turned some letters upside-down.
06:33 < ljharb> cause i'd love to find one so i can go there.
06:33 < ningu> r1card: I assume you are joking, but that's historically quite wrong
06:33 < leichtgewicht> ljharb: its about the level of understanding.
06:33 < r1card> ningu, I'm semi-joking. Technically both have been co-evolving.
06:34 < ljharb> i want one where i have to learn the language because there's almost no english understanding. even for tourist stuff.
06:34 < ningu> ljharb: of places I've been, Morocco is one. China is another. also Indonesia.
06:34 < r1card> ninegrid_, but in the end, there's nothing that unique about Cyrillic.
06:34 < leichtgewicht> ljharb: Usually human can make themselves understood using hand and feet.
06:34 < ljharb> ningu: cool, thanks
06:34 < ningu> r1card: Cyrillic is derived from a late version of the Greek alphabet, with a couple Hebrew characters thrown in. Nothing at all to do with the Roman alphabet, no co-evolution.
06:34 < r1card> ninegrid_, I mean Chinese hans at least can way "we have different semantics and don't look like a Latin ripoff"
06:34 < leichtgewicht> ljharb: Try north korea
06:34 < leichtgewicht> ljharb: The japanese really try to study english.
06:34 < leichtgewicht> Focus on the word "try"
06:34 < ningu> ljharb: I would imagine there are significant portions of africa and latin america that also fall into that category
06:35 < r1card> ningu, well greek alphabet, it's like Windows 3.11. It was good but it's time to move on.
06:35 < r1card> Still good for math though.
06:36 < ningu> черт возьми
06:36 < r1card> ningu, we need radical simplification.
06:36 < ningu> why?
06:36 < r1card> Because Unicode is a mess.
06:36 < r1card> And so are localized apps' string resources.
06:36 < ningu> you're basically saying that most of human culture should cease to exist so that your life can be easier.
06:36 < r1card> I don't miss Bulgarian at all.
06:37 < ningu> well, don't you think you should consider the others who might be affected before making such a blanket statement?
06:37 < r1card> I mean I speak it every day, but I mean, we need one language.
06:37 < r1card> English fits the bill.
06:37 < r1card> We don't need anything else.
06:37 < r1card> ningu, of course.
06:37 < ningu> spoken like a true engineer
06:37 < r1card> ningu, this is why it's good I'm not a ruler of the world.
06:38 < r1card> ningu, I'd "affect everybody" and not give a damn.
06:38 < r1card> ;)
06:38 < ljharb> if you want to be an engineer about it, we should all be speaking esperanto
06:38 < r1card> Nah engineers are practical.
06:38 < r1card> English it is, Esperanto is just like XHTML 2
06:38 < r1card> English is HTML5
06:38 < jamesdotnet> Engineers speak Lojban
06:39 < r1card> :)
06:39 < r1card> ningu, sometimes we need to take some pain, for future gain.
06:39 < r1card> ningu, that said I guess with globalization it'll happen naturally by everyone knowing English.
06:39 < r1card> ningu, I mean look at me, as one example.
06:39 < ningu> r1card: I don't object to everyone knowing english, but I do object to the idea that it would be good if they stopped speaking their native languages
06:40 < ningu> we might as well say that we should all eat mcdonalds for every meal
06:40 < r1card> ningu, I think this is the hoarder speaking in us.
06:40 < r1card> ningu, we want humanity to hoard culture and languages.
06:40 < r1card> ;)
06:41 < ningu> r1card: hoarding implies the objects do not have value.
06:41 < r1card> ningu, everything has value.
06:41 < r1card> ningu, except in the most lunatic examples of hoarding.
06:41 < ningu> ok, so I should say significant value.
06:41 < r1card> ningu, but I mean, even a stack of dirty papers can turn into beautiful Origami.
06:41 < ningu> I'm not talking about potential value, but actual value
06:41 < r1card> So let's hoard moldy paper sheets.
06:41 < r1card> Well.
06:42 < ningu> r1card: do you think we should eliminate all other species on the planet, if we could still feed ourselves?
06:42 < r1card> I don't know. I love all languages, I value them. I think they're beautiful. French, Japanese, Chinese, German, and the "smaller" ones. 
06:42 < r1card> I love them all.
06:42 < r1card> and I want them gone.
06:42 < r1card> :D
06:43 < alfonsodev> yep , only english and spanish 
06:43 < r1card> ningu, not at all, because species fill different niches in different ways.
06:43 < r1card> ningu, language is about people communicating.
06:43 < r1card> ningu, and the latitude/longitude we're at shouldn't determine how we communicate. It's kinda silly.
06:43 < ningu> r1card: language lets us communicate, but it is about a lot more than just communicating
06:43 < r1card> I mean it's hard to compare a fish with an eagle.
06:44 < r1card> Eagle will do very poorly on the bottom of the ocean.
06:44 < ningu> r1card: anyway, do you recognize the value of studying many species in biology in order to get a better understanding of what life is?
06:44 < r1card> ningu, don't get me wrong, as I said, I do value all languages, I love them, I respect them.
06:45 < r1card> I do study them and explore how one language borrows from another language, transforms a word and the original language borrows it back.
06:45 < r1card> It's a beautiful dance.
06:45 < r1card> But we need one language.
06:45 < ningu> language is one of the more basic of human capacities that distinguishes us from other species, so for a similar reason, I would say as scientists we should want to understand what language is
06:45 < r1card> So screw it.
06:45 < r1card> :D
06:45 < ningu> if we have one language that task becomes much harder
06:45 < r1card> ningu, most languages have the same structure though.
06:46 < ningu> r1card: now you're just showing that you're ignorant.
06:46 < r1card> ningu, no I know you can object to that comparing say Chinese with English.
06:46 < ningu> I have no idea where you got that idea, but it's certainly not the case.
06:46 < Lorentz> maybe if by most languages you mean english and bad english
06:46 < r1card> ningu, there are plenty of differences to find.
06:46 < Lorentz> maybe american, and canadian
06:46 < r1card> ningu, but at some level it's just happenstance.
06:46 < Lorentz> they're quite similar, yes
06:46 < jamesdotnet> Some whales use complex grammar. Would be interesting to know what they talk about, given they've been able to communicate long distances for millions of years longer than humans.
06:47 < ningu> r1card: actually, it's not happenstance at all, the limits of variation are pretty well defined
06:47 < r1card> ningu, for example why is "language" a good sequence of letter to describe language and "eiohfoerfh" isn't?
06:47 < r1card> ningu, no reason.
06:47 < r1card> it's happenstance.
06:47 < ningu> yes, the arbitrariness of the sign, sure
06:47 < ningu> but I'm talking about structural features -- for example, there are languages with 11 total sounds, and with 70, but not with 2, or with 2000
06:47 < r1card> ningu, of course.
06:48 < ningu> if you had one language you would have no idea
06:48 < r1card> ningu, but language is a platform. A platform's value grows as it grows.
06:48 < r1card> I mean with adoption.
06:48 < ningu> r1card: so alternative platforms should not exist?
06:49 < r1card> ningu, by being protective about all the languages, you don't know what would grow on top of English, if everyone said "English it is" and stopped speaking anything else.
06:49 < ningu> it's one thing to have a common platform, another entirely to eliminate all others
06:49 < r1card> ningu for example, it was a disaster dinosaurs and many other species don't exist.
06:49 < r1card> ningu, but mammals came.
06:49 < r1card> and it was good.
06:49 < r1card> As god would say
06:50 < ningu> r1card: sure. but we still study dinosaurs.
06:50 < r1card> ningu, sure. We study many dead languages too.
06:50 < ningu> what you're talking about is basically, fuck the dinosaurs, let's kill them all.
06:50 < r1card> I don't mind that. Let's kill THEM ALL.
06:50 < ningu> it's a lot easier to study them when they're alive.
06:50 < r1card> And then study their corpse.
06:50 < alfonsodev> some one using "GivenWhenThen" ? 
06:51 < r1card> ningu, I'll be known as a serial language killer.
06:51 < r1card> ningu, there's a reason we die, and leave offspring.
06:51 < r1card> ningu, the reason is we can't let go.
06:52 < r1card> ningu, so nature forces us to let go and let the new come on.
06:52 < r1card> come in*
06:52 < ningu> r1card: would you rather have bulgaria be independent or under the ottoman empire?
06:52 < cococo> any idea, I just can not make a simple "git add" command in the cloud9 terminal
06:52 < cococo> animesonic@test:~/498693 $ git add                                                                                                                                  fatal: Not a git repository (or any of the parent directories): .git   
06:53 < r1card> ningu, well this statement on its own doesn't mean much because who cares what rule are we under. Turkey is mostly a secular country these days.
06:53 < r1card> ningu, and since we're neighbors, for good and bad we interact culturally heavily.
06:53 < cococo> is this that momment I was waiting for 3 days of hard readding tutorials to say ... fuck this!
06:53 < r1card> ningu, maybe people here like "chalga" which is oriental music coming from Turkey.
06:54 < ckknight> r1card: I think it's more that evolution is simply more efficient with death. Especially when you take into account cellular damage over time, it's far cheaper to construct a new entity than to have the previous keep going ad infinitum.
06:54 < ningu> when it comes to language, the point about evolution is beside the point really. we can decide what we value and develop policy accordingly.
06:54 < ningu> otherwise we would just let disabled people die.
06:54 < r1card> ckknight, yes but we're saying the same thing. Just like cellular damage accumulates over time so does with any system. Including culture, languages and so on.
06:55 < r1card> ckknight, to evolve, to progress, we need to be reborn from our ashes from time to time.
06:55 < ckknight> yeah
06:55 < ckknight> it occurs in science as well
06:55 < ningu> if r1card says we should never help those who are weak then he'll be consistent.
06:55 < r1card> ckknight, indeed.
06:55 < ckknight> often you need the old generation to pass away for new ideas to prosper
06:55 < cococo> anyone here want to collaborate with me to make a mobile game, I make the html5 game, the other person a node.js server... I dont have any money so, hope we can sells items games before 3 month
06:56 < cococo> no one interesting? :(
06:56  * ningu is boring
06:56 < r1card> ningu, I think saving disabled people out of pity is the wrong concept. 99% of disabled people can contribute a lot to society with a bit of help, and therefore no need to consider that we're going against evolution.
06:57 < r1card> ningu, it's about PoV sometimes.
06:57 < ningu> r1card: I would make the exact same argument about languages.
06:57 < ningu> it isn't out of pity.
06:57 < ningu> it's out of their value to humanity and science.
06:57 < ksmth> hey guys
06:57 < ckknight> hey ksmth
06:58 < r1card> ningu, as much as there is to learn, I think you overestimate the number of languages we need in order to contribute to science.
06:58 < ksmth> hey ckknight :)
06:58 < ksmth> I am trying to remember the name of an automated test runner supporting multiple browsers, started from the command line
06:58 < ckknight> cococo: as interested as I am in HTML5 development, it's obvious that English is not your first language and given that we'd be working closely, I'd much rather prefer to work with someone I could collaborate with on equal footing. Also, I lack the time.
06:58 < ningu> r1card: well, I've spent the last 10 years studying this question, actually. but I don't claim to have the final answer.
06:59 < r1card> ningu, oh there never is an answer.
06:59 < r1card> ningu, but even with no answers, sometimes we have to make choices ;)
06:59 < r1card> ningu, what have you studied?
06:59 < ckknight> let's go with Esperanto
06:59 < ckknight> Kiel vi fartas
06:59 < r1card> Esperanto has a fatal flaw.
06:59 < ningu> r1card: linguistics, specifically typology, and I've documented 4 languages that previously were poorly documented
07:00 < ckknight> r1card: gender?
07:00 < r1card> Hehe.
07:00 < r1card> ckknight, good designs co-evolve with reality, without this feedback it's not a design, it's just an art concept.
07:00 < ningu> r1card: my point is that some people have *better* answers since they've been studying the question.
07:00 < r1card> ckknight, so Esperanto is an art concept :P
07:00 < ckknight> r1card: good analogy
07:01 < ckknight> but I'd argue that organic language evolution doesn't always produce the best result
07:01 < ckknight> just a workable one
07:01 < r1card> ningu, I think your work is very important, and I love linguistics. As many I also loan Noam Chomsky and I love regular expressions.
07:01 < ningu> loan?
07:01 < ningu> I don't love Noam Chomsky, actually
07:01 < r1card> ningu, and I've learned a lot about the world from linguistics. So I'm definitely not discarding your studies.
07:01 < ningu> but that's a separate topic
07:01 < ckknight> we've all had to loan Chomsky money, ningu
07:01 < r1card> ningu, hehe, that's ok ;)
07:01 < ningu> haha
07:01 < greelgorke> mornin
07:01 < ckknight> he is a left-wing academic, after all
07:02 < ckknight> hey there, greelgorke
07:02 < r1card> ningu, but yet, even as I value linguistics, I don't value having several hundred languages to deal with.
07:02 < ningu> a lot of Chomsky's linguistic research in the 60s and 70s was funded by the defense department
07:02 < ningu> r1card: actually it's more like 6-8k
07:02 < r1card> ningu, there are, and I'll never adapt my apps for about 7.9k of them.
07:02 < ningu> r1card: anyway, I need languages like a biologist needs species, otherwise linguistics wouldn't exist :)
07:03 < r1card> ningu, so now you see how fragmentation hurts us
07:03 < jamesdotnet> Just to be safe, we should carve some modern-day rosetta stones and bury them in the deserts of the world. Or mass produce clay tablets.
07:03 < ningu> r1card: well, that's a totally separate question.
07:03 < ckknight> ningu: how many will be dead in 100 years?
07:03 < ningu> jamesdotnet: http://rosettaproject.org/
07:03 < r1card> ningu, well that was the entire point of me wanting to get rid of languages ;)
07:03 < r1card> ningu, to eliminate fragmentation.
07:03 < ningu> ckknight: good question. hard to answer, but I'd say a couple thousand at least.
07:03 < ckknight> ningu: I figured it'd be more like half
07:03 < jamesdotnet> D'oh/cool, that was going to be my pet project someday :)
07:04 < ckknight> I'm pulling that out of my ass, though
07:04 < cococo> ckknight english couldnt be a problem, when I am developing games for over 10 years
07:04 < ningu> ckknight: that's not a bad guess, actually. I'm putting it out of my ass too, because the numbers are hard to calculate
07:04 < r1card> ningu, I propose we move every language to "NewLanguage". For exampe, "NewFrench" is me speaking English with French accent.
07:04 < r1card> ningu jk :/
07:04 < ckknight> r1card: that sounds double plus ungood.
07:04 < r1card> ckknight, haha got me
07:05 < ningu> a lot of modern German accents are sort of like that, they're people speaking standard german with an accent originally derived from the local german variety which now may no longer be spoken much
07:05 < ningu> or may be spoken quite a bit depending on the variety
07:05 < ningu> ckknight: the reaason it's hard to predict is that human agency is involved :)
07:05 < cococo> take a look to my new account https://en.mochimedia.com/community/profile/animesonic
07:05 < r1card> ningu, do you know how I can see everyone will move to English?
07:05 < ckknight> the only language worth learning is 'Merican!
07:06 < r1card> ningu, it's about mindshare. Basically 99% of brands here and in Japan are written in Latin using English-like words. Even very local brands.
07:06 < ckknight> ningu: too true. The coming apocalypse surely won't help, either.
07:06 < r1card> ningu, maybe it's a shame, but a brand name in cyrillic looks stupid in Bulgaria.
07:06 < ckknight> r1card: that's just a quirk of Japanese culture. Not every culture is like that.
07:06 < r1card> ckknight, not just Japan. Many countries do it. Maybe it's funnier in Japan because of the Engrish.
07:06 < cococo> merican n.n
07:06 < ningu> r1card: yes, but English has only been in that position for about 100 years
07:07 < ningu> it isn't clear to me if it will continue although it does seem likely
07:07 < r1card> ningu, needs 100-200 more ;)
07:07 < r1card> ninegrid_, I think computers and Internet cemented the position of english.
07:07 < ningu> but I try to be careful about predicting the future
07:07 < ckknight> r1card: no, not 200
07:07 < ckknight> r1card: German was huge in the 1800s
07:07 < ckknight> it was the language of the intellectual
07:07 < ckknight> or maybe I'm thinking 1700s
07:07 < AAA_awright> What good solutions are there for fulltext and/or natural language indexing?
07:07 < r1card> ckknight, that's good. But English is the language of everything now.
07:07 < leichtgewicht> *giggle* you really think 99% of brands in japan are written in english? maybe the big ones :)
07:07 < r1card> Of course who knows.
07:07 < ningu> ckknight: nah, more like 19th and early 20th centuries
07:08 < ckknight> ningu: yeah, that sounds right
07:08 < r1card> If Hollywood keeps churning CGI-driven movies around the world, Murican will be "cool" for many decades to come.
07:08 < ningu> AAA_awright: solr, elastic search
07:08 < AAA_awright> Something that doesn't use Java?
07:08 < ningu> AAA_awright: good luck :)
07:09 < r1card> ningu, so why don't you like Noam Chomsky. Morale or scientific argument?
07:09 < cococo> english was push because EEUU holded the 50% of the world money, now, it is not, but with many people who learn english and ... internet, maybe in 200 years everyone will speak english
07:09 < ningu> you could try this python thing, what's it called...
07:09 < ningu> whoosh
07:09 < ningu> it's ok
07:09 < ckknight> yeah, English is only really prevalent due to the substantial wealth of English speakers
07:09 < ningu> r1card: nah, we could get into politics but I don't really care. I don't think his political views are particularly compelling but he isn't evil or anything.
07:09 < ckknight> if somehow that collapsed, for some reason, the world could be very different
07:10 < cococo> business, music, hollywood, internet, all that helps to english lenguage
07:10 < ningu> r1card: my real objections are entirely based on his linguistics
07:10 < r1card> ningu, what about his linguistics?
07:10 < ningu> r1card: http://www.umass.edu/preferen/You%20Must%20Read%20This/Evans-Levinson%20BBS%202009.pdf
07:10 < ningu> that would be a good place to start. it's a controversial paper, but I agree with most of it.
07:10 < cococo> ckknight can you show me your project web games? 
07:11 < r1card> ningu, don't forget he came up with the base upon which modern regular expression were invented. AND I LOVE REGULAR EXPRESSIONS ;)
07:11 < cococo> my friend n.n
07:11 < ningu> r1card: huh? he did?
07:11 < ningu> I love regular expressions too but that seems a bit off to me...
07:11 < r1card> ningu, yeah
07:11 < ckknight> cococo: sorry, the games I've made have been phone games thus far
07:11 < ckknight> the web ones I've done haven't been published.
07:11 < ckknight> I mostly do library work and boring business webapps
07:11 < ningu> r1card: Chomsky's earlier linguistic work was genuinely groundbreaking. but since the 80s or so I think his views have been a drag on the field.
07:12 < ningu> and his followers have a too ideological view of everything
07:12 < ningu> or did, anyway
07:12 < ningu> it's gotten a bit less insane
07:12 < ckknight> ningu: yeah, Chomsky discovered regular languages
07:12 < cococo> why dont you tried a multiplayer mobile game, comon, you know html5, game programming and node.js!
07:12 < ningu> ckknight: regular languages?
07:12 < r1card> ningu definitely he was more "innovative" in his earlier years.
07:12 < leichtgewicht> Arguably: We should all speak chinese from now on because the language with most native speakers is chinese ...not english.
07:12 < r1card> ningu, unfortunately it's often like that. Was even the case for Einstein.
07:12 < r1card> ningu, but he did good, when he did it :)
07:12 < ningu> leichtgewicht: if your goal is to communicate with the most # of people in the world, sure :)
07:13 < ckknight> ningu: http://en.wikipedia.org/wiki/Regular_language
07:13 < cococo> native speaker != general speaker
07:13 < cococo> n_n
07:13 < ningu> r1card: his first two books are pretty amazing. but his attitude has always been, if people disagree with him they should be eliminated.
07:13 < ckknight> leichtgewicht: it's about wealth, not about population. people aren't equal when it comes to language expression.
07:13 < r1card> ningu, so he's my kinda guy.
07:13 < ningu> and in many ways his views are quite narrow and often incomprehensible given what we now know about the brain. in the 50s and 60s it made sense.
07:13  * r1card eliminates competition
07:14 < cococo> they say eliminated but what they do is killing them
07:14 < leichtgewicht> ckknight: latin has been the elite language for centuries (millenia?) in europe
07:14 < ckknight> languages are only worthwhile based on the purchasing power of the person wielding it, as that is what drives human momentum
07:14 < ningu> ckknight: wow, I had no idea about any of this regular language stuff. cool.
07:14 < r1card> ningu, you know there's no end to knowledge right
07:14 < ckknight> leichtgewicht: sic
07:14 < ningu> I knew about chomsky's early work on context-free grammars but didn't know compsci people took it up
07:14 < r1card> ningu, we'll never have a complete theory of language or anything.
07:15 < adrivanrex> hi?
07:15 < ningu> r1card: maybe true. but linguists have to keep trying or they won't advance anything :)
07:15 < ChrisPartridge> AAA_awright: if you're using postgres, http://stuff.coffeecode.net/2012/pgopen_fulltext/pgsql-fulltext-intro.html
07:15 < penzur> holy kamoly!
07:15 < ningu> language is complex like the weather, it's hard to have a deductive theory of it
07:15 < ckknight> penzur: I should say
07:15 < cococo> I could kill to know how the asian write system was originaly made
07:16 < ningu> cococo: there are some good books on that
07:16 < r1card> ningu, so isn't it maybe ironic you say having 6-8k languages is good so we can study the 6-8k languages... but if we had 10 languages, ... the reason to study 6-8k languages ceases to exist, therefore realizing this need to study this variations was a bubble feeding on itself and not as necessary to the world as thought.
07:16 < ckknight> cococo: the myth of the chinese pictographs comes from the cracks that appeared on bones thrown into a fire.
07:16 < ningu> cococo: http://www.amazon.com/Visible-Speech-Asian-Interactions-Comparisons/dp/0824812077
07:17 < ningu> r1card: no, because if we just had 10 it wouldn't mean those 10 exhausted the space of possible human languages
07:17 < ningu> even those 6-8k surely do not
07:17 < ningu> but it's a bigger sample
07:17 < r1card> ningu, why should we exhaust the space of possible languages though.
07:17 < r1card> ningu, you can not exhaust it.
07:17 < r1card> ningu, there are infinite number of solutions here.
07:17 < r1card> ningu, and you see just 6-8k.
07:17 < ningu> r1card: because that's necessary if you want to understand what language is -- you need to understand what languages are possible.
07:17 < ckknight> the amount of possible languages is greater than the number of atoms in the universe
07:18 < ningu> and the more examples you have, the better you will able to delimit the range of what is possible
07:18 < ckknight> because it's a factorial problem
07:18 < ningu> r1card: the point is to find the regularities and patterns, not the total number
07:19 < r1card> ningu, ah, but here we disagree. I don't agree that accumulating knowledge on samples of a space necessarily leads us to better understand the fundamentals that form a space. Just like a hoarder collecting objects won't bring him any closer to understanding the universal laws of physics that these objects rely upon.
07:19 < ningu> having 10 languages is like a mathematical series where you only see the first two numbers and have to infer the rule
07:19 < ningu> r1card: well, yes, you can't just collect the languages, you need people studying them
07:19 < ningu> but they need something to study
07:20 < r1card> ningu, I think people confuse "cache" with "understanding" sometimes. They are related, and often intermixed. But not the same. 
07:20 < ningu> eh?
07:20 < r1card> ningu, cache is when you identify the happenstance in a language. It's perishable knowledge.
07:20 < r1card> It's "caching"
07:20 < TheAceOfHearts> so, I don't know if anyone remembers, but I  mentioned a few weeks back I was working on a laser tag system. the server uses nodejs and socketio, and it has an android app that pretty much connects the system with the server. http://www.youtube.com/watch?v=hs2FppfotFk&feature=youtu.be I put up a video. Speech is in Spanish but it's mostly self-explanatory. Links to all three repositories in the description as well. :P
07:20 < r1card> ningu, it's like collection of facts vs. wisdom.
07:21 < ningu> r1card: actually, those collections of facts can be deeply meaningful if you analyze them correctly
07:21 < r1card> ningu, we sometimes confuse knowing facts with wisdom I think.
07:21 < r1card> ningu, I agree. As I said, they're intermixed, and dependent on one another.
07:21 < ningu> the facts in themselves are not what's interesting
07:21 < r1card> ningu, but you need to always think "am I just caching here, or discovering"
07:21 < ChrisPartridge> TheAceOfHearts: awesome :D
07:21 < TheAceOfHearts> thanks :D
07:22 < TheAceOfHearts> it's just a prototype, so stuff screws up sometimes 
07:22 < ningu> r1card: fair enough. it's good to know what questions you want to answer, and that will help you decide what information to collect.
07:22 < ckknight> r1card: I find that people would be more than willing to trade wisdom for youth, though
07:22 < ningu> but you need information out there to collect in any case
07:22 < TheAceOfHearts> we built one gun and put it in an enclosure; but we don't have videos of it 
07:22 < r1card> ningu, have you heard this old joke "there are two hard problems in computer science: caching, naming, and off by 1 errors."
07:22 < ningu> nope
07:22 < ckknight> r1card: not caching: cache invalidation
07:22 < ningu> I'm a linguist, not a computer scientist :)
07:23 < r1card> ckknight, right ;)
07:23 < ckknight> caching is easy. invalidation is so damn hard to do right.
07:23 < r1card> ningu, well you're in Node.JS so you probably know naming classes/methods and cache invalidation is hard ;)
07:23 < ningu> I wonder if there's something out there called "cache me if you can"
07:23 < ckknight> ha
07:23 < ckknight> there better well should be, ningu
07:23 < r1card> ningu, I think the nugget of wisdom is it's the same with people.
07:24 < r1card> ningu, "naming" is classification. A crucial concept in linguistics. How we classify and frame things.
07:24 < r1card> ningu, and "caching" is perishable knowledge, which we don't know when to discard (invalidate).
07:24 < ningu> r1card: I don't think you should ever assume that you know all of what's important or wise or useful
07:24 < ningu> you might think knowledge should be discarded and later find out it was crucial
07:24 < ckknight> r1card: I hadn't heard that quote with the "off by 1 errors" part. I quite like that addition.
07:25 < r1card> ningu, yes but that's hoarder mentality
07:25 < r1card> ckknight hehe ;)
07:25 < adrivanrex> damn I forgot the owner of cube-space.net
07:25 < ningu> r1card: what's wrong with wanting to make it possible for future generations to ask questions that we haven't thought of?
07:25 < adrivanrex> anyone remembered?
07:26 < ckknight> so I'm working on a novel idea where part of it involves linguistics, since it takes place about 200 years from now on Mars. It's a fascinating thought experiment, but I don't want to confuse the reader too much.
07:26 < r1card> ningu, I think nature and life repeatedly reveals a principle to us. That you can't keep all that has value (or potential value) at the detriment of the system you're maintaining (of knowledge, platform, ecosystem, country, company, whatever)
07:26 < r1card> ningu, simplicity is the ultimate rule.
07:26 < ningu> ckknight: oh, you literally mean a novel. I was confused. :)
07:26 < ChrisPartridge> TheAceOfHearts: awesome stuff posting the schematics, i may have to put this together
07:26 < ckknight> ningu: yes, as in a thing people used to read before television was invented
07:26 < r1card> ningu, and simplicity requires abandoning things which may be useful, *and* simplicity requires sometimes reimplementing things you had earlier, but had to abandon.
07:27 < ningu> r1card: to me that seems extremely short-sighted. I don't assume that the system I'm maintaining is more important that all else in the world.
07:27 < TheAceOfHearts> hah, it's actually really simple; I might try using an ATmega and just making some really small and cheap guns with receivers
07:27 < r1card> ningu, isn't all human communication important :)
07:27 < TheAceOfHearts> but thanks :D
07:27 < ckknight> r1card: the future is in non-human communication
07:27 < r1card> ningu, simplicity... 
07:28 < ningu> r1card: I don't know.
07:28 < TheAceOfHearts> it took an absurd amount of time… too many hours
07:28 < r1card> ningu, simplicity trumps retaining value, it trumps fairness, it trumps all.
07:28 < ningu> some of the most meaningful experiences in my life have been learning to communicate with someone different from me
07:28 < r1card> ningu, the simplicity of death and offspring.
07:28 < [AD]Turbo> ciao all
07:28 < r1card> ningu, of course.
07:28 < ckknight> r1card: I think that's just an optimization issue. Optimization is very important in evolution, culture, knowledge, etc.
07:28 < r1card> ckknight, of course.
07:29 < ningu> I just think we should optimize not just for this year but for the future as well
07:29 < ckknight> that seems absurd.
07:29 < ckknight> the future doesn't even exist
07:29 < r1card> ningu, simplifications optimizes for the future in ways you can't even foresee ;)
07:29 < ningu> ckknight: what I mean is, we should not assume that what we're optimizing for now is all that will ever exist
07:30 < ningu> perhaps optimizing for the future is the wrong term
07:30 < ckknight> ningu: but what else are we to go on? sure we can predict what could happen, but massive changes could upend everything.
07:30 < r1card> ningu, in a way I think we both agree.
07:30 < ningu> ckknight: from the perspective of writing a program, yes
07:30 < r1card> ningu, species, languages, cultures are a treasure worth exploring.
07:31 < ckknight> ningu: I'm talking more like an industrial revolution
07:31 < r1card> ningu, but I just think this doesn't mean it's a baggage we need to carry forever.
07:31 < ningu> I'm talking about data that would be used in scientific inquiry
07:31 < ningu> we know now what data we want for an experiment, we can't predict as well what we might want tomorrow
07:31 < r1card> ningu, it's like those files you keep putting on your desktop and then move to a folder to "clean up later"
07:31 < ningu> but we *do* know now, most of the time, when we're destroying data
07:31 < r1card> ningu, because they are useful things.
07:32 < r1card> ningu, but then one day you delete them by accident.
07:32 < r1card> ningu, and you feel better, paradoxically.
07:32 < ningu> r1card: depends on the file
07:32 < r1card> ningu :)
07:32 < ningu> it's nice to have less to worry about
07:32 < ningu> that reminds me of another saying; "if ignorance was bliss, there should be a lot more happy people"
07:32 < r1card> ningu, indeed. Human focus and attention are very limited.
07:33 < r1card> ningu, sometimes smart people can handle complexity and they think "see I can handle it, so why simplify"
07:33 < ckknight> too much data is overwhelming
07:33 < ningu> r1card: this is not an argument against simplification, it's an argument against shooting yourself in the foot
07:33 < r1card> ningu, but then after simplifying, their focus diverts to things they never could notice before, because all their attention was focused on managing that complexity
07:34 < r1card> ningu, sure
07:34 < ningu> being a linguist (for example) is about *studying* complexity, not managing it
07:34 < r1card> ningu, but i wonder what discoveries would be made in cognitive science, if we didnt' care about documenting 8k language
07:34 < r1card> ningu, might be groundbreaking, who knows
07:34 < ningu> r1card: it isn't a zero sum game
07:34 < r1card> Maybe it is.
07:34 < r1card> Maybe it isn't.
07:34 < r1card> But if you can doubt... it's a good thing :)
07:35 < ningu> well, it seems rather pessimistic to assume that it is
07:35 < ningu> I mean, resources are limited, there are only so many funding agencies etc.
07:35 < r1card> ningu, well let me give another example to counteract your species example.
07:35 < r1card> ningu, do you know GitHub.
07:35 < ningu> sure
07:36 < r1card> Well GitHub hosts some amazing, very useful projects.
07:36 < ningu> but again these are engineering examples
07:36 < r1card> But it's 99.99% crap.
07:36 < ningu> we study natural phenomena to understand them
07:36 < ningu> we engineer technology to meet our needs
07:36 < r1card> Would you say documenting this crap that's on GitHub would make you a better programmer?
07:36 < ningu> they are two separate things
07:37 < r1card> I mean, how many examples of poorly written code you need to see on GitHub before you've seen enough ;)
07:37 < ningu> r1card: if my field of study was understanding code programmers write in the aggregate, I would need to study all of thsoe things on github
07:37 < ningu> however, if the goal is good code I suppose you can ignore most examples of bad code
07:37  * ckknight starts to publish bad code to github just to torment ningu
07:37 < r1card> ningu, I have a different strategy. Two-pronged. I study in two phases 1) Focused targeted studying of what seems interesting 2) Scattershot random sampling
07:37 < ningu> but we know what code is
07:38 < ningu> we even think we know what good code is
07:38 < r1card> ningu, (1) doesn't need explaining.
07:38 < ningu> in science by definition you don't know
07:38 < ningu> or you wouldn't be doing it
07:38 < r1card> ningu, and (2) is surprisingly good enough to account for the "whole"
07:38 < r1card> ningu, oh trust me my experience shows we have no clue what good code is :P
07:38 < ningu> r1card: you can only sample something you can define
07:39 < r1card> ningu, my point is, you don't need the whole, you need a "representative sample"
07:39 < r1card> ningu, maybe this can be a subject for a paper: collect smallest list of languages that are representative example of the 8k languages that exist.
07:39 < ningu> we can't take a proper representative sample of linguistic phenomena because we don't understand most of them well enough
07:39 < ningu> r1card: actually, it's the subject of many papers already
07:40 < ningu> there are ways to approximate a good sample, but none of the methods are very scientific
07:40 < r1card> ningu, well no representative sample is truly representative objectively. It's always based on the heuristics we know.
07:40 < ningu> samples can be good enough for a particular purpose today
07:40 < r1card> ningu, but even random scattershot sampling is better than studying it ALL.
07:40 < ningu> but you wouldn't want to assume they are good enough for all time
07:40 < r1card> ningu, imagine it like a log curve.
07:40 < r1card> 1 language = you've learned 60% of what you'll learn.
07:41 < r1card> 2 languages = 80%
07:41 < r1card> 3 = 85%
07:41 < r1card> etc.
07:41 < r1card> ningu, so question is, sure, you always learn more. But you'll never get to 100%
07:41 < ningu> r1card: maybe. that's possible. but it's really hard to know
07:42 < r1card> And is the effort worth it between 91.723537544% and 91.723537545%
07:42 < ningu> r1card: it's kind of beside the point though because we aren't anywhere close to that level. I might agree with you a little if it was documenting the last 500 languages or something
07:42 < leichtgewicht> r1card: Worth is subjective thus a more appropriate question would be: is it fun ;)
07:42 < ningu> but we aren't anywhere close to that point
07:43 < r1card> ningu, of course, I'm kinda pulling numbers from my behind but just illustrating a point :)
07:43 < ningu> r1card: also, we don't really understand the variation well enough to know whether a language is "worth" documenting or not
07:43 < greelgorke> this discussion is nice and good, but may be for an other chatroom? :) sry, just trying to keep up with ppl who have questions about node, but i'm to lazy to filter them out of offtopic :P
07:43 < r1card> leichtgewicht, you're quite right :)
07:43 < ningu> I mean, people make those statements all the time in grants, "I want to document this language because it's really special because ... "
07:44 < r1card> ningu, leichtgewicht, Feynmann said "There are results coming from sex, but that's not why we do sex. Same with physics."
07:44 < ningu> but ultimately it's hard to argue for that objectively
07:44 < r1card> greelgorke, ok :)
07:44 < ningu> I need to sleep soon anyway
07:44 < r1card> ningu, success with your studies :)
07:45 < ningu> hehe thanks
07:45 < Lorentz> wait until I complain about how unicode doesn't cover hangul/korean
07:45 < Lorentz> and I suspect many other languages
07:45 < Lorentz> and how it'll become obsolete in couple hundred years as languages change again
07:46 < ningu> Lorentz: unicode doesn't cover hangul??
07:46 < Lorentz> ningu: it covers modern rendition of it
07:46 < ningu> not really sure what you mean
07:46 < ningu> oh, ok
07:47 < Lorentz> if you're looking at hangul even couple decades old, there are plenty of instances where there's no such symbol that can describe it in unicode
07:47 < r1card> Lorentz, worry not, in 500 years we'll just go back to ASCII
07:47 < Lorentz> which you may think isn't a big deal, until you have to OCR old documents to be scanned in, or deal with family names
07:48 < ningu> Lorentz: I would be more concerned about the OCR actually working
07:49 < ningu> does Korean OCR work well?
07:49 < Lorentz> it does assuming modern hangul
07:49 < ningu> and is the issue you were talking about because the unicode codepoints don't exist or because the OCR software doesn't recognize the glyphs?
07:50 < Lorentz> unicode codepoint doesn't exist
07:50 < ckknight> that is surprising.
07:50 < ningu> so couldn't someone just make an OCR package with a custom font and use the PUA?
07:50 < ningu> not that that's a good solution, but ...
07:51 < Lorentz> custom font is meaningless when there's no char set to work on
07:51 < ningu> custom charset, hence the PUA :)
07:51 < Lorentz> there's euc-kr, and it comes some more
07:51 < Lorentz> but not all
07:51 < Lorentz> last I checked there's a translation table, but it doesn't map 1:1 due to missing codepoints
07:52 < ckknight> Lorentz: what about http://www.unicode.org/charts/PDF/UAC00.pdf ?
07:52 < Lorentz> http://en.wikipedia.org/wiki/Hangul#Letters
07:52 < Lorentz> see the obsolete letters
07:52 < Lorentz> ckknight: I've looked over, it doesn't cover obsolete letters
07:52 < ckknight> ah.
07:52 < Lorentz> and just because it's obsolete doesn't mean it's never used anymore
07:52 < Lorentz> and I'm just pointing out
07:53 < ningu> it isn't even that many, I'm surprised it hasn't been included
07:53 < Lorentz> the folly of some people who think they know even a bit about languages
07:53 < ningu> Lorentz: this is writing systems ;) 
07:53 < ningu> I would argue that languages are even more complicated
07:53 < Lorentz> of course they are
07:53 < Lorentz> but people can't even get the letters and symbols right
07:53 < ningu> hehe
07:54 < ningu> http://en.wikipedia.org/wiki/List_of_hangul_jamo
07:54 < ningu> some were added in newer unicode versions
07:55 < Lorentz> ah, but there's a catch
07:55 < Lorentz> that's just the glyph
07:55 < Lorentz> it's not actually usable without adding other glyphs
07:55 < ningu> what do you mean?
07:55 < r1card> One more reason for simplicity. You can't fit all hans on a keyboard.
07:55 < Lorentz> it's not like english where each "letter" comes together to make a word
07:56 < r1card> So keyboard entry for hans is kinda weird.
07:56 < Lorentz> that you see is a subdivision of a letter, in hangul it's made up of multiple glyphs
07:56 < r1card> If language was a technology choice in a company and I was the CEO of said company, English fits best all requirements.
07:57 < ningu> oh, so fonts have separate entries for each combination?
07:57 < Lorentz> you have to combine them to actually make a "letter"
07:57 < Lorentz> which is then represented as a symbol, codepoint in unicode
07:57 < buggy> hello folks, background: have worked with requirejs rails and backbonejs and haml coffee templates, now am trying to use backbone in node, i am not sure how to use a templating engine, anything will do, jade/hamlc, any pointers are appreciated?
07:58 < ningu> buggy: you are not sure *how* to do it or you don't know how to choose?
07:58 < buggy> i dont know how to use, choice would come after that :)
07:58 < Lorentz> anyway, enough ranting
07:58 < buggy> i would prefer haml coffee templates, since i have used those in rails world
07:58 < r1card> ningu, you know Unicode is like the Inception of encoding:    Bytes... form codepoints... form composable characters... form graphemes
07:59 < Lorentz> I wouldn't worry about it breaking anything you guys write or anything, but just saying
07:59 < ningu> r1card: hehe, yeah, but it does a fairly decent job
07:59 < ningu> it's a pain but less of a pain than the alternatives
07:59 < greelgorke> buggy: probably every major engine out there have usages docs :)
07:59 < ningu> however unicode in javascript is *really* a pain if you have to go outside the BMP
08:00 < ningu> then you can't rely on foo.length to be accurate
08:00 < Lorentz> frankly
08:00 < Lorentz> I just want a fixed-width hangul font
08:00 < Lorentz> for programming
08:00 < buggy> greel, yes have read those for past two hours, couldnt make sense
08:00 < ningu> why do you need hangul for programming... strings?
08:00 < Lorentz> only thing that seems to exist is unifont and that's terribl
08:00 < ningu> buggy: did you try any of the examples?
08:00 < greelgorke> buggy: why this?
08:00 < Lorentz> ningu: comments, documentation, website work, anything
08:00 < ningu> ah, ok
08:01 < ningu> so it's koreans coding, not just coding with korean :)
08:01 < buggy> would appreciate if you guys have any link that i can take a look at that would make sense
08:01 < ningu> https://github.com/visionmedia/jade
08:01 < adrivanrex> whats that?
08:02 < ningu> buggy: look under "public api"
08:02 < adrivanrex> I see
08:03 < adrivanrex> hey guys anyone have webdev prject?
08:03 < ningu> adrivanrex: all of us, probably
08:04 < adrivanrex> I need a job right now :(
08:04 < adrivanrex> anyway you can try my NodeCMS http://nodecms.cube-space.net:8081/
08:04 < adrivanrex> https://github.com/adrivanrex/NodeCMS
08:05 < adrivanrex> where can I find a job? :|
08:05 < adrivanrex> so broke right now
08:05 < paulkon> what's your background? what projects have you done?
08:05 < paulkon> whast experience do you have?
08:05 < adrivanrex> https://github.com/adrivanrex/NodeCMS <= this one? open source noDeCMS?
08:06 < adrivanrex> and also http://urfreecall.com
08:06 < adrivanrex> from scratch
08:06  * ningu notes randomly that Content Mismanagement System would also be CMS
08:06 < Stumbler> Curious if anyone knows off hand what happens if I read a file faster than it's being created…  Is that even possible with node?
08:07 < ningu> Stumbler: not sure, you might get an 'end' event
08:07 < paulkon> Stumbler: in a streaming scenario?
08:07 < adrivanrex> @stumbler of course, but you wont get the exact file
08:07 < ningu> Stumbler: you should look up a node implementation of tail -f
08:07 < Stumbler> well, I'm using a watcher to watch a folder that is populated with some rather large pdfs.
08:07 < adrivanrex> paulkon, hmmm?
08:07 < Stumbler> tail?  beautiful
08:08 < adrivanrex> really need a job right now
08:09 < ningu> https://github.com/forward/node-tail
08:09 < Stumbler> wow, thanks
08:09 < Stumbler> didn't expect that level of service :D
08:09 < ningu> Stumbler: well I don't even really know what you're doing
08:10 < paulkon> ugh, its written in coffeescript
08:10 < adrivanrex>  hey paulkon interested?
08:11 < Stumbler> Well, I'm attempting to watch a network folder for new pdfs, at which point I start converting it to tiff for immediate processing.  I notice that I get the added event before a large file has the chance to completely move to the folder, and didn't want to start processing it until I know it's done.
08:11 < ningu> hmmm
08:11 < ningu> and the thing adding them is not code you control?
08:12 < Stumbler> nope, it's a high speed scanner.
08:12 < Stumbler> somewhere deep in the bowels of an office building somewhere
08:12 < ningu> the tail module is meant for text files anyway
08:12 < Stumbler> the extra somewhere for added redundancy 
08:12 < ningu> but you might look at the code, if you can stomach the coffeescript ;)
08:12 < AAA_awright> I don't see why it should matter
08:12 < ningu> AAA_awright: well, it emits line events
08:12 < ningu> it might be ok
08:12 < AAA_awright> Oh.
08:13 < Stumbler> I mean, I could just add an arbitrary delay, but that doesn't seem quite solid
08:13 < ningu> but it's <100 lines
08:13 < ningu> so maybe best used as an inspiration
08:13 < AAA_awright> Stumbler: You should be using a lockfile
08:13 < ningu> but he isn't controlling the creation of the file
08:13 < AAA_awright> That's the only way to guarentee it, short of hooking into the kernel and looking for file handle events
08:14 < ningu> you could do a heuristic like, if the file has not been modified for x seconds
08:14 < Stumbler> I do know that my process will be the only thing to ever see these files, I just don't want to get ahead of the creation if the remote system hangs for any reason
08:15 < AAA_awright> Can't you do it incrementally?
08:15 < ningu> depends on the tiff conversion lib
08:15 < AAA_awright> I noticed these X bytes were added, so I'll parse them and append it to my parsed output
08:15 < AAA_awright> You'd need to maintain the state of the parsing operation somewhere too
08:15 < ningu> also that requires some way to handle when it's copied half a page
08:16 < ningu> i.e. you need to be able to parse pdfs
08:17 < AAA_awright> Stumbler: Really the filesystem wasn't designed for that task, that's up to a pattern like the lockfile, or a shared lock, or some protocol that operates on resources atomically like HTTP
08:17 < Stumbler> ooooor, just hit me-  if I flag the add event, and process that file when I receive the next add event, I'll know the file is complete.
08:18 < AAA_awright> Not necessarially
08:18 < ningu> what about the last one?
08:18 < AAA_awright> That too
08:19 < Stumbler> yea, well at that point I'm okay with an arbitrary delay, because the spooler will already be busy (I'm printing these after the processing)
08:20 < ChrisPartridge> coule do a few fs.stat calls, until the size stops changing, then process it
08:20 < ChrisPartridge> s/coule/could
08:20 < ningu> ChrisPartridge: yeah, but you have to decide how long is long enough
08:21 < Stumbler> that's the delema. heh. I really don't like the guesswork of this problem
08:22 < ChrisPartridge> Stumbler: who/what is creating the file?
08:23 < Stumbler> These files are generated by a scanner.  someone is manually scanning a stack of documents into a really long paged PDF
08:23 < Stumbler> the scanner automatically moves them to a shared folder on the network.
08:23 < Stumbler> and when I say manually, I mean they plop a stack of a hundred pages on the bed, and everything gets scanned in five seconds.
08:26 < ChrisPartridge> Stumbler: if it was me, i'd probably do fs.stat with setInterval, if the size doesn't change between 2 intervals, cancel the interval and process it. Not sure how efficient it would be, but probably better than an arbitrary timeout
08:26 < Stumbler> I agree that it's better than a timeout.
08:27 < greelgorke> there is also fs.watch, that emits 'change' events, if it helps
08:28 < greelgorke> you could just set up a timeout after every change for say 1 mniute and unwatch after it. reset on every change
08:28 < greelgorke> but watch has some issues
08:29 < Stumbler> yeah, I'm actually opting for chokidar, which seems to be a better option than the standard fs watch
08:30 < Stumbler> geese, why does it have to be on a shared resource… I could just watch the ftp log for a done entry XP
08:31 < ChrisPartridge> Stumbler: you're the one telling the story :P
08:32 < ChrisPartridge> complain to IT 
08:32 < Stumbler> lol
08:32  * ChrisPartridge is out
08:33 < ningu> I just was listening to a congressional hearing from today where I'm pretty sure Louie Gohmert said "he cast aspersions on my asparagus"
08:33 < Stumbler> I…. kind of want to try that now.
08:33 < Stumbler> Having my asparagus asperated.
08:36 < ningu> http://www.washingtonpost.com/blogs/compost/wp/2013/05/15/aspersions-asparagus-one-moment-from-the-holder-testimony/
08:37 < Gu_______> Guys, who is a very very well known developer here?
08:39 < greelgorke> Gu_______: thats quite offtopic
08:40 < Gu_______> I see
08:40 < ningu> also, you have a lot of underscores in your name
08:40 < Gu_______> Yes why do I
08:40 < Gu_______> it wont let me change it
08:43 < Stumbler> So, since this is my first visit to this room- I would like to know what the general mood here is like.  always serious?  Playful banter? strictly Q&A?
08:44 < goddard> im getting a error could not find glib-2.0
08:44 < goddard> i have it installed though
08:45 < greelgorke> Stumbler: a mix of it till a mod get's enough, then it turnes to voiceless silence
08:45 < greelgorke> always serious pplayfull q&a
08:45 < Stumbler> haha, okay, sounds like a typical chat then.  I don't know why I've never been here before
08:46 < goddard> Stumbler: probably because you are always stumbling around
08:46 < Stumbler> probably.. :\
08:46 < greelgorke> rule of thumb is: node-topics served first
08:47 < Stumbler> gotcha, so my tuna sandwich problem probably takes a fairly low priority.  guess I'll take a number.
08:47 < greelgorke> tuna sandwich... that reminds me, that my breakfast seems to be to low on nutrions
08:49 < Stumbler> Whats… break fast?  I never seem to get one of those.
08:50 < eighty4> mmm…. food… Soon time for lunch
08:51 < Stumbler> Well, you're clearly not in the yousah
08:53 < greelgorke> germany tbh
08:55 < Stumbler> nifty!  Its on my list of places To visit :D
08:55 < greelgorke> actually germany is a set of many places
08:56 < leostera> hey guys, did the latest npm version break everything for you as well?
08:56 < leostera> I did a sudo npm -g update and now I can't even npm
08:56 < Stumbler> oh god, I hope not >_>
09:00 < leichtgewicht> just updated npm global ... still works
09:03 < sbarow> npm still works for me too.
09:03 < greelgorke> leostera: just did npm update -g worked, nothing broke
09:44 < Stumbler> Of those who are still paying attention, and who are listening to music- Whatcha listening to?
09:51 < seismo> orning
09:52 < Stumbler> *tips proverbial hat to seismo*
09:53 < seismo> Stumbler: hat o ou ean?
09:54 < Stumbler> I was saying hello, in response to your greeting
09:55 < seismo> aye :)
09:55 < seismo> very polite
09:56 < Stumbler> :D  I try
09:56 < Stumbler> sometimes
09:56 < Stumbler> when I'm new to a community
09:56 < greelgorke> Stumbler: try with /me
09:56  * Stumbler slaps dead air with a dead fish
09:56  * greelgorke tips some keyboards, literally 
09:56 < ckknight> Appy-polly-loggies. I had something of a pain in the gulliver so had to sleep. I was not awakened when I gave orders for wakening.
09:56  * seismo tries /me too
09:57 < Stumbler> I get that problem all the time ckknight.  I always sleep through my alarm clock :\
09:57 < ckknight> that's a direct quote from A Clockwork Orange
09:58 < ckknight> given that seismo was speaking unintelligibly, I figured I'd throw some Nadsat in
09:58 < Stumbler> aaaooohhhh.   I forgot where my towel was for a moment, sorry 
09:59 < seismo> ckknight: would you be so kind to mark quotes as such in the future?
09:59 < Stumbler> (and indirect reference to the hitchhikers guide
10:00 < seismo> just posting quotes is very impolite
10:00 < seismo> i'll file a complaint
10:00 < ckknight> you do that
10:00 < ckknight> Stumbler: don't worry, I caught it ;-)
10:01  * Stumbler is gleefully satisfied
10:01  * seismo files a complaint
10:01 < seismo> done :D ... /me is like magic
10:02 < ckknight> don't make me get out my trout
10:03  * seismo takes away your trout and magically transforms it into a white bunny
10:03 < Stumbler> does midc still have that default?
10:03 < Stumbler> mirc*
10:04 < ckknight> I haven't used mIRC in forever
10:04 < Stumbler> me either, but that's as far back as I can trace the trout reference.
10:05 < Stumbler> It was setup under the /slap alias I think. lol
10:06 < SrPx> How do I make my own object an event emitter?
10:07 < ckknight> SrPx: EventEmitter2.call(obj)
10:07 < SrPx> ckknight: dude you are awesome.
10:07 < ckknight> ...no rebuttal
10:07 < SrPx> ); 
10:08 < SrPx> does that often work with any object?
10:08 < SrPx> Even if it's already instance of another class?
10:08 < ckknight> sure does
10:09 < ckknight> it's the mixin pattern
10:09 < ckknight> as long as the object's not frozen and not a primitive, should be fine
10:09 < greelgorke> ConstructorFunc.prototype = new EventEmitter() does inheritance thing
10:09 < ckknight> yeah, if you need the prototype chain like that, you could do it that way
10:09 < SrPx> ckknight: ... but I thought js's prototype didn't work like that, at all? 
10:10 < ckknight> SrPx: sure it does
10:10 < SrPx> I thought it was based on single inheritance
10:10 < ckknight> it is
10:10 < ckknight> single inheritance with mixins
10:10 < ckknight> mixins just copy properties over
10:10 < greelgorke> welcome to dynamic languages SrPx
10:10 < ckknight> no messing with the prototype chain
10:11 < ckknight> so you'd do EventEmitter.call(MyClass.prototype); to add it to a prototype of a class, or you can simply have MyClass.prototype = new EventEmitter2()
10:11 < greelgorke> this will do too: var myObj = new EventEmitter(); myObject.prop1 = function custom
10:11 < SrPx> greelgorke: no really, I've been coding in js for long, but I often make my objects like that: function myclass(extend){ pvt = 4; extend.public = 5; return extend; }; my_instance = myClass({})
10:11 < SrPx> I'v ebeen just avoiding js's n"new"
10:12 < greelgorke> ah you do the pseudo-class-thing
10:12 < SrPx> greelgorke: no, it's *actually* is the mixin pattern and I've been doing that because I thought js didn't work like thatl ol
10:13 < greelgorke> js can do many things... event many of them at the same time
10:14 < SrPx> anyway is there something wrong with what I'm doing?
10:14 < ckknight> new is a travesty.
10:14 < SrPx> pardon 
10:14 < ckknight> the `new` operator in JavaScript would have been better to not exist
10:15 < SrPx> ckknight: yea I find it horrible
10:15 < ckknight> and instead have functions handle their own object construction
10:15 < Jacoooooooooooob> Why?
10:15 < SrPx> yea!!!
10:15 < SrPx> so that's what I do. it's fine then?
10:15 < ckknight> Jacoooooooooooob: because it's worthless noise in the best case, and in the worst case, forgetting to use it or using it in the wrong place can cause issues.
10:16 < Jacoooooooooooob> ckknight: But you use it for certain cases anyway, so you should already know why you would need to include it anyway.
10:16 < Stumbler> I like to use new as an inflection towards an instance of a function object.  I think it makes my code a little more readable :\
10:16 < greelgorke> SrPx: there is nothing wrong with it, as long you stick with it. however in node you could just fine with constructors and prototypes, if you want inheritance.
10:16 < greelgorke> there is actually a simple wa to prevent the new issue :D
10:16 < Jacoooooooooooob> What issue, what have I missed :P
10:17 < ckknight> Jacoooooooooooob: it's worthless noise in the best case. I'm talking about language design, not the use of APIs.
10:17 < SrPx> greelgorke: but mixin = inheritance, just better 
10:17 < ckknight> SrPx: that's not true
10:17 < ckknight> sometimes it is
10:17 < ckknight> but not always
10:17  * SrPx actually finds the whole OOP thing insane, he can do everything using just hashes and functions. Why the hell people need to contamine languages with OOP
10:18 < Jacoooooooooooob> ckknight: I understand, but do you not like it because of how it is used?
10:18 < ckknight> JavaScript could have been easily designed without the `new` operator.
10:18 < greelgorke> SrPx: oop is sometimes better to manage statefull domains
10:19 < ckknight> Jacoooooooooooob: I think the lack of separation in user-facing JavaScript functions between [[Call]] and [[Construct]] is painful when compared to host objects that can do properly separate things, as well.
10:19 < SrPx> JavaScript could be easily designed without: var, new, throw, verbose function keyword, braces, statements... javascript is a minimalistic language that tries to borrow things from bad languages for no reason
10:19 < SrPx> greelgorke: explain?
10:20 < greelgorke> my do have functional langs like haskell constructs like Monads? 
10:20 < Jacoooooooooooob> srpx: That is true, but kind of a pointless topic, seen as it's a tad too late for a dramatic change now :P
10:20 < ckknight> exception handling is a nice paragidm.
10:20 < ckknight> paradigm*
10:20 < greelgorke> monads are there, because sometimes you have to handle mutable state somehow
10:20 < SrPx> Jacoooooooooooob: pointless topics have a point when you are awake for 24h bored in a restaurant alone ):
10:21 < greelgorke> oo is all about this: handle and mutate mutable state
10:21 < SrPx> greelgorke: monads in js? what
10:21 < Jacoooooooooooob> srpx: Love it :P
10:21 < ckknight> greelgorke: not always.
10:21 < ckknight> greelgorke: passing around immutable objects can be very handy at times.
10:21 < greelgorke> ckknight: but mainly
10:21 < SrPx> greelgorke: i think oo is all about encapsulating stuff and people think they need oo for that but they don't
10:21 < greelgorke> ckknight: i didn't doubed that
10:22 < Jacoooooooooooob> Anybody recommend a 'pretty' irc client? One that looks clean preferably.
10:22 < Jacoooooooooooob> Sorry to be off topic.
10:22 < SrPx> Jacoooooooooooob: #freenode people should know? I'm using colloguy and it's acceptable
10:22 < ckknight> Jacoooooooooooob: what OS?
10:22 < Jacoooooooooooob> Windows 8
10:22 < ckknight> I use Linkinus on OS X
10:22 < greelgorke> SrPx: oo is about binding primitive data to complex data and defining operation on the complex data
10:22 < Stumbler> Colloquy does the trick for me.. fairly minimalistic in design.. if a bit amateur.. still cleanly presented
10:23 < ckknight> hmm, sorry, I don't run IRC on my windows box
10:23 < ckknight> Jacoooooooooooob: oh wait, kvIRC is good
10:23 < ckknight> from what I remember
10:24 < Stumbler> SrPx: do the default 'leaving' and 'entering' sounds annoy you too?
10:24 < Stumbler> I haven't gotten around to changing them ye
10:25 < SrPx> greelgorke: wat
10:25 < SrPx> Stumbler: ... wat? /2
10:25 < SrPx> Stumbler: oh, I hear no sound from colloguy
10:25 < Stumbler> really?  Maybe it's just the mac version then
10:25 < greelgorke> SrPx: there is no standard definiton of object orientation :D
10:26 < SrPx> Stumbler, Jacoooooooooooob but I am on mac ..!
10:26 < Stumbler> @_@   <-- mind boggled emote
10:26 < Stumbler> *shrug*  
10:26 < Jacoooooooooooob> I have both a Mac and PC, however I would prefer to use my PC.
10:26 < Jacoooooooooooob> I use my mac for Node.js :P
10:26 < SrPx> Stumbler: ;x
10:27 < Stumbler> I use…. whatever, for… whatever
10:27 < Stumbler> don't really have a preference
10:27 < Jacoooooooooooob> Well, my PC cost me $4500, so I prefer using the most of it.
10:27 < Jacoooooooooooob> And my mac is a Macbook Pro 13", so it's not used much by myself.
10:28 < Stumbler> oooh hey, speaking of boxes.  Anyone got a linux distro they recommend for pure node development?
10:28 < ckknight> Jacoooooooooooob: how'd you manage to spend $4500?
10:28 < ckknight> Stumbler: Gentoo is my distro of choice, but I'm a bit of a nutter
10:28 < Jacoooooooooooob> ckknight: Web development :P
10:28 < Julius129> the company is buying me a Dell i7 3ghz 8GB ram, is that a good laptop by you guys' standards for VS2012 development
10:28 < ckknight> Jacoooooooooooob: no, I mean what is in your computer that makes it cose $4500?
10:29 < ckknight> Julius129: yeah, I'd say so.
10:29 < Jacoooooooooooob> ckknight: It's a hardcore PC :P
10:29 < Stumbler> I'm going to be developing on an old system, wanted to maximize my node's register time
10:29 < ckknight> Julius129: the more ram the better for VS2012
10:29 < ckknight> Jacoooooooooooob: I know. So is the one I built for far cheaper.
10:29 < Jacoooooooooooob> Stubler: That sounds like a good idea.
10:29 < Julius129> cool
10:29 < Jacoooooooooooob> ckknight: Specs?
10:30 < Jacoooooooooooob> Julius129: Sounds like a very very decent laptop :P
10:30 < Jacoooooooooooob> add 1 more very
10:30 < Julius129> yeah, im not paying for it :)
10:30 < Stumbler> I'll grab a copy of Gentoo and test it out.   I'll default to ubuntu if it doesn't work out… part of me wants to see how well I could tweak dsl for the job-  but that might be more of a headache than I realize
10:30 < Julius129> but i like my HP Elitebook more
10:32 < hitesh> hey guys .. I need some help with increasing the "Old pointers" and "Old data space" in v8 gc for my node process.  
10:32 < ckknight> Jacoooooooooooob: 512 GiB SSD, nVidia GTX 670, 32 GiB RAM, Intel Core i7 3770, and a 50" TV is the monitor
10:32 < SrPx> juliangruber: vs2012!? why !????
10:32 < hitesh> I give the option --max-old-space-size=3000 while invoking node process
10:32 < juliangruber> SrPx: you got the wrong guy
10:32 < ckknight> Stumbler: Gentoo is hard, but there's generally people willing to help.
10:33 < SrPx> juliangruber: very similar nick sorry.
10:33 < Jacoooooooooooob> ckknight: I'll compile my part list :P
10:33 < ckknight> juliangruber: how could you use VS2012?
10:33 < ckknight> jeez
10:33 < Jacoooooooooooob> ckknight: Just trying to find it :P
10:33 < hitesh> But that increases mostly "Large object space" in node gc, leaving the "Old data space" and "Old pointers" still low . 
10:33 < juliangruber> ckknight: happens all the time
10:33 < SrPx> ckknight: yea, how could him!?
10:33 < ckknight> Jacoooooooooooob: mine ended up costing $1750 a little less than a year ago
10:33 < Jacoooooooooooob> ckknight: Convert it into NZD while im finding my specs :P
10:34 < Julius129> haha guys, VS2010/12 is a good productive tool, i used to hate microsoft until i had to start paying bills
10:34 < ckknight> Jacoooooooooooob: you're a kiwi?
10:34 < Stumbler> ckknight: Still looks right up my alley. if nothing else, I'll learn how to use it off the clock and adapt it for my flavor of node development :D
10:34 < ckknight> that explains it.
10:34 < Jacoooooooooooob> ckknight, :P
10:34 < ckknight> Jacoooooooooooob: I used to be, but I've learned the error of my ways. I'm a red-blooded American now.
10:35 < Jacoooooooooooob> ckknight, Used to be... what?
10:35 < ckknight> Jacoooooooooooob: my father's a Kiwi, so I got citizenship there a while ago
10:36 < Jacoooooooooooob> ckknight, Oh nice! I'm british, but moved to NZ 6 ish years ago.
10:36 < Stumbler> you think vs is bad?  I got roped into a monolithic real basic project recently…   ten years of legacy, I wanted to shoot myself before I got the okay to rebuild it.
10:36 < ckknight> VS is pretty nice, actually.
10:36 < ckknight> there's a reason it's so popular.
10:39 < Jacoooooooooooob> ckknight, Do IRC people hate 'multi posts'?
10:39 < ckknight> what's that?
10:40 < Jacoooooooooooob> Like forum double posting, but on IRC
10:40 < ckknight> ah, yes, for the most part
10:40 < ckknight> depends how long it's been
10:40 < Julius129> anyway guys, i see that the latest tv's have PC resolutions, do they work well as screens especially for development work??
10:41 < ckknight> if there's been a full discussion in-between or at least an hour wait, I'd say it's fine
10:41 < Jacoooooooooooob> Intel Core i7 3770K Ivy Bridge 3.5GHz
10:41 < Jacoooooooooooob> , 16GB DDR3 2400MHz
10:41 < Jacoooooooooooob> , NVIDIA GeForce GTX 680 Classified
10:41 < Jacoooooooooooob> , Samsung 128GB SSD 840 Pro
10:41 < Jacoooooooooooob> , 2x 2TB Western Digital Caviar Black
10:41 < Jacoooooooooooob> , Corsair H100, ASUS P8Z77-V-Deluxe
10:41 < ckknight> Julius129: yeah, it's pretty snazzy. I use my PC as a media center, gaming machine, and dev box.
10:41 < Julius129> ckknight do you have one of those LG smarttv's?
10:41 < ckknight> Julius129: granted, when I do dev, I sit with a chair in front of it and have the screen taking up a huge part of my field of view
10:41 < ckknight> nah
10:42 < Jacoooooooooooob> Sorry for the new lines :/
10:42 < ckknight> just a regular LCD one
10:42 < Julius129> 1920x ?
10:42 < ckknight> yeah, 1080p
10:42 < Julius129> these fresh new lg ones kick ass
10:42 < Julius129> but i want to test it with VS2012 first
10:42 < ckknight> Jacoooooooooooob: honestly, there's still no good reason that it cost as much as it did. Does the shipping to NZ cost that much or something?
10:42 < Julius129> i want to read as good as a pc screen
10:43 < ckknight> Julius129: it works great for me.
10:43 < Julius129> my 3 year old lcd screen just sucks
10:43 < Jacoooooooooooob> ckknight, I got a monitor too, cannot remember how much that was.
10:43 < Julius129> tv* screen
10:44 < Jacoooooooooooob> ckknight, I got all the parts locally.
10:44 < ckknight> Jacoooooooooooob: hmm. mine was all shipped from Amazon.
10:45 < Jacoooooooooooob> ckknight: I'm all about locally buying stuff, idk why, means I can rage IRL at somebody :P
10:45 < ckknight> efficiency and cost beat out human contact in my book.
10:46 < Jacoooooooooooob> ckknight, I guess, but I didnt have to wait for shipping, which was very useful, but I agree with you, probably could have been cheaper, but I didnt even hit my budget :P
10:46 < ckknight> fair enough.
10:48 < Jacoooooooooooob> ckknight, What do you use Node for, personally?
10:49 < ckknight> Jacoooooooooooob: webapps, command line scripts, and libraries. Mostly I've been focused on my GorillaScript language.
10:49 < ckknight> recently, that is
10:50 < ckknight> Jacoooooooooooob: yourself?
10:50 < Jacoooooooooooob> ckknight, Gs looks really neat, nice job!
10:51 < ckknight> Jacoooooooooooob: I'm more than happy to take any suggestions you have, even for minor stuff and especially for documentation-related stuff.
10:51 < Jacoooooooooooob> ckknight, I've only recently been using Node.js, I have known about it, but not about its awesomeness!
10:51 < Jacoooooooooooob> ckknight, Sure, maybe when im not so tired :P
10:51 < ckknight> it's pretty great when you figure out the whole async pattern and it all just clicks and it's so obvious
10:53 < Jacoooooooooooob> ckknight, Yeah, I've been learning/keeping up with/developing in Javascript for 8 years already, so using Node.js wasnt really a hassle at all.
10:53 < ckknight> yeah
10:53 < Jacoooooooooooob> So awesome!
10:53 < Jacoooooooooooob> :P
10:53 < ckknight> also, that JavaScript has developed to a point where it's actually viable on the server side is pretty great.
10:54 < Jacoooooooooooob> absolutely, seeing it evolve over the years is really rewarding.
10:54 < Bubo> Hi
10:54 < Jacoooooooooooob> hey Bubo!
10:54 < ckknight> Bubo, my nemesis
10:54 < Jacoooooooooooob> xD
10:54 < Bubo> oO
10:55 < ckknight> come to finish the job, have you?
10:55 < ckknight> well have at you!
10:55  * ckknight swings his sword wildly
10:55 < Bubo> so, I would like to make myself a rss reader
10:56 < Bubo> any ideas where to start?
10:56 < ckknight> hmm
10:56 < ckknight> single-user or multi-user, Bubo?
10:56 < Bubo> ckknight: sorry, we'll fight some other time!
10:56 < Jacoooooooooooob> So you know how RSS works? Maybe start there :P
10:56 < Bubo> just for me ckknight.. maybe a friend or two
10:56 < ckknight> alright, let's assume multi-user, then
10:56 < ckknight> safer
10:56 < greelgorke> Bubo: open an editor of your choice
10:56 < Stumbler> ckknight: What is the purpose of GorillaScript?  What problem are you aiming to address with it?  (never seen it before, so an initial glance at your sorceforge doesn't make it clear)
10:57 < Jacoooooooooooob> It's on github isnt it?
10:57 < ckknight> Stumbler: github, not sourceforge.
10:57 < Stumbler> http://gorillascript.sourceforge.net/about.html   Not you?
10:57 < ckknight> oh, no
10:57 < Jacoooooooooooob> Not him
10:57 < Jacoooooooooooob> Check the date :P
10:57 < ckknight> http://ckknight.github.com/gorillascript/
10:59 < Stumbler> hehe, your initial description of type coercion reminds me of the rabbit hole that is floating point comparison
10:59 < gildean> you shouldn't pick names that are already used in a somewhat similar way
10:59 < Bubo> So how does RSS work exactly? Do you parse the contents from the rss feed? Like direct html parsing or how? I can't seem to find a good tutorial on it
11:00 < Jacoooooooooooob> Bubo, Take an RSS feed's raw data, its very self explanitory.
11:00 < Jacoooooooooooob> Probably the best way to learn.
11:00 < Bubo> Ok, I'll try
11:01 < Bubo> https://news.ycombinator.com/rss - yeah..
11:01 < ckknight> it does a few things for the user: it makes common mistakes error as soon as possible in development time so they don't happen at production time and screw up everything. This includes simple things like operator type checking (see "use restrict"). It prevents you from using certain warty parts of JavaScript like the with statement (though provides a nicer alternative), and forces you into strict mode. It also provides a 
11:01 < ckknight> Stumbler: ^--
11:02 < Jacoooooooooooob> Bubo, view the raw sourse, the browser renders it differently because it uses XML like qualities.
11:02 < Jacoooooooooooob> source*
11:02 < Bubo> Ah, I see now. Nice
11:02 < Bubo> thanks Jacoooooooooooob
11:02 < Jacoooooooooooob> Bubo, No problem bro :)
11:03 < ckknight> Stumbler: oh, I also recently added Promises/A+ support as first-class syntax.
11:03 < Jacoooooooooooob> ckknight, I like what you're doing with your project and I wish you the very best of luck.
11:04 < ckknight> *thumbs up*
11:05 < Jacoooooooooooob> I have to go, but thanks for the chat ckknight, will I see you again on #Node.js?
11:05 < ckknight> I'm in a bunch of channels
11:05 < ckknight> but yeah
11:05 < Jacoooooooooooob> Sweet, ill join your project channel too :P
11:06 < leichtgewicht> Some thoughts just popped up regarding module.extensions. I know its "bad" but I still wonder how integration with other systems could be done easier.
11:14 < leichtgewicht> And the thought that pops up is require() -> checks in package.json -> "extensions" for node packages like -> {"coffee": "coffeescript"} -> and loads the module from package.json["dependencies"]["coffeescript"] -> checks the coffeescript's package.json extensions property -> "compile.js" -> loads the module -> calls .compile(inputFile, inputFilePath)
11:14 < leichtgewicht> sorry: the coffeescript's package.json property should be "extension-support"
11:14 < ckknight> ooh, I need to add that to GorillaScript
11:15 < ckknight> leichtgewicht: any documentation on this?
11:15 < leichtgewicht> ckknight: That is an idea for a new implementation...
11:15 < ckknight> oh
11:15 < leichtgewicht> Current implementation is deprecated.
11:15 < ckknight> well, I'm interested in participating in the discussion, as someone affected by it
11:16 < leichtgewicht> in my thinking: if someone wants to use a different precompiler: he just has to use npm install coffeescript
11:16 < leichtgewicht> The version is noted in the dependencies.json
11:16 < ckknight> that would be ideal
11:16 < leichtgewicht> correction: in the package.json dependencies
11:17 < ckknight> yeah
11:18 < Bubo> How to handle user registration and login in Node.js? Any package that does it easily?
11:18 < ckknight> leichtgewicht: I really wish there were a way to support async compilation gracefully, but that's likely never going to happen given the synchronous nature of require.
11:18 < greelgorke> then you have to deps, both relating to cs, but one on version x and another version y, which both are not compatbile to each other. resolve that
11:19 < leichtgewicht> each dependency has a different version in the package.json
11:19 < leichtgewicht> so you load different compilers for the different dependency.
11:20 < ckknight> leichtgewicht: hmm...
11:21 < ckknight> leichtgewicht: assuming it would do that in a separate process or something, that'd be fine, but I'd be worried if I had multiple versions of my compiler going, since some stuff is cached between compilations.
11:21 < greelgorke> each dependency can compile it self right now, without npm or require.extensions
11:21 < greelgorke> the whole complaint about extensions, is about development ease
11:21 < ckknight> although if someone were to do "whateverlang": ">=1.2.3", rather than a specific version, you could just always use the latest
11:22 < ckknight> so it's not a huge deal
11:22 < leichtgewicht> ckknight: Where do you cache the suff ?
11:22 < circ-user-o1FPB> hiiiiiiiiiii
11:22 < leichtgewicht> greelgorke: package developers are developers too...
11:23 < adrivanrex> hi
11:23 < ckknight> leichtgewicht: in a variable that is in-scope as long as a reference to the package is kept.
11:24 < ckknight> leichtgewicht: there's a prelude which is compiled once and then used repeatedly, wouldn't want to recompile for every single file.
11:24 < ckknight> ends up being a big AST blob
11:24 < Bubo> is http://passportjs.org/ good for authentication?
11:24 < leichtgewicht> ckknight: Don't see the problem: you load multiple compilers in sandboxes.
11:25 < ckknight> leichtgewicht: and they'd each have to recompile the prelude, wasting CPU effort?
11:25 < leichtgewicht> ckknight: yes.
11:25 < ckknight> leichtgewicht: but if the same version were requested, would it be able to reuse the package or is it a fresh slate every time?
11:26 < leichtgewicht> ckknight: sure
11:26 < leichtgewicht> ckknight: reuse
11:26 < ckknight> okay then.
11:27 < leichtgewicht> Well: that was my first attempt to this.
11:28 < ckknight> I like the idea
11:28 < ckknight> just trying to nail things down
11:29 < ckknight> as it stands, to get .gs files working with require, the user has to first require('gorillascript') or run their app with `gorilla` off-the-bat
11:29 < ckknight> I think coffeescript does the same
11:30 < leichtgewicht> not require!
11:30 < leichtgewicht> npm install gorillascript
11:30 < leichtgewicht> npm addextension gs gorillascript
11:30 < leichtgewicht> or npm install gorillascript -e
11:30 < leichtgewicht> (-e could be default?)
11:30 < joeytwiddle_> GS looks interesting.  i'm trying to get into Opalang just now, but rather confused
11:31 < Stumbler> ckknight: have you ever used lisp?
11:31 < ckknight> Stumbler: yes, GS is very LISPy in its backend
11:31 < leichtgewicht> But: This is a very complex solution to the problem....
11:31 < ckknight> it just happens to not use as many parentheses
11:32 < ckknight> joeytwiddle_: Opalang?
11:32 < greelgorke> leichtgewicht: a gotcha in your plan is: npm does nothing with node.js module system
11:32  * ckknight checks
11:32 < Stumbler> neat,  Just curious, you seem to have a good grasp of language, wanted your opinion on wether or not I should pick it up as a hobby
11:32 < leichtgewicht> greelgorke npm modifies the package.json and package.json does something with the node.js module system.
11:33 < Stumbler> I realize now that it was a very off topic question, forgive me! XD
11:33 < ckknight> Stumbler: it's useful to know LISP as a way of understanding a whole slew of problems in a clearer way.
11:33 < leichtgewicht> greelgorke: oops: my mistake :-)
11:33 < greelgorke> the only thing that the module system doas with package.json is to look up the main field to find an entry point before falling back to indef.js
11:34 < leichtgewicht> greelgorke: right now: yes.
11:34 < leichtgewicht> but you are right: it doesn't do much.
11:34 < joeytwiddle_> I was looking for compile-to-JS languages, with strict type checking.  HaXe was interesting.  But Opalang looks nice because it can easily consume JS libraries, and simplifies DB integration and async
11:35 < sambarino1> joeytwiddle, why not just use typescript?
11:35 < joeytwiddle_> cos M$ made it :D
11:35 < ckknight> joeytwiddle_: GS has optional typing, but the compiler needs to be a bit more fleshed out so that you can actually prevent errors at compile time rather than runtime. It's in the plans.
11:36 < sambarino1> it's probably the best thing M$ ever released
11:36 < adrianlang> I’d take TypeScript, too
11:36 < joeytwiddle_> hehe yes could be
11:37 < greelgorke> hum, there are other non-blocking-i/o plattforms out there, which is not using javascript at all... just stick with them, if js sucks for you ;)
11:37 < ferno> Hi, I'm having some trouble making GET requests to a nodejs instance running an http server on the same machine.
11:38 < joeytwiddle_> ckknight: the approach of Opa and Roy seems to be a bit like duck-typing; not specific classes, just checking enough properties are available to satisfy requirements.  I'm sure you're understanding it better than me anyway :)
11:38 < ferno> I have multiple websites running on node on one box, and am using 'bouncy' to proxy requests to the servers depending on the hostname.
11:38 < ferno> From the outside, GET requests to a site work fine, but not from the server itself.
11:38 < ckknight> joeytwiddle_: yeah, that's really the best case one can do for JavaScript outside of the primitives, I'd say. I mean, sure you can check instanceof, but that's kinda hackish for other reasons.
11:38 < greelgorke> ferno: how do you request and how do you bind your server?
11:39 < ferno> I'm using express, listening for HTTP requests on a specific port
11:39 < ferno> Bouncy is handling SSL, so the websites appear to be on HTTPS from the outside.
11:39 < ckknight> joeytwiddle_: in GS, say you had a function let f(x as { next: Function }) ->, it would verify that x has that shape.
11:39 < ferno> I used http.request() and http.get(), then resorted to using the request module, which works from the outside.
11:40 < ferno> Certs are self-signed as well.
11:40 < ferno> I'm receiving an ECONNREFUSED error.
11:40 < greelgorke> how do you bind your server?
11:40 < ferno> app.listen() ?
11:40 < greelgorke> with which arguments
11:40 < greelgorke> ?
11:41 < joeytwiddle_> "shape" sounds great :)
11:41 < ferno> None, just a port #
11:41 < ferno> http.createServer(app);
11:41 < ckknight> joeytwiddle_: that is the proper term in type terminology :P
11:41 < ferno> Then I call a .listen(port#) on the server
11:41 < ferno> All requests from the outside work fine, just not internal ones from the same machine.
11:42 < greelgorke> and which host are you using in the client request?
11:42 < ferno> The public hostname, a .com
11:42 < ferno> https://, boucny routes that to the proper port.
11:42 < ferno> I assume bouncy is not handling internal requests, which would explain the issue.
11:43 < ferno> How can I get it too though? :D
11:43 < Bubo> Any good node.js xml parsing module?
11:43 < greelgorke> if you're using the public name, then on request it is resolved to the public ip. sometimes this can cause troubles
11:44 < greelgorke> but it depends on your network setup :P
11:46 < ferno> Right, got it to work :) Bouncy wasn't doing its job, so I manually specified the correct port # and took off the https:// part
11:46 < ferno> Thanks for the help, hah.
11:59 < lethalduck> Any one know of any pan tilt zoom libraries or code I could use to pan, tilt and/or zoom a short video clip?
12:04 < swapnilsarwe> i am looking for the module in node.js to parse an XML, is there any good stable module with no memory leaks which can be recommended
12:05 < swapnilsarwe> basically i need XML to JS array convertor
12:09 < swapnilsarwe> Anybody there ?
12:10 < pachet> it's early in the states :[
12:11 < swapnilsarwe> ok
12:11 < Bubo> Error: Failed to lookup view "[object Object]"
12:11 < Bubo> any idea what can cause this?
12:12 < ckknight> you're passing in an object where it probably expects a string
12:12 < Bubo> how do I make the object a string?
12:12 < Bubo> toString() ?
12:12 < Stumbler> *nod*
12:13 < greelgorke> Bubo: just post the source line
12:13 < ckknight> Bubo: you should really check the stacktrace and find the real issue.
12:14 < Bubo> i dont understand node.js stacktraces.. 
12:14 < ckknight> well that's where you start.
12:14 < Bubo> http://dpaste.com/1167274/ my code
12:14 < gildean> Bubo: no, object.toString() results in '[object Object]'
12:14 < Bubo> http://dpaste.com/1167275/ stacktrace
12:15 < gildean> Bubo: you're trying to render some parsed string?
12:15 < Bubo> result is an Object
12:15 < gildean> Bubo: and you're using express?
12:16 < greelgorke> res.render expects the view filename as first param
12:16 < Bubo> yes
12:16 < greelgorke> result.toString() is not a filename
12:16 < Bubo> Ah. yes
12:16 < Bubo> oh god
12:16 < gildean> Bubo: try res.json(result)
12:16 < Bubo> yeah, that works great
12:17 < Bubo> thanks
12:18 < gildean> np
12:22 < swapnilsarwe> i am looking for the good stable XML parser in nodejs, i used to use node-expat but it is not supported for newer stable versions of nodejs, so looking for an alternative
12:26 < greelgorke> swapnilsarwe: look here https://npmjs.org/search?q=xml
12:28 < greelgorke> this seems quite popular https://npmjs.org/package/xml2js
13:06 < jhsto> is there a way to rename my npm account name?
13:11 < greelgorke> jhsto: option 1: contact isaac or some other folks. option2: create new one, switch ownership of your packages to the new account, delete old account
13:12 < jhsto> greelgorke: thanks, ill try to do the second option
13:14 < Xehanort> Hi everybody
13:14 < Xehanort> Why in this example line 5 return "5" and not "8" => http://jsfiddle.net/Haeresis/EXxLL/
13:15 < Xehanort> it's like line 4 doesn't exist.
13:16 < Xehanort> it's as if the line 4 doesn't exist *
13:16 < greelgorke> because 
13:16 < greelgorke> var five is a primitive number
13:16 < Xehanort> yeah it's right
13:17 < Xehanort> but to line 4 it's convert to object (new Number(five))
13:17 < greelgorke> when you use it as object, the js engine boxes it to a Number object, attaches new property to this object, and ten it unboxes it bat to the primitiv
13:17 < greelgorke> so next time you try to access your new property it boxes it to a new fresh number
13:17 < Xehanort> and in line 1 I add "three" property to Number
13:18 < Xehanort> ho okay
13:18 < greelgorke> it casts it
13:18 < greelgorke> var five = new Number(5) makes your code run as expected
13:19 < ckknight> ew
13:19 < Xehanort> okay
13:19 < ckknight> Xehanort: please don't box primitives
13:20 < ckknight> Cthulhu gets angry when primitives are boxed
13:20 < Xehanort> transformation is ephemeral, just the time to read the line okay
13:20 < ckknight> but why would you ever want to put a property on a number?
13:20 < Xehanort> okay. But in the engine, at a little moment in my code "five.three = 3" work this my first line ?
13:20 < greelgorke> so in your first code the boxed object on line 4 is different from the boxed in line 5
13:21 < Xehanort> and just after it's discard
13:21 < Xehanort> ?
13:21 < ckknight> yes, why not use any other object?
13:21 < Xehanort> ho, it's just a test
13:21 < Xehanort> Just for understand
13:21 < ckknight> I see.
13:21 < Xehanort> mechanism
13:21 < greelgorke> >> 5 === 5
13:21 < purr> greelgorke: (boolean) true
13:22 < greelgorke> >> Number(5) === Number(5)
13:22 < purr> greelgorke: (boolean) true
13:22 < ckknight> well, yeah, you should never do it, but Object(5) or new Number(5) boxes it up, allowing you to stick properties on it. It also doesn't act like a primitive number in a lot of ways after that.
13:22 < Xehanort> with new Number(5) <= I explicitly box my type Number that why it's not discard line 4 ?
13:22 < Xehanort> If I understand well
13:22 < greelgorke> with new you don't box, you create a new object permanently
13:22 < Xehanort> ok
13:23 < greelgorke> >> new Number(5) === new Number(5)
13:23 < purr> greelgorke: (boolean) false
13:24 < greelgorke> what happens at boxing: 
13:24 < greelgorke> >> var five = 5; new Number(five).three = 3; 
13:24 < purr> greelgorke: (number) 3
13:24 < greelgorke> >> five
13:24 < purr> greelgorke: ReferenceError: five is not defined
13:25 < greelgorke> harr
13:25 < Xehanort> var five = new Number(5); <= I create a new object
13:25 < greelgorke> yes
13:26 < Xehanort> var five = 5; five.three = 5 (is equivalent to (new Number(five)).three) <= and engine boxed into an object
13:26 < Xehanort> In first case it's permanent and in second it's just for the line ?
13:26 < greelgorke> not for the line. only for the access of the property
13:27 < Xehanort> if I understood everything
13:27 < Xehanort> yeah
13:27 < Xehanort> when engine read five.three (the dot)
13:27 < greelgorke> yes
13:28 < greelgorke> when you use a primitve as object
13:28 < Xehanort> thanks a lot greelgorke
13:28 < greelgorke> if you inted to use a Number as object all the time, then you probably should create it as object
13:29 < greelgorke> intend*
13:29 < Xehanort> okay, I would try to transform the NaN output into 8
13:29 < Xehanort> just for test
13:30 < Xehanort> and I had 5 (oops, I don't understand everything) :D
13:30 < Xehanort> And I read in an article {} and [] were primitive. It's false ? Ilt's Object type and Object (Array) type ?
13:31 < Xehanort> it's JSON form, serialised form
13:31 < greelgorke> try this: http://eloquentjavascript.net/
13:31 < Xehanort> The author wrongly right?
13:31 < greelgorke> {} [] are just literals, they are not primitve
13:31 < nerph> needing to use node.js to connect to mssql, what's the most stable driver on npm?
13:32 < Xehanort> It's a good book ?
13:32 < greelgorke> i think
13:32 < greelgorke> it's recomended often
13:33 < Xehanort> My problem with books about JavaScript is that it is too oriented web and not enough precise in the mechanism
13:33 < greelgorke> just try it, it's free
13:35 < Xehanort> Thanks
13:36 < Xehanort> the question of nerph also interested me
13:37 < Xehanort> I'm interested to use this : http://nodejsdb.org/db-mysql/
13:38 < Xehanort> It reminds me of Linq but it has probably nothing to do
13:40 < circ-user-p61En> hi
13:40 < adrivanrex> hi?
13:40 < adrivanrex> I'm looking for the owner of http://cube-space.net:
13:41 < adrivanrex> I forgot his name
13:53 < thomaschaaf> Hi I am trying to use http.request to request a file. Now sometimes I have connection errors and the error event doesnt fire. how do i find out whether the request was actually successful?
14:00 < nerph> xehanort: had to step away… anyone respond?
14:01 < therealkoopa> Is it a crazy idea to use nginx in front of ploy? I'd like to use ploy for deployment, but already have nginx setup for the proxy, and ploy seems to do everything with bouncy
14:01 < nerph> needing to use node.js to connect to mssql, what's the most stable driver on npm?  Sorry for the repost, had to step away for a bit...
14:03 < greelgorke> thomaschaaf: there are 2 things that can fire error events: the ClientRequest (returned by the request call) and the IncomingMessage, that is the object you get passed to your handler
14:05 < greelgorke> nerph: https://github.com/WindowsAzure/node-sqlserver this ones is from microsoft itself
14:08 < marshall> hey node
14:09 < marshall> how do I get coffeescript to ignore my .coffee.swp tempfiles from vim?
14:15 < pachet> marshall what command is compiling the coffee files
14:19 < mattrichards> Anyone got any ideas on this one? http://stackoverflow.com/questions/16589752/angular-js-http-post-typeerror-cannot-read-property-data-of-undefined
14:21 < leichtgewicht> http://www.aiseikai.or.jp/
14:21 < leichtgewicht> This is a serious site of a japanese hospital.
14:21 < leichtgewicht> the hospital or rather the site became famous for the bad web design in the 1990s.
14:21 < leichtgewicht> (won't be online for long)
14:21 < ckknight> leichtgewicht: why is there so much flashing?
14:21 < ckknight> for a hospital...
14:22 < pachet> that site is awesome
14:24 < pachet> brilliant use of framesets
14:25 < greelgorke> mattrichards: your question: 401 is not an error, it is totally valid HTTP response
14:26 < mattrichards> greelgorke: aha, of course it is.  However, in that case, how come the .success() callback doesn't get called?
14:29 <@isaacbw> mattrichards: that's a question for #angularjs
14:29 <@isaacbw> and/or reading the angularjs docs
14:29 < mattrichards> isaacbw: wrong tab.
14:29 < mattrichards> isaacbw: thanks for the rtfm though ;)
14:30 < mattrichards> isaacbw: rest assured I have done so ;)
14:30 <@isaacbw> what :( I'm confused
14:30 < greelgorke> isaacbw: best answer, i should have come to it myself ;)
14:31 < mattrichards> greelgorke: isaacbw: surprised you even humoured me tbh, thanks anyway, have now asked in the right place.
14:35 < bluesm> If I do know JavaScript and "callback" way of programming. 
14:36 < bluesm> From Browser. Do you think I could start use library like express.js ?
14:36 < greelgorke> sure
14:39 < bluesm> greelgorke: Is there any library beside express.js to consider ? I mean to build mainly http apps.
14:39 < oreth> what about express don't you like?
14:39 < greelgorke> it depends on what you want and what is your background expirience
14:40 < petecoop> http://flatironjs.org/
14:40 < leichtgewicht> greelgorke: AWS supports Geddy besides express
14:40 < leichtgewicht> (Elasticbeans)
14:40 < bluesm> greelgorke: Basically, experience with client side (browser) JS most...
14:40 < bluesm> greelgorke: On server just suuper simple php getting from database.
14:40 < greelgorke> some mvs framework used?
14:40 < greelgorke> mvc*
14:41 < pachet> bluesm: if your use case is super simple, you dont always need a library
14:41 < pachet> express is a swiss army knife
14:41 < pachet> if all you need is a straightedge screwdriver, just use that
14:41 < pachet> bluesm also see restify
14:42 < zimmerf0> bluesm: you can have a look at beeline (https://github.com/xavi-/beeline) for something simpler
14:42 < bluesm> greelgorke:  Nope. Plain JS or Js with jQuery.
14:42 < NoFaTe> oooh, geNAZt is here.
14:42 < NoFaTe> hey geNAZt
14:42 < greelgorke> bluesm: you probably should learn the principle of mvc pattern first
14:43 < bluesm> greelgorke: Mhm. To work with express.Js ?
14:43 < bluesm> pachet: Ok... So you suggest me to just work with strings, creating html code ?
14:43 < greelgorke> to understand how a route handler, a view and your database interact
14:44 < pachet> i mean, if all you're doing is serving http files for certain requests, and returning JSON from your db on other requests...
14:44 < greelgorke> express separates request handling from view processing
14:44 < pachet> if you're mixing the two, you're muddying the waters and might want to look at some of the modules we've posted
14:46 < greelgorke> pachet: bluesm said "simple php stuf for db access", so it means something like template, that accesses to the model
14:46 < beeant> i need to learn JS promises
14:47 < greelgorke> as far as i know there is nothing in node like it, because noone would do this crazy stuff :D
14:47 < geNAZt> hi NoFaTe
14:47 < geNAZt> why doesnt my highlight work oO
14:47 < greelgorke> bluesm: why do you bother about node anyway?
14:47 < NoFaTe> lol
14:48 < bluesm> greelgorke: Sockets? Having one language to master ?
14:48 < shmoon> hi
14:48 < shmoon> i installed npm install -g nodemon,but $ nodemon -> command not found, what should i do ?
14:48 < shmoon> mac osx
14:48 < pachet> greelgorke: he didnt explicitly say he was interpolating
14:48 < bluesm> greelgorke: Or rather having on language that I could write "simple" code.
14:48 < pachet> greelgorke: could be he's just accessing the db on XHR reqs
14:50 < geNAZt> highlight was off -_- shitty mirc update :D
14:52 < oreth> shmoon: did you brew install node or install from the node package at nodejs.org?
14:52 < acuster> Hey all, I'm confused from conflicting docs. Does fs.createReadStream( filename ).on('end'...  potentially imply content so that rs.read() is required? So far that is always null here.
14:53 < geNAZt> acuster, yes
14:53 < acuster> thanks. ARe there particular circumstances where the buffer will be full in the 'end' event?
14:54 < acuster> s/buffer/read buffer
14:54 < geNAZt> you mean the read buffer inside the stream ?
14:54 < acuster> yeah, when the 'end' event is called
14:55 < geNAZt> if the end event on a stream2 api is called the buffer is empty and the underlying reader said "anything done"
14:56 < Stephen> Has anyone implemented NodeJS purely as a JSON State Server between browser and a .Net MVC App?
14:57 < acuster> not sure I understand. I'm on node-latest 10.x So when I call readstream.read() in the .on('end'... handler, it will always be empty?
14:57 < pachet> whew :[
14:57 < shmoon> oreth: brew install node
14:57 < shmoon> whya nything wrong ?
14:58 < beeant> javascript is difficult but it's fun
14:58 <@MI6> joyent/node: Ryuichi Okumura v0.10 * 4cd643e : doc: fix missing Class in header (+1 more commits) - http://git.io/r_1wXQ
14:58 < beeant> don't you think so?
14:58 < geNAZt> acuster, if you call readstream.read() the internal buffer will fill up and emit a readable event if there is enough data
14:58 < geNAZt> if you havent read all data the end event never gets fired
15:00 < acuster> geNAZt: sorry. Let's backup. (1) const rs = fs.createReadStream (filename) (2) read all .on('readable' events (3) handle .on('end' => but when I do a rs.read() in the .on('end'... the result is always null
15:00 < acuster> will that always be true?
15:01 < geNAZt> i dont know what happens if you read inside a end event
15:01 < geNAZt> because the buffer is empty
15:02 < acuster> geNAZt: so by design, the last 'readable' event will have the stream up to the end of the stream?
15:03 < geNAZt> yes
15:03 < acuster> geNAZt: thank you muh
15:03 < acuster> much
15:03 < shmoon> oreth: anything?
15:06 < oreth> shmoon: brew uninstall node and install from package
15:07 < oreth> you might be able to simlink the binary from the node install
15:07 < shmoon> oreth: which package exactly?
15:07 < oreth> er.. from the brew install
15:07 < oreth> http://nodejs.org/dist/v0.10.6/node-v0.10.6.pkg
15:08 < shmoon> can i auto update it ?
15:08 < oreth> the brew install doesn't setup the proper permissions and binary simlinking
15:08 < oreth> you should just uninstall node from brew and install the node pkg
15:09 < shmoon> and how will i update when new node verison comes out, oreth ?
15:09 < oreth> install the new package?
15:09 < shmoon> ok oreth 
15:10 < shmoon> thanks
15:10 < oreth> no problem
15:14 < rconover> guys is the master branch broken in node_crypto.cc I'm getting compilation errors
15:15 < AAA_awright> I'd think master reserves the right to do that, but you can open a bug
15:15 < marshall> pachet: `coffee app.coffee`
15:20 < bnoordhuis> rconover: what compilation errors?
15:20 < rconover> never mind its some git problem with my local fork
15:21 < bnoordhuis> okay
15:21 < rconover> bnoordhuis got a second to talk http errors last time?
15:22 < rconover> http://pastebin.com/0GPRWTTm
15:23 < rconover> this problem is related to this old bug: https://github.com/joyent/node/issues/680
15:23 < rconover> and it just seems if the extra response is chunked and a zero length, node throws the parse error.
15:23 < rconover> if its a full http reply it happily continues parsing away.
15:28 < bnoordhuis> rconover: can you phrase that in questions i can answer with yes or no?
15:28 < rconover> Can  you review my patch in the next few minutes to make the behavior consistent for trailing data?
15:29 < bnoordhuis> rconover: i've got a patch review queue as long as my arm
15:29 < rconover> alright I'll open a pull request once I fix this github problem.
15:29 < rconover> I have a test case, and patch so it should be easy
15:30 < bnoordhuis> okay
15:30 <@MI6> joyent/node: Ben Noordhuis v0.10 * f59ab10 : buffer, crypto: fix default encoding regression - http://git.io/KRbiyQ
15:39 < leichtgewicht> how do I do async testing with tape?
15:39 <@isaacbw> does tape work with v.10+ yet?
15:40 < leichtgewicht> how do i know?
15:40 < leichtgewicht> it does run ...
15:41 < leichtgewicht> Well: It seems to work.
15:43 < leichtgewicht> But I can't seem to get it to wait until the timeout is done.
15:43 < leichtgewicht> it complains before not ok 3 plan != count
15:45 < leichtgewicht> must be my mistake because the sample does work ....
15:49 < Bubo> a
15:49 < Bubo> I am building a RSS reader with Node.js
15:49 < Bubo> I have a question
15:49 < Bubo> for example -> parsing the http://www.engadget.com/rss.xml engadget rss, it has html tags inside the rss feeds
15:50 < Bubo> should I leave these unescaped
15:50 < Bubo> is it safe?
15:54 < brian_petersen> I have a small node.js application with node.js. I am implementing the socket.on('disconnect', function () { ... }), and I am trying to access the socket.id in the disconnect handler but for some reason it keeps returning other connected socket ids. Does anyone know why this is?
15:54 < SuneRadich_> Im a nodejs newbie, so bear with me if I ask stupid questions. I am trying to convert a file from UTF8 to latin1 (ISO-8859-1) using iconv-lite. I figtured out how to read the file and convert the content. But I cant get my head around how to write the converted contents. In the NodeJS docs it states that you have to give an encoding to writeFile, otherwise it defaults to utf8. http://nodejs.org/api/fs.html#fs_fs_writefile_filename_data_options_call
15:55 < SuneRadich_> But latin1 is not an allowed encoding in node ?
15:55 < mikolalysenko> if you convert your string into a buffer, you don't need to specify an encoding when you write the file
15:55 < mikolalysenko> encoding only matters when you are writing strings
15:56 < SuneRadich_> ah
15:57 < mikolalysenko> basically buffers are pure binary data, while strings need some character set in order to be interpreted
15:57 < SuneRadich_> Kinda makes sense :)
15:57 < SuneRadich_> thx
15:59 < mscdex> brian_petersen: can you upload your code somewhere? the socket object should be the same, especially if the 'disconnect' handler is within the scope of the 'connection' handler
16:03 < brian_petersen> mscdex, yeah, one sec. I think that I am doing everything right, but for some reason it grabs the id from another client.
16:03 < brian_petersen> mscdex, https://gist.github.com/brian-petersen/3ea4f339bca73bdd4ad9
16:04 < mscdex> ahhh coffeescript *shields eyes*
16:04 < brian_petersen> mscdex, around lines 105-115, want a compiled version? 
16:07 < merpnderp> Can anyone who does mobile client dev tell me their favorite mobile UI framework?
16:08 <@isaacbw> gtk+
16:08 < merpnderp> Whups, I meant HTML/JS :P
16:08 < mscdex> ncurses
16:08 < mscdex> i kid
16:08 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:09 < mscdex> brian_petersen: i don't know, i haven't seen that happen before. i guess as a workaround you could store the id as a local variable right inside the 'connection' handler
16:09 < mscdex> brian_petersen: also make sure you're not overwriting some internal state or something *shrug*
16:11 < rconover> bnoordhuis: pull request created https://github.com/joyent/node/pull/5493
16:11 < brian_petersen> mscdex, yeah, it's really confusing me. What do you mean sore the id as a local var? where exactly?
16:11 < mscdex> brian_petersen: like `var clientId = client.id;` at the top of the 'connection' handler
16:12 < mscdex> brian_petersen: assuming it's correct at the start :-)
16:24 < hackygolucky_> NodePDX conf about to roll out. Weeee!
16:24 < jerrysv> hackygolucky_: damn right
16:25 < hackygolucky_> anyone interested in the chatter come visit #nodepdx
16:25 < ckknight> hackygolucky_: how is it that I live in Portland and this is the first I'm hearing of this?
16:26 < jerrysv> ckknight: it's packed, and the 2nd year
16:26 < ckknight> jerrysv: damn, wish I had heard about it earlier
16:27 < jerrysv> ckknight: always next year
16:27 < ckknight> jerrysv: probably not going to live here next year
16:27 < ckknight> :P
16:27 < jerrysv> ckknight: you just can't win!
16:27 < ckknight> apparently not
16:32 <@isaacbw> merpnderp: I was joking
16:32 <@isaacbw> the openmoko is the only phone afaik that uses gtk+ for ui
16:32 <@isaacbw> poor openmoko
16:33 < merpnderp> isaacbw: heh, I figured as much. Yeah, I had high hopes for openmoko. 
16:34 < Bubo> how do I get a secret key for express sessions?
16:34 < brian_petersen> mscdex, found the problem on line 32 the client was referncing the one being passed in from the io.on('connection'), I just had to rename that one.
16:34 < hackygolucky_> ckknight: you could always attend later today and tomorrow :D
16:34 < hackygolucky_> ckknight: really awesome nodecopter event happening tonight.
16:34 < ckknight> hackygolucky_: are they still selling tickets?
16:35 < hackygolucky_> ckknight: also, if you can't make it out, there's a monthly PDXnode meetup where you could meet some of us and still get to play with hardware/nodecopters.
16:37 < merpnderp> Even for mobile, is there any point in not using twitter bootstrap?
16:50 < ckknight> why is github.io doing so poorly today?
16:51 < uma> Hi...Are there any good webui automation frameworks available?
16:51 < Stephen> uma: for Testing?
16:51 < Stephen> Selenium
16:51 < Stephen> ort PhantomJS
16:52 < uma> @stephen: yes we have node.js application which uses express framwork..we are looking for automation tools...
16:52 < LLckfan> No
16:52 < LLckfan> Can some1 tell me why in Google Chrome it sometimes will not go to the address I type in but if I click a link somewhere it goes to that address without an issue
16:52 < uma> @stephen ..we dont to use selenium as again it needs to be coded in java..is there something where we can use javascript and fo automation?
16:53 < Stephen> LLckfan: I experience the same thing sometimes. I think that the window is losing a reference to the tab.
16:53 < Stephen> PhantomJS
16:54 < uma> @stephen....okay will look into PhantomJS 
16:57 < uma> @stephen: with phantomjs is it possible to test automation on multiple browsers? Like IE, chrome and firefox?
16:58 < geNAZt> uma: why not testicular ?
16:59 <@isaacbw> lol
16:59 <@isaacbw> testacular
16:59 <@isaacbw> aka karma
16:59 < geNAZt> y
16:59 < geNAZt> sry :D
16:59 < Stephen> uma: No
16:59 < Stephen> Javascript can't do that alone
16:59 <@isaacbw> I welcome the name change for that reason geNAZt :P
16:59 < uma> @stephen...is there any automation tool which allows testing in multiple browsers...?
16:59 < geNAZt> very big yes
17:00 < uma> @geNAZt: sorry didnt get u?
17:00 < geNAZt> uma, http://karma-runner.github.io/0.8/index.html
17:00 < geNAZt> this is a multiple browser autmatic testing framework
17:00 < Stephen> uma: You might want to look into substack's testling
17:00 < uma> @genazt..thanks I will check that
17:00 < ljharb> testling is awesome
17:00 < Stephen> My dev environment is TFS and Windows based
17:01 < uma> @stephen..sure will check substack's testling
17:01 < Stephen> Company made that choice for me :-)
17:01 < ckknight> Stephen: sorry you have to use TFS
17:01 < Stephen> It's not so bad
17:01 < Stephen> It's mainly just used for checkins
17:02 < Stephen> I'm dragging everyone towards MVC4 sites
17:02 < uma> Does anyone used jellyfish??can this be used for testing multiple browsers?
17:02 < Stephen> And hopefully I can convince them to get Continuous Integration setup
17:03 <@isaacbw> for a while I've been wanting to set up a large flatscreen tv on my wall that runs karma tests on every commit
17:03 < Stephen> karma tests?
17:03 < geNAZt> @isaacbw, only to see it running on multiple browsers ?
17:03 < Stephen> http://karma-runner.github.io/0.8/index.html
17:03 < Stephen> ah
17:03 < geNAZt> karma is the framework for testing pages in multiple browsers
17:04 < Stephen> You know, test driven development is wonderful
17:04 <@isaacbw> geNAZt: not even that, it would just be awesome to have visual and immediate feedback on a big screen on the wall
17:04 < geNAZt> ah i had htop a long time on 42 zoll :D
17:05 < Stephen> However, informing a QA department that the majority of their job is turning into more of a "dev" like activity for UI Test scripts never goes over well
17:06 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:06 <@isaacbw> wix lounge in nyc has a projector set up with pings whenever someone sets up a new wix site
17:06 <@isaacbw> *on a map
17:06 < geNAZt> like tweetping ?
17:07 < Stephen> 173 Windows updates
17:07 <@isaacbw> geNAZt: with quite a bit fewer data points 
17:07 < Stephen> Only found when I ran Windows Update as Administrator, Checked for Updates (it found 0), then forcing the system to check for them even though the Network Admin has control over updates
17:08 < geNAZt> yes but it looked like tweetping (i really like this page because it demonstrates what nodejs can do)
17:08 < Stephen> Of course those whole Service Pack things are just a waste of bandwidth and time
17:08 <@isaacbw> geNAZt: it was google earth and it would zoom in on a position with a bubble showing the new url
17:09 <@isaacbw> so no, not quite like tweetping
17:09 < geNAZt> ah ok :D
17:11 < Bubo> I am using Sequelize and I get an error: ECONNREFUSED
17:11 < Bubo> it seems it doesn't connect to the database even though the username, db and password are fine
17:11 < Bubo> any ideas..?
17:11 < geNAZt> Bubo, using which dbms ?
17:11 < pachet> can you connect using the same credentials from command line?
17:11 < Bubo> postgre
17:11 < Bubo> yes
17:13 < Bubo> pachet: geNAZt my code: https://pastee.org/8rfez
17:14 < Bubo> the error : https://pastee.org/z9sam
17:15 < Bubo> any ideas?
17:15 < geNAZt> have you tried without pooling ?
17:15 < Bubo> geNAZt: same error
17:16 < geNAZt> can you connect using a plain pstgres driver ?
17:16 < TML> I have a question about package.json files. Person X wrote a package and then abandoned it, and now I've taken over maintenance and support. Person X has asked that their name stay in package.json as the "Author", but I want to make it clear that contacting Person X for support is going to be a dead-end. Does package.json offer anything other than "contributors" that might help me with that?
17:16 < Bubo> geNAZt: I haven't tried. 
17:16 < Bubo> let me try
17:16 < geNAZt> Bubo, can you try to connect via this driver: https://github.com/brianc/node-postgres
17:16 < ljharb> TML: the clearest would be to remove them from npm but leave them in package.json
17:18 < TML> ljharb: OK - I don't think they were ever even *in* npm, so that should be acceptable.
17:18 < TML> thank you
17:18 < Bubo> geNAZt: I don't undesrstand, where do you put username, database and password?
17:19 < leostera> Hi there guys, I have a question regarding a buffer and how can it become a readable stream
17:20 < leostera> I'm halfway thru it, I get the stringified buffer, create the new readable stream
17:20 < geNAZt> var conString = "tcp://<user>:<pass>@<host>/<db name>";
17:20 < leostera> but how am I to push the stringified buffer thru the readable stream?
17:21 < Bubo> geNAZt: yes it did login successfully
17:21 < Bubo> I can query anything I want
17:21 < geNAZt> so its a bug in the orm
17:21 < geNAZt> i think
17:21 < Bubo> any other ORM for Node.js?
17:22 < geNAZt> Bubo, https://github.com/1602/jugglingdb
17:22 < Bubo> geNAZt: when I do protocol: null (default is tcp) in sequelize, it says wrong password for user "bubo" even though I have "rss" defined as the user.. 
17:23 < geNAZt> well it looks like a bug in this orm
17:23 < geNAZt> try another orm
17:23 < geNAZt> or use the plain driver
17:23 < Bubo> I will try this jugglingdb
17:23 < leostera> anybody how can I take a buffer and make a read stream out of it?
17:24 < geNAZt> leostera, why do you want to stream a buffer if you have the complete buffer ?
17:25 < leostera> geNAZt: because I have the dataUrl from an image and the AWS lib we are using (awssum) would only (sadly) work with read streams 
17:26 < geNAZt> leostera, does it take duplex streams ?
17:26 < leostera> why, is there a way to make a duplex stream out of a buffer?
17:26 < geNAZt> well you can create a duplex stream, write the buffer in it and pass it to the aws
17:28 < leostera> interesting, I'll try, thanks geNAZt 
17:28 < leostera> I'll stick around in case I can help out anyone
17:53 < slajax> anyone here ever had problems with fs.write/rename when pointing at a symlinked dir?
18:12 < noturno99> hey guys, have you had any trouble using passportjs with facebook? I can use it with google and twitter accounts, but with facebook I'm always getting URL's erros when redirecting back (callbacks)... any tips?
18:15 < noturno99> ?
18:17 < Help> boop
18:29 < spots> hi
18:29 < beeant-macbook> hi
18:29 < spots> what is a fast way to get all links from an html file and what is a fast way to extract all text (without tags) from an html?
18:30 < nightfly__> parse it and walk the tree for what you want?
18:31 < spots> it has to be fast
18:31 < ljharb> ugh, scraping.
18:31 < euoia> spots: unless you can guess at the structure of the document then I don't see how you can get away with not parsing it
18:32 < spots> then what is the fastest parser?
18:32 < euoia> spots: for example, if you know that all links are on a single line then you can use grep
18:33 < euoia> spots: you say it has to be fast, but it's generally better to try the simplest solution and see if it is fast enough
18:33 < euoia> spots: a while ago a I used a python library called beautiful soup for scraping, I was impressed with it
18:35 < euoia> spots: sorry for reason I thought you said links, I now see you want the element text - I don't think it makes a lot of difference though
18:35 < euoia> *some reason
18:35 < euoia> spots: an interesting question is whether you need to deal with malformed html
18:35 < spots> don't worry i said both :)
18:37 < fayimora> nom install -g always requires sudo, is that normal???
18:37 < spots> i think i have to deal with malformed html
18:37 < fayimora> **npm
18:38 < spots> i have to crawl the web
18:38 < euoia> spots: perhaps this SO response is of some help
18:38 < euoia> http://stackoverflow.com/questions/7977945/html-parser-on-nodejs
18:39 < euoia> fayimora: o   Global install (with -g): puts stuff in /usr/local or wherever node is installed.
18:39 < euoia> fayimora: from npm help folders
18:40 < therealkoopa> noturno99 I use passport with fb
18:40 <@MI6> joyent/libuv: Bert Belder v0.10 * d182e45 : windows: make uv_spawn not fail under job control - http://git.io/M8O1Rg
18:42 < fayimora> euoia: not sure i understand your point
18:43 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:43 < euoia> npm install -g installs to /usr/local
18:43 < euoia> if you don't have write permission to that directory then presumably it will require sudo
18:43 < euoia> or am I missing something?
18:44 < fayimora> Hmmm ok.. I do not knw myself but giving sudo permissions to a plugin seems weird
18:47 < euoia> fayimora: not sure what you mean by that - you would only be giving sudo permission to the executable if you run the executable with sudo
18:47 < euoia> fayimora: unless you mean npm (which are you running with sudo)
18:54 < fayimora> euoia: was just wondering why i needed to use sudo
18:54 < euoia> fayimora: What happens if you don't use sudo?
18:55 < fayimora> euoia: it errors out
18:55 < euoia> fayimora: what is the error?
18:56 < fayimora> euoia: SOmething like this http://i42.tinypic.com/308innl.png
18:57 < rhalff> I have a dream!
18:57 < rhalff> :p
18:58 < euoia> fayimora: so it errors out when trying to mkdir /Users/fayimora/lib/node_modules/generator-angular
18:58 < euoia> fayimora: does your user not have permission to write to that directory?
18:59 < rhalff> Dish all filebased code and put everything within a database, something like mongodb. I think requirejs could even be hacked to make this possible.
19:00 < fayimora> euoia: i erally don't know but looks like it doesnt
19:00 < fayimora> *really
19:00 < therealkoopa> Any benefits of using cluster versus something like seaport/fleet to fire off multiple workers/drones?
19:01 < euoia> fayimora: try ls -ld /Users/fayimora/lib/node_modules/
19:01 < euoia> fayimora: this bit tells you the permissions
19:01 < euoia> fayimora: drwxr-xr-x
19:03 < fayimora> euoia: drwxr-xr-x
19:03 < fayimora> same thing
19:08 < euoia> fayimora: did you install it using sudo already?
19:10 < euoia> fayimora: it's actually a bit of a mystery why you get a mkdir error - are you the owner of the directory?
19:10 < fayimora> euoia: the plugin or nopm?
19:11 < euoia> the module
19:11 < euoia> fayimora: can you give me the full output from ls -ld /Users/fayimora/lib/node_modules ?
19:11 < fayimora> euoia: no I'm not -==> drwxr-xr-x  23 nobody  staff  782 16 May 19:38 /Users/fayimora/lib/node_modules/
19:11 < euoia> fayimora: well there's the problem
19:11 < euoia> fayimora: that's why you need to use sudo to install it
19:11 < euoia> fayimora: because you don't have permission to write the directory
19:12 < fayimora> Hmmm should i chow the lib dir?
19:12 < fayimora> *chown
19:13 < TheAceOfHearts> So, shameless plug: http://www.youtube.com/watch?v=hs2FppfotFk been working on this all semester long :D, uses nodejs+socketio on the server side. It's a laser tag game with real-time stats.
19:13 < euoia> fayimora: yes you can do - I don't see any reason why you wouldn't want to own the directory
19:13 < euoia> TheAceOfHearts: having a look
19:13 < fayimora> chown lib/ fayimora  <= correct? euoia 
19:14 < TheAceOfHearts> euoia: yay :D 
19:14 < euoia> fayimora: chown fayimora /Users/fayimora/lib/node_modules
19:16 < fayimora> Thanks a lot euoia :)
19:17 < euoia> TheAceOfHearts: that's pretty cool! Any plans to take it further?
19:17 < TheAceOfHearts> well, that was just our project for this semester for a microcontroller interfacing course. I actually wanna try buildiung a cheaper/smaller version. 
19:18 < TheAceOfHearts> euoia: like… these prototypes are CRAZY expensive… I could probably make some for like $25~ or something like that 
19:18 < euoia> TheAceOfHearts: what board are you using?
19:18 < TheAceOfHearts> a Maple Mini, it has an ARM Cortex M3; it's insane overkill. my original goal was an ATmega324, but my professor didn't like it cuz he said all atmegas were arduinos -_-… on the other hand, we got to play with an ARM, which was cool :D
19:20 < euoia> TheAceOfHearts: very cool! how was the communication to the phone done?
19:20 < TheAceOfHearts> there's some people in one of the biggest laser tag forums I could find that are interested in the idea; basically they do hardware stuff, but don't have that much knowledge with Android/Server stuff
19:21 < euoia> TheAceOfHearts: I say keep it up! Very cool project
19:21 < euoia> TheAceOfHearts: are the lasers effective over a longer range?
19:21 < TheAceOfHearts> gun and phone is through bluetooth; phone and server uses the phone's internet connection… it's supposed to be socket.io, but it's done through polling, I probably should've made a plugin for PhoneGap to do real sockets 
19:21 < TheAceOfHearts> thanks euoia! 
19:21 < TheAceOfHearts> not really, we got around 40ft from these; if we had more powerful ones we'd get better range 
19:22 < TheAceOfHearts> we bought some lens + high power LEDs 
19:22 < TheAceOfHearts> but it was too much hassle getting that setup properly
19:24 < TheAceOfHearts> if I could get the cost down reaaaally low, it'd be great; cuz it's supposed to have the goal of making things really easily accessible for anyone 
19:24 < TheAceOfHearts> cuz if a gun is like $20, you can get lots of people to buy it and play with it
19:24 < euoia> TheAceOfHearts: yeah definitely
19:24 < euoia> TheAceOfHearts: kickstarter
19:24 < euoia> TheAceOfHearts: heh
19:25 < TheAceOfHearts> haha, nahh; I'm not really a hardware guy. I'm way more passionate about software, but it was a really fun project, I might keep working on it from time to time, but I wanna focus on some more software stuff now :D 
19:25 < euoia> great project anyway
19:26 < TheAceOfHearts> thanks :D
19:26 < TheAceOfHearts> euoia: I feel horrible about the software side, since we only get evaluated for the system and not the software, I had to sort of hack it together in really little time
19:27 < euoia> TheAceOfHearts: any plans to write it up? I am taking 6 months of work during the summer and it's the sort of thing I'd like to try building
19:27 < TheAceOfHearts> oh, it's ALL open source :D 
19:27 < TheAceOfHearts> https://github.com/cesarandreu/laser_tag_reloaded
19:27 < euoia> TheAceOfHearts: I wouldn't worry too much - hacks hold the world together
19:27 < TheAceOfHearts> like, I included our final report which is a hugeass PDF with all the details 
19:28 < TheAceOfHearts> and in the Other folder you can find schematics 
19:28 < TheAceOfHearts> and like a PCB design 
19:28 < euoia> TheAceOfHearts: that's excellent, I will probably read up about it in the next few months
19:28 < TheAceOfHearts> cool :D 
19:28 < euoia> TheAceOfHearts: I have some young nephews that would probably love something like this
19:28 < euoia> TheAceOfHearts: and 40ft would be plenty for playing indoors
19:28 < TheAceOfHearts> yeah
19:29 < TheAceOfHearts> you should be able to get a lot more if you use high power LEDs and a lens, I think. 
19:29 < euoia> TheAceOfHearts: I'll keep you posted
19:29 < TheAceOfHearts> cool :D! 
19:30 <@MI6> joyent/libuv: Bert Belder v0.10 * 4f61ab2 : windows: make uv_spawn not fail under job control - http://git.io/30_NdA
19:45 < JosephFerano> hello, I'm a bit new to web development and node.js, I need the web site I'm building to be able to run locally on a client's machine without a localhost, I am making ajax calls like load and getJSON, which fail in IE and Chrome when run locally, can node.js solve this problem for me and make it a one click launch for the end user?
19:48 < rhalff> JosephFerano, yep it can.
19:48 < JosephFerano> cool, the other idea I had was somehow packaging XAMPP with a bat file and have the user click on that
19:48 < JosephFerano> so node.js is a similar process only better?
19:49 < rhalff> JosephFerano, what is your serverside code written in? 
19:49 < JosephFerano> there is none, it's just json
19:50 < euoia> JosephFerano: what is the website going to do?
19:50 < rhalff> JosephFerano, ok, then nodejs is a nice way of serving your code
19:51 < JosephFerano> I can't say much because of nda, but it's a javascript application basically
19:51 < euoia> JosephFerano: what I mean is, ajax calls make a request to a server
19:51 -!- mode/#Node.js [+o TooTallNate] by ChanServ
19:51 < euoia> JosephFerano: you will need some server code
19:51 < rhalff> JosephFerano, I made a bash one liner so I am able to just do 'serve <port>' in the current dir and it just serves what is there.
19:51 < JosephFerano> euoia: the ajax calls are just loading html and json currently
19:52 < euoia> JosephFerano: but something must be serving the html and json
19:52 < JosephFerano> euoia: I'm loading components, that's why
19:52 < JosephFerano> and the json is hand made
19:53 < euoia> JosephFerano: it's static?
19:53 < JosephFerano> the website uses jsons for it dynamism
19:53 < rhalff> JosephFerano, yeah but your .json is static right?
19:54 < JosephFerano> yes, the json is static
19:54 < rhalff> JosephFerano, ok, euoia will past you the code... :p
19:54 < rhalff> +e
19:55 < JosephFerano> so you guys think node.js is the best alternative for what I need then? I just need to get around the IE and Chrome security when making those ajax calls
19:56 < rhalff> JosephFerano, are you running on windows?
19:57 < JosephFerano> I'm running on mac, but this deployment should be cross-platform
19:57 < JosephFerano> at the minimum, mac and win, these are end-users so linux/unix is unlikely
19:57 < jamesdotnet> JosephFerano: Sounds like it would work but there might be some really tiny http server that would be more appropriate to embed in an app
19:58 < rhalff> JosephFerano, I fail to see how a static site should be able to run on multiple machines, I think that's why they invented the web.
19:58  * rhalff *ducks*
19:58 < JosephFerano> lol
19:58 < JosephFerano> unfortunately it's a requirement that this run locally and on the interwebs
19:59 < JosephFerano> jamesdotnet: do you have any such http server that can be embded?
19:59 < euoia> JosephFerano: if it's really completely static - can you not just put it in the page itself? Does it need to be an ajax request?
20:00 < rhalff> JosephFerano, what is your use case, you don't have to be specific about the contents.
20:00 < euoia> JosephFerano: if you're serving it as an app then the file size presumably doesn't matter
20:00 < JosephFerano> euoia: that is one of the options I have been considering, we are going to need a build system anyway because this site will have 15+ components being loaded in, and each component has it's own separate css, html, and js
20:00 < jamesdotnet> I don't know of one offhand, but I'm sure there is something out there or something you could write. Listen on port, serve file...
20:01 < JosephFerano> so what I could do is, on top of concatenating, I can include all of the json files in the js files as well
20:02 < rhalff> JosephFerano, ok, so your problem is the application will interact with the web, so it must be run by a webserver, not sure if nodejs is the best option then, because you will have to install it on each and every machine.
20:02 < JosephFerano> oh...
20:02 < JosephFerano> then that's definitely a deal breaker
20:03 < euoia> JosephFerano: well if you go with the web server approach you will need to install /something/ on every machine
20:03 < rhalff> JosephFerano, we didn't talk about a deal yet, if you hand me the money, offcourse there will be a sollution :p
20:04 < JosephFerano> :D
20:04 < acuster> hey all, how come:    "hello" + false?null:true   => null ?
20:05 < jamesdotnet> Consider ("hello" + false) ? null : true
20:05 < rhalff> BUt still I don't understand why you would want to install something on somebody's machine, unless it is for display purposes.
20:05 < acuster> "hello" + null => "hellonull" and "hello" + true => "hellotrue"
20:06 < acuster> ah, right. Thanks jamesdotnet
20:07 < JosephFerano> based on that issue, I guess the best way is what euoia said, just get rid of the ajax calls, which I can do through concatenation and the like, I would have to figure out a way though where I can run it normally with ajax calls and have it be replaced during the build system
20:09 < euoia> JosephFerano: why do you want it run normally with ajax calls?
20:10 < euoia> *to run
20:10 < rhalff> JosephFerano, it's 2013, who installs static websites on a user's machine? *maybe I don't understand what you are talking about*
20:10 < euoia> rhalff: I think that is what he's talking about. I also think it's a valid use case.
20:10 < JosephFerano> rhalff: it's out of my hands, it's the client's request
20:12 < rhalff> JosephFerano, aren't you talking about CD's or usb sticks then, if it should be a showcase of some kind.
20:12 < JosephFerano> euoia: because the project is going to have several different applications, all of which will reuse the same components, so it's important to have all of that separated out, it's a big project, so I would rather make the loads and keep things organized and just make the build system
20:13 < JosephFerano> unless you guys can recommend a way to have separate js components (which are found in their own folders with their own js, css, and html files) and bring them in without ajax calls
20:13 < JosephFerano> I'm somewhat new to js and web dev, I'm a C# game programmer
20:13 < rhalff> JosephFerano, how can a big project be non-dynamic? bringing in files is still a static act.
20:14 < JosephFerano> because it's is rhalff, there's no need for any server side code
20:14 < JosephFerano> or a database
20:14 < JosephFerano> it's just a bunch of mini-applications and they will all re-use the same components
20:15 < rhalff> JosephFerano, give a short description of the project, or is it top-secret?
20:15 < rhalff> :D
20:15 < JosephFerano> yes, I signed an nda, so all I can say is what I just said; bunch of mini-apps with a shared component library
20:16 < JosephFerano> not trying to keep things from you to be secretive, just trying to not piss off my boss/clients
20:16 < rhalff> JosephFerano, run stand-alone or as an application?
20:16 < JosephFerano> from a web browser is fine
20:17 < JosephFerano> I've looked into apis like TideSDK and the like
20:17 < euoia> I don't know why you need ajax - couldn't you just load an iframe?
20:17 < JosephFerano> but that may be over the top
20:17 < JosephFerano> euoia: I'm all ears, if you have any suggestions on how to structure the loading of components, I'd love to hear them
20:17 < euoia> JosephFerano: well you create a completely separate webpage, and then you just display it in an iframe
20:18 < rhalff> JosephFerano, why not secure your website? You could even install certificates for every of your clients and have one point to update the code.
20:18 < luminous> hello! I am trying to create a node.js/socket.io streamer to pull messages from a zmq socket and send them to a socket.io client - http://dpaste.de/X4aww/ 
20:18 < euoia> rhalff: it sounds like it needs to be used offline
20:18 < JosephFerano> yeah, it's offline
20:19 < JosephFerano> euoia: if I use iframes, will that cause problems when I do a concatenation in the build system?
20:19 < luminous> the errors I get are:  WebSocket is closed before the connection is established. :1 Resource interpreted as Script but transferred with MIME type text/plain: "https://host.tld/portal_registry/stream/socket.io/1/jsonp-polling/Welcome%20to%20socket.io.?t=1368732526939&i=0". socket.io.js:3242 Uncaught SyntaxError: Unexpected identifier Welcome%20to%20socket.io.:1
20:19 < euoia> JosephFerano: nope
20:19 < JosephFerano> this is also going on the web, so Im looking into a build system that maybe calls Closure and concatenates everything to avoid http requests
20:19 < luminous> I'm a bit new to js and node in general, so maybe I am missing somethign simple and obvious?
20:20 < euoia> which specific bit of it are you using ajax for? Loading json?
20:20 < JosephFerano> the json is currently loading an html file and json
20:21 < euoia> you mean the ajax?
20:21 < JosephFerano> yes, thank you
20:21 < euoia> and just displaying it on the page?
20:21 < JosephFerano> right
20:22 < euoia> I mean, for the html you can create an iFrame and just set the src to whatever the path to the html is
20:22 < freezy3k> hi, is there a way to read the response headers from request before piping a download into a file? i would need to know content-size.
20:22 < JosephFerano> so what I'm doing is from the mini-apps main logic, I instantiate a component by instantiating the object (using prototype functions), I pass the object a div and it loads its html into that div, then it loads its own json and builds itself with that json file
20:23 < rhalff> JosephFerano, sounds pretty static, json won't work though if it is not being served.
20:23 < euoia> JosephFerano: I would think you can dynamically create iFrames instead to achieve that - not completely sure - you might be better off in an HTML room
20:25 < JosephFerano> rhalff: what does "being served" mean?
20:27 < rhalff> JosephFerano, how are you serving your files right now? through a webserver?
20:27 < euoia> presumably he means over a socket by a webserver
20:27 < JosephFerano> rhalff: they would be loaded from the hard disk
20:27 < euoia> (or she)
20:27 < lulkan> anyone have experience with the sqlite3 package? I'm just playing around with it (x86 Windows), but seem to be having pretty poor performance when using disk storage. Inserting 10k rows of small data takes ~30 seconds... I must be doing something wrong...? -> http://pastebin.com/9CVsx3ui
20:28 < JosephFerano> euoia: how many women do you know are called Joseph?
20:28 < rhalff> JosephFerano, from the filesystem json won't work. the domain and the port should match.
20:28 < euoia> JosephFerano: My aunt is called Joseph. Just kidding. I was referring to rhalff.
20:28 < JosephFerano> rhalff: oh :D
20:28 < JosephFerano> sorry, that was meant for you euo
20:29 < JosephFerano> euoia
20:29 <@mbalho> protip: never assume gender in irc, and never single out someones gender in a public space :)
20:29 < zomg> lulkan: I would guess since sqlite doesn't do transactions or anything it just writes on disk as soon as you stmt.run, so if you did an insert that does multiple rows at once it might be faster
20:29 < rhalff> JosephFerano, and that's why you came here in the first place, you need something to serve your files. From windows *ugh* :D
20:29 < JosephFerano> rhalff: yes, if that what it requires to get around the chrome and i.e. security issues, then yes
20:30 < euoia> mbalho: agreed
20:30 < lulkan> zomg: you're probably right, but still, the resulting file is only like ~170 kb. I wouldn't expect that to take 30 seconds O_O
20:30 < luminous> when would socket.io tell you "welcome to socket.io" instead of your emitted messages?
20:30 < zomg> lulkan: yeah who knows
20:30 < JosephFerano> however, the more we talk about it, the more the build system sounds like the solution, because I can just include the json data inside the js and not have to do any ajax calls
20:30 < lulkan> working with a :memory: db is almost instant
20:30 < lulkan> just like I'd expect
20:31 < euoia> mbalho: also words have gender, humans have sex - so properly you should never assume sex in irc
20:31 < euoia> mbalho: ;)
20:31 < lulkan> can i haz sex
20:31 <@mbalho> lulkan: :(
20:31 < lulkan> :(
20:31 < JosephFerano> but I would still keep those ajax calls in the developer build so we can keep things separated and clean, that's the whole problem here, because the project is going to be pretty big, I want to keep things as small and well organized as possible, meaning a lot of separate json, css, html, and js files
20:31 <@mbalho> euoia: oops good call
20:32 < rhalff> JosephFerano, dunno who was talking before, but just convert your json to javascript variables and you will be ok.
20:32 < luminous> :(
20:32 < JosephFerano> rhalff: thank you
20:32 < JosephFerano> ok guys, guess my next step is reading about shell scripting and getting that build system working
20:33 < luminous> JosephFerano: check out salt
20:33 < luminous> you might find it helpfu
20:33 < luminous> *helpful
20:34 < luminous> though I know virtually nothing about what you are trying to do 
20:34 < JosephFerano> Im getting severals hits on google, can you provide a link?
20:34 < rhalff> euoia, you was right, you are allowed to kick me out :p
20:36 < lulkan> zomg: you were right
20:37 < lulkan> wrapped it up in a transaction and it runs in less than a second now
20:37 < JosephFerano> luminous: ?
20:38 < luminous> JosephFerano: for your 'building and scripting' needs; saltstack.orgf
20:38 < JosephFerano> ok, thank you
20:39 < luminous> :)
20:39 < luminous> anyone interesting in helping a node newb with socket.io?
20:39 < luminous> http://dpaste.de/X4aww/ the errors I get are:  WebSocket is closed before the connection is established. :1 Resource interpreted as Script but transferred with MIME type text/plain: "https://host.tld/portal_registry/stream/socket.io/1/jsonp-polling/Welcome%20to%20socket.io.?t=1368732526939&i=0". socket.io.js:3242 Uncaught SyntaxError: Unexpected  identifier Welcome%20to%20socket.io.:1
20:40 < zomg> lulkan: yeah there's often subtle differences you wouldn't think of with transactions :)
20:40 < lulkan> hmhm, the difference in performance is insane, though
20:40 < zomg> Yeah in this case it is =)
20:42 < rhalff> luminous, mastering reality is much more important :D
20:43 < rhalff> JosephFerano, what build system btw. ?
20:43 < luminous> awwww
20:43 < rhalff> JosephFerano, if your code is static, no clue on what you have to build.
20:43 < JosephFerano> rhalff: anything, like maybe a shell script that automates the concatenation
20:43 < luminous> my forehead hurts from all the head bashing
20:44 < luminous> JosephFerano: for js? like rhino or something? 
20:44 < JosephFerano> don't know, reading up on it now
20:47 < luminous> based on the 4th example in http://socket.io ('Sending and receiving events.
20:47 < luminous> bah, line break
20:47 < technodolt> hi
20:47 < luminous> based on that example, I believe the code is correct: http://dpaste.de/X4aww/
20:47 < technodolt> i feel like an idiot, but i can't seem to get continue to work properly (or what i think is properly)
20:48 < luminous> but then there's the welcome to socket.io message instead of the what I'd expect
20:48 < rhalff_>   /clear
20:48 < technodolt> if i do: for(var blah in "".split("\n")) { continue; console.log("blah"); }
20:48 < technodolt> it does the log line
20:48 < technodolt> even though there is only one element in the thing i'm iterating over
20:48 < rhalff_> techkid6, \si\sdo
20:49 < rhalff_> -
20:51 < rhalff_> wowwwwwwww
20:51 < techkid6> rhalff_: what was that?
20:51 < rhalff_> can anybody here me
20:51 < rhalff_> hear
20:51 < techkid6> s/here/hear/
20:51 < rhalff_> I cannot ghost myself.
20:51  * nightfly__ can
20:51 < techkid6> < rhalff_> techkid6, \si\sdo
20:51 < techkid6> typo?
20:51 < rhalff_> I hope so
20:52 < rhalff> cool, now I can..
20:53 < rhalff> -NickServ- You may not ghost rhalff.
20:54 < technodolt> ok never mind i'm an idiot
20:57 < rhalff> techkid6, thanks for the support.
20:59 < techkid6> rhalff: I was talking about you pinging me....
21:00 < rhalff> techkid6, I never did any pings.
21:00 < techkid6> 20:48 < rhalff_> techkid6, \si\sdo
21:00 < techkid6> 12 minutes ago, and then again three minutes ago
21:01 < rhalff> techkid6, yep, that's not me, maybe that's because I couldn't ghost myself.
21:01 < techkid6> Ah, ok :P
21:01 < techkid6> I was like....... erm....
21:02 < rhalff> techkid6, what's \si\sdo anway. 
21:02 < techkid6> Idk, you sent it
21:03 < rhalff> techkid6, I didn't, but the the translation is,  'i do'
21:03 < techkid6> Oh! It was a response to technodolt, translated from regex to i do
21:05  * rhalff goes to the center of town again, smashed_in_the_face++;
21:09  * rhalff you do not have to be a hacker to use ratpoison *doesn't like the name* http://www.,nognu.org/ratpoison/ 
21:09 < draginx> are there any benchmark testers? Like a buster but for checking performance? O_o
21:09  * rhalff you do not have to be a hacker to use ratpoison *doesn't like the name* http://www.nognu.org/ratpoison/ 
21:17 < thisismon> i'm trying to add a timeout to my http request
21:17 < thisismon> var req = http.request({ host: …
21:17 < thisismon> req.on('socket', function (socket) {
21:17 < thisismon> socket.setTimeout(5000, function() { console.debug("Got Timeout") } )
21:17 < thisismon> then req.write… and req.end
21:18 < thisismon> this sends a request to a php script where I have a sleep call
21:18 < thisismon> however, the timeout event never seems to fire, and I don't see "Got Timeout" printed
21:18 < thisismon> anyone have any idea what is going on?
22:05 < mscdex> thisismon: did you try setting the timeout _after_ the write() and end() ?
22:07 < mscdex> thisismon: or try something like `socket.setTimeout(5000); socket.on('timeout', function() { console.log('timeout!'); });` ?
22:08 < Stumbler> the timeout is only fired if the connection is never established, or if you get no return at all during timeout duration.  a 404 will even cause the timeout to expire before being fired?
22:08 < thisismon> i just found this issue: https://github.com/joyent/node/issues/1022
22:08 < thisismon> seems like it has never been fixed?
22:10 < Stumbler> so you're using long polling then?
22:10 < thisismon> no i'm not, its a regular https call to a php script
22:11 < thisismon> let me try a regular http call instead of https
22:12 < Stumbler> if the php script is returning a value, and closing the connection (as per the http get standard) then the timeout won't have fired.  the only reason it would fire is if the php script didn't return an end of data /n/n on it's return in the 5 seconds you've given it
22:12 < thisismon> yeah in my php script I put sleep(999999)
22:13 < thisismon> so it's not returning anything in the 5 second window
22:13 < mscdex> thisismon: it's easy enough to just use a regular setTimeout()
22:13 < mscdex> thisismon: just start it on the 'socket' event, clear it in the 'response' event
22:15 < thisismon> mscdex: what do you mean by clearing it?
22:15 < mscdex> clearTimeout()
22:15 < thisismon> ok that works
22:16 < Stumbler> hmmmm, nifty.. so I guess (did a quick test), the setTimeout only ever fires if you can't establish a connection at all.   I get the timeoutfunction call if I point at an ip address that doesn't exist on my network, but not if I point it at anything else)    Guess it's moot now though, just learned something new :D
22:17 < myndzi> don't suppose any of you happen to know how browsers deal with cookies when making parallel connections?
22:17 < thisismon> myndzi: what's your question
22:17 < mscdex> huh?
22:17 < myndzi> well, my question is how cookies are resolved
22:18 < myndzi> if a browser makes two separate connections at the same-ish time
22:18 < myndzi> it sends what and does what with the response? what if the responses give different set-cookie headers?
22:18 < mscdex> i'm pretty sure it depends on the order of the responses
22:19 < thisismon> if both responses set same cookie value
22:19 < thisismon> they would overwrite
22:19 < myndzi> so the latest one is the one that gets kept
22:19 < mscdex> yeah
22:19 < myndzi> k, i was guessing about the same thing but i didn't know
22:20 < mscdex> you could double check by creating a test
22:20 < ImDeity> Hi all: I have a question regarding mysql and the async library that has me stumped:
22:20 < ImDeity> http://pastie.org/private/tpgnnrp4xjdq4kkdhw8ba
22:20 < myndzi> seems like a complicated test to get right
22:20 < myndzi> and i'm not sure i care ;)
22:20 < ImDeity> I need the function to return the result in 'var answer'
22:20 < ImDeity> any ideas?
22:20 < myndzi> i mean, it's easier just to keep the latest
22:21 < myndzi> and i don't think it'll be problematic
22:21 < myndzi> ImDeity: you can't return a result from the future
22:21 < myndzi> the function returns before the database query completes
22:21 < thisismon> ImDeity: you need to pass in a callback to your get_answer function
22:21 < myndzi> you'll need to give a callback to get_answer
22:22 < ImDeity> so i need to functions each with an async.series?
22:22 < ImDeity> *2 functions
22:22 < myndzi> er?
22:22 < myndzi> the point of async is to make this sort of thing easier
22:22 < thisismon> that database query is not actually executed until the next tick
22:22 < myndzi> if you have a query that depends on the result of another query, etc.
22:23 < myndzi> you would make ONE series and put the queries one after the other
22:23 < myndzi> with a final callback to do something with the result
22:23 < ImDeity> so a callback(null, rows[0].conf_value)?
22:23 < myndzi> it's a bit pointless to call async.series with only one function
22:23 < myndzi> something like that, not familiar with async
22:24 < myndzi> (the library, i mean)
22:25 < ImDeity> http://pastie.org/private/kg4vitd8cxm9o6rxsqewgw
22:25 < ImDeity> new version. the thing that confuses me is how to get the result from the callback
22:25 < ImDeity> so i can continue processing it in the get_config
22:25 < mscdex> ImDeity: https://gist.github.com/mscdex/6edbc43bb2e7d0d89afe
22:25 < myndzi> errr.
22:26 < myndzi> ^ what he said
22:26 < ImDeity> ah! thanks much guys
22:26 < ImDeity> this has been bugging me for 2 days
22:26 < myndzi> once you go async you can't go back
22:26 < myndzi> :P
22:26 < myndzi> just think of it like that
22:26 < myndzi> if one step in your logic needs an async call, the rest will need to be async too
22:27 < myndzi> and that's what async.series is designed to help with
22:27 < myndzi> by handling chaining the callbacks and stuff for you and preventing a huge nested set of functions
22:28 < ImDeity> I see, I had an idea of how the callback() worked in terms of continuing exection but wasn't sure how to pass and handle values through the callback()
22:28 < myndzi> is callback part of async?
22:28 < thisismon> myndzi: are you familiar with node's threading model? for example, that database query will be executed on another thread on the next tick?
22:28 < ImDeity> yes it has a built in callback I believe
22:28 < myndzi> what threads?
22:29 < myndzi> ImDeity: then the usual format is function (error, result)
22:29 < myndzi> if there's no error, error will be null
22:29 < myndzi> so when you're done doing whatever, you call callback with either an error or a result
22:29 < myndzi> and async moves on to the next thing
22:29 < ImDeity> ah
22:29 < myndzi> thisismon: node doesn't use threads* (*it might internally, i don't know the details)
22:29 < thisismon> myndzi: node isn't actually single threaded from what I gather. all your javascript does execute on 1 thread, but IO for example gets executed on another thread
22:30 < Havvy> It uses threads internally.
22:30 < Havvy> But the JS is all on a single thread.
22:30 < Havvy> Think of it as a cooperative multitasking system.
22:30 < thisismon> yeah I was just curious on how the internal threading works
22:30 < myndzi> ah, that's beyond my knowledge
22:30 < myndzi> i imagine it just goes on processing everything it's able to while waiting for io to complete
22:30 < Havvy> I'm just a user. Sorry.
22:31 < mscdex> threads are only used for filesystem stuff (not sure if this is the case on Windows though, I always forget)
22:31 < mscdex> as far as node is concerned
22:32 < thisismon> yeah I was interested in the how the inter thread communication happens
22:32 < thisismon> there's nothing too helpful on the internet
22:32 < mscdex> thisismon: network and other non-fs io is done on the same thread
22:32 < myndzi> you could always read the source :V
22:32 < myndzi> i find that's how i have to answer most of my questions heh
22:33 < myndzi> but i don't get into the C++ part
22:33 < thisismon> mscdex: are you sure network calls happeon on the same thread?
22:33 < mscdex> thisismon: yes
22:33 < thisismon> that would imply an http call blocking all your code?
22:33 < myndzi> don't confuse threading with synchronicity
22:33 < mscdex> thisismon: non-blocking calls are used, not blocking
22:34 < thisismon> oh right ok
22:34 < myndzi> if you were working in a subway, network calls would be like putting something in the microwave and then helping someone else
22:34 < myndzi> hehe
22:34 < myndzi> there's still only one of you
22:34 < mscdex> wait, a transportation subway?
22:34 < myndzi> unfortunately, most subway dudes i see use 'blocking' calls :P
22:34 < mscdex> ;-)
22:34 < myndzi> no sandwiches
22:47 < bhurlow> hey noders
22:47 < bhurlow> I've a hosting question 
22:52 < thisismon> ok so i've verified https://github.com/joyent/node/issues/1022 is a real issue
22:52 < thisismon> the timeout fires normally as expected on an http call
22:53 < thisismon> but not on an https call
23:00 < MiniGod> Hello everyone. Does anyone know of a RPC module that lets me call methods on both ends (server to server) and also supports authentication?
23:01 < mscdex> dnode?
23:02 < bhurlow> there's also one called fast...
23:02 < MiniGod> does dnode have authentication?
23:02 < bhurlow> any recommendations for restarting node apps on reboot?
23:02 < bhurlow> i.e. as a service 
23:03 < bhurlow> linux style
23:03 < mscdex> MiniGod: i dunno, but you could always expose an 'auth' method and not allow any other functions until correctly authenticated
23:04 < bhurlow> https://github.com/substack/secure-peer
23:04 < MiniGod> bhurlow: fast looks interesting..
23:04 < bhurlow> i haven't tried it
23:04 < bhurlow> hear about it on last Nodeup
23:04 < bhurlow> sounds similar 
23:07 <@MI6> joyent/node: Trevor Norris master * 7998843 : fs_event: use cached Persistent syms instead (+1 more commits) - http://git.io/pQNjbg
23:09 < granjef3> im trying to install socket.io with npm, and in my package.json i have "socket.io": "0.9.14"
23:09 < granjef3> but it errors out, saying unauthorized Name or password
23:10 < granjef3> and if i try to install latest, it installes 0.9.10
23:10 < granjef3> which is not the latest socket.io version... why isnt this working?
23:14 < MiniGod> mscdex: im kinda lost how i would only expose auth untill authenticated?
23:15 < Fusl> var test = new Array("aaa", "bbb"); how to push these two values into variables? in php there is a function that does this, but i forgot the name: $array = array("aaa", "bbb"); xyz($vara, $varb); $vara now has "aaa" and $varb now has "bbb"...
23:15 < mscdex> MiniGod: the other methods would be exposed, but they just wouldn't do anything until some conditional passes
23:16 < granjef3> hmph... was an issue with my npm login
23:16 < mscdex> MiniGod: e.g. `var authenticated = false; function auth(user, pwd) { if (isValid) authenticated = true; } function doSomething() { if (authenticated) {} }`
23:18 < MiniGod> Fusl: in php that is called list. there is no such function in js, you could do `var vara = test.shift(), varb = test.shift()`. keep in mind that it will also remove the elements from the array.
23:19 < mscdex> MiniGod: you can do it in js with ES6
23:19 < mscdex> it's called destructuring assignment
23:20 < MiniGod> mscdex: i have not looked much into ES6 yet :)
23:20 < Havvy> MiniGod: [x, y] = [1, 2]
23:21 < MiniGod> Havvy: oh. interesting. like coffeescript.
23:21 < Havvy> More like Python.
23:21 < Fusl> MiniGod: thank you, it was list... but i need something where i do not need to set the variable... lets say i have a function: test() { return new Array("a", "b"); }; ... i do not want to set a new variable with the information i get from this function... in php i would do list($vara, $varb) = test();
23:22 < Havvy> Use use ['a', 'b'] instead of new Array()
23:22 < Fusl> Havvy: i know :D
23:22 < Fusl> wait Havvy... [x, y] = [1, 2] this?
23:23 < gildean> either point to the index of the value in the array, or use an object
23:23 < Havvy> Fusl: That's called destructuring. It's in the ES6 spec, but it's not in any current implementation.
23:23 < MiniGod> mscdex: (dnoe) would i then have to do as the "stream" example? because the normal way doesn't seem to have a scope for the connecting client.
23:24 < Fusl> Havvy: ah, thanks
23:24 < gildean> Fusl: is there a reason you can't use an object instead?
23:24 < Havvy> Destructuring is also in PHP as list(), Python, and Coffeescript.
23:24 < mscdex> MiniGod: probably
23:24 < doryz> hi.
23:25 < doryz> I am trying to design a widget template engine using dust templates
23:25 < doryz> and I'm not sure what's the best approach..
23:25 < doryz> I have three ideas of how to tackle it.
23:25 < doryz> http://stackoverflow.com/questions/16598465/widgets-template-system-using-node-js-with-dust-server-side-templates
23:25 < Fusl> gildean: cause i need it exactly once and not always
23:25 < doryz> can one of you expert node.js guys tell me what's the best way to tackle this?
23:26 < doryz> I've done lots of js and websites..and I'm really confused..
23:26 < bhurlow> anyone have a good high-level abstraction for a node init.d script?
23:27 < MiniGod>  bhurlow: https://github.com/chovy/node-startup
23:28 < doryz> can anyone suggest how to render widgets in node.js ?
23:28 < doryz> what's the best way to do that?
23:28 < doryz> use app.render to render various parats?
23:28 < bhurlow> @MiniGod thnx
23:28 < bhurlow> thats what I was trying actually
23:29 < gildean> Fusl: an array is an object too, it just uses numerical indexes instead of keys and has some different properties (like length)
23:29 < samholmes> If I have a node_modules dir in my /public/scripts dir, would all js files under /public/scripts dir be able to require modules from this node_modules?
23:29 < samholmes> I'm using browserify
23:29 < samholmes> will /public/script/a.js be able to access /public/scripts/node_modules/b.js with require('b')?
23:30 < samholmes> will /public/script/foo/a.js be able to access /public/scripts/node_modules/b.js with require('b')?
23:30 < doryz> any suggestions to how I should tackle this ?? - http://stackoverflow.com/questions/16598465/widgets-template-system-using-node-js-with-dust-server-side-templates 
23:30 < Fusl> gildean: you mean.. set a variable and fill it with output form the function and then run the script and access the variable all the time? don't know exactly what you mean, sorry :$
23:33 < bhurlow> doryz: you might be able to precompile templates in the backend..
23:33 < E_mE_> anyone had any encounters with: HPE_INVALID_CONSTANT ?
23:33 < bhurlow> doryz: https://github.com/component/component has some good tools for making html work with js
23:33 < Havvy> I'm not seen that before.
23:33 < Havvy> Sorry E_mE.
23:33 < gildean> Fusl: i'm not really sure what you're after either, can you show some code?
23:34 < Fusl> gildean: sure.. wait a minute
23:34 < E_mE_> i appear to get the data response from the request, but in request.on('end',…); it throws: { [Error: Parse Error] bytesParsed: 7073, code: 'HPE_INVALID_CONSTANT', line: 66 }
23:34 < bhurlow> doryz: obviously your going to have to serve the js and css for each widget somehwere
23:35 < samholmes> Where can node_modules be?
23:35 < segomos__> put at root
23:35 < segomos__> \/
23:35 < MiniGod> samholmes: http://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders
23:35 < bhurlow> doryz: your option a looks like what I would do
23:37 < samholmes> MiniGod: Ah. Sense app.js is usually in my project root dir, then node will find node_modules on the first attempt?
23:37 < samholmes> MiniGod: Are you familiar with browserify? Where's the "current module" when it comes to browserify? Is it the bundle.js file? I'd suppose so.
23:37 < doryz> bhurlow: that was my thoughts exactly..it was designed to run once..
23:38 < Havvy> sambarino: #browserify
23:38 < doryz> bhurlow: the other solutions feel a lot hackier, besides I'm scared that the rendering might also be syncronous rather than asyc..where fetching the data I can do async..
23:42 < cococo> what command should I type to know node,js version?
23:43 < MiniGod> node -v
23:44 < Fusl> gildean: sorry, something screwed up my code... had to fix it.. here you go: http://pastebin.com/7tcX1vW4
23:44 < cococo> thanks
23:46 < MiniGod> Fusl: why dont you just return an object?
23:47 < Fusl> return {min: range[0], max: range[1]};?
23:47 < MiniGod> yes
23:47 < MiniGod> Fusl: you wouldn't really need the range array any more though..
23:48 < Fusl> MiniGod: i would only need the range array to return the two addresses :D
23:49 < Fusl> MiniGod: now i get this:
23:49 < Fusl>         var {min, max} = cidrange(argv.range);
23:49 < Fusl>             ^ SyntaxError: Unexpected token {
23:50 <@isaacbw> that's not valid javascript syntax
23:50 < MiniGod> you cant do it like that
23:50 < Fusl> wanna fix it? :D
23:50 < MiniGod> use `var range = cidrange(argv.range);`, then you have `range.max`, and `range.min`.
23:50 <@isaacbw> you can't just make stuff up
23:51 < Fusl> ah, i see
23:51 <@isaacbw> https://developer.mozilla.org/en-US/docs/JavaScript/Guide
23:52 < LegCow> coming from c#, javascript has very attractive features
23:53 < LLckfan> Does any1 know how to stop Shockwave flash from crashing? I have uninstalled both Flash and my browser (Chrome), installed both from a fresh download, and scanned my computer (come up clean). Everything is updated
23:53 < MiniGod> flash != node
23:55 < MiniGod> either way, flash comes along with chrome. you dont have to install it manually (unless you need it somewhere else than chrome)
23:57 < vampi-the-frog> hi guys. when using express.js, is there a way to add a method to the response object?
23:58 < vampi-the-frog> I'd like to add a method to serve a static file (unless one exists, which I haven't found yet).
23:58 < vampi-the-frog> oh wait I found it >_>
23:58 < vampi-the-frog> it's res.sendfile()
23:58 < vampi-the-frog> well thanks you've been great
23:58 < chilts> :)
23:58 < chilts> pleasure
--- Log closed Fri May 17 00:00:10 2013
