--- Log opened Fri May 31 00:00:35 2013
--- Day changed Fri May 31 2013
00:00 < AAA_awright> Also HTTP calls reverse proxies "gateways", as in 502 Bad Gateway
00:00 < williamplaid> I have a geoJSON file that's about 8gb - any thoughts on how to process that in node?
00:03 < Ganymede> So I'm reading http://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html#sec8.2.3 and apparently, it's valid behavior to close a TCP connection if the server does not want to accept the POST...
00:03 < Ganymede> I'm wondering how that works with pipelining...what happens with the remaining requests in the pipeline?
00:03 < AAA_awright> They're not filled, it has to retry the idempotent requests, if any
00:05 < Ganymede> Ah, I see. That answers all my questions then. I think I'm good, thanks AAA_awright.
00:05 < Ganymede> Wait...actually...what if an unanswered request was a POST?
00:06 < Ganymede> Would the client repeat the POST in a new TCP connection? Wouldn't that potentially result in a double-POST?
00:06 < s5fs> williamplaid: streams?
00:06 < Ganymede> ...ah, never mind again. POSTs don't get pipelined.
00:06 < AAA_awright> The user-agent would have to determine that on its own, like by prompting the user, or using some external means to see if the POST was accepted
00:07 < AAA_awright> And that too, I mean if you never get a response to a POST request in general
00:09 < williamplaid> s5fs: Yep - that's what I just did - thanks!
00:15 < shreds> Hi
00:16 < shreds> I'm trying to fetch a web page html using http.get() and then I'd like to select a DIV from the html and get an attribute of that element. Is there any way of using DOM selectors in a string containing a whole HTML document?
00:17 -!- mode/#Node.js [+o Nexxy] by ChanServ
00:24 < meltz> shreds: http://stackoverflow.com/questions/7372972/how-do-i-parse-a-html-page-with-node-js
00:25 < rhalff> shreds, I'm using htmlparser2 at the moment, suits my needs.
00:26 < shreds> perfect! thanks
00:50 -!- mode/#Node.js [+o Nexxy] by ChanServ
01:01 < inspiron> what is an easy way to move a folder in node.js
01:02 <@mbalho> npm search
01:07 < shreds> Hi again
01:07 < shreds> I'm trying to write an image on disk, getting that image from a server location
01:07 < shreds> It gives me this: https://c9.io/tbergeron/bing_wallpaper/workspace/DwarfGoby_EN-US10799805743_1366x768.jpg a corrupted image
01:08 <@mbalho> require('request')('imageurl.com').pipe(require('fs').createWriteStream('image.jpg'))
01:09 < shreds> oh wow
01:09 <@Nexxy> IT SO SIMPLE
01:10 <@mbalho> step 1 to node.js enlightenment: read nodejs.org/api front to back
01:10 <@mbalho> step 2 to node.js enlightenment: use npm search
01:10 <@mbalho> there is no step 3
01:11 < ningu> mbalho: you are maxogden right?
01:11 < shreds> I read a lot of the API but I was using 0.8, so now I'm outdated a little
01:11 < shreds> I should read it back a bit hehe
01:11 < shreds> but yeah so simple :D
01:12 < shreds> I'm a super stream noob
01:16 < shreds> any cool package to run bash scripts?
01:16 <@mbalho> ningu: maybe
01:16 < shreds> child_process looks like what I want
01:16 < ningu> shreds: huh? what's hard about running bash scripts?
01:16 < ningu> oh, you mean from within node
01:17 < shreds> yeah hehe
01:17 < ningu> mbalho: someone noticed yesterday that voxel-gist won't install cause of dependency conflicts for voxel-engine
01:17 <@mbalho> ningu: oh yea i think its being fixed
01:17 < ningu> ok just confirming it was a real issue
01:18 <@mbalho> ningu: peer deps were too strict
01:18 < ningu> sounds like it, yeah
01:18 < ningu> what is a peer dep anyway?
01:18 <@mbalho> it lets you say which versions of a module your module is compatible with
01:18 < chilts> useful for packages which have plugins
01:18 < chilts> so the plugins can peerDepend on the maint hing
01:18 < chilts> e.g. awssum-amazon-s3 peerDepends on awssum-amazon which peerDepends on awssum :)
01:19 < ningu> ok but how is that different from a dependency?
01:19 < ningu> I guess because that module does not require() the thing, the thing uses it
01:19 < shreds> I'd need to run this little bash script https://gist.github.com/tbergeron/5682415 within child_process, anyone has an idea? thx
01:19 < ningu> I don't really understand how to do plugins in node, though
01:19 < chilts> ningu: means each plugin doesn't install the thing it depends on a hundred times for each plugin
01:20 < ningu> yeah, that makes sense
01:20 < chilts> and they're all then using exactly the same version and instances
01:20 < ningu> shreds: an idea for what?
01:20 < ningu> child_process.spawn is usually what you want
01:20 < chilts> ie. the version of awssum that awssum-amazon-s3 and awssum-amazon-ec2 are using is the same, rather than each getting their own copy :)
01:20 < chilts> ningu: does that make sense?
01:20 < shreds> how I could pass these line breaks and -e in a parameter for child_process
01:20 < shreds> 'm kinda lost with that part
01:21 < ningu> chilts: yeah... so it means it will be at the top level of node_modules? do you still require() it from the plugin?
01:21 < chilts> yep to both
01:21 < chilts> also, people can depend on awssum-amazon-s3 and not specify (and not care) the underlying versions
01:21 < julianduque> shreds: require('child_process').spawn('./myscript.sh).stdout.pipe(process.stdout);
01:21 < ningu> shreds: spawn takes an array of arguments
01:22 < shreds> julianduque: good point
01:22 < chilts> lunchtime :)
01:22 < pinja> anyone using istanbul w/ browserify?
01:24 < Praful> is there a website that has online node.js boxes ready to go with sample code?
01:25 < niggler> going to be in SF for a few days -- anything I should see?
01:25 < niggler> Praful define "boxes"
01:25 < julianduque> Praful: c9.io and 
01:25 < julianduque> http://jsapp.us/
01:25 < Praful> Just somewhere I can drop my .js code and make it run
01:25 < Praful> can i do fs.writes?
01:26 < ningu> niggler: what stuff do you like?
01:26 <@Nexxy> Praful, nodejitsu perhaps
01:26 < julianduque> on c9.io yes, on jsapp.us don't know
01:26 < julianduque> Praful: you want a hosting or something like jsbin or jsfiddle?
01:26 < ningu> niggler: city stuff, or you mean going out of the city to hike or whatever
01:26 < niggler> ningu heh its been so long since i took a vacation
01:26 < gkatsev> yes, you can write files on jsapp.us, though, you're very limited
01:26 < niggler> i want to explore the city this time
01:26 < gkatsev> and you need to login.
01:27 < niggler> mostly scoping out apartments, but i need to figure out what I'm going to spend the nights doing
01:27 < gkatsev> also, it seems to be mostly abandoned.
01:27 < ningu> niggler: ah, are you moving here? (I'm in SF so that's here :)
01:27 < niggler> also ningu do you know of any places that run on new york time?  i was appalled to find out that the starbucks in union square opened at 8 AM
01:27 < ningu> haha
01:27 < niggler> my sister, in a few months
01:28 < niggler> the problem with that ningu is that I want to maintain new york time (and I usually get up around 6 AM, which would be 3 AM in SF)
01:28 < ningu> niggler: what sort of "places"? my gf who is from manhattan says she doesn't have any suggestions. I'm never up that early myself :)
01:28 < gkatsev> niggler: in SF, go to the Academy of Science in golden gate park.
01:28 < niggler> lets first start with coffee shops
01:28 < niggler> ill need coffee at one point
01:29 < gkatsev> niggler: ritual coffee. Blue bottle coffee.
01:29 < ningu> niggler: I see. well you can make coffee at home. but I know various places open at 7
01:29 < gkatsev> there's also that third one that I don't know the name off
01:29 < ningu> gkatsev: philz?
01:29 < julianduque> I will arrive to SF at June 24 for Nodeconf, i'm planning to visit Noisebridge, it's good?
01:29 < ningu> niggler: no coffee at 3am unless you have 24 hour room service
01:29 < julianduque> also any recommended places to visit are welcome :)
01:30 < gkatsev> ningu: yeah, might be
01:30 < Praful> Mint Mojito @Philz
01:30 < niggler> yeah that's probably what I'll do ningu 
01:30 < niggler> ritual opens at 6/7
01:30 < Praful> Has anyone tired nitrous.io? Is it good?
01:30 < ningu> ritual is just one location though
01:30 < ningu> but it's good
01:30 < gkatsev> http://www.youtube.com/watch?v=oMqutKBS5iE
01:31 < ningu> expensive drip coffee
01:31 < ningu> there are plenty of non-starbucks in the mission which open early too, I'm sure
01:31 < ningu> downtown starbucks hours can be a bit odd
01:31 < XBOCT> Hello all, how would I structure an application where I have multiple modules that all require the same database module, and that database module should only be loaded once in total for all the modules because I only want one active connection to the DB?
01:32 < XBOCT> Right now I'm considering doing something like myModule.exports.db = db; from the index module to set the db into the exports, then access the db using exports.db from within the module itself. would that work?
01:32 < ningu> XBOCT: make a db.js that exports the db connection object
01:33 < ningu> XBOCT: require'd modules are cached
01:33 < ningu> so only loaded once per process
01:33 < XBOCT> oh? Because I was doing it that way before
01:33 < XBOCT> but my DBS is saying there's 4 active connections as soon as i start the applicaiton
01:33 < XBOCT> and i have require() on my db module 4 times in total
01:33 < XBOCT> in 4 different places
01:33 < XBOCT> so i figured that's what's going on...
01:34 < ningu> XBOCT: are you exporting a connect method and calling it? or exporting the connection object?
01:34 < ningu> also, are you using a connection pool?
01:34 < XBOCT> exporting the connection object
01:34 < XBOCT> i call the connect() method inside the db.js module then export the db object
01:34 < XBOCT> and it won't let you call connect twice on it anyways, throws an exception
01:34 < ningu> well, based on what you said it sounds reasonable
01:35 < ningu> depends on the specifics of the db driver you're using how it maintains its connections
01:35 < shreds> Hi again
01:35 < XBOCT> i'm using mongodb via mongojs as middleware
01:35 < XBOCT> though im considering dropping it and going for mongoose instead
01:35 < shreds> When you told me "request(wallpaperUrl).pipe(fs.createWriteStream(wallpaperFilename));"
01:35 < XBOCT> because i'm having a ton of headaches with mongojs :(
01:35 < shreds> You didn't tell me how to get the 'end' event? :P
01:36 < shreds> I'm so clueless using streams that I don't even know how to do it properly, even looking at the docs leave me clueless
01:36 < julianduque> shreds: it's a pipe so data & end are implicit
01:37 < shreds> but the next method call gets executed before the end of it
01:37 < shreds> since they're implicit how can I make them explicit based on that example?
01:37 < shreds> if you tell me this, you'll make me learn something about streams and you'll make a miracle hehe
01:38 < gkatsev> niggler: also, you should make the trek out to Mountain View to the Computer History museum.
01:39 < niggler> how far is that?
01:39 < gkatsev> um... 40 minutes?
01:39 < deoxxa> 40 minutes is way too long
01:41 < ningu> 40 minutes is not long for the bay area
01:43 < shreds> Hey guys, I know this sounds silly but in this example request(wallpaperUrl).pipe(fs.createWriteStream(wallpaperFilename)); how could I get the 'end' event so I know when its done? thanks a lot
01:43 < niggler> i assume renting a car is a bad idea
01:43 < gkatsev> there is the caltrain for mountain view
01:43 < deoxxa> shreds: request(wallpaperUrl).on("end", ...).pipe(fs.create...)
01:43 < gkatsev> inside there's the bart, partially
01:43 < gkatsev> and some buses
01:44 < shreds> ah what
01:44 < gkatsev> but you should probably just stick to uber
01:44 < shreds> that's like the only thing I didn't tried
01:44 < shreds> thanks a lot
01:44 < deoxxa> shreds: :>
01:44 < XBOCT> anyone have experience with the 'mongoose' module? how is it? is it worth using over mongojs or other similar middleware for talking to a mongodb server?
01:44 < niggler> oh no gkatsev i meant in general
01:44 < niggler> for going around SF
01:45 < gkatsev> yeah, car is not a good thing to have in SF
01:45 < deoxxa> unless it has lasers
01:45 < julianduque> lol
01:46 < gkatsev> unless it has sharks.
01:46 < gkatsev> sharks with lasers.
01:49 < ssafejava> XBOCT: I used mongoose for a project a long time ago. Pretty decent IMO
01:50 < ssafejava> XBOCT: It has really nice schema definition syntax and the pre/post hooks on validate/save/remove etc can be lifesavers for code reuse
01:51 < ljharb> XBOCT: i use mongoose. it's great. you can ask questions in ##mongoosejs
01:52 < ssafejava> Haven't used it in a while but 3.6 seems to address one of my biggest issues: populate support. Could never get used to a lack of joins in Mongo, but it helps
01:54 < eliezerb> Hey
01:56 < ljharb> populate always worked - it's just much better in 3.6
01:56 < eliezerb> Someone has a good tip of book to getting started with Node.js?
01:57 < ssafejava> ljharb: Yeah, that's what I meant - upon rereading my message I didn't quite write that. Populate was pretty janky in 2.x
01:57 < ljharb> only for more than 1 populate per doc, or for nested populates. but yeah
02:00 < ChrisPartridge> eliezerb: what do you want to do with node?
02:01 < eliezerb> ChrisPartridge: hey, thanks for return, well, i read a lot about node.js, and I'm interested and learning the beggining
02:05 < ChrisPartridge> eliezerb: I'd suggest coming up with something you want to build - otherwise google is your friend for generic getting started stuff
02:06 < ChrisPartridge> theres also http://www.nodebeginner.org/
02:06 < niggler> eliezerb hows your javascript?
02:08 < eliezerb> ChrisPartridge: Ok, I guess that i find something in "Smashing Node.js". It's pretty good :) I'am a Java developer, using Java servers
02:09 < eliezerb> ChrisPartridge: I was thinking about build something integrating Node.js and my Raspberry Pi
02:11 < ChrisPartridge> eliezerb: sounds good!
02:12 < eliezerb> ChrisPartridge: I imagine that this is the ideia of node.js, put JavaScript everywhere. And has a raspi with a server, retrieving data from hardware it will be really nice
02:14 < eliezerb> ChrisPartridge: I have to build something to obtain my degree. Do you think that i could do that using node.js? Maybe building a library? Or already exist something to do that? (I could search on google, but I like to know what other devs say about that :D) 
02:15 < garthk> Anyone here use ldapjs?
02:23 < niggler> eliezerb physical?
02:24 < eliezerb> niggler: my degree?
02:25 < niggler> you said you needed to build something
02:26 < niggler> is it like EE building something or CS building something
02:26 < eliezerb> niggler: CS something
02:26 < niggler> write your own compile-to-js languages
02:27 <@isaacbw> "could I build something using node.js" yes
02:27 <@isaacbw> but that's not a very useful question to ask :P
02:27 <@isaacbw> you can build something out of most things
02:27 < niggler> or write a language for describing compile-to-js languages (design your own lex/yacc or whatever)
02:27 < niggler> or write a language for describing languages for describing compile-to-js languages
02:27 <@isaacbw> write a compiler-to-js random language generator
02:28 < eliezerb> niggler: so, I could build a C library to "convert" js commands in C
02:28 < eliezerb> oops JavaScript library
02:28 < ssafejava> wat
02:28 < niggler> iirc jison was a school project
02:28 < niggler> or something like that
02:28 < IrishGringo> best IDE for a mac?  I am a newby-sh and looking for way to learn
02:28 < IrishGringo> I just installed nodeclipse and not sure thats the best
02:29 < ssafejava> IrishGringo: try Sublime text
02:29 < niggler> IrishGringo macvim
02:29 < eliezerb> niggler: that's great, I try to do that
02:29 < eliezerb> I have some time avaliable to do that
02:29 < ssafejava> imo eclipse is way too heavyweight for JS. lightweight editors generally do fine
02:29 < deoxxa> i use nano because i'm stupid
02:30 < niggler> eliezerb have you been through the dragon book (or taken a course on compilers or programming languages)?
02:30 < niggler> deoxxa nano is a pretty solid editor
02:30 < deoxxa> yeah, it gets the job done
02:30 < ssafejava> nano with screen/tmux works great for remote editing
02:30 < deoxxa> seems to exist everywhere
02:30 < eliezerb> niggler: I have this course next month at university
02:31 < eliezerb> niggler: And I already program the basics in C and Assembly
02:51 < IrishGringo> ssafejava: I just tried using nodeeclipse...  and it isn't so bad... are you saying Sublime and macvim is better?
02:52 < Havvy> IrishGringo: I use Sublime Text. Works like a charm.
02:52 < ssafejava> IrishGringo: vim has a pretty high learning curve but it's worth it. Sublime will hold your hand a bit less than nodeclipse but it has great linters, searching, multiple selection, great performance, etc.... it's worth trying
02:53 < Havvy> Also costs $70.
02:53 < ssafejava> Well worth it, and the evaluation version is full-featured.
02:53 < IrishGringo> I do android dev, and it would be nice not to mess my eclipse up with other stuff... OK... will try the others.
02:54 < IrishGringo> I noticed that about sublime...  is it suppose to crash on my sometime?  
02:54 < Havvy> No. It just has an 'extra' feature.
02:54 < ssafejava> Haha define 'supposed to crash'.
02:54 < Havvy> It'll throw up an alert every 30-50 saves asking you to buy it.
02:55 < nathan28> stop being cheap and just pay for a license
02:56 < deoxxa> $70 isn't exactly nothing
02:56 < ssafejava> nathan28: what's with the hostility
02:56 < deoxxa> especially when you're not sure if you like it or not yet
02:57 < nathan28> idk, i heard that vim was free and just as good
02:57 < IrishGringo> nodeeclipse seems to be cutting the mustard pretty good... and its free
02:58 < ssafejava> If you program for a living, $70 is nothing if it makes you more productive.
02:58 < IrishGringo> 3K laptop, 800 tablet... $70 isn't so bad.
02:59 < Zolmeister> I wouldn't recommend VIM, not because it isn't good, its just that its not better than other editors and is much more difficult to learn
02:59 < nathan28> lol
02:59 < IrishGringo> My recipricating saw from home depot that I hardly ever use...   $300
03:00 < IrishGringo> cloud9???
03:00 < nathan28> it's funny, sublime2 even has vim mode
03:00 < nathan28> so does light tables
03:00 < tjkrusinski> the ! operator in vim is nice though as you can run your test files without leaving your editor
03:00 < ssafejava> cloud9 is pretty cool.
03:00 < nathan28> it's like people enjoy using it or something
03:00 < nathan28> how can this be?
03:01 < ChrisPartridge> ST rocks, never had it crash or choke up on a large file and multi-edit is sweet
03:01 < ssafejava> multiple cursors is a godsend once you figure it out
03:02 < IrishGringo> yea... in nodeeclipse.. I have to have a console open to run stuff... and I thought that programs would reload automatically if a file is saved
03:03 < tjkrusinski> you can use nodemon to watch your working directory for file changes
03:03 < tjkrusinski> and it will restart your app for you
03:11 < IrishGringo> I need type ahead.  I get it in xcode...  and I like it...  anyone know of a way to get it in eclipse?
03:13 < deoxxa> IrishGringo: you don't need type-ahead
03:13 < IrishGringo> deoxxa: yea.... I do....  I am an extremely lazy individual
03:15 < Havvy> IrishGringo: SublimeText has type ahead for things you've already typed on the page.
03:38 < alyraz> hello
03:42 < alyraz> hello, I am looping through an array, querying my db for a url and want to then attach this url to each element before rendering my view. except - its not working, my on.('end) listener is never getting triggered. I've tried for loops, _.each, everything. any help would be greatly appreciated!
03:43 < deoxxa> alyraz: 1) paste code 2) ??? 3) profit
03:44 < alyraz>  _.each(availableCampgrounds, function(campground){                 var getPhotoSrc = client.query("SELECT src_url FROM campground_photos WHERE campground_facility_id = ($1)", [ campground.facilityID ]);                 getPhotoSrc.on("end", function(result){                   console.log(result);                   queryCount -1;                   if(queryCount === 0 ) {                     pageRes.render('campgroundResults', {     
03:44 < alyraz> oooh that was bad. sorry i am new to this. 
03:44 < ChrisPartridge> RUN ITS THE CODE MONSTER
03:45 < ningu> hehe
03:45 < deoxxa> alyraz: gist.github.com
03:45 < alyraz> https://gist.github.com/alyraz/d7cfa11e985691350986
03:45 < alyraz> II AM THE CODE MONSTER!!!!!
03:45 < deoxxa> rarrrr
03:45 < ChrisPartridge> winrarrrrr
03:46 < deoxxa> a winrar is you!
03:46 < deoxxa> anyway
03:46 < alyraz> result is never getting logged, just hangs foreva
03:46 < alyraz> and eva eva
03:46 < ChrisPartridge> alyraz: try out caolan's async library
03:46 < deoxxa> this is felixge's mysql library?
03:47 < alyraz> i'd really like to solve it without another dependency, if its possible 
03:47 < alyraz> but thank you Chris!
03:48 < deoxxa> alyraz: that's not how the "end" event works
03:48 < ChrisPartridge> alyraz: understandable
03:48 < garthk> Success! ldapjs is working nicely.
03:49 < deoxxa> alyraz: you want to do something more like client.query("select a, b from c where x = y", function(err, rows, names) { console.log(err, rows, names); })
03:49 < samholmes> How do I do that cool automatic refresh thing for development?
03:49 < alyraz> oops. ok. i've tried on row as well. 
03:49 < ningu> samholmes: nodemon?
03:49 < samholmes> ningu: no the one that refreshes the page
03:49 < ningu> samholmes: oh... like every 5 sec or something?
03:50 < ningu> just use a setTimeout in the js I guess and then window.reload()
03:50 < samholmes> ningu: no, whenever a file changes and is saved, it refreshes the browser for me
03:50 < alyraz> @deoxxa - sorry, you're passing a function into query? 
03:50 < ningu> samholmes: oh. good question. :)
03:50 < samholmes> I've seen this done before
03:50 < deoxxa> alyraz: take a look at https://github.com/felixge/node-mysql#introduction - it's a regular, garden variety callback pattern
03:52 < alyraz> thanks deoxxa, I'll take a look!
03:53 < ningu> samholmes: if nodemon has hooks, you can set up socket.io and attach it to the app reload hook 
03:54 < rhalff> samholmes, you make me curious, something like that would be pretty need in conjunction with nodemon for the server side.
03:55 < samholmes> rhalff: I'd use it in dev, do you mean in production?
03:56 < rhalff> samholmes, no development ofcourse
03:57 < rhalff> samholmes, here is one written in ruby, but ruby is so 2005: http://brettterpstra.com/2011/03/07/watch-for-file-changes-and-refresh-your-browser-automatically/
03:57 < jas-> Does anyone in here help with testing features/branches that are in development?
03:58 < rhalff> works by sending a message to chrome itself. so must not be to difficult to do it in any language I guess.
03:59 < rhalff> hmz, then combine it with sillenium and I would never have to leave my vim window.
03:59 < alyraz> @deoxxa - modified, exact same behavior. worth noting I am using postgres and this module (https://github.com/brianc/node-postgres) which is where I got the on end. here's mu updated code --> https://gist.github.com/alyraz/5682870 any help is apprecited!
04:00 < alyraz> @deoxxa - easier: http://collabedit.com/8j97n (i'm here)
04:08 < rhalff> samholmes, https://github.com/cyrus-and/chrome-remote-interface
04:09 < rhalff> ofcourse you will still have to detect the file change, but hey just run that script with nodemon also and specify the dirs to be watched maybe? :-)
04:11 < sinclair|net> wish nodejs had some built in xml parsing utility
04:11 < deoxxa> npm search xml parser
04:12 < ningu> built in
04:12 < deoxxa> what's "built in"?
04:12 < ningu> no language that I'm aware of has a built-in xml parser
04:12 < deoxxa> is that that thing that php does?
04:12 < ningu> deoxxa: no external dependencies
04:12 < ningu> oh, maybe php does it
04:13 < deoxxa> sinclair|net: it should also have a built-in database client
04:13 < sinclair|net> ningu: im not aware of any language with a "built-in" http / socket infrastructure either
04:13 < deoxxa> sinclair|net: and a built-in templating system
04:13 < deoxxa> sinclair|net: and a built-in etc etc etc
04:13 < ningu> sinclair|net: python has that but no xml parser
04:13 < ChrisPartridge> i wish my app was built into the core
04:13 < samholmes> How would this even work?
04:14 < samholmes> rhalff: i don't see how that relates to refreshing?
04:14 < ningu> how is babby formed?
04:14 < deoxxa> the sensible side of the scale for "how much should be built-in" is closer to 0% than 100%
04:14 < sinclair|net> deoxxa: by that logic, node should remove everything from the core
04:14 < sinclair|net> EVERYTHING
04:14 < deoxxa> that's the plan
04:14 < deoxxa> not even kidding
04:14 < rhalff> samholmes, ok I'll try it mysefl first then.
04:14 < sinclair|net> deoxxa: and replace it with what? native modules?
04:15 < deoxxa> sinclair|net: nope, stuff from npm or wherever else
04:15 < deoxxa> sinclair|net: we've already seen promises removed from core
04:15 < sinclair|net> that will be the day i give up entirely on node
04:15 < deoxxa> and that turned out great
04:15 < deoxxa> now the people who don't want them don't have them, and the people who can't agree on how they should work get to use their own variety
04:16 < deoxxa> say it with me
04:16 < deoxxa> node is not c#
04:16 < chilts> heh
04:16 < sinclair|net> deoxxa: if only everyone could agree on how to actually "code" a module, then perhaps it would be a good idea, but npm is a mess with only a few worthwhile projects
04:16 < deoxxa> lol
04:17 < ningu> deoxxa: maybe it's b-flat?
04:17 < ELLIOTTCABLE> Man, I've done dirty things to purr tonight
04:17  * ELLIOTTCABLE pats purr happily
04:17 < deoxxa> ningu: lol
04:17 < sinclair|net> ningu: that would be d-flat
04:17 < ningu> I think node uses a simpler scale, maybe it's pentatonic
04:18 < sinclair|net> ningu: are you saying nodejs is the musical equivalent to the noob favorite pentatonic scale ?
04:19 < ningu> sinclair|net: if it's good enough for the blues it's good enough for me
04:19 < sinclair|net> ningu: perhaps people should just learn to play a minor scale in whatever be the key, those other notes are useful
04:20 < sinclair|net> ningu: its not enough for the blues, https://s3-ap-southeast-2.amazonaws.com/sinclair-media/music/sinclair_plays_the_blues.mp3
04:20 < sinclair|net> ^ not a single pentatonic
04:21 < ELLIOTTCABLE> -commands
04:21 < purr> ELLIOTTCABLE: Valid commands are: --, -34, -best, -commands, -countdown, -dequeue, -dick, -factoid, -find, -forget, -g, -hates, -learn, -loves, -purr, -queue, -sol, -song, -start, -stop, -topic, -twister, -what, -whohates, -wholoves
04:22 < rhalff> samholmes, you just need to reload a fixed url, or does it have to be a specific url based on whatever file you change?
04:22 < ELLIOTTCABLE> || var a = 123
04:22 < sinclair|net> ningu: here's one i wrote about nodejs https://s3-ap-southeast-2.amazonaws.com/sinclair-media/music/sinclair_shreds_volume_2.mp3
04:22 < ELLIOTTCABLE> ||   , b = 456;
04:22 < ELLIOTTCABLE> >> console.log(a + b);
04:22 < purr> ELLIOTTCABLE: undefined; Console: 579
04:22 < ELLIOTTCABLE> To anyone who cares: I've increased the code-session timeout to something more like thirty seconds, for hand-typed multi-line evals.
04:22  * ELLIOTTCABLE smiles
04:23 < sinclair|net> ningu: if you think it sounds sh*t, i assure you, it was quite intentional 
04:24 < rhalff> waaa, magiccc :)
04:26 < rhalff> samholmes, something like this: nodemon script.js -w ./your/dir , where script.js is just the unmodified version of the example on that page.
04:29 < ChrisPartridge> sinclair|net: almost reminds me of a frank zappa song
04:29 < sinclair|net> ChrisPartridge: zappa is ace
04:30 < sinclair|net> and dead, unfortunately  :(
04:31 < samholmes> rhalff: I"m not following? :\
04:32 < samholmes> Btw, is it a good idea to set the NODE_PATH environmental var, or is this usually a hacky approach?
04:33 < samholmes> Can you set a NODE_PATH env-var for browserify?
04:33 < niggler> sinclair|net you have a list of the "worthwhile" modules?
04:33 < sinclair|net> niggler: i have a few why?
04:33 < deoxxa> countdown to sinclairpm.org
04:33 < niggler> samholmes did you consider running browserify with the variable set to the desired path?
04:34 < samholmes> rhalff: explain what ur doing?
04:34 < sinclair|net> deoxxa: not such a bad idea
04:34 < niggler> sinclair|net I'm curious
04:34 < niggler> i think we need a curated list
04:34 < niggler> and if you have one, it's probably a good starting point
04:34 < samholmes> niggler: what do you mean?
04:34 < deoxxa> there used to be the node.js wiki
04:34 < rhalff> samholmes, you have only one location to refresh? always the same?
04:34 < deoxxa> not sure if that's used at all anymore
04:34 < sinclair|net> deoxxa: any module that gets 1000 downloads a day, and has a track record of working gets promoted to the curated npm (npmplus)
04:35 < niggler> samholmes are you on mac or linux? you can just run env NODE_PATH=whatever browserify ...
04:35 < samholmes> i'm using browerserify api btw
04:35 < rhalff> ah..
04:35 < sinclair|net> the thing is, who would use npm if there was a curated npm +
04:35  * rhalff never heard of browserify
04:35 < Lorentz> I would
04:36 < sinclair|net> despite my distaste for npm, it is still nice to be able to deploy modules there and use them in my own projects, 
04:36 < Lorentz> I wouldn't mind a kind of npm that had organisation like debian does
04:36 < Lorentz> with levels of stability
04:36 < niggler> sinclair|net you don't need to replace npm
04:36 < niggler> think about replacing npmjs.org
04:36 < samholmes> rhalff: well, all pages of the site i have up while dev-ing
04:36 < sinclair|net> Lorentz: i hear you
04:36 < niggler> you use the same npm backend, just with a curated frontend
04:37 < sinclair|net> niggler: suppose, but i prefer Lorentz's idea more
04:37 < niggler> take this: http://eirikb.github.io/nipster/
04:37 < Lorentz> thought currently just anyone can push to npm?
04:37 < niggler> now i don't think that github stars is the right metric
04:37 < sinclair|net> Lorentz: have we meet before?
04:37 < Lorentz> have maintained system, have organised package names, different packages doing the same thing also organised cleanly
04:37 < sinclair|net> Lorentz: #gamedev ?
04:37 < rhalff> samholmes, I guess you can just modify that script, if you start it with nodemon that will be the part listening for changes and reruns your script, which reloads the page through that remote debugging interface.
04:37 < Lorentz> yep
04:37 < sinclair|net> Lorentz: what are you doing here ? 
04:37 < niggler> Lorentz i don't think node is mature enough to really start rejecting modules
04:38 < sinclair|net> haha
04:38 < Lorentz> sinclair|net: I was always here :V
04:38 < niggler> although some cleanup would be nice
04:38 < sinclair|net> oh really, i didn't notice you around in the past
04:38 < Lorentz> don't hang around gamedev often anymore though
04:38 < sinclair|net> least im not the only one from gamedev making the rounds
04:38 < Lorentz> but anyway, some cleaned up npm
04:39 < Lorentz> something any dev can go in and say "hey, this is stable, we can rely on this for grabbing all our packages and it won't break on us"
04:39 < Havvy> Lorentz: That would be useful.
04:39 < sinclair|net> Lorentz: well, npm does let you version stuff
04:39 < Lorentz> hell, just the other day I was trying to install sqlite lib thing
04:39 < Lorentz> then I saw like four, five different packages for it
04:39 < Lorentz> from different authors
04:39 < sinclair|net> Lorentz: such that, if you depend on version x, you can install version x safely
04:40 < niggler> Lorentz the one the matters is the eponymous one
04:40 < niggler> how is `sqlite`?
04:40 < sinclair|net> Lorentz: i still don't trust it, i sometimes wonder if its better for an organization to fork all the good modules and take over them
04:40 < Lorentz> niggler: and how am I supposed to know that?
04:40 < niggler> I'm asking you if you tried it
04:40 < Lorentz> I think I used sqlite3 first, and stuck with it
04:40 < niggler> and if it doesn't work or is broken, then it should be removed
04:41 < Lorentz> I'm sure they all work, one way or another
04:41 < Lorentz> but there's no gurantee, and it's sort of a pain to just go try everything
04:41 < niggler> not all of them work
04:41 < niggler> some are stubs
04:41 < sinclair|net> Lorentz: its just a numbers game
04:41 < sinclair|net> Lorentz: pick the modules with the big downloads
04:41 < niggler> downloads isn't a good metric
04:41 < sinclair|net> niggler: i know
04:42 < Lorentz> I think this part of nodejs has to be solved before more people use it :\
04:42 < Lorentz> imo
04:42 < sinclair|net> Lorentz: just do what i do, and write everything yourself
04:43 < Lorentz> ehhhhhhh, I'd rather not entertain myself that
04:43 < sinclair|net> the only module im using is socket.io
04:43 < Lorentz> been there done that, writing everything myself
04:43 < niggler> Lorentz you have to be more proactive
04:43 < sinclair|net> Lorentz: you would be suprised, the bar is VERY low
04:43 < niggler> if you see something doesn't work
04:43 < niggler> you have to reach out to the developer
04:43 < Lorentz> niggler: sqlite3 has a problem involving installation on node 0.10.x
04:43 < progrock`> Man, I love when you connect a few dots, and suddenly your app seems like an actual app, lol
04:44 < Lorentz> there's a patch for it already, and developer hasn't pulled it yet
04:44 < Lorentz> so I had to do it manually
04:44 < niggler> so sqlite3 seems like something people would look for
04:44 < Lorentz> well, that's fine, there are always bugs, but still, I don't know what version in npm is something I can use with confidence it doesn't break
04:44 < niggler> when was the last time it was updated?
04:44 < progrock`> Far from complete, only about 15 hours in dev time so far, but it works at least: http://codedhere.com/
04:44 < niggler> two months ago
04:44 < Lorentz> niggler: 2 months ago lol
04:44 < niggler> there are 4 maintainers
04:45 < niggler> ok now I'm confused
04:45 < niggler> github says it was updated a month ago
04:45 < sinclair|net> Lorentz: check the modules package.json 
04:45 < Lorentz> but nobody updated npm package
04:45 < Lorentz> author has to push it, no?
04:45 < niggler> ok did you send the maintainers an email?
04:45 < Lorentz> no, I didn't
04:45 < Lorentz> I was busy coding and I didn't have time to wait for a reply
04:46 < niggler> you should send them an email and cc i@izs.me
04:46 < niggler> as a stopgap measure you use your repo, but you should send it now and check back in a month
04:46 < niggler> see if there's any progress
04:47 < niggler> if there is none, and it doesn't work at all on 0.10.x, then that's grounds for adding you as a maintainer or removing the project
04:47 < Lorentz> and I'm not willing to be a maintainer
04:47 < Lorentz> I have other things to do, like maintain my own projects
04:47 < niggler> but that's the mentality that leads to the problem you are facing
04:48 < Lorentz> it's not much of a mentality, as much as a practicality
04:48 < progrock`> I really wish I could find an easy way to hide thse damn scrolbars on the ACE editor without doing it in a hackish way
04:48 < niggler> ultimately, those maintainers are probably saying the same thing
04:48 < progrock`> I rally feel like that should bea simple setting, I just can;t find it
04:48 < niggler> they have other things to do
04:50 < Lorentz> well, yes, and project gets neglected (it's already as such?), we have piles of sqlite packages here and there that none of them actually work, and anyone who ventures into nodejs to just give it a try and use sqlite finds themselves stuck
04:50 < beg> wowwowowowowow I'm never ever saving files encrypted on a usb.
04:50 < beg> AGAIN
04:51 < beg> LESSON LEARNED
04:51 < Lorentz> either they take up the maintainer job for everything they want to use, which is ridiculous to ask of, or they just walk off and use php
04:52 < niggler> aren't there paid devs who maintain php (part of zend or whatever)
04:53 < Lorentz> yes, but that's not the point, php just has a doc file/site with every most feature you want in that one thing and anyone can just go in and use (most ) any of them off any install
04:53 < Lorentz> which is also its weakness, but just saying, node has to be careful since by design it's very bare in the core
04:53 < niggler> ultimately the question is about economics
04:54 < niggler> you could pay a fee to use node, and that fee would sponsor development of these modules
04:54 < niggler> or you have a company that uses the module and sponsors development of it
04:54 < Lorentz> that's why I endorse the idea of a maintained repository of npm packages hand-picked and organised by someone
04:54 < Lorentz> like a linux distro
04:54 < niggler> how is that organizer being compensated for time?
04:54 < Lorentz> linux is chaotic, but distros exist to bring it together for some goal
04:55 < niggler> but they also maintain their own forks
04:55 < niggler> so are you suggesting that this repository of packages be forks of the original 
04:55 < niggler> if you go there, then someone has to maintain that
04:55 < niggler> and how are they being compensated
04:56 < substack> sambarino: it's impossible to set NODE_PATH with browserify because NODE_PATH is a terrible idea
04:56 < niggler> if not, then you run into the original problem
04:56 < niggler> substack that's a terrible excuse
04:56 < Lorentz> well, it's compensated the same as why people use free software and write free software
04:56 < substack> niggler: it breaks composition
04:56 < Lorentz> feels nice knowing more people use it, I guess?
04:56 < substack> it's my module and I don't want to support NODE_PATH
04:56 < substack> you shouldn't ever use it in node either
04:57 < Lorentz> it just doesn't help if all the coding resources are split like this
04:57 < niggler> Lorentz i don't disagree, but you highlighted the core problem: ultimately the people who maintain it have other things to do too
04:57 < substack> npm is fine the way it is
04:57 < substack> `npm search` works great
04:57 < deoxxa> you're fine the way you are, substack
04:57 < substack> I don't even know what the problem is.
04:57 < Lorentz> of course, but then if nodejs can have sqlite support by just 5 maintainers instead of 5 x 4, 5 different projects
04:58 < Lorentz> that all does ultimately the same thing
04:58 < Lorentz> I think that's an improvement
04:58 < niggler> substack the question originally started from finding an sqlite module
04:58 < niggler> there are many, and apparently the one called "sqlite" is broken on 0.10.x
04:58 < Lorentz> well, that was my experience
04:58 < substack> so ask in irc what the best one is
04:58 < Lorentz> I have a feeling a lot of other quieter people also go through the same phase when they try node
04:58 < substack> or not even "the best" so much as a module that works and will solve your problem
04:59 < substack> it's no different on any other platform
04:59 < niggler> substack do you just make your own modules for all of your tasks or do you use others' modules?
04:59 < substack> I use other people's modules all the time
04:59 < substack> who doesn't?
04:59 < niggler> so when you have a person who isn't maintaining the module, what do you do?
05:00 < niggler> do you end up forking it when you need to make a change
05:00 < substack> I use a HUGE number of modules written by other people
05:00 < substack> what do you mean maintaining
05:00 < niggler> the issue at hand was that the module was broken
05:00 < niggler> and apparently there's a pull request for a fix
05:00 < niggler> but it hasn't been updated in months
05:00 < niggler> is that a fair summary Lorentz 
05:00 < Lorentz> Something like that
05:00 < substack> then just put your version in the deps field as a github url until your patch lands upstream
05:00 < substack> problem solved
05:00 < ChrisPartridge> grab the repo, change it, set your dependency to load from git
05:00 < niggler> now i've seen the same thing with more commonly used modules
05:01 < Lorentz> I dunno, I can't be the only person who wants to have some fixed version known to be stable and stick with it for a long time
05:01 < niggler> ChrisPartridge actually some people just end up pushing the fork to npm as well
05:01 < Lorentz> without having to fork it myself
05:02 < substack> then just keep your dependency pegged to a working version forever
05:02 < substack> who cares?
05:02 < ChrisPartridge> niggler: yeah, no ones stopping you
05:02 < substack> if it works, don't fuck with it
05:02 < ChrisPartridge> and if its fucked, dont work with it
05:02 < ChrisPartridge> :D
05:03 < niggler> i wonder if an occasional purge of npm would be helpful
05:03 < ChrisPartridge> niggler: I'm sure it will come one day
05:03 < niggler> just reach out to people with modules that haven't been updated in 3 years 
05:03 < niggler> and ask if its being used or maintained
05:03 < ChrisPartridge> it will be a sad day when the "dicks" package is gone
05:04 < niggler> missing a repo
05:04 < Lorentz> npm just feels like it's LFS of linux, vs something like debian stable
05:05 < Lorentz> if that makes sense
05:06 < Havvy> Lorentz: NPM is a free for all.
05:06 < beg> NPM community is probably the best i've seen
05:07 < beg> but then again, back to your answer, Php offers alot of functions by default
05:07 < beg> While node does not
05:14 < ffog> progrock`: what is the difference between codedhere and others?
05:27 < duko> I would like to know how to push changes on a subtree to the subtree repository
05:27 < duko> does anyone here know how to do this?
05:35 < kumavis> what is a 'file descriptor' in node
05:50 < leichtgewicht> A good node-module list should indicate how long the last "major-api-change" happened at a particular package
05:50 < leichtgewicht> (how long ago)
05:57 < ChrisPartridge> leichtgewicht: that should be indicative from versioning/publish dates, really
05:57 < leichtgewicht> Yeah, but it isn't ...
05:57 < ChrisPartridge> but if we're making a list of good modules, that should be a prereq, no?
05:58 < leichtgewicht> a good list of all node modules
05:59 < leichtgewicht> should contain a indicator if the versioning is not consistent with the content: ie. api change from 0.5.5 to 0.5.6
05:59 < ChrisPartridge> leichtgewicht: oh, sorry - misunderstanding
05:59 < ChrisPartridge> yep
05:59 < leichtgewicht> Of course that has to be human curated ... 
06:01 < ChrisPartridge> leichtgewicht: are you volunteering? :P
06:01 < leichtgewicht> Well I am not sure why this can't be a crowd effort, like stars.
06:02 < leichtgewicht> But interesting thing ... 
06:02 < leichtgewicht> maybe that will become my next project.
06:03 < ChrisPartridge> I guess if you started from packages with the most dependents, you would start getting a pretty good list quickly
06:03 < leichtgewicht> Nah.
06:04 < leichtgewicht> depending libraries also are likely to break.
06:04 < leichtgewicht> seen way too much scary shit recently.
06:07 < leichtgewicht> and alternative npm server that only hosts projects that do comply to a certain set of rules.
06:07 < leichtgewicht> like the one before mentioned.
06:08 < ChrisPartridge> does it have to be a seperate server, surely a compliance/strict tag could be added to npm
06:10 < leichtgewicht> It does not have to be.
06:10 < leichtgewicht> however: that way the complexity of npm woudn't need to be increased.
06:46 < bjartwolf> In node 0.8 I can just pipe a raw fs readstream or a nodecopter to a spawned ffplay subprocess, and it works perfectly. In node 0.10.x it hangs after a while (10-15s). I've tried to listen to events, pass it thorugh throughstream, force to oldmode etc to track down the error, looked for similar bugs for streams but can't find any
06:47 < ManneW> I'm having problems when i do AJAX from my AngularJS client (in Chrome) to my ExpressJS Node.js server. Even though the user has logged out, the client gets a "304 Not Modified" =/ What would be the easiest way to solve this?
06:48 < ManneW> Simply send the headers using res.header?
06:50 < deoxxa> ManneW: add the cookie as part of your cache logic, or don't cache requests with a cookie, or don't cache certain routes
06:51 < ManneW> deoxxa: Ok! I think I'll add it to my middleware checking if the client making the request is authenticated - then none of the "secured" routes will be cached, I hope :)
06:52 < zamba> i'm experiencing problems installing ethercalc
06:52 < zamba> npm ERR! error installing uglify-js@2.2.5
06:52 < deoxxa> zamba: gist the whole log
06:52 < zamba> i'm running ubuntu 12.10 and have installed npm
06:52 < deoxxa> zamba: and run with npm -v
06:52 < zamba> deoxxa: gist?
06:53 < deoxxa> gist.github.com - or any other pastebin site
06:53 < zamba> 1.1.4
06:53 < deoxxa> sorry, npm --verbose
06:53 < deoxxa> my bad
06:53 < zamba> https://gist.github.com/anonymous/5683313
06:53 < deoxxa> looks like it's relying on a version of source-map that doesn't exist
06:53 < deoxxa> that's certainly weird
06:54 < zamba> https://gist.github.com/anonymous/5683317
06:55 < zamba> deoxxa: i experienced the same on my other ubuntu machine
06:56 < deoxxa> hrm, there's definitely a source-map@0.1.7
06:56 < deoxxa> oh, actually, stable node is now 0.8.x
06:56 < deoxxa> that shouldn't break in this way though
06:57 < deoxxa> oh, yes it should. source-map specifies >=0.8.x for its compatible node versions.
06:57 < deoxxa> zamba: solution: upgrade to latest stable node
06:58 < zamba> deoxxa: how?
06:58 < zamba> (i'm not at all familiar with node.js and npm)
06:58 < deoxxa> well that depends on how you installed node
06:58 < zamba> from package
06:58 < deoxxa> well, that'll be the official ubuntu package, i guess
06:58 < zamba> yup
06:58 < deoxxa> if i remember correctly, that's always way behind
06:58 < deoxxa> but!
06:58 < deoxxa> there's a ppa
06:58 < deoxxa> https://launchpad.net/~chris-lea/+archive/node.js/
06:58 < zamba> tried that
06:58 < zamba> didn't help
06:59 < zamba> same problem
06:59 < deoxxa> well... you're still running 0.6.19 in that log
06:59 < zamba> but that's just for node.js, isn't it?
06:59 < zamba> npm isn't upgraded
06:59 < deoxxa> well npm comes with node (unless whoever makes the packages messes around with things)
07:00 < zamba> well.. i'm not able to install node.js from that ppa
07:00 < zamba> one sec, error coming up
07:00 < zamba> some error with npm, i seem to remember
07:01 < deoxxa> we're pretty quickly moving out of the "things i know about" territory
07:01 < zamba> it's aptitude install node.js, right?
07:01 < zamba> oh, here we go
07:01 < deoxxa> it *looks* like it should be `aptitude install nodejs', from looking at that page
07:01 < zamba> yeah
07:01 < zamba> you're right
07:01 < deoxxa> but i know very little about ubuntu or their ppa thing
07:09 < zamba> got it working! :)
07:09 < zamba> i don't know if you know this, but how is the spredsheet saved?
07:34 < mscdex> hoorah! network interface info for freebsd and openbsd!
07:48 < TonkaTruck> I work alone and this is the only place I can come to find out what is still good.  Do you guys use passportjs or is there something better now?
07:52 < chilts> mscdex: you're a star (am talking about https://github.com/joyent/libuv/pull/502)
07:52 < mscdex> heh
07:53 < chilts> I currently use wolfeidau's netif for flake, but when that lands I'll use it directly :)
07:53 < chilts> thanks!!!
07:56 < __carlos> how often is node updated? I downloaded 0.10.8 last week and now 0.10.9 is out… is there a change log somewhere?
08:05 < M2Ys4U> __carlos: have a look on http://blog.nodejs.org/
08:05 < __carlos> M2Ys4U: yay thanks =)
08:37 < wolfeidau> mscdex: Yes your work is much appreciated :)
09:27 < mikejw> is it possible to pass around the callback functions belonging to the functions within my async series flow... so in other words it's possible for the series to advance based on a separate asynchnronous function calling back?
09:29 < nathan7> mikejw: What do you mean?
09:29 < nathan7> mikejw: functions are just values, you can pass them around
09:30 < radiodario> mikejw: show us some code of what you're trying to do
09:34 < abrkn> anyone else having issues with npm?
09:35 < radiodario> noep
09:39 < mikejw> it's ok I think I just needed to think out loud :)
09:39 < ak5> hi guys, why am I getting 304s for npm install express ?
09:39 < ak5> just china again or... ?
09:43 < radiodario> what's wrong with 304? i always get 304s if things havent' changed
09:44 < ak5> sorry i meant 404
09:44 < radiodario> oh
09:45 < radiodario> downloads just fine for me
09:45 < radiodario> it took a while tho
09:45 < ak5> getting timeouts in china :/
09:45 < ak5> I hate the chinese internet
09:45 < ak5> sooooo much
09:45 < radiodario> ah well get a vpn or something
09:46 < ak5> yeah, I always end up doing that
09:46 < ak5> but now I have to do that with production servers too, it's annoying
09:49 < bjartwolf> This https://github.com/bjartwolf/videoHangs stopped working between node 0.9.5 and 0.9.6 (if I am not confusing myself again), basically piping mp4 from readstream to a spawned childprocess (ffplay) hangs after approx 15 seconds
09:49 < bjartwolf> Anyone has any ideas of what I should do with it... Could submit a bug, but it might also just be me misunderstanding something here
09:50 < bjartwolf> there seemed to be some bugfixes in child_process in these upgardes, and it it still broken (as pr. my prgoram, anyway) in latest 10.x builds
09:57 < theefer> Is anybody else experiencing issues with registry.npmjs.org, such as npm timing out or failing?
09:59 < theefer> It also seems to be using a self-signed SSL certificate, which might or might not be related to the issue?
10:02 < wathek> Hi everybody
10:03 < wathek> I have a question when I need to send data from PHP to NodeJS what's better using memcached or redis ?
10:05 < boffbowsh> wathek: if you're messaging node from php, i'd suggest rabbitmq or 0mq
10:05 < wathek> boffbowsh, ok I'm going to take a look at it
10:06 < wathek> boffbowsh, thank you
10:06 < wathek> boffbowsh, can I explain more my situation ?
10:08 < boffbowsh> wathek: golden rule of IRC: don't ask to ask, just ask
10:08 < wathek> boffbowsh, yep you're right
10:09 < ssafejav_> ha was just going to ask, what's up with NPM today
10:10 < wathek> I have a PHP page with multiple articles I need to check the availabilities of these articles the problem here is that to check that I need to do multiple webservices calls and this can take time. So the idea is in PHP I send the list of the articles to NodeJS and NodeJS will check the availabilities and store them in memcached (so that when I need them later no need to do new Webservices calls).
10:11 < wathek> so the process is PHP send list to nodeJS and continue doing the stuff and then show the page in the client webbrowser, once the page is shown an Ajax request will be done to NodeJS server to get the availabilites. Node JS send the data and Ajax update the page
10:11 < wathek> boffbowsh, that's the main thing
10:12 < ssafejav_> does anyone have an npm mirror or know where to find one?
10:13 < boffbowsh> wathek: in that case, go with redis imo
10:14 < wathek> boffbowsh, ok 
10:14 < wathek> boffbowsh, thank you
10:25 < koldus> hi guys, i'm quite new to node js and i'm try make some easy app just to learn..
10:26 < koldus> so i make this code http://pastebin.com/DwGY49qx but i really don't know how to show the mysql result... i think it's becouse it's non blocking..
10:26 < gildean> koldus: just move the res.end to the callback
10:27 < gildean> now the res.end is called before the results come back, and then there's nothing to write to anymore
10:27 < koldus> yeah, but what if i wanna make more than a mysql query?
10:28 < gildean> then you do it, and use callbacks
10:29 < gildean> if you have a bunch of tasks that rely on each other, use a module to contorl the flow like for example async
10:29 < alfonsodev> also you can use async module to which is a control flow module
10:29 < alfonsodev> .
10:29 < koldus> thanks guys ;)
10:30 < alfonsodev> yep what golden said, I had some delay lol
10:34 < __carlos> so the issue was writing to a closed stream, could that be a configurable error?
10:35 < __carlos> I mean, he wasn't getting any errors or notice… so perhaps a debug log could've helped 
10:36 < __carlos> debug Trying to write to closed stream <== or something like that hehe
10:42 <@MI6> joyent/libuv: bnoordhuis created branch review-because-windows - http://git.io/o-4lvQ
10:44 <@MI6> joyent/libuv: bnoordhuis created branch jenkins-review-plox - http://git.io/Cp5cUQ
10:45 < adrianlang> bnoordhuis: https://github.com/joyent/libuv/commit/31c6abf21790#L2L119 seems wrong to me
10:46 < adrianlang> "S_IWUSR (_S_IWRITE)"
10:46 < adrianlang> would be correct, wouldn’t it?
10:48 < bnoordhuis> adrianlang: right you are. i just replaced it with a perl oneliner
10:49 < bnoordhuis> i'll fix that up before i land it - if i can get jenkins to actually build it :-/
10:50 < adrianlang> bnoordhuis: I would have done the same (if I wouldn’t have been to lazy to be really lazy)
10:52 <@MI6> joyent/libuv: Ben Noordhuis jenkins-review-plox * ede8318 : test: don't use S_IREAD and S_IWRITE - http://git.io/joyTvQ
10:57 <@MI6> joyent/libuv: Ben Noordhuis master * ede8318 : test: don't use S_IREAD and S_IWRITE - http://git.io/f0mhTQ
11:09 < aandy> hi guys, i'm working on a very simple mechanism for graceful shutdown. the node part works as i wanted, but i'm wondering if i have a design flaw: currently i spawn instances using some env params, like PORT=..., but i can't really tell which pid is which (e.g. with # ps), any common ways of handling such? like, /tmp files with pid_port files or similar
11:24 < dmilith> wtf
11:24 < dmilith> in 0.10.9 something changed with python requirement?
11:24  * dmilith configure is throwing /usr/bin/env: python: No such file or directory
11:24 < dmilith> it was just fine with 0.10.7
11:24 < dmilith> 0.10.8
11:25 < dmilith> what the fuck is this ;f
11:25 < dmilith> configure in python
11:25 < dmilith> world will end
11:26 < dmilith> fuck. really? major change in minor version?
11:26 <@MI6> joyent/libuv: Linus Mårtensson master * 3fdd2a1 : uv: support android libuv standalone build - http://git.io/xb4Yow
11:26 < dmilith> are you ruby?
11:26 < dmilith> ;f
11:26 < bnoordhuis> dmilith: wut?
11:27 < bnoordhuis> python's always been a requirement, nothing new there
11:27 < dmilith> not requirement
11:27 < bnoordhuis> is too
11:27 < bnoordhuis> what do you think waf was? gobs and gobs of python
11:28 < dmilith> eh
11:28 < dmilith> I need to hack this configure then
11:30 < bnoordhuis> dmilith: export PYTHON=/path/to/python ; $PYTHON ./configure && make PYTHON=$PYTHON
11:30 < dmilith> yea
11:30 < dmilith> I'm doing something similar
11:30 < dmilith> thx
11:30 < bnoordhuis> note it should be python 2.6 or 2.7. 2.5 might work too but no guarantees
11:30 < dmilith> yes
11:30 < dmilith> I'm using 2.7.3
11:30 < bnoordhuis> cool
11:31 < kain> hello there. anyone else having trouble with fetching npm packages?
11:32 < kain> on both my machine and heroku I have many failures
11:33 < kain> it works by setting npm config set registry http://registry.npmjs.org/
11:33 < kain> but it's not possible on heroku
11:33 < kain> so ssl is failing
11:34 < theefer> kain: yeah I'm having trouble as well
11:34 < kain> oh man
11:35 < kain> today ssl is failing everywhere :P
11:35 < kain> I have another service that started to terminate ssl connections
11:36 < theefer> actually it's working from another box, so it might be an internal networking problem
11:36 < kain> theefer, does your other box has https set too or http ?
11:36 < kain> for the registry
11:36 < theefer> the other box uses https
11:37 < theefer> what errors are you getting from npm?
11:38 < kain> mainly npm ERR! fetch failed https://registry.npmjs.org/jsdom/-/jsdom-0.6.5.tgz
11:38 < kain> on random packages
11:38 < kain> sometimes it works, sometimes does not
11:38 < kain> and network related errors
11:38 < kain> like connection refused, etc.
11:38 < theefer> yes
11:38 < theefer> what version of node/npm are you using?
11:38 < kain> tried with both 0.8.23 and 0.10.9 now, npm 1.1.x, 1.2.x
11:39 < kain> if I switch in http it works, but on heroku I can't
11:39 < kain> afaik
11:40 < kain> npm ERR! Error: connect ECONNREFUSED
11:41 < kain> I wonder if it's the case the implement setting the registry url directly in package.json, might be useful
11:42 < kain> much like the source directive in Gemfile
11:42 < kain> for ruby/bundler :(
11:43 < dmilith> bnoordhuis: thanks for help, and patience ;]
11:45 < kain> https://github.com/isaacs/npm-www/issues/325 ticket
11:46 < slaskis> is it really an issue with https? because http doesn't work for me either
11:46 < slaskis> node -e "require('http').get('http://registry.npmjs.org/slug')"
11:46 < slaskis> while curl does
11:46 < slaskis> curl http://registry.npmjs.org/slug
11:47 < kain> I've been able to install all deps using http on my local machine
11:48 < slaskis> oh weird it work now
11:48 < IrishGringo> good morning... has anyone used datasfit?  I am looking at the pricing... and the cheapest bronze plan is 3,000 per month.... woooo!!!!
11:48 < ahsam> Hy! How can i send cache header for images? To load them later from cache and not from server? THanks
11:50 < kain> https now works in my machine but not on heroku /sigh
11:50 < slaskis> have you tried setting 'strict-ssl': false in your package.json_\
11:50 < kain> no, but going to try
11:51 < theefer> slaskis: you're right, it looks like the problem has gone away. 
11:52 < slaskis> theefer: on heroku or did you also have problems locally?
11:52 < kain> still getting errors
11:52 < kain> on heroku
11:53 < theefer> I had problems locally, now fixed
11:54 < slaskis> kain yeah, me too :/
11:54 < kain> on local machine seems fine
11:54 < kain> mah
12:13 < jeanlinux> hello guys , i'm new to node.js and javascript on it own
12:13 < jeanlinux> i'm trying to write this function
12:13 < jeanlinux> function buildLeagues(cb){
12:13 < jeanlinux>     var leaguesData = new Array();
12:13 < jeanlinux>     data = fs.createReadStream("./tmp/leagues.xml");
12:13 < jeanlinux>     parser = xml.parse(data);
12:13 < jeanlinux>     parser.each('league', function(league){
12:13 < jeanlinux>         var leagues = {};
12:13 < jeanlinux>         leagues.id = league.$.id ;
12:13 < jeanlinux>         leagues.name = league.$text;
12:13 < jeanlinux>         leaguesData.push(leagues);
12:13 < jeanlinux>     });
12:13 < jeanlinux>     cb(JSON.stringify(leaguesData));
12:13 < jeanlinux> }
12:14 < jeanlinux> that is parsing an xml file with leagues in it, there are so many nodes in it and i only need the id and the name of the league
12:14 < jeanlinux> now.. javascript scope is not allowing me t populate the leaguesData array 
12:15 < jeanlinux> so i can return it in the callback
12:15 < gildean> jeanlinux: there's no .each in js, it's .forEach
12:15 < jeanlinux> the leaguesData array is always empty .. because of the scope it is in.. can anyone suggest a better  way for me to go about this
12:16 < gildean> wait, no, your parser has a method each?
12:16 < jeanlinux> oh yeah.. and i forgot to add.. im using xml = require('xml-object-stream'),
12:16 < jeanlinux> the xml-object-stream node module for the xml parsing
12:16 < gildean> okay, i got confused
12:16 < jeanlinux> yeah it does
12:16 < jeanlinux> my bad
12:19 < gildean> hmm, i don't see it wouldn't work, but you should use var in front of data and parser
12:19 < gildean> and create the new array with var leaguesData = []; instead of new Array()
12:19 < jeanlinux> yeah, both the parser and the data are defined as global variables .. so i' only reassigning in that scope
12:20 < gildean> is there a reason they're global?
12:21 < jeanlinux> cos i'm using it accross.. but i will give them local scope
12:21 < pingupingu> hello folks
12:22 < pingupingu> are there any nodejs tumblr or fffacebook clients for nodejs?
12:22 < patsToms> morning, http://vpaste.net/OmFcv with v0.10.9
12:23 < patsToms> I red online that people just downgrade to get this issue solved, but...
12:23 < kain> patsToms, https://github.com/isaacs/npm-www/issues/325
12:23 < kain> no one is going to look at it however
12:23 < shapeshed> anyone know of any recent registry.npmjs.org mirrors? seeing timeouts ;-(
12:23 < Trangar> session("count", session("count") + 1)("test", "test");
12:23 < patsToms> kain, oh
12:23 < Trangar> You can do some funky shit with node :D
12:26 < h22> Guys, I just came across a lib called nstore
12:26 < h22> Is it persistent ?
12:26 < h22> ^ I mean, Does it store the vals like a normal database?
12:26 < mikejw> I have another question about using async (series in particular)...
12:27 < mikejw> what if I want to use it within a function and return afterwards?
12:27 < gildean> mikejw: then you just return with the callback as usual
12:28 < mikejw> gildean: return where? inside the optional callback?
12:29 < gildean> the callback would be the "return" so to speak
12:31 < zomg> mikejw: if you have async code and want to get a value from it when the processing is done, you need to use a callback to move the value, so essentially you end up with a chain of callbacks with async code
12:31 < mikejw> zomg: but what if that async code itself is within a function?
12:32 < zomg> mikejw: so you want to do something like dostuff(); var result = doAsyncStuff(); doMoreStuff(result);?
12:33 < zomg> Any time you have async code, you always need to have a callback if you want the result
12:33 < zomg> so you would need to have doAsyncStuff(function(result) { doMoreStuff(result); })
12:33 < zomg> that's just the nature of how it works
12:33 < zomg> and if you have this inside another function, and you want to use a result from the async code as a result of that function..
12:33 < mikejw> yeah ok
12:33 < zomg> you need... yet another callback
12:34 < zomg> =)
12:39 < mikejw> zomg: thanks
12:49 < jeanlinux> Is there any cool Transaction module for node.js and mongodb?
13:11 -!- mode/#Node.js [+o mbalho] by ChanServ
13:14 < brazzy> Is anyone else having problems using npm? I've been getting either disconnects or an invalid certificate for some time now
13:15 < luka5> npm doesnt work for me either. always getting Error: connect ECONNREFUSED
13:15 < shapeshed> brazzy: yep https://status.npmjs.org/
13:17 < brazzy> @shapeshed: ah, ok, thanks.
13:19 < maggg> Sooo... I'm currently unable to `npm publish`. It tells me ECONNREFUSED.
13:19 < maggg> I have fine access to the relevant URL (https://registry.npmjs.org/roat) in my browser
13:20 < maggg> And I've published plenty before :(
13:20 < boffbowsh> 14:15:21 < luka5> npm doesnt work for me either. always getting Error: connect ECONNREFUSED
13:20 < kain> join the fun https://github.com/isaacs/npm-www/issues/325
13:22 < maggg> boffbowsh, kain: Thanks :)
13:29 < pingupingu> where to request the keys for auth in tumblr.js ?
13:40 < dylukes> Hey guys :).
13:40 < dylukes> So I have a somewhat exploratory question.
13:40 < dylukes> Lately a lot of services (tumblr, flickr, etc) have moved their API's to an OAuth based system. I'm wondering if there's an easy way to make this work with a single-origin aggregation model.
13:40 < dylukes> That is, a site that has say, a page, that simply pulls and reformats/structures content from one or more.
13:41 < dylukes> The main thing is that the owner of the site shouldn't have to deal with authorizing it beyond providing credentials somewhere.
13:41 < dylukes> (and by somewhere I mean in a config file, or backend)
13:41 < dylukes> This is a good bit easier in models with certificates or secret keys...
13:43 < pingupingu> dylukes: i am currently experimenting with the tumblr.js, have you used it before? I am stuck at the auth part not sure what they are supposed to be
13:44 < dylukes> With the JS API there's really no room for anything but OAuth since it runs client side.
13:44 < dylukes> I'm talking about server side.
13:44 < dylukes> What I want is like… a Kerberos ticket that doesn't expire :P
14:08 < jas-> Any maintainers here?
14:11 < Seventoes> i maintain sanity most of the time
14:14 < shanse> Seventoes: how?
14:14 < Seventoes> heavy cynicism and swearing at clients behind their backs
14:15 < __carlos> Seventoes: good technique
14:15 < deoxxa> oh hey i use the same technique
14:15 < __carlos> worth reading: https://jira.mongodb.org/browse/PYTHON-532
14:15 < aandy> maintining it is good, but you have to detect it aswel. i usually estimate it
14:16 < aandy> while (true) { sane = Math.rand() < 1/(codebase.length/80); }
14:16 < deoxxa> > DISCOVER PYMONGO DOES NOT CHECK RETURN VALUES IN MULTIPLE PLACES. DISCOVER ORIGINAL AUTHOR SHOULD NOT BE ALLOWED NEAR COMPUTER
14:16 < deoxxa> lol'd hard
14:17 < __carlos> best bug report in a while
14:18 < RioKuro> hi guys! I've got a little question.
14:20 < aandy> shoot
14:20 < deoxxa> RioKuro: you should try asking it
14:20 < RioKuro> I've got a socket that is returned from a tcp server that is instanced from net.createServer and i want the data from that socket to be written to multiple respond objects at the same time
14:20 < Seventoes> lol
14:20 < RioKuro> lol
14:20 < deoxxa> RioKuro: socket.pipe(res1) socket.pipe(res2) and so on should do the trick
14:21 < RioKuro> that's the same as socket.on('data', func) right?
14:21 < aandy> RioKuro: are you trying to broadcast (e.g. websockets, long pulling)?
14:21 < deoxxa> RioKuro: not quite
14:21 < deoxxa> RioKuro: .pipe() handles backpressure and other fun things
14:22 < RioKuro> I'm trying to get a live video stream encoded through avconv to playback straight into the browser with the video tag
14:22 < shanse> __carlos: that's hilarious
14:22 < RioKuro> I've got single browser working but when i open a second browser at the same time it gets a connection closed and just stops
14:23 < RioKuro> the first browser is unaffected
14:24 < jas-> Any maintainers here?
14:24 < spion> RioKuro, what does the code of your request handler look like
14:24 < RioKuro> pipe isn't working either
14:27 < RioKuro> spion, deoxxa: https://gist.github.com/Rio/5685339
14:30 < jjmaddison> forever autorestarts script in case of process.exit() from it?
14:37 < jjmaddison> that "forever" moduie is so damn buggy
14:47 < RioKuro> No idea anyone?
14:50 <@mbalho> RioKuro: are you on node 0.10
14:51 < spion> RioKuro, are you opening another browser, or another tab? :)
14:52 < RioKuro> yes node 0.10 and I'm on another browser on a different computer even
14:52 < RioKuro> @mbalho, spion
14:54 <@mbalho> AFAIK that should work, i havent tried doing that exact thing in 0.10 yet though
14:58 < RioKuro> yeah I know it should work :P that's what is so annoying...
14:58 <@mbalho> if you pipe the tcp socket to stdout does it fill your screen with buffers?
14:59 < RioKuro> yes
15:00 < RioKuro> as i said above the pipe does work for a single user
15:00 < spion> works for multiple users too, my guess is that the browser is expecting but not getting some kind of webm header
15:01 <@mbalho> oh yea
15:01 <@mbalho> you cant start piping halfway through i'd guess
15:02 < spion> RioKuro, check the network activity of the second browser
15:03 < spion> if its having problems with the header, it would receive a bit of data then cancel the request
15:03 < RioKuro> you mean the webm header right?
15:03 < bag-man> Would there be any way for me to monitor network usage with just node?
15:03 < spion> yes
15:04 < RioKuro> the weird thing is that the stream is always encoding even before the first browser connects
15:04 <@mbalho> RioKuro: header as in binary not as in http
15:04 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:04 < RioKuro> @mbalho: yeah binary not http
15:05 <@mbalho> RioKuro: there are streaming video protocols but i'm not sure if webm is one of them
15:05 < spion> RioKuro, but the tcp client is paused before you pipe it to the first client, afaik.
15:05 <@mbalho> node will buffer it until you pipe
15:05 <@mbalho> and it will also tell the tcp client to stop sending data until you pipe
15:06 <@mbalho> but when the second client connects they only get the tcp data from that moment in time forward, not backwards too
15:06 < spion> you could try .pipe(through()).resume() to make sure you are always starting somewhere in the middle of the stream
15:06 < spion> err tcpSocket.pipe(through()).resume()
15:07 < spion> or umm simply tcpSocket.resume() 
15:07 < spion> yeah.
15:07 < __carlos> is there a logger that can do something like the following? logger.log("User {username} created at {time}", {username: "carlos", time: "now" });
15:08 < RioKuro> no it isn't the, on 'data' on the tcp server socket is already reciving and fireing before the first browser is connected
15:09 <@mbalho> RioKuro: node buffers data until you pipe it
15:10 < RioKuro> i've just tested if the second browser is even getting data piped by checking if it's the first one connected or the second one.
15:10 < RioKuro> the first one I just do a regular socket.pipe(response) and the second i do a socket.pipe(process.stdout) and they both recieve data
15:14 < RioKuro> the weird thing is that on the second browser connect a 'close' is fired from the response object, but the data keeps on streaming (but that's because i never unpipe on close), that close is what's bothering me i think
15:19 -!- mode/#Node.js [+o TooTallNate] by ChanServ
15:19 <@MI6> joyent/libuv: Ben Noordhuis master * eb1f60c : build: fix build breakage from 3fdd2a1 - http://git.io/WNf-Lg
15:22 < spion> unpipe is done automatically on close
15:29 < RioKuro> you guy's think it's bugreport time? I'm certainly out of ideas... you?
15:31 < kenperkins> isaacs is it normal to get sales calls after signing up for webinars (I was on the state of the stack webinar)
15:32 < bag-man> I'm feeling really stupid at the moment, how would I convert os.uptime() into Days Hours Minutes Seconds?
15:32 < kenperkins> is it in MS?
15:32 < kenperkins> os.uptime() / 1000 / 60 / 60 / 24 ?
15:32 < bag-man> Docs say it is in seconds
15:33 < kenperkins> ok eliminate the /1000 step :)
15:33 < bag-man> Cool
15:33 < kenperkins> > os.uptime() / 60 / 60 / 24
15:33 < kenperkins> 16.074872685185184
15:33 < gildean> var d = os.uptime() * 1000; var parsed = new Date(d);
15:34 < kenperkins> gildean: that doesn't work, it's a timespan
15:34 < kenperkins> not a date
15:34 < mAritz> gildean, that'd get you the uptime as though the server was started on unix timestamp 0 ?! :D
15:35 < gildean> ah, sorry, got mixed up
15:36 < dylukes> so guys, about the oauth thing
15:36 < dylukes> I'm struggling to figure out how to get that sort of thing into a site that really shouldn't require reauthenticating.
15:36 < dylukes> One possibility is to keep the user/pass credentials and have the server run oauth whenever it hits an invalid token error.
15:37 < gildean> bag-man: if you want a nice way to represent durations, check out moment.js
15:38 < gildean> it has all kinds of nice methods like humanizeDuration etc.
15:40 < bag-man> gildean: THanks I shall have a gander
15:42 <@isaacs> kenperkins: i think there may have been some kind of "can we not not call you unless you say no to the following checkbox?  uncheck for yes!" type of question in the signup process.
15:42 < kenperkins> I must have missed it :S
15:42 < kenperkins> isaacs ^
15:42 <@isaacs> kenperkins: yeah
15:42 < kenperkins> I usually always check don't bug me on those
15:42 < kenperkins> oh well
15:42 <@isaacs> kenperkins: i mean, it's always such a fine line, right?
15:42 < kenperkins> isaacs: someone has to pay to sponsor them
15:42 <@isaacs> kenperkins: right
15:42  * kenperkins says this as a developer advocate :P
15:43 <@isaacs> kenperkins: otoh, getting sales calls can be kind of anoying.
15:43 <@isaacs> kenperkins: unless you happen to want what they're selling.
15:43 < kenperkins> I want to manage relationships through just working together, not passing people off to my sales teams
15:43 <@isaacs> kenperkins: yeah
15:43 < kenperkins> 3.5 weeks till nodeconf :P
15:44 <@isaacs> kenperkins: fwiw, if you find that the joyent sales team is being overly pushy or whatever, please do let me know, and i'll pass that feedback along to the appropriate people.
15:44 <@isaacs> kenperkins: omgomgogm
15:44 < kenperkins> trying to decide if I should go to NCEU
15:44  * isaacs has so much work to do...
15:44 < kenperkins> isaacs: it wasn't joyent :P
15:44 <@isaacs> for nodeconf i mean
15:44 <@isaacs> kenperkins: orly?  who was it?  mongo folks?
15:44 < kenperkins> and if it was, I don't think they'd call when they see my @rackspace email :)
15:44 <@isaacs> kenperkins: hahah
15:44 <@isaacs> kenperkins: or maybe they WOULD call!
15:44 < kenperkins> yea 10gen
15:45 <@isaacs> kenperkins: ah
15:45 <@isaacs> kenperkins: that would be my next guess :)
15:46 < kenperkins> how do you even find time to write code when you're doing so many thnigs
15:46 <@isaacs> kenperkins: i don't watch much television, i guess.
15:46 < kenperkins> or have kids :)
15:46 <@isaacs> kenperkins: also, i dont' find that much time to write code, sadly :(
15:47 < kenperkins> that's my huge time sync
15:47 <@isaacs> yeah, no kids :)
15:47 <@isaacs> node and npm are is my babies :)
15:48 < kenperkins> i are is good at `MURICAN
15:49 <@isaacs> lol
15:56 <@isaacs> mscdex: can you /join #libuv please?  github issue comments are not working for piscisaureus_ and he's trying to discuss your patch.
16:04 < Doidel> Greetings. Is it possible that someone on a windows 32-bit system can compile a native module with node-gyp for me so I can afterwards use that? Currently I'm having troubles with my own gyp chain
16:09 < knksmith57> clear
16:12 < RioKuro> for the guys trying to help me with the live webm streaming to multiple clients, It is most definitely a lack of binary webm header. The browser closes it because of that. Now I'm trying to capture the webm header generated by avconv and insert it just before the pipe gets connected. Thanks for the help you guys!
16:12 < ashnur> how can i do something like ExpiresByType text/cache-manifest "access plus 0 seconds" ?
16:13 < ashnur> i could give a new Date() but that obviously won't work
16:13 < ashnur> i am fine if you just tell me where i can read about this a bit more
16:14 < JamesMGreene> Is there a timeout and/or module size limit for publishing to NPM?  If so, are there any flags/options to alter those?
16:14 < JamesMGreene> oops, nm, the publish finally finished the 2nd time around
16:14 < JamesMGreene> thanks anyway :)
16:14 -!- mode/#Node.js [+o nrajlich] by ChanServ
16:38 < JamesMGreene> Is NPM (cmd tool, not site) hosed for anyone else at the moment?
16:38 < JamesMGreene> I've had some installs fail, some publishes fail, some starring that has never finished, etc.
16:38 < JamesMGreene> Only in the last few hours here
16:38 < JamesMGreene> It was working fine about 12 hours ago
16:38 < nlf> it's a bit slow, but it seems to be working for me
16:39 < JamesMGreene> Mine is very intermittent
16:39 < shanse> https://github.com/isaacs/npm-www/issues/325
16:39 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:41 < JamesMGreene> Thanks, shanse
17:15 < booyaa|foo> dudes how do i do a npm install -g <package> to install apps to my bin dir? i want to test my package before i submit it to npm
17:16 < booyaa|foo> i know npm link in the dir adds it to the global node_module dir
17:26 < timoxley> booyaa|foo I don't think you can install -g something that isn't in the npm repo. 
17:27 < timoxley> booyaa|foo actually not true. check the help for npm install
17:28 < timoxley> npm help install. apparently you can install a tar ball or folder
17:43 < alexguan> Hi, Anyone knows how to do timer.unref() in node v0.8?
17:43 <@tjfontaine> alexguan: iirc you can't, as I didn't get it in until the 0.9 series
17:43 < bnoordhuis> alexguan: you can't
17:44 < alexguan> so after you set a timer, you have to wait for it
17:45 <@tjfontaine> alexguan: or clear it when you know you don't need to watch for it
17:46 < alexguan> I see, thanks guys
18:00 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:00 < owen1> npm install git+ssh://git@github.com:yp-engineering/quai-mongo.git#v1.0.0     is not working for me. when i omit the #v1.0.0 it's fine. any ideas?
18:04 < ChrisPartridge> own1: probably because it doesnt know what #v1.0.0 is
18:21 < booyaa|foo> damn timoxley has gome
18:22 < booyaa|foo> ah he'll get logged in debuggable.. timoxley I KISS YOU! thanks for the npm install tip was able to install usig the git uri
18:22 < booyaa|foo> isn't it @ instead of # owen1 ?
18:23 < owen1> ChrisPartridge: but i have it in package.json
18:23 < owen1> booyaa|foo: i'll try but according to file:///usr/local/lib/node_modules/npm/html/doc/install.html it's #
18:23 < owen1> git+ssh://git@github.com:isaacs/npm.git#v1.0.27
18:23 < booyaa|foo> yup my bad
18:24 < owen1> guys, how i am trying to have a one liner - cb && return cb("Error when Saving log in MongoDB", err);
18:24 < owen1> but i get SyntaxError: Unexpected token return
18:24 < booyaa|foo> owen1: odd dude odd can you try the git readonly url instead?
18:25 < booyaa|foo> i think trying to short circuit a return is a bad idea
18:25 < booyaa|foo> why do you need both &&'d?
18:25 < owen1> booyaa|foo: would u do that with if(cd) {} ?
18:25 < booyaa|foo> one sec i'll test that npm install for you
18:26 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:26 < owen1> if(cd){ cd('error foo', err); return 1}  ?
18:27 < booyaa|foo> owen1: you getting this? npm ERR! Failed resolving git HEAD (git://github.com/yp-engineering/quai-mongo.git) fatal: ambiguous argument 'v1.0.0': unknown revision or path not in the working tree.
18:28 < booyaa|foo> weird it's as if git is saying it doesn't know this version
18:28 < owen1> booyaa|foo: yeah
18:28 < booyaa|foo> but github says it's a legit version
18:28 < gildean> owen1: what are you trying to actually return?
18:30 < owen1> gildean: i am trying to call the callback and i don't want the code after the {} to get executed.
18:31 < owen1> gildean: https://github.com/yp-engineering/quai-mongo/blob/master/index.js#L74-86
18:32 < owen1> i want to be able to pass a callback to my library. but if you don't pass it, it will send stuff to stderr.
18:32 < FellowMD> @owen1 just use an else instead of an early return?
18:32 < owen1> if you pass it, it will be quite and the user of the library will be responsible to print whatever.
18:33 < owen1> FellowMD: yeah. that's an option, but i try to avoid it. i find it cleaner without els.
18:38 < kumavis> does package.json require gitHead ?
18:38 < kumavis> or is that legacy?
18:38 < kumavis> im not seeing it here https://npmjs.org/doc/json.html
18:40 < ChrisPartridge> kumavis: hm, i don't remember it ever being an option, then again I don't often use git for deps
18:43 < kumavis> ok, i'm authoring my first package and was looking at the docs + someones package.json for reference
18:44 < krnflake> what do you guys use for app metrics and log managing?
18:44 < kumavis> ty chrispartridge
19:05 < FellowMD> @kumavis do you know about npm init? https://npmjs.org/doc/init.html
19:06 < kumavis> oo that sounds useful
19:08 < kumavis> looks like git init includes a githead
19:13 <@MI6> joyent/node: isaacs master * 2900f07 : Merge remote-tracking branch 'ry/v0.10' (+7 more commits) - http://git.io/9iaOrQ
19:23 -!- mode/#Node.js [+o TooTallNate] by ChanServ
19:25 < owen1>       var msg = "Can't insert to Mongo since the app is not connected. message: " + clonedMessage;
19:25 < owen1> is there a way to print the object? 
19:25 < owen1> the + is trying to convert it to a string
19:25 < owen1> so i can't see what's inside
19:25 < paultman> Hello from Washington, DC
19:26 < owen1> paultman: hi
19:26 < ChrisPartridge> owen1: http://nodejs.org/api/util.html
19:27 < paultman> I'm surprised I hadn't done this before, but I find myself in the situation where I'd like to iterate over the keys of an object in some order (asc/dec)...
19:28 < owen1> paultman: Object.keys?
19:28 < paultman> sure, i can iterate over them with Object.keys or jquery .each
19:28 < paultman> however I'd like them to be in order
19:28 < owen1> paultman: Object.keys.sort
19:28 < FellowMD> Object.keys().sort()
19:28 < Havvy> Object.keys(obj).sort().forEach(function (key) { ... })
19:29 < paultman> oh hell, didn't realize there was a sort
19:29 < paultman> that's just what i'm looking for
19:29 < paultman>  :p
19:29 < owen1> ecmascript 5 rocks (maybe it existed before?)
19:29 < Havvy> Array#sort existed in ES3.
19:29 < owen1> ChrisPartridge: very interisting. do people use util ?
19:30 < ljharb> paultman: just be aware that Array#sort modifies the array in-place
19:30 < ChrisPartridge> i'd imagine so, util.inspect is what you're probably after
19:30 < ljharb> paultman: ie, var keys = Object.keys(); keys.sort(); is correct.
19:31 < paultman> thanks ljharb, owen1, Havvy & FellowMD
19:31 < paultman> :)
19:32 < Havvy> I only use inspect in the util module.
19:32 < FellowMD> :)
19:35 < ChrisPartridge> ugh, qt takes forever to compile
19:43 < jasonkuhrt> Hi
19:45 < jasonkuhrt> Does anyone now why the result of: console.log(someBuffer.toString().replace(/\n/g,'\\n')) would turn blaaaaaah into \naaaaaah (notice the 'bl' are replaced with '\n')
19:47 < jstream> I'm trying to use mongodjs and return the results of a find to a variable, var result = db.grid.find(); doesn't seem to work
19:47 < jstream> here's the example code I followed, but it doesn't actually return values, it simply prints them to console
19:47 < jstream> http://howtonode.org/node-js-and-mongodb-getting-started-with-mongojs
19:47 < FellowMD> @jasonkuhrt have you verified console.log(someBuffer.toString()) really is blaaaaaah?
19:47 < jasonkuhrt> @FellowMD: Hi, yes I have
19:48 < jasonkuhrt> @FellowMd if it makes any difference, I am inside a stream.Transform#_transform context
19:49 < pachet> shouldnt that replace give you back '\\naaaaaaah' anyway
19:49 < pachet> try .replace(/\n/g, '\\p') instead and make sure the leading two characters are actually being replaced
19:50 < jasonkuhrt> @packet: Yes, but I am referring to what the log output is
19:50 < FellowMD> It doesn't happen in the simple case for me: https://gist.github.com/FellowMD/b676cedc49651fad9e38
19:50 < jasonkuhrt> in telnet I enter: blaaaaah
19:51 < jasonkuhrt> server log is: \paaaaah
19:51 < jasonkuhrt> and the non-#replace log shows: blaaaaah
19:51 < FellowMD> is it coming in two data events?
19:51 < FellowMD> bl
19:51 < FellowMD> and aaaaah
19:51 < FellowMD> ?
19:51 < paultman> ok, second Q ;)  so for my app, I'm saving stringified json objects to localstorage, and also posting them to my node server.  These could eventually get very big and I'm not considering compressing them (from the client) do u guys know of any good ways to do that (plugins or something)
19:52 < paultman> *now
19:52 < paultman> *now considering compressing
19:52 < jasonkuhrt> @FellowMD: checking
19:53 < pachet> paultman: gzip 'em
19:53 < paultman> pachet: gzip from the browser?
19:53 < pachet> paultman there are js implementations of gzip for the browser, yes
19:53 < pachet> paultman also see http://nodejs.org/api/zlib.html
19:53 < jasonkuhrt> @fellowMD: whoa, this is what I'm getting:
19:54 < jasonkuhrt> telnet: quak
19:54 < jasonkuhrt> server:
19:54 < jasonkuhrt> woof
19:54 < jasonkuhrt> \p woofak
19:54 < jasonkuhrt> code: console.log('woof', s.replace(/\n/g, '\\p'), 'woof');
19:54 < jasonkuhrt> so the quak is getting cut off, then insidered after both woofs...
19:54 < jasonkuhrt> so confused
19:55 < paultman> thanks pachet, I'm using compress with express on the ss, now looking for a popular client side lib
19:56 < jasonkuhrt> more odd examples, for code: console.log('woof', 'woof', 'woof', s.replace(/\n/g, '\\p'), 'woof', 'woof')
19:56 < jasonkuhrt> telnet: quak
19:56 < jasonkuhrt> result: quak
19:56 < jasonkuhrt> result**: woof
19:56 < jasonkuhrt> \p woof woofof quak
19:59 < jasonkuhrt> HINT:
19:59 < jasonkuhrt> The console functions are synchronous when the destination is a terminal or a file (to avoid lost messages in case of premature exit) and asynchronous when it's a pipe (to avoid blocking for long periods of time).
19:59 < jasonkuhrt> Indeed, I am inside a pipe...
20:09 < jasonkuhrt> still confused
20:09 < jasonkuhrt> there is something fairly nuanced about logging within a stream it seems
20:09 < jasonkuhrt> because I cannot reproduce my problem in, i.e., a node repl
20:09 < sw99> I'm trying to choose a SQL database for my Node.js server
20:09 < sw99> PostgreSQL vs MySQL?
20:10 < sw99> iyo
20:10 <@mbalho> both are possible to use with node
20:10 < sw99> yeah, that's the dilemma
20:10 <@mbalho> so go with what you know
20:10  * _6a68 detects flamebait
20:10 <@mbalho> innocent until proven guilty
20:10 < _6a68> heh
20:11 < _6a68> mbalho: specifically "PostgreSQL vs MySQL?"
20:11 < _6a68> ;-)
20:11 < pachet> all databases are special snowflakes
20:11 <@mbalho> _6a68: i interpreted that question as 'which one is easier to use from node'
20:12  * _6a68 nods
20:12 < sw99> i'll toss a coin
20:12 < sw99> soon
20:12 < sw99> or just stick with mysql which i've used in the past
20:12 < sw99> whatever
20:13 < sw99> i am willing to learn postgresql if it's any better
20:13 < sw99> meh
20:13 <@mbalho> sw99: picking a db is outside the scope of the node support channel, but the good news is that you can always pick one and switch later
20:14 < _6a68> mbalho++
20:14 < sw99> yea
20:14 < sw99> h
20:14 < vampi-the-frog> sw99, MariDB
20:14 < vampi-the-frog> MariaDB*
20:15 < vampi-the-frog> sw99, from what I know, the difference between MySQL/MariaDB and PostgreSQL is that the first is focused on performance, whereas the latter on correctness of the data, or something like that
20:15 < vampi-the-frog> sw99, also, MySQL is owned by oracle, and MariaDB is the fork that the original developers of MySQL made, to make sure it's forever open source
20:15 < sw99> ah ok
20:16 < vampi-the-frog> sw99, and you can easily switch from an existing MySQL install to a MariaDB, so that's what I recommend
20:17 < vampi-the-frog> you should learn about triggers, stored procedures and functions, which can be useful for handling data, for example, I made a forum database with procedures for inserting, editing and deleting topics and messages, so my node js Model class only executes one-line queries
20:17 < sw99> vampi-the-frog: you make your whole site in node?
20:17 < sw99> using express maybe
20:17 < sw99> ?
20:18 < PaddoSwam> express and jade are a wonderful combination for rapid development ONCE you get to know them :)
20:20 < vampi-the-frog> yes, express + ejs
20:20 < vampi-the-frog> mostly cause I needed instant messaging and updates
20:20 < sw99> vampi-the-frog: ejs vs jade?
20:21 < vampi-the-frog> sw99, i preferred ejs because of its similarity to php, and I'm a long time php worker
20:21 < sw99> i see
20:21 < sw99> ok
20:21 < vampi-the-frog> it's your choice
20:22 < sw99> nice
20:30 < sw99> vampi-the-frog: you put your node server behind nginx?
20:30 < jasonkuhrt> FellowMD: replacing \r\n seems to work, but replacing only \r fails
20:30 < FellowMD> ohhhhhhh
20:31 < FellowMD> \r returns the cursor to the start of the line
20:31 < sw99> this answer explains how to put node.js behind nginx: http://stackoverflow.com/a/5015178
20:31 < FellowMD> so, the characters at the beginning get overwritten
20:31 < sw99> how did he know which headers to pass on?
20:31 < FellowMD> probably/maybe
20:31 < sw99> and which headers not
20:31 < vampi-the-frog> sw99, apache can also proxy, but I haven't figured out the best way to do this. There is also a node.js script that acts as the proxy, I forgot where it was, but it can be just as good, especially since you should be able to proxy websockets
20:33 < cucu> hi
20:33 < vampi-the-frog> I'm looking for a way of rejecting a POST file upload before anything is transfered (based on headers), to avoid useless transfers (unauthorized transfers that can be any size), and also processing the uploaded file as it arrives, without using a temporary file. Any hints?
20:33 < cucu> one question: what algorithm do you use to encode passwords?
20:34 < cucu> sha1 is still used?
20:34 < vampi-the-frog> cucu, I noticed SHA1 is popular, I might be wrong. Use a 'salt' as well
20:34 < cucu> or there is anything better
20:35 < gildean> cucu: don't encode or encrypt your passwords, hash them
20:35 < cucu> ok, but what algorithm should I use?
20:36 < cucu> does javascript have any function to hash in sha1?
20:36 < gildean> cucu: the node core has pbkdf2 http://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2_password_salt_iterations_keylen_callback
20:36 < merpnderp> cucu: bcrypt
20:36 < merpnderp> bcrypt doesn't have a good gpu implementation, so it will be hard for haxors to crack your hashes.
20:37 < gildean> cucu: the other popular one is bcrypt: https://github.com/ncb000gt/node.bcrypt.js
20:39 < cucu> is pbkdf2 better than sha1?
20:39 < cucu> ty for answers
20:39 < cucu> i had just seen crypto
20:45 < sw99> cucu: what do you mean?
20:45 < sw99> those are 2 different things
20:46 < kenperkins> do people use custom toJSON implementations for console.dir?
20:46 < kenperkins> or is there a way to do such a thing
20:47 < cucu> isnt pbkdf2 like sha1?
20:47 < cucu> to hash passwords?
20:47 < sw99> cucu: sha1 is used to hash passwords, but pbkdf2 is usually run with thousands of iterations to generate encryption keys
20:48 < sw99> (to make brute-force attacks harder)
20:48 < sw99> (pbkdf2 i mean)
20:50 < Khazix> You guys know a good book about unit testing javascript?
20:50 < merpnderp> cucu: don't use sha1 to hash passwords. It is a fast hash and GPU's can create billions of hashes a second, so that if/when your passwords are compromised, they can be reversed quickly.
20:50 < Khazix> or an article
20:50 < Khazix> screencast
20:50 < cucu> so it iterates with an algorith? like using sha1 100 times?
20:50 <@isaacbw> Khazix: what would you expect it to tell you
20:51 < cucu> merpnderp what do you use instead?
20:51 < merpnderp> cucu: bcrypt
20:52 < cucu> yeah im reading the api but so few examples...
20:55 < merpnderp> cucu http://pastebin.com/wgDqQQCr
20:55 < merpnderp> cucu: that workfactor means it iterates 2^12 times.
20:55 < cucu> thanks merpnderp
20:56 < cucu> i appreciate it
20:56 < merpnderp> cucu: this is better: http://devsmash.com/blog/implementing-max-login-attempts-with-mongoose
20:59 < cucu> thats what i needed :)
21:00 < cucu> i wonder if I should use mongoose instead of mongodb module
21:01 < merpnderp> cucu: I <3 mongoose and for any complex db access you'll end up half assing your own DAL, so why not use LearnBoost's?
21:04 < cucu> i will work on it
21:04 < cucu> ty :)
21:08 < dypsilon> merpnderp, i don't think you will have to half ass your own dal
21:08 < dypsilon> mongodb native driver is pretty good
21:08 < dypsilon> it's enough to work with directly
21:08 < jasonkuhrt> If I am going to create a simple protocol on top of tcp
21:09 < jasonkuhrt> can someone point me to some goo resources about what to do/not to do
21:09 < jasonkuhrt> i.e. what makes a good protocol
21:09 < jasonkuhrt> for someone that say never wrote one
21:09 < jasonkuhrt> perhaps there are ways to do it that are slower, faster, etc
21:09 < jasonkuhrt> better char codes than others to slice on,etc
21:10 < dypsilon> jasonkuhrt, if you haven't looked at it already: https://npmjs.org/package/nssocket
21:10 < jasonkuhrt> thanks
21:12 <@isaacbw> using an orm with mongodb is missing the point of mongodb
21:12 < dypsilon> +1
21:12 < dypsilon> although there are some orm features mongodb is missing right now
21:12 < dypsilon> like identity map
21:13 < dypsilon> http://martinfowler.com/eaaCatalog/identityMap.html
21:14 < dypsilon> does anyone know of some module which provides such functionality for mongodb?
21:14 < merpnderp> dypsilon: I'm sorry, I didn't mean to imply that there was anything wrong with the native mongdb driver. I use it along with mongodb. But when I select something from the DB, it's nice to have a mini-framework for hanging methods on that data. And when I'm writing to the db, it's nice to have node-validator built in to my objects.
21:15 < merpnderp> I mean I use it along with mongoose.
21:16 < dypsilon> merpnderp, you can do the same without mongoose and with very little code. I don't see the point of mongoose at this point.
21:19 < dypsilon> on the other hand, i guess mongoose, adds a standartisation layer, like connect, which helps to build pluggable modules
21:22 < dypsilon> merpnderp, am I able to call the native driver directly when using mongoose?
21:23 < Rafael> what's up
21:23 < FellowMD> the SKY
21:23 < FellowMD> BAM
21:23 < Guest82876> haha
21:25 < Guest82876> I'm having a problem on publishing a new entry to NPM... It's basically a single js script. On my package.json I'm pointing to the right direction but when I try to require('my_module') it doesn't work... I'm wondering what this can be...
21:25 < Zolmeister> put it in node_modules
21:25 < Guest82876> I tried to run sudo npm link as well, it seems to install but when I do npm install my_module it tries to get the module from npmjs.org
21:25 < Guest82876> yeah, I was wondering if the right thing to do is to put it on the node_modules folder
21:26 < Zolmeister> node_modules -> module -> app.js
21:26 < Zolmeister> though, you right that linking is better
21:26 < Guest82876> yeah, that's what I read from the documentation
21:26 < FellowMD> So, when you npm link, it creates two symlinks
21:26 < Zolmeister> I think if you go to your app, run 'npm link' in it
21:26 < Guest82876> dunno why it's not finding the module when i call it with require()
21:27 < Zolmeister> and then another app that you want to import, 'npm link modulename'
21:27 < FellowMD> one from your global install folder to the linked module, and one from the consuming module to the link in global
21:27 < FellowMD> Does anyone know why they use two?
21:27 < FellowMD> It's bitten me in the ass before and I can't figure out the benefits
21:27 < Guest82876> nope, there's not two symlinks, only one
21:28 < FellowMD> there used to be two. has it been changed?
21:28 < Zolmeister> global module -> npm link
21:28 < Zolmeister> requiring module -> npm link modulename
21:28 < Guest82876> you can set the binary over your json file but you don't need to if you already pointed `main` to the right place
21:28 < FellowMD> well say there are no symlinks yet
21:29 < FellowMD> cd consuming_module
21:29 < FellowMD> npm link ../used_module
21:29 < FellowMD> creates two symlinks
21:30 < Guest82876> a-ha you're right! i ran npm install module and now it works
21:30 < Guest82876> i was running `npm link`
21:30 < Guest82876> thought the package.json was doing his job
21:30 < FellowMD> Anyway, I just create a single symlink myself now.
21:30 < FellowMD> g2g
21:30 < Guest82876> thank you man
21:34 < rafaelrinaldi> nite
21:35 < DennisG> having some issues with npm as the log seems to be missing. what's the best approach to fixing this?
21:35 < kanahee> hello, I am trying to install Sails, but it tells me I have 0.6.x of nodejs, but I cant seem to find how to update it, I am currently in ubuntu 
21:35 < rafaelrinaldi> @DeninsG what are you trying to do?
21:36 < DennisG> run yeoman
21:36 < Zolmeister> kanahee: uninstall via apt, and install via dibary on nodejs.org
21:36 < DennisG> npm install -g yo
21:36 < rafaelrinaldi> I think you are seeing only warnings right? but the app is actually being installed
21:37 < DennisG> rafaelrinaldi:  getting a module error when I try to run anything with npm
21:37 < DennisG> Cannot find module 'npmlog'
21:37 < rafaelrinaldi> if you're using NVM I would recommend you to update NPM version
21:39 < DennisG> rafaelrinaldi: I'm using npm
21:39 < rafaelrinaldi> @DennisG https://github.com/creationix/nvm
21:39 < DennisG> rafaelrinaldi: I use n
21:39 < DennisG> but that still does not solve why npm no longer works
21:40 < DennisG> maybe it is best to just uninstall node
21:41 < DennisG> @rafaelrinaldi Is there a good way to uninstall node?
21:53 < DiegoMax> hello
21:53 < DiegoMax> is there a quick way to convert a JS Date() into an sql friendly timestamp without timezone ?
21:57 < Ritzton> hello
21:57 < bnoordhuis> DiegoMax: date.toISOString()?
21:57 < DiegoMax> yah thanks, i found that toUTCString seems to work
21:57 < DiegoMax> and seems to make more sense as i need to be sures that dates are UTC
21:59 < Ritzton> I am trying to configure apache for node.js but I have some problems, I did "ProxyPass / http://localhost:3000/" it is working fine except with a special case like that : http://domain.com/foo/bar/%241%24WnBTwpxY%24mbbkewaFKP5bCpTyNbOJS%2F would you know why ?
21:59 < robertkowalski> hi
22:00 < Zolmeister> Ritzton: (don't know, but consider nginx)
22:01 < Ritzton> Zolmeister> I am sorry I wanna use apache
22:04 <@isaacbw> Ritzton: why
22:09 < Ritzton> isaacbw> because I only have one node js app on my server, the other ones are php so apache is fine
22:10 < Zolmeister> Ritzton: Nginx does php
22:11 < Ritzton> alright I am used to apache I want to use apache :-) what is your problem with it ? :-)
22:11 < mbalho_> its not the ultimately solution to everything and you are wrong and should feel bad
22:11 < Havvy> Ritzton: Scalability mostly.
22:12 < mbalho_> ultimately
22:12 -!- mode/#Node.js [+o mbalho] by ChanServ
22:12 <@isaacbw> and you'll have less of a headache using nginx with node
22:14 < Ritzton> I think I will think about it when I will have more node js app
22:14 < Ritzton> I want to understand why apache is not doing what I expect
22:15 <@isaacbw> try #apache
22:16 < Ritzton> yeah I cannot post in the channel unfortunatly
22:16 <@isaacbw> um
22:17 < Raynos> npm is really slow :(
22:18 < Zolmeister> Raynos: wait till you try pip or gem, then you'll see npm is really fast
22:18 < Raynos> its just realy slow right now
22:18 < Raynos> npm publish takes forever
22:25 < samholmes> If anyone knows about Kue, please check my question in the comments on S.O: http://stackoverflow.com/questions/16824102/how-to-run-node-js-jobs-routines/16824864?noredirect=1#comment24329820_16824864
22:35 < qard> You can use delay() to delay a job by a set number of milliseconds, but it's not really intended for very long scale delays.
22:36 < devongovett> anyone know why a child process would complain that it can't write to its stdout pipe back into node on linux?
22:36 < sunbeam> i have a list of domain names, and i would like to check whether these are up or down
22:36 < sunbeam> can i do this with node.js?
22:37 < daekano> you could do that with curl
22:37 <@tjfontaine> define "up or down"
22:37 < daekano> or ping.
22:37 <@tjfontaine> otherwise my answer is "yes"
22:39 < sunbeam> check each domain is up or not  and tell me which domains are functional
22:42 < pancake> boh, node's setTimeout doesnt accepts a string on first arg :(
22:43 < levilewis> anyone here use light table? how is it with nodejs?
22:47 < mscdex> i have a light table
22:47 < mscdex> it doesn't weigh very much
22:48 <@tjfontaine> sunbeam: there's many levels of availability you're discussing there, that's why there are whole startups around monitoring
22:49 <@tjfontaine> sunbeam: but you can certainly check resolvability of a domain, the relative liveliness, and if it responds to given services, and certainly if their responses are appropriate
22:57 < Wraithan> So I can hit "https://registry.npmjs.org/jade" but "npm install jade" appears to be hanging. https://dpaste.de/K2owz/ is it running with --verbode
22:58 < jlipps> is `npm publish` timing out for anyone else?
22:58 < Wraithan> npm version: 1.2.24 node version: v0.10.9
22:58 < Wraithan> jlipps: npm install is hanging for me, so I assume it is something up with their servers :(
22:58 < jlipps> makes sense, thanks Wraithan
23:00 < jlipps> Wraithan:  fwiw it just started working for me
23:01 < Wraithan> "npm info retry will retry, error on last attempt: Error: connect ETIMEDOUT"
23:01 < Wraithan> :/
23:02 < sunbeam> tjfontaine: ok, do you know any examples?
23:02 < sunbeam> tjfontaine: do you also know why someone would specifically want this to be done utilizing node.js?
23:03 < Wraithan> https://twitter.com/npmjs -- appears to be known and they are fixing
23:06 <@tjfontaine> sunbeam: I don't have any nodejs examples that I've vetted, but there seem to be things on npmjs. It makes sense to use node for this as you're doing checks that are certainly under most circumstances blocking, but similarly time sensitive
23:06 < ningu_> sunbeam: I assume someone would want to do this with node.js because of its async i/o model. it's particularly well designed for applications where most of the time is spent waiting for i/o.
23:07 < sunbeam> tjfontaine: whats npmjs?
23:07 < ningu> npmjs is the node package repository
23:07 < ningu> npmjs.org
23:08 < sunbeam> ok
23:08 < sunbeam> any idea what i should look for?
23:09 < ningu> I don't know, dns?
23:09 < ningu> look for something that has to do with what you want to do :P
23:10 < sunbeam> tjfontaine: checks that are certainly under most circumstances blocking, but similarly time sensitive - how do you mean this?
23:10 < ningu> sunbeam: if you don't know what "blocking" means, you should read up on that
23:10 < ningu> for example, http://en.wikipedia.org/wiki/Asynchronous_I/O
23:13 < sunbeam> ah ningu 
23:13 < sunbeam> so multiple things at a time
23:13 < ningu> sunbeam: yes, node uses a single thread and callbacks to handle async operations
23:13 < sunbeam> ningu: something a language like PHP cannot 
23:13 < sunbeam> right?
23:14 < ningu> if you have many dns lookups going at once, you wouldn't really want a separate thread for each one
23:14 < ningu> sunbeam: yeah, in php you'd have to have many php processes
23:14 < ningu> or wait for one dns lookup before doing the next
23:14 < sunbeam> ah i think i get it
23:14 < sunbeam> thnx
23:16 < _6a68> sunbeam: read the c10k article for background. read about libuv and libevent to understand the implementation underneath nodejs.
23:16 < ningu> what's the c10k article?
23:16 < _6a68> ningu: http://www.kegel.com/c10k.html
23:16 < _6a68> also http://en.wikipedia.org/wiki/C10k_problem
23:16 < ningu> cool, thanks
23:16 < _6a68> np :-)
23:17 < ningu> I think I've heard of the concept actually but didn't know that article
23:17 < _6a68> it's super old by web standards
23:17 < sunbeam> but thanks
23:17 < sunbeam> ningu: but using node.js for this,
23:17 < ningu> it's funny cause my node apps don't actually need to serve huge numbers of clients at once
23:17 < sunbeam> ningu: should just be prefered if you need to do this task more often , right?
23:18 < ningu> but I'm frequently writing apps to run on, say, ec2 micro instances, and node apps can use streams easily
23:18  * _6a68 nods
23:18 < ningu> sunbeam: yes, if you need to do many at once
23:18 <@tjfontaine> sunbeam: fwiw availability monitoring isn't exactly an easy to solve problem, but I encourage you to figure that out :)
23:19 < sunbeam> tjfontaine: say, 5000 domains
23:19 < sunbeam> once a day
23:19 < sunbeam> whats the problem?
23:19 < ningu> sunbeam: how long is the timeout? and do you care when each domain gets checked during the day?
23:20 < ningu> sunbeam: in one day there are 86400 seconds, so you would have 17 seconds per domain
23:20 < sunbeam> ningu: why 17 seconds?
23:20 < ningu> if you are doing it all in one process and blocking
23:20 < ningu> sunbeam: 86400 / 5000 = 17.28
23:21 <@tjfontaine> sunbeam: there are many facets to monitoring, ping/traceroute, dns, http[s] response, and content verification
23:21 < sunbeam> ningu: but why would it take 17 seconds each?
23:21 < sunbeam> tjfontaine: thats what i wanted to know thnx
23:21 <@tjfontaine> sunbeam: all of which are generally only interesting when viewed in aggregate from as many distinct regional monitoring zones you can afford
23:22 < ningu> sunbeam: you have to set the timeout to something, what I mean is you can't set it to longer than that and guarantee that it will finish in 24 hours or less
23:22 < sunbeam> ningu: why can't it finish in just 10 mins?
23:22 < ningu> tjfontaine: do you happen to know if there is a de facto standard monitoring suite? I mean something open source that does some of this stuff, maybe not all of it
23:23 < sunbeam> tjfontaine: so you say checking from 1 location, say a UK server isnt interesting?
23:23 < ningu> sunbeam: if all of the domains are up and the lookups happen quickly, it might finish sooner
23:23 <@tjfontaine> ningu: there are lots of them, I have experience with nagios from a general service availability but there are tons
23:23 <@tjfontaine> sunbeam: it's interesting so long as that's the onyl path you care about, but the internet is a much larger place than that
23:24 < ningu> sunbeam: I was just imagining the worst case scenario really
23:24 < sunbeam> ningu: ok
23:24 < sunbeam> tjfontaine: so if someone asks me, i want these 5000 domains checked, what type of checking would be most logical?
23:24 < ningu> anyway, doing one dns lookup at a time seems silly to me if you have an alternative
23:25 < _6a68> sunbeam: do you have a specific problem or goal?
23:25 <@tjfontaine> sunbeam: you need to find out what they mean by "available" and if that's everything we've talked about, you have to ask them from where they are interested in figuring that information
23:25 < dylanvee> If I have a Express app, is there a way I can get to the underlying socket that it's listening on?
23:26 <@tjfontaine> sunbeam: for your client it may be that they only care about a small region for its availability, or doing any checks are better than what they're doing now
23:26 <@tjfontaine> sunbeam: but as you build it, consider that you'll want to design it in such a way that you can take into account multiple regions
23:26 < ningu> dylanvee: iirc, the 'http' module does not inherit from net.Socket, but I could be crazy :)
23:27 < sunbeam> tjfontaine: yep, ok
23:27 < sunbeam> _6a68: not really
23:27 < sunbeam> i mean, is it so rare that i would want to check whether some domains are available?
23:27 < sunbeam> :P
23:28 < ningu> sunbeam: as tjfontaine said, it's not really a simple question
23:28 < ningu> if you mean "I want to do a dns lookup from machine X on domain Y" then it's pretty simple
23:29 <@tjfontaine> well, there's a lot to dns, are you only concerned with your upstream caching server, or making sure your authoritative servers are behaving?
23:29 <@tjfontaine> and if there's problem with authoritative, you should also be monitoring its ip availability :)
23:29 < sunbeam> ok ill see
23:30 <@tjfontaine> what is important is to define "available" to a scenario you want to handle
23:32 < ashnur> how can i set an Expires header to a file to imediatelly expire after the browser receives it?
23:32 < ashnur> something like this ExpiresByType text/cache-manifest "access plus 0 seconds"
23:32 < dylanvee> ningu: Hmm. Thanks
23:32 < ashnur> that is an example from mdn for apache
23:36 < owen1> using express, how do i pass my db object to a route?
23:37 < owen1> app.get('foo', someRoute)
23:40 < ashnur> this is embarassing. i feel like 4 out of 5 times i ask something really simple here what i cant find with google (because all the spam about how to set cookies and js and css files to one year, like that is difficult)
23:40 < ashnur> i just get ignored
23:41 < ashnur> it is strange that no one here had to ever do this  before
23:41 < _6a68> ashnur: are you serving an html file? something else?
23:41 < _6a68> ashnur: http://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Avoiding_caching maybe
23:41 < owen1> when not using express, i always pass my dependencies into my routes, like this - https://github.com/oren/node-website-template/blob/master/routes/home.js     how do i pass my config object when using express?
23:42 < captain_morgan> hey @isaacs, how are you?
23:42 < ashnur> _6a68: i fail to see how is that related, but if you check what I wrote you can see that I want to be sure that the appcache manifest file does not get cached by the browsers..
23:42 < ashnur> _6a68: thanks, that might be helpful, i will check it
23:42 < _6a68> ashnur: if you serve it over http, I think http caching headers should be helpful
23:42 < _6a68> :-)(
23:43 < _6a68> I mean, :-)
23:44 < Ritzton> how do you configure express.io to work with both http and https ? I cant see it written here https://github.com/techpines/express.io
23:48 < wathek> did any one use node js with Redis ? I'm doing this : http://pastebin.com/s6TsUfBq and I have nothing shown in the console even when I do an rpush in the redis cli ?
23:54 < brycebaril> wathek: trying your paste out now, one sec
23:55 < wathek> brycebaril, thank you
23:56 < brycebaril> wathek: I think you're making it harder than it is, plus it is async, so you need to provide a callback to get data out
23:57 < wathek> brycebaril, hum any hint ?
23:57 < brycebaril> https://gist.github.com/brycebaril/5688711
23:58 < wathek> I'm trying that
23:58 < brycebaril> that emitted when I did `redis-cli rpush Dispo foo`
23:58 < wathek> ok
23:58 < wathek> brycebaril, another thing that I don't understand
23:58 < rud> any clues how to reference to "socket" while running an authorization callback with socket.io, as in io.of('/foo').authorization(function(data, callback)); ..? i can't find how to reference to the connecting socket instance (so i can emit back an error message to it)..
23:58 < wathek> c.blpop("Dispo", 0, console.log)
23:59 < wathek> the second argument is for what ?
23:59 < wathek> brycebaril, the 0 ?
23:59 < brycebaril> that's the timeout, http://redis.io/commands/blpop
23:59 < wathek> brycebaril, ah ok thank you
23:59 < wathek> brycebaril, I'm trying your code
--- Log closed Sat Jun 01 00:00:29 2013
