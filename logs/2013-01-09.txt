--- Log opened Wed Jan 09 00:00:18 2013
--- Day changed Wed Jan 09 2013
00:00 < dilip> CoverSlide 
00:00 < dilip> I have looked at the doc but i am still have troubles
00:00 < wwicks> I'm trying to update to node 0.8.14 from 0.8.2 but I'm at a roadblock because of the crypto changes. I made the mistake of using a Buffer as the 2nd argument (the key).
00:01 < dilip> CoverSlide   my dir structure look s like   sample/node_modules/dnode
00:01 < dilip> sample/dnodesample/server.js
00:02 < CoverSlide> as long as dnodesample doesn't have a node_modules folder you should be ok, i think
00:02 < wwicks> ..that is crypto.createCipher('aes256', Buffer('passkey')) in 0.8.2 is not compatible with 0.8.14
00:02 < CoverSlide> but just for shits and giggles, maybe move server.js to sample/
00:03 < CoverSlide> wwicks: then try a binary string
00:03 < dilip> no it does not have 
00:04 < dilip> this is my script code 
00:04 < dilip> var DNode = require('dnode');  var server = DNode({    timesTen : function (n,f) { f(n * 10) }, }).listen(6060);
00:04 < dilip> coverslide 
00:04 < CoverSlide> ok so is there an error
00:04 < CoverSlide> when you try running it
00:05 < dilip> i get error 
00:05 < dilip> var DNode = require('dnode');  var server = DNode({    timesTen : function (n,f) { f(n * 10) }, }).listen(6060);
00:05 < dilip> error :
00:05 < dilip> events.js:71         throw arguments[1]; // Unhandled 'error' event                        ^ Error: listen EADDRINUSE     at errnoException (net.js:770:11)     at Server._listen2 (net.js:910:14)     at listen (net.js:937:10)     at Server.listen (net.js:986:5)     at D.dnode.listen (C:\F\personalCodes\NodeJS\mysamples\node_modules\dnode\index.js:112:16)     at Object.<anonymous> (C:\F\personalCodes\NodeJS\mysamples\DNodeSample\DnodeSer
00:06 < CoverSlide> well then you have dnode just fine
00:06 < CoverSlide> the problem is port 6060 is being used
00:06 < wwicks> Digging into the node source- it looks like it converted my buffer to some string- and then later back to a buffer. I cannot figure out what combination of those events happened though.
00:06 < CoverSlide> you need to kill whatever is using that port
00:07 < dilip> i have installed npm install event to sample/node_modules/event
00:07 < dilip> no help 
00:07 < CoverSlide> wwicks: ok, the problem is something else is using port 6060
00:07 < CoverSlide> maybe try changing the port number
00:07 < CoverSlide> oop, sorry
00:07 < CoverSlide> that was for dilip 
00:08 < wwicks> :) it happens
00:08 < dilip> CoverSlide let me check 
00:10 < dilip> CoverSlide it worked on another port 
00:10 < dilip> thanks 
00:12 < CoverSlide> wwicks: are you reading that on master or on v0.8.14-release ? the v0.8.14-release branch seems to go into some crazy C++ code that I don't feel like reading
00:12 < wwicks> Is there anyone that could look into node_crypto.cc @ v0.8.2 and tell me what CipherInit did with the Buffers I passed in for the key? If I know what conversion happened, I could work around it.
00:14 < wwicks> CloverSlide: maybe that answered your question inadvertantly?
00:14 < CoverSlide> yeah
00:24 < switz> Hey guys, did a roundup of some Node.js websocket hosting providers: http://saewitz.com/node-dot-js-websocket-hosting-roundup/
00:25 < fermion> sorry, tjholowaychuk — installing giflib (using homebrew) and cleaning/recompiling node-canvas worked
00:25 < tjholowaychuk> fermion oh nice :D
00:25 < andrewaclt> switz, If you have heroku then I don't understand :(
00:25 < tjholowaychuk> good old global deps
00:26 < fermion> tjholowaychuk I feel like there's a bug report here to file with node-canvas, just not sure how to draft it
00:26 < fermion> tjholowaychuk thoughts?
00:26 < switz> andrewaclt: what's not to understand
00:26 < andrewaclt> switz, Is it a websocket roundup or a socket.io roundup? :)
00:26 < switz> I'm using xhr-polling at the moment. Convinience and reliability at the sake of using websockets.
00:27 < switz> It's a bit of both
00:27 < switz> Like I said in the post, there is no correct solution for someone who wants to use websockets at the moment
00:27 < switz> but this coming year should be quite prolific for websockets/node
00:27 < wwicks> I thought it looked like it just called val->ToString() so I tried to simply do crypto.createCypher('aes256', theBuffer.toString()) but the new updates convert that to Buffer(str, binary')... it looks like it makes it to DecodeWrite in node.cc where they added a special case to handle buffers and it was a dead end.
00:27 < fermion> tjholowaychuk I've got to head out, I'd love to make this not happen for anyone else. let me know if there's anything I can do to make that happen!
00:27 < fermion> thanks again, ciao
00:28 < andrewaclt> switz, oh you heard I was going to release this year? :P
00:29 < othiym23> god, why is the default toString for RegExps so stupid?
00:29 < othiym23> or, rather, the default toJSON
00:29 < switz> andrewaclt: Now you're confusing me lol
00:29 < andrewaclt> switz, Sorry :(
00:30 < CoverSlide> there's a RegExp.prototype.toJSON
00:30 < CoverSlide> ?
00:30 < switz> haha
00:30 < switz> I'll live.
00:31 < othiym23> CoverSlide: no, but whatever JSON.stringify does with regexps by default is no bueno
00:31 < CoverSlide> i see that
00:31 < CoverSlide> it is shitty
00:31 < CoverSlide> although technically a RegExp isn't JSON.stringifiable
00:32 < CoverSlide> maybe it would be better if it threw
00:32 < othiym23> I would be happiest if it just returned the source of the regexp
00:33 < othiym23> that would be no better and no worse than what JSON.stringify does for dates
00:33 < wwicks> @switz no websockets for Heroku?
00:33 < CoverSlide> yep that's true
00:34 < switz> wwicks: correct
00:34 < wwicks> I don't have any 2 way communication needs- so I'm just using EventSource. I'm in love with it now heh
00:34 < switz> However, xhr-polling was significantly faster than I would have ever expected
00:34 < switz> and in fact, faster than nodejitsu's websockets were
00:34 < switz> bigger server load though
00:34 < switz> of course
00:35 < switz> you can compare them here
00:35 < switz> http://phishvids.com <-- xhr-polling vs. http://pv.jit.su <-- websockets
00:37 < wwicks> I thought Heroku had it working... was it working on the Bamboo stack? I see it says it isn't available on the Cedar stack. https://devcenter.heroku.com/articles/using-socket-io-with-node-js-on-heroku
00:38 < switz> I believe you can use the Pusher addon, but it's very expensive
00:38 < CoverSlide> switz: not sure that's the best use-case for websockets
00:38 < andrewaclt> seems best to deploy it yourself on something like linode
00:39 < cxreg> is it possible to alter your NODE_PATH from within node?
00:39 < cxreg> in perl, i can "use lib", anything similar?
00:40 < CoverSlide> cxreg: im checking the source now, but i assume it only checks it initially
00:40 < switz> andrewaclt: yep, that was my conclusion.
00:41 < cxreg> CoverSlide: looks like the only thing that affects it at resolve time is your cwd
00:41 < andrewaclt> switz, I really hope heroku will step up
00:42 < CoverSlide> cxreg: try require('module').globalPaths
00:42 < cxreg> that's a copy
00:42 < switz> andrewaclt: yep, appfog looks very promising though, they just purchased nodester and have promised websocket support
00:42 < CoverSlide> cxreg: https://github.com/joyent/node/blob/v0.8.16-release/lib/module.js#L495-L522
00:43 < CoverSlide> ok edit NODE_PATH and then call require('module')._initPaths()
00:43 < cxreg> hmm.
00:43 < cxreg> good point
00:47 <@konobi> andrewaclt: nodejitsu supports websockets
00:47 < andrewaclt> konobi, I know, but switz found that xhr-polling was faster on heroku than websockets on nodejitsu
00:49 <@konobi> how about xhr-polling on nodejitsu vs websockets on nodejitsu?
00:49 < CoverSlide> heroku's bigger, probably got better infrastructure. websockets in general should be faster than polling because no http overhead
00:49 < andrewaclt> hence why I'd wish heroku got on the ball :)
00:50 <@konobi> if you're testing on a "free" sandbox image... well, you're not really testing it
00:50 < switz> slightly slower, but negligable difference
00:50 < switz> I didn't, I paid for it.
00:50 < switz> Meanwhile, the heroku dyno is free.
00:50 <@konobi> switz: time to bug the nodejitsu guys =0)
00:51 <@konobi> there's a few of em in here
00:51 < switz> compare heroku xhr vs nodejitsu websockets here:
00:51 < switz> 	http://phishvids.com <-- xhr-polling vs. http://pv.jit.su <-- websockets
00:52 < switz> appfog xhr: pv.aws.af.cm
00:53 <@konobi> switz: i'm not seeing any websocket activity on that jit.su
00:53 <@konobi> oh.. there's one now
00:53 < switz> I am :\
00:54 <@konobi> chrome dev tools isn't showing anything for me in terms of websockets
00:54 < switz> weird. I'm seeing it.
00:54 < CoverSlide> switz: is it the exact same code just with transports changed?
00:55 < CoverSlide> maybe deploy an xhr version to nodejitsu
00:55 < CoverSlide> cause if that's the case, maybe it's a socket.io thing
00:55 < cxreg> CoverSlide: unsurprisingly that worked fine.  a little wary about using a private method, but, meh it works :)
00:55 < CoverSlide> or derby
00:55 < switz> CoverSlide: the nodejitsu might be a bit old. I'll redeploy now with just xhr-polling give me a second
00:55 <@konobi> weird... now it's using web sockets and it's much quicker
00:56 <@konobi> but initiall it wasn't and it was dog slow
00:56 < CoverSlide> maybe cause people have stopped spamming it
00:57 < switz> yeah well now you've figured out why I stopped using nodejitsu :P
00:58 < switz> 10 users shouldn't bog down a websocket server
00:58 < switz> plus I'm running two load balanced processes
00:58 < switz> it should handle a few thousand
00:59 < switz> A buddy of mine ran a derby app on Heroku w/ xhr-polling and was able to support ~1000 concurrents before seeing any hinderence on the client
00:59 <@konobi> seems more like an initialization issue to me that anything
00:59 < switz> well, regardless. nodejitsu just isn't ready yet.
01:00 <@konobi> mmalecki: ?
01:02 <@konobi> switz: could always spin up a small joyent zone
01:03 < mmalecki> konobi: hello
01:03 < mmalecki> switz: why isn't it ready?
01:04 < mmalecki> oh, just read the backlog. looking at stuff
01:05 < mmalecki> switz: do you have a reproducible benchmark?
01:05 < mmalecki> I'd be really happy to see what's going on.
01:05 < mmalecki> ws latency I'm observing now is around 100 ms, and I'm in Europe
01:06 < switz> Nope, all I know is I've had tons of issues when deploying, tons of issues when trying to use your online panel, and when 10 users connected all hell broke loose
01:06 < switz> after testing you guys out for a couple of months I finally decided that it just wasn't ready. unfortunately, I really wanted it to work out.
01:06 < mmalecki> this is very interesting. can I see your application code somewhere?
01:06 < switz> yep
01:06 < switz> http://github.com/switz/phishvids
01:07 < switz> it's still running at http://pv.jit.su
01:08 < mmalecki> I mean, it seems pretty slick to me
01:09 < switz> All I know is when I had 5-10 users, I was getting socket.io errors even on my computer. Plus it just seems slower than Heroku or my Linode, even when those are running xhr-polling.
01:35 < chovy> switz: now you just need to integrate with what.cd
01:38 < switz> chovy: go on
01:47 < chovy> i see a lot of phish stuff on what.cd
01:47 < sshaginyan> Is there anyway I can detect if someone is trying to access a page from a web browser vs an ajax call?
01:47 < sshaginyan> So is there something in request that tells me this?
01:48 < chovy> sshaginyan: x-requested-with
01:48 < zomg> sshaginyan: most ajax libraries set a header for X-Requested-With XMLHttpRequest
01:48 < sshaginyan> maybe somewhere in agent?
01:49 < sshaginyan> chovy: zomg : but where is the header set inside of my request?
01:51 < zomg> sshaginyan: look in the documentation, they probably explain how to read headers
01:51 < sshaginyan> ty 
01:57 < chovy> sshaginyan: that should be in your header map i woudl expect
01:57 < chovy> req.header['x-requested-with'] i would assume
01:58 < chovy> are you using express?
01:58 < chovy> req.headers['x-requested-with']
02:20 < merpnderp> Is there a consensus on the best, or at least a great, IDE for node.js?
02:23 < sshaginyan> is there anyway to overload a function by the parameter types
02:23 < sshaginyan> for example set(/regex/) would call a different function than set('string')
02:23 < mansoor-s> sshaginyan,  no
02:24 < mansoor-s> merpnderp, I am a big fan of Komodo edit
02:24 < sshaginyan> mansoor-s: You didn't have to be so crude about tit
02:24 < mansoor-s> merpnderp, it comes with JS HINT very nice syntax checker
02:25 < mansoor-s> o_O
02:25 < mansoor-s> sshaginyan, lol 
02:25 < mansoor-s> sshaginyan, no, you can't overload functions in JS
02:25 < mansoor-s> sorry if you thought my answer was crude
02:26 < ckknight> sshaginyan: you have to do type-checking inside the function, which you can then delegate to other functions. All manual, though.
02:26 < sshaginyan> kk
02:26 < merpnderp> mansoor-s: I'll have to check it out. I've tried Netbeans, but it is miserable with node.js, although awesome with javascript.
02:26 < mansoor-s> merpnderp, its not an "IDE" though
02:26 < mansoor-s> as in it doesn't come with a debugger or anything
02:26 < merpnderp> I'm also looking at webstorm. I use jslint with vim right now, but want something that manages my projects and runs tests and builds
02:26 < sshaginyan> mansoor-s: btw I was just trying to be a joker… you know a kidder a clown
02:27 < merpnderp> mansoor-s: that sounds just like a graphical vim :)
02:27 < mansoor-s> merpnderp, I think it comes with VIM keybindings
02:27 < mansoor-s> i'm not sure
02:27 <@konobi> like gvim?
02:28 < cainus> sshaginyan, you can check the type of the incoming arg
02:29 < sshaginyan> yes I can.
02:29 < cainus> accomplishes the same goal
02:29 < sshaginyan> I'll do as they suggested it 
02:41 < Trindaz> hey all, a mocha question
02:41 < dab> Anyone know why the node-mysql isn't executing the function in a query? My guess is that there is no active connection between the node server and the mysql server, however I included the demo script for  reconnecting on fatal errors, plus according to documentation, queries will auto connect. What might the issue be?
02:42 < Trindaz> i'm using it to test responses from a udp server, and sometimes the responses take a while to come through. How can i make my "it" cases be run when responses come back from the server, rather than having them all run at once?
02:42 < Trindaz> my first attempt failed because the whole test completes before waiting for server responses to execute successive it calls
02:48 < heath> i'm sending a post request to my server, i should be receiving logging the data received: https://gist.github.com/d566e4aca51e6f39cca5
02:48 < heath> i can successfully test that it is logging requests from curl and web browsers
02:49 < heath> i guess this is more of a jQuery q
02:49 < heath> going there
03:17 < Sly> NEXXY! OH, MY NEXXY!
03:17 < Sly> Where are you?!
03:36 < woah> sup tilgovi lol
03:38 < niggler> anyone have experience with vert.x?
03:46 <@Nexxy> SLY?!
03:46 < Sly> NEXXY?!
03:46 <@Nexxy> SLY?!!? IS THAT OYU??!
03:47 < Sly> YEAH! IS THAT YOU!?!?
03:47 <@Nexxy> no.
03:53 < mdedetrich> man this is god damn odd
03:53 < mdedetrich> the update operator is not working in mongodb console if I set multi to true
03:55 < perezd> when using Mikeal's request stream pipe methods, whats the best way to get access to the raw response object? I want to see status codes and stuff..
03:58 < mdedetrich> oh wow, shell outdated
03:58 < mdedetrich> nvm then
04:00 < kozero> anyone knows about expressjs and jade ? the best resources and some examples ? or any suggestion ?
04:04 < psyduk> is there anyone that will look at one of my files and tell me if im coding with really bad practices?
04:05 < segomos> psyduk: probably better to just post and axe instead of asking to ask
04:06 < psyduk> https://github.com/psyduk/yawebup/blob/master/app/controllers/sites.js
04:06 < psyduk> can anyone tell me if im doing some really dumb things? haha thanks
04:06 < psyduk> its just simple crud
04:07 < zomg> psyduk: the error handling is maybe a bit poor
04:07 < ChrisPartridge> lots of console.logs in there :)
04:08 < zomg> if you don't return anything to the request such as when an error occurs, the request will stay hanging
04:08 < zomg> the user will simply keep seeing a loading indicator forever or until the browser / node times it out
04:08 < psyduk> ahh yeah that makes sense
04:08 < ChrisPartridge> and is try{} needed around all the mongoose calls?
04:08 < psyduk> thats what i wasn't sure about, i saw other cod with people putting it so i didn't know if it was a bad idea or not
04:09 < psyduk> the try{} i mean
04:10 < segomos> you don't need them unless there is a chance of calling findById on 'Site' while 'Site' is undefined
04:10 < psyduk> ah ok that makes sense
04:10 < segomos> personally i wouldn't call variables 'new' or 'delete' even nested in an object
04:12 < psyduk> ok that makes some sense thanks guys
04:12 < ChrisPartridge> you can also use next() to pass to an error handler
04:13 < psyduk> i had no idea about that, i'll look into that
04:52 < TheDukeofURL> what does next() do exactly? is it an expressjs only call?
04:52 < timeturner> it invokes the next function in the middleware chain or next matching route
04:52 < timeturner> it's an express only thing, yes
04:53 < TheDukeofURL> ok cool thanx
04:53 < lookaflyingdonke> hi all
04:53 < lookaflyingdonke> anyone have much experience with fs.mkdir? Having a bit of an issue passing a variable in instead of a string
04:54 < mansoor-s> lookaflyingdonke, i'm sure someone here has used fs.mkdir :)
04:54 < mansoor-s> post your code, someone will know whats up
04:55 < niggler> take a peek at the argument you are passing
04:56 < lookaflyingdonke> Code is at http://pastie.org/5652576
04:56 < lookaflyingdonke> when that runs it just wont make the folder
04:57 < lookaflyingdonke> however if I use fs.mkdirSync('/home/projects/name'); it works fine
04:57 < lookaflyingdonke> also if I just run that code in the node shell (typing by hand) it works fine
04:58 < lookaflyingdonke> I am using it from express if that makes a difference
04:58 < dnz-> its ur encoding mate
04:58 < dnz-> try again
04:58 < lookaflyingdonke> so it is utf-8 doing it?
04:59 < TheDukeofURL> looks like a closure problem 
05:02 < lookaflyingdonke> any ideas why it would work like fs.mkdirSync('/home/projects/name'); and not fs.mkdirSync(path);
05:03 < segomos> lookaflyingdonke: i'd investigate the variable's encoding, like dnz- said
05:04 < niggler> what does script.createContext do (where script is the return value from vm.createScript(code ...)
05:04 < lookaflyingdonke> I just tried path = Buffer(path); fs.mkdirSync(path.toString('ascii')); and same deal
05:04 < lookaflyingdonke> how else would I change the encoding?
05:04 < TheDukeofURL> cuz when u call fs.mkdir path hasnt changed yet 
05:04 < TheDukeofURL> i think
05:04 < segomos> TheDukeofURL: he's using existsSync
05:05 < yarco> @lookaflyingdonke    maybe you need  path.normalize
05:05 < TheDukeofURL> segomos: yea but the loop isnt closed over
05:06 < lookaflyingdonke> the path has changed as I can log it before calling the mkdirSync
05:06 < segomos> huh?
05:06 < segomos> lookaflyingdonke: pass a callback to fs.mkdir and log the error object
05:06 <@konobi> does /home/projects exist?
05:07 < lookaflyingdonke> I will log the error
05:08 < TheDukeofURL> there isnt block scope, so even tho the check is synchronous it still goes thru the loop right? 
05:08 < segomos> konobi: it'd be funny if that was it
05:08 <@konobi> segomos: could also be a permissions problem
05:08 < segomos> TheDukeofURL: no, it is webscale tho
05:08 < TheDukeofURL> segomos: wha?
05:08 < segomos> TheDukeofURL: no, it will process the loop before continuing to the fs.mkdir call
05:08 < TheDukeofURL> yea the loop will process
05:09 < segomos> so what are you asking?
05:09 < lookaflyingdonke> i can make folders in there by calling it direct
05:09 < lookaflyingdonke> let me remove loop and see
05:09 < segomos> lookaflyingdonke: what was the error?
05:10 < lookaflyingdonke> removing loop doesn't do it
05:10 < lookaflyingdonke> be back in a sec, meeting :-(
05:10 < TheDukeofURL> hmmm 
05:10 < segomos> the loop is fine.
05:10 <@konobi> fs.mkdir requires a callback
05:10 < segomos> konobi: trying to get him to provide one and its output
05:11 <@Nexxy> maybe it's lupus
05:12 <@konobi> it's never lupus!
05:19 < lookaflyingdonke> back
05:19 < dab> Anyone know why the node-mysql isn't executing the function in a query? My guess is that there is no active connection between the node server and the mysql server, however I included the demo script for  reconnecting on fatal errors, plus according to documentation, queries will auto connect. What might the issue be?
05:20 < lookaflyingdonke> the error in the callback was null
05:20 < lookaflyingdonke> fs.mkdir(path, 0755, function(e) { console.log(e); });
05:20 < lookaflyingdonke> that's right isn;t it?
05:21 < segomos> was the path created?
05:21 < lookaflyingdonke> path wasn't created
05:22 < TheDukeofURL> try doing path + "something" in the mkdir arguement 
05:24 < lookaflyingdonke> that worked
05:24 < lookaflyingdonke> interestingly I tried to + "" earlier with no luck
05:24 < lookaflyingdonke> will try "" again
05:25 < lookaflyingdonke> + "" doesn't work
05:26 < TheDukeofURL> yea so im right
05:26 < TheDukeofURL> the path isnt getting changed 
05:26 < TheDukeofURL> when mkdir is called
05:27 < TheDukeofURL> close the stuff in the loop in a block like (function(){stuff in loop})()
05:27 < lookaflyingdonke> what do you mean not getting changed? in the loop?
05:28 < lookaflyingdonke> I have had the loop commented out for the last few tries anyway, including when adding the + "something"
05:28 < lookaflyingdonke> could it be that I am getting the end part of the url from a mongoose model?
05:29 < lookaflyingdonke> var path = '/home/projects/' + newProject.get('slug');
05:29 < segomos> TheDukeofURL: why is it you think node is processing the loop and the fs.mkdir simultaneously?
05:29 < TheDukeofURL> i dunno
05:29 < lookaflyingdonke> it isn't processing them at the same time as the loop is commented out for now
05:30 < segomos> it isn't even when the loop isn't commented out
05:30 < lookaflyingdonke> I think it may be an encoding thing
05:30 <@konobi> your interaction with mongo should generally be async
05:30 < TheDukeofURL> cuz im crazy right now, and a friend of mine pissed me off so im not even thinking when i type, sry guys 
05:31 < lookaflyingdonke> no worries, any ideas are appreciated
05:31 < lookaflyingdonke> crazy or not
05:31 < segomos> lookaflyingdonke: read what konobi wrote, mongoose isn't a sync call
05:32 < lookaflyingdonke> no issues with that, it is when saving a model
05:32 < lookaflyingdonke> var newProject = new Project(_.pick(req.body, 'name', 'description', 'github_repo'));
05:32 < lookaflyingdonke> newProject.set('slug', slugs(req.body.name));
05:32 < TheDukeofURL> oh yea why are u even doing anything synchronously?
05:32 < lookaflyingdonke> var path = '/home/projects/' + newProject.get('slug');
05:32 < lookaflyingdonke> thought that maybe it was an encoding with with mongoose
05:33 < lookaflyingdonke> yeah everything is sync except for this folder thing
05:33 < TheDukeofURL> any kind of io really should be async 
05:33 < lookaflyingdonke> sorry everything is async
05:33 < lookaflyingdonke> I just went to the sync to try and figure it out
05:36 < lookaflyingdonke> got something else odd
05:37 < lookaflyingdonke> if i do 
05:37 < lookaflyingdonke> var path = '/home/projects/' + newProject.get('slug') + "bbbb";
05:37 < lookaflyingdonke> and then
05:37 < lookaflyingdonke> fs.mkdir(path, 0755, function(e) { console.log(e); });
05:37 < lookaflyingdonke> it doesn't work
05:37 < lookaflyingdonke> but if I add + "something" to the fs.mkdir call it works fine
05:38 <@konobi> lookaflyingdonke: is this in an entirely seperate script file?
05:38 < lookaflyingdonke> no it is all part of a framework
05:39 <@konobi> well, try it in a seperate script
05:39 < lookaflyingdonke> it seems that unless I change the path string in the actual fs.mkdir call it doesn't work
05:39 <@konobi> lookaflyingdonke: time to pastebin some real code
05:39 < TheDukeofURL> what does path log out to just befoe u call mkdir?
05:40 < sohcahtoa> !pastebin
05:40 < sohcahtoa> oops wrong chan
05:40 < lookaflyingdonke> logs out to be the correct path to be created
05:42 <@konobi> pastebin full context of the code
05:45 < lookaflyingdonke> http://pastebin.com/X0Vw3C8U
05:46 < lookaflyingdonke> That is the project controller
05:46 < lookaflyingdonke> it uses express and responds to a post to /api/v1/project
05:47 <@konobi> and console.log("----> "+path) before the mkdir shows the correct thing?
05:48 < lookaflyingdonke> yep
05:48 < AAA_awright> lookaflyingdonke: What's with the leading /api/v1 ?
05:49 <@konobi> lookaflyingdonke: and console.dir(e) doesn't print anything?
05:50 < lookaflyingdonke> the leading /api/v1 is because this is a REST API and it is version 1, so I can version future changes
05:51 < Guilt> hey guys.
05:51 < lookaflyingdonke> yep it outputs null
05:52 < Guilt> I wanted help transforming my hacked up node.js code into something that's consumable across large projects
05:52 < Guilt> something more resilient, maintainable and friendly
05:52 <@konobi> lookaflyingdonke: mkay... make sure you put all the stuff below that call inside the callback for mkdir
05:52 < Guilt> I wanted to get some suggestions
05:52 < lookaflyingdonke> just tried exec('echo ' + path + ' > /tmp/out'); too to see if maybe soemthing there and it outputs the corret path
05:52 < Guilt> This is my project - https://github.com/guilt/turntable
05:53 < Guilt> can you help me on how to do the refactoring?
05:54 < lookaflyingdonke> no worries with moving it, I have been moving all the code around at the moment to try and figure this out
05:54 < lookaflyingdonke> any other ideas on why it wouldn't be working
05:55 < lookaflyingdonke> it has to have something to do with the contents of the path var
05:55 <@konobi> lookaflyingdonke: try doing it plainly in a single script
05:55 < Guilt> also, I wanted to know if it's possible to make the whole thing multi-core
05:55 < Guilt> i.e. threads, but one per core is great.
05:55 < lookaflyingdonke> works in a single script
05:55 < Guilt> one per hardware thread/core
05:55 < lookaflyingdonke> except I cant test the mongoose part
05:55 < Guilt> with sharing of global variables
05:55 < lookaflyingdonke> I did however use the slugs part in the plain script
05:56 <@konobi> lookaflyingdonke: regardless, test plainly
05:56 < Guilt> help, please?
05:56 < lookaflyingdonke> what do you mean plainly?
05:56 <@konobi> just the mkdir
05:56 <@konobi> with variables
05:57 < lookaflyingdonke> I ran this one http://pastebin.com/xcCi75AV
05:57 < lookaflyingdonke> and that works fine
05:58 <@konobi> well since you're getting "null" from the mkdir, node believes it has created the directory
05:58 <@konobi> may be worth logging another string in there to ensure that that's the null you're expecting
05:59 <@konobi> Guilt: there are no threads in node... you can go multi-core by using processes and IPC
05:59 <@konobi> there's even the 'cluster' module
05:59 < dnz-> you're a cluster m8
05:59 < dnz-> clustafuq
05:59 < TheDukeofURL> lol
05:59 < lookaflyingdonke> null is the right one
05:59 < lookaflyingdonke> I just ran fs.mkdir(newProject.get('slug'), 0755, function(e) { console.dir(e); });
06:00 < lookaflyingdonke> and it made the correct folder in the app directory
06:01 <@konobi> try chaning the variable name
06:02 <@konobi> *changing
06:02 <@konobi> new_project_path or something
06:04 < leo2007> is there a way to start node's repl and able to use the globally installed modules
06:06 <@konobi> require
06:06 < segomos> leo2007: you can use the NODE_PATH to install modules globally.  npm -g flag is for binaries and things like that
06:10 < leo2007> konobi: nay
06:11 < leo2007> segomos: you mean it is mainly for installing cli tools?
06:12 < segomos> leo2007: yea
06:12 <@konobi> leo2007: works for me
06:13 <@konobi> `var fs = require('fs')\nfs`
06:14 < segomos> leo2007: are you wondering how to 'require' modules you installed with the npm -g flag?
06:14 < leo2007> segomos: exactly
06:15 <@konobi> exactly the same as you would normally
06:15 < segomos> npm -g flag doesn
06:16 < segomos> doesn't allow you to just 'require' modules willy nilly, they need to exist in the current dir, one of the parent dirs, or in one of the dirs in env var NODE_PATH
06:17 < lookaflyingdonke> still got no idea...will have to keep playing
06:17 < lookaflyingdonke> I tried changing the variable name with no luck
06:19 <@konobi> "If you need both, then install it in both places, or use npm link."
06:19 < leo2007> my usage pattern is 'wrong' so I'll adjust.
06:19 < segomos> leo2007: https://groups.google.com/forum/?fromgroups=#!topic/nodejs/EENwg8GAJd8
06:20 < segomos> check out the 3rd post (2nd from Oliver) on how to link packages if you installed them with -g
06:20 < leo2007> page blocked by my government
06:20 < segomos> which government
06:21 < leo2007> china
06:21 < segomos> npm install -g <pkg>  && npm link <pkg> 
06:25 < leo2007> segomos: that is nice. Thanks a lot.
06:28 < mansoor-s> Who wants to port RoR to Node.js?
06:29 < TheDukeofURL> doesnt express plus some other crap take care of the same functionality?
06:30 < mansoor-s> no
06:30 < mansoor-s> they are missing the SQL injection functionality
06:30 < TheDukeofURL> hahaah
06:30 < TheDukeofURL> im sure a module could be made to handle that ;p
06:31 < mansoor-s> https://www.youtube.com/watch?v=2GhKwoWjAVk
06:31 < TheDukeofURL> hhaha 
06:32 < mansoor-s> TheDukeofURL, you are not a fan of web frameworks i take it/
06:33 < TheDukeofURL> i dunno yet
06:33 < mansoor-s> new to node?
06:33 < TheDukeofURL> i started using yeoman to work on a web app the other day 
06:33 < TheDukeofURL> i started with node about 3-4 months ago
06:34 < TheDukeofURL> i started making some cool stuff with it 
06:34 < TheDukeofURL> i like node a lot
06:34 < mansoor-s> haha yeoman makes me laugh
06:34 < TheDukeofURL> yeoman is cool!
06:34 < TheDukeofURL> see u can get the scaffolding of rails with it !
06:34 < mansoor-s> <_>
06:34 < TheDukeofURL> ehhe
06:36 < TheDukeofURL> i never really made web apps tho before
06:36 < TheDukeofURL> im working on one this week
06:36 < TheDukeofURL> its pretty fun
06:36 < mikesm_> Hello, I am using the node mongodb native driver. Does anyone know what collection.insert(req.body, {w:1}, function(err, result) {} returns as the result? https://github.com/mongodb/node-mongodb-native/blob/master/lib/mongodb/collection.js
06:37 < mansoor-s> TheDukeofURL, what you making?
06:37 < mikesm_> Docs say something about writeconcerns..
06:38 < TheDukeofURL> mansoor-s: its just a search box so far and it loads results from etsy, i will display it in an infinite scrollable grid
06:38 < TheDukeofURL> so u get an endless wall of pics
06:39 < mansoor-s> TheDukeofURL, ahh cool
06:39 < TheDukeofURL> the kind of stuff i made before was like a distributed database type thing with node 
06:40 < TheDukeofURL> where clusters expand out as hashrings 
06:40 < segomos> mikesm_: looks like it returns the inserted doc
06:40 < TheDukeofURL> and the database is redistributed out in the background 
06:41 < segomos> or set of docs if you passed in an array of objects
06:42 < segomos> also, you might want to set {safe:true} in the options like it suggests in the docs and do some kind of checking on req.body
06:43 < mikesm_> segomos, thanks. I thought safetrue was deprecated?
06:44 < segomos> if it is, it's still on the mongodb native driver docs for nodejs
06:45 < segomos> this one is way more readable: http://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0CDEQFjAA&url=http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fdownload%3Fdoi%3D10.1.1.188.9384%26rep%3Drep1%26type%3Dpdf&ei=UhHtUNSXAaTziQL-x4GQDQ&usg=AFQjCNFP8I3R8L1AmUgJeuCTNDDcu4jEnw&bvm=bv.1357316858,d.cGE
06:45 < segomos> wrong channel
06:46 < mikesm_> segomos: k thanks. If you dont mind me asking, how did u find that it returns the inserted docs?
06:49 < segomos> mikesm_: it's a wag, i used to use that module but switched in favor of mongoose.  i remember it returning the newly inserted doc, mongoose also returns the newly inserted doc
06:50 < mikesm_> segomos: thanks alot! Im probably 
06:50 < mikesm_> going to switch to mongoosed as well eventually
06:53 < jtnt> anyone familiar with browserify caching?
06:55 < bradleymeck> jtnt it shoudl match node's module catch model?
06:56 < jtnt> um
06:56 < bradleymeck> cache* brain fart
06:57 < _hemanth_> phantom.js + webdriver anyone? 
06:57 < jtnt> I'm using browserify as a module, and I'm calling bundle when a client requests app.js
06:57 < jtnt> I'm imagining that, without cache:true, bundle does a full traversal on each request
06:57 < leo2007> what is this trick: obj.length === +obj.length
06:57 <@mbalho> leo2007: cast to int
06:58 < jtnt> but I'm not sure what happens when cache is set true ...
06:58 < leo2007> because?
06:58 < substack> jtnt: cache is something different
06:59 < substack> it saves the dependency list for file hashes to disk
06:59 < substack> since that can be really slow for giant source files like jquery
06:59 < jtnt> thx substack : so I still pay a significant processing penalty for each request, with or without cache?
07:01 < substack> jtnt: no
07:01 < substack> unless you instantiate a new browserify() instance each request
07:01 < substack> that would be slow
07:01 < substack> calling bundle() is fast
07:03 < jtnt> m'ok, so even with a huge mass of client scripts, its sensible to call bundle on each request, so long as cache is set?
07:05 < Guilt> konobi, but doing the IPC is going to add some latency. shared variables are faster...
07:05 < Guilt> how are folks running nodes on multicore servers?
07:05 < Guilt> cgroups?
07:06 <@konobi> Guilt: as described
07:09 < ikbear> Hi, is node.js's stream seekable?
07:10 <@mbalho> ikbear: nope but you can read chunks of files with an offset
07:10 <@mbalho> ikbear: and you can read chunks of buffers with an offset
07:10 < ikbear_> I need to calculate a stream's crc32 value
07:11 < ikbear_> mbalho, thanks
07:16 < MI6> joyent/node: Shigeki Ohtsu master * 1211946 : stream: fix typo  Also: Revert "stream: Override addListener as well as o - http://git.io/grPssw
07:40 < trevnorris> whenever I push to github I keep getting the following: "ERROR: ld.so ..." anyone else?
07:43 < mansoor-s> trevnorris, is your git working?
07:43 < mansoor-s> is it able to ru?
07:43 < mansoor-s> run*
07:44 < trevnorris> mansoor-s: yeah. i can push just fine. that output is coming in the git response message.
07:45 < trevnorris> just go to a repo and do `git push` even if you don't have any changes.
08:05 < leo2007> Can the node repl be more helpful?
08:06 < leo2007> for example, say, tell me how to use Object.defineProperty
08:06 < perezd> Don't ask what the node repl can do for you, but what you can do for the node repl
08:07 < Gottox> leo2007: documentation is not a part of repl.
08:07 < Gottox> Pythons shell can do this.
08:07 < leo2007> sure, but many powerful REPLs have that anway. 
08:07 < leo2007> yeah, none of these comes close to lisp.
08:07 < perezd> lol
08:08 < leo2007> I am running node 0.8.16; has anything been improved in the devel version?
08:08 < perezd> check the blog
08:09 < Gottox> leo2007: would be funny if it hasn't :)
08:09 < leo2007> I meant the REPL feature.
08:09 < Gottox> i don't think so.
08:11 < bradleymeck> leo2007: nope, nothing really new until you hit 0.9 and even then its just a couple minor fixes
08:11 < leo2007> I see. I guess I will stay with 0.8 for now.
08:12 < Gottox> In contrast of other language, documentation has no part in the language itself. I haven't found any good solution of documenting node anyway.
08:13 < Gottox> coming from java, it really lacks of a good javadoc replacement.
08:13 < leo2007> I got the concept. no language spec would put that in any way. but a good practice.
08:13 < perezd> honestly, there are like 10 trillion resources for javascript APIs online.
08:13 < ljharb> comments are a crutch for bad code.
08:13 < ljharb> overly complex code, at any rate, which is basically the same as bad.
08:14 < perezd> unless you've never built anything sufficiently complex enough
08:14 < perezd> man you guys are too much tonight
08:14 < ljharb> if you ever have, then you should have built many smaller things and interconnected them.
08:14 < Gottox> ljharb: yes and no.
08:14 < Gottox> I agree with you in terms of "explaining the source"
08:15 < Gottox> But for user documentation, comments have become useful.
08:16 < ljharb> i disagree, but i'd be happy to see an example (that couldn't be written in a way where comments weren't necessary)
08:18 < Gottox> ljharb: how do you write user docs?
08:18 < ljharb> docs for what?
08:18 < MI6> joyent/node: Fedor Indutny v0.8 * 7a2ae4c : object_wrap: add missing HandleScope  by Sven Panne's suggestion, see [0] - http://git.io/eZbH6g
08:21 < Gottox> ljharb: well, say your client demands an API-documentation.
08:22 < ljharb> restful apis rarely need more documentation than a simple list of resources. plus the occasional human-readable sentence, which doesn't belong in source code.
08:31 < [AD]Turbo> hola
09:21 < isaacbw> does anyone know if I have to restart a demon after fiddling with my hosts file?
09:23 < isaacbw> I'm trying to use vhost and I'm getting TypeError: Object #<Object> has no method 'emit' which I figure it probably due to a stupid mistake. Has anyone had that issue befoer?
09:23 < isaacbw> *before
09:29 < isaacbw> was vhost changed recently?
09:32 < isaacbw>  oh, I was being retarded with my exports
10:11 < AspiringNoder> Hi guys. New to Node.js and come from a PHP/MySQL background. Really love the concepts and feel so excited by the amazing potential of asynch javascript. I have a few books on Node.js and it'll take me a few months to get upto speed on it. Meanwhile, as I learn, I'd like to work on a personal image gallery project for my charity.
10:11 < AspiringNoder> I wish to build an image gallery where many photographers can upload many pictures simultaneously. The application should create a grid of grey boxes and a progress bar should appear in each grey box as each picture is uploaded and a small thumbnail displayed once each picture has been uploaded. As soon as a picture is uploaded, others can view these and start tagging the picture with meta data, which in turn can be searched 
10:11 < AspiringNoder> Would Node.js be appropriate and feasible for such a problem?
10:35 < AspiringNoder> Any relatively experienced noders online?
10:37 < AspiringNoder> hello?
10:38 < mansoor-s> no, they were lost in the up rising of December 2012
10:38 < AspiringNoder> LOL
10:38 < AspiringNoder> No one invited me to the uprising
10:39 < AspiringNoder> I'm not enjoying this web based client. Downloading MIRC. I might be out for a few moments.
10:39 <@konobi> AspiringNoder: that all sounds more like frontend JS stuff
10:39 < mansoor-s> AspiringNoder, ewww mirc.. get xchat :)  there is a free unofficial version for windows
10:39 < mansoor-s> i'm assuming you are on windows
10:40 < AspiringNoder> I'm on windows. But love linux. And thanks for Raspberry Pi, I've learned so much about it. Got Linux in a VM and develop on that. But yes, hosted on windows.
10:40 < AspiringNoder> Cool! I'll get XCHAT instead then.
10:41 < AspiringNoder> One moment. And thanks for replying, been feeling so lost with Node.js so just needed a few pointers.
10:41 < andu> i think the windows one is this http://www.silverex.org/news/
10:43 < AspiringNoder> Seriously. Love open source too. I've been so blinded by Microsft and Adobe all these years.
10:43 < AspiringNoder> OK, XCHAT here I come. BRB!
10:46 < AspiringNoder> OK. Radio check. I'm back :)
10:46 < AspiringNoder> On xchat.
10:47 <@konobi> AspiringNoder: yes, node would work
10:48 < AspiringNoder> OK so someone mentioned that the gallery stuff is predominantely font end. Let me try and understand the server side, or rather, what should go on the server side, a little more clearly. For example, handling multiple file uploads. i.e. a whole directory of images. Broadly speaking, how would one make that into a series of small callback functions?
10:50 <@konobi> depends how you handle the uploads
10:51 <@konobi> the browser will restrict you around uploads, so you need to work out what mechanism you're going to use there
10:53 < AspiringNoder> Are the browser restrictions time or file size based? To start with, I wish to keep things simple. Photographers currently upload pictures via FTP into directories, where each directory represents an event.
10:53 <@konobi> security restrictions
10:54 < RLaa> what would be time-based restriction?
10:56 <@konobi> AspiringNoder: html5 file upload might be a reasonable choice for experimenting with
10:56 < AspiringNoder> I suppose similar to the server timing out because the request is taking too long. In a classic LAMP situation I remember we had to increase the timeout to allow for large uploads, which is not sensible so ended up having a java servlet handle the upload of a directory of images. What can help in a Node.js context?
10:58 < RLaa> node.js execution is not request-based
10:59 < Deathspike> Node is a single process handling each request, nothing is bound to a specific execution time at all. I actually do wonder now, what if someone is uploading a 1GB file? Will that be accepted? Would it be loaded into memory?
10:59 < Deathspike> I guess it's dependent in the middleware.
11:00 < AspiringNoder> And would the client side javascript restrict you from accessing anything on the local computer?
11:00 <@konobi> yes
11:00 < mansoor-s> AspiringNoder, most defiantly 
11:00 < mansoor-s> imagine going to a random website and they get all of your tax documents from your computer
11:00 <@konobi> html5 file reader and drag'n'drop stuff give you a reasonable way of working with that though
11:01 < mansoor-s> definitely**
11:01 < mansoor-s> stupid spelling corrector!!!
11:01 <@konobi> i preferred the original =0)
11:02 < AspiringNoder> True. I don't want anyone to find out how little I'm paid :) LOL. I presumed there would be a controlled manner of allowing such access.
11:02 < AspiringNoder> Likewise, the typo was funny.
11:02 < st_luke> hey #node.js I made a spooky halloween module for you guys - https://github.com/st-luke/crawly
11:03 <@konobi> AspiringNoder: http://www.uploadify.com/
11:03 < AspiringNoder> html5 file upload. Definitely I will look into this.
11:03 < mansoor-s> or defiantly look into this?
11:03 < mansoor-s> o_O
11:04 <@konobi> AspiringNoder: otherwise it's just handling file uploads on the server in the normal manner
11:07 < RLaa> st_luke, that pretty cool
11:07 < st_luke> RLaa: just like the movies
11:08 < RLaa> but i think that old terminals used to work like that, because the connection was just that slow
11:08 < AspiringNoder> Uploadify.com ... wow. So it's a jQuery plugin that allows multiple file uploads. I guess what's confusing me / what is not clicking is how that gets received on the server side. Is my concept ludicrous or holds some potential? That is, as each file gets uploaded, on the server side Node.js receives it, creates a thumbnail, updates everyone's screens with the thumbnail, then again repeats for the next image on the list.
11:08 < RLaa> so characters would slowly come in one-by-one
11:09 < amar> hi
11:09 < amar> any body here
11:09 < RLaa> no
11:11 < AspiringNoder> Just had a look at http://www.uploadify.com/demos/ and it looks like uploadify.php handles the files on the server side. 
11:16 <@konobi> AspiringNoder: so in place of that, you can use node
11:16 <@konobi> (i wasn't suggesting using that specific thing, just showing an example)
11:18 < isaacbw> damn, I think I might have to use web sockets
11:18 < isaacbw> I feel dirty
11:18 < Shinister> why? Sockets rock.
11:18 < Gottox> I'm feeling dirty using socket.io.
11:19 < AspiringNoder> Yes, completely understand and thank you for the example. It helped to clarify that the multi-file upload is more a client side issue. Look what I found: https://npmjs.org/package/node-gallery
11:19 < isaacbw> Shinister, because I really wanted to keep everything RESTful, but just sending stuff through web sockets seems to make more sense for what I'm doing
11:19 < isaacbw> I would have liked to use sever-sent events instead, but the support doesn't seem great
11:19 < isaacbw> and I'm not prepared to completely cut out ie9 users
11:26 < isaacbw> socket.io does look pretty damned neat though
11:27 < AspiringNoder> Thanks for you help guys. Kind of got a better idea of how the gallery might come together. Will keep learning and practicing.
11:28 < AspiringNoder> So by way of inspiration, example of some nice Node.js based websites out there?Ones that madke you proud to be a noder.
11:28 < AspiringNoder> make*
11:35 < tonydrago> Hi all
11:35 < tonydrago> I'm a complete Node.js newbie
11:35 < andu> lo
11:35 < andu> i still feel like that
11:35 < andu> ;)
11:36 < AspiringNoder> Welcome Tony. So am I! I come from a php mysql background.
11:36 < tonydrago> I'm running a node.js app (weinre) on my local machine. I can connect to the server locally if I use a URL like:
11:36 < AspiringNoder> Node.js is a very different way of htinking.
11:36 < tonydrago> http://localhost:9999/path
11:36 < tonydrago> However the following does not work either locally or from another device on the local network:
11:36 < tonydrago> http://myhostname:9999/path
11:36 < tonydrago> So I guess that by default node.js (or maybe weinre) is configured to only handle localhost URLs. How do I change this?
11:36 < SomeoneWeird> how are you binding to an interface, tonydrago 
11:36 < isaacbw> that's a system issue, not a node one tonydrago 
11:36 < SomeoneWeird> what's the .listen command you're using for express/connect/http etc.
11:36 < andu> tonydrago, try and run with root/admin right
11:37 <@konobi> AspiringNoder: the linkedin mobile app is node based, as is voxer and many more
11:37 < SomeoneWeird> isaacbw, not if he's only binding to localhost :p
11:37 < tonydrago> @SomeoneWeird - can you tell me where I should look to find the answer?
11:37 < isaacbw> you could share your code in pastebin
11:37 <@konobi> tonydrago: listen(9999, "0.0.0.0")
11:37 < tonydrago> I didn't write the app, I'm just trying to run it
11:37 < isaacbw> then everyone would know exactly what it is
11:37 < isaacbw> oh
11:38 < SomeoneWeird> what app?
11:38 < tonydrago> this app http://people.apache.org/~pmuellr/weinre/docs/latest/Installing.html
11:38 < AspiringNoder> Konobi, you mentioned mobile app that's sparked off an idea. Can JS be used on the client side to access the camera phone and take a picture? Hmm. I feel so far behind.
11:38 < andu> apache o_O
11:39 <@konobi> AspiringNoder: kinda... phonegap is an option for that though
11:39 < Deathspike> AspiringNoder: When you use an environment for that, such as PhoneGap, then yes. It basically allows you to use HTML/JS/CSS to develop and deploy a 'native' app.
11:39 < tonydrago> is there somewhere in the Node.js server where you configure the URL pattern(s) it should listen to?
11:40 < Deathspike> tonydrago: Look into the popular express framework, expressjs.com.
11:40 < Deathspike> tonydrago: An example can be like this https://github.com/visionmedia/express/tree/master/examples/route-separation
11:40 <@konobi> tonydrago: nodejs is a runtime environment
11:41 <@konobi> tonydrago: your specifc app (weinre) has "localhost" hardcoded... you probably want to edit the "weinre" script to pass in a host argument
11:42 < AspiringNoder> phonegap .. stunning work!
11:42 <@konobi> as far as i can tell that's in weinre.server/weinre with reference to weinre.server/lib/cli.coffee
11:43 < tonydrago> konobi: actually I had a look at the docs and it seems you can specify the host, see the "--boundHost" param documented here http://people.apache.org/~pmuellr/weinre/docs/latest/Running.html
11:44 < tonydrago> konobi: thanks a lot for your help
11:56 < AspiringNoder> Another question, do you know of any really good books on Node.js and general server-side javascript development?
12:02 < Deathspike> AspiringNoder: Try this http://visionmedia.github.com/masteringnode/book.html
12:02 < Deathspike> It's not really a book, but there aren't many afaik
12:03 < Deathspike> I don't think it is finished, but the basics are explained.
12:05 < messju_> http://mundmische.de/bedeutung/37047-Fluchplatz
12:05 < messju_> oh - sorry... 
12:05 < messju_> (wrong channel)
13:36 < Somatt_wrk> hi
13:37 < Somatt_wrk> anyone could recommend me a module for sass comilation ?
13:37 < Somatt_wrk> *compilation
13:41 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:42 < kaliya> hi
14:02 < iShafayet> Hello. I had a query. Is there any GUI interface for controlling Node.js server?
14:04 < Gottox> iShafayet: simple answer: no
14:04 < iShafayet> okay. thanks Gottox
14:04 < Gottox> np :)
14:05 < iShafayet> I'm thinking of making a simple one though.
14:06 < wwicks> Are you talking about a node web server? Something similar to IIS?
14:07 < isaacbw> iShafayet, I think you're misunderstanding how node works
14:07 < isaacbw> it's just a runtime environment, like python. It doesn't make sense to say a 'gui to control node'
14:07 < iShafayet> No... what I'm trying to say is way way simpler
14:08 < iShafayet> see... if u ever used VertrigoServ or Wamp
14:08 < iShafayet> thenyou would admire the Stop/Start/Restart buttons from taskbar menu
14:09 < iShafayet> I was talking about something like that.
14:09 < isaacbw> mm
14:09 < exit2> Has anyone made a social network with Node?
14:10 < wwicks> exit2: heh- well yes… but you'll laugh
14:10 < exit2> wwicks: ok what it is? :P
14:10 < wwicks> exit2: Myspace is now running on node
14:10 < exit2> Oh wow, I did hear they are "re-inventing" themselves 
14:11 < exit2> I thought about doing it has a challenge to myself and better my knowledge in Node, seeing as how a social network can have many different smaller application with in it
14:11 < wwicks> exit2: they trashed all the ASP.NET code and made the new site with node.js… good call if you ask me. But it won't save them
14:12 < exit2> wwicks: I agree
14:12 < isaacbw> it looks pretty slick though
14:12 < iShafayet> exit2: sounds interesting
14:12 < isaacbw> they didn't just rewrite the backend, they completely recreated the site
14:12 < isaacbw> the only thing that's the same is the name
14:12 < exit2> iShafayet: I was just looking at new.myspace.com
14:12 < exit2> wow
14:13 < exit2> also *isaacbw
14:14 < Somatt_wrk> anyone would know if there is a decent node module sass compilation ?
14:14 < exit2> Somatt_wrk: I think there is a 'node-sass'
14:14 < exit2> https://npmjs.org/package/node-sass
14:14 < isaacbw> Somatt_wrk, https://encrypted.google.com/search?q=sass&q=site:npmjs.org&hl=en
14:14 < wwicks> exit2: I was the one that got Myspace to switch. It was a very big project that the management really supported.
14:15 < Somatt_wrk> exit2: I saw it, but the doc doesn't reflect the actual methods
14:15 < exit2> wwicks: Oh sweet, do you work for them?
14:15 < isaacbw> oh, cool
14:15 < isaacbw> I think people are realizing how shitty facebook is
14:15 < exit2> man my tab is off today
14:15 < wwicks> wwicks: I did from 2005 - 2011
14:15 < isaacbw> and google plus didn't innnovate enough to take over
14:16 < exit2> imo the social network idea is dead, at least on a mass scale.  I think that smaller niche networks that are good at one thing will do well
14:16 < isaacbw> it's hardly dead
14:17 < isaacbw> I refuse to use facebook myself, but everyone I know is on it constantly
14:17 < isaacbw> and I've taken a few shots at it
14:17 < exit2> isaacbw: I think things like Instagram are a great example of being good at one thing, well at least they were
14:18 < isaacbw> I do think there's an opportunity to start over and better define what the social network should be
14:18 < isaacbw> no one *likes* using facebook
14:18 < isaacbw> but they do
14:18 < wwicks> Facebook, g+… (any of them) will always have a place in society
14:18 < exit2> hmm
14:19 < wwicks> I remember people saying irc would die :)
14:19 < Shinister> isaacbw: I like using facebook
14:20 < exit2> IRC will live forever
14:21 < exit2> I also considered making a proximity type chat application recently in node
14:21 < exit2> where you would communicate only with people in a certain radius of your location
14:21 < Gottox> I'm sure someone said the same thing about gopher.
14:21 < mansoor-s> exit2, like yelling?
14:21 < wwicks> neeto
14:22 < exit2> mansoor-s: is that an application or the actual act of yelling :P
14:22 < mansoor-s> yelling your lungs out
14:22 < mansoor-s> :p
14:22 < exit2> mansoor-s: could work for a name :)
14:22 < mansoor-s> or diaphram <_<
14:22 < mansoor-s> depending if you are a human or not
14:22 < exit2> haha
14:22 < isaacbw>  exit2 that might work in concentrated cities
14:23 < isaacbw> I imagine some interesting people live near me
14:23 < isaacbw> but if only one or two were on... it would get boring
14:23 < wwicks> the app would be like whisper yelling
14:23 < exit2> isaacbw: I think it would be a neat concept for even something like the bar scene
14:23 < Gottox> We need some kind of voice over the air protocol...
14:23 < exit2> so you're in a large community
14:23 < Shinister> These things exist for gay people already
14:23 < Gottox> Vota.
14:23 < isaacbw> lol, go to a bar and sit there chatting on your computer with the people next to you
14:23 < Shinister> isaacbw: happens in gay bars ;]
14:23 < mansoor-s> Gottox, hahah
14:23 < exit2> Shinister: I saw that on a movie after I thought of it and it kind of killed my motivation
14:23 < Shinister> there's grindr and stuff, location based hookups/chatting
14:24 < Shinister> all a bit sleezy
14:24 < exit2> Shinister: A challenge would be to try to prevent it from being a hookup app
14:24 < wwicks> exit2: sounds like you have a lot of time on your hands. I wish I did.
14:24 < exit2> wwicks: I don't, I just think too much :P
14:24 < mansoor-s> exit2, are you going to make this?
14:24 < Shinister> exit2: good luck. Omegle tried to stop people being naked on it all the time too 
14:24 < exit2> mansoor-s: considering it
14:24 < wwicks> exit2: I know how that works.
14:24 < exit2> Shinister: yeah haha
14:25 < mansoor-s> exit2, I am looking to work on a project with someone :D
14:25 < mansoor-s> new project**
14:25 < exit2> mansoor-s: word
14:25 < Shinister> mansoor-s: any ideas?
14:25 < Shinister> I recently started an appjs IRC client
14:25 < mansoor-s> i have one but i'm not in love with it
14:25 < Shinister> not sure how much motivation I have to carry on with it
14:25 < mansoor-s> there is a turn based strategy game that comes with.. i think KDE
14:25 < wwicks> when I get free time back- I'll get back to http://storehours.com
14:25 < Gottox> reallife is a strange thing... You need to processes to fork a child.
14:25 < mansoor-s> conquer or soemthing
14:25 < mansoor-s> i want to implement a multiplayer version of that
14:25 < Shinister> I also saw radd.it - which I bet I could write 50x better in node
14:26 < isaacbw> is appjs all local?
14:26 < Shinister> yes
14:26 < mansoor-s> yup 
14:26 < exit2> Shinister: plus that ui is hideous
14:26 < Shinister> well, I imagine you could stick socket io in there and pull from something
14:26 < Shinister> exit2: totally
14:26 < Shinister> and it's buggy 
14:28 < exit2> jesus .to domains are expensive
14:29 < milani> isaacbw, local?
14:29 < Gottox> exit2: so are .io domains.
14:29 < isaacbw> milani, as in, you run it on the machine you will use it on
14:29 < exit2> Gottox: how much are they?  This .to I'm looking at is like 250 :|
14:29 < isaacbw> which is a yes
14:29 < isaacbw> and seems silly
14:29 < radiodario> they're like levis skinny jeans
14:29 < Gottox> io is ~100eur per year.
14:29 < exit2> Anyone using linode with Node?
14:29 < isaacbw> html and css are great for defining interfaces across many different devices and software
14:30 < milani> isaacbw, aha. yeah but you can also load remote contents.
14:30 < radiodario> exit2: yes
14:30 < exit2> radiodario: working well for you?
14:30 < wwicks> with almost 2000 new TLD applications- why can't we get .api?
14:30 < radiodario> i use it for more than running my website but yeah, it's pretty good if you like to farm your own system
14:30 < radiodario> otherwise there are other options
14:30 < exit2> radiodario: ubuntu?
14:30 < wwicks> I always need a different domain for api.. also .cdn
14:30 < radiodario> yes
14:32 < isaacbw> uniteddomains is often cheaper than other places
14:32 < isaacbw> check them out
14:33 < isaacbw> significantly cheaper
14:36 < Shinister> http://arstechnica.com/security/2013/01/extremely-crtical-ruby-on-rails-bug-threatens-more-than-200000-sites/
14:38 < exit2> Is Stylus supposed to auto-compile your CSS?
14:44 < ozette> about me having troubles using fs.symlinkSync under windows machines .. turns out I need to give the path double backslashes. e.g __dirname+"\\foo.js"
14:44 < ozette> terrible
14:45 < wwicks> I've been running node on windows for awhile… all of the headaches are terrible
14:45 < wwicks> (almost migrated off now)
14:48 < ozette> yes, tell me :c
14:51 < ozette> even need to run a privileged shell under windows to run the script for folders this user fully owns.
14:51 < exit2> anyone here use stylus?
14:59 < exit2> would this be the right way to include the stylus middlware? http://pastie.org/5655134
14:59 < exit2> seems to be converting style.styl to css no problemo, but if I make any other *.styl files it doesn't
15:00 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:12 < fg3> what's a good data structure for a quiz model that might contain ( parts, chapters ) but will contain questions?
15:16 < fg3> tree
15:17 < fg3> :)
15:28 < brianc> Anyone here hiring or know someone who is?
15:29 < zomg> brianc: I know someone who's hiring a low level PHP programmer 
15:29 < zomg> :D
15:30 < brianc> hmmm
15:30 < brianc> I'd prefer to work with node.js
15:31 < Shinister> wouldn't we all?
15:31  * Shinister cracks on with his c#
15:32 < bugabinga> what is a low level php programmer exactly ... ? :D
15:32 < zomg> Yep, I'm currently working with ActionScript 3 :P
15:32 < zomg> bugabinga: I mean like a jr dev
15:32 < Shinister> zomg: I'm sorry
15:32 < zomg> Shinister: 'tis not so bad, it's with Flex so it's quite tolerable
15:32 < Shinister> I sometimes joke how bad c# is, but it's pretty good for what it is. Actionscript however...
15:32 < Shinister> Is Flex still a thing? I looked into it 3 years ago or so for a project
15:33 < zomg> I dunno, but in this case I agree with the client that this is a good tech pick for this particular task
15:33 < zomg> Infact they couldn't even do it with anything else besides flash
15:34 < niggler> flex was abandoned
15:34 < niggler> by abandoned i mean given to apache, where software goes to die
15:34 < zomg> Well Flex is still pretty good for building GUIs
15:34 < wwicks> lol
15:34 < zomg> I don't even know how to build GUIs in pure Flash :P
15:34 < niggler>  there's nothing that stops adobe flex from generating an html5 target
15:35 < niggler> *apache flex
15:35 < ablomen> zomg, throw a few 100 action clips in a button object and never look at it again
15:35 < dab`> with the net/tls, is it possible to bind to both ipv4 and ipv6?
15:35 < zomg> ablomen: yep...
15:35 < zomg> :D
15:35 < exit2> anyone here used minify?  I'm trying to figure out how to setup a destination dir for the minified files instead of the default
15:37 < CoverSlide> maybe the fileOut param
15:37 < wwicks> exit2: no sry. I use bndlr
15:37 < CoverSlide> https://github.com/srod/node-minify << in all examples there's a fileOut property
15:38 < exit2> CoverSlide: wow I was looking at a different one :|
15:38 < exit2> https://github.com/coderaiser/minify
15:38 < CoverSlide> oh
15:38 < CoverSlide> hmm
15:38 < exit2> I'll look into this one instead
15:39 < exit2> this one seems to be a bit more popular, I'll also look into bndlr
15:39 < wwicks> CoverSlide: welcome back. I'm still pulling my hair out over this crypto issue. Fun times.
15:39 < CoverSlide> hmm the coderaiser/minify seems to do more than js though
15:39 < exit2> CoverSlide: yeah it runs the css and img also
15:40 < CoverSlide> that's pretty cool
15:40 < wwicks> exit2: bndlr is what I created for Myspace. It isn't popular :( heh
15:40 < exit2> wwicks: oic :)
15:41 < CoverSlide> myspace uses node?
15:42 < wwicks> CoverSlide: yes, I convinced them when they started new.myspace.com
15:43 < wwicks> CoverSlide: as I said a bit earlier this morning… it won't save them though heh
15:44 < dab`> looks like a merge of twitter and G+ :P
15:44 < fermion> wwicks it'd help if your README had some basic instructions ;-)
15:44 < fermion> I'm on the market for a static asset bundler myself
15:45 < fermion> ahh, example/, derp
15:45 < wwicks> fermion: doh, I'm a bit embarrassed that I've never don't that
15:45 < CoverSlide> I usually do that with a Makefile
15:45 < CoverSlide> although more recently I have a build.sh
15:45 < fermion> CoverSlide I was hoping for some grunt.js based thing to be out there that I could use/contribute to
15:46 < CoverSlide> i still need to try out grunt
15:46 < wwicks> bndlr is a port of the C# one that I wrote for myspace back when it was still cool. The node version runs better… but I never did any documentation on it
15:47 < wwicks> just the examples
15:47 < CoverSlide> how long ago did you work for myspace?
15:47 < CoverSlide> did you know scotland stephenson or christopher lim?
15:47 < wwicks> I was there from 2005 till June of last year
15:48 < wwicks> yes- I know both of them very well
15:48 < CoverSlide> awesome
15:48 < TehShrike|Work> So you were there during the recent re-imagining
15:48 < TehShrike|Work> How many devs do they have now?
15:48 < wwicks> yes
15:48 < CoverSlide> they worked with me at cramster/chegg this past year till August
15:48 < wwicks> last I knew it was about 10 frontend
15:49 < wwicks> maybe 6 API guys… and I don;t know how many DB guys
15:49 < TehShrike|Work> What are they using node for?
15:49 < wwicks> new.myspace.com
15:50 < wwicks> the API layer is still C# though
15:50 < CoverSlide> their current front page doesn't even look like a social network. it looks like a music news site
15:51 < TehShrike|Work> Well, maybe that will be more useful than another social network
15:51 < wwicks> CoverSlide: how do you know those guys?
15:51 < CoverSlide> yeah
15:51 < CoverSlide> 07:45 < CoverSlide> they worked with me at cramster/chegg this past year till August
15:51 < wwicks> ah- sry. I missed that
15:55 < wwicks> ok c++ people: What ToString method is this calling? https://github.com/joyent/node/blob/48c3d2004180dda8d0d32386299dd918a0804389/src/node.cc#L1187
15:56 < bnoordhuis> wwicks: depends
15:56 < wwicks> my 'val' is a Buffer...
15:56 < TehShrike|Work> Apparently that's a V8 class?
15:56 < bnoordhuis> in that case it's Buffer.prototype.toString
15:56 < bnoordhuis> or maybe SlowBuffer.prototype.toString
15:57 < dab`> v8::Handle<v8::Value>
15:57 < wwicks> so that SHOULD be the one that default to 'utf8' encoding… yes??
15:57 < dab`> Looks to be a v8 class as TehShrike|Work said
15:57 < bnoordhuis> dab`: Value is the 'can be anything' class
15:57 < dab`> oh I see
15:57 < bnoordhuis> wwicks: provided it's a real Buffer, yes
15:58 < Tobsn> - "guess the c++ method"
15:58 < dab`> xD
15:58 < bnoordhuis> Tobsn: this is one step above that, really :)
15:58 < Tobsn> - "guess where the c++ method comes from"
15:58 < Tobsn> ;)
15:58 < dab`> So weird to realize node uses C++ :+
15:58 < TehShrike|Work> lol
15:58 < Tobsn> cpp is the shit
15:58 < dab`> Never really think about it
15:58 < TehShrike|Work> What else would it use?
15:59 < bnoordhuis> dab`: only to glue v8 and libuv together
15:59 < TehShrike|Work> Ruby? :-P
15:59 < TehShrike|Work> PHP maybe!
15:59 < Tobsn> thats the secret reason people like node + mongodb
15:59 < dab`> xD
15:59 < CoverSlide> it uses python for compiling plugins
15:59 < wwicks> that first link was from v0.8.2… here is one from v0.8.14 https://github.com/joyent/node/blob/8c5f269f908c759d934a1da42dd491bff67c1a37/src/node.cc#L1193
15:59 < dab`> well like, I never think about it. you know, like all the errors are in net.js and *.js 
15:59 < wwicks> notice how it handles buffers differently now?
15:59 < CoverSlide> well sometimes you get messy cpp errors
15:59 < TehShrike|Work> Is libuv straight C?
15:59 < CoverSlide> yes
15:59 < Tobsn> wwicks, went from "we dont know" to "we know what it is"
16:00 < bnoordhuis> TehShrike|Work: and some x86 assembly
16:00 < VultureZ> Anyone using sequelize with postgres? I have a question regarding associations. Whenever I add a new association, it queries the database for all entries with that foreign key and issues an update mainly to their "lastupdated" field.  For example if I had a one-to-many relationship between users having customers, if I add another customer to the user, it would update all customers belonging to that user. Seems like unn
16:00 < VultureZ> ecessary overhead maybe I am doing something wrong?
16:00 < Tobsn> TehShrike|Work, yeah libuv is the "don't try reading it" lib
16:00 < bnoordhuis> aw :(
16:00 < bnoordhuis> i wrote that, you know
16:00 < CoverSlide> well that's true for any C library
16:00 < Tobsn> hehe
16:00 < Tobsn> i can't read it...
16:01 < TehShrike|Work> libuv is one of the deepest kinds of magic... low-level cross-platform magic
16:01 < CoverSlide> would be nice if the guy who wrote it did some documentation
16:01 < Tobsn> cpp, yeah, on a good day, but pure C... i gave up on understanding it
16:01 < bnoordhuis> CoverSlide: documentation is for the weak. if it was hard to write...
16:01 < TehShrike|Work> >_<
16:01 < CoverSlide> http://twitter.com/coverslide/status/281481825547853824
16:01 < bnoordhuis> actually, check out uvbook. it's pretty good
16:02 < bnoordhuis> that's http://nikhilm.github.com/uvbook/
16:02 < CoverSlide> yeah been meaning to
16:02 < TehShrike|Work> Oh hey, that's cool
16:02 < Tobsn> CoverSlide, should be "commenting code"
16:02 < Tobsn> ;)
16:02 < TehShrike|Work> Documentation by variable naming!
16:02 < CoverSlide> haha
16:02 < wwicks> verbose kind of person eh?
16:03 < CoverSlide> less uv.h
16:03 < CoverSlide> ^ documentation
16:03 < TehShrike|Work> wwicks: me?  Yeah, I tend on the side of long/descriptive variable names :-P
16:03 < bnoordhuis> CoverSlide: i *slaved* on uv.h >:(
16:03 < dab`> oh wow
16:03 < dab`> is libuv essentially node without the js? (in behavior)
16:03 < tuhoojabotti> no
16:03 < bnoordhuis> dab`: kind of. it's the primordial event loop
16:04 < dab`> gotchya 
16:04 < tuhoojabotti> io abstraction
16:04 < dab`> ugh I should brush up on my C(++)
16:04 < CoverSlide> libuv is a cross-platform wrapper for libev / libeio 
16:05 < exit2> Think this is best for getting location http://diveintohtml5.info/geolocation.html or is there a node module?
16:05 < CoverSlide> although i think those are being removed soon
16:05 < bnoordhuis> CoverSlide: have been removed, actually
16:05 < CoverSlide> navigator.geolocation is browser-only
16:06 < exit2> CoverSlide: ok thanks
16:06 < CoverSlide> bnoordhuis: oh yeah? already in v0.8.x?
16:06 < bnoordhuis> CoverSlide: no. v0.8 is feature/api/abi stable. libev and libeio have been dropped in master though
16:06 < CoverSlide> exit2: if you want geolocation for an ip address, i recommend geoip-lite
16:06 < bnoordhuis> so people that have addons that still depend on libev/libeio, upgrade _now_
16:07 < CoverSlide> awesome, benchies look good?
16:07 < exit2> CoverSlide: well I'm trying to get location of user on mobile device - would that work as well?
16:07 < bnoordhuis> yes. and they'll only get better
16:07 < CoverSlide> exit2: yeah
16:07 < exit2> swee thanks
16:07 < exit2> *sweet
16:07 < CoverSlide> exit2: well, the navigator.geolocation, not the ip address
16:08 < exit2> CoverSlide: what about something like this https://github.com/estebanav/javascript-mobile-desktop-geolocation/
16:09 < CoverSlide> oh that looks cool too
16:10 < exit2> also looks like there is a node module for the geolite from maxmind
16:11 < exit2> CoverSlide: https://github.com/bluesmoon/node-geoip
16:11 < CoverSlide> yeah that's geoip-lite.
16:12 < exit2> have you used that before?  Essentially I need to get location so I can create a radius of that location
16:12 < CoverSlide> it's better than geoip which binds the geoip library, but it's slower and i've seen lots of complaints about it
16:12 < CoverSlide> i haven't
16:12 < exit2> I'll test em' all!
16:12 < CoverSlide> it uses a csv file instead of the binary database
16:12 < CoverSlide> but it's faster than the binary library
16:13 < CoverSlide> oh he hasn't updated since september.
16:14 < CoverSlide> well i think he has a script to convert the database to a csv though somewhere
16:15 < CoverSlide> or wait, i might be mistaken, maybe he's written a binary parser ... 
16:16 < CoverSlide> i dunno, don't have time to investigate
16:19 < TehShrike|Work> "I saw it in a movie once." https://github.com/st-luke/crawly
16:19 < TehShrike|Work> stluke++
16:21 < CoverSlide> haha awesome
16:29 < MI6> joyent/libuv: Ben Noordhuis master * 9eedd32 : build: make clean target remove libuv.{a,so,dylib} - http://git.io/cG6E-Q
16:29 < hemanth> :D 
16:37 < kenperkins> morning
16:37 < VultureZ> Anyone using sequelize with postgres? I have a question regarding associations. Whenever I add a new association, it queries the database for all entries with that foreign key and issues an update mainly to their "lastupdated" field.  For example if I had a one-to-many relationship between users having customers, if I add another customer to the user, it would update all customers belonging to that user. Seems like unn
16:37 < VultureZ> ecessary overhead maybe I am doing something wrong?
16:38 < wwicks> what lib are you using to communicate with pg?
16:38 < wwicks> doh nm
16:39 < wwicks> I see it now
16:39 < wwicks> sry- I haven't tried sequelize
16:41 < kenperkins> I'm using Sequelize (with mysql :()
16:42 < kenperkins> VultureZ: try #sequelizejs
16:43 < VultureZ> ty
16:43 < VultureZ> kenperkins, do you see the same thing in mysql?
16:43 < VultureZ> I would imagine it would
16:44 < exit2> Hmm, I'm trying to think of the best way to tackle this.  Essentially with my app I am able to get the longitude and latitude of the user, but now I need to figure out the a way to calculate a distance of the user and create a circumference with that radius
16:45 < VultureZ> exit2, thats a very common math problem for those working with google maps :)
16:45 < exit2> VultureZ: I met :)
16:45 < exit2> *bet
16:45 < exit2> heh
16:45 < wwicks> exit2: you want lib to do it for you?
16:45 < exit2> I guess a degree of latitude is like ~69 miles
16:45 < VultureZ> you want to draw the circle or get the bounds? 
16:45 < rounce^work> exit2: look up orthodromic distance
16:46 < rounce^work> (If memory serves)
16:46 < rounce^work> or
16:46 < rounce^work> mongodb does it natively
16:46 < VultureZ> I work with it a lot, all I know is there are a lot of logrithmics to the equation :P
16:46 < VultureZ> yea... very true
16:46 < rounce^work> logarithmics
16:46 < rounce^work> wasn't annie lennix in that band?
16:46 < rounce^work> *lennox
16:47 < VultureZ> no clue sounds like a good band name though
16:47 < rounce^work> haha
16:48 < exit2> seems simple enough to calculate the distance of one mile from their location and do a simple circumference calculation
16:49 < Connorhd> longitude and latitude don't convert directly to distance do they?
16:49 < rounce^work> no
16:51 < MI6> joyent/node: Dean McNamee master * c207d40 : typed arrays: implement load and store swizzling  Implement load and stor (+2 more commits) - http://git.io/Ox6keA
16:54 < segomos> there is a widely available computation to get distance between two points on earth
16:55 < segomos> http://www.movable-type.co.uk/scripts/latlong.html
16:56 < rounce^work> the 'easy' way is to do spherical > cartesian coordinate space then just find the magnitude of both vectors
16:59 < VultureZ> the one segomos posted is the one we use
17:00 < rounce^work> cheers for the link, I'll pass this around to some of the junior devs here
17:01 < rounce^work> might be more sensible than my weird sweary explanations
17:01 < segomos> haha
17:01 < ralphholzmann> How do you track down rogue "EPIPE" and "ECONNRESET" errors?
17:01 < ralphholzmann> the stack is pretty short
17:01 < ralphholzmann> Error: write ECONNRESET
17:01 < ralphholzmann>    at errnoException (net.js:770:11)
17:01 < ralphholzmann>    at Object.afterWrite (net.js:594:19)
17:01 < segomos> what node version
17:01 < ralphholzmann> 0.8.16
17:03 < merpnderp> Anyone been able to get Netbeans to play nice with node?
17:03 < isaacbw> wwwhhhyyyyy
17:03 < isaacbw> emacs 4 lyfe
17:04 < merpnderp> isaacbw: hah, I'm a VIM'er :P
17:04 < isaacbw> then why are you trying to get netbeans to work !? :O
17:05 < merpnderp> isaacbw: Thought it woudl be nice to have an IDE to manage files, run the debugger, and be able to hit F5 or whatever to start up the app. The same reason lots of people like IDE's.
17:05 < isaacbw>  nah, you're crazy
17:05 < isaacbw> that's the only reason
17:05 < Antaranian> hi ladies
17:06 < segomos> asl
17:06 < Antaranian> :D
17:06 < merpnderp> isaacbw: So far I havent' been impressed. Tried Eclipse, Webstorm, and Netbeans, and just not as easy to write code as 6 terminals with VIM open.
17:06 < tuhoojabotti> 16/f/usa
17:06 < tuhoojabotti> sublime text 2 ftw
17:07 < isaacbw> 6 different terminals? does vim not have something like emacs buffers?
17:07 < merpnderp> isaacbw: Yes, but ctrl-j/k to switch between files is faster/easier.
17:08 < Antaranian> having a weird issue related to RegExp
17:08 < wwicks> merpnderp: have you tried https://c9.io/
17:08 < wwicks> merpnderp: I have not… I'm just wondering
17:08 < Antaranian> my regex is  /(dejavu|ubuntu)/gi 
17:08 < merpnderp> isaacbw: without autocomplete I'm often flying between files to make sure I have the correct method name/member/whatever.
17:09 < merpnderp> wwicks: I've looked at it, but haven't tried it. Suppose I should, A because it is cool and B I should be thorough :)
17:09 < Antaranian> for "Ubuntu Mono" test returns false, and for "Ubuntu Light" return true
17:09 < isaacbw> merpnderp, emacs has autocomplete and I'm sure vim does too
17:09 < isaacbw> not that I use it anymore
17:09 < merpnderp> isaacbw: VIM's autocomplete is a mess. It is worse than nothing.
17:10 < merpnderp> But I'd be up for some emacs action if it had smart js autocomplete.
17:10 < isaacbw> how often do you know what a function does exactly, but not its name
17:10 < isaacbw> I just don't find myself needing autocomplete
17:10 < merpnderp> better memory than me.
17:10 < isaacbw> because you're going to look in the docs before using it anyway
17:10 < isaacbw> I just always have API docs open
17:10 < merpnderp> I usually need it for my own code
17:11 < isaacbw> does it work well with javascript? It's such a dynamic language
17:13 < Antaranian> maybe anyone  isn't cool enough to participate editor wars ?
17:14 < merpnderp> isaacbw: Netbeans had great support for client side code. But it didn't understand require or server side code.
17:14 < merpnderp> Webstorm worked great, but realized I'm probably not that interested in IDE's.
17:15 < isaacbw> I bet it would shit all over inheritance
17:15 < isaacbw> or any other dynamic anything
17:15 < merpnderp> I'm not so sure. Looked like it had the whole prototype chain (Netbeans that is)
17:15 < wwicks> webstorm does a decent job
17:15 < isaacbw> hmm
17:15 < isaacbw> that's cool
17:15 < wwicks> I have my complaints though
17:15 < merpnderp> wwicks: like what?
17:16 < wwicks> silly irritating things… like getting the formatting wrong (tab vs spaces)
17:17 < wwicks> lots of little things like that
17:17 < wwicks> but all around- it is very feature packed
17:17 < merpnderp> I should probably just give it up and relearn emacs. Seems like I used to be more productive....but I haven't used emacs in a decade. That's a long time to be a vim user.
17:19 < jpotts> I am interested in starting a cms project that does not store html in the database. The goal is to make a cms that is UI agnostic and follows rest principles exactly. Any ideas?
17:20 < segomos> what do you mean by UI agnostic?
17:20 < merpnderp> Woudln't it just be the backend of a CMS?
17:20 < jpotts> I mean in the database you wont have a bunch of html tags
17:21 < jpotts> you will have blocks and data
17:21 < merpnderp> json
17:21 < jpotts> yes
17:21 < Ramone> what are blocks?
17:21 < merpnderp> have them edit all content in markdown
17:21 < merpnderp> easy for users to pick up
17:22 < jpotts> so you will have like <h1>Hello</h1> block {type:h1, content:"hello"}
17:22 < merpnderp> and you can derp it anyway you like
17:22 < merpnderp> I think the hardest part for thing for programmers to deal with is the endless possibilities for an implementation.
17:22 < Ramone> sounds like you're rewriting html in json
17:22 < segomos> +1 Ramone 
17:23 < jpotts> yeah
17:23 < jpotts> stick with div's and spans
17:23 < jpotts> it might be a crazy idea
17:23 < jpotts> but it would also be really nice
17:23 < aandy> +1 for markdown
17:24 < aandy> # cus you're awesome
17:24 < aandy> ############################## and html parsers are not
17:24 < jpotts> yep i tried to write one of those and I was thinking maybe i should just go back to the source aandy 
17:24 < wwicks> jpotts: I think it is a great idea to have a UI agnostic CMS- but it sounds like a layer on top of git would do the trick?
17:24 < jpotts> it sucked so bad!!!
17:25 < merpnderp> There are some really fast markdown parsers so you can show your users real time views of their content.
17:25 < jpotts> wwicks: can you explain some more?
17:25 < jpotts> merpnderp: any suggested parsers for me?
17:26 < aandy> https://github.com/evilstreak/markdown-js
17:27 < jpotts> thanks aandy!
17:27 < aandy> whether it's faster/slower than https://github.com/andris9/node-markdown i don't know. just going by "popular" criteria
17:27 < wwicks> jpotts: a CMS backend is basically a focused use of version control. I say this because the company I used to work with had an agnostic CMS and it was awesome. But as soon as git came around- it was easy to replace the custom one we built with git & a layer on top
17:30 < aandy> agnostic cms? "a [cms] [which] holds that the existence of the ultimate cause, as God, and the essential nature of things are unknown and unknowable" - doesn't sound like a good cms?
17:30 < jpotts> wwicks: that is a great idea. I had never thought about doing it like that. Have you seen anything out open sourced like that?\
17:30 < aandy> "this is our about page, but we dunno"? or does agnostic mean something else here?
17:31 < wwicks> jpotts: not yet
17:31 < jpotts> hahah that is awesome aandy 
17:33 < wwicks> aandy: drupe is an example of a CMS that was built with a particular frontend in mind. jpotts was talking about making a CMS where you call REST endpoints to get the content… and then do whatever you want with it.
17:33 < wwicks> *druple
17:33 < jpotts> aandy: I guess it is really just a true REST CMS that says whatever comes up goes down the same. 
17:33 < wwicks> *..orr drupal
17:35 < aandy> ah okay. but what would be the advantage of that? ability to write raw html? surely that'd be a simple task by extending mk like octopress for instance
17:35 < jpotts> that is what i want wwicks to be able to do whatever I want with the data whether it is mobile or web
17:35 < aandy> but i might be missing the point
17:36 < wwicks> jpotts: I want someone to try to make one from google docs. That way the editor is already built.
17:37 < wwicks> google docs doesn't have a good node api yet (as far as I've found)
17:38 < jpotts> The idea is to take the styling that was built into html and substitute it for divs and spans which makes it more reusable across devices. The json that would come down from the server would be parsed client side by javascript and placed into html tags. This same data could be sent to ios/android and the ui could be dynamically created based on its unique styling rules
17:38 < jpotts> aandy: ^
17:38 < jpotts> wwicks: that would be good because people know how to make google docs
17:39 < aandy> jaket: oh okay, so to have client side views basically, yeah?
17:39 < jpotts> ** based on the unique styling rules of both devices
17:39 < aandy> wwicks: have you tried the actual google drive api from google? https://developers.google.com/drive/quickstart-js
17:40 < aandy> jpotts: yes :)
17:40 < wwicks> aandy: yes, but I couldn't get the oath to work
17:41 < wwicks> aandy: so really- it came down to being disappointed in the oauth2 offerings with nodjs
17:42 < aandy> how so? passport for instance, will give you an object of "shared resources" from whichever oauth endpoint you use - not sure what that'd entail in google, but might be worth a look
17:42 < jpotts> aandy: wwicks I am going to do some looking around
17:42 < jpotts> pm me with your twitter and I will let you know what I find 
17:43 < wwicks> the libs were too bloated or not developed enough. But that was months ago- someone may have moved things along now.
17:43 < jpotts> and if i create a github for this
17:44 < jpotts> do yall think this is worth pursuing aandy  wwicks ?
17:44 < wwicks> I would use it :)
17:46 < aandy> i jumped into the middle of the conversation so to me it sounds like "should i have an api and do device specific renders for it?" i'd say sure. if you alternative is to do a one-html fits all, i'd say definately yes
17:55 < jpotts> aandy: thanks for the input
17:57 < s5fs> Hi gang, I'm having issues compiling node 0.8.16 on a BeagleBoard XM. I'm hitting the same error as this post: https://github.com/joyent/node/issues/3614
17:57 < s5fs> "For thumb inter-working we require an architecture that supports blx"
17:58 < s5fs> I believe we're supplying the correct architecture to the configure script, and this has allowed us to move past a few other compile errors, but now I'm stuck, haha!
18:00 < aandy> jpotts: np, good luck with your project :)
18:00 < segomos> jpotts: are you going to cache the rendered MD from github?
18:01 < segomos> or call github on every request?
18:01 < segomos> if caching, it'd be cool if your CMS used webhooks to know when the repo was updated
18:01 < jpotts> that would be awesome segomos 
18:02 < jpotts> I am going to write up what I want more specifically
18:02 < jpotts> if you want to send me your twitter or github I will let you know when I have the project scoped out
18:03 < segomos> pmd
18:03 < sohcahtoa> jsdom question, how would I include a remote css file like this markup <link href='http://fonts.googleapis.com/css?family=Elsie+Swash+Caps:400,900' rel
18:04 < segomos> sohcahtoa: looks like you can just include that html in the source..
18:04 < sohcahtoa> in a js file?
18:05 < segomos> https://github.com/tmpvar/jsdom
18:05 < segomos> easymode, 2nd example shows markup written directly into the .env
18:07 < segomos> if you're getting an external page, it looks like you can inject the link tag
18:07 < sohcahtoa> checking it
18:07 < sohcahtoa> this is all server side
18:07 < segomos> i understand
18:08 < segomos> Passing objects to scripts inside the page <- that section shows injecting a script tag
18:08 < segomos> you can do that with link tags as well
18:09 < sohcahtoa> hm
18:09 < segomos> http://stackoverflow.com/questions/3158370/injected-link-stylesheet-takes-precedence-over-existing-styles-in-ie7
18:09 < sohcahtoa> I have to figure out how to get at the jsdom instance this thing is built on I guess.
18:12 < _numbers> i have a node module that is like the parent package, and then several dependencies which are also my own and which have sub-dependencies of which many are also utilized by the parent
18:13 < _numbers> isnt there a way (like npm dedupe) to specify in the parent package.json (maybe npm shrinkwrap) or some `npm install` flag, to tell npm that when it installs the parent package, it can re-use any dependencies installed by the parent also for the dependency dependencies? or specific ones?
18:14 < _numbers> e.g package A depends on B and C, B depends on C. can't B utilize A's C, instead of installing C twice?
18:15 < wwicks> are the dependencies in node_modues?
18:16 < wwicks> is the parent up a directory?
18:16 < _numbers> yes and yes
18:17 < _numbers> its basically a set of dependencies that COULD be used alone, but 99% of the time will only be installed with the parent
18:17 < wwicks> I ask because you can utilize require()'s path searching to accomplish it
18:17 < _numbers> they are like a bundled set of packages that are all authored by me
18:17 < _numbers> oh hm didnt think of that
18:18 < _numbers> well its not 100% of the time tho that there is a prent
18:18 < _numbers> just 99%. so B needs to be optionally able to install C, if parent A is not present 
18:18 < wwicks> If you know your directory structure is going to be locked in- the child modules can .npmignore things to cause it to traverse up the directory
18:18 < _numbers> ya IF the parent is present, the directory structure is always the same
18:18 < wwicks> …just one route I can think of- maybe not perfect
18:22 < tphummel> t0ml1ncx
18:24 < exit2> wwicks: so I'm trying this guy out for getting distance http://pastie.org/5656185
18:26 < paul__> Am I still able to use ES5 getters if I use util.inherits?
18:27 < paul__> It looks like I have to overwrite the prototype in order to use getters, but util.inherits also overwrites it
18:27 < mansoor-s> paul__, just do  MyObj.prototype = new MyParentObj(); after the MyObj constructor and you are golden
18:27 < Mortchek> paul__, getters don't need to be set on the prototype.
18:28 < Mortchek> !mdn createProperty @ paul__ 
18:28 < Mortchek> Eh, ecmabot's gone.
18:28 < s5fs> exit2: haha, i used something similar years ago for filtering store locations by distance. since it's as the crow flies, it was rarely accurate because cars don't fly.
18:28 < Mortchek> Also I got the name wrong.
18:28 < s5fs> (yet)
18:28 < Mortchek> https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/defineProperty
18:28 < paul__> thanks!
18:28 < exit2> s5fs: well essentially I need a round about ~1 mile distance from the user
18:29 < exit2> doesn't need to be precise
18:29 < Mortchek> paul__, standard disclaimer about using getters/setters potentially making your code do things the coder doesn't expect.
18:29 < Mortchek> Most people's intuition is that getters don't change anything and that setters just set the one thing. To do otherwise, you need a good reason.
18:30 < paul__> Understood, thank you.
18:30 < s5fs> I'm having issues compiling 0.8.16 on a BeagleBoard XM. I'm hitting the same error as this post: https://github.com/joyent/node/issues/3614
18:30 < s5fs> Any help is appreciated!
18:31 < _numbers> i read "I'm not sure but I think npm checks if the same dependency with the same version already exists in a parent directory, it won't install it
18:31 < _numbers> again."
18:31 < _numbers> yet, it does
18:32 < _numbers> isnt this the fundamental responsibility of npm? is it a bug? broken? or just me / misconfiguration?
18:32 < CoverSlide> Mortchek: you ain't in #javascript no mode buddy boy!
18:32 < CoverSlide> *more
18:33 < Mortchek> CoverSlide, hodang, must have accidentally tabbed over one
18:33 < Mortchek> Thanks for letting me know :P
18:34 < Mortchek> It's fortunate that the adjacent tab also has to do with JS :P
18:43 < CoverSlide> I think i've been put in some sort of split test.
18:44 < CoverSlide> The bums down the street from my work, one's sign says "god bless" the other says "good day"
18:44 < CoverSlide> and i swear they were swapped yesterday
18:51 < michaelsokol> hi all! I am trying to send a very large string with req.end(myString), but only parts of the string is sent. How could I send the whole string?
19:01 <@konobi> we won a prize?
19:03 < CoverSlide> who what?
19:06 <@konobi> node.js won an award it seems
19:06 < CoverSlide> link?
19:06 < CoverSlide> add to topic!
19:06 < jcrugzz_> ohh interesting. definitely send the link
19:06 < locoloco> Hi guys
19:07 < locoloco> I installed nodejs 0.9
19:07 < locoloco> but my code want  node":">= 0.6.13 && < 0.9.0"
19:07 < locoloco> can you please tell me how to get version lower that that 
19:07 < locoloco> than that
19:07 < s5fs> konobi: i wondered why i got this 'participant' ribbon
19:07 <@konobi> infoworld
19:09 < locoloco> since  I am biginer I already had lot of trouble to install it on my centos and now I need to  install version lesser that 0.9.0
19:09 < locoloco> can anybody help me out 
19:09 < locoloco> thanks
19:09 < kuebk> where should i report issues with node-gyp
19:09 < kuebk> is this a correct place
19:09 < kuebk> https://github.com/TooTallNate/node-gyp
19:09 < kuebk> ?
19:09 < exit2> CoverSlide: http://www.infoworld.com/slideshow/80986/infoworlds-2013-technology-of-the-year-award-winners-210419#slide16
19:11 < CoverSlide> awesome, in the company of bootstrap, ubuntu, ipad mini, and azure
19:12 < jcrugzz_> should give nodejs more positive clout, people are still resistent for the imminent takeover
19:13 < s5fs> that is certainly good company
19:13 < locoloco> jcrugzz can you help me with my isssue
19:15 < trevnorris> bnoordhuis: after doing some benchmarks I've noticed that running a majority of the Buffer write commands with assert are about 20-50% slower if done in C.
19:15 < Amfy> What kind of characters can I use to split urls?
19:16 < trevnorris> bnoordhuis: in your opinion, worth it to implement them in C, call the javascript if noAssert and C otherwise?
19:17 < _numbers> is there a way i can tell npm not to install one of a certain modules dependencies?
19:17 < _numbers> e.g. npm install mocha --without jade
19:17 < _numbers> really the maintainer should have marked jade as an optionalDependency in the package.json
19:17 < _numbers> but i am not the author so i cant change that
19:18 < cellvia> just delete it?
19:19 < ChrisPaterson> Got a question for the node experts:  I am attempting to run a child_process command (tried both spawn and exec).  It works in Linux, but on OSX it gives me it errors with code 127 (meaning command failed with possible problem with $PATH or typo).  If I console.log the exact command executed, copy-paste it into the shell it works.  All paths are absolute.  What gives??  anyone have this issue?
19:20 <@konobi> ircretary: when was mscdex last here?
19:20 < ircretary> konobi: mscdex was last seen at 2013-01-07T20:58:13.188Z, quit: Quit: Leaving #Node.js
19:20 < jcrugzz_> locoloco: Im not familiar with centos in particular but I would recommend uninstalling node 0.9 and installing 0.8.16 from source
19:20 <@konobi> ChrisPaterson: look at process.env
19:21 < locoloco> Thanks Jcrugzz
19:21 < locoloco> I use following command to install it "yum install gcc-c++ make git cd /usr/local/src/ git clone git://github.com/joyent/node.git cd node ./configure make make install"
19:21 < ChrisPaterson> konobi: good idea
19:21 < locoloco> it was very hard to find the rt installation proceduer on centos
19:22 < locoloco> can you please suggest me how should I tell those command to use older verion 
19:22 < locoloco> and not the latest one
19:22 < locoloco> thanks
19:22 < jcrugzz_> well since you already installed the utilities it needs
19:22 < jcrugzz_> go to nodejs.org
19:22 < locoloco> ok
19:23 < jcrugzz_> download the 0.8.16 source code from the downloads
19:23 < locoloco> ok
19:23 < jcrugzz_> extract the folder from the tar.gz and run that last command again
19:23 < jcrugzz_> folder might not be node
19:23 < jcrugzz_> it might be node-0.8.16 or something
19:23 < locoloco> done downloded
19:24 < locoloco> yes thats the right version
19:24 < jcrugzz_> but just run ./configure make make install and you should be set
19:24 < jcrugzz_> but uninstall 0.9 first
19:24 < locoloco> ok got it ...
19:24 < locoloco> thank you so much Jcrugzz
19:24 < jcrugzz_> np
19:26 < cellvia> i ned to introduce node to some coworkers, does anyone know of a really good primer for ppl who even arent too familiar with javascript
19:27 < cellvia> just to get a grasp of what it is, its strengths, etc
19:27 < cellvia> overview kind of
19:27 < Cronoh> idk, node about page?
19:30 < ChrisPaterson> konobi: does it matter that I sudo ran my node script and the file I'm trying to access is in my user home directory?  Also it's permissions are -r-xr-xr-x.  I would think it would exit with a 126 if it was a permission problem.  Also if I stat the file within node, it's there.
19:31 <@konobi> ChrisPaterson: sudo strips environment variables
19:33 < jcrugzz_> cellvia: This is what first got me, understanding the idea of the event loop etc, http://www.nodebeginner.org/
19:36 < fusiongrokker> so I have a node heroku worker dyno that's consistently crashing. Anyone have any idea how I can figure out why? it seems to work fine locally...
19:36 < isaacbw> well, are you logging the trouble on the deploy?
19:37 < wwicks> fusionfrokker: you might want to as over at #heroku
19:37 < fusiongrokker> wwicks: yeah, asked there too.
19:37 < wwicks> ok
19:37 < fusiongrokker> it deploys fine, has been running fine for about a week. just started crashing today.
19:38 < fusiongrokker> haven't touched it since deploying a week ago
19:38 < wwicks> are you using their postgres?
19:40 < fusiongrokker> no, only redis
19:40 < fusiongrokker> got it though
19:40 < fusiongrokker> $ heroku logs -t
19:40 < fusiongrokker> tails the log
19:40 < fusiongrokker> and that tells me that my connection to redis is timing out
19:40 < fusiongrokker> fun
19:53 < cellvia> thanks jcrugzz_  this looks good
19:53 < cellvia> as a follow on question i also need a primer for redis, i asked the #redis room but got crickets...
19:53 < cellvia> any ideas?
19:54 < isaacbw> it isn't a terribly complicated interface, cellvia
19:55 < cellvia> isaacbw its not for me its for coworkers, and just some simple introduction to what it even is
19:55 < isaacbw> http://redis.io/topics/data-types-intro
19:55 < cellvia> theyve never even heard of it
19:55 < cellvia> thanks
19:55 < cellvia> looks helpful
19:56 < isaacbw> do they know how sql databases work?
19:56 < isaacbw> then it should be easy to understand a key-value store
19:56 < isaacbw> just tell them it's a big fancy hashmap
19:56 < isaacbw> actually, I have no idea how it's structured
19:57 < gildean> but the representation is key:value, which is pretty much the easiest way to handle data imo
19:57 < gildean> might not always be the best, but it sure is easy
19:58 < isaacbw> if that's all you need, it is blazing fast
19:58 < isaacbw> basically, choose the simplest option for what you're doing becuase it will probably be the fastest
19:58 < isaacbw> redis->mongodb->mysql
19:58 < isaacbw> fastest, fast, still pretty damned fast
20:01 < isaacbw> you could even use redis alongside a full database
20:04 < isaacbw> do you guys have any dedicated hosting recommendations?
20:04 < isaacbw> preferably somewhere in new england
20:06 < Kakera> I'm wondering, how many methods is enough to start thinking about splitting it into multiple classes?
20:06 < CoverSlide> you could use redis as a replacement for memcached
20:06 < locoloco> thank you so much Jcrugzz  its work out
20:06 < isaacbw> Kakera, if it makes sense to do so. Read up on OO architecture
20:06 < locoloco> really appriciated your help
20:06 < isaacbw> it's not about number of methods
20:06 < CoverSlide> Kakera: it has nothing to do with the number of methods, just what's the best way to structure it
20:07 < Kakera> currently, my class has 13 methods, 2 properties and 16 events
20:07 < isaacbw> oh, I was being stupid about redis
20:07 < Kakera> I'm thinking about making it more OOP
20:07 < isaacbw> that's nothing
20:07 < Kakera> for example, I have a method "kick" that accept a chat ID and a member ID
20:08 < Kakera> instead, I could have a Chat class with a "members" property, each with a "kick" method
20:08 < isaacbw> http://en.wikipedia.org/wiki/Object-oriented_design
20:08 < isaacbw> that's up to you Kakera
20:08 < isaacbw> try to think bigger picture too, and what directions your library may take in the future
20:08 < isaacbw> when you make your decisions
20:09 < Kakera> at this point I expect a lot more methods
20:09 < isaacbw> don't worry about method count, worry about intelligent design
20:09 < isaacbw> er
20:10 < isaacbw> smart architecture
20:10 < CoverSlide> evolution > intelligent design
20:10 < CoverSlide> just adapt your library to its environment
20:11 < Kakera> easy to say
20:11 < isaacbw> splitting up functionality for the sake of splitting it up just makes things more confusing
20:11 < woah> in the long run, the only libraries remaining will be those that adapt well to their environments
20:12 < cellvia> lol CoverSlide nice
20:13 < isaacbw> my point was you should set yourself up to be able to evolve
20:13 < isaacbw> if your design is a clusterfuck from the start, you won't be able to grow or change much
20:15 < isaacbw> so yea you should put some thought into your initial design
20:15 < CoverSlide> just think of if there are a number of methods dedicated to a certain "type" of thing, and if you can separate that, and somehow include those together
20:19 < mermeladas> hello, what's an easy way to get your script execution time? maybe there's some option for node cli?
20:22 < CoverSlide> /usr/bin/time
20:25 < mermeladas> CoverSlide: well duh
20:25 < mermeladas> CoverSlide: thanks!
20:26 < CoverSlide> mermeladas: you might also try this inside your scripts: http://jsbin.com/esejuz/3/edit
20:26 < CoverSlide> oh whoops
20:27 < CoverSlide> http://nodejs.org/api/stdio.html#stdio_console_time_label
20:27 < CoverSlide> there we go
20:27 < CoverSlide> sorry
20:27 < avital> what does the ~ in "~0.5.6" mean, in package.json's dependencies?
20:27 < AviMarcus> CoverSlide, that doesn't let you save to log, though.
20:27 < AviMarcus> would be nice if that was built in - an option to save to a string.
20:28 < CoverSlide> AviMarcus: PR
20:28 < AviMarcus> PR?
20:29 < CoverSlide> avital: https://npmjs.org/doc/json.html#Tilde-Version-Ranges
20:29 < CoverSlide> AviMarcus: make a Pull Request
20:29 < avital> CoverSlide: ah, thanks. should have tried searching with "tilde".
20:30 < exit2> I'm using ejs with express and when trying to include socket.io.js from my index.ejs I'm getting a 404. I'm doing src="/socket.io/socket.io.js" - is that wrong?
20:30 < CoverSlide> exit2: you have socket.io listening on the express.server?
20:31 < exit2> CoverSlide: https://gist.github.com/4496599 - I think so, I did have an error telling me it appeared as if I was going from 2.x -> 3.x but I corrected that
20:31 < CoverSlide> not SocketIO.listen(app), but `var server = app.listen(port);var io = SocketIO.listen(server);`
20:32 < CoverSlide> well for one thing you're having createServer listen to app before it's initialized
20:33 < CoverSlide> oh and you have a second http.createServer at the very bottom? wtf?
20:33 < exit2> lol
20:33 < CoverSlide> your copy-pasta-fu needs some work
20:33 < exit2> first time using socket.io
20:33 < CoverSlide> well there only needs to be one httpServer
20:34 < CoverSlide> and people, stop doing createServer(callback), use server.on('request', callback)
20:37 < exit2> CoverSlide: so I should kill the stock http.createServer(app) that's created by express?
20:38 <@mbalho> the 'convention' is .createServer(cb).listen(port, cb) as well as on('request')
20:38 < CoverSlide> yeah, but people seem to not get that one does the other
20:39 < exit2> CoverSlide: https://gist.github.com/4496599 updated
20:39 < CoverSlide> and in this case where you need to bind two things to the server, it's better to go the eventemitter route
20:39 < CoverSlide> better as in more clear
20:40 < exit2> and now I'm not receiving the 404 on my socket.io.js
20:40 < exit2> CoverSlide: thanks
20:40 < CoverSlide> well that works
20:40 < CoverSlide> np
20:43 < trymyself> hi to all
20:44 < CoverSlide> hai 2u!
20:45 < trymyself> exists some framework / library to make a node.js structure / architecture do use plugin to extend functionalities of my app ?
20:45 < AviMarcus> CoverSlide, I don't think I ever edited core code. OK, so timeEnd currently does: exports.log('%s: %dms', label, duration); -- would it make sense to return duration; also? it's not async.. duration is in milliseconds so then you can log it however you want. Although, if it's just Date.now()- original time I'm not sure how helpful this is at all!
20:48 < isaacbw> trymyself, connect is pretty much that
20:51 < dgs> @find shades gray epub
20:51 < trymyself> I'm new with framweork. I need a framework or lib to simplify the creation of medium large application. So I need a certain structure for my app, in other words a certain structure for modules. Modules must be indipendent and testable. Then, in the future, I  need a method to add functionality as plugin
20:52 < trymyself> also plugin must be "testable"
20:52 < AviMarcus> that's just the way you do that. There's isn't really a framework to provide it
20:52 < wwicks> Where is the conversion loss here:
20:52 < wwicks> console.log(Buffer( Buffer("8d", 'hex').toString() ));
20:52 < AviMarcus> each script you require the sub-modules you need
20:52 < wwicks> output is: <Buffer ef bf bd>
20:53 <@konobi> well, it depends on what the app is doing, but "middleware" is a common pattern for plugin-like functionality
20:53 < CoverSlide> testability is overrated
20:53 < CoverSlide> i believe in YOLO Driven Development
20:53 <@konobi> CoverSlide: out!
20:55 < AviMarcus> lol
21:00 < trymyself> I don't know YOLO
21:02 < Industrial> Trying to figure out what the best option is for templates with Express right now, I'm leaning towards hogan (through consolidate-js). Can I still have a layout? or should I use header/footer partials ?
21:03 < zomg> I personally like EJS since it's very straightforward and doesn't constrain what I can do
21:03 < gkatsev> YOLO, you obviously like owls
21:04 < CoverSlide> https://gist.github.com/3979145
21:04 < trymyself> my application is not only as rest app, but I'd like to have a plugin method to add component as nodejs module
21:05 < Industrial> I wonder if it's possible to serve the same server side (CRUD) logic either through sockjs, REST or plain HTML :P
21:06 < Industrial> serving it up depending on the client
21:07 < jcrugzz_> Industrial: definitely possible
21:07 < CoverSlide> worth it?
21:07 < CoverSlide> bope
21:07 < CoverSlide> nope
21:08 < jcrugzz_> CoverSlide: exactly lol
21:08 <@konobi> it's called content negotiation
21:10 < trymyself> someone have used express and connect ? what are the main differences ?
21:11 <@konobi> express uses connect
21:11 < CoverSlide> connect is a bunch of libraries to do standard web servery things like serve static files, parse POST data, cookies, sessions, etc
21:12 < CoverSlide> express is built on top of connect and adds more functionality like routing and templating
21:12 < CoverSlide> they're both developed by the same dude
21:19 < Industrial> CoverSlide: guess not :) I was only thinking that all three options are just data transports for the same thing (eventually, HTML ..)
21:19 < thomasreggi> I've created a middleware error handler and it seems like it's overwritten express's. How can I use both?
21:20 <@konobi> is there a module like levelup but designed more around multi-level structures rather than flat key-value?
21:20 < thomasreggi> Do I have to pass next(err)?
21:21 < CoverSlide> next(err) would be the right way to call an error inside express, yes
21:21 < jcrugzz_> konobi: I believe Raynos/substack/dominictar wrote some map reduce type modules on top of levelup
21:22 < AviMarcus> eek I just signed up for bistri.com for consolidated VoIP stuff, but it wants my actual google username/pass and not just to allow the API. Why do companies still do this? Why is everyone OK with it, so that keeps companies doing it? Even with banking information, e.g. mint!
21:23 <@konobi> mint is somewhat understandable, since banks are super paranoid
21:23 < CoverSlide> as they should be
21:23 < jcrugzz_> AviMarcus: Banking imparticular is just terrible because the banks have broken infrastructure and don't have any incentive to make it better
21:24 < CoverSlide> everyone knows intuit is a bunch of hackers and scammers
21:24 < CoverSlide> That is true
21:24 < trymyself> has anyone used Architect (by c9) ?
21:24 < CoverSlide> I used to work for a bank
21:24 < thomasreggi> CoverSlide: I have middleware that calls next(err) and I have an error handler that I want those calls to go to. But when I actually have a bug I want express to console those javascript errors.
21:24 < trymyself> github.com/c9/architect
21:24 < jcrugzz_> CoverSlide: That must have been horrible
21:25 < CoverSlide> yeah. with banking they are always looking for someone to blame when stuff goes wrong
21:29 < jcrugzz_> ha, of course. It's easier that way. 
21:31 < squeakytoy> newbie question, but if you do: var http = require("http"); is it this that gets used? https://npmjs.org/package/http or how does it work?
21:32 < AviMarcus> jcrugzz_, e.g. paypal and ingdirect (and dwolla) have an API that you can limit to view. But I don't actually know of any other bank that does that. So then.. the 10? 20? apps now that aggregate financial data all need your actual username/pass
21:38 < CoverSlide> squeakytoy: https://github.com/joyent/node/blob/master/lib/http.js << it uses this
21:38 < CoverSlide> squeakytoy: require with no slashes in it will look for files in here first: https://github.com/joyent/node/tree/master/lib
21:38 < CoverSlide> squeakytoy: and then check for installed local modules
21:39 < squeakytoy> okay, so these are certain modules shipped/bundles with node?
21:40 < CoverSlide> they are inside the executable
21:40 < isaacbw> http://nodejs.org/api/
21:40 < squeakytoy> which might or might not be better than third party modules?
21:40 < CoverSlide> http://nodejs.org/api/modules.html#modules_core_modules
21:40 < squeakytoy> ah, ok
21:41 < squeakytoy> thanks
21:41 < jcrugzz_> AviMarcus: Yea banking in general is just an enormous issue. You literally have no control or information about your financials and money. 
21:42 < guidocalvano> can you detect that the event queue is stuck, or handle exceptions on the event queue?
21:42 < jcrugzz_> I am excited to see bitcoin as this incoming disruptive force, more people just need to be educated on it
21:44 < CoverSlide> until big corporations start creating big data centers dedicated to mining
21:45 < jcrugzz_> CoverSlide: I don't believe they are that smart. The ones who should be worried the most are too busy sitting on their big piles of money
21:46 < isaacbw> nah, bitcoin won't be disruptive
21:46 < isaacbw> it's made as much of an impact as it's going to make
21:46 < isaacbw> it's neat technically, but not very useful economically
21:46 < mmalecki> banking is the worst industry ever -.-
21:46 < CoverSlide> if it starts replacing current monetary system then that's inevitable
21:46 < CoverSlide> money always favors the rich
21:46 < livinded> ya, I was hoping Simple would fix that but it's really not there
21:47 < mmalecki> I, however, was pleasantly surprised when I got a wire from the USA in under 24 h
21:47 < mmalecki> (I live in Poland)
21:47 < livinded> BofA is just way more convenient
21:47 < isaacbw> lol you guys
21:47 < isaacbw> you're being so silly
21:47 < isaacbw> silly willies
21:47 < mmalecki> livinded: Simple is lame, being available for USA only
21:47 < livinded> also Simple has so much downtime
21:47  * Mroost chuckles at silly willies
21:48 < livinded> mmalecki: being an ethnocentric American I don't give a fuck
21:48 < mmalecki> bank having downtime ._. ?
21:48 < livinded> mmalecki: the bank isn't down but like phone based check deposits go down, atm access goes down, etc.
21:48 < CoverSlide> Mroost: stop looking at my willie!
21:49 <@Nexxy> \o/
21:49 < livinded> I feel like the big banks are going to catch up in terms of tech before simple becomes less of a hassle
21:50 < AviMarcus> livinded, simple has issue in terms of fees
21:50 < mmalecki> livinded: jeeeesus... ATM being down?!
21:50 < mmalecki> this is like
21:50 < mmalecki> the worst thing that could happen
21:50 < livinded> AviMarcus: what fees? They're part of the CU coop
21:50 < AviMarcus> it's still a credit card and doesn't pay interest - so it charges fees to merchants, etc.
21:50 < mmalecki> probably ever
21:51 < livinded> AviMarcus: ah
21:51 < AviMarcus> Dwolla seems pretty cool in terms of advancing instant-ACH and bringing down transaction fees
21:51 < livinded> AviMarcus: that was the other thing, the ACH fees are a pain in the ass
21:51 < AviMarcus> transfers <=$10 are free, above $10 is 25c no matter how big.
21:51 < AviMarcus> with dwolla
21:52 < livinded> I'm not willing to drop my paychecks into Simple but I have to write a check and wait for it to clear to get fee transfers into my Simple account or do ACH which is like $3/transaction
21:52 < AviMarcus> as opposed to CCs that are typically 30c + 2.9% (paypal, stripe, braintree)
21:52 < jcrugzz_> isaacbw: why is it not very useful economically? 
21:52 < AviMarcus> $3/transaction cost for ACH? no body charges for ACH, that's weird.
21:52 < squeakytoy> CoverSlide, you wrote " require with no slashes in it will look for files in here first: https://github.com/joyent/node/tree/master/lib  and then check for installed local modules" - could you give an example on a require call with slashes? for example i wanted the npm's http and not the bundled one
21:52 < CoverSlide> squeakytoy: require('./node_modules/http')
21:53 < isaacbw> jcrugzz_, modern economies are based on the government's ability to adjust the rate of inflation with the growth of GDP
21:53 < livinded> AviMarcus: it cost me $3 to transfer funds from BofA into my Simple account
21:53 < AviMarcus> livinded, from who? simple?
21:53 < isaacbw> without that, you get either an artificially slow economy
21:53 < livinded> don't know if it was only the first time since I haven't done it again. But I know I paid that
21:53 < livinded> AviMarcus: from BofA into Simple
21:54 < AviMarcus> right, but who charges the actual fee?
21:54 < livinded> not sure
21:54 < livinded> I think it was BofA
21:54 < AviMarcus> that's odd.
21:54 < freewil> isaacbw, try reading this time is different by reinhart and rogoff and see if your opinion of that changes
21:54 < freewil> http://www.amazon.com/This-Time-Different-Centuries-Financial/dp/0691152640/ref=sr_1_1?s=books&ie=UTF8&qid=1357768292&sr=1-1&keywords=this+time+is+different
21:54 < AAA_awright> squeakytoy CoverSlide: That would require that the loaded module is always installed in node_modules, which isn't the case
21:54 < freewil> (your opinion about how inflation works)
21:55 < CoverSlide> AAA_awright: right, i know
21:55 < AviMarcus> livinded, I have ACHs going into and out of capital one or ing direct (now capital one) all the time... the only limit is if it's a MMA and not checking there's a limit to how many transactions per month.
21:55 < isaacbw> I'll add it to my amazon wishlist freedrull 
21:55 < isaacbw> er, freewil 
21:55 < squeakytoy> CoverSlide, if you look at http://lesscss.org/ they say: "Usage in Code: var less = require('less');" -- but thats without slashes. I am just trying to understand :-)
21:55 < isaacbw> damn autocomplete
21:55 < livinded> AviMarcus: maybe it was only a one time fee or something
21:55 < isaacbw> but I doubt it will :)
21:55 < freewil> isaacbw, it can be brainfucking academic at times but a good read
21:55 < freewil> very informative
21:56 < isaacbw> thanks for the link then
21:56 < CoverSlide> squeakytoy: require('modulename') will load a module named "modulename". if it is a core module, it will load that, else if it is in node_modules, it will load that. else it will throw an error
21:56 < squeakytoy> CoverSlide, gotcha, thanks
21:56 < CoverSlide> require('./filename') will only load a file if that file exists relative to that script
21:56 < livinded> What I really want is something like mint that doesn't have such a crappy UI
21:57 < freewil> the big banks will never innovate
21:57 < CoverSlide> they already have your data, they will haxxor you if you switch to something else
21:57 < freewil> there is too much regulation
21:57 < mikola> Hey everyone, I started work on an npm module for dealing with streaming narrow band levelsets (ie run length encoded voxel data) and was wondering if I could get some early feedback on the API?
21:57 < mikola> https://github.com/mikolalysenko/rle-voxels/blob/master/API.md
21:57 < freewil> and innovation never comes from the status quo
21:57 < livinded> it's not innovation, it's lack of neccesity
21:57 < livinded> errr, not regulation
21:57 < AAA_awright> Or government interventionism
21:57 < freewil> exactly - they dont need to innovate because they dont have much competition
21:58 < livinded> they don't want to cut into their profit margins
21:58 < AAA_awright> How you write checks is written into law, the banks can't change that if they wanted to
21:58 < freewil> see: regulatory capture, rentseeking (economics)
21:58 < livinded> AAA_awright: the law just changed that allowed for checks to be deposited via image
21:58 < AAA_awright> livinded: As recently as 6 years ago?
21:58 < AviMarcus> dwolla is creating a live API for ACH transfers, called fi-sync I think
21:58 < AAA_awright> That's the law I'm talking about
21:58 < AAA_awright> livinded: And by the way, that law isn't optional
21:59 < AAA_awright> It REQUIRES banks to comply
21:59 < AviMarcus> they have a few banks signed into their system
21:59 < AviMarcus> Hmm. I think I've only heard of a handful of banks that provide the option for digital check deposit - ing direct, ally? and some others
21:59 < wwicks> AAA_awright: do you know what law it is?
21:59 < devc> Hey guys I'm having an issue installing node.io and Google's turning up nothing on the error I'm getting (or generic errors). I'm trying to get started on a small mini-app as a first step into node and don't really know where to go from here.
22:00 < livinded> AviMarcus: I think a lot of credit unions are starting to roll it out due to the fact that they don't have their own ATMs
22:00 < AAA_awright> wwicks: The Check 21 act
22:00 < devc> node.js and npm are installed - I'm assuming somewhat correctly, though I have to sudo everything which I've always considered not great. I'm on osx running the latest node & npm.
22:00 < livinded> BofA just added support a few months ago, Simple has it, and I think Chase was the first
22:01 < AviMarcus> I thin ingdirect got it because they got bought by capitalone (who bought the service from someone), but capital one itself doesn't have it
22:02 < MI6> joyent/node: Daniel Aquino v0.8 * 8c38ef8 : install: include DESTDIR in npm shebang  Include DESTDIR in the npm sheba - http://git.io/djs-MA
22:02 < wwicks> AAA_awright: The check act of the 21 century make them accept a truncated check- which isn't as simple as saying "an image of a check"…
22:02 < livinded> damnit amazon. Why didn't you ship my new gopro yet!?
22:03 < trevnorris> isaacbw: fwiw i'm trying to run node-profiler on master and it keeps failing with "Error: Symbol profiler_module not found". no idea what it means, but investigating now.
22:03 < AviMarcus> what really worries me though is all these new services that ask for your password and NOT API access to integrate with stuff. I've even seen sites asking for paypal email/password. But since there are "cool" services, people do it since there's no other option to get it, so then it makes them more likely to do it again.
22:03 < isaacbw> trevnorris, have you contacted heroku about it?
22:03 < isaacbw> they might be able to help
22:03 < livinded> AviMarcus: the thing that REALLY need to be disrupted is federated authentication
22:04 < trevnorris> isaacbw: heh? it's a module created by bnoordhuis.
22:04 < isaacbw> oops, I
22:04 < livinded> there are too many different protocols that ALL suck for varrying reasons
22:04 < isaacbw> I'm responding to the wrong thing
22:04 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:04 < livinded> especially oAuth
22:04 < livinded> and SAML
22:05 < isaacbw> it's hardly ubiquitious to be disrupted
22:05 < isaacbw> *ous
22:05 < isaacbw> I actually hate making new accounts for everything
22:05 < isaacbw> mozilla's persona looks neat: http://www.mozilla.org/en-US/persona/about/
22:06 < livinded> I do too. But I hate working with oauth, sample, and all the other crappy implementations
22:06 < livinded> more
22:06 < livinded> especially when everyone implements the spec slightly differently and breaks compatability like with oAuth 1
22:07 < isaacbw> oh wait I'm retarded
22:08 < isaacbw> yea, oauth should be hit over the head and buried
22:08 < trevnorris> piscisaureus_: the all knowing irc said you're the person to ask about some v8 internals.
22:09 <@piscisaureus_> trevnorris: sup?
22:09 < livinded> I worked for a single sign on provider for a while and we had so many exception methods in our app to build slightly varried oauth and saml requests because companies just didn't support the standard correctly
22:09 < trevnorris> piscisaureus_: i'm trying to understand how v8 can allocate memory and assign values for a string. been scouring the source, but still not super familiar with it. any ideas?
22:10 < trevnorris> piscisaureus_: mainly i want to understand how it does it so freakishly fast.
22:10 <@piscisaureus_> trevnorris: v8 does it's own memory management (when it needs memory from the os it uses mmap directly)
22:10 <@piscisaureus_> trevnorris: what exactly is freakishly fast? :-)
22:11 < MI6> joyent/node: Fedor Indutny v0.8 * 7a2ae4c : object_wrap: add missing HandleScope  by Sven Panne's suggestion, see [0] - http://git.io/WoLZ2Q
22:11 <@piscisaureus_> trevnorris: all newly created strings end up in the new space where stuff is just allocated linearly (e.g. everything ends up "after" the previous object was allocated)
22:11 < devc> I feel like I'm missing some primary piece of the puzzle by not being able to get node.io installed, because google's returning nothing and there doesn't' seem to be much discussion surrounding it.
22:12 <@piscisaureus_> trevnorris: when the new space is full it does a garbage collection where all objects that are still reachable in the new space (including strings) are moved to the "old" space and everything else is discarded
22:13 < trevnorris> piscisaureus_: that's the type of behavior I was wondering if we could bring to Buffer to circumvent the edge case I mentioned in GH-4525.
22:13 <@piscisaureus_> trevnorris: when you concatenate two strings it creates a cons string, which is just a reference to the two parts you were concatenating (except if both strings are tiny - then it just allocates a normal string and copies its contents)
22:14 <@piscisaureus_> trevnorris: well, implement garbage collection for buffers :-)
22:15 < trevnorris> piscisaureus_: even for when many small fast buffers point to a pool?
22:15 <@piscisaureus_> trevnorris: although it's not that easy because when you slice() the slice references the same memory as the buffer that was sliced
22:16 <@piscisaureus_> trevnorris: well then you would have sort of the same as what v8 does. Initially allocate memory very naively (in a linear fashion) and garbage collect when the backing store is full\
22:16 <@konobi> piscisaureus_: while we're thinking... any idea why the c++ buffer class never tunes externalmemory down (in the destructor for example)
22:16 <@piscisaureus_> trevnorris: although, v8 makes the assumption that strings can be moved around safely. This is not true for buffers because of how i/o works
22:17 <@piscisaureus_> konobi: euh, it doesn't ? I think it does
22:18 <@konobi> piscisaureus_: as far as i can tell it doesn't
22:18 < trevnorris> piscisaureus_: hm. would it even be suggest-able to have very small buffers live in the v8 global context so they can be handled by its gc. then anything larger would use their own slowbuffer? (i'm just spitballing here)
22:18 <@piscisaureus_> konobi: the destructor calls Buffer::Replace and Replace calls Adjustxyz
22:19 <@piscisaureus_> trevnorris: everything is suggestable but I don't understand what you mean ("live in the global context" ?)
22:21 < wwicks_> CAPS
22:21 < trevnorris> piscisaureus_: um. if I understand correctly slowbuffers allocate their own memory outside of the node instance. so they have to control their own memory usage. but if small buffers were basically a char[] within a function template wouldn't v8's gc handle those?
22:21 <@konobi> piscisaureus_: but the Replace only does that if something non-null is passed in, no?
22:21 < trevnorris> piscisaureus_: mainly I'm trying to understand why I'm able to crash my machine by only persisting a single byte in a buffer bool. like in the script on GH-4525.
22:22 <@piscisaureus_> konobi: no
22:23 <@piscisaureus_> trevnorris: well that's because you make it run out of memory :-)
22:23 <@konobi> piscisaureus_: ah... bah... missed that it was an object member
22:24 < trevnorris> piscisaureus_: but every loop the memory increases by poolSize, not by 1 (which is all i'm persisting)
22:24 <@piscisaureus_> trevnorris: true. So in a way we have a very big "leverage". Your 1 byte ends up taking Buffer.poolSize bytes in memory
22:25 < trevnorris> piscisaureus_: yeah. it's like the pool allocated to `tmp` is freed, but not reused.
22:25 <@piscisaureus_> trevnorris: I agree - it's not great, and I would love to see it improve.
22:25 <@piscisaureus_> trevnorris: I can tell you there is not real solution for it except to implement a "full" garbage collector ...
22:27 <@konobi> actually, iirc there's an efficient algo for dealing with memory pools, the name escapes me right now though
22:29 <@piscisaureus_> well malloc() does a good job by itself
22:29 <@piscisaureus_> it's just hooking it up to v8's gc that gets too expensive
22:35 <@konobi> all i can think of is best-fit
22:36 < Raynos> konobi, jgrugzz_: dominic-tarr/map-reduce 
22:36 < Raynos> https://github.com/rvagg/node-levelup/issues/54#issuecomment-11924748
22:39 < trevnorris> piscisaureus_: sorry, was typing this up real fast. here's what I meant by "live in the global context": https://gist.github.com/4497654
22:42 <@piscisaureus_> trevnorris: well there you are creating a buffer that is backed by stack memory. It's a recipe for disaster.
22:42 <@piscisaureus_> trevnorris: you should try to store some bytes in a smallbuffer and see what happens
22:45 < MartinCleaver> Hi… What does this test for: if (typeof process !== 'undefined' && typeof define === 'undefined') { ?
22:45 < CoverSlide> MartinCleaver: detects if it's being run in node or an amd environment
22:45 < MartinCleaver> in particular, the typeof define?
22:45 < MartinCleaver> oh
22:45 < MartinCleaver> ok, thanks, I'll look that up
22:46 < trevnorris> piscisaureus_: this is where I get confused. isn't the data argument in Buffer::New a const char*?
22:48 < trevnorris> piscisaureus_: then doesn't fast buffer allocate it a similar way as in my snippet? (using SetIndexedPropertiesToExternalArrayData)
22:48 <@piscisaureus_> trevnorris: well, what does that have to do with it?
22:49 <@piscisaureus_> trevnorris: SetIndexProperties just tells v8 where the backing store for your buffer is. It doesn't allocate anything.
22:50 <@piscisaureus_> so when you call SetIndexedPropertiesToExternalArrayData(mem, ...) you tell v8 to read from/write at `mem`
22:50 <@piscisaureus_> which happens to be on the stack
22:50 < jcrugzz_> Raynos: I like where you are going with that. Future of a pure node.js DB. Will be keeping watch
22:52 < samholmes> Are there any Node.js developers out there open to working on a project in exchange for hourly plus vested interest? PM me if you're interested.
22:53 < AAA_awright> samholmes: Like what?
22:55 < niggler> AAA_awright samholmes is looking for a hummer
22:56 < samholmes> PM me for an email to send your resume, and I'll respond with project details shortly.
23:11 < Raynos> jcrugzz: and we also wait for janl to rewrite leveldb in pure js using require("fs")
23:13 < jcrugzz_> Raynos: He's doing that? That is incredible. I want to live in a world of node streams everywhere. 
23:15 < jocafa> does anyone know of a requirejs plugin for stylus?
23:17 < jocafa> actually nm, i'm approaching this specific problem the wrong way
23:24 < MI6> joyent/node: isaacs v0.8 * aa742dd : npm: Upgrade to v1.2.0 - http://git.io/tUkg7w
23:25 < trevnorris> piscisaureus_: thanks for bearing with me. finally successfully traced through the entire slowbuffer creation.
23:25 < trevnorris> (traced as in managed to fully understand each step)
23:27 < dylanweber> Hello?
23:28 < dylanweber> Is anyone there?
23:31 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
23:35 < trevnorris> piscisaureus_: whew, it's really making sense now. thanks. though, is there a brief explanation of what node_isolate is for? (I "understand" them as far as the docs go, but can't find where it's mentioned they can be passed the way they are)
23:36 <@piscisaureus_> trevnorris: that's a master-only thing right.
23:36 <@piscisaureus_> trevnorris: node_isolate is just the v8 "instance" that node uses. If you don't pass it v8 has to look it up from TLS which works too, but it is slower.
23:39 < trevnorris> piscisaureus_: ah, so much simpler when put like that. how did you get this massive knowledge?
23:39 < trevnorris> I mean,  it's easy to find docs on the basics, but things like passing an Isolate don't even show up as a function parameter in the v8-docs.
23:40 <@konobi> where's mscdex when you need him
23:40 <@konobi> trevnorris: piscisaureus_ just dived in and went nuts... we're still concerned about his mental well-being
23:40 <@konobi> =0P
23:41 < trevnorris> lol. well i'm glad you all you are here.
23:42 < trevnorris> konobi: been programming js professionally for a while now and that side of node made easy sense. so decided to jump on the c side.
23:42 < trevnorris> it's been a trip.
23:42 <@konobi> yup, it's also improved a lot from the earlier days
23:45 < MI6> joyent/node: bnoordhuis created branch bert-belder-review-this - http://git.io/uiX1lg
23:48 < reuf> Using express -  need to pass some stuff in this format: ["stuff1", "stuff2", "stuff3"] - i have "stuff*" in req.params.stuff1, req.params.stuff2, etc. - but this doesnt work [req.params.stuff1, req.params.stuff2, req.params.stuff3] - i need to stringy somehow req.params.stuff
23:49 < reuf> how doi do it?
23:50 < draginx> Anyone here have experience with node-soap?
23:51 <@Nexxy> draginx, enough to where I stopped using it
23:51 < draginx> Nexxy: do u know of any better alternatives? :/
23:51 <@Nexxy> yes!
23:52 < reuf> req.params.id.toString() - would this me string value of id?
23:52 <@Nexxy> draginx, https://gist.github.com/1927990
23:52 <@Nexxy> there you go! :P
23:52 < trevnorris> konobi: definitely. part of me want to see it succeed for the sake of it, and the other to spite all my Java friends. =)
23:52 < draginx> o-o wat
23:52 <@Nexxy> lol
23:53 <@Nexxy> DIY type checking and constraints
23:53 < draginx> meh
23:53 <@Nexxy> draginx, do you have a question in particular w/ node-soap?
23:53 < draginx> well its more in lines with FedEx's SOAP API
23:53 < draginx> buuuut
23:54 < draginx> give me like 5 more min to try to figure it out
23:54 < MI6> joyent/node: Ben Noordhuis bert-belder-review-this * bd57256 : typed arrays: fix 32 bit size/index overflow  Fix an out-of-bound read/wr - http://git.io/Z3VQ9Q
23:54 < draginx> if icant then ill paste gist :)
23:58 < MI6> joyent/node: Ben Noordhuis v0.8 * ed825f4 : typed arrays: fix 32 bit size/index overflow  Fix an out-of-bound read/wr - http://git.io/V71aRQ
--- Log closed Thu Jan 10 00:00:55 2013
