--- Log opened Mon Jul 23 00:00:06 2012
00:00 < Ramone> binary data over a text protocol?
00:00 <@maxogden> oh good point
00:02 < Ramone> it actually sounded like it might be doing binary data over text
00:02 < Ramone> maybe base64 encoding or somehitng
00:55 < foxjazz> yow
00:55 < Technodrome> hello 
00:55 < foxjazz> question using nodejs
00:55 < foxjazz> where do you put the .js file
00:56 < foxjazz> when you call it from the console node jsfile.js
00:57 < Technodrome> is geddy the most complete node.js web framework out right now?
00:58 < coderarity> Technodrome, complete? there's a ton of complete web frameworks
00:58 < Technodrome> i mean one of the more *popular* ones etc 
00:59 < ljharb> ive never heard of geddy
00:59 < Technodrome> it seems alot of big sites have been pushing it 
00:59 < billy> express
01:00 < ljharb> express is the one i'd think is the most popular.
01:00 < coderarity> Technodrome, there's flatiron, ecstatic, tower
01:00 < Technodrome> i see
01:00 < Technodrome> sorry very new to node.js
01:00 < coderarity> i mean express
01:00 < coderarity> not ecstatic
01:06 < Guest41315> node is fun
01:08 < Technodrome> seems like geddy is more "the way i already know how to do things" 
01:09 < coderarity> Technodrome, coming from ruby?
01:09 < Technodrome> rails 
01:09 < Technodrome> yep 
01:09 < coderarity> Technodrome, maybe check out tower.js too
01:09 < Technodrome> but i know python well to â€¦
01:10 < Technodrome> its all coffeescript  coderarity
01:10 < ljharb> gross
01:11 < coderarity> oh good point
01:11 < Technodrome> nothing against coffeescript, but i dont really *know* js that well atm 
01:11 < Technodrome> most of it makes sense of course though
01:12 < ljharb> anyone who wants to use coffeescript should absolutely know JS first.
01:14 < coderarity> Technodrome, well, https://github.com/joyent/node/wiki/modules#wiki-web-frameworks
01:14 < Guest41315> anyone who doesnt know javascript should go ahead and skip to coffeescript :p
01:14 < ljharb> that's very poor advice, mr. "i don't have a name" Guest41315
01:16 < Guest41315> i think you could use coffeescript without knowing js
01:16 < ljharb> of course you could. but you shouldn't.
01:16 <@doexxa> you could also use a hammer without knowing how to hit nails
01:16 <@doexxa> but you're gonna break a lot of fingers
01:16 < ljharb> you shouldn't drive a car without a basic understanding of physics and how a car works either, but you could.
01:16 < Guest41315> at which point do you 'know javascript'
01:16 < ljharb> when you don't have to ask that question anymore
01:16 < Guest41315> after you have ported quake3?
01:16 <@doexxa> when you stop asking "how do i make classes"
01:17 < ljharb> also when you stop TRYING TO MAKE CLASSES
01:17 <@doexxa> ^^
01:17 < ljharb> classical inheritance for the lose.
01:17 <@chilts> whilst not defending classical inheritance, all tools have their rightful place
01:17 <@chilts> all depends on what you wanna do :)
01:17 < ljharb> and javascript is not the place for it
01:17 < Guest41315> how do i make classes
01:17 <@doexxa> inheritence in general ftl
01:17 < ljharb> :-)
01:18 < ljharb> doexxa++
01:19 < Guest41315> ive done a lot of javascript and i have never made a class
01:19 < ljharb> thats a good thing
01:19 < ljharb> (seriously tho Guest41315, make yourself a nickname)
01:19 <@maxogden> js prototypes are great if you use them properly
01:20 < ljharb> that is a HUGE if for most all JS devs.
01:20 < Guest41315> i like the idea of coffeescript
01:20 < ljharb> i like the idea of communism. doesn't mean it wasn't a dismal failure.
01:20 < Guest41315> far less code
01:21 < Guest41315> china says not
01:21 <@maxogden> ljharb: if you arent a very experienced developer it is a huge if. i dont think prototypes are poorly designed for what they try to do
01:21 <@chilts> I think saying that you've never made a class tells me you don't like experimenting or finding out for yourself. I'm sure you've used plenty of classes, so no reason for the blanket "I will not make them"
01:22 < ljharb> never making a class in *javascript* is a good thing.
01:22 <@chilts> but you're ok using them?
01:22 < ljharb> in other languages, sure
01:22 < ljharb> but also i'd say if you've never made a class you'll likely write more functional JS code which will thus be cleaner and better overall.
01:22 <@chilts> that wasn't my question. so you don't use any object in JavaScript?
01:23 < ljharb> of course i use objects. but not classes.
01:23 <@maxogden> ljharb: just checking, are you equating prototypes with classes for this discussion?
01:23 < ljharb> i don't use "new" or "this".
01:23 <@chilts> ljharb: so you've never done "new Date()"
01:23 < ljharb> maxogden: hm. "classes" is a tricky word because it's often confused with classical inheritance
01:24 <@maxogden> ljharb: so thats a yes?
01:24 < ljharb> chilts: of course i have, because theres no better option. i guess i should say i don't use "new" or "this" with anything but builtins.
01:24 <@maxogden> ljharb: there are performance reasons for using object prototypes
01:24 <@maxogden> ljharb: and using them doesnt mean you cant write functional code
01:24 < ljharb> maxogden: i like prototypes, and theres definite performance reasons there
01:24 < Guest41315> IVE USED A FUNCTION ONCE
01:24 < jonaslund> hmmm
01:24 < alex4nder> Guest41315: FUCK ME TOO
01:24 < ljharb> maxogden: however if you've ever made a class in another language, you'll very likely not properly use prototypes.
01:24 < Guest41315> IT WAS AWESOME!
01:24 < jonaslund> is there really performance advantages of prototypes ?
01:25 <@maxogden> jonaslund: multiplate instantiations share memory when using prototypes
01:25 <@maxogden> multiple*
01:25 <@maxogden> ljharb: well yea but that is just bad programming
01:25 < ljharb> maxogden: you can use shared memory just fine by passing data into functions instead of calling functions on instances
01:25 < jonaslund> right, but your property access will traverse the property instead of being a "simple" lookup (atleast with "hidden-class" designs like V8)
01:25 < ljharb> my favorite article on this subject is Date.parse(Date.now())
01:26 < ljharb> oops, thats not a link. one sec.
01:26 < jonaslund> traverse the prototype even
01:26 < ljharb> http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html
01:26 <@Hodapp> ljharb: ah yes, I've read that one!
01:26 < ljharb> jonaslund: not if you use Object.create(null) for your hash, if for some obscure reason the lookup latency actually matters.
01:31 < austinbv> Has anyone had anyluck testing frontend js compiled with connect-assets in mocha
01:36 < jonaslund> *ponders*
01:36 < austinbv> ?
01:36 <@doexxa> no pondering
01:36 < jonaslund> actually the property traversal should be around one extra machine level indirection per level so it's not that bad
01:44 < foxjazz> is this the jodejs channel?
01:44 <@doexxa> foxjazz: no
01:44 < foxjazz> that's what I thought
01:44 < foxjazz> its the no nodejs channel
01:44 <@doexxa> no, it's the node.js channel
01:45 <@doexxa> the jodejs channel is over there -> #jodejs
01:45 < austinbv> or can mocha run browser tests so you dont have to have two runners?
01:45 < foxjazz> so where do you put the .js file to run in node.js?
01:46 <@doexxa> foxjazz: wherever you like - but it sounds like you're confused about what node.js is
01:46 < foxjazz> maybe I am. I have it running
01:47 < foxjazz> and when I use node app.js  it just says ....
01:47 <@doexxa> foxjazz: you can compare node.js to a framework such as .net - it's a set of libraries sitting on top of a runtime (in node's case, the v8 javascript runtime)
01:48 < foxjazz> .m @doexxa ok why the ...
01:48 <@doexxa> the `node' application is a program that will execute the javascript file you tell it to
01:48 < foxjazz> @doexxa so your saying it just doesn't work
01:48 <@doexxa> so you would run `$ node some-file.js', and given that some-file.js exists and is filled with delicious javascript code, it will run it
01:49 < foxjazz> I can try that
01:49 <@doexxa> so do you have a file named "app.js"? that's what you're telling node to run
01:50 < foxjazz> yes
01:50 < foxjazz> that seemed to work.
01:50 <@doexxa> hooray!
01:52 < smathy> What a bizarre conversation.
01:54 <@doexxa> smathy: you're a bizarre conversation
01:56 < foxjazz> so I get this error cannot find module 'mongojs'
01:56 < foxjazz> and yet I did install it with npm
02:01 < smathy> doexxa, :)
02:03 < coderarity> foxjazz, install it in the same directory as your app file
02:13 < foxjazz> cool 
02:13 < foxjazz> @coderarity nice
02:14 < Guest41315> foxjazz, just make package.json in your project directory and do npm install .
02:14 < Guest41315> :)
02:40 < austinbv> what is a good way to take the backbone/underscore npm module and include them in the frontend?
02:40 <@maxogden> browserify or just use the normal browser distros
02:40 < ljharb> <script src="backbone.js"> ?
02:41 < zackattack> austinbv:  there isn't a node module that serves it for you like socket.io AFAIK
02:41 < austinbv> that's what I was doing
02:41 < austinbv> I am trying to figure out a clean way to test my frontend js
02:41 < zackattack> what were you doing
02:42 < austinbv> and I am using connect assests to precomile my vendored js for the client
02:42 < austinbv> so I made a little server that runs the mocha browser page but the orgnization is well... awful
02:43 < austinbv> so then I was thinking I could just use the npm modules to unit test a little more in isolation
02:44 < austinbv> but the front-end code relies on jquery-ui which makes it harder to test that way
02:44 <@SubStack> decouple the algorithmic parts from the ui rendering
02:45 < austinbv> they are, the only parts that are about rendering are in backbone views
02:46 < austinbv> so, on rails/jasmine projects (what I have the most experience with) jasmine includes the whole asset pipeline so you say expect(model.something).toEqual(something) without building out this structure
02:46 < austinbv> I am trying to build that same clean structure for node
02:47 < austinbv> maybe a module
02:48 < benvie> how about
02:48 < benvie> what if you could access the DOM from node
02:49 < benvie> like here https://github.com/appjs/appjs/raw/master/examples/chrome-in-node-repl.jpg
02:49 < ljharb> austinbv: unit test your front end code with something like jasmine. use something like selenium if you want to test the whole thing.
02:50 < austinbv> ljharb: I wanted to use just mocha for the whole suite but if that is not possible :/ then jasmine it is
02:50 < austinbv> I am actually trying to convince my work to switch to mocha
02:50 < ljharb> i've never used mocha
02:50 < austinbv> ah :)
02:50 < ljharb> but what i meant was, unit test what you can, and smoke test/selenium test the rest.
02:53 < austinbv> yeah, I think I can test the whole thing jasmine just runs in a browser window so you can use the dom as part of your tests
02:54 < austinbv> like expect($('p')).toHaveClass('hello')
02:55 < ljharb> yes
02:55 < ljharb> except i don't think jasmine has that notation, you'd do expect($('p').hasClass('hello')).toBe(true)
02:56 < austinbv> If you use custom matchers but yeah I get what your saying
02:56 < austinbv> So mocha can do that too
02:57 < ljharb> i think it's better not to use custom matchers myself. it will make your code less readable to other devs who are only familiar with the test suite by itself
02:58 < pepsicola> does anyone here use the monk driver for mongodb?
02:58 < austinbv> true
02:58 < WillMarshall> Hey. I'm trying to set up automatic Coffeescript compilation with a Node.js learning/example app from AngularJS
02:58 < WillMarshall> The instructions provided at https://github.com/TrevorBurnham/connect-assets give me a config option
02:58 < ljharb> ew, coffeescript
02:58 < austinbv> but yeah we use some custom matchers depending on the project
02:58 < WillMarshall> But I have absolutely no fucking idea where the config for a Node app is stored
02:59 < WillMarshall> It doesn't really seem to google
02:59 < austinbv> WillMarshall: in your server
02:59 < WillMarshall> Can anyone point me at it?
02:59 < austinbv> so ljharb here is something similar to the jasmine gem for connect assets https://gist.github.com/3161802
02:59 < austinbv> except it's not including the tests
02:59 < ljharb> config file for a node app?
02:59 < ljharb> i think it's just referring to your server file
02:59 < austinbv> WillMarshall: probably app.js or server.js
03:00 < austinbv> in the root of your probject
03:00 < WillMarshall> This is the app I'm working from: https://github.com/angular/angular-phonecat
03:01 < WillMarshall> I've got a server js in ./scripts/web-server.js, but that doesn't look viable
03:04 < austinbv> can you get the path of a required module?
03:09 <@Nexxy> austinbv, __filename?
03:10 < digitxp> Hey, anyone remember that one templating engine for node that had a syntax involving a `with(html)` statement?
03:11 < ljharb> with? ew
03:11 < ljharb> hopefully none
03:13 < enos_feedler> is it possible to get updates to environment variables from a running node.js process or must I restart it?
03:13 < smathy> You must restart it.
03:18 < prettyrobots> Can anyone recommend an IRC client for iPhone?
03:21 <@gkatsev> colloquy?
03:28 < austinbv> Nexxy: __filename for an inculded module?
03:33 < prettyrobots> gkatsev: Thanks. I'll start there.
04:20 <@Nexxy> austinbv, from within the currently executing module
04:20 <@Nexxy> austinbv, or you can use require.resolve('<module>')
04:39 < wookiehangover> justicefries: ping
04:43 < yanko20> hi can anyone recommend th best ide for node development?
04:43 < covi> Can you guys tell me some sites that are built on or make partial use of node.js? Preferably famous services.
04:52 <@rvagg> covi: probably the largest and heaviest deployment of node is voxer, linkedin also uses it for mobile: http://engineering.linkedin.com/testing/continuous-integration-mobile
04:55 <@rvagg> covi: oh, and walmart, they are pretty famous aren't they? at least their mobile stuff is backed by node
05:03 < covi> rvagg: got it. thx
05:05 < jesusabdullah> nodejitsu runs on the order of thousands of servers running primarily node
05:05 <@chilts> covi: also Yahoo! Mojito, Trello, Yammer, DocumentCloud, LearnBoost, Storify, Applifier - so many to list now it hurts
05:07 < covi> chilts: sounds like it is really robust
05:07 < tomb_> anyone familiar with socket.io around?
05:07 <@jcrew> tomb_: what are you trying to do?
05:08 < clarle> tomb_: I've used it pretty often, what's up?
05:08 < tomb_> I have nothing running on port 8080, but it keeps saying 'warn  - error raised: Error: listen EADDRINUSE'
05:08 < tomb_> then if I change the port to something else it's fine
05:08 < clarle> That means you probably have something running on port 8080. :P
05:08 <@jcrew> tomb_: do a netstat, will tell you what's running on port 8080
05:08 < tomb_> I don't
05:09 < tomb_> I tested by creating a quick node server
05:09 < tomb_> and it ran fine on 8080
05:09 < clarle> ^ what jcrew said
05:10 < tomb_> nothing is running on it
05:10 < tomb_> like I said, I ran a simple http server on 8080 to check and it worked
05:10 < clarle> tomb_: What do you get with `lsof -i TCP:8080`?
05:11 < tomb_> nothing
05:11 < clarle> Huh.
05:11 < tomb_> nothing, blank empty
05:12 < thatguydan> Hey has anybody got any experience scaling socket.io server on heroku?
05:12 < clarle> thatguydan: Heroku doesn't support websockets, so I don't know if I'd use socket.io with it.
05:13 < tomb_> io = require('socket.io').listen(8080) = address in use
05:13 < tomb_> io = require('socket.io').listen(9000) = fine 
05:13 < tomb_> :/
05:13 < tomb_> oh wait
05:13 < thatguydan> you can use it with xhr-polling, went with heroku for business reasons
05:13 < tomb_> it's my fault!
05:13 < clarle> tomb_: Weird. What port is your app running on?
05:13 < clarle> lol, what was the problem?
05:13 < tomb_> the app itself throws something up on 8080
05:13 < tomb_> and I totally forgot
05:14 <@jcrew> lol
05:14 < clarle> haha, no worries, happens to all of us :)
05:14 < thatguydan> has anybody played with heroku + socket.io and the redis session store?
05:14 <@jcrew> is that web scale?
05:17 < sechrist> if you don't need user <-> socket.io
05:17 < sechrist> I mean user to user socket.io* groups of redisstored socket.io servers work
05:17 < sechrist> but the crosstalk on a ton of them is expensive
05:17 < thatguydan> hmm
05:18 < thatguydan> we're using socket.io-client on a little ARM running ubuntu talking to heroku
05:18 < sechrist> mainly because heroku round robins the requests and the same web node isn't getting the same client's xhr
05:18 < thatguydan> yeah noticed that I was getting heaps of client not handshaken, i think the GET/POSTS are mismatched
05:19 < thatguydan> Found this issue: https://github.com/LearnBoost/socket.io/issues/939
05:19 < thatguydan> which seems to suggest that it is impossible
05:19 < thatguydan> or at least right now
05:24 < wookiehangover> thatguydan: trust me, if you want to do websockets, don't do it on AWS
05:25 < wookiehangover> and using the only the fallback is a poor substitute
05:25 < sechrist> what's wrong specifically with AWS? it's more heroku's routing layer that messes with it
05:25 < wookiehangover> sechrist: AWS has connection flakey-ness, in general
05:25 < wookiehangover> but one of the joyent/nodejitsu guys is more qualified to explain in detail
05:25 < sechrist> sounds like FUD
05:26 <@jcrew> FUD?
05:26 < wookiehangover> eh, talk to h1jinx
05:26 < wookiehangover> jcrew: fear, uncertainty and doubt
05:27 < wookiehangover> truth be told, I've been running a socket heavy app on AWS with node and HAproxy for about a year without too many problems
05:27 < wookiehangover> just the occassional handshake that drops and jumps to one of the fallbacks
05:28 < jesusabdullah> I don't have anything particularly bad to say about AWS
05:28 < jesusabdullah> people *say* you get what you pay for
05:28 < jesusabdullah> so to speak
05:28 < jesusabdullah> but I don't know first-hand
05:28 < jesusabdullah> and plenty of people seem happy with AWS
05:29 < wookiehangover> jesusabdullah: the trick is actually picking the right datacenter
05:29 < wookiehangover> us-west/oregon is the way to go
05:29 < thatguydan> wookiehangover: but every bloke and his mum is in virginia
05:30 < thatguydan> if you want to use any managed db services virginia is generally the way to go, unfortunately
05:30 < thatguydan> you know, when there isn't an apocalypse outside
05:30 < wookiehangover> thatguydan: which is why us-east is the one that usually goes down
05:31 < wookiehangover> so pick us-east if you don't mind having to panic & bounce your servers every couple of months
05:34 < jesusabdullah> or have servers in >1 dc
05:34 < thatguydan> true, but only 1 or 2 AZ's ever go down in one hit
05:34 <@owen1> I read Hughes-Croucher slides from his talk at velocity conference - "Using Node.js to improve the performance of Mobile apps and Mobile web".
05:34 <@owen1> can someone explain slide 50 - "Node.js allows you to tune rendering between client and server based on the network - http://www.slideshare.net/sh1mmer/using-nodejs-to-improve-the-performance-of-mobile-apps-and-mobile-web
05:34 < thatguydan> mostly the guys who go down aren't split between them
05:34 <@doexxa> ooh, since when has node been built with gyp by default?
05:35 < jesusabdullah> quite a while I believe
05:35 <@doexxa> neat
05:35 < jesusabdullah> 0.8 first stable
05:35 <@doexxa> i guess i haven't done a fresh install in a while
05:35 <@doexxa> really liking gyp
05:35 <@doexxa> i hope more people pick it up, even outside the node space
05:58 < clarle> What CI tools do people usually use when building Node applications?
05:58 < wookiehangover> travis-ci if its open source
05:58 < clarle> What about not open source?
05:59 < wookiehangover> well travis-ci is oss
06:00 < clarle> I heard travis isn't great for in-house use though.
06:00 < wookiehangover> one could always deploy a private travis-ci server
06:00 < wookiehangover> just use jenkins or something
06:00 < clarle> Yeah, I guess that's the easiest way to go.
06:00 < wookiehangover> https://wiki.jenkins-ci.org/display/JENKINS/NodeJS+Plugin
06:00 < clarle> neat, thanks!
06:00 < wookiehangover> boom, there's a plugin for it
06:01 < wookiehangover> tddium supposedly has node support coming soon
07:04 <@owen1> how to test performance of concurrent file uploads? i use formidable, and uploaded about 800mb of images. is it the same as 800 users uploading 1 image?
07:14 < ljharb> not at all
07:14 < ljharb> you should probably use a load testing service for something like that
07:14 < ljharb> but i'd wait til you have 800 users before you worry about what happens then.
07:15 < Zoney> there are load testing services?
07:15 < ljharb> of course
07:19 < Zoney> can you recommend a good one?
07:20 < ljharb> loadimpact.com is the only one i've heard of, but i'm sure they're all fine
07:24 < [AD]Turbo> hola
07:25 < dthompso99> hah, loadimpact is pretty sweet
07:28 <@owen1> ljharb: Zoney thanks. is there open source load testing i can use?
07:28 < ljharb> load testing is a service. you need hardware, not just software.
07:29 < ljharb> more importantly, if you can't afford to pay for it, it's highly unlikely your service will get that much load anyways.
07:31 <@owen1> ljharb: thanks a lot, i'll bookmark this sit
07:31 <@owen1> e
07:42 < sechrist> I installed xmlhttprequest and wget'd parse.com's javascript api
07:42 < sechrist> works in node, whoamg
07:42 < sechrist> javascript > *
08:03 < fent_> where can i find the 0.6.0 docs?
08:03 < fent_> nevermind found them
08:25 < jacobrask> npm install -d $dir does not seem to install the dependencies in node_modules/module/node_modules
08:25 < npmbro> jacobrask: No results
08:28 < [AD]Turbo> i'm installing node 00.8.3
08:28 < [AD]Turbo> and i'm getting this error:
08:28 < [AD]Turbo>   File "./configure", line 273
08:28 < [AD]Turbo>     o['default_configuration'] = 'Debug' if options.debug else 'Release'
08:28 < [AD]Turbo>                                           ^
08:28 < [AD]Turbo> SyntaxError: invalid syntax
09:06 < Ancien> hello
09:08 < Ancien> i have a problem with ecstatic
09:10 < Ancien> how can i use ecstatic ?
09:10 < coderarity> Ancien, or rather, ecstatic has a problem with you O_o
09:10 < coderarity> Ancien, can you gist your code?
09:10 < Ancien> that's the problem
09:11 < Ancien> i have no idea for use ecstatic for that i want
09:11 < coderarity> Ancien, what's your use case?
09:12 < Ancien> it's for load from an apach server the file socket.io.js
09:13 < coderarity> Ancien, are you using express?
09:13 < Ancien> i have download
09:16 < jesusabdullah> Ancien: socket.io should serve socket.io.js on its own
09:18 < Ancien> I don't really understand
09:20 < `3rdEden> Ancien see https://github.com/LearnBoost/Socket.IO/wiki/How-do-I-serve-the-client
09:21 < `3rdEden> socket.io scan all request that are made to your http server and handles every requests to /socket.io/ so if you request /socket.io/socket.io.js from your server, socket.io will automatically send you the correct socket.io client file
09:27 <@CIA-93> node: koichik reviewme * rbc30c90 / doc/api/cluster.markdown : doc: remove duplicate section (+31 more commits...) - http://git.io/Ou4ToA
09:29 <@CIA-93> node: Bert Belder reviewme * r9174e0c / (lib/fs.js test/simple/test-regress-GH-3739.js): windows: correctly prep long path for fs.exists(Sync) - http://git.io/VlmcJw
09:33 < livinded> building a fairly large realtime HTML5 app over the course of a week while avoiding jquery/cross platform libs was definitely a mistake
09:35 < Ancien> when i put this :<script type="text/javascript" src="http://localhost:8080/socket.io/socket.io.js"></script>
09:35 < Ancien>  in my file it sends hello http
09:37 <@CIA-93> node: Brian White v0.8 * re06b5d7 / lib/http.js : http: remove duplicate assignments - http://git.io/i4nUYQ
09:37 < RLa> livinded, why, expecially about jquery
09:38 < livinded> RLa: why was it a bad idea or what didn't I want to use it?
09:38 < RLa> yeah, why was it a bad idea
09:38 < jesusabdullah> I mean
09:38 < jesusabdullah> your time costs a lot
09:38 < RLa> or did you target all ies since 6?
09:38 < livinded> oh, well certain things are just breaking between browsers
09:38 < jesusabdullah> people tend to undervalue their time
09:39 < livinded> like firefox doesn't support innerText
09:39 < livinded> a lot of the code is really hacky right now because I've just been trying to get functionality working
09:40 < livinded> basically I'm trying to figure out how much more work it is to do stuff with all HTML5 features and how wide of support I can get for normal usage
09:41 < prettyrobots> livinded: Hacky is the nature of code.
09:42 < livinded> I want to start getting away from jQuery, write a replacement for their AJAX api that doesn't depend on the rest of it and figure out what other small bits of it I actually need while still getting decent browser support
09:42 < jesusabdullah> those things already exist
09:42 < livinded> prettyrobots: hacky to the point where I'm afraid it's gonna fall over when I deploy it on friday for 300+ hackers to attack
09:42 < jesusabdullah> like, separated query selecting libraries, dom manipulation libraries, etc
09:42 < jesusabdullah> I think you can find some by looking into enderjs
09:42 < prettyrobots> Ender.
09:43 < jesusabdullah> Not judging ender either way
09:43 < livinded> jesusabdullah: ya, I know some stuff is out there. I kinda wanted to learn more about the underlying stuff for ajax though and how the implementations differ between browsers
09:43 < prettyrobots> Also, look at MicroJS.org to get another view of the bits and pieces.
09:44 < jesusabdullah> oh dang this microjs thing looks sweet
09:44 < livinded> the problem with microjs.org is that most of those libraries are just like jquery but tiny. I don't want massive multifunctional libraries. I want small libraries that do a specific task so I can use a build system to custom build only what I need
09:44 < prettyrobots> Does Jesse James Garrett get a dime everyone says AJAX? 
09:45 < prettyrobots> jesusabdullah: It's a nice contribution to the cause.
09:45 < livinded> and in terms of a selector library I've found that so far just the normal document.querySelector does an amazing job
09:45 < livinded> haven't had a reason to pull in something like sizzle yet
09:45 < prettyrobots> jesusabdullah: I mean, it's a nicely presented directory. I want to get my Timezone library in there.
09:46 < prettyrobots> livinded: From what I saw in MicroJS, there were a lot of single focus libraries.
09:46 < prettyrobots> What are you trying to accomplish by eschewing jQuery?
09:46 < livinded> prettyrobots: there are some. But like all the ajax libraries were all general purpose ones like jquery
09:46 < jesusabdullah> Lots of bathroom sinks though
09:47 < livinded> prettyrobots: reduce footprint
09:47 < livinded> and get native support
09:47 < prettyrobots> That's, funny. I just retweeted this today.
09:48 < prettyrobots> https://twitter.com/trek/status/227082154109186049
09:48 < prettyrobots> I'd marry it, but Twitter won't let me.
09:49 < livinded> a lot of what I'm doing right now is just experimenting with HTML5 support and taking advantage of features for building faster/more featureful apps
09:50 < livinded> and seeing how designing things different ways effects load time, execution time, and performance
09:50 < ljharb> !bloat @prettyrobots
09:50 < ljharb> oh wrong room
09:50 < ljharb> The solution to worrying about JS lib/framework size: include one less .jpg on your site. // https://twitter.com/paul_irish/status/227203681462927361
09:51 < astropirate> Is there a Node.js survery of what platform(OS) developers develope on?
09:51 < ljharb> i'm sure theres somebody using windows, but i'd assume the majority is on mac or linux
09:52 < prettyrobots> https://twitter.com/miketaylr/status/227056824275333120
09:53 < prettyrobots> ljharb: Hah!
09:53 < ljharb> yup, thats the original. i intentionally left paul_irish's retweet URL in the trigger to add credibility.
09:53 < prettyrobots>  I just went off to find the same Tweet.
09:53 < Ancien> <`3rdEden> it's doesn't work
09:53 < `3rdEden> Ancien what exactly doesn't work?
09:54 < Ancien> http://localhost:8080/socket.io-client/dist/socket.io.js send hello http
09:54 < prettyrobots> ljharb: I pasted then scrolled back.
09:55 < Ancien> so http://localhost:8080/socket.io/socket.io.js too
09:55 < `3rdEden> Ancien try: http://localhost:8080/socket.io/socket.io.js
09:55 < livinded> anyway I'm going to bed before I pass out on my keyboard
09:55 < `3rdEden> hmz
09:55 < `3rdEden> Ancien is socket.io listening on your server? Can you gist/paste bin your code?
09:57 < Ancien> actually i'm just testing so my code is a copy of a tutorial
09:57 < Ancien> http://pastebin.com/89hYYtLa
09:59 < `3rdEden> Ancien you don't even have socket.io in that file yet
09:59 < `3rdEden> so it doesn't work
10:02 < Ancien> ok now node.js sends me the good file but i have an other problem
10:02 < Ancien> GET http://localhost/socket.io/1/?t=1343037704066 404 (Not Found)
10:03 < Ancien> and in console : debug - served static content /socket.io.js
10:05 < `3rdEden> Ancien: you are probably connection to the wrong server
10:05 < `3rdEden> as your port 8080 is missing
10:05 < `3rdEden> make sure you do something like io.connet(http://localhost:8080);
10:08 < Ancien> http://localhost:8080 send Hello  http
10:13 < Ancien> <`3rdEden> have you an idea ?
11:22 <@CIA-93> node: Peter Rybin v0.8 * r688859a / src/node.cc : debugger: wake up the event loop when a debugger command is dispatched - http://git.io/Wr7J1A
11:56 <@CIA-93> node: Bert Belder v0.8 * r43a0c88 / (lib/fs.js test/simple/test-regress-GH-3739.js): windows: correctly prep long path for fs.exists(Sync) - http://git.io/UKI2qg
12:11 < standoo> hello
12:13 < standoo> i've been changing the internals of nodejs and added an argument on execution to restrict the filesystem access
12:14 < standoo> is anyone interested and whats the best way to share this?
12:15 < martinrue> standoo: I imagine the best way to share is to stick it up and github, perhaps write about the reasons / benefits and talk about it :)
12:15 < martinrue> also might try Hacker News
12:16 < standoo> thanks
12:16 < standoo> i must say, the source code of nodejs is easy to modify
12:16 < martinrue> I've looked a few times, and felt that I need to understand libuv a little better before trying to make any changes
12:17 < martinrue> how familiar are you with libuv?
12:17 < standoo> not too familiar though
12:18 < standoo> i didn't change any libuv code though
12:18 < standoo> just the node.js source
12:18 < standoo> node.js are like wrappers for libuv? don't you think so?
12:19 < martinrue> I just recall seeing a lot of libuv specific code in the source of node, perhaps I was just focusing on some specific area though
12:20 < standoo> the next thing i'm going to do is trying to integrate zeromq or rabbitmq
12:21 < standoo> the next thing i'm going to do is trying to integrate zeromq or rabbitmq
12:23 < martinrue> standoo: interesting, in what way that makes it preferable to using an npm package for that?
12:24 < standoo> allows different node js process to communicate without explicitly coding it into the js code
12:25 < martinrue> coolâ€¦ I'd like to see more
12:25 < standoo> yeah
12:26 < standoo> would make it much easier to build a network of node processes
12:27 < standoo> eg. shared hosting, load balancing, process monitoring
12:29 < wiherek> Hi, is there some standard recommended geolocation library for node?
12:54 < __Pepr> hi everyone, does anyone know if there is still a ppc for my mac 10.5 build of node around? I have been trying to compile it from sources but ppc mac is no longer supported. Thoughts?
13:19 < wiherek> node.js
13:19 < wiherek> how do I pass arguments to a callback function?
13:19 < RLa> as usual
13:19 < RLa> hm, actually not
13:20 < RLa> you can't, you can only use variables in the current scope
13:21 <@stutter_> wiherek: callback(arg1,arg2,arg3,arg4) etc
13:21 < wiherek> not when defining the callback, but when referencing it
13:22 <@stutter_> yesâ€¦ so your function doStuff(someArg, callback) { /* do stuff */ callback(someResponse); }
13:22 < wiherek> no..
13:22 <@stutter_> then be more clear
13:23 < wiherek> ok
13:23 < wiherek> navigator.geolocation.getCurrentPosition(showPosition);
13:24 < wiherek> showPosition is the callback
13:24 < wiherek> its defined elsewhere - and that works fine
13:24 <@stutter_> uh huh
13:24 < wiherek> how can I specify an argument to pass to showPosition?
13:25 <@stutter_> you'd have to wrap it
13:25 < wiherek> yea
13:25 <@stutter_> navigator.geolocation.,getCurrentPosition(function() { showPosition(myArg, [other args]); });
13:26 <@stutter_> you might also think about using .apply in ordeer to call showposition with a dynamic number of arguments that the method might be sending back
13:27 <@iksik>  /wii wiherek 
13:27 <@iksik> ups
13:27 <@iksik> -_-
13:27 < purr> iksik: à² _à²  is an IRC client/IRC client framework.
13:28 <@iksik> o.O
13:28 < SomeoneWeird> à² .à² 
13:32 < SomeoneWeird> also, seeing as most other yubikey libraries are broken -> https://github.com/SomeoneWeird/yubinode
13:33 <@stutter_> you down with otp?
13:33 < SomeoneWeird> hm?
13:33 < Guest41315> http://adtmag.com/Articles/2012/07/13/Report-Says-Agile-a-Scam.aspx
13:33 <@stutter_> it's a song,
13:33 <@stutter_> but it's actually 'opp'
13:33  * SomeoneWeird probably too young to know
13:34 <@stutter_> haha
13:34 <@doexxa> YEAH YOU KNOW ME
13:35 <@stutter_> allow me to enlighten you: http://www.youtube.com/watch?v=uFTBG1sae0M
13:36 < SomeoneWeird> lol
13:36 <@stutter_> there's no room for relationships, there's just room to hit it.
13:37 <@stutter_> if you're really too young to knowâ€¦i'm getting old
13:37 <@stutter_> ):
13:38 <@doexxa> stutter_: but 1995 was only 5... 10... oh dear.
13:39 <@stutter_> heh
13:40 < SomeoneWeird> lol
13:40 < RLa> Guest41315, how big those teams were? development in too large teams still sucks? news?
13:40 < SomeoneWeird> 1995
13:40 < SomeoneWeird> i wasnt even born
13:40 < SomeoneWeird> x.X
13:40 <@doexxa> ._.
13:40 <@stutter_> shut up
13:40 <@stutter_> realy?
13:40 <@stutter_> really*
13:40 < SomeoneWeird> realllyyyy
13:40 < SomeoneWeird> just turned 16
13:40 <@doexxa> i was at least in first grade at that point
13:40 <@SubStack> big teams build big apps
13:40 <@stutter_> phew, 1996
13:40 <@SubStack> big apps are bad
13:41 < SomeoneWeird> yerp
13:41 <@stutter_> shoot
13:41 <@stutter_> 1996
13:41 <@stutter_> i was in middle school
13:41 < SomeoneWeird> lmao
13:41 < SomeoneWeird> wow
13:41 <@doexxa> SubStack: so the optimal number of programmers is 0, yes?
13:41 <@SubStack> yes
13:42 <@doexxa> larger team = bad -> smaller team = better -> smallest team = best
13:42 <@SubStack> 0 programmers mean the system is running itself
13:42 <@doexxa> this is true
13:42 <@SubStack> unfortunately it takes >0 programmers to get to that state
13:42 < Guest41315> ITS NOT JSUTwow my fucking synergy>>ok caps lock is on
13:42 <@doexxa> pretty sure that's what ends up getting us into a whole heap of trouble with that whole singularity thing
13:42 < SomeoneWeird> lol
13:43 < Guest41315> ITS NOT JUST developers...you need designers
13:43 < SomeoneWeird> lol
13:43 < Guest41315> you know....software engineers
13:43 < RLa> you might need a lot people but all of them have to communicate and that's where time goes
13:43 < Guest41315> no
13:44 < Guest41315> you get a requirements specification document
13:44 < RLa> out of thin air?
13:44 < Guest41315> you write one...
13:44 < Guest41315> and then you revise it, and when it is good enough for the client / boss
13:44 < Guest41315> then you do a design specification
13:44 < Guest41315> then when its all fleshed out
13:44 < Guest41315> all you do is send it to code monkeys
13:45 < RLa> and what if code monkeys find inconsistent requirements
13:45 < RLa> then you go back to step 1? :)
13:46 < Guest41315> they wont
13:46 < Guest41315> QA will
13:47 < Guest41315> plus you know...you can build mini applications as long as there is an efficient design that lets you glue them all together
13:50 <@gildean> if anyone is interested, i wrote a blogpost about deploying apps to nodester:
13:51 <@gildean> http://toomanymangos.nodester.com/posts/500d1ec1a32b32c745000001
13:52 < Guest41315> you wrote blogspot!
13:53 < TehShrike> No I didn't
13:53 < TehShrike> I would never
13:53 < Guest41315> everyone and their dog has used mongodb....i have yet to find a use for it :)
13:53 < TehShrike> lol
13:54 < TehShrike> I haven't used it yet :-P
13:54 < Guest41315> i could store fibonnaci server output!
13:54 < TehShrike> I haven't used any key-value store yet...
13:55 < RLa> gildean, they host mongo too?
13:56 <@gildean> RLa: read the post and you'll know
13:56 <@jcrew> Guest41315: i use it for data warehousing
13:57 < RLa> oh, you use mongolabs
13:57 < RLa> btw, is your own blog itself running there?
13:59 <@gildean> yes
13:59 < Guest41315> its running on nodester
13:59 < Guest41315> i dont think he has ever heard of openshift express
14:01 <@gildean> Guest41315: can you get mongo 2.2 there?
14:01 < Guest41315> i dont use mongo
14:02 <@gildean> so why the whining then?
14:02 < RLa> isn't openshift a java thing?
14:02 < Guest41315> where do you see whining?
14:04 < Guest41315> RLa, ive never used it for java
14:05 < RLa> how a gear compares to a small vps instance (256MB ram)?
14:06 < Guest41315> fuck if i know...all i know is that it has worked for everything i have attempted
14:07 < RLa> hm, price is pretty hard to calculate then
14:07 < Guest41315> o i use the free
14:08 < Guest41315> the free only has 3 instances now.....so it might be a little tight using it for just fun stuff
14:08 < Guest41315> if you ask them they will probably give you more free gears though
14:16 < standoo> Guest41315: "you can build mini applications as long as there is an efficient design that lets you glue them all together" <- I agree with this statement too well
14:17 < Guest41315> git and json can help with that
14:36 < standoo> Guest41315: I understood the statement differently
14:40 <@doexxa> sooo, chrome's new packaged app thing
14:40 <@doexxa> looks like appjs
14:40 <@doexxa> except from the opposite direction
14:41 < Guest41315> anyone used amazon ec2 micro
14:41 < Guest41315> free tier
14:41 < brianc> Guest41315: me
14:43 < Guest41315> brianc, so...what do i need to watch out for so i dont get charged?
14:43 < Guest41315> or if im using micro and ubuntu 12.04...am i safe even if i use 2.0 load?
14:43 < Guest41315> or something
14:45 < brianc> Guest41315: i have no idea. the charge is so low (<15 a month) I don't really notice it
14:46 < Guest41315> charge???  what are you getting charged for
14:46 < mickhansen> I got charged a few cents when compiling node.js on micro
14:46 < Guest41315> omg
14:46 < Guest41315> how does that work...
14:47 < Guest41315> how do they charge you for compiling on a free tier, i dont get it...maybe i just shut it down before i actually 'USE' it and get charged
14:47 < mickhansen> No idea, but i did get charged a little - and that was all i really did on that sever.
14:47 < mickhansen> Didn't really care, its 6 cents :D
14:47 < Guest41315> im not sure how that is free
14:49 < Guest41315> now im scared to use it
14:49 < Guest41315> 6 cents could just as easily be 3000 dollars if you wake up after a week of binge drinking
14:49 < mickhansen> certainly could
14:50 < mickhansen> but you can monitor what kind of bill your racking up
14:50 < Guest41315> i wanted it to be free and safe
14:50 < Alm-> The 6 cents is just for confirming your credit card if I remember correctly
14:51 < mickhansen> Ah
14:51 < Guest41315> throttled not allowed to run free and wrack up bills
14:51 < mickhansen> well that would certainly explain it too
14:51 < Guest41315> it was a 1 dollar charge to confirm
14:52 < Alm-> Ah okay, I had node.js running on a micro instance for like 4 weeks without getting charged more than something like 6 cents
14:52 < mickhansen> Yea same for me, they might have changed that since
14:52 < mickhansen> while back i tried it out
14:53 < Alm-> I did it in jan-feb this year so yeah it could have been changed
14:53 < Guest41315> uggh
14:53 < Guest41315> this is trash for a 'free' service
14:53 < Guest41315> they design it so that you could easily go over and get charged
14:53 < Guest41315> goodbye amazon!
14:53 < mickhansen> Not really with a micro server
14:53 < Alm-> No not really
14:53 < Guest41315> http://aws.amazon.com/free/faqs/
14:54 < Guest41315> if you go over on any of those you get charged
14:54 < mickhansen> Free usage tier covers you pretty well the first year
14:54 < Alm-> yeah exactly
14:54 < mickhansen> well, most of those are with other services than EC2
14:54 < mickhansen> since 750 hours > more than there are in a month
14:54 < mickhansen> so impossible to get charged for useage
14:54 < mickhansen> unless you launch two instances i guess
14:54 < Guest41315> even at 2.0 load?
14:55 < mickhansen> You even sure you can get that reliably?
14:55 < mickhansen> CPU useage on micro is very limited afaik
14:55 < Guest41315> 15gb bandwidth
14:55 < Guest41315> i probably already used that
14:55 < Guest41315> anyway thanks a lot guys
14:55 < mickhansen> You used 15gb bandwidth and you're complaining that it isnt free? :)
14:56 < mickhansen> either way
14:56 < Guest41315> heh, there are other free services that arent a trap
14:56 < mickhansen> you can inspect your useage under account activity
14:56 < mickhansen> There is?
14:56 < Alm-> Amazon is far from a trap, their pricing is however not that easy to understand ;) 
14:56 < mickhansen> Ultimately they all want to convert you to a real customer
14:57 < Guest41315> im a real customer with linode
14:58 < mickhansen> Amazon has pricing alerts, and a very detailed day-to-day billing/usage. 
14:58 < Alm-> Linode is good as well, I use that for several applications and it's easy to understand the pricing
14:59 < mickhansen> Yeah pricing seems to be more straight forward
15:00 < Alm-> But you don't really get the same scaling capabilities as ec2
15:00 < Alm-> since it's VPS
15:00 < Guest41315> wasnt planning on scaling the free tier :p
15:02 <@tbranyen> 000000000/win 16
15:05 < Guest41315> compiling node :p
15:07 < Guest41315> EC2 is VERY SLOW
15:12 < Guest41315> ok i am running ubuntu, so im not sure i can blame all the slowness on ec2
15:12 <@jcrew> run google os
15:13 <@yorick> oh dear, I'm getting a segmentation fault
15:13 <@yorick> without any native modules loaded
15:13 < Guest41315> yorick, congrats
15:13 <@yorick> maybe it's node 0.8.3
15:14 <@yorick> there's an upgrade
15:14  * yorick upgrades
15:14 < Guest41315> nvm install v0.6.17
15:14 < Guest41315> thats the upgrade
15:23 < Lauren> mikeal, what's the best way to use couchdb from node?
15:24 < Lauren> should I use a couchdb library made for node?
15:25 <@tbranyen> i liked nano
15:26 <@tbranyen> glad i could help!
15:27 < cooksonl> Is anyone with a local npm registry having problems with authentication in the last 2 weeks?
15:30 < revnoah> Has anyone here used jquery file upload by blueimp with node.js? I'm a bit concerned about running uploads as a separate service but I really want all the features (drag and drop, thumbnail previews, multiple uploads, etc). The other options I see people using are formidable and multipart.
15:30 < jroes> anyone know how to assert that a particular template is being rendered with supertest/express?
15:30 < felixge> revnoah: we'll support blueimp's plugin with transloadit soon
15:32 <@yorick> found problem, was using old bcrypt :)
15:33 < beeviiz> anyone here using grunt? is there a way to tell grunt to put a comment with the filename as comment in front of the filename when I concat files?
15:33 < beeviiz> e.g: if have concat: { src: ['a.js', 'b.js'], dest: 'file.js'] } 
15:33 < beeviiz> then i want my file.js to look like this:   /* a.js */ Content of file a.js /* b.js */ content of file b.js
15:34 < revnoah> felixge, that's pretty cool and we'll keep that in mind. we've been talking about offloading file management in the future. I suppose that since you're looking to support it, then there is enough of a gap with what formidable is capable of?
15:36 < caasiHuang> does anyone know any distributed objects lib in js?
15:37 < RLa> things like dnode etc?
15:37 < RLa> and hook.io
15:41 < jibay> Hi all, I'm looking for a solution which provides a mail server (only to receive e-mails), with an unlimited number of e-mail accounts. One main feature should be that received e-mails can be accessed via an API.
15:42 < caasiHuang> hook.io looks interesting, thank you, RLa!
15:43 <@owen1> is there an advantage of using node to interact with mobile clients?
15:44 < RLa> jibay, why not usual mail server?
15:44 <@owen1> (over non-node solutions)
15:44 < RLa> by API you mean http api or something more generic?
15:45 < jibay> RLA: no matter but i prefer HTTP API
15:45 < RLa> usual mail server mail boxes could be accessed through pop3 or imap
15:46 < RLa> there's also Haraka, a mail server written in js
15:48 < jibay> Rla: thanks i'm looking on github
16:09 < prettyrobots> Good afternoon.
16:27 < jerrysv> `3rdEden: congrats!
16:28 < jrivhall_> anyone have trouble with getting undefined variables in callbacks? I'll try to access a local variable in a callback and always get undefined
16:29 < context> jrivhall_: the callback is not getting called in the context you expect ?
16:30 < prettyrobots> jrivhall_: Make a gist if you can.
16:31 < jrivhall_> yea context
16:31 < jrivhall_> let me make a quick example
16:31 <@CIA-93> node: Timothy J Fontaine master * r19d43f8 / (4 files): export HandleWrap Unref Ref in tcp/udp/timer/pipe - http://git.io/-yzlXg
16:31 <@CIA-93> node: Timothy J Fontaine master * r2637b5c / (lib/dgram.js lib/net.js): ref/unref for net.Socket net.Server dgram.Socket - http://git.io/Rp2EEg
16:31 <@CIA-93> node: Timothy J Fontaine master * rcd6122e / lib/timers.js : add ref/unref to setTimeout timers - http://git.io/p_RUAw
16:31 <@CIA-93> node: Timothy J Fontaine master * rbdd1a74 / (3 files): add docs for socket/server/timer unref and ref - http://git.io/dkBYNw
16:31 <@CIA-93> node: Timothy J Fontaine master * r77945d7 / (5 files): add unref/ref tests for socket/server/timers - http://git.io/ZYDisQ
16:33 < jrivhall_> http://hastebin.com/tewadunabe.vhdl
16:33 < jrivhall_> like that
16:34 <@CIA-93> node: Bert Belder master * rfebffc1 / (5 files in 4 dirs): Merge branch 'v0.8' (+12 more commits...) - http://git.io/11-A6w
16:36 < jrivhall_> Nevermind, it's working now... that's weird.
16:38 < jroes> what's the best way to inject a middleware into the beginning of express' stack?
16:38 < jroes> from the outside, that is
16:56 < jroes> nevermind, found app.stack.unshift :)
16:59 <@tuhoojabotti> noo
16:59 <@tuhoojabotti> oh
16:59 <@tuhoojabotti> I still have ops
17:04 < cronopio> nebiros: ey man, dame el op pues
17:10 < level09> is there a good framework to do comand line tasks in node ? 
17:11 < DTrejo> what kind of tasks?
17:12 < clarle> level09: child_process.exec?
17:12 < level09> DTrejo: like system administration, copying uploading, scp, file conversions etc ..
17:12 < level09> clarle: I used that actually, but I thought maybe there is a better module / framework
17:13 < DTrejo> if you want something that general, child_process
17:13 < level09> to handle errors, retries etc ..
17:13 < DTrejo> yea pretty much need to hand=roll
17:15 < level09> is it better to use bash commands vs node api 
17:15 < context> level09: why use node if you are just gonna use bash?
17:15 < level09> because js programming is slightly easier 
17:15 < context> level09: and generally speaking, no. you dont want to be forking hundreds of bash processes for something you can do in process
17:16 < level09> node has some very nice and easy to use APIs
17:16 < context> so use them ?
17:16 < level09> especially like fs where you can watch directories
17:17 < context> i am aware
17:17 < level09> but in my app, I need to watch a directory and then convert it using avconv
17:17 < level09> so I'm thinking of just sending a command through bash vs using node ffmpeg module 
17:17 < context> well im assuming you cant do avconv in process... so you kind of need to call out to execute it....
17:18 < level09> is there a good queue system for node 
17:18 < context> level09: there is a big difference between "calling out to bash" and "learning how ffmpeg and video transcoding works just to process these videos im downloading"
17:19 < level09> context: yes, I've got no problems with the transcodind and ffmpeg api, my concern is about effectively executing the command, and handling errors when/if they are returned
17:19 < level09> in other words
17:19 < level09> I was looking for fabric equivalent in node
17:19 < level09> fabric is a python framework for remote adminstration
17:21 < context> you could use something like dnode i imagine
17:21 < DTrejo> are you building chef in node?
17:21 < context> i dont know of anything that already exists though
17:21 < level09> well, that would be nice to have DTrejo 
17:21 < context> dtrejo: id wonder why its being recreated
17:21 < motiooon_> is there a known way in express to read authorization headers and to base64 decode  for a basic auth, or in node in general ?
17:22 < level09> I think each language should have that kind of fraemwork
17:22 < context> rewriting all your recipes to js? that'd kind of suck
17:22 < level09> you will always need to interact with ssh and the os
17:22 < DTrejo> Buffer.toString("base64") and kind
17:22 < deedubs> level09: I agree
17:23 < prettyrobots> level09: I agree.
17:23 < level09> :D
17:23 < context> level09: HTTPS and REST interfaces could be used just as well.
17:23 < prettyrobots> Keep reimplementing. I hate the "duplicated effort" argument against open source innovation.
17:24 < prettyrobots> A server configuration library is a long, long path. By the time you've walked it, you'll have something unique and innovative.
17:25 < alex4nder> prettyrobots: or a complete NIH construction
17:25 < prettyrobots> alex4nder: Where is "here" in open source?
17:25 < deedubs> level09: I've been putting a lot of thought into a chef like system leveraging node to do realtime system re-config and manipulation.  Would be open to talk more
17:26 < alex4nder> prettyrobots: the culture that you based whatever you built, on.  (see unix)
17:26 < level09> deedubs: I haven't used chef actually, most my dev was on fabric and I used to communicate with a node server in case I needed 
17:28 < prettyrobots> alex4nder: Um, oh, so I'm supposed to use one of the find Windows configuration management systems. I get it.
17:29 < alex4nder> cool strawman.
17:29 < prettyrobots> You haven't actually made an argument, so...
17:29 < alex4nder> yah, I wasn't arguing.
17:30 < alex4nder> but I like the straw man you were starting to put together.
17:30 < prettyrobots> alex4nder: You are arguing, just very poorly.
17:30 < alex4nder> haha
17:30 < prettyrobots> deedubs: I use Node.js ot interact with AWS. https://github.com/bigeasy/node-ec2
17:31 < prettyrobots> And I'm starting to use it more to replace Bash.
17:31 < prettyrobots> I don't use Chef nor Puppet because they can't support SELinux.
17:32 < prettyrobots> I'm working on an IPC comfort library that makes it easier to work with programs the way Bash does. I'm using Node.js for a lot of configuration management stuff.
17:32 < ashb> prettyrobots: "can't" seems like a stretch
17:32 < level09> bash is not prodtive-friendly
17:32 < level09> *productive
17:32 < level09> just like objective-c :D
17:33 < prettyrobots> Oh, I find Bash to be very, very productive for a lot of tasks.
17:34 < prettyrobots> ashb: Uh, yeah, you're right, there was no obvoius support in there for updating policies and whatnot, so it wasn't working out with SELinux for me.
17:35 < ashb> prettyrobots: i was just saying "doesn't currently" != "can't"
17:36 < prettyrobots> ashb: Actually, I don't see it coming. People are just not interested in it.
17:36 < drudge> tjholowaychuk: is there a way to send a custom view on 403?
17:37 < tjholowaychuk> drudge yup if you define the error handler and check
17:37 < tjholowaychuk> err.status == 403
17:37 < drudge> tjholowaychuk: define an error handler == app.error?
17:38 < tjholowaychuk> https://github.com/visionmedia/express/wiki/Migrating-from-2.x-to-3.x
17:38 < tjholowaychuk> at the bottom
17:38 < jroes> tjholowaychuk: if I made a pull request to supertest that hooks up an assertion/expectation for res.render calls, would you merge it?
17:38 < tjholowaychuk> app.error was just some lame sugar thing
17:38 < tjholowaychuk> jroes not sure what you mean
17:39 < jroes> tjholowaychuk: I'd like to be able to say something like res.should.render('widgets/show') in my controller tests
17:39 < jroes> I'm hooking into the express middleware stack right now in my tests, but it might make sense to send over to supertest
17:39 < tjholowaychuk> IMO just test against fixtures
17:40 < tjholowaychuk> something like
17:40 < tjholowaychuk> request(app).expect(fixture)
17:40 < tjholowaychuk> request(app).expect(fixture('page.html'))
17:40 < tjholowaychuk> sure you could complicate it a lot with weird method wrapping etc but why bother
17:40 < tjholowaychuk> besides, checking that something was called doesn't verify the actual result
17:42 < jroes> well, I think the issue with that strategy would be when the view templates change, right?
17:42 < drudge> tjholowaychuk: sho should i be nexting an error and not res.send(403) ?
17:43 < tjholowaychuk> jroes that's the point of tests though
17:43 < tjholowaychuk> if you change the result, you change the test
17:43 < tjholowaychuk> drudge yeah to delegate, res.send(code) will just respond immediately
17:44 < tjholowaychuk> it's the same as res.send(code, body)  but the body is http.STATUS_CODES[code]
17:44 < jroes> sure. I didn't realize many people took that approach. I usually leave view content out of most of my testing since it changes too regularly and I don't get a lot of value from it
17:44 < tjholowaychuk> jroes it's definitely up to you but personally I never check that a method was called
17:45 < tjholowaychuk> that doesn't tell me much
17:45 < jroes> ah -- well I didn't give my better example :)
17:45 < jroes> I want to verify that my template got passed the right attrs as well
17:45 < jroes> so if the controller had to hit mongo and pull back some objs, then pass those to the template, I want to verify that the right objs got passed to the template
17:46 < tjholowaychuk> IMO that's still irrelevant since it's what you DO with that data that matters
17:46 < tjholowaychuk> i try to test things like the end dev/user would use them
17:46 < tjholowaychuk> not get into implementation details
17:48 < gkatsev> if I just want to run a shell command from node, should I use child_process.spawn or child_process.exec?
17:48 < jroes> hmm. I was thinking of a test like "the widgets controller show route should show active widgets" = res.should.render('show', {widgets: activeWidgets}); where I've defined activeWidgets previously
17:49 < tjholowaychuk> yeah you could i guess but i wouldn't rely on that
17:49 < jroes> I understand your approach from a whole-system integration test perspective, but I'm thinking about unit tests
17:49 < tjholowaychuk> it still doesn't tell you that your template is correct
17:49 < tjholowaychuk> that's the important part
17:49 < tjholowaychuk> what data you pass in doesn't really matter
17:49 < jroes> yeah, it doesn't. but in a unit test for the controller, I've tested up to the end of its responsibility
17:50 < jroes> anyway, no prob! I can definitely separate it from supertest. good to understand what your thoughts were though. thanks!
17:51 < tjholowaychuk> cool cool. i dont think it would fit too well in supertest since it's not coupled with express in any way
17:51 < tjholowaychuk> just regular http that's it
17:51 < jroes> ah yeah, definitely makes sense for that reason too
17:51 < iwoj> any recommendations for good e-commerce apis?
17:51 < iwoj> JS-based
17:52 < distracteddev> level09: This might work for you: https://github.com/flatiron/neuron
17:52 < samholmes> Anyone have or know of any good modules that convert youtube and vimeo links to the embed code?
17:53 < level09> distracteddev: thanks, will have a look 
18:15 < benvie> what if you could have both direct access to objects in the browser and be able to server http requests to that browser at the same time
18:15 < benvie> sounds like that'd be useful for that kind of testing ;)
18:28 < distracteddev> Building a simple comments module, and I was hoping I could get anyone's thoughts regarding allowing annonymous comments and/or requiring an email address to comment. Trying to balance avoiding spam with also a low barrier to entry
18:28 < adrianF> maybe a captcha
18:29 <@gildean> check how i did it: http://toomanymangos.nodester.com/posts/500d1ec1a32b32c745000001
18:29 <@gildean> just made the blog
18:32 < distracteddev> gildean: Not sure how you want me to slide to submit on a desktop?
18:32 < distracteddev> gildean: And also, why not just enable markdown instead of all that silly GUI formatting?
18:32 < distracteddev> (assuming your target is devs/computer savy)
18:35 <@gildean> distracteddev: nah, it was easier to drop in a snippet i had, also the slider appears once you've enterd something in the fields
18:36 < distracteddev> gildean: Ahh okay.
18:36 < distracteddev> I always hated giving my email to comment forms
18:37 <@gildean> so enter a fake one
18:38 <@gildean> it doesn't even have to be an email, you can just tamper the fields and remove all restrictions anyways
18:38 <@gildean> there isn't even any kind of validation besides that
18:39 <@gildean> but an ip is logged always
18:39 < myf> hi, if anyone can tell me how Fibers handle async calls that'd be great
18:40 <@gildean> distracteddev: but there is a hidden field that most bots will populate, which disables submit
18:41 <@gildean> or not disable, but the submit action is canceled
18:44 < adrianF> gildean: why should a bot populate hidden fields?
18:45 < jocafa> all the cool bots are doing it
18:45 < blazes816> adrianF: many times (at least back in the day, i'd imagine they're smarter), you could make a hidden input called "address" or something, and a bot would fill it out along with all the other (what it thinks are) required fields in the form.
18:45 < blazes816> it's a crude method of detecting bots from humans
18:46 < adrianF> ok just think about what i would do if a am a bot ;)
18:46 < blazes816> whatever you were programmed to?  which is probably cram valid looking values into forms
18:46 < blazes816> or folding laundry
18:47 <@gildean> adrianF: also if you set the field required, it's usually populated
18:52 < adrianF> some database cracks in here? ;)
18:54 < adrianF> looking for a good nodejs solution for storing associated data for sth like a food delivery page
18:54 < ljharb> it's pretty simple to add jquery to the page with your simple javascript-comprehending bot and filter your form inputs by $(':input:visible'). I don't think blaz honeypots are that effective any more.
18:56 < adrianF> users can make valuations for products and i need some queries for getting all valuations from a single user, or for a single product (to compare the shops), or all valuations for a single shop
18:56 < blazes816> ljharb: definitely.  it's a dated strategy
18:57 < adrianF> so the model sounds very relational
18:57 < adrianF> but i'd like to use a nosql solution, maybe a graph database
18:58 < duko> I've been using uglify-js for my projects but its output is causing errors in a new project that I am working on
18:58 < adrianF> is nosql performance better than rdbms performance for such a use-case?
18:58 < duko> would someone here suggest an alternative to uglify-js?
18:58 < blazes816> adrianF: nosql doesn't mean any one thing
18:58 < blazes816> adrianF: for example, document DBs are non-relational, and graph DBs are extremely relational
18:59 < blazes816> and performance depends on the specific DB you use
18:59 <@Hodapp> it means pissing off a lot of SQL folks, which is its own reward
18:59 < adrianF> ok
18:59 < adrianF> i had a look at couchdb as a pure document db
18:59 < adrianF> and neo4j as pure graph db
18:59 < blazes816> adrianF: if your data is relational, don't use a document or object DB.
18:59 < adrianF> but orientDb and arango as sth between this also sounds good
19:00 < blazes816> adrianF: I like neo a lot, but don't use it unless you need it.  if you can get by with a standard rdb do it
19:00 < blazes816> in my experience it's much slower
19:01 < adrianF> so a rdb solution is faster for a model like this?
19:01 < blazes816> adrianF: I'd say probably
19:01 < adrianF> i thought traversal might be faster than joining tables
19:01 < blazes816> can't know for sure without benchmarking
19:02 < blazes816> you might be surprised
19:02 < adrianF> you already used neo4j in a nodejs project?
19:02 < blazes816> it's pretty fast, but we often cache our neo queries into another db
19:03 < blazes816> adrianF: not node.  i'm branch new to node.  we use it with ruby/python/perl a lot at work.
19:03 < blazes816> and I use it in ruby in my spare time.  but looking forward to trying it out in node!
19:03 < adrianF> using the rest api?
19:03 < kinginky> anyone have any experience with the module 'async'?
19:03 < kinginky> i'm using an async queue and it's acting really odd.
19:04 < blazes816> adrianF: rest api on python and perl.  for ruby we use jruby and the embedded neo4j.  aww yeah
19:04 < kinginky> https://gist.github.com/3165466
19:04 < blazes816> adrianF: don't brush off rdbms' just because nosql is the new sexy thing
19:05 < adrianF> :D
19:05 < kinginky> this is the file in question
19:05 < adrianF> working with couchdb is such a fun ;)
19:05 < jt2190> adrianF, blazes816: You've reminded me of this rule: http://catb.org/~esr/writings/taoup/html/ch01s06.html#rule5
19:05 < kinginky> i think the issue has something to do with how i'm doing my classes, because if i move the async.queue() declaration to different places, it'll sometimes half-work
19:06 < blazes816> often they're not the best choice, but ever since mongo and couch blew up it's like all the work on DBs over the past decades went away :(
19:06 < blazes816> jt2190: that's wonderful!  reading the rest...
19:06 < jt2190> adrianF, blazes816: In short: Use the data structure that best fits the data
19:07 < adrianF> i feared that, hoping someone saying use that nosql solution that fits perfectly ;)
19:09 < blazes816> adrianF: play with neo and see what you think.  then determine if the hyper-relationality is worth it
19:10 < Chatterbox> Hi all
19:11 < Chatterbox> I am rather new to node.js, and I was trying to test mozilla's BrowserQuest
19:11 < Chatterbox> I managed to install all the modules needed, except websocket
19:11 < Chatterbox> This is the error I get:
19:11 < Chatterbox> http://www.pasteall.org/33979
19:11 < Chatterbox> I don't know what the problem may be
19:12 < Chatterbox> I wondered if someone could help me
19:12 < adrianF> blazes816: yes i definitly will have a look, thx for your infos
19:14 < kinginky> Chatterbox: why run npm as sudo
19:15 < Chatterbox> I read it in:
19:15 < Chatterbox> man npm
19:15 < kinginky> hm
19:15 < kinginky> i'm trying to remember if i have to use sudo
19:15 < kinginky> i dont think i do
19:15 < Chatterbox> that it is recommended to run it as root as version .3
19:15 < kinginky> what OS are u on?
19:15 < kinginky> hm
19:15 < kinginky> also post that log mentioned at the end, '/home/mnz/bin/mozilla-BrowserQuest-af32d24/npm-debug.log'
19:15 < Chatterbox> Arch Linux
19:16 < Chatterbox> kinginky: Here it is:
19:16 < Chatterbox> http://www.pasteall.org/33980
19:16 < Chatterbox> kinginky: O sorry, that got mixed off
19:17 < Chatterbox> Here is the correct version:http://www.pasteall.org/33981
19:19 < Chatterbox> kinginky: And what I read abou being root was not obligatory, but it was recommended
19:19 < kinginky> Chatterbox: u could always try running it non-sudo in the meantime
19:19 < kinginky> but i'm looking around for a solution
19:20 < Chatterbox> kinginky: I'm running it non-root, and it seems to be working
19:20 < kinginky> try this: npm install websockets@1.0.3
19:20 < Chatterbox> kinginky: no errors yet
19:20 < kinginky> ok
19:20 < kinginky> if that doesn't work, try my other suggestion
19:20 < Chatterbox> kinginky: Thanks a million
19:20 < kinginky> otherwise stick with latest (1.0.6)
19:20 < kinginky> np
19:20 < Chatterbox> kinginky: I'll try it if that didn't work
19:20 < kinginky> k
19:20 < kinginky> let me know
19:30 < Chatterbox> kinginky: That worked, it rebuilt node-gyp
19:30 < Chatterbox> kinginky: Thanks a million for the help
19:37 < tjholowaychuk> isaacs can you pass flags to node-gyp in a preinstall script?
19:37 < tjholowaychuk>  like --with-jpeg etc
19:54 < TheEmpath> oh node how i miss you :(
19:55 < TheEmpath> it was so easy to upgrade npm and node and try out a new github
19:55 < TheEmpath> but nowâ€¦ im suck in symfony landâ€¦ where everything is unnaturally convoluted
19:55  * TheEmpath cries.
20:07 < Incisive> TheEmpath: I agree, symfony drove me insane.
20:10 < ferik> if I want to encapsulate (put in a self contained function) code that makes an asynchronous call, am I correct in thinking I have to use a synchronisation library in node since otherwise, the call is likely to return after the function itself has returned?
20:17 < jcrew> ferik: probably, depends on what you're trying to do
20:22 < ferik> jcrew: I'll take a silly example, I have to call an API to translate from english to klingon. I want to encapsulate that to translate(s_english) that returns the string in klingon
20:22 < ferik> jcrew: seems that for that encapsulation, I need to use synchronisation libraries
20:23 < ferik> jcrew: or am I trying the wrong organisation of code. I am trying to avoid one massive piece of code that waterfalls from callback to callback
20:27 < other_guy> anybody have any good ideas how to get a constructor to block until an internal callback is returned?
20:28 <@hatch> while loop lol
20:28 < tjholowaychuk> other_guy sounds weird
20:28 < other_guy> yeah I know
20:28 < tjholowaychuk> I would recommend against that :p
20:28 < other_guy> it's an edge case
20:28 < other_guy> basically there's a system being consumed that can have it's endpoint URL's changed from their defaults
20:29 < other_guy> there's a method to get those changed values
20:29 < other_guy> I'd like to make a blocking HTTP request to load those values into the client
20:29 < tjholowaychuk> why do you have to do that in a constructor
20:29 < other_guy> if a flag is passed in to indicate that they're different
20:30 < other_guy> I want it to be a constructor option rather than a separate method call
20:30 < tjholowaychuk> well there's your problem :p
20:30 < tjholowaychuk> dont try and make it do something it's not designed to do
20:30 < other_guy> either way it doesn't really matterâ€¦ even if it's in another method I'm going to have the same problem
20:30 < other_guy> I have to have that function block until it can set values on its instance that other methods rely on
20:31 < other_guy> The reason for doing it on the constructor is really that no other methods will work until that it setup with the right endpoints, so I'd rather have the client be unusable until self-configured
20:32 < tjholowaychuk> just queue stuff or delegate
20:32 < tjholowaychuk> like have .foo do a .load(function(){ other stuff }) etc
20:33 < tjholowaychuk> node cant even do blocking requests so you're kinda screwed for that
20:36 < other_guy> tjholowaychuk, I'd like to avoid doing event emitter shit, it mucks up everything
20:36 < tjholowaychuk> that's the node way
20:36 <@Nexxy> el oh el
20:37 < tjholowaychuk> rewrite your stuff when you realize you have to make it async
20:37 < tjholowaychuk> haha
20:37 < tjholowaychuk> so best to assume that in the first place
20:37 < tjholowaychuk> when you can
20:38 <@Nexxy> other_guy, don't construct it until you know whether the URL has changed or not?
20:38  * Nexxy mind blown
20:40 < other_guy> Nexxy, that's actually not a terrible solution
20:41 <@Nexxy> obviously, I thought of it
20:41 <@Nexxy> there is nothing terrible about me
20:41 < blueadept> anyone here converted completely over to websockets and discontinuing use of jquery ajax methods?
20:41 <@Nexxy> yes
20:41 < other_guy> Though it forces me to wrap my entire app around client instantiation.
20:41 <@Nexxy> but only because I completely control the environment
20:41 <@Nexxy> blueadept, ^
20:42 < other_guy> Honestly, Nexxy & tjholowaychuk there are only really 4 or 5 endpoint resources I have to deal with, and I don't think it's unreasonable to expect someone to pass that crap into the constructor if they've decided to deviate from the default config.
20:43 < tjholowaychuk> it's not
20:43 < tjholowaychuk> but you dont do async stuff in constructors
20:43 < blueadept> Nexxy: cool to hear, considering that option
20:43 < other_guy> Nice as it would be to make the thing all dynamic and whatnot
20:43 <@Nexxy> blueadept, I wouldn't recommend it unless you can dictate the browser on all clients
20:43 <@Nexxy> also I hear rwaldron has dinosaurs
20:43 <@Nexxy> HEYYYYYYYYYYY~!1
20:43 < blueadept> are you using flash with websockets?
20:44 < other_guy> tjholowaychuk, my distributed computing system does async in the constructor
20:44 < other_guy> but the instantiation also relies on a ready event
20:44 < other_guy> so it works fine
20:44 <@Nexxy> blueadept, just socket.io on chromium which always actually uses WS
20:44 < Almindor> hey
20:44 < other_guy> this use case doesn't fit that pattern very well
20:44 < tjholowaychuk> other_guy well you can do what you like but i highly recommend against it
20:44 < tjholowaychuk> it's very obscure
20:44 <@Nexxy> obscure? why didn't you say so! I'll take it.
20:45 < Almindor> I update node to 0.8.3 and now my mocha/unit tests fail with AssertionError: expected { '0': 'd', '1': 's', '2': 'f' } to equal 'dsf' even if both objects are 'dsf' [ code is actualResponse.should.equal( mockResponse.body ) ]
20:45 < other_guy> since this is something intended to be used in an application, not be an application platform itself like the othe rthing
20:45 < Almindor> any idea what could cause this behavior?
20:45 < tjholowaychuk> Almindor $ rm -fr node_modules && npm cache clear && npm install
20:45 < tjholowaychuk> should fix it
20:45 < tjholowaychuk> or updating the should dep
20:45 < Almindor> hmm ok
20:45 < other_guy> I don't really see a downside to it.  You just instantiate the thing, and then on the next line do my_think.on('ready', function(){});
20:46 < tjholowaychuk> other_guy that's fine, that's not blocking though
20:46 < tjholowaychuk> i dont see how that situation changes when you pass in an option
20:47 < other_guy> the constructor does the event.emit in a process.nextTick() to make sure the .on('ready') gets picked up
20:47 <@scott_gonzalez> isaacs: Is there an equivalent of "~1.2.3" that doesn't include pre-releases?
20:47 < addisonj> any nodejitsu guys in today?
20:47 < other_guy> tjholowaychuk, it's not blocking you're right :-)  you said to not do async stuff in the constructorâ€¦ not sync stuff :-)
20:48 < tjholowaychuk> i wouldn't
20:48 < tjholowaychuk> it's weird IMO to do
20:48 < tjholowaychuk> var foo = new Foo and have it start firing off all this different shit
20:48 < tjholowaychuk> but yeah if you're already using an emitter what was your original problem?
20:48 < other_guy> I'm not using one
20:48 < other_guy> that was for a different project
20:49 < other_guy> that one needed to load a lot of JSON objects from disk during construction
20:49 < other_guy> I wanted that to be async
20:50 < other_guy> so constructor emits events when it's done constructing, basically
20:50 < other_guy> keeps the rest of the node process from blocking
20:50 < other_guy> anyway, for this I'm just going to make people pass in the values if they've changed the defaults
20:53 < jcrew> ferik: check out step or async library
20:53 < ferik> jcrew: will do, thank you
21:00 < Almindor> yep that fixed it
21:00 < Almindor> thanks, hopefully that's the last upgrade issue
21:05 < smartPudding> Hi, any small project looking for a dev ?
21:06 <@Nexxy> smartPudding, http://gun.io ?
21:07 < jerrysv> Nexxy: what ops fest happened in here?
21:08 < saamyj> Hey all, I'm writing a simple REPL tool. I want one of my libraries to be exposed to the REPL global when It starts. Anybody know of the best way to do this/
21:08 <@Nexxy> jerrysv, ryan_opper <-
21:08 < jerrysv> Nexxy: not sure i understand?
21:09 <@Nexxy> ryah made a bot that opped everyone
21:09 <@Nexxy> half of them haven't left yet lol
21:09 < smartPudding> Nexxy: Oh, do open source projects hire through gun.io ?
21:09 < jerrysv> aha, ok. makes sense to me :)
21:09 <@Nexxy> smartPudding, oh I assumed you were looking for a paid position, my bad ;P
21:10 < jerrysv> Nexxy: any interest in playing with these? http://www.4dsystems.com.au/prod.php?id=113
21:11 < smartPudding> Nexxy No I have 3 weeks of holidays ahead... and I would like to participate in a nice open source project
21:11 <@Nexxy> jerrysv, whatever it is; yes
21:11 < jerrysv> Nexxy: ha. it could have been a trollololol
21:11 < jcrew> it's future proof
21:11 < jerrysv> smartPudding: want suggestions as to which opensource projects to join?
21:11 <@Nexxy> I get trolled constantly, you wouldn't be the first :P
21:11 <@Nexxy> smartPudding, how about Node.js?!
21:11  * jerrysv still remembers a call from rick astly ....
21:12 <@Nexxy> haha
21:12 <@Nexxy> jerrysv, how was it?
21:12 < jcrew> did he give you up?
21:12 < jerrysv> Nexxy: it gave me up.
21:12 <@Nexxy> jerrysv, I let mine go to voicemail
21:12 <@Nexxy> I still have it saved
21:12 < jerrysv> hahaha. nice.
21:12 <@Nexxy> I listened to it last night and smiled
21:13 <@Nexxy> jerrysv, I could always call again!
21:13 <@Nexxy> ... and again
21:13 < jerrysv> Nexxy: NOOOOOOOOO
21:13 <@Nexxy> ... and again
21:13 <@Nexxy> I HAVE SO MANY TWILIO CREDITS
21:13 <@Nexxy> YOU DON'T EVEN KNOW
21:13 < smartPudding> jerrysv, Nexxy : node.js why not, any small feature to start with ?
21:13 < jerrysv> i can guess :)
21:14 < jerrysv> smartPudding: there are a ton of modules that always require work - what do you want to concentrate on? core? testing? benchmarks? i tend to just choose what i want to work on that day and contribute
21:14 < jerrysv> today is 4d systems picasso library, did some work on node-redis a couple of weeks back
21:16 < jerrysv> smartPudding: fork -> code -> test -> pull request -> repeat
21:18 < smartPudding> jerrysv, ok;) do you know if there's a todo-list anywhere ?
21:18 < addisonj> hrm... nodejitsu down again?
21:18 < jerrysv> smartPudding: what do you want to work on? almost every project has a todo list :)
21:18 <@isaacs> scott_gonzalez: how do you mean?
21:19 < milani> addisonj, #nodejitsu 
21:20 <@scott_gonzalez> isaacs: I saw someone say that they had a dependency of { "handlebars": "~1.0.4" } and it pulled in 1.0.5beta.
21:21 <@scott_gonzalez> They were surprised by that.
21:21 <@isaacs> scott_gonzalez: oh, hrm... 
21:22 <@isaacs> scott_gonzalez: i'm not sure there's a way to maek that work the way that they expect without violating other expectations
21:23 < jerrysv> Nexxy: i'll have a spare in a couple of weeks, i'll let you know when that happens
21:23 <@scott_gonzalez> isaacs: I didn't think there was anything that did it, but just wanted to check. Thanks.
21:25 -!- Topic for #node.js: http://nodejs.org | Node.js is a JavaScript platform for fast, scalable network applications. | Node.js is kosher and halal, made of 100% pure rainbows; it is scripting beyond your wildest dreams of avarice.
21:25 -!- Topic set by Gregor [codu@codu.org] [Fri Jul 20 17:54:19 2012]
21:25 < jcrew> ferik: the other option there is to emit a "completed" event and do something when the "completed" event is fired
21:26 <@isaacs> Gregor: nice /topic :)
21:26 < ferik> jcrew: interesting. Trying Step right now
21:27 <@maxogden> Nexxy: me and isaacs are listening to my voicemail of the rickrolling
21:27 < jerrysv> maxogden: i owe you a cat picture
21:28 <@maxogden> jerrysv: you need to start an instagram account for pictures of your cats
21:28 <@maxogden> wearing bow ties and other clothes
21:28 <@ryah> is the opper bot still working?
21:28 < jerrysv> maxogden: but i don't use instagram :/
21:28 < milani> oh ryah here. 
21:28 < milani> !!
21:28 < jerrysv> maxogden: i'll see if laurie does, and if she does i'll make sure you are added
21:29 < ryah> ops plz
21:29 < ryah> :<
21:29 < milani> :))
21:29 <@Nexxy> jerrysv, sweet!
21:29 <@Nexxy> maxogden, rofl :D
21:29 < mmalecki> ryah: bot's gone. do you have a link?
21:29 < dominictarr> mmalecki, http://everybodyisadj.koha.as/everybody/playlist1
21:29 < mmalecki> I can get it started on nodejitsu
21:29 <@Nexxy> that is a recipe for disaster
21:29 <@Nexxy> lol
21:29 <@ryah> mmalecki: someone else made it
21:29 < mmalecki> ryah: I know
21:29 < willwhite> Quick question about node-gyp: for node 0.8.x+ should C++ addons list node-gyp as a dependency in package.json?
21:29 < mmalecki> dominictarr is actually sitting next to me!
21:30 <@isaacs> ryah: 21:29 -ChanServ(ChanServ@services.)- 1     _ry                    +AFORfiorstv [modified 50 weeks, 1 day, 23:44:40 ago]
21:30 < jerrysv> mmalecki: i saw the pictures of breaking the ice
21:30 < milani> willwhite, I don't think so. it detects binding.gyp I think.
21:30 <@isaacs> ryah: if you sign in, it'll just always auto-op you
21:30 < milani> and node-gyp is built in to npm
21:30 < mmalecki> jerrysv: :)
21:30 <@maxogden> willwhite: yea its bundled now
21:30 < mmalecki> jerrysv: story behind the ice is pretty cool!
21:30 < jerrysv> mmalecki: you is crazy
21:31 < mmalecki> we had no ice for drinks
21:31 < jerrysv> hahaha
21:31 < mmalecki> so I basically poured some water into a bowl
21:31 < TooTallNate> willwhite: everyone is correct, no, you don't need to specify it as a dep
21:31 < mmalecki> and then we had to find a way to break it
21:31 < TooTallNate> willwhite: in fact, you don't even need a "preinstall" or "install" page
21:31 < willwhite> maxogden: milani: ah ok. so i just need a binding.gyp in the project so npm knows to build it?
21:31 < mmalecki> so, well, gun seemed pretty appropiate.
21:31 < TooTallNate> phase
21:31 < jerrysv> mmalecki: how many drinks by then? :)
21:31 < mmalecki> jerrysv: also, it was with Paolo, not Dominic :)
21:31 < TooTallNate> willwhite: right, just drop the binding.gyp file in the root and npm takes care of the rest
21:31 < mmalecki> jerrysv: dunno, like 5 shots?
21:31 <@ryah> isaacs: i know - i just wanted something for other people
21:31 < jerrysv> mmalecki: i know, it was paolo who showed me
21:32 <@isaacs> yeah
21:32 <@isaacs> it'd be funner, i think, to have a bot that randomly ops people, and occasionally denies op plz requests
21:32 < willwhite> TooTallNate: cool, thanks. I will give that a try!
21:32 <@isaacs> maybe a 1/6 chance of replying with "Mmmm... no."
21:32 < jerrysv> mmalecki: it looked, last time that i checked, that you worked around that vows issue by allowing an emitter to just be passed in?
21:33 < milani> why people do care abt ops
21:33 < milani> :D
21:35 < baudehlo> are there any regular proxy servers in node (not reverse ones). I want some simple way I can modify the server responses (basically just deleting "HttpOnly" from cookies).
21:41 < dominictarr> mmalecki, https://github.com/dominictarr/fs-reverse
21:42 < TooTallNate> baudehlo: you can do that with node-http-proxy as well i believe
21:42 < dominictarr> mmalecki, http://everybodyisadj.koha.as/everybody/playlist1#
21:44 < baudehlo> TooTallNate: I don't think so - looking at the code for forwarding proxy, it only forwards to one destination.
21:51 < smartPudding> jerrysv while i was working with node I realized it was painfull to add csrf protection to forms and links. Do you know if there's a good module for that ?
21:56 < motiooon_> how do I decode a base64 string in node ?
21:57 < mmalecki> motiooon_: https://github.com/flatiron/utile/blob/master/lib/base64.js#L37
22:02 < Technodrome> do any of the node.js web frameworks have a channel?
22:02 < motiooon_> mmalecki:  it doesn't work
22:03 < motiooon_> it returns ï¿½"qï¿½ï¿½ï¿½ï¿½ï¿½
22:03 < motiooon_> this is the encoded string Basic cXE6MTE=
22:03 < motiooon_> "Basic cXE6MTE="
22:05 < TooTallNate> Technodrome: there's #express
22:05 < mmalecki> motiooon_: https://github.com/mmalecki/basic-auth-parser
22:06 < mmalecki> if you want to parse basic auth
22:06 < motiooon_> aha, got it thanks mmaleki
22:10 < Technodrome> TooTallNate:  ever used geddy?
22:13 <@Nexxy> Technodrome, I hear it's amaaaazing
22:14 < Technodrome> being serious Nexxy ?
22:14 <@Nexxy> yes
22:14 <@Nexxy> I've never used it but I have only really heard good things about it
22:14 < Technodrome> the amaaaaazing part, made it sound tongue and cheek
22:14 <@Nexxy> pardon my exuberance.
22:15 < Technodrome> it looks much better than express
22:15 < Technodrome> then again, maybe i should just "get it done in php" 
22:15 < context> its looks very similar to rails.. in js that is
22:16 < EhevuTov> Technodrome, what would you use in PHP to get it done
22:16 <@Nexxy> inb4 cakephp
22:16 < Technodrome> codeginiter is my php framework of choice 
22:16 < Technodrome> cake is a bit heavy
22:16 < Technodrome> and yii is componenet based ish 
22:16 < EhevuTov> I'm familiar with Yii
22:17 < EhevuTov> Railway is a bit similar to Yii
22:17 < Technodrome> its sorta like all the java frameworks in a way 
22:17 < Technodrome> does railsway have components? 
22:17 < Technodrome> didn't think it did 
22:17 < EhevuTov> I don't think so, but it has a generator and an abstract model lib
22:18 < Technodrome> still though, yii's biggest ++ if you like java style frameworks is that its push and Pull 
22:18 < Technodrome> where codeigniter and cake etc are all push 
22:19 < EhevuTov> Technodrome, so you want to be able to use role-based authorization, etc around actions?
22:20 < Technodrome> no, not at all EhevuTov 
22:23 < tellnes> whois tjholowaychuk
22:24 < tjholowaychuk> whois tellnes
22:24 < tjholowaychuk> :p
22:24 < tellnes> I should see if you were online: P
22:24 < jocafa> whyis tjholowaychuk
22:24 < jocafa> Â¬Â¬
22:25 <@Nexxy> I think the most important question is:
22:25 <@Nexxy> how is tjholowaychuk?
22:25  * tjholowaychuk good
22:25 < jocafa> "We're not werewolves, we're whywolves."
22:26 < tellnes> tjholowaychuk: I try to use superagent with browserify
22:26 < tjholowaychuk> tellnes superagent has a client and node version so be careful
22:26 < tjholowaychuk> that you're not trying to bundle up the node one
22:27 < tellnes> tjholowaychuk: That's what browserify trying to do.
22:27 < EhevuTov> Technodrome, I'm only familiar with push/action based PHP frameworks
22:27 < tellnes> tjholowaychuk: looking at issue #95, I see that I am not the first
22:27 < Technodrome> yes EhevuTov well if you used yii you used components to 
22:28 < EhevuTov> Technodrome, yeah, I don't remember that though :-P
22:28 < Technodrome> EhevuTov:  its probably one of the biggest changes
22:28 < EhevuTov> Technodrome, just what are you trying to create?
22:30 < tellnes> tjholowaychuk: What about this: "var Emitter = 'undefined' == typeof EventEmitter ? EventEmitter : require('events').EventEmitter" ?
22:30 < tjholowaychuk> yeah we could add something in, it's already doing that for component support
22:31 < tjholowaychuk> I just dont do the redundant require('events').EventEmitter thing it's just require('emitter')
22:31 < tellnes> And let the Makefile bundle EventEmitter as it does now
22:31 < tellnes> And browserify can use lib/superagent.js direct
22:32 < tellnes> tjholowaychuk: And if you want another EventEmitter, just prepend it.
22:33 < Technodrome> EhevuTov:  just a very simple content based site
22:33 < Technodrome> nothing crazy at all 
22:33 < Technodrome> mostly static 
22:33 < tellnes> tjholowaychuk: I can send a pull request?
22:33 < tjholowaychuk> tellnes sure
22:33 < EhevuTov> Technodrome, just go with something Express based, or express itself. You might even want to go lower and do a connect.static
22:35 < EhevuTov> like Nexxy said you might want to use Geddy. It uses the Twitter Bootstrap for it's UI (and of course Jquery)
22:35 < tellnes> tjholowaychuk: What is `component`? Url?
22:35 < Technodrome> EhevuTov:  i think imma honestly just do php honestly 
22:36 < tjholowaychuk> tellnes u cant haz yet :p
22:36 < EhevuTov> Technodrome, what can I do do make you reconsider :-)
22:37 < Technodrome> EhevuTov:  its mostly static content, why not :) 
22:37 < tellnes> tjholowaychuk: That's why I can not google it. :P
22:37 < EhevuTov> Technodrome, if it's static, then why use PHP?
22:38 < Technodrome> EhevuTov:  just a little bit is dynamic 
22:39 < EhevuTov> Technodrome, I'd just Express+Jade for something like that
22:39 < EhevuTov> Geddy looks nice if you need a UI with it
22:40 < Technodrome> jade is cool to 
22:40 < Technodrome> but i would just use ejs 
22:40 < tellnes> tjholowaychuk: Can I replace the emitter dependency with events?
22:40 < Technodrome> i like to keep abstraction down i think 
22:41 < tjholowaychuk> tellnes nope
22:41 < EhevuTov> Technodrome, you can use EJS with express. Geddy also uses EJS
22:42 < Technodrome> yeah i know EhevuTov i was just stating :) 
22:50 < tellnes> tjholowaychuk: The quick fix is to add emitter as a dependency in package.js
22:50 < tellnes> tjholowaychuk: I see you have emitter-component as a dependency, but not using it anywhere. Has this similar api as emitter?
22:51 < tjholowaychuk> yeah that's the one with require('emitter') not require('events').EventEmitter
22:51 < tellnes> tjholowaychuk: So what about: require('emitter-component') ?
22:52 < tjholowaychuk> lame
22:52 < tprice> im getting this error when using express
22:52 < tprice> https://gist.github.com/3166750
22:52 < tjholowaychuk> tprice check the wiki for migration to 3x
22:52 < tellnes> tjholowaychuk: It works with browserify and does not include a lot of code for very little.
22:53 < tjholowaychuk> i'll move the client stuff into superagent-client sometime so the deps will be specific to the client version
22:54 < therealkoopa> tjholowaychuk: How would you recommend grabbing the progress of a file upload using express?  Drop down to the formidable form?
22:57 < tellnes> tjholowaychuk: As it is now with client and node in the same package is actually great for browserify, with the exception of the require line I want to change.
22:58 < tjholowaychuk> it's bad to mix them but it's been that way forever
22:58 < tjholowaychuk> ill get around to it some day
22:59 < tellnes> I think the solution for me is to use a fork until further.
23:10 < samholmes> is it cool if I ask for feedback and constructive critisism on one of my control flow modules?
23:11 <@Nexxy> samholmes, indubitably
23:11 < samholmes> https://github.com/samholmes/lace
23:12 < samholmes> This is the control flow lib. Anyone here can let me know what they think. :)
23:12 < Guest41315> anyone used the ncurses interface recently?
23:12 < samholmes> (It's still in alpha; there are a few features need to implement.)
23:13 < owen1> i try to use request packages for PUT of a file. do u need to use multipart? 
23:13 < tjholowaychuk> owen1 if you're trying to behave like a form yup
23:14 <@doexxa> i'm not a form, and i won't be submitted to such treatment
23:15 <@Nexxy> samholmes, from just reading it over, it looks nice :)
23:15 < owen1> tjholowaychuk: what does it mean? should i care?
23:16 < other_guy> tjholowaychuk do you know if there's an object merging function in the node.js base API?  I'm having a hard time locating one, and I'm a little surprised it doesn't exist.
23:16 < tjholowaychuk> owen1 it depends what you're doing, you can transfer the file's binary and set the Content-Type etc
23:16 < tjholowaychuk> without multipart
23:16 < tjholowaychuk> but it depends what the server is accepting
23:16 <@Nexxy> samholmes, a few too many anon functions for my liking; that's about the only criticism I can think of off the top of my head
23:16 < samholmes> Nexxy: Thanks for the positive feedback. :)
23:16 < tjholowaychuk> other_guy for (var key in obj) other[key] = obj[key]
23:16 <@Nexxy> Object.keys
23:17 < samholmes> Nexxy: How else would you do control flow without anonymous functions?
23:17 < samholmes> Nexxy: You could name the functions, but that would clutter your namespace.
23:17 <@Nexxy> samholmes, actually it was just the example that I saw them in
23:17 < other_guy> Yeah I know, I already have a recursive deep merge function I've written, I was just hunting around for a node standard one, since it's such a common thing
23:17 <@Nexxy> samholmes, I see you actually named your next func, so that's cool :D
23:17 < Guest41315> big huge fat bastids!
23:17 < other_guy> I'm just trying to merge passed in options with an existing set of defaults.
23:18 < tjholowaychuk> other_guy that's kind of the weird jquery way
23:18 < Guest41315> ive heard of jquery, what is that
23:18 <@Nexxy> other_guy, just use arguments
23:18 < samholmes> Nexxy: You can name them all you want; which could help with debugging too. Regardless though, this is for asynchrounous control flow. You've seen other async control flow libs yes?
23:18 < other_guy> Nexxy, there are like 100 possible things that could be passed in to modify the defaults
23:19 < other_guy> hence why I want the user to be able to create the subset they care about and have them override
23:19 <@Nexxy> other_guy, just
23:19 <@Nexxy> pass in extra options as additional arguments
23:19 <@Nexxy> and iterate through them
23:19 <@Nexxy> and overwrite
23:19 < tjholowaychuk> other_guy sounds like your api is getting too large at that point
23:19 < tjholowaychuk> at least as far as option stuff goes
23:19 < other_guy> it's not my API :-)
23:19 < tjholowaychuk> options objects suck
23:20 <@Nexxy> you know it sucks when tjholowaychuk says so
23:20 < tjholowaychuk> that's what methods are for
23:20 < other_guy> It's my allowing consumers of a client to modify what's already there.
23:20 < therealkoopa> tjholowaychuk: Express seems to put all file uploads in /tmp/* - Is it possible to just work w/ the stream directly (uploading to S3), and prevent the write to /tmp
23:20 < tjholowaychuk> Nexxy im allowed to have opinions like anyone else :p
23:21 < other_guy> options objects are really great for not having to go through all your code and update every single function invocation
23:22 < other_guy> They're also really great for defaults overrides like this situation
23:22 < other_guy> because the defaults are already in an object
23:22 < tjholowaychuk> yeah
23:22 < tjholowaychuk> but dont have massive ones
23:22 < other_guy> It's not up to me
23:23 < other_guy> I've got to deal with theseâ€¦ http://wiki.basho.com/HTTP-Set-Bucket-Properties.html
23:23 < other_guy> and
23:23 < other_guy> http://wiki.basho.com/HTTP-Store-Object.html
23:23 < other_guy> and
23:23 < other_guy> http://wiki.basho.com/HTTP-List-Resources.html
23:24 < benatkin> tjholowaychuk: just sent rauchg an email about beautifuljs.com assuring him that it's his, in case I was blocking it
23:24 < tjholowaychuk> haha k cool
23:24 < other_guy> both in default bodies and default headers
23:24 < tjholowaychuk> other_guy gotcha, I see what you mean now
23:24 < lohkey> other_guy: are you writing a riak driver for node?
23:25 < tjholowaychuk> I just think when your entire api is an options object
23:25 < tjholowaychuk> things get really ugly
23:25 < tjholowaychuk> == almost every jquery plugin ever
23:25 < other_guy> tjholowaychuk, I agree.  It's only used for instantiation, and only affects people who've deviated from defaults.
23:25 < other_guy> lohkey, yes and no
23:26 < other_guy> I'm doing two things at once.
23:26 < other_guy> I'm updating riak-js, and I'm taking my updates and building a new client around them
23:26 < other_guy> the new client is not a fork of riak-js though, it's more of a port of the riak-ruby-client if anything.
23:27 < lohkey> i've been looking for a good node riak driver
23:27 < other_guy> well.. define good.
23:27 < other_guy> I've got one that handles everything except MR and Search at the moment.
23:28 < other_guy> I'm working on those now
23:29 < other_guy> I'm also working on integrating my CRDT library into it so that if you've built your objects using CRDT's you can do automatic conflict resolution and garbage collection of your types
23:31 < other_guy> I haven't decided what I want the API for MR and Search to look like yet
23:35 < livinded> is it possible to emit events on an object literal and have it listen for them?
23:46 < sirwan> Question: How the fuck do you guys know how to use NodeJS and ExpressJS without reading the Node API
23:46 < mmalecki> sirwan: I just read the code
23:46 < mmalecki> sirwan: I know that some people read the docs tho
23:46 < sirwan> well, wont you forever be looking at example code if you dont read the docs
23:47 < mmalecki> sirwan: no, I mean, I read node's code
23:47 < mmalecki> it's simpler than looking at example code or docs
23:47 < sirwan> right yeah
23:48 < sirwan> mmalecki: I guess you must do that before starting with Node
23:48 < sirwan> its difficult
23:48 < owen1> how do i know if the server i am posting to support multiparts? here is how i use it - curl -sSf -T $LOCAL_FILE <url>
23:48 < sirwan> right im out of here
23:48 < mmalecki> sirwan: no, that's what it used to look like. now there are actual docs and stuff
23:48 < mmalecki> oh well.
23:59 < payara> ?
--- Log closed Tue Jul 24 00:00:12 2012
