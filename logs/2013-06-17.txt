--- Log opened Mon Jun 17 00:00:39 2013
--- Day changed Mon Jun 17 2013
00:00 < prettyrobots> @tjfontaine Because it's tricky. 
00:00 < prettyrobots> @tjfontaine But its cool that Node.js handles overlapping correclty.
00:01 < prettyrobots> @tjfontaine Thank you.
00:02 < harbhub> hey fellas
00:02 < harbhub> has anyone implemented/used the PayPal IPN?
00:03 < harbhub> basically, it sends a message to your server when a user makes a purchase, which is very useful for me
00:03 < olalonde> yes, like 5 years ago
00:03 < olalonde> haha
00:03 < harbhub> haha
00:03 < harbhub> nice
00:03 < harbhub> olalonde, how was your experience with it?
00:03 < harbhub> was it reliable?
00:04 < olalonde> yes
00:04 < harbhub> would you recommend something different for payment acceptance on my site/web-application?
00:04 < olalonde> depends. if you can get a merchant account, I heard stripe.com is good and has very nice API documentation
00:05 < olalonde> I wouldn't really recommend Paypal unless you aren't able to get a merchant account
00:05 <@isaacbw> paypal reserves the right to take all your money
00:05 < olalonde> they can do funky stuff like freeze your money for 6 months and such
00:05 <@isaacbw> braintree is also good
00:05 < harbhub> a merchant account with whom?  with google?
00:05 < harbhub> well, paypal just got ruled out
00:05 < olalonde> checkout braintree and stripe
00:05 < harbhub> no funky stuff with my money
00:05 <@isaacbw> with something like authorize.net
00:05 < harbhub> zero funkyness
00:06 < harbhub> i was considering using authorize.ne
00:06 <@isaacbw> and/or your bank
00:06 < harbhub> .net*
00:06 <@isaacbw> it's a lot of work
00:06 <@isaacbw> probably not worth it
00:06 < harbhub> oh
00:06 < harbhub> hmm
00:06 < harbhub> well i cannot have any funky stuff with my money
00:06 < olalonde> i think braintree or stripe offers merchant accounts now
00:06 < harbhub> so paypal just got ruled out
00:06 < olalonde> harbhub: google "paypal horror story"
00:06 < olalonde> lots of results ;)
00:07 < olalonde> i personnally got my money frozen for 6 months and my account suspended forever
00:07 < olalonde> because i suddenly got a rush of orders
00:07 < olalonde> appartently , too risky for paypal
00:07 < harbhub> lol
00:08 < harbhub> what the fuck paypal
00:08 < harbhub> i googled what you said, and wow
00:08 < olalonde> haha :)
00:08 < harbhub> anyways, i won't be using paypal ever
00:08 < harbhub> stripe.com looks nice enough
00:08 < olalonde> i think only US citizens though
00:09 < olalonde> if you need recurring payments, you might want to check out www.recur.ly or some of their competitiors
00:09 < harbhub> that sucks, what do you mean by only US citizens?
00:09 < olalonde> I mean you have to be US citizen to use stripe to receive payments
00:10 < olalonde> anyone can send payments though
00:10 < harbhub> oh that isn't a problem
00:10 < ChrisPartridge> harbhub: if you're in AU, you can use pin
00:10 < harbhub> i am a US citizen
00:10 < olalonde> good :)
00:12 < harbhub> https://github.com/abh/node-stripe
00:12 < harbhub> the nodejs community is literally the greatest thing on Earth
00:19 <@isaacbw> literally
00:20 < olalonde> agreed
00:21 < olalonde> (after sex)
00:21 < harbhub> haha
00:22 < compressed> any suggestions for me? - I started using node-amqp to help manage some firehouse-type data, and it's working fine, but now my tests for the e2e workflow fail (using mocha). Previously I had the benefit of returning a callback when my data has been (and using mocha's done()), but now the callback gets sent when messages are sent to the queue, so the tests fail b/c the messages haven't been read of the queue yet.
00:22 < compressed> not sure the best way to ensure when the message is read off the queue, that it's stored successfully
00:28 <@isaacbw> compressed: you're basically saying "I have this problem. How do I solve it?"
00:29 <@isaacbw> which isn't a very easy thing to help with
00:30 <@isaacbw> you might get some help if you pasted code and asked specific questions
00:31 < compressed> ok
00:39 < harbhub> compressed, use gist.github.com if you want to paste code there and give us the link so we can inspect it
00:39 < compressed> thanks, yeah trying :)
00:56 < monokrome> Anyone have ideas about generating static pages with brunch? Not sure how to do it :/
01:08 <@isaacbw> it looks like that question I had earlier can be done with twillio really easily
01:08 <@isaacbw> *twilio
01:09 < compressed> here's some example of what I'm trying to do: https://gist.github.com/compressed/5794074
01:12 <@isaacbw> man, twilio is slick as fuck
01:13 < monokrome> It's pretty awesome
01:24 < paulkon> "Previous telecom providers couldn't keep up with the volume of election day. The Democrats found that Twilio scaled effortlessly for a fraction of the cost."
01:43 < harbhub> javascript question:  so i send the post to the server, then server sends a response of content-type plain/text that says 'successful'
01:43 < harbhub> how do i get the responseText?
01:43 < harbhub> on the client
01:44 < harbhub> xhttp.onsuccess = function()...?
01:44 < harbhub> do i handle this in the readystatechange listener?
01:44 < olalonde> harbhub: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest
01:47 < harbhub> olalonde, i see how to send the post request, and my server handles it and sends a response, however i don't see where i access the response (this is async) on the client
01:48 < harbhub> i know it should be something like:  xhttp.responseText
01:48 < olalonde> I have no idea, I usually use jQuery
01:48 < harbhub> okay
01:50 < harbhub> olalonde, i found it, readyState === 4
01:50 < harbhub> means the shit is done lol
01:51 < jfisk1987> heyguys
01:51 < jfisk1987> im using express, and im not getting my post variables. Im using charles to verify the json params are being sent OK and they are
01:51 < jfisk1987> using express 3
01:52 < jfisk1987> i have this line: exports.loginUser = function(req, res)
01:52 < caitp-> https://gist.github.com/caitp/a3ef60110c91e6209c0c can someone explain what I am doing stupidly wrong here
01:52 < caitp-> because I do not understand it :c
01:52 < jfisk1987> and a console.log on req and it lists nothing
01:55 < joshskidmore> jfisk1987: What are you using in your loginUser export to view the post variables?
01:57 <@MI6> joyent/node: isaacs master * 0a4260c : doc: Correct TLS deprecation notices - http://git.io/Xr5IOA
01:57 < jfisk1987> joshskidmore: nothing? just have this http://pastebin.com/1DRAhDKz
01:57 < jfisk1987> joshskidmore:  im a newbie but i did just find an example so ill dig into that before wasting anyones time
01:58 < harbhub> how do i send a responseText from a post request?
01:58 < harbhub> my client is engaged in the async post
01:58 < harbhub> however, my server is not sending a response text correctly
01:58 < joshskidmore> jfisk1987: do you have a proper route setup in app.js?
02:00 < joshskidmore> jfisk1987: something like -  app.post('/login, [loginUser module].loginUser);
02:01 < jfisk1987> joshskidmore:  i have 	app.post('/auth/login',auth.loginUser);
02:04 < joshskidmore> jfisk1987: did you require your auth module properly?
02:06 < joshskidmore> jfisk1987: a quick way to tell is to throw a logging statement at the top of your auth file 
02:06 < joshskidmore> jfisk1987: and when you start app.js, it should print that statement immediately
02:06 < jfisk1987> joshskidmore: my express onfig wasnt loading
02:07 < jfisk1987> joshskidmore:  i fixed it, bodyParser now loads, and i got my POST data :)
02:07 < jfisk1987> thanks for the tips tho
02:07 < harbhub> solved.
02:07 <@MI6> joyent/node: isaacs v0.10 * 3c7945b : net: Do not destroy socket mid-write - http://git.io/wzByxA
02:11 < piklu> Hi guys
02:11 < piklu> Can u suggest me some kind of templating engine for making node.js apps 
02:11 < david_48923> angular, ember, backbone, etc
02:12 < david_48923> on the backend jasmine seems to be popular
02:12 < olalonde> anyone knows how to use the debugging client
02:12 < olalonde> I type "cont" but it doesnt break at my debugger; statement
02:12 < david_48923> I have used the dubugging client once :)
02:13 < piklu> david_48923: angular is a bit of complex if am right
02:13 < piklu> david_48923: I need to pick one
02:13 < piklu> so guide me plz
02:14 < olalonde> maybe because im debugging with mocha?
02:14 < wc-> piklu: http://todomvc.com/
02:14 < harbhub> follow your heart, piklu
02:14 < wc-> bunch of frameworks on there to compare
02:15 < piklu> wc: love you, may your cat licks u today
02:16 < piklu> harbhub : heart will start saying - asp.net
02:16 < piklu> lol
02:16 < harbhub> if you love asp.net, then why switch to node.js?
02:18 < piklu> harbhub: 1. dnt wanna pay microsoft, 2. node's model of highly thick process suits me 3. trying to build a commercial nosql hosting
02:18 < mmalecki> piklu: I'd recommend using node.js for this usecase in general
02:18 < harbhub> highly thick process?
02:18 < piklu> harbhub : Yes, node is one single thick process that can be used to create distributed environments
02:19 < mmalecki> I think you mean thin
02:19 < piklu> oh yes
02:19 < mmalecki> but yeah
02:19 < piklu> plus - load handling is good, i like erlang, and its next to it
02:20 < piklu> lots of module
02:20 < harbhub> you forgot the best part piklu
02:20 < harbhub> the community
02:20 < piklu> :) if you guys respond quickly
02:20 < piklu> like I use debian vs centos
02:20 < harbhub> i like debian
02:20 < piklu> debian are fast and more respectful
02:20 < piklu> debian is pretty solid
02:21 < harbhub> lenny
02:21 < harbhub> apt-get update
02:21 < piklu> I came here if anyone can tell me in general which framework to pick, Lots of them there. I want to pick one, master it, it should suit all purpose
02:21 < Lorentz> you can't surely be still on lenny
02:21 < piklu> lenny ? wheezy perhaps
02:21 < harbhub> i don't use a framework currently
02:21 < harbhub> i just make my own shit
02:22 < piklu> I can make my own shit too, but I dnt wanna keep patching html errors all the time
02:22 < piklu> so thats why thought of picking something can provide me a better compatibility
02:23 < piklu> Meteor seems good :)
02:24 < mmalecki> oh please no
02:24 < mmalecki> just don't use meteor
02:24 < Jester831> Howdy, how would I make it so that I could share a variable between require's of a module, like for initialization
02:25 < piklu> ??
02:25 < piklu> mmalecki: the realtime updates made me greedy
02:26 < mmalecki> piklu: the technology under the covers is terrible, you're better of using something like socket.io
02:26 -!- mode/#Node.js [+o MI6] by ChanServ
02:26 < piklu> Please guide me over a framework than, you guys might have to use my level db free hosting soon :)
02:26 < piklu> :) dnt let me choose wrong 
02:27 < piklu> how about derby vs socketstream
02:28 < piklu> I might have to go with angular at the end, I dnt want at them moment
02:28 < jfisk1987> noob question, but how does name get away with not havign quotes around it?
02:28 < jfisk1987> j = { name : "mongo" }
02:29 < Zolmeister> jfisk1987: javascript auto casts key values to strings
02:29 < piklu> mmalecki: anything?
02:29 < jfisk1987> Zolmeister: cool!
02:30 < ChrisPartridge> piklu: people here aren't going to make decisions for you, pick something you find comfortable, and start coding
02:30 < piklu> ChrisPartridge: I am not asking anyone to make decision, I am asking you to suggest, and give me some supporting argument, thats it.
02:38 < sinclair|net> ChrisPartridge: i wrote you a song
02:39 < sinclair|net> ChrisPartridge: https://s3-ap-southeast-2.amazonaws.com/sinclair-media/music/sinclair_blues_stuff.mp3 
02:41 < kaoD> hi
02:41 < piklu_> hi
02:41 < kaoD> I'm writing to a child process' stdin but the data is not flushed until I .end() the pipe
02:41 < kaoD> is there any way to force flush?
02:54 < Jester831> how do I get express.sid?
02:56 <@xyxne> kaoD, use spawn instead of exec?
02:56 < kaoD> I'm using spawn
02:57 < kaoD> xyxne: I use .write(), so it's a stream, so it's spawn
02:57 < kaoD> the problem is that I have to .end() for the .write()s to flush
02:57 < kaoD> if I don't .end() I get no response from the child stdout
02:57 <@xyxne> what does the code look like?
02:59 < kaoD> xyxne, like this: https://www.refheap.com/15840
02:59 < kaoD> like that it does nothing
02:59 < kaoD> if I stick proc.stdin.end() at the end, it works, but the child process exits
02:59 < kaoD> and I don't want it to exit
03:00 < kaoD> not using NodeJS (i.e. in the shell) everything's fine, I write to STDIN and I get data in STDOUT
03:01 <@xyxne> uh huh
03:01 <@xyxne> and you're spawning it with -i?
03:01 < kaoD> -i ?
03:01 < kaoD> you mean python?
03:01 < kaoD> nope, I'm just running a script
03:02 <@xyxne> idk then
03:02 <@xyxne> I'm sure someone knows though
03:02 < kaoD> I hope so!
03:02 < kaoD> I'm really stuck here
03:02 < kaoD> I tried EVERYTHING!
03:04 < kaoD> oh wow
03:04 < kaoD> I just discovered that I can force a flush writing A LOT of that
03:04 < kaoD> until the buffer fills I guess
03:08 < ome> Hey there, I tried to google and search over at the npm database, but no luck. Does anyone know of a PulseAudio binding for Node.js? I was thinking of streaming my Linux audio over IP.
03:09 < ChrisPartridge> sinclair|net: nice
03:09 < ChrisPartridge> sinclair|net: lay some voice over that bad boy and you got yourself a hit
03:09 < sinclair|net> ChrisPartridge: yeah, i don't sing mate
03:14 < sinclair|net> ChrisPartridge: done anything with knockoutjs?
03:15 < ChrisPartridge> sinclair|net: nope, just using backbone for client side stuff at the moment
03:15 < sinclair|net> ChrisPartridge: i am curious about how to use it effectively
03:15 < sinclair|net> as in, what it provides, and what it expects me to provide
03:16 < ChrisPartridge> knockout, or backbone?
03:16 < sinclair|net> knockout
03:16 < sinclair|net> tho, i expect the same things would apply to backbone
03:16 < sinclair|net> ChrisPartridge: i have a model for a page, and im want to use the same model for various components of the page
03:17 < ChrisPartridge> pretty sure knockouts main selling point is there observable stuff, much afaik, is similar to angulars approach
03:17 < sinclair|net> ChrisPartridge: the thing is, the entire page (menu, elements) is basically one giant data structure
03:17 < ome> Backbone.js isn't really anything like Knockout or angularjs.
03:17 < ChrisPartridge> yeah, i'd agree with ome on that
03:18 < sinclair|net> i like observables
03:18 < sinclair|net> however...
03:18 < sinclair|net> the page has a variety of data sources, retrieved over http (ajax), 
03:18 < sinclair|net> on load of that data, i push it into ko models
03:19 < sinclair|net> however, i want the models to share the same data
03:19 < sinclair|net> same underlying data that is
03:19 < ChrisPartridge> pass it to the different views?
03:20 < ome> I could be wrong, but if you're modules need to share the same data, maybe you should redesign your structure. :-)
03:20 < sinclair|net> ChrisPartridge: well, perhaps
03:20 < ome> your*
03:20 < sinclair|net> ChrisPartridge: the problem is, the ko models have all this UI specific data with them
03:20 < ome> Like share the same Module with multiple views.
03:20 < sinclair|net> for example "visible" and "expanded" and "selected"
03:21 < sinclair|net> the data i fetch from the server has no idea what these are about
03:21 < sinclair|net> so, when i initialize the models, i have to create that stuff, which is a bit of a coupling between model and view
03:22 < sinclair|net> [data] -> [model1] && [model2]
03:22 < sinclair|net> model1 accepts data, does a bunch of stuff with it, same for [model2]
03:22 < sinclair|net> problem is, i want model1 and model2 to "share" that data, 
03:23 < sinclair|net> which in ko's sense, it is not share, it is new ko observables 
03:23  * sinclair|net is all confused
03:23 < kaoD> xyxne maybe I'm really sending the data and it's just the stdout 'data' event that's not being fired until the buffer fills ?
03:23 < ChrisPartridge> sinclair|net: not really sure tbh, sounds like a structural problem as per ome's response - maybe check out and see how todomvc create/pass data to views with knockout
03:24 < sinclair|net> ChrisPartridge: well, thats the other thing...
03:24 < sinclair|net> ChrisPartridge: want to see what im working on?
03:24 < sinclair|net> ChrisPartridge: might put this into context somehow
03:24 < ChrisPartridge> sure
03:25 < sinclair|net> ChrisPartridge: you ok with download and running some source from github?
03:25 < sinclair|net> ChrisPartridge: project is here
03:25 < sinclair|net> https://github.com/sinclairzx81/calcium
03:25 < ChrisPartridge> depends how quick it is ;p
03:26 < sinclair|net> pretty quick, download that project, and "node editor.js"
03:26 < piklu_> Angular doesn't seem to have a good server interface
03:27 < sinclair|net> piklu_: i think these sorts of projects are good, but its almost like we need something else
03:27 < sinclair|net> piklu_: something to help structure the page on a whole
03:28 < piklu_> sinclair|net: They are simply not understanding the way developers need them, It is like…..more blah shit blah shit…..and eventually OOPS overtaken by Functional Programming in JS…..MVC could be hurted as well
03:28 < ChrisPartridge> sinclair|net: looks good
03:28 < sinclair|net> ChrisPartridge: well, thanks, but can we talk about it for a moment?
03:29 < piklu_> what is calcium?
03:29 < sinclair|net> piklu_: my attempts at a workable nodejs framework
03:29 < piklu_> UI framework?
03:29 < ChrisPartridge> sinclair|net: sure, but keep in mind, I don't understand why people edit code in browsers, but go ahead
03:30 < sinclair|net> ChrisPartridge: that editor project is just a play around thing
03:30 < sinclair|net> anyway, see the tree on the left?
03:30 < sinclair|net> that is some nested ko models to do that
03:31 < sinclair|net> when a user selects a node on that tree, it "loads" the next node down
03:31 < sinclair|net> which is fine, works well
03:31 < sinclair|net> however, i kinda want that data to be accessible to everything
03:31 < sinclair|net> ChrisPartridge: so, for example that editor on the right, i want it to be a tabbed editor
03:32 < sinclair|net> ChrisPartridge: if i follow the convention used to build the tree, i would store document data as a leaf node to the FileModel
03:32 < sinclair|net> which is ok, its hellishly nested, but its ok, 
03:33 < sinclair|net> ChrisPartridge: so, now i want a model to represent the tabbed editor
03:33 < sinclair|net> ChrisPartridge: for each "open" tabbed, it should reference the leaf node of the FileModel?
03:34 < sinclair|net> ChrisPartridge: all that is fairly trivial, but structuring such things is a nightmare
03:35 < sinclair|net> conceptually, the leaf document node (in the tree) is quite different to the (editor node) i would use on the other side
03:35 < sinclair|net> so, how do i structure this?
03:35 < ChrisPartridge> sinclair|net: in backbone, i generally use an application level event emitter, which ties things like this together
03:36 < sinclair|net> ChrisPartridge: yeah, that is cool and all, but associating the events with node data (in the case of that tree) would be difficult 
03:37 < ome> And for making the data accessiable to everything(? perhaps a bit limited.) I would use a proxy data source, which caches all the requests and on new requests it passes the new, if any,  and all cached data.
03:37 < sinclair|net> Deleting a node in the tree "a file delete" would have the editor close and remove the content in there, which is fine i suppose if they are the same node
03:37 < sinclair|net> but, they are not the same node, 
03:37 < sinclair|net> ome: yeah, its still a bit tricky tho
03:38 < sinclair|net> ChrisPartridge: note, i wrote this entire thing in TypeScript :P
03:38 < ome> 'data = DataProxy.query('give me a'); /* data has something like { queryResponse: 'a', cache: null; }' */ data = DataProxy.query('give me b'); /* data would be { queryResponse 'b', cache: 'a' }' */
03:38 < ChrisPartridge> sinclair|net: i noticed, my machine started emitting weird noises when i pulled the source down :P
03:39 < ChrisPartridge> sinclair|net: in my scenario, the model in the tree and the model in the editor tab, would the same model
03:39 < sinclair|net> ChrisPartridge: yeah, but you run the risk of over populating the data in the nodes
03:40 < sinclair|net> also, tabs a linear, and they would have linear references back to nodes in that tree
03:40 < sinclair|net> if i remove a node in the tree, i also have to inform the linear tab nodes to remove also, as the reference would be gone
03:41 < sinclair|net> ChrisPartridge: i think i should get out the drawing pad and have a think over a coffee
03:42 < sinclair|net> ChrisPartridge: btw, if you look at editor.js, and have a look at the "mount", if you add new storage devices, they will be added to the tree :)
03:42 < sinclair|net> ChrisPartridge: mount.push("application", new calcium.storage.local.Storage({ basepath: __dirname }) ); for example
03:43 < ChrisPartridge> sinclair|net: in backbone, i'd simply remove the model from the collection, but maintain the reference in the editor
03:43 < ChrisPartridge> sinclair|net: yeah, doesn't look half bad for a TS project ;)
03:44 < sinclair|net> ChrisPartridge: what you see there (for the UI at least) took about 2 hours
03:44 < sinclair|net> the rest has taken me months
03:45 < sinclair|net> ChrisPartridge: you can push ftp and amazon devices on the app, then you can live edit stuff up there also
03:45 < sinclair|net> least, thats the plan
03:45 < sinclair|net> ChrisPartridge: the goal is to have something a bit more geared towards TS development 
03:47 < ChrisPartridge> cool
03:48 < sinclair|net> ChrisPartridge: actually a half decent nodejs CMS would be nice
03:48 < ChrisPartridge> sinclair|net: have you seen/played with https://github.com/substack/hyperspace ?
03:49 < sinclair|net> ChrisPartridge: nah, what does it do?
03:50 < ome> There is awful lot of decent CMSes out there, I don't get why it should be on node.js?
03:50 < sinclair|net> ome: well, why not?
03:50 < ChrisPartridge> sinclair|net: take a look at the simple example, essentially streams -> html
03:51 < sinclair|net> ome: in my view at least, there are things node can do out of the box that other platforms can't
03:52 < ome> sinclair|net: Sure, node.js is a pretty decent tool.
03:52 < sinclair|net> ome: also, i tend to think that most cms systems out there, node or otherwise, seem to play on ideas about the web that are decades old
03:53 < ome> I just don't like this, oh, web browsers are cool, lets try to push everything to web browser, or hey, Node.js is amazing. can we port Joomla or X or Y to it. :)
03:53 < sinclair|net> ome: i don't make a habit of using PHP cms platforms
03:54 < sinclair|net> ome: mind you, i used to get down and dirty with commercial .net ones back in the day
03:54 <@tjfontaine> ome: that's a complaint people have across many platforms, people like what they know
03:55 < ome> I am not talking Node.js down, I actually love it. But if your web application isn't cool enough to build it grown up with something like Express and a Client side application.
03:55 < ome> Maybe you should just stick with the already working tools out there.
03:55 < sinclair|net> ome: i don't use express
03:55 < ome> client side framework.*
03:55 <@mbalho> you guys use node to make web apps? haa ha ha h ahah
03:56 <@tjfontaine> mbalho: that's sorta how I feel
03:56 < sinclair|net> mbalho: its where the money is
03:56 < mmalecki> I use node to host web apps, yo
03:56 <@tjfontaine> mmalecki: you're too busy wanting 1st class closures in C
03:57 < mmalecki> tjfontaine: *I use uv-based stuff to host web apps ;)
03:57 <@tjfontaine> hehe
03:57 < ome> I actually built a robot with Node.js too, if that counts.
03:57 < sinclair|net> mbalho: node is good at pushing data around, and doing a bunch of clever things, its nice to be able to bang a UI on that
03:57 < ome> But yeah, I most make web apps. not very cool. but hey, it pays my bills. :-)
03:58 < ome> mostly*
03:58 < AAA_awright> Node.js is good for... Wait for it... asynchronous I/O
03:58 < ome> Not only I/O.
03:58 <@tjfontaine> war, huh, what is it good for
03:58 <@mbalho> absolutely MVC
03:58 < AAA_awright> ome: I mean comparatively
03:59 < AAA_awright> It hasn't demonstrated to be so friendly towards Web, even though it's ECMAScript
03:59 < ome> tjfontaine:  war is good for militray companies. duhhh.
03:59 < sinclair|net> AAA_awright: asynchronous IO is such a mute point about node, sure it does it, but it doesn't make the application
03:59 < ome> #Politics?
03:59 < sinclair|net> AAA_awright: also, its not as through nodejs makes it easy
03:59 <@tjfontaine> *moot
03:59 < sinclair|net> yes, thank you
04:01 < ome> Now, I am came here for something.
04:01 < ome> Oh yeah, anyone knows of a PulseAudio binding for Node.js? or some other audio pickup, I want to stream my system audio over web so I can use my phone like a wireless headphone.
04:01 < ome> Yo.
04:02 <@mbalho> ome: substack wrote libsox bindings, dunno if that does that though
04:02 <@tjfontaine> I'd vote for JACK over pulse myself, but I think indutny had some
04:02 < AAA_awright> sinclair|net: Oh also, https://magnode.org/ It's not as if these highly generic applications are written overnight, but they come along slowly and surely
04:03 < ome> tjfontaine: Same here, but a lot of projects like Gnome has dependency on PulseAudio. :/
04:03 < sinclair|net> AAA_awright: oh, im writing a CMS also
04:04 <@tjfontaine> ome: https://github.com/indutny/vock
04:04 < AAA_awright> sinclair|net: I believe we discussed that some, did you provide a link?
04:04 <@tjfontaine> ome: in particular https://github.com/indutny/vock/blob/master/src/audio/platform/linux.cc
04:04 < sinclair|net> AAA_awright: its no where near finished, i've hardly started
04:05 < ome> Thanks heaps tjfontaine, I will give it ago. And oh yeah, it has `#include <pulse/pulseaudio.h>`
04:06 < ome> a go*
04:06 < AAA_awright> sinclair|net: What ideas do you have for yours, any in particular?
04:06 < sinclair|net> AAA_awright: it will manage content
04:06 < AAA_awright> Interesting
04:07 < sinclair|net> AAA_awright: also, it will let users upload images and stuff
04:07 < AAA_awright> sinclair|net: Like, how? What target platforms? etc
04:07 < sinclair|net> AAA_awright: yeah, going to use HTTP for most of it
04:08 < AAA_awright> I'm trying to stay generic, targeteting the filesystem, document databases, relational databases, and RDF databases... Quite a lot to ask
04:09 < sinclair|net> keeping it simple is important
04:09 < sinclair|net> but extensible is more important
04:09 < sinclair|net> AAA_awright: im writing it in TypeScript
04:10 < sinclair|net> AAA_awright: the intention is to have a platform that can act as a CMS, as well as layer existing systems
04:10 < AAA_awright> At some times it's quite easy to lose grasp of what "simple" means
04:10 < sinclair|net> AAA_awright: well, given i have started at the compiler, and worked my way up, yeah, i get lost in complexity
04:11 < sinclair|net> AAA_awright: i am also not using community modules
04:11 < AAA_awright> People've asked me "So what's your stack" "Um, Nginx, Linux, ..."
04:11 < AAA_awright> "No like, Express?" "No, just Node.js"
04:12 < sinclair|net> i don't touch express
04:12 < AAA_awright> Particularly because Express doesn't grasp such concepts as resources, or the opaque nature of URIs
04:12 < AAA_awright> I'm still having trouble with resources right now, you'd think DELETE support would be easy, right?
04:13 < sinclair|net> AAA_awright: that and i think its way too limited what what i need it for
04:13 < AAA_awright> Yeah, I won't make any assumptions about what people can and can't do
04:13 < Havvy> "too limited for what I need"
04:13 < Havvy> Not "too limited for what I need it for"
04:13 < AAA_awright> You sould be able to do it, period
04:14 < sinclair|net> Havvy: go away 
04:14 < AAA_awright> You want to upload an indefinite amount of content? Sure, I handle that
04:14 < sinclair|net> unless of course, you have done something else with TS lately
04:14 < ome> I wish I could just use Assemably to write my web applications, but darn it, "Ain't no body got time for that."
04:14 < AAA_awright> Don't know why, but I do
04:14 < ome> I use Express becaue of the connect underneath it, and there is a middlewear for pretty much everything. :)
04:15 < AAA_awright> ome: I've found it's very poorly written
04:16 < ome> AAA_awright: My clients are more concerned with deadlines and so long as it work, that is all about it.
04:16 < sinclair|net> AAA_awright: me too
04:16 < ome> But what exactly is wrong about it Express though?
04:16 < peterlubiana> Does anyone know what the downsides of using MongoLab's free cloud-database service as a part of a node.js app? Can they like.. access / use / sell my data if i use it?
04:16 < ome> Like, no assest mangment?
04:17 < ome> peterlubiana: If you have data that can be turned into money, get a paid service. :)
04:17 < ChrisPartridge> peterlubiana: check their terms, most likely don't gaurantee availability/performance of any kind
04:17 < ome> Man, maybe I should leave here before I get kicked out for being such a pragmatic jerk. :P
04:17 < peterlubiana> Fair enough, so I most likely should not trust anyone offering free hosting!
04:17 < sinclair|net> ome: there is nothing wrong with express per-say, rather, its limited
04:18 < AAA_awright> That's the other thing I can't stand
04:18 < AAA_awright> Pragmatism *shudders*
04:18 < peterlubiana> Thx for the answers, appreciate it!
04:18 < ome> Fair enough, then you might enjoy flatiron, but it was too much of work to put it togather, I ditched a project halfway.
04:19 < ome> AAA_awright: but you can't deny it that no pays you write good code, they pay you solve a problem.
04:19 < ome> no one*
04:19 < AAA_awright> ome: I'm solving problems for the long-term, decades or centuries out. Little things *matter*
04:20 < sinclair|net> AAA_awright: ill tell you one thing tho
04:20 < AAA_awright> True that I'm not writing the code so much as designing something
04:20 < AAA_awright> It's the design that has to hold up
04:20 < peterlubiana> Hey, i'm using Digital Ocean for hosting my Node.js app, how the =)("!=)#( can they be so cheap?
04:20 < sinclair|net> AAA_awright:  a modern CMS platform should be just as capable at serving web pages as it is serving webgl content
04:21 < AAA_awright> sinclair|net: I don't even claim to do HTTP, Magnode "formats resources"
04:21 < ome> Grrr. I want my tool slim, do very little, do it right.
04:21 < AAA_awright> That's the quintessential use-case right there (maybe not WebGL specifically, but that sort of area)
04:22 < AAA_awright> peterlubiana: Link?
04:22 < sinclair|net> AAA_awright: that and serving audio content... 
04:23 < sinclair|net> https://s3-ap-southeast-2.amazonaws.com/sinclair-media/music/sinclair_blues_stuff.mp3 <-- so i can release me album on it
04:23 < peterlubiana> link to their company : https://www.digitalocean.com
04:23 < peterlubiana> Or did you want a link to something else ?
04:24 < ome> sinclair|net: But there is another issue, with serving web pages and webgl content with same application, scaling, for example a GPU would be a much better tool for webgl processing but of course a CPU works better for text processing.
04:25 < sinclair|net> ome: wrong
04:25 < ome> Catching is an issue too.
04:25 < ome> sinclair|net: Perhaps, how so?
04:25 < AAA_awright> sinclair|net: What's an example you have in mind?
04:26 < AAA_awright> peterlubiana: Ahhhhhh the API is all done by GET
04:26 < AAA_awright> Ahhhhhhhh
04:26 < sinclair|net> ome: the idea is not to let nodejs do complex geometry, rather, to let nodejs handle bundling assets, and data structures to be passed to the page for rendering, the concept is analogous to packaging assets and resources for a page
04:27 < sinclair|net> ome: for example,. packaging all the assets to render this -> http://sinclair-zx81.appspot.com/
04:27 < peterlubiana> Forgive me for being a newbcake AAA_awright.. But what's up ? You're analyzing how Digital Ocean built their service ? XD
04:28 < sinclair|net> without manually coding "all the bits"
04:28  * sinclair|net is in your codez, coding all your bitz
04:28 < AAA_awright> peterlubiana: Yes. If someone doesn't understand the difference between POST and GET dear Lord I'm not trusting them with my data
04:29 < ome> sinclair|net:  'Uncaught TypeError: Cannot call method 'clearColor' of null three.js:272'
04:29 < ome> Can't create WebGl context. I guess my Driver is broken.
04:29 < peterlubiana> Did you check the headers being sent while sending a pw from a form or something? How did you know that they use GET?
04:29 < peterlubiana> ARETH THOU A WIZARD!?
04:30 < sinclair|net> ome: use a better browser, or get updated graphics card drivers
04:30  * sinclair|net recommends chrome
04:30 < ome> I am using Chrome, lastest version.
04:30 < ome> And tried FF too.
04:30 < ome> My driver is broken.
04:30 < AAA_awright> peterlubiana: API link at the bottom of the page, https://api.digitalocean.com/
04:30 < sinclair|net> yes, it sounds that way
04:31 < AAA_awright> sinclair|net: Yeah same here, I use Chrome, no WebGL
04:31 < neeky> they cant stay in business too long at $5/mo with 20gb SSD
04:31 < AAA_awright> Very bleeding edge
04:31 < sinclair|net> c'mon, its 2013
04:31 < AAA_awright> Compile it myself
04:31 < AAA_awright> *Chromium I should say
04:32 < ome> Does anyone knows of a driver for Linux that supports WebGL for chrome or anyother browser
04:32 < neeky> GET is ok in REST, i don't see anything requiring POSTed data in their API
04:32 < peterlubiana> Hey forgive me for my hilarious noobness, but: How can i direct a text at a person lole AAA_awright is doing? ( is jealous of his skillz)
04:33 < peterlubiana> like* obviously
04:33 < neeky> peterlubiana, like that?
04:33 < AAA_awright> peterlubiana: Like that
04:33 < peterlubiana> yes lord stop teasing my :'-(
04:33 < peterlubiana> me **
04:33 < neeky> just type part of his nick and hit tab
04:33 < peterlubiana> DO I HAVE TO LLOK IT UP!?!?
04:33 < peterlubiana> LOOK*
04:34 < ome> peterlubiana: like this?
04:34 < peterlubiana> ( lord jesus have mercy on my spelling mistakes )
04:34 < AAA_awright> I have like, the easiest name to tab-complete in the world
04:34 < peterlubiana> AAA_awright: hey girl
04:34 < peterlubiana> I DID IT!
04:34 < ome> lol ^
04:34 < neeky> peterlubiana, I just told you, type part of his nick then hit tab
04:34 < ome> I don't think people even need a tab for my name. :)
04:34 < peterlubiana> neeky: Hi Neeky. You taught me something.
04:34 < AAA_awright> the only way it could get any easier is if I was QQQ_awright
04:34 < neeky> peterlubiana, welcome to IRC, you are now 733t
04:35 < neeky> or l337
04:35 < neeky> i forget - im not too l337
04:35 < AAA_awright> we r 1337 haxx0rz
04:35 < neeky> OMGWTFBBQ!!11
04:36 < peterlubiana> Thx! This is my first IRC'ing since I was a lil kid. Me and my older bro tried to make ppl send pictures of them ( back in -97 ) but all we got was porn. This is Not the same as how i remember it. This version is more.. intellectually stimulating. XD
04:36 < neeky> porn on IRC? never
04:36 < neeky> ill bet you used mirc too
04:37 < peterlubiana> neeky: I dont know if that was irony, but yea we used mirc.. That is correct my good woman / man / A.I
04:37 < neeky> there are around 22000 channels on this server - there's porn ifn you want it
04:37 < neeky> heh
04:37 < neeky> luck guess
04:37 < peterlubiana> Yea i'll stop polluting this precious channel with my anecdotes of childhood.
04:37 < AAA_awright> There was once a young vegan named Hugue
04:37 < AAA_awright> Who picked up the wrong sandwitch to chew
04:37 < AAA_awright> He took a big bite, then spat out in fright
04:38 < AAA_awright> "OMG, QTF, BBQ?!?"
04:38 < peterlubiana> t
04:38 < peterlubiana> QTF
04:38 < AAA_awright> *WTF
04:38 < peterlubiana> Omggg i tried to be a douche but i failed..
04:38 < peterlubiana> So deserved..
04:38 < AAA_awright> WTF wth
04:38 < AAA_awright> Bah I can't typo a typo correctly
04:38 < peterlubiana> XD
04:39 < peterlubiana> AAA_awright: What a dry, though quite funny joke XD
04:39 < neeky> GAH, trying to debug some other guys half assed express/mongoose form lib
04:39 < neeky> express render just goes into a black hole in the debugger
04:40 < peterlubiana> Hey does anyone know of a good IRC-channel for php? #php seems to be fawking blocked by demaning an invite.
04:40 < AAA_awright> peterlubiana: ##PHP on Freenode
04:40 < AAA_awright> iirc
04:40 < neeky> step into var result = templateSpec.call(container, Handlebars, context, options.helpers, options.partials, options.data); and it never returns
04:40 < ChrisPartridge> peterlubiana: might need to register with freenode
04:40 < AAA_awright> peterlubiana: Unofficial channels about a topic have two hashes, on Freenode, as a naming policy
04:40 < neeky> peterlubiana, type /msg NickServ help
04:41 < peterlubiana> neeky: I feel with you.. I havent yet started writing anything hardcore with express, but i understand it can be quite sick to debug.
04:41 < neeky> it will walk you through registering
04:41 < peterlubiana> node.js in general?
04:41 < peterlubiana> Can i register to Freenode on their website ?
04:41 < peterlubiana> aha
04:41 < neeky> peterlubiana, ^^^
04:42 < neeky> do it right in irc
04:42 < peterlubiana> I did but i'm just left at the prompt :'-(
04:42 < neeky> it will send you an email, click the link in the email, and poof - your nick is registered and reserved
04:42 < neeky> what irc client are you using?
04:43 < peterlubiana> I'm using erc in emacs terminal version :D 
04:43 < neeky> you should have another chat session open with NickServ somewhere
04:43 < neeky> I dont know how it works in emacs though
04:44 < peterlubiana> Forgive me.. I found a buffer in my program related to the command. It silently opened a new prompt related to the /msg blahblablah commmand ! Thx *doing some work there*
04:46 < peterlubiana> I DID IT :D
04:46 < peterlubiana> neeky: Thank you.
04:47 < peterlubiana> This name is rather ungeeky though. I would kinda like to.. pimp it, anyone know how i cn do that ?
04:50 < AAA_awright> neeky: REST requires hypertext, and I'm talking about stuff like restarting the server using GET
04:51 < peterlubiana> neeky & AAA_awright : Thx fot helping me it all works now!
04:51 < peterlubiana> for*
04:53 < peterlubiana> I cant see anyones messages all of a sudden :'-( Cn anyone help me with this issue by sending me a short mail to peterlubiana@gmail.com :'-( *cries*
04:54 < peterlubiana> I just registered an irc username and pw :'-(
04:54 < AAA_awright> ?
04:54 < peterlubiana> There.. Oh it was just silent here.
04:54 < peterlubiana> Seems like all is good
04:59 < minimalist> What kind of hosting do you guys use for your personal node.js projects ?
05:00 < nightfly> realllly cheap
05:00 < ChrisPartridge> minimalist: localhost is pretty cheap
05:01 < minimalist> Yea, its pretty fucking fast too! Just that it seems to ALLWAYS be down when i try to access it on another comp. Probably just bad luck ofc !! 
05:02 < ssafejava> minimalist: there are tons of them, serverbear.com is one of my favorite comparison services
05:02 < minimalist> Sweet checking it out!
05:03 < ChrisPartridge> I got to a point where i was starting several small vps, so just got a cheap dedi and chucked smartos on it
05:03 < minimalist> ssafejava: Fuck what a sweet resource in serverbear.com thx!!
05:04 < minimalist> ChrisPartridge: Makes sense after a while i guess to go dedi.
05:07 < ssafejava> minimalist: be sure to check out the coupons, they had a great digitalocean coupon a while ago that would give you a 20GB SSD server for $40/yr
05:08 < nightfly> buyvm.com when they have stock
05:08 < minimalist> ssafejava: Thx so much. I dont have to be from USA to use the cupons right ? ( norwegian bloke here )
05:08 < nightfly> which doesbuyvmhavestock.com can help you with
05:08 < ssafejava> minimalist: I doubt it but I'm sure it's case by case
05:13 < minimalist> nightfly: Thx for the tips
05:14 < minimalist> ssafejava: Hope so! I got Digital Ocean right now. Its okay.. But feel like i could get a better deal! So tyy
05:15 < minimalist> Fuck do i love Irc, i've been using it now for 1 hr and i've gotten SO many answers YEA!
05:16 < ome> minimalist: I guess you know about StackExchange, if not, you really should.
05:19 < olalonde> how does node.js handle recursive dependencies?
05:20 < olalonde> in what order are files executed?
05:20 < AAA_awright> olalonde: It works, but it's... complicated. Consult the documentation.
05:20 < olalonde> ok
05:21 < olalonde> I'm getting  TypeError: Object #<Object> has no method 'save'
05:21 < olalonde> seems to be related to the fact that i have circular dependency
05:21 < minimalist> ome: No i didnt, thx for informing me!
05:23 < minimalist> StackExchange is insane.
05:23 < minimalist> Thx again Ome
05:23 < ome> Yo, Welcome to the good side of the web. haha.
05:24 < ome> check out Github too.
05:25 < minimalist> Yea i've heard of GH XD.. thx anyways for pointing me in a good direciton :D
05:26 < ome> You're welcome.
05:37 < ome> I hate websites that tie their appliction logic with analytic/advertisment tools. >.<
05:39 < oinkon> how do i do the equivalent of a try, catch, and retry with a callback driven error?
05:40 < ome> oinkon: Example please, but you might want to look into Promise or Fibers.
05:41 < oinkon> soemthing like this: query(function (error, rs) { if (error) { retry_somehow(); }  for (result in rs) { do_stuff } });
05:42 < ome> oinkon: Most API's call back take an error handler as parameter.
05:42 < ome> callback*
05:42 < ome> wait.
05:44 < oinkon> this is for a mongo db query with the native driver. the api doesn't seem to have an error handling callback. it just has that error parameter.
05:45 < oinkon> i need to catch a certain error when a replicaset node goes down and retry it.
05:46 < olalonde> weird… why doesn't async.each accumulate results
05:46 < olalonde> ah I guess I had to use async.map
05:46 < oinkon> i guess i could just store the callback in a variable
05:47 < oinkon> and recursively invoke it
05:47 < oinkon> if (error)
05:59 -!- mode/#Node.js [+o TooTallNate] by ChanServ
06:01 < ome> oinkon: I think you would have to create a named function with a 3rd paramter as recursion flag.
06:01 < ome> named method*
06:01 < ome> But then again, "Do or Do not. There is no try." :P
06:02 < ome> and you would do if(error && recuresion) funciton_name(err,rs,false) .....
06:06 < ssafejava> oinkon: you could do something like `query(params, handleQuery); function handleQuery(err, result){ if(err) return setTimeout(function() query(params, handleQuery);}, 100); // handle results };
06:12 < qrada> im stracing node, why are there so many gettimeofday syscalls. just wondering.. im seeing at times, 10 consecutive
06:17 < qrada> curious about this.. http://hastebin.com/jayarogudo.tex, anyone have some info on that?
06:21 < ssafejava> qrada: Maybe you're running something like node-toobusy?
06:22 < mscdex> qrada: it's used for timers i believe
06:22 < qrada> never heard of that hah.. nah this is a pretty minimal code, which is using express.. it might be express because of the http headers but i just dont get all of the back to back gettimeofday calls
06:23 < qrada> btw that isn't going on all of the time, only when serving up http requests etc.. so it's pretty quiet for the most part.
06:23 < ssafejava> qrada: Maybe caching headers?
06:24 < mscdex> it may be used with Date too
06:28 < qrada> ya
06:31 -!- mode/#Node.js [+o TooTallNate] by ChanServ
06:42 < qrada> i might have a buggy nodejs.... 0.10.9.. i just ran a simple loop that someone else ran, i had thousands of brk's and it ate up my memory.. his ran fine
06:49 < qrada> any crazy node.js developers awake, experienced with the v8 engine? myself and someone else are experiencing some weird memory hogwhen running a simple loop...
06:58 < SomeoneWeird> qrada, what's the code?
06:58 < qrada> http://hastebin.com/folavayepo.js
06:58 < qrada> that destroys my box with node 0.10.9.. on his box 0.10.11, it's slowly eating up lots of memory
07:01 < SomeoneWeird> qrada, and you're surprised?
07:02 < qrada> ? yes? the equivilent in C wouldn't eat up memory... im confused how that eats up memory
07:03 < SomeoneWeird> and what would C do when i hits max_int?
07:03 < qrada> his process never hit max_int....
07:03 < qrada> it was well under max_int..
07:07 < qrada> the equivilent C code isn't eating up any memory, as expected
07:11 < ckknight> qrada: the creation of strings would be memory usage, they would be caught by the GC eventually.
07:12 < qrada> wouldn't their 'context die' during each consecutive pass in the loop though? well.. i have some micro aws instance, and that code brought all of the memory down to 5M free.
08:31 < olalonde> is websql dead?
08:49 < jesusabdullah> olalonde: what is websql?
08:50 < olalonde> was a proposed standard but apparently its deprecated
08:50 < olalonde> W3C standard
08:50 < olalonde> I think it's been replaced by IndexedDB/localStorage now
08:50 < jesusabdullah> yeah, probably
08:58 < olalonde> http://www.w3.org/TR/webdatabase/
08:58 < olalonde> dead -_-
09:59 < Multiply> Is there a way to create a https server, with multiple certificates / keys? One per hostname/group of hostnames, or *.hostname, possibly?
09:59 < jump> I dont understand how socket.io works 
09:59 < AAA_awright> Multiply: It's a fairly recent feature in TLS, curl doesn't support it for instance, and I'm not sure Node.js does
10:00 < AAA_awright> jump: Welcome to the club
10:01 < AAA_awright> olalonde: What are you looking to do with the SQL API?
10:02 < AAA_awright> olalonde: IndexedDB is, I think, a far more interesting API
10:02 < olalonde> yeah
10:02 < AAA_awright> Besides being one not produced by Hixie
10:02 < olalonde> would just have been nice if my ORM would automatically support websql
10:02 < olalonde> but its pretty dead now so I'll have to write an IndexedDB adapter
10:03 < olalonde> I guess it won't be much different from my internal memory adapter that i use for testing
10:03 < AAA_awright> You can still borrow from the draft
10:03 < AAA_awright> Even the drafts are usually better written than anything else on the Web
10:04 < jump> AAA_awright In my client side i say === > var socket = io.connect('http://80.79.30.35:1337'); ...From server Side it gets the io variable.... Freaks me out
10:04 < jump> AAA_awright http://socket.io/#how-to-use
10:07 < olalonde> yeah
10:07 < olalonde> but there's no point really in supporting websql if it's now deprecated
10:07 < olalonde> I'm at 146 tests now, yay!
10:10 < saebekassebil> quick nom question: I've added a "prepublish" script that builds my library - but the file built doesn't get included when I do a "npm publish" - how come?
10:10 < saebekassebil> npm*
10:11 < jump> Is it possible to execute C++ program from Node at runtime
10:11 < jump> ?
10:11 < jump> At some specified time ?
10:12 < saebekassebil> jump: Take a look at child processes: http://nodejs.org/api/child_process.html
10:13 < olalonde> jump: sure
10:13 < olalonde> jump: also there is no such thing as a C++ program… they are usually compiled to machine code :)
10:15 < jump> olalonde There is no Computer language in the world ... Only language exist are  1 and 0 ... high and low
10:15 < olalonde> yep :)
10:15 < jump> :D
10:15 < olalonde> there are only electons moving around
10:17 < olalonde> obligatory xkcd: http://xkcd.com/378/
10:19 < coincoin> hello all, do you know if v0.8.25 is affected by CVE-2012-5120, CVE-2012-5128, CVE-2012-5153, CVE-2013-0836, CVE-2013-2632 (for v8: fixed upstream in 3.13.7.5)
10:20 < _appu> Hey, What is the V8::Value class for Hash? Is it Object?
10:20 < standoo> genatz
10:24 < jump> Is it V8 or VM ???
10:26 < tsunamie> hi guys, I am new to node.js - I am having problems with  handling forms. I want to create a form that shows up when I go to localhost:3000/new. I have a ejs file with the form and I created a route for when the form posts the data to /create. However when I go to localhost:3000/new it says 404. Is there something I need to add to my app.js file to make it awarew of my new page?
10:27 < tsunamie> aahhh never mind
10:27 < tsunamie> I needed to add a route with the corisponding rout handeller
10:30 < jump> How to do file upload in  node.js through browser ? .
10:30 < phrearch> hi
10:31 < jump> I need to upload csv file
10:32 < saebekassebil> jump: Just use a regular file form?
10:32 < saebekassebil> <input type="file">
10:32 < saebekassebil> So guys what does the 'files' field in package.json actually do?
10:32 < jump> I know that saebekassebil  after that how to get the file in node.js
10:34 < saebekassebil> jump: do you use Express?
10:35 < saebekassebil> jump: If not, you should take a look at the "node-formidable" module - It's quite simple to use
10:43 < spion> I would use JSON for config files, but its a bit lacking for end-user editing (no comments, very sensitive to commas and quotes...). What do you recommend?
10:44 < spion> yaml maybe...
10:51 < tsunamie> note sure what is wrong. in my app.js file I have var routes = require('./routes'). In my index.js for my route I have placed exports.neweform = function ( req, res ){
10:51 < tsunamie>         res.render( 'neweform', {
10:51 < tsunamie>         title : 'CC Alpha site'
10:51 < tsunamie>         });
10:51 < tsunamie> };
10:51 < tsunamie>  Hwoever it's not showing up I get GET /new 404 10ms
10:52 < tsunamie> does anyone know what is wrong?. It's a simple form thats called neweform.ejs
10:57 < overra> tsunamie: did you bind it? app.get('/new', routes.neweform)?
10:57 < tsunamie> I do have that line in app.js if thats what you mean by bind
10:58 < tsunamie> I have that route statment within my app.js
10:58 < overra> hmm
10:59 < overra> can you paste it somewhere?
11:00 < tsunamie> doing so noe in pastebin
11:02 < tsunamie> overra - http://pastebin.com/QA4a53CC
11:02 < tsunamie> that all 3 files. route, app.js and the neweform.ejs
11:03 < tsunamie> creat.ejs is http://pastebin.com/tU5mBxGW
11:04 < tsunamie> everra - brb just getting called away. Feel free to message me directly
11:17 < tsunamie> overra - guess you can't spot anythuing?
11:17 < overra> oh just msged you
11:19 < tsunamie> overra - your right corrcted and it works
11:19 < overra> awesome ;)
11:20 < standoo> is nodejs only good for simple apps?
11:20 < tuhoojabotti> wow
11:20 < tuhoojabotti> good job people
11:21 < tuhoojabotti> This might lag a bit: http://lahdenvuo.info/irc/#node
11:21 < overra> lol nice
11:23 < overra> tuhoojabotti: is there anyway to clean it up to see relationships? maybe highlight connections when you click a dot
11:23 < olalonde> standoo: no
11:23 < tuhoojabotti> overra: Good idea, I will implement better heuristics and relationship decay and and
11:23 < tuhoojabotti> When I have time.
11:24 < tuhoojabotti> overra: I did that yesterday afternoon.
11:24 < bnoordhuis> standoo: try rewording your question if you want a serious answer
11:24 < tuhoojabotti> And left it running for the night.
11:24 < overra> tuhoojabotti: ah
11:26 < standoo> bnoordhuis: can i write wordpress in nodejs?
11:27 < tuhoojabotti> overra: Small communities can be interesting too: http://lahdenvuo.info/irc/#mc
11:27 < overra> tuhoojabotti: thicker line = more interactions?
11:27 < bnoordhuis> standoo: sure. is wordpress your idea of a complex application?
11:28 < tuhoojabotti> overra: Yeah
11:28 < standoo> bnoordhuis: yes
11:28 < tuhoojabotti> overra: You can see, I had to explain viltzu how to install node and run this project. :D
11:28 < bnoordhuis> standoo: then the answer is a definite yes
11:29 < standoo> bnoordhuis: will the design be just one single node process or multiple node processes?
11:29 < olalonde> tuhoojabotti: that's pretty cool! 
11:29 < tuhoojabotti> olalonde: Thanks
11:29 < olalonde> tuhoojabotti: I guess relationships are based on when you mention someone in a message?
11:30 < bnoordhuis> standoo: could be either
11:30 < tuhoojabotti> olalonde: Nope, I only have a very simple heuristics implemented, adjacent messages.
11:30 < rud> i'm about to dive into mangoose, any must-use plugins you'ld advise ?
11:30 < olalonde> tuhoojabotti: ah that's cool
11:30 < tuhoojabotti> olalonde: I need to write more of these: https://github.com/tuhoojabotti/NodePieSpy/blob/master/heuristics/adjacency.js
11:30 < olalonde> why is my node so big haha
11:30 < tuhoojabotti> olalonde: You spam a lot. ;-)
11:30 < overra> lol
11:31 < olalonde> I talk too much maybe :(
11:31 < olalonde> very cool anyways
11:33 < tuhoojabotti> http://lahdenvuo.info/social/node.json Here's the data from tonight.
11:33 < olalonde> pretty cool
11:34 < tuhoojabotti> olalonde: You weight 188, fattie.
11:34 < tuhoojabotti> :P
11:34 < olalonde> I drank too much Node.js-aid
11:34 < olalonde> :D
11:35 < olalonde> would be nice to analyze the projects on Github and cluster people who contribute to the same projects
11:35 < olalonde> I know it's not really related to your project but just an idea
11:37 < JohnMcLear_> tuhoojabotti: does that take into account reconnects with a suffix'd nick
11:37 < JohnMcLear_> ?
11:38 < tuhoojabotti> JohnMcLear_: It doesn't, yet.
11:38 < tuhoojabotti> There's only so much you can do in an afternoon.
11:53 < Torsten> i'm using cluster module and would like to open a connection to mongodb in the master and share that connection with the workers. is this possible? how to provide the connection handle to the workers?
11:56 < coincoin> hello all, do you know if v0.8.25 is affected by CVE-2012-5120, CVE-2012-5128, CVE-2012-5153, CVE-2013-0836, CVE-2013-2632 (for v8: fixed upstream in 3.13.7.5)
11:58 < aandy> i'm looking into buying a wildcard cert for a node project of mine, but other than that there's a variety of info which i'm fairly indifferent to. anyone have especially nice experiences with a certain reseller?
11:59 < prawnsalad> aandy: ive used the comodo wildcard certs from namecheap.com without issue
12:00 < prawnsalad> i say without issue.. took a bit of fiddling aorund on formatting the resulting certificate correctly, but thats probably down to my lack of knowledge
12:01 < aandy> been looking at that aswel (also namecheap guy). fair enough, thanks :) 
12:01 < d4tech> hey guys
12:01 < d4tech> there is this problem im facing
12:02 < prawnsalad> turn around
12:02 < d4tech> im trying to add MVC style to my express app.js
12:04 < d4tech> http://pastie.org/8051644
12:05 < d4tech> the require statement near to the end marked with an arrow is giving me trouble http://pastie.org/8051644, i'm trying to make an MVC
12:06 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:06 < aandy> prawnsalad: it covered bare aswel, right? (http://example.com)
12:07 < d4tech> can smbody help me..
12:07 < prawnsalad> aandy: yea, it comes with 2 certs
12:07 < prawnsalad> one for the domain, then another for any under that domain
12:08 < aandy> ok, great. thanks
12:16 < armetiz> hi there
12:16 < armetiz> I have a PHP project that dependend on Node module (assets management)
12:16 < armetiz> So I have created a package.json, and I'm using "npm update" to download all the node dependencies
12:17 < armetiz> problem is, I don't defined any repository to this application
12:17 < armetiz> and npm throw some errors
12:29 < PROUSER> Hi, kinda missed the update to Twitter REST API, is there any up to date module that allows node to authenticate users and make tweets ? twitter-oauth only does the authentication
12:30 < chirag> I get error while doing return scope.Close(String::New(uuid_value));
12:30 < chirag> error is : unction not viable: no known conversion from 'unsigned long long' to       'const char *' for 1st argument
12:30 < chirag> anyone?
12:50 < hipsterslapfight> oh god AWS S3 is not as fun as everybody promised it would be :(
13:03 < sinclair|net> hipsterslapfight: oh?
13:04 < hipsterslapfight> false alarm ... nobody ever tells you if you're not in the US you have to pass regions around all the time!
13:26 <@MI6> joyent/node: Ben Noordhuis v0.10 * 41fc46e : v8: add setVariableValue debugger command - http://git.io/ovZSiA
13:38 < randomlurker> How do I specify hostname for a Restify server?
13:38 < randomlurker> My server keeps showing me that port is already in use. 
13:38 < randomlurker> I checked all ports and the port that I run the server on was not used by any application
13:38 < randomlurker> !help
13:40 < jas-> Check your process list as it may have not released the file handle on the unix socket in question... netstat -anp will show you the list of open ports, which should show you the port your trying to bind to
13:40 < jas-> *in an open state
13:41 < qrada> are you running a simple node app or are you running within a framework?
13:41 < randomlurker> simple node app
13:42 < randomlurker> rest api testing
13:42 < jas-> randomlurker: 99% certain your app crashed without closing the flock on the port you are trying to bind to on application reload
13:42 < qrada> ah ok.. sometimes frameworks restrict you from binding when in dev mode, that's why i asked.. ok so, telnet to that porton localhost.. telnet localhost <thatport>, see if it can connect..
13:42 < randomlurker> By default the server listens on 127.0.0.1 I want it to listen on 0.0.0.0
13:43 < bnoordhuis> randomlurker: 0.0.0.0 is the default
13:43  * randomlurker checks
13:44 < randomlurker> jas-: I'm not able to understand what you're trying to say
13:45 < qrada> i didn't know node would 'flock' a socket fd? i'd assume it wouldn't, odd
13:45 < bnoordhuis> qrada: it doesn't
13:46 < jas-> bnoordhuis: It doesn't?
13:46 < bnoordhuis> no
13:46 < bnoordhuis> you can't flock a socket, only files
13:47 < bnoordhuis> never mind that flock() isn't available on all platforms :)
13:47 < qrada> ya, node's backend simply bindsthe socket.. if it crashes and you still can'tuse thatsocket, that's just a 'timeout'.. in C you'd use setsockopt SO_REUSEADDR etc.. so im assuming node already does that.. but simply binding to that port will 'lock' that socket because you can't bind to the same port again in another proess etc
13:47 < jas-> randomlurker: Well I stand corrected. I did however run into a similar problem where the application terminated and put the socket into an open/wait status at which time I had to track down the process id and manually stop it
13:47 < qrada> ya that's diff tho.. that'll eventually timeout etc.
13:48 < randomlurker> jas-: ah okay. But I checked with other ports too. Same error :\
13:48 < bnoordhuis> qrada: that node.js does (set SO_REUSEADDR, that is.)
13:48 < qrada> yai would assume so
13:49 < qrada> hastebin.com your code random
13:49 < jas-> randomlurker: Is it currently running? Your application that is
13:49 < randomlurker> finally, tried with another port, worked
13:49 < randomlurker> I don't know what went wrong. I tested it locally it worked, but gave me issues when I tried to start it on server
13:50 < tsunamie> hey guys, out of curiosity, How do you handel relation objects in Nodejs and mongodb? Like say you have a user and your have roles as one fo the fields. How do you link that user to multiple roles like system admin or user?
13:50 <@MI6> joyent/node: Fedor Indutny master * 212e9cd : tls: session API returns - http://git.io/wW37_g
13:51 < jas-> bnoordhuis: So does node not use any type of mutex locking?
13:51 < bnoordhuis> jas-: for sockets? no, the OS takes care of that
13:54 < jas-> bnoordhuis: I think I was confused with mutex locks vs. non-blocking sockets, sorry
13:56 <@MI6> joyent/node: yuanchuan v0.10 * 73b4113 : readline: make `ctrl + L` clear the screen - http://git.io/y8tOQw
13:58 <@MI6> joyent/node: Yuan Chuan v0.10 * 18574bf : readline: make `ctrl + L` clear the screen - http://git.io/8vyfmA
14:08 < eitanp461> Hi, are there any known issues with Node packages availability?
14:09 < eitanp461> I am getting npm ERR! code EIO 
14:09 < eitanp461> And npm ERR! errno 55
14:11 < bnoordhuis> eitanp461: that's probably a local issue. can you gist npm-debug.log?
14:14 < FloLeBlanc> hi all
14:15 < momomomomo> Mornin FloLeBlanc 
14:15 < FloLeBlanc> I'd like to set up a quick test environment on windows. I installed the node.js binary - works well. Now I'd like to connect to either a mysql server (locally) / mssql server (locally) or azure (remote) - can someone give me a hint on which library to use then please? (should just be a quick dev environment to try some things not for production use)
14:16 < Trangar> FloLeBlanc, I'd suggest installing tedious (cmd -> "npm install tedious") and then using that, https://npmjs.org/package/tedious
14:16 < Trangar> I use that for my azure and mssql databases
14:16 < FloLeBlanc> Trangar: do I need the c++ library that is sometimes mentioned for that?
14:17 < Trangar> FloLeBlanc, no this is a pure javascript library, the C++ one is outdated and doesn't work
14:17 < Trangar> Not with 0.10 at least
14:17 < spobat> hi
14:17 < FloLeBlanc> Trangar: thank you - install worked will have a look at that
14:21 <@MI6> joyent/node: Krzysztof Chrapka master * ffcd8b9 : readline: strip ctrl chars for prompt width calc - http://git.io/8gCQBw
14:22 < pringlescan> can anyone explain what this does? https://github.com/postaljs/postal.when … how would it know that "all" of the messages have been received
14:24 < Trangar> pringlescan, because you defined before which messages have to be received for the "success" message to fire?
14:25 < pachet> "all" in this case means "however many messages it takes to satisfy the conditions you supplied"
14:25 < eitanp461> Here is the npm-debug.log Gist with my npm install errors - https://gist.github.com/eitanp461/87f0cc407110abbfaf3c
14:25 < pachet> so its just watching inbound messages, and checks each one against the remaining criteria for the .when() params you specified
14:26 < armetiz> hi there. I'm trying to install node dependencies using "npm install", but I get an error : "ENOENT"
14:26 < armetiz> errno 34, do you have any clue ? I don't find solution about this problem
14:26 < Trangar> wait for messages (a, b, c, d), send (a), send (b), send (c), send (d) /* here the criteria are met */
14:27 < Trangar> armetiz, XX( 34, ENOENT, "no such file or directory") 
14:27 < Trangar> Does that help you in any way?
14:28 < armetiz> no, because when looking insode node_modules, there is no module
14:28 < armetiz> the path missing is from a module
14:28 < Trangar> What's the directory you're in when you're calling npm install, and where is your node_modules installed?
14:28 < armetiz> but.. I just take a look on the log file, and I saw that there is a /root/.npm/ cache foldeR..
14:28 < armetiz> I flushed it and it seems to work
14:29 < armetiz> i'm trying npm cache clean, and after that I restart all the process
14:33 < eitanp461> Hi, I'm getting the errors - npm ERR! code EIO and npm ERR! errno 55. I have a Gist with the debug log - https://gist.github.com/eitanp461/87f0cc407110abbfaf3c can anyone help?
14:35 < armetiz> Trangar, sorry, find the problem, np cache clear solve the 3hours problem :)
14:35 < Trangar> armetiz, no problem :) Glad you could fix it
14:35 < armetiz> yes
14:36 < Kakera_> will it make v8 happy if I assign '' to a string property instead of deleting it?
14:36 < coincoin> no one can help me on v8 and 0.8.25? :-) "do you know if v0.8.25 is affected by CVE-2012-5120, CVE-2012-5128, CVE-2012-5153, CVE-2013-0836, CVE-2013-2632 (for v8: fixed upstream in 3.13.7.5)"
14:38 < mscdex> coincoin: https://github.com/joyent/node/blob/v0.8.25/deps/v8/ChangeLog
14:39 < pringlescan> pachet, trangar, thanks.
14:39 < mscdex> eitanp461: try upgrading node, at least to 0.8.25 if not newer
14:40 < Trangar> Is there an expected release date of 0.12 yet?
14:41 < coincoin> mscdex: ok, thank you. do you know if a 0.8.2x upgrade is planned to fix thoses CVE?
14:42 < caitp-> if I want to only serve responses to HTTP requests from a finite set of known hosts, what would be a good way to do that?
14:43 < mscdex> coincoin: i don't know. however, v0.10.x includes v8 3.14.x
14:44 < mscdex> caitp-: check req.socket.remoteAddress
14:46 < coincoin> mscdex: I know but it's to fix the CVE in Mageia 2 (I can't upgarde package to 0.10.x as libopenssl it's now the release expected for 0.10.x)
14:46 < coincoin> mscdex: BTW, thanks
14:50 < caitp-> mscdex: filtering like that seems like a bad idea though :(
14:51 < FloLeBlanc> Trangar: are you using tedious with azure? (just with the connection string, user/password?)
14:52 < mscdex> caitp-: why?
14:52 < mscdex> caitp-: use a firewall then
14:53 < Trangar> FloLeBlanc, yeah, check the git page, it has a wiki page on connecting to azure
14:53 < Trangar> FloLeBlanc, https://github.com/pekim/tedious/wiki/Connect-to-sql-in-azure
14:53 < FloLeBlanc> Trangar: thank you
14:53 < caitp-> yeah I guess that could work
15:07 <@MI6> joyent/libuv: Linus Mårtensson master * ff3ee84 : build: set OS=="android" for android builds - http://git.io/3k69Aw
15:10 < tsunamie> if someone's got form and wants to pupulate the values of the form with the old values so people can see them. How would one go about doing that? I currently have a events object and current object avaiable
15:10 < tsunamie> how do I get that specific event objects value into the form so that it can be used in displays?
15:11 < jdelgado> Anyone know the difference between uuid and node-uuid? Looks like the same module, but going through a transition?
15:14 < accc> hi
15:22 < FloLeBlanc> Trangard: worked like a charm - thank you very much
15:22 < Trangar> No problem :)
15:22 < FloLeBlanc> Trangar not Trangard :)
15:23 < FloLeBlanc> Trangar: will post a quick blog entry about my experiences and setting up this environment. may I/should I mention your help and this channel?
15:23 < pachet> trogdor
15:23 < Trangar> flocca, go for it, if you want you can mention my twitter too, @victorkoenders
15:23 < FloLeBlanc> thank you
15:24 <@MI6> joyent/node: Linus Mårtensson master * 5e4e8ec : build: add android support - http://git.io/I-2VmQ
15:33 < prettyrobots> In streams 2, is there a ready to go string stream or accumulator?
15:33 < prettyrobots> Or do I look for one in NPM?
15:34 < prettyrobots> Or, what is the right way to slurp a response from an HTTP server?
15:36 <@isaacbw> oh god, the topic image
15:54 < logicalcat> Hi all, can anyone point me towards an example using cluster outside a web-app?
16:05 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:05 < aandy> prawnsalad: oh no.. do you know how it works on namecheap? i just went through checkout and it hasn't asked for csr or anything yet o_O
16:06 < prawnsalad> if i remember rightly.. you get an email with steps taking you to comodos registration..
16:06 < prawnsalad> but this was a while ago so dont quote me on that :p
16:09 < aandy> ah, right, it wasn't under account, it was under ssl -> account apparently there are two control panels ;)
16:11 < leichtgewicht> I thought i managed to do that once: but how do i do async testing with tape?
16:22 < tsunamie> Hi guys, added a static page and I don't know why it's not showing up in routes. http://pastebin.com/dZtSBmK9 I get the following error when I try and go to localhost:3000/about_us /opt/CC/node_modules/express/lib/router/index.js:252
16:22 < tsunamie>     throw new Error(msg);
16:22 < tsunamie>           ^
16:22 < tsunamie> anyone know what is wrong with it. I added the correct route and I made sure the correct call is made
16:25 < pickels> tsunamie: https://github.com/visionmedia/express/blob/master/lib/router/index.js#L252
16:25 < pickels>   // ensure all callbacks are functions
16:26 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:26 < pickels> So I am guessing your route isn't getting a function
16:29 < pickels> Probably because require('./routes') is actually importing ./routes/index.js
16:30 < tsunamie> pickels - does it not import everything in routes?
16:30 < tsunamie> pickels - or do I ahve to put * after that so it auto does that?
16:30 < pickels> tsunamie: index.js has a special meaning in node
16:30 < tsunamie> pickels - I see
16:31 < pickels> it means that if you require the directory it will require the index.js file
16:31 < tsunamie> pickels - so your saying that I ahve to state all the others impicitly?
16:31 < tsunamie> I see thanks pickels will look at that further
16:31 < pickels> you can either add aboutus.js to index.js or require('./routes/aboutus') directly
16:37 < logicalcat> hey all, anybody know of an example where cluster is used outside a web app? (like a command line app)
16:41 <@isaacbw> logicalcat: asking the same question over again probably won't get you an answer
16:43 <@tjfontaine> logicalcat: it's not exactly clear to me what you're even asking for
16:45 < NoFaTe> just throwing this in here https://www.youtube.com/watch?v=E3418SeWZfQ
16:45 < logicalcat> sorry for lack of clarity. Cluster. Nearly all examples show it being used in an Express app or wedged in some fake loop. I'd like to use it in a command-line app that is currently using a single child_process.fork.
16:46 <@isaacbw> and what are you looking for? A tutorial showing you how to make an application exactly like the one you want to make?
16:46 < logicalcat> Yeah, issacbw, that would be super-nice. Got one?
16:46 <@isaacbw> you'll have better luck if you ask sepcific questions about cluster
16:47 <@isaacbw> logicalcat: if you look hard enough, you might find one
16:47 <@isaacbw> tutorials are all the rage
16:47 < logicalcat> I've looked. Not found. Came here to ask. Failed. 
16:47 <@isaacbw> I'm sorry for that comment btw :P I haven't had my morning coffee
16:47 <@isaacbw> logicalcat: anyway, ask specific questions
16:49 < statu> hi!
16:53 < logicalcat> In the docs example, workers are created in the "if (cluster.isMaster) {..." loop. In the non master "else" loop, they are (I supposed) bound to the http.createServer. So all the workers are now listening to port 8000. Now comes THE QUESTION I SHOULD HAVE ASKED:
16:53 < statu> I'm newbie with Node.js and I'm reading about it. I thought to use it in order to develop an REST API. I've seen that exists Express that allows you to achieve that. Do you think that is a good idea to develop my project in Node.js? Is it stable?
16:53 < logicalcat> Do I have to use cluster bound to a port like this? Can I use it in non-http settings?
16:54 <@isaacbw> logicalcat: non-http or non-network?
16:54 <@isaacbw> because cluster is for network apps
16:54 <@isaacbw> you can do something similar by spawning child processes if you don't care about ports
16:54 <@isaacbw> I think there are a few active worker pool modules tool
16:54 < logicalcat> non-http. socket IO maybe.
16:55 < statu> or do you know any project which use NodeJS for an REST API web service?
16:55 < jwm> anyone know why abort on an http request would attempt the request again anyway?
16:56 <@isaacbw> logicalcat: yea, you could use cluster for that
16:56 <@isaacbw> well, maybe not socket.io
16:56 <@isaacbw> but websockets, sure
16:56 < logicalcat> Yes, I'm currently manually spawning the processes, but cluster looked simpler. I guess it's the same thing under the hood.
16:56 < jwm> my code is working and I am not sure why it is working heh
16:56 < jwm> I set a timeout on the request call and it triggers sometimes so I do an abort
16:56 <@isaacbw> hum
16:56 < jwm> but I still get a response on end fire
16:57 <@isaacbw> websockets with cluster would probably be a mess though
16:57 < jwm> same problem I had with socket settimeout 
16:57 < jwm> I do an http abort and the request still ends
16:59 < jwm> ok
16:59 < jwm> how do I make a 1.0 http request
16:59 < jwm> instead of 1.1
16:59 < jwm> I don't want keep-alive
17:00 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:01 <@isaacbw> why
17:01 <@isaacbw> that seems like a roundabout solution to your setTimeout problem
17:02 <@isaacbw> s/roundabout/wacky/
17:02 < jwm> yeah I know
17:03 < jwm> I'm writing code to connect to power supplies
17:03 < jwm> and sometimes they just sit on the response
17:03 < jwm> so I have to abort the connection and try again
17:03 < jwm> sometimes up to 10 times 
17:04 < jwm> I call abort on the connection but if the original connection comes back alive (and it does a lot) it still gets processed
17:04 < jwm> so I can't write code to reinitiate the request
17:04 < jwm> or it will fire multiple times
17:04 <@isaacbw> connect to *power supplies* ?
17:04 < jwm> yep
17:04 < jwm> industrial plant ones
17:04 < jwm> they have built in modems
17:04 <@isaacbw> I see
17:04 < jwm> but they are flaky
17:04 < jwm> heh
17:05 < jwm> I don't understand why my abort doesn't seem to do anything
17:05 < jwm> my response on end still gets called
17:05 < qard> Anyone else having issues getting to nodeconf.com? Traceroute seems to just go forever. It gets as far as reaching rackspace though...
17:05 < kenperkins> qard: www.nodeconf.com
17:06 < kenperkins> works for me?
17:06 <@isaacbw> it's not loading here
17:06 <@isaacbw> probably a dns thing
17:07 < qard> Hmm, apparently it loads WITH the www.
17:07 < jwm> hah
17:07 < qard> Must be a DNS thing.
17:09 < jwm> any reason why httpreq.abort() would do nothing?
17:13 < jwm> maybe this is a node bug
17:13 < jwm> end is firing after close
17:18 <@isaacbw> jwm: how about you paste some code
17:24 < jwm> http://pastebin.com/4H0Qujxr
17:24 < jwm> the end response still comes back
17:24 < jwm> even though my abort fires before
17:26 < sambarino> hey guys :) i am pretty awful at understanding express, getting a "reference error" for the config variable when loading a page. https://github.com/sambarino/LooseLeaf/blob/master/lib/looseleaf.js 
17:26 < jwm> hmm
17:27 < sambarino> i am trying to port this looseleaf wiki thing to the latest version of express / ejs
17:27 < jwm> looks like I need to call connection.destroy
17:33 <@isaacbw> I still think you're doing something really wacky ;)
17:34 < jwm> hah
17:34 < jwm> its not
17:34 < jwm> I am just doing some requests
17:34 < jwm> apparently it is a buffer problem
17:35 < jwm> buffer continues after the connection is terminated 
17:35 <@isaacbw> ah, alright
17:38 < jwm> well
17:38 < jwm> I worked around it
17:38 < jwm> don't understand why but whatever
17:38 < jwm> I set a variable in my settimeout and check if it exists
17:39 < jwm> heh
17:39 < sdwrage> Hey all
17:39 < jwm> hi
17:44 <@isaacbw> jwm: that sounds really strange
17:44 < jwm> yeah I know
17:44 < jwm> but the only article I found on it is someone wanting the opposite
17:44 < jwm> that end would still fire after abort
17:44 < jwm> heh
17:45 <@MI6> joyent/node: Timothy J Fontaine master * c0281f1 : build: fix include order for building on windows - http://git.io/phru_w
17:49 < jwm> the interesting thing is that an error response does prevent end
17:57 < noway_> Hi guys. How to split regex on multiple lines?
17:58 < noway_> For example, i have very long regexp. And i want split it to parts that doesn't longer then 79 chars
17:58 <@tjfontaine> new RegExp(str)
17:58 < noway_> yep, that what i need
17:58 < noway_> thanks
18:03 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:06 < pringlescan> is it appropriate to solicit paid work in the channel? my employer is looking to hire additional programmers on a task-by-task basis
18:07 < zomg> pringlescan: I might be interested starting next month
18:07 < zomg> this is remote I take it?
18:07 < RLa> also interested if remote
18:07 < pringlescan> zomg, do you have a github? it can be remote, our office is in philadelphia, pa
18:07 < pringlescan> RLa, same, PM me your github/linked in and we'll be in touch, or a work sample
18:08 < zomg> cool, I'll send some your way
18:08 < pringlescan> zomg, thanks
18:08 < dcbartlett> i'd be interested in some remote work
18:09 < dcbartlett> pringlescan, mind if i PM you my details too?
18:09 < pringlescan> dcbartlett, go for it
18:09 < pachet> lets all apply
18:09 < pachet> work for a day and fix everything
18:10 < dcbartlett> lol
18:10 < pachet> then disappear like gorillas in the mist
18:10 < poincare101> Hi guys - I'm currently writing an API of sorts. If I get an empty field (i.e. missing POST parameter), what HTTP status code should I return? Just a 500?
18:10 < squeeks> 400
18:11 < squeeks> 500 is "I, the thing serving you messed up". 400 is "you dun goofed luser".
18:11 < poincare101> squeeks: okay, got it. Any other opinions?
18:11 < squeeks> whatever you do, be consistent. respect accept headers, test for bullshit data.
18:12 < poincare101> squeeks: another question - do I have to test every single parameter to see if it is present?
18:12 < poincare101> squeeks: that seems annoying.
18:12 < squeeks> depends if they are optional or not?
18:12 < poincare101> squeeks: any modules that do this automatically?
18:12 < squeeks> no idea, I don't use node for http stuff.
18:12 < poincare101> squeeks: well, the ones that are compulsory. 
18:12 < poincare101> squeeks: okay. thanks anyway.
18:16 < pachet> poincare101: i dont know of any modules that do that
18:16 < pachet> typically i just check upfront whether the correct values have been supplied, and if not, i serve back an error
18:16 < poincare101> pachet: so, is the "standard" way to just use "ifs"?
18:17 < pachet> poincare101: yes, but it wouldn't be too hard to write a function that takes the field names you require
18:17 < pachet> and spits back a custom middleware function
18:17 < poincare101> pachet: I guess so.
18:17 < pachet> app.post('/foos', expect('a', 'b', 'c'), function ( request, response ) { })
18:39 < poincare101> Hi everyone - I'm testing a node.js app that uses CouchDB with Mocha. Should I set up another DB connection within the mocha test code in order to get something akin to fixtures? How do fixtures generally work with Node?
18:40 < TonkaTruck> http://mongoosejs.com/docs/api.html#query_Query-select this documentation says you can mix inclusion and exclusion in select yet when attempting so I receive "You cannot currently mix including and excluding fields"  Is this expected behavior? Sorry, #mongoosejs is dead.
18:42 < jaCen915> In regards to connect/express is it safe to assume that .use() with a path and function as arguments will only execute if the path matches?   e.g.   app.use('/some/path', function())  Thanks
18:42 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:43 < TonkaTruck> jaCen915: My experience is yes.  More importantly, it appears that you must place more specific routes first.  /some/path will match /some/path/foo
18:44 < Trudko_> Guys which ORM do you recomend for nodejs? I found few on github , but I havent found good comparison. 
18:46 < neeky> Trudko_, what database?
18:47 < Trudko_> neeky: most likely Postgree maybe mongo? not sure I am just checking out NOSQL Dbs
18:47 < jaCen915> TonkaTruck: ty and agree
18:47 < neeky> For Mongo, mongoose is pretty good
18:48 < neeky> jaCen915, * is also a valid path - very handy for things like authentication
18:48 < neeky> and all middleware assumes '/' as path unless specified
18:49 < neeky> got into a discussion yesterday why one would use and ORM with NoSQL - 'because it makes sense' was my response
18:49 < jaCen915> neeky: exactly, I like that :)
18:50 < neeky> s/and/an/
18:52 < thomblake> neeky: I haven't figured that one out yet myself.  Why *would* one use an ORM with NoSQL?  Most of the usual concerns don't seem to apply, and it seems like you lose a lot of the flexibility by forcing a schema.
18:52 < Tarraq> thomblake: IN some cases you don't need the no-schema approach as much as you need proper scaling.
18:52 < zomg> thomblake: I think it's a convenience thing
18:53 < neeky> this was also the focus of the discussion - just because mongo is schema-less, but my data is still very document oriented
18:53 < zomg> Mongoose for example is in my experience much more convenient to use than many of the non-ODM options for Mongo
18:53 < neeky> zodiak, exactly - i am one of the laziest programmers to ever walk the face of the earth
18:53 < neeky> sorry, zomg 
18:54 < neeky> and mongoose lets me do controller-y stuff in the model (again, lazy)
18:55 < neeky> and a user subbmitting a 300 element json doc to me get validated by the scheme without me lifting a finger
18:55 < TonkaTruck> I like mongoose because you can have some degree of normalization but still have the speed and scalability of documents.
18:56 < neeky> I think of MOngo as NoSQL, but not non-relational
18:56 < neeky> no matter what data storage you use, users that craete documents are related
18:57 < neeky> so my users reference my documents and vice verse using the Schema
18:57 < neeky> to me the main power is the ease at which one installs, configures, replicates, and shards mongodb
18:58 < neeky> that is really realy hard with RDBMSs
19:05 < thomblake> neeky: I think that clears it up.  Thanks!
19:05 <@isaacbw> mongo has no joins
19:05 <@isaacbw> you turd
19:06 < TonkaTruck> I like mongoose so I can join at the app level which is nice if you want a non-retarded schema from which to build more scalable documents.  It's the best of both worlds it seems like.
19:07 <@isaacbw> mongoose is for turds
19:07 < neeky> isaacbw, tell how you really feel - don't hold back - we're here for you.
19:07 < TonkaTruck> isaacbw: I completely agree.
19:07 < jaCen915> isaacbw: what do you suggest as a not smelly turd alternative 
19:08 < niggler> I'm told that oracle nosql server is the best jaCen915 
19:08 < neeky> don't listen to him, he works for Oracle - he's paid to be here to bash other dbs
19:08 <@isaacbw> THAT'S A LIE IT'S A LIE
19:09 < niggler> followed by oracle readthis and oracle mangodb
19:09 < tuhoojabotti> People, you talk too much
19:10 < niggler> though in all seriousness neeky jaCen915 I'm a fan of this little database system called mysql
19:10 <@isaacbw> yea guys, keep it quiet in here
19:10 < tuhoojabotti> My browser lags now.
19:10 < tuhoojabotti> http://lahdenvuo.info/irc/#node
19:10 <@isaacbw> we're trying to focus
19:10 < RLa> btw guys, jee 7 released recently
19:10 < neeky> The right tool for the job, IMO.  
19:11 < jaCen915> lol sorry for the commotion, using legacy mongoose code and had to ask
19:11 < niggler> isaacbw you are the largest one here lol
19:11 < jaCen915> (not actually sorry)
19:11 < niggler> there's such a thing as "legacy" mongoose code?
19:11 < neeky> if data is heavily related, RDBMS - document centric, use a document oriented db
19:11 < jaCen915> niggler: someone else's project
19:11 < neeky> legacy = 2 months old
19:11 <@isaacbw> niggler: I know, it makes me sad
19:12 <@isaacbw> I thought I've been pretty quiet on IRC lately
19:12 < niggler> tuhoojabotti are you generating that based on messages or mentions?
19:13 < tuhoojabotti> niggler: adjacent messages atm, no advanced heuristics yet.
19:14 <@isaacbw> oh, so it's not just raw message quantity
19:14 <@isaacbw> or is it
19:14 <@isaacbw> re: mongo, I think mongo is great
19:14 <@isaacbw> I have a mongodb mug I stole from the 10gen offices
19:15  * dcbartlett reports isaacbw to the 10gen police
19:15 < jaCen915> isaacbw: contacting 10gen
19:15 <@isaacbw> lol I didn't really steal it
19:15 <@isaacbw> but I do have a mug from their offices
19:16 < jaCen915> isaacbw: that's what id say too if i were caught
19:16 <@isaacbw> hah
19:16 < neeky> just realized isaacbw is an op
19:16 < qbit> TooTallNate: i have a node-gyp question: I have an issue with the version of node-gyp that is in 0.10.7 ( and looks like 0.10.11 as well ) where build.js is failing because i have symlinked modules in node_modules I added a check in build.js (http://sprunge.us/DPSX) - but it looks like HEAD for node-gyp doesn't require this? 
19:17 < qbit> should note that the failure is in chmod - because the modules are symlinked from a root ownd dir
19:18 <@TooTallNate> qbit: i mean that code was commented out before
19:18 <@TooTallNate> and i simply removed it
19:18 < andu> had our first node meetup in jhb, south africa earlier this month. things picking up this side
19:19 < qbit> TooTallNate: the code to check for symlinks? 
19:19 <@mbalho> andu: wow cool!
19:19 < andu> :) bout 20-30 ppl
19:20 <@TooTallNate> qbit: oh sorry, that's a different piece of code
19:20 <@TooTallNate> qbit: i'm not really sure what your problem is...
19:20 < squeeks> communication skills.
19:22 < qbit> TooTallNate: i have a module with symlinks to other modules ( owned by root ) in it and that bit of code is trying to chmod ( as non-root user ) the root owned module
19:22 < qbit> which causes it to fail
19:23 < s5fs> xyxne: boop!
19:23 < qbit> so mymodule has mymodule/node_modules/symlink
19:24 < jasonkuhrt> Hi I am using os.networkInterfaces() but I am not able to find an IP that works with socket.io
19:25 < jasonkuhrt> has anyone dealt with making this socket.io logic dynamic: io.connect('http://'+env.serverIP);
19:25 < jhouk> Hi folks, I'm new to the node.js ecosystem, trying to debug some code that is leveraging fs.stat().  I have tried to set up breakpoints in the callback when running the process in node-inspector but I haven't been able to get the process to return to the debugger after fs.stat() is called. It just terminates. Any suggestions?
19:26 < qbit> jasonkuhrt: you can just do io.connect(), and it will use the server that you have connected io with
19:26 < neeky> jhouk, your best bet is to use the Google eclipse v8 debug plugin
19:27 < qbit> jasonkuhrt: alternatively you could probably do somethign with templating 
19:27 < jasonkuhrt> qbit: I'm not sure I follow, this -is- the step where I try to connect io
19:28 < jhouk> neeky Ok, I'll give that a go, thanks
19:28 < jasonkuhrt> qbit: I am working with templating, I am getting the serverIP sent with the index.html reponse that has the inline javascript: io.connect('http://'+env.serverIP)
19:28 < qbit> jasonkuhrt: client side just call "io.connect()" and it will connect : https://github.com/qbit/blog/blob/master/public/js/main.js
19:28 < neeky> node-inspector breakpoint handling is off for some reason - debugging the node process itself in eclipse
19:28 < neeky> works really well
19:29 < neeky> there's a joyent wiki page howto on github
19:30 < qbit> TooTallNate: does my issue make sense to you? 
19:31 <@TooTallNate> qbit: i mean ya sure, but it seems like an npm problem, not node-gyp
19:31 <@TooTallNate> at least from your diff...
19:32 < jasonkuhrt> qbit: Trying, deploying to my staging to see if it still works (localhost worked)
19:32 < qbit> TooTallNate: lol yep
19:32 < jhouk> Good to know. I've noticed running through node-inspector has been handling breakpoints oddly in other places as well, as you say
19:33 < jhouk> I'm an IntelliJ guy rather than Eclipse if I can help it; I see the NetBrains team has a Node.js plugin. I'll try that first before hopping to Eclipse.
19:33 <@isaacs> Domenic_: so, you know how npm warns about bad stuff in your package.json file, and it's awesome?  but then also warns about everyone *else's* package.json file, and it's kind of annoying?
19:33 < qbit> mybad :D 
19:33 <@MI6> joyent/libuv: Ben Noordhuis master * b1d390e : windows: don't use uppercase in include filename - http://git.io/9C5mCA
19:34 <@isaacs> Domenic_: i'm thinking of doing a thing like readJson(file, [loose=false], cb) kind of thing
19:34 < jasonkuhrt> qbit: okay I'm convinced, but totally confused as to why this isn't documted or at least shown as the main way to do things on the i.e. socket.io homepage
19:34 <@isaacs> Domenic_: appropos of semver 2.0 strictness, as well
19:34 < neeky> jhouk, I'm not sure you can debug with it, but yeah, I have eclipse solely for debugging node
19:35 < jhouk> hehheh, that'll be me too if I end up needing it
19:35 <@isaacs> Domenic_: so, `01.02.03alpha8` will be a legal version number for someone else's package, but not for your own
19:37 < thomblake> isaacs: Seems like the correct application of Postel's law in this context
19:38 < qbit> ah! 404 when i fork stuff
19:38 < qbit> jasonkuhrt: yeah
19:38 <@isaacs> thomblake: yeah, i htink so
19:38 < jhouk> If anyone cares, here are the docs for setting up a debug session on IntelliJ for node.js: http://www.jetbrains.com/idea/webhelp/running-and-debugging-node-js.html
19:38 <@isaacs> thomblake: the problem with postel's law is that it tends to remove social pressure for other people to follow postel's law.
19:38 < neeky> jhouk, sweet
19:39 < neeky> may have to end up buying IntelliJ
19:39 <@isaacs> thomblake: when i started adding those warnings, a lot of people bitched at their dependencies' authors to fix their shit
19:39 < jhouk> It's totally my JS editor of choice since I have to work with Java as well, I'll let y'all know if I can get the debugging up and running shortly :)
19:40 < Stumbler> Hopefully one of you guys would know this-  If I send a dozen lp commands to my cups server from a node process, those jobs, are they supposed to print in the order that I send them, or is this dependent entirely on the printer hardware configuration?
19:42 < thomblake> isaacs: So the warnings make the ecosystem better.  Sounds like you need a really compelling reason to remove them.
19:43 <@isaacs> thomblake: the compelling reason is that i think it's too much social pressure, on me.
19:43 <@isaacs> thomblake: i get like 30 warnigns when i do `npm ls -g`
19:44 < thomblake> isaacs: Clearly you need a special case then, to not annoy isaacs but annoy everyone else.
19:45 <@isaacs> tho	lol
19:45 < Domenic_> isaacs: I dunno, I like the social pressure, hmm
19:45 <@isaacs> thomblake: lol
19:45 < Domenic_> maybe if it wasn't there for -g
19:45 < Domenic_> and private
19:45 < andu> Stumbler, I'm guessing they print in the order they first finish, and transfer in parallel?
19:45 <@isaacs> thomblake: usually, "annoy !isaacs" == "a non-default config"
19:45 < Domenic_> isaacs: or maybe we just went too far this time, w.r.t. repository :(
19:46 <@isaacs> Domenic_: well, what if, `npm install` would show the warnings, but not throw on loose semver, and npm-ls would just shut the hell up
19:46 < samholmes> How does Node.js fare against other platforms for performance intensive applications?
19:46 <@isaacs> samholmes: pretty ok
19:46 < Stumbler> I'm assuming so as well, I just wanted to throw that out there while I'm designing my print system, so I could avoid any gotchas. :)
19:46 < Stumbler> thanks andu
19:46 < samholmes> isaacs: is there some charts that show the extremes ?
19:46 <@isaacs> samholmes: how intensive?
19:46 < Domenic_> isaacs: that's an interesting compromise, probably a good one yeah, npm ls is something you do more than once
19:46 < andu> Stumbler, hope that made sense, was a bit backwards
19:46 <@isaacs> samholmes: what other platforms
19:46 <@isaacs> ?
19:47 < samholmes> Idk, I'm guessing C is your best bet at performance
19:47 <@isaacs> samholmes: depends on how much stuff you do in C, but sure
19:47 < samholmes> And I'm thinking ruby, java, php, are comparable to node.js/js
19:47 <@isaacs> samholmes: usually, performance is a property of the approach, not the platform
19:48 < samholmes> So how I go about writing the app?
19:48 < ningu> isaacs: btw, I've noticed that npm install for some modules with large dependencies is kinda slow on my low-end VPS's, is there any way to make it less network/cpu intensive?
19:48 < ningu> s/large/numerous/
19:48 < andu> samholmes, whats it going to do?
19:48 <@isaacs> ningu: upgrade npm to at least 1.2.30
19:49 < ningu> isaacs: ok cool :)
19:49 < pachet> andu all the things
19:49 < samholmes> andu: I'm just thinking in general
19:49 < samholmes> One thought is to build a video game using node
19:50 < samholmes> Node would handle a lot of the game engine stuff. Multiplayer game.
19:50 < andu> okay so probably something like 3js front end, talking over socketio/json api calls?
19:50 < ningu> node.js is faster than ruby, slower than java, afaik
19:50 < ningu> it really depends on "faster for what" though since node is much better at concurrency than standard ruby
19:50 < jhouk> Interesting. I got IntelliJ's debugger running and halting at the same breakpoint as I had in node-inspector, but in this environment as well I can't get the debugger to catch the code after fs.stat() is invoked
19:51 < samholmes> ningu: is it better at concur. than java
19:51 < samholmes> ?
19:51 < ningu> samholmes: it's different
19:51 < andu> jhouk, arent you debugging js, and fs.stat is not js anymore?
19:51 < samholmes> java does concurrency like a squirrel?
19:51 < ningu> samholmes: but it was created to do concurrency not with threads
19:51 < eere> hello, how do i use request to check head information before downloading, in the same connection?
19:52 < samholmes> ningu: java or js?
19:52 < ningu> samholmes: much has been written about this and the pros and cons
19:52 < ningu> samholmes: node.js, not js
19:52 < ningu> although js lends itself to it due to originally being written for the browser
19:52 < jhouk> andu Absolutely, but I'd hope the callback would still catch the breakpoint
19:52 < samholmes> can node.js be multi-threadededed?
19:52 < ningu> samholmes: basically the choice is single-threaded + events versus multi-threaded/multi-process
19:52 < jhouk> Do we just lose control as soon as any non-JS lib gets called forever?
19:52 < ningu> samholmes: no.
19:53 < jhouk> The last line I can see is: binding.stat(pathModule._makeLong(path), makeCallback(callback));
19:53 < andu> whats the error? its probably getting confused between files and folders or something
19:53 < samholmes> ningu: what is a thread anyway?
19:53 < andu> jhouk, whats the error? its probably getting confused between files and folders or something
19:53 < ningu> samholmes: ok now you're just being lazy, you can look that up
19:53  * samholmes is looking it up
19:53 < ningu> :)
19:53 < jhouk> No error. The program seems to fail silently (which is why I tried to start debugging it :D )
19:53 < samholmes> But, I don't see the difference between a thread and an event loop.
19:53 < andu> :/
19:53 < ningu> samholmes: you should look up how OS's manage multiple processes too -- cooperative vs. preemptive multiasking etc.
19:54  * andu never debugs
19:54 < ningu> samholmes: it's very different in terms of the code structure and control flow
19:54 < ningu> multitasking*
19:54 < samholmes> Oh, so node.js will only execute one thing at a time; get in, get out quickly approach.
19:54 < ningu> samholmes: I'm just listing that stuff so you can get an overall view of concurrency at different levels
19:54 < ningu> samholmes: right.
19:55 < q2dg> Hello. I'm afraid about vertx.io
19:55 < samholmes> But a multi-threaded is when two or more pieces of code are executing simultaniously.
19:55 < tuhoojabotti> I added some client-side filtering: http://lahdenvuo.info/irc/#node
19:55 < ningu> samholmes: not really simultaneously but effectively
19:55 < tuhoojabotti> and sizes are not sqrted
19:55 < samholmes> So the processor is essentially the async framework in a multi-threaded environement?
19:55 < tuhoojabotti> now*
19:56 < nathan7> samholmes: It's concurrency vs parallelism
19:56 < nathan7> samholmes: Concurrency is handling a lot of things at the same time
19:56 < jhouk> So once node.js enters a lower level lib, we're SOL as far as breakpoints in callbacks are concerned? ;.;
19:56 < nathan7> samholmes: Parallelism is doing two things at the same time
19:56 < nathan7> samholmes: (two pieces of code running at the same time)
19:56 < samholmes> nathan7: which a multi-core cpu could do
19:56 < nathan7> samholmes: Yep
19:56 < samholmes> I think I vaguely understand enough
19:57 < nathan7> samholmes: But JS doesn't do parallelism (yet)
19:58 < andu> q2dg, why? it seems very specific focus, probably not compatible with node libraries and uses jvm uck
19:58 < RLa> js on browser does it with webworkers
19:58 < nathan7> Yeah
19:58 < nathan7> JS itself doesn't have it
19:59 < nathan7> Node has child_process.fork and cluster
19:59 < RLa> yeah
19:59 < q2dg> yes, but it seems it's faster and more powerful (and multicore too), at least according to their graphs 
19:59 < kuebk> where is currently located npms couchdb?
20:00 < ningu> kuebk: I think nodejitsu took it over recently
20:00 < nathan7> kuebk: It's hosted by IrisCouch/Nodejitsu 
20:00 < andu> q2dg, speed isnt everything, simplicity is
20:00 < nathan7> Pretty awesome
20:00 < nathan7> I'm working on awesomer statistics :D
20:00 < kuebk> till now I've used this link
20:00 < kuebk> http://isaacs.iriscouch.net/_utils/
20:00 < kuebk> but it doesnt work anymore
20:00 < q2dg> I agree
20:01 < tuhoojabotti> Here's an example of about 3 years worth of logs: http://tuhoojabotti.com/r/prsc/mc-key-people.png
20:01 < kuebk> nathan7 do you have a link
20:01 < kuebk> so I could browse it
20:01 < nathan7> kuebk: registry.npmjs.org is the couch
20:01 < kuebk> yea
20:01 < kuebk> but I can't browse it
20:01 < nathan7> Yeah
20:01 < kuebk> https://registry.npmjs.org/_utils
20:01 < kuebk> just loads and loads
20:02 < q2dg> thanks to all. see you
20:03 < tuhoojabotti> olalonde: Thanks to some filtering and sqrt, it's now a lot cleaner: http://lahdenvuo.info/irc/#node
20:05 < jhouk> But yeah, neeky, I was able to hook up the IntelliJ debugger pretty easily to the node.js process, though it looks like I've still lost control after node drops into a lower level lib.
20:05 < olalonde> tuhoojabotti: looks like you put me on a diet :)
20:05 < tuhoojabotti> olalonde: I made you sqrt.
20:05 < olalonde> haha
20:10 < jhouk> Ohhh!  Switching from fs.stat() to fs.statSync() at least returned an error though!
20:11 < neeky> jhouk, which lib?
20:11 < neeky> fs?
20:11 < jhouk> neeky yis
20:12 < neeky> those dip pretty quickly into the V8 engine I'm guessing - if you think its a problem in the v8 code, you can also pull the source for it
20:12 < kuebk> btw
20:12 < kuebk> is there any way to browse
20:12 < kuebk> all version of library
20:12 < kuebk> on npmjs.org?
20:13 < jhouk> whuf. hopefully it doesn't come to that. but yes, fs looks like it's mostly a shim for native calls.
20:13 < neeky> kuebk, not unless it has a git repo link
20:13 < kuebk> :(
20:18 < neeky> Re: npm etiquette: If I found a lib I need that appears to be abandoned or at least unmaintained, is there an etiquette for forking and re-publishing in npm? 
20:19 < nathan7> kuebk: http://isaacs.iriscouch.com/_utils/database.html?registry
20:19 < neeky> I've brought it up to current versions of node + express, and others might get use from it
20:19 < nathan7> kuebk: That works
20:19 < kuebk> thank you
20:19 < kuebk> <3
20:21 < nathan7> dch_: \o/
20:22 < dch_> nathan7: happy campers I assume now.
20:22 < nathan7> dch_: Yar
20:22 <@isaacbw> nice, duckduckgo will calculate hashes for you
20:23 < sveisvei> Q: Whats a good logging lib these days? Winston isnt playing nice.
20:37 < werle> @rvagg just saw node-du - very nice!
20:54 <@isaacbw> hello beautiful
20:57 < st_luke> hello
20:57 < Jet4Fire> Hi
21:05 < tuhoojabotti> isaacbw: What's with the beautiful thing?
21:07 < dcbartlett> a beautiful thing is a beautiful thing
21:09 < tuhoojabotti> dcbartlett: That's subjective!
21:10 < dcbartlett> HA!
21:12 <@MI6> joyent/node: Sam Roberts master * 226a20d : doc: call console module 'console' not 'stdio' - http://git.io/1s90fQ
21:12 < tuhoojabotti> Finally!
21:12 < tuhoojabotti> Hallelujah
21:13 < antigravedad> hi all, I need to develop an addon for nodejs, I already have installed nodejs in my machine (CentOS), but now when I compile with node-gyp thown the that can't find node.h
21:13 <@TooTallNate> antigravedad: what's inside your ~/.node-gyp directory?
21:13 < antigravedad> how can i install the headers of node js ?
21:18 <@TooTallNate> antigravedad: what's inside your ~/.node-gyp directory?
21:19 < antigravedad> sorry, I don't have that folder
21:20 < antigravedad> TooTallNate: I don't have that folder
21:20 <@TooTallNate> antigravedad: so then, can you give me the output from node-gyp?
21:21 < antigravedad> TooTallNate: ok, give me a minute please
21:22 < niekniek> hello, n00b question here. I have a socket.io server which works. I want to broadcast file changes to the connected user, so i'm using fs.watch. But I don't know how to combine them, my socket object is not available in the fs.watch
21:23 < jaCen915> niekniek: not positive but you could create a more global variable that takes in the instance of the socket created
21:26 < niekniek> jaCen915: that's working :)
21:26 < jaCen915> niekniek: great
21:27 < skope> wtf. how to use express 3 and socket.io together
21:27 < niekniek> jaCen915: but it creates all kinds of new problems in my head, i'm still wrapping my head around the single tread thing
21:27 < niekniek> :)
21:27 < skope> i want to use bodyparser etc too
21:27 < niekniek> but thanks!!
21:28 <@isaacbw> tuhoojabotti: everybody
21:28 < skope> https://gist.github.com/skopetsi/5800612 here is my code. outputs error https://gist.github.com/skopetsi/5800615
21:28 < jaCen915> niekniek: yeah its a little weird to grasp with JS being single threaded, event driven design :)  you can technically cluster and run master/slave combos but that's another story
21:29 < tec27> skope: that's not how you setup a server with express 3
21:29 < tec27> http://socket.io/#how-to-use there's a specific example for it there
21:30 < tec27> you have to do require('http').createServer(app)
21:30 < skope> tec27: i read that but didn't get bodyparsers etc to work with that
21:30 < tec27> should work fine, has for me
21:31 < jasonkuhrt> I am discovering that forever will lose track of the node process
21:31 < jasonkuhrt> and then upon rediscovering the pid if I try to kill it manually forever will respawn it
21:32 < jasonkuhrt> so forever is unable to list it or stop it but it can restart it when the process is ended, which seems terrible
21:32 < jasonkuhrt> what other tools would people reccomend? I'm open to monit and such if that's better
21:32 < skope> tec27: i have those app.use(express.bodyParser()); -lines. how do i change them? if i try app.use(app.bodyParser()), it fails
21:33 <@MI6> joyent/node: Ben Noordhuis master * b916525 : src: clean up `using` directives - http://git.io/Q0GKUQ
21:34 < skope> tec27: https://gist.github.com/skopetsi/5800666 i have this now
21:39 < skope> seems not to work with this. doesn't recognize with app.bodyParser() either
21:43 < shesek> <tec27> you have to do require('http').createServer(app)
21:43 < shesek> you can also use app.listen(), which returns the Server instance
21:43 < shesek> and pass that to socket.io
21:48 < skope> shesek: https://gist.github.com/skopetsi/5800666 i have this. but i have no idea what to insert to those app.use(express.bodyParser)); configurations
21:48 < ashnur> is there any reason why I should have more than one EventEmitter in my code?
21:48 < skope> express.bodyParser doesn't obviously work because it's not set
21:49 < Havvy> ashnur: In general, or?
21:49 < ashnur> Havvy: in general, yes. i am trying to understand events
21:49 < Havvy> Well, imagine you were reading from two sockets.
21:50 < ashnur> i have an app where I want to use events to link dom changes with changes in objects, and storing the values, etc.
21:50 < Havvy> Each socket is an event emitter.
21:50 < Havvy> You listen to them as individual objects.
21:50 < Havvy> socket1.on('data') is different than socket2.on('data')
21:50 < ashnur> yeah, but I am using custom events.
21:51 < Havvy> And when you create your own event emitters they should be emitting events for only one reason.
21:51 < shesek> skope, "what to insert to those app.use(express.bodyParser)); configurations"? I'm not sure what you're asking
21:51 < ashnur> define reason?
21:51 < fulwig> hi guys, anyone know a reddit like social messageboard project on nodejs that i can use and contribute to? I've searched github but couldn't find anything
21:51 < shesek> and express.bodyParser should be set
21:52 < ashnur> Havvy: these event will be triggered by me, when the dom changes
21:52 < ashnur> or when the user does something, like clicks on a button
21:53 < ashnur> i handle the dom events, and trigger further events 
21:53 < Havvy> The DOM itself is made up of a hierarchy of event emitters.
21:53 < ashnur> i knew it will be confusing :D
21:54 < ashnur> it's just that i don't see why anyone ever would need more than one EventEmitter
21:54 < Havvy> Well, to give an example I'm familiar with...my IRC framework has a pipeline of event emitters.
21:54 < ashnur> i understand that when it is sockets that means that the same event is emitted, but different source, different data
21:54 < ashnur> maybe different listeners
21:55 < skope> shesek: i have those app.use  on lines 13 - 15 in that gist. there is for example app.use(express.bodyParser()); -line. it throws an error like this https://gist.github.com/skopetsi/5800835
21:55 < skope> shesek: i know that variable named express is not set. but i don't know how to fix that
21:55 < Havvy> There's the actual socket which gets listened to by an emitter that turns it into string messages which gets listened to and turned into message objects which modules can listen to but is also listened to by the command parser which emits commands if it detecgts them.
21:55 < shesek> skope, ah, right
21:56 < shesek> skope, express should be set to require('express')
21:56 < shesek> replace `app = require('express')()` with `express=require('express'), app=express()`
21:57 < skope> shesek: now i did, and it outputs the error https://gist.github.com/skopetsi/5800615
21:57 < ashnur> Havvy: ok, I ask it differently, is it ok, to have an eventemitter for each object type? or maybe for each object? that way I could subscribe with the specific listener created for that specific object, and I could have less arguments, simpler code
21:57 < ashnur> but it would mean that I have a LOT of these then
21:58 < shesek> what is at /home/skope/code/node/tuntilista/app.js:19?
21:58 < Havvy> ashnur: Yeah. You can go crazy with them.
21:59 < Havvy> Though if you have an architecture where you don't go crazy with them, that's even better.
21:59 < skope> shesek: https://gist.github.com/skopetsi/5800861
21:59 < skope> lastest version
21:59 < ashnur> Havvy: :(
21:59 < ashnur> i really do not know how to solve this
22:00 < shesek> Skaag, are you sure you copies it as-is?
22:00 < skope> shesek: now it is the latest one
22:00 < ashnur> i hate when there are many seemingly equally ok solutions
22:00 < skope> shesek: line 11 is that app.configure(function() {
22:00 < ashnur> it is like i have none
22:00 < shesek> the problem is with line 18 in the pastebin, which is probably line 19 in your actual file
22:00 < shesek> skope, app.use(express.router)
22:00 < shesek> its not express.router, its app.router
22:01 < Havvy> ashnur: Then pick the ones that use the least amount of resources?
22:01 < ashnur> how should I know that?
22:02 < ashnur> it might be that I use one, and it will be slower than if I use more
22:02 < skope> shesek: https://gist.github.com/skopetsi/5800890
22:03 < shesek> skope, the rest of them should be express, just change that one line to app
22:03 < shesek> express.(bodyParser/methodOverride/static) are middlewares, and are properties of express
22:03 < shesek> router is an app-specific middleware, and is a property of the app object
22:03 < skope> shesek: hehe, now it works. thank you very much man :)
22:03 < skope> shesek: good to know
22:04 < shesek> you welcome. good luck
22:04 < skope> yeah, i need that
22:12 < neeky> is it just me, or does eclipse totally screw up your debug perspective everytime you attach to the node process to debug?
22:13 < carpii> hi all, I have a node chat which will typically have 1000 users chatting away. I need to log all activity (messages, switch rooms etc) and am wondering whether it would be better to log to a textfile and post-process it, or log to mongo and then dump it to disk each night?
22:14 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:16 <@isaacbw> writing to a file is cheap
22:17 <@isaacbw> what benefit would you get from writing to mongo
22:17 < squeeks> BUT MONGO IS WEBSCALE
22:17 < rhalff> niekniek, maybe use .bind(socketThing) on the listener? I never used fs.watch though.
22:17 <@isaacbw> :O
22:17 -!- mode/#Node.js [+o TooTallNate] by ChanServ
22:18 < carpii> id prefer a file too, but I wasnt sure how it would be handled when concurrent clients try to write to it (I know node is single threaded but IO is async so I assumed this would mean more than one can access it at once)
22:18 < squeeks> flock.
22:18 < carpii> i know a flock() from php. Node has it too?
22:19 < squeeks> uhh.. it's not a language feature.
22:19 < squeeks> it's a filesystem + OS feature.
22:19 < carpii> but node exposes it as an api ?
22:20 < carpii> ok, found a node-fs-ext which provides it, thanks
22:22 <@isaacbw> http://www.jstorimer.com/blogs/workingwithcode/7982047-is-lock-free-logging-safe
22:23 < carpii> thanks. So my concerns about two async node funcs writing to an unlocked file are valid, right? 
22:44 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:57 < olalonde> https://github.com/olalonde/gh-globalsearch
23:16 <@MI6> joyent/node: Bert Belder master * 1bf6d78 : stream_wrap: remove bogus assert - http://git.io/4cWKfw
23:31 < sdwrage> in node, what constitutes an I/O call?
23:35 <@isaacbw> sdwrage: what?
23:39 <@TooTallNate> sdwrage: anything that has to read/write data into/out of the process
23:39 <@mbalho> sdwrage: your answer probably lies here http://nikhilm.github.io/uvbook/
23:42 < ibrahim> can I target a platform with node-gyp? eg, node-gyp --platform=win32 --arch=ia32 --target=v0.10.5 while I'm on a mac?
23:43 < ibrahim> or am I being naive?
23:43 <@TooTallNate> ibrahim: you can't do that :p
23:43 <@tjfontaine> what do you expect to happen? :)
23:43 <@isaacbw> node-gyp is meant to be compiled on dependency resolution via npm
23:43 < ibrahim> ahh
23:43 <@TooTallNate> ibrahim: i mean... you *can* cross compile from say mac to linux, but from mac to windows is out of the question
23:43 < ibrahim> I just have a node-webkit project that has to work on both windows and mac. I'm using two node addons
23:44 <@isaacbw> *node-gygp projects
23:44 < ibrahim> and I just wanted to automate the process from one machine
23:44 <@isaacbw> er
23:44 <@isaacbw> fkdjsf;ldjslfasdlk
23:44 <@tjfontaine> ibrahim: install a windows vm
23:44 < ibrahim> like could I script the packaging? I have a makefile building for linux and mac
23:45 < ibrahim> or would I run a batch script
23:45 < ibrahim> just curious how other folks handle this
23:45 <@tjfontaine> to maybe achieve this you would need a full mingw cross compile toolchain
23:45 < ibrahim> ideally I'd like to run one command and have separate builds generated
23:46 <@tjfontaine> but it's fraught with danger, build on the platforms directly
23:46 < ibrahim> tjfontaine: ill google that, but maybe your right
23:46 <@tjfontaine> or don't use a project with native addons
23:51 < dcbartlett> damn
23:51 < dcbartlett> whoops wrong channel
23:55 <@xyxne> dcbartlett, still applicable
23:55 < dcbartlett> lawl
23:56 < garthk> Any ideas on whether Node 11 will bake the brand-bloody-new generator stuff in V8 enough that we can use it without --harmony flags in Node 12? 
23:57 < overra> is there something like __dirname for windows?
23:57 < dcbartlett> does __dirname not work?
23:57 < dcbartlett> heh
23:57 < overra> i get __dirname is not defined
23:57 < dcbartlett> i'm on linux, so i wouldn't know
23:58 < dcbartlett> hum
23:58 < dcbartlett> paste your code?
23:58 < overra> console.log(__dirname)
23:58 < dcbartlett> lawl
23:58 < overra> :P
23:58 < dcbartlett> knew that was comming
23:58 < dcbartlett> :D
23:58 <@xyxne> __dirname doesn't work in repl
23:58 < overra> ah, that makes sense.
23:59 < dcbartlett> yeah
23:59 < dcbartlett> you didn't mention you were using a repl
23:59 < overra> yeah sorry, thanks xyxne
--- Log closed Tue Jun 18 00:00:17 2013
