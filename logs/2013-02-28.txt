--- Log opened Thu Feb 28 00:00:00 2013
--- Day changed Thu Feb 28 2013
00:00 < ericelliott> My app throws an error when I try to launch with node --debug -  TypeError: options.name (string) is required calling new Logger in bunyan.js
00:13 < samholmes> How do I deal with this procrastination?
00:13 < samholmes> I have list of things to do. I know that I can do them. Yet, I don't.
00:14 < ericfwd> that's a tough one
00:14 < samholmes> I find other things to do. Or, I simply step away from the computer and pace around.
00:14 < samholmes> ericfwd: ikr
00:14 < ericfwd> I think there's a real reason for the procrastination, but it can be hard to uncover
00:15 < ericfwd> I had that problem with a project that was very important
00:15 < samholmes> I'm unsure of why too, but I think there's a real reason as well.
00:15 < samholmes> You did?
00:16 < ericfwd> I only recently overcame it
00:16 < ericfwd> now I'm staying up late coding again
00:16 < samholmes> How did you overcome it?
00:16  * samholmes used to stay up late coding.
00:17 < s5fs> samholmes: procrastination (for me) either comes from fear or from burnout, really depends.
00:17 < ericfwd> I think it has to do with how confident you are about the result of the project, given what you know about it today
00:17 < s5fs> samholmes: for instance, I had a period where I'd struggle to get started with any sort of programming, because I'd start to overthink the debugging process etc. this was the result of working on a broken codebase where each minor change was a white-knuckle ride and the thought of hours-long debugging sessions was scary
00:17 < ericfwd> personally I just needed enough time to work out the "how and why" and I became motivated again
00:18 < ericfwd> took a few months though
00:18 < samholmes> I feel a bit overwhelmed, maybe?
00:18 < samholmes> hmm
00:19 < ericfwd> overwhelmed is a good way to describe it, if I feel like I can't get to the finish line fast enough, I freeze up and can't even bring myself to start
00:19 < sorensen> samholmes: thought you might be interested in this - https://github.com/sorensen/kwargs.js
00:19 < sorensen> per our conversation a few days ago
00:19 < samholmes> kool
00:20 < ericfwd> so one way to get over it is to somehow extend your perceived runway
00:20 < ChrisPartridge> pick one thing, and do it, you'll be done before you know it ;)
00:21 < ericfwd> sorensen: that's a neat module!
00:21 < s5fs> samholmes: are you a list-maker? i'm a big fan of hand-written lists, it helps me feel like my life is more manageable and i get positive feedback as i cross items off the list.
00:21 < sorensen> ericfwd: thanks
00:22 < ericfwd> s5fs: the list thing works great for me too, takes the guessing out of where to start if you write it down and stick to the list (or edit it)
00:23 < sorensen> depending on how complicated your lists are, trello can be a good tool for that
00:23 < s5fs> ericfwd: agreed. the trick is in writing reasonable lists, not like "1. develop site  2. push site to prod"
00:23 < s5fs> sorensen: oddly, i'm not a fan of technology for lists and notes, but i'm trying to get more comfortable w/that. there's something about putting pen to paper that really helps me remember things.
00:24 < sorensen> i put most of my things on the fridge
00:24 < sorensen> but thats for life problems
00:24 < samholmes> s5fs: Yes. I sometimes do a physical notepad, or on the computer.
00:24 < sorensen> anything code related i usually put in either evernote or trello
00:25 < ericfwd> I like trello a lot, but nothing seems to replace a plain text file for me
00:25 < sorensen> its a complexity issue
00:25 < s5fs> ericfwd: agreed
00:29 < tongcx> hi guys, can socket.io replace all usage of ajax?
00:30 < icodeforlove> @tongcx it would be hard because you can't make a request that depends on another request easily
00:32 < tongcx> icodeforlove: yea, seems messy, need more event handlers for that
00:33 < ericelliott> what icodeforlove -- essentially, you lose the features of $.Deferred -- though you could manually emit events based on data from your streams that you could use for similar purposes.
00:33 < MI6> joyent/node: isaacs master * 875e4a0 : core: Remove the nextTick for running the main file  Not necessary, since (+1 more commits) - http://git.io/vUkHXQ
00:34 < icodeforlove> @ericelliott i haven't seen a nice way of using web sockets like that
00:35 < ericelliott> icodeforlove: Lots of game engines use websockets like that. At least, the ones I write do.
00:35 < icodeforlove> ericelliott don't you need to implement additional logic to handle things?
00:36 < icodeforlove> ericelliott like you broadcast a message and wait for the server to broadcast the response?
00:37 < samholmes> sorensen: interesting module. But idk if I'll have a use for it. :P
00:37 < sorensen> samholmes: me neither
00:38 < samholmes> evernote never stuck with me. Trello, never used. Text editors couldn't be any simpler.
00:38 < ericelliott> icodeforlove: Something like that, yes. That's kinda how websockets work for bidirectional communication.
00:38 < icodeforlove> ericelliott how do you track the response?
00:38 < ericelliott> icodeforlove: I'm sure you can find a ping-pong example.
00:39 < ericelliott> icodeforlove: You can add an id to the data payload.
00:39 < SrPx> OK dudes, hosting noob here. I've made a node.js application that will be used by my client. I need it to be running on his VPS server. He gave me access to the FTP, the mysql DB and so on. OK, that's not enough. I have to install things (imagemagick, node.js). What do I need exactly now?
00:39 < icodeforlove> ericelliott are you making like request tokens?
00:39 < samholmes> In fact, I was working on a project that I haven't github-ed yet, but it was aimed at being a task manager as simple as a notepad, but with a hint of extra features for orginization.
00:39 < samholmes> SrPx: SSH
00:39 < SrPx> samholmes: yea that's what I thought, but how that works?
00:40 < samholmes> SrPx: You need a console/command-line. What OS are you on?
00:40 < ericelliott> icodeforlove: Something like that.. just a piece of data that the server passes through to the response.. then the client knows that this particular response is associated with a particular message.
00:40 < icodeforlove> ericelliott similar to how jquery handles JSONP ?
00:40 < SrPx> samholmes: OSX, no problems with command line, but what do I do exactly? Ask the host an ip where I can connect and make commands from my terminal, that will be executed on the host machine? Is that it?
00:41 < icodeforlove> ericelliott interesting, i have never used web sockets in that manner
00:41 < echo> SrPx: They'll need to provide you with root-level SSH access in order to compile node globally.
00:41 < samholmes> SrPx: You should have SSH installed on OSX. You open up Terminal, then type `ssh username@domainoripaddress.com` without the backticks (`) of course.
00:41 < tongcx> for servers to send messages to client, the only way is socket.io, right?
00:42 < samholmes> SrPx: echo is right. They should give an SSH user that can sudo or is root.
00:42 < SrPx> samholmes: sure but... username? Let me see
00:42 < samholmes> user information (un and pw)
00:42 < ericelliott> icodeforlove: it's pretty dissimilar to JSONP, actually. JSONP returns a function-wrapped response. That function gets a unique name, but that's about as close as it gets to being related.
00:42 < samholmes> SrPx: username and password
00:42 < samholmes> it's like FTP username and password, only it's not FTP, it's for SSH protocol.
00:43 < samholmes> ericfwd: I was thinking of calling my task managing project "Tusk" ;P
00:43 < icodeforlove> ericelliott well they were using a unique tempfunc name as the identifier, the socket solution is actually cleaner
00:43 < SrPx> samholmes: Yay got it. Thanks! That's awesome. Really awesome.
00:43 < MI6> joyent/node: Trevor Norris master * 0c1e7b5 : process: separate nextTick domain logic  It's cleaner to only load domain - http://git.io/K6sfiA
00:44 < ericfwd> samholmes: i like it! one word app names are big right now
00:44 < icodeforlove> @ericfwd plus its one letter off from task :P
00:44 < ericelliott> depends on how you define "cleaner" -- if you have to fall back to long polling or (heaven forbid) flash, sockets can feel like an ugly hack by comparison.
00:44 < ericfwd> yeah, clever
00:44 < ericelliott> but that should be transparent to the developer. ;)
00:44 <@mbalho> samholmes: also projects named after fleetwood mac albums are big right now
00:44 < ericfwd> hah
00:45 <@mbalho> https://github.com/dominictarr/rumours
00:45 < icodeforlove> @ericelliott how do you go about debugging?
00:46 < samholmes> brb
00:46 < icodeforlove> @ericelliott and testing? http has so many tools
00:48 < samholmes> Thanks for the feedback.
00:49 < SrPx> samholmes: just wondering, how do I sudo? :s the password is not the same as the login
00:49 < SrPx> samholmes: I have to ask them the root password or what?
00:49 < samholmes> SrPx: I think the password is the same as the login.
00:49 < SrPx> samholmes: commonly it is!?
00:49 < samholmes> Not sure about this one
00:49 < SrPx> uname
00:50 < SrPx> wops
00:50 < SrPx> oO
00:50 < icodeforlove> @srpx is the uname root? 
00:50 < SrPx> icodeforlove: wat
00:50 < SrPx> icodeforlove: and hey (:
00:50 < samholmes> Guys, help me out here. Is the password provided to sudo the same as the currently logged in user's password, or is it root's pw?
00:50 < icodeforlove> srpx is the username root
00:51 < SrPx> icodeforlove: no, it's my client's name 
00:51 < icodeforlove> srpx the clients account may not have permission
00:51 < s5fs> samholmes: usually the sudo password matches the user account, not root.
00:52 < s5fs> samholmes: case in point, ubuntu has no root password but sudo works just fine.
00:52 < icodeforlove> s5fs doesn't it depend on the user config
00:52 < SrPx> icodeforlove: so well... damn how I install node.js then
00:52 < s5fs> icodeforlove: i haven't been on a system where the sudo password was the same as root's password.
00:53 < samholmes> SrPx: What happens when you try to sudo?
00:53 < samholmes> Have you SSH'd successfully?
00:53 < SrPx> samholmes: it asks for the password (but a very weird message appeared on the first time). But I can't get it right
00:53 < s5fs> SrPx: if you are hardcore you could use the VPS console and put the system into single user mode, then reset whatever passwords you want. This is not the first path I'd go down, though.
00:53 < samholmes> SrPx: What's the message?
00:53 < icodeforlove> s5fs its possible to create an account that can't use sudo, the question is "is the user in the admin group"
00:53 < SrPx> s5fs: wait no way I could break serious things
00:53 < s5fs> icodeforlove: sudo itself does have a config, if your acct isn't in the sudoers file then no dice.
00:54 < SrPx> samholmes: We trust you have received the usual lecture from the local System Administrator. It usually boils down to these three things:      #1) Respect the privacy of others.     #2) Think before you type.     #3) With great power comes great responsibility.
00:54 < SrPx> samholmes: (I have.. not?)
00:54 < s5fs> icodeforlove: yes, correct. it's usually /etc/sudoers I believe
00:54 < s5fs> SrPx: that's a normal sudo banner, not an error  :)
00:55 < SrPx> s5fs: okay hm
00:55 < SomeoneWeird> sudo visudo
00:55 < s5fs> SrPx: your workflow shoudl be something like this
00:55 < icodeforlove> s5fs LOL
00:55 < samholmes> SrPx: Then you type the pword, then what?
00:55 < SrPx> (I don't even know which linux distro I'm on)
00:55 < SrPx> samholmes: Sorry, try again.
00:56 < s5fs> SrPx: 1) ssh user@host.com (provide password, login)  2) sudo su  (provide same password, let us know what error you get)
00:56 < samholmes> s5fs: "Sorry, try again." he says
00:56 < SrPx> s5fs: exactly. Just tried with "sudo su" (?) to make sure, same error.
00:57 < s5fs> SrPx: well you're stuck if you can't get root, that much is true.
00:57 < SrPx> s5fs: =L 
00:57 < icodeforlove> srpx is the client savvy?
00:58 < SrPx> savvy? icodeforlove 
00:58 < icodeforlove> srpx does he/she know how to use their system
00:58 < SrPx> icodeforlove: no
00:58 < icodeforlove> srpx :(
00:59 < s5fs> SrPx: what distro is that?
00:59 < icodeforlove> s5fs he doesn't know
01:00 < SrPx> s5fs: just said, no idea. uname just shows "Linux" 
01:00 < s5fs> SrPx: to check distro just 'cat /etc/*release'
01:00 < s5fs> SrPx: yeah, uname doesn't help for distro infomation (very often)
01:02 < SomeoneWeird> lsb_release -a
01:02 < icodeforlove> @someoneweird are we looking at the same page?
01:02 < s5fs> SrPx: my advice is to either reach out to the VPS provider for help, log into the VPS console and get single user mode that way, or find someone you trust with access to the host to lend a hand.
01:03 < icodeforlove> try uname -a
01:03 < SomeoneWeird> he was just asking about distro info, i wasn't paying attention to the rest of the convo
01:04 < icodeforlove> lsb_release -a should work
01:06 < s5fs> yup, that works too but /etc/*releaes is a bit more detailed, at least on ubuntu
01:07 < SrPx> (on the support with the host)
01:07 < s5fs> SrPx: best of luck! if you're not having fun, that's how you know you're learning ;-)
01:15 < SrPx> (Damn guys, I have no access to the root)
01:15 < SomeoneWeird> why not?
01:15 < SrPx> And worse, It's actually more expensive because of that. "Managed Server" or some bs that they're in charge of installing stuff
01:16 < samholmes> SrPx: What host?
01:16 < SrPx> samholmes: a brazilian overly expensive host called locaweb
01:16 < SrPx> is that common? "Managed Server"?
01:16 < icodeforlove> srpx yes 
01:17 < SrPx> s5fs: thanks everything here is fun at least :p
01:17 < SrPx> )= 
01:17 < samholmes> SrPx: You're client cannot switch hosts?
01:17 < icodeforlove> srpx you client may need to switch hosts or upgrade, thats the cost of using things like node on restricted systems that don't support it
01:17 < SrPx> He's kinda tired right now, I think I'll approach him about that tomorrow
01:17 < SrPx> But yea, I tried.
01:18 < samholmes> SrPx: I'm using IntoVPS, it's cheap.
01:18 < SrPx> icodeforlove: yes :l
01:18 < icodeforlove> these guys are nice https://www.digitalocean.com/
01:18 < SrPx> Maybe I could convert my code to PHP if I could just figure out how to use the imagemagick library there
01:18 < SrPx> well more work
01:18 < SrPx> :l
01:18 < SrPx> samholmes: I'll check that :D i'm looking for suggestions for me, thanks
01:19 < SomeoneWeird> ew php
01:20 < icodeforlove> srpx check out https://www.digitalocean.com/, they are half the price 
01:20 < SomeoneWeird> if you don't have root, you're gunna have lots of trouble dev'ing on the server anyway
01:21 < SrPx> icodeforlove: sure, ty (:
01:24 < dhci> looks like connect.urlencoded is what I was looking for (still getting familiar with this) and querystring.parse and qs.parse were phased out
01:25 < etcetera> has anyone looked at redshift for their apps?
01:26 < SrPx> so guys, I have to write a request asking they to install what I need. Well, just "node.js" and "imagemagick", right? Npm libraries doesn't need sudo, right?
01:27 < icodeforlove> srpx some do
01:27 < uberbrady> etcetera: played with it briefly.
01:27 < SrPx> :s
01:29 < etcetera> uberbrady: thoughts? works with standard postgres driver?
01:30 < uberbrady> I just played with running a data-load, and some very very simple analytics queries. I used a standardish postgres driver.
01:30 < uberbrady> Seemed fine - nothing really too interesting. I didn't throw enough data at it to really get a feel for what it can do
01:30 < mscdex> SrPx: you don't need root for node/npm
01:30 < mscdex> you can install node locally
01:31 < mscdex> somewhere in your home directory
01:31 < icodeforlove> mscdex but for some of his npm modules he may want to use 
01:31 < mscdex> you don't need root for gcc?
01:31 < bradleymeck> Corey: == coreybutler?
01:32 < mscdex> icodeforlove: npm modules do not complicate anything
01:32 < Corey> bradleymeck: No, but I've debated hiring a butler.
01:32 < mscdex> icodeforlove: at most, they might require compilation, but that's it
01:32 < Corey> Not because I require butling, but to sow confusion.
01:32 < SrPx> mscdex: how!?
01:32 < mscdex> even `npm install -g` should work fine
01:33 < bradleymeck> anyone know of a module to change windows file ACLs?
01:34 < mscdex> SrPx: download one of the pre-built tarballs and extract it to some place in your home directory and put the resulting relevant path in your $PATH so it can find the node executable
01:34 < SrPx> fatal: could not create work tree dir 'node'.: Permission denied
01:34 < mscdex> ?
01:34 < SrPx> mscdex: hm a sec
01:37 < SrPx> mscdex: really sorry but how exactly do I download the tarballs from the command line
01:37 < SrPx> mscdex: I was trying git clone instead
01:38 < mscdex> SrPx: something like this: https://gist.github.com/mscdex/c1fd34afe6456dace021
01:38 < mscdex> SrPx: you'll probably want to put the last line in your ~/.bash_profile or ~/.bashrc or ~/.profile for future sessions
01:39 < mscdex> SrPx: that example is for 64-bit linux
01:39 < mscdex> SrPx: substitue x64 with x86 for 32-bit linux
01:40 < SrPx> (trying)
01:41 < SrPx> mscdex: thanks, but what's that: -bash-3.2$ node node: /lib64/libc.so.6: version `GLIBC_2.9' not found (required by node) node: /lib64/libc.so.6: version `GLIBC_2.6' not found (required by node) node: /lib64/libc.so.6: version `GLIBC_2.7' not found (required by node)
01:43 < carpii> what would you say it means ?
01:43 < SomeoneWeird> you'll have to compile it yourself
01:44 < SrPx> ... where I am supposed to learn how to do it? :l
01:44 < carpii> what sort of machine are you loged into SrPx?
01:45 < carpii> the -bash-3.2$ prompt is a little odd
01:45 < carpii> maybe your environment is not setup
01:47 < mscdex> SrPx: yikes that's an old system
01:47 < SrPx> carpii: I'm not sure
01:47 < mscdex> SrPx: RHEL 4?
01:47 < SrPx> mscdex: how do I know ? :l
01:47 < mscdex> SrPx: well, doesn't matter really. you'll have to compile from source then
01:47 < azylman> Bash 3.2 isn't old?
01:47  * SrPx almost rewritting everything in PHP :(
01:48 < SrPx> mscdex: can I do that without su
01:48 < mscdex> SrPx: if you have a compiler installed
01:48 < mscdex> SrPx: `which gcc`
01:49 < SrPx> mscdex: /usr/bin/gcc
01:49 < mscdex> ok good
01:50 < mscdex> what version does `gcc -v` say?
01:50 < SrPx> Can I paste everything ?
01:50 < mscdex> no
01:50 -!- mode/#Node.js [+o sblom] by ChanServ
01:50 < mscdex> just look at the last line
01:50 < mscdex> where it says the gcc version
01:51 < SrPx> mscdex: oh sorry, 4.2.1
01:51 < mscdex> ok that should be fine then
01:52 < mscdex> SrPx: so just do: curl http://nodejs.org/dist/latest/node-v0.8.21.tar.gz | tar zx
01:53 < SrPx> mscdex: sure 
01:53 < mscdex> then enter the directory and try: ./configure --prefix=$HOME/node && make && make install
01:55 < SrPx> File "./configure", line 360     1 if options.unsafe_optimizations else 0)        ^ SyntaxError: invalid syntax
01:55 < mscdex> uh oh :-)
01:55 < SrPx> :c
01:55 < mscdex> you need a newer python
01:55 < SrPx> dude ok, don't worry :l
01:56 < mscdex> 2.5-2.7
01:56 < _stDEV_> OK, let's say I want to setup a simple app like the angular phonecat app but without cloning it. Is there a basic directory/cofig generator? ...or do I need to clone and remove what I don't want?  
01:56 < SrPx> mscdex: I'm abusing this already, but thanks a lot. I guess I really need to learn more about the unix shell
01:57 < mscdex> SrPx: well the problem is the setup you have there, it's really old. without access to a modern python version, you're really SOL
01:57 < mscdex> SrPx: just for kicks, what happens if you do like `which python26` ?
01:57 < dhci> ok I found an example that should do it, postDATA.split('&') and then I can get the the name value pairs
01:58 < mscdex> dhci: huh?
01:58 < SrPx> mscdex: no python26 in ...
01:58 < mscdex> SrPx: ah ok
01:58 < azylman> Try python --version
01:58 < SrPx> mscdex: python 2.4
01:59 < dhci> mscdex: I noticed that NodeJS would work really well with say a jQuery submission of a json string (application/json) but for just parsing form data you can't exactly use any built in function that I can see
01:59 < mscdex> dhci: you can use the querystring module built-in to node too
01:59 < mscdex> dhci: but that's for a "normal", single part form
01:59 < SrPx> Why would they use such an old build?
01:59 < dhci> mscdex: I keep getting undefined when using querystring.parse()
01:59 < azylman> SrPx: "I don't always have Python installed on my machines, but when I do, it's been out of date since 2006"
02:00 < dhci> mscdex: right I just want to get a few working samples running from a basic single part form
02:00 < SrPx> but dude doesn't python come with linux already?
02:00 < mscdex> dhci: are you sure you're passing it a string and not a Buffer?
02:00 < azylman> Whatever distro of linux they're using is probably also old :p
02:01 < azylman> SrPx: try typing uname -a
02:01 < SrPx> azylman: Linux hm5535 2.6.32.60-grsec-2.yos.x86_64 #1 SMP Thu Jan 31 15:58:53 BRST 2013 x86_64 x86_64 x86_64 GNU/Linux
02:02 < azylman> Well, at least they keep their kernel up to date
02:02 < SrPx> ;s
02:02 < mscdex> kind of
02:02 < mscdex> :-P
02:03 < azylman> That's from a year ago, not too bad
02:03 < azylman> As opposed to a version of python from 2004
02:03 < azylman> Actually not even a year, 4 months
02:03 < SrPx> "Linux" is a linux distro? I thought linux was what the family was called and Ubuntu, Fedora etc were the distros
02:03 < mscdex> a year?
02:03 < mscdex> 2.6.32 was released in 2009
02:03 < Lorentz> yes, year of linux desktop
02:03 < Lorentz> 2013
02:04 < Lorentz> you must be on debian stable
02:04 < azylman> Hmm, weird. The linux kernel archives says it's October 2012
02:04 < Lorentz> or something crazy old like that
02:04 < mscdex> http://kernelnewbies.org/Linux_2_6_32
02:04 < Lorentz> azylman: probably the latest update
02:04 < SomeoneWeird> LOL
02:05 < SomeoneWeird> thats no where near up to date
02:05 < SomeoneWeird> we're at 3.8 now
02:05 < pcarrier> hey! just watched http://www.youtube.com/watch?v=jo_B4LTHi3I and around 51, ryan starts splitting his boomerang into multiple named methods.
02:05 < Lorentz> 3.8 is more like 2.6.48
02:05 < Lorentz> only 16 "major" versions behind
02:05 < pcarrier> however he seems to leave out the problem of passing variables from his scope to callbacks (solved when keeping them in context as closures can access their outer scope)
02:06 < pcarrier> how is that solved?
02:06 < mscdex> oh wait, it's 2.6.32.60
02:06 < icodeforlove> @pcarrier never heard it called a boomerang hahahaha
02:06 < mscdex> so much newer
02:06 < mscdex> but still not 3.x
02:06 < azylman> Yeah
02:07 < pcarrier> icodeforlove: a colleague has a metajoke: "it's called a boomerang because it always return"
02:07 < azylman> I mean, it's four months old :p
02:07 < azylman> That's not that old
02:07 < mscdex> meh
02:07 < mscdex> 3.7.10 is the latest stable
02:07 < mscdex> 4 months apart
02:07 < mscdex> :-)
02:08 < euoia> anyone else tried running the voxel hello world demo?
02:09 < SrPx> )=
02:09 < mscdex> SrPx: hey, maybe you can compile/install python locally and use that ;-)
02:10 < samholmes> icodeforlove: That's awez!
02:10 < samholmes> digitalocean is cheap!
02:10 < SrPx> I gave up, I'll just wait they to install node/imagemagick and hope they do it correctly
02:10 < samholmes> Is it full VPS?
02:11 < SomeoneWeird> thats really bad you don't have root on your own server though
02:11 < azylman> lol
02:11 < mscdex> SrPx: maybe, but the problem is that node is still evolving fairly quickly, so relying on the system administrator to keep your node up to date may prove to be a hassle
02:11 < icodeforlove> samholmes: super cheap
02:11 < azylman> I was workin with someone once whose server was running windows 2000 :/
02:11 < samholmes> icodeforlove: cheaper than what I have right now
02:11 < icodeforlove> samholmes: great for clients
02:12 < SrPx> mscdex: it's a simple converting tool though 
02:12 < mscdex> SrPx: then why not just use the 'convert' utility included with imagemagick?
02:12 < mscdex> or graphicsmagick?
02:12 < mscdex> directly
02:13 < SrPx> mscdex: well my client wants a page on his website where he hosts a pdf and it magically becomes available as html in http://his_site.com/name_of_pdf.html
02:13 < samholmes> but how does KVM compare to openVZ?
02:14 < SrPx> mscdex: so well, I make a html page where he uploads to a node app, where I call imagemagick and organize the resulting image files back on the apache folder
02:14 < SrPx> mscdex: how'd you do that?
02:14 < mscdex> SrPx: php?
02:14 < mscdex> i mean.... you already have php available right?
02:14 < SrPx> mscdex: yea maybe but I don't know how to make it in php? :s
02:15 < mscdex> i don't know what to tell you then :-)
02:15 < samholmes> SrPx: Isn't there a gm api in php?
02:15 < SrPx> mscdex: I know more about javascript so that was easy
02:15 < SrPx> mscdex: :p
02:15 < mscdex> samholmes: yes
02:15 < SrPx> samholmes: gm?
02:15 < icodeforlove> @srpx just sell the client on a different server solution
02:15 < mscdex> or at least imagemagick
02:15 < samholmes> SrPx: graphicsmagick
02:15 < samholmes> Oh, but you mentioned imagemagick
02:16 < icodeforlove> @srpx its like you said they don't know much about their own setup so it shouldn't be hard
02:16 < samholmes> almost the same thing though
02:16 < SrPx> there's a php imagemagick but from what I've read you need php 5 to convert pdf to images and there were some things to install too, apparently
02:16 < SrPx> so well
02:16 < mscdex> gm > im
02:16 < icodeforlove> @srpx are you building something that >1000 people will go to every day? or <5?
02:16 < SrPx> I have to code the uploading part of the app now btw
02:17 < mscdex> SrPx: what does `which gs` say on the server?
02:17 < SrPx> icodeforlove: the pdf uploading <5, the resulting pages >1000
02:17 < SrPx> mscdex: /usr/bin/gs
02:17 < mscdex> then use ghostscript
02:17 < SrPx> I like that command. I'm learning a lot here and I feel bad for it ;l
02:17 < SrPx> mscdex: oh.
02:17  * SrPx things
02:18 < mscdex> gs can convert pdf to images
02:19 < pcarrier> has there been any work on node runtime distribution through single binary?
02:19 < pcarrier> something like embedding the codebase in a minimalistic VFS, in data segments, and loading code from there, could be nice
02:20 < SrPx> mscdex: (trying to figure out the command line equivalent)
02:21 < SrPx> msg mscdex can't help you enough
02:21 < samholmes> icodeforlove: do you have a digitalocean referral link I can sign up using? :P
02:23 < icodeforlove> samholmes: i don't think they do that :O, but thanks
02:24 < samholmes> icodeforlove: np figured I ask
02:24 < mscdex> pcarrier: i don't know about going that far, but you might look at what node-webkit is doing
02:26 < cpsubrian> Is it still true that you cannot do dTrace flame graphs in OSX?
02:27 < wwicks> mscdex: have you seen anything that defines a standardized way to query a printer for it's IPP endpoint?
02:28 < mscdex> wwicks: to be honest I haven't looked at IPP stuff in a long time, so I don't really know
02:29 < wwicks> mscdex: ok- my googling and research came up empty; thought I'd take a chance that you might know.
02:32 < mscdex> wwicks: some (including CUPS) might do some kind of LAN broadcasting or something *shrug*
02:32 < mscdex> or listen for a broadcast and respond back
02:32 < wwicks> I made my work-in-progress available on github/npm. I'm working to push out my PJL stuff too. Hopefully some folks with more experience than myself will find me :)
02:33 < wwicks> yeah, I see some broadcasts with wireshark- but I'm not finding anything useful in it for an IPP endpoint
02:34 < mscdex> wwicks: maybe you might have to be the one to send out a SSDP/UPNP/etc packet that printers respond to?
02:34 < Eigen> idg why ppl almost exclusively use git w/ github
02:34 < mscdex> Eigen: because it's not svnhub?
02:34 < mscdex> :-)
02:35 < Eigen> no
02:35 < Eigen> i mean
02:35 < Eigen> git is designed to be used without github
02:35 < Eigen> like
02:35 < Eigen> that was the point
02:35 < mscdex> github is hosting though
02:35 < wwicks> I like to share
02:36 < wwicks> git allows me to
02:36 < mscdex> Eigen: you could say the same thing about web servers: why do i need linode when i have my own machine at home?
02:36 < Eigen> yea
02:36 < Eigen> or when you can just colocate
02:37 < mscdex> the allure of github is that you can have a crazy amount of repos for free and you don't have to worry about maintaining infrastructure
02:38 < mscdex> *public repos
02:38 < SomeoneWeird> bitbucket is good too
02:38 < mscdex> you also get a very nice interface and access to a huge community
02:39 < wwicks> To add to mscdex's point- I also use it for my company's private repos… so we don't have to maintain the infrastructure and it works perfect for remote team members
02:40 < wwicks> Eigen: or was your question more focused on the 'exclusive' part?
02:40 < Eigen> the exclusive part
02:40 < mrvisser> Eigen: why *wouldn't* you use git with github?
02:40 < Eigen> many reasons
02:41 < Eigen> for one
02:41 < Eigen> privacy without payment
02:41 < wwicks> heh- I guess that's like asking why people use Facebook when there are other social networks.
02:41 < mrvisser> Eigen: let me rephrase, why *wouldn't* you use git with github for your pet projects that you don't care about being public?
02:41 < Eigen> mrvisser: well that's a different case is it not?
02:41 < mrvisser> and projects that you are writing open source
02:42 < mrvisser> sure, so your question is, why do so many people write open source?
02:42 < Eigen> nono
02:42 < mscdex> wwicks: it looks like CUPS uses at least SNMP for printer discovery
02:43 < Eigen> I just don't think it should be on one hosting site
02:43 < Eigen> majority that is
02:43 < SomeoneWeird> then make a competitor
02:43 < mrvisser> why?
02:44 < Eigen> because
02:44 < Eigen> I think competition is good
02:44 < mscdex> Eigen: there is bitbucket and others, but i believe it's github's feature-set that makes them popular
02:44 < mrvisser> competition for free open source projects?
02:44 < wwicks> mscdex: you have cups running local? check this out: http://localhost:631/help/network.html
02:44 < Eigen> it creates redundancy
02:44 < mrvisser> what do you mean redundancy?
02:44 < mscdex> wwicks: not on this machine i don't
02:45 < wwicks> mscdex: reading that I get the idea the CUPS folks don't have a good answer to the question
02:45 < mrvisser> there is lots of competition out there to github, the competition just isn't as good. Atlassian, FogCreek all have competitors
02:46 < wwicks> mscdex: I found the page on the web: http://www.cups.org/documentation.php/network.html
02:46 < mrvisser> enough to keep them honest
02:46 < mrvisser> and I don't know what you mean about redundancy
02:47 < mscdex> wwicks: looks like they also support discovery through mdns
02:48 < wwicks> that doc basically says "the landscape is scattered" lol
02:48 < mscdex> wwicks: http://www.dns-sd.org/
02:48 < mscdex> wwicks: for sure, lots of vendors want their own thing
02:49 < wwicks> mscdex: …not a single person in here is shocked to read that!
02:49 < mscdex> :-)
02:49 < s3shs> With node async it appears all functions are called from nexttick.  How does one know what the caller is when you're inside of a callback?
02:49 < s3shs> (async.waterfall.)
02:49 < mrvisser> travis-ci is slick.. I thought for sure my cassandra + node.js + rabbitmq + redis + elasticsearch project would never run on it, but the integration tests are all working, in about a 15 line yaml file
02:50 < mscdex> wwicks: looks like that's it for CUPS anyway: snmp and dns-sd/mdns
02:51 < wwicks> mscdex: yeah, I'll dig deeper into that after I get my PJL stuff pushed. Thx again.
03:01 < s3shs> So if I'm inside a callback with async, how do I know whom the caller is?
03:01 < Rojuienx> I'm setting up a new development machine.. Just downloaded the latex versions of node.js and mongodb, pulled my source from github and tried to run and got this error:
03:02 < Rojuienx> , fqdn = ~req.url.indexOf('://')
03:02 < Rojuienx>                       ^
03:02 < Rojuienx> TypeError: Cannot call method 'indexOf' of undefined
03:11 < samholmes> Anyone here good with real-time stuff?
03:11 < samholmes> I'm not sure if my real-time code is very scalable or solid.
03:11 < samholmes> I feel like maybe dnode/shoe isn't a good stack for my real-time stuff
03:13 < samholmes> Anyone here live in San Diego?
03:13 < samholmes> There are no good meet ups on NodeJS here. :\
03:14 < FunnyLookinHat> So I've got an app that I want to start up on boot and restart if it crashes - is there a doc anywhere to do that properly ?
03:17 < brycebaril> FunnyLookinHat: if you're on linux I suggest something like init
03:17 < FunnyLookinHat> brycebaril, And just run as "nodejs" user or something ?
03:17 < brycebaril> Yup, something like that
03:18 < FunnyLookinHat> right on thx
03:52 < Eigen> is there a site like pastebin for html files
03:52 < Eigen> that can be hosted
03:53 < g0z> geocities
03:57 < cainus> hey all... anyone know of active efforts to write a database in node?
03:59 < cainus> or any in-process persisted key-value stores?
04:00 < icodeforlove_> ?
04:00 < cainus> !
04:00 < icodeforlove_> :)
04:09 < Lorentz> I think everyone uses existing databases
04:10 < cainus> would be nice to have an in-process one for small stuff, but not a sql-based one like sqlite
04:11 < cainus> plus if erlang is fast enough for dbs, node must be ;)
04:12 < echo> I think erlang's usefulness comes from how inexplicably sturdy it is.
04:12 < cainus> supervisors explic it pretty well
04:33 < rho> I'm experiencing some weird stuff using process.setuid
04:33 < rho> namely it allows me to explicitly pass a uid like process.setuid(1000)
04:34 < rho> but if I try to pass a variable it throws as err
04:34 < rho> triple checked that that variable has a legitimate value
04:35 < rho> I have a feeling its something dumb
04:35 < rho> but anyone encountered this?
04:39 < rho> ah, yep
04:39 < rho> something stupid
04:39 < rho> was grabbing my uid from an environment var using process.env.MY_VARIABLE
04:39 < rho> had to typecast it to a number
05:34 -!- mode/#Node.js [+o TooTallNate] by ChanServ
05:54 < grork> Whats the best visual debugger these days? After a big of googling, lots of people recommend node-inspector, but looking at it's updates et al, it's quite old, and hasn't been updated in a while.
05:54 < grork> I tried out WebStorm, and it seems reasonable, but yet also kinda clunky
05:55 < gkatsev> there's another one, a la node-inspector...
05:55 < gkatsev> don't remember off the name off the top of my head.
05:55 < gkatsev> Let me look it up
05:56 < grork> Ta muchly
05:56 < gkatsev> https://github.com/c4milo/node-webkit-agent
05:58 < gkatsev> though: https://github.com/c4milo/node-webkit-agent/issues/12
05:58 < grork> Curious.
06:00 < grork> I'm coming from a front end world, being spoiled with things like xcode, and visual studio for the edit/run/debug cycle
06:00 < astropirate> hello friends
06:36 < drojas> hello.. I have a mongoose model as a Rest resource. When I perform a POST to create a doc the id is incrementing but the timestamp is not and is defined with a default: Date.now().... any idea?
06:52 < topaxi> drojas: defaul: Date.now() ?? try default: Date.now
06:52 < topaxi> without braces :)
06:55 < drojas> topaxi: thanks.. that helped
07:40 < 16SAA1G3I> what happened?
07:41 < icodeforlove> weird
07:51 < mape> Is there a know issue where latest unstable crashes when using express and reloading quickly? Not happening on latest stable. When running with forever I get error code: null on exit
08:05 < mape> And when not running forever it just outputs SIGABRT, no exception.
08:35 < [AD]Turbo> ciao
08:35 < mape> SIGABRT error, https://github.com/joyent/node/issues/4871 
09:26 < Ivru> Hi
09:29 < phrearch> hi
09:37 < Almion> Hi!
09:48 < AlmionvonAussig> Just wondering, are there some Czech users?
10:14 < d4mn> Hello
10:17 < d4mn> What is the best way to store current online users activity on redis or mongo and keep them track live in reports page? I was thinking about socket.io implementation with express.js but how about concurrent connections limit? Then i thought about setting time when user where active and just select connections by time interval and display them
10:17 < d4mn> but i need to update reports page immediately after users action
10:18 < d4mn> so sockets.io would be my choise. Any other solutions?
10:18 < wwicks> SSE
10:18 < wwicks> if you don't really need 2 way communication and IE support
10:19 < d4mn> what's SSE?
10:19 < d4mn> oh server sent events...
10:19 < wwicks> yeah
10:20 < wwicks> I use them like crazy to have prod info pushed to us realtime
10:21 < d4mn> do u use any model for sse?
10:22 < wwicks> what do you mean?
10:22 < wwicks> I just push JSON strings and parse them
10:23 < d4mn> never mind i'm kinda new in node.js still learning what this all means
10:23 < d4mn> i've got an idea and need to figure out what is the best way to do it
10:24 < Ivru> socket.io allows push ?
10:24 < wwicks> I try to get people to look at SSE because it is very simple… whereas socket.io is a bit more complex
10:24 < wwicks> but some people need the 2 way communication- so socket.io is what is required then
10:25 < d4mn> Hmz I think i need 2 ways connection with some events system from db or socket.io it self
10:25 < d4mn> does redis or mongo has event's system?
10:26 < wwicks> I can't help you there… if more people were awake in here- you'd get plenty of help :)
10:28 < wwicks> Ivru: yes
10:28 < d4mn> yeah it's morning here and on other side of planet it's night :D
10:28 < Ivru> d4mn, have read this ? http://www.gianlucaguarini.com/blog/nodejs-and-a-simple-push-notification-server/
10:29 < Ivru> have you*
10:29 < d4mn> Interesting idea putting contents on file and then whatch it
10:30 < d4mn> but i think it can be hard in resources when speaking about lot's of data about every user
10:30 < d4mn> in that case using db is better choise i think don't u?
10:33 < Ivru> yeah but you'll have to implement your own pub/sub mechanism I think
10:33 < Ivru> (also new to node and haven't look at the push possibilities of node)
10:34 < d4mn> yeah i'm thinking about pub/sub
10:35 < Ivru> d4mn, http://howtonode.org/redis-pubsub
10:37 < d4mn> Untill now i got to this: client connects thrue websocket -> his data is saved in db (don't know if i need this) -> event is passed to dashboard controller and cheks if there is admin connected to websocket (if so push new data to admin websocket) -> admin is joined sockets.io room same as other users and can send them live notifications
10:38 < abrkn\> which s3 client is pretty good?
10:38 < d4mn> i've got a feeling that something is wrong in this chain
10:42 < pixie79> hi - any ideas why when using parseInt to convert the string '020' i get the answer 16 and not 20? -> https://gist.github.com/pixie79/5055814
10:44 < d4mn> hmz interesting it sees 020 as octal and converts it to dec
10:44 < dhpe> pixie79: it's an octal
10:45 < pixie79> oh thats is not good - any idea how to get around that
10:45 < wwicks> pixie79: don't forget the radix!
10:45 < mac_nibblet> Anyone care to explain why console.log(util.inspect(new Object, true, null, true)) only returns {} ?
10:45 < d4mn> yeah use radix
10:45 < wwicks> parseInt("070", 10)
10:46 < wwicks> 10 is for base 10
10:46 < pixie79> ok thanks :)
10:46 < d4mn> or use Number('020')
11:48 < scruff_> so what is require in node.js, is it the same as #using in C#? 
11:49 < wwicks> it is a similar concept...
11:49 < cyan911> scruff_: you're fucking retarded; how about you read the god damn manual you fucking autist
11:49 < wwicks> but I can't call it the same
11:51 < substack> cyan911: hey now
11:51 < wwicks> don't usually see those responses in here :-/
11:52 < pyykkis> wwicks: here :) http://nodejs.org/api/modules.html
11:52 < wwicks> pyykkis: I think you meant that for scruff_?
11:54 < pyykkis> ah, yeah. sry, too fast fingers..or too slow head
11:55 < d4mn> anyone tried sails.js?
11:55 < wwicks> scruff_: visually, you can think of them as being similar (only visually in a file)
11:56 < wwicks> scruff_: however, a c# using statement will not cause anything to be executed… require() will. That is a major difference.
11:57 < wwicks> scruff_: require is a function that *can* (usually does) return something. Whereas you would never do this in c#: using System.IO('foo')
11:58 < scruff_> is that because node has functional capabilities and C# doesnt (really?)
11:58 < wwicks> I would say it is more because c# is compiled
11:58 < scruff_> ohhhhhh
11:59 < scruff_> i think i get it
11:59 < wwicks> c# needs the reference in the file to find the namespaces
11:59 < scruff_> is require how you include your own libraries?
11:59 < Havvy> scruff_: Yes.
12:00 < wwicks> …or the built in ones… or community ones
12:00 < Havvy> var myUtil = require('./my-util);  console.log(myUtil.toString({}));
12:00 < scruff_> thanks
12:01 < Trindaz_> Hey all, I'm hoping for some help with npm and "shared" packages
12:02 < wwicks> ok
12:02 < Trindaz_> I have 3 packages. 1 is a dependency of 2 and 3. I have a symlink in the node_modules folder of packages 2 and 3, but when I try to npm pack projects 2 and 3, npm throws an error, instead of just bundling the contents of 1.
12:02 < Trindaz_> So that's the problem: my question is, how should I structure my projects?
12:03 < Trindaz_> I don't want to be forced to store 1 in 2/node_modules or 3/node_modules. I also don't want to have to manually git push/pull into each one before packaging packages 2 and 3
12:03 < oxy> What's the v8 version after patch? If i check the v8 version it says something like 3.11.10.19, but v8 tags are only 3.11.10. Whats the 19 part?
12:03 < Trindaz_> What's the standard practice for managing this kind of situation?
12:04 < wwicks> sounds like you need package 1 to be its own package
12:04 < wwicks> you publish package 1, then 2 & 3
12:05 < wwicks> the symlink can stay
12:05 < Trindaz_> that's correct - package 1 is already it's own package
12:05 < wwicks> what is the npm error then?
12:05 < Trindaz_> but it's private, and I'm publishing to a PaaS that does not support git+ssh styled dependencies
12:06 < wwicks> all of these are on a private npm repo?
12:06 < Trindaz_> http://pastebin.com/zLMyLG8E
12:07 < Trindaz_> that's correct - each one is a private npm repo
12:08 < cyan911> damn node.js is the new fucking PHP
12:08 < cyan911> it's like that shitty little autistic kid that everyone thinks is cool and rad
12:08 < Trindaz_> I used npm pack as an example. It's the exact same error that occurs when I use "jitsu deploy", which is really what i'm trying to do to deploy there
12:08 < Trindaz_> cyan911 true
12:08 < pachet> cyan911: its ok dear, i packed you blt today
12:08 < pachet> your coworkers told me how you threw the pbj against the break room wall
12:09 < wwicks> Trindaz_: oooh I see now. I think you're going to need to wait for some more folks in here to get otta bed :) I can't help you with that one.
12:09 < cyan911> from writing C++ all day
12:09 < cyan911> i did
12:09 < Trindaz_> thanks wwicks - but have you encountered this before? how do you manage that 3 package scenario?
12:10 < d4mn> what's with cyan911? :? to much sugar?
12:11 < wwicks> Trindaz_: for my scenarios, I just keep them public… or hack something ugly together.
12:11 < wwicks> Trindaz_: nothing I can offer for you
12:11 < Trindaz_> ok thanks wwicks
12:11 < Havvy> d4mn: Troll. Just ignore him until an op gets around.
12:12 < wwicks> this channel doesn't get too many thankfully
12:14 < d4mn> lol
12:20 < alchimis_> hi everyone, I am trying to use pkgcloud
12:22 < alchimis_> this is my code https://gist.github.com/anonymous/ae7499f6a6120dcebfc0
12:22 < alchimis_> and i recieve this error "inside createImage-> Error: amazon Error (400): Bad Request"
12:22 < alchimis_> how can i debug and solve this?
12:25 < alchimis_> any one here reading my question?
12:26 < wwicks> I did, I just can't help. sry
12:27 < wwicks> there are lots of sleeping people in here :)
12:30 < alchimis_> :)
12:31 < alchimis_> but i think i hve to sign up my request, my question is how to sign up a request to amazon using pkgCloud ?
12:40 < antonio_> hello 
12:49 < mac_nibblet> Anyone care to explain why trying to inspect object prototypes only return {} ?
12:49 < zot> i'm looking for examples of 3rd party things integrating to Node.JS's libuv/libev loops; so far I have found zookeeper code.  any others known?
12:49 < erione> hi
12:51 < erione> i'm trying to spawn a process which uses libsandbox for sanddboxing
12:51 < erione> it used to work fine when the node version was 0.6.11
12:51 < erione> but now i upgraded to node 0.8.18
12:52 < erione> and its giving me an assertion error which says "stdin should be readable by current user"
12:52 < erione> same happens for stdout and stderr too
12:52 < mac_nibblet> erione: random tip, try to run as root to see if it's a permission issue
12:52 < mac_nibblet> and check the changelog for those features
12:52 < Trindaz_> wwicks: it was my bad. I had bundleDependencies = {...} instead of bundleDependencies = [...]
12:52 < Trindaz_> all good now
12:53 < wwicks> doh!
12:54 < erione> mac_nibblet: i dont know how to spawn a process with root user privileges
12:54 < erione> mac_nibblet, can you please help me with that?
12:55 < SomeoneWeird> you just run your program as root
12:56 < pixie79> I have a file write problem - https://gist.github.com/pixie79/5056520 - for some reason my file is not being written or giving me an error not sure why?
13:00 < erione> SomeoneWeird: didn't help :(
13:00 < erione> and this thing use to work when i was using node v0.6.11
13:01 < SomeoneWeird> pixie79, process.exit needs to be inside the .writeFile callback
13:02 < SomeoneWeird> erione, have a look at the docs for changes between the versions
13:02 < erione> mac_nibblet: SomeoneWeird: there's a change in v0.7.10 which says "child_process: new stdio API for .spawn() method"
13:07 < pixie79> SomeoneWeird: i thought that is what i had done ?  or do you mean it should be: err = fs.writeFile( Message, filename, function(err) { if (err) { return err}})} 
13:07 < pixie79> then do the exit if err is defined ?
13:08 < alchimis_> anyone here knows of a tutorial on using pkgCloud with Amazon
13:08 < alchimis_> I am getting this error: Error: amazon Error (400): Bad Request 
13:09 < alchimis_> if i follow the documentation of the pkgCloud
13:09 < alchimis_> but i can not debug to understand whats not working
13:09 < alchimis_> i think it shoud be a problem of malformed request
13:10 < alchimis_> so if any one knows about any tutorial
13:13 < SomeoneWeird> pixie79, move line 16 to immediately after line 14
13:14 < erione> SomeoneWeird, mac_nibblet : helped, thanks :)
13:14 < erione> actually the api for spawn changed
13:16 < SomeoneWeird> yep
13:17 < Lianzinho> hey guys, anyone using Stylus? Sorry, I couldn't find their channel...
13:23 < Lianzinho> ?
13:26 < rideh> https://github.com/madhums/nodejs-express-mongoose-demo/blob/feature/unique-email/config/passport.js  - line 152 - when trying to implement this code I don't understand err.errors.type.email.  I keep getting "TypeError: Cannot read property 'errors' of null"
13:30 < havvy> rideh: It means that 'err' is 'null'.
13:30 < tassmjau> rideh: it looks like it returns with err.errors.type.email even in cases where there is no error... 
13:31 < substack> pow https://github.com/substack/brfs
13:31 < substack> statically analyze and inline fs.readFileSync() sync calls in browserify bundles
13:31 < rideh> tassmjau: thanks, i was wondering where he came up with idea for errors.type.email when it's never been used anywhere
13:31 < rideh> after reading the node.js domains stuff it didnt seem to correlate so i thought i'd ask here. thanks
13:34 < alchimis_> anyone read my question?
13:43 < Lianzinho> hey guys, anyone using Stylus? Sorry, I couldn't find their channel...
13:45 < marcia-x3> I like coffeescript, but I srsly don't appreciate spending 30mins chasing a bug that's nothing more than spaces vs tabs
13:46 < SomeoneWeird> lol cs
13:47 < havvy> marcia-x3: Get a text editor that only puts in spaces.
13:48 < pachet> marcia-x3: coffeelint will help with that
13:48 < pachet> works in vim as a syntax checker, too
13:49  * marcia-x3 googles coffeelint
13:53 < Lianzinho> stylus? anyone?
13:53 < titanplate> any sequelize users here?
13:53 < titanplate> i'm wondering how could i add 1 to a value with updateAttributes
13:55 < titanplate> nvm, got it
13:55 < titanplate> just use '+1'
13:55 < titanplate> :p
13:57 < alchimis_> any one here can help me with an issue with pkgCloud?!
13:57 < alchimis_> i already asked my question, but i think no one reads it, so if someone can help i can post the qstion again
13:59 < titanplate> no, +1 actually doesn't seem to work...
13:59 < titanplate> ends up having 1... but doesn't ass
13:59 < titanplate> add*
14:02 < tongcx> hi guys, how do you loop through a map in Coffeescript?
14:03 < pyykkis> tongcx: for key, val of obc
14:04 < pyykkis> `for own key, val of obj` if you don't want to iterate over prototype properties
14:04 < pachet> for own key
14:04 < pachet> ah, beat me
14:04 < tongcx> pyykkis: thanks
14:20 < alchimis_> pkgCloud client.getServers(callback) out put : server Info []
14:20 < alchimis_> why it doesnt list all my servers
14:20 < alchimis_> info
14:21 < alchimis_> and here is my code 
14:21 < alchimis_> https://gist.github.com/anonymous/3c95b48d9c99504fb58c
14:21 < alchimis_> what's wrong with it
14:24 < pcarrier> is there an alternative to console.log that shows types?
14:24 < mac_nibblet> pcarrier: require util
14:24 < mac_nibblet> and use util.inspect
14:24 < mac_nibblet> i think it does
14:24 < mac_nibblet> im not sure to be honest
14:25 < pcarrier> mac_nibblet: util.inspect gives me the same thing
14:25 < wwicks> pcarrier: what kind of types are you talking about that cannot be inferred from the syntax?
14:26 < wwicks> pcarrier: javascript doesn't have too many types- you can tell them from the syntax
14:27 < pcarrier> wwicks: ok. > { dev: 16777219,
14:27 < pcarrier> wwicks: that's always a numeric, I assume?
14:27 < wwicks> yes, a Number object
14:28 < pcarrier> wwicks: and there are date objects, but nobody could implement their own date-like objects?
14:28 < pcarrier> wwicks: dates are a primitive of the language?
14:29 < wwicks> pcarrier: yes- but javascript is odd because everything is a hash table (meaning you can augment it all you want)
14:29 < SomeoneWeird> console.log(typeof variable, variable)
14:30 < pcarrier> so no, my date is of type object
14:30 < pcarrier> ok ok
14:30 < wwicks> javscript also has quirks that are boo boos that we all work around… like typeof date will give you "object"
14:30 < pcarrier> but its representation by console.log is not really helping with that
14:31 < pcarrier> oh my.
14:31 < pcarrier> wwicks: could I reimplement date with object and get the exact same semantics?
14:31 < pachet> just log whatever about it you want
14:31 < pachet> console.log(+ date)
14:31 < pachet> console.log(date.toString()
14:31 < pachet> *)
14:31 < pcarrier> pachet: I'm trying to learn about a data structure, which is a lot more painful if I have to explicitely inspect what I'm interested in by hand
14:31 < wwicks> you could with a bunch of work
14:32 < wwicks> javascript also has things that are "array-like"
14:32 < wwicks> meaning you can have something: {"0":"foo","1":"bar"}
14:33 < pachet> pcarrier: then roll your own terminal logger for printing the sorts of things you know you want across the board
14:33 < pcarrier> pachet: which is why I was asking if it existed :)
14:33 < pachet> if it encounters an object of type x, say, date, for instance, it will display certain information about it
14:33 < AAA_awright> wwicks: Well it looks like that, but if you use the new FuncName keyword, and that function has a prototype with variables, you can effectively create a class that's not a hash table. V8 won't actually use a hash table until it's more efficent than a struct
14:33 < pcarrier> pachet: when learning APIs, I sort of always want to see everything :)
14:34 < wwicks> if you want an alternate view of objects: console.log(JSON.stringify(myObj,null,2))
14:35 < wwicks> AAA_awrite is correct- when you dig deeper into the optimizations of the cool new engines… things are technically different under the hood
14:37 < AAA_awright> wwicks: Also, try aaa<tab>
14:39 < wwicks> AAA_awright, lol- I'm juggling too many windows and really should be optimizing my keystrokes! You like optimization don't you?
14:40 < jtomasrl> why im getting different values using crypto an ruby openSSL with the same attributes? https://gist.github.com/jtomasrl/5057158
14:40 < AAA_awright> wwicks: I'm like the easiest nickname to type on the entire channel, it's four keystrokes on two different keys half an inch from each other :p
14:41 < wwicks> AAA_awright, lol!
14:41 < wwicks> jtomasrl, what version of node?
14:41 < jtomasrl> wwicks: v0.8.16
14:43 < wwicks> jtomasrl, they have been doing a bunch of changes to the crypto lib… you can check out my issue I filed a bit ago: https://github.com/joyent/node/issues/4568
14:44 < jtomasrl> ok
14:44 < SomeoneWeird> <AAA_awright> wwicks: I'm like the easiest nickname to type on the entire channel, it's four keystrokes on two different keys half an inch from each other :p < wut
14:45 < AAA_awright> SomeoneWeird: ...Problem?
14:45 < SomeoneWeird> half a inch?
14:45 < SomeoneWeird> A & _?
14:45 < wwicks> jtomasrl, although that issue was fixed- your code might be touching a part that was changed in v0.9 though.
14:45 < AAA_awright> SomeoneWeird: <AAA_awright> wwicks: Also, try aaa<tab>
14:46 < SomeoneWeird> ah
14:46 < SomeoneWeird> then yes
14:46 < SomeoneWeird> :P
14:46 < wwicks> SomeoneWeird, he was calling me out on typing the nick wrong :(
14:55 < pats_Toms> is there any way to use Forever without command?
14:56 < pats_Toms> the default is node, but is there any way to run it without command?
14:56 < JohnMcLear> if you are looking at running an node instance as a service you can use an init script, that's what we do anyway
14:56 < JohnMcLear> see https://github.com/ether/etherpad-lite/wiki/How-to-deploy-Etherpad-Lite-as-a-service for reference pats_Toms
14:56 < slicky> forever -c COMMAND
14:57 < slicky> defaults to node
14:57 < slicky> forever --help for more info
14:57 < pats_Toms> yes, I tread -c "" but that isn't working
14:58 < slicky> what is the purpose of running it without a process?
14:58 < pats_Toms> for example I have shell script
14:59 < slicky> forever -c sh script.sh
14:59 < slicky> ?
15:00 < slicky> forever -c bash script.sh
15:00 < slicky> forever -c ksh
15:00 < pats_Toms> sh worked lol
15:00 < pixie79> what is the best way to read a variable from a json file, I have the file loaded and parsed, but my issue is with selecting it. Currently I have var customer = config.routing.XX.customer; where I have XX stored as a different variable
15:00 < pats_Toms> thanks
15:00 < slicky> yw
15:01 < wwicks> pixie79, you mean like config.routing[XX].customer
15:01 < slicky> function getCustomer(id) { return config.routing[id].customer; } ?
15:03 < pixie79> ok thanks i will try both :)
15:03 < slicky> they're basically the same thing :D
15:04 < pixie79> yep - i had too many '.''s involved
15:04 < slicky> config[type][id][subtype]
15:04 < slicky> config.type.id.subtype
15:04 < havvy> n     
15:05 < havvy> (Sorry, headphones dropped on keyboard)
15:05 < slicky> must be some havvy headphones
15:06 < havvy> I need headphones that go around my ears, not in it. And those aren't light.
15:06 < slicky> buhdumtiss
15:06 < wwicks> you're pretty slicky with your words
15:06 < slicky> i enjoy being punny
15:14 < hal> guys, when I run "nvm ls", the first line of the output is "N/A" , and the latest line is "latest -> 0.8.21 (-> N/A)"  (where "latest" is my alias). Does anyone know why this is, please?
15:16 < jfroma> JohnMcLear, does this upstart script for etherpad auto-restart if the app exit with status code 1?
15:22 < MI6> joyent/libuv: Marc Schlaich master * 0ad46bd : build, windows: return an error code on failure - http://git.io/tooSVg
15:30 < hal> guys, when I run "nvm ls", the first line of the output is "N/A" , and the latest line is "latest -> 0.8.21 (-> N/A)"  (where "latest" is my alias). Does anyone know why this is, please?
15:34 <@isaacbw> does anyone have any idea why a site might have a broken style on all my linux boxes, but not on windows
15:34 <@isaacbw> or, is anyone else here running arch
15:36 < SomeoneWeird> because arch
15:36 < SomeoneWeird> >.>
15:36 < SomeoneWeird> <.<
15:36 <@isaacbw> huh?
15:36 < SomeoneWeird> lmao, nvm
15:37 < SomeoneWeird> what site?
15:37 < MI6> joyent/node: Ben Noordhuis v0.8 * 522668b : doc: update instructions on home page  Document how to run the example on - http://git.io/hYPZ9g
15:37 <@isaacbw> aws
15:37 <@isaacbw> https://aws.amazon.com/
15:37 < SomeoneWeird> oh
15:37 <@isaacbw> the menu has been broken for a long time, but only on linux
15:37 < SomeoneWeird> works fine for me
15:37 < pachet> @isaacbw: maybe a case sensitivity issue?
15:37 <@isaacbw> what system
15:37 < SomeoneWeird> deb/chrome
15:37 <@isaacbw> hrm
15:38 <@isaacbw> pachet: why would that affect style
15:38 <@isaacbw> maybe it's something weird amazon does with browser checks
15:38 < pachet> @isaacbw: when you say 'broken on linux'
15:38 < pachet> do you mean, broken when you host it on a linux box
15:39 < pachet> or broken when you browse to it on a linux machine
15:39 <@isaacbw> when I browse to it
15:39 < SomeoneWeird> tried diff browser?
15:39 <@isaacbw> and apparently it's an arch thing, not a linux thing
15:40 <@isaacbw> yea, both ff and chromium
15:40 < pcarrier> oh my. just realized that coffee was logging the return value in black.
15:40 < pcarrier> I have a black background.
15:40 <@isaacbw> and two different machines and monitor sizes
15:40 < SomeoneWeird> lmao pcarrier 
15:40 < SomeoneWeird> isaacbw, thats really weird
15:40 <@isaacbw> I have no idea what arch could be doing that would cause css to screw up though
15:40 < SomeoneWeird> nothing in console?
15:40 <@isaacbw> hmm
15:40 < pcarrier> SomeoneWeird: not exactly funny. do you know how to change it? :D
15:40 <@isaacbw> nope
15:40  * pcarrier has been playing with node for an hour, finally realized what those "empty" lines are
15:41 < JohnMcLear> jfroma: afaik yes
15:41 <@isaacbw> and I can inspect and fiddle with the css to make it work. The main panel is too narrow and the menu doesn't fit
15:41 <@isaacbw> I have no idea what I can do about it :(
15:41 < SomeoneWeird> pcarrier, http://roguejs.com/2011-11-30/console-colors-in-node-js/
15:41 <@isaacbw> except write a greasemonkey script
15:41 <@isaacbw> which seems absurd
15:42 < SomeoneWeird> email aws support
15:42 < SomeoneWeird> ..lol
15:42 < pachet> it only happens when you visit your own pages?
15:43 <@isaacbw> oh, support
15:43 <@isaacbw> what a novel idea
15:43 < pcarrier> coffee> fs.readlink '/example', (e,l) -> console.log(e)
15:43 < pcarrier> coffee> { [Error: ENOENT, readlink '/example'] errno: 34, code: 'ENOENT', path: '/example' }
15:43 < pcarrier> I'm not sure I understand.
15:43 < SomeoneWeird> readlink?
15:43 < pcarrier> it's an object with an array?
15:43 < SomeoneWeird> readFile?
15:43 < pcarrier> SomeoneWeird: no no, it's purposefully a readlink.
15:43 < SomeoneWeird> errors are special
15:43 < pcarrier> SomeoneWeird: /example doesn't exist, that's the point.
15:43 < pcarrier> SomeoneWeird: what's not a corner case in js/node? :D
15:44 < SomeoneWeird> well, not "special"
15:44 < MI6> joyent/node: Ben Noordhuis v0.8 * d879042 : build, windows: disable SEH  Turn off safe exception handlers, they're in - http://git.io/lh9r-Q
15:44 < pcarrier> SomeoneWeird: so anyway, how should I read this?
15:44 < SomeoneWeird> console.log(e.message)
15:44 < pcarrier> SomeoneWeird: yeah but I'm trying to understand what this object is like :D
15:47 < pachet> you can't ever rely on console.log to tell you 'what an object is like'
15:47 < pachet> poeple can override .toString() and .valueOf() with whatever they want
15:47 < SomeoneWeird> require('util').inspect(e)
15:47 < Kakera> console.log doesn't use toString
15:49 < pcarrier> SomeoneWeird: util.inspect hasn't shown me anything different that console.log in the REPL yet.
15:49 < pcarrier> SomeoneWeird: as in, similarly not really helping all that much :)
15:50 < pcarrier> I'll write a recursive printer ASAP.
15:50 < pcarrier> will help my experimentations a lot.
15:50 < havvy> pcarrier: util.inspect() shows non-enumerable properties. console.log() doesn't.
15:50 < havvy> You can also set a few properties in util.inspect like recursionl imit.
15:50 < pcarrier> havvy: yeah, you can ask for that, indeed
15:50 < pachet> Kakera: oh, you're right
15:51 < pachet> they can override 'inspect' then
15:51 < pcarrier> havvy: if the default for the 2nd parameter is true, then I haven't stumbled against a hidden property :D
15:51 < pachet> function Foo(){ this.inspect = function(){return 'nothing to see here';} }
15:51 < SomeoneWeird> lol
15:52 < havvy> Question: Is there a way to set the prototype of array only in the module you are in?
15:53 < pachet> havvy: if you run it in a separate vm context :[
15:53 < havvy> I want to do this:  array.prototype.join = (function () { var join = array.prototype.join; return function () { join.call(this, " "); }());
15:53 < havvy> Without it escaping out of the module.
15:53 < SomeoneWeird> dont think so
15:54 < pcarrier> hmmm. process.argv contains absolutely all argvs
15:54 < pcarrier> node doesn't offer the ones that it didn't use somewhere?
15:55 < jrajav> havvy: No, which is precisely one of the reasons why you should *never* modify native prototypes
15:55 < pcarrier> I don't wanna know if my script was executed directly and had a shebang, if node was provided with parameters, etc.
15:55 < havvy> jrajav: Yes. It is the reason I don't modify native prototypes outside of when I was doing school code in jslibs.
15:56 < jrajav> pcarrier: Then don't look at indices 0 and 1?
15:56 < pcarrier> jrajav: you're missing my point. what if it was called with node --use_strict myscript.js?
15:58 < bnoordhuis> pcarrier: then what>
15:58 < bnoordhuis> err, question mark
15:59 < bnoordhuis> v8 flags are filtered out, if that's what you're asking
15:59 < pcarrier> oh, ok.
15:59 < wwicks> havvy, seems like I'm missing something- you're trying to just default join to using " " instead of ","?
15:59 < pcarrier> so the first one is always the interpreter, the 2nd one is always the script name iif there is one
16:00 <@isaacbw> what could outlook possibly be doing that causes it to lock up for seconds at a time
16:00 <@isaacbw> holy shit microsoft
16:00 < pcarrier> isaacbw: a garbage collection? :D
16:00 < wwicks> that's be my guess
16:00 <@isaacbw> lern 2 thread
16:00 < pachet> @isaacbw: trying to talk with other kernel processes that are slow as fuck
16:01 < gildean> isaacbw: it could be indexing, but most likely it's caused by some plugin, check which plugins you have enabled
16:01 <@isaacbw> I don't use plugins
16:01 <@isaacbw> it's a fresh installation
16:01 <@isaacbw> it's just a piece of shit
16:01 < pcarrier> does coffeescript offer unpacking?
16:02 < pachet> you are correct
16:02 < wwicks> if microsoft just just figure out how to drag and drop performance
16:02 < MI6> joyent/node: Ben Noordhuis master * cb87920 : Merge remote-tracking branch 'origin/v0.8'  Conflicts: 	AUTHORS 	ChangeLo (+15 more commits) - http://git.io/WQ3gVQ
16:02 < pcarrier> something like foo=['a','b']; console.log *foo
16:02 < gildean> isaacbw: even on a fresh installation there're some plugins
16:02 < pcarrier> which would call foo('a','b')
16:02 <@isaacbw> gildean: I'll look
16:03 < wwicks> gildean, do they have that sneaky weather bug in their installs now? :P
16:04  * sneakyness slaps wwicks around a bit with a large trout
16:04 <@isaacbw> gildean: wow okay
16:04 <@isaacbw> I just disabled all the add-ins and it's snappy
16:04 <@isaacbw> well, not snapy
16:04 <@isaacbw> *snappy
16:04 < roxlu> hi guys! How can I send just raw bytes to a socket?
16:04 <@isaacbw> but at least not infuriating
16:04 < gildean> isaacbw: yeah, it's usually the plugins that slow it down
16:05 < havvy> wwicks: Yes.
16:06 < havvy> Might actually s/join/toString/  but from what I'm being told (and from my own research), it's not possible to make such a change locally.
16:07 < wwicks> havvy, I'm going to assume there is more to this story than you not liking to type 3 extra chars… right?
16:07 < pachet> there's no way to do it without affecting other modules that doesnt lock you out of correspondence with those modules (understandably)
16:08 < havvy> pachet: No. It's about saving 3 characters.
16:08 < pachet> so proc.spawn(), runInNewContext(), etc, but then your ability to interact with the child module is hamstringed
16:08 < pachet> hamstrung?
16:08 < havvy> hamstrung would be it.
16:08 < Gregor> String strang strung
16:08 < pachet> havvy: also that last one was re: wwicks
16:09 < tongcx> hi guys, how to prevent triggering event A when I'm in the event handler of A while doing something will trigger A in normal setting?
16:09 < pcarrier> am I a horrible person for using:
16:09 < pachet> unbind the handler, then rebind it after you're done
16:09 < pcarrier> 				switch true
16:09 < pcarrier> 					when stats.isFile()
16:09 < pcarrier> [...]
16:09 < pcarrier> ?
16:10 < tongcx> pachet: yes, it works, but seems not beautiful
16:10 < pachet> set a flag indicating that the next event passed in to the handler should be ignored
16:10 < pachet> yeah, the beautiful solution would be to avoid that situation in the first place
16:11 < tongcx> pachet: the thing is i want to validate my hash, and correct it if necessary
16:11 < tongcx> i did this in my hashchange handler
16:11 < tongcx> so, i got infinite loop
16:11 < pachet> which means that you didnt correct it properly, right?
16:11 < pachet> if it had been corrected, it would have passed the check?
16:11 < tongcx> pachet: good point!
16:12 < hal> guys, when I run "nvm ls", the first line of the output is "N/A" , and the latest line is "latest -> 0.8.21 (-> N/A)"  (where "latest" is my alias). Does anyone know why this is, please?
16:12 < roxlu> Does someone knows if there is a way to send an object as json w/o quotes ? 
16:12 < pachet> roxlu: send it where?
16:12 < sshaginyan> Does anyone know of any good object validation libraries?
16:12 < pachet> and if it doesnt have quotes, its not strictly json
16:12 < pachet> its just a json-ish string
16:12 < roxlu> over socket
16:13 < wwicks> sshaginyan, what kind of validation you looking for?
16:13 < roxlu> pachet hmm when I make it a string the my_data_as_str.length is not correct
16:13 < roxlu> the 'backslashes' arent added to the length
16:14 < sshaginyan> So I want something like this. { one: { _equal: regex }, two: { _equal:  value  }, thee (optional) : {_equal: something} }
16:14 < sshaginyan> wwicks: Something like that
16:14 < roxlu> so .. maybe I need a way to get the 'real' size of a stringyfied object (in bytes)
16:14 < sshaginyan> And then I want to check that object with an actual object and get errors back
16:15 < pachet> roxlu: Buffer.byteLength(myString, 'utf8')
16:15 < tongcx> pachet: what a silly bug... thanks
16:15 < wwicks> sshaginyan, like https://github.com/chriso/node-validator
16:15 < pachet> tongcx: np :]
16:15 < s3shs> async waterfall... is there a way to turn on logging so we can see what step it makes it through before failing?
16:16 < roxlu> pachet: thanks
16:16 < pachet> s3shs: does failing mean throwing an error?
16:16 < sshaginyan> wwicks: Does this offer optional parameters?
16:17 < wwicks> sshaginyan, the one I wrote does: https://github.com/williamwicks/propex-validation
16:18 < zmo> hi
16:19 < wwicks> sshaginyan, as the example shows, you defined propex strings that configure the validator like "{StoreName,Departments[0{Name,Phone,Hours},1{Name,Phone?,Hours?}]1:5?}"
16:19 < wwicks> sshaginyan, "?" make them optional
16:19 < zmo> how do I test whether something is in an array using nodejs ?
16:19 < pachet> zmo: Array.indexOf
16:19 < sshaginyan> wwicks: For example .....
16:19 < wwicks> Array.isArray()
16:19 < zmo> there's no [1,2].contains(2);
16:19 < sshaginyan> wwicks: How would I validate this one
16:19 < zmo> uh ok
16:20 < pachet> if ( myArray.indexOf(2) === -1 ) --> it's not there
16:20 < zmo> that's a bit weird, and I don't get why there is Array.contains in spidermonkey, and not in nodejs
16:20 < zmo> and also, is there any kind of ecmascript7 support in nodejs ?
16:20 < sshaginyan> wwicks: {service: 'one', subservice: 'two', pageNumber : `regex`, setNum: `regex` <-- optional }
16:20 < euoia> zmo: you can use underscorejs, which has _.contains(list, value)
16:21 < wwicks> zoo, oops I read your question wrong
16:21 < sshaginyan> wwicks: So setNum is optoinal
16:21 < zmo> euoia - thanks
16:21 < zmo> and pachet thanks
16:21 < pachet> ecmascript 6 you mean? es7 is like
16:22 < pachet> 2020 :[
16:22 < wwicks> zoo, you can shortcut packet's suggestion to ~myArray.indexOf(2)
16:22 < zmo> pachet - well, no, stuff like destructured assignment is just <3 :->
16:22 < zmo> wwicks - I'm zmo :-)
16:23 < hal> does anyone have any idea what is causing the nvm problem. Even if someone can tell me what the version number in parenthesis means, it would be helpful... ie nvm ls  results in "default -> 0.8.21 (-> N/A)"
16:23 < sshaginyan> wwicks: "{StoreName,Departments[0{Name,Phone,Hours},1{Name,Phone?,Hours?}]1:5?}" is Departments an array?
16:23 < zmo> ie.: const {foo, bar} = {foo: 'a', bar: 'b'};
16:23 < pachet> zmo: a lot of that stuff is kind of like
16:23 < wwicks> zmo, lol sry, this client keeps spell correcting me!
16:23 < wwicks> sshaginyan, yes
16:23 < pachet> things that moz thought would end up in 6
16:23 < sshaginyan> wwicks: Got it
16:23 < pachet> but likely wont
16:23 < zmo> and also the let(a=2) print(a); stuff is also awesome :-)
16:23 < pachet> but they decided would be cool to implement anyway
16:24 < wwicks> sshaginyan, it allows deep inspection/validation
16:24 < pachet> zmo: you *can* enable block scoping though
16:24 < slaskis> sshaginyan: there's also https://github.com/flatiron/revalidator
16:24 < pachet> zmo: pass --harmony_scoping to node to enable it
16:24 < sshaginyan> wwicks: And what is the 1:5? at the end?
16:24 < zmo> pachet - ok
16:24 < pachet> zmo: or just 'node --harmony' to enable all harmony features
16:25 < wwicks> sshaginyan, you define a validator that would validate every property possible. then you use the proper string to say which ones you want to actually check (sometimes you want all, sometimes you want one a few)
16:25 < wwicks> sshaginyan, the 1:5 is a range for an array… so it says that it must have 1 to 5 items
16:25 < zmo> thanks
16:25 < hal> ok, I resolved it. I was missing the "v" prefix from the version numbers
16:26 < sshaginyan> wwicks: I can have regex in there right?
16:27 < wwicks> sshaginyan, when you define the Validator, yes. but not right in the propex string.
16:27 < vanseverk> Hi there, which websocket lib is best used with node.js nowadays?
16:27 < vanseverk> socket.io seems to be getting a bit...outdated
16:28 < wwicks> I really need to turn off the spell correct in my client
16:28 < sshaginyan> wwicks: So I can do this?  {Name:"Main", Phone:"1231231234", Hours: /^[0-9]*$/}
16:30 < wwicks> sshaginyan, hold on a sec
16:34 < sshaginyan> wwicks: k
16:35 < s3shs> pachet, no failing would mean any function that causes the waterfall to stop, I guess.
16:37 < sshaginyan> wwicks: ?
16:38 < wwicks> sshaginyan, https://gist.github.com/williamwicks/5058015
16:39 < sshaginyan> wwicks: Thanks sooo much
16:39 < dunpeal> Hi. How do I read a file line-by-line, getting each line as a string?
16:40 < wwicks> sshaginyan, not sure if you looked at the read me for propex- it should help: https://github.com/williamwicks/propex
16:40 < sshaginyan> wwicks: Are the keys case sensitive?
16:40 < wwicks> dunpeal, http://nodejs.org/api/readline.html
16:41 < wwicks> sshaginyan, yes
16:41 < wwicks> dunpeal, oops that wasn't for you
16:43 < dunpeal> wwicks: yeah, I'd actually like to just read the file synchronously
16:44 < dunpeal> like Python's `for line in open(fn): do_something_with(line)`
16:47 < Sly> dunpeal: var fs = require('fs'); var file = fs.readFileSync('yourfile', 'utf8'), lines = file.split('\n');
16:48 < dunpeal> Sly: the problem is that the file may be very large, so I'd rather only process one line at a time
16:49 < Bob_Gneu> dunpeal: is your nick a reference to vampire hunter D?
16:49 < dunpeal> Bob_Gneu: yup
16:49 < Bob_Gneu> =)
16:49 < Bob_Gneu> You just made my day a bit brighter
16:49 < Bob_Gneu> thanks
16:49 < Sly> dunpeal: for (var i = 0; i < lines.length; i++) { console.log(lines[i]); }
16:49 < wwicks> dunpeal: if you're doing it syncro- you're going to end up loading large files into memory?
16:49 < Sly> dunpeal: lines.forEach(function(line) { console.log(line); });
16:49 < Sly> Whichever you prefer.
16:50 < wwicks> dunpeal: let me say it another way- if they are large files, you'll want to do it async
16:50 < dunpeal> Sly: at the point I have all lines of the file in that huge `lines` array, I'm already screwed :)
16:51 < dunpeal> wwicks: you're probably right, thanks. I need to get used to not having Python generators
16:51 < Sly> dunpeal: then don't assign it to a variable? idk what to tell you there.
16:51 < dunpeal> does Node/JS plan to support those any time?  generators, aka co-routines, aka continuations
16:52 < bradleymeck> dunpeal: unlikely, single frame yields will come eventually though
16:52 < wwicks> dunpeal: if you DO decide to load it into memory- then you'll want to load it as a buffer, and search the buffer for newlines, then read the strings from the buffer 1 at a time.
16:52 < havvy> dunpeal: Ask the V8 people.
16:52 < havvy> dunpeal: Node uses V8 (Google's JS engine).
16:52 < dunpeal> Sly: yeah, to be fair, it's a very specific Python feature: there's a reader co-routine, that keeps reading until it gets to the next '\n', and "yields" control to the consuming routine
16:53 < bradleymeck> dunpeal: however node-fibres does do that, but beware of shared state and coroutines
16:53 < bradleymeck> you can always use nested functions to implement generators but /meh
16:54 < dunpeal> thanks, I'll check out both node-fibres and single-frame yields
16:54 < dunpeal> you mean, use a stateful closure to basically implement a generator...
16:56 < mrvisser_> anyone here using expressjs' cookieSession?
16:57 < mrvisser_> oh wait, there is an express channel, nm :)
16:57 < Rachiel> holla
17:00 < pixie79> I have created a connection to a socket with the following line: var client = net.connect({host: config.okc.server, port: config.okc.port, setTimeout: routingtimeout},  can I confirm that the timeout would trigger after the set time if no further data has been received/sent ?
17:00 < jfroma> why nodejs is so awesome?
17:01 <@isaacbw> you coulda had a v8
17:01 < bnoordhuis> jfroma: it's made of ground unicorns
17:01 < jfroma> is that on purpose or just an accident
17:01 < bnoordhuis> on purpose. the occasional pixie is an accident though
17:02 < bnoordhuis> but it adds to the flavor
17:03 < jfroma> bnoordhuis, I knew it! thanks for the info, its really helpful
17:06 < dunpeal> I plan to write a data visualization server in Node.js. Is there a a front-end visualizing library that interfaces particularly well with node?
17:07 <@isaacbw> what kind of visualization dunpeal 
17:07 <@isaacbw> and it doesn't really matter since you'll write the interface yourself
17:08 < dunpeal> isaacbw: I have a bunch of large CSV, mostly describing time-series, and I need to draw plots / histograms / graphs from them.
17:09 < dunpeal> i.e. the user asks "please plot the combined timeseries of data set 123 and 334"
17:09 < dunpeal> node reads the CSVs (stored on a large shared disk mounted on the hosting server), processes, and plots
17:09 < bradleymeck> dunpeal: d3 can handle CSV directly
17:10 < dunpeal> is that a sensible usage of node?
17:10 <@isaacbw> dunpeal: R does that
17:10 < dunpeal> how would R be better?  specifically, I thought it would be a bit too slow
17:10 <@isaacbw> oh, d3 looks pretty good
17:10 < bradleymeck> many things do, just depends on interface
17:10 <@isaacbw> we can't answer that for you
17:10 < dunpeal> d3 does look awesome
17:10 <@isaacbw> it's a problem you need to solve by experimenting
17:11 < alchimis_> in pkgCloud how to set the region for the new createServer
17:11 < alchimis_> because it is creating it in us-west
17:11 < bradleymeck> if you are targetting slow machines / resource constrained ones server side generation is always going to win. other than that I tend to leave it client side so when ppl lose connection its just pulled from local storage
17:11 < bradleymeck> alchimis_: zone i think it was
17:11 < alchimis_> but i wana be able to dfine to create the instance in eu-west-1
17:11 < dunpeal> the clients are resource-rich
17:11  * bradleymeck checks
17:12 < dunpeal> fast processors, lots of RAM
17:13 < bradleymeck> alchimis_: https://github.com/nodejitsu/pkgcloud/blob/master/lib/pkgcloud/amazon/compute/client/servers.js#L176
17:13 < dunpeal> I don't think I can just have the client fetch the CSV, since it's pretty huge
17:13 < cronopio> Alchimis_ I think some providers use a different endpoint URL for differents datacenters
17:13 < dunpeal> the CSV contains ~20 columns of data, whereas on a typical case, the user only needs 1-2
17:13 < bradleymeck> yes aws is a lil crazy like that you are also going to need to change serversUrl to w/e when making the client
17:14 < bradleymeck> dunpeal: then it sounds like you just want to throw down some csv while stripping columns npm has csv modules that could help w/ that
17:14 < alchimis_> actually yes in create server it is zone, as image: 'imageID' if i pass id of an image which i have in eu-west-1 it gives me Bad request
17:15 < alchimis_> but if i do client.getImages
17:15 < alchimis_> it list me all the images that i have in us-west-1
17:15 < bradleymeck> alchimis_: set serversUrl , aws has different endpoints https://github.com/nodejitsu/pkgcloud/blob/master/lib/pkgcloud/amazon/compute/client/index.js#L67
17:15 < alchimis_> and if i provie an instance id from those that i have in us-west , it creates me in us-west
17:16 < dunpeal> bradleymeck: thanks, I'm not yet familiar with the Node package ecosystem. how do I find good packages for particular usecases, e.g. CSV parsing, and statistical calculations?
17:16 < alchimis_> thanx bradleymeck, i am gonna check the link
17:16 < bradleymeck> google "npm " + problem
17:17 < dunpeal> thanks. doesn't have user review, apparently
17:18 < alchimis_> bradleymeck: this is my code https://gist.github.com/anonymous/64e1f8990d5d92f52dab
17:18 < alchimis_> getImages return not all images that i have but those that are in us-west
17:19 < alchimis_> but instead
17:19 < bradleymeck> alchimis_ when you make client, set serversUrl, you are hitting aws' us-west API
17:19 < alchimis_> i want those that i have in eu-west
17:20 < dunpeal> finally, what's a good tutorial for a beginner like me?  I do know other languages (e.g. Python), and decent understanding of JS
17:21 < bradleymeck> alchimis_: http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region 
17:21 < bradleymeck> set the serversUrl on the client to that
17:23 < alchimis_> like this: https://gist.github.com/anonymous/82ce15cd340f2117ae55
17:24 < alchimis_> bradleymeck:  serversUrls:'ec2.eu-west-1.amazonaws.com' is not working
17:25 < bradleymeck> alchimis_: seversUrl*
17:25 < bradleymeck> in the gist its mispelled
17:26 < alchimis_> great
17:26 < alchimis_> thank you very much
17:26 < alchimis_> infact it works now
17:26 < bradleymeck> np glad its working
17:27 < bradleymeck> pkgcloud is a beast since even with abstraction you cant get 100% consistency :/
17:27 < bradleymeck> but you can get damn close
17:28 < alchimis_> i think u were the one that adviced me to use pkgCloud, I was trying to make a module like this by myself, u make me earn lots of time
17:28 < alchimis_> thanx again
17:29 -!- mode/#Node.js [+o sblom] by ChanServ
17:31 < baranaby> wondering if anyone is using zombie.js with CORS? we can't seem to get it to work
17:32 < alchimis_> bradleymeck, one last question for today, now that i managed to create the instance, how to associate the instance to a keypair ?!
17:32 < MI6> joyent/node: Scott Blomquist master * 1762ba3 : test: add cleanup to long path test - http://git.io/cV7JPA
17:33 < bradleymeck> alchimis_: security groups are the proper way on AWS, https://github.com/nodejitsu/pkgcloud/blob/master/lib/pkgcloud/amazon/compute/client/index.js#L57
17:33 < bradleymeck> see https://github.com/nodejitsu/pkgcloud/blob/master/lib/pkgcloud/amazon/compute/client/keys.js for more info
17:41 < JohnMcLear> anyone know how to get your hands on kinder eggs in the US?  I need some as swag for an event
17:42 < alchimis_> bradleymeck: actually i didnt understand, I understood that i hve to use addKey, but how, btw where i have to take the key and name
17:42 < alchimis_> i mean, now i have a new instance created by that code, so how to call that instance to associate the keys
17:42 < arjunbajaj> hey guys, what do you think of using classes in CoffeeScript on NodeJS for a hosted app (not a npm module)...?
17:44 <@isaacbw> JohnMcLear: are they like cadbury eggs?
17:44 < JohnMcLear> no
17:44 < JohnMcLear> They are chocolate eggs with toys inside, banned in the US
17:44 < bradleymeck> alchimis_: aws does not let you associate after the fact, the security group / key pair cannot change after provisioning to my knowledge, i dont use aws often and this is starting to get out of my normal zone
17:46 < bradleymeck> JohnMcLear: now that border patrol actively looks for them around Easter i would find something else
17:46 < dunpeal> Hey. I created this very simple tutorial server: http://dpaste.org/rv57M/
17:46 < alchimis_> so let me ask u in this way, when i create using ""client.createServer(...)  i have to give keypairs or securitygroup ?!
17:47 < dunpeal> Anyu idea why every time I hit localhost:8888, "Request received" is printed *twice* instead of only once?
17:47 < JohnMcLear> Good point ;\
17:47 < JohnMcLear> http://www.reddit.com/r/snackexchange/comments/10y3tk/for_those_if_you_who_are_concerned_about_sending/ is kinda interesting
17:48 < dunpeal> Oh, it's asking for the favicon, nevermind.
17:48 < bradleymeck> alchimis_: on aws to my knowledge yes, aws the service does not like changing those after provision (limitation of EC2)
17:51 < bradleymeck> dunpeal: browser probably sneding favico requests\
17:51 < euoia> jjjjjjjkkkkjjjjjjjjjjjjjjjjkkkkkkkk
17:51 < euoia> jjjjjjjkkkkjjjjjjjjjjjjjjjjkkkkkkkk
17:51 < euoia> oopsQ!
17:51 < jergason> euoia: vim!
17:51 < euoia> yeah :>
17:52 < dunpeal> bradleymeck: yup. how do I get an interactive breakpoint inside onRequest()?  putting a "debugger" statement there doesn't seem to do anything.
17:52 < jergason> i do that all the time in my terminal
17:52 < euoia> yeah :>
17:52 < bradleymeck> dunpeal: node debug app.js when running to allow debugger to jump up
17:54 < dunpeal> OK, I'm looking at http://nodejs.org/api/debugger.html about how to actually use the debugger
17:55 < dunpeal> bradleymeck: thanks, "repl" is pretty nice
17:57 < dunpeal> this is pretty sweet... how many serious projects are using Node.js?
17:58 < alchimis_> bradleymeck: as I understood I have to change createClient as https://gist.github.com/anonymous/d763bd63515b4944c7bb
17:58 < alchimis_> but can u help me with addKey
17:59 < FunnyLookinHat> dunpeal, depends on your definition of "serious" I suppose...  :)  Suffice it to say, lots.
17:59 < alchimis_> becauseI am not sure how to put the key and the name, and btw, key='key pair name' ?     and name is equale to the FingerPrint ?
17:59 < dunpeal> what's the canonical way to read a file, line by line, asynchronously?
18:00 < arjunbajaj> dunpeal: many big companies use NodeJS in some part of their apps...
18:00 < FunnyLookinHat> dunpeal, async - yeah.
18:00 < dunpeal> FunnyLookinHat: so something like this? https://github.com/pkrumins/node-lazy
18:01 < FunnyLookinHat> i.e. http://nodejs.org/api/fs.html#fs_fs_readfile_filename_encoding_callback
18:01 < arjunbajaj> dunpeal: fs.readFile(path, encoding, callback(err, file))
18:01 < EyePulp> probably a dumb question - what's the diff between expressjs and connect ?
18:01 < FunnyLookinHat> dunpeal, I guess?  That looks like a means to queue events into a list.
18:01 < Sly> EyePulp: express is a framework, connect is middleware.
18:01 < dunpeal> arjunbajaj: right, but that reads the entire file into memory, which is a problem if the file is huge
18:02 < arjunbajaj> ohh ok, thanks for mentioning... i never realized! :)
18:02 < EyePulp> Sly: ah.  so you would insert connect bits into you express app?
18:02 < Sly> dunpeal: you're never going to be able to totally avoid reading the file into memory. Even Python can't read it without assigning it to memory at some point.
18:03 < EyePulp> *your
18:03 < Sly> V8's garbage collection works very well. You shouldn't have any memory problems just by reading a file.
18:03 < FunnyLookinHat> dunpeal, Sure - then use fs.createReadStream + Lazy
18:03 < Sly> EyePulp: yup. Most connect things will return a function(req, res) for handling HTTP requests.
18:04 < Sly> You could use it in the normal HTTP module if you wanted.
18:04 < arjunbajaj> dunpeal: but there doesn't seem to be any fs API to do what you are asking for!
18:04 < arjunbajaj> ohh ok... got it!
18:05 < arjunbajaj> thanks FunnyLookinHat... :D
18:06 < FunnyLookinHat> np
18:12 < d4Mn> hey again... anyone tried sails.js framework?
18:14 < CoverSlide> no, noone in the world has ever tried it
18:14 < dunpeal> not even the author
18:14 < d4Mn> why is that? :D
18:15 < d4Mn> sorry i'm noob
18:15 < d4Mn> i just tried it and want to hear someones else opinion
18:17 < CoverSlide> ugh. just looking at the dependencies makes me not want to use it: https://github.com/balderdashy/sails/blob/master/package.json#L59-L83
18:17 < CoverSlide> "Sails.js makes it easy to build custom, enterprise-grade Node.js apps." << Ha!
18:18 < CoverSlide> they just had to throw the E-word in there
18:18 < RLa> http://enterprise-js.com/
18:18 < d4Mn> CoverSlide ok spit u're favorite framework on the table (if u use one)
18:18 < dunpeal> is that a porn site?
18:19 < dunpeal> it better not be a porn site
18:19 < d4Mn> "It's a joke"
18:20 < mscdex> CoverSlide: https://github.com/isaacs/npm/blob/master/package.json#L36-L71
18:20 < daekano> "FUNCTION CALLS ARE EXPENSIVE, ALWAYS EVAL A FUNCTION'S CODE"
18:20 <@ryah> <3 c++
18:20 < mscdex> node.js rules!
18:21 -!- ryah changed the topic of #Node.js to: "node.js rules!" - mscdex
18:21 < havvy> "Using agressive caching methods on your jQuery selectors"
18:21 < mscdex> yeah!
18:21 < havvy> Shows declaring of a string but no actual caching.
18:23 -!- mode/#Node.js [-o _ry] by _ry
18:23 < CoverSlide> mscdex: my complaint isn't the number of dependencies, the fact that it's built on top of express, underscore, oh not to mention it deps connect AND express separately. wtf?
18:24 < havvy> CoverSlide: Not a fan of Underscore?
18:24 < Luky> Hi guys, i got problems with MongoDB connecting to db. Got this error: http://pastebin.com/YBfbkq3i
18:25 < d4Mn> damn It's so hard to find a framework which fits to me :/
18:25 < CoverSlide> not in node. ES5 makes underscore pretty much unnecessary
18:25 < groundwater> CoverSlide: havvy: no comment on underscore itself, but I have seen people do horrible things with it in node
18:26 < havvy> Yeah...it's easy to abuse Underscore.
18:26 < JohnMcLear> That's the same story for any framework
18:26 < JohnMcLear> And any programming language, heh
18:27 < JohnMcLear> In fact pretty much anything in life.
18:28 < d4Mn> ok goin to try sniper alite nazi zombie army
18:29 < Luky> Guys, i got problems with MongoDB and Node.JS connecting to db. Got this error: http://pastebin.com/YBfbkq3i (Line 9 i suppose)
18:29 < JohnMcLear> y u no callback?
18:29 < JohnMcLear> function(callback){ // do something; callback(); }
18:29 < groundwater> havvy: also a lot of javascript libraries are written to compensate for browser inconsistencies that don't exist in node
18:30 < groundwater> i wish i could fly a big banner "node development is not browser development"
18:30 < dunpeal> So I'm iterating over a file of space-separated fields, trying to aggregeate the fields of specific type. after all the googling, it seems like this is the Node.js way: http://dpaste.org/jWCeu/ 
18:30 < havvy> groundwater: Underscore isn't one of those.
18:30 < JohnMcLear> or in your instance, function(getstufffromdatabase(function(stuff){})); is prolly slightly more corrrect but still ugly
18:30 < Luky> kk John thx
18:31 < Luky> im gonna try that :)
18:31 < dunpeal> If this is the right way, how do I get total once all the lines have been processed?
18:31 < JohnMcLear> Luky: peep http://www.theprojectspot.com/tutorial-post/nodejs-for-beginners-callbacks/4
18:32 < JohnMcLear> dunpeal: personally I'd use async library
18:33 < JohnMcLear> http://beta.etherpad.org/p/wutwut
18:33 < JohnMcLear> something like that dunpeal
18:35 < dunpeal> cool, I hope it's also faster, since this supposedly canonical solution is slow as fsck
18:36 < darrenlooby> Hello all. Does anyone know if the req object using Express holds the original route regex in it somewhere?
18:36 < JohnMcLear> I didn't look at that problem
18:36 < JohnMcLear> im only here for a few mins anyway waiting on a wine delivery, supposed to be out drinking beer
18:36 < dunpeal> your solution would not be faster, since it wraps my own
18:37 < JohnMcLear> damn you alcohol for ruining my alcohol experience..
18:37 < dunpeal> heheh
18:37 < JohnMcLear> you didn't ask me initially to make it faster, you asked for how to get the total at the end of the event.
18:37 < dunpeal> you are absolutely right, sir
18:38 < JohnMcLear> maybe instead of doing a line.toString().split(' ');
18:38 < styol> darrenlooby: probably ;) console.log(req);
18:38 < JohnMcLear> try do an indexOf first..
18:39 < JohnMcLear> I honestly don't know which is computationally quicker though, assuming you know the total doc length you could do a reverse while, that might save you 5% or so, it depends on the document structure etc..  Benchmarking is your best friend here
18:40 < darrenlooby> styol, been looking, but can't find it
18:41 < styol> darrenlooby: hmm i mean, everything about the request itself should be in the request object. though I'm not familiar with what "route regex" is specifically
18:41 < darrenlooby> You know when you create a new route, and you can use some regex ...
18:42 < darrenlooby> I'm using Engine.io, which the request is copied into... so, I'm hoping to find how what created the route in the first place
18:42 < dunpeal> JohnMcLear: thanks!
18:43 < nlf> is it possible to have a global pre-install script for npm?
18:44 < JohnMcLear> nlf: I don't understand your question, npm is bunbled with node.. I feel like I'm missing something..
18:44 < nlf> you can have a pre-install script defined in package.json, right
18:44 < nlf> what i'm wondering is if i can add a hook like that that will run for *all* packages that are installed via npm
18:44 < JohnMcLear> ah, I see
18:52 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:58 < s3shs> I find debugging async waterfall very disconcerting.  Mostly because the stack always runs back to nextTick.  And if I'm in a shared function I have no idea where I am in the chain.  Thoughts?
18:59 < mscdex> s3shs: use a domain?
18:59 < Gambit--> does node.js have any concept of 'proxy' like behaviors, with forwarding connections and having pools of backend resources?
18:59 < s3shs> mscdex, I looked at that, but I still have to use waterfall.
18:59 < Gambit--> mscdex: I'm looking at that issue too - what does 'use a domain' mean here?
18:59 < othiym23> s3shs: take a look at longjohn
18:59 < mscdex> Gambit--: there are pooling modules
18:59 < othiym23> long stacktraces aren't a fix, but they're helpful
18:59 < Gambit--> mscdex: Link?
19:00 < othiym23> s3shs: also, if you want something like domains *and* long stacktraces, trycatch is worth examining
19:00 < s3shs> Ya know, this really kills the promise of simplicity.
19:00 < mscdex> Gambit--: here's one for generic pooling: https://npmjs.org/package/generic-pool
19:01 < mscdex> Gambit--: here's the docs on domains: http://nodejs.org/docs/latest/api/domain.html
19:01 < Gambit--> mscdex: Thanks! Any support for railgun?
19:01 < othiym23> Gambit--: var domain = require('domain'), d = domain.create(); d.on('error', errorHandler); d.run(function () { async.waterfall(...) });
19:01 < supersym> can I change the local node_modules to a different name in package.json, so it installs in say lib/ ?
19:01 < mscdex> Gambit--: railgun?
19:01 < Gambit--> It's a backend/frontend optimization technology being pushed out by cloudflare.
19:01 < othiym23> s3shs: streams and events are simple, asynchronous error-handling is less simple ;)
19:01 < othiym23> life is about tradeoffs
19:01 < mscdex> Gambit--: never heard of it, sorry
19:02 < Gambit--> no worries
19:02 < bradleymeck> s3shs: depends on what you find to be simple, explicit is explicit, for debugging stuff you can always do some other fun stuff like wrap your async.waterfall functions with [fn1, fn2].map(function (fn) {return function () {save index somewhere}}). Also, name all your functions… all of them, including the steps of a waterfall if possible
19:03 < bradleymeck> i get angry when i see stacktraces with fn names of "anonymous"
19:03 < Gambit--> what do you guys consider to be absolutely essential or high usefulness debugging/diagnostic modules?
19:04 < othiym23> or try playing around with promises instead of async for waterfall-like control flow
19:04 < othiym23> turns out promises are really good for async cascades
19:04 < s3shs> I would argue that the problem is not with anonymous functions, but the fact that every stack trace goes back to nextTick.
19:04 < othiym23> Gambit--: longjohn, trycatch, built-in domains, and the New Relic agent for Node (full disclosure: am developer for the latter)
19:05 < othiym23> s3shs: that's how asynchronous, continuation-based programming works
19:05 < Gambit--> link for the latter, othiym23?
19:05 < othiym23> Gambit--: npm info newrelic ;)
19:05 < Gambit--> othiym23: that's not available to me, but I assume https://npmjs.org/package/newrelic?
19:05 < s3shs> So *all* of this is made so we can avoid threads and locks.  I'm not sure we're winning.  ;-)
19:05 < bradleymeck> othiym23: ++ for dealing with all the edge cases of node XD
19:05 < othiym23> you'll need an account, and 30-day trials of pro are readily available
19:06 < bradleymeck> s3shs: you win in the long run
19:06 < Gambit--> wait, what?
19:06 < bradleymeck> the short run it is much more verbose
19:06 < othiym23> Gambit--: yeah, that's the npm page for it, and New Relic is SaaS
19:07 < othiym23> s3shs: it goes deeper than that
19:07 < othiym23> I'd argue that debugging highly concurrent systems is *always* a pain in the ass
19:07 < Gambit--> othiym23: interesting; how turnkey is it?
19:07 < othiym23> it's just a question of what problems are biting you
19:07 < s3shs> I know.  It allows for lots of concurrency.
19:07 < s3shs> Right now it's the bug I'm working on.  ;-)
19:07 < othiym23> Gambit--: as turnkey as we can make it ;) -- install the module, create a config file or set some environment variables (documented in the README), add require('newrelic') to the top of your main script
19:08 < Gambit--> hm, that's not very turnkey.
19:08 < othiym23> it's still very much a work in progress beta, but it's getting there
19:08 < s3shs> I'm updating about 2K lines of code from Step to waterfall.
19:08 < mac_nibblet> Is there any way to force util.inspect to show more information about a class or an instance then {} ?
19:09 < othiym23> Gambit--: you gotta stream data to our servers, which means a certain amount of config is unavoidable, cuz we need to know who you are
19:09 < othiym23> nodetime and nodefly are the same way
19:09 < Gambit--> othiym23: Ah, that's a no-go for this particular usecase, but it's good to know about anyways.  Is your impl. 100% js, or does it have a .so component as well?
19:09 < othiym23> mac_nibblet: are you talking about regexps in particular?
19:10 < othiym23> Gambit--: for now it's 100% JS and its only dependency is bunyan, because I didn't feel like writing my logging module (so it's pinned < 0.14 so the node-dtrace stuff isn't included, due to its native component)
19:10 < othiym23> neither of those will change before 1.0, but might afterwards
19:10 < Gambit--> what's bunyan? :)
19:11 < mac_nibblet> othiym23: no just a regular class/object
19:11 < othiym23> JSON logging module by trentm
19:11 < Gambit--> Ah gotcha.
19:11 < Gambit--> logging to disk kinda logging?
19:11 < othiym23> mac_nibblet: if it's an empty object, that's all yr gonna get, unless you add a custom toJSON method to it
19:12 < mac_nibblet> othiym23: im trying to figure out how i reach a parent method after using util.inherits
19:12 < othiym23> Gambit--: yeah, and it makes it really easy to log raw object dumps, which is super handy for me troubleshooting stuff for testers / customers
19:13 < othiym23> mac_nibblet: all methods from the parent prototype should be copied onto the child prototype
19:14 < othiym23> mac_nibblet: so this.parentMethod() is the way to invoke methods inherited from the parent "class"
19:14 < mac_nibblet> othiym23: yeah but i have overwritten that function
19:14 < othiym23> mac_nibblet: then you're screwed ;)
19:14 < mac_nibblet> othiym23: the solution i have atm is <Class>.super_.prototype.fromBytes.call(this, arguments);
19:14 < othiym23> it's redefined on the prototype
19:14 < othiym23> yeah, that's about as good as you're going to get
19:15 < mac_nibblet> so im not totaly screwed
19:15  * mac_nibblet misses OOP from PHP 
19:15 < mac_nibblet> can't wait for ecmascript 6
19:15 < othiym23> you could also do something like ChildClass.prototype._fromBytes = ChildClass.prototype.fromBytes; ChildClass.prototype.fromBytes = function () {...};
19:15 < othiym23> learn to love the prototype, man
19:16 < s3shs> node domains need more documentation and examples.
19:16 < othiym23> trying to do traditional inheritance in JS is always going to be painful, even in ES6
19:16 < mac_nibblet> othiym23: 8 years of PHP is hard to move away from
19:16 < mac_nibblet> but im trying :(
19:16 < mac_nibblet> :)*
19:16 < othiym23> s3shs: this has been observed before; I'd love to take a whack at it, but that would require more free time than I have
19:16 < mac_nibblet> othiym23: i think you wrote something wrong their...
19:17 < othiym23> mac_nibblet: ?
19:17 < mac_nibblet> ChildClass.prototype._fromBytes = ChildClass.prototype.fromBytes;  ChildClass.prototype.fromBytes = function () {...};
19:17 < mac_nibblet> oh nvm that actually works xD
19:17 < othiym23> after the call to util.inherits, you just move the method before redefining it in your child class
19:17 < bradleymeck> domains are fairly well documented but they need tons of examples
19:18 < bradleymeck> cause its a confusing topic
19:18 < mac_nibblet> othiym23: yeah i realised :P
19:18 < othiym23> so then you can call this._fromBytes() from this.fromBytes(), problem solved
19:18 < othiym23> bradleymeck: the documentation does a shitty job of providing context and motivation
19:18 < titanplate> how can i server file data in express JS when using fs.readFile?
19:18 < owen1> i have a rails site but i want the 'upload big excel and do stuff with it' to be a node endpoint. do i need to use an iframe or is there a better way?
19:18 < titanplate> i get the data and if i res.send(data) it doesn't do anything
19:19 < icodeforlove> i wrote a very dirty prototype helper that incorporates promises https://github.com/icodeforlove/node-promise-object
19:19 < tjholowaychuk> titanplate http://expressjs.com/api.html#res.sendfile
19:19 < bradleymeck> othiym23: perhaps, but none of the other sections of the doc do
19:19 < tjholowaychuk> titanplate you dont really want to use fs.readFile
19:19 < tjholowaychuk> for that
19:19 < bradleymeck> it would be odd to have that in the docs, maybe an appendix?
19:19 < othiym23> saying that domains "group I/O actions" is confusing, something better would be saying that domains "are a tool for logically centralizing error-handling"
19:19 < titanplate> yeah, doesn't this try to redirect me to the file
19:19 < titanplate> directly?
19:19 < bradleymeck> othiym23: they arent just for error handling
19:19 < tjholowaychuk> titanplate no it just transfers the file
19:19 < bradleymeck> most common use though i guess
19:19 < titanplate> mh
19:20 < othiym23> bradleymeck: believe me, I know ;), but that's what 95% of Node users are going to want them for, and that's really the only use case they're optimized for
19:20 < bradleymeck> yea
19:20 < titanplate> for some reason i end up 403...
19:21 < tjholowaychuk> titanplate you can specify a { root: path }
19:22 < EyePulp> using express 3.x and the less-middleware  -- using a correct src path in the middleware, and when browsing to /static/css/base.css  I get a 404, but browsing to the .less finds it and activates the middleware (debug:true)  how do I get it to detect the missing .css and create them from the .less?
19:23 < titanplate> hm tjfontaine if i get the path wrong
19:23 < titanplate> it tells me ENONET or smth error
19:23 < titanplate> that this file cannot be found
19:23 < titanplate> correct right
19:23 < tjfontaine> wrong tab complete I'm sure
19:24 < titanplate> but if I get the path correct
19:24 < titanplate> i end up  403
19:24 < titanplate> and if i disable my acl, i'm not getting the file also
19:25 < titanplate> file is there, checked
19:28 < tjholowaychuk> titanplate does your path contain ../?
19:28 < Kakera> how do you guys feel about adding custom property to an object of a third-party class?
19:28 < Kakera> like an instance of Buffer
19:28 < titanplate> yes tjfontaine
19:28 < tjholowaychuk> titanplate then that's the issue, you have to specify a root directory
19:28 < tjholowaychuk> so it can lock the requests within that dir
19:28 < tjholowaychuk> otherwise it's a potential security issue
19:29 < tjholowaychuk> if you leave out { root: ... } it assumes ../ is malicious
19:29 < titanplate> correct...
19:29 < titanplate> tjholowaychuk that fixed it
19:30 < titanplate> yeah, you can have ../ in root: option
19:30 < titanplate> but not in the path
19:30 < titanplate> thanks a TON tjholowaychuk, appreciated : )
19:32 < slicky> Anyone know if you can simply take an express session cookie from a nodejs https.request response, inject it into another browser, and have that browser use the cookie and be successfully logged in (POC for chromium embedded frame where nodejs has direct access to the chrome frame & cookies)
19:33 < slicky> CEF+Node.js (client) -> Node.js+Express (external)
19:35 < owen1> i have a rails site but i want the 'upload big excel and do stuff with it' to be a node endpoint. do i need to use an iframe or is there a better way?
19:37 < bradleymeck> owen1: forward a pathname to node from rails?
19:38 < bradleymeck> slicky: well if you have a comm channel, you could just send down the cookie to the browser however and set it from JS
19:38 < slicky> If it helps make my question any clearer, we have an online/offline web application supported by chrome embedded frame. We want the user to be able to click a link on the offline version which will auto-log them in and have them be in their account for the online-only content.
19:39 < slicky> and since the CEF linked to their account using hmac/app secret, we can do it securely
19:39 < owen1> bradleymeck: are u asking or stating? can i upload the file to a node endpiont?
19:39 < owen1> endpoint
19:40 < bradleymeck> owen1: you could always do cors or in rails or w/e proxy in front of rails overtake a pathname like x.com/pathtonodeendpoint
19:40 < slicky> I suppose them simply clicking on a specially crafted link that includes the hmac'd user in a GET param might work just fine, verify it like we would a POST to a login page (no secret is sent, just hmac hash which can be validated along with uid)
19:40 < bradleymeck> slicky: im not sure what you are asking still, if it is online where is express involved
19:41 < slicky> local is: CEF+Node, external online: Express+Node
19:41 < bradleymeck> yea but if you generate the cookie on express and send it back its already on the machine when it goes offline
19:41 < owen1> bradleymeck: so from the browser, i will be able to send the excel file to a node endpoint, correct?
19:42 < bradleymeck> owen1: yes
19:42 < slicky> that's where things get tricky, since it's a CEF, cookies get wiped when it's closed without persistance
19:42 < slicky> so it would need to validate on click or when the app loads
19:42 < owen1> bradleymeck: and it can be done with cors (tweak in jquery) or with nginx?
19:43 < bradleymeck> slicky: if you have fs access, when you get the login cookie send it to your CEF endpoint somewhere and save it to disk?
19:43 < slicky> and the node.js process is separate from the CEF, it just has a comm channel that I can use to directly do things through the window object on CEF
19:43 < bradleymeck> owen1: yes
19:43 < bradleymeck> oh this is starting to make more sense
19:44 < bradleymeck> node (client online/offline) CEF (view/comm to node) express (online service)
19:44 < slicky> We already have an application secret that can be used by node to securely transmit data back and forth
19:44 < slicky> Yeah, in essence :)
19:45 < bradleymeck> yea i would just have CEF send a comm to node telling it to save the cookie/secret
19:45 < bradleymeck> node then saves it to disk
19:45 < bradleymeck> CEF can grab an http-only cookie so the client never needs to know what it is
19:46 < slicky> I think, since the cookie will expire, the application secret can only be revoked, I might just append on the link GET params that validate the user and when express receives it, it can log them in and redirect them to their online content page
19:46 < slicky> that way CEF always receives a new session cookie
19:47 < slicky> indirect brainstorming. . . :D Thanks bradleymeck 
20:04 < dorgan> is indexOf() not a valid method on a string in Node.JS
20:05 < bradleymeck> dorgan it is a valid method
20:05 < EyePulp> it is a valid method.  "foo".indexOf('o')  >>> 1
20:05 < sshaginyan> Hey guys how do I get a url segment after some segment for example /test/one/:everythingAfter*
20:08 < draginx> quick question for u guys.. not nodejs related but kind of is for my nodejs project :) If I have a system like models, views, and controllers.. but needed some sort of "front controller" (basically, a controller to flow data from models to other controllers) what do you guys usually call that? Just a "lib/" file?
20:09 < sshaginyan> I call it the supremeKingControllerMama
20:11 < draginx> lawls
20:20 < groundwater> draginx: generally a request only this one controller
20:20 < SNow> hi guys, what this mean ?
20:20 < SNow> futex(0x7f2fbc0008b8, FUTEX_WAKE_PRIVATE, 1) = 0
20:23 < sshaginyan> Guys if I have an array ['one', 'two'] and an object var x = { one: { two: 2 } }; Using the array how would I access this object?
20:24 < groundwater> sshaginyan: you could use a recursive function and array.shift() to grab the keys
20:25 < sshaginyan> groundwater: Can you please show me an example?
20:25 < sshaginyan> Or write one up
20:25 < icodeforlove> x[array[0]] ?
20:25 < daekano> do his homework for him 
20:25 < dshap> hey all - does anyone here use Winston for logging?  i asked this question a while ago but it went unanswered =\  https://github.com/flatiron/winston/issues/171
20:26 < EyePulp> sshaginyan: this seems like pretty basic language syntax.  Plus it's hard to tell form your example how complex the solution needs to be.
20:27 < bradleymeck> sshaginyan: [1,2].reduce(function (obj,k) {return obj[k]}, {1:{2:3}})
20:33 < Kakera> what do you guys think about adding custom properties to an instance of a third-party class?
20:33 < Kakera> such as Buffer
20:35 < groundwater> Kakera: generally encapsulation is better than extension 
20:36 < bradleymeck> Kakera: encapsulate
20:36 < bradleymeck> share the prototype if you want but encapsulate
20:36 < draginx> Are there any good query builders/a way to extract info from a query like the where clause, order, joins, etc.
20:36 < Kakera> groundwater, you mean { buf: yourBuffer, prop: yourProperty } instead of yourBuffer.prop = yourProperty ?
20:37 < bradleymeck> draginx: you mean a SQL query?
20:37 < draginx> bradleymeck: like a way for me to pass an SQL string.. and then thios function would analyze it and parse it's contents
20:37 < CoverSlide> draginx: https://github.com/brianc/node-sql ?
20:37 < groundwater> Kakera: basically yes, exactly how depends on your use case
20:37 < bradleymeck> draginx: seems to be a bunch on google https://www.google.com/webhp?sourceid=chrome-instant&rlz=1C5CHFA_enUS503US504&ion=1&ie=UTF-8#hl=en&rlz=1C5CHFA_enUS503US504&output=search&sclient=psy-ab&q=npm%20sql%20parser&oq=&gs_l=&pbx=1&fp=176f7fed8c7965cd&ion=1&bav=on.2,or.r_gc.r_pw.r_cp.r_qf.&bvm=bv.43148975,d.b2U&biw=1646&bih=826
20:37 < Kakera> bradleymeck, what do you mean by sharing the prototype?
20:37 < draginx> CoverSlide: sort of.. I'd like the opposite of that actually :)
20:37 < CoverSlide> hmmm
20:38 < CoverSlide> not sure of any
20:38 < draginx> oh wow very nice
20:38 < draginx> thanks bradleymeck :)
20:38 < Kakera> and I'm confused by your usage of "encapsulation"
20:42 < bradleymeck> Kakera: function B(arg) {Buffer.call(this, arg);return this};B.prototype=Object.create(Buffer.prototype);B.prototype.lol = function () {console.log('lol')} , if you only need 1 level (ie. if you use buffer methods that crate new buffers you will lose your prototype)
20:43 < bradleymeck> Kakera: for encapsulation give sec to write
20:43 < s3shs> console.log([a,b,c]) is putting line breaks between each item.  How do I stop that?
20:44 < Kakera> bradleymeck, I mean if you want to pass your Buffer around and you add a property like "isReadable" to it or something
20:44 < bradleymeck> encapsulate you will make deoptimizations happen if you only mutate some
20:44 < bradleymeck> give me a sec
20:45 < warz> hi all. if i have a module, in which i do something like "exports.foo = {}; exports.bar = {};", and when i first require it from within a different module, i do "var foo = require(' ... ').foo;"
20:45 < warz> will that get cached without bar?
20:46 < bradleymeck> Kakera: function B(b) {this.buff=b;return this};Object.keys(Buffer.prototype).forEach(function (k) {B.prototype[k]=function () {var newb=Buffer.prototype[k].apply(this.buff, arguments); if (Buffer.isBuffer(newb)) return new B(newb); return newb}}) // should encapsulate pretty much anything
20:46 < bradleymeck> warz: the entire module will get cached, not just part of the exports
20:47 < Kakera> bradleymeck, I don't think you understood
20:47 < bradleymeck> Kakera: i understand, but do not add stuff onto individual instances of Buffer
20:47 < rodyhaddad> warz, both of them will get cached, since it's the exports object that gets cached (by cached I mean the module file will just get executed once)
20:47 < Kakera> yeah that's what I was asking about
20:48 < Kakera> why do you think I shouldn't?
20:48 < bradleymeck> dont do that, v8 will deoptimize pretty much anything that goes through
20:48 < bradleymeck> and buffers causing deopt is very very very bad
20:48 < rodyhaddad> warz, doing `require('…')` or `require('…').foo` is the same thing for the module system, there is no magic happening if you add`.foo` to the expression
20:49 < Kakera> hm, I didn't think about performance
20:49 < bradleymeck> will end up being insanely more costly than encapsulation since you have a chance of deoptimizing a ton of node core
20:49 < Kakera> I've only looked at it from the ideological perspective
20:49 < bradleymeck> also CS101 says encapsulate if you change an interface
20:50 < warz> thats what i thought. i guess im just doing something wrong. ive been in clojure-land for the past month and now i cant seem to remember how to write modules. haha.
20:51 < Kakera> bradleymeck, well, that's for internal usage
20:51 < Kakera> say, along with a buffer I want to send some information about it
20:52 < bradleymeck> always. don't let internal usage be an excuse to break standard practice , it will be ugly to other devs trying to understand why this path of code adds things to a buffer when no interface is specified
20:52 < warz> i bet its because of a circular dependency. basically, module A exports something that requires module B. in module B, i try to require something from module A.
20:52 < warz> but the require in module B returns an empty module.
20:52 < warz> for A.
20:53 < Kakera> hm, okay
20:53 < groundwater> warz: when you have a circular dependency, only the items added to module A _before_ module A requires module B will be available to B
20:53 < groundwater> *added to module A's exports
20:54 < groundwater> warz: but if you access module A later from B, like on a nextTick, it should all be exported
20:54 < warz> ah, ok. that seems like something hackish thatd id forget in the future. ill probably just move this stuff out of that module.
20:54 < Kakera> say, you have a function that parses a buffer turning it into an object
20:54 < Kakera> and it might recurse, as in the buffer-object might contain another buffer-object inside itself
20:54 < Kakera> how would you keep track of how far you're into the buffer?
20:55 < groundwater> warz: the exports object is created _before_ an object is loaded, so everything will have the correct reference to the modules exports, but that exported object might not be filled with anything meaningful until later
20:55 < Kakera> right now I assign a custom property "pos" to the buffer
20:55 < groundwater> before a *module* is loaded
20:59 < bradleymeck> Kakera, you could just pass it as an argument
21:00 < bradleymeck> x.fromBuffer(buff) calls x._fromBuffer(buff, depth) thats how most ppl do it in other languages
21:00 < Kakera> bradleymeck, but how would the calling function find out how far the called function went into the buffer?
21:01 -!- mode/#Node.js [+o sblom] by ChanServ
21:02 < Kakera> bradleymeck, here's a simplified version of the parser http://privatepaste.com/9fbd8cedf2
21:04 < Kakera> one alternative I can think of would be to return the number of bytes read, rather than an object
21:04 < Kakera> and accept a buffer and an empty object
21:04 < bradleymeck> Kakera: any number of ways: https://gist.github.com/bmeck/5060091 is one
21:05 < bradleymeck> if you need shared state, and are reading buffers in streaming manners I might look towards accepting streams instead of buffers
21:05 < bradleymeck> npm readable-stream is a good wrapper i use in node-tart
21:06 < Kakera> oh, that could work
21:06 < Kakera> I mean the gist
21:08 < rodyhaddad> Hey guys, how do you `require(…)` a file that looks like this: `({ prop: val })`? (like r.js does for the build file)
21:11 < alexhancock> Do you mean ({ prop: val }) would be the file content?
21:13 < rodyhaddad> alexhancock, yes
21:14 < alexhancock> Also, are you talking about a clientside require.js require() or the standard commonjs require() on the server?
21:15 < bradleymeck> rodyhaddad: require.cache[require('fs').realpath(filepath)] = new Function('return ' + require('fs').readFileSync(filepath))() // because you can
21:16 < bradleymeck> amd makes everything harder...
21:16 < rodyhaddad> alexhancock, the require() in node (even when I look at something like http.js with node-inspector, it's shown as `(function (exports, require, module, __filename, __dirname){…})` )
21:16 < rodyhaddad> bradleymeck, hmm, there is no other way?
21:17 < bradleymeck> rodyhaddad: it does not confrom to commonjs so nope
21:17 < Rachiel> jfljkldkwdlfsdklsd
21:17 < Rachiel> hi
21:17 < Rachiel> hi
21:17 < bradleymeck> you could shim in all the other stuff if you want (__filename etc) in the Function constructor
21:18 < rodyhaddad> bradleymeck, what do you mean?
21:18 < bradleymeck> rodyhaddad: if your file needed all those exports, require, module arguments you could add them to the function constructor for a more complete shim
21:19 < rodyhaddad> bradleymeck, and call it as ` mySpecialRequire(path)(myExports, myRequire, myModule, …) ` ?
21:19 < bradleymeck> rodyhaddad: perhaps browserify-ftw would be more apt for w/e you are trying to do
21:20 < bradleymeck> https://github.com/bmeck/node-module-system/blob/master/example/node-module-system.js if you really need require to match you can just change a couple things in the load() fn there
21:20 < bradleymeck> basically, don't break commonjs spec, node will semi-purposely punish you
21:21 < rodyhaddad> ah, thx :D
21:21 < rodyhaddad> I'm just curious with how it can be done, won't be implementing it…for now :p
21:22 < rodyhaddad> but thx! will be reading through the source
21:44 < mac_nibblet> Is eval, evul in nodejs/JS ?
21:44 < CoverSlide> mac_nibblet: even more so
21:44 < CoverSlide> mac_nibblet: there is no reason to use eval at all with the vm module
21:45 < mac_nibblet> CoverSlide: im trying to create a named function from a string if possible ?
21:47 < havvy> mac_nibblet: new Function(yourStr) doesn't work?
21:47 < mac_nibblet> o.0
21:48 < CoverSlide> >> var f = new Function('console.log("blah", blahfunc);return blahfunc');f.name = 'blahfunc';[f.name,f()]
21:48 < purr> CoverSlide: ReferenceError: blahfunc is not defined
21:48 < CoverSlide> >> var f = new Function('console.log("blah", blahfunc);return blahfunc');f.name = 'blahfunc';f.name
21:48 < purr> CoverSlide: (string) ''
21:49 < CoverSlide> won't be named with new Function
21:49 < mac_nibblet> CoverSlide: this is the code that works https://gist.github.com/macnibblet/c69bb223a5e01ae04a99
21:50 < mac_nibblet> This is what i tried to change it to https://gist.github.com/macnibblet/ac79bf22e9c47108d8bd
21:50 < s3shs> Assuming callback is the tail of the function, what do you prefer styltistically: 'callback(null, args)' or 'return args'
21:51 < mac_nibblet> talking to me ?
21:52 < mac_nibblet> havvy: ^ 
21:54 < chesles> hey everybody. is there a module that can map keys/values from one object into a new one, while renaming some of the keys?
21:55 < havvy> chesles: Just create a function?
21:56 < chesles> something like extract({"new key": "oldkey"}, {"oldkey": "value"}) => {"new key": "value"} ?
21:57 < havvy> function extract (from, to, mapping) { for (var key in mapping) { to[mapping[key]] = from[key]; } }
21:58 < havvy> >> function extract (from, to, mapping) { for (var key in mapping) { to[mapping[key]] = from[key]; } } var to = {}; extract({a: 1}, to, {a: 'b'}); to
21:58 < purr> havvy: (object) {b: 1}
21:59 < mac_nibblet> havvy: any chance you can help me to (a) ?
21:59 < chesles> thanks havvy
22:00 < havvy> mac_nibblet: I've not used Object.defineProperty in my own code.
22:00 < havvy> And my eyes are glazing over looking at that.
22:00 < chesles> i want it to handle things like extracting nested keys, too, so i thought i'd check if somebody's already written a module for it
22:01 <@isaacbw> s3shs: one is an async pattern, the other isn't
22:01 < s3shs> It's from a function in waterfall.
22:01 < havvy> chesles: I don't know of any module that does that.
22:01 < havvy> It'd still be a pretty simple function.
22:01 < havvy> Just recursive.
22:02 < chesles> yeah
22:03 < alippai> hello, how can I get information what are the major feature additions between node.js versions
22:04 < alippai> I mean whats the difference between branch 0.8 and 0.9
22:05 < mac_nibblet> havvy: http://ss.office.pmg.se/caps/484335.png this works but i cannot do f instanceof GetNodeInformation
22:05 < superjoe> alippai, try the nodejs.org blog
22:05 < mac_nibblet> is a use a closure as constructor
22:05 < superjoe> it has release notes
22:07 < havvy> mac_nibblet: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/instanceof
22:08 < mac_nibblet> havvy: the ony solution i can think of is var f = new Function('return function '+name+'(){};')();
22:08 < alippai> superjoe: so I have to browse through all the releases and watch for differences
22:08 < alippai> okaz
22:08 < alippai> just hoped there is a wiki or a branch description
22:08 < mac_nibblet> >> var name = 'Test'; var f = new Function('return Test(){}')(); console.log(f instanceof Test);
22:08 < purr> mac_nibblet: SyntaxError: Unexpected token {
22:09 < mac_nibblet> >> var f = new Function('return Test(){}')(); console.log(f instanceof Test);
22:09 < purr> mac_nibblet: SyntaxError: Unexpected token {
22:09 < mac_nibblet> >> var f = new Function('return function Test(){}')(); console.log(f instanceof Test);
22:09 < purr> mac_nibblet: ReferenceError: Test is not defined
22:10 < havvy> mac_nibblet: Why do you need to make functions from strings in the first place?
22:10 < mac_nibblet> havvy: good question to be honest
22:10 < mac_nibblet> ..
22:11 < superjoe> alippai, hang on there is something that you want
22:11 < superjoe> alippai, https://github.com/joyent/node/wiki/Api-changes-between-v0.8-and-v0.10
22:12 < superjoe> alippai, the latest 0.9.x is essentially equal to v0.10.0
22:12 < mac_nibblet> havvy: nvm it works anyway
22:13 < mac_nibblet> i just need to typehint on the export
22:13 < havvy> Kk.
22:13 < alippai> superjoe++
22:13 < alippai> superjoe: thats what i was looking for
22:13 < alippai> thank you
22:17 < MI6> joyent/node: Timothy J Fontaine v0.8 * d032ff4 : test: fix tap output on windows  Test output is always \n and not platfor - http://git.io/tQzc0A
22:17 < MI6> joyent/node: Ben Noordhuis master * d019bec : Merge remote-tracking branch 'origin/v0.8' (+2 more commits) - http://git.io/naCNcA
22:20 < markdaws> I was looking at this npm shrinkwrap post: http://blog.nodejs.org/2012/02/27/managing-node-js-dependencies-with-shrinkwrap it all sounds good, but then there is a passage that says: "It's still possible to pick up newly published versions of existing packages at build time. We assume force publish is not that common in the first place, let alone force publish that breaks compatibility." is there some way to
22:20 < markdaws>  get shrinkwrap to do a SHA of the package source and only install if the downloaded SHA matches?
22:21 < markdaws> seems like it's a security vulnerability if you are using npm and shrinkwrap to get your packages and someone can just replace a package content with the same version number (what if the package publishers machine has been compromsed and bad code gets uploaded to the same version)
22:30 < markdaws> also is there some way to fetch the source of a package (and it's dependant pacakges source) but not build them?  e.g. npm install foo --nobuild ?  
22:32 <@isaacbw> markdaws: git?
22:32 <@isaacbw> almost all (if not all) npm packages are on github
22:33 <@Nexxy> I keep all my npm modules on sourceforge
22:34 <@mbalho> hipster
22:34 < tongcx> hi guys, i want to use relative path of the current file in readFile, how do i do that?
22:34 < tongcx> by default, node use the relative path to the working directory
22:34 <@isaacbw> git clone `npm view <name> repository.url`
22:34 <@Nexxy> mbalho, :D
22:36 < tongcx> i get it
22:37 < thl0> tongcx: you should use path.join(__dirname, your-relative-path)
22:37 < st_luke> thl0: i think path.resolve is the preferred way to do it now cause of windows
22:38 <@isaacbw> damn windows
22:38 < thl0> st_luke: oh didn't know that, thought path.join works everywhere
22:38 < thl0> since path.sep is adapted
22:38 < mac_nibblet> havvy: Thanks for all the help today :) 
22:38 < MI6> joyent/node: bnoordhuis created branch issue1047 - http://git.io/P3Ml6A
22:39 < havvy> Your welcome.
22:39 < st_luke> thl0: I haven't tested it personally but I believe I saw it mentioned by izs somewhere, i could be wrong
22:39 < markdaws> @isaacbw - could get from git or the top level package (if it was present), but what about dependant packages?  The version the top level one depends on might be hard to get from git etc and a lot of work
22:39 < mac_nibblet> havvy: https://gist.github.com/macnibblet/07d59ecb4f04b12519e3 this is what i ended up with :)
22:39 <@isaacbw> why are you trying to do this markdaws 
22:39 < sw33tlull4by> hi there!I got a curiose problem regarding global. using the module node-orm(npm install node-orm) when connecting to a database I do not have a complete set of global variables, and I was wondering, how this happend, why and how I can get the databaseconnectionparameter out of there, since I will have multiple threads accessing the database and I don't want a corrupt database or things like dirty read and such usage of orm.connect ca
22:40 < thl0> st_luke: good to know if I ever run into trouble with join
22:40 < markdaws> @isaacbw - basically I wanted to check in my node_modules folder but you don't want to check in things that are built right, you want to do "npm rebuild" on the actual target machine, so if I have installed a module via "npm install foo" how can I tell what was source and what was generated form the build easily?
22:40 < st_luke> thl0: yea...not sure why I remember that instead of more important stuff
22:41 < thl0> st_luke: path.resolve seems to be better choice in general now where I look at it, since it works even if you pass full paths as second .. args
22:41 < markdaws> @isaacbw I thought "npm shrinkwrap" sounded good but since you can do a force republish there is no guarantee the source you get it what you thought it was going to be, not good in prod
22:42 < st_luke> thl0: hooray!
22:43 < EyePulp> using express, if I'm handling a POST request, and want to push them someplace else (as a GET) how do I do that?  res.redirect('/');  passes them as a POST, I think
22:43 <@isaacbw> what do you mean check in your node_modules folder?
22:43 < thl0> st_luke: on the other hand path.join should be faster since it doesn't do any of that
22:43 <@isaacbw> why do you need all of the dependencies to be unbuilt
22:44 < thl0> if you worry about string compares slowing down your app that is
22:47 < st_luke> thl0: how many nanoseconds faster is it?
22:48 <@isaacbw> lol
22:48 < st_luke> nanoseconds are important imo
22:48 < havvy> It's not the nanoseconds. It's the peace of mind.
22:49 < markdaws> @isaacbw - when shipping our node app to prod, we need to make sure we have the right versions of the node_modules (http://www.futurealoof.com/posts/nodemodules-in-git.html), to do this you don't want to check in compiled dependencies right "Any compiled dependencies should have their source checked in, not the compile targets, and should $ npm rebuild on deploy." so I want to easily just be able to get the
22:49 < markdaws>  package source and all dependant source and check that in then on the target machine do the npm rebuild, make sense?
22:49 < st_luke> havvy: thats what sells life insurance
22:50 < Nikentic> Hey
22:50 < Nikentic> My website has no static information on it. How does google rankings respond to that?
22:50 < Nikentic> All the content is loaded after the request has been made
22:50 < thl0> st_luke: how many nano seconds would I have to spend to find out ;)
22:51 < thl0> st_luke: given that it really doesn't matter 
22:51 < TehShrike1> So heeey... can anyone tell me if 'base64' is a reasonable encoding for fs.writeFile? http://nodejs.org/api/fs.html#fs_fs_writefile_filename_data_encoding_callback
22:52 <@isaacbw> markdaws: interesting
22:52 < TehShrike1> Oh sweet, base64 is listed further down.  never miiiind
22:53 <@isaacbw> markdaws: though honestly I think if you're doing anything that will be broken by a change of dependency version and not caught by error checks, then you are doing something wrong
22:54 <@isaacbw> and/or should use a package with better unit testing
22:54 < markdaws> what do other people do?  I started looking at: http://www.futurealoof.com/posts/nodemodules-in-git.html then it wasn't obvious how to get just the source, so then I read: http://blog.nodejs.org/2012/02/27/managing-node-js-dependencies-with-shrinkwrap but then it gets into: http://blog.nodejs.org/2012/02/27/managing-node-js-dependencies-with-shrinkwrap/#note2-top then "npm shrinkwrap" sounds like it could
22:54 < markdaws>  work but since you can republish psackages there is no guarantee the source code is what you expect even with explicit versions, seems like npm needs a hash of the package and that gets put into the package.json when you do "npm shrinkwrap" and then on "npm install" there should be an option like --verify which will fail if the hashes don't match for a particular version
22:55 < st_luke> isaacbw: no that's not really true
22:55 < st_luke> isaacbw: some modules' apis can change pretty significantly between versions
22:55 < st_luke> just pin your dependencies
22:55 < markdaws> @isaacbw - what if a package is compromised, say a bad person can slip in some code that reads all the files from your disk into the "async" package and publishes it with the same version, no error checking will catch that
22:56 < st_luke> markdaws: don't be afraid to check in your node_modules folder into your git repo
22:56 < TehShrike1> st_luke: but it feels dirty :-(
22:56 < markdaws> @st_luke - that's what I want to do but how to easily prune out things that shouldn't be checked in that were generated as part of the npm install?
22:56 < sw33tlull4by> ok let me ask differently, using orm.connect of node-orm, how can i get the db-connection out of that callback? I ask this since database-connections are expensive and I do not want to close it unless necessary
22:57 < ChrisPartridge> markdaws: pretty sure you can't re-publish a version on npm
22:57 < st_luke> ChrisPartridge: you can
22:57 < TehShrike1> sw33tlull4by: well, you could just create one, and use it in every connection
22:58 < TehShrike1> st_luke: how?
22:58 < TehShrike1> I was also fairly sure it was disallowed
22:58 < st_luke> npm unpublish; npm publish
22:58 < TehShrike1> ah.
22:58 <@isaacbw> isaacs: do you have any thoughts on what markdaws is asking about
22:58 <@isaacbw> downloading a package and all its dependencies without building them
22:59 < fauntle> I'm looking to run some user-supplied javascript in a node module I'm building, and I'd like to know if my current method is too insecure: https://gist.github.com/Fauntleroy/b347a7e99bdc2c3f0ccc
23:00 < sw33tlull4by> TehShrike1, thats what I tried, and so far so good, but writing that to my own db-dispatcher is not quite simple, since the global object is crippled within orm.connect,lord knows why so, either change my design OR find a way to extract the db-parameter from the callback and thats why I am here
23:01 < sw33tlull4by> just do a npm install node-orm and the include orm and within orm.connect do a "for(i in global) consol.log(i)" and you see what i mean
23:01 < sw33tlull4by> +n
23:01 < Nikentic> I am using AngularJS together with Express on my website. Google Bot doesn't find any content because it is loaded after the request has been made and with JS (google bot hates it). Any solutions?
23:02 < TehShrike|Work> sw33tlull4by: I haven't used node-orm
23:02 < markdaws> "npm shrinkwrap" sounds like it should work, but it relies on you trusting every package publisher you use (assuming npm itself is secure), if any one of those package publishers have their computer compromised then a lot of production boxes can be attacked, at least putting a SHA in the package.json as part of "npm shrinkwrap" for every package would help verify what you just downloaded
23:02 < holzp> Nikentic, this is a know issue for dynamic JS sites
23:02 < holzp> known..
23:02 < Nikentic> holzp: yes, I've noticed.
23:02 < sw33tlull4by> TehShrike|Work, ok you got any other ORMs you can suggest?
23:02 < fauntle> Nikentic: is there any way you can make your SEO content not use js
23:02 < holzp> I geenrelally show my content in a non-js way
23:02 < Nikentic> fauntle. all the relevant content is dynamic
23:03 < holzp> then if js is enabled get all bells and whistley
23:03 < Nikentic> http://yourdailyfact.com
23:03 < sw33tlull4by> preferably very friendly to one with OOP-background
23:03 < TehShrike|Work> sw33tlull4by: I don't use ORMs :-x I don't trust things that aren't me to write my queries
23:03 < Nikentic> Is how it works
23:03 < holzp> Google does, however, frown upon having a "google" version and a regular version
23:03 < Nikentic> I load all the text through Angular after the load
23:03 < Nikentic> hmm
23:03 < holzp> so make sure that the no-js version and the js version have the same content and the non js version is under noscript
23:04 < holzp> I very much believe google's spider does use javascript
23:04 < holzp> or at least it is used somewhere to crosscheck sites
23:04 < Nikentic> It doesn't load my content however
23:04 < Nikentic> It loads jquery etc, but not angular
23:04 < sw33tlull4by> ^^ fair enough, then it is back to square one redesign the application...-.-, unless s.o. has an idea to my percurilar problem ?:|
23:05 < TehShrike|Work> Well, what's the problem?
23:05 < holzp> the public crawler
23:05 < holzp> I really believe then have non google labeled crawlers out there double checking 
23:05 < MI6> joyent/node: Eugene Girshov v0.8 * 50ba0f2 : doc: remove note about close event - http://git.io/aFM3pA
23:06 < Nikentic> I need to figure something out
23:06 < holzp> Try a sitemap, with static pages holding content
23:06 < holzp> even if yoru user interface is all js, at least make a static version of the stuff for the engines
23:06 < holzp> and put it in a sitemap so google can find it
23:06 < Nikentic> How would I do that? hmm. 
23:07 < holzp> sitemaps: http://support.google.com/webmasters/bin/answer.py?hl=en&answer=156184
23:07 <@isaacbw> Nikentic: rendering angularjs pages for crawlers is an unsolved problem
23:07 <@isaacbw> there are a few meh solutions
23:07 < holzp> just .xml file(s) in your web root
23:07 <@isaacbw> er, not very well solved
23:07 < Nikentic> I mean the static pages. Atm the content gets loaded after the JS has been loaded
23:07 < sw33tlull4by> TehShrike|Work ,the global object is cryppled, My DB-Dispatcher-Queue is within global.databasebroker, the object holds functions and is also supposed to hold the object defining the databaseconnection, given tothe callback in orm.connect(), I create the object pass it to global.databasebroker, but within orm.connect() global.databasebroker is undefined and global holds only ArrayBuffer
23:07 < Nikentic> isaacbw: meh is better than nothing
23:07 <@isaacbw> you would render your page with node-webkit or phantomjs
23:08 < Nikentic> together with angular?
23:08 <@isaacbw> yes
23:08 <@isaacbw> there was a presentation about it at one of the nyc angular meetups
23:08 < Nikentic> with webkit or phantom?
23:08 <@isaacbw> http://www.youtube.com/watch?v=iB7hfvqyZpg
23:08 <@isaacbw> they used phantom
23:09 < Nikentic> http://www.youtube.com/watch?v=iB7hfvqyZpg
23:09 < Nikentic> woops
23:15 < sw33tlull4by> anyways, thanks for the chat, till next time
23:18 < Nikentic> Phantom JS seems good
23:22 < niggler> phantom js is meh
23:22 < Nikentic> What else could I do?
23:23 < niggler> casperjs is built on phantomjs
23:23 < ericmedem> Has anyone noticed that MongoClient in mongodb-native driver is not using safe mode properly? or maybe I am missing something...
23:26 <@isaacbw> Nikentic: node-webkit
23:32 < ChrisPartridge> there's also appjs, which is CEF+node
23:49 < kenperkins> i totally can't figure out what to name a module
23:52 < mscdex> kenperkins: make a module that helps you name a module
23:52 < kenperkins> great idea
23:52 < MI6> joyent/node: Ben Noordhuis master * c53b921 : test: disable simple/test-process-getgroups on os x  The output of `id -G - http://git.io/cwt5yw
23:52 < markdaws> "ThisModuleNameIntentionallyLeftBlank"
23:53 < holzp> what does the module do?
23:54 < kenperkins> holzp: batch changes to iptables
23:54 < holzp> tablesetter?
23:54 < kenperkins> there's an "iptables" module, and I thought about forking/PR, but it's so stale and would require breaking changes :S
23:55 < kenperkins> I should probably fork/PR :S
23:55 < kenperkins> or at least do that first
23:55 < TehShrike|Work> mikeal: if you're gong to do sideways-scrolling in your blog, you should have it respond to the scrollwheel :-x
23:56 < mikeal> works on my Mac
23:56 < mikeal> :P
23:56 < TehShrike|Work> huh, ok
23:56 < TehShrike|Work> I'm using Chrome on Win7
23:56 < draginx> is there a good tutorial on using eventemitters when building your own modules / keeping it out of the global scope area? O-o
23:56 < mikeal> i do sideways scroll on my trackpad and it works fine
23:57 < TehShrike|Work> Oh, so it's not actually registering as a mouse scrollwheel
23:57 < TehShrike|Work> I was talking about https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/DOMMouseScroll
23:57 <@isaacs> markdaws: so, the only way that someone could write to a package is if a) they got the owner's npm login access, b) they got admin on the couchdb server, or b) couch has a huge security vulnerability that is as-yet unknown.
23:58 <@isaacs> markdaws: you should trust the code in npm packages equal to:  (trust in user) * (trust in couchdb) * (trust in isaacs)
23:58 <@isaacs> markdaws: where each value is some number between 0 and 1
23:59 < TehShrike|Work> Wouldn't it be Math.min(trust in user, trust in couchdb, trust in isaacs)?
23:59 < mikeal> i can write to anyone's package :P
23:59 <@isaacs> oh, well (trust in the npm admins)
23:59 < mikeal> but i don't cause i'm a good person :)
23:59 < markdaws> @isaacs - well really it is (trust in user) * (trust in users computer) * (trust in couchdb) * (trust in isaacs) * (trust in isaacs computer)
23:59 <@isaacs> which is me, mikeal, and JasonSmith
23:59 <@isaacs> markdaws: sure.
23:59 < TehShrike|Work> I don't trust people named Smith!
--- Log closed Fri Mar 01 00:00:06 2013
