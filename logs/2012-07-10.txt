--- Log opened Tue Jul 10 00:00:18 2012
--- Day changed Tue Jul 10 2012
00:00 < othiym23> what this *really* goes back to is thinking about Matt Ranney's talk at NodeConf
00:00 < othiym23> and thinking about backpressure in Node
00:01 < jesusabdullah> what does that have to do with deferreds?
00:01 < SubStack> node 0.9 will fix some of that
00:01 < SubStack> by defining a .pause and .resume by default
00:01 < othiym23> Go makes it easy to control flow
00:01 < jesusabdullah> node makes it easy to control flow
00:01 < jesusabdullah> just different models
00:01 < jesusabdullah> but you're missing the point here
00:02 < jesusabdullah> the problem with iced coffeescript isn't that it implements coroutines
00:02 < othiym23> jesusabdullah: yeah, but Go's model is a superset of Node's
00:02 < jesusabdullah> the problem isn't that there's a promises/coroutines implementation
00:02 < jesusabdullah> the problem
00:02 < SubStack> othiym23: omitting features isn't necessarily a bad thing and often the opposite
00:02 < othiym23> the problem with Iced Coffeescript is that it's a transpiled heap of bullshit, I've got that part
00:02 < SubStack> of course we should look at these features carefully and independently
00:02 < jesusabdullah> yes
00:02 < jesusabdullah> transpiled heaps of bullshit are irrevocably so
00:03 < othiym23> I didn't say I was going to *use* it ;)
00:03 < SubStack> I mostly dislike how big projects are necessarily complicated and inflexible
00:03 < SubStack> this seems to be an immutable fact about reality
00:04 < othiym23> SubStack: I agree, to an extent, and I wouldn't want to start cramming random shit into Node -- I like its basic model a lot -- but there are a lot of good ideas in goroutines / channels / Go's select that it expresses very concisely and elegantly
00:04 < othiym23> IMHO
00:04 < SubStack> so the only solution is to write projects that are as small as possible
00:04 < jesusabdullah> can't they be described with the tools javascript already gives us?
00:04 < othiym23> jesusabdullah: probably?
00:04 < jesusabdullah> then that's what should be done.
00:05 < othiym23> but I'm having trouble coming up with natural-looking ways to do some of them
00:05 < othiym23> and I freely admit the gaps are probably in my understanding rather than the tools
00:05 < SubStack> I like callbacks.
00:05 < SubStack> they are very explicit
00:05 < jesusabdullah> I mean, really, I think it's okay to accept that your language du jour has a hard time with a given thing
00:05 < bwen> I like SubStacks :D
00:05 < SubStack> it's quite obvious what's going on most of the time with callbacks
00:05 < holzp> its a new paradigm, it will take getting used to
00:06 < TheEmpath> i went from procedural to oo to protoype and i find prototype to be the most flexible
00:06 < SubStack> it's not new at all but for a lot of people it's somewhat new
00:06 < jesusabdullah> you really don't want to shoehorn your code into one "paradigm"
00:06 < SubStack> paradigm driven development
00:06 < jesusabdullah> you want some procedures, some prototypes, a little bit of function action
00:06 < othiym23> heh
00:06 < jesusabdullah> a lot of functional action
00:07 < jesusabdullah> a few methods, y'know
00:07 < jesusabdullah> change it up to fit what you're doing
00:07 < jesusabdullah> javascript gives you the basics to do damned near anything
00:07 < othiym23> I'm with jesusabdullah on this one, I just keep doing things with my code that make my brain explode
00:07 < SubStack> the biggest thing is just to not bundle too much state
00:07 < othiym23> trying to generically instrument async code is hard
00:07 < SubStack> use all the tools at your disposal to keep the state seperate except those pieces that must necessarily interact
00:07 < jesusabdullah> Yeah, state becomes more difficult to reason about, especially if you're just tossing it around all willy-nilly
00:08 < SubStack> othiym23: instrument how?
00:08 < TheEmpath> i find state management in js to be so easy
00:08 < jesusabdullah> well like
00:08 < Spion_> not to mention that if you store state in the wrong place you will be surprised when you try to scale your program to multiple processes
00:08 < othiym23> I was mumbling at some of you about this last week, but I'm trying to write a Node.js agent for New Relic, and if you know how New Relic works with other languages, you know what I'm up against
00:08 < othiym23> SubStack: ^^
00:08 < jesusabdullah> you make an object with some properties and then the methods finagle the properties on `this`
00:08 < TheEmpath> for whatever reason, time as a relative property makes so much more sense to me
00:08 < jesusabdullah> not too bad
00:08 < othiym23> and by "trying to" I mean "will if it kills me"
00:09 < jesusabdullah> the problem is that state is *inherently* difficult because you have to follow it long-term
00:09 < jesusabdullah> if it were easy people wouldn't buy state diagrams
00:09 < othiym23> people buy state diagrams?
00:09 < TheEmpath> i find debugging other peoples JS to be way easier than some of the monolithic beasts that pass as frameworks in some OO setups
00:10 < othiym23> TheEmpath: hanging out on this channel and helping newbs has taught me a *lot* about what I can expect to see when I deploy what I'm working on, in a semi-terrifying way ;)
00:10 < Spion_> js would be perfect with: generators, optional types (coming soon) and shorter function syntax
00:11 < TheEmpath> OO hits a point where you have to incorporate all these other patterns just to get basic functionality
00:11 < othiym23> Spion_: what do you need generators for when you have event emitters and streams?
00:11 < TheEmpath> prototype has structure, but it also allows structures to be smashed together so easily
00:11 < SubStack> yeah generators look pretty useless
00:11 < Spion_> othiym23, yield
00:11 < SubStack> I haven't really seen them put to good use in languages that have them
00:11 < Spion_> writing async code without callbacks.
00:12 < othiym23> ~/
00:12 < Spion_> blah = yield db.findAll({name: 'Harry'}); blah.forEach(function(item) { ... });
00:12 < TheEmpath> PHP is in a state where they have closures, but they are crappy, and so your callbacks are like HTTP REST callbacks
00:13 < TheEmpath> makes me VIOLENT
00:13 < othiym23> TheEmpath: three letters explain what your actual problem is there
00:13 < othiym23> and neither of them is "O" ;)
00:13 < TheEmpath> anywho, i miss you node.js.  I miss you, node.js community.  i miss you all :(
00:13 < TheEmpath> i'll be with you again soon, i promise
00:13 < pawn> does all req.body data become strings?
00:14 < pawn> num[]=1&num[]=2&num[]=3
00:14 < pawn> does this become
00:14 < othiym23> Spion_: what does yield get you that closure.nextValue() doesn't?
00:14 < pawn> req.body.num === ['1','2','3']
00:14 < pawn> ?
00:14 < Spion_> closure.nextValue
00:15 < Spion_> othiym23, where did that come from?
00:15 < othiym23> var closure = function () { var start = 0; this.nextValue = function () { return start++; }; };
00:15 < othiym23> just riffin', Spion_
00:16 < Spion_> here is a highly unoptimized example, for (var k = 0; k < 10; ++k) { var res = yield db.find({id: k}); console.log(res.name); }
00:16 < othiym23> generators are just a pattern in JS / any language with closures, I'm trying to understand what value you get from rolling them up to the operator level
00:17 < Spion_> looks just like sync code, but its async.
00:18 < teadict> pawn: You could just console.log(req.body.num), couldn'tyou?
00:18 < othiym23> ah, I getcha Spion_, --> see above b/w me and jesusabdullah
00:18 < othiym23> Spion_: also, in most languages I know with yield as a keyword, it's synchronous (AFAIK it's sync in both Python and Ruby)
00:19 < Spion_> yield just gives up the current execution flow and passes it back to the function that invoked the generator
00:20 < Spion_> since a promise is yielded (the api will have to change, yeah), the invoking code can set it up so that when the promise is resolved, the generator is resumed with gen.send(returnValue)
00:21 < othiym23> I guess I don't really see the advantage that gives over closures / callbacks
00:21 < Spion_> well lets see
00:21 < Spion_> 1) you don't have to nest anything
00:22 < Spion_> 2) you can use existing control structures
00:22 < pawn> teadict: Found that they're all strings. :\
00:22 < Spion_> 3) you can use operators normally e.g. (yield db.find({id:blah})).name.length > 5 &&  (yield db.stats.find({id:blah})).postCount > 10
00:23 < othiym23> Spion_: is there an ES6 proposal floating around for generators?
00:23 < othiym23> I feel like I'm missing some context
00:24 < Spion_> yep.
00:24 < Spion_> http://wiki.ecmascript.org/doku.php?id=harmony:generators
00:25 < othiym23> Spion_: ty (trying really hard to not write ES6 off prematurely)
00:25 < Spion_> honestly, my bigest beef is with operators.
00:25 < Spion_> actually its writing a callback replacement for every language feature.
00:26 < Raynos> When working with streams
00:26 < Raynos> How do you get the error to go back to the req/res ? https://gist.github.com/3080087
00:27 < vicapow> whats the best utility to extend the functionality of fs?
00:28 < vicapow> best module* that is
00:28 < vicapow> i want to create a file, from a path, creating any folders, if they dont exist
00:28 < chanced> there's path
00:28 < vicapow> the native module?
00:28 < chanced> http://nodejs.org/api/path.html
00:28 < chanced> yea
00:29 < bwen> vicapow: https://github.com/substack/node-mkdirp
00:29 < othiym23> Spion_: it strikes me that a sensible programming language design wouldn't include '*' overloaded in yet another way
00:29 < bwen> substack++
00:29 < bwen> :]
00:29 < Spion_> othiym23, true. infact there is no need for it at all
00:30 < Spion_> current mozilla (firefox) implements generators without that silly special character.
00:30 < vicapow> bwen: substack: awesomeness! thank you
00:31 < chanced> substack?
00:31 < othiym23> substack is a Turing-complete Node.js module generation algorithm
00:31 < othiym23> people like to talk about it like it's a person
00:31 < othiym23> but that's silly
00:31 < othiym23> there's no way a person could generate that much code
00:31 < chanced> lol
00:32 < vicapow> idk y, but mkdirp is a hilarious name for a module
00:32 < chanced> cause it sounds like make derp? hehe
00:32 < bwen> never heard of "mkdir -p" ?
00:32 < bwen> :P
00:33 < bwen> make dir ... -please ... xD ... yeah that'll do...
00:33 < chanced> my god, he does have a….LOT.. of projects
00:33 < othiym23> Spion_: like a lot of ES6 additions, generators look cool but also strike me as an abstraction too far
00:33 < Spion_> however, its an abstraction that is perfect for nodejs
00:35 < othiym23> Spion_: I'd have to spend some time playing with how generators and eventing interact to have a real opinion, I think
00:37 < chanced> i cant get over the fact that by the time i save and swipe to the screen with my console on it that the tests have already run
00:38 < chanced> i keep catching myself waiting for them to finish and go "oh yea.."
00:41 < Spion_> othiym23, i toy around with them in firefox. once you get a GeneratorManager implemented it becomes really fun :)
00:43 < CIA-93> node: isaacs reviewme * rfbfb2f5 / Makefile : build: Regenerate docs for tarball and releases - http://git.io/m8GoLg
00:43 < chanced> googling isn't helping, is there a way to have mocha not exit on an error?
00:43 < chanced> outside of catching them?
00:43 < chanced> i'd rather they be reported, just not have it stop watching
00:43 < chanced> kinda killing my tdd
00:44 < tjholowaychuk> chanced not ATM - we should emit "error" and if there's no error listeners exit
00:44 < tjholowaychuk> though I think I had --watch working fine with failures
00:44 < tjholowaychuk> i dont use it, maybe i missed that part
00:45 < chanced> do you just run the tests as you go?
00:45 < tjholowaychuk> yeah
00:45 < tjholowaychuk> i dont get the whole whatcher thing
00:45 < tjholowaychuk> when you're in a terminal all day
00:45 < c4milo> isaacs: how do you check a header using GYP? 
00:46 < chanced> i didn't get it until this last rails project where i had guard running 24x7
00:46 < othiym23> mocha --watcher + wrapping all yr code in fuckit.js and everything will be awesome
00:46 < tjholowaychuk> i get it, i just dont find it improves my workflow at all
00:47 < c4milo> isaacs: let me re-phrase that, how do you check with GYP whether a required header is needed to compile a module or not? cc TooTallNate
00:47 < jesusabdullah> does fuckitjs work on node yet??
00:47 < TooTallNate> c4milo: gyp doesn't really have those kinds of checks built in
00:47 < TooTallNate> but just try to include the header. if it fails it fails
00:47 < c4milo> TooTallNate: ah!, that's smart :)
00:48 < chanced> tj, gotcha
00:48 < TooTallNate> or you can try to write a more advanced "configure" script if your project needs it
00:48 < othiym23> jesusabdullah: it's like 30 lines of code; forking it and diking out all the window.* bits (or monkeypatching window which I think Mocha does already) and it should all just work
00:48 < c4milo> TooTallNate: nah, it's what it's 
00:48 < othiym23> for wome definition of "work"
00:48 < tjholowaychuk> othiym23 what does it do?
00:48 < c4milo> TooTallNate: I'm moving node-inotify over to GYP
00:49 < TooTallNate> c4milo++ :)
00:49 < tjholowaychuk> nvm
00:49 < jesusabdullah> tjholowaychuk: it removes lines from your source code until it works
00:49 < othiym23> it makes your code be awesome instead
00:49 < othiym23> ...instead of failing
00:49 < othiym23> ...instead of crashing
00:49 < othiym23> ...instead of doing anything at all
00:50 < Raynos> if I have a stream and it emits an error
00:50 < Raynos> then I want to kill that stream
00:50 < jesusabdullah> ..but hey! fuckit(.js)
00:50 < Raynos> should I call .close on it or something else?
00:50 < c4milo> TooTallNate: also I'm being lazy and going to use libuv to watch for events on the inotify fd instead of using straight epoll 
00:50 < TooTallNate> c4milo: i mean, that's probably better, no?
00:51 < chanced> hm, not sure i like the idea of fuckit
00:51 < TooTallNate> or does inotify only work on 1 platform anyways?
00:51 < chanced> kinda spooks the shit outa me tbh
00:51 < c4milo> TooTallNate: yes, only 1 platform 
00:51 < c4milo> TooTallNate: but it's ways easier to use libuv than messing up with epoll
00:51 < othiym23> chanced: before making up your mind, be sure to review its license
00:54 < chanced> lol
00:54 < chanced> best license ever
00:55 < othiym23> all of my licenses are going to have a "dire situation" clause from now on
00:56 < chanced> his entire description makes the project worth reviewing actually
00:56 < chanced> "Whether or not the remaining code is even worth executing, we don't know. We also don't particularly care." hah
00:56 < othiym23> anyway, I'm with tjholowaychuk: I just use the up arrow instead of mocha --watch
00:57 < othiym23> if my test suites ever start taking more than a few seconds, it's probably time to do some refactoring and / or start using mocha --grep
00:57 < tjholowaychuk> i patched bash so return replays the prev command hahaha
00:57 < chanced> nice
00:57 < tjholowaychuk> wish I hadn't, bash is a mess
00:58 < chanced> i prefer zsh
00:58 < chanced> sadly mostly for the sexy prompts
00:58 < othiym23> I've spent an embarrassing amount of time on my zsh prompt
00:59 < chanced> i wish i had that kinda dedication
00:59 < chanced> i get frustrated and basically run fuckit against my life
00:59 < Stoob> my fave prompt: Default cygwin bash
00:59 < Stoob> it's... beautiful
00:59 < othiym23> it shows my current branch, whether there are any untracked / uncommitted files in the repo, and path within the repo
01:00 < othiym23> and does most of that stuff for hg, git, svn, cvs, bzr (!) and monotone (!!)
01:00 < othiym23> p4 can go fuck itself
01:00 < Stoob> lol
01:01 < Stoob> http://i.imgur.com/ooxn6.png
01:01 < othiym23> Stoob: I agree, I've always liked that prompt
01:01 < othiym23> not enough to keep using Cygwin, though
01:01 < Stoob> I was being supersarcastic, lol
01:02 < Stoob> the colors are horrible and I don't appreciate the multiline :P
01:02 < chanced> lambda is skinny enough but provides enough info to keep me happily informed
01:02 < chanced> λ ~/code/node/vista/ master* 
01:04 < othiym23> man, if zsh only gave me an irssi / weechat interaction paradigm, there's no telling what kind of fuckery I'd get up to
01:04 < othiym23> I'd probably just end up reinventing a broken version of Midnight Commander mashed up with QuickSilver
01:05 < othiym23> a sobering thought
01:05 < chanced> i have no idea wtf you just said and i'm struggling so hard to not go down that google trail
01:06 < othiym23> chanced: good idea
01:06 < chanced> thanks :)
01:10 < cpsubrian> anyone know if a module/script exists to compare the output of two calls to `npm list`?
01:22 < chanced> what would you guys do if you needed a registry of plugins for a module; wrap npm with a new repo or just depend on npm, subtags, and a wiki list?
01:22 < chanced> i kinda prefer the former so not to water down npm with tiny little modules for something very specific.. but i guess it could help it in dependency ranks too
01:28 < jesusabdullah> chanced: definitely leverage npm. Either place a convention for naming plugins, or a special package.json flag or something
01:29 < jesusabdullah> chanced: Nobody just reads through fucktons of modules sifting through names. You gotta let the search do its job
01:30 < jesusabdullah> Yeah, I'd depend on npm and using a unique keyword
01:30 < jesusabdullah> keywords: [ 'plugin-for-chanceds-sweet-thing' ]
01:32 < chanced> jesusabdullah: yea, thanks
01:35 < mikeal> anyone use node-midi?
01:37 < TooTallNate> mikeal: tmpvar did during his talk :p
01:37 < mikeal> yeah, i have compile issues
01:37 < mikeal> which i bet you can help with :)
01:38 < mikeal> https://gist.github.com/3080457
01:39 < TooTallNate> mikeal: ah, that has to do with the refcount refactor ben did
01:40 < mikeal> ok
01:40 < mikeal> TooTallNate: you should log an issue and tell them how to fix it https://github.com/justinlatimer/node-midi/issues
01:40 < mikeal> cause i don't know what you're talking about :)
01:40 < TooTallNate> mikeal: looks like the open pull request already takes care of it
01:40 < TooTallNate> https://github.com/justinlatimer/node-midi/pull/12/files#L3R238
01:41 < TooTallNate> mikeal: do "npm install git://github.com/malyn/node-midi.git"
01:42 < mikeal> new error, ya!
01:43 < mikeal> https://gist.github.com/3080477
01:43 < tbranyen> hook me up with some midis bros
01:43 < mikeal> i've got the tmpad
01:43 < mikeal> :)
01:45 < tbranyen> i'm settling for keygen music atm
02:10 < marcosmlopes> Hello, someone can help me? http://stackoverflow.com/questions/11334568/live-video-streaming-with-node-js-doent-work
02:32 < marcosmlopes> please, anyone can help answer my question on stackoverflow? http://stackoverflow.com/questions/11334568/live-video-streaming-with-node-js-doent-work
02:57 < Raynos> Can I read req.url and req.headers in a stream if I do req.pipe(someStream) 
02:58 <@maxogden> only post/put data streams with http
03:00 < aleminio> Hey guys, i am using the mysql api with node.js, It works fine, but when i am creating a new query inside another queri'es function, i the database has not been selected
03:01 < aleminio> i'm getting an error* (sent by mistake)
03:02 < aleminio> but if i run a query to select a db again, it works fine. why is it acting that way?
03:02 < deoxxa> 1) paste code
03:02 < deoxxa> 2) ???
03:02 < deoxxa> 3) profit!
03:03 < aleminio> newMysql.query("select * from questions",function(err, results, fields) {
03:03 < aleminio>         newMysql.query('USE '+MY_DATABASE);
03:03 < aleminio>         newMysql.query("UPDATE system SET latest_question ="+results[0].id,function(err,data){
03:03 < deoxxa> eep, pastebin please
03:04 < aleminio> heh, 1 moment
03:05 < aleminio> http://pastebin.com/YTBau4Ky
03:06 < aleminio> as you can see, i am setting the databse twice, if i don't do that, the second query will fail, telling me that the databse isn't set
03:07 < aleminio> i am wondering why
03:10 < tim_smart> aleminio: Have you tried setting the database in the connection options? https://github.com/felixge/node-mysql#connection-options
03:14 < aleminio> yep, it doesn't give me that error when i'm setting it as an option, but i'm still curious about the other way and why it does that
03:16 < tim_smart> Not sure. Would have to take a look and how it is implemented.
03:25 < owen1> since we got socket.io, why can't i use it for all my communication with the server?
03:26 < deoxxa> owen1: you can if you want
03:27 < SubStack> owen1: it's saner to use something like mux-demux to pack multiple streams over a single websockety transport I think
03:27 < SubStack> or at least this is what I've been experimenting with lately
03:28 < SubStack> because then you can just .pipe() streams from the server into the client
03:28 < SubStack> and if you need fancy things like rpc you can use dnode or rpc-stream as a separate readable/writable stream channel on the mux-demux
03:29 < SubStack> it's pretty much the greatest thing ever
03:29 < SubStack> maxogden can back me up on this
03:29 < jesusabdullah> It's certainly an elegant approach
03:30 < owen1> SubStack: i wish i knew what u'r talking about (:
03:30 < jesusabdullah> SubStack: hij1nx and I discussed your mux/demux tool somewhat in-depth after your talk. Good times!
03:30 < owen1> deoxxa: so do u ever use good old ajax request?
03:30 < jesusabdullah> I mean, usually you roll all one way or the other
03:31 < jesusabdullah> no reason to have like 30 contact points if you can make it with one
03:31 < jesusabdullah> that is, you shouldn't have to hit half your api with ajax and the other half with socket.io just cause
03:31 < owen1> socket.io uses tcp and not http so it's faster with less crazy handshaking, right?
03:31 < jesusabdullah> no
03:31 < SubStack> jesusabdullah: dominictarr wrote mux-demux
03:31 < jesusabdullah> SubStack: Oh? I thought you did. EITHER WAY
03:32 < SubStack> nah I just was complaining that it didn't exist already
03:32 < jesusabdullah> WE DISCUSSED THE STACKVM SCHOOL OF THOUGHT REGARDING MUXInG AND DEMUXING AT LENGTH
03:32 < SubStack> and then dominic was like "yo I GOTS this"
03:32 < SubStack> and then pow, it happened
03:32 < jesusabdullah> "BRO"
03:32 < jesusabdullah> I got hij1nx thinking about rewriting nssocket to expose streams of some kind
03:33 < jesusabdullah> or rather he was thinking that way anyway, I just encouraged it
03:33 < SubStack> this approach is really nice because you can use whichever streaming protocol is the best tool for the job
03:33 < owen1> jesusabdullah: 'no' was to my tcp vs http question
03:33 < owen1> ?
03:33 < jesusabdullah> correct
03:34 < jesusabdullah> socket.io wraps a number of http-based transports
03:34 < jesusabdullah> including long-polling and websockets
03:34 < jesusabdullah> and also flash sockets, some others probs
03:34 < jesusabdullah> but none of them are tcp
03:34 < jesusabdullah> insofar as they all generally run on top of http
03:34 < jesusabdullah> as that's what browsers can do
03:35 < SubStack> counterpoint: http is a thing that goes over tcp
03:35 < SubStack> mind: blown
03:35 < SubStack> like this: local={"free":{"waiting":2,"resources":1,"using":1}}
03:35 < SubStack> counts={"dd998fba":{"free":{"waiting":2,"resources":1,"using":1}}}
03:35 < SubStack> attached={"43241634":{"plan":"free","id":"43241634","spot":2},"134f2bc4":{"plan":"free","id":"134f2bc4","spot":0},"15ea4245":{"plan":"free","id":"15ea4245","spot":1}}
03:36 < SubStack> haha wups
03:36 < SubStack> http://substack.net/images/mind_explosion.png
03:36 < owen1> jesusabdullah: thanks!
03:36 < SubStack> like that
03:36 < SubStack> but also the other thing
03:36 < SubStack> random json spam is concordant with the vibe I'm going for here
03:41  * prettyro_ checking IRC client
03:41 < tim_smart> jesusabdullah: Well, websockets are sort of tcp
03:41 < jesusabdullah> well, I mean, in the sense that they expose a tcp-like interface sure
03:42 < prettyrobots> I'm trying to run `tee` on Windows from Node.js.
03:42 < prettyrobots> Looking to use a "Cmdlet".
03:42 < jesusabdullah> but not in the sense that you can really just go and telnet a websocket thing
03:42 < jesusabdullah> prettyrobots: powahshell amirite
03:42 < prettyrobots> Anyone ever done this? Run a "Cmdlet" from Node.js?
03:42 < prettyrobots> Yup.
03:42 < livinded> any node people going to defcon this year?
03:42 < prettyrobots> Trying to convert a Bash script to cross-platform Node.js.
03:43 < jesusabdullah> I've not tried to run a powahshell cmdlet, no
03:43 < tim_smart> jesusabdullah: You can telnet a http server if you like, you just have to know http speal
03:43 < tim_smart> *speak
03:43 < jesusabdullah> tim_smart: hence the "just"
03:43 < jesusabdullah> tim_smart: you'd have to do more than just start typing in jsons
03:44 < tim_smart> I speak chunked encoding in my sleep.
03:44 < jesusabdullah> cause it's websocketz over http over tcp that in the end is a convoluted thing that on some level acts kinda like tcp in your tcp
03:44 < jesusabdullah> liar
03:44 < tim_smart> Hah, I don
03:44 < prettyrobots> Looks promising: https://github.com/Benvie/node-Windows
03:44 < tim_smart> I don't event know what I speak in my sleep
03:44 < jesusabdullah> yar
03:44 < tim_smart> I am asleep when I'm asleep.
03:47 < tim_smart> jesusabdullah: To be honest, I just wish browsers had a stream-like xhr object.
03:48 < jesusabdullah> I mean
03:48 < tim_smart> Let us make our own protocols you spec retards.
03:48 < jesusabdullah> It's all kind of a clusterfuck
03:48 < jesusabdullah> so I just roll with it
03:48 < jesusabdullah> it's an important skill, I think, to be able to look at stupidity and just...let it continue being stupid and polluting your thoughtspace with stupid but like be cool with that
03:49 < deltab> tim_smart: server-sent events?
03:50 <@maxogden> tim_smart: you can use http.js from node in the browser to get a stream-like xhr object
03:50 < EhevuTov> I think the WS paper allows for binary. you can technically make your own protocol on top of WS, even though that would be heavier
03:50 < tim_smart> maxogden: Err what?
03:50 <@maxogden> look up browserify
03:50 <@maxogden> #protip
03:51 < EhevuTov> it's automagic
03:51 < tim_smart> maxogden: The http.js needs the native wrappers to libuv though.
03:52 < tim_smart> Good luck compiling those in your web page.
03:52 <@maxogden> yea i dont know what im sayin at all
03:53 < tim_smart> deltab: It has been a while since I looked at those, but from memory they were not too bad.
03:54 < tim_smart> EhevuTov: You could make the exact same protocol as WS if we could just write whatever we want whenever we wanted.
03:55 < tim_smart> Considering we currently parse and encode it with javascript all ready.
03:56 < tim_smart> EhevuTov: Err, I think I misunderstood what you said.
03:57 < prettyrobots> Okay. How about: Is there an easy way to send output from one process, its output stream, to two separate input streams?
04:01 < tim_smart> prettyrobots: So you want to do something like child.stdout.pipe(other.stdin) child.stdout.pipe(other2.stdin)?
04:01 < tim_smart> Which of course wouldn't work.
04:01 < prettyrobots> tim_smart: Yes. Actually, I want to do `tee` exactly. Pipe to another process while at the same time writing output to file.
04:03 < EhevuTov> prettyrobots, using a broadcast protocol?
04:03 < tim_smart> Well you could always just pipe to 'tee', but that would be a bit silly. I have done it before by just setting up all the back-pressure stuff and data listeners in user space.
04:04 < prettyrobots> EhevuTov: Not sure what you mean.
04:04 < ccowan> prettyrobots:  http://docs.nodejitsu.com/articles/advanced/streams/how-to-use-stream-pipe
04:04 < prettyrobots> tim_smart: I'm trying to covert a Bash script to work in Windows using Node.js.
04:05 < ccowan> that does exactly what to do
04:05 < EhevuTov> prettyrobots, IP multicasting
04:05 < tim_smart> Didn't realize pipe had a { end : false } option. That should solve the problem.
04:06 < EhevuTov> prettyrobots, does it have to be bash? could it be just sh?
04:06 < prettyrobots> EhevuTov: I have a node program that pipes to tee then pipes to another node program.
04:07 < prettyrobots> I'd like to do the same thing in Node.js. Hopefully, with a nice clean library that encourages me to do more with Node.js.
04:07 < prettyrobots> ccowan: I don't see the multiplexiing.
04:07 < prettyrobots> Oh, no!
04:07 < prettyrobots>  ccowan: You mean I just call pipe twice?
04:07 < ccowan> yup
04:07 < EhevuTov> prettyrobots, does it have to be streaming? Can you use a message queue library? I use zmq for some networking patterns
04:08 < ccowan> or as many times as you need
04:08 < prettyrobots> Ohhhh. That easy.
04:08 < ccowan> yup
04:08 < SubStack> prettyrobots: what are you doing exactly?
04:08 < prettyrobots> ccowan: That should do it.
04:09 < prettyrobots> SubStack: I have a node program that pipes to tee then pipes to another node program.
04:09 < prettyrobots> SubStack: As noted. I want to replace a one liner Bash program with Node.js so it will run on Windows.
04:09 < SubStack> so you just want to write tee in node?
04:09 < ccowan> prettyrobots: Cool… I came across that today when I was working on a function that needs to pipe two apps together and run a file through them… file -> command1 > command2 >
04:10 < prettyrobots> SubStack: Yes. ccowan showed me that you can call pipe how ever many times you need, so I believe that will work great.
04:10 < SubStack> function tee () { var s = es.through(); s.pipe(process.stdout, { end : false }); return s }
04:10 < SubStack> yes piping multiple times will also do the trick
04:11 < tim_smart> Just make sure you pass { end : false }
04:11 < prettyrobots> tim_smart: Roger.
04:11 < tim_smart> Up until the last pipe call
04:11 < prettyrobots> SubStack: Is `es` a parameter to your `tee` example.
04:12 < prettyrobots> ?
04:12 < prettyrobots> My question has been answered, but now I'm curious.
04:13 < SubStack> prettyrobots: var es = require('event-stream')
04:13 < prettyrobots> How would you implement another text utility, like sort, for example, or maybe grep is a better rexample.
04:13 < SubStack> first implement line buffering
04:14 < SubStack> or use a module
04:14 < prettyrobots> SubStack: https://github.com/dominictarr/event-stream/
04:14 < prettyrobots> ?
04:14 < SubStack> then write a readable/writable (through) stream that emits 'data' events for matching lines
04:14 < SubStack> prettyrobots: affirmative
04:15 < prettyrobots> SubStack: Line buffering: You mean like `split` in the EventStream library you just linked me to.
04:15 < prettyrobots> ?
04:18 < prettyrobots> Yup. That's what `split` would be. Line buffer.
04:18 < SubStack> could be
04:20 < trave> krishna, are you hanging out with shiva again?
04:37 < DTrejo> maxogden: i have embarcated on npmbro
04:48 < DTrejo> yeee
04:48 < DTrejo> my bot just joined the room
04:54 < benatkin> need a bot just for announcing when SubStack publishes a new module to npm :)
04:57 < SubStack> benatkin: pfft there are plenty and not all of them are worth watching
04:57 < SubStack> they're just the sort of thing that when you `npm search` you should find for lack of alternatives
04:58 < SubStack> I was trying to find a module that did this but I couldn't even find a module that did {min,max}imumBy!
04:58 < SubStack> not that I need those algorithms right now or anything but those should also be on npm
04:59 < jesusabdullah> also: twitter
05:05  * prettyrobots ircretary watch streams
05:06  * prettyrobots ircretary watches
05:06 < prettyrobots> ircretary watch streams
06:32 < ProLoser|Mac> has anyone read this article? http://www.mikealrogers.com/posts/nodemodules-in-git.html
06:35 < EhevuTov> ProLoser|Mac, I think that was before package.json support in NPM
06:35 < ProLoser|Mac> how long ago did package.json appear?
06:35 < EhevuTov> not too long after that blog I think
06:36 < EhevuTov> pretty much everyone uses package.json now
06:36 < EhevuTov> ProLoser|Mac, was that your concern?
06:37 < ProLoser|Mac> it seemed completely assinine, a teammate of mine wanted to switch to jake for our project (it is NOT a node project) and he committed all the node_module dependencies
06:37 < ProLoser|Mac> when i asked him to remove them, citing that he probably did it on accident he said it was on purpose and referred me to taht article
06:37 < EhevuTov> sounds like you know better practices than your node friend
06:37 < ProLoser|Mac> so i was wondering if that was a topic of discussion in the community, cuz it seems sort of stupid (IMHO) to include all your dependencies inside your own repo
06:38 < EhevuTov> I'm pretty sure it is
06:38 < ProLoser|Mac> EhevuTov: maybe, but might as well give him the benefit of the doubt and come in here and try to get a community consensus
06:39 < EhevuTov> I think Mikeal was correct when that article was written. That was also about the time committing node_modules was becoming a problem and probably why package.json came about around that time
06:40 < EhevuTov> so, what you want to do now, is copy someone's package.json, modify it for your dependencies, 'rm -rf node_modules' and then do an 'npm install' or 'npm i' for short
06:44 < EhevuTov> ProLoser|Mac, I even posted a similar question in SO just for posterity: http://stackoverflow.com/q/9333875/183835
06:44 < EhevuTov> well, and personal curiosity
06:58 < icyfenix> allo?
07:01 < mikeal> you should still check your modules in to git
07:01 < mikeal> period
07:01 < icyfenix> Ok, so I am trying to figure out how to read POST data with node. Um, anyone have any ideas? I'm exploring the wiki but so far, nothing.
07:01 < mikeal> it's the best thing to do for deployment
07:12 < tim_smart> mikeal: Have you implemented digest authentication in request yet? :p
07:13 < mikeal> nope, nobody really uses it anymore
07:13 < mikeal> you're literally the first person who's ever mentioned it :)
07:13 < tim_smart> Aww. cloudapp uses it.
07:16 < Karmaon> whats cloudapp
07:16 < tim_smart> Karmaon: http://getcloudapp.com/ 
07:17 < tim_smart> The don't have a linux app, so I'm making a quick daemon for it.
07:17 < tim_smart> *They
07:18 < Karmaon> eww,    their      text  reads  like                       this
07:18 < Karmaon> justify is evil like comic sans
07:19 < Karmaon> that page is an insult to typography
07:20 < tim_smart> I actually haven't read the front page
07:21 < mAritz> anyone here using nohm?
07:21 < Karmaon> why does zombie.js have 100000 dependencies
07:21 < mAritz> because it's a complicated beast
07:22 < Karmaon> seriously its bloated
07:23 < Karmaon> and who writes stupid tests for the sake of writing tests
07:24 < tim_smart> mAritz: That reminds me, I need to still rewrite biggie-orm
07:24 < mAritz> tim_smart: :D
07:24 < mAritz> i'm currently writing an admin app for nohm and would like to get some early feedback/input/help :)
07:25 < mAritz> that's why i'm asking. (plus i still have no idea if there are more than 5 people using it... ^^9
07:25 < tim_smart> I have used redis a lot in production since then, and I want to have models use prototypical inheritence etc.
07:26 < tim_smart> Not sure how that will work quite yet.
07:26 < mAritz> :D
07:26 < mAritz> yeah, nohm can't quite do that. you'd have to inject the prototyped properties/methods by themselves
07:27 < mAritz> never had that as a requirement myself, so I never thought about that.
07:36 < [AD]Turbo> hi all
07:46 < aroman> what form libraries are folks using with express? I'm looking for something that will let me define my forms in node and let me print them out in HTML (not by hand, but with flexibility). Something like how django's forms work. 
07:47 < ljharb> i've been using caolan/forms
08:17 < standoo> hi
08:18 < Dieterbe_> hello
08:20 < radiodario> morning
08:20 < radiodario> ljharb: forms looks very nice
08:44 < gernatech> Hi all, is anyone proficient with setting up the module, local tunnel ?
08:52 < gernatech> hello is there anyone here that's free to help ?
09:31 < _Tristan> I'm making a module. I do npm link, it says error: EACCES. I do sudo npm link, it puts the link in /usr/lib/node_modules and node can't find the module. I manually make a symlink from ~/node_modules/modulename to it's folder, it works fine. WTF?
09:55 < panosru> Hi, is there any decent dependency injection / service container module similar to Symfony's DI component? (http://symfony.com/doc/current/book/service_container.html)
09:55 < mmalecki> panosru: I have no idea what symfony is, but check out broadway
09:57 < panosru> mmalecki: thanks for your reply, I'm checking out broadway, not quite a DI module but kind of... I'll still continue looking for something complete though :)
09:57 < yawnt> òò
09:57 < yawnt> wops sry
09:59 < panosru> mmalecki: for instance Gerenuk seems to do the job https://github.com/naneau/gerenuk but I remember I tried it before and I rejected it for some reason, I'll try it again :)
10:01 < mmalecki> panosru: ah, I see what you mean now. yeah, broadway is a bit different
10:02 < panosru> broadway is mostly for "plugable" modules not quite a DI container :)
10:02 < mmalecki> yeah
10:03 < panosru> DI also helps a lot in testing, makes testing much easier
10:03 < panosru> also with DI you can automate few things and besides DI helps a lot in DDD/ES/CQRS stuff
10:04 < panosru> for the record, CoolBeans seems to be interesting as well: https://github.com/dhughes/CoolBeans
10:13 < upb> sooo... anyone know if and how its possible to define virtual attributes/columns on models in jugglingdb?
10:14 < yawnt> is anyone from estonia here?
10:15 < upb> yup :)
10:15 < yawnt> really?
10:15 < upb> yeah
10:15 < yawnt> great 
10:15 < yawnt> question, i wanna register a .ee domain
10:15 < yawnt> but i know no one there, is there a way i can do that?
10:16 < upb> yes there is, mail the guys at zone.ee they will find you a 'representative' who will be the contact
10:16 < yawnt> uhm
10:16 < yawnt> i mailed them but they said they can't be my contact
10:16 < yawnt> i better ask specifically
10:16 < yawnt> thanks :D
10:17 < radiodario> Attention! The domain fr.ee is not free!
10:17 < radiodario> lol
10:18 < radiodario> ceci n'est une pipe
10:18 < yawnt> okay i sent an email to zone.ee
10:19 < yawnt> asking specifically if there is a way through which i can register a .ee, or if they know some place where i can do that
10:19 < yawnt> thank you upb :D
10:20 < RLa> yawnt, is there a reason to want .ee? :)
10:20 < yawnt> RLa: domain hack
10:20 < RLa> and yes, zone.ee should get you it
10:20 < yawnt> RLa: basically instead of having somenameee.com
10:21 < yawnt> i'd have somename.ee
10:21 < yawnt> which is shorter and way cooler
10:21 < yawnt> plus the guy that owns the .com doesn't answer me
10:21 < deoxxa> i hate that
10:21 < yawnt> might be cause he's the CEO of Avira lol
10:21 < yawnt> deoxxa: hate what?
10:22 < deoxxa> oh sorry, got distracted
10:22 < deoxxa> domain squatters
10:22 < deoxxa> but even more, domain squatters who apparently don't want to make any money
10:23 < yawnt> deoxxa: he's the CEO of Avira
10:23 < yawnt> i don't think he's a domain squatter lol
10:23  * deoxxa googles avira
10:23 < yawnt> i think he got that domain cause malicious haxors might wanna exploit it
10:23 < deoxxa> oh, antivirus
10:23 < yawnt> yep
10:23 < deoxxa> explains why i've never heard of them, haha
10:23 < yawnt> i used avira back in my windows days
10:23  * deoxxa types slowly with two fingers on a mac
10:24 < yawnt> but still i'd love to get an answer
10:24 < yawnt> even a "no, cant do that"
10:24 < yawnt> so i'd stop hoping :(
10:24 < deoxxa> yeah
10:24 < yawnt> also zone.ee answers in Estonian
10:24 < yawnt> dafuq
10:24 < yawnt> i mean.. the auto reply system
10:24 < deoxxa> heh, i can get shougan.ee
10:25 < yawnt> i badly wanted coffee
10:25 < yawnt> coff.ee , being my nick `yawn`
10:25 < deoxxa> damn that'd be cool
10:25 < yawnt> deoxxa: i also asked for lethar.gy
10:25 < yawnt> guy never answered
10:26 < yawnt> and the domain is still there hangin
10:26 < deoxxa> lame
10:26 < dmilith> please, fix bug with no freebsd9 in tools/gyp/pylib/gyp/common.py
10:26 < dmilith> ;f
10:27 < dmilith> isaacs: 
10:27 < yawnt> uhm looks like lethar.gy finally started being used
10:27 < RLa> yawnt, btw, zone.ee is also doing hosting and once they mass replaced all strings in hosted files that looked like mysql username/password
10:27 < deoxxa> i'm waiting for srsfkn.biz to expire personally
10:27 < yawnt> http://lethar.gy/2012/05/20/kingdom-of-doom/
10:27 < yawnt> oh wow *happyness
10:27 < RLa> got my random python files changed
10:27 < yawnt> lol RLa , nice hosting
10:28 < xy77> Can someone help me to get started with node.js and mongodb? I tried the following, but it doesn't work: http://pastie.org/4230883 db server runs and command line client works fine.
10:28 < yawnt> i just need a domain, gonna run everything on S3 for the static part
10:28 < yawnt> and Nodejitsu for the Nodejs backend
10:28 < deoxxa> xy77: you're calling process.exit()
10:28 < yawnt> wow, looks like my pretty_function has just evolved into hyper_function 
10:28 < deoxxa> xy77: so the process is exiting
10:28 < yawnt> hyper_function: have y 
10:28 < RLa> they are ok for domains, i have one .com domain through them
10:29 < yawnt> *ya learnt multiple arities?
10:29 < yawnt> RLa: good to know thx
10:29 < yawnt> aw :(
10:29 < yawnt> RLa: i found netim.com
10:29 < xy77> deoxxa: right, thanks. Thought it would only exit after processing the connection, since the exit output appears just fine.
10:29 < yawnt> but they don't really look reliable
10:30 < deoxxa> xy77: looks like you need to read up on asynchronous program flow - check out the video on the front page of nodejs.org as a starting point, then get googling :)
10:30 < RLa> yawnt, well, they are one of the registrars listed on http://internet.ee/eng/registrars
10:31 < xy77> guess my PHP background put me in the wrong mindset :)
10:31 < RLa> yawnt, but prefer zone
10:31 < yawnt> yeah but they aren't well known, and i've read
10:31 < yawnt> that they've been offline for a long period without prior notice
10:31 < yawnt> so people found their website down for no reason
10:32 < RLa> i think there are very few hosting companies in estonia that have own datacenter
10:32 < RLa> zone should be one of them
10:32 < yawnt> zone.ee seems to have their own
10:32 < yawnt> yep
10:32 < yawnt> they offer vps and cloud
10:32 < deoxxa> what's the law in estonia like?
10:32 < yawnt> tasty
10:32 < yawnt> :D
10:33 < yawnt> srsly, dunnow
10:33 < deoxxa> lel
10:33 < deoxxa> i used to have a box in russia, that was sweet
10:33 < deoxxa> could do anything from that box and give precisely 0 shits
10:34 < yawnt> deoxxa: in soviet russia, box uses you
10:34 < deoxxa> oh i know that the russian mafia has all the code i uploaded to that box
10:34 < deoxxa> haha
10:35 < yawnt> i've just been invited to a all-in-one free nodejs course
10:36 < deoxxa> ...cool?
10:36 < yawnt> no
10:36 < yawnt> not at all
10:36 < deoxxa> aw
10:36 < yawnt> cause these are the same guys that explained how js classes are called prototypes
10:36 < deoxxa> haha
10:37 < deoxxa> we used to share an office with another company at work
10:37 < deoxxa> and one of the guys there was a self-proclaimed "javascript ninja"
10:37 < yawnt> lol
10:37 < yawnt> i can imagine this guy
10:37 < yawnt> coming into the office
10:37 < gernatech> Hi people, anyone using local tunnel ?
10:37 < yawnt> black-dressed
10:37 < yawnt> with a katana on his back
10:37 < RLa> a local tunnel?
10:37 < deoxxa> some of his best lines included "did you know you can put a function name instead of a function in jquery?" and "i was going to learn node.js but terminals are shit"
10:37 < yawnt> gernatech: you mean like ssh?
10:38 < deoxxa> also "canvas is too slow so i used raphael.js instead"
10:38 < yawnt> deoxxa: because raphael doesn't use canvas, no no
10:38 < gernatech> ah sorry, my question wasn't clear. It's a node module, opens a port to the internet..something like that.
10:38 < mmalecki> yawnt: oh, hey, that's our company outfit
10:38 < ablomen> deoxxa, he was not lying, he must hide his javascript skills very well
10:38 < deoxxa> we trolled the guy so hard on twitter that he actually got into a fist fight with one of his coworkers
10:38 < yawnt> mmalecki: i really gotta say were you guys work
10:39 < yawnt> mmalecki: *see
10:39 < deoxxa> that was one of the proudest days of my life
10:39 < yawnt> *where
10:39 < yawnt> dafuq, keyboard hates me today
10:39 < mmalecki> deoxxa: hahahahahaha
10:39 < gernatech> lolol
10:39 < mmalecki> yawnt: oh well, everywhere
10:39 < deoxxa> why am i eating salt
10:40 < deoxxa> i think i need to make dinner
10:40 < yawnt> mmalecki: :( i was hoping to see 10-15 black ninjas in the metro
10:40 < mmalecki> yawnt: I'm working out of my bed right now, I doubt you want to see my place!
10:40 < yawnt> with the N of nodejitsu painted on their back like the dojo's name
10:40 < mmalecki> yawnt: when I'm in NY, I'm totally making that happen
10:40 < yawnt> mmalecki: then i am either going there
10:40 < yawnt> or you send me pics
10:41 < mmalecki> yawnt: sounds good
10:41 < yawnt> too bad there isn't a day of the week that starts with N
10:41 < yawnt> Ninja Nhursday 
10:41 < standoo> yawnt: maybe some other language?
10:41 < yawnt> :(
10:41 < mmalecki> oh, in Polish it's Sunday
10:41 < yawnt> standoo: italian no, german no
10:41 < mmalecki> niedziela
10:41 < deoxxa> nichiyoubi
10:41 < yawnt> there are basically the languages i know, don't know japanese that good yet
10:41 < standoo> mmalecki: japanese?
10:42 < deoxxa> (sunday in japanese)
10:42 < yawnt> crap, i knew it
10:42 < yawnt> i should totally keep on studying hiragana
10:42 < yawnt> :(
10:42 < standoo> deoxxa: how u know jap?
10:42 < deoxxa> standoo: i lived there
10:42 < standoo> deoxxa: node ninja
10:43 < yawnt> it's kinda difficult to learn japanese by yourself.. at least to me it looks like that
10:43 < yawnt> i should prolly find some jap here.. 
10:43 < deoxxa> NOUDO NINJA DA ZO
10:43 < yawnt> lol
10:43 < yawnt> noudi
10:43 < yawnt> *o
10:43 < yawnt> mmalecki: but you don't go to work on sunday, do you :(
10:44 < mmalecki> yawnt: I do
10:44 < yawnt> wut
10:44 < standoo> yawnt: learning foreign language similar to learning another programming language?
10:44 < mmalecki> yawnt: I tend to work less during the week and more during the weekend
10:44 < yawnt> standoo: wat
10:44 < yawnt> no, programming languages work all the same
10:44 < mmalecki> I don't really care about what day of the week it is right now
10:44 < yawnt> well except for functional || imperative
10:44 < mmalecki> oh, wait...
10:45 < yawnt> but apart from that, once you know one it's just a matter of syntax and conventions
10:45 < mmalecki> it's Tuesday
10:45 < standoo> mmalecki: work more during the weekend? is it your own startup?
10:45 < mmalecki> standoo: no, I work at nodejitsu
10:45 < yawnt> mmalecki Corp ©
10:45 < mmalecki> does it mean that I got drunk on Monday? really? is this how low I got?
10:45 < yawnt> deprivating world of its sushi since 2012
10:46 < deoxxa> god sushi is expensive here
10:46 < deoxxa> (here being australia)
10:46 < yawnt> oh
10:46 < yawnt> weird.. it aint that expensive in italy
10:47 < yawnt> might be cause it sucks.. i've never tried real japanese food
10:47 < deoxxa> $4 for makizushi? seriously?
10:47  * deoxxa spits
10:47 < yawnt> lol expensive 4
10:47 < yawnt> $
10:47 < yawnt> haahahah 4$ expensive
10:47 < standoo> mmalecki: is the free development sandbox launched yet?
10:47 < mmalecki> standoo: oh, sure. feel free to sign up, I'll activate you :)
10:47 < yawnt> deoxxa: i dunno what price you have in the kangaroos land if 4$ for a sushi is expensive
10:47 < deoxxa> when you're used to $5 buying a whole tray from the corner store, $4 for one roll is expensive :(
10:48 < mmalecki> deoxxa: WAIT
10:48 < mmalecki> $ 4 for one roll?!
10:48 < deoxxa> mmalecki: WAITING
10:48 < deoxxa> yes
10:48 < yawnt> oh
10:48 < yawnt> one roll
10:48 < yawnt> well
10:48 < yawnt> that's kinda expensive yeah
10:48 < deoxxa> as i said, sushi is expensive here
10:48 < yawnt> well you should have specified
10:48 < yawnt> when i say sushi i mean a full sushi meal
10:48 < yawnt> not like a bite
10:48 < mmalecki> deoxxa: where do you live?
10:48 < yawnt> :(
10:48 < yawnt> australia
10:48 < deoxxa> mmalecki: 'straya mate
10:49 < yawnt> im faster yo
10:49 < mmalecki> I see
10:49 < deoxxa> yawnt: mine is more authentic
10:49 < mmalecki> lol
10:49 < yawnt> deoxxa: i've got a cousin from australia
10:49 < yawnt> i know teh slang 
10:49 < deoxxa> my condolences
10:49 < deoxxa> aha
10:49 < yawnt> well she ain't actually a cousin
10:50 < yawnt> more like a girl who lived with my aunt's family for a year
10:50 < yawnt> foreign exchange student
10:50 < deoxxa> hook in
10:50 < mmalecki> oh god, student exchanges...
10:50 < mmalecki> I did that
10:50 < yawnt> me too
10:50 < yawnt> germany
10:50 < deoxxa> i wish i had have
10:50 < yawnt> it was awesome
10:50 < yawnt> never had so much beer
10:50 < mmalecki> packing drunk spanish girl into a cab is no fun
10:51 < yawnt> it was during the 2010 weltmeisterschaft
10:51 < deoxxa> but alas, being poor as shit growing up didn't offer such opportunity
10:51 < mmalecki> but yeah, week of nonstop drinking
10:51 < yawnt> i basically found myself cheering germany with two flags tattoed on my cheeks
10:51 < yawnt> for no apparent reason
10:51 < yawnt> :|
10:51 < deoxxa> ha
10:51 < mmalecki> yawnt: you drunkely got a germany flag tatoo?
10:51 < mmalecki> now that's awesome
10:52 < yawnt> mmalecki: it wasnt permanent
10:52 < yawnt> thank god
10:52 < mmalecki> lol
10:52 < yawnt> it was on my cheeks
10:52 < yawnt> two tatooes
10:52 < yawnt> can you imagine if they were permanent?
10:52 < deoxxa> pizza time, brb
10:52 < mmalecki> hahahaha, yeah
10:52 < mmalecki> deoxxa: now that's a good idea
10:52 < yawnt> lol.. i'd be prolly hangin in a dark cave hiding myself from the rest of the world
10:53 < mmalecki> given that I ate nothing since yesterday
10:53 < yawnt> given that i ate pizza 5 times in the last 7 days
10:53 < yawnt> i can't even stand someone mentioning it
10:53 < yawnt> basically here goin' out means eating pizza
10:54 < mmalecki> yawnt: oh well, here going out means getting shitfaced
10:54 < yawnt> nah i don't really get drunk that much
10:54 < deoxxa> PIZZA PIZZA PIZZA PIZZA PIZZA
10:55 < yawnt> i mean, i get happy etc 
10:55 < mmalecki> yawnt: you don't want to know what happened yesterday
10:55 < yawnt> but i never drank so much that i felt bad the day after
10:55 < mmalecki> but giving a gun to a drunk 16 yo is a bad idae
10:55 < yawnt> i usually stop before that point.. mainly  cause i hate throwing up
10:55 < mmalecki> asg gun, so not so bad
10:55 < yawnt> mmalecki: lol
10:55 < yawnt> polish must be kinda crazy
10:55 < yawnt> no offense
10:55 < yawnt> saw in the darwin awards
10:56 < yawnt> one polish guy chopped his head off with a chain saw
10:56 < yawnt> because of a bet with his friends or something like that
10:56 < standoo> yawnt: theaterical?
10:56 < standoo> yawnt: could be a good magic trick
10:57 < yawnt> I am Polish and I remember reading about this incident in newspapers. Two guys got drunk and started to make macho type bets. You overestimate the wealth of polish peasants if you believe they were using a chain saw. I remember the bet was resolved using an axe. One man laid his head down and bet the one with an axe that he was not be brave enough to make the cut.
10:57 < yawnt> (cit Darwin awards)
10:57 < yawnt> oh axe, not chainsaw.. my bad.. that changes everything
10:57 < mmalecki> yawnt: I mean, let me find some pic...
10:57 < RLa> uh
10:58 < oby> testing
10:58 < yawnt> standoo: no trick.. darwin awards are given to real people because of real facts
10:58 < mmalecki> yawnt: https://fbcdn-sphotos-a.akamaihd.net/hphotos-ak-ash4/382447_105534479590768_1072672192_n.jpg
10:58 < yawnt> and they check if the story is true
10:58 < hkjels> any learnboost folks here? Trying to use a variable as the name of @keyframes
10:58 < yawnt> lol
10:58 < mmalecki> yawnt: this is me, breaking ice for drinks
10:58 < yawnt> with a gun.
10:59 < mmalecki> with a tavor tar 21
10:59 < mmalecki> I mean, it's for airsoft
10:59 < yawnt> i hope so
10:59 < mmalecki> so nobody got hurt or shit
10:59 < yawnt> otherwise you just don't break ice
10:59 < mmalecki> I don't really remember that day tho
10:59 < hkjels> in stylus that is
10:59 < yawnt> you blow the whole place out |:
10:59 < mmalecki> nah
10:59 < yawnt> i got to try an m16 once
11:00 < yawnt> it was the civilian version
11:00 < mmalecki> nice. how did it feel like?
11:00 < yawnt> like you can load only 5 bullets
11:00 < mmalecki> oh? lame
11:00 < yawnt> well that's the one you can buy in the US
11:00 < yawnt> if you're not in the army obv
11:00 < yawnt> but it was cool anyway
11:01 < yawnt> best day of my life.. i tried Magnum .44, M9, Winchester and the M16
11:01 < mmalecki> nice
11:01 < yawnt> we put a can like at the end of the field and we would try to get it with the pistol right
11:01 < yawnt> i tried and the can fell off.. i was like OMG DID I DO THAT
11:02 < yawnt> turned out i hadn't really hit the can
11:02 < yawnt> but the stick that was holdin it :(
11:02 < RLa> i need a gun here
11:02 < RLa> for birds
11:02 < RLa> they do not let me sleep
11:02 < mmalecki> yawnt: haha, that's good anyway!
11:02 < yawnt> mmalecki: nah it was luck
11:02 < yawnt> i mean.. i was like 12 yo
11:02 < mmalecki> WAT
11:02 < mmalecki> who gives a .44 to a 12 yo?
11:03 < yawnt> us
11:03 < mmalecki> and a fucking M16
11:03 < yawnt> *USA
11:03 < yawnt> well i had people with me
11:03 < yawnt> i spent 3 months in Kansas
11:03 < yawnt> in a friend's ranch
11:03 < mmalecki> oh, Kansas.
11:03 < mmalecki> that kind of explains it
11:03 < yawnt> so there were no people in a 25 miles radius
11:04 < yawnt> so they'd let me try it, under an adult supervision obviously
11:04 < mmalecki> right
11:04 < mmalecki> not that bad
11:06 < mmalecki> I need to shave :/
11:06 < mmalecki> I hate it.
11:06 < yawnt> me too :|
11:06 < yawnt> but who cares
11:06 < yawnt> can do that tomorrow
11:06 < mmalecki> I can't :/
11:06 < yawnt> you got vodka on your beard?
11:06 < yawnt> lol
11:07 < yawnt> "You can contact Soraineni (http://www.sorainen.com) or Tamme Otsmann Ruus Vabamets (http://ee.triniti.ee/) law office, thay can be an administrative person for your domain."
11:07 < yawnt> oh hai .ee domain
11:07 < mmalecki> yawnt: I got vodka everywhere, need to clean up too
11:07 < yawnt> mmalecki: thanks, i don't really wanna know
11:08 < yawnt> fuck i should be starting to bootstrap this oauth shit but the implementation i thought of lacks of flexibility
11:08 < mmalecki> lol
11:09 < yawnt> no really
11:09 < yawnt> how can you have an oauth provider that totally abstracts the model logic?
11:10 < yawnt> ideally you should be able to implement your own models and seamlessly integrate them with the library
11:10 < yawnt> but the line between the coder doing too much and the lib doing too much is awfully narrow
11:10 < RLa> yawnt, why you got such response?
11:11 < RLa> not an eu citizen?
11:13 < dmilith> anyone tried cluster2 with node 0.8?
11:13 < yawnt> RLa: indeed, Italy
11:14 < RLa> italy not in eu? huh?
11:14 < yawnt> yeah i am in the eu
11:16 < RLa> but why you need then 3rd party to be your administrative contact?
11:16 < yawnt> because if you are in the EU
11:16 < yawnt> you can buy a domain
11:16 < yawnt> but you still need an estonian contact
11:16 < RLa> oh sucks
11:33 < deoxxa> bbq chicken pizza, weeeee
11:43 < upb> hrm, using version 0.4.4 of restify client, downloading a binary file. getting content-length mismatch. the content length sent by server matches the length of the response body.
11:43 < radiodario> i'm getting this on one of my mocha tests: "TypeError: Array.prototype.toString is not generic ", any idea what does it mean?
11:43 < RLa> upb, what length, binary or characters?
11:43 < upb> res.body.length = 36467, Buffer.byteLength(res.body) = 69987, res.headers['content-length'] = 37668
11:43 < upb> wtf :P
11:44 < RLa> oh
11:44 < upb> so its 2 different lengths, neither matches the binary length
11:44 < RLa> what is sending that?
11:44 < upb> express, but does that matter?
11:45 < upb> wget downloads the correct contents and the length of the response body in bytes matches the response content-length heh
11:46 < 65MAAUN1J> Anybody here uses Mocha, and more specifically the "mocha --watch" option?
12:08 < upb> nice, that problem only appears when using restify 0.4.4 on node 0.6.17 but not when on node v0.4.2. i guess this is one of those nice node features again about modules vs node incompatibility
12:12 < Poetro> exit
12:12 < radiodario> 65MAAUN1J: i do, but i'm a newb and i'm also struggling
12:12 < radiodario> what problem are you finding?
12:14 < 65MAAUN1J> radiodario: well, I'm using Mocha with CoffeeScript, and if my coffee scripts don't compile, it basically breaks the Mocha watch loop and I have to restart it again
12:14 < 65MAAUN1J> I was wondering if anybody had that problem and found a solution
12:14 < radiodario> write coffeescript that doesn't fail!
12:14 < radiodario> hahaha
12:15 < radiodario> dunno, i don't really use the watch function, i'm struggling to get it to work with zombie.js to test some jquery
12:15 < CIA-93> libuv: Fedor Indutny v0.8 * r3726dee / (include/uv-private/uv-unix.h src/unix/thread.c): unix: thread: use mach semaphores on osx - http://git.io/Sxa0lw
12:16 < 65MAAUN1J> never heard of zombie.js
12:17 < radiodario> it's a headless browser
12:17 < radiodario> hence the name lol
12:25 < Acciaio> hi all how can I install npm with node.js v0.4? 
12:26 < edsu> radiodario: i've had some luck w/ jsdom to run jquery, but haven't tried zombie
12:26 < edsu> zombie looks cleaner, if it can work
12:27 < deoxxa> Acciaio: you'll have to install an old version
12:28 < deoxxa> Acciaio: or upgrade your node installation
12:28 < deoxxa> 65MAAUN1J: your nick makes me think "JUMANJI"
12:28 < radiodario> edsu it's pissing me off at the moment :(
12:29 < 65MAAUN1J> deoxxa: hehe. No, it's my IRC client that is doing something strange. It's created a random one for me because it couldn't get me to connect to free node with my default one
12:30 < Acciaio> deoxxa, I can't upgrade my node installation because the code that I would like to install is not compatible with lastest node.js implementation. Can u tell me which npm version I have to install?
12:34 < xy77> What I don't understand in regard to the mongodb driver is, why I have to specify a database name, I thought mongodb only has collections. Can someone explain this to me?
12:36 < `3rdEden> xy77: it has databases, which can have collections (see it as tables)
12:36 < `3rdEden> just like with a SQL database, you can have multiple databases
12:37 < deoxxa> (he was also answered in #mongodb)
12:40 < NodeX> xy77 : mongo has db names and collections
12:51 < xy77> next question: why does this script output null: http://pastie.org/4231457
12:52 < xy77> I would expect the previously inserted data to be returned.
12:52 < deoxxa> xy77: you're calling .find before the .insert is done
12:52 < deoxxa> the .insert will be done when the callback for it is called
12:53 < deoxxa> when you tell the mongodb driver to insert a document, you're saying "hey mongodb driver, insert this document into the database and let me know when you're done. kthxbye"
12:53 < deoxxa> then you go right on with your business and it goes and does that for you
12:54 < xy77> Ok, so I called this once and see in the mongodb console the record is added. Now I outcomment the insert lines. Shouldn't I get the records now?
12:54 < deoxxa> but! before it's finished, you go "hey mongodb driver, get the contents of this collection and tell me when you're done. bye!"
12:54 < deoxxa> yep
12:54 < xy77> I don't.
12:55 < deoxxa> you're calling close() before it's done
12:55 < deoxxa> lemme rearrange that for you, one sec
12:56 < xy77> allright, I see
12:57 < deoxxa> http://pastie.org/4231481
12:58 < deoxxa> as i said earlier today, the video on the front page of nodejs.org explains the basics pretty well
13:00 < xy77> watched most of it, but it was a bit long on networking IMHO
13:01 < xy77> You know I hate to kill processes, that's why I try so hard to terminate them. :-)
13:01 < balboah> now the first question is if the #nodejs auto chat bot is written in node.js ;)
13:23 < spolu> hi guys. Someone knows what happened to connect.session.ignore? 
13:24 < spolu> I can't find any doc relative to its removal
13:25 < xy77> Any recommendations on a unit test framework for node.js and/or browsersite javascript? 
13:25 < spolu> xy77: have a look at mocha, its really simple and nice to use
13:27 < bradgignac> xy77: i like jasmine as well
13:29 < xy77> What about Google's JS Test and Buster.js?
13:32 < xy77> What about mocks?
13:35 < xy77> bradgignac: jasmine looks way too verbose for my taste, gotta type all that
13:38 < bradgignac> xy77: yeah, some people don't care for the BDD style
13:39 < bradgignac> xy77: i would recommend mocha then.
13:39 < spolu> bradgignac: ++
13:39 < bradgignac> bradgignac: if i had not been using jasmine for so long, i probably would switch as well
13:39 < bradgignac> oops
13:40 < bradgignac> xy77: ^^
13:44 < sriley> er theres not really any difference between bdd and assert style
13:45 < sriley> id be surprised if you cant use bdd in mocha
13:47 < radiodario> you can use either
13:48 < radiodario> it supports BDD, TDD, Exports, QUnit style
13:48 < bradgignac> sriley: you can
13:55 < Acciaio> I can't install node.js v8.2 http://pastebin.com/0FTiqpCQ and I can't understand what I'm missing
13:55 < jetienne> pure virtual method called :)
13:56 < jetienne> yummy
13:56 < RLa> yesterday someone had same problem
13:56 < jetienne> Acciaio: out of the blue ,, zild guessing. have you cleanup the directory
13:56 < RLa> check channel logs, an issue on github was opened
13:58 < RLa> Acciaio, jetienne https://github.com/joyent/node/issues/3538
13:58 < RLa> Acciaio, running redhat/centos too?
13:58 < jetienne> Acciaio: try a clean git clone. 
13:59 < jetienne> RLa: it sint the same error tho
13:59 < jetienne> RLa: Acciaio got ""pure virtual method called"
14:00 < RLa> scroll down in the issue
14:00 < jetienne> RLa: he made a make clean at one point ?
14:00 < RLa> it does not help
14:01 < RLa> btw
14:01 < RLa> everyone having trouble seem to run localized system
14:04 < JasonJS> dnode question - has built in reconnect functionality been removed or changed recently? I'm passing in a reconnect param to .connect but it doesn't seem to do anything in 1.0
14:05 < RLa> "pure virtual method called" <- i guess some systems catch it, some just segfault
14:23 < vicapow> anyone else having issues with node-inspector?
14:24 < brianloveswords> GOOD MORNING NODE
14:25 < yawnt> good evening
14:26 < vicapow> brianloveswords: ALL CAPS
14:28 < vicapow> so is there a better solution to debugging memory leaks then node-inspector?
14:29 < brianloveswords> vicapow: it's fairly new, but you might wanna try https://github.com/lloyd/node-memwatch?
14:34 < vicapow> brianloveswords: thanks. i'll give that a try
14:35 < brianloveswords> vicapow, no problem, let me know how it works out!
14:36 < CIA-93> node: Ivan Torres v0.8 * r8146f2e / doc/api/fs.markdown : doc: clarify fs.symlink and fs.symlinkSync parameters - http://git.io/BRpxFQ
14:36 < sriley> vicapow: nope, node-inspector is working here though i have to start it using node --debug-brk app.js instead of node debug app.js
14:49 < vicapow> sriley: have you run into the issue where the "profile" tab is not visible?
14:49 < sriley> oh yes, that doesnt show, is it meant to?
14:50 < sriley> you need to install an optional dependancy v8-profiler if you wan the profiler
15:02 < CIA-93> node: isaacs v0.8 * rfecebe1 / Makefile : build: Regenerate docs for tarball and releases - http://git.io/xNtHcg
15:03 < gernatech> hi did anyone here used local tunnel ?
15:03 < gernatech> module, localtunnel* 
15:07 < strk> so it looks like socket writing (or reading) is getting binary when ascii was expected
15:07 < strk> is this a change between node-0.4 and node-0.6 ?
15:07 < strk> ie:       socket.on('data', function(data) {
15:07 < strk> after socket.write("200");
15:08 < strk> where socket is net.createServer(function (socket) {
15:08 < strk> well, the on(data) function gets a binary buffer
15:08 < strk> what do  I need to do to specify I want to inrerpret it as ascii (or utf8 or whatever) ?
15:15 < strk> socket.setEncoding('UTF8'); "fixes" it
15:15 < strk> but the documentation says that the default encoding _is_ UTF8
15:29 < Phoenixz> http://pastebin.com/412nqxZU  I am trying to extend the Array object (yes, I know, bad, horrible, want to do it anyway, I want a normal .remove() method), but its not working.. Extending String works w/o problem, but Array not.. why? See http://pastebin.com/412nqxZU
15:33 < micheil> Phoenixz: I think you'd need to check what your `this` is in that function
15:34 < klaemo> is there a way to do streaming file uploads with connect/express?
15:35 < munro> klaemo: https://github.com/felixge/node-formidable/
15:36 < micheil> Phoenixz: also, Array.prototype.remove, if you add it, should return the array, not the result of Array.prototype.push
15:36 < klaemo> munro: yeah i know, but i can't figure out how to get the stream of a file and then pass it on to another function or module
15:37 < micheil> Phoenixz: tangentially, you should also try ##javascript for this sort of question
15:37 < micheil> Phoenixz: side note, WFM on node 0.6.18
15:40 < qbit_> is it still "best practice" to use replicate from npm to dup the npm repo ? 
15:40 < micheil> qbit_: hmm?
15:41 < qbit_> i asked a while back and was told to use replicate 
15:41 < micheil> qbit_: if you want a private or self-hosted copy of NPM, then yeah, use the couchdb replication stuff
15:41 < qbit_> micheil: i mean the "replicate" package from npm
15:41 < micheil> oh
15:41 < qbit_> couchdb replication seems to stop after a while
15:42 < micheil> oh, okay. I wouldn't have a clue then.
15:42 < TrahDivad_> Can someone using mongoose can tell me why it is letting me store two docs with the same value for a 'unique' field?
15:43 < micheil> qbit_: I'd guess isaacs or mikeal are the people to ask about that. Potentially try the nodejs mailing list though.
15:44 < Phoenixz> micheil: WFM? Sorry, means what?
15:45 < Phoenixz> micheil: well, I am asking in node because it was not really a problem in JS, it just doesn't work in Node :)
15:45 < gildean> TrahDivad_: can you do the same from mongos cli?
15:45 < micheil> Phoenixz: "WFM" work's for me
15:45 < TrahDivad_> gildean: I'm not fluent enough with mongo to try to that
15:46 < Phoenixz> micheil: Ah, gottit.. Well, I have this Array.prototy.... in a separate module that I require()... Maybe that could be a / the problem?
15:46 < gildean> TrahDivad_: the cli is javascript too, it's not hard at all
15:46 < micheil> Phoenixz: I just did that by the repl and didn't get any errors
15:47 < TrahDivad_> gildean: is there a concept of a unique field in mongo too or is it an abstraction of mongoose?
15:47 < micheil> Phoenixz: anyway, why not just use underscore for these sort of things?
15:47 < Phoenixz> micheil: Heard that one before yes.. works in the repl, but it seems not to work in a program :(
15:47 < Phoenixz> micheil: use underscore? What do you mean?
15:47 < micheil> http://documentcloud.github.com/underscore/
15:48 < Phoenixz> micheil: this works for node too then?
15:48 < micheil> It'll give you the helpers you desire without you having to extend prototypes and write them yourself
15:48 < micheil> yes
15:48 < micheil> npm install underscore
15:48 < micheil> see: http://documentcloud.github.com/underscore/docs/underscore.html#section-10
15:48 < gildean> TrahDivad_: iirc it's part of mongo, but you have to set an index to the value before it can be unique
15:49 < Phoenixz> micheil: I see it.. I'll give it a try, thanks! :)
15:49 < micheil> no worries
15:49 < gildean> TrahDivad_: 
15:49 < gildean> oops, ment to paste this: http://www.mongodb.org/display/DOCS/Manual/
15:51 < TrahDivad_> gildean:reading… Thanks for the info!
15:53 < TrahDivad_> gildean: ok, I've played with the mongo console, and I looked into the indexes collection, and it seems that mongoose is not even setting the field as index
15:54 < zackiv31> for http://nodejs.org/api/fs.html#fs_class_fs_stats do I have to parse that string on my own to get one of the properties?
16:05 < gildean> TrahDivad_: yeah, you have to set the indexes yourself, only the _id field is inexed on default iirc
16:06 < gildean> *indexed even
16:06 < prettyrobots> Anyone speak German?
16:06 < yawnt> ein bisschen
16:06 < prettyrobots> What is the German word for usage?
16:06 < prettyrobots> As in...
16:06 < prettyrobots> usage: git push <options>
16:06 < gildean> yawnt: lol, i was just about to say that same phrase :D
16:07 < prettyrobots> Probably need a native speaker for this, but hey, anyone a native speaker of Spanish, French, German, Dutch, anything besides English?
16:07 < zzzzzbogus> hi, I just encountered that assert.deepEqual(NaN, NaN) throws an assertion error
16:07 < zzzzzbogus> which is consistent with NaN == NaN = false
16:08 < yawnt> prettyrobots: lol the only one you missed.. i'm italian
16:08 < prettyrobots> yawnt: Perfect.
16:08 < zzzzzbogus> but assert.deepEqual(false, []) throws too, despite false == [] = true
16:08 < prettyrobots> If you were translating a help message, how would you translate `usage`?
16:09 < zzzzzbogus> is this normal?
16:09 < zzzzzbogus> I'm a native speaker of Russian
16:10 < prettyrobots> zzzzzbogus: How would this look in Russian?
16:10 < prettyrobots> usage: git push <options>
16:12 < insin> anyone ever had to bundle punycode with browserify? It works in the browser as-is from its own git repo, so I list it as a depdency, but browserify says 'No wrapper for core module: "punycode"'
16:13 < insin> s/depden/dependen/
16:14 < prettyrobots> zzzzzbogus: использование?
16:15 < prettyrobots> yawnt: usanza?
16:15 < yawnt> prettyrobots: utilizzo
16:15 < prettyrobots> yawnt: Super. Thanks.
16:16 < yawnt> no problem
16:16 < zzzzzbogus> prettyrobots: Heh it's hard to translate. Literally it's Èñïîëüçîâàíèå: push <ïàðàìåòðû>
16:16 < prettyrobots> zzzzzbogus: Do you ever get help messages in Russian or are they mostly untranslated in English?
16:18 < gildean> prettyrobots: in finnish it would be "Käyttö: git push ....."
16:18 < zzzzzbogus> rettyrobots:In localized OSes they are translated. But I only use English Windows and Linux :-\
16:19 < tuhoojabotti> hmm
16:19 < tuhoojabotti> finnish here?
16:19 < zomg> nope
16:19 < strk> so is it a bug for socket.write() _not_ to encode in UTF8 when sending strings ?
16:19 < prettyrobots> gildean: Capitol K?
16:20 < tuhoojabotti> käyttö = usage
16:20 < gildean> well, no
16:20 < zomg> tuhoojabotti: sounds about right
16:20 < tuhoojabotti> finnish sucks, though. :P
16:20 < zomg> except for cursing
16:20 < zomg> perkeleen perkele
16:20 < zomg> :D
16:21 < tuhoojabotti> saatana
16:21 < gildean> vittu
16:21 < tuhoojabotti> Ei.
16:21 < gildean> kyllä
16:21 < tuhoojabotti> Huono sana.
16:21 < zomg> ime dikkiä vitun homonaama :D
16:21 < zomg> Okay I'll stop now
16:21 < zomg> lol
16:21 < yawnt> HOLY CRAP FINNISH EVERYWHERE
16:21 < tuhoojabotti> Yeah, pretty much
16:22 < yawnt> you planning on conquering europe arent you
16:22 < zzzzzbogus> Lol I just tried to set russian locale in Linux and man --help now says:
16:22 < zzzzzbogus> Usage: man [OPTION...] [ÑÅÊÖÈß] ÑÒÐÀÍÈÖÀ...
16:23 < zzzzzbogus> so Usage is untranslated 
16:23 < zzzzzbogus> but ls --help says
16:23 < zzzzzbogus> Èñïîëüçîâàíèå: ls [ÊËÞ×]… [ÔÀÉË]…
16:24 < zzzzzbogus> So 'Èñïîëüçîâàíèå' is fine for 'Usage'
16:25 < upb> your charset is fucked up
16:26 < zzzzzbogus> :( I only have a crappy IRC client in Emule
16:28 < prettyrobots> zzzzzbogus: I can't get the alphabet. Can you email it to alan@prettyrobots.com please?
16:41 < chimeracoder> I'm not sure if this is even the best approach, but I'm trying to do some selenium tests, so I'm using soda within Mocha - however, since .end() processes the error in a callback, the test appears to pass before crashing Mocha altogether
16:41 < chimeracoder> http://pastebin.com/aweNzNhK#
16:41 < chimeracoder> Is there a better way?
16:42 < chimeracoder> (it crashes mocha when run with —wait; otherwise, it appears to pass altogether because the process exists before the error is thrown)
16:43 < tjholowaychuk> chimeracoder you need a function(done){
16:43 < tjholowaychuk> and call done() in there so it waits
16:43 < tjholowaychuk> otherwise mocha thinks it's sync
16:43 < owen1> the docs say that stream.pipe emulates the cat command - process.stdin.resume(); process.stdin.pipe(process.stdout);   can someone elaborate what does it mean?
16:44 < chimeracoder> Hmm, maybe I'm confused about the way this works - the callback for .testComplete should accept done as a parameter, and then I call done within thatfunction?
16:45 < chimeracoder> oh wait, you're saying that should be passed to the entire test, so it('should foo', function(done) {..})
16:46 < tjholowaychuk> chimeracoder yup
16:46 < tjholowaychuk> done() to end it
16:47 < chimeracoder> is done() mocha-specific, or is that a Node.js function?
16:47  * chimeracoder is new to Node
16:48 < tjholowaychuk> chimeracoder node uses callbacks all over the place
16:48 < chimeracoder> haha, no, I've gotten that
16:49 < chimeracoder> but most other places I haven't needed to call a function like done(); explicitly to send the message
16:49 < tjholowaychuk> oh you will
16:49 < chimeracoder> so now I'm just getting confused, since I've been learning pretty much the entire node.js stack at the same time
16:49 < chimeracoder> okay
16:49 < tjholowaychuk> no shortage of that
16:58 < timkuijsten1> where can i change the "access log" format of restify?
16:59 < rwaldron> isaacs yt?
17:03 < nooga> hi
17:03 < nooga> I'm having strange problem with Mongoose
17:03 < nooga> anyone can help with that?
17:03 < aheckmann> nooga: whats up
17:04 < nooga> ok, let me prepare the sources in a nopaste
17:14 < nooga> sorry, I was disconnected
17:15 < nooga> what part of my Mongoose question did you see? ;F
17:17 < nooga> aheckmann?
17:17 < aheckmann> nooga: i didn't see any of it
17:17 < nooga> ok
17:18 < nooga> so basically I've got this: https://gist.github.com/3084757
17:19 < nooga> and I get an exception: TypeError: Object function model() {...} has no method 'getById' where the line 29 is
17:19 < nooga> and it's weird because I use such constructions all the time with models different than Catgeory and it seems to work
17:20 < nooga> I wonder if it's because of mongoose.model() misuse
17:20 < nooga> if there's any
17:20 < aheckmann> nooga: i don't see `getById` declared anywhere
17:21 < aheckmann> nooga: should that be findById?
17:21 < nooga> um
17:21 < nooga> yeah
17:22 < nooga> I just realized this after you pointed that you don't see getById anywhere
17:22 < nooga> :D
17:22 < aheckmann> :D
17:22 < nooga> i guess i'm tired
17:22 < aheckmann> nooga: haha no problem. 
17:22 < nooga> thanks :D
17:22 < aheckmann> anytime
17:22 < kenperkins> we all make those mistakes
17:22 < aheckmann> yup
17:22 < kenperkins> the benefits of a dynamic langauge
17:23 < kenperkins> (or lack of compile time checks)
17:23 < aheckmann> nodejs irc is my compiler 
17:26 < nooga> hehe
17:28 < nooga> now I got this: TypeError: Object #<Promise> has no method 'findById'
17:28 < nooga> in the same line
17:32 < nooga> what's that?
17:38 < aheckmann> nooga: show the code please
17:39 < prettyrobots> zzzzzbogus: It would be great if you could email the Russian word for usage you found. alan@prettyrobots.com
17:39 < prettyrobots> zzzzzbogus: After having gone to the trouble to see how its done. I can't use the IRC because the charset is wrong.
17:41 < voodootikigod> brianc: you around?
17:42 < brianc> voodootikigod: yeah
17:42 < brianc> voodootikigod: actually about to take off
17:42 < brianc> voodootikigod: wanna email me about it? brian.m.carlson@gmail.com
17:42 < voodootikigod> brianc: all good, just wondering if there was anything I could help with to get node-postgres on 0.8
17:42 < voodootikigod> will email you
17:42 < brianc> voodootikigod: it's on 0.8 now
17:42 < voodootikigod> still getting the segfaults
17:43 < voodootikigod> for native
17:43 < nooga> aheckmann: https://gist.github.com/3084757 line 31
17:43 < brianc> voodootikigod: ah weird email me and I can take a look at it this evening <3  I think I might know an issue still outstanding. "booo" has a pull request pending on it i believe
17:43 < voodootikigod> uea
17:43 < voodootikigod> yea
17:43 < voodootikigod> i nudged the other day
17:43 < voodootikigod> just wanted to offer more help
17:43 < nooga> aheckmann: and the exception is TypeError: Object #<Promise> has no method 'findById' this time
17:43 < voodootikigod> know the 'swamped with other stuff, can't get to OSS' realm
17:49 < aheckmann> nooga: somewhere you set Category to the return value of executing a query
17:50 < nooga> uh
17:50 < aheckmann> nooga: Category = someModel.find(callback)
17:50 < nooga> okay...  that'd be sane
17:50 < nooga> let me check
17:55 < prettyrobots> tuhoojabotti: One more example, please. How do you say 'Good morning' in Finnish?
17:55 < nooga> aheckmann: thanks again :D
17:55 < nooga> what a mess
17:56 < tuhoojabotti> prettyrobots: "Huomenta"
17:56 < tuhoojabotti> or
17:56 < tuhoojabotti> "Hyvää huomenta"
17:57 < prettyrobots> tuhoojabotti: Excellent. Thank you.
17:57 < kenperkins> anyone here who contributes to requirejs?
18:07 <@maxogden> kenperkins: ask tbranyen 
18:09 < undsoft> Hi guys,
18:11 < undsoft> I'm using socket.io and express.js. Are variables defined in main scope of app (outside of any function) persistent among requests?
18:12 < xaq> undsoft: should b
18:12 < russfrank> undsoft: yes
18:12 < undsoft> Thanks. Drives me crazy - somehow it's not.
18:22 < mxweas> what's the best way to serve static files that allows for the content to be modified slightly?
18:22 < mxweas> ie, I don't want to load the whole file into memory, but it would be nice to be passed chunks that I can parse before sending off to the client
18:24 < kenperkins> tbranyen: around
18:25 < tbranyen> kenperkins: yeah, whats up mang?
18:26 < kenperkins> just was trying to digest some requirejs stuff, can I take offline?
18:26 <@maxogden> tbranyen: what is your hourly support fee
18:26 < txm> Hey - I'm using node-mysql, reading a (tab)csv file, splitting on \t, grabbing the email column and then creating a query - only no rows are matched (returning []).  If I explicity set email ='me' then it works.  is there a way to get node-mysql to show me the sql it is creating?
18:27 < tbranyen> maxogden: one beverage per hour
18:27 < felixge> txm: var query = connection.query(...);
18:27 < tbranyen> or you can continually feed me
18:27 < felixge> console.log(query.sql)
18:27 < tbranyen> kenperkins: sure
18:27 < jacksonmills> Hey: having trouble installing grunt. Wondering if someone can help. Everytime I install I get errors similar to this : http://pastie.org/4233040, but with the files being different, generally.
18:27 < jacksonmills> This only happens with grunt, for the most part, I can install other packages just fine.
18:27 < rcaskey> anyone here using a js workflow package they are happy with?
18:28 < jacksonmills> I had the troubles on 6.12 and then updated to 6.18
18:28 < jacksonmills> same issue.
18:30 < txm> thanks felixge :) logs undefined :( http://pastebin.com/WNa36nYZ -- currently on git/development, but also tried on lastest/alpha/stable
18:31 < txm> typeof email == string
18:31 < felixge> txm: if you had used the code I suggested, it would work : )
18:32 < felixge> the query is the return value of the query() function
18:32 < felixge> not an argument of the callback
18:32 < txm> oh, that code :)
18:32 < felixge> that being said, you can also do console.log(this.sql) inside the callback
18:34 < txm> so the sql looks good .. I'm not missing something nooblike with this new fangled event-driven world am I?
18:40 < prettyrobots> tuhoojabotti: Thank you. https://github.com/bigeasy/arguable#internationalization
18:41 < bradleymeck> whats user 501 doing getting everything chowned to him, dont have a user with that uid...
18:41 < tuhoojabotti> prettyrobots: I could use some translators too. :P
18:43 < prettyrobots> tuhoojabotti: Basics? Like so? https://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/es-MX.yml
18:43 < jacksonmills> any idea why npm is using lstat when its not on my box? any idea why OSX has a man page for lstat but no bin?
18:43 < tuhoojabotti> prettyrobots: https://github.com/tuhoojabotti/Chromerly-URL-shortener/tree/master/_locales
18:44 < tuhoojabotti> only english and finnish are up to date
18:50 < DTrejo> if I make a worker process in node, and require something from it, the worker's "require" return a different version of my singleton module?
18:50 < DTrejo> *will the
18:50  * DTrejo goes off to try it
18:50 < tuhoojabotti> no
18:50 < DTrejo> okay
18:50 < DTrejo> thanks
18:50 < tuhoojabotti> require is global
18:50 < prettyrobots> tuhoojabotti: You have quite a few languages already. Indonesian. 
18:50 < tuhoojabotti> and so is it's cache
18:51 < DTrejo> I have a module I want to test and make multiple instances of, but it is written badly
18:51 < DTrejo> and I don't want to change it just for the tests
18:51 < tuhoojabotti> prettyrobots: Haha, yeah. Some are from friends and some random people from irc.
18:51 < jacksonmills> ah. ok. well , it appears i needed to clear my npm cache
18:51 < DTrejo> tuhoojabotti: if I delete the cache will it work?
18:51 < tuhoojabotti> prettyrobots: But they are lazy to update them. .P
18:51 < DTrejo> require the singleton module once, then delete cache, then require it again
18:51 < jacksonmills> DTrejo: why not ?
18:51 < tuhoojabotti> DTrejo: Then it will reload the module.
18:52 < DTrejo> sounds like that will solve my problem
18:52 < DTrejo> I think
18:52 < prettyrobots> Thanks for the help. Two languages is a good start. We'll see if anyone uses it.
18:58 < prettyrobots> tuhoojabotti: Final note: https://github.com/bigeasy/arguable#contributors
18:59 < Dofs> Hi all, newbie question. I have installed node on my Mac and setup express.js, but where can I see the console.log messages from my server.js file?
19:00 < Dofs> should it be in my terminal (where I started the node process)?
19:01 < Bonuspunkt> has anyone else noticed any problem with node 0.8 piping an http.ClientResponse to a http.ServerResponse? im forwarding a couchdb view with ~6500 rows it breaks at ~6400
19:02 < Bonuspunkt> 0.6 works fine
19:04 < bradleymeck> has anyone seen node-waf configure build say `cannot find name for user ID 501`
19:05 < EhevuTov> Dofs, let me check what mine does. I think I have mine set to only output in DEV mode
19:06 < Dofs> Doh, didn't request the right url, sorry
19:06 < Dofs> worked fine
19:09 < Dofs> Is there a way by using http.get that I can retrieve the html content of an external site?
19:11 < Bonuspunkt> Dofs http://nodejs.org/docs/latest/api/http.html#http_http_get_options_callback
19:12 < Bonuspunkt> you could also use the options which is listet at http.request
19:14 <@maxogden> #protip npm install request
19:15 < eddyb> http://code.google.com/p/traceur-compiler/source/browse/#git%2Ftest%2Ffeature look on the left o_O
19:16 < eddyb> someone needs to write a module that allows you to run "harmony" code via traceur, under node :D
19:16 < TimeTurner> anyone successful in installing ubuntu or linux on ios to run node/other linux apps?
19:17 < eddyb> TimeTurner: wow, that was actually a good mention of ubuntu. I like that "or linux", btw ;)
19:17 < TimeTurner> ubuntu or any other distro of linux
19:18 < TimeTurner> I should have just said linux
19:18 < eddyb> TimeTurner: I wasn't sarcastic
19:18 < TimeTurner> lol ok
19:18 < eddyb> or that :)
19:18 < eddyb> anyway, something like placing "#!/usr/bin/env node-traceur" at the start of the file would be really cool
19:19 < eddyb> wait, are the guys in the topic gif humping?
19:19 < drudge\work> omg nodjitsu
19:23 < Phoenixz> I have a string _r_lkj234r and I need that converted to /r/lkj234r, so I do '_r_lkj234r'.replace('_', '/'); and I end up with /r_lkj234r.... Should replace not replace all instances??
19:24 < Phoenixz> On node v0.8
19:25 < Bonuspunkt> Phoenixz '_r_lkj234r'.replace(/_/g, '/')
19:44 < cjm> if you had any issues listening to nodeup yesterday, everything should be fixed -- http://news.ycombinator.com/item?id=4225662
20:08 < dshaw_> ++
20:08 < wankdanker> any optimist users know if there is a way to disable the dot notation processing without hacking the source?
20:24 < TimothyFitz> I'm trying to automatically clean up a pidfile when my server exits, but when I ctrl-c the server none of my event handlers on process get called. I'm listening for 'exit', 'uncaughtException' and 'SIGTERM'.
20:26 < NickMessing> hello, I just tried to compile Node.JS on openSUSE 12.2 beta 2 and now when I try to execute "node" i get "bash: /usr/bin/node: No such file or directory" error :(
20:27 < NickMessing> so, someone can help me? (when I enter not existing command I get "If 'command name' is not a typo you can use command-not-found to.....")
20:29 < NickMessing> hello, I just tried to compile Node.JS on openSUSE 12.2 beta 2 and now when I try to execute "node" i get "bash: /usr/bin/node: No such file or directory" error :(
20:29 < NickMessing> so, someone can help me? (when I enter not existing command I get "If 'command name' is not a typo you can use command-not-found to.....")
20:33 < mxweas> TimothyFitz: ctrl-c will call SIGINT
20:34 < TimothyFitz> mxweas: and not process.on('EXIT', ..) ?
20:34 < mxweas> no idea, I'm just speaking out of catching SIGINT in c
20:34 < mxweas> not sure if node already intercepts SIGINT and sugar coats it for you
20:34 < TimothyFitz> If I handle SIGINT, then node.js doesn't shut down any more. I could call process.exit() but it felt like I was going in the wrong direction.
20:35 < mxweas> ctrl-c / SIGINT is to interrupt an application. If you're going to override the interrupt, usually you're stopping it from happening. If you want the interrupt to continue, you need to handle stopping your application yourself
20:35 < VeXii> im tying to build node 0.8.1 but i get a error "File "./configure", line 183" when im running ./configure
20:36 < VeXii> its doing it on all versions from 0.6.19 and up
20:36 < mxweas> TimothyFitz: ie, if you didn't stop it, your application would get killed before your code would run.
20:36 < VeXii> and i realy wanner from 0.6.18
20:37 < TimothyFitz> mxweas: yeah, what I really want is atexit, to clean up this pidfile :(
20:37 < mxweas> then do something to trigger exit. You shouldn't be stopping a server with SIGINT anyway.
20:37 < mxweas> I mean in development or with a single instance of node it makes sense
20:38 < mxweas> but in production, you'll want to tell your server to cleanly shut down. You're not going to want to interrupt it.
20:38 < VeXii> is there maybe a a channel for the configure tool where i need to ask?
20:38 < mxweas> VeXii: what's on line 183?
20:38 < VeXii> just 3 ''' signs
20:39 < othiym23> VeXii: which pythons does your system have installed?
20:39 < VeXii> its the end of a print statement 
20:39 < graeme_f> hey guys! i've been looking at the repo for https://new.npmjs.org/ and can't find the tests! is everything that's worth testing in modules, or..?
20:39 < VeXii> i got python 2.7 and 3.x 
20:39 < VeXii> done the exports PYTHON=<python2 path>
20:39 < othiym23> VeXii: when you run python2.7 --version, what does it return?
20:39 < othiym23> and what do you get when you run python --version?
20:40 < TimothyFitz> mxweas: I don't really want my code that writes and removes pidfiles to own the ctrl-c behavior though. Looks like that's what I have to do in node. (In the comparable twisted-python or gunicorn-django apps, all I have to have is atexit(cleanup); it's possible V8 doesn't make running code in an atexit handler easy though)
20:40 < mxweas> TimothyFitz: make a cron job that cleans them up?
20:40 < VeXii> python2.7 returns 2.7.3 and python returns 3.2.3
20:41 < mxweas> TimothyFitz: jk, just realized what you're doing.
20:41 < othiym23> TimothyFitz: if you write your atexit handler as a function that's passed a callback, you can do a SIGINT handler that does the atexit stuff and then the callback just calls process.exit()
20:41 < othiym23> that keeps it cleanly factored, at least
20:41 < mxweas> ^^^
20:42 < othiym23> VeXii: you could try putting a link to python2.7 from a local bin directory, put that bin directory at the head of your PATH in the shell where you want to build Node, and try that
20:42 < othiym23> gyp doesn't work with Python3
20:42 < TimothyFitz> othiym23: does it? this is (theoretically) in a library. If the code using my library adds a SIGINT handler that doesn't call process.exit, won't it magically still exit if they include my library?
20:42 < rjd324> Looking for a node developer (located in US) for CTO position for a new tech startup. PM if interested.
20:43 < alex4nder> rjd324: does it come with dental?
20:43 < TimothyFitz> also if SIGINT is just calling process.exit(), why isn't my process.on('exit', …) code being called? That still feels like a bug to me (either in my code or in node; I'm assuming in my code)
20:43 < othiym23> TimothyFitz: the atexit handler doesn't call process.exit by default, it only calls the callback that you pass it from the SIGINT handler
20:43 < othiym23> it's not a bug, it's a conscious design choice
20:43 < othiym23> to shut down the process as fast as possible
20:43 < VeXii> othiym23: sorry im stil new at linux. so i make a symlink from somthing like ~/bin and point it to python 2.7 and then add the symlink to the start of my PATH?
20:44 < othiym23> I've run into this with Node not printing unflushed buffers on exit
20:44 < mxweas> othiym23: docs on this? I'm really curious now to see how node deals with interrupts
20:44 < othiym23> ln -s `which python2.7` ~/bin/python
20:44 < othiym23> then export PATH=~/bin:$PATH
20:44 < othiym23> then try running configure again
20:44 < CIA-93> node: Shigeki Ohtsu master * r76104f3 / lib/timers.js : timer: change new Date to Date.now for performance - http://git.io/zB85Gw
20:44 < othiym23> mxweas: the sauce? ;)
20:45 < TimothyFitz> othiym23: so process.on('SIGINT', function () { process.exit(0); }); would be a change in behavior from the default; specifically that the exit handlers will get called if I do that?
20:45 < VeXii> just wanted to make sure i understod it right :D
20:45 < othiym23> TimothyFitz: nope!
20:45 < othiym23> TimothyFitz: process.on('SIGINT', function () { mylibrary.atexit(function () { process.exit(); }); });
20:46 < kylefarris> I'm using node-mysql and I was wondering if there is a way to get the sql that was executed as a string for debugging purposes... any ideas?
20:46 < TimothyFitz> othiym23: so what is process.on('exit', …) for and when would it be called?
20:46 < VeXii> othiym23 woow it worked :O
20:46 < othiym23> TimothyFitz: on 'exit' is for normal termination
20:46 < whitman> kylefarris, are you using prepared statements?
20:46 < VeXii> thanks ^^ i come back and yell when im done installing
20:46 < kylefarris> yeah
20:46 < othiym23> VeXii: we've been seeing a bunch of this lately ;)
20:46 < kylefarris> that's why I ask actually
20:46 < mxweas> othiym23: ?
20:47 < othiym23> mxweas: the source ;)
20:47 < whitman> kylefarris, in that case no, because the query that is run doesn't exist as a string.  The query first gets prepared and then the params are sent separately.
20:47 < VeXii> somone shod update the wiki :P
20:48 < othiym23> probably!
20:48 < kylefarris> whitman, that sucks
20:48 < mxweas> othiym23: fair 'nuff. Was just curious if someone had documented it a little.
20:49 < kylefarris> thanks!
20:49 < whitman> kylefarris, not really, it prevents injection by not concatenting things together into a string.
20:49  * mxweas should be working.
20:49 < mxweas> I'll check the source later
20:49 < TimothyFitz> othiym23: Thanks, sounds like I have to install a bunch of signal handlers to clean up this file (a js atexit signal would be awesome instead)
20:49 < kylefarris> whitman, yeah, I definitely get that--it's the reason I'm using it in the first place. I suppose I could see it in some mysql logs or something
20:49 < phillyDesignr> any mongoose people on here feel like given me a hand?
20:50 < whitman> kylefarris, well, you know the query you're sending and you know the args, so you could build it yourself.
20:51 < phillyDesignr> say i had catIds = an array of ids then i wanted to update docs based on those ids how would i extend this to update said docs - Category.find().where("_id").in(catIDs).exec (err,docs) ->
20:52 < kylefarris> whitman, yeah, I was just wondering if the prepared statements were working correctly because I'm using an array and an IN statement like: query("SELECT * FROM notifications WHERE active = 1 AND (show_date IS NULL OR show_date < time()) AND user_id in (?)",[[1,2,3,4]])
20:53 < kylefarris> I mean, that's more-or-less what the query is
20:53 < kylefarris> just wanted to make sure it was doing "... IN(1,2,3,4)"
20:55 < whitman> kylefarris, according to the docs it should work and as long as it returns the same results as running the same query from the command line then it's all good.
20:56 < kylefarris> whitman, yeah, definitely. Thanks for your help. I'm probably just doing something stupid because I'm not getting the results I'd expect.
20:56 < genio> Although I'd caution you to test the case where you have zero or one items in your array
20:57 < whitman> genio, IN() will work with one item, but yes, zero items would be problematic.
20:58 < genio> whitman: I knew zero was problematic, I couldn't remember if 1 was, so I threw it in there. :)
20:58 < kylefarris> genio, good point but mine will always have at least one item as it's static and all other elements are pushed on to it
20:59 < whitman> genio, one works fine, possibly a *bit* slower than doing a WHERE id = ? but not anything to worry about.
20:59 < qubit[01]> I'm sending alot of json out of my app using express, any recommendations on how to minify the json ?
21:00 < russfrank> are there videos from nodeconf available anywhere
21:00 < qubit[01]> there was a nodeconf ?
21:00 < genio> kylefarris: You get a difference between query( "foo IN ?", some_array )  and query( "foo IN ?", some_array.join(",") )  ?
21:01 < TooTallNate> russfrank: not yet - give it a couple months
21:01 < russfrank> :(
21:01 < TooTallNate> qubit[01]: but of course :)
21:21 < katom> g'evening.
21:22 < katom> can anybody help my, i'm trying to xc node.js on my raspberry pi and I'm getting the error that armv7==1 is not defined.
21:23 < dob_> Did somebody try to use nodemailer with a jade template? 
21:23 < VeXii> can i override the node classes? like if i a module require("fs") or http can i make sure thay get my version insted? (i be requiring or forking the modules to start) i know it sounds stupid :p
21:24 < othiym23> aw, where did nodeup go?
21:24 < othiym23> I was like halfway through the NodeCOnf roundup and now I'm looking at Nodejitsu's pretty yet minimal 404 page
21:25 < othiym23> VeXii: you totally can (just read the source for lib/module.js), but why would you want to do that?
21:27 < VeXii> well i where thinking of making a small private cloude for streaming music(legal music whith login etc) and a  ace ide to "test" code.
21:28 < aroman> othiym23: it's back for me
21:28 < VeXii> but i wanner keep files in a mongo db. but it wanner write the code so it can work on a normal FS aswell
21:28 < othiym23> aroman: thanks for the heads up, back for me too
21:28 < VeXii> kind of a virtual file system or somthing like that
21:28 < jagwire> Hello, is it at all possible to execute node.js capabilities in a different runtime environment?
21:28 < othiym23> VeXii: OK, so that sounds like a runtime configuration option
21:29 < othiym23> jagwire: depends on what you mean
21:29 < jagwire> For example, let's say I wanted to use Java's affordances for executing javascript code.
21:29 < VeXii> well giving the option of chaning where the site reads files from be the deam
21:29 < othiym23> jagwire: it's not as simple as dropping the Node libraries into Rhino and doin' stuff, no
21:30 < jagwire> Aw, that's too bad. Thanks othiym23 
21:30 < othiym23> jagwire: but you can take chunks of Node and use them, like EventEmitter, and maybe you could wrap some of the streamy bits up in browserify and run it in Rhino
21:30 < othiym23> VeXii: still sounds like a configuration option ;)
21:30 < VeXii> and maybe (years to come) expand it so it works whith java etc (as im going to need it when i start school in 1-2 years)
21:31 < VeXii> and (La)Tex :D
21:31 < othiym23> VeXii: I'm picking up what you're laying down, but this seems like a good opportunity to start with the simplest possible case and then alter the architecture to meet whatever your future requirements might me
21:31 < jagwire> Believe it or not, I'm working in a java environment similar to second life. I was looking to use Node for some of the interesting networked scripting pieces. Anyhow, thanks for the prompt help!
21:31 < upb> haha anyway this shouldnt be implemented by overriding a require()
21:32 < upb> @ VeXii 
21:32 < VeXii> well starting whith a node FS to mongo sounds like a dicent first step?
21:32 < othiym23> VeXii: I'm not sure I know what you mean!
21:33 < VeXii> never mind then :p
21:33 < upb> you could implement different storage classes that have the same interface
21:33 < upb> and then use the configured one
21:34 < upb> has nothing to do with 'overriding require'
21:34 < VeXii> upb. but i wanner be able to write code that runs out of the box on other servers whith out having the code use the "real" file system on the dev server
21:35 < upb> yes, so you write code that uses the configured storage class
21:36 < VeXii> kind of like reading it from a config file ? :>
21:36 < upb> well does it really matter where the configuration option is ?
21:36 < VeXii> true true
21:39 < VeXii> but lets say im working on a site for XX and i just want them to be able to fork and run whith out changing my crazy "fs reads from a DB and executes in a nother context" where context can be php JVM latex or node?
21:39 < pancake> i'm trying to debug a nodejs program, with 'node debug foo.js'
21:39 < othiym23> VeXii: the only reason I bring it up is because it's a lot easier to work with the grain of Node.js than going against it, and rewriting the module system is definitely going against the grain
21:40 < pancake> but im unable to see where the program stops 
21:40 < VeXii> just thinking about how to implament somthing like this. i dont think i be able to write somthing like it but its always fun to try whith a dream :p
21:41 < prettyrobots> Anyone know what to make of "%SystemRoot%" in Windows?
21:41 < prettyrobots> How to resolve that into an actual directory.
21:41 < VeXii> but yeah i remimber youre words ofc. first thing is having a ace client that can update it self and restart hehe
21:42 < prettyrobots> Nevermind. It's an environment variabobble.
21:42 < othiym23> prettyrobots: yeah that
21:42 < othiym23> took too long to type that
21:43 < prettyrobots> othiym23: Thank you.
21:46 < pancake> "list" command in debugger shows [Function]
21:48 < othiym23> pancake: try function.toString()
21:49 < othiym23> if it's already been JITted, you won't get the function source
22:21 < KingDosser> Yay node jitsu is finally open beta!
22:21 < KingDosser> public*
22:57 <@konobi> what happened to the connect router middleware?
22:57 < jergason> It was pulled out into express.
22:58 < tjholowaychuk> express always had its own thing, it was just removed because it had 1/2 the features and there are at least 15 ways i can think of routing so it didnt make sense in core connect
22:59 < tjholowaychuk> im trying to keep questionable things out as much as i can
23:00 <@konobi> tjholowaychuk: so what's the suggested upgrade path?
23:00 < tjholowaychuk> konobi https://github.com/aaronblohowiak/routes.js
23:00 < tjholowaychuk> there are a few npm modules of it published
23:00 <@konobi> ta
23:00 < mxweas> if I'm the first to register for an event. Will I always be the first to be notified of it?
23:02 < mxweas> I have two streams, one read, one write. which I'm using readStream.pipe(writeStream); It works, life is good. However, I want to listen to readStream's 'end' event so I can write one last thing to the write stream before writeStream closes.
23:02 < mxweas> However, pipe registers for the same event so it can close the writeStream.
23:02 < mxweas> thus I want to make sure my code is run before pipe's
23:03 <@isaacs> oh, man, this is so nice:
23:03 <@isaacs> $ npm ls archy -p
23:03 <@isaacs>  /Users/isaacs/dev/js/npm/node_modules/archy
23:03 <@isaacs> $ npm ls promzard
23:03 <@isaacs> npm@1.1.36/Users/isaacs/dev/js/npm
23:03 <@isaacs> └─┬ init-package-json@0.0.4
23:03 <@isaacs>   └── promzard@0.1.5 
23:04 <@isaacs> finally, you can be like, "Why did THAT getting pulled in?"
23:11 < jergason> isaacs: neato. What version is that on?
23:11 <@isaacs> jergason: the one i haven't published yet :)
23:13 < othiym23> isaacs: it would also be super-awesome to add an option to ls to just show the top-level modules (for use with npm ls -g)
23:13 <@isaacs> othiym23: npm ls --depth 0
23:13 < othiym23> sweet!
23:13 <@isaacs> othiym23: or npm ls --depth $n
23:13 <@isaacs> othiym23: it's not as pretty as it could be
23:13 < othiym23> that'll learn me to not keep an eyeball on the manpages
23:14 <@isaacs> spews a lot of "maximum depth reached" mesasges which is silly
23:14 < othiym23> don't care! mostly just looking for a reminder list when I'm moving between versions with nvm
23:14 < othiym23> isaacs: ty
23:16 <@konobi> tjholowaychuk: huh... docs don't do a great job of explain how to use
23:16 < tjholowaychuk> konobi it's pretty much identical to the old router
23:16 < tjholowaychuk> just uses addRoute or something instead of .get() etc
23:17 <@isaacs> maintenance build for you stragglers..
23:17 < CIA-93> node: isaacs v0.6 * rae5a209 / (407 files in 56 dirs): npm: Upgrade to 1.1.37 - http://git.io/Yaiusg
23:17 < CIA-93> node: isaacs v0.6 * r17061d9 / .gitignore : .gitignore: Don't ignore node_modules (breaks npm) - http://git.io/ZRhVOA
23:17 <@isaacs> coming up
23:17 <@konobi> tjholowaychuk: c.router(function(app)...
23:18 < tjholowaychuk> i dont know, i dont use it
23:18 < mikeal> tjholowaychuk: did you see mapleTree?
23:18 < tjholowaychuk> the internals are identical though, just a few different api things
23:18 < tjholowaychuk> mikeal nope
23:18 < mikeal> this dude wrote it after we couldn't integrate director
23:18 < mikeal> and i merged it in to tako
23:18 < mikeal> but it's just a little btree for routes
23:19 < tjholowaychuk> ah
23:19 < mikeal> https://new.npmjs.org/package/mapleTree
23:19 < mikeal> really fast
23:19 < tjholowaychuk> i have a hard time making routing slow enough to warrent that sort of thing
23:19 < tjholowaychuk> personally
23:19 < mikeal> really simple
23:19 < mikeal> it's not the right thing to obsess over
23:19 < mikeal> for sure
23:19 < mikeal> but i wanted to bounce routes.js, as it was not really maintained anymore
23:20 < mikeal> and he wrote this, and it worked, and was fast, so i took it
23:22 < dsirijus> if anyone is using nginx with node.js... how can i get, for instance, subdomain.domain.com/someapp get routed to node.js so everything appears from node.js side as running from root route? including static assets (i'll move those to nginx later on)
23:22 < prettyrobots> Can someone
23:22 < prettyrobots> Can someone point me toward a utility to find unused local variables?
23:23 < tjholowaychuk> mikeal i can see it if you had 3000 routes or something
23:23 < tjholowaychuk> probably bigger problems at that point
23:23 < tjholowaychuk> haha
23:24 < tnorris> dsirijus: check out an example nginx conf I created for my node instances: https://github.com/trevnorris/norrd/blob/master/conf/nginx.conf
23:24 < tnorris> dsirijus: I just open a bunch of socket files in my /tmp folder, then route /some/path to those.
23:24 < prettyrobots> mikeal: mapleTree worked and is fast? Does it also run in the browser?
23:25 < CIA-93> node: isaacs v0.6.20-release * r952e513 / (ChangeLog src/node_version.h): 2012.07.10 Version 0.6.20 (maintenance) - http://git.io/75L3Nw
23:25 < tjholowaychuk> prettyrobots you have serious problems if you need that in the browser :p
23:25 < tjholowaychuk> just sayin
23:25 < dsirijus> tnorris, i could basically replace those sockets with 127.0.0.1:someport?
23:26 < tnorris> dsirijus: yeah, that would work also.
23:26 < prettyrobots> tjholowaychuk: Aren't all the kids doing the routing in the browser thing?
23:26 < tjholowaychuk> yeah but you dont need a btree
23:26 < tnorris> then if you have multiple instance of your node.js app running, nginx will act as a simple load balancer for all requests.
23:27 < insin> looks like it should export fine for browsers. It also imports util and events but never uses them
23:28 < bradleymeck> anyone seen `WARN cannot run in wd` on npm if you curl install?
23:28 < alejandromg> bradleymeck: i did, i tried with sudo and the problem is gone
23:28 < dsirijus> tnorris, i have, say, five apps on one domain.com/appN, and similar on plenty of otherdomain.com/appM
23:29 < prettyrobots> insin: Yeah. I see that.
23:29 < prettyrobots> Concidentally. I was just asking if anyone knew of a find unused variables utility.
23:29 < bradleymeck> unused?
23:29 < dsirijus> tnorris, bah, don't listen to me, i'll play with upstream now, that's a nudge in right direction
23:29 < dsirijus> thanks
23:30 < mxweas> is there an easy way to append header and footer text to all requests automatically?
23:30 < prettyrobots> tjholowaychuk: I don't get the serious problems thing.
23:30 < tnorris> dsirijus: you should be able to use `proxy_pass` for any number of locations specified.
23:30 < insin> possible jshint or jslint (lol Crockford)? I've never been able to get either of them to finish running on my code
23:30 < prettyrobots> bradleymeck: Declared but unused.
23:30 < tjholowaychuk> prettyrobots im just saying you will not need that to have a responsive router
23:30 < insin> s/possible/possibly/
23:30 < tjholowaychuk> aka it will do nothing for you
23:31 < tjholowaychuk> it's like the "omg my template engine is 1000000 ops/s faster than yours" junk
23:31 < dsirijus> tnorris, could this make my life more complicated "app.use(express.static(__dirname + '/public'));"?
23:31 < prettyrobots> tjholowaychuk: Still lost. Won't it match a URL to an action you want take?
23:31 < tjholowaychuk> nvm
23:31 < mxweas> I only want to prepend/append a header/footer on static files. I've looked at extending connect.static, but the bulk of it is in send() which is something I need to modify (cause send() sends content-length headers)
23:32 < mxweas> ie it would be awesome if I could grab all responses, send some data, get an event when .end has been called so I can send another line and update the content-length header.
23:32 < tnorris> dsirijus: hah, yeah. that might. honestly it might be simpler to figure out now how to route all static files through nginx.
23:32 < prettyrobots> tjholowaychuk: omg I don't know what you're on about. I was only asking if it could also be used in the browser.
23:33 < tjholowaychuk> prettyrobots there are lighter solutions for the client
23:33 < tnorris> dsirijus: then you won't have to parse any requests for static files in your node.js app.
23:34 < prettyrobots> tjholowaychuk: I'm looking it it now. The code is 1.74k minified and gzipped.
23:34  * tjholowaychuk gives up
23:34 < tjholowaychuk> micro-opt away
23:34 < dsirijus> tnorris, i have just this here now http://pastie.org/4234470
23:35 < prettyrobots> tjholowaychuk: Yeah, no need for you talk to me. Almost never interested in what you have to say.
23:35 < dsirijus> and it works, but doesn't fetch stylesheets, images and javascripts
23:35 < brianloveswords> buuuuuuurrnnn
23:35 < dsirijus> tnorris, and this is the app.js http://pastie.org/4234476
23:36 < tjholowaychuk> prettyrobots just trying to give you advice! micro-opts never helped anyone
23:36 < tnorris> dsirijus: do all your static files reside in the /public folder?
23:37 < dsirijus> yes
23:37 < brianloveswords> tjholowaychuk think about all of those wasted electrons!
23:37 < prettyrobots> tjholowaychuk: You're being awfully pedantic. I was only asking if it also worked in the browser. I wan't saying ZOMG! I'm going to ROFLSCALE with b-trees.
23:38 < tjholowaychuk> sounded like it
23:38 < tjholowaychuk> cranky :p
23:38 < tnorris> dsirijus: I don't see where you're defining "root" in your nginx.conf. so is /public a subfolder of /ambassadors?
23:38 < othiym23> prettyrobots: the answer is almost always "probably", although there might be some browserify in there
23:38 < dsirijus> no, ambassadors is just a route to index.jade, and public is a folder with all the static files
23:39 < othiym23> unless a module uses native functions or has a compiled extension or whatever, you can use it in the browser
23:39 < prettyrobots> othiym23: From the look of it, there's nothing about the library that is Node.js specific.
23:39 < othiym23> and then question almost immediately becomes "why would you want to?"
23:39 < tjholowaychuk> what othiym23 said
23:39 < tjholowaychuk> that's like asking if express works in the browser
23:39 < tjholowaychuk> it's a bad question to ask
23:40 < othiym23> tjholowaychuk: that's an awesome idea
23:40 < othiym23> just eliminate the server altogether
23:40 < tjholowaychuk> nooo
23:40 < tjholowaychuk> lol
23:40 < othiym23> by putting it in the browser
23:40 < othiym23> Lea Varou-style
23:40 < tnorris> dsirijus: ok, then add a location of "/public", then add a "root" entry that points to the public folder on the file system.
23:40 < pianoroy> Anyone else having trouble building Node 0.8 on RHEL 6?
23:40 < insin> depends on what the module does, routers could be useful in the browser, servers not so much
23:40 < othiym23> pianoroy: failing on configure?
23:41 < othiym23> insin: everything written in JavaScript is equally useful everywhere at all times!
23:41 < dsirijus> tnorris, and that ends up with nginx serving static files... great
23:41 < dsirijus> it's actually as it's supposed to work!
23:41 < dsirijus> :)
23:41 < pianoroy> othiym: no, make install fails with "pure virtual function call ..."
23:41 < prettyrobots> othiym23: Routing is the browser is not a thing?
23:41 < bradleymeck> isaacs: "path.basename(wd) !== pkg.name" must be true if you dont set unsafe-perm? is there a reason?
23:41 < bradleymeck> for npm*
23:42 < pianoroy> othiym23: no, make install fails with "pure virtual function call ..."
23:42 < tnorris> dsirijus: cool. let me know if you have any other issues with that.
23:42 <@isaacs> bradleymeck: sorry, the booleans there are confusing me..
23:42 < othiym23> pianoroy: oh dang, other people have seen that but I forget what the fix is and piscesaureus and bnoordhuis aren't around right now
23:42 < dsirijus> tnorris, so location /public {}
23:42 < dsirijus> ?
23:42 < dsirijus> as in empty?
23:42 < othiym23> isaacs: do you know what the fix is for that "pure virtual function call" build failure is?
23:42 <@isaacs> bradleymeck: so, the folder name must be === pkg.name if you DO set unsafe-perm?
23:43 < bnoordhuis> othiym23: make CFLAGS+=-O2 CXXFLAGS+=-O2
23:43 < tnorris> dsirijus: add an entry of "root" that points to the location of your public folder on the file system.
23:43 < othiym23> prettyrobots: routers in the browser are totally a thing
23:43 < bradleymeck> isaacs: package.json's name must match current basename of wd if you do not set unsafe-perm or it gets angry, if you set unsafe perm the name does not have to match
23:43 < othiym23> bnoordhuis: ohai bnoordhuis I didn't see you there without your +o on
23:43 < bnoordhuis> othiym23: i'm in stealth mode :)
23:43 < prettyrobots> othiym23: Okay, so I don't understand why the next question is "why would you want too?"
23:43 < othiym23> prettyrobots: but there are a bunch of client-side in-browser routers out there already that'll do the job
23:43 < tjholowaychuk> prettyrobots because it makes no sense
23:44 < bradleymeck> https://github.com/isaacs/npm/blame/master/lib/utils/lifecycle.js#L44
23:44 <@isaacs> othiym23: https://github.com/joyent/node/issues/3675
23:44 < tjholowaychuk> 0
23:44 < bnoordhuis> pianoroy: what version of gcc is it?
23:44 < othiym23> that are, like, optimized for use with things like Backbone or Spine or whatever
23:44 <@isaacs> bradleymeck: not sure why it has to do with unsafe-perm
23:44 < othiym23> isaacs: ty again
23:44 <@isaacs> othiym23: we need to fix it properly, but that contains a workaround
23:44 < prettyrobots> othiym23: Please suggest one. Seriously, please. The only reason I chimed in is because "Find client side router" is somewhere on my to do list.
23:45 < bradleymeck> isaacs: i can set unsafe-perm i guess and use sudo -u for now to work around
23:45 < pianoroy> bnoordhuis: it's running gcc 4.4.6
23:45 < tjholowaychuk> prettyrobots there are many that size or smaller, with more features, and less micro-optimizations
23:45 < prettyrobots> I here I see folks talking about a router, and I say, oh does it work on the client side, and that' some powerfully stupid question.
23:45 < prettyrobots> tjholowaychuk: By, micro-optimizations, you mean the tree based searching?
23:46 < othiym23> prettyrobots: sticking J Random Node Library into the browser is a great idea when that functionality doesn't already exist in the browser ecosystem, but I guess I'd rather save browserify for ridiculous Macgyver nonsense like mashing up socket.io and mux-demux a la maxogden 
23:46 < tjholowaychuk> prettyrobots yeah
23:46 < bnoordhuis> pianoroy: x86_64 i wager?
23:46 < tjholowaychuk> there's no sense in using that on the client ever
23:46 < pianoroy> bnoordhuis: Yes
23:46 < prettyrobots> So, others forgo-tree based searching, do a linear search, but have a much richer language for expressing pattern matching.
23:46 <@isaacs> bradleymeck: why do you want to run scripts in non-package dirs?
23:47 < bnoordhuis> pianoroy: compiling with -O2 or -fno-inline-functions or -fno-function-sections will fix it
23:47 <@isaacs> bradleymeck: or, put another way, can you tell me what yoer' trying to do that led you to run into this?
23:47 < othiym23> prettyrobots: among others, Backbone has a pretty OK router built in
23:47 < dsirijus> tnorris, so i have this (non-functioning) now http://pastie.org/4234535
23:47 < bradleymeck> isaacs: i just do a straight pack untar and get package/ "package" != package.json's name, so i could rename or i could sudo -u
23:47 < tjholowaychuk> backbone itself is the size of that routing lib haha
23:47 < dsirijus> it fails to get statics
23:48 <@isaacs> bradleymeck: "straight pack untar and get package/"?
23:48 < VeXii> pianoroy: in my experince it might be somthing whith youre python version
23:48 <@isaacs> bradleymeck: what is "get package/" mean?
23:48 < bradleymeck> isaacs: ill write a gist, sec
23:48 < tnorris> dsirijus: check your error log. I'm willing to bet that they don't have the correct file permissions.
23:48 < dsirijus> tnorris, doesn't nginx run under root?
23:49 < tnorris> dsirijus: what system you running?
23:49 < dsirijus> ubuntu 12.04 server
23:49 < pianoroy> bnoordhuis: I just ran `make CFLAGS+=-O2 CSSFLAGS+=-O2` like you mentioned earlier... no problems yet...
23:49 < bnoordhuis> pianoroy: CXXFLAGS
23:49 < VeXii> old tell... whernt scrolled down
23:49 < tnorris> dsirijus: the main process does, but the child worker processes run as www-data.
23:50 < pianoroy> bnoordhuis: yes, sorry mistyped I ran the right one
23:50 < tnorris> dsirijus: run the following on your command line: `ps faux | grep ningx`
23:50 < tnorris> you should see what I mean.
23:50 < dsirijus> www-data
23:50 < dsirijus> yeah
23:51 < dsirijus> the main reason i've switched to this workflow is not to meddle with stupid permissions
23:51 < dsirijus> actually, no
23:51 < dsirijus> it works
23:51 < dsirijus> !
23:51 < tnorris> ... wasn't expecting that.
23:51 < pianoroy> VeXii: running python 2.6.6... I don't expect trouble
23:51 < dsirijus> tnorris, i've just edited 'location /ambassadors' to 'location /' in nginx
23:52 < pianoroy> bnoordhuis: thanks for the help, much appreciated
23:52 < bnoordhuis> pianoroy: my pleasure :)
23:52 < othiym23> VeXii: the Python issue is why I asked pianoroy if his configure crashed out -- failing on compile is a different issue ;)
23:52 < tnorris> dsirijus: ah, cool. so it's working as you wanted?
23:52 < dsirijus> tnorris, and i'm not in www-data group
23:52 < dsirijus> yes
23:53 < dsirijus> well, not EXACTLY as i wanted, but it will have to do. for the rest, i'll take time and rtfm
23:53 < tnorris> dsirijus: heh, sounds good.
23:53 < dsirijus> thanks
23:53 < bradleymeck> isaacs: basic workflow : https://gist.github.com/3087026
23:54 < dsirijus> deadline at 8AM, and it's 2AM
23:54 < tnorris> dsirijus: np. and good luck.
23:54 < mmalecki> dsirijus: that'll happen. good luck
23:55 < dsirijus> mmalecki, sarcasm?
23:55 <@isaacs> bradleymeck: seems like that's a dum restriction..
23:55 < mmalecki> dsirijus: not at all
23:55 < dsirijus> :D
23:55 < bradleymeck> isaacs: workaround isnt bad, just wanted insight
23:55 < pianoroy> othiym23: thanks for fielding my q, much appreciated
23:55 < mmalecki> dsirijus: I work at a startup, I know few things about working at 2 AM :)
23:55 < dsirijus> mmalecki, well there's this issue of not sleeping last night
23:55 < othiym23> pianoroy: np
23:56 < dsirijus> well, 2 hours is hardly sleeping
23:56 < mmalecki> dsirijus: I know few things about that too. epic sprints, eh?
23:56 <@isaacs> bradleymeck: that's some hairy code that should be split out into a separate module.
23:56 <@isaacs> bradleymeck: so i'm gonna pass on fixing it right now
23:56 < bradleymeck> isaacs sure
23:56 <@isaacs> bradleymeck: but you have a good point.  i validate your confusion and frustration.
23:56 <@isaacs> :)
23:56 < dsirijus> mmalecki, i'm trying to remove those from my life, unless i'm doing something on my own
23:56 < bradleymeck> isaacs: frustration == 0 when a workaround is easy
23:57 <@isaacs> 0.1 maybe :)
23:57 < SubStack> split everything into separate modules
23:57 < SubStack> pollute the fuck out of the npm key/value store
23:57 <@isaacs> SubStack: :D
23:57 <@isaacs> SubStack: it's not pollution when flowers grow
23:58 < insin> turning npm into a function distribution service :)
23:58 < SubStack> flowers grow in landfills too
23:58 < bradleymeck> build service for npm would be killer
--- Log closed Wed Jul 11 00:00:50 2012
