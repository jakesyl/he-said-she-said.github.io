--- Log opened Wed Jul 03 00:00:23 2013
00:11 < EaterOfCorpses> fyi readlineInterface question bugs in Windows when you put a newline in it: when you push up arrow the text before the newline will be repeated
00:16 <@isaacbw> hello beautiful
00:16 <@isaacbw> bello heautiful
00:18 < EaterOfCorpses> hello 
00:22 < SpNg> so many template engines to choose fromâ€¦ is there a general love for one?
00:22 < Stumbler> Any quick tips on what libraries I should look at if I'm getting ready to write a LOT of soap related code?
00:27 < EaterOfCorpses> SpNg: I mostly take swig its nice and leigthweight
00:28 < Beg> for everyday I use nodejs. I just love it more and more.
00:29 < SpNg> EaterOfCorpses: that looks rally good. I was also looking at Mustache, but this looks pretty straightforward
00:30 < wyled> angular templates
00:30 < EaterOfCorpses> SpNg: mustach is quite intresting but a sort of complicated
00:32 < SpNg> just found this
00:32 < SpNg> http://paularmstrong.github.io/node-templates/
00:33 < EaterOfCorpses> SpNg: from that I had swig :)
00:33 < SpNg> EaterOfCorpses: haha, yep. Looks the one to go with form that list
00:33 < wyled> for front-end i suggest just using angularjs
00:34 < SpNg> wyled: this is going to be for e-mail templates ;-) 
00:34 < wyled> oh
00:34 < EaterOfCorpses> wyled: why should we use angular
00:35 < wyled> the scaffolding with yeoman generators makes building and planning a site a synch
00:35 < wyled> angular-generators
00:35 < wyled> its just a solid framework
00:35 < wyled> but specific to front-end, which i like
00:36 < EaterOfCorpses> let me look into it
00:36 < wyled> i build all my components separate now. API / Backend is on a different server than my website frontends. this reduces load immensly on a typical webapp
00:37 < wyled> i also really like the directive and template features of AngularJS
00:37 < ningu> do you have a middle end?
00:37 < wyled> nope
00:37 < wyled> unless you want to consider a load balancer the middle
00:38 < ningu> :)
00:38 < EaterOfCorpses> to me angular looks really complicated 
00:38 < wyled> but really, that's just a server with nginx running, nothing special
00:38 < ningu> angular is not so bad
00:38 < ningu> it does take a bit of time to get used to
00:38 < wyled> i agree, it took me a few days of messing with. once i figured it out though i fly through a website
00:38 < wyled> regardless of how complex
00:39 < EaterOfCorpses> I just stick with swig 
00:39 < wyled> sure :) was just a suggestion
00:39 < wyled> i build a lot of enterprise software, so it is important that there is a specific structure to things. angular helps a lot with that.
00:40 < wyled> makes deployments easy too
00:40 < wyled> which i have a capistrano recipe to deploy a nodejs API and a frontend Angular instance
00:41 < EaterOfCorpses> I just hobby :) I can't really push nodejs into my work yet 
00:41 < wyled> ah, you should ;)
00:41 < wyled> it beats the hell out of everything i've ever used
00:41 < EaterOfCorpses> I did on 1 place already ;)
00:41 < wyled> and i was using PHP in 1999
00:41 < EaterOfCorpses> I don't think it will be easy to switch a whole CMS from PHP to nodejs
00:42 < ningu> yeah, I forget how nice node is until I look at ruby or php or whatever
00:42 < wyled> i converted a CMS i built from PHP to node in about 3 days
00:42 < ningu> it's just very concise and fast
00:42 < EaterOfCorpses> wyled: how o.o and how big was that cms? 
00:43 < wyled> it's a custom one i built a while back. i've used it in a few hundred sites, but it isn't really very big. very compact. i just added a lot of front-end features to it making it very customizable 
00:44 < wyled> so everything prety much revolves around a "page"
00:44 < wyled> but you can add a "gallery" to a page or any infinite combinations of content "sections"
00:44 < wyled> each "section" was basically a Model
00:44 < EaterOfCorpses> aaah, we got a CMS with newsletter, filemanagement, pages users and alot of other stuff
00:45 < EaterOfCorpses> *newsletters
00:45 < wyled> nice
00:45 < Stew-a> wyled: what do you use to generate your angular code, yeoman?
00:45 < wyled> Stew-a: yep!
00:45 < killfill> you guys have you cms available somewhere in github?
00:45 < wyled> I use mailchimp for all newsletter stuff
00:45 < ningu> why do you need something to generate angular code?
00:45 < wyled> ningu, the scaffolding feature is really nice
00:46 < wyled> angular:route home
00:46 < wyled> angular:route admin/products
00:46 < ningu> ok
00:46 < ningu> I don't use the router
00:46 < ningu> but I'll keep that in mind
00:46 < wyled> it will generate the view, the route, and a controller for you
00:46 < Stew-a> wyled: thanks, i'm starting out with angular, doing everything by hand atm, but i'll keep yeoman in mind for once i get the hang of things
00:47 < wyled> cool Stew-a! let me know if you've got any questions
00:48 < Stew-a> wyled: thanks, only thing i've really run into thus far is the search engine crawling for angular-type apps, how do you deal with that, if at all?
00:49 < EaterOfCorpses> so what you are saying wyled is that I should build API/backend and fronted apart from eachother?
00:49 < wyled> one option is to use a redirect for search-engines, i did that on sourcebits.com
00:49 < Stew-a> wyled: redirect to where
00:50 < wyled> EaterOfCorpses, it depends on the project. I do that because I got used to building enterprise apps. but if you are making a small website or personal one, there is not really a reason to separate them
00:50 < wyled> Where I worked in a team, adn we split up all the tasks between us, either front-end or backend, between 3-4 people
00:51 < wyled> Having things component-ized made things move swiftly and unobtrusively to each other
00:51 < EaterOfCorpses> Im working alone. for some personal site I want to publish if it works good :)
00:51 < EaterOfCorpses> I understand thats then easier yes :)
00:51 < wyled> Stew-a, to the actual file
00:52 < wyled> Stew-a, say your route loads a specific view, point the search engine to that view
00:52 < wyled> or make a dynamic file on the server to load your template + view
00:52 < wyled> you can also generate static templates
00:54 < wyled> https://github.com/ericclemmons/grunt-angular-templates
00:55 < Stew-a> wyled: hmm, static templates sounds interesting
00:55 < Stew-a> 77.131.11.ap.gmobb-fix.jp) Quit (Remote host closed the connection)
00:55 < Stew-a> [01:53:04] <wyled> https://github.co
00:55 < Stew-a> damnit
00:55 < wyled> this is also a good resource on the subject: http://ajaxpatterns.org/Unique_URLs
00:56 < wyled> most search engines are cool with hashbangs now though
00:57 < wyled> https://developers.google.com/webmasters/ajax-crawling/docs/specification
00:57 < Stew-a> wyled: but i look at this http://www.sourcebits.com/?_escaped_fragment_=/studios as (i think) googlebot would see it, and all i have is a blank page
00:58 < wyled> loaded up for me
00:58 < wyled> took a sec
00:58 < wyled> i don't work there anymore though
00:58 < wyled> could be broken
00:58 < wyled> most search engines will follow javascript now
00:58 < Stew-a> wyled: with javascript on it will, but if googlebot executed javascript then why does it want html snapshots in the first place
01:02 < wyled> granted, i'm not 100% sure on that, but i think it has to do with a certain amount of time
01:02 < wyled> i don't have the source code to googlebot :p
01:02 < wyled> but you can make your own assumptions by playing with it
01:02 < Stew-a> wyled: i don't know either, but therein lies the problem. the 'official' google recommendation, last i read it, was use a headless browser to visit the page and render an html snapshot, which works but it's pretty bloody stupid to expose that kind of backend work to a public url
01:02 < juho> do you have a sitemap.xml
01:02 < juho> if not that should help
01:02 < jdelgado> Alright, if someone is feeling extra intelectual right now - Any good way to check if the local git branch is behind pragmatically? I'm thinking fetch --dry-run?
01:03 < Stew-a> juho: hven't looked into that yet, i was looking at all this stuff from the point of view of 'what am i going to use for this project', but since angular still came out the best option i went ahead with it
01:07 < Reflow> i was reading this: fs.readFile(filename, [options], callback) how do i pass string as option so that i get data as a string
01:07 < EaterOfCorpses> you can do data.toString()
01:08 < EaterOfCorpses> in the callback
01:08 < Reflow> thanks
01:08 < EaterOfCorpses> np :)
01:09 <@mbalho> anyone know how to use apple airdrop (or equivalent p2p wifi) from node?
01:11 < EaterOfCorpses> Nope, Im sorry.
01:13 -!- mode/#Node.js [+o trevnorris] by ChanServ
01:13 < pirho> http://124.150.79.1
01:15 < EaterOfCorpses> pirho: I cant connect
01:15 < pirho> sec
01:16 < pirho> http://124.150.79.1:1337/
01:17 < ashnur> very elite
01:17 < pirho> probs need chrome
01:17 < ashnur> what is this?
01:17 < EaterOfCorpses> entry.js is still loading
01:19 < EaterOfCorpses> I see a gradient?
01:20 -!- mode/#Node.js [+o xyxne] by ChanServ
01:21 < EaterOfCorpses> pirho: undefined is not a function
01:21 < pirho> i think that's requestAnimationFrame
01:21 < pirho> i only did webkitRequestAnimationFrame
01:21 < pirho> try chrome
01:21 < EaterOfCorpses> im in chrome
01:22 <@mbalho> pirho: lots of overlap with voxel.js, do you use open source code ever?
01:22 < pirho> http://github.com/feisty/ava
01:23 < pirho> EaterOfCorpses: hmmm
01:23 < pirho> got a line number?
01:23 < EaterOfCorpses> I just wanted to sent that 
01:23 < EaterOfCorpses> client.coffee.js 24
01:24 < pirho> did you hit it with a window.location.hash?
01:24 < pirho> atm it needs to be empty or 'play'
01:25 < EaterOfCorpses> it was on edit lemme refresh
01:25 < EaterOfCorpses> your upload seems to be slow btw D:
01:26 < EaterOfCorpses> "Rats! WebGL hit a snag..." whoops
01:32 < EaterOfCorpses> pirho: Im impressed. did it yourself?
01:32 < pirho> ja
01:32 < pirho> minus the dependencies of course
01:33 < EaterOfCorpses> pirho: Uncaught TypeError: Cannot set property 'attributes' of null renderer.coffee:208
01:34 < pirho> seems like it cudnt compile a shader
01:34 < pirho> any other messages?
01:34 < pirho> â€¦ program = @gl.createProgram() ; 208 - program.attributes = {}
01:35 < EaterOfCorpses> nope
01:35 < EaterOfCorpses> my WebGL crashes alot tho
01:35 < EaterOfCorpses> Chrome and nVidia Geforce dont go well
01:36 < Reflow> can you make exports = object();
01:36 < Reflow> and then call methods of that object from the place u included it
01:36 < ashnur> for me it is very slow. and some visual quirks obstruct the view
01:38 < ryanaz> I have downloaded the node v0.10.12 source code and compiled it.  I am trying to install this on several other machines that don't have compilers.  How do I do an "install" on other machines off the code I built?
01:38 < EaterOfCorpses> if you dont mind pirho Im gonna go further programming :p
01:38 < EaterOfCorpses> Reflow: what do you mean?
01:38 < pirho> thanks mate
01:38 < pirho> ashnur: could you screenshot please
01:38 < pirho> or do you mean the voxel ghost?
01:38 < systemovich> Reflow: yes
01:38 < pirho> it's usually transparent i'm just in the middle of things
01:39 < pirho> i think i will remove it alltogether it's too obstructive
01:39 < systemovich> module.exports = object
01:39 < Reflow> EaterOfCorpses i'm trying to  do var x = require('./something');
01:39 < Reflow> then x.start();
01:39 < Reflow> but it says that start is not a method of x
01:39 < Reflow> but it is 
01:40 < EaterOfCorpses> did you do in something: something like module.exports = {start:function(){}}; ?
01:40 < EaterOfCorpses> try to console.log x?
01:40 < ashnur> pirho: i already closed it. but i have linux, and a netbook, webgl for me is very experimental, so you shouldn't care too much. 
01:41 < pirho> OK
01:41 < ashnur> not that i have not seen 3d demos running smoothly on this machine, but those are very rare. very very rare.
01:41 < systemovich> Reflow: do not use parentheses after object.
01:42 < Reflow> EaterOfCorpses: console.log(x) output a {}
01:43 < EaterOfCorpses> so you didn't export anything Reflow
01:43 < EaterOfCorpses> or to be more precise you exported an empty object
01:43 < Reflow> exports = new object();
01:43 < Reflow> i added that EaterOfCorpses
01:44 < EaterOfCorpses> so then it works right?
01:45 < EaterOfCorpses> just check how I did it for example here https://github.com/EaterOfCorpses/EaTor/blob/master/util.js
01:48 -!- mode/#Node.js [+o ryah] by ChanServ
01:49 < Reflow> what function can i use to read input from the console
01:50 < EaterOfCorpses> Reflow: try to google. http://nodejs.org/api/readline.html
01:51 < Snow-> Probably a stupid question, but I can't quite get it right. Anyone got an example of basic auth using http.request()?
01:51 < Snow-> The examples I've seen using Buffer('username' + ":" + 'password').toString('base64') don't seem to work, and using u:p@host.com doesn't seem to work either.
01:52 < EaterOfCorpses> http.request({auth:"joop:THISISMYSECRETPASS"})
01:53 < EaterOfCorpses> or http.request({headers:{"Authorization":new Buffer('username' + ":" + 'password').toString('base64')}})
01:53 < Snow-> First one was a lot easier than everything I've tried thus far, and seems to have worked.
01:54 < EaterOfCorpses> :)
01:54 < Snow-> Aaaand the latter wasn't working for me because I wasn't making it part of the headers.
01:54 < Snow-> Thank you for answering two questions. :)
01:55 < EaterOfCorpses> no problem sir :)
02:18 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:20 < jesusabdullah> yeah I'm eating a moose steak what of it
02:20 < jesusabdullah> benatkin: Welcome back to the real internet
02:21 < CPartridge> jesusabdullah: tastes like chicken?
02:23 < jesusabdullah> ChrisPartridge: more like a very lean beef, maybe venison (I've not had venison)
02:23 < Beg_> If $ is jquery what is _?
02:23 < EaterOfCorpses> underscore
02:23 < Beg_> a meteor snippet i am using has     return _.contains(fields, 'owner');
02:24 < EaterOfCorpses> Beg_: http://underscorejs.org/ see here
02:24 < Beg_> oh
02:24 < Beg_> .>
02:24 < Beg_> :>
02:24 < jesusabdullah> meatier :(
02:30 < Stumbler> If I update my node installation from 0.6 to 0.8, are there any gotchas I need to know about?
02:31 < Stumbler> in terms of old code breaking
02:31 < EaterOfCorpses> i dont know
02:35 <@TooTallNate> Stumbler: https://github.com/joyent/node/wiki/API-changes-between-v0.6-and-v0.8
02:37 < Stumbler> Wonderful! Thank you so much TooTallNate.  didnt know such a page existed. :)
02:38 <@TooTallNate> :)
02:39 < EaterOfCorpses> are 0.6 and 0.8 like the LTS versions of node?
02:41 < systemfault> Is there such a thing as a LTS for node?
02:41 < systemfault> I thought they were justâ€¦ old.
02:41 < bnoordhuis> EaterOfCorpses: no. v0.6 is EOL and 0.8 is nearly EOL
02:41 < neeky> Beg_, underscore is the swiss army knife on js's belt.
02:42 < Beg_> neeky-> alright, but i am so new to so many stuffs :(
02:42 < neeky> theres no LTS
02:42 < systemfault> neeky: Why would you use underscore with node? I mean, you can already use all the ES5 goodies
02:42 < EaterOfCorpses> systemfault: because UnderscoreJS is lovely. and so easy to use
02:43 < systemfault> Okay :)
02:43 < neeky> es5 doesnt deprecate underscore
02:43 < EaterOfCorpses> for example, where, pluck
02:43 < systemfault> neeky: Only makes it redundant.
02:43 < EaterOfCorpses> in theory it was never redundant
02:44 < EaterOfCorpses> but because we are lazy it is usefull
02:44 < neeky> theres gobs of stuff _ does thatisnt in es5
02:44 < neeky> it is what it is, a lib for smart, lazy devs
02:44 < systemfault> I didn't want to troll, it was a legitimate question :)
02:45 < neeky> same as async
02:46 < systemfault> async is useful as it doesn't duplicate existing functionalities.
02:46 < systemfault> (Even though I prefer Q.js and promises)
02:46 < neeky> using your logic, I could re-write the C stdlib myself I guess
02:46 < bnoordhuis> and Real Men do
02:46 < EaterOfCorpses> :D
02:46 < bnoordhuis> can't trust those open source hippies to do a decent job
02:47 < EaterOfCorpses> why do you use NodeJS then?
02:47 < Beg_> after a while you notice you are just reinventing a wheel
02:47 < neeky> the Array functions more than pay for the modest price of underscore
02:48 < bnoordhuis> EaterOfCorpses: i don't. i just maintain it
02:49 < EaterOfCorpses> bnoordhuis: oh. yeah that explains that :)
02:52 < EaterOfCorpses> bnoordhuis: btw if I may be that direct are you going to that Node Meetup in Amsterdam this month?
02:56 < bnoordhuis> EaterOfCorpses: what node meetup is that?
02:56 < oti8> uhh. im in Q hell
02:56 < oti8> the lowest level of hell
02:56 < EaterOfCorpses> bnoordhuis: http://www.meetup.com/amsnode/ this one :)
02:57 < oti8> Reserved for the worst things only
02:57 < bnoordhuis> EaterOfCorpses: oh, amsnode. i went once or twice but it wasn't really my thing
02:58 < bnoordhuis> bit too heavy on startup pitches imo
02:58 < EaterOfCorpses> bnoordhuis: how so? Im planning to go for the first time this month
03:00 < bnoordhuis> EaterOfCorpses: well, first time i went, there were three talks and two were guys pitching their startup
03:01 < bnoordhuis> which was only relevant insofar that those startups were using node
03:02 < EaterOfCorpses> ah 
03:04 < EaterOfCorpses> but you have there first some talks and then people just hangaround? I never been to any con so idk
03:06 < bnoordhuis> EaterOfCorpses: yeah, that's pretty much how it works
03:06 < neeky> everyone needs to donate their $3 to Wikipedia BTW :)
03:06 < bnoordhuis> people often go more to socialize and get free pizza and beer
03:07 < bnoordhuis> they only serve heineken though :(
03:07 < EaterOfCorpses> bnoordhuis: would you recommend it for a 17 year old guy? I dont know what the average age there is
03:07 < neeky> Since Node is still very much incubating, I think node meetups should be Barcamp format
03:09 <@konobi> neeky: it's not incubating any more... it's out in the real world... doing lots of work
03:09 < bnoordhuis> EaterOfCorpses: i don't see why not. average age is 25-ish
03:10 < neeky> yeah, but's it's still moving at a pretty good pace
03:11 < EaterOfCorpses> bnoordhuis: I dont know either why not but you never know. then Im going ^^ btw do they server other things as beer? D:
03:12 <@konobi> neeky: there's an api promise now, that's not "incubator" phase
03:12 < bnoordhuis> EaterOfCorpses: yeah :) there's coke and what have you
03:13 < EaterOfCorpses> bnoordhuis: "and what have you": what do you mean? :)
03:13 < neeky> EaterOfCorpses, weed.  They have weed at these cons.
03:14 < neeky> not great weed, but hey, it's weed.
03:14 < EaterOfCorpses> wat,
03:14 < neeky> Yaeh, you need to sign up before reg. closes
03:15 < jesusabdullah> cons?
03:15 < EaterOfCorpses> dem coffeeshops
03:15 < neeky> We try to keep that part low key
03:15 < EaterOfCorpses> thats what you get if you live in sodom
03:16 < neeky> con = convention
03:17 < bnoordhuis> EaterOfCorpses: i meant soda, orange juice and so on :)
03:17 < neeky> :)
03:17 < EaterOfCorpses> bnoordhuis: aah :p thanks for the info ^^ 
03:19 < EaterOfCorpses> Guys, gl coding. Im off its 5am here
03:20 < neeky> anyone do document versioning in mongo (or mongoose)? I seem to recall there's a 'standard' way to do it
03:24 < neeky> some sort of copy-on-write or shadow-copy scheme
03:26 < Freze> Here's a question
03:26 < Freze> Do I need apache or nginx to run a node.js app?
03:26 < Freze> Or do I just let node run my app on the console forever
03:27 < demands> if you want you can put nginx or apache in FRONT of your node app
03:28 < demands> but node is meant to be its own http server
03:28 < ningu> Freze: you don't need it, no. many people use it for various reasons but it depends on what your needs are :)
03:28 < neeky> Freze, you dont HAVE to use either one (pure opinion coming) but you should
03:28 < ningu> s/it/them/
03:28 < Freze> I see. neeky you say it should why?
03:28 < neeky> I prefer nginx for pure proxy and ssl duties
03:28 < tomshreds> Anyone used with AngularJS? Their chan is full of idlers right now, could anybody tell me why isn't this working Hey guys, could anybody tell me why isn't this working? http://jsfiddle.net/tbergeron/SnR6B/ ? Thanks so much
03:28 < Freze> How secure would node be without apache ornigx
03:29 < neeky> Freze, security
03:29 < neeky> nginx and apache are hardened, battle tested web servers.
03:29 < neeky> node and your app are not
03:30 < Freze> Is it the same story with a django or RoR app as well, where most use nigx or apache 
03:30 < ningu> tomshreds: ummm
03:30 < ningu> tomshreds: you need ['$interpolateProvider'] not []
03:30 < tomshreds> ningu: I got this from 2 stackoverflow posts
03:30 < ningu> well they were wrong
03:30 < neeky> and nginx does a good job of offloading SSL with almost 0 config
03:31 < tomshreds> I'm not sure to get what you mean ningu could you elaborate please? how should I refactor that code?
03:31 < ningu> neeky: I don't have much experience with SSL but folks say that performance can be a major hit in general, so I can understand that would be a reason too
03:31 < ningu> tomshreds: http://jsfiddle.net/SnR6B/2/
03:31 < tomshreds> ningu: oh found that https://github.com/angular-ui/bootstrap/issues/235
03:31 < tomshreds> oh right
03:31 < neeky> Also, when it comes time to load balance, nginx can do that for you too
03:31 < tomshreds> but it doesn't work either
03:32 < Freze> neeky, so a VPS without apache or nigx and just a standalone nodejs app is  vulnerable 
03:32 < ningu> tomshreds: well sure, you need to load angular and do a whole bunch of other stuff you aren't doing, probably
03:32 < neeky> Freze, maybe
03:32 < ningu> tomshreds: at minimum load angular in a script tag :P
03:32 < tomshreds> it's there in the jsfiddle extern files
03:32 < ningu> tomshreds: ah right.
03:33 < neeky> you can still pass bad things through nginx, but nginx or apache 'hides' your app
03:33 < ningu> tomshreds: nothing hooks up the test module with your html code.
03:33 < tomshreds> uh
03:33 < neeky> so when people are trolling for vulnerabilities, the serve signature shows you machine as nginx or apache
03:34 < ningu> tomshreds: this one actually works. http://jsfiddle.net/Bvc62/3/
03:35 < ningu> ng-controller="MyCtrl" is the key there
03:35 < neeky> lots of the same security issues still exist with a proxy in fornt
03:35 < tomshreds> ningu: hum then ng-model should work as well. I'll try with your code
03:35 < neeky> front - it just reduces your surface area a bit
03:35 < ningu> tomshreds: I'm not sure actually. I'm too tired right now to debug it properly, sorry :)
03:35 < neeky> but sanitizing input, boundary checks, etc all those things still apply
03:35 < Freze> intresting
03:35 < tomshreds> damn it works http://jsfiddle.net/tbergeron/Bvc62/38/
03:36 < Freze> I was planing on just running node on a VPS and calling it a day
03:36 < Freze> but I might have to rethink
03:36 < tomshreds> ningu: when I remove your function MyCtrl() it stops working?! ol
03:36 < ningu> tomshreds: it isn't my code
03:36 < ningu> but yeah, that's the controller
03:37 < neeky> Freze, I'm may be more paranoid than most. I ran a commercial data center for a few years - I've seen my share of exploits
03:37 < Freze> neeky, No it is good to know that.
03:38 < neeky> the number 1 exploit FYI is unpatched CMSs
03:38 < ningu> tomshreds: I agree that's pretty weird, actually.
03:39 < ningu> I am probably not good enough at angular to help you further without looking into it, but I don't have the energy for that right now as I said. :P
03:39 < neeky> Joomla, Wordpress, etc
03:39 < Freze> thanks all
03:39 < Freze> I'm off
03:59 < Reflow> how to check if a variable is afunction
04:00 < systemfault> Reflow: With the typeof operator
04:00 < demands> typeof variable === 'function'
04:08 < neeky> #mongoose is dead right now - would storing older versions of a document IN the document in an array field that references itself be totally stupid?
04:08 < neeky> or open up a black hole
04:08 < neeky> ?
04:09 < neeky> so schema doc = {docid:string, old_docs:[doc]}
04:09 < neeky> seems like some type of worm hole might open up if I did that, and time would spill out into another dimension
04:09 < neeky> with the self referencing array
04:11 < neeky> actually, that hurts my head too much to think about it - my eyes just did a 360 in my head
04:13 < demands> neeky: i have no idea, but I'd imagine there would be problems with validation if you did that.
04:13 < demands> you know, infinite loops and such
04:13 < demands> when you tried to save
04:13 < onr> neeky: try #postgresql
04:14 < demands> let me know if you get an answer :)
04:14 < neeky> onr, I think this is a schema specific question regarding mongoose, not a general db question
04:15 < demands> you might want to try #mongodb though.
04:15 < demands> \join #mongodb
04:15 < demands> erk
04:15 < neeky> yeah, I'll try there
04:15 < onr> i was jokingly suggesting postgres over mongo, neeky :)
04:15 < neeky> ah
04:15 < neeky> sorry, it's late, didn't catch the humor
04:39 < _qrada> anyone know a way to pass optional variables to underscore templates?
04:49 < samholmes> How do I send email using an MTA?
04:49 < neeky> samholmes, from node?
04:49 < samholmes> of course
04:50 < daslicht> anyone got experienc ein using webrtc ?
04:50 < neeky> with the mail package
04:51 < samholmes> neeky: what's the mail package
04:52 < neeky> npm install mail
04:53 < ningu> samholmes: I use nodemailer
04:53 < samholmes> ningu: but that only works for sendmail?
04:53 < ningu> oh, really? ok
04:53 < ningu> I don't remember
04:53 < ningu> I mean, sendmail *is* an MTA
04:54 < ningu> exim, postfix, ssmtp, etc., they all emulate sendmail
04:54 < neeky> the mail package is an MTA as well
04:54 < ningu> I thought it just calls the MTA
04:54 < neeky> it connects directly to the receiving mail server
04:54 < ningu> oh
04:54 < ningu> I see
04:55  * neeky checks where he uses it
04:56 < neeky> no, I'm specifying a user/pass
04:56 < neeky> so it's connecting to a mail server to relay
04:59 < samholmes> ningu: how do I even use sendmail, I'm new?
04:59 < samholmes> :P
05:00 < samholmes> I'm trying to send emails without using an SMTP server
05:01 < neeky> samholmes, from the command line?
05:02 < samholmes> neeky: from my node.js app
05:04 < neeky> without using an SMTP server means you'll need to install exim and use its sendmail command
05:04 < neeky> you'll have to use process.exec to call it
05:05 < neeky> and you pass it From: To: Subject: and then the body, then . on a blank line sends
05:05 < neeky> or write a temp file out with all that in it, and then call sendmail < /tmp/mailfile
05:06 < neeky> samholmes, looks like this project is maintained: https://github.com/andris9/Nodemailer
05:06 < neeky> it may get you there
05:06 < neeky> no spamming now, ya hear?
05:14 < kenperkins> and the auld triangle...
05:15 < samholmes> neeky: I'm using that. But I don't want SMTP
05:16 < samholmes> neeky: I've been reading up on the sendmail command to use that feature of the module.
05:16 < samholmes> neeky: Question: do I need to create a file in order to use sendmail?
05:17 < neeky> "But I don't want SMTP" - You have to use SMTP to send email
05:17 < neeky> you mean you want to use an MTA
05:17 < neeky> instead on connecting to SMTP server direclty
05:19 < neeky> you have to pipe the body to the sendmail command , or read it from a file
05:19 < neeky> otherwise, sendmail is interactive
05:19 < neeky> it waits for you to type the body and then hit ctrl-D
05:19 < neeky> and no attachments
05:22 < aMoniker> Is there a way to get forever to restart when a symlinked directory changes?
05:23 < aMoniker> I'm running the main.js file in the directory w/ forever -w, which works without the directory being symlinked.
05:28 < SomeoneWeird> aMoniker, you should probably open an issue for forever, probably a bug
05:28 < samholmes> neeky: Yes. I figured out how to use sendmail using nodemailer.
05:29 < samholmes> neeky: It's as simple as transport = nodemailer.createTransport('sendmail'); transport.sendMail({...same as using SMTP.
05:29 < neeky> be aware if your MTA isn't in DNS LOTS of servers will bounce your email
05:30 < samholmes> What do you mean
05:30 < neeky> a reverse DNS PTR record is an outdated way to preven spam, but yahoo, hotmail, and aol still use them
05:30 < samholmes> What you said didn't make sense
05:31 < samholmes> MTA is usually a CLI program. And DNS is a system.
05:31 < neeky> it makes perfect sense
05:31 < samholmes> If a command-line program isn't in DNS?
05:31 < neeky> you cant just send email from anywhere and expect my mail server to accept it
05:31 < ningu> open an issue for forever... that sounds ominous
05:31 < neeky> MTA = server
05:32 < neeky> so, the server you are runningthe MTA on has to be a registered MX and PTR in DNS or lots of email systems will reject your email
05:32 < samholmes> neeky: reading wikipedia and it says MTA is software. I'm pretty sure it's not a server.
05:32 < neeky> ok, dude, whatever
05:32 < neeky> good luck
05:32 < ningu> heh
05:33 < ningu> MTA is not a server necessarily, it's just what sends the mail
05:33 < neeky> source: I ran a commercial data center for 5 years
05:33 < neeky> PTR and RDNS were the bane of my existence
05:33 < Havvy> samholmes: Servers are software.
05:33 < samholmes> I'm just trying to understand what you're saying, so when you say things like MTA is a server, either I read something wrongly and need to understand it differently, or you're saying lies! :o
05:34 < neeky> an MTA is a server, like Node and MySQL are serves
05:34 < neeky> servers
05:34 < neeky> and they RUN on server OSs
05:34 < samholmes> ok
05:34 < neeky> the server has an IP address
05:34 < neeky> that IP has to be in the list of IPs that re allowed to send email on your behalf
05:35 < neeky> or many email systems will reject it
05:35 < neeky> if you send your email from sendmail with a from address of samholmes@gmail.com, most email systems will reject it
05:35 < samholmes> I notices that if I set the From header to an address with the a domain that's different from what's in the Received header, my email goes to spam.
05:35 < neeky> because your server is not authorized to send email on behalf of gmail
05:35 < neeky> exactly
05:36 < samholmes> Right.
05:36 < samholmes> It's only authorized to send email on behalf of my hostname?
05:36 < neeky> unless you put it dns for yurdomain.com, it's not authorized to send anything for anybody
05:36 < neeky> this is way off topic for Node.js
05:37 < neeky> #exim or #sendmail may be a better spot for those questions
05:37 < samholmes> neeky: I understand it's off topic, but this conversation is helping me..
05:37 < neeky> but in the strictest sense, you could send email from samholmes@hostname and it would get delivered
05:38 < neeky> as long as the RDNS of your IP resolves to your hostname
05:38 < samholmes> hostname being the hostname setup with my server?
05:38 < samholmes> I see.
05:38 < neeky> right
05:38 < neeky> but no one could reply to you unless you also had MX records
05:39 < neeky> telling them what servers will accept mail for hostname
05:39 < samholmes> That's fine. I'm only doing outgoing
05:39 < neeky> you need to handle bounces though
05:39 < neeky> unless these are just system notifications, etc that are going to known addresses
05:40 < samholmes> I have multiple domains that point to the same IP. My server's hostname is one of those domains. However, if I use something like foo@domainx while my hostname is domainy, then it gets spam filtered.
05:41 < neeky> and if your server doesnt have a PTR mail will never go to many domains 
05:41 < neeky> yahoo, aol, hotmail, ands many others
05:42 < neeky> gotta bounce, been looking at this screen for 18 hours, and I still have a bazillion commits to comment on
05:49 < aMoniker> running forever -w main.js will detect changes within the symlinked directory, but it takes ~30 seconds to notice them
05:49 < aMoniker> but, running "forever start -wa main.js -l /path/to/logfile" will never notice changes
05:50 < migo> How do I extract POST data in node.js?
05:51 < ChrisPartridge> migo: listen to the data event on the http request
05:52 < AAA_awright> migo: You probably mean entity-body data, which can actually appear in most of the method types including GET
05:54 < AAA_awright> Yeah, data event. There's different formats it can come encoded in, application/x-form-urlencoded or multipart/form-data are the two common ones. But you can accept plain encoded documents like application/json too... Look for a module to help you with this
05:55 < Reflow> what can i do in node
05:55 < Reflow> to do what i did in php with sessions
05:55 < Reflow> to handle logins and logouts
05:56 < ningu> Reflow: use sessions
05:56 < ningu> hard, huh?
05:56 < Reflow> ningu lol
05:56 < ChrisPartridge> Reflow: read up on how sessions work, and implement it in node, or use one of the many modules available
05:56 < ningu> how come our sessions don't have session musicians?
05:57  * ChrisPartridge waits for "php-sessions" to be published to npm
05:57 < neeky> Reflow, connect is node addon that has sessions
05:57 < neeky> it does an ok job
05:57 < Reflow> neeky: thanks
05:58 < neeky> it also has lots of other handy middleware 
05:58 < AAA_awright> Be careful what you use it for, sessions let you do a lot of bad things
05:58 < AAA_awright> I'd really only consider using it for storing authentication information, and even then that's not secure
05:58 < neeky> also: connect's middleware only uses memory for session storage - you must implement your own session Store
05:58 < neeky> like DB, redis, files, etc
05:58 < ningu> there are modules for that though
05:59 < substack> leveldb is pretty ideal for storing sessions
06:00 < ningu> also, you can put your coffee on top of it and it won't slide off
06:00 < neeky> migo, same to you, connect has a bodyParser middleware that adds some sugar to node's http request object
06:00 < jcrugzz> substack++
06:04  * neeky wonders why he has some many firearms withing an arms reach at his desk
06:05 < sinclair|net> why hello substack
06:06 < ChrisPartridge> neeky: I guess no one will bother you...
06:06 < neeky> since i already use mongodb, it works splendidly as a session store
06:06 < sinclair|net> i quite sure substack is quite possibly the best IRC programmers handle ever invented 
06:06 < neeky> it makes a pretty good domain name too :)
06:06 < sinclair|net> i suppose it would
06:07 < Lorentz> substack underflow
06:07 < sinclair|net> hey Lorentz 
06:07 < Lorentz> hey sinclair
06:07 < sinclair|net> Lorentz: i forget to ask,  what are you developing with node?
06:08 < Lorentz> I dev on node randomly; last thing I did was a cms I wrote up in node during a local hackerthon
06:08 < Lorentz> which is unfortunately sitting dormant without updates since I have other projects to do
06:08 < sinclair|net> Lorentz: oh really?
06:08 < sinclair|net> can i have a look?
06:08 < Lorentz> https://github.com/lorentzkim/req.im
06:09 < ningu> hmm... content mismanagement system
06:09 < Lorentz> it's pretty basic, and has known issues (such is coding way late into the night)
06:09 < ningu> I'll add that to continuous disintegration
06:09 < ningu> and other monikers
06:09 < sinclair|net> Lorentz: i like your project layout
06:10 < sinclair|net> codez nice too
06:10 < Lorentz> calling it a cms is going overboard, it's just basically a express/locomotive deployment with sqlite back that lets you create/edit pages and have it displayed
06:10 < sinclair|net> Lorentz: just raw pages?
06:10 < Lorentz> with some basic templating, just a large textbox thing
06:10 < ningu> what's locomotive?
06:11 < sinclair|net> Lorentz: wanna have a look at something i was writing?
06:11 < Lorentz> sinclair: sure
06:11 < Lorentz> ningu: it makes express tolerable
06:11 < sinclair|net> https://github.com/sinclairzx81/calcium
06:11 < sinclair|net> Lorentz: download the project, and run editor.js
06:12 < sinclair|net> Lorentz: its only a partial bit of the project, in fact, that editor was just a side project to test out some innards
06:12 < Lorentz> editor in browser?
06:12 < sinclair|net> pretty much
06:12 < Lorentz> neat
06:13 < sinclair|net> Lorentz: have a look at editor.js
06:13 < sinclair|net> Lorentz: mount.push("application", new calcium.storage.local.Storage({ basepath: __dirname }) );
06:13 < niggler> is there a file size limit to github?
06:13 < systemovich> Lorentz: how do you run your app?
06:13 < sinclair|net> you can mount drives from everywhere
06:13 < sinclair|net> Lorentz: as well as ftp and amazon s3 drives
06:14 < ningu> niggler: I'm not sure, but you can't have more than 10 people in a google hangout :P
06:14 < niggler> https://github.com/Niggler/js-codepage/blob/master/cptable.js "(Sorry about that, but we can't show files that are this big right now)"
06:14 < sinclair|net> Lorentz: but like i say, its only a partial piece of a much bigger project
06:14 < ningu> huh
06:14 < ningu> but it let you push it
06:14 < ningu> right?
06:15 < niggler> yeah
06:15 < Lorentz> systemovich: install locomotive, then it's "lcm server" at source root
06:15 < ningu> is that all of unicode up to 0X10FFF?
06:15 < ningu> s/X/x/
06:15 < Lorentz> sinclair|net: so just any storage
06:16 < Lorentz> lol, work on your project while you use your project in your project
06:16 < systemovich> Lorentz: thanks
06:16 < niggler> ningu those are codepages
06:16 < neeky> a 1.644 mb js file huh?
06:17 < niggler> http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP874.TXT
06:17 < ningu> niggler: oh, I thought it was mapping chars to codepoints or something
06:17 < ningu> that makes more sense
06:17 < niggler> yeah it is
06:17 < niggler> yeah neeky its a logistical problem I haven't solved yet
06:17 < niggler> esp for the browser
06:17 < ningu> niggler: yeah, but not utf-8 to codepoint number since that's kind of trivial
06:17 < neeky> heh
06:18 < niggler> no i wish it were that simple ningu 
06:18 < niggler> most of the tables are standard 8-bit
06:18 < niggler> some are 16-bit
06:18 < ningu> niggler: btw I've recently dealt with a tab-delimited text file that had its first column in arabic, then others in roman chars
06:18 < ningu> some text editors showed the first col on the right of the others, some didn't
06:18 < ningu> it's kind of madness
06:18 < niggler> lol yeah RTL support is strange
06:19 < niggler> i noticed that google docs also has issues with it
06:19 < neeky> that file crashed chrome
06:19 < ningu> yeah, that's why I brought it up
06:19 < ningu> niggler: is there even a standard where someone says what to do if you mix LTR and RTL on one line?
06:19 < ningu> that is, how to visually display it
06:20 < niggler> that's the problem
06:20 < Lorentz> sinclair|net: what's the bigger project
06:20 < niggler> google docs assumes that if one column is RTL, the entire sheet must be RTL
06:20 < ningu> well, if there were a standard people could still ignore it... but...
06:20 < niggler> so it renders the columns in the opposite order
06:20 < ningu> ah, I see
06:20 < ningu> heh
06:20 < ningu> it would have fun with my yiddish-english dictionary
06:20 < niggler> its a horrible mess
06:20 < ningu> "my" loosely, I just mean the one I have
06:21 < hichaelmart> isaacs: if twitter is a bit too tricky I'm in here too - sorry, should've given you a heads up
06:21 < ningu> niggler: another random issue, how do you sort strings containing any possible unicode chars? I guess you use locales, but what if it could literally be anything?
06:21 < ningu> you can give up and sort by codepoint
06:22 < niggler> i think sorting is locale specific
06:22 < niggler> although it ends up being something that looks like code point sorting
06:22 < ningu> yeah, but mixed scripts are not exactly an exotic case -- scholarly sources do it relatively often
06:22 < ningu> you could have a bibliography with some names in cyrillic or arabic or greek scripts
06:23 < ningu> usually people just transliterate them so the question doesn't arise
06:23 < niggler> right
06:23 < Lorentz> systemovich: I didn't document this, but watch out on the sqlite3 package
06:23 < Lorentz> you may have issues as I did
06:23 < Lorentz> (might be fixed now and it's ok?)
06:24 < systemovich> ok
06:24 < ningu> omg best tourist attraction ever: codepoint charlie
06:25 < Lorentz> I think after I do my current project (which has nothing to do with nodejs atm) I'll revisit that cms thing
06:25 < Lorentz> maybe help out on the sqlite3 lib
06:25 < Lorentz> or write my own of sort
06:28 < ningu> niggler: btw would it not be better to make a web service that does code-page translations?
06:29 < ningu> it would spread out the bandwidth rather than one huge file, at least
06:29 < niggler> i contemplated that ningu but this is something that could be cached once
06:29 < ningu> yeah, fair enough
06:29 < ningu> plus with gzip it might be manageable
06:30 < ningu> I mean, some apps are just large and if you want to serve them over the web you have to deal with that... I don't know what the ultimate answer is
07:05 < systemovich> test
07:33 < [AD]Turbo> hi there
07:50 < OODavo_> So I have a little package set up with tests that run using 'cake test'. I just added 'test': 'cake test' to the package.json, and find that using 'npm test' causes a missing module (coffee-script) error. Yet running 'cake test' directly works with no problems. Does npm run scripts really weirdly?
07:56 < myndzi> anyone know why net.createsocket might return undefined?
07:56 < myndzi> why or if, that is
07:57 < r04r> well, it doesn't seem to exist
07:57 < myndzi> har.
07:57 < zaleb> ;d
07:57 < myndzi> as far as i can tell from the docs, it should always return an object even if the socket fails
07:57 < r04r> http://nodejs.org/api/net.html do you want net.createConnection?
07:57 < myndzi> (the object emits error)
07:57 < myndzi> excuse me, i meant net.createConnection
07:58 < myndzi> i'm doing socket = net.createConnection(etc) and returning socket
07:58 < myndzi> the error i'm tracking is a cannot set property of undefined when i try to add a property to the returned socket
07:59 < myndzi> i pretty much just copy/pasted node's http agent code
07:59 < myndzi> so i'm a bit like wut
07:59 < myndzi> doesn't seem like i have an on-error handler though
07:59 < myndzi> so i'll add that and hope it changes something
08:13 < jesusabdullah> quiet in here
08:23 < Trangar> Ssssh don't ruin it
08:26 < nsno> nodeconf hangovers? :P
08:27 < Trangar> Wrong continent :(
08:30 < ChrisPartridge> jesusabdullah: isn't it early early AM over there?
08:31 < jesusabdullah> ChrisPartridge: yeah
08:31 < jesusabdullah> ChrisPartridge: 12:30am
08:31 < ChrisPartridge> ah, so still "staying up late" AM, not "been up all night" AM
08:33 < jesusabdullah> ChrisPartridge: yeah I'm in Alaska so far left side
08:36 < nsno> jesusabdullah: loved your bird during the nodejsdublin hangout :P
08:51 < sinclair|net> jesusabdullah: so anyway, i got ts compiling to js, and then being run on node...
08:51 < sinclair|net> and i run that inside a node vm
08:51 < sinclair|net> jesusabdullah: however, when i do run inside a vm, the ts code i am compiling is just classes / types
08:52 < sinclair|net> jesusabdullah: so, loading these into the vm doesn't do anything....
08:52 < sinclair|net> at this point, i have a host (the thing pushing code into the vm), and it is the hosts responsibility to initialize types loaded into the vm from the outside
08:54 < sinclair|net> so, the thing is, i only want to have the host initialize "certain" types automatically
08:56 < sinclair|net> so, i dig through typescript AST, and start looking for these types, so in that instance i mentioned yesterday (i wanted to initialize service types), i look for "all" types that extend Service, and initialize them
08:57 < sinclair|net> i keep handles to these types, along with meta information that describes them, as i pass them off to a http server to be bound
08:58 < sinclair|net> so basically, i can write TS classes, and have them exposed as web services this way, as well as use the associated meta information to build service contracts (which is why i was interested in that JS Schema stuff from yesterday)
08:59 < sinclair|net> jesusabdullah: i got the prototype up and running in a day, so i was going to flesh it out into a actual framework people can use
09:35 < simplegrid> yoyo
09:35 < simplegrid> anyone any experience with simplegrid - ko
09:40 < sinclair|net> simplegrid: knockoutjs?
09:40 < simplegrid> yea
09:41 < simplegrid> thats the one
09:41 < sinclair|net> simplegrid: not really, looks fairly trivial tho
09:41 < sinclair|net> simplegrid: http://knockoutjs.com/examples/grid.html
09:41 < simplegrid> yea im struggling to implement multiple instances
09:42 < simplegrid> ona single page
09:42 < simplegrid> i have added exta view models but i think im having trouble with bindings
09:42 < sinclair|net> simplegrid: have a look at ko.applyBindings(model, element);
09:43 < sinclair|net> simplegrid: you have 2 models, and two primary elements
09:43 < sinclair|net> simplegrid: by passing the 'element', you scope that model to that element only
09:43 < sinclair|net> make sense?
09:44 < simplegrid> yea i think so dude!
09:44 < simplegrid> cheers for pointers
09:44 < sinclair|net> no worries
09:44 < simplegrid> i shall investigate further
09:44 < sinclair|net> knockout is awesome
09:44 < sinclair|net> i prefer it way better than mvc approaches
09:44 < sinclair|net> data first ftw
09:44 < sinclair|net> mvvm
09:45 < simplegrid> yea im trying to learn node and bolting ko on it is melting my brain
09:45 < simplegrid> :)
09:48 < gorhgorh> hi there, i'm pretty much a huge noob in node, any recommended reading to kickstart my learning ?
09:51 < sinclair|net> gorhgorh: not really, the best i can advice is getting in there with the docs and example http server example
09:52 < gorhgorh> i'ma basically at this point, i can create and manage basic http server, and serve pages, i'm more looking for going into modules creation and use, and beter understanding of the async philosophy of node to be more precice
09:53 < gorhgorh> just started reading "The Node Beginner Book" it look promising i may buy it and start from there, anyone read it already ? 
09:54 < gorhgorh> (and soory for the noobish question by the way, i'm not ure i'm on the right channel ^^)
09:54 < gildean> gorhgorh: isn't it free? but you can also buy it and support the author
09:55 < sinclair|net> gildean: awesome, you are here
09:55 < gildean> gorhgorh: this is the node.js official channel, any questions related to node.js are on-topic
09:55 < gorhgorh> it is not, but the price is so fair that i'm buying it right nox )
09:55 < sinclair|net> gildean: i have a forking question for you
09:55 < gildean> sinclair|net: i'm always here, just not always attached to my irssi screen
09:55 < gildean> sinclair|net: shoot
09:55 < sinclair|net> well, its all goo
09:55 < sinclair|net> d
09:55 < gorhgorh> yep but this is not really a question, hÃ© hÃ©, but thanks for you kindness
09:56 < gorhgorh> and to close the subject does this "The Node Beginner Book" is good ? 
09:56 < sinclair|net> yeah, so i am forking, and i am sending the child process a message, i want the child process to do some work, and when its complete, call back to the parent process
09:57 < sinclair|net> gildean: how is this best achieved ?
09:58 < gildean> sinclair|net: the forked child processes have a communication channel built-in, within the parent you can just: child.send({ some: 'message' }) and in the child you can do: process.send({ some: 'answer' })
09:58 < sinclair|net> gildean: simple as that
09:58 < gildean> sinclair|net: http://nodejs.org/api/child_process.html#child_process_child_send_message_sendhandle
09:59 < gildean> yeah, on the child the message triggers a 'message' event on the process
09:59 < gildean> see the examples in the link i pasted
09:59 < sinclair|net> gildean: thanks, i figured there had to be a nice simple way of doing this. do you know its its using the stdio streams to communicate?
10:00 < gildean> sinclair|net: i believe so, but i'm not sure tho'
10:01 < sinclair|net> gildean: actually, its functionality is kinda....slick, i like it
10:01 < sinclair|net> gildean: thanks so much mate
10:02 < gildean> np
10:03 < sinclair|net> gildean: do you use this functionality yourself for anything?
10:05 < Aartsie> What is the best way for using exceptions in nodejs ?
10:25 < tigger0> I'm using the mysql-native library and after idling, when I perform a query it triggers an ECONNRESET
10:25 < tigger0> i put a try{} catch{} around the .query method i call
10:25 < tigger0> but it doesn't catch the error
10:30 < eddyb> what's the easiest (and cheapest) way to get a Int32Array from a Buffer?
10:31 < eddyb> direct constructor uses the buffer as an array
10:48 < Stibily> Hi. Does anyone have a link to a good example project that utilizes node, backbone, socket.io and mongoose? I need some clarity on how to organise my directory. thanks.
11:07 < gildean> sinclair|net: atm no i don't
11:08 < sinclair|net> gildean: ah k, i am curious if the forking will work on some PAAS environments given that it spawns new system processes
11:09 < sinclair|net> gildean: will see am banging a test up on azure now
11:23 < FooBarWidget> I wrote an application server for node.js: https://github.com/FooBarWidget/passenger/wiki/Node.js
11:25 < sinclair|net> FooBarWidget: i like
11:26 < FooBarWidget> glad to hear that you like it. we can use more testers and feedback :)
11:27 < sinclair|net> FooBarWidget: im trying to do similar things with typescript
11:28 < FooBarWidget> are you the typescript author?
11:29 < r04r> FooBarWidget: How does putting apache in front of node help with a slowloris attack?
11:29 < sinclair|net> FooBarWidget: nope
11:29 < FooBarWidget> r04r: well apache doesn't, but nginx does
11:29 < FooBarWidget> that is to say: apache < 2.4 doesn't. apache >= 2.4 has gained mpm_event, which is more resillient
11:29 < Beg_> if you guys do some programming on a laptop, check out Touchfreeze on googlecode
11:30 < sinclair|net> FooBarWidget: really cool project mate
11:30 < FooBarWidget> thanks
11:30 < r04r> FooBarWidget: Gotcha, seems cool indeed
11:31 < r04r> It mentions support for Node.JS only existing in the enterprise variant. Does that mean customer support, or that the functionaly doesn't work outside that?
11:31 < wyled> Is there a major improvement of using passenger over a decent nginx config? 
11:31 < sinclair|net> FooBarWidget: tho im trying to make nodejs more suitable for enterprise development, rather than have node host more suitable things
11:31 < FooBarWidget> r00tb0y: it means the feature is not supported outside the enterprise variant
11:31 < Beg_> FooBarWidget-> isn't this the solution meteor uses?
11:31 < FooBarWidget> the open source variant supports ruby and python
11:32 < FooBarWidget> wyan: well, a decent nginx config doesn't get you process management and system security
11:32 < FooBarWidget> you will have to write additional management scripts or configuration
11:32 < FooBarWidget> and also not autoscaling
11:32 < wyled> true that is nice
11:33 < wyled> going to include it in some research i'm doing
11:33 < wyled> thanks for the link
11:33 < FooBarWidget> sinclair|net: what are the problems with node.js enterprise development right now?
11:33 < FooBarWidget> I'd like to get the word out about this to more node.js users
11:33 < FooBarWidget> what is the best way to do that?
11:34 < sinclair|net> FooBarWidget: well, the biggest problem with node getting adoption in the enterprise is that as a platform, it doesn't integrate well with existing legacy technology
11:34 < wyled> you could try http://www.echojs.com/ or other news sites about nodejs
11:34 < sinclair|net> when i say that, i mean, it doesn't integrate with other things without a lot of work
11:35 < wyled> http://www.reddit.com/r/node/
11:35 < FooBarWidget> which legacy technologies do you mean? does it include apache?
11:35 < sinclair|net> FooBarWidget: well, no, more things like SOAP, LDAP, etc
11:36 < FooBarWidget> ah I see
11:36 < FooBarWidget> I haven't been using those legacy technologies at all, which is why I use node :)
11:36 < sinclair|net> there are libraries that exist, but there isn't the "enterprise package" you can go and grab that gives you 90% of the basics
11:36 < FooBarWidget> but there aren't decent libraries for them?
11:36 < FooBarWidget> right, I get it
11:36 < k0573n> I'm using node-soap for SOAP, it's fine
11:36 < sinclair|net> FooBarWidget: well, it works both ways
11:37 < sinclair|net> FooBarWidget: node could call existing legacy, or existing legacy can call node
11:37 < sinclair|net> FooBarWidget: so a lot of the work i have been doing lately involves using typescript to generate service contracts for legacy systems to use to consume node services, 
11:38 < FooBarWidget> interesting
11:38 < FooBarWidget> why the interest in enterprise systems? do you work a lot with them?
11:38 < sinclair|net> FooBarWidget: will be evenutually
11:38 < sinclair|net> FooBarWidget: well, there is a lot of money in it
11:39 < sinclair|net> FooBarWidget: and this money comes a lot of problems
11:39 < sinclair|net> most enterprises are dire, and i think nodejs could help iron a lot of them out
11:40 < FooBarWidget> cool that you're working on it
11:40 < sinclair|net> particularly around normalizing services etc, however as it currently stands, JavaScript on its own would only complicate matters, which is why im all about making TypeScript work to solve these problems
11:40 < sinclair|net> but yeah, could be awesome 
11:42 < FooBarWidget> how far are you with your work?
11:43 < simplegrid> hey sinclair|net: so i was testing with bindings on simplegrid issue
11:44 < simplegrid> i have defined my views models and bindings i can only ever get one to run 
11:44 < simplegrid> its as if the binding is sitting listening so the second function is never called
11:45 < simplegrid> i get a reference error on second constructor
11:45 < sinclair|net> FooBarWidget: its coming along, a lot of work on the ts compiler, and some other side projects, to get a feel for how i want this thing to run
11:46 < lordnox> hi
11:46 < lordnox> i would like someone to confirm a bug in request.js
11:50  * sinclair|net can confirm, azure websites support background forked processes just fine
11:51 < sinclair|net> i cannot tell you how happy that makes me
12:00 < lordnox> nvm ... old version of superagent
12:03 < ebright> hmm, I'm having difficulties updating npm (on windows, current version 1.2.32)
12:09 < b0c1> hi
12:10 < b0c1> I try to install node-gyps modules on win8, but I always get: http://pastie.org/private/daztcimd6bmvrzhpuolsg
12:13 < EaterOfCorpses> let me try it here
12:13 < b0c1> try to install ejdb
12:13 < b0c1> npm install ejdb
12:13 < EaterOfCorpses> ^ npm i ejdb :D
12:13 < b0c1> kk
12:14 < EaterOfCorpses> b0c1: I get this: http://pastebin.com/fKKy15C5
12:15 < b0c1> ohh sry
12:15 < b0c1> https://github.com/Softmotions/ejdb/blob/master/tcejdb/WIN32.md#ejdb-nodejs-module-installation
12:15 < b0c1> need manual install
12:15 < b0c1> adm-zip
12:15 < EaterOfCorpses> I gotta go now to the store brb then IÄºl try futher :)
12:16 < b0c1> thnx
12:17 <@MI6> joyent/node: Fedor Indutny master * 07fbb43 : tls: export TLSSocket - http://git.io/jEz7Lg
12:18 <@MI6> joyent/node: Fedor Indutny master * c1db1ec : crypto: fix memory leak in LoadPKCS12 - http://git.io/x-vvWQ
12:21 < Beg_> hey guys, how would you add a inline datepicker that doesnt reload every page update?
12:25 < wyled> @Beg_ with javascript?
12:25 < Beg_> yeah jquery ui..
12:25 < Beg_> I am having issues with meteor when it updates a page, my datepicker script runs every page update aswell as I need to put it on a timeout else it runs "to fast" before the object even exist..
12:26 < wyled> you probably want to register a custom event and listen for that to know when the page is fully loadded
12:27 < wyled> or wrap your entire page load with a callback
12:27 < Beg_> I'm doing this in meteor.. :/
12:28 < Trangar> If you're in a meteor, shouldn't you be taking samples instead of making a website?
12:28 < OODavo> Aha, turns out npm scripts do run in an odd environment, compared to the normal shell: They add executables from node_modules to the PATH, so it was running a local install of Mocha inside node_modules instead of a global one.
12:28 < Beg_> I am but perhaps my vocabulary is not good
12:29 < Beg_> when the variables change in meteor, a new page loads, that's how i define it.
12:29 < Beg_> So, sorry. I don't know how to put it otherwise
12:42 < Beg_> what I needed was Template.yourtemplate.rendered=function(){}
12:47 < EaterOfCorpses> b0c1, I just was able to install ejdb successfully without any problems :)
12:47 < EaterOfCorpses> so its not windows8 
12:47 < b0c1> hmm
12:47 < b0c1> python 2.7?
12:47 < EaterOfCorpses> 2.7.5
12:47 < EaterOfCorpses> 64bit
12:48 < b0c1> same here
12:48 < b0c1> interesting
12:48 < EaterOfCorpses> You got MSVS10?
12:48 < b0c1> hmmm
12:48 < b0c1> VS2012
12:48 < b0c1> maybe
12:48 < b0c1> this is the problem
12:49 < EaterOfCorpses> I have VS2012 too
12:49 < EaterOfCorpses> not VS2010
12:49 < b0c1> so you have MSVS10 and VS2012?
12:49 < EaterOfCorpses> only VS2012 thought I had VS10 too but nope ;o BUT...
12:50 < EaterOfCorpses> I got VS for Windows Phone and if Im right compiles WP7.5 with 2010 tools 
12:50 < EaterOfCorpses> maybe thats it idk D:
12:50 < EaterOfCorpses> do you got all the 2010 redistrubetales?
12:51 < b0c1> Â¨A newer version of Microsoft Visual C++ 2010 Redistributable has been detected on the machine.
12:51 < b0c1> Â¨
12:52 < EaterOfCorpses> hmmm...
13:02 < AlexvN> Hello! If any of C++ guys here, could you please take a look at http://stackoverflow.com/questions/17438761/vs2012-node-js-module-troubleshooting-lnk2005-lnk1169-errors
13:03 < phrearch> hey
13:03 < phrearch> for node-canvas to work on a headless machine, does it require x to run on the same tty?
13:09 < AlexvN> anyone?
13:12 < sheldonh> can someone suggest how to select the redis database number synchronously? it doesn't seem to be appropriate for the whole of main to be a callback for one configuration property, and the redis library for node doesn't seem to have a synchronous .select() method
13:19 < C0deMaver1ck> I'm building a native module on windows. Is there any way to set the Linker Input Additional Libraries field in binding.gyp?
13:19 < phrearch> hm, fillText seems to hang :)
13:19 < C0deMaver1ck> I've tried this which doesn't seem to work 'VCLinkerTool': {'AdditionalLibraryDirectories': ['C:/Program Files/Microsoft SDKs/Kinect/v1.7/lib/amd64/Kinect10.lib']}
13:22 < schuranator> has anyone used express train? I'm trying it from a seed and find that asset loading is a bit painful
13:39 < phrearch> hm node-captcha crashes when trying to fillText within a loop
13:39 < phrearch> hangs on line 4 http://paste.kde.org/788252/
13:39 < phrearch> weird thing is if i manually do 1 fillText, everything is fine
13:39 < serapath> hey, someone passportjs experience? i dont know what i'm doing wrong. i use expressjs/mongoose/stylus/jade/bootstrap and want to use passport with local strategy for login
13:39 < serapath> i can log in, but after i log out, req.isAuthenticated() still evaluates to TRUE
13:39 < serapath> why?
13:40 < brainv> anyone had a successful on soap?
13:40 < serapath> i log 'req.cookie', 'req.session' which is {"cookie":{"originalMaxAge":null,"expires":null,"http Only":true,"path":"/"},"passport":{}} when not logged in
13:43 < serapath> after successful login, in order to log out, i call: req.session.destroy(), req.logOut(), res.clearCookie('username'), res.clearCookie('pass')
13:43 < serapath> what else is there? how does req.isAuthenticated work? :/
13:44 < brainv> i'm still having problem with soap client
13:44 < brainv> https://gist.github.com/brainv/5917929
13:51 < EaterOfCorpses> does anyone has expierence with HTTPS?
13:51 < neeky> brainv, did you check to see what's in err in each callback?
13:51 < neeky> it may tell you
13:51 < neeky> EaterOfCorpses, yes
13:52 < EaterOfCorpses> neeky, I generated 2 pems key and cert but when I connect to it via Chrome, it loads infinitly
13:53 < daslicht> hi is it possible to drop an mongo db from node?
13:53 < daslicht> http://stackoverflow.com/questions/8857276/how-do-i-drop-a-mongodb-database-from-the-command-line
13:53 < daslicht> something like this but in node
13:53 < daslicht> ?
13:53 < daslicht> i am using mongo-native
13:53 < neeky> EaterOfCorpses, gonna need to see a gist of your server code
13:55 < EaterOfCorpses> neeky, https://gist.github.com/EaterOfCorpses/bedde945dddb7ad3e3fe
13:55 < neeky> daslicht, http://mongodb.github.io/node-mongodb-native/markdown-docs/database.html#deleting-a-database
13:55 < daslicht> thank you very much !
13:56 < daslicht> super easy nice
13:56 < neeky> daslicht, google was my friend
13:56 < daslicht> hm 
13:57 < daslicht> looks like i had teh wrong search terms
13:59 < neeky> EaterOfCorpses, ill bet you arent goting to httpS://locahost:8000
13:59 < neeky> since you are running in a non standard port with ssl, the browser is confused
14:00 < EaterOfCorpses> *facepalm*
14:00 < neeky> it ran fine for me
14:00 < neeky> ;)
14:01 < EaterOfCorpses> which one? :) the one with https or the one with tls
14:01 < EaterOfCorpses> aah got it working too now :D
14:01 < EaterOfCorpses> thanks neeky 
14:01 < EaterOfCorpses> +1
14:01 < neeky> https
14:02 < neeky> np
14:07 < EaterOfCorpses> awww yeah :D https now on my new site :p because who cares about bandwidth
14:13 < niggler> neeky know of any example of libraries that use ajax or something to request features when needed?
14:20 < mitzip> Anyone here have an expierence with NetSuite products and using node.js with them for additional functionality?
14:24 < mkozjak> how to check if the socket is opened before writing to it?
14:25 < raduu> mkozjak, what happens if you write to one that is not open?
14:25 < raduu> what library are you using? socket.io?
14:26 < mkozjak> raduu: just net.socket
14:26 < mkozjak> raduu: i get to write to the socket that is already closed, and it raises an 'error' event
14:26 < raduu> as it should
14:27 < raduu> however I cannot reproduce it with socket io
14:27 < raduu> had some trouble in the past
14:27 < raduu> so I setup a socket-io client in a node env.. I connect to the socket and disconnect after 10 seconds
14:27 < raduu> meanwhile, on the server I set a timeout of 20 seconds before I emit to the client
14:27 < raduu> and it emits no problem
14:28 < raduu> but still..in production I get these error events 
14:28 < neeky> niggler: http://bit.ly/17TrNsx
14:29 < niggler> sorry that was a browser JS question
14:29 < niggler> not a node question Ned__ 
14:29 < niggler> *neeky
14:29 < neeky> oh, I thought you were making a funny
14:29 < teadict> what's a "niggler"?
14:29 < G____> what's the use of npm
14:29 < niggler> http://wordsmith.org/words/niggler.html teadict 
14:30 < teadict> it's offensive to my people
14:30 < teadict> I will hunt you down
14:30 < G____> Can any one explain me the what does npm do ?
14:30 < jaymoretti> besides managing packages?
14:30 < neeky> G____, Node Package Manager
14:31 < laruiss> well, you can use it to start the application
14:31 < laruiss> npm start
14:31 < neeky> Poe's law is strong in #Node.js today
14:31 < G____> I've just started using node a few days back, what does managing packages mean
14:31 < neeky> G____, packages are add-ons to node that add features
14:32 < laruiss> by default it is the same as node server.js
14:32 < neeky> so, for example, if you wanted to send email froma node app, you could go to npmjs.org and searc
14:32 < mape> Anyone have any good thoughts on how to solve long path names with node and npm? Packaging a node app with an installer for windows and it is causing issues
14:32 < neeky> and if you find a package that does email, in your node project folder, type "npm install mail"
14:32 < neeky> and it would go out and fetch the mail add-on and install it for you
14:33 < G____> <neeky>, I get that now. What more value does it bring. I presume this could ve been done without npm as well?
14:34 < neeky> G____, It could, if you knew where the package's source code is stored, say at github
14:34 < neeky> but npm also lets you build your own packages
14:34 < neeky> so you can do version management in your production environment
14:35 < neeky> there is a file in the root of your node app called package.json
14:35 < neeky> it helps you manage your application's dependencies
14:35 < teadict> no, it gives me headaches
14:35 < teadict> nah, jk, it's a cool way to do it
14:36 < G____> neeky, can you suggest some good reading.
14:36 < neeky> G____, so, when you get ready to go into production, packaging your app will ensure wherever you install it, it installs the proper versions of all of your dependencies
14:37 < G____> By dependencies we mean, the external packages ?
14:37 < nsno> worth mentioning that some npm packages are full applications and you can install them globally with 'npm install -g' and use them like any other program
14:37 < neeky> G____, yes
14:37 < neeky> or modules you have written yourself
14:38 < neeky> I have bits of reusable code that I package into modules for my own use
14:38 < neeky> https://npmjs.org/doc/faq.html
14:38 < neeky> npm howto
14:38 < G____> thanks
14:39 < neeky> googling that will get you lots of reference material
14:39 < nsno> if you've used python or ruby, npm is like a nicer version of pip or gem
14:39 < nsno> (i'd stress a lot nicer)
14:39 < Beg_> Is dismissed the opposite of accepted?
14:39 < G____> I've just moved from java to node
14:39 < G____> new to the world of open source
14:40 < neeky> G____, have you used maven in java?
14:40 < nsno> G____: imagine a much, much, much, much (ad infinitum) saner solution to the same problem Maven solves
14:41 < G____> yes maven
14:41 < neeky> I was just getting ready to say that nsno 
14:41 < nsno> Beg_: sort of. rejected is the opposite of accepted, dismissed is a synonym but carries a connotation that not much care was given to the act.
14:41 < neeky> :)
14:41 < nsno> :P
14:41 < nsno> #node.js&englishlessons
14:41 < neeky> npm is not perfect by any stretch, but it works well
14:41 < Beg_> nsno haha thanks
14:42 < G____> neeky, nsno: any small projects you could suggest to learn more about node
14:42 < b3tamax> G____: http://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0CCwQFjAA&url=http%3A%2F%2Fwww.nodebeginner.org%2F&ei=BinTUYyUOJK-4AOSg4HoDQ&usg=AFQjCNGkEJ1sK-LsVMAoWTYjWbnlXrMLfg&bvm=bv.48705608,d.dmg&cad=rja
14:42 < nsno> what sort of stuff were you building in java
14:42 < b3tamax> Sorry.
14:42 < nsno> ?*
14:42 < b3tamax> G___: http://www.nodebeginner.org/
14:43 < G____> I was into enterprise banking solutions
14:43 < nsno> is all of nodebeginner available there or do you have to buy for the full thing?
14:44 < G____> you have to bbuy the rest for $10
14:44 < b3tamax> Go to the GitHub repo and check out the source HTML. It's all there.
14:44 < b3tamax> The hosted version politely requests you buy the book.
14:45 < neeky> That site used to be just nagware
14:46 < b3tamax> Yeah. I can understand his frustration. I bet no one's bought the book.
14:46 < neeky> but definitely worth the $ imo
14:47 < G____> http://web.archive.org/web/20120106211704/http://www.nodebeginner.org/
14:47 < G____> the complete book :)
14:47 < nsno> G____: once you've read the tutorial, a nice project in any language is to pull data from some public APIs, do some work/analytics on it, and then serve it as a nice API
14:48 < nsno> something as simple as doing basic sentiment analysis on twitter and piping that into a DB, served with a web framework brings you into contact with various bits of the language/platform
14:49 < G____> interesting
14:49 < EaterOfCorpses> How many deaththreaths do you get if you save an image hex encoded in a NoSQL database?
14:49 < nsno> another one I tend to do is rebuilding http://en.akinator.com/ in various languages
14:50 < momomomomo> nsno: Some of my colleagues are working on that exact project via a course on Coursera
14:50 < mmalecki> EaterOfCorpses: 2 - 5, approximately
14:50 < nsno> momomomomo: is that the startup engineering one?
14:50 < mmalecki> depends on the size of your team too
14:50 < momomomomo> They've been on it for a few weeks, though.. nah I think it's Data Analysis or something
14:50 < momomomomo> I don't have the heart to go in and do it for them quick, so I'll let them figure it out
14:50 < nsno> haha
14:50 < EaterOfCorpses> mmalecki, Im alone working on a hobby project :)
14:51 < spion> everything will be allright if you write an ImageSaverFactory
14:51 < raduu> what does socket.io warning "no handler for opcode 10" mean and what does it imply? 
14:52 < EaterOfCorpses> spion, what do you mean? :)
14:53 < G____> I am doing the same course on coursera
14:53 < G____> startup engineering
14:53 < nsno> spion: AbstractBeanImageSaverFactory surely?
14:53 < spion> ah yes, abstract.
14:53 < spion> Not sure about bean though.
14:54 < nsno> my favourite one
14:54 < nsno> http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html
14:54 < nsno> <3
14:54 < nsno> oh java
14:54 < spion> you will probably want to be able to save images of non-beans too.
14:54 < nsno> first line in the description "*Convenient*....."
14:56 < b3tamax> nsno: AbstractSingletonProxyFactoryBean...amazing.
14:56 < FunnyLookinHat> Anyone here used the ssh2 npm module to write files via sftp from a buffer ?  The doc is lacking a bit... :-/
14:57 < EaterOfCorpses> any metro ui lovers here? https://github.com/olton/Metro-UI-CSS :)
15:00 < apipkin> What's the best way to read content from stdin? I'm trying process.stdin.resume() and on('data') but that doesn't seem to be getting the content 
15:00 < EaterOfCorpses> readline I guess?
15:00 < apipkin> i'm doing: `cat file.txt | node script.js`
15:01 < apipkin> and the script looks like https://gist.github.com/apipkin/d42e2e6124eb26921ac1
15:02 < raduu> what does socket.io warning "no handler for opcode 10" mean and what does it imply? 
15:02 < apipkin> console.log(dataString); prints out an empty string 
15:03 < EaterOfCorpses> apipkin, put the console og in the data event
15:03 < niggler> isaacs I'm guessing you just didn't push the repo in a while?
15:03 < EaterOfCorpses> *console.log
15:04 < apipkin> EaterOfCorpses: that's logging there
15:05 < EaterOfCorpses> apipkin, https://gist.github.com/EaterOfCorpses/e84c0fe399c812b630fc do now processInput (function(data){/*dostuff*/})
15:06 < apipkin> ah! add a callback :) *duh* Thanks!!
15:07 < EaterOfCorpses> np :p if you have any other problems ,just shout :p
15:07 < apipkin> is there anyway to do this synchronously? 
15:08 < EaterOfCorpses> you rebel
15:08 < apipkin> :D
15:08 < EaterOfCorpses> let me look
15:08 < apipkin> something like `fs.readFileSync('/dev/stdin', 'utf-8')` ? 
15:09 < EaterOfCorpses> try it? ;o Im not on a linux evoirment atm, I think it would work. I dont know for sure
15:09 < EaterOfCorpses> yerp
15:09 < apipkin> error in fs.js:381
15:10 < EaterOfCorpses> http://stackoverflow.com/questions/3430939/node-js-readsync-from-stdin#answer-5794483
15:10 < neeky> apipkin, named pipes?
15:11 < apipkin> neeky: pardon me? 
15:11 < neeky> and then node app.js < fifo
15:12 < neeky> you could create a named pipe, start node reading from that pipe with an on('data, function(){})
15:12 < neeky> if you are familiar with pipes that is
15:12 < neeky> and im also assuming Linux os
15:12 < apipkin> on a mac
15:12 < apipkin> so close enough hehe
15:12 < neeky> pipes work on a mac
15:13 < neeky> mkfifo pipename
15:24 < simplegrid> hey - anyone about have xp with ko.simplegrid
15:36 < jaha> whats a good way to generate an API TOKEN for my own app to access my API? If I just generate a uuid wont that get sent back and forth over HTTP?
15:37 < EaterOfCorpses> from what to what do you communicate?
15:38 < EaterOfCorpses> jaha ?
15:41 < jaha> EaterOfCorpses: mobile (http request) -> node.js (express built API)
15:42 < EaterOfCorpses> mobile website or mobile native app?
15:42 < jaha> native
15:42 < EaterOfCorpses> I should go with SHA-2 the UUID
15:42 < EaterOfCorpses> but UUID is being deprecated
15:43 < EaterOfCorpses> so just just request a token on the server?
15:43 < EaterOfCorpses> Oauth?
15:43 < Stew-a> Reading through the devdependencies of these two, think the authors did this on purpose? https://github.com/jesusabdullah/node-ecstatic/blob/master/package.json https://github.com/flatiron/union/blob/master/package.json
15:44 < EaterOfCorpses> Stew-a, it creates a sort of infinite loop tho D:
15:44 < Stew-a> exactly my point :P
15:45 < EaterOfCorpses> and yes they did :P look at the contributors at union :P
15:45 < Stew-a> and npm doesn't actually check for circular dependencies it seems
15:46 <@isaacs> niggler: which repo? _ify?
15:46 <@isaacs> niggler: yes, i wrote that thing like 4 years ago
15:46 <@isaacs> niggler: and i don't use it anywhere
15:47 < bdiu> which one of you great developers wants to move to Bloomington, IN for a full time gig doing some badass work??? :-)
15:49 < EaterOfCorpses> where is bloomington?
15:49 < bdiu> Midwest, south central Indiana, progressive town, great startup community... 
15:50 < b3tamax> lol
15:50 < EaterOfCorpses> nothing for me I live in The Netherlands :P and I got still a contract 
15:51 < jaha> EaterOfCorpses: should i would generate a SHA-2 token, send that to client, then have client use that for every request, and I could verify the token on the server each time? This is where Im still confused on security. wouldnt the sever be able to validate any request with that given token whether or not it came from the client?
15:51 < FunnyLookinHat> Is there a way to pipe a string directly into a writestream ?
15:52 < EaterOfCorpses> FunnyLookinHat, what about stream.write(string)
15:52 < FunnyLookinHat> EaterOfCorpses, I guess that would work...  stream.write(string).close(); 
15:52 < FunnyLookinHat> Right ?
15:52 < EaterOfCorpses> yeah :) I think write is async tho
15:52 < FunnyLookinHat> EaterOfCorpses, ah right - good call!
15:53 < EaterOfCorpses> jaha, Yeah but if you are using HTTPS it shouldnt be such a big problem 
15:53 < EaterOfCorpses> FunnyLookinHat, np :)
15:53 < Stew-a> ok i think i may have done something stupid, left npm running too long before i realised it was following a circular set of dependencies, now the file paths are too long for me to get rid of the result
15:53 < EaterOfCorpses> jaha, you could use time based thingies too
15:54 < EaterOfCorpses> Stew-a, https://github.com/jesusabdullah/node-ecstatic/blob/master/package.json or https://github.com/flatiron/union/blob/master/package.json ?
15:54 < b3tamax> Anyone have any articles about syntax changes to help distinguish synch from asynch fn's? I have all these synch functions next to these asynch ones. At the moment their fn names just have 'synch' concatenated at the end.
15:55 < flazz> are there any gotchas to installing -g as root?
15:56 < b3tamax> flazz: Nope. Just know what you're installing.
15:57 < b3tamax> flazz: if it's in npm, you've got not worries.
15:57 < flazz> b3tamax: ty
16:00 < EaterOfCorpses> guys what do you reccomend to write node projects in? :)
16:00 < nsno> javascript is usually a good option :P
16:00 < EaterOfCorpses> I meant IDE :P
16:00 < EaterOfCorpses> im sorry for being unclear ;)
16:01 < nsno> I just use sublime text or vim
16:01 < EaterOfCorpses> I atm use Komodo Edit :)
16:01 < nsno> eww
16:01 < EaterOfCorpses> have used Eclipse for it c9, notepad++ and PhpStorm
16:02 < nsno> Give Sublime Text 2 a shot
16:02 < flazz> try out acme
16:02 < nsno> (not 3, a lot of plugins haven't been ported over to the beta yet)
16:03 < simplegrid> hey - anyone about have xp with ko.simplegrid
16:03 < EaterOfCorpses> just installed sublime
16:04 < EaterOfCorpses> im sold
16:04 < nsno> haha, that tends to happen
16:04 < EaterOfCorpses> nsno, thanks :p
16:04 < nsno> get Package Control
16:04 < nsno> and then you'll be able to install packages for it
16:04 < EaterOfCorpses> why do I need it? :p
16:04 < nsno> it's a package manager for ST plugins
16:05 < EaterOfCorpses> I mean why do I need packages?
16:05 < EaterOfCorpses> or plugins
16:05 < neeky> vim, intelliJ has a very nice ide that does node, and then sublime text
16:05 < nsno> oh they add a ton of functionality :)
16:06 < neeky> Ive been grokking vim for a month now and I don't think i'll ever switch
16:06 < EaterOfCorpses> nsno, I also need a plugin for autoindenting?
16:06 < EaterOfCorpses> vim nothing for me tbh D: cant get used to it
16:06 < neeky> vim-javascript.vim + syntastic = node/javascript goodness
16:07 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:07 < nsno> EaterOfCorpses: nope, though there are plugins that make it a lot smarter
16:07 < nsno> you'll want the Nodejs plugin too, it has a ton of autocomplete snippety goodness
16:08 < nsno> GitGutter if you're using Git, Side Bar, Bracket Highlighter, and a nice theme :) that should sort you out initially anyway
16:08 < EaterOfCorpses> nsno, I got to eat now can you guide me through it when Im done eating? :)
16:08 < Bubo> sublimelinter ofc
16:09 < nsno> yeah g'wan, /query me when you're ready
16:09 < EaterOfCorpses> okay :)
16:09 < nsno> (i may have left work at that point, but i'll get back to you in the morning if you're still having bother :) )
16:09 < nsno> the pub is calling..
16:10 < kai> I'm a big fan of syntastic as well. for many of the languages I work in
16:11 < Bubo> what is syntastic exactly?
16:11 < Bubo> nevermind, too off-topic
16:11 < Bubo> ill googleit
16:13 < neeky> Bubo, a syntax checking plugin for vim - 
16:14 < neeky> with javascript, you enable jshint (and optionally jslint) and every save it lints your code
16:15 < neeky> It's unobtrusive and fits well with typical coding workflow
16:34 < simplegrid> anyone available to help me with this : http://knockoutjs.com/examples/grid.html
16:39 < werle> isaacbw: is there a preference for setting a node module method with `NODE_SET_METHOD` vs creating a new a function template?
16:49 < sinclair|net> anyone know if its possible to run a fork() dynamically generated code?
16:51 < bnoordhuis> sinclair|net: wut?
16:51 < bnoordhuis> (i like to use the word "wut")
16:52 < sinclair|net> bnoordhuis: well, instead of forking() out to start a node process based on a node script, rather, i want to generate that code and fork that instead
16:54 < sinclair|net> bnoordhuis: http://pastebin.com/1JWA5J8a
16:54 < sinclair|net> i actually have this working already
16:56 < sinclair|net> bnoordhuis: make sense?
16:56 < EaterOfCorpses> can someone tell me how to auto-indent/beautify in Sublime Text 2? 
16:56 < bnoordhuis> sinclair|net: oh, like that. you could store the code in a temp file or send it over with process.send() and eval/vm.runInContext it
16:56 < sinclair|net> bnoordhuis: i actually do that already
16:57 < kenperkins> bnoordhuis: did you ever see that post ?
16:57 < kenperkins> I sent it to you right
16:57 < sinclair|net> bnoordhuis: i send the child_process the code on a message, and it initializes it in a vm
16:57 < bnoordhuis> kenperkins: you did. i still have it open in a tab. want me to proof-read it?
16:57 < kenperkins> nah, I published it :D
16:57 < bnoordhuis> sinclair|net: okay. all good then?
16:58 < bnoordhuis> kenperkins: okay, nice :)
16:58 < sinclair|net> bnoordhuis: yes, its fine
16:58 < EaterOfCorpses> nsno, halp
16:59 < daslicht> how would you get rid of certain files when reading directory structures :
16:59 < daslicht> DIR:  { '0': 'about.js', '1': 'view' }
16:59 < daslicht> DIR:  { '0': 'chat.js', '1': 'view' }
16:59 < daslicht> DIR:  { '0': 'contact.js', '1': 'view' }
16:59 < daslicht> DIR:  { '0': '.DS_Store', '1': 'home.js', '2': 'view' }
16:59 < daslicht> this .DS_Store is evil
16:59 < kenperkins> just clean your .DS_Store files out with find
16:59 < daslicht> hm
17:00 < juho> but ds_store is so hipstery! https://github.com/emre/macster
17:01 < kenperkins> juho: LOL
17:01 < kenperkins> http://www.chrisnovoa.com/os-x-lion-ds_store-disabling/
17:01 < juho> the pic is perfect i think :)
17:01 < daslicht> http://nodejs.org/api/fs.html
17:01 < daslicht> where is that find documented?
17:02 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:02 < kenperkins> daslicht: bash find
17:02 < daslicht> ahh i thought using node
17:02 < kenperkins> http://danilo.ariadoss.com/how-to-recursively-remove-ds_store-files-on-mac-os-x/
17:02 < kenperkins> well, this is a dev box right?
17:02 < daslicht> what is stored in those files?
17:03 < daslicht> nope
17:03 < kenperkins> he .DS_Store files store Finder-specific preferences concerning the display of each of your folders
17:03 < daslicht> multimedia box
17:03 < daslicht> ok i use blueharvest 
17:03 < daslicht> i thought therer is something available in node to filer reads
17:04 < EaterOfCorpses> wat Sublime Text costs money o.o
17:04 < daslicht> :)
17:04 < daslicht> i wish livereload would work properly
17:04 < daslicht> mine is either crashing or not working at all
17:06 < daslicht> http://zeroonetwenty.com/blueharvest/
17:06 < sCoRpi> EaterOfCorpses: somehow developers need support, no?
17:06 < daslicht> +1
17:06 < EaterOfCorpses> sCoRpi, nope they dont :P I know but I thought it was free ;) just was suprised, because it looked pretty open source
17:08 < EaterOfCorpses> sCoRpi, and also my mum still dictates on my money so Im not really free in buying tools ;)
17:13 < neeky> Vim is free, unless you want to help starving kids in Uganda
17:14 < EaterOfCorpses> I cant get used to vim :c
17:14 < raduu> tell me about it :)
17:14 < raduu> it s painfull
17:15 < raduu> but it s supposed to help a lot on the long term..
17:15 < neeky> you've heard this 1000x, but "I was the same way until I forced myself to use it for a month"
17:16 < raduu> I have about 1 month of forcing myself now.. and I can say I m a bit more comfortable.. still looking for some magic configs that will boost me
17:16 < neeky> vim +pathogen, +solarized color scheme, +syntastic, +youcompleteme, +tmux, and you got a stew goin, baby!
17:16 < raduu> slow down
17:17 < neeky> and yeah, you CANT be a casual vim user, you do have to learn how it works to really enjoy using it
17:18 < daleee> +1 for carl weathers reference
17:18  * neeky tips hat
17:21 < neeky> raduu, #1, install pathogen - makes plugin management in vim so much better
17:21 < raduu> ok
17:21 < raduu> on it
17:23 < raduu> ok
17:23 < raduu> done, 
17:26 < bnoordhuis> neeky, raduu: fwiw, i don't use plugins at all, just a mildy tweaked .vimrc
17:26 < raduu> well
17:26 < raduu> what I basically want (or I think I want) is just some smart indentation for html / js / php / coffeescript
17:26 < neeky> bnoordhuis, I may get there, but there are some things I just need , like syntastic
17:26 < raduu> the rest I can cope with the defaults
17:27 < neeky> raduu, and vim-javascript plugin does a bang up job on indentation
17:27 < neeky> jhsinting my code on save = win
17:27 < bandroidx> hi, i am trying to install bower with npm (from ubuntu 12.04LTS) and am getting this error: http://pastie.org/private/daglvzsr4u9lazzfm0szwg
17:27 < bnoordhuis> raduu: :set formatoptions
17:27 < raduu> I never installed a plugin .. just copied .vimrc files :)
17:27 < bandroidx> is the node and nvm in ubuntu 12.04lts just too old?
17:28 < bnoordhuis> raduu: probably `:help formatoptions` first, it's pretty arcane :)
17:28 < dch> raduu: if you want to avoid learning vim (which you shouldn't) but http://www.activestate.com/komodo-edit is nice. The current 8.5 beta has better support for nodedebugging.
17:28 < bnoordhuis> bandroidx: what does `node -v` print?
17:28 < raduu> I don t want to avoid it.. If I wanted to I would be using eclipse
17:28 < raduu> slow down.. you ve already confused me:)
17:28 < neeky> if looking for a full ide, IntelliJ IDEA is a great one that supports node debugging now
17:28 < raduu> what does pathogen do 
17:29 < neeky> pathogen is a plugin loader
17:29 < bnoordhuis> raduu: it's a plugin manager
17:29 < raduu> ok, now I can install plugins. how?
17:29 < dch> what I like with komodo is that its all js under the hood. ripe for extensions.
17:29 < bandroidx> bnoordhuis: v0.6.12
17:29 < neeky> raduu, did you install pathogen?
17:29 < raduu> yep
17:29 < raduu> want to take this in private?
17:29 < bnoordhuis> bandroidx: yeah, that's pretty old. current stable is v0.10.12
17:29 < raduu> or you consider the info usefull for everyone
17:29 < neeky> and added pathogen.infect to your vimrc?
17:30 < bandroidx> bnoordhuis: should i remove ubuntu's version and use nvm?
17:30 < raduu> my .vimrc should be blank?
17:30 < bnoordhuis> bandroidx: yes
17:30 < raduu> I have a funky downloaded one
17:30 < raduu> :)
17:30 < bandroidx> bnoordhuis: thanks i will do that
17:30 < bnoordhuis> bandroidx: there's also a ppa
17:30 < bandroidx> oh
17:30 < bandroidx> for nvm or newer node?
17:30 < neeky> raduu, I recommend a brand new, empty .vimrc
17:30 < bnoordhuis> bandroidx: can't vouch for it, never tried it but it's chrislea's and it's usually pretty up-to-date
17:31 < bnoordhuis> bandroidx: for node, that is
17:31 < raduu> ok, added pathogen infect
17:31 < bandroidx> bnoordhuis: thanks i will give that a go
17:31 < neeky> and at the very top, put this: http://hastebin.com/bayiwejesu.vbs
17:32 < raduu> just did
17:32 < neeky> save .vimrc, and exit all vim sessions
17:32 < raduu> from the github docs
17:32 < raduu> ok
17:32 < neeky> ok, do you have a plugin you'ds like to install?
17:32 < neeky> syntastic maybe?
17:33 < neeky> raduu, hope over to #vim and I can walk you through there
17:33 < raduu> ok
17:33 < neeky> keep everything on topic, you know
17:33 < bandroidx> bnoordhuis: thanks that did the trick, got bower installed :)
17:33 < raduu> I cannot chat there for some reason
17:34 < bandroidx> actually it doesnt run lol
17:34 < bandroidx> it installed but i dont have bower
17:36 < bandroidx> ok i got it, i had to add -g to the install line
17:42 < AAA_awright> I'm getting a strange bug on master where Node.js is going into an infinite recursion/event calling loop while making an HTTP request and piping the contents to a file
17:42 < AAA_awright> Anyone see something like this?
17:47 < jasonkuhrt> I am encountering an error in my TLS client in a bi-directional authenticated setup
17:47 < jasonkuhrt> I am encountering an error in my TLS client in a bi-directional authenticated setup
17:48 < jasonkuhrt> and wondering what might be causing this error
17:48 < jasonkuhrt> Error: socket hang up
17:48 < jasonkuhrt> I'm pretty sure its related to the TLS setup because just prior the server was TCP without TLS and was working fine
17:49 < jasonkuhrt> but the error message does nothing to explain what I might be doing wrong in the TLS setup
17:50 < bnoordhuis> jasonkuhrt: try `export NODE_DEBUG="net tls"`
17:50 < jasonkuhrt> bnoordhuis: heh was just about to try that
17:52 < jasonkuhrt> bnoordhuis: https://gist.github.com/jasonkuhrt/30a8db7d2104d1bd32fb
17:52 < jasonkuhrt> ^ anyone familiar with TLS/net debug info that can point to the problem?
17:53 < jasonkuhrt> this part looks bad: https://gist.github.com/jasonkuhrt/30a8db7d2104d1bd32fb#file-session-L34-L36
17:54 < jasonkuhrt> ... NET: 17341 onread EOF undefined undefined NaN
17:54 < bnoordhuis> jasonkuhrt: looks like the server is closing the connection
17:54 < bnoordhuis> jasonkuhrt: does it happen with all tls servers or just one/some?
17:55 < jasonkuhrt> bnoordhuis: why do you say that (what gives it away to you?) -- what do you mean happen with all servers? currently I just have a local TLS server and client setup
17:55 < neeky> BOOM! my Amazon Web Services EC2+S3 bill for this month: $0.51
17:55 < jasonkuhrt> I created a Certificate Authority
17:56 < jasonkuhrt> and used that to sign the client's certificate request
17:56 < neeky> line 36
17:56 < jasonkuhrt> neeky: yes, but what does it mean exactly?
17:56 < jasonkuhrt> neeky: like how would you explain that to your dad
17:56 < jasonkuhrt> level
17:57 < neeky> i have no earthly idea :)
17:57 < bnoordhuis> jasonkuhrt: do you pass in the ca's cert with tls.connect({ ca: cert_as_string })?
17:57 < bnoordhuis> s/cert/ca chain/
17:57 < jasonkuhrt> bnoordhuis: yeah, I will update my gist sec
17:57 < Sly> Oh, speaking of certs and chains.
17:59 < jasonkuhrt> bnoordhuis: https://gist.github.com/jasonkuhrt/30a8db7d2104d1bd32fb
18:00 < jasonkuhrt> maybe I'm an idiot but after ~3 days TLS seems like an overcomplicated PITA so far
18:01 < jasonkuhrt> X.509 et al
18:02 < bnoordhuis> jasonkuhrt: can you connect with `openssl s_client`?
18:02 < jasonkuhrt> bnoordhuis: good idea will try
18:03 < bluepnume> What would be the simplest way to set up an email server in node, so I can send an email to whatever@localhost and catch the event in node?
18:04 <@isaacbw> set up postfix or something and use a node process as your delivery agent
18:05 <@isaacbw> bluepnume: ^
18:06 < jasonkuhrt> bnoordhuis: https://gist.github.com/jasonkuhrt/30a8db7d2104d1bd32fb#file-openssl-s_client-result
18:06 < jasonkuhrt> bnoordhuis: seems to be a clear NO, unless I screwed s_client arguments up
18:07 <@isaacbw> yo bluepnume you turd talk to me
18:08 < bluepnume> isaacbw: what?
18:08 <@isaacbw> I answered your question
18:08 <@isaacbw> let's talk about it
18:08 < bluepnume> isaacbw: yeah, thanks for the advice, just doing some googling based on what you suggested
18:08 <@isaacbw> MAKE ME FEEL SPECIAL
18:09 <@isaacbw> well, email stuff is really stupid and hard to research
18:09 <@isaacbw> on the web at least
18:10 < bnoordhuis> jasonkuhrt: looks like it. i'd check the certs, e.g. if cacert.pem contains the right cert
18:10 < brianseeders> Anyone do twitter streaming api consumption with node?
18:11 < darkPassenger> tu use express with mongodb , should I just declare and use the database in the routes or should I put anything in app.js or both ? 
18:11 < darkPassenger> i really just wanna setup express app so i can use mongodb in the routes
18:13 < sinclair|net> bnoordhuis: can you help me with something?
18:17 < sinclair|net> bnoordhuis: fs.createReadStream('./filename.txt')
18:17 < jasonkuhrt> bnoordhuis : https://gist.github.com/jasonkuhrt/30a8db7d2104d1bd32fb#file-server-session-debug-info
18:18 < sinclair|net> bnoordhuis: the magic bit being the './filename.txt'
18:18 < jasonkuhrt> bnoordhuis: added debug info for the server-side, you said the connected was being closed by the server, so I assume something here will show that
18:18 < sinclair|net> bnoordhuis: my question is, how do i change the working directory?
18:18 < sinclair|net> in fact, does anyone know this?
18:20 < sinclair|net> ok, i got it, process.mainModule.filename
18:21 < sinclair|net> so, i guess my question is, is it a good idea to manually change this?
18:23 <@isaacbw> er
18:23 <@isaacbw> you just want to change the current working directory?
18:23 <@isaacbw> process.chdir
18:23 < sinclair|net> isaacbw: hi
18:24 <@isaacbw> in the dos: "Changes the current working directory of the process"
18:24 <@isaacbw> *docs
18:24 < sinclair|net> oh...
18:24 <@isaacbw> lol :P
18:24 < sinclair|net> isaacbw: what does this actually do tho?
18:25 <@isaacbw> probably just http://linux.die.net/man/2/chdir
18:25 <@isaacbw> and maybe some internal path maintenance
18:25 <@isaacbw> maintenence
18:25 <@isaacbw> er
18:25 <@isaacbw> maintenance
18:25 < sinclair|net> mm
18:25 < sinclair|net> changing process.mainModule.filename does the trick tho
18:26 < sinclair|net> what however its being handled behind the scenes, it seems to be working on the filename
18:26 <@isaacbw> most of the core api is just wrappers for system calls
18:26 <@isaacbw> well, don't do that :P
18:26 < jasonkuhrt> is this bad?
18:26 < jasonkuhrt> NET: 17998 onread EADDRINUSE 5360 35 5395
18:26 <@isaacbw> you're just asking for it to mysteriously break on an update
18:26 < osnr> hey all â€” I'm running .load for a js file in the node repl, then getting errors on that file's lines that start with dots â€” looks like the REPL is reading them as commands? http://pastebin.com/svYSxkrc am I doing something wrong / is this a bug?
18:26 < jasonkuhrt> my TLS server is showing that in debug logs
18:27 <@isaacbw> jasonkuhrt: terrible
18:27 < kenperkins> RIP http://clipboard.com :(
18:27 <@isaacbw> your computer is ruined
18:27 < jasonkuhrt> isaacbw: heh, and what about my server?
18:27 <@isaacbw> kenperkins: yay for exits?
18:27 <@isaacbw> jasonkuhrt: it's turning to stone
18:28 < kenperkins> isaacbw: I guess.
18:28 < sinclair|net> isaacbw: chdir doesn't work
18:28 < kenperkins> happy for my former colleagues but still sad to see 2 years of blood, sweat, and node to just go away
18:28 <@isaacbw> why can't companies buy startups and just hire a team to keep them going
18:28 <@isaacbw> :C
18:29 < sinclair|net> isaacbw: im pretty sure that its resolving the relative path from the filename
18:29 < kenperkins> i might have stayed if they kept it going
18:29 < kenperkins> but when I new they were shutting it down it made keeping on with the new rackspace gig more interesting
18:29 < kenperkins> knew rather
18:30 <@isaacbw> ah well, so is the fate of most startups
18:30 <@isaacbw> hopefully things start to change soon and we don't shut down so many good products
18:30 <@isaacbw> it's getting a bit tiresome
18:31 <@isaacbw> even google can't keep viable products running :P
18:33 <@isaacbw> or at least the culture of exits should change from a convoluted hiring scheme
18:33 < kenperkins> burn
18:42 < neeky> jasonkuhrt, EADDRESSINUSE usually means something is already bound to that address:port combination
18:43 < jasonkuhrt> neeky: naturally, I am seeing "NET: 18281 onread EADDRINUSE 3200 130 3330" all over the place, but have no idea if its meaningful or not
18:45 < neeky> check your process list, you probably have zombie copies of your app hung
18:45 < neeky> keeping the port open
18:46 < neeky> Are you on linux?
18:47 < maaarghk1> hey, guys
18:47 < maaarghk1> I am writing my first node app today
18:47 < maaarghk1> Just wondering if somebody could tell me if I am doing things the right way? This is my first in-app lib called database:
18:48 < maaarghk1> http://pastebin.com/GemLm3XG
18:49 < darkPassenger> damn
18:50 < neeky> maaarghk1, my one piece of advice is accept a callback as an argument to connect
18:51 < maaarghk1> neeky: good shout, cheers. :)
18:51 < neeky> so in the app that uses this lib, if connect succeeds, you do stuff in the call back.
18:51 <@mbalho> maaarghk1: instead of console.log(err) you should return callback(err)
18:51 < Aartsie> is there a place to read about new node.js projects and more node.js news ?
18:51 < maaarghk1> mbalho: also good, thank you!
18:52 <@mbalho> maaarghk1: also for style considerations https://github.com/felixge/node-style-guide#nodejs-style-guide
18:52 <@mbalho> maaarghk1: on callbacks usually the first argument is an error and the rest of the arguments are the response data
18:54 < maaarghk1> mbalho: thanks. I will stick to tabs though ;D
18:54 < neeky> i use 3 spaces, and with modern monitors and resolution, 100 character lines
18:54 < neeky> booo tabs
18:55 <@mbalho> maaarghk1: no worries, style is a personal choice
18:55 < maaarghk1> neeky: I am on a 13" LCD which is 1080p. I never get line widths right :P
18:56 < maaarghk1> Fixed width websites are also my worst enemy... half of them end up 3 inches wide :P
18:56 < neeky> heh - same with me and tabs 
18:56 < maaarghk1> not quite, but... y'know :P
18:58 < schuranator> how would I go about adding Request header field X-Requested-With is not allowed by Access-Control-Allow-Headers.  to my expresstrain project
19:02 < AAA_awright> neeky: 3-space tabs
19:02 < AAA_awright> Tab characters please
19:02 < jden> pilcrows please
19:03 < neeky> tomato, tomato
19:03 < AAA_awright> Not everyone wants 3 spaces, I think we're fairly unique. Tab characters let you do that. And then you don't have to muck around with highlighting exactly a certain number of spaces, you can't accidently highlight 2/3rds a tab character after all.
19:04 < nathanjosiah> Can somebody with net.Socket experience take a look at a question of mine over on Stack Overflow: http://stackoverflow.com/questions/17455772/referencing-nodejs-net-sockets-outside-of-the-connection-context
19:07 < EaterOfCorpses> nathanjosiah, but this just works right?
19:08 < nathanjosiah> EaterOfCorpses, It technically works in the environment that I am in but it seems like it would be unstable. Also, it doesn't seem like that would work in an environment where the sockets are stored remotely in something like Redis. 
19:08 < EaterOfCorpses> but it cant be put in redis
19:09 < EaterOfCorpses> what about creating a random id and then having a object like {socket:socket,id:MYRANDOMUNIQUEID}
19:10 < EaterOfCorpses> and then you loop through the array and search for the id
19:10 < EaterOfCorpses> its a bit slower
19:10 < EaterOfCorpses> but it cant die from sorting
19:10 < pachet> nathanjosiah there's nothing intrinsically wrong with the approach you have listed
19:10 < EaterOfCorpses> or you can do {RANDOMID:socket}
19:10 < pachet> it needs a little love to get it to where it feels maintainable and composable, but its valid
19:11 < EaterOfCorpses> patchet is right
19:11 < EaterOfCorpses> or maybe left-handed I dont know tbh
19:11 < pachet> whatever's best this time of year
19:11 < EaterOfCorpses> ^^ 
19:11 < nathanjosiah> Taking the approach I have, I would end up with something more along the lines of {RANDOMID: socket}
19:12 < sinclair|net> crazy crazy question...
19:12 < EaterOfCorpses> I think that is the most clean way to do it yeah
19:12 < sinclair|net> is it possible to unload a vm?
19:12 < nathanjosiah> Ok, well then I'll use the approach that I have submitted.
19:12 < nathanjosiah> Thank you!
19:12 < EaterOfCorpses> np 
19:15 < sinclair|net> hmm, is it possible to destroy a vm.Context?
19:15 < bnoordhuis> sinclair|net: no, they get gc'd
19:16 < sinclair|net> bnoordhuis: so, setting it to null should be enough?
19:16 < pachet> unless that vm is happily crunching a forever loop
19:16 < pachet> see the optional timeout argument
19:17 < sinclair|net> pachet: timeout argument?
19:17 < bnoordhuis> only in master
19:18 < pachet> https://github.com/joyent/node/commit/c081809344bd6e35c49a1c573b954583c0e3a27d
19:18 < pachet> ive never had to use it
19:18 < pachet> here be dragons etc
19:19 < bnoordhuis> pachet: no dragons. they're too scared
19:19 < pachet> lol
19:20 < AAA_awright> WOA there's a timeout argument now?
19:20 < AAA_awright> Schweet
19:22 < sinclair|net> pachet: how would you even know that exists ?
19:22 < pachet> esp
19:22 < pachet> or watching commit history
19:22 < sinclair|net> pachet: i was about to say...
19:23 < sinclair|net> pachet: watching it like a hawk it seems
19:23 < sinclair|net> pachet: nice one tho
19:28 < samholmes> WHy is redistogo so expensive?
19:30 < neeky> sinclair|net, you can subscribe to git commits for node
19:30 < sinclair|net> neeky: i wouldn't have time to read through them
19:30 < sinclair|net> nice to know tho
19:30 < neeky> yeah, me neither
19:30 < neeky> some apps have a gitbot that /msgs the #room on commits
19:31 < neeky> #mongoosejs does that
19:31 < sinclair|net> neeky: i was shocked that pachet could recite that specific thing
19:31 < neeky> heh
19:32 < pachet> i have a bit of a vested interest in the vm module, to downplay the mysticism a bit
19:32 < pachet> so i watch those commits a bit more closely
19:32 < pachet> just realized i said 'bit' three times in two lines
19:35 < cramrod> Help! Im trying to parse jpegs out of a 'multipart/x-mixed-replace' mjpeg stream.  Whats the most efficient way to buffer all the individual packets then extract only the image data?  
19:35 < sinclair|net> pachet: oh?
19:36 < sinclair|net> pachet: what things are you doing with vm?
19:36 < bnoordhuis> neeky: node/libuv commits get posted to the channel
19:36  * sinclair|net has decided its ok to dynamically compile code on the fly
19:37 < sinclair|net> well, its ok....for now... <_<    >_>
19:37 < pachet> sinclair|net game stuff
19:37 < sinclair|net> bnoordhuis: being able to spin up a child_process for compilations is such a nice thing
19:37 < pachet> right now i isolate game instances in separate processes but there's a lot of overhead
19:38 < sinclair|net> pachet: oh?
19:38 < sinclair|net> that sounds kinda neat
19:40 < pachet> yeah the big thing is that right now i do a lot of scalable ai, so as much memory as i have left over i can put towards doing computations on packets representing game state
19:40 < pachet> right now the packets are stateless blobs of data that just get pushed into a native module
19:41 < sinclair|net> pachet: interesting
19:41 < pachet> but if the vm module gets to a point where i feel comfortable using it i could have different contexts holding different portions of game state
19:41 < pachet> right now all the logic is deterministic, and the game server has to rangle the raw output back into the right context
19:41 < sinclair|net> pachet: there is quite a bit of overhead using node to manage game state tho
19:42 < sinclair|net> those v8 instance aint cheap
19:42 < pachet> well less overhead than if i was doing the math in js
19:42 < sinclair|net> pachet: btw, have a look see at this .. http://pastebin.com/HeDfJ3KA
19:42 < pachet> right now node is really just the glue between the sockets and the native runtime modules
19:43 < sinclair|net> pachet: im quite proud of that actually
19:45 < sinclair|net> pachet: basically, i am able to script a small kernel to get queued in a background process (just a child_process)
19:45 < sinclair|net> pachet: without actually having to deal with any of the plumbing 
19:45 < pachet> oh, thats neat
19:45 < pachet> queued in the evloop for that process you mean?
19:45 < sinclair|net> yeah
19:45 < amph1bius> sinclair|net: what does that do ?
19:46 < sinclair|net> pachet: so, compilations take a while, (3 seconds or more)
19:46 < sinclair|net> pachet: basically, i push the work out to be queued in a worker process, and let the main web process carry on as if nothings working like crazy :)
19:46 < pachet> heh
19:47 < sinclair|net> pachet: also, i get compile time checking on the kernel too, and use generics to type the kernel input and output
19:47 < sinclair|net> which is really nice :)
19:48 < pachet> pretty cool
19:48 < sinclair|net> pachet: its all going open source eventually
19:49 < windsurf_> looking for a good secure solution:
19:49 < windsurf_> I am building a RESTful JSON service with node that will support a mobile app. The mobile app will let users authenticate via Facebook. I've already got the FB OAuth token back from FB. How should the mobile app prove to my node service that it is in fact auth'd with FB?
19:50  * pachet just read back over his last 10 messages and saw that 'right now' appears 5 times...
19:50 < eddiemonge> shouldnt your mobile app prove that it is auth'd with your service? and your service auth to fb?
19:51 < windsurf_> eddiemonge:  i don't know, should it? 
19:51 < windsurf_> eddiemonge: wouldn't the user need to create a separate account for that?
19:52 < eddiemonge> seems kind of odd having two different login mechanisms
19:53 < windsurf_> i don't see how what you said solves that
19:54 < windsurf_> ideally i could just log into fb from the mobile app, get the auth token, share that auth token and FB userid with my web service and the web service could pair that with an internal account id, but that seems weak security wise 'cause anyone could POST a random auth token string and FB id
19:54 < eddiemonge> i mean two different logins not connected to each other. normally, the fb login connects to your backend to create/associate the user
19:55 < windsurf_> in the grand scheme, i need to let users authenticate with whatever suits them, FB, Twitter, Google. But the fundamental question remains â€“ which party does the auth and then how to share that info. 3 parties: FB server, mobile client and business web server
19:56 < windsurf_> the goal is mostly to identify the user for custom experienceÂ â€“ if they auth with FB there could be other FB-specific actions they could take vs twitter/googleâ€¦ but that's an extra feature/topic
19:57 < eddiemonge> in the success callbacks from those, you should be passing in some unique identifier for your user so you can match all those accounts to the same user in your system
19:57 < eddiemonge> so the user is logged into your system via your mechanism and they are logged in to other systems via their tokens, that you should be saving into their account
19:57 < windsurf_> like, pass the FB hid and auth token to my own server, my own server responds with an internal user id?
19:58 < eddiemonge> something like that
20:00 < windsurf_> eddiemonge: but if i put my hacker hat on, I could just figure out a FB id of someone else, create a random (invalid) auth token string and post that to the server and it would give me back the user id for the correlated user. There's no verification step
20:00 < eddiemonge> ok but that doesnt get you into that person facebook account
20:00 < windsurf_> again, i don't want the user to have to create a separate account just for my server so I can't auth with my server using a separate set of credentials
20:01 < windsurf_> eddiemonge: trueÂ  but it lets you do things with the app content-wise impersonating someone else.
20:01 < windsurf_> any content that's exclusive to my own server
20:04 < bdiu> Btw, here's a link to the job posting for my company in Bloomington, Indiana: http://workable.com/j/4C1F3D7117
20:06 < windsurf_> ok. i have the answer to my question. The OAuth token is all i need to give my server. With that my server can freely act on behalf of the user who received that token on my mobile app. 
20:20 < liquid-silence> guys, I am developing a rest api. and thinking nodes + express + mongodb
20:21 < r04r> liquid-silence: If you only want rest, maybe restify? https://npmjs.org/package/restify
20:26 < jasonkuhrt> bnoordhuis: fixed the s_client problem with this https://gist.github.com/jasonkuhrt/30a8db7d2104d1bd32fb#file-server-js-L7
20:27 < darkPassenger> what does put contain ? 
20:27 < jasonkuhrt> bnoordhuis: the server had to be made aware of the CA being used by the client, which *happens* to be the same as as the CA the server uses, but that is inconsequential and the server must *still* be made aware of the clients custom CA
20:27 < jasonkuhrt> bnoordhuis: unfortunately if you look at the gist you will see the nodejs client is *still* failing, with different errors than before though
20:33 < jdc0589> has there every been discussion on adding npm project root support to require using a tilde prefix or something EG: require("~/foo/bar")  ?  (may have said this a minute ago. IRC client was having issues)
20:34 < darkPassenger> i mean
20:34 < darkPassenger> is there a body just as in a post
20:34 < bnoordhuis> jasonkuhrt: ECONNREFUSED means, well, connection refused
20:34 < bnoordhuis> jasonkuhrt: that's at the tcp level btw, not the tls level
20:35 < jasonkuhrt> bnoordhuis: https://gist.github.com/jasonkuhrt/30a8db7d2104d1bd32fb#file-openssl-s_client-result-L5 isn't that bad?
20:35 < jasonkuhrt> bnoordhuis: 1 is an exit code indicating an error?
20:37 < neeky> darkPassenger, the differences are really semantic 
20:38 < neeky> a POST with an ID in the Request URI is requesting that body become a child of the resource identified in the URI
20:38 < neeky> and PUT asks the server to update the resource identified by the URI with the data
20:39 < neeky> i only know this arcane crap because I just did it and wanted to follow the rules
20:39 < neeky> so I treat a POST a CREATE in crud lingo, and PUT as UPDATE
20:40 < neeky> the structure of the request is identical
20:41 < neeky> so in my case if you do a POST to /api/resource/1234, i ignore 1234 and just create a new resource
20:43 < raduu> how can I find out the cause of a { [Error: read ECONNRESET] code: 'ECONNRESET', errno: 'ECONNRESET', syscall: 'read' }
20:43 < raduu> sniff the packages? what to look for? longjohn? 
20:43 < raduu> wireshark
20:43 < raduu> netstat
20:45 < MrDHat> I want to 'assert' if the crypto bytes I recieved are of 32 bytes in base64, how do I do it using the assert module?
20:45  * MrDHat is a noob at writing tests
20:45 < jdc0589> raduu: can you telnet to the ip/domain and port successfully?
20:46 < raduu> yes
20:46 < bnoordhuis> jasonkuhrt: no, verify=1 means verification succeeded :)
20:46 < jasonkuhrt> bnoordhuis: Ah good : )
20:47 < raduu> jdc0589, what next?
20:50 < jasonkuhrt> bnoordhuis: https://gist.github.com/jasonkuhrt/30a8db7d2104d1bd32fb#file-client-session-debug-info-L39
20:50 < jasonkuhrt> bnoordhuis: solved the silly ECONNREFUSED error, back to square 0
20:50 < jdc0589> raduu: how are you trying to connect now? I would try using a TCP connection  next from node and see if that works.
20:51 < jasonkuhrt> bnoordhuis: except the difference now is s_client works : /
20:51 < jasonkuhrt> bnoordhuis: so less leads than before, geez
20:51 < raduu> so set up a node client 
20:52 < raduu> and what do I try with it?
20:52 < EaterOfCorpses> any of you guys use nano? 
20:52 < EaterOfCorpses> I got a question about that D:
20:52 < jdc0589> raduu: yea. have a look at the net module and see if you can just establish a connection successfully
20:55 < Freze> question for node.js pros. So I understand that node runs on a single thread but to the callbacks get executed on worker threads? Or do they get pushed to be exectued on the main thread after the main thread is waiting?
20:55 < Freze> !help
20:55 < EaterOfCorpses> Freze: some are on done on other threads and some in the event loop afaik
20:55 < algesten`> Freze the latter is closer to what's happening.
20:56 < raduu> jdc0589, and then I try to twist and turn it in order to crash my server?
20:56 < Freze> The latter? wow wouldn't that result in horrible performance compared to a thread pool and worker threads
20:56 < Freze> that execute the callbacks and return results to the main loop?
20:58 < jdc0589> Freze: no. memory sharing threads incurr a lot of overhead and all we really have in V8 is Fibers, which are pretty heavy weight. Are you familiar with the event loop concept at a high level?
20:59 < algesten`> Freze therein lies the beauty. typically worker threads are just stalled in waiting on IO anyways. and for those few cases where they do nice computational work, you use something other but nodejs.
20:59 < Freze> jdc0589, I was thinking more along the lines of how an operating system schedules tasks. I thought that node was operating on the same conceptual level
21:00 < algesten`> Freze are you thinking about how things are handled underneath?
21:00 < Freze> algesten`, yeah
21:02 < Freze> i.e. for light tasks I guess the node.js way is efficient for servers that don't have a lot of horsepower. But why not schedule like an OS in the first place? instead of having the callbacks execute on the main thread were the block
21:02 < jasonkuhrt> If anyone can analyze why TLS client is failing with "Error: socket hang up" I would be much appreciated https://gist.github.com/jasonkuhrt/30a8db7d2104d1bd32fb#file-client-session-debug-info-L39
21:02 < algesten`> Freze there are threads. any library you link to may have threads. 
21:02 < jasonkuhrt> I've been on it all afternoon and after finding a few issues, still cannot get the client to successfully connect
21:03 < jasonkuhrt> nevermind
21:03 < jasonkuhrt> thanks
21:03 < Freze> algesten`, sorry maybe I didin't say what I mean when you asked how things are handled underneath
21:04 < Freze> meant**
21:04 < Freze> about how things are running underneath
21:04 < darkPassenger> is there such thing as req.body.length ? to determine the number of parameter passed in a request ? 
21:06 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
21:06 < algesten`> Freze confusion all around :) â€¦ your code runs in a single thread. if you busy wait like this "while (true) {}" â€“ your code won't do anything more. ever. however a linked library having threads will continue. but it won't be able to callback to your code again. 
21:07 < Aartsie> is there any nodejs news website ? 
21:09 -!- mode/#Node.js [+o xyxne] by ChanServ
21:09 < MrDHat> How do i check for the size of a crypto key in my tests using assert?
21:10 < Freze> algesten, yeah I guess I will do some more digging in.
21:14 < FunnyLookinHat> Anyone know if there's a deep-copy function available somewhere similar to this? http://underscorejs.org/#clone
21:14 < FunnyLookinHat> i.e. copy-by-value on nested objects
21:15 < FunnyLookinHat> Ah - _.extend
21:16 < brainproxy> FunnyLookinHat: lodash has a deepClone
21:16 < brainproxy> it covers a lot of bases
21:16 < FunnyLookinHat> braincrash, ah - didn't know about lodash - I'll have to check it out - thanks!
21:17 < brainproxy> sorry, it's cloneDeep
21:17 < brainproxy> http://lodash.com/docs#cloneDeep
21:18 < Havvy> If you've never written a deep clone function in JS, you should do it at some point.
21:18 < brainproxy> if you're doing a lot of cloneDeep as way of working around mutability in the face of complex control flow, consider using persistent data structures
21:18 <@mbalho> var deepClond = function(obj) { return JSON.parse(JSON.stringify(obj)) }
21:18 < brainproxy> mbalho: um no
21:18 <@mbalho> deepClone* :P
21:18 <@mbalho> it works!
21:19 < brainproxy> Havvy: yes, or at least working through lodash's impl, which is a learning exercise to be sure
21:20 < brainproxy> anyway, re: persistent data structures, take a look at mori
21:20 < brainproxy> http://swannodette.github.io/mori/
21:21 < FunnyLookinHat> EaterOfCorpses, oh btw - forgot to mention from earlier - doing writestream.end(string) functions almost exactly the same as .pipe() - as it sends the string and immediately closes the stream
21:22 <@konobi> anyone know of any bash libraries for dealing with JSON (printing mainly)
21:22 < EaterOfCorpses> FunnyLookinHat, does .pipe(string)work then?
21:22 < FunnyLookinHat> EaterOfCorpses, I didn't try because the spec called for a readstream
21:22 < EaterOfCorpses> you can disable it btw, by .pipe(target,{die:false}) afaik
21:23 < FunnyLookinHat> Oh but I wanted it to close :)
21:23 < EaterOfCorpses> great ;)
21:34 < polyrhythm> tried at #passport.js but nobody active: anybody know how to serialize more than one field with passport?
21:35 < polyrhythm> example function is done(null, user.id) where the second argument gets serialized
21:35 < polyrhythm> i want to serialize userid and user email
21:38 < wraithgar> the second argument *is* the serialized version.
21:38 < wraithgar> polyrhythm, 
21:39 < wraithgar> iirc that can be anything.
21:39 < wraithgar> though typically it's just an ID cause serializing/deserializing involves some sort of id lookup in wherever the user object is stored.
21:39 < wraithgar> if that makes sense
21:40 < SemirSabic> Hi I'm new here, is there anyone who used inbox api to connect to gmails imap server 
21:41 < polyrhythm> yeah, the problem is i need client-side access to a user's email so i figured the session would be a good way to retrieve it
21:41 < polyrhythm> vs doing a back-end call to retrieve it
21:44 < SemirSabic> I am getting UNABLE_TO_VERIFY_LEAF_SIGNATURE when try to connect to imap.gmail.com, anyone seen this?
21:44 < apipkin> Is there a way to update a console log? I'm wanting to create a spinner while it's running in the background by using â€” \ | /  but I want to not flood the screen. is that possible? or is it better to just console.log('.') while running in the background
21:47 <@mbalho> apipkin: check out readline in node core
21:47 < apipkin> mbalho: awesome thanks!
21:49 < AAA_awright> apipkin: process.stdout.write with ANSI escape sequences
21:50 < AAA_awright> Save cursor and unsave cursor is perhaps the best way of updating a progress bar and spinner
21:50 <@mbalho> AAA_awright: ooh do you have a code snippet that does that?
21:51 < apipkin> AAA_awright: yeah i'd be happy to see that :)
21:52 < AAA_awright> mbalho apipkin: Try this on your shell: node -e "setInterval(function(){ process.stdout.write('\x1B[s'+Math.random()+'\x1B[u'); }, 1000)"
21:52 < apipkin> O_O
21:52 < apipkin> That's awesome!!
21:52 < apipkin> Thank you soooo much!!
21:53 < DevMonk_> hi guys! just a quicky: is there any reason nowadays to use the 32bit version of node for new projects?
21:53 < bnoordhuis> DevMonk_: the 32 bit version uses a little less memory
21:53 < DevMonk_> (if so, where can I read about those?)
21:53 < DevMonk_> okay
21:53 < AAA_awright> apipkin: There's other escapes that do slightly different things... If you're printing anything than a spinner, like my numbers, you probably also want to clear the line
21:53 < AAA_awright> *other than
21:54 < AAA_awright> http://www.termsys.demon.co.uk/vtansi.htm
21:54 < bnoordhuis> DevMonk_: don't ask me to quantify/qualify that though, the answer is 'it depends' :)
21:54 < AAA_awright> And \033 or \x1B is the escape character
21:54 < DevMonk_> that's fine
21:54 < apipkin> AAA_awright: what's the difference between \033 and \x1B ?
21:54 < DevMonk_> thank you. but is it also faster, given that the ram is not an issue?
21:55 < AAA_awright> apipkin: I think the \0 syntax is deprecated, it's octal notation, versus hexadecimal
21:55 < bnoordhuis> DevMonk_: the simple answer is 'no'. the more complex answer is 'sometimes, sometimes not'
21:55 < DevMonk_> thanks a lot!
21:55 < nathan7> "if you have to ask, no"
21:55 < DevMonk_> I'll experience with when needed
21:55 < apipkin> AAA_awright: these are the little things I missed by having my nose in an HTML + JavaScript book the past 15 years haha This is fantastic!
21:55 < bnoordhuis> DevMonk_: in everyday use you'll be hard-pressed to find a measurable difference
21:56 < AAA_awright> apipkin: Because it's really shell scripting, people haven't traditionally used JavaScript for shells
21:57 < apipkin> I just found out yesterday that I could :)
21:57 < bnoordhuis> AAA_awright: neither have invertebrates, they normally use calcium
21:57 < AAA_awright> lol
21:57 < bnoordhuis> oh, _that_ kind of shell
21:58 < stigdreyer> Is there a way to read two streams at the same time and to use data from both to calculate a value?
21:58 < DevMonk_> bnoordhui: my boss just found some 2 years old comment somewhere where it was stated that v8 is slower on 32bit and it seems hard to find more up-to-date opinions about it...
21:59 < bnoordhuis> DevMonk_: no, it was the other way around back then. x64 was slower because it didn't have the optimizing compiler (crankshaft)
22:00 < Beg_> idiotproof>flexibility?
22:00 < bnoordhuis> actually, that's more like three years ago now
22:00 < AAA_awright> apipkin: Actually this is better... process.stdout.write('\x1B[s'); setInterval(function(){ process.stdout.write('\x1B[u'+Math.random()+'\x1B[K'); }, 1000)
22:00 < AAA_awright> apipkin: That saves the cursor position, then whenever it writes text, it restores the cursor to the saved position, then clears the remainder of the line
22:01 < DevMonk_> bnoordhui: yeah, that's what I meant, it's getting late here :)
22:02 < apipkin> AAA_awright: that's very cool :)
22:02 < DevMonk_> bnoordhui: but now I can tell him that we'll use x64 and will experiment with performance, should it ever become necessary...
22:03 < Discordian93> I need some help, I'm trying to run a script to write a string to a file but it won't work, depsite node apparently working
22:04 < neeky> Discordian93, you're going to have to hastebin some code
22:05 < neeky> to see what you are attempting to do
22:05 < Discordian93> It's for a coursera class, so i don't wanna show the coe or I might be cheating :S
22:06 < Discordian93> I guess a snippet is okay though
22:06 < neeky> well, any code you see would be cheating by that standard
22:06 < jesusabdullah> tmpvar: Do you live in Phoenix? I don't remember
22:06 <@MI6> joyent/node: Trevor Norris master * 278183a : {stream,udp,tls}_wrap: remove unused offset/length (+2 more commits) - http://git.io/PZM7IQ
22:07 < neeky> Discordian93, straight from the node docs: http://nodejs.org/api/fs.html#fs_fs_writefile_filename_data_options_callback
22:07 < neeky> have you tried that code?
22:07 < jayz> #Discordian93 - fs.writeFile(path, file_contents, function(error) {} - although agree with neeky here.
22:08 <@MI6> joyent/node: Jeff Barczewski master * 26ca7d7 : stream: objectMode transform should allow falsey values - http://git.io/J3x99Q
22:09 < jdelgado> Discordian93: I'm going to report you! You cheater! :)
22:10 < jdelgado> That was sarcasm by the way, for everyone whom lacks it.
22:10 < Discordian93> Hey! I'm just trying to figure out some bizarre technical glitch, I did the programming assignement just fine, it wa spretty trivial
22:10 < Discordian93> http://pastebin.com/YUU5e8fg
22:10 < Discordian93> there
22:11 < Discordian93> the actual assignement is replaced by a comment, shouldn't matter
22:11 < Discordian93> the problem's not there
22:12 < jdelgado> Your path might be wonky depending on your OS
22:12 < jdelgado> I'd do an absolutely path
22:12 < jdelgado> absolute* I have no idea how that extra "ly" got in there.. lol
22:12 < apipkin> AAA_awright, mbalho: Here's the spinner code if anyone wants it https://gist.github.com/apipkin/5923314
22:13 < apipkin> using spinner.timer = setInterval(spinner.fn, spinner.speed);
22:13 < apipkin> It could be packaged up nicely, but that's what I have now :)
22:14 < Discordian93> any clue what could be happening? The console logs it as out being correct and having written it to primes.txt, but then it doesn't work
22:16 < AAA_awright> apipkin: https://gist.github.com/Acubed/5923322 just so you're not changing an array
22:16 < jdelgado> Discordian93: Read what I just wrote
22:16 < sinclair|net> https://www.youtube.com/watch?v=lp_PIjc2ga4 <- epic
22:16 < Discordian93> it's not my OS
22:17 < Discordian93> doesn't work on either a remote server or in my local machine
22:17 < apipkin> AAA_awright: that's a good point. not something I was worried about, but I like it :)
22:17 < Discordian93> it's something about the way node writes to files
22:17 < jdelgado> Discordian93: Read all of it
22:17 < jdelgado> sinclair|net: lmao!
22:17 < Beg_> Is there anything that could go wrong when comparing dates of the format yyyy-mm-dd?
22:17 < Beg_> String**
22:18 < jdelgado> Beg_: Timezones
22:18 < Discordian93> how do i do an absolutely path?
22:18 < Beg_> thanks, but not something i would mind jdelgado
22:19 < jdelgado> Beg_: Right on, timezones always mess me up. :)
22:19 < Beg_> I am suprised tough, I was just trolling around with meteor and learning, now 2 days later I am almost done with a project for a company
22:19 < Discordian93> solved it, it was a silly problem
22:19 < jdelgado> Beg_: That is scary lol
22:20 < Beg_> jdelgado-> you are american i imagine?
22:20 < Discordian93> I was simply writing to the file before I had forme dthe string with the primes
22:20 < jdelgado> Beg_: Yes sir
22:20 < Discordian93> thanks anyway! bye!
22:21 < Beg_> jdelgado-> ah, europe here, we have a maximum of +/- 1 here, and i am only making the page for swedish use, so it's only one timezone
22:21 < jdelgado> Beg_: Heh, we have international applications. It's really fun making everything sync up.
22:21 < Beg_> :DDDDDD
22:21 < jdelgado> lol
22:22 < Beg_> do you take in consideration einsteins theory of relativity? or does that only apply to moving objects?
22:23 < Beg_> according to einstein everything has it's individual clock or something weird along those lines :s
22:23 < jdelgado> Beg_: lol honestly, I wrote a physics engine when I was in college that used that theory
22:24 < Beg_> 8 days left until i know what university i am headin to!
22:24 < Beg_> (IF I EVEN ENTER ONE)
22:24 < jdelgado> Beg_: Meh, College doesn't really help developers in America, how is it over there?
22:25 < Beg_> i imagine it being the same, but I will study for myself, only use the time to develop my skills and get a paper certificate to show my future bosses..
22:26 < jdelgado> Beg_: Yeah, I own all the businesses I work for, soooo I don't have to deal with that BS. :)
22:26 < Beg_> I did a intro course, completed it in a couple of hours, only reason it took that long was because the answers were based on obscurity
22:26 < Beg_> in highschool i aced all courses
22:26 < Beg_> programming learning system is garbage
22:26 < Beg_> or i am supernatural
22:26 < Beg_> but i don't believe so
22:27 < jdelgado> The only real way to learn programming is through logic, you either have it or you don't... then past that it is just memorizing the commands.
22:27 < Beg_> ^
22:27 < Beg_> I fringe when people ask me, what language do you program in..
22:27 < Beg_> I answer any, depends on my needs
22:27 < krainboltgreene> "You have it or you don't", haha, how pompous.
22:27 < jdelgado> indeed
22:29 < Beg_> but javascript is so nice, i love how simple it is, removes so much "freedom" by making it optional rather than a requirement.
22:29 < neeky> Ahh ansi codes to animate the terminal - old is new again... /pines for the bbs days
22:29 < apipkin> It worked! It worked! I get to finally take days off for the holiday! 
22:29 < apipkin> Thanks so much to everyone for their help!!
22:30 < Beg_> np 
22:30 < jdelgado> krainboltgreene You either have a logical mind, or you have an artsy mind... That's basic psychology.
22:30 < jdelgado> Beg_: indeed
22:31 < jesusabdullah> tmpvar: I ask cause I have a job lead with some industrial engineer dudes in Glendale
22:31 < Getzel> Hello
22:31 < Beg_> hey'
22:31 < jdelgado> jesusabdullah: Good luck!
22:31 < jesusabdullah> hellote
22:31 < jesusabdullah> jdelgado: haha, inorite?
22:31 < jesusabdullah> jdelgado: at this rate my biggest problem is going to be choosing between multiple gigs
22:31 < jdelgado> :)
22:32 < jesusabdullah> I mean, you say that
22:32 < jesusabdullah> but personally choice makes me fret
22:32 < sorensen> tmpvar: great times talking bout microtemplating
22:32 < sorensen> err, micro optimizations
22:32 < sorensen> ;)
22:32 < jesusabdullah> hah
22:32 < Getzel> Does someone have an example of a little multiplayer app (like moving the same div) with only node.js and not socket.io ? 
22:33 < jesusabdullah> oh yeah, I'd get the chance to take their industrial machines and add cnc capabilities and shit like that
22:33 < jesusabdullah> so, like, arduino + node = web dashboard for fatigue testing equipment
22:33 < jesusabdullah> mostly ME but there's a lot of room to improve all over
22:33 < willwh> I want arduino kit and node, and a rasppi to monitor moisture and whatnot in my garden
22:33 < willwh> GIMME 
22:34 < willwh> :P
22:34 < willwh> I assume arduino making temp/moisture sensors with that statement though :P
22:35 < neeky> Beg_, so what's your opinion of meteor?
22:36 < Beg_> I love it, making cms is so fast
22:36 < Beg_> i can make you an account on my project if you wish
22:37 < willwh> https://ardudrop.jottit.com/
22:58 < raduu> supposing I want to do something like this:  process.on('uncaughtException', function (err) {
22:58 < raduu>       console.error(err);
22:58 < raduu> how do I get the most info out of the error? 
22:58 < raduu> like a full stacktrace 
23:00 < nathan7> raduu: .stack property
23:00 < raduu> can I console.log(err.stack) ?
23:01 < nlf> sure
23:05 <@isaacbw> no, we won't let you
23:05 < sorensen> you can do quite a bit with the stack on that
23:06 < sorensen> its not the most detailed info, but theres things somewhat usefull
23:06 <@MI6> joyent/libuv: Timothy J Fontaine master * 2f3124a : build: add DTrace detection for autotools - http://git.io/3cKTvQ
23:06 < raduu> I was just doing console.log(err)
23:06 < raduu> Exception caught!
23:06 < raduu> { [Error: read ECONNRESET] code: 'ECONNRESET', errno: 'ECONNRESET', syscall: 'read' }
23:06 < raduu> this is what I was getting
23:06 < raduu> and I can t tell the cause of it
23:06 < sorensen> i generally log the err.stack
23:06 < sorensen> raduu: from where?
23:06 < sorensen> whats the source
23:07 < sorensen> generally my failsafe outside of domains giving me context is to have a file called crash.js
23:07 < raduu> https://gist.github.com/samsonradu/bd687122431e64ffb101
23:07 < raduu> my code is a bit more "rude"
23:07 < sorensen> which listens to the uncaughtException, logs the error to disc, and then emails out the error
23:07 < raduu> no domains
23:07 < sorensen> no worries
23:08 < sorensen> eww coffe
23:08 < sorensen> :P
23:08 < raduu> basically I have an express server and socket io
23:08 < sorensen> whats the point of incrementing crashes
23:08 < sorensen> you should always exit
23:08 < raduu> express doing casual calls to another server
23:08 < raduu> I know
23:08  * sorensen always
23:08 < raduu> but here s what happens
23:08 < raduu> I run a chat website (paid stuff and all) 
23:08 <@isaacbw> a what
23:08 < raduu> and I cannot afford all users to disconnect
23:09 <@isaacbw> what's a chat website
23:09 < raduu> videochat
23:09 < raduu> nevermind that
23:09 <@isaacbw> nice. You have users?
23:09 <@isaacbw> link?
23:09 < sorensen> well...
23:09 < Beg_> and jdelgado why do you say I need a designer, You obviously act like you know me, and sure you are right, but that is probably the best masterpiece i have ever achieved to hammer togheter.
23:09 < raduu> and I can t afford to reconnect all sockets
23:09 < sorensen> at some point you have to
23:09 < Beg_> :D
23:09 <@isaacbw> I have a problem with not spending any time with design
23:09 <@isaacbw> I wish I could just make an app with the user agent stylesheet
23:09 < jdelgado> Beg_: lol
23:09 < sorensen> raduu: at least start the process of migrating users
23:09 < s5fs> can anyone recommend a module for json-rpc over tcp?
23:10 < raduu> meaning?
23:10 < jdelgado> isaacbw: hah this guy
23:10 < qard> What's a good, cross-platform method of exporting environment variables from within node? I need to make something available in the environment on *nix and Windows.
23:10 < raduu> I get this error around 10 times a day
23:10 < sorensen> so, you can use node cluster to have multiple instances sharing connections
23:10 < raduu> it s too much hastle..I cannot afford that
23:10 < sorensen> servers / db connections / ect
23:10 < qard> *nix is easy, but I'm not really sure how env works on Windows.
23:10 <@isaacbw> wait Beg_ I want a link
23:10 <@isaacbw> so I can judge you too
23:10 < sorensen> server crash shut down that server and then users will automatically start connecting to the non-crashed ones
23:11 < raduu> well..the app wasn t built by me from scratch.. and it wasn t built with scaling in mind
23:11 < raduu> keeps some data in-memory 
23:11 < raduu> and I d have to do major changes to scale socket io too
23:11 < sorensen> sounds like a bug ;)
23:11 <@isaacbw> all applications keep some data in memory
23:11 < jdelgado> isaacbw: At least you are honest about it
23:11 < raduu> like channels?
23:11 < freewil> tjholowaychuk, hey im going to add a filter for your reap module
23:11 < sorensen> raduu these are just things you will have to do at some point
23:11 < raduu> I know
23:11 < tjholowaychuk> freewil aight
23:12 < tjholowaychuk> raduu you could probably migrate to Go
23:12 < tjholowaychuk> in less time
23:12 < sorensen> you can shove them aside for now, but every time that exception happens your node app is unstable
23:12 < sorensen> tjholowaychuk: :O
23:12 < raduu> what does unstable mean?
23:12 < tjholowaychuk>  </partiallyjoking>
23:12 < sorensen> when that exception happens you have no idea what the memory state of the app is anymore
23:12 < jdelgado> tjholowaychuk: lmao
23:12 <@isaacbw> I thought go was cool until they denied my patches
23:13 <@isaacbw> now I think it's stupid
23:13 < jdelgado> isaacbw: those bastards
23:13 <@isaacbw> that's what I thought
23:13 < sorensen> exceptions are named that way for a reason, they are exceptional, not the norm
23:13 < tjholowaychuk> sorensen crashing the entire process is not at all acceptable though
23:13 < sorensen> you *need* to kill the app
23:13 < raduu> right :)
23:13 < sorensen> tjholowaychuk: i realize
23:14 < sorensen> this is where domains are handy
23:14 <@isaacbw> sorensen: well no you don't need to kill it
23:14 < sorensen> you dont want to crash, but exit gracefully
23:14 <@isaacbw> but you should have some pretty nice damage control
23:14 < tjholowaychuk> shouldn't have to exit at all
23:14 < raduu> I have forever backing it up no problem
23:14 < sorensen> ~.^
23:14 < raduu> but it s the sockets reconnecting that I cannot afford
23:14 < sorensen> only that forever is written in node :D
23:14 < raduu> it does the job
23:14 < sorensen> </joking
23:15 < raduu> it can be written in fortran
23:15 <@isaacbw> that would be stable
23:15 < raduu> :)
23:15 < sorensen> i prefer to have my monitors not in the language its monitoring, but thats besides the point
23:15 < raduu> I trashed node-proxy for HAProxy
23:15 < raduu> turned out to be a good call because it was randomly disconnecting sockets
23:15 < jdelgado> ruby is taking a half an hour to compile on a ec2 xxl instance... lolwut
23:16 < sorensen> jdelgado: micro?
23:16 <@mbalho> AAA_awright: on mac os terminal your script outputs 0.66729464777745310.157240046188235280.2808734995778650.6165655537042767
23:16 < jdelgado> sorensen: xxl
23:16 < sorensen> :O
23:16 < sorensen> dafuq
23:16 < jdelgado> that's what i'm saying
23:16 < AAA_awright> mbalho: Perhaps it doesn't recognise the cursor save/restore sequences
23:16 < sorensen> yeah...
23:17 < AAA_awright> Which is *should*
23:17 < raduu> sorensen: my plan is to find out why the exception occurs.. fix it or wrap it in a try/catch  and then I can think of rewriting my app
23:17 < AAA_awright> That's a fairly common technique
23:17 < sorensen> so it seems there is some debate about if an uncaught exception should force the process to exit or not
23:17 <@mbalho> AAA_awright: this works http://nodejs.org/api/readline.html#readline_rl_write_data_key
23:17 < sorensen> very interesting
23:18 < raduu> the node docs say 9 times out of 10 nothing bad happens. (You ve been warned)
23:18 < raduu> I can live with that in exchange for losing customers :)
23:18 < sorensen> fair enough
23:18 < sorensen> unless its happening 100x a day
23:18 < raduu> joking..I know it s bad, but it s the "least" bad
23:18 < sorensen> well, using domains to scope those errors and handle the situation appropriately would be much better
23:19 < sorensen> but its still the same issue
23:19 < sorensen> really, just dont have errors
23:19 < sorensen> ;)
23:19 < raduu> right
23:19 < raduu> that s why I m looking for the stacktrace
23:19 < sorensen> err.stackl
23:19 < sorensen> stack*
23:19 < raduu> got it thanks
23:19 < sorensen> those kinds of errors are usually pretty simple
23:20 < sorensen> `foobar` is undefined
23:20 < sorensen> and the such
23:20 < raduu> there is a stacktrace limit setting? to console.log me more or less?
23:20 < raduu> I think I ve read that somewhere.. not sure
23:20 < sorensen> the stack has what it has as far as i know
23:20 < sorensen> never needed to go deeper
23:21 < raduu> http://www.devthought.com/2011/12/22/a-string-is-not-an-error/
23:22 < sorensen> yes this is true
23:23 < sorensen> if your going to throw or send a callback an error, it should always be an instance of an error
23:24 < raduu> By default, V8 limits the stack trace size to 10 frames. You can alter this by changing the Error.stackTraceLimit during runtime.
23:24 < raduu> not that I d need it.. just asking
23:24 < AAA_awright> There's no problem with uncaughtException per se
23:24 < AAA_awright> I don't know what this whole debate is about or the big warning in the documentation
23:30 < raduu> AAA_awright go on
23:31 < AAA_awright> And... yeah. If the consern is that it throws the application into an "undefined state" where by examination, one part of the program can't be sure the state of another part... well that happens even when you restart the process
23:31 < AAA_awright> Especially if you have a database!
23:31 < AAA_awright> I mean, it affects your application, if you use a database
23:31 < AAA_awright> Or networked communications, etc
23:32 < AAA_awright> It's not a matter of error handling, it's designing robust programs
23:32 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
23:32 < tjholowaychuk> that's not always true
23:32 < AAA_awright> What part?
23:33 < tjholowaychuk> not every exception needs to be treated that way
23:33 < tjholowaychuk> node makes the average case
23:33 < tjholowaychuk> very hard
23:33 < tjholowaychuk> you do definitely need to know what the exception is and how to act upon it
23:33 < tjholowaychuk> but crashing the entire process is rarely the solution
23:34 <@mbalho> is the problem that node went out of its way to be like that or it just exposes what v8 exposes
23:34 < AAA_awright> I'm talking of the supposed need to restart the process if it encounters an uncaught Error
23:34 <@mbalho> e.g. is it ryans fault or brendan eichs
23:34 < tjholowaychuk> well we shouldn't even have uncaught exceptions
23:35 < AAA_awright> That's part of designing robust programs, right
23:35 < AAA_awright> Normally the only thing you'll have an uncaught Error for is a TypeError or syntax error, or similar
23:36 < raduu> here is what situation I ve encountered in production: 1. Don t restart on uncaughtException => The casual errors are caught and everything went on until one night when I had an issue with redis blocking 100%CPU Usage and the node server kept crashing "forever" 
23:36 < tjholowaychuk> AAA_awright easier said than done
23:36 < raduu> had to restart manually to get back to normal
23:37 < tjholowaychuk> AAA_awright my point is that when things like that _do_ occur in production, they should not become an easy DoS vector
23:37 < raduu> and 2. I let it restart and I disconnect everyone each time one socket goes wild, or one http call has trouble
23:37 < AAA_awright> tjholowaychuk: Yeah, starting up a process is deliberately the most expensive part of the application
23:38 < tjholowaychuk> hell, if you forget a .on('error' in one of your 1000+ streams
23:38 < tjholowaychuk> you're basically fucked
23:38 < tjholowaychuk> instead of letting the exception bubble and respond accordingly
23:39 < Tyrantelf> Hey guys.  I hate to do this but i need some help with https://gist.github.com/tyrantelf/4d9731ca16e590dcea2d
23:40 < Tyrantelf> Why can I not create the connection and then reuse it through-out my script :?
23:40 < Beg_> Tyrantelf-> are you using the port 80?
23:40 < Tyrantelf> for what?
23:40 < Beg_> You need administrative rights to run on ports below 1000 i believe..
23:40 < Tyrantelf> No, I'm not running on port 80
23:41 < Beg_> okey, well then i'll check if i can see
23:41 < Tyrantelf> and I'm testing as root on my dedi anyway :|
23:41 < Beg_> solve*
23:41 < Tyrantelf> the full script is revision #1
23:41 < Tyrantelf> revision 2 is the parts giving trouble basically, and the error at the bottom
23:44 < Beg_> So what you did is add the connection object to it?
23:45 < Beg_> nvm, I missunderstood
23:45 < Tyrantelf> Okay
23:46 < Tyrantelf> and if something looks stupid to you, it's because I'm essentially flying on the seat of my pants here.  I dont' mess with javascript much, but for what I'm trying to do node.js was the best way
23:47 < Beg_> did it work before?
23:47 < Beg_> or is it the first attempt
23:47 < Beg_> I don't know the answer, but this is what I would do, I would try to get the script running with as little as possible, because you don't have a connection to the database, that is why you get query of undefined.
23:47 < Beg_> as little code*
23:48 < Tyrantelf> When I had the new mysql.Database on each query, and then this.query
23:48 < Tyrantelf> it worked
23:48 < Tyrantelf> but thats a whole lot of redundancy
23:48 < raduu> tjholowaychuk: does this have an error handler? https://gist.github.com/samsonradu/87ad90398d128df47571
23:48 < raduu> does Q do some magic here? I m not really an expert with it
23:48 < Beg_> I am not sure but, try to remove the var, perhaps it's scope errors
23:49 < Beg_> try to make it global the db object
23:49 < tjholowaychuk> raduu haven't used it
23:49 < sorensen> blah, cant contribute to the convo anymore
23:49 < sorensen> have to do some work :P
23:51 < jdelgado> Do you guys use vagrant in production?
23:52 < Tyrantelf> Beg_: and how would I do that :?
23:52 < Beg_> https://gist.github.com/Aleksandar-Novakovic/296e4735a9e6ab07b712
23:52 < Beg_> just remove the donator_db infront
23:52 < Beg_> I am not 100% sure, but it might be what is causing the error..
23:52 < Beg_> I am not an export myself :/
23:52 < sorensen> jdelgado: no, my general feel is that vagrant is only to mimic your prod evn
23:52 < sorensen> env*
23:53 < jdelgado> That's what i was thinking.. I guess
23:53 < Tyrantelf> and then change all the query's to what?
23:53 < Tyrantelf> this.?
23:53 < Beg_> no just keep it as is..
23:53 < sorensen> i would almost say that you should never use vagrant in prod
23:53 < sorensen> its for dev'ing
23:53 < Tyrantelf> donator_db is what tells the query to use the connection :|
23:53 < Beg_> oh I ment
23:54 < Beg_> just remove the ->VAR<- infront of donator_db
23:54 < Tyrantelf> ah
23:54 < Tyrantelf> yep, same error
23:55 < Beg_> and console.log( donator_db ); returns undefined if you put it under the line?
23:55 < sorensen> why remove vars
23:55 < sorensen> ?
23:55 < Beg_> i thought it had something to do with it, but I was wrong
23:56 < sorensen> always use vars imo
23:56 < sorensen> bad habbit to form
23:56 < sorensen> especially going to the client side
23:56 < sorensen> ;(function() {    but hey i just like scope    }).call(this);
23:57 < Beg_> Oh that is what that is for..
23:57 < Beg_> thanks, i saw some of it but didnt understand it
23:57 < sorensen> which part
23:58 < sorensen> Beg_: if you liked that, you'll love this: http://bonsaiden.github.com/JavaScript-Garden/
23:58 < Beg_> the function you linked, I have seen function like that before, but I never understood why they were written like that,.
23:58 < sorensen> function expression as they say
23:59 < sorensen> the nice thing is that you can use something like 'use strict'; inside of it and it only affects whats in the closure
23:59 < Tyrantelf> Beg_: yes
23:59 < Tyrantelf> it does return undefined
23:59 < sorensen> protects you from global leaks and the such
23:59 < Beg_> yeah that page is something I would like to learn
--- Log closed Thu Jul 04 00:00:11 2013
