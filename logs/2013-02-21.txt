--- Log opened Thu Feb 21 00:00:08 2013
00:00 <@TooTallNate> well it's incompatible with node code
00:00 <@TooTallNate> which is unfortunate
00:00 < fairuz_>  Hi guys. New in nodejs here. Is it possible to create some simple web services using nodejs. I wonder how to make the services accesible like this. Ex. http://localhost:1234/serviceA and http://localhost:1234/serviceB
00:00 < daekano> nope
00:00 < CoverSlide> ry was saying if ArrayBuffer was around he wouldn't have created Buffer
00:01 < fairuz_> daekano: that 'nope' is for me?
00:01 < CoverSlide> I think that would be a good goal for both node and browserify to unify on ArrayBuffers
00:01 < daekano> fairuz_: yes, but it was tongue in cheek. web services are exceedingly simple in node. you should look up the Express and Restify frameworks.
00:02 -!- Topic for #Node.js: evented i/o in javascript? it's more likely than you think - http://logs.nodejs.org/node.js/
00:02 -!- Topic set by mbalho [~max@ve.5bpbxlsy.vesrv.com] [Wed Feb 20 12:30:05 2013]
00:02 -!- isaacs changed the topic of #Node.js to: evented I/O?  in MY javascript?  it's more likely than you think! - http://logs.nodejs.org/node.js/
00:03 < CoverSlide> you got javascript in my server! you got your server on my javascript! mmm not bad!
00:03 <@isaacbw> be cool and use my router
00:03 <@isaacbw> and submit pull requests so I look more productive than I am
00:03 < SomeoneWeird> wat u on about
00:03 < SomeoneWeird> everyone knows the js is only clientside
00:04 <@TooTallNate> CoverSlide: we've looked into it in the past but ArrayBuffers are way slower then our Buffer class
00:04 <@isaacbw> https://github.com/isaacbwagner/node-egress
00:04 < CoverSlide> aaronblohowiak's routes are pretty good, that's what npmjs uses
00:04 < fairuz_> daekano: Ok, I'll try to dig a bit more.
00:04 < CoverSlide> https://npmjs.org/package/routes
00:04 <@isaacbw> my router is the best router
00:05 <@isaacbw> because it's pretty
00:05 < daekano> *correct router
00:05 < CoverSlide> isaacbw: Y U NOT ON NPM?
00:05 <@isaacbw> and I called it 'pragmatic' in the readme
00:05 <@isaacbw> CoverSlide: because I don't think I should taint npm with it
00:07 <@isaacbw> CoverSlide: it is actually kind of cool, but it needs more work before I can feel okay about other people using it
00:07 <@isaacbw> and I don't want to do that work until my project needs it
00:08 < fairuz_> daekano: Restify looks good to me since I only want to create an API server. 
00:09 <@isaacbw> fairuz_: then you should totally use my *pragmatic* router
00:09 < asdf12> quick question, ext2,3,4 for performance?
00:09 < daekano> fairuz_: yeah, it doesn't have all the rendering stuff included.
00:10 < CoverSlide> use btrfs
00:10 < fairuz_> isaacbw: What is it? :) link please
00:10 <@isaacbw> https://github.com/isaacbwagner/node-egress
00:10 <@isaacbw> you probably shouldn't actually use it. It's very bare-bones
00:10 < asdf12> expect huge pull request
00:11 <@isaacbw> do it brah
00:11 < CoverSlide> actually bare-bones is perfect for node
00:11 <@isaacbw> that's why I made it
00:11 <@isaacbw> it could stand to be more robust though
00:11 <@isaacbw> especially the ambiguity code
00:11 <@isaacbw> I'm fairly certain there are some ambiguities it doesn't catch
00:11 < CoverSlide> https://github.com/coverslide/mcgee/blob/master/index.js << can't get much more barebones than this
00:12 <@isaacbw> heh, is that on npm
00:12 < CoverSlide> yes
00:13 < echo> :X
00:13 < CoverSlide> it's basically so I don't have to `var EventEmitter = require('events').EventEmitter;var inherits = require('util').inherits;inherits(MyClass,EventEmitter);`
00:14 < CoverSlide> instead I `require('mcgee')(MyClass)`
00:14 < fairuz_> isaacbw: Well this is for my PC and testing purpose, so the simpler is better. :)
00:15 <@isaacbw> fairuz_: if you're willing to work with something that isn't very battle worn, I would love to see what you do with it
00:15 <@isaacbw> and I'm almost always here if you have any questions or requests
00:16 <@isaacbw> you'll have to clone it from github though. It isn't on npm
00:16 < CoverSlide> you can add git dependencies in your package.json
00:16 < fairuz_> isaacbw: Ok cool. Will do :)
00:16 <@isaacbw> oh, nice
00:17 <@isaacbw> I *am* using it myself for something, so it isn't a complete piece of crap
00:17 < asdf12> thats the tagline to promote it
00:18 < CoverSlide> "Try my $thing! It's not totally shitty!"
00:18 <@isaacbw> :P
00:18 < fairuz_> :)
00:19 <@isaacbw> are there any good modules for automating the optional argument process?
00:20 <@isaacbw> writing typeof . === 'undefined' is getting tedious
00:20 <@TooTallNate> isaacbw: null == .
00:20 <@TooTallNate> :p
00:20 <@TooTallNate> isaacbw: i like to treat null and undefined as if they're the same thing
00:20 <@TooTallNate> so the `null == x` check is great
00:21 <@isaacbw> but in some cases the user might actually want to pass null
00:21 <@isaacbw> which would throw off the rest of the arguments
00:21 < CoverSlide> when you come to that case
00:21 < CoverSlide> write around it
00:21 < CoverSlide> otherwise
00:21 <@isaacbw> you turds aren't being helpful
00:21 < CoverSlide> that's perfectly fine
00:21 < CoverSlide> >> null == 0
00:21 < arf> CoverSlide: (boolean) false
00:22 < CoverSlide> >> null == false
00:22 < arf> CoverSlide: (boolean) false
00:22 < asdf12> isaacbw: write one
00:22 <@isaacbw> that's still missing the point of not wanting a bunch of if statements
00:22 < asdf12> that would be neat
00:22 <@isaacbw> asdf12: I already made the directory for it :(
00:22 <@isaacbw> making directories for new projects is too satisfying
00:23 < asdf12> its like a teaser
00:24 < asdf12> im actually surprised theres no popular module to handle that 
00:25 <@isaacbw> it does seem like a fairly common pattern
00:30 < CoverSlide> mock up how this library would work
00:32 < CoverSlide> usually when people have something with some level of complexity, they end up making an options object and get on with it
00:40 < zenodub_> backbone vs knockout 
00:40 < zenodub_> FIGHT!
00:40 <@isaacbw> angularjs
00:40 < asdf12> flight
00:40 < jergason> lol
00:40 < jergason> asdf12: congratulations, you will escape the wildebeasts
00:42 < asdf12> how come when i install git on ubuntu it requires i install libx11* pkgs -_-
00:44 < echo> iirc there's a git gui in the main pkg
00:44 < asdf12> what if i dont want it
00:47 <@isaacbw> you can probably manually exclude it somehow
00:47 <@isaacbw> or use ubuntu server
00:48 <@isaacbw> I doubt it will try to install any graphical stuff
00:48 < zenodub_> or debian.
00:49 <@isaacbw> centos is the only way
00:49 < carpii> centos ftw
00:49 < Lorentz> debian > *
00:50 <@isaacbw> or be cool and run an archlinux production server
00:50 < asdf12> ive got a core install of ubuntu, isn't that the same as server
00:50 <@isaacbw> I don't know. Probably not
00:50 < Lorentz> asdf12: you never know with ubuntu
00:50 <@isaacbw> they would have different packages
00:50 < Lorentz> arch is for kids
00:50 < Lorentz> might as well gentoo
00:50 <@isaacbw> arch is for pros
00:50 <@isaacbw> lol
00:51 < carpii> i would like to think at least sysctl is different on ubuntu server
00:51 < Lorentz> have you installed your copy of gentoo today?
00:51 <@isaacbw> I actually really like arch. It's a nice balance between gentoo and debian
00:51 <@isaacbw> but I would never run a server with it :P
00:51 < carpii> same :D
00:51 < carpii> and gone are the days when id even run a desktop with it :(
00:51 <@isaacbw> aw
00:52 < carpii> mostly kde's fault tho
00:52 <@isaacbw> it's kind of fun to watch the wiki and follow the directions to fix broken system directories with every other update
00:55 < substack> TooTallNate: until very lately I didn't have good way of detecting globals so the browser builds would be very large by default
00:55 < substack> but now there's https://github.com/substack/insert-module-globals
00:56 < naomi> substack: where is the image in the readme??????
00:56 <@TooTallNate> substack: so it sounds like you plan on fixing this problem than?
00:59 < substack> TooTallNate: it's much easier to fix now and the problems with fixing in v1 don't apply in v2
01:05 < zenodub_> ok then angularjs vs backbone vs ember vs knockout FIGHT!
01:06 < zenodub_> sorry that took a bit.
01:06 <@isaacbw> try them all
01:06 < zenodub_> Looks at watch...
01:06 < zenodub_> I"ve been inspecting backbone and knockout lately.
01:07 <@isaacbw> if you like watches, then angular is for you
01:07 < zenodub_> I guess it really depends
01:07 <@isaacbw> ba-dum-ch
01:07 < zenodub_> they all seem pretty good
01:07 < zenodub_> ha
01:07 <@TooTallNate> substack: well I'm +1 for node code being interoperable with browserify without changes :)
01:07 < zenodub_> time to watch some tutes
01:07 <@TooTallNate> that is - Buffer global being automatically detected
01:07 <@isaacbw> if you use angular you can hang out with me while we laugh at the plebians
01:10 < zenodub_> so that's just the frontend side of things
01:10 < zenodub_> what are most people using for a backend framework Express mostly?
01:11 < zenodub_> With a templating engine?
01:14 < rossk1111> zenodub_ we're using Express + SWIG for templating
01:14 < rossk1111> fwiw
01:14 < rossk1111> + angular of course
01:17 < zenodub_> Cool.  Anyone else want to list their stack?
01:18 < SomeoneWeird> express + less + ejs
01:18 <@isaacbw> rossk1111: you're mixing server and clientside rendering?
01:18 <@isaacbw> crazy bastard
01:19 < SomeoneWeird> lol
01:19 < rossk1111> sorry -- my mistake
01:19 < rossk1111> express + swig
01:19 < rossk1111> backend
01:19 < rossk1111> angular driving frontend
01:19 <@isaacbw> you mean express for an api?
01:19 < rossk1111> mhm
01:19 <@isaacbw> or are you actually rendering templates with it
01:20 < zenodub_> This node book I got uses Express + Jade on the backend and Backbone on the frontend
01:20 < rossk1111> swig is rending our templates
01:20 <@isaacbw> crazy world
01:20 < rossk1111> and its compatable with express which deliveres the content
01:20 <@isaacbw> http://www.youtube.com/watch?v=eV23AytI0UI
01:21 < zenodub_> That's not a very good tutorial.
01:21 <@isaacbw> zenodub_: don't mix serverside and clientside rendering unless you hate happiness
01:22 <@isaacbw> or unless you're very, very carefu
01:22 < zenodub_> lol he looks so f'd up in that video
01:22 <@isaacbw> l
01:22 < zenodub_> so you don't use a server side template?
01:23 <@isaacbw> no
01:23 <@isaacbw> I serve my angular app statically, then have an API server for data
01:23 < zenodub_> using apache?
01:23 <@isaacbw> whatever
01:23 < zenodub_> are you using apache?
01:23 < zenodub_> for your static page?
01:23 <@isaacbw> I'm not, but it would work just fine
01:23 < zenodub_> yeah
01:24 <@isaacbw> that's what I meant by whatever
01:24 <@isaacbw> that part doesn't matter much
01:24 < zenodub_> yeah, just currious 
01:24 < zenodub_> I like that though, it decouples the DB completely from the HTML
01:25 < zenodub_> so, is it easy enough to do authentication?
01:25 <@isaacbw> yea, it's fine
01:25 < zenodub_> logins etc
01:25 < zenodub_> Do you persist an api key or anything on your calls?
01:25 < CoverSlide> you can persist a session cookie
01:26 <@isaacbw> no, the session id goes into a cookie
01:26 <@isaacbw> ^^
01:26 <@isaacbw> then the API verifies the ID with each request
01:27 < zenodub_> Interesting.  I suppose you could put the session key in memory instead, if you wanted to require re-authorization on reload.
01:28 <@isaacbw> I guess, yea
01:28 <@isaacbw> in that case you probably wouldn't want a cookie
01:29 <@isaacbw> or you could wipe the cookies whenever the app loads
01:29 <@isaacbw> I don't know why you would want something like that though
01:30 < zenodub_> I like the idea of less moving parts, I think I'll build things simillarly.
01:30 < zenodub_> I can see why a server side template might be benifitial though.
01:31 <@isaacbw> server side is fine
01:31 <@isaacbw> I would just avoid mixing them
01:31 <@isaacbw> pick one or the other
01:33 < zenodub_> so there must not be much to your node server then.  Incoming request, check perms, query database, send json
01:34 < zenodub_> what kinda db are you using?
01:34 < zenodub_> again, not that it matters...  I'm excited to start working with mongo
01:37 < diogogmt> zenodub_: keep it up dude
01:37 < diogogmt> zenodub_: lets get onnit
01:40 < zenodub_> @diogogmt word
01:44 < rfgarcia> does anyone know how the new streams API lets you control concurrency? e.g. I have a writable stream that can process multiple writes in parallel, but looking at the source it appears to only allow you to write one chunk at a time
01:45 < bradleymeck> rfgarcia: can you rephrase the second half of that?
01:47 < rfgarcia> it looks like _write(chunk, cb) is only called when the previous call to _write(chunk, cb) hits the callback
01:48 < carpii> isnt that the definition of a stream?
01:49 < rfgarcia> i guess it doesn't make sense to me in the context of the new stream.Transform
01:50 < rfgarcia> e.g. i have a transformation that can process lots of things in parallel
01:50 <@TooTallNate> rfgarcia: but how would you control the output order of data?
01:51 <@TooTallNate> if there's multiple _write() callbacks running at the same time?
01:51 < Raynos> does anyone have a shim for 0.9 setImmediate ?
01:51 <@TooTallNate> Raynos: i've seen one… maybe Benvie
01:51 < Raynos> rfgarcia: writable streams are ordered
01:51 < Raynos> if you want a writable stream that writes chunks in parallel then don't use Writable
01:51 < rfgarcia> TooTallNate: essentially i don't care about the order
01:51 < Raynos> I need to write a stream like that
01:52 < rfgarcia> Raynos: got it
01:52 <@TooTallNate> rfgarcia: then you're writing an EventEmitter, not a Stream
01:52 < rfgarcia> yeah
01:52 < Raynos> TooTallNate: you can still handle backpressure even though you write in parallel
01:52 < rfgarcia> the stream interface is so nice that makes me kind of sad...
01:52 < Raynos> a Writable stream is just an interface that does back pressure
01:52 < Raynos> rfgarcia: inherit from Writable and overwrite .write and implement it
01:53 < Raynos> the hard part is figuring out how to do backpressure "correctly"
01:53 < Raynos> I may have a stream that does this somewhere
01:58 < rfgarcia> Raynos: i was hoping that highWaterMark would roughly translate to # of outstanding _write() calls
01:59 < Raynos> in Writable?
01:59 < Raynos> I dont know what those do in Writable
01:59 < rfgarcia> yeah
01:59 < Raynos> well highWaterMark is "I AM NOW IN DRAINING MODE. STOP WRITING PLEASE"
01:59 < Raynos> lowWaterMark means "IF I AM BELOW THIS THEN IM CONSIDERED DRAINED. WRITE MOAR"
02:00 < rfgarcia> yeah
02:00 < Raynos> You should probably bitch at people about Writable not being correct. I wouldnt be suprised if its full of bugs
02:00 < Raynos> I recommend pull requesting broken tests
02:00 < rfgarcia> haha k
02:00 < mscdex> lolWaterMark
02:01 <@TooTallNate> idk, only one _write() call being active at a time is an important part of the interface
02:01 <@TooTallNate> a lot of stuff would probably break if that wasn't the case
02:01 < Raynos> TooTallNate: for any source which is ordered
02:01 < Raynos> some sources are ordered others arent
02:01 < Raynos> TCP is ordered, udp is not
02:01 <@TooTallNate> i'd say *most* aren't
02:01 <@TooTallNate> and bnoordhuis would argue that UDP is not a stream
02:01 < Raynos> Not true
02:01 < Raynos> most of my sources
02:01 < Raynos> are commutative
02:01 < Raynos> because commutative means do it fucking massive parallel
02:02 < mscdex> UDP isn't a stream :S
02:02 < Raynos> If I can make my source order independant then I will
02:02 < Raynos> Agreed UDP is not a stream
02:02 <@TooTallNate> i don't really get it still
02:02 < Raynos> but a stream of database records out of mongo is unordered
02:02 < Raynos> well it really depends
02:02 < Raynos> Actually
02:02 < Raynos> I'm full of shit
02:02 < Raynos> most sources are ordered
02:03 < rfgarcia> yeah my use case is just "do a ton of work in parallel"
02:03 < Raynos> It's just that some transformations dont care about order
02:03 < Raynos> this is mostly for object streams tbh
02:03 < Raynos> generally low level buffer transformations are ordered
02:03 < rfgarcia> yeah i'm dealing w/ an object stream
02:04 < Raynos> but once you've chunked your data into "objects" then it can be order independent
02:04 < rfgarcia> coming from a db
02:06 < Raynos> rfgarcia: You should totally fork & fix Raynos/write-stream >_>
02:06 < Raynos> and make it work for your use-case
02:07 < rfgarcia> Raynos: will take a look
02:10 < rfgarcia> Raynos: how am i supposed to hack on this if there aren't any tests?! :p
02:11 < Raynos> its easy
02:11 < Raynos> you write the tests
02:11 < Raynos> there are some examples
02:11 < Raynos> im fixing Raynos/read-stream atm
02:12 < evlapix> I'm finding that my node script is handling an error differently based on which user runs it. 
02:17 < evlapix> Rather, node crashes on error if not running as root. 
02:20 < carpii> low port?
02:26 < Benvie> Raynos: can't really shim setImmediate...not better than setTimeout(cb, 0)
02:26 < Raynos> can't we hook into whatever node 0.9 exposes / uses
02:26 < Benvie> Raynos: requires direct access to the event loop
02:26 < Raynos> node has direct access to the event loop
02:26 < Raynos> just hack lib/timers
02:26 < Benvie> you could do it maybe using a C++ module
02:26 < Benvie> yeah
02:27 < Benvie> not from JS, but it might be possible from C++. Not sure what control over the libuv event loop looks like
02:27 < Benvie> haven't kept up with recent non-JS changes to node
02:29 < Raynos> feature request for streams2
02:29 < Raynos> push(chunk, chunk, chunk, ...)
02:29 < Raynos> I want to append multiple chunks to the internal buffer in one lump
02:30 < Raynos> this would allow me to push multiple objects in one bulk without triggering more calls of _read 
02:30 < Raynos> and have better control over the pumping of data around
02:46 < bingomanatee> Hi all 
02:50 < markdaws> hi - if I do an "npm config list" it shows a value for the "node bin location" this path seems to be where npm installs the global symlink when you do an "npm list".  How does this location get set, I made sure I don't have anything in my .npmrc file and I don't have a NODE_PATH env variable
02:50 < markdaws> sry - "npm link"
03:25 < codingstream> is anyone using http-proxy with ssl in production? im curious how it fairs given node's ssl handshaking code isnt hyper-optimized
03:26 <@Nexxy> I use bouncy in production with SSL
03:26 <@Nexxy> but I'm not google, so my experience is probably irrelevant
03:26 < azylman> codingstream: we use it as well and haven't had any issues. Also not Google.
03:29 < Pavi> Hi
03:30 < Pavi> We are trying to send a https request via socks5 proxy server
03:30 < Pavi> Can any one help us in this issue
03:30 < Pavi> we do not get the ssl validated correctly
03:30 < Pavi> hi
03:49 < asdf12> oh cool theres a official arm binary
03:52  * horrem .
04:05 < base698> hi
04:06 < w3pm> nodemon crashes with Error: spawn EMFILE after like 4-5 reboots, anyone else get this?
04:20 < ahungry> hey guys, is there a way to do a non async tcp /net.connect request?
04:20 < ahungry> instead of having a listener for socket.on('data', do something..., I basically want to be able to fire off the request and then get return data out of it
04:21 < ahungry> this is for a socket io back end hitting a different tcp service listening on some port
04:21 < Cat4D> is there any JS ontology construction or visualization tool?
04:22 <@Nexxy> othiym23, ping
05:39 < finishingmove> good morning
05:40 < sitapati> good {{time_of_day}}
05:43 < finishingmove> now that would be cool
05:43 < _o_hai> moin moin
05:43 < wllmtrng> i just had dinner
05:43 < finishingmove> if i could write "good {{time_of_day}}"
05:43 < finishingmove> and everyone reads whatever time of day it's at them
05:44 < finishingmove> or let's further refactor it
05:45 < finishingmove> {{adjective}} {{time_of_day}}
05:45 < finishingmove> so my good morning could be someone's bloody awful evening
05:45 < finishingmove> :D
05:45 < groundwater> think we need some unit tests now
05:46 < asdf12> the unit tests are failing!
05:46 < asdf12> oh no
05:46 < groundwater> asdf12: i wrote some unit tests today, specifically because of our conversation
05:46 < groundwater> i didn't want to be lazy again
05:47 < asdf12> nice
05:47 < asdf12> you wrote your articles?
05:47 < asdf12> what editor do you use btw?
05:47 < finishingmove> i think i need batteries for my peripherals. or i'm not gonna write anything useful today
05:48 < RLa> which lightweight module for sending static files?
05:48 <@mbalho> RLa: ecstatic
05:48 <@mbalho> RLa: or lighterweight is filed but you didnt specify what 'sending static files' means
05:49 < groundwater> asdf12: texmate2
05:49 < RLa> sending would mean no routing and such :)
05:49 <@mbalho> RLa: so you are talking about an http server?
05:49 < RLa> yeah
05:49 < RLa> ecstatic looks perfect, thanks
05:54 < asdf12> vim takes a lot of setup
05:55 < groundwater> asdf12: i don't use much more than syntax highlighting
05:56 < asdf12> nah, little things like pressing { should give you the closing } and put you inside the { } needs to be setup etc. with vim
05:57 < asdf12> groundwater: there's extra stuff, i dont think textmate can do? like wouldn't it be nice to see trailing spaces?
05:57 < asdf12> or when you tab instead of space indent
05:57 < groundwater> asdf12: you can turn on invisibles 
05:57 < asdf12> to visually see it
05:57 < asdf12> oh
05:57 < asdf12> you dont use textmate snippets?
05:57 < groundwater> not usually
05:58 < asdf12> i would like to multi-line edit though, idk if vim can do that, have you seen sublime? you know what i mean?
05:59 < groundwater> i know, i think tm2 has that, but i've only encountered it by accident
05:59 < groundwater> sublime is like the new emacs
05:59 < groundwater> does it all
06:00 < groundwater> C-x M-c M-butterfly
06:00 < ablemike> asdf12: vim can do anything
06:01 < asdf12> what is butterfly? ha
06:01 < RLa> hm, now i need something lightweight for REST, should include routing
06:01 < groundwater> asdf12: http://xkcd.com/378/
06:02 < gkatsev> :source butterfly.vim<CR> :Butterfly<CR>
06:02 < ablemike> :q! 
06:03 < asdf12> groundwater: i am with you though, just syntax highlighting... but moving around... idk how you deal with that
06:03 < asdf12> in textmate
06:04 < asdf12> seems like a must have that to press downdowndowndowndowndowndowndowndowndowndownrightrightrightrgithrgiht
06:04 < groundwater> asdf12: use a macbook pro, so two-finger scroll is da shit
06:05 < RLa> wow, there are so many router modules
06:05 < asdf12> RLa : i heard node-egress was good
06:05 < gkatsev> ↑↑↓↓←→←→ba
06:05 < asdf12> so good you can't get it on npm, git only
06:05 < groundwater> asdf12: option-left option-right
06:05 < groundwater> asdf12: emacs bindings work too
06:05 < azylman> groundwater: asdf12: or use emacs
06:05 < RLa> checking it out
06:05 < finishingmove> i use NetBeans. comments welcome
06:06 < azylman> Yeah, best part of emacs is that the bindings work all through osx
06:06 < azylman> Mmm
06:06 < asdf12> isaacbw: ping, that'll be 10 cents for the advertising 
06:06 < gkatsev> azylman: that's the read-line api
06:06 < groundwater> also TM2 is open sourced now, which is cool
06:06 < asdf12> RLa: actually i dont know if it's good, it's isaacbw's project
06:07 < asdf12> i never used it
06:07 < asdf12> i never used emacs
06:07 < asdf12> so i dont know you guys mean
06:07 < groundwater> i learned all my command-line-fu with emacs and LaTeX
06:08 < groundwater> control-a = start of line, control-e = end of line
06:08 < azylman> C-n C-p next/previous
06:08 < azylman> C-d delete
06:08 < asdf12> what does C-d do
06:08 < groundwater> C-k to kill from cursor to end of line
06:08 < azylman> C-f C-b forward, back
06:09 < asdf12> well
06:09 < asdf12> the benefit is its default for bash
06:10 < asdf12> but you guys dont have me convinced
06:10 < groundwater> C-bacon also works on some models
06:10 < groundwater> ARE YOU CONVINCED?
06:10 < azylman> What king is bacon?
06:10 < zenodub> vim's the shizzle.
06:10 < zenodub> good night folks!
06:11 < azylman> er, what key
06:11 < sathi> hi guys
06:12 < SomeoneWeird> trying to find a benchmark i saw a couple days ago that was posted on HN
06:12 < SomeoneWeird> but i lost the link
06:12 < SomeoneWeird> anyone got it?
06:15 < _o_hai> serious question: what does vim have that vi doesn't?
06:15 < Lee-> Mprovement!
06:19 < Lee-> i actually can't enumerate the list. I use vim rather regularly, but when I'm on a system that only has vi, I get frustrated, so there are definite differences. I'm just not experienced enough with vi to know what they are. I know vim supports syntax highlighitng and scripting which I believe are absent from vi, but I'm not 100% sure on that.
06:19 < finishingmove> you guys don't feel the need for an IDE?
06:20 < sitapati> cloud 9, when it's not crashing
06:21 < sitapati> http://c9.io
06:21 < finishingmove> oh with the stability of my internet connection i can't even think about that
06:21 < sitapati> you can run it locally
06:21 < sitapati> that's what i do
06:21 < asdf12> what would an ide provide ?
06:21 < sitapati> it's a node application
06:21 < sitapati> error checking while you type
06:22 < sitapati> variable name completiong
06:22 < sitapati> click to run
06:22 < asdf12> that stuff is annoying
06:22 < sitapati> integrated debugger with step through
06:22 < sitapati> watchlist
06:22 < sitapati> asdf12: either you don't make mistakes, in which case you'll never notice
06:23 < asdf12> you dont need a IDE to do some of that stuff
06:23 < sitapati> or else it will catch your mistakes before you run
06:23 < groundwater> finishingmove: i use IDEs for static languages, but not for node
06:23 < groundwater> finishingmove: mostly for auto-complete or property lookup
06:24 < finishingmove> yea that's cool
06:24 < asdf12> you can get tab completion stuff with regular text editors
06:24 < finishingmove> asdf12, you can have some of the things in editors with plugins
06:24 < groundwater> finishingmove: but in node… it feels so faked, i just don't bother
06:24 < finishingmove> but sitapati gave a good overview of what IDEs give u
06:25 < asdf12> the only thing worth using an IDE for is if it has a great debugger
06:25 < groundwater> finishingmove: also i am in the "don't use debuggers" camp
06:25 < finishingmove> groundwater: i don't write node apps tbh, i'm just starting out with it. i use an IDE for my PHP work though
06:25 < sitapati> i must be a terrible programmer because i use the debugger and inspector
06:25 < finishingmove> and i tried switching 'down' from an IDE but couldn't
06:26 < groundwater> using debuggers is a "tabs vs. spaces" debate. in the end its preference
06:26 < sitapati> tabs
06:26 < echo> two spaced tabs :3
06:26 < finishingmove> as for your IDEs vs node vs static typed argument
06:27 < finishingmove> => visual studio for web with typescript
06:27 < sitapati> typescript, tabs, Microsoft Visual Studio
06:27 < finishingmove> :D
06:27 < sitapati> oh, snap!
06:27 < groundwater> finishingmove: typescript feels half-assed
06:27 < azylman> I don't think I've ever heard anyone say that sing debuggers is preference before
06:27 < azylman> I thought they were pretty universally accepted as "a good thing"
06:27 < groundwater> azylman: http://www.artima.com/weblogs/viewpost.jsp?thread=23476
06:28 < groundwater> http://linuxmafia.com/faq/Kernel/linus-im-a-bastard-speech.html
06:28 < finishingmove> dunno but my first impression regarding TypeScript was, "this was made for building node.js applications"
06:29 < azylman> groundwater: that guy from the artima link is dead wrong
06:29 < finishingmove> i think it's still 0.x or so
06:29 < azylman> It's not even ambiguous
06:30 < azylman> "The kinds of bugs I have to troubleshoot...can be quickly found throug...a few judiciously placed print statements."
06:30 < azylman> Print statements can actually modify the behavior of your code in languages like C
06:31 < groundwater> finishingmove: fair enough, i'm willing to give it another shot
06:31 < groundwater> finishingmove: i hope dart will prove interesting
06:31 < azylman> Basically, any time you find yourself printing output for debug, that's when you should be using a debugger
06:31 < groundwater> azylman: tabs vs. spaces… 
06:31 < azylman> I agree that most bugs can be solved with code inspection instead
06:32 < finishingmove> i think the guy in the article is trying to make a case of programmers relying too much on debuggers instead of thinking themselves about the workflow of the app
06:32 < azylman> groundwater: Saying "tabs vs spaces" doesn't alter the fact that "Print statements can actually modify the behavior of your code in languages like C"
06:32 < finishingmove> which is a somewhat valid point
06:32 < azylman> So, no, it's not just preference
06:32 < azylman> One is empirically wrong
06:32 < groundwater> azylman: example?
06:33 < finishingmove> groundwater: dart looks cool, i like the idea of optional static types
06:33 < groundwater> finishingmove: bob martin has some really good books on programming, he's one of the TDD pioneers
06:33 < finishingmove> depends on how it will be embraced
06:33 < asdf12> dart is already dead
06:34 < azylman> groundwater: http://en.wikipedia.org/wiki/Undefined_behavior
06:34 < groundwater> finishingmove: yah, i hope a dart -> node bridge proves practical 
06:34 < azylman> When behavior is undefined, things like printing it can affect the results
06:35 < finishingmove> what about Go though?
06:35 < finishingmove> i don't hear as much about that one
06:35 < asdf12> go is going
06:36 < groundwater> finishingmove: go has a lot of activity
06:36 < finishingmove> i'm just not in those circles i guess
06:37 < azylman> groundwater: http://electronics.stackexchange.com/questions/42049/arduino-serial-print-changes-behavior-of-program-undesireably
06:37 < groundwater> asdf12: the V8 team has pretty much been reassigned to dart vm
06:38 < azylman> groundwater: http://www.velocityreviews.com/forums/t665299-off-topic-strange-behaviour-adding-printf-change-the-prograexecution.html
06:39 < groundwater> azylman: i suppose if you write code like that, you need a debugger
06:39 < groundwater> azylman: my solution is to not write code like that
06:40 < azylman> azylman: I guess if you never write code in low-level languages or resource constrained conditions, sure
06:40 < azylman> er
06:40 < azylman> groundwater:
06:40 < azylman> But just because YOU don't do that doesn't mean OTHER people don't
06:40 < groundwater> i never said that
06:41 < groundwater> i said it's a preference
06:41 < azylman> I said sometimes it's not a preference because print statements modify the code
06:41 < azylman> and you said you don't write code where that's the case
06:41 < azylman> er, modify behavior
06:44 -!- mode/#Node.js [+o TooTallNate] by ChanServ
06:49 < austinc> hello?
06:52 <@mbalho> i've been alone with you
06:53 <@mbalho> inside my mind
06:53 <@mbalho> and in my dreams I've kissed your lips
06:53 <@mbalho> a thousand times
06:53 < azylman> mbalho: You're making me blush :)
06:53 <@mbalho> azylman: is it me you're looking for?
06:54 < azylman> mbalho: You're all I've ever wanted
06:54 < azylman> 'cause you know just what to say
06:55 <@mbalho> http://www.stereogum.com/img/lionel11.jpg
06:58 < _nodetemplife> you know what i haven't had in a while? big league chew.
07:33 < H4ns> hi.  in express, i would like to serve a directory with templates without manually defining routes.  i'm sure it is easy, but i can't find out how.  can anyone give me a hint?
07:34 < scourgen> symfony2.2 supports something like what you need
07:35 < asdf12> isnt that a php library
07:36 < scourgen> ofcourse itis
07:36 < asdf12> H4ns, templates need to be rendered
07:37 < H4ns> asdf12: of course.  i would like that to happen automatically.
07:37 < asdf12> you will need to define at least define 1 route
07:38 < H4ns> asdf12: ah, ok.  so i define one (wildcard) route that looks up the template in the appropriate directory and renders it, if found.  correct?
07:40 < H4ns> that works, thanks!
07:40 < asdf12> yea
07:44 < RLa> hm, thinking of ditching webstorm for kate
07:50 < sshaginyan> Has anyone connected their node.js to nginx?
07:58 < kevireilly> sshaginyan: I've read of such things, but in what way are you looking to connect them?
07:58 < sshaginyan> Just simple having my nginx listen to a particular port node is running on 
07:59 < sshaginyan> kevireilly: In the most basic way
08:00 < kevireilly> sshaginyan: I don't believe things usually share ports. Forwarding requests from nginx port 80 to node port 8080 is an example goal
08:00 < sshaginyan> ok
08:00 < kevireilly> but you may be better off using something like HAProxy (or node-http-proxy) for that
08:01 < sshaginyan> kevireilly: Take a look at this http://stackoverflow.com/questions/5009324/node-js-nginx-and-now
08:01 < sshaginyan> Create your node server app at /var/www/yourdomain/app.js
08:01 < sshaginyan> Do I have to create app.'s and run it there?
08:02 < kevireilly> sshaginyan: this is an example similar to the one i provided, simply proxying requests
08:03 < dvbman> hi
08:03 < kevireilly> sshaginyan: your node app can reside wherever as long as it is operating on port 3000 per this example and requests from 80 will get forwarded to 3000 basically
08:03 < sshaginyan> k
08:04 < smlgbl> sshaginyan: location / {
08:04 < smlgbl>                 proxy_pass http://localhost:3000;
08:04 < smlgbl>                 proxy_http_version 1.1;
08:04 < smlgbl>                 proxy_set_header Upgrade $http_upgrade;
08:04 < smlgbl>                 proxy_set_header Connection "upgrade";
08:05 < sshaginyan> kevireilly: Do you understand this whole deal with sites-available & site-enabled?
08:05 < sshaginyan> smlgbl: sites-available & site-enabled?
08:05 < smlgbl> that's symlinks. What do mean?
08:05 < sshaginyan> smlgbl: Do I have to do anything in nginx.config?
08:06 < dvbman> i'm trying to cross-compile node.js for armv7, depending on toolchain it doesn't compile at all or doesn't run on target machine...any suggestions?
08:06 < smlgbl> you put your config in a file under sites-available and symlink to it from sites-enabled.
08:06 < sshaginyan> smlgbl: Yes I did that
08:06 < smlgbl> you should keep your configs separate.
08:07 < sshaginyan> smlgbl: Now all I have to do is run nginx?
08:07 < smlgbl> then /etc/init.d/nginx reload
08:07 < smlgbl> sure.
08:07 < kevireilly> sshaginyan: if you are just trying to proxy requests, you should consider HAProxy. forealdo.
08:08 < sshaginyan> kevireilly: I'm doing this for Macys mobile and it's a requirement I use nginx
08:08 < kevireilly> it is purpose built for high availability, proxying requests, load balancing, and making ham sandwiches
08:08 < sshaginyan> I'll look into it
08:08 < echo|> ^ As an nginx advocate for many years, HAProxy is built for one thing, proxying, therefor, it's much better prepared for... proxying.
08:08 < smlgbl> ham sandwiches? where can I order?
08:08 < sshaginyan> echo: What about static files?
08:09 < sshaginyan> serving static files?
08:09 < sshaginyan> it's can't do that right?
08:09 < echo|> sshaginyan: Nginx is still the best static file webserver as far as I'm concerned.
08:09 < sshaginyan> it's just for parodying 
08:09 < echo|> Correct, it cannot.
08:09 < sshaginyan> k
08:09 < sshaginyan> so I need Nginx
08:09 < sshaginyan> But i'll look into it as well
08:10 < kevireilly> you can use both as part of a decent strategy, but you may also want to consider a CDN for static files, depending on your requirements of course
08:11 < sshaginyan> smlgbl: I'm on os x and my sites_available and sites-enabled are under /etc/nginx
08:12 < smlgbl> sshaginyan: same under debian
08:12 < sshaginyan> smlgbl: And here is my config http://hastebin.com/tasopivude.nginx
08:12 < sshaginyan> inside sites-available
08:13 < sshaginyan> and symbolic link inside of sites-enabled
08:13 < sshaginyan> smlgbl: I didn't modify nginx.config
08:13 < sshaginyan> So this should work? Le the try
08:14 < smlgbl> sshaginyan: I'm no expert on nginx config, but it might just work.
08:15 < sshaginyan> smlgbl: Nope :(
08:15 < kevireilly> sshaginyan: there is also #nginx btw
08:15 < sshaginyan> cool
08:17 < sshaginyan> smlgbl: I'm sure we have to somehow link nginx.config with sites_available and sites-enabled. No?
08:18 < smlgbl> I don't think so.
08:18 < smlgbl> But I guess, kevireilly is right.
08:31 < asdf12> oh!
08:31 < asdf12> so thats why they call it a bearclaw
08:39 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
08:41 < [AD]Turbo> hola
08:47 < Raynos> isaacs: low and high watermarks are bullshit
08:48 < Raynos> there should be one mark
08:49 <@Nexxy> tell us how you really feel Raynos 
08:50 < Raynos> It's confusing and complex to have both especially when push and pull based stream models fill up to low or the high
09:23 < kuebk> jo
09:23 < kuebk> does anyone know any good javascript guide
09:23 < kuebk> which is more about javascript than doing stuff in browser
09:27 < asdf12> i know of a book
09:28 < guor> doug crockford's "javascript: the best parts"
09:29 < asdf12> the good parts
09:29 < harrisonm> the okay parts
09:30 < asdf12> kuebk that book is good, forgot there is a good guide thats free, https://developer.mozilla.org/en-US/docs/JavaScript/Guide
09:30 < guor> right. the good parts
09:32 < asdf12> though i think neither will be any good for a beginner to programming in general
09:34 < MI61> joyent/libuv: Ben Noordhuis master * 1d64c82 : unix: use uv__set_artificial_error in uv_write2  * Use uv__set_artificial (+2 more commits) - http://git.io/_zTROQ
09:37 < fastest963> is there a way to pass a unix socket handle to a child process?
09:37 < fastest963> or is there a way to have a "cluster" but based off a unix socket instead of a port?
09:58 < alexwhitman> Is is possible to stop mocha dumping a stack trace on a failed test?
10:00 < kuebk> about the good javascript guide
10:00 < kuebk> it doesn't have to be for beginners
10:18 < HankHendrix> good morning
10:22 < thealphanerd> yup
10:25 < tigerhawk> good morning dudes
10:26 < tigerhawk> Can anyone tell me the latest and greatest screen scraping modules for node
10:37 < lingon> Im building a websocket server. I wanna know whats best practice when it comes to handling incomming messages. I need some kind of EventHandler to keep things clean. Can I read about this somewhere? Any suggestions?
10:50 < carpii> lingon, have you looked at socket.io?  or https://github.com/Worlize/WebSocket-Node
10:51 < lingon> carpii: Im using https://github.com/einaros/ws
10:53 < lingon> carpii: And what is best practice when it comes to message protocol. Should I send it like ['myType', { foo: 'bar' }] or { method: 'myType', data: { foo: 'bar' } }
10:56 < Maqs> does anybody know if node is still vulnerable to hash collision attacks?
10:57 < mheap> Morning all. Quick query about http.request
10:57 < mheap> If I start writing to the socket before the connect event is received
10:57 < mheap> Will it all be buffered up and send when the connection is established?
11:00 < carpii> lingon, its up to you how you design your protocol. Personall I use a mix of messages types and data packets  like   ('userjoined', {username: 'bob'})  and more generic messages like  ('message', {type: 'status', username: 'bob'})
11:01 < lingon> carpii: hmm, okay. thanks.
11:02 < lingon> carpii: Why should I have the messageType as first argument instead of just sending everything within a hash? Can't see any advantage
11:04 < lingon> [event_name, data_object] VS { eventName: 'userjoined', data: {} }
11:04 < bnoordhuis> Maqs: no. that was fixed a long time ago
11:04 < Maqs> perfect :-) thanks
11:06 < carpii> lingon, because most websocket libraries allow you to write seperate handlers based on the messagetype, which you cant do if you cram it in the packet
11:06 < carpii> like .on('userjoined', function(data) { console.log(data.username +  ' joined'); })
11:17 < dani86ele> ciao
11:17 < dani86ele> !List
11:32 < OliverJAsh> In Mongoose, is it possible to define a custom error message for a required path?
11:34 < lingon> Is there a equivalent of ruby send() in node js?
11:38 <@Nexxy> lingon, you're probably looking for .call or .apply
11:38 <@Nexxy> but I'm not really sure what you're asking for
11:40 < phrearch> hey
11:40 < phrearch> im trying to drop privileges after a socket listener is setup. is it possible to get the uid from a username with node?
11:41 <@Nexxy> phrearch, it's in the api docs
11:41 < tim_smart> In http://nodejs.org/docs/v0.9.10/api/stream.html#stream_readable_read_size , does it mean "will set a maximum number of bytes that you are interesting in"?
11:41 < tim_smart> s/interesting/interested/
11:41 < phrearch> Nexxy: i dont think the process module handles username to uid
11:41 < lpin> How to overwrite dependencies described by a package.json and installed with 'npm i'?
11:42 < phrearch> https://npmjs.org/package/uid-number
11:42 < phrearch> got it i think
11:42 <@Nexxy> phrearch, oh sorry. misread your question
11:42 < lpin> --force seems to have a different meaning
11:42 < phrearch> Nexxy: np :)
11:56 < _ior> does anyone have a proper understanding of what marketing departments mean these days when they say "SDK"?
11:56 < _ior> because i'm reading this design doc right now and it says things like: "recorded in several sdk events as a property, but not as a super property due to the fact that some players opt to play without an sdk, therefore this property would have null'
11:56 < _ior> i do not understand.
11:58 < _ior> what could "sdk" mean for it to be possible for "some users to opt to use software without an sdk"
11:58 < carpii> probably some sort of plugin
11:59 < carpii> or maybe theres a developer library and a consumer library, and the developer is part of the sdk
11:59 < _ior> hm
11:59 < _ior> this is in the context of mobile apps
12:13 < monkeytoe> Hello, I have been toying around with node for a couple weeks, also tinkered with some django. All of my production sites have been based off of PHP. Node has really caught my eye as I love coding in it. I am attempting to pick a stack to develop with and was hoping to get some advice from some experienced noders. [more following]
12:21 < monkeytoe> My ideal end game would be a site that upon first visit serves a pre rendered html page with 1 javascript file. That javascript file would be a browser feature tester for css and JS. That javascript file will also attempt to start a websocket connection to socket.io or something similar. If the connection is sucessful the client will be patched to handle routing itself, using websockets for 
12:21 < monkeytoe> networking. A true push system would be ideal, preferably something like meteor that automatically updates the view model of all visitors. 
12:22 < monkeytoe> Now for the big requirement... if the browser does not support websockets, or is a bot, I would like the page to be rendered server side and fed to the client, along with all the links to be handled with traditional http. 
12:22 < DarkArgon> why not meteor?
12:22 < monkeytoe> I need the ability to be able to properly SEO the app
12:23 < monkeytoe> not sure if I can do that in meteor
12:25 < monkeytoe> have you guys heard of anything like that?
12:26 < DarkArgon> don't know if you really want to push everything through websockets. what about cache?
12:27 < monkeytoe> yeah good point
12:28 < carpii> this smells a bit like over engineering
12:28 < carpii> whats the reason for wanting to architect it in this way?
12:30 < monkeytoe> I am creating a combination forum / q/a / real time chat system ... styled in a q/a site similar to stackoverflow or experts exchange... all questions asked on the site will be pushed to the chat , chat can push back answers to the site... or you can answer them on the site... but for the end user who asked the question, those answers will just start streaming in on the page
12:31 < monkeytoe> I was hoping to cut down on the http traffic... seems like a big header to send if you are only sending 5 words
12:31 < DarkArgon> socket.io + express
12:31 < DarkArgon> maybe angularjs
12:31 < monkeytoe> yeah that is what I am deving with right now... tried a bit of angular, also tried some knockout
12:34 < DarkArgon> seo with angular seems to be a pain
12:34 < monkeytoe> right now it fetches a page that runs most of the app client side , all the routing is handled with javascript... the site is blazing fast with javascript enabled... disable javascript and it breaks... 
12:35 < DarkArgon> what do you use for routing? (on the client side)
12:36 < monkeytoe> right now just some haggled together javascript, mostly jquery... 
12:38 < monkeytoe> my last tests I had integrated knockoutjs into it
12:38 < monkeytoe> and loved it
12:39 < monkeytoe> but I was really just hoping someone out there has made a framework that serves up a client side routed page if the browser supports it... if not... the clicks on the links dont get registered so it falls back to following the href, upon which the server runs jquery etc, renders the page and spits it out
12:40 < monkeytoe> best case scenario would be same functions client side and server
12:41 < monkeytoe> but these are pipe dreams I am sure lol
12:42 < DarkArgon> phantomjs maybe
12:42 < carpii> im sending a data packet back from socket.io, one field of which is called 'url'. Trying to access data.url results in exception, but if i rename it then its fine. ANy ideas why this might be?
12:43 < carpii> if i log the incoming packet to console, it shows valid, as   { url: 'somefile' }
12:44 < monkeytoe> Ah havent tried phantomjs yet
12:44 < DarkArgon> data.url works for me, try data["url"]
12:45 < carpii> still no good :/
12:46 < DarkArgon> what exception do you get?
12:46 < carpii> hm actually
12:46 < carpii> Uncaught TypeError: Cannot read property 'url' of undefined
12:46 < carpii> so its data which is undefined
12:46 < carpii> yet the line above it logs data to console
12:46 < monkeytoe> my biggest issue right now is coming from php and c++, and of some of the minimal client side javascript... each framework I try completely changes the way the site needs to be coded... I just want to get to a point where the stack I am using makes the site possible with the only exception being my coding skills
12:47 < carpii> and that works as expected
12:47 < DarkArgon> have a quick gist/pastebin of that listener?
12:47 < monkeytoe> versus going headstrong one direction and finding out it wont SEO then having to completely redo it hehe
12:48 < DarkArgon> for seo, you can do html snapshots
12:49 < carpii> DarkArgon: http://pastebin.com/Tr8xGEXi
12:49 < carpii> its kinda strange
12:49 < DarkArgon> "loading " . data.url
12:49 < DarkArgon> . ?
12:49 < monkeytoe> I wonder, could you do html snapshots with meteor?
12:49 < DarkArgon> u want to use +
12:50 < carpii> sorry darkargon, i dont udnerstand
12:50 < DarkArgon> line 11: "loading ".data.url
12:50 < carpii> ohh
12:50 < carpii> damnit :)
12:50 < carpii> too much time spent in php, thanks a heap
12:51 < DarkArgon> don't know monkeytoe, never tried meteor
12:51 < carpii> ironically my problem must have been a different one to begin with, but by trying to debug it via console, i added a bigger bug :p
12:55 < monkeytoe> as far as frameworks like meteor... there is meteor, derby, and tower right? any others that are similar?
12:57 <@Nexxy> monkeytoe, meteor is in a class of its own
12:58 < monkeytoe> from the end user perspective, I assume meteor will result in the most "connected" app as far as the feel of it
12:59 <@Nexxy> and the most "disconnected" app as far as drawing upon the resources that exist beyond only the meteor team
12:59 < Sly> NEXXY <3
12:59 <@Nexxy> SLY <3
12:59 <@Nexxy> OMG WERE YOU ON THE HELL CRUISE?!
12:59 < phrearch> hm, working on something similar
12:59 < Sly> Nope.
12:59 <@Nexxy> I WAS WORRIED ABOUT YOU
12:59 < phrearch> but this is no place for adds :)
13:00 <@Nexxy> phrearch, if you're working on something you want to share feel free
13:00 < phrearch> Nexxy: ok then :) https://github.com/l3mon
13:00 < phrearch> trying to make a websocket cms
13:01 <@Nexxy> cool!
13:01 < phrearch> first pre-pre-pre-alpha version is now online at http://l3mon.org/blog/articles/
13:01 < phrearch> :)
13:01 < monkeytoe> be back in about an hour, got to go drop off my truck
13:01 < phrearch> wow, crowded :)
13:03 < phrearch> not much functionality yet
13:03 < phrearch> but basic stuff is in place
13:14 < mscdex> synchronous I/O? ain't nobody got time fo dat
13:18 < mb> Hello. http://pastebin.com/ygDbTCEf  <- Why response.write doesn't work?
13:23 < okjake> mb try removing line 6 response.write("Test")
13:25 < Sly> mb: looks like you're racing to the end. connection.query is using a callback, so it's not called immediately.. but your response.end() is.
13:34 < enistara> exit
13:34 < enistara> test
13:36 < nodist> is there someone who made some experience with meteor.js?
13:36 < nodist> what are thecurrent pro and cons of meteor.js ?
13:37 <@Nexxy> nodist, I think that depends on what you consider a 'pro' or a 'con'
13:38 < nodist> hmm, for me it looks a bit too much mixed together at the first look ... seems a bit difficult to learn
13:39 <@Nexxy> you also don't get to use any of the 23,000 packages already on npm
13:39 < nodist> i'm not sure if i should spend more time to get in, or work the old way round with node.js, express.js, mongodb and on client side using a mvc / framework
13:39 < nodist> :-D
13:39 <@Nexxy> I bet I know!
13:40 < nodist> are the packages also available in meteor.js ? or only some of them?
13:40 <@Nexxy> none of them.
13:40 < nodist> ah
13:40 < nodist> okay
13:40 <@Nexxy> meteor is too good for npm
13:41 <@Nexxy> it has "smart packages"
13:41 < nodist> kk
13:42 < nodist> what's your experience with meteor.js?
13:42 <@Nexxy> I've been to their website
13:42 <@Nexxy> and looked over their package manager
13:42 < nodist> ah
13:42 <@Nexxy> I've also interacted with whoever runs the meteor twitter account
13:42 <@Nexxy> that's about it
13:43 < nodist> ah, okay
13:43 < nodist> thank you for sharing your experience and opinion
13:43 <@Nexxy> oh wait
13:44 <@Nexxy> I also have a meteor sticker
13:44 < nodist> is this the full package list? https://github.com/meteor/meteor/tree/master/packages
13:45 <@Nexxy> hahahaha, yeah
13:45 <@Nexxy> isn't it great?
13:45 < DarkArgon> meteor stickers, how do they look like?
13:45 <@Nexxy> DarkArgon, it's the word "meteor" on a rectangle
13:45 <@Nexxy> almost-black on grey
13:46 <@Nexxy> I don't really own anything pretentious enough to stick it on
13:47 < nodist> :D
13:48 < nodist> is there a possibiliy to access mongodb in node.js in the way like db.table.find() or db.table.save({something: 'value'}) ?
13:48 < nodist> i mean in the same way like in the mongodb tutorial
13:48 < nodist> ?
13:48 <@Nexxy> nodist, have you looked at mongoose?
13:49 < nodist> yes, mongoose is a way
13:49 < DarkArgon> https://github.com/idottv/node-mongodb-wrapper
13:49 < nodist> ahaa
13:49 < nodist> great
13:49 < niggler> has anyone tried an IDE for javascript?
13:49 < naomi> ........
13:49 < nodist> that's it !!!! thanks a lot :-)
13:49 < naomi> is your name honestly niggler?
13:49 < niggler> is your name honestly naomi
13:50 < naomi> yes?
13:50 < niggler> my answer is the same
13:50 < niggler> focus on the question
13:50 < finishingmove> niggler: NetBeans 7.3 just out http://www.youtube.com/watch?v=0y4c0XztY-0
13:51 < niggler> finishingmove netbeans supports javascript?
13:51 < BassRokr> I like Coda for an IDE
13:51 < BassRokr> OSX
13:51 < finishingmove> yes and as of this version they really took off with it
13:51 < niggler> yeah im on osx BassRokr
13:51 < finishingmove> for example you get live integration with chrome as you type your code
13:51 < finishingmove> don't even need to click save
13:52 < niggler> doesnt coda do the same finishingmove
13:52 < niggler> "Live updating See your CSS affect your page on the fly."
13:52 < finishingmove> don't know about Coda, i'm on windows
13:53 < finishingmove> i do PHP and JS so NetBeans is the best choice for me
13:53 < niggler> BassRokr how is the ipad preview
13:53 < nodist> thank you DarkArgon ! that solves it
13:54 < DarkArgon> glad i could help :)
13:54 < niggler> ill try both out, but the thing that scares me about netbeans is that it's java (and ive been having issue with java in osx)
13:54 < crabtree> hi niggler!
13:54 < niggler> hey crabtree where
13:54 < niggler> where's misterhat?
13:54 < crabtree> niggler: have you tried sublime?
13:55 < crabtree> and he is not around
13:55 < nodist> another question: ember.js vs angular.js vs backbone.js: what's your opinioni?
13:55 < naomi> ember √+
13:55 < nb-ben> could someone review this code? http://pastebin.com/iYSz8f3c
13:55 < niggler> i have, but I felt far more efficient in macvim
13:56 < crabtree> are you going to try a new ide niggler?
13:56 < nb-ben> it seem to work, but I wonder if there's any way to do it better
13:56 < mb> Sly, indeed. thanks
13:56 < Sly> mb: np
13:57 < niix> I've never been elite enough for VIM, using hjkl to navigate doesn't seem to work for me over the ol' mouse
13:58 < niggler> crabtree i like vim but I always feel like im jamming a square block through a circle hole
13:59 < crabtree> ah
13:59 < spion> niix, you can use the arrow keys too.
14:00 < niggler> then i had to do some .NET work and wondered if there was an ide for javascript with something like intellisense
14:00 < spion> intellij idea has pretty good completion for JS
14:01 < crabtree> i've always liked sublime's auto complete
14:01 < crabtree> vim has autocomplete too
14:01 < crabtree> in a plugin anyway
14:01 < spion> for vim you can use youcompleteme
14:02 < spion> (if you can go through the hassle of installing it)
14:02 < spion> its really excellent
14:02 < spion> (for a VIM autocompleter)
14:04 < niggler> youcompleteme looks interesting, but does it use ctags?
14:06 < finishingmove> nodist: angularjs > emberjs >>>> backbone
14:07 < nodist> @finishingmove: how can i understand your statement (beginner)?
14:07 < niggler> angularjs is better than emberjs, but both are much better than backbone @nodist
14:08 < nodist> ah, kk, thanks :-)
14:08 < finishingmove> nodist: yea what niggler said
14:08 < finishingmove> that's my impression, but i have used only ember and angular out of the 3
14:09 < niggler> so the reality is, finishingmove, you really arent qualified to have an opinion then
14:09 < nodist> ah, okay, thank you for your experience
14:09 < niggler> how can you say both are much better than backbone without trying it
14:09 < finishingmove> niggler, you could say that
14:09 < nodist> @finishingmove: why is angular.js better than ember.js?
14:10 < finishingmove> nodist, i just think it scales a bit better because of the concept of directives
14:10 < flexd> Does npm support the new https git urls from github?
14:11 < finishingmove> initially i liked ember more but i changed my mind later on
14:11 < flexd> For some retarded reason git:// is blocked here at work but https works.
14:11 < finishingmove> angular makes you write the least code possible
14:11 < nodist> for myself, i just tried some hello-world examples with all thrre. angular.js is very easy to use, backbone.js also, ember.js made me hard thinking at first ...
14:11 < finishingmove> and the things where you write most code become very reusable (directives)
14:12 < finishingmove> ember is very abstracted
14:12 < nodist> okay
14:12 < finishingmove> backbone (which i haven't used) just seems hackish
14:12 < nodist> great to get your informations, thank you!
14:12 < flexd> Ember is very nice.
14:14 <@Nexxy> I've never used it, but I get this feeling when I look at it
14:14 < Ivru> Hello !
14:15 < Ivru> I there a module to manage concurrency with slite3 ?
14:16 < Ivru> can't find anything
14:20 < flexd> hm, stupid git block.
14:20  * flexd goes to talk to the security people
14:24 < mscdex> flexd: git over ssh?
14:24 < flexd> Maaaybe
14:24 < mscdex> i do that a lot of times
14:24 < flexd> I can just specify ssh:// in package.json ?
14:25 < flexd> I just cloned it on a machine outside the network and used scp to copy it in now.
14:26 < mscdex> flexd: for npm it's something like: "git+ssh://git@github.com:isaacs/npm.git#v1.0.27"
14:26 < flexd> Ah right
14:26 < flexd> also I hate package managers
14:26 < flexd> with a passion
14:27 < flexd> npm install failing because it says "Unknown encoding" in the middle of some JS file.
14:27 < mscdex> with git it's just ssh://root@server/dir/.git
14:29 < tomgrooffer> hello, im looking for an captcha alternative, and came up with a solution and looking for feedback, http://hastebin.com/madofufawi.coffee
14:30 < n1c0l4s> hello guys
14:31 < alchimista> i get this error : CastError: Cast to number failed for value "510f85439cb031fc12000001" at path "msgUser_id"
14:31 < tomgrooffer> assuming of that the whole api goes through ssl, so there is no MITM vurnabilities
14:31 < alchimista> but when i wanna save, i do this ObjectId(req.body['msgUser_id']); in mongoose
14:31 < tomgrooffer> alchimista
14:31 < tomgrooffer> do this
14:32 < tomgrooffer> var ObjectID = require('mongodb').ObjectID;
14:32 < alchimista> i did as following: var ObjectId = require('mongoose').Types.ObjectId;
14:32 < alchimista> it is not the same?
14:32 < flexd> tomgrooffer: Couldn't a bot answer 4+5 fairly easily
14:32 < flexd> ?
14:33 < tomgrooffer> @flexed ehm, the whole thing should go through SSL so how does the bot get that question?
14:34 < tomgrooffer> alchimista
14:34 < tomgrooffer> http://hastebin.com/fixinekuqe.coffee
14:35 < tomgrooffer> that should do it
14:36 < tomgrooffer> flexd how can I private msg you? I'm new to IRC
14:36 < Kakera> 0.10 when
14:36 < niggler> tomgrooffer: /msg person message
14:37 < Kakera> github says it's 2 days overdue
14:43 < Chib> there are a number of rss feed readers out there for node.js, does anyone have a recommendation for a simple and straight-forward to use one/
14:43 < Chib> ?
14:45 < trodrigues> Chib: you mean feed parsing modules?
14:46 < trodrigues> http://github.com/danmactough/node-feedparser
14:46 < trodrigues> this one's pretty good
14:46 < Chib> yeah
14:46 < Chib> ooh
14:46 < Chib> cool, thanks
14:46 < trodrigues> and this one for generating: http://github.com/dylang/node-rss
14:47 < trodrigues> used them quite successfully for some stuff
14:47 < Chib> rightio
14:47 < Chib> only parsing for me (:
14:59 < tomgrooffer> someone got an centralized IP based rate limiter (using redis for example) ?
15:00 < tomgrooffer> (nodejs package ofc)
15:18 < nkohari> got a question about memory consumption in node/v8
15:18 < funkbox> any of you use google apis? which library?
15:18 < funkbox> i need just basic auth
15:18 < nkohari> it seems like the node process will eat up a bunch of ram, but never actually hit an out-of-memory mark
15:18 < nkohari> i'm just trying to figure out if we have a real memory leak or if the GC is just conservative
15:19 < nkohari> the process seems to settle around the same memory mark, and occasionally collect to increase the free mem
15:19 < nkohari> the machines also have very little downtime, so i'm figuring if the GC is conservative and only triggers a full sweep on "idle" times, it may never have one
15:23 < foobar321> Hi. Information about release from blog is not very clear if you compare it with github commit log. For example take "stream: read(0) should not always trigger _read(n,cb) (isaacs)" -> where is this change made here https://github.com/joyent/node/commits/v0.9.10-release ???
15:23 < foobar321> I want to check does my stream classes still work and look into code and where's the mentioned change ??
15:24 < foobar321> Or is it a bug on a blog note ?
15:36 < wsieroci> where do you think is good place to deploy node.js (socket.io) application to handle about few thousands of concurrent connections and about 100 req/s?  
15:37 < tomgrooffer> amazon web services?
15:38 < tomgrooffer> check https://aws.amazon.com/opsworks/
15:38 < tomgrooffer> for deployment automation etc.
15:39 < wsieroci> tomgrooffer: do you think how much could it cost for month?
15:43 < _Fuse_> hi there
15:44 < _Fuse_> is that node.js is in conflict with apache?
15:45 < lz> _Fuse_, howdy. What do you mean?
15:46 < _Fuse_> hi lz I wonder if I can install node.js and apache on the same server
15:46 < lz> _Fuse
15:46 < lz> _Fuse_, you sure can
15:47 < lz> what are you trying to do?
15:47 < jocafa> node.js isn't a web server, it just happens to *have* a web server module built in.
15:47 < foobar321> Information about release from blog is not very clear if you compare it with github commit log. For example take "stream: read(0) should not always trigger _read(n,cb) (isaacs)" -> where is this change made here https://github.com/joyent/node/commits/v0.9.10-release ??? I want to check does my stream classes still work and look into code and where's the mentioned change ?? Or is it a bug on a blog note ?
15:47 < _cardinal_> think of node more as a library
15:48 < _Fuse_> ok, thank you for your answers. For the moment I read the doc before node.js to test for the first time.
15:48 < jocafa> _Fuse_:  the only way it'll really conflict is if you try to listen for connections on the same port that you have apache configured for
15:50 < _Fuse_> yes, now I understand better now with these explanations.
15:50 < _Fuse_> *yes, now I understand better with these explanations.
15:51 < foobar321> Is there any1 tracking the changes of streams2 API here?
15:51 < foobar321> from node 0.9.x ?
15:54 < nanicoar> shouldn't I point jsctags at node_modules?
15:54 < rwaldron> isaacs ping when you have a few minutes, re: jquery on npm. I landed your patch last night, so we are good to go
16:01 <@isaacs> rwaldron: what's your npm username?
16:03 < rwaldron> isaacs mine is rwaldron, but we should make a user for jquery
16:04 < rwaldron> isaacs, if it's easier for you to just make a "jquery" user...?
16:17 < alchimis_> hi, how can i cast objectid to number
16:17 < alchimis_> ?
16:17 < alchimis_> CastError: Cast to number failed for value "510f85439cb031fc12000001" at path "msgUser_id"
16:20 < foobar321> alchimis_:  maybe convert to dec first?
16:20 < alchimis_> an example if it is possible?
16:35 <@isaacs> rwaldron: if you guys wanna use a 'jquery' user that's up to you
16:35 <@isaacs> rwaldron: tehre's no sort of "group" concept in npm, though
16:35 <@isaacs> rwaldron: it's like 10th on the list of plans (ie, scheduled for "never, or when someone else does it, whichever comes first")
16:36 <@isaacs> rwaldron: so it'd require you to do `npm adduser` type in `jquery` as the username, a passwrod, etc.
16:36 <@isaacs> rwaldron: then share that password with all the people publishing
16:36 <@isaacs> rwaldron: or, you could just add the other publishers as co-owners (and probably remove the existing owners)
16:37 < alchimis_> hello people, how can i cast string to number, e.g  this "510f85439cb031fc12000001" to this 510f85439cb031fc12000001 , I have this error CastError: Cast to number failed for value "510f85439cb031fc12000001" at path "msgUser_id" , and i can not figure it out how to solve it
16:37 <@isaacs> rwaldron: `npm help owner`
16:38 <@isaacs> alchimis_: > parseInt("510f85439cb031fc12000001", 16)
16:38 <@isaacs> 2.508704900478782e+28
16:38 <@isaacs> alchimis_: of course, you're losing some precision at that point
16:38 <@isaacs> alchimis_: since it's > 2^51
16:39 < rwaldron> isaacs no "group" is fine :) one of us will manage it
16:39 <@isaacs> kewl
16:39 < alchimis_> then i can not use it, because it is 24 digit
16:39 < alchimis_> any other solution or hint?
16:39 <@isaacs> rwaldron: you're an owner now on jquery and jQuery
16:40 <@isaacs> rwaldron: i'd recommend doing `npm deprecate jQuery "Please use 'jquery' (all lowercase) instead."` once you've updated jquery
16:40 <@isaacs> rwaldron: and remove the other maintainers
16:40 < rwaldron> rad
16:40 <@isaacs> rwaldron: unpublish is also an option, but it's way more aggressive.
16:40 <@isaacs> rwaldron: ie, will break programs depending on it
16:42 < gurjeet> I am using nvm and just installed nodejs v0.8.20 and when I run npm, it uses the one from under the 0..8.20 directory. Now when I ask npm to install a package locally which is "preferred" to be installed globally, npm goes ahead and installs it globally, despite my wish to install it locally. All I see is this message "npm WARN prefer global jake@0.5.8 should be installed with -g"
16:42 < gurjeet> $ which npm : /home/gurjeet/dev/NVM/v0.8.20/bin/npm
16:42 < rwaldron> isaacs I don't want to break anyone
16:42 < rwaldron> ok, user set up
16:43 < gurjeet> How can I force npm to install packages locally??!!
16:43 < OliverJAsh> does node-validator have a check for defined?
16:43 < zomg> gurjeet: npm installs packages locally by default
16:45 < gurjeet> zomg: But when I try to install jake (without the -g flag) it installs it in ~/node_modules/
16:45 < rwaldron> isaacs `npm owner ls jquery` lists rwaldron <waldron.rick@gmail.com>
16:46 < rwaldron> needs: "jquery <npm@jquery.com" (sorry to be a pain in the ass)
16:46 <@isaacs> rwaldron: npm owner add jquery jquery
16:46 <@isaacs> rwaldron: oh, you already changed to jquery, didn't you?
16:46 < rwaldron> damn you're good
16:46 <@isaacs> lol
16:46 <@isaacs> ok
16:47 < gurjeet> zomg: See this session: http://pastie.org/6300731
16:47 <@isaacs> done
16:47 < rwaldron> rad
16:47 <@isaacs> rwaldron: ok, just you and jquery on that biznatch
16:47 < gurjeet> zomg: See how it installs jake to  ../../../node_modules/jake
16:47 < gurjeet> That's under my home directory
16:48 <@isaacs> gurjeet: npm walks up the tree until it finds a node_modules, somewhat how git walks up the tree until it finds a .git
16:48 <@isaacs> gurjeet: so if yo'ure in ./lib/foo/ it'll still find the root of your project
16:48 <@isaacs> gurjeet: at some point int eh past, you did som enpm stuff locally in your home dir
16:48 <@isaacs> gurjeet: the fix: `rm -rf ~/node_modules`
16:48 <@isaacs> gurjeet: or, where you want it: `mkdir node_modules`
16:49 < gurjeet> isaacs: So if I want it to install it in the current directory, I should create a local node_modules/ directory first?
16:49 <@isaacs> gurjeet: or `npm init`
16:49 <@isaacs> gurjeet: or a package.json file
16:49 <@isaacs> either imply the "root" to npm
16:49  * isaacs should add this to the npm faq...
16:51 < gurjeet> isaacs:  Creating local node_modules fixed it.
16:51 < gurjeet> isaacs: npm init seems to be for the case when you are developing an npm package, which is not the case with me.
16:52 < wsieroci> where do you deploy your node.js apps besides aws?
16:52 < mal__> Hi there
16:52 < mal__> Anyone know if it's possibleto use the crypto library to match openssl rsautl, or does it have to be called on the commandline?
16:53 < OliverJAsh> am i just being really stupid, because i can't see a a validator in the node-validator module for checking if something is defined
16:53 < gurjeet> isaacs: zomg: What file should I add to my Git repo so that the next guy who clones my repo can easily install the npm packages I had installed?
16:56 <@isaacs> gurjeet: npm init.
16:56 < eighty4> I'm loading some settings for my app using var config: require('./../config.js').config but to be able to access this in other required files I need to also load it in those files. I found that you can do "global.config" but is this considered bad practive? (Using node.js and express).
16:56 <@isaacs> gurjeet: you should add a package.json file with your dependencies in it
16:56 <@isaacs> gurjeet: once you have a package.json file, you can do `npm install whatever --save` to sav it
16:56 <@isaacs> gurjeet: it's not just for publishign
16:57 < wsieroci> could you tell me what is reliable service for node.js production ready which support websockets out there?
17:03 < josefrichter_> slightly off topic: please, I'm looking for a lightweight mobile UI framework, something like jQ Mobile, but with just basic stuff like page transitions, etc. I don't need all the styled lists, I don't need cross platform stuff (iPhone only is OK). Any suggestions please?
17:04 < CoverSlide> maybe check out enyo 
17:05 < CoverSlide> i don't know really
17:05 < carpii> theres sencha too, though its extjs based and not that nice to work with
17:05 < PhanLord> question if i use cluster module of node.js does it confine each handle to its own process (after connection is established , any data callbacks will be invoked in same process ? )
17:05 < jocafa> sencha isn't particularly lightweight hehe
17:05 < CoverSlide> although i hear sencha doesn't lag quite as much as jqm
17:06 < PhanLord> another one :) if i have top module that requires bunch of other ones, will i import all those automatically when requiring top one ?
17:08 < jocafa> i've tried a bunch of frameworks, but i just keep coming back to writing my own ui stuff on top of backbone
17:08 < carpii> yeah if you dont need cross-platform, id be tempted to just write it yourself in jquery
17:08 < carpii> or backbone, whatever
17:09 < lpin> is it possible to overwrite dependencies every time `npm install` is called? -f or --force does not seem to work
17:10 < lpin> trying to avoid something like `rm -rf node_modules && npm install`
17:10 < jocafa> i end up spending as much time on customizing off-the-shelf stuff as i would just *writing* it to begin with, when it comes to UI
17:10 < jocafa> just my 2¢
17:10 < josefrichter_> most of them accent cross-platform. I don't need that. I want iPhone only, I want my own custom controls / styling. I want lightweight and FAST, to be wrapped in Phonegap or something. JQM is a huge slow beast.
17:12 < josefrichter_> jocafa: I'd need something really basic - like having a list, transition to a list item detail screen and back, etc. no UI elements etc… But don't wanna write it completely from scratch, I'm not such a js ninja yet :-)
17:13 < josefrichter_> maybe something to be used on top of zepto.js I guess...
17:13 < jocafa> if you're targeting just iphone, you can take advantage of all the sexy webkit transform and transition goodies.  they're hardware accelerated
17:14 < evlapix> Why does node die on errors when the program is not run as root?
17:14 < carpii> why shouldnt it ?
17:15 < CoverSlide> umm what?
17:15 < bradleymeck> lpin: verbose but… npm i $(for REIN in node_modules/*; do basename $REIN; done); npm i
17:15 < CoverSlide> usually an error means "OH FUCK DON'T KNOW WHAT TO DO! NEED TO QUIT!"
17:15 < CoverSlide> no matter who it's running as
17:15 < jocafa> node curses a lot.
17:16 < evlapix> carpii: It should die an errors, I agree. But when run as root, it doesn't. It just continues. 
17:16 < CoverSlide> this is true for most programming languages
17:16 < carpii> which error?
17:16 < lpin> bradleymeck i see, like calling npm i on each dep
17:16 < carpii> maybe its not getting the error *because* its running as root
17:16 < evlapix> carpii: { [Error: Cannot find module './DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }
17:16 < carpii> and when run as root, you get the same error?
17:16 < evlapix> I get the error as root too.. It just gets reported to console, then continues. 
17:17 < CoverSlide> there's probably something in the code that's doing so. doesn't seem like a node thing
17:17 < lpin> bradleymeck  i was looking for a param to force reinstall but looks like there isn't
17:17 < evlapix> carpii: Yup. 
17:17 < lpin> anyway thank you
17:18 < josefrichter_> jocafa I understand your point. I'm just not that good in javascript, so I need at least basic structure, which I can slightly customize and style.
17:18 < jocafa> *nod*
17:18 < bradleymeck> all i want from most frameworks that they refuse to give me is hookable behavior, they want pure blackbox everythings java style
17:18 < jocafa> i don't know of anything off the top of my head that you could use, josefrichter_  :T
17:20 < josefrichter_> jocafa ok thanks anyway
17:20 < CoverSlide> all frameworks should use eventemitters
17:22 < bradleymeck> CoverSlide: not eventemitters middleware stacks, emitters are for notification / responding to notification, middlewares are for changing behavior, think of emitters as dtrace and middleware as kernel modules
17:31 < triptec> is there anyone that would recommend phpstorm as a node.js IDE?
17:32 < FellowMD> triptec: I use webstorm and am very happy with it
17:33 < FellowMD> Both by jetbrains, but I haven't actually used phpstorm
17:37 < groundwater> CoverSlide: agreed on event emitters
17:38 < triptec> FellowMD: okay, I'll give it a try then
17:38 < triptec> I guess it's more or less the same product
17:38 < FellowMD> They've got a webstorm 6 beta currently
17:39 < FellowMD> It's quicker than 5 by a noticeable amount
17:40 < FellowMD> http://confluence.jetbrains.net/x/Z6TyAg
17:44 < draginx> Anyone here use component? And does anyone know how I can build to a public directory rathere than the current directory?
17:46 < draginx> nvm
17:53 < mal__> Anyway to get crypto.createSign to match the "openssl rsautl -sign" output?
18:02 < StPiere> is node.js well suited for holding many open connections at once ?
18:03 < StPiere> can someone say something about it's performance in comparing with erlang?
18:08 < FellowMD> StPiere: from what I've seen it depends on the type of connections
18:09 < FellowMD> If you're keeping open websockets or something, it does tend to get bogged down
18:10 < FellowMD> but, there are a whole lot of articles I've seen around titled 'Scaling node to x concurrent connections!'
18:10 < FellowMD> I think I've seen 100k, 200k, maybe 300k
18:10 < FellowMD> here's one: http://blog.caustik.com/2012/04/08/scaling-node-js-to-100k-concurrent-connections/
18:10 < durre> if I was to start writing a rest api with say something like restify or express. how well does it scale?
18:12 < FellowMD> I mean it kind of depends on how much stuff you're doing on the back end
18:13 < FellowMD> But because node is evented, it means if you're doing things right then people aren't usually bogged down by other peoples' requests
18:13 < FellowMD> I've no experience with restify personally, but express is not that difficult to work with
18:15 < Deathspike> durre: You can use clustering for multi cpu systems and you can scale out with dif servers. There is no real limitation on how far you can scale.
18:16 < durre> FellowMD: so I should just be able to add more dynos to heroku for instance and wait for the database to say stop?
18:17 < durre> deciding between node, play framework and possibly sinatra
18:22 < Deathspike> durre: Pretty much.
18:23 < durre> anyone know of a really large nodejs rest installation? I think I remembered something about linked in using it?
18:24 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:33 < sandropasquali> has anyone found major bugs in the Domain interface?
18:34 < MI61> joyent/node: Trevor Norris master * 7301ba3 : process: fix bug where spinner wasn't called  Apperently there is a case  - http://git.io/4QxrtA
18:35 < FellowMD> durre: Yeah I've heard LinkedIn uses node for their mobile rest interface.
18:36 < FellowMD> Also https://new.myspace.com/home
18:36 < FellowMD> Cloud9 IDE too
18:37 < durre> mr timberlake has many talents. music, acting and also hacking javascript :o
18:37 < bpoppa> are there any good references for optimizing a linux distro to handle a high traffic node server
18:37 < spots> hi, what is an good module to generate documention?
19:01 < groundwater> bpoppa: there are many things that can be done, can you be more specific
19:02 < mscdex> http://goo.gl/E0mym
19:02 < mscdex> Nexxy: ^
19:09 < bpoppa> groundwater: thanks for responding...I was just wondering if there was some online docs that was like a checklist of things to check and params to change in order to ensure the server handles a lot of connections as efficiently as possible
19:10 < bpoppa> obviously the application has a lot to do with that
19:10 < ben_alman> anyone know of a node.js markdown parser that has TOC / header anchor support?
19:10 < bpoppa> but I am also interested in the linux server side as well
19:12 < groundwater> bpoppa: the only 'general' rule i can think of is to check how it scales
19:13 < groundwater> bpoppa: ideally your CPU usage will scale linearly with respect to connected users
19:28 < context> anyone up for puzzles: i need a function to do this; 1: 1:2 => 0:-1 - 1
19:28 < context> errr
19:28 < context> http://pastie.org/private/7162ajkyfbxtujp8n3zla
19:29 < carpii> so whats stopping you writing one?
19:30 < mscdex> ^
19:32 < Aartsie> can some one tells me why dbmodel.find({ 'group_users' : { $in : [ '511d3e71936019ba0d000001' ] }}, function(err, docs){  }); works great but when i do dbmodel.find({ 'group_users' : { $in : [ userid ] }}, function(err, docs){ });it don't work with mongoosejs
19:32 < DarkArgon> if (a==2 && b == 1) return 0; bla bla bla :P
19:32 < MI61> joyent/node: Fedor Indutny master * ebc95f0 : tls: _handle.readStart/readStop for CryptoStream  lib/http.js is using st - http://git.io/_muhaQ
19:34 < niggler> is there a way to set ansi colors for console.error and console.warn
19:34 < context> carpii: im trying to find an intelligent way of doing it
19:36 < othiym23> niggler: use the colors module?
19:36 < othiym23> that's pretty much what everybody seems to end up doing
19:36 < niggler> hmm
19:37 <@isaacbw> can you not just put the ansi codes in?
19:37 < othiym23> yeah, and you can monkeypatch console.* to do whatever you want
19:38 < asdf12> i was bored late last night, and i was | | this close to forking egress
19:38 < CoverSlide> can i make my app birth unicorns with it?
19:38 <@isaacbw> what would you have added asdf12 
19:38 < asdf12> tests
19:38 < niggler> again, its possible to do this manually
19:38 <@isaacbw> ah
19:38 < asdf12> can't contribute without tests anyway!
19:38 <@isaacbw> sure you can!
19:38 < niggler> i was hoping for one line magic that would just make all console.warn lines show up yellow and all console.error lines show up red
19:38 <@isaacbw> living on the edge
19:38 < othiym23> niggler: sorry chum
19:39 < asdf12> yea but without tests, you expect contributors to read yo mind
19:39 <@isaacbw> that's a pretty good point
19:39 <@isaacbw> I'll try and get some tests going
19:39 < asdf12> and anyway, i heard chatter was going to be better
19:39 < asdf12> so im going to wait on that
19:39 <@isaacbw> chatter is going to be the shit
19:40 <@isaacbw> for realz yo
19:42 <@isaacbw> I'm really bad at writing tests
19:43 < samholmes> Could I get some opinions up in here? http://samholmes.me/post/43660373981/node-js-routing-from-a-routes-file
19:43 < asdf12> write tests for yo tests
19:45 <@isaacbw> samholmes: is english a second language?
19:45 < samholmes> isaacbw: That's a relative question.
19:45 <@isaacbw> it's a little hard to follow
19:45 < samholmes> Sometimes english is a third language.
19:46 <@isaacbw> ;)
19:46 < samholmes> My blog post has errors
19:46 < samholmes> just posted it,
19:46 < samholmes> needed to proof read I suppose. :P
19:47 <@isaacbw> it would help
19:47 < tpayne> does express have helpers by default? If so, where can I find documentation on how to create and use them?
19:48 < asdf12> isaacbw: though i think everything coming out of new Router() is a bit silly
19:49 < samholmes> isaacbw: refresh
19:49 <@isaacbw> asdf12: hmm?
19:49 < asdf12> isaacbw: following your example readme, shouldn't it be var article = new root.Route() ? instead of new Router() again?
19:50 <@isaacbw> mmmmmmmmmmmm, no
19:50 <@isaacbw> a router has routes
19:50 < asdf12> yea but why am i creating 2 router objects
19:50 <@isaacbw> so you can modularize
19:50 < asdf12> and why couldn't i just do article.append
19:50 < Pavi> I am not able to get my OPenssl working with my node
19:51 < asdf12> since its the same object
19:51 <@isaacbw> same as what
19:51 < Pavi> I always get the below error error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol:../deps/openssl/openssl/ssl/s23_clnt.c:683
19:51 < asdf12> isaacbw: root and article are both Router objects?
19:51 < Pavi> any one aware of this problem
19:51 <@isaacbw> yes
19:52 < asdf12> isaacbw: so why do i need to create two? they're the same! so why cant i create when and append itself? 
19:52 < asdf12> when = one
19:52 < Pavi> i read through some forum  it said the change ur protocol value from https to https://
19:52 <@isaacbw> you don't *need* to create two. It's an example. In my app I do something like root.append(require('./routes/articles'))
19:52 <@isaacbw> it's a way to modularize
19:52 < finishingmove> guys, a general usage question for those of you who understand node a bit better:
19:53 < finishingmove> if i have a front-end, a proxy on the same domain, and a real API somewhere remote, where would i fit node into this picture?
19:53 < asdf12> ok
19:53 < asdf12> semantically it doesn't follow i guess? because why would i make a new Router object when i want to make a route
19:54 <@isaacbw> I see
19:54 <@isaacbw> you would make it if you want to define a new group of routes
19:54 < MI61> joyent/node: Arianit Uka master * 055110d : path: join throws TypeError on non-string args  lib/path.js:   - throws a - http://git.io/WNBdJA
19:54 <@isaacbw> maybe I should be more descriptive
19:56 < tpayne> nm helpers aren't necessary
19:58 < Pavi> Is TooTallNate there?
19:58 < Pavi> isaacbn
19:58 <@TooTallNate> Pavi: sup?
19:59 < Pavi> Great
19:59 < Pavi> Hi i am having trouble in my ssl validation for node
19:59 < Pavi> 3078608592:error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol:../deps/openssl/openssl/ssl/s23_clnt.c:683
19:59 < Pavi> I alwas get theis error
20:00 < Pavi> my program is @ https://gist.github.com/anonymous/5007647
20:00 < Pavi> i have a socks5 server running
20:01 <@TooTallNate> Pavi: well that sounds like a lot of variables that could be getting in the wy
20:01 <@TooTallNate> way
20:01 < Pavi> :(
20:02 < Pavi> any idea where i am going wrong
20:03 < Pavi> All i want is use the nodejs ssl
20:04 < Pavi> i took the pem from firefox when i accessed that url
20:04 < Industrial> Say I use node-threads-a-gogo, how do I know/decide the size of my thread pool?
20:05 < Pavi> TooTallNate any idea?
20:06 < Pavi> where i am going wrong
20:06 <@TooTallNate> Pavi: i don't have an idea unfortunately
20:06 <@TooTallNate> Pavi: you should open a thread on the mailing list
20:06 < Pavi> how can i do that
20:06 < Pavi> ?
20:07 <@TooTallNate> http://groups.google.com/group/nodejs
20:10 < Pavi> Thanks TooTallNate i have posted
20:11 < Pavi> its available at https://groups.google.com/forum/#!topic/nodejs/rHcODQoxAQU
20:11 < niggler> ok this is beautiful: i run npm update -g not under root and for some reason it seemed to have clobbered npm
20:11 < Pavi> Hope soem one helps
20:24 < finishingmove> can someone answer my question?
20:25 < finishingmove> if i have a front-end app + proxy + rest api
20:25 < bradleymeck> on irc it is better to ask than ask to ask ....
20:25 < finishingmove> where would it be optimal to implement node?
20:25 <@isaacbw> huh?
20:26 < bradleymeck> depends on what you want node to do
20:26 < asdf12> finishing, caching the api ? if thats something you want?
20:27 < asdf12> whats the proxy for?
20:27 < finishingmove> the real API would be on another domain
20:27 < OliverJAsh> any idea how using underscore/lodash you can extend an object **and** it's nested objects
20:27 < finishingmove> so i would proxy because of crossdomain ajax issues
20:28 < sayd> i am trying to use nodeenv within a virtualenv (nodeenv -p), anyone using that? getting this error https://gist.github.com/marr/d940b78df578af3790ea
20:28 < niix> Anyone have any recommendations on a ORM for node apps?  Looking for something similar to the django admin so I can quickly browse data
20:28 < asdf12> finishingmove, then use node to do that? and cache results if that matters to you?
20:29 < bradleymeck> OliverJAsh: look at merge-recursive
20:30 < ericelliott> is it a good idea to `process.chdir(__dirname)` so that I can write all my requires relative to the project root?
20:31 < ericelliott> require(process.cwd() + '/path/to/file'');
20:32 < bradleymeck> ericelliott: why not use relative requires?
20:32 < OliverJAsh> i think lodash's _.merge does the trick
20:33 < boytoy> hello. anybody else had problems with nodejs on openbsd 5.2? on 5.1 my rails app that is dependant on node as its js engine worked just fine. on 5.2 though, it just wont work.
20:33 < boytoy> no logs or nothing
20:33 < boytoy> i mean it works partially. it's just all very strange.
20:34 < ericelliott> bradleymeck: I read somewhere that relative requires can return different results for singletons... require('../foo'); in one module might return a different singleton than require('../../foo'); in another module. Is that not the case?
20:34 < bradleymeck> ericelliott: if you are using singletons, please stop
20:34 < bradleymeck> it causes problems yes
20:35 < ericelliott> bradleymeck: Hmm.. what are some better alternatives?
20:36 < ericelliott> for context, I'm writing an express app. Attempting to share my config as a singleton.
20:37 < ericelliott> I'm using nconf. I suppose I could let it rebuild the config object for every require() call, but I was hoping I could just cache it.
20:37 < bradleymeck> 1. dont use singletons (they will haunt you when making full mocked/spied tests) 2. npm dedup to remove all duplicated modules which cause these problems 3. if you are sharing stuff, pass it in as an argument ala: module.exports = function (ctx, app, w/e) 4. use absolute paths like the __dirname stuff
20:37 < bradleymeck> if you really want a singleton (config and logs are only legit uses I can think of) go for #3
20:39 < bradleymeck> ericelliott: to be clear the shared cache issues come from the node_modules folders so if it just a file, just use the file
20:39 < bradleymeck> if its a module, thats when things get hairy
20:40 < CoverSlide> Bacon Pancakes, Makin Bacon Pancakes. Take some bacon and I put it in a pancake.
20:40 < boytoy> CoverSlide: sounds good
20:40 < SandorKrashna> Hello everyone, I am using express to build a socket.io app and i have a main.js file in the public folder. The main.js file is connecting to the server socket with socket = io.connect('http://localhost'); my question is how can I have that localhost be in a config file?
20:40 < boytoy> CoverSlide: sprinkle some pussy juice on that and it's good to go!
20:41 < SandorKrashna> I need to have the hostname be in a config that i can reference in client includes
20:43 < CoverSlide> boytoy: http://www.youtube.com/watch?v=zalYJacOhpo
20:44 < boytoy> CoverSlide: lulz
20:44 < boytoy> nice
20:51 < ericelliott> bradleymeck: What's the advantage of using relative paths vs absolute paths?
21:11 <@isaacbw> does anyone else have a weird broken menu on aws.amazon.com
21:11 < Gabriel403> nope
21:11 <@isaacbw> :C
21:14 <@isaacbw> http://dl.dropbox.com/u/10832827/aws.png
21:14 <@isaacbw> it's like this on every computer I have and every browser
21:14 <@isaacbw> and it's been like this for a very long time
21:14 < sshaginyan> Has anyone tried to use nginx with node?
21:14 <@isaacbw> lots of people do sshaginyan 
21:14 < sshaginyan> Whenever I do a fileRead function everything hands
21:14 < sshaginyan> hangs
21:15 < sshaginyan> it says pending
21:15 <@isaacbw> it seems like the content pane is too narrow just for me
21:15 < sshaginyan> isaacbw: Have you had this problem
21:15 <@isaacbw> what does that have to do with nginx sshaginyan 
21:15 < sshaginyan> isaacbw: Because when I try to access node.js though it's port I don't have that problem
21:15 < sshaginyan> only when I access though nginx
21:16 <@isaacbw> websockets?
21:16 < sshaginyan> isaacbw: Here is my config am I doing anything wrong
21:16 < sshaginyan> http://pastie.org/6311746
21:16 < sshaginyan> no ajax
21:17 <@isaacbw> what does this have to do with fileRead
21:17 < MI61> joyent/node: Nathan Rajlich master * 50c88e0 : test: modify async native test.js to test for #4820 (+1 more commits) - http://git.io/ZrIbuA
21:17 <@isaacbw> and what's fileRead
21:18 < sshaginyan> isaacbw: here is my code http://pastie.org/6311761
21:18 <@isaacbw> sorry, I have no idea
21:18 <@isaacbw> I can't really help you debug your code
21:18 < sshaginyan> isaacbw: it's in the api
21:18 < sshaginyan> lol your cute my code doesn't have problems
21:19 < sshaginyan> I'm just asking have you encountered something of this sort? Actually have you ever used nginx?
21:19 <@isaacbw> I have
21:19 < sshaginyan> good job
21:20 < Gabriel403> isaacbw: http://blackdwarf.autonomicpilot.co.uk/caps/5dccfe.png
21:21 <@isaacbw> Gabriel403: if I fiddle with the css in an inspector I can get it to fit properly. I wonder why it only seems to be affecting me, regardless of my system or browser
21:21 <@isaacbw> it's like I'm sitting near a CDN edge with a bad stylesheet
21:22 <@isaacbw> (or monitor resolution)
21:23 < sshaginyan> isaacbw: Here is a little tiny bit of code (not scary I promise) and since you haven't used fs (file system) api in node I have a url at the top. http://pastie.org/6311789
21:25 <@isaacbw> I've used the file system api plenty ;)
21:25 <@isaacbw> there's no fileRead function
21:25 < sshaginyan> isaacbw: When I access this though nginx and look under networks in chrome I get a pending message
21:26 <@isaacbw> make sure the path is what you're expecting it to be
21:26 < sshaginyan> through*
21:26 < ericelliott> sshaginyan: http://nodejs.org/api/fs.html#fs_fs_readfile_filename_encoding_callback
21:27 <@isaacbw> I think you're probably getting tripped up with how the path behaves through nginx
21:28 < styol> sshaginyan: where is pathToJsonFile defined?
21:37 < styol> sshaginyan: you may also want to see the absolute end of this page regarding express and nginx http://expressjs.com/guide.html
21:37 < styol> err http://expressjs.com/guide.html#proxies
21:39 < sshaginyan> styol: thanks
21:40 < sshaginyan> styol: It's defined inside a directory on the same level as server.js
21:40 < sshaginyan> styol: Well the directory is at the same level as server.js
21:41 < styol> sshaginyan: location of the node javascript file itself doesn't really matter as you're not serving it up via nginx, the port matters more and then nginx forwards requests for everything (or certain things) to that port with that path
21:42 < sshaginyan> styol: Yes I know
21:44 < baudehlo> This was a fun afternoon: http://baudehlo.wordpress.com/2013/02/21/render-pdfs-on-the-server-with-pdf-js-and-node-canvas/
21:45 < brianc> what's the advantage of using nginx as a reverse proxy?
21:45 < baudehlo> it's fast, well written, stable and well supported?
21:45 < brianc> why use a reverse proxy at all?
21:45 < baudehlo> Oh I see. I use it because it allows me to restart my node process and nobody ever gets a connection error.
21:46 < baudehlo> they get a page from nginx saying "we're currently experiencing difficulties"
21:46 < brianc> ah
21:46 < brianc> if you use the node cluster module you can roll your own hot/rolling restarts
21:46 < carpii> theres other reasons too, maybe you want to help load balance or run a node socket server on a different machine (but need to work around the crossdomain problem)
21:46 < baudehlo> yeah but nobody has standardised it yet.
21:47 < OliverJAsh> is it worth switching from mongoose to jugglingdb?
21:47 < styol> baudehlo: here is another option though i'm not sure if there is a performance trade off https://github.com/LearnBoost/up
21:47 < brianc> I'm able to pull off 0 downtime reloads of a node proxy I have in production 
21:47 < AviMarcus> Uhm. Do I need to do something special to publish a package that works as a global from the command line?
21:47 < brianc> i use the cluster module & fork new workers when it recieves a signal
21:47 < AviMarcus> I though npm install X -g let you run it from the command line
21:48 < brianc> the old workers gracefully die when all open sockets are closed
21:48 < brianc> I'm still not sold on using nginx as reverse proxy
21:48 < brianc> I like my node on port 80!
21:48 < baudehlo> I also use it for serving static content, because it's faster than node
21:48 < carpii> brian, nobodies asking you to use a proxy ;)
21:48 < brianc> i just woooondering if someone could sell me on it
21:48 < brianc> definitely not trying to troll
21:48 < carpii> but if you had a bigger site and were integrating a node feature into it, then youd probably look at it differently :)
21:49 < brianc> carpii: you're right about that
21:49 < context> brianc: freak
21:49 < brianc> haha
21:49  * brianc cries
21:49 < styol> AviMarcus: does the module specifically say that it has command line tools? Not any module will just work on the command line with -g
21:49 < context> brianc: why have node waste its time serving static files, when nginx is a damn pro at it
21:49 < baudehlo> also the big thing for me is that I want a separate node process for each host, but all on the same port.
21:50 <@isaacbw> every time I boot into windows I die a little
21:50 < brianc> context: I suppose if I were serving lots of static files I would have to look at the pros & cons then
21:50 < AviMarcus> styol, I'm making it. I want to know how to set it up.
21:50 < brianc> baudehlo: yeah that is also a decent reason
21:52 < baudehlo> other people use it for ssl, since node is very slow at ssl.
21:53 < bnoordhuis> everything is really slow at ssl
21:53 < bnoordhuis> nginx isn't that much faster really
21:53 < styol> AviMarcus: are you utilizing "bin" in your package.json? https://npmjs.org/doc/json.html#bin
21:53 < AviMarcus> styol, I just found that.. no.
21:54 < styol> AviMarcus: ah gotcha
21:54 < baudehlo> bnoordhuis: fair point. But the fact that people are working to make node ssl faster shows they think there's work to do there.
21:54 < AviMarcus> styol, do you know what I should be putting on top of my file? #!/usr/bin/env node ? nothing?
21:56 < styol> AviMarcus: That should do it indeed
22:06 < rluna> hello
22:07 < OliverJAsh> I'm looking for advice on a Node.js RESTful API stack: database adapter, models, validation, and services, etc. http://stackoverflow.com/questions/15013070/node-js-restful-api-stack-database-adapter-models-validation-and-services
22:12 < sshaginyan> styol: I'm sure this is a nginx problem
22:14 < sshaginyan> styol: When I'm getting a 600kb json file nginx takes a longer time and does not complete loading the file where as simply node.js does
22:16 < dan_johnsin> Is there an option in package.json to never publish ?
22:16 < spion> isn't private supposed to ensure that?
22:18 <@isaacbw> dan_johnsin: it won't publish unless you publish it with npm, but you can prevent an accidentally publish with "private": true
22:18 <@isaacbw> *accidental
22:18 < dan_johnsin> isaacbw: thanks very much :)
22:19 < dan_johnsin> spion, thanks
22:21 < sshaginyan> isaacbw: Does nginx make things slow?
22:21 <@isaacbw> sshaginyan: it shouldn't
22:21 < AviMarcus> if I specify a "start" and "end" when opening a file read stream, then the system will ONLY read those parts of the file? e.g. reading a small part of a 1gig file, it will jump to the correct place?
22:23 < sshaginyan> isaacbw: I'm loading up a 600kb json file and printing it to the screen. When I use nginx it only loads a part of the file and then hangs but node does it just fine.
22:23 <@isaacbw> so aws.amazon.com is fine on windows, but is broken on both of my arch boxes :(
22:23 <@isaacbw> sshaginthere might be a config option regarding transfer size or time
22:24 < sshaginyan> realy
22:27 < tpayne> is there no continue; in a _.each ?
22:28 < spion> return should do that?
22:28 < tpayne> but i want it to continue in the loop
22:30 <@mbalho> tpayne: use callbacks
22:30 < tpayne> ok
22:31 < CoverSlide> if you want continue, return
22:32 < styol> sshaginyan: what does your config look like
22:32 < MI61> joyent/libuv: Ben Noordhuis v0.8 * 86ae8b3 : unix: handle EINPROGRESS for unix sockets  Before this commit, it was ass (+1 more commits) - http://git.io/Vd1OIg
22:32 < MI61> joyent/libuv: Ben Noordhuis master * 3348cd7 : unix: handle EINPROGRESS for unix sockets  Before this commit, it was ass - http://git.io/JSj4vA
22:37 < tpayne> mbalho: fyi return false; works as continue
22:37 <@mbalho> tpayne: ah cool
22:41 < rudasn> has anybody worked with holla for webrtc? https://github.com/wearefractal/holla
22:41 < iheartjs> callumacrae, it works fine for me with a p as opposed to div
22:42 < iheartjs> whoops wrong window
22:43 < asdf12> rudasn: check out http://peerjs.com/
22:44 < rudasn> asdf12: does it support webrtc? couldn't find a code sample
22:46 < asdf12> it only supports webrtc
22:46 < asdf12> i thought that was obvious with the word webrtc everywhere on the home page :P
22:49 < fastest963> if I spawn a child with child_process and I make fd 4 be a pipe, how can I listen to that fd from the client?
22:50 < fastest963> i tried using new net.Socket({fd: 4, readable: true, writeable: false});
22:50 < fastest963> but the data event is never fired
22:53 < rudasn> asdf12: hm.. seems a bit rough to get started. no code samples for anything other than the chat app
23:02 < pselden4> what's the correct way to handle the "Error: socket hang up" i'm seeing now on 0.8.20?
23:02 < pselden4> when the request is closed mid-flight
23:04 < styol> rudasn: may I ask what you're looking to use it for? Very neat idea, but browser support is seriously lacking
23:04 < CoverSlide> if browser support was a consideration, he'd be using flash
23:05 < w3pm> i'm using nodemon and get an EMFILE crash randomly after reloading 6-7 times, usually after some files have been added or deleted ...
23:05 < w3pm> anyone have similar issues?
23:05 < rudasn> I know, I'm just playing around at the moment, but also have an app (and client) in mind to potentially use this
23:05 < pselden4> anyone else experiencing: Error: socket hang up errors since upgrading to 0.8.20?
23:05 < w3pm> pselden4: new feature
23:06 < w3pm> if the socket hangs up before you respond you get an error, which you have to handle
23:06 < w3pm> atleast thats what happens in http
23:07 < pselden4> breaking change in a point release? :(
23:07 < w3pm> i know but what can youd o
23:07 < w3pm> upgrades are always dangerous anyway
23:08 < pselden4> do i have to get at the underlying socket to listen for error?
23:08 < styol> CoverSlide: fair enough
23:08 < w3pm> pselden4: i'm using http, but what I did was response.addListener('error', function(err) { something; } );
23:09 < w3pm> i dont know about at the socket level
23:09 < w3pm> where respones is createServer(function(request, response) { } );
23:09 < w3pm> etc
23:09 < pselden4> k, i'll see what i can do -- i'm using request so  hopefully the function(req,res, next) -- res is the same thing
23:09 < pselden4> thanks!
23:10 < w3pm> np
23:10 < pselden4> maybe a middleware just to a listener :/
23:10 < pselden4> to add *
23:11 < pselden4> is there any cleanup that needs to be done?
23:13 < MI6> joyent/node: Ben Noordhuis v0.8 * ef94521 : zlib: fix assert on bad input  The following test case occasionally trigg - http://git.io/nZghTQ
23:14 < w3pm> not sure tbh
23:15 < pselden4> yeah that works fine
23:16 < w3pm> cool
23:17 < d4rklit3> hi
23:17 < d4rklit3> im having some trouble with sometng in express
23:18 < d4rklit3> it seems that there is no way to tell it to route any path to /index.html      unless the path is otherwise defined or is static
23:18 < d4rklit3> like in apache this is really easy with mod_rewrites
23:18 < d4rklit3> for some reason in express there doesnt seem to be a way to do this
23:18 < spion> are you sure? I think i remember the router supporting regex.
23:19 < d4rklit3> like if /images/poop/chicken/donkey/fork.jpg exists then load it.. if not then load /index.html 
23:19 < d4rklit3> it doesn't support wildcards afaik
23:19 < d4rklit3> like i can't just be *
23:21 < othiym23> d4rklit3: Express supports regexp routes: http://stackoverflow.com/questions/12333845/expressjs-route-regex
23:22 < d4rklit3> thanks i'll give it a try
23:22 < MI6> joyent/node: isaacs master * 089ec58 : path: Throw TypeError on non-string args to path.resolve - http://git.io/7kdbpg
23:23 < MI6> joyent/node: isaacs created branch pr/4828 - http://git.io/Mlobvg
23:26 < rogo> i'm totally new to node, trying to use a package called osc.io- is it normal to have to download a gagillion dependent node packages into your project folder??
23:26 <@mbalho> rogo: yep
23:26 < othiym23> rogo: sure is
23:27 < rogo> haha okay
23:27 < rogo> thanks
23:30 < MI6> joyent/node: isaacs master * a63c28e : stream: Return false from push() more properly  There are cases where a p (+1 more commits) - http://git.io/gNzvbQ
23:55 < asdf12> othiym23: you there?
23:57 < cloudbender> what's the set command I use to prevent room enter/leave commands ?
23:59 < carpii> is there one?
23:59 < carpii> cos that would be very nice
23:59 < carpii> i was trying to find a filter option in my client last night :p
23:59 < cloudbender> Well xchat had a setting, but pidgin does not seem to
23:59 < carpii> yeah id guess its a client option rather than a server command
--- Log closed Fri Feb 22 00:00:14 2013
