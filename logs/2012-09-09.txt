--- Log opened Sun Sep 09 00:00:33 2012
--- Day changed Sun Sep 09 2012
00:00 <@Nexxy> cleos_frey PM
00:00 < nlf> is there an easy way for me to have my npm package install a dependency with a bin and get the path to that bin?
00:01 < nlf> i'm currently using `npm root`/mymodule/node_modules/.bin
00:01 < nlf> but that seems sloppy
00:23 < rio{> Using mongoose, how come this gets stuck and never calls the callback mongoose.model('User').findOne({username: username}, function () { console.log('foo'); });
00:23 < rio{> My question beein, what can cause find() / findOne to get stuck?
00:26 < samholmes> If I'm building an application on top of HTTP/Express and I want to start using some realtimey stuff with sockjs/shoe/dnode, where would you recommend I place the server code for the various dnode RPC methods?
00:27 < BennyLava> IN THE CLOUD
00:27 < samholmes> I could put it all in app.js, but I don't even put the express router callbacks in the app.js anymore. I've moved that over to individual controller files.
00:27 < samholmes> BennyLava: haha...
00:28 < samholmes> require('./controller/foobar')(app); is what I do for each controller file in app.js. Each controller exports a function that accepts app and adds all the route callbacks to it. Of course the routes are all orginized and maintained in the controller file.
00:29 < samholmes> However, sense I'm going to be doing realtime stuff with dnode, I need to create dnode callbacks.
00:29 < samholmes> I guess I could start with having everything in app.js then evolve like I did with Express. But what do some of you other peeps here do?
00:34 < CircleDot> It worked! So I used the Node PPA and it installed. There was some problem with node -v and npm -v showing the old version.
00:35 < CircleDot> I just had to delete the old node and npm, and then do hash -r
00:35 < CircleDot> Also had to update the environment in /etc/
00:36 < CircleDot> thanks a lot
00:38 < larz> Awesome you're welcome
00:43 < samholmes> shoe.install(server, '/sock') is how it's done. But where server is an http.Server instance, but how do I get at the server instance in Express 2.x?
00:44 < samholmes> I know that in Express 3.x that app.listen() returns the http.Server instance.
00:44 < samholmes> idk if it's the same with 2.x
00:44 < BennyLava> tias..
00:44 < samholmes> oic
00:46 < samholmes> I'm in the REPL, but idk how to tell if what app.listen returns in 2.x is an http server instance
00:47 < BennyLava> instanceof?
00:47 < Refined> Hello.
00:47 < maxogden> yes, this is dog
00:49 < Leeol> How would one go about creating false req/res objects for a `disaptch(req, res, callback)` setup? For testing/etc. (I ask, because there is a lot of potential data that various frameworks might expect, so i would like to create req/res objects that are as "real"
00:49 < Leeol> as possible*
00:49 < Refined> why doesn't require() throw errors when it crashes from syntax errors? I currently have been putting my requires in try/catch to make my programs more stable.
00:49 < ag4ve> anyone used flatiron? i am having issues with the router. https://gist.github.com/3681689
00:49 < samholmes> server instanceOf http.Server gives me a multiline console input..
00:50 < BennyLava> maybe you should spell it right
00:50 < samholmes> What did I mispell?
00:50 < BennyLava> instanceof ..
00:50 < samholmes> ah
00:50 < samholmes> lowercase
00:50 < samholmes> ;p
00:50 < samholmes> thank
00:51 < samholmes> thanky wanky
00:51 < samholmes> hanky panky..spanky.
00:51 < Leeol> Perhaps this would be best for me, https://github.com/nodejitsu/mock-request
00:51 < Leeol> ag4ve: Just looking offhand at your code, it appears you are passing the module into `app.use(plugins.http, routes)`
00:52 < Leeol> ag4ve: I'm guessing you want `app.use(plugins.http, routes.routes)`, though i can't say for sure as i don't know flatiron that well
00:52 < ag4ve> Leeol: hummm, where should it go? i figured it was an option
00:52 < Leeol> ugh
00:52 < Leeol> nevermind. I'm tired
00:53 < Leeol> ag4ve: My apologies, i misread `modules.exports = routes` as `exports.routes = routes`. Ignore me. :)
00:53 < ag4ve> yeah, i guess doing modules.export = { ... } would've been clearer
00:54 < Leeol> Nah, it's plenty clear, i am just dropping off a tired cliff of doom.
00:54 < ag4ve> ... maybe, idk, i sorta like it that way actually....
00:55 < Leeol> ag4ve: As far as your flatiron code goes, hard for me to say. I haven't used it that way in a long time, as i had trouble with it as well. I currently use the express style, with the flatiron router
00:55 < Leeol> app.router.method('/foo', function....
00:56 < ag4ve> my issue is that they don't really say how to do this. they say that flatiron.app.http is director, but they only show var router = new director.http.Router(routes);
00:57 < ag4ve> ok.... i sorta like what they did ... as long as i can figure it out :)
00:57 < Leeol> Currently, when you initialize the flatiron app `app = flatiron.app`, a router is already defined within it. So, `app = flatiron.app; app.router.get('/', handler);`
00:57 < rio{> Anybody know what might cause mongoose.find to just get stuck and never call the callback?
00:57 < Leeol> You can override it i believe, but it's been a while
00:58 < rio{> model.find that is in mongoose
00:58 < Leeol> ag4ve: Actually, that may not exist until `app.use flatiron.plugins.http` is defined, hard to say offhand. 
00:59 < Leeol> ag4ve: All that stuff is set up in my boiler, haven't touched it in a bit :s. Anyway, i'm afk for a bit, try #nodejitsu if you have specific questions on it. they might be more help :)
01:00 < ag4ve> Leeol: you got that flatiron boiler somewhere?
01:00 < Leeol> ag4ve: Not public, sorry :/
01:00 < ag4ve> oh, thanks for the channel
01:19 < mansoor-s> Anybody try compiling from haskell to JS for node?
01:19 < mansoor-s> does it work?
01:21 < taky> hiho
01:21 < taky> i am taky
01:21 < taky> you've never met anyone elite, like myself
01:21 < samholmes> Is there a way to know which remote connection is calling a local function in dnode? Don't mean to bother you, Substack, but the docs on dnode are a little sketchy. xP
01:23 < substack> samholmes: just use the pipe api
01:23 < substack> then all of that state is implicitly closed over
01:23 < samholmes> substack: No. The reason I need this is so that way remote connections can subscribe to a channel and recieve some RPC calls from the server when events occur in the channel.
01:24 < samholmes> If I did, remote.sub('foobar-channel') on the client, then I need a way to know which remote is calling .sub on the server.
01:24 < samholmes> wait..
01:24 < samholmes> I could just use callbacks.
01:25 < tjmehta> Can anyone provide me with resources/suggestions for how I should generate AccessTokens for an Oauth2.0 API Server?
01:25 < tjmehta> node.js api server*
01:25 < samholmes> remote.sub('foobar-channel', cb);   then I just cache the callback and call it when something happens on that channel.
01:26 < samholmes> But, the problem with this is that it's more like an event instead of a subscription to a multitude of events.
01:26 < samholmes> Isn't that what pub/sub is; subscription to published events?
01:27 < zipp> Fellow Noders! Anyone else in DC and/or without power? :(
01:33 < Leeol> Anyone know of any good nodejs projects for mocking client connections to servers? (such as http.createClient)
01:38 < zipp> Leeol: What do you mean, mocking them? Like examples or something? You might take a look at any number of drivers for things, like node-redis or something
01:38 < samholmes> substack: Your "Roll your own Pub/Sub" blog post showed that you can actually send an EventEmitter object through dnode and it'll all just work dandy. Is this true?! :o
01:39 < bradleymeck> samholmes: yes, but it is ipc so you will still see gc stuff if you try to scale that
01:40 < bradleymeck> ipc for the eventemitter to emit*
01:40 < samholmes> ipc?
01:41 < bradleymeck> samholmes inter proces communication
01:42 < ryanrolds> Bringing a project up from 0.4.x, it uses the constants module A LOT, is there a best practice for cleaning up `err.errno === constants.EEXIST`? I'm not sure if I should just go around replacing all the constants.xxxx with a string and compare that to err.code?
01:45 < TooTallNate> ryanrolds: yes, you should compare err.code with a string
01:45 < TooTallNate> err.code == 'EEXIST'
01:45 < samholmes> bradleymeck: I'm not sure I understand what you mean. Could you bring it to more lamens terms? :P
01:45 < samholmes> g2g
01:46 < ryanrolds> TooTallNate: Thanks
01:47 < wolfeidau> ryanrolds: I was messing around with this yesterday https://github.com/rvagg/node-errno mite help ?
01:47 < bradleymeck> samholmes: ipc requires the server to keep the object alive for future communication as long as a client may be using it, dnode has some measures to help with that, but if an event emitter is created per connection and there are dangling clients you should not GC the emitter, this can lead to possible memory leaks due to silent clients improper closing of connections etc.
01:49 < ryanrolds> wolfeidau: Thanks. Hum, I have to change all the error.errno to error.code, now to descide if I compare with with strings or that module.
01:52 < wolfeidau> ryanrolds: Yeah I liked how it had all the messages already encoded this at least reduces some work eh
01:55 < hillct> tjmehta: much earlier today you asked about oauth2 tokens. Take a look at https://github.com/ammmir/node-oauth2-provider which does a nice job of handling it in a very flexible way
01:58 < tjmehta> thanks hillct, ill take a look at that
01:58 < hillct> tjmehta: it assures the proper sequence handling and does the computation freeing up your app to decide what to do with it
01:59 < hillct> pretty nice, though it lacks some of the alternative flows at the moment
02:00 < tjmehta> very nice
02:03 < pyrotechnick> anybody doing any actor stuff in node?
02:03 < pyrotechnick> like akka?
02:05 < zipp> Nope. I'm writing games and stuff right now :x
02:06 < pyrotechnick> same
02:06 < zipp> Actually, I lie, I'm trying to get node running on Wind0ze.
02:06 < pyrotechnick> anything to show me?
02:06 < pyrotechnick> :(
02:06 < zipp> orly? doing anything multiplayer?
02:06 < pyrotechnick> yeah im doin an mmo, well that's the dream
02:06 < mscdex> node.js rules!
02:06 < zipp> Uhh I can show you the crappy single-player 'library' I wrote :P And me too! 
02:06 < mscdex> i hope you all are working on a zzt mmo
02:06 < zipp> http://github.com/zipp/Gamework
02:07 < pyrotechnick> minecraft mmo
02:07 < mscdex> :-(
02:07 < pyrotechnick> https://github.com/Marak/zztmmo
02:07 < zipp> I'm trying to do real-time, WoW / pixelgraphic mmo, but right now I'm stuck on the whole network programming bit
02:07 < pyrotechnick> pixelgraphic?
02:07 < zipp> I got a simple pure client/server app working, but obviously I need some client-side prediction and correction
02:07 < pyrotechnick> i pm'd you
02:07 < zipp> Think MineCraft / Realm of the Mad God
02:09 < sordina> Hey Noderinos.
02:10 < sordina> I've got a question about 404s in express.
02:10 < pyrotechnick> shoot
02:10 < sordina> Everything I can find recommends a catchall route.
02:10 < sordina> But this seems to capture my static files too.
02:10 < sordina> Is there a way to tell it to ignore files in a certain directory? I thought the public middleware would do that.
02:13 < sordina> I could write a check myself, but I want my static resources to be super fast.
02:41 < ramitos> shouldn't this work?
02:41 < ramitos> https://gist.github.com/3682233
02:42 < ramitos> the browser only shows something if I do this.res.end()
02:42 < ramitos> after this.res.write(data)
02:51 < ryanrolds> ramitos: end() will need to be called. write() doesn't end the response.
02:52 < ryanrolds> ramitos:  res.end(data) may work too.
02:52 < ramitos> ryanrolds so, how can I keep the connection  open to keep sending data?
02:56 < ryanrolds> ramitos: You just don't end it. Beware that some browsers handle this behavior differently. If you look at FF you may see the data comming in and with other browsers the responses may get buffered.
02:57 < ryanrolds> ramitos: Also Node.js may buffere the first call of write(). See http://nodejs.org/api/http.html#http_response_write_chunk_encoding
03:01 < mae> sub
03:02 < ramitos> ryanrolds I got it… after some tests I made it show in  the browser. I just need to get the buffer full… 
03:03 < ramitos> ryanrolds thank you ;)
03:03 < lowtax> how can i capture ctrl + c and do some stuff before shutdown
03:04 < lowtax> process.on('SIGINT' ?
03:04 < mscdex> lowtax: yeah
03:07 < lowtax> is process a global?
03:09 < mscdex> yep
03:19 < ctult> I found something pretty cool involving each functions.
03:21 < ctult> >> var _;_.each = [].forEach.call; _.each([1,2,3], function(current){console.log(current)})
03:21 < purr> ctult: TypeError: Cannot set property 'each' of undefined
03:21 < ctult> >> var each = [].forEach.call; each([1,2,3], function(current){console.log(current)})
03:21 < purr> ctult: TypeError: object is not a function
03:25 < ryanrolds> lowtax: Lowtax from SA?
03:29 < nickhs> Hey! I have an array of URLs (containing pngs) that I would like to download and write to file - I currently do so using request(url).pipe(fs.createWriteSteam(filename)) and then traverse the array using array.forEach. Is that the best way to go about it? And how do I know when all the downloads are completed?
03:29 < nickhs> err correction, the traversal of the array is done forEach and it calls the request inside that callback
03:31 < ctult> Who here has heard of TinyDOM?
03:33 < mscdex> nickhs: a simple and easy way is to have a counter that is initialized to the array size and decrement it when each request finishes
03:33 < nickhs> mscdex: gotcha - I guess the questions is more along the lines of is forEach blocking?
03:33 < nickhs> and is there a better way to go about this?
03:34 < nickhs> (as I would like for multiple requests to be made at once)
03:34 < mscdex> nickhs: forEach is the same thing as a for-loop except it uses a closure for each element in the array
03:35 < mscdex> nickhs: so it's not blocking in the way you are thinking
03:35 < nickhs> mscdex: understood
03:40 < zipp> Night all; hopefully I'll have power and can lurk moar tomorrow
03:41 < pyrotechnick> peace
03:47 < rhasson> Benvie are you around?
03:47 < Benvie> hey
03:47 < rhasson> hey
03:47 < rhasson> I had a question for you
03:47 < Benvie> sure
03:47 < rhasson> are you familiar with ref-struct right?
03:48 < Benvie> yeah
03:48 < Benvie> i have a heavily modified version of it
03:48 < rhasson> I'm trying to create a struct with a pointer to another struct
03:48 < rhasson> when I do that that second struct comes back undefined
03:48 < Benvie> you should be able to do soemthing like
03:49 < Benvie> ref.refType(SecondCtor)
03:49 < Benvie> when you define the first one
03:49 < Benvie> or the other way around I guess
03:49 < Benvie> you need to define the pointed to struct first
03:49 < rhasson> pst_desc_tree.defineProperty('desc', ref.refType(pst_index_ll));
03:49 < rhasson> is in my case
03:50 < rhasson> pst_index_ll is another struct
03:50 < Benvie> hmm let me check if defineProperty does anything odd
03:50 < rhasson> ok
03:51 < abstrax1> hi
03:51 < Benvie> ok so first off defineProperty won't inform you if it fails
03:51 < Benvie> oh ok
03:51 < timeturner> umm, is it commonplace to give confirmation links that look like: http://mydomain.com/confirm/123456 OR http://mydomain.com/confirm/?user=test@example.com&code=123456?
03:51 < rhasson> if it fails to add that struct to the main struct
03:52 < timeturner> not sure where else to ask my question...
03:52 < abstrax1> so, i used socket.io (to make something like realtime editing from multiple places). now when i open the URL in 2 tabs, and type something in 1 tab, the server socket.emit causes evetn triggering in that tab only, not the other tabs. while i want it to be opposite. can someone help ?
03:52 < rhasson> btw, my code is at http://github.com/rhasson/node-libpst
03:53 < timeturner> abstrax1: #socket.io
03:53 < Benvie> oh nevermind I was looking at the wrong version of it
03:53 < timeturner> rauchg is in there right now
03:53 < abstrax1> hm
03:53 < timeturner> best time to ask abstrax1
03:53 < abstrax1> who is he?
03:53 < timeturner> the creator of socket.io
03:53 < timeturner> he rarely comes on there
03:53 < timeturner> or at least visibly
03:54 < abstrax1> thank you
03:54 < timeturner> looks like he's deep in discussion though...
03:54 < timeturner> sure
03:54 < timeturner> try posting some code there
03:54 < timeturner> that's the best way to get a response
04:08 < TechnoCat> it is really hard to start a project as a team and really easy to start a project as an individual. does this sound true?
04:10 < timeturner> I'm doing my own project by myself and it is great and bad
04:10 < timeturner> the great part is that I can change anything at any time without any issues
04:11 < lowtax> fat?
04:11 < timeturner> the bad part is that I have to learn how to do everything and that it is generally harder to fully determine the repercussions of changing a feature or adding a feature to the product
04:11 < timeturner> so a small team is probably the best balance
04:12 < timeturner> small is in 1-3 people in the beginning
04:12 < timeturner> 2-3*
04:12 < lowtax> it depends on the team lead
04:12 < timeturner> that too
04:12 < lowtax> that only
04:12 < lowtax> thats all you have when you have a team
04:12 < timeturner> I think the fact that you have someone to bounce ideas off of is imperative
04:13 < lowtax> depends
04:22 < AAA_awright> TechnoCat: Projects are much more flexible when they're small. They're agile. When you grow too much, you get bureaucracy, and growth staginates.
04:23 < AAA_awright> Of course, the right teams (with the right division of labor) speed up development, but that's when you have a target you're building towards
04:25 < SirFunk> anyone familiar with any really light model libraries? I'm just basically looking for something handy to define models based on objects and to handle things like default values, setters/getters and maybe validation. browser/node would be good too.
04:41 < pyrotechnick> SirFunk: backbone or resourceful
04:42 < SirFunk> I did find resourceful. I wonder if backbone would be overkill for just the model stuff
04:42 < pyrotechnick> but that's a pretty basic requirement, you probs could roll your own easily
04:42 < pyrotechnick> haha you better roll your own, most is going to be bigger than backbone
04:42 < pyrotechnick> it's very basic as it is
04:44 < abstrax> is there a socket.io hero here?
04:44 < pyrotechnick> probably only most of us
04:45 < SirFunk> pyrotechnick: yeah... I should probably write my own. It would be good for me :-p
04:45 < pyrotechnick> yep
04:45 < abstrax> i am building something like a realtime editor. i open the url in 2 tabs. in 1 tab i write something it displays fine in the other. but it also displays 2x in the tab1. how can i prevent this ?
04:58 < SirFunk> this is probably a dumb question... is there any way in javascript to make a property that executes as a function without calling () after it?
05:11 < abstrax2> .
05:23 < ianl`_> sd
05:25 < deoxxa> SirFunk: herp.derp.apply(herp.derp) calls herp.derp as a function without putting parens (directly) after it
05:26 < deoxxa> SirFunk: but the shorter answer is "no, javascript isn't perl or ruby"
05:30 < pyrotechnick> joyent are doing node again?
05:30 < pyrotechnick> http://lpage.joyent.com/FreeTrialNode.html
05:31 < abstrax2> no one can help me ?
05:32 < pyrotechnick> abstrax2: socket.broadcast.emit
05:32 < abstrax2> that will send message to all sockets, no ?
05:32 < pyrotechnick> everything except that socket
05:32 < abstrax2> ah :D
05:32 < pyrotechnick> or dont add the chat line on the sending client and use io.sockets.emit
05:32 < SirFunk> deoxxa: it looks like there's some funny stuff you can do with prototype.__definegetter_ or something like that
05:33 < deoxxa> SirFunk: why do you want to do that, exactly?
05:33 < abstrax2> pyrotechnick: the only way to do that would be to generate some hash all the time and check against that in the sending client.
05:33 < pyrotechnick> no, both work
05:33 < pyrotechnick> no hash
05:34 < abstrax2> how do i NOT add chat line on sending client ?
05:34 < abstrax2> can you explain ?
05:34 < deoxxa> abstrax2: clients.filter(function(c) { return c !== this_client; }).forEach(function(c) { c.send("lol", {herp: "derp"}); })
05:34 < pyrotechnick> messageBox.on 'enter', -> io.emit 'chat', messageBox.val()
05:35 < abstrax2> that will be in the server-side code, deoxxa  ?
05:35 < deoxxa> abstrax2: i dunno, it's your code
05:35 < pyrotechnick> socket.on 'chat', -> io.sockets.emit 'chat' arguments...
05:35 < deoxxa> pyrotechnick: ew coffeescript.
05:35 < pyrotechnick> :S
05:35 < pyrotechnick> clients.filter(function(c) { return c !== this_client; }).forEach(function(c) { c.send("lol", {herp: "derp"}); })
05:35 < pyrotechnick> that's what .broadcast is
05:36 < abstrax2> pyrotechnick: i am so confused
05:36 < deoxxa> in any case, it's completely broken
05:36 < pyrotechnick> c.send 'lol', herp: 'derp' for client in clients where client isnt this.client
05:36 < pyrotechnick> coffee wins anyway
05:36 < deoxxa> uh, no
05:36 < abstrax2> pyrotechnick: your example, io.sockets.emit will send to all clients
05:36 < pyrotechnick> whats wrong with that
05:37 < abstrax2> i dont want in the sending client
05:37 < pyrotechnick> why not
05:37 < abstrax2> the emission from server
05:37 < abstrax2> broadcast, solves this, but you said it can be done client-side too
05:37 < pyrotechnick> why doesnt the sending client need the message too
05:37 < abstrax2> its not a chat app, its like a pastie.org in realtime
05:37 < samholmes> dnode sends references of somekind as the callbacks through the protocol, correct? My question, if I send the same function twice, is the same reference used on both ends?
05:38 < pyrotechnick> samholmes: ja
05:39 < samholmes> pyrotechnick: so I could use === on the other end for both callbacks and it'll just work?
05:39 < abstrax2> 1 more question, i want to "group" URls, like someone writing at mysite/1234 will send msgs to sockets connected to /1234 and not those on /1568 , is that possible ?
05:39 < abstrax2> right now, all are getting msgs and messing up 
05:39 < pyrotechnick> samholmes: why don't you try it
05:40 < pyrotechnick> abstrax2: socket.join '1234'
05:40 < abstrax2> let me try, thanks pyrotechnick you are amazing!
05:41 < pyrotechnick> io.sockets.in('1234').emit 'blah'
05:41 < abstrax2> haha
05:41 < pyrotechnick> the memory store is shit though
05:41 < abstrax2> i cant believe i did this shit in such a small time
05:41 < pyrotechnick> doesn't pub/sub properly
05:41 < abstrax2> i thought realtime collab would take days
05:41 < pyrotechnick> it's written REALLY weirdly
05:42 < pyrotechnick> like they've gone and nuked a bunch of stuff for performance or whatever
05:45 < substack> samholmes: it checks the references and doesn't re-send the same refs, correct
05:46 < samholmes> substack: but...the server creates a function from the client's packet, but does it cache this function in case the server receives another packet with the same reference?
05:47 < substack> from the same session yes
05:47 < samholmes> session?
05:47 < samholmes> O I C
05:48 < samholmes> So if the client ends the connection and creates a new one, all the "created functions" on the server would be GC'd
05:48 < samholmes> ?
05:49 < Zoney> hey if i have a quad core computer, and i want an instance of node.js running on each, how can I make sure each instance goes to its own core? (Linux/Redhat)
05:49 < pyrotechnick> Zoney: pretty sure the cluster module handles it
05:49 < pyrotechnick> processor affinity
05:50 < Zoney> ok
05:50 < pyrotechnick> im having a squizz though
05:57 < SirFunk> deoxxa: oh, sorry was too busy writing nasty code.. didn't see you write before
05:58 < SirFunk> deoxxa: well I'm thinking of writing a "model" library. Where every object's real data will be stored in _data but then you would have setters/getters that could do other stuff.. it's much nicer to write myModel.age rather than myModel.name -- which isn't overridden and then myModel.age() elsewhere if it is computed
05:58 < SirFunk> if that makes any sense 
05:59 < deoxxa> ugh
05:59 < deoxxa> that sounds horrible
05:59 < deoxxa> doing invisible things like that is a really, really bad idea
05:59 < deoxxa> how do you serialise something like that? JSON.stringify(object) no longer works
06:00 < pyrotechnick> define toJSON
06:00 < pyrotechnick> and it will work
06:00 < deoxxa> how do you iterate over the properties? etc?
06:00 < pyrotechnick> you
06:00 < pyrotechnick> you're basically talking about a proxy
06:00 < deoxxa> pyrotechnick: that's a shitty solution to a shitty problem
06:00 < pyrotechnick> i've tried it before, it's kind of cool
06:00 < deoxxa> ugh. gb/2 ruby.
06:00 < pyrotechnick> i have _ on my 'entities' which i call a kernel and it manages components and stuff
06:01 < pyrotechnick> one component being modelling which does what you say, proxies mutators from the entity to the various components
06:02 < SirFunk> deoxxa: hmm. good point.. add.. object.toJson? that just dumps _data ?
06:02 < SirFunk> if there is a better way I'm all ears
06:02 < deoxxa> the better way is to not do anything like that
06:02 < pyrotechnick> if you define toJSON on your proxy
06:02 < pyrotechnick> you can return _data yes
06:03 < deoxxa> i get the motivation behind it, but it's unnecessary
06:03 < SirFunk> ECMA 6 has a Proxy object that i think is designed for this purpose.
06:03 < deoxxa> you never, ever, actually -need- this functionality
06:03 < deoxxa> there's always somewhere better to put that kind of functionality
06:03 < pyrotechnick> you never actually need anything
06:03 < deoxxa> at least for generic objects
06:03 < SirFunk> well they aren't really generic objects
06:04 < SirFunk> i mean they have a specialized purpose in my system
06:05 < pyrotechnick> you need browser support?
06:05 < SirFunk> yup
06:05 < pyrotechnick> forget proxies then
06:05 < SirFunk> It's primarily for the browser but if it works well I'd like to use it on my backend too
06:06 < SirFunk> I think i spent too much time using ember.js which has some of this type of stuff baked in 
06:06 < SirFunk> "computed properties"
06:06 < pyrotechnick> if js had performant proxies by now it would be so FREAKING AWESOME
06:06 < pyrotechnick> alas
06:07 < SirFunk> so.. no suggestions on what to do in this case?
06:08 < pyrotechnick> like deoxxa says you don't need the _data
06:08 < pyrotechnick> you can just have your mutators set _(FIELD)
06:08 < pyrotechnick> like Object.defineProperty this, 'foo', set: (value) -> _foo = value
06:08 < deoxxa> i just hate the idea of invisibly shoving something in between you and your object
06:09 < pyrotechnick> oh you hate mutators?
06:09 < pyrotechnick> not the _data thing?
06:09 < deoxxa> a.b = "c" shouldn't imply some random function call somewhere that you don't even know about
06:09 < pyrotechnick> heh
06:09 < pyrotechnick> the alternative is .get / .set like backbone but i think it has performance issues
06:09 < deoxxa> dude it's a function call in both cases
06:09 < SirFunk> deoxxa: theoretically it wouldn't be "some random function call somewhere" it would be in the class definiton for the object
06:10 < deoxxa> they're both slow as hell compared to setting a property normally
06:10 < pyrotechnick> yes but  you allocate strings with .get / .set
06:11 < pyrotechnick> mutators are also not invisible, most debuggers represent them properly and you can programatically inspect them with the various methods on Object
06:11 < deoxxa> pyrotechnick: good. maybe that'll make you think twice about using the stupid indirection every time.
06:11 < mmalecki> setters and getters are slower than function calls
06:11 < pyrotechnick> yes but they do not allocate like .get / .set
06:11 < mmalecki> uhm, what does .get and .set allocate?
06:11 < pyrotechnick> foo.get 'field'
06:11 < pyrotechnick> the field string
06:12 < pyrotechnick> it's a primitive but nonetheless an allocation
06:12 < pyrotechnick> see for yourself
06:12 < mmalecki> heh. do you think that getting a property with a getter doesn't allocate memory?
06:12 < pyrotechnick> nope
06:12 < pyrotechnick> not on heap
06:13 < SirFunk> ok. let me describe the speciffic problem i had that made me start trying this mess. I have an object called a Piece. each Piece can have many Runs. All the data is stored on my backend. I wanted to be able to call piece.runs and have it check to see if it has loaded the data yet. if not fetch it , if so return a cached copy
06:13 < SirFunk> can't do that if piece.runs is an array
06:13 < pyrotechnick> well that's just a lazy property
06:13 < deoxxa> pyrotechnick: ok look i'm sorry i'm going to be the one to break this to you, but you're clearly retarded. i'm not sure whether it was from a nasty fall as a child, or some situation where you were deprived of oxygen for an extended period of time, and i'm not here to judge. you should really consider taking up something more suited to your skill level though - have you thought about maybe getting a job cutting wood or carrying heavy rocks around all d
06:13 < mmalecki> pyrotechnick: internal v8 memory isn't represented in heap
06:14 < pyrotechnick> mmalecki: incorrect
06:14 < samholmes> If I expose an addListener function through dnode that allows clients to listen to any events emitted from the server, how can I protect certain private information emitted in this event system?
06:14 < pyrotechnick> deoxxa: you will die lonely with that attitude
06:15 < deoxxa> pyrotechnick: if by lonely you mean "without ever having to speak to you again", that's a tradeoff i'm willing to make
06:15 < SirFunk> pyrotechnick: how would you implement a lazy property? just as a function?
06:15 < samholmes> For example, some events might require certain authorization in order to subscribe/listen to a specific event.
06:15 < pyrotechnick> you are like obsessed with a lack of oxygen or something, deoxxa
06:16 < pyrotechnick> SirFunk: at first it's a configurable property
06:16 < pyrotechnick> then on the first get it overrides itself
06:16 < pyrotechnick> either with a new property or removes itself and just sets the field
06:16 < SirFunk> pyrotechnick: ok, so your saying using .get and .set ?
06:17 < pyrotechnick> no
06:17 < pyrotechnick> Object.defineProperty
06:17 < SirFunk> hmm
06:17 < pyrotechnick> .get != a getter
06:17 < pyrotechnick> .get is backbone's function way
06:17 < pyrotechnick> getter is like Object.defineProperty value/get/set
06:17 < SirFunk> right.. i meant with implementing some type of getter/setter
06:17 < SirFunk> defineProperty is new to me.. hangon reading
06:18 < pyrotechnick> you might want a shim
06:19 < pyrotechnick> SirFunk: i did this just the other day for an autoload/autorequire
06:19 < pyrotechnick> ill gist it
06:19 < pyrotechnick> https://gist.github.com/3626521
06:19 < pyrotechnick> already had
06:20 < pyrotechnick> so basically
06:20 < pyrotechnick> line 10
06:20 < pyrotechnick> defines the initial lazy property
06:20 < pyrotechnick> with a getter
06:20 < pyrotechnick> which upon being used, i.e. myobject.watever
06:20 < pyrotechnick> just accessing it yeah
06:20 < pyrotechnick> fetches the value
06:21 < pyrotechnick> and then overrides the property itself with the new value
06:21 < pyrotechnick> i use Object.defineProperty again with a value key, but you should probably undefine the property and just set the key like normal
06:21 < SirFunk> ahh
06:21 < SirFunk> sounds simple enough
06:22 < SirFunk> I need to think though and make sure i'll never need to update the property from the server
06:22 < abstrax2> weird, i deployed my app on server and its not working :/
06:23 < pyrotechnick> abstrax2: show me your io.connect() line from the client
06:23 < pyrotechnick> SirFunk: you could always like push out new changes and invalidate the field by restoring the lazy property
06:24 < pyrotechnick> depends if it's push/poll
06:24 < SirFunk> yeah that's what i was thinking
06:24 < pyrotechnick> if i were to say add hotloading of code to my autorequirer
06:24 < pyrotechnick> i'd probably just keep the property
06:26 < pyrotechnick> oh conrad pankoff
06:26 < pyrotechnick> i know you from somewhere
06:26 < pyrotechnick> you a melbournite?
06:26 < deoxxa> i am
06:26 < pyrotechnick> im from brissy
06:26 < pyrotechnick> but come down a bit
06:26 < deoxxa> true
06:28 < deoxxa> i'm originally from brisbane myself, moved down here for work
06:28 < pyrotechnick> im about to
06:28 < deoxxa> where to?
06:28 < pyrotechnick> i dunno but there's plenty of node gigs
06:30 < abstrax2> weird, when i try in 2 tabs realtime collaboration works, when trying with someone else, it doesnt :/
06:30 < pyrotechnick> you sure you're not accidently using postMessage?
06:30 < pyrotechnick> :p
06:31 < abstrax2> no man, i am using socket.io simple code
06:31 < pyrotechnick> haha
06:31 < pyrotechnick> can you gist or zip it all ill have a look
06:32 < abstrax2> 2mins
06:32 < pyrotechnick> deoxxa can i join your ponzi scheme plz?
06:33 < deoxxa> pyrotechnick: you have to refer 3 friends
06:33 < pyrotechnick> i want over sixteen thousand tier 7 customers
06:33 < deoxxa> oh ha
06:33 < deoxxa> that 90s video
06:33 < pyrotechnick> can i just refer 1 that promises to refer two more?
06:33 < deoxxa> i forgot i had that there
06:33 < pyrotechnick> it looks VERY UNPROFESSIONAL
06:33 < deoxxa> good
06:34 < pyrotechnick> ahaha just got the domain
06:34 < deoxxa> haha
06:34 < pyrotechnick> you play MC?
06:34 < pyrotechnick> youtube.com/user/pyrotechnick
06:35 < deoxxa> i used to a lot more, i don't have a whole lot of time for it anymore :<
06:35 < pyrotechnick> im clonin it
06:35 < pyrotechnick> in webgl
06:35 < deoxxa> i wrote https://github.com/deoxxa/node-mcnet and https://github.com/deoxxa/libmcnet to do the minecraft protocol nicely, heh
06:35 < pyrotechnick> yeah thats why i asked
06:35 < pyrotechnick> i'm hubstalking the shit out of you
06:36 < deoxxa> https://github.com/deoxxa/libmcnet/blob/master/include/mcnet/packets.h macros ftw
06:36 < pyrotechnick> i wish coffee had em
06:36 < deoxxa> ew.
06:36 < pyrotechnick> well you have to preprocess anyway
06:36 < pyrotechnick> itd make sense
06:40 < samholmes> Using dnode/shoe, what's a good way to authenticate RPCs? If I have a RPC method called removeSomeData on the server, that removes some kind of data on the server, but you have to be the owner of that data, how can I authenticate that you are the owner of this data? I already have HTTP authentication using express' session middleware.
06:41 < pyrotechnick> there's an example in upnode
06:41 < samholmes> Should, I do some separate session authentication system for socket conenctions?
06:41 < pyrotechnick> wait
06:41 < pyrotechnick> ohh
06:41 < pyrotechnick> it's a bit of a fuckaround but here
06:42 < pyrotechnick> http://www.danielbaulig.de/socket-ioexpress/
06:42 < samholmes> I've read this.
06:42 < samholmes> This is for socket.io
06:42 < samholmes> I'm using sockjs, well, shoe.
06:42 < samholmes> Then, I'm using dnode as the RPC module.
06:43 < pyrotechnick> well instead of setting sio.set('authorization',
06:43 < samholmes> just have a local.auth method on the server?
06:43 < pyrotechnick> you'd hook into wherever in shoe
06:43 < samholmes> in dnode you set up local methods that can be called by clients.
06:43 < pyrotechnick> as long as its called before
06:43 < pyrotechnick> yeah i know dnode
06:44 < samholmes> Ah cool. before what?
06:44 < pyrotechnick> before 'connect'/'connection' however you hook into a shoe connection is emitted
06:44 < pyrotechnick> lemme see
07:17 < pyrotechnick> ahahaha
07:17 < pyrotechnick> https://github.com/twitter/bower
07:25 < AAA_awright> Really
07:25 < AAA_awright> REALLY Twitter
07:25 < AAA_awright> The world does not need another crappy package manager
07:25 < pyrotechnick> the issues are so superficial
07:26 < pyrotechnick> it's basically just a raped version of tj's components
07:26 < deoxxa> don't the twitter guys already do ender :/
07:29 < pyrotechnick> well
07:29 < pyrotechnick> like they say in the readme ender can back onto this
07:29 < pyrotechnick> ender can already resolve/fetch deps though right?
07:30 < pyrotechnick> at least twitter are on it and it'll become some kind of proper standard
07:31 < pyrotechnick> this is cool as http://twitter.github.com/zipkin/
07:31 < AAA_awright> It's also pretty bad when you have 4 requires nested within each other
07:32 < deoxxa> synths are so complicated :<
07:32 < pyrotechnick> LOOOOOOOOOL
07:32 < pyrotechnick> https://github.com/twitter/bower-server
07:34 < AAA_awright> Alright, here's how you do package management: https://github.com/Acubed/git-node
07:34 < AAA_awright> You don't do package management.
07:35 < deoxxa> there needs to be a github for synth patches
07:35 < deoxxa> that'd be awesome
07:36 < pyrotechnick> what's wrong with github?
07:37 < AAA_awright> Also wrt the /topic, The world does NOT NEED ANOTHER CRAPPY BUILD SYSTEM
07:37 < pyrotechnick> https://github.com/languages/SuperCollider
07:37 < AAA_awright> ESPECIALLY NOT IN PYTHON
07:37 < pyrotechnick> looks like there's a bit on github already
07:38 < deoxxa> ha, cool
07:38 < pyrotechnick> what'r you using?
07:38 < AAA_awright> deoxxa: Synth patches?
07:38 < deoxxa> right now? blue
07:38 < pyrotechnick> wats blue
07:38 < deoxxa> AAA_awright: like music
07:38 < AAA_awright> Ah
07:39 < deoxxa> pyrotechnick: a really configurable soft synth, part of the rob papen line of things
07:39 < pyrotechnick> its like garageband/guitar rig?
07:39 < AAA_awright> What's wrong with Github?
07:39 < pyrotechnick> cool
07:39 < deoxxa> nah, it's just an instrument
07:39 < deoxxa> AAA_awright: git sucks at binary stuff
07:39 < pyrotechnick> you need perforcehub
07:40 < AAA_awright> deoxxa: That doesn't mean it's not a bad choice, binary stuff is hard to consume in general
07:40 < AAA_awright> Git has the right idea of commits, etc, and it handles binary data rather well, it's guarenteed to be secure like anything else
07:41 < deoxxa> i'm thinking more along the lines of something that knows about the format, so it can diff some IR of it instead of the (zipped) content of most patch formats
07:41 < AAA_awright> You can setup Git to learn about that stuff
07:42 < AAA_awright> A custom diff/merge tool
07:42 < AAA_awright> I've done it for LabView
07:42 < deoxxa> hm
07:43 < pyrotechnick> mercurial probably wins here
07:45 < AAA_awright> pyrotechnick: Almost certainly not
07:46 < AAA_awright> Git has all the required concepts of blobs, trees, branches, tags. What tools you want to attach to do merging and diffing is your own consern, git isn't the program that shows you diff output.
07:46 < AAA_awright> Also, mercurial has a very poor concept of tags and branches
07:53 < pyrotechnick> do you think you could synth a midi in browser?
07:53 < pyrotechnick> like a simplish one
07:55 < pyrotechnick> daaaaam https://dvcs.w3.org/hg/audio/raw-file/tip/midi/specification.html
07:56 < dr0id> yo, whose the socket.io rockstar?
07:56 < pyrotechnick> all of us
07:56 < pyrotechnick> shoot
07:57 < dr0id> workin on something that's kinda private until launch, do you mind if I PM you a URL ?
07:58 < pyrotechnick> sure
08:15 < pyrotechnick> substack: found another fs module https://github.com/OptimalBits/fs.js
08:15 < pyrotechnick> FYI
08:15 < pyrotechnick> do you remember who we were talking to about it?
08:33 < rio{> Anybody know what might cause mongoose.model.find to just get stuck and never call the callback?
08:33 < pyrotechnick> if mongo isnt up
08:34 < pyrotechnick> i think it just mailboxes it
08:35 < rio{> oh really?
08:35 < pyrotechnick> was that it?
08:37 < rio{> I dont know, will check out
08:38 < pyrotechnick> you using 3.x?
08:41 < rio{> pyrotechnick: Yep that was it, wow really just assumed I would get some errors if there was any connection problems
08:41 < rio{> especiallt since the callback gets an err param
08:42 < bewest> howdy, I'm trying to build latest node-serialport, and it's failing due to failing to find a typedef in libuv
08:43 < bewest> libuv is installed, obviously? and other extensions work... is this maybe a libuv versioning issue or?
08:43 < bewest> niavely adding an include ub.h did not work.
08:45 < pyrotechnick> rio{: unfortunately mongoose is trying to make something which is async seem sync
08:46 < pyrotechnick> i think you can explicitly call connect yourself and handle errors but i'm not sure
08:47 < zenista> hi i was doing node-gyp rebuild
08:47 < zenista> and it failed with node-gyp/0.8.8/src/node.h:61:16: fatal error: uv.h: No such file or directory
08:48 < zenista> which module provides uv.h
08:48 < pyrotechnick> what'r you trying to do?
08:48 < pyrotechnick> just run node?
08:50 < zenista> nope i was doing npm -g install bcrypt
08:50 < pyrotechnick> how did you install node
08:50 < zenista> binary
08:50 < zenista> binary distribution for linux
08:50 < zenista> im on ubuntu 12.04
08:50 < zenista> 32 bit
08:51 < bewest> I'm trying npm install serialport
08:51 < bewest> node -v v0.6.17
08:51 < pyrotechnick> zenista: are you root?
08:51 < zenista> no
08:51 < bewest> installed node from source
08:51 < zenista> i unzip node binary zip in my home folder
08:51 < pyrotechnick> -g generally needs root
08:51 < purr> pyrotechnick: Root canal front tooth <http://mynewsmile.com/dental/root_canal_front_tooth.htm>
08:52 < pyrotechnick> LOL WHAT
08:52 < pyrotechnick> -g test
08:52 < purr> pyrotechnick: Speedtest.net - The Global Broadband Speed Test <http://www.speedtest.net/>
08:52 < zenista> thanks <pyrotechnick> i will try that way 
08:52 < pyrotechnick> whose bot is this
08:52 < pyrotechnick> it's retarded
08:52 < zenista> so when i depoly it on my vps which is cent os
08:52 < zenista> do i need to rebuild crypt
08:52 < zenista> over there
08:52 < zenista> too
08:53 < bewest> zenista: I'm not sure you can install node that way
08:53 < pyrotechnick> gyp has some cross-compile voodoo
08:53 < zenista> k
08:53 < pyrotechnick> or some platform-indepedence stuff
08:53 < pyrotechnick> honestly i don't know that much about gyp
08:53 < pyrotechnick> it should just work with npm i
08:54 < zenista> k
08:54 < zenista> i though -g install it globally
08:54 < zenista> so that i don't have to it for every project/app
08:54 < pyrotechnick> correct
08:55 < pyrotechnick> needs NODE_PATH to work i think
08:55 < bewest> that's if node is installed correclty
08:55 < zenista> btw, what do u recomment to use as user auth against local db (everauth / passport / any other)
08:56 < pyrotechnick> i wrote my own but i like authom
08:56 < bewest> the first one that seems to work
08:56 < zenista> bewest which one ... authom?
08:56 < pyrotechnick> but any of those is good
08:56 < zenista> k
08:56 < pyrotechnick> read the readmes
08:56 < zenista> does authom works with express
08:56 < pyrotechnick> and decide after that
08:57 < pyrotechnick> yep
08:57 < pyrotechnick> authoms decoupled from the requests
08:57 < pyrotechnick> it's not as plug and play as the other two
08:57 < pyrotechnick> so it doesnt really not work with express in the first place
08:57 < zenista> k
08:58 < pyrotechnick> probably you're more comfortable with the other two with express though
08:58 < pyrotechnick> plus authom only does oauth2 stuff
08:58 < pyrotechnick> oh looks like it does more now
08:58 < pyrotechnick> myeah read the READMEs
08:58 < pyrotechnick> and just go for what feels good
08:59 < zenista> k giving everauth the first try
08:59 < zenista> let see how it works... i like its documentation
09:00 < pyrotechnick> http://js13kgames.com/#rules
09:00 < pyrotechnick> well http://js13kgames.com/ generally
09:00 < zenista> whats that
09:00 < pyrotechnick> a comp, not related
09:01 < pyrotechnick> 13kb is like
09:01 < pyrotechnick> 1/10 of my game lol
09:08 < dr0id> my game went onto 25kb, so I lost ;(
09:16 < jetienne> propose 2 games:)
09:16 < bewest> hmm ../src/serialport.cpp:8: error: ‘uv_mutex_t’ does not name a type
09:16 < bewest> so looking at my uv.h file on disk, I see it's not there
09:16 < bewest> so it probably is a version thing
09:16 < bewest> hmm
09:29 < zenista> hi guys bewest, pyrotechnick ... bcrypt compiled fine
09:29 < zenista> the error was node source was not fully downloaded earlier
09:29 < zenista> i removed .node-gyp folder from my home
09:30 < zenista> and rebuilt 
09:30 < zenista> worked fine
09:30 < bewest> excellent
09:30 < zenista> and yes i didn't used root... it build fine under my normal user
09:30 < zenista> with binary distribution
09:30 < zenista> for path i m using export PATH=$PATH:/my/node/bin
09:53 < vasco[pt]> hjkbkvjhgfcghfchghgnmk,l~l,\
10:18 < samholmes> substack: You remove the sockjs-windows dep in shoe the other day, yet it's still being required apparently on line 1 of index.js x___x
10:20 < samholmes> https://github.com/substack/shoe/issues/7
10:22 < substack> samholmes: whoops, fixing
10:22 < samholmes> substack: k cool. haha. thx. xP
10:23 < substack> fixed
10:25 < marlun_> I'm using node-mysql, anyone who knows if there is a way to execute a .sql file? I want to create a temporary database for testing purposes and it would be easiest to just execute a file.
10:25 < samholmes> substack: thanks bro. ;P
10:30 < fb55> substack: while you're fixing stuff, https://github.com/substack/node-resolve/issues/15 would be nice & easy (20s max)
10:32 < samholmes> I'm getting this message "Welcome to SockJS!" consistently when working with shoe and express 2.x
10:33 < yorick> isaacs: the new trolling post sounds really really swiss.
10:33 < samholmes> I'm passing the returned value from app.listen() in express to shoe.install().
10:34 < samholmes> This works in 3.x, but it appears to be giving me trouble in 2.x
10:36 < bewest> ok, I suppose 0.6.0 is considered "old"
10:37 < bewest> how far off is a "1.0"?
10:38 < yorick> bewest: well, after 0.9 comes 0.10, probably
10:38 < yorick> 1.0 is when it's done :P
10:38 < substack> express is kind of magic in places
10:38 < yorick> I don't really like express
10:39 < yorick> but I like the standard-ish interface that connect provides for content handles/providers
10:41 < bewest> yorick: what does done mean
10:41 < yorick> bewest: when the BDFL says it's done, then it's done
10:41 < yorick> which can be never
10:41 < bewest> is there some roadmap for 1.0 or oh, BDFL
10:41 < yorick> (isaacs's the bdfl)
10:42 < samholmes> express is annoying me. I'd upgrade to 3.x and just get shoe to work, but I can't cause my app relies on EJS partials. So I'm stuck with 2.x for now, but I can't get 2.x and shoe to work.
10:42 < bewest> sure, just seems like someone would have some idea of what a 1.0 would look like... maybe it really doesn't matter given that I just upgraded, and everything seems to work
10:43 < yorick> bewest: I guess when the API's stable
10:56 < samholmes> What does it mean to get the message "Welcome to SockJS!" instead of my site's pages?
11:01 < yorick> samholmes: it means you didn't configure sockjs
11:01 < samholmes> yorick: what do you mean by configure?
11:01 < yorick> you did something wrong and didn't replace the default message
11:01 < yorick> that's what it means
11:02 < samholmes> hang on lemme check again
11:04 < dr0id> anyone ever worked with ShareJS ?
11:13 < samholmes> yorick: you was/is/were/ares right. XD
11:13 < yorick> samholmes: I am.
11:13 < samholmes> thx
11:34 < samholmes> Wait, why aren't there any arguments passed to the event handler for d.on('end')? I thought that remote was the one argument?
11:40 < samholmes> wait...what d.on('end') for? Is it for when remotes end connections?
12:19 < Swaagie> I'm spawning the yui compressor as a child process, attach event listeners on stdout, receive data in the buffer, but on compressor exit the buffer is suddenly empty, http://pastie.org/4689985
12:19 < Swaagie> Anyone an idea, seems like the child is exiting to soon
12:20 < pyrotechnick> having a look
12:20 < pyrotechnick> let me play
12:20 < Swaagie> pyrotechnick, ok :D
12:21 < pyrotechnick> can i have all the code
12:21 < pyrotechnick> or at least something i can run
12:21 < mmalecki> Swaagie: change exit to close
12:22 < pyrotechnick> there you go
12:22 < Swaagie> pyrotechnick, basically its https://github.com/observing/square
12:22 < pyrotechnick> ^
12:22 < pyrotechnick> mmalecki's got your back
12:22 < Swaagie> mmalecki, thanks will try
12:23 < Swaagie> pyrotechnick, mmalecki awesome
12:23 < pyrotechnick> is this kind of a screwwy API?
12:23 < Swaagie> pyrotechnick, don't know screwwy 
12:24 < pyrotechnick> just
12:24 < pyrotechnick> is it necessary to have both exit and close?
12:24 < AAA_awright> Swaagie: Try the close event instead
12:24 < Swaagie> AAA_awright, yup thanks that did the trick
12:24 < AAA_awright> You'd think they'd publish that in the changelog
12:24 < Swaagie> well that was my next question
12:25 < Swaagie> when was this changed :P
12:25 < pyrotechnick> did it change?
12:25 < AAA_awright> 0.8.6 or so
12:25 < Swaagie> must be, since this code is in existance since 0.6
12:25 < pyrotechnick> i thought that 0.8 was stable
12:25 < AAA_awright> Major version zero by definition is unstable
12:25 < Swaagie> `3rd-Eden will be happy with this :P he was going nuts over the error :D
12:25 < pyrotechnick> not with node
12:25 < pyrotechnick> hence them maintaining 0.x and 0.x-1
12:26 < AAA_awright> Go bug ryah or someone to release version 1 so we can actually start SEEING when reverse-compatability is broken
12:26 < AAA_awright> There's just no excuse for version 0
12:26 < pyrotechnick> semver actually dictates software in prod to be 1.x
12:27 < AAA_awright> I don't think it does, but it highly suggests it
12:27 < pyrotechnick> but that aside, 0.even is supposed to be stable in node right? anyone can chime in here?
12:27 < AAA_awright> Though that have that rediculous semver 2, no thanks
12:28 <@Nexxy> 0.even is stable
12:28 < pyrotechnick> http://blog.nodejs.org/2012/08/22/node-v0-8-8-stable/
12:28 < pyrotechnick> yes
12:28 <@Nexxy> last I heard
12:28 < Swaagie> can't find anything in the changelogs/blog about the child close change
12:28 < pyrotechnick> stable
12:28 < AAA_awright> Also, "stable" != "backwards incompatible"
12:28 < pyrotechnick> http://blog.nodejs.org/2012/06/25/node-v0-8-0/ I am thrilled to announce the arrival of a new stable version of Node.js.
12:28 < pyrotechnick> stable means API is consitant 
12:28 < pyrotechnick> besides bug fixes
12:29 < pyrotechnick> maybe it was a bug
12:29 < AAA_awright> That's what the major revision number is for
12:29 < pyrotechnick> yeah but node rapes it ok
12:29 < AAA_awright> Not a bug, the close event was added to fix a bug
12:29 < RLa> stop resisting changes, when api changes you can and will adopt
12:29 < pyrotechnick> we know this
12:29 < pyrotechnick> RLa: that's retarded
12:29 < AAA_awright> RLa: I'm all for changes, but if you do, INCREMENT THE STUPID REVISION NUMBER
12:29 < pyrotechnick> yeah
12:29 < pyrotechnick> there's a chance it's a bugfix
12:29 < mscdex> ah a new nodejs troll
12:30 < RLa> no increment in version number? huh
12:30 < pyrotechnick> then no "rules" have been broken, semver or node's own
12:30 < mscdex> :-)
12:30 < jetienne> like this channel needed more trolls :)
12:30 <@Nexxy> it has troll?
12:30 < jetienne> no trolls
12:30 < pyrotechnick> i love trolls
12:30 < mscdex> not here, but http://dev.hasenj.org/post/31042963934/nodejs-hate
12:30 < pyrotechnick> nah
12:30 < pyrotechnick> you should real the nodejs is terrible one
12:30 < mscdex> i've seen them all, this is just the latest one though ;-)
12:31 < pyrotechnick> sorry yeah
12:31 < pyrotechnick> thats it
12:31 < Swaagie> can't github issues be added/linked with information about the bug?
12:31 < pyrotechnick> and that's not a troll
12:31 <@Nexxy> node js is badass rockstar tech
12:31 < Swaagie> in the blog that is
12:31 < pyrotechnick> that's just a retard practising his blogging
12:31 < pyrotechnick> you can't make that kind of shit up
12:31 < RLa> mscdex, he does not hate node, he hates callbacks
12:31 < pyrotechnick> nah he hates node
12:31 < RLa> i just read that arcticle in morning
12:32 < jetienne> he got a lot of hits
12:32 < jetienne> this is cool for him
12:32 < RLa> also when you have newest tech one can't expect to have tutorials etc. available already
12:32 < pyrotechnick> he got hits to his shitty tumblr...cool
12:32 < pyrotechnick> i hope he doesn't spend all his money at once
12:32 < RLa> i think the link to the article was posted to hacker news too
12:32 < pyrotechnick> yeah it's rotting away on the front page
12:33 < jetienne> like here, hn likes trolls :)
12:33 < jetienne> and trolls makes hit
12:33 <@Nexxy> there are no trolls
12:33 < pyrotechnick> TROLLS NEED LOVING TOO
12:33 < yawn> lol
12:33 < yawn> Nexxy: you alive?
12:33 <@Nexxy> having a dissenting opinion doesn't make you a troll
12:33 < yawn> haven't seen you for a while
12:33 < AAA_awright> Some people are just going to not like new tech. They comprehended other libraries like the Python functions around a non-standard paradigm, and learned the wrong things, etc
12:33 <@Nexxy> lol yes
12:33 < pyrotechnick> no that's a markov chain
12:33 < yawn> :(
12:33 < yawn> that's too bad
12:33 < yawn> HAR HAR
12:33 <@Nexxy> I've been moving
12:33 < yawn> :P
12:33 < AAA_awright> Nexxy++
12:33 < pyrotechnick> no more beer bot
12:33 < pyrotechnick> but there is this
12:33 < pyrotechnick> -g goatse
12:33 < purr> pyrotechnick: goatse.cx - Wikipedia, the free encyclopedia <http://en.wikipedia.org/wiki/Goatse.cx>
12:34 < pyrotechnick> -g horseporn
12:34 < purr> pyrotechnick: My Horse Porn <http://myhorseporn.com/>
12:34 < jetienne> Nexxy: but being a troll makes you a troll
12:34 < pyrotechnick> OMG PURR
12:34 < pyrotechnick> STFU
12:34 < pyrotechnick> WE DONT WANNA SEE IT
12:34 <@Nexxy> that's enougj
12:34 < AAA_awright> If you want to tall someone a troll because they disagree with you, (1) you have no clue what trolling is, and (2) you have no real argument against them, do you?
12:34 < pyrotechnick> BAN PURR
12:34 < pyrotechnick> he's linking horseporn
12:34 < AAA_awright> *call
12:34 < Swaagie> :/
12:34 < pyrotechnick> BAN PURR NOW
12:34 < pyrotechnick> THATS DISGUSTING
12:34 < pyrotechnick> MY EYES
12:34 < AAA_awright> pyrotechnick: ...
12:34 -!- pyrotechnick was kicked from #Node.js by Nexxy [pyrotechnick]
12:35 <@Nexxy> anyway
12:35 < AAA_awright> SO
12:35 < yawn> oh come on :( , i just grabbed popcorns, Nexxy 
12:35 <@Nexxy> lol
12:36 < RLa> purr, does it have something to do with horse js?
12:36 < RLa> i have been wondering a month who's behind horse js
12:37 -!- mode/#Node.js [+b *!*Adium@*.dyn.iinet.net.au] by Nexxy
12:37 -!- h0rs3p0rn was kicked from #Node.js by Nexxy [h0rs3p0rn]
12:37 <@Nexxy> lol way to turn a kick into a ban
12:38 < h0rs3p0rnz> lulz
12:38 < h0rs3p0rnz> come at me nexxy
12:38 -!- mode/#Node.js [+b *!*7cabd9ff@*.124.171.217.255] by Nexxy
12:38 -!- h0rs3p0rnz was kicked from #Node.js by Nexxy [h0rs3p0rnz]
12:40 < h0rs3p0rn_> dammit now i have to script it
12:40 < h0rs3p0rn_> YOU DID THIS NEEXY
12:40 <@Nexxy> of course I did
12:41 < h0rs3p0rn_> wats a good irc lib
12:42 < tuhoojabotti> Is there a module that allows me to stream between processes?
13:02 -!- mode/#Node.js [-b *!*Adium@*.dyn.iinet.net.au] by Nexxy
13:02 -!- mode/#Node.js [-b *!*7cabd9ff@*.124.171.217.255] by Nexxy
13:30 < asdf12> wtb a trending project feature @ npmjs.org
13:32 < asdf12> i want to be able to see what the top 3 most popular modules were for the past 30 days or something, mainly to stay in the loop of new cool projects
13:33 < asdf12> lol what the heck
13:33 < asdf12> https://github.com/democrats/voter-registration
13:33 < asdf12> politician are starting open source projects, dang
13:34 < asdf12> oh nice the white house as a github account too
14:15 < monokrome>                                                                                                                                                                             2.168.1.124
14:15 < monokrome> sorry
14:20 < jetienne> let guess the 2 first numbers :)
14:20 < monokrome>   You never will! :D
14:37 < nmartin> funny that 37signals uses node.js to build a Rack server for OS X
14:37 < nmartin> since 37Signals wrote RAils
14:40 < pyrotechnick> why is that funny
14:41 < zomg> because they obviously should be locked into a single tech even if it isn't suitable for a particular purpose!
14:41 < zomg> ;>
14:47 < nmartin> it's funny because for years 37signals' hammer was rails, so everything looked like  nail to them
14:50 < nmartin> As in: http://interacc.typepad.com/.a/6a01053596fb28970c0120a58d82f5970b-pi
14:53 < pyrotechnick> the universe itself exists within us
14:53 < pyrotechnick> we are star dust, in the highest exalted way
15:46 < zachwolfe> I'm trying to use socket.io.js, but on the client I'm getting an "uncaught typeerror Object#<Object> has no method 'connect' when i try to use "io.connect()"
15:46 < pyrotechnick> show your code
15:46 < pyrotechnick> io isn't defined, you're not including the library
15:47 < zachwolfe> yea i think i'm importing the wrong socket.io.js file
15:47 < zachwolfe> or something along those lins
15:47 < pyrotechnick> gist it or zip it or something
15:47 < zachwolfe> hmm?
15:48 < bingomanatee> mornign node
15:49 < pyrotechnick> heya dave
15:49 < bingomanatee> where can I get a list of the relese dates of the various vesions of Node?
15:49 < pyrotechnick> node blog
15:49 < pyrotechnick> mmmmmaybe the modification dates on the files
15:49 < bingomanatee> yup that doz it
15:49 < pyrotechnick> git repo tags
15:49 < bingomanatee> blog is good
15:49 < drudge> bingomanatee: https://raw.github.com/joyent/node/v0.8.8/ChangeLog
15:49 < pyrotechnick> yw
15:49 < bingomanatee> weighing the results of Noogle by release brackets 
15:49 < pyrotechnick> that's hot
15:50 < pyrotechnick> how much do i swear?
15:50 < bingomanatee> patience young paduwan
15:50 < zachwolfe> pyrotechnick: http://pastebin.com/7K6p2r0S
15:50 < zachwolfe> thanks
15:50 < pyrotechnick> <script src="https://localhost/socketio.js"></script>
15:50 < zachwolfe> that's the file name
15:51 < pyrotechnick> unless it's aliased it's /socket.io/socket.io.js
15:51 < pyrotechnick> but i remember there being an alias
15:51 < pyrotechnick> i don't know what to
15:51 < pyrotechnick> show me your server
15:52 < zachwolfe> pyrotechnick: there's no file on my server at /socket.io/socket.io.js
15:52 < pyrotechnick> it's magical
15:52 < zachwolfe> it's just in the root as socketio.js
15:52 < pyrotechnick> show me your server code so i can help you
15:53 < alextucker> Is there a way to run Mocha in bail mode in the browser?
15:53 < zachwolfe> http://pastebin.com/gy9f18ia
15:53 < zachwolfe> pyrotechnick: ^^
15:53 < pyrotechnick> change the path to what i said
15:53 < pyrotechnick> it should work
15:53 < zachwolfe> ok
15:53 < zachwolfe> nice
15:53 < pyrotechnick> ill explain
15:53 < zachwolfe> pyrotechnick: why is that? is it something that npm does?
15:54 < pyrotechnick> ahh wait you're not using express
15:54 < zachwolfe> nope
15:54 < zachwolfe> works, however
15:54 < pyrotechnick> it only magically serves the client on that route with express, i think
15:54 < pyrotechnick> really?
15:54 < zachwolfe> yep
15:54 < pyrotechnick> thats weird
15:55 < zachwolfe> I do have express installed in this directory i believe
15:55 < pyrotechnick> https://github.com/LearnBoost/socket.io/blob/master/lib/static.js
15:55 < zachwolfe> what's that
15:55 < pyrotechnick> it's the code which serves the file
15:55 < zachwolfe> ok, thanks
15:55 < zachwolfe> pyrotechnick: what's that called? when /socket.io/socket.io.js just 'magically' works? 
15:56 < zachwolfe> some kind of built in node route?
15:56 < pyrotechnick> serving a static file
15:56 < bingomanatee> I suppose it would be asking too mugh for a JSON version of the release notes?
15:56 < pyrotechnick> well, middleware
15:56 < pyrotechnick> mounting a file at a route
15:56 < pyrotechnick> just serving a file really
15:56 < zachwolfe> ok
15:57 < zachwolfe> well, thank you very much
15:57 < pyrotechnick> i dont know how it's working
15:57 < pyrotechnick> but whatever
15:57 < zachwolfe> lol
15:57 < zachwolfe> later! thanks again
15:59 < pyrotechnick> socket.io voodoo magick
16:21 < nmartin> does anyone know of a c project that can act as a template for writing a node.js native library? I'm pretty sure you pass in a node.js callback as a parameter, and you need the v8 lib, but what else?  I need to write a PAM auth lib, and don't want to have to use a child process
16:22 < nmartin> the the other pam auth project is c++ :(
16:24 < zenista> anybody using passport for auth here
16:27 < spion_> zenista, yes
16:27 < nmartin> or maybe my question may better be phrased: Is it possible to write a pure C native extension for node.js?
16:28 < nmartin> or is the v8 lib c++ only?
16:28 < pyrotechnick> you extern the c in
16:28 < pyrotechnick> you can also use ffi
16:28 < zenista> spion_ i m getting 'missing credentials'
16:28 < zenista> it seems app.post '/login' is not calling passport.authenticate method
16:28 < pyrotechnick> https://github.com/rbranson/node-ffi
16:36 < nmartin> ffi looks promising.  I get so buried down in c++ "object-ness", when I can do 99.9% of what I need to do in C without objects
16:36 < nmartin> like a simple PAM library
16:37 < zenista> <spion_> how to get user in my routes or in views
16:37 < zenista> is it available in req.user
16:43 < zenista> spion_ how to save additional data besides id in session with passport
16:49 < ootje> what is "this" supposed to be in the context of the callback function of process.nextTick() ? something random? :p
16:51 < ootje> in my case it is an ArrayBuffer for some reason.. so, do i have to do process.nextTick(function() { somefunction.call(my-this) }) to get this right? 
16:53 < zenista> hi guys my passport now seems to work fine for auth 
16:53 < pyrotechnick> let's party
16:53 < pyrotechnick> >.>
16:53 < pyrotechnick> <.<
16:53 < pyrotechnick> v.v
16:53 < zenista> yep
16:53 < pyrotechnick> ^.^
16:54 < pyrotechnick> everybody get up
16:54 < pyrotechnick> everybody get up and dance
16:54 < zenista> let me put the rock dvd on
16:55 < zenista> is passport author around i wanna say thanks to him
16:57 < pyrotechnick> mailto:jaredhanson@gmail.com maybe
16:58 < nmartin> wonder why TootallNate has a node-ffi and ffi package in npm?  confusing
16:59 < nmartin> they appear to do almost he same thing
17:00 < pyrotechnick> i think node-ffi is old
17:02 < bingomanatee> ping isaacs
17:03 < bingomanatee> Where do you think the most siginficant API changes have been made in node JS's releases?
17:04 < pyrotechnick> recently?
17:04 < bingomanatee> in the last 3 years
17:04 < pyrotechnick> cluster
17:04 < pyrotechnick> domains
17:05 < pyrotechnick> crypto
17:05 < pyrotechnick> streams soon
17:18 < AntelopeSalad> does anyone have a good graphical representation of the event loop in v8?
17:19 < BennyLava> [stuff goes in] --> [stuff comes out]
17:19 < BennyLava> You're welcome.
17:19 < pyrotechnick> technically that is graphical
17:19 < AntelopeSalad> yeah i know, i was hopeing there was a really nice chart explaining how things get deferred and executed
17:20 < AntelopeSalad> *hoping
17:24 < timeturner> s it acceptable to throw an error from within a function and not send the error to the callback?
17:24 < timeturner> If that function is my own
17:24 < pyrotechnick> 9/10 times no
17:24 < timeturner> I kind of have a catch all for error not related to the user that sends a 500 from express
17:24 < timeturner> so I shoould throw from the callback?
17:25 < timeturner> or take care of it etc.
17:25 < pyrotechnick> theres not much in node that throws
17:25 < pyrotechnick> JSON.parse can
17:25 < timeturner> so we shouldn't throw
17:25 < pyrotechnick> not really
17:26 < pyrotechnick> unless it's sync
17:26 < pyrotechnick> When using the synchronous form any exceptions are immediately thrown. You can use try/catch to handle exceptions or allow them to bubble up.
17:26 < timeturner> so with async always pass the error and handle it within the callback and don't throw it
17:27 < timeturner> the only thing that I know throws is mongoose's validationerror thing
17:27 < timeturner> that must be sync then
17:29 < pyrotechnick> yes i think validators need to be sync
17:30 < pyrotechnick> hmm no they can be async
17:30 < AAA_awright> timeturner: If a function has a callback, Bad Things can happen if you throw an error before you call the callback. I'd even call the callback and throw, before I would just throw, and not call the callback
17:30 < pyrotechnick> http://mongoosejs.com/docs/api.html#document_Document-validatehttp://mongoosejs.com/docs/api.html#document_Document-validatehttp://mongoosejs.com/docs/api.html#document_Document-validate
17:30 < AAA_awright> Callbacks must get called
17:30 < pyrotechnick> apparently it's async
17:34 < timeturner> wait, throwing doesn't return from the function?
17:34 < timeturner> ah, yeah it's just easier to send the error in the callback
17:35 < timeturner> but I'm worried about the stuff that just decides to throw from the modules within node_modules
17:35 < timeturner> or from node itself
17:35 < pyrotechnick> you can hook into process.on 'uncaughtException'
17:35 < pyrotechnick> or just don't use sync methods which throw
17:35 < timeturner> right now the "catch-all" is just express catching all the stuff that's being thrown from the last middleware that has an arity of 4 (err, req, res, next)
17:36 < timeturner> yeah
17:36 < timeturner> what exactly is express catching then?
17:36 < timeturner> I feel like every single error that is thrown from wherever is caught by express
17:36 < timeturner> dunno if it's using uncaughtException...
17:37 < jhsto> does anyone know a easy solution to require javasript to load a page?
17:37 < jhsto> like to make sure that the client has javascript enabled
17:39 < timeturner> have a css selector callback that hides a div that says "JavaScript is not enabled! Please enable JavaScript and try again!"
17:39 < pyrotechnick> <noscript>
17:39 < Couto> jhsto <noscript>  is not enough??
17:39 < timeturner> or noscript yeah
17:39 < jhsto> thanks, i think that this is enough
17:40 < jhsto> i kind of suck when it comes to composing google search words
17:40 < timeturner> "check "javascript disabled
17:40 < timeturner> "check javascript disabled" *
17:41 < jhsto> lol
17:42 < AntelopeSalad> timeturner: express catches them all because i think every route is wrapped in a try/catch
17:42 < jhsto> well, i do use express
17:54 < kiffdev> I would like to create a node.js optimized gnu/linux distro (likely based on Ubuntu server or CentOS). Where is an appropriate place to have such discussions ? I have multiple motivations and many questions, any advice would be greatly appreciated.
17:55 < maxogden> start a github repo or write a blog post
17:56 < kiffdev> That is what I was thinking, but I want to be sure there is not a project already, no use duplicating work and I have not seen anything thus far.
17:57 < kiffdev> I will do as you say though and maybe I will catch someones attention.
17:58 < pyrotechnick> kiffdev: you're basically talking about SmartOS
17:58 < kiffdev> ok
17:58 < kiffdev> let me start there thanks
17:58 < jhernandez> kiffdev: you can make your first prototype using susestudio
17:59 < kiffdev> to be clear I want a node.js gnu/linux server
17:59 < pyrotechnick> it's solaris
17:59 < pyrotechnick> i think
17:59 < kiffdev> sounds like
17:59 < kiffdev> open source?
17:59 < pyrotechnick> it is now yes
17:59 < pyrotechnick> as of august
17:59 < pyrotechnick> http://smartos.org/
18:00 < kiffdev> great I will check it out thanks
18:01 < pyrotechnick> https://github.com/joyent/smartos-live
18:01 < kiffdev> thanks
18:01 < samholmes> Why would document.cookie return an empty string when in the web inspector there is a connect.sid cookie?
18:02 < pyrotechnick> cookie monster probably
18:03 < pyrotechnick> ( *< • • •
18:03 < pyrotechnick> nom nom nom
18:06 < CIA-116> node: Nathan Rajlich master * ra4ef01d / (3 files in 3 dirs): buffer: implement Buffer.prototype.toJSON() - http://git.io/Tna0EA
18:06 < pyrotechnick> wat'd buffers do before?
18:07 < pyrotechnick> oh right
18:15 < pyrotechnick> how does one go about detecting new processes besides polling ps or something naive?
18:16 < draginx> Is nodehs still single threaded?
18:16 < draginx> nodejs*
18:16 < CIA-116> node: Nathan Rajlich master * rdba47ae / doc/api/buffer.markdown : docs: fix typo in Buffer#toJSON() docs - http://git.io/6FwNfg
18:17 < pyrotechnick> draginx: it never was singlethreaded
18:17 < pyrotechnick> v8 is but node isnt
18:17 < draginx> http://www.realfreemarket.org/blog/2011/10/25/node-js-is-vb6/
18:17 < draginx> oooooo
18:18 < pyrotechnick> dems fightin words
18:18 < pyrotechnick> he lost me at "I briefly researched node.js.  I was not impressed."
18:18 < samholmes> pyrotechnick: is there really such a thing as the cookie monster? :o
18:19 < pyrotechnick> yes he lives in a trash can on sesame street
18:19 < pyrotechnick> he doesn't eat as many cookies these days though since they were declared a sometimes food
18:19 < samholmes> yeah, but not on the web
18:19 < pyrotechnick> well
18:20 < pyrotechnick> session fixation
18:20 < pyrotechnick> i guess is a virtual cookie monster
18:21 < samholmes> oh
18:21 < samholmes> I think I know what it is though. httpOnly flag was set for the cookie. :\
18:21 < samholmes> How can I get at the cookie then?
18:22 < pyrotechnick> make a request to the server
18:22 < pyrotechnick> lulz
18:24 < samholmes> is that what socket.io does?
18:24 < pyrotechnick> i dont think the client needs the cookie does it
18:27 < timeturner> how is express catching errors that I'm throwing?
18:28 < pyrotechnick> where are you throwing them
18:28 < timeturner> from a static method function that is attached to a mongoose model
18:29 < timeturner> oh maybe mongoose is taking care of it
18:29 < timeturner> but how is express printing the error out
18:29 < timeturner> I mean how does it catch in the middleware
18:32 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:37 < poorman> So I'm using backbone right now with Require.js, but I want to get rid of Require.js. I'm having trouble deciding between browserify and brunch. Any suggestions on which one I should use?
18:42 < mbalho> if you like configuration go with browserify if you like convention go with brunch
18:45 < poorman> hmm ok
18:48 < bewest> is it expected for 0.9.1 to not copy uv's uv-private/uv-linux.h when installing?
18:49 < bewest> this seems to cause compilation issues
18:49 < CIA-116> node: Nathan Rajlich v0.8 * r608898c / configure : configure: add a "--dest-os" option to force a gyp "flavor" - http://git.io/KxH66g
18:49 < bewest> for new modules
18:52 < draginx> timeturner: i think bodyParser() does it..?
18:52 < draginx> either that or methodOverride()
18:59 < jameskyb1rz> 23
19:02 < samholmes> Interesting thing about dnode, shoe and browserify. If I expect there to be some methods on the client without checking whether or not those methods actually exist with the connection, my server will crash.
19:05 < TooTallNate> bewest: ya, those modules really should update to node-gyp
19:06 < TooTallNate> node-waf was already removed for v0.9.1 so the fact that it's still in your PATH is just a leftover from an older release
19:06 < bewest> hmm
19:06 < bewest> I see
19:06 < bewest> hmm
19:06 < samholmes> It seems like local methods on a dnode server cannot be added after the 'local' event. Why is this?
19:06 < bewest> so I should not have submitted a pull request to patch the install tool to include uv-linux.h?
19:09 < bewest> hmm ok, this seems reasonable
19:09 < bewest> uh
19:09 < bewest> TooTallNate: can you point me at any projects/commits that recently did this?
19:10 < TooTallNate> bewest: the project just needs to add a binding.gyp file https://github.com/astro/node-expat/commit/e7d7cb51f60b821600ef58fb3c4293af4d3d7582
19:10 < TooTallNate> bewest: here's a list of some good ones https://github.com/TooTallNate/node-gyp/wiki/%22binding.gyp%22-files-out-in-the-wild
19:11 < bewest> ok, I might as well give it a try
19:11 < bewest> thanks, much
19:11 < TooTallNate> no prob!
19:11 < bewest> also, would you advice removing the -waf business from my system?
19:12 < voodootikigod> TooTallNate any way/idea on making it so it vomits before attempting to compile without build essentials
19:12 < voodootikigod> aka a "test sanity, then attempt"
19:12 < voodootikigod> cause that would probably save me a million tickets
19:12 < TooTallNate> bewest: perhaps i'll have to write a little script for that ;)
19:12 < TooTallNate> voodootikigod: can you show me this vomit output?
19:13 < voodootikigod> https://github.com/voodootikigod/node-serialport/issues/78
19:13 < voodootikigod> even a -e node-gyp would be great :)
19:14 < voodootikigod> or https://github.com/voodootikigod/node-serialport/issues/70
19:14 < voodootikigod> can keep going
19:14 < voodootikigod> basically finding somewhat to indicate (possibly at npm level) this is a native module
19:14 < voodootikigod> you need a base set of things (build-essentials)
19:16 < mscdex> can't you do that as a preinstall script or something?
19:17 < TooTallNate> voodootikigod: i mean it would be easy enough to do a `which make` or `which $CC` before doing the "build" step
19:17 < TooTallNate> i already do similar checks for Python before running "configure"
19:17 < TooTallNate> voodootikigod: open an issue?
19:19 < voodootikigod> i can
19:19 < voodootikigod> want to only open with remedy
19:19 < voodootikigod> :)
19:19 < voodootikigod> best issues are those with solutions :)
19:20 < TooTallNate> voodootikigod++ :)
19:52 < djazz> node.js + lego mindstorms + raspberry pi + webcam = remote controlled robot with visuals!
19:52 < djazz> http://djazz.mine.nu/lab/rpi/remote/
19:52 < djazz> image of it: http://i.imgur.com/JYXoq.jpg
19:52 < djazz> http://i.imgur.com/2j6Ge.jpg
19:52 < timeturner> anyone know how to use async.parallel and invoke the functions multiple arguments and have the callback last
19:53 < RLa> djazz, wow, that looks cool
19:53 < djazz> Chrome only
19:53 < timeturner> pretty cool djazz
19:53 < djazz> use keyboard to control: WASD to move, crane: arrows, claw: page up/down
19:53 < timeturner> that is sweet
19:54 < RLa> lol, how many operators are on it
19:54 < djazz> 3-4
19:54 < RLa> aww, i wanted to pick up that thing on right 
19:56 < RLa> djazz, how long it will be online?
19:56 < djazz> RLa: idk
19:56 < djazz> a few more hours
19:58 < timeturner> this is fun
19:58 < timeturner> :D
19:58 < timeturner> where is this actually happening?
19:59 < djazz> timeturner: sweden, my apartment
19:59 < timeturner> whoa
20:00 < yawn> djazz: so you actually built it!
20:00 < timeturner> I get to control a robot all the way from texas :D
20:00 < timeturner> this is epic
20:00 < yawn> dunno if you remember.. we talked a while ago.. march or april
20:00 < djazz> :D
20:00 < yawn> congrats :D
20:00 < djazz> yawn: the base it my design
20:00 < RLa> djazz, what is happening to battery
20:00 < djazz> RLa: what?
20:00 < RLa> it dropped to 5.9V
20:00 < djazz> ah, its low
20:00 < djazz> i should charge it
20:00 < savadi> Hi, I'm a newbie to SmartOS. I'm trying to debug my nodejs app using mdb. When I tried to load the mdb_v8.so it says could not find the module. Where can I get it ?
20:01 < RLa> can't you use external supply from wall?
20:01 < djazz> RLa: not the NXT
20:02 < djazz> the raspberry uses power
20:02 < RLa> if it could draw from wall you could keep it online 24/7 :)
20:03 < djazz> :D
20:03 < RLa> also add lights when it's night and room lights are out
20:03 < bewest> I don't suppose there's some nifty tool that will force wscript to output gyp json?
20:04 < djazz> RLa: it got light but its red
20:04 < djazz> not on atm
20:04 < RLa> aww, tire is hard to pick up
20:04 < djazz> I SHOULD CHARGE THE BASE
20:04 < djazz> it can hardly move
20:04 < bewest> wow that's awesome!!
20:04 < djazz> XD
20:04 < djazz> the crane controls works!
20:05 < bewest> did you start from scratch or did you use brunch/jekyll/bootstrap stuff to get started?
20:05 < djazz> bewest: the node.js is simple websocket and serialport
20:05 < bewest> I'm trying to do something similar for my insulin pumps and glucometers
20:06 < bewest> have a bunch of python code which clearly needs to be rewritten for node :-)
20:06 < timeturner> control insulin pumps over the internet?
20:06 < bewest> absolutely
20:06 < timeturner> wow
20:06 < bewest> actually
20:06 < bewest> the first one will be: "please hack my pump"
20:06 < bewest> and here's $2.56 if you can read the history
20:06 < bewest> becauase the protocol is scret
20:07 < timeturner> haha
20:07 < bewest> meanwhile their buggy algorithms are poisoning me
20:07 < bewest> talk about slave to the machine
20:07 < bewest> djazz: that's really cool
20:07 < timeturner> when the average internet speed gets high enough all the basic medical devices will be easy for doctors to control over a secure website for patients
20:08 < djazz> thx!
20:08 < timeturner> no idea if that will ever happen though
20:08 < bewest> timeturner: main thing is actually to get the data under patient control first
20:08 < bewest> right now medtronic is quoted in wsj saying they plan to "exploit the data" and patients have no access
20:08 < timeturner> :O
20:08 < bewest> so there's no way to confirm or debug anything
20:08 < bewest> snake oil
20:09 < djazz> i want so i can use power to the NXT, not battery :/
20:09 < bewest> but yeah, technology is readily available
20:09 < bewest> I ran tty.js last weekend
20:09 < bewest> on beaglebone
20:09 < bewest> where I was able to control the native terminal over websocket to control python code reading from serial port
20:09 < timeturner> but look at all the legal problems if the internet connection lags and the doctor can't react fast enough
20:09 < bewest> glucomter
20:09 < timeturner> I mean how would we fix that
20:10 < bewest> insulin pump needed usbserial options support
20:10 < bewest> right now, there are doctors who are "on call" 24/7 for their docket of patients
20:10 < bewest> because the doctor is the *only* one authorized to see the "live" readouts of heart devices, ICDs, etc...
20:10 < timeturner> right
20:11 < bewest> so my solution is to maintain open source libraries that audit and monitor these devices
20:11 < bewest> the data gets integrated with say, lockerproject
20:11 < bewest> where it's under your control
20:11 < bewest> access is delegated through oauth
20:11 < bewest> and you can remote with people you trust
20:11 < bewest> the thing locker is missing is revision contorl
20:12 < bewest> you  need to be able to ask what changed between september and october
20:12 < bewest> and who changed it
20:12 < bewest> and why
20:12 < bewest> git does a really really nice job of solving those use cases
20:12 < bewest> I think a git controlled PHR would be really compelling
20:12 < bewest> the community needs to peer review the behavior of these devices, for safety
20:13 < bewest> if a user can't debug their medical device, hazardous situations ensue
20:13 < bewest> the FDA has documented thousands of deaths because the pump's behavior is so unpredictable
20:13 < timeturner> yeah
20:13 < bewest> right now, the narrative the vendors are able to get away with is that the raw data is meaningless and not useful
20:14 < bewest> and that the method for transforming it is proprietary and secret
20:15 < bewest> I have a variety of efforts to reverse engineer the protocol
20:15 < timeturner> wait I don't understand, why does the patient need this information
20:15 < timeturner> or I mean control of the device
20:15 < bewest> same reason you need your fitbit data
20:15 < bewest> oh, the patient always contorls how much insuln
20:15 < timeturner> ah
20:15 < timeturner> and the doctor just checks the readings
20:15 < bewest> it's basically a given that only the patient can administer drugs correctly
20:16 < bewest> the doctor provides loose guidance on fine tuning the device
20:16 < bewest> they get the device within a safe operating range
20:16 <@isaacs> Does anyone have a module to stream audio through a speech-to-text service?
20:16 < timeturner> ah I see
20:16 < bewest> so that it won't kill you so soon
20:16 <@isaacs> Or, does anyone know of a good speech-to-text service?
20:16 < bewest> and then it's up to you to "look both ways before you cross the street"
20:16 < timeturner> haha, very true
20:16 < timeturner> yep
20:16 < bewest> it's just a machine, after all, and they put lots of hard coded optimizations to meet time tables
20:16 < mmalecki> isaacs: I think you can misuse siri service somehow
20:17 < mmalecki> but I'm too drunk to think, so ignore me, I might be wrong
20:17 < bewest> pretty much ensures the wrong amount of your drug
20:17 < bewest> the advice is along the lines of "try a little less when that happens"
20:17 < mprem> I have installed node 0.8.8 with sudo (ubuntu) , but can not ->  npm install express, how do I install modules without sudo
20:17 < bewest> for how long? how much is a little less?
20:18 < bewest> oh, a little, maybe .01? what???
20:18 < bewest> not very scientific
20:18 < mprem> getting error : Error: EACCES, open '/home/username/.npm/64a534c1-express.lock
20:19 < bewest> anyway, trying to evaluate a bunch of different node applications, and finding myself in the midst of detangling versions between things
20:20 < bewest> was running 0.6.17 which seemed too old for serialport, switched to 0.9.1 but maybe that's too recentt
20:20 <@isaacs> mprem: that's weird.
20:20 < bewest> voodootikigod: btw, serialport should require node 0.7.0 at least
20:20 <@isaacs> mprem: try doing this:  sudo npm cache clean
20:20 <@isaacs> mprem: then run it without sudo
20:20 < timeturner> bewest: doesn't 0.8.8 work with serialport?
20:20 < mprem> don't want to do sudo, installed node with out sudo
20:20 <@isaacs> mprem: righ
20:21 < mprem> npm cache clean gives similar error
20:21 <@isaacs> mprem: but for some reason, ~/.npm is root-owned
20:21 < bewest> probably, 0.8.* series might be a better choice for me
20:21 <@isaacs> mprem: sudo npm cache clean
20:21 <@isaacs> mprem: or, sudo rm -rf ~/.npm
20:21 < mprem> lol, wired, trying that
20:21 <@isaacs> (same thing)
20:21 <@isaacs> oh wait, no, you'd have to do sudo npm cache clean -f
20:21 <@isaacs> to also remove the .npm/-/ folders
20:22 < bewest> first I will take a stab at creating a gyp binding thingy for sqlite3
20:24 < RLa> djazz, is the node.js part of the source code available?
20:26 < mprem> isaacs: node is not installed using sudo, so -> sudo: npm: command not found
20:27 < kuja> isaacs: http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/  <-- might be of some interest. apparently there is a public Google web service that Chrome uses for its speech-to-text, however aside from this article it does not appear to be documented.
20:27 < djazz> RLa: hold on..
20:27 < boboy77b> http://bitchinbeach.com/Forum/index.php?tid=30&title=The_Best_TEEN_Porn_Movie_Collection
20:27 < mprem> isaacs: is it ok to directly delete ~/.npm 
20:27 < jmar777> not gonna click, but that looks kick worthy....
20:28 < djazz> RLa: http://pastebin.com/dy9cxerZ
20:29 < RLa> thanks a lot!
20:30 < kuja> isaacs: If you end up building a module around this, pleeease release it :)
20:32 < djazz> RLa: its really simple :D
20:32 < RLa> it is
20:32 < djazz> then the robots parse the string commands
20:32 < djazz> wanna see that code too?
20:33 < djazz> RLa: http://pastebin.com/A9H04xEY
20:34 < RLa> what language is that?
20:34 < RLa> c++?
20:38 < djazz> RLa: NXC
20:39 < djazz> simplified C for NXC
20:39 < djazz> Not eXactly C
20:39 < RLa> looks like clean, modern c++
20:41 < bewest> when converting wscript to gyp is target name versus target a big deal?
20:42 < ag4ve> is there a way to import file global variables as bulk so that i can have different models and don't have to keep doing: var mongoose = require('mongoose'); var Schema = mongoose.Schema; var mongooseTypes = require("mongoose-types"); ..... for every single schema?
20:49 < mscdex> bewest: target_name should match the name given in NODE_MODULE(); in your source
20:50 < mmalecki> can someone link me to the site about callback spaghetti which was in the #node.js topic?
20:50 < mscdex> http://callbackhell.com/ ?
20:50 < mmalecki> THANK YOU
20:50 < bewest> not my source, just playing around with stuff
20:50 < mscdex> ok, well in _the_ source :-)
20:51 < bewest> so I git grep for NODE_MODULE, but found nothing (this is sqlite-fts)
20:51 < bewest> looks like there are three targets
20:52 < mscdex> there ought to be a NODE_MODULE(); in there if there isn't
20:52 < mscdex> especially if the source is to work correctly on Windows
20:55 < zenista> hi guys with sequelize associations  how to get user.getCompany.title in jade view
20:55 < zenista> user.getCompany() is giving [object, object]
20:55 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:56 < mscdex> zenista: do those objects have a title property?
20:57 < zenista> yes
20:57 < zenista> doing #{user#getCompany().title} gives error
20:57 <@konobi> user.getCompany().title ?
20:57 < mscdex> then iterate over them
20:57 < zenista> k
20:57 < mscdex> or use user.getCompany()[0].title
20:57 < mscdex> if you just want the first one
20:57 < zenista> cool
21:05 < ctult> Is there anything that uses docco comments that directly exports to Markdown?
21:06 < zenista> mscdex doing console.log(user.getBizCat()) gives { fct: [Function] }
21:06 < zenista> but doing console.log(user.getBizCat().title}  undefined
21:07 < mscdex> zenista: no idea there
21:07 < zenista> k
21:07 < zzarcon> Hello
21:07 < zenista> sequelize doc says use user#getCompany()
21:07 < zzarcon> i have a problem with socket.io
21:08 < zzarcon> when the app is online more than 30 min, the app is down, by a timeout error
21:08 < zzarcon> with the socket
21:09 < zzarcon> anyone can help me?
21:10 < djazz> https://plus.google.com/photos/113878221242502678865/albums/5707058981040292657/5708739946850513714 ^^
21:20 < TimTim`> djazz that's pretty sweet :D
21:20 < TimTim`> what's the robot's skype?
21:20 < djazz> :D
21:20 < djazz> netbook.bot
21:20 < djazz> but its not online XD
21:20 < TimTim`> doh!
21:21 < TimTim`> well i'm gonna add it anyway
21:21 < djazz> XD
21:21 < TimTim`> i love building robots :D
21:21 < zzarcon> Anyone help me with socket.io?
21:21 < djazz> TimTim`: lego or metal?
21:21 < djazz> :)
21:22 < TimTim`> but i haven't built one since college, been working on a startup so i can have a passive source of income so i can afford to do robotics full time lol
21:24 < djazz> TimTim`: http://raspberrypi.org/phpBB3/viewtopic.php?f=34&t=16750
21:24 < TimTim`> the last one i built was a renesas 32k board attached to 4 wheels/2 motors that would follow you around using just 2 ultrasonic sensors
21:24 < djazz> follow?
21:24 < TimTim`> yes
21:25 < djazz> i got 2x US sensors
21:25 < djazz> :D
21:25 < TimTim`> it would turn and move in whatever you went
21:25 < djazz> at the front http://i.imgur.com/2j6Ge.jpg
21:25 < TimTim`> was harder than it sounds, with the constraints and cheap sensors lol
21:25 < djazz> hm
21:25 < djazz> i made a program for it to avoid walls
21:26 < TimTim`> that looks pretty sweet :O
21:26 < djazz> and not getting stuck in corners
21:26 < djazz> TimTim`: http://i.imgur.com/JYXoq.jpg
21:26 < TimTim`> :O
21:26 < TimTim`> nice!!
21:27 < TimTim`> build it from scratch or was it a kit?
21:28 < djazz> TimTim`: for the crane part, i followed a step-by-step guide
21:28 < djazz> for the base, i designed it myself
21:28 < djazz> ultrasonic room explorer: http://pastebin.com/UQGPRkv9
21:28 < mansoor-s> I'm goign to launch node.js into the upper atomashpere :D   with a high altitude weather balloon and rasberry PI
21:29 < djazz> mansoor-s: :D
21:29 < djazz> and good batteries?
21:29 < djazz> GPS?
21:29 < mansoor-s> ofcourse
21:29 < djazz> webcam?
21:29 < djazz> :)
21:29 < mansoor-s> yes
21:29 < mansoor-s> the purpose will be to take pictures
21:29 < djazz> didnt someone already do that..
21:29 < mansoor-s> many
21:29 < mansoor-s> but not mee
21:29 < djazz> fun project anyway :D
21:29 < mansoor-s> me*
21:30 < djazz> TimTim`: node.js source for that robot: http://pastebin.com/dy9cxerZ
21:30 < mansoor-s> I'll do it when i can risk ~200$ worth of equipment. lol
21:30 < djazz> it sends bluetooth messages to the robot
21:30 < djazz> aha
21:32 < TimTim`> :O nice djazz
21:32 < djazz> from the raspberry mounted
21:33 < bewest> ah, mscdex you have a clone of sqlite-fts?
21:33 < bewest> oh, maybe not, nm
21:34 < bewest> I should give up and try node 0.8.*
21:40 < rgrinberg> How do i install stuff globally with npm that was installed with nvm? npm install underscore -g for example works. but then require('underscore') complains that it cannot find it
21:45 < mansoor-s> rgrinberg, what is nvm?
21:46 < BennyLava> nevermind
21:46 < mansoor-s> funny
21:46 < BennyLava> I know, I'm hilarious
21:46 < mansoor-s> lilarious looking!
21:46 < mansoor-s> bazinga
21:46 < mscdex> bewest: yeah, i'm actually converting it to gyp right now ;-)
21:46 < bewest> oh I see :-D
21:47 < bewest> I'd be happy to test
21:47 < bewest> compiling node 0.8.0 now, but I think that wont' solve the issue of finding uv-linux.h
21:47 < djazz> how can i adjust sound levels on my rpi?
21:47 < djazz> amixer?
21:47 < bewest> or 0.8.8, rather
21:47 < djazz> ah wrong channel
21:47 < djazz> :<
21:49 < bewest> I don't understand what gyp might be doing that would solve that
21:49 < RLa> djazz, will you put crane online again?
21:49 < djazz> RLa: i have charged the batteries
21:49 < djazz> now
21:49 < djazz> i hope its enough
21:50 < djazz> i cant touch them, so hot
21:50 < djazz> XD
21:50 < bewest> :-D
21:50 < bewest> what are you using for batteries?
21:50 < djazz> AA rechargable
21:50 < bewest> I see
21:50 < djazz> Ni-MH
21:50 < bewest> to power the rpi?
21:50 < djazz> no
21:50 < djazz> the NXT
21:51 < bewest> ah, that's the crane?
21:51 < djazz> yes
21:51 < bewest> how are you powering the rpi?
21:51 < djazz> outlet
21:51 < RLa> nxt needs external wall power
21:51 < djazz> bewest: http://i.imgur.com/JYXoq.jpg
21:51 < djazz> RLa: no
21:51 < bewest> :-) there's the rpi :-)
21:51 < djazz> RLa: i could buy a thing so i can use outlet power to the NXT though
21:51 < djazz> http://i.imgur.com/2j6Ge.jpg
21:51 < RLa> or some crazy wireless tesla-style energy transfer
21:52 < bewest> so using websocket to control both camera and crane?
21:52 < bewest> via rpi?
21:52 < djazz> bewest: camera is using "motion"
21:52 < djazz> not node.js
21:53 < djazz> the node.js program only passes the data on from the webpage to the robot
21:55 < elbuo> what is the equivalent of writing: var x  = require('x)('params')
21:55 < elbuo> in coffeescript?
21:55 < BennyLava> #coffeescript
21:56 < elbuo> i tried asking there but no one replied...
21:56 < RLa> elbuo, wrong channel but i guess x = (require x) 'params'
21:56 < BennyLava> So be patient
21:57 < elbuo> alrite then ill give that a try
21:57 < RLa> if you prefer that kind of arguments style
21:57 < RLa> i guess that's more "functional" style
21:58 < RLa> otherwise original line without var should work as well
21:58 < djazz> RLa: aww, look at the time
21:58 < djazz> i must go to bed
21:58 < djazz> scgool tomorrow
21:58 < RLa> oh ok
21:58 < elbuo> RLa thanks :)
21:58 < djazz> its 23:58
21:58 < RLa> school sucks
21:59 < djazz> college
21:59 < djazz> i study "Web programming"
21:59 < djazz> :D
21:59 < RLa> ah, then it won't be critical
21:59 < djazz> so school is fun now
22:00 < RLa> i remember staying up to 4 am when in high school, i was quite sleepy in classes :)
22:00 < BennyLava> LOL, "web programming" course at school, must be hilariously bad
22:00 < djazz> we do HTML, PHP, C++ now
22:00 < RLa> in uni i always preferred good sleep over visiting courses 100%
22:00 < djazz> just started
22:21 < ctult> I need to clear an object of all its prototypes.  Would delete(obj.prototype) be good for that, and, if not, what would be.
22:21 < ctult> ?*
22:22 < RLa> why not set {} as prototype
22:23 < RLa> hm, delete would work
22:23 < RLa> i think delete is better
22:25 < ctult> Okay.
22:26 < ctult> >> var a = function(){return Array}; delete a.prototype
22:26 < purr> ctult: (boolean) false
22:26 < ctult> :/
22:26 < chilts> ctult: copying the values you want to keep to a new pristine object may well be a nicer way of doing it
22:26 < chilts> it is certainly a more obvious way
22:26 < chilts> and more understandable way
22:26 < BennyLava> why? ..
22:27 < chilts> because you generally don't have an object which is a something, then strip it of that something
22:27 < BennyLava> ..
22:27 < BennyLava> Oh, now it all makes sense.
22:27 < BennyLava> Wait, whaT?
22:27 < ctult> I need to actually delete all elements in an array
22:28 < BennyLava> What does that have to do with your original question?
22:28  * BennyLava is confuzzled
22:28 < ctult> So that the array I return is nice and stripped of all other arrays.
22:28 < ctult> prototypes in an array*
22:28 < BennyLava> lolwat
22:28 < ctult> Okay, I need to rewrite that
22:28 < BennyLava> Yes :)
22:30 < ctult> I need to actually delete all elements in an array so that the array I return is stripped of all functions. (concact, forEach, join)
22:30 < ctult> If I can do that, I can sandbox natives with no seams
22:31 < ctult> Is that better, BennyLava?
22:31 < BennyLava> obj.__proto__ = {}
22:32 < ctult> I need it to work in IE.
22:32 < BennyLava> Eh, this is #Node.js
22:32 < BennyLava> Anyway, then you can't.
22:32 < bewest> { } is not an array?
22:32 < BennyLava> Well, you can manually overwrite them I guess :)
22:33 < ctult> Fun.
22:33 < BennyLava> Actually
22:33 < RLa> what is there to sandbox?
22:34 < RLa> or ie allows you to use unsafe stuff?
22:34 < klaemo> Does anyone know how i map Alt(Option)+Backspace to delete the the last word in the terminal on MacOS?
22:34 < samholmes> http://www.danielbaulig.de/socket-ioexpress/ How do I make both session objects reflect each other when changes occur on either side's (express or socket.io) object?
22:36 < RLa> samholmes, do session management through functions that would send changes to other party
22:36 < samholmes> RLa: that sounds like a lot of glue code. :\
22:36 < ctult> BennyLava, could I parse through all the prototypes in the sandbox and wrap them with .call(arr)?
22:37 < samholmes> Do you mean everytime the session object is changed I have to let the other part of code know of this change?
22:37 < RLa> how else would you do it
22:37 < bewest> will likely need to try nvm
22:37 < BennyLava> ctult: I dunno
22:38 < BennyLava> Not quite sure what exactly you're doing
22:38 < ctult> Benny: http://msdn.microsoft.com/en-us/magazine/gg278167.aspx
22:38 < samholmes> RLa: Idk, maybe by committing the changes somehow. Or why wouldn't both ends of the code base share the same session object and not duplicates of the same object?
22:39 < RLa> maybe it could be done with proxies: http://stackoverflow.com/questions/6985582/monitor-all-javascript-object-properties-magic-getters-and-setters
22:40 < RLa> samholmes, you would need shared memory for that
22:40 < BennyLava> ctult: I don't have time to go through that, sorry
22:40 < samholmes> RLa: Well, sense both ends of code are in the same process, shared memory sounds good, at least for now.
22:41 < RLa> they are?
22:42 < RLa> oh ok i see what you mean
22:45 < RLa> samholmes, does it have to work in cluster?
22:45 < ctult> BennyLava: the basics of the article is: you could do something like var a = new Native(); then it creates a varible.
22:45 < samholmes> RLa: not really. Not for now.
22:45 < RLa> how big session objects are?
22:45 < samholmes> However, can't I just run .save() and .reload() to keep the session object current or somethin?
22:46 < samholmes> RLa: pretty small, they just hold some user information and feed back stuff
22:46 < RLa> otherwise you could keep mapping of user id (or similar) to session objects
22:46 < samholmes> ugh. My battery is dying though
22:46 < samholmes> on my laptop
22:47 < RLa> then you can change those objects directly and they would be always in sync
22:47 < ag4ve> how do i see what's in global? i do console.log(JSON.stringify(global)) and it tells me: TypeError: Converting circular structure to JSON
22:47 < RLa> tho i think it needs some kind of garbage collection to remove old session objects
22:48 < BennyLava> ag4ve: console.log(require('util').inspect(global)) ?
22:48 < RLa> otherwise that map just keeps growing
22:48 < BennyLava> ag4ve: you can't JSON-ify global, as functions, among other types, aren't valid JSON.
22:48 < ag4ve> ah, thanks
22:51 < ctult> >> var arr = Object.create([]); console.log(arr); arr.prototype = arr; arr.prototype.test = function(q){this[0] = q}; arr.test(4); console.log(arr)
22:51 < purr> ctult: undefined; Console: {}, {0: 4, prototype: (Circular), test: function (q){this[0] = q}}
22:52 < ctult> hm
22:57 < ag4ve> is there a way of listing all of the variables (meh, objects) in current scope?
22:58 < BennyLava> Variables, no. Objects, huh?
22:59 < RLa> it's not ruby!
23:01 < ctult> ES5: obj.forEach(callback)
23:01 <@isaacs> kuja: yes, of course, if i write something aorund this, i'll definitely publish to npm and BSD it
23:02 < TehShrike> Who's tweeting from @enterprisestack? :-P
23:02 < ctult> >> var var list = [];this.forEach(function(a){list.push(a)});console.log(list)
23:02 < purr> ctult: SyntaxError: Unexpected token var
23:02 < ctult> >> var list = [];this.forEach(function(a){list.push(a)});console.log(list)
23:02 < purr> ctult: TypeError: Object #<error> has no method 'forEach'
23:02 < ctult> You need to update your console.
23:03 < ctult> ag4ve:
23:03 < ag4ve> ctult: ?
23:03 < ctult> >> var list = []; for (i in this) {list.push(i)};console.log(list)
23:03 < purr> ctult: undefined; Console: ['numbers_that_add_and_subtract_to', 'print', 'alert', 'obfuscate', 'constant_multiply', 'strip_color', 'version', 'console', 'constant_divide', 'Sol', 'braille', 'numbers_that_add_and_multiply_to', 'list']
23:03 < ctult> Sorry was typing.
23:04 < ctult> >> numbers_that_add_and_subtract_to(1)
23:04 < purr> ctult: (object) [NaN, NaN]
23:04 < ctult> >> numbers_that_add_and_subtract_to(4,5)
23:04 < purr> ctult: (object) [4.5, -0.5]
23:04 < TehShrike> 8-|
23:05 < ctult> ag4ve: for (i in this) {} was the key there.
23:05 < ag4ve> ah, thanks
23:07 < ag4ve> >> var i = "thing"; var list = []; for (i in this) {list.push(i)};console.log(list);
23:07 < purr> ag4ve: undefined; Console: ['numbers_that_add_and_subtract_to', 'print', 'alert', 'obfuscate', 'constant_multiply', 'strip_color', 'version', 'console', 'constant_divide', 'Sol', 'braille', 'numbers_that_add_and_multiply_to', 'i', 'list']
23:07 < ag4ve> hummm, i'm not seeing what i'm expecting in my node...
23:08 < ag4ve> no, i'm seeing it in the repl, just not when i test it with 'node t.js'
23:11 < bingomanatee> hi noders
23:11 < bingomanatee> interesting work product:
23:11 < bingomanatee> node releases, a a JSON document: https://gist.github.com/3687867
23:12 < matbee> So I'm trying to set cookie data via expressjs. The problem is, I can see the cookie in Chrome's web inspector as a Response Cookie. I can't access the data via document.cookie though...
23:13 < matbee> Ive tried this to set the cookie: res.cookie('rememberme', 'yes', { expires: today, httpOnly: true });... and on the client side, document.cookie is still ""
23:15 < zomg> matbee: you need to make httpOnly false
23:15 < matbee> Oh wait
23:15 < matbee> yeah I'm dumb
23:15 < ccowan> I have a devops question
23:16 < ccowan> I'm trying to get out of doing more devops the neceassary. I want to move all my monitoring and log anaysis to a third party (like Loggly)
23:16 < ccowan> anyone have any recommendations?
23:16 < ccowan> I'm currently using Greylog + Nagios
23:26 < cj3kim> oy
23:26 < cj3kim> what is up, room?
23:28 < ctult> ag4ve, you can also use Object.keys(this) if you are assuming a modern engine.
23:30 < ag4ve> well, currently v0.9.2-pre ... but, i didn't build v8 so, idk?
23:30 < ctult> Try it in the console.
23:30 < ctult> It should work.
23:30 < ctult> ag4ve, it works for me.
23:31 < ag4ve> yeah, it worked, but the last thing worked in the repl but not in a file for some reason so...
23:33 < ag4ve> so, what's the difference between 'this' in the repl and 'this' from a script i run under zsh with 'node <script>'?
23:33 < CIA-116> node: Ben Noordhuis master * r5d9968f / tools/install.py : installer: don't install header files - http://git.io/J6m5HQ
23:35 < chilts> ag4ve: type 'node' then this (and press return), then in a different shell compare with "node -e 'console.log(this);' ...
23:35 < chilts> ... you'll notice that they look very similar, and in fact are probably the same
23:36 < bnoordhuis> chilts, ag4ve: there is a difference though
23:36 < bnoordhuis> code in the repl runs in a separate vm context
23:36 < chilts> oh ok, each line entered is a different vm context?
23:37 < chilts> or there are two, one for the repl and one for every line?
23:37 < chilts> I guess that makes sense, had never thought about that
23:39 < ag4ve> so, that's why console.log(Object.keys(this)); returned an empty object when inside a file?
23:39 < chilts> inside a file? what do you mean?
23:43 < ag4ve> cat t.js
23:43 < ag4ve> console.log(Object.keys(this));
23:43 < ag4ve> node t.js
23:43 < ag4ve> []
23:44 < ag4ve> chilts: ^^ is what i mean
23:46 < ccowan> is there anything like New Relic for node.js?
23:52 < zzarcon> I have a problem with socket.io, somebody can help me?
23:54 < ChrisPartridge> zzarcon: whats the issue
23:56 < zzarcon> Error: connect ETIMEOUT
23:56 < mscdex> bewest: finished :-)
23:56 < mscdex> bewest: give it a whirl. it should work on windows and linux at least
23:56 < zzarcon> happens when the app takes a while to open
23:56 < ag4ve> zzarcon: in a prior life, i was able to read minds. i was reborn and lost that ability
23:57 < ag4ve> so, it's a timeout?
23:57 < ag4ve> socket.io timeout or db timeout?
23:57 < zzarcon> socket.io timeout
23:58 < zzarcon>  I think
23:58 < ag4ve> code
23:58 < zzarcon> not say nothing of db
23:58 < zzarcon> code?
23:59 < ag4ve> yeah, the stuff you're having issues with - paste it somewhere and link to it
--- Log closed Mon Sep 10 00:00:08 2012
