--- Log opened Sat Jul 28 00:00:35 2012
00:06 <@maxogden> tjholowaychuk: you should be on nodeup on sunday
00:06 < tjholowaychuk> nahh i've got some photography stuff going on this weekend
00:06 < drudge> always with the excuses this one
00:07 < tjholowaychuk> haha
00:07 < standoo> tjholowaychuk: hi
00:07 < tjholowaychuk> I dont have a whole lot of interest in nodeup
00:07 < tjholowaychuk> personally
00:07 < tjholowaychuk> standoo: ello
00:07 < standoo> tjholowaychuk: i've been using your zeromq module
00:08 < tjholowaychuk> standoo i didnt write it
00:08 < drudge> tjholowaychuk: why not
00:08 < tjholowaychuk> standoo if you're talking about zeromq.ndoe
00:08 < tjholowaychuk> node*
00:08 < tjholowaychuk> drudge what's the point?
00:08 < tjholowaychuk> if I have something to say
00:08 < tjholowaychuk> i'll blog it
00:08 < standoo> tjholowaychuk: yeah, my mistake. just remembered that you were one of main contributors
00:08 < drudge> to talk about node? :)
00:08 < tjholowaychuk> drudge it's not that interesting to talk about
00:09 < drudge> tjholowaychuk: it isn't the same, it is a discussion
00:09 < drudge> tjholowaychuk: there are interesting topics to talk about. I really would have liked to hear you on the frameworks episode
00:09 < drudge> express got no love
00:09 < tjholowaychuk> meh lol who cares
00:10 < tjholowaychuk> it's a stupid topic
00:10 < tjholowaychuk> use what you like
00:10 < mikeal> express got love, 90% of what was said about express was positive
00:10 < tjholowaychuk> end of story
00:10 < mikeal> it just didn't have anyone to represent it fully so there wasn't as much time spent on it
00:10 < mikeal> tjholowaychuk: we're talking about the components stuff
00:10 < mikeal> max and isaacs are gonna be on
00:10 < mikeal> would love to have you
00:10 < drudge> mikeal, i didn't mean you bashed, it, but yeah it wasn't represented well
00:11 < tjholowaychuk> mikeal: i'm going to finish prototyping something I have in mind first
00:11 < tjholowaychuk> before forming too many opinions
00:11 < mikeal> we tried, we went down the list of contributors and the top 3 were either busy or didn't want to do it
00:11 < timeturner> tjholowaychuk's blog post is pretty comprehensive on the topic of components imo
00:11 < mikeal> tjholowaychuk: you would round out the conversation
00:11 < mikeal> more people listen to this podcast than read blog posts
00:12 < mikeal> it's sad but true
00:12 < mikeal> it makes me sad because i like writing more than talking
00:12 < tjholowaychuk> im really slow at writing haha i try to avoid big blog posts
00:12 < tjholowaychuk> that's why I prefer screencasts
00:13 < tjholowaychuk> a lot quicker for me at least
00:13 < mikeal> screencasts i always screw up
00:13 < mikeal> and it's hard to edit and redraft screencasts
00:13 < mikeal> that's what i like about wirting
00:13 < mikeal> i write it, wait a few hours, read it again and edit
00:14 < mikeal> then i make my wife read it and correct all my mistakes
00:14 < tjholowaychuk> i write it, publish
00:14 < tjholowaychuk> and have lots of typos
00:14 < tjholowaychuk> haha
00:14 < tjholowaychuk> and terrible grammar
00:14 < mikeal> i used to do that
00:14 < mikeal> but then i realized that when i read other people's posts
00:14 < mikeal> the first mistake i see, i stop reading full and start skimming
00:14 < mikeal> then i started to put a little more time in to correcting that before i publish
00:15 < mikeal> tjholowaychuk: just agree to be on, and if you have a terrible time I'll buy you a drink :)
00:16 < tjholowaychuk> ahahaha
00:16 < mikeal> i'm serious
00:16 < mikeal> i have people in Vancouver that can make it happen :)
00:17 <@maxogden> we're giving you an offer you cant refuse
00:17 <@maxogden> we have people in vancouver to make things happen
00:17 < mikeal> maxogden just saw The Godfather for the first time, you'll be hearing him say that a lot
00:17 < tjholowaychuk> I'm not from van :p
00:17 < tjholowaychuk> haha
00:17 < mikeal> you're near van
00:17 <@maxogden> we have mounties that can make things happen
00:21 < mikeal> just come on, and don't say anything
00:21 < mikeal> :)
00:21 < mikeal> only say something when we misrepresent your opinion entirely
00:21 < mikeal> otherwise i'm just going to make up quotes 
00:21 < mikeal> and pretend that you said them
00:21 < tjholowaychuk> hahahaha
00:22 < mikeal> "did you know tjholowaychuk is anti-semetic. yesterday he told me….. JEWS!"
00:22 < tjholowaychuk> capture this guy for me
00:22 < tjholowaychuk> then i'll come on
00:22 < tjholowaychuk> http://holycuteness.com/wp-content/uploads/2011/03/197504_10150135465283254_80329313253_6614218_3824641_n.jpg
00:23 < mikeal> max has a collection of cute cat photography that he can trade
00:25 < EhevuTov_> tjholowaychuk, is that true? :-)
00:25 < tjholowaychuk> EhevuTov_: boo?
00:26 < mikeal> that's the way to get what you want, slander people!
00:26 <@isaacs> tjholowaychuk: Y U NO TALK ON NODEUP!?
00:26 < tjholowaychuk> Y U NO FEDEX BOO
00:26 <@isaacs> fedex boo?
00:26 < tjholowaychuk> that dog haha
00:26 < tjholowaychuk> his name is boo
00:26 <@isaacs> oh, lol
00:26 < tjholowaychuk> he's probably more famous than everyone in this room combined
00:26 < tjholowaychuk> * 1000
00:27 < tjholowaychuk> up there with maru i think
00:27 <@isaacs> tjholowaychuk: if not more famous, then definitely more cute.
00:27 < mikeal> isaac has a famously fat cat
00:27 <@isaacs> yeah, aristotle is a lot like maru, actually
00:27 <@isaacs> he jumps into boxes even
00:27 < wavez> hello. I'm trying to get less installed. The documentation is a bit too over simplified and seems to assume a lot. I'm getting this error: "Maximum call stack size exceeded". I'm using wamp.
00:27 < tjholowaychuk> I had a blind cat that used some weird clicking sound like radar
00:28 < EhevuTov_> tjholowaychuk, that's called a bat. No wonder your mom didn't let him in the house
00:28 < tjholowaychuk> haha
00:29 < timeturner> https://www.facebook.com/Boo
00:29 < tjholowaychuk> 5 million
00:29 < tjholowaychuk> wow
00:29 < EhevuTov_> tjholowaychuk, it's almost Shabbos. You should be cleaning up.
00:29 < wavez> I'm trying to get lesscss working with wamp. lesscss.org.
00:29 < wavez> I ran npm, it seemed to work fine.
00:30 < wavez> when I load my page, it says "Maximum call stack size exceeded"
00:31 < EhevuTov_> wavez, are you using PHP?
00:31 < wavez> yes
00:31 < EhevuTov_> you need to edit our php.ini to allow more mem usage
00:31 < EhevuTov_> ?and why are you posting about that here? :-P
00:31 < tjholowaychuk> am i the only one that just commits "misc" at the beginning of a project
00:31 < wavez> EhevuTov_, how much should I allow? Where else should I ask?
00:31 < tjholowaychuk> like 100 times
00:32 < wavez> #lesscss is pretty small.
00:32 < timeturner> when are you supposed to make your first commit anyways?
00:32 < EhevuTov_> wavez, probably in #php  or if less has their own room
00:32 < drudge> tjholowaychuk: stuff, stuff, more stuff
00:33 < wavez> EhevuTov_, lesscss uses node.js.
00:33 < EhevuTov_> I need to start including a license in my init commit
00:33 < EhevuTov_> wavez, ah, I don't know then. It sounds like maybe your PHP is trying to serve more data than what you can
00:34 < TooTallNate> tjholowaychuk: "progress…"
00:34 < EhevuTov_> I'm showing my SO the cuteness links and she approves
00:35 < merpnderp> Has anyone found a good framework for abstracting the fact that every module you want to use must be required into your current file? In a .NET project all the classes in your project are available without using them. In JS every single little file has to be required in.
00:35 < EhevuTov_> merpnderp, like cascading your includes?
00:36 < merpnderp> EhevuTov_: I'm not familiar with that concept.
00:37 < EhevuTov_> merpnderp, maybe I'm completely missing what you're saying, but in C you would just make a #include <"includemylibs"> and then in the includemylibs.h place all your other #includes
00:37 < merpnderp> If I'm in visual studio and I need to use a class defined in another file, I just use the class. I don't have to import it.
00:37 < jcrew> merpnderp: you do but the ide takes care of that for you
00:37 < merpnderp> jcrew: Aha, that's what I'm looking for. A node lib that does the same thing :D
00:38 < merpnderp> Although I guess it would be trivial to write a preprocessor to do that for me……but still better if someone else has already done it.
00:38 < jcrew> i've only ever seen 2 folks reference a node IDE but i can't recall the name of it
00:38 < jcrew> and i'm not sure it's built in that way
00:39 < merpnderp> okay, well thanks for helping me figure out what it is I wanted :P
00:39 < twoixter> merpnderp: I don't know for sure, but I think in v8 every file starts a new "context", so you must require all objects.
00:39 < jcrew> a node IDE would just do the require and not show it to you, it still needs to be done^
00:41 < twoixter> And also, it's required for CommonJS compliance: http://www.commonjs.org/specs/modules/1.0/
00:42 < twoixter> Hey! Question. :-) Anyone using a graphics library like GD or Imagemagick with node?
00:45 < johnmdonahue> twoixter: http://aheckmann.github.com/gm/
00:45 < EhevuTov_> twoixter, I think felix uses some graphics libs
00:45 < twoixter> Wow, johnmdonahue, that looks awesome, thanks!
00:47 < mscdex> i think there are actually gm bindings out there
00:48 < twoixter> I tried with node-gd, but it seems outdated. I couldn't get it to install.
00:49 < tjholowaychuk> the downside with the actual bindings
00:49 < tjholowaychuk> AFAIK most of those libs will be sync
00:49 < tjholowaychuk> unless the bindings wrap in the thread pool
00:49 < mscdex> https://github.com/qzaidi/magickwand
00:50 < mscdex> ah nvm, it looks like that binding isn't all there yet maybe. it only has resize and thumbnail methods
00:51 < mscdex> the other bindings are outdated :-/
00:52 < twoixter> Yeah, ok, that's precisely what I'm looking, hehe, to make thumbnails. But I would like to enhance them, not only resizing.
01:13 < tjholowaychuk> anyone have a faux ChildProcess module?
01:21 < tomshreds> Hi
01:21 < TehShrike|Work> no u!
01:22 < tomshreds> oh no, definitively you.
01:22 < TehShrike|Work> 8-|
01:23 < tomshreds> Maybe you know this: is there any community board for github? Where can I ask a github-related question?
01:23 < TehShrike|Work> Whenever I have a github-related question, I just join the github IRC channel
01:23 < TehShrike|Work> I have found it to be well-populated by people who have been kind enough to tell me what I wanted to know
01:23 < tomshreds> Yeah I'm on it but there's nobody at the moment
01:23 < tomshreds> Ok, that's already a good answer hehe
01:24 < TehShrike|Work> I can't help after that - personally, I'd probably just hit up https://github.com/contact if #github and Google failed me
01:24 < tomshreds> Ah nice, I just wrote these hehe.
01:24 < tomshreds> Thanks for the help! ;-)
01:25 < tomshreds> there *
01:25 < TehShrike|Work> mah pleasure!
02:13 < samholmes> How do I make my module have the .on method for event handling?
02:15 < TehShrike|Work> samholmes: you're probably just talking about events? http://nodejs.org/api/events.html
02:15 < TehShrike|Work> modules can generate events
02:15 < TehShrike|Work> Which are what you catch with those emitter.on calls
02:16 < mscdex> samholmes: you can have your object inherit from EventEmitter
02:17 < mscdex> samholmes: require('util').inherits(MyObject, require('events').EventEmitter); then on instances of MyObject you can call .emit() and .on()
02:17 < samholmes> Cool. Thanks.
02:18 < TehShrike|Work> You know, I've never used .inherits
02:18 < TehShrike|Work> What are some cases where I should be using it?
02:18 < TehShrike|Work> What's the general case that I should be watching for
02:18 < tjholowaychuk> TehShrike|Work if you avoid instanceof almost none
02:18 < tjholowaychuk> which is useless anyway
02:18 < samholmes> Does inherits set the prototype of MyObject, or does it just extend it?
02:19 < TehShrike|Work> tjholowaychuk: sweet, then I'm golden.  Thanks!
02:20 < samholmes> Oh..it's a constructor.
02:22 < samholmes> How do I work on a node_module inside of my project. I tried installing a dependency using npm, but it ended up installing it in the ./node_modules directory of my project rather than ./node_modules/mypackage/node_modules
02:22 <@deoxxa> so if anyone's using mason, i just did up https://github.com/deoxxa/fknsrsbiz-buildpack-nodejs with some fundamental changes to the heroku buildpack. now it supports multiple architectures and non-s3 urls.
02:24 <@deoxxa> (it'll be in various states of working and broken for the rest of today, i'm still working on it)
02:27 < mscdex> samholmes: does your project depend on the same module?
02:28 < samholmes> mscdex: I'm developing a node_module within my project, eventually I will publish the node_module to npm. My project will depend on the module I'm creating, and the module I'm creating is going to depend on a specific version of another module, mysql v0.9
02:30 <@deoxxa> samholmes: `npm help link'
02:31 <@deoxxa> ok, awesome, this buildpack works on both i686 and x86_64 now
02:32 < samholmes> deoxxa: I want to develop the module independently from the project that will be depending on the module.
02:33 <@deoxxa> samholmes: yep, npm link will help you there
02:34 < samholmes> I created the package.json file then just did npm install
02:34 < samholmes> it installed the dependency I listed in the .json
02:37 < SomeoneWeird> go into the dir and type npm link .
03:29 < _Tristan> Hallo. Anybody know of a package that will allow me to parse and stringify yaml?
03:37 < _Tristan> I went to this page https://github.com/joyent/node/wiki/Modules#wiki-parsers-yaml and nothing stringifies
03:40 < mscdex> _Tristan: npm search yaml
03:40 < gkatsev> _Tristan: this looks to have a dump function https://github.com/jiem/node-pyyaml
03:41 < _Tristan> "pyyaml.py" - python? Is that even legal?
03:41 < mscdex> lol
03:41 < _Tristan> and most importantly, will it introduce a new dependency to my application... namely, python?
03:41 < mscdex> yeah it looks like it
03:41 < gkatsev> lol, idk
03:42 < _Tristan> I'd rather write my config files in json.
03:42 < gkatsev> http://npmdoc.nodejitsu.com/package/json2yaml.html
03:42 < gkatsev> json2yaml
03:43 < _Tristan> last updated 179 days ago - problem?
03:43 < gkatsev> https://github.com/saschagehlich/npm-yaml
03:43 < gkatsev> npm-yaml depends on json2yaml
03:43 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm install | npm stats | npm help | npm node | npm credits
03:43 < gkatsev> _Tristan: probably not
03:43 < gkatsev> oh, maybe npm-yaml isn't what you want
03:44 < gkatsev> _Tristan: json2yaml is probably fine, even if not updated for a while
03:44 < _Tristan> huh, it's 93 lines long...
03:46 < rvagg1> npm search yaml
03:46 < npmbro> rvagg1: Please see http://eirikb.github.com/nipster/#yaml
03:46 < rvagg1> npm stats js-yaml
03:46 < npmbro> rvagg1: Stats for js-yaml: Latest v1.0.1 published 21 days ago, last pushed to GitHub 20 days ago, 14 forks, 106 watchers, 8 tweets
03:46 < mscdex> json all the way!
03:47 < rvagg1> agreed...
03:47 < rvagg1> npm stats yamlparser
03:47 < npmbro> rvagg1: Stats for yamlparser: Latest v0.0.2 published a year ago, last pushed to GitHub 6 months ago, 4 forks, 8 watchers, 0 tweets
03:48 < _Tristan> I like json, but my users will have no idea how to edit it
03:48 < rvagg1> can you just go with key=value format?
03:48 < _Tristan> and I don't want to put in functionality to edit it
03:49 < _Tristan> 'cause it's more than keys and values
03:49 < mscdex> .ini ?
03:49 < _Tristan> again, the data is more complicated than that
03:53 < timeturn> ops plz
03:57 < gnarf> why does like half the room have ops anyway?
03:57 <@benvie> we're all very important people
03:57 < gnarf> obviously
03:58 <@benvie> actually I liked what someone said last night
03:58 <@benvie> ops in #node.js is like gun ownership in switzerland
03:58 < _Tristan> op plz
03:58 <@_Tristan> ops plz
03:59 <@_Tristan> huh
03:59 <@_Tristan> opsies plz
03:59 <@benvie> lol
03:59 <@_Tristan> opx plz
03:59 <@benvie> there's op bots among us, waiting for misbehavior
03:59 <@benvie> it is they who hold the real power, like in terminator
04:04 < gkatsev> gnarf: because ryah went crazy sometime last year. He has since gone crazy several times. This time around, he made someone else go crazy as well and it ended up sticking.
04:05 < gnarf> heh
04:06 < gkatsev> and because the node community is awesome, there is no mayhem
04:06 < gkatsev> imagine what would happen in a place like ##c if everyone got ops
04:06 <@benvie> and then people wrote node modules for it
04:07 <@benvie> and now it's all automated
04:08 < gnarf> shrug - @ isn't useful for much anyway other than silencing bad people
04:08 < gnarf> gkatsev: #jquery would be chaos with a +ooooooo ;)
04:09 < gkatsev> heh, yeah
04:10 < gkatsev> someone needs to write a shell replacement in node
04:17 < rioter> What is wrong with the current shells?
04:19 < SnakePlissken> Have a question....Seeing conflicting responses on the net about simply routing .css and .js files currently what is the best practice way of doing this?
04:22 < gkatsev> rioter: would be fun to have a node based shell.
04:30 < mscdex> gkatsev: someone should write one, then they could call it a repl!
04:30 < mscdex> ;-)
04:30 < gkatsev> heh
04:31 < gkatsev> mscdex: but I mean so it could be possible to do chsh /bin/node-shell or w/e
04:31 < gkatsev> there's already shelljs which implements a lot of the shelly functions
05:32 < Muimi> Is there anything similar to PHP's mysql_fetch_array() or at least mysql_fetch_array() for node.js?
05:40 < jlank> how do you run a quick node command from the CLI? I read somewhere you could do something like `node -e "num1 * num2"` 
05:50 < mscdex> jlank: node --help
05:50 < mscdex> Muimi: no, because mysql drivers for node are async
06:06 < Muimi> mscdex: What does that mean?
06:10 < mscdex> Muimi: well, with the 'mysql' npm module, you can either stream rows or have them all gathered up at once
06:11 < mscdex> and each row (afaik) always has columns as key=>value
06:13 < Muimi> oh thanks.
06:14 < Muimi> So are you saying I need to get the entire database in an array or something in order to access its rows?
06:16 < timoxley> Muimi no. you execute queries to get rows back, like normal
06:17 < timoxley> Muimi otherwise what's the point of having a db? you might as well have a file
06:23 < Muimi> Do you have any examples of how the database is accessed 
06:24 < Muimi> for similar purposes as one might use mysql_fetch_array()
06:33 < Muimi> omg
06:33 < mscdex> Muimi: https://github.com/felixge/node-mysql
06:33 < mscdex> Muimi: if you do `npm install mysql`, that is the module you get ^
07:06 < Sam4242> Hi guys… Does anyone know of a decent JSON or XML English dictionary?
07:07 < Sam4242> I just want 'words' and 'parts of speech'
07:08 < mscdex> what for?
07:08 < mscdex> spell check?
07:09 <@deoxxa> smell check
07:09 < Sam4242> I want to divide sentences into parts of speech
07:09 <@deoxxa> that's... very complicated
07:10 < Sam4242> Agreed
07:10 <@deoxxa> like, so complicated that it's not actually been done
07:10 <@deoxxa> ever
07:10 <@deoxxa> by anyone
07:10 < Sam4242> but I would like to start with something, rather than from scratch
07:10 < Sam4242> Technically, IBM's Watson used parts of speech for question analysis
07:10 <@deoxxa> yes, but it wasn't actually accurate
07:11 < thewanderer1> well, there are word lists available on the Web (not JSON, you have to do some parsing first), but if you want to understand sentences' meaning - that's hardly possible and will fail in half of the cases :P
07:31 < dr0id> woah, so many ops
07:31 < dr0id> SubStack: hi, there?
07:33 <@SubStack> dr0id: beep boop
07:34 < dr0id> SubStack: do you make the cartoons that I see on your site and other open source projects?
07:35 <@SubStack> dr0id: yes
07:36 <@SubStack> why would I not do them myself?
07:37 < Muimi> so mscdex, I'll look through that source code and see what I can make of it.  Thank you...
07:38 < Muimi> I hope I can read it from a mobile.
07:44 < dr0id> I wish I could make those too, what tools do you use ?
09:45 < mscdex> node.js rules!
09:47 <@SubStack> fact
09:51 < medice> what are they?
09:53 < rvagg1> embrace the async
09:53 < mscdex> medice: first rule of node.js: spread the word about node.js!
09:54 < medice> so it's not like fight club?
09:54 < mscdex> exactly!
09:54 < rvagg1> it turns into fight club when you start talking about semicolons
09:54 < mscdex> the internet is serious business
10:15 < adamramadhan> hello how can i get something like meta.'rss:lastbuilddate' ? the problem is meta.rsslast:builddate doesnt work
10:17 < rvagg1> meta['rss:lastbuilddate']
10:19 < adamramadhan> rvagg1 : its an object contains something like  'rss:lastbuilddate': { '@': {}, '#': 'Sat, 28 Jul 2012 09:16:25 GMT' },
10:19 < adamramadhan> can we do that?
10:19 < adamramadhan> returns an [object Object]
10:21 < adamramadhan> ahh i see
10:21 <@deoxxa> it's usually a pretty terrible idea to use weird characters in object keys
10:21 < stagas> adamramadhan: your questions read: "I don't know shit about javascript, solve my problem for me"
10:22 < adamramadhan> no im a bit confused about {} objects an [] lists
10:22 <@deoxxa> ok, a "[]" is an array, which is an object with some additional accessor functions
10:22 <@deoxxa> that's it
10:23 <@deoxxa> there's... nothing more to it
10:23 <@deoxxa> i like it that javascript is so uncomplicated
10:26 < adamramadhan> i thought that we cant acsess objects useing the [] instead of dots . missed it somehow.
10:29 < vandenoever> how can i get my node http proxy to honor the keep-alive header?
10:31 < vandenoever> the incoming request all have different remotePort values, so i assume keep-alive is not enabled
11:07 < Senj> Is it ok If I supply "preinstalled" version of a node.js server in an archive with the application js to the end users? 
11:07 < Senj> The is for a free as in beer open source project 
11:07 < Senj> I want to make the whole package as idiot proof as possible 
11:08 < RLa> check license, you might need to print out copyright notices
11:09 < Senj> full acknowlegment will be givven of course
11:09 < Senj> I just want to sidestep the installer bit 
11:12 < RLa> for end user a good installer could make things easier
11:13 < dfex> hey guys - wondering if someone could help me out
11:13 < dfex> can anyone see why:
11:14 < dfex> var myhostname = url.parse(request.url).hostname;
11:14 < dfex> would return undefined?
11:14 < RLa> too bad bundles only work on osx, others need hardcore packaging
11:14 < RLa> what's the url?
11:14 < dfex> in the same function var pathname = url.parse(request.url).pathname; returns the correct path
11:14 < Senj> RLa I have experiance in automating installations 
11:14 < dfex> URL is http://localhost:8888
11:15 < RLa> if it's path only (/something) then it had no hostname
11:15 < dfex> but .hostname is supposed to return the host portion
11:15 < RLa> so it should return localhost for you?
11:16 < dfex> I get the same result if I hit http://lojack.local:8888
11:16 < dfex> I would expect it to return "lojack.local"
11:16 < dfex> but instead I get undefined
11:16 < RLa> > url.parse('http://localhost:8888').hostname;
11:16 < RLa> 'localhost'
11:16 < RLa> works well here
11:17 < RLa> same for lojack.local
11:18 < dfex> hmm that works for me too..
11:18 < mscdex> cosmic rays be jacking your bits yo
11:19 < RLa> what 'url' is, the built-in node module?
11:19 < RLa> or something else?
11:20 < dfex> yeah, the built-in one
11:20 < RLa> and what node version
11:20 < dfex> interestingly enough - request.url only returns the URI portion of the string too
11:20 < dfex> 0.8.4
11:21 < dfex> just upgraded from 0.6.18 which was doing the same thing
11:21 < RLa> hm, 0.7.9 here
11:23 < dfex> so if you run up a quick http server, does request.url return the host portion of the URL?
11:23 < RLa> a server, yes
11:23 < RLa> no,
11:24 < RLa> not host portion but path only
11:24 < RLa> check request.host
11:25 < RLa> it should be Host: header
11:25 < dfex> yeah tried that too
11:25 < dfex> and .href also gives undefined
11:25 < RLa> but it doesn't work?
11:25 < RLa> .href does not make sense
11:26 < RLa> try request.headers.host
11:27 < dfex> okay request.headers.host gives the correct response
11:27 < dfex> but is that technically the same thing?
11:28 < RLa> do you know how http 1.1 works?
11:28 < dfex> yes, but the host line and the URL are two different fields aren't they?
11:29 < RLa> the browser sends only the path in request
11:29 < dfex> okay
11:29 < RLa> GET /something
11:29 < dfex> true. gotcha
11:29 < RLa> Host: header is used for sending the domain name
11:30 < RLa> http 1.0 had no such header
11:30 < RLa> with Host: header, multiple domains can be served from the same ip
11:30 < dfex> thanks - still unsure why url.host/hostname/href isn't working though
11:31 < dfex> but url.pathname is
11:31 < RLa> because no hostname is included in request.url!!!
11:31 < RLa> put a console.log(request.url) there
11:32 < RLa> of course it might have made more sense to use GET host/path in HTTP spec
11:33 < RLa> but well, nothing is perfect
11:39 < dfex> So when I browse to http://lojack.local:8888/getsomething here is what I get:
11:39 < dfex> request.url = /getsomething
11:39 < dfex> requst.headers.host = lojack.local:8888
11:39 < dfex> url.parse(request.url).pathname = /getsomething
11:39 < dfex> url.parse(request.url).href = /getsomething
11:39 < dfex> url.parse(request.url).host = undefined
11:40 < dfex> so based on what you're saying, the last .host will never be populated 
11:40 < dfex> the API docs also suggest that .href should contain the host as well
11:41 < RLa> wtf
11:41 < RLa> YOU CANNOT GET host portion OF /getsomething
11:41 < RLa> because there is none
11:43 < dfex> oh man..  sorry, I see now
11:43 < dfex> *slap*
11:43 < dfex> thanks - apologies for any keyboards smashed in frustration ;)
11:45 < RLa> haha :)
11:46 < dfex> promise to go and take a long hard look at myself in the mirror :P
11:48 < Spion> although, it would make sense for it to be request.path
11:49 < Spion> because of the name request.url looks parseable by url.parse 
11:50 < Spion> "/getsomething" is most definitely not an URL (uniform resource locator) in the strict sense
11:53 < RLa> i doubt request.url could be changed
11:53 < RLa> too many frameworks use it
11:53 < RLa> as it is
11:53 < Spion> thats true.
12:09 <@tk> ugh, is there an easy way to debug segfaults on osx w/node?
12:14 <@CIA-93> node: Ben Noordhuis v0.8 * rd559bed / src/ev-emul.h : node: use variadic functions in ev-emul.h - http://git.io/_ODXZg
12:26 < xocel> rofl just watched this http://www.youtube.com/watch?v=1e1zzna-dNw&feature=endscreen&NR=1
12:26 < xocel> why do people insist to talk about things they clearly know nothing about? :P
12:28 < coderarity> xocel, lol
12:29 < coderarity> xocel, he's really annoying sounding too
12:30 < xocel> maybe hes just trolling lol, surely hes not for real
12:32 < xocel> almost had me in tears when he complains about node not running inside apache.. really seems to miss the point of node. 
12:32 <@deoxxa> i like the way he says "slow"
12:32 <@deoxxa> sssslllllllloooooooowwwwwwwwwwwww
12:33 <@deoxxa> "node.js is designed to never have to write to the hard drive"
12:33 <@deoxxa> heh
12:33 < standoo> really?
12:34 <@deoxxa> lol no
12:34 <@deoxxa> this guy's just retarded
12:38 < xocel> he seems to have no concept of async vs sync. Really confused as to why he feels his opinion matters :/
12:44 <@deoxxa> are there any libraries available for generating names, like heroku does when you create a new application?
12:49 < rvagg> names? substack has something for generating unique identifiers I think, if that's what you need
12:50 <@SubStack> deoxxa: dictionary names, random hex strings?
12:50 <@SubStack> what category of name?
12:50 < standoo> get a list of baby names?
12:51 <@deoxxa> SubStack: they seem to be an adverb-noun thing
12:52 <@deoxxa> i can do it up on my own, but i figured if there was something already i should use it
13:10 < mscdex> tk: gdb?
13:50 < diverdude> Are there any MySQL ORM available for node.js?
13:51 < timoxley> diverdude `npm search mysql orm`
13:52 < RLa> there is sequelize
14:00 < mscdex> diverdude: there are more mysql orm modules than you can shake a stick at
14:00 < diverdude> hmm so which one to choose
14:01 < diverdude> basically i just need simple access with automatic parameter check etc.
14:01 < diverdude> would be awesome if i can build models from existing db scheme
14:03 < mscdex> diverdude: as RLa suggested, sequelize is one of the more popular ones i think
14:04 < diverdude> mscdex: yeah but it seems that that one creates DB from models and not models from DB
14:05 <@cainus> pretty tough to create models from any old db
14:06 < diverdude> cainus: why?
14:06 < diverdude> cainus: its not an old db. its db which conforms with cakephp ORM standards
14:07 <@cainus> because orms rely on specific fields with specific name conventions
14:07 <@cainus> well I don't know if cakephp orm standards are a recognized global standard ;)
14:08 < mscdex> oh jeez, cakephp...
14:09 <@cainus> obviously any db schema that uses the same conventions as what sequalize will expect will be fine... maybe you just need to do some minor alters
14:09 < Niloc> oh jeez, php
14:09 < RLa> how heavyweight sequelize models are?
14:10 < mscdex> 404 Breakfast Not Found
14:10 < RLa> i remember j2ee entities taking at least 4 files (some of them xml) per entity/table
14:13 <@cainus> that's probably more related to j2ee than orm... even activerecord is lighter than that
14:18 < diverdude> anybody have any experience with node-db? is it active or a dead project?
14:19 < diverdude> mscdex: nothing wrong with cakephp and php
14:19  * Niloc facepalms
14:20 <@cainus> node-dbi?  looks super new actually
14:21 < diverdude> cainus: how can you tell?
14:21 <@cainus> check the github repo
14:21  * Niloc facepalms some more
14:21 < diverdude> Niloc: dont hurt your head
14:21 <@cainus> started april 15
14:21 < Niloc> That's up to you, it seems :)
14:21 < mscdex> diverdude: plenty wrong with cakephp
14:22 < diverdude> mscdex: such as?
14:22 < Niloc> Such as… being a PHP framework!
14:22  * Niloc hides
14:22 < diverdude> hahahhahahah
14:23 < diverdude> i was actually talking about this node-db http://nodejsdb.org/
14:25 < diverdude> mscdex: sooo i dont see so many arguments lining up
14:25 < diverdude> mscdex: are you just squirting out bullocks?
14:26 <@cainus> diverdude: you can get the npm package name from the install instructions... then find that one search.npmjs.org ... then get the github repo address ... then check how active it is
14:26 < Niloc> So ignorant :)
14:27 < Niloc> And I think you mean 'bollocks'.
14:28 < Niloc> Nothing wrong with PHP, nooooo http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/
14:28 <@cainus> Niloc: sounds like you think javascript doesn't have any warts either
14:28 < Niloc> cainus: how did you figure that?
14:28 < diverdude> hmm pretty dead project :/ https://github.com/mariano/node-db-mysql  3 months ago was last update
14:29 <@cainus> because people in glass houses usually don't throw stones
14:30  * Niloc rolls his eyes
14:32 <@cainus> if you like node.js, the best way to support is to be friendly to people that are new to it
14:32 < mickhansen> diverdude, we use sequelize in our project - i recommend it
14:33 < Niloc> Oh, but diverdude and me go waaaay back, cainus, in other channels. He's always been a bit of a tool. :)
14:33 < diverdude> Niloc: what are you talking about?
14:34 < Niloc> Well, after claiming that there is nothing wrong with PHP, I don't think I can say *bit* of a tool any longer ;)
14:34 < diverdude> Niloc: what channels are you talking about. i never talked to you before
14:34 < Niloc> diverdude: different name.
14:34 < diverdude> ?
14:34 < Niloc> Whois me to find out.
14:38 < mscdex> diverdude: sorry, breakfast is a priority this morning :)
14:40 < mscdex> diverdude: the last cakephp project i had to work on required an installer, and trying to create something like that under cakephp was a huge headache
14:41 < diverdude> mscdex: ehhh sounds like you have misunderstood some things :) What installer are you talking about
14:41 < mscdex> diverdude: there's lots of other problems i've had too before that project, but that was a long while ago
14:41 < mscdex> diverdude: writing an installer for a cakephp app
14:43 < mscdex> i had to jump through all kinds of hoops to get everything working properly
14:56 <@CIA-93> libuv: Ben Noordhuis v0.8 * r4fe369b / test/benchmark-sizes.c : test: add uv_fs_event_t to benchmark-sizes.c - http://git.io/St_ndg
14:56 <@CIA-93> libuv: Ben Noordhuis v0.8 * rb5b8ead / (test/test-fs-event.c test/test-list.h): test: add failing fs_event test - http://git.io/D_AKYA
14:56 <@CIA-93> libuv: Ben Noordhuis v0.8 * rec76a42 / test/benchmark-sizes.c : test: add uv_loop_t to benchmark-sizes.c - http://git.io/3Dtq2w
14:56 <@CIA-93> libuv: Ben Noordhuis v0.8 * r4fe1916 / (3 files in 3 dirs): linux: fix 'two watchers, one path' segfault - http://git.io/o1scSQ
14:56 <@CIA-93> node: Ben Noordhuis v0.8 * r879d329 / (7 files in 4 dirs): deps: upgrade libuv to 4fe1916 - http://git.io/Sjj9vg
15:02 < diverdude> mscdex: hmm i dont understand that. i think its running just find
15:02 < diverdude> fine
15:31 < ponzicoder> Is a 'request' event triggered when a browser client goes to localhost:8080?
15:31 < coderarity> yeah, it should be
15:32 < ponzicoder> I know this is really basic stuff but I'm trying to understand where the request in the following is triggered http.createServer(function(request,response)
15:39 < ponzicoder> coderarity: I guess more specifically when I call http.createServer(function(request, response) am I saying to node I'm sending a request to do something and when your ready execute the code in response?
15:40 < coderarity> ponzicoder, i'm not sure i understand… the browser tells sends a request to the node server, and the node server executes the function, and then that function should return a response to the browser
15:40 < coderarity> s/tells//
15:42 < ponzicoder> coderarity: Understood…I think my confusion is that I'm just starting to understand asynchronous programming in java, but that helps.
15:42 < coderarity> javascript*
15:42 < ponzicoder> coderarity: heh yeah
15:42 < coderarity> ponzicoder, maybe you should read up a bit on http
15:43 < ponzicoder> coderarity: the http module?
15:43 < coderarity> the HTTP protocol
15:44 < Hans_Zero> Hi, I already asked about this but I'm getting the exact same problem with more packages (then 1) now and I'm thinking maybe the problem is somewhere else...  
15:44 < Hans_Zero> many packages I try to install with npm give the following error: Traceback (most recent call last):  File "/usr/local/bin/node-waf", line 14, in <module>     import Scripting ImportError: No module named Scripting
15:44 < coderarity> Hans_Zero, what's your `python --version`?
15:45 < Hans_Zero> coderarity let me check
15:45 < Hans_Zero> 2.7.3
15:45 < coderarity> that's fine
15:47 < Hans_Zero> coderarity any more ideas?
15:47 < ponzicoder> coderarity: Your suggestion to understand the HTTP protocol gave me an idea to look at the Network tool in chrome as I was requesting the page...
15:48 < coderarity> Hans_Zero, which package? maybe just use the latest version
15:48 < Hans_Zero> I'm running fedora... and used n to switch to the latest stable which is 8.4 I think
15:48 < coderarity> Hans_Zero, the latest version of the package that you're trying to install, I mean
15:50 < ponzicoder> coderarity: and so is the simple act of of putting 'request' in http.createServer(function(request, response) "register" a callback for response?
15:50 < coderarity> ponzicoder, sounds right
15:51 < Hans_Zero> coredarity, node-stringprep and node-expat (2 packages that show this error) are actually only dependencies of other packages and therefore I thought npm would just deploy the most recent available packages
15:54 < ponzicoder> coderarity: Many thanks
15:54 < fris> can a node app run in apache or does it have to start its own server via npm
15:55 < coderarity> Hans_Zero, packages you depend on have versions of packages they depend on
15:55 < coderarity> Hans_Zero, I'm not really sure what's happening there, maybe your node-waf is messed up
15:55 < Hans_Zero> coderarity, ok so I should try to install the package manually choosing the latest version.... ... be back shortly
15:56 < Hans_Zero> yeah I thought so too but I lack the understanding of node-waf to check for sure
15:59 < Hans_Zero> okay manually installing the latest version is not helping but there is a pull request for node-gyp on github I'll try to use that (which won't solve my node-waf problem but will install the package hopefully)
16:05 < coderarity> Hans_Zero, node-gyp is goo :D
16:05 < Hans_Zero> yes
16:06 < Hans_Zero> coderarity first time self compiling a node package though
16:06 < coderarity> good* not goo
16:07 < coderarity> node-goo is goo
16:08 < Hans_Zero> ok I think my node.js / npm is set up incorrectly node-gyp is trying to download some 0.6.18 stuff
16:08 < Hans_Zero> porbably n is to blame
16:09 < Hans_Zero> probably**
16:11 < Hans_Zero> damnit
16:11 < Hans_Zero> it actually is the fault of the n version manager
16:23 <@teadict> When's 0.9 gonna be tagged as stable?
16:24 <@wao> I don't think so it will be
16:24 < Hans_Zero> it'll never be
16:24 < veenified> only even releases are stable
16:24 <@wao> it's unstable branch, every odd is unstable
16:24 < Hans_Zero> even numbers stable odd numbers unstable
16:24 <@wao> :)
16:25 <@teadict> What the crap am I installing it then? Going back to 0.8
16:26 <@Hans_Zero> if you use n then use "n stable" and you should be fine
16:26 <@teadict> It's not like it brought major things either
16:27 <@teadict> YOU'RE NOT MY MOM
16:27 <@teadict> heh
16:27 <@teadict> Why only even are stable? Does everyone have OCD in node?
16:28 < veenified> follows unix versioning
16:28 <@Hans_Zero> because it's a commonly accepted versioning scheme
16:28 <@teadict> Oh
16:28 <@teadict> I didn't know that about even numbers...
16:28 <@teadict> Goot to know
16:29 < veenified> not everything follows it, but it is a sort of convention that most dev communities are adobting
16:29 <@teadict> HOLD IT
16:29 < veenified> *adopting
16:29 <@teadict> How did you do that downwars p?
16:29 <@Hans_Zero> it's called a B
16:29 <@teadict> upwards, now it's downwards!
16:30 < veenified> i haven't had my coffee yet...
16:30 <@Hans_Zero> P=p B=b
16:30 <@teadict> I'm too lazy, otherwise I'd paste the bash.org link
16:30 <@Hans_Zero> yeah
16:31 < veenified> i could have said abducting, that would be a more funny mistake
16:31 <@Hans_Zero> I know that one
16:31 <@teadict> tests take time 
16:31 < bluesmoon> to be more specific, it's even minor versions that are stable and odd minor versions that are unstable
16:31 < diverdude> I am trying to do this config = JSON.parse(fs.readFileSync(APP_PATH+DS+'Config'+DS+'commoncfg.json', 'ascii')), in the top of my node.js file, but i get this error: Error: ENOENT, no such file or directory 'NaNConfigundefinedcommoncfg.json' what am I missing?
16:31 < bluesmoon> major versions do not specify stability
16:31 < albertosh> Hello! Have anyone done real-time subscriptions on instagram?? I have a quick question
16:32 <@teadict> no errors woot
16:32 < bluesmoon> so linux 2.0, 2.2, 2.4, 2.6 were stable, 2.1, 2.3, 2.5 unstable
16:32 < veenified> bluesmoon: right, what you said
16:32 <@teadict> Question: How is the ./configure so fast now?
16:32 <@teadict> Also, it's another output...
16:32 <@teadict> It's not the basic one
16:33 < bluesmoon> diverdude: you can just do json=require(APP_PATH+DS+'Config'+DS+'commoncfg.json')
16:33 <@teadict> make takes no time either
16:33 < bluesmoon> it's much simpler :)
16:33 <@teadict> make install takes no time!
16:33 < bluesmoon> but of course make sure APP_PATH+DS+'Config'+DS+'commoncfg.json' actually exists
16:33 <@teadict> Oh... it's because I run the tests, isn't it?
16:33 <@teadict> It's all cached up or something
16:34 < bluesmoon> also, you should probably use path.join() instead of concatenating
16:34 <@teadict> Either that or magic
16:34 < diverdude> bluesmoon: mmm no i dont think so...i think requires me to export or something like that
16:34 < diverdude> bluesmoon: it does exist, but i get an error saying it cannot find the module
16:34 < bluesmoon> diverdude: not if you require json
16:35 < bluesmoon> you need to export if you're requiring a .js file
16:35 < bluesmoon> but if you require a .json file, it just returns the json object
16:35 < diverdude> bluesmoon: but i get cannot find module
16:35 <@Hans_Zero> diverdude if it'S the first thing you do in your javascript file how should it know what the variables are? you got an undefined in there
16:36 <@Hans_Zero> diverdude  'NaNConfigundefinedcommoncfg.json' is probably not where you want to point
16:36 < bluesmoon> diverdude: console.log(APP_PATH+DS+'Config'+DS+'commoncfg.json')
16:36 < bluesmoon> make sure it actually is what you think it should be
16:38 <@Hans_Zero> damnit I just installed everything new and it still has this stupid ImportError: No module named Scripting error :(
16:39 <@teadict> npm list WARNs about not README.md in my app@0.0.1...
16:39 < npmbro> teadict: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20list%20WARNs%20about%20not%20README
16:39 <@teadict> That link didn't help bro
16:40 < coderarity> teadict, lol you need to have a readme that's like 4 lines long
16:40 <@teadict> There, I commented my app name and version from my package.json :P
16:41 <@teadict> What's the readme for?
16:41 < coderarity> idk, it's just a bug
16:41 <@teadict> Is what I want to know, not complainning about it
16:41 <@teadict> Oh
16:41 <@teadict> Then fuck it
16:44 <@teadict> coderarity: I can ignore the `WARN package.json jade@0.26.3 No README.md file found!` WARNs then?
16:44 < coderarity> teadict, no
16:44 < coderarity> teadict, it's a bug, but you still have to fix it, or it won't work :D
16:44 <@teadict> Should I create those READMEs myself in their packages?
16:44 <@teadict> I want my app to work, not every 3rd party module to be tip top
16:45 <@Hans_Zero> if it is your own app that you wrote by yourself yes you should write the readme yourself
16:45 < marekweb> Reading the source of Express has been pretty enlightening
16:45 <@teadict> Hans_Zero: It says jade right there, it's not mine
16:45 <@teadict> I'm ignoring them
16:46 <@teadict> They'll go away when the authors create their READMEs
16:46 <@teadict> And I update
16:46 < diverdude> bluesmoon: thx a lot
16:59 <@Hans_Zero> ok I just erased everything related to npm n and node from my disc downloaded the source and build it myself
16:59 <@Hans_Zero> now if I try to install anything with npm it says it can't find the node path
16:59 <@Hans_Zero> how do I set my node path correctly?
17:02 < diverdude> hmmm if i put mysqlclient = mysql.createClient({}) in the top of my file and later in a socket.io connection handler do mysqlclient.query() it does not work, however if i do the mysqlclient = mysql.createClient({}) down in the connection handler just above my query it works fine. Why cant it use the global connection object when it can use the local?
17:04 < diverdude> any1?
17:05 <@Hans_Zero> maybe you did something inbetween that needs to be done
17:05 <@Hans_Zero> I g2g bye guys
17:07 <@teadict> `path.existsSync is now called `fs.existsSync`.`
17:07 <@teadict> I want it gone!
17:07 <@teadict> I bet that's because Express is using it
17:08 < diverdude> teadict: ?
17:09 <@cainus> anyone use sinon with mocha?  Can I mock out a require()?
17:11 < timoxley> cainus you want https://github.com/mfncooper/mockery
17:12 <@teadict> diverdude: That notice appears everytime I shoot my express app now that I'm on 0.8.4 (was on 0.6.17)
17:12 <@cainus> timoxley: yep I do.  thanks
17:13 < timoxley> teadict what notice
17:13 < timoxley> ?
17:13 <@teadict> `path.existsSync is now called `fs.existsSync`.`
17:15 < timoxley> what version of express?
17:15 < timoxley> teadict 
17:15 < diverdude> if i do mysqlclient = mysql.createClient({}) in the top of my node.js file, is the connection then shared between all users?
17:15 <@teadict> 2.5.11
17:15 <@teadict> timoxley: ^
17:16 <@teadict> timoxley: I don't really mind but y'know, it's Saturday :P
17:16 <@teadict> I have time
17:16 < bwen> teadict: not on saturdays?
17:18 < timoxley> teadict grep in express 2.5.11 + it's deps doesn't show any existsSync at all
17:18 < timoxley> probably some other module
17:18 < timoxley> grep your app
17:23 <@teadict> timoxley: Oh thanks for bothering :) I will
17:23 <@teadict> bwen: What?
17:24 < bwen> teadict: nm :P
17:25 < timoxley> anyone know a commandline tool that takes a file that exports a http-server/express app, and then boots it on the port specified on commandline?
17:28 <@teadict> timoxley: The one you'll make yourself because there's probably not one out there?
17:28 <@teadict> LOLAMIRITE
17:29 < timoxley> tool would pretty much look like: require(process.argv[2]).listen(process.argv[3])
17:35 < dominictarr> timoxley, looks like you just wrote it, any how.
17:44 < timoxley> dominictarr right, spent more time searching npm than it took me to solve it myself.
17:46 <@nlf> i find that's the case fairly often
18:03 < coderarity> timoxley, google + github are better than npm search sometimes
18:03 < coderarity> most people use github :P
18:05 < tetsu> what's the hot NodeJS mvc framework these days?
18:22 < diverdude> I am doing require('mysql'), to get the node-mysql module loaded. I then in the beginning of my node.js file call mysqlclient = mysql.createClient() to connect. In my socket.io connect event i then do mysqlclient = mysql.query() which for some reason is completely ignored. If i do console.log(mysqlclient) in the connect event it seems that the connection is very much allive...so why is the query being ignored?
18:25 < timoxley> diverdude passing a callback to the query?
18:25 < diverdude> timoxley: what do you mean? Moment ill show you the code
18:28 < diverdude> timoxley: this is my code: http://bin.cakephp.org/view/1528316166
18:29 < timoxley> diverdude nothing obvious, sorry I can't help
18:29 < diverdude> arg
18:29 < owen1> what does res.setHeader('X-Ratelimit', n) means?
18:30 < diverdude> owen1:  i did not write that
18:30 < jhsto> guys, any idea how to use jquery on server side, without dom?
18:30 < jhsto> i kind of need to use the wrappers to handle some strings
18:30  * Niloc facepalms
18:31 < Niloc> You need a DOM library without the DOM part?
18:31 < timoxley> ^
18:31 < jhsto> y
18:31 < Niloc> here you go:
18:31 < owen1> diverdude: i didn't talk about your code (:
18:31 < jhsto> or any alternative
18:31 < owen1> i saw it somewhere
18:31 < jhsto> but i kind of dont want to deal with dozen splits and splices
18:32 < Niloc> Huh?
18:32 < jhsto> niloc, were you talking to me?
18:32 < Niloc> Yes dear
18:32 < jhsto> Oh thats cool.
18:33 < Zr40> after my code returns, node doesn't exit. How do I find out what's keeping it alive?
18:33 < Niloc> jhsto: without using the word 'jQuery', explain what exactly it is that you need that vanilla JS makes too hard?
18:35 < diverdude> any1?
18:36 < jhsto> I have a HTML page of a forum, which I need to extract post titles, which are held in <a class='forumtitle'>. Since I don't know how to select all arrays when split is used, I thought if there is something like jquery available - so that I could use $('a.forumtitle').each to handle all of the titles at the same.
18:37 < jhsto> I need a HTML wrapper.
18:38 < jhsto> Niloc, do you come up with any npms?
18:39 < Niloc> Um…
18:40 < Niloc> What is wrong with a good old `for` loop, or `forEach`?
18:40 < jhsto> I could not come up with any, so I thought to make one.
18:41 < timoxley> Zr40 just do a process.exit()
18:41 < owen1> middleware - Mikeal mentioned it's not necessary in node. anyone know if it's true and can elaborate?
18:42 < owen1> i know it's a concept taken from other languaneg (rack in ruby, wsgi in python)
18:42 < mikeal> rack, wsgi and cgi are all connectors
18:42 < mikeal> they define a spec for an interface between the application layer and the server
18:42 < mikeal> so that you can swap out the server without changing the application
18:42 < owen1> true
18:43 < mikeal> this is totally unnecessary in nod
18:43 < mikeal> er node
18:43 < mikeal> you will never swap the server
18:43 < mikeal> and the interface for the server is defined by node alreayd
18:43 < owen1> server = rails or sinatra?
18:43 < owen1> what do u mean by server
18:43 < mikeal> rail and sinatra at the application teir
18:43 < owen1> oh
18:43 < mikeal> apache is a server
18:43 < owen1> thin/mongrel
18:44 < mikeal> exactly
18:44 < owen1> ok, so in ruby i can swap thin with unicorn
18:44 < owen1> but in node i don't do that?
18:44 < mikeal> look at any web framework in node and it's built on top of node core
18:44 < Zr40> timoxley: can't do that, something might still be running. I just want to know what exactly is waiting/running
18:44 < mikeal> correct
18:44 < owen1> so node core is replacing the traditional server
18:44 < mikeal> node is for building servers
18:45 < mikeal> new web applications happen to need to be servers now
18:45 < mikeal> so node is a good fit
18:45 < owen1> great, so why is middleware still in express and people building all kind of middlewares?
18:45 < mikeal> but yeah, you'll never "swap" the server layer
18:45 < mikeal> history
18:45 < mikeal> tim caswell thought we would need a middleware system so he wrote one
18:46 < Zr40> middleware and connectors aren't the same concept anyway
18:46 < mikeal> then he wrote file server and some other stuff on to[
18:46 < mikeal> when TJ refactored express from it's earliest version he put it on top of connect to use all the stuff caswell wrote
18:46 < mikeal> connect is basically a poor plugin system
18:46 < timoxley> mikeal I don't get what's wrong with middleware in the form of express/connect
18:46 < owen1> mikeal: so if i build an app without experess, i can't use the functionality that is in all those middlewares?
18:46 < mikeal> and nobody builds on top of it other than express 
18:46 < timoxley> how else would you do it?
18:47 < mikeal> director "supports" it by basically remapping the plugins to work with it's plugin system
18:47 <@tk> anyone familiar with noduino here? testing my example works in arduino -- but with node doing the comnds it never does :/
18:47 < mikeal> i would *not* use continuation passing :)
18:47 < rektide> is there a reverse-depends in npm? can i see who uses node-proxy somehow?
18:47 < timoxley> mikeal and use what instead
18:47 < mikeal> owen1 you could build it on top of just connect
18:47 < rektide> hola peoples
18:48 < owen1> mikeal: i thought connect = middleware
18:48 < mikeal> timoxley: there are several web frameworks
18:48 < mikeal> also, express has other extension endpoints that are nicer and more specific
18:48 < owen1> and if u said middleware is not needed, do i need connect?
18:48 < mikeal> owen1: that was the idea of connect, but, like i said, it bridges *one* server (the one in node core) and an application API it invented
18:49 < mikeal> and it was written before node had really worked out a lot of it's APIs
18:49 < milani_> mikeal, I think the concept of middlewares in node is different than those in ruby/python
18:49 < owen1> mikeal: so we stuck with connect...
18:49 < mikeal> it doesn't build on certain core features because they didn't exist when it was written
18:49 < milani_> we use middlewares to name something that extend the functionality of an app. its not a protocol is it?
18:50 < mikeal> owen1: not really, like i said, only one framework really uses it
18:50  * prettyrobots typing into colloquy
18:50 < mikeal> middleware is a meaningless word
18:50 < mikeal> it means nothing
18:50 < owen1> mikeal: we should educate people to stop writing middlewares!
18:50 < timoxley> disagree
18:50 < mikeal> if you're talking about web framework "middleware" you're really talking about plugins mapped on top of a connector spec
18:50 < mikeal> owen1: most people aren't
18:50 < owen1> timoxley: if only express is using connect, why do u want to spread it?
18:51 < prettyrobots> mikeal: it means a lot of things.
18:51 < mikeal> it means anything you want it to mean :)
18:51 < prettyrobots> so many things it is almost meaningless.
18:51 < mikeal> so it means nothing :)
18:51 < milani_> anything == nothing:D
18:51 < mikeal> this is so zen :)
18:51 <@Hodapp> that's really not very zen
18:51 < prettyrobots> I've been watching Life.
18:52 < timoxley> I just had an epiphany the other day moving most of our app into middleware, perhaps it won't turn out
18:52 < timoxley> but seems like a good idea
18:52 < mikeal> it's the kind of zen you read about in keroac, like sitting around drinking wine and talking about zen is zen… but it's actually not at all
18:52 < prettyrobots> It is Halmark Zen.
18:52 < mikeal> if you want a spec to write your HTTP plugins on top of
18:52 < mikeal> use node core's HTTP API :)
18:53 < mikeal> it's very widely used :)
18:53 < mikeal> just don't call writeHead
18:53 < mikeal> ever
18:53 < milani_> mikeal, isn't it reinventing modules?
18:53 < eungjun> exit
18:53 < mikeal> umn....
18:54 < mikeal> node has modules
18:54 < mikeal> use them :)
18:54 < milani_> they are not enough
18:54 < owen1> mikeal: so what's the best practice when it comes to extended functionality of a web app? CommonJS module?
18:54 < mikeal> what do they not do?
18:54 < milani_> did u ever published a module on npm?
18:54 < prettyrobots> mikeal: Why not? Curious. Call writeHead?
18:54 < mikeal> owen1: i don't know what you mean by that
18:54 < milani_> mikeal, if u did, it was something you thought people want but its hard to achieve
18:54 < milani_> so you published it for others to use.
18:55 < owen1> mikeal: yeah, it was a bit blurry..
18:55 < diverdude> I am doing require('mysql'), to get the node-mysql module loaded. I then in the beginning of my node.js file call mysqlclient = mysql.createClient() to connect. In my socket.io connect event i then do mysqlclient = mysql.query() which for some reason is completely ignored. If i do console.log(mysqlclient) in the connect event it seems that the connection is very much allive...so why is the query being ignored? http://bin.cakephp.org/view/152831
18:55 < diverdude> 6166
18:55 < yawnt> i need a module that is 4k lines long
18:55 < yawnt> ideas?
18:55 < yawnt> benchmarking
18:55 < prettyrobots> We don't invent software. We implement it. re implemantatoon happens.
18:55 < timoxley> milani_ https://github.com/mikeal/request/
18:55 < mikeal> prettyrobots: because it's destructive. use setHeader() and statusCode = 
18:55 < mikeal> then other actors can also modify headers 
18:55 < milani_> timoxley, exactly!
18:55 <@cainus> mikeal: got an example of not using middleware?  maybe for something like making sure cookies are parsed for all routes?
18:55 < mikeal> and they won't get really written until the first write() call
18:56 < timoxley> milani_ don't use it, use core api instead
18:56 < prettyrobots> mikeal: Gotcha.
18:56 < mikeal> so… you do that by… parsing cookies…. before you call your routes :)
18:56 <@cainus> that sounds like connect's middleware exactly...
18:57 < mikeal> that sounds like code anyone can write to do anything
18:57 < mikeal> that sounds like 5 lines of code
18:57 < owen1> cainus: why use middleware if you can use a simple function before your routes?
18:57 < owen1> why adding complexity?
18:57 < prettyro_> mikeal: I agree with you.
18:57 <@cainus> that's all the middleware is
18:57 <@cainus> a simple function
18:57  * prettyro_ iPhone is too hard to type on.
18:58  * prettyro_ ?
18:58 < mikeal> no, it's not
18:58 <@cainus> takes req/res/cb
18:58 <@cainus> sure it is
18:58 < mikeal> connect middleware using a continuation passing API
18:58 < mikeal> it calls sequentailly, always, and in some cases breaks streaming
18:58 < mikeal> although, i think the new streams we're talking about in 0.9 will fix it
18:59 < TehShrike> ...new streams?
18:59 < TehShrike> Tell me more!
18:59 < mikeal> it's a lot to talk about on IRC
18:59 < TehShrike> Fair enough
18:59 < owen1> node people: STOP USING MIDDLEWARES
18:59 < TehShrike> Link me more!
18:59 < mikeal> we're talking about it on NodeUp tomorrow
18:59 < TehShrike> Ah, cool!
18:59 < mikeal> isaac, me, max ogden, and domenic tarr will be on
18:59 < TehShrike> That is definitely relevant to my interests
18:59 < prettyrobots_> mikeal: So, you don't believe I should use Connect?
18:59 < mikeal> its a big refactor
19:00 < prettyrobots_> Or are you against the more general notion of middleware?
19:00 < owen1> mikeal: please talk tomorrow about using simple function before the routes instead of using/creating middlewares.
19:00 < prettyrobots_> I find this very interesting, anything that challenges frameworky software development.
19:00 <@cainus> running middleware asynch might be neat... doesn't really make it "not middleware" though
19:00 <@cainus> most middleware is probably not i/o bound though
19:01 < mikeal> require('routes') or, even better, require('mapleTree')
19:01 < owen1> prettyrobots_: https://github.com/isaacs/npm-www
19:01 < prettyrobots_> Logs at http://piscisaureus.no.de/node.js/latest are not updating.
19:01 < prettyrobots_> Trying to get caught up.
19:01 < rektide> mikeal: what do you mean by cnonect breaking streaming?
19:01 < owen1> i use mapleTree thanks to NodeUp podcast. they mentioned it.
19:02 < owen1> prettyrobots_: isaacs is building the next npm website with no frameworks and no connect/middleware
19:03 < jgornick> Hey guys, I'm looking to standardize my RESTful API error responses. Does anyone know if something already exists that handles the normalizing of errors and the responses sent back to the client?
19:03 < prettyrobots_> owen1: That is super. I'm very happy to hear that.
19:03 < rektide> I for one really like the chain of command pattern, I just wish Conncet would identify itself as such directly & provide some documentation for itself & do something about the 200+ open issues.
19:03 < owen1> prettyrobots_: and here is my version, using mapleTree for routing - https://github.com/oren/node-website-template
19:03 <@piscisaureus_> prettyrobots_: apparently the not was banned
19:03 < mikeal> rektide: the continuation passing API break backpressue
19:04 <@cainus> jgornick: probably not... what content-type(s)?
19:04 < timoxley> jgornick if you're using express, forward your errors with next() and use error middleware
19:04 < rektide> mikeal: usually the continuation passing stops at some point, someone stops calling next(). usually there's only one person actually dealing with streaming stuff.
19:04 -!- isaacs changed the topic of #Node.js to: WE ARE JAVASCRIPT POWER.
19:04 < jgornick> cainus: JSON
19:05 < jgornick> timoxley: I like that idea!
19:05 < mikeal> right, and what happens if data gets emitted before that
19:05 < prettyrobots_> mikeal: So a function to sort out th request, then routes.
19:05 < mikeal> and what happens if i pipe it in the middle of the continuation chain
19:05 < rektide> mikeal: one would have to install a handler that creates a proxy that captures the data that might otherwise get missed
19:06 <@isaacs> rektide, mikeal: this is why read() streams are so great!
19:06 < rektide> starting to monkeypatch the continuatino that's getting passed is certainly not pretty
19:06 < rektide> isaacs: i know nothing about the new streams impl
19:06 <@isaacs> they *actually* solve this problem.
19:06 < rektide> but just read()ing that
19:06 < mikeal> yeah
19:06 < rektide> i think "go"
19:06 < mikeal> read() streams will fix this
19:06 < rektide> blocking again
19:06 < mikeal> but…. won't connect and express have to get updated to use the new readableStream in core?
19:07 <@isaacs> pipe(bufferingThing) (then later) bufferingThing.pipe(target) is not really a great solution
19:07 <@isaacs> because you lose the tcp backpressure
19:07 < mikeal> if they're using the polyfill won't they still have the same issues?
19:07 < mikeal> BufferedStream sucks
19:07 < mikeal> i wrote it, it sucsk
19:07 < milani_> piscisaureus_, wrong command?!:D
19:07 <@isaacs> mikeal: you forget, where node is concerned, the present is already the past as far as i'm concerned ;)
19:07 < mikeal> you also break capability detection
19:07  * isaacs lives a year in the node future
19:08 < mikeal> SummerCamp is where we figure out what the future looks like :)
19:08 < Tobsn> you mean 15 versions and a complete rewrite of the language ahead? :P
19:08 < mikeal> except this read() stream thing
19:08 <@isaacs> rektide: it's kinda like go or dart, yeah.  (or java or python or unixy c, or pretty much every other readable stream implementation)
19:08 < mikeal> which isaac figured out all on his own :)
19:08 <@isaacs> hahahah
19:08 < mikeal> goroutines are something else
19:08 < Zr40> is there a way to see which events are still active? My node code isn't exiting and I'm looking for a way to debug this
19:08 <@isaacs> no, basically i was sort of thinking of something not quite as nice, and then in a 2 week period, 3 people all said, "Why isn't it like this isntead?"
19:08 < prettyrobots_> Where can I learn about the new Streams?
19:08 < prettyrobots_> Are then in 0.9?
19:08 < rektide> go's channel operations are more what i was thinking of, not goroutines.
19:09 < prettyrobots_> Are they in 0.9?
19:09 < TehShrike> prettyrobots_: http://nodeup.com/ apparently
19:09 < TehShrike> Tomorrow!
19:09 <@isaacs> prettyrobots_: not yet.
19:09 < prettyrobots_> Discussed on dev?
19:09 <@isaacs> yeah, i wanna talk about this tomorrow
19:09 <@isaacs> prettyrobots_: sketching here: https://github.com/isaacs/readable-stream
19:09 < prettyrobots_> Hey, when you do Node Up, can you say your names please?
19:10 < prettyrobots_> I listend to a few and it was...
19:10 < prettyrobots_> Here's Marco, Mikael, Isaac, and Nate.
19:10 < TehShrike> You should use more animated voices! ;-P
19:10 < prettyrobots_> Group mumble: Hi!
19:10 < TehShrike> Like, one of you should always talk with a British accent
19:10 < owen1> prettyrobots_: what time is the show?
19:10 < prettyrobots_> And then I have no idea who is speaking.
19:11 < prettyrobots_> It would really help if you would say your names more than once, especially since the cast changes.
19:11 < TehShrike> Maybe one of you could speak with a lisp the whole time
19:11 <@ryah> hey, #node.js people
19:11 < TehShrike> oooh!  Maybe something where isaacs only speaks in haiku!
19:11 <@ryah> do not ban "slurp"
19:11 <@ryah> it's a bot that logs stuff
19:12 < owen1> why don't u pubilsh the day and time of NodeUp on the nodeup website? also the channel on irc.
19:12 <@ryah> otherwise i will remove all this op fun
19:12 <@ryah> who hangs out here all the time that can enforce this?
19:12 < rektide> someone please re-op me? i'm sorry i /parted, i forgot to pay my vps bill. :/
19:13 < Niloc> ryah: can't you just set a ban exception (+e)?
19:13 <@ryah> rektide: just say "ops plz"
19:13 < rektide> ops plz
19:13 <@ryah> Niloc: i dont know
19:13 <@rektide> power, i can feel the power coarsing through my veins! power, overwhelming!
19:13 < TehShrike> :-P
19:14 <@ryah> Nexxy: can you please make sure people don't ban "slurp" ?
19:14 -!- mode/#Node.js [+Cnt]
19:14 -!- Channel #Node.js created Sat Jan 30 07:48:24 2010
19:14 <@maxogden> ph33r the t3rr4n d0min10n
19:14 < owen1> what day/time is the nodeup podcast? 
19:14 < joeandaverde> maxogden: sc2much?
19:14 < TehShrike> ops plz
19:14 -!- TehShrike changed the topic of #Node.js to: Use Node.js because it's awesome! You can ban anyone you want, except for slurp
19:14 < prettyrobots_> ops plz
19:15 < Niloc> ops plz
19:15 <@prettyrobots_> Hah.
19:15 < joeandaverde> ops now damnit
19:15 < joeandaverde> :(
19:15 < milani_> joeandaverde, :))
19:15 <@isaacs> i thought to /ban you needed +f access
19:15 < joeandaverde> he doesn't like being ordered around
19:15 < Zr40> you have to say just the right words
19:15 <@ryah> Niloc: i hope that works
19:15 <+Niloc> It should :)
19:15 -!- ryah changed the topic of #Node.js to: let it be known that "slurp" is not to be banned.
19:16 < joeandaverde> is that a hubot?
19:16 < joeandaverde> slurp image me
19:17 <@ryah> i feel a reverse psychological need to ban slurp now
19:17 <@ryah> damn it - must resist
19:17 <@TehShrike> lol
19:17 < joeandaverde> slurp what can you do for me?
19:17 <@TehShrike> HEY RYAH
19:17 <@rektide> ban him before he does the one unforgivable thing
19:17 <@TehShrike> BOOT SLURP< MAN!
19:18 <@ryah> Niloc: can you +e all no.de ips?
19:18 <@TehShrike> ryah: there, now some asshole on the internet is telling you to ban slurp, that should remove all desire to do so
19:18 <@isaacs> weird, ircretary is on no.de and she's fine
19:18 <@isaacs> ircretary: what time is it?
19:18 <@ircretary> isaacs: It's 2012-07-28T19:19:26.387Z by my watch, sir.
19:18 <@isaacs> yep
19:18 <@ryah> *shrug*
19:19 <@maxogden> isaacs: why is ircretary a 'she' you jerk
19:20  * maxogden writes angry blog post
19:20 <@TehShrike> >_<
19:20 <@isaacs> maxogden: why are all your robots 'he', you jerk!!
19:21  * isaacs names most of his programs in the female
19:21 <@TehShrike> Half of my bots are female
19:21 < joeandaverde> double standard.
19:21 <@TehShrike> Half of my bots are male
19:21 <@TehShrike> But just one of my bots is very confused
19:21 <@rektide> and yet none have reproduced successfully, we'er sorry TehShrike 
19:21 <@TehShrike> I don't let them talk to each other
19:21 <@isaacs> npm is neuter, though.
19:21 < npmbro> isaacs: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20is%20neuter
19:21 <@prettyrobot> prettyrobots: Do you get push notifcations?
19:21 -!- npmbro was kicked from #Node.js by isaacs [npmbro]
19:21 < mikeal> maxogden: are we doing something with dale today?
19:22 <@isaacs> hehee
19:22 <@rektide> yesss go hack PouchDB
19:22 <@prettyrobot> prettyrobots: Can you hear me?
19:22 <@maxogden> mikeal: i dunno
19:22 -!- isaacs changed the topic of #Node.js to: - Bot Playground - ops with 'ops plz' - DONT BAN SLURP!
19:23 <@maxogden> isaacs: nooooo dtrejo will be crushed
19:23 < joeandaverde> ops plz
19:23 <@joeandaverde> wow, that feels good.
19:23 <@joeandaverde> i feel powerful
19:23 < mikeal> anyone who doesn't have a SummerCamp ticket should buy one TODAY
19:23 < mikeal> mailto:dominic.tarr@gmail.com
19:24 < mikeal> whoops
19:24 < mikeal> hahaha
19:24 <@joeandaverde> like i have the he-man keytar thing
19:24 < mikeal> http://www.nodeconf.com/
19:24 < mikeal> copy/paste fail
19:25 <@TehShrike> joeandaverde: like this guy? http://youtu.be/5Otaq2tmNMM
19:25 <@joeandaverde> gah, what was the name of that device in "Masters of the universe"
19:25 <@joeandaverde> TehShrike: nice
19:25 <@maxogden> continuum transfunctioner?
19:26 <@maxogden> dilithium crystals?
19:26  * joeandaverde goes on mad google image search
19:26 < mikeal> watching Jiro Dream of Sushi again
19:26 < mikeal> "for fast eaters a meal could only last 15 minutes"
19:26 < mikeal> i can't wait, 400 dollars for a 15 minutes dinner
19:27 <@joeandaverde> this thing: http://www.therobotspajamas.com/wp-content/uploads/2011/02/he-mancosmickey.jpg
19:28 <@joeandaverde> oh even better: http://www.he-man.org/assets/images/ctn_episodes/cosmic_key_full.jpg
19:28 < tuhoojabotti> TehShrike: Awesome. ;D
19:29 <@TehShrike> tuhoojabotti: isn't it? :-D
19:29 -!- piscisaureus_ was kicked from #Node.js by piscisaureus_ [See You - Kick sponsored by www.trillian.im]
19:29 < tuhoojabotti> There's some finnish dubbed versions of he-man which are great
19:29 <@joeandaverde> the cosmic key is the ultimate tool to use against someone who breaks the build
19:29 <@joeandaverde> or checks in failing tests
19:30 <@ryah> mikeal: $400 for a 15 minute meal? ..
19:30 <@joeandaverde> i can only imagine the pain and suffering that would insue
19:30 <@ryah> i believe this is called natural selection
19:30 < mikeal> dude
19:30 < mikeal> best sushi in the world
19:30 < mikeal> 3 star michelin
19:30 < mikeal> the oldest working 3 star michelin chef
19:30 < mikeal> only 10 seats at a bar
19:30 < mikeal> reservations months in advance
19:31 < milani_> just for a meal?
19:31 < milani_> months?!!
19:31 < mikeal> yeah, pre fix menu
19:31 < mikeal> 15 − 30 minutes
19:31 <@ryah> yeah i'll just get normal sushi and save $390 :)
19:31 < diverdude> can anybody see what i am doing wrong here? http://bin.cakephp.org/view/1528316166 mysql-node simply will not perform the query
19:32 < mikeal> 10 dollar sushi is a good way to get sick
19:32 < notmatt> $6 sushi special in Vancouver is where it's at.
19:32 < milani_> ryah, +
19:33 <@TehShrike> I don't eat sushi often :-(
19:33 <@rektide> anyone remember any of the APIs for writing plugin systems?
19:33 <@ryah> i think that if you pay $400 for sushi the only possible result is to be disappointed - don't you think?
19:33 <@rektide> (apis for making apis?)
19:33 <@ryah> i cannot imagine how good it could be for me to come away happy about that
19:34 < mikeal> i've had meals that approached that price
19:34 < milani_> exactly!
19:34 < mikeal> they were much longer
19:34 < gkatsev> it depends on how much you like sushi
19:34 < mikeal> but i was incredibly satisfied
19:34 < gkatsev> and it is probably the best sushi in the world
19:34 <@TehShrike> mikeal: and involved much booze?
19:34 < milani_> that $400 can save a life in Africa
19:34 < mikeal> mentally, there isn't much difference between 100 and 400 dollars
19:34 <@ryah> it could be a 15 minute orgasam and i would be disappointed having spent $400
19:34 < mikeal> once you're having an expensive meal, you expect a lot
19:35 < jMCg> Hello happy people o/~
19:35 < gkatsev> i'd totally go there for sushi
19:35 <@TehShrike> ryah: lol
19:35 <@ryah> orgasm even :P
19:35 < jMCg> ops plz
19:35 <@jMCg> Cool.
19:36 < jMCg> Anyway.
19:36 < gkatsev> how did this convo began?
19:36 <@tk> woot, noduino working... oddly enough it only took 3 reflashes and magically it all worked... wtf
19:37 < jMCg> It would appear as though nodejs' buildsystem rebuilds the entire project when I run make install. I consider that a bug. Now I'm wondering if it's a bug in node.js build scripts, or a bug in gyp…
19:37 < gkatsev> debug all the things
19:37 <@ryah> jMCg: but in our makefile likely
19:38 <@ryah> jMCg: isaacs knows about all things related to "make install"
19:38 <@piscisaureus_> ryah: I think $400 is comparatively cheap in terms of $/orgasm-minute
19:39 < jMCg> ryah: one person? That's great! And there I thought our project was fucked when we have 4 people who remotely understand the autotools cluster fuck that is our buildsystem :-\
19:39 <@TehShrike> I mean
19:39 <@ryah> true, but in absolute terms it's still a lot
19:39 <@TehShrike> You'd probably pay 400$ just to see what it was like
19:39 < mikeal> "3 star michelin means it is worth traveling to that country just to eat at that restaurant"
19:39 <@TehShrike> "FIFTEEN MINUTES?  Really??"
19:40 <@ryah> jMCg: actually im sure many people could help you, including me, but im just deflecting :)
19:40 < mikeal> Jiro's is the only 3 star michelin restaurant where a meal would take less than an hour
19:40  * ryah sips his instant coffee
19:40 < mikeal> Mizutani, another 3 star michelin sushi spot in Japan run by a former Jiro apprentice, may be the only other one
19:41  * mikeal sips his Ethiopian Worka coffee he roasted himself
19:41 <@ryah> lol
19:41 <@TehShrike> ryah: have you tried this yet? http://trung-nguyen-online.com/g7-gourmet-instant-coffee.php
19:41 <@ryah> i have not
19:41 < milani_> you are crazy guys!! lol.
19:41  * rektide pulls out the laser sensor to see if his tea water is cool enough for some Rishii sencha yet
19:41 <@TehShrike> It's about as reasonable as instant coffee gets
19:41 < jMCg> isaacs: you have been nominated as volunteer to debug and fix an issue in the buildsystem where the whole project is rebuilt upon issuing sudo make install
19:41 <@rektide> it is, 178
19:42 < jMCg> ryah: ACK ;)
19:42 <@TehShrike> rektide: 8-|
19:42 <@TehShrike> Lasers can tell me how hot things are??
19:42 <@TehShrike> Lasers are even more awesome than I thought!
19:43 <@isaacs> jMCg: no thanks
19:44 <@ryah> jMCg: v0.8.4?
19:44 < jMCg> oh. Gimme a sec.
19:45 < jMCg> (I was on v0.8.2…)
19:45 <@rektide> TehShrike: http://www.amazon.com/General-Tools-IRT207-Heat-Seeker/dp/B00377BSU4/ref=sr_1_7?ie=UTF8&qid=1343504659&sr=8-7&keywords=infrared+thermometer
19:45 <@rektide> i guess there's perhaps no laser, just an IR sensor. not really sure how these things work.
19:45 <@TehShrike> Man
19:46 <@ryah> jMCg: let me see if i can repeat on origin/v0.8 
19:46 <@rektide> sorry friend. :(
19:46 <@TehShrike> I'm working really really hard to justify this purchase to myself
19:46 <@rektide> what are you perhaps buying TehShrike ?
19:46 <@TehShrike> A magical gun that tells me how hot things are, apparently
19:46 <@rektide> You could literally know the temperature of everything in your house. It's incredible.
19:47 <@TehShrike> Seriously!
19:47 <@TehShrike> I am ignorant of the temperatures of SO MANY OBJECTS right now
19:47 <@rektide> My carpet, 76.4. Piano? 79.2.
19:47 <@rektide> Screen? 89.1
19:47 <@TehShrike> Oh snap.
19:48 <@ryah> rektide: what about your skin?
19:48 < jMCg> ryah: in case you can't, try adding DESTDIR=/some/other/dir
19:48 <@rektide> ryah: wrist, 94.2 ear, 93.1, temple 96.8
19:48 <@ryah> jMCg: im doing ./configure --prefix=$HOME/local/node
19:49 <@ryah> cool
19:49 <@rektide> big toe, 80.2, little toe 79.4
19:51 <@rektide> I found one of the plugin-api's i was thinking of
19:51 <@rektide> Yo, I heard you like APIs so we wrote an API for writing APIs
19:51 <@rektide> https://github.com/flatiron/broadway
19:51 <@rektide> I'm still trying to think of a use case
19:53 <@rektide> SocketStream's rpc modules made me think of it https://github.com/socketstream/socketstream#example-1-basic-rpc
19:53 <@ryah> jMCg: did not rebuild on make install
19:53 <@ryah> % DESTDIR=$HOME/local/node2 make install
19:53 <@ryah> ^-- also did not rebuild
19:54 < jMCg> ryah: and sudo ?
19:55 <@ashb> no need for sudo if you are installing into your home dir
19:55 <@ryah> jMCg: also did not rebuild with suido
19:55 <@ryah> sudo
19:56 < jMCg> ryah: must be my special system then. Thank you very much for your time.
19:58 <@ryah> jMCg: maybe you somehow deleted the out/ directory?
19:58 < AviMarcus> So. I'm looking to store 10million+ pieces of info in memory. It's key(int) -> value(int) + date created (int?). Storing as key[12345]={val: 23456, date:7890} this seems to take up >1gb for 10 million records. Since the actual data is only ~220mb ( 8 bytes per number) is there a data type that will take up less space? I'm open to using memcache or redis, but I think memcache  has a 120byte overhead which brings us back to the same plac
19:58 < AviMarcus> e.
19:59 <@ryah> *shrug*
20:01 < AviMarcus> ryah, if you know that would be awesome
20:01 < DTrejo> isaacs: okay, I am going to change it to only activate when 'npmbro' is used
20:01 <@cainus> redis and memcached probably care more about fast random access than memory consumption
20:01 <@isaacs> DTrejo: or you could just make it ignore me :)
20:02 < DTrejo> hmm
20:02 < DTrejo> yes I will do that
20:02 <@isaacs> DTrejo: or i guess i could /ignore it
20:02 <@isaacs> and we can live in peace
20:02 < DTrejo> well, I will make it ignore you
20:02 < DTrejo> so then it doesn't clutter other ppls conversations with oyu
20:02 < DTrejo> *you
20:02 < jMCg> ryah: I have a script which goes from make to sudo make install, to sudo make DESTDIR=/foo/bar/baz install -- there is nothing inbetween.
20:05 <@TehShrike> While we're on the topic if coffee and gadgets, I'll just say that I recently got an Aeropress, and it's actually pretty awesome
20:06 < AviMarcus> cainus, well just storing in nodejs seemed to have a bit of overhead too. Is there a "minimal" way to store array/objects?
20:07 <@rektide> The coffee machine kickstarter is taking it's time
20:07 <@rektide> http://www.kickstarter.com/projects/zpmespresso/pid-controlled-espresso-machine/posts
20:08 <@cainus> AviMarcus: sure...a binary file specific to your dataset
20:09 < AviMarcus> it does have a very specific format -- key is an int + 2 ints, but I don't have a clue how to go about a binary file... and then have fast random access, too.
20:09 <@cainus> well the random access is a bit of a constraint right? :)
20:09 < AviMarcus> it is. although, if it's in ram, how long does it take to loop through a few gigs of data? lol.
20:10 <@cainus> it doesn't loop... it's random access
20:10 <@cainus> that's why people use redis
20:11 <@cainus> you're asking for both sides of a design tradeoff, is what I'm saying
20:11 < jMCg> Is there a way to npm install something into a different location?
20:11 < AviMarcus> heh. What is redis's overhead? this seems to say 64bytes per doc
20:11 <@cainus> i'm not ogin to argue with redis docs ;)
20:11 <@cainus> going
20:12 < AviMarcus> I didn't see that in redis docs, just some stackoverflow answer. I couldn't find the docs for that.
20:17 < gkatsev> mikeal: lets plan a #Node.js trip to Jiro's
20:17 < gkatsev> lol
20:20 < mikeal> i already am
20:20 < mikeal> it might just be me and Jed Schmidt
20:20 < gkatsev> oh, cool
20:20 < mikeal> going to Japan for Node Fest
20:20 < gkatsev> I dont think I have enough money or time for that right now.
20:21 < gkatsev> sounds like fun
20:27 < Domenic> Is Node Fest in English? The website confuses me but I definitely want to go, and perhaps should start planning.
20:31 < mikeal> it's mostly japanese
20:32 < mikeal> i'm speaking, and i think someone translates it live
20:32 < Domenic> Will it be enjoyable if I don't understand Japanese, is I guess the question.
20:33 < mikeal> my guess would be no :)
20:34 <@Nexxy> unless maybe you enjoy being clueless
20:34 <@Nexxy> and lots of emoji
20:35 < Domenic> I mean I really enjoyed my two weeks touristing in Japan. But wasn't sure if this was one of the "mostly English speaking people congregating in Japan" things or "Japanese people doing their own conference" things; sounds like the latter.
20:35 < Domenic> What about that Thailand (?) conference mentioned on NodeUp a while ago?
20:36 < mikeal> it's more of a japanese people doing their own thing
20:36 < mikeal> there is also a south korean one happening right after
20:36 < mikeal> which is the same deal
20:36 < mikeal> Thailand will be in english
20:37 < Domenic> ok cool. i assume details on that are still pending
20:37 < mikeal> yup
20:37 < gkatsev> I wish I had money and time to go to these things
20:37 < mikeal> ThaJS is a working retreat
20:37 < mikeal> not a "conference"
20:37 < gkatsev> heck, just to travel to japan even
20:37 < mikeal> 8 days long, only a couple talks per day
20:37 < mikeal> lots of time to work
20:37 < mikeal> wireless the whole time
20:38 < mikeal> but the conf will keep moving
20:38 < Domenic> Wow awesome, looking forward to it.
20:38 < mikeal> all accomodations and food are included in the price
20:38 < Domenic> Looks like I should watch this GitHub repo lol https://github.com/iriscouch/thaijs
20:41 < albertosh> Hello, can anybody tell me what's wrong with this https request pleaaaase?
20:41 < albertosh> http://jsfiddle.net/tCZ93/
20:42 < albertosh> i'm getting timeout for the request, but i really have no idea what's wrong in there :(
20:42 < mikeal> path should being with /
20:42 < albertosh> ok!
20:42 < albertosh> let me try that
20:42 < mikeal> that is NOT text/json
20:42 < mikeal> text/json isn't even a content type
20:43 < mikeal> also, do not do string.length
20:43 < mikeal> do var body = new Buffer(string)
20:43 < mikeal> body.length
20:43 < albertosh> ok
20:43 < mikeal> you need the byte length, which may be different than that string length
20:43 < mikeal> JSON.stringify if it's really JSON
20:43 < emr> hello, how i can get length of list
20:43 < mikeal> and the content type is application/json
20:43 < Domenic> If only *someone* had written a module to take of all these gotchas for you ;).
20:44 < mikeal> haha
20:44 < mikeal> request.post(url, {json:{access_token:access_token}}, function (e, resp, doc) {})
20:44 < albertosh> Do i need to import Buffer? 
20:44 < mikeal> would do all of this
20:44 < mikeal> Buffer is global
20:44 < albertosh> ok
20:46 < albertosh> It worked! Thanks a lot guys!
20:47 < mikeal> albertosh: you might want to check out the request module, it makes all of that code you have be one line
20:47 < albertosh> mikeal: I will, and then change it to your suggested code, seriously thanks a lot
20:47 < albertosh> loving node btw, but i'm just getting started :p
20:48 < mikeal> cool
20:51 < albertosh> btw mikeal, it works but the server always returns a timeout at the end
20:51 < mikeal> returns a timeout?
20:52 < mikeal> can you update that fiddle?
20:52 < albertosh> yes
20:53 < albertosh> http://jsfiddle.net/tCZ93/2/
20:53 < albertosh> mikeal: there it is
20:54 < mikeal> you need to write(body)
20:54 < mikeal> you spelled application/json wrong
20:54 < albertosh> Lol!!!
20:54 < albertosh> ok
20:54 < albertosh> oops :)
20:54 < Domenic> It should probably be application/x-www-form-urlencoded anyway
20:55 < Domenic> Also useful shortcut: `post_req.end(body)`
20:55 < yawnt> http://tav.espians.com/oauth-3.0-the-sane-and-simple-way-to-do-it.html
20:56 < albertosh> perfect! working like a charm, thanks again!
20:56 < albertosh> nono, still getting timeouts :S will try with x-www-form
20:57 < Domenic> I don't get it when people say the OAuth 2 spec is complicated. Maybe I'm used to complicated specs but it's actually pretty darn simple and easy to implement.
20:57 <@joeandaverde> ^^
20:58 < Domenic> This OAuth 3 thing is ridiculous it expands the scope to service discovery and client registration/management
20:58 < xocel> Hey guys, anyone here familiar with mongoose-auth? Playing around with it atm, pretty much just using the example app (with everything removed but password auth) Everything works well. Not sure how i should be adding certain registration parameters tho, password confirmation for example. Is there a function i can override to access req.body to extract the info? or would using the extraParams: function, then overriding registerUser: to add the code/remove co
20:58 < xocel> nfirmation from schema before writing to db? be the way to go.
20:58 < albertosh> still getting timeouts :'( but at least it works
20:59 < mikeal> Domenic: OAuth 2 is simple if you don't implement anything that is optional
21:00 < jonocosa> sould I rune node.js in windows our use a linux virtual machine ?
21:00 < mikeal> it's just a bearer token
21:00 < mikeal> but it's also not even enough stuff to be compatible across implementations
21:00 < mikeal> jonocosa: node runs very well on windows
21:00 < jgornick> Does anyone know of a library that allow one to translate query parameters that define conditions, limit and sort to a Mongoose/Mongo query? I'm looking for something like OData conditions -> mongoose/mongo.
21:00 <@rektide> Domenic: where are you reading this? i'd be interested in service discovery
21:00 < Domenic> mikeal: I believe that; we just implement the bearer tokens and scopes.
21:00 < jonocosa> ok tks mikeal 
21:00 < Domenic> rektide: the link from yawnt up above
21:01 < Domenic> mikeal: I'd be curious to try to understand this incompatibility across implementations claim. I don't really understand what it means.
21:01 < mikeal> like, there's no way an endpoint can signal if it's using a signing extension
21:02 <@rektide> great googly moogly
21:03 <@rektide> http://tools.ietf.org/html/rfc5785 Defining Well-Known Uniform Resource Identifiers, "This memo defines a path prefix for "well-known locations", '/.well-known/', in URI schemes"
21:03 <@rektide> that is bloody effing crazy talk. wow is the web ever one super high falutin place. man i feel like such rabble for not being up to date on all these crazy web technologies.
21:06 < Domenic> mikeal: I see. I mean, I guess that speaks to the point of the original post about how OAuth2 is way too extensible. But from my perspective if you're doing an extension then you shouldn't expect interoperability. I guess the spec is in this wierd in-between state where it gives you the option to hang yourself alone but not enough constraints and interoperability to hang together.
21:06 < mikeal> this is what i think
21:06 < mikeal> people should not invent new signing methods
21:07 < mikeal> we should specify ONE simple signing method that does NOT include headers
21:07 < mikeal> that should be a spec
21:07 < mikeal> and nothing else
21:07 < mikeal> the classifications for endpionts, token acquisition and token expiration should not be specified
21:08 < mikeal> the truth is, nobody does them consistently enough to be standardized
21:08 < xocel> agreed
21:08 < mikeal> everyone has to write that code specific to each endpoint anyway
21:08 < mikeal> so, fuck it
21:08 < mikeal> signing is the hard part, and it's the part that people do very poorly and make bad choices (AWS signing, OAuth1) that violate HTTP
21:08 < mikeal> specifically the fact that headers impact other headers and invalidate them
21:09 < mikeal> lets get rid of that
21:09 < mikeal> spec only this, and be done with it
21:09 < mikeal> there is no "generic oauth2" client
21:09 < mikeal> and all the generic oauth1 clients are basically lies
21:09 < mikeal> you have to specify all the endpoint, the signing structure, and then you only have about half of them work
21:10 < mikeal> the signing code in request doesn't even deal with endpoint specification and it still has patches in it specific to every popular backend
21:10 < mikeal> for god sakes, Flickr's backend is case sensitive on headers
21:11 < Domenic> *facepalm*
21:11 < xocel> lol
21:18 <@rektide> ahhhh bollocks
21:18 <@rektide> why is Google OAuth not giving me a refresh token
21:18 <@rektide> fffffffffff
21:19 < DTrejo> mikeal: can haz a mega rant/talk on oauth at summer camp? ;)
21:21 < mikeal> haha
21:22 < mikeal> if Eran Hammer comes, that'll definitely happen
21:23 < DTrejo> cool
21:30 <@rektide> ok ok ok, the problem is just passport-oauth
21:30 <@rektide> mercy mercy
21:34 <@Nexxy> \o/ someone cleared the ban list!
21:34 < jgornick> I must be missing something, how can I create a new instance of Error?
21:34 < yawnt> new Error(<string>)
21:34 <@Nexxy> new Error()
21:34 < coderarity> new Error("you broke it")
21:35 <@Nexxy> new Error("THISISWHYWECANTHAVENICETHINGS
21:35 <@Nexxy> ")
21:35 <@Nexxy> etc
21:35 < yawnt> HAR HAR I AM BETTAH
21:35 <@Nexxy> we know, yawnt 
21:35 <@Nexxy> you are far superior in all things
21:35 < yawnt> :)
21:35 < yawnt> :)
21:35 < jgornick> I am missing something :P
21:36 < jgornick> I was missing my closing parenthesis. I only got 3 hours of sleep last night.
21:36 <@Nexxy> lucky you
21:36 < jgornick> I'll go back to zombie coding again...
21:36 < jgornick> Thanks Nexxy 
21:36 <@Nexxy> indubitably!
21:38 < coderarity> jgornick, or you can be super cool and use this https://github.com/flatiron/errs
21:39 < coderarity> jgornick, but like, you gotta be really cool
21:40 < jgornick> coderarity: I don't know if I'm cool enough for that _yet_.
21:40 < jgornick> :P
21:40 < coderarity> :D
22:24 < owen1> do people use http://creationix.com/utahjs/slides.html#27 for parallel i/o? 
22:24 < Domenic> That is the most basic way to do it, upon which all nicer ways are built
22:39 < owen1> Domenic: nice. it looks elegant to me
22:39 < Domenic> owen1: really? It's pretty annoying, creating that kind of checkDone() function and custom callbacks every time you do two operations in parallel.
22:40 < timeturner> that's what async is for
22:40 < timeturner> the lib
22:41 < Domenic> yup. Or if you're cool like me you use promises ;) http://www.slideshare.net/domenicdenicola/callbacks-promises-and-coroutines-oh-my-the-evolution-of-asynchronicity-in-javascript
22:41 < timeturner> ugh, promises
22:42 < timeturner> I like coroutines though
22:42 < timeturner> wish they were in node
22:42 < Domenic> yeah that'll be nice
22:42 < Domenic> es6 ftw
22:42 < timeturner> they're adding coroutines in harmony?
22:43 < Domenic> They're adding generators which are shallow coroutines
22:43 < Domenic> See http://taskjs.org
22:44 < owen1> Domenic: yeah. i don't like to hide the asyc stuff.
22:44 < owen1> timeturner: what is the difference between coroutines and promises?
22:45 < Domenic> owen1: read the slides! :)
22:45 < owen1> i am in 61 (:
22:46 < owen1> i like the WTF. makes me feel good
22:46 < Domenic> ^_^
22:47 < owen1> you sometimes read a slide and u'r embarrased since it looks like rocket science. so the WTF makes it funny
22:53 < owen1> so coroutines is syntax sugar that is doing what promises are doing that is doing what http://creationix.com/utahjs/slides.html#27 is doing?
22:54 < xocel> Domenic, thanks for the link, useful read
22:54 < Domenic> owen1: To some extent. Promises have a lot more guarantees than a naively-built solution; they try to provide a parallel to sync code, which is why they can be used as a basis for coroutines (which almost by definition look like sync code).
22:55 < Domenic> xocel: thanks, glad you liked it!
22:55 < lohkey_> owen: coroutines are more then syntax sugar 
22:55 < lohkey_> coroutines actually suspend the entire stack
22:55 < owen1> Domenic: so in the future the node guys might use coroutines instead of callbacks?
22:55 < lohkey_> promises let the stack unwind
22:55 < Domenic> owen1: that's a long way in the future
22:56 < owen1> i got used to callbacks but it's nice to see alternatives
22:56 < Domenic> owen1: first generators need to get implemented in V8, not behind a flag. A year or two out maybe. Then we probably need a year of experimentation in the community to see if they're a suitable replacement. Then, MAYBE, Node would be OK adding support.
22:56 < lohkey_> with coroutines, you can have blocking IO APIs that are abstracted by the runtime to be non blocking
22:57 < lohkey_> so you get all the benefits of non blocking code with all the syntactic benefits of blocking easy to read code
22:57 < xocel> yeah ive only been using callbacks, started playing with mongoose-auth which uses promises, was a little confused. The slides cleared things up quite a bit
22:57 < et_> hello everyone. i have a question regards node.js and 'pound' load balancer service that acts different then without pound
22:57 <@Nexxy> promises, promises.
22:57 < et_> i have a virual machine with node running on port 80. and other machine running apache. third machine is using 'pound' load balancer to use both servers on port 80
22:57 < lohkey_> i'm not a huge fan of promieses
22:57 < et_> it works.
22:58 < et_> but node.js is not syncing with the server when connecting directly to server by ip, i can load several browsers and one update the other automatlcly
22:58 < et_> when i update file in the server, the browser update it self , but when using pound.. it's not auto-updating
22:58 < et_> anybody knows how to configure a loadbalancer with node.js/derby.js?
22:58 < et_> i can't use node.js load balancing, because i have IIS/Apache/Node.js servers on seperate machines.. all on port 80
22:58 <@Nexxy> tl;dr
22:58 < Domenic> Yeah libraries which use promises are not a great fit for the Node community, sadly. I usually clearly delineate them, e.g. Dynamo as Promised (promises) is my wrapper on top of Dynode (callbacks).
22:59 < owen1> Domenic: lohkey_ thanks for the insights
22:59 < lohkey_> the continuation monad is what node.js async callbacks are
22:59 < owen1> first result of javascript coroutines http://calculist.org/blog/2011/12/14/why-coroutines-wont-work-on-the-web/ 
22:59 < lohkey_> which is one of the more powerful of the monads
22:59 < owen1> lohkey_: oh man. what's monads
23:00 < Domenic> owen1: yeah he's making a distinction there between shallow coroutines (OK, that's what generators/yield/await are), and deep coroutines (node fibers, no good).
23:00 < Domenic> monads are what wannabe Haskell coders use to impress other people with their "knowledge"
23:01 < dzajdband> question here
23:01 < et_> anyone here knows how to configure load-balancer with node.js?
23:03 < diverdude> I am using nodejs-mysql: https://github.com/felixge/node-mysql/. If i want to make 4 SQL statements in a series, do i then have to then nest the SQL statements in the previous result-function?
23:08 < mscdex> diverdude: or you can pull out logic into separate named functions, or you can use a flow control module like `async`
23:14 < xocel> its been a while since i used node-mysql (swapped to mongodb) but as mscdex suggested, put each statement into a separate function, then call them as you would any other function that uses callbacks and just pass the dbclient to each of the functions. 
23:15 < owen1> diverdude: yes, unless u use named functions - http://creationix.com/utahjs/slides.html#26
23:16 < owen1> diverdude: look at slide 25 as well
23:27 < rvagg> DTrejo: "less ugly"? pfft!
23:28 < rvagg> I personally find functions as variables, defined comma-first quite attractive these days; the eye of the beholder and all that
23:31 <@CIA-93> node: Tom Hughes-Croucher master * rc05f52c / lib/child_process.js : child_process: improve maxBuffer error message - http://git.io/-CXhKw
23:34 < phidelta> Hi all
23:37 < saamyj> Hey :SubStack , what is the name of the package.json automator library you wrote, similar to npm init?
23:39 < phidelta> I have a small problem with socket.io w/ express. The server receives events, but events do not arrive at the browser. I did google this and found that there were some issues in this combination and claims that the respective coder solved their issue, but nothing on what the actual problem is. I also tried a bunch of stuff, such as different orders to app.use,app.listen and io.listen, but to no avail. At this point I
23:39 < phidelta>  don't see the difference to the sample on the socket.io HP. Has anyone here seen this before and could give me a hint of what to look for or where to find more detailed info? Any hints would be really appreciated.
23:41 < Tobsn> saamyj, i think you're too late for him
23:42 < Tobsn> phidelta: #socket.io i think - thats where they all hang out
23:42 < phidelta> Hmm, should have guessed that. THX!
23:43 <@SubStack> saamyj: pkginit
23:43 <@SubStack> npm init has gotten a lot better too
23:43 < npmbro> SubStack: Please see npm's documentation at https://duckduckgo.com/?q=site%3Ahttp%3A%2F%2Fnpmjs.org%2Fdoc%2F%20init%20has%20gotten%20a%20lot%20better%20too
23:43 <@SubStack> and more configurable
23:44 < saamyj> :SubStack :Tobsn thanks, I just found it after a few minutes. I was scrolling up and down on your github and couldn't find it until the second after i asked
23:44 < Tobsn> oh hes awake
23:44 < Tobsn> haha
23:44 < Tobsn> nice
23:44 < Tobsn> i still got one invite left for apiary.io first one msging me his email will get it
23:48 < saamyj> I always smile a little when I do, `npm update npm -g`
23:49 < snrmwg> anyone here could help me with gyp build system?
23:53 < snrmwg> need in my gyp build a step to generate some sources (c++, headers,...) and want to access them in another step, already defined the generation target but can't access the files from 'main' sources
--- Log closed Sun Jul 29 00:00:41 2012
