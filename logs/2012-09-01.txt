--- Log opened Sat Sep 01 00:00:00 2012
00:01 < freewil> well for obvious reasons github cant have arbitrary code injected into their site
00:01 < freewil> you can probably have it parse simple anchor tags
00:01 < aandy_> mscdex: Sorry, I meant from github's perspective. Allowing custom html, and especially javascript, wouldn't make the project pages overall nice
00:02 < aandy_> mscdex: Have you tried in the github "blog"? You can at least modify some templates there, but not sure about actual posts
00:04 < mscdex> aandy_: that's what my question was in regards to, Github Pages. i wanted something easy to edit, but I also needed javascript. it looks like i'll end up doing some dynamic content generation based on js object literals instead...
00:07 < aandy_> mcavage: You could use octopress in conjunction with github pages
00:08 < aandy_> I do that, and I've seen another guy who does this aswel - and displays equations using mathjax (javascript)
01:38 < brandon_r> hey guys
01:40 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:43 < mscdex> http://mscdex.github.com/node-mysql-benchmarks/
01:43 < mscdex> fancy graphs!
01:43 < mscdex> :-D
01:43 < brandon_r> kool
01:43 < brandon_r> i like benchmarks
01:44 < brandon_r> and when the benchmarks say "Higher is better" or some variation of it
01:45 < mscdex> heh
01:45 < brandon_r> C > all
01:45 < brandon_r> Can you add a case for Erlang?
01:46 < brandon_r> It would be interesting to see how it does
01:46 < mscdex> i don't know erlang or have it installed ;-)
01:49 < brandon_r> oh
01:49 < mscdex> pull requests are welcome though :-)
01:50 < mscdex> although this is mostly focusing on node mysql clients
01:50 < mscdex> PHP and C are there for some extra comparison purposes
01:59 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
02:03 < bingomanatee>  hi noders
02:04 < bingomanatee> whats the most efficient way of testing wether an object has properties, or is "empty object" ({}) ?
02:06 <@Nexxy> bingomanatee, hasOwnProperty?
02:06 < deltab> Object.getOwnPropertyNames( obj ).length == 0 ?
02:06 < bingomanatee> thx
02:06 < mscdex> Object.keys(foo).length === 0?
02:09 < andrewdeandrade> What are the qualitative differences between bunyan and winston? I've searched for articles comparing the two but found absolutely nothing written that compares the two. For anyone that has tried both, which did you choose and why?
02:11 < lowtax> not all at once now
02:25 < maxogden> bunyan practiced animal husbandry with large rare breeds of ox and winston churchhill lead britain during world war two
02:55 < andrewdeandrade> maxogden: lol, that's what google told me too
02:56 <@Nexxy> ilol'd
02:58 < wavded_> is it just me, on linux and windows i can't get right-click 'Load profile' in Profiles tab in Chrome to load my heap dump file, no dialog popups up, that a bug in the browser?
03:05 < hillct> Good evening all. Has anyone had occasion to work with Nodeclipse https://github.com/lambgao/nodeclipse ? I've been looking for a good Node IDE, have tried Cloud9 and other web based ones, but never found one I'm happy with. Really all I'm looking for is syntax highlighting, an perhaps object expansion
03:06 < hillct> Any other suggestions as to what I should look at?
03:06 < astropirate> hillct, i haven't found a good ide for node.js either. I use either komodo edit or sublime
03:07 < astropirate> both are cross platform
03:07 < hillct> I found sublime a bit too austere
03:07 < hillct> then again, I've been editing in nano and vi mostly, so what's austere, right?
03:07 < astropirate> give komodo edit a try
03:07 < astropirate> lol
03:07 < hillct> will do. Thanks
03:07 < astropirate> why leave vi?
03:08 < hillct> I want syntax highlighting
03:08 < wavded_> hillct: vim?
03:08 < astropirate> i saw a few plugins for vim that provide better js support
03:08 < hillct> Is there a good JS highlighting ruleset for VIM?
03:08 < hillct> will have to look again...
03:09 < wavded_> i use: https://github.com/pangloss/vim-javascript
03:09 < wavded_> not perfect but good enough
03:09 < pringlescan> *swoons* it was so easy to make my node module browser compatible
03:09 < wavded_> probably most used one out there, there are some other indentation ones that fit better if you are comma-first
03:10 < mscdex> there's syntax highlighting for nano too
03:10 < mscdex> i use it all the time
03:10 < astropirate> nano for something other than editing configuration files? :O mind blown
03:10 < mscdex> :-)
03:11 < pringlescan> I remember coding Perl in Notepad… it was like using a type writer versus a word processor.
03:11 < mscdex> i didn't mean i use nano all the time, but i have its syntax highlighting enabled all the time
03:11 < pringlescan> I did have a type writer with spell check though… it was bitchin
03:11 < mscdex> i use gedit/notepad++ for heavy editing
03:11 < mscdex> nano is for quick changes usually
03:11 < wavded_> do people use v8 dev tools for inspecting heapdumps or anything else?  dev tools does seem to want to load mine
03:12 < pringlescan> does anyone use groc?
03:12 < wavded_> mscdex: you sounds like a linux guy
03:12 < mscdex> i do run Linux mostly
03:12 < astropirate> wavded_, what give it way? o_O
03:12 < mscdex> only reason I use Windows is for gaming still
03:12 < wavded_> ;)
03:12 < astropirate>  mscdex offtopic but what do you play?
03:12 < wavded_> yeah most do still, not much of a gamer anymore so i don't miss it too much
03:13 < astropirate> battlefield or ruse anyone? :D
03:13 < mscdex> astropirate: not a whole lot, mostly older games
03:13 < astropirate> ahh
03:13 < garrettwilkin_> all about vim
03:13 < garrettwilkin_> but, i haven't put much effort into the plugins
03:13 < hillct> I guess I was just in the dark ages...
03:13 < mscdex> astropirate: alien swarm, joint operations, serious sam 3, ut3
03:13  * hillct flips through the options
03:14 < garrettwilkin_> pasting is all messed up in vim for me at the moment, but i just deal with it
03:14 < wavded_> i'm pretty happy with my vim setup for node dev (pretty light weight, but pretty) - https://github.com/wavded/dotfiles
03:14 < mscdex> and sometimes a few others
03:15 < astropirate> I must attempt to learn morer vim
03:16 < astropirate> *more
03:16 < astropirate> last I tried there wasn't very good JS support
03:16 < astropirate> even with plugins
03:17 < wavded_> hmm.. yeah there is pretty good support imo - syntax, linting, searching (ack), taglist (somewhat)
03:17 < astropirate> Anyone know if there is autocomplete available for it now?
03:17 < wavded_> what kind of autocomplete?
03:17 < wavded_> like keywords or snippets or what?
03:18 < astropirate> hmm i know its hard with a language like JS..  like providing list of properties or methods of an object
03:18 < astropirate> i dont know if anyone has used QtCreator
03:18 < astropirate> I would pay $$$$ for something like that
03:18 < astropirate> but for JS dev
03:19 < wavded_> yeah not really that kind of autocomplete that i'm aware of
03:22 < garrettwilkin_> autocomplete would be sweet
03:23 < garrettwilkin_> i had to use netbeans for my day job
03:23 < garrettwilkin_> and its the first time I've used an IDE in a looooong time
03:23 < garrettwilkin_> the autocomplete and navigate to source stuff was pretty handy
03:24 < wavded_> netbeans may have decent autocomplete in that way now, not sure, i know they invested more in their js handling
03:24 < garrettwilkin_> so i just started using socket.io to make d3.js visualizations real timey
03:24 < garrettwilkin_> http://hc1.goodnyou.me is my really rough portfolio site
03:24 < wavded_> we use netbeans for JAVA (but even that I use vim for now (w/ netbeans in the background)
03:25 < garrettwilkin_> what do you guys use for something where you're trying to keep client's in sync?
03:25 < garrettwilkin_> client UIs?
03:26 < wavded_> i've used socket.io and sockjs (a little engine.io but not quite ready yet IMO)
03:27 < garrettwilkin_> i haven't looked at engine.io yet
03:29 < wavded_> i like that socket.io is getting broken up into pieces, engine.io should hopefully be a nice lightweight solution, i just couldn't get it up and running when i tried (used sockjs instead)
03:34 < garrettwilkin_> any advice on getting work in Node.js?
03:35 < rev_icon> Where are you located?
03:35 < wavded_> how flexible is your work environment, maybe you can bring node there?
03:36 < garrettwilkin_> Maine, USA
03:36 < garrettwilkin_> looking for remote work
03:36 < garrettwilkin_> not flexible at all
03:36 < garrettwilkin_> i work in the financial industry
03:36 < garrettwilkin_> TradeKing is apparently doing stuff with Node.js
03:36 < wavded_> ahh ok, yeah bummer, javascript and number... ;)
03:36 < garrettwilkin_> lol yea
03:36 < wavded_> number = numbers
03:37 < astropirate> yah... last year there was a lot of freelance work for node.js
03:37 < astropirate> but this year.. i think we are in the valley of disillusionment
03:37 < garrettwilkin_> yea I'm currently on a pretty good schedule of midnight hacking to up my skills
03:37 < garrettwilkin_> but ideally id find a master to learn from
03:37 < wavded_> i think there is a lot of work out there, i get offers fairly regularly, but almost all want relocation
03:38 < astropirate> http://en.wikipedia.org/wiki/Hype_cycle
03:38 < garrettwilkin_> yea, i don't want to relocate, so i guess that makes me picky
03:38 < rev_icon> so I'm reading the documentation for Jade, and I think I'm missing something.  Why would someone format html templates in this abstract way?  It seems bizzar to me.
03:38 < garrettwilkin_> i like "valley of disillusionment" better than trough
03:38 < garrettwilkin_> pigs eat from the trough
03:39 < garrettwilkin_> pigs are smart though
03:41 < astropirate> the great river of node.js freelance work has run dry :(
03:42 < garrettwilkin_> I've been using flatiron lately
03:42 < garrettwilkin_> im super impressed by the nodejitsu crew
03:49 < iggyz> hi
03:50 < iggyz> i have a problem with closing socket...
03:50 < iggyz> after i do this
03:50 < iggyz> socket.destroy();
03:50 < iggyz> i still get event 'end'
03:50 < iggyz> for that same socket
03:51 < iggyz> so the question is, how do you properly close the socket so it doesn't fire 'end' event later?
03:52 < iggyz> what i'm trying to do is keep only one of a kind user connected to the server (TCP)
03:52 < iggyz> all users have ID
03:52 < iggyz> and for example when i connect to the server in another tab
03:52 < iggyz> if user with same id is already connected
03:53 < iggyz> i copy all data from connected (old) client to new client
03:53 < iggyz> and i call socket.destroy(); on the old client
03:53 < iggyz> everything works fine so far
03:54 < iggyz> but when i close the tab (window) where the old client is connected
03:54 < iggyz> 'end' event gets fired
03:55 < iggyz> and that's a problem because i do client clean up on 'end'
03:55 < iggyz> so, what am i missing here? thanks
03:57 < maxogden> seems like a bug
03:57 < maxogden> http://nodejs.org/api/stream.html#stream_stream_destroy
04:01 < iggyz_> you mean this? http://nodejs.org/api/net.html#net_socket_destroy
04:03 < iggyz_> is there anyway to destory socket so it doesn't send events?
04:04 < iggyz_> some example how to properly clean up socket after destroy
04:04 < iggyz_> remove event listeners?
04:05 < mscdex> the 'close' event is always emitted no matter what
04:05 < mscdex> after end and after error
04:05 < mscdex> or if a TCP RST is sent iirc
04:06 < iggyz_> ok close event is not a problem but 'end' is :)
04:06 < mscdex> so use 'close' :-)
04:07 < iggyz_> hmm
04:07 < iggyz_> i'll give it a shot, just a sec, lemme test it :)
04:08 < mscdex> i mean, destroy() is going to emit close
04:08 < mscdex> you'll always get 'close' no matter what, like i said, so yeah
04:09 < mscdex> there's probably some property you can check for to see if it's been destroyed
04:09 < mscdex> ah there is, 'destroyed' :-)
04:09 < mscdex> socket.destroyed
04:10 < iggyz_> i have just added listener for close event, i'll let you know how it goes
04:10 < iggyz_> hmm
04:11 < iggyz_> ok i could also add if(socket.destroyed!=true){doCleanup)
04:11 < iggyz_> ?
04:11 < iggyz_> in 'end' event
04:11 < iggyz_> so if it is destroyed, it won't do a cleanup on connected client?
04:12 < mscdex> it's worth a shot.... btw you could just do `if (!socket.destroyed)`
04:14 -!- mode/#Node.js [+o piscisaureus] by ChanServ
04:14 < pec1985> Hello everyone, newbie here
04:14 < iggyz_> true ;)
04:14 < iggyz_> destroyed: true
04:15 < rev_icon> everyone was a newbie at some point
04:15 < iggyz_> works great
04:15 < iggyz_> thanks mscdex
04:15 < pec1985> rev_icon: thanks!
04:15 < pec1985> I'll watch for a bit before starting to ask questions ;)
04:15 < mscdex> pec1985: not gonna be much to watch at this hour in here ;-)
04:16 < pec1985> mscdex: only midnight in the east coast
04:16 < rev_icon> pec1985: better to spend your time coding dude!
04:16 < mscdex> yep
04:16 < mscdex> it's midnight and friday, people are either out or maybe sleeping
04:17 < pec1985> rev_icon: if you insist… here we go, node.js day 1, how do get stuff from my html file and manipulate it through the server side js ?
04:17 < astropirate> Why am I here? :(
04:17 < iggyz_> or still debugging at 6 am
04:17 < pec1985> lol
04:18 < mscdex> pec1985: there's jsdom and cheerio
04:18 < rev_icon> pec1985: I would take a few steps back and start from straight node and move forward from there until you get through setting up something like express and a tempting engine.
04:18 < mscdex> if you're talking about manipulating html as a dom on the server
04:18 < pec1985> I have express set up already
04:19 < astropirate> pec1985, there is jsDOM that lets you set up DOM on the server
04:19 < pec1985> ok, will google that, thanks
04:22 < mscdex> and here's cheerio fwiw: https://github.com/MatthewMueller/cheerio
04:22 < pec1985> cool
04:22 < iggyz_> strange
04:23 < jergason> Hey friends.
04:23 < mscdex> yo
04:23 < jergason> Running in to some problems initializing resources on server startup.
04:23 < iggyz_> mscdex: i get socket.destroyed = true no mather if i use socket.destroy before or not
04:23 < jergason> I have three our four different things I have to wait for before I can finish app set up, but I don't want to put my actual app code inside four layers of nested callbacks.
04:23 < jergason> This is an express app.
04:24 < mscdex> iggyz_: what exactly is involved in your 'cleanup' ?
04:24 < jergason> Do you guys have ideas for handling server start and initializing resources in a sane way?
04:24 < mscdex> jergason: pull them out into separate, logical functions?
04:25 < iggyz_> just setting uid key to null in dictionary
04:25 < mscdex> and/or use the 'async' npm package?
04:25 < mscdex> iggyz_: why not set it to null right after calling destroy() then?
04:26 < iggyz_> hmm, good point
04:28 < astropirate_> No harmony's "let" support in cloud9ide :(
04:29 < mscdex> what a "let"down? ;-)
04:31 < astropirate_> mscdex, http://www.youtube.com/watch?v=bcYppAs6ZdI&NR=1
04:32 < mscdex> :-)
04:33 < iggyz_> ok, mscdex, looks like it works with setting it to null :)
04:33 < iggyz_> it was not jus a dict key but worked fine anyway :)
04:34 < iggyz_> console.log("** user with same id online! **"); var oldClient = parent.parent.getClientWithUID(uid); oldClient.socket.destroy(); client.copyVarsFrom(oldClient); oldClient = null;
04:35 < iggyz_> after that on 'end' event if client is already null it won't do cleanup
04:35 < iggyz_> like removing client from existing room etc, :)
04:35 < iggyz_> thnx again :)
04:37 < mscdex> cool
04:43 < chrisdotcode> if I create an object like: global[foo], is it the same as if I had declared it as var foo?  would delete work on foo in the former?
04:44 < astropirate_> chrisdotcode, if there IS a global object it is the same. but you must treat it as an object property when deleting
04:45 < chrisdotcode> astropirate_: cause I was just testing it out, but `delete r` still deletes it.  How can I make a module function operate on the global scope without using global[foo]?  call(), right?
04:46 < chrisdotcode> astropirate_: er, how do I make it so that `delete r` would fail in the above example (r and foo are interchangable, sorry)
04:48 < astropirate_> chrisdotcode, threaten any developer that tries to delete it
04:48 < chrisdotcode> astropirate_: when was the last time you told a developer something and they listened? :p
04:48 < astropirate_> lol
04:50 < astropirate_> chrisdotcode, i could be wrong... but i don't think there is a way to do that
04:50 < chrisdotcode> so let's say I have a module function that I want to export.  and let's say I also want to be sure that function will be called from the global scope.  is that possible?
04:50 < astropirate_> chrisdotcode, no. thats the whole point of modules
04:51 < astropirate_> don't fight it :) its there for your good
04:52 < chrisdotcode> astropirate_: huh... alright, thanks...
06:57 < samholmes> What other cool frameworks are out there that you (the one reading this) would recommend besides express?
07:03 < milani> felixge's node-mysql always returns 0 for select count(*) from users; even when I have 130000 rows.
07:04 < samholmes> milani: Are you sure it does, I'm able to count rows just fine.
07:04 < samholmes> Are you doing result[0]['count(*)']?
07:04 < milani> it seems it's not about count. it always returns empy rowset
07:04 < samholmes> Also, why aren't you using an alias here?
07:04 < milani> because I'm testing:)
07:05 < samholmes> Strange.
07:05 < milani> select * from users returns an empty result but I have rows in my db
07:05 < MerlinDMC> milani, can you post some test snippet?
07:05 < samholmes> That's very strange. Do you have the right database selected?
07:06 < milani> yeah. no. It's my implementation bug.
07:06 < milani> ok guys I was wrong. it works fine.
07:06 < milani> sorry.
07:07 < mscdex> it happens late at night ;-)
07:07 < milani> ;)
07:07 < milani> it's morning here:D
07:07 < milani> it happens in the mornings even!
07:07 < astropirate> samholmes, i'm working on a content management framework that I think is cool. Otherwise i wouldnt be working on it! :D
07:07 < astropirate> but its a work in progress
07:08 < mscdex> ugh... benchmarking slow modules sucks
07:09 < samholmes> astropirate: Like a CMS?
07:10 < samholmes> astropirate: intersting
07:10 < AAA_awright> astropirate: Any code for you to show me?
07:10 < samholmes> I'm looking to build a simple self-hosted app that I can publish to github.
07:22 < samholmes> What's the easiest way to make ad-hoc node_modules?
07:22 < samholmes> I say, what's the point of a ./lib directory when you could just put your libs in the node_modules directory, right?
07:23 < samholmes> However, I feel like there are so many things to think about when writing a module, the package.json file etc.
07:23 < mscdex> node_modules is more for dependencies
07:23 < samholmes> Not for libs?
07:23 < mscdex> external dependencies
07:23 < samholmes> So, I should keep lib?
07:24 < mscdex> most people use lib/ to put all of their .js files in, the exception possibly being if there is only one file, in which case some people put that in the root
07:24 < mscdex> and src/ for C++ code
07:51 < milani> can anyone help me to generate the equv. of this command in node:
07:51 < milani> openssl smime -sign -in input.mobileconfig -out signed.mobileconfig -signer my.crt -inkey my.key -certfile middle.crt_bundle -outform der -nodetach
07:51 < milani> is it even possible? ( without calling exec of course :D ! )
07:54 < jetienne> hi
07:55 < jetienne> q. i need a little tool about to watch my source.js and to relaunch the server every time the source is modified. any suggestion of tools ?
08:07 < milani> jetienne, watchr module.
08:07 < jetienne> milani: thanks looking
08:08 < milani> jetienne, http://toolbox.no.de/packages/watcher
08:08 < jetienne> milani: it doesn't seem to have a command line tool. am i missing something ?
08:08 < milani> with some little changes you can do that.
08:08 < jetienne> oh i was look at https://github.com/crcn/node-watchr/tree/master/lib
08:09 < jetienne> oh this isn't in js
08:09 < jetienne> im lost :(
08:16 < samholmes> I feel like I'm dependent on express because that's how I "got into" node dev
08:17 < samholmes> How can I fix this?
08:18 < deoxxa> use more things
08:18 < deoxxa> do other stuff
08:19 < deoxxa> express is cool for web things, so maybe you don't want to completely drop it
08:19 < deoxxa> but there's a whole universe of other types of applications out there
08:19 < samholmes> express is a routing lib at it's core
08:20 < deoxxa> well
08:20 < deoxxa> express is connect at its core
08:20 < deoxxa> to be accurate :P
08:21 < samholmes> right
08:21 < samholmes> but, it's all about routes.
08:21 < samholmes> and HTTP
08:21 < deoxxa> i'm kind of confused, what are you saying exactly
08:22 < samholmes> Well, I'm looking to do something a little different.
08:22 < deoxxa> well, do... it
08:23  * deoxxa looks around
08:23 < samholmes> What if you want to have code that handles certain routes, but not entirely HTTP; websockets RPCing the code for a specific route and falling back to HTTP if pushState wasn't used.
08:23 < deoxxa> ...what
08:24 < deoxxa> dude you're still just talking about web things
08:24 < deoxxa> broaden your scopes a little bit
08:24 < deoxxa> i'm going to take a bit of a guess here, but it sounds like you want to make sure you know how to use node properly outside of the express world, right?
08:25 < samholmes> deoxxa: You're right. I should think outside of the spectrum of web things.
08:25 < deoxxa> it'll be easier, i think
08:26 < deoxxa> if you throw yourself into a situation where express (or anything similar) simply won't help, you'll either find that you already know how things work, or you'll have a great opportunity to find out
08:26 < deoxxa> maybe look into writing some client code, something that interacts with an external API might be a good starting point
08:27 < deoxxa> pick an API with no client library (or one already, nothing wrong with options), write some code to interact with it
08:27 < deoxxa> pick out the patterns of what you're doing over and over again, modularise it
08:27 < samholmes> So, like a twitter client or something
08:27 < deoxxa> in the process you'll learn a whole bunch of stuff, and you might end up with a really cool lump of code at the end of it
08:27 < deoxxa> that'd work, yeah
08:28 < deoxxa> there's plenty of documentation on how their api works
08:28 < samholmes> I understand
08:28 < deoxxa> \o/
08:28 < samholmes> haha, you're funny. ;P
08:29 < samholmes> I was also thinking of just reading the node.js docs and getting the natives down like the back of my hand.
08:29 < deoxxa> that comes with time, you'll just absorb that naturally if you're using it a lot
08:29 < samholmes> right
08:29 < deoxxa> i mean i've been doing node stuff for nearly 2 years now and i still keep the docs open in a tab in my browser
08:30 < deoxxa> it's easier to ctrl+f than to memorise everything - you'll pick up little tricks and stuff along the way anyway, and they're probably way more important to keep in your head than "what are the options for creating a tls server socket"
08:34 < samholmes> I see
08:35 < samholmes> deoxxa: I need to understand streams more in order to understand dnode
08:35 < samholmes> I'm very interested in dnode
08:35 < deoxxa> streams are awesome
08:35 < samholmes> deoxxa: are streams a node.js specific concept?
08:35 < samholmes> that's a noob question, der
08:35 < deoxxa> not strictly
08:35 < deoxxa> if you've ever used a terminal, you probably already know how they work
08:36 < samholmes> I've used a terminal, but not enough to know about streams
08:36 < deoxxa> $ ls -l | grep cats
08:36 < samholmes> ah
08:36 < deoxxa> that's a stream \o/
08:36 < samholmes> yes
08:36 < samholmes> \o]
08:36 < deoxxa> basically `ls -l' is a "readable stream", and "grep cats" is a "writable stream" and a "readable stream"
08:36 < samholmes> So, it's a bash thing?
08:36 < substack> deoxxa: there's stuff that pipes in the shell do that node pipes also do but are not well known
08:37 < substack> like shell has its own backpressure mechanism
08:37 < samholmes> err, what's the diff between bash, shell, terminal and console. >,<
08:37 < deoxxa> substack: correct, but the basic concept is the same
08:37 < substack> 64k chunks I think it is
08:37 < samholmes> substack: is it documented?
08:38 < substack> samholmes: https://github.com/substack/stream-handbook
08:38 < substack> node streams not bash pipes
08:39 < samholmes> I meant the pipes from the shell
08:40 < samholmes> what's backpressure?
08:41 < substack> when the writable stream tells the readable stream being fed into it to slow down
08:45 < samholmes> When it comes to dnode, the .on method is inherited from the EventEmitter type?
08:45 < substack> samholmes: found it, man 7 pipe
08:45 < samholmes> man 7 pipe?
08:46 < substack> samholmes: who cares about inheritence, .on() acts the same way as EventEmitter whether or not it actually is one
08:46 < substack> you just listen for certain events which are documented
08:48 < samholmes> substack: why is dnode's api like:   var d = dnode.connect(port); d.on('remove', cb); and not just: dnode.connect(port, cb); ?
08:49 < substack> samholmes: because .connect() would specify the type of connection to use
08:49 < substack> like tcp
08:49 < substack> but then you couldn't use it over other types of connections
08:49 < substack> which doesn't make sense since dnode is just an algorithm to handle callbacks and json messages
08:49 < samholmes> what's a type of connection; I'm not too familiar with TCP?
08:51 < substack> tcp is not the only kind of streaming thing
08:51 < substack> you could have a connection to a browser over websockets
08:52 < substack> or a connection to a process over stdin
08:52 < substack> it's silly to hard-code abstractions against just 1 kind of stream
08:52 < substack> when all streams act the same way
08:53 < samholmes> I figured
08:53 < samholmes> I think that's what's cool about dnode. :D
08:54 < samholmes> I'm also very interested in browserify. But I think browserify needs a sort of collective effort behind it to write modular pieces to replace frameworks like jQuery, prototype, mootools, sencha, etc.
08:55 < substack> why do those need replaced?
08:55 < samholmes> ex: domready module replaces one aspect of jQuery.
08:56 < samholmes> I think they could be replace in a more modular package so that way you can use what you need rather than just get everything all bundled up in a compressed framework like jQuery.
08:57 < samholmes> Also, if something fails at doing something, there could be a completely different approach to solving the problem. Each module would try to remain as independently reusable as it can for these sort of changes.
08:57 < substack> monoliths are not steady-state in a competitive package ecosystem
08:57 < samholmes> what are you calling a monolith?
08:58 < substack> I'm describing monoliths
08:58 < samholmes> Why?
08:58 < samholmes> I really don't see what I'm talking about as a form of a monolith, if that's what you're inferring.
08:59 < substack> because they will always face new challenges from a slightly different set of opinions about how best to curate the contents
08:59 < substack> whereas there are a rather more finite number of ways to structure the base algorithms
08:59 < samholmes> But, how is that relevant to what I'm saying? Where does a monolith come into the picture?
09:00 < substack> you mentioned frameworks
09:00 < substack> frameworks are monoliths
09:00 < substack> always
09:01 < samholmes> exactly, I'm actually apposing them, if you will, with my proposal
09:02 < samholmes> instead of monolithic frameworks such as jQuery, or Sprout Core, it would be nice to see a lot of these functionalities in independent modules.
09:02 < samholmes> All that is necessary is a form of organization, or a directory that lists these modules.
09:03 < substack> I was commenting that it is not merely nice it is steady-state
09:03 < substack> it is inevitable
09:03 < samholmes> what is "it"? xP
09:04 < Vbitz> are there any fixes for socket.io on node 0.9.1
09:04 < deoxxa> substack: you're getting much more political as time goes on
09:05 < deoxxa> substack: what happened to code and robots
09:05 < substack> deoxxa: I've always espoused these opinions it's just that people listen to them more nowadays
09:06 < substack> I've also have become more skeptical of complexity as time goes on
09:06 < substack> deoxxa: I'm haven't even ranted at ecma for a while
09:06 < deoxxa> heh
09:09 < astropirate> speaking of ecma  when is --harmony going to be on by default. any time frames?
09:10 < astropirate> nobody knows? :S
09:12 < samholmes> Is there any chance a stream's data might be lost when piping to a writable stream?
09:18 < samholmes> substack: you should finish the backpressure section on the stream-handbook, haha. ;)
09:19 < samholmes> because that's what I'm most interested in understanding.
09:21 < squeakytoy> This youtube ad i just saw sounds like it was for me :'(  https://dl.dropbox.com/u/8183146/temp/virgin_land.png
09:22 < zak_> is Express considered to be pretty "light-weight"? 
09:23 < timoxley> zak_ I would say yes, but it does require you to drink the connect middleware kool-aid
09:24 < zak_> what are some alternatives to connect? (1 will do so I can go google)
09:25 < zak_> actually dw, i'll just google that too
09:25 < zak_> thanks
09:29 < jetienne> squeakytoy: i installed dropbox yesterday, how do you get such a direct link ?
09:29 < squeakytoy> windows?
09:30 < jetienne> squeakytoy: I'm running macos
09:30 < squeakytoy> hm
09:30 < jetienne> https://www.dropbox.com/s/ngmglf9dgbvnd5l/tQuery.Animation.html i get only this kind of link
09:30 < jetienne> nothing direct
09:30 < squeakytoy> for windows, if its a file in the Public folder, i right click and pick "get public link"
09:32 < jetienne> squeakytoy: i got a 'get link' at the same place but it gives me similar links http://www.dropbox.com/s/zt45pi080hbqayv/MIT-LICENSE.txt
09:32 < jetienne> squeakytoy: do you pay for the service ?
09:32 < squeakytoy> nope
09:33 < jetienne> squeakytoy: ok thanks for your help. i will look more
09:33 < squeakytoy> https://forums.dropbox.com/topic.php?id=6022
09:33 < squeakytoy> you shared the public folder?
09:34 < squeakytoy> sorry, i dont know for mac os x
09:37 < jetienne> "You shared the public folder, and that prevents your getting URLs for files. So you need to unshare it." i think the answer is in there, but i don't get it :)
09:37 < chakrit> I think you can get link for any file now even ones outside the public folder.
09:37 < samholmes> I'm watching a Tane Piper video explaining dnode..He made it sound like shoe/sockjs isn't as browser-compatible as socket.io; did I misunderstand him, or is this the case?
09:38 < jetienne> squeakytoy: chakrit:  i got a "~/Dropbox" folder.. is that the "public folder" ?
09:40 < nohu> Dopbox/public
09:40 < chakrit> jetiennce: no you will get a ~/Dropbox/Public and that's the public folder
09:40 < chakrit> not sure if that has chagned though
09:40 < substack> samholmes: sockjs has the same browser targets as socket.io
09:40 < chakrit> been using it for ages
09:42 < jetienne> chakrit: squeakytoy: thanks it worked!! https://dl.dropbox.com/u/15703767/Screen%20Shot%202012-08-25%20at%208.14.01%20AM.png :)
09:43 < chakrit> jetienne: lol, that's that ur working on?
09:44 < jetienne> chakrit: yep. webgl stuff
09:44 < chakrit> cool :)
09:44 < jetienne> http://jeromeetienne.github.com/demo.ridinglight/ live version :)
09:44 < jetienne> chakrit: thanks :)
10:14 < thanpolas> any authom lib folks?
10:21 < samholmes> Does express 3.x come shipped with any of the view modules?
10:29 < chakrit> samholmes: no, afaik. if you use the commandline to generate the app it'll add one in package.json for you
10:34 < samholmes> ah
10:34 < samholmes> How does browserify wrap the native node modules?
10:35 < samholmes> Some things like Buffer and Stream seem very low level to be duplicated in the clientside
10:59 < austincheney_> can I ask NPM questions here?
11:00 < skiz> austincheney: no… see rule #1
11:00 <@Nexxy> austincheney_, you can aks any kind of question your heart desires
11:00 < skiz> austincheney: which is… "don't ask to ask, just ask"
11:00 <@Nexxy> austincheney_, the only limitation is your own imagionation
11:00 <@Nexxy> -o
11:01 < austincheney_> i recently changed my NPM password on the NPM site, but how do i change it in my NPM install?
11:01 < deoxxa> imagionatin still isn't a work, Nexxy
11:01 < deoxxa> er
11:01 < deoxxa> word
11:01 < deoxxa> well that was a disaster
11:01  * deoxxa sighs
11:01 <@Nexxy> I would think you'd be used to that by now
11:02 < deoxxa> i'm gonna go ahead and blame it on the copious amount of studying i've been doing today
11:02 <@Nexxy> I KEED I KEED
11:02 < skiz> austincheney: was your password less than 6 chars?
11:02 < deoxxa> my brain is like, you know those ads where they had the egg
11:02 < skiz> austincheney: btw don't answer that  :P
11:02 < deoxxa> and they were like "this is your brain on drugs"
11:02 < deoxxa> it's like that
11:02 < deoxxa> except with studying
11:02 < deoxxa> :<
11:02 <@Nexxy> I kind of feel the same way
11:02 <@Nexxy> except with having been in a night club 
11:03 <@Nexxy> IRC feels strangely quiet
11:03 < skiz> Nexxy: your brain on other people's 3rd party drugs?
11:03 < deoxxa> on the plus side, i've done like 400 anki cards today
11:03 < deoxxa> and i've written probably a thousand kanji
11:03 <@Nexxy> skiz, 3rd party drugs are the most exciting
11:03 < deoxxa> my hand is literally trying to kill me
11:04 <@Nexxy> literally.
11:04 < deoxxa> like if i go to sleep, it will come to life and strangle me
11:04 <@Nexxy> literally.
11:04 < deoxxa> just so i can't put it through this kind of torture again
11:04 < deoxxa> yes, literally
11:04 <@Nexxy> ... literally.
11:04 < skiz> wow… literally...
11:04 <@Nexxy> not figuratively?
11:04 < skiz> freeze it in ice, it's your best bet for survival
11:04 < deoxxa> it's taking all i've got to stop it from just hitting me in the face over and over right now
11:05 < deoxxa> and assuming that one can die from pain alone, it's doing its darndest to actually achieve the goal of killing me
11:05 < deoxxa> so yeah
11:05 < deoxxa> literally.
11:05 <@Nexxy> I'm glad we had this talk.
11:06 < skiz> I feel much better now
11:06 <@Nexxy> how drunk is mmalecki?
11:06 < deoxxa> i don't
11:06 <@Nexxy> on a scale of 7-12
11:06 < skiz> 32^2
11:08 <@Nexxy> deoxxa, 誰もが本当に遠くても、より多くのように見えるやってみたい行っても使用することを決定してきました？
11:09 < rvagg> hand hurt now Nexxy?
11:10 < deoxxa> i'm going to have to admit that didn't make a whole ton of sense to me
11:10 <@Nexxy> not even
11:10 <@Nexxy> rvagg, practice
11:10 < skiz> هناك 2 أنواع من الناس في هذا العالم. أولئك الذين يعرفون كيفية استخدام خدمات الترجمة وأولئك الذين لا يفعلون ذلك.
11:11 <@Nexxy> skiz speaks words of wisdom
11:11 < rvagg> Stands out like a fair dinkum also lets get some mate. Grab us a oldies flamin he's got a massive blowie. As cross as a cark it where as busy as a mozzie. Gutful of bloody oath! mate get a dog up ya thongs. You little ripper bluey flamin he hasn't got a buckley's chance. Lets throw a mullet flat out like a dunny. As stands out like shonky where as cross as a bail up. As busy as a outback bloody he's got a massive dead horse. Tren
11:11 < rvagg> t from punchy wuss flat out like a esky. 
11:11 < shanse> םבצןדבג טם ןדב רמקפםיוק קעכגסז
11:11 < rvagg> that's my contribution to this foreign language session
11:12 <@Nexxy> rofl
11:12 < deoxxa> studying and making no progress is depressing
11:12  * deoxxa sighs
11:12 <@Nexxy> deoxxa, I bet IRC helps you focus
11:13 < astropirate> وهناك أولئك الذين فعلا تتكلم العربية :)
11:13 < deoxxa> not particularly
11:14 <@Nexxy> I was being facetious
11:14 < skiz> على الأقل أنها ليست مؤشر من Google
11:14 < skiz> أو هو؟
11:15 < skiz> g'nite 
11:15 < astropirate> la
11:15 < astropirate> لا
11:31 < mayank> hi
11:31 < astropirate> hello
11:43 < astropirate> So, is there really no choise but to use webstorm IDE for smart auto complete with javascript? :(  I r depressed
11:43 < astropirate> choice*
11:58 < zomg> Anyone happen to know how to enlarge an image using imagemagick, but not resize the image, and instead just fill in say black?
12:01 < TehShrike> astropirate: I don't know - if you find another answer, let me know!
12:01 < astropirate> TehShrike, I just might write one :D
12:01 < TehShrike> :-o
12:01 < TehShrike> IDEs are hard!
12:01 < astropirate> nahh not a full blown ide
12:01 < TehShrike> Personally, I'm looking forward to Light Table
12:01 < astropirate> just a lightwight editor
12:02 < astropirate> a smart auto completer is really all I want
12:02 < astropirate> and ability to easily them
12:02 < astropirate> *theme font color etc
12:02 < TehShrike> syntax highlighting
12:02 < astropirate> I wrote one.. a while ago. it was based on Scintilla. the autocompletion sucked. i shall try again.. but notuse scintilla this time
12:03 < astropirate> well syntax highliting is a given :)
12:03 < TehShrike> You'll need some concept of a workspace it you want to autocomplete stuff from other files, or I guess you could just parse require() calls if you'll just be using it for node
12:04 < astropirate> yup
12:04 < astropirate> its a node only
12:04 < astropirate> i'm just scratching my itch. if others want to contribute they would be welcome to do so
12:05 < nullpointer> what OS?
12:05 < astropirate> Probably Linux first 
12:05 < astropirate> then windows
12:05 < TehShrike> <-- Windows
12:05 < nullpointer> Have you looked in to Sublime Text?
12:05 < nullpointer> I missed the first part of your conversation so forgive me if it was mentioned
12:06 < astropirate> nullpointer, yah, its nice. but autocompletion is no good
12:06 < nullpointer> Are you using the package manager?
12:06 < nullpointer> I added another autocomplete and it rules now
12:06 < TehShrike> :-o
12:06 < astropirate> o_O
12:06 < nullpointer> http://wbond.net/sublime_packages/package_control
12:07 < nullpointer> SublimeCodeIntel is the package
12:07 < astropirate> This is the one I made before  http://mansoorsayed.com/Vortex/Vortex.png  Looks sexy if i say so myself :D
12:07 < nullpointer> it builds autocomplete from an entire directory structure
12:07 < nullpointer> dude that is looking sweet
12:07 < astropirate> nullpointer, it is intellegent auto complete?  like if I have an object it will autocomplete with its methods/
12:08 < astropirate> or just give me its prototype
12:08 < nullpointer> I don't think it's that smart
12:08 < nullpointer> https://github.com/Kronuz/SublimeCodeIntel
12:08 < TehShrike> That would be really tough to pull off depending on how the object was constructed
12:08 < nullpointer> I was just thinking that
12:08 < nullpointer> JS would be especially tricky as it is not statically typed
12:10 < astropirate> yah thats the pain point with other editors that deliver a generic autocompletion feature
12:10 < astropirate> none of them is really geared towards JS
12:10 < TehShrike> You'd pretty much need a full-fledged interpreter to be able to have full autocomplete for object properties, wouldn't you?
12:11 < astropirate> I'm hoping this project might be of use: https://github.com/ajaxorg/treehugger
12:11 < TehShrike> Which should I read through first to get started on becoming a Sublime Text pro user, the official docs or the unofficial ones? http://www.sublimetext.com/docs/2/ or http://docs.sublimetext.info/en/latest/index.html
12:15 < nullpointer> does my NODE_PATH need to have /node_modules at the end of it?
12:47 < mephju> Hi! On my web  page I have a form where the user can paste a url. I would like to load an image, title and some text from that url just like facebook does when you post a link... How can I do this? And is it possible to do in the browser?
13:16 < NuZZ> ugh i can not figure this irc thing out, for a bot I am making.
13:17 < NuZZ> mephju
13:17 < NuZZ> google scraping
13:17 < NuZZ> and, i am not 100% if it's possible browser-side, pretty sure that is a security issue
13:20 < mephju> NuZZ, yeah I searched for crawling and scraping already. Thanks for responding! 
13:21 < astropirate> mephju, you must use a web service to do this because of same origin policy restrictions that won't let you fetch http documents that are on a different domain via AJAX
13:22 < mephju> how would it work with a webservice? I mean the service has another url as my server
13:22 < mephju> than*
13:22 < mephju> another domain than my web server*
13:22 < ThiefMaster> hi, what's the preferred way to access functions of a system library? node-ffi or writing a node addon?
13:23 < astropirate> mephju, you send the URL to *your* server and your server scraps the page and returns content to  you 
13:23 < NuZZ> mephju, send json from the client
13:23 < NuZZ> or recieve it rather
13:24 < mephju> astropirate, that's what I thougt. The word webservice confused my a bit because I assumed you mean a 3rd party service. alright then.
13:24 < astropirate> :D
13:24 < NuZZ> CLIENT -> posts message > clientside js checks to see if message has link. -> pull link out -> send to herp.com/parseUrl -> parse it, if u can scrape great -> send back json to client -> masturabte
13:25 < NuZZ> or you know, types message
13:25 < mephju> phantomjs is probably overkill for my needs. do you have any recommendations?
13:25 < NuZZ> jquery.
13:25 < astropirate> mephju, jsdom hasn't failed me
13:25 < astropirate> it is goign to be resource heavy... as it has to construct a dom fro every request
13:26 < NuZZ> anyone know irc spec here?
13:26 < NuZZ> we all get sent this right
13:26 < NuZZ> :moorcock.freenode.net 251 Botty5001 :There are 216 users and 67619 invisible on 33 servers
13:26 < NuZZ> :moorcock.freenode.net 252 Botty5001 45 :IRC Operators online
13:26 < NuZZ> for some reason my regex cant match the first part to strip it
13:27 < NuZZ> it's /^:[^ ]+ +/
13:27 < astropirate> NuZZ, how does that make you feel?
13:27 < NuZZ> really damn basic
13:27 < NuZZ> :(
13:27 < NuZZ> makes me wanna kill myself because it SHOULD
13:29 < astropirate> NuZZ, what is your expected value
13:29 < NuZZ> what i pasted
13:29 < ThiefMaster> NuZZ: i wouldn't use regex to parse the irc protocol.
13:29 < ThiefMaster> simple string functions are much easier for this purpose and do the job perfectly fine
13:30 < NuZZ> these ARE simple string functions
13:30 < NuZZ> i need to check if the colon is there with regex anyway
13:30 < ThiefMaster> no you don't
13:30 < NuZZ> so methinks it's a special encoded colon or something
13:30 < ThiefMaster> and nope, it's a plain colon
13:31 < mephju> ok. astropirate & NuZZ, really nice of you guys to help a newbie like me get along with node.js. Thx!
13:32 < astropirate> mephju, anytime
13:32 < NuZZ> if (text.match(/^\:/)) {
13:32 < NuZZ>   console.log('yes!' + text);
13:32 < NuZZ> } else {
13:32 < NuZZ>   console.log('derp!' + text);
13:32 < NuZZ> }
13:33 < NuZZ> for some reason, the yes! and derp! dont always echo
13:33 < NuZZ> its damn confusing
13:34 < NuZZ> oh damn I think I may know
13:35 < NuZZ> yes!:moorcock.freenode.net 001 Botty5001 :Welcome to the freenode Internet Relay Chat Network Botty5001
13:35 < NuZZ> :moorcock.freenode.net 002 Botty5001 :Your host is moorcock.freenode.net[50.22.136.18/6667], running version ircd-seven-1.1.3
13:35 < NuZZ> while in console it is on two lines
13:35 < NuZZ> methinks its not being ... i dont even
13:36 < NuZZ> multilines responses. it all makes sense now :p
13:39 < ThiefMaster> whyn trying to register on npmjs.org: "There was a problem! The server said: Failed creating account. CouchDB said: not_found"
13:39 < ThiefMaster> really great error :p
13:39 < NuZZ> the source code is avaliable, go fix it? :p
13:39 < ThiefMaster> ah nvm, looks like it was a temporary error
13:41 < zak_> can you use require in place of other more proper routines (like fs.readFile) to read JSON files?
13:41 < `3rdEden> oh, i didn't know it was allowed to override peoples packages in npm
13:41 < freewil> zak_, yes require will read json files since 0.6 i think
13:42 < zak_> does it work if the file changes?
13:42 < zak_> or do the require calls cache the contents?
13:42 < zak_> i'm just wondering if i can cheat and use require instead of reading the file "properly"
13:42 < freewil> if the file changes i would not recommend using require
13:42 < freewil> i think you would have to do something hackish to refresh the cache
13:43 < zak_> ok, i'll just do it properly. thanks
13:55 < qballer> Hi guys did you have a chance to stream binary data using socket.io ? 
14:02 < mscdex> qballer: well, you can always encode the data, but that can be slow. otherwise you'll have to rely on ArrayBuffer and websocket support for real binary data
14:02 < mscdex> if socket.io allows binary data at least
14:02 < chakrit> Anyone getting broken dependency for request@2.11.0? I keep getting invalid/extraneous stuff when installing this particular version.
14:08 < chakrit> related: https://github.com/mikeal/request/issues/313
14:10 < qballer> It does allow it mscdex 
14:10 < qballer> I don't really get what you mean by that... Example? 
14:12 < `3rdEden> mscdex qballer it doesnt support binary
14:13 < `3rdEden> check out binary.js instead
14:53 < qballer> Is there any support for Buffer in the browser
15:13 < thread> Hi noders! .. So I want to basically proxy a file on the 'net. Say the server is half through downloading this large file.. Can anyone see how I could give a requesting client the first part of the file super quick, then slower once it catches up to the server's download?
15:13 < thread> does something like that sound feasible ?
15:16 < TehShrike> Well, you could cache all the files that you download for a certain bit of time, and stream from the cache instead of a new http.get call if you have the file laying around cached
15:16 < thread> TehShrike: that is the plan! ...this is sort of an interesting edge case
15:16 < thread> where the server is in the middle of downloading the exact file being requested
15:17 < thread> i'm attempting to build a web-based podcast client/proxy as my first node project
15:17 < thread> sort of jumping in head first, i suppose :)
15:18 < TehShrike> So you'll have a stream from your http.request call, presumably
15:20 < TehShrike> You'll be sending it back to the client that requested data, but you could also watch the event emitter for data and send it to a cache of some sort
15:20 < TehShrike> Perhaps some smarter people here would know of libraries to make that easier, though I don't imagine it would be too bad with node.js out of the box
15:21 < thread> TehShrike: yea, it seems like I'd have to open the file on the disk and once I get to the end, **if i notice the same file is currently being downloaded to the server**, grab that pipe and stick the client's download over it to finish the client's transfer
15:22 < thread> I'm just looking for someone to tell me this is possible I guess.. heh- I don't want to chase my tail for hours
15:22 < TehShrike> I'd probably default to caching in memory instead of disc, I suppose, but that's just me
15:23 < thread> for 500Mb files?
15:23 < TehShrike> Depends on the situation, I suppose.  500MiB is quite a bit
15:23 < thread> right. we could be talking big internet video here
15:24 < ThiefMaster> ugh, why exactly could i register an account using 'npm adduser' that does not fit into the "Must be all lower-case, and not have any non-urlsafe chars." requirement on https://npmjs.org/signup?
15:24 < ThiefMaster> now i have two accounts, one all-lowercase, one like my nick here. that's just great.
15:24 < TehShrike> ThiefMaster: I think the "all-lowercase" restriction was added later, and isaacs tried to grandfather in the old account names
15:25 < TehShrike> I'd talk to him about getting those merged
15:25 < ThiefMaster> ok, thanks
15:25 < Ancien> hi
15:26 < thread> hi, Ancien 
15:26 < ThiefMaster> isaacs: ^ - usernames are "ThiefMaster" and "thiefmaster"; please merge them
15:26 < Ancien> i want to send data from node.js server to my php server with an http post or get request but i didn't find how can i send data
15:27 < TehShrike> Ancien: http://nodejs.org/api/http.html#http_http_request_options_callback
15:28 < BronzeByte> Hello
15:29 < Ancien> and i put my data in headers  TehShrike ?
15:30 < TehShrike> Ancien: "http.request() returns an instance of the http.ClientRequest class. The ClientRequest instance is a writable stream. If one needs to upload a file with a POST request, then write to the ClientRequest object."
15:31 < Ancien> a ok so i make that : req.write('data\n');
15:34 < BronzeByte> Does anyone have a creative idea on how to bind a directory using node without issueing mount --bind
15:35 < Ancien> TehShrike how can i get back data that send with node.js in php ?
15:36 < TehShrike> uh, probably with the magical $_POST variable in PHP?
15:36 < Ancien> sorry i'm tired it's just logic
15:36 < BronzeByte> The right way
15:36 < BronzeByte> is by doing
15:36 < BronzeByte> http_get_request_body()
15:36 < BronzeByte> in PHP
15:36 < TehShrike> Hey, that guy sounds like he knows what he's talking about!
15:37 < TehShrike> Listen to him, not me!
15:37 < BronzeByte> The best practise is too pass stringified JSON into PHP using post and calling json_decode(http_get_request_body()) in PHP
15:38 < BronzeByte> Alternatively, stick to the HTTP protocol and use key=value&anotherkey=value so PHP can natively interpret it and put it in the $_POST variable
15:38 < BronzeByte> Ancien, did that help you?
15:39 < Ancien> i didn't test it, i have to do a lot of things now i have 30windows open 
15:40 < BronzeByte> Well, Ancien, what data do you want to transmit?
15:41 < BronzeByte> isaacs, what is your opinion about modules using C++ while it could be done in node with same performance?
15:42 < Ancien> a lot because i'm making a browser game
15:43 < BronzeByte> ryah, what is your opinion about modules using C++ while it could be done in node with same performance?
15:47 < astropirate> What documentation generator are people using?
15:47 < astropirate> I've been using naturaldocs but... its very inflexible with its output
15:49 < jergason> I feel like an imposter.
15:49 < jergason> I have been a dev for a few years now and still don't get how authentication with sessions and cookies works.
15:49 < BronzeByte> Some people... http://www.youtube.com/watch?v=1e1zzna-dNw
15:49 < BronzeByte> jergason, I can explain you
15:50 < jergason> BronzeByte: that or point me to a good explanation
15:50 < jergason> would be rad
15:50 < jergason> so once you verify a user's credentials
15:50 < jergason> you create a cookie on their machine which has a session id or something?
15:51 < BronzeByte> Yes
15:51 < jergason> and then destroy that cookie and the sessionId from the db when they log out?
15:51 < BronzeByte> But
15:51 < BronzeByte> No
15:51 < BronzeByte> There is a very robust way of doing browser authentication in node.js
15:51 < BronzeByte> The entire session system is
15:51 < BronzeByte> Basically
15:51 < BronzeByte> You just drop a random hash/id in someone´s cookies
15:52 < BronzeByte> then you make an associative array
15:52 < BronzeByte> And just dump session related data in there 
15:52 < jergason> but you want that data persisted to the db, right?
15:52 < BronzeByte> No necesarilly
15:52 < BronzeByte> When you have a login session
15:52 < BronzeByte> It doesn´t really matter that the session gets lost
15:52 < jergason> ?
15:52 < BronzeByte> For example due though your node server crashing
15:53 < jergason> wouldn't that kick them out?
15:53 < BronzeByte> You can keep sessions in RAM
15:53 < BronzeByte> It would
15:53 < jergason> okay, that just sounds like an implementation detail
15:53 < BronzeByte> But most likely, your server will rarely restart or crash
15:53 < BronzeByte> Alternatively, you can write the session array to a file using JSON
15:53 < jergason> but anyways, when they log out, you just delete the session key
15:53 < BronzeByte> Yes
15:53 < jergason> what about the cookie?
15:53 < BronzeByte> Do you know how to set cookies?
15:54 < jergason> it is with HTTP headers, right?
15:54 < BronzeByte> Yes
15:54 < BronzeByte> Set-Cookie
15:54 < jergason> but do you delete the cookie when they log out?
15:54 < BronzeByte> No
15:54 < BronzeByte> As this would be a global session, you would only delete the username from your local database
15:54 < jergason> wut
15:54 < jergason> what do you mean a global session?
15:55 < BronzeByte> Not just for authentication
15:55 < jergason> what else would you use the cookie for beside auth?
15:55 < jergason> and auth-related things?
15:55 < BronzeByte> You could.. er..
15:55 < BronzeByte> Store visting data in it
15:55 < jergason> ah
15:55 < aandy_> Tracking related things
15:56 < BronzeByte> It´s pretty much a server side session system
15:56 < jergason> so you want to know if someone with the same id visited the site
15:56 < jergason> even if they have never logged in or something
15:56 < BronzeByte> Yep
15:56 < BronzeByte> That´s a nice example
15:56 < jergason> what about encrypting the sessionId?
15:56 < BronzeByte> Not needed
15:56 < jergason> It seems like if it is just being sent in the clear it would be really easy to hijack
15:56 < BronzeByte> as all data is kept server side
15:57 < jergason> someone just sniffs your session id, and sends a cookie with that id and they are logged in as you, right?
15:57 < BronzeByte> the sessionid attaches visitors to a server side session = 100% secure
15:57 < BronzeByte> That´s right
15:57 < aandy_> jergason: You could sign your cookies (which everybody should)
15:57 < jergason> but if you don't you are vulnerable to session hijacking?
15:57 < BronzeByte> Hence why you should store the IP address in the cookie
15:57 < BronzeByte> *in the session
15:57 < BronzeByte> It´s an easy fix
15:57 < TehShrike> I need a good burr grinder for coffee, anyone have one they'd recommend?
15:58 < BronzeByte> Dump the IP and User-Agent header in the local session and no hijacking  is possible
15:58 < jmar777> Why not just use SSL?
15:58 < aandy_> jergason: Not necessarily, but if you use just a cookie with "user=someone" or "session=id" then probably
15:58 < BronzeByte> jmar777, session data is kept server side
15:59 < aandy_> And man in the middle-attacks
15:59 < jmar777> BronzeByte: right, but if the session cookie is transported via SSL, then it can't be hijacked either
15:59 < BronzeByte> Truew
15:59 < BronzeByte> That only applies to man in the middle attacks though
15:59 < jmar777> Right, but if you have a man-in-the-middle attack going on, then storing IP/whatever in session won't help either
15:59 < BronzeByte> Nope
16:00 < jergason> if you are setting the sessionId already to hijack, wouldn't you also know the IP and user agent to spoof them?
16:00 < jmar777> with man in the middle, all they can do is a replay attack
16:00 < BronzeByte> SSL is the solution for man in the middle attacks indeed
16:00 < aandy_> jmar777: No, but signing your cookies will let you know of tampering
16:00 < jergason> man
16:00 < BronzeByte> jergason, you cannot spoof IP´s
16:00 < jmar777> aandy_: but that tampering isn't going to happen if it's encrypted
16:00 < aandy_> jmar777: Not true. Just takes a trusted CA and you can sniff on any cert
16:00 < jergason> Authentication is hard, lets go shopping.
16:00 < aandy_> Which is effectively what you do with, say, Charles Proxy and similar
16:01 < BronzeByte> When you´re in a man-in-the-middle attack and the HTTP is TSL encrypted they cannot hijack your session
16:01 < TehShrike> I'm leaning towards this at the moment http://www.amazon.com/Bodum-Bistro-Electric-Coffee-Grinder/dp/B0043095WW/
16:02 < aandy_> BronzeByte: Why not?
16:02 < jmar777> aandy_: true, but at that point you'll have had to actually have access to the machine itself
16:02 < BronzeByte> aandy_, the session ID will be encrypted by TSL
16:02 < BronzeByte> Unless they bruteforce the TSL private key, they cannot hijack it
16:02 < BronzeByte> Only sniff data that is coming back
16:02 < aandy_> jmar777: Correct, or get a hold of a valid CA, which has happend before
16:03 < aandy_> BronzeByte: The session will be encrypted with a cert the Man (in _Man_ in the middle) has
16:03 < ThiefMaster> hm, shouldn't Local<Boolean> res = Boolean::New(some_bool_value); work fine? the same code with Number instead of Boolean and a number value works fine
16:03 < jergason> So if you use SSL, you can basically just do sessionId=someId and be fine
16:03 < BronzeByte> aandy_, not when the man in the middle is simply sniffing
16:03 < BronzeByte> jergason, when you check for IP you are fine too
16:03 < ThiefMaster> however, as soon as i use Boolean i'm getting "error: conversion from ‘v8::Handle<v8::Boolean>’ to non-scalar type ‘v8::Local<v8::Boolean>’ requested"
16:04 < aandy_> BronzeByte: Then it's not a man in the middle attack
16:04 < BronzeByte> ThiefMaster, why not use Javascript´s flexibility on variables?
16:04 < aandy_> Then it's just sniffing
16:04 < jmar777> ya, the only time man in the middle over ssl can do anything useful beyond replay attacks is if it was there when the connection was established. then it can ssl termination and essentially re-encrypt in between.
16:04 < BronzeByte> aandy_, you still need to be in the middle to get the data past you
16:04 < jmar777> but then the browser is going to complain, because the new encryption doesn't match what the CA says
16:04 < ThiefMaster> BronzeByte: i'd still like to know why i can't return a boolean
16:05 < BronzeByte> ThiefMaster, are you trying to parse a string into a boolean?
16:05 < ThiefMaster> no
16:05 < BronzeByte> then why not use
16:05 < aandy_> BronzeByte: Right. I was just illustrating that the session can still be hijacked
16:05 < BronzeByte> var res = some_bool_value;
16:05 < ThiefMaster> erm, it's c++ code for a node addon, not javascript code
16:05 < BronzeByte> aandy_, there´s no fix for that as browsers are dodgy in security
16:05 < aandy_> BronzeByte: ... to say that server side implementation is important. If you simply sign your cookies server side, you will beat out the "man"
16:06 < BronzeByte> That´s something different
16:06 < BronzeByte> I am just sketching the basic session system
16:06 < BronzeByte> Not the further security
16:07 < aandy_> I just answered to the hijacking part
16:07 < BronzeByte> Well, I have no idea to be honest
16:07 < BronzeByte> I don´t think it would help
16:08 < BronzeByte> If SSL doesn´t work, then why should signing?
16:08 < jmar777> aandy_: what good does it actually do to sign the key with the IP embedded, when any many in the middle is just going to show up as the same IP anyway?
16:08 < aandy_> If you validate by IP it would. Well, what would realisticly happen is that the end user sees every request being dropped.
16:08 < jmar777> and if your'e using SSL (short of a compromised CA authority), it won't be otherwise hijacked?
16:09 < BronzeByte> You mean storing the IP address by signing
16:09 < BronzeByte> at aandy_
16:09 < BronzeByte> Storing the IP is obvious, but a physical man-in-the-middle attack would still work
16:10 < BronzeByte> Hence why you shouldn´t login on sensible sites on hotspots etc
16:10 < aandy_> BronzeByte: Signing !== HTTPS. It works because your server signs it - at a point where the man in the middle can't 
16:10 < BronzeByte> aandy_, server signing doesnt exist...
16:10 < BronzeByte> SSL is one-way encryption
16:10 < BronzeByte> only the server has the private key
16:10 < aandy_> jmar777: The request won't be from the same IP
16:10 < BronzeByte> and you can only decode with a private key
16:10 < jmar777> aandy_: right, but with a man in the middle, the client and man in the middle look the same to the server. it doesn't need to be able to tamper with the cookie any more than the client does. it just uses it
16:11 < jmar777> aandy_: how so?
16:12 < aandy_> BronzeByte: Wait... What? "and you can only decode with a private key" That's the whole point (of cookie signing)
16:12 < aandy_> jmar777: Maybe you're right
16:13 < BronzeByte> aandy_, I never heard of ¨cookie signing¨ nor seen it in practise
16:13 < aandy_> BronzeByte: it's called secure cookie
16:14 < aandy_> BronzeByte: e.g.: http://pastebin.com/BMQt2TX1
16:14 < jmar777> aandy_: usually that's just used in place of session. e.g., store the signed username or account id in the cookie to prevent tampering, and eliminate server-side sessions tate
16:15 < BronzeByte> Secure cookie as in HTTPS cookie?
16:15 < jmar777> if you're refering to the secure flag, that just means it only gets passed over ssl...
16:16 < BronzeByte> Indeed
16:16 < aandy_> BronzeByte: Secure as in the signing in my snippit
16:16 < BronzeByte> I don´t see purpose of your snippet...
16:16 < BronzeByte> The man-in-the-middle can just send the ¨signed¨ cookie
16:17 < aandy_> Well, line 3-6, signing, not a HTTPS flag
16:17 < BronzeByte> nonsencd
16:17 < aandy_> BronzeByte: Yes, and I agreed with jmar777 on that
16:17 < BronzeByte> *nonsence
16:17 < jmar777> so do we all agree now then? lol
16:17 < BronzeByte> this makes no sence lol.
16:17 < aandy_> Nonsense? What do you mean?
16:18 < aandy_> How is preventing tampering nonsense?
16:18 < BronzeByte> aandy_, the man-in-the-middle would pass an exact same cookie
16:18 < aandy_> BronzeByte: Again, for the third time, yes
16:18 < BronzeByte> also, store your data on the server, not in some huge cookie
16:18 < jmar777> aandy_: to prevent tampering, use the secure flag, and ssl
16:18 < jergason> but doesn't SSL add some kind of nonce to defeat replay attacks?
16:18 < BronzeByte> That´s out of our boundaries
16:19 < BronzeByte> that´s the SSL protocol and the browser
16:19 < jmar777> jergason: not that i'm aware of, but there are gaps in my knowledge there
16:19 < BronzeByte> We cannot get more secure than storing sessions server side and using SSL
16:19 < BronzeByte> If you need more security, you´ll have to write the client (browser) too...
16:19 < jergason> any downside to storing more information in the session (user info, etc)?
16:19 < jmar777> i think signing the cookie server side prevents one thing: tampering when there is a man in the middle AND a compromised CA
16:19 < drusellers> Question: Is there a way to 'require' from the app/package root? I am trying to avoid stuff like require('../../thing') in one file and require('../thing') in another file. I would love to just say require('~/thing')
16:20 < jergason> it looks like passport for express stores the entire user object in the session
16:20 < jergason> but i don't know if that means it stores it server-side or client side :(
16:20 < jmar777> drusellers: no, unless you put your modules inside of the node_modules folder
16:21 < BronzeByte> sessions[sessionid].firstname = 'Ryan';
16:21 < BronzeByte> is perfectly fine
16:21 < drusellers> jmar777: ok, i didn't think so. thanks. :)
16:21 < aandy_> BronzeByte: I may be completely wrong on this, but how is tampering-prevention and storing sessions (yes, server side) with an assigned ip not considered safe against hijacking? Yes you will be able to get the session, but you can not use it (again, by server implementation)
16:21 < BronzeByte> Why can´t you use it..=
16:21 < BronzeByte> ?
16:21 < BronzeByte> You can simple send the exact same cookie header
16:22 < BronzeByte> as long as you are on the same network/IP
16:22 < aandy_> The attacker would need to be on the same IP as the victim
16:22 < BronzeByte> Man-in-the-middle (physical) is ALWAYS on the same IP...
16:22 < BronzeByte> I said even before you started talking to store the IP due to session hijacking
16:23 < aandy_> Then what is it you propose?
16:23 < BronzeByte> Well
16:23 < BronzeByte> Store the IP IN the session
16:23 < BronzeByte> and then check it?
16:23 < BronzeByte> I said only a few hundreds of times that only the session ID (not the session itself) is send to the client
16:24 < BronzeByte> We only need to identify the client, then use the identifier to look in a database with sessions on the server
16:24 < aandy_> But the IP is the same for both
16:25 < jmar777> BronzeByte: do you think that's necessary even over SSL (storing the IP)?
16:25 < BronzeByte> THERE IS NO WAY TO STOP A PHYSICAL MAN-IN-THE-MIDDLE ATTACK, aandy_
16:25 < BronzeByte> jmar777, yes, otherwise they take the encrypted request and issue it again
16:25 < aandy_> BronzeByte: Calm down, I was asking. And I was advocating the same thing, that you can't prevent it
16:26 < BronzeByte> Sorry for my agressive looking sentence
16:26 < BronzeByte> Even though I am not aggresive at all
16:26 < BronzeByte> I just pressed caps lock to kind of make my point
16:27 < jmar777> BronzeByte: I'll have to think about that. for some reason I was under the impression that that wasn't possible...
16:27 < BronzeByte> Still jmar777, when somebody would make a virus that grabs your cookies they can still hijack the session when you dont check for the IP
16:28 < jmar777> BronzeByte: well, ya. once they're running software on your computer your screwed no matter what
16:29 < jergason> unless it is a friendly virus
16:29 < jmar777> hm... it appears that ssl does use nonce's
16:29 < BronzeByte> It´s so easy to implement, and can stop so many hackers, why not just do it
16:29 < jmar777> which would prevent that kind of a replay attack
16:29 < jergason> jmar777: the sad thing is i made it out of a crypto course without really remembering anyof this stuff
16:29 < gildean> jergason: one that uninstalls java
16:29 < jergason> gildean: the friendliest virus
16:30 < jmar777> jergason: ditto. you never retain it until you actually have to use it
16:30 < BronzeByte> jmar777, when you dont have SSL, ip checking will still prevent a lot of hacking attempts
16:30 < jmar777> BronzeByte: right - i'm down for jumping through some hoops when you don't have ssl
16:30 < jmar777> BronzeByte: i'm just trying to reconvince myself at this point that SSL + Secure flag is sufficient
16:30 < jergason> BronzeByte: so what do you do if the IPs don't match? Just redirect them back to some login screen with an error I guess?
16:31 < gildean> why no ssl?
16:31 < jmar777> BronzeByte: if you remove SSL from the equation, then all bets are off
16:31 < BronzeByte> jergason, when it doesnt exist you destroy THEIR cookie
16:31 < BronzeByte> but not the session
16:31 < aandy_> jergason: or do what GMail does. It notified me that Google had tried to access my account :)
16:31 < BronzeByte> because otherwise hackers could destroy people´s session to annoy them
16:32 < BronzeByte> aandy_, what are you talking about? they notified you by mail?
16:33 < hdon_> hi all :) can anyone recommend me a WebSockets server module?
16:33 < aandy_> BronzeByte: it was a mishap, and not a breach, just thought it was funny. I was subscribed to a Google Group, and unsubscribed by sending an email (which I've added in my GMail). They saw this as hijacking - but by Google, hehe
16:33 < BronzeByte> hdon_, try www.socket.io ?
16:34 < hdon_> i tried miksago's node-websocket-server but it appears that it does not implement the Sec-WebSocket-Accept headers
16:34 < aandy_> BronzeByte: It just started to show a banner on Google services such as YouTube and GMail that I may have been a victim
16:34 < hdon_> hmmm... i suppose i should probably use that. thanks BronzeByte 
16:34 < hdon_> i didn't want to add any weight for supporting browsers without websockets to this little project but
16:34 < hdon_> i suppose socket.io is very widely used
16:34 < hdon_> so it's probably a good choice for that reason alone
16:35 < gildean> hdon_: i've used just websocket to create a server, either with native https-server or with express
16:35 < BronzeByte> socket.io is even easier to implement than websockets in my opinion, hdon_
16:36 < gildean> iirc socket.io has a lot more overhead if you're doing lots and lots of connections
16:36 < hdon_> BronzeByte: it is pretty easy, however i'm writing my own messaging layer on top of it, so i initially thought it was a little silly. but this is just a proof of concept, so i guess i'll just do it
16:36 < gildean> could be that i remember incorrectly
16:36 < hdon_> gildean: what do you mean?
16:36 < hdon_> gildean: about "i've used just websocket to create a server"
16:36 < gildean> hdon_: the websocket module
16:36 < hdon_> gildean: how do i get this?
16:36 < gildean> search npm
16:37 < hdon_> gildean: thanks :)
16:37 < garrettwilkin> I'm writing a HTTP API 
16:37 < garrettwilkin> what status code should i use
16:37 < garrettwilkin> if the query string isn't valid?
16:38 < garrettwilkin> I'm browsing here http://httpstatus.es
16:38 < garrettwilkin> for ideas
16:38 < aandy_> garrettwilkin: I'd use malformed
16:38 < mscdex> node.js rules!
16:38 < hdon_> garrettwilkin: i've used 400 but IIRC i didn't like the way some browsers acted
16:38 < BronzeByte> garrettwilki, 400 for invalid
16:38 < garrettwilkin> okay
16:39 < gildean> 418 this is a teapot
16:39 < garrettwilkin> is 400 also malformed?
16:39 < BronzeByte> when you send 400, also send a html message saying it´s wrong
16:39 < garrettwilkin> lol
16:39 < garrettwilkin> yea
16:39 < BronzeByte> yes
16:39 < hdon_> garrettwilkin: i was using jquery.ajax() and i didn't like the way some browsers performed with http 400 response, iirc
16:39 < garrettwilkin> 420 twitter rate limiting???
16:39 < garrettwilkin> lol
16:39 < BronzeByte> 418 = I am a teaport
16:39 < BronzeByte> *pot
16:39 < hdon_> garrettwilkin: lol@420
16:40 < BronzeByte> Obviously nobody give a f*** about 420 as Twitter is for little kids
16:40 < hdon_> why does this say "500" is "generic error message"
16:40 < gildean> let's just reuse 420 for "slow down bro"
16:40 < mscdex> 500 is internal server error
16:40 < garrettwilkin> is http://httpstatus.es a load of baloney?
16:40 < hdon_> i guess if you're writing the http server, you can use http 500
16:40 < garrettwilkin> lol @gildean
16:40 < hdon_> but i never use it with apache :O
16:40 < hdon_> just confusing!
16:41 < aandy_> garrettwilkin: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
16:41 < mscdex> 500 is for stuff not related to the request or response
16:41 < BronzeByte> gildean, that seems like a good idea :P
16:41 < mscdex> like malloc failing maybe or something
16:41 < jantman> I have a node.js daemon (statsd) that I want to run on a CentOS 6 box ... can anyone recommend a LSB/Fedora compliant init script that I can modify for it?
16:41 < garrettwilkin> thanks aandy_
16:41 < BronzeByte> jantman, I wrote my own
16:42 < garrettwilkin> i saw that page and wanted a more concise list
16:42 < jantman> BronzeByte: any chance you have it posted somewhere? or would share?
16:42 < BronzeByte> I could post it on my blog
16:42 < mscdex> does fedora use sysvinit?
16:42 < mscdex> or systemd?
16:43 < garrettwilkin> i think i like 400
16:43 < gildean> jantman: i've used forever, it's not platform specific tho'
16:43 < jantman> mscdex: new fedora uses systemd, but also supports sysvinit... i was referring more to the Fedora init script spec though (which is also followed on all RH derivatives)
16:43 < mscdex> ah
16:44 < gildean> then just create a simple script to start the forever commands and run that at startup
16:44 < jantman> BronzeByte: any chance you could just pastebin it?
16:44 < BronzeByte> Yes
16:44 < mscdex> i like upstart
16:44 < mscdex> so easy to work with
16:44 < jantman> gildean: honestly haven't heard of forever, but I want a real rhel/cent init script....
16:45 < gildean> jantman: https://github.com/nodejitsu/forever
16:45 < nkuttler> hrm, is there a form lib that will build create/edit forms from some objects?
16:45 < nkuttler> i guess one of the frameworks might have something but i don't think i want a complete app framework
16:47 < hdon_> hi all :) npm question: can i use Microsoft Visual C++ Express for my compiler? npm says no but i wonder if it can be convinced?
16:47 < gildean> nkuttler: imo just using something like express will save time (post data handling etc.)
16:47 < jantman> gildean: that looks cool, but its not an init script, as far as I can tell...
16:48 < gildean> jantman: no, but then you can just run a simple sh script at startup with the necessary commands
16:49 < jantman> gildean: I'm looking for a real RHEL/Cent/Fedora init script: lockfile, pidfile, start/stop/restart/cond-restart/status etc.
16:50 < BronzeByte> jantman, thats what mine has, except for cond-restart
16:50 < gildean> well, forever does provide basically all those
16:50 < jantman> BronzeByte: great!!!!!!
16:50 < hdon_> how can i find documentation for ws module?
16:53 < jetienne> gildean: forever got an option to relaunch if the source changed ?
16:56 < ThiefMaster> http://stackoverflow.com/questions/12229643/why-does-booleannew-return-a-handle-while-other-primitves-return-local
16:57 < some1else> Hey guys. What's the name of the websockets standard? I remember reading about WRT or something alike a week ago
16:57 < jetienne> gildean: yes with -z
16:58 < jetienne> -w
17:00 < deltab> ThiefMaster: I don't know what those things are, but maybe there's only two instances of Boolean and so no need to allocate anything more
17:01 < jantman> BronzeByte: what's your blog URL?
17:02 < BronzeByte> http://www.bronzebyte.com/ :P
17:02 < jantman> :) thanks
17:02 < jantman> ping me if/when you either post that or pastebin it, if you don't mind
17:03 < Ancien> hi
17:03 < Ancien> i have a problem
17:03 < Ancien> i want to sent data with http request
17:03 < Ancien> to php
17:03 < bnoordhuis> ThiefMaster: because there are only two values, True() or False()
17:04 < bnoordhuis> i.e. they're singletons and turning them into Local<>s would be wasteful
17:04 < BronzeByte> jantman, I am fixing it up right now
17:04 < Ancien> but i think i don't use the good way
17:04 < jantman> great, thanks so much!
17:04 < BronzeByte> jantman, subscribe to my blog on the right sidebar on my site using e-mail ;)
17:04 < BronzeByte> Because I will most likely forget to ping you when it´s done
17:05 < jantman> mind if I do RSS? :)
17:05 < BronzeByte> Go ahead
17:05 < ThiefMaster> bnoordhuis: so return scope.Close(Boolean::New(some_bool)); is the way to go when returning a boolean?
17:05 < BronzeByte> I am going to get dinner now
17:05 < Ancien> how can we sent data with http post request ?
17:06 < TehShrike> Ancien: did you click the documentation link I sent you earlier?
17:06 < Ancien> yes
17:06 < Ancien> but i don't find the good way to sent data
17:07 < mscdex> ThiefMaster: yeah
17:08 < Ancien> i try "req.write('test'); " : TehShrike
17:18 < Ancien> TehShrike do i use the good way ?
17:18 < TehShrike> Ancien: I'm sorry, I don't know what you're trying to do, and I don't know how you're wanting it to work
17:19 < Ancien> I try to sent data from node.js to php and treat data with php and sent data to node.js
17:20 < Ancien> node.js ->php->node.js
17:20 < pec1985> dumb question, how do I exit node?
17:20 < TehShrike> pec1985: the REPL?
17:20 < pec1985> I typed "node" in the terminal
17:20 < TehShrike> I usually hit Ctrl+C a couple times
17:21 < hdon_> ugh wtf
17:21 < pec1985> told you it was a dumb question, thanks TehShrike 
17:21 < hdon_> chrome is getting disconnected from the websocket server immediately
17:21 < hdon_> or chrome is disconnecting immediately
17:21 < pec1985> :p
17:21 < TehShrike> pec1985: no problem :-)
17:23 < pec1985> So, I'm trying to install Cloud9 IDE on a brand new node installation in Debian
17:23 < pec1985> and all i get are errors: throw e; // process.nextTick error, or 'error' event on first tick
17:24 < deltab> pec1985: ctrl-d also works (it signals end-of-file on stdin)
17:24 < pec1985> deltab: ;)
17:25 < hdon_> huh... i think i'm using the API of a completely different module
17:26 < hdon_> wow... dynamically typed languages finally bit me in a really annoying way
17:29 < TehShrike> JavaScript bit me in a really sexy way
17:31 < mscdex> pec1985: you can also type ".exit" to exit the REPL
17:31 < pec1985> mscdex: true
17:31 < benop> does reusing objects to avoid gc stutters matter with nodejs?
17:32 < mscdex> it can
17:33 < mscdex> probably depends on the frequency of object creation and number of objects though
17:34 < benop> it's a few hundred a second
17:34 < benop> i did an implementation that mirrored how game developers do it in actionscript (flash) but it didn't look like it made any significant difference
17:34 < mscdex> well, the best way is to benchmark
17:36 < pec1985> is there a quick command line to upgrade node.js ?
17:36 < pec1985> not sure why, but I installed 0.5.11-pre
17:36 < appinsanity-mike> benop: depending on the type of object you might consider using a Buffer
17:37 < benop> it's just temporarily used containers for a few fields of data
17:42 < appinsanity-mike> benop: Buffers bypass the GC, and then you work against offsets to access the data, much like a C struct where you malloc x * sizeof
17:42 < benop> interesting
17:43 < appinsanity-mike> benop: I did some templating this way and just made up a handful of opcodes in a switch to walk the buffer so I could have different size data, and even strings
17:50 < appinsanity-mike> benop: curious, what kind of objects? asking because you mentioned coding it like a game developer?
17:51 < benop> basically just little snippets of data that get pushed into redis and then disposed of
17:51 < benop> i have more experience with high performance actionscript than javascript
17:52 < appinsanity-mike> so you queue this data and push? 
17:52 < benop> yup
17:52 < benop> i already get pretty solid performance
17:52 < benop> but i'd like to optimize
17:52 < appinsanity-mike> I come from a C game engine background so I tend to think that way, it's just data and a transformation 
17:52 < benop> the total volume ranges from 6000 - 12000 times per second
17:53 < benop> optimizing without newrelic is balls
17:53 < appinsanity-mike> does redis have a Stream interface, lime .pipe() ?
17:54 < appinsanity-mike> like*
17:54 < appinsanity-mike> if so buffers would do very well
17:55 < benop> hmm
17:56 < benop> there is a redis-stream module
17:59 < appinsanity-mike> you using node-redis?
18:00 < benop> yeah
18:00 < benop> i think, the package is just called redis
18:01 < benop> yes it is 
18:03 < lowtax> appinsanity-mike, hi
18:03 < appinsanity-mike> lowtax: hi
18:03 < lowtax> appinsanity-mike, see ya!
18:05 < appinsanity-mike> benop: i don't see streams in that one, if you find one also check out Buffer.slice() so you can just pre-allocate one large buffer
18:06 < BronzeByte> I have a real working problem: I keep losing my focus and work on random (often more fun) stuff
18:06 < TehShrike> lol
18:06 < BronzeByte> For 6 hours, done nothing what I intented to :/
18:06 < TehShrike> A programmer with ADD? Noooo, surely not...
18:07 < TehShrike> Why, I'm always perfectly focused and constantly productive...
18:07 < BronzeByte> Lol
18:07 < BronzeByte> Once I start, I am focussed
18:07 < BronzeByte> I don;t have ADD
18:08 < BronzeByte> But I keep delaying and stuff
18:08 < nkuttler> BronzeByte: what do you do instead of work?
18:08 < TehShrike> I think it was Joel Spolsky who wrote something along the lines of "some days, you just need to get the IDE open"
18:08 < BronzeByte> In fact, you could say I did 8 hours of setting up my working environment: Booting up my laptop and connecting to SSH
18:08 < BronzeByte> nkuttler, write random programs etc
18:08 < TehShrike> That'll happen
18:09 < nathan7> BronzeByte: ADD causes lack of focus for boring things - but hyperfocus for other things
18:09 < TehShrike> So does THC
18:09  * nathan7 sets TehShrike on fire
18:09 < BronzeByte> It´s not really boring, it´s actually fun (my work), I just keep getting new ideas and want to work on them :P
18:09 < TehShrike> nathan7: :-P
18:09 < taky> i take adderall hiho
18:09 < nathan7> BronzeByte: they're more fun ideas
18:10 < BronzeByte> Yes
18:10 < BronzeByte> :L
18:10 < taky> i generally try to avoid hiring people that don't take adderall as well
18:10 < TehShrike> lolwut
18:10 < taky> shameful taky fact #1
18:11 < TehShrike> I considered taking adderall or something similar, but from what I heard, you lose something proportionate to what you gain
18:11 < TehShrike> So, I try to get better at working with my brain
18:11 < nathan7> I have ADD, but I don't think it's a problem
18:11 < taky> i disagree
18:11 < nathan7> Being able to do quick context switches is an advantage to me
18:11 < TehShrike> It's something to work with
18:11 < nathan7> and it lets me think differently than others
18:13 < BronzeByte> being born with a handicap isnt really bad for yourself (only for others), getting one is worse, you;ll have to adapt stuff
18:13 < taky> i agree, i am 24 now
18:13 < taky> i have made hundreds of thousands of dollars
18:13 < BronzeByte> With? :-P
18:14 < taky> and i am losing my motor skills in my arms
18:14 < taky> literally, neck, arm, back pain, all day
18:14 < taky> i'll msg you
18:14 < taky> its difficult because i feel like now i need to work *less*
18:22 < qballer> Hey guys going to re-ask if you know how to combine socket.io with binary.js like here : http://stackoverflow.com/questions/12229079/working-with-binary-js-and-socket-io or do you know of another way to share binary data between the server and client 
18:44 < Jhsto> hey guys, any idea why some clients of mine dont receive websocket connections?
18:44 < Jhsto> some values show up as undefined on them
19:01 < MrMe05> can somebody help with this?
19:01 < MrMe05> module.js:340 throw err: Error: Cannot find module 'sugar'
19:01 < Fike> Anyone here have any experience with node-request? :P
19:02 < BronzeByte> MrMe05, did you write that module?
19:02 < MrMe05> no, i downloaded it off https://github.com/Zarel/Pokemon-Showdown
19:02 < MrMe05> i'm trying to host my own server
19:03 < MrMe05> i got npm and node.js installed and everything
19:03 < MrMe05> I changed my server port in the config.js from 8000 to 443 (it's a LAN server)
19:04 < Fike> BronzeByte: do you by any chance have any experience with node-request? :P
19:04 < BronzeByte> Is that a module?
19:05 < BronzeByte> or do you mean something else?
19:05 < Fike> yep, a module BronzeByte 
19:05 < BronzeByte> MrMe05, try node-waf in the folder where you put that module
19:05 < Fike> It's probably overkill for what I need to
19:05 < BronzeByte> oh wait
19:05 < Fike> to do*
19:05 < BronzeByte> MrMe05, try npm install sugar
19:05 < BronzeByte> Fike, what do you need to do? :-P
19:05 < Fike> I need to send an XML document via POST
19:05 < Fike> :P
19:07 < BronzeByte> Fike, the request module looks useful, it´s never overkill, if you need help with implementing it with the nodejs api I can help ;)
19:07 < Fike> BronzeByte: sounds good :) Mind if I query you?
19:07 < BronzeByte> Go ahead
19:09 < MrMe05> BronzeByte, thanks! it works
19:11 < BronzeByte> No problem, MrMe05 :-)
19:17 < BronzeByte> Damn, I ne3ed to work!
19:24 < bingomanatee> does anyone have a password security rating widget they like (client side)?
19:25 < konobi> bingomanatee: 1passwd
19:25 < konobi> =0P
19:25 < bingomanatee> Fike - I use Mikheal's node-request to test my crm.
19:25 < bingomanatee> thx.
19:25 < Fike> bingomanatee: hm?
19:26 < bingomanatee> re: 12:04 pm question - have you any experience with node-request
19:28 < Fike> oh
19:28 < Fike> bingomanatee: someone's helping me, thanks though :)
19:28 < bingomanatee> cool
19:43 < owen1> http://pastebin.com/FiRkHYQE i have to call 2 function in sequential. in a language with no callbacks those 2 functions will be in the same indentation level, but in js it will be nested. do u guys name the first function in a way that describe both functions?
19:43 < owen1> sorry if it's a weird question.
19:44 < owen1> i assume that the answer is no, but it's a bit confusing to me, since the nesting gives an imprssion that the first function contain the second.
19:44 < tjholowaychuk> it can help with debugging but personally i dont name callbacks
19:44 < tjholowaychuk> if something blows up i'll be looking at the code anyway, a name doesn't help
19:44 < tjholowaychuk> IMO
19:45 < owen1> tjholowaychuk: i was not talking about callbacks
19:46 < tjholowaychuk> well you only have two functions there
19:46 < tjholowaychuk> and they're callbacks
19:46 < owen1> validateNickname and moveToLobby
19:46 < owen1> i don't think they are callbacks
19:46 < owen1> i might be wrong
19:47 < tjholowaychuk> i thought you were talking about the "function(err, message) {" etc
19:47 < owen1> i am calling moveToLobby inside the anonymous function that is called back from the first.
19:50 < Hoppertje> how to measure latency between cli and srv with websockets (pref socket.io) ? any links?
19:54 < Hoppertje> anyone?
19:55 < BronzeByte> Uhm
19:55 < BronzeByte> that;s simple
19:55 < BronzeByte> who wants to know the latency, server or client?
19:55 < BronzeByte> well, you send an event to the client called ´ping´
19:56 < BronzeByte> then you let send the client an event to the server called ´pong´
19:56 < Hoppertje> well, i think getting the latency between client request and server response is the best way?
19:56 < BronzeByte> with as data
19:56 < BronzeByte> new Date().getTime()
19:56 < Hoppertje> yah, thats the easy way to do it, but its not accurate
19:56 < BronzeByte> It is
19:56 < Hoppertje> lets say the cli-> takes 30ms  and the <-srv takes 500ms
19:57 < BronzeByte> it is accurate
19:57 < Hoppertje> hmm
19:57 < BronzeByte> client sends event called ´ping´ to server containg new Date().getTime()
19:58 < BronzeByte> server replies with ´pong´ with as data (new Date().getTime() - receivedTime)
19:58 < Hoppertje> so you're deducting client time - server time?
19:58  * Hoppertje rereads
19:58 < BronzeByte> no
19:58 < BronzeByte> when it receives a ping
19:59 < BronzeByte> you take current time, detuct the time that it was when ping was sent
19:59 < BronzeByte> and send the difference back
19:59 < BronzeByte> will give you amount of miliseconds latency
19:59 < BronzeByte> enjoy
19:59 < Hoppertje> yes, that wont work
20:00 < BronzeByte> No, youre doing it wrong
20:00 < BronzeByte> it does work
20:00 < Hoppertje> maybe i asked it wrong.... i want to set the client time matching the server time
20:02 < Hoppertje> so if the cli holds a timestamp of when send, the server returns its timestamp, and then you deduct cli_timestamp - cli_recieved_timestamp  and then servertime - result?
20:02 < Hoppertje> thats what i got now, but i dont think thats accurate
20:06 < BronzeByte> hoppertje, you cant really sync time over internet :/
20:06 < BronzeByte> also, are you dutch lol?
20:08 < cleos_frey> I'm trying to send binary data over TCP along side some string content. Could I just append the data to the string and it'll be fine?
20:08 < cleos_frey> e.g. 'My request string' + myBuffer.toString('binary')
20:32 < wdent> Any good examples of how to do auto start up on CentOS for node processes?
20:34 < whowantstolivefo> wdent did you google it ?
20:35 < wdent> Seems like I can only find Ubuntu examples
20:35 < kuja_> wdent: There are a few ways to do stuff on startup in CentOS
20:35 < kuja_> You could go the comprehensive route and learn how to write services in CentOS, or I think you could just use /etc/rc.local
20:37 < BronzeByte> wdent, use init.d
20:37 < BronzeByte> then chkconfig
20:38 < wdent> OK.  I will give it a try. I think I lost my way with this 
21:12 < johnnyscript> Q: What is the cheapest reliable piece of wifi capable hardware that runs some linux OS Node.js can build on? And is also small?
21:13 < samholmes> Could someone play this game with me so I can see what it's like? I need 3 other peeps :D http://team.forsvarsmakten.se/english/
21:13 < samholmes> nevermind actually got them
21:14 < johnnyscript> or alternatively are there any GSM devices running Node nowadays?
21:14 < aandy> johnnyscript: http://www.raspberrypi.org/ could be one
21:15 < aandy> Hmm, I thought it had wifi. My bad
21:16 < aandy> johnnyscript: Perhabs a dd-wrt/open-wrt router?
21:16 < gkatsev> you can hack node onto an android device
21:16 < johnnyscript> aandy: no wifi on that tho :\
21:16 < johnnyscript> altho I guess i could USB wifi
21:17 < aandy> Right, I remembered wrong. You could use a cheap router. Anything in particular you're looking for?
21:18 < johnnyscript> small devices to connect to wifi enabled printer
21:18 < johnnyscript> which I can program in node to connect to the web
21:19 < johnnyscript> altho a cheap ass android phone on a nationwide GSM plan would be a pretty cool alternative
21:19 < aandy> A router/switch could easily be on the network, and wouldn't take up extra powerage (depending on your setup)
21:19 < aandy> Why GSM?
21:19 < johnnyscript> doesnt have to be, but it is a global stndard
21:19 < johnnyscript> what do you mean a router / switch?
21:20 < konobi> i use node on my dreamplug
21:20 < aandy> I thought you meant wifi as in 802.. network, not GSM :)
21:21 < konobi> johnnyscript: the plug computer stuff is pretty decent
21:21 < aandy> johnnyscript: http://blog.jgc.org/2012/03/ambient-bus-arrival-monitor-from-hacked.html for instance
21:21 < johnnyscript> konobi: looking now, thanks!
21:21 < gkatsev> http://www.raspberrypi.org/archives/1901 lol
21:22 < johnnyscript> aandy: i would prefer wifi, but GSM would also due, and would work where wifi was not present
21:22 < konobi> aandy: most wireless routers are MIPS
21:23 < konobi> i haven't tried node on my rpi yet
21:24 < aandy> Okay
21:24 < johnnyscript> konobi: what about this dreamplug and plug computer?
21:24 < konobi> the dreamplug has gigeth and wifi, though i don't use the wifi on mine, it does work
21:24 < konobi> johnnyscript: it's a marvell ARM kirkwood
21:24 < konobi> http://www.globalscaletechnologies.com/t-dreamplugdetails.aspx
21:24 < johnnyscript> this ? > http://www.globalscaletechnologies.com/t-dreamplugdetails.aspx
21:25 < johnnyscript> what OS are you using?
21:25 < konobi> i just run arch
21:25 < johnnyscript> and you can easily connect to the wifi LAN with that thing?
21:27 < konobi> yup
21:28 < johnnyscript> konobi: looks sweet, thx
21:29 < aandy> gkatsev: Nice post, haha
21:29 < konobi> johnnyscript: np
21:34 < johnnyscript> konobi: how do you ssh in to it?
21:35 < konobi> johnnyscript: you just do
21:35 < jonno11> Hi - Major noob q here… I have a 'public' folder in my app's root dir. In that, I have js files to be loaded by the client. What's the best way to link to that file in the browser? Obviously "/public/js/example.js" isn't working…
21:36 < konobi> you can also get a JTAG unit to do serial access
21:36 < johnnyscript> i mean initially?
21:37 < jonno11> I'm using Express too if that helps
21:39  * prettyrobots coughs
21:41 < jonno11> also, I'm aware that node.js won't serve up these files. I'm just wondering what the best way of doing it is. (Write the code that serves the files, or do it externally...)
21:42 < konobi> johnnyscript: depends on the OS you've loaded on
21:43 < konobi> johnnyscript: it's not hard though... you'd probably want a jtag anyway
21:45 < johnnyscript> konobi: I hope it comes with instructions
21:45 < konobi> johnnyscript: yup
21:50 < BronzeByte> jonno11, use a static webserver like apache
21:50 < BronzeByte> or just buy some webhosting
21:50 < konobi> jonno11: use express "static" middleware
21:51 < BronzeByte> konobi, thats not the best practise
21:51 < BronzeByte> unless he depends on domain/host restrictions
21:51 < konobi> BronzeByte: how so?
21:51 < BronzeByte> because of years of experience and being a daemon
21:52 < konobi> heh
21:52 < konobi> i call bull
21:52 < BronzeByte> nodejs is lightning fast for interactive applications, but even slower than static webservers when serving static files
21:52 -!- mode/#Node.js [+o konobi] by ChanServ
21:52 < BronzeByte> *fly-away flied away
21:52 < BronzeByte> xd
21:53 < BronzeByte> bull?
21:54 < freewil> don't use apache
21:54 < freewil> i like to put nginx in front of node
21:54 < freewil> use a reverse proxy to your node app
21:54 < freewil> and just serve static content with nginx
21:55 < BronzeByte> freewil, apache was just an example, your way is excellent
21:57 <@konobi> jonno11: sounds like you're just developing at the moment... use the static middleware, when it comes to deployment, then you can start thinking about nginx, etc.
21:57 < freewil> ^ thats what i do
21:57 < freewil> i use the static middleware, but only in development
21:58 <@konobi> use of nginx will not allow you to do websockets for example... so you would have to consider an alternative
21:58 <@konobi> and tbh, it's good enough for most deployments
21:59 < gkatsev> isn't there a patch for nginx to allow websockets?
21:59 <@konobi> gkatsev: still very alpha I believe
21:59 <@konobi> since it requires a major change to their network code
22:00 < gkatsev> I guess there's also a proxy plugin for nginx that allows you to use websockets
22:01 < freewil> i assume you're looking at this gkatsev ... https://github.com/yaoweibin/nginx_tcp_proxy_module
22:01 <@konobi> tcp_proxy module
22:01 < gkatsev> yeah, that's what I found
22:04 <@konobi> there's also haproxy
22:08 < freewil> 1.3.x planned features and improvements...
22:08 < freewil> Websockets 
22:08 < freewil> http://trac.nginx.org/nginx/roadmap
22:09 < jonno11> aha sorry I was away, cheers for the advice, yeah only dev at the moment. I'm just feeling my way around Node.js for the first time really
22:10 < jonno11> I love the concept
22:10 < jonno11> and I love the idea of using WebSockets (socket.io etc.)
22:15 < gkatsev> freewil: cool
22:15 < freewil> not sure how long it's going to be before that is implemented
22:15 < freewil> could be 6 months
22:16 < freewil> or longer
22:16 < boboy77b> http://www.reddit.com/r/pornvids/comments/z6ypg/tera_patrick_hot_lesbians_on_the_beach/
22:16 < gkatsev> :/
22:18 < xenol> :D
22:18 < TehShrike> :-|
22:19 <@konobi> oh spammers...
22:48 < cleos_frey> how do I get the binary version of a Buffer if I can't use Buffer.toString('binary')?
22:49 < cleos_frey> trying to send binary data over tcp
22:50 < johnnyscript> cleos_frey: buffer.read<type>
22:50 < johnnyscript> buffer_buf_readuint8_offset_noassert
22:55 < cleos_frey> johnnyscript: I'm using buf.readUInt8(index), but it's just giving me numbers
22:55 < cleos_frey> johnnyscript: I'm trying to read an image, and send the binary data to Growl through a socket
22:56 < cleos_frey> johnnyscript: so I'm appending this binary data to a string of some headers for Growl
22:59 < johnnyscript> cleos_frey: what version of node?
23:00 < cleos_frey> 0.8.6
23:02 < cleos_frey> So I'm opening the file in both python and node. When I print out both, I get binary, but the python
23:02 < cleos_frey> is creating slightly different random characters on my terminal
23:02 < cleos_frey> like the first few lines of random gibberish is the same, but then it gets different at the botto
23:02 < johnnyscript> cleos_frey: https://gist.github.com/3590455
23:02 < cleos_frey> m
23:03 <@konobi> binmode?
23:03 < cleos_frey> johnnyscript: but that's just giving me the info as integers, I want binary
23:04 < cleos_frey> konobi: what do you mean binmode?
23:05 <@konobi> cleos_frey: read_file(fn_src, binmode=1)
23:07 < johnnyscript> cleos_frey: reading a file returns a buffer, so you should be able to say var file = fs.readFileSync('/file'). var chunk = file.slice(0, 32)
23:07 < mscdex> boooo sync!
23:07 < mscdex> ;-)
23:07 < johnnyscript> damn booo bots
23:10 < cleos_frey> johnnyscript: here's what I'm doing now https://gist.github.com/c99fca82eba27ab4f2e7
23:10 < cleos_frey> that's right, then?
23:10 < cleos_frey> maybe I have an issue somewhere else...
23:13 <@konobi> cleos_frey: provide an encoding
23:15 < cleos_frey> konobi: what do you mean? In the docs, it says buf.toString('binary') is going to be depreciated
23:15 < johnnyscript> cleos_frey: you should open the file as a stream a la https://github.com/substack/stream-handbook
23:16 < cleos_frey> konobi: sorry, I'm kind of new with node, and I'm not sure if the binary isn't coming out right or my request might be off
23:16 < johnnyscript> then write the header to the socket
23:16 < johnnyscript> and pipe the readStream to the request stream
23:16 < cleos_frey> johnnyscript: I'll check that out
23:17 < _xo__> hi
23:19 < papachan> hi
23:20 < _xo__> I wonder if someone could help me to find why this pice of code (http://pastebin.com/Jc8AWtRq) cant update a document in mongo
23:21 < _xo__> same command with hardcoded values in mongo cli works fine
23:32 < johnnyscript> cleos_frey: something like this https://gist.github.com/3591136
23:33 <@konobi> cleos_frey: why not use one of the growl npm libs?
23:35 < cleos_frey> konobi: the only other one I saw required 'growlnotify' to be install. I just thought it'd be a good project to do one from scratch with the GNTP protocol
23:35 < cleos_frey> johnnyscript: thanks, I'm reading substack's thing and it's pretty good so far. But I'm not using HTTP to talk to the Growl server :c
23:36 <@konobi> https://npmjs.org/package/gntp
23:38 < cleos_frey> konobi: mine's pretty much done so I might as well finish! but I'll look through his code to see how he's handling resources
23:38 < cleos_frey> konobi: thanks
23:38 <@konobi> np
23:45 < cleos_frey> konobi: jesus this guy went OOP overboard
23:46 < cleos_frey> konobi: my implementation is so far 200LOC his is 1400LOC, and it's kind of hairy!
--- Log closed Sun Sep 02 00:00:05 2012
