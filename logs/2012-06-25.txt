--- Log opened Mon Jun 25 00:00:23 2012
00:13 < rageous> Kind of a silly question, but should I just be able to do something similar to var formdiable = require("formidable"); if I've installed the formidable module via npm?
00:16 < gblock> regeous: yes, you just require it.
00:16 < gblock> rageous: That was meant for you :p
00:17 < rageous> Why must I struggle at every turn?
00:19 < gblock> rageous: https://github.com/felixge/node-formidable/blob/37b33fc8514a16ae871674bce908b155ae1097e0/Readme.md
00:19 < gblock> rageous: simple example on the github page
00:20 < rageous> gblock: Thanks very much. I've done something foolish and I need to fix it now. I appreciate the help.
00:20 < gblock> rageous: sure, formidable is very easy to use.
00:21 < rageous> gblock: I'm finding everything to be generally easier with my mbp.
00:22 < gblock> rageous: in answer to your question, it's because you chose software development ;-)
00:22 < gblock> rageous: are you just starting out with node?
00:22 < rageous> gblock: Yeah. I actually started looking into it after reading up on Yesod, and other articles suggesting that node.js had 'jumped the shark'
00:23 < rageous> It's pretty slick so far. I'm just dumb.
00:23 < gblock> rageous: it just takes time to get in a comfort zone. Not too long either.
00:24 < gblock> rageous: jumped the shark how btw?
00:25 < rageous> gblock: It was a critique of the community, which seemed pretty unfair.
00:26 < gblock> hmm I have found the node community to be one of the most helpful I've seen
00:26 < rageous> Well, as I read the article, it sounded like a lot of very passionate people. Those endorsing Yesod and Haskell seemed rather snooty.
00:27 < rageous> So, I worked throug the first six chapters of eloquent javascript yesterday and the nodebeginner.org tutorial, and now I'm trying to get sqlite working right.
00:33 < gblock> rageous: which article?
00:34 < zomg> rageous: in my experience haskell people are pretty nice
00:34 < blakmatrix> substack knows some haskell
00:35 < gblock> I started messing with Haskell recently. Very interesting language
00:35 < SubStack> haskell people are hella snooty
00:35 < zomg> tbh most articles which claim <technology> is inherently wrong/bad/jumped the shark/whatever tend to also be completely wrong
00:36 < zomg> SubStack: I dunno, there's mauke on #haskell who's kinda like that but most others are nice to beginners :D
00:36 < SubStack> and they always use confusing category theory terminology
00:36 < zomg> Though mauke is alright as long as you're not being completely stupid
00:36 < bnoordhuis> it's always fun to ask haskell people what real-world applications they've built
00:37 < bnoordhuis> usually you get long, awkward silences
00:37 < SubStack> bnoordhuis: it's nice for 3d graphics but not so nice for other stuff
00:37 < zomg> bnoordhuis: I built an irc bot and a web app stub!
00:37 < zomg> very real world (tm)
00:37 < zomg> =)
00:37 < bnoordhuis> yeah, i wrote a log parser in it once
00:37 < bnoordhuis> talk about the wrong tool for the wrong job
00:37 < SubStack> I built a realtime system using haskell to control an underwater rov
00:37 < bnoordhuis> SubStack: no kidding?
00:37 < zomg> I don't really know if it's that "wrong" for random programming stuff
00:38 < zomg> I mean... How is any other language any less "right"
00:38 < ggreer> <SubStack> haskell people are hella snooty <-- pot kettle black :)
00:38 < zomg> erm any more right I mean..
00:38 < ggreer> actually I think rails people hold the record for snootiness
00:38 < zomg> ^that
00:38 < bnoordhuis> zomg: lots of things that are easy in, say, perl are hellishly hard in haskell
00:38 < SubStack> it took input from a gamepad, did fft on a microphone input to do frequency detection and graphing, interfaced with an IC with a thermistor on it to graph and record temperature
00:39 < SubStack> but I had to fight the RTS a lot because the threads would starve each other
00:39 < bnoordhuis> there you go
00:39 < zomg> bnoordhuis: Yeah I guess there are certain things like that which are easier in specific languages, but it's still suitable as a general purpose language I think. You could say the same about Java or whatever too in comparison to Perl
00:39 < bnoordhuis> should've used erlang :-)
00:39 < SubStack> the OS is way better at scheduling processes than the RTS is at doing threads
00:40 < bnoordhuis> zomg: hah, don't get me started on java
00:40 < SubStack> also when I needed to switch up the signatures on any of the components I had to update a lot of code
00:40 < SubStack> refactoring haskell programs sucks
00:40 < zomg> bnoordhuis: hehe =)
00:40 < SubStack> haskell's module system also sucks compared to node's
00:40 < SubStack> python-style imports suck
00:40 < ggreer> my ideal language would probably be ruby but compiled or running on the jvm
00:41 < bnoordhuis> ggreer: jruby?
00:41 < ggreer> so... jruby I guess
00:41 < ggreer> yeah
00:41 < ggreer> or rubinius maybe
00:41 < zomg> SubStack is such a fanboy
00:41 < zomg> =)
00:41 < SubStack> but haskell is pretty great for 3d graphics, the hopengl lib is really nice
00:41 < bnoordhuis> ggreer: can you explain what's so great about ruby?
00:41 < ggreer> I just like the syntax. it's like python but with better libraries
00:42 < bnoordhuis> hah, don't let #python here that
00:42 < zomg> Wait I thought Python was generally what everything said had better libs
00:42 < bnoordhuis> *hear
00:42 < zomg> :P
00:42 < zomg> *everyone
00:42 < ggreer> the default python libraries are no fun
00:42 < ggreer> like urllib
00:42 < SubStack> ggreer: but ruby's class and module system is such a clusterfuck of side effects from money punching every damned thing
00:42 < SubStack> *monkey
00:43 < SubStack> zomg: python's package system is so bad
00:43 < SubStack> it has like 6 and they are all terrible
00:44 < ggreer> morale at work went wayyy up when my pair programming buddy and I switched to ruby. neither of us knew it, so it was really nice to suddenly have compact syntax and tons of mature libraries
00:45 < SubStack> pair programming? people actually do that?
00:45 < ggreer> we try lots of random stuff
00:46 < ggreer> I think it's worked out pretty well. we don't pair program *all* the time
00:46 < ggreer> probably 2/3rds of the time
00:46 < ggreer> also we switch computers when the other person is driving, so we learn all kinds of little tricks for searching/editing code or finding docs or whatever
00:47 < ggreer> although that's been kinda one-sided, since I have a crazy customized setup with a pimped-out textmate and dvorak layout and zsh and stuff
00:49 < ggreer> I like to use the analogy of (insert programming language here) and strawberry ice cream. lots of people like strawberry. lots of your friends tell you how great strawberry is
00:49 < ggreer> but then you try it and... ick
00:49 < ggreer> I prefer chocolate
00:50 < zomg> Every time someone mentions pair programming I now think of this https://bitbucket.org/spooning/
00:50 < zomg> Damn you Atlassian
00:51 < Lorentz> they're forgiven because they gave me free pizza
00:52 < Lorentz> and beer
00:52 < ggreer> heh
01:02 < TehShrike> zomg: HAAAAAAAAAAAAAAAHAHAHA
01:02 < TehShrike> oooh lol
01:02 < TehShrike> This is gold
01:03 < TehShrike> HAMMOCK
01:03 < TehShrike> Oh wow.
01:03 < zomg> And creepy as hell
01:03 < zomg> :D
01:03 < TehShrike> And yet now I want to know more about bitbucket
01:04 < zomg> Copy of github with free private repos and somewhat more confusing UI
01:04 < zomg> I think that pretty much covers it?
01:04 < zomg> =)
01:05 < TehShrike> Well there you go I guess
01:20 < gblock> rageous: utile (https://github.com/flatiron/utile) contains requireDir and requireDirLazy which hangle loading a directory
01:57 < CIA-75> libuv: Xidorn Quan master * raec320b / src/unix/darwin.c : darwin: get cpu model correctly on mac - http://git.io/seHO5g
01:58 < CIA-75> libuv: Ben Noordhuis master * r34fb759 / AUTHORS : Update AUTHORS - http://git.io/quKClA
02:11 < ytechie> Been 5+ years since I've been on IRC, so I'm not sure if this is a bad use, but I posted a question on StackOverflow regarding a node issue. It's been kicking my butt for weeks. http://stackoverflow.com/questions/11182725/http-request-stream-not-readable-outside-of-request-handler
02:12 < tbranyen> how dare you
02:13 < ytechie> huh?
02:15 < chapel> ytechie: what exactly is the problem?
02:16 < ytechie> the "readable" property on the HTTP request is false if called outside of the callback for the request.
02:17 < ytechie> "readable" can be called on the request object from the request method, and it can be called from any method the request method calls directly, but fails if it's in a setTimeout.
02:18 < ytechie> Here is the code: http://pastebin.com/ki4cBv7g
02:18 < chapel> have you tried just hooking into req.on('data')  ?
02:19 < austinbv> damn zombie.js + mocha not horrible at all
02:19 < ytechie> Let me give it a try again, but if memory serves, that didn't work.
02:29 < austinbv> does anyone know a module that lets you not have to restart the server everytime you change code?
02:31 < sx2020> austinbv: i use node-dev
02:31 < sx2020> there's another one too, but node-dev works good for me
02:31 < chapel> austinbv: no hot code loading
02:31 < sx2020> it still restarts the server, but the key is you don't have ot manually do it
02:32 < chapel> you could use cluster, and have a light master to keep the socket open
02:32 < austinbv> thats find
02:32 < chapel> and the child being the actual script
02:32 < chapel> and restart the child as needed
02:32 < austinbv> I could dont like cmd+tab ctrl+c up enter cmd+tab cmd+r over and over again
02:32 < chapel> austinbv: you could also have the master detect changes in the child
02:33 < chapel> and have it restart the child for you
02:33 < sx2020> chapel: this is what node-dev does
02:33 < austinbv> brb
02:33 < chapel> sx2020: well sure, but my way could be used beyond dev
02:33 < chapel> :P
02:33 < chapel> anyways
02:33 < chapel> node-dev is nice
02:33 < sx2020> the other popular one ids called nodemon
02:34 < ytechie> chapel: I am able to get data in the other method using the method you described. I'm going to look at my original program and see what the problem was...
02:34 < sx2020> or supervisor
02:34 < chapel> kk ytechie
02:40 < ytechie> I see what I ran into- I'm unable to use the "pipe" functionality on the request stream.
02:40 < ytechie> on('data') works fine.
02:41 < ytechie> The server must be manipulating that stream
02:47 < ytechie> The reason I want to use pipe is that it avoids encoding, and it's automatic.
02:51 < ytechie> Looks like I'm not the only one with this problem: http://stackoverflow.com/questions/11135954/problems-piping-in-node-js
02:56 < sx2020> shell scripts are synchronous right?
02:57 < ytechie> yes, unless you suffix a call with 
02:57 < ytechie> sorry, with "&"
02:57 < sx2020> cool, thanks
02:58 < ytechie> I recently wrote a script to make sequential HTTP calls, and I was counting on the fact that it was synchronous. Worked well.
02:59 < sx2020> yeah I need to run a couple javascripts with node to compile my project
03:01 < austinbv> anyone know a good man page on writing a npm library
03:03 <@konobi> austinbv: modules and npm init
03:04 < austinbv> ty
03:23 < cainus> hey all... anyone have a recommendation for a protocol for a persistent connection containing binary streams between two node apps?
03:35 < rageous> So much to learn.
03:35 < TehShrike> Ain't that the truth
03:36 < rageous> TehShrike: I'm finding that I'm a bigger fan of knowing than I am of learning. Perhaps I won't last long here.
03:38 < TehShrike> Everyone prefers knowing things to learning things - learning things is harder
03:38 < TehShrike> If you can connect the two in your mind though - get a short enough feedback loop - you can get hooked on knowing new things, and keep motivated to learn
03:39 < dr0id> no point learning so much
03:40 < TehShrike> Well, you can't learn everything
03:40 < TehShrike> But if you want to be good at any given thing, there's usually a lot to learn before you're close
03:40 < dr0id> http://www.reddit.com/r/IAmA/comments/vj4tq/iama_17yearold_internet_marketer_that_makes_20000/
03:41 < TehShrike> eh, that's not related
03:42 < dr0id> :P
03:42 < TehShrike> Making money off of a home-grown business is one part doing the right thing, one part hard work, and one part luck.  Learning stuff (beyond the stuff that's right in front of you) is looking for a potentially longer-term payoff.
03:42 < TehShrike> dr0id: what other chat room do I know you from?  I can't remember
03:42 < dr0id> #mysql :P
03:43 < TehShrike> Ah yeah :-) I should have known that...
03:43  * TehShrike is currently learning by watching http://www.infoq.com/presentations/Simple-Made-Easy-QCon-London-2012
03:47 < charlesos> hi all, is anyone using mongoose / willing to answer a noob question?  
03:49 < sx2020> shoot
03:49 < sx2020> might wnat to try #mongodb depending on quesiton
03:51 < charlesos> sx2020 awesome thanks, so i want to be able to store an objectId that might be for one of a few different models
03:51 < charlesos> is there a way to mongoose.findById(objectId) or something like that?
03:51 < charlesos> without specifying a model type
03:53 < sx2020> not sure, but i think you'll have better luck in #mongodb, this is not really a node.js question
03:53 < Guest46571> Hello, I am not famaliar w/ freenode so be nice please.
03:54  * TehShrike strokes Guest46571's mane
03:54 < Guest46571> Thanks TehShrike.
03:54 < TehShrike> Just trying to make you feel comfortable.
03:54 < sx2020> lol
03:55 < Guest46571> I have a problem with DNS apparently.
03:55 < TehShrike> Don't we all
03:55 < TehShrike> My problem with it is: it sucks
03:55 < charlesos> sx2020 ok cool, will try there
03:55 < charlesos> thanks
03:55 < sx2020> np good luck
03:55 < Guest46571> can I just paste some code in here?
03:56 < TehShrike> nope
03:56 < TehShrike> But you can use something like gist or hastebin
03:56 < TehShrike> https://gist.github.com/
03:56 < sx2020> jsfiddle is nice
03:56 < TehShrike> Quite true
03:56 < sx2020> codepad.org works
03:56 < sx2020> for one lang demo
03:57 < Guest46571> I know, I posted the on google.  Let me go find the link.
03:58 <@konobi> phear the boot of doom
03:58 < sx2020> when posting a project on github/bitbucket, does it make sense to include like the node_modules?
03:59 < TehShrike> Why not just describe your dependencies in npm?
03:59 < Guest46571> https://groups.google.com/d/topic/nodejs/N2zIIE10siE/discussion describes my problem.  I saw no response so here I am.
03:59 < TehShrike> And in the readme
03:59 < pawn> Anyone here familiar with node-irc?
03:59 < sx2020> yeah
03:59 < sx2020> that makes more sense
03:59 < sx2020> thanks
03:59 < SomeoneWeird> i am pawn
04:00 < TehShrike> I am rook
04:01 < pawn> SomeoneWeird: I'm wondering if you could help me with something. I'm trying to send messages to users, but multi-line message. The problem I'm running into is freenode throttling me because apparently ever line is sent individually. How could I send one message with newlines?
04:02 < SomeoneWeird> pawn, enable throttling in your program, then you dont have to worry about that
04:02 < TehShrike> IRC doesn't allow newlines in messages, I'm pretty certain
04:02 < TehShrike> Newline = new message
04:02 < sx2020> let's<br />see \n
04:02 < SomeoneWeird> lol no sx2020 
04:02 < TehShrike> XMPP allows newlines in messages
04:02 < TehShrike> IRC does not
04:02 < SomeoneWeird> it would be a special unicode char if it did allow it sx2020 
04:02 < SomeoneWeird> like colours
04:02 < pawn> SomeoneWeird: How would I do that?
04:02 < SomeoneWeird> and boldness
04:03 < SomeoneWeird> and colours
04:03 < sx2020> man i don't get colurs in pidgin
04:03 < SomeoneWeird> lol
04:03 < sx2020> only the usernames
04:03 < dr0id> pidgin is awesome
04:03 < pawn> SomeoneWeird: I don't see any throttling info on the docs for node-irc.
04:03 < pawn> Is it an IRC command?
04:03 < pawn> Flood protection maybe?
04:03 < sx2020> pawn: did you mean node or freenode above?
04:04 < sx2020> oh freenode got it
04:04 < SomeoneWeird> pawn, https://gist.github.com/2986434
04:04 < pawn> sx2020: node-irc I mean the module
04:05 < pawn> SomeoneWeird: Set floodProtection to true or false?
04:05 < SomeoneWeird> true
04:06 < pawn> This will stop the throttling? I would have assumed setting floodProtection to false would allow me to send messages without delay?
04:06 < SomeoneWeird> you can't reallyyyy get around freenode throttling you
04:07 < pawn> SomeoneWeird: How do other bots send multi-line messages?
04:07 < SomeoneWeird> they dont
04:08 < pawn> Well, the certainly seem faster than my bot. Could this be because of another issue, maybe my server is slow?
04:09 < SomeoneWeird> possibly
04:09 < sx2020> pawn: what kind of bot are you making?
04:09 < Guest46571> Is someone looking at my problem???  (Hopefully) (https://groups.google.com/d/topic/nodejs/N2zIIE10siE/discussion)
04:09 < pawn> sx2020: A private messaging bot
04:11 < sx2020> Guest/Dan: Is requiring 'http' module necessary? I never do that
04:11 < sx2020> and my http works
04:12 < sx2020> maybe express takes care of that? have you looked into express?
04:13 < Guest46571> sx2020: Nothing seems to work.
04:14 < sx2020> are you a node.js beginner? what are you trying to  do
04:14 < SomeoneWeird> sx2020, lol yes you have to require it
04:14 < SomeoneWeird> Guest46571, pastebin your /etc/resolv.conf
04:15 < sx2020> SomeoneWeird: why does my app work without it?
04:15 < Guest46571> sx2020: YES I am a beginner.  I just installed node and tried to do some simple things with it and get lots of errors.
04:16 < SomeoneWeird> sx2020, maybe express requires it, yeah, not sure
04:16 < sx2020> i recommend installng the express module (using npm install) and starting here http://expressjs.com/guide.html
04:17 < Guest46571> sx2020: npm install does not work for me!!!
04:17 < sx2020> what operating system are you working with
04:17 < Guest46571> sx2020: Gentoo
04:17 < sx2020> and what is your basic objective?  if you are having this much frustration so early, you may be in too deep
04:18 < sx2020> what kind of app are you trying to build
04:18 < SomeoneWeird> its not the app
04:18 < SomeoneWeird> he's having dns problems
04:18 < SomeoneWeird> for the second time, pastebin your /etc/resolv.conf Guest46571 
04:18 < sx2020> is this your own gentoo machine or hosted remotely?
04:19 < Guest46571> sx2020: https://github.com/atdt/snoflake is what I want to start fooling around with.
04:19 < Guest46571> sx2020: My own
04:20 < sx2020> it could be an issue with your router or internet provider. you might want to try some webhosting service to take those out of the equation
04:21 < sx2020> but you should listen to SomeoneWeird
04:21 < Guest46571> Hold for my /etc/resolv.conf
04:22 < Guest46571> nameserver 208.67.222.222 
04:24 < Lorentz> hmm hmm, updated silly irc bot to work on 0.8
04:24 < Lorentz> been a while since I touched that code
04:25 < Lorentz> You know it's old when package.json says node version needed is >=0.2.0
04:26 < Guest46571> I thought it might be a ipv6 issue but I am now tunneling it OK. (ping6 google.com works)
04:27 < Lorentz> and updated on npm too
04:30 < Guest46571> I need to go to sleep soon.  Can we take my issue to the discussion list please?
04:36 < Guest46571> quit
04:39 < austinbv> so how do you test that your module works properly when npm installed?
04:40 < Lorentz> install it in another directory and run usual tests to check it works
04:40 < austinbv> can you install from a path?
04:40 < Lorentz> I prefer getting it directly off npm and see it roll
04:41 < Lorentz> not sure if you can install from a path
04:41 < austinbv> its a patch to someone elses js lib making it a module
04:42 < austinbv> so I didnt want to publish it
04:43 < austinbv> I can push it cool
04:43 < austinbv> to my github
04:43 < austinbv> or give a git path
04:44 < dr0id> how do I debug based on this error - http://pastie.org/private/qdktrb0wagawtfsucr9dq ? :/
04:45 < pawn> How do I use node-irc to open a DCC connection between a irc user?
04:48 < bob_the_bob> hi
04:49 < bob_the_bob> so, our app uses zmq (zeromq.node), which uses libev and relies on waf. Anybody knows a fork of it that uses libuv and gyp ?
04:50 < bob_the_bob> I've found a fork using libuv already, but it still uses waf
04:50 < bob_the_bob> so no 0.8.0
04:57 < austinbv> so the git as an npm path doesnt really work
05:15 < bob_the_bob> any ETA for 0.8.0 in hours? I need to know when to go at the supermarket downstairs to buy champagne
05:15 < min|dvir|us> Does Node.js use multiple threads internally?
05:16 < gkatsev> yes
05:17 < Lorentz> bob_the_bob: check topic
05:17 <@konobi> for any system/library calls that are sync in nature
05:19 < dr0id> pulling my hairs out, can't fix a problem. the only error I get in the cli is http://pastie.org/private/qdktrb0wagawtfsucr9dq - and no idea how to debug this :/
05:21 <@konobi> dr0id: EPIPE is coming from the OS
05:22 < dr0id> konobi: while it should come from the child process?
05:25 < synthesis> anyone done web socket relay servers with node?
05:26 <@konobi> dr0id: it's coming from the OS... that in itself is indicating where the issue is
05:32 < austinbv> is there a built in node module to parse stringified json?
05:32 < SubStack> austinbv: JSON.parse()
05:32 < gkatsev> austinbv: JSON.parse
05:32 < SubStack> it's part of v8
05:32 < austinbv> oh cool
05:45  * MitchW sighs
05:45 < MitchW> had to drop cloud9 for node inspector (for debugging), cloud9 really don't seem to care about stability anymore
05:46 < synthesis> anyone's done udp hole punch with node?
05:52 < denysonique> Why is extending prototypes of native objects bad?
05:52 < denysonique> (in node.js)
05:56 < chapel> denysonique: its bad because you don't know if a module or something might depend on something and will break
05:56 < chapel> also like with arrays
05:56 < niallo> if i am a globally-installed node.js script installed via npm install -g, can i programatically find my global node_modules dir? e.g. if i'm installed as /opt/local/bin/foo that might be /opt/local/lib/node_modules/foo/
05:57 < chapel> for in loops will loop through non-native functions added to the array prototype
05:57 <@Nexxy> denysonique, because you can break code with it
05:57 < chapel> what Nexxy said
05:58 <@Nexxy> random things you would never expect to break
05:58 <@Nexxy> will suddenly behave sporadically
05:58 < chapel> its also not obvious when it breaks too, or why it breaks
05:58 <@Nexxy> mhmm
05:58 < chapel> in the case of for in loops
05:58 < chapel> well that was a specific case I had to deal with
05:58 < CIA-75> node: isaacs v0.8 * r9183596 / (102 files in 8 dirs): npm: Upgrade to 1.1.31 - http://git.io/dbzgaQ
05:58 < CIA-75> node: isaacs v0.8 * r38250f6 / (98 files in 6 dirs): npm: Upgrade to 1.1.32 - http://git.io/GiKvhQ
05:58 < CIA-75> node: isaacs v0.8 * r20c5ca2 / (ChangeLog src/node_version.h): 2012.06.25, Version 0.8.0 (stable) - http://git.io/w9Ca3A
05:58 < CIA-75> node: isaacs v0.8 * re6cf29b / (105 files in 10 dirs): Merge branch 'v0.8.0-release' into v0.8 - http://git.io/I0O6ZA
05:58 < CIA-75> node: isaacs v0.8 * ref8d952 / src/node_version.h : Now working on 0.8.1 - http://git.io/W68hyg
05:58 < chapel> being a module that modified the array prototype
05:58 < chapel> :(
05:59 < denysonique> right
05:59 < denysonique> so what are some examples of native prototype extension?
05:59 < chapel> what do you mean?
05:59 < denysonique> everyone says that it breaks stuff
05:59 < chapel> it can
05:59 < denysonique> I would like to see a real life scenario
05:59 < chapel> if you know every line of code that is going to run in your app
06:00 < chapel> you probably could get away with it
06:00 < chapel> but if you run any code you don't control
06:00 < chapel> like modules
06:00 < chapel> and then, not everything behaves exactly as you'd expect
06:00 < chapel> the main issue, more than breaking stuff, its unpredictable at times
06:00 < chapel> and unpredictable code is bad code
06:02 < denysonique> well
06:02 < CIA-75> node: isaacs v0.8 * rbccadec / doc/blog/release/node-v0.8.0.md : blog post for v0.8.0 - http://git.io/kRrgdA
06:03 < denysonique> this can only happen if two different libraries try to add a new prototype object of the same name to a native object
06:04 < denysonique> a warning system in this case ie when prototypes are being overridden should solve the problem
06:04 < denysonique> wrappers are ugly
06:04 < denysonique> s/ie/e.g./
06:05 < bob_the_bob> gyp is not installed by make install :-(
06:05 < denysonique> bob_the_bob: install gyp
06:05 < denysonique> err
06:06 < denysonique> sorry, I didn't understand it the right way
06:07 < denysonique> what about this approach? http://sugarjs.com/
06:14 < sawjig> g/ 20
06:15 < CIA-75> node: isaacs v0.8 * re9a68ca / doc/blog/release/node-v0.8.0.md : blog: Add shasums to 0.8.0 blog post - http://git.io/CojdiQ
06:16 < niallo> to answer my own module question, i just try fs.stat'ing ./node_modules/blah if not found try __dirname + "/node_modules/blah" - from the globally-installed executable script.
06:19 < niallo> since the file in $PATH is actually a symlink to the script under $PREFIX/lib/node_modules/foo, __dirname works perfectly for this.
06:19 < circlicious> what is EPIPE?
06:21 <@Nexxy> |
06:21 < circlicious> is it that simple?
06:21 <@Nexxy> yep.
06:21 <@Nexxy> you probably forgot 1
06:22 < circlicious> Nexxy: 
06:23 < circlicious> Nexxy: i have no idea, i have some child_process.spawn code that causes node to crash, https://gist.github.com/2986977
06:23 <@konobi> circlicious: google not show anything?
06:26 < circlicious> konobi: google is more into pipes and batteries 
06:26 <@konobi> "epipe error"
06:26 < circlicious> Nexxy: can you help me :( i am a noob :|
06:26 < circlicious> konobi: ok
06:30 < circlicious> this is what i found - "EPIPE means that writing of (presumably) the HTTP request failed
06:30 < circlicious> because the other end closed the connection."
06:30 < circlicious> but i kinda doubt tht
06:30 < denysonique> circlicious: please gist your cod
06:30 < denysonique> e
06:30 < circlicious> ok
06:34 < SubStack> circlicious: EPIPE happens when you try to write to a stream that has been closed
06:34 < SubStack> or a stream that isn't writable
06:38 < circlicious> sorry phone
06:38 < circlicious> one second, gist'ing
06:39 < circlicious> SubStack: denysonique: Nexxy: https://gist.github.com/2987031
06:40 < denysonique> hah!
06:40 < denysonique> slim with node.js
06:40 < denysonique> hehe
06:40 < circlicious> please dont make fun of me :>
06:42 < denysonique> hmm
06:42 < denysonique> writing to stdin?
06:42 < denysonique> right, writing to slim
06:42 <@konobi> get rid of slim.stdin.end
06:43 < circlicious> let me try, i thought that was important. something didnt work without that.
06:43 < denysonique> circlicious: why don't you use  Jade?
06:43 < denysonique> there is also Slim being written in JS, it's called Skim
06:44 < circlicious> konobi: no luck :S
06:44 < circlicious> denysonique: its a different reason. i am not suing it to write code directly :/
06:48 < circlicious> no idea what;s wrong
06:49 <@konobi> circlicious: you may be writing to a handle that isn't open yet (ie: slim.stdin)
06:51 < circlicious> konobi: does this help - https://gist.github.com/2987071 ?
06:52 < denysonique> circlicious: hmm, when I try to run your scirpt I get: /home/dennis/.rvm/gems/ruby-1.9.3-p125/bin/slimrb:9:in `require'
06:52 < denysonique> : no such file to load -- rubygems (LoadError)
06:52 < denysonique> this stops me from figuring out whats wrong
06:53 < circlicious> denysonique: you dont have rubygems?
06:53 < denysonique> circlicious: I got rvm
06:53 < circlicious> or mayb you dont have slimrb ? gem install 'slim' ?
06:53 < Octane> im getting a nasty inheirts.js 404 not found out of nowhere
06:53 < denysonique> % which slimrb
06:53 < denysonique> /home/dennis/.rvm/gems/ruby-1.9.3-p125/bin/slimrb
06:53 < circlicious> sorry i have'nt worked with rvm actually
06:53 < Octane> anyone have any idea how to combat it?
06:53 < circlicious> denysonique: let me think
06:53 <@konobi> Octane: spellcheck?
06:54 < Octane> lol
06:54 < Octane> this shit was working a second ago
06:54 < Octane> https://app.socialtables.com//socialtables.local:1883/require//home/socialtables/app.socialtables.com/node_modules/socialtables/node_modules/inherits/inherits.js 404 (Not Found) 
06:54 < circlicious> denysonique: in the spawn() if you have proper path to the command and then EM_pATH it should work
06:54 <@konobi> circlicious: by using console.log you're changing the timing
06:55 < circlicious> on line 9 slimrb has require 'rubygems' - so maybe rubygems cant be found ? denysonique 
06:55 < circlicious> konobi: what does that mean ?
06:55 <@konobi> circlicious: you could loop waiting for slim.stdin.writable to be true before attempting to write
06:56 < circlicious> slim.stdin.wrtiable is true when i console.logit just before slim.stdin.write , konobi 
06:56 < tim_smart|away> circlicious: How is slim initiated?
06:56 <@konobi> circlicious: timing
06:57 < denysonique> circlicious: the other approach is to use files.... and child_process.exec()
06:57 < circlicious> konobi: you mean it could close between console.log and slim.stdin.write. ?
06:57 < circlicious> denysonique: i hate that one :S
06:57 <@konobi> it may not have even been opened yet
06:57 <@Nexxy> SubStack, y u break dnode
06:57 < tim_smart> circlicious: Do you have a gist of a reproducible script somewhere?
06:58 < circlicious> tim_smart: slim is initiated by the slimrb binary
06:58 < circlicious> tim_smart: i'll write one, wait.
06:58 < tim_smart> circlicious: So a child process
06:58 < circlicious> ya
06:58 < circlicious> i am writing a scipt to directly reporduce for you guys, let me try
06:58 < denysonique> circlicious: tim_smart here is one https://gist.github.com/48098aa0955d840a1f63
07:00 < denysonique> circlicious: it actually works for me
07:00 < denysonique> I get "<h1>hey</h1>"
07:01 < denysonique> circlicious: does slimrb work when you $ slimrb
07:01 < denysonique> h1 hello world
07:01 < denysonique> (hit control+d)
07:01 < denysonique> write to slims' stdin manually
07:01 < denysonique> maybe your slim is borken
07:01 < denysonique> circlicious: the gisted code works fine on my machine
07:01 < circlicious> yes it works direfcly from bash
07:02 < circlicious> wait i am trying your gisted code noe, 1min
07:02 < circlicious> now
07:03 < bosky101> is there a way to create a gz file without using fs.createReadStream ( ie create a gzip directly from string or buffer instead of a file)
07:03 < denysonique> bosky101: just do it like circlicious 
07:03 < denysonique> bosky101: use stdin/stdout
07:03 < denysonique> and child_process.spawn
07:03 < denysonique> with gzip
07:04 < denysonique> or the gzip module
07:04 < bosky101> denysonique: so what will the arguments to spawn be
07:04 < denysonique> bosky101: what are you trying to do?
07:05 < bosky101> the examples from the new zlib library dont show creating gz from string or buffer. that's what i'm trying to do
07:05 < circlicious> denysonique: konobi : tim_smart : i don't know what to say https://gist.github.com/2987102 :|
07:05 < austinbv> man jslint is annoying
07:06 < austinbv> it doesnt like any reserved words in any . chain
07:06 < denysonique> circlicious: you are having with some net writing
07:06 < denysonique> circlicious: net.js
07:06 < denysonique> circlicious: unrelated to slims stdin
07:06 < denysonique> I guess
07:06 < denysonique> something to do with express.js
07:06 < denysonique> etc
07:06 < austinbv> so (true).should.be.true pisses it off
07:06 < denysonique> austinbv: what testing framework is that btw?
07:06 < circlicious> but this slim_test.js doesnt have any require('express') its just the code i pastebin'ed - from your one
07:07 < denysonique> circlicious: did you try to interact with slimrb manually?
07:07 < denysonique> by handtyping to stding?
07:07 < circlicious> denysonique: ya check below
07:07 < denysonique> stding*
07:07 < circlicious> i have written the command in comments
07:07 < denysonique> stdin*
07:07 < denysonique> right
07:07 < circlicious> and the output
07:07 <@konobi> circlicious: remove the write and add an on('exit') handler to see it's working properly
07:08 < circlicious> somethin wrong with node?
07:08 < circlicious> konobi: ok, 1 second
07:10 < circlicious> konobi: i commented write and end, and added on('exit'... this is what the output is, `/usr/bin/env: ruby: No such file or directory` AND `Exit Code: 127`
07:11 < circlicious> but https://gist.github.com/2987127
07:11 <@konobi> circlicious: you need to add your PATH env to spawn
07:14 < circlicious> konobi: how is that done ? just add 'PATH': "$PATH",  to the env object?
07:15 <@konobi> env: { PATH: process.env.PATH }
07:15 < austinbv> denysonique: mocha + should
07:15 < denysonique> cheers
07:15 < SubStack> Nexxy: because dnode really shouldn't have ever bundled socketio
07:16 < SubStack> the new pipeable api is much better
07:16 < austinbv> I think I am gonna turn off syntatic jshint is just too annoying
07:16 < SubStack> Nexxy: it's super easy to use dnode with shoe: https://github.com/substack/dnode#dnode-in-the-browser
07:17 < circlicious> konobi: denysonique : it works :D
07:17 < circlicious> why could'nt it take the PATH before?
07:17 < denysonique> circlicious: it did on my sys
07:17 <@konobi> circlicious: you have to be explicit
07:17 < denysonique> circlicious: you are using a mac
07:17 < denysonique> thats why
07:17 < denysonique> ;p
07:17 < tim_smart> Blame it on Steve
07:17 < circlicious> lol..
07:18 < tim_smart> I run arch linux on my Macbook
07:18 < tim_smart> Such a relief to use linux
07:18 < circlicious> konobi: one more thing, can you explain that timing issue ? just want to keep it in mind so that if there's a related issue next time i can figuyre out the solution quick
07:18 <@konobi> circlicious: nvm
07:18 < circlicious> ? :P
07:18 < sx2020> why does it matter from which directory i call a script from. shouldn't the script's reference path be itself, not from where it was called?
07:18 < circlicious> did you mean that between console.log and stdin.write the stdin could close ?
07:18 < chnops> I went the other way, from linux to mac :| gnome3 was making me pull my hair out
07:19 < tim_smart> chnops: Eww hnome
07:19 < tim_smart> *gnome
07:19 < circlicious> konobi: thanks man, this was such a small thing but sucked away 3 hours :O :(
07:19 < denysonique> chnops: there is also KDE
07:20 < tim_smart> denysonique: Eww KDE
07:20 < tim_smart> :p
07:20 < denysonique> chnops: and Unity is like OS X...
07:20 < circlicious> i thin node debugging should be made easier, like which line error is caused and more "exactness"
07:20 < denysonique> circlicious: ruby is more accurate?
07:20 < denysonique> ruby's stacktraces
07:20 < circlicious> ye :D but i am not a ruby champ
07:21 < circlicious> i just use the tools and get job done, hehehe
07:21 < tim_smart> denysonique: Unity isn't too bad. Still a little bulky though.
07:21 < denysonique> hmm, I haven't noticed that, maybe I write to less errors
07:21 < circlicious> and thanks to all of you for giving your time and helping me out for about an hour, really appreciate it
07:21 < TonkaTruck> Do you all write modules for everything?  Or do you ever just stick an object literal in your app or what?  I'm a big js fan but this is my first node app.  I was reading about modules and they seem very much about sharing/distributing code.
07:22 < denysonique> circlicious: I don't just use the tools to get a job done, I use the best tools
07:22 < circlicious> hehe nice :D
07:23 < circlicious> i just wanted to say i aint too good with ruby or node. i just coded ruby after a long time for this project
07:23 < tim_smart> My setup is arch linux + awesome + screen + vim for dev
07:23 < circlicious> oh man, screen is so good
07:23 < sx2020> anyone know why if i run: # node script.js   it works, but not if i run: # node ./somedir/script.js   ??
07:23 < austinbv> screen or tmux are my savior
07:23 < tim_smart> awesome is so much better than gnome or kde
07:23 < denysonique> hmm
07:24 < tim_smart> xmonad is good too apparently
07:24 < denysonique> tim_smart: but not better than compiz
07:24 < denysonique> you can get tiling in compiz etc
07:24 < denysonique> in Kwin as well
07:24 < denysonique> btw
07:25 < denysonique> the closest langauge that JS resembles is Ruby to me
07:25 < abraxas> I'm using node-csv-parser to parse csv files, row by row. For me to write out data for these rows is an asynchronous process (each row becomes a JSON file on disk). How am I supposed to control this stream? Call pause() on the csv stream while I'm doing the write operation? Or is there a better way?
07:25 < circlicious> denysonique: konobi : maybe you can help me with 1 more thing. i changed my command to `bundle exec slimrb` now because it is better and i don't have to hardcode path. but now i get this error - `execvp(): No such file or directory`
07:26 < denysonique> circlicious: what do you need bundler for?
07:26 < denysonique> for slimrb?
07:27 <@konobi> you still need a path to 'bundle'
07:27 < circlicious> ya and some other ruby gems that i am using in the sinatra part of my project
07:27 < SubStack> tim_smart: as a long-time xmonad user I agree completely
07:27 < circlicious> konobi: env: {PATH: process.env.PATH} ios there ?
07:27 < denysonique> yeah
07:27 < denysonique> circlicious: depends whether bundler is in that path
07:28 < circlicious> it is, as i can execute it from cli
07:28 < circlicious> terminal/bash
07:28 < sx2020> i thought the script's reference path would be relative to where it is located, not from where it is called.
07:28 < denysonique> unless you have something like OZSH
07:28 < denysonique> omyzsh
07:28  * SubStack <-- xmonad user since 2008
07:28 < tim_smart> SubStack: I haven't tried it, I enjoy using awesome quite a lot, so I have never tried an alternative.
07:28 < SubStack> yeah same
07:28 <@konobi> SubStack: pppfffttt... ratpoison ftw
07:28 < tim_smart> SubStack: You haven't tried awesome?
07:28 < [AD]Turbo> hi there
07:28 < SubStack> tim_smart: correct
07:29 < circlicious> denysonique: konobi : ok i replaced bundle exec slimrb with /usr/local/bin/bundle exec slimrb , still same error with exitcode 127
07:29 < denysonique> does bundle exec slimrb work?
07:29 < circlicious> ya
07:29 < circlicious> in bash
07:29 < denysonique> do you have slimrb in the gemfile?
07:29 < denysonique> ok
07:29 < circlicious> yes
07:29 < tim_smart> SubStack: Ryan introduced me to awesome actually
07:29 < circlicious> gem 'slim'
07:29 < circlicious> echo 'h1 hello' | bundle exec slimrb works! in bash
07:30 < circlicious> $ echo 'h1 hello' | bundle exec slimrb
07:30 < circlicious> <h1>hello</h1>
07:30 < denysonique> hmm
07:30 < denysonique> spawn error reporting sort of sucks
07:31 < tim_smart> circlicious: So does: echo 'h1 hello' | slimrb
07:31 < circlicious> dam it, my bad
07:31 < tim_smart> If you have gems bin in your path
07:31 < circlicious> first argument to spawn should be just 2 command, so bundle, not bundle exec slimrb
07:31 < circlicious> *1 command
07:31 < circlicious> all works great :D
07:32 < circlicious> denysonique: konobi : tysvm :D
07:34 < TonkaTruck> zomyjesus so it's just commonjs...yay.
07:34 < TonkaTruck> thanks for ur help, yall.
07:35 < sumitngupta>  Anyone else using the Nap package with Stylus?   I love the way I get to configure my assets with Nap but a page request in the app doesn't trigger a recompiliation of my .styl files.  (full disclosure: im brand new to node/express development) 
07:36 < circlicious> nap or nib?
07:36 < TonkaTruck> Love this redis module.  It's so just Cloud.
07:36 < circlicious> :/
07:36 < sumitngupta> nap, the asset manager
07:36 < circlicious> Love this mongo module. It's so just WebScale.
07:36 < bosky101> what do i have to change in the zlib example to use child-process , spawn instead of createReadStream ?
07:36 < sumitngupta> https://github.com/craigspaeth/nap
07:37 < TonkaTruck> zomygangsta WebScale meme so 2008!
07:38 < TonkaTruck> I'm so excited about Node....finally a server written in jquery.
07:39 < denysonique> TonkaTruck: you wrote a server in jQuery?
07:39 < TonkaTruck> denysonique: Yes.  It's awesome.  You can like "animate" ports so your clients have to guess where the service is.  *genius*
07:39 < denysonique> lol
07:40 < denysonique> TonkaTruck: show use the code on GH
07:40 < denysonique> us*
07:40 < TonkaTruck> Um...what's "GH"?  Is that some new SVN hub?
07:40 <@konobi> out!
07:40 <@Nexxy> TonkaTruck, lol
07:40 < denysonique> its codebook
07:41 < jhsto> anyone has experience in serving some static files on windows environment? 
07:41 < jhsto> i can get nowjs working, since it cant find it, gives 404 error
07:42 < jhsto> i mean i cant*
07:42 < denysonique> TonkaTruck: this is the essential ingredient to codebook: http://coderwall.com/p/xlatfq?i=9&p=1&q=
07:42 < TonkaTruck> denysonique: Can you send me the content of that page?  I don't have an internet connection.
07:44 < denysonique> TonkaTruck: sendmail on my current os (emacs) doesn't seem to work
07:45 < denysonique> actually that meme is not as popular as I thought
07:45 < denysonique> 'by using emacs via sendmail'
07:46 <@konobi> denysonique: it's not far fetched either... there are folks designing microcontrollers to run lisp at a HW level
07:46 <@konobi> 'Movitz'
07:47 < TonkaTruck> denysonique: I have Macromedia Homesite...send it to me.  It can parse anything.
07:48 < tim_smart> npm install -g gista && gista -h
07:48 < tim_smart> Like a boss
07:49 <@konobi> wonder if anyone is using 'mocked' in anger yet
07:53 < jhsto> does anyone know a good snipper how i could count how many times a certain function runs in a second?
07:53 < jhsto> snippet* ffs
07:57 < jesusabdullah> jhsto: Just think about the problem for a wecond
07:57 < jhsto> maybe i should
07:57 < jhsto> its monday morning
07:57 < jhsto> maybe its that
07:58 < jhsto> oh wow, node 0.8 has been released
07:58 < jhsto> any reason why i should update?
07:59 < abraxas> jhsto: released where? i don't see it
07:59 < jhsto> nodejs front page
07:59 < tim_smart> jhsto: Performance, stability
07:59 < jhsto> it says 0.8
07:59 < abraxas> jhsto: says v0.6.19 here
07:59 < jhsto> :S
08:00 < tim_smart> jhsto: What front page are you looking at?
08:00 <@konobi> the topic says 0.8
08:00 < abraxas> the topic says monday :) not monday when..
08:00 < jhsto> oh lol, it was docs page of v0.8
08:00 <@konobi> 15:00 UTC
08:00 < abraxas> so a few more hours
08:02 < tim_smart> 0500nzst :(
08:05 < dr0id> I forgot, how do you name a screen ? :P
08:06 < tim_smart> dr0id: What screen is this?
08:06 < dr0id> gnu screen :D
08:06 < sx2020> do people generally have a src/build on dev server and src/build on prod ?
08:06 < zutto> dr0id: -S name
08:07 < TonkaTruck> Is it uncommon to use something like supervisord to manage your node processes?
08:07 < dr0id> zutto: after having it created
08:07 < TonkaTruck> I can't think of a better tool but it could be that I'm drunk.
08:08 < zutto> ..oh ;| not sure bout that
08:08 < dr0id> there was a way, just can't find googling
08:09 < zutto> google says its screen -X sessionname <NEWNAME>
08:09 < dr0id> ah, ^a A :D
08:10 < zutto> or :sessionname <NEWNAME> inside a screen
08:10 < TonkaTruck> omsatan "Great, we now can put the different parts of our application into different files and wire them together by making them modules. "
08:10 < TonkaTruck> I found the best node js site.
08:12 < TonkaTruck> http://www.nodebeginner.org/ sort of a tl;doosey but...
08:12 < nonuby> TonkaTruck supervisord works great, we've used it for years to manage both py and node processes
08:13 < TonkaTruck> nonuby: Thanks...same here...I noticed today that node was blocking by default even...huzzah.
08:13 < radiodario> TonkaTruck: i use supervisor also
08:13 < radiodario> dr0id: have you tried tmux?
08:14 < dr0id> nup
08:15 < radiodario> it's like screen but it's super-easy to split the screen into little terminals
08:15 < radiodario> much easier than on screen
08:15 < dr0id> I'll checkout
08:15 < dr0id> http://toolsdeck.com:8080/processify - so slowww, heh.
08:17 < radiodario> so meta
08:22 < sx2020> tmux better than byobu?
08:24 <@Nexxy> sx2020, I think it's a matter of preference
08:24 < sx2020> does tmux keep terminals open, even if my putty window closes?
08:24 < zutto> indeed
08:24 < zutto> yes
08:25 < sx2020> it looks great
08:49 < guy> AvianFlu: are you online?
08:49 < jesusabdullah> guy: He's probably going to bed. What's up?
08:49 < guy> The delete event doesn't seem to be triggered. https://gist.github.com/d09f1ffe87171fdaf1bd
08:50 < guy> I wonder if I am doing anything wrong.
08:50 < jesusabdullah> Oh, yeah, actually i wouldn't know
08:50 < jesusabdullah> maybe a tweet isn't actually getting deleted or something/
08:51 < guy> https://github.com/AvianFlu/ntwitter/blob/master/lib/twitter.js function processTweet(tweet) {} I can't really understand it, but it looks like all but 'data' (data works) events are hanled differently.
08:53 < jesusabdullah> yeah dude, tweet isn't registering a delete i bet you
08:53 < jesusabdullah> like, the api is never actually reporting a delete---at least, not in the way that this api expects
08:54 < guy> That's a shame.
08:57 < guy> https://dev.twitter.com/docs/streaming-api/concepts
08:57 < guy> jesusabdullah: see the "parsing response"
08:59 < jesusabdullah> guy: I know
08:59 < jesusabdullah> guy: processTweet, given that as an object, would emit a "delete" event.
08:59 < jesusabdullah> guy: I'm saying, the object being passed to processTweet doesn't have a delete property on it
09:00 < jesusabdullah> guy: so I would look elsewhere for the bug, starting at whatever is getting passed to processTweet from where
09:00 < guy> https://gist.github.com/47329f987ca9c0e9a23f
09:00 < guy> yeah, I tried that and it wasn't triggered.
09:01 < jesusabdullah> right
09:01 < jesusabdullah> so figure out what object is getting passed in there
09:01 < jesusabdullah> and why it doesn't have a "delete" property
09:02 < guy> processTweet() is not triggered at all upon deleting a tweet
09:02 < smoochict> H'allo
09:07 < guy> jesusabdullah: and streamparser() doesn't emit any delete or _delete events just the same.
09:08 < guy> I am guessing there is no such capability then
09:08 <@Nexxy> because deleting tweets is evil
09:08 < jesusabdullah> I mean
09:09 < jesusabdullah> nobody said it wasn't a bug in the software. What's the raw data getting passed in? Where's the information getting lost to?
09:09 < guy> jesusabdullah: what I am saying, there is no data passed from twitter stream upon deleting a tweet.
09:10 < jesusabdullah> I see
09:11 < jesusabdullah> I didn't quite expect that, though I guess that makes sense.
09:16 < SubStack> oh fuckall
09:16 < SubStack> node pids with spawn() are off by 1
09:16 < SubStack> they start at 0 >_<
09:17 < SubStack> the kill command's pids start at 1
09:17 < jareiko> facepalm :)
09:18 < hemanth> hackers, suggest me a good template system for node
09:18 < hemanth> npm search template give a ton of them 
09:18 < hemanth> tough to decide...need a light wt, json based 
09:18 < SubStack> EXCEPT
09:19 < SubStack> process.kill() works the `kill` command way
09:19 < jesusabdullah> hahahahaha
09:19 < jesusabdullah> i bet it's fixed in 0.8
09:19 < SubStack> probs
09:19 < SubStack> nave installing that shit
09:19 < jesusabdullah> embrace progress, it will make you feel less like clint eastwood's character in that movie with the car and the gangsters and shit
09:19 < jesusabdullah> gran turion
09:20 < jesusabdullah> or whatever
09:20 < jesusabdullah> that one
09:20 < jesusabdullah> turino*
09:22 < milani> hemanth, jade, mustache are my favorites.
09:22 < hemanth> milani, thanks, I had seen mustache b4, will check out jade; anything like md?
09:23 < milani> hemanth, but md is not template engine.
09:23 < hemanth> milani, I meant, any engine that renders md
09:23 < milani> if you want a markdown engine, use github-flavored markdown 
09:24 < hemanth> milani, https://gist.github.com/1838200 ?
09:25 < NetRoY> anyone here with experience serving css & templates as JS .. 
09:26 < milani> hemanth, https://github.com/github/github-flavored-markdown/
09:26 < milani> hemanth, there is a famous md engine, named showdown
09:26 < milani> it is in JS.
09:27 < jacobrask> I would use the marked module
09:27 < jacobrask> It is more actively maintained
09:27 < jacobrask> And supports GitHub Flavored Markdown
09:27 < hemanth> milani, ok!
09:28 < hemanth> jacobrask, will check that too...
09:33 < hemanth> https://github.com/chjj/marked has a very decent benchmark!
09:38 < sfoster> I'm trying to modify the 'standalone proxy server with latency' http-proxy example to log responses, and I'm not getting any response events? code here: http://pastebin.mozilla.org/1677766
09:39 < sfoster> I'm probably not understanding how this works. 
09:41 < SubStack> bwahaha
09:43 < Node_yea> hello
09:47 < dr0id> I think node is actually fast :>
09:56 < funktronic> dr0id: it's not bad
09:56 < funktronic> i still prefer threading
09:57 < tim_smart> node won't get threads though
09:57 < tim_smart> node is fast at some things
10:07 < funktronic> tim_smart: the idiom does fit certain things well yes
11:22 < staar2> hello
11:22 <@Nexxy> hi staar2 :)
11:22 < staar2> one simple question
11:23 <@Nexxy> do you have stairs in your house?
11:24 < staar2> expressjs and redis session store, when the web dies or gets restarted the sessions gets destroyed ?
11:24 <@Nexxy> staar2, the web will never die
11:24 <@Nexxy> don't worrie
11:24 <@Nexxy> worry even
11:24 < staar2> web server
11:24 <@Nexxy> OH
11:25 <@Nexxy> as long as your redis stays running your sessions should persist
11:26 < upb> staar2: do you work for medvedia?:P
11:27 < staar2> medvedia ? :D
11:28 < upb> webmedia
11:32 < staar2> nop, but why such question ? :)
11:33 < upb> why not.
11:35 < dr0id> why you
11:42 < SubStack> beh why doesn't node have waitpid
11:43 < SubStack> oh wait, no I want the other thing
11:43 < SubStack> SIGCHLD?
11:43  * SubStack tries
11:45 < SubStack> I want SIG_IGN :(
11:49 < SubStack> oh right
11:49 < SubStack> https://github.com/joyent/node/issues/265
11:50 < SubStack> nobody has looked at this yet >_<
11:50 < SubStack> maybe I'd better just write this already
11:51 < dr0id> hi SubStack
11:51 < SubStack> hoy
11:55 < SubStack> hilarious that issue is still open, 2 years old!
12:48 < IM> Looking to start building an app in Node using an MVC approach. Any recommendations on tools I should use?
12:52 < kranius> IM: vim
12:57 < Akh755> IM: best tool your brain :3
13:07 < IM> fuck me geek comedians
13:07 < IM> keep em coming 
13:12 < Akh755> IM: so how u doing ?
13:12 < Akh755> damn he quit :/
13:56 < randomdrake> Hello. I am unable to install anything via npm. Visiting the address in my browser indicates the security certificate is invalid. 
13:56 < randomdrake> Is there an alternative or fix available?
13:57 < huamma> Is there a way to upgrade node using brew on OS X?
13:58 < randomdrake> My npm install command just fails after a few moments with an "npm ERR! Error: socket hang up" with additional information.
14:12 < radiodario> huamma: brew upgrade node
14:13 < huamma> Yes, I know… But I've 0.6.18 installed and it says if up to date ._.
14:14 < huamma> I mean "it's up to date" :P
14:15 < bnoordhuis> huamma: brew probably hasn't released the update yet
14:16 < huamma> I see
14:18 < MerlinDMC> brew hasn't ;)
14:36 < CIA-75> node: Ben Noordhuis master * r6003912 / test/simple/test-tls-set-ciphers.js : test: use RC4-MD5 cipher in tls test - http://git.io/Vyv4Zg
14:37 < CIA-75> libuv: saghul v0.8 * r431d61a / (src/win/error.c test/test-fs.c): win: map ERROR_PRIVILEGE_NOT_HELD to UV_EPERM - http://git.io/WYZj-A
14:37 < CIA-75> node: isaacs v0.8.0-release * r9a7158d / deps/uv/src/unix/sunos.c : Hotfix for #3528 Add strdup in uv_cpu_info - http://git.io/Ccja0g
14:37 < CIA-75> node: isaacs v0.8.0-release * r8b8a7a7 / (ChangeLog src/node_version.h): 2012.06.25, Version 0.8.0 (stable) - http://git.io/wApMSA
14:38 < Phoenixz> Hey there, any node wizzards here who could help with this one? I have a node system that uses express, socket.io, DNode, and the internal node cluster mechanism amongst things, and about 1-2 times a day for no real obvious reason, the worker process shoots to 100% and becomes unresponsive untile I forcibly kill and restart it..
14:39 < dr0id> abra cadabra!
14:39 < keverw> Hey. Is it possible to unrequire, and then require again? Like say the file was changed, and I want to reload only one module without restarting the whole thing?
14:39 < Phoenixz> I tried an strace, which gives only this: http://pastebin.com/4FcSP0sx
14:40 < Phoenixz> Is there anybody who might know what this is related to? Google told me that I'm not the only one with this problem but I have yet to find a solution..
14:40 < Phoenixz> Right now this hang thing happened 5 minutes after a restart of the app, so it's becomming kind of a big problem.. :(
14:41 < dubcanada> Did the other problems have any kind of a solution?
14:41 < dubcanada> Or have you tried anything?
14:42 < dubcanada> And is there anything besides your setup that would cause a spike? Database, other processes that are spiking?
14:42 < dubcanada> Node version, and all that jazz is also helpful.
14:43 < Phoenixz> dubcanada: AT first I suspected DNode since I use it to comunicate between PHP and node, and I'd regularly would find both hung up in 100%
14:43 < Phoenixz> But right now I just find the node process in 100%, 
14:43 < Phoenixz> dubcanada: From what I've found so far it seems to be a node bug, but I'm not 100% sure yet
14:43 < Phoenixz> dubcanada: one second, getting node version
14:44 < Phoenixz> dubcanada: or better, I'll pastebin my package.json file, should tell all you need, right?
14:44 < dubcanada> Usually if NodeJS is at 100% there is something that is causing it to stay there.
14:44 < dubcanada> Yah that's fine
14:44 < dubcanada> Do you have logging stuff installed for express?
14:44 < dubcanada> Something like http://www.senchalabs.org/connect/middleware-logger.html
14:45 < dubcanada> You also don't use nextTick do you?
14:46 < dubcanada> Or anything in a setTimeout function that would cause it to infi loop
14:46 < keverw> Like how the modules are loaded once, and cached. Can you force it to reload it from the file system, not cache?
14:47 < SubStack> Phoenixz: try with the new dnode and shoe https://github.com/substack/dnode#dnode-in-the-browser
14:47 < Phoenixz> http://pastebin.com/uzvTkDKs
14:48 < dubcanada> Your dnode is a little old
14:48 < dubcanada> Try upgrading to 1.0 to begin with
14:48 < SubStack> dubcanada: dnode 1.0 doesn't ship with socket.io by default
14:48 < Phoenixz> SubStack: I'll look into that.
14:49 < Phoenixz> dubcanada: I'll upgrade all dependancies, guess that would not hurt
14:49 < dubcanada> Your express is also old
14:49 < dubcanada> But yah
14:50 < dubcanada> SubStack: Oh… I did not know that.
14:51 < keverw> oh... nvm. I guess you can delete from require.cache
14:54 < CIA-75> libuv: saghul master * r431d61a / (src/win/error.c test/test-fs.c): win: map ERROR_PRIVILEGE_NOT_HELD to UV_EPERM - http://git.io/WYZj-A
14:54 < CIA-75> libuv: Ben Noordhuis master * rd0816aa / src/unix/sunos.c : sunos: fix free() of non-malloc'd pointer - http://git.io/pZLMXA
14:54 < CIA-75> libuv: Ben Noordhuis master * ra416a58 / (src/unix/sunos.c src/win/error.c test/test-fs.c): Merge branch 'v0.8' - http://git.io/ZMngww
14:54 < CIA-75> libuv: Ben Noordhuis v0.8 * rd0816aa / src/unix/sunos.c : sunos: fix free() of non-malloc'd pointer - http://git.io/pZLMXA
14:59 < CIA-75> node: isaacs v0.8 * r7823474 / doc/blog/release/node-v0.8.0.md : blog post for v0.8.0 (+6 more commits...) - http://git.io/s1d08Q
15:04 -!- isaacs changed the topic of #Node.js to: node.js v0.8.0 http://blog.nodejs.org/2012/06/25/node-v0-8-0/
15:05 < bnoordhuis> and we're live!
15:05 < dubcanada> YAH!
15:06 < bnoordhuis> hah, someone already posted it to HN: http://news.ycombinator.com/item?id=4156801
15:08 < wavded> sweet!
15:12 < Phoenixz> dubcanada: Back, sorry, had to attend a minor emergency here
15:13 < Phoenixz> Anyway, as I understand it then, the new DNode V1 does not work with socket.io, or how?
15:13 < dubcanada> No it doesn't
15:13 < dubcanada> SubStack just told me
15:15 <@isaacs> hacker all the news! http://news.ycombinator.com/item?id=4156801
15:17 < tbranyen> fine
15:18 < Phoenixz> ok
15:21 < Industrial> I'm using 'n' to manage node versions and if I do $ n; I get o 0.7.9 0.8.0 so 0.7.9 is marked as active. How do I get 0.8.0 used systemwide instead? (I already compiled and installed it)
15:22 < gkatsev> isaacs: will we see 1.0 after 0.9? or probably a 0.10?
15:23 <@isaacs> gkatsev: there will probably be a 0.10
15:24 < gkatsev> I figured. lots of work to be done :)  gl
15:26 < drudge> node party
15:28  * radiodario brings out the tequila
15:29 < benatkin> hooray!
15:32 < staar2> wow
15:35 < drudge> does anyone install nvm via puppet?
15:48 < radiodario> the new node version breaks jade?
15:48 < radiodario> i installed the new version and did an npm update and now my express app can't find module 'jade'
15:48 < radiodario> awesome
15:48 < dr0id> ness
15:49 < radiodario> oh i think i can hear my boss screaming
15:49 < radiodario> 1 second
15:49 < dr0id> tell him that I have asked him to be quiet
15:51 < Rarity755> lol
15:51 < radiodario> npm ERR! notsup Required: {"node":">= 0.4.x < 0.8.0"} 
15:51 < radiodario> jadeeeee!!!
15:52 < Rarity755> da hoe.. 
15:52 < radiodario> is there a way to force install?
15:52 < radiodario> of jadE?
15:52 < tjholowaychuk> radiodario that's odd, my package.json says "engines": { "node": ">= 0.1.98" }"
15:52 < tjholowaychuk> for jade
15:53 < radiodario> well everything is crapping out now
15:53 < tjholowaychuk> im installing 0.8.0 ill have a look
15:54 < radiodario> pfff
16:05 < radiodario> https://github.com/visionmedia/jade/issues/689
16:06 < Industrial> I have installed node version management tool n (by visionmedia) and use node 0.7.9 with it. How do I install and use 0.8.0 globally instead of 0.7.9 ?
16:07 < tjholowaychuk> Industrial $ n 0.8.0
16:08 < CIA-75> node: koichik v0.8 * rd7825b3 / (doc/api/_toc.markdown doc/api/all.markdown): docs: add punycode to TOC - http://git.io/CU9Lwg
16:10 < djMax> Does sequelize have any support for proper decimals?
16:11 < guy> node-supervisor VS nodemon?
16:11 < WarheadsSE> packaging 0.8.0 on Arch Linux ARM now
16:11 < guy> issa, uh. "CouchDB temporarily unavailable; This server is rebooting. It will return automatically soon."
16:11 < radiodario> wow they just fixed it
16:11 < guy> isaacs*
16:12 < radiodario> the jade version
16:12 < Industrial> tjholowaychuk: seems I can't do that with my user but I can with root (permission rights in /usr/local/include/node/*)
16:12 < Industrial> so my user still has 0.7.9 :S
16:14 < Industrial> tjholowaychuk: https://gist.github.com/d04277d4455ab98c385b
16:15 < Sottilde> exit
16:15 < Sottilde> ./quit
16:15 < Sottilde> fuck
16:15 < Sottilde> e
16:16 < denysonique> wow
16:16 < denysonique> in v0.8.0 you don't need to use require
16:16 < cronopio> isaacs: props for that great blog post i really enjoy the read
16:16 < dr0id> link?
16:16 < denysonique> for standard methods
16:17 < Industrial> denysonique: nice
16:17 <@isaacs> cronopio: thanks :)  ryah and some of the other core team guys reviewed and added some bits.
16:17 < Industrial> pave the way to autoloaders?
16:17 < Industrial> isaacs: at what url?
16:17 < alejandromg> denysonique: but in the repl
16:18 < Industrial> oh THE blog :P
16:25 < bradleymeck> what are people using these days for bigint and int64 munging
16:27 < guy> https://gist.github.com/a73c8bab5a5c0df8df43
16:28 < guy> I have a problem with escaping. Apparently this, like in normal browser JS doesn't work. There is no way to write text-block with line-breakes?
16:28 < guy> Apart from escaping every line.
16:28 < timoxley> guy welcome to javascript
16:29 < timoxley> no multiline strings
16:29 < guy> mother.
16:29 < timoxley> array.push('line1')
16:29 < timoxley> array.push('line2')
16:29 < timoxley> b.join()
16:29 < niallo> is the package registry down for anyone else ?
16:29 < alejandromg> or add a "\" at the end of each line
16:29 < creationix> it's really slow for me
16:29 < alejandromg> niallo: here
16:29 < bradleymeck> guy why not put that into a file ending in .sql for your own sanity
16:29 < olahol> niallo: it was for me a while ago
16:30 < olahol> now it's up
16:30 < guy> bradleymeck: and then import it with fr?
16:30 < guy> fs*
16:30 < bradleymeck> at setup-time ya
16:30 < bradleymeck> +1 for knowing where SQL is vs js
16:33 < timoxley> guy you could also write your own require function for handling '.sql'
16:34 < timoxley> though that might be bad practice unless you're doing something special with it
16:43 < jmorris> express.js quetion: how do i do app.get(...) for a HEAD request?
16:43 < motiooon_> what is the best way to handle errors, exceptions in node ?
16:43 < CIA-75> node: Bert Belder v0.8 * r3f932c5 / tools/msvs/msi/product.wxs : windows msi: don't use .exe file as icon - http://git.io/Rh00tw
16:43 < CIA-75> node: Bert Belder v0.8 * r41a4b73 / src/res/node.ico : windows: remove 256x256 version of the icon - http://git.io/0ej9RA
16:43 < motiooon_> is there any good plugin that does that?
16:44 < guy> why fileReadSycn returns "<Buffer 53 45 4c 45 43 54 0a 09 44 49 53 54 49 4e 43 54 20 77 31 2e 77 6f 72 64 0a 46 52 4f 4d 0a 09 77 6f 72 64 73 20 77 31 0a 49 4e 4e 45 52 20 4a 4f 49 4e 0a ...>"
16:45 < guy> `If encoding is specified then this function returns a string. Otherwise it returns a buffer.
16:45 < guy> Got it.
16:47 <@maxogden> binary data is web scale
16:47 < motiooon_> how should I deal with unhanded exceptions in my node js application ?
16:47 < motiooon_> is there any module that does that ?
16:48 < guy> Does https://github.com/felixge/node-mysql support named binding?
16:49 < drudge> jmorris: app.head?
16:50 < bnoordhuis> motiooon_: re dealing with unhandled exceptions - you should be dealing with them by making sure they don't happen
16:50 < motiooon_> ok so how do I do that ?
16:50 < bnoordhuis> motiooon_: i'm half-serious. there's process.on('uncaughtException') but it's fraught with dangers
16:50 < bnoordhuis> motiooon_: node v0.8 has domains which are superior in all respects
16:50 < jmorris> drudge: no that method doesn't exist
16:52 < motiooon_> bnoordhuis: so you say to use process.on('uncaughtException')?
16:52 < bnoordhuis> motiooon_: that's exactly what i'm not saying
16:52 < drudge> jmorris: was 2.6/3.0 i think
16:52 < motiooon_> ok, so should I use node 0.8 ?
16:52 < bnoordhuis> motiooon_: process.on('uncaughtException') is almost always wrong
16:53 < bnoordhuis> motiooon_: yes
16:53 < tbranyen> i use uncaughtException in all code that goes to production
16:53 < tbranyen> i'd rather report errors that i may have missed
16:53 < tbranyen> than crashing the entire app
16:53 < eephillip> I have a symptom in which my node server after running for a couple of days will begin to duplicate console.log messages 6 in a row right now. I think its related to an eventemitter used for tcp server i'm opening and closing. Thought I would ask if was something obvious before posting code. If I restart the server it goes away.
16:53 < motiooon_> but how node 0.8 does better with errors ?
16:53 < bnoordhuis> tbranyen: it's very often not safe to continue after uncaughtException
16:53 < motiooon_> isn't the same thing?
16:54 < bnoordhuis> tbranyen: only use it to write something to a log and exit
16:54 < tbranyen> bnoordhuis: hasn't been my experience at all
16:54 < bradleymeck[omno> eephillip: sounds like leaky emitter, just reussing an ee or something
16:54 < tbranyen> bnoordhuis: we had an error with JSON.parse from malformed data returned by an arbitrary server
16:54 < tbranyen> totally cool if it fails
16:54 < tbranyen> we just needed a try/catch
16:54 < tbranyen> but the whole app would have died
16:54 < tbranyen> over something totally irrelevant
16:54 < motiooon_> but the try cash wouldn't work for async operations
16:54 < bnoordhuis> tbranyen: wrap the call to JSON.parse in a try/catch block
16:54 < bradleymeck[omno> tbranyen: i think he means errors that are unexpected
16:55 < tbranyen> bradleymeck[omno: exactly, at the time it was unexpected
16:55 < bradleymeck[omno> like .listen blowing up
16:55 < tbranyen> so glad i had that uncaughtException there
16:55 < bnoordhuis> tbranyen: using uncaughtException for that is like using a chainsaw to clip your toenails
16:55 < tbranyen> bnoordhuis: yeah... sure
16:55 < bnoordhuis> possible but dangerous
16:55 <@maxogden> yea its pretty brute force
16:55 < tbranyen> its an excellent safeguard, i don't pretend to know where all errors come from
16:55 < bnoordhuis> anyway, we'll probably phase out uncaughtException eventually
16:55 < tbranyen> i hope not :-/
16:55 < bnoordhuis> so start switching to domains already :)
16:56 < motiooon_> but how would node 0.8 solve my problems if I don't use process.on (unhanded…)
16:56 < tbranyen> bnoordhuis: will do!
16:57 < eephillip> bradleymeck[omno: k researching...
16:57 < motiooon_> bnoordhuis: what does node 0.8 do that I don't have to use uncaughtExceptions anymore ?
16:58 < motiooon_> whats the best practice to deal with potential errors in the application
16:58 < motiooon_> ?
16:59 < mattrobenolt> What's the environment variable to compile node using multiple cores now with the new build system?
17:00 < mattrobenolt> JOBS definitely does not cut it.
17:01 <@isaacs> mattrobenolt: make -jJOBS
17:01 <@isaacs> mattrobenolt: like a normal program :)
17:01 < mattrobenolt> I used to do:  JOBS=8 make
17:01 <@isaacs> mattrobenolt: not so fancy proprietary environ
17:01 <@isaacs> mattrobenolt: make -j8
17:01 < mattrobenolt> Ahh, ok.
17:04 < drudge> isaacs: when i use nave usemain latest it compiles and installs, but doesn't show up under nave ls, is that normal?
17:05 <@isaacs> drudge: yes, that's normal
17:05 <@isaacs> drudge: because it didn't install it in a nave location, it installed it in the /usr/local, which nave doens't actually know about
17:06 < drudge> isaacs: if i did an install first, then usemain does it symlink or recompile?
17:07 <@isaacs> drudge: it'll do the ./configure and compile again, but it'll be a fast compilation, because only a few things change for that
17:07 < drudge> isaacs: ok, thanks!
17:12 < guy> https://gist.github.com/36bf4d720b104faca398 This produces SQL syntax error using node-mysql, obviously it shouldn't.
17:13 < mattrobenolt> guy: Why set that @query_str variable?
17:14 < mattrobenolt> I don't know what the problem is, but I feel like that'll cause an issue.
17:14 < sflatchkey> excited to play with 0.8, but pushing to heroku fails with:  !     Heroku push rejected, failed to compile Node.js app. i just set "engines": {     "node": "0.8.x"   } in my package.json  any ideas?
17:14 < guy> Because the original query looks like this.. https://gist.github.com/6a2420e00ecf22f781f6 and for whatever stupid reason (wtf? https://github.com/felixge/node-mysql/issues/133) named bindings are not implemented.
17:15 < mattrobenolt> guy: Ahh, I see what you mean.
17:16 < mattrobenolt> Yeah, I feel either way the SET call is going to cause problems. I don't know anyone who has used that outside of raw SQL.
17:16 < mattrobenolt> Outside of an application environment.
17:17 < mattrobenolt> Not sure why felix would say named bindings was out of scope though.
17:17 < timoxley> isaacs those 0.8 performance benchmarks on the blog would be a lot more meaningful if they also displayed the percentage improvement. people are bad at maths in the head
17:18 < rageous> I'm bad at maths on the paper.
17:18 <@isaacs> timoxley: the problem is that %ge improvement is somewhat misleading in r/s numbers.
17:18 < benatkin> I think it's time homebrew started installing npm with node
17:18 <@isaacs> timoxley: what you care about is actually the %ge reduction in time/request, not the %ge increase in request/time
17:18 <@isaacs> timoxley: or rather, what is more useful anyway
17:19 < booyaa> benatkin: well volunteered!
17:19 < rageous> Maybe this is a dumb question, but will .8 break anything?
17:20 < drudge> isaacs: any optimizations for this? https://gist.github.com/2989972
17:20 < timoxley> isaacs sure just a percentage difference between the old time/req per second/whatever metric  in addition to what's already there would make things more easily brain parsable.
17:21 < benatkin> booyaa: I tried removing it and it had an error in the homebrew link process
17:22 <@isaacs> drudge: you should set the NAVE_DIR to something specific, so you don't litter your /
17:22 < motiooon_> how do I restart a server form within the code ? 
17:24 <@isaacs> timoxley: patch welcome.  docs/blog/release/node-v0.8.0.md
17:24 <@isaacs> timoxley: on the v0.8 branch
17:24 < timoxley> isaacs on it
17:24 <@isaacs> :)
17:24  * isaacs loves blog contents in git already.
17:24 <@isaacs> way > than WP
17:25 < guy> https://gist.github.com/71008f3bc5b94c908a6e
17:25 < guy> out of a sudden mysql returns buffer?
17:25 < guy> [ { word: <Buffer 61 62 65 6a 61 69 70> } ]
17:25 < guy> what's that all about?
17:26 < guy> Additionally you may be interested to know that it is currently not possible to stream individual row columns, they will always be buffered up entirely. If you have a good use case for streaming large fields to and from MySQL, I'd love to get your thoughts and conributions on this.
17:26 < drudge> isaacs: i thought by setting $HOME to "" that it would use /usr/local/lib/nave
17:26 < guy> Don't understand. Does this mean I cannot get just one column form the database?
17:27 < drudge> isaacs: https://github.com/isaacs/nave/blob/master/nave.sh#L57
17:29 < alejandromg> guy: about named bindings this work for me https://gist.github.com/2990018
17:30 < motiooon_> how do I restart a node js server from within the code ?
17:30 <@isaacs> drudge: oh, rigth, that should work
17:30 < guy> That's what I ended up doing, alejandromg.
17:30 < guy> well, similar.
17:30 < drudge> isaacs: i guess it may be cleaner to specify the NAVE_DIR myself
17:30 < drudge> but i thought you used saned defaults :)
17:33 < guy> I still don't understand why do results appear as [ { word_id: 1, word: <Buffer 61 62 65 6a 61 69 70> }, [..]
17:34 < motiooon_> does anybody know : ? how do I restart a node js server from within the code ?
17:35 < mattrobenolt> motiooon_: You can't, per-se.
17:35 < mattrobenolt> You'd have to have a process forked(), then restart that child process.
17:35 < mattrobenolt> A process can't restart itself.
17:36 < motiooon_> mattrobenolt: do you have any example of code or library that does that ?
17:36 < guy> mattrobenolt: well... never say never. Schedule the process to start in a second. Kill itself.
17:37 < mattrobenolt> guy: I'd probably say that's a bad idea.
17:37 < guy> That is a bad idea.
17:37 < mattrobenolt> motiooon_: You should just look into forever or some process manager.
17:37 < mattrobenolt> No need to reinvent the wheel.
17:37 < mattrobenolt> forever or supervisor.d, etc.
17:38 < motiooon_> ok, thanks
17:38 < guy> There is something seriously fucked with node-mysql.
17:38 < guy> mattrobenolt: Can you explain me the MySQL result coming as a buffer thing?
17:39 < mattrobenolt> guy: No idea. I don't use it.
17:40 < guy> https://github.com/Sannis/node-mysql-libmysqlclient/issues/88
17:42 < guy> https://github.com/felixge/node-mysql/issues/214
17:42 < guy> Well, this is obviously not fixed my dearet friend.
17:48 < dshap> hey all - does anyone here use winston for logging?
17:48 < regality> dshap: ya, I use it a lot
17:49 < dshap> regality: do you use it to log uncaught exceptions?
17:50 < regality> we do for the browser, but not inside of node
17:51 < dshap> hm
17:51 < dshap> does node provide a way of handling all uncaught exceptions?  basically a top-level catch?
17:52 < dshap> i'd like to have winston log all uncaught exceptions and set the exitOnError option to false so that my node server continues running even if something goes wrong
17:52 < regality> process.on('uncaughtException', function(err) { console.log('oh noes') })
17:52 < dshap> ah
17:52 < regality> or something like that
17:52 < regality> but if I remember right, winston does have an option to do that for you
17:52 < Epeli> I have question about the domains: Why nextTick is required for domain.run(function ... ); to catch thrown errors?
17:52 < regality> https://github.com/flatiron/winston#handling-uncaught-exceptions-with-winston
17:52 < dshap> regality: winston logs the uncaught exceptions, but i need a way to return an http 500 on all uncaught exceptions
17:53 < regality> if you're using node v0.8 then look into domains
17:53 < dshap> regality: if i don't , then the server just hang with no response on an uncaught exception
17:53 < regality> that's the cool new thing
17:53 < regality> you can check out the docs: http://nodejs.org/api/domain.html
17:54 < dshap> interesting, will read about that
17:54 < dshap> thanks
17:54 < regality> np
17:54 < dshap> random question…do you think it'd be bad form to surround big blocks of server request-handling code with try/catch statements?
17:54 < dshap> basically any uncaught exception should return a 500 response
17:55 < regality> usually that is worthless, because if you do anything async, then it won't be caught
17:55 < regality> that is the idea with domains, making a sane way to deal with that
17:56 < Epeli> I mean why domain.run(function() { throw new Error("my error"); }); is not caught by the domain error handler, but domain.run(function() { process.nextTick(function() { throw new Error("my error");});}); is?
17:57 < dshap> hmm
17:58 < regality> Epeli: When you create the domain, you haven't made the domain active on the stack that you are creating it.
17:58 < regality> Domains attach themselves to EventEmitters, and it won't attach it to the current stack.
17:59 < indutny> tjholowaychuk: heya
17:59 < dshap> regality: one other winston question if you don't mind - something that i haven't been able to figure out…i'm trying to use 2 different log files - one for errors and one for activity.  i can't add 2 file transports, so how do i specify a separate log file for different logging levels?
17:59 < Epeli> regality:  Ok, that makes sense.
17:59 < tjholowaychuk> indutny hey what's up
18:00 < indutny> tjholowaychuk: oh, sorry, looks like nothing
18:00 < indutny> something in dependencies of node-spdy
18:00 < dshap> regality: i was reading this issue on github (https://github.com/flatiron/winston/issues/101) and indexzero said "That's already possible through configurable log levels", but then no one could figure out how
18:00 < tjholowaychuk> haha k
18:00 < indutny> is trying to install commander
18:00 < Epeli> regality:  Bit counterintuitive at first thou
18:00 < tjholowaychuk> ya im running around fixing those
18:00 < indutny> which doesn't work with node 0.8.x
18:00 < indutny> but that's because it's trying to install commander < 0.6.0
18:00 < tjholowaychuk> commander 0.6.1 has the engines thing changed
18:00 < indutny> yeah
18:00 < indutny> I see
18:00 < indutny> but socket.io dependency is still using it somehow
18:01 < tjholowaychuk> hmmm
18:01 < indutny> ah nice
18:01 < indutny> ws
18:01 < Epeli> Node.js documentation should explain why process.nextTick is used in the domain.run() example.
18:01 < regality> Epeli: You might bring it up on the mailing list to have domain.run have a try/catch on the callback
18:01 < indutny> ah, ok
18:01 < indutny> old version of ws
18:02 < wavded> speaking of socket.io that is bajorked in 0.8, but i thought a release was going out soon
18:02 < regality> dshap: the quick fix that comes to mind is to extend the file transport and make winston think it is something else
18:02 < regality> I haven't dealt with using the same transport more than once
18:03 < dshap> hm
18:03 < dshap> seems kinda hacky, right?
18:03 < regality> ya
18:03 < Epeli> regality:  yeah, maybe I will. Thanks anyway on your feedback.
18:03 < indutny> einaros: heya
18:03 < regality> Epeli: np
18:03 < indutny> einaros: your ws on npm is quite old
18:03 < indutny> einaros: can you publish new version with updated ws dependency (as on github's master)
18:11 < owen1> how to run forever and also pass some env variable?
18:11 < owen1> (to my app)
18:16 < totallymike> owen1: have you looked at the docs for process.env?
18:17 < owen1> totallymike: i am now
18:18 < timoxley> isaacs https://github.com/joyent/node/pull/3537
18:31 < heroic123> hey
18:31 < heroic123> i just wrote up an article
18:32 < heroic123> on when and how of nodejs
18:32 < heroic123> would love it if someone could shed some light on its correctness
18:32 < heroic123> http://blog.targeterapp.com/post/25865112316/when-and-how-nodejs
18:33 < ben_alman> is it possible to, when installing a package with npm, to tell it to ignore version mismatches and to install it anyways?
18:33 < ben_alman> one of the deps of the module hasn't had its package.json updated for 0.8.0
18:34 < EricJS> MartinCleaver: 
18:35 < context> ben_alman: maybe it hasn't been updated cause its incompatible ?
18:35 < ben_alman> no it works just fine
18:35 < ben_alman> i mean, in my testing
18:35 < ben_alman> but either way, is there a way to foce install?
18:35 < EricJS> ben_alman: there's a force option on npm install, -F or -f, can't remember for sure,that overrides some of the checks.
18:36 < ben_alman> ok
18:47 < qbit_> > semver.satisfies( '0.8.0', '<=0.8.x' );
18:47 < qbit_> false
18:47 < qbit_> ^ is that right? 
18:47  * qbit_ thought it should have been true
18:50 <@isaacs> timoxley: thanks
18:50 < timoxley> isaacs np
18:56 < mattrobenolt> qbit_: You have the parameters backwards.
18:56 < mattrobenolt> qbit_: Nevermind, I'm on crack.
18:57 < qbit_> k
18:57 < qbit_> :) 
19:02 < emilsedgh_> im writing a music streaming webapp. it is supposed to let users play 20% of all tracks, unless they buy the track. im using node for streaming the actual mp3, but not using static middleware, so i can parse content-range headers and make sure user gets the 20% of file. my only question is... does it scale? i mean, i've heard a lot about that i should use an nginx or something for erving static files.
19:03 < emilsedgh_> s/erving/serving/
19:03 < dubcanada> Why not just make versions of 20% ?
19:03 < eephillip> bradleymeck: I think what I was doing was using emitting a connection event from socket.io and in that was attaching multiple listeners to each connect event
19:03 < emilsedgh_> dubcanada: well, if node 'does' scale, i wouldnt have to :)
19:04 < dubcanada> Why would you rely on some hard core system to monitor activity and make sure the user only gets 20%
19:04 < dubcanada> Why not just make 20%
19:04 < ben_alman> is there any command you can run on a package.json to have it tell you of all your dependencies, what the absolute strictest node version limitation is?
19:04 < emilsedgh_> dubcanada: because its hell lot cleaner and easier this way?
19:05 < dubcanada> Cleaner no, cheaper maybe, easier no.
19:05 < possibilities> initially it seems like i can't delete a symlink from node, what's the trick?
19:05 < dubcanada> Most music places that do the same thing have a player that only plays 20%
19:06 < emilsedgh_> dubcanada: and they all create 20% copies?
19:06 < dubcanada> Relying on some system to monitor every single http request to mp3 and make sure they only stream for X seconds is going to destroy your CPU lol
19:06 < emilsedgh_> no its not
19:06 < dubcanada> Yes it is
19:06 < emilsedgh_> hm
19:06 < dubcanada> Explain how it won't lol
19:07 < dubcanada> Do you think monitoring a CPU process is not CPU intensive?
19:07 < emilsedgh_> monitor?
19:07 < emilsedgh_> i dont do any 'monitor'
19:08 < emilsedgh_> when http request comes and asks me some part of the file, i just make sure i dont respond the 80%.
19:08 < emilsedgh_> let me paste it
19:09 < emilsedgh_> http://paste.kde.org/507566/
19:09 < emilsedgh_> dubcanada: ^
19:09 < dubcanada> Does it work?
19:09 < emilsedgh_> yes
19:09 < dubcanada> On every browser?
19:09 < dubcanada> Or at least ones you're supporting
19:09 < emilsedgh_> well, chrome has some trouble on guessing the right length of the mp3, but i can deal with that
19:10 < emilsedgh_> firefox works fine using jplayer's flash fallback
19:10 < emilsedgh_> (it even finds out the right length)
19:10 < ben_alman> isaacs: Is there an npm command you can run, given a package.json to see what, of all your dependencies, the absolute strictest node engine version limitations are?
19:10 < dubcanada> Hrmm
19:11 < emilsedgh_> although i should make that statSync, async
19:11 < emilsedgh_> but thats somehow a prototype
19:11 < emilsedgh_> i was wondering if it works as well
19:11 < dubcanada> Well if it works on everything you need it too
19:11 < mattrobenolt> emilsedgh_: What's the opposition with creating 20% size files in the first place?
19:11 < dubcanada> I figured browsers would be like wtf why are you sending me 20% of a mp3
19:12 < dubcanada> But I guess if they can handle streaming you're fine.
19:12 < emilsedgh_> mattrobenolt: well, i will then have to maintain those 20%'s. also, i will need some kind of authentication anyway (who gets to access which 100%'s?)
19:12 < mattrobenolt> emilsedgh_: That's not really a hard problem at all.
19:13 < mattrobenolt> You can just write a script that makes the 20% files, serve them directly to non-auth'd users via nginx.
19:13 < mattrobenolt> Then auth real users and kick back the file to nginx to serve to them. There's a header for it, I don't remember off hand what it is.
19:13 < mattrobenolt> X-Sendfile maybe.
19:13 < dubcanada> I kind of agree with Matt, however since you're apposed to the 20% system and relying on browser to support a semi downloaded mp3 playing.
19:13 < qbit_> somanymodulesnotworkingwith0.8.0
19:13 < dubcanada> Then it's just a matter of scaling. I don't think anyone can really answer that question.
19:14 < dubcanada> I think you should put it on your server
19:14 < dubcanada> and run benchmarks and see if it can handle
19:14 < mattrobenolt> emilsedgh_: http://wiki.nginx.org/X-accel
19:14 < emilsedgh_> thanks a lot mattrobenolt
19:14 < mattrobenolt> You can return the full file path as that header from Node, and nginx will then serve the file.
19:14 < emilsedgh_> what makes nginx so much faster, btw?
19:14 < dubcanada> It's not javascript
19:14 < mattrobenolt> It's nginx's sole purpose, haha
19:15 < mattrobenolt> Node is a full application server. Nginx only proxies and only serves static files.
19:15 < mattrobenolt> That's it.
19:15 < lohkey> Hey, i maintain a couple libuv projects @ work and i saw the recent speedups in the node 0.8.0 release. I'm just curios if anybody happens to know any of the root "causes" that these speedups came from and if theres anything i can do to maybe take advantage of them strictly from libuv?
19:15 < mattrobenolt> Give or take a few features here and there.
19:15 < dubcanada> It's also a lot older then NodeJS
19:16 < mattrobenolt> emilsedgh_: Here's a related article: http://kovyrin.net/2006/11/01/nginx-x-accel-redirect-php-rails/
19:16 < emilsedgh_> thanks a lot mattrobenolt
19:16 < mattrobenolt> It's in the context of PHP/Rails, but it's the same idea.
19:17 < mattrobenolt> Let Node.js ONLY handle your authentication. You can still let nginx serve the file.
19:17 < emilsedgh_> mattrobenolt: a little static file server using node will not use any of node's features and would not run much javascript i suppose.
19:17 < mattrobenolt> But serving byte-ranges like you're doing now won't be able to be passed along to nginx. So your best bet is to just write a little script to make the files.
19:18 < emilsedgh_> i see
19:18 < mattrobenolt> emilsedgh_: That's not necessarily the point.
19:18 < emilsedgh_> thanks fot the tips mattrobenolt, dubcanada
19:18 < mattrobenolt> Node.js is not the best equipped at just serving static files.
19:18 < dubcanada> Assuming you're on linux a script to generate 20% of the song would be easy to write
19:18 < emilsedgh_> mattrobenolt: im now more interested in this node vs. nginx issue than my case :p
19:18 < mattrobenolt> You asked about how it'd scale. The better answer is "let nginx to the work."
19:18 < dubcanada> nginx is 8 years old
19:18 < dubcanada> NodeJS is like what a year?
19:19 < emilsedgh_> i see i see. im curious to find out more technical reasons or benchmarks. searching now, thanks a lot for your tips guys
19:19 < TooTallNate> dubcanada: i think almost 3 actually :D
19:19 < mattrobenolt> dubcanada: More than a year. But yeah, it's still immature.
19:19 < dubcanada> Well it's still in 0.* range
19:19 < mattrobenolt> dubcanada: In that defense, nginx JUST hit 1.0, what, this year?
19:20 < emilsedgh_> today's release seem to be a huge step forward in that case, i assume?
19:20 < dubcanada> NodeJS is also a lot more then a static file server lol
19:20 < mattrobenolt> dubcanada: Nginx 1.0 was released April 2011.
19:20 < dubcanada> Hrm
19:21 < dubcanada> I figured it would be older then that
19:21 < dubcanada> But I guess Nginx just picked up popularity a while ago.
19:21 < mattrobenolt> emilsedgh_: Yeah, whether node steps it up and can handle static files, the bottom line is... it does more than serve files.
19:21 < mattrobenolt> So it will always be slower and less efficient than a dedicated file server.
19:22 < mattrobenolt> It's not really a fault of Node, Node can juts do a million other things that nginx cannot. But for the few things nginx does, it does them very very well.
19:22 < emilsedgh_> i know. after years of doing php work, im loving node. although it gives me headache sometimes, but thats mostly due to my lack of knowledge.
19:22 < dubcanada> php to nodejs is a rather hard transition lol
19:22 < mattrobenolt> emilsedgh_: For most people, they're not goign to notice the difference between serving a file from node or nginx. But you speciically asked about scaling.
19:23 < mattrobenolt> For scaling, you're going to want to let something better handle the file serving, and keep the logic in Node.
19:23 < emilsedgh_> i see
19:23 < mattrobenolt> It just depends on what your scale really is.
19:24 < mattrobenolt> 1000 streams per day? 1000 streams per second? 1M streams per second?
19:24 < dubcanada> If you're scale is live.fm I may even go so far as to suggest not doing it in nodejs.
19:24 < emilsedgh_> well, im sure it will scale to my usecase, i would not have more than 200 connections in the best possible scenario. i asked mostly because i wanted to know why they differ and how much they differ
19:24 < dubcanada> But throwing more servers at stuff solves every issue!
19:25 < mattrobenolt> dubcanada: live.fm?
19:25 < dubcanada> NodeJS can handle 200 connections no problem
19:25 < emilsedgh_> dubcanada: im sure it could :)
19:25 < mattrobenolt> emilsedgh_: Yeah, you won't have an issue at that point.
19:25 < dubcanada> like.fm
19:25 < dubcanada> :P
19:25 < mattrobenolt> If anything, your disks might have trouble streaming 200 files at once.
19:25 < context> "context of php/rails"
19:25 < context> wha wha what ?
19:26 < context> oh
19:26 < mattrobenolt> context: trololol ;)
19:26 < context> yeah x-accel-redirect is awesome
19:26 < emilsedgh_> mattrobenolt: i will have to use some caching i guess. OS will cache my files, but thats not efficient enough i guess.
19:26 < dubcanada> If you don't mind paying just grab a CDN system
19:26 < dubcanada> Amazon is pretty much dirt cheap.
19:27 < dubcanada> But that's not really my place to say :P
19:27 < dubcanada> Nor did you ask for hosting advice.
19:27 < emilsedgh_> meh, i cant. im in iran and i cant have Amazon goodies :p
19:27 < mattrobenolt> Yeah, you could always use protected files behind Amazon CloudFront.
19:27 < dubcanada> There are Iranian solutions I'm sure of it lol
19:27 < mattrobenolt> Do auth in Node, build a proper Amazon URL, then issue a 302.
19:28 < mattrobenolt> emilsedgh_: Is your data sitting on a SAN?
19:28 < mattrobenolt> Or at least a RAID.
19:28 < context> emilsedgh_: whats wrong with letting nginx cache what it needs to ?
19:29 < emilsedgh_> yes, a RAID
19:29 < mattrobenolt> emilsedgh_: At the end of the day, streaming music is going to be more IO bound than CPU bound.
19:29 < emilsedgh_> context: nothing 'wrong' with it. i was asking to see if its wrong to do it with node.
19:30 < qbit_> npm ERR! notsup Required: {"node":">= 0.6.13 && <= 0.8.x"}
19:30 < qbit_> npm ERR! notsup Actual:   {"npm":"1.1.32","node":"0.8.0"}
19:30 < qbit_> ^^ does not compute!
19:30 < dubcanada> UH OH
19:30 < dubcanada> qbit_ you broke it
19:30 < qbit_> musta
19:31 < mattrobenolt> qbit_: Why not say:  <0.9.0?
19:31 < mattrobenolt> Isn't that really what you want?
19:31 < qbit_> mattrobenolt: this is for node-sqlite3 :P 
19:31 < qbit_> so no 
19:31 < mattrobenolt> How is <=0.8.x different than <0.9.0?
19:32 < dubcanada> Well being a smart ass 8 != 9
19:32 < chrisdickinson> qbit_: node-sqlite3's having troubles installing on 0.8.0?
19:32 < heroic123> hey
19:33 < mattrobenolt> <= 0.8.x is assumed... all releases in 0.8, but not 0.9.
19:33 < heroic123> any comments about http://blog.targeterapp.com/post/25865112316/when-and-how-nodejs
19:33 < mattrobenolt> But qbit_ said that <0.8.x didn't catch 0.8.0
19:33 < qbit_> chrisdickinson: it might be an issue with my build of node ... checking
19:34 < chrisdickinson> it was <=0.8.X, seems like a bug in semver.
19:34 < qbit_> chrisdickinson: awwpewpie
19:34 < mattrobenolt> chrisdickinson: Yeah, I had a typo. :)
19:34 < chrisdickinson> qbit_: you can try `npm install -f node-sqlite3` and see if it works.
19:36 < qbit_> chrisdickinson: it's building 
19:36 < chrisdickinson> no promises on that actually working, of course.
19:36 < qbit_> worked
19:36 < chrisdickinson> double check, run some code against the lib.
19:36 < qbit_> works 
19:36 < qbit_> can create a db
19:37 < chrisdickinson> (if it passes the test suite (cd node_modules/node-sqlite3; npm test .), you might issue a pull request to that repo with a bump in the package.json "engine" field to 0.9.0)
19:39 < JimBarwoo> Hi all, just trying to get npm running on a Raspberry Pi. I can't get it to build its index without running out of memory and crashing.
19:39 < qbit_> well.. test fails expresso throws ELIFECYCLE
19:40 < JimBarwoo> npm http 200 https://registry.npmjs.org/-/all
19:40 < JimBarwoo> FATAL ERROR: CALL_AND_RETRY_2 Allocation failed - process out of memory
19:40 < qbit_> expresso throws in on install 
19:41 < qbit_> i should say
19:41 < chrisdickinson> qbit_: huh. so tests don't pass because tests can't run because the test driver doesn't work on 0.8.0?
19:41 < qbit_> chrisdickinson: correct :P 
19:41 < chrisdickinson> lulz.
19:41 < jfroma> I just made a plugin for sublime text to make easy to add "requires" : http://screencast.com/t/tvdh8sIMhB ..it calculate the rel path to the current file
19:42 < chrisdickinson> qbit_: you might npm install -f expresso then, too.
19:42 < jfroma> dont know yet how to publish it in the sublime package control thingy
19:42 < chrisdickinson> (yay rabbit holes.)
19:42 < qbit_> :P
19:43 < jacobrask> I process a bunch of files and read them from stdin using exec, and I think that's what's slowing down my program. Would spawn with buffers be faster?
19:52 < doki_pen_> any way to ignore the engines field with npm install?
19:53 < chrisdickinson> doki_pen_: npm install -f
19:54 < doki_pen_> chrisdickinson: ty
20:01 < qbit_> -f ALL THE THINGS! 
20:08 < bradleymeck> mikeal: ping
20:16 < mikeal> pong!
20:17 < Sembiance> rofl
20:18 < tuhoojabotti> ping
20:19 < Sembiance> mikeal: ping
20:19 < mikeal> yes
20:20 < jcrew> vim npm-debug.log
20:21 < zackiv31> is https://github.com/joyent/node always stable, i.e. 0.8.0 right now?
20:22 < creationix> zackiv31: that's the repo, but do you mean by "always stable"
20:22 < ill1cit> when are all the hot chicks who spend there time on twitter going to join us here at hashtag nodejs??
20:22 < ill1cit> cos ill be here that day
20:22 < zackiv31> creationix: i.e. only the even branches
20:22 < zackiv31> versions*
20:22 < creationix> all development goes there
20:23 < zackiv31> so if we want to install from source we should just grab the tarball from the site?
20:23 < creationix> stable maintenance code lives on in branches
20:23 < creationix> yeah, tar ball is best if you want releases
20:23 < creationix> or git clone and checkout at tags
20:23 < creationix> tags/branches
20:28 < Louis_T> Hello, I recently upgraded to v0.8.0 and now I get this error with the http/https module. Does anyone know what the issue is? "Error: TypeError: Object domain.tld has no method 'enter'"
20:33 < wavded> npm registry down?  seems rather slowish
20:33 < Franz__> hi
20:33 < Franz__> im trying run my script in node.js i use gamejs too
20:33 < Franz__> but
20:33 < Franz__> have a error: var canvas = document.createElement('canvas');
20:34 < Franz__> document is undefined
20:34 < Franz__> can i need isntall some module
20:34 < Franz__> or what i need make for correct this ?
20:36 < Louis_T> Franz__: are you creating the canvas element server or client side?
20:39 < tjholowaychuk> npm perf needs some love :(
20:39 < Louis_T> Does anyone happen to know how to fix my issue?
20:43 < lpin> is npmjs.org down?
20:43 < jkarsrud> I seem to have some issues building node from source. Getting some issues on `sudo make install`; http://pastie.org/private/42trzsblxwuk5ylzwb6sg
20:43 < jkarsrud> anyone know what's up?
20:44 < drudge> lpin: looks like it is pretty stressed out
20:45 < Franz__> Louis_T i created in client-side, its fine
20:45 < lpin> i see
20:45 < Franz__> now im trying create in server-side
20:45 < Louis_T> Franz__:  there is no document object in node
20:45 < Louis_T> Franz__: you'll have to use something like node-canvas
20:46 < kgraham> is it me or is http://registry.npmjs.org/ down
20:46 < dshap> hey all - does anyone here use winston for logging and also have it log exceptions?  i'm curious what you do, since it seems that winston removes all of the formatting that the standard output exception has, so basically when you're developing it makes it terrible to see what's wrong with your code...
20:46 < Louis_T> Franz__: https://github.com/learnboost/node-canvas
20:47 < game16> is the npm registry down for anyone else too?
20:47 < rrjamie> yup
20:47 < drudge> yes
20:47 < drudge> isnpmdownforeveryoneorjustme.com
20:48 < game16> aw shucks
20:48 < tjholowaychuk> seems like it's not entirely down
20:48 < game16> would installation just by like
20:48 < wavded> drudge: that's down too ;)
20:48 < tjholowaychuk> just insanely slow
20:48 < game16> would copy and paste work?
20:48 < tbranyen> tjholowaychuk: how the fuck do i disable express from caching
20:48 < tbranyen> static is the worst
20:48 < tbranyen> ever
20:48 < tjholowaychuk> ?
20:48 < drudge> haha
20:48 < tjholowaychuk> it doesnt cache
20:48 < tjholowaychuk> lol
20:48 < rageous> npm down :(
20:49 < drudge> staticCache?
20:49 < game16> Oh well
20:49 < wavded> tjholowaychuk: fyi, express ~2 uses connect 1.0.1 if you are in node 0.8 as a dependency
20:49 < tjholowaychuk> if you mean staticCache just dont use it
20:49 < game16> does anyone EJS working well with Express?
20:49 < tjholowaychuk> wavded yeah i know
20:49 < tjholowaychuk> trying to publish but npm is broken
20:49 < drudge> game16: yes
20:50 < game16> how does it work? Just install ejs and replace the jade files with ejs files? 
20:50 < tjholowaychuk> game16 yeah
20:50 < game16> and specify ejs as teh view engine in app.config?
20:50 < wavded> tjholowaychuk: ahh ok, yeah
20:50 < drudge> game16: yes, just specify ejs as the view engine
20:50 < gellis> is node.js suitable for a beginner?
20:51 < Bonuspunkt> so npm is getting DOS'd by node 0.8 release? ^^
20:51 < Franz__> Louis_T i will try run in client-side 
20:51 < game16> do I need ejs in my nodemodule?
20:51 < tjholowaychuk> gellis you dont have to do app.set('view engine', 'ejs'), but that defaults the extension to .ejs
20:51 < drudge> game16: yes
20:51 < Franz__> its difficult.....
20:51 < drudge> you need ejs installed to use ejs
20:52 < tjholowaychuk> tbranyen if you mean http caching it's max-age=0 by default
20:52 < rageous> npm just completed something for me. Hooray.
20:52 < tbranyen> tjholowaychuk: what the crap
20:52 < tbranyen> i hate this
20:53 < tbranyen> if i ever make it across the border
20:53 < tbranyen> i am not going to be happy
20:53 < tjholowaychuk> lol
20:53 < gellis> is there any beginner tutorial that uses node.js, coffeescript and backbone.js to create an app?
20:53 < drudge> npm seems back to normal
20:53 < tjholowaychuk> tbranyen you could always use node-static and have unconditional in-memory caching :p
20:54 < tbranyen> hell yeah
20:54 < tjholowaychuk> that's a fun leak
20:54 < tbranyen> that's sounding like my cup of candy
20:54 < drudge> since when did npm install express give 3.0?
20:55 < tjholowaychuk> drudge probably "engines" again ill go look
20:55 < rrjamie> drudge: since 2 minutes ago :P
21:04 < Raynos> mikeal mentions "if you dont care about security" ( https://gist.github.com/505b680d5c9ee7748c79 ). What security concerns are there with this code?
21:04 < context> im wondering why that code even exists
21:05 < tjholowaychuk> Raynos the browser doesn't have to interpret that as a png
21:05 < tjholowaychuk> if you own mysite.com then meh
21:06 < Raynos> I just want to forward entire HTTP requests to another server in my 404 handler ( https://gist.github.com/2991163 )
21:06 < context> thats horrid
21:06 < Raynos> I'm wondering whether there are any security issues or edge cases where the code breaks
21:06 < context> why not have them go to the other site to begin with ?
21:07 < Raynos> because I want to slowly migrate all the code
21:07 < Raynos> and the old site is 0.4, and upgrading that code to 0.8 is a pain
21:07 < Raynos> so whilst im taking a few weeks to migrate the code
21:07 < context> raynos: id upgrade it all then move, OR, do your routing in nginx/apache
21:07 < context> not in node
21:08 < Raynos> I want to use both the new and old code at the same time. So running two servers in parallel where the new one just forwards tot he old one until everything is migrated seems nice
21:08 < context> each part you move over to 0.8, then update nginx/aapche to forward those urls to 0.8 and not 0.4
21:08 < Raynos> Why route in nginx/apache when node can do it?
21:08 < context> that way you arent hacking new or old to forward requests
21:08 < Raynos> considering I know _nothing_ about either apache or nginx
21:08 < context> and you dont have crap code there just to be removed later
21:08 < Raynos> I think having the temporary 404 handler of new forward to old is clean
21:08 < AviMarcus_> what tag is suggested to use from git? v0.8.0 is telling me version v0.8.0-pre once I compile
21:09 < Raynos> ill change the 404 handler to use a sensible 404 page once its all migrated
21:09 < rrjamie> Raynos:  It's super easy in Ngnix (and probably Apache) to make sets of URLs to each server
21:09 < Raynos> it's easier then setting up a temporary nginx thing in front
21:09 < context> if useless temporary code is clean....
21:09 < Raynos> and then I have duplicate all my routes in node and nginx
21:09 < Raynos> which is a pain
21:09 < Raynos> and I also have to run 3 processes instead of 2
21:09 < context> you aren't using nginx or apache to begin with ?
21:09 < Raynos> no, were using node directly
21:10  * context runs away
21:10 < arcanis> hi
21:10 < arcanis> is there a way to lock an agent socket ?
21:11 < epad-question> hi, compiled node 0.8 and wanted to use etherpad-lite git but no luck so far. anybody else here with this problem?
21:13 < AviMarcus_> oh v0.8 was just like now. oh.
21:13 < AviMarcus_> so.. since I'm trying to keep several machines on the same code, what tag or git rev should I pull?
21:13 < context> the v0.8 release tarball ?
21:15 < rrjamie> How should you handle deprecated functions when moving from 0.6 to 0.8? e.g., path.existsSync is now apart of fs.existSync?
21:16 < tuhoojabotti> rrjamie: change them?
21:16 < tuhoojabotti> and yes, it's fs now
21:16 < rrjamie> tuhoojabotti: but support engines in 0.6.x? 
21:16 < tuhoojabotti> no
21:17 < rrjamie> do I just do a existsSync = fs.existSync || path.existsSync?
21:17 < rrjamie> is there a better way, stylistically?
21:17 < tuhoojabotti> use 0.8.0
21:17 < tuhoojabotti> :)
21:18 < CIA-75> node: Andreas Madsen v0.8 * r3d51646 / doc/api/cluster.markdown : doc: replace references to cluster.autoFork - http://git.io/mlHurQ
21:18 < Raynos> rrjamie: exists is easy to handle. Never use it. Always use stat or statSync
21:20 < rrjamie> Raynos: you have a point there
21:20 < Raynos> exist is a horrible function because it swallows the error of stat. They should have just deprecated exists rather then moved it
21:21 < game16> thanks guys, ejs + express is going fine
21:21 < game16> Is there a special way to do CSS + EJS?
21:22 < game16> I can't get it loading
21:25 < game16> never mind, got it, it has to be in the public folder
21:25 < arcanis> is there a way to serialize a _very_ large json object ?
21:26 < othiym23> arcanis: like a streaming serializer?
21:26 < arcanis> othiym23, yes
21:27 < othiym23> arcanis: not built-in, because a bunch of pieces need to collaborate
21:27 < othiym23> arcanis: what's your use case?
21:28 < arcanis> othiym23, I'm basically crawling an api
21:28 < arcanis> there are many requests, so I'm caching/memoizing every request for later runs
21:29 < mrbrookman> hello everybody. I got an error while configuring the newest node.js. 
21:29 < mrbrookman> Some days ago installing of 0.6.19 worked without problems.
21:29 < arcanis> however, when I'm at the end of the crawling, there are so many requests that I get Memory limit exausted when calling JSON.stringoify
21:29 < othiym23> arcanis: sounds like you should be wrapping some kind of lazy stream around the API crawl in the first place
21:29 < context> maybe you are leaking memory
21:30 < context> and/or find a way to not have to rely on a single large json item
21:30 < othiym23> context: it's not leaking memory, it's holding onto big wads of it; that's memoization in a nutshell
21:30 < context> ahh didn't see the part on memoizing
21:30 < context> stop memoizing ;)
21:30 < arcanis> not sure remote servers will be happy about this :p
21:31 < mrbrookman> has somebody a simillar error?
21:31 < mrbrookman> i get the following error:   
21:31 < mrbrookman>   File "./configure", line 261
21:31 < mrbrookman>     o['variables']['node_prefix'] = options.prefix if options.prefix else ''
21:31 < mrbrookman>                                                     ^
21:31 < mrbrookman> SyntaxError: invalid syntax
21:31 < othiym23> arcanis: you can combine the stream implementation with memoization
21:31 < othiym23> just memoize by fragments rather than building one big representation that you serialize all at once
21:32 < zackiv31> is there a preferred way to install node? with sudo or as user (and npm as well)
21:32 < owen1> zackiv31: i use nvm
21:32 < othiym23> zackiv31: check out nvm or nave
21:33 < othiym23> nvm -> rvm
21:33 < othiym23> nave -> virtualenv
21:33 < arcanis> othiym23, something like "store an int with the length of the url, store the url, store an int with the length of the data, store the data, repeat" ?
21:33 < AviMarcus_> is branch v.0.8.0-release going to change...?
21:33 < rrjamie> othiym23: there's also 'n', which is similar to rvm. (though you have to hack it to make it build in  ~ instead of in /usr/)
21:34 < context> avimarcus_: why not just pull down the release tarball ?
21:35 < othiym23> arcanis: I think I'd need more details on your implementation, but you should be able to use either a simple blank object to map API URL -> returned content (or whatever ID scheme you're currently memoizing) or some kind of LRU cache
21:35 < othiym23> which reminds me, has anyone built weak reference support for JS / Node they're happy with?
21:36 < context> why are you trying to store so much stringified json in memory?
21:36 < AviMarcus_> context, dunno, on projects that update I use git/svn. Although I'm just looking for a version to deploy to 6+ machines and not need to worry unless I want to change something
21:36 < context> avimarcus_: so deploy the tarball ?
21:36 < arcanis> othiym23, currently I'm using a blank object (keys being URL)
21:37 < context> avimarcus_: or make a proper package for whatever distro you are using
21:37 < context> and update that when you feel like it...
21:37 < AviMarcus_> hmm I'll consider that.
21:37 < arcanis> and every line is used
21:37 < othiym23> arcanis: so why would you need to store the length at memoization time?
21:37 < arcanis> if I remove the least used, then I remove from cache 2k request * 14
21:38 < arcanis> othiym23, for being able to parse the stream later ?
21:38 < codatory> I'm trying to use Harmon & HTTPProxy to strip a certain tag out of XML requests, but it's only working for the first request and curl isn't disconnecting...
21:39 < codatory> Any thoughts?
21:39 < arcanis> If I write in my file "toto.com/toto hello world foo", it would be hard to know if the content is "hello" followed by a request on the domain "world" containing "foo", or a single body "hello world foo"
21:39 < othiym23> arcanis: well, clearly you're going to need a streaming deserializer on the other end ;)
21:40 < LouisT> Hi, I recently upgraded node.js to v0.8.0 from v0.6.19 and I've started getting a random error from the 'http' module. When someone connects to the server its running, I get this error "Error: TypeError: Object [IP:PORT] has no method 'enter'", looking around events.js I found the issue is on line 80 "this.domain.enter();" when the 'Domain' module does not have an 'enter' method. Anyone have any ideas on what would cause this? 
21:40 < arcanis> yep :)
21:40 < othiym23> arcanis: it sort of sounds like you may have a larger representation problem here
21:40 < othiym23> arcanis: it sounds like you're reading a collection through the API and trying to represent it as a single object
21:40 < othiym23> and that sounds like it's going to be unwieldy for Node / the persistency layer / whatever to work with
21:40 < othiym23> so consider breaking it down?
21:42 < arcanis> actually it's an ETL : I've got a Transformer which Extract the data from the api, and the result is forwarded to the Loader which store it in a sql database
21:43 < arcanis> so I've got a single object which is built by the Transformer before being forwarded to the Loader
21:43 < othiym23> arcanis: so sounds like you should be streaming the collection as a collection -- look at how the Go streaming JSON support works for an example
21:43 < arcanis> (this part of the code works well)
21:44 < LouisT> Anyone have any ideas at all about how I can fix this?
21:44 < ryanrolds_w> NPM has spoiled me. Futsing with Perl modules on debian makes me drink.
21:45 < abedra> can anyone here help confirm a potential bug in deps/v8/src/mark-compact.cc
21:45 < Raynos> Can I run node 0.8 on joyent?
21:45 < abedra> it looks like there is an array bounds issue on line 611
21:48 < LouisT> If someone could please tell me what the issue could be, I'd greatly appreciate it.. =/
21:48 < livinded> LouisT: you're doing it wrong
21:49 < LouisT> livinded: I assume so, but I can't figure out how to do it right.
21:49 < othiym23> LouisT: are you using the new domain support in 0.8?
21:49 < benatkin> I'd like to see homebrew (for OS X) install npm, seeing as npmjs.org no longer provides the one-liner
21:50 < LouisT> othiym23: I'm not using it, I assume events.js is
21:50 < livinded> benatkin: so install it with homebrew...
21:50 < othiym23> benatkin: npm is now packaged with node, so it makes sense it's not being distributed with Homebrew / npmjs.org
21:51 < othiym23> LouisT: Unless something you're using is invoking domains, they won't get included in; that's a safety measure while domains are still marked experimental
21:51 < LouisT> When I was running this on v0.6.19 it had no issues, but now when someone connects it gives me the error saying the Object 'domain.tld' does not have the enter method
21:51 < LouisT> othiym23: that's really odd.. is there anything else that would call 'enter()'?
21:51 < benatkin> I think when isaacs and mxcl agreed that it not install homebrew, the one-liner was still at npmjs.org https://github.com/mxcl/homebrew/pull/8784#issuecomment-2903116
21:51 < LouisT> i can't seem to find anything at all
21:51 < othiym23> benatkin: are you trying to run a super-old version of Node?
21:51 < benatkin> seems like it might be a lot to expect from people who are new to node, to install npm on their own
21:52 < benatkin> othiym23: this isn't about me, I have no trouble running node
21:52 < benatkin> othiym23: trying to make it easier for people to get started with
21:52 < othiym23> afaik, the node installer has installed npm as part of installing node for all of 2012
21:52 < othiym23> you haven't needed to manually install npm since sometime last year
21:52 < benatkin> othiym23: the homebrew package disables it with --without-npm
21:52 < benatkin> othiym23: so if you're using homebrew you do
21:52 < livinded> do any of the node version managers take the shim approach like rbenv does or so they all hook shell functions?
21:52 < othiym23> sounds like the recipe needs to be fixed, then
21:53 < othiym23> livinded: check out nave
21:53 < livinded> othiym23: thanks
21:54 < gf3> blakmatrix: I haven't even tested my code on 0.8 yet, I can't in good faith blindly accept a regex'd search and replace by a bot
21:56 < vrlogrs> hi guys
21:56 < AAA_awright> Is anyone able to get the --shared-v8 flag to work?
21:59 < benatkin> added a homebrew issue suggesting that the npm bundling decision be revisited since npmjs.org no longer provides the one-liner
21:59 < benatkin> https://github.com/mxcl/homebrew/issues/13024
21:59 < LouisT> gf3: are you the same gf3 with the sandbox on github?
21:59 < blakmatrix> gf3: that's fine
22:00 < AAA_awright> benatkin: npm shouldn't be distributed with Node.js at all, it's some pretty severe bloat
22:01 < vrlogrs> hey guys .. 
22:01 < codatory> Can someone help me strip the content-length heading with node-http-proxy?
22:01 < LouisT> othiym23: The only thing I can find that _might_ be using  Domain is Events, and i have no idea how or why it's doing it.. 
22:01 < vrlogrs> i just (somewhat) finished online chess on node.js
22:01 < othiym23> benatkin: added a +1
22:01 < vrlogrs> wondering if a few people would help be test it out
22:02 < vrlogrs> me*
22:02 < benatkin> othiym23: saw that, in real time :D
22:02 < livinded> vrlogrs: how?
22:03 < vrlogrs> ill give u link in a minute -- fixing last-minute bugs
22:06 < AAA_awright> benatkin: The website still links to http://npmjs.org/install.sh am I missing something?
22:06 < vrlogrs> ok: http://209.141.47.151/chess
22:06 < bnoordhuis> AAA_awright: re bundling npm, i bet a lot of people disagree :)
22:06 < vrlogrs> http://209.141.47.151/tictactoe -- for noobs :P
22:06 < benatkin> AAA_awright: yeah it used to say to run curl http://npmjs.org/install.sh
22:06 < benatkin> and pipe it to sh
22:07 < benatkin> AAA_awright: much more beginner-friendly than hey, here's a script
22:07 < AAA_awright> I never thought that's something we should be encouraging anyways
22:07 < AAA_awright> If it really needs to be easy to install it should be a package in an operating system distribution
22:07 < othiym23> I find the idea of using Node without npm sort of bizarre
22:07 < othiym23> like using Erlang without OTP
22:07 < AAA_awright> Like, say, homebrew
22:08 < benatkin> AAA_awright: well the node developers feel the same way, yet they decided to include npm
22:08 < benatkin> AAA_awright: I think it's a special case
22:09 < AAA_awright> Absolutely not. We don't need to be bundling two packages together because it sounds cool. I don't use npm. Period. I don't need it coming with my package if I "emerge nodejs"
22:09 < AAA_awright> If I wanted it, I would "emerge npm"
22:09 < AAA_awright> That's how every other program operates
22:09 < AAA_awright> And it goes strongly against Node.js's no-bloat policy
22:09 < benatkin> AAA_awright: well it's part of the node aesthetic, you just take the aesthetic further I think
22:11 < mmalecki> AAA_awright++
22:11 < AAA_awright> The only reason require('http') was even included in Node.js was because "It's the most widely used protocol in the world"
22:11 < AAA_awright> Makes sense, I agree
22:11 < mmalecki> I was strongly opposed to it too, even tho I use npm all the time
22:12 < othiym23> AAA_awright: I wonder (for reals, not rhetorically) how many Node users fall into your camp
22:12 < othiym23> you're the first Node dev I've run into who doesn't use npm
22:13 < othiym23> I see npm being basically a piece of Node; I'm fine with either including npm as part of the Homebrew node distro, or as a standalone installer within Homebrew, but the current situation seems like the worst of all possible worlds
22:13 < AAA_awright> Mostly, I just plain don't need it, I depend on Jade and my own rdf module, and that's it, and I include them as Git submodules so they're ready to use without having to run any external programs
22:14 < AAA_awright> I do happen to publish my module to npm: http://search.npmjs.org/#/rdf
22:14 < benatkin> I guess you haven't built the docs https://github.com/joyent/node/blob/master/tools/doc/package.json
22:15 < AAA_awright> But to publish, it suffices to call the binary npm repository directly without installing it to my system, that's all I never need it for
22:15 < AAA_awright> *the binary from the npm Git repository
22:16 < AAA_awright> benatkin: I encourage shipping documentation and related tools in the repository itself, I have a similar build tool in my own program
22:17 < AAA_awright> Documentation should reflect the state of the program and any difference in documentation vs. code is considered a bug.
22:17 < LouisT> wow, I'm a MASSIVE idiot. I set 'res.domain' in my HTTP handler, which made Events think it should be using the Domain module.. Thanks for your help, othiym23.
22:18 < benatkin> AAA_awright: maybe node should come with git so people can install your programs :p
22:20 < vrlogrs> anybody free for a game of chess? :S
22:20 < vrlogrs> please?
22:20 < AAA_awright> benatkin: Heh, well, for my own program, I might build in git submodules support for some things, but nothing that's required
22:20 < vrlogrs> need a couple people
22:20 < AAA_awright> vrlogrs: What's the link
22:21 < vrlogrs> http://209.141.47.151/chess
22:21 < vrlogrs> http://209.141.47.151/tictactoe
22:21 < lukegb> > comic sans
22:21 < lukegb> no.
22:22 < AAA_awright> benatkin: If all Node.js dependencies were handled with submodules, would that be reason enough for "nodejs" to depend on "git" in package repositories? I have a nodejs_version parameter added to .gitmodules for all the packages I depend on, so you know if a submodule in a child directory is redundant or not
22:22 < AAA_awright> So it's a somewhat serious question
22:23 < AAA_awright> vrlogrs: I need to login?
22:23 < vrlogrs> yah, sry :S
22:23 < vrlogrs> it only needs a name
22:24 < AAA_awright> I'm waiting
22:26 < vrlogrs> AAA_awright: trying to find someone else to join
22:26 < vrlogrs> apparently the site doesnt work on Safari :(
22:27 < vrlogrs> i forgot i can play :P
22:27 < vrlogrs> ur turn AAA_awright
22:27 < vrlogrs> is it working?
22:28 < drudge2> node+npm bundled 4 life
22:31 < AAA_awright> vrlogrs: Yeah
22:31 < vrlogrs> do you mind refreshing the browser while in-game
22:31 < vrlogrs> i want to see if if it reconnects you properly to your game
22:31 < vrlogrs> with time/etc set properly
22:32 < myndzi> (0.6) i'm providing a createConnection function to http.request, it is being called, but sometimes the app just hangs and never returns; packet sniffing shows no request has been sent
22:32 < myndzi> sound familiar to anybody?
22:36 < AAA_awright> Bah I'm an idiot
22:36 < AAA_awright> I blame it on it's really hard to drag pieces
22:41 < vrlogrs> u dont have to drag the pieces AAA_awright
22:41 < vrlogrs> just click on them once
22:41 < AAA_awright> I figured it out eventually
22:42 < vrlogrs> oh ok
22:42 < vrlogrs> anyone else want to play: http://209.141.47.151/chess
22:43 < CIA-75> libuv: Charlie McConnell master * r7573f4a / test/test-fs-event.c : test: improve clean-up in test-fs-event - http://git.io/F2O6Ow
22:43 < CIA-75> libuv: Charlie McConnell master * rf3fd8e3 / test/runner-unix.c : test: prevent running the tests as root - http://git.io/Ih0B0w
22:43 < vrlogrs> i need to stress test too :)
22:44 < vrlogrs> everything seems to be working AAA_awright ?
22:44 < AAA_awright> yeah
22:44 < vrlogrs> cooll
22:44 < vrlogrs> just need to test waitqs and having multiple matches at the same time
22:48 < AAA_awright> This is quite a locked up board isn't it
22:48 < vrlogrs> lol
22:48 < vrlogrs> yah
22:48 < vrlogrs> ive been trying to move everything
22:48 < vrlogrs> funny how i still have all my pwns
22:49 < vrlogrs> pawns*
22:50 < vrlogrs> im eventually gonna have it so you can watch matches live
22:50 < vrlogrs> while others play
22:54 < myndzi> TypeError: Property '_onTimeout' of object #<Object> is not a function at Timer.list.ontimeout (timers.js:101:19)
22:54 < myndzi> when upgrading to 0.8 from 0.6.19
22:54 < myndzi> halp?
22:54 <@maxogden> wat is timers
22:54 <@maxogden> oh its in node
22:55 < myndzi> .. yeah
22:55 < myndzi> that's why i was like wat
22:56 < vrlogrs> running out of time :S
22:57 < AAA_awright> \o/
22:57 < AAA_awright> I wanted to see the conclusion, aww
22:57 <@maxogden> myndzi: anything in here maybe https://github.com/joyent/node/wiki/API-changes-between-v0.6-and-v0.8
22:57 < AAA_awright> Ravi (B) -1:-1
22:57 < vrlogrs> lol - sry
22:57 < vrlogrs> what's that?
22:57 < myndzi> that could help, thanks
22:57 < AAA_awright> The time left :p
22:57 < vrlogrs> oh, weird :S
22:58 < AAA_awright> Javascript and languages in general don't handle negative time really well... ever
22:58 < vrlogrs> ill fix it - thanks Austin
22:58 < AAA_awright> Because (-6)%4 = -2
22:58 < AAA_awright> etc
22:58 < AAA_awright> I wish there was an unsigned modulus operator
22:59 < jesusabdullah> AAA_awright: function unsignedMod(a, b) { return Math.abs(a%b); }
22:59 < AAA_awright> Not evil enough
22:59 < vrlogrs> fixed the time thing ..
22:59 < AAA_awright> Number.prototype.umod = function unsignedMod(m){return Math.abs(this%m);}
23:00 < vrlogrs> any other issues?
23:00 < jesusabdullah> I guess 3.umod(6) would be alright
23:00 < vrlogrs> btw, your on top of the leaderboard AAA_awright :D
23:00 < dilvie> AAA_awright: Yes, that is significantly more evil. =)
23:00 < AAA_awright> jesusabdullah: THough it would have to be 3..umod(6)
23:00 < AAA_awright> or (3).umod(6)
23:00 < jesusabdullah> AAA_awright: 3['umod'](6) also works lol
23:01 < AAA_awright> hah I guess it would
23:01 < AAA_awright> vrlogrs: Moving pieces works, but dragging would be nice, I ended up highlighting large parts of the screen inadvertantly... Different timer styles would be cool, as a feature request, and recording games and all that
23:01 < AAA_awright> I'm sure you have it all worked out
23:01 < jesusabdullah> Thought about doing something similar for unit analysis
23:02 < jesusabdullah> 3..inches for example
23:02 < myndzi> appears to be socket.setTimeout that caused it
23:03 < vrlogrs> yah, ill try putting in dragging
23:03 < vrlogrs> thanks again AAA_awright for testing it out
23:04 < lohkey> hey, we have some compiled modules throwing libuv deprecated warnings
23:04 < lohkey> is there a way to track down exactly which modules those are coming from?
23:04 < lohkey> WARNING: ev_io is deprecated, use uv_poll_t
23:04 < lohkey> WARNING: ev_timer is deprecated, use uv_timer_t
23:04 < lohkey> are what were getting
23:05 < lohkey> this happened after an upgrade to 0.8.0 and i know it has to be one of the compiled extensions
23:05 < lohkey> just need a way to hone in on which one
23:05 < TonkaTruck> This must be a tired question here, but what is the best mysql module to use right now?
23:09 < TonkaTruck> I'm guessing node-mysql-libmysqlclient.
23:17 < AAA_awright> TonkaTruck: felixge's node-mysql
23:17 < TonkaTruck> but felix's node-mysql has so many more watchers...
23:17 < TonkaTruck> AAA_awright: Thanks, just installed it.
23:17 < AAA_awright> That's a good thing
23:18 < TonkaTruck> Thanks
23:18 < myndzi> where are the node libraries stored on windows?
23:27 < myndzi> doh, they're packaged into the exe
23:28 < myndzi> i wonder if there's any way i can edit them, or externalize them
23:31 < myndzi> weird, it's saying the callback is 1ms; i don't set any timers like that
23:31 < myndzi> but when i comment out the timers i do set, the error goes away
23:35 < myndzi> the relevant code doesn't seem to change between the versions, this in annoying
23:36 < myndzi> something is getting added with like a 1 ms timeout and an erroneous callback
23:36 < myndzi> and i can't edit the source files to find out what it is >:(
23:48 < suggs> Looking for help installing node on CentOS 5.5
23:48 < suggs> yum failed, source fails on configure.
23:49 < suggs> Correction, yum doesn't fail, is simply out-dated.
23:50 < jesusabdullah> suggs: install from source, make sure you have a new enough python2 and stuff
23:50 < Lorentz> yeah, would be nice to know how configure fails
23:51 < gf3> Anyone going to Throne of JS?
23:52 < suggs> Lorentz: http://pastebin.com/quf8V6CV
23:53 < fatfatfat> isaacs: remember in argentina when I asked you about using spawn with git clone?
23:54 <@isaacs> fatfatfat: yo
23:54 <@isaacs> fatfatfat: not really.  but i believe you.
23:54 <@isaacs> fatfatfat: what's up?
23:54 <@isaacs> fatfatfat: you listening on 'exit' when you should be listening on 'close', and not getting data events, because they come in after the program has exited but hasnt' yet closed its stdout?
23:54 < fatfatfat> i was trying to get `git clone` to output the percentages…and all that junk
23:54 < Lorentz> suggs: I don't even remotely grok python, but what version?
23:55 < fatfatfat> possibly
23:55 < myndzi> is there a way i can use the debugger to investigate one of the core libs on windows?
23:56 < Lorentz> I'm on 2.6.6 and I don't get syntax errors doing ./configure
23:56 < myndzi> i'm not quite sure how, and since it involves timers it may be time sensitive :\
23:57 < myndzi> eh screw it, i'll just roll back to 0.6
23:57 < fatfatfat> isaacs: so this is wrong? https://gist.github.com/2992182
23:58 < suggs> 2.4.3 - too old?
--- Log closed Tue Jun 26 00:00:17 2012
