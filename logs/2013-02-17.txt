--- Log opened Sun Feb 17 00:00:03 2013
--- Day changed Sun Feb 17 2013
00:00 < carpii> nk, i think the main issue would be number of system file descriptors, and possibly if there is a firewall like iptables with conntrack enabled, that can eat up quite a bit of ram
00:00 < asdf12> anyone know why npm is packaging up 'example/node_modules' when i have it set in my .gitignore? and even .npmignore?
00:00 <@Nexxy> carl_, but generally speaking; you don't need to worry about "blocking" unless you're using a lot of ___Sync functions or require()ing things in the middle of your scripts
00:00 < nkohari> yeah, we aren't exceeding file descriptors, and we don't use conntrack
00:00 < nkohari> i was just curious
00:01 < nkohari> i'm tinkering with our servers to see if i can squeeze more performance out
00:01 < carpii> maybe have a look at sysctl, theres some values there which i guess would affect how much buffers are reserved per socket 
00:02 < carpii> but i really dont know if they are limits, and a TIME_WAIT socket has already released those
00:02 <@isaacbw> why is nodeunit moving up a directory and trying to read a json file
00:02 < inZania> AAA_awright: okay, I have node-inspector attached and open, my node process is pegged @ 100% CPU... now what? I pressed the "pause" button in the upper right and it's just stuck at "pausing..." for 60s+
00:02 < carl_> Nexxy, but apart from that, would calling my Mailer, like I do, be blocking? since the function that actually sends my mail in Mailer takes callbacks?
00:02 < nkohari> i assume that the OS would treat that socket's ram as owned by the nginx process anyway, so now that i think of it it's a dumb question :)
00:03 < AAA_awright> inZania: Hmmm then it may be stuck on an I/O operation
00:03 < nkohari> inZania: honestly you might find this is easier to solve using log statements
00:03 < carpii> heh, well it made me think, so maybe im dumb too :)
00:03 < inZania> nkohari: trust me, no.
00:03 < nkohari> i just mean that getting a profiler working requires that the process is capable of communicating with the profiler
00:03 < inZania> nkohari: seriously, this app is effing HUGE, dozens of endpoints, etc.
00:03 < AAA_awright> inZania: Do you have e.g. iotop, iftop? (disk and network, respectively)
00:03 < naomi> is npm stilllll down?
00:03 < carl_> no?
00:04 < nkohari> yeah but you seem to know how to peg it
00:04 <@Nexxy> carl_, if it's doing things "the node way", no
00:04 < AAA_awright> You people, it's like Node.js depends on npm or something
00:04 < nkohari> if you can reproduce the scenario in which it hangs can't you follow the request through the system?
00:04 <@Nexxy> npm kind of depends on node.js
00:04 < AAA_awright> If you depend on npm you're Doing It Wrong
00:04 < nkohari> i thought only npm publishing was down
00:04 <@Nexxy> lol
00:04 < nkohari> and what
00:04 < nkohari> lol
00:04 < inZania> AAA__awright: hmm I forget the OSX equivs.
00:04 < nkohari> if you aren't using npm i will laugh at you mercilessly
00:05 < AAA_awright> inZania: Oh right, um, don'y you have a process manager?
00:05 < AAA_awright> nkohari: No, I don't, never have, never will
00:05 < carl_> Nexxy, Thanks for your help guess its time to study
00:05 <@Nexxy> carl_, good luck!
00:05 < asdf12> isaacs: ping
00:05 < nkohari> i am now laughing at you mercilessly
00:05 < AAA_awright> It started as a train wreck and out of principle I'm sticking with that
00:05 <@Nexxy> nkohari, get a grip
00:05 < cloudbender> bwahahahahaaaaa!
00:05 < inZania> AAA_awright: yeah, hm, I'm actually 99% sure it's network IO now that you mention it. My con is slow when its pegged, but I had attributed it to CPU, but that would make sense
00:05 < AAA_awright> nkohari: Dude, you haven't had to program against npm's library, have you?
00:05 < nkohari> i mean i guess if you aren't building anything with library dependencies you don't need npm
00:05 < cloudbender> But I don't use npm ...
00:06 < AAA_awright> nkohari: I dare you to spend 30 minutes with it and not gouge your own eyes out
00:06 < nkohari> we aren't talking about hacking *on* npm are we
00:06 < nkohari> we're talking about using it to install packages
00:06 < nkohari> i don't know what bash's source code looks like either but i use it daily
00:06 <@Nexxy> AAA_awright, nkohari go argue senselessly in another channel
00:06 < AAA_awright> nkohari: That too
00:07 < AAA_awright> nkohari: You never had to use it when it littered your /var/lib with a thousand 100-byte .js files
00:07  * AAA_awright shudders
00:07 < nkohari> still better than bundler! i rest my case :)
00:07 < AAA_awright> nkohari: I use Git. That provides cryptographic intregrity of your code, to boot
00:07 < nkohari> Nexxy: sorry, not trying to be a pest or anything, just chatting.
00:07 <@Nexxy> no, that's not "just chatting"
00:07 <@Nexxy> telling someone you're going to laugh at them
00:07 <@Nexxy> is disrespectful
00:07 <@Nexxy> regardless of how justified you feel you are
00:08 <@Nexxy> so stop
00:08 < nkohari> you're right, i take it back
00:08 <@Nexxy> thank you :)
00:08 < nkohari> personally i think npm is an invaluable piece of the node ecosystem but if you don't use it i guess you have your reasons
00:09 < AAA_awright> It's hindered what could have been an explosive growth, just because it's used doesn't mean it's beneficial
00:09 < carpii> as package managers go, i find npm to be pretty clean and reliable
00:09 < carpii> whats the big deal with it?
00:09 < asdf12> isaacs: i'm still getting trouble publishing, also npm doesn't seem to want to ignore my path 'example/node_modules' when publishing/packing i wonder if thats a bug?
00:09 < AAA_awright> Generally I loathe package managers... I'd like to say nothing personal but the API really is awful
00:10 <@Nexxy> AAA_awright, how many pull requests have you made so far?
00:10 < Havvy> What's the quickest way to get a copy of an object?
00:10 <@Nexxy> it sounds like you have a lot of great ideas for making NPM better
00:10 < carpii> oh ok, i was merely talking as an end user. I know nothing about its api
00:10 < AAA_awright> My big deal is (1) No integrity of code (2) global namespace
00:11 < nkohari> most people don't really care about the api of a product/library they're only a user of
00:11 < nkohari> i mean if i was going to knit it into the heart of my product i might be concerned
00:11 < AAA_awright> Nexxy: The solution requires something new altogether, and I doubt anyone would take my pull requests to remove python, V8, openssl, npm, and the blog posts from the Git repository seriously
00:11 < nkohari> i dunno, everyone thinks they can reinvent something better
00:11 <@Nexxy> lol
00:12 <@Nexxy> removing v8 from node?
00:12 < AAA_awright> No, just the repository
00:12 < nkohari> actions speak louder, if you can write something better than npm go do it and i'll use it
00:12 < AAA_awright> You're not supposed to check in entire 3rd party projects into repositories
00:12 < AAA_awright> >_<
00:12 < AAA_awright> I like ryah for a lot, but not using tabs and cluttering repositories is just bad
00:12 < nkohari> oh no
00:12 < nkohari> we're in spaces vs. tabs territory
00:12 < nkohari> ABORT
00:13 < AAA_awright> Nexxy: My replacement is not one monolithic project, but lots of utilities, https://github.com/Acubed/git-node to start
00:13 < AAA_awright> If the problem is "npm is a bloated solution looking for a problem" you can't pull-request that
00:13 < nkohari> AAA_awright: that's actually a reasonable way to do it (using git)
00:13 <@Nexxy> it just kind of seems like you spend an inordinate amount of time vaguely mentioning why NPM is so abhorrent to you without putting much effort into explaining why the way you do things is better
00:13 <@Nexxy> seems a bit counter productive
00:14 < nkohari> the problem is that it requires everyone to use git in a specific way (using tags as versions)
00:14 < Havvy> I have found npm to increase my productivity.
00:14 < AAA_awright> Nexxy: Well check out my link for the constructive bits then
00:14 < nkohari> not to mention using git in the first place
00:14 <@Nexxy> AAA_awright, it's like those bumper stickers
00:14 <@Nexxy> "wag more / bark less"
00:15 -!- mode/#Node.js [+o isaacbw] by ChanServ
00:15 < AAA_awright> nkohari: You could implement alternative schemes probably, but I don't see how it's any worse than the current scheme, where you need to host certain tarballs at a specific URL
00:15 < carpii> is there a reason your 'git node add <package>' doesnt just grab it via npm though?
00:15 < carpii> i mean its only leeching the required version
00:15 < AAA_awright> It has a generic notion of a "search engine" which currently is only npm
00:15 < carpii> ahh, ok
00:15 < carpii> i envisions some weird web search :)
00:15 < AAA_awright> I should say, not npm, but the "npm registry" which is what is down
00:16 < carpii> envisioned
00:16 < nkohari> so you've built a system to replace npm... that uses npm?
00:16 < _pash> i am a beginner in node, can someone suggest some projects to practice?
00:16 < AAA_awright> I have no issues with a package registry, no
00:16 <@isaacbw> I recommend creating something that you want to create
00:16 < naomi> _pash make me something awesome
00:16 <@isaacbw> don't use node just to use node
00:16 <@isaacbw> use node to make something you couldn't before
00:16 < AAA_awright> I have issues when it becomes required whenever you want to download something new
00:16 < nkohari> what isaacbw said
00:16 < AAA_awright> A package registry as a search engine is good
00:17 < toyaisle> _pash to world is your oyster
00:17 < nkohari> AAA_awright: you can always skip the registry and use npm as a script if you use git urls in your package.json
00:17 < AAA_awright> And the existing npm registry is good enough for that for now
00:17 < nkohari> so i'm failing to see why your solution is superior
00:17 < AAA_awright> Well that doesn't really use Git, does it
00:17 <@isaacbw> you can clone the registery
00:17 <@isaacbw> registry
00:17 < AAA_awright> That's just downloading stuff off a Git repository
00:18 < AAA_awright> That doesn't provide or use any of Git's native strengths
00:18 < nkohari> the difference is what, a hash check?
00:18 < _pash> isaacbw: yeah, i came here for some 'project inspiration'. I know javascript and python, but i have never really implemented them anywhere apart from some self made programs
00:18 <@isaacbw> _pash, do you have nothing that you've been wanting to make?
00:18 <@Nexxy> _pash, make a network scanner
00:19 <@Nexxy> that works as a module
00:19 <@Nexxy> like nmap
00:19 <@Nexxy> only in node
00:19 <@Nexxy> :D
00:19 < Fishrock123> ^
00:19 < nkohari> the quintessential first node project seems to be real-time web chat using socket.io
00:19 < Fishrock123> But that is just too stereotypical.
00:19 <@isaacbw> I thought it was an irc client
00:20 < Fishrock123> Nope..
00:20 < AAA_awright> nkohari: Not just a hash check, but actually pointing to a specific commit and being able to look down *its* commit history, and and anything it depends on and their commit histories, ad infinium
00:20 < AAA_awright> But the security is really important too
00:20 < nkohari> AAA_awright: why do i care about the commit history of a library i'm consuming?
00:20 < Fishrock123> I wish the tutorial I did had done an IRC client instead though. D:
00:20 < asdf12> why
00:21 < asdf12> that wouldve taken longer than a socket.io web chat
00:21 < AAA_awright> nkohari: If you're merely installing an application you don't use it directly, you'll either use a targz, or you use git, and keeping the commit history around will help you make upgrades.
00:21 < Fishrock123> More interesting.
00:21 < Havvy> isaacbw: Totally an IRC client. :P
00:21 <@isaacs> asdf12: paths named "node_modules" are special to npm.  don't expect them not to be.  they're not handled the same as other paths.
00:21 < asdf12> ah
00:21 < AAA_awright> nkohari: git-node is strictly a developer's tool, you don't need it to check out or use an application
00:22 <@isaacs> asdf12: i'd recommend just telling users to run `npm install` in your examples folder or whatever.
00:22 < Havvy> paths named "node_modules" apre special to node in general.
00:22 < AAA_awright> And likewise, there's different tools for using applications, and even different tools for package managers
00:22 < carpii> asdf, you did a chat app?
00:22 <@isaacs> asdf12: or just have the deps in there be devDependencies
00:22 < AAA_awright> And tools for building, and installing builds. This is how application development and usage *should* be
00:22 < asdf12> isaacs: yea but i need to clean it first before i make a package then
00:22 < asdf12> isaacs: i mean rm it, i had it there while i was working on my example
00:23 <@isaacs> ah, kewl
00:24 < foobar321> Hi. Is there any module to serve a file using HTTP that is being creating and growing ?
00:24 < nkohari> you mean like tail -f?
00:24 < toyaisle> foobar321, what?
00:24 < foobar321> nkohari: yes
00:24 < toyaisle> what are you asking?
00:25 < nkohari> pretty sure you can just open a readable stream and continue to read
00:25 < nkohari> handling data events
00:25 < nkohari> as far as scanning to a specific point (like tail does) you'd have to build that
00:27 <@isaacs> nkohari: if you hit the end of the file, though, it just ends
00:27 <@isaacs> it doesn't watch and keep reading when there's new data
00:27 < nkohari> ah.
00:27 < asdf12> is publish working though?
00:27 < nkohari> scratch what i said :)
00:27 <@isaacs> asdf12: yes
00:27 <@isaacs> asdf12: fixed
00:28 < asdf12> right now? because i was still getting Error: case_clause {[]}
00:28 < asdf12> like a few minutes ago
00:28 < foobar321> isaacs: so any ideas how to fix that? :/
00:29 < foobar321> Hi. Is there any module to serve a file using HTTP that is being creating and growing ?
00:29 <@isaacs> asdf12: i'm heading out.  post a bug, i suppose?  preferrably with your npm version (which should be 1.2.10, otherwise, update first) and the package.json of the thing you're trying to publish
00:29 < tongcx> hi guys, how could i change my ircname, or could you tell me which channel to go for this question?
00:29 < AAA_awright> foobar321: What are you looking to *do*?
00:30 <@isaacs> asdf12: and in the meantime, maybe go outside :)
00:30 < AAA_awright> tongcx: Your nickname?
00:30 < tongcx> no, ircname
00:30 < foobar321> AAA_awright: Well I'm creating big database archive and I think it will be good for end-user to be able to start download it while it's being still created, right?
00:31 < Havvy> Which part of tongcx!~chaoxu@ct423.orie.cornell.edu  (real name: Chaoxu Tong)?
00:31 < foobar321> So I want some express module/whatever that has possibility to download files which are growing
00:32 < tongcx> yes real name
00:32 < Havvy> foobar321: Just open a stream to the file, and when you hit eof, wait a few seconds before reading some more.
00:32 < tongcx> i thought everyone is using real name, but i was wrong
00:32 < Havvy> tongcx: Where did you set your real name initially?
00:32 < Havvy> Find that setting, and change it there.
00:33 < Havvy> I've not used irssi, so I don't actually know the location.
00:33 < tongcx> Havvy: i don't remember, I hope I can remember
00:33 < tongcx> Havvy: i'm newbie for irssi and freenode
00:34 < Havvy> It's a client setting, not a server setting. Try asking in irssi's channel, whatever that is.
00:35 < toyaisle> foobar321, maybe https://github.com/Gagle/Node-BufferedReader would be helpful; I can't think of any way to do what you want without things getting really convoluted though
00:36 < cloudbender> >> '10,000';
00:36 < purr> cloudbender: (string) '10,000'
00:37 < cloudbender> >> '10,000' * 2
00:37 < purr> cloudbender: (number) NaN
00:37 < cloudbender> dang
00:37 < tongcx> Havvy: what's CPCT version?
00:37 <@isaacbw> ask these questions in #freenode
00:38 < Havvy> ^^
00:38 <@Nexxy> CTCP = client to client protocol
00:38 <@Nexxy> CTCP version is what you send when you want to know what version of an IRC client someone is using
00:39 < tongcx> Nexxy: thanks
00:40 < foobar321> >> 2+2*2
00:40 < purr> foobar321: (number) 6
00:40 < foobar321> whoa
00:40 < foobar321> is he hackable? :P
00:40 <@Nexxy> let's hope!
00:41 < Havvy> >> var a = "a"; for (ix = 0; ix < 5; ix++) { a = a + a; } a;
00:41 < purr> Havvy: (string) 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
00:41 < foobar321> >> process.execPath
00:41 < purr> foobar321: ReferenceError: process is not defined
00:41 < Havvy> foobar321: JS only.
00:42 < Havvy> No Node.
00:42 < foobar321> that sux
00:42 <@Nexxy> et could try this
00:42 <@Nexxy> we*
00:42 <@Nexxy> >> "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaX".match(/^(a+)+$/)
00:42 < purr> Nexxy: Timeout Error: Execution time exceeded 2 seconds
00:42 <@Nexxy> lol damn
00:43 < foobar321> >> setTimeout(function(){ return 42; }, 50);
00:43 < purr> foobar321: ReferenceError: setTimeout is not defined
00:43 < AAA_awright> How does it time-limit calculations like that? O_o
00:43 <@Nexxy> spawned process
00:43 < foobar321> setTImeout is not in Javascript ??????
00:44 < Havvy> foobar321: Nope.
00:44 < Havvy> Neither is setInterval
00:44 < AAA_awright> foobar321: *ECMAScript
00:44 < Havvy> setTimeout/setInterval are part of DOM 0 and Node.js's APIs.
00:44 < AAA_awright> purr: help
00:44 < Havvy> >> help
00:44 < purr> Havvy: ReferenceError: help is not defined
00:45 < AAA_awright> >_>
00:45 < foobar321> >> 'use strict'; foo = 42;
00:45 < purr> foobar321: ReferenceError: foo is not defined
00:45 < foobar321> >> foo = 42;
00:45 < purr> foobar321: (number) 42
00:49 < foobar321> >> new Date();
00:49 < purr> foobar321: (object) Sun Feb 17 2013 00:46:12 GMT+0000 (UTC)
00:50 < DarkArgon> is purr open source?
00:50 < DarkArgon> >> process
00:50 < purr> DarkArgon: ReferenceError: process is not defined
00:51 < foobar321> DarkArgon: I've tried that few lines above :P
00:51 < DarkArgon> maybe i have more luck :P
00:52 < DarkArgon> >> require('child_process')
00:52 < purr> DarkArgon: ReferenceError: require is not defined
00:52 < Guest87465> hello
00:53 < Guest87465> i am having incredible issues installing node.io on windows
00:53 < DarkArgon> node.io?
00:53 < Havvy> I wish JS names could have dashes in them.
00:53 < Guest87465> yes
00:54 < Guest87465> someone pointed me here tohelp
00:54 < Guest87465> to seek help
00:54 < nkohari> do you mean node.js by chance, or is node.io something i'm not aware of
00:54 < foobar321> >> var x = = 1;
00:54 < purr> foobar321: SyntaxError: Unexpected token =
00:54 < DarkArgon> there is something called node.io https://github.com/chriso/node.io
00:54 < Guest87465> node.io is a module i believe, for scraping
00:55 < Guest87465> again I am very new and just need to install it to run a program
00:55 < Havvy> >> var my-name = 0;
00:55 < purr> Havvy: SyntaxError: Unexpected token -
00:55 < Havvy> :(
00:55 < DarkArgon> >> global
00:55 < purr> DarkArgon: ReferenceError: global is not defined
00:56 < foobar321> >> 2.2250738585072011e-308
00:56 < purr> foobar321: (number) 2.225073858507201e-308
00:56 < DarkArgon> >> eval
00:56 < purr> DarkArgon: (function) eval
00:57 < foobar321> Is there any memory limit?
00:57 < Havvy> >> eval(eval(eval("\"\"5\"\"")))
00:57 < purr> Havvy: SyntaxError: Unexpected number
00:57 < Havvy> >> eval(eval("\"\"5\"\""))
00:57 < purr> Havvy: SyntaxError: Unexpected number
00:58 < foobar321> >> var x = 'a'; for(var i = 0;i < 8;i++) x += x;
00:58 < purr> foobar321: (string) 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
00:58 < foobar321> >> var x = 'a'; for(var i = 0;i < 9;i++) x += x;
00:58 < purr> foobar321: (string) 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa…
00:58 < foobar321> >> var x = 'a'; for(var i = 0;i < 50;i++) x += x;
00:58 < purr> foobar321: Unknown Error: Please contact eboyjr. INFO: 
00:58 < foobar321> lol
00:58 < Havvy> >> while (true) { }
00:58 < foobar321> w t f is unknown error?
00:58 < purr> Havvy: Timeout Error: Execution time exceeded 2 seconds
00:59 < foobar321> Havvy: no. your error is handled :P
00:59 < Havvy> >> while (false) { }
00:59 < purr> Havvy: undefined
00:59 < DarkArgon> >> eval("setTimeout(function(){return "blah"}, 20)")
00:59 < purr> DarkArgon: SyntaxError: Unexpected identifier
00:59 < foobar321> anywat author if this bot need to work more on it
00:59 < Havvy> DarkArgon: There's no setTimeout()
00:59 < DarkArgon> >> eval("setTimeout(function(){return 'blah'}, 20)")
00:59 < foobar321> >> var x = 'a'; for(var i = 0;i < 20;i++) x += x;
00:59 < purr> DarkArgon: ReferenceError: setTimeout is not defined
00:59 < purr> foobar321: (string) 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa…
00:59 < foobar321> >> var x = 'a'; for(var i = 0;i < 40;i++) x += x;
00:59 < purr> foobar321: Unknown Error: Please contact eboyjr. INFO: 
00:59 < Havvy> Anyways, the error is running out of memory.
00:59 < DarkArgon> yea ^^
01:00 < foobar321> >> var x = 'a'; for(var i = 0;i < 30;i++) x += x;
01:00 < purr> foobar321: Unknown Error: Please contact eboyjr. INFO: 
01:00 < foobar321> Havvy: I've asked about the memory limit question and no one answered me
01:01 < foobar321> >> var x = 'a'; for(var i = 0;i < 25;i++) x += x;
01:01 < purr> foobar321: Timeout Error: Execution time exceeded 2 seconds
01:01 < foobar321> >> var x = 'a'; for(var i = 0;i < 26;i++) x += x;
01:01 < purr> foobar321: Timeout Error: Execution time exceeded 2 seconds
01:01 < foobar321> >> var x = 'a'; for(var i = 0;i < 27;i++) x += x;
01:01 < DarkArgon> Havvy, did u made purr?
01:01 < purr> foobar321: Timeout Error: Execution time exceeded 2 seconds
01:01 < Havvy> No.
01:01 < foobar321> >> var x = 'a'; for(var i = 0;i < 28;i++) x += x;
01:01 < purr> foobar321: Timeout Error: Execution time exceeded 2 seconds
01:01 < foobar321> >> var x = 'a'; for(var i = 0;i < 29;i++) x += x;
01:01 < purr> foobar321: Unknown Error: Please contact eboyjr. INFO: 
01:01 < Havvy> >> var x = 1/0; for (var ix = 0; ix < 10; ix++) { x = x + x; } x;
01:01 < purr> Havvy: (number) Infinity
01:01 < foobar321> so 2^29 is the limit
01:02 < Havvy> >> var x = (1/0).toString(); for (var ix = 0; ix < 10; ix++) { x = x + x; } x;
01:02 < purr> Havvy: (string) 'InfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfinityInfi…
01:02 <@Nexxy> lol
01:03 < foobar321> >> function a(){return a(); }
01:03 < purr> foobar321: undefined
01:03 < Havvy> >> [] + []
01:03 < purr> Havvy: (string) ''
01:03 < Havvy> >> [] + {}
01:03 < purr> Havvy: (string) '[object Object]'
01:03 < nkohari> someone has been watching wat ;)
01:03 < foobar321> >> function a(){return a(); } a();
01:03 < purr> foobar321: RangeError: Maximum call stack size exceeded
01:04 < foobar321> Now this is nice error
01:04 < nkohari> >> function a() { process.nextTick(a); } a();
01:04 < purr> nkohari: ReferenceError: process is not defined
01:04 < nkohari> :|
01:04 <@isaacbw> naughty naughty
01:04 < Havvy> How many times are you going to try process?
01:04 < DarkArgon> >> process
01:04 < purr> DarkArgon: ReferenceError: process is not defined
01:04 < DarkArgon> >> processs
01:04 < purr> DarkArgon: ReferenceError: processs is not defined
01:04 < nkohari> that was the first time i ran a command :)
01:05 < Havvy> >> var x = "Na"; for (var ix = 0; ix < 4; ix++) { x = x + x; } x + " Batman!";
01:05 < purr> Havvy: (string) 'NaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNa Batman!'
01:05 < DarkArgon> lol
01:06 < foobar321> >> String.fromCharCode(1,65,32);
01:06 < purr> foobar321: (string) '\u0001A '
01:06 < cloudbender> Oh crap I clicked the blue E on my desktop
01:06 < DarkArgon> ie?
01:06 < foobar321> >> String.fromCharCode(65535);
01:06 < purr> foobar321: (string) '\uFFFF'
01:06 < cloudbender> I hae it when I do that
01:06 < Havvy> cloudbender: You now have a virus. Time to reinstall Windows.
01:06 < DarkArgon> why is it even on your desktop?!
01:07 < cloudbender> It's an old vista clunker
01:07 < foobar321> >> String.fromCharCode(260,128);
01:07 < purr> foobar321: (string) 'Ą\u0080'
01:07 < cloudbender> clanktop
01:08 < cloudbender> it has steam fittings on the side
01:08 <@isaacbw> you guys can pm the bot
01:08 < AAA_awright> That's not very funny
01:09 < foobar321> isaacbw: ok. but probably I will forgot his name next time im here
01:11 < foobar321> >> Math.random() >= 0.5 ? 'Go to sleep': 'Stay on IRC';
01:11 < purr> foobar321: (string) 'Go to sleep'
01:11 < foobar321> ok
01:13 < AAA_awright> Bah I'm on a breakthrough here
01:14 < AAA_awright> >> for (var i=0, x; i<8; i++) { x += x - {}; }; x + " Batman!";
01:14 < purr> AAA_awright: (string) 'NaN Batman!'
01:14 < AAA_awright> ...
01:14 < AAA_awright> >> for (var i=0,x=''; i<16; i++) { x += x - {}; }; x + " Batman!";
01:14 < purr> AAA_awright: (string) 'NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Batman!'
01:14 < AAA_awright> But this will have to do
01:15 < AAA_awright> So much potential with i/i; {}%i; function.toString and array.join
01:15 < cloudbender> in the song, the word was Batmaaaaan.
01:16 < Havvy> >> {} % (0/0)
01:16 < purr> Havvy: SyntaxError: Unexpected token %
01:16 < Havvy> % isn't modulus?
01:16 < AAA_awright> It is
01:16 < AAA_awright> But {} may not be an object
01:16 < AAA_awright> Try
01:17 < Havvy> >> {a:0} % (0/0)
01:17 < purr> Havvy: SyntaxError: Unexpected token %
01:17 < AAA_awright> >> (({}) % (0/0))
01:17 < purr> AAA_awright: (number) NaN
01:17 < AAA_awright> >> 1 + {} % (0/0)
01:17 < purr> AAA_awright: (number) NaN
01:17 < AAA_awright> It has to do with starting an expression with {
01:18 < Havvy> >> {a: function () { return 5; }}[a]();
01:18 < purr> Havvy: SyntaxError: Unexpected token (
01:18 < Havvy> >> {a: function () { return 5; }}['a']();
01:18 < purr> Havvy: SyntaxError: Unexpected token (
01:18 < AAA_awright> >> ({a: function () { return 5; }})['a']();
01:18 < purr> AAA_awright: (number) 5
01:18 < Havvy> :/
01:18 < AAA_awright> It's because you could be starting a block, and that's what ECMAScript thinks you're doing
01:19 < AAA_awright> >> { return 1 }
01:19 < purr> AAA_awright: SyntaxError: Illegal return statement
01:19 < AAA_awright> THAT'S LEAGAL YOU IDIOT
01:19 < AAA_awright> RETURN IS ALWAYS VALID >:(
01:19 < AAA_awright> >> { 1 }
01:19 < purr> AAA_awright: (number) 1
01:19 < AAA_awright> Havvy: See?
01:19 < AAA_awright> >> a: 1
01:19 < purr> AAA_awright: (number) 1
01:19 < AAA_awright> O.o
01:20 < AAA_awright> >> {a: 1}
01:20 < purr> AAA_awright: (number) 1
01:20 < AAA_awright> Oh
01:20 < AAA_awright> That's a label
01:20 < AAA_awright> ({a: 1})
01:20 < AAA_awright> >> ({a: 1})
01:20 < purr> AAA_awright: (object) {a: 1}
01:20 < AAA_awright> See, there's your object
01:20 < Havvy> But JS has no purpose of having blocks not opened by an if/for/while/function/switch??
01:21 < AAA_awright> When you do {a: 1} it's a block, with a label "a", and evaluate the number "1"
01:21 < AAA_awright> Havvy: Which is silly, it should have some purpose
01:21 < AAA_awright> I think you can do like
01:21 < AAA_awright> ... hm
01:21 < AAA_awright> >> {} while (1)
01:21 < purr> AAA_awright: SyntaxError: Unexpected end of input
01:22 < Havvy> do {} while (true)
01:22 < Havvy> >> do {} while (true)
01:22 < purr> Havvy: Timeout Error: Execution time exceeded 2 seconds
01:22 < Havvy> >> let x = 5;
01:22 < purr> Havvy: SyntaxError: Unexpected identifier
01:22 < Havvy> Let blocks add a use...but they aren't implemented yet here. X.X
01:22 < AAA_awright> Havvy: No, {} allows you to group multiple expressions, because {} isn't defined as part of "while" and such
01:23 < AAA_awright> It's only actually required for a function for some reason...
01:23 < AAA_awright> That's getting fixed soon enough with the fancy shorthand syntax
01:23 < AAA_awright> function(x) x+1;
01:23 < inZania> Is there anything akin to DTrace that will work on OSX or CentOS? Just looking for a way to profile where my app is spending its time >.<
01:23 < AAA_awright> >> (function(x) x+1;)(1)
01:23 < purr> AAA_awright: SyntaxError: Unexpected identifier
01:23 < AAA_awright> bah
01:24 < Havvy> AAA_awright: IMO, the parameter clause should be one space from the function keyword.
01:25 < Havvy> (function (x) { return x + 1; })(1/0)
01:25 < AAA_awright> That wouldn't fix anything
01:25 < AAA_awright> >> (function (x) x+1;)(1)
01:25 < purr> AAA_awright: SyntaxError: Unexpected identifier
01:25 < Havvy> No, it wouldn't.
01:25 < AAA_awright> Well why?
01:25 < Havvy> I just think it helps readability having that space there.
01:25 < AAA_awright> The () forms a single token with "function"
01:25 < AAA_awright> Too much whitespace means you can't seperate tokens
01:26 < AAA_awright> if ( x + 1 > z && 4 ) { return true ; } <-- Can anyone read that? O_O
01:26 < AAA_awright> if(x+1>z && 4){ return true; }
01:27 < Havvy> if (x + 1 > z && 4) { return true; }
01:27 < Havvy> Is perfectly readable.
01:27 < AAA_awright> That's what I just posted as "unreadable" heh
01:28 < AAA_awright> Which is evaluated first, the > operator or the && operator?
01:28 < Havvy> The clause x + 1 > z
01:28 < Havvy> Or subclause.
01:28 < AAA_awright> (x+1>z) forms one expression, (4) forms another, thus you have x+1>z && 4
01:29 < Havvy> Yes, but... x+1 or 1>z first?
01:29 < AAA_awright> I guess you could also go if((x+1 > z) && 4)
01:30 < DarkArgon> x+1
01:30 < Havvy> DarkArgon: I know. ;)
01:30 < AAA_awright> Havvy: That's a consern, but I'm betting on the fact that it doesn't make sense to add x to the result of 1>z
01:30 < AAA_awright> And most programmers should know that order of operation anyways
01:30 < Havvy> (if (&& (> (+ x 1) z) 4) ... ...)
01:30 < Voting> http://pastebin.com/094yjL0v    <- Help! I'm trying to learn to use socket.io with node.js and I'm lost. Line 40 gets logged on the server but line 9 and line 45 never show up, even when I type "a()" in the browser's javascript window to try to emit that message to the server. What am I missing? 
01:31 < AAA_awright> kill me now
01:31 < AAA_awright> I don't mind prefix notation for + * etc, but comparison?
01:31 < AAA_awright> (a > b) or die
01:32 < Havvy> AAA_awright: That's hard to read cause Lisp...but you'll notice that +, x, and 1 are separate tokens. And thus should be treated as such.
01:32 < Havvy> Throwing a bunch of tokens together just because you can...it's why I can't have names like module-factory and have to go with moduleFactory instead.
01:33 < AAA_awright> Also (func, arg, arg, ...) was a horrible decision, func(arg, arg) seperates the function being called from the arguments it is going to be processing
01:33 < AAA_awright> Otherwise Lisp really has just one function and it's the ( function
01:33 < cloudbender> module-factor=NaN
01:33 < cloudbender> module-factory=NaN
01:33 < AAA_awright> Similar to the .call method of ECMAScript
01:33 < DarkArgon> Voting, do you call startup() ?
01:34 < Voting> yes, in my HTML (see the bottom)
01:34 < AAA_awright> But no one goes around going Number.prototype.toFixed.call(4, 2) that's crazy
01:34 < Voting> DarkArgon: thanks!
01:34 < AAA_awright> Therefore, Lisp is stupid
01:34 < Voting> AAA_awright: Lisp is WONDERFUL! 
01:34 < AAA_awright> Or I should be constistent, Lisp is crazy
01:34 < asdf12> Voting: you didn't include the on('q') server end in the connection block
01:35 < Voting> asdf12: Line 44 is wrong?
01:35 < cloudbender> here is ONE of my sort staments
01:35 < cloudbender> if (a.name.text < b.name.text) return -1;
01:35 < asdf12> Voting: 44 needs to be inside 35
01:35 < Havvy> AAA_awright: .call(null, 4, 2)   ;)
01:35 < cloudbender> and that's an easy one
01:36 < Voting> asdf12: Looking at 44 and 35...  brb!
01:36 < DarkArgon> inside 37
01:36 < asdf12> 37
01:36 < AAA_awright> Havvy: Eh?
01:36 < Havvy> Anyways, somebody's getting real support in here, so I'm gonna shut up now.
01:36 < asdf12> i mean line 37
01:36 < AAA_awright> That's correct
01:36 < AAA_awright> >> Number.prototype.toFixed.call(4, 2)
01:36 < purr> AAA_awright: (string) '4.00'
01:36 < Voting> So I need to set up all my OTHER "on"s inside my on connect?
01:37 < Voting> asdf12: So I need to set up all my OTHER "on"s inside my on connect? ???
01:37 < DarkArgon> yes if you have more
01:37 < Havvy> Hmm, ah.
01:37 < cloudbender> you can have you onconnect do a process.nextTick to a setup function
01:37 < Havvy> Right. toFixed is part of the Number prototype.
01:38 < Voting> DarkArgon: I'll go try that... why do I need to do that inside the on connect?
01:38 < cloudbender> that way you can escape the onconnect event as soon as possible
01:39 < asdf12> Voting: you are registering a listener for that connection
01:39 < DarkArgon> ^
01:43 -!- mode/#Node.js [+o isaacbw] by ChanServ
01:45 < Voting> I LOVE U FOLKS!!! 
01:45 < Voting> asdf12: DarkArgon! etc!!! THANKS!!!
01:48 < cloudbender> Can I chain a function call to the tail end of an object ?
01:49 < cloudbender> I guess I don;t want to do that do I.
01:49 < cloudbender> the function will launch each time the object is referenced
01:50 < cloudbender> (var obj = {}).()
01:50 < cloudbender> or something like that
01:50 < asdf12> you could do something like before, after
01:51 < asdf12> after(a, b); a() // b will get called afterwards
01:52 < asdf12> well, i guess even that requires you to modify your existing function (a in the example)
01:52 < cloudbender> yeah but my 'a' is an object, bnot a function
01:52 < sshaginyan> How do I do this var x = "Hello world " + true ? "true" : "false" + " world hi are you"
01:52 < sshaginyan> so that x is "Hello world true world hi are you"
01:52 < cloudbender> wrap the true ? ... in paranes
01:52 < cloudbender> (true ? ...)
01:53 < asdf12> what do you mean by chain a function call tot he tail end of an object?
01:53 < cloudbender> and use single quotes in javascript
01:53 < sshaginyan> cloudbender: YOU! you clever dangerous devil you.......
01:54 < asdf12> when will that function be called?
01:54 < sshaginyan> cloudbender: why?
01:54 < cloudbender> asdf12 I have an object, and I would like to be ale to reference it as object() and have it do some work, or not.
01:55 < asdf12> why dont you wrap a function around the object then?
01:55 < cloudbender> sshaginyan if your code uses single quotes, you strings can have double quotes embedded
01:55 < asdf12> you can't call an object ()
01:55 < sshaginyan> kk
01:55 < cloudbender> var myname = ' the 'best guy ever " ';
01:55 < cloudbender> oops
01:56 < cloudbender> var myname = ' the "best guy ever " ';
01:56 < cloudbender> >> ' the "best guy ever " '
01:56 < purr> cloudbender: (string) ' the "best guy ever " '
01:56 < SomeoneWeird> lol
01:58 < AAA_awright> asdf12: Well you can
01:58 < AAA_awright> cloudbender: So it turns out that Functions are actually objects that are call-able
01:58 < asdf12> you know what i meant
01:58 < AAA_awright> You can do this:
01:58 < AAA_awright> var obj = function(){ /* */ }
01:58 < AAA_awright> obj.a = 2;
02:00 < asdf12> yea and
02:00 < asdf12> what would be the point of that
02:00 < cloudbender> functions are objects, but javascript is intrpreted, and it may interpret function objects differently than base objects
02:01 < cloudbender> and there are a few ways to state or declare a function, and they each have thier own implications
02:01 < AAA_awright> cloudbender: First off why do you want to do this
02:01 < cloudbender> oh
02:02 < cloudbender> I have a var object = {}
02:02 < AAA_awright> cloudbender: Second no it won't, literally the only difference between an object and a function is that a function has the [[Call]] internal property set
02:02 < cloudbender> and I would also like to be able to invoke it, but I don;t want it to be a function
02:03 < Voting> If I want to be able to run the read/eval/print loop to explore var values on the server, how do I do that? My server is programmed to serve pages, etc. so it does not evaluate expressions when I type to it. 
02:03 < cloudbender> AAA_awright do a TypeOf on an object, and on a function.
02:03 < asdf12> Voting: maybe look at https://github.com/dshaw/replify i haven't used it myself
02:04 < Voting> asdf12: I'll look at it! Thanks! 
02:04 < AAA_awright> cloudbender: the ECMAScript spec says "If the [[Call]] internal property is set, return 'function', else return 'object'"
02:04 < SomeoneWeird> wat
02:05 < cloudbender> What other differences are presented by the script engine, where the [[call]] property is set ?
02:06 < cloudbender> And in what browsers and core implementations ?
02:07 < cloudbender> My point is that functions are objects, but have implications in scope, declaration, and execution context, which base objects do not.
02:07 < AAA_awright> cloudbender: Just stuff relating to errors... If you try to call an object without [[Call]] it'll throw a TypeError iirc
02:07 < cloudbender> right
02:07 < AAA_awright> No, function bodies and calls on functions do, but objects don't change their behavior just because they have a [[Call]] property
02:08 < asdf12> so
02:09 < asdf12> you're basically saying you can't call an object
02:09 < AAA_awright> By definition
02:09 < cloudbender> Unless it holds a function refernce
02:10 < asdf12> gee i thought i said that too
02:10 < cloudbender> lol
02:10 < AAA_awright> If it were callable then it'd be a Function
02:10 < asdf12> weird
02:12 < nkohari> http://i.imgur.com/JtsYvse.png damn it amazon
02:13 < DarkArgon> what generated that graph?
02:13 < nkohari> http://datadoghq.com/
02:13 < nkohari> pretty good stuff
02:13 < dxeh> has anyone here ever used socket.io in an html web client environment?
02:13 < nkohari> they basically productized etsy's statsd
02:13 < nkohari> dxeh: yes
02:17 < cloudbender> Does anyone speak the French language ?
02:17 <@isaacbw> aka french
02:17 < cloudbender> I mean here, in channel
02:17 < dxeh> aka dead language
02:17 < cloudbender> start is'enMarche' ?
02:17 < zomg> pantalone
02:17 < cloudbender> and stop is 'deMarche'
02:18 < zomg> baguette
02:18 < zomg> :D
02:18 < dillon> couldbender, I can have a conversation with you via google translate if that helps
02:18 < cloudbender> no wait stop is 'arre`
02:18 < DarkArgon> arrrrr talk like a pirate
02:19 < cloudbender> I guess I need the word for 'quit, shutdown, terminate, cease, ...' or something like that
02:19 < cloudbender> haaaar, ye must protect yer booty on the high seas ....
02:19 < DarkArgon> :D
02:20 < cloudbender> I'll use deMarche
02:20 < cloudbender> it's probably franglish but what the heck
02:21 < cloudbender> or maybe frexican I don't know.
02:22 < SomeoneWeird> <isaacbw> aka french < lol
02:24 < systemfault> cloudbender: Non, personne ne parle le français.
02:30 < Voting> asdf12: DarkArgon - I want to return a result from a MySQL database (or a postgresql database or something...) How should I do that? Should I just do, in my startup(), add: 
02:30 < Voting>     socket.on('result', function (data) { Result = data}); 
02:30 < Voting> or will that broadcast the result to other clients globally or something bad?
02:30 < asdf12> it will
02:30 < asdf12> use session
02:34 < asdf12> or like if you want to keep it simple
02:34 < asdf12> just find some other way to identify the client
02:35 < asdf12> like a plain text passphrase
02:35 < Voting> asdf12: I somehow use that passprhase to make the query a result that goes back to the sender?
02:36 < DarkArgon> startup was on the clientside
02:36 < Voting> DarkArgon: yse
02:36 < Voting> yes
02:36 < DarkArgon> you won't broadcast anything on the clientside
02:40 < cloudbender> call me bad, but I'm using the fs.existsSync just to check the existance of the file on disk.
02:43 < cloudbender> it's actually going to result in less compute resources tha the asynch version, I'll bet.
02:43 < cloudbender> but it blocks dammit. no ...
02:43 < Hi123> Can anyone point me to console.log formatting resources for printing columns. I have been trying to set column widths for a couple of hours now.
02:44 < AAA_awright> Hi123: There's nothing builtin to console.log, you just have to add padding yourself
02:44 < DarkArgon> i also use fs*Sync. don't tell anybody
02:44 < StephenS> hi
02:44 < StephenS> I use node.js for websockets /socket.io and i was wondering how can I create a real time chat with storing info in sql db?
02:45 < Hi123> what about data that can change, depending on user input?
02:45 < AAA_awright> >> (Array(101).join(' ')+'Hi123').substr(-100)
02:45 < purr> AAA_awright: (string) '                                                                                               Hi123'
02:45 < istvanskeri> how can i convert rss to json using express
02:45 < Voting> Does console.log not really work on the client side with socket.io?
02:45 < Hi123> ohh, gotta try that out
02:45 < Hi123> thanks!
02:46 < AAA_awright> Voting: console.log isn't any standard, no, it's only Node.js
02:46 < AAA_awright> Actually it'll work in Firefox if the debugger is turned on, but only when it's turned on, creating a most pathetic heisenbug
02:46 < DarkArgon> istvanskeri, maybe https://github.com/danmactough/node-feedparser
02:46 < dxeh> why might this code not be emitting properly? using socket.io http://pastebin.com/MFNjBvFp
02:47 < Voting> AAA_awright:  Generally I use console.log to debug in my chrome all the time but it does not seem to be working with my socket.io returns. 
02:47 < AAA_awright> Voting: You shouldn't be using it in production browser code at all
02:47 < Voting> AAA_awright: what are you talking about? I'm talking about debugging.
02:47 < AAA_awright> For debugging idk
02:47 < Havvy> AAA_awright: console.log heisenbug. Nice. :P
02:49 < Voting> I as not aware of http://en.wikipedia.org/wiki/Heisenbug until now. Funny!
02:50 < asdf12> Voting: you use something to verify who you want to give the result back to
02:50 -!- mode/#Node.js [+o isaacbw] by ChanServ
02:50 < Voting> asdf12: and what do I do w/ that unique value?
02:52 < dxeh> http://pastebin.com/MFNjBvFp why exactly might this code not be emitting correctly to my server? in my server i am doing http://pastebin.com/v3uGutW0 , connection is printed to the console but the data is not
02:54 < Voting> asdf12: Do I need to do this set nickname thing?
02:55 < asdf12> Voting: well for simplicity sake like for trying out i was just saying, use a simple passphrase, but once you verify who the client is then you know who to send the data back to?
02:55 < asdf12> do you get it?
02:56 < Voting> asdf12: how do I send it back just to the browser that sent me the query? 
02:56 < Voting> asdf12: (me being a node.js instance!)
02:58 < asdf12> so your earlier problem, you asked why did you have to put it inside the connection listener? remember?
02:58 < asdf12> whenever a client connects, they are 'socket' in that case, and you are registering listeners or emitting stuff to that 'socket' 
02:58 < asdf12> but the problem is , you don't know who that 'socket' is, unless you use something to verify them
02:59 < asdf12> otherwise if you don't add some way to verify, you're just sending emitting the db result to everyone who asks
02:59 < asdf12> you get it?
03:00 < asdf12> for instance when a client connects and they verify themselves, you can register a difference call back for them than everyone else
03:01 < Voting> Not yet.   Added to my startup fn  "socket.on('result', function (data) { Result = data });"  gets me back the resulting answer but perhaps it will go to other browsers also....
03:01 < Voting> ah, he could send along his event name!
03:01 < asdf12> i'll show an example of what i mean
03:02 < Voting> asdf12: so instead of "socket.emit('result')" I can use a unque ID instead of "result"?
03:03 < Voting> Would that make sense? 
03:03 < Voting> oh, but then everyone is getting it causing lots of extra IO?
03:05 < asdf12> http://hastebin.com/vawapemasu.coffee
03:05 < asdf12> so i'm using going with the first client to connect
03:06 < asdf12> so the first one gets a different listener than the rest
03:06 < asdf12> so whenever a client emits to 'stuff' they will get told if they were number 0 or not, and only the first client will see they were number 0
03:06 < Voting> reading
03:08 < Voting> asdf12: can I PM u?
03:08 < asdf12> sure
03:12 <@isaacbw> does the amazon aws site have broken style for anyone else?
03:12 <@isaacbw> it's been this way for a long time
03:13 < groundwater> isaacbw: screenshot?
03:13 <@isaacbw> it's just the menu
03:13 < groundwater> works for me, on chrome
03:13 <@isaacbw> :( it doesn't work for me on any browser or computer
03:14 <@isaacbw> or monitor size
03:15 <@isaacbw> I feel weird sharing screenshots of my computer
03:15 <@isaacbw> it's like putting naked pics on the web
03:15 <@isaacbw> http://i.imgur.com/qXZaQ81.png
03:16 < dook> That's obnoxious.  What, are you supposed to right click, inspect element, and increase the menu size every time you want to click that top item?
03:16 < groundwater> get any console errors?
03:16 <@isaacbw> I'll check
03:16 <@isaacbw> nupe
03:16 < groundwater> i just checked, works here. osx 10.8.2 & chrome 24.0.1312.57
03:17 <@isaacbw> and none of them are clickable
03:17 <@isaacbw> I'm on archlinux across all my browsers/computers, so maybe it's something weird with a plugin
03:17 < groundwater> they're not clickable on mine, but a sub-menu pops up
03:17 <@isaacbw> but that would be reaallly weird
03:17 <@isaacbw> yea, no submenues
03:17 <@isaacbw> :( amazon
03:17 <@isaacbw> maybe it's a cdn cache issue
03:23 < someprimetime_> anyone using connect-flash in here?
03:24 < OliverJAsh> grr, running `which nvm` will not tell me where nvm is…
03:24 < OliverJAsh> where is it?
03:24 < groundwater> nvm isn't in PATH
03:24 < groundwater> it's a shell function
03:24 < groundwater> it's weird
03:25 < OliverJAsh> oh
03:25 < groundwater> what did you wanna do?
03:27 < AAA_awright> I don't have an 'nvm
03:28 < AAA_awright> `nvm`
03:31 < asdf12> maybe
03:32 < Voting> isaacbw: u around?
03:32 < asdf12> one day me you (voting) and issacbw can go get a drink
03:32 < asdf12> MAYBE
03:32 < Voting> asdf12: I'd like that.
03:32 <@isaacbw> ahoy
03:32 < Voting> I'm in a cafe/bar in the west villge right now if anyone wants to join me... 
03:33 < Voting> isaacbw: I understand you are a NYC person?
03:33 <@isaacbw> too late for me :(
03:33 <@isaacbw> yea
03:33 < Voting> isaacbw: can I pm you?
03:33 <@isaacbw> lol, I sound lame saying that
03:33 < asdf12> if you drive me i'll come
03:33 <@isaacbw> what I mean is, I'm working on a saturday night 
03:34 < asdf12> but im not taking the train right now
03:34 < asdf12> by the time i get there it'll be like 11:30
03:46 < groundwater> nothing wrong with working on a saturday night
03:48 < asdf12> whats a shorter verb for saying validate
03:49 < groundwater> check
03:49 <@Nexxy> ✓
03:49 < asdf12> keep going
03:54 < barraponto> npm install -g tries to install to /usr/local, is there any way to install to ~/ ?
03:59 < groundwater> barraponto: you could use nvm
03:59 < barraponto> groundwater: yeah, I used to.
04:00 < carl_> Does anyone know angular.js and could help me with something easy?
04:00 < barraponto> groundwater: downside is I need to keep compiling node on every release (i usually notice when archlinux updates its own node package)
04:01 < groundwater> barraponto: how long does it take to compile?
04:01 <@Nexxy> barraponto, you can set up a ~/.npmrc
04:01 < asdf12> carl_ i haven't used it in a bit, but if its easy maybe i'll remember?
04:02 < carl_> sec formulating questiong :)
04:02 <@Nexxy> barraponto, echo "prefix = ${HOME}/.npm-packages" > ~/.npmrc
04:02 <@Nexxy> that should do it
04:03 < barraponto> Nexxy: good. what about the bin path?
04:03 <@Nexxy> I haven't done that myself
04:03 <@Nexxy> but I imagine you could supply prefix when configuring & installing
04:04 <@Nexxy> like ./configure --prefix=~/bin/ or w/e
04:05 < carl_> asdf12, I want to post to my api but setting enctype='multipart/form-data', 
04:06 < asdf12> oh, idk, i never had to do that
04:06 < barraponto> hey, nvm now downloads a binary (skipping compiling altogether)
04:06 < barraponto> \o/
04:06 < carl_> Because if I have a form in the page and a submit button the whole page will reload, but If I only have the input field and use a controller to send the post request, it doesn't get enctype='multipart/form-data', even though I encapsulate it in a form
04:08 < groundwater> barraponto: win
04:08 < carl_> Basically I'm trying to dynamically load a picture into a submitting form(like ebay), by sending the picture to my api through a post request, and then load an img element with the Url to the uploaded picture 
04:09 < asdf12> carl_ no i never had to do that with angular so im not sure
04:10 < groundwater> carl_: there is an angular irc 
04:10 < asdf12> i would think it would read your <form> tag? to know the encoding
04:11 < asdf12> but if not, then idk how to specify it
04:11 < carl_> groundwater, yes but its dead unfortunately
04:11 < asdf12> HMM actually let me see
04:11 < groundwater> carl_: did you try? i see about 500+ messages/day
04:11 < carl_> im in it now thanks
04:12 < asdf12> carl_ actually i did this before, let me check what i did
04:12 < carl_> thanks
04:18 < asdf12> carl_ ok i didn't use angular for that heh
04:18 < asdf12> used it for everything else but that
04:19 < carl_> ok, but the thing is, It doesnt feel like it should be that hard, all I need to do is to send the file to my api and then get the filename back without reloading the page
04:20 < asdf12> you dont have the reload the page
04:22 < asdf12> you upload the image, server responds, then get the new data, and everything else should update on its own because of the bindings
04:24 < carl_> yes it does, but its just the posting of the problem
04:25 < asdf12> you just need to prevent the default action from happening (page reload)
04:27 < asdf12> carl_ for instance, i created a directive for the form, it binds to the 'upload' button, prevents default from happening 
04:28 < asdf12> it does the file upload, then when its done i just call scope.images = Image.query() and it updates the images
04:28 < carl_> ok ill try it
04:29 < asdf12> the actual uploading of the file though i didn't do that with angular though
04:29 < asdf12> so if you want to not make the page reload, you have to write your own file upload
04:32 < carl_> But I just feel it should work to just take that specific input or form part of the page and post it through a controller...
04:33 < asdf12> carl_ my directive in its simplest form looks like this: http://hastebin.com/nohohiqequ.js with jquery
04:36 < asdf12> maybe carl_ but i didn't look into doing it that way, there were other things i needed to do
04:36 < asdf12> like handle multiple uploads, show progress bar uhh and other stuff
04:37 < asdf12> but doing it this way doesn't cause the page to reload, auto updates your images, just the complex bit is the file uploading
04:37 < carl_> ah ok, cause I'm looking just to do the upload, and then return the name of the picture and then the models gets updated
04:38 < carl_> well thanks for your help, ill continue
04:45 < asdf12> carl_ i mean i doubt theres an angular js way to do it, file uploading is a messy thing
04:47 < carl_> yeah, but if I could pass  do something like this in my submitCtrl       $http.post({enctype:'multipart/form-data', url: '/api/upload'}){...}
04:47 < carl_> and then just point and the specific file input everything would be green
04:47 < carl_> at*
04:50 < asdf12> you can't do file uploads that easily with javascript, so i doubt angularjs would help with that, since thats not what its meant for
04:50 <@Nexxy> wat
04:51 <@Nexxy> jquery + request = easy file uploads
04:51 < asdf12> he doesn't want to use jquery
04:52 <@Nexxy> well anything that abstracts the XHR functionality
04:53 < asdf12> no its not that simple
04:55 < carl_> this is basically what im trying to do input( type='file', ng-model='image') and  in my controller with $http.post('api/upload', image ){...}     I just don't know how to get it to understand enctype='multipart/form-data'
04:55 < carl_> if I wrap the input in an form(enctype='multipart/form-data') it doesn't affect it
04:55 < harbhub> what is a good encryption tool that i can use on the client side?
04:56 < harbhub> that i can decrypt on the server?
04:56 <@Nexxy> SSL
04:56 <@Nexxy> (TLS)
04:56 < harbhub> no
04:56 < harbhub> i want to also
04:56 <@Nexxy> there is nothing else
04:56 < harbhub> hmm
04:56 < harbhub> so
04:56 < harbhub> listen
04:56 < harbhub> i have SSL
04:56 < harbhub> do i send the plain text password?
04:56 < harbhub> to the server?
04:56 < harbhub> and then just encrypt it before inserting it to the database?
04:56 < harbhub> or do i encrypt the password on the client side
04:56 < harbhub> send that over the SSL
04:57 < harbhub> know what i mean?
04:57 <@Nexxy> well what are you trying to achieve by encrypting it on the client?
04:57 < harbhub> security
04:57 < harbhub> the plaintext never touches my server
04:57 < harbhub> also, saves a step for the server
04:57 < harbhub> so the server won't have to decrypt
04:57 < harbhub> hmm
04:57 <@Nexxy> you shouldn't be encrypting passwords in the first place
04:57 < harbhub> i will just use cryptojs on the client
04:57 <@Nexxy> you should be hashing them
04:57 < harbhub> right
04:58 < harbhub> i meant hash
04:58 < harbhub> sorry
04:58 < harbhub> grr
04:58 < harbhub> so i want to hash the password
04:58 < harbhub> should i use crypto js?
04:58 < harbhub> on the client
04:58 <@Nexxy> sure
04:58 < harbhub> what settings?
04:58 <@Nexxy> but it's like, if SSL isn't enough in the first place, chances are any scripts that you're sending to the client can be compromised anyway
04:59 < harbhub> yeah but
04:59 < harbhub> i don't want to store plain text passwords
04:59 < harbhub> regardless
04:59 < harbhub> ever
04:59 < harbhub> so i might as well use a hash
04:59 <@Nexxy> obviously they need to be hashed
04:59 < harbhub> right
04:59 < harbhub> that is my point
04:59 < harbhub> so
04:59 <@Nexxy> but doing it on the client doesn't necessarily gain you anything
04:59 < harbhub> what is good to use to hash?
04:59 <@Nexxy> but an extra library to load 
04:59 < harbhub> load the library
04:59 <@Nexxy> whirlpool + ripemd160
04:59 < harbhub> what is that?
05:00 < harbhub> nexxy, can you help me set that system up?
05:01 <@Nexxy> sorry, no
05:01 < harbhub> ok
05:01 < harbhub> i will use whirlpool
05:01 < harbhub> once i learn that
05:01 < harbhub> then i will consider adding others
05:01 < harbhub> nexxy, should whirlpool be enough?
05:01 < harbhub> on its own
05:02 <@Nexxy> probably
05:02 < harbhub> http://www.sunsean.com/Whirlpool.html
05:02 < harbhub> is that what you use?
05:03 < harbhub> what is the javascript you use to implement whirlpool hashing?
05:03 < harbhub> i need source code  :)
05:03 <@Nexxy> I'm not familiar with that particular implementation
05:03 <@Nexxy> but assuming it's functional; sure
05:04 < harbhub> well nexxy, can you email me the source you use, please?
05:04 < harbhub> is it available on github? (the code you use to implement whirlpool)
05:05 < asdf12> carl_ as far as i understand it, if you somehow tell angularjs the encoding type, great, but is angularjs going to encode it for you? i doubt it
05:05 <@Nexxy> harbhub, http://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm
05:06 < harbhub> nexxy, so you handle it on the server?
05:06 <@Nexxy> yes
05:06 < harbhub> gotcha
05:06 < harbhub> hmm
05:06 < harbhub> you know something
05:06 < harbhub> i like that idea
05:06 < harbhub> because...
05:07 < harbhub> this way, anyone gets the database somehow
05:07 < harbhub> the physical db
05:07 < harbhub> they won't know my hash
05:07 < harbhub> so they will have to test whirlpool and everything else
05:07 < asdf12> carl_ so when you submit a file normally, the browser does this for you
05:07 < harbhub> thanks nexxy, you da bomb
05:07 < carl_> asdf12, ahh, I see what you mean, just found how to set the encoding  in the controller so ill try it out
05:07 <@Nexxy> harbhub, :)
05:07 <@Nexxy> yw
05:08 < carl_> asdf12 ok thats something I didn't understand
05:08 < carl_> but why wouldn't angular be able to do the same?
05:08 < harbhub> hey nexxy, sorry so many questions, do you use the mhash module?
05:08 <@Nexxy> not that I'm aware of
05:08 < harbhub> in order to get whirlpool algorithm (or is that built in to crypto module?)
05:09 < asdf12> carl_ it could, but it's not meant for that, if it does support it, it'll probably be modern browsers only
05:09 < harbhub> hmm, so crypto has whirlpool built in
05:09 <@Nexxy> I just usually use ripemd160 (which is almost always part of the standard hashes available thorugh openssl)
05:09 <@Nexxy> harbhub, it depends on your system
05:09 < harbhub> system meaning?
05:09 <@Nexxy> OS
05:09 < harbhub> oh
05:09 < harbhub> i have windows, but the server is... probably linux?
05:09 < harbhub> i use nodejitsu
05:10 < carl_> But i mean since you normally don't even use the form tag when you use angular, just get the specific models and send them, where would you then say what kind of form data you are sending?
05:11 < carl_> since you can group them under $scope.form = {}
05:13 < asdf12> carl_ by default form data isn't encoded in any special way
05:13 < alexoviedo999> hello, trying to install the cradle library and getting the following error: https://gist.github.com/alexoviedo999/4970236
05:13 < asdf12> but if you're dealing with binary data, like an image, javascript doesn't understand binary data
05:14 < asdf12> so you have to encode it and represent the binary data in some other way
05:14 < asdf12> though, most of the libraries that do this for you, don't even do it that way, they use tricks to get the browser to do it for you
05:15 < asdf12> and there's too many compatibility issues with browsers and all that, thats its just better to find a library that does this for you? and leave angularjs out of it
05:16 < asdf12> well use a directive, and update the images etc. with angularjs but the actual uploading... use something else
05:18 < carl_> yes I guess you'r right. its just that I got kind of obsessed getting it to work this way cause I feel it should
05:19 < carl_> I mean all i want to do is fetch one input field and send it away!
05:20 < someprimetime_> anyone using connect-flash w/ express?
05:21 < asdf12> there was a time when file uploads via flash was in heavy use carl_ haha remember?
05:21 < asdf12> its not that easy!
05:22 < carl_> haha no I'm sorry I've never programmed flash
05:22 < asdf12> but i think that was mostly for drag and drop file upload support
05:22 < carl_> only used it for animation
05:22 < carl_> is flash getting back on the train recently? seems like you see more internet apps using it
05:24 < asdf12> i havent really
05:24 < carl_> where you from btw?
05:24 < asdf12> just waiting for hulu... then i dont think i'll be using flash much anymore
05:24 < harbhub> hey nexxy, can i just use SHA1?
05:24 < harbhub> guys, is SHA1 okay?
05:24 < harbhub> 512 bit
05:25 < carl_> dont forget to salt it
05:25 < asdf12> carl_ nyc, btw i could be wrong about if angularjs supports it or not, i'm not 100% sure, i just doubt it given its not that simple and its not meant to do stuff like that, but still check with them
05:25 < asdf12> maybe there's a super duper easy lib that hooks into angularjs to add it for you 
05:26 < carl_> do you mean the file upload?
05:26 < asdf12> yea
05:26 < carl_> I mean backend wise epress does this super easily
05:26 < carl_> al you really have to do is parse the req.files
05:26 < carl_> and then just save the file somewhere
05:28 < asdf12> yea its super easy cause you're using a library to do it :P hint
05:28 < carl_> yeah :)
05:29 < asdf12> express depends on the module formidable to do it
05:29 < asdf12> https://github.com/felixge/node-formidable/blob/master/lib/multipart_parser.js look at the parser :P
05:29 < carl_> yeah its great
05:29 < harbhub> has anyone here used SHA512 with the crypto module?
05:29 < asdf12> yea imagine having to do that front end with javascript, thats why like most front end libs don't even do it 
05:30 < asdf12> they just get the browser to do it
05:30 < asdf12> carl_: also check out http://www.html5rocks.com/en/tutorials/file/xhr2/#toc-sending
05:31 < asdf12> " XMLHttpRequest has limited us to sending DOMString or Document (XML) data for some time. " so its not like you can just send it out there
05:31 < carl_> man it doesn't feel like angular likes at all what i'm trying to do here
05:31 < asdf12> i've been trying flight
05:31 < carl_> my req always ends up empty backend, guess it doesn't work
05:31 < asdf12> i decided angular makes html look too fugly
05:32 < asdf12> with angular, i feel like i'm writing for angular, and not just writing code? if that makes any sense, thats just me
05:33 < carl_> funny thats what I read people have against it
05:33 <@Nexxy> kind of like how it is when you use promises
05:33 < carl_> but I just started with it so I still need to make up my mind about it
05:34 < someprimetime_> carl_: connect-flash is for flash messages
05:34 <@Nexxy> monolith all the things
05:34 < asdf12> no its definitely cool how all the bindings just work magically, but BAM you got this nightmare of a html
05:34 < asdf12> and you can't read it your own html anymore haha
05:34 < carl_> does it get that bad though?
05:34 <@Nexxy> asdf12, have you seen what nodejitsu was doing with plates?
05:35 < asdf12> no, i dont know even  know what plates are :S
05:35 < carl_> I mean like now, just changing an img src file and Bam theres the image, its awsome
05:35 < asdf12> yea
05:35 < asdf12> i like that
05:36 <@Nexxy> https://github.com/flatiron/plates
05:38 < asdf12> in a way it does that
05:39 < asdf12> just they decided instead of writing javascript to specify things, you use element attributes
05:39 < asdf12> its a design decision i guess
05:40 < asdf12> less javascript for a quick 1 attribute in an html element
05:41 < asdf12> its really cool at first, but then you realize you're knee deep in funny attributes 
05:42 < asdf12> carl_ have you checked out twitter/flight @github ?
05:44 < asdf12> we need to band together and game the system guys
05:44 < carl_> asd12, no ill check it out, I'll give angular a chance before I try it though
05:45 < asdf12> get a bunch of people to star each others project so we can trend on github
05:45 < carl_> yeah i'm down
05:45 < carl_> I don't have any cool repo up (yet), but I sure can star others
05:46 < asdf12> what!
05:46 < carl_> did I missunderstand you?
05:46 < asdf12> no, i was just joking about doing that :P
05:47 < carl_> honestly I don't know wtf im talking about
05:47 < carl_> staring repos? what does that even mean lol
05:47 < carl_> but whatever you want me to do, ill do it!
05:47 < asdf12> starring*!
05:47 < carl_> ahhh
05:47 < asdf12> we dont stare at repos :P unless its hypnotizing
05:47 < asdf12> oh you are swedish
05:48 < carl_> yeah howd you know
05:48 < asdf12> i would like to go there one day
05:48 < asdf12> i would like to go there one day
05:48 < asdf12> i would like to go there one day
05:48 < carl_> ping asdf12
05:48 < carl_> -ping
05:48 < purr> carl_: pong
05:48 < asdf12> your whois
05:48 < carl_> funny guy
05:48 < carl_> whois asdf12
05:49 < asdf12> i had some swedish fish before
05:49 < asdf12> they were tastey
05:49 < carl_> ye we got some healthy food
05:49 < asdf12> thats an american joke (i think)
05:49 < carl_> spent the summer in the us, man in and out thats some tasty stuf
05:49 < carl_> boiling crab
05:50 < carl_> jack in the box
05:50 < carl_> man you got alot of good stuff
05:50 < SomeoneWeird> http://pcottle.github.com/learnGitBranching/
05:50 < asdf12> carl_ here is the swedish fish i had
05:50 < asdf12> http://2.bp.blogspot.com/-bov7rEdIikk/UB1Gv4DvIOI/AAAAAAAAA0w/RqlngofQNzU/s1600/800px-swedish_fish.jpeg
05:50 < carl_> haha!
05:51 < carl_> its pretty funny most swedes don't know its called swedish fish outside sweden
05:51 < carl_> its just candy fish
05:51 < carl_> here
05:51 < asdf12> oh haha
05:51 < carl_> where in nyc do you live?
05:51 < asdf12> also i've been to ikea
05:52 < carl_> lol
05:52 < asdf12> in brooklyn
05:52 < carl_> had som KOTTBULLAR perhaps?
05:52 < carl_> awsome, I've been to williamsburg
05:52 < asdf12> no i never had that
05:52 < carl_> meatballs
05:52 < asdf12> ohhh yea then
05:52 < asdf12> they were ok
05:52 < asdf12> it didn't taste very swedish
05:53 < asdf12> but i believe i'm prepared to move to sweden
05:53 < carl_> yeah, I mean the ones you get from Ikea and the ones your grandmother makes are a world apart
05:53 < asdf12> i've been to ikea so i know the culture, i've ate swedish fish so i'm accustomed to the culinary food there
05:53 < carl_> hahaha
05:53 < carl_> lol
05:53 < asdf12> im ready man
05:54 < carl_> yeah just fly
05:54 < carl_> its cold and dark as fuck now though
05:54 < carl_> been like this for 4 months people are basically hibernating
05:54 < asdf12> do a lot of people speak english as a second language there?
05:54 < carl_> everybody speaks english
05:54 < carl_> even the janitors
05:55 < asdf12> oh good then i know the language
05:55 < asdf12> so it is just like IKEA!
05:55 < carl_> you still wanna learn swedish though, swedes are a bit tricky to get close id say
05:55 < asdf12> oh yea? they don't like outsiders?
05:56 < carl_> not that they don't like but id say people have their social circle and thats about it
05:56 < carl_> most people
05:56 < asdf12> oh thats just everybody
05:57 < carl_> guess so but compared to southern europe like spain its totaly different
05:57 < carl_> ok since your from nyc I guess its more alike
05:57 < carl_> people who come from smaller cities where everyone knows everyone get a bit scared off
05:58 < asdf12> oh
05:58 < asdf12> ohi see what you're saying
05:58 < asdf12> i need to go deep into the country side
05:58 < carl_> you know they want to stop and chat and people rush by with their elbows sticking out
05:59 < carl_> yeah you should
06:02 < asdf12> blah(abc, def, {options: 1, options: 2}, function(err) { ...callback... }) or blah(abc, def).options({ options:1, options:2 }).run(function(err) { ....calback... })
06:03 < asdf12> what api do you guys like more?  
06:03 < carl_> ha!
06:04 < asdf12> i'm serious, i feel like latter is better
06:04 < asdf12> but you don't see it much, so i dont know
06:06 < asdf12> what were you doing in williamsburg? what kind of hipster meet up did you go to
06:07 < asdf12> i bet it was all cool, like in a broken down old building but with really expensive furniture, mmm so hipster
06:07 < carl_> hahahahahaha
06:08 < carl_> actually thats exactly what it was
06:08 < asdf12> dude i know
06:08 < asdf12> im cool man, im cool, i know whats the deal
06:08 < carl_> my sister used to live in nyc, I spent a week there and they have some friends living there
06:09 < carl_> didn't know its some kind of in hipster place when i went there
06:09 < carl_> just jews everywhere
06:09 < carl_> super jewish neighborhood
06:10 < asdf12> did you stop by ikea? its nearby
06:11 < asdf12> its probably like one of those places where you its super jewish, then you walk two steps, and you are now in the ghetto
06:11 < asdf12> hipsters live dangerously
06:13 < carl_> no didn't. Actually Ikea are swede refugeecamps. so If I ever get in trouble i can go and stay in ikea
06:13 < asdf12> haha yea i knew it!
06:14 < carl_> fuck my head hurt so bad
06:15 < carl_> need.. to... turn off computer... cant resist.. more reddit.. and programming... noooooo.... turn off
06:18 < NuZZ> huehuehuehue!
06:18 < mscdex> node.js rules!
06:19 < NuZZ> it does!
06:20 < NuZZ> anyone have any tips for making an eccomerce site from scratch? anything obscure or simply overlooked?
06:32 < mscdex> NuZZ: don't use VML
06:33 < NuZZ> vml?
06:34 < mscdex> joking ;-)
06:34 < NuZZ> yeah I dont know what it stands for so joke is lost on me
06:35 < NuZZ> anyway, the silence indicates that there is absolutely nothing at all that can go wrong. yay
06:36 < SomeoneWeird> http://www.namecheap.com/cispa/alert.aspx
06:36 < NuZZ> aw yea 1$ off
06:50 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
07:03 < groundwater> NuZZ: that's a mighty task
07:03 < NuZZ> well I've already created a framework
07:04 < NuZZ> frontend and such is down. im very familiar with mysql. am I missing something?
07:04 < NuZZ> creditcard/paypal with paypal.
07:05 < groundwater> how much do you have done?
07:05 < groundwater> what does the framework do?
07:05 < NuZZ> most of what express does
07:05 < NuZZ> or, the important parts imo
07:05 < NuZZ> templating, routing, etc.
07:06 < groundwater> don't like express?
07:06 < NuZZ> nope :)
07:06 < groundwater> what don't you like?
07:07 < NuZZ> good question. learning it, doing things its way. It really just comes down to my desire to 1. learn how shit works and 2. do it my way, understanding all of the parts
07:08 < NuZZ> ive a feeling due to it being so popular ill have to eventually use it :p
07:08 < NuZZ> in a collaborative situation
07:09 < groundwater> i'm sure there are many non-express projects out there
07:11 < groundwater> do you have an example of how your framework works?
07:11 < NuZZ> I mean, my framework automatically compiles .coffee, .stylus. Has a goodenough router, compresses output, handles static content if needed, templating, Exposes some useful functions for general code,  wraps the http server for callbacks .
07:12 < NuZZ> yeah i threw it up on github but I think it's outdated
07:12 < NuZZ> oh, also compresses .styles and .coffee for the frontend from multiple files into one
07:12 < asdf12> does restful routes?
07:13 < asdf12> does restful routes?
07:13 < NuZZ> I dont need a framework to do that
07:13 < Gambit-> anyone fluent in libuv awake?
07:13 < groundwater> NuZZ: i generally meet two classes of programmers. the first works the unix way. they build things in layers, using indirection. the second class likes to abstract, it's monolithic. i'm just curious what approach you've taken
07:14 < NuZZ> I have abstracted enough, but most needs to be turned "on" in a config object. I don't like how abstracted express is
07:14 < asdf12> so your routes serve html as well as resources ,json ?
07:15 < NuZZ> is that a hard thing to do, really?
07:15 < asdf12> ok
07:15 < asdf12> so how do i auth to the private/public service api?
07:16 < asdf12> with your framework
07:16 < NuZZ> I dont handle that, you can use the plethora of other modules for that like socketio
07:16 < asdf12> i thought you were building a ecommerce framework, you dont handle that?
07:17 < asdf12> then thats not really an ecommerce framework
07:17 < NuZZ> no, a general purpose framework, the app on to of that should handle it
07:17 < NuZZ> an ecommerce framework would imply more ofa CMS
07:17 < NuZZ> which I find amusing that there exists few of in node
07:18 < asdf12> idk what you mean
07:19 < asdf12> magento provides a service api, why you no??
07:19 < NuZZ> thats app based silleh
07:19 < NuZZ> throw a route somewhere and have it return json
07:19 < NuZZ> blam, api
07:21 < groundwater> NuZZ: it's tough to assess the state of your project, i would say go for it. check back when you hit a concrete problem.
07:21 < groundwater> NuZZ: you seem to grasp the necessary bits
07:21 < NuZZ> np, was just wondering really if there was any issues anyone else has been through and solved that they would see fit to share
07:22 < groundwater> NuZZ: try the email list, i think you'll get a better return
07:22 < groundwater> or at the very least, spark a debate about something
07:22 < NuZZ> true
07:23 < asdf12> nah i dont get it
07:23 < NuZZ> is there any node forums that many people frequent?
07:23 < asdf12> it should have an api, if youre just making a framework, then its just a web framework, nothing ecommerce about it
07:23 < groundwater> does stack overflow count?
07:24 < NuZZ> asdf12, apologies, I should have made it clear the non-express framework was done and im building on top of it with an app, as I said I was starting from scratch in the beginning
07:24 < NuZZ> heh stack overflow kinda does
07:24 < groundwater> can always post your SO questions links here
07:24 < asdf12> i think the test comes when you write an api for it
07:25 < NuZZ> but I still dont get why a proper megento-like nodejs solution doesnt exist yet
07:25 < asdf12> otherwise anyone can make a web framework, its not that hard
07:26 < NuZZ> yeah the discussion sort of segwayed into "why not express"
07:26 < groundwater> sometimes listening to a persons answer can tell you how prepared they are for the project
07:27 < asdf12> well you want to make an ecommerce app and you asked anything to watch for, and im asking you how your api will work
07:28 < NuZZ> Im confused, why would one strictly need an API for anything but integrating with the payment gateway?
07:28 < NuZZ> if we are indeed talking about an app and not a framework of sorts
07:28 < asdf12> internally how will it work then?
07:29 < NuZZ> likely POST's, then db queries according to routes
07:30 < asdf12> so if you had a route for a order, and you would like to know the products in that order, and the product details (inventory stock)
07:30 < asdf12> you'd do it all in 1 go?
07:31 < NuZZ> something like that
07:31 < asdf12> thats not very cool
07:31 < NuZZ> what would be very cool?
07:32 < asdf12> that if you want to know a products detail, but you're in the orders route, you can internally call the product route and fetch it
07:32 < asdf12> instead of having your order route db query for all the stuff you need
07:32 < asdf12> since you are already doing that stuff in the proper api elsewhere
07:33 < NuZZ> so you are saying, set up an API for specific small tasks, then call them seperately for each route?
07:33 < cloudbender> Anybody using setTimeout to keep the process idling when there is no work to do ?
07:34 < groundwater> cloudbender: how does your app obtain new work?
07:34 < asdf12> no, so you expose a service api, that you can also call internally
07:34 < groundwater> cloudbender: usually an open socket keeps the app running
07:34 < asdf12> groundwater: am i  making any sense?
07:34 < cloudbender> Well, it's going to be scaled to about 50 users, so I would like to keep the server ramped up and ready
07:35 < NuZZ> Im confuzzled
07:35 < groundwater> NuZZ: asdf12: i'm letting you two sort that out - i don't think i can add anything
07:35 < asdf12> you don't get what i mean?
07:35 < cloudbender> I want the server doing maintenance tasks while the clients are not placing demands
07:35 < groundwater> cloudbender: what i mean is, your app is useless unless it can accept new tasks, typically via a socket
07:36 < groundwater> cloudbender: and an open socket will keep the app running
07:36 < cloudbender> Oh yeah, that's for sure.
07:36 < asdf12> so you have restful routes, it'll be crazy to have a route that goes gets order info, gets products in that orders info
07:36 < NuZZ> not really asdf12 
07:36 < groundwater> cloudbender: if you're not using a socket, i would ask why, and then tell you to use a socket =]
07:36 < someprimetime_> can someone take a look @ this and try to help me figure out what's going on please? http://stackoverflow.com/questions/14918929/cant-get-connect-flash-to-work-with-express-js-on-redirect
07:36 < asdf12> wouldn't it be better if your order route asked the product route? thats what its job is, its job is to return product info
07:37 < asdf12> instead of now changing your order route to also fetch products in your order
07:37 < cloudbender> There will be times when the app closes the sockets and does some housekeeping, or times when the admin puts a security block in place.
07:37 < NuZZ> it's a simple SQL query to get such info in my mind
07:37 < asdf12> it'll be better if an order route can call the product api route internally and build a result
07:37 < groundwater> cloudbender: when housekeeping is complete, what will it do after?
07:38 < NuZZ> but you're saying, do that but once, in one place, which you can access anywhere?
07:38 < cloudbender> idle and listen ?
07:38 < asdf12> thats just a simple example
07:38 < groundwater> cloudbender: then it will have a new socket, which keeps the app open
07:38 < asdf12> because it can get messy
07:38 < cloudbender> right
07:38 < groundwater> cloudbender: think of it this way, the app only closes when there is nothing more to do
07:38 < cloudbender> I knew that.
07:38 < NuZZ> true, I can see several SQL strings being needed to be fiddled with should anything need changing
07:38 < groundwater> cloudbender: if you find its existing early, you probably made a mistake somewhere
07:39 < asdf12> an order, needs the know the user, to know the products, if theres a coupon get that too, if there's whatever else data etc.
07:39 < asdf12> while wouldnt it be simpler if you went to the order route, it'll go get the order, it doesn't handle anything else, but it can call your product route, your coupon route, your whatever other route
07:39 < asdf12> and build a working order response for it
07:40 < cloudbender> Until the server is fully staged after startup, I need to idle it a few times waiting for files to load, index rebuilds, etcetera.
07:40 < NuZZ> i see
07:40 < NuZZ> and I miniplulate this api with GET/POST vars?
07:40 < NuZZ> which is better, post or get? I feel like it doesnt matter
07:40 < NuZZ> but if it wants to be restful, i guess it does
07:40 < asdf12> idk, thats why i said thats the test, this isn't the specific use case, its mostly being able to re-use routes and go to routes internally
07:41 < asdf12> you can't do it with express
07:41 < asdf12> easily that is
07:41 < groundwater> cloudbender: i can envision a situation where setTimeout waits THEN calls some further commands, but if your setTimeout is just doing nothing, i think there's a problem
07:41 < groundwater> cloudbender: like you need to wait 5 sec for something to compile before loading it or whatever
07:41 < groundwater> cloudbender: do you have an example?
07:42 < NuZZ> I think I may be retarded  :P
07:42 < NuZZ> are we talking about db models at all?
07:42 < NuZZ> because that is something I am doing and accessing internally of course
07:43 < asdf12> i mean you guys never wrote a route in express and was like oh, i dont really want to redirect, i'd like to just call this other route... BUT tough luck
07:43 < cloudbender> I see the timeout as checking to see if service requirements have been stabilized, and checking at intervals, until all the startup requirements are satisified, then it hands off the app to the client-facing logic, sockets, etcetra.
07:43 < gildean> NuZZ: i'd say post-reqs over gets, and accompanied by a csrf-validation
07:44 < NuZZ> thx gildean 
07:44 < cloudbender> Does that make sense ?
07:44 < groundwater> cloudbender: yes, i understand
07:44 < groundwater> cloudbender: i think, avoid that pattern if you can, but if it's actuality he only pattern that works, then it works
07:44 < cloudbender> I'm new to programing as a responder to events.  It's different.
07:44 < groundwater> cloudbender: git commit; git drink a beer
07:44 < asdf12> this is a better technical way to sum up what i've been saying
07:45 < asdf12> "For example, we were trying to add batch functionality in which a JSON payload includes a list of chained endpoints, some parallel and some serial. Given the cost of round-trips in mobile, this was an important requirement. The problem was, because of Express’ middleware architecture and it’s strong coupling of the router to the node HTTP server, the only clean way of making internal API calls that truly replicate the result o
07:45 < cloudbender> lol
07:45 < asdf12> did that get cut off?
07:45 < cloudbender> yes
07:45 < asdf12> the messag
07:45 < asdf12> "The problem was, because of Express’ middleware architecture and it’s strong coupling of the router to the node HTTP server, the only clean way of making internal API calls that truly replicate the result of calling each API individually from the outside is to make an actual HTTP call into the server"
07:45 < NuZZ> that truly replicate the result o
07:45 < asdf12> "This gets real messy when using authentication and having to fake client credentials.""
07:45 <@Nexxy> if only there was some way to link everyone to the article itself!
07:45 < groundwater> cloudbender: typically non-standard use cases emerge from a clunky design. having said that, we ALL make clunky code, and clunky code isn't bad
07:45 < NuZZ> lol
07:45 <@Nexxy> some sort of... hypertext reference
07:45 < asdf12> its really long the article
07:46 < NuZZ> get out of the future nexxy
07:46 < groundwater> cloudbender: get it working, then you can look at refactoring it into something better later
07:46 <@Nexxy> but it is my home
07:46 < cloudbender> Well, the code is beutiful, but it's synchronous.
07:46 < cloudbender> beautiful even
07:46 < groundwater> cloudbender: aha! 
07:46 < cloudbender> right
07:47 < cloudbender> Asynchronous coding is entrely different,
07:47 < NuZZ> so with said api asdf12, Id have arguments to minupulate the dbquery, so that the minimum number of dbqueries occur for the info I want? That is the extent of the API correct?
07:47 < groundwater> get it working, look at it again in 3 months, you're realize all your mistakes =]
07:48 < NuZZ> I just dont like the idea of querying several times for seperate info that could be done at once, as I have seen a bit.
07:48 < groundwater> cloudbender: summary - it's prob. a smell, but it works
07:48 < cloudbender> smell ?
07:48 < NuZZ> Ive a site that is 97% faster than all sites according to google and I put most of that down to my mysql queries and minimalist PHP
07:49 < asdf12> NuZZ: its basically like i said, its crazy to me that if a user access a route that needs the user info + order + products + coupons in that order or whatever else you need to re-write 1 specific route to do what 4 other routes are doing
07:49 < groundwater> cloudbender: a 'code smell' is just code that can cause trouble for you down the road
07:49 < innociv> NuZZ, where is that test at?
07:49 < asdf12> why cant you just ask the 4 other routes and make a response from it
07:49 < NuZZ> test?
07:49 < NuZZ> oh
07:49 < NuZZ> perhaps u shud
07:49 < NuZZ> ...
07:49 < NuZZ> google it!
07:49 < groundwater> cloudbender: generally you want to eliminate smelly code
07:49 < NuZZ> haha
07:50 < cloudbender> Nuzz I use plain old javascript to sort 100,000 records in 100 miliseconds.
07:50 < NuZZ> i dont know though..
07:50 < cloudbender> on a laptop
07:50 < groundwater> cloudbender: it's a better term than "bad" code i think
07:50 < cloudbender> groundwater ok
07:50 <@Nexxy> you're coupling your request routing to your data models?
07:50 < NuZZ> I dont know what I am doing anymore!
07:50 < cloudbender> I've always wanted to code against anevent loop, so it will be fun.
07:51 < gildean> asdf12: in exprsee you write the middleware so you can just call them in succession as you want
07:51 < gildean> you could easily attach a new object to the req-object that controls the flow and push the reqs through all the middlewares
07:51 < NuZZ> kinda feel like throwing my app up on github and having u guys tell me I should kill myself due to how bad it is, but then at least I would know what to change :>
07:52 < asdf12> yes but thats very elegant, and sometimes thats not what you want
07:52 < gildean> express, even
07:52 < cloudbender> No nuzz sql was all we had for so long.
07:52 < NuZZ> sql is all I know, I want to try mongo but its so... jsony
07:52 < cloudbender> but object databases are naturally easier to deal with.
07:52 < cloudbender> it's what we use in the real world anyway
07:52 < groundwater> NuZZ: discovers the secret to productivity… create poor code… challenge coders… have coders re-write app for him 
07:53 < NuZZ> haha
07:53 < NuZZ> ??? profit
07:53 < groundwater> +1
07:54 < cloudbender> we have been forced for so long to write aps designed around sql calls
07:54 < cloudbender> object databases remove the confinement
07:54 < NuZZ> back in a bit, BSODs in my house, oh my
07:55 < asdf12> HEY maybe its just me, what do i know, i just remember getting stuck with express wanting to do that and felt like that made more sense
07:57 < cloudbender> ok, so timeout checkups until the server is fully staged, then let the com sockets govern the task scheduling, and failover back to a timeout checkup system to bring the server down after resting the database..
07:57 < cloudbender> There goes my week.
07:58 < groundwater> cloudbender: i don't 100% follow, but it's not a bad thing to let your process crash
07:58 < cloudbender> Wish I had a coup[le new computers
07:58 < cloudbender> crash gracefully.
07:58 < cloudbender> ya know, like a lady ...
07:59 < groundwater> cloudbender: fuck that, crash hard. just design the overall architecture so it doesn't matter
07:59 < cloudbender> lol
07:59 < cloudbender> I think it's time to hijack the TV as a second monitor
08:00 < groundwater> oh god
08:02 < asdf12> NuZZ: but idont think its just me, i mean take a look @ magento, they have a api that you use to make your ecommerce site
08:04 < asdf12> you can make more interesting / flexible routes this way
08:06 < asdf12> or well maybe i'm wrong about magento idk!
08:07 < asdf12> oh, im wrong they have a library, the api is external use
08:12 < asdf12> NuZZ: better with code, https://github.com/walmartlabs/hapi/blob/master/examples/batch.js#L71 goes to line #50
08:13 < NuZZ> the way I plan to do it is require '../lib/models/products' and then from there products.get { id: '11' } etc.
08:13 < asdf12> im glad hapi came aroun;d because i was the only one who was like uhhhh thisis painful in express
08:13 < asdf12> i thought* i was the only..
08:13 < asdf12> like can your router do that? because thats awesome
08:14 < NuZZ> checkin
08:14 < NuZZ> oh totally
08:14 < asdf12> you get what i mean now? that makes way more sense
08:14 < NuZZ> i just make routes and bind them to functions, no point abstracting past that imo
08:18 < NuZZ> so in that example
08:18 < NuZZ> hes making a http request 
08:18 < NuZZ> how is that not possible in express :p?
08:18 < SomeoneWeird> wat
08:18 < squeakytoy> are there any form of persistent data objects in node.js (and mysql?)
08:19 < asdf12> hes making it internally to each api end point, without a crazy chain of middleware
08:19 < asdf12> if you do it in express via middleware, then each end point needs to have at least 1 extra middleware
08:22 < asdf12> or you can do a http request locally to your server to fetch it without using a chain of middleware
08:22 < asdf12> but now you need to manage some fake credentials
08:22 < NuZZ> lol
08:23 < NuZZ> hence why I just plan to fetch an object with functions to grab this crap internally
08:24 < NuZZ> none of this needs to be external api
08:24 < gildean> i don't see why you couldn't do that while using express, but it's good that people try to build things themselves
08:24 < NuZZ> messing with http request for internal stuff seems silleh
08:24 < asdf12> gildean: i just explaiined why you cant do that with express
08:25 < asdf12> its a middleware chaining nightmare
08:25 < gildean> asdf12: you don't have to use more than one middleware for all reqs if that's what you're after
08:26 < asdf12> no in that example code, you would have to create 3 middleware, 1 for each route
08:26 < asdf12> and the last route would have 3 middlewares chaining it
08:26 < asdf12> and thats a simple example with 3 resources
08:26 < gildean> no, you wouldn't have to, there's nothing that forces you to do that
08:26 < asdf12> ...
08:26 < NuZZ> im just confuzzled :D
08:27 < NuZZ> keep going you two, i feel like there is sense to be made for each of us somewhere here
08:27 < asdf12> gildean: explain to me how you dont have to do it that way
08:27 < asdf12> how else would you do it to achieve the same result?
08:29 < gildean> asdf12: app.get('/:resourcetoget', function (req, res) { thingtoget = app.params.resourcetoget; res.whatever(thingtoget); });
08:29 < gildean> that's one option
08:29 < gildean> add some functions in between to actually do something
08:30 < asdf12> what that thing makes no sense
08:31 < asdf12> so if you make that resource end point where you do the db look up, great now how are other routes suppose to get it? they can't thus you need to create 1 additional middleware that can be shared for other routes
08:31 < asdf12> 'add some functions in between to actually do something' aka you are making more middleware
08:31 < gildean> asdf12: no, the function that actually gets the things would be just a function that you could call from anywhere
08:32 < asdf12> thats essentially a middleware, a middleware is just a function. it still gets messy compared to how hapi did it
08:33 < NuZZ> I just call require './routes/bananas' and im done with life :>
08:33 < asdf12> in fact if you had to pick, its better to go with middleware, instead of making every api end point goGetThis(); goGetThat(); goGetOtherThing();
08:34 < owen1> is that how you code defensively when sending a udp? http://hastebin.com/qunifiqodu.js
08:37 < gildean> owen1: i'd say the try/catch is unnecessary
08:38 < owen1> gildean: interesting. i think i got some funny errors on some arguments. i can't remember it now.
08:38 < owen1> so i didn't want my server to crash
08:39 < owen1> also, is it common to return event emitter from my library and also provide a way to pass a callback or is one or the other?
08:48 < asdf12> owen1: probably one or the other, but i mean you could do whatever you want with your lib
08:49 < owen1> ok
09:01 < cloudbender> I'm not getting the returned intervalId as expected ... myid = setInterval(checkstaging, 1000);
09:02 < cloudbender> I get a function reference
09:02 < cloudbender> checkstaging is the callback reference
09:03 < cloudbender> zzzzzz.....
09:04 <@Nexxy> cloudbender, it clears the same
09:05 < cloudbender> what if I have two or three timers running ?
09:05 <@Nexxy> then you reference them with different variables
09:05 < cloudbender> oh, so just pass myid
09:06 <@Nexxy> ya
09:06 < cloudbender> duh
09:06 <@Nexxy> :P
09:06 < cloudbender> ok.  See yous in the morning thanks Nexxy
09:07 < denysonique> fastman, odyniec, Mchl, przemoc: zapraszam na #node.js-pl
09:08 < denysonique> iksik: ↑
09:08 < iksik> what? :P
09:08 < denysonique> haha
09:09 < denysonique> iksik: hopefully the will join us
09:09 < denysonique> s/the/they/
09:09 < iksik> -_-
09:09 < purr> iksik: ಠ_ಠ is an IRC client/IRC client framework.
09:09 < iksik> heh
09:09 < iksik> i didn't ask ;P
09:09 < denysonique> ಠ_ಠ 
09:09 < iksik> -_-
09:09 < purr> iksik: ಠ_ಠ is an IRC client/IRC client framework.
09:09 < iksik> [;
09:31 < wao> ʇɐɥʍ
09:31 < wao> ¯L(◕‿‿◕｡)_/¯
09:31 < geNAZt> oO
09:31 < TheShaun> º¿º
09:34 < TheShaun> is there a way to convert between an array/object and json in nodejs
09:34 < geNAZt> JSON.parse ? JSON.stringify ?
09:34 < asdf12> JSON.parse , JSON.stringify
09:36 < asdf12> >> JSON.parse(JSON.stringify([1,2,3]))
09:36 < purr> asdf12: (object) [1, 2, 3]
09:36 < TheShaun> ah cool
09:36 < geNAZt> but you cannot do anything in json
09:37 < TheShaun> sending it over sockets and reading it on the other side
09:37 < geNAZt> >> JSON.stringify([1,2,3,this]);
09:37 < purr> geNAZt: (string) '[1,2,3,{"version":"3.11.10.22","console":{}}]'
09:38 < geNAZt> var o = {1: 1, 2:2}; o.x = o; JSON.stringify(o);
09:38 < geNAZt> >> var o = {1: 1, 2:2}; o.x = o; JSON.stringify(o);
09:38 < purr> geNAZt: TypeError: Converting circular structure to JSON
09:55 < asdf12> theres tons of stuff to do in json!
09:58 < asdf12> >> JSON.parse(JSON.stringify({a:1, b:1, c:1, x:1, y:1, z:1}).replace(/1/g, 2))
09:58 < purr> asdf12: (object) {a: 2, b: 2, c: 2, x: 2, y: 2, z: 2}
09:58 < asdf12> instead of setting each property
10:00 <@Nexxy> asdf12, lol
10:15 < NuZZ> lo
10:15 < NuZZ> l
10:15 < NuZZ> clevergirl
10:50 < chridal> !deleteCw last
10:51 < chridal> wrong room.
10:51 <@Nexxy> chridal, unknown command
10:51 < chridal> :D
11:28 < nanicoar> Is there a simple way to define the 'C'-part in 'MVC'?
11:29 <@Nexxy> all the crap that gets you between M and V
11:29 < nanicoar> So... ideall we don't want any 'C'?
11:29 < Siyfion> In what sense? "Controller" is pretty true to what it does!?
11:29 < nanicoar> ~ideally
11:30 <@Nexxy> I think it depends on what you're doing
11:30 < Siyfion> Yeah, you need a controller
11:30 < Siyfion> Otherwise you're wiring up your view directly to the model
11:30 < Siyfion> which is rubbish
11:30 <@Nexxy> separation of concerns is always good, but sometimes cramming things into MVC architecture is just senseless
11:31 < Siyfion> In which case, forget MVC alltogether
11:31 < Siyfion> and do it whichever way makes sense
11:31 < Siyfion> ;)
11:31 < nanicoar> I feel that C is constrained by M.
11:32 < Siyfion> Please explain
11:32 < nanicoar> That most models already define what C should be doing though 'key' names.
11:33 < Siyfion> The controller can simply expose the model then
11:33 < nanicoar> oh
11:33 < nanicoar> Yeah, access control.
11:33 < nanicoar> I keep forgetting that one. >_>
11:33 < Siyfion> but say you want to have a calculated value based on the model, thats the C's job
11:34 < Siyfion> ie. fullname -> fullname = model.first + model.last
11:34 < Siyfion> but the model has no notion of a "full name"
11:34 < geNAZt> so the C also handels joins on application level ?
11:34 < nanicoar> hmm
11:35 < Siyfion> It completely depends as to where you are applying the MVC principles
11:36 < carpii> hi, im just learning about node and express. If i create a template express app using 'express --sessions --css stylus --ejs myapp', then app.js has 'var routes = require('./routes')'.  But /routes is a directory and I cannot understand what its actually doing with that
11:36 < Siyfion> kinda hard to give an example without knowing in what context you are using it
11:36 < Siyfion> Ah ha.. okay.
11:36 < geNAZt> carpii: it loads the index.js out of the routes dir
11:36 < carpii> ahh
11:37 < carpii> always index ?  I noticed theres a user.js which is required explicitly, but index.js isnt
11:37 < Siyfion> Routes is exactly what it says on the tin; it's meant for defining routes!
11:37 < Siyfion> index.js is always the "default" included file
11:37 < geNAZt> if you give a directory into the module system it first tries to add an .js if that fails it adds a /index.js
11:37 < carpii> ok, makes sense. thanks a lot
11:38 < nanicoar> carpii, geNAZt: is that index.js the server's interpretation of Controller?
11:38 < nanicoar> I mean, express'
11:38 < geNAZt> no
11:38 < nanicoar> ah nevermind
11:38 < geNAZt> a route is the controller
11:39 < carpii> so the index.js is the view, or?
11:39 < geNAZt> no its the router
11:39 < carpii> heh ok
11:39 < Siyfion> no, the return value from the route is the view in essence
11:39 < geNAZt> which will route your request into the right controller
11:39 < geNAZt> the controller then gets the data from the models
11:39 < geNAZt> and then renders the view
11:39 < carpii> ok, think ifollow
11:40 < Siyfion> getNAZt is correct (well, that's my understanding too!)
11:40 < carpii> is there a good book for learning express and socket.io? A lot of them ive seen are out of date, or get poor reviews 
11:40 < Siyfion> So say you want a url : "/api/users" the view is the content returned
11:40 < geNAZt> well you can make it so but expressjs only forces you to render a view
11:40 < Siyfion> the controller is the route that handles "/api/users"
11:40 < geNAZt> where you get the data from is wayne
11:41 < Siyfion> and the data is the model.. either a db or whatever
11:41 < geNAZt> in most cases a db :D
11:41 < Siyfion> Could be in memory storage I guess
11:41 < Siyfion> or session..
11:41 < Siyfion> but yeah, generally speaking
11:41 < geNAZt> but you dont have to handle sessions or statics inside your controllers
11:41 < geNAZt> expressjs can do that for you
11:43 < nanicoar> Siyfion: Now it makes sense. We have one MVC on the server and one on the client.
11:43 < Siyfion> A good book? hmmm.... Node: Up and Running by O'Reilly isn't too bad
11:43 < Siyfion> Oh yeah, if you are using an MVC framework client side then sure!
11:43 < Siyfion> ie. AngularJS is MVC client-side -> NodeJS Express MVC server-side
11:44 < geNAZt> then you only need a REST api
11:44 < Siyfion> Yup! ;)
11:44 < nanicoar> oooh!
11:44 < geNAZt> http://mcavage.github.com/node-restify/
11:44 < nanicoar> Now I know why I saw a job opening on writing those.
11:44 < geNAZt> http://backbonejs.org/
11:44 < Siyfion> Well, and something to handle the static page requests
11:44 < geNAZt> nginx :D
11:45 < Siyfion> Take a look at AngularJS, EmberJS, KnockoutJS and backbone for client-side stuff
11:45 < Siyfion> All great frameworks, some I prefer more than others but... all good.
11:46 < nanicoar> Yeah, I'm looking at angular right now. I like being able to make my own XML tags. It feels very logical.
11:46 < geNAZt> urgs xml...... :O
11:46 < Siyfion> HTML do you mean?
11:46 < nanicoar> Maybe.
11:46 < Siyfion> ;)
11:46 < Siyfion> Same thing... ish
11:47 < nanicoar> Who can tell for sure anymore!
11:47 < Siyfion> But yeah, Angular is my fav. to work with
11:47 < Siyfion> but they have a very "set" way of structuring things
11:47 < Siyfion> backbone is a lot more free-form
11:47 < Siyfion> Ember is good too!
11:47 < carpii> i sometimes feel theres so many frameworks, libraries and packages that its all a bit impenetrable :(
11:48 < nanicoar> And everybody just assumes jQuery.
11:48 < Siyfion> jQuery isn't really needed with angular
11:48 < Siyfion> or for the most part
11:48 < nanicoar> *nod*
11:49 < Siyfion> if you're using jQuery heavily in angular .... your doing it wrong!
11:49 < nanicoar> There's this zepto.js thing,w chich is a4K version of Jq.
11:49 < nanicoar> ~jQ
11:49 < Siyfion> carpii: I agree... but it's also good to have a lot of choice!
11:50 < carpii> yeah true
11:50 < Siyfion> Also, be sure to check out Sugar.js as well as Underscore.js
11:50 < amurdaca> to send big files should i always use file.pipe(res)?
11:50 < Siyfion> Sugar has really done some quite impressive things!
11:51 < nanicoar> It looks legible.
11:52 < geNAZt> amurdaca: yes
11:52 < amurdaca> gotcha
11:52 < Siyfion> nanicoar: I find Sugar's syntax much more readable
11:52 < Drajwer> I have strange uv_getaddrinfo_done() segfault - my native module spawns new uv_getaddrinfo, when I call it in .js like "mycode(); console.log('wtf');" then the segfault goes. is there a decent docs about libuv (something like uvbook which is still slightly better than reading code)
11:52 < Drajwer> when I just call mycode() without console.log after it it works.
11:53 < Siyfion> Right.. time for food! See ya guys ;)
11:56 < carpii> just discovered nodemon, what a cool tool
11:57 <@mbalho> word
12:01 <@Nexxy> up
12:06 < carpii> i need to serve html files (and socket.io client js), in addition to creating a web socket server. Is it best to just have node server both http and sockets, or is it generally recommended to just serve the static files from an httpd server like nginx, leaving node just for websocket comms? 
12:06 < geNAZt> carpii: the nginx + node would better
12:07 <@Nexxy> carpii, just use node
12:07 < carpii> because of security?
12:07 < geNAZt> no cause of the load
12:07 < carpii> nexxy, what reason?
12:07 < geNAZt> nginx is faster in handling many statics
12:07 < carpii> yes good point
12:07 <@Nexxy> carpii, there's no reason to add extra complexity to your app unless you need the extra performance
12:07 < geNAZt> and if you need the application to handle then you can proxy the websocket / request to node
12:07 <@Nexxy> geNAZt likes to recommend that everyone prematurely optimize everything
12:07 < carpii> nexxy, but i wonder if embedding an httpd into my node app is doing exactly that
12:07 <@Nexxy> but node is perfectly capable of what you're doing
12:08 <@Nexxy> carpii, that's kind of what node is for
12:08 <@Nexxy> lol
12:08 < geNAZt> you can reach your goal in node
12:09 < geNAZt> but you also can reach the goal with nginx
12:09 < geNAZt> what is better depends on you need of performance
12:09 < carpii> yeah i can see both sides of the coin
12:09 < carpii> thx for the opinions
12:10 < carpii> im a long way from having to make a firm decision on it anywya, just curious :)
12:10 < geNAZt> well it can inpact you way of your server to handle things
12:10 < geNAZt> if you build up a static server in node it is more or less hard to get away from this into another system
12:11 < carpii> but ive got an embedded httpd in node right now, i think i can just swap that out for nginx without too much trouble
12:11 < carpii> given that its just serving files from one directory
12:11 < geNAZt> yes you can
12:30 < amurdaca> does make sense to use mongodb to build an ecommerce?
12:31 < amurdaca> in node of couse
12:31 < amurdaca> *course
12:31 <@Nexxy> as long as any single transaction isn't too terribly important to you
12:31 < amurdaca> or node-mysql is enough
12:31 <@Nexxy> s/enough/better/
12:32 < amurdaca> right i'll go for mysql then :) but i still don't get the application i can build with mongo
12:32 < geNAZt> i would use mariadb with the node-mysql driver
12:32 < amurdaca> just blog/forum?lol
12:32 < carpii> mongo allows for tailable cursors which mysql doesnt really support 
12:32 < mscdex> i would use mariasql with mariadb or mysql
12:32 < mscdex> :-D
12:33 < mscdex> but i'm probably biased
12:33 < carpii> i dont really like mongo much, i dont think id ever choose it where mysql would do the job
12:34 < amurdaca> carpii mysql supports cursors too (declere cursor etc open etc next prior first)
12:34 < carpii> yes but not tailable ones i think
12:34 < amurdaca> mmm what this means
12:35 < carpii> lets say you had a twitter clone, and did select * from tweets
12:35 < carpii> a tailable cursor keeps feeding you results even if more were inserted since the time you initiated the query
12:35 < carpii> but mysql will effectively snapshot it, and the cursor terminates once youve read the initial batch
12:36 < amurdaca> oh u mean mysql get only the result of the query and next insertion won't be selected?
12:36 < amurdaca> unless you do another query
12:36 < mscdex> create a trigger that executes a udf on insert that notifies your app
12:36 < mscdex> i've done that before :-D
12:36 < carpii> ugh :)
12:36 < mscdex> a little udp packet sending udf
12:36 < SomeoneWeird> use sequelize 
12:36 <@Nexxy> or, you know... write an intelligent driver for your storage backend
12:37 <@Nexxy> and emit your own damned events
12:37 <@Nexxy> whichever 
12:37 < mscdex> rewrite MyISAM?
12:37 < mscdex> :O
12:37 <@Nexxy> no.
12:37 < amurdaca> lol
12:37 < carpii> im guessing he means the mysql client library
12:37 < carpii> or whatever
12:37 <@Nexxy> she*
12:37 <@Nexxy> I mean whatever "ORM" or 'client' you're using
12:38 < carpii> how is that related to the storage engine hes choosing ?
12:38 < SomeoneWeird> DONT REINVENT THE DAMN WHEEL
12:38 <@Nexxy> you're talking about "tailing cursors"
12:38 < carpii> mysql doesnt support tailable cursors, so writing a new mysql client library still wouldnt support it
12:39 < carpii> without polling or something
12:39 <@Nexxy> lol
12:39 < carpii> you dont agree? :)
12:39 <@Nexxy> you don't understand what I'm saying
12:40 < carpii> i guess not
12:40 <@Nexxy> if users are modifying the contents of your database
12:40 <@Nexxy> your app is going to know about it
12:40 <@Nexxy> your DB doesn't need to tell it
12:41 < carpii> how does the app know records have been added whilst its working its way through a static cursor though?
12:42 < SomeoneWeird> using async omg
12:42 < SomeoneWeird> lol
12:42 <@Nexxy> sorry, I thought it would be easy to explain
12:42 <@Nexxy> I don't have time to go into it
12:42 < carpii> heh ok
12:43 < amurdaca> i'll go with postgres btw lmao
12:43 < mscdex> ew
12:43 <@Nexxy> postgres is cool
12:43 < amurdaca> yup amazing fast
12:44 <@Nexxy> I just like custom data types
12:44 < amurdaca> does node has somthing like doctrine in php? 
12:44 < amurdaca> i mean building tables from code
12:45 < amurdaca> (for this i love mongo too..no need to declare nothing upfront)
12:51 < aandy> isn't it a bit contradicting to talk about schemaless data in a table?
12:51 < aandy> i have no idea what my data looks like, but here it is in a table with headers - what
12:52 < SomeoneWeird> lols
12:52 < SomeoneWeird> yah
12:52 < amurdaca> btw there are some ways to let mongo hande transactions too
12:52 < amurdaca> nosql in general
12:56 < denysonique> amurdaca: Node has sequelize
12:56 < denysonique> an ORM for PostgreSQL (and mysql)
12:56 < denysonique> I meant 'mysuckl)
12:57 < SomeoneWeird> i bet you 'did)
12:57 < SomeoneWeird> >_>
12:57 < denysonique> Another interesting project is RethinkDB
12:57 < denysonique> Someone in here is being weird
12:57 < aandy> denysonique: i agree, but i was a bit "disappointed" in their language
12:58 < aandy> i like the premise, but querying still seems at key-value levels. at least last time i checked
12:59 < quizme> hi, can somebody recommend a good Promises/A compliant futures/promises library for in-browser use ?
12:59 < SomeoneWeird> q
13:00 < quizme> q works in-browser ?
13:00 < quizme> i thought it was a node-js kind of a deal
13:00 < aandy> yes it does
13:01 < quizme> ok cool
13:01 < quizme> that's the one i wanted to use
13:01 < quizme> i thot it was only for node
13:01 < quizme> so
13:01 < quizme> i have a situation
13:02 < quizme> can you guys plz tell me if i should use q or write my own thing
13:02 < quizme> i'll make a github pastie to show what i want to do
13:02 < aandy> sure
13:04 < quizme> https://gist.github.com/anonymous/4971394
13:04 < quizme> aandy thanks for taking a look
13:05 < aandy> for testing client side? there's http://zombie.labnotes.org/ (i'm sure there are others, it was just the first that came to mind)
13:05 < quizme> basically, I'm going to be doing a sequence of things, but then 2nd one needs to wait for an event to happen (registration of the click handler) before I can click on the logout_link
13:06 < aandy> could go along with something like https://github.com/cucumber/cucumber-js
13:07 < quizme> aandy i'm not only using it for testing
13:08 < quizme> this is just an example
13:08 < quizme> of a thing that happens in the future, and i have to wait for an event to happen before I can do the next thing.
13:08 < quizme> just wondering if this fits with q
13:09 < quizme> with q, it's like… do these things in parallel, then run the handlers in sequence, right ?
13:10 < quizme> my situation is kind of like… do step 1, then when an event happens do step 2, then after that wait for another event and do step 3…. etc.
13:12 < geNAZt> quizme: Fibres ?
13:12 < quizme> genazt: is that for node only or for chrome too?
13:13 < quizme> i just care about chrome
13:13 < geNAZt> https://github.com/laverdet/node-fibers
13:13 < geNAZt> i dont know if they work in browsers
13:13 < geNAZt> never tried
13:14 < geNAZt> but i dont think so cause they base ontop of a native module
13:14 <@Nexxy> node-fibers won't work in the browser
13:15 < geNAZt> http://mycodefixes.blogspot.de/2012/02/jquery-exploring-deferred-and-promise.html
13:17 < geNAZt> or build up a function stack and make something like a middleware pattern
13:19 < quizme> genzt: yeah that's part of the problem… the pyramid of doom that i'm trying to avoid.  
13:19 <@Nexxy> so name your functions
13:19 <@Nexxy> and compose them appropriately
13:23 < geNAZt> so easy: https://gist.github.com/geNAZt/4971464
13:23 < geNAZt> :D
13:24 < carpii>  am i right in thinking that if i have a memory array in node, and im adding items to it, but in a callback im removing items from it, i wont face a race condition because node runs in only one thread anyway ?
13:25 < quizme> nexxy: i think my main pattern of execution is like this:  do event1 (eg. $('#login').click()) , wait for response_event1 (page loads, makes ajax calls that i have no control of, registers event handlers based on the response of those ajax calls, then after all that…), then do event2, wait for response_event2, then do event3, wait for response_event3.
13:26 <@Nexxy> quizme, have you checked out http://callbackhell.com/?
13:28 < carpii> useful link, thanks
13:31 < quizme> nexxy, yes that's a syntactical part of my problem, but i'm trying to focus on the semantic part of my problem…. that is, does it make sense to use promises ?
13:31 <@Nexxy> no
13:32 < neurom> a question re http://nodejs.org/api/querystring.html: what spec does it implement?  the page fails to mention this AFAICT.  assuming it's an attempt to implement rfc3986... that spec says: "reserved      = gen-delims / sub-delims".  querystring's stringify method %-escapes all of gen-delims and *most* of sub-delims.  !'()* are left intact.  why?
13:34 < Jamiltz> hey. I'm trying to deploy two apps to nodejitsu. I understand the free plan provides one drone. Is it possible to deploy two apps on 1 drone? Cheers
13:34 <@Nexxy> Jamiltz, #nodejitsu
13:34 <@Nexxy> (and, no)
13:35 < Jamiltz> yeah sorry. thanks.
13:35 <@Nexxy> Jamiltz, you could technically bolt a bunch of applications into one
13:35 <@Nexxy> but it's not really the greatest idea
13:35 < Jamiltz> ok
14:38 < carpii> is there a way of attaching metadata to a socket object in socket.io?  Ive seen an example which sets socket.username, and it does get set, but isnt present on the next socket event
14:41 < gildean> carpii: it should be, it's still the same object you're adding properties to
14:42 < carpii> hm
14:42 < carpii> ok thanks, ill dig a bit deeper
15:02 < carpii> im such an idiot…. socket.on('disconnect', function (socket) {
15:04 < carpii> i was setting socket.username and wondering why it wasnt persisting
15:08 < nkohari> anyone have any experience with new relic for a node app?
15:44 < StephenS> Jel neko svira harmoniku ili slusa narodne pesme??
15:53 < Voting> Got a mysql related question here - http://hastebin.com/bekehaseva.coffee - Isn't startupServer1 better than startupServer in terms of being non-blocking? But it does not work. "Error: Cannot enqueue Handshake after already enqueuing a Handshake." 
15:54 < lfaraone> Is there a list I can join that just contains release / security announcements for Node? 
15:57 < carpii> voting, the first does work?
15:57 < trodrigues> lfaraone: blog feed
15:57 < Voting> carpii: seems to but it blocks for a sec, right? 
15:58 < Voting> carpii: bad node.js style, right? 
15:58 < carpii> i dont know enough about node to answer, sorry. im a mysql guy which is why i was curious 
15:58 < txdv> require.js is AMD style require?
15:59 < trodrigues> txdv: yes
16:00 < txdv> are there any implementations of the style used in node?
16:00 < trodrigues> browserify
16:01 < trodrigues> but require.js can also load commonjs modules
16:02 < Voting> Got a mysql related question here - http://hastebin.com/bekehaseva.coffee - Isn't startupServer1 better than startupServer in terms of being non-blocking? But it does not work. "Error: Cannot enqueue Handshake after already enqueuing a Handshake." 
16:04 < carpii> voting, at a guess i would say when you run the 2nd query, the first query is not yet fully deconstructed (maybe all rows are not yet retrieved?) 
16:05 < carpii> theres also some notes on node-mysql which suggest .query can actually attempt to cerate a new connction in some cases, i wonder if thats whats happening
16:26 < spion> oh dear. node: ../deps/uv/src/unix/stream.c:403: uv__write: Assertion `fd_to_send >= 0' failed.
16:27 < spion> If I try to send a socket created with net.connect(), perhaps I have to wait until the connection is established?
16:27 < geNAZt> would be better
16:32 < _pash> is it a good idea to build a website that runs fully on node?
16:32 < carpii> its a pretty generic question
16:33 < carpii> but id say not really
16:33 < _pash> what else would be required? and why? because i am looking to build something like a portal... for about 300 people. i am also learning node ant well server based website making at the same time
16:34 < DarkArgon> why not carpii?
16:34 < _pash> carpii: i am assuming the router would get insanely large... or would i use several routers?
16:35 < carpii> i gues the question is, why would you?
16:36 < DarkArgon> http://expressjs.com/applications.html
16:38 < Voting> Is felixge the mysql guy around?
16:38 < _pash> DarkArgon: if i assume correctly, on my server i would only have one node app.js running... but i could have several routers right?
16:39 < DarkArgon> if u use the cluster module u also could have multiple app.js running
16:39 < DarkArgon> to use all cores
16:40 < DarkArgon> don't know if it makes sense to have multiple routers
16:40 < _pash> DarkArgon: well the router could get insanely large no?
16:40 < gildean> for 300 users, you could run everything on a crappy singlecore laptop and have good enough performance
16:41 < DarkArgon> do you have a lot of static pages _pash?
16:42 < Voting> gildean: you know serve lots of concurrent users? 
16:43 < gildean> Voting: i'd say even if all 300 would make reqs about the same time, there wouldn't really be a problem
16:43 < Voting> Oh, crap, now that I did the experiment with startup vs. startup1, now I'm getting "Error: Cannot enqueue Handshake after already enqueuing a Handshake." all the time even after re-starting MySQL. Sigh... Can anyone help me? Not sure what I've messed up!
16:43 < _pash> DarkArgon: i pm'ed you
16:44 < Voting> http://hastebin.com/bekehaseva.coffee
16:45 < carpii> youre calling connection.connect() twice on the same object, no?
16:46 < wivlaro> i've got this problem where node is just hanging. it seems to be continuously doing garbage collection if i run with --trace_gc --trace_gc_verbose  and my setInterval is getting starved. any idea of how i can probe further?
16:46 < wivlaro> the garbage collections don't appear to be doing much amazing
16:47 < wivlaro> http://pastebin.com/VNMZQXze
16:47 < wivlaro> ad infinitum
16:55 < Voting> How do I do these debugger things? I"m totally unclear! http://nodejs.org/api/debugger.html#debugger_breakpoints 
16:56 < Voting> How do I run the debugger? http://nodejs.org/api/debugger.html#debugger_breakpoints ???
16:58 < DarkArgon> node debug ap
16:58 < skabbes> that's only the debugger client, the interface to the v8 debugger
17:06 < spion> if I kill a child process that has received a socket (handle), the handle will be destroyed even though the parent still has a reference to it?
17:07 < Voting1> skabbes: how do I use it? to I telnet into a particular port or use https://github.com/dshaw/replify or what?
17:10 < skabbes> this is probably a much better option: https://github.com/c4milo/node-webkit-agent
17:13 < Voting1> skabbes: have u used https://github.com/c4milo/node-webkit-agent ? Can I set a breakpoint and evaluate expressions? 
17:14 < Voting1> skabbes: have u used https://github.com/c4milo/node-webkit-agent ? Can I set a breakpoint and evaluate expressions? 
17:14 < skabbes> you can set breakpoints, its usually the easiest to just put a "debugger;" statement in your code
17:14 < skabbes> I'm not sure about evaluating expressions
17:15 < skabbes> contributing back to that project is probably much easier than trying to roll your own
17:16 < Voting1> skabbes: I put in debugger statements in my node program on the server side then I do soemthing to see the values of vars and the stack and stuff from inside of chrome? 
17:17 < skabbes> yep, you have to follow that tutorial on github though.  you have to send a SIGUSR2 to your process
17:17 < skabbes> and you need to make sure the debugger proxy port is open on your server
17:19 < Voting1> nice! Thanks SO much. Now I will reboot to see if that cures my problem with mysql.
17:20 < skabbes> its a bit tricky to get set up at first, but it is _totally_ worth it
17:22 < Voting1> skabbes: thansk!
17:45 -!- mode/#Node.js [+o isaacbw] by ChanServ
17:47 < Jamiltz> hey. I have used this snippet of code a couple of times http://cl.ly/image/2N1m0b1Y1G1Y. But I don't understand what process.env.PORT stands for? In which case could we have process.env.PORT declared and have port not be set to 8000.
17:47 < Jamiltz> Thanks!
17:48 < DarkArgon> PORT=3134 node app.js
17:49 < DarkArgon> i think that will set env.port
17:49 < TheAceOfHearts> I think, and someone with more knowledge please correct me if I'm wrong, you're supposed to set that up when you deploy your app. At least with appfog you can have ENV Variables
17:50 < Jamiltz> ok so I can tell the server to listen on a different port in the command line
17:50 < sshaginyan> Can someone explain to me how any kind of stream works. For example if I'm getting chunks of json on('data') from a service can I start operating on this json as soon as I get something or do I have to wait till the hole joan object is downloaded to play around with it? https://github.com/dominictarr/JSONStream
17:51 < sshaginyan> How do I make sure my packages our atomic sizes (operational sizes)
17:51 < Jamiltz> DarkArgon TheAceofHearts Thanks!
17:53 < sshaginyan> when I do on.('data', function(){}); Is the data coming in random sizes therefore fast or is it consistentant  sizes every time? 
17:54 < sshaginyan> of course considering error checking
17:54 < sshaginyan> data lost
17:54 <@isaacbw> you shouldn't assume it's the same size every time
17:56 < sshaginyan> isaacbw: So I can't start operating on a json object as soon as I get a part of it?
17:57 < sshaginyan> I can't optimize for this?
17:57 <@isaacbw> optimize for it?
17:57 < skabbes> you can't do that with the built in json parser, since you need the entire object to parse it
17:58 < sshaginyan> Can you guys take a look at this guy https://github.com/dominictarr/JSONStream
17:59 < sshaginyan> I don't know how this is useful since the bottleneck is actually getting the information
17:59 <@isaacbw> there are a few streaming parsers
17:59 <@isaacbw> and they can be useful depending on your data
18:00 < spion> Can I prevent the propagation of close events in streams?
18:01 < Voting> http://hastebin.com/gilulehuku.coffee <- turns out that startup1 does work. Do we agree that it is better style, more non-blocking than my first version where the two queries occur one after the other within a function? 
18:01 < Voting> I'm really new to node.
18:02 < spion> if i do someStream.pipe(other).pipe(third), and someStream emits "close", it will go all the way to "third" - and if "third" is a socket, it will  be closed.
18:03 < spion> or hmm, its perhaps the end event
18:03 < groundwater> sshaginyan: i must be stupid, why would you stream parse a JSON object?
18:03 < skabbes> spion: for the end event, http://nodejs.org/api/stream.html#stream_stream_pipe_destination_options
18:03 < spion> skabbes, thank you - i suck for missing that :)
18:04 < sshaginyan> groundwater: I'm getting my json from an awful api which I have no control over. 
18:04 < sshaginyan> It's huge
18:04 < groundwater> how big is huge?
18:05 < sshaginyan> groundwater: It's a very large json structure. But if I know for example that I have half of this json object already then I can start operating on it
18:05 < sshaginyan> groundwater: huge huge huge
18:05 < groundwater> so, multi-GB
18:06 < sshaginyan> 400 megs
18:06 < KevinSjoberg> I'm new to Node.js and trying to build a simple service driven by tests. Does anyone here got experience with outside-in testing (BDD) in Node.js? I would love some advice, examples (real-world applications) or similar.
18:07 < sshaginyan> I guess my question is. Is there a way to know when my json object is ready to be operated on?
18:07 < lihnuz> http://pastebin.com/XnhQy1S8 <- in this code, how do i go about to get the textRes variable accesible from outside this part of my code? 
18:07 < groundwater> sshaginyan: i guess a good stream parser would recognize when each property is complete, then deserizliae and toss the data
18:08 < sshaginyan> Does this stream parser have to be specialized for json?
18:08 < Voting> KevinSjoberg: You want to do http://en.wikipedia.org/wiki/Behavior-driven_development with your node code?
18:08 < groundwater> sshaginyan: you could pipe to a file, then load the file atomically. a file load, followed by an immediate parse *should* retain the 400MB in memory for less time 
18:09 < groundwater> sshaginyan: you're still incurring a 400MB charge, but it's in memory for a shorter duration
18:09 < sshaginyan> lihnuz: Just make a function call. Outside where?
18:09 < KevinSjoberg> Voting: Exactly.
18:09 < sshaginyan> groundwater: k
18:10 < Voting> KevinSjoberg: I'm going to need to do a great deal of that in the near future actually so we could stay in touch. 
18:10 < sshaginyan> groundwater: The thing is this is a cellphone applicatino
18:10 < Voting> KevinSjoberg: feel free to PM me.
18:10 < groundwater> KevinSjoberg: and read up on  dependency injection
18:10 < groundwater> sshaginyan: lol yikes
18:10 < sshaginyan> yes
18:10 < groundwater> sshaginyan: proxy server?
18:10 < sshaginyan> lol
18:11 < sshaginyan> If I had that must control I would change a lot of things :)
18:11 < groundwater> sshaginyan: got it
18:11 < sshaginyan> groundwater: What do you think of this guy? https://github.com/dominictarr/JSONStream
18:11 < groundwater> sshaginyan: in theory, a JSON stream parser shouldn't be hard. but hard as in NP-Hard, not "code in an hour"
18:11 < sshaginyan> lol
18:12 < groundwater> sshaginyan: try it with a small example
18:12 < sshaginyan> Is there something out there already. If not I'm getting excited :)
18:12 < lihnuz> sshaginyan: outside that particular scope, i dont want to work on the textfragment i get in that particular part of the code. I did try a fo.done() but that just says that done() is undefined. 
18:12 < groundwater> only way to be sure
18:13 < sshaginyan> lihnuz: inner can always access outer but outer can't access inner
18:14 < sshaginyan> lihnuz: Make a function on top of where you called jsdom.env and call it from where you do sys.log
18:15 < sshaginyan> groundwater: :( Simpsons did it!
18:15 < sshaginyan> https://github.com/dbrain/node-json-streamer
18:18 < sshaginyan> Thanks guys
18:18 < groundwater> i think a cool stream API would have let you go streamParser.on('node', function(nodePath, nodeAsObject){..}) where nodePath looks like /a/1/b or something, and nodeAsObject is the total parsed object, the last object emitted would be the root, complete object
18:20 < bradleymeck> mikeal: in request is form.append(x, []) supposed to fail?
18:23 < lihnuz> sshaginyan: hmm not sure i follow you there. What exactly do you mean by 'make a function on top of .. ' and how to call it later :) this might be an easy question, but im a bit perplexed by the whole syntax of node.js / javascript, started to look at it today :)
18:24 < Albert0> hi guys, I'm trying to install using the win 64 msi package and it's giving me a "The Windows Installer could not be accessed..." error.  I've confirmed I don't have a problem with my system and it's only this package that is causing the problem.  Does anyone know of a workaround? 
18:25 < AndChat|344441> Lihnuz: I just went outside I'll brb in 10.
18:27 < Faith_> Hey guys, anyone know why when I append scripts at the end of my file using jade, they don't load on the actual webpage? 
18:28 < Faith_> I'm doing something like this:
18:28 < Faith_> block scripts   script(src='/javascripts/libs/jquery-1.8.1.min.js')
18:28 <@isaacbw> my problem with mongodb is that it seems too good to be true
18:29 < Jamiltz> Hey. I deployed my app on nodejitsu. It's listening on port 8000 if process.env.PORT is not declared http://cl.ly/image/2N1m0b1Y1G1Y. Once deployed though, it will not run socket.io and access redis if I don't run the server locally as well. Any ideas?
18:30 < cloudbender> I know I can pass     function(){task()}   as a callback object, however ....
18:30 < cloudbender> is there a way to just wrap   task() so it is not invoked ?
18:30 <@isaacbw> cloudbender, what's exactly the same as tax
18:30 <@isaacbw> *task
18:30 <@isaacbw> there's no point in wrapping like that
18:30 < cloudbender> but it needs parameters, sorry
18:31 < cloudbender> task(parm1)
18:31 <@isaacbw> oh
18:32 < cloudbender>  would (task(parm1)) or {task(parm1)} work ?
18:32 < cloudbender> I'm trying to avoid having two functions on the stack
18:32 <@isaacbw> I'm not sure what you're trying to do, but function() {task(args)} would work
18:32 <@isaacbw> as a pattern
18:32 <@isaacbw> don't worry about that
18:33 < cloudbender> ?me worries
18:33 <@isaacbw> lol
18:33 <@isaacbw> go use fortran
18:33 < cloudbender> lol I love fortran
18:33 < cloudbender> I write dll's in fortran
18:33  * mscdex shakes a fist at legacy languages
18:33 < cloudbender> fortran is a fully current language
18:34 <@isaacbw> here's a closure thing I wrote recently: http://hastebin.com/guyameneha.js
18:34 <@isaacbw> yay closures
18:35 < cloudbender> watched 'house of the flying daggers' last night.
18:36 < cloudbender> trolls be in channel
18:37 <@isaacbw> hey mscdex, have you run into IMAP requests stalling and taking a very long time to respond, usually requiring the request to be sent again?
18:38 < mscdex> no?
18:38 <@isaacbw> hrm :(
18:39 < mscdex> i don't use imap myself actually
18:40 <@isaacbw> oh, you just like implmenting RFCs? :P
18:40 <@isaacbw> *implementing
18:40 < mscdex> well, protocols in general
18:41 < mscdex> but it's not always the case that i don't utilize them
18:44 < skabbes> mscdex, if you like a challenge, give amqp a go
18:45 < mscdex> that's already been done and i don't have a use for amqp at the moment
18:47 < skabbes> it _works_ but its not exactly the prettiest code / api
18:48 <@isaacbw> I wrote a half-finished driver for cassandra's cql3
18:48 <@isaacbw> it's missing support for most non-JS types
18:48 <@isaacbw> and then I realized I didn't want to use cassandra
18:49 < skabbes> ya, its a little bit demotivating trying to write something you don't use
18:49 <@isaacbw> I might go back to it later because cassandra is so cool, but for now I would just be wasting my time 
18:50 <@isaacbw> cassandra has been changing a lot recently
19:03 < sshaginyan> lihnuz: Here it is http://hastebin.com/qasopilupu.coffee
19:03 < sshaginyan> Sorry I had to get something outside
19:06 < sshaginyan> Does anyone here work at joyent?
19:06 -!- mode/#Node.js [+o isaacbw] by ChanServ
19:06 <@isaacbw> mscdex, I think it's just my shitty internet connection actually
19:08 < niggler> sshaginyan isaacs does
19:09 < sshaginyan> niggler: And where is the gangsta?
19:09 < niggler> its sunday, tomorrow is a federal holiday
19:10 < sshaginyan> Oh sanp
19:10 < niggler> i dont blame him for not being here
19:10 < kurd_debuggr> no its not
19:10 < niggler> today is sunday in the US
19:10 <@isaacbw> what country
19:10 < sshaginyan> niggler: Well it should have showed some determination.
19:10 <@isaacbw> where is tomorrow a federal holiday
19:10 < sshaginyan> jk
19:10 < kurd_debuggr> US, President's dat
19:11 < niggler> tomorrow is president's day isaacbw
19:11 <@isaacbw> wutwut
19:11 <@isaacbw> no one tells me anything
19:11 < niggler> google "president's day 2013"
19:11 < lihnuz> sshaginyan: ah.. thank you :)
19:11 < kurd_debuggr> federals only tho
19:11 < niggler> and wolfram alpha says "Monday, February 18, 2013"
19:11 < niggler> banks closed too
19:11 < niggler> markets are closed
19:11 < sshaginyan> lihnuz: You are very welcome 
19:11 < niggler> *us markets are closed
19:11 < niggler> *us equities markets are closed
19:11 <@isaacbw> I'm in the US, I just don't pay attention to anything that's happening anywhere
19:12 < niggler> blargh
19:12 < niggler> lol youd pay attention if it were a business holiday isaacbw
19:12 <@isaacbw> heh
19:12 < sshaginyan> Na isaacbw  is just part of the tea party movement that's all
19:12 <@isaacbw> president's day? 
19:12 <@isaacbw> what
19:12 < niggler> the tea party should be enoying this holiday
19:13 <@isaacbw> man, is the tea party still a thing
19:13 < niggler> its washington's birthday
19:13 < niggler> the OG
19:13 <@isaacbw> I thought everyone realized they were crazy
19:13 < niggler> isaacbw did you know they had a "tea party response to the republican response to the state of the union" this year
19:13 < niggler> and it was rand paul
19:13 <@isaacbw> oh yea, I heard that
19:13 <@isaacbw> he's crazier than most
19:13 < niggler> the only channel to cover it, of course, was cnn
19:14 < niggler> to be fair, he did try to filibuster the patriot act
19:14 < niggler> so i don't consider him the same type of looney as the "get the government out of my medicare"
19:14 <@isaacbw> he's just a "government sucks" guy
19:15 <@isaacbw> he and ron paul are at least consistent
19:17 < Orbitrix> ron paul: Consistent enough to switch parties entirely for political gain
19:17 < niggler> the parties themselves have inconsistent ideologies
19:18 < niggler> then there's "legitimate rape" -- i really wish it were a joke
19:20 < niggler> what editors do people use?
19:21 <@isaacbw> emacs 4 lyfe
19:21 < niggler> does it give you completion and other goodies?
19:21 < sshaginyan> no no no no no
19:21 < sshaginyan> isaacbw: no
19:21 <@isaacbw> niggler, completion is for bums
19:21 < sshaginyan> niggler: sublime
19:21 < sshaginyan> 2
19:21 < carpii> bbedit: usability is for bums :/
19:21 < niggler> i use vi and i grow tired of typing 'prototype'
19:22 < sshaginyan> sublime textedit 2
19:22 < carpii> yeah im moving more towards sublime too, not yet got there fully
19:22 <@isaacbw> I type really quickly though
19:22 < carpii> the package manager is really nice :)
19:22 <@isaacbw> almost as fast as autoomplete woudl be
19:22 <@isaacbw> lol
19:22 <@isaacbw> man
19:22 < niggler> do either of those have a command line version?
19:22 < carpii> command line, or terminal?
19:22 < sshaginyan> Sometimes it's good for everyone to drink the same kool aid flavor of sublime textedit 2
19:22 < niggler> running in the terminal
19:23 < niggler> TUI i guess is the right term carpii
19:23 < carpii> not afaik
19:23 < carpii> but surely theres addons for vim you can get to make your life easier?
19:23 <@isaacbw> I find autocomplete just encourages laziness
19:23 < carpii> my freind raves about it, but i cant face the learning curve
19:23 <@isaacbw> and hinders your ability to get used to an API
19:23 < carpii> yeah i dont use it either
19:23 < asdf12> autocomplete isn't smart in sublime,so that bugs me, im sure theres a plugin though
19:23 < carpii> its the first thing i turn off when i used to use bloated windows ide's :)
19:24 < niggler> i had to use visual studio recently, and despite all of the problems i gotta say that it was nice not having to type all kinds of stuff
19:24 < asdf12> auto complete is good, saves typing whattttt
19:24 <@isaacbw> unless you're using Java or something like that
19:24 < sshaginyan> There comes a point where you'll take a longer time configuring your .emacs / vim (sucks) and not be productive in writing code. Let me ask you something. Does a text editor change the way write code?
19:24 <@isaacbw> developing with Java and no autocomplete would be painful
19:24 <@isaacbw> so verbose...
19:24 < owen1> I want to run a bash script that deploy my project to a few remote hosts.  In that script I have a few ssh commands like: ssh dev.foo.com "yum install xyz".  I want to use child_process.spawn and not child_process.exec so I can stream the results. someone told me that 'spawn' is not executing the procces within a shell and if I want to do that I can use 'bash -c'.  unfortunately I don't understand what
19:24 < owen1> 'within a shell' means and 'man bash' didn't help as well.
19:24 < asdf12> plus it lets you know what methods a library has, which saves look up
19:24 <@isaacbw> sshaginyan, yes?
19:24 < sshaginyan> NO!
19:24 <@isaacbw> yes
19:25 < sshaginyan> no
19:25 < sshaginyan> I'm used emacs for a very long time
19:25 < sshaginyan> I've*
19:25 < niggler> owen1 are you familiar with python?
19:25 < sshaginyan> configuring it setting it up auto complete cedet is all a no
19:26 < sshaginyan> unless your working at cisco and have to use a command line editor by all means go for it. But, other than that don't use a command line text editor. Now that does not mean use netbeans or eclipse
19:27 < owen1> niggler: ruby
19:27 < sshaginyan> bbedit, sublime 2, notepad++, text mate are all fine
19:28 < niggler> owen1 basically, the shell parses the command line arguments (so globs like cat * work properly) and handles other features like redirects (> blah) and pipes (| blah).  To get those features you have to run it as if it were a shell command (using bash -c).
19:29 < niggler> but what exactly are you trying to do
19:30 < owen1> niggler: i try to scp a yum file from my server to a few hosts, and run the installation of this file on those hosts.
19:30 < owen1> niggler: scp, ssh etc
19:31 < niggler> do you need the results as they come in or at the end?
19:31 < niggler> yeah you need to go through the shell to expand filenames
19:33 < niggler> kinda OT but are there any mac people here?
19:33 < owen1> niggler: so shell has some features that are not available without 'shell'. cool. where can i read about that? and in the node context, do i run spawn("bash" ['c', 'my-script'sh']) ?
19:33 < niggler> i want to resize a bootcamp partition
19:34 < niggler> yeah owen1
19:34 < niggler> if you want to try it on the shell directly owen1: $ bash -c "ls -artl | head"
19:35 < owen1> niggler: how come that bash -c "ls -artl | head"  is the same as ls -artl | head  (at least on my mac) ?
19:37 < niggler> its supposed to be owen1
19:38 < niggler> if you don't put it in quotes (meaning, if you dont put the whole command as a single argument) you get a different output
19:39 < owen1> niggler: if the 2 are the same, what's the point of adding bash -c ? or maybe since i am in my terminal on a mac ?
19:41 < niggler> owen1 because by default the process isn't run within a shell
19:42 < niggler> when you run a command within a bash terminal, it is run within a shell
19:42 < niggler> so typing the command is the same as using bash -c
19:42 < niggler> but in any other context, the default is not to run the process within the shell
19:43 < owen1> niggler: ok. so when i run a script with ./my-script.sh it is not running within the shell, and i'll have to run it like : 'bash -c ./my-script.sh'
19:44 < niggler> first confirm that works
19:45 < niggler> also can you check if the script is executable
19:47 < Amadiro> Hey. Is there a way to do a conditional/typed catch in node, or are only uncoditional catch clauses supported?
19:47 < owen1> niggler: cool. thanks a lot
19:47 < niggler> owen1 if you put a proper shebang line in the script, it should work without any magic
19:48 < owen1> niggler: oh
19:48 < owen1> niggler: i have #!/bin/bash
19:49 < niggler> is the script executable?
19:49 < owen1> niggler: yes
19:49 < niggler> and just running child_process.spawn('./script.sh') is causing problems?
19:50 < owen1> niggler: there is no problem. i was just curious about 'running in a shell' option since .exec is running in a shell but .spawn is not.
19:53 < owen1> i am curious why would the api be different
19:54 < niggler> owen1 youd have to ask the person who designed that api
19:55 < carl_> Does anyone know the best way of passing data from a jquery function to my angular scope (in the same page)
19:55 <@isaacbw> #angularjs
19:58 < carl_> Does anyone know the best way of passing data from a jquery function to my angular scope (in the same page)
19:58 <@isaacbw> carl_, this is not the channel for that
19:59 < carl_> ... with an server ased on node
19:59 <@isaacbw> still, ask in #angularjs
19:59 < carl_> #angularjs is basically dead
20:00 < niggler> you are using jquery and angularjs in node?
20:00 < StephenS> Ill be high as fu
20:00 <@isaacbw> niggler, he means he's serving an angular app from node
20:00 < StephenS> niggler, change nickname
20:00 < StephenS> Some 
20:00 < niggler> right, and the jquery-angularjs connection happens on the browser side
20:00 < StephenS> people will find it offensive
20:00 < carl_> sorry for disturbing just wanted a quick answer to an presumably easy question
20:01 < niggler> lol StephenS
20:01 < StephenS> :)
20:01 <@isaacbw> then ask in the correct channel carl_. And I know for a fact that it isn't dead
20:01 < thewanderer1> hi. I'm trying to check if a word entered by the user into node.js exists. my problem is this: the whole word database (simple hash table, {word1: true, word2: true ... }) takes 600MB of RAM. any ideas?
20:02 < thewanderer1> this is for about 3.5m words
20:02 < niggler> thewanderer1 have you tried a proper key-value store like redis
20:03 < thewanderer1> well, that is an idea
20:03 < thewanderer1> I have Mongo installed already, I'll try that first I think
20:04 < skabbes> make sure to add an index :)
20:05 <@isaacbw> It isn't a great use for mongo
20:05 <@isaacbw> it's just a set
20:05 <@isaacbw> http://redis.io/commands#set
20:07 <@isaacbw> thewanderer1 ^^
20:08 < thewanderer1> I was kind of hoping for a "native" in-process set instead, to avoid a dependency on a database service... I'll try the redis and see
20:10 < skabbes> sorted array and binary search would use a lot less memory than on object, at the expense of lookup time
20:10 <@isaacbw> thewanderer1, wait for es6
20:11 <@isaacbw> redis is pretty light though. Mongo would be much more of a resource investment
20:12 < thewanderer1> skabbes, well, from what I can see, I have 3 million words, and it takes about 600MB - that would be some 200B / word... would an array be much more efficient? I thought array keys were just hash keys as well...
20:12 < skabbes> if you memory profile objects vs array, there is a bit of an overhead for object, can't speak to the percentages
20:15 < skabbes> don't' know how much your trying to squeeze, my vote if for redis as well however
20:17 < thewanderer1> mostly, I'm trying to limit memory usage... for example, if I was a rich text editor (OO.o Writer for example), I wouldn't use 600MB just for spell checking, would I?
20:18 < skabbes> thewanderer1: if you can stand false positives, http://en.wikipedia.org/wiki/Bloom_filter
20:18 < WhistlesGoWoo> Anyone know of any js library to allow me to trim frames from an mp3? I'm currently relying on sox to do this.
20:19 < skabbes> thewanderer1: and perhaps a trie-ish data structure if your words all happen to be similar
20:19 < thewanderer1> skabbes, actually, it's for a Scrabble-type game. not sure if I want to go that way...
20:25 < thewanderer1> I've started populating Redis with the words, will see how efficient it turns out to be
20:25 < skabbes> you will be pleasantly surprised
20:27 < thewanderer1> it's down to 312MB RES
20:27 < thewanderer1> I've just realized that text editors which do spell checking must be magical :P
20:28 < skabbes> you'd need to design a data structure specific to your problem space I think, spell checking has has a long time to become very efficient
20:33 < thewanderer1> thanks for the suggestions, guys - for now, I'll settle for redis as the simplest solution, as I might not really need any greater efficiency... sacrificing 300MB for a game doesn't sound too bad :)
20:37 < ins0mnia> npm is down??
20:38 < thewanderer1> ins0mnia, worked for me 10 minutes ago when installing redis...
20:38 < ins0mnia> thewanderer1: hmmm ok.. thanks, gonna look into this maybe it's at my end this time
20:50 < cloudbender> is there a simple way to check the stack swell ?
20:50 < cloudbender> height, consumption, bloatedness, whatever.
20:51 < cloudbender> count ...
20:51 < cloudbender> weight...
20:51 < cloudbender> something.
20:51 < cloudbender> anything.
20:52 < cloudbender> << taps microphone ... ' hello, is this thing on ? '
20:52 < carpii> youre breaking up
20:52 < cloudbender> lol
20:53 < cloudbender> ... as carpii krinkles a potato chip bag
20:53 < carpii> hehe
20:54 < Voting> socket.io question!!!!!!!!!!!!!  http://hastebin.com/vikivipomo.js <- why does it work when I set it up to get back my event on line 11 but not on line 39 or 46. 
20:54 < Voting> isaacbw: ?
20:55 <@isaacbw> yes?
20:55 < Voting> asdf12: ?
20:55 < Voting> isaacbw: socket.io question!!!!!!!!!!!!!  http://hastebin.com/vikivipomo.js <- why does it work when I set it up to get back my event on line 11 but not on line 39 or 46.  ? asdf12? 
20:55 <@isaacbw> just ask the room in general
20:55 < Voting> ok
20:55 < Voting> room?
20:55 < carpii> plus he can see your question from 2 secs ago ;)
20:55 <@isaacbw> er, channel
20:56 < carpii> socket.on('r', function(data) {D1 = data});
20:56 < carpii> whats the purpose of this?
20:56 < Voting> carpii: just to prove to myself I've got the data back.
20:57 < carpii> why would you not just define the 'on' handler with the otehrs?
20:57 < Voting> I wanted to expose an API like on line 38
20:57 < carpii> instead of everytime it gets a news event
20:57 < Voting> carpii: where you could provide a fn which gets the data.
20:58 < Voting> carpii: yes, we have a work around but I thought it would be clean to provide an API where you give me a fn that I had the data to when it comes back. Why can't I get that working?
20:59 < Voting> Like on line 39.
21:00 < carpii> what aspect of it isnt working?
21:00 < carpii> cos im staring at this code and tbh
21:00 < carpii> ive no idea what youre tryna do 
21:00 < Voting> carpii: I don't get the data when I do it on line 32 but I do when I do it on line 11.
21:01 < Voting> I'm just trying to have an API where the user provides a call back function.
21:02 < Voting> carpii: I'm trying to reduce global stuff. I'm just trying to expose an API where the user provides a call back function.
21:04 < carpii> why not 
21:04 < carpii> why not abstract the user function yourself, and call it in your own on("r" handler 
21:05 < carpii> rather than the user providing a socket event handler directly
21:06 < Voting> carpii: yes, I could have a function that calls the user-supplied function. I suppose that is what I'll do. Like to know why what I have does not work. 
21:07 < carpii> what is it youre expecting to happen on line 32 ?
21:07 < carpii> D1 becomes assigned ?
21:08 < carpii> actually, i need to resist the temptation to help other ppl, sorry
21:08 < carpii> ive got mah own problems to solve right now :)
21:21 < jeturcotte> maybe this is a question more appropriate to a github channel if there is one; but i am laying the groundwork now for a node.js project, and find myself stickign entire node-modules stuff up with my project into github; is this normal or do more sophisticated users have ways of avoiding storing these ?
21:21 <@isaacbw> .gitignore file
21:21 <@isaacbw> just put "node_modules" in it
21:23 <@isaacbw> I'm been so busy this week that I look at things I did on Monday and they feel like things I did a month ago
21:27 < carpii> ive been coding for 14 hours non stop
21:27 < carpii> gone from 'learn abit about node' on my todo list
21:27 < carpii> to having a half decent chatroom server and client, with web API authentication :)
21:29 < someprimetime_> you using any middleware?
21:29 <@isaacbw> has anyone here gone through ycombinator?
21:29 <@isaacbw> or another incubator
21:29 < jeturcotte> thanks for the .gitignore tip; is there, per chance, some kind of scripting SOP or file that can be read (say, if someone downloads this repository) that will go out and npm install the dependancies automagically without having to waste space storing something that's already stored elsewhere
21:29 < niggler> fuck incubators
21:29 < someprimetime_> incubators are a waste of time imo. i'd rather not give up equity for something i can do myself
21:29 <@isaacbw> jeturcotte, just use a package.json file so they can 'npm install'
21:30 < someprimetime_> what do they really give you aside from some crappy press coverage and "introductions" to people
21:30 < someprimetime_> it's all a big circle jerk
21:30 < jeturcotte> righto; will do thanks
21:30 < niggler> a century ago they made sense
21:30 < that4chanwolf> Question: I'm trying to download files with request, and it seems to screw up on things like torrent files or isos or anything that isn't plain utf8 text. Doing request("http://cdimage.debian.org/debian-cd/6.0.6/amd64/bt-cd/debian-6.0.6-amd64-netinst.iso.torrent").pipe(fs.createWriteStream('/tmp/test.torrent')) always messes up. Is there an easier way to download binary files or am I just doing something wrong?
21:30 < carpii> someprimetime, middlware as in?
21:30 < niggler> nowadays there's too much capital chasing too few opportunities
21:31 < niggler> carpii connectjs
21:31 < jeturcotte> hmm… well, capital general likes 'safe bets' and so, via that attitude, may have starved out innovation
21:31 < someprimetime_> carpii: express
21:31 < someprimetime_> or yeah connect
21:31 < jeturcotte> and without that innovation, there's nothing to bet on anyways
21:31 < carpii> socket.io, so i guess im using connect yes
21:31 < asdf12> investors like safe bets? heh
21:31 < asdf12> when?
21:31 < carpii> and express too, but im not really utilising that properly yet
21:31 < someprimetime_> word
21:31 < niggler> well that's not true jeturcotte the VC game is in finding other suckers to hold the bag
21:32 < someprimetime_> have you used connect-flash at all yet or no?
21:32 < someprimetime_> it's for session flash messages
21:32 < carpii> not that i know of. ive still a lot to learn i guess :)
21:32 < niggler> asdf12 investors like free money like the fed primary dealer arbitrae
21:32 < carpii> but part of the urgency is my existing flash chatrooms are screwed, because of an adobe flash update that everyones installed
21:32 < someprimetime_> it was in express 2.x or something and then taken out and then someone forked it and made it its own module called connect-flash
21:32 < someprimetime_> which i'm currently using but ran into an issue
21:33 < someprimetime_> so i thought i'd take a shot in the dark to see if you had played with it
21:33 < carpii> nah im still very noob, sorry
21:33 < carpii> less than 1 day using node
21:33 < someprimetime_> yeah i've only been using it for about a month myself.
21:45 < cloudbender> Wathed 'Thor' last night.  The 'destroyer' was well crafted, as was the 'bridge'.
21:46 < cloudbender> plausible
21:47 < cloudbender> *watched
21:47 -!- mode/#Node.js [+o isaacbw] by ChanServ
21:50 < AviMarcus> carpii, did you figure out how to structure your app?
21:51 < carpii> not particularly no :(
21:51 < carpii> but i realised i was screwing around with express so much, and actually i dont need to because mostly its socket.io comms
21:51 < carpii> rather than routes etc
21:54 < elliottcable> When using child_process.spawn and the {env: ...} option,
21:54 < elliottcable> what's a quick way to add a single environment variable, while copying the entire parent environment?
21:54 -!- mode/#Node.js [+o isaacbw] by ChanServ
21:55 < MI61> joyent/libuv: indutny created branch feature-accept-thread - http://git.io/8usNew
21:56 < carpii> elliot, could you maybe grab process.env and override it ?
21:58 < elliottcable> What's that alternative to underscore.js that's actively maintained, and includes some bugfixes and performance enhancements?
22:00 < AAA_awright> elliottcable: What does underscore do that isn't already built into ECMAScript?
22:00 < cainus> hey all... does anyone have any suggestions for ensuring a stream is handled in the original order?  It seems that the events for it are fired in order, but what if you only want the second handler to start when the first has finished?  locks?  pause/resume?
22:00 < elliottcable> AAA_awright ⑊ At the moment, I just want _.clone() without having to write it.
22:01 < cainus> elliottcable, lodash
22:01 < AAA_awright> elliottcable: What are you looking to do exactly? There's Object.create, or just copy it yourself
22:02 < elliottcable> AAA_awright ⑊ I'm very familiar.
22:02 < elliottcable> AAA_awright ⑊ Looking for an actual shallow-copy, not inheritance.
22:02 < elliottcable> Thanks, cainus
22:03 < carpii> underscore.js was updated as recently as jan 30th 2013.
22:03 < AAA_awright> elliottcable: That's not inheritance, that's just a prototype, if you're not going to be modifying the base object (or if you want the modifications to show through), that's FAR faster
22:03 < elliottcable> AAA_awright ⑊ “Just a prototype?” It's inheritance.
22:03 < AAA_awright> It makes a new object and sets the [[Prototype]]
22:04 < AAA_awright> elliottcable: Even if it was "inheritance" how would that hurt you?
22:04 < AAA_awright> It's "copy-on-write" is what it is
22:04 < elliottcable> AAA_awright ⑊ And, more importantly, I know what I'm doing. I'm passing an object (a copy of process.env, with a new key) to client code (child_process.spawn) that's going to enumerate properties on the object passed (treating it as a K/V dictionary). I need all of the existing environment variables, without modifying process.env for the current process.
22:05 < AAA_awright> You realize process.env doesn't have the same semantics as Object?
22:05 < elliottcable> Oh? And how's that?
22:05 < AAA_awright> It's prototype is completely empoty
22:05 < elliottcable> Neat. Still doesn't help me copy it easily.
22:06 < carpii> you could enumerate the keys i guess?
22:06 < elliottcable> got a link to docs on that? Doesn't mention it in the nodejs.org docs, last I checked.
22:06 < elliottcable> or the relevant section of the source?
22:06 < elliottcable> cainus ⑊ Yeah, hence _.clone(), which is exactly the key-enumerating shallow-copy that I want.
22:07 < AAA_awright> > process.eng.toString
22:07 < AAA_awright> TypeError: Cannot read property 'toString' of undefined
22:07 < AAA_awright> bah
22:07 < AAA_awright> > process.env.toString
22:07 < AAA_awright> undefined
22:10 < cainus> pretty sure he just wants a pre-baked for..in with hasOwnProperty, so none of that is a problem
22:11 < AAA_awright> elliottcable: You can use Object.create with child_process.spawn btw
22:13 < elliottcable> cainus ⑊ that, exactly. Writing a cakefile, don't want to add unnecessary code and confusion; rather install another module than write extra code in this file.
22:13 < elliottcable> less lines of code, more clarity, and more brevity are for the best here
22:13 < AAA_awright> > var newEnv = Object.create(process.env);
22:13 < AAA_awright> > newEnv.newVar = 'The value';
22:14 < AAA_awright> > var child = require('child_process').spawn'('...', [], {env:newEnv})
22:14 < AAA_awright> Try that
22:14 < carpii> can someone explain how socket.io namespaces differ from rooms ? 
22:16 < AAA_awright> elliottcable: That should work ^
22:16 < elliottcable> I'm quite surprised that works!
22:16 < elliottcable> I wouldn't imagine that spawn() includes parent-properties
22:17 < elliottcable> I'll try it in a bit. Lemme see if I can reduce it into a CoffeeScript one-liner.
22:19 < AAA_awright> for(var x in obj) iterates over the prototype, too, which is why you use Object.getKeys() or Object.prototype.hasOwnProperty.call if you want to exclude them
22:19 < AAA_awright> Lots of people don't like that for some reason, but that actually is a very useful default setting
22:20 < elliottcable> Yes. I know this. (=
22:21 < elliottcable> AAA_awright ⑊ I get the feeling you don't remember me.
22:21 < AAA_awright> elliottcable: 900 or so other people may not so bear out my beginner explainations :)
22:22 < niggler> lol
22:22 < elliottcable> Anybody know of something like #tap in Ruby for JavaScript? Does Node, Underscore, or CoffeeScript provide a built-in tool with a similar purpose?
22:22 < zomg> elliottcable: what does tap do?
22:23 < niggler> zomg it taps
22:23 < zomg> no shit :P
22:23 < carpii> Yields x to the block, and then returns x. The primary purpose of this method is to “tap into” a method chain, in order to perform operations on intermediate results within the chain.
22:23 < elliottcable> just a quick way to preform operations on an object in-line, without caring about the results of that.
22:24 < niggler> closures don't automatically return the result of the last operation
22:24 < elliottcable> if foo.bar() results in the result of bar(), then I'm looking for a way for it to easily result in foo instead.
22:24 < elliottcable> niggler ⑊ I'm using CoffeeScript at the moment, to my immense distaste, so they actually do.
22:24 < zomg> elliottcable: ah right, so it's kinda like coverting a method on the object into one which returns `this` instead of whatever it normally returns?
22:24 < niggler> hahahahaha fuck coffeescript
22:25 < elliottcable> zomg ⑊ well, not exactly. That's a slightly more useful abstraction over tap itself, something I myself have used often (calling a method and returning the owner thereof afterwards)
22:25 < zomg> elliottcable: underscore has _.tap which seems to behave like that
22:25 < elliottcable> zomg ⑊ ... don't know why I didn't look for that first. >,<
22:25 < elliottcable> zomg ⑊ thanks <3
22:25 < mjsx> is there some way to get a raw EventEmitter object?
22:26 < mjsx> "new require('events').EventEmitter()" is undefined
22:27 < elliottcable> mjsx ⑊ the idiomatic pattern is something like util.inherits(MyEmitter, EventEmitter)
22:27 < elliottcable> which I'm not sure answers your question ... what're you looking to do?
22:27 < niggler> mjsx new (require('events').EventEmitter)()
22:27 < shesek> mjsx, try `new (require('events').EventEmitter)`
22:28  * niggler calls jinx on shesek
22:28 < shesek> ah, didn't notice niggler already said that
22:28 < shesek> sorry :)
22:28 < niggler> you owe me a coke shesek
22:28 < AAA_awright> I believe your syntax is equivelant to (new require('events')).EventEmitter()
22:28 < elliottcable> don't need the parens at all, do you?
22:28 < elliottcable> `new require('events').EventEmitter`
22:28 < shesek> mjsx, tho I'd recommend to group all your require() calls in the beginning of the file
22:28 < elliottcable> new is already an invocation; the parens are optional
22:28 < niggler>  new has higher precedence
22:29 < shesek> mjr84, and not have them all over your code
22:29 < niggler> order of precedence is
22:29 < niggler> .
22:29 < niggler> []
22:29 < shesek> elliottcable, that's `(new require('events')).EventEmitter`
22:29 < niggler> new
22:29 < niggler> then ()
22:29 < elliottcable> ick. you're right.
22:29 < shesek> the parens after the EventEmitter are optional, tho
22:30 < elliottcable> oh, nope
22:30 < shesek> new (require('events').EventEmitter)() <- optional
22:30 < niggler> the right way to remember this
22:30 < elliottcable> >> var f = {p: function(){ console.log('whee') }}}; new f.p
22:30 < purr> elliottcable: SyntaxError: Unexpected token }
22:30 < niggler> is that new has higher precedence
22:30 < elliottcable> >> var f = {p: function(){ console.log('whee') }}; new f.p
22:30 < purr> elliottcable: (object) {}; Console: 'whee'
22:30 < mjsx> argh i'm an idiot, yes it works without the parens
22:31 < elliottcable> mjsx ⑊ I'd go with what they said; it's more idiomatic.
22:31 < shesek> elliottcable, `new f.p` works fine; `new f().p` doesn't
22:31 < elliottcable> shesek ⑊ ah, yes. I'm sorry, forgot he was requiring.
22:32 < carpii> when i send 100k to socket.io its recieved fully by the server but the client socket subsequently disconnects with chrome websocket inspector reporting 'Connection Close (opecode 8, mask).  Anyone know why this would be?
22:34 < mjsx> shesek: btw, why do you recommend grouping require() calls at the beginning of the file?  is there a performance reason, or it's just neater?
22:35 < shesek> mjsx, I prefer to have the full list of required modules/files grouped in one place, so I can easily tell what each script is depended on
22:35 < shesek> I think its better a practice for maintainability
22:35 < shesek> s/better a/a better
22:37 -!- mode/#Node.js [+o isaacbw] by ChanServ
22:42 < asdf12> la dee da rewriting codeeeeee
22:43 < elliottcable> la dee da
22:46 < carpii> cant beat a good old rewrite-a-thon
22:52 < mjsx> hrm, there is a difference between "new require('events').EventEmitter()" and "new require('http').Server()"
22:52 < mjsx> new require('events').EventEmitter() -> undefined
22:52 < mjsx> new require('http').Server() -> server object
23:09 < jonathanmh> Hi, I'm looking for the npm module publishing guide or something like that. I wrote something super simple and would like to see if I can put it on npm
23:12 < asdf12> sosososo
23:14 < asdf12> blah.with(x).options({stuff:1}).run(y, function() {....}) or blah(x, y, {stuff:1}, function() {....}) ?
23:14 < alejandromg_> jonathanmh: probably the only command that you need is 'npm publish' see -> 'npm help publish'
23:14 < asdf12> which do you guysprefer
23:15 < elliottcable> asdf12 ⑊ allow for both.
23:15 < TheAceOfHearts> asdf12: first one 
23:15 < asdf12> i was thinking bioth, but i felt that might get confusing having two apis that do the same thing
23:15 < TheAceOfHearts> mongoose lets you do both
23:17 < jonathanmh> alejandromg_: thank you! would you talk a look if I scrambled together is even valuable too? I'm pretty new to node
23:18 < alejandromg_> jonathanmh: sorry, i'm not following you
23:18 < jonathanmh> alejandromg_: ok, I wrote this little script: http://jonathanmh.com/automate-mobile-testing-phantom-js/ but I don't want to spam npm with my inferior code
23:19 < alejandromg_> jonathanmh: npm is for everybody no restrictions :)
23:20 < jonathanmh> okay, then I'll put some more work into it and publish it, thanks :D
23:20 < alejandromg_> jonathanmh: np
23:34 < danneu> quit
23:35 < asdf12> what makes a calzone so good
23:44 < asdf12> github is down!
23:44 < amurdaca> yup
23:45 < AAA_awright> Things need to stop going down
23:45 < Lorentz> asdf12: it's a gigantic pizza pocket?
23:45 < Lorentz> how can calzone not be good
23:45 < Lorentz> or is this some other calzone
23:45 < niggler> github down again?
23:45 < amurdaca> calzone is italian
23:45 < carpii> weird, i was just reading a reddit about the diff between a calzone and a stromboli
23:45 < amurdaca> lol
23:45 < niggler> is it just me or did it start going down more frequently in the past year
23:46 < Lorentz> carpii: I think stromboli is rolled, and calzone is just folded over
23:46 < mindcruzer> Hi all
23:46 < carpii> yea :)
23:46 < mindcruzer> i have a question about uploading a file
23:46 < carpii> but some guy was claiming theyre interchangeable
23:46 < carpii> the FOOL !
23:47 < niggler> the differencei s the sauce
23:47 < niggler> stromboli contains sauce, calzones dont
23:47 < AAA_awright> Yeah
23:48 < carpii> ive never seen a rolled calzone
23:49 < carpii> but google images disagrees :(
23:49 < mindcruzer> basically I have a file being uploaded via an xhr, but with the request comes a header with a value that identifies the "group" that the file is a part of. It's just a unique id. What I want to do is recieve the file, but also validate the group id while the file is uploading, and cancel the upload while its in progress, if necessary. 
23:50 < AAA_awright> mindcruzer: I believe you can just call end()
23:50 < mindcruzer> will that cancel it?
23:51 < AAA_awright> But if that doesn't work then it's a limitation of the keep-alive nature of HTTP 1.1
23:51 < AAA_awright> mindcruzer: That should at least ignore the incoming data for as long as it persists
23:52 < AAA_awright> idk you'll have to see exactly what happens
23:52 < AAA_awright> What you're asking isn't particularly unique, you get the HTTP headers, and at any time you decide when you want to make the response, even if you haven't gotten the 'end' event yet
23:53 < AAA_awright> Which could include a 401 Unauthorized response
23:53 < mscdex> 401 Unauthorized calzone
23:54 < asdf12> i got you all wanting one huh
23:54 < carpii> i think the only way to guarantee the file doesnt finish uploading would be to close the socket
23:54 < mindcruzer> i'm fairly new to node, and all of this async shit is confusing me haha
23:54 < niggler> anyone familiar with github?  is there a way to hide the whitespace differences?
23:55 < carpii> clone the repo locally maybe ?
23:55 < mscdex> niggler: --ignore-whitespace ?
23:55 < carpii> then diff -w
23:55 < niggler> github, not git
23:55 < dargereldren> Using martyn's IRC library, I'm wondering if it's possible to tell my bot to join/part a channel via PM.
23:55 < AAA_awright> The website
23:55 < mindcruzer> AAA_awright: I've also seen that you can call req.connection.destroy(), since apparently, as you said, end() won't necessarily end it right away
23:55 < mscdex> not with github
23:56 < mindcruzer> but I'm not sure which is best
23:56 < carpii> some guys wrote a jquery script for it
23:56 < carpii> http://userscripts.org/scripts/review/104773
23:56 < AAA_awright> mindcruzer: That's the connection though, normally we try to preserve the TCP connection, even if the HTTP event within it is ended
23:56 < carpii> but seems kinda funky
23:56 < Havvy> dargereldren: Link to the library?
23:56 < dargereldren> https://npmjs.org/package/irc
23:57 < AAA_awright> dargereldren: GitHub?
23:57 < mindcruzer> AAA_awright, yeah and I suppose its not really a big deal if it continues uploading for a short time, as long as I effectively ignore it
23:57 < dargereldren> https://github.com/martynsmith/node-irc
23:57 < AAA_awright> dargereldren: Attach a listener for PMs and call join() as necessary
23:58 < Havvy> client.addListener('pm', function (from, message) { if (message.substring("join") == 0) { client.join(message.split(" ")[1]); } });
23:59 < dargereldren> Thank you, Heavy.
23:59 < Havvy> You'll want to put a password as the second or third parameter.  i.e.  /msg yourbot join secretPassword #chan
--- Log closed Mon Feb 18 00:00:00 2013
