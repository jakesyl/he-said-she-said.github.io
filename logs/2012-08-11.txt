--- Log opened Sat Aug 11 00:00:10 2012
--- Day changed Sat Aug 11 2012
00:00 < bradleymeck> no need for the zone to run linux
00:00 < trb_> bradleymeck: are you or are you not running kvm?
00:00 < trb_> since thats where this conversation started
00:00 < bradleymeck> trb_ no
00:00 < trb_> ok, so you are running smartos with lots and lots of zones
00:01 < bradleymeck> yep, just somewhere our communication broke down on what we both were talking about it looks like
00:01 < bawwwller> Database Name: 6 to 20 alpha-numeric characters
00:01 < trb_> thats fine, I wish though that the kvm in smartos worked on amd chips
00:01 < bawwwller> does that mean it must be letters and 1234
00:01 < trb_> my current zfs fbsd box could be smartos instead
00:07 < bradleymeck> trb_ quite a lot of things that would be nice
00:09 < webjoe> Thought I share this:
00:09 < webjoe> Isaac talk on NPM:
00:09 < webjoe> http://www.jsconflive.com/pages/20120631
00:11 < bawwwller> lol check my dog
00:11 < bawwwller> ed #N
00:11 < bawwwller> http://windstone.co.za.www57.cpt3.host-h.net/images/events/25/d9686f3090244b5b090d96e94c52180c.jpg
00:12 < bawwwller> http://windstone.co.za.www57.cpt3.host-h.net/index.php/events/westcoast/gelina
00:12 < bawwwller> more pics if u interseted
00:19 <@maxogden> wat
00:31 < radpanda3> guys i know nothing about programming
00:31 < radpanda3> i installed node
00:31 < radpanda3> what should i do
00:31 < radpanda3> next
00:31 < radpanda3> >_>
00:31 < radpanda3> <_<
00:31 < tuhoojabotti> radpanda3: Go to internet and learn
00:34 < radpanda3> thx tuhoojabotti 
00:35 < radpanda3> i dont understand most of what it says in regards to node
00:35 < radpanda3> x+x
00:35 < tuhoojabotti> radpanda3: Learn javascript.
00:38 < radpanda3> is node that cool?
00:38 < radpanda3> like
00:38 < radpanda3> is it worth figuring out?
00:39 < jrajav> You should probably start by learning Javascript
00:40 < jrajav> I hear eloquent is good
00:40 < jrajav> http://eloquentjavascript.net/
00:41 < jrajav> From there, it's up to you. If you want to use Javascript "natively" on your computer, rather than in a browser, node.js is a great option. It gives you access to V8, Chrome's Javascript engine, without having to run Chrome
00:41 < jrajav> It also provides lots of functions like filesystem and network access
00:42 < jrajav> And, notably, functions for running a server
00:51 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
00:56 < Randomachiever> Why would this Request method come back as OPTIONS when I am trying to use post? http://pastie.org/4452842
00:57 < Randomachiever> and when doing a test GET by going to mysite.com:8080/echo1/ it starts downloading a file called download. Shouldnt it display the JSON?
00:57 < bawwwller> ln?
00:57 < Randomachiever> bawwwller, the POST from the HTML is coming in OPTION to the node server
00:59 < bawwwller> oh right
00:59 < Randomachiever> AJAX type POST == request.method OPTIONS
00:59 < bawwwller> thats to do with cross site policy
01:00 < Randomachiever> cross site?
01:00 < bawwwller> http://en.wikipedia.org/wiki/Same_origin_policy
01:00 < jrajav> Cross site policy == big freakin' party pooper
01:00 < jrajav> :<
01:01 < Randomachiever> hmmm, how could I let the node server they this is from the same domain / IP / server
01:01 < timeturner>  someone enlighten me what the use case for cross-origin script loading is
01:01 < Randomachiever> or is there a way
01:01 < jrajav> timeturner: You mean the use case for legitimate cross-origin script loading? Or the reason the policies are in place?
01:02 < timeturner> both
01:02 < jrajav> Well, for the latter: phishing
01:02 < jrajav> (I hope that's enough already)
01:02 < timeturner> yeah
01:02 < bawwwller> randomachiever
01:02 < jrajav> For the former, just today I wanted to try writing a browser-living SImplenote client
01:02 < Randomachiever> I can see it as you cant bash servers with Bruteforce like POSTS
01:02 < jrajav> Only to realize I would need a proxy app due to cross-site origin
01:02 < bawwwller> are you posting to the same port
01:03 < jrajav> Basically any client-side app you want to run can't do anything interesting to any other servers ever
01:03 < Randomachiever> bawwwller, same site, different ports
01:03 < bawwwller> yea thats the prob
01:03 < bawwwller> gotta be same everything
01:03 < Randomachiever> Sadface, what can I do to autorize it?
01:03 < timeturner> does this apply to loading script files from S3 etc.?
01:03 < Randomachiever> like in PHP, with JSONP
01:03 < jrajav> timeturner: HTML5 clientside apps are becoming a really exciting new field, particularly in mobile
01:03 < jrajav> But XSS is one of the major blocks to useful HTML5 apps
01:04 < timeturner> true
01:04 < bawwwller> Randomachiever would suggest hosting it on port 80 :)
01:05 < bawwwller> and using something like express
01:05 < Randomachiever> I have a proxy on 80 that will allow non 8080 to go to apaches port 9000
01:05 < bawwwller> to build the same page you accessing over httpd
01:05 < mscdex> Randomachiever: https://developer.mozilla.org/en-US/docs/HTTP_access_control
01:06 < bawwwller> ye dont think the proxy will suffice unfortunately
01:08 < Randomachiever> bawwwller, reguarding the GET, when I go to the URL manually, it executes then starts a download named download with no extention. WHen I look at it in vim it has the JSON the server dished out
01:08 < Randomachiever> Same thing, different ports
01:09 < bawwwller> yes but thats download
01:10 < bawwwller> that will work
01:11 < bawwwller> its when you need to post a request over ajax that it will fail because of same domain policy
01:11 < bawwwller> same origin policy even
01:11 < Randomachiever> so gets should work?
01:11 < bawwwller> yea nothing special about a get
01:12 < Randomachiever> alright brother thanks :)
01:12 < bawwwller> anyone can do that get
01:12 < Randomachiever> anyone can do a post :)
01:12 < bawwwller> not an async post
01:12 < Randomachiever> right
01:12 < bawwwller> sync*
01:12 < bawwwller> your browser has to reflect the page you are viewing
01:12 < Randomachiever> i dont mind get, all messages will require a API key
01:13 < bawwwller> yea thats kinda like the jsonp u were talking about
01:13 < Randomachiever> Yeah
01:14 < bawwwller> anyway these policys have been chosen to safe guard all of us :)
01:14 < bawwwller> and im sure they werent made over a beer :P
01:15 < Randomachiever> Yeah, seems like an intellgent conclution
01:15 < Randomachiever> Just have to work around them :)
01:16 < bawwwller> jrajav u were saying about mobile apps using html5
01:16 < jrajav> Ya?
01:16 < bawwwller> with the iPhone and cocoa do you know if they have the same domain policy
01:17 < bawwwller> or android sdk for that matter
01:17 < jrajav> What about cocoa now? :/
01:17 < bawwwller> apps built in the native language to the device
01:17 < bawwwller> rather than html5
01:17 < jrajav> Uh, no, "mobile apps with html5" is something very different from "phonegap", which is what you mean
01:17 < jrajav> I mean apps running in a browser that can access phone APIs through html5
01:17 < jrajav> Not phone APIs but phone functions at least
01:18 < jrajav> phonegap doesn't run in a browser, just a app-packaged webview
01:18 < bawwwller> ok are they restricted by same domain policy?
01:18 <@maxogden> no
01:18 < jrajav> ?
01:18 < jrajav> Phonegap isn't no
01:18 < bawwwller> phonegab
01:18 < bawwwller> gap*
01:18 <@maxogden> phonegap is not restricted by the single origin policy
01:19 < bawwwller> ok
01:19 < jrajav> Phonegap isn't a served web page at all though
01:19 < jrajav> It's really just using javascript and html to write a native app
01:19 < jrajav> And network access is done with native APIs
01:19 <@maxogden> that is not true
01:19 <@maxogden> network access is done via xhr
01:19 < jrajav> Oh.
01:19 <@maxogden> inside the webview
01:20 <@maxogden> i'd recommend reading about the webviews on the platform you want to develop on if you want to use phonegap e.g. ios webviews or android webviews
01:20 < bawwwller> it doesnt really apply because there is no security risk?
01:21 <@maxogden> bawwwller: phonegap loads assets from disk via the app store or whatever, not over the internet
01:21 < bawwwller> but i can post async to my node service and retrieve a response on multiple domains
01:22 < bawwwller> from same app?
01:22 <@maxogden> you can use http from phonegap, yes
01:22 < Spion> phonegap vs html5 isn't really that different. mostly its just extra libs that you get.
01:22 < bawwwller> ok
01:23 < bawwwller> is phonegab opensource?
01:23 <@maxogden> phonegap and html5 are two separate non-overlapping things
01:23 <@maxogden> bawwwller: github.com/apache
01:23 < Spion> they're slightly overlapping
01:23 < Spion> phonegap implements parts of HTML5 where its not fully implemented
01:23 < Spion> well, the javascript parts.
01:25 < bawwwller> is javascript going to replace cocoa/c# ?
01:25 < bawwwller> or objective c
01:26 <@maxogden> is china going to conquer the world?
01:26 < bawwwller> possibly
01:26 < bawwwller> whts the medal count?
01:28 < bawwwller> phonegab conference in amsterdam
01:28 < bawwwller> sign me up
01:28 < Spion> gap.
01:28 < bawwwller> lol
01:29 < bawwwller> so excited by the idea of walking around stoned
01:29 < Spion> seriously, you could end up at the wrong conference.
01:29 < bawwwller> even better
01:29 < bawwwller> will be like, word.
01:30 < bawwwller> 150 Euros = 1 488.89355 South African rands eep
01:30 < bawwwller> quite steep entrance
01:30 < bawwwller> phonegab is owned by adobe?
01:31 < deoxxa> gap
01:31 < deoxxa> phonegap
01:34 < deoxxa> hmm, i think i've figured out a decent structure for this torrent client
01:36 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:41 < deoxxa> there's a lot of room for being a jerk in the bittorrent protocol
01:43 < AAA_awright> https://github.com/Acubed/git-node woo
01:44 < AAA_awright> Now all you people complaining about git submodules have no reason to
01:45 < AAA_awright> `git node update` and you're done
01:45 < deoxxa> that could work well
01:50 < merpnderp1> I'm trying to find in the Express docs where the view layout API is documented. Anyone know where that's at? So far it looks like layouts exist in the examples and that's it.
01:58 < drudge> AAA_awright: why can't i install this with npm? :P
01:58 < AAA_awright> drudge: It's an executable not a library
01:59 < AAA_awright> I still have to get a functional Makefile but, just add it to your PATH and git will automatically use it when you type "git node"
02:00 < Raynos> servers in your browser! ( https://github.com/Colingo/browser-stream-server#browser-stream-server )
02:01 < Raynos> Feedback appreciated, I want to polish the documentation
02:01 < AAA_awright> I propose the motto/slogan/thing for Node.js be changed from "Asynchronous I/O" to "Servers in your browser, browsers in your servers, oh my!"
02:01 < merpnderp1> hmm, looks like layouts have been removed from Express. Lots of broken examples
02:02 < merpnderp1> So you have to implement them manually?
02:02 < drudge> merpnderp1: check out the 2.x -> 3.x migration guide
02:04 < merpnderp1> drudge: I"ll take a look. Thanks.
02:07 < drudge> AAA_awright: kinda rough but decent idea
02:08 < AAA_awright> It was hacked together over 8 hours, it's gonna start that way hah
02:08 < drudge> yeah, i'm saying it is a good start ;)
02:10 < Raynos> AAA_awright: servers in the browser awesome :(
02:10 < AAA_awright> Raynos: Why :( that's =D
02:10 < Raynos> because I assume your mocking me
02:11 < Raynos> AAA_awright: I actually hacked mine together in 3 hours >_>
02:12 < AAA_awright> That's just no fair git has a lot of features I had to figure out
02:16 < tk> anyone familiar with node-webkit here? trying to use request inside of it and it seems like it never fires but... no visible errors
02:17 < merpnderp1> drudge: That shows how to do layouts in jade, but I don't see anything for ejs :(
02:18 < drudge> merpnderp1: https://github.com/pauliusuza/ejs-locals
02:20 < rvagg> dominictarr: you there?
02:20 < dominictarr> rvagg, whats up?
02:20 < rvagg> streams
02:21 < rvagg> I have a key/value store and I want to provide streaming interfaces to it, readable and writable
02:21 < rvagg> does it make sense to have node-style streams with {key:x, value:y} data?
02:22 < rvagg> I don't think I need it to be compatible with other streams, it's more of just a nice & fast interface, but it seems that streams in general are supposed to have 'data' as Buffers
02:22 < rvagg> my keys and values are Buffers but I need the pairs to come out with each data event
02:23 < merpnderp1> drudge: hah, that's sweet. thanks :)
02:23 < AAA_awright> How is one supposed to install a Node.js executable without require.paths anyways?
02:23 < AAA_awright> I mean, a Node.js-interperted
02:25 < dominictarr> rvagg, streams work just fine with js objects as buffers.
02:25 < rvagg> examples?
02:25 < dominictarr> I got heaps!
02:26 < rvagg> you mean buffers of json stringified objects?
02:26 < reactormonk> what's the most used DB with nodejs? or use couchdb without node in between?
02:26 < dominictarr> I mean... eventually they become text streams, but I start them as object streams, and them pipe them into a stringifier stream.
02:26 < rvagg> my keys and values are both buffers underneath
02:27 < rvagg> in general they will be strings, converted to and from buffers for storage, but they can also store binary data
02:27 < dominictarr> rvagg, here is one: https://github.com/dominictarr/mux-demux/blob/master/index.js
02:28 < dominictarr> the chunks are arrays.
02:28 < dominictarr> where does the kv part come in?
02:28 < dominictarr> you want a db you can stream to?
02:29 < rvagg> it's actually a leveldb wrapper
02:29 < rvagg> .. I know creationix already has on that's been forked a bazillion times but I wanted to write my own, I just need to finish off my streaming interfaces and do it in a nice Nodeish way
02:30 < rvagg> both keys and values can be arbitrary bits, so strings, binary, whatever, and I've preserved that into the JS layer via Buffers
02:30 < rvagg> in theory you should be able to pipe the output of one db into the input of another to clone it.. for example.. and preserve encoding etc.
02:31 < dominictarr> rvagg, interesting. have you seen isaacs's fstream?
02:31 < dominictarr> and tar ?
02:32 < rvagg> no, perhaps I should
02:32 < rvagg> they work with streams?
02:33 < rvagg> I think I just need examples to become a bit more soaked in the Node streaming philosophy
02:38 < dominictarr> rvagg, with fstream you can stream a whole directory to another and it preserves file stats.
02:39 < dominictarr> it's a key component of tar, which of course does the same thing, but is serializable.
02:39 < dominictarr> that sounds fairly similar to what your talking about.
02:40 < rvagg> ya, I'm looking at the pipe example now
02:42 < rvagg> what'd be brilliant is a simple interface that would let you do crazy stuff like take a tar input and stream it straight into the database with key=filename, value=data
02:46 < rvagg> sounds like a fun functional test actually
02:46 < rvagg> anyway, I might come after you for feedback later if you have time
02:47 < dominictarr> rvagg, sweet as.
02:49 < Randomachiever> Is there a way to send JSON to a node.js server via GET
02:52 < dominictarr> Randomachiever, you are ment to use POST for that.
02:53 < Randomachiever> dominictarr, Something about cross servers or something, that I cant send POST to another port. 
02:53 < dominictarr> put it in a header field
02:53 < Randomachiever> the post data?
02:53 < dominictarr> sure
02:53 < dominictarr> it's text in the end.
02:53 < Randomachiever> dominictarr, would it be possible to see an example of this?
02:53 < Randomachiever> sorry, I am very new to node and JS for that matter
02:54 < dominictarr> hmm. I'm just guessing.
02:54 < dominictarr> my understanding was that you could post, but you just couldn't get the response.
02:55 < dominictarr> but you have still sent it.
02:55 < Randomachiever> I see, thats all I need it to do really.
02:55 < dominictarr> you'd have to check that is right though.
02:56 < dominictarr> otherwise you need to proxy the requests back through your server.
02:56 < Randomachiever> another quick questions, how would I go about using get varibles? Like php's $_GET. An example would be mysite.com/index.html?id=1&name=dominictarr
02:57 < Randomachiever> how could I fetch id and name
02:57 < dominictarr> use this: https://npmjs.org/package/qs
02:57 < AAA_awright> Technically you can send an entity-body over GET
02:57 < ee> sad
02:58 < ee> aasd
02:58 < AAA_awright> It just has to be nilpotent, i.e. it can't affect the state of the webserver
02:58 < ee> asd
02:58 < etcetera> is there a proper pattern for creating database connections within the context of a given request?
02:58 < Randomachiever> thankt dominictarr 
02:58 < dominictarr> no problem
03:01 < deoxxa> had a bit of a crazy idea the other day for cross domain stuff: png images
03:02 < deoxxa> png pretty much just being gzip
03:02 < Randomachiever> deoxxa, this would bypass the cross server restriction?
03:02 < deoxxa> kind of, maybe
03:02 < deoxxa> a little bit
03:03 < deoxxa> maybe not
03:03 < Randomachiever> Would be intresting to see
03:03 < deoxxa> it's a crazy idea anyway, and would require decompressing gzip data
03:05 < dominictarr> deoxxa, whats the advantage over jsonp?
03:16 < deoxxa> dominictarr: "wtf" factory
03:16 < deoxxa> erm
03:16 < deoxxa> factor
03:16 < deoxxa> typing while lying down is hard just fyi
03:16 < dominictarr> true dat
03:16 < deoxxa> don't judge me
03:17 < dominictarr> "deoxxa: the wtf factory"
03:18 < deoxxa> woo
03:23  * Nexxy silently judges deoxxa 
03:25 < rvagg> deoxxa & dominictarr: already been done: http://www.phpied.com/ajax-with-images/
03:26 < dominictarr> rvagg, did you see that thing that was both a displayable html page _AND_ a jpg
03:27 < rvagg> I saw lots of mentions of it but to be honest I never actually looked at it..
03:28 < rvagg> @ded went all hipster on me when I mentioned this on twitter, pointed out that they were doing it pre-ajax: https://twitter.com/ded/status/209294302424215552
03:29 < dominictarr> it wouldn't be valid json. but it WOULD be valid ini.
03:30 < chanhannigan> happy weekend peeps
03:39 < mscdex> chanhannigan: 20 mins too early
03:39 < chanhannigan> well I'm drinking now
03:46 < deoxxa> Nexxy: if i turn on dictation in my irc client, that's not silent
03:46 < deoxxa> :<
03:47 < deoxxa> leaving the only silent thing to be my tears
03:53 < distracteddev> I have winston sending logs to a static file, I want to then stream that static file over HTTP into a browser. What would be the best way to achieve this?
03:57 < mscdex> deoxxa: so then only turn on dictation for joins and parts
03:57 < mscdex> :-D
03:58 < deoxxa> mscdex: great, so i can listen to more people come and go without saying a word? YOU'RE NOT HELPING!
03:59  * deoxxa is actually quite a happy person
04:03 < rvagg> distracteddev: this may not help but I'm a fan of http://papertrailapp.com for log management and display/searching with your browser, you could probably feed direct to their API with winston
04:03 < rvagg> in fact, https://github.com/kenperkins/winston-papertrail bingo
04:04 < distracteddev> rvagg: Yup :) And there actually a prebuilt winston transport for that too. Just curious as I saw someone do this a while back
04:04 < distracteddev> rvagg: Thanks for the tip thought :)
04:41 < etcetera> anyone on my data access question. with an evented web app, how often should I be reinitializing the connection to the database?
04:48 < reactormonk> etcetera: why would you reinitialize the connection?
04:49 < etcetera> within a regular web app I usually inject a valid connection for each request handler.
04:51 < reactormonk> etcetera: what kind of DB?
04:51 < etcetera> reactormonk: redis or postgres usually.
04:52 < reactormonk> etcetera: so you want to reuse connections?
04:52 < etcetera> reactormonk: I'm looking for best practices.
04:55 < reactormonk> can't help with that
04:57 < SomeoneWeird> lol
04:57 < etcetera> go figure.
04:57 < etcetera> the only two options are one connection per handler context, or a global connection.
04:57 < etcetera> I don't know enough about node to know whether one is better than the other for simple transactions.
04:58 < cainus> hey all.. anyone have any nice tricks for avoiding require("../../../../../../../../../../../../../blah"); ?  symlinking seems hacky... or does everyone just try to keep things shallow?
05:02 <@Nexxy> cainus, shallow, turn things into modules if you can
05:02 <@Nexxy> cainus, you can also use path.resolve along with __dirname, etc.
05:05 < cainus> __dirname is going to be the file's dirname though, not the top dir I'm looking for
05:05 <@maxogden> cainus: if you make blah into a module and put it in node_modules you can just do require('blah')
05:05 <@Nexxy> process.cwd()
05:05 < cainus> yeah process.cwd() seems do-able
05:05 <@Nexxy> or process.env.pwd
05:05 <@Nexxy> sorry
05:05 <@Nexxy> process.env.PWD
05:05 < cainus> ah right
05:06 < cainus> alright cool... thanks guys
05:06 <@Nexxy> but yeah the best thing is what maxogden said
05:06 <@Nexxy> when possible
05:06 <@Nexxy> IMHO
05:06 <@maxogden> the only limitation is yourself
05:07 <@Nexxy> and your... IMAGINATION!
05:07  * cainus checks to see if he's in #zombo.com
05:07 <@maxogden> WHOA
05:07 <@Nexxy> the infinite is possible...
05:07 <@Nexxy> with #node.js
05:07 <@Nexxy> you can do anything you like...
05:07 <@Nexxy> with node.js
05:07 <@Nexxy> welcome... to node.js
05:07 -!- maxogden changed the topic of #Node.js to: welcome... to node.js. the inifinite is possible. the only limitation is yourself
05:08 <@Nexxy> s/inif/inf/
05:08 < rvagg> btw, nothing inherently wrong with require('../../../../../blah') but too much depth just suggests you may have an organisation or a bloat problem
05:08 <@maxogden> oops
05:08 <@Nexxy> WOOPS!
05:08 -!- maxogden changed the topic of #Node.js to: welcome... to node.js. the infinite is possible. the only limitation is yourself
05:08 < cainus> rvagg: agreed
05:09 <@Nexxy> maxogden, you forgot the part about...  IMAGINATION!
05:10 < gkatsev> you forgot a letter?
05:10 <@Nexxy> wat
05:10 < rvagg> I̻̮̅̏̊͒ͩ̾̀́M̡̖͚̠͋̄ͮͥ̂ͪȀ̎͑ͤ͐͋ͯͯ̋̚G̎̌́̐̔̑ͥ̓̔̚I̋͑͗ͩ̍̿ͩ̀̑ͮŃ̌̃͆̀̄ͭ̀̉ͯA̽̍͑̌͒ͬ͗̎͗̽T͆͌̈ͪ͊̅͊̅̌̓Ĭͫ̈̎̑́͆ͬ̅̚Oͭ͂͗̓̈ͦͨ̆ͧ͂Ñ̳̂̓ͯ̾͂̈̓͢
05:10 < gkatsev> IMAGINATIOn?
05:10 < gkatsev> lol
05:10 < SomeoneWeird> lol
05:10 <@Nexxy> y u braek my vterm
05:11  * Robdgreat hits ctrl-l
05:11 < rvagg> "Nexxy: get a real IRC client"
05:11 < rvagg> if memory serves me correctly
05:11 < gkatsev> rvagg: CAPSLOCKSCRIPT was mentions on the jsweekly mailinglist
05:11 <@Nexxy> rvagg, IRSSI is the only real IRC client
05:11 < gkatsev> weechat is good too. sometimes.
05:12 < SomeoneWeird> lol nexxy youre funny
05:12 <@Nexxy> SomeoneWeird, thanks I think?
05:12 < jrdn> does a firewall block ws:// protocol?
05:12 < SomeoneWeird> >>>
05:12 < SomeoneWeird> >.>
05:12 <@Nexxy> jrdn, it depends on the mood of the firewall
05:12 < rvagg> ya, I saw that gkatsev... it's a SAD INDICTMENT of the Node community that it's so popular 
05:12 < jrdn> I'm trying to run https://github.com/alaingilbert/Turntable-API/ but can't
05:12 < gkatsev> >>> '>.>'
05:12 < purr> gkatsev: (string) '>.>'
05:12 < jrdn> @Nexxy, haha, whaat?
05:12 < gkatsev> rvagg: lol
05:12 < JZA> is there a way to install socket.io without the need of npm?
05:13 < SomeoneWeird> lol gkatsev 
05:13 < SomeoneWeird> >>> 1+1
05:13 < purr> SomeoneWeird: (number) 2
05:13 < gkatsev> >> version
05:13 < purr> gkatsev: (string) '3.6.6.11'
05:13 < gkatsev> >>> version
05:13 < purr> gkatsev: (string) '3.6.6.11'
05:13 < SomeoneWeird> >>> require('os').hostname
05:13 < purr> SomeoneWeird: ReferenceError: require is not defined
05:13 < SomeoneWeird> :c
05:13 < gkatsev> it's just plain js
05:13 < SomeoneWeird> ic
05:13 < rvagg> require('fs').readFileSync('/etc/passwd')
05:13 < gkatsev> looks like purr only does v8
05:13 < rvagg> >>> require('fs').readFileSync('/etc/passwd')
05:13 < purr> rvagg: ReferenceError: require is not defined
05:14 < gkatsev> no require. just JS
05:14 < SomeoneWeird> yea
05:14 < rvagg> too bad
05:14 < gkatsev> also, it's sandboxed anyway
05:14 < SomeoneWeird> pffft sandbox
05:14 < JZA> I am reading about modules, and seems I just need to untar the modules inside node_modules/ folder but not sure if there is any compilation
05:14 < rvagg> sandboxed schmandboxed
05:14 < gkatsev> ecmabot in ##javascript can run it both in v8 and spidermonkey
05:14 < rvagg> JZA: that should work ok for you in most cases, most Node modules don't need compilation
05:15 < rvagg> JZA: tho NPM is preferred of course
05:15 < JZA> rvagg: ah ok thanks
05:15 < rvagg> JZA: even if they do require compilation, you should find a Makefile, Cakefile or Gruntfile in the root of them all
05:15 < JZA> rvagg: well is good to know there are options
05:19 < jrdn> anyone know how I can't connect to a remote web socket? (new WebSocket('ws://chat5.turntable.fm:80/socket.io/websocket'))
05:23 < SomeoneWeird> /socket.io/? you should be using socketio jrdn :)
05:23 < jrdn> i would, but this is part of a 3rd party api
05:23 < SomeoneWeird> but the url has socketio in it...
05:24 < jrdn> https://github.com/alaingilbert/Turntable-API/blob/master/bot.js#L69
05:24 < jrdn> yeah, makes no sense to me
05:28 < cainus> jrdn: what happens if you telnet to it?
05:28 < cainus> something like wireshark can tell you
05:28 < jrdn> ws://chat5.turntable.fm:80/socket.io/websocket: nodename nor servname provided, or not known
05:29 < cainus> where's that output coming from?
05:31 < cainus> won't be a firewall issue unless you can't see the regular website either
05:34 < jrdn> Hmm
05:35 < samholmes> In socket.io, is there a way to leave all rooms?
05:35 < samholmes> socket.leave()?
05:36 < samholmes> Will not passing a room leave all rooms?
06:01 < duko> is there a common technique for associating a view with an element that already exists in the document?
06:02 < duko> i'm trying to use views that usually render themselves in a client
06:02 < deoxxa> duko: sounds like you're using a framework
06:02 < duko> with fully composed documents that are rendered in the server
06:02 < deoxxa> duko: only a couple of people in here can read minds, and i think they're asleep at the moment. you might want to mention the framework you're using.
06:03 <@Nexxy> actually, I'm here
06:03 < SomeoneWeird> same
06:03 < deoxxa> oh, well that's good!
06:03 < SomeoneWeird> >.>
06:03 < duko> deoxxa this code is my own
06:03 < duko> it doesn't have a name or a page associated with it
06:03 < deoxxa> hokay
06:03 <@Nexxy> duko, how are you constructing your views?
06:03 < deoxxa> depends on how you've implemented it then
06:05 < duko> an array of view names along with a session object is given to a function that returns a string of the rendered views
06:06 < duko> in the client this is ok
06:06 < duko> rendered views are cached and they associate with elements through a unique id
06:07 < duko> but if the string is constructed on the server the view code on the client will not associate with the elements that each view would manage
06:09 < duko> i can think of some quick ways to accomplish my goal
06:09 < SomeoneWeird> 0.o
06:09 < duko> but i don't like the ideas that i'm coming up with
06:09  * rvagg watches for the mind reading magic
06:09  * timeturner is a spectator
06:10 < duko> someone who had the experience of building similar software would not need to read my mind
06:10 < duko> unfortunately it looks like a mind reader is needed here
06:11 <@Nexxy> duko, are you not able to associate a selector with the views?
06:11 < timeturner> I think you need dynamic binding type stuff
06:11 < duko> what is a 'selector'?
06:11 <@Nexxy> "body#main > div > div > h1" : "<your rendered view>"
06:11 <@Nexxy> etc
06:12 < duko> i avoid techniques like those
06:12 <@Nexxy> ahahaha
06:19 < squeakytoy> Since this channel is so quiet, im going off-topic and ask for advice from fellow geeks concerning a hobby project i have ;)
06:19 < squeakytoy> I am working on a new sci-fi card game (same category as Magic the Gathering), however i am in the process of fixing a logo. It would be really awesome if you guys could rate which design could suit best for a card game logotype http://99designs.com/logo-design/vote-4lw8nx :-)
06:22 <@Nexxy> http://no-spec.com/
06:23 <@Nexxy> http://www.no-spec.com/faq/ rather
06:54 < jrdn> has anyone played with the turntable.fm bot?
08:22 < noocx> hi
09:20 < TehShrike> squeakytoy: I'd go with 21 or 20 just because those circular logos would work so much better standalone on the back of a card or whatever
09:25 < TehShrike> As an aside, I'm a fairly big MTG fan
09:26 < TehShrike> and I like games.  So... I'd beta-test whatever flavors you're taste-testing, if ya know what I mean.
09:27 < jetienne> where can i find a simple way to download a file via http and without installing an external package
09:33 < deoxxa> jetienne: wget
09:34 < jetienne> deoxxa: like 'exec wget/curl' ?
09:34 < deoxxa> no, like literally typing "wget" into your terminal
09:34 < jetienne> oh isn't there a dependancy on npm, like depends on curl ?
09:34 < jetienne> deoxxa: oh i want to do that in node.js :)
09:34 < rvagg> jetienne: request
09:35 < jetienne> isn't npm depending on curl ? i remember a past where it did ?
09:35 < deoxxa> no?
09:35 < deoxxa> it never has?
09:35 < deoxxa> curl used to be used in the example of how to install it
09:35 < deoxxa> but it comes with node these days
09:35 < deoxxa> and i can assure you it doesn't require curl for operation
09:35 < jetienne> rvagg: any other solution which doesn't require a external module
09:36 < jetienne> deoxxa: how ? i mean do you use it on a box without curl ?
09:36 < deoxxa> yes
09:36 < deoxxa> it's got nothing to do with curl
09:37 < rvagg> jetienne: http://nodejs.org/docs/latest/api/http.html if you don't want to use a dependency then you'll have to work with the native http/https modules
09:37 < jetienne> hmm so al lin all i don't have my answer :0
09:37 < jetienne> thanks anyway 
09:37 < rvagg> what's wrong with a dep though?
09:37 < deoxxa> jetienne: if you're wanting to use node, you're going to want to learn to love modules
09:37 < rvagg> request is awesome
09:37 < jetienne> deoxxa: i do :)
09:37 < jetienne> love node i mean :)
09:37 < deoxxa> jetienne: http.get("http://herp.derp/file").pipe(fs.createWriteStream("./file")) would kind of do it, but there's a lot of other stuff involved in doing it properly (handlign errors, etc)
09:39 < jetienne> deoxxa: excellent! seems perfect for me
09:39 < deoxxa> no
09:39 < deoxxa> it's really not
09:39 < jetienne> hehe
09:39 < deoxxa> it's about 1/3 of the solution
09:39 < deoxxa> what happens if you can't open the file? can't resolve the domain? can't access the file? get a 404? transfer fails? etc etc
09:41  * rvagg nods
09:44 < jetienne> deoxxa: you sure that http.get(string) works ? the docs says ```options``` object. and i got an error when i try with string 
09:44 < deoxxa> if you're using a recent version of node, yes
09:44 < jetienne> deoxxa: rvagg: i understand your point on error detection. but this will happen in time
09:44 < deoxxa> if you're using an ancient version, no. it won't work.
09:45 < jetienne> $ node -v
09:45 < jetienne> v0.8.6
09:45 < jetienne> is that recent enough ?
09:46 < deoxxa> http://nodejs.org/docs/latest/api/all.html#all_http_get_options_callback
09:47 < jetienne> deoxxa: in my case this is https. does it change anything on the api call ?
09:47 < adammw111> Hi, i'm getting a socket hang up error on a HTTPS request, how do I go about debugging where the problem is?
09:47 < deoxxa> it might, yes
09:47 < deoxxa> @ jetienne
09:47 < jetienne> deoxxa: ok thanks i will switch to object optiosn
09:48 < deoxxa> or, you know, use the `request' module
09:48 < deoxxa> $ npm install request
09:48 < deoxxa> require("request")("https://host/file").pipe(fs.createWriteStream("./file"))
09:50 < adammw111> Is there a way to show the reason behind a server-initiated HTTPS socket hang-up? there seems to be no error event emitted - and openssl's s_client can connect fine - it's just node.js https.request that's failing.
09:53 < jetienne> deoxxa: i tested. require('https').get(require('url').parse(url), function(res){ works
09:54 < jetienne> deoxxa: but not require('https').get(url, function(res){ don't. so the string to options isn't yet in https module. 
09:54 < deoxxa> ah yep
10:09 < adammw111> finally found my problem using a standard tls server rather than HTTPS to debug. 
10:09 < adammw111> bye
10:10 < deoxxa> right, so i can now talk to a bittorrent peer and request/receive a block from a piece
10:12 < jetienne> https://github.com/jeromeetienne/neoip/tree/master/src/neoip_bt_core deoxxa if you are implementing bit torrent. here is a implementation i did in the past. in c++ tho 
10:13 < jetienne> there is even a modification to support stream casting thru bit torrent :)
10:14 < deoxxa> neat!
10:14 < deoxxa> https://github.com/deoxxa/bittorrent.js this is what i've been working on
10:14 < deoxxa> started on it last night
10:15 < jetienne> excelent!
10:15 < jetienne> deoxxa: there is a lot of tuning at the end. when you got the implementation working. to make it fast is require tuning
10:15 < deoxxa> yeah
10:16 < jetienne> but you can study others and get their heuristics :)
10:16 < deoxxa> i think the interesting thing is how you can hijack the protocol for other purposes
10:17 < deoxxa> i'm thinking about implementing a peer to peer deployment thing with it
10:18 < jetienne> deoxxa: nice idea! it is clearly an underused protocol
10:18 < deoxxa> i've just refactored the parser and producer so they can more easily handle arbitrary message types
10:18 < deoxxa> i'll implement a message type that's gzipped json or something
10:19 < deoxxa> then just shove messages between clients with that, use the built in nature of DHT to route messages around
10:21 < MerlinDMC> deoxxa, p2p deployment ... smth like murder does? http://engineering.twitter.com/2010/07/murder-fast-datacenter-code-deploys.html
10:21 < deoxxa> yeah, much like that
10:22 < deoxxa> but inside the bittorrent protocol itself
10:31 < deoxxa> also interesting is utp - i wonder how that would fit into this code...
10:39 < jetienne> hmm apparently it isn't possible to reset a password in npmjs.org. it does a kind of 500
10:40 <@Nexxy> jetienne, https://npmjs.org/forgot
10:41 < jetienne> Nexxy: type a name in there. like jetienne
10:41 < jetienne> Nexxy: you will get the 'kind of 500'
10:42 <@Nexxy> no I don't
10:42 <@Nexxy> Forgot password
10:42 <@Nexxy> An email has been sent. Click the link when you get it.
10:42 < jetienne> serious ?
10:42 <@Nexxy> From: user-account-bot@npmjs.org
10:42 <@Nexxy> To: nexxy <emily@contactvibe.com>
10:42 <@Nexxy> Subject: npm Password Reset
10:42 <@Nexxy> working
10:42 <@Nexxy> maybe you registered twice or something
10:43 <@Nexxy> I remember isaacs saying something about that being an issue at some point
10:43 <@Nexxy> otherwise I have no clue!
10:43 < jetienne> http://pastebin.com/JfUR3SZK Nexxy the one i get
10:43 <@Nexxy> did you spell your name right? ;P
10:43 < jetienne> Nexxy: can you please try with 'jetienne' ?
10:44 <@Nexxy> yeah it errors for me with your name too
10:44 < jetienne> https://npmjs.org/package/gowiththeflow I'm here
10:44 < jetienne> but clicking on my name produce errors
10:44 < jetienne> ok apparently the db is corrupted on me :(
10:45 < jetienne> ok i will wait and ping isaacs
10:45 < jetienne> Nexxy: thx
10:45 <@Nexxy> ya, sorry ._.
10:46 <@Nexxy> I'm sure isaacs can fix it fairly easily
11:14 < deoxxa> EventEmitter makes things so nice
11:14 <@Nexxy> I do concur.
11:14 < deoxxa> "do i have to make this thing keep a reference to this other thing, no wait, is it meant to be this way instead, argh, shared state is going to make this painful later- WAIT! EventEmitter to the rescue!"
11:14 < yawnt> lol
11:15 <@Nexxy> jah
11:16 <@Nexxy> the app I'm working on atm is liek 80% emitters
11:16 < deoxxa> i've managed to do everything with this torrent thing with emitters and streams
11:16 < deoxxa> SO FAR
11:16 < deoxxa> but now i think i have to introduce some kind of hard links between components
11:17 <@Nexxy> decouple all the things
11:17 < deoxxa> trying to
11:20 < deoxxa> the dht part of this is going to be kind of tricky
11:22 < deoxxa> http://www.downforeveryoneorjustme.com/bittorrent.org come on, seriously?
11:23 < SomeoneWeird> :X
11:25 < deoxxa> how is there no mirror site for bittorrent.org
11:25 < deoxxa> seems awfully ironic
11:26 <@Nexxy> bttp://bittorent.org/
11:26 < rook2pawn> does express still use the same notation for ejs render, i.e. .get(function(req,res) { res.render('foo.ejs',{layout:true}})
11:36 < SomeoneWeird> rook2pawn, yes
12:13 < sbfds1> Anyone know how i can have my relative hashlinks stay relative?
12:13 < sbfds1> sorry I'm using jade templates
12:13 < sbfds1> so i have a(href='#foo') and it's turning into <a href="127.0.0.1:1337#foo"> on my local devserver
12:13 < sbfds1> but i want the jade to turn into <a href="#foo">
12:15 <@konobi> inline html instead?
12:18 < shanse> no idea why it does that for you
12:18 < stagas> sbfds1: what? that shouldn't happen
12:19 < stagas> sbfds1: are you looking at the raw source code or in firebug or something
12:20 <@Nexxy> node 0.8.5 has SSL issues w/ arm ;<
12:49 < jetienne> q. i got a string parameter that i gonna use in a command line. so i would like to escape it for shell. how can i do that ?
12:51 <@konobi> jetienne: write to a file using non interpolating heredocs and then execute the script
12:52 < jetienne> konobi: I'm not sure i understand what you mean by 'non interpolating heredocs'
12:57 < hello__> y
12:58 <@konobi> jetienne: check the bash docs
12:58 < jetienne> sure :))
13:27 < jetienne> i look for an easy tutorial on how to make your first package.json
13:27 < jetienne> any link to suggest
13:27 < stagas> jetienne: you type "npm init"
13:28  * jetienne follow stagas with faith :)
13:28 < AvianFlu> yeah, that's the best way to do it
13:30 <@Nexxy> http://package.json.jit.su/ ?
13:31 < jetienne> https://github.com/jeromeetienne/tquerytool/blob/master/package.json it looks ok
13:31 < jetienne> how can i test
13:31 < jetienne> Nexxy: looking
13:32 <@Nexxy> jetienne, you can use `npm install <module> --save` and it will add it to your package.json dependencies list
13:32 < jetienne> Nexxy: nice tutorial!
13:33 < jetienne> Nexxy: it isn't yet published, should still use this line ?
13:33 <@Nexxy> jetienne, ya, nodejitsu is nice liek that
13:33 <@Nexxy> jetienne, you can put "private" : true in your package.json if you don't want it to get accidentally published
13:33 <@Nexxy> you can (should) still install dependencies 
13:33 <@Nexxy> or rather, register them in your package.json
13:35 < stagas> jetienne: also put a preferGlobal: true to give warning that it should be installed with -g since it's a cmd tool
13:36 < jetienne> euh 
13:36 < jetienne> my needs are much simpler :)
13:36 < jetienne> let me try to be more clean
13:36 < jetienne> clear
13:37 < jetienne> in a folder on my disk, i got a npm package that i just created with 'npm init'. Now i would like to test if this package.json is actually working. So i would like to test an install the package 
13:37 < jetienne> is that clearer ? 
13:38 <@Nexxy> jetienne, you could do `npm link` in that directory
13:38 <@Nexxy> then create a new directory
13:39 < jetienne> Nexxy: got it. thanks 
13:41 < AAA_awright> How is one supposed to ship executable-specific libraries along with an application?
13:42 < jetienne> $ sudo npm install -g ~/webwork/tquerytool it works ! :)
14:18 < darrenlooby> If I wanted something like WordPress in Node.js... is there anything comparable?
14:50 < qballer> Can connect use binary dta
14:50 < qballer> data to flatiron 
15:19 < adlwalrus> How can I code a mini-apache that just serves a directory?
15:22 < mscdex> you don't want a mini-apache ;-)
15:25 < shanse> we're talking mini apache helicopter or mini apache webserver? because I'd totally want the former
15:30 < metal55> Hello, I was wondering if anyone had used Node.js with CodeKit at all?
15:31 < metal55> I know Node.js is built into CodeKit but I was wondering if anyone could tell me how to use it.
15:45 < adlwalrus>  /join #web
16:12 < CIA-93> node: isaacs v0.6 * r7e6dea4 / Makefile : build: Regenerate docs for tarball and releases (+7 more commits...) - http://git.io/FgucAw
16:20 < yoklov> uh, i can't remember, is instanceof a thing I can actually trust in JS?
16:20 < yoklov> i remember that typeof can lie to me
16:22 < yoklov> trust as in, if i have a user defined type Foo, then myfoo instanceof Foo will return true iff it really is an instance of foo, and in no other cases
16:24 < timeturner> instanceof is pretty accurate
16:25 < yoklov> yeah, I thought so
16:25 < timeturner> typeof on the other hand is not
16:25 < timeturner> but they have different purposes so
16:25 < yoklov> yeah, i do use typeof time to time, but I'm familiar with its rules
16:26 < yoklov> just wanted to make sure there weren't exceptions with instanceof
16:28 < timeturner> nope no exceptions
16:28 < timeturner> mainly because it just walks the inheritance chain so its a pretty direct operation
17:01 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:34 < scroooooge> hello
17:37 < scroooooge> i am having trouble with npm and install socket.io, if i try npm -g install socket.io
17:37 < scroooooge> keeps complaining it doesn't have permissions in /usr/lib
17:38 < mscdex> scroooooge: `npm install socket.io`
17:38 < lpin> scroooooge you need to install it globally?
17:38 < lpin> if not remove -g
17:41 < RLa> hm, mongoose seems to be for complex apps that actually need to pull whole stuff from db and afterwards save whole stuff back in by applying incremental changes?
17:41 < scroooooge> scroooooge: yeah, ain't that easier to do it globally??
17:42 < scroooooge> lpin: yeah, aint that easier?
17:42 < lpin> usually deps are installed in project folder
17:43 < lpin> depends on what you want to do
17:44 < scroooooge> aah, just working on an experiment
17:45 < lpin> call `npm install socket.io` in your project folder than
17:45 < scroooooge> trying to use node.js and websockets to keep track of event activities (door opened, door closed etc.) with a page which instantly lists it
17:45 < TooTallNate> scroooooge: global installation is only for installing modules that put something in your $PATH
17:45 < scroooooge> aah
17:45 < scroooooge> okay
17:45 < TooTallNate> they don't even get exposed to node's require
17:45 < TooTallNate> so you want to install without the -g cause socket.io doesn't have any bin files afaik :p
17:48 < scroooooge> aah, okay, sorry!
17:48 < scroooooge> i will keep it at less and coffee-script then
17:57 < scroooooge> if you want to learn node.js what are good node plugins/bundles to experiment with? also what about blogs or books, any suggestions?
17:59 < lpin> scroooooge starting with a socket.io app as you wanted to do is fine
18:02 < scroooooge> :-)
18:04 < lpin> i would pick an example app, a simple one and move from there.
18:04 < lpin> but that's just me
18:04 < lpin> very personal
18:05 < scroooooge> yeah, working through the socket.io examples
18:05 < lpin> yep
18:05 < AAA_awright> Where's tjholowaychuk when you need him
18:07 < owen1> is there rss feed for geekli.st link sharing? http://geekli.st/community/nodejs
18:10 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:11 < jondot`> is it possible to profile live nodejs processes using node-inspector?
18:49 < pringlescan> Has anyone used the ziprip module to extract addresses from web pages? It wants me to pass a dom object and a URL… they say you can use it with jsdom. I don't understand why I'd be passing both unless I'm missing something.
18:57 < gkatsev> pringlescan: the document it wants is jsdom or whatever. In the browser it would be document. But, you could theoretically, use this with phantom or w/e and pass in phantom's document
18:58 < pringlescan> yeah when I pass jsdom or a blank jsdom document it doesn't do anything, it should just use jsdom as a dependency as far as I can see? :-|
18:59 < gkatsev> well, it wants to be supported client-side as well
18:59 < scroooooge> hmm, websockets can you also send events via php to such server?
19:09 < gkatsev> pringlescan: but yeah, it probably could've grabbed it itself or something
19:15 < AAA_awright> Oh hey
19:16 < AAA_awright> tjholowaychuk: A few of your modules don't have git repositories listed with the npm repository... send, debug, fresh, range-parser, possibly others
19:16 < tjholowaychuk> AAA_awright k
19:17 < timeturner> I like the npm vs component speed comparison
19:17 < AAA_awright> I was putting together a script to quick-clone a package and its dependencies and had to wonder for a second why 'send' was erroring when I added it
19:18 < timeturner> maybe npm guys will do something about improving npm now
19:18 < AAA_awright> https://github.com/Acubed/git-node <-- No more excuses to not use git submodules
19:18 < AAA_awright> timeturner: Where is this?
19:18 < timeturner> https://github.com/component/component
19:18 < timeturner> CLI tool for components created by tjholowaychuk
19:19 < AAA_awright> tjholowaychuk: Lol are you working on the same thing that I am
19:19 < tjholowaychuk> AAA_awright mine doesn't use git, and it's not for node stuff
19:20 < AAA_awright> So it's just programmed in Node.js
19:20 < AAA_awright> with Node.js, in ES
19:21 < AAA_awright> timeturner: Are you using this for Node.js?
19:22 < rasmus> can someone help me test my first app in node?
19:22 < rasmus> http://svenrasmus.com/
19:23 < timeturner> browser-side components in the component repo collection atm so it's only for the browser
19:25 < tuhoojabotti> rasmus: what does it do?
19:25 < rasmus> It's a basic chat application
19:32 < axefrog> Got a quick question about jade, if anyone's an expert - is it possible to define something in a child view which is passed to the parent in multiple places? For example, I'd like the view to define a title and have the layout use that title in the title tag and the h1 tag. Would prefer to do it in the view, rather than the controller, if possible.
19:33 < shanse> make it a seperate block and let the child view overwrite that block
19:34 < tesserakt> how do I get this work? (its just 3 lines of code) http://pastebin.com/HiPBD2KC
19:34 < axefrog> shanse - i thought of that, but the title and h1 tags both want the same value. can you have two blocks with the same name?
19:34 < tjholowaychuk> axefrog currently due to how the js is constructed you cant do stuff like
19:34 < tjholowaychuk> title = 'hey'
19:34 < tjholowaychuk> extend layout
19:35 < axefrog> oh you mean declare the variable before the extends line?
19:36 < pringlescan> Does anyone know how to split a regex onto multiple lines? I have one that is 500 characters long.
19:37 < axefrog> pringlescan - define the regex in a string and then construct a RegExp object with the string as an argument
19:37 < nlf> or break it up into multiple parts, that's a pretty lengthy regex..
19:38 < pringlescan> it matches states and state abbreviations, thanks :-) i forgot about that
19:39 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:40 < axefrog> ok one other question about jade - when a view extends a layout, is it possible to define a variable for use in different blocks? i.e. I am specifying content for a header block and for a body block, but the block internals seem completely unaware of anything declare outside of them, which makes it hard to define something at the top of the view to be used in multiple places
19:40 < tjholowaychuk> axefrog that's for the same reason, it's hard to explain unless you use debug: true and look at the js generated
19:41 < axefrog> ok, so basically i'm stuck with passing the value in at the controller level
19:41 < axefrog> there's no way, from within a view, to modify the locals?
19:41 < tjholowaychuk> for now kinda i guess
19:41 < tjholowaychuk> a lot of that is overkill IMO
19:42 < tjholowaychuk> yeah you can do locals.foo = 'bar' if you want, but that's a little gross
19:42 < axefrog> really i just wanted to keep titles inside the view
19:42 < axefrog> for example: http://pastie.org/4456808
19:47 < yoklov> can the names exported by a node module be determined statically?
19:47 < yoklov> probably not, right?
19:47 < AAA_awright> I like how issac's semver repository breaks semver in its tags
19:48 < AAA_awright> bleh
19:48 < AAA_awright> I like how git://github.com/isaacs/node-semver.git breaks semver compatibility in its tag names
19:49 < AAA_awright> yoklov: Statically?
19:50 < yoklov> before runtime
19:50 < yoklov> but no, obviously not
19:50 < Randomachiever>  techno
19:51 < yoklov> isn't even deterministic because someone could do exports[""+Math.random()] = "foo"
19:51 < nlf> right
19:52 < yoklov> blarg.
19:52 < nlf> you could get a very rough approximation by just doing a quick text search
19:52 < nlf> but yeah, it won't be accurate
19:53 < yoklov> i'd need it to be accurate
19:53 < yoklov> so yeah, totally impossible.
19:53 < AAA_awright> Why the need to be accurate?
19:53 < AAA_awright> Why the need to determine it at all?
19:54 < AAA_awright> yoklov: What's the goal?
19:54 < yoklov> working on a compile-to-js language (for educational purposes), seeing if I could resove names in a module at all
19:55 < gkatsev> is it called yactjl?
19:55 < gkatsev> :P
19:55 < AAA_awright> Like if it's for something similar to an IDE with auto-completion, you may need to associate some meta-data with different things
19:56 < yoklov> gkatsev: might as well be :P
19:56 < AAA_awright> You can determine some stuff, quite a bit of stuff
19:56 < AAA_awright> Note that there's no way or need to auto-complete a variable that's going to be random
19:57 < yoklov> that is a good point, but if someone dynamically added names to the module by building strings, then it would fail
19:58 < nlf> sure would
19:58 < nlf> but if you can get 80% coverage that easily, i'd say go for it
20:03 < tesserakt> how do I get this work? (its just 3 lines of code) http://pastebin.com/HiPBD2KC
20:04 < yoklov> it would hardly be easy, i'd have to write a parser for javascript, and even then I could probably only determine things directly attached to exports, but it's not uncommon for people to alias exports to something else.
20:04 < yoklov> or import the module and hope that has no side effects
20:07 < yoklov> tesserakt: mysyncfunc doesn't return anything
20:07 < yoklov> additionally, async func probably won't either
20:07 < yoklov> because it's… well, asynchronous.
20:07 < ClaudioAlbertin> Screw it, I'll use Perl instead.
20:07 < AAA_awright> tjholowaychuk: Also, a ton of people depend on jade, you should probably release version 1... A while ago I complained you changed the behavior of #{expr} without a major version bump. Version zero is cheap and says there's no semantics and I'm not going to inform you that my latest release breaks everything. When there's multiple other people using a library you that really shouldn't happen.
20:08 < tjholowaychuk> AAA_awright there are no semantics yet really, im not happy with where it's at so there's no 1.0 yet
20:08 < tjholowaychuk> most of the things are minor but still
20:09 < AAA_awright> You don't have to be happy to release version 1.0, you can make that version be 2.0 or 100.2.4 or anything
20:09 < tjholowaychuk> i'd rather have people progressively update than have some massive changes later
20:09 < tjholowaychuk> in a 2.0
20:09 < tjholowaychuk> yeah
20:10 < tjholowaychuk> I dont care much for semver to be honest, I think it's easier to just adjust things slowly as they roll out
20:10 < tjholowaychuk> instead of being hit with many changes
20:10 < AAA_awright> When I realized people were actually using my rdf module I though oh crap, better tag version 1.0.0, and a few hours later I tagged 1.0.1 to fix a minor bug that broke reverse-compaibility with the version before it
20:11 < AAA_awright> I consider it kind of important because, well, it adds semantics
20:11 < AAA_awright> I care a lot about semantics :)
20:14 < mscdex> tesserakt: the name "mySyncFunc" is misleading. you should pass a callback to the "mySyncFunc" and execute that callback inside of the function where `result` is
20:18 < Nasga> Hello, does anyone know an alternative to http://docs.python.org/library/binascii.html#binascii.unhexlify in nodejs ?
20:20 < tesserakt> mscdex, I mean, I want to make a sync version of the async function
20:21 < AAA_awright> Nasga: Like Buffer('596573207468697320697320646f67', 'hex')? Or if it's a number, parseInt('539', 16)
20:22 < Nasga> i haven't found 'hex' type in buffer documentation
20:22 < Nasga> i try this way
20:22 < Nasga> thx
20:22 < AAA_awright> The former is Node.js specific, in general ES you want to use UInt8Array. The latter is defines in the ES spec
20:22 < shanse> tesserakt: http://wiki.commonjs.org/wiki/Promises/A
20:23 < AAA_awright> Nasga: http://nodejs.org/docs/latest/api/all.html
20:23 < mscdex> tesserakt: why?
20:23 < AAA_awright> Bookmark that
20:24 < AAA_awright> tesserakt: You'd lose all meaning of what a callback fundementally is. And anyways, it's technically impossible (short of re-compiling or a language extension)
20:25 < Nasga> AAA_awright: thx, i will read this
20:25 < tesserakt> AAA_awright, hm yeah. ill get used to the async way instead. thanks 
20:25 < AAA_awright> tesserakt: It's technically impossible in Node.js because the event loop won't be read and the callback won't be called until the current iteration has been finished
20:26 < mscdex> tesserakt: if it helps any, there's `npm install async`: https://github.com/caolan/async
20:27 < AAA_awright> There's only a limited set of use-cases where I find async useful, too much abstraction of relatively simple behavior makes programs hard to read
20:28 < AAA_awright> I think ry had something to say on this sort of abstraction
20:53 < tesserakt> I think I'm having some trouble with closures or similar in a callback. I cannot figure it out. here is the code that is troubling me http://pastebin.com/3JppyPb8, any help is greatly appreciated.
20:53 < TehShrike> tesserakt: are you not checking err?
20:56 < tesserakt> TehShrike, I am doing "if (err) throw err" at the top of each callback that takes an err argument. I should have included that in the snippet
21:10 < stagas> there's a party here going on with at least 4000 pussies
21:10 < stagas> crete, greece
21:12 < stagas> i can hear the kick
21:13 < stagas> beach party
21:14 < stagas> dave seaman
21:15 < RLa> stupid docco, makes code copy/paste impossible
21:16 < stagas> going now!
21:24 < Mariiii> http://i265.photobucket.com/albums/ii240/Mari-SL/captcha.jpg
21:25 < jrajav> wtf is bert doing there
21:26 < mscdex> jrajav: he has to make ends meet
21:33 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
21:34 < tesserakt> I think I'm having some trouble with closures or something along those lines in a callback. I cannot figure it out. here is the code that is troubling me http://pastebin.com/3JppyPb8, any help is greatly appreciated.
21:36 < LambdaDusk> the only limitation is myself? That's why I never get anywhere
21:38 < mscdex> tesserakt: are you checking if `err` is something other than null inside the pandoc()'s callback?
21:39 < LambdaDusk> anyone here knowing a bit about the passport lib?
21:44 < CIA-93> libuv: Fedor Indutny master * r23dc564 / (include/uv-private/uv-unix.h src/unix/fs.c): darwin: emulate fdatasync() with fcntl(F_FULLFSYNC) - http://git.io/M5jRiw
21:49 < utu> express' 3.x website sucks, what happened to the guide that there used to be, new APi/reference is not complete, there's no mention of express.session() etc, what the heck?
21:53 < tesserakt> mscdex, im doing if (err) throw err; also, it would be strange if there would be an error only sometimes for a given file. because it is so that it is different files that have undefined result for each run
21:54 < mscdex> tesserakt: i don't know then, the code for that pdc module is pretty simple and small as it is just a frontend to a CLI tool
21:56 < tesserakt> mscdex, so my code is correct otherwise? I have spent hours with this, thinking it was my fault. well well, that is the price one has to pay when not having experience =) Ill look into that module, or simply call the pandoc program myself and get full control of it.
21:56 < mscdex> tesserakt: as far as i can tell your code looks correct
22:00 < tesserakt> mscdex, very glad to hear. thank you for taking time to look into this!
22:02 < merpnderp1> I'm using express with the ejs templates. Anyone know why the viewhelpers from here wouldn't be working? http://embeddedjs.com/getting_started.html#view_helpers
22:03 < merpnderp1> for example: <li><%= link_to('test', '/test.html') %> </li> throws a link_to is not defined error.
22:06 < tesserakt> mscdex: Wait now, the pdc module cannot be it. Because if I do console.log(result) before calling pdc, then result is still undefined! (but still, only for some files in the loop)
22:09 < CIA-93> node: Kyle Robinson Young v0.8 * r4ef808e / doc/api/child_process.markdown : doc: remove unused util from child_process - http://git.io/k2FZjg
22:09 < CIA-93> node: Timothy J Fontaine master * r382f22f / (5 files in 5 dirs): timers: implement setImmediate - http://git.io/YcTVaA
22:11 < mscdex> tesserakt: of course result should be undefined before calling pandoc().... it's not defined outside that callback ;-)
22:12 < tesserakt> mscdex: oh hah! sorry; I ment before calling the fn function. its the fn function that messes with me, I think.
22:13 < mscdex> i don't see how it could, `result` is just a string right? if so, it's not even being passed by reference then
22:13 < mscdex> so it would get a copy
22:15 < mappum> is there a good solution for interfacing with some openSSL stuff? I can do it right now with child_process through the CLI but it feels hacky
22:15 < tesserakt> mscdex: yeah, so this is why I think there is something with some closure or so. because I think that the jade.compile (fn) is quite slow, so that the loop gets time to go to the next entry or something
22:15 < mappum> and if I made bindings, it wouldn't work on windows :/
22:15 < mscdex> mappum: what are you looking to accomplish?
22:16 < mappum> i need to be able to encrypt stuff with a RSA public key
22:16 < mscdex> tesserakt: doubtful
22:16 < mscdex> mappum: http://nodejs.org/docs/v0.8.6/api/crypto.html
22:16 < mappum> it's not in that
22:16 < mscdex> ?
22:16 < tesserakt> mscdex, but it cant be pandoc if the problem goes away if I remove the call to jade.compile  (fn)?
22:17 < mscdex> tesserakt: no idea, never used any of those modules before
22:17 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:18 < tesserakt> mscdex, oh!! you where right. I guess the statistics where evil to me. after very many runs I finally saw the buggy behaviour without a call to fn. so it is pandoc that is messing with me, thanks!
22:47 < mmalecki> imma mmalecki, drunk enough to answer any question, ask me anything
22:48 < mmalecki> YES I'M HOLDING AN IMMA
22:48 < mmalecki> dawg.
22:50 < mmalecki> dominictarr: HEY DAWG
22:50 < rvagg> go and hack on Node core while you're drunk, I dare you
22:50 < mmalecki> rvagg: I SHALL
23:05 < CIA-93> libuv: Ben Noordhuis master * rac0d468 / src/unix/process.c : unix: work around darwin bug, don't poll() on pipe - http://git.io/F_t24g
23:13 < aniasis> Hello
23:13 < aniasis> I need some help getting started with everyauth
23:13 < aniasis> it is my first time using node.js
23:13 < aniasis> I attempted to do as instructed but I am getting errors.
23:16 < codespot> hello everyone. is it possible to ecexute dos command in node.js?
23:16 < freewil> codespot, you mean execute a command in cmd.exe?
23:17 < codespot> yes
23:17 < CIA-93> node: Timothy J Fontaine master * r320ae69 / (lib/timers.js test/simple/test-domain-timers.js): timers: make unref'd timeouts execute in a domain - http://git.io/E-4syg
23:17 < freewil> codespot, absolutely - http://nodejs.org/docs/latest/api/child_process.html
23:18 < codespot> doesn't child_process only work with unix commands?
23:18 < freewil> not sure
23:19 < bnoordhuis> codepal: child_process works on windows as well
23:19 < mmalecki> SOMEHOW
23:19 < bnoordhuis> err, codespot
23:19 < bnoordhuis> autocomplete fail
23:20 < mmalecki> if something works on windows, acknowlegde it as a failure and move on
23:20 < mmalecki> there, I said it.
23:20 < codespot> i tried it on windows but it does nothing. and the api reference says: ecex: Runs a Unix command in a shell and buffers the output.
23:21 < bnoordhuis> codespot: it uses cmd.exe on windows
23:21 < bnoordhuis> what version of node are you using?
23:22 < codespot> how to find it?
23:22 < bnoordhuis> node -v
23:22 < codespot> 0.8.6
23:23 < bnoordhuis> okay, exec() most definitely works
23:23 < bnoordhuis> it if doesn't for you, you're doing something wrong :)
23:24 < codespot> maybe the callback function of the exec methods requires a different number of parameters?
23:24 < bnoordhuis> codespot: can you gist your code?
23:24 < codespot> i have function (stdin,stdout,stderr){
23:24 < codespot> var exec = require('child_process').exec;
23:25 < codespot> exec('dir',function(stdin,stdout,stderr){         response.writeHead(200, {'Content-Type': 'text/plain'});         response.write(stroud);         response.end();       });
23:25 < codespot> the page loads for a while and then a timeout error is printed
23:25 < bnoordhuis> codespot: the prototype is function(err, stdout, stderr)
23:26 < bnoordhuis> where err is an error object or null
23:26 < codespot> oops, sorry. but anyway i didn't use it, right?
23:28 < bnoordhuis> codespot: well... notice the stroud in your code
23:28 < codespot> cough... thanks
23:29 < bnoordhuis> np :)
23:29 < codespot> i didn't double check because it said: unix commands
23:29 < codespot> but thanks a lot
23:29 < codespot> i'll try right away
23:30 < codespot> same timeout error
23:32 < codespot> any other guess?
23:32 < hallas> will certainly be nice once this releases http://www.kickstarter.com/projects/ibdknox/light-table
23:34 < TehShrike> dominictarr: hipster made me lol :-P
23:34 < codespot> maybe i have to pass him the cwd?
23:35 < bnoordhuis> codespot: you probably want stdout.pipe(response)
23:36 < codespot> bnoordhuis: do you mean response.write(stdout.pipe(response)); ?
23:37 < bnoordhuis> codespot: without the response.write
23:38 < bnoordhuis> codespot: oh sorry, i lie - exec() buffers to a string
23:39 < bnoordhuis> response.write(stdout) is correct (if somewhat inefficient)
23:39 < bnoordhuis> try a request with curl -v and see what you get
23:39 < codespot> tried right now. doesn't work BUT maybe i made a mistake somewhere else causing the timeout. i'm going to check carefully and come back. thanks a lot for your help untill now
23:50 < codespot> ok, it works! i really thank you for your help
23:51 < codespot> by the way, what did you mean by inefficient? there's a better way?
23:53 < bnoordhuis> codespot: yes. streaming is the preferred solution
23:54 < codespot> would you be so kind to point me somewhere i can read about it? i started using node.js today
23:57 < bnoordhuis> codespot: check out the streams and http api docs. short version, if you use child_process.spawn(), you can stream the output to the http response object with child.pipe(res)
23:58 < codespot> ok, i will. thank you VERY much. you really helped me a lot.
--- Log closed Sun Aug 12 00:00:06 2012
