--- Log opened Wed Aug 29 00:00:43 2012
00:19 < luckysmack> if I wanted to start an app that had offline capabilities, where could I start looking? I think couchdb is a great fit for its replication. but im not sure what else I would need to do or look into to be able to run the web app offline?
00:19 < luckysmack> similar to how c9.io has an 'availble offline' button.
00:24 < jrajav> luckysmack: http://diveintohtml5.info/offline.html http://www.sitepoint.com/offline-web-application-tutorial/
00:24 < luckysmack> yea i wondered if i would do anything with the html 5 cache manifests. but wasnt sure.
00:25 < jrajav> There are boatloads of JS libs abstracting local storage
00:25 < luckysmack> is there any way to save db data locally?
00:25 < jrajav> Get that and the cache manifest and you're golden
00:25 < jrajav> Theoretically
00:25 < luckysmack> yea basic storage seems easy enough
00:26 < luckysmack> but i want the user to still have functionality while offline, and when online it syncs with the master db
00:26 < luckysmack> hence the reason for looking at couchdb
00:26 < livinded> local storage is hard coded to a max of like 5 megs right?
00:26 < luckysmack> not sure
00:27 < jrajav> luckysmack: Sure you already thought of this, but the master db is served from the same domain right?
00:27 < luckysmack> the master can be anywhere
00:27 < luckysmack> say i have the main site at domain.com
00:27 < jrajav> Hm. Then you'll have trouble with XSS
00:28 < luckysmack> when you use the site normally, it saves to that db
00:28 < jrajav> Wait no you won't; you control the domain and server, right?
00:28 < jrajav> There's a header you can set to "disable" XSS now
00:28 < luckysmack> but when offline it syncs to the local db, and when online, couch handles the syncing back to the main server. so no xss
00:29 < luckysmack> yes i would
00:29 < luckysmack> everything would be synced to my server.
00:29 < luckysmack> my issue, is the local database
00:29 < jrajav> Well. If you serve up the page that's intended to run locally from domain a.com
00:29 < jrajav> And the db is accessed via b.com
00:29 < jrajav> It's XSS
00:29 < luckysmack> meteor/derby use mongo. but arent really offline apps.
00:30 < luckysmack> but its not the browser sending the data to the server, when offline, its couchdb sending the data.
00:30 < jrajav> Err?
00:31 < jrajav> If you want local storage, the browser's going to have to send and receive data
00:31 < luckysmack> sure it sends it to an api over http to the host. but it would be couch that handles the sync
00:32 < luckysmack> meteor has something similar with mongodb. its just not offline. it uses mini-mongo. it makes all your changes locally to a mini mongo db. then the db syncs the data (through the meteor framrwork)
00:33 < jrajav> Regardless of what you use, if it syncs local with remote data, and the local page and the remote db are on different domains, you're going to run into XSS
00:33 < jrajav> This is browser-level, has nothing to do with what DB or library you're using
00:33 < luckysmack> locally it would still be on our domain. just in offline mode
00:33 < jrajav> But like I said, there's a header you can set to get around XSS
00:35 < luckysmack> ok so assuming im using that header option, i was hoping someone could give some ideas about how I could use an online node site, offline as well with a local couchdb instance.
00:36 < jrajav> Finally found it
00:36 < jrajav> http://www.html5rocks.com/en/tutorials/file/xhr2/#toc-cors
00:36 < jrajav> tl;dr: Access-Control-Allow-Origin header
00:37 < CIA-1> node: Ben Noordhuis master * re4cef1a / (doc/api/assert.markdown lib/assert.js): doc: update assert.doesNotThrow() docs - http://git.io/_5jALQ
00:37 < luckysmack> im thinking i would have to put together some kind of package the user can install, that would have couchdb in it. the db's sync normally. if there is no local, it goes straight to the remote. if there is a local instance (they installed the app) then it saves there and couch syncs it.
00:37 < luckysmack> jrajav: sweet. thanks that will help. much appreciated.
00:38 < jrajav> Good luck
00:40 < austincheney> i have downloaded and installed node on windows and notice that it comes with a handy dandy terminal window
00:40 < austincheney> what can i do with that terminal window?
00:41 < austincheney> is there some documentation on accepted commands?
00:42 < jrajav> Step 1
00:42 < jrajav> Install mysy
00:42 < jrajav> *msys
00:42 < jrajav> Step 2 …….. Step 3: Profit!
01:28 < austincheney> how do i start a node.js service on windows?
01:28 < austincheney> node.js is already installed
01:29 < drudge>   austincheney node.exe yourapp.js
01:30 < austincheney> thank you drudge
01:31 <@konobi> unless you're talking about the actual win32 services melarky
01:31 < austincheney> i am attempting this but it keeps returning "..." and then fails to accept commands
01:34 < mscdex> austincheney: you're in the REPL then
01:36 < astropirate> Replicators are programed in javascript :S   http://www.youtube.com/watch?v=ez5XSc8AMKQ
02:08 < blessYAHU> Anyone know of a XMPP module that works on windows and Linux?
02:19 < Aria> They all should. Nothing OS-specific about xmpp.
02:32 < CIA-1> libuv: Shigeki Ohtsu master * r09faee4 / test/test-spawn.c : windows: fix environment_creation test - http://git.io/xAmJ_Q
02:44 <@konobi> imarcusthis: moo?
02:45 < rvagg> people! I bring good news! edit your README.md files and watch them rendered as you type: https://github.com/rvagg/morkdown (made with appjs)
04:23 <@konobi> funny how this is a quiet time of night usually
04:24 < ccowan> totally
04:24 < ccowan> I know there are people on and working
04:27 < chilts> konobi: not night time where I am :)
04:27 < chilts> late afternoon here, am almost ready to go home
04:28 < rvagg> NZ chilts?
04:29 < chilts> yep :)
04:29 < chilts> you?
04:29 < rvagg> AU, on the coast parallel with the top of NZ
04:29 < rvagg> I think we may have had this discussion before.. Wellington?
04:29 < chilts> Melbourne?
04:29 < ccowan> AZ here
04:29 < chilts> yeah, think we have :)
04:29 < rvagg> no, small town 3 hours south of Sydney
04:30 < chilts> ah right, ok :)
04:30 < chilts> hey, I like the name of your morkdown! :)
04:30 < ccowan> this is awesome... https://twitter.com/nodejs/status/240498409612664832
04:31 < davidbanham> Anyone come across a date string like this before? 26/Aug/2012:20:11:02 +0000
04:31 < ccowan> davidbanham: uh... nope
04:31 < ccowan> you can parse it using momentjs
04:31 < Aria> Yeah, I've seen those.
04:32 < davidbanham> ccowan: Cheers, I'll check it out.
04:32 < davidbanham> Aria: Figure out a better way of handling them than something like moment?
04:32 < Aria> Nope.
04:32 < davidbanham> :(
04:32 < Aria> Bogus format. Nothing likes using that.
04:33 < davidbanham> It's coming out of CDN logs from Rackspace Cloudfiles. Someone at either Rackspace or Akamai must just really hate developers.
04:33 < Aria> eeew.
04:34 < ljharb> davidbanham: i'd just report it as a bug. that's not a standard timestamp.
04:34 <@konobi> chilts: PST here =0)
04:34 < davidbanham> ljharb: Yep, I'll raise it with Rackspace. Catching up with someone from there soon.
04:34 < davidbanham> Wanted to check that it wasn't just a format I wasn't aware of before I called them dumb :p
04:36 < ljharb> i wouldn't recommend calling them dumb in any case
04:36 < davidbanham> ljharb: You're no fun.
04:44 < ccowan> I was onboarding a new developer today for working on our FE stuff... I forgot how overwhelming it is for people coming from PHP to Node.js.
04:45 < mscdex> it's not that overwhelming, it's mostly just the async part
04:45 < ccowan> yeah
04:46 < ccowan> I think that's the part that made his head spin a little
04:46 <@konobi> well, for FE guys, that shouldn't be a big differenece
04:46 < mscdex> ^
04:48 < ljharb> i think any non-JS developer has trouble when coming to JS. there's no classical inheritance, functions are first-class (which only came to php in like 5.3 or something), and there is prototypal inheritance.
04:49 < ccowan> yup... On the server side I think devs can understand the flow of how PHP works... do this.. do this... do this..
04:50 < ccowan> it's the async stuff that gets them
04:57 < ccowan> ls
04:57 < ccowan> oops!
06:34 < erione> how can we check if a process is waiting for input or not with node.js?
06:38 < austincheney> I have node installed on windows and was able to successfully execute   npm install bash
06:38 < austincheney> when i attempt to run    npm install daemon   i get this error: bash is not recognized as an internal or external command
06:39 < austincheney> what should i be doing differently?
06:39 < MerlinDMC> you should use a shell that is available ... or install bash
06:39 < MerlinDMC> not `npm install bash` ... that installs only the utilities to work with bash
06:39 < samholmes> What sort of escaping should I do to names and emails when using them in the from field when sending emails?
06:47 < maslo> hi guys I'm having difficulty compiling nodejs websocket module in ubuntu11 on my vps this is what it gives me https://gist.github.com/f79fc962466f94a999f1 I'd appreciate it if anyone could help me out I'm pretty new to linux
07:00 < astropirate> maslo still there?
07:01 < astropirate> i guess not :S
07:04 < austincheney> i installed bash for windows but i cannot figure out to change directories into c:\Program Files
07:04 < austincheney> seems bash does not like the space
07:05 < austincheney> how can I cd into that directory?
07:05 < freewil> try cd C:\\Program\ Files
07:05 < austincheney> thanks
07:05 < austincheney> freewil: that worked :)
07:06 < freewil> woo
07:30 < [AD]Turbo> hi there
07:40 < AAA_awright> I'd think Node.js could translate / into \ for Windows paths
07:40 < AAA_awright> That'd seem useful
07:40 < AAA_awright> And use "/c/Program Files/..." while you're at it
07:41 < mmalecki> AAA_awright: I think you can use "/Program Files" or so
07:41 < mmalecki> as in, Windows supports that
07:57 < balboah> whats wafadmin and where do I get the Tools dir of it? Have problems installing mhash npm because of: OSError: [Errno 2] No such file or directory: '/opt/local/bin/../lib/node/wafadmin/Tools'
08:19 < roiecohen> Anyone can help with knockout.js? Computed data-bind doesn't render for some reason, while "regular" observable work just fine. What could be the reason?
08:21 < alexseyer> anybody that knows how to use nodejs, I will pay if you can help me get just the hello world working...
08:22 < alexseyer> hello?
08:22 < radiodario> lol alexseyer 
08:22 < radiodario> there are tons of hello world tutorials out there
08:22 < radiodario> i'll help you for £1000
08:22 < alexseyer> yeah I know lol
08:23 < austincheney> radiodario: got one for running nodejs on windows?
08:23 < radiodario> upfront
08:23 < radiodario> i want the money first
08:23 < radiodario> lol
08:23 < alexseyer> I just need to get something working that has to run on nodejs
08:23 < austincheney> the windows install of node is turning out to be kind of a pain in the ass without some guidance
08:23 < radiodario> yes austincheney you want to install *ubuntu*
08:23 < radiodario> or some other linux distro
08:23 < radiodario> then nodejs runs fantastic
08:24 < radiodario> for windows you've got Visual Basic
08:24 < radiodario> i've heard its awesome
08:24 < chakrit> it is :p
08:24 < radiodario> it's
08:24 < austincheney> radiodario: i have node running on my server where its fine, but i need to run it locally for experimentation
08:24 < radiodario> you can always use putty
08:24 < alexseyer> so how about that hello world?
08:25 < radiodario> alexseyer: console.log('hello world')
08:25 < radiodario> boom
08:25 < alexseyer> I put node.js on windows and I try to follow the hello world tutorial and it just says ...
08:25 < austincheney> radiodario: actually WSH is turning out to be less of a pain in the ass to operate even compared to node on linux
08:25 < radiodario> what is WSH?
08:26 < austincheney> it is the JS command line interpreter that comes with windows
08:26 < austincheney> its makes JS in windows like perl is to linux distros
08:26 < alexseyer> $5 for 5 minutes of somebodies time that can walk me through the helloworld on windows
08:26 < chakrit> wouldn't that be VBS instead of JS?
08:27 < taky> 5$, oh wow
08:27 < austincheney> chakrit: it supports VB and JS equally
08:27 < taky> this guy is offering 5%
08:27 < taky> 5$
08:27 < taky> holy shit
08:27 < radiodario> alexseyer: install ubuntu
08:27 < taky> i'm about to lose my freaking mind
08:27 < alexseyer> yeah obviously all the nodejs people make $5000 an hour
08:27 < chakrit> alexseyer: it's probably easier to just install virtualbox / ubuntu
08:28 < taky> here, take this script
08:28 < chakrit> alexseyer: sudo apt-get install sshd and then you can access it from windows
08:28 < taky> to configure ubuntu
08:28 < austincheney> chakrit: the biggest difference is that it uses XML for configuration instead of common.js framework that node uses
08:28 < alexseyer> chakrit add me on skype - iguesseveryskypenameistaken
08:28 < chakrit> lolz man
08:28 < chakrit> don't post ur skype name on irc
08:29 < radiodario> alexseyer: cam2cam?
08:29 < gaYak> $5 and that skypename.. oozes confidentiality
08:29 < radiodario> lol
08:29 < taky> oh nevermind, i lost it
08:29 < taky> oosp
08:29 < radiodario> alexseyer: it might be easier to use python?
08:29 < radiodario> why exactly does it have to be nodejs?
08:29 < austincheney> sup inimino, do you have any guidance to get nodejs running on windows?
08:29 < taky> nodejs is sexier, radio
08:29 < radiodario> taky: but it sucks on windows
08:29 < radiodario> so they might wanna use python
08:29 < taky> who the fuck uses windows
08:30 < radiodario> these two punters
08:30 < taky> haha lamers
08:30  * radiodario points at alexseyer and austincheney 
08:30 < radiodario> nah i didn't say lamers
08:30 < austincheney> taky i run windows locally, like 85% of the rest of the world
08:30 < alexseyer> im just want to send an sms with this https://github.com/amper5and/node-google-voice
08:30 < taky> i used windows when i was 10 on aol 4.0, making scrollers
08:30 < taky> like a boss
08:31 < radiodario> alexseyer: http://code.google.com/p/pygooglevoice/
08:31 < radiodario> you can use the python library
08:31 < chakrit> it's pretty easy to run an ubuntu vm on windows. why go the pain?
08:32 < inimino> Sorry austincheney I don't know anything about windows. I am the 15%.
08:32 < austincheney> heh
08:32 < taky> i stopped using windows when i started taking programming seriously
08:32 < taky> how can you not have a terminal honestly i don't understand
08:32 < austincheney> taky: i take programming JS seriously and windows has nothing to do with that
08:33 < jim_> Microsoft isn't evil, just incompetent. 
08:33 < chakrit> it does. if you want to run something made on a *nix, it'll be 100x easier on a *nix
08:33 < radiodario> if you took programming JS seriously, you'd have a fixie bike, a moustache and you'd be sipping organic, free-range soya latte
08:34 < taky> not only that but as far as being a power-user, so much more you can do with a real terminal
08:34 < austincheney> taky: you dont need any kind of terminal to be js developer
08:34 < radiodario> hahaha
08:34 < chakrit> lol
08:34 < radiodario> ok austincheney really dude
08:35 < radiodario> it's too early in the morning for such hilarity
08:35 < radiodario> are you not allowed to install linux at work?
08:35 < radiodario> or are you scared?
08:35 < taky> i run mac, it's fine
08:36 < taky> i wrote scripts to simulate inetd guys don't worry about it
08:36 < austincheney> radiodario: yes, i am scared
08:36 < gaYak> taky: If really need to do something with terminal, you can hardly say PowerShell is incapable
08:36 < taky> https://s3.amazonaws.com/z90/df121d79b05981c5adad7e4f9b87ee76x.png
08:36 < taky> i shared the ss with a console alias
08:37 < taky> that i scripted
08:37 < taky> checkmate
08:37 < taky> yeah, you see vim in the dock, you'll be here someday
08:37 < radiodario> yeah gaYak powerShell is pretty good, but it's like from another planet
08:37 < taky> for now enjoy your dragging and dropping
08:38 < gaYak> radiodario: Sure it is, but so are Mac users ;)
08:38 < gaYak> radiodario: Just pointing out that there's nothing inherently wrong with using Windows with terminal, it's just not the same commands or syntax
08:38 < taky> can you even pipe in that interface?
08:38 < gaYak> Sure
08:39 < radiodario> yep yep my friend joe is able to make powershell dance to his every whim
08:39 < gaYak> It's a Object Oriented terminal
08:39 < chakrit> it does more than piping too i think
08:39 < chakrit> piping objects
08:39 < radiodario> can you pipe pipes?
08:39 < ljharb> gaYak: the filesystem is very different than unix, and that means your tools aren't as good.
08:39 < chakrit> but it's still windows
08:39 < radiodario> ceci n'est past une pipe
08:39 < gaYak> ljharb: Different equals worse?
08:39 < radiodario> yeah havent you heard romney
08:39 < ljharb> gaYak: no, but windows' filesystem equals worse.
08:39 < gaYak> I don't really pay attention to him other than humor
08:40 < gaYak> ljharb: That's a pretty far fetched ideology.
08:40 < austincheney> radiodario: are you trolling because you are bored?  you kind of sound like a child
08:40 < taky> be back in 10 or 15 to continue bashing all windows users
08:40 < gaYak> ljharb: How are your filesystem transactions working?
08:40 < ljharb> gaYak: it's not an ideology. i used windows for a long time. its filesystem sucks compared to unix's.
08:40 < onre> looks like it's the best discussion ever going on
08:40 < taky> dll, bho, msbuild.exe what a joke
08:40 < taky> brb
08:40 < chakrit> onre: definitely
08:40 < gaYak> ljharb: Sure, I do also. I dev in Windows/Linux, run production in AIX. 
08:41 < gaYak> ljharb: In technical level, NTFS no worse than what most filesystems provide
08:41 < gaYak> ljharb: And far more advanced in certain features
08:41 < gaYak> ljharb: There's no golden filesystem that's better in everything than something else
08:41 < gaYak> Not ZFS, not btrfs, not ext4, not NTFS, etc.
08:42 < ljharb> gaYak: i've had hard drives fail frequently. the NTFS ones were unrecoverable, almost always. the unix or mac ones were always mostly recoverable.
08:42 < erione> how can we check if a process is waiting for input or not with node.js?
08:42 < austincheney> ljharb: ssd
08:43 < ljharb> austincheney: that doesn't change the recoverability of the partition format, just the likelihood the drive will fail.
08:43 < gaYak> austincheney: SSDs don't protect from filesystem errors or even fail less often than HDDs
08:43 < austincheney> ah
08:43 < gaYak> ljharb: At this point I should prolly say that if a harddrive fails, throw it away and replace your pool with new one ;)
08:43 < gaYak> ljharb: But other than that, I've had corruption issues in almost everyfilesystem during the years
08:44 < chakrit> erione: afaik there isn't a direct way.
08:44 < gaYak> Can't remember failing our AIX system, but it's always connected to SAN, so haven't had really those issues
08:44 < erione> chakrit: any idea how to do it implicitly?
08:44 < gaYak> austincheney: Google is your friend with node.js on Windows really. It runs well in Azure as well.
08:45 < chakrit> erione: stream.write does returns a boolean which tells you wether the buffer is full or not (i.e. not yet written)
08:45 < austincheney> gaYak: the problem i have been having is that node will not work from cmd because it wants something like bash and bash will not work with node on windows because node installs into "program files" which is not specificed in the configs as "program\ files"
08:45 < chakrit> erione: what are you trying to do anyway?
08:45 < theblackbox> hello all, I'm trying to set up a Backbone Model hierarchy utilising inheritance and Backbone-relational, but I'm getting an error in my test case when I make a second new object('Error: Cannot instantiate more than one Backbone.RelationalModel with the same id per type!')…. I suspect I'm getting muddled between what is doing what and could use a pointer if anyone isn't too busy? http://pastebin.ca/2198940
08:46 < austincheney> as a result the windows install of node appears to be a failure, at least with running npm
08:46 < theblackbox> I've G'd the issue and found a few threads but it seems like what I'm asking is supported
08:47 < austincheney> then on top of this there appears to be no documentation about running node on windows as though it is supposed to just magically work once installed
08:47 < erione> chakrit: trying to run a C program with a 'scanf'
08:48 < chakrit> erione: can you not just write everything at once as soon as the process start and just wait for it to be consumed?
08:49 < erione> chakrit: yes i can, but i dont want to do it that way
08:53 < chakrit> erione: was reading this: http://stackoverflow.com/questions/450106/find-out-if-pipes-read-end-is-currently-blocking
08:54 < chakrit> erione: i think there's no simple way + node.js is actually pretty efficient at handling streams so I think it's not really that to do it like i said.
08:54 < chakrit> s/that/that bad/
09:27 < AndreasMadsen> how can I setup tako to gzip response
09:28 < gaYak> austincheney: Why would node require bash?
09:31 < theblackbox> hello all, I'm trying to set up a Backbone Model hierarchy utilising inheritance and Backbone-relational, but I'm getting an error in my test case when I make a second new object('Error: Cannot instantiate more than one Backbone.RelationalModel with the same id per type!')…. I suspect I'm getting muddled between what is doing what and could use a pointer if anyone isn't too busy? http://pastebin.ca/2198940
09:31 < theblackbox> looking at something utilising https://github.com/PaulUithol/Backbone-relational#property-submodel-types
10:00 < theblackbox> bah… I'm beginning to think I'm asking the impossible… or at least the wrong questions...
10:06 < sinclair_> hey all
10:06 < sinclair_> has anyone here had experiance with operational transformations?
10:07 < theblackbox> http://pastebin.ca/2198959 : Entity is a superclass containing the .sync overrides and another common function for it's subclasses. I want Assertion to have a relation containing Models of type Glob (along with other subModels inheriting from Entity)
10:09 < theblackbox> Assertion and Glob both inherit from Entity so the error I'm getting is because only ONE object of type Entity, is created for Backbone relational?
10:11 < AndreasMadsen> how can I setup tako to gzip output
10:18 < NuZZ> anyone use coffeescript here instead of js for all their js?
10:19 < freewil> of course
10:20 < NuZZ> I was thinking I would code modules in JS and coffeescript for site-specific code
10:20 < NuZZ> i wonder if the coffeescript node module has api
10:24 < adymitruk> hi all, I'm having an issue where node.js won't comeback after opening a mongodb connction
10:29 < NuZZ> elaborate?
10:33 < f0rk> Hi! I am trying to do a simple benchmarking on socket.io server and i am getting this error TypeError: Cannot call method 'payload' of null
10:33 < f0rk> this is the test client code http://pastebin.com/qnyCR7MG
10:37 < NuZZ> what line in the script procs the error?
10:40 < f0rk> node_modules/socket.io-client/lib/socket.js:327
10:40 < f0rk>     this.transport.payload(this.buffer);
10:41 < NuZZ> and what line in the script itself
10:41 < NuZZ> it should say
10:41 < NuZZ> im guessing
10:41 < NuZZ>   clients[i] = io.connect(host, options)
10:41 < NuZZ>   clients[i].emit('ident', ident)
10:41 < NuZZ> one of these
10:42 < NuZZ> the first line looks fine
10:42 < f0rk> problem is not in my coe
10:42 < f0rk> code*
10:43 < NuZZ> tbh I dont know :p. Unless the socket.io-client converts undefined to null...
10:43 < f0rk> it is in some async code of  socket.io-client
10:43 < NuZZ> well all I can say is be sure you're passing legit values
10:43 < f0rk> it works ok for n < 3000
10:43 < NuZZ> better check the repo I guess
10:44 < f0rk> but when socketio server becomes slow the benchmark breaks
10:45 < NuZZ> a typeerror is odd
10:45 < NuZZ> sounds like ur right about async derpiness imo
10:46 < f0rk> error only occurs if i try to set rather big number of connections, for example 3000 or more
10:47 < Mog> I'd like to use a node module, natural, to perform nlp in a js script but don't want to do any network stuff and so on. What's the best way to fo that in regard to not having to much overhead?
10:47 < Mog> s/fo/do
10:58 < f0rk> this is the full error report http://pastebin.com/MqcSxB2c
10:59 < cpg> hi, i am new to node and i am setting up a hubot as an exercise. i am getting an exception and i would like some help deciphering the error
10:59 < cpg> this is the error i get http://fpaste.org/jiCj/
11:01 < NuZZ> uh
11:01 < NuZZ> you sure you're loading the hubot module?
11:02 < cpg> NuZZ: not too sure, i followed the directions, though maybe i missed something
11:03 < NuZZ> require('hubot') and make sure it's in the node_modules folder that is in the same directory as the script you're executing
11:03 < NuZZ> npm install hubot, copy folder to node_modules 
11:03 < NuZZ> locally, in ur project
11:04 < cpg> i added it to package.json and did npm install
11:05 < cpg> i do not see it in node_modules/
11:05 < NuZZ> put it in there
11:05 < cpg> hubot-irc did show up there after npm install
11:05 < NuZZ> then require('hubot-irc')
11:06 < NuZZ> its based off the folder name
11:06 < NuZZ> same as require('./node_modules/hubot-irc')
11:07 < cpg> moment, let me provide the detail when i derailed
11:07 < cpg> the "put it there" part is not clear. first i cloned git://github.com/github/hubot.git
11:07 < cpg> cd hubot
11:07 < cpg> and then added the hubot-irc to the package.json
11:07 < cpg> then npm install
11:07 < NuZZ> have you used node before?
11:08 < cpg> and that put the hubot-irc in the node_modules/
11:08 < cpg> i did, months and months ago
11:08 < cpg> without deployment, etc.
11:08 < cpg> but i am clueless
11:09 < NuZZ> k just make a new project folder, call a file index.js, then start from there ;p
11:10 < NuZZ> make a folder called node_modules in there
11:10 < NuZZ> copy that hubot-irc module to ur that dir
11:10 < NuZZ> require it in ur index.js and do stuff
11:11 < NuZZ> just treat it like any module
11:11 < cpg> basically, i am trying to learn a little able packaging and deployment of node projects
11:11 < NuZZ> if ur not sure how modules work, check out the documentation/google for guides
11:12 < NuZZ> basically every file is a module
11:12 < NuZZ> everything else is just convention 
11:12 < cpg> kk
11:12 < cpg> i started from scratch
11:20 < wao> hey
11:20 < wao> is there some cli json validator?
11:21 < radiodario> hmm there's JSON.parse()
11:21 < radiodario> if it doesn't explode, it's valid Hason
11:21 < radiodario> lol Jason
11:23 < NuZZ> lol
11:23 < sriley> ah that reminds me of an software architect i spoke to a few years ago, "who's this jason you refer to"
11:23 < wao> I just need to know where I have error at which line :)
11:23 < wao> because rubyt won't telling me it
11:24 < NuZZ> ruby can be a bitch like that
11:43 < dylang> I've had trouble deploying since last night. Assertion failed: knp->data_type == KSTAT_DATA_INT32, file ../deps/uv/src/unix/sunos.c, line 349
11:45 < bnoordhuis> dylang: upgrade, it's been fixed
11:45 < dylang> bnoordhuis: what should i upgrade? or it was in the middle of one?
11:46 < bnoordhuis> dylang: what version of node are you running now?
11:46 < dylang> i've been trying 0.6.x and 0.8.x
11:46 < bnoordhuis> dylang: what version of 0.8?
11:46 < dylang> right now is 0.6.x
11:47 < bnoordhuis> dylang: upgrade to 0.8.8, it contains the fix
11:47 < bnoordhuis> dylang: or apply commit 0844e23
11:49 < dylang> bnoordhuis: "Error: Error spawning drone: no matching engine found"
11:49 < dylang> oh silly me, wrong channel
11:50 < dylang> this is a nodjitsu issue, not node
11:50 < dylang> but thanks for trying to help!
11:50 < bnoordhuis> my pleasure :)
12:02 < ACK__> is knowlege of c and c++ is essential to learn Node.js
12:03 < randomgry> No, it's not.
12:03 < ACK__> but i have read in some blog
12:03 < ACK__> how truth is that
12:10 < austincheney> gaYak: node may not require bash, but npm appears to
12:10 < austincheney> I may need to for go use of npm on windows and just manually drop the packages into the modules directory
12:15 < austincheney> gaYak: now i feel like a jackass, npm appears to operate just fine in windows out of the box its just the first package I attempted that failed.... daemon
12:16 < austincheney> i will repurpose that part of my node api
12:17 < bernaman> hi guys, i would like to spread my code over say 3 js files and use winston for logging. how would i make sure that every file level log call uses the same toplevel logger?
12:19 < bernaman> how can i "transport" the toplevel log instance to the other files?
12:20 < dhpe> bernaman: you can create a module where you export the log instance.
12:20 < dhpe> and then you can require that module and access the instance.
12:21 < bernaman> dhpe: i have to make sure to avoid cyclic requires right?
12:22 < bernaman> say i have a toplevel js "t" which requires a b and c modules but t would also provide the logging instance for the whole app (i.e. for code in a, b  and c) as well, can this be done?
12:23 < dhpe> create a logger module and require that from t, a, b and c.
12:23 < bernaman> ah thx dhpe
12:56 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:07 < jasonkuhrt> Has anyone had had problems using js-yaml cli? https://github.com/nodeca/js-yaml/issues/50
13:26 < nafis> clear
13:28 < solidoodlesuppor> Good Morning
13:29 < matehowsit> how are you
13:31 < solidoodlesuppor> Very well, in fact
13:33 < matehowsit> having some fun with node?
13:33 < NuZZ> everyday
13:39 < matehowsit> whats everyone working on
13:39 < deoxxa> reverse engineering an unknown serialisation format
13:40 < deoxxa> https://gist.github.com/3511525 << feel free to join in!
13:44 < context> matehowsit: do listen to him. you will go to prison
13:44 < deoxxa> \o/
13:44 < context> if you help him you are aiding terrorism
13:45 < deoxxa> it's true
13:45 < context> meh, ive done worse
13:46 < deoxxa> the serialisation thing has got me stumped for the moment
13:47 < deoxxa> the decryption was the easy part - ollydbg and a little bit of poking around got me the encryption key quickly enough
13:47 < context> do you even know what each line is doing or anything like that
13:47 < deoxxa> they're some kind of serialised objects - i know some of the content
13:47 < deoxxa> i know, for example, that the strings are ucs2-le
13:48 < deoxxa> and they seem to be suffixed with some kind of numeric identifier (perhaps for a position in an array?)
13:48 < deoxxa> the number of ffffffbb occurences lines up with the first uint32le after the header
13:48 < deoxxa> so i'm making a little progress, but nothing substantial
13:49 < deoxxa> doesn't appear to be any widely used format either, i've googled some of the more distinctive stuff for an hour or so and came up with nothing
13:50 < bradleymeck> isaacs: in node-tar is there a way to drop the dirname from the start of all the entries? been reading code most of the night
13:50 < bradleymeck> cant see a way to trick it but npm changes it to package/
13:58 < context> http://coding.fm/
14:20 < EuroNerd> Is it possible to easily make user auth/login for my web app with node+mongo, or is it safer to use a standard PHP+MySQL method?  (I've got node+mongo on a standard LAMP server.)
14:23 < DPMN> Hi all!
14:23 < theblackbox> Hello all, I'm still struggling to implement the type of inheritance model I would like utilising backbone-relational (http://pastebin.ca/2198959)
14:24 < DPMN> Can anyone help me ? I have a problem with the nodejs installer (msi)
14:24 < DPMN> I have a rollback at the end of install without any log
14:27 < EuroNerd> DPMN, I can't help you, I've got node.js on Ubuntu. Even though I'm a Windows user, I realize I'll have to move my little app onto a linux server eventually (VPS), so I already use linux locally (in a virtual machine).
14:31 < russfrank> just started using nock, it's pretty much awesome
14:33 < DPMN> OK i thought that I was not alone having this trouble. There are a windows installer on the main website but it don't work, it's a bad thing, I will try othes solutions
14:40 < jim_> Can anyone point me to some best practices/proven techniques for horizontally scaling in node?
14:42 < deoxxa> jim_: anecdotal evidence is best evidence - i'm using seaport and a custom http load balancer successfully in production, handling quite a bit of traffic
14:46 < jim_> Are you using redis as a back end message system so your disconnected node services can talk to each other?  Seems basic enough to set up this way.
14:47 < deoxxa> jim_: i'm not - for the most part the services don't need to communicate
14:48 < jim_> Gotchya.  In my case they do, but I have good idea how to set this up.
14:48 < deoxxa> mmm
14:49 < deoxxa> if i had to let them communicate, i'd probably finish off my DHT implementation and have them shove messages around to each other
14:51 < jim_> The dht modules out there are not any good?
14:51 < jim_> (assuming there are some - I haven't looked)
14:52 < deoxxa> there was only one when i started playing with the idea
14:52 < deoxxa> and it wasn't complete
14:52 < deoxxa> and had been dormant for a while
15:22 < bradleymeck> creationix: didn't you have something for protocols with json objects
15:22 < creationix> just my streaming json parser
15:23 < bradleymeck> creationix: ah
15:25 < creationix> bradleymeck, my smith protocol can use json though
15:25 < creationix> if you want yet another rpc protocol
15:25 < creationix> (it's kinda like dnode-protocol)
15:25 < creationix> I usually use msgpack though
15:25 < bradleymeck> creationix: really just want to tack a statemachine to an id
15:26 < bradleymeck> but ill get it handled
15:26 < timkuijsten> i'm having trouble in proxying an event on a new Object (Queue) I've created. I think it has something to do with the context it's in..
15:27 < timkuijsten> this code creates an endless loop, unless i change the name of the event to something else than data, http://dpaste.com/793149/
15:29 < bradleymeck> timkuijsten: the 'this' keyword will reference whatever emitted the event so in this case var that === var stream from above which emits 'data' which calls onData which emits 'data'
15:30 < timkuijsten> bradleymeck: i thought so, but if I change that in #12 to Queue, it says the method emit does not exits...
15:30 < bradleymeck> timkuijsten: add a .bind(this) when you are hooking up the events if you do it that way
15:31 < bradleymeck> timkuijsten: it would say that probably if Queue does not extend eventemitter
15:32 < bradleymeck> .bind(this, stream) , then .onData will have the context of bind's first argument (the queue in this case) and add an initial argument of the stream
15:32 < timkuijsten> bradleymeck: it does, setting it up in the constructor as well as with util.inherits
15:33 < bradleymeck> timkuijsten: oh wait its not bound at all since .holder doesnt live past property access, use .bind
15:33 < timkuijsten> bradleymeck: tnx, i'll try
15:34 < bradleymeck> timkujsten: well not .holder the "holder" reference for inferred context of the "this" keyword doesn't persist if you just use the . operator is what i meant
15:34 < bradleymeck> cant type
15:38 < timkuijsten> bradleymeck: can't follow you on that one, but i assume i should use bind in #3-#5?
15:38 < timkuijsten> reading up on .bind..
15:38 < bradleymeck> timkuijsten: yes
15:45 < jaha> npm update doesnt seem to grab "newer" releases when using the format "2.x", for example i have express 2.5.9 installed but npm update wont update to 2.5.11
15:45 < jaha> what am i missing?
15:45 < tjholowaychuk> jaha hmm that's weird they're definitely in npm
15:45 < tjholowaychuk> best to use an explicit 2.5.11 anyway though
15:46 < milani> 2.x means if you have 2.x it is enough.
15:46 < jaha> tjholowaychuk: yea i see them when doing npm info express, i just used express as an example but it doesnt seem to work with anything else either
15:46 < milani> I guess.
15:47 < tjholowaychuk> jaha did you try $ npm update
15:47 < tjholowaychuk> ?
15:47 < tjholowaychuk> or rm -fr node_modules and re-install haha
15:47 < timkuijsten> bradleymeck: changing L3 to stream.on('data', this.onData.bind(this)); works great, tnx :)
15:47 < jaha> but npm update (according to the site) is supposed to look for the highest version which fits the definition in package.json
15:48 < jaha> tjholowaychuk: yea i am using "npm update"
15:49 < jaha> tjholowaychuk: would rather not reinstall ;)
15:49 < tjholowaychuk> it doesnt take long
15:49 < tjholowaychuk> to rm -fr node_modules && npm install
15:49 < tjholowaychuk> clear the cache etc
15:49 < tjholowaychuk> the cache gets us into lots of trouble i wouldn't be surprised if it was that
15:55 < jaha> yea guess ill have to go that route, just wanted to make sure I wasnt doing something wrong
15:56 < jaha> tjholowaychuk: by the way, great work on 3.0, loving it
15:57 < tjholowaychuk> thanks!
15:57 < jaha> must be a cache issue, just explicitly set 2.5.11 and "npm update" still doesn't grab the new version
15:58 < tjholowaychuk> wtf lol
15:58 < tjholowaychuk> yeah try $ npm cache clear
15:58 < tjholowaychuk> clean
16:01 < jaha> nope… (npm version 1.1.43) looks like im reinstalling
16:01 < jaha> it looks like it download them, just doesnt install em
16:03 < qFox> how can i hook into require such that whenever require is called, i get a chance to post-process the fetched source and rewrite it? (like coffeescript would need). 
16:03 < qFox> oh. meh. afk :p
16:08 < matbee> I've got a question... I'd like to inject javascript code into the <head> and <body> of static pages.... has anyone done this? Would the best way be to chunk the data of the page---detect the body/head tags?
16:09 < NuZZ> templates
16:09 < NuZZ> or simply regexp
16:09 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:10 < matbee> well I won't have control over the content of the pages-- so it wont be using templates
16:10 < NuZZ> file.replace(/<head>/, '<head><script>herp = derp</script>')
16:11 < NuZZ> though u would do that to the close tag
16:11 < NuZZ> btu uh
16:11 < NuZZ> jquery if it's dynamic
16:11 < NuZZ> or just regex ... again
16:11 < NuZZ> I am tired, by dynamic i mean... I'm so confused.
16:11 < matbee> haha, that's fine
16:12 < NuZZ> so... you are doing this on the client or node?
16:12 < matbee> node
16:12 < matbee> reading the client page first
16:13 < NuZZ> read the static file into a string and minipulate it with regular expressions
16:13 < NuZZ> if it's that simple...
16:13 < matbee> yeah, that's what i was thinking
16:13 < matbee> it really is that simple :P
16:13 < NuZZ> coolio
16:22 < mmdm> anyone knows what is a good ide for nodejs on ubuntu>\
16:22 < NuZZ> sublime text is okay
16:23 < NuZZ> not sure, but if komodo ide works, try that. very robust, just a tiny bit slower and less customizable
16:23 < mmdm> ok. thanks
16:24 < justicefries> don't use an ide.
16:24 < justicefries> or use cloud9
16:24 < mmdm> do you know of any free ide?
16:24 < mmdm> I can't get cloud9 to work :(
16:25 < milani> mmdm, why do u need an ide on linux?
16:26 < milani> just use sublime with some additional plugins
16:26 < milani> it works!
16:26 < mmdm> maybe cos I am an idiot?
16:26 < mmdm> sublime need money?
16:26 < milani> no.
16:28 < NuZZ> i have been with sublime and komodo mostly. I switched to sublime due to the plugins, light weightedness
16:28 < context> http://i.imgur.com/XfzG3.png
16:28 < NuZZ> though, komodo is badass. kinda wish I didnt switch
16:28 < NuZZ> sublime's syntax highlighting is kinda terrible
16:28 < NuZZ> in comparison
16:28 < mmdm> ok
16:29 < NuZZ> and the codeintel komodo uses *actually works* where as the plugin for sublime is useless
16:29 < NuZZ> i totally miss that
16:30 < mmdm> ok
16:32 < NuZZ> oh damn http://www.activestate.com/komodo-ide/whats-new
16:32 < NuZZ> all the reasons I left komodo for are apparently being fixed...
16:32 < mmdm> komodo need money?
16:32 < NuZZ> lol
16:33 < NuZZ> go pirate it if you're too poor to bother
16:33 < justicefries> or use something free like vim.
16:33 < justicefries> it's pretty low to pirate the tools you professionally use.
16:34 < justicefries> especially when there's 25 years of those tools available for free - emacs/vim, and they work fine for many people.
16:34 < milani> vim isn't an IDE. its a simple editor:)
16:34 < mmdm> I usually prefer open source tools
16:34 < NuZZ> it's pretty low to confine yourself to tools limited by your budget
16:35 < NuZZ> and yes, open source is amazing. please show me an IDE that is as robust as the payed-for and I am 100% with ya!
16:35 < justicefries> NuZZ: i don't think piracy should be advocated in this channel. :)
16:36 < mmdm> eclipse and netbeans are fine :)
16:36 < justicefries> milani: if you use vim, unix is your IDE. ;)
16:36 < milani> justicefries, ;)
16:36 < milani> hey take it easy just start coding
16:36 < milani> and linux has all tools for you, you just need a plugin in sublime to show you terminal
16:37 < milani> and that's all!
16:37 < mmdm> haha true ture
16:37 < justicefries> i've searched for that plugin. :/
16:37 < milani> justicefries, it's there
16:37 < milani> but not as good as I want
16:37 < justicefries> ahh.
16:37 < milani> but the custom build system is fine
16:37 < milani> and enough for me.
16:37 < NuZZ> sublime is promising... just wish it would mature already
16:38 < milani> I just setup build system to run the application for me
16:38 < milani> and it shows the output! which is enough.
16:44 < NuZZ> i just dont get why I have to go into sublime's javascript lang interpreter thinger and fix mistakes in the way it is highlighted. Gah!
16:45 < NuZZ> it's like, the guy who made it, who used python, went all out on python and neglected the other languages and no one else bothered to improve them either
16:48 < qFox> can somebody tell me how to hook into require?
16:50 < qFox> i'm looking for a way to change the source code after it has been fetched, before it is executed
16:51 < russfrank> qFox: just grab the source yourself, modify it, and eval it 
16:51 < russfrank> in a function after doing var exports, module = {};
16:52 < qFox> russfrank: i need a generic drop-in solution for existing projects. eval is not the way to go
16:53 < qFox> that's why i need to hook into require
16:53 < boutell> Hi. Who understands 'forever' internals? I'm trying to find the implementation of the minUptime and spinSleepTime options. As far as I can tell they are set up but never implemented anywhere
16:53 < qFox> ryah said it was possible, just to ask here :)
16:54 < AvianFlu> boutell: check out `forever-monitor`
16:54 < AvianFlu> that stuff was moved into a separate module
16:54 < AvianFlu> also, I'm one of the maintainers, so I can probably help you figure stuff out :)
16:55 < boutell> AvianFlu: ... which is a dependency. Of course. Thank you.
16:59 < boutell> AvianFlu: very cool. Has anybody figured out why the log files ignore the -o option and friends and still go to .forever?
17:00 < boutell> (I could have just asked you what the default behavior is - kill the kid forever - which explains why my daemon doesn't come back if redis goes away for a while)
17:00 < AvianFlu> boutell: I've just this morning assigned someone to investigate :)
17:00 < qFox> russfrank: so do you know of a way to actually hook into require itself?
17:00 < russfrank> qFox: no, I dont think it's possible
17:00 < qFox> hm okay
17:01 < AvianFlu> so, while it seems to be sporadic and/or only happen on certain systems, we'll figure it out presently
17:01 < russfrank> without grabbing require doing toString editing the source and doing new function or something equally heinous 
17:02 <@ryah> qFox: ask isaacs 
17:02 < qFox> there is a way?
17:02 <@ryah> i forget where the hook is, but there is one
17:02 < qFox> okay great
17:02 < boutell> AvianFlu: thank you
17:03 < boutell> AvianFlu: it's a minor annoyance. Otherwise forever rocks for us. We built it into Stagecoach's default scripts: https://github.com/punkave/stagecoach
17:04 < AvianFlu> boutell: nice!
17:11 < mmdm> thanks all for your help. nite
17:11 < EuroNerd> Is it possible to easily make user auth/login for my web app with node+mongo, or is it safer to use a standard PHP+MySQL method?  (I've got node+mongo on a standard LAMP server.)
17:11 < EuroNerd> sorry, scrap that, i'll do my homework first
17:14 < ClaudioAlbertin> EuroNed, it's probably safer with node.js
17:14 < ClaudioAlbertin> *EuroNerd
17:17 < qFox> russfrank: fyi; this was what i was looking for: https://github.com/joyent/node/pull/3125/files
17:18 < EuroNerd> ClaudioAlbertin, copy that.
17:19 < ClaudioAlbertin> copy what, EuroNerd?
17:20 < EuroNerd> ClaudioAlbertin, lol, that's an expression. Military, I think. I thought you'd know that from the movies... ;)   It means I've received your message.
17:20 < Mehuge_> Hi all.  Why do I get Error: process.stdout cannot be closed. exception when node.js completes?
17:21 < Mehuge_> events.js:66         throw arguments[1]; // Unhandled 'error' event  ^ Error: process.stdout cannot be closed.     at WriteStream.startup.processStdio.process.__defineGetter__.stdout.destroy.stdout.destroySoon (node.js:359:20) 
17:21 < ClaudioAlbertin> I'm not a native english speaker, EuroNerd, I have troubles with those seemingly meaningless expressions
17:22 < russfrank> qFox: oh, lol
17:22 < russfrank> knew about that but didn't know it could be used to override .js files.. 
17:22 < russfrank> interesting find
17:22 < EuroNerd> ClaudioAlbertin, neither am I.  Maybe I just watch too much films... ;)
17:23 < ClaudioAlbertin> I don't watch many english films
17:23 < qFox> russfrank: well, cant take credit for it, but yeah :)
17:50 < Almindor> is there a way to write an object as json but on a single line?
17:50 < ClaudioAlbertin> of course, Almindor
17:50 < russfrank> Almindor: JSON.stringify
17:50 < Almindor> I thought JSON.stringify used multiple lines
17:51 < justicefries> is there a current promise/deferred module?
17:53 < justmoon> is there any way to get the build type in a .gyp, i.e. a variable that evaluates to "Debug" or "Release" depending on whichever it is?
17:53 < ogk1000> when would it be best to use node.js for a websitE?
17:55 < supsup> when you wanna dazzle some people with buzz words.  Node.js socket this io up n ear.
17:55 < supsup> jk.
17:55 < ogk1000> lol supsup 
17:56 < ogk1000> if im building mainly WP sites, then its probably not for me?
17:56 < TooTallNate> justmoon: use $(Configuration)
17:56 < TooTallNate> justmoon: for example, the addon.gypi file has: "'libraries': [ '-l<(node_root_dir)/$(Configuration)/node.lib' ],"
17:56 < justmoon> TooTallNate: thanks!
17:56 < TooTallNate> yup
18:01 < russfrank> Almindor: only if you tell it to
18:02 < russfrank> by default it doesn't use whitespace at all
18:06 < jocafa> tjholowaychuk:  any opinion on cmake?
18:06 < tjholowaychuk> havent used it much
18:06 < jocafa> fair enough.  i haven't either
18:06 < jocafa> still rocking make.
18:06 < tjholowaychuk> im happy with make
18:09 < joshontheweb> I am trying to figure out how to pass state inbetween modules using require().  I have a views.js file that attaches several views to exports, however in some of the views I need to be able to access a CDN wrapper that I instantiated in server.js
18:10 < joshontheweb> I have seen people do require('views.js')(app)
18:10 < russfrank> joshontheweb: have the views be constructed based on some existing state
18:10 < joshontheweb> but then I'm not sure how to return my views 
18:10 < russfrank> ie expert constructors for the views
18:10 < russfrank> export*
18:11 < russfrank> then do var views = require('./views');  var editView = new views.EditView(cdn, etc); 
18:11 < joshontheweb> russfrank thanks, ill try that
18:11 < russfrank> doesnt ahve to be a 'constructor' (ie function with some stuff on its prototype), use whatever method of making objects is prettiest to you
18:12 < russfrank> np
18:15 < ACK__> what yoy think on this => https://mail.google.com/mail/?tab=wm#inbox/139635eecc74e1a9
18:25 < bradleymeck> isaacs: is there an example of adding a single entry to an archive using node-tar's tar.Pack().add()? with properties and all, it all seems to be fairly reliant on fstream?
18:27 <@isaacs> bradleymeck: yeah, it is
18:27 <@isaacs> bradleymeck: you can just .add(entry) if entry has the fstream-style data attached ot it, and streams data/end events in
18:27 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:28 <@isaacs> bradleymeck: but node-tar is basically just a thin parser/encoder for fstream objects.
18:28 < bradleymeck> isaacs so just make an fsStream.Writer then i guess? and write to it?
18:28 <@isaacs> bradleymeck: no, the entry should be an fstream.Reader
18:28 <@isaacs> bradleymeck: and tar will read from it
18:28 < bradleymeck> isaacs: ill try it thanks
18:28 <@isaacs> bradleymeck: i'm not super happy with the api
18:29 <@isaacs> it's kind of lunky
18:29 <@isaacs> *klunky
18:29 < bradleymeck> isaacs: im working a lot with it on this build server so if you update it let me know
18:29 <@isaacs> k
18:29 <@isaacs> bradleymeck: if i update the api significantly, i'll bump the version appropriately
18:30 <@isaacs> depend on 0.1.x and you shoudl be fine
18:30 <@isaacs> or ~0.1.18 or whatever you're using
18:43 < _rockbot_> hi all! super pumped for summercamp next week :-)
18:43 < _rockbot_> anything I should remember to bring?
18:47 < tasslehoff> in formidable, is an incoming file completed when parse() is called? 
18:47 < taky> vim
18:47  * tasslehoff is struggling a bit to understand timings and stuff using node.js/express :)
18:50 < bingomanatee> good morning all
18:50 < bingomanatee> Has anyone ever tried using a Backbone model server side with node?
18:52 < nlf> bingomanatee: one of my coworkers wrote a great blog post about it - http://andyet.net/blog/2011/feb/15/re-using-backbonejs-models-on-the-server-with-node/
18:52 < bingomanatee> thats so funny - looking at that now.
18:52 < bingomanatee> Thanks - I reposted it to @sfjavascript.
18:53 < nlf> you bet
19:05 < ccowan> Does anyone use VirtualBox for their development enviroment?
19:05 < davve> hey all. i have some callbacks that are called once my childprocess.exec is done and sends them off to a referenced socket. this works but only the first time i issue a callback. after that only every other time so i suspect it may have to do with not closing the cp properly but im not sure. any ideas?
19:05 < RLa> ccowan, yes
19:06 < ccowan> Are you running your guests as 64bit or 32bit? I've always run them as 64bit
19:06 < ccowan> but I'm wondering if there is really any benifit to that
19:06 < dhpe> ccowan: yes. i'm using 64bit guests.
19:07 < dhpe> binary compatibility at least.
19:07 < ccowan> yeah
19:08 < ccowan> I've always used 64bit 
19:08 < ccowan> just wondering what everyone else is doing.
19:14 < owen1> is there a way to view render markdown file with git styling on my client machine, to test it's look before i push to git?
19:17 < russfrank> owen1: https://github.com/chjj/marked
19:21 < RLa> ccowan, using 32bit since host is currently 32bit
19:22 < RLa> btw, wouldn't 32bit guest save mem on 64bit host compared to 64bit guest?
19:22 < russfrank> AvianFlu: is ncp supposed to preserve directory structures
19:23 < AvianFlu> yeah
19:23 < AvianFlu> it's supposed to be cp -r
19:23 < AvianFlu> all discrepancies are unintentional and should be reported :)
19:23 < AvianFlu> except when they're weird and lame
19:23 < qFox> isaacs: here?
19:24 <@isaacs> yo
19:25 <@isaacs> about to head out though.
19:25 <@isaacs> what's up?
19:26 < qFox> isaacs: do i assign the resulting string to module._compile for node to parse it after i'm done?
19:27 < qFox> that seems to be what i'm reading here http://coffeescript.org/documentation/docs/coffee-script.html but i'm not proficient in cs 
19:27 < qFox> or ... anything in cs.
19:29 <@isaacs> qFox: just use the require.extensions, and set a different extension than js for your special files
19:29 <@isaacs> or better yet, do this stuff outside of the "loading a module" flow./
19:29 < qFox> yeah but where do i put the resulting string? it feels like module.exports would expect a JS value, rather than the source code
19:29 <@isaacs> yes, module.exports requires a js value
19:30 < qFox> or really just this? require.extensions[.js] = function(module, file){ var str = fs.readFileSync('file', 'utf8'); module.exports = translate(str); };
19:30 < tasslehoff> If a client has started a file upload and I detect that the file is growing to large, is there no pretty way to abort the transfer and tell the browser why? 
19:30 <@isaacs> qFox: no, at that point, you have to take over the actual compilation and running of the module.
19:31 < qFox> well crap.
19:31 <@isaacs> qFox: truly, i cannot discourage you strongly enough regarding this approach.
19:31 <@isaacs> back up three steps and re-evaluate.
19:31 < qFox> so that coffeescript thing seems to assign it to module._compile
19:31 <@isaacs> what are you trying to do?
19:31 < qFox> alright. i've created a heatmap
19:31 <@isaacs> yes, coffeescript's require() hijacking loader is utter and complete crap.
19:31 <@isaacs> it's full of very subtle bugs.
19:31 < qFox> i'm using my js parser to parse the source code, modify it to add ping() calls, and run it
19:31 <@isaacs> and is the source of most of the animosity towards that language.
19:32 <@isaacs> k
19:32 < qFox> that way i can get a count on how many times each statement and expression is executed
19:32 < qFox> since there's no other ubiquitous way of getting that information, i need to change the source code
19:32 <@isaacs> i'd suggest that you run your compiler thingie ahead of time, write the resulting code to a different file, and run that instead.
19:32 < qFox> i'm fine with artifacts like slowing down the code
19:32 <@isaacs> sure.
19:32 <@isaacs> you're writing a code coverage measuring tool.
19:32 <@isaacs> i get it
19:32 < qFox> yes, that would be a work around. but still a work around
19:33 <@isaacs> no, that would be the ideal way to do it; anything else will be (more) buggy and error-prone.
19:33 < qFox> preferably i'd just require('heatmap') and have the stats like that
19:33 < qFox> okay so i dont get it
19:33 < qFox> maybe you can explain
19:33 < qFox> i get that the module system is complex btw
19:33 < qFox> dont worry
19:33 <@isaacs> what about node heatmap.js foo.js
19:33 < qFox> but this single step, why is it so complex?
19:33 <@isaacs> qFox: please go read lib/module.js
19:34 < qFox> that's not really an answer... 
19:34 < motiooon> what is the best nodes modeule for file uploads
19:34 < motiooon> drag and drop file uploads
19:34 <@isaacs> qFox: it is the only answer.
19:34 < motiooon> ?
19:34 <@isaacs> qFox: any explanation i give you in english will not give you the information you need, or help you find the answers you want.
19:34 <@isaacs> qFox: except to say, "I woudln't do it that way.  I'd do it this other way instead."
19:34 <@isaacs> but you want more detail than that.
19:34 < dnnsmanace> i am looking for some help with crypto.createHmac
19:34 <@isaacs> so... go get it :)
19:35 <@isaacs> qFox: there may even be a clever way there that i'm not thinking of.
19:35 < qFox> oh come on. i'm looking for a way to change a string to another string, prior before actually interpreting it. the way module.extensions work (sync) would be perfect for that. you're saying it's complex, i ask why, you say read the source code of this (big?) file?
19:36 < dnnsmanace> crypto.createHmac with the update() field, i am passing an object into it but it wants a string or buffer
19:36 <@isaacs> qFox: if you want to dive into the mess that is the node module system, then just dive in.
19:36 < dnnsmanace> why does it want a string of buffer and how what do i do with my object? :)
19:36 < maxogden> qFox: see also http://nodejs.org/api/modules.html
19:36 < qFox> for whatever complexity module.extensions introduce, i cant see a single reason it wouldnt work for rewriting a string after it has been fetched...
19:36 <@isaacs> qFox: if you want a pat "do it this way" answer, then my answer is, precompile it
19:36 < qFox> yeah, that's clear.
19:36 < freewil> dnnsmanace, use JSON.stringify(object)
19:36 <@isaacs> qFox: the reason you can't see a single reason why it wouldn't work, is because you haven't looked where the reasons are
19:36 <@isaacs> qFox: the code will inform you, i promise.
19:37 < Industrial> Anyone use Passport? I'm trying the Local Strategy but on POST /login my passport.authenticate 'local', cb isn't firint it's callback. SO the local strategy isn't even entered and the request hangs.
19:37 <@isaacs> qFox: it's about 500 lines.  the functions are short, and there are a lot of comments.
19:37 < qFox> i'd ask if you'd take a pull request for it if i'd make one, but i guess i already know the answer anyways.
19:37 < dnnsmanace> freewil: would you look at this gist: https://gist.github.com/3517706
19:37 < dnnsmanace> line 26
19:37 < qFox> i'll check it out. 
19:38 < freewil> dnnsmanace, s3Policy -> JSON.stringify(s3Policy)
19:38 <@isaacs> qFox: since you actually want to instrument the post-compiled JS objects, you probably actually will need to wrap something around some private function on the Module.prototype
19:38 < freewil> dnnsmanace, asssuming that is the proper format s3 needs
19:39  * isaacs gotta run, good luck, happy RTFS-ing :)
19:39 <@isaacs> qFox: and, from the bottom of my heart,
19:39 <@isaacs> qFox: as you read lib/module.js
19:39 <@isaacs> qFox: just let me say...
19:39 <@isaacs> qFox: i'm so so sorry.
19:39 <@isaacs> ;)
19:39 < russfrank> lol.
19:39 < Industrial> :F
19:39 < dnnsmanace> freewil: will try thanks
19:39 < qFox> i wish you were sorry for the missing semi's, but i suppose that's not what you're referring to ;)
19:39 <@isaacs> node-core is full of semis.
19:39 <@isaacs> don't worry
19:40 < qFox> anyways. i did not mean to poke into the bee hive that's called modules. i just want a hook into changing the fetched source code. that's all
19:40 <@isaacs> no, i'm sorry for the convoluted mes that is the node modules system.
19:40 < qFox> i suppose everybody has their own beef
19:40 <@isaacs> it's kindof brittle.
19:40 <@isaacs> and carries a lot of legacy
19:40 <@isaacs> and we'll never change it
19:40 <@isaacs> or, if we do, it'll probably be in a new thing, called something other than node.
19:40 < qFox> so it _is_ JS after all
19:41 < Industrial> NodeLLVMJs !
19:41 < maxogden> pizza.js
19:41  * Industrial hides under his rock
19:44 < qFox> isaacs: skipping over most of it, on line 300 it creates a new Module. since i dont see hte file being fetched anywhere else, isn't that actually where i need to look?
19:45 < dnnsmanace> freewil: does this look like proper sha1? O5UT92kRkVjYxzTV1YhiHtne77w=
19:47 < RLaa> isn't that base64 encoded something?
19:48 < freewil> dnnsmanace, yeah it'
19:48 < freewil> .. is 140 bits
19:48 < dnnsmanace> the = isnt weird?
19:48 < freewil> err 160
19:48 < freewil> thats base64
19:48 < freewil> does it need to be hex?
19:49 < qFox> isaacs: ah no. all the way in the end. in the definition of Module._extensions['.js']. for my case, the rest of the module code doesnt really matter tbh.
19:49 < qFox> anyways. gtg too. cu
19:54 < ccowan> RLa: re:64vs32 I think so 
20:02 < ekryski> creationix: have you gotten node running on ARM before?
20:02 < Hupo> so has anyone around here used node-webkit?
20:02 < ekryski> I'm trying to get it running on my pandaboard
20:02 < Hupo> because I was thinking of toying around with that for doing desktop node applications
20:03 < stagas> Hupo: http://appjs.org/
20:03 < Hupo> stagas: yeah, I saw that earlier
20:04 < Hupo> it seems to be intended for pretty much the exact same thing as node-webkit
20:04 < Hupo> hell it even does the same thing of combining node and chromium into one package
20:04 < owen1> russfrank: thanks for marked. it's great. is there a way to tell it to output html with github style css?
20:04 < owen1> russfrank: for example, 2 tabs in github create a nice light blue box
20:05 < milani> Hupo, appjs uses normal node vs node-webkit which uses modified node as far as I know.
20:05 < milani> Hupo, and also the time I started appjs, node-webkit only had webkit, not chromium:)
20:05 < dnnsmanace> anyone know about  Access-Control-Allow-Origin when uploading to s3?
20:06 < russfrank> owen1: you can do --gfm I think for github flavored markdown but i dont think itll do github css
20:06 < russfrank> rather i dont think it'll do github's *specific* styling but you could probably just steal that from the site ;P
20:06 < Hupo> milani: so does using appjs require the user to have node installed separately, then? because from what I got node-webkit will run with no separate node installation required
20:07 < milani> Hupo, precompiled packages contain node.
20:07 < milani> but you can also use npm to install appjs.
20:07 < Hupo> okay
20:07 < Hupo> well
20:08 < Hupo> it'll probably be a while before I dabble in node desktop apps anyway since for the one project I'd like to do, there doesn't seem to exist a good component for one functionality I'd like
20:09 < Hupo> namely I'd just want a simple and fast image resizing library that supported lanczos resizing, but such a thing does not seem to exist
20:09 < tasslehoff> I'm getting tired of pestering you ppl with simple questions, so I'm gonna educate myself. Is nodebeginner.org a nice start for a ... node beginner, or have you got any other recommendations?
20:10 < Hupo> sure I could use any of the graphicsmagick or imagemagick bindings but frankly neither of those aren't that fast
20:10 < milani> Hupo, then build one!
20:10 < milani> ha?
20:10 < Hupo> milani: with my level of C++ skills I'd probably make something worse than what gm/im offers
20:10 < Hupo> speed-wise
20:11 < milani> Hupo, you find a library, you create a binding. it's not that much hard. use samples in docs.
20:11 < Hupo> I should coax someone to port the resizing algorithms from avisynth to a separate library or something
20:11 < Hupo> milani: problem is that there is no such a library
20:11 < Hupo> seriously
20:11 < milani> oh.
20:11 < Hupo> I've spent a good time even looking for a library that would offer that, but nope
20:12 < Hupo> there's stuff like vips which would be fast but the best you can get out of that is bicubic apparently
20:12 < milani> Hupo, avisynth is for videos?
20:12 < Hupo> yeah
20:12 < Hupo> I have some background in video stuff
20:12 < milani> and you want to use the same for images?
20:12 < Hupo> avisynth has great built-in resizing functionality
20:13 < milani> ok it receives a clip
20:13 < milani> and a target with and height
20:13 < milani> and a lot of resizing algorithms
20:13 < Hupo> it's got all the usual things, lanczos, spline and so, and it's also damn fast at the resizing
20:14 < milani> you want lanczos only?
20:14 < Hupo> well yeah, wouldn't really need anything else
20:14 < Hupo> lanczos would be sufficiently high quality for both up- and downscaling
20:15 < milani> where is the source
20:15 < milani> of sourceforge
20:15 < milani> I hate that.
20:15 < owen1> russfrank: got it
20:17 < Hupo> but really, it's quite funny how a tool for video processing has some of the simplest and fastest resizing tools available
20:18 < Hupo> I've used it many times for upscaling and filtering wallpapers
20:19 < milani> wallpapers resizing needs speed?
20:19 < milani> :D
20:19 < Hupo> my program wouldn't be about that
20:19 < Hupo> I'd like to build a comic reader and have resizing functionality in it
20:22 < Hupo> and more specifically I'd like my comic reader to have *good* resizing functionality
20:22 < Hupo> and fast lanczos resizing would be ideal for that
20:23 < milani> aha.
20:23 < Hupo> would be hard to compete with existing programs out there without it too
20:24 < Hupo> problem is that every other comic reader out there has at least one or two minor or major annoyances
20:26 < milani> Hupo, I'm searching to find the algorithm. 
20:26 < milani> Hupo, maybe I can help you to get c++ bindings.
20:27 < Hupo> well, that would certainly be something!
20:28 < issackel_> Can anybody help me figure out a scope question? https://gist.github.com/a6993c8b3adff1ea92e1  L13-14 I need access to variables from the loop in a callback
20:32 < timeturner> issackel: it already has access to those
20:33 < issackel_> timeturner: really? because they change per loop iteration
20:33 < stagas> issackel_: use replies.forEach() and 'var' this way you have separate scope for each iteration
20:38 < CIA-1> libuv: Ben Noordhuis master * ra75e105 / include/uv-private/uv-bsd.h : freebsd: fix build breakage introduced in 3b69c0f - http://git.io/iDymRQ
20:47 < issackel_> stagas: when was forEach introduced to javascript? why have I been writing for loops all this time? :-(
20:47 < issackel_> (thanks! btw)
20:48 < arronhunt> Beginner to Node here, what are some essential node packages? So far I have supervisor and express
20:49 < stagas> issackel_: es5, https://github.com/joyent/node/wiki/ECMA-5-Mozilla-Features-Implemented-in-V8
20:50 < dz0ny> arronhunt: async, node-dev, coffescript, mongoose, request... look at http://toolbox.no.de/ or https://npmjs.org/
20:51 < Hupo> personally I'm not that hot for coffeescript
20:51 < Hupo> one reason is because I don't really like languages with meaningful whitespace
20:52 < Hupo> I like my curly brackets
20:52 < AviMarcus> Hey. I have a large list of dates.. that I sometimes want to walk in order, but sometimes want to just grab a certain date. Is there any suggestions for how to store it? If I do it as an object I can make keys of the date, but then I need "traverse" to walk it. If I do it as an array and sort it.. how do I find the date I want?
20:53 < boltR> hello
20:53 < Hupo> though I'm using coffeescript to build my javascript project solely for the sake of multiline strings, heh
20:53 < Progster> AviMarcus: binary search?
20:53 < boltR> I'm trying to change the install directory for npm's nstall.sh and was told to use ~/.npmrc
20:53 < boltR> install.sh*
20:53 < dominictarr> there is a binary search module, surely.
20:53 < AviMarcus> binary search?
20:53  * AviMarcus is googling
20:54 < boltR> the install directory doesn't appear to be changing however
20:55 < AviMarcus> hmm, I didn't know that pattern. Not sure it's what I want, though.
20:55 < boltR> ~/.npmrc : http://dpaste.com/793315/ 
20:56 < Progster> it's logarithmic search time for any entry in your array. it's what you want
20:59 < CIA-1> node: Ben Noordhuis master * r8bec261 / (3 files in 2 dirs): tls, https: throw exception on missing key/cert - http://git.io/K0mVTw
21:00 < prettyrobots> Greetings.
21:00 < AviMarcus> Progster, OK looks like. I just need to make sure it's sorted and compare an inner key, rather than the element. Thanks!
21:03 < merpnderp> I might have a job doing a full featured resource planning tool. I really enjoy using Node.js for just about everything I do, but I wonder if it would be a diservice to use it for a resource planning tool since how many other contractors will there be in this area using node in the years to come when they need support and I'm no longer available?
21:04 < Hupo> >since how many other contractors will there be in this area using node in the years to come
21:04 < Hupo> probably more than there is now?
21:06 < merpnderp> Screw it. Node is just fun and deployment is dead simple and no need for any special build tools/env.
21:06 < Hupo> javascript and node most likely aren't going to disappear from use anytime soon
21:07 < Hupo> in fact they're probably just going to get more popular
21:07 < Hupo> or at least that's what I read people on the internet say!
21:08 < merpnderp> I was wondering what the long term effects would be on the other major scripting languages given that node is generally 3-4 times faster (comparable to .NET) but just as versatile and easy to dev in.
21:08 < Hupo> I'd have absolutely nothing against node spreading even further
21:08 < merpnderp> When node gets a django/rails knockout, why use Ruby or Python when Node is 3 times faster?
21:09 < Hupo> indeed
21:10 < Hupo> personally I can see node replacing python and such for scripting stuff too
21:10 < AviMarcus> there's a rails kind of equivalent.. but async is a bit of an adjustment
21:10 < Hupo> I mean installing node these days is pretty damn easy
21:10 < AviMarcus> and, compared to e.g. php scripts you need to deploy rather than just save a new version
21:10 < Hupo> I was very impressed at how straightforward the process was on windows
21:10 < Hupo> and then I could just npm install stuff
21:10 < merpnderp> Yikes, I'm waaaay off. Node.js is 14 times faster than Ruby and 16 times faster than Python.
21:11 < Hupo> and if I install them globally they run just like normal cli applications
21:11 < Hupo> merpnderp: wow, seriously?
21:11 < Hupo> damn, I'm never touching python again for my scripting needs!
21:11 < merpnderp> according to the debian.org language shootout.
21:11 < astropirate> merpnderp, node starts its day with a healthy dose of crack
21:12 < AviMarcus> depending on what you're doing though, the async is the biggest gain
21:12 < Hupo> which is also nice for me since I never liked python's FORCED INDENTATION OF CODE
21:12 < Hupo> not that I have anything against proper indentation, but as I mentioned earlier, I just don't like meaningful whitespace
21:12 < merpnderp> but even not using the asycn, just running tons of regex or doing commplex algorithms, node smokes most other languages.
21:13 < Hupo> speaking of which, does anyone have any idea about when we could expec to use multi-line strings in node?
21:13 < merpnderp> Then add that with the single threaded process handling just as much traffic as a thousand python threads.
21:13 < Hupo> like var multi = `start with backtick
21:13 < Hupo> end with backtick`;
21:13 < merpnderp> If you are doing tons of regex, apparently node is the only way to go: http://shootout.alioth.debian.org/u32/performance.php?test=regexdna
21:15 < Hupo> but really, it's so nice that js performs so well these days
21:15 < Hupo> and is only going to perform better in the future
21:15 < Hupo> because of the arms race between all the browser makers
21:15 < mikedg> hi
21:15 < mikedg> I'm trying to do JSON.parse on something and I keep getting an error and it looks like valid json to me any thoughts? http://pastebin.com/36C6xDNt
21:16 < Hupo> what's that undefined:2?
21:16 < _Tristan> So many mysql. Which one should I use?
21:16 < astropirate> mikedg, run it through something like this http://jsonlint.com/
21:16 < merpnderp> Hupo: Yeah, somehow somewhere along the line js went from clunky and slow to sexy and fast.
21:16 < mikedg> Hupo: no clue
21:16 < Hupo> merpnderp: yeah
21:16 < mikedg> oh duh thats probably some log i have
21:16 < Hupo> and I really like it
21:17 < Hupo> javascript is honestly the first language that has really clicked for me
21:17 < mikedg> oh hrmmm neverind thing i got it
21:17 < mikedg> thanks
21:17 < mscdex> mikedg: that string parses fine for me
21:17 < mscdex> :-)
21:17 < Hupo> I've tried getting into perl and python before but they just didn't click
21:18 < merpnderp> Hupo: I don't know if I'll ever fully grok the prototyping system. I can make it work but I always have to do mental gymnastics when figuring out when to use new :P
21:18 < Hupo> then about half a year ago I picked up javascript
21:18 < merpnderp> new === I want a fresh copy of this existing object.
21:18 < Hupo> good to know, I haven't really had the need to use new in my stuff yet
21:19 < merpnderp> Hupo: I wouldn't take anything I say on js syntax as correct :P
21:19 < Hupo> I might have to brush up my php skills at some point though, even though I don't really look forward to that :V
21:20 < merpnderp> The things we do for money.
21:21 < Hupo> well, my programming isn't at that point yet, though, but you know, preparation
21:21 < Hupo> I'm a student at the moment, and my personal goal is to just work on my javascript by doing fun things.
21:22 < Hupo> fun and useful things
21:22 < Hupo> but anyway, I fully support the topic of this channel.
21:22 < Hupo> NODE ALL THE THINGS
21:23 < kranius> haskell the way
21:23 < Hupo> waiting for the day all run-of-the-mill webhosts support node
21:26 < Hupo> oh right
21:29 < Hupo> are there any nice document-oriented database modules for node that don't require running a separate database engine?
21:30 < Hupo> like sqlite, except more like... mongolite
21:30 < mmalecki> Hupo: resourceful
21:30 < mmalecki> with memory engine
21:30 < AviMarcus> does walking a 2k element array really only take 1ms? a logarithmic binary search seems a bit much if that's true.
21:31 < Hupo> why don't you benchmark and test it out?
21:31 < mikedg> hrmm wasnt what i thought, grr i have no idea where that undefined:2 comes from
21:32 < AviMarcus> Hupo, this is what console.log keeps telling me but it seems a bit too good to be true
21:33 < AviMarcus> erm console.time
21:33 < AviMarcus> kinda interesting that the logarithmic binary search takes 8-11 iterations no matter how close to the edge or middle the item is
21:34 < RLaa> AviMarcus, , it should take less than 1ms
21:34 < Hupo> console.time...
21:34 < AviMarcus> so.. binary search for performance is kinda overkill
21:34 < Hupo> man, and here I implemented my own timer functionality in my debug object
21:34 < AviMarcus> Hupo, you can feel relieved, you can't manipulate the time. e.g. if you want to add it or store it somewhere
21:35 < AviMarcus> it only logs it to console and you can't touch it's output
21:35 < AviMarcus> its*
21:35 < Hupo> well yeah I was combining my timer results with other debug info, so I guess I shouldn't feel too bad!
21:36 < context> https://s3.amazonaws.com/data.tumblr.com/tumblr_lzw4c5JzH31qa4g2do1_500.jpg
21:36 < dominictarr> AviMarcus, unless the item is bangon a power of two, it's gonna have to look in multiple places for it.
21:37 < dominictarr> yeah, it's nearness to (2^x)/length that is important to binary search.
21:37 < Leeol> Anyone know what version of Browserify works with node < 0.8?
21:37 < AviMarcus> context, police surveillance? lol must be fake
21:37 < dominictarr> Leeol, not the current version?
21:38 < Leeol> One of the deps for Browserify has a dependancy of 0.8
21:38 < Hupo> AviMarcus: funny WiFi names are nothing new
21:38 < AviMarcus> hmm. skynet is an open network.
21:38 < Leeol> Not compatible with your version of node/npm: concat-stream@0.0.8
21:38 < dominictarr> Leeol, and npm won't install it?
21:38 < AviMarcus> scanning wifi here.. "cohen" and "netbox" bot locked.
21:38 < AviMarcus> both*
21:38 < Hupo> "FBI Honeypot" << random funny WiFi name suggestion of the day!
21:38 < Hupo> probably already in use somewhere, no doubt
21:38 < Leeol> Domenic:  It didn't that time, let me boot up my VM and check with other versions
21:38 < dominictarr> Leeol, chances are, that it is actually compatible
21:39 < Leeol> dominictarr: Can you force it?
21:39 < dominictarr> not sure.
21:39 < dominictarr> you could switch to 0.8 to install it, that is a test
21:39 < Leeol> hmm
21:40 < yawnt> dominictarr: except clojurescript is a cool language
21:40 < yawnt> while cs is just syntactic sugar for js
21:40 < dominictarr> yawnt, true
21:40 < Leeol> dominictarr:  Seems to be a problem with the cloud9 environment, it failed there, but not on my local 0.6.20 node version
21:40 < Leeol> dominictarr: Sorry for the interruption, i don't think this is a Browserify problem
21:40 < dominictarr> yawnt, cs is just javascript "with a queer make over"
21:41 < Hupo> on the list of things I also don't like about coffeescript: replacing things with words
21:41 < dominictarr> Leeol, test if concat-stream works on 0.6 and make a pr to maxogden for it.
21:41 < dominictarr> the worst thing about coffee script is making "var" implicit.
21:41 < Hupo> I'm surprised it doesn't turn "i = 5 + 2" into "i is 5 plus 2" with all the wording going on!
21:41 < yawnt> dominictarr: agreed
21:42 < yawnt> if only clojurescript wasn't AOT
21:42 < yawnt> and if only the mapping would 't be one way only
21:42 < yawnt> *wouldn't
21:42 < dominictarr> it means you don't which scope a variable is from unless you read the whole file.
21:42 < yawnt> *wasn't
21:42 < Leeol> dominictarr: Odd, it passes on 0.6.20, but fails on 0.6.18
21:42 < yawnt> damn i'm going crazy :(
21:42 < dominictarr> Leeol, that can happen
21:43 < Hupo> so looking at clojure right now
21:43 < Hupo> who let the lisp programmers out of their cage?
21:43 < Leeol> dominictarr: But it shows a requirement of `>= 0.8.0`
21:45 < Hupo> but really why is everything in brackets
21:46 < thiago_ba> someone uses nowjs ?
21:46 < Leeol> dominictarr: For the record, i love CS, but hate the var thing. I completely agree with you. 
21:46 < Leeol> It's not a confusing feature of JS by any means, no need to screw with it.
21:47 < dominictarr> Leeol, maybe he wrote it before 6.20 cameout.
21:47 < Hupo> multi-line strings is the only thing I actually like about CS
21:47 < Leeol> Hupo: That's something i dislike. They don't preserve whitespace
21:48 < dominictarr> Leeol, yeah, I like that CS is like a JS that is acceptable to rubyists but without breaking js, 
21:48 < Leeol> I use CS all over the place, but i still use `'foo '+ \n'bar'` heh
21:48 < thiago_ba> help me please..
21:48 < Leeol> I'm not a rubyist (pythonist i guess?), but i do quite enjoy CS
21:49 < dominictarr> like... the worst thing about ruby: that a function without () means call it with no args. 
21:49 < dominictarr> they thing it's making it easier to use, but that completely complicates refering to a function
21:49 < Leeol> dominictarr: Did Ruby start that? I thought that was big long before Ruby, with various functional languages?
21:49 < Hupo> Leeol: huh?
21:50 < Hupo> they seem to be preserving whitespace just fine for me
21:50 < dominictarr> I don't know, I just know it from ruby. from my understanding, the main influence on ruby was Perl (hence the name)
21:51 < Leeol> Hupo: I forget the example offhand, there are many issues of it heh. It has to do with indentation being chopped off.. or something. 
21:51 < Hupo> Leeol: as far as I know it chops off indentation to the level it starts at
21:51 < Leeol> (issues as in, Tickets on github/coffee)
21:51 < dominictarr> Leeol, Hupo that kinda makes sense, though... since the whitespace is significant.
21:51 < Leeol> Hupo: You've got me curious now, let me see if i can figure it out again
21:52 < Hupo> I guess I could test it myself with indentation
21:52 < deltab> what if you have a far-left backslash?
21:53 < Hupo> seems to work just like I'd expect it to
21:53 < Hupo> if you have text = """
21:53 < Hupo> one tab in
21:53 < Hupo> then the rest of your string is also one tab in
21:54 < Hupo> then that one tab gets chopped off
21:54 < Hupo> but the rest of the whitespace stays as is
21:56 < Leeol> Hupo: Got it, lemme paste the example
21:57 < Hupo> sure
21:57 < Hupo> but well, again, it's not that it matters too much to me - I just use coffeescript's cake for my build procedure :)
21:57 < Hupo> and as long as the multi-line strings there work as intended, I'm happy
21:58 < Hupo> I went with coffeescript for that because I didn't really want to use something like http://stackoverflow.com/a/5571069
21:58 < Hupo> to get multi-line strings in a jakefile
21:58 < Leeol> Hupo: I believe this is the problem, https://gist.github.com/5675ccb1f350610e93f4
21:59 < Leeol> You either have added indentation, or you have to deal with added return characters
21:59 < Leeol> (The odd functions are just there for padding, heh)
21:59 < Hupo> where's the added indentation?
22:00 < Hupo> isn't the first one outputting just as expected
22:00 < Hupo> and the second not because you're using " and not """?
22:01 < Leeol> Hupo: Haha, i forgot to indent the code, let me modify it to show the problem (i unindented it for testing by accident)
22:03 < Leeol> Hupo: https://gist.github.com/c9cf16bc73fbd502e115
22:04 < Leeol> Its the base indent, coffee strips it off
22:04 < Leeol> It allows you to be dynamic with your indentation levels for multiline strings (perhaps you like multi-line strings indented once? Twice? etc)
22:04 < Hupo> right
22:04 < Hupo> I can see the issue
22:04 < Leeol> You have to set the base line first, and there is no good way around it
22:05 < Hupo> yeah, I can see that
22:05 < Leeol> Not a huge problem of course, it's just the reason i use the classic `+`
22:06 < Hupo> sounds like that would be more effort than setting a baseline though...
22:06 < Leeol> Hupo: But how can you set a baseline? You can't, right?
22:06 < Leeol> Hupo: Sure, if your code, as is that example, works out so that you set a baseline first, then it works out dandy
22:07 < Leeol> But what if "with indent" was the second line? right after `"""some`
22:07 < Leeol> Coffee would assume that was your baseline, rather than having two indents
22:08 < Leeol> Hupo: I think setting tabs first, is impossible
22:08 < Hupo> https://gist.github.com/3519517
22:08 < Hupo> like this?
22:09 < Leeol> Hupo: Huh? // and # will print
22:09 < Leeol> Those arent escapes inside the triple strings 
22:10 < Leeol> triple quotes*
22:10 < Hupo> eurgh, well, point being just that 1) move the first line to a new line after """ 2) make it a "non-meaningful line"
22:10 < Hupo> or something like that
22:10 < Leeol> Hupo: Nah, if you move the first line, now your string is different
22:11 < Leeol> Hupo: It simply means that line #1 of your string equals `"\n"`
22:11 < Hupo> I know that
22:11 < Hupo> but yeah again I don't develop in CS, I just use it for building my js project
22:12 < Leeol> Gotcha
22:17 < CIA-1> node: Ben Noordhuis master * r4784ea1 / (8 files): deps: upgrade http_parser to ad3b631 - http://git.io/mL90cQ
22:24 < CIA-1> node: isaacs v0.8 * rdec16aa / test/pummel/test-https-ci-reneg-attack.js : Test client renegotiation attacks on HTTPS - http://git.io/cTXz4w
22:27 < CIA-1> node: Ankur Oberoi v0.8 * ra57d315 / doc/api/http.markdown : doc: fix grammar errors - http://git.io/vZyj5A
22:44 < CIA-1> node: Nathan Rajlich master * r606a933 / node.gyp : build: set `process.platform` to "sunos" on SunOS - http://git.io/gpFDuw
22:44 < mscdex> isaacs: y u no pull my npm doc typo fix?
22:47 <@isaacs> mscdex: i think it's in the list
22:47 <@isaacs> mscdex: haven't taken a look at those
22:49 < Hoverbear> Any libs to send mail over a remote exchange server?
22:57 < mscdex> Hoverbear: why not smtp instead?
22:57 <@isaacs> Hoverbear: i use node-mailer
22:57 <@isaacs> npm.im/nodemailer
23:01 < Hoverbear> mscdex: Well I'd like to use nodemailer over smtp with the exhange server (So it can originate from our server etc)
23:02 < mscdex> right
23:02 < Hoverbear> I just am trying to figure out our infrastructure
23:02 < mscdex> from my past experience when people mention "ms exchange" they're not necessarily meaning smtp
23:02 < mscdex> so i'm just extra careful :-)
23:03 < Hoverbear> My feelings on MS Exhange: Something to make sending mail harder.
23:03 < superjoe> I'm starting a project which basically competes with forever and adds zero-downtime hot-code-swap support. has this been done yet?
23:04 < Hoverbear> superjoe: Maybe?
23:04 < superjoe> Hoverbear, link to any projects?
23:12 < Guest32178> hi
23:13 < CIA-1> node: Nathan Rajlich v0.8 * r355c148 / node.gyp : build: set `process.platform` to "sunos" on SunOS - http://git.io/NGc4fg
23:15 < mscdex> http://www.citrix.com/lang/English/lp/lp_2328330.asp
23:15 < mscdex> "A new national survey by Wakefield Research, commissioned by Citrix, showed that most respondents believe the cloud is related to weather"
23:36 < Leeol> For anyone familiar with Browserify.. Does it expose a module name or anything in the global/window namespace for browsers? Or should you do that yourself? (window.MyPackage = require('./lib'))
23:38 < coke> test
23:39 < _Tristan> which mysql module is most efficient?
23:39 < _Tristan> or most bestest?
23:40 < mscdex> i'd say the one i'm currently working on, but then again i'm biased ;-)
23:40 < mscdex> it's not 100% complete yet though
23:41 < mscdex> stuff like stored procedures aren't supported
23:41 < mscdex> and auto-reconnect and changing character sets
23:41 < mscdex> but it's faster than anything else out there for node currently
23:45 <@konobi> _Tristan: any one that convinces you to move to postgres
23:45 < _Tristan> I do hate mysql with a fiery passion
23:46 < _Tristan> in fact, I want to hunt down everybody who has ever committed a single line of code to mysql and light them on fire. Teach me the ways of your postgres world.
23:46 < mscdex> heh
23:47 < mscdex> if you don't like oracle, use mariadb ;-)
23:48 < chesles> _Tristan: I've used https://github.com/felixge/node-mysql and didn't have [too many] problems with it
23:48 <@konobi> percona's supposed to be decent too
23:51 < mscdex> mariadb is monty's project
--- Log closed Thu Aug 30 00:00:48 2012
