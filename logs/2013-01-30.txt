--- Log opened Wed Jan 30 00:00:51 2013
00:01 < Gateway69> I was curious what people use here to deploy node.js code from stage to dev or live..?
00:10 < holzp> min : {
00:10 < holzp> mah no
00:19 < Gateway69> I was curious what people use here to deploy node.js code from stage to dev or live..?
00:20 < holzp> git pull?
00:20  * holzp doesn't run anything too serious in node (yet)
00:21 < Gateway69> well git pull is a part of it, i was looking at something like fleet https://github.com/substack/fleet but one big missing thing
00:22 < echo> Gateway69: I currently use puppet to handle all this for me. 
00:22 < Gateway69> not fam with it, started to look around, fleet doesnt seem to work if you have a private git repo
00:24 < echo> Gateway69: It's primary purpose isn't for the development->production stuff. It's a very highly used piece of software in which you can make sure certain files, packages, users, (any resource on a server, really) is whatever you want it to be. 
00:25 < isaacbw> why not just ssh stuff over
00:25 < Gateway69> puppetlabs?
00:25 < echo> Gateway69: yes.
00:25 < redshadowhero> echo: High five for puppet use!
00:26 < Gateway69> hmm seems like it could launch haproxy, n node apps, n couchbase systems ?
00:26 < CoverSlide> no love for chef?
00:26 < echo> It's potential is limited to your abstract imagination. 
00:26 < redshadowhero> CoverSlide: chef was something I just never got into.
00:26 < spion_> hmm
00:26 < redshadowhero> I've already invested too much time into puppet for better or worse.
00:26 < echo> :( Sorry CoverSlide, I found pupper first and never needed anything it didn't provide, so I was never encouraged to move or change or try.
00:27 < echo> puppet*
00:27 < CoverSlide> yeah i hear lots of people either use chef or puppet most of the time people who know puppet love puppet. others know chef, try puppet, and run crying back to chef
00:27 < Gateway69> yea, we where looking at I think something similar but more cloud depolyment (rightscale) has templates u build then can launch new servers on health etc
00:27 < isaacbw> chef looks pretty cool
00:27 < xk_id_> Does anybody know if it possible to reuse a "keep alive" connection using the "request" module?
00:27 < isaacbw> no
00:28 < isaacbw> that's now how keep-alive works
00:28 < CoverSlide> unfortunately
00:28 < isaacbw> *not
00:28 < isaacbw> but if you never close the connection in the first place, you can keep sending data
00:28 < isaacbw> it's a little iffy to do that
00:28 < xk_id_> so I cannot request multiple pages?
00:28 < spion_> >> var fn = function namedFn() { return "foo"; }; namedFn() + " " + typeof(namedFn)
00:28 < purr> spion_: ReferenceError: namedFn is not defined
00:28 < isaacbw> not really no
00:28 < xk_id_> not really or definitely no? :P
00:29 < spion_> >> var fn = function namedFn() { return "foo"; }; namedFn()
00:29 < purr> spion_: ReferenceError: namedFn is not defined
00:29 < Gateway69> still need to find a good way to push code from dev to production .. aka node.js stuff. 
00:29 < isaacbw> you could write an API that would let you request as many pages at once as you want
00:29 < xk_id_> it's important to minimise how much I'm stressing the poor server.
00:29 < isaacbw> and the api would send back a structure that contains the html
00:29 < isaacbw> http connections aren't terrible
00:29 < isaacbw> don't worry about it
00:29 < xk_id_> I'm not in charge of the server. only the client
00:29 < isaacbw> then no
00:29 < redshadowhero> >> var fn == function namedFn() { return "foo"; }.bind(this); namedFn();
00:29 < purr> redshadowhero: SyntaxError: Unexpected token ==
00:29 < isaacbw> that's not something that's worth optimizing
00:29 < redshadowhero> ouch. That's what I get for try-
00:29 < redshadowhero> oh wait.
00:30 < redshadowhero> >> var fn = function namedFn() { return "foo"; }.bind(this); namedFn();
00:30 < purr> redshadowhero: ReferenceError: namedFn is not defined
00:30 < xk_id_> isaacbw: sorry, one last time – so it's not possible to request multiple pages from within one "keep alive" connection, yes?
00:30 < isaacbw> you can try to limit the http calls per page by using image maps, etc
00:30 < isaacbw> no
00:30 < isaacbw> yes
00:30 < isaacbw> right
00:30 < isaacbw> correct
00:30 < xk_id_> *possible*, not *desirable*. ok? ok. :P
00:30 < isaacbw> I just wrote the coolest routing library in the universe
00:30 < isaacbw> right, not posisble
00:30 < isaacbw> typing is hard
00:30 < xk_id_> thank you
00:31 < spion_> >> function namedFn() { return "foo"; } namedFn();
00:31 < purr> spion_: (string) 'foo'
00:33 < cloudbender> Is this true still ? ...
00:33 < cloudbender> The yield keyword is only available to code blocks in HTML wrapped in a <script type="application/javascript;version=1.7"> block (or higher version).
00:34 < spion_> cloudbender, only in firefox
00:34 < cloudbender> Doh!
00:34 < spion_> indeed
00:34 < cloudbender> what about in node ?
00:35 < spion_> cloudbender, http://code.google.com/p/v8/issues/detail?id=2355
00:35 < xk_id_> okay, someone else is asserting it *is* possible to request multiple pages from within the same httprequest keep alive connection. Can anybody say their opinion on this as well?
00:35 < isaacbw> http was going to allow it at some point
00:35 < isaacbw> maybe it's already supported
00:36 < isaacbw> opening a tcp connection isn't terribly expensive thuogh
00:36 < isaacbw> that's really not going to be a significant source of stress on your server
00:36 < isaacbw> I actually have no idea what I'm talking about
00:36 <@Nexxy> I'm just going to leave this here: http://en.wikipedia.org/wiki/HTTP_persistent_connection
00:36 < spion_> cloudbender, I've read somewhere that google take votes on those issues (stars) seriously
00:36 <@Nexxy> isaacbw, clearly :P
00:36 < azylman> Yeah
00:37 < azylman> It's for latency, not CPU cycles
00:37 < azylman> Opening the tcp connection can increase the latency by literally an order of magnitude for a request that would otherwise short
00:39 < isaacbw> it would have to be a pretty simple response
00:40 < spion_> cloudbender, its interesting that there is absolutely no response whatsoever though.
00:40 < rfgarcia> what's the easiest way to start playing around with the v0.10 streams API?
00:40 < spion_> maybe its hard to implement generators in V8 or something (though I doubt it, there is node-fibers and it isn't half bad)
00:42 < CoverSlide> rfgarcia: install >=v0.9.6
00:42 < rfgarcia> CoverSlide: ty, exactly what I needed
00:48 < cloudbender> Well, there was old school, and there was new school.  Now there is new old school.
00:51 < iwalkbarefoot> anyone here use maxcdn ?
00:53 < rump> so where did everyone settle for web app structure?  model/views/routes or "modular" (./lib/login/), etc or wat
00:53 < rump> i seem to alternate every project and maybe its time to standardize
00:54 < wasabist> can anyone please point me to the simplest barebones example of a node.js based web socket server and client? i'm missing something obvious and need a good starting point. thanks much in advance
00:54 < rump> wasabist: socket.io and socket.io-client's github readmes offer that
00:55 < rump> they also have examples folders i believe
00:57 < azylman> rump: we use both. page-based directory structury and then each page directory has a routes file and a view file
00:57 < azylman> also a test file
00:57 < substack> wasabist: or if you like streams there's https://github.com/substack/shoe#stream-all-the-things
00:58 < wasabist> substack: i think my problem is in my environment, for now i want to find barest chunk of code that i know should work and look around my setup
00:59 < wasabist> one thing you might be able to clarify for me, there's an option in socket.io to have it serve socket.io.js file, what do i need to properly arrange for that?
01:00 < iwalkbarefoot> by default it should server it via /socket.io/socket.io.js
01:00 < iwalkbarefoot> *serve
01:01 < Pavi> Hi i am getting "unrecognized command line option "-m32" "
01:02 < Pavi> can some one help
01:03 < Pavi> if i run with "sudo node-gyp" then it work
01:03 < redshadowhero> looks like you're trying to compile 32-bit, Pavi.
01:04 < Pavi> Hi
01:04 < Pavi> It was working efore
01:04 < wasabist> what do you know, in my case port 6666 was deemed unsafe by chrome
01:04 < redshadowhero> Did you make any changes to your system recently? What type of linux is it?
01:04 < wasabist> no idea if this is specific to chrome or i have a setting buried somewhere
01:05 < Pavi> Hi Sometime back i spoke with a developer
01:05 < Pavi> and her said you should delete the build folder
01:05 < Pavi> and rebuild
01:05 < Pavi> whcih worked
01:06 < redshadowhero> How'd you get that copy of node?
01:06 < redshadowhero> from git?
01:06 < Pavi> yes
01:06 < redshadowhero> How'd you get it from git? `git clone blahblahblah'?
01:06 < redshadowhero> or did you download a tarball?
01:06 < Pavi> yes
01:07 < Pavi> i think i did git clone
01:07 < redshadowhero> Are you going for a specific version, or just the newest?
01:07 < Pavi> yes it v0.8.0
01:07 < Pavi> Y am i not able to open a personal chat?
01:08 < redshadowhero> try `git pull origin v0.8.0'
01:09 < redshadowhero> Any joy? Errors?
01:10 < Pavi> no
01:10 < Pavi> Still on the same erro
01:10 < redshadowhero> What did git respond with?
01:11 < Pavi> i think it said Done after cloning
01:11 < Pavi> I gettting this error when i do node-gyp
01:12 < Pavi> for a simple program
01:12 < Pavi> and cross compile it for ARM arch
01:12 < redshadowhero> Have you tried cloning a fresh copy to make sure your environment is sane?
01:12 <@TooTallNate> Pavi: try forcing the os and arch
01:13 <@TooTallNate> actually i don't think node-gyp has the ability to force the OS yet...
01:14 < Pavi> {   'variables': {         'target_arch' : 'arm' 
01:14 < Pavi> using this in the binding.gyp helped
01:14 < Pavi> I was able to get things working before
01:14 <@TooTallNate> Pavi: well try with just --arch=arm for now
01:14 <@TooTallNate> that should do it
01:14 < Pavi> but suddenly all i see is 
01:15 < spion_> cloudbender, try fibers. https://github.com/laverdet/node-fibers ... or for a slightly less safe but more convenient API https://github.com/goodeggs/fibrous
01:15 < Pavi> no effect
01:15 < redshadowhero> Did you try cloning a fresh repo? You didn't change your build environment at all?
01:15 < cloudbender> spion_ I'm going to trust the nodesters and stay above the engine.  Why kick a gift horse in the arse ?
01:16 < Pavi> TooTallNate how do i open the personal chat here
01:16 < Pavi> ?
01:16 < Pavi> i have a script which set the env variable to ARM
01:16 <@TooTallNate> Pavi: it depends on your irc client
01:16 < spion_> cloudbender, on linux they seem to work perfectly fine.
01:16 < Pavi> okie thanks
01:16 < cloudbender> Of course, I've trusted before, and well, we all know how that goes
01:17 < Pavi> once before i had this issue
01:17 < Pavi> and some one from this forum
01:17 < Pavi> helped me
01:17 < Pavi> saying delete the build directory
01:17 < Pavi> and rebuild
01:17 < Pavi> that time it worked
01:17 < cloudbender> One day I woke up and the entire SCO environment I invested in became a liability.
01:18 < spion_> cloudbender, perhaps for writing unit tests then
01:18 < Pavi> when i try to do "sudo node-gyp build"
01:18 < cloudbender> maybe
01:18 < Pavi> there is no problem it works
01:18 < Pavi> but dont work in my ARM processsor
01:18 < cloudbender> brb
01:18 <@TooTallNate> Pavi: probably because "sudo" is overwriting your ARM compiler settings
01:18 <@TooTallNate> Pavi: don't use "sudo" with node-gyp
01:19 < Pavi> yeah
01:19 < Pavi> yes exact that was wat he said as the issue too
01:19 < Pavi> how do i resolve this?
01:19 < Pavi> TooTalNate this is exact issue he said
01:20 < Pavi> how do i resolve this
01:20 < redshadowhero> >> 1+1
01:20 < purr> redshadowhero: (number) 2
01:20 < redshadowhero> I wonder what happens if I throw for(;;); into that...
01:20 < gabrieluk> wow, nice, i dodn't know ecma was ere
01:20 <@TooTallNate> Pavi: can you gist the full error message you're seeing?
01:20 < gabrieluk> >>2+2
01:20 < purr> gabrieluk: (number) 4
01:21 < holzp> lol, cloudbender, a few years ago I chose Prototype.js so I know how that goes
01:21 <@TooTallNate> Pavi: setting env variable V=1 would help too
01:21 < Pavi> can you send me the link
01:21 <@TooTallNate> gist.github.com
01:21 < Pavi> just V=1
01:21 < Pavi> ?
01:21 <@TooTallNate> Pavi: V=1 node-gyp ...
01:21 < CoverSlide> >> for(;;);
01:21 < purr> CoverSlide: Timeout Error: Execution time exceeded 2 seconds
01:21 < redshadowhero> :)
01:21 < superjoe> I *just today* realized that in node we have Array.prototype.filter and Array.prototype.map
01:21 < Havvy> 43 tests, 61 assertions, 0 failures  :D
01:22 < superjoe> x.x
01:22 < redshadowhero> What's being used for that? Node sandbox?
01:22 < Pavi> https://gist.github.com/4669758
01:22 < CoverSlide> they usually have this kind of protection
01:22 < Havvy> superjoe: We do?
01:22 < superjoe> Havvy, check it
01:22 < holzp> thats emcascript 1.6 right?
01:22 <@TooTallNate> Pavi: gist the result of "V=1 node-gyp rebuild --arch=arm"
01:23 < superjoe> holzp, dunno, but it's in node 0.8.18
01:23 <@TooTallNate> Pavi: it also wouldn't hurt to update to node v0.8.18
01:23 < redshadowhero> Oh wait.
01:23 < CoverSlide> >> version
01:23 < purr> CoverSlide: (string) '3.11.10.22'
01:23 < CoverSlide> hmmm
01:23 < CoverSlide> >> about
01:23 < redshadowhero> TooTallNate: He's compiling for arm. The cross compiler doesn't support -m32 or -m64
01:23 < purr> CoverSlide: ReferenceError: about is not defined
01:23 < superjoe> >> Array.prototype.filter
01:23 < purr> superjoe: (function) filter
01:23 < Pavi> ToolTallNate look slike it just worked wow
01:23 < redshadowhero> He'll have to remove those references from the Makefile.
01:23 < Havvy> Neat.
01:23 < redshadowhero> Or maybe I'm wrong.
01:23 < redshadowhero> Which is for the best in this case.
01:23 < Havvy> Now we just need a short function syntax.
01:24 < superjoe> >> ->
01:24 < purr> superjoe: SyntaxError: Unexpected token >
01:24 < superjoe> heehee
01:24 < Havvy> One of these days I'll convert to Coffeescript...
01:24 < redshadowhero> >> var result = 0; var i = 10; while( i-->0 ) result+=i; result;
01:24 < purr> redshadowhero: (number) 45
01:24 < superjoe> Havvy, I converted to coffeescript, then I converted to coco, then I converted back to javascript
01:24 < Pavi> Thanks ToolTallNate
01:25 < Pavi> I really appreciate it
01:25 < Havvy> superjoe: I went JS -> CS -> JS
01:25 < CoverSlide> Havvy: don't
01:25 < Pavi> I was eating my head
01:25 < Havvy> CoverSlide: Why not?
01:25 <@TooTallNate> Pavi: it was the --arch=arm flag
01:25 <@TooTallNate> Pavi: i told you ;)
01:25 < Pavi> yes i think
01:25 < Pavi> becuase it work
01:25 < Pavi> :)
01:25 < CoverSlide> it's not relevant, it doesn't improve the code you write in any way
01:26 < superjoe> CoverSlide, well the idea is that it would help you write code faster
01:26 < CoverSlide> it doesn't really do that though
01:26 < superjoe> I would tend to agree with you
01:26 < Pavi> Thank you so much
01:26 < Havvy> It makes it more terse.
01:27 < Havvy> And how the heck does that i-->0 work in that while loop work?
01:27 < Havvy> Oh. Wait, nvmd.
01:27 < holzp> yeah, v8 is EMCAScript 5, Arrays have those methods in it: every(), filter(), forEach(), map(), some(), indexOf(), lastIndexOf()
01:27 < redshadowhero> space it out a bit: while( i-- >= 0 )
01:27 < Havvy> It's -- and >
01:27 < superjoe> humans are bad compilers :)
01:27 < redshadowhero> humans are TERRIBLE compilers.
01:28 < Havvy> It's a neat trick. I think I'll use it. :P
01:29 < redshadowhero> I use it in C sometimes.
01:29 < redshadowhero> ...but not often.
01:29 < holzp> nodeunit or quint, I just don't know!
01:30 < rump> azylman: just do db interaction/etc in the route file?
01:31 < Havvy> >>> ['a', 'b', 'c'].every(function (e) { typeof e === "string"; });
01:31 < purr> Havvy: (boolean) false
01:31 <@TooTallNate> Havvy: missing "return"
01:32 < Havvy> >>> ['a', 'b', 'c'].every(function (e) { return typeof e === "string"; });
01:32 < purr> Havvy: (boolean) true
01:32 < cloudbender> sublime is written in python ?
01:32 < Havvy> cloudbender: Yes.
01:32 < cloudbender> that's so cool
01:33 < cloudbender> As soon as the cloudbendress authorizes a $69.00 expenditure I'm down with sublime.
01:34 < redshadowhero> ... cloudbender.
01:34 < redshadowhero> You just made me laugh so hard my roommate just screamed at me to shut up.
01:34 < redshadowhero> Which is all your fault.
01:34 < Havvy> cloudbender: Unlimited free trial. Just has nagging screens. ;)
01:34 < cloudbender> lol
01:35 < cloudbender> He to whom is granted testicles, is forever not the boss, nor the winner of arguments, ever.
01:35 < azylman> rump: Well, our website never hits a db directly - it needs to hit our api sometimes and then we do it either in the route file or client side
01:41 < jcrugzz> holzp: its not worth stressing over a test framework. 
01:41 < azylman> rump: so our use case could be a little bit unusual since it's not backed by any db
01:41 < holzp> yeah i guess writing new tests is not that hard
01:47 < samholmes> If I'm building an mobile application that interfaces with my Node.js webserver, how do I deal with updates to the interface (REST API), that my mobile app converses with, without breaking all the installs of my mobile app?
01:48 < azylman> Depends which sort of changes you're talking about
01:48 < samholmes> I'm so used to being able to update a web app and have all users get that update automatically. I'm not used to this sort of build and deploy flow.
01:48 < Licenser> samholmes I'd tag API versions
01:48 < samholmes> Licenser: So you make a /v1/ prefix to the REST API?
01:48 < azylman> If you make your endpoints discoverable, like a true REST API, you don't need to worry about changing any urls
01:48 < Licenser> either by URL path or custom headers (first might be bettER)
01:49 < cloudbender> Havvy yes the most gracious nagware I've encountered.
01:49 < azylman> If you want to change the data that's returned (e.g. from {object} to {data: {object}, metadata: {some metadata}}) then you'd need to version your endpoints
01:49 < samholmes> Licenser: But, I don't want to even deal with old versions.
01:49 < Havvy> I'd argue that mIRC's is more gracious.
01:49 < samholmes> Licenser: How could I force everyone to update?
01:50 < Licenser> samholmes to update the client? send out people carrying guns?
01:51 < superjoe> maybe a virus
01:55 < niix> How to prevent from having to sudo on every nom install?
01:56 < niix> *npm, nice auto-correct heh
01:57 < Havvy> niix: You only need to sudo if you install globably.
01:57 < Havvy> i.e. with the -g flag.
02:00 < superjoe> niix, I would encourage you to try to avoid global installs
02:02 < redshadowhero> [king@hecatonchires:~]$ cat ~/.npmrc | grep prefix
02:02 < redshadowhero> prefix = .bin/node-pkgs/
02:02 < redshadowhero> that's what I use for global installs.
02:04 < niix> superjoe: bro this is with almost -all- installs
02:05 < superjoe> niix, I don't understand why you have to use sudo for a local install
02:05 < niix> something isn't right
02:05 < niix> sometimes I will do npm install and they will all fail unless I do 'sudo nom install'
02:05 < niix> *npm
02:06 < rump> sudo rm -rf ./node_modules && npm install
02:06 < rump> and never use sudo again unless adding -g :)
02:06 <@Nexxy> nom is also valid
02:07 < niix> Nexxy: heh
02:07 < rump> sudo chown `whoami` -R .
02:07 <@TooTallNate> alias nom npm
02:07 < niix> I do enjoy how I can misspell install and it works also
02:07 <@Nexxy> alias nom='npm'
02:08 < azylman> alias god=`whoami`
02:08 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
02:08 < Havvy> azylman: Heh.
02:09 < redshadowhero> eval $(echo "!!" | sed 's/nom/npm/1')
02:09 < redshadowhero> ...
02:09 < redshadowhero> ^eval^
02:10 < redshadowhero> then again, that's the difficult way. Inline, I think it'd be easiest just to type ^nom^npm
02:23 < niix> this matador is interesting, not sure why I wouldn't just use express though
02:23 < snoj> js
02:24 < crabtree> i'd just use express niix
02:24 < niix> crabtree: yeah, I think we talked about this earlier too
02:24 < MI6> joyent/node: isaacs master * 60f18ed : readline: treat bare \r as a line ending  Fixes #3305 - http://git.io/eXwLfw
02:24 < crabtree> yeah
02:24 < niix> I really don't see the purpose in this :|
02:25 < niix> I mean, I like the idea to have a 'batteries included' kind of MVC like django
02:25 < niix> but, since I've come from python and django I have quiet enjoyed the freedom with node
02:25 < cloudbender> why would firebug trap the debugger statement in one page and not another ?
02:25 < crabtree> yeah niix the batteries are on npm
02:25 < crabtree> :P
02:25 < niix> yeah
02:26 < niix> A+ for effort though :)
02:27 < niix> crabtree: plus the index is kinda ugly :( https://gist.github.com/4670048
02:27 < crabtree> :P
02:27 < niix> they think they funny!
02:28 < cloudbender> the browser debugger traps it (fox)
02:40 < wangbus^cbtl> got a question for you guys that did production stuff with node
02:40 < wangbus^cbtl> if you wanted to obfuscate the code or whatever, what would you use if you had to distribute the js
02:40 < wangbus^cbtl> ?
02:41 < azylman> You're distributing your server-side code and want to obfuscate it?
02:41 < azylman> Why not just... not distribute it?
02:41 < wangbus^cbtl> client side
02:41 < azylman> So your question is not specific to node then
02:41 < wangbus^cbtl> utility that's written in node
02:41 < wangbus^cbtl> guess it's specific to javascript.
02:41 < manacit> jeez such hostility
02:41 < azylman> We use uglify
02:42 < manacit> ^
02:42 < wangbus^cbtl> uglify just puts it on 1 line though right
02:42 < wangbus^cbtl> it doesn't encrypt or anything
02:42 < redshadowhero> is there a preformance impact for uglify?
02:42 < azylman> You can't encrypt your client side code or the browser won't be able to run it
02:42 < crabtree> minifiers don't affect performance at all
02:43 < wangbus^cbtl> it's not a browser program
02:43 < manacit> once you give the javascript to the user you have to assume they'll be able to see how it works and stuff
02:43 < azylman> I'm confused. You said it's client-side code.
02:43 < azylman> But not a browser program.
02:43 < azylman> What is it?
02:43 < wangbus^cbtl> yea it's a node program
02:43 < manacit> I assume you're using AppJS or something?
02:43 < azylman> So server-side?
02:43 < crabtree> app.js
02:43 < crabtree> oo
02:43 < wangbus^cbtl> no, it's client side
02:43 < azylman> No one can see your server-side code.
02:43 < wangbus^cbtl> dude, lol forget it
02:43 < wangbus^cbtl> someone else know what i'm talking about?
02:44 < wangbus^cbtl> an example of a client side util is something like
02:44 < wangbus^cbtl> vows, mocha, supervisor, etc
02:44 < wangbus^cbtl> installs into /usr/local/bin or whatever
02:44 < wangbus^cbtl> anyway, i want to encrypt the js
02:44 < azylman> You can't encrypt that stuff
02:44 < azylman> Node needs to be able to read it to run it
02:45 < crabtree> you can encrypt it but they will always be able to decrypt it
02:45 < crabtree> and it provides no protection of the code whatsoever 
02:45 < crabtree> obfuscation is the best you can do but it doesn't help much
02:45 < azylman> I mean, you can't even encrypt it if you want them to be able to run it...
02:45 < wangbus^cbtl> obfuscation is good enough
02:45 < crabtree> well if you want them to be able to run it you'll need to make a loader or something
02:45 < crabtree> to temporarily decrypt it
02:45 < crabtree> it's a complete waste of time though
02:46 < wangbus^cbtl> yeah that kinda sucks
02:46 < crabtree> obfuscation is not much help either
02:46 < azylman> You could run it through the closure compiler
02:46 < wangbus^cbtl> anyway it's a requirement for the system i'm workin on
02:46 < wangbus^cbtl> sure. 
02:46 < azylman> I think that minifies it more and makes all the variable names single letter and stuff
02:46 < wangbus^cbtl> kk
02:46 < wangbus^cbtl> yeah good idea.
02:46 < crabtree> closure isn't an obfuscator, it's a minifier
02:46 < wangbus^cbtl> thanks man
02:46 < crabtree> obfuscation has the potential to screw up your code though so it isn't recommended 
02:48 < wangbus^cbtl> azylman: doing a lot of node nowdays?
02:48 < azylman> Yeah
02:48 < wangbus^cbtl> nice.
02:48 < wangbus^cbtl> been doing it for about a year now.
02:48 < azylman> Same
02:48 < drudge> TooTallNate: ping
02:48 < wangbus^cbtl> what do you do mostly.
02:49 < wangbus^cbtl> i've switched from nginx to bouncy
02:49 < wangbus^cbtl> good or bad call?
02:49 < wangbus^cbtl> haha
02:50 < azylman> Not familiar with bouncy
02:50 < azylman> We use nginx
02:50 <@TooTallNate> drudge: pong
02:50 < wangbus^cbtl> have you done websocket over nginx?
02:50 < azylman> Yeah
02:50 < wangbus^cbtl> i tried that stuff about 3 months ago and gave up
02:50 < drudge> TooTallNate: have you ever tried compiling node for android?
02:50 < wangbus^cbtl> if there are multiple node instances
02:50 < wangbus^cbtl> i have to dedicate a node instance to ws
02:51 < azylman> I've done it in the general sense. My co-worker was the one who figured out how to get it all set up to play nice with amazon's load balancer
02:51 < wangbus^cbtl> and do ipc through redis or something
02:51 < wangbus^cbtl> nices.
02:51 < wangbus^cbtl> how much do you guys pay for amazon for node
02:51 <@TooTallNate> drudge: personally i have not
02:51 < wangbus^cbtl> i feel like i'm getting jacked by linode.
02:51 <@TooTallNate> drudge: but i know that people have done it in the past
02:51 < echo> Default nginx doesn't support websockets, I thought.
02:51 < wangbus^cbtl>  echo yeah.
02:52 < crabtree> what
02:52 < wangbus^cbtl> echo: but you can get it to somehow
02:52 < crabtree> websockets lol
02:52 < wangbus^cbtl> i gave up though, full node all the way
02:52 < wangbus^cbtl> better control
02:52 < azylman> I don't pay the bills, so I dunno how much we pay
02:52 < azylman> Probably a lot, though
02:52 < crabtree> idk how that would work?
02:52 < wangbus^cbtl> crabtree: hate it? haha
02:52 < azylman> We have quite a few servers
02:52 < crabtree> no i don't hate it but don't you need to use your own server for websockets?
02:52 < crabtree> what would nginx do for websockets
02:52 < drudge> TooTallNate: was following your blog post, when I run the binary i get: node: /lib/arm-linux-gnueabi/libc.so.6: version `GLIBC_2.15' not found (required by node)
02:53 <@TooTallNate> drudge: are you cross-compiling
02:53 <@TooTallNate> ?
02:53 < wangbus^cbtl> load balancer for the nodes + you when the user does an http upgrade call for ws it goes to the right node
02:53 < drudge> TooTallNate: yes sir
02:53 <@TooTallNate> drudge: that seems like a libc version mismatch
02:53 < crabtree> well yeah as a load balancer
02:53 < drudge> the device has 2.13
02:54 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
02:54 < cloudbender> when do we get 64bit unsigned integers ?
02:55 < wangbus^cbtl> lol
02:55 < wangbus^cbtl> you guys used domains yet
02:55 < wangbus^cbtl> ?
02:55 < crabtree> cloudbender: you have em alrdy
02:55 < crabtree> there are a few libraries 
02:56 < cloudbender> could use a 128 bit too, but ....
02:56 < drudge> TooTallNate: the ubuntu package version is 2.15-0ubuntu10, but it says Provides: glibc-2.13-1
02:57 <@TooTallNate> drudge: hmmm… tbh, i'm not totally sure the best route of action here
03:02 < Asterokid> This is going to sound like a shellscript question not a node one... But when I transform my node script into a service, I have a hard time figuring out how to handle the stop function since I am not too sure how to get back to my process...
03:02 < Asterokid> Can I label my processes differently then just node? maybe?
03:02 < dclist> Is it possible to run a web server in the browser that listens at least on local host?
03:03 < wangbus^cbtl> dclist: i vaguely heard about some build of chromium that had that functionality
03:04 < jtomasrl> i need ro create users through an API, on what depends if I create a user class or just a function that makes a db insert
03:14 < raulvieira> I'm trying to learn about streams and piping.  Should I be listening for close/end to invoke my 'all done' callback?
03:16 < Selophane> Hello all, I just installed node and can install various modules through 'npm install' (e.g. async, coffee-script), however sqlite3 refuses to install... has anyone else had this issue?
03:17 < raulvieira> how are you installing sqlite3?
03:17 < Selophane> 'npm install sqlite3'
03:18 < raulvieira> i'm getting a 404
03:18 < raulvieira> it's not in npm
03:18 < Selophane> without the quotes? it's definitely listing it there for me
03:19 < raulvieira> my bad. it's there (typo).
03:19 < raulvieira> it installed successfully.
03:20 < raulvieira> what's npm telling you?
03:21 < Selophane> hmmm, interesting
03:21 < Selophane> it complains about quite a bit
03:22 < raulvieira> I'm running node v0.8.17
03:22 < Selophane> since I just installed node, it's at 0.8.18
03:22 < raulvieira> npm 1.1.66
03:23 < Selophane> npm ERR! Failed at the sqlite3@2.1.5 install script.
03:23 < Selophane> npm ERR! This is most likely a problem with the sqlite3 package,
03:24 < Selophane> my npm is 1.2.2
03:24 < raulvieira> gonna see if I can get 0.8.18 installed
03:24 <@Nexxy> Selophane, https://github.com/developmentseed/node-sqlite3#building
03:25 < Selophane> Thanks Nexxy, I've also tried that alternative method of installing but I get the same errors
03:26 <@Nexxy> but you have sqlite3 installed?
03:27 < Selophane> yes, sqlite3 itself is installed, version 3.7.11
03:28 <@Nexxy> do you receive any other error info?
03:28 < MI6> joyent/node: Ben Noordhuis master * 3fe6aba : os: rename tmpDir() to tmpdir() for consistency  Make the casing consiste - http://git.io/1ndWtw
03:28 < Selophane> Nexxy, I do, but it would be too much to post in the channel
03:28 < jtomasrl> can i add a status key to "new Error()" ?
03:29 <@Nexxy> Selophane, that's what paste services are for :)
03:29 <@Nexxy> preferably gisthub.com
03:29 <@Nexxy> or similar
03:35 < Selophane> Nexxy, please see here https://gist.github.com/4670367
03:39 < tpayne> is there a way to have 2 different layouts.ejs file in express?
03:40 < tpayne> actually, nm
03:40 < wangbus^cbtl> you can refer to the layout manuall
03:47 <@Nexxy> Selophane, how did you install node?
03:47 < Selophane> I downloaded the tarball, extracted and then ./configure, make, make install
03:50 < MiracleBlue> Nexxy!
03:50 <@Nexxy> MiracleBlue, !
03:50 < MiracleBlue> I'm working from home today.  Continuing on with my node project.
03:50 < MiracleBlue> Got Adm-Zip working
03:50 < MiracleBlue> It's badass
03:50 < MiracleBlue> Though it prints a weird toString output, malformed object literal listing.  But that's ok, that's just the toString version.
03:51 <@Nexxy> Selophane, this isn't really something I have much experience with, but from what little I know; it looks like it could be a paths issue?
03:51 <@Nexxy> MiracleBlue, awesome! :D
03:52 < Selophane> Nexxy, that's what I was thinking as well, however other modules are installing fine, so I didn't think it was an issue with the compiler
03:52 <@Nexxy> it could just be an issue with the sqlite3 build script not finding things like it should
03:53 <@Nexxy> Selophane, but if you stick around I'm sure someone with moar experience on the matter could help
03:53 < zivester> in express, if i want to mount '/admin' to a specific route... can I accomplish this with app.use('/admin').. or am i thinking about it the wrong way?  I'd like to declare all the routes from within the /admin/ route... like login, api, etc...
03:54 < wangbus^cbtl> zivester: that's a design decision that you need to make
03:54 < Selophane> Nexxy, thanks for your time all the same! I'll stick around and continue to try a few things
03:54 < wangbus^cbtl> zivester: doesn't really have much to do with express
03:54 < zivester> i want the ability to be able to move /admin to /admin2, or to admin.mydomain.com easily
03:57 < zivester> i mean its not legal to do app.use('/admin', function(req, res, next) { app.get('/login').... app.get('/api')... }) ... i think
03:58 < trypwire> hey guys. has anybody used restify before? Is there a way to create a route handler that accepts all types (get, post, put, delete) and still parses the url path?
04:00 < radvieira> Selophane, I'm install 0.8.18 to see if I can reproduce what you've been seeing.  I'm assuming your using linux.
04:04 <@Nexxy> FWIW I tried to reproduce on my ubuntu 12.04 VM but no luck, it worked ;<
04:13 < radvieira> Selophane, I've installed 0.8.18 and install sqlite3 without issue.  Here's the output I get:  https://gist.github.com/4670538
04:16 < Selophane> I think a path issue when it's looking for header files to include
04:16 < Selophane> I think it's a**
04:19 < radvieira> Curious.  What platform is are you  install on?
04:20 < Selophane> It's a VMware image of BackTrack5 R3
04:21 < Selophane> It appears unable to find v8.h or uv.h
04:21 < Selophane> I can locate them, but I'm not sure how to make it look in the correct directory for them
04:22 < min|dvir|us> What's the best way to do deep object extension?
04:23 < eduardo> hello guys
04:24 < min|dvir|us> Like options. How do I do default options?
04:24 < min|dvir|us> Especially if I have multidimensional options?
04:25 < jerrysv> othiym23: you around?
04:25 < radvieira> Selophane, I don't think I'm offering much help.  But I would think compiling any native modules will fail.
04:30 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:30 < radvieira> Good luck.
04:30 < min|dvir|us> Anyone?
04:32 < radvieira> mindlvirius, have you looked at https://github.com/dreamerslab/node.extend
04:38 < Selophane> Success! ;)
04:39 < radvieira> sweet.  how did you resolve it?
04:39 < Selophane> need to add environment variables to point to the header files
04:39 < radvieira> nice.
04:40 < radvieira> a node specific env var?
04:40 < Selophane> I set C_INCLUDE_PATH=/usr/local/include/node and CPLUS_INCLUDE_PATH=/usr/local/include/node
04:40 < radvieira> excellent.
04:40 < Selophane> I didn't realize that export only sets environment variables for a given terminal session tho
04:41 < Selophane> I had been setting the variables in one session and trying to install sqlite3 in another, which didn't end up having the path variables set
04:42 < radvieira> yeah, I've been there.
04:46 < othiym23> jerrysv: I'm around!
04:46 < jerrysv> othiym23: woo! more coming soon
04:49 < jerrysv> othiym23: thanks!
04:50 <@Nexxy> very mysterious indeed
04:50 < jerrysv> Nexxy: laurie's looking at a job possibility, needs enlightenment
04:50 <@Nexxy> has she tried incense and meditation?
04:51 < jerrysv> Nexxy: more times than one could guess
04:51 <@Nexxy> ommmmmmmm
04:51 < Sly> NEXXY
04:51 < Sly> OMG
04:51 <@Nexxy> SLY 
04:51 <@Nexxy> OMG
04:51 < jerrysv> omg indeed
04:51  * Nexxy holds an almost vigil for Sly
04:51 < jerrysv> othiym23: you were using an s107 at the hardware hack weekend, right?
04:52 < othiym23> jerrysv: yeah, I think so
04:52 < othiym23> the one I have now is that one + a camera, and I haven't had nearly as much time as I wanted to fuck around with it
04:52 < jerrysv> othiym23: if i remember correctly you wrote software for controlling it?
04:53 < jerrysv> othiym23: i have lots of time :)
04:53 < jerrysv> othiym23: what i'm looking for is the arduino control protocols
04:58 < othiym23> jerrysv: there's no arduino bits built in, and my package is wifli on npm
04:59 < othiym23> the arduino stuff I was hacking on was getting that dude's joystick controller patched into my module so I'd have a non-scripted control interface
04:59 < othiym23> which is kinda important with single-rotor devices, as my demo showed ;)
05:00 < jerrysv> hm. i found an interface online for arduino, wondering if i should just take a few into the office and turn them over to the rest of the dev staff, we have some lego trains to control too, so it might just blend in .......
05:00  * jerrysv reminds himself to pack some arduinos, pi's, and ir led's to go to work
05:05 < othiym23> jerrysv: you should go check out the pinocc.io indiegogo ;)
05:05 < othiym23> the dude working on that is a friend of mine, but I really like the form factor and the feature set
05:05 < othiym23> I'm thinking about upping my sponsorship to the 10-module level and just instrumenting the hell out of my house
05:05 < jerrysv> othiym23: i just received 2 digisparks though!
05:05 <@mbalho> hey its eric!
05:06 < jerrysv> mbalho: wat?
05:06 <@mbalho> (on the pinocc.io site)
05:06 < jerrysv> mbalho: aha! wait, do i know everyone active on #node.js at the moment?
05:07 < cming> me
05:07 < jerrysv> cming: who are you?
05:07 <@mbalho> i am active
05:07 <@mbalho> hi
05:07 < jerrysv> mbalho: hello! terraformer has been taking off!
05:07 <@mbalho> sweeeet
05:07 <@Nexxy> MAGNIFICENT
05:07 <@mbalho> jerrysv: make a voxel.js demo!!!
05:07 <@Nexxy> NOW TO PROCEED TO STAGE TWO
05:07 < jerrysv> mbalho: i put up an rtree county example
05:07 <@mbalho> here is every tree in oakland http://max.ic.ht/oakland-trees
05:08 < othiym23> mbalho: you didn't know that's what erictj was up to now?
05:08 <@mbalho> othiym23: nope
05:08 < jerrysv> mbalho: it might happen, last demo was rtree, so next can be voxel?
05:08 < othiym23> mbalho: he was doing some weird studio thing for Singly but it wasn't a good fit, so he and fixpert did pinocc.io
05:08 <@mbalho> jerrysv: booyea!
05:08 < othiym23> it's a neat project
05:08 < jerrysv> mbalho: wait, that's not very many rtrees
05:09 < substack> 38614 is sufficiently many trees
05:09 < jerrysv> but it's not being returned?
05:09 < jerrysv> 19984504 disk size, but packet size less than 1k?
05:10 < substack> for my own personal numerological tree criteria
05:10  * jerrysv has a 169mb polygon of us counties, but ...
05:10 < jerrysv> btw, substack, hi!
05:10 < substack> jerrysv: you've got to use the couchdbisms
05:10 < substack> beep boop
05:10 < jerrysv> substack: aha!
05:10 < jerrysv> ok, can do
05:10 < jerrysv> terraformer should work in couch too!
05:11 < jerrysv> substack: https://github.com/geoloqi/terraformer/
05:11 < jerrysv> mbalho: will hit it up for real rtree data, excited
05:11 < substack> jerrysv: the next version of arcgis should use voxeljs and also be a game
05:11 <@mbalho> jerrysv: all the trees around lake merrit http://max.ic.ht/oakland-trees/_design/spatial/_spatial/points?bbox=-122.26861953945308,37.800358920283045,-122.24578857631832,37.813853711894176
05:12 < jerrysv> substack: we are research, but i will see what we can do
05:12 <@mbalho> jerrysv: that query is an rtree tree query
05:12 < substack> a game where you mine for GEOGRAPHIC INFORMATION
05:12 < substack> data mining if you will
05:12 <@mbalho> substack: i am in oakland city hall right now
05:12 <@mbalho> substack: just made that api so i could hook it up to voxeljs
05:12 < substack> mbalho: what are you doing over there!
05:12  * substack at urban blend
05:12 < jerrysv> mbalho: https://raw.github.com/geoloqi/Terraformer/master/examples/polygons/geojson/us-counties.json
05:12 < substack> exactly 10 blocks away
05:13 < jerrysv> but it's too large
05:13 <@mbalho> substack: openoakland meeting, finishing up now
05:13 < substack> mbalho: you should call your civic mapping tool dataminer
05:14 <@mbalho> OOOH
05:14 < jerrysv> substack: did you check out terraformer?
05:15 < jerrysv> wkt to geojson!
05:15 < jerrysv> (among other things)
05:15 < substack> checking it out
05:16 < jerrysv> i got bored and converted the osm counties wkt to geojson. took a while on my laptop, but most of that was JSON.stingify()
05:16 < jerrysv> ok. 99% of that was JSON.stringify()
05:16 < substack> mbalho: I'm going to get tacos pretty soon
05:16 < jerrysv> mmm. tacos
05:16  * jerrysv is jealous
05:16 < substack> so many tacos in east oakland
05:16 < substack> so many
05:16 < substack> jerrysv: but you are in portland which is the street food capital of america
05:17 < jerrysv> so many ...
05:17 < jerrysv> substack: i know, but i never hit tacos
05:17 < jerrysv> korean fusion, sure, but tacos?
05:17 < min|dvir|us> I want to use | to specify an empty string for one alternative. Is this possible?
05:18 < jerrysv> min|dvir|us: ||, not |
05:18 < min|dvir|us> For RegExps, sorry.
05:18 < substack> min|dvir|us: what are you trying to do?
05:18 < jerrysv> min|dvir|us: and korean fusion.
05:18 < substack> >> /^(|blah)$/.test('')
05:18 < purr> substack: (boolean) true
05:19 < substack> korean fusion reminds me of the north korean nuclear program
05:19 < min|dvir|us> Hmm.
05:19 < min|dvir|us> Here's my regex. https://gist.github.com/0d9cd37f416ff049c714
05:19 < min|dvir|us> I know it looks kind of weird.
05:19 < substack> fission-enduced fusion that is
05:19 < wangbus> dude. voxel is pretty awesome.
05:19 < othiym23> substack: I'm reading a biography of Kim Il-Sung right now and it is sort of amazing reading
05:20 < min|dvir|us> That anyRegExpString part is my problem.
05:20 < substack> othiym23: is it a state-sponsored biography or something more critical?
05:20 < min|dvir|us> @opts.commands has a string of empty length, and it's making it so that all of the other commands are shadowed.
05:20 < othiym23> substack: it's probably the most even-handed English language biography out there right now
05:20 < substack> kim il sung probably didn't fight bears with his bare hands and such things
05:20 < min|dvir|us> >>> /(|asdf)/.exec('asdf')[0]
05:20 < purr> min|dvir|us: (string) ''
05:21 < min|dvir|us> ^^ problem.
05:21 < jerrysv> substack: korean fusion - yakisoba spicy pork or spicy pork burritos
05:21 < wangbus> substack: switched to bouncy from nginx..
05:21 < substack> min|dvir|us: what do you want to achieve?
05:21 < min|dvir|us> I want it to match '' last.
05:21 < substack> wangbus: there are some bugs :(
05:21 < othiym23> substack: http://www.amazon.com/Under-Loving-Care-Fatherly-Leader/dp/0312323220
05:21 < redshadowhero> >> /(|asdf)/.exec('asdf')[1]
05:21 < purr> redshadowhero: (string) ''
05:21 < redshadowhero> Huh.
05:21 < jerrysv> substack: jsconf?
05:21 < wangbus> substack: wondering if there's a way to do https virtual hosts with wildcard cert
05:21 <@konobi> you need the anchors
05:22 < redshadowhero> >> /(^$|asdf)/.exec('asdf')[1]
05:22 < purr> redshadowhero: (string) 'asdf'
05:22 < othiym23> but now I kinda want to read the original English state biography of him, because it sounds amazing in a sort of psychotronic way
05:22 < wangbus> substack: i just wanna do name based vhost
05:22 < redshadowhero> >> /(^$|asdf)/.exec('asdf')[0]
05:22 < purr> redshadowhero: (string) 'asdf'
05:22 < min|dvir|us> Hah!
05:22 < min|dvir|us> Is this the only case where I need anchors?
05:23 < redshadowhero> What are you trying to match?
05:23 < min|dvir|us> https://gist.github.com/0d9cd37f416ff049c714
05:23 < redshadowhero> I'm really sorry, but I haven't been paying attention, and I'm winding down for bed.
05:23 < redshadowhero> I see the gist, but I don't know what you're trying to match.
05:23 < redshadowhero> Looks like some tags.
05:23 < redshadowhero> No.
05:23 < min|dvir|us> No, it's for IRC commands.
05:24 < redshadowhero> Ugh. I'm so tired.
05:24 < jerrysv> mbalho: we're building geostore indexes for browser/node - with multiple backing stores
05:24 < min|dvir|us> `<command><text>
05:24 < redshadowhero> IRC in the format of...?
05:24 < redshadowhero> with no space?
05:24 < min|dvir|us> Err, `<command>\s*<text>
05:24 < jerrysv> mbalho: your example is really exciting
05:24 < min|dvir|us> With some redirection in there.
05:24 < min|dvir|us> But don't worry about that last line in the regex.
05:24 < min|dvir|us> That's for `command text > nick
05:24 < redshadowhero> So, your command is wrapped in <>s?
05:24 < min|dvir|us> No.
05:25 < min|dvir|us> #botwar
05:26 < redshadowhero> so, a gravetick, the command, and optionally nothing afterwards?
05:26 < min|dvir|us> Yep.
05:26 < redshadowhero> uh.
05:26 < redshadowhero> sec, brain is on sleep mode
05:26 < min|dvir|us> Problem is, I want to have an empty string as a command:
05:26 < min|dvir|us> ` mdn
05:26 < min|dvir|us> And it'll output something like "MDN is awesome, yo! <link>"
05:27 < redshadowhero> maybe something like /\`([^ ]+) (.*)$/?
05:27 < min|dvir|us> I realize I can do ^$. Should I use ^$ with all of the elements in the |?
05:28 < redshadowhero> >> /\`([^ ]+) (.*)$/.exec('` nothing);
05:28 < purr> redshadowhero: SyntaxError: Unexpected token ILLEGAL
05:28 < jerrysv> alright, sleepy time for me. goodnight substack, mbalho, othiym23 - thanks for all the fish
05:28 < redshadowhero> >> /\`([^ ]+) (.*)$/.exec('` nothing');
05:28 < purr> redshadowhero: (object) null
05:28 < min|dvir|us> I would want [^ ]*, not +.
05:28 < min|dvir|us> But I gotcha.
05:28 < redshadowhero> Yeah, *
05:28 <@konobi> well... /^(\w+?)(?:\s+(.+)?)?$/
05:28 < redshadowhero> 0 or more.
05:28 < jerrysv> .. true
05:28 < jerrysv> >> true
05:28 < purr> jerrysv: (boolean) true
05:28 < othiym23> see ya jerrysv 
05:28 < jerrysv> thanks purr
05:29 <@konobi> well... /^(\w+?)(?:\s+(.+?))?$/ even
05:29 < min|dvir|us> Why not \w*?
05:29 < min|dvir|us> (Without ?.)
05:29 < redshadowhero> >> /^(\w*?) (.*)/.test('command test');
05:29 < purr> redshadowhero: (boolean) true
05:29 < redshadowhero> >> /^(\w*?) (.*)/.exec('command test');
05:29 < purr> redshadowhero: (object) ['command test', 'command', 'test']
05:30 < redshadowhero> >> /^(\w*?) (.*)/.exec(' test');
05:30 < purr> redshadowhero: (object) [' test', '', 'test']
05:30 < redshadowhero> >> /^(\w*?) (.*)/.exec('test');
05:30 < purr> redshadowhero: (object) null
05:30 <@konobi> always capture the first one, optionally capture the second one if there's a space and stuff after
05:30 < redshadowhero> >> /^(\w*?) (.*?)/.exec('test');
05:30 < purr> redshadowhero: (object) null
05:30 < redshadowhero> argh.
05:30 <@konobi> (?:) is a grouping
05:30 < redshadowhero> I can't brain right now.
05:31 <@konobi> so the ? after it says that the whole group is optional
05:32 <@konobi> >> /^(\w+?)(?:\s+(.+?))?$/.exec("command")
05:32 < purr> konobi: (object) ['command', 'command', undefined]
05:32 <@konobi> >> /^(\w+?)(?:\s+(.+?))?$/.exec("command and more text")
05:32 < purr> konobi: (object) ['command and more text', 'command', 'and more text']
05:32 < redshadowhero> Argh. Braing is usless, I'm going to bed.
05:32 < redshadowhero> g'night everyone.
05:36 <@konobi> min|dvir|us: hopefully that works for you
05:36 < min|dvir|us> It does. :)
05:37 <@konobi> http://xkcd.com/208/
05:37 < fourcolors> Is there a way to run a node server or in my case an "everywhere" server (thats the name) and do a coffeescript -c -w by running one command? 
05:37 < fourcolors> so both at the same time 
05:38 <@konobi> stop using coffeescript... done
05:38 < wangbus> lol
05:38 < wangbus> you can write a bash script or something
05:38 < min|dvir|us> CoffeeScript is great.
05:38 < wangbus> that should fix it
05:38 < wangbus> ohnoes -_-
05:38 < min|dvir|us> fourcolors: have you tried using a shebang?
05:39 < fourcolors> no, I haven't heard of that 
05:39 < wangbus> #!/usr/bin/env node
05:39 < fourcolors> it's my second day with node stuff ha
05:39 < wangbus> #! = shebang
05:39 < min|dvir|us> fourcolors: it's more of a shell thing.
05:39 < min|dvir|us> If the shell sees a shebang it uses it as the command line to run the file.
05:40 <@konobi> assuming he's on unixen of course
05:40  * min|dvir|us wonders if all C files should have #!/usr/bin/cint
05:40 < fourcolors> right.. Um well this is what Im trying to do. Basically this: npm install && coffee -w -o app/assets/compiled -c app/assets/coffeescripts && anywhere
05:41 < fourcolors> I have that in my "scripts" {"start": #stuff} 
05:41 < min|dvir|us> Why don't you write a script that does everything you want?
05:41 < min|dvir|us> Could be Node or bash.
05:42 < fourcolors> but wouldn't I still have the same problem? 
05:42 <@konobi> fourcolors: might be worth looking at the npm package.json options
05:42 < fourcolors> I mean i would get hung up on the same proceess? 
05:42 <@konobi> like, https://npmjs.org/doc/start.html
05:42 < fourcolors> konobi: I put that in my package.json file though 
05:43 < min|dvir|us> I'm not sure what you're talking about, fourcolors.
05:43 < fourcolors> konobi: that is in my start script ... 
05:43 <@konobi> fourcolors: there are other hooks available to you
05:43 < fourcolors> min|dvir|us: so what happens is I do a npm start and it will first run the npm install command which works fine, but then it gets to the second command which sits and hangs watching coffeescript to compile and never gets to the "anywhere" command 
05:44 < fourcolors> konobi: right, there is a predeploy, postdeploy and a stop but I need something like, after start or something I think 
05:44 < min|dvir|us> fourcolors: put your log in your script.
05:44 < min|dvir|us> Make an entry point script.
05:44 < sorensen> interesting, didnt know npm had a start command
05:44 < min|dvir|us> It doesn't. You can add commands to npm.
05:45 < s3shs> If just adding begin transaction and commit to my series of queries guarantees atomicity with MySQL, then why is this necessary?  https://github.com/bminer/node-mysql-queues/blob/master/README.md
05:45 < min|dvir|us> Sorry, did I say log? I meant line.
05:45 < sorensen> it looks to have an alias to run whatever you listed in the package.json
05:45 <@konobi> fourcolors: you can't watch and run at the same time like that
05:45 < min|dvir|us> sorensen: yep.
05:45 < fourcolors> konobi: why not? 
05:45 < sorensen> still has the cmd ;)
05:46 < fourcolors> can't i make it run in a background process or something somehow 
05:46  * sorensen misses this channel
05:46 < wangbus> npm commands are configured in package.json right
05:46 < sorensen> been gone too long
05:46 <@konobi> fourcolors: since the watch command won't exit until it's killed off, your "anywhere" script won't run
05:46 < min|dvir|us> wangbus: yep.
05:46 < wangbus> yep 
05:46 < fourcolors> konobi: right, ya thats the problem im running into 
05:46 < fourcolors> konobi: is there a solution around that? 
05:47 < fourcolors> i mean, I can just open two terminals and run both commands but.. thats kind of annoying 
05:47 <@konobi> fourcolors: not a simple one, since you won't be able to kill off the watch afterwards (restart)
05:48 < wangbus> min|dvir|us: workin on anything cool?
05:48 < fourcolors> konobi: maybe I can somehow hook into files changing with noman (I think thats what its called) and recompile every time the server restarts
05:48 < fourcolors> instead of using watch 
05:49 < min|dvir|us> wangbus: an IRC bot.
05:49 < crabtree> been there done that
05:49 < min|dvir|us> I don't know if that's cool enough. :)
05:49 < min|dvir|us> This is my first Node toy.
05:49 <@konobi> nb, bringing bots into channel will incur the wrath of ops
05:50 < min|dvir|us> konobi: I wouldn't think of it.
05:50 <@konobi> gd gd
05:50 < sorensen> min|dvir|us: first node toy?
05:50 < sorensen> maybe its just the javascript channel i always see you in?
05:51 < min|dvir|us> ?
05:51 < wangbus> oh cools
05:51 < wangbus> have you looked at hubot?
05:51 < min|dvir|us> Don't care. Writing my own.
05:51 < min|dvir|us> His name is Herbert.
05:51 < wangbus> i tried to get it to work over irc a while ago.
05:51 < sorensen> whats ?
05:51  * sorensen has had some beers
05:52 < wangbus> nice. cools
05:52 < wangbus> herbert huh
05:52 < wangbus> what's it do so far?
05:52 < sorensen> i feel like everyone needs to write an irc bot
05:53 < sorensen> i am behind the curve
05:53 < wangbus> damn straight
05:53 < sorensen> lol
05:53 < wangbus> all day
05:53 < wangbus> irc bots
05:53 < fourcolors> maybe i'm going about this wrong. Is there a simple light server that I could serve up my static files and it would auto compile my coffeescript for me? 
05:53 < sorensen> def cant hurt ;)
05:53 < wangbus> fourcolors: hmm, you should checkout brunch.io
05:54 < wangbus> it sounds like what you're going after.
05:54 < azylman> I'm just coming in to the conversation, so maybe this has already been suggested, but why couldn't you use Express?
05:54 < sorensen> fourcolors: that sounds like the job of two different services
05:54 < sorensen> unless your speaking purely dev
05:54 < azylman> You CAN just use it to serve up your static files, and it has middleware to compile coffeescript files into js files
05:54 < sorensen> azylman++
05:54 < wangbus> i would use something completely different for static files
05:55 < wangbus> like sorensen said, it's 2 different services
05:55 < fourcolors> azylman: didn't know about that. 
05:55 < sorensen> i think it depends if its a development solution or prod
05:55 < wangbus> at least for node, i'd like to write software in small modules that does 1 thing well.
05:55 < azylman> https://github.com/wdavidw/node-connect-coffee-script
05:55 < fourcolors> it for development 
05:55 < sorensen> then i think you are fine putting it in express or whatever you are comfortable with
05:55 < sorensen> in prod you would probably do static with nginx or a cdn
05:56 < sorensen> and coffeescript would be compiled during the build process
05:56 < sorensen> and then served to the cdn ;)
05:56 < wangbus> but if you're just learning node, my personal preference is to stay away from coffeescript.
05:56 < sorensen> i stay away from coffeescript at all times
05:56 < sorensen> i seem to be an oddball
05:57 < wangbus> i stay away
05:57 < fourcolors> well I know coffeesript pretty well I just have not really every done anything nodeish 
05:57 < sorensen> i wouldnt use coffeepython if it existed either
05:57 < echo> sorensen: You're not alone. I use nginx for static file serving and proxy to my express apps. And I've never found a reason to use, try or learn coffeescript.
05:57 < sorensen> huzzah
05:57 <@konobi> halfcafflowfatnowhipextraspiceshortmochascript
05:57 < azylman> I love coffeescript
05:57 < azylman> Mmmm
05:58 < wangbus> syntactic sugar.
05:58 < sorensen> not that i dont like syntactic sugar, i just like it most when its mine
05:58 < wangbus> eh.
05:58 < wangbus> idk, it just doesn't address enough things to make it useful
05:58 < sorensen> js allows for all the sugar you want by nature i feel
05:58 < sorensen> wangbus: i'm not talking about coffee
05:59 < azylman> js does not allow all th sugar I want
05:59 < azylman> js can't do
05:59 < wangbus> haha.
05:59 <@Nexxy> this thread again?
05:59 < azylman> [username, password] = token.split(':')
05:59 < sorensen> lol
05:59 < azylman> I'm not saying coffeescript is better or worse
05:59 < wangbus> mehh
05:59 < azylman> But saying that js can do all the stuff it can do is just flat out wrong :p
05:59 < wangbus> i don't want to be in this convo lol
05:59 < sorensen> i feel everytime i am in this channel Nexxy pops up
06:00 <@Nexxy> that's just because I'm omnipotent
06:00 < sorensen> apparently so
06:00 <@Nexxy> ;)
06:00 < sorensen> even in the javascript channel you pop up
06:00 <@Nexxy> actually
06:00 <@Nexxy> I gave up on ##javascript :P
06:00 < sorensen> i did too quite some time ago
06:00 < sorensen> but thats where i know your nick from
06:00 <@Nexxy> ^-^
06:00 < sorensen> glad to see you in node.js ;)
06:01 <@Nexxy> same!
06:01 < sorensen> though im far less regular
06:01 < wangbus> good stuff
06:01 < sorensen> jobs and stuffs :(
06:01 < wangbus> you guys mostly in the valley?
06:01 < wangbus> ny?
06:01 <@Nexxy> PDX
06:01 < wangbus> ph nice
06:01 < wangbus> oh*
06:01 < sorensen> eh... im in tri cities WA atm
06:01 < azylman> I'm in the valley
06:01 < wangbus> kk outs. seeya guys laters
06:01 < sorensen> going back to NYC for a few weeks
06:01 < wangbus> <- hi
06:01 <@Nexxy> &yet country!
06:02 < sorensen> then back to spokane WA
06:02 < sorensen> im working at &yet ;)
06:02 < sorensen> well... with them
06:02 <@Nexxy> hahaa!
06:02 <@konobi> vancouver, bc
06:02 < wangbus> - hawaii
06:02 < sorensen> our company hired them for some contracting work
06:02 <@Nexxy> sorensen, awesome! I love the &yet folks
06:02 < sorensen> have been down there quite a bit
06:02 < sorensen> yeah, adam and henrick are great guys
06:02 < wangbus> telecommute... actually work in the bay -_-
06:02 < sorensen> been down for meetups and competitions a few times
06:02 < sorensen> bout 2.5 hours away in spokane
06:03 < wangbus> i was in seattle for thanksgiving
06:03 < wangbus> was so cold omfg.
06:03 <@Nexxy> seattle is so crazy
06:03 < sorensen> been there once
06:03 < sorensen> im a fan
06:03 < wangbus> hah
06:03 < wangbus> food's good.
06:03 < wangbus> :)
06:04 < wangbus> kk im out, nice meeting ya guys
06:04 <@Nexxy> bai bai
06:04 < wangbus> quit
06:04 <@konobi> (working for oneself)++
06:05 <@konobi> telecommute from anywhere!
06:05 < timeturner> what's the average cost of living in the bay area?
06:05 < timeturner> thinking about moving there...
06:05 <@konobi> rent seems to be ridiculous
06:05 <@Nexxy> everything is ridiculous
06:06 < timeturner> yeah, I've heard it's pretty high :(
06:07 < Lorentz> is it $2000/month bad
06:08 <@Nexxy> that'd be nice
06:08 < fourcolors> yeoman is awesome 
06:22 < sorensen> awwww yis
06:23 < sorensen> feel like 2k in the bay is pretty good
06:23 < sorensen> well, depending on what your getting i suppose
06:24 < sorensen> friend is paying near 3k for a 1 bedroom in manhatten
06:24 < sorensen> Nexxy: https://github.com/sorensen/defined-args
06:25 < Lorentz> I live in sydney, but it's a suburb where I am
06:25 < Lorentz> middle-of-city would be ridiculously more expensive
06:26 < sorensen> never been in aussy land
06:26 <@Nexxy> sorensen, interesting!
06:26 < sorensen> would be fun i figure
06:27 < sorensen> Nexxy: thanks
06:28 < azylman> sorensen: when do you use that?
06:28 < sorensen> i think the best use case for it is having a method with a variable number of args
06:29 < sorensen> making sure to get the callback and such
06:29 < azylman> Nod
06:29 < sorensen> azylman: things like getting the callback when the function has 2-5 args or something
06:29 < sorensen> da.last.function(...)
06:30  * jTNT mumbles: Ken Oathcarn
06:31 < echo> sorensen: That's neat. 
06:31 <@Nexxy> sorensen, yeah I could see that
06:31 < sorensen> thanks, was an easy enough thing to do
06:32 < sorensen> figured i need to write easy modules to maintain :P
06:36 < crabtree> hi friends
06:36 < sorensen> heyo
06:48 < xdomox> whats the best way to pass node.js info to the client
06:48 < xdomox> like a database result
06:49 < xdomox> with a lot of info
06:49 < zodiak> xdomox, json ?
06:50 < xdomox> ty
06:54 < SomeoneWeird> lol
06:54 < sorensen> ?
07:02 < zodiak> damn.. promises rock my world
07:04 < someprimetime_> how are most of you sending/checking for existence of your variables from the router to the view?
07:04 < someprimetime_> basically i'm passing a request parameter if it exists and i want to check for its existence within my jade template
07:08 < sorensen> someprimetime_: `- if ('undefined' !== typeof param)`
07:08 < sorensen> within my template
07:09 < someprimetime_> sorensen: thanks! do you have any recommendations of microtemplates to use? i'm coming from websites I've built with CakePHP/backbone (w/ underscore templating) so I'm trying to get an understanding of best practices on templating
07:09 < someprimetime_> but i'm really digging node so far
07:10 < crabtree> dig it!
07:10 < someprimetime_> :P
07:11 < sorensen> lifes a garden man
07:11 < sorensen> i dont have suggestions, do you mean actual templates or micro templating languages to use
07:12 < someprimetime_> just actual templates… if i had to pick a micro templating engine i'd end up using underscore since i'm using backbone anyway
07:12 < someprimetime_> i saw https://github.com/bminer/node-blade though
07:13 < sorensen> idk, use the templating language that suits you best
07:13 < sorensen> we use jade because we do alot of server side rendering as well, so the blocks and extend methods work out well for us
07:13 < sorensen> i generally prefer mustache for syntax
07:13 < someprimetime_> cool thanks for the insight
07:13 < sorensen> but i think jst has the speed advantage
07:14 < someprimetime_> +1 on mustache syntax
07:14 < sorensen> it depends on your use case, if your doing a heavy ammount of templating, maybe look at the speed advantages of one lib vs the other
07:14 < someprimetime_> ok thanks. most websites i make are more informational than interactive though so i'll definitely consider that
07:15 < sorensen> if thats the case i would use whatever you want
07:15 < sorensen> and actually underscore might be the easiest to do
07:15 < sorensen> since you already  need the lib for backbone
07:16 < sorensen> personally i would use underscore in that use case
07:16 < sorensen> which you could configure to use {{ }} style templating if you like ;)
07:17 < someprimetime_> yeah that's the first thing i did (interpolate from erb to {{}}) when using _
07:17 < someprimetime_> thanks for the advice!
07:17 < sorensen> np
07:17 < sorensen> time for bed here, gl
07:19 < someprimetime_> thx nite
07:45 < segomos> twitter devs came out with a sped up version of moustache
07:46 < crabtree> links segomos
07:47 < segomos> http://twitter.github.com/hogan.js/
07:47 <@Nexxy> segomos, is it called soul patch?
07:47 <@Nexxy> oh nm ;<
07:47 < segomos> soul patch would have been cool too though
08:00 < MI6> joyent/node: isaacs master * f64d1fe : lint - http://git.io/adJ09A
08:13 < echo|1> rofl nexxy
08:13 <@Nexxy> wat
08:13 < echo|1> I'm a little late on the soul patch
08:14 <@Nexxy> haha
08:17 < Octagonking> I have a question
08:17 < Octagonking> to do with the IRC library
08:17 <@Nexxy> fascinating... tell us more!
08:18 < Octagonking> How can I make the bot respond to actions
08:18 < Octagonking> OH
08:18 < Octagonking> gtg
08:18 <@Nexxy> ALRIGHT!
08:21 < ashnur> :)))
08:21 < ashnur> Nexxy: you have lots of time? :D
08:21 <@Nexxy> ashnur, yes, all of it.
08:22 <@Nexxy> I have all the time
08:22 < ashnur> that's good. wanna help me with something then? I've wrote a bunch of text and code, and I would love if someone would point out mistakes and stupid things in it :D
08:22 <@Nexxy> oh... *that* kind of time
08:22 <@Nexxy> let me look...
08:23  * Nexxy digs around a little
08:23 <@Nexxy> yes, here it is
08:24 < ashnur> :))
08:24 <@Nexxy> (I'll do what I can)
08:24 < ashnur> it's here http://ashnur.github.com/async-hell/
08:26 <@Nexxy> ashnur, in the intro, you should use the word "they" instead of "he/she"
08:26 <@Nexxy> otherwise it's good!
08:26 < sheldonh> is http://nodejs.tchol.org/ gone for good? is a fedora repo being hosted somewhere else?
08:26 <@Nexxy> also the indentation in your first example is a little hard to read just because of the word wrapping
08:27 < ashnur> hmm
08:27 < ashnur> i will change that he/she then. I never knew if it's correct or not
08:27 < ashnur> dunno about the wrapping
08:27 <@Nexxy> it might be my browser
08:27 < ashnur> it shouldn't wrap
08:27 <@Nexxy> but for example, the set function wraps all weird
08:28 < ashnur> i just don't like lines longer than 80 char
08:28 <@Nexxy> also the anonymous function inside mean
08:28 < ashnur> the set function is a single line function
08:28 < ashnur> could you pls show me a screenshot?
08:28 <@Nexxy> sure!
08:30 <@Nexxy> ashnur, http://i.imgur.com/8JOUpcf.png
08:30 < ashnur> you are right, that is weird
08:30 <@Nexxy> also I notice a typo in makeDivisible
08:31 < ashnur> :(
08:33 < echo|1> sheldonh: Yes, it is gone. 
08:33 <@Nexxy> you wanted help!
08:33 < ashnur> yeah, I corrected that typo many times already and still got out.
08:33 <@Nexxy> ohh oki
08:34 < ashnur> and I love the help, thank you!
08:34 <@Nexxy> I thought you were sad @ me for pointing it out lol
08:34 < ashnur> :)
08:34 < ashnur> no, not in any way
08:34 <@Nexxy> :D
08:36 < [AD]Turbo> hola
08:38 < echo|1> Hello!
08:39 < echo|1> Yuck. My face when I forget to bring over my vimrc with me into a new box. -_-
08:39 <@Nexxy> echo|1, you mean you don't have a dotfiles repo on github?!
08:41 < cxreg> make sure to include your .ssh/id_rsa
08:41 < echo|1> Nexxy: I did at one time. But, I haven't updated it in forever, it's been a month or so since I've provisioned a new server. I was doing a lot of it previously and had everything configured in puppet
08:41 < echo|1> Lol'd
08:41 < ashnur> Nexxy: would you please check if the wrapping went away?
08:41 < yuho> answering my own question from a few days back; (rudimentary but usable) nlp for node: https://github.com/NaturalNode/natural
08:42 <@Nexxy> ashnur, sure
08:42 <@Nexxy> ashnur, also another bit of feedback
08:42 <@Nexxy> it doesn't seem as though I can reference particular pages
08:42 < ashnur> Nexxy: you are right, that is an issue
08:42 < ashnur> i have yet to solve that
08:43 <@Nexxy> ashnur, it looks a little better but still wraps
08:43 < ashnur> the fact is that this is just one page and i show/hide divs because otherwise it would scare people 
08:43 < ashnur> it scares them anyway :(
08:43 < ashnur> damn
08:43 < ashnur> i added frikin white-space 'pre' :-S
08:44 <@Nexxy> ashnur, ya but you could update the #fragment
08:44 < ashnur> Nexxy: i will do that
08:44 < ashnur> after I had some sleep
08:45 <@Nexxy> oki!
08:45 <@Nexxy> good work though!
08:45 <@Nexxy> :)
08:45 < ashnur> for now I want to solve that wrap stuff
08:45 < ashnur> thanks :)
08:46 < ashnur> I do use some new lines here and there when I think the line would be too long otherwise
08:47 < ashnur> but in those cases I also use indentation to make it clear what happened
08:47 <@Nexxy> I would just indent after the { myself
08:47 <@Nexxy> but you could also set a min-width on the div or something
08:47 <@Nexxy> and set the overflow-x to auto
08:48 < ashnur> the overflow is on visible :-S
08:48 <@Nexxy> if you auto it + set a width that prevents wrapping
08:48 <@Nexxy> it will just scroll instead
08:48 < ashnur> and the div should be wide enough
08:48 <@Nexxy> or, ya
08:48 <@Nexxy> that!
08:48 < ashnur> visible does the same thing, without the scroll on the element
08:48 < ashnur> :)
08:48 <@Nexxy> that's nicer probably
08:48 < ashnur> so it should solve it, not sure what's happening
09:10 < Aartsie> i got this error: Cannot overwrite `Users` model once compiled. in my node.js script i use mongoose but i don't know how to fix it :( can somebody tell me how to fix this ?
09:10 < AppleJuice> The following line hangs in nodejs REPL v0.6.19 and produces a exception when run from a file:\n ♡ = "heart";
09:11 < AppleJuice> I wanne have unicode variable names~
09:15 <@Nexxy> AppleJuice, you can use unicode variable names
09:16 <@Nexxy> ಠ_ಠ is valid
09:16 < AppleJuice> Is it due my old nodejs version?
09:16 <@Nexxy> the heart is not a valid character
09:16 < _ior> how about the snowman
09:16 <@Nexxy> IDUNNOLOL
09:16 < ashnur> Nexxy: maybe now? :-S
09:17 < _ior> ☃
09:17 <@Nexxy> nope
09:17 < ashnur> fuck.
09:17 < AppleJuice> Nexxy, Thank you, your eyes worked.
09:17 <@Nexxy> ashnur, hold on lol
09:17 < ashnur> i give up
09:17 <@Nexxy> ashnur, that was to _ior 
09:17 <@Nexxy> ashnur, can you link me again? I closed the tab ;<
09:18 <@Nexxy> AppleJuice, use this: http://mothereff.in/js-variables
09:18 <@Nexxy> it will tell you which are valid lol
09:18 < AppleJuice> Nexxy, Thanks!
09:18 <@Nexxy> :)
09:18 <@Nexxy> Hͫ̆̒̐ͣ̊̄ͯ͗͏̵̗̻̰̠̬͝ͅE̴̷̬͎̱̘͇͍̾ͦ͊͒͊̓̓̐_̫̠̱̩̭̤͈̑̎̋ͮͩ̒͑̾͋͘Ç̳͕̯̭̱̲̣̠̜͋̍O̴̦̗̯̹̼ͭ̐ͨ̊̈͘͠M̶̝̠̭̭̤̻͓͑̓̊ͣͤ̎͟͠E̢̞̮̹͍̞̳̣ͣͪ͐̈T̡̯̳̭̜̠͕͌̈́̽̿ͤ̿̅̑Ḧ̱̱̺̰̳̹̘̰́̏ͪ̂̽͂̀͠
09:19 <@Nexxy> lol
09:19 <@Nexxy> my favorite
09:19 < ashnur> Nexxy: http://ashnur.github.com/async-hell/
09:19 < _ior> nexxy :(
09:19 <@Nexxy> I think it has to be a letter basically
09:19 <@Nexxy> idk how it works
09:20 <@Nexxy> ashnur, ya is still wrapping ;<
09:20 < ashnur> impossibru
09:24 < ashnur> i really should just delete all the css and go with default formatting
09:24 < ashnur> who cares
09:28 < echo|1> Or throw in like bootstrap or some effortless "make this shit pretty" thing.
09:30 < ashnur> Nexxy: i asked one of my friends to make some screenshots now, and it seems ok
09:30 < ashnur> either way, thanks for the help
09:31 <@Nexxy> ashnur, sure!
09:31 <@Nexxy> I'm sure I will have more to offer sometime as well
09:32 < Aartsie> do i have to open an new connection for every db call ? 
09:32 < ashnur> Nexxy: I would especially be grateful for code review, if anyone would have ideas for better code in the examples
09:43 < Slydder> am new to node and am wondering what does this log entry mean? {"level":"error","message":"Error: Could not parse xml Error: Could not parse XML string","timestamp":"2013-01-30T07:32:56.793Z"}
09:50 < AppleJuice> Slydder, It failed to parse xml
09:50 < AppleJuice> Dam im clever.
10:06 < j3lte> hello
10:08 < j3lte> got a quick (maybe offtopic) question: where do I report completely inactive and empty npm modules? Found a bunch, github is empty but still shows up in npm
10:10 < j3lte> nobody?
10:11 < pyrotechatron> j3lte: isaacs
10:12 < j3lte> yeah but reporting them manually would be a bit of a hassle, wouldn't it? There is no way to report this in a more automatized way?
10:12 < j3lte> (excuse my grammar, non-native English)
10:17 < pyrotechatron> j3lte: the name is taken whether it's empty or abandoned or not
10:17 < dominictarr> j3lte: the current process it to email the author
10:17 < dominictarr> and cc isaacs
10:17 < pyrotechatron> all takedown requests are handled personally by isaacs on a case-by-case basis
10:17 < dominictarr> ask them to remove the module
10:17 < j3lte> ok thanks for the clear answer :)
10:17 < AAA_awright> Is there a simple function for comparing ObjectIds on the browser-side?
10:18 < dominictarr> I think that is even in the docs
10:18 < AAA_awright> Because it should be true that ObjectIds always compare in the order they're created, yes?
10:18 < pyrotechatron> wtfs an ObjectId
10:18 < AAA_awright> pyrotechatron: BSON/MongoDB
10:21 <@Nexxy> lol
10:22 <@Nexxy> oh, BSON
10:22 < pyrotechatron> do you just have one server?
10:22 < pyrotechatron> one mongo instance?
10:22 < pyrotechatron> pm me this is #node not #mongo :P
10:26 < pyrotechatron> you've got some kind of anti-PM thing, you should just be able to compare the strings with < / > if they're from the same mongo instance - read this - http://docs.mongodb.org/manual/core/object-id/
10:42 < AAA_awright> pyrotechatron: Just ping me in-channel
10:42 < AAA_awright> Yeah I forgot you can do string comparison in ECMAScript
10:42 < pyrotechatron> yeah thats all i wanted to say anyway :p
10:42 < pyrotechatron> yep :)
10:42 < pyrotechatron> 1337 |hax.
10:42 < AAA_awright> And everything is on-topic in #Node.js
10:43 < AAA_awright> Allow me to demonstrate
10:43 < AAA_awright> So guys what's your favorite Zelda title?
10:43  * _ior answers "wind waker" just to stir controversy.
10:44 < AAA_awright> I'm inclined to agree actually, that was my first one, perhaps behind Twilight Princess, but idk, it's like choosing a favorite kid
10:44 < _ior> wind waker was better than people tend to give it credit for (then and now, but especially then)
10:45 < _ior> but the near-end-game fish-the-seas treasure hunt was complete fail in good game design
10:45 < AAA_awright> Oh hah I remember that
10:45 < _ior> actually i'd like to play it again but i don't hvae anything i can connect my gamecube to
10:45 < AAA_awright> I thought it was amusing, idk
10:45 < AAA_awright> Especially if you did the mini-dungeons in between
10:45 < AAA_awright> the alcoves or whatever
10:46 < _ior> also i don't think i ever finished twilight princess, cause my tv input card broke and i couldn't afford another one at the time
10:46 < AAA_awright> Oh dear
10:47 < AAA_awright> TP is probably certainly the most emotional, I keep re-watching the credits sequence for a project I'm working on and it gets me every time
10:47 < _ior> well maybe someday i'll find the time to replay to the end
10:47 < _ior> i don't suppose it will be this year, though
10:47 < _ior> and first i'd hvae to buy a tv
10:47 < _ior> and i can't really be bothered
10:48 < _ior> that's the biggest problem with console gaming
10:48 < _ior> it assumes a large tech stack
10:48 < _ior> har har har
10:48 < AAA_awright> ha
10:48 < AAA_awright> I'm hooking my Wii U up to my HDMI monitor for lots of stuff actually, that should work
10:49 < AAA_awright> I didn't think I was going to do TP for a while, but then said project forced me to do a playthrough, I finished in 7 days
10:50 < _ior> hah yeah i don't even have a monitor. been laptops only for so very long
10:50 < _ior> also i don't think i hvae a console that supports hdmi hahaha so there we go
10:50 < AAA_awright> Eee I used to do all my work on a tiny notebook, 1024x600px
10:50 < _ior> that doesn't sound like an eeepc
10:50 < _ior> that sounds too large!
10:51 < AAA_awright> MSI Wind
10:51 < AAA_awright> Slightly slicker
10:52 < AAA_awright> 10" screen or so (though it's the pixel count that really matters)
10:52 < _ior> "that's what she said"
10:52 < _ior> okay, so, have we proven your point about "all topics ok"?\
10:52 < AAA_awright> :)
10:53 < sha0coder> hi
11:28 < geNAZt> hi someone got an example on how to use momentjs in expressjs for localized dates ?
11:40 < Kakera> is there no way to set the connection timeout for a socket?
11:40 < Kakera> 10-ish seconds is way too much
11:40 < geNAZt> tcp socket ?
11:41 < Kakera> yes
11:41 < geNAZt> http://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback
11:41 < Kakera> that's not it
11:42 < Kakera> I'm talking about the timeout before ECONNTIMEOUT
11:46 < geNAZt> https://github.com/joyent/node/issues/332
11:47 < geNAZt> https://github.com/joyent/node/blob/master/test/simple/test-net-connect-timeout.js
11:47 < geNAZt> it should work
11:50 < der_On> hello. I run multiple node js web-applications on one server and regulary need to restart single applications. For now I do run them in the background but I can't find a way of restarting a single application without killing all other node apps. is there a prefered way of doing this?
11:51 < geNAZt> der_On: child processes ?
11:51 < SomeoneWeird> screen?
11:52 < Kakera> so setTimeout sets both?
11:52 < Kakera> sounds broken to me
11:52 < der_On> actually I tried with "kill $(pidof node myapp.js)" but that killed all node js apps
11:52 < der_On> same for start-stop-daemon --name node myapp.js
11:52 < SomeoneWeird> use screen
11:52 < geNAZt> maybe you should kill the node in the node itself
11:53 < der_On> geNAZt?
11:53 < geNAZt> you have a parent process that spins up all childs
11:53 < geNAZt> and you have a interval on each childs
11:53 < SomeoneWeird> der_On, http://www.rackaid.com/resources/linux-screen-tutorial-and-how-to/
11:53 < geNAZt> if one interval occurs you kill one node instance and start it again
11:54 < geNAZt> or u use a module in each child that does that for u
11:54 < geNAZt> i dont know the name but i read on it
11:54 < geNAZt> it tracks the usage of a node webapp and i the usage is low it kills and restarts it
11:55 < Tim-_-> hmm so i upgraded npm and node to the latest versions 1.2.4 and 0.9.1, and hiredis won't reinstall
11:55 < der_On> geNAZt: that's not what I want. Its a dev server and I need to restart one app, when I commit changes to the code
11:56 < geNAZt> nodemon ?
11:56 < geNAZt> https://github.com/remy/nodemon
11:59 < hipsterslapfight> all three freenode channels i'm in, well done Tim-_-!
12:09  * remysharp anyone know if there's a way with npm to have a script detect an update (so it could prompt for upgrade)?
12:09 < remysharp> anyone know if there's a way with npm to have a script detect an update (so it could prompt for upgrade)? (that was meant to be a general msg not a slash me)
12:12 <@konobi> no
12:15 < Tim-_-> why would updating npm and node stop hiredis from compiling?
12:16 < geNAZt> maybe some sources changed ?
12:18 < Tim-_-> sigh
12:18 < Tim-_-> every fucking time
12:27 < jd823592> Hello, when I create app with expressjs and i want to have a public directory except all files in it that match regexp (for example stylesheet directory with .styl files or script directory with .coffee - those i would like to hide) how can i do it?
12:28 <@konobi> generate them into a seperate folder?
12:30 < jd823592> @konobi: any other way? on the express side? what i do is "coffee -cbw ." which wont move generated files anywhere so the files occupy the same directory
12:31 < jd823592> styl files get auto generated ...
12:31 < jd823592> i mean compiled into css
12:31 < jd823592> that reside in the same dir then too
12:31 <@konobi> jd823592: there's extra options you can use to change the output dir
12:33 < jd823592> @konobi the option is not very helpful when whole tree is compiled
12:33 <@konobi> src -> assets
12:35 < jd823592> ok i will try it out
12:36 < SomeoneWeird> Anyone know a good module for API authentication?
12:38 <@konobi> http-signature?
12:57 < _ior> wow ew: http://www.ozonehouse.com/mark/blog/code/PeriodicTable.pdf
12:57 < _ior> i had no idea
13:01 <@konobi> _ior: that's huffman coding for ya
13:02 < coreb> nowjs.com seems to be down, are there similar alternatives based on socket.io?
13:02 < `3rdEden> nowjs isn't down, it's dead.
13:04 < coreb> making my question even more relevant :)
13:04 < RLa> coreb, sockjs?
13:05 < `3rdEden> RLa: nowjs did RPC
13:05 < `3rdEden> sockjs isn't RPC
13:05 < `3rdEden> coreb: you probably want to checkout dnode
13:06 < `3rdEden> it doesn't have now's magic pockets but does RPC
13:06 < `3rdEden> or you could just ditch RPC and just use events.. ;o
13:07 < coreb> yeah, it's just a bit more work
13:07 < coreb> nowjs was magic and impressive
13:09 < jesusabdullah> can't socket.io do basic events/rpc ?
13:09 < jesusabdullah> I mean, dnode's trick specifically is to expose anonymous callbacks over the rpc thinger
13:10 < jesusabdullah> alternately, go with the dnode and scuttlebutt routes
13:11 < SomeoneWeird> socketio can do rpc yes
13:12 < jesusabdullah> yeah see
13:12 <@Nexxy> SO MANY CHOICES
13:24 < jesusabdullah> see Nexxy knows
13:26  * Nexxy nods
13:27 < jesusabdullah> Nexxy: you're up late yeah?
13:27 <@Nexxy> always!
13:31 < coreb> so why did nowjs die anyway?
13:31 < `3rdEden> Project owners build a PAAS that did RPC, and stopped contributing to nowjs as they worked on their own project
13:32 < `3rdEden> their project died and started working on something new
13:33 < jesusabdullah> Nexxy: https://www.youtube.com/watch?v=mR9WJSX9pnU
13:36  * Nexxy doesn't know what to say
13:39 < jesusabdullah> think about it Nexxy XD
13:39 <@Nexxy> not gonna
13:40 < jesusabdullah> well fine then :(
13:41 < jesusabdullah> maan no more lemon soda
13:47 <@Nexxy> jesusabdullah, lol
13:55 < jesusabdullah> Nexxy: how's life? How's babby?
14:09 < jvanveen> anyone tried rtcdatachannel yet? i wonder if it also could work brower to server
14:09 < jvanveen> *browser*
14:16 < Kakera> why can't I connect right after destroying
14:16 < jtomasrl> is there a guide on how to struture code?
14:34 <@konobi> jtomasrl: carefully
14:34 <@konobi> =0P
14:36 < cloudbender> mornin'
14:40 < exit2> wtf are streams all about
14:41 < SomeoneWeird> niix, https://github.com/substack/stream-handbook
14:41 < niix> SomeoneWeird: thanks, I'll read this
14:44 < solidoodlesuppor> Hey Javascriptors!
14:47 < cloudbender> console.time works great
14:51 < niix> cloudbender: is that a firebug thing?
14:52 < niix> wait n/m
14:52 < cloudbender> niix no there is a method on the console object in javascript see mdn reference
14:53 < SomeoneWeird> console.time & console.timeEnd
14:53 < cloudbender> right
14:53 < dob_> Is there any working client proxy for HTTP implemented in node which supports whitelisting. I want to blacklist anything and whitelist specific sites for my clients.
14:53 < SomeoneWeird> have a look at node-http-proxy
14:53 < SomeoneWeird> dunno though
14:55 < niix> >> console.time('test'); for (var i = 0; i < 100000; i++) { var arr = new Array(); }; console.timeEnd('test');
14:55 < purr> niix: undefined; Console: 'test: 5ms'
14:55 < niix> hmm
14:55 < niix> pretty cool
14:56 < SomeoneWeird> >> console.time('a'); console.timeEnd('a')
14:56 < purr> SomeoneWeird: undefined; Console: 'a: 0ms'
14:56 < SomeoneWeird> lol
14:56 < SomeoneWeird> IMPOSSIBRU
14:56 < niix> console.time('test'); for (var i=0; i < 100000; i++) { var arr = []; }; console.timeEnd('test');
14:56 < cloudbender> very nice
14:56 < niix> >> console.time('test'); for (var i=0; i < 100000; i++) { var arr = []; }; console.timeEnd('test');
14:56 < purr> niix: undefined; Console: 'test: 4ms'
14:57 < cloudbender> niix you are on the right track
14:57 < SomeoneWeird> what track?
14:58 < niix> lol
14:58 < niix> >> console.time('test1'); for (var i=0; i < 10000; i++) { var arr = new Array(); }; console.timeEnd('test1'); console.time('test2'); for (var i=0; i < 10000; i++) { var arr = []; }; console.timeEnd('test2');
14:58 < purr> niix: undefined; Console: 'test1: 3ms', 'test2: 1ms'
14:58 < niix> there is no track
14:59 < SomeoneWeird> exactly lol
14:59 < niix> >> console.time('test1'); for (var i=0; i < 100000; i++) { var arr = new Array(); }; console.timeEnd('test1'); console.time('test2'); for (var i=0; i < 100000; i++) { var arr = []; }; console.timeEnd('test2');
14:59 < purr> niix: undefined; Console: 'test1: 6ms', 'test2: 2ms'
14:59 < niix> pretty cool though
15:00 < cloudbender> firebug is nice but I was worried it's overhead was impacting the profile times.
15:01 < cloudbender> impacting with I should say
15:07 < cloudbender> >> .009/10000;
15:07 < purr> cloudbender: (number) 9e-7
15:21 < sha0coder> hi
15:22 < sha0coder> i need to wait for a function end
15:22 < sha0coder> is it possible on node?
15:22 < _ior> you can always fallback on a semaphore
15:22 < sha0coder> :/
15:23 < sha0coder> i need, do-nothing until the end
15:23 < sha0coder> while(1) {}
15:23 < _ior> eh?
15:23 < sha0coder> until the semaphore?
15:23 < _ior> why would you want to block the rest of the processes?
15:24 < sha0coder> i download things from internet, very quick thnx to node
15:24 < sha0coder> but then, i need to upload https 
15:24 < sha0coder> i download quicker than upload
15:24 < Kakera> use the callback
15:24 < sha0coder> the ram go up
15:24 <@konobi> event
15:24 < sha0coder> and crash
15:24 < Kakera> you're piping?
15:24 < sha0coder> no
15:25 < sha0coder> donwnload file, parse then
15:25 < sha0coder> then the upload is the problem
15:25 < sha0coder> can't sent so quick
15:25 < Kakera> create a Transform stream to parse your file
15:25 < sha0coder> a queue, the ram go up
15:26 < Kakera> and use 0.9.x
15:26 < sha0coder> the download and parsing is fast
15:26 < SomeoneWeird> you're said that
15:26 < sha0coder> the problem is the https post
15:26 < SomeoneWeird> youve*
15:26 < SomeoneWeird> use a callback
15:26 < sha0coder> ?
15:26 < niix> hmm these streams are pretty neato gang
15:26 < sha0coder> hum
15:27 < Kakera> I think he's saying that the data he wants to send piles up faster than he manages to upload it
15:27 < Kakera> which is why you should use streams
15:27 < Kakera> they will manage back-pressure for you
15:28 < Kakera> httpThing.pipe(transformer); transformer.pipe(httpsThing);
15:28 < sha0coder> if i put a return 1
15:28 < sha0coder> and get the value
15:28 < sha0coder> it will be sync?
15:29 < Kakera> wat
15:29 < sha0coder> var sillyreturn = test()
15:29 < sha0coder> this will be sinc?
15:29 < sha0coder> sync
15:29 <@konobi> javascript is sync... only IO interactions are async (callbacks, events, etc)
15:29 < sha0coder> althoug the return value is always the same
15:29 < sha0coder> oks
15:30 < Kakera> why do you want 'sync'
15:30 < Kakera> I think you misunderstand what it means
15:31 < Kakera> time to ask my own question
15:31 < Kakera> when my socket emits 'close', is it possible to know whether it ended due to a FIN packet, or RES?
15:31 < Kakera> the only difference I can see is that in the latter case there is no 'end' event
15:32 <@konobi> Kakera: you'll probably have to look into the source for that
15:32 < Kakera> the source is confusing
15:32 <@konobi> it's not too bad
15:33 < sha0coder> it should be a syscall close()
15:33 < sha0coder> when socket is closed
15:35 <@konobi> sha0coder: unless you know the specifics of the internals of how node handles this, best not to try to answer
15:35 < sha0coder> heh
15:36 < sha0coder> what i need is while (!semaphore) {} ;)
15:36 < Kakera> 'close' is even emitted from two different places in net.js
15:36 < sha0coder> i should use python ;)
15:38 < JohnMcLear> Just released Etherpad 1.2.7 -- yay -- http://blog.etherpad.org/2013/01/30/release-1-2-7-security-patch-included/
15:43 < holzp> what is a large express app on github? are there any?
15:48 < fruitFly__> what u fokers think about vim?
15:49 < niix> holzp: what kind of app?
15:49 < niix> fruitFly__: I'm not elite enough for VIM
15:50 < holzp> just something large and well regarded, im just pikcing around app structures and source code
15:50 < holzp> poking
15:51 < fruitFly__> SUBLIME TEXT 2 VS VIM... GO!
15:53 <@konobi> vim, usable anywhere
15:53 < holzp> emacs
15:54 < hipsterslapfight> konobi: depends on your definition of 'usable' :v
15:56 <@konobi> 80x25 console on a kvm plugged into the back of a server on a rack
15:57 < hipsterslapfight> no that's just a definition of anywhere!
15:57 < SomeoneWeird> st2 > *
15:57 < pringlescan> Hello all, I'm having trouble with number.toLocaleString() on OSX, the locale doesn't seem to be set. I know about setting the timezone, etc, but I was wondering if there's a way to tell Node or V8 the proper locale to use?
15:58 <@konobi> pringlescan: LOCALE=
15:58 < pringlescan> in my terminal LOCALE is set correctly
15:59 <@konobi> pringlescan: and that's showing up in process.env?
15:59 < pringlescan> I think this is a problem with intellij idea
15:59 < pringlescan> it runs without using your terminal settings
15:59 < euoia> For anyone interested in automaticaly indenting their JavaScript in vim I have created an easy-to-use plugin https://github.com/euoia/vim-jsbeautify-simple
16:00 <@konobi> euoia: work with pathogen?
16:01 < euoia> konobi: yep
16:02 < sgallagh> cosplay
16:03 < pringlescan> hm… weird, even when my locale is set correctly on the terminal and I run from the terminally node ignores my locale
16:04 < niix> what's the deal with defining a function with a leading exlimation point? Like "!function() { console.log('heh'); }()"?  Is this just another way of doing an iife?
16:05 < pringlescan> niix that makes the function an immediate function and forces it to be evaluated immediately
16:06 < pringlescan> … oh is that what an iife is?
16:06 < niix> pringlescan: so it's the same as: (function() { console.log() })();
16:06 < niix> yeah
16:06 < niix> iife: Immediately-Invoked Function Expression
16:07 < pringlescan> I think ! is the better way to do it, wrapping it in a function would create two execution contexts I would think.
16:08 < pringlescan> *closure
16:10 < pringlescan> so, Node.js also doesn't respect process.env.LANG … so how the hell do you get any of the date or toLocaleString functions to work properly?
16:12 < niix> >> !function() { console.log('heh') }(); (function() { console.log('heh') })();
16:12 < purr> niix: undefined; Console: 'heh', 'heh'
16:16 < pringlescan> I don't know why they closed ticket #966 which says .localeString() isn't working on Cygwin, it also doesn't work on OSX… does anyone have it working on OSX?
16:17 <@konobi> pringlescan: tried assigning the env var?
16:17 < pringlescan> yes, LANG and LC_NUMERIC
16:17 <@konobi> from within node?
16:17 < pringlescan> and when I check process.env.LANG it's correct
16:17 < pringlescan> how would you do that?
16:18 < pringlescan> I keep googling node.js locale and I can't get much of anything
16:19 < pringlescan> I tried on Ubuntu and OSX both don't work correctly :-(
16:21 <@konobi> is it a valid locale?
16:21 < pringlescan> en_US.UTF-8
16:21 < bnoordhuis> pringlescan: what are you trying to do? set locales for dates and number formatting?
16:22 < pringlescan> bnoordhuis: Number and Date .toLocaleString() are not using the current locale as Chrome does
16:22 < bnoordhuis> pringlescan: i think you have to start node with `env LANG=foo node script.js`
16:23 < bnoordhuis> and even then i'm not 100% sure it'll actually do anything
16:23 <@konobi> that's not going to be any different
16:23 < pringlescan> I tried that too from my IDE but maybe it's not passing it correctly
16:23 <@konobi> now cs_CZ might show a float differently
16:24 < pringlescan> console.log(process.env.LANG); -> en_US.UTF-8
16:24 < pringlescan> I just don't see how this isn't considered a bug and/or there's no info on it. I'd accept it was a configuration issue, but it's like this on Ubuntu and OSX with properly set locales.
16:24 <@konobi> pringlescan: it's going to be the same as the default
16:25 < pringlescan> "the default" which is no locale? 
16:25 <@konobi> yes
16:25 <@konobi> or C
16:26 <@konobi> >> process.env.LANG='cs_CZ'; var foo = 12.345; console.log(foo.toLocalString());
16:26 < purr> konobi: ReferenceError: process is not defined
16:26 <@konobi> ugh
16:29 < Kakera> I destroy the socket I'm trying to connect to, wait for the 'close' event, then connect again
16:29 < Kakera> why do I get AssertionError: handle != self._handle
16:30 < Kakera> (I destroy it because I don't want to wait 10 seconds until it times out on its own)
16:30 <@konobi> because the socket isn't there anymore, you have to create a new one
16:30 < Kakera> I thought I could reuse sockets
16:30 < SomeoneWeird> nope
16:31 < Kakera> http://nodejs.org/docs/v0.9.4/api/net.html#net_socket_connect_port_host_connectlistener
16:31 < bnoordhuis> pringlescan, konobi: i'm reasonably sure LANG has zero effect. all the formatting logic for numbers and dates is hardcoded in v8
16:31 < Kakera> maybe because I'm destroying it
16:31 < bnoordhuis> the one exception is TZ but you need to set that before you start node because it gets cached
16:33 < Kakera> if I end() it instead, I never get a 'close' event
16:33 < Kakera> which makes sense since the server wouldn't respond
16:33 < niix> wow this company gives 20k for a software engineer employee referral 
16:34 < pringlescan> bnoordhuis: i even tried the setlocale module and that doesn't do anything, any suggestions?
16:35 < pringlescan> niix: that's how much they'd pay a recruiter
16:35 <@konobi> Kakera: how about .close() ?
16:35 < niix> that's a pretty large amount
16:35 < Kakera> konobi, TypeError: Object #<Connection> has no method 'close'
16:35 < pringlescan> niix: they usually do a percentage of your annual salary
16:35 < bnoordhuis> pringlescan: none whatsoever, i'm afraid
16:36 < SomeoneWeird> socket.on("destroy") or somethin
16:36 < ajostergaard> niix: probs only once the developer has stayed on for a year or even two
16:36 < SomeoneWeird> look @ the wiki
16:36 < niix> ajostergaard: that's true too
16:36 < Kakera> SomeoneWeird, there is no such event
16:36 < SomeoneWeird> sockets emit close even when you end() them
16:36 < Kakera> and neither 'end' nor 'close' are emitted if I end() it
16:36 < Kakera> SomeoneWeird, not if I'm not connected
16:37 < SomeoneWeird> what's the point of ending it then...
16:37 < Kakera> because I want to reconnect
16:38 <@konobi> full of xy today
16:38 < Kakera> if I reconnect right after ending it, I get
16:38 < Kakera> Error: connect Unknown system errno 114
16:39 < Kakera> reusing the socket works perfectly if I wait ~10 seconds until the connection times out, handle 'error' and reconnect then
16:39 < Kakera> but I don't want to wait 10 seconds
16:41 < bnoordhuis> Kakera: what os is that?
16:41 < Kakera> windows
16:41 < Kakera> err
16:41 < bnoordhuis> Kakera: btw, don't reuse the socket, create a new one
16:41 < Kakera> debian
16:42 < bnoordhuis> ah
16:42 < Kakera> bnoordhuis, I don't want to create a new socket because I assign a lot of event handlers
16:42 < Kakera> I'd rather do it once than every time I reconnect
16:42 < bnoordhuis> Kakera: you can't reuse a socket once it's destroyed
16:42 < bnoordhuis> that includes calling end()
16:43 <@konobi> ah... http://tinyurl.com/tehxyprob
16:43 < Kakera> but I _can_ reuse it after it emits 'error' with ETIMEDOUT
16:44 < Kakera> and no this is not XY
16:45 < Kakera> bnoordhuis, any suggestions how to shorten the connection timeout period without creating a new socket?
16:45 <@konobi> Kakera: so socket.setTimeout?
16:45 < bnoordhuis> what konobi said
16:46 < Kakera> that just emits a 'timeout' event
16:46 <@konobi> and you can add a callback to handle that
16:46 < Kakera> and then we arrive back at my question
16:46 <@konobi> setTimeout(2000, cb)
16:47 <@konobi> Kakera: do your setup in a function, then call that function
16:48 < Kakera> I don't like that solution. If it's not possible to reuse the socket earlier than I get ETIMEDOUT, then I'll rather just wait
16:49 < bnoordhuis> procrastination is, in general, always the best solution
16:49 < sha0coder> a fd.open() for append 'a', is possible to create the file if doesn't exists?
16:50 < pringlescan> does anyone know what the style/notation is when numbers look like this: 1st, 2nd, 3rd, 4th
16:50 < pringlescan> I'm trying to name a function and I'm not sure what to call it
16:50 <@konobi> ordinal
16:51 < Kakera> so basically my problem is that there doens't seem to be a way to 'cancel' an in-progress connection
16:51 < bnoordhuis> Kakera: sure there is, it's called destroy()
16:51 < Kakera> ...without destroying the socket
16:52 < bnoordhuis> that much is correct
16:52 < bnoordhuis> Kakera: in case you think it's a node limitation, it's not, that's how tcp works
16:53 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:56 < Kakera> bnoordhuis, what defines the amount of time it waits before throwing ETIMEDOUT?
16:57 < bnoordhuis> Kakera: the operating system
16:59 < SomeoneWeird> socket.setTimeout
16:59 < Kakera> I already said that this is not what I'm looking for, SomeoneWeird 
16:59 < SomeoneWeird> mmk
17:01 < Kakera> I can't believe the OS doesn't provide a way to set the timeout. Gotta investigate
17:03 < bnoordhuis> Kakera: it does but not for non-blocking sockets (at least it's not guaranteed to work)
17:03 < SomeoneWeird> there's probably a better way todo what you're trying todo anyway
17:03 < Kakera> I see
17:05 < Kakera> SomeoneWeird, my only two options are either to wait 20s for ETIMEDOUT, or to create a new socket
17:06 < SomeoneWeird> and why can't you use .setTimeout ?
17:06 <@konobi> or tell us what you're actually trying to achieve
17:06 < SomeoneWeird> yeah, ^
17:06 < Kakera> server I'm connected to dies, I want to reconnect
17:07 < Kakera> I pick a random IP address from a list, try to connect to it, it's dead
17:07 < SomeoneWeird> and setTimeout won't work for that... why?
17:07 < Kakera> because it requires creating a new socket
17:08 < SomeoneWeird> and the others don't?
17:08 < Kakera> other what?
17:08 <@konobi> and why not connect to all of the IPs until one gives you 'connect' ?
17:09 < Kakera> create a socket for each of the million servers in the list?
17:10 < SomeoneWeird> wtf are you trying todo?
17:10 < Kakera> also, the server I'm connecting to being dead is a relatively rare situation
17:10 < Kakera> SomeoneWeird, I think I already answered that question
17:10 <@konobi> Kakera: or 100 at a time?
17:11 < valterguy> a little bit off-topic, but may I ask why you have million nodes in a list?
17:11 < valterguy> or servers, even.
17:11 < Kakera> well, I lied
17:11 < Kakera> there are actually 18 of them currently
17:11 < ajostergaard> kakera: i think someoneweird was more interested in what list of a million servers you could sensibly be trying to connect to … i certainly am!
17:11 <@konobi> Kakera: your only choice is to create a new socket... it's not a big deal... it's fairly simple... var sock = add_these_listeners(socket);
17:11 < SomeoneWeird> yeah
17:12 < valterguy> that sounded like a major operation.
17:12 < andrew12> Why can't I use node-jscoverage on a single file?
17:12 < andrew12> It makes me have a directory
17:12 < Kakera> like I said before, if it comes to that, I'd rather wait 20s for ETIMEDOUT
17:13 <@konobi> Kakera: go for it
17:13 <@konobi> andrew12: ask the author
17:14 < andrew12> Do you guys know of any simple coverage tools? I can't get istanbul to work with expresso...
17:17 < Ramone> andrew12: jscoverage ?
17:17 < andrew12> 12:09:55 <andrew12>	 Why can't I use node-jscoverage on a single file?
17:17 < Ramone> works for me
17:17 < andrew12> I don't want to make a directory for a library that is in a single file
17:18 < Ramone> ahh? yeah I just bite that bullet
17:18 < Ramone> directories aren't a huge deal compared to getting coverage stats
17:19 < geNAZt> which is the best way to use error templates in expressjs ?
17:21 < Kakera> bnoordhuis, just curious, is the inability to set the connection timeout limited to Linux?
17:22 < Kakera> or is that the case in Windows too?
17:22 < bnoordhuis> Kakera: no and yes
17:22 < bnoordhuis> well, windows is not really comparable
17:23 < Industrial> Anyone have example code of dnode through mux-demux through shoe through reconnect? I'm not sure how to fit them together..
17:23 < Industrial> anyone going? :) http://www.meetup.com/amsnode/events/90655322
17:23 < Industrial> (tomorrow)
17:30 < MI6> joyent/node: isaacs master * 0168109 : node: Do not use fn.apply() in process._makeCallback - http://git.io/767Leg
17:30 < MI6> joyent/libuv: Bert Belder master * 3759d71 : win: get rid of early ipv6 support detection  No longer explictly check w (+7 more commits) - http://git.io/BohVOw
17:38 < geNAZt> i have a expressjs stack like so: http://hastebin.com/bodixanosu.js
17:38 < geNAZt> but express never calls the last middleware
17:44 < holzp> is anybody using "use strict"?
17:44 < geNAZt> yes me
17:45 < Havvy> I don't use it, but I do follow its rules.
17:46 < holzp> why not use it?
17:46 < holzp> im just seeing some authors using it and some not, unsure why people are going one way or the other
17:47 < geNAZt> why do some people drink cola or pepsi ?
17:47 < aandy> whoah whoah...
17:47 < aandy> let's not get religous with harmony and shit
17:48 < azylman> The wacky morning DJ says democracy's a joke
17:49 < aandy> that depends what you read into it. personally, i have no interest in my country's democracy (politics), but they're vital to serve common sense we all need, such as school, healthcare, practices
17:49 < aandy> i mean, if anarchy is the alternative
17:51 < ffog> he is calling you dude
17:51 < aandy> i was just about to go find the big lebowski on netflix, so.. yeah
17:51 < Havvy> holzp: AFAIK, claiming it to be strict doesn't have any performance benefits.
17:52 < holzp> right
17:52 < Havvy> And the linter plugin I'm using already complains about strict-mode violations.
17:52 < holzp> Its more a style validation thing, "code correctness"
17:52 < holzp> Well I guess I will use it till I find a reason not to
17:52 < holzp> which could just be annoyance
17:53 < holzp> im just sort of setting up a project ecosystem
17:53 < holzp> and using lint to validate
17:54 < jtomasrl> is it possible to replace the Error class?
17:55 < jaclar> Hi there!
17:56 < jaclar> i have a question about node.js and dtrace
17:56 < Havvy> jtomasrl: No?
17:56 < jaclar> anybody has some experience with that?
17:57 < segomos> jtomasrl: you can extend it
17:58 < segomos> jaclar: you're better off asking your question instead of asking to ask
17:59 < jaclar> ok. the issue is that I compiled node 0.8.18 with --with-dtrace but when I profile my application I the function names wont get resolved
17:59 < jaclar> (on openindiana)
17:59 < jaclar> seems like the ustack helpers don't work
18:00 < jaclar> do i need to enable a special flag when starting node?
18:00 < owen1> using the mongo native driver, how to make my secondaries readable?
18:00 < owen1> (mongo 2.0.1)
18:06 < niix> Is there any modules that are similar to Django's admin?  Basically for traversing your DB info
18:08 < niix> Actually, I think I've found some ORMs for mongoose. Sweet.
18:12 < segomos> mongoose is an ODM
18:13 < nlf> mongoose is pretty nice
18:14 < MI6> joyent/libuv: Bert Belder v0.8 * 034ea31 : win: get rid of early ipv6 support detection  No longer explictly check w (+7 more commits) - http://git.io/RaxtXw
18:17 < jtomasrl> is it possible to do this object[function](arguments)?
18:17 < hipsterslapfight> seyes
18:17 < hipsterslapfight> *yes
18:19 < Industrial> Why doesn't my websocket client get to this line? https://gist.github.com/870df2fb87cd2af4acae/3fbff602488b28657acfc9f159045dcb4491408f#file-client-js-L19
18:20 < aho> jtomasrl, functionWhichReturnsAFunction()() also works
18:20 < aho> this isn't php :>
18:20 < Industrial> neither to line 29 of server.js
18:20 < Havvy> That doesn't work in PHP?
18:20 < aho> returnsAnArray()[0] didn't work for example
18:20 < aho> they fixed that recently though
18:21 < Havvy> That works in 5.4.
18:22 < Havvy> I've not seen any complaints about f()() not working though.
18:22 < aho> meant that this things generally work
18:22 < aho> *these
18:22 < CoverSlide> >> var f = function(){return function(){50}};f()()
18:22 < purr> CoverSlide: undefined
18:23 < CoverSlide> >> var f = function(){return function(){return 50}};f()()
18:23 < purr> CoverSlide: (number) 50
18:23 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:23 < geNAZt> >> (function(){ return function() { return 1; } })()()
18:23 < purr> geNAZt: (number) 1
18:23 < geNAZt> yeah :D
18:24 < Havvy> (function f () { return f(); })()
18:24 < Havvy> >> (function f () { return f(); })()
18:24 < purr> Havvy: RangeError: Maximum call stack size exceeded
18:24 < segomos> lol
18:24 < aho> heh
18:25 < geNAZt> >> (function f() { return f; })()
18:25 < purr> geNAZt: (function) f
18:25 < CoverSlide> >> (function f{return f})()()()()()()
18:25 < purr> CoverSlide: SyntaxError: Unexpected token {
18:25 < CoverSlide> >> (function f(){return f})()()()()()()
18:25 < purr> CoverSlide: (function) f
18:25 < CoverSlide> whee!
18:25 < aandy> argh the key words.. it burns
18:25 < Havvy> F(f) = f
18:25 < geNAZt> chaining at its best :D
18:25 < Havvy> F = f
18:26 < Havvy> Wait, no. That's wrong.
18:26 < Havvy> No combinator magic there.
18:26 < Industrial> anyone care to take a look at my code (that doesnt work)? it uses shoe reconnect client-reloader dnode and mux-demux to provide one reconnecting always op to date client js with one RPC (dnode) stream and (not in the code yet) a data stream multiplexed by mux-demux
18:26 < Industrial> (people write some sick libs..)
18:26 < geNAZt> >> process.version
18:26 < purr> geNAZt: ReferenceError: process is not defined
18:26 < CoverSlide> >> function a(){return b};function b(){return a};a()()()()()()()()
18:27 < purr> CoverSlide: (function) a
18:27 < CoverSlide> >> function a(){return b};function b(){return a};a()()()()()()()()()
18:27 < purr> CoverSlide: (function) b
18:27 < cloudbender> CoverSlide ?
18:27 < SomeoneWeird> lmao CoverSlide 
18:28 < cloudbender> You've worked with vanilla ?
18:28 < Havvy> Heh.
18:31 < sha0coder> is possible to send big files in a POST without multipart?
18:31 < sha0coder> i suppose yes is the answer
18:32 < CoverSlide> I know yes is the answer
18:33 < tprice> hey im using substack/bouncy to load balance my app. how would i session each users requests so that when i run more then one instance of my app i can remember which app each users request should be sent to
18:33 < tprice> maybe like setting the header on the users request
18:33 < tprice> but i cant do that from bouncy
18:34 < tprice> how would you session a user with out using a session header
18:35 < sha0coder> ok tprice 
18:35 < frem> I'm getting ENOENT when I try to nom install some packages on ubuntu. The same packages install fine on OS X. https://gist.github.com/11a575a110b45fda8507
18:35 < sha0coder> thnx
18:41 < jaclar> frem: ENOENT means "file not found" apparently npm is looking for a file it cant find
18:42 < s3shs> At least it's not EIEIO.
18:43 < frem> jaclar, the path it gives is valid; there's a javascript file there.
18:44 < SomeoneWeird> or EFIFO
18:44 < jaclar> and you get the same error when you try to install it in another directory?
18:46 < frem> I get a very similar error. https://gist.github.com/108f668fba1a4e5816a6
18:51 < frem> In the fresh directory, the only files after the command fails are npm-debug.log and an empty node_modules directory.
19:01 < jaclar> frem: i cant reproduce this problem here on my linux machine here (same npm version)
19:01 < jaclar> seems to be a problem with your linux install
19:01 < frem> jaclar: I'm running in a basically stock ubuntu lucid32 box in vagrant
19:03 < CoverSlide> are you sure /vagrant/toad exists?
19:03 < frem> yes
19:04 < Raydiation> hm, async programming sucks
19:04 < Raydiation> incredibly hard to find bugs
19:04 < CoverSlide> s/sucks/is hard/
19:04 < CoverSlide> s/async//
19:04 < CoverSlide> that's life
19:04 < valterguy> s/programming/life/
19:04 < Raydiation> ok, so here my question: i got files in array. how do i read out the content of each file and stay in order?
19:05 < azylman> async.map maintains order
19:05 < CoverSlide> you program it to do so
19:05 < hipsterslapfight> require('async').forEachSeries(array …)
19:05 < hipsterslapfight> :v
19:06 < CoverSlide> the answer to your question is programming
19:06 < Raydiation> hipsterslapfight: is that forEachSeries async?
19:06 < valterguy> programming creates problems only programming can fix.
19:06 < azylman> async.forEachSeries is asynchronous
19:06 < hipsterslapfight> funny that
19:06 < azylman> As is async.map
19:06 < azylman> They basically do the same thing but async.map passes an array of results to the callback
19:07 < azylman> Whereas async.forEachSeries just passes back an error, no results
19:07 < jaclar> frem: and you have enough space free space on your disc?
19:09 < azylman> Actually async.map isn't guaranteed to be in order
19:09 < azylman> It's in parallel
19:09 < azylman> Returns results in order, but doesn't run in order
19:09 < azylman> async.mapSeries runs in order
19:10 < frem> jaclar: yeah; /vagrant is mounted from my main non-vm filesystem. still got 72GB free
19:14 < Industrial> Anyone seen https://github.com/dominictarr/observable ? I'm not sure how to work it without hyperscript ..
19:15 < jaclar> frem: try this: rm -rf ~/.npm and than "npm cache clean"
19:17 < frem> jaclar: some different errors. https://gist.github.com/488059b5f3173e9c408d
19:17 < holzp> GitHub is nice
19:19 < RLa> Industrial, it's like knockoutjs observables?
19:20 < mattrobenolt> What's a good async pattern for taking an array of filenames, and iterating over the array checking for the first taht exists, and calling a callback with the result?
19:20 < Industrial> I'm not sure, but I guess without hypertext, i need to reference each dom element I want to modify .. where as with a template language you just mark the areas ..
19:20 < Industrial> RLa, do you know of a good view layer that does 2 way binding that isnt part of a big framework?
19:21 < Industrial> I know of https://github.com/component/reactive
19:21 < holzp> do any of you remember SourceForge?
19:22 < CoverSlide> yes
19:22 < CoverSlide> sourceforge is still around
19:22 < holzp> yeah but not used much
19:22 < CoverSlide> used to be the only game in town, then google code, now github
19:22 < holzp> git came around and people started using that and then sf couldnt hang on
19:22 < RLa> Industrial, knockoutjs is pretty lightweight too
19:23 < RLa> no jquery dependency :)
19:23 < holzp> Its funny that way whats old is new again
19:23 < CoverSlide> sourceforge is shit anyway, loaded with ads
19:23 < holzp> github hasnt been made public (yet)
19:23 < RLa> Industrial, so far i have made only single app with knockout but i like it
19:23 < Industrial> it probably enforces some loading strategy? I'm using browserify
19:23 < RLa> no, i does not
19:23 < holzp> when it has to make money all the time....and more every quarter...we will see
19:24 < RLa> Industrial, and its documentation is very good
19:24 < Industrial> oh just 1 js file, alright
19:24 < holzp> I remember when VA Linux went full behind SF
19:24 < RLa> mit license
19:24 < holzp> they sold off all their leftover hardware at nothing prices
19:24 < Industrial> I gave backbone a go, but didnt like the underscore dependency. I'm using a different one like it, prelude-ls and livescript.
19:24 < holzp> I got two amazing servers from that sale (2001?)
19:24 < RLa> Industrial, i tried backbone too but did not like it
19:25 < RLa> Industrial, then i found knocout :)
19:25 < RLa> definitely recommend to check it out
19:26 < RLa> Industrial, it uses plain html for templating
19:27 < Industrial> nice, that means I can pre-compile to js functions that return html
19:28 < Industrial> from e.g. jade :P
19:28 < owen1> using the mongo native driver, how to make my secondaries readable? (2.0.1)
19:32 < mboro> hi guys. I'm creating a web app using node.js and backbone.js where I'll be relying heavily on pushState and javascript dom generation. that is, node.js only provides a JSON API. this, of course, is not crawlable by google. any ideas as to how I can seo optimize my web app?
19:33 < mboro> as far as I can tell the best approach is progressive enhancements
19:34 < mboro> but I can't deliver any markup from node.js at page render because the delivered content depends on the user's location. so when I visit /app/search/whatever/, node.js can render results because it doesn't know my location yet
19:34 < mboro> (does that make sense?)
19:34 < jaclar> frem: i'm a bit at loss here...
19:34 < mboro> can't render*
19:35 < nexion> what would you guys say is the best way to discover new node modules? if you need a module to do <some task> (in general), what do you do?
19:35 <@mbalho> nexion: npm search keyword, then visit the pages on npmjs.org and github for each module that looks close to what i want
19:37 < stefan41> does anyone know, when using passport, if there's anything analogous to just "if (req.user)" as an auth method?
19:37 < stefan41> I know that i can do it with just a custom function i pass into my routes, but that feels dirty somehow.
19:37 < geNAZt> stefan41: use a local strat in passport
19:38 < geNAZt> http://passportjs.org/guide/configure/
19:45 < rump> what options are there for needing to hash or obsfucate a string and then return it back to the original string, all server side, ideally with a 'secret' key or string
19:45 < rump> besides rot13
19:46 < geNAZt> aes ?
19:49 < stefan41> geNAZt: so, it seems like anytime that I try to use local strategy, if I don't supply a username and password parameter in the querystring, it'll 401 the request before even running the callback function?
19:50 < stefan41> geNAZt: i'm logging people in at first with either a twitter or facebook strategy, so my req.user is set as a result of those things
19:51 < CoverSlide> rump: AES, in crypto
19:51 < rump> ty, looking into it now
19:52 < geNAZt> stefan41: what you need is de/serializeUser
19:52 < stefan41> geNAZt: I've got one of those… and, if i do auth by facebook (and continue to do other auths by facebook) it works great.
19:53 < stefan41> if i try to switch to a local auth, it's not happy
19:53 < geNAZt> well why u wanted a user already logged in to change between facebook and local ?
19:53 < geNAZt> without logout
19:58 < stefan41> geNAZt: i don't. i just want to make sure that a user is logged in before rendering a given url
19:59 < stefan41> geNAZt: I want to make sure that a user has logged in through *some* auth strategy, I don't care which one.
20:02 < iwalkbarefoot> stefan41: if you're using passport-local config it should act exactly the same as facebook/twitter
20:03 < iwalkbarefoot> you said it's not happy, what's it doing?
20:03 < stefan41> iwalkbarefoot: right, i think that maybe passport-local isn't even what i want. I've got my fb/tw login urls (/auth/facebook or whatevs), and, after a user has visited those, req.user is populated. what i'm looking for is basically a way to ensure that, on certain URLs, req.user is, indeed populated
20:06 < iwalkbarefoot> did you setup your passport serialize and deserialize user functions?
20:06 < stefan41> yep
20:07 < stefan41> iwalkbarefoot: and, those work properly
20:07 < iwalkbarefoot> hmm.. i'm not sure then.  in my paths that I want secured I just use req.isAuthenticated() and if that's true req.user has always been populated for me
20:08 < rump> CoverSlide: hmm, can i aes a json style object?
20:08 < CoverSlide> you can aes a string and parse it 
20:09 < stefan41> iwalkbarefoot: so, you just do that in your actual functions that render pages or whatevs?
20:09 < stefan41> iwalkbarefoot: there's no actual "passport" way to do it?
20:10 < rump> CoverSlide: anything shorter than aes?
20:10 < rump> fewer characters the better when ciphered
20:10 < CoverSlide> i dunno, blowfish?
20:11 < yuho> calculate an integer out of it? ;)
20:12 < rump> hm
20:12 < rump> yeah maybe ill just do secret math on it!
20:12 < yuho> it's what i do 
20:12 < rump> anything handy i can review?
20:12 < rump> without giving away yer super secret formulas
20:13 < iwalkbarefoot> stefan41: not that I know of.  you could obviously use your own function to keep from repeating the authentication check and the redirect
20:13 < yuho> you can make do with letter positions etc
20:13 < yuho> it depends on what you wanna do really
20:13 < stefan41> iwalkbarefoot: hmm, seeing something like this: https://github.com/jaredhanson/connect-ensure-login have you used that?
20:14 < yuho> woo my leap motion dev unit shipped
20:14 < rump> NaN
20:15 < yuho> anyone been connecting that to node yet?
20:15 < rump> hm how do you easily convert the ascii to a number representation
20:15 < iwalkbarefoot> stefan41: I haven't, but it's pretty similar to the function I would write whenever the time comes
20:15 < MI6> joyent/node: Bert Belder v0.8 * 1a87776 : deps: upgrade libuv to 034ea31 - http://git.io/YMjxbg
20:16 < rump> charCodeAt()?
20:16 < yuho> yea. you can use a prime number to divide things to make them smaller
20:17 < yuho> but again it kinda depends on what you're doin
20:17 < rump> i need to keep someones l/p in a url parameter
20:17 < rump> i know that sounds stupid but
20:17 < yuho> and is
20:18 < rump> its not that a big a deal in this instance :)
20:18 < rump> and i dont have a way for them to input it
20:18 < yuho> i'll trust you on that
20:18 < rump> its a generated icalendar
20:18 < yuho> ah
20:18 < rump> so the url will only have http://blah/ical?somehash
20:18 < rump> but i need some data
20:19 < rump> plain text would almost be ok but id like a tiny bit of obsfucation
20:19 < rump> s/http:/webcal:/
20:21 < rump> i see how i could cipher but i dont see how i could reverse it
20:22 < rump> unless i delimit each char
20:22 < geNAZt> rump: why not base64 ?
20:23 < Gambit--> hola folks
20:23 < Gambit--> anyone here have any knowledge or wisdom on porting node.js to a new os?
20:24 < Kakera> Gambit--, which one
20:25 < rump> geNAZt: hmm i dont guess i can salt or secret key that somehow
20:25 < Gambit--> Kakera: Undisclosed.  I'm curious how difficult of a project it would be, and whether all of the OS dependent interfaces are collected in a core interface class, or scattered throughout the code.
20:25 < rump> but its probably enough
20:26 < AviMarcus> Hey tjfontaine -- I asked about naptr on node-dns and I think you gave me an answer for client, but this project needs to be the server. I wasn't able to do it -- did I do it wrong, or is that not possible currently?
20:26 < tjfontaine> AviMarcus: it should be possible lemme look at the issue you did real quick
20:27 < AviMarcus> Thanks!
20:27 < iwalkbarefoot> rump: couldn't you store the ip address server-side and just have the url include a key to reference the ip?
20:27 < Kakera> Gambit--, I think most of the OS-dependent stuff is in libuv
20:28 < tjfontaine> AviMarcus: ok, so the error handling could be better (I haven't decided how to do that yet) but you're missing key fields required for an NAPTR record
20:28 < tjfontaine> AviMarcus: it's failing because you're not specifying order, you also don't have preference there
20:28 < Gambit--> Kakera, I need to pull the source down and dig into it at some point, but thanks for the pointer.  Do you know how difficult it was for people to get the windows port running?
20:28 < tjfontaine> AviMarcus: I will update the ticket
20:29 < Kakera> Gambit--, no idea, I've heard that Microsoft was involved it in
20:29 < Gambit--> Naturally.
20:33 < AviMarcus> tjfontaine, if you can tell me the args to send in that would be great :)
20:35 < tjfontaine> AviMarcus: I can tell you which fields are required, and what their types should be, but as far as what goes in there that's up to the consumer
20:37 < AviMarcus> that's what I meant :)
20:37 < tjfontaine> AviMarcus: was my comment on the issue sufficient?
20:38 < AviMarcus> I'm not sure I understand it, tbd. I need to send back, e.g.: 'sip:12122221111;rn=16465111000;npdi@204.100.100.100' -- where does that go?
20:39 < AviMarcus> tbh*
20:40 < tjfontaine> AviMarcus: I really don't know much about naptr's beyond their record layouts, but I imagine that goes in the service field, I would cheat by querying someone elses server to see how they respond and emulate that
20:40 < tjfontaine> order and preference I would imagine behave in much the same way preference behaves in MX
20:41 < AviMarcus> right, this is just sending back one record.. let me try it and hopefully it will look right. Thanks for your help :)
20:41 < tjfontaine> AviMarcus: ah, that probably goes in regexp according to http://en.wikipedia.org/wiki/NAPTR_record
20:41 < tjfontaine> service should be a dns name
20:44 < AviMarcus> thanks, lemme try this.
20:51 < xp_prg2> hi all I am on centos 5.7 and i am trying to build node.js 0.8.18 by executing ./confgiure and getting syntax error: File "./configure", line 360  if options.unsafe_optimizations else 0)
20:51 < xp_prg2> any ideas what I am doing wrong?
21:00 < CoverSlide> xp_prg2: do you have python 3.7 or above?
21:00 < CoverSlide> *2.7
21:00 < xp_prg2> I just put on 2.7
21:00 < xp_prg2> but I put it in the alternate area as I am on centos and it will break my package management
21:01 < xp_prg2> trying to use these instructions but its not working: http://justintallant.com/installing-node-on-centos/
21:01 < CoverSlide> so `which python` points to that version and not the other one?
21:02 < xp_prg2> to use that python I must use python2.7 and the cml
21:02 < CoverSlide> well config isn't looking foran executable named python2.7, it's looking for an executable named python
21:02 < tjfontaine> xp_prg2: python2.7 ./configure && make PYTHON=python2.7
21:04 < xp_prg2> thanks tjfontaine, installing g++ dependency but it did get much farther :>
21:05 < xp_prg> wow looks like it is building :>
21:08 -!- mode/#Node.js [+o TooTallNate] by ChanServ
21:21 < xp_prg> trying to install nodeunit and it isn't installing, I do npm install nodeunit and at the end it says: nodeunit@0.7.4 node_modules/nodeunit
21:21 < xp_prg> yet which nodeunit produces nothing
21:21 < xp_prg> any ideas what I am doing wrong?
21:22 < geNAZt> what is the error ?
21:22 < xp_prg> I don't see any error, let me paste the output one sec
21:22 < gkatsev> is it possible to switch into strict mode inside the node repl?
21:22 < isaacbw> xp_prg, are you trying to run a command line utility?
21:23 < geNAZt> gkatsev: try "use strict";
21:23 < xp_prg> http://pastebin.com/Vc6MY2Da
21:23 < xp_prg> isaacbw, yes it is a command line utility
21:23 < gkatsev> geNAZt: I did. It's not affecting subsequent lines
21:23 < xp_prg> did it install?
21:23 < geNAZt> yes it did
21:23 < xp_prg> https://github.com/caolan/nodeunit
21:23 < isaacbw> you have to install it globally or set up a symlink to your PATH yourself
21:23 < isaacbw> usually npm install -g nodeunit is enough
21:23 < isaacbw> you might have to run it in sudo depending on how npm is set up
21:24 < xp_prg> I didn't do the -g
21:24 < xp_prg> ok now it owrks thanks!
21:24 < isaacbw> np
21:24 < xp_prg> what does the -g do?
21:24 < gkatsev> global install
21:24 < isaacbw> it puts it into the global npm folders and sets up a symlink so that your shell knows about the binaries
21:24 < othiym23> gkatsev: start up node with node --use_strict / node --use-strict
21:25 < isaacbw> only use it for command line utilities
21:25 < xp_prg> ok thanks ;>
21:25 < isaacbw> you can do 'npm folders' to see where your global folder is
21:25 < isaacbw> wait
21:25 < gkatsev> othiym23: cool, thanks
21:26 < othiym23> gkatsev: that's a V8 option, so there's no way (that I know of) to do it from inside the REPL once you've started a session
21:27 < rump> im all for organizing things with like things... but it seems crazy to separate into models/routes/tests/views... cause when i want to work on say the /users portion of my site, it'd be nice to get its model/routes/tests/views all in one directory so i didnt have to jump around to open the relevant files
21:27 < samholmes> What's this on about? http://pastie.org/5973620
21:27 < samholmes> I only ran npm install to install deps in node_modules.
21:27 < othiym23> rump: there's nothing stopping you from doing that in Node unless you're running a framework that prescribes your module layout
21:27 < gkatsev> othiym23: yeah, guess there isn't. The flag is what I was looking for.
21:27 < othiym23> in which case the solution should be clear
21:27 < rump> othiym23: i just havent found a way i like yet
21:28 < rump> sticking everything in ./lib/ seems gross too
21:28 < samholmes> Here's my package.json http://pastie.org/5973628
21:28 < isaacbw> why the hell isn't npm folders working
21:29 < rump> ./lib/users/{index.js,index.ejs,model.js,test.js,add.ejs,edit.ejs,etc} ?
21:29 < othiym23> samholmes: there's something in read-package-json that's expecting a string and getting an empty (undefined || null) value instead
21:29 < othiym23> rump: sure why not
21:29 < samholmes> I'm not familiar with the code
21:29 < othiym23> samholmes: just going by the stacktrace, mang
21:29 < rump> othiym23: i guess the part that bugs me is the ../../ requires and where to keep common layout files
21:30 < othiym23> rump: I use a halfassed Ruby-style fs organization for my big project and it works well enough
21:30 < samholmes> othiym23: Well, if you look at my package.json do you see anything peculiar about it?
21:30 < rump> othiym23: ruby style as in rails style?
21:30 < isaacbw> am I crazy? Isn't 'npm folders' a command?
21:31 < CoverSlide> doesn't look like it
21:31 < isaacbw> oh my god this is the best coffee I've already had
21:31 < CoverSlide> what are you trying to find?
21:31 < rump> npm help folders works thugh
21:31 < CoverSlide> npm confit list?
21:31 < isaacbw> okay, how about 'didn't npm folders used to be a command'
21:31 < CoverSlide> s/confit/config
21:31 < othiym23> rump: no, I mean the way people who write lots of Ruby libraries have a debugger.rb and debugger/depdendency.rb etc
21:31 < isaacbw> and 'doesn't all the documentation point towards npm folders being a command'
21:31 < isaacbw> and 'I swear to god it used to work'
21:31 < isaacbw> 'Oh my god'
21:31 < CoverSlide> or npm ls
21:31 < isaacbw> 'reality is slipping away'
21:32 < rump> im also considering combining my routes and models
21:32 < Industrial> anyone work with knockoutjs? How do templates come in to play? where are they kept before going into the DOM? does knockout handle the DOM injection, or should you do that prior to binding ViewModel instances? what if a template contains loops, or you have an array of ViewModels?
21:33 < rump> why have these super thin router files which just say res.render('somefile')
21:33 < Industrial> so many questions ...
21:33 < isaacbw> Industrial, be cool and use angular
21:33 < isaacbw> and I'll explain life to you
21:33 < Industrial> can I ship it with browserify and npm?
21:33 < isaacbw> what
21:33 < isaacbw> ship it?
21:34 < isaacbw> fedex?
21:34 < Industrial> browserify takes commonjs requires (also npm modules) and wraps it into one bundle.js
21:34 < isaacbw> angular doesn't enforce any particular structure
21:34 < isaacbw> you can do whatever the fuck you want
21:35 < isaacbw> angular will change your life
21:36 < rump> i question that recent trend of saying the future of webdev is putting everything on the client
21:36 < isaacbw> it depends on the kind of application
21:36 < othiym23> the future of the web is totally OCaml in the browser
21:37 < rump> when you look at those speed/render profiles, something like 80% of all the waited is on the front end so why move towards that and the slow dom
21:37 < othiym23> and Java applets
21:37 < isaacbw> once you look at your application, the choice is basically made for you
21:37 < rump> and is sending 400bytes of html really any worse than sending 300 bytes of json that has to be inserted into the dom?  connect speeds are getting faster
21:37 < isaacbw> like, amazon being client rendered is retarded
21:37 < isaacbw> google docs being server rendered is more retarded
21:38 < isaacbw> angular is nice because you can use it for an entire website (with routing and everything) or just to add behavior to individual widgets
21:38 < rump> seems overly complex
21:38 < rump> actually, double the complexity
21:39 < rump> cause now you need two sets of MVCs
21:39 < marlun> Whats the best lib if I want to inspect response.body and make sure some html exists? Adding jquery seems excessive I would like a package which only let me look at html not manipulate it.
21:39 < isaacbw> that's like saying node is overly complex. Why not just use c and posix networking
21:39 < isaacbw> oh yea
21:39 < Industrial> isaacbw, i can add the .js as a commandline source (in the build/watch script) so np.
21:39 < isaacbw> nvm. I wouldn't recommend mixing severside and clientside except in very particular situations
21:39 < geNAZt> marlun: regex
21:39 < isaacbw> whatever works Industrial 
21:39 < isaacbw> that's lazy
21:40 < skylamer> greetings to all http://i.imgur.com/0vJHDae.jpg :D
21:40 < isaacbw> you should try rendering it in phantomjs and see what happens
21:40 < isaacbw> make sure to put phantom on a separate server though to reduce load
21:40 < marlun> geNAZt: I would like something a little easier to understand than regex. Pretty much jquery with only the part that inpects html.
21:40 < isaacbw> and use emails to return the results of the rendering attempt
21:41 < isaacbw> ooh, no
21:41 < geNAZt> marlun: to access the dom you need to parse the complete html
21:41 < geNAZt> even if you only want to read it
21:41 < geNAZt> so regex would be faster 
21:41 < geNAZt> and they arent that complex
21:41 < isaacbw> better idea: use mechanical turk and ask people to attempt loading a page
21:41 < isaacbw> what's your use case marlun 
21:42 < isaacbw> because depending on what you're trying to do, the solution could be anything from indexOf to using jsdom
21:43 < samholmes> skylamer: WHAT DID YOU DO TO THE POOR KITTY!!!
21:43 < isaacbw> I want a cat but I'm afraid it will like my housemates more than me
21:43 < samholmes> isaacbw: help https://github.com/isaacs/npm/issues/3113 XD
21:44 < rump> how blasphemous is it that im considering moving my models into my route files
21:44 < skylamer> axaxaxaxa :D
21:44 < samholmes> isaacbw: I have four cats, want one? :P
21:44 < isaacbw> can you brainwash it to hate everyone but me?
21:44 < CoverSlide> I have 5
21:44 < gildean> rump: there are no rules, you do as you see fit
21:44 < skylamer> no my cat, but nothing special
21:44 < CoverSlide> and they hate everyone including me
21:44 < isaacbw> heh
21:45 <@mbalho> nobody has really noticed the youtube video i put in the topic last week
21:45 < marlun> isaacbw: I want to use it in tests. Right now I'm using supertest.js to make request, check the response headers and then I would also like to for example make sure a form with a specific class is in the body.
21:45 < CoverSlide> nobody reads topics
21:45 < skylamer> http://i.imgur.com/uqalI.jpg?1 soon... o_Q
21:46 < isaacbw> samholmes, you probably meant that for isaacs, but I can try to help you. Can you paste the complete error message?
21:46 < isaacbw> marlun, that sounds like a job for jsdom
21:46 < rump> why did nodejs inherit rails style file structure anyway?
21:46 < rump> i mean, not forcibly but in practice it seems
21:47 < skylamer> do anyone here uses mega?
21:47 < isaacbw> you could use regex, but you'll tear your hair out trying to account for all possible variations
21:47 < CoverSlide> rump: you mean express?
21:47 < samholmes> isaacbw: updated the link on the issue
21:47 < CoverSlide> express was based on sinatra
21:47 < isaacbw> because web development follows waves of fads and nodejs et al is what came after rails
21:47 < rump> CoverSlide: yes, and all the other frameworks really
21:47 < othiym23> mbalho: I don't know why that cat is batman
21:47 < rump> web frameworks*
21:48 < CoverSlide> because all web frameworks were doing it
21:48 < CoverSlide> what file structure are you talking about anyway?
21:48 < rump> but it seems like the majority use the routes/views/models/lib/public thing
21:48 < CoverSlide> a public/ and views/ ?
21:48 < isaacbw> but yea, generalizing like that is pretty silly
21:48 < CoverSlide> well lib is pretty standard
21:48 < isaacbw> samholmes, nevermind, that actually does look like a bug in npm. Is npm updated fully?
21:48 < CoverSlide> routes / models isn't rails
21:49 < samholmes> isaacbw: Why make your nick so similuar to isaacs?
21:49 < isaacbw> because we have the same first name
21:49 < rump> so i guess MVC pattern styles are the pinnacle of web dev?
21:49 < isaacbw> and I like to create chaos
21:49 < AAA_awright> Stop beating him up like Mike Rowe, comeon :p
21:49 < samholmes> isaacbw: npm update isn't the command to update npm I'm guessing
21:49 < CoverSlide> one issac must be sacrificed
21:49 < isaacbw> no
21:49 < samholmes> how do I update npm, noob questions FTW
21:49 < isaacbw> samholmes, how did you install node/npm in the first place?
21:49 < CoverSlide> it's in the bible
21:50 < isaacbw> no, isaac only *almost* gets killed
21:50 < isaacbw> because god has control issues
21:50 < isaacbw> seriously, god is pretty fucked up guy
21:51 < samholmes> god isn't a guy dude
21:51 < samholmes> guy is a shemale
21:51 < isaacbw> woah
21:51 < samholmes> yup
21:51 < isaacbw> like cartman's mom
21:51 < isaacbw> that explains the whole jesus thing
21:51 < samholmes> lol
21:52 < isaacbw> seriously though, how did you install node
21:52 < samholmes> isaacbw: i can't remem
21:52 < isaacbw> lololol
21:52 < isaacbw> then I can't help very much
21:52 < samholmes> ah jesus...
21:52 < isaacbw> maybe macports or whatever that is?
21:52 < rump> brew
21:52 < samholmes> I don't think so..
21:52 < isaacbw> did you install it from source?
21:52 < isaacbw> how the hell do you not remember
21:53 < wao> homebrew?
21:53 < rump> probably the mac binary installer
21:53 < isaacbw> oh yea
21:53 < isaacbw> http://nodejs.org/download/
21:53 < samholmes> what's that one command called that tells me where a command is?
21:53 < isaacbw> just download something from there and run it and it should overwrite your old stuff
21:53 < samholmes> I think I might of used the mac binary installer actually
21:53 < rump> get brew instead
21:53 < samholmes> rump: I have brew
21:53 < rump> its tha tits
21:54 < samholmes> but didn't use it to install node
21:54 < rump> download the nodejs installer and run the uninstall script
21:54 < rump> then brew install node
21:54 < rump> or nodejs, i forget
21:54 < isaacbw> you can use type in linux
21:54 < rump> its 'node'
21:54 < samholmes> rump: brew search node
21:54 < isaacbw> or whereis
21:54 < isaacbw> but that probably won't help you a lot
21:55 < rump> or `which`
21:55 < isaacbw> yea
21:55 < isaacbw> but it will only tell you where it is, not how it got there
21:56 < samholmes> There isn't anything that could drastically go wrong if I uninstall using the installer and then brew install?
21:56 < samholmes> Damn, I don't think there is an uninstall option...
21:56 < isaacbw> try using the installer and see if it actually uninstalls anything
21:56 < rump> there is one, somewhere
21:56 < rump> iirc
21:56 < isaacbw> worst case you could try to clean out the installed files yourself
21:57 < samholmes> isaacbw: omg that'd be difficult wouldn't it?
21:57 < rump> it puts it all in /usr/local/ so it'd be easy to clean out
21:57 < samholmes> rump: /usr/local/bin actually
21:58 < isaacbw> if that's true, then yea
21:58 < rump> probably only bin and share
21:58 < rump> check /usr/local/share
21:58 < isaacbw> here's what the archlinux repo package installed: http://pastebin.com/kCZLF0wR
21:58 < rump> or /usr/local/lib
21:58 < samholmes> rump: nothing node-y there
21:58 < isaacbw> what does 'which node' return
21:59 < samholmes>  /usr/local/bin/node
21:59 < samholmes> like I said,
21:59 < samholmes> but is node the only file I must remove?
21:59 < isaacbw> then there's node-y stuff there
21:59 < samholmes> isaacbw: naturally
21:59 < rump> next level http://stackoverflow.com/questions/9044788/how-do-i-uninstall-nodejs-installed-from-pkg-mac-os-x
22:00 < rump> there is likely the documentation and include/lib files
22:00 < isaacbw> grep -s node `find /usr/local`
22:00 < rump> in usr/local/ somewhere
22:00 < rump> find /usr/local/ -name '*node*
22:00 < rump> :P
22:00 < isaacbw> heh okay
22:00 < isaacbw> do that instead
22:01 < rump> add trailing ' though
22:02 < isaacbw> holy fucking shit I hate ebay
22:02 < isaacbw> got sniped at 3 seconds
22:02 < isaacbw> bastards
22:04 < cloudbender> what were you bidding on ?
22:05 < jocafa> vintage eskimo pin-up calendar
22:06 < isaacbw> cloudbender, a daylight lamp
22:06 < isaacbw> http://www.ebay.com/itm/150984982902?ssPageName=STRK:MEBIDX:IT&_trksid=p3984.m1431.l2649&autorefresh=true
22:07 < cloudbender> lol eskimo.  I thought maybe it was an HG Wells Time Machine, at 3 seconds and all
22:07 < isaacbw> ebay is truly terrible. I don't even know how you would attempt to touch something so large though
22:07 < s3shs> Is there a way to specify where require should look for js files?
22:07 < s3shs> I'm getting tired of updating all my paths.
22:07 < isaacbw> s3shs, http://nodejs.org/api/modules.html
22:07 < listochkin> rump: I used this twice and it worked great https://gist.github.com/2697848
22:08 < rump> samholmes: ^
22:09 < rump> npm could have picked a better folder than node_modules/
22:10 < marlun> What's the difference between res.body and res.text? I thought I would get the response body in .body but it seems to be in .text?
22:10 < rump> i would have taken, modules/, opt/, or even lib/
22:10 <@mbalho> rump: you are correct. also the metric system should be in use in the USA
22:10 < rump> mbalho++
22:11 <@mbalho> unfortunately reality does not respect should in most cases
22:11 < isaacbw> science in the us uses metric
22:11 < AAA_awright> Because we just so love degrees Kelvin
22:11 < jocafa> i dunno… node_modules is explicit.  i use node and a few modules while developing client-side js libs for other people to consume.
22:11 < isaacbw> there's not a good reason to use it for anything else
22:11  * AAA_awright will take his Fahrenheit, thanks
22:12 < isaacbw> fahrenheit 4 lyfe man
22:12 < jocafa> using some generic-ish folder name would get in my way
22:12 < rump> jocafa: if thats the case then its not explicit enough, cause npm isnt the only package manager
22:12 < rump> clearly we need node_npm_modules_mmk
22:12 < rump> var integer_im_going_to_loop_over;
22:13 < AAA_awright> Yeah guys, you should be using https://github.com/Acubed/git-node
22:13 < pspeter3> Did people see AirBnb's post on render?
22:13 < AAA_awright> Who doesn't like forking depdnencies
22:15 < PARLIAMENT> kelvin and celsius are antiquated temperature scales existing only because they're easy to apply to mercury thermometers
22:15 < isaacbw> lol
22:15 < isaacbw> SHIT HIT THE FAN
22:15 < isaacbw> FIGHT FIGHT FIGHT
22:16 < PARLIAMENT> IN REALITY KINETIC ENERGY INCREASES WITH THE SQUARE OF THE VELOCITY, BITCH
22:16 < stefan41> socket.io question: anyone have an insights on why neither the reconnect_failed nor the connect_failed messages fire when node responds with a 403 to the socket.io URL (because the handshake is unauthorized)?
22:16 < rump> pwned
22:16 < s3shs> isaacbw, I was sort of hoping to call some magical require function to specify a path to look in.
22:17 < isaacbw> AND ANY ATTEMPT TO EXPRESS TEMPERATURE IN A HUMAN-UNDERSTANDABLE FORM IS FUTILE
22:17 < isaacbw> s3shs, like, 'require all files in this folder' ?
22:17 < isaacbw> no
22:17 < s3shs> Or, "look in this folder for files"
22:17 < s3shs> Without changing NODE_PATH.
22:18 < isaacbw> you can write your own utility to do that
22:18 < isaacbw> node has plenty of file system tools
22:18 < s3shs> I know.
22:19 < s3shs> The "Folders as Modules" section of the site looks interesting-- ish.
22:19 < s3shs> :-)
22:19 < holzp> hm how does one write a test for a logger?
22:19 < isaacbw> there's no way Lesnewski is a spanish name, right?
22:20 < holzp> is there a way to listen in on the console output?
22:20 < isaacbw> holzp, if you spawned the process as a child you have access to its stdout
22:20 < isaacbw> otherwise no
22:20 < holzp> right, this is an otheriwise no situation
22:21 < isaacbw> you could change the value of stdout into a proxy
22:21 < holzp> guess I can at least verify its methods exist
22:21 < holzp> yeah I should try that
22:21 < isaacbw> https://groups.google.com/forum/?fromgroups=#!topic/nodejs/RvrOa1Ch964
22:21 < holzp> a setup/teardown with stdout as a proxy
22:21 < holzp> of course I think the test library writes to stdout
22:21 < holzp> hm
22:21 < holzp> breal all the things!
22:22 < holzp> break
22:22 < holzp> nice
22:22 < holzp> I like that that gist was written two years ago and he updated it this month
22:26 < isaacbw> you could also pipe the script's output into another program with |
22:26 < isaacbw> and use the other program to verify everything
22:28 < isaacbw> do you ever wonder if history never happened
22:28 < isaacbw> and the world was created the moment you were born
22:29 < CoverSlide> isaacbw: are you a holocaust denier
22:29 < isaacbw> it doesn't even matter because reality is an illusion
22:29 < isaacbw> WE ARE ALL ROBOTS
22:29 < isaacbw> maybe I'm a civil war denier
22:30 < isaacbw> the crazy thing about the holocaust is that no one really knew about the labor camps until everything was winding down
22:30 < cloudbender> I find that hard to beleive
22:30 < isaacbw> outside of germany I mean
22:31  * jocafa sings "We Are All Earthlings" from Sesame Street
22:31 < cloudbender> there were back-channel communications I am sure
22:31 < isaacbw> foreign troops started running across all these camps and were like "holy fuck"
22:31 < isaacbw> I nearly failed every history class I ever took though, so I'm probably just making stuff up
22:31 < cloudbender> true, the troops closest to the problem probably had the least awareness
22:31 < cloudbender> I tend to go with the probabilities
22:32 < cloudbender> I suspect too that the worst of it occured as the food and supplies dwindled
22:33 < cloudbender> the last year or two
22:33 < cloudbender> But 'worst' is a relative term
22:35 < holzp> well, there were rumours but up till that point nobody really believed such a thing was possible
22:35 < holzp> remember thats about as far from the Civil War as today is from then
22:35 < holzp> and during the CW, people would picnic and watch the battles
22:36 < isaacbw> civil war deniers?
22:36 < holzp> so war to many minds had limiits
22:36 < isaacbw> those were the days
22:36 < holzp> the idea that such total war/genocide would even happen seemed impossible
22:36 < isaacbw> how are we gonna have robot soldiers fighting on the front lines without a front line?
22:36 < holzp> even to the people *seeing the signs* the Germans themselves
22:37 < holzp> The Generals made them all walk through the camps just to show them what their own Gvt was doing
22:37 < jrajav> How 'bout that Nod.. oh, sorry, I'll show myself out.
22:37 < isaacbw> the worst part about the whole thing is that hitler did a lot of good for the rest of the country
22:37 < isaacbw> as long as they were 'pure'
22:37 < MiracleBlue> Hey y'all, I've got a question about express.  Is there a particular channel for that?  Or is that ok to be asked here?
22:37 < holzp> dunno, but you can ask here
22:37 < isaacbw> nah, here is great
22:38 < isaacbw> at least he helped germany until he decided to convince the rest of the world to blow it up
22:39 < MiracleBlue> Cool, thanks guys.  I've got a routes file, upload.js, which is routed to a url /uploads, and in it I'd like to pluck out one of my ejs views and render it and use the rendered string elsewhere rather than making it part of the response.
22:39 < MiracleBlue> I discovered I can do this by calling app.render and passing a callback, however, I can't access the app instance from my upload.js route file :(
22:39 < MiracleBlue> Since it's out of scope.
22:39 < AviMarcus> isaacbw, I think people kinda think: "there are som crazy people that go around killing people, but c'mon, in this day and age, the world is a pretty safe place and there's no mass slaughter and murder going on".  But the holocaust was less than 70 years ago. You might know someone that was alive then.
22:40 < holzp> I think im too drunk to help with that
22:40 < MiracleBlue> That's ok :)
22:40 < isaacbw> AviMarcus, and there are modern genocides that are still happening
22:40 < isaacbw> we just don't think about it
22:40 < azylman> I always pass my app var to all of the route files
22:40 < MiracleBlue> ^
22:40 < AviMarcus> Yep....
22:40 < MiracleBlue> azylman: Ah!  I'd like to try that
22:40 < MiracleBlue> How do I do that
22:40 < isaacbw> yea, just pass it in
22:40 < azylman> Basically have them export a function that takes in app and does whatever you need
22:41 < MiracleBlue> Okay
22:41 < MiracleBlue> Sorry this is my very first project with node, it's still a little confusing to me.
22:41 < MiracleBlue> I've got exports.upload = function(req, res)
22:41 < MiracleBlue> And in my app.'s file, I've got
22:41 < MiracleBlue> app.post("/upload", upload.upload);
22:41 < isaacbw> I just ordered my first 1080p monitor
22:41 < isaacbw> I'm so excited
22:42 < MiracleBlue> Also, var upload = require("./routes/upload") up the top of the file.
22:42 < holzp> isaacbw, Ive just been using hdtv's as my monitors
22:42 < isaacbw> I have a limit
22:42 < MiracleBlue> Oh, actually… I think I may have an idea on how to do this.
22:43 < isaacbw> there are lots of ways to do it MiracleBlue 
22:43 < isaacbw> there's no best way
22:43 < azylman> MiracleBlue: http://hastebin.com/jawasegafo.lua
22:43 < azylman> That's how I normally do my routes files
22:43 < azylman> Or something similar to that
22:43 < isaacbw> .lua?
22:43 < MiracleBlue> Thank you kind sirs
22:43 < isaacbw> wtf
22:43 < MiracleBlue> That's exactly what I was looking for.
22:43 < CoverSlide> hastebin guesses the extension
22:43 < isaacbw> I like lua. Javascript is like a more structured lua
22:44 < CoverSlide> you can chenge the extension and it will change the hilighting
22:44 < isaacbw> lol
22:44 < azylman> I wish I could give my code samples in coffeescript
22:44 < isaacbw> it's not very smart then
22:44 < azylman> But people usually get confused
22:44 < MiracleBlue> Works perfectly, thank you
22:45 < CoverSlide> i like hastebin, it's awesome
22:45 < isaacbw> coffee script is hard to read
22:45 < CoverSlide> agreed
22:45 < MiracleBlue> Also, coffee script is the devil.
22:45 < MiracleBlue> THE DEVIL
22:45 < isaacbw> heh
22:45 < azylman> It's hard to read if you don't know coffeescript...
22:45 < CoverSlide> and coffeescript eats baby elephants
22:45 < MiracleBlue> It's easy to read… IF YOURE THE DEVIL
22:45 < MiracleBlue> And kittens, it kills kittens
22:45 < isaacbw> are you calling me stupid?
22:45 < MiracleBlue> In front of a live audience
22:45 < MiracleBlue> Of weeping children
22:45 < isaacbw> http://i.imgur.com/TWhC7.jpg
22:46 < MiracleBlue> Aw man, see, how could you hate that picture?
22:46 < MiracleBlue> If you like coffee script, you hate that picture.
22:46 < AviMarcus> isaacbw, where the heck do you find a picture like that?
22:46 < isaacbw> I googled "baby elephant"
22:47 < AviMarcus> ah, the birds were not part of the lookup.
22:47 < isaacbw> noop
22:47 < MiracleBlue> Ladies and gentlemen, may I present to you… duckies: http://i.imgur.com/WnESzQJ.jpg
22:48 < azylman> #node.js really needs a hubot
22:48 < isaacbw> imgur was a lot funnier before redditors turned it into a circlejerk
22:48 < MiracleBlue> :(
22:48 < isaacbw> like, I used to be able to just sit browsing the imgur front page and laugh for hours on end
22:48  * MiracleBlue slinks away
22:49 < isaacbw> now it's just "let's laugh about jokes about joking on imgur!"
22:49 < isaacbw> actually, I think the whole idea of sorting content with upvotes/downvotes is broken
22:50 < isaacbw> there's an opportunity to create a much better community portal that doesn't use upvotes
22:53 < holzp> both reddit and facebook will be replaces
22:53 < holzp> replaced
22:53 < holzp> its the circle of Internet
22:54 < holzp> slashdot->digg->reddit->?
22:54 < holzp> sourceforge->github
22:54 < holzp> aol -> [all sorts of crap] -> friendster -> myspace -> facebook -> ?
22:54 < isaacbw> what needs to replace reddit is a "community platform"
22:55 < isaacbw> subreddits are really powerful
22:55 < isaacbw> anyone can start and build a community around a common interest
22:56 < jtsnow> Well, reddit is open source. That's a good start for a platform.
23:02 < isaacbw> I woke up at 3pm today. Fuck my life
23:06 < holzp> whats cool abuot reddit is you are a once part of everything, but at the same time part of your narrow interests
23:06 < holzp> front and all
23:07 < isaacbw> it boggles my mind how pedantic redditors can be
23:08 < isaacbw> oh man I thought I bought a microwave but I just realized it was a dream
23:08 < isaacbw> it was an awesome microwave that I got for $30 and it was made of aluminum foil
23:10 < holzp> thos types of sites always follow the same pattern
23:11 < holzp> tech news -> general stuff -> inside jokes -> everyone leaves
23:11 < holzp> slashdot/digg/reddit
23:11 < holzp> christ I am old
23:11 < isaacbw> imgur is on the inside jokes phase now and it makes me sad
23:12 < holzp> thats reddits fault
23:12 < holzp> reddit is on the inside joke phase, case in point /r/all
23:12 < isaacbw> hmm, it actually started to get really bad when imgur copied karma and added 'reputations'
23:12 < holzp> imgur is driven mostly by reddit
23:12 < isaacbw> for a while imgur had its own life
23:12 < holzp> if reddit was google they would have bought imgur by now
23:13 < isaacbw> and then redditors realized that all the images they were linking to were on imgur anyway, so what the hell
23:13 < CoverSlide> does imgur make any money?
23:13 < holzp> it must
23:13 < livinded> probably takes in ad income, no idea if it's profitable
23:13 < isaacbw> yea, imgur is self-sustained
23:14 < isaacbw> no or very little seed money
23:14 < holzp> the hosting and stuff while a lot of bandwidth is aws so its not that pricy
23:14 < isaacbw> which is actually pretty cool
23:14 < harrisonm> imgur has a premium account that gives you unlimited uploads and removes ads
23:14 < harrisonm> So that and ads for income stream
23:15 < holzp> I was doing something interesting in nodetest, then I went to dinner, now I don't remember why I was doing it
23:15 < isaacbw> heh
23:15 < livinded> I bought hashi.sh and was going to build an imagr type service for weed then try to sell to weedmaps but never did it :/
23:15 < CoverSlide> weedmaps?
23:16 < livinded> CoverSlide: it's a weed store finder for states that had medicinal marijauana
23:16 < livinded> have*
23:17 < livinded> coincidently their office is located somewhat close to me and from what I've heard the site is built mostly on node
23:17 < isaacbw> you should also have a dealer directive for states that don't have medicinal marijuana
23:17 < isaacbw> that would make a lot of people's lives easier
23:17 < harrisonm> Getting into really shaky legal territory there
23:17 < isaacbw> "do they deliver? just weed or anything else? what varieties do they specialize in? ever been raided?"
23:17 < livinded> weedcopter?
23:17 < isaacbw> heh
23:18 < isaacbw> you would probably be legally safe. Just no one would use it
23:18 < isaacbw> have you guys seen silk road? that's really interesting
23:18 < livinded> isaacbw: ya, got a couple friends who use it
23:19 < isaacbw> it blows my mind
23:19 < livinded> I don't trust it but apparently it works
23:20 < livinded> but realistically living in LA or SF if you can't find good drugs you're doing something wrong
23:20 < isaacbw> it seems to be the only practical use for bitcoins
23:20 < livinded> isaacbw: I think bitcoins would work fairly well for money laundering too
23:20 < isaacbw> haha, yea. Probably
23:21 < isaacbw> I wonder what the IRS would do if you tried presenting a bitcoin clusterfuck
23:21 < livinded> the problem is you can basically only buy a bunch more black market shit
23:21 < isaacbw> don't people sell some legal stuff as well?
23:21 < AviMarcus> tjfontaine, one more question :)  if I do naptr regexp of:  123456789;npdi@127.0.0.1 then in the dig result the ; get escaped, e.g.: \;  how can I fix that?
23:21 < isaacbw> anyway, yea. I'm not one of silk road's target customers, but it's really interesting
23:21 < livinded> isaacbw: haven't taken a look. There's some legit stuff, but probably not easy to find enough stuff to buy if you're laundering money through bitcoins
23:22 < isaacbw> mm
23:23 < livinded> still convinced we just unschedule drugs, have one really unproductive fun year while the retards kill themselves off, then get back to doing awesome shit
23:23 < isaacbw> hah
23:23 < AviMarcus> livinded hah
23:23 < rump> omg im stuck in senseless analysis paralysis
23:23 < harrisonm> I think there's plenty of reasons to ease up on/legalize drug use, but that's not really one for me :|
23:23 < rump> killmenow
23:24 < Zak> kill rump -h now
23:25 < isaacbw> I'm happy with heroin, cocaine, pcp, and meth staying illegal
23:25 < AviMarcus> it does seem a tremendous amount of resources goes into drug enforcement. And since it does - it's illegal and therefore highly rewarding -- so then just means drugs are part of organized crime units that are usually pretty ruthless, resulting in more deaths. If it was legalized then there would be more competition, lower profit margin, and then less killing around the distribution of drugs...
23:25 < livinded> isaacbw: the problem with that is that it's hard to justify other stims like mdma when you're banning coke
23:26 < livinded> or meth
23:26 < livinded> and make a separation
23:26 < tjfontaine> AviMarcus: hmm
23:26 < isaacbw> maybe there could be 'narcotics prescribers' so you can't just buy shit willy nilly
23:26 < rump> Zak: Segmentation fault (core dumped)
23:27 < tjfontaine> AviMarcus: do you have another server to dig and compare against?
23:27 < livinded> isaacbw: sounds like the medical marijauna system in california...
23:27 < isaacbw> something like that
23:27 < livinded> only people making money in that are the doctors and the weed stores
23:27 < isaacbw> man, I have a headache and I feel light headed and dizzy
23:27 < isaacbw> is that normal
23:28 < CoverSlide> it is normal right before excruciating death
23:29 < Zak> they should just make all drugs legal
23:29 < isaacbw> maybe half a liter of coffee will save me
23:29 < Zak> but still have laws on bconducting yourself appropriately in public, or if you're driving a vehicle etc
23:30 < isaacbw> government owned crack houses
23:30 < Zak> there's so many benefits in just forgetting about whether drugs are illegal
23:30 < Zak> it saves time with border protection
23:30 < Zak> there won't be drug lords
23:30 < Zak> people won't do drugs just because its "cool" and illegal
23:31 < Zak> it's probably more likely to educate people on how fucked up they are
23:31 < Zak> because people won't be quiet when they are actually having problems
23:31 < isaacbw> people do drugs because their life is shit and it's the only place they can turn
23:31 < isaacbw> heroin and meth and shit like that at least
23:31 < Zak> yeah, i guess that's true
23:32 < Zak> there's a good chance it will ruin a few more lives
23:32 < Zak> not sure how many more though
23:32 < Zak> I live in Australia and smoking is getting banned nearly everywhere
23:32 < isaacbw> if narcotics were legalized, the government would need to invest a lot of money into providing free rehab for people who want to escape their addictions
23:32 < Zak> but you can still buy cigarettes
23:32 < livinded> isaacbw: also because it's just a lot of fun at first
23:33 < livinded> then it just becomes life
23:33 < Zak> bbl
23:33 < isaacbw> everyone smokes here
23:33 < isaacbw> people spend half their income on cigarettes
23:33 < livinded> LA is super anti-smoking
23:34 < isaacbw> I see someone smoking in my hallway pretty much every time I go out
23:35 < isaacbw> back to the weedmap idea, I think there's a lot of opportunity in making things easy to find
23:36 < isaacbw> a party map would be cool
23:36 < isaacbw> find public parties in your area with information on size, alcohol, etc
23:37 < isaacbw> a coffee map
23:38 < livinded> isaacbw: isn't that called facebook?
23:38 < livinded> not the coffee, but the party
23:38 < isaacbw> I guess
23:38 < livinded> I built something like that for concerts at a hackathon last year but the company that I was pulling data from wouldn't deal with me
23:39 < isaacbw> maybe someone should make a facebook app to simplify it all
23:39 < livinded> they said I was too close to their business
23:39 < isaacbw> put it on a map, list your friends attending each party, etc
23:39 < isaacbw> haha, that's actually pretty funny livinded 
23:39 < isaacbw> man, I like this idea
23:40 < livinded> I was super pissed. They wouldn't even give me an API key at the hackathon so I just search github for someone else's and built it anyway
23:40 < livinded> they were one of the sponsors of the hackathon
23:40 < isaacbw> aw man, massive turds
23:41 < isaacbw> that's terrible business
23:41 < livinded> whatever, I abused the fuck out of their api that weekend
23:42 < isaacbw> what's the company if you don't mind me asking?
23:42 < livinded> songkick
23:44 < livinded> it was really cool though. It would figure out where you were, find all concerts within an n mile radius that had an artist under the genere g. Then it would give you details, show you the lineup, and provide a track from I think spotify for each artist on the lineup and a link to buy tickets
23:46 < AAA_awright> livinded: That's sick, I love Songkick
23:47 < isaacbw> livinded, they should have let you do it and then paid you to integrate it with their own service
23:47 < isaacbw> that's kind of the point of a hackathon is to try new things
23:48 < livinded> isaacbw: I know. I still have the code around somewhere
23:48 < livinded> I may polish it and try again. I didn't finish in time for judging but I went home and got it working after. I'd still love to have this app
23:48 < isaacbw> you should find another source of data, start a competing company, put them out of business, and then send them an email like "haha fuckers. You should have let me use your api"
23:49 < livinded> isaacbw: I couldn't find anyone else with the data that was making it available and have no idea how to go about acquiring it
23:49 < isaacbw> *are* there any facebook apps that geomap events like parties?
23:49 < livinded> or really want to deal with that part
23:49 < isaacbw> that seems like something pretty basic
23:49 < isaacbw> livinded, songkick probably pulls data from a lot of different sources and has deals with record labels and the like
23:50 < livinded> ya
23:50 < isaacbw> it would not be fun to set up those relationships
23:50 < livinded> ya, I hate the entertainment industry
23:50 < livinded> they make it so hard for you do innovate and do cool stuff
23:50 < isaacbw> I could also see myself using a new music discovery app
23:50 < isaacbw> I usually just go to cd baby and open a bunch of tabs and listen to samples
23:51 < livinded> I go on what.cd and look at the related artists usually
23:51 < isaacbw> but if there was an app that would be constantly cycling through samples that would be cool
23:51 < isaacbw> yea, I like related artist maps too
23:51 < livinded> or soundcloud and look at who artists follow
23:51 < isaacbw> pandora doesn't seem as clever as it used to be
23:51 < livinded> maybe visualizing that
23:51 < isaacbw> or at least I don't like what it does
23:51 < isaacbw> visualizing it and automating sample playing
23:51 < livinded> ya
23:51 < samholmes> damn, my logs were only 300 lines
23:51 < livinded> that would be awesome
23:51 < samholmes> what was said before?
23:52 < livinded> I think I found my next hollywood hack day project
23:52 < samholmes> I set them to 5000 lines now
23:52 < isaacbw> and saving interesting songs to a list without leaving the map
23:52 < isaacbw> :P
23:52 < livinded> isaacbw: I'll let you know when it launches :D
23:52 < isaacbw> yay
23:52 < isaacbw> I'll be your best user
23:53 < livinded> my issue with pandora is that the sample size for a lot of genres was way too small
23:53 < livinded> I'd start repeating within the same day
23:54 < isaacbw> pandora usually starts out pretty well for me and then goes off on a tangent and just keeps going
23:54 < livinded> hmmm. I could probably just build a real time ranking algorithm for the soundcloud recomendation thing
23:55 < livinded> as it goes look at who follows who and rank co-referential connections highers
23:56 < isaacbw> what's that website that lets bands sell music downloads at name-your-price?
23:56 < isaacbw> mind blank
23:56 < isaacbw> bandcamp
23:57 < isaacbw> my internet is farting. Am I still connected?
23:57 < echo> isaacbw: Jes.
23:57 <@Nexxy> hey, where did isaacbw go?
23:57 < isaacbw> lol
23:57 < isaacbw> thanks
23:58 < isaacbw> someone should write a utility for seeking out torrenters on a network and injecting clown porn into their downloads
23:58 <@Nexxy> ah huh.
23:58 < azylman> Yeah, that'd be awesome
23:58 < azylman> I'd love my Starcraft updates turning into clown porn
23:59 < isaacbw> huh, I've never actually seen clown porn
23:59 < isaacbw> I wonder if it's easy to find
23:59 < isaacbw> ooh
23:59 < isaacbw> this is some weird shit right here
23:59 <@Nexxy> I'm pretty sure this is not an appropriate conversation topic for #Node.js 
--- Log closed Thu Jan 31 00:00:14 2013
