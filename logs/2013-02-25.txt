--- Log opened Mon Feb 25 00:00:32 2013
00:32 < Slade-> has anyone here tried passport, and able to recommend it?
00:35 < Slade-> i guess connect-auth and everyauth are also the big auth platforms
00:42 < robinson_k> do you have problems with github too atm?
00:42 < mscdex> github is up!
00:50 < lyaunzbe> Hey, so I ended up using JSON.parse(JSON.stringify(array)) to create a deep copy of array. There should be no issues/downsides as long as the array i'm copying doesn't have closures, right?
00:51 < DarkArgon> https://github.com/pvorb/node-clone
00:51 < knarr> hey, a quick mongoDB question if anyone can answer it: What does collection.findOne() return if nothing matches the query?
00:52 < DarkArgon> null i think
00:52 < lyaunzbe> DarkArgon: Thanks, but why use a library if I don't have to?
00:52 < DarkArgon> faster
00:53 < lyaunzbe> I'm dealing with an amount of data where that is negligible.
00:53 < DarkArgon> easier syntax
00:56 < knarr> yeah it looks like it, thank
01:24 < sorensen> so im creating a module that needs to read from the root of the requiring app directory
01:24 < sorensen> is there a built in way to find that path?
01:24 < sorensen> was looking at module.parent but it always points to the filename of what is doing the require
01:33 < carpii> soren, what do you mean? whats the difference?
01:37 < carpii> sorensen:  http://pastie.org/6331218
01:40 < sorensen> carpii: that would get me the file name of the file that required my module
01:41 < sorensen> not the project root
01:41 < carpii> no it recurses backwards
01:41 < sorensen> ooo
01:41 < carpii> try it, I just stuck it in express/node_modules/connect/index.js
01:41 < carpii> and it returned the filename of my project 
01:41 < carpii> youll need to chop filename off to get the path
01:42 < asdf12> beer and beans
01:42 < SomeoneWeird> __dirname.replace(__filename,'')
01:42 < SomeoneWeird> >.>
01:42 < SomeoneWeird> lol
01:43 < sorensen> yes thats perfect
01:43 < sorensen> carpii: thanks
01:44 < carpii> np
01:45 < t4w> Express question: How would one stop express from printing to stdout, I only want it printing to a write stream, which I've figured out already.
01:49 < carpii> i think it uses connect.js for the default logger
01:49 < Slade-> hmm. wtf is jade
01:49 < carpii> so you can probably pass options to that
01:49 < t4w> I guessed that, but I'm trying to figure out how to get it to stop printing to stdout 
01:50 < echo> t4w: http://www.senchalabs.org/connect/logger.html It's one of the options.
01:50 < carpii> app.use(express.logger({stream: logFile}));  
01:50 < carpii> youve done that and it still outputs to stdout?
01:50 < owen1> how to store that in redis : I have a few json objects with a few string keys. {name: 'foo', title: 'bla', status: 'pass'} what's the best way to store them? in a list named 'projects' (and stringify the hashes) or in some other way?  i need to read the information of all of them and not sure if list will allow me to do that.
01:51 < t4w> Hold on, I think I messed something up...
01:51 < carpii> var stream = options.stream || process.stdout   << i think expres sonly defaults to stdout when stream isnt set
01:51 < carpii> or connect rather
01:51 < t4w> Ah, alright, I did mess that up, it works now, thanks
01:53 < zivester> is there a way in express, to override a res.render, and output the locals in JSON? i.e. if I want ?raw=1 to run normal application logic, but instead of sending back the HTML, just send the res.locals as JSON
01:53 < mscdex> Slade-: templating engine
01:53 < Slade-> any good?
01:53 < mscdex> dunno, never used it
01:54 < Slade-> these look ugly https://github.com/bnoguchi/everyauth/tree/master/example/views
01:54 < mscdex> Slade-: http://jade-lang.com/
01:54 < nkohari> if you like haml you'll like jade, if not, you won't
01:54 < mscdex> there you have it
02:02 < MI6> joyent/libuv: Ben Noordhuis master * b04fc33 : linux: use eventfds for async handles  Use eventfds to drive async handle (+1 more commits) - http://git.io/b3s71g
02:21 < asdf12> blue moon
02:27 < MI6> joyent/libuv: Ben Noordhuis master * 39c8a90 : unix: set errno in sendfile emulation  The sendfile emulation in src/unix - http://git.io/ZSGRBw
02:27 < carpii> in socket.io, is it better to define a different message type for each message (thus writing seperate .on("messagetype" handlers, or better to send all messages as the same type, and use the same handler as a router?
02:28 < asdf12> i want to say the last
02:29 < asdf12> need to look at the codez
02:30 < carpii> hm my codes pretty big now, but basically its a chatroom protocol, messages like "join", "leave", "message" etc 
02:30 < asdf12> first one probably if you do it often, probably comes with slight overhead or extra memory use
02:30 < asdf12> i meant socket.io code
02:30 < carpii> but ive realised that in order to perform a common operation on all incoming packets, I now have to add the same function call to each .on( handler
02:30 < carpii> ah
02:33 < asdf12> carpii, that doesn't seem like a big deal
02:33 < carpii> but from a design perspective, you dont think its an issue to use the same messagetype for all my protocl?
02:34 < carpii> and store the actual message type in the payload data
02:34 < asdf12> well i dont know about that,i just meant you having to do a common operation, that seems simple enough to 'fix'
02:35 < carpii> how would you suggest?  I agree its trivial to add it to each 'on' handler
02:35 < carpii> but seems a better design would be for em all to route through same wrapper
02:35 < Slade-> carpii: do you have any intents on having an RPC like system in it?
02:35 < asdf12> no that would require redundant lines, thats ok if it you don't have many handlers
02:35 < asdf12> but i would set a proxy
02:35 < carpii> RPC like 'system'?  or an RPC-like system?
02:36 < Slade-> carpii: the second
02:36 < Slade-> if so you'll end up wrapping evreything anyhow
02:36 < carpii> hm its just chatroom server, i cant think what an RPC-like syatem would look like 
02:36 < Slade-> getuserinfo.. ping/pong  whatevre
02:36 < asdf12> ideally, on('join', joinfn) on('leave', leavefn) etc. and each joinfn, leavefn will call your commonfn before it calls your joinfn 
02:37 < asdf12> or leavefn
02:37 < Slade-> carpii: for just a chatroom the socketio api is pretty idealistic
02:38 < asdf12> carpii: does that sound better than setting up more and more on message handlers?
02:38 < asdf12> like am i understanding it right
02:38 < carpii> asdf, thats how im doing it now, but I dont understand how youre propsiing it calls commonfn
02:38 < carpii> like where would I add that without calling it from each handler ?
02:40 < asdf12> you could use my proxy lib ;P though to do it exactly like that
02:40 < carpii> ah, whats it called? :)
02:40 < asdf12> there are other ways though
02:41 < asdf12> like on('join', function() return function() { route('join') }() );
02:42 < asdf12> and route will do the common operation stuff, and find the route 'join' function and call that
02:42 < carpii> ok maybe im overcomplicating things for a fairly simple chatroom server
02:42 < asdf12> well return that
02:42 < carpii> but thanks for the advice :)
02:43 < carpii> just wanted to know if i was doing something frowned upon
02:43 < asdf12> on('join', function() { return route('join') } ()) oops
02:43 < carpii> is your proxy lib on github or anything?
02:44 < asdf12> it all depends on socket.io, i dont know the internals, but i imagine each new on('message' is essentially an additional route for your socket to look at
02:44 < asdf12> which probably won't be a big deal performance wise if it's like a key, value route, the lookup will be the same, i guess its just additional memory
02:44 < carpii> yea, but im having to do the comparison somewhere 
02:44 < asdf12> if it grows
02:44 < asdf12> https://github.com/lovebear/layer
02:45 < asdf12> its working, just haven't polished it yet
02:45 < carpii> ok thanks, ill check it out :)
02:46 < MI6> joyent/libuv: Ben Noordhuis master * 6ba6f4b : build: turn on strict aliasing in release builds - http://git.io/WuBrjA
02:47 < asdf12> like any real proxy, the idea is, the proxy is transparent, you set a proxy on my_function, call my_function() like normal
02:47 < asdf12> and your proxy functions get called too
03:00 < asdf12> oh
03:00 < asdf12> writing code while drunk is a bad idea
03:00 < asdf12> i just broke my tests i dont know how
03:03 < substack> writing code drunk is the best idea
03:03 < substack> asdf12: but that's why we *HAVE* tests
03:03 < substack> so you can code drunk
03:04 < substack> it's like drunk bowling on the bumper lanes covering the gutters
03:04 < asdf12> good pep talk, im going to open another beer
03:13 < carpii> bottoms up!
03:14 < fusiongrokker> I'm using express and trying to setup passport for auth. I've got it setup similarly to the passport-local example; but when I post to /login express is throwing "500 No callback function was given." with no stack trace... any idea how I can debug this?
03:14 < fusiongrokker> nothing being output to the console either.
03:15 < fusiongrokker> actually that's not true. "undefined" being output to the console.
03:20 < bassface> any advice on Node hosting? is there a preferred host?
03:23 < fusiongrokker> I've used both nodejitsu and heroku. both are nice.
03:24 < echo> Depends on what kind of control you want and what your workflow is... I prefer Joyent since I like to manage every layer in my stack. However, I've seen many people prefer Nodejitsu just for that kind of deploy and forget assurance.
03:43 < garthk> substack, did you have an aggregation function stream module somewhere? My memory fails me.
03:44 <@mbalho> garthk: concat-stream?
03:45 < substack> garthk: what do you need?
03:48 < garthk> substack: Feeding millions of values from ~1.5TB of XML through aggregation functions to get a few hundred graphs. Original time resolution is 4K pixels wide, resulting in big fuzzy caterpillar graphs.
03:48 < someprimetime_> i'm trying to email a jade template for email with var emailTemplate = jade.compile(fs.readFileSync('./views/email/new_user.jade', 'utf8')); which works, but doesn't quite work for html… any idea how to render the html in it?
03:49 < garthk> substack:  I need to take each week's 168 values for each original counter stream and aggregate it down to one value per day or one value per week. Each lower-res value might be max, min, avg, avg-except-for-outliers, busiest-five-hour-stretch, whatever. 
03:49 < garthk> s
03:50 < substack> garthk: can't think of anything obvious
03:50 < garthk> substack: I was conceiving it as piping the original raw streams through through-streams which kept only as much data as required to occasionally spit out the next number, piped through yet more through-streams to do additional processing, then finally into something which could funnel the 16-n00 streams of per-series data into a single graph. 
03:51 < garthk> substack: Cool. Ok, I'll break it up as small as I can and release what they'll let me. :)
03:51 < garthk> Ha! node-multimeter. Must find an excuse to use that one.
03:51 <@mbalho> garthk: check out stream-statistics from tmcw
03:51 < substack> garthk: employers are silly like that
03:52 < garthk> mbalho: thanks! http://macwright.org/2012/08/04/stream-statistics.html
03:52 < substack> not many of them have realized that code is actually a maintainence liability
03:52 < substack> and the more of it they can externalize the better
03:53 < garthk> substack: well, yeah, except we sell boxed code for a living. Legal want to make sure we're open sourcing mainly the stuff that either a) nobody could sell, or b) stuff that will drive our competitors nuts if free. :)
03:53 < ciree> Hey guys. Whats the best way to store sockets references so I can have them emit data later?
03:53 < garthk> Eep! Running late.
03:54 < garthk> ciree: closures.
03:54 < ciree> I want to emit data to a socket when someone posts to the server
03:54 < ciree> garthk: Care to explain a little? I know what a closure is
03:55 < garthk> i.e. create the socket in the function that creates the server, so you can server.on('post', function emit_the_data() { socket.write…
03:55 < ciree> Alright, I'll look into that. Thanks a lot
03:55 < garthk> The function's context encloses (hence the "closure" name) both the code and some variables the function needs to do its job.
03:57 < garthk> You can also pass the socket as an argument to the function that creates the server, or pass the server to the function that creates the socket (which can then call server.on), or whatever arrangement funnels both the server and the socket into a function that creates the function that encloses the socket and hooks it up to the server.
03:57 < garthk> Anyway, better go.
03:57 < shesek> someprimetime_, if it doesn't compile to html, what exactly does work?
03:58 < someprimetime_> it just shows the html as a string
03:58 < someprimetime_> <div id="blah" style="font-weight: bold;">hi there welcome to blah blah
03:58 < someprimetime_> etc
04:03 < fusiongrokker> asked this in #couchdb but everyone there appears to be sleeping... maybe someone with couch experience in here can help? I've created a very simple view, but it's only returning {}, can anyone tell me why? here's the view code (created from node) and a sample record: https://gist.github.com/atuttle/d5ddcb799aea42471bd7
04:03 <@mbalho> fusiongrokker: looks good to me
04:04 < fusiongrokker> :\
04:04 <@mbalho> fusiongrokker: what if you curl couch:5984/db/_design/accounts, does the js function look correct there
04:04 < fusiongrokker> good idea, I'll try.
04:05 < fusiongrokker> it looks good in futon btw. looked at that.
04:05 < fusiongrokker> the function itself.
04:05 <@mbalho> fusiongrokker: you can also go to couch:5984/db/_design/accounts/_view/all to do a test query in a browser or whatever
04:06 < cloudbender> Evening peeps
04:06 < fusiongrokker> argh... when I hit that url in the browser I get the expected result
04:07 < cloudbender> Do I want child.spawn() or child.fork()
04:07 <@mbalho> fusiongrokker: could be a problem with the library you are using, i use require('request')  + http://jpmens.net/2010/04/20/the-antepenultimate-couchdb-reference-card/ to keep things simple
04:07 < cloudbender> fork seems to be working well
04:08 < fusiongrokker> mbalho: I've been using cradle so far, and I have another view that's working fine. it's basically the same setup, just different record types/fields emitted, etc
04:08 < cloudbender> I have the child dealing with it's chores and accepting a shutdown message
04:09 < cloudbender> But I'm not sure of the advantages/disadvantages of spawn versus fork
04:09 < cloudbender> and I need a cup of joe
04:10 < cloudbender> Is there a way to get the child forked with a block of code rather than forcing it to load a script module ?
04:12 < cloudbender> <<< hears crickets chirping, wind whistling through an otherwise empty 'hall of academe'
04:14 < fusiongrokker> hm, so it must be an issue with cradle.
04:24 < Steven___> Hi guys :)
04:26 < cloudbender> Not much going on tonight
04:32 <@Nexxy> cloudbender, speak for yourself!
04:37 < fusiongrokker> BAH. I was connecting to the wrong database! :o\
04:40 < fusiongrokker> so apparently I'm using bcrypt incorrectly...
04:41 <@Nexxy> you and everyone else
04:41 < fusiongrokker> in particular, I'm using the bcrypt-nodejs library
04:41 < fusiongrokker> my understanding was that you don't have to worry about salts
04:42 < Slade-> salt is something you always have to worry about
04:42 <@Nexxy> yeah, I thought bcrypt just magically takes care of all of your security needs
04:42 <@Nexxy> is that not the case?
04:42 < Slade-> bcrypt is reasonable
04:42 < fusiongrokker> but I'm calling bcrypt.hashSync("foo") and getting different results every time...
04:43 < Slade-> just remember that it was conceived back when the standard hardware for rainbow attacks was an asic with a low gate count
04:43 < fusiongrokker> my understanding was that the salt was covertly embedded in the hash so that you don't have to store it separately.
04:43 < Slade-> technology has come a long way since last century ;)
04:43 < fusiongrokker> right but the whole concept was that you could just turn up the repeat count as the hardware gets better, right?
04:44 < fusiongrokker> so where 10 may be good today, if the hardware gets an order of magnitude better by next year, you just turn it up to 100.
04:45 < Slade-> sure :)
04:45 < Slade-> and lengthen the salt
04:45 < Slade-> nist recommends no fewer than 1000 these days i think
04:45 < fusiongrokker> why am I getting different hashes here?
04:45 < fusiongrokker> https://gist.github.com/atuttle/aa522f2cc61a71444999
04:47 < AAA_awright> fusiongrokker: Use PBKDF2
04:47 < fusiongrokker> link?
04:48 < Slade-> http://csrc.nist.gov/publications/nistpubs/800-132/nist-sp800-132.pdf  <-- thats nists recommendation as well btw
04:48 < AAA_awright> To what? It's builtin to Node.js, and a published standard, unlike bcrypt
04:48 < AAA_awright> fusiongrokker: http://nodejs.org/docs/latest/api/all.html#all_crypto_pbkdf2_password_salt_iterations_keylen_callback
04:50 < fusiongrokker> thanks, I'll look at that
04:50 < Slade-> AAA_awright: too bad they didnt have a practical example there :/
04:51 < fusiongrokker> easy enough to figure out
04:51 < AAA_awright> Security really is one of the most important things you can take care to do right. Even if *you* aren't storing any high-value data, people often use passwords that *do*.
04:51 < AAA_awright> Don't invent your own protocols or libraries, use published standards, and get peer review
04:51 < fusiongrokker> my only question is: is there a canonical way to generate random salts?
04:51 < AAA_awright> fusiongrokker: crypto.randomBytes(16) should be enough
04:51 < fusiongrokker> thanks
04:52 < AAA_awright> Math.random is NOT cryptographically secure
04:52 < fusiongrokker> AAA_awright: agree! but I'm no security wonk -- don't have the brains to keep up on the academic discussions. last time I upgraded was from md5 to bcrypt (on another platform) and that was the recommendation of my smart peers at the time. :)
04:52 < Slade-> 18 bytes is handy if you plan on base64ing it
04:53 < fusiongrokker> I don't _plan_ on base64ing it but that's a good point, so I'll go 18 just in case.
04:53 < Slade-> 16 is the common tho :)
04:53 < AAA_awright> Personally I store the field in the database like so: "pbkdf2-hmac-sha1:" salt
04:53 < AAA_awright> -bah
04:53 < AAA_awright> Personally I store the field in the database like so: "pbkdf2-hmac-sha1:" salt_base64 ":" iterations_decimal ":" hash_base64
04:54 < AAA_awright> Slade-: 16 is 128 bits of security which is usually what one goes for
04:54 < asdf12> gatorade is good for drinking after beer
04:55 < Slade-> asdf12: should try vitamin water
04:55 < AAA_awright> fusiongrokker: bcrypt is modified blowfish, which isn't designed as a hash, and it's *modified* blowfish at that. There's no good reason to make modifications to cryptographic protocols. So I don't trust it. PBKDF2 is a published standard, anyhow.
04:55 < Slade-> AAA_awright: yup and 18 is more than that, and divides evenly into base 64 ;)
04:55 < asdf12> new age hippie water
04:55 < Slade-> asdf12: just lots of electrolytes that interact in fun ways with beer brain
04:56 < AAA_awright> Slade-: I was going to say, some people may use 32 bytes = 256 bits because hashes have a strength of half their output... but that's not true of salts, their security is equal to their length
04:56 < Slade-> same concept as gatorade, just more
04:56 < Slade-> yup
04:57 < AAA_awright> You could go lower, as long as two hashes never collide, but eh, 128 bits pretty much guarentees you'll never have to lengthen the salt ever again
04:57 < Slade-> 2 to the power of salt Length
04:57 < Slade-> in bits
04:58 < fusiongrokker> what's a good target keylen?
04:59 < Slade-> 24
04:59 < AAA_awright> Since that's the output of a hash, if you want 128 bits of security, you need 256 bits of output, so I say 32 is guarenteed to be safe
04:59 < fusiongrokker> really? that's all?
05:00 < AAA_awright> var keylen = 64 hmm
05:00 < AAA_awright> Yeah, I use 64 bytes = 256 bits
05:01 < raphie> does anyone know if it's possible to get a list of all global variables ala window in browser-side JS?
05:01 < Slade-> yea i use 24 bytes. same as Stackoverflows implementation of this
05:01 < AAA_awright> Here's "123" as a password would be stored in my database: pbkdf2-hmac-sha1:8uY5l0ULUy+ybSHkJS5e/g==:4000:YFMPw5XCu0LCjwPCjzsYUsO5PmrDkMOlwp7CgjTCi8OhS0o7UG0eFsOTNl/DiwkjdcKzP1t4wrDCgmLDssOQHcOga3PDvSDDhy15w6nCkMOKw4FZw6w8w5PChCA=
05:02 < AAA_awright> Slade-: That's only 48 bits of security
05:03 < fusiongrokker> AAA_awright: is that a 24 bit salt and 4000 iterations?
05:05 < AAA_awright> Wait, that's 96 bits of security, not too terrible
05:06 < AAA_awright> fusiongrokker: My iterations vary from 4000-10000, it takes about 100ms, salt length is 16 bytes = 128 bits
05:06 < fusiongrokker> oh that's right you said you base64 encoded the salt
05:07 < fusiongrokker> that's why 16 bytes !== 24 characters :)
05:07 < AAA_awright> As a rule, PBKDFs will add lg(iterations) bits of security, 1024 iterations is 10 added bits
05:10 < AAA_awright> My hash length may be overkill
05:10 < AAA_awright> 32 bytes is good
05:11 < cloudbender> what are we calling a 'safe' hashing algorithm these days ? sha-3 ?
05:12 < AAA_awright> cloudbender: Depends on your use, you normally don't use block ciphers or hashes directly
05:12 < AAA_awright> HMAC-SHA1 in CTR mode is considered as safe as AES for encryption fwiw
05:13 < cloudbender> I think security needs to be my next topic, after I nail down child processes
05:13 < cloudbender> Si there an advantage of .spawn() versus fork() ?
05:13 < Slade-> sha-1 is still a fips recommendation
05:13 < cloudbender> *is there ...
05:13 < AAA_awright> I wasn't aware you could un-recommend recommendations
05:14 < Slade-> AAA_awright: they do all the time. 
05:14 < cloudbender> I thought sha-1 was compromised
05:14 < Slade-> http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf
05:14 < AAA_awright> cloudbender: It has a reduced security, less then an ideal hash function
05:15 < AAA_awright> That is to say, we're aware of it's reduced security
05:16 < cloudbender> perfect answer
05:16 < Slade-> sha-1 is pretty standard you could jump up to SHA-256 if you wanted tho
05:16 < cloudbender> I understand
05:16 < AAA_awright> Ideally it would have 80 bits of security (160 bits of output), but what did they estimate, 60 now?
05:17 < AAA_awright> More secure options should be chosen, but it's not time to run to the exits for existing implementations
05:18 < Slade-> most pbkdf2 implementations use sha1
05:18 < AAA_awright> As does Node.js
05:18 < cloudbender> ok
05:19 < Slade-> and c# /.net framework.. pretty sure python does as well
05:19 < cloudbender> It says sha1 has had some collission reports, but that's all.
05:20 < AAA_awright> cloudbender: Also your initial question, SHA-2 like SHA-256 is still considered perfectly secure, but only with an applied function like HMAC or PBKDF2, one property of hashes is that you can append more content and re-calculate the hash. This means if used directly, you could append data to an already-authenticated stream and it would still look authenticated. Not good.
05:20 < cloudbender> COllision probablilities are what prevents one from reliably 'hashing the hash' ?
05:21 < Slade-> if i'm not mistaken, you're talking aboutwhen 2 'passwords' could have the same hash
05:21 < cloudbender> right, I think.
05:21 < AAA_awright> what do you mean 'reading the hash'?
05:21 < Slade-> md5 collided on the dictionary. several times
05:25 < AAA_awright> Slade-: Actually, most PBKDF2 implementations including Node.js use HMAC-SHA1
05:25 < AAA_awright> Technical detail
05:27 < cloudbender> copy hmac-shaw1
05:27 < cloudbender> dang my cat is making wierd sounds
05:27 < cloudbender> hairball ?
05:28 < Slade-> sure
05:28 < AAA_awright> cloudbender: It may be broken, get a dog *ducks*
05:28 < cloudbender> Well, he talks alot, and sometimes it's hard to tell.
05:33 < cloudbender> No I meant where you hash1 a phrase, and hash2 the output from hash1
05:34 < cloudbender> collision opportunities in hash1 raises issues in using a hash2
05:35 < fusiongrokker> any known drawbacks to serializing a somewhat large object in the session? (a user record)
05:35 < Slade-> hmm everyauth is poorly maintained
05:35 < AAA_awright> cloudbender: hash(hash(content)) being insecure?
05:35 < AAA_awright> It's... complex. That shouldn't be secure, but you shouldn't be doing that by yourself either
05:35 < AAA_awright> Er,
05:35 < AAA_awright> That should be secure
05:37 < cloudbender> collisions aside, transfers through n number of hashes could help, as n is not really predictable.
05:38 < Slade-> just goes to show that a platform can never be too young to have poorly maintained libs
05:38 < AAA_awright> Tell me about it
05:38 < Slade-> guess i'll try passport
05:39 < substack> why can't we all just use ssh-style public/private keypairs
05:39 < Slade-> or connect-auth
05:39 < Slade-> substack: requires too much coordination, and of course infrastructure
05:40 < substack> ssh doesn't have any infrastructure
05:40 < substack> the first time you connect someplace, it just caches the key
05:41 < Slade-> you havent thought it through
05:42 < fusiongrokker> hooray! i have auth implemented with pbkdf2
05:42 < Slade-> i walk up to a random desktop and need to log in to get some files..
05:42 < fusiongrokker> and passport
05:42 < Slade-> fusiongrokker: you're using passport? 
05:42 < fusiongrokker> aye
05:42 < Slade-> is it good?
05:42 < fusiongrokker> so far so good!
05:42 < Slade-> i was just trying everyauth.. its not so good
05:42 < Slade-> and i'm about to try passport 
05:43 < fusiongrokker> abstracts storing the logged in user in the session and then getting the user
05:43 < AAA_awright> substack: What if the first time you connect IS to the attacker?
05:43 < fusiongrokker> I think it has cookie support to, which is my next todo
05:43 < AAA_awright> Ideally you should be required to supply the public key before connecting
05:43 < AAA_awright> Or better yet, embedded in DNS
05:43 < Slade-> fusiongrokker: i actually dont want or care about any of that. just need it to auth then promptly forget
05:44 < AAA_awright> substack: Why do you ask?
05:44 < Slade-> AAA_awright: what about 2 sites on the same ip address
05:44 < fusiongrokker> Slade-: should be easy to skip the parts you don't want
05:44 < AAA_awright> Slade-: DNS, not IP address
05:44 < Slade-> AAA_awright: ah you're trusting direct dns, and not reverse dns..
05:44 < AAA_awright> Slade-: E.g. when you connect to "google.com" you get back an AAAA record with IP address for the HTTP server, plus a CRT record with the public key
05:45 < cheeseen> Yo dudes, new here and just about to implement a login system
05:45 < cheeseen> Whats the bare essentials for building one? currently have user input from form which I can validate against pre seeded table in db
05:46 < AAA_awright> cheeseen: :E You arrived at just the right time
05:47 < AAA_awright> cheeseen: Definitely something to spend a LOT of time on and testing, and peer-review
05:47 < AAA_awright> Security really is one of the most important things you can take care to do right. Even if *you* aren't storing any high-value data, people often use passwords that *do*.
05:47 < AAA_awright> Don't invent your own protocols or libraries, use published standards, and get peer review
05:47 < Slade-> AAA_awright: so dns poisoning becomes a bigger issue.
05:47 < AAA_awright> Slade-: That's a seperate issue
05:48 < Slade-> in a way. i tend not to trust dns.. especially if it doesnt reverse
05:48 < AAA_awright> I'm particularly assuming DNSSEC
05:49 < AAA_awright> But point is, if you get the IP and certificate together from a trusted source, then you're guarenteed secure
05:49 < cheeseen> what are the most popular modules for authing atm?
05:50 < AAA_awright> cheeseen: How do you want to authenticate users
05:50 < Slade-> ah
05:50 < AAA_awright> DIsregard popularity, security is #1 priority here
05:51 < AAA_awright> Alright, the question of the day: Should I and how do you upgrade from Socket.io 0.8.3-205-geeaca6d
05:53 < Slade-> heh i started using sockjs instead of socket.io  was ncier
05:53 < Slade-> nicer
05:54 < cloudbender> Some discussion out there RE node web-workers versus using child proecesses
05:54 < AAA_awright> Slade-: Oh? I've been asking for an alternative for a long time, link please?
05:55 < Slade-> https://github.com/sockjs
05:55 < Slade-> its on npm
05:55 < cloudbender> Child processes are core functionality and seem to be preferred in my thinking.
05:55 < Slade-> i prefer that it 'downgrades' instead of upgrades
05:56 < substack> Slade-: also if you like browserify and streams http://github.com/substack/shoe is just a tiny wrapper on top of sockjs to give it a stream api
05:58 < Slade-> substack: i remember seeing that :)
05:58 < AAA_awright> I don't really care except that it does it quickly...
06:00 < AAA_awright> Most Web stuff is already message-based right? As long as I have the guarentee the messages are received in order I have a hard time figuring out what people want streams for.
06:00 < AAA_awright> I mean, streams are really useful and all, but usually at the application level they're abstracted away, so it looks like that ends up converting stream -> message -> stream -> packet and back again
06:01 < AAA_awright> I mean, that's necessary, but to implement message-passing on top of *that*
06:05 < AAA_awright> fusiongrokker: Btw here's one of my implementations for reference http://git.bzfx.net/~aaa/magnode.git/tree/lib/authentication.pbkdf2.js
06:05 < AAA_awright> (That's public domain feel free to shamelessly copy)
06:06 < _arjun> what is better in sockjs compared to Socket.IO?
06:06 < AAA_awright> Note hard-coded values... things should be secure-by-default, except only problem is that "iterations" may need to be raised in the future
06:07 < AAA_awright> _arjun: No API nonsense it looks like
06:08 < AAA_awright> Socket.IO has become an increasingly tangled web of "return this" functions *shudders*
06:09 < arjunbajaj> but does SockJS give you real websockets? or just gives you a "websocket like" thing?
06:09 < AAA_awright> arjunbajaj: Github says "Under the hood SockJS tries to use native WebSockets first."
06:09 < arjunbajaj> that's awesome! :D
06:10 < Slade-> arjunbajaj: its faster than socket.io
06:10 < Slade-> mostly because of that
06:10 < arjunbajaj> i'm using Socket.IO for a project right now, i'll look into SockJS! thanks. :)
06:10 < substack> socket.io has a bunch of framing logic for doing the roomy event emitter thing
06:11 < substack> which adds overhead to every message
06:11 < Slade-> well sockjs has similar.. tho websockets do it
06:12 < substack> sockjs is just a polyfill for websockets
06:12 < substack> socket.io has rooms, event acknowledgement callbacks
06:12 < AAA_awright> EW COFFEESCRIPT
06:12 < substack> lots of features
06:12 < AAA_awright> NO THANKS
06:12 < substack> AAA_awright: I don't care about that.
06:12 < substack> it's a black box that works
06:12 < substack> who cares
06:13 < Slade-> AAA_awright: whats using coffeescript?
06:13 < AAA_awright> Except when it doesn't work because it uses coffeescript
06:13 < AAA_awright> Slade-: Sockjs
06:13 < Slade-> oh, never even looked
06:13 < Slade-> why wouldnt it work?
06:13 < AAA_awright> I just tried... "For additional security (true random numbers) you might want to install rbytes package - SockJS will use it if available" This looks VERY suspicious
06:14 < arjunbajaj> AAA_awright: Why do you hate CoffeeScript?
06:14 < substack> I don't like coffeescript but the point of modules is that it doesn't matter
06:14 < substack> they are little black boxes that work
06:15 < AAA_awright> arjunbajaj: If I wanted to write something that compiles to ECMAScript, I'd write ECMAScript. And at least when I write ECMAScript, it doesn't mess with its semantics
06:15 < AAA_awright> substack: Because as a package maintainer I have to support that
06:15 < AAA_awright> No, thank you
06:15 < Slade-> AAA_awright: why does that look very suspicious
06:16 < AAA_awright> substack: Node.js already has a cryptographically secure RNG, crypto.randomBytes
06:16 < arjunbajaj> AAA_awright: ya, but when it's automatically compiling to JS when you need it, what's the harm?
06:17 < Slade-> AAA_awright: when was it added?
06:17 < AAA_awright> https://github.com/sockjs/sockjs-node/blob/master/src/utils.coffee#L124 So if rbytes is not installed, then you get Math.random
06:17 < AAA_awright> That's... totally not insecure /s
06:18 < Slade-> AAA_awright: when was crypto.randomBytes added
06:19 < AAA_awright> Slade-: The beginning
06:19 < AAA_awright> Crypto is one of the oldest modules in Node, heh
06:20 < Slade-> i wondeer why he'd bother with rbytes then
06:21 < Slade-> i wonder what the point of rbytes is :P
06:21 < AAA_awright> Maybe not, the module is 3 years old https://github.com/akdubya/rbytes
06:23 < penzur> is there a good oauth module?
06:24 < aandy> ugh shoot... what's it called when you "assign or" (which i thought it was called), as in: var herp = derp || 'default'
06:24 < Havvy> aandy: default values?
06:25 < aandy> yes, but that way of shorthand, does it have a name?
06:25 < Slade-> AAA_awright: seems straight forward. i'm guessing that was done for good reason tho
06:25 < penzur> fallback?
06:25 < AAA_awright> Slade-: There's no good reason to do that.
06:25 < AAA_awright> They might think, but they're doing it wrong
06:25 < Havvy> Javascript's default value statement?  I dunno.
06:25 < Slade-> the code behind it is solid
06:25 < AAA_awright> aandy: That's just how the or operator works
06:25 < AAA_awright> I've never heard of a name
06:26 < Slade-> anyhow. feel free to keep using socket.io :)
06:26 < aandy> yeah, same with python for instance, but i guess C doesn't have it
06:26 < AAA_awright> Well right, in C it returns a boolean
06:26 < AAA_awright> ish
06:27 < AAA_awright> I think some implementations might actually optimize that functionallity in, but you're not supposed to rely on it
06:28 < aandy> it's two lines of code instead of one, i'll manage. just wanted to check if it existed :)
06:33 < AAA_awright> Who does socket.io
06:34 < asdf12> all WebSocket onmessage stuff is JSON right? would there ever be a time when it isn't JSON?
06:34 < AAA_awright> I'm getting "No repository URL for package socket.io-parser"
06:36 < WarheadsSE> Any known-good libs for running/monitoring various children, or shall I cook this need from scratch?
06:36 < echo> WarheadsSE: How various are they?
06:36 < WarheadsSE> some shell, some python, might be some compiled programs
06:37 < WarheadsSE> also: I'll have to hook this to a FIFO queue of jobs .. wheee
06:37 < echo> Ah, I've yet to come across anything for -foreign- processes, there's a few for managing multiple node children though.
06:39 < WarheadsSE> Yeah, those I've got sound
06:39 < fusiongrokker> so given that I've got authentication working and can stuff something in the session to indicate logged in / not, what's the cleanest way to specify which routes require logging in? a route middleware?
06:42 < Slade-> asdf12: you can use whatever
06:43 < asdf12> ?
06:43 < Slade-> you dont have to use JSON
06:44 < AAA_awright> uglify-js now depends on source-map
06:44 < AAA_awright> Good job, everyone, just everyone
06:44  * AAA_awright headdesk
06:45 < AAA_awright> This is getting bizarrely stupid
06:45 < asdf12> does WebSocket allow binary sending?
06:45 < asdf12> or is it all string
06:45 < AAA_awright> I just want a simple browser<->server communication library
06:45 < asdf12> oh i see it does
06:45 < asdf12> allows string, arraybuffer, blob
06:47 < WarheadsSE> echo: yup, hence the .. whee.
06:48 < Slade-> asdf12: the protocol itself allows whatever
06:49 < AAA_awright> ... Why... how... is 'redis' a dependency for Socket.io
06:50 < AAA_awright> WHY
06:50 < AAA_awright> I... nvm
06:51 < Slade-> you're trying to hard man :P
06:52 < Slade-> sockjs is what you want
06:53 < WarheadsSE> well, despite it's "dependency" on it, i have no sign of redis in any of my deployments AAA_awright .. and I don't plan on using it for the time being iehter.
06:53 < WarheadsSE> blarg. either
06:54 < substack> AAA_awright: you're dismissing a vastly superior solution for petty reasons :p
06:55 < asdf12> "Aborts the request if it has already been sent."
06:55 < asdf12> how do you abort a request thats already been sent?
06:55 < asdf12> https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#abort()
06:58 < WarheadsSE> chop the socket ASAP ?
06:59 < AAA_awright> substack: Socket.io 0.8 works with two dependencies, I don't don't feel like mucking around with upgrading
07:00 < AAA_awright> Er, socket.io plus one dependency
07:00 < AAA_awright> And possibly none at all?
07:00 < AAA_awright> Also if 0.9 broke the API then it should be called 1.0
07:01 < Havvy> AAA_awright: Before 1.0, you can break the API during point releases.
07:02 < AAA_awright> Havvy: But in no case does that apply to public releases
07:02 < WarheadsSE> its an optional store ...
07:02 < SomeoneWeird> in all cases, it does
07:02 < Havvy> Before 1.0, you shouldn't technically call it a public relese.
07:02 < Havvy> *release
07:02 < AAA_awright> major version 0 isn't free license to break stuff whenever you want
07:03 < AAA_awright> Be responsible, tell people when you break your API, it's not hard
07:03 < SomeoneWeird> of course
07:04 < AAA_awright> The worst offender seems to be Node.js itself
07:05 < AAA_awright> "LOL we'll just keep releasing 'unstable' software and not tell anyone when we break stuff"
07:05 < SomeoneWeird> lols
07:05 < SomeoneWeird> yeh
07:05 < AAA_awright> You gonna fix that eventually, ryah?
07:06 < Havvy> AAA_awright: Sure. When v.1.0.0 is release. The documentation already gives stability information.
07:07 < asdf12> ryan doesn't lead node.js anymore
07:07 < AAA_awright> Havvy: Revision numbers are for the benefit of computers
07:07 < asdf12> you want isaacs
07:07 < AAA_awright> No, I kinda want ryah
07:08 < Havvy> AAA_awright: Simple. if version < 1.0.x.y, each update can have incompatible changes.
07:08 < AAA_awright> That's for rapid development, not public releases
07:08 < Havvy> If version >= 1.0.x.y, each update with incompatible changes gets a version bump.
07:08 < AAA_awright> Otherwise why would anyone release 1.*
07:08 < AAA_awright> Seriously
07:08 < AAA_awright> Why should I ever release version 1 if that's true
07:09 < asdf12> this is pointless
07:09 < AAA_awright> The whole point of version numbering is to inform people, and computers, that software has broken. If anyone is seriously using a library, and you're not informing them of that breakage, it doesn't matter if you're still on 0 or not, you're releasing software wrong
07:10 < AAA_awright> Havvy: So no, major version 0 is not free license to just break stuff at-will
07:11 < fusiongrokker> how do I _optionally_ extend the life of a node/express cookie? I can set the cookie middleware maxAge to whatever I want, but the default there should be null (browser-session cookies) and only set a longer duration when they check the box on the login page... how do I do that when they check the box?
07:11 < asdf12> it's on project by project basis dude
07:11 < Havvy> If you are using a library that isn't past v.1.x.y.z, you need to make sure you don't automatically update to the next version.
07:11 < asdf12> besides if you really think going from 0.6.x to 0.8.x and expecting no breakage...
07:11 < AAA_awright> asdf12: Yes, the option to be a dick to developers is a project-by-project decision
07:12 < asdf12> some projects can move from 0.6.x to 0.8.x in a matter of days, common sense here
07:13 < asdf12> so if you been using node, and you don't pay attention to anything else but releases, not even change logs or release notes
07:13 < AAA_awright> That looks like internal development, and that doesn't impact developers
07:13 < asdf12> the fact it takes so long to move up a minor version is common sense enough to know stuff got changed
07:13 < AAA_awright> But if it is public release, I don't see a problem with releasing version 1 and version 2 in the same week, or even day
07:14 < AAA_awright> Unlike Mozilla, that number *means* something, it means you broke your API
07:14 < AAA_awright> I should say Firefox, specifically
07:45 < AAA_awright> ... I think I'm just going to push HTTP requests to my web browsers
07:46 < AAA_awright> No, really, then they can retreive any data they want, over HTTP, and when data updates, they get the new data sent... by HTTP PUT
07:48 < SomeoneWeird> wuut
07:54 < AAA_awright> It makes sooo much sense
07:54 < AAA_awright> I'm thinking like http://browserver.org/ but that's a tad bit too complex
07:54 < AAA_awright> I don't need an EventEmitter implementation in my web browser
07:55 < AAA_awright> But maybe just HTTP semantics
08:33 < mac_nibblet> Heya peeeps!
08:34 < mac_nibblet> Quick question, has anyone here done any byte stuffing in node.js ?
08:34 < AAA_awright> byte stuffing?
08:35 < mac_nibblet> I have been tasked to write a simple node.js app that communicate with a inverter using the ComLynx protocol 
08:36 < mac_nibblet> http://www.danfoss.com/NR/rdonlyres/18FA1022-2FF1-484A-8460-B6A51BE202BF/0/ComLynx_User_Guide_16_20120817_A7.pdf
08:36 < mac_nibblet> At the end of page 16
08:44  * mac_nibblet thinks i scared AAA_awright away :(
08:45 < AAA_awright> Oh uh
08:45 < AAA_awright> So what's your question?
08:45 < mac_nibblet> i have absolutly no idea how to get started
08:45 < mac_nibblet> im a generally programming in PHP doing highlevel stuff o_0
08:46 < [AD]Turbo> hi there
08:46 < mac_nibblet> so for me this is uncharted area so i need someone to point me towards some good docs
08:48 < asdf12> do you know javascript ?
08:48 < asdf12> if you don't know, thats the first to know
08:48 < mac_nibblet> AAA_awright: the general idea of the app is that we use a serial data to tcp/ip converter that connects to the node.js instance and we log the data to our db
08:48 < mac_nibblet> asdf12: i have done work in Dojo/ExtJS and some crapp jQuery 
08:50 < mac_nibblet> So i know basic JS
08:50 < mac_nibblet> and 7 years of PHP 
08:51 < AAA_awright> mac_nibblet: Pfft, well
08:51 < AAA_awright> mac_nibblet: Have you done any sockets in PHP? it's actually not that dissimilar
08:52 < mac_nibblet> Yeah 
08:52 < AAA_awright> If you've done event loops in PHP and stuff with XMLHTTPRequest you should be right at home
08:52 < AAA_awright> mac_nibblet: http://nodejs.org/docs/latest/api/all.html bookmark this, have fun
08:52 < mac_nibblet> You mean long pulling ?
08:53 < asdf12> take that 7 years of php
08:53 < asdf12> and forget it all
08:53 < asdf12> POOF
08:53 < AAA_awright> mac_nibblet: Not even that, just a request period
08:53 < mac_nibblet> asdf12: rather not :D
08:53 < AAA_awright> mac_nibblet: The concept of working with function closures and such
08:54 < mac_nibblet> Thats simple :P
08:54 < AAA_awright> Just know that variable scopes are only created with a function invocation
08:54 < mac_nibblet> but i have not done an event loop as you would call it 
08:55  * mac_nibblet wonders why ubuntu's repo only contains version 0.6.x of nodejs 
08:55 < AAA_awright> Because Ubuntu is stupid
08:56 < kevireilly> mac_nibblet: http://apptob.org works
08:56 < AAA_awright> I'd suggest going and complaining that they don't stay up-to-date
08:56 < AAA_awright> Like, on anything
08:56 < AAA_awright> Because I get sort of lonely doing that by myself
08:56 < mac_nibblet> eh :P i have already compiled it :D but thanks
08:57 < AAA_awright> "If it was really a problem then more people would be supporting you" No, most people just don't enjoy being verbally assulted for pointing out your release cycle sucks, thanks
08:58 < mac_nibblet> hahah
09:05 < asdf12> read the wiki theres an official unofficial repo
09:06 < asdf12> https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
09:07 < mac_nibblet> i just compiled it myself :P
09:08 < extrawurst> 230705
09:09 < asdf12> github needs a way to communicate with people
09:09 < asdf12> like sending PMs
09:13 < asdf12> if you're part of an organization, does it give you something to communicate?
09:13 < mac_nibblet> asdf12: not that im aware of
09:20 < dominiques> hi everyone
09:21 < dominiques> Does anyone know how I can create a variable that survives a restart with forever?
09:21 < asdf12> yea you save it to a data store
09:23 < SomeoneWeird> env 
09:24 < asdf12> or that too
09:25 < dominiques> SomeoneWeird: env? Can you explain a little further?
09:25 < SomeoneWeird> use environment variables
09:31 < dominiques> SomeoneWeird: ok, thanks...
09:32 < dominiques> sounds good, i will use env
09:32 < dominiques> thanks!
10:12  * mac_nibblet is 1/3 through the docs
10:13 < qwebirc01802> hi guys, I have a slightly weird issue with node/socket.io ... my app runs fine for a few days then for some reason just makes the CPU hit 100% for the node process - as soon as it's restarted it's fine again
10:13 < qwebirc01802> http://pastebin.com/dWXHvZXm
10:13 < `3rdEden> qwebirc01802: how much requests per second was that app handling before it hit 100% cpu?
10:13 < qwebirc01802> 5-10
10:14 < qwebirc01802> it's not under heavy load or anythign
10:14 < `3rdEden> qwebirc01802: you guessing or is that an actual metric?
10:14 < `3rdEden> have you checked your network panel / traffic?
10:14 < qwebirc01802> actual metric
10:15 < qwebirc01802> does anything jump out in the code that would make it spike every few days
10:15 < `3rdEden> qwebirc01802: the only thing I can come up with are random DOS attacks
10:15 < qwebirc01802> it's deifnatley not that
10:15 < qwebirc01802> definately *
10:16 < `3rdEden> http://cl.ly/image/3C2T0R3E3K3t <-- i have seen that happen before
10:16 < asdf12> cpu is half the story
10:16 < qwebirc01802> would the console.log() make it happen - say if it's not flushed
10:16 < asdf12> check memory usage when it spikes
10:16 < asdf12> in fact monitor memory usage every day
10:17 < qwebirc01802> 128gigs of ram in the server
10:17 < qwebirc01802> does node have a limit before it chokes?
10:18 < `3rdEden> 1.2 gb by default
10:18 < `3rdEden> unless you set manually bump that limit
10:18 < kevireilly> qwebirc01802: not the issue, but you may want to put var before store = JSON.parse(data); and you may want to if (store.channel) before defining var _chan
10:19 < qwebirc01802> thanks
10:24 < kevireilly> qwebirc01802: also, just curious, why request.addListener versus request.on?
10:24 < qwebirc01802> I don't know the difference
10:25 < kevireilly> ah it is the same thing, just an alias.
10:26 < kevireilly> i didn't know either, daz why i asked haha
10:37 < mac_nibblet> Can someone explain the difference between buffer.writeLE/writeBE ?
10:37 < Kakera> does libuv still use libev?
10:40 < Kakera> https://github.com/joyent/libuv/issues/485 never mind
10:44 < mks> @mac_nibblet: it is about endianness. When you are writing more than one byte, it matters.
10:48 < mks> <Buffer ff 00> vs <Buffer 00 ff> for instance.
10:49  * mac_nibblet googles endians o_o
11:32 < finishingmove> what font are you guys using?
11:32 < finishingmove> preferably monospaced
11:32 < finishingmove> -like
11:33 < Havvy> Adobe put out an open source one last year.
11:33 < finishingmove> i'm just looking for something that looks clean in the IDE
11:35 < pats_Toms> I am using Source Code PRo
11:36 < Segrel> I'm using inconsolata
11:38 < finishingmove> are they monospace?
11:39 < Segrel> yes
11:44 < finishingmove> Segrel, thanks I will check out that one. looks good on paper but i need to test it
11:45 < mks_> @finishingmove: EnvyCodeR
11:46 < finishingmove> Inconsolata looks a bit 'fat' for my taste :\
11:46 < finishingmove> let's check the others
11:50 < trodrigues> Menlo is pretty cool
11:51 < trodrigues> I think it's the sublime text default
12:06 < finishingmove> uhm, i'm sticking with Monospaced
12:06 < finishingmove> nothing i tried is better
12:29 < Naked> hmmh, when I start the node repl, it uses 100% cpu immediately
12:29 < Naked> anybody got a guess what's wrong?
12:32 < mac_nibblet> im a total cookie at node but you could try an ptrace the process to se what it's doing
12:32 < mac_nibblet> Naked: 
12:34 < Naked> mac_nibblet: I tried strace, it is looping on gettime
12:35 < Naked> could be something in libuv, but I'm looking for pointers pointers
12:36 < Naked> seems to use 100% cpu even when running a script that only has one setTimeout
12:45 < nerdema> hi all, someone can help me with 1 example of fs.writeSync?
13:06 < cloudbender> Good Morning
13:06 < cloudbender> I need to share data between processes
13:08 < cloudbender> Is there a way to reference a global data object from to two different processes ?
13:08 < cloudbender> << is thinking 'no'
13:08 < Havvy> There is no data sharing between processes built into Node.
13:09 < blackhaze> jesus, its been years since i've been on irc 
13:13 < cloudbender> I see there are fibers, and threads-a-gogo, but those are not what I want.  Fibers don't help much, and the Pyramid is avoided easily enough with careful coding.
13:15 < trodrigues> Havvy: not exactly. you can use the cluster module to create a master process and use it as a way to communicate between processes
13:15 < trodrigues> or use child processes, whatever fits your case
13:15 < trodrigues> http://nodejs.org/api/cluster.html
13:15 < trodrigues> http://nodejs.org/api/child_process.html
13:15 < cloudbender> Anyone ever have luck streaming 100 megabytes through an ipc channel ?
13:15 < Havvy> trodrigues: But you aren't actually sharing the internal JavaScript objects, are you?
13:16 < trodrigues> Havvy: no, but even in classic IPC models that's just one way of doing IPC
13:17 < bcave> any users of handlebars precompilation around?
13:18 < cloudbender> so I need the main process to stick to connection management and message routing, and I need the childprocess to maintain the database and serve requests for records and updates.
13:18 <@Nexxy> cloudbender, child_process.spawn 
13:18 <@Nexxy> or cluster
13:19 < cloudbender> Nexxy why would spawn work better than fork ?
13:19 <@Nexxy> oh sorry, fork
13:19 <@Nexxy> yep
13:19 < cloudbender> So, to be clear, spawn is better than fork ?
13:19 < trodrigues> bcave: *waves*
13:20 <@Nexxy> cloudbender, no; fork is what will let you use IPC and share fds between processes
13:20 < cloudbender> fd=function definition ?
13:21 < trodrigues> file descriptors
13:21 < cloudbender> file descriptors
13:22 < george_> hello
13:22 < mac_nibblet> Anyone here does fcs calculations ?
13:22 < mac_nibblet> s/does/done
13:23 < cloudbender> is there a maximum object size for IPC ?
13:23 < bcave> trodrigues: have you ever had an issue with HTML not showing up in your precompiled templates?
13:23 < cloudbender> or a realistic maximum ?
13:23 < blackhaze> cloudbender what are you trying to build?
13:24 < cloudbender> a database engine
13:24 <@Nexxy> cloudbender, I've overheard people mention a 1GB limit
13:24 < trodrigues> bcave: mmm...not exactly. are you sure there are no compilation errors?
13:24 <@Nexxy> chances are you won't need to get anywhere near that
13:24 < cloudbender> Oh I don;t need anywhare near that
13:24 <@Nexxy> yeah lol
13:24 < blackhaze> cloudbender just use an existing one? ;-)
13:24 < trodrigues> Nexxy: I think that was a limit on V8 and it was lifted at some point, but I'm not sure about that
13:24 < cloudbender> I figure a few hundred records at a pop
13:24 < trodrigues> (about it being lifted, I'm sure it was a limit on V8)
13:24 < cloudbender> worst case
13:24 <@Nexxy> trodrigues, yeah the memory limit?
13:25 < cloudbender> no blackhaze an existing database won't work.
13:25 < bcave> trodrigues: none at all. it precompiles without issue. I precompile in 2 ways: 1, within node.js by calling this: var template = Handlebars.precompile(html_source); 
13:25 < bcave> and then writing to a file. 
13:25 < trodrigues> https://code.google.com/p/v8/issues/detail?id=847
13:25 < bcave> and secondly by calling handlebars from cli directly on an html file, with the -f parameter
13:26 < cloudbender> I'll have a child process as a view server to the connection processes.
13:26 < bcave> and both times I am missing HTML code from within the template
13:26 < cloudbender> the child process functionality in the core will me fine.
13:27 < cloudbender> *be fine
13:27 < trodrigues> bcave: weird. I used to do it both ways as well (1st way for development mode and 2nd for deployment) and never had such issues
13:27 < bcave> i'm wondering if it has something to do with the complexity of the html...
13:27 < trodrigues> bcave: I'd say, try and remove the affected html and put it back bit by bit and see at what point it breaks
13:27 < bcave> I've opened an issue https://github.com/wycats/handlebars.js/issues/452
13:28 < trodrigues> maybe handlebars is just ignoring some stuff and not highlighting it as an error
13:28 < bcave> the funny thing is that the precompilation runs, and always uses very similar alternate HTML
13:28 < cloudbender> I'll have the connection processes send thier updates and inserts to the database child process and be queued there.
13:29 < bcave> if you look at that bug that I filed, the first "if" and 2nd "if" are almost identical except for the 2 x empty td's and the HTML comments. the precompiled template only generates 1 x 
13:29 < blackhaze> cloudbender seems the limit is ~1.4G on 64bit systems, which seems rather lame
13:29 < cloudbender> It works out becuase the engine process can police the client messages for nonsense
13:29 < bcave> function programXX() {} with the first <td class="description"> and skips the 2nd one.
13:30 < trodrigues> bcave: yeah, the if shouldn't be a problem because that's evaluated at runtime
13:30 < cloudbender> a 1 gigabyte message would be bad planning.
13:30 < trodrigues> it should still be in the compiled code
13:30 < bcave> yeah, true
13:30 < bcave> which leads me to believe there may be some heuristic that reduces code repetition
13:30 < trodrigues> might be a possibility, yes
13:31 < bcave> and precompilation then evaluates  both conditions as the same 
13:31 < trodrigues> mmm...I don't think it should act on conditions like that
13:31 < trodrigues> does this still happen if you remove the comments?
13:31 < trodrigues> I don't think handlebars should have any issues with comments, but who knows
13:32 < trodrigues> there's a few behaviours on handlebars that are not always well documented or obvious so I wouldn't be surprised
13:32 < bcave> well we picked up the issue first. I added the comments in afterwards to help find if the snippets were being included
13:32 < trodrigues> oh ok
13:32 < bcave> i figured. may have to try dig into the handlebars code and try figure out what it's doing
13:34 <@Nexxy> and they say templating is an antipattern!
13:34 < bcave> yeah Nexxy 
13:35 < bcave> i bet this wouldn't be happening if the code was so similar though. i blame the web devs for using copy and paste. time to add CPD into the CI
13:37 < trodrigues> bcave: just tell them to use partials
13:37 < OliverJAsh> if I want to use the latest changes in a git repository that is registered in npm but hasn't got a tag applied to the new changes… how can i reference that in my package.json?
13:37 < trodrigues> I'm always busting people's heads to use partials as much as possible
13:37 < trodrigues> nobody gives a fuck.
13:38 < Havvy> Who says templating is an antipattern?
13:38 < trodrigues> bcave: but again, try removing things around the HTML (and in that HTML) until it starts working. at least then you know exactly what causes the problem
13:38 < Ancien> hi
13:39 <@Nexxy> Havvy, the indefinite they
13:39 <@Nexxy> (e.g. me)
13:39 < finishingmove> what do you guys think: light themes or dark themes for IDE/editor?
13:40 < finishingmove> personally, i moved away from light themes a while ago, but i'm still trying to find the perfect dark one
13:40 < Havvy> finishingmove: Aestetics are up to each person. ;)
13:40 < finishingmove> white backgrounds just poke my eyes out after a few hours
13:40 < trodrigues> finishingmove: have you tried Twilight? been my favorite since I used textmate for a while
13:40 < _ior> dark background are superior for less eyestrain and headaches
13:40 < Ancien> i have a problem withe my app when i close my browser the event disconnet doesn't fire with socket.io, can you help me ? I did some research but nothing about that
13:40 < finishingmove> Havvy but it's more than just aesthetics if eye-strain is involved
13:41 < trodrigues> dark backgrounds do have one problem: if you have a glossy screen and need to work in places with lots of light, dark backgrounds are crap
13:41 < _ior> glossy screens are some marketing asshole's way of getting real users to pay more for matte screens that used to be the only option
13:42 < finishingmove> i agree with you guys about the screens
13:42 < trodrigues> _ior: if that was true I'd have a matte screen on my macbook air :p
13:42 <@Nexxy> wat!
13:42 < sdeframond> Hi
13:42 < finishingmove> everything went glossy and 16:9 because most users watnt to watch movies on their PC
13:42 < bcave> yeah, thanks trodrigues, am going through now. last question - does precompilation detect valid conditionals? will it moan if there's an unmatched {{# if}} or {{/if}}  for exmaple?
13:42 < finishingmove> and both of those are very bad for coding
13:42 <@Nexxy> am I the only one that finds glossy screens less distracting in high light environments?
13:42 < sdeframond> is it normal if the nodejs executable is called just `js` on ubuntu?
13:43 < trodrigues> bcave: it should. that should be a compilation error.
13:43 < _ior> nexxy, yes. :)
13:43 < zomg> Nexxy: I thought everyone found glossy screens better... the shiny ones are fucking annoying :P
13:43 < finishingmove> well Nexxy if you work outdoors then i guess glossy is the only choice
13:43 <@Nexxy> the gloss keeps the glare at a separate focal length
13:43 <@Nexxy> so you can still see the text just fine
13:43 < trodrigues> zomg: isn't gloss == shiny?
13:43 < zomg> err
13:43 <@Nexxy> whereas matte screens just end up with this diffused blob of white all over the screen
13:43 < finishingmove> yea glossy is shiny
13:43 < zomg> yeah I'm probably thinking of matte
13:44 < trodrigues> zomg: hah
13:44 < zomg> the screens like in macbooks are pretty annoying in my opinion
13:44 < trodrigues> Nexxy: that's what happens in glossy screens
13:44 < zomg> I can always see myself from it when I have something dark on it..
13:44 <@isaacbw> I guess glossy would be fine if you got the angle right
13:44 <@Nexxy> trodrigues, weird
13:44 < trodrigues> hey, I sometimes use it as a mirror (true story)
13:44 < zomg> trodrigues: exactly...
13:44 < zomg> :D
13:45  * trodrigues is suddenly reminded that tonight there's a new EP of Black Mirror
13:45 <@isaacbw> :O
13:48 <@Nexxy> trodrigues, EP you got me excited like it was a new hip album I've never heard of
13:49 < trodrigues> hah. should've written ep.
13:49 < trodrigues> as in, episode
13:49 <@Nexxy> :P
13:49 < trodrigues> pretty good show if you haven't watched it
13:49 < trodrigues> well...the last episode was kinda crap
13:50 <@Nexxy> trodrigues, interesting
13:51 <@Nexxy> I don't think I can get any channel 4 programming here though :(
13:51 < trodrigues> mmm...they have some stuff on their on demand service open to other countries
13:51 < trodrigues> not sure about that one though
13:51 <@Nexxy> ._.
13:52 < trodrigues> http://www.channel4.com/programmes/4od
13:52 < trodrigues> there's always the swedish store
13:52 <@Nexxy> wat
13:55 < trodrigues> ze pirate bay
13:55 < OliverJAsh> join('.', 'user', 'boot') gives me "user/boot" when i need "./user/boot"
13:56 <@Nexxy> trodrigues, oh right! haha
13:56 <@Nexxy> OliverJAsh, what is join?
13:56 < OliverJAsh> require('path').jon
13:56 < OliverJAsh> join*
13:56 < OliverJAsh> sorry
13:56 < OliverJAsh> Nexxy: 
13:56 <@Nexxy> you probably want path.resolve
13:57 <@Nexxy> unless you specifically want relative 
13:58 < mac_nibblet> Anyone here that has worked/written a fcs calculations implementation ?
13:58 < Sly> Nexxy: <3
13:58 <@Nexxy> Sly, <3
13:59 < substack> pow https://github.com/substack/shux
13:59 < substack> reinventing gnu screen, except far fewer features
14:00 <@Nexxy> \o/
14:00 < substack> and as a library that you can pipe through any kind of stream
14:00 < SomeoneWeird> substack, neat
14:01 < substack> now FOR MY NEXT TRICK
14:02 <@Nexxy> ssh over websocks?
14:02 < substack> haha well basically already have that
14:02 < substack> at least with a few more crypto-browserify methods
14:02 <@Nexxy> I swear you're writing a virus toolkit!
14:02 < substack> YES
14:02 <@Nexxy> I approve!
14:03 < SomeoneWeird> lmao
14:03 < substack> Nexxy: it's because botnet operators have the best network management topology
14:03 < trodrigues> I will hold substack entirely responsible the day skynet comes to life
14:03 < SomeoneWeird> substack, now write proper pgp bindings
14:03 < SomeoneWeird> will luv u 4eva
14:03 <@Nexxy> substack, lol
14:03 < substack> SomeoneWeird: well I made https://github.com/substack/secure-peer
14:04 < SomeoneWeird> yeah but rsa!=pgp
14:04 < substack> SomeoneWeird: and once https://github.com/dominictarr/crypto-browserify gets diffie-hellman and RC4 functionality it should just work™ in the browser
14:04 < SomeoneWeird> still, it's nice
14:04 < SomeoneWeird> lol
14:07 < mscdex> java will be the death of me
14:08 < strange_> hola! what are "node-people" using to daemonize and keep apps alive? i've seen a few ("forever" et al) - which one is the most popular?
14:08 < mscdex> is that a new module? node-people?
14:09  * SomeoneWeird steels name
14:11  * Nexxy steals grammar
14:20 < cloudbender> So, becuase my database is comprised of simple objects, I can wrap the simple object in a message object and IPC it to the child process.
14:21 < cloudbender> seems to work nicely
14:21 < cloudbender> and I didn;t have to JSON.stringify
14:22 < cloudbender> so now let's time it when transferring 100,000 records
14:25 < MI6> joyent/node: Ben Noordhuis master * 4231dab : crypto: fix base64 padding regression  Commit 9901b69c introduces a small - http://git.io/HmZ-fQ
14:40 < cloudbender> oops
14:41 < Kakera> I'm probably missing something obvious here, but how do I compile a program that uses libuv?
14:41 < Kakera> I tried "gcc -I../libuv/include -L../libuv -luv test.c"
14:41 < Kakera> and I get test.c:(.text+0x9): undefined reference to `uv_loop_new'
14:43 < bnoordhuis> Kakera: -L and -l should come after test.c
14:43 < bnoordhuis> it's because of -Wl,--as-needed, i.e. only link what's referenced up til now
14:44 < Kakera> ooh
14:45 < xastey> Anyone using faye with websocket transport configured.. getting high memory usage
14:45 < Kakera> now I'm getting lots of undefined references to pthread_*
14:45 < bnoordhuis> Kakera: add -pthread
14:45 < bnoordhuis> you may need -lm and -lrt too
14:46 < Kakera> yeah it compiles with -pthread and -lrt
14:47 < Kakera> shouldn't that be documented somewhere?
14:47 < bnoordhuis> well, if you use gyp, all that is taken care of
14:48 < Kakera> is there a sample/template gyp file for a project using libuv?
14:51 < bnoordhuis> Kakera: many, but the canonical example is node's
14:53 < cloudbender> well, it's a bit slow.  100,000 big record objects moved in 7500ms
14:53 < Kakera> hmm, quite long
14:53 < Kakera> I'll try to figure out the bare minimum
14:55 < bnoordhuis> Kakera: bare minimum is {'targets':[{'target_name':'foo','type':'executable','sources':['main.c'],'dependencies':['deps/uv/uv.gyp:libuv']}]}
14:56 < bnoordhuis> then `gyp -f make build.gyp && make`, done
14:56 < Kakera> oh, thanks
14:56 < bnoordhuis> or -f xcode if you swing that way
14:56 < bnoordhuis> there's also support for msvc, ninja, scons, etc.
14:56 < Kakera> exactly what I was looking for
14:56 < dmcaodha> Hi, I am relatively new to Node,  I have a question:
14:56 < dmcaodha> I have a read stream that emits data events of type buffer. How do I use this to track the progress of the stream?
14:57 < bnoordhuis> dmcaodha: define 'progress'?
14:58 < dmcaodha> it is piping a http request to couchdb which contains a file. I want to track the progress of the operation, probably as a percentage
14:59 < cloudbender> so I'm moving 8000 records per second on my crappy laptop.
14:59 < cloudbender> but it's a clean move
15:00 < cloudbender> and that's using ipc
15:00 < bnoordhuis> dmcaodha: if you know the file size, just sum buffer.length in your data event listener
15:00 < dmcaodha> cool, I'll gve it a try. Thanks
15:01 < cloudbender> I'm object-wrapping each record and sending as a single message.
15:01 < Kakera> now to figure out how to install gyp...
15:02 < cloudbender> everything core and native
15:02 < bnoordhuis> Kakera: git clone https://git.chromium.org/external/gyp.git
15:05 < Kakera> bnoordhuis, then sudo setup.py I assume?
15:06 < MI6> joyent/libuv: Marc Schlaich master * ce1a266 : build: fix misleading vcbuild.bat error message - http://git.io/ffr2hA
15:08 < bnoordhuis> Kakera: optionally. gyp runs fine from the checkout dir
15:11 < stiang> I have a working request handler for a http server, which stops working (it looks like the request never emits 'end') when I wrap the handler code in a callback for a mongodb query. Isn’t that supposed to work? How else am I supposed to look up stuff in the db when I receive a request?
15:19 < hallas> stiang probably because the callback is never executed
15:21 < cloudbender> ok.  sending each (of 100,000) records 1 per message took 7500ms, and sending the entire database in 1 message took 850ms
15:22 < cloudbender> it takes 800ms to generate the database, to sending it is not that much slower.
15:22 < cloudbender> this can work says me
15:26 < Kakera> gyp: Could not automatically locate src directory.  This isa temporary Chromium feature that will be removed.  Use--depth as a workaround.
15:26 < Kakera> what
15:27 < fruitFly> Should I install node from source or linux binaries?
15:27 < wltsmrz> Use the source
15:27 < merpnderp> fruitFly: if you are installing node from source on a micro ec2 instance, be prepared for the machine to be barely responsive for a few hours.
15:28 < merpnderp> I really need to move my hosted node sites to joyent. 
15:28 < fruitFly> merpnderp: micro ec2? I'm a noob and am just starting to learn node and linux... I havn't even installed anything from a .tgz yet
15:29 < merpnderp> fruitFly: Then ignore what I said and have fun. Whatever node might be, it is definitely fun.
15:31 < merpnderp> fruitFly: An interesting note for the fanboys, Node is something like 25-50 times faster than the big three interpreted languages (Perl, Python, and PHP). It's nearly as fast as Mono. It is FAST
15:31 < fruitFly> so a tar is just a file containing other files and the .gz is that compressed? I don't think I understand compression... is any info lost or is it just condensed for transport?
15:31 < fruitFly> merpnderp: mono?
15:31 < fruitFly> merpnderp: I'm in love with node from what I've seen
15:31 < bradleymeck> fruitFly: gzip is lossless most things outside of audio/visual are lossless
15:32 < bradleymeck> so gzip zip 7z lzw etc are all lossless
15:32 < fruitFly> bradleymeck: merpnderp I'm a linux noob.. r u guys using linux now :)?... when I get the tar.gz.... wut do I do?
15:33 < bradleymeck> `man tar` will get you the manual page on tar
15:33 < fruitFly> bradleymeck: merpnderp I don't even know how to check if I have all the stuff necessary to run node... even though I think I do.
15:33 < wltsmrz> tar xvzf node.tar.gz
15:34 < fruitFly> wltsmrz: is that it?
15:34 < wltsmrz> make && make install
15:34 < wltsmrz> * ./configure first
15:35 < fruitFly> wlt bradleymeck  merpnderp is this sufficient to get node running? https://github.com/joyent/node/wiki/Installation
15:36 < context> fruitfly: what os
15:36 < fruitFly> context: linux mint 14
15:36 < wltsmrz> Should be fine
15:36 < context> http://apptob.org/
15:37 < context> err oh
15:37 < context> http://oodavid.tumblr.com/post/15090798307/how-to-install-node-js-on-linux
15:37 < context> :/ ignore that
15:37 < Kakera> well, I specified --depth=.
15:37 < context> that first one should work
15:37 < Kakera> now I get gyp: Undefined variable library in libuv/uv.gyp while loading dependencies of build.gyp while trying to load build.gyp
15:37 < context> didnt realize mint was apt based
15:38 < fruitFly> context: Thanks I will try it
15:38 < fruitFly> wltsmrz: Thanks!
15:40 < Kakera> https://github.com/joyent/libuv/issues/609 aha
15:41 < Kakera> maybe this should be mentioned in the readme
15:41 < fruitFly> context: the update isn't working... it asks if I'm root.. which Ibelieve I am
15:41 < fruitFly> I have 1 user on this and there is a $ after the prompt
15:42 < fruitFly> context: "could not open lock file"..."unable to lock directory"...
15:43 < quizme> hi
15:44 < MI6> joyent/libuv: bnoordhuis created branch uv_stop - http://git.io/JEUbYQ
15:44 < quizme> i'm trying to connect to my node, hello world server on my windows box from Mac using curl, but I keep getting curl: (7) couldn't connect to host
15:44 < MI6> joyent/node: isaacs master * 3404608 : stream: Do not switch to objectMode implicitly  Only handle objects if ex (+1 more commits) - http://git.io/vgE-Uw
15:47 < quizme> jruby running rails apps are accessible on 8081
15:48 < quizme> but node.js is not working on that port
15:49 < carpii> firewall?
15:49 < bnoordhuis> quizme: is that a question or a statement?
15:49 < carpii> is node even running ?
15:51 < merpnderp> fruitFly: Did you get node working? It's easy. Download the tar.gz source. cd to the downloads directory. Type 'tar -zxvf node.tar.gz' (or whatever the filename is). cd into the node direction. type './confugre'. Then type 'sudo make install' and if it prompts for your password, type that in.
15:52 < quizme> bnoordhuis statement i guess
15:52 < quizme> carpii why would the firewall block node.js but not jruby apps?
15:53 < carpii> because node must be on a different port?
15:54 < quizme> hmm
16:00 < phrearch> hey
16:00 < phrearch> does anyone know if there is a headless browser out there that supports websockets?
16:00 < phrearch> and has a nodejs api? :-)
16:00 < phrearch> basically a headless v8 browser 
16:00 < phrearch> ehm, well chrome
16:00 < phrearch> whatever :)
16:01 < phrearch> i want to make an experimental seo version of a websocket site
16:02 < antonio`> yo
16:02 < MI6> joyent/libuv: Ben Noordhuis uv_stop * 666ebec : unix: make uv_stop work when embedded  * Make uv_stop() work when libuv i - http://git.io/feNd3Q
16:03 < merpnderp> phrearch: you mean like selenium?
16:03 < phrearch> merpnderp: yea like that, or phantomjs
16:03 < bnoordhuis> antonio`: or phantomjs?
16:03 < phrearch> checking selenium
16:03 < bnoordhuis> ah, preempted
16:03 < phrearch> idea is that the app serves a rendered html output to google bots
16:03 < bnoordhuis> wrong nick too :/
16:04  * bnoordhuis goes back to coding
16:04 < phrearch> bnoordhuis, thanks for the tip :)
16:05 < phrearch> not sure how well plain webkit websocket support is nowadays
16:06 < merpnderp> socket.io degreades gracefully 
16:06 < phrearch> hm, its meant for the serverside only, to allow seo on a SPA
16:07 < phrearch> like detect a google-bot, render the actual content for the bot, and return the result. not sure if thats going to fly, but worth the try
16:07 < merpnderp> phrearch: so you want to render your site automagically to an html file.....
16:07 < phrearch> merpnderp: yea, for bots that are unable to process js
16:07 < phrearch> got the idea from http://backbonetutorials.com/seo-for-single-page-apps/
16:07 < merpnderp> phrearch: Interesting problem. I'd start with selenium. 
16:07 < phrearch> ok, ill give selenium a try. thanks
16:08 < quizme> my ip address changed…..
16:12 < frosks> Super simple question: I'm writing mocha tests. Should I do something along the lines of 'system("./program");' to to run my program in the tests or am I missing something? If true, what's the way to run shell commands from inside node (like ruby's `system`)?
16:15 < Kakera> for some reason Windows console doesn't recognize "gyp" as a command
16:16 < Kakera> even though it sees other stuff in Python27\Scripts
16:16 < Kakera> probably because it's just "gyp" without an extension
16:16 < bnoordhuis> Kakera: python gyp <args> should work
16:17 < bnoordhuis> or \path\to\python
16:17 < mac_nibblet> Random question what IDE/Editor do you guys use?
16:17 < bnoordhuis> vim
16:17 < merpnderp> VIM foreva!
16:17 < carpii> sublime / bbedit
16:18 < pats_Toms> sublime 2
16:18 < Kakera> bnoordhuis, I mean when outside of the Scripts directory
16:18 < frosks> Most use vim/emacs, some use prop editors (subl, bbedit), some use wierd stuff (notepad++) and a few use ide's
16:18 < g0z> vim
16:18 < Kakera> and yes, Python27\Scripts is on PATH
16:19 <@isaacbw> "prop" editors?
16:19 < Kakera> I renamed gyp into gyp.py and now typing "gyp.py" anywhere works, but I get "AttributeError: 'module' object has no attribute 'main'"
16:19 < bnoordhuis> Kakera: python27 \path\to\gyp\gyp <args> then
16:19 < Kakera> too long :P
16:19 < merpnderp> frosks: What is a "prop" editor?
16:19 < merpnderp> Supports autocomplete?
16:20 < frosks> merpnderp: proprietary, I just have a hard time spelling that word :(
16:20 < merpnderp> frosks: hah, me too
16:20 <@isaacbw> oh, I thought you meant 'proper' and I was about to go on a rant
16:20 < merpnderp> for a multitude of reasons.
16:20 <@isaacbw> emacs 4 lyfe
16:22 < frosks> who gives a shit about the conflicts in Mali, Iraq & Sudan; we have editor wars to fight! 
16:22 < frosks> "death to the vimfidels!"
16:22 < mac_nibblet> PHPStorm / vim o.0
16:22 < Iszak> I think everyone is using sublime these days.
16:23 < Iszak> which is a VIMtage mode
16:23 < mac_nibblet> im a dual weilder
16:23 < mac_nibblet> wielder*
16:24 < systemovich> netbeans
16:24 <@isaacbw> sublime does seem to be the popular answer to the editor question
16:25 < frosks> As nice as free software is, sublime sure feels snappy. Can't leave vim though
16:25 <@isaacbw> I know a lot of people like it, but autocomplete just feels wrong to me in javascript
16:26 <@isaacbw> java, c#, even c++, sure
16:26 < carpii> sublime is nice for single files but i cant seem to get into habit of using it on projects. doesnt quite gel for me :/ 
16:26 <@isaacbw> but not javascript
16:27 < merpnderp> I've never seen anyone get autocomplete correct in javascript.
16:27 < merpnderp> I tried webstorm but hated seeing the entire prototype tree in the dropdown.
16:28 < mac_nibblet> Someone want to review my first day of nodejs work ? https://gist.github.com/macnibblet/9f521ff79d5bc36a66e4
16:28 < Kakera> does gyp even work with Python 2.7?
16:29 <@isaacbw> it should Kakera 
16:30 < Nikentic> oh I am so glad that I found NodeJS :D
16:31 < Nikentic> it's so intriguing
16:31 < Kakera> >>> dir(gyp)
16:31 < Kakera> ['__builtins__', '__doc__', '__file__', '__name__', '__package__', 'gyp', 'sys']
16:31 < purr> Kakera: ReferenceError: gyp is not defined
16:31 < Kakera> I don't see main here
16:31 < Kakera> fine on Linux
16:33 < pats_Toms> it´s bot?
16:33 < pats_Toms> and I can exec code with >>> ?
16:33 < pats_Toms> >>> console.log(´random text´);
16:33 < purr> pats_Toms: SyntaxError: Unexpected token ILLEGAL
16:36 < fruitFly> how do i check what app is listening on a certain port win 7?
16:39 < Kakera> interesting
16:39 < Kakera> if I rename "gyp" into "gyp.py", it compiles it into gyp.pyc
16:40 < Kakera> this causes import gyp to import the gyp.pyc instead of the actual library
16:41 < Kakera> but if I leave it as "gyp", then it's not available on path
16:41 < Kakera> what should I do
16:42 <@isaacbw> add it to path?
16:42 < Kakera> files without extensions are not visible on path
16:43 < Kakera> http://code.google.com/p/gyp/issues/detail?id=170 oh look
16:43 < fruitFly>  my vnc server is saying another application is running on port 5900 (the one the server is trying to use)... but I don't see any application using that port in the firewall :S
16:44 < garciawebdev> hi, can someone help me with this NPM error?
16:44 < carpii> fruitFly, netstat -a
16:45 < garciawebdev> http://pastebin.com/zpzvqnLm
16:45 < Kakera> adding gyp.bat fixed the problem
16:45 <@isaacbw> garciawebdev: you've some something weird with user permissions
16:45 < Kakera> I wonder how this issue has been open for more that 2 years
16:45 < garciawebdev> i was doing "npm install" on a project
16:45 < Kakera> it's such a trivial fix
16:46 < garciawebdev> isaacbw, as far as i've been using it, i don't need root/special permissions to do "npm install" into a project
16:47 < Kakera> garciawebdev, you're not using -g?
16:47 < garciawebdev> Kakera nope
16:47 < Kakera> did you use npm link before?
16:48 < rodyhaddad> does anyone here has any experience with CasperJS?
16:48 < garciawebdev> kakera hmm, i believe i didn't
16:48 < Kakera> but you could just delete that directory yoursel
16:48 < garciawebdev> Kakera i don't know why it tries to delete on that location (???)
16:49 < Kakera> I don't either
16:49 < Kakera> but it might help
16:50 < carpii> i have an array indexed by strings, whats the best way to remove an item?  Im using delete array[uername] at the moment, but apparently this just sets it to undefined, and doesnt actually shorten the array length
16:50 < carpii> and .splice() seems to take only integer indices
16:51 < garciawebdev> Kakera if i delete everything inside of [HOME]/.npm/ i'll loose all global modules, right?
16:51 < Kakera> maybe
16:52 <@isaacbw> no
16:52 <@isaacbw> global modules are somewhere else
16:53 < mscdex> node.js rules!
16:54 <@isaacbw> woo
16:54 < phrearch> anyone knows how to grab the html content of a page with node-phantom/phantomjs?
16:54 < phrearch> http://paste.kde.org/681032/
16:54 < garciawebdev> i have to delete by hand each dependency this module tries to install...
16:54 < garciawebdev> :S
16:55 <@isaacbw> you've done something weird with permissions
16:55 <@isaacbw> or something weird was done for you
16:55 <@isaacbw> just delete .npm
16:55 <@isaacbw> see what happens
16:55 < garciawebdev> let's see
16:56 <@isaacbw> it won't harm anything to delete it
16:56 < garciawebdev> ok
16:56 < garciawebdev> this is strange, it has been working ok until now
16:57 < garciawebdev> isaacbw yep! worked fine deleting ~/.npm/
16:58 < garciawebdev> oops
16:58 < garciawebdev> again
16:58 < garciawebdev> the problem is when the package is already on that directory :S
17:00 < Laddi> I have a question (might be silly):  Has anyone implemented a way for me to do a request to a server that fetches a file from another server and then pipes it down to the original caller as an attachment?
17:00 < Laddi> Sort of a download server, if you will
17:00 < Laddi> I'm asking because our S3 service doesn't allow setting the content-disposition headers directly...
17:00 < garciawebdev> isaacbw are you isaacs the mantainer of NPM?
17:01 <@isaacbw> no
17:02 < FunnyLookinHat> Laddi, I believe there's an S3 API call to do that, actually: http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html
17:02 < FunnyLookinHat> Laddi, Node wouldn't really be the best option for that if you did have to patch the download through...  I'd just script something up with nginx or whatnot
17:02 < FunnyLookinHat> That'd be a last resort though.
17:02 < Laddi> Yes, I know, but I'm actually working for a cloud provider and OUR S3 compatible service doesn't allow that ;)
17:03 < Kakera> bnoordhuis, do you happen to know how to generate Debug/Release configurations for MSVC with gyp?
17:03 < Kakera> http://code.google.com/p/gyp/issues/detail?id=128 related issue
17:03 < FunnyLookinHat> Laddi, Ooooh... that stinks  :-P
17:03 < FunnyLookinHat> Laddi, Well - don't use Node.... you shouldn't be serving static content through it really.
17:03 < Laddi> Yep, we didn't create the service though but we are using it...
17:04 < Laddi> Well, the problem is basically just to allow users to download files directly through a browser, and that only works for files that are not browser 'friendly'
17:05 < Laddi> So I figured that piping the request might be a nice temporary solution
17:05 < Nikentic> Anyone have any suggestions for facebook login on Node?
17:05 < DarkArgon> passport
17:06 < FunnyLookinHat> Laddi, Yeah that's ultimately your only work-around solution... I'm just saying to use something else besides Node.JS for that piping.
17:06 < Laddi> But I like Node.js :P
17:06 < Laddi> But OK, I see what you mean
17:07 < FunnyLookinHat> Sorry to be a bummer  :D
17:07 < Laddi> The main problem is that I can't really modify the response from the S3 service...
17:07 < Laddi> Oh, well...
17:07 < Nikentic> ty DarkArgon.
17:11 < aricg> What is the correct way to start my node.js service at boot (debian) 
17:19 < kenperkins> g'day
17:20 < Kakera> LINK : fatal error LNK1123: failure during conversion to COFF: file invalid or corrupt [e:\Downloads\libuv\run-benchmarks.vcxproj]
17:20 < Kakera> it worked earlier today...
17:26 < dmcaodha> Hi, new noder here, how do I emit an event from an external route file in Express, and listen for the event in the app.js file?
17:26 < dmcaodha> the function in the external route file is required in the app.js file
17:29 < dmcaodha> anyone?
17:29 < kenperkins> first recommendation dmcaodha : patience
17:29 < kenperkins> quite often people will reply, but it's not always instant
17:29 < dmcaodha> My apologies.
17:30 < kenperkins> I'm not upset, just trying to set your expectations appropriately :D
17:31 < dmcaodha> I am new to IRC as well, perhaps unsurprisingly.
17:32 < MI6> joyent/libuv: Saúl Ibarra Corretgé master * 4b95748 : windows: fix uv_stop in ONCE and NOWAIT modes  Same as the fix in 492efb9 (+3 more commits) - http://git.io/zl0ZuA
17:56 < azylman> Does anyone know how route matching in express works? Specifically, if I have two routes "/path/to/route/:param" and "/path/to/route", is there anything that will match both?
17:56 < azylman> e.g. what happens to the url "/path/to/route/"? Will that match the first with an empty param, the second, neither, or both?
17:56 < geNAZt> they can get matched both
17:57 < geNAZt> since the first match will break the request
17:57 < azylman> What kind of url would match both?
17:57 < geNAZt> and finish the response and break the middleware stack from being executed
17:57 < geNAZt> none
17:57 < azylman> Oh, okay
17:58 < azylman> I think you're saying that some could match both, but not if I end the response from in one of them?
17:58 < geNAZt> if you dont close the request then both could match
17:58 < azylman> What kind of url would match both, though?
17:59 < azylman> That's what I'm trying to figure out :/
17:59 < geNAZt> since the param only accepts chars + 1 none does
17:59 < geNAZt> but why do you want to match both ?
18:03 < shesek> "/path/to/route/:param" does _not_ match "/path/to/route/"
18:03 < MI6> joyent/libuv: Timothy J Fontaine master * 72bbf5d : test: don't rewind_cursor when using tap_output - http://git.io/TWMBdw
18:03 < geNAZt> correct
18:04 < shesek> the :params are expected to have a length greater than zero
18:04 < shesek> there's no url that'll match both
18:04 < azylman> Ah, okay, thanks.
18:04 < azylman> geNAZt: I didn't watch to match both, I wanted to make sure that nothing would match both
18:05 < shesek> but more generally, as geNAZt was telling you, even if you do have multiple routes matching the same request, as long as you don't call next() in your route (which you shouldn't), only the first one would execute
18:05 < shesek> when you don't call next(), you stop the execution of all other middlewares / routes
18:05 < geNAZt> well in routes you can call next
18:05 < geNAZt> it isnt passed through
18:05 < geNAZt> since expressjs selects the right handler by using regex
18:05 < azylman> Yeah, I was mostly worried that it would be possible for some URL to match both (which I didn't want to happen) and then have unexpected behavior where it would try match the one that I didn't want it to
18:06 < geNAZt> no it is not possible
18:06 < shesek> azylman, also, note that it makes the order of your middlewares/route handlers important
18:06 < shesek> even if "/path/to/route/:param" would match "/path/to/route/", you could've resolved it by putting the "/path/to/route/" handler first
18:07 < azylman> shesek: If the url "/path/to/route/" will not match the route "/path/to/route/:param", will it match the route "/path/to/route"? I'm not sure how express handles trailing slashes
18:08 < geNAZt> the route middleware contains your routes as regexpressions
18:08 < shesek> azylman, see "strict routing" under http://expressjs.com/api.html#app-settings
18:08 < geNAZt> so only one route is called in your handling router
18:08 < shesek> "by default "/foo" and "/foo/" are treated the same by the router"
18:08 < azylman> Perfect, that's exactly what I needed to know
18:08 < azylman> Thanks
18:08 < shesek> turning strict routing on disables that
18:08 < shesek> sure
18:09 <@isaacbw> be cool and use my router
18:09 <@isaacbw> it's so cool it's not even on npm
18:09 < azylman> Naw, sorry bro, got way too much written to rewrite it in your router :p
18:09 <@isaacbw> man oh man is it cool
18:09 <@isaacbw> it's "pragrmatic"
18:10 <@isaacbw> https://github.com/isaacbwagner/node-egress
18:11 <@isaacbw> it's also basically broken if you don't use it eaactly the rigft way
18:11 <@isaacbw> erm
18:11 <@isaacbw> exactly the right
18:11 < azylman> lol
18:22 < aricg> how do I make node look for config.js somewhere other than ./config.js 
18:22 < geNAZt> node doesnt look for any config oO
18:22 < Nikentic> o0
18:23 < aricg> sorry, npm specific question I guess
18:26 < aricg> I found it var config = JSON.parse(fs.readFileSync('./config.js', 'utf8')); 
18:28 < Nikentic> just be package specific then
18:30 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:43 < chapel> aricg: you don't need to use json/parse or read file for js/json files
18:43 < chapel> aricg: var config = require('./config.json') works well
18:43 < aricg> ah, great much simpler.
18:44 < aricg> mostly I solved my init problem with start-stop-daemon --chdir /home/node/fooprog/ 
18:45 < aricg> now I can just leave everything vanilla 
18:46 < markdaws> hi - how does npm determine what the global link directory is (used in npm link)?  I don't have an .npmrc file and I don't have NODE_PATH set but somehow it is choosing a path relative to my node install node/lib/node_modules is that the default location always, relative to the node install?
18:47 < MI6> joyent/node: isaacs v0.8 * b0e7dbf : http: Do not free the wrong parser on socket close  This appears to fix # - http://git.io/P-yaGg
18:49 < MI6> joyent/node: isaacs created branch v0.8.21-release - http://git.io/A-V4kg
18:55 < Nikentic> Em, how does the done() function work? :o
19:04 < MI6> joyent/node: isaacs v0.8.21-release * 423e860 : 2013.02.25, Version 0.8.21 (Stable)  * http: Do not free the wrong parser - http://git.io/d3XhOw
19:18 < ben_alman> if a function can accept either a filepath (to be read) or a Buffer, what's the best way to detect one vs the other
19:18 <@TooTallNate> Buffer.isBuffer(arg)
19:19 < ben_alman> awesome.
19:19 < ben_alman> thx
19:26 < CoverSlide> what about a stream
19:26 < CoverSlide> would rather take a stream as a parameter than a buffer of an entire file
19:31 < bradleymeck> markdaws: should be relative to process.execPath I would think, or NODE_PREFIX
20:05 < ben_alman> is there a way to "empty" out a Buffer so that new contents may be put into it?
20:06 < ben_alman> or better yet, when a Buffer is created, is its size permanently locked to some allocated size?
20:06 < ben_alman> can it grow or shrink?
20:07 < gkatsev> "A `Buffer` cannot be resized."
20:07 < ben_alman> hmmn
20:07 < gkatsev> I guess clearning the buffer would be something like 'b.fill
20:08 < gkatsev> oops
20:08 < ben_alman> i'm in a situation where multiple separate APIs need to pass the kind of data that might be stored in a buffer around
20:08 < gkatsev> `b.fill(0)`
20:08 < ben_alman> and there's an object
20:08 < ben_alman> and it gets passed around
20:08 < ben_alman> and it could start with nothing in it and then get a ton of stuff added
20:08 < ben_alman> or vice versa
20:08 < ben_alman> i mean, it could be {value: 'something'}
20:08 < ben_alman> but it seems like Buffers should do this, unless i'm ttoally mistaken
20:09 <@mbalho> ben_alman: http://nodejs.org/api/buffer.html#buffer_buf_fill_value_offset_end
20:09 < ben_alman> yeah that doesn't allow it to be resized. got it.
20:10 <@mbalho> ben_alman: buffers cant be resized but you can .concat multiple buffers
20:10 < ben_alman> yeah
20:10 < ben_alman> but i need an object that contains the contents
20:11 < ben_alman> that's passed around
20:11 < ben_alman> which would mean i can't change the buffer
20:11 < ben_alman> hmmn
20:11 < ben_alman> maybe i could do this with streams
20:11 < ben_alman> but then i'd need to save state separately
20:11 < ben_alman> or do i
20:11  * ben_alman reads up on streams
20:12 <@mbalho> ben_alman: what are you trying to accomplish at a high level?
20:12 < ben_alman> create an object that can be passed around that represents pretty much what a buffer can have in it
20:12 < ben_alman> but has more flexibility
20:13 < CoverSlide> wait, what? there's a Buffer.concat? Where's that been all my life?
20:14 < gkatsev> CoverSlide: here http://nodejs.org/api/buffer.html#buffer_class_method_buffer_concat_list_totallength
20:14 < gkatsev> :P
20:15 < darrenlooby> Hi Guys, I'd like to know where in Express the session.id is created - as I'd like to hack Socket.io and place the session inside it - if pos
20:15 < darrenlooby> Any tips
20:17 <@mbalho> ben_alman: if you do JSON.stringify(new Int8Array(10)) in a browser it serializes to an object
20:17 < ben_alman> wat
20:17 <@mbalho> ben_alman: buffers and typed arrays are basically the same thing
20:17 < ben_alman> k
20:18 < ben_alman> makes sense
20:18 <@mbalho> ben_alman: i wouldnt recommend turning buffers into anything other than buffers if you care about perf but if its just for grunt or whatevs then it probably doesnt matter
20:18 < ben_alman> well i didn't realize that buffers had their size allocated up-front
20:18 < ben_alman> so that changes things for me
20:18 < CoverSlide> yeah grunt stuff doesn't matter (BURN)
20:18 < ben_alman> w/e
20:20 < ben_alman> how about another approach
20:20 < ben_alman> instead of Buffers
20:20 < _pash> can i have several directories for .jade files on my server?
20:20 < CoverSlide> _pash sure, why not
20:20 < pendejo> tornad FTLOG infynyxx WorkeD OliverJAsh rudasn darrenlooby kniven firebalrog romainneutron HankHendrix strange_ Sendoushi toonketels graeme_f whitedawg samstefan pifantastic Stilo tilgovi hipsterslapfight euforic kevinfagan diogogmt cableray Cheesehead st_luke EyePulp joelmob PaulCapestany JohnMcLear esundahl adrianF listochkin lawnsea sx aho draginx serapath colinsullivan `3rdEden smithatlanta themiddleman Zolo DTrejo BretFisher Sicp virtualsue 
20:20 < pendejo> [14:16] Users on #Node.js: Swizec drebelox lz dshaw_ carlyle astropirate phrearch kaen Eigen cpsubrian springmeyer kaspertidemann harrisonm alitrix zenodub_ Sadin ogny gyre007 ins0mnia Swadq igl mtcrutch malkomalko gasbakid_ r0tha echo mykul \mSg Pent c4milo dguttman samfalkner pvankouteren nicholasf _marvin heatxsink lyaunzbe skattyadz ashnur Radhad levi501d redir thatguydan bartt mp__ NLZ_13 mattgifford inolen markdaws jxson eschnou mikolalysenko bingoma
20:20 < pendejo> [14:16] Users on #Node.js: jimmyff [1]execneo taterbase JorgeP dreamdust AvianFlu @TooTallNate fruitFly mikeal JJMalina xerora tphummel bpayton aut0mata Benvie blueadept ph^ idefine asterick blakmatrix jcrugzz Mchl smtudor Anton_ dabarnes omni5cience kevireilly shanse rossk1111 kevwil melter m00p carif brain_shim azylman joshfinnie pooya slaskis disnet rendar boogie indexzero swaagie mermeladas regality Kakera ovnicraft bpierre jbueza jamsyoung squeakytoy 
20:20 < pendejo> [14:16] Users on #Node.js: alvaro_o Venom_X Fuu TehShrike|Work wizonesolutions psino Rolken jdunck hackygolucky chuwiey1 ianjm purr trevnorris Janzeh optixx csurap supersym __underscore aricg lresende mamadero slloyd DingoEatingFuzz willwhite sbook Nikentic grallan bmamone groundwater mrvisser dstokes motaro AaronMT Yuffster_fun DoniRS sunoano ncooley brianc shama dayom ryedye rickibalboa mephux prtcl generalissimo lpin axhlf jacksmithz _kud kenperkins Fun
20:20 < pendejo> [14:16] Users on #Node.js: pats_Toms jpdery newUser1234 ehynds Orbitrix rcrowley prosquare jaha nkohari jxie freewil Voting wpreul arduix vanb777 kmczn jryans davidsklar addisonj mary5030 coolnalu merpnderp Jamiltz adambeynon qjcg LeftWing arjunbajaj garciawebdev bootstrapper randop_ Sorella dominictarr hwrod dmcaodha daffl chuckpreslar xastey olleman meeech jonwgeorge TheDukeofURL thomashunter recidive ahungry erichocean thomblake eldios r126f codycraven 
20:20 < pendejo> [14:16] Users on #Node.js: willob darjeeling sirkitree|mtg D4RK-PH0ENiX clondon ralphtheninja therealkoopa fusiongrokker mihamina briancray brettlangdon charuru vervain blackhaze innociv akram_ tg skebcio Virunga thanpolas mks Xano yhpark_ Musk webguynow kofno lifelike atatsu yorick yacks AAA_awright_ looper Spudly Andy- funkbox ndngvr nkr bigkevmcd wltsmrz yewton zonetti Shrink triptec jkridner timkuijsten Piotras phun-ky spion wsieroci Nodon jslatts Capt
20:20 -!- mode/#Node.js [+b *!*Dogalog@174.255.0.*] by Nexxy
20:20 -!- pendejo was kicked from #Node.js by Nexxy [pendejo]
20:20 <@mbalho> Nexxy: you are quicker to the draw than i am
20:20 < DTrejo> thanks
20:20 < st_luke> lmao
20:20 <@Nexxy> ;3
20:20 < EyePulp> dang, yo
20:20 < darrenlooby> What the mojo was that?
20:21 < pats_Toms> what
20:21 < Sendoushi> well there was a reason for him being "pendejo"
20:21 < nkohari> lol
20:21 < _pash> CoverSlide: how can i define the paths in the app.js?
20:21 < ben_alman> maybe i could mock fs in order to effectively create a file, but in memory
20:21 < CoverSlide> some pendejo
20:21 < dguttman> ...
20:21 < boogie> Sendoushi: indeed
20:21 < graeme_f> that DING woke me up :/
20:21 < sbook> Hey cool, IRC notifications work :)
20:21 < CoverSlide> _pash: well if you're using express, then i don't think so
20:21  * brianc googles for the meaning of pendejo
20:21 < gkatsev> Nexxy: happened 3 times in ##js over the weekend... from basically the same ip range too.
20:21 < ahungry> lol hi all
20:21 < brettlangdon> good… glad to know I am in #Node.js
20:21 < Virunga> That guy hates js
20:21 <@Nexxy> gkatsev, sweet, thanks!
20:21 < FTLOG> gkatsev: You're referring to ##javascript
20:21 < Virunga> Did the same on #javascript 10 times
20:21 < ralphtheninja> I bet nexxy has a bot for nicks with pendejo in it :)
20:21 < kaspertidemann> Wow, that was funky.
20:21 < FTLOG> Glad that's registered to chat only
20:21 < gkatsev> FTLOG: I am. I'm just lazy.
20:22 < sbook> wtf is the benefit in doing that?
20:22 < sbook> its not sending links or anything
20:22 <@Nexxy> it's someone on verizon wireless in kansas city
20:22 < FTLOG> er, glad that's identify-to-chat only.
20:22 <@mbalho> sbook: its called 'trolling'
20:22 < CoverSlide> some people just want to watch the world burn
20:22 <@Nexxy> clearly there's nothing better to do in kansas
20:22 < gkatsev> Nexxy: we put ##js into +q $~a because of that
20:22 < ahungry> lol
20:22 < _pash> CoverSlide: never mind fidured it out =)
20:22 < garciawebdev> i've seen that kind of behavior in other rooms, any kind of virus or lame script?
20:22 < wpreul> kansas city is also in missouri
20:22 < FTLOG> ^
20:22 < gkatsev> also in kansas
20:22 < sbook> I severely underestimate how much people need lives ^^
20:23 < wpreul> likely getting paid to spam
20:23 < ins0mnia> wtf was that
20:23 < ins0mnia> did anyone get this shit spam message?
20:23 < darrenlooby> I'm really keen on setting some sort of session info in Socket.io from Express...
20:23 < CoverSlide> The only good thing to come out of kansas city is Tech N9ne
20:23 < garciawebdev> wpreul but they don't spam actually
20:23 < `3rdEden> Nexxy always automaticly kickbans people that highlight her, it was just an unlucky bot
20:23 < wpreul> google fiber is also in KC
20:24 < garciawebdev> wpreul which is harder to understand then
20:24 < darrenlooby> Is there anything in "https.createServer(options, app).listen(443)" that I can grab the session from?
20:24  * `3rdEden ducks for cover
20:24 <@Nexxy> `3rdEden, hah
20:24 < CoverSlide> well that's something that went into KC
20:24 < brianc> darrenlooby: I did it once with engine.io - try checking the engine.io documentation -- it gives you lower level access to the websocket request
20:24 < gkatsev> wpreul: yeah, only reason to live in KC currently.
20:24 < darrenlooby> brianc, cheers dude, I'll give that a go
20:25 < darrenlooby> brianc, am I correct in saying that Engine.io is sub-socket.io?
20:25 < CoverSlide> it's a lower level websocket emulation layer that (not sure if it's happened yet) socket.io will be built on top of
20:26 < brianc> darrenlooby: yeah - I think socket.io is built on top of engine.io
20:26 < brianc> engine.io is the plumbing, socket.io is the 'sugar'
20:26 < brianc> with reconnection logic, etc
20:27 < darrenlooby> Could it be argued that I should use engine.io and doctor that - rather than socket.io ... or is engine.io old now?
20:28 < brianc> engine.io is a lot lower level
20:28 < brianc> it has no reconnection, doesn't do the 'rooms' of socket.io, doesn't do a lot of stuff, really
20:29 < darrenlooby> brianc, not too impress with socket.io rooms to be fair... rolling my own on top of it
20:29 < idefine> socket.io 1.0 will be using engine.io in the 1.0 release I'm not sure if the current (0.9.x) is using that yet
20:29 < brianc> darrenlooby: yeah i did the same. i used engine.io
20:29 < brianc> darrenlooby: it's less opinionated, but also has less features
20:29 < CoverSlide> engine.io is just websocket semantics
20:30 < darrenlooby> CoverSlide, brianc -- what kind of support will just websocket get ... ? Esp. mobile devices?
20:30 < darrenlooby> Assuming I under stand that correctly... engine being only ws..
20:31 < brianc> engine is not ws only
20:31 < brianc> it supports all the transport layers
20:31 < brianc> it actually _always_ starts out using http long polling
20:31 < brianc> and will transparently upgrade to web sockets if they're supported
20:31 < CoverSlide> the API is just based on websockets
20:31 < brianc> I honestly am not an expert
20:31 < CoverSlide> message events
20:31 < brianc> but think of engine.io as providing you the same interface as native websockets but it works "everywhere" instead of only modern browsers
20:32 < CoverSlide> instead of custom events, rooms, broadcasting, all that sugary stuff
20:32 < TehShrike|Work> Hey, who here wants a free app.net invite?
20:32 < brianc> think of socket.io as sitting on top of that and providing you things like retries, timeouts, fan outs, delivery callbacks, acks, etc.
20:32 < TehShrike|Work> I need more JS people in my app.net feed
20:32 < CoverSlide> s/JS//
20:32 < generalissimo> when are we gonna get a good ORM :(((
20:33 < TehShrike|Work> ORMs are overrated
20:33 < TehShrike|Work> :-x
20:33 < darrenlooby> Okay, I'll have a play with engine and see where I get too
20:33 < CoverSlide> Agreed
20:33 < TehShrike|Work> pm me for a free app.net account
20:34 < brianc> yeah i think ORMs are usually not so good
20:34 < CoverSlide> an ORM is a poor substitute for a good DAL
20:34 < TehShrike|Work> Indeed.
20:35 < generalissimo> ...so you wanna recommend a good DAL?
20:35 < CoverSlide> that pendejo guy just spammed #haskell now
20:35 < TehShrike|Work> The one you write :-x
20:35 < generalissimo> :(
20:35 < TehShrike|Work> Write a model that includes the intelligently-written queries your app needs
20:35 < generalissimo> i'm never going back to that life
20:36 < ganzuul> hmm... to put sensor smoothing on the client or the server...
20:36 < brianc> generalissimo: the amount of time you spent writing actual queries versus wrestling with an ORM in my experience has been about the same
20:36 < generalissimo> i did my time writing mysql queries, then i did my time writing mssql procedures, then i did some god-awful time writing pl/sql shit
20:36 < CoverSlide> ganzuul: what you building
20:37 < TehShrike|Work> "did your time"?
20:37 < TehShrike|Work> I love writing queries in a reasonable schema
20:37 < ganzuul> CoverSlide: A toy! I'm trying to use the magnetometer of a smartphone for controlling games.
20:37 < generalissimo> i just want something as nice for rdbms's as mongoose is for mongodb
20:37 < CoverSlide> cool
20:38 < CoverSlide> generalissimo: contribute to sequelize, or DIY
20:38 < generalissimo> is sequelize still the most promising one?
20:38 < Kakera> https://github.com/joyent/libuv/pull/677 what's the status of this?
20:38 < CoverSlide> AFAIK
20:39 < generalissimo> anyone tried https://github.com/zefhemel/persistencejs?
20:39 < Kakera> would it increase the chances of getting pulled in the nearest time if I work on it and try to get rid of the ugly condition?
20:39 < generalissimo> oh wait, no postgres support
20:39 < generalissimo> hrm
20:39 < brianc> generalissimo: there's also FastLegS
20:40 < brianc> generalissimo: i know that one supports postgres
20:40 < brianc> generalissimo: there's also this one: https://github.com/dresende/node-orm2
20:40 < brianc> that dresende guy is pretty active with the node-mysql project too
20:40 < Kakera> bnoordhuis, https://github.com/joyent/libuv/pull/677 does the stagnation of this issue have something to do with the huge shared_library section?
20:41 < CoverSlide> there's also that jugglingdb thing
20:41 < CoverSlide> but i don't have expectations for that project
20:41 < CoverSlide>                      ^ high
20:42 < TehShrike|Work> SQL is too expressive to wrap up in a friendly-looking API that lets you do everything you'll need to
20:43 < TehShrike|Work> hmm, I'm starting to sound a little too pretentious
20:43 < TehShrike|Work> BUTTS BUTTS BUTTS AND POOP
20:43 < C0deMaver1ck> 0_o
20:44 < _pash> CoverSlide: if i pass res.render('name', { title: 'name'}) where does it substitute the title?
20:45 < CoverSlide> _pash: in your template
20:45 < _pash> CoverSlide: it doesnt work for some reason..
20:46 < _pash> CoverSlide: the title doesnt get substituted
20:46  * CoverSlide shrugs
20:46 < CoverSlide> i haven't used express in a while
20:47 < darrenlooby> _pash, have you double checked your template is compliant with what is expected?
20:47 < _pash> darrenlooby: well the title is not substituted with what is passed it is taken from the layout.jade
20:47 < phrearch> hm, whats the common way to run requirejs code in both nodejs and the browser?
20:47 < phrearch> define is not defined :-)
20:48 < CoverSlide> right
20:48 < CoverSlide> there are amd loaders for node
20:50 < CoverSlide> phrearch: did you look at: http://requirejs.org/docs/node.html#2
20:51 < phrearch> CoverSlide: yea i read through it
20:52  * CoverSlide shrugs
20:52 < phrearch> i wonder if that amdefine thing is required, or that it's only to keep out requirejs
20:52 < _pash> CoverSlide: how can i substitute other parameters? not just title?
20:52 < CoverSlide> for node / browser stuff, browserify is your best option
20:54 < darrenlooby> _pash, sorry I can't help you further... never used the template feature.
20:54 < _pash> thanks
20:55 < darrenlooby> Right... question regarding engine.io again... what's the best strategy? Intercept the http? Or, create a separate app from the server?
21:00 < swally> hey
21:01 < CoverSlide> darrenlooby: it's all good
21:02 < darrenlooby> CoverSlide, wondering - is it going to be as easy to pair engine with express as it is in socket?
21:02 < darrenlooby> Be great to just replace a few bits of code in my really basic test
21:02 < CoverSlide> if you need sockets from other servers to be aware of eachother, you're gonna have a bad time
21:03 < mscdex> skynet.js
21:04 < Nikentic> Hey
21:04 < Nikentic> I need some help with passport
21:05 < darrenlooby> Currently, I'm just playing with server - client... so, fingers crossed
21:06 < carpii> in socket.io… socket.on('message', function(data) {   -- is there any way to access "message" in my callback function?
21:06 < Pinocchio> Un ciao a tutto il canale #Node.js da Pinocchio -> mIRC Explorer 2.0b <-
21:09 < segomos> carpii: you can extend the eventemitter to emit the 'message' with the data
21:10 < carpii> yes but not ideal for me
21:10 < carpii> its not a big issue though, i can workaround it just i thought itd be nice to access fro within callback
21:10 < CoverSlide> Pinocchio is not a real boy!
21:10 < segomos> you might inspect __caller
21:10 < carpii> oh cool, thanks
21:10 < segomos> CoverSlide: pinocchio uses mirc explorer 2.0b, available here: http://mircexplorer.altervista.org/
21:11 < MI6> joyent/node: isaacs v0.8.21-release * 530d8c0 : 2013.02.25, Version 0.8.21 (Stable)  * http: Do not free the wrong parser (+1 more commits) - http://git.io/WP3g4w
21:16 < paultman> hello everyone :)
21:16 < dmcaodha> I am trying to fire a socket.io event in an external Express route file, ans I want to catch it in the app.js file
21:16 < CoverSlide> hello paultman 
21:17 < dmcaodha> Can anybody help me? I am stuck
21:17 < paultman> I've been trying to convince myself to use express rather then just connect and am curious if people use different layouts/templates rather then jade
21:17 < paultman> which I really do not care for
21:18 < CoverSlide> some people use ejs
21:18 < CoverSlide> some use handlebars
21:18 < dmcaodha> You can use it with ejs
21:19 < paultman> ok, handlebars seems pretty popular, would it be easy to pass js object to the view from connect or express?
21:19 < paultman> It must be...
21:20 < brycebaril> paultman: it is -- use https://npmjs.org/package/hbs
21:20 < paultman> is a popular setup connect+handlebards+mongodb?
21:20 < paultman> thanks brycebaril
21:22 < dmcaodha> I am streaming a file to a couchdb database and I want to update the user on the upload in the browser. I am trying to do this with socket.io, but I don't know how to emit the scocket event in an express route file, and capture it in the app.js file
21:23 < paultman> what's the current popular setup these days for web frameworks?
21:23 < CoverSlide> aahhh!! you said the f-word !!!
21:23 < paultman> opps
21:23 < paultman> :p
21:23 < Nikentic> How would I use facebook auth for express efficiently? 
21:24 < Nikentic> and access/save users etc in my routes
21:24 < carpii> whats best way to check for undefined?  should i use typeof arg == "undefined" ?
21:24 < Naked> typeof arg === "undefined"
21:24 < paultman> I feel like i've been running in circles learning all these different ways of using f_orks/packages rather then just picking one and codeing
21:24 < carpii> and theres no performance issues with that?
21:25 < CoverSlide> typeof arg == 'undefined' is only needed if you're not sure if it's global or not
21:25 < MI6> joyent/libuv: isaacs created tag node-v0.8.21 - http://git.io/_Z4TKQ
21:26 < CoverSlide> arg === undefined works just as well
21:26 < CoverSlide> if it's a function param
21:26 < carpii> ok, its just to test an optional function parameter 
21:26 < Naked> carpii: typeof arg === "undefined" is faster than arg === undefined
21:26 < CoverSlide> Naked: is it?
21:26 < Naked> CoverSlide: undefined is a global variable that can be redefined
21:26 < carpii> interesting
21:27 < Naked> (not directly, it's not writable, but with property etc.)
21:29 < Nikentic> How would I use facebook auth for express efficiently?
21:33 < Sicp> you rang?
21:36 < CoverSlide> probably that spammer
21:36 < CoverSlide> don't worry, noone wanted to talk to you
21:38 < Naked> if you want to know more: http://javascriptweblog.wordpress.com/2010/08/16/understanding-undefined-and-preventing-referenceerrors/
21:39 < strange_> quit
21:42 < fg3> does sublime text have a channel
21:48 < styol> Oh noes, QueryString woes. I'm utilizing the core querystring module and have been faced with an issue where the querystring.parse method is, probably rightly so, converting %3a to %3A as an example. Normally this would not be an issue, but we are creating a checksum hash of the query strings and this is creating a situation where the checksum is deemed invalid. Upon inspecting the source code for QueryString.parse and 
21:48 < styol> QueryString.unescapeBuffer there does not appear to be any options other than overriding the function or, probably better yet, making sure the source does %3A before hashing. Any other suggestions by chance?
21:50 < MI6> joyent/node: isaacs created tag v0.8.21 - http://git.io/B815Xg
21:52 < crankharder> trying to install/run this:  https://github.com/juliangruber/review  - on osx I 'brew install nodejs ; npm install -g review' and I have no 'review' in my PATH.  what'd i do wrong?
21:54 < styol> crankharder: perhaps a pastie of the error received when trying to npm install would be beneficial. This is probably not the appropriate answer, but one option is downloading the source, cd'ing into the review directory, and doing `npm install -g`
21:55 < Laddi> I'm gonna ask my question from earlier today again since more of you are here now and I've axed other options...
21:56 < Laddi> So basically I need to have a server that listens to a request, takes the parameters from that request and makes another request to another server to fetch a file and stream that file to the initial response with content-disposition
21:56 < MI6> joyent/node: isaacs v0.8 * 33e8e69 : Now working on 0.8.22 (+3 more commits) - http://git.io/6kXkgg
21:56 < Laddi> I've tried several ways but none seem to work and I don't want to store the file locally first
21:57 < Laddi> Just a pass-through / pipe the stream...
21:57 < Laddi> Any 'simple' solutions for me out there? :P
21:58 < styol> Laddi: the request module supports streaming i believe https://github.com/mikeal/request
21:58 < Laddi> Well, yes and no...
21:58 < Laddi> It supports streaming to a file stream and POST/PUT requests
21:58 < Laddi> At least according to the documentation
21:59 < styol> Laddi: I'm not particularly familiar with streaming but wouldn't you just pipe the stream to the server response as opposed to a file?
21:59 < Laddi> Well, the thing is, I'm trying to create a 'Save to file...' download
22:00 < styol> Laddi: under the "Now let's get fancy" example in the else if
22:00 < Laddi> Yeah, I just saw that now
22:00 < Laddi> I'm gonna give it a try
22:00 < fruitFly> vnc vs teamviewer?!
22:00 < Laddi> thanks
22:00 < MI6> joyent/node: isaacs v0.8 * fafb67c : ChangeLog: Missed item about EINPROGRESS (+1 more commits) - http://git.io/ncEicw
22:01 < JmZ> how would i go about posting a file using request? along side other form data
22:04 < Laddi> Nope, doesn't seem to work at all...
22:07 < styol> Laddi: what are you trying exactly?
22:10 < mikeal> Laddi: what streaming do you want?
22:12 < Laddi> OK, here's what I'm trying to do
22:12 < dmcaodha> Hi can anyone help me out, please?
22:13 < Laddi> We have an S3 compatible service that I'm trying to fetch files from.  The problem is that the service doesn't allow or have any means of adding the content-disposition header itself.  So I'm trying to create a simple service that takes in the URL of the file in S3, fetch it and then return it via the response with the content-disposition header set
22:13 < dmcaodha> I am trying to use socket.io in Express routes and I don't know how to emit the events so I can use them in the app.js file
22:13 < creationix> Laddi: you are basically building a reverse proxy
22:14 < Laddi> Yep, you might say that
22:14 < creationix> node works fine for that assuming your server can handle all the extra bandwidth
22:14 < Laddi> Well, we are a cloud hosting company so bandwidth shouldn't be a problem for us ;)
22:14 < dmcaodha> Any suggestions/sample code?
22:14 < creationix> Laddi: mikeal would know best how to do it with the request library I think
22:14 < creationix> streaming data is the big thing there
22:15 < Laddi> Yep, I've figured... :P
22:16 < creationix> dmcaodha: you can try the #express room too
22:16 < creationix> I've never used it personally
22:16 < azylman> Laddi: I've done this before, hang on
22:16 < Laddi> 	var theResponse = this.response;
22:16 < Laddi> 	theResponse.writeHead(200, {
22:16 < Laddi> 		'Content-Type': mimetype,
22:16 < Laddi> 		'Content-Length': length,
22:16 < dmcaodha> I wasn't aware of it. Thanks
22:16 < Laddi> 		'Content-Disposition': 'attachment; filename=' + filename
22:16 < Laddi> 	});
22:16 < Laddi> 	var request = https.request(file, function(response) {
22:16 < Laddi> 		response.setEncoding('binary');
22:17 < Laddi> 		console.log('File size: ' + response.headers['content-length'] + ' bytes.');
22:17 < Laddi> 		var body = '';
22:17 < Laddi> 		response.pipe(theResponse);
22:17 < Laddi> 		
22:17 < Laddi> 		response.on('data', function (chunk) {
22:17 < Laddi> 			body += chunk;
22:17 < creationix> Laddi: gist please
22:17 < Laddi> 			console.log('Adding chunk: ' + chunk.length);
22:17 < Laddi> 			theResponse.write(chunk);
22:17 < Laddi> 		});
22:17 < Laddi> 		
22:17 < Laddi> 		response.on('end', function() {
22:17 < Laddi> 			console.log('After download: ' + body.length + ' bytes.');
22:17 < Laddi> 			theResponse.end();
22:17 < Laddi> 			theRequest.resume();
22:17 < Laddi> 		});
22:17 < Laddi> 	});
22:17 < Laddi> 	request.end();
22:17 < Laddi> azylman: Excellent!
22:17 < Laddi> Hanging on...
22:17 < Laddi> Sorry for the paste, btw... :P
22:17 < Laddi> I know...
22:17 < Laddi> my bad...
22:18 < niix> I'm trying to make a registration view and it works so far but I'm trying to handle my errors correctly.  I wrote this part here, but it's a bit ghetto.  Does anyone have any better ideas?  I'm feeding the errors off of the mongoDB errors for the fields https://gist.github.com/niix/5033833#file-app-js-L12
22:18 < creationix> Laddi: but once you get the body response from s3, you can just pipe it to the local response
22:19 < creationix> just copy the headers form the other request and add in the extra ones you want
22:21 < MI6> joyent/node: isaacs v0.8 * 82357b8 : blog: Update with EINPROGRESS changelog item - http://git.io/3xGjOQ
22:21 < Laddi> creationix: I'm gonna try some more, thanks...
22:27 < mikeal> Laddi: 
22:27 < mikeal> resp.setHeader('content-disposition',value)
22:27  * cxreg looks for node developers in the VOIP space in seattle..
22:27 < mikeal> request.get(urlToS3Content, {options}).pipe(resp)
22:27 < mikeal> why wouldn't that work?
22:36 < crankharder> styol: doesn't look like an error to me: https://gist.github.com/crankharder/1049791a577aabb4d284
22:37 < JmZ> really anyone used request to do a multipart/form-data post?
22:37 < JmZ> docs aren't of much use
22:37 < styol> crankharder: /usr/local/share/npm/bin/review is where its at
22:37 < crankharder> ty
22:37 < JmZ> how about a way to dump the request body? so i know its sending it
22:38 < carpii> JmZ, what problem are you having specifically?
22:38 < JmZ> carpii: not a problem, i just don't understand how to post a file and form data (multipart/form-data POST request)
22:39 < JmZ> the request docs show a tiny example but im not sure its working, so is there a way to dump the request body?
22:39 < carpii> http://stackoverflow.com/questions/5744990/how-to-upload-a-file-from-node-js
22:39 < carpii> maybe that will help
22:40 < MI6> joyent/node: bnoordhuis created branch downgrade-v8 - http://git.io/F8UUxA
22:40 < carpii> or you could always dive into request.js and start adding console.log etc
22:40 < JmZ> carpii: yup i read it but its easier in request if i get it working
22:40 < azylman> JmZ: I've done it before, one sec
22:41 < carpii> my bad, i thought that was using request.js 
22:41 < context> downgrade? uh noez
22:41 < JmZ> azylman: apparently you can use .form() and append() fields to it. i've done that but want to dump the request body somehow, to check it actually works
22:42 < JmZ> looks like i may just have to post to localhost and check 
22:42 < azylman> JmZ: I spent a long time screwing around with .form and never got it to work
22:42 < JmZ> azylman: its pretty confusing that you deal with it AFTER calling request()
22:43 < azylman> JmZ: http://hastebin.com/qoteyerahe.coffee
22:43 < azylman> That was for sending a csv file as evidenced by the content-type
22:43 < azylman> But you should just be able to change that and have it work
22:44 < JmZ> will give it a try, going to mess around with the form thing still too just to see what its doing
22:44 < azylman> So IIRC the form thing uses the form-data library
22:44 < azylman> And there's several bugs filed against request and node-form-data that are showstoppers
22:44 < azylman> e.g. request sending content-length 0 all the time
22:44 < azylman> e.g. node-form-data reporting the wrong content-length
22:45 < azylman> The only way I could get it to work was the way that I did it in that hastebin
22:45 < carpii> this request bug could apply to normal http requests too?   or just for  multipart forms? 
22:45 < azylman> Some of them might have been fixed since, not sure
22:45 < carpii> im seeing a normal GET take 5 seconds to complete, with no real explanation, but lack of content-length in the request could explain it
22:46 < carpii> but its intermittent :(
22:46 < azylman> I think it was just for multipart forms using their integration with node-form-data but I don't remember for sure
22:46 < carpii> ah ok
22:46 < carpii> i shall proxy it and check i think, its killing me right now
22:46 < JmZ> azylman: yeah just noticed that, got a 411 response
22:46 < azylman> Usually you don't send content-length with GET requests because there's no request body
22:50 < MI6> joyent/node: Ben Noordhuis master * 51f6e6a : src, test: downgrade to v8 3.14 api (+2 more commits) - http://git.io/qL0pXA
22:50 < bnoordhuis> ^ 'tis a sad day, friends
22:50 < azylman> Nooo
22:50 < azylman> Why the downgrade?
22:51 < CoverSlide> shit be breakin
22:53 < st_luke> http://24.media.tumblr.com/8d71b67d41ee269340df98be24ead47e/tumblr_mimwu7ErZY1qb8gwzo1_1280.jpg
22:54 < StPiere> i saw some example of chat server with node on the net ... the idea is to storing sockets in Array, say clients[] , and than iterate and broadcast to each, etc. ... is there some better solution for production environment ??
22:55 < Kakera> hmm, building the shared library really does fail on tests
22:56 < edorf> Hi, all! Anybody know a good open source project that is using node-mysql (and preferebly express)? I am a newbie that wants to learn how to use these in the best manner. Thanks for any suggestions. I have googled a little bit, but has not yet had any luck finding what I am looking for...
22:58 < JmZ> hmm
22:58 < JmZ> azylman: how about if you don't know the file beforehand, the content type?
22:59 < fruitFly> I just installed node on mint 14 using this method http://apptob.org/ ...... everything seemed to go well but I can't find where to launch node... there's just A BUNCH of diff files and folders... how do I know if it installed propery?
22:59 < fruitFly> I am NOOOB to linux
22:59 < azylman> JmZ: Not sure what you'd do if you didn't know the content-type beforehand... Probably just not specify it, but then browsers won't know how to handle it
23:00 < CoverSlide> fruitFly: node --version
23:00 < azylman> JmZ: I think you're supposed to use "application/octet-stream" for arbitratry binary data, you can probably use that, but again - browsers won't know how to handle the file
23:00 < fruitFly> The program 'node' can be found in the following packages:  * node  * nodejs-legacy Try: sudo apt-get install <selected package>
23:01 < fruitFly> CoverSlide:  ^^
23:01 < superjoe> fruitFly, have you seen this yet? https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
23:01 < CoverSlide> then i would venture to say that it's not installed correctly
23:02 < superjoe> fruitFly, actually, following the linux mint directions from that will lead you down the wrong path
23:03 < superjoe> looks like you should just compile a tarball on linux mint
23:03 < fruitFly> superjoe: I have.. but I don't even know what I'm doing... packages tarballs etc.. the commands.. all that stuff confuses me coming from windows binaries... I don't remember if I even tried that one joe
23:03 < fruitFly> superjoe:  I though this was compiling a tarball http://apptob.org/
23:04 < CoverSlide> looks like that's what it's doing
23:04 < superjoe> never seen apptob.org. I don't feel like troubleshooting something I've never heard of.
23:04 < fruitFly> what is compiling vs binaries vs package manager vs repos vs all the other stuff... a simple breakdown please someone? superjoe  CoverSlide 
23:04 < CoverSlide> fruitFly: stat /usr/local/bin/node
23:05 < fruitFly> CoverSlide: what is stat
23:05 < superjoe> google it
23:06 < fruitFly> how do I nav up the file system?
23:06 < superjoe> this is not ##linux
23:06 < superjoe> and even ##linux would give you trouble for wanting your hand held
23:07 < fruitFly> CoverSlide: superjoe  no such file ;)
23:08 < CoverSlide> that's no good
23:10 < fruitFly> CoverSlide: right, meaning the install didn't work and I have to change something, I just don't know what
23:10 < samholmes> Anyone here use stylus?
23:13 < samholmes> Would the final selector evaluate to `.parent.class .child` or `.parent .parent.class .child`? https://gist.github.com/samholmes/5034191
23:18 < Nikentic> Why can't I access the my variable from my jade templates? I send 3 variables from express, I can see 2 of them but not the third
23:18 < Nikentic> and I know it exists and is assigned a value
23:19 < Nikentic> using res.json and {{var}} in jade
23:19 < firebalrog> Jade doesn't use mustache
23:20 < Nikentic> it works on the 2 other variables but not the third
23:20 < drudge> #{var}
23:20 < firebalrog> It uses #[variable] I think or <%= variable %>
23:20 < samholmes> I found out that it appears to be the latter.
23:20 < Nikentic> so why does it work on the first 2?
23:21 < firebalrog> Do you have hbs installed as well
23:21 < azylman> Nikentic: also some names in jade are reserved and you can't use them... I don't remember off the top of my head, but it's bitten me before
23:21 < firebalrog> Hbs = handlebars or mustache
23:21 < firebalrog> Check app.js
23:22 < Nikentic> no
23:22 < samholmes> https://gist.github.com/samholmes/5034191
23:22 < firebalrog> Hum don't know then
23:22 < samholmes> Needs some stylus help^
23:24 < firebalrog> Why not use different class
23:24 < samholmes> firebalrog: What do you mean?
23:25 < firebalrog> Is it for CSS or for something else that you want that selector
23:25 < samholmes> firebalrog: this is stylus, which will be converted into css
23:26 < samholmes> firebalrog: What exactly are you asking? :S
23:26 < firebalrog> Then assign a new class for the sub elements and define style for that class as needed
23:29 < samholmes> firebalrog: But that would separate the code at quite a distance if you imagine a lot of properties for the .child class and child selectors indented for .child.
23:31 < firebalrog> I guess I don't understand the problem
23:31 < firebalrog> .child color:blue
23:32 < firebalrog> .parent color:red
23:32 < firebalrog> .instructor color:purple
23:33 < firebalrog> #samholmes color:green
23:34 < firebalrog> That about covers it.
23:38 < niix> Anyone here familiar with passport's session messages?
23:38 < holzp> nix, I've seen them
23:39 < niix> holzp: Well, I'm having an issue between messages.  If I have a login validation message, it will also display on the registration page
23:40 < niix> so I need to find a way to separate them
23:40 < samholmes> firebalrog: Do you know stylus?
23:41 < CoverSlide> i nose stylus
23:41 < holzp> niix, dont show it on the registration page?
23:42 < niix> holzp: for example, the person goes to login and gets a wrong password error
23:42 < niix> then goes to registration
23:42 < niix> the if messages in the template is catching that error also
23:43 < holzp> sry, I havn't any exp. with that specific problem
23:43 < holzp> but I was not doing local logins  with passport
23:44 < niix> ah I see
23:44 < samholmes> CoverSlide: https://gist.github.com/samholmes/5034191 Check out my thingy
23:45  * CoverSlide slaps samholmes 
23:45 < samholmes> CoverSlide: The issue I'm having is that & evaluates to the entire selector cascading up to the least indented selector.
23:46 < samholmes> If only I had &[0] syntax
23:47 < CoverSlide> ugh tabs
23:48 < samholmes> CoverSlide: let's not start that..
23:51 < Nikentic> I really need help with this shit, I'm almost getting mad :P
23:52 < Nikentic> I can  print the variable, I can send 2 variables with res.json, but the thrd one just can't be found by my viewer
--- Log closed Tue Feb 26 00:00:38 2013
